<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="ember">
    <body>
      <group id="ember">
        <trans-unit id="0b7038b1b8b235127314398d870b6ac8758ec9ad" translate="yes" xml:space="preserve">
          <source>Giving your class a name gives it a name in the debugger, making your life easier later on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2a64ed722c416e5cf8425e0085bf4c7820af799" translate="yes" xml:space="preserve">
          <source>Giving your class a name makes it easier to search for in general, and is better for code editors and documentation tools.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1878e1b88c01c2fec58c06f4aaf91b570f5e3033" translate="yes" xml:space="preserve">
          <source>Glimmer Components</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c4ef84fcaf86a96919235d3336c07ccf7ae675e" translate="yes" xml:space="preserve">
          <source>Glimmer components have some huge benefits:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="063cfa0c7eed3b63497f8beda101ec25a23addf3" translate="yes" xml:space="preserve">
          <source>Glimmer components, imported from &lt;code&gt;@glimmer/component&lt;/code&gt;, which are the default component's for Ember Octane (3.15) and more recent editions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d23e7c6bc9c693ac3b74c7836e37807dcbe2f69d" translate="yes" xml:space="preserve">
          <source>Global acceptance test helpers like &lt;code&gt;find()&lt;/code&gt; or &lt;code&gt;click()&lt;/code&gt;. These can be replaced with the &lt;code&gt;@ember/test-helpers&lt;/code&gt;, which is the default for test helpers now.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d92f1eef48b7f6e018af6fa6c86f0f289cf85ab1" translate="yes" xml:space="preserve">
          <source>Global helper method to create a new binding. Just pass the root object along with a &lt;code&gt;to&lt;/code&gt; and &lt;code&gt;from&lt;/code&gt; path to create and connect the binding.</source>
          <target state="translated">M&amp;eacute;todo de ayuda global para crear un nuevo enlace. S&amp;oacute;lo tiene que pasar el objeto ra&amp;iacute;z junto con una &lt;code&gt;to&lt;/code&gt; , y &lt;code&gt;from&lt;/code&gt; camino para crear y conectar la uni&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="9475c240051332f46be27d81c5999df956eee70c" translate="yes" xml:space="preserve">
          <source>Globals provided by JavaScript assets</source>
          <target state="translated">Globales proporcionados por los activos de JavaScript</target>
        </trans-unit>
        <trans-unit id="a0e3e6de22c62882fc935f5fd0ca300105fa5b62" translate="yes" xml:space="preserve">
          <source>Go back to your browser and you should see that the UI looks identical. The only difference is that now we've componentized our list into a version that's more reusable and more maintainable.</source>
          <target state="translated">Vuelve a tu navegador y deberías ver que la interfaz de usuario se ve idéntica.La única diferencia es que ahora hemos compuesto nuestra lista en una versión que es más reutilizable y más mantenible.</target>
        </trans-unit>
        <trans-unit id="f16ced98283c68cb88a0172784f9bb24fc274245" translate="yes" xml:space="preserve">
          <source>Good Ember apps take a different approach. Ember Data gives you a single &lt;strong&gt;store&lt;/strong&gt; that is the central repository of models in your application. Components and routes can ask the store for models, and the store is responsible for knowing how to fetch them.</source>
          <target state="translated">Las buenas aplicaciones de Ember adoptan un enfoque diferente. Ember Data le ofrece una &amp;uacute;nica &lt;strong&gt;tienda&lt;/strong&gt; que es el repositorio central de modelos en su aplicaci&amp;oacute;n. Los componentes y las rutas pueden solicitar modelos a la tienda, y la tienda es responsable de saber c&amp;oacute;mo buscarlos.</target>
        </trans-unit>
        <trans-unit id="5321516ec86343c75ae1ca44f62709c0941421ba" translate="yes" xml:space="preserve">
          <source>Good Ember apps take a different approach. Ember Data gives you a single &lt;strong&gt;store&lt;/strong&gt; that is the central repository of models in your application. Routes and their corresponding controllers can ask the store for models, and the store is responsible for knowing how to fetch them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e30d6aac813417d581bd798bb4422107881ac34" translate="yes" xml:space="preserve">
          <source>Good luck!</source>
          <target state="translated">¡Buena suerte!</target>
        </trans-unit>
        <trans-unit id="f6bf9c3593354b28043e84f76fcab48400ba8060" translate="yes" xml:space="preserve">
          <source>Google Chrome</source>
          <target state="translated">Google Chrome</target>
        </trans-unit>
        <trans-unit id="e742dfcf2f4ce5f328b8cb4f2912e33ce6046b2e" translate="yes" xml:space="preserve">
          <source>Google Maps requires an API key for deployment. You can &lt;a href=&quot;https://developers.google.com/maps/documentation/javascript/get-api-key&quot;&gt;Generate an API key&lt;/a&gt; from Google. Add your new API key to the application by stopping the server and restarting it with the environment variable, &lt;code&gt;GOOGLE_MAPS_API_KEY&lt;/code&gt;.</source>
          <target state="translated">Google Maps requiere una clave API para su implementaci&amp;oacute;n. Puede &lt;a href=&quot;https://developers.google.com/maps/documentation/javascript/get-api-key&quot;&gt;generar una clave API&lt;/a&gt; de Google. Agregue su nueva clave API a la aplicaci&amp;oacute;n deteniendo el servidor y reinici&amp;aacute;ndolo con la variable de entorno, &lt;code&gt;GOOGLE_MAPS_API_KEY&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1fd25f4b6fdcd6e03dc556534e357e8e671589f8" translate="yes" xml:space="preserve">
          <source>Guide: Addons and Dependencies</source>
          <target state="translated">Guía:Adiciones y dependencias</target>
        </trans-unit>
        <trans-unit id="36f75403a8d2f86bf1a47d458f6f3817c59f2864" translate="yes" xml:space="preserve">
          <source>Guide: Application Concerns</source>
          <target state="translated">Guía:Preocupaciones de la aplicación</target>
        </trans-unit>
        <trans-unit id="e0feedc00015452b1f83e2f3873bd2b3a5af991a" translate="yes" xml:space="preserve">
          <source>Guide: Components</source>
          <target state="translated">Guía:Componentes</target>
        </trans-unit>
        <trans-unit id="e96ef24505a7db97162ac7b561593565080a3626" translate="yes" xml:space="preserve">
          <source>Guide: Configuring Ember.js</source>
          <target state="translated">Guía:Configurando Ember.js</target>
        </trans-unit>
        <trans-unit id="e6f62ffc557f46990ee7fcd9b7e51f2a23ee27a8" translate="yes" xml:space="preserve">
          <source>Guide: Controllers</source>
          <target state="translated">Guía:Controladores</target>
        </trans-unit>
        <trans-unit id="5ddef1ff843bc54027e2243e9513e6e816fb3321" translate="yes" xml:space="preserve">
          <source>Guide: Ember Inspector</source>
          <target state="translated">Guía:Inspector Ember</target>
        </trans-unit>
        <trans-unit id="da421341aba116761a4e1a0403a540126e7cb1e1" translate="yes" xml:space="preserve">
          <source>Guide: Getting Started</source>
          <target state="translated">Guía:Para empezar...</target>
        </trans-unit>
        <trans-unit id="94bfb948c23fb0630e099092d078b3655e25dded" translate="yes" xml:space="preserve">
          <source>Guide: Glossary</source>
          <target state="translated">Guía:Glosario</target>
        </trans-unit>
        <trans-unit id="4caef054558dea4828946f280fd702f043ba94e6" translate="yes" xml:space="preserve">
          <source>Guide: Models</source>
          <target state="translated">Guía:Modelos</target>
        </trans-unit>
        <trans-unit id="0e28eed94d41629db6069db8363174c2239ae1d7" translate="yes" xml:space="preserve">
          <source>Guide: Routing</source>
          <target state="translated">Guía:Rutas</target>
        </trans-unit>
        <trans-unit id="58349b97443d511f52d2bca7dd9698096bb28e42" translate="yes" xml:space="preserve">
          <source>Guide: Templates</source>
          <target state="translated">Guía:Plantillas</target>
        </trans-unit>
        <trans-unit id="368e90216820cf9a93720780467aab950c2190ca" translate="yes" xml:space="preserve">
          <source>Guide: Testing</source>
          <target state="translated">Guía:Prueba</target>
        </trans-unit>
        <trans-unit id="40d278bbd5928261f752ed2d1221bf15d4d0d64a" translate="yes" xml:space="preserve">
          <source>Guide: The Object Model</source>
          <target state="translated">Guía:El Modelo de Objeto</target>
        </trans-unit>
        <trans-unit id="0e2c2ebdd60572423288c669f8e6a4bab450c3df" translate="yes" xml:space="preserve">
          <source>Guide: Tutorial</source>
          <target state="translated">Guía:Tutorial</target>
        </trans-unit>
        <trans-unit id="9f738ce8457f291b18ee47e665e96baa84f38fcd" translate="yes" xml:space="preserve">
          <source>HTML</source>
          <target state="translated">HTML</target>
        </trans-unit>
        <trans-unit id="1b3a02ba5cc11b1ef4f57a4806126987b263c34a" translate="yes" xml:space="preserve">
          <source>HTML &lt;code&gt;class&lt;/code&gt; Attribute</source>
          <target state="translated">Atributo de &lt;code&gt;class&lt;/code&gt; HTML</target>
        </trans-unit>
        <trans-unit id="c83fb96d107f191cb169da811d2b409263026eb9" translate="yes" xml:space="preserve">
          <source>HTML Attributes</source>
          <target state="translated">Atributos del HTML</target>
        </trans-unit>
        <trans-unit id="ffcf74cf49c99fab8acf3c58dd434addf353ee43" translate="yes" xml:space="preserve">
          <source>HTML Modifiers and Actions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ad7e678705b81df6846d0e3a88587ec82599320" translate="yes" xml:space="preserve">
          <source>HTML Tag</source>
          <target state="translated">Etiqueta HTML</target>
        </trans-unit>
        <trans-unit id="d65165f830da27e9b3de4e717341f193c2d4f00e" translate="yes" xml:space="preserve">
          <source>HTML attributes passed with angle bracket invocations will take precedence over those specified in &lt;code&gt;attributeBindings&lt;/code&gt;. Therefore, if this component was invoked like so:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bfeb738ddf7728de3df17e425a9bee98a93de35" translate="yes" xml:space="preserve">
          <source>HTML comments</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7445b81a7a0fb74e83a81664fe6a469c3b93aff4" translate="yes" xml:space="preserve">
          <source>HTML string</source>
          <target state="translated">Cadena HTML</target>
        </trans-unit>
        <trans-unit id="e956ef129c977940c566953aec6bb729dc3305f0" translate="yes" xml:space="preserve">
          <source>HTML5 drag and drop events:</source>
          <target state="translated">Eventos de arrastrar y soltar HTML5:</target>
        </trans-unit>
        <trans-unit id="0b878b29c2ffa01cb115881261f1f471b6419fa0" translate="yes" xml:space="preserve">
          <source>HTMLBars</source>
          <target state="translated">HTMLBars</target>
        </trans-unit>
        <trans-unit id="9e7e8330c132a4390643d48e5b3602a028852f31" translate="yes" xml:space="preserve">
          <source>HTTP Verb</source>
          <target state="translated">Conexión HTTP</target>
        </trans-unit>
        <trans-unit id="337ba610aa0d207b04a3d0c4fbe59b410042c4cf" translate="yes" xml:space="preserve">
          <source>HTTP method</source>
          <target state="translated">Método HTTP</target>
        </trans-unit>
        <trans-unit id="788e5d8b02313cc4b57601465d18921374311fda" translate="yes" xml:space="preserve">
          <source>Handlebars Basics</source>
          <target state="translated">Conceptos básicos del manillar</target>
        </trans-unit>
        <trans-unit id="bb473803f02ab69ee9053ae70c5dcbb1448a770c" translate="yes" xml:space="preserve">
          <source>Handlebars and Ember come with a few helpers that can make developing your templates a bit easier. These helpers make it simple to output variables into your browser's console, or activate the debugger from your templates.</source>
          <target state="translated">Handlebars y Ember vienen con algunos ayudantes que pueden hacer que el desarrollo de sus plantillas sea un poco más fácil.Estos ayudantes facilitan la salida de variables a la consola de tu navegador o la activación del depurador de tus plantillas.</target>
        </trans-unit>
        <trans-unit id="f7153b5006d4c97a18ab1d0caa6bfd914338849f" translate="yes" xml:space="preserve">
          <source>Handlebars key/value pairs of options, you can override any property of Ember.LinkComponent</source>
          <target state="translated">Maneja pares de opciones llave/valor,puedes anular cualquier propiedad de Ember.LinkComponent</target>
        </trans-unit>
        <trans-unit id="51381d9d7d2e1d4b1028d495dd3200304f3c0250" translate="yes" xml:space="preserve">
          <source>Handlebars templates will automatically be updated to reflect a resolved promise. We can display a list of comments in a blogPost like so:</source>
          <target state="translated">Las plantillas del manubrio se actualizarán automáticamente para reflejar una promesa resuelta.Podemos mostrar una lista de comentarios en un blogPost como este:</target>
        </trans-unit>
        <trans-unit id="de07df966c34bdd8ca33d1de21c8a776d6dbcd5a" translate="yes" xml:space="preserve">
          <source>Handlebars.SafeString</source>
          <target state="translated">Handlebars.SafeString</target>
        </trans-unit>
        <trans-unit id="6fd0acd61cec737cb2c75447423e9a7f24a6781b" translate="yes" xml:space="preserve">
          <source>Handles notifying any listeners of an impending URL change.</source>
          <target state="translated">Maneja la notificación a los oyentes de un inminente cambio de URL.</target>
        </trans-unit>
        <trans-unit id="ed55e0e23b34deed5eb2b523c7da39ea70b0f4e0" translate="yes" xml:space="preserve">
          <source>Handles updating the paths and notifying any listeners of the URL change.</source>
          <target state="translated">Maneja la actualización de las rutas y la notificación a los oyentes del cambio de URL.</target>
        </trans-unit>
        <trans-unit id="e126f0a342fbcd3b3afcdffb356987d85bb9f2d3" translate="yes" xml:space="preserve">
          <source>Handling &lt;code&gt;href&lt;/code&gt;</source>
          <target state="translated">Manejo de &lt;code&gt;href&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="35428fcfaeb2541bb767a71a58c264899e7d2d9a" translate="yes" xml:space="preserve">
          <source>Handling Action Completion</source>
          <target state="translated">Manejo de la finalización de la acción</target>
        </trans-unit>
        <trans-unit id="9b845994f53730addb1c09b9f06592b05f193ea1" translate="yes" xml:space="preserve">
          <source>Handling Browser Events</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9fe0bdbe4011b8624ccd6fa38bb3b6eff381dd5" translate="yes" xml:space="preserve">
          <source>Handling Deprecations</source>
          <target state="translated">Manejar las deprecaciones</target>
        </trans-unit>
        <trans-unit id="d425f7e27fe0f057871c46f4c72c4a3bd2b0f136" translate="yes" xml:space="preserve">
          <source>Handling Events</source>
          <target state="translated">Manejar los eventos</target>
        </trans-unit>
        <trans-unit id="e918401587af3e65eda8234d3e59f421428130d3" translate="yes" xml:space="preserve">
          <source>Handling Metadata</source>
          <target state="translated">Manejo de metadatos</target>
        </trans-unit>
        <trans-unit id="db937a958b87280f3d6fc18c715cb6254451f8d1" translate="yes" xml:space="preserve">
          <source>Handling Results Coming Back at Different Times</source>
          <target state="translated">Manejar los resultados que regresan en diferentes momentos</target>
        </trans-unit>
        <trans-unit id="4ffd58d57d6bbb28a92f1c026aa165182c6fb42b" translate="yes" xml:space="preserve">
          <source>Handling Validation Errors</source>
          <target state="translated">Manejo de errores de validación</target>
        </trans-unit>
        <trans-unit id="aced29647a5cf1540ee7e3807350fee6fd052495" translate="yes" xml:space="preserve">
          <source>Handling current route</source>
          <target state="translated">Manejar la ruta actual</target>
        </trans-unit>
        <trans-unit id="9e35481745a45cde55c44963a7e362bab3f1b408" translate="yes" xml:space="preserve">
          <source>HasManyReference</source>
          <target state="translated">HasManyReference</target>
        </trans-unit>
        <trans-unit id="873507a022b58de26a88deae87268cbd8d6af5b1" translate="yes" xml:space="preserve">
          <source>Hash</source>
          <target state="translated">Hash</target>
        </trans-unit>
        <trans-unit id="807079595ea5a799de6277c046782afa4e0e5102" translate="yes" xml:space="preserve">
          <source>HashLocation</source>
          <target state="translated">HashLocation</target>
        </trans-unit>
        <trans-unit id="add4322e33633cc4c3ee7eb1c8f2f41576ddbb91" translate="yes" xml:space="preserve">
          <source>Hashes are useful for configuring the behavior of a helper:</source>
          <target state="translated">Los hachís son útiles para configurar el comportamiento de un ayudante:</target>
        </trans-unit>
        <trans-unit id="a899d251b5416098f876e50cf427a0d4a1837a0b" translate="yes" xml:space="preserve">
          <source>Having a parent route means that any content on our parent route template will be present as we browse down through our child routes, allowing us to add things like common instructions, navigation, footers or sidebars.</source>
          <target state="translated">Tener una ruta padre significa que cualquier contenido de nuestra plantilla de ruta padre estará presente mientras navegamos por las rutas de nuestros hijos,permitiéndonos añadir cosas como instrucciones comunes,navegación,pies de página o barras laterales.</target>
        </trans-unit>
        <trans-unit id="0c42302b3ce38d5dac262a7158e03cdf2072de98" translate="yes" xml:space="preserve">
          <source>Headers customization</source>
          <target state="translated">Personalización de los encabezados</target>
        </trans-unit>
        <trans-unit id="1e7eebdb08c9dbf27c7668e2badd51e667707d3c" translate="yes" xml:space="preserve">
          <source>Helper</source>
          <target state="translated">Helper</target>
        </trans-unit>
        <trans-unit id="71bfa60b06c751b549dfa608bed89dce9177c4af" translate="yes" xml:space="preserve">
          <source>Helper Arguments</source>
          <target state="translated">Argumentos del ayudante</target>
        </trans-unit>
        <trans-unit id="334c16fc9ac63595f080f7bbcdf324a43ffd5267" translate="yes" xml:space="preserve">
          <source>Helper Functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="681268974b5ee9db6f5333c725d86800c64141d2" translate="yes" xml:space="preserve">
          <source>Helper Names</source>
          <target state="translated">Nombres de los ayudantes</target>
        </trans-unit>
        <trans-unit id="7d6773131b0c94c1c79e399530564df6071d0e58" translate="yes" xml:space="preserve">
          <source>Helper functions are JavaScript functions that you can call from your template.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="689db909d0464dc58ec10ab0be6fb25f318bad73" translate="yes" xml:space="preserve">
          <source>Helper managers must fulfill the following interface (This example uses &lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/interfaces.html&quot;&gt;TypeScript interfaces&lt;/a&gt; for precision, you do not need to write helper managers using TypeScript):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46e6ec9b9d847d9ac55a685deddc479fa9005991" translate="yes" xml:space="preserve">
          <source>Helper method returns the first object from a collection. This is usually used by bindings and other parts of the framework to extract a single object if the enumerable contains only one item.</source>
          <target state="translated">El método del ayudante devuelve el primer objeto de una colección.Se suele utilizar por las encuadernaciones y otras partes del marco para extraer un solo objeto si el enumerable contiene sólo un elemento.</target>
        </trans-unit>
        <trans-unit id="cb868523634137d3ac0cbf44265217f711b041b1" translate="yes" xml:space="preserve">
          <source>Helper method returns the last object from a collection. If your enumerable contains only one object, this method should always return that object. If your enumerable is empty, this method should return &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">El m&amp;eacute;todo auxiliar devuelve el &amp;uacute;ltimo objeto de una colecci&amp;oacute;n. Si su enumerable contiene solo un objeto, este m&amp;eacute;todo siempre debe devolver ese objeto. Si su enumerable est&amp;aacute; vac&amp;iacute;o, este m&amp;eacute;todo deber&amp;iacute;a devolver &lt;code&gt;undefined&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3c9b3433e6f225e4ae00ef2041d44d91bfbf7113" translate="yes" xml:space="preserve">
          <source>Helpers</source>
          <target state="translated">Helpers</target>
        </trans-unit>
        <trans-unit id="78e00ba58068b9405dc568b23c42190de2bc9e3b" translate="yes" xml:space="preserve">
          <source>Helpers allow you to add additional functionality to your templates beyond what is included out-of-the-box in Ember. Helpers are most useful for transforming raw values from models and components into a format more appropriate for your users.</source>
          <target state="translated">Los ayudantes le permiten añadir funcionalidad adicional a sus plantillas más allá de lo que se incluye en Ember.Los ayudantes son muy útiles para transformar los valores brutos de los modelos y componentes en un formato más apropiado para sus usuarios.</target>
        </trans-unit>
        <trans-unit id="2a801d726cc532008f284d2cd1f598ed7311f982" translate="yes" xml:space="preserve">
          <source>Helpers allow you to pass named arguments as a JavaScript object that contains the name of the argument along with an associated value. The order in which named arguments are supplied does not affect functionality.</source>
          <target state="translated">Los ayudantes le permiten pasar argumentos con nombre como un objeto de JavaScript que contiene el nombre del argumento junto con un valor asociado.El orden en que se suministran los argumentos con nombre no afecta a la funcionalidad.</target>
        </trans-unit>
        <trans-unit id="39f9e2aad73a812a6000b56670fb0385cd164262" translate="yes" xml:space="preserve">
          <source>Helpers are best tested with integration tests, but can also be tested with unit tests. Integration tests will provide better coverage for helpers, as it more closely simulates the lifecycle of a helper than in isolation.</source>
          <target state="translated">Los ayudantes se prueban mejor con las pruebas de integración,pero también se pueden probar con las pruebas de unidad.Las pruebas de integración proporcionarán una mejor cobertura para los ayudantes,ya que simulan más de cerca el ciclo de vida de un ayudante que en forma aislada.</target>
        </trans-unit>
        <trans-unit id="c49ee45273a9049777c93311626fe7664fee1b2f" translate="yes" xml:space="preserve">
          <source>Helpers are best tested with rendering tests, but can also be tested with unit tests. Rendering tests will provide better coverage for helpers, as it more closely simulates the lifecycle of a helper than in isolation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50b680112615d456c9c07a20f0e9669ca5d58ef5" translate="yes" xml:space="preserve">
          <source>Helpers are functions, which can be easily tested through &lt;code&gt;module&lt;/code&gt; alone.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff44fce5d3784f31c67308e313afd11d07fd3fea" translate="yes" xml:space="preserve">
          <source>Helpers can also be defined using class syntax. For instance, we could define the substring helper using classes instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2546987b068c41d7af6e28e45ccd184017ca756d" translate="yes" xml:space="preserve">
          <source>Helpers defined using a class must provide a &lt;code&gt;compute&lt;/code&gt; function. For example:</source>
          <target state="translated">Los ayudantes definidos mediante una clase deben proporcionar una funci&amp;oacute;n de &lt;code&gt;compute&lt;/code&gt; . Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="9dd57ecb503d3b97e09bb660378d70958f39e6eb" translate="yes" xml:space="preserve">
          <source>Helpers have the ability to be nested within other helper invocations and also component invocations.</source>
          <target state="translated">Los ayudantes tienen la capacidad de anidarse dentro de otras invocaciones de ayudantes y también de invocaciones de componentes.</target>
        </trans-unit>
        <trans-unit id="22d64553bfc8432fab751a4437cf2e382597f6b0" translate="yes" xml:space="preserve">
          <source>Here again, we add a new &lt;code&gt;contact&lt;/code&gt; route in &lt;code&gt;app/router.js&lt;/code&gt; and generate a route handler in &lt;code&gt;app/routes/contact.js&lt;/code&gt;.</source>
          <target state="translated">Aqu&amp;iacute; nuevamente, agregamos una nueva ruta de &lt;code&gt;contact&lt;/code&gt; o en &lt;code&gt;app/router.js&lt;/code&gt; y generamos un controlador de ruta en &lt;code&gt;app/routes/contact.js&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c80c37e1626d9dfdf25d6d961fc9b1d903b1a303" translate="yes" xml:space="preserve">
          <source>Here an entire blog post model is being passed to the component as a single component property. In turn the component is returning values using &lt;code&gt;yield&lt;/code&gt;. In this case the yielded values are pulled from the post being passed in but anything that the component has access to can be yielded, such as an internal property or something from a service.</source>
          <target state="translated">Aqu&amp;iacute; se pasa un modelo de publicaci&amp;oacute;n de blog completo al componente como una propiedad de un solo componente. A su vez, el componente devuelve valores utilizando el &lt;code&gt;yield&lt;/code&gt; . En este caso, los valores generados se extraen de la publicaci&amp;oacute;n que se est&amp;aacute; pasando, pero cualquier cosa a la que el componente tenga acceso puede entregarse, como una propiedad interna o algo de un servicio.</target>
        </trans-unit>
        <trans-unit id="46cb66a5580234e105bd84bbc6c0acae458e5b7b" translate="yes" xml:space="preserve">
          <source>Here are more examples where rendering tests are ideal:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d0b46d5ea9606c851e7f360977a10e276191c12" translate="yes" xml:space="preserve">
          <source>Here are more examples where unit tests are ideal:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e769d5ae2fb8b75a2af44bcef2c4317222ca1c0" translate="yes" xml:space="preserve">
          <source>Here are some examples of accessibility-focused addons created by many people throughout the Ember community:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="836b8bd78c9b6e82841a0036549e2a71015427aa" translate="yes" xml:space="preserve">
          <source>Here are some of the core features in Octane:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36a12c3837daeb5c29b21e9b245ed5089c46520a" translate="yes" xml:space="preserve">
          <source>Here are some other tips to get you started:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="627ff7fb321c1e0baf01939afd95a26025e101b9" translate="yes" xml:space="preserve">
          <source>Here are some top things to know if you are new to making API requests in a front end framework:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="008f036db3fb0cae3e9c11478058cd0a7d0d43be" translate="yes" xml:space="preserve">
          <source>Here are the events that we currently support along with the name of the attribute you would need to use on your field. To reiterate, you would use the attribute name like so:</source>
          <target state="translated">Aquí están los eventos que actualmente apoyamos junto con el nombre del atributo que necesitaría usar en su campo.Para reiterar,usarías el nombre del atributo así:</target>
        </trans-unit>
        <trans-unit id="d8c749c55f27bb11286f029c9d42a634838e63be" translate="yes" xml:space="preserve">
          <source>Here are the main differences between angle bracket and curly syntax:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6702b2f9fb8ccafe588f2c9571b453ded3ed4228" translate="yes" xml:space="preserve">
          <source>Here is a list of standard JavaScript array methods and their observable enumerable equivalents:</source>
          <target state="translated">Aquí hay una lista de los métodos estándar de la matriz de JavaScript y sus equivalentes enumerables observables:</target>
        </trans-unit>
        <trans-unit id="05bb273def215460ace633d7315e6d9597d254f5" translate="yes" xml:space="preserve">
          <source>Here is a simple transform that converts values between cents and US dollars.</source>
          <target state="translated">Aquí hay una simple transformación que convierte los valores entre centavos y dólares americanos.</target>
        </trans-unit>
        <trans-unit id="f7c39ffadbd1a469d166a296b81aeb5eada867cd" translate="yes" xml:space="preserve">
          <source>Here is an example &lt;code&gt;findRecord&lt;/code&gt; implementation:</source>
          <target state="translated">Aqu&amp;iacute; hay un ejemplo de implementaci&amp;oacute;n de &lt;code&gt;findRecord&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="a1a53bea5f121f389ec9dba89881d0bc84a3a5fa" translate="yes" xml:space="preserve">
          <source>Here is an example &lt;code&gt;queryRecord&lt;/code&gt; implementation:</source>
          <target state="translated">Aqu&amp;iacute; hay un ejemplo de implementaci&amp;oacute;n de &lt;code&gt;queryRecord&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="be91e0dc88a4bda0f73b7f173d35790d6c237d7d" translate="yes" xml:space="preserve">
          <source>Here is an example action handler on a component:</source>
          <target state="translated">A continuación se presenta un ejemplo de manejador de acción en un componente:</target>
        </trans-unit>
        <trans-unit id="80d420fadedcd0d67addde722215d59163c4e4f6" translate="yes" xml:space="preserve">
          <source>Here is an example of a non-async helper:</source>
          <target state="translated">Aquí hay un ejemplo de un ayudante sin sincronización:</target>
        </trans-unit>
        <trans-unit id="686f6fbbf2125c61344e0f99406ce1d0e5f15a34" translate="yes" xml:space="preserve">
          <source>Here is an example of an async helper:</source>
          <target state="translated">Aquí hay un ejemplo de un ayudante de asincronía:</target>
        </trans-unit>
        <trans-unit id="8686a53fa2e824c426efc545f221972fb2b38018" translate="yes" xml:space="preserve">
          <source>Here is an example of an error handler that will be invoked for rejected promises from the various hooks on the route, as well as any unhandled errors from child routes:</source>
          <target state="translated">He aquí un ejemplo de un manejador de errores que se invocará para las promesas rechazadas de los diversos ganchos de la ruta,así como cualquier error no manejado de las rutas de los niños:</target>
        </trans-unit>
        <trans-unit id="13beb07fe62835dc25ff3d895ade35ee7595dcff" translate="yes" xml:space="preserve">
          <source>Here is an example of how to unit test this route:</source>
          <target state="translated">Aquí hay un ejemplo de cómo probar la unidad de esta ruta:</target>
        </trans-unit>
        <trans-unit id="9024e05790c35521e679753fb38a96476643d7aa" translate="yes" xml:space="preserve">
          <source>Here is an example of test this route in an isolated test case:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4db7fda94ba3c04e3fed4d21f04d97c16e5ea7aa" translate="yes" xml:space="preserve">
          <source>Here is an example of the &lt;code&gt;findRecord&lt;/code&gt; implementation:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5879971a17632c4e9f37c545833d4a067091f958" translate="yes" xml:space="preserve">
          <source>Here is some pseudocode to describe what happens using the example above:</source>
          <target state="translated">Aquí hay un pseudocódigo para describir lo que sucede usando el ejemplo anterior:</target>
        </trans-unit>
        <trans-unit id="4ed3d154fad32f4d423b0c0d3164c195269919b1" translate="yes" xml:space="preserve">
          <source>Here is some sample code showing the difference between a concatenated property and a normal one:</source>
          <target state="translated">Aquí hay un código de muestra que muestra la diferencia entre una propiedad concatenada y una normal:</target>
        </trans-unit>
        <trans-unit id="3620fe1abe778a42dfcc17b3f36dff9bfca5419e" translate="yes" xml:space="preserve">
          <source>Here is some sample code showing the difference between a merged property and a normal one:</source>
          <target state="translated">Aquí hay un código de muestra que muestra la diferencia entre una propiedad fusionada y una normal:</target>
        </trans-unit>
        <trans-unit id="e45023c930fcd24340408ccf1517bca11439c457" translate="yes" xml:space="preserve">
          <source>Here is what the component's JavaScript looks like:</source>
          <target state="translated">Este es el aspecto del JavaScript del componente:</target>
        </trans-unit>
        <trans-unit id="933b594d8195750ac884fd8ddd015fb1b0de2b83" translate="yes" xml:space="preserve">
          <source>Here is what would be provided by the browser that the developer would otherwise need to provide:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ad3fb8e396627deaa121cc5057168aff890dc20" translate="yes" xml:space="preserve">
          <source>Here we have a controller &lt;code&gt;PostsController&lt;/code&gt; with two properties, a method that sets one of those properties, and an action named &lt;code&gt;setProps&lt;/code&gt;.</source>
          <target state="translated">Aqu&amp;iacute; tenemos un controlador &lt;code&gt;PostsController&lt;/code&gt; con dos propiedades, un m&amp;eacute;todo que establece una de esas propiedades y una acci&amp;oacute;n llamada &lt;code&gt;setProps&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9e597c0cced43ed0a6b16a465f107efbf22c3f75" translate="yes" xml:space="preserve">
          <source>Here we invoke the &lt;code&gt;rental-listing&lt;/code&gt; component by name, and assign each &lt;code&gt;rentalUnit&lt;/code&gt; as the &lt;code&gt;rental&lt;/code&gt; attribute of the component.</source>
          <target state="translated">Aqu&amp;iacute; invocamos el componente de &lt;code&gt;rental-listing&lt;/code&gt; por su nombre y asignamos cada &lt;code&gt;rentalUnit&lt;/code&gt; como el atributo de &lt;code&gt;rental&lt;/code&gt; del componente.</target>
        </trans-unit>
        <trans-unit id="9caae2e536d1046a13cf1b8d768d567a6c234d2f" translate="yes" xml:space="preserve">
          <source>Here's a brief video showcasing some of the features of the Inspector:</source>
          <target state="translated">Aquí hay un breve video que muestra algunas de las características del Inspector:</target>
        </trans-unit>
        <trans-unit id="2ef2f0eed2f1b6edb8828e11c89de4e0f5c2426a" translate="yes" xml:space="preserve">
          <source>Here's a look at what we want to build before we get started.</source>
          <target state="translated">Aquí hay un vistazo a lo que queremos construir antes de empezar.</target>
        </trans-unit>
        <trans-unit id="ebfdc0e5e4fe034cdd75ba1c747add61cac51e56" translate="yes" xml:space="preserve">
          <source>Here's an example implementation of a state with a &lt;code&gt;myEvent&lt;/code&gt; event handler:</source>
          <target state="translated">A continuaci&amp;oacute;n, se muestra una implementaci&amp;oacute;n de ejemplo de un estado con un controlador de eventos &lt;code&gt;myEvent&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="38cda9d7f3e4792a7596d3c5f4460451291e07c0" translate="yes" xml:space="preserve">
          <source>Here's an example of a deprecation-workflow file after generated from the console:</source>
          <target state="translated">Aquí hay un ejemplo de un archivo de flujo de trabajo de depreciación después de ser generado desde la consola:</target>
        </trans-unit>
        <trans-unit id="67c3ae73e6d479a2f3faadf75e44b4d5664f0b07" translate="yes" xml:space="preserve">
          <source>Here's an example of a one-to-many reflexive relationship:</source>
          <target state="translated">Aquí hay un ejemplo de una relación reflexiva de uno a muchos:</target>
        </trans-unit>
        <trans-unit id="18541d730bc8ba428e8836f2ea7fff7a47a480ac" translate="yes" xml:space="preserve">
          <source>Here's an example of a one-to-one reflexive relationship:</source>
          <target state="translated">Aquí hay un ejemplo de una relación reflexiva uno a uno:</target>
        </trans-unit>
        <trans-unit id="2fe022dd3c8c09a191db4256dd032f9e60a052aa" translate="yes" xml:space="preserve">
          <source>Here's an example of using &lt;code&gt;normalizeResponse&lt;/code&gt; manually:</source>
          <target state="translated">Aqu&amp;iacute; hay un ejemplo de &lt;code&gt;normalizeResponse&lt;/code&gt; usar normalizeResponse manualmente:</target>
        </trans-unit>
        <trans-unit id="6f7a2280e562c39fbd1f331362a3ffd102c11b9d" translate="yes" xml:space="preserve">
          <source>Here's an example test that asserts that the specified &lt;code&gt;externalAction&lt;/code&gt; function is invoked when the component's internal &lt;code&gt;submitComment&lt;/code&gt; action is triggered by making use of a test double (dummy function). &lt;code&gt;assert.expect(1)&lt;/code&gt; at the top of the test makes sure that the assertion inside the external action is called:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eaa6d2e7f30e926a749727b799f37d96e4c8f45c" translate="yes" xml:space="preserve">
          <source>Here's an example test that asserts that the specified &lt;code&gt;externalAction&lt;/code&gt; function is invoked when the component's internal &lt;code&gt;submitComment&lt;/code&gt; action is triggered by making use of a test double (dummy function):</source>
          <target state="translated">Aqu&amp;iacute; hay una prueba de ejemplo que afirma que la funci&amp;oacute;n &lt;code&gt;externalAction&lt;/code&gt; especificada se invoca cuando la acci&amp;oacute;n &lt;code&gt;submitComment&lt;/code&gt; interna del componente se activa haciendo uso de una prueba doble (funci&amp;oacute;n ficticia):</target>
        </trans-unit>
        <trans-unit id="4f3c92750905535a8ced5339645aeccc22beef47" translate="yes" xml:space="preserve">
          <source>Here's how we could do it:</source>
          <target state="translated">Así es como podríamos hacerlo:</target>
        </trans-unit>
        <trans-unit id="e9615c02fedaa57b6187cbb2b8f2144552cba8d3" translate="yes" xml:space="preserve">
          <source>Here's how you can change the data:</source>
          <target state="translated">Así es como puedes cambiar los datos:</target>
        </trans-unit>
        <trans-unit id="7b00dbf8b666cbb27fe6befc5e345eb2e873b89c" translate="yes" xml:space="preserve">
          <source>Here's one way this situation could be handled:</source>
          <target state="translated">Aquí hay una forma en que esta situación podría ser manejada:</target>
        </trans-unit>
        <trans-unit id="943d258bf4c8c0e96c24ec06ef073a0663dd5468" translate="yes" xml:space="preserve">
          <source>Here's what it looks like to pass the entire &lt;code&gt;photo&lt;/code&gt; record:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="794332affe3f2c69b3cdf8b6c3a9d8846f9963d6" translate="yes" xml:space="preserve">
          <source>Here's what our homepage will look like when we're done:</source>
          <target state="translated">Así es como se verá nuestra página web cuando terminemos:</target>
        </trans-unit>
        <trans-unit id="f27d989f8488534b53f59313b389527af62def71" translate="yes" xml:space="preserve">
          <source>Here's what you see when you click on an object:</source>
          <target state="translated">Esto es lo que ves cuando haces clic en un objeto:</target>
        </trans-unit>
        <trans-unit id="8174a66dd06a7a63d269b775afb5d9235bb327c3" translate="yes" xml:space="preserve">
          <source>Here, &lt;code&gt;indexOfSelectedTodo&lt;/code&gt; depends on &lt;code&gt;todos.[]&lt;/code&gt;, so it will update if we add an item to &lt;code&gt;todos&lt;/code&gt;, but won't update if the value of &lt;code&gt;isDone&lt;/code&gt; on a &lt;code&gt;todo&lt;/code&gt; changes.</source>
          <target state="translated">Aqu&amp;iacute;, &lt;code&gt;indexOfSelectedTodo&lt;/code&gt; depende de &lt;code&gt;todos.[]&lt;/code&gt; , Por lo que se actualizar&amp;aacute; si agregamos un elemento a &lt;code&gt;todos&lt;/code&gt; , pero no se actualizar&amp;aacute; si &lt;code&gt;isDone&lt;/code&gt; el valor de isDone en un &lt;code&gt;todo&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b49deac1d23b55006a636313fe25b23b637aa3f8" translate="yes" xml:space="preserve">
          <source>Here, &lt;code&gt;{{name}}&lt;/code&gt; is a property provided by the template's context.</source>
          <target state="translated">Aqu&amp;iacute;, &lt;code&gt;{{name}}&lt;/code&gt; es una propiedad proporcionada por el contexto de la plantilla.</target>
        </trans-unit>
        <trans-unit id="c4b1aa8e8d41cd284eef6230e5383085a6b7fa05" translate="yes" xml:space="preserve">
          <source>Here, in this list, the &quot;actions&quot; queue has a higher priority than the &quot;render&quot; or &quot;destroy&quot; queue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bedb4caecf195c602e0f6e9cd5457c7eb1304469" translate="yes" xml:space="preserve">
          <source>Here, the &lt;code&gt;photos.photo.comment&lt;/code&gt; route have two dynamic segments: &lt;code&gt;:photo_id&lt;/code&gt; and &lt;code&gt;:comment_id&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8964d266349afede44d73cd11b38a64be8aba59" translate="yes" xml:space="preserve">
          <source>Here, the &lt;code&gt;posts&lt;/code&gt; route will render the &lt;code&gt;posts.hbs&lt;/code&gt; template, and the &lt;code&gt;posts.new&lt;/code&gt; route will render &lt;code&gt;posts/new.hbs&lt;/code&gt;.</source>
          <target state="translated">Aqu&amp;iacute;, la ruta de las &lt;code&gt;posts&lt;/code&gt; representar&amp;aacute; la plantilla &lt;code&gt;posts.hbs&lt;/code&gt; y la ruta &lt;code&gt;posts.new&lt;/code&gt; representar&amp;aacute; las &lt;code&gt;posts/new.hbs&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="806448e95a581d9c19ab7981874c395b2aaff922" translate="yes" xml:space="preserve">
          <source>Here, the dependent key &lt;code&gt;todos.@each.isDone&lt;/code&gt; instructs Ember.js to update bindings and fire observers when any of the following events occurs:</source>
          <target state="translated">Aqu&amp;iacute;, la clave dependiente &lt;code&gt;todos.@each.isDone&lt;/code&gt; indica a Ember.js que actualice los enlaces y active los observadores cuando ocurra cualquiera de los siguientes eventos:</target>
        </trans-unit>
        <trans-unit id="8091c2e1cd43e72ba0dde7998f64b7e3ffca89d3" translate="yes" xml:space="preserve">
          <source>Here, we are passing an array of model objects (the photo, then the comment), which is exactly what is needed to populate all the dynamic segments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="991eebba4ed5397acefdc75a7fa23b48531dffe2" translate="yes" xml:space="preserve">
          <source>Here, we created a basic component class and added a method that accepts a person as an argument and brings up an alert dialog with their name. The &lt;code&gt;@action&lt;/code&gt;&lt;em&gt;decorator&lt;/em&gt; indicates we want to use this method as an &lt;em&gt;action&lt;/em&gt; in our template, in response to user interaction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ada909ad48df856a56133217fc9f26b5bf45283e" translate="yes" xml:space="preserve">
          <source>Here, we use the &lt;code&gt;each&lt;/code&gt; helper to loop over each item in the array we provided from the &lt;code&gt;model()&lt;/code&gt; hook and print it inside an &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; element.</source>
          <target state="translated">Aqu&amp;iacute;, usamos &lt;code&gt;each&lt;/code&gt; ayudante para recorrer cada elemento de la matriz que proporcionamos desde el gancho &lt;code&gt;model()&lt;/code&gt; e imprimirlo dentro de un elemento &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8b7d4a673c342fbd05798bd03c48f7f7519c155b" translate="yes" xml:space="preserve">
          <source>Here, we use the &lt;code&gt;each&lt;/code&gt;&lt;em&gt;helper&lt;/em&gt; to loop over each item in the array we provided from the &lt;code&gt;model()&lt;/code&gt; hook. Ember will render the &lt;em&gt;block&lt;/em&gt; contained inside the &lt;code&gt;{{#each}}...{{/each}}&lt;/code&gt; helper once for each item (each scientist in our case) in the array. The item (the scientist) that is being rendered currently will be made available in the &lt;code&gt;scientist&lt;/code&gt; variable, as denoted by &lt;code&gt;as |scientist|&lt;/code&gt; in the &lt;code&gt;each&lt;/code&gt; helper.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32b0828002906ba7dadba5cdba63511e832e50d8" translate="yes" xml:space="preserve">
          <source>Here, we used the &lt;code&gt;on&lt;/code&gt;&lt;em&gt;modifier&lt;/em&gt; to attach the &lt;code&gt;this.showPerson&lt;/code&gt; action to the button in the template.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8064f510c63cc0add4c6e4ef321484c5b2cd7eaf" translate="yes" xml:space="preserve">
          <source>Here, you need to pass a person object, which could be a complex class. The &lt;code&gt;addJob&lt;/code&gt; method in &lt;code&gt;Person&lt;/code&gt; could be complex as well, perhaps requiring another class. Instead, create a simple object and pass it instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d89969f1434459d674a60b551b74c2594a3242b7" translate="yes" xml:space="preserve">
          <source>Hiding and Showing an Image</source>
          <target state="translated">Esconder y mostrar una imagen</target>
        </trans-unit>
        <trans-unit id="f45f34dc307db2bdccec0e73ce3a002073c87c35" translate="yes" xml:space="preserve">
          <source>Highlighting Templates</source>
          <target state="translated">Plantillas destacadas</target>
        </trans-unit>
        <trans-unit id="2890ed8a01ab8a5f7eaabed4e6f1f28297e928b9" translate="yes" xml:space="preserve">
          <source>HistoryLocation</source>
          <target state="translated">HistoryLocation</target>
        </trans-unit>
        <trans-unit id="6add73e75a0e92e877ef963ef7d0a1799ba74e3d" translate="yes" xml:space="preserve">
          <source>HistoryLocation implements the location API using the browser's history.pushState API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60d94912208f7c9156f132fcb4e8058655d1449a" translate="yes" xml:space="preserve">
          <source>Holds validation errors for a given record, organized by attribute names.</source>
          <target state="translated">Contiene los errores de validación de un registro determinado,organizados por los nombres de los atributos.</target>
        </trans-unit>
        <trans-unit id="6f1f6d929f0c543c40d9dc35ab82269d6a509c75" translate="yes" xml:space="preserve">
          <source>Host Customization</source>
          <target state="translated">Personalización del host</target>
        </trans-unit>
        <trans-unit id="0c27d67c8e38ea6553bbf5e707038fae7466f06b" translate="yes" xml:space="preserve">
          <source>Host customization</source>
          <target state="translated">Personalización del host</target>
        </trans-unit>
        <trans-unit id="7c8e2aa276f9628e5bfd0935464f0485f6a9fb64" translate="yes" xml:space="preserve">
          <source>Hovering over the Component Tree</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="094df3847851b3b714fd95e0966758c4866dd24a" translate="yes" xml:space="preserve">
          <source>Hovering over the View Tree</source>
          <target state="translated">Colocándose sobre el árbol de la vista</target>
        </trans-unit>
        <trans-unit id="b1a23a6216420fd629b1ded01ab720e204d2d034" translate="yes" xml:space="preserve">
          <source>Hovering over the app</source>
          <target state="translated">Colocando el cursor sobre la aplicación</target>
        </trans-unit>
        <trans-unit id="bcf8dbbbcf1364bfa6370f1e5d31aa72c1cc0a73" translate="yes" xml:space="preserve">
          <source>How Resolving Works</source>
          <target state="translated">Cómo funciona la resolución</target>
        </trans-unit>
        <trans-unit id="8492d2872a65cb358f5216332b687d163a17c1f5" translate="yes" xml:space="preserve">
          <source>How To Use The Guides</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed386089f463d3df60b47fd2191dd0ca71e20027" translate="yes" xml:space="preserve">
          <source>How and where to report accessibility bugs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0003a88755810c077e587316c813346910b07f28" translate="yes" xml:space="preserve">
          <source>How do I tell Ember to start a run loop?</source>
          <target state="translated">¿Cómo le digo a Ember que empiece a correr?</target>
        </trans-unit>
        <trans-unit id="b10777937caad60c563d415c46eec180adf40348" translate="yes" xml:space="preserve">
          <source>How does the Run Loop work in Ember?</source>
          <target state="translated">¿Cómo funciona el Run Loop en Ember?</target>
        </trans-unit>
        <trans-unit id="a1a031706cbf26cf1aeb5d611b33be7700aba9a5" translate="yes" xml:space="preserve">
          <source>How fast they execute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5279944a62d1f1a4d8f7176082e4fb0246e1db2" translate="yes" xml:space="preserve">
          <source>How is run loop behaviour different when testing?</source>
          <target state="translated">¿En qué se diferencia el comportamiento del bucle de ejecución al hacer las pruebas?</target>
        </trans-unit>
        <trans-unit id="a2e93ed6f00caf06af5d7c3ab64b9dc4178cb93d" translate="yes" xml:space="preserve">
          <source>How should we connect clicking the &quot;Play&quot; and &quot;Pause&quot; to calling the audio tag's &lt;code&gt;play&lt;/code&gt; and &lt;code&gt;pause&lt;/code&gt; methods?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b35f102e2e590f481ff27d2f7bde9931feee8e6" translate="yes" xml:space="preserve">
          <source>How the reference will be looked up when it is loaded. Currently this always returns &lt;code&gt;identity&lt;/code&gt; to signify that a record will be loaded by its &lt;code&gt;type&lt;/code&gt; and &lt;code&gt;id&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a9e67d1769ba9adb0a83151913ed216fae028b3" translate="yes" xml:space="preserve">
          <source>How the reference will be looked up when it is loaded: Currently this always return &lt;code&gt;identity&lt;/code&gt; to signifying that a record will be loaded by the &lt;code&gt;type&lt;/code&gt; and &lt;code&gt;id&lt;/code&gt;.</source>
          <target state="translated">C&amp;oacute;mo se buscar&amp;aacute; la referencia cuando se cargue: Actualmente, esto siempre devuelve la &lt;code&gt;identity&lt;/code&gt; para significar que un registro se cargar&amp;aacute; por &lt;code&gt;type&lt;/code&gt; e &lt;code&gt;id&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e14b53493347df7644abc2b9f72cef62cb5cc2bc" translate="yes" xml:space="preserve">
          <source>How to Debug Tests</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="211fc991fbf2ca28c68aad8964e0096def53235f" translate="yes" xml:space="preserve">
          <source>How to Filter Tests</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aba7d69550a5c836b95631b39dda362399f740e6" translate="yes" xml:space="preserve">
          <source>How to Know If You Need a Property</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ce241e262a864c5e3924c90cd9cceee3f4f454a" translate="yes" xml:space="preserve">
          <source>How to Run Tests</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca575ef86a83eee06aa1334c084ffde8ee812279" translate="yes" xml:space="preserve">
          <source>How to Run Your Tests</source>
          <target state="translated">Cómo realizar sus pruebas</target>
        </trans-unit>
        <trans-unit id="087e57db480d426bed3d97b071e5efb3e2d86666" translate="yes" xml:space="preserve">
          <source>How to make API requests</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b190fd3bc15c74f8509793db108812d7d096aea" translate="yes" xml:space="preserve">
          <source>How to meet WCAG (Quick Reference)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00a43ccdf31fa5d710533b7df1086989a80bdeac" translate="yes" xml:space="preserve">
          <source>How to upgrade</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98299d20f2adf4f26f21bc7e4b72cd98804f116c" translate="yes" xml:space="preserve">
          <source>However the expression &lt;code&gt;(action &quot;sendMessage&quot; &quot;info&quot;)&lt;/code&gt; used in passing the action to the component creates a closure, i.e. an object that binds the parameter we've provided to the function specified. So now when the action is invoked, that parameter will automatically be passed as its argument, effectively calling &lt;code&gt;sendMessage(&quot;info&quot;)&lt;/code&gt;, despite the argument not appearing in the calling code.</source>
          <target state="translated">Sin embargo, la expresi&amp;oacute;n &lt;code&gt;(action &quot;sendMessage&quot; &quot;info&quot;)&lt;/code&gt; utilizada para pasar la acci&amp;oacute;n al componente crea un cierre, es decir, un objeto que vincula el par&amp;aacute;metro que hemos proporcionado a la funci&amp;oacute;n especificada. As&amp;iacute; que ahora, cuando se invoca la acci&amp;oacute;n, ese par&amp;aacute;metro se pasar&amp;aacute; autom&amp;aacute;ticamente como su argumento, llamando efectivamente a &lt;code&gt;sendMessage(&quot;info&quot;)&lt;/code&gt; , a pesar de que el argumento no aparece en el c&amp;oacute;digo de llamada.</target>
        </trans-unit>
        <trans-unit id="00410a8773cd06d5fab03cfc2845c170ac3a2a39" translate="yes" xml:space="preserve">
          <source>However the expression &lt;code&gt;{{fn this.sendMessage &quot;info&quot;}}&lt;/code&gt; used in passing the action to the component creates a closure and partially applies the given parameter to the new function. So now when the action is invoked, that parameter will automatically be passed as its argument, effectively calling &lt;code&gt;sendMessage(&quot;info&quot;)&lt;/code&gt;, despite the argument not appearing in the calling code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53f6745bbb21f53e8e247f89184925d34e15c45d" translate="yes" xml:space="preserve">
          <source>However, child classes can use the &lt;code&gt;super&lt;/code&gt; keyword to access the parent, and use its methods and accessors. Class fields are always overwritten on the instance, so the values on the parent class cannot be accessed by the child if they are redefined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63b51cbd69be6d59ffbee8304349c13356944a6f" translate="yes" xml:space="preserve">
          <source>However, if the setup requires a loading UI, it might be better to use the router for this purpose.</source>
          <target state="translated">Sin embargo,si la configuración requiere una interfaz de usuario de carga,podría ser mejor utilizar el router para este propósito.</target>
        </trans-unit>
        <trans-unit id="fbb706f0017ef6a6ee10e8c807ecc0d5e6e035aa" translate="yes" xml:space="preserve">
          <source>However, if we display dollar values to our users as &quot;100&amp;cent;&quot; instead of &quot;$1.00&quot;, they may be very confused. We can write a helper to format these values into the appropriate human-readable form.</source>
          <target state="translated">Sin embargo, si mostramos valores en d&amp;oacute;lares a nuestros usuarios como &quot;100 &amp;cent;&quot; en lugar de &quot;$ 1,00&quot;, es posible que se confundan mucho. Podemos escribir un ayudante para formatear estos valores en la forma adecuada legible por humanos.</target>
        </trans-unit>
        <trans-unit id="59d044aa856a235cd31e89c6e4b2c163b621c247" translate="yes" xml:space="preserve">
          <source>However, if we have the run loop in the above code, the browser will only rerender the template once the attributes have all been set.</source>
          <target state="translated">Sin embargo,si tenemos el bucle de ejecución en el código anterior,el navegador sólo volverá a renderizar la plantilla una vez que se hayan establecido todos los atributos.</target>
        </trans-unit>
        <trans-unit id="f7686ce93d07304398a3e888f9439ed0f71345e1" translate="yes" xml:space="preserve">
          <source>However, if you need all success parameters, setting &lt;code&gt;denodeify&lt;/code&gt;'s second parameter to &lt;code&gt;true&lt;/code&gt; causes it to return all success parameters as an array:</source>
          <target state="translated">Sin embargo, si necesita todos los par&amp;aacute;metros de &amp;eacute;xito, establecer el segundo par&amp;aacute;metro de &lt;code&gt;denodeify&lt;/code&gt; en &lt;code&gt;true&lt;/code&gt; hace que devuelva todos los par&amp;aacute;metros de &amp;eacute;xito como una matriz:</target>
        </trans-unit>
        <trans-unit id="e07f549681e463aa9651b048d0330b89c1640962" translate="yes" xml:space="preserve">
          <source>However, if you provide the entire model context, the model hook for that URL segment will &lt;em&gt;not&lt;/em&gt; be run. For this reason, many Ember developers choose to pass only ids to &lt;code&gt;&amp;lt;LinkTo&amp;gt;&lt;/code&gt; so that the behavior is consistent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86d67cac16aca783c25ab7800a8d2e3f4d5d01c3" translate="yes" xml:space="preserve">
          <source>However, note that in the above code we may have inadvertently introduced an XSS vulnerability into our application! By blindly marking the string as safe, a malicious user could get their own HTML into our app, allowing them to do things like access sensitive customer data.</source>
          <target state="translated">Sin embargo,tenga en cuenta que en el código anterior podemos haber introducido inadvertidamente una vulnerabilidad XSS en nuestra aplicación! Marcando ciegamente la cadena como segura,un usuario malicioso podría obtener su propio HTML en nuestra aplicación,permitiéndole hacer cosas como acceder a los datos sensibles de los clientes.</target>
        </trans-unit>
        <trans-unit id="b1052e8761a0f5c99ba3f609f4e3b2cc865e0da1" translate="yes" xml:space="preserve">
          <source>However, relying on state should generally be avoided in field initializers, since it can make your classes brittle and error prone, especially when refactoring:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0c1e2bb08174ae586c47814ff43d53ce4c73537" translate="yes" xml:space="preserve">
          <source>However, sometimes you may have multiple &lt;code&gt;belongsTo&lt;/code&gt;/&lt;code&gt;hasMany&lt;/code&gt; for the same type. You can specify which property on the related model is the inverse using &lt;code&gt;DS.hasMany&lt;/code&gt;'s &lt;code&gt;inverse&lt;/code&gt; option:</source>
          <target state="translated">Sin embargo, a veces es posible que tenga varias &lt;code&gt;belongsTo&lt;/code&gt; / &lt;code&gt;hasMany&lt;/code&gt; para el mismo tipo. Puede especificar qu&amp;eacute; propiedad en el modelo relacionado es la inversa utilizando la opci&amp;oacute;n &lt;code&gt;inverse&lt;/code&gt; &lt;code&gt;DS.hasMany&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="1124e1f04d345d96ab1636f5cb7a37eb6fc647bd" translate="yes" xml:space="preserve">
          <source>However, sometimes you may have multiple &lt;code&gt;belongsTo&lt;/code&gt;/&lt;code&gt;hasMany&lt;/code&gt; for the same type. You can specify which property on the related model is the inverse using &lt;code&gt;hasMany&lt;/code&gt;'s &lt;code&gt;inverse&lt;/code&gt; option:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35b4256fdaad84d9298f4a98df3d357015a24bcb" translate="yes" xml:space="preserve">
          <source>However, sometimes you may have multiple &lt;code&gt;belongsTo&lt;/code&gt;/&lt;code&gt;hasMany&lt;/code&gt;s for the same type. You can specify which property on the related model is the inverse using &lt;code&gt;DS.belongsTo&lt;/code&gt; or &lt;code&gt;DS.hasMany&lt;/code&gt;'s &lt;code&gt;inverse&lt;/code&gt; option. Relationships without an inverse can be indicated as such by including &lt;code&gt;{ inverse: null }&lt;/code&gt;.</source>
          <target state="translated">Sin embargo, a veces es posible que tenga varias &lt;code&gt;belongsTo&lt;/code&gt; / &lt;code&gt;hasMany&lt;/code&gt; para el mismo tipo. Puede especificar qu&amp;eacute; propiedad en el modelo relacionado es la inversa utilizando &lt;code&gt;DS.belongsTo&lt;/code&gt; o &lt;code&gt;DS.hasMany&lt;/code&gt; 's &lt;code&gt;inverse&lt;/code&gt; opci&amp;oacute;n. Las relaciones sin una inversa se pueden indicar como tales al incluir &lt;code&gt;{ inverse: null }&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="87458f0957587d21c995287d5a962cb93c2bd575" translate="yes" xml:space="preserve">
          <source>However, sometimes you may have multiple &lt;code&gt;belongsTo&lt;/code&gt;/&lt;code&gt;hasMany&lt;/code&gt;s for the same type. You can specify which property on the related model is the inverse using &lt;code&gt;belongsTo&lt;/code&gt; or &lt;code&gt;hasMany&lt;/code&gt;'s &lt;code&gt;inverse&lt;/code&gt; option. Relationships without an inverse can be indicated as such by including &lt;code&gt;{ inverse: null }&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cbbbf283f1c96ed2363f38b532837db992d546c" translate="yes" xml:space="preserve">
          <source>However, the &lt;code&gt;ButtonWithConfirmation&lt;/code&gt; component invoking the action doesn't know or care what type of message it's collecting. In cases like this, the parent template can provide the required parameter when the action is passed to the child. For example, if we want to use the button to send a message of type &lt;code&gt;&quot;info&quot;&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcfbeaf9c675ae38bf9e1a3d66352c14e80f4905" translate="yes" xml:space="preserve">
          <source>However, the &lt;code&gt;JSONAPISerializer&lt;/code&gt; expects attributes to be dasherized in the document payload returned by your server:</source>
          <target state="translated">Sin embargo, &lt;code&gt;JSONAPISerializer&lt;/code&gt; espera que los atributos se dividan en la carga &amp;uacute;til del documento devuelta por su servidor:</target>
        </trans-unit>
        <trans-unit id="5e9bcaadfbea05d9b00de2f97e0b15a2c27f5e66" translate="yes" xml:space="preserve">
          <source>However, the &lt;code&gt;button-with-confirmation&lt;/code&gt; component invoking the action doesn't know or care what type of message it's collecting. In cases like this, the parent template can provide the required parameter when the action is passed to the child. For example, if we want to use the button to send a message of type &lt;code&gt;&quot;info&quot;&lt;/code&gt;:</source>
          <target state="translated">Sin embargo, el componente de &lt;code&gt;button-with-confirmation&lt;/code&gt; que invoca la acci&amp;oacute;n no sabe ni le importa qu&amp;eacute; tipo de mensaje est&amp;aacute; recopilando. En casos como este, la plantilla padre puede proporcionar el par&amp;aacute;metro requerido cuando la acci&amp;oacute;n se pasa al hijo. Por ejemplo, si queremos utilizar el bot&amp;oacute;n para enviar un mensaje de tipo &lt;code&gt;&quot;info&quot;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="799fa4a315e137cfd1c054a2e00ae29e93d492cb" translate="yes" xml:space="preserve">
          <source>However, the most common methods for providing accessible names can be reviewed here.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61ef0142aa8edc1e0761b6c37f3f364c3ef18a21" translate="yes" xml:space="preserve">
          <source>However, the next time your app asks for a &lt;code&gt;person&lt;/code&gt; with ID &lt;code&gt;1&lt;/code&gt;, the store will notice that it had already retrieved and cached that information from the server. Instead of sending another request for the same information, it will give your application the same record it had provided it the first time. This feature&amp;mdash;always returning the same record object, no matter how many times you look it up&amp;mdash;is sometimes called an &lt;em&gt;identity map&lt;/em&gt;.</source>
          <target state="translated">Sin embargo, la pr&amp;oacute;xima vez que su aplicaci&amp;oacute;n solicite una &lt;code&gt;person&lt;/code&gt; a con ID &lt;code&gt;1&lt;/code&gt; , la tienda notar&amp;aacute; que ya hab&amp;iacute;a recuperado y almacenado en cach&amp;eacute; esa informaci&amp;oacute;n del servidor. En lugar de enviar otra solicitud por la misma informaci&amp;oacute;n, le dar&amp;aacute; a su solicitud el mismo registro que le hab&amp;iacute;a proporcionado la primera vez. Esta funci&amp;oacute;n, que siempre devuelve el mismo objeto de registro, sin importar cu&amp;aacute;ntas veces lo busque, a veces se denomina &lt;em&gt;mapa de identidad&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="be0c92254f1736479ff999ccf033ece6091637dd" translate="yes" xml:space="preserve">
          <source>However, there are times when data is &lt;em&gt;too&lt;/em&gt; dynamic. As noted below, proxies are often used for this type of data, but usually they're overkill. Most of the time, all we want is a POJO.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd8fbfc152d529b88c9fa868ba7c379a5c369bf8" translate="yes" xml:space="preserve">
          <source>However, there still are two cases where you &lt;em&gt;will&lt;/em&gt; need to use them:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3da33c85b26bd742ab3c8563a481093bdb4eee16" translate="yes" xml:space="preserve">
          <source>However, this option can be a little harder to apply styles to, so both should be tested before determining which approach to use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="283e157ed8802370be81b6ac4ade55626db1a6fc" translate="yes" xml:space="preserve">
          <source>However, to get the first initial of the string, we'll need to use JavaScript. To do that, we'll write a helper function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c29f1dc98f1a84326f0dd850e99d414243e7f00" translate="yes" xml:space="preserve">
          <source>However, we understand that there are cases where your Ember.js application may be embedded in an environment beyond your control. The most common scenarios are when authoring third-party JavaScript that is embedded directly in other pages, or when transitioning an application piecemeal to a more modern Ember.js architecture.</source>
          <target state="translated">Sin embargo,entendemos que hay casos en los que su aplicación Ember.js puede estar incrustada en un entorno fuera de su control.Los escenarios más comunes son cuando se crea un JavaScript de terceros que se incrusta directamente en otras páginas,o cuando se hace la transición de una aplicación poco a poco a una arquitectura más moderna de Ember.js.</target>
        </trans-unit>
        <trans-unit id="9833aae2299260e32f1aacc2fea48c9b20f36e8c" translate="yes" xml:space="preserve">
          <source>However, you &lt;em&gt;must&lt;/em&gt; use &lt;code&gt;get&lt;/code&gt; for these properties, since they are not tracked and there is no way to know in advance that they might be changed with &lt;code&gt;set&lt;/code&gt;. For instance, this will not work:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62ff92b187239abfead5331c4c2852747f077c08" translate="yes" xml:space="preserve">
          <source>However, you can easily set the relationship after the promise has fulfilled:</source>
          <target state="translated">Sin embargo,puedes establecer fácilmente la relación después de que la promesa se haya cumplido:</target>
        </trans-unit>
        <trans-unit id="af1e4399833e7a0e492957e1ba2bcad82ab689b9" translate="yes" xml:space="preserve">
          <source>However, you will often have a route whose model will change depending on user interaction. For example, imagine a photo viewer app. The &lt;code&gt;/photos&lt;/code&gt; route will render the &lt;code&gt;photos&lt;/code&gt; template with the list of photos as the model, which never changes. But when the user clicks on a particular photo, we want to display that model with the &lt;code&gt;photo&lt;/code&gt; template. If the user goes back and clicks on a different photo, we want to display the &lt;code&gt;photo&lt;/code&gt; template again, this time with a different model.</source>
          <target state="translated">Sin embargo, a menudo tendr&amp;aacute; una ruta cuyo modelo cambiar&amp;aacute; seg&amp;uacute;n la interacci&amp;oacute;n del usuario. Por ejemplo, imagina una aplicaci&amp;oacute;n de visor de fotos. La ruta &lt;code&gt;/photos&lt;/code&gt; renderizar&amp;aacute; la plantilla de &lt;code&gt;photos&lt;/code&gt; con la lista de fotos como modelo, que nunca cambia. Pero cuando el usuario hace clic en una foto en particular, queremos mostrar ese modelo con la plantilla de la &lt;code&gt;photo&lt;/code&gt; . Si el usuario vuelve y hace clic en una foto diferente, queremos mostrar la plantilla de la &lt;code&gt;photo&lt;/code&gt; nuevamente, esta vez con un modelo diferente.</target>
        </trans-unit>
        <trans-unit id="77f40273d0f2f3abf35ef9860464a1b1e0c2ad1a" translate="yes" xml:space="preserve">
          <source>Hypertext Markup Language (HTML) is a language for specifying the layout of web pages. It is a markup language that defines the structure of your content declaratively, which makes it very powerful. Ember provides a templating language that extends HTML and provides tools for making that structure dynamic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99667b90d567662155aab00455bc8316096a2c82" translate="yes" xml:space="preserve">
          <source>IDs</source>
          <target state="translated">IDs</target>
        </trans-unit>
        <trans-unit id="4daabb4de8eeb1f903c1165ced032fce112b860c" translate="yes" xml:space="preserve">
          <source>IE &amp;amp; JAWS (Windows)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9efc374c86edc2fecee6eff52b628234192f610" translate="yes" xml:space="preserve">
          <source>Ideally we'll see &quot;Type: Standalone - Estate&quot; for our first rental property. Instead, our default template helper is returning back our &lt;code&gt;rental.propertyType&lt;/code&gt; values. Let's update our helper to look if a property exists in an array of &lt;code&gt;communityPropertyTypes&lt;/code&gt;, if so, we'll return either &lt;code&gt;'Community'&lt;/code&gt; or &lt;code&gt;'Standalone'&lt;/code&gt;:</source>
          <target state="translated">Idealmente, veremos &quot;Tipo: Independiente - Finca&quot; para nuestra primera propiedad de alquiler. En cambio, nuestro asistente de plantilla predeterminado devuelve nuestros valores de &lt;code&gt;rental.propertyType&lt;/code&gt; . Actualicemos nuestro ayudante para ver si una propiedad existe en una matriz de &lt;code&gt;communityPropertyTypes&lt;/code&gt; , si es as&amp;iacute;, devolveremos &lt;code&gt;'Community'&lt;/code&gt; o &lt;code&gt;'Standalone'&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="eb647c972b9636aacfa5b652eb545da2080be4bd" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;false&lt;/code&gt;, the view will appear hidden in DOM.</source>
          <target state="translated">Si es &lt;code&gt;false&lt;/code&gt; , la vista aparecer&amp;aacute; oculta en DOM.</target>
        </trans-unit>
        <trans-unit id="c7c22c1ae71f3d538269f61581a0e81e0153f2f4" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;isAdministrator&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;, Handlebars will produce the following:</source>
          <target state="translated">Si &lt;code&gt;isAdministrator&lt;/code&gt; es &lt;code&gt;false&lt;/code&gt; , Handlebars producir&amp;aacute; lo siguiente:</target>
        </trans-unit>
        <trans-unit id="fc4a799288ed6a384c8a0b7d5926ddc862236933" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;isAdministrator&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, Handlebars will produce the following HTML element:</source>
          <target state="translated">Si &lt;code&gt;isAdministrator&lt;/code&gt; es &lt;code&gt;true&lt;/code&gt; , Handlebars producir&amp;aacute; el siguiente elemento HTML:</target>
        </trans-unit>
        <trans-unit id="386947e9a0ea30e43f8ba5e2fc284fbe653ad06d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;isUrgent&lt;/code&gt; is changed to &lt;code&gt;false&lt;/code&gt;, then the &lt;code&gt;is-urgent&lt;/code&gt; class name will be removed.</source>
          <target state="translated">Si &lt;code&gt;isUrgent&lt;/code&gt; se cambia a &lt;code&gt;false&lt;/code&gt; , se eliminar&amp;aacute; el nombre de la clase &lt;code&gt;is-urgent&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9cfe1c1705d3b6327e05f56a1bb9454d9878c0db" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;position&lt;/code&gt; is modified and saved, it will pass through the &lt;code&gt;serialize&lt;/code&gt; function in the transform and again be presented as an array in JSON.</source>
          <target state="translated">Si la &lt;code&gt;position&lt;/code&gt; se modifica y guarda, pasar&amp;aacute; por la funci&amp;oacute;n &lt;code&gt;serialize&lt;/code&gt; en la transformaci&amp;oacute;n y nuevamente se presentar&amp;aacute; como una matriz en JSON.</target>
        </trans-unit>
        <trans-unit id="a97d8b325dc113e67c18b13a4e8635b6d617618a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;reload&lt;/code&gt; is specified as an option in the request (&lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;) this method will not be called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36f899b1f5e6fae1002dd83e9fb5e527fab45924" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;true&lt;/code&gt; the adapter reported that it was unable to save local changes to the backend for any reason other than a server-side validation error.</source>
          <target state="translated">Si es &lt;code&gt;true&lt;/code&gt; el adaptador inform&amp;oacute; que no pudo guardar los cambios locales en el backend por cualquier motivo que no sea un error de validaci&amp;oacute;n del lado del servidor.</target>
        </trans-unit>
        <trans-unit id="b97709a0f3a9bb9bebb5df0b12cb642a9fc0aebb" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;true&lt;/code&gt; the store is attempting to reload the record from the adapter.</source>
          <target state="translated">Si es &lt;code&gt;true&lt;/code&gt; la tienda est&amp;aacute; intentando recargar el registro desde el adaptador.</target>
        </trans-unit>
        <trans-unit id="32a2a654ae9bfaf07b54904f9af3a5314ace399c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;{ reload: true }&lt;/code&gt; is passed or &lt;code&gt;adapter.shouldReloadAll&lt;/code&gt; evaluates to &lt;code&gt;true&lt;/code&gt;, then the returned promise resolves once the adapter returns data, regardless if there are already records in the store:</source>
          <target state="translated">Si se pasa &lt;code&gt;{ reload: true }&lt;/code&gt; o &lt;code&gt;adapter.shouldReloadAll&lt;/code&gt; se eval&amp;uacute;a como &lt;code&gt;true&lt;/code&gt; , la promesa devuelta se resuelve una vez que el adaptador devuelve datos, independientemente de si ya hay registros en la tienda:</target>
        </trans-unit>
        <trans-unit id="16b1fc24da4fa5c28bffdea5d98d452c7c21a1aa" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;{ reload: true }&lt;/code&gt; is passed or &lt;code&gt;adapter.shouldReloadRecord&lt;/code&gt; evaluates to &lt;code&gt;true&lt;/code&gt;, then the returned promise resolves once the adapter returns data, regardless if the requested record is already in the store:</source>
          <target state="translated">Si se pasa &lt;code&gt;{ reload: true }&lt;/code&gt; o &lt;code&gt;adapter.shouldReloadRecord&lt;/code&gt; se eval&amp;uacute;a como &lt;code&gt;true&lt;/code&gt; , entonces la promesa devuelta se resuelve una vez que el adaptador devuelve datos, independientemente de si el registro solicitado ya est&amp;aacute; en la tienda:</target>
        </trans-unit>
        <trans-unit id="bb3dbe66e5e6b5b708bc4b95ba1121acdd8defd3" translate="yes" xml:space="preserve">
          <source>If a &quot;-nav&quot; template isn't found, the &lt;code&gt;partial&lt;/code&gt; helper will fall back to a template named &quot;nav&quot;.</source>
          <target state="translated">Si no se encuentra una plantilla &quot;-nav&quot;, el asistente &lt;code&gt;partial&lt;/code&gt; recurrir&amp;aacute; a una plantilla llamada &quot;nav&quot;.</target>
        </trans-unit>
        <trans-unit id="1070e0b9e18b5dac2493cafd0b569e32dafec96c" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;mousedown&lt;/code&gt; event occurs, Ember will look at the target of the event and start walking up the DOM node tree, finding corresponding views and invoking their &lt;code&gt;mouseDown&lt;/code&gt; method as it goes.</source>
          <target state="translated">Si ocurre un evento de &lt;code&gt;mousedown&lt;/code&gt; , Ember observar&amp;aacute; el objetivo del evento y comenzar&amp;aacute; a caminar por el &amp;aacute;rbol de nodos DOM, encontrando las vistas correspondientes e invocando su m&amp;eacute;todo &lt;code&gt;mouseDown&lt;/code&gt; a medida que avanza.</target>
        </trans-unit>
        <trans-unit id="a99aa2a53926d89c8edf39bcf51322e498497874" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;value&lt;/code&gt; option for the &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Templates.helpers.html#method_action&quot;&gt;&lt;code&gt;{{action}}&lt;/code&gt;&lt;/a&gt; helper is specified, its value will be considered a property path that will be read off of the first parameter of the action. This comes very handy with event listeners and enables to work with one-way bindings.</source>
          <target state="translated">Si se especifica una opci&amp;oacute;n de &lt;code&gt;value&lt;/code&gt; para el ayudante &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Templates.helpers.html#method_action&quot;&gt; &lt;code&gt;{{action}}&lt;/code&gt; &lt;/a&gt; , su valor se considerar&amp;aacute; una ruta de propiedad que se leer&amp;aacute; en el primer par&amp;aacute;metro de la acci&amp;oacute;n. Esto resulta muy &amp;uacute;til con los detectores de eventos y permite trabajar con enlaces unidireccionales.</target>
        </trans-unit>
        <trans-unit id="7f0bdedf61225129877a120f8b46fd3b246b3830" translate="yes" xml:space="preserve">
          <source>If a literal is passed (such as a number or a string), it will be treated as an identifier instead. In this case, the &lt;code&gt;model&lt;/code&gt; hook of the route will be triggered:</source>
          <target state="translated">Si se pasa un literal (como un n&amp;uacute;mero o una cadena), se tratar&amp;aacute; como un identificador. En este caso, se activar&amp;aacute; el &lt;code&gt;model&lt;/code&gt; o de gancho de la ruta:</target>
        </trans-unit>
        <trans-unit id="d148132e7c5e3be9866ecc89b474e7ec9f90cbd9" translate="yes" xml:space="preserve">
          <source>If a property name is preceded by a calculator icon, that means it is a &lt;a href=&quot;https://guides.emberjs.com/object-model/computed-properties&quot;&gt;computed property&lt;/a&gt;. If the value of a computed property hasn't yet been computed, you can click on the calculator to compute it.</source>
          <target state="translated">Si el nombre de una propiedad est&amp;aacute; precedido por un icono de calculadora, significa que es una &lt;a href=&quot;https://guides.emberjs.com/object-model/computed-properties&quot;&gt;propiedad calculada&lt;/a&gt; . Si el valor de una propiedad calculada a&amp;uacute;n no se ha calculado, puede hacer clic en la calculadora para calcularlo.</target>
        </trans-unit>
        <trans-unit id="19a008b6e6e4c965eb844c350ca96fd2fde8005b" translate="yes" xml:space="preserve">
          <source>If a response is considered a failure, the JSON payload is expected to include a top-level key &lt;code&gt;errors&lt;/code&gt;, detailing any specific issues. For example:</source>
          <target state="translated">Si una respuesta se considera un error, se espera que la carga &amp;uacute;til JSON incluya &lt;code&gt;errors&lt;/code&gt; clave de nivel superior , detallando cualquier problema espec&amp;iacute;fico. Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="e84ca18db1ce4528adaff8ebcde0ddc9d1bbbae5" translate="yes" xml:space="preserve">
          <source>If a route you are trying to link to has multiple dynamic segments, like &lt;code&gt;/photos/4/comments/18&lt;/code&gt;, be sure to specify all the necessary information for each segment:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c98d92b1b4260fddd26076c0785d2615c517ca9" translate="yes" xml:space="preserve">
          <source>If a serializer cannot be found on the adapter, it will fall back to an instance of &lt;code&gt;DS.JSONSerializer&lt;/code&gt;.</source>
          <target state="translated">Si no se puede encontrar un serializador en el adaptador, recurrir&amp;aacute; a una instancia de &lt;code&gt;DS.JSONSerializer&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b082a53739f56f40f705a2c24db23a779bf6f861" translate="yes" xml:space="preserve">
          <source>If a serializer cannot be found on the adapter, it will fall back to an instance of &lt;code&gt;JSONSerializer&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ad939b5415fefa419b5d3d8f2267a831976cc9b" translate="yes" xml:space="preserve">
          <source>If a value passed to &lt;code&gt;{{#if}}&lt;/code&gt; evaluates to falsy, the &lt;code&gt;{{else}}&lt;/code&gt; block of that invocation is rendered:</source>
          <target state="translated">Si un valor pasado a &lt;code&gt;{{#if}}&lt;/code&gt; se eval&amp;uacute;a como falso, se representa el bloque &lt;code&gt;{{else}}&lt;/code&gt; de esa invocaci&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="aa6cac50285e951d3f99088cf661e8791b58c20f" translate="yes" xml:space="preserve">
          <source>If a version number is shown, you're ready to go.</source>
          <target state="translated">Si se muestra un número de versión,estás listo para ir.</target>
        </trans-unit>
        <trans-unit id="c296e08184e9f731149c6dc6c57c4f6cc1c15251" translate="yes" xml:space="preserve">
          <source>If an API you are using will be going away in the next major version of Ember, you will see a deprecation warning in the developer console. Sometimes, they will be deprecation warnings caused by code in your app, and other times, they may be caused by an addon.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9fb32851b8732feb9f0af5bc888537010a9ce0b" translate="yes" xml:space="preserve">
          <source>If an ID is specified, it adds the ID to the path generated for the type, separated by a &lt;code&gt;/&lt;/code&gt;.</source>
          <target state="translated">Si se especifica una ID, agrega la ID a la ruta generada para el tipo, separada por &lt;code&gt;/&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="213d8ea40b85d52bb2416c2d079a86eec4494789" translate="yes" xml:space="preserve">
          <source>If an attribute is set to a quoted string (&lt;code&gt;&quot;button-search&quot;&lt;/code&gt; in the prior example), its value will be set directly on the element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="633fd88520b85a1dc2adb0f96244f107cab12d1b" translate="yes" xml:space="preserve">
          <source>If any of the &lt;code&gt;promises&lt;/code&gt; given to &lt;code&gt;RSVP.all&lt;/code&gt; are rejected, the first promise that is rejected will be given as an argument to the returned promises's rejection handler. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0da1db12d48186676c3c260c4c76cbac447729dc" translate="yes" xml:space="preserve">
          <source>If any of the &lt;code&gt;promises&lt;/code&gt; given to &lt;code&gt;RSVP.filter&lt;/code&gt; are rejected, the first promise that is rejected will be given as an argument to the returned promise's rejection handler. For example:</source>
          <target state="translated">Si se rechaza alguna de las &lt;code&gt;promises&lt;/code&gt; dadas a &lt;code&gt;RSVP.filter&lt;/code&gt; , la primera promesa que se rechace se proporcionar&amp;aacute; como un argumento al controlador de rechazo de la promesa devuelta. Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="e188b37924c5dcf8575ed85908333d8a94954bd6" translate="yes" xml:space="preserve">
          <source>If any of the &lt;code&gt;promises&lt;/code&gt; given to &lt;code&gt;RSVP.hash&lt;/code&gt; are rejected, the first promise that is rejected will be given as the reason to the rejection handler.</source>
          <target state="translated">Si se rechaza alguna de las &lt;code&gt;promises&lt;/code&gt; dadas a &lt;code&gt;RSVP.hash&lt;/code&gt; , la primera promesa que se rechaza se le dar&amp;aacute; como motivo al controlador de rechazo.</target>
        </trans-unit>
        <trans-unit id="407809c289ea8c382613cdbd3a397a9c01b737d3" translate="yes" xml:space="preserve">
          <source>If any of the &lt;code&gt;promises&lt;/code&gt; given to &lt;code&gt;RSVP.hash&lt;/code&gt; are rejected, the state will be set to 'rejected' and the reason for rejection provided.</source>
          <target state="translated">Si se rechaza alguna de las &lt;code&gt;promises&lt;/code&gt; &lt;code&gt;RSVP.hash&lt;/code&gt; a RSVP.hash , el estado se establecer&amp;aacute; en 'rechazado' y se proporcionar&amp;aacute; la raz&amp;oacute;n del rechazo.</target>
        </trans-unit>
        <trans-unit id="1f0e67fd6d131651ced14358111075c4c5fd3c60" translate="yes" xml:space="preserve">
          <source>If any of the &lt;code&gt;promises&lt;/code&gt; given to &lt;code&gt;RSVP.map&lt;/code&gt; are rejected, the first promise that is rejected will be given as an argument to the returned promise's rejection handler. For example:</source>
          <target state="translated">Si se rechaza alguna de las &lt;code&gt;promises&lt;/code&gt; dadas a &lt;code&gt;RSVP.map&lt;/code&gt; , la primera promesa que se rechace se proporcionar&amp;aacute; como un argumento al controlador de rechazo de la promesa devuelta. Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="b85247e817125c495d52abebf679c9153eaf0ddf" translate="yes" xml:space="preserve">
          <source>If any of the &lt;code&gt;promises&lt;/code&gt; given to &lt;code&gt;filter&lt;/code&gt; are rejected, the first promise that is rejected will be given as an argument to the returned promise's rejection handler. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9454e02f723f2d4798d3f9636c8201c6ef3d275" translate="yes" xml:space="preserve">
          <source>If any of the &lt;code&gt;promises&lt;/code&gt; given to &lt;code&gt;hash&lt;/code&gt; are rejected, the first promise that is rejected will be given as the reason to the rejection handler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e216c6f4cb103c18550c62907c640c7db908e886" translate="yes" xml:space="preserve">
          <source>If any of the &lt;code&gt;promises&lt;/code&gt; given to &lt;code&gt;hash&lt;/code&gt; are rejected, the state will be set to 'rejected' and the reason for rejection provided.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ba60b17c39da1e6539b8e6688fac7091004683c" translate="yes" xml:space="preserve">
          <source>If any of the &lt;code&gt;promises&lt;/code&gt; given to &lt;code&gt;map&lt;/code&gt; are rejected, the first promise that is rejected will be given as an argument to the returned promise's rejection handler. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62f46cfe7efa55298b737df2125ea625479d2317" translate="yes" xml:space="preserve">
          <source>If children were added during the rendering process using &lt;code&gt;appendChild&lt;/code&gt;, &lt;code&gt;rerender&lt;/code&gt; will remove them, because they will be added again if needed by the next &lt;code&gt;render&lt;/code&gt;.</source>
          <target state="translated">Si se a&amp;ntilde;aden los ni&amp;ntilde;os durante el proceso de renderizado utilizando &lt;code&gt;appendChild&lt;/code&gt; , &lt;code&gt;rerender&lt;/code&gt; las elimina, ya que se a&amp;ntilde;adir&amp;aacute;n nuevo si es necesario por la siguiente &lt;code&gt;render&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="781f13b7184304ab362b1bb8a0d3946e5f6bb75d" translate="yes" xml:space="preserve">
          <source>If invoked when not within a run loop:</source>
          <target state="translated">Si se invoca cuando no está dentro de un bucle de ejecución:</target>
        </trans-unit>
        <trans-unit id="1444a15c947e1f71895cd5243b3042b305c558ed" translate="yes" xml:space="preserve">
          <source>If it's any other positive number, will search backwards from that index of the array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="969823b10c5a62c3d56db750b17cc8daa4dbd5d6" translate="yes" xml:space="preserve">
          <source>If it's greater than or equal to the length of the array, the search starts from the last position.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c76c00500664f9fe7a431b8d03f2191c879b656" translate="yes" xml:space="preserve">
          <source>If it's negative, it is taken as the offset from the end of the array i.e. &lt;code&gt;startAt + array.length&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a51d97cf7dbdd6aee9389de6fe8d9224d28bac28" translate="yes" xml:space="preserve">
          <source>If needed these naming conventions can be overwritten by implementing the &lt;a href=&quot;http://emberjs.com/api/data/classes/DS.JSONAPISerializer.html#method_keyForRelationship&quot;&gt;&lt;code&gt;keyForRelationship()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">Si es necesario, estas convenciones de nomenclatura se pueden sobrescribir implementando el m&amp;eacute;todo &lt;a href=&quot;http://emberjs.com/api/data/classes/DS.JSONAPISerializer.html#method_keyForRelationship&quot;&gt; &lt;code&gt;keyForRelationship()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e28614c313781dfa97c4f1763bc0bae8ef15e524" translate="yes" xml:space="preserve">
          <source>If needed these naming conventions can be overwritten by implementing the &lt;a href=&quot;https://api.emberjs.com/ember-data/release/classes/JSONAPISerializer/methods#keyForRelationship&quot;&gt;&lt;code&gt;keyForRelationship()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="924be6e4deeb2ba4dff6c32f52c1415073eda89d" translate="yes" xml:space="preserve">
          <source>If no &lt;code&gt;App.ApplicationAdapter&lt;/code&gt; is found, it will return the value of the &lt;code&gt;defaultAdapter&lt;/code&gt;.</source>
          <target state="translated">Si no se encuentra &lt;code&gt;App.ApplicationAdapter&lt;/code&gt; , devolver&amp;aacute; el valor de &lt;code&gt;defaultAdapter&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0cdb6804cd0ae265a2a329ac1ccba377bca7a4f2" translate="yes" xml:space="preserve">
          <source>If no &lt;code&gt;App.PersonAdapter&lt;/code&gt; is found, this method will look for an &lt;code&gt;App.ApplicationAdapter&lt;/code&gt; (the default adapter for your entire application).</source>
          <target state="translated">Si no se encuentra ning&amp;uacute;n &lt;code&gt;App.PersonAdapter&lt;/code&gt; , este m&amp;eacute;todo buscar&amp;aacute; un &lt;code&gt;App.ApplicationAdapter&lt;/code&gt; (el adaptador predeterminado para toda la aplicaci&amp;oacute;n).</target>
        </trans-unit>
        <trans-unit id="d822a1951ff3c05ebe110cd1ee5c788590a34103" translate="yes" xml:space="preserve">
          <source>If no &lt;code&gt;App.PersonSerializer&lt;/code&gt; is found, this method will look for an &lt;code&gt;App.ApplicationSerializer&lt;/code&gt; (the default serializer for your entire application).</source>
          <target state="translated">Si no se encuentra &lt;code&gt;App.PersonSerializer&lt;/code&gt; , este m&amp;eacute;todo buscar&amp;aacute; una &lt;code&gt;App.ApplicationSerializer&lt;/code&gt; (el serializador predeterminado para toda la aplicaci&amp;oacute;n).</target>
        </trans-unit>
        <trans-unit id="c1767ecf3b0275d6115c127536c23587b0a5c7a6" translate="yes" xml:space="preserve">
          <source>If no &lt;code&gt;startAt&lt;/code&gt; argument is given, the search starts from the last position.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42cf920864305c04d1877d466e05a2201ca3cf64" translate="yes" xml:space="preserve">
          <source>If no &lt;code&gt;type&lt;/code&gt; option is specified, a default of type 'text' is used. Many of the standard HTML attributes may be passed to this helper.</source>
          <target state="translated">Si no hay ning&amp;uacute;n &lt;code&gt;type&lt;/code&gt; opci&amp;oacute;n se especifica, se utiliza un valor predeterminado de tipo 'texto'. Muchos de los atributos HTML est&amp;aacute;ndar se pueden pasar a este asistente.</target>
        </trans-unit>
        <trans-unit id="0c64e1c51fd84c0b0ba2114a085f289eed7e10a9" translate="yes" xml:space="preserve">
          <source>If no action is passed to &lt;code&gt;sendAction&lt;/code&gt; a default name of &quot;action&quot; is assumed.</source>
          <target state="translated">Si no se pasa ninguna acci&amp;oacute;n a &lt;code&gt;sendAction&lt;/code&gt; ,se asume un nombre predeterminado de &quot;acci&amp;oacute;n&quot;.</target>
        </trans-unit>
        <trans-unit id="5bbe09e37026f845dea2f9c1907f7201be76503d" translate="yes" xml:space="preserve">
          <source>If no adapter is found, an error will be thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b88f9275e7a1a177ee08c395e3338103657495ab" translate="yes" xml:space="preserve">
          <source>If no arguments are passed to &lt;code&gt;create&lt;/code&gt;, it will not set values to the new instance during initialization:</source>
          <target state="translated">Si no se pasan argumentos para &lt;code&gt;create&lt;/code&gt; , no establecer&amp;aacute; valores para la nueva instancia durante la inicializaci&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="af662b6dbfe67a59bf4fde858ceab67ed36955ac" translate="yes" xml:space="preserve">
          <source>If no explicit controller is defined, Ember will automatically create one.</source>
          <target state="translated">Si no se define un controlador explícito,Ember creará uno automáticamente.</target>
        </trans-unit>
        <trans-unit id="c3e7d767d9c95bb53db3aa86819f3a40fc223f55" translate="yes" xml:space="preserve">
          <source>If no reload is indicated via the above mentioned ways, then the promise immediately resolves with all the records currently loaded in the store.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fb58977999a5f2d6852c2281d33c67d32f8d6b0" translate="yes" xml:space="preserve">
          <source>If no reload is indicated via the above mentioned ways, then the promise immediately resolves with the cached version in the store.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4cd6415acaefb1ff46dd122c8132a0369ced4fe" translate="yes" xml:space="preserve">
          <source>If no reload is indicated via the abovementioned ways, then the promise immediately resolves with all the records currently loaded in the store.</source>
          <target state="translated">Si no se indica la recarga por las vías mencionadas,entonces la promesa se resuelve inmediatamente con todos los registros actualmente cargados en la tienda.</target>
        </trans-unit>
        <trans-unit id="c8a65cf944c886493cd794ea39bbbb2b618c4896" translate="yes" xml:space="preserve">
          <source>If no reload is indicated via the abovementioned ways, then the promise immediately resolves with the cached version in the store.</source>
          <target state="translated">Si no se indica una recarga a través de los medios mencionados,entonces la promesa se resuelve inmediatamente con la versión almacenada en la tienda.</target>
        </trans-unit>
        <trans-unit id="4fa0da2ce48ad3591baf25de0028f84aecdc9582" translate="yes" xml:space="preserve">
          <source>If no run-loop is present, it creates a new one. If a run loop is present it will queue itself to run on the existing run-loops action queue.</source>
          <target state="translated">Si no hay un bucle de funcionamiento,se crea uno nuevo.Si hay un bucle de ejecución presente,se pondrá en la cola de acción de los bucles de ejecución existentes.</target>
        </trans-unit>
        <trans-unit id="177c6efc809bd894c2f98c0fffec4e8f109b5783" translate="yes" xml:space="preserve">
          <source>If no value is specified, then the default value will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bd3479f82325bb4b4799241d66b61b2d7c40fc3" translate="yes" xml:space="preserve">
          <source>If no viable error substates can be found, an error message will be logged.</source>
          <target state="translated">Si no se encuentra ningún subproducto de error viable,se registrará un mensaje de error.</target>
        </trans-unit>
        <trans-unit id="319574056b68eb9f79e192960e35e4b24fd3a625" translate="yes" xml:space="preserve">
          <source>If none of the built-in Ember Data Adapters work for your backend, be sure to check out some of the community maintained Ember Data Adapters. Some good places to look for Ember Data Adapters include:</source>
          <target state="translated">Si ninguno de los adaptadores de datos Ember funciona en su sistema,asegúrese de revisar algunos de los adaptadores de datos Ember mantenidos por la comunidad.Algunos buenos lugares para buscar adaptadores de datos Ember incluyen:</target>
        </trans-unit>
        <trans-unit id="55ead0e39f3de65e7f03d14bc1db4bfafb834d58" translate="yes" xml:space="preserve">
          <source>If none of the built-in Ember Data Serializers work for your backend, be sure to check out some of the community maintained Ember Data Adapters and Serializers. A good place to search for them is &lt;a href=&quot;http://emberobserver.com/categories/data&quot;&gt;Ember Observer&lt;/a&gt;.</source>
          <target state="translated">Si ninguno de los serializadores de datos Ember integrados funciona para su backend, aseg&amp;uacute;rese de consultar algunos de los adaptadores y serializadores de datos Ember mantenidos por la comunidad. Un buen lugar para buscarlos es &lt;a href=&quot;http://emberobserver.com/categories/data&quot;&gt;Ember Observer&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="29366ac91b910057d4962981a9b437b2452b2fe9" translate="yes" xml:space="preserve">
          <source>If not implemented, the store does not inform the adapter of destruction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="385c8e8dd880920fcdc1ae7385ac7d1b51d9fd69" translate="yes" xml:space="preserve">
          <source>If not manually set a default value will be provided by the framework.</source>
          <target state="translated">Si no se establece manualmente,el marco proporcionará un valor por defecto.</target>
        </trans-unit>
        <trans-unit id="10af7888776e382b6d940ea2456a5aa0b13dfd98" translate="yes" xml:space="preserve">
          <source>If not manually set a default value will be provided by the framework. Once rendered an element's &lt;code&gt;elementId&lt;/code&gt; is considered immutable and you should never change it. If you need to compute a dynamic value for the &lt;code&gt;elementId&lt;/code&gt;, you should do this when the component or element is being instantiated:</source>
          <target state="translated">Si no se establece manualmente, el marco proporcionar&amp;aacute; un valor predeterminado. Una vez renderizado, el &lt;code&gt;elementId&lt;/code&gt; de un elemento se considera inmutable y nunca debe cambiarlo. Si necesita calcular un valor din&amp;aacute;mico para el &lt;code&gt;elementId&lt;/code&gt; , debe hacerlo cuando se instancia el componente o elemento:</target>
        </trans-unit>
        <trans-unit id="d4dfe57cd55eceea09fa41283febccc080fc1b27" translate="yes" xml:space="preserve">
          <source>If one of the above is found, the router will immediately transition into that substate (without updating the URL). The &quot;reason&quot; for the error (i.e. the exception thrown or the promise reject value) will be passed to that error state as its &lt;code&gt;model&lt;/code&gt;.</source>
          <target state="translated">Si se encuentra uno de los anteriores, el enrutador pasar&amp;aacute; inmediatamente a ese subestado (sin actualizar la URL). El &quot;motivo&quot; del error (es decir, la excepci&amp;oacute;n lanzada o el valor de rechazo de la promesa) se pasar&amp;aacute; a ese estado de error como &lt;code&gt;model&lt;/code&gt; o .</target>
        </trans-unit>
        <trans-unit id="e0c50aaa48c239e57ccc9645db5f0f57bf065cf4" translate="yes" xml:space="preserve">
          <source>If present, overrides the application's &lt;code&gt;rootElement&lt;/code&gt; property on the instance. This is useful for testing environment, where you might want to append the root view to a fixture area.</source>
          <target state="translated">Si est&amp;aacute; presente, anula la propiedad &lt;code&gt;rootElement&lt;/code&gt; de la aplicaci&amp;oacute;n en la instancia. Esto es &amp;uacute;til para el entorno de prueba, donde es posible que desee agregar la vista ra&amp;iacute;z a un &amp;aacute;rea de dispositivo.</target>
        </trans-unit>
        <trans-unit id="0b7f3d6406c8a88c0635c79b1f2f384e707f0588" translate="yes" xml:space="preserve">
          <source>If present, overrides the router's &lt;code&gt;location&lt;/code&gt; property with this value. This is useful for environments where trying to modify the URL would be inappropriate.</source>
          <target state="translated">Si est&amp;aacute; presente, anula la propiedad de &lt;code&gt;location&lt;/code&gt; del enrutador con este valor. Esto es &amp;uacute;til para entornos en los que intentar modificar la URL ser&amp;iacute;a inapropiado.</target>
        </trans-unit>
        <trans-unit id="a0ba623874d5780a1c7aa2f1902d27026170e1f9" translate="yes" xml:space="preserve">
          <source>If present, render into the given &lt;code&gt;Document&lt;/code&gt; object instead of the global &lt;code&gt;window.document&lt;/code&gt; object.</source>
          <target state="translated">Si est&amp;aacute; presente, renderice en el objeto &lt;code&gt;Document&lt;/code&gt; dado en lugar del objeto &lt;code&gt;window.document&lt;/code&gt; global .</target>
        </trans-unit>
        <trans-unit id="a4a5231e55fa0848b40bfcabe5e63e6b334a8dee" translate="yes" xml:space="preserve">
          <source>If singletons are not wanted an optional flag can be provided at lookup.</source>
          <target state="translated">Si no se quieren solteros,se puede proporcionar una bandera opcional en la búsqueda.</target>
        </trans-unit>
        <trans-unit id="55b646c48afc814827adf573fedd759dbabc65f6" translate="yes" xml:space="preserve">
          <source>If someone is connecting to a third-party API, such as a service for payment or mapping, and they need that state across many routes, a &lt;a href=&quot;https://guides.emberjs.com/services/&quot;&gt;Service&lt;/a&gt; might be a good place to make requests. Some common use cases include polling for data and managing websocket connections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1534b378c0fb416fb2657b1a7e0210fc727f41f7" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;&amp;lt;Username&amp;gt;&lt;/code&gt; tag doesn't specify a &lt;code&gt;@localTime&lt;/code&gt; argument, we will see an extra, incomplete text, &lt;code&gt;their local time is&lt;/code&gt;, on the screen.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d589e46725553e1f5ab96cc1bb5be3a933ac7e4" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;ActionHandler&lt;/code&gt; has its &lt;code&gt;target&lt;/code&gt; property set, actions may bubble to the &lt;code&gt;target&lt;/code&gt;. Bubbling happens when an &lt;code&gt;actionName&lt;/code&gt; can not be found in the &lt;code&gt;ActionHandler&lt;/code&gt;'s &lt;code&gt;actions&lt;/code&gt; hash or if the action target function returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">Si &lt;code&gt;ActionHandler&lt;/code&gt; tiene su propiedad de &lt;code&gt;target&lt;/code&gt; establecida, las acciones pueden llegar al &lt;code&gt;target&lt;/code&gt; . Burbujeante que sucede cuando un &lt;code&gt;actionName&lt;/code&gt; no se puede encontrar en el &lt;code&gt;ActionHandler&lt;/code&gt; 's &lt;code&gt;actions&lt;/code&gt; de hash o si la funci&amp;oacute;n objetivo de la acci&amp;oacute;n vuelve &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="772840dee3cf8d0910eb07a26d98e70dcf3faa75" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;articles.overview&lt;/code&gt; route's &lt;code&gt;model&lt;/code&gt; hook returns a promise that rejects (for instance the server returned an error, the user isn't logged in, etc.), an &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Route.html#event_error&quot;&gt;&lt;code&gt;error&lt;/code&gt;&lt;/a&gt; event will fire from that route and bubble upward. This &lt;code&gt;error&lt;/code&gt; event can be handled and used to display an error message, redirect to a login page, etc.</source>
          <target state="translated">Si el &lt;code&gt;articles.overview&lt;/code&gt; del &lt;code&gt;model&lt;/code&gt; o de la ruta articles.overview devuelve una promesa que rechaza (por ejemplo, el servidor devolvi&amp;oacute; un error, el usuario no ha iniciado sesi&amp;oacute;n, etc.), &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Route.html#event_error&quot;&gt; &lt;code&gt;error&lt;/code&gt; &lt;/a&gt; activar&amp;aacute; un evento de error desde esa ruta y burbujear&amp;aacute; hacia arriba. Este evento de &lt;code&gt;error&lt;/code&gt; se puede manejar y usar para mostrar un mensaje de error, redirigir a una p&amp;aacute;gina de inicio de sesi&amp;oacute;n, etc.</target>
        </trans-unit>
        <trans-unit id="995088ca795d5632f47f454b5522afbd4faee6e7" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;articles.overview&lt;/code&gt; route's &lt;code&gt;model&lt;/code&gt; hook returns a promise that rejects (for instance the server returned an error, the user isn't logged in, etc.), an &lt;a href=&quot;https://api.emberjs.com/ember/release/classes/Route/events#error&quot;&gt;&lt;code&gt;error&lt;/code&gt;&lt;/a&gt; event will fire from that route and bubble upward. This &lt;code&gt;error&lt;/code&gt; event can be handled and used to display an error message, redirect to a login page, etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6faf2465b2a44cca16ce9f1149b0e06af0a0a3dc" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;backgroundReload&lt;/code&gt; option is not present, this method will be called to determine whether a backgroundReload should be performed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9130af308c0198b4b665ac1a3496ca0cbc9e0f5" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;isEnabled&lt;/code&gt; property is set to &lt;code&gt;true&lt;/code&gt;, no class name is added:</source>
          <target state="translated">Si la propiedad &lt;code&gt;isEnabled&lt;/code&gt; se establece en &lt;code&gt;true&lt;/code&gt; , no se agrega ning&amp;uacute;n nombre de clase:</target>
        </trans-unit>
        <trans-unit id="ab314ef6ed6ac8901d4df1d10fba4bf0a8964b42" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;loading&lt;/code&gt; handler is not defined at the specific route, the event will continue to bubble above a transition's parent route, providing the &lt;code&gt;application&lt;/code&gt; route the opportunity to manage it.</source>
          <target state="translated">Si el controlador de &lt;code&gt;loading&lt;/code&gt; no est&amp;aacute; definido en la ruta espec&amp;iacute;fica, el evento seguir&amp;aacute; apareciendo por encima de la ruta principal de una transici&amp;oacute;n, proporcionando a la ruta de la &lt;code&gt;application&lt;/code&gt; la oportunidad de gestionarla.</target>
        </trans-unit>
        <trans-unit id="62525faef0253ea89ed997a16b4543fcaf8392ae" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;part&lt;/code&gt; getter returns &quot;zip&quot;, this will display the result of &lt;code&gt;this.address.zip&lt;/code&gt;. If it returns &quot;city&quot;, you get &lt;code&gt;this.address.city&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be6537a81cb8aa571a7b6f86a8e1d8ee28c339c7" translate="yes" xml:space="preserve">
          <source>If the Inspector cannot detect an Ember application, you will see the following message:</source>
          <target state="translated">Si el Inspector no puede detectar una aplicación Ember,verá el siguiente mensaje:</target>
        </trans-unit>
        <trans-unit id="0c51feccb00ebb8b363b6ad461f79ad0773d2572" translate="yes" xml:space="preserve">
          <source>If the JSON for &lt;code&gt;person&lt;/code&gt; has a key of &lt;code&gt;familyNameOfPerson&lt;/code&gt;, and the desired attribute name is simply &lt;code&gt;familyName&lt;/code&gt;, then create a custom Serializer for the model and override the &lt;code&gt;attrs&lt;/code&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69ddcdf494c0799cfdfe52920abaeb3bbcf2a536" translate="yes" xml:space="preserve">
          <source>If the JSON for &lt;code&gt;person&lt;/code&gt; has a key of &lt;code&gt;lastNameOfPerson&lt;/code&gt;, and the desired attribute name is simply &lt;code&gt;lastName&lt;/code&gt;, then create a custom Serializer for the model and override the &lt;code&gt;attrs&lt;/code&gt; property.</source>
          <target state="translated">Si el JSON para &lt;code&gt;person&lt;/code&gt; a tiene una clave de &lt;code&gt;lastNameOfPerson&lt;/code&gt; , y el nombre del atributo deseado es simplemente &lt;code&gt;lastName&lt;/code&gt; , entonces cree un serializador personalizado para el modelo y anule la propiedad &lt;code&gt;attrs&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a5a799037ae5dbbf342f27f5111bfd1194142893" translate="yes" xml:space="preserve">
          <source>If the Promises tab is working, but there are Promises you can't find, it's probably because these Promises were created before the Inspector was activated. To detect Promises the moment the app boots, click on the &lt;code&gt;Reload&lt;/code&gt; button below:</source>
          <target state="translated">Si la pesta&amp;ntilde;a Promesas funciona, pero hay Promesas que no puede encontrar, probablemente se deba a que estas Promesas se crearon antes de que se activara el Inspector. Para detectar Promesas en el momento en que se inicia la aplicaci&amp;oacute;n, haga clic en el bot&amp;oacute;n &lt;code&gt;Reload&lt;/code&gt; continuaci&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="de1f2a2884be1eb73d9e97c2308ac4d95895d6e2" translate="yes" xml:space="preserve">
          <source>If the adapter rejects or errors the record will need to be saved again once the reason for the error is addressed in order to persist the deleted state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68a1045b40f3b0ab66eaf93fc1289e61bccbbab6" translate="yes" xml:space="preserve">
          <source>If the adapter rejects or throws an error the record will enter an error state and the attributes that had attempted to be saved will still be considered dirty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52f3f500a3b8991f78eb460dc21a188be6d35d0d" translate="yes" xml:space="preserve">
          <source>If the adapter returns no data for the primary data of the payload, then &lt;code&gt;queryRecord&lt;/code&gt; resolves with &lt;code&gt;null&lt;/code&gt;:</source>
          <target state="translated">Si el adaptador no devuelve datos para los datos primarios de la carga &amp;uacute;til, &lt;code&gt;queryRecord&lt;/code&gt; se resuelve con &lt;code&gt;null&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="7638d1179bf0962cf4d4338f47795f6fc62b8321" translate="yes" xml:space="preserve">
          <source>If the aliased property is &quot;falsey&quot;, for example: &lt;code&gt;false&lt;/code&gt;, &lt;code&gt;undefined&lt;/code&gt;&lt;code&gt;null&lt;/code&gt;, &lt;code&gt;&quot;&quot;&lt;/code&gt;, &lt;code&gt;0&lt;/code&gt;, &lt;code&gt;NaN&lt;/code&gt; or an empty array, the block will not be rendered.</source>
          <target state="translated">Si la propiedad con alias es &quot;falsey&quot;, por ejemplo: &lt;code&gt;false&lt;/code&gt; , &lt;code&gt;undefined&lt;/code&gt; &lt;code&gt;null&lt;/code&gt; , &lt;code&gt;&quot;&quot;&lt;/code&gt; , &lt;code&gt;0&lt;/code&gt; , &lt;code&gt;NaN&lt;/code&gt; o una matriz vac&amp;iacute;a, el bloque no se procesar&amp;aacute;.</target>
        </trans-unit>
        <trans-unit id="41945c6b7d63a4ae10870e50bcd86a398b52e66a" translate="yes" xml:space="preserve">
          <source>If the assimliated promise rejects, then the downstream promise will also reject.</source>
          <target state="translated">Si la promesa asimilada se rechaza,entonces la promesa de abajo también se rechazará.</target>
        </trans-unit>
        <trans-unit id="152ea127565802f064b38cbb1059bddd02b1d5be" translate="yes" xml:space="preserve">
          <source>If the attribute is null, it won't be rendered:</source>
          <target state="translated">Si el atributo es nulo,no se emitirá:</target>
        </trans-unit>
        <trans-unit id="b443b259d5099327a0563619861d8040ac92d909" translate="yes" xml:space="preserve">
          <source>If the attributes returned by your server use a different convention you can use the serializer's &lt;a href=&quot;http://emberjs.com/api/data/classes/DS.JSONAPISerializer.html#method_keyForAttribute&quot;&gt;&lt;code&gt;keyForAttribute()&lt;/code&gt;&lt;/a&gt; method to convert an attribute name in your model to a key in your JSON payload. For example, if your backend returned attributes that are &lt;code&gt;under_scored&lt;/code&gt; instead of &lt;code&gt;dash-cased&lt;/code&gt; you could override the &lt;code&gt;keyForAttribute&lt;/code&gt; method like this.</source>
          <target state="translated">Si los atributos devueltos por su servidor usan una convenci&amp;oacute;n diferente, puede usar el m&amp;eacute;todo &lt;a href=&quot;http://emberjs.com/api/data/classes/DS.JSONAPISerializer.html#method_keyForAttribute&quot;&gt; &lt;code&gt;keyForAttribute()&lt;/code&gt; &lt;/a&gt; del serializador para convertir un nombre de atributo en su modelo a una clave en su carga &amp;uacute;til JSON. Por ejemplo, si su backend devolvi&amp;oacute; atributos que est&amp;aacute;n &lt;code&gt;under_scored&lt;/code&gt; lugar de &lt;code&gt;dash-cased&lt;/code&gt; en may&amp;uacute;sculas , podr&amp;iacute;a anular el m&amp;eacute;todo &lt;code&gt;keyForAttribute&lt;/code&gt; como este.</target>
        </trans-unit>
        <trans-unit id="79d2ea9f989f3044cc6bde9fbfb11d286ad5aba5" translate="yes" xml:space="preserve">
          <source>If the attributes returned by your server use a different convention you can use the serializer's &lt;a href=&quot;https://api.emberjs.com/ember-data/release/classes/JSONAPISerializer/methods#keyForAttribute&quot;&gt;&lt;code&gt;keyForAttribute()&lt;/code&gt;&lt;/a&gt; method to convert an attribute name in your model to a key in your JSON payload. For example, if your backend returned attributes that are &lt;code&gt;under_scored&lt;/code&gt; instead of &lt;code&gt;dash-cased&lt;/code&gt; you could override the &lt;code&gt;keyForAttribute&lt;/code&gt; method like this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d3cbf20c649b02a710475ea390c3c5224873ffa" translate="yes" xml:space="preserve">
          <source>If the backend server returns validation errors after trying to save, they will be available on the &lt;code&gt;errors&lt;/code&gt; property of your model. Here's how you might display the errors from saving a blog post in your template:</source>
          <target state="translated">Si el servidor backend devuelve errores de validaci&amp;oacute;n despu&amp;eacute;s de intentar guardar, estar&amp;aacute;n disponibles en la propiedad de &lt;code&gt;errors&lt;/code&gt; de su modelo. As&amp;iacute; es como puede mostrar los errores al guardar una publicaci&amp;oacute;n de blog en su plantilla:</target>
        </trans-unit>
        <trans-unit id="184d20c148a6d327935c020acb2ec7964cadbfc4" translate="yes" xml:space="preserve">
          <source>If the bound property's value is a string, that value will be added as a class name without modification:</source>
          <target state="translated">Si el valor de la propiedad vinculada es una cadena,ese valor se añadirá como un nombre de clase sin modificación:</target>
        </trans-unit>
        <trans-unit id="8564aea58116dae8fa901a19cdab1923b5e3f74c" translate="yes" xml:space="preserve">
          <source>If the cache does not have a &lt;code&gt;link&lt;/code&gt; for the relationship but the &lt;code&gt;type&lt;/code&gt; and &lt;code&gt;id&lt;/code&gt; of related resources are known then &lt;code&gt;findRecord&lt;/code&gt; will be used for each individual related resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="479cd5b0e20c28d0b0339e3ca34878f1e5aab9ad" translate="yes" xml:space="preserve">
          <source>If the cache does not have a &lt;code&gt;link&lt;/code&gt; for the relationship then &lt;code&gt;findRecord&lt;/code&gt; will be used if a &lt;code&gt;type&lt;/code&gt; and &lt;code&gt;id&lt;/code&gt; for the related resource is known.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06b1da3c92afa4debb6a8f255a279272102f2932" translate="yes" xml:space="preserve">
          <source>If the downstream promise does not specify a rejection handler, rejection reasons will be propagated further downstream.</source>
          <target state="translated">Si la promesa de la corriente descendente no especifica un controlador de rechazo,las razones del rechazo se propagarán más allá de la corriente descendente.</target>
        </trans-unit>
        <trans-unit id="3a55c943ac2e27c54adb00ff70a7d4161ee5ec6b" translate="yes" xml:space="preserve">
          <source>If the entity referred to by the reference is already loaded, it is present as &lt;code&gt;reference.value&lt;/code&gt;. Otherwise the value returned by this function is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">Si la entidad a la que hace referencia la referencia ya est&amp;aacute; cargada, est&amp;aacute; presente como &lt;code&gt;reference.value&lt;/code&gt; . De lo contrario, el valor devuelto por esta funci&amp;oacute;n es &lt;code&gt;null&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dda61213c658054d5a095f068b839f66a0b06e03" translate="yes" xml:space="preserve">
          <source>If the feature is &lt;em&gt;disabled&lt;/em&gt;, observers run synchronously and will be invoked as soon as their observed properties update.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a417452b0f8a59cb5c9ec10cff0c1a7101af4025" translate="yes" xml:space="preserve">
          <source>If the fulfillment value of a Promise is an Ember object or an array, you can click on that object to open it in the Object Inspector.</source>
          <target state="translated">Si el valor de cumplimiento de una Promesa es un objeto Ámbar o una matriz,puedes hacer clic en ese objeto para abrirlo en el Inspector de Objetos.</target>
        </trans-unit>
        <trans-unit id="c694b108172330a074e555aa2e9bd5c8918d004c" translate="yes" xml:space="preserve">
          <source>If the globally unique IDs for your records should be generated on the client, implement the &lt;code&gt;generateIdForRecord()&lt;/code&gt; method. This method will be invoked each time you create a new record, and the value returned from it will be assigned to the record's &lt;code&gt;primaryKey&lt;/code&gt;.</source>
          <target state="translated">Si las ID globalmente &amp;uacute;nicas para sus registros deben generarse en el cliente, implemente el m&amp;eacute;todo &lt;code&gt;generateIdForRecord()&lt;/code&gt; . Este m&amp;eacute;todo se invocar&amp;aacute; cada vez que cree un nuevo registro, y el valor devuelto se asignar&amp;aacute; a la &lt;code&gt;primaryKey&lt;/code&gt; del registro .</target>
        </trans-unit>
        <trans-unit id="a207108ddbfa6ad5232c33f8aaeb7bb8065f8d9c" translate="yes" xml:space="preserve">
          <source>If the interactive element would be written another way, such as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="383779be8c706d1e3cb5661b12cdefe94dc7660e" translate="yes" xml:space="preserve">
          <source>If the manyArray holds the result of a &lt;code&gt;store.query()&lt;/code&gt; reload will re-run the original query.</source>
          <target state="translated">Si manyArray contiene el resultado de un &lt;code&gt;store.query()&lt;/code&gt; recarga volver&amp;aacute; a ejecutar la consulta original.</target>
        </trans-unit>
        <trans-unit id="c00ea8d6f5536c4e1ff522e12217f7fb72a05f5f" translate="yes" xml:space="preserve">
          <source>If the method &lt;code&gt;toStringExtension&lt;/code&gt; is defined, its return value will be included in the output.</source>
          <target state="translated">Si se define el m&amp;eacute;todo &lt;code&gt;toStringExtension&lt;/code&gt; , su valor de retorno se incluir&amp;aacute; en la salida.</target>
        </trans-unit>
        <trans-unit id="22b02d6039b6959806b69bf25a4b1e75eb2891e9" translate="yes" xml:space="preserve">
          <source>If the method does not exist on the parent class, it will throw an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb7edb4ccdf3f1d3931412afe88e591bcf879e9c" translate="yes" xml:space="preserve">
          <source>If the method does not exist on the parent class, it will throw an error:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0e6be66dbb320443a753cdc848ffa43778e78f7" translate="yes" xml:space="preserve">
          <source>If the model &lt;code&gt;hasDirtyAttributes&lt;/code&gt; this function will discard any unsaved changes. If the model &lt;code&gt;isNew&lt;/code&gt; it will be removed from the store.</source>
          <target state="translated">Si el modelo tiene &lt;code&gt;hasDirtyAttributes&lt;/code&gt; esta funci&amp;oacute;n descartar&amp;aacute; cualquier cambio no guardado. Si el modelo es &lt;code&gt;isNew&lt;/code&gt; ser&amp;aacute; retirado de la tienda.</target>
        </trans-unit>
        <trans-unit id="d202e9a309b6b573fff49d6c00cbae0211d6cadd" translate="yes" xml:space="preserve">
          <source>If the model changes to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad5bcbc01172106906b2423deb80779f8b363b9a" translate="yes" xml:space="preserve">
          <source>If the model for the &lt;code&gt;photos&lt;/code&gt; template is a list of three photos, the rendered HTML would look something like this:</source>
          <target state="translated">Si el modelo de la plantilla de &lt;code&gt;photos&lt;/code&gt; es una lista de tres fotos, el HTML renderizado se ver&amp;iacute;a as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="ebd366913abd1903a499f1ba35d5fc1ff62f79f8" translate="yes" xml:space="preserve">
          <source>If the new route has dynamic segments, you need to pass either a &lt;em&gt;model&lt;/em&gt; or an &lt;em&gt;identifier&lt;/em&gt; for each segment. Passing a model will skip the route's &lt;code&gt;model()&lt;/code&gt; hook since the model is already loaded.</source>
          <target state="translated">Si la nueva ruta tiene segmentos din&amp;aacute;micos, debe pasar un &lt;em&gt;modelo&lt;/em&gt; o un &lt;em&gt;identificador&lt;/em&gt; para cada segmento. Pasar un modelo omitir&amp;aacute; el gancho &lt;code&gt;model()&lt;/code&gt; la ruta, ya que el modelo ya est&amp;aacute; cargado.</target>
        </trans-unit>
        <trans-unit id="9dd105583cff6aa2625e44b568d4b7fb52d7d415" translate="yes" xml:space="preserve">
          <source>If the node function has multiple success parameters, then &lt;code&gt;denodeify&lt;/code&gt; just returns the first one:</source>
          <target state="translated">Si la funci&amp;oacute;n de nodo tiene varios par&amp;aacute;metros de &amp;eacute;xito, &lt;code&gt;denodeify&lt;/code&gt; solo devuelve el primero:</target>
        </trans-unit>
        <trans-unit id="31b73428030a615dd13f1445e2cf5ccf80c1babe" translate="yes" xml:space="preserve">
          <source>If the object's class is not defined on an Ember namespace, it will indicate it is a subclass of the registered superclass:</source>
          <target state="translated">Si la clase del objeto no está definida en un espacio de nombres Ember,indicará que es una subclase de la superclase registrada:</target>
        </trans-unit>
        <trans-unit id="98b3154bddbbb6e036caa371f143a6c81c40436d" translate="yes" xml:space="preserve">
          <source>If the passed object implements the &lt;code&gt;Copyable&lt;/code&gt; interface, then this function will delegate to the object's &lt;code&gt;copy()&lt;/code&gt; method and return the result. See &lt;code&gt;Copyable&lt;/code&gt; for further details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e007da1cf968ea0c777f82e45711da7c7b73cc28" translate="yes" xml:space="preserve">
          <source>If the passed object implements the &lt;code&gt;Ember.Copyable&lt;/code&gt; interface, then this function will delegate to the object's &lt;code&gt;copy()&lt;/code&gt; method and return the result. See &lt;code&gt;Ember.Copyable&lt;/code&gt; for further details.</source>
          <target state="translated">Si el objeto pasado implementa la interfaz &lt;code&gt;Ember.Copyable&lt;/code&gt; , entonces esta funci&amp;oacute;n delegar&amp;aacute; al m&amp;eacute;todo &lt;code&gt;copy()&lt;/code&gt; del objeto y devolver&amp;aacute; el resultado. Consulte &lt;code&gt;Ember.Copyable&lt;/code&gt; para m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="9563527c88e87e4b25e2a83f4d0a00e3e9423b57" translate="yes" xml:space="preserve">
          <source>If the passed object is of a type not supported by the receiver, then this method should raise an exception.</source>
          <target state="translated">Si el objeto pasado es de un tipo no soportado por el receptor,entonces este método debería plantear una excepción.</target>
        </trans-unit>
        <trans-unit id="09efeec4d550f6fc26db2216056c72de8e864277" translate="yes" xml:space="preserve">
          <source>If the promise fulfills, the transition will pick up where it left off and begin resolving the next (child) route's model, pausing if it too is a promise, and so on, until all destination route models have been resolved. The values passed to the &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Route.html#method_setupController&quot;&gt;&lt;code&gt;setupController()&lt;/code&gt;&lt;/a&gt; hook for each route will be the fulfilled values from the promises.</source>
          <target state="translated">Si la promesa se cumple, la transici&amp;oacute;n continuar&amp;aacute; donde se qued&amp;oacute; y comenzar&amp;aacute; a resolver el modelo de la siguiente ruta (secundaria), deteni&amp;eacute;ndose si tambi&amp;eacute;n es una promesa, y as&amp;iacute; sucesivamente, hasta que se hayan resuelto todos los modelos de ruta de destino. Los valores pasados ​​al gancho &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Route.html#method_setupController&quot;&gt; &lt;code&gt;setupController()&lt;/code&gt; &lt;/a&gt; para cada ruta ser&amp;aacute;n los valores cumplidos de las promesas.</target>
        </trans-unit>
        <trans-unit id="54630692f9e77abb1aa1d347bed5110b3dfa0cc5" translate="yes" xml:space="preserve">
          <source>If the promise fulfills, the transition will pick up where it left off and begin resolving the next (child) route's model, pausing if it too is a promise, and so on, until all destination route models have been resolved. The values passed to the &lt;a href=&quot;https://api.emberjs.com/ember/release/classes/Route/methods#setupController&quot;&gt;&lt;code&gt;setupController()&lt;/code&gt;&lt;/a&gt; hook for each route will be the fulfilled values from the promises.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="308655b43223f8a7bd0d8bc77a723ca39a8bc7b1" translate="yes" xml:space="preserve">
          <source>If the proxied promise is rejected this will contain the reason provided.</source>
          <target state="translated">Si se rechaza la promesa proxy,esto contendrá la razón proporcionada.</target>
        </trans-unit>
        <trans-unit id="f880ce55d49d34f056f851b1bbdf0e075988eb0c" translate="yes" xml:space="preserve">
          <source>If the record is in the dirty state this property will report what kind of change has caused it to move into the dirty state. Possible values are:</source>
          <target state="translated">Si el registro está en el estado sucio esta propiedad informará qué tipo de cambio ha causado que se mueva al estado sucio.Los posibles valores son:</target>
        </trans-unit>
        <trans-unit id="06a2600553c7efb30b03c1f03320f2de918b3cea" translate="yes" xml:space="preserve">
          <source>If the record is not yet available, the store will ask the adapter's &lt;code&gt;find&lt;/code&gt; method to find the necessary data. If the record is already present in the store, it depends on the reload behavior &lt;em&gt;when&lt;/em&gt; the returned promise resolves.</source>
          <target state="translated">Si el registro a&amp;uacute;n no est&amp;aacute; disponible, la tienda le pedir&amp;aacute; al m&amp;eacute;todo de &lt;code&gt;find&lt;/code&gt; del adaptador que encuentre los datos necesarios. Si el registro ya est&amp;aacute; presente en la tienda, depende del comportamiento de recarga &lt;em&gt;cuando se&lt;/em&gt; resuelve la promesa devuelta.</target>
        </trans-unit>
        <trans-unit id="6d0efb50cd9d767cfbc353966c55c63060936cf7" translate="yes" xml:space="preserve">
          <source>If the records in the relationship are not known when the response is serialized it's also possible to represent the relationship as a URL using the &lt;code&gt;links&lt;/code&gt; key in the response. Ember Data will fetch this URL to resolve the relationship when it is accessed for the first time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bcad3100c572bcae24a7d17d3068806c3bb758b" translate="yes" xml:space="preserve">
          <source>If the records in the relationship are not known when the response is serialized its also possible to represent the relationship as a url using the &lt;code&gt;links&lt;/code&gt; key in the response. Ember Data will fetch this url to resolve the relationship when it is accessed for the first time.</source>
          <target state="translated">Si no se conocen los registros de la relaci&amp;oacute;n cuando se serializa la respuesta, tambi&amp;eacute;n es posible representar la relaci&amp;oacute;n como una URL utilizando la clave de &lt;code&gt;links&lt;/code&gt; en la respuesta. Ember Data buscar&amp;aacute; esta URL para resolver la relaci&amp;oacute;n cuando se acceda a ella por primera vez.</target>
        </trans-unit>
        <trans-unit id="f8f78f6c26f50d6080783bc5902d985983266d5c" translate="yes" xml:space="preserve">
          <source>If the rejection value is an &lt;code&gt;Error&lt;/code&gt; object, you can send its stack trace to the console.</source>
          <target state="translated">Si el valor de rechazo es un objeto &lt;code&gt;Error&lt;/code&gt; , puede enviar su seguimiento de pila a la consola.</target>
        </trans-unit>
        <trans-unit id="38c76dedd3c137a7630250599cab68a32db56629" translate="yes" xml:space="preserve">
          <source>If the request was for a &lt;code&gt;createRecord&lt;/code&gt;&lt;code&gt;updateRecord&lt;/code&gt; or &lt;code&gt;deleteRecord&lt;/code&gt; special rules apply to how this error will affect the state of the store and additional properties on the &lt;code&gt;Error&lt;/code&gt; class may be used. See the documentation for these methods in the &lt;code&gt;MinimumAdapterInterface&lt;/code&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fa3d1bc6f1ed30d04ddee5b19a6b30c1fdc2d27" translate="yes" xml:space="preserve">
          <source>If the return value of an &lt;code&gt;attributeBindings&lt;/code&gt; monitored property is a boolean the attribute will be present or absent depending on the value:</source>
          <target state="translated">Si el valor de retorno de una propiedad monitoreada de &lt;code&gt;attributeBindings&lt;/code&gt; es un booleano, el atributo estar&amp;aacute; presente o ausente seg&amp;uacute;n el valor:</target>
        </trans-unit>
        <trans-unit id="972fbc628020d016ab99c5230775b405dc6ee5d9" translate="yes" xml:space="preserve">
          <source>If the route is nested, you can supply a model or an identifier for each dynamic segment.</source>
          <target state="translated">Si la ruta está anidada,puede suministrar un modelo o un identificador para cada segmento dinámico.</target>
        </trans-unit>
        <trans-unit id="abf70b940f532889b87a7667e8d5c8095a83ef39" translate="yes" xml:space="preserve">
          <source>If the tagName is &lt;code&gt;''&lt;/code&gt;, the view will be tagless, with no outer element. Component properties that depend on the presence of an outer element, such as &lt;code&gt;classNameBindings&lt;/code&gt; and &lt;code&gt;attributeBindings&lt;/code&gt;, do not work with tagless components. Tagless components cannot implement methods to handle events, and have no associated jQuery object to return with &lt;code&gt;$()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfe4d96d9b887de98732f91a39ae331699076f78" translate="yes" xml:space="preserve">
          <source>If the types of the arguments are not numbers, they will be converted to numbers and the type of the return value will always be &lt;code&gt;Number&lt;/code&gt;. For example, the max of a list of Date objects will be the highest timestamp as a &lt;code&gt;Number&lt;/code&gt;. This behavior is consistent with &lt;code&gt;Math.max&lt;/code&gt;.</source>
          <target state="translated">Si los tipos de argumentos no son n&amp;uacute;meros, se convertir&amp;aacute;n en n&amp;uacute;meros y el tipo de valor de retorno siempre ser&amp;aacute; &lt;code&gt;Number&lt;/code&gt; . Por ejemplo, el m&amp;aacute;ximo de una lista de objetos Date ser&amp;aacute; la marca de tiempo m&amp;aacute;s alta como &lt;code&gt;Number&lt;/code&gt; . Este comportamiento es consistente con &lt;code&gt;Math.max&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="555814d9be41aaf2ec2a83e221fcf638f4305f3e" translate="yes" xml:space="preserve">
          <source>If the types of the arguments are not numbers, they will be converted to numbers and the type of the return value will always be &lt;code&gt;Number&lt;/code&gt;. For example, the min of a list of Date objects will be the lowest timestamp as a &lt;code&gt;Number&lt;/code&gt;. This behavior is consistent with &lt;code&gt;Math.min&lt;/code&gt;.</source>
          <target state="translated">Si los tipos de argumentos no son n&amp;uacute;meros, se convertir&amp;aacute;n en n&amp;uacute;meros y el tipo de valor de retorno siempre ser&amp;aacute; &lt;code&gt;Number&lt;/code&gt; . Por ejemplo, el m&amp;iacute;nimo de una lista de objetos Date ser&amp;aacute; la marca de tiempo m&amp;aacute;s baja como &lt;code&gt;Number&lt;/code&gt; . Este comportamiento es consistente con &lt;code&gt;Math.min&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2694df4de2809d30bd370625a56d890f277f6427" translate="yes" xml:space="preserve">
          <source>If the types of the two objects are different precedence occurs in the following order, with types earlier in the list considered &lt;code&gt;&amp;lt;&lt;/code&gt; types later in the list:</source>
          <target state="translated">Si los tipos de los dos objetos son diferentes, la precedencia ocurre en el siguiente orden, consider&amp;aacute;ndose los tipos anteriores en la lista &lt;code&gt;&amp;lt;&lt;/code&gt; tipos posteriores en la lista:</target>
        </trans-unit>
        <trans-unit id="ce2405640919d1373253f51ee337515a33b2c957" translate="yes" xml:space="preserve">
          <source>If the user navigates to &lt;code&gt;/articles&lt;/code&gt;, &lt;code&gt;category&lt;/code&gt; will be &lt;code&gt;null&lt;/code&gt;, so the articles won't be filtered.</source>
          <target state="translated">Si el usuario navega a &lt;code&gt;/articles&lt;/code&gt; , la &lt;code&gt;category&lt;/code&gt; ser&amp;aacute; &lt;code&gt;null&lt;/code&gt; , por lo que los art&amp;iacute;culos no se filtrar&amp;aacute;n.</target>
        </trans-unit>
        <trans-unit id="279d9a5b2ba8cd08cea3db56a68648236e5cca17" translate="yes" xml:space="preserve">
          <source>If the user navigates to &lt;code&gt;/articles?category=recent&lt;/code&gt;, &lt;code&gt;category&lt;/code&gt; will be set to &lt;code&gt;&quot;recent&quot;&lt;/code&gt;, so articles will be filtered.</source>
          <target state="translated">Si el usuario navega a &lt;code&gt;/articles?category=recent&lt;/code&gt; , la &lt;code&gt;category&lt;/code&gt; se establecer&amp;aacute; como &lt;code&gt;&quot;recent&quot;&lt;/code&gt; , por lo que los art&amp;iacute;culos se filtrar&amp;aacute;n.</target>
        </trans-unit>
        <trans-unit id="02e95e4157d57cfac7a244dda112f646686cb9ba" translate="yes" xml:space="preserve">
          <source>If the user navigates to &lt;code&gt;/post/5&lt;/code&gt;, the route will then have the &lt;code&gt;post_id&lt;/code&gt; of &lt;code&gt;5&lt;/code&gt; to use to load the correct post. Ember follows the convention of &lt;code&gt;:model-name_id&lt;/code&gt; for two reasons. The first reason is that Routes know how to fetch the right model by default, if you follow the convention. The second is that &lt;code&gt;params&lt;/code&gt; is an object, and can only have one value associated with a key. To put it in code, the following will &lt;em&gt;not&lt;/em&gt; work properly:</source>
          <target state="translated">Si el usuario navega a &lt;code&gt;/post/5&lt;/code&gt; , la ruta tendr&amp;aacute; el &lt;code&gt;post_id&lt;/code&gt; de &lt;code&gt;5&lt;/code&gt; para cargar la publicaci&amp;oacute;n correcta. Ember sigue la convenci&amp;oacute;n de &lt;code&gt;:model-name_id&lt;/code&gt; por dos razones. La primera raz&amp;oacute;n es que Routes sabe c&amp;oacute;mo obtener el modelo correcto de forma predeterminada, si sigue la convenci&amp;oacute;n. La segunda es que &lt;code&gt;params&lt;/code&gt; es un objeto y solo puede tener un valor asociado con una clave. Para ponerlo en c&amp;oacute;digo, lo siguiente &lt;em&gt;no&lt;/em&gt; funcionar&amp;aacute; correctamente:</target>
        </trans-unit>
        <trans-unit id="c3a31aae1d637c261ba9fe34ad046f6866aecc72" translate="yes" xml:space="preserve">
          <source>If the user navigates to &lt;code&gt;/posts&lt;/code&gt;, the current route will be &lt;code&gt;posts.index&lt;/code&gt;, and the &lt;code&gt;posts/index&lt;/code&gt; template will be rendered into the &lt;code&gt;{{outlet}}&lt;/code&gt; in the &lt;code&gt;posts&lt;/code&gt; template.</source>
          <target state="translated">Si el usuario navega a &lt;code&gt;/posts&lt;/code&gt; , la ruta actual ser&amp;aacute; &lt;code&gt;posts.index&lt;/code&gt; , y la plantilla de &lt;code&gt;posts/index&lt;/code&gt; se renderizar&amp;aacute; en el &lt;code&gt;{{outlet}}&lt;/code&gt; en la plantilla de &lt;code&gt;posts&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fdf8d6746bfe9fd95040fa57bf9e3bec00f81028" translate="yes" xml:space="preserve">
          <source>If the user then navigates to &lt;code&gt;/posts/favorites&lt;/code&gt;, Ember will replace the &lt;code&gt;{{outlet}}&lt;/code&gt; in the &lt;code&gt;posts&lt;/code&gt; template with the &lt;code&gt;posts/favorites&lt;/code&gt; template.</source>
          <target state="translated">Si el usuario luego navega a &lt;code&gt;/posts/favorites&lt;/code&gt; , Ember reemplazar&amp;aacute; el &lt;code&gt;{{outlet}}&lt;/code&gt; en la plantilla de &lt;code&gt;posts&lt;/code&gt; con la plantilla de &lt;code&gt;posts/favorites&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9d2d06cf9deeba233a6d61e0e5f3da09de509c5e" translate="yes" xml:space="preserve">
          <source>If the value changes, Ember will automatically update the element's property for you.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93f4c035dd9f3213d6018c14a9b7020020fcff15" translate="yes" xml:space="preserve">
          <source>If the value is an object with a &lt;code&gt;size&lt;/code&gt; property of type number, it is used to check emptiness.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="893b25d26ac630e735aa5ea13aaa149fa275cc33" translate="yes" xml:space="preserve">
          <source>If the value of a class name binding returns a boolean the property name itself will be used as the class name if the property is true. The class name will not be added if the value is &lt;code&gt;false&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">Si el valor de un enlace de nombre de clase devuelve un booleano, el nombre de la propiedad en s&amp;iacute; se utilizar&amp;aacute; como nombre de clase si la propiedad es verdadera. El nombre de la clase no se agregar&amp;aacute; si el valor es &lt;code&gt;false&lt;/code&gt; o &lt;code&gt;undefined&lt;/code&gt; est&amp;aacute; definido .</target>
        </trans-unit>
        <trans-unit id="87ad15db75aac594f2e6e7fd0eeffff25b4cbbb0" translate="yes" xml:space="preserve">
          <source>If the value of a property monitored by &lt;code&gt;attributeBindings&lt;/code&gt; is a boolean, the attribute will be present or absent depending on the value:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87decebdf525330b6ee877826a40a40335518aa3" translate="yes" xml:space="preserve">
          <source>If the value of the property is a Boolean, the attribute is treated as an HTML Boolean attribute. It will be present if the property is &lt;code&gt;true&lt;/code&gt; and omitted if the property is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">Si el valor de la propiedad es booleano, el atributo se trata como un atributo booleano HTML. Estar&amp;aacute; presente si la propiedad es &lt;code&gt;true&lt;/code&gt; y se omitir&amp;aacute; si la propiedad es &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="241dca8b9f537c0fa376af717f72e3c257766c10" translate="yes" xml:space="preserve">
          <source>If the value of the property is a Boolean, the name of that property is added as a dasherized class name.</source>
          <target state="translated">Si el valor de la propiedad es booleano,el nombre de esa propiedad se agrega como un nombre de clase con rayas.</target>
        </trans-unit>
        <trans-unit id="bdd8566ac8c1565ccde6d28b8a4e1e6d3395a910" translate="yes" xml:space="preserve">
          <source>If the various &lt;code&gt;beforeModel&lt;/code&gt;/&lt;code&gt;model&lt;/code&gt;/&lt;code&gt;afterModel&lt;/code&gt; hooks don't immediately resolve, a &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Route.html#event_error&quot;&gt;&lt;code&gt;loading&lt;/code&gt;&lt;/a&gt; event will be fired on that route.</source>
          <target state="translated">Si los diversos &lt;code&gt;beforeModel&lt;/code&gt; / &lt;code&gt;model&lt;/code&gt; / &lt;code&gt;afterModel&lt;/code&gt; no se resuelven inmediatamente, se activar&amp;aacute; un evento de &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Route.html#event_error&quot;&gt; &lt;code&gt;loading&lt;/code&gt; &lt;/a&gt; en esa ruta.</target>
        </trans-unit>
        <trans-unit id="c2e4666654b9c1a3ac255e21bc291056e36bce46" translate="yes" xml:space="preserve">
          <source>If the various &lt;code&gt;beforeModel&lt;/code&gt;/&lt;code&gt;model&lt;/code&gt;/&lt;code&gt;afterModel&lt;/code&gt; hooks don't immediately resolve, a &lt;a href=&quot;https://api.emberjs.com/ember/release/classes/Route/events#loading&quot;&gt;&lt;code&gt;loading&lt;/code&gt;&lt;/a&gt; event will be fired on that route.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d2dc83a6113275844a6385404e0dff7a0770819" translate="yes" xml:space="preserve">
          <source>If there is a bubbling browser event that Ember does not listen for by default, you can specify custom events and their corresponding view method names by setting the application's &lt;code&gt;customEvents&lt;/code&gt; property:</source>
          <target state="translated">Si hay un evento de navegador burbujeante que Ember no escucha de forma predeterminada, puede especificar eventos personalizados y sus correspondientes nombres de m&amp;eacute;todos de vista configurando la propiedad &lt;code&gt;customEvents&lt;/code&gt; de la aplicaci&amp;oacute;n :</target>
        </trans-unit>
        <trans-unit id="51fa00b3c379843b741d583f75db12e57e485f0b" translate="yes" xml:space="preserve">
          <source>If there is any setup required before routing begins, you can implement a &lt;code&gt;ready()&lt;/code&gt; method on your app that will be invoked immediately before routing begins.</source>
          <target state="translated">Si se requiere alguna configuraci&amp;oacute;n antes de que comience el enrutamiento, puede implementar un m&amp;eacute;todo &lt;code&gt;ready()&lt;/code&gt; en su aplicaci&amp;oacute;n que se invocar&amp;aacute; inmediatamente antes de que comience el enrutamiento.</target>
        </trans-unit>
        <trans-unit id="39919c65a7e351de94b6d2929934792f839aabb4" translate="yes" xml:space="preserve">
          <source>If there were several facts about a person, the &lt;code&gt;{{get}}&lt;/code&gt; helper can dynamically pick one:</source>
          <target state="translated">Si hay varios datos sobre una persona, el ayudante &lt;code&gt;{{get}}&lt;/code&gt; puede elegir uno de forma din&amp;aacute;mica:</target>
        </trans-unit>
        <trans-unit id="040b9c243be042545732fd6f0fed8b432ffc6c11" translate="yes" xml:space="preserve">
          <source>If these attributes are set to a quoted string, their values will be set directly on the element, as in the previous example. However, when left unquoted, these values will be bound to a property on the template's current rendering context. For example:</source>
          <target state="translated">Si estos atributos se fijan en una cadena de caracteres cotizados,sus valores se fijarán directamente en el elemento,como en el ejemplo anterior.Sin embargo,si se dejan sin citar,estos valores estarán vinculados a una propiedad en el contexto de representación actual de la plantilla.Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="8377e75793b9a6162245bf517b53edfa881f52e9" translate="yes" xml:space="preserve">
          <source>If this feature is enabled in an application with existing template-only components, the removal of the wrapping &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; will happen to all uses of those template-only components. This can impact style and logic in a breaking manner.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc3d0ffc6cf8e15d223ef4e84caef5ae9e96c60b" translate="yes" xml:space="preserve">
          <source>If this method is overridden, &lt;code&gt;super&lt;/code&gt; must be called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="851c0c99f7d099405eb7957af81bb2f64339fdae" translate="yes" xml:space="preserve">
          <source>If this method returns &lt;code&gt;true&lt;/code&gt; the store will re-fetch a record from the adapter.</source>
          <target state="translated">Si este m&amp;eacute;todo devuelve &lt;code&gt;true&lt;/code&gt; la tienda volver&amp;aacute; a buscar un registro del adaptador.</target>
        </trans-unit>
        <trans-unit id="d324e3672ef44f6d93fce83bbca4610707dcd5bf" translate="yes" xml:space="preserve">
          <source>If this method returns &lt;code&gt;true&lt;/code&gt; the store will re-fetch all records from the adapter.</source>
          <target state="translated">Si este m&amp;eacute;todo devuelve &lt;code&gt;true&lt;/code&gt; la tienda volver&amp;aacute; a buscar todos los registros del adaptador.</target>
        </trans-unit>
        <trans-unit id="75cc3ace761559e8854e4c7f25c8b37d7a0d1e85" translate="yes" xml:space="preserve">
          <source>If this method returns &lt;code&gt;true&lt;/code&gt;, the store will re-fetch a record from the adapter. If this method returns &lt;code&gt;false&lt;/code&gt;, the store will resolve immediately using the cached record.</source>
          <target state="translated">Si este m&amp;eacute;todo devuelve &lt;code&gt;true&lt;/code&gt; , la tienda volver&amp;aacute; a buscar un registro del adaptador. Si este m&amp;eacute;todo devuelve &lt;code&gt;false&lt;/code&gt; , la tienda se resolver&amp;aacute; inmediatamente utilizando el registro en cach&amp;eacute;.</target>
        </trans-unit>
        <trans-unit id="8a94ecc56dd16cd7370ebc544f5bba8000b8d23a" translate="yes" xml:space="preserve">
          <source>If this method returns &lt;code&gt;true&lt;/code&gt;, the store will re-fetch all records from the adapter. If this method returns &lt;code&gt;false&lt;/code&gt;, the store will resolve immediately using the cached records.</source>
          <target state="translated">Si este m&amp;eacute;todo devuelve &lt;code&gt;true&lt;/code&gt; , la tienda volver&amp;aacute; a buscar todos los registros del adaptador. Si este m&amp;eacute;todo devuelve &lt;code&gt;false&lt;/code&gt; , la tienda se resolver&amp;aacute; inmediatamente utilizando los registros en cach&amp;eacute;.</target>
        </trans-unit>
        <trans-unit id="7fe1de714f566113f9e1095029cd1a55fa8e743b" translate="yes" xml:space="preserve">
          <source>If this property is &lt;code&gt;true&lt;/code&gt; the record is in the &lt;code&gt;deleted&lt;/code&gt; state and has been marked for deletion. When &lt;code&gt;isDeleted&lt;/code&gt; is true and &lt;code&gt;hasDirtyAttributes&lt;/code&gt; is true, the record is deleted locally but the deletion was not yet persisted. When &lt;code&gt;isSaving&lt;/code&gt; is true, the change is in-flight. When both &lt;code&gt;hasDirtyAttributes&lt;/code&gt; and &lt;code&gt;isSaving&lt;/code&gt; are false, the change has persisted.</source>
          <target state="translated">Si esta propiedad es &lt;code&gt;true&lt;/code&gt; el registro est&amp;aacute; en estado &lt;code&gt;deleted&lt;/code&gt; y se ha marcado para su eliminaci&amp;oacute;n. Cuando &lt;code&gt;isDeleted&lt;/code&gt; es verdadero y &lt;code&gt;hasDirtyAttributes&lt;/code&gt; es verdadero, el registro se elimina localmente, pero la eliminaci&amp;oacute;n a&amp;uacute;n no persiste. Cuando &lt;code&gt;isSaving&lt;/code&gt; es verdadero, el cambio est&amp;aacute; en curso . Cuando tanto &lt;code&gt;hasDirtyAttributes&lt;/code&gt; como &lt;code&gt;isSaving&lt;/code&gt; son falsos, el cambio ha persistido.</target>
        </trans-unit>
        <trans-unit id="83291299de1e11fbab47209155b14ee2ab32cca9" translate="yes" xml:space="preserve">
          <source>If this property is &lt;code&gt;true&lt;/code&gt; the record is in the &lt;code&gt;dirty&lt;/code&gt; state. The record has local changes that have not yet been saved by the adapter. This includes records that have been created (but not yet saved) or deleted.</source>
          <target state="translated">Si esta propiedad es &lt;code&gt;true&lt;/code&gt; el registro est&amp;aacute; en estado &lt;code&gt;dirty&lt;/code&gt; . El registro tiene cambios locales que el adaptador a&amp;uacute;n no ha guardado. Esto incluye registros que se han creado (pero que a&amp;uacute;n no se han guardado) o eliminado.</target>
        </trans-unit>
        <trans-unit id="c836c4d37d292fa086a390166fb0151de2ecd304" translate="yes" xml:space="preserve">
          <source>If this property is &lt;code&gt;true&lt;/code&gt; the record is in the &lt;code&gt;empty&lt;/code&gt; state. Empty is the first state all records enter after they have been created. Most records created by the store will quickly transition to the &lt;code&gt;loading&lt;/code&gt; state if data needs to be fetched from the server or the &lt;code&gt;created&lt;/code&gt; state if the record is created on the client. A record can also enter the empty state if the adapter is unable to locate the record.</source>
          <target state="translated">Si esta propiedad es &lt;code&gt;true&lt;/code&gt; el registro est&amp;aacute; &lt;code&gt;empty&lt;/code&gt; . Vac&amp;iacute;o es el primer estado en el que entran todos los registros despu&amp;eacute;s de haber sido creados. La mayor&amp;iacute;a de los registros creados por la tienda pasar&amp;aacute;n r&amp;aacute;pidamente al estado de &lt;code&gt;loading&lt;/code&gt; si es necesario obtener datos del servidor o al estado &lt;code&gt;created&lt;/code&gt; si el registro se crea en el cliente. Un registro tambi&amp;eacute;n puede entrar en el estado vac&amp;iacute;o si el adaptador no puede ubicar el registro.</target>
        </trans-unit>
        <trans-unit id="1fdebdb26297a3d7c706023578d53a29fbab68e1" translate="yes" xml:space="preserve">
          <source>If this property is &lt;code&gt;true&lt;/code&gt; the record is in the &lt;code&gt;loaded&lt;/code&gt; state. A record enters this state when its data is populated. Most of a record's lifecycle is spent inside substates of the &lt;code&gt;loaded&lt;/code&gt; state.</source>
          <target state="translated">Si esta propiedad es &lt;code&gt;true&lt;/code&gt; el registro est&amp;aacute; en estado &lt;code&gt;loaded&lt;/code&gt; . Un registro entra en este estado cuando se completan sus datos. La mayor parte del ciclo de vida de un registro se gasta dentro de los subestados del estado &lt;code&gt;loaded&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7851a0f9c463d6001a39d2718b4aa90dc349f25f" translate="yes" xml:space="preserve">
          <source>If this property is &lt;code&gt;true&lt;/code&gt; the record is in the &lt;code&gt;loading&lt;/code&gt; state. A record enters this state when the store asks the adapter for its data. It remains in this state until the adapter provides the requested data.</source>
          <target state="translated">Si esta propiedad es &lt;code&gt;true&lt;/code&gt; el registro est&amp;aacute; en estado de &lt;code&gt;loading&lt;/code&gt; . Un registro entra en este estado cuando la tienda solicita sus datos al adaptador. Permanece en este estado hasta que el adaptador proporciona los datos solicitados.</target>
        </trans-unit>
        <trans-unit id="e7699a766f7c89c2f92ac81ed83cc84f4e13d238" translate="yes" xml:space="preserve">
          <source>If this property is &lt;code&gt;true&lt;/code&gt; the record is in the &lt;code&gt;new&lt;/code&gt; state. A record will be in the &lt;code&gt;new&lt;/code&gt; state when it has been created on the client and the adapter has not yet report that it was successfully saved.</source>
          <target state="translated">Si esta propiedad es &lt;code&gt;true&lt;/code&gt; el registro est&amp;aacute; en el &lt;code&gt;new&lt;/code&gt; estado. Un registro estar&amp;aacute; en el &lt;code&gt;new&lt;/code&gt; estado cuando se haya creado en el cliente y el adaptador a&amp;uacute;n no haya informado de que se guard&amp;oacute; correctamente.</target>
        </trans-unit>
        <trans-unit id="9a4ba5baeab6a21d7653a1dfed3d9b1e76a22ca9" translate="yes" xml:space="preserve">
          <source>If this property is &lt;code&gt;true&lt;/code&gt; the record is in the &lt;code&gt;saving&lt;/code&gt; state. A record enters the saving state when &lt;code&gt;save&lt;/code&gt; is called, but the adapter has not yet acknowledged that the changes have been persisted to the backend.</source>
          <target state="translated">Si esta propiedad es &lt;code&gt;true&lt;/code&gt; el registro est&amp;aacute; en estado de &lt;code&gt;saving&lt;/code&gt; . Un registro entra en estado de guardado cuando se llama a &lt;code&gt;save&lt;/code&gt; , pero el adaptador a&amp;uacute;n no ha reconocido que los cambios se han mantenido en el backend.</target>
        </trans-unit>
        <trans-unit id="a1fb590446fa7f5b09e0e68845c464750d5c8c3e" translate="yes" xml:space="preserve">
          <source>If this property is &lt;code&gt;true&lt;/code&gt; the record is in the &lt;code&gt;valid&lt;/code&gt; state.</source>
          <target state="translated">Si esta propiedad es &lt;code&gt;true&lt;/code&gt; el registro est&amp;aacute; en estado &lt;code&gt;valid&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8730cc7fae55b6eae94385c182c0a926a1323610" translate="yes" xml:space="preserve">
          <source>If true, a deep copy of the object is made.</source>
          <target state="translated">Si es cierto,se hace una copia profunda del objeto.</target>
        </trans-unit>
        <trans-unit id="f0a1e3dc23a22d99d9d87a7ff13bd41d911a9660" translate="yes" xml:space="preserve">
          <source>If users do want to autotrack some values used during construction, they can either create the instance of the helper in &lt;code&gt;runEffect&lt;/code&gt; or &lt;code&gt;getValue&lt;/code&gt;, or they can use the &lt;code&gt;cache&lt;/code&gt; API to autotrack the &lt;code&gt;createHelper&lt;/code&gt; hook themselves. This provides maximum flexibility and expressiveness to manager authors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da29f09761179fad74ec04924a0228f1feedec60" translate="yes" xml:space="preserve">
          <source>If we are currently in the &lt;code&gt;uncommitted&lt;/code&gt; state, calling &lt;code&gt;transitionTo('inFlight')&lt;/code&gt; would transition to the &lt;code&gt;created.inFlight&lt;/code&gt; state, while calling &lt;code&gt;transitionTo('updated.inFlight')&lt;/code&gt; would transition to the &lt;code&gt;updated.inFlight&lt;/code&gt; state.</source>
          <target state="translated">Si actualmente estamos en el estado &lt;code&gt;uncommitted&lt;/code&gt; , llamar a &lt;code&gt;transitionTo('inFlight')&lt;/code&gt; cambiar&amp;iacute;a al estado &lt;code&gt;created.inFlight&lt;/code&gt; , mientras que llamar a &lt;code&gt;transitionTo('updated.inFlight')&lt;/code&gt; pasar&amp;iacute;a al estado &lt;code&gt;updated.inFlight&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d8e2cb1133571d11997b4f71e1fd981031eac0f8" translate="yes" xml:space="preserve">
          <source>If we change the todo's &lt;code&gt;isDone&lt;/code&gt; property, the &lt;code&gt;incomplete&lt;/code&gt; property is updated automatically:</source>
          <target state="translated">Si cambiamos la propiedad &lt;code&gt;isDone&lt;/code&gt; de la tarea , la propiedad &lt;code&gt;incomplete&lt;/code&gt; se actualiza autom&amp;aacute;ticamente:</target>
        </trans-unit>
        <trans-unit id="03a796f4f5221fe61c643f55be75589fd32481e4" translate="yes" xml:space="preserve">
          <source>If we execute the following code without the run loop:</source>
          <target state="translated">Si ejecutamos el siguiente código sin el bucle de ejecución:</target>
        </trans-unit>
        <trans-unit id="45c08b26c843bbbb1271caf5baaac10e3f19f5bf" translate="yes" xml:space="preserve">
          <source>If we had a more detailed message, though, we could use the block to pass it to the dialog.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc313233c2f64df01525eee3945f09f7a71fff7f" translate="yes" xml:space="preserve">
          <source>If we navigate to &lt;a href=&quot;http://localhost:4200&quot;&gt;&lt;code&gt;http://localhost:4200&lt;/code&gt;&lt;/a&gt;, we'll see the default welcome screen. When we edit the &lt;code&gt;app/templates/application.hbs&lt;/code&gt; file, we'll replace that content with our own.</source>
          <target state="translated">Si navegamos a &lt;a href=&quot;http://localhost:4200&quot;&gt; &lt;code&gt;http://localhost:4200&lt;/code&gt; &lt;/a&gt; , veremos la pantalla de bienvenida predeterminada. Cuando editemos el archivo &lt;code&gt;app/templates/application.hbs&lt;/code&gt; , reemplazaremos ese contenido con el nuestro.</target>
        </trans-unit>
        <trans-unit id="e3567eee617ca22beb4de32fb0433223de4f9a43" translate="yes" xml:space="preserve">
          <source>If we open &lt;code&gt;/app/router.js&lt;/code&gt;, we'll see a new line of code for the &lt;strong&gt;about&lt;/strong&gt; route, calling &lt;code&gt;this.route('about')&lt;/code&gt; in the &lt;code&gt;Router.map&lt;/code&gt; function. That new line of code tells the Ember router to run our &lt;code&gt;/app/routes/about.js&lt;/code&gt; file when a visitor navigates to &lt;code&gt;/about&lt;/code&gt;.</source>
          <target state="translated">Si abrimos &lt;code&gt;/app/router.js&lt;/code&gt; , veremos una nueva l&amp;iacute;nea de c&amp;oacute;digo para la ruta &lt;strong&gt;about&lt;/strong&gt; , llamando a &lt;code&gt;this.route('about')&lt;/code&gt; en la funci&amp;oacute;n &lt;code&gt;Router.map&lt;/code&gt; . Esa nueva l&amp;iacute;nea de c&amp;oacute;digo le dice al enrutador Ember que ejecute nuestro archivo &lt;code&gt;/app/routes/about.js&lt;/code&gt; cuando un visitante navegue hacia &lt;code&gt;/about&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a6511b4768aefaf504aaf927b33d7a13c2ab8507" translate="yes" xml:space="preserve">
          <source>If we redirect to &lt;code&gt;posts.post&lt;/code&gt; in the &lt;code&gt;afterModel&lt;/code&gt; hook, &lt;code&gt;afterModel&lt;/code&gt; essentially invalidates the current attempt to enter this route. So the &lt;code&gt;posts&lt;/code&gt; route's &lt;code&gt;beforeModel&lt;/code&gt;, &lt;code&gt;model&lt;/code&gt;, and &lt;code&gt;afterModel&lt;/code&gt; hooks will fire again within the new, redirected transition. This is inefficient, since they just fired before the redirect.</source>
          <target state="translated">Si redirigimos a &lt;code&gt;posts.post&lt;/code&gt; en el gancho &lt;code&gt;afterModel&lt;/code&gt; , &lt;code&gt;afterModel&lt;/code&gt; esencialmente invalida el intento actual de ingresar a esta ruta. Por lo que el &lt;code&gt;posts&lt;/code&gt; de ruta &lt;code&gt;beforeModel&lt;/code&gt; , &lt;code&gt;model&lt;/code&gt; o , y &lt;code&gt;afterModel&lt;/code&gt; ganchos van a disparar de nuevo dentro de la nueva transici&amp;oacute;n, redirigida. Esto es ineficiente, ya que se activaron antes de la redirecci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="d38726979701cf2e7eb64ee3eacbce4a4f16ae05" translate="yes" xml:space="preserve">
          <source>If we tried to use the component like this:</source>
          <target state="translated">Si tratamos de usar el componente de esta manera:</target>
        </trans-unit>
        <trans-unit id="e19c29ef5e1720bd4ab43b1669e74971775233ff" translate="yes" xml:space="preserve">
          <source>If we visit &lt;code&gt;/turing/maths?memberQp=member&amp;amp;interestQp=interest&lt;/code&gt; the model for the &lt;code&gt;member.interest&lt;/code&gt; route is a hash with:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="616062ec77e5fa290a52c7d817433b031fea6ac5" translate="yes" xml:space="preserve">
          <source>If we visit &lt;code&gt;/turing/maths?memberQp=member&amp;amp;interestQp=interest&lt;/code&gt; the model for the &lt;code&gt;member.interest&lt;/code&gt; route is hash with:</source>
          <target state="translated">Si visitamos &lt;code&gt;/turing/maths?memberQp=member&amp;amp;interestQp=interest&lt;/code&gt; el modelo para la ruta &lt;code&gt;member.interest&lt;/code&gt; es hash con:</target>
        </trans-unit>
        <trans-unit id="c354573f1b6355c1ffef8cf030e75c388b88e508" translate="yes" xml:space="preserve">
          <source>If you add the &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Templates.helpers.html#method_action&quot;&gt;&lt;code&gt;{{action}}&lt;/code&gt;&lt;/a&gt; helper to any HTML DOM element, when a user clicks the element, the named event will be sent to the template's corresponding component or controller.</source>
          <target state="translated">Si agrega el ayudante &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Templates.helpers.html#method_action&quot;&gt; &lt;code&gt;{{action}}&lt;/code&gt; &lt;/a&gt; a cualquier elemento DOM de HTML, cuando un usuario hace clic en el elemento, el evento nombrado se enviar&amp;aacute; al componente o controlador correspondiente de la plantilla.</target>
        </trans-unit>
        <trans-unit id="6cb6960c260ff4759523f8e75a8ce68a4dc45f3d" translate="yes" xml:space="preserve">
          <source>If you always have to reload your application after you open the Inspector, that may mean the application's booted state is corrupt. This happens if you call &lt;code&gt;advanceReadiness&lt;/code&gt; or &lt;code&gt;deferReadiness&lt;/code&gt; after the application has already booted.</source>
          <target state="translated">Si siempre tiene que volver a cargar su aplicaci&amp;oacute;n despu&amp;eacute;s de abrir el Inspector, eso puede significar que el estado de inicio de la aplicaci&amp;oacute;n est&amp;aacute; da&amp;ntilde;ado. Esto sucede si llama a &lt;code&gt;advanceReadiness&lt;/code&gt; o &lt;code&gt;deferReadiness&lt;/code&gt; despu&amp;eacute;s de que la aplicaci&amp;oacute;n ya se haya iniciado.</target>
        </trans-unit>
        <trans-unit id="94e40cf1340279ec89f7e933c12cb232801e5b36" translate="yes" xml:space="preserve">
          <source>If you are considering splitting up your application into engines just to reduce the amount of data that needs to be initially downloaded and increase the performance, Engines are not the right solution. Please check out the section on tree shaking and code splitting in projects like &lt;a href=&quot;https://github.com/embroider-build/embroider&quot;&gt;Embroider&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f554ff7ef57e30c46e78bde0db99f982cf334c7" translate="yes" xml:space="preserve">
          <source>If you are having trouble getting a model's data to show up in the template, here are some tips:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5110df871ea94b1b5544ea59e71ed727dd204594" translate="yes" xml:space="preserve">
          <source>If you are having trouble getting this running, other Ember developers would be happy to help! Visit &lt;a href=&quot;https://emberjs.com/community/&quot;&gt; The Ember Community Page&lt;/a&gt; to join chat groups or forums.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02fc04a51830315edd3d40cb31b0b172a3a6bc28" translate="yes" xml:space="preserve">
          <source>If you are implementing an object and want to support this API, just include this mixin in your class and implement the required methods. In your unit tests, be sure to apply the Ember.MutableEnumerableTests to your object.</source>
          <target state="translated">Si estás implementando un objeto y quieres soportar esta API,sólo tienes que incluir este mixin en tu clase e implementar los métodos requeridos.En tus pruebas de unidad,asegúrate de aplicar los Ember.MutableEnumerableTests a tu objeto.</target>
        </trans-unit>
        <trans-unit id="5aec0e791f2e470122fb95fd2d7f58a9fd83671d" translate="yes" xml:space="preserve">
          <source>If you are implementing an object that supports &lt;code&gt;Ember.Array&lt;/code&gt;, call this method just after the array content changes to notify any observers and invalidate any related properties. Pass the starting index of the change as well as a delta of the amounts to change.</source>
          <target state="translated">Si est&amp;aacute; implementando un objeto que admite &lt;code&gt;Ember.Array&lt;/code&gt; , llame a este m&amp;eacute;todo justo despu&amp;eacute;s de que cambie el contenido de la matriz para notificar a los observadores e invalidar cualquier propiedad relacionada. Pase el &amp;iacute;ndice de inicio del cambio, as&amp;iacute; como un delta de las cantidades a cambiar.</target>
        </trans-unit>
        <trans-unit id="a0a65fa4c61541a69d6463b78fcb7b7827736c7f" translate="yes" xml:space="preserve">
          <source>If you are implementing an object that supports &lt;code&gt;Ember.Array&lt;/code&gt;, call this method just before the array content changes to notify any observers and invalidate any related properties. Pass the starting index of the change as well as a delta of the amounts to change.</source>
          <target state="translated">Si est&amp;aacute; implementando un objeto que admita &lt;code&gt;Ember.Array&lt;/code&gt; , llame a este m&amp;eacute;todo justo antes de que cambie el contenido de la matriz para notificar a los observadores e invalidar las propiedades relacionadas. Pase el &amp;iacute;ndice de inicio del cambio, as&amp;iacute; como un delta de las cantidades a cambiar.</target>
        </trans-unit>
        <trans-unit id="1d0874c3278e35f07428b97e10bff3c1ca0e5bb9" translate="yes" xml:space="preserve">
          <source>If you are implementing an object that supports &lt;code&gt;EmberArray&lt;/code&gt;, call this method just after the array content changes to notify any observers and invalidate any related properties. Pass the starting index of the change as well as a delta of the amounts to change.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09ba0aa8d1f4e729d51c4d4c780e264f4fe69366" translate="yes" xml:space="preserve">
          <source>If you are implementing an object that supports &lt;code&gt;EmberArray&lt;/code&gt;, call this method just before the array content changes to notify any observers and invalidate any related properties. Pass the starting index of the change as well as a delta of the amounts to change.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d17f81c61e1cc34e0af5f05548440c43b1537a3" translate="yes" xml:space="preserve">
          <source>If you are mixing native and classic class definitions, then class fields from a parent class can override class properties:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4bb949fd3198381a144f6cde6e4157c5d85ff18" translate="yes" xml:space="preserve">
          <source>If you are subclassing a framework class, like &lt;code&gt;Ember.Component&lt;/code&gt;, and you override the &lt;code&gt;init()&lt;/code&gt; method, make sure you call &lt;code&gt;this._super(...arguments)&lt;/code&gt;! If you don't, a parent class may not have an opportunity to do important setup work, and you'll see strange behavior in your application.</source>
          <target state="translated">Si est&amp;aacute; subclasificando una clase marco, como &lt;code&gt;Ember.Component&lt;/code&gt; , y anula el m&amp;eacute;todo &lt;code&gt;init()&lt;/code&gt; , aseg&amp;uacute;rese de llamar a &lt;code&gt;this._super(...arguments)&lt;/code&gt; . Si no lo hace, es posible que una clase principal no tenga la oportunidad de realizar un trabajo de configuraci&amp;oacute;n importante y ver&amp;aacute; un comportamiento extra&amp;ntilde;o en su aplicaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="9b080b070335ebd39aa6721395984f3ae13b2527" translate="yes" xml:space="preserve">
          <source>If you are updating a classic component to use angle bracket syntax, you can also overwrite the parameter array with a named argument instead. For instance, if &lt;code&gt;my-greeting&lt;/code&gt; had the following implementation:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="542d372672fd8b9690caaaae61face58c8607fa5" translate="yes" xml:space="preserve">
          <source>If you are using &lt;code&gt;links&lt;/code&gt; with sync relationships, you have to use &lt;code&gt;ref.reload&lt;/code&gt; to fetch the resources.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7b3c08a9e261ed7e51cb9cfbaf14505b3b08c92" translate="yes" xml:space="preserve">
          <source>If you are using Ember CLI and have source maps enabled, you can see a list of sources for each deprecation. If you are using Chrome or Firefox, clicking on the source opens the sources panel and takes you to the code that caused the deprecation message to be displayed.</source>
          <target state="translated">Si está usando Ember CLI y tiene los mapas de fuentes activados,puede ver una lista de fuentes para cada deprecación.Si utilizas Chrome o Firefox,al hacer clic en la fuente se abre el panel de fuentes y se accede al código que provocó la aparición del mensaje de deprecación.</target>
        </trans-unit>
        <trans-unit id="2085317bc4faea6a4de712b341bfc17cfdd40d9b" translate="yes" xml:space="preserve">
          <source>If you are using Ember Data, use the &lt;a href=&quot;https://guides.emberjs.com/ember-inspector/&quot;&gt;Ember Inspector&lt;/a&gt; browser plugin to explore the View Tree/Model and Data sections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fc00002ff5ace41bd5218064ecb9b255c697d38" translate="yes" xml:space="preserve">
          <source>If you are using a browser other than Chrome or Firefox, you can use the bookmarklet option to use the Inspector.</source>
          <target state="translated">Si utilizas un navegador que no sea Chrome o Firefox,puedes utilizar la opción de bookmarklet para utilizar el Inspector.</target>
        </trans-unit>
        <trans-unit id="e0ca8c7d0cb99901d0bdbdf2b1526781e6260804" translate="yes" xml:space="preserve">
          <source>If you are using a screen reader while you go through the Guides, we recommend using Firefox and NVDA or Safari and VoiceOver for the best experience.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c02db993349ec94d69d26823994ef170bdefc244" translate="yes" xml:space="preserve">
          <source>If you are using an adapter that supports JSON API, such as Ember's default &lt;a href=&quot;http://emberjs.com/api/data/classes/DS.JSONAPIAdapter.html&quot;&gt;&lt;code&gt;JSONAPIAdapter&lt;/code&gt;&lt;/a&gt;, you can easily add the &lt;code&gt;include&lt;/code&gt; parameter to the server requests created by the &lt;code&gt;findRecord()&lt;/code&gt;, &lt;code&gt;findAll()&lt;/code&gt;, &lt;code&gt;query()&lt;/code&gt; and &lt;code&gt;queryRecord()&lt;/code&gt; methods.</source>
          <target state="translated">Si est&amp;aacute; utilizando un adaptador que admite la API JSON, como el &lt;a href=&quot;http://emberjs.com/api/data/classes/DS.JSONAPIAdapter.html&quot;&gt; &lt;code&gt;JSONAPIAdapter&lt;/code&gt; &lt;/a&gt; predeterminado de Ember , puede agregar f&amp;aacute;cilmente el par&amp;aacute;metro de &lt;code&gt;include&lt;/code&gt; a las solicitudes del servidor creadas por los &lt;code&gt;findRecord()&lt;/code&gt; , &lt;code&gt;findAll()&lt;/code&gt; , &lt;code&gt;query()&lt;/code&gt; y &lt;code&gt;queryRecord()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8aeac181d4eb68e3ad0ffee2491009ad05e95beb" translate="yes" xml:space="preserve">
          <source>If you are using an adapter that supports JSON:API, such as Ember's default &lt;a href=&quot;https://api.emberjs.com/ember-data/release/classes/JSONAPIAdapter&quot;&gt;&lt;code&gt;JSONAPIAdapter&lt;/code&gt;&lt;/a&gt;, you can easily add the &lt;code&gt;include&lt;/code&gt; parameter to the server requests created by the &lt;code&gt;findRecord()&lt;/code&gt;, &lt;code&gt;findAll()&lt;/code&gt;, &lt;code&gt;query()&lt;/code&gt; and &lt;code&gt;queryRecord()&lt;/code&gt; methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d764acef7c7bbc5e829c6f95616d78f3284c261" translate="yes" xml:space="preserve">
          <source>If you are using an adapter that supports server requests capable of returning a single model object, Ember Data provides a convenience method &lt;a href=&quot;http://emberjs.com/api/data/classes/DS.Store.html#method_queryRecord&quot;&gt;&lt;code&gt;store.queryRecord()&lt;/code&gt;&lt;/a&gt;that will return a promise that resolves with that single record. The request is made via a method &lt;code&gt;queryRecord()&lt;/code&gt; defined by the adapter.</source>
          <target state="translated">Si est&amp;aacute; utilizando un adaptador que admite solicitudes de servidor capaces de devolver un &amp;uacute;nico objeto de modelo, Ember Data proporciona un m&amp;eacute;todo de conveniencia &lt;a href=&quot;http://emberjs.com/api/data/classes/DS.Store.html#method_queryRecord&quot;&gt; &lt;code&gt;store.queryRecord()&lt;/code&gt; &lt;/a&gt; que devolver&amp;aacute; una promesa que se resuelve con ese &amp;uacute;nico registro. La solicitud se realiza mediante un m&amp;eacute;todo &lt;code&gt;queryRecord()&lt;/code&gt; definido por el adaptador.</target>
        </trans-unit>
        <trans-unit id="e96a79cb139a8f649f790794e0bdff9099054f66" translate="yes" xml:space="preserve">
          <source>If you are using an adapter that supports server requests capable of returning a single model object, Ember Data provides a convenience method &lt;a href=&quot;https://api.emberjs.com/ember-data/release/classes/Store/methods#queryRecord&quot;&gt;&lt;code&gt;store.queryRecord()&lt;/code&gt;&lt;/a&gt; that will return a promise that resolves with that single record. The request is made via a method &lt;code&gt;queryRecord()&lt;/code&gt; defined by the adapter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95d8be3159389716b3148f93a62087d43361baca" translate="yes" xml:space="preserve">
          <source>If you are using imports with Ember, be sure to import the console:</source>
          <target state="translated">Si estás usando importaciones con Ember,asegúrate de importar la consola:</target>
        </trans-unit>
        <trans-unit id="bcf03c612d1bb7e2876a9d910b681010340f9625" translate="yes" xml:space="preserve">
          <source>If you are using the deprecation workflow process above, you will likely prefer to gather these warnings during runtime execution instead. The way to hide these warnings during compile is to install the &lt;a href=&quot;http://emberobserver.com/addons/ember-cli-template-lint&quot;&gt;ember-cli-template-lint&lt;/a&gt; addon. It suppresses template deprecation warnings during compile in favor of showing them in the browser console during test suite execution or application usage.</source>
          <target state="translated">Si est&amp;aacute; utilizando el proceso de flujo de trabajo en desuso anterior, es probable que prefiera recopilar estas advertencias durante la ejecuci&amp;oacute;n en tiempo de ejecuci&amp;oacute;n. La forma de ocultar estas advertencias durante la compilaci&amp;oacute;n es instalar el complemento &lt;a href=&quot;http://emberobserver.com/addons/ember-cli-template-lint&quot;&gt;ember-cli-template-lint&lt;/a&gt; . Suprime las advertencias de obsolescencia de la plantilla durante la compilaci&amp;oacute;n para mostrarlas en la consola del navegador durante la ejecuci&amp;oacute;n del conjunto de pruebas o el uso de la aplicaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="5bf3e91acda2b1ee1e2586a3e169abc823962aa1" translate="yes" xml:space="preserve">
          <source>If you are working on an application that already has jQuery installed, and would like to remove it, follow these steps.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8668a9bd84a9f875dba373dbe8517a955ffb30f9" translate="yes" xml:space="preserve">
          <source>If you attempt to redirect with the `queryParams` option, make sure that the query params are defined on the controller!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c30fda38e2e251df472575b65702d2eaf2cf3f4" translate="yes" xml:space="preserve">
          <source>If you call &lt;code&gt;this.transitionTo&lt;/code&gt; from inside of this hook, this route will not be entered in favor of the other hook.</source>
          <target state="translated">Si llama a &lt;code&gt;this.transitionTo&lt;/code&gt; desde el interior de este gancho, esta ruta no se ingresar&amp;aacute; a favor del otro gancho.</target>
        </trans-unit>
        <trans-unit id="6ca62192f0257da8b2557bd088e8870cb2af8340" translate="yes" xml:space="preserve">
          <source>If you call it by saying &lt;code&gt;isCold&lt;/code&gt; is true:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57075310fd334438fd7903d2d1a9ce752e58e289" translate="yes" xml:space="preserve">
          <source>If you change the &lt;code&gt;rootURL&lt;/code&gt; in your environment configuration like so:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bae739363801d5e6cc6d0d8792dd88ca5691ec0" translate="yes" xml:space="preserve">
          <source>If you click on a highlighted template or component, the Inspector will select it. You can then click on the backing objects to send them to the object inspector.</source>
          <target state="translated">Si hace clic en una plantilla o un componente resaltado,el Inspector lo seleccionará.Luego puede hacer clic en los objetos de respaldo para enviarlos al inspector de objetos.</target>
        </trans-unit>
        <trans-unit id="d2287c28f4f5653412b32afbd17129cdb53634b7" translate="yes" xml:space="preserve">
          <source>If you created a new instance of &lt;code&gt;App.Post&lt;/code&gt; and added a &lt;code&gt;App.Comment&lt;/code&gt; record to its &lt;code&gt;comments&lt;/code&gt; has-many relationship, you would expect the comment's &lt;code&gt;post&lt;/code&gt; property to be set to the post that contained the has-many.</source>
          <target state="translated">Si cre&amp;oacute; una nueva instancia de &lt;code&gt;App.Post&lt;/code&gt; y agreg&amp;oacute; un registro de &lt;code&gt;App.Comment&lt;/code&gt; a su relaci&amp;oacute;n de &lt;code&gt;comments&lt;/code&gt; has-many, esperar&amp;iacute;a que la propiedad de &lt;code&gt;post&lt;/code&gt; del comentario se establezca en la publicaci&amp;oacute;n que conten&amp;iacute;a has-many.</target>
        </trans-unit>
        <trans-unit id="0e5b9c00b9336b5b8f36146324a24b5c5533ae79" translate="yes" xml:space="preserve">
          <source>If you created a new instance of &lt;code&gt;Post&lt;/code&gt; and added a &lt;code&gt;Comment&lt;/code&gt; record to its &lt;code&gt;comments&lt;/code&gt; has-many relationship, you would expect the comment's &lt;code&gt;post&lt;/code&gt; property to be set to the post that contained the has-many.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3f9d3b25c7b4e867bb39382c93fd6d39c4a0db9" translate="yes" xml:space="preserve">
          <source>If you decide to pass the entire model, be sure to cover this behavior in your &lt;a href=&quot;https://guides.emberjs.com/testing/testing-application/&quot;&gt;application tests&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8407756572fa6be908c47e66d5cf479e675cf223" translate="yes" xml:space="preserve">
          <source>If you deploy your application to an Apache web server, first create a new virtual host for the application. To make sure all routes are handled by &lt;code&gt;index.html&lt;/code&gt;, add the following directive to the application's virtual host configuration:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04958099d387cfcf78491b976ac9baf08916790f" translate="yes" xml:space="preserve">
          <source>If you deploy your application to an Apache web server, first create a new virtual host for the application. To make sure all routes are handled by index.html, add the following directive to the application's virtual host configuration:</source>
          <target state="translated">Si despliega su aplicación en un servidor web Apache,primero cree un nuevo host virtual para la aplicación.Para asegurarse de que todas las rutas son manejadas por index.html,agregue la siguiente directiva a la configuración del host virtual de la aplicación:</target>
        </trans-unit>
        <trans-unit id="7edaadd1ae288e46eaba2dbcf7800139e4992689" translate="yes" xml:space="preserve">
          <source>If you do not define a model hook for a route, it will default to using Ember Data to look up the record, as shown below:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51dadd676b7a862d1fe2e987317aacdc37e88d7d" translate="yes" xml:space="preserve">
          <source>If you do not overwrite &lt;code&gt;attrs&lt;/code&gt; for a specific relationship, the &lt;code&gt;EmbeddedRecordsMixin&lt;/code&gt; will behave in the following way:</source>
          <target state="translated">Si no sobrescribe los &lt;code&gt;attrs&lt;/code&gt; de una relaci&amp;oacute;n espec&amp;iacute;fica, &lt;code&gt;EmbeddedRecordsMixin&lt;/code&gt; se comportar&amp;aacute; de la siguiente manera:</target>
        </trans-unit>
        <trans-unit id="15be62c0da19e937d77b4fb85f8c12202896f973" translate="yes" xml:space="preserve">
          <source>If you do not set it, ember-testing will default to &lt;code&gt;Ember.Test.QUnitAdapter&lt;/code&gt;.</source>
          <target state="translated">Si no lo configura, ember-testing se establecer&amp;aacute; de forma predeterminada en &lt;code&gt;Ember.Test.QUnitAdapter&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ed01276bf29ac4e04e7f20c72e9de1b540acd0f4" translate="yes" xml:space="preserve">
          <source>If you do something like this:</source>
          <target state="translated">Si haces algo como esto:</target>
        </trans-unit>
        <trans-unit id="dbf46c736b0f9766976ce68db0371d4fa3c55b36" translate="yes" xml:space="preserve">
          <source>If you don't have a model object available to pass to &lt;code&gt;{{link-to}}&lt;/code&gt;, an optional string or integer argument can be passed for routes whose paths contain dynamic segments. This argument will become the value of the dynamic segment:</source>
          <target state="translated">Si no tiene un objeto modelo disponible para pasar a &lt;code&gt;{{link-to}}&lt;/code&gt; , se puede pasar una cadena opcional o un argumento entero para las rutas cuyas rutas contienen segmentos din&amp;aacute;micos. Este argumento se convertir&amp;aacute; en el valor del segmento din&amp;aacute;mico:</target>
        </trans-unit>
        <trans-unit id="bfe4c7927bd4d8bebc9503a1e1f59aab5886a891" translate="yes" xml:space="preserve">
          <source>If you ever used the &lt;code&gt;value&lt;/code&gt; parameter of &lt;code&gt;{{action}}&lt;/code&gt;, there is no direct equivalent for &lt;code&gt;{{on}}&lt;/code&gt;. You should instead write an action that gets the value for you.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4838c9403ab831be09597bd4647e9956236410eb" translate="yes" xml:space="preserve">
          <source>If you find yourself forgetting to add the &lt;code&gt;@&lt;/code&gt; symbol before named arguments, it may be helpful to think of how the child template mirrors argument being passed into a component via angle bracket invocation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ee2ed65923b9483ca2bf93bbf891a4edf0375b9" translate="yes" xml:space="preserve">
          <source>If you find yourself needing to both serialize and deserialize the embedded relationship you can use the shorthand option of &lt;code&gt;{ embedded:
'always' }&lt;/code&gt;. The example above could therefore be expressed as such:</source>
          <target state="translated">Si necesita serializar y deserializar la relaci&amp;oacute;n incrustada, puede usar la opci&amp;oacute;n abreviada de &lt;code&gt;{ embedded: 'always' }&lt;/code&gt; . Por lo tanto, el ejemplo anterior podr&amp;iacute;a expresarse como tal:</target>
        </trans-unit>
        <trans-unit id="36d65d3252424dc1d21d1bb0da7fb7f93eae409d" translate="yes" xml:space="preserve">
          <source>If you forget to use &lt;code&gt;this&lt;/code&gt; when you are supposed to, it will fall back to the context of the component or controller context that backs the template. However, the fallback behavior is deprecated and will be removed in future major versions of Ember (4+).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cff7f9cbe7e02c19c460eaef7d9eee134d3a876c" translate="yes" xml:space="preserve">
          <source>If you get a &lt;em&gt;&quot;command not found&quot;&lt;/em&gt; error or an outdated version for Node:</source>
          <target state="translated">Si recibe un error de &lt;em&gt;&quot;comando no encontrado&quot;&lt;/em&gt; o una versi&amp;oacute;n desactualizada para Node:</target>
        </trans-unit>
        <trans-unit id="050770f697b47af665b7cb7ed21973bc0f3c781b" translate="yes" xml:space="preserve">
          <source>If you get an outdated version of npm, run &lt;code&gt;npm install -g npm&lt;/code&gt;.</source>
          <target state="translated">Si obtiene una versi&amp;oacute;n desactualizada de npm, ejecute &lt;code&gt;npm install -g npm&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3941efad566fd9215dca432754b6a4dd21547e3d" translate="yes" xml:space="preserve">
          <source>If you have Ember Inflector (such as if Ember Data is present), pluralize a word. For example, turn &quot;ox&quot; into &quot;oxen&quot;. Example: {{pluralize count myProperty}} {{pluralize 1 &quot;oxen&quot;}} {{pluralize myProperty}} {{pluralize &quot;ox&quot;}}</source>
          <target state="translated">Si tienes Ember Inflector (como si Ember Data está presente),pluraliza una palabra.Por ejemplo,convierta &quot;buey&quot; en &quot;buey&quot;.Ejemplo:{{{pluraliza cuenta miPropiedad}}{{{pluraliza 1 &quot;buey&quot;}}{{{pluralize myProperty}}{{{pluraliza &quot;buey&quot;}}</target>
        </trans-unit>
        <trans-unit id="d4524be3b93c61b0a42e1f99b4c2b8733d7b6111" translate="yes" xml:space="preserve">
          <source>If you have Ember Inflector (such as if Ember Data is present), singularize a word. For example, turn &quot;oxen&quot; into &quot;ox&quot;. Example: {{singularize myProperty}} {{singularize &quot;oxen&quot;}}</source>
          <target state="translated">Si tienes Ember Inflector (como si Ember Data está presente),singulariza una palabra.Por ejemplo,convierta &quot;buey&quot; en &quot;buey&quot;.Ejemplo:{{singularizar mi propiedad}}{{{singularizar &quot;bueyes&quot;}}</target>
        </trans-unit>
        <trans-unit id="f0ca6ab578c960ee09756468c6189ad8631fb397" translate="yes" xml:space="preserve">
          <source>If you have a component named &lt;code&gt;index.hbs&lt;/code&gt;, you can refer to it without the &lt;code&gt;::Index&lt;/code&gt;. So we can refactor &lt;code&gt;app/components/received-message.hbs&lt;/code&gt; to &lt;code&gt;app/components/received-message/index.hbs&lt;/code&gt; and continue to use it as &lt;code&gt;&amp;lt;ReceivedMessage&amp;gt;&lt;/code&gt; without changing all the tags that refer to it:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b28c3a1d07079b2e49ec02c67c669cde2afcb3ed" translate="yes" xml:space="preserve">
          <source>If you have access to the post model you can also pass the model itself:</source>
          <target state="translated">Si tienes acceso al modelo del puesto también puedes pasar el modelo mismo:</target>
        </trans-unit>
        <trans-unit id="a9180a4528e60e9d3c51eec8560de4b65fff3e9e" translate="yes" xml:space="preserve">
          <source>If you have any questions about styling or the contributing process, you can check out our &lt;a href=&quot;https://github.com/ember-learn/guides-source/blob/master/CONTRIBUTING.md&quot;&gt;contributing guide&lt;/a&gt;. If your question persists, reach us in the &lt;code&gt;#dev-ember-learning&lt;/code&gt; channel on the &lt;a href=&quot;https://discordapp.com/invite/zT3asNS&quot;&gt;Ember Community Discord&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a672287c8f9f624ce67a11af94f091cecfea799" translate="yes" xml:space="preserve">
          <source>If you have any questions about styling or the contributing process, you can check out our &lt;a href=&quot;https://github.com/emberjs/guides/blob/master/CONTRIBUTING.md&quot;&gt;contributing guide&lt;/a&gt;. If your question persists, reach us at &lt;code&gt;#-team-learning&lt;/code&gt; on the &lt;a href=&quot;https://ember-community-slackin.herokuapp.com/&quot;&gt;Slack group&lt;/a&gt;.</source>
          <target state="translated">Si tiene alguna pregunta sobre el estilo o el proceso de contribuci&amp;oacute;n, puede consultar nuestra &lt;a href=&quot;https://github.com/emberjs/guides/blob/master/CONTRIBUTING.md&quot;&gt;gu&amp;iacute;a de contribuci&amp;oacute;n&lt;/a&gt; . Si su pregunta persiste, &lt;code&gt;#-team-learning&lt;/code&gt; nosotros en # -team-learning en el &lt;a href=&quot;https://ember-community-slackin.herokuapp.com/&quot;&gt;grupo de Slack&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ab279d6285cffba3506cb605043a0264cf4f78cb" translate="yes" xml:space="preserve">
          <source>If you have defined a file for the post controller, the framework will use it. If it is not defined, a basic &lt;code&gt;Controller&lt;/code&gt; instance would be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca05fcd3765f574749d2c1831b54f9a50540e515" translate="yes" xml:space="preserve">
          <source>If you have implemented your own version of an Ember &lt;code&gt;Enumerable&lt;/code&gt;, or the &lt;code&gt;EmberArray&lt;/code&gt; mixin, in general, you will need to add an additional step to your implementation of &lt;code&gt;objectAt&lt;/code&gt; in order for it to work with tracking:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47f4139d009faf041c23317d45d13e294b0b81ba" translate="yes" xml:space="preserve">
          <source>If you have multiple API formats and the per-type strategy is not viable, one strategy is to write an &lt;code&gt;application&lt;/code&gt; adapter and serializer that make use of &lt;code&gt;options&lt;/code&gt; to specify the desired format when making a request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa01c6c083495f3e21f32dc8be3ac9be518d0e6e" translate="yes" xml:space="preserve">
          <source>If you have multiple APIs or multiple API versions and the single application adapter and per-type strategy does not suite your needs, one strategy is to write an &lt;code&gt;application&lt;/code&gt; adapter and serializer that make use of &lt;code&gt;options&lt;/code&gt; to specify the desired format when making a request, then forwards to the request to the desired adapter or serializer as needed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="418975615623aacf317cf1ad6029649232e3868a" translate="yes" xml:space="preserve">
          <source>If you have one model that has exceptional rules for communicating with its backend than the others you can create a Model specific Adapter by running the command &lt;code&gt;ember generate adapter adapter-name&lt;/code&gt;. For example, running &lt;code&gt;ember generate adapter post&lt;/code&gt; will create the following file:</source>
          <target state="translated">Si tiene un modelo que tiene reglas excepcionales para comunicarse con su backend que los dem&amp;aacute;s, puede crear un Adaptador espec&amp;iacute;fico de modelo ejecutando el comando &lt;code&gt;ember generate adapter adapter-name&lt;/code&gt; . Por ejemplo, ejecutar &lt;code&gt;ember generate adapter post&lt;/code&gt; crear&amp;aacute; el siguiente archivo:</target>
        </trans-unit>
        <trans-unit id="de858082122b328390f807e5b817e03786bd061d" translate="yes" xml:space="preserve">
          <source>If you have successfully selected your repo and it is an Ember application, Netlify will automatically generate the deploy settings as shown below. These instructions assume you do not want to change any of the default settings generated by Netlify. So if everything looks good to you, go ahead and click the &quot;Deploy site&quot; button</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bd2f4b5f660cf934264c9c7691e5f0438a3ae6e" translate="yes" xml:space="preserve">
          <source>If you have the following component:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f547e716ee47725e04d5687132f5a1dd4c2adea9" translate="yes" xml:space="preserve">
          <source>If you have written HTML before, you already know how to write a basic Ember template. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89169a936118dbe820b69e202d432c766cd630f6" translate="yes" xml:space="preserve">
          <source>If you implement the &lt;code&gt;setupController&lt;/code&gt; hook in your Route, it will prevent this default behavior. If you want to preserve that behavior when implementing your &lt;code&gt;setupController&lt;/code&gt; function, make sure to call &lt;code&gt;_super&lt;/code&gt;:</source>
          <target state="translated">Si implementa el gancho &lt;code&gt;setupController&lt;/code&gt; en su ruta, evitar&amp;aacute; este comportamiento predeterminado. Si desea conservar ese comportamiento al implementar su funci&amp;oacute;n &lt;code&gt;setupController&lt;/code&gt; , aseg&amp;uacute;rese de llamar a &lt;code&gt;_super&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="57d93c1f46d3bda439c148f0cf16d47a5d95b022" translate="yes" xml:space="preserve">
          <source>If you implement the &lt;code&gt;setupController&lt;/code&gt; hook in your Route, it will prevent this default behavior. If you want to preserve that behavior when implementing your &lt;code&gt;setupController&lt;/code&gt; function, make sure to call &lt;code&gt;super&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a8f38bbd205394d899a6ad630e4b2daca0b3496" translate="yes" xml:space="preserve">
          <source>If you invoke the component:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad0fd3924de52e4e7b7bf74c3ab5f298e42d47f8" translate="yes" xml:space="preserve">
          <source>If you just want to do some small tweaks on the default JSON, you can call super first and make the tweaks on the returned JSON.</source>
          <target state="translated">Si sólo quieres hacer algunos pequeños ajustes en el JSON por defecto,puedes llamar a super primero y hacer los ajustes en el JSON devuelto.</target>
        </trans-unit>
        <trans-unit id="c3b3fdea41c8c3a9b5dd7c4c1c6a43381b43fcd4" translate="yes" xml:space="preserve">
          <source>If you left &lt;code&gt;ember test&lt;/code&gt; running, it should have automatically updated to show the three tests related to navigating have now passed.</source>
          <target state="translated">Si dej&amp;oacute; la &lt;code&gt;ember test&lt;/code&gt; ejecut&amp;aacute;ndose, deber&amp;iacute;a haberse actualizado autom&amp;aacute;ticamente para mostrar que las tres pruebas relacionadas con la navegaci&amp;oacute;n han pasado.</target>
        </trans-unit>
        <trans-unit id="9cd85c21df78070fa9d86a829ab4d497184a7624" translate="yes" xml:space="preserve">
          <source>If you merely want to watch for the array being changed, like an object being replaced, added or removed, use &lt;code&gt;[]&lt;/code&gt; instead of &lt;code&gt;@each&lt;/code&gt;.</source>
          <target state="translated">Si simplemente desea observar el cambio de la matriz, como un objeto que se reemplaza, agrega o elimina, use &lt;code&gt;[]&lt;/code&gt; en lugar de &lt;code&gt;@each&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2a62c7754c54f828c8a256db150e534eaf100e57" translate="yes" xml:space="preserve">
          <source>If you navigate to &lt;code&gt;slow-model&lt;/code&gt;, in the &lt;code&gt;model&lt;/code&gt; hook using &lt;a href=&quot;https://guides.emberjs.com/models/&quot;&gt;Ember Data&lt;/a&gt;, the query may take a long time to complete. During this time, your UI isn't really giving you any feedback as to what's happening. If you're entering this route after a full page refresh, your UI will be entirely blank, as you have not actually finished fully entering any route and haven't yet displayed any templates. If you're navigating to &lt;code&gt;slow-model&lt;/code&gt; from another route, you'll continue to see the templates from the previous route until the model finish loading, and then, boom, suddenly all the templates for &lt;code&gt;slow-model&lt;/code&gt; load.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30af49987c2096f5472a3a802250139e17570b68" translate="yes" xml:space="preserve">
          <source>If you navigate to &lt;code&gt;slow-model&lt;/code&gt;, in the &lt;code&gt;model&lt;/code&gt; hook, the query may take a long time to complete. During this time, your UI isn't really giving you any feedback as to what's happening. If you're entering this route after a full page refresh, your UI will be entirely blank, as you have not actually finished fully entering any route and haven't yet displayed any templates. If you're navigating to &lt;code&gt;slow-model&lt;/code&gt; from another route, you'll continue to see the templates from the previous route until the model finish loading, and then, boom, suddenly all the templates for &lt;code&gt;slow-model&lt;/code&gt; load.</source>
          <target state="translated">Si navega a &lt;code&gt;slow-model&lt;/code&gt; , en el enlace de &lt;code&gt;model&lt;/code&gt; o , la consulta puede tardar mucho en completarse. Durante este tiempo, su interfaz de usuario realmente no le da ning&amp;uacute;n comentario sobre lo que est&amp;aacute; sucediendo. Si ingresa a esta ruta despu&amp;eacute;s de actualizar la p&amp;aacute;gina completa, su interfaz de usuario estar&amp;aacute; completamente en blanco, ya que en realidad no ha terminado de ingresar por completo a ninguna ruta y a&amp;uacute;n no ha mostrado ninguna plantilla. Si est&amp;aacute; navegando a &lt;code&gt;slow-model&lt;/code&gt; desde otra ruta, continuar&amp;aacute; viendo las plantillas de la ruta anterior hasta que el modelo termine de cargarse, y luego, boom, de repente todas las plantillas para carga de &lt;code&gt;slow-model&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="497c297297a42971d33f52d637d27a21bee31444" translate="yes" xml:space="preserve">
          <source>If you need a link to be 'active' even when it doesn't match the current route, you can use the &lt;code&gt;current-when&lt;/code&gt; argument.</source>
          <target state="translated">Si necesita que un enlace est&amp;eacute; 'activo' incluso cuando no coincide con la ruta actual, puede usar el argumento &lt;code&gt;current-when&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ec0d71e422da23306886993e75838bdfc79cd340" translate="yes" xml:space="preserve">
          <source>If you need a query param change to trigger a full transition, and thus the method hooks, you can use the optional &lt;code&gt;queryParams&lt;/code&gt; configuration hash on the &lt;code&gt;Route&lt;/code&gt;. If you have a &lt;code&gt;category&lt;/code&gt; query param and you want it to trigger a model refresh, you can set it as follows:</source>
          <target state="translated">Si necesita un cambio de par&amp;aacute;metro de consulta para desencadenar una transici&amp;oacute;n completa y, por lo tanto, el m&amp;eacute;todo se engancha, puede usar el hash de configuraci&amp;oacute;n opcional &lt;code&gt;queryParams&lt;/code&gt; en la &lt;code&gt;Route&lt;/code&gt; . Si tiene un par&amp;aacute;metro de consulta de &lt;code&gt;category&lt;/code&gt; y desea que active una actualizaci&amp;oacute;n del modelo, puede configurarlo de la siguiente manera:</target>
        </trans-unit>
        <trans-unit id="d724bbe4ae41c1f103065e3b933b2d51b2875afe" translate="yes" xml:space="preserve">
          <source>If you need an observer to fire as part of the initialization process, you cannot rely on the side effect of &lt;code&gt;set&lt;/code&gt;. Instead, specify that the observer should also run after &lt;code&gt;init&lt;/code&gt; by using &lt;a href=&quot;http://emberjs.com/api/classes/Ember.html#method_on&quot;&gt;&lt;code&gt;Ember.on()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">Si necesita que un observador dispare como parte del proceso de inicializaci&amp;oacute;n, no puede confiar en el efecto secundario de &lt;code&gt;set&lt;/code&gt; . En su lugar, especifique que el observador tambi&amp;eacute;n debe ejecutarse despu&amp;eacute;s de &lt;code&gt;init&lt;/code&gt; utilizando &lt;a href=&quot;http://emberjs.com/api/classes/Ember.html#method_on&quot;&gt; &lt;code&gt;Ember.on()&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="8194f56ab51b41e59b58c0ce4a9f3a5e102319b8" translate="yes" xml:space="preserve">
          <source>If you need any help, check out the &lt;a href=&quot;https://emberjs.com/community/&quot;&gt;chat and forums&lt;/a&gt;. If you spot something to improve in this guide, you can help out by &lt;a href=&quot;https://github.com/ember-learn/guides-source&quot;&gt;filing an issue or a PR&lt;/a&gt;. Thank you!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef65177e5991b77bbaadb6f092759d702f98156d" translate="yes" xml:space="preserve">
          <source>If you need better control over normalization or want access to the records being added or updated in the store, we recommended using &lt;code&gt;store.push&lt;/code&gt; over &lt;code&gt;store.pushPayload&lt;/code&gt; after normalizing the payload directly. This can even take advantage of an existing serializer for the format the data is in, for example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00ee5c2474e208e4c0e80a0a8928a7377fd5c3e5" translate="yes" xml:space="preserve">
          <source>If you need help along the way, visit &lt;a href=&quot;https://emberjs.com/community/&quot;&gt;the Ember Community chat and forums&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88834c589ade40c2c8a09cd64ac7b6294d15d58a" translate="yes" xml:space="preserve">
          <source>If you need information about the current model in order to decide about redirection, you can use the &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Route.html#method_afterModel&quot;&gt;&lt;code&gt;afterModel()&lt;/code&gt;&lt;/a&gt; hook. It receives the resolved model as the first parameter and the transition as the second one. For example:</source>
          <target state="translated">Si necesita informaci&amp;oacute;n sobre el modelo actual para decidir sobre la redirecci&amp;oacute;n, puede usar el gancho &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Route.html#method_afterModel&quot;&gt; &lt;code&gt;afterModel()&lt;/code&gt; &lt;/a&gt; . Recibe el modelo resuelto como primer par&amp;aacute;metro y la transici&amp;oacute;n como segundo. Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="faae48b4596acc583aff9fc0a6d2a7b53e83e00e" translate="yes" xml:space="preserve">
          <source>If you need information about the current model in order to decide about redirection, you can use the &lt;a href=&quot;https://api.emberjs.com/ember/release/classes/Route/methods#afterModel&quot;&gt;&lt;code&gt;afterModel()&lt;/code&gt;&lt;/a&gt; hook. It receives the resolved model as the first parameter and the transition as the second one. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aed16466190ebebfa81760066ddffafa13562219" translate="yes" xml:space="preserve">
          <source>If you need the default handler to trigger you should either register your own event handler, or use event methods on your view class. See &lt;a href=&quot;https://api.emberjs.com/ember/release/classes/Component&quot;&gt;&quot;Responding to Browser Events&quot;&lt;/a&gt; in the documentation for &lt;code&gt;Component&lt;/code&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f2efb535289b5ceb3b97d9e008c5567cafd3e85" translate="yes" xml:space="preserve">
          <source>If you need the default handler to trigger you should either register your own event handler, or use event methods on your view class. See &lt;a href=&quot;https://emberjs.com/api/classes/Ember.Component#responding-to-browser-events&quot;&gt;&quot;Responding to Browser Events&quot;&lt;/a&gt; in the documentation for Ember.Component for more information.</source>
          <target state="translated">Si necesita que se active el controlador predeterminado, debe registrar su propio controlador de eventos o usar m&amp;eacute;todos de eventos en su clase de vista. Consulte &lt;a href=&quot;https://emberjs.com/api/classes/Ember.Component#responding-to-browser-events&quot;&gt;&quot;Respuesta a eventos del navegador&quot;&lt;/a&gt; en la documentaci&amp;oacute;n de Ember.Component para obtener m&amp;aacute;s informaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="8bac10c515e6ab82de956621c8f946ca14bbd822" translate="yes" xml:space="preserve">
          <source>If you need to customize the behavior of the component you'll need to define a subclass of &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Component.html&quot;&gt;&lt;code&gt;Ember.Component&lt;/code&gt;&lt;/a&gt;. For example, you would need a custom subclass if you wanted to change a component's element, respond to actions from the component's template, or manually make changes to the component's element using JavaScript.</source>
          <target state="translated">Si necesita personalizar el comportamiento del componente, deber&amp;aacute; definir una subclase de &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Component.html&quot;&gt; &lt;code&gt;Ember.Component&lt;/code&gt; &lt;/a&gt; . Por ejemplo, necesitar&amp;iacute;a una subclase personalizada si desea cambiar el elemento de un componente, responder a las acciones de la plantilla del componente o realizar cambios manualmente en el elemento del componente mediante JavaScript.</target>
        </trans-unit>
        <trans-unit id="9df4cba3c6b0ffa62125321a7efb00530f8287dc" translate="yes" xml:space="preserve">
          <source>If you need to display all of the keys or values of a JavaScript object in your template, you can use the &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Templates.helpers.html#method_each-in&quot;&gt;&lt;code&gt;{{#each-in}}&lt;/code&gt;&lt;/a&gt; helper:</source>
          <target state="translated">Si necesita mostrar todas las claves o valores de un objeto JavaScript en su plantilla, puede usar el ayudante &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Templates.helpers.html#method_each-in&quot;&gt; &lt;code&gt;{{#each-in}}&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="72a96970d77e6ec9eaf2d7a5b387d36f437c4840" translate="yes" xml:space="preserve">
          <source>If you need to examine some application state to figure out where to redirect, you might use a &lt;a href=&quot;https://guides.emberjs.com/applications/services&quot;&gt;service&lt;/a&gt;.</source>
          <target state="translated">Si necesita examinar el estado de alguna aplicaci&amp;oacute;n para averiguar a d&amp;oacute;nde redireccionar, puede utilizar un &lt;a href=&quot;https://guides.emberjs.com/applications/services&quot;&gt;servicio&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7d84d6291ee14b7d0aa289a53c86db413adf435d" translate="yes" xml:space="preserve">
          <source>If you need to examine some application state to figure out where to redirect, you might use a &lt;a href=&quot;https://guides.emberjs.com/services/&quot;&gt;service&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6681b4e459475331a528ae5b4e770bf12759151" translate="yes" xml:space="preserve">
          <source>If you need to import an asset in only one environment you can wrap &lt;code&gt;app.import&lt;/code&gt; in an &lt;code&gt;if&lt;/code&gt; statement. For assets needed during testing, you should also use the &lt;code&gt;{type: 'test'}&lt;/code&gt; option to make sure they are available in test mode.</source>
          <target state="translated">Si necesita importar un activo en un solo entorno, puede envolver &lt;code&gt;app.import&lt;/code&gt; en una declaraci&amp;oacute;n &lt;code&gt;if&lt;/code&gt; . Para los activos necesarios durante la prueba, tambi&amp;eacute;n debe usar la opci&amp;oacute;n &lt;code&gt;{type: 'test'}&lt;/code&gt; para asegurarse de que est&amp;eacute;n disponibles en el modo de prueba.</target>
        </trans-unit>
        <trans-unit id="158c3d5733668e2190fcc1808c4d079b37de7c8b" translate="yes" xml:space="preserve">
          <source>If you need to integrate your Ember.js app with a server that does not have an &lt;a href=&quot;http://emberobserver.com/categories/ember-data-adapters&quot;&gt;adapter&lt;/a&gt; available (for example, you hand-rolled an API server that does not adhere to any JSON specification), Ember Data is designed to &lt;strong&gt;be configurable&lt;/strong&gt; to work with whatever data your server returns.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40c29d1284c4853732d7d5f192b8747da6f20adc" translate="yes" xml:space="preserve">
          <source>If you need to integrate your Ember.js app with a server that does not have an adapter available (for example, you hand-rolled an API server that does not adhere to any JSON specification), Ember Data is designed to be configurable to work with whatever data your server returns.</source>
          <target state="translated">Si necesita integrar su aplicación Ember.js con un servidor que no tiene un adaptador disponible (por ejemplo,ha enrollado a mano un servidor API que no se adhiere a ninguna especificación JSON),Ember Data está diseñado para ser configurable para trabajar con cualquier dato que su servidor devuelva.</target>
        </trans-unit>
        <trans-unit id="de7d7122515bf7d06bddb4e38b73ae8ca2a365ba" translate="yes" xml:space="preserve">
          <source>If you need to load certain dependencies before others, you can set the &lt;code&gt;prepend&lt;/code&gt; property equal to &lt;code&gt;true&lt;/code&gt; on the second argument of &lt;code&gt;import()&lt;/code&gt;. This will prepend the dependency to the vendor file instead of appending it, which is the default behavior.</source>
          <target state="translated">Si necesita cargar ciertas dependencias antes que otras, puede establecer la propiedad &lt;code&gt;prepend&lt;/code&gt; como &lt;code&gt;true&lt;/code&gt; en el segundo argumento de &lt;code&gt;import()&lt;/code&gt; . Esto antepondr&amp;aacute; la dependencia al archivo del proveedor en lugar de agregarlo, que es el comportamiento predeterminado.</target>
        </trans-unit>
        <trans-unit id="f303fe291b7d523c9c33dee9ed5b8dbc10df4926" translate="yes" xml:space="preserve">
          <source>If you need to observe a computed property but aren't currently retrieving it, get it in your &lt;code&gt;init()&lt;/code&gt; method.</source>
          <target state="translated">Si necesita observar una propiedad calculada pero no la est&amp;aacute; recuperando actualmente, cons&amp;iacute;gala en su m&amp;eacute;todo &lt;code&gt;init()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8fdaf5661fc45e1d9858c16ccde11cb3e1e57f2c" translate="yes" xml:space="preserve">
          <source>If you need to override this behavior specify &lt;code&gt;preventDefault=false&lt;/code&gt; in your template:</source>
          <target state="translated">Si necesita anular este comportamiento, especifique &lt;code&gt;preventDefault=false&lt;/code&gt; en su plantilla:</target>
        </trans-unit>
        <trans-unit id="c4cc8359429799a1f5a564a7427ed614eae9b9f1" translate="yes" xml:space="preserve">
          <source>If you need to provide a default value, you'll have to do it via a getter:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a3cad04dcb61c346b39fde375faf60c5fc74556" translate="yes" xml:space="preserve">
          <source>If you need to support multiple API versions for the same type, the per-type strategy for defining adapters might not be adequate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e761d4b8c636b397c5f7b9d1253c1775b42ff269" translate="yes" xml:space="preserve">
          <source>If you need to use different assets in different environments, specify an object as the first parameter. That object's key should be the environment name, and the value should be the asset to use in that environment.</source>
          <target state="translated">Si necesita utilizar diferentes activos en diferentes entornos,especifique un objeto como primer parámetro.La clave de ese objeto debe ser el nombre del entorno,y el valor debe ser el activo a utilizar en ese entorno.</target>
        </trans-unit>
        <trans-unit id="a2748d03900395392b183adad53d0f84874404d9" translate="yes" xml:space="preserve">
          <source>If you never &lt;code&gt;get()&lt;/code&gt; a computed property, its observers will not fire even if its dependent keys change. You can think of the value changing from one unknown value to another.</source>
          <target state="translated">Si nunca &lt;code&gt;get()&lt;/code&gt; una propiedad calculada, sus observadores no disparar&amp;aacute;n incluso si cambian sus claves dependientes. Puede pensar en el cambio de valor de un valor desconocido a otro.</target>
        </trans-unit>
        <trans-unit id="290a7c070a7a155947aea4a787111c087279ce1e" translate="yes" xml:space="preserve">
          <source>If you only want to return the first matched value, rather than an Array containing all of the matched values, you can use &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Enumerable.html#method_find&quot;&gt;&lt;code&gt;find()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Enumerable.html#method_findBy&quot;&gt;&lt;code&gt;findBy()&lt;/code&gt;&lt;/a&gt;, which work like &lt;code&gt;filter()&lt;/code&gt; and &lt;code&gt;filterBy()&lt;/code&gt;, but return only one item.</source>
          <target state="translated">Si solo desea devolver el primer valor coincidente, en lugar de una matriz que contenga todos los valores coincidentes, puede usar &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Enumerable.html#method_find&quot;&gt; &lt;code&gt;find()&lt;/code&gt; &lt;/a&gt; y &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Enumerable.html#method_findBy&quot;&gt; &lt;code&gt;findBy()&lt;/code&gt; &lt;/a&gt; , que funcionan como &lt;code&gt;filter()&lt;/code&gt; y &lt;code&gt;filterBy()&lt;/code&gt; , pero devuelven solo un elemento.</target>
        </trans-unit>
        <trans-unit id="5934dedd9d94074b98416c3f66716aa0a818fcf2" translate="yes" xml:space="preserve">
          <source>If you open &lt;code&gt;config/targets.js&lt;/code&gt;, you will find the following code:</source>
          <target state="translated">Si abre &lt;code&gt;config/targets.js&lt;/code&gt; , encontrar&amp;aacute; el siguiente c&amp;oacute;digo:</target>
        </trans-unit>
        <trans-unit id="7caff3e3aadb7055ccc3d3a2a7f83f3ed69bee63" translate="yes" xml:space="preserve">
          <source>If you open the acceptance test we created (&lt;code&gt;/tests/acceptance/list-rentals-test.js&lt;/code&gt;), you'll see our goals, which include the ability to navigate to an &lt;code&gt;about&lt;/code&gt; page and a &lt;code&gt;contact&lt;/code&gt; page. Let's start there.</source>
          <target state="translated">Si abre la prueba de aceptaci&amp;oacute;n que creamos ( &lt;code&gt;/tests/acceptance/list-rentals-test.js&lt;/code&gt; ), ver&amp;aacute; nuestros objetivos, que incluyen la capacidad de navegar a una p&amp;aacute;gina &lt;code&gt;about&lt;/code&gt; y una p&amp;aacute;gina de &lt;code&gt;contact&lt;/code&gt; o . Empecemos por ah&amp;iacute;.</target>
        </trans-unit>
        <trans-unit id="5b59bb67b3aaea866b51f345ebc86977c5eaa3eb" translate="yes" xml:space="preserve">
          <source>If you open up your Router (&lt;code&gt;app/router.js&lt;/code&gt;) you may notice that the rentals line has changed. This extra &lt;code&gt;function() {}&lt;/code&gt; is required because it needs a child route, the &lt;code&gt;this.route('index', { path: '/'});&lt;/code&gt; is implied.</source>
          <target state="translated">Si abre su enrutador ( &lt;code&gt;app/router.js&lt;/code&gt; ), puede notar que la l&amp;iacute;nea de alquiler ha cambiado. Esta &lt;code&gt;function() {}&lt;/code&gt; adicional () {} es necesaria porque necesita una ruta secundaria, &lt;code&gt;this.route('index', { path: '/'});&lt;/code&gt; est&amp;aacute; impl&amp;iacute;cito</target>
        </trans-unit>
        <trans-unit id="203ef543a812b95ad545379c5a602a48962c876c" translate="yes" xml:space="preserve">
          <source>If you override this method, you should implement it so that it will always return the same value each time it is called. If your enumerable contains only one object, this method should always return that object. If your enumerable is empty, this method should return &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">Si anula este m&amp;eacute;todo, debe implementarlo para que siempre devuelva el mismo valor cada vez que se llame. Si su enumerable contiene solo un objeto, este m&amp;eacute;todo siempre debe devolver ese objeto. Si su enumerable est&amp;aacute; vac&amp;iacute;o, este m&amp;eacute;todo deber&amp;iacute;a devolver &lt;code&gt;undefined&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b26a4133a45f8a4bcb25a8423fcf62070a44fd2e" translate="yes" xml:space="preserve">
          <source>If you pass a function as an argument, it will be used as a getter. A computed property defined in this way might look like this:</source>
          <target state="translated">Si pasas una función como argumento,se usará como un getter.Una propiedad calculada definida de esta manera podría verse así:</target>
        </trans-unit>
        <trans-unit id="0db351d693a17fad1ccc179037e0ee3a7a168395" translate="yes" xml:space="preserve">
          <source>If you pass a promise to &lt;code&gt;push&lt;/code&gt;, Ember Data will not ask the adapter for the data if another attempt to fetch it is made in the interim. When the promise resolves, the underlying object is updated with the new data, and the promise returned by &lt;em&gt;this function&lt;/em&gt; is resolved with that object.</source>
          <target state="translated">Si pasa una promesa de &lt;code&gt;push&lt;/code&gt; , Ember Data no le pedir&amp;aacute; al adaptador los datos si se hace otro intento de recuperarlos mientras tanto. Cuando se resuelve la promesa, el objeto subyacente se actualiza con los nuevos datos y la promesa devuelta por &lt;em&gt;esta funci&amp;oacute;n&lt;/em&gt; se resuelve con ese objeto.</target>
        </trans-unit>
        <trans-unit id="c32e28cc7e1a747028f8fe3644203a58979ea8ae" translate="yes" xml:space="preserve">
          <source>If you pass a start and length that is beyond the length this method will throw an &lt;code&gt;OUT_OF_RANGE_EXCEPTION&lt;/code&gt;.</source>
          <target state="translated">Si pasa un inicio y una longitud que superan la longitud, este m&amp;eacute;todo arrojar&amp;aacute; un &lt;code&gt;OUT_OF_RANGE_EXCEPTION&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="849661ff38c50c4f8caaa8a60b28e2a8361af87c" translate="yes" xml:space="preserve">
          <source>If you pass a start and length that is beyond the length this method will throw an assertion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d25adfaed8206771f792034fa41b88029aae0de" translate="yes" xml:space="preserve">
          <source>If you pass an object on the &lt;code&gt;adapterOptions&lt;/code&gt; property of the options argument it will be passed to you adapter via the &lt;code&gt;snapshotRecordArray&lt;/code&gt;</source>
          <target state="translated">Si pasa un objeto en la propiedad &lt;code&gt;adapterOptions&lt;/code&gt; del argumento de opciones, se le pasar&amp;aacute; a su adaptador a trav&amp;eacute;s de &lt;code&gt;snapshotRecordArray&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0c84364f02074f10e08b345a560c55a004ecc054" translate="yes" xml:space="preserve">
          <source>If you pass an object on the &lt;code&gt;adapterOptions&lt;/code&gt; property of the options argument it will be passed to you adapter via the snapshot</source>
          <target state="translated">Si pasa un objeto en la propiedad &lt;code&gt;adapterOptions&lt;/code&gt; del argumento de opciones, se le pasar&amp;aacute; a su adaptador a trav&amp;eacute;s de la instant&amp;aacute;nea</target>
        </trans-unit>
        <trans-unit id="dc47a23b1e48703a5bf76b84f8654a8e0198e87f" translate="yes" xml:space="preserve">
          <source>If you pass an object on the &lt;code&gt;adapterOptions&lt;/code&gt; property of the options argument it will be passed to your adapter via the snapshot</source>
          <target state="translated">Si pasa un objeto en la propiedad &lt;code&gt;adapterOptions&lt;/code&gt; del argumento de opciones, se pasar&amp;aacute; a su adaptador a trav&amp;eacute;s de la instant&amp;aacute;nea</target>
        </trans-unit>
        <trans-unit id="11e7fddfd8190f7492e6e2e7397155227ee1d859" translate="yes" xml:space="preserve">
          <source>If you pass an object using the &lt;code&gt;adapterOptions&lt;/code&gt; property of the options argument it will be passed to your adapter via the snapshot.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18c756f562b2c0db203890e91afbee2cb6f95d02" translate="yes" xml:space="preserve">
          <source>If you plan to run on IE8 and older browsers then you should use this method anytime you want to retrieve a property on an object that you don't know for sure is private. (Properties beginning with an underscore '_' are considered private.)</source>
          <target state="translated">Si planea correr en IE8 y en navegadores más antiguos,entonces debería usar este método cada vez que quiera recuperar una propiedad de un objeto que no sabe con seguridad que es privado.(Las propiedades que empiezan con un guión bajo '_' se consideran privadas).</target>
        </trans-unit>
        <trans-unit id="62a361f4cfeb1605136c1e2f03d684e5679cab5e" translate="yes" xml:space="preserve">
          <source>If you previously did something like this in your &lt;code&gt;didReceiveAttrs&lt;/code&gt; or &lt;code&gt;didUpdateAttrs&lt;/code&gt; hooks:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c3a5683dbdca620d5608fd8ce10038d9f93b257" translate="yes" xml:space="preserve">
          <source>If you return a &lt;code&gt;SafeString&lt;/code&gt; (a string that has been wrapped in a call to &lt;a href=&quot;http://emberjs.com/api/classes/Ember.String.html#method_htmlSafe&quot;&gt;&lt;code&gt;htmlSafe&lt;/code&gt;&lt;/a&gt;), Ember knows that you have vouched on its behalf that it contains no malicious HTML.</source>
          <target state="translated">Si devuelve &lt;code&gt;SafeString&lt;/code&gt; (una cadena que se ha envuelto en una llamada a &lt;a href=&quot;http://emberjs.com/api/classes/Ember.String.html#method_htmlSafe&quot;&gt; &lt;code&gt;htmlSafe&lt;/code&gt; &lt;/a&gt; ), Ember sabe que ha respondido en su nombre que no contiene HTML malicioso.</target>
        </trans-unit>
        <trans-unit id="b5bf5f22e38a7b9d408efa042bc13f452906a0e1" translate="yes" xml:space="preserve">
          <source>If you return a Promise from the model hook, your route will wait for the Promise to resolve before it renders the template.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f382ae0c61dd6994a9d388d1dd482462635deea" translate="yes" xml:space="preserve">
          <source>If you return a promise from a QUnit test, the test will wait to finish until that promise is resolved. In this case our test completes when the &lt;code&gt;wait&lt;/code&gt; helper decides that processing is finished, and the function we provide that asserts the resulting state is completed.</source>
          <target state="translated">Si devuelve una promesa de una prueba QUnit, la prueba esperar&amp;aacute; a finalizar hasta que se resuelva esa promesa. En este caso, nuestra prueba se completa cuando el asistente de &lt;code&gt;wait&lt;/code&gt; decide que el procesamiento ha terminado y la funci&amp;oacute;n que proporcionamos que afirma el estado resultante se completa.</target>
        </trans-unit>
        <trans-unit id="c5e9fc68b7b53523376705da482b30ef38019d31" translate="yes" xml:space="preserve">
          <source>If you return a value from the &lt;code&gt;before&lt;/code&gt; callback, that same value will be passed as a fourth parameter to the &lt;code&gt;after&lt;/code&gt; callback.</source>
          <target state="translated">Si devuelve un valor de la devoluci&amp;oacute;n de llamada &lt;code&gt;before&lt;/code&gt; , ese mismo valor se pasar&amp;aacute; como un cuarto par&amp;aacute;metro a la devoluci&amp;oacute;n de llamada &lt;code&gt;after&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="46c6634c4b9b7bf10ba2af3406cefea4164a13ec" translate="yes" xml:space="preserve">
          <source>If you serve the app and go to &lt;code&gt;localhost:4200&lt;/code&gt; in your web browser, you'll see the HTML rendered. At this point, it will still be unstyled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87732ef1ec5fe1e0b3a917f6a4e23be02afa2336" translate="yes" xml:space="preserve">
          <source>If you set coalesceFindRequests to &lt;code&gt;true&lt;/code&gt; it will instead trigger the following request:</source>
          <target state="translated">Si establece coalesceFindRequests en &lt;code&gt;true&lt;/code&gt; ,en su lugar, activar&amp;aacute; la siguiente solicitud:</target>
        </trans-unit>
        <trans-unit id="441f3c3fd008f367cffb5c9b576b099fe6660096" translate="yes" xml:space="preserve">
          <source>If you specify only one model, it will represent the innermost dynamic segment &lt;code&gt;:comment_id&lt;/code&gt;. The &lt;code&gt;:photo_id&lt;/code&gt; segment will use the current photo.</source>
          <target state="translated">Si especifica solo un modelo, representar&amp;aacute; el segmento din&amp;aacute;mico m&amp;aacute;s interno &lt;code&gt;:comment_id&lt;/code&gt; . El segmento &lt;code&gt;:photo_id&lt;/code&gt; utilizar&amp;aacute; la foto actual.</target>
        </trans-unit>
        <trans-unit id="292c150c28f547582fbd92a1d2c999f982f9aef9" translate="yes" xml:space="preserve">
          <source>If you take a look at &lt;code&gt;app/router.js&lt;/code&gt;, you'll notice some syntax that may be unfamiliar to you.</source>
          <target state="translated">Si &lt;code&gt;app/router.js&lt;/code&gt; un vistazo a app / router.js , notar&amp;aacute;s una sintaxis que quiz&amp;aacute;s no te resulte familiar.</target>
        </trans-unit>
        <trans-unit id="9fa9b8c368629c5d84425190de4514b42126e05e" translate="yes" xml:space="preserve">
          <source>If you try to set a property on a destroyed object, an exception will be raised.</source>
          <target state="translated">Si intentas poner una propiedad en un objeto destruido,se planteará una excepción.</target>
        </trans-unit>
        <trans-unit id="78741f071d4144013b84b4f1ab959dd2d82ae912" translate="yes" xml:space="preserve">
          <source>If you try to set a value on a key that has a computed property handler defined (see the &lt;code&gt;get()&lt;/code&gt; method for an example), then &lt;code&gt;set()&lt;/code&gt; will call that method, passing both the value and key instead of simply changing the value itself. This is useful for those times when you need to implement a property that is composed of one or more member properties.</source>
          <target state="translated">Si intenta establecer un valor en una clave que tiene definido un controlador de propiedad calculado (consulte el m&amp;eacute;todo &lt;code&gt;get()&lt;/code&gt; para ver un ejemplo), entonces &lt;code&gt;set()&lt;/code&gt; llamar&amp;aacute; a ese m&amp;eacute;todo, pasando tanto el valor como la clave en lugar de simplemente cambiar el valor s&amp;iacute; mismo. Esto es &amp;uacute;til para aquellos momentos en los que necesita implementar una propiedad que se compone de una o m&amp;aacute;s propiedades miembro.</target>
        </trans-unit>
        <trans-unit id="8b04613f58b1300e32df4339c4129d38099cef75" translate="yes" xml:space="preserve">
          <source>If you try to set a value on a key that is undefined in the target object, then the &lt;code&gt;setUnknownProperty()&lt;/code&gt; handler will be called instead. This gives you an opportunity to implement complex &quot;virtual&quot; properties that are not predefined on the object. If &lt;code&gt;setUnknownProperty()&lt;/code&gt; returns undefined, then &lt;code&gt;set()&lt;/code&gt; will simply set the value on the object.</source>
          <target state="translated">Si intenta establecer un valor en una clave que no est&amp;aacute; definida en el objeto de destino, se llamar&amp;aacute; en su lugar al controlador &lt;code&gt;setUnknownProperty()&lt;/code&gt; . Esto le brinda la oportunidad de implementar propiedades &quot;virtuales&quot; complejas que no est&amp;aacute;n predefinidas en el objeto. Si &lt;code&gt;setUnknownProperty()&lt;/code&gt; devuelve undefined, &lt;code&gt;set()&lt;/code&gt; simplemente establecer&amp;aacute; el valor en el objeto.</target>
        </trans-unit>
        <trans-unit id="1a9bc3e98978d01fe5df8b62780e4e7ff103e866" translate="yes" xml:space="preserve">
          <source>If you use &lt;a href=&quot;https://guides.emberjs.com/models/&quot;&gt;Ember Data&lt;/a&gt; and you are building an &lt;code&gt;RSVP.hash&lt;/code&gt; with the model's relationship, consider instead properly setting up your &lt;a href=&quot;https://guides.emberjs.com/models/relationships&quot;&gt;relationships&lt;/a&gt; and letting Ember Data take care of loading them.</source>
          <target state="translated">Si usa &lt;a href=&quot;https://guides.emberjs.com/models/&quot;&gt;Ember Data&lt;/a&gt; y est&amp;aacute; construyendo un &lt;code&gt;RSVP.hash&lt;/code&gt; con la relaci&amp;oacute;n del modelo, considere en su lugar configurar correctamente sus &lt;a href=&quot;https://guides.emberjs.com/models/relationships&quot;&gt;relaciones&lt;/a&gt; y dejar que Ember Data se encargue de cargarlas.</target>
        </trans-unit>
        <trans-unit id="9ba91b0a339b059f7b74dbd2d91ed7bbd146a97a" translate="yes" xml:space="preserve">
          <source>If you use an adapter such as Ember's default &lt;a href=&quot;http://emberjs.com/api/data/classes/DS.JSONAPIAdapter.html&quot;&gt;&lt;code&gt;JSONAPIAdapter&lt;/code&gt;&lt;/a&gt; that supports the &lt;a href=&quot;http://jsonapi.org/&quot;&gt;JSON API specification&lt;/a&gt; and if your server endpoint supports the use of an &lt;a href=&quot;http://jsonapi.org/format/#fetching-includes&quot;&gt;'include' query parameter&lt;/a&gt;, you can use &lt;code&gt;findAll()&lt;/code&gt; to automatically retrieve additional records related to those requested by supplying an &lt;code&gt;include&lt;/code&gt; parameter in the &lt;code&gt;options&lt;/code&gt; object.</source>
          <target state="translated">Si usa un adaptador como el &lt;a href=&quot;http://emberjs.com/api/data/classes/DS.JSONAPIAdapter.html&quot;&gt; &lt;code&gt;JSONAPIAdapter&lt;/code&gt; &lt;/a&gt; predeterminado de Ember que admite la &lt;a href=&quot;http://jsonapi.org/&quot;&gt;especificaci&amp;oacute;n de la API JSON&lt;/a&gt; y si el punto final de su servidor admite el uso de un &lt;a href=&quot;http://jsonapi.org/format/#fetching-includes&quot;&gt;par&amp;aacute;metro de consulta 'incluir'&lt;/a&gt; , puede usar &lt;code&gt;findAll()&lt;/code&gt; para recuperar autom&amp;aacute;ticamente registros adicionales relacionados con los solicitados proporcionando un &lt;code&gt;include&lt;/code&gt; par&amp;aacute;metro en el objeto de &lt;code&gt;options&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="33a4de68894db13da2602a19d403640e1580c3d0" translate="yes" xml:space="preserve">
          <source>If you use an adapter such as Ember's default &lt;a href=&quot;http://emberjs.com/api/data/classes/DS.JSONAPIAdapter.html&quot;&gt;&lt;code&gt;JSONAPIAdapter&lt;/code&gt;&lt;/a&gt; that supports the &lt;a href=&quot;http://jsonapi.org/&quot;&gt;JSON API specification&lt;/a&gt; and if your server endpoint supports the use of an &lt;a href=&quot;http://jsonapi.org/format/#fetching-includes&quot;&gt;'include' query parameter&lt;/a&gt;, you can use &lt;code&gt;findRecord()&lt;/code&gt; to automatically retrieve additional records related to the one you request by supplying an &lt;code&gt;include&lt;/code&gt; parameter in the &lt;code&gt;options&lt;/code&gt; object.</source>
          <target state="translated">Si usa un adaptador como el &lt;a href=&quot;http://emberjs.com/api/data/classes/DS.JSONAPIAdapter.html&quot;&gt; &lt;code&gt;JSONAPIAdapter&lt;/code&gt; &lt;/a&gt; predeterminado de Ember que admite la &lt;a href=&quot;http://jsonapi.org/&quot;&gt;especificaci&amp;oacute;n de la API JSON&lt;/a&gt; y si el punto final de su servidor admite el uso de un &lt;a href=&quot;http://jsonapi.org/format/#fetching-includes&quot;&gt;par&amp;aacute;metro de consulta 'incluir'&lt;/a&gt; , puede usar &lt;code&gt;findRecord()&lt;/code&gt; para recuperar autom&amp;aacute;ticamente registros adicionales relacionados con el que solicit&amp;oacute; proporcionando un par&amp;aacute;metro de &lt;code&gt;include&lt;/code&gt; en el objeto de &lt;code&gt;options&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e8f04b4bb9bb6c34b2e81543e7d4b0a8c32e9ac3" translate="yes" xml:space="preserve">
          <source>If you use an adapter such as Ember's default &lt;a href=&quot;https://api.emberjs.com/ember-data/release/classes/JSONAPIAdapter&quot;&gt;&lt;code&gt;JSONAPIAdapter&lt;/code&gt;&lt;/a&gt; that supports the &lt;a href=&quot;http://jsonapi.org/&quot;&gt;JSON API specification&lt;/a&gt; and if your server endpoint supports the use of an &lt;a href=&quot;http://jsonapi.org/format/#fetching-includes&quot;&gt;'include' query parameter&lt;/a&gt;, you can use &lt;code&gt;findAll()&lt;/code&gt; to automatically retrieve additional records related to those requested by supplying an &lt;code&gt;include&lt;/code&gt; parameter in the &lt;code&gt;options&lt;/code&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15d53b84f7887d1eca95faadbdc3c63783d6aae3" translate="yes" xml:space="preserve">
          <source>If you use an adapter such as Ember's default &lt;a href=&quot;https://api.emberjs.com/ember-data/release/classes/JSONAPIAdapter&quot;&gt;&lt;code&gt;JSONAPIAdapter&lt;/code&gt;&lt;/a&gt; that supports the &lt;a href=&quot;http://jsonapi.org/&quot;&gt;JSON API specification&lt;/a&gt; and if your server endpoint supports the use of an &lt;a href=&quot;http://jsonapi.org/format/#fetching-includes&quot;&gt;'include' query parameter&lt;/a&gt;, you can use &lt;code&gt;findRecord()&lt;/code&gt; or &lt;code&gt;findAll()&lt;/code&gt; to automatically retrieve additional records related to the one you request by supplying an &lt;code&gt;include&lt;/code&gt; parameter in the &lt;code&gt;options&lt;/code&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ac0be76ef456159036c40f8a7deafbb0cbba438" translate="yes" xml:space="preserve">
          <source>If you use data binding with a Boolean value, it will add or remove the specified attribute. For example, given this template:</source>
          <target state="translated">Si utiliza la vinculación de datos con un valor booleano,añadirá o eliminará el atributo especificado.Por ejemplo,dada esta plantilla:</target>
        </trans-unit>
        <trans-unit id="764d44ced6a8c8f7a3a4472ba754ecdffb742d7b" translate="yes" xml:space="preserve">
          <source>If you want class names to be determined by properties of the component, you can use class name bindings. If you bind to a Boolean property, the class name will be added or removed depending on the value:</source>
          <target state="translated">Si desea que los nombres de clase se determinen por las propiedades del componente,puede utilizar los enlaces de nombres de clase.Si se enlaza a una propiedad booleana,el nombre de la clase se añadirá o eliminará dependiendo del valor:</target>
        </trans-unit>
        <trans-unit id="d7d3524587024ffaa961ce2a5e490e6aef052ab5" translate="yes" xml:space="preserve">
          <source>If you want to add a class name for a property which evaluates to true and and a different class name if it evaluates to false, you can pass a binding like this:</source>
          <target state="translated">Si quieres añadir un nombre de clase para una propiedad que se evalúa como verdadera y otro nombre de clase si se evalúa como falsa,puedes pasar un enlace como este:</target>
        </trans-unit>
        <trans-unit id="cca754b33b0c0633b1fd529eee9efc4832ac4f5e" translate="yes" xml:space="preserve">
          <source>If you want to add an event handler to an HTML element, you can use the &lt;code&gt;{{on&lt;/code&gt; element modifier.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57f24d2f69fc11c9c2963ea0e0376c304c171124" translate="yes" xml:space="preserve">
          <source>If you want to change the name you can simply rename the file, but if needed you can also specify the name explicitly:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6444a0ae403dc959c3b869c4a91406147c40463b" translate="yes" xml:space="preserve">
          <source>If you want to customize the component in order to handle events, transform arguments or maintain internal state, you implement a subclass of &lt;code&gt;Component&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="815dc87f2b269206fbb541af0ba1536a667f6282" translate="yes" xml:space="preserve">
          <source>If you want to customize the component, in order to handle events or actions, you implement a subclass of &lt;code&gt;Ember.Component&lt;/code&gt; named after the name of the component.</source>
          <target state="translated">Si desea personalizar el componente, para manejar eventos o acciones, implementa una subclase de &lt;code&gt;Ember.Component&lt;/code&gt; nombrada despu&amp;eacute;s del nombre del componente.</target>
        </trans-unit>
        <trans-unit id="9c7fafe0591bb959263727978b0d85daa465c508" translate="yes" xml:space="preserve">
          <source>If you want to define a serializer for your entire application, you'll probably want to use &lt;code&gt;eachAttribute&lt;/code&gt; and &lt;code&gt;eachRelationship&lt;/code&gt; on the record.</source>
          <target state="translated">Si desea definir un serializador para toda su aplicaci&amp;oacute;n, probablemente desee utilizar &lt;code&gt;eachAttribute&lt;/code&gt; y &lt;code&gt;eachRelationship&lt;/code&gt; en el registro.</target>
        </trans-unit>
        <trans-unit id="a83e0127ed298b4e0241244350c25e79b0883d42" translate="yes" xml:space="preserve">
          <source>If you want to highlight a component directly within your app, click on the icon to the left of the search bar. As your mouse passes over it, the related component will be highlighted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1fb4669b916934c08aeb1d33abe9996ffd9d541" translate="yes" xml:space="preserve">
          <source>If you want to highlight a template or component directly within your app, click on the magnifying glass in the Inspector, then hover over the app. As your our mouse passes over it, the related template or component will be highlighted.</source>
          <target state="translated">Si quieres resaltar una plantilla o un componente directamente dentro de tu aplicación,haz clic en la lupa del Inspector y luego pasa el cursor por encima de la aplicación.Cuando pase el ratón sobre ella,la plantilla o componente relacionado se resaltará.</target>
        </trans-unit>
        <trans-unit id="942897515fa20165713d1e45633d39890dca3079" translate="yes" xml:space="preserve">
          <source>If you want to pass additional parameters to the callback function, you must use the &lt;code&gt;{{fn}}&lt;/code&gt; helper. &lt;code&gt;{{on}}&lt;/code&gt; does not receive any additional parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc2aa7b23e214b2783f580943b378db24cc0bc2b" translate="yes" xml:space="preserve">
          <source>If you want to render a template other than the default one, set the route's &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Route.html#property_templateName&quot;&gt;&lt;code&gt;templateName&lt;/code&gt;&lt;/a&gt; property to the name of the template you want to render instead.</source>
          <target state="translated">Si desea representar una plantilla diferente a la predeterminada, establezca la propiedad &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Route.html#property_templateName&quot;&gt; &lt;code&gt;templateName&lt;/code&gt; de&lt;/a&gt; la ruta con el nombre de la plantilla que desea representar.</target>
        </trans-unit>
        <trans-unit id="e69adc82b46306c62f18fccd22416a8cd5463052" translate="yes" xml:space="preserve">
          <source>If you want to run the Inspector on a mobile device, you can use the &lt;a href=&quot;https://github.com/joostdevries/ember-cli-remote-inspector&quot;&gt;Ember CLI Remote Inspector&lt;/a&gt; addon.</source>
          <target state="translated">Si desea ejecutar el Inspector en un dispositivo m&amp;oacute;vil, puede usar el complemento &lt;a href=&quot;https://github.com/joostdevries/ember-cli-remote-inspector&quot;&gt;Ember CLI Remote Inspector&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9febbf9317a9874bd1e92644bec25a613b201b25" translate="yes" xml:space="preserve">
          <source>If you want to set a property, you can use the &lt;code&gt;prop&lt;/code&gt; element modifier.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2f9afbe5ccf1f209c2f5100c6802a492d2bbe11" translate="yes" xml:space="preserve">
          <source>If you want to specify &lt;code&gt;app/adapters/custom.js&lt;/code&gt; as a string, do:</source>
          <target state="translated">Si desea especificar &lt;code&gt;app/adapters/custom.js&lt;/code&gt; como una cadena, haga lo siguiente:</target>
        </trans-unit>
        <trans-unit id="33652ca88915ad202df8faa26998e3464ed01218" translate="yes" xml:space="preserve">
          <source>If you want to target all browsers with more than a 4% market share in Canada, you'd have the following options:</source>
          <target state="translated">Si desea dirigirse a todos los navegadores con una cuota de mercado superior al 4% en el Canadá,tendría las siguientes opciones:</target>
        </trans-unit>
        <trans-unit id="0ffc3bdb915f72e2d5ffaaab7591d71b0410c393" translate="yes" xml:space="preserve">
          <source>If you want to update the array and get the latest records from the adapter, you can invoke &lt;a href=&quot;#method_update&quot;&gt;&lt;code&gt;update()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">Si desea actualizar la matriz y obtener los &amp;uacute;ltimos registros del adaptador, puede invocar &lt;a href=&quot;#method_update&quot;&gt; &lt;code&gt;update()&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="7e7d42ad5d6e2f456ef7596a4aa770f238b3c27c" translate="yes" xml:space="preserve">
          <source>If you want to update the array and get the latest records from the adapter, you can invoke &lt;a href=&quot;adapterpopulatedrecordarray/methods#update&quot;&gt;&lt;code&gt;update()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e632c2db87c09429428b7f54e2ddff1c168e4fb" translate="yes" xml:space="preserve">
          <source>If you wanted a one way binding between the text area and a div tag somewhere else on your screen, you could use &lt;code&gt;Ember.computed.oneWay&lt;/code&gt;:</source>
          <target state="translated">Si desea un enlace unidireccional entre el &amp;aacute;rea de texto y una etiqueta div en otro lugar de su pantalla, puede usar &lt;code&gt;Ember.computed.oneWay&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="351cf91131e3ba5c854ba7bdc3096b404847b9d8" translate="yes" xml:space="preserve">
          <source>If you were running &lt;code&gt;ember serve&lt;/code&gt; in another shell, restart the server to include Mirage in your build.</source>
          <target state="translated">Si estaba ejecutando &lt;code&gt;ember serve&lt;/code&gt; en otro shell, reinicie el servidor para incluir Mirage en su compilaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="72b47debd0468012f6f0930e258a04938b705b3d" translate="yes" xml:space="preserve">
          <source>If you wish to make a more significant contribution be sure to check our &lt;a href=&quot;https://github.com/ember-learn/guides-source/issues&quot;&gt;issue tracker&lt;/a&gt; to see if your issue is already being addressed. If you don't find an active issue, open a new one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a80711f6e3cb47ccfcae6fa3f203065434d5265" translate="yes" xml:space="preserve">
          <source>If you wish to make a more significant contribution be sure to check our &lt;a href=&quot;https://github.com/emberjs/guides/issues&quot;&gt;issue tracker&lt;/a&gt; to see if your issue is already being addressed. If you don't find an active issue, open a new one.</source>
          <target state="translated">Si desea hacer una contribuci&amp;oacute;n m&amp;aacute;s significativa, aseg&amp;uacute;rese de consultar nuestro &lt;a href=&quot;https://github.com/emberjs/guides/issues&quot;&gt;rastreador de problemas&lt;/a&gt; para ver si su problema ya se est&amp;aacute; abordando. Si no encuentra un problema activo, abra uno nuevo.</target>
        </trans-unit>
        <trans-unit id="6ec6f6263694fb50aab8d1fa081e5e63d2b387e3" translate="yes" xml:space="preserve">
          <source>If you wish to reset a query param, you have two options:</source>
          <target state="translated">Si desea restablecer un parámetro de consulta,tiene dos opciones:</target>
        </trans-unit>
        <trans-unit id="70ad80084d2a7c2e4cbe512c409211a82226e39a" translate="yes" xml:space="preserve">
          <source>If you work on a team of developers, it may be useful to have one developer go through the tutorials, try doing a small thing, and then demo that to the rest of the team. After everyone has had a chance for hands-on learning, schedule a meeting to plan how you want to proceed. By design, migrating to Octane can be done in pieces. It doesn't require a big-bang refactor. If you need advice, visit &lt;a href=&quot;https://emberjs.com/community/&quot;&gt;the forums or the Ember Discord&lt;/a&gt; (in Discord you can use the &lt;code&gt;#topic-octane-migration&lt;/code&gt; channel).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e052e0325b9c6e8bd11b211e8a7a73ba4895c12" translate="yes" xml:space="preserve">
          <source>If you would like additional bubbling events to be delegated to your views, set your &lt;code&gt;Application&lt;/code&gt;'s &lt;code&gt;customEvents&lt;/code&gt; property to a hash containing the DOM event name as the key and the corresponding view method name as the value. Setting an event to a value of &lt;code&gt;null&lt;/code&gt; will prevent a default event listener from being added for that event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="636ccb0c70995c8ec78b711b2fbaa68458816952" translate="yes" xml:space="preserve">
          <source>If you would like additional bubbling events to be delegated to your views, set your &lt;code&gt;Ember.Application&lt;/code&gt;'s &lt;code&gt;customEvents&lt;/code&gt; property to a hash containing the DOM event name as the key and the corresponding view method name as the value. Setting an event to a value of &lt;code&gt;null&lt;/code&gt; will prevent a default event listener from being added for that event.</source>
          <target state="translated">Si desea que se deleguen eventos de &lt;code&gt;Ember.Application&lt;/code&gt; adicionales a sus vistas, configure la propiedad &lt;code&gt;customEvents&lt;/code&gt; de su Ember.Application en un hash que contenga el nombre del evento DOM como clave y el nombre del m&amp;eacute;todo de vista correspondiente como valor. Establecer un evento en un valor de &lt;code&gt;null&lt;/code&gt; evitar&amp;aacute; que se agregue un detector de eventos predeterminado para ese evento.</target>
        </trans-unit>
        <trans-unit id="f9c28842b476850cdf188d4a68abd094df008a87" translate="yes" xml:space="preserve">
          <source>If you would like the data to be normalized by the model's default serializer before pushing it into the store, you can use the &lt;a href=&quot;http://emberjs.com/api/data/classes/DS.Store.html#method_pushPayload&quot;&gt;&lt;code&gt;store.pushPayload()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">Si desea que el serializador predeterminado del modelo normalice los datos antes de &lt;a href=&quot;http://emberjs.com/api/data/classes/DS.Store.html#method_pushPayload&quot;&gt; &lt;code&gt;store.pushPayload()&lt;/code&gt; &lt;/a&gt; a la tienda, puede usar el m&amp;eacute;todo store.pushPayload () .</target>
        </trans-unit>
        <trans-unit id="c14dc8058580505ad3924a9a3b2162e3777c785c" translate="yes" xml:space="preserve">
          <source>If you would like the data to be normalized by the model's default serializer before pushing it into the store, you can use the &lt;a href=&quot;https://api.emberjs.com/ember-data/release/classes/Store/methods#pushPayload&quot;&gt;&lt;code&gt;store.pushPayload()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="865d9a65eb043f609aa030c7dda383387455f93f" translate="yes" xml:space="preserve">
          <source>If you would like to add your own application or library to the list, you can register it using:</source>
          <target state="translated">Si desea añadir su propia aplicación o biblioteca a la lista,puede registrarla usando:</target>
        </trans-unit>
        <trans-unit id="eacb51fea79f6e5c53ca0ec84c0fe3b4eb1da71b" translate="yes" xml:space="preserve">
          <source>If you would like to create a custom serializer its recommend that you start with the &lt;code&gt;JSONAPISerializer&lt;/code&gt; or &lt;code&gt;JSONSerializer&lt;/code&gt; and extend one of those to match your needs. However, if your payload is extremely different from one of these serializers you can create your own by extending the &lt;code&gt;DS.Serializer&lt;/code&gt; base class.</source>
          <target state="translated">Si desea crear un serializador personalizado, le recomendamos que comience con &lt;code&gt;JSONAPISerializer&lt;/code&gt; o &lt;code&gt;JSONSerializer&lt;/code&gt; y extienda uno de ellos para satisfacer sus necesidades. Sin embargo, si su carga &amp;uacute;til es extremadamente diferente a la de uno de estos serializadores, puede crear la suya propia extendiendo la clase base &lt;code&gt;DS.Serializer&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1ce6809dc66f749c11851a7ff9abc2015192a932" translate="yes" xml:space="preserve">
          <source>If you would like to create a custom serializer, it is recommended that you start with the &lt;code&gt;JSONAPISerializer&lt;/code&gt; or &lt;code&gt;JSONSerializer&lt;/code&gt; and extend one of those to match your needs. However, if your payload is extremely different from one of these serializers you can create your own by extending the &lt;code&gt;Serializer&lt;/code&gt; base class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b3b3e498a148469f0c1085d482741a2910276cc" translate="yes" xml:space="preserve">
          <source>If you would like to force or prevent background reloading, you can set a boolean value for &lt;code&gt;backgroundReload&lt;/code&gt; in the options object for &lt;code&gt;findAll&lt;/code&gt;.</source>
          <target state="translated">Si desea forzar o evitar la recarga en segundo plano, puede establecer un valor booleano para &lt;code&gt;backgroundReload&lt;/code&gt; en el objeto de opciones para &lt;code&gt;findAll&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2391e8de828841b835a93d0133d36c57247f2c61" translate="yes" xml:space="preserve">
          <source>If you would like to force or prevent background reloading, you can set a boolean value for &lt;code&gt;backgroundReload&lt;/code&gt; in the options object for &lt;code&gt;findRecord&lt;/code&gt;.</source>
          <target state="translated">Si desea forzar o evitar la recarga en segundo plano, puede establecer un valor booleano para &lt;code&gt;backgroundReload&lt;/code&gt; en el objeto de opciones para &lt;code&gt;findRecord&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="529b7739a44d18abecaa6bd065ecf8da0a6b2b16" translate="yes" xml:space="preserve">
          <source>If you would like to include jQuery without the Ember integration APIs, you can install &lt;code&gt;@ember/jquery&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d06646bb77885d39ac634ae0a7650b2f0a83d44" translate="yes" xml:space="preserve">
          <source>If you would like to pass additional arguments to the function you should use the &lt;code&gt;{{fn}}&lt;/code&gt; helper.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdcfbbdb32c89c2922a32057b817e25807f2342d" translate="yes" xml:space="preserve">
          <source>If you would like to specify a class that should only be added when the property is false, you can declare a binding like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec5d82f068d754ff6110549f9b0945be0153f6e2" translate="yes" xml:space="preserve">
          <source>If you would like your adapter to use a custom serializer you can set the &lt;code&gt;defaultSerializer&lt;/code&gt; property to be the name of the custom serializer.</source>
          <target state="translated">Si desea que su adaptador utilice un serializador personalizado, puede establecer la propiedad &lt;code&gt;defaultSerializer&lt;/code&gt; para que sea el nombre del serializador personalizado.</target>
        </trans-unit>
        <trans-unit id="3695e95a37faaa025ccc41bbfe2e3e98c24934eb" translate="yes" xml:space="preserve">
          <source>If you would prefer to use a custom value instead of the dasherized property name, you can pass a binding like this:</source>
          <target state="translated">Si prefiere usar un valor personalizado en lugar del nombre de la propiedad de rayas,puede pasar una encuadernación como esta:</target>
        </trans-unit>
        <trans-unit id="7383e3aba09b180a7822830aba0d585c9562e58a" translate="yes" xml:space="preserve">
          <source>If you would prefer to use a custom value instead of the property name, you can create the same markup as the last example with a binding like this:</source>
          <target state="translated">Si prefiere utilizar un valor personalizado en lugar del nombre de la propiedad,puede crear el mismo marcado del último ejemplo con una encuadernación como ésta:</target>
        </trans-unit>
        <trans-unit id="ef951fcf9baa83009dd56e3643da116682c54bc7" translate="yes" xml:space="preserve">
          <source>If you'd like to control the order in which initializers run, you can use the &lt;code&gt;before&lt;/code&gt; and/or &lt;code&gt;after&lt;/code&gt; options:</source>
          <target state="translated">Si desea controlar el orden en el que se ejecutan los inicializadores, puede usar las opciones &lt;code&gt;before&lt;/code&gt; y / o &lt;code&gt;after&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="45b89a3010d6df4cb0e7dba26234407d7a5f7c7c" translate="yes" xml:space="preserve">
          <source>If you'd like to inject a service with the same name as the property, simply leave off the service name (the dasherized version of the name will be used):</source>
          <target state="translated">Si desea inyectar un servicio con el mismo nombre de la propiedad,simplemente deje el nombre del servicio (se usará la versión discontinua del nombre):</target>
        </trans-unit>
        <trans-unit id="939b88d019a84732f9158e6c111ba853e355c75e" translate="yes" xml:space="preserve">
          <source>If you're looking at a piece of documentation written using HTML syntax, you can use the syntax as-is in your template, and use &lt;code&gt;{{&lt;/code&gt; to insert dynamic content.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecef890c46f90631ec33e00e6354051b6179d833" translate="yes" xml:space="preserve">
          <source>If you're new to CSS, we recommend &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Learn/CSS/First_steps&quot;&gt;the MDN guide for learning it&lt;/a&gt;, as it is fairly comprehensive and up to date.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eabdc658be96cb43330f57905df4246ea69e9494" translate="yes" xml:space="preserve">
          <source>If you're new to Ember, we recommend starting with the &lt;a href=&quot;https://emberjs.com/learn&quot;&gt;Quick start and Tutorials&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e15ac6c321d6b3b8297ac1d81ea98633ae60a6e" translate="yes" xml:space="preserve">
          <source>If you're new to HTML, we recommend &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Learn/Getting_started_with_the_web/HTML_basics&quot;&gt;Mozilla's HTML Tutorial&lt;/a&gt; is fairly comprehensive, and the MDN site is one of the best resources for learning about web APIs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7173ef0329136892c0bbdcd05db7d6f43e0903af" translate="yes" xml:space="preserve">
          <source>If you're new to JavaScript, here are some excellent introductory materials:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d37b9d02aefb6b34dfafabb6d8dd83ebfcc3ec25" translate="yes" xml:space="preserve">
          <source>If you're not sure whether you have Node.js or the right version, run this on your command line:</source>
          <target state="translated">Si no estás seguro de si tienes Node.js o la versión correcta,ejecuta esto en tu línea de comandos:</target>
        </trans-unit>
        <trans-unit id="095ad1f97dce1fe97dc5ce65f718dbb870d80c50" translate="yes" xml:space="preserve">
          <source>If you're streaming data or implementing an adapter, make sure that you have converted the incoming data into this form. The store's &lt;a href=&quot;#method_normalize&quot;&gt;normalize&lt;/a&gt; method is a convenience helper for converting a json payload into the form Ember Data expects.</source>
          <target state="translated">Si est&amp;aacute; transmitiendo datos o implementando un adaptador, aseg&amp;uacute;rese de haber convertido los datos entrantes en este formulario. El m&amp;eacute;todo de &lt;a href=&quot;#method_normalize&quot;&gt;normalizaci&amp;oacute;n de&lt;/a&gt; la tienda es una ayuda &amp;uacute;til para convertir una carga &amp;uacute;til json en la forma que espera Ember Data.</target>
        </trans-unit>
        <trans-unit id="4499fbbc3c1257b05e901ef0dd529431f90fba50" translate="yes" xml:space="preserve">
          <source>If you're streaming data or implementing an adapter, make sure that you have converted the incoming data into this form. The store's &lt;a href=&quot;../classes/store/methods#normalize&quot;&gt;normalize&lt;/a&gt; method is a convenience helper for converting a json payload into the form Ember Data expects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64a43f033db09904a15426d2b32f26a6795aa6c8" translate="yes" xml:space="preserve">
          <source>If you're unsure whether or not a given object will be a proxy or not, you can still use Ember's &lt;code&gt;get&lt;/code&gt; and &lt;code&gt;set&lt;/code&gt; functions:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28cb66b4e4103786779634f2b5a26ced432e9239" translate="yes" xml:space="preserve">
          <source>If you're using the &lt;a href=&quot;https://github.com/embersherpa/ember-cli-app-version&quot;&gt;ember-cli-app-version&lt;/a&gt; addon, your application's name and version will be added to the list automatically.</source>
          <target state="translated">Si est&amp;aacute; utilizando el complemento &lt;a href=&quot;https://github.com/embersherpa/ember-cli-app-version&quot;&gt;ember-cli-app-version&lt;/a&gt; , el nombre y la versi&amp;oacute;n de su aplicaci&amp;oacute;n se agregar&amp;aacute;n a la lista autom&amp;aacute;ticamente.</target>
        </trans-unit>
        <trans-unit id="251344c7bd4f41e910f469092d20ca8445eb6c13" translate="yes" xml:space="preserve">
          <source>If your Ember application is one of multiple web applications served from the same domain, it may be necessary to indicate to the router what the root URL for your Ember application is. By default, Ember will assume it is served from the root of your domain.</source>
          <target state="translated">Si su aplicación Ember es una de las múltiples aplicaciones web servidas desde el mismo dominio,puede ser necesario indicar al router cuál es la URL raíz de su aplicación Ember.De forma predeterminada,Ember asumirá que se sirve desde la raíz de su dominio.</target>
        </trans-unit>
        <trans-unit id="8d27804a2a749eb80e7bf048f25dc0b3bdadc54e" translate="yes" xml:space="preserve">
          <source>If your adapter implements &lt;code&gt;findMany&lt;/code&gt;, setting this to &lt;code&gt;true&lt;/code&gt; will cause &lt;code&gt;findRecord&lt;/code&gt; requests triggered within the same &lt;code&gt;runloop&lt;/code&gt; to be coalesced into one or more calls to &lt;code&gt;adapter.findMany&lt;/code&gt;. The number of calls made and the records contained in each call can be tuned by your adapter's &lt;code&gt;groupRecordsForHasMany&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="742e30ce64be00f77f455b32e39444bc8de185c9" translate="yes" xml:space="preserve">
          <source>If your app has resolved all deprecations present in a given version, you may specify that version as your &quot;compatibility&quot; version to remove the code that supported the deprecated behavior from your app.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e0658ce22f6a989ae80d44440ffc4049e3cb38b" translate="yes" xml:space="preserve">
          <source>If your app only reads data but never writes data, it is not necessary to implement the methods for create, update, and delete. This extends to all of the store's find methods with the exception of &lt;code&gt;findRecord&lt;/code&gt; (&lt;code&gt;findAll&lt;/code&gt;, &lt;code&gt;query&lt;/code&gt;, &lt;code&gt;queryRecord&lt;/code&gt;): if you do not use the store method in your app then your Adapter does not need the method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e01adb9a5dbaecbeb2cbacc35aaf248b93c6d044" translate="yes" xml:space="preserve">
          <source>If your app seems slow to load, check if the delay is caused by a slow response from the back end API. Use your browser's developer tools to investigate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef4326fc05c59c8511d5fdb9092ce5f660b8db68" translate="yes" xml:space="preserve">
          <source>If your application receives and sends data, you want to show that you can take these actions successfully. You also want to prove that you can handle the error states correctly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="973fc484ea03a53b30102729d4440c63774ce2ed" translate="yes" xml:space="preserve">
          <source>If your application relies on those behaviors it is still recommended that you &lt;em&gt;disable&lt;/em&gt; this feature, and simply add an appropriate element to &lt;code&gt;app/templates/application.hbs&lt;/code&gt; wrapping that template's &lt;code&gt;{{outlet}}&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a25186c61f15c11ab806be5a9286f8dae6f3fe16" translate="yes" xml:space="preserve">
          <source>If your backend has some consistent rules you can define an &lt;code&gt;adapter:application&lt;/code&gt;. The &lt;code&gt;adapter:application&lt;/code&gt; will get priority over the default Adapter, however it will still be superseded by model specific Adapters.</source>
          <target state="translated">Si su backend tiene algunas reglas consistentes, puede definir un &lt;code&gt;adapter:application&lt;/code&gt; . El &lt;code&gt;adapter:application&lt;/code&gt; tendr&amp;aacute; prioridad sobre el adaptador predeterminado, sin embargo, seguir&amp;aacute; siendo reemplazado por adaptadores espec&amp;iacute;ficos del modelo.</target>
        </trans-unit>
        <trans-unit id="846ea89f048b79b140e43b6fe9e234481fd9915d" translate="yes" xml:space="preserve">
          <source>If your enumerable is composed of objects, there is a &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Enumerable.html#method_mapBy&quot;&gt;&lt;code&gt;mapBy()&lt;/code&gt;&lt;/a&gt; method that will extract the named property from each of those objects in turn and return a new array:</source>
          <target state="translated">Si su enumerable est&amp;aacute; compuesto por objetos, existe un m&amp;eacute;todo &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Enumerable.html#method_mapBy&quot;&gt; &lt;code&gt;mapBy()&lt;/code&gt; &lt;/a&gt; que extraer&amp;aacute; la propiedad nombrada de cada uno de esos objetos y devolver&amp;aacute; una nueva matriz:</target>
        </trans-unit>
        <trans-unit id="9b0f2b0bb38cb9adaff193b9dd72e74317a4abb8" translate="yes" xml:space="preserve">
          <source>If your server API or your adapter only provides array responses but you wish to retrieve just a single record, you can alternatively use the &lt;code&gt;query()&lt;/code&gt; method as follows:</source>
          <target state="translated">Si la API de su servidor o su adaptador solo proporciona respuestas de matriz, pero desea recuperar solo un registro, puede utilizar alternativamente el m&amp;eacute;todo &lt;code&gt;query()&lt;/code&gt; siguiente manera:</target>
        </trans-unit>
        <trans-unit id="b2794ed79e3c45633ebfef49b1bf16d8dcd5f100" translate="yes" xml:space="preserve">
          <source>If your server endpoint supports the use of a &lt;a href=&quot;https://jsonapi.org/format/#fetching-sparse-fieldsets&quot;&gt;'fields' query parameter&lt;/a&gt;, you can use pass those fields through to your server. At this point in time, this requires a few manual steps on your part.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af4058c0ce711315ee0b4423e4f1c3a010f93ec5" translate="yes" xml:space="preserve">
          <source>If your state does not set a value for a given flag, the value will be inherited from its parent (or the first place in the state hierarchy where it is defined).</source>
          <target state="translated">Si su estado no fija un valor para una bandera determinada,el valor se heredará de su progenitor (o del primer lugar en la jerarquía de estados donde se define).</target>
        </trans-unit>
        <trans-unit id="2db4b38bb9f3c04d00f26e64fe62f8e77fdce964" translate="yes" xml:space="preserve">
          <source>Imagine we are writing a web app for a site that lets users list their properties to rent. At any given time, we should be able to answer questions about the current state like &lt;em&gt;What rental are they looking at?&lt;/em&gt; and &lt;em&gt;Are they editing it?&lt;/em&gt; In Ember, the answer to these questions is determined by the URL. The URL can be set in a few ways:</source>
          <target state="translated">Imagine que estamos escribiendo una aplicaci&amp;oacute;n web para un sitio que permite a los usuarios enumerar sus propiedades para alquilar. En cualquier momento, deber&amp;iacute;amos poder responder preguntas sobre el estado actual, como &lt;em&gt;&amp;iquest;Qu&amp;eacute; alquiler est&amp;aacute;n viendo? &lt;/em&gt;y &lt;em&gt;&amp;iquest;Lo est&amp;aacute;n editando? &lt;/em&gt;En Ember, la respuesta a estas preguntas est&amp;aacute; determinada por la URL. La URL se puede configurar de varias maneras:</target>
        </trans-unit>
        <trans-unit id="bf8439d9c935e45049eff75e911e1ac674191f03" translate="yes" xml:space="preserve">
          <source>Imagine we are writing a web app for managing a blog. At any given time, we should be able to answer questions like &lt;em&gt;What post are they looking at?&lt;/em&gt; and &lt;em&gt;Are they editing it?&lt;/em&gt; In Ember.js, the answer to these questions is determined by the URL.</source>
          <target state="translated">Imagina que estamos escribiendo una aplicaci&amp;oacute;n web para administrar un blog. En cualquier momento, deber&amp;iacute;amos poder responder preguntas como &lt;em&gt;&amp;iquest;Qu&amp;eacute; publicaci&amp;oacute;n est&amp;aacute;n viendo? &lt;/em&gt;y &lt;em&gt;&amp;iquest;Lo est&amp;aacute;n editando? &lt;/em&gt;En Ember.js, la respuesta a estas preguntas est&amp;aacute; determinada por la URL.</target>
        </trans-unit>
        <trans-unit id="cdd8215fd5579fcac349f1f3d66eb2b974247b86" translate="yes" xml:space="preserve">
          <source>Imagine we're building an application where users can have accounts. We need to build the UI for users to delete their account. Because we don't want users to accidentally delete their accounts, we'll build a button that requires the user to confirm in order to trigger some action.</source>
          <target state="translated">Imagina que estamos construyendo una aplicación donde los usuarios pueden tener cuentas.Necesitamos construir la interfaz para que los usuarios puedan eliminar su cuenta.Como no queremos que los usuarios eliminen accidentalmente sus cuentas,construiremos un botón que requiera que el usuario confirme para poder activar alguna acción.</target>
        </trans-unit>
        <trans-unit id="5500a79f8100b20c15ba44761eb5ee566dd17036" translate="yes" xml:space="preserve">
          <source>Imagine you have a typeahead component that uses &lt;a href=&quot;http://emberjs.com/api/classes/Ember.run.html#method_debounce&quot;&gt;&lt;code&gt;Ember.run.debounce&lt;/code&gt;&lt;/a&gt; to limit requests to the server, and you want to verify that results are displayed after typing a character.</source>
          <target state="translated">Imagine que tiene un componente de escritura anticipada que usa &lt;a href=&quot;http://emberjs.com/api/classes/Ember.run.html#method_debounce&quot;&gt; &lt;code&gt;Ember.run.debounce&lt;/code&gt; &lt;/a&gt; para limitar las solicitudes al servidor y desea verificar que los resultados se muestren despu&amp;eacute;s de escribir un car&amp;aacute;cter.</target>
        </trans-unit>
        <trans-unit id="d531edafccbe882419652efc4f34d29881ec273b" translate="yes" xml:space="preserve">
          <source>Imagine you have a typeahead component that uses &lt;a href=&quot;https://api.emberjs.com/ember/release/classes/@ember%2Frunloop/methods#debounce&quot;&gt;&lt;code&gt;Ember.run.debounce&lt;/code&gt;&lt;/a&gt; to limit requests to the server, and you want to verify that results are displayed after typing a character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4d307e4de142d3aecdd704f2f1113fa3bd42984" translate="yes" xml:space="preserve">
          <source>Imagine you have the following component that changes its title when a button is clicked on:</source>
          <target state="translated">Imagina que tienes el siguiente componente que cambia su título cuando se hace clic en un botón:</target>
        </trans-unit>
        <trans-unit id="6176b6ffa892fddc99b619072a50ff9436c44f6a" translate="yes" xml:space="preserve">
          <source>Imagine you have the following component that uses a location service to display the city and country of your current location:</source>
          <target state="translated">Imagine que tiene el siguiente componente que utiliza un servicio de localización para mostrar la ciudad y el país de su ubicación actual:</target>
        </trans-unit>
        <trans-unit id="79f5c060ec68d1e4cd89cdcfa7e6e383991271b1" translate="yes" xml:space="preserve">
          <source>Imagine your app is in a route that's displaying a complex form for the user to fill out and the user accidentally navigates backwards. Unless the transition is prevented, the user might lose all of the progress they made on the form, which can make for a pretty frustrating user experience.</source>
          <target state="translated">Imagina que tu aplicación está en una ruta que muestra un formulario complejo para que el usuario lo rellene y éste accidentalmente navega hacia atrás.A menos que se impida la transición,el usuario podría perder todo el progreso que hizo en el formulario,lo que puede resultar en una experiencia de usuario bastante frustrante.</target>
        </trans-unit>
        <trans-unit id="49d9f7f0f7530948a86e88ddfedd6530f0caaf23" translate="yes" xml:space="preserve">
          <source>Immediate allows you to run the function immediately, but debounce other calls for this function until the wait time has elapsed. If &lt;code&gt;debounce&lt;/code&gt; is called again before the specified time has elapsed, the timer is reset and the entire period must pass again before the method can be called again.</source>
          <target state="translated">Inmediato le permite ejecutar la funci&amp;oacute;n inmediatamente, pero eliminar el rebote de otras llamadas para esta funci&amp;oacute;n hasta que haya transcurrido el tiempo de espera. Si se vuelve a llamar a &lt;code&gt;debounce&lt;/code&gt; antes de que haya transcurrido el tiempo especificado, el temporizador se reinicia y el per&amp;iacute;odo completo debe pasar de nuevo antes de que se pueda volver a llamar al m&amp;eacute;todo.</target>
        </trans-unit>
        <trans-unit id="03e599ee1db55ad6e5963182dcade9bf19ce4f3f" translate="yes" xml:space="preserve">
          <source>Implement &lt;code&gt;buildQuery&lt;/code&gt; in your adapter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1eee007d228e27ce11b63da7796f4277398eb6f" translate="yes" xml:space="preserve">
          <source>Implement an Ember.onerror hook to log all errors in production</source>
          <target state="translated">Implementar un gancho Ember.onerror para registrar todos los errores en la producción</target>
        </trans-unit>
        <trans-unit id="d4ded73113c17939544427e051fc4e1b10bdd9e2" translate="yes" xml:space="preserve">
          <source>Implement this method in a subclass to handle the creation of new records.</source>
          <target state="translated">Implementar este método en una subclase para manejar la creación de nuevos registros.</target>
        </trans-unit>
        <trans-unit id="848b4a0426db8242209c99b16a964aa82ef6c7b2" translate="yes" xml:space="preserve">
          <source>Implement this method in a subclass to handle the deletion of a record.</source>
          <target state="translated">Implementar este método en una subclase para manejar la eliminación de un registro.</target>
        </trans-unit>
        <trans-unit id="a8c2c7d66ed7442f6c9d8636a2615c54a24453e2" translate="yes" xml:space="preserve">
          <source>Implement this method in a subclass to handle the updating of a record.</source>
          <target state="translated">Implementar este método en una subclase para manejar la actualización de un registro.</target>
        </trans-unit>
        <trans-unit id="59900d07c9905339bce32756f7c459df8b522597" translate="yes" xml:space="preserve">
          <source>Implementations</source>
          <target state="translated">Implementations</target>
        </trans-unit>
        <trans-unit id="73f5c415ef3fb2c03540f0bdab82fe646892d38f" translate="yes" xml:space="preserve">
          <source>Implementing</source>
          <target state="translated">Implementing</target>
        </trans-unit>
        <trans-unit id="5749b6c17deb5f67f01bdaeb1e175622d2081b94" translate="yes" xml:space="preserve">
          <source>Implementing Acceptance Tests</source>
          <target state="translated">Realización de pruebas de aceptación</target>
        </trans-unit>
        <trans-unit id="9fc6530e3b3f8ddfeab09f763833df3f225faa7e" translate="yes" xml:space="preserve">
          <source>Implementing In Your Own Code</source>
          <target state="translated">Implementar en su propio código</target>
        </trans-unit>
        <trans-unit id="6ec10c6db7299bad88219c843b13ad7f2bcef332" translate="yes" xml:space="preserve">
          <source>Implementing a Serializer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c48e7c887c3e035948d4f434642f33256ee7c414" translate="yes" xml:space="preserve">
          <source>Implementing an Adapter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bb9d2676aafbb43ec570668a35ad5e6dbb68374" translate="yes" xml:space="preserve">
          <source>Implementing coalescing using this flag and the associated methods does not always offer the right level of correctness, timing control or granularity. If your application would be better suited coalescing across multiple types, coalescing for longer than a single runloop, or with a more custom request structure, coalescing within your application adapter may prove more effective.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="085b4f177ad0073a59d881f34199b37baba61a3b" translate="yes" xml:space="preserve">
          <source>Implementing the Action</source>
          <target state="translated">Aplicación de la medida</target>
        </trans-unit>
        <trans-unit id="1af9db788eeb484422c8e1485dd28bfe2aa85747" translate="yes" xml:space="preserve">
          <source>Implements some standard methods for copying an object. Add this mixin to any object you create that can create a copy of itself. This mixin is added automatically to the built-in array.</source>
          <target state="translated">Implementa algunos métodos estándar para copiar un objeto.Añade esta mezcla a cualquier objeto que crees que pueda crear una copia de sí mismo.Este mixin se añade automáticamente a la matriz incorporada.</target>
        </trans-unit>
        <trans-unit id="686d97d62922d0e28ae5f215f382872f4fc0ace1" translate="yes" xml:space="preserve">
          <source>Import the console</source>
          <target state="translated">Importar la consola</target>
        </trans-unit>
        <trans-unit id="e1793c94681387a77e7907f945d00e52213d9184" translate="yes" xml:space="preserve">
          <source>Importantly, you do &lt;em&gt;not&lt;/em&gt; have to use &lt;code&gt;get&lt;/code&gt; or &lt;code&gt;set&lt;/code&gt; when reading or updating computed properties, as was noted in the computed property section.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fda16eeb69479eb718ce363db7020874beaac45c" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;Component&lt;/code&gt; the &lt;code&gt;classNames&lt;/code&gt;, &lt;code&gt;classNameBindings&lt;/code&gt; and &lt;code&gt;attributeBindings&lt;/code&gt; properties are concatenated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f669d835da282209b875552f36c9c65a13c0d8e" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;Ember.Component&lt;/code&gt; the &lt;code&gt;classNames&lt;/code&gt;, &lt;code&gt;classNameBindings&lt;/code&gt; and &lt;code&gt;attributeBindings&lt;/code&gt; properties are concatenated.</source>
          <target state="translated">En &lt;code&gt;Ember.Component&lt;/code&gt; los &lt;code&gt;classNames&lt;/code&gt; , &lt;code&gt;classNameBindings&lt;/code&gt; y &lt;code&gt;attributeBindings&lt;/code&gt; se concatenan propiedades.</target>
        </trans-unit>
        <trans-unit id="af45ead0e06672506b4213354f87e72e4fa00cc4" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;Ember.Route&lt;/code&gt; the &lt;code&gt;queryParams&lt;/code&gt; property is merged.</source>
          <target state="translated">En &lt;code&gt;Ember.Route&lt;/code&gt; la &lt;code&gt;queryParams&lt;/code&gt; propiedad se fusion&amp;oacute;.</target>
        </trans-unit>
        <trans-unit id="4a8298375728fbf74cd794ad45b08edcaab13acd" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;Route&lt;/code&gt; the &lt;code&gt;queryParams&lt;/code&gt; property is merged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="363556950c4e3e42367fb50a0ce29bf1c0ca49ef" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;app/components/list-filter.js&lt;/code&gt;, we have as the top-level element rendered by the component a class called &lt;code&gt;list-filter&lt;/code&gt;. We locate the search input within the component using the selector &lt;code&gt;.list-filter input&lt;/code&gt;, since we know that there is only one input element located in the list-filter component.</source>
          <target state="translated">En &lt;code&gt;app/components/list-filter.js&lt;/code&gt; , tenemos como elemento de nivel superior representado por el componente una clase llamada &lt;code&gt;list-filter&lt;/code&gt; . Localizamos la entrada de b&amp;uacute;squeda dentro del componente usando el selector &lt;code&gt;.list-filter input&lt;/code&gt; , ya que sabemos que solo hay un elemento de entrada ubicado en el componente list-filter.</target>
        </trans-unit>
        <trans-unit id="ad8e5dcf45b31e402466165d21236e5680154868" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;app/templates/rentals.hbs&lt;/code&gt;, we wrapped each rental display in an &lt;code&gt;article&lt;/code&gt; element, and gave it a class called &lt;code&gt;listing&lt;/code&gt;. We will use the listing class to find out how many rentals are shown on the page.</source>
          <target state="translated">En &lt;code&gt;app/templates/rentals.hbs&lt;/code&gt; , empaquetamos cada pantalla de alquiler en un elemento de &lt;code&gt;article&lt;/code&gt; y le asignamos una clase llamada &lt;code&gt;listing&lt;/code&gt; . Usaremos la clase de listado para averiguar cu&amp;aacute;ntos alquileres se muestran en la p&amp;aacute;gina.</target>
        </trans-unit>
        <trans-unit id="a4b5455ab5e863cb45f23c6155964d959ba4d78e" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;tests/helpers/start-app.js&lt;/code&gt; you need to import the helper file: it will be registered then.</source>
          <target state="translated">En &lt;code&gt;tests/helpers/start-app.js&lt;/code&gt; necesitas importar el archivo helper: entonces se registrar&amp;aacute;.</target>
        </trans-unit>
        <trans-unit id="b1f4488bf4216cd4bc33d2fd1f75097a5b82ebe6" translate="yes" xml:space="preserve">
          <source>In Ember Data a Serializer is used to serialize and deserialize records when they are transferred in and out of an external source. This process involves normalizing property names, transforming attribute values and serializing relationships.</source>
          <target state="translated">En Ember Data se utiliza un serializador para serializar y deserializar los registros cuando se transfieren dentro y fuera de una fuente externa.Este proceso implica la normalización de los nombres de las propiedades,la transformación de los valores de los atributos y la serialización de las relaciones.</target>
        </trans-unit>
        <trans-unit id="e8922e3d50ca93e7c84b802b56fd99728ccbe9b7" translate="yes" xml:space="preserve">
          <source>In Ember Data the convention is to camelize attribute names on a model. For example:</source>
          <target state="translated">En Ember Data la convención es camelizar los nombres de los atributos en un modelo.Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="2fc8022812cbb05f65f726e0a742da0716429216" translate="yes" xml:space="preserve">
          <source>In Ember Data, an Adapter determines how data is persisted to a backend data store. Things such as the backend host, URL format and headers used to talk to a REST API can all be configured in an adapter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc3423404267da66f099eae4647eaa045a734aa6" translate="yes" xml:space="preserve">
          <source>In Ember Data, each model is represented by a subclass of &lt;code&gt;Model&lt;/code&gt; that defines the attributes, relationships, and behavior of the data that you present to the user.</source>
          <target state="translated">En Ember Data, cada modelo est&amp;aacute; representado por una subclase de &lt;code&gt;Model&lt;/code&gt; que define los atributos, las relaciones y el comportamiento de los datos que presenta al usuario.</target>
        </trans-unit>
        <trans-unit id="d02d4cfdea4222f52a04195a14c59a11b26e987c" translate="yes" xml:space="preserve">
          <source>In Ember Data, models are objects that represent the underlying data that your application presents to the user. Note that Ember Data models are a different concept than the &lt;a href=&quot;../routing/specifying-a-routes-model&quot;&gt;&lt;code&gt;model&lt;/code&gt;&lt;/a&gt; method on Routes, although they share the same name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad859597c92ac410ac93e98631ea9d8d33ab905e" translate="yes" xml:space="preserve">
          <source>In Ember Data, models are objects that represent the underlying data that your application presents to the user. Note that Ember Data models are a different concept than the &lt;a href=&quot;https://guides.emberjs.com/routing/specifying-a-routes-model/&quot;&gt;&lt;code&gt;model&lt;/code&gt;&lt;/a&gt; method on Routes, although they share the same name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="020e90ae09785d28cf10b4def255217593210b22" translate="yes" xml:space="preserve">
          <source>In Ember Data, serializers format the data sent to and received from the backend store. By default, Ember Data serializes data using the &lt;a href=&quot;http://jsonapi.org/&quot;&gt;JSON API&lt;/a&gt; format. If your backend uses a different format, Ember Data allows you to customize the serializer or use a different serializer entirely.</source>
          <target state="translated">En Ember Data, los serializadores formatean los datos enviados y recibidos desde la tienda de backend. De forma predeterminada, Ember Data serializa los datos utilizando el formato de &lt;a href=&quot;http://jsonapi.org/&quot;&gt;API JSON&lt;/a&gt; . Si su backend usa un formato diferente, Ember Data le permite personalizar el serializador o usar un serializador diferente por completo.</target>
        </trans-unit>
        <trans-unit id="282e8c9c0135b0dc8b05f0f199c09ac3e636e479" translate="yes" xml:space="preserve">
          <source>In Ember Data, serializers format the data sent to and received from the backend store. By default, Ember Data serializes data using the &lt;a href=&quot;http://jsonapi.org/&quot;&gt;JSON:API&lt;/a&gt; format. If your backend uses a different format, Ember Data allows you to customize the serializer or use a different serializer entirely.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cecd6eaaa78b6b77faca6acf56bc4d2b25bc6da4" translate="yes" xml:space="preserve">
          <source>In Ember Data, the Adapter determines how data is persisted to a backend data store, such as the URL format and headers for a REST API. (The format of the data itself is determined by the &lt;a href=&quot;../customizing-serializers&quot;&gt;serializer&lt;/a&gt;.) Ember Data's default Adapter has some built-in assumptions of how a &lt;a href=&quot;http://jsonapi.org/&quot;&gt;REST API should look&lt;/a&gt;. If your backend conventions differ from these assumptions Ember Data makes it easy to change its functionality by swapping out or extending the default Adapter.</source>
          <target state="translated">En Ember Data, el adaptador determina c&amp;oacute;mo se conservan los datos en un almac&amp;eacute;n de datos de backend, como el formato de URL y los encabezados de una API REST. (El formato de los datos en s&amp;iacute; lo determina el &lt;a href=&quot;../customizing-serializers&quot;&gt;serializador&lt;/a&gt; ). El adaptador predeterminado de Ember Data tiene algunas suposiciones integradas sobre c&amp;oacute;mo &lt;a href=&quot;http://jsonapi.org/&quot;&gt;deber&amp;iacute;a verse&lt;/a&gt; una API REST . Si sus convenciones de backend difieren de estas suposiciones, Ember Data facilita el cambio de su funcionalidad al intercambiar o extender el Adaptador predeterminado.</target>
        </trans-unit>
        <trans-unit id="86329399bd3d3c6c60a2c8637b55e931796daf7a" translate="yes" xml:space="preserve">
          <source>In Ember Octane, actions are no longer defined on the &lt;code&gt;actions&lt;/code&gt; object of a component or controller. Instead, they are standard class methods decorated with the &lt;code&gt;@action&lt;/code&gt; decorator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db44b947e78ed42835c3e89cbb1845b2188747cb" translate="yes" xml:space="preserve">
          <source>In Ember, each component can have a property called &lt;code&gt;actions&lt;/code&gt;, where you put functions that can be &lt;a href=&quot;https://guides.emberjs.com/templates/actions/&quot;&gt;invoked by the user interacting with the component itself&lt;/a&gt;, or by child components.</source>
          <target state="translated">En Ember, cada componente puede tener una propiedad denominada &lt;code&gt;actions&lt;/code&gt; , donde colocas funciones que pueden ser &lt;a href=&quot;https://guides.emberjs.com/templates/actions/&quot;&gt;invocadas por el usuario que interact&amp;uacute;a con el componente en s&amp;iacute;&lt;/a&gt; , o por componentes secundarios.</target>
        </trans-unit>
        <trans-unit id="5c810f1dfecc39ef45b18228f832258388aade70" translate="yes" xml:space="preserve">
          <source>In Ember, functions that automatically run during rendering or setup are commonly referred to as &quot;hooks&quot;. When a user first visits the &lt;code&gt;/favorite-posts&lt;/code&gt; route, the &lt;code&gt;model&lt;/code&gt; hook in &lt;code&gt;app/routes/favorite-posts.js&lt;/code&gt; will automatically run. Here's an example of a model hook in use within a route:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10ebdf263834b3a8deec07fdd38c511e4b452491" translate="yes" xml:space="preserve">
          <source>In Ember, route handlers are responsible for loading the model with data for the page. It loads the data in a function called &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Route.html#method_model&quot;&gt;&lt;code&gt;model&lt;/code&gt;&lt;/a&gt;. The &lt;code&gt;model&lt;/code&gt; function acts as a &lt;strong&gt;hook&lt;/strong&gt;, meaning that Ember will call it for us during different times in our app. The model function we've added to our &lt;code&gt;rentals&lt;/code&gt; route handler will be called when a user navigates to the rentals route via root URL &lt;code&gt;http://localhost:4200&lt;/code&gt;, or via &lt;code&gt;http://localhost:4200/rentals&lt;/code&gt;.</source>
          <target state="translated">En Ember, los controladores de ruta son responsables de cargar el modelo con datos para la p&amp;aacute;gina. Carga los datos en una funci&amp;oacute;n llamada &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Route.html#method_model&quot;&gt; &lt;code&gt;model&lt;/code&gt; o&lt;/a&gt; . La funci&amp;oacute;n del &lt;code&gt;model&lt;/code&gt; o act&amp;uacute;a como un &lt;strong&gt;gancho&lt;/strong&gt; , lo que significa que Ember lo llamar&amp;aacute; por nosotros durante diferentes momentos en nuestra aplicaci&amp;oacute;n. La funci&amp;oacute;n modelo que agregamos a nuestro controlador de rutas de &lt;code&gt;rentals&lt;/code&gt; se llamar&amp;aacute; cuando un usuario navegue a la ruta de alquileres a trav&amp;eacute;s de la URL ra&amp;iacute;z &lt;code&gt;http://localhost:4200&lt;/code&gt; , o mediante &lt;code&gt;http://localhost:4200/rentals&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f66f0e171cccc0300caf2d08e6c8d06bc62b260f" translate="yes" xml:space="preserve">
          <source>In Ember, this is accomplished by defining routes with &lt;a href=&quot;../defining-your-routes#toc_dynamic-segments&quot;&gt;dynamic segments&lt;/a&gt;.</source>
          <target state="translated">En Ember, esto se logra mediante la definici&amp;oacute;n de rutas con &lt;a href=&quot;../defining-your-routes#toc_dynamic-segments&quot;&gt;segmentos din&amp;aacute;micos&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="319c22e42032038fb4fd19234909a3cb8451c3d4" translate="yes" xml:space="preserve">
          <source>In Ember, those smaller pieces are called &lt;em&gt;components&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73d52c5d2be424b7a7b55ef72d7cd326d708e343" translate="yes" xml:space="preserve">
          <source>In Ember, when we want to make a new page that can be visited using a URL, we need to generate a &quot;route&quot; using Ember CLI. For a quick overview of how Ember structures things, see &lt;a href=&quot;https://guides.emberjs.com/getting-started/core-concepts/&quot;&gt;our diagram on the Core Concepts page&lt;/a&gt;.</source>
          <target state="translated">En Ember, cuando queremos crear una nueva p&amp;aacute;gina que se pueda visitar usando una URL, necesitamos generar una &quot;ruta&quot; usando la CLI de Ember. Para obtener una descripci&amp;oacute;n general r&amp;aacute;pida de c&amp;oacute;mo Ember estructura las cosas, consulte &lt;a href=&quot;https://guides.emberjs.com/getting-started/core-concepts/&quot;&gt;nuestro diagrama en la p&amp;aacute;gina Conceptos b&amp;aacute;sicos&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ca956c24b0f6ba6fa8075e34fb2089e115484a51" translate="yes" xml:space="preserve">
          <source>In Ember.js, an enumerable is any object that contains a number of child objects, and which allows you to work with those children using the &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Enumerable.html&quot;&gt;Ember.Enumerable&lt;/a&gt; API. The most common enumerable in the majority of apps is the native JavaScript array, which Ember.js extends to conform to the enumerable interface.</source>
          <target state="translated">En Ember.js, un enumerable es cualquier objeto que contiene varios objetos secundarios y que le permite trabajar con esos ni&amp;ntilde;os mediante la API &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Enumerable.html&quot;&gt;Ember.Enumerable&lt;/a&gt; . El enumerable m&amp;aacute;s com&amp;uacute;n en la mayor&amp;iacute;a de las aplicaciones es el arreglo de JavaScript nativo, que Ember.js extiende para ajustarse a la interfaz enumerable.</target>
        </trans-unit>
        <trans-unit id="bcfca2e33f82eda25d972c5b0ed9e2423b86fb65" translate="yes" xml:space="preserve">
          <source>In EmberData a &lt;code&gt;Model&lt;/code&gt; is a class defining the attributes and relationships of a specific resource &lt;code&gt;type&lt;/code&gt; (model name). In this sense it represents a static &quot;schema&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="089ce63278589477ad3765987e2c339d8827d372" translate="yes" xml:space="preserve">
          <source>In JavaScript, we refer to it as &lt;code&gt;this.args.multiple&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6ea1e88c158ce69803a697c59dbfa5325d83e23" translate="yes" xml:space="preserve">
          <source>In Octane, template-only components have only an &lt;code&gt;hbs&lt;/code&gt; file and no &lt;code&gt;JavaScript&lt;/code&gt; file. Behind the scenes, template-only components inherit from &lt;code&gt;'@glimmer/component'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58a2cca731908d50be0c6f2ce42a60dbdecae59f" translate="yes" xml:space="preserve">
          <source>In QUnit, you can exclude tests by adding an exclamation point to the beginning of the filter, e.g. &lt;code&gt;ember test --filter=&quot;!Acceptance&quot;&lt;/code&gt;. In Mocha, &lt;code&gt;ember test --filter=&quot;Acceptance&quot; --invert&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97ce4856798aa530d952b1ebe2ecec3f3b250ee7" translate="yes" xml:space="preserve">
          <source>In a nutshell, computed properties let you declare functions as properties. You create one by defining a computed property as a function, which Ember will automatically call when you ask for the property. You can then use it the same way you would any normal, static property.</source>
          <target state="translated">En resumen,las propiedades computarizadas permiten declarar funciones como propiedades.Se crea una definiendo una propiedad calculada como una función,que Ember llamará automáticamente cuando pidas la propiedad.Entonces puedes usarla de la misma manera que cualquier propiedad normal y estática.</target>
        </trans-unit>
        <trans-unit id="d191d8024044c3d2bb0916e344bb9d2781826852" translate="yes" xml:space="preserve">
          <source>In a production build, this method is defined as an empty function (NOP). Uses of this method in Ember itself are stripped from the ember.prod.js build.</source>
          <target state="translated">En un edificio de producción,este método se define como una función vacía (NOP).Los usos de este método en el propio Ember se eliminan de la construcción de ember.prod.js.</target>
        </trans-unit>
        <trans-unit id="9281e00ac840444526df6694bf8372391ca752a0" translate="yes" xml:space="preserve">
          <source>In a route's &lt;code&gt;model()&lt;/code&gt; method, you return whatever data you want to make available to the template. If you need to fetch data asynchronously, the &lt;code&gt;model()&lt;/code&gt; method supports any library that uses &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;JavaScript Promises&lt;/a&gt;.</source>
          <target state="translated">En el m&amp;eacute;todo &lt;code&gt;model()&lt;/code&gt; una ruta , devuelve los datos que desea que est&amp;eacute;n disponibles para la plantilla. Si necesita obtener datos de forma asincr&amp;oacute;nica, el m&amp;eacute;todo &lt;code&gt;model()&lt;/code&gt; admite cualquier biblioteca que use &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;JavaScript Promises&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="645718c27192457668e42ce464d88a9c1a25ef06" translate="yes" xml:space="preserve">
          <source>In a template, you can use &lt;code&gt;if&lt;/code&gt; to conditionally render content. There are 2 styles of &lt;code&gt;if&lt;/code&gt;: &lt;strong&gt;block&lt;/strong&gt; and &lt;strong&gt;inline&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f6e40d0dc32e6016d395420700270b65bcc25b4" translate="yes" xml:space="preserve">
          <source>In a way, this is like substitution: references to &lt;code&gt;@title&lt;/code&gt; in the component's template are replaced by the value passed in from the outside.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8450844a292c3442cc4e0a46efcffc690c49dda0" translate="yes" xml:space="preserve">
          <source>In addition to adding individual links to each route of our app, we'd like to add a common header across the top of our page to display our app's title and its navigation bar.</source>
          <target state="translated">Además de añadir enlaces individuales a cada ruta de nuestra aplicación,nos gustaría añadir un encabezado común en la parte superior de nuestra página para mostrar el título de nuestra aplicación y su barra de navegación.</target>
        </trans-unit>
        <trans-unit id="7248d7673840d370bb2a00652d49b93067601785" translate="yes" xml:space="preserve">
          <source>In addition to being used as a block expression, the &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Templates.helpers.html#method_link-to&quot;&gt;&lt;code&gt;link-to&lt;/code&gt;&lt;/a&gt; component can also be used in inline form by specifying the link text as the first argument to the component:</source>
          <target state="translated">Adem&amp;aacute;s de usarse como una expresi&amp;oacute;n de bloque, el componente de &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Templates.helpers.html#method_link-to&quot;&gt; &lt;code&gt;link-to&lt;/code&gt; &lt;/a&gt; tambi&amp;eacute;n se puede usar en forma en l&amp;iacute;nea especificando el texto del enlace como el primer argumento del componente:</target>
        </trans-unit>
        <trans-unit id="5953bb9c3faa1e5036e7ae03005755f4e8bd4841" translate="yes" xml:space="preserve">
          <source>In addition to changing the property, &lt;code&gt;set()&lt;/code&gt; will also register a property change with the object. Unless you have placed this call inside of a &lt;code&gt;beginPropertyChanges()&lt;/code&gt; and &lt;code&gt;endPropertyChanges(),&lt;/code&gt; any &quot;local&quot; observers (i.e. observer methods declared on the same object), will be called immediately. Any &quot;remote&quot; observers (i.e. observer methods declared on another object) will be placed in a queue and called at a later time in a coalesced manner.</source>
          <target state="translated">Adem&amp;aacute;s de cambiar la propiedad, &lt;code&gt;set()&lt;/code&gt; tambi&amp;eacute;n registrar&amp;aacute; un cambio de propiedad con el objeto. A menos que haya colocado esta llamada dentro de &lt;code&gt;beginPropertyChanges()&lt;/code&gt; y &lt;code&gt;endPropertyChanges(),&lt;/code&gt; cualquier observador &quot;local&quot; (es decir, m&amp;eacute;todos de observador declarados en el mismo objeto), ser&amp;aacute; llamado inmediatamente. Cualquier observador &quot;remoto&quot; (es decir, los m&amp;eacute;todos de observador declarados en otro objeto) se colocar&amp;aacute; en una cola y se llamar&amp;aacute; en un momento posterior de manera conjunta.</target>
        </trans-unit>
        <trans-unit id="94b19db7074a456639b43a683fd4acf06c9ec937" translate="yes" xml:space="preserve">
          <source>In addition to configuring your app itself, you can also configure Ember CLI. These configurations can be made by adding them to the &lt;code&gt;.ember-cli&lt;/code&gt; file in your application's root. Many can also be made by passing them as arguments to the command line program.</source>
          <target state="translated">Adem&amp;aacute;s de configurar su propia aplicaci&amp;oacute;n, tambi&amp;eacute;n puede configurar Ember CLI. Estas configuraciones se pueden realizar agreg&amp;aacute;ndolas al archivo &lt;code&gt;.ember-cli&lt;/code&gt; en la ra&amp;iacute;z de su aplicaci&amp;oacute;n. Muchos tambi&amp;eacute;n se pueden hacer pas&amp;aacute;ndolos como argumentos al programa de l&amp;iacute;nea de comandos.</target>
        </trans-unit>
        <trans-unit id="d055bf80ed629dd34b651143615ae11138b04a2d" translate="yes" xml:space="preserve">
          <source>In addition to creating your application's router, &lt;code&gt;Application&lt;/code&gt; is also responsible for telling the router when to start routing. Transitions between routes can be logged with the &lt;code&gt;LOG_TRANSITIONS&lt;/code&gt; flag, and more detailed intra-transition logging can be logged with the &lt;code&gt;LOG_TRANSITIONS_INTERNAL&lt;/code&gt; flag:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04120f2584ff44f86df756f40d954b030cf830f7" translate="yes" xml:space="preserve">
          <source>In addition to creating your application's router, &lt;code&gt;Ember.Application&lt;/code&gt; is also responsible for telling the router when to start routing. Transitions between routes can be logged with the &lt;code&gt;LOG_TRANSITIONS&lt;/code&gt; flag, and more detailed intra-transition logging can be logged with the &lt;code&gt;LOG_TRANSITIONS_INTERNAL&lt;/code&gt; flag:</source>
          <target state="translated">Adem&amp;aacute;s de crear el enrutador de su aplicaci&amp;oacute;n, &lt;code&gt;Ember.Application&lt;/code&gt; tambi&amp;eacute;n es responsable de decirle al enrutador cu&amp;aacute;ndo comenzar a enrutar. Las transiciones entre rutas se pueden registrar con el indicador &lt;code&gt;LOG_TRANSITIONS&lt;/code&gt; , y un registro m&amp;aacute;s detallado dentro de la transici&amp;oacute;n se puede registrar con el indicador &lt;code&gt;LOG_TRANSITIONS_INTERNAL&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="53b810ca88c49148bf8529cc730957d08ba23a00" translate="yes" xml:space="preserve">
          <source>In addition to inspecting the properties above, you can inspect properties that hold Ember objects or arrays. Click on the property's value to inspect it.</source>
          <target state="translated">Además de inspeccionar las propiedades anteriores,puede inspeccionar las propiedades que contienen objetos o conjuntos de ámbar.Haz clic en el valor de la propiedad para inspeccionarla.</target>
        </trans-unit>
        <trans-unit id="a8a1acf0607c1bdf78f15fa107ca21a225ab0710" translate="yes" xml:space="preserve">
          <source>In addition to normal HTML syntax, Ember allows you to use self-closing syntax (&lt;code&gt;&amp;lt;div /&amp;gt;&lt;/code&gt;) as a shorthand for an opening and closing tag (&lt;code&gt;&amp;lt;div&amp;gt;&amp;lt;/div&amp;gt;&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb0d0a4a5b5ef9e676466f88a09f5d5e815adf21" translate="yes" xml:space="preserve">
          <source>In addition to normal text, you may also want to have your templates contain HTML elements whose attributes are bound to the controller.</source>
          <target state="translated">Además del texto normal,es posible que también desee que sus plantillas contengan elementos HTML cuyos atributos estén vinculados al controlador.</target>
        </trans-unit>
        <trans-unit id="fb71985b0bd4715b94d142d94c6c0f1cc1875107" translate="yes" xml:space="preserve">
          <source>In addition to our &lt;code&gt;about&lt;/code&gt; and &lt;code&gt;contact&lt;/code&gt; pages, we want to show a list of rentals that our visitors can look through. So let's add a third route and call it &lt;code&gt;rentals&lt;/code&gt;:</source>
          <target state="translated">Adem&amp;aacute;s de nuestras p&amp;aacute;ginas de &lt;code&gt;contact&lt;/code&gt; o y &lt;code&gt;about&lt;/code&gt; , queremos mostrar una lista de alquileres que nuestros visitantes pueden consultar. As&amp;iacute; que agreguemos una tercera ruta y llam&amp;eacute;mosla &lt;code&gt;rentals&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="221b9fa6557159911efe423de7834a91511421a1" translate="yes" xml:space="preserve">
          <source>In addition to passing a target, you can also include an options hash which you can use to override the method names that will be invoked on the target.</source>
          <target state="translated">Además de pasar un objetivo,también se puede incluir un hash de opciones que se puede utilizar para anular los nombres de los métodos que se invocarán en el objetivo.</target>
        </trans-unit>
        <trans-unit id="cf82e6f4f7f4bfd42ef97a57af6350e73eea3b24" translate="yes" xml:space="preserve">
          <source>In addition to passing parameters in by name, you can pass them in by position. In other words, you can invoke the above component example like this:</source>
          <target state="translated">Además de pasar los parámetros por nombre,puedes pasarlos por posición.En otras palabras,puedes invocar el ejemplo del componente anterior de esta manera:</target>
        </trans-unit>
        <trans-unit id="fa2c90914eaa26f905da98f8871cb00eda57b01f" translate="yes" xml:space="preserve">
          <source>In addition to static HTML content, Ember uses the syntax of &lt;a href=&quot;http://handlebarsjs.com&quot;&gt;Handlebars&lt;/a&gt; to describe dynamic user interface elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b17c75d75c7564637ba2340bebe7097b7e90480" translate="yes" xml:space="preserve">
          <source>In addition to taking &lt;em&gt;positional arguments&lt;/em&gt; as an array, helpers take &lt;em&gt;named arguments&lt;/em&gt; as a JavaScript object. Here's what that looks like using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment#Unpacking_fields_from_objects_passed_as_function_parameter&quot;&gt;destructuring syntax&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d5fbbcc31f1d06e473058b4269ca9384c6c9271" translate="yes" xml:space="preserve">
          <source>In addition to the callback you can also pass an &lt;code&gt;initialValue&lt;/code&gt;. An error will be raised if you do not pass an initial value and the enumerator is empty.</source>
          <target state="translated">Adem&amp;aacute;s de la devoluci&amp;oacute;n de llamada, tambi&amp;eacute;n puede pasar un &lt;code&gt;initialValue&lt;/code&gt; . Se generar&amp;aacute; un error si no pasa un valor inicial y el enumerador est&amp;aacute; vac&amp;iacute;o.</target>
        </trans-unit>
        <trans-unit id="c07f561ab6435c37fbe776d0dd4427c73cfa82d8" translate="yes" xml:space="preserve">
          <source>In addition to the simple form you've learned so far, components also support being used in &lt;strong&gt;block form&lt;/strong&gt;. In block form, components can be passed a Handlebars template that is rendered inside the component's template wherever the &lt;code&gt;{{yield}}&lt;/code&gt; expression appears.</source>
          <target state="translated">Adem&amp;aacute;s de la forma simple que ha aprendido hasta ahora, los componentes tambi&amp;eacute;n admiten el uso en &lt;strong&gt;forma de bloque&lt;/strong&gt; . En forma de bloque, a los componentes se les puede pasar una plantilla de manubrios que se representa dentro de la plantilla del componente dondequiera que aparezca la expresi&amp;oacute;n &lt;code&gt;{{yield}}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cf9cf93d3121f0c7bd29b4d440bd7c84392b1c08" translate="yes" xml:space="preserve">
          <source>In addition to the template, a component can also have a JavaScript file for this exact purpose. Go ahead and create a &lt;code&gt;.js&lt;/code&gt; file with the same name and in the same directory as our template (&lt;code&gt;app/components/people-list.js&lt;/code&gt;), and paste in the following content:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c993a770121b9ff6c26bcb5f56aeb240292589b7" translate="yes" xml:space="preserve">
          <source>In addition to what is described in the &lt;a href=&quot;../handling-deprecations&quot;&gt;Handling Deprecations guide&lt;/a&gt;, you can turn on the following settings:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e238e0e235c5e8d42377c6225baf42dcc8ef87a6" translate="yes" xml:space="preserve">
          <source>In addition, &lt;code&gt;setupRenderingTest()&lt;/code&gt; allows Ember's renderer to use helpers for rendering and DOM interaction, such as &lt;code&gt;render&lt;/code&gt;, &lt;code&gt;click&lt;/code&gt;, and &lt;code&gt;fillIn&lt;/code&gt;. You can also use &lt;code&gt;this.element&lt;/code&gt; to access the DOM element that results from &lt;code&gt;render&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c30b274e201e1a88dec1b6277ff73650917489e8" translate="yes" xml:space="preserve">
          <source>In addition, some new framework classes, such as Glimmer components, do &lt;em&gt;not&lt;/em&gt; support Ember mixins at all. In the future, mixins will be removed from the framework, and will not be replaced directly. For apps that use mixins, the recommended path is to refactor the mixins to other patterns, including:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64ae3ce25e79e0119cdd5d349af6c0cee5ecd892" translate="yes" xml:space="preserve">
          <source>In addition, the &lt;code&gt;class&lt;/code&gt; attribute is special, and will be &lt;em&gt;merged&lt;/em&gt; with any existing classes on the element rather than overwriting them. This allows you to progressively add CSS classes to your components, and makes them more flexible overall.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daa2ae3bb3f54c6fd68deda9a8b87eb3769c2c57" translate="yes" xml:space="preserve">
          <source>In all other cases, specify the &lt;em&gt;method&lt;/em&gt; you want to call when using &lt;code&gt;super&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="790211173a6525369afd2c1c1d63f10323fec633" translate="yes" xml:space="preserve">
          <source>In almost every case, this is where your app should load data. You can see examples and more information in &lt;a href=&quot;https://guides.emberjs.com/routing/specifying-a-routes-model/&quot;&gt;Specifying a Route's Model&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8a2dff726af17914875d675aa37e2809297fe95" translate="yes" xml:space="preserve">
          <source>In an application, it is often easier to specify an &lt;code&gt;serializer:application&lt;/code&gt;. However, if you are the author of a community adapter it is important to remember to set this property to ensure Ember does the right thing in the case a user of your adapter does not specify an &lt;code&gt;serializer:application&lt;/code&gt;.</source>
          <target state="translated">En una aplicaci&amp;oacute;n, a menudo es m&amp;aacute;s f&amp;aacute;cil especificar un &lt;code&gt;serializer:application&lt;/code&gt; . Sin embargo, si usted es el autor de un adaptador de la comunidad, es importante tener en cuenta para establecer esta propiedad para garantizar Ember hace lo correcto en el caso de un usuario de su adaptador no especifica un &lt;code&gt;serializer:application&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e676e9e199dec652bbdb22bafa7bf210e04f6ce8" translate="yes" xml:space="preserve">
          <source>In both cases, Ember will render the content of the component template we created above. The end result will be something like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c77afa69f947e520b0cbca942a8919e2127e88f" translate="yes" xml:space="preserve">
          <source>In both of the examples above, &lt;code&gt;incomplete&lt;/code&gt; is an array containing the single incomplete todo:</source>
          <target state="translated">En los dos ejemplos anteriores, &lt;code&gt;incomplete&lt;/code&gt; es una matriz que contiene la &amp;uacute;nica tarea incompleta:</target>
        </trans-unit>
        <trans-unit id="251dc98af512d3fc82ed3f9557100b33857b9baf" translate="yes" xml:space="preserve">
          <source>In case the object's method returns a value, you can simply assert that the return value is calculated correctly. Suppose our object has a &lt;code&gt;calc&lt;/code&gt; method that returns a value based on some internal state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0144d18e6400ef1a25f7cdfc1ad03e526c8b365e" translate="yes" xml:space="preserve">
          <source>In case we want both custom logic and the default behavior for the loading substate, we can implement the &lt;code&gt;loading&lt;/code&gt; action and let it bubble by returning &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e470dc6719bbfe1acfd2c927ccbaf2908229f88e" translate="yes" xml:space="preserve">
          <source>In case we want to run some custom logic and have the default behavior of rendering the error template, we can handle the &lt;code&gt;error&lt;/code&gt; event and let it bubble by returning &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbb81a4985c1f1949a783d5976c86e8a62cd78f8" translate="yes" xml:space="preserve">
          <source>In case you want to sort the query parameters with a different criteria, set &lt;code&gt;sortQueryParams&lt;/code&gt; to your custom sort function.</source>
          <target state="translated">En caso de que desee ordenar los par&amp;aacute;metros de consulta con un criterio diferente, configure &lt;code&gt;sortQueryParams&lt;/code&gt; en su funci&amp;oacute;n de ordenaci&amp;oacute;n personalizada.</target>
        </trans-unit>
        <trans-unit id="007ab8f7c6edaf0f49f780117c3562ef72548a77" translate="yes" xml:space="preserve">
          <source>In cases like this, it's important that we include some information in the URL about not only which template to display, but also which model.</source>
          <target state="translated">En casos como este,es importante que incluyamos alguna información en la URL no sólo sobre qué plantilla mostrar,sino también sobre qué modelo.</target>
        </trans-unit>
        <trans-unit id="046ce99b990c33a7050362da82e3f46ab8d5074f" translate="yes" xml:space="preserve">
          <source>In cases when you were using the hooks to manipulate the DOM, you can instead update to use &lt;em&gt;modifiers&lt;/em&gt;. For instance, let's say you were adding an event listener to the &lt;code&gt;element&lt;/code&gt; in your component's &lt;code&gt;didInsertElement&lt;/code&gt; hook, and removing it in &lt;code&gt;willDestroyElement&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="140bf4c66987841001d1b34fe2e3605f89d02589" translate="yes" xml:space="preserve">
          <source>In cases where components have dependencies on Ember services, it is possible to stub these dependencies for integration tests. You stub Ember services by using the built-in &lt;code&gt;register()&lt;/code&gt; function to register your stub service in place of the default.</source>
          <target state="translated">En los casos en los que los componentes tienen dependencias de los servicios de Ember, es posible eliminar estas dependencias para las pruebas de integraci&amp;oacute;n. Usted stub servicios Ember usando la funci&amp;oacute;n de &lt;code&gt;register()&lt;/code&gt; incorporada para registrar su servicio stub en lugar del predeterminado.</target>
        </trans-unit>
        <trans-unit id="f11345d8738a5017ccd55d343c85df0b1c3b3b63" translate="yes" xml:space="preserve">
          <source>In cases where components have dependencies on Ember services, it is possible to stub these dependencies for rendering tests. You stub Ember services by using the built-in &lt;code&gt;register()&lt;/code&gt; function to register your stub service in place of the default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ea60124c7e95e893e7721d8b9cbc140fc37b6eb" translate="yes" xml:space="preserve">
          <source>In cases where you have components nested inside other components, the child component will always receive the &lt;code&gt;didInsertElement()&lt;/code&gt; call before its parent does.</source>
          <target state="translated">En los casos en los que tenga componentes anidados dentro de otros componentes, el componente hijo siempre recibir&amp;aacute; la llamada &lt;code&gt;didInsertElement()&lt;/code&gt; antes que su padre.</target>
        </trans-unit>
        <trans-unit id="efac470050e0447cd220bd2bbe07a00a4499c07f" translate="yes" xml:space="preserve">
          <source>In certain cases, you will want to pass arguments to &lt;code&gt;_super()&lt;/code&gt; before or after overriding.</source>
          <target state="translated">En ciertos casos, querr&amp;aacute; pasar argumentos a &lt;code&gt;_super()&lt;/code&gt; antes o despu&amp;eacute;s de anular.</target>
        </trans-unit>
        <trans-unit id="3cbfd3b8feec6f7e648cc5c390e5635fb32a5a3a" translate="yes" xml:space="preserve">
          <source>In certain cases, you will want to pass arguments to the super method before or after overriding. This allows the super class method to continue operating as it normally would.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c47ad743d274330132ca71e73f946203dac499bd" translate="yes" xml:space="preserve">
          <source>In class components, arguments are assigned &lt;em&gt;directly&lt;/em&gt; to the class instance. This has caused a lot of issues over the years, from methods and actions being overwritten, to unclear code where the difference between internal class values and arguments is hard to reason about.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbf68390dd238426f1ab9affee489d3f0eeb9f7e" translate="yes" xml:space="preserve">
          <source>In classic Ember, all property access had to go through these two methods. Over time, these rules have become less strict, and now they have been minimized to just a few cases. In general, in a modern Ember app, you shouldn't need to use them all that much. As long as you are marking your properties as &lt;code&gt;@tracked&lt;/code&gt;, Ember should automatically figure out what needs to change, and when.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52045792f745e23dde9ea86d6790269b942d3505" translate="yes" xml:space="preserve">
          <source>In classic classes, if you wanted to add values to the &lt;em&gt;class&lt;/em&gt; itself, you had to use the &lt;code&gt;reopenClass&lt;/code&gt; method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fc805a0aed0e1ac236e0a470d23fbf4a97c4a83" translate="yes" xml:space="preserve">
          <source>In constructors, use the keyword by itself (this is required). Generally pass any arguments along as well:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="245fa1188d4d8769bc14e6a9123f2fd6dd8f6d19" translate="yes" xml:space="preserve">
          <source>In contrast to async relationship, accessing a sync relationship will always return a &lt;a href=&quot;https://api.emberjs.com/ember-data/release/classes/ManyArray&quot;&gt;ManyArray&lt;/a&gt; instance containing the existing local resources. But it will error on access when any of the known related resources have not been loaded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b574f7da355ce07aa8e74c7a7542bef9b94aedfc" translate="yes" xml:space="preserve">
          <source>In contrast to async relationship, accessing a sync relationship will always return the record (Model instance) for the existing local resource, or null. But it will error on access when a related resource is known to exist and it has not been loaded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c05f19a64ef3d584c511d0421d6de21ce8c82d1" translate="yes" xml:space="preserve">
          <source>In contrast to computed properties from pre-Octane, tracked properties are not cached. A tracked property can also be recomputed even though its dependencies haven't changed. The following example shows this behavior:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c4d2d7d824657fa49897ec312cf47acd2d20585" translate="yes" xml:space="preserve">
          <source>In general, applications should not use this feature, but it's commonly used in addons for historical reasons.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbcdc6c173cd3e85b3e8a8c7c233b15abdfdfc0c" translate="yes" xml:space="preserve">
          <source>In general, before reaching for direct DOM manipulation, you should see whether you can model the changes that you want by writing a single template that applies no matter what the input is.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="379148dec8697afc29af4d37fa65679590a66a46" translate="yes" xml:space="preserve">
          <source>In general, if a value in your application could update, and that update should trigger rerenders, then you should mark that value as &lt;code&gt;@tracked&lt;/code&gt;. This oftentimes may mean taking a POJO and turning it into a class, but this is usually better because it forces us to &lt;em&gt;rationalize&lt;/em&gt; the object - think about what its API is, what values it has, what data it represents, and define that in a single place.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01bf8f22c794258b2e001fea31db958ba6c95820" translate="yes" xml:space="preserve">
          <source>In general, if the display of your view changes, you should modify the DOM element directly instead of manually calling &lt;code&gt;rerender&lt;/code&gt;, which can be slow.</source>
          <target state="translated">En general, si cambia la visualizaci&amp;oacute;n de su vista, debe modificar el elemento DOM directamente en lugar de llamar manualmente a &lt;code&gt;rerender&lt;/code&gt; , que puede ser lento.</target>
        </trans-unit>
        <trans-unit id="4fe3154e526376ed92c5ac5d9f92658d17616566" translate="yes" xml:space="preserve">
          <source>In general, it's a good idea to pass along any arguments to the parent class in the call to &lt;code&gt;super&lt;/code&gt;, since they'll probably be necessary for setting up the class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cca8a3ac929c358b4f2a8c6f4444864537d63371" translate="yes" xml:space="preserve">
          <source>In general, only properties which you &lt;em&gt;expect&lt;/em&gt; to be watched by older, untracked clases should be marked as dependency compatible. The decorator is meant as an interop layer for parts of Ember's older classic APIs, and should not be applied to every possible getter/setter in classes. The number of dependency compatible getters should be &lt;em&gt;minimized&lt;/em&gt; wherever possible. New application code should not need to use &lt;code&gt;@dependentKeyCompat&lt;/code&gt;, since it is only for interoperation with older code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95cdb46dcafa1b2ff8bf4c03d68ac3cec2620f6c" translate="yes" xml:space="preserve">
          <source>In general, this method will be used by build time tooling and would not be directly written in an application. However, at times it may be useful to use directly to leverage the &quot;outer HTML&quot; semantics mentioned above. For example, if an addon would like to use these semantics for its templates but cannot be certain it will only be consumed by applications that have enabled the &lt;code&gt;template-only-glimmer-components&lt;/code&gt; optional feature.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87ac84322f06e5cc0359a40f03cf2cec4731ea62" translate="yes" xml:space="preserve">
          <source>In general, you should place &lt;code&gt;...attributes&lt;/code&gt; after any attributes you specify to give people using your component an opportunity to override your attribute. If &lt;code&gt;...attributes&lt;/code&gt; appears &lt;em&gt;after&lt;/em&gt; an attribute, it overrides that attribute. If it appears &lt;em&gt;before&lt;/em&gt; an attribute, it does not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0eadba08dcf842bcd6e05a3d8a08469fe1157820" translate="yes" xml:space="preserve">
          <source>In general, you should prefer using components if you are wrapping content in HTML. However, if you really want to include a mix of HTML and values from models in what you return from the helper, make sure you escape anything that may have come from an untrusted user with the &lt;code&gt;escapeExpression&lt;/code&gt; utility:</source>
          <target state="translated">En general, deber&amp;iacute;a preferir usar componentes si est&amp;aacute; ajustando contenido en HTML. Sin embargo, si realmente desea incluir una combinaci&amp;oacute;n de HTML y valores de modelos en lo que devuelve del asistente, aseg&amp;uacute;rese de escapar de todo lo que pueda haber venido de un usuario que no sea de confianza con la utilidad &lt;code&gt;escapeExpression&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="b5e095facb34926d737667cd5199f272d7147fde" translate="yes" xml:space="preserve">
          <source>In its most basic form, a component is just a piece of template that can be referred to by name. Similar to functions in programming languages, they can also take &lt;em&gt;arguments&lt;/em&gt;, allowing them to be customized to the specific context they are being rendered into.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="533d8a41fd599876ff0516f9ce80b41c1c9e3282" translate="yes" xml:space="preserve">
          <source>In many cases it is not necessary to use the full &lt;code&gt;Helper&lt;/code&gt; class. The &lt;code&gt;helper&lt;/code&gt; method create pure-function helpers without instances. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83972353d37463127261822a6f4e792cba94fc19" translate="yes" xml:space="preserve">
          <source>In many cases, the ceremony of a full &lt;code&gt;Ember.Helper&lt;/code&gt; class is not required. The &lt;code&gt;helper&lt;/code&gt; method create pure-function helpers without instances. For example:</source>
          <target state="translated">En muchos casos, no se requiere la ceremonia de una clase completa de &lt;code&gt;Ember.Helper&lt;/code&gt; . El m&amp;eacute;todo de &lt;code&gt;helper&lt;/code&gt; crea ayudantes de funci&amp;oacute;n pura sin instancias. Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="278a767e5f09e22ba13a70bd34d39cf70a2f2f97" translate="yes" xml:space="preserve">
          <source>In most cases, the best way to think about your component's output is to assume that it will be re-executed from the top every time anything changes in your application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3d7fe6b2728af61cd6e8f8f05879e65deb09332" translate="yes" xml:space="preserve">
          <source>In most cases, your application's entire UI will be created by templates that are managed by the router.</source>
          <target state="translated">En la mayoría de los casos,toda la interfaz de usuario de su aplicación se creará mediante plantillas que son administradas por el enrutador.</target>
        </trans-unit>
        <trans-unit id="99db7dfd66171d5d107b9026c957e1937dfc45fa" translate="yes" xml:space="preserve">
          <source>In most cases, your component should restrict its behavior to its own elements. However, there are cases where a component needs to do something outside of itself. One simple example of this would be an element that wants to handle clicks outside of its DOM, which requires registering a handler on the whole document, and then hit-testing the element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fb3f133f65574f1c7e8491a9e46d0fcaf1246bc" translate="yes" xml:space="preserve">
          <source>In native classes this can be done with the &lt;code&gt;static&lt;/code&gt; keyword instead:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5f9b1d7912778b632497835956583fb5a124d56" translate="yes" xml:space="preserve">
          <source>In native classes, there is a dedicated &lt;code&gt;super&lt;/code&gt; keyword that replaces the &lt;code&gt;_super()&lt;/code&gt; method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9979806abc09c97bad619e26ee37720832229b8b" translate="yes" xml:space="preserve">
          <source>In non-browser mode, because Ember does not have access to jQuery, this options must be specified as a DOM &lt;code&gt;Element&lt;/code&gt; object instead of a selector string.</source>
          <target state="translated">En modo sin navegador, debido a que Ember no tiene acceso a jQuery, estas opciones deben especificarse como un objeto de &lt;code&gt;Element&lt;/code&gt; DOM en lugar de una cadena de selecci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="c08ca441bd16cdb06d31bfc505ab1952ccb60839" translate="yes" xml:space="preserve">
          <source>In non-browser mode, this could be a &quot;&lt;code&gt;Document&lt;/code&gt;-like&quot; object as Ember only interact with a small subset of the DOM API in non- interactive mode. While the exact requirements have not yet been formalized, the &lt;code&gt;SimpleDOM&lt;/code&gt; library's implementation is known to work.</source>
          <target state="translated">En el modo sin navegador, este podr&amp;iacute;a ser un objeto &quot;similar a un &lt;code&gt;Document&lt;/code&gt; &quot;, ya que Ember solo interact&amp;uacute;a con un peque&amp;ntilde;o subconjunto de la API DOM en modo no interactivo. Si bien los requisitos exactos a&amp;uacute;n no se han formalizado, se &lt;code&gt;SimpleDOM&lt;/code&gt; que la implementaci&amp;oacute;n de la biblioteca SimpleDOM funciona.</target>
        </trans-unit>
        <trans-unit id="96fa5d3c4e651e995e82ce46635d182ae80b92ed" translate="yes" xml:space="preserve">
          <source>In non-production builds, this function will return the stack that this Transition was aborted within (or &lt;code&gt;undefined&lt;/code&gt; if the Transition has not been aborted yet). In production builds, this function will not be present.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e89d451f0594c89283eb2d1985919b2a07e867ee" translate="yes" xml:space="preserve">
          <source>In non-production builds, this function will return the stack that this Transition was created within. In production builds, this function will not be present.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a29aa667fe64e765db2e29d8b8144a930abf1be" translate="yes" xml:space="preserve">
          <source>In non-production builds, this property references the Transition that &lt;em&gt;this&lt;/em&gt; Transition was derived from or &lt;code&gt;undefined&lt;/code&gt; if this transition did not derive from another. In production builds, this property will not be present.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a32f151731ef842cca2362270b4a8bb09fc22890" translate="yes" xml:space="preserve">
          <source>In order for &lt;code&gt;confirmValue&lt;/code&gt; to take on the value of the message text, we'll bind the property to the value of a user input field that will appear when the button is clicked. To accomplish this, we'll first modify the component so that it can be used in block form and we will &lt;a href=&quot;../wrapping-content-in-a-component&quot;&gt;yield&lt;/a&gt;&lt;code&gt;confirmValue&lt;/code&gt; to the block within the &lt;code&gt;&quot;confirmDialog&quot;&lt;/code&gt; element:</source>
          <target state="translated">Para que &lt;code&gt;confirmValue&lt;/code&gt; tome el valor del texto del mensaje, vincularemos la propiedad al valor de un campo de entrada del usuario que aparecer&amp;aacute; cuando se haga clic en el bot&amp;oacute;n. Para lograr esto, primero vamos a modificar el componente de modo que pueda ser utilizado en forma de bloques y vamos a &lt;a href=&quot;../wrapping-content-in-a-component&quot;&gt;dar &lt;/a&gt; &lt;code&gt;confirmValue&lt;/code&gt; al bloque dentro de la &lt;code&gt;&quot;confirmDialog&quot;&lt;/code&gt; elemento:</target>
        </trans-unit>
        <trans-unit id="5aec37ca9172d1a10827d21002d5c4468f0fc681" translate="yes" xml:space="preserve">
          <source>In order for &lt;code&gt;confirmValue&lt;/code&gt; to take on the value of the message text, we'll bind the property to the value of a user input field that will appear when the button is clicked. To accomplish this, we'll first modify the component so that it can be used in block form and we will pass &lt;code&gt;confirmValue&lt;/code&gt; as a &lt;a href=&quot;https://guides.emberjs.com/components/block-content/&quot;&gt;block parameter&lt;/a&gt; within the confirm dialog element:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5fbb24fad6ae7ae60b72e40ef4ddb75d5c21e0e" translate="yes" xml:space="preserve">
          <source>In order for Ember to observe when you make a change to an enumerable, you need to use special methods that &lt;code&gt;Ember.Enumerable&lt;/code&gt; provides. For example, if you add an element to an array using the standard JavaScript method &lt;code&gt;push()&lt;/code&gt;, Ember will not be able to observe the change, but if you use the enumerable method &lt;code&gt;pushObject()&lt;/code&gt;, the change will propagate throughout your application.</source>
          <target state="translated">Para que Ember observe cu&amp;aacute;ndo realiza un cambio en un enumerable, debe usar m&amp;eacute;todos especiales que proporciona &lt;code&gt;Ember.Enumerable&lt;/code&gt; . Por ejemplo, si agrega un elemento a una matriz usando el m&amp;eacute;todo est&amp;aacute;ndar de JavaScript &lt;code&gt;push()&lt;/code&gt; , Ember no podr&amp;aacute; observar el cambio, pero si usa el m&amp;eacute;todo enumerable &lt;code&gt;pushObject()&lt;/code&gt; , el cambio se propagar&amp;aacute; por toda su aplicaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="6d6afe0cb7e4458149917e9aa081f823e6e21d3b" translate="yes" xml:space="preserve">
          <source>In order for rendering tests to work, you must call &lt;a href=&quot;https://github.com/emberjs/ember-qunit#setup-rendering-tests&quot;&gt;&lt;code&gt;setupRenderingTest()&lt;/code&gt;&lt;/a&gt; and pass the &lt;code&gt;hooks&lt;/code&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="936cfa8baf9fcf4794eab9ec69dff360d88aa7fc" translate="yes" xml:space="preserve">
          <source>In order for this to work, we need our application to default to making requests to the namespace of &lt;code&gt;/api&lt;/code&gt;. To do this, we want to generate an application adapter. An &lt;a href=&quot;https://guides.emberjs.com/models/customizing-adapters&quot;&gt;Adapter&lt;/a&gt; is an object that &lt;a href=&quot;https://guides.emberjs.com/models&quot;&gt;Ember Data&lt;/a&gt; uses to determine how we communicate with our backend. We will cover Ember Data in more detail later in this tutorial. For now, let's generate an adapter for our application:</source>
          <target state="translated">Para que esto funcione, necesitamos que nuestra aplicaci&amp;oacute;n haga solicitudes de forma predeterminada al espacio de nombres de &lt;code&gt;/api&lt;/code&gt; . Para hacer esto, queremos generar un adaptador de aplicaci&amp;oacute;n. Un &lt;a href=&quot;https://guides.emberjs.com/models/customizing-adapters&quot;&gt;adaptador&lt;/a&gt; es un objeto que usa &lt;a href=&quot;https://guides.emberjs.com/models&quot;&gt;Ember Data&lt;/a&gt; para determinar c&amp;oacute;mo nos comunicamos con nuestro backend. Cubriremos Ember Data con m&amp;aacute;s detalle m&amp;aacute;s adelante en este tutorial. Por ahora, generemos un adaptador para nuestra aplicaci&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="9ee6874cf19c007eb98370f9ddd7c8bc33406709" translate="yes" xml:space="preserve">
          <source>In order for your application to behave correctly, you will need to manually extend or create the objects that the native objects were creating before.</source>
          <target state="translated">Para que su aplicación se comporte correctamente,tendrá que extender o crear manualmente los objetos que los objetos nativos estaban creando antes.</target>
        </trans-unit>
        <trans-unit id="1342c5f6a6769bf64e4015aa6508ea15a1d91f76" translate="yes" xml:space="preserve">
          <source>In order to do this, we will need to modify the Mirage &lt;code&gt;config.js&lt;/code&gt; file that we added back in the &lt;a href=&quot;../installing-addons&quot;&gt;Installing Addons section&lt;/a&gt;. We will add a new route handler to return a specific rental:</source>
          <target state="translated">Para hacer esto, necesitaremos modificar el archivo &lt;code&gt;config.js&lt;/code&gt; de Mirage que agregamos nuevamente en la &lt;a href=&quot;../installing-addons&quot;&gt;secci&amp;oacute;n Instalaci&amp;oacute;n de complementos&lt;/a&gt; . Agregaremos un nuevo controlador de ruta para devolver un alquiler espec&amp;iacute;fico:</target>
        </trans-unit>
        <trans-unit id="3dc20618ed655d1ecf2b71ecaacbc4d6b6f5f43a" translate="yes" xml:space="preserve">
          <source>In order to improve rendering speed, Ember will try to reuse the DOM elements where possible. Specifically, if the same item is present in the array both before and after the change, its DOM output will be reused.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32aafffe8049443d7fbfd609d0de1ed4fdc3d72c" translate="yes" xml:space="preserve">
          <source>In order to keep track of unique records in the store Ember Data expects every record to have an &lt;code&gt;id&lt;/code&gt; property in the payload. Ids should be unique for every unique record of a specific type. If your backend uses a key other than &lt;code&gt;id&lt;/code&gt; you can use the serializer's &lt;code&gt;primaryKey&lt;/code&gt; property to correctly transform the id property to &lt;code&gt;id&lt;/code&gt; when serializing and deserializing data.</source>
          <target state="translated">Para realizar un seguimiento de los registros &amp;uacute;nicos en la tienda, Ember Data espera que cada registro tenga una propiedad de &lt;code&gt;id&lt;/code&gt; entificaci&amp;oacute;n en la carga &amp;uacute;til. Los identificadores deben ser &amp;uacute;nicos para cada registro &amp;uacute;nico de un tipo espec&amp;iacute;fico. Si su backend usa una clave que no sea &lt;code&gt;id&lt;/code&gt; , puede usar la propiedad &lt;code&gt;primaryKey&lt;/code&gt; del serializador para transformar correctamente la propiedad &lt;code&gt;id&lt;/code&gt; en id al serializar y deserializar datos.</target>
        </trans-unit>
        <trans-unit id="bcc5b2c4cb20571c816f7c9ebed2212e3ddf27a6" translate="yes" xml:space="preserve">
          <source>In order to make a property available to a component, you must pass it in like this:</source>
          <target state="translated">Para poner una propiedad a disposición de un componente,debe pasarla de esta manera:</target>
        </trans-unit>
        <trans-unit id="751f013916c3480acab6efa76e385df4ae29d95b" translate="yes" xml:space="preserve">
          <source>In order to properly fetch and update data, EmberData needs to understand how to connect to your API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ec6d92245f42ae4c5954aff7d6235e007431aba" translate="yes" xml:space="preserve">
          <source>In order to properly manage and present your data, EmberData needs to understand the structure of data it receives.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a0d6bbb2b7569f2b4d0d9a4fbbd06b11f26be73" translate="yes" xml:space="preserve">
          <source>In order to tell Ember a value might change, we need to mark it as &lt;em&gt;trackable&lt;/em&gt;. Trackable values are values that:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3f7f2079118c91e80deed6ef009f2f473c1df29" translate="yes" xml:space="preserve">
          <source>In order to tell Ember a value might change, we need to mark it as trackable. Trackable values are values that:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67a9efb1c8792f0b1fcf5fd7c6f4efd0669bf530" translate="yes" xml:space="preserve">
          <source>In order to test the &lt;code&gt;doSomething&lt;/code&gt; method we create an instance of &lt;code&gt;SomeThing&lt;/code&gt;, update the observed property (&lt;code&gt;foo&lt;/code&gt;), and assert that the expected effects are present.</source>
          <target state="translated">Con el fin de probar la &lt;code&gt;doSomething&lt;/code&gt; m&amp;eacute;todo creamos una instancia de &lt;code&gt;SomeThing&lt;/code&gt; , actualice la propiedad observada ( &lt;code&gt;foo&lt;/code&gt; ), y afirman que los efectos esperados est&amp;aacute;n presentes.</target>
        </trans-unit>
        <trans-unit id="3d8dd7f817efbf58fba8261fd92fb0f81d2f4e58" translate="yes" xml:space="preserve">
          <source>In other words, this creates static properties and functions for the class. These are only available on the class and not on any instance of that class.</source>
          <target state="translated">En otras palabras,esto crea propiedades y funciones estáticas para la clase.Éstas sólo están disponibles en la clase y no en ninguna instancia de esa clase.</target>
        </trans-unit>
        <trans-unit id="29ac4be95e046b79744d0f6c9efaf29f1061443a" translate="yes" xml:space="preserve">
          <source>In our &lt;code&gt;ButtonWithConfirmation&lt;/code&gt; component we want to leave the confirmation modal open until we know that the operation has completed successfully. This is accomplished by expecting a promise to be returned from &lt;code&gt;onConfirm&lt;/code&gt;. Upon resolution of the promise, we set a property used to indicate the visibility of the confirmation modal. We can use an &lt;code&gt;async&lt;/code&gt; function to handle that promise:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5445313fa7bfb3488d6f91f5f8f2b43e93ba0f1" translate="yes" xml:space="preserve">
          <source>In our &lt;code&gt;app/templates/rentals.hbs&lt;/code&gt; template file, we'll add a reference to our new &lt;code&gt;list-filter&lt;/code&gt; component.</source>
          <target state="translated">En nuestro archivo de plantilla &lt;code&gt;app/templates/rentals.hbs&lt;/code&gt; , agregaremos una referencia a nuestro nuevo componente de &lt;code&gt;list-filter&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2116b9426c29914e268f39162e786a2c0adfa0a2" translate="yes" xml:space="preserve">
          <source>In our &lt;code&gt;user-profile.hbs&lt;/code&gt; template we change our action to call &lt;code&gt;deleteCurrentUser&lt;/code&gt; as passed above.</source>
          <target state="translated">En nuestra plantilla &lt;code&gt;user-profile.hbs&lt;/code&gt; cambiamos nuestra acci&amp;oacute;n para llamar a &lt;code&gt;deleteCurrentUser&lt;/code&gt; como se indic&amp;oacute; anteriormente.</target>
        </trans-unit>
        <trans-unit id="e743e3e870e7e62c1ea638ae023558320918c553" translate="yes" xml:space="preserve">
          <source>In our case, the explicit argument that we pass to &lt;code&gt;onConfirm&lt;/code&gt; will be the required &lt;code&gt;messageText&lt;/code&gt;. However, remember that internally our &lt;code&gt;ButtonWithConfirmation&lt;/code&gt; component does not know or care that it is being used in a messaging application. Therefore within the component's JavaScript file, we will use a property &lt;code&gt;confirmValue&lt;/code&gt; to represent that argument and pass it to &lt;code&gt;onConfirm&lt;/code&gt; as shown here:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9497620e82225ac6f9b3af239194c032f2e45bd" translate="yes" xml:space="preserve">
          <source>In our case, the explicit argument that we pass to &lt;code&gt;onConfirm&lt;/code&gt; will be the required &lt;code&gt;messageText&lt;/code&gt;. However, remember that internally our &lt;code&gt;button-with-confirmation&lt;/code&gt; component does not know or care that it is being used in a messaging application. Therefore within the component's javascript file, we will use a property &lt;code&gt;confirmValue&lt;/code&gt; to represent that argument and pass it to &lt;code&gt;onConfirm&lt;/code&gt; as shown here:</source>
          <target state="translated">En nuestro caso, el argumento expl&amp;iacute;cito que pasamos a &lt;code&gt;onConfirm&lt;/code&gt; ser&amp;aacute; el &lt;code&gt;messageText&lt;/code&gt; requerido . Sin embargo, recuerde que internamente nuestro componente de &lt;code&gt;button-with-confirmation&lt;/code&gt; no sabe ni le importa que se est&amp;eacute; utilizando en una aplicaci&amp;oacute;n de mensajer&amp;iacute;a. Por lo tanto, dentro del archivo javascript del componente, usaremos una propiedad &lt;code&gt;confirmValue&lt;/code&gt; para representar ese argumento y pasarlo a &lt;code&gt;onConfirm&lt;/code&gt; como se muestra aqu&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="02f19c995ec2ef48bcad1cd089c058b458a09565" translate="yes" xml:space="preserve">
          <source>In our case, the parent route had already loaded its songs, so we would be writing unnecessary fetching logic. Let's rewrite the same route, but use &lt;code&gt;modelFor&lt;/code&gt;, which works the same way, but returns the model from the parent route.</source>
          <target state="translated">En nuestro caso, la ruta principal ya hab&amp;iacute;a cargado sus canciones, por lo que estar&amp;iacute;amos escribiendo l&amp;oacute;gica de b&amp;uacute;squeda innecesaria. Reescribamos la misma ruta, pero usemos &lt;code&gt;modelFor&lt;/code&gt; , que funciona de la misma manera, pero devuelve el modelo de la ruta principal.</target>
        </trans-unit>
        <trans-unit id="ab00f79b5b48c8f1f0ea5a0331c23e5730af5d63" translate="yes" xml:space="preserve">
          <source>In our example, you might notice that if you type quickly that the results might get out of sync with the current filter text entered. This is because our data filtering function is &lt;em&gt;asynchronous&lt;/em&gt;, meaning that the code in the function gets scheduled for later, while the code that calls the function continues to execute. Often code that may make network requests is set up to be asynchronous because the server may return its responses at varying times.</source>
          <target state="translated">En nuestro ejemplo, puede notar que si escribe r&amp;aacute;pidamente, los resultados pueden desincronizarse con el texto del filtro actual ingresado. Esto se debe a que nuestra funci&amp;oacute;n de filtrado de datos es &lt;em&gt;asincr&amp;oacute;nica&lt;/em&gt; , lo que significa que el c&amp;oacute;digo de la funci&amp;oacute;n se programa para m&amp;aacute;s tarde, mientras que el c&amp;oacute;digo que llama a la funci&amp;oacute;n contin&amp;uacute;a ejecut&amp;aacute;ndose. A menudo, el c&amp;oacute;digo que puede realizar solicitudes de red est&amp;aacute; configurado para ser as&amp;iacute;ncrono porque el servidor puede devolver sus respuestas en distintos momentos.</target>
        </trans-unit>
        <trans-unit id="6a9d6c5514380d3807c115c8027e9e896e5141b5" translate="yes" xml:space="preserve">
          <source>In our index route handler, we add the &lt;code&gt;replaceWith&lt;/code&gt; invocation to &lt;code&gt;beforeModel&lt;/code&gt;.</source>
          <target state="translated">En nuestro manejador ruta &amp;iacute;ndice, a&amp;ntilde;adimos el &lt;code&gt;replaceWith&lt;/code&gt; invocaci&amp;oacute;n a &lt;code&gt;beforeModel&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="425e757fb86358d75ef49ed41315cc99298b82f5" translate="yes" xml:space="preserve">
          <source>In our index route handler, we'll call the &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Route.html#method_replaceWith&quot;&gt;&lt;code&gt;replaceWith&lt;/code&gt;&lt;/a&gt; function. The &lt;code&gt;replaceWith&lt;/code&gt; function is similar to the route's &lt;code&gt;transitionTo&lt;/code&gt; function, the difference being that &lt;code&gt;replaceWith&lt;/code&gt; will replace the current URL in the browser's history, while &lt;code&gt;transitionTo&lt;/code&gt; will add to the history. Since we want our &lt;code&gt;rentals&lt;/code&gt; route to serve as our home page, we will use the &lt;code&gt;replaceWith&lt;/code&gt; function.</source>
          <target state="translated">En nuestro controlador de ruta de &amp;iacute;ndice, llamaremos a la funci&amp;oacute;n &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Route.html#method_replaceWith&quot;&gt; &lt;code&gt;replaceWith&lt;/code&gt; &lt;/a&gt; . La funci&amp;oacute;n &lt;code&gt;replaceWith&lt;/code&gt; es similar a la funci&amp;oacute;n &lt;code&gt;transitionTo&lt;/code&gt; de la ruta , la diferencia es que &lt;code&gt;replaceWith&lt;/code&gt; reemplazar&amp;aacute; la URL actual en el historial del navegador, mientras que &lt;code&gt;transitionTo&lt;/code&gt; se agregar&amp;aacute; al historial. Dado que queremos que nuestra ruta de &lt;code&gt;rentals&lt;/code&gt; sirva como nuestra p&amp;aacute;gina de inicio, utilizaremos la funci&amp;oacute;n &lt;code&gt;replaceWith&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ab231d10ac181b0f4640cd55eb14e158fe262e49" translate="yes" xml:space="preserve">
          <source>In our list filter component JavaScript, we use the &lt;code&gt;query&lt;/code&gt; property to compare to the &lt;code&gt;value&lt;/code&gt; property of the component. The &lt;code&gt;value&lt;/code&gt; property represents the latest state of the input field. Therefore we now check that results match the input field, ensuring that results will stay in sync with the last thing the user has typed.</source>
          <target state="translated">En nuestro componente de filtro de lista JavaScript, usamos la propiedad de &lt;code&gt;query&lt;/code&gt; para comparar con la propiedad de &lt;code&gt;value&lt;/code&gt; del componente. La propiedad &lt;code&gt;value&lt;/code&gt; representa el &amp;uacute;ltimo estado del campo de entrada. Por lo tanto, ahora verificamos que los resultados coincidan con el campo de entrada, asegur&amp;aacute;ndonos de que los resultados se mantengan sincronizados con lo &amp;uacute;ltimo que haya escrito el usuario.</target>
        </trans-unit>
        <trans-unit id="a1c6272418f414d77813d791068a58ac0383d2e5" translate="yes" xml:space="preserve">
          <source>In our new setup, the parent component has an action which sets the new value. We pass this action to the child component, and the child component directly assigns it to the click of the button, using the &lt;code&gt;{{on}}&lt;/code&gt; modifier. It also passes the value we want to call the &lt;code&gt;@onClick&lt;/code&gt; using the &lt;code&gt;fn&lt;/code&gt; helper. We don't need any additional logic in the child class itself - in fact, this could become a template-only component at this point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4d535ca7e3e2be527f15c355940eb17c846d552" translate="yes" xml:space="preserve">
          <source>In our tests, we also call two helpers (&lt;code&gt;visit&lt;/code&gt; and &lt;code&gt;click&lt;/code&gt;) one after another. Although Ember does a number of things when we make those calls, Ember hides those complexities by giving us these &lt;a href=&quot;https://guides.emberjs.com/testing/acceptance/#toc_asynchronous-helpers&quot;&gt;asynchronous test helpers&lt;/a&gt;.</source>
          <target state="translated">En nuestras pruebas, tambi&amp;eacute;n llamamos a dos ayudantes ( &lt;code&gt;visit&lt;/code&gt; ar y &lt;code&gt;click&lt;/code&gt; ) uno tras otro. Aunque Ember hace varias cosas cuando hacemos esas llamadas, Ember oculta esas complejidades al brindarnos estos &lt;a href=&quot;https://guides.emberjs.com/testing/acceptance/#toc_asynchronous-helpers&quot;&gt;ayudantes de prueba asincr&amp;oacute;nicos&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b560515f778de07c2ca3c994165438d4d3304fb6" translate="yes" xml:space="preserve">
          <source>In our user &lt;code&gt;button-with-confirmation&lt;/code&gt; component we want to leave the confirmation modal open until we know that the operation has completed successfully. This is accomplished by expecting a promise to be returned from &lt;code&gt;onConfirm&lt;/code&gt;. Upon resolution of the promise, we set a property used to indicate the visibility of the confirmation modal.</source>
          <target state="translated">En nuestro componente de &lt;code&gt;button-with-confirmation&lt;/code&gt; usuario con confirmaci&amp;oacute;n queremos dejar abierto el modal de confirmaci&amp;oacute;n hasta que sepamos que la operaci&amp;oacute;n se ha completado con &amp;eacute;xito. Esto se logra esperando que se devuelva una promesa de &lt;code&gt;onConfirm&lt;/code&gt; . Tras la resoluci&amp;oacute;n de la promesa, establecemos una propiedad utilizada para indicar la visibilidad del modal de confirmaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="f50690af88ab50f9c9d8d696d223983efb84b8bd" translate="yes" xml:space="preserve">
          <source>In particular, what this means is that if you get an &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; element's &lt;code&gt;value&lt;/code&gt; attribute and then re-render the template with the same value, it will avoid clobbering the cursor and selection position. Since most attribute sets are idempotent in the browser, you typically can get away with reading attributes using jQuery, but the most reliable way to do so is through this method.</source>
          <target state="translated">En particular, lo que esto significa es que si obtiene un atributo de &lt;code&gt;value&lt;/code&gt; del elemento &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; y luego vuelve a renderizar la plantilla con el mismo valor, evitar&amp;aacute; golpear el cursor y la posici&amp;oacute;n de selecci&amp;oacute;n. Dado que la mayor&amp;iacute;a de los conjuntos de atributos son idempotentes en el navegador, normalmente puede salirse con la suya leyendo atributos usando jQuery, pero la forma m&amp;aacute;s confiable de hacerlo es a trav&amp;eacute;s de este m&amp;eacute;todo.</target>
        </trans-unit>
        <trans-unit id="1095a2ebbc711d35ded3e6c08d66bc66578a99d6" translate="yes" xml:space="preserve">
          <source>In practice, Ember avoids updating parts of the DOM that haven't changed, which means that the user's selection state, cursor and scroll position, and other state won't change for no reason.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="173d782e0322b7aa8b817bd02bfb67f582bec848" translate="yes" xml:space="preserve">
          <source>In practice, this is only useful in non-browser environment or in non-interactive mode, because Ember's &lt;code&gt;jQuery&lt;/code&gt; dependency is implicitly bound to the current document, causing event delegation to not work properly when the app is rendered into a foreign document object (such as an iframe's &lt;code&gt;contentDocument&lt;/code&gt;).</source>
          <target state="translated">En la pr&amp;aacute;ctica, esto solo es &amp;uacute;til en un entorno sin navegador o en modo no interactivo, porque la dependencia &lt;code&gt;jQuery&lt;/code&gt; de Ember est&amp;aacute; impl&amp;iacute;citamente ligada al documento actual, lo que hace que la delegaci&amp;oacute;n de eventos no funcione correctamente cuando la aplicaci&amp;oacute;n se representa en un objeto de documento externo (como como &lt;code&gt;contentDocument&lt;/code&gt; de un iframe ).</target>
        </trans-unit>
        <trans-unit id="0a6cf706bc188aa758d6da4e272aa9c65097c3d6" translate="yes" xml:space="preserve">
          <source>In response to &lt;code&gt;queryRecord()&lt;/code&gt; being called, you should always fetch fresh data. Once found, you can asynchronously call the store's &lt;code&gt;push()&lt;/code&gt; method to push the record into the store.</source>
          <target state="translated">En respuesta a la &lt;code&gt;queryRecord()&lt;/code&gt; a queryRecord () , siempre debe buscar datos nuevos. Una vez encontrado, puede llamar de forma asincr&amp;oacute;nica al m&amp;eacute;todo &lt;code&gt;push()&lt;/code&gt; la tienda para enviar el registro a la tienda.</target>
        </trans-unit>
        <trans-unit id="fa32d137f104b735ab84633f3591ddf26cbba0ca" translate="yes" xml:space="preserve">
          <source>In short:</source>
          <target state="translated">En resumen:</target>
        </trans-unit>
        <trans-unit id="ebec2c949c263672a42bb7da4a5fd65b6941558b" translate="yes" xml:space="preserve">
          <source>In some cases your component needs to define event handlers, perhaps to support various draggable behaviors. For example, a component may need to send an &lt;code&gt;id&lt;/code&gt; when it receives a drop event:</source>
          <target state="translated">En algunos casos, su componente necesita definir controladores de eventos, quiz&amp;aacute;s para admitir varios comportamientos arrastrables. Por ejemplo, un componente puede necesitar enviar una &lt;code&gt;id&lt;/code&gt; entificaci&amp;oacute;n cuando recibe un evento de ca&amp;iacute;da:</target>
        </trans-unit>
        <trans-unit id="7dbb31fc49e2094cd02c964a741427948153b5a3" translate="yes" xml:space="preserve">
          <source>In some cases, if your usage of properties on POJOs is too dynamic, you may not be able to enumerate every single property that could be tracked. There could be a prohibitive number of possible properties, or there could be no way to know them in advance. In this case, it's recommended that you &lt;em&gt;reset&lt;/em&gt; the value wherever it is updated:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2d0c4d651665d1d4131d9379028d4d27e9ba051" translate="yes" xml:space="preserve">
          <source>In some cases, you may want to annotate computed properties with additional metadata about how they function or what values they operate on. For example, computed property functions may close over variables that are then no longer available for introspection.</source>
          <target state="translated">En algunos casos,es posible que desee anotar las propiedades computarizadas con metadatos adicionales sobre cómo funcionan o sobre qué valores operan.Por ejemplo,las funciones de las propiedades calculadas pueden cerrarse sobre variables que luego ya no están disponibles para la introspección.</target>
        </trans-unit>
        <trans-unit id="7f2bb026f9f2614af9c4e26f814770bd8edeb331" translate="yes" xml:space="preserve">
          <source>In some cases, you may want to annotate computed properties with additional metadata about how they function or what values they operate on. For example, computed property functions may close over variables that are then no longer available for introspection. You can pass a hash of these values to a computed property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8cb9cb7e37a955d210b2dbde6d78cbf98ffd788" translate="yes" xml:space="preserve">
          <source>In some cases, you might not want the sticky query param value to be scoped to the route's model but would rather reuse a query param's value even as a route's model changes. This can be accomplished by setting the &lt;code&gt;scope&lt;/code&gt; option to &lt;code&gt;&quot;controller&quot;&lt;/code&gt; within the controller's &lt;code&gt;queryParams&lt;/code&gt; config hash:</source>
          <target state="translated">En algunos casos, es posible que no desee que el valor del par&amp;aacute;metro de consulta permanente se ajuste al modelo de la ruta, sino que prefiera reutilizar el valor de un par&amp;aacute;metro de consulta incluso cuando cambia el modelo de una ruta. Esto se puede lograr configurando la opci&amp;oacute;n de &lt;code&gt;scope&lt;/code&gt; en &lt;code&gt;&quot;controller&quot;&lt;/code&gt; dentro del hash de configuraci&amp;oacute;n &lt;code&gt;queryParams&lt;/code&gt; del controlador :</target>
        </trans-unit>
        <trans-unit id="366789bd28766b0562cd1391007f9b613a32f0bf" translate="yes" xml:space="preserve">
          <source>In some cases, your dynamic headers may require data from some object outside of Ember's observer system (for example &lt;code&gt;document.cookie&lt;/code&gt;). You can use the &lt;a href=&quot;http://emberjs.com/api/classes/Ember.ComputedProperty.html#method_volatile&quot;&gt;volatile&lt;/a&gt; function to set the property into a non-cached mode causing the headers to be recomputed with every request.</source>
          <target state="translated">En algunos casos, sus encabezados din&amp;aacute;micos pueden requerir datos de alg&amp;uacute;n objeto fuera del sistema de observaci&amp;oacute;n de Ember (por ejemplo, &lt;code&gt;document.cookie&lt;/code&gt; ). Puede usar la funci&amp;oacute;n &lt;a href=&quot;http://emberjs.com/api/classes/Ember.ComputedProperty.html#method_volatile&quot;&gt;vol&amp;aacute;til&lt;/a&gt; para establecer la propiedad en un modo no almacenado en cach&amp;eacute;, lo que hace que los encabezados se vuelvan a calcular con cada solicitud.</target>
        </trans-unit>
        <trans-unit id="c8439bb43007e42e0e52d77b6d10e0f7713670b1" translate="yes" xml:space="preserve">
          <source>In some cases, your dynamic headers may require data from some object outside of Ember's observer system (for example &lt;code&gt;document.cookie&lt;/code&gt;). You can use the &lt;a href=&quot;https://api.emberjs.com/api/classes/Ember.ComputedProperty.html#volatile&quot;&gt;volatile&lt;/a&gt; function to set the property into a non-cached mode causing the headers to be recomputed with every request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24ee070ea25690e7b5aa79d3084e61cad4a33518" translate="yes" xml:space="preserve">
          <source>In some cases, your dynamic headers may require data from some object outside of Ember's observer system (for example &lt;code&gt;document.cookie&lt;/code&gt;). You can use the &lt;a href=&quot;https://emberjs.com/api/classes/Ember.ComputedProperty.html#method_volatile&quot;&gt;volatile&lt;/a&gt; function to set the property into a non-cached mode causing the headers to be recomputed with every request.</source>
          <target state="translated">En algunos casos, sus encabezados din&amp;aacute;micos pueden requerir datos de alg&amp;uacute;n objeto fuera del sistema de observaci&amp;oacute;n de Ember (por ejemplo, &lt;code&gt;document.cookie&lt;/code&gt; ). Puede usar la funci&amp;oacute;n &lt;a href=&quot;https://emberjs.com/api/classes/Ember.ComputedProperty.html#method_volatile&quot;&gt;vol&amp;aacute;til&lt;/a&gt; para establecer la propiedad en un modo no almacenado en cach&amp;eacute;, lo que hace que los encabezados se vuelvan a calcular con cada solicitud.</target>
        </trans-unit>
        <trans-unit id="d41f8e0e035c7439f25ee436f1342763b84a965c" translate="yes" xml:space="preserve">
          <source>In some circumstances, the built-in attribute types of &lt;code&gt;string&lt;/code&gt;, &lt;code&gt;number&lt;/code&gt;, &lt;code&gt;boolean&lt;/code&gt;, and &lt;code&gt;date&lt;/code&gt; may be inadequate. For example, a server may return a non-standard date format.</source>
          <target state="translated">En algunas circunstancias, los tipos de atributos incorporados de &lt;code&gt;string&lt;/code&gt; , &lt;code&gt;number&lt;/code&gt; , &lt;code&gt;boolean&lt;/code&gt; o y &lt;code&gt;date&lt;/code&gt; pueden ser inadecuados. Por ejemplo, un servidor puede devolver un formato de fecha no est&amp;aacute;ndar.</target>
        </trans-unit>
        <trans-unit id="4fa172d2b2fc1524e5958154f407da7c75cb97e7" translate="yes" xml:space="preserve">
          <source>In some situations the adapter may need to perform cleanup when destroyed, that cleanup can be done in &lt;code&gt;destroy&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04384891970233c3962d09d6865cbe4e29b0d010" translate="yes" xml:space="preserve">
          <source>In some situations, however, you may need to write a helper that interacts with the rest of your application. You can create class-based helpers that have access to services in your application, and can optionally save state as well, although this is usually unnecessary and error-prone.</source>
          <target state="translated">En algunas situaciones,sin embargo,puede que tenga que escribir un ayudante que interactúe con el resto de su solicitud.Puedes crear ayudantes basados en clases que tengan acceso a los servicios de tu aplicación,y opcionalmente también puedes guardar el estado,aunque esto suele ser innecesario y propenso a errores.</target>
        </trans-unit>
        <trans-unit id="972f9bf507fe0694b8e683b6248ff4d2ef87d91c" translate="yes" xml:space="preserve">
          <source>In sum, arguments are good for passing values:</source>
          <target state="translated">En resumen,los argumentos son buenos para aprobar valores:</target>
        </trans-unit>
        <trans-unit id="f0fa862af1a1dc99ef50d3e806a85a304d9acdcb" translate="yes" xml:space="preserve">
          <source>In summary, when you want to allow elements in a component to communicate, see if you can separate the concerns of &lt;em&gt;managing state&lt;/em&gt; and &lt;em&gt;managing DOM interactions&lt;/em&gt;. The component can manage the state, while a modifier can manage the DOM.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90e9570fdc7b04bebf31b27e37ccfc9d95ba55ef" translate="yes" xml:space="preserve">
          <source>In summary, when you're trying to update a piece of text or an attribute in your component, think of the Principle of Substitution, and write a template that produces the right HTML when you substitute all of the variables in the template with the current values of the variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5487ba6f01dc9864e3bcb4d77666f8b5b32f889" translate="yes" xml:space="preserve">
          <source>In template-only component templates statements like &lt;code&gt;{{this}}&lt;/code&gt;, &lt;code&gt;{{this.foo}}&lt;/code&gt; and &lt;code&gt;{{foo}}&lt;/code&gt; will be &lt;code&gt;undefined&lt;/code&gt;. Accessing arguments as &lt;code&gt;{{@foo}}&lt;/code&gt; will continue to work.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6406aed63eb52b286b7b732319cda792693c38d" translate="yes" xml:space="preserve">
          <source>In templates, we refer to arguments by prefixing them with the &lt;code&gt;@&lt;/code&gt; sign (in this case &lt;code&gt;@multiple&lt;/code&gt;). In order to compute &lt;code&gt;this.total&lt;/code&gt;, we'll need to refer to the &lt;code&gt;multiple&lt;/code&gt; argument from JavaScript.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d79e0717ab426614f5fcb1ff8ada0b7ee729a3e" translate="yes" xml:space="preserve">
          <source>In terms of performance, rendering tests sit in the middle, between unit and application tests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca500ed8598046d69760ae65911fa122f3d0d3d1" translate="yes" xml:space="preserve">
          <source>In that case, we can use the &lt;code&gt;{{blog-post}}&lt;/code&gt; component in &lt;strong&gt;block form&lt;/strong&gt; and tell Ember where the block content should be rendered using the &lt;code&gt;{{yield}}&lt;/code&gt; helper. To update the example above, we'll first change the component's template:</source>
          <target state="translated">En ese caso, podemos usar el componente &lt;code&gt;{{blog-post}}&lt;/code&gt; en &lt;strong&gt;forma de bloque&lt;/strong&gt; y decirle a Ember d&amp;oacute;nde se debe representar el contenido del bloque usando el ayudante &lt;code&gt;{{yield}}&lt;/code&gt; . Para actualizar el ejemplo anterior, primero cambiaremos la plantilla del componente:</target>
        </trans-unit>
        <trans-unit id="4e6054162f1d5a374a22c8f9796936dae869115d" translate="yes" xml:space="preserve">
          <source>In that case, you can implement &lt;code&gt;serialize&lt;/code&gt; yourself and return a JSON hash of your choosing.</source>
          <target state="translated">En ese caso, puede implementar &lt;code&gt;serialize&lt;/code&gt; usted mismo y devolver un hash JSON de su elecci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="14af234b22343f20e4fe919eaa12464a3257ae14" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;Counter&lt;/code&gt; component, instead of tracking the &lt;code&gt;multiple&lt;/code&gt; internally, we take it as an argument. In the template, we refer to the argument as &lt;code&gt;@multiple&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7da431b2fc85635b63c6fd2ff4f9b950a376545" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;andThen&lt;/code&gt; helper, we finally make our call to &lt;code&gt;assert.equal&lt;/code&gt; which makes an assertion that the text found in the first li of the ul whose class is &quot;posts&quot; is equal to &quot;My new post&quot;.</source>
          <target state="translated">En el ayudante &lt;code&gt;andThen&lt;/code&gt; , finalmente hacemos nuestra llamada a &lt;code&gt;assert.equal&lt;/code&gt; que hace una afirmaci&amp;oacute;n de que el texto que se encuentra en el primer li del ul cuya clase es &quot;posts&quot; es igual a &quot;My new post&quot;.</target>
        </trans-unit>
        <trans-unit id="58e1a7001b9c9a1d09b20d044dff01afcd7c8c05" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;beforeEach&lt;/code&gt; function that runs before each test, we use the built-in function &lt;code&gt;this.register&lt;/code&gt; to &lt;a href=&quot;https://guides.emberjs.com/applications/dependency-injection/#toc_factory-registrations&quot;&gt;register&lt;/a&gt; our stub service in place of the maps service. Registration makes an object available to your Ember application for things like loading components from templates and injecting services in this case.</source>
          <target state="translated">En la funci&amp;oacute;n &lt;code&gt;beforeEach&lt;/code&gt; que se ejecuta antes de cada prueba, usamos la funci&amp;oacute;n &lt;code&gt;this.register&lt;/code&gt; para &lt;a href=&quot;https://guides.emberjs.com/applications/dependency-injection/#toc_factory-registrations&quot;&gt;registrar&lt;/a&gt; nuestro servicio stub en lugar del servicio de mapas. El registro hace que un objeto est&amp;eacute; disponible para su aplicaci&amp;oacute;n Ember para cosas como cargar componentes desde plantillas e inyectar servicios en este caso.</target>
        </trans-unit>
        <trans-unit id="252fa88395304e7562b89517d29f494bcfff26dc" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;filterByCity&lt;/code&gt; function in the rental controller above, we've added a new property called &lt;code&gt;query&lt;/code&gt; to the filter results instead of just returning an array of rentals as before.</source>
          <target state="translated">En la funci&amp;oacute;n &lt;code&gt;filterByCity&lt;/code&gt; en el controlador de alquiler anterior, hemos agregado una nueva propiedad llamada &lt;code&gt;query&lt;/code&gt; a los resultados del filtro en lugar de simplemente devolver una matriz de alquileres como antes.</target>
        </trans-unit>
        <trans-unit id="69ec2eed51bacc33dfcdd4448a42bd11fa37e803" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;model&lt;/code&gt; hook for routes with dynamic segments, it's your job to turn the ID (something like &lt;code&gt;47&lt;/code&gt; or &lt;code&gt;post-slug&lt;/code&gt;) into a model that can be rendered by the route's template. In the above example, we use the photo's ID (&lt;code&gt;params.photo_id&lt;/code&gt;) as an argument to Ember Data's &lt;code&gt;findRecord&lt;/code&gt; method.</source>
          <target state="translated">En el gancho de &lt;code&gt;model&lt;/code&gt; o para rutas con segmentos din&amp;aacute;micos, es su trabajo convertir la ID (algo as&amp;iacute; como &lt;code&gt;47&lt;/code&gt; o &lt;code&gt;post-slug&lt;/code&gt; ) en un modelo que puede ser renderizado por la plantilla de la ruta. En el ejemplo anterior, usamos la identificaci&amp;oacute;n de la foto ( &lt;code&gt;params.photo_id&lt;/code&gt; ) como argumento para el m&amp;eacute;todo &lt;code&gt;findRecord&lt;/code&gt; de Ember Data .</target>
        </trans-unit>
        <trans-unit id="7ffee30714617467246161c4ad9e3d50da25c4b6" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;model&lt;/code&gt; hook for routes with dynamic segments, it's your job to turn the ID (something like &lt;code&gt;47&lt;/code&gt; or &lt;code&gt;post-slug&lt;/code&gt;) into a model that can be rendered by the route's template. In the above example, we use the post's ID (&lt;code&gt;params.post_id&lt;/code&gt;) as an argument to Ember Data's &lt;code&gt;findRecord&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7cf6fcfb9003d844f16d5ca0bdf69f4406f850b" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;songs&lt;/code&gt; template, we can specify both models and use the &lt;code&gt;{{#each}}&lt;/code&gt; helper to display each record in the song model and album model:</source>
          <target state="translated">En la plantilla de &lt;code&gt;songs&lt;/code&gt; , podemos especificar ambos modelos y usar el ayudante &lt;code&gt;{{#each}}&lt;/code&gt; para mostrar cada registro en el modelo de canci&amp;oacute;n y modelo de &amp;aacute;lbum:</target>
        </trans-unit>
        <trans-unit id="ca18914c710cd5a7ce445c84f20480dcd1681b2b" translate="yes" xml:space="preserve">
          <source>In the above component, &lt;code&gt;didDrop&lt;/code&gt; is the &lt;code&gt;action&lt;/code&gt; passed in. This action is called from the &lt;code&gt;drop&lt;/code&gt; event handler and passes one argument to the action - the &lt;code&gt;id&lt;/code&gt; value found through the &lt;code&gt;drop&lt;/code&gt; event object.</source>
          <target state="translated">En el componente anterior, &lt;code&gt;didDrop&lt;/code&gt; es la &lt;code&gt;action&lt;/code&gt; pasada. Esta acci&amp;oacute;n se llama desde el controlador de eventos de &lt;code&gt;drop&lt;/code&gt; y pasa un argumento a la acci&amp;oacute;n: el valor de &lt;code&gt;id&lt;/code&gt; encontrado a trav&amp;eacute;s del objeto de evento de &lt;code&gt;drop&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="84011bb6979400cdc64045430ee5a1471aeae3d8" translate="yes" xml:space="preserve">
          <source>In the above example we have successfully used a wildcard route to handle all routes not managed by our application so that when a user navigates to &lt;code&gt;/a/non-existent/path&lt;/code&gt; they will be shown a message that says the page they're looking for wasn't found.</source>
          <target state="translated">En el ejemplo anterior, hemos utilizado con &amp;eacute;xito una ruta comod&amp;iacute;n para manejar todas las rutas no administradas por nuestra aplicaci&amp;oacute;n, de modo que cuando un usuario navegue a &lt;code&gt;/a/non-existent/path&lt;/code&gt; se le mostrar&amp;aacute; un mensaje que dice la p&amp;aacute;gina que est&amp;aacute; buscando. no se encontr&amp;oacute;.</target>
        </trans-unit>
        <trans-unit id="0ee8746e7bdb361c3d2fffd5349c5c7faaf40e0a" translate="yes" xml:space="preserve">
          <source>In the above example we use the &lt;code&gt;init&lt;/code&gt; hook to seed our initial listings by calling the &lt;code&gt;filter&lt;/code&gt; action with an empty value. Our &lt;code&gt;handleFilterEntry&lt;/code&gt; action calls a function called &lt;code&gt;filter&lt;/code&gt; based on the &lt;code&gt;value&lt;/code&gt; attribute set by the input helper.</source>
          <target state="translated">En el ejemplo anterior usamos el gancho &lt;code&gt;init&lt;/code&gt; para sembrar nuestros listados iniciales llamando a la acci&amp;oacute;n de &lt;code&gt;filter&lt;/code&gt; con un valor vac&amp;iacute;o. Nuestra acci&amp;oacute;n &lt;code&gt;handleFilterEntry&lt;/code&gt; llama a una funci&amp;oacute;n llamada &lt;code&gt;filter&lt;/code&gt; basada en el atributo de &lt;code&gt;value&lt;/code&gt; establecido por el asistente de entrada.</target>
        </trans-unit>
        <trans-unit id="9d7c6bc0ecaa7c7b4083577fdf97a5a93932117c" translate="yes" xml:space="preserve">
          <source>In the above example with the run loop, since the user's attributes end up at the same values as before execution, the template will not even rerender!</source>
          <target state="translated">En el ejemplo anterior con el bucle de ejecución,como los atributos del usuario terminan con los mismos valores que antes de la ejecución,¡la plantilla ni siquiera se volverá a renderizar!</target>
        </trans-unit>
        <trans-unit id="36b3bb5c80cc64b8ee7712f5f993105b22dd6d26" translate="yes" xml:space="preserve">
          <source>In the above example, if any of the methods &lt;code&gt;fetchPhotosOfUsers&lt;/code&gt;, &lt;code&gt;applyInstagramFilters&lt;/code&gt;, or &lt;code&gt;uploadTrendyPhotoAlbum&lt;/code&gt; returns a promise that rejects, &lt;code&gt;handleErrors&lt;/code&gt; will be called with the reason for the failure. In this manner, promises approximate an asynchronous form of try-catch statements that prevent the rightward flow of nested callback after nested callback and facilitate a saner approach to managing complex asynchronous logic in your applications.</source>
          <target state="translated">En el ejemplo anterior, si alguno de los m&amp;eacute;todos &lt;code&gt;fetchPhotosOfUsers&lt;/code&gt; , &lt;code&gt;applyInstagramFilters&lt;/code&gt; o &lt;code&gt;uploadTrendyPhotoAlbum&lt;/code&gt; devuelve una promesa que rechaza, se &lt;code&gt;handleErrors&lt;/code&gt; a handleErrors con el motivo del error. De esta manera, las promesas se aproximan a una forma asincr&amp;oacute;nica de declaraciones try-catch que evitan el flujo hacia la derecha de la devoluci&amp;oacute;n de llamada anidada despu&amp;eacute;s de la devoluci&amp;oacute;n de llamada anidada y facilitan un enfoque m&amp;aacute;s sano para administrar la l&amp;oacute;gica asincr&amp;oacute;nica compleja en sus aplicaciones.</target>
        </trans-unit>
        <trans-unit id="a4d4bdede070cae80deba012d408d8893e437fe7" translate="yes" xml:space="preserve">
          <source>In the above example, the error event would stop right at &lt;code&gt;route:good-for-nothing&lt;/code&gt;'s error handler and not continue to bubble. To make the event continue bubbling up to &lt;code&gt;route:application&lt;/code&gt;, you can &lt;code&gt;return true;&lt;/code&gt; from the error handler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2daabf4d9b94a3c6d9eebfe03f15ebf2d13606ae" translate="yes" xml:space="preserve">
          <source>In the above example, the error event would stop right at &lt;code&gt;route:good-for-nothing&lt;/code&gt;'s error handler and not continue to bubble. To make the event continue bubbling up to &lt;code&gt;route:application&lt;/code&gt;, you can return true from the error handler.</source>
          <target state="translated">En el ejemplo anterior, el evento de error se detendr&amp;iacute;a justo en el controlador de errores de &lt;code&gt;route:good-for-nothing&lt;/code&gt; y no continuar&amp;iacute;a burbujeando. Para que el evento contin&amp;uacute;e propag&amp;aacute;ndose hasta &lt;code&gt;route:application&lt;/code&gt; , puede devolver verdadero desde el controlador de errores.</target>
        </trans-unit>
        <trans-unit id="5c13863c238fa0a5e51c22efcf7d517515f9a296" translate="yes" xml:space="preserve">
          <source>In the above example, the event is &lt;code&gt;render.handlebars&lt;/code&gt;, and the subscriber listened for all events beginning with &lt;code&gt;render&lt;/code&gt;. It would receive callbacks for events named &lt;code&gt;render&lt;/code&gt;, &lt;code&gt;render.handlebars&lt;/code&gt;, &lt;code&gt;render.container&lt;/code&gt;, or even &lt;code&gt;render.handlebars.layout&lt;/code&gt;.</source>
          <target state="translated">En el ejemplo anterior, el evento es &lt;code&gt;render.handlebars&lt;/code&gt; y el suscriptor escuch&amp;oacute; todos los eventos que comienzan con &lt;code&gt;render&lt;/code&gt; . Recibir&amp;iacute;a devoluciones de llamada para eventos denominados &lt;code&gt;render&lt;/code&gt; , &lt;code&gt;render.handlebars&lt;/code&gt; , &lt;code&gt;render.container&lt;/code&gt; o incluso &lt;code&gt;render.handlebars.layout&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="887acf9d1f48c5f8eb93da27b8bc375ccdfac816" translate="yes" xml:space="preserve">
          <source>In the above example, the model hook for &lt;code&gt;PhotoRoute&lt;/code&gt; will run with &lt;code&gt;params.photo_id = 5&lt;/code&gt;. The &lt;code&gt;model&lt;/code&gt; hook for &lt;code&gt;CommentRoute&lt;/code&gt;&lt;em&gt;won't&lt;/em&gt; run since you supplied a model object for the &lt;code&gt;comment&lt;/code&gt; segment. The comment's id will populate the url according to &lt;code&gt;CommentRoute&lt;/code&gt;'s &lt;code&gt;serialize&lt;/code&gt; hook.</source>
          <target state="translated">En el ejemplo anterior, el modelo de &lt;code&gt;PhotoRoute&lt;/code&gt; para PhotoRoute se ejecutar&amp;aacute; con &lt;code&gt;params.photo_id = 5&lt;/code&gt; . El &lt;code&gt;CommentRoute&lt;/code&gt; &lt;code&gt;model&lt;/code&gt; o para CommentRoute &lt;em&gt;no se&lt;/em&gt; ejecutar&amp;aacute; ya que proporcion&amp;oacute; un objeto de modelo para el segmento de &lt;code&gt;comment&lt;/code&gt; . La identificaci&amp;oacute;n del comentario &lt;code&gt;CommentRoute&lt;/code&gt; la URL de acuerdo con el enlace de &lt;code&gt;serialize&lt;/code&gt; CommentRoute .</target>
        </trans-unit>
        <trans-unit id="5249e3e3ca6ca64b1b4e40e527e5e6d7c81ad18c" translate="yes" xml:space="preserve">
          <source>In the above examples, &lt;code&gt;direction&lt;/code&gt; is presumably a query param property on the &lt;code&gt;posts&lt;/code&gt; controller, but it could also refer to a &lt;code&gt;direction&lt;/code&gt; property on any of the controllers associated with the &lt;code&gt;posts&lt;/code&gt; route hierarchy, matching the leaf-most controller with the supplied property name.</source>
          <target state="translated">En los ejemplos anteriores, la &lt;code&gt;direction&lt;/code&gt; es presumiblemente una propiedad de par&amp;aacute;metro de consulta en el controlador de &lt;code&gt;posts&lt;/code&gt; , pero tambi&amp;eacute;n podr&amp;iacute;a referirse a una propiedad de &lt;code&gt;direction&lt;/code&gt; en cualquiera de los controladores asociados con la jerarqu&amp;iacute;a de ruta de &lt;code&gt;posts&lt;/code&gt; , haciendo coincidir el controlador de hoja m&amp;aacute;s con el nombre de propiedad proporcionado.</target>
        </trans-unit>
        <trans-unit id="8bfea77791ac3c655072d72ffec1b1267fa4553e" translate="yes" xml:space="preserve">
          <source>In the above snippet, we have referenced &lt;code&gt;myBlogPost&lt;/code&gt; while creating the record. This will let Ember know that the newly created comment belongs to &lt;code&gt;myBlogPost&lt;/code&gt;. This will create a new &lt;code&gt;comment&lt;/code&gt; record and save it to the server. Ember Data will also update &lt;code&gt;myBlogPost&lt;/code&gt; to include our newly created comment in its &lt;code&gt;comments&lt;/code&gt; relationship.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e506d89863cd166b3912ada6024e3e490fb98a9" translate="yes" xml:space="preserve">
          <source>In the case above, the parent route looked something like this:</source>
          <target state="translated">En el caso anterior,la ruta de los padres se veía algo así:</target>
        </trans-unit>
        <trans-unit id="478d1d20aa2b757e8e0a695fb76aab0ddf784f90" translate="yes" xml:space="preserve">
          <source>In the case where embedded JSON is expected while extracting a payload (reading) the setting is &lt;code&gt;deserialize: 'records'&lt;/code&gt;, there is no need to use &lt;code&gt;ids&lt;/code&gt; when extracting as that is the default behavior without this mixin if you are using the vanilla &lt;code&gt;EmbeddedRecordsMixin&lt;/code&gt;. Likewise, to embed JSON in the payload while serializing &lt;code&gt;serialize: 'records'&lt;/code&gt; is the setting to use. There is an option of not embedding JSON in the serialized payload by using &lt;code&gt;serialize: 'ids'&lt;/code&gt;. If you do not want the relationship sent at all, you can use &lt;code&gt;serialize: false&lt;/code&gt;.</source>
          <target state="translated">En el caso de que se espere JSON incrustado mientras se extrae una carga &amp;uacute;til (lectura), la configuraci&amp;oacute;n es &lt;code&gt;deserialize: 'records'&lt;/code&gt; , no hay necesidad de usar &lt;code&gt;ids&lt;/code&gt; al extraer, ya que ese es el comportamiento predeterminado sin esta mezcla si est&amp;aacute; utilizando Vanilla &lt;code&gt;EmbeddedRecordsMixin&lt;/code&gt; . Del mismo modo, para incrustar JSON en la carga &amp;uacute;til mientras se serializa &lt;code&gt;serialize: 'records'&lt;/code&gt; es la configuraci&amp;oacute;n a usar. Existe la opci&amp;oacute;n de no incrustar JSON en la carga &amp;uacute;til &lt;code&gt;serialize: 'ids'&lt;/code&gt; mediante serialize: 'ids' . Si no desea que se env&amp;iacute;e la relaci&amp;oacute;n en absoluto, puede usar &lt;code&gt;serialize: false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="94b835eb8d79c04d2b211e3e97f6f2d9f5103261" translate="yes" xml:space="preserve">
          <source>In the component or controller, you can then define what the action does within the &lt;code&gt;actions&lt;/code&gt; hook:</source>
          <target state="translated">En el componente o controlador, puede definir qu&amp;eacute; hace la acci&amp;oacute;n dentro del gancho de &lt;code&gt;actions&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="9c5a020f031a5e1fdb7041f9471eddab8491fa00" translate="yes" xml:space="preserve">
          <source>In the component's template, you can then use the &lt;code&gt;people&lt;/code&gt; argument as an array:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0fc9d809ddbb2f2866e2bf957b3da1e8e0faeb5" translate="yes" xml:space="preserve">
          <source>In the component's template, you can then use the &lt;code&gt;person&lt;/code&gt; object:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ed672cd4df18afd90bc50fad77a8980c0d9e3d6" translate="yes" xml:space="preserve">
          <source>In the component, determine when something has happened, and when to tell the outside world. Here, we want to trigger the outside action (deleting the account or sending the message) after the user clicks the button and then confirms.</source>
          <target state="translated">En el componente,determinar cuándo ha sucedido algo,y cuándo decirle al mundo exterior.Aquí,queremos desencadenar la acción exterior (borrar la cuenta o enviar el mensaje)después de que el usuario haga clic en el botón y luego confirme.</target>
        </trans-unit>
        <trans-unit id="c29bf44532a0de6efe83c3ffd2229a5dd807f40a" translate="yes" xml:space="preserve">
          <source>In the end, your deprecations can be fully turned on as &quot;throw&quot; and you should be able to use your application without error. At this point, you can go ahead and update your Ember version! When you upgrade, be sure you remove the deprecations you've fixed from the deprecation workflow file, so that you can start the process over for the next release.</source>
          <target state="translated">Al final,sus deprecaciones pueden ser totalmente activadas como &quot;lanzamiento&quot; y debería poder usar su aplicación sin errores.En este punto,puedes seguir adelante y actualizar tu versión de Ember! Cuando actualices,asegúrate de eliminar las deprecaciones que has arreglado del archivo de flujo de trabajo de depreciación,para que puedas comenzar el proceso de nuevo para la próxima versión.</target>
        </trans-unit>
        <trans-unit id="29f0010bc55ec6034535665427b5f700b4578cc6" translate="yes" xml:space="preserve">
          <source>In the event the object's method returns a value, you can simply assert that the return value is calculated correctly. Suppose our object has a &lt;code&gt;calc&lt;/code&gt; method that returns a value based on some internal state.</source>
          <target state="translated">En caso de que el m&amp;eacute;todo del objeto devuelva un valor, simplemente puede afirmar que el valor devuelto se calcula correctamente. Supongamos que nuestro objeto tiene un m&amp;eacute;todo &lt;code&gt;calc&lt;/code&gt; que devuelve un valor basado en alg&amp;uacute;n estado interno.</target>
        </trans-unit>
        <trans-unit id="2e15a183e5d6f6d354c9231666eb3edd234ebfa3" translate="yes" xml:space="preserve">
          <source>In the example above, we used &lt;code&gt;@action&lt;/code&gt; to ensure that &lt;code&gt;handleSelected&lt;/code&gt; is properly bound to the &lt;code&gt;items-list&lt;/code&gt;, but let's explore what happens if we left out &lt;code&gt;@action&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41e2131194fa1faaff2ac71950e3bce704789238" translate="yes" xml:space="preserve">
          <source>In the example above, we used &lt;code&gt;@action&lt;/code&gt; to ensure that &lt;code&gt;likePost&lt;/code&gt; is properly bound to the &lt;code&gt;items-list&lt;/code&gt;, but let's explore what happens if we left out &lt;code&gt;@action&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c790f7225499bb124a8b160d3f46b82b7b9a258b" translate="yes" xml:space="preserve">
          <source>In the example below, we can see how the template is using the model properties to display some data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b7b29afdf482f494a733b6b2218b0273a4d761a" translate="yes" xml:space="preserve">
          <source>In the example scenario above, some acceptance tests one might write are:</source>
          <target state="translated">En el escenario del ejemplo anterior,algunas pruebas de aceptación que uno podría escribir son:</target>
        </trans-unit>
        <trans-unit id="b26b3792bb869c179a0fa525bac35080d3ca7f04" translate="yes" xml:space="preserve">
          <source>In the examples above, we showed a route that will always return the same data, a collection of favorite posts. Even when the user leaves and re-enters the &lt;code&gt;/posts&lt;/code&gt; route, they will see the same thing. But what if you need to request different data after user interaction? What if a specific post should load based on the URL that the user visited, like &lt;code&gt;posts/42&lt;/code&gt;? In Ember, this can be accomplished by defining routes with &lt;a href=&quot;../defining-your-routes#toc_dynamic-segments&quot;&gt;dynamic segments&lt;/a&gt;, or by using &lt;a href=&quot;../query-params&quot;&gt;query parameters&lt;/a&gt;, and then using the dynamic data to make requests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfa85e52dee2cc281f98f5dd120d218c5fb1ef18" translate="yes" xml:space="preserve">
          <source>In the first form, the callback method you provide should have the following signature:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60c0e4d39cfc8941cdfd8e26962fcac38112a81f" translate="yes" xml:space="preserve">
          <source>In the first test, we just want to verify the output of the component, so we just assert that the title and owner text match what we provided in the fake &lt;code&gt;rental&lt;/code&gt;.</source>
          <target state="translated">En la primera prueba, solo queremos verificar la salida del componente, por lo que solo afirmamos que el t&amp;iacute;tulo y el texto del propietario coinciden con lo que proporcionamos en el &lt;code&gt;rental&lt;/code&gt; falso .</target>
        </trans-unit>
        <trans-unit id="6f57bd369b7c5a682c17d48fafc684dc8fc9ae5b" translate="yes" xml:space="preserve">
          <source>In the following example &lt;code&gt;recognize&lt;/code&gt; is used to verify if a path belongs to our application before transitioning to it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e5e52098bca64fd822170daa993d5a78f45fbec" translate="yes" xml:space="preserve">
          <source>In the following example we declare a computed property - &lt;code&gt;fullName&lt;/code&gt; - by calling &lt;code&gt;.Ember.computed()&lt;/code&gt; with property dependencies (&lt;code&gt;firstName&lt;/code&gt; and &lt;code&gt;lastName&lt;/code&gt;) as leading arguments and getter accessor function. The &lt;code&gt;fullName&lt;/code&gt; getter function will be called once (regardless of how many times it is accessed) as long as its dependencies have not changed. Once &lt;code&gt;firstName&lt;/code&gt; or &lt;code&gt;lastName&lt;/code&gt; are updated any future calls (or anything bound) to &lt;code&gt;fullName&lt;/code&gt; will incorporate the new values.</source>
          <target state="translated">En el siguiente ejemplo, declaramos una propiedad calculada - &lt;code&gt;fullName&lt;/code&gt; - llamando a &lt;code&gt;.Ember.computed()&lt;/code&gt; con dependencias de propiedad ( &lt;code&gt;firstName&lt;/code&gt; y &lt;code&gt;lastName&lt;/code&gt; ) como argumentos principales y funci&amp;oacute;n de acceso de getter. La funci&amp;oacute;n getter &lt;code&gt;fullName&lt;/code&gt; se llamar&amp;aacute; una vez (independientemente de cu&amp;aacute;ntas veces se acceda a ella) siempre que sus dependencias no hayan cambiado. Una vez que se actualicen &lt;code&gt;firstName&lt;/code&gt; o &lt;code&gt;lastName&lt;/code&gt; , cualquier llamada futura (o cualquier cosa vinculada) a &lt;code&gt;fullName&lt;/code&gt; incorporar&amp;aacute; los nuevos valores.</target>
        </trans-unit>
        <trans-unit id="eef40a7baa69b422b2dd0566b57907617b44c6aa" translate="yes" xml:space="preserve">
          <source>In the following example we decorate a getter - &lt;code&gt;fullName&lt;/code&gt; - by calling &lt;code&gt;computed&lt;/code&gt; with the property dependencies (&lt;code&gt;firstName&lt;/code&gt; and &lt;code&gt;lastName&lt;/code&gt;) as arguments. The &lt;code&gt;fullName&lt;/code&gt; getter will be called once (regardless of how many times it is accessed) as long as its dependencies do not change. Once &lt;code&gt;firstName&lt;/code&gt; or &lt;code&gt;lastName&lt;/code&gt; are updated any future calls to &lt;code&gt;fullName&lt;/code&gt; will incorporate the new values, and any watchers of the value such as templates will be updated:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b743c900c97efc8ad3db27fd77a428a82e1aa30c" translate="yes" xml:space="preserve">
          <source>In the following example we define that &lt;code&gt;verified&lt;/code&gt; has a default value of &lt;code&gt;false&lt;/code&gt; and &lt;code&gt;createdAt&lt;/code&gt; defaults to the current date at the time of the model's creation:</source>
          <target state="translated">En el siguiente ejemplo, definimos que &lt;code&gt;verified&lt;/code&gt; tiene un valor predeterminado de &lt;code&gt;false&lt;/code&gt; y &lt;code&gt;createdAt&lt;/code&gt; tiene como valor predeterminado la fecha actual en el momento de la creaci&amp;oacute;n del modelo:</target>
        </trans-unit>
        <trans-unit id="24a3fe752ab5bc2e775f9a3786930d5b1765d8be" translate="yes" xml:space="preserve">
          <source>In the following example we use the Router service to navigate to a route with a specific model from a Component in the first action, and in the second we trigger a query-params only transition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="013d8fe2714ac8c83e2128ab28f9ee67ea4ee975" translate="yes" xml:space="preserve">
          <source>In the following example, &lt;code&gt;isActive&lt;/code&gt; will return &lt;code&gt;true&lt;/code&gt; if the current route is &lt;code&gt;/posts&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2df8790cb651cbefeff26f77eaa7ca0c47f047c9" translate="yes" xml:space="preserve">
          <source>In the following example, the &lt;code&gt;Message&lt;/code&gt; class is registered as a non-singleton:</source>
          <target state="translated">En el siguiente ejemplo, la clase &lt;code&gt;Message&lt;/code&gt; se registra como no singleton:</target>
        </trans-unit>
        <trans-unit id="233bbe607bc2c2d21456c625e11d59925fc79517" translate="yes" xml:space="preserve">
          <source>In the following example, the &lt;code&gt;logger&lt;/code&gt; is a plain JavaScript object that should be returned &quot;as is&quot; when it's looked up:</source>
          <target state="translated">En el siguiente ejemplo, el &lt;code&gt;logger&lt;/code&gt; es un objeto JavaScript simple que debe devolverse &quot;tal cual&quot; cuando se busca:</target>
        </trans-unit>
        <trans-unit id="5b6ece95eecdd3d1a5c898572f49b2da1f797953" translate="yes" xml:space="preserve">
          <source>In the following example, the &lt;code&gt;writtenWords&lt;/code&gt; property on &lt;code&gt;App.ApplicationController&lt;/code&gt; will be updated live as the user types 'Lots of text that IS bound' into the text area of their browser's window.</source>
          <target state="translated">En el siguiente ejemplo, la propiedad &lt;code&gt;writtenWords&lt;/code&gt; en &lt;code&gt;App.ApplicationController&lt;/code&gt; se actualizar&amp;aacute; en vivo a medida que el usuario ingrese 'Mucho texto que est&amp;aacute; enlazado' en el &amp;aacute;rea de texto de la ventana de su navegador.</target>
        </trans-unit>
        <trans-unit id="d90e53fc7f038f4cb394d0bcfaae08b23273b5e2" translate="yes" xml:space="preserve">
          <source>In the following example, the controller query param property &lt;code&gt;page&lt;/code&gt; is considered to have a default value of &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">En el siguiente ejemplo, se considera que la &lt;code&gt;page&lt;/code&gt; propiedades del par&amp;aacute;metro de consulta del controlador tiene un valor predeterminado de &lt;code&gt;1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c0cd9294f08764c05cedc4a72f4e0e203087329e" translate="yes" xml:space="preserve">
          <source>In the following example, the controller's &lt;code&gt;page&lt;/code&gt; query param is reset to 1, &lt;em&gt;while still scoped to the pre-transition &lt;code&gt;ArticlesRoute&lt;/code&gt; model&lt;/em&gt;. The result of this is that all links pointing back into the exited route will use the newly reset value &lt;code&gt;1&lt;/code&gt; as the value for the &lt;code&gt;page&lt;/code&gt; query param.</source>
          <target state="translated">En el siguiente ejemplo, el par&amp;aacute;metro de consulta de la &lt;code&gt;page&lt;/code&gt; del controlador se restablece a 1, &lt;em&gt;mientras que todav&amp;iacute;a est&amp;aacute; dentro del &amp;aacute;mbito del modelo &lt;code&gt;ArticlesRoute&lt;/code&gt; previo a la transici&amp;oacute;n&lt;/em&gt; . El resultado de esto es que todos los enlaces que apuntan hacia la ruta salida usar&amp;aacute;n el valor &lt;code&gt;1&lt;/code&gt; reci&amp;eacute;n restablecido como valor para el par&amp;aacute;metro de consulta de la &lt;code&gt;page&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d9493f7f6dbac27a6bbf6f81be4cc1bd615d7b22" translate="yes" xml:space="preserve">
          <source>In the future this method may become asynchronous.</source>
          <target state="translated">En el futuro este método puede convertirse en asíncrono.</target>
        </trans-unit>
        <trans-unit id="863bfcf825dfadfc2811ff6f4bd89086790dd5cf" translate="yes" xml:space="preserve">
          <source>In the getter, call the function with &lt;code&gt;getValue&lt;/code&gt; and return its value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7763016ae3874e734aaff49da1caf0af62b9ec2c" translate="yes" xml:space="preserve">
          <source>In the last section it was discussed that helpers can be nested. This can be combined with these sorts of dynamic helpers. For example, the &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Templates.helpers.html#method_concat&quot;&gt;&lt;code&gt;{{concat}}&lt;/code&gt;&lt;/a&gt; helper makes it easy to dynamically send a number of parameters to a component or helper as a single parameter in the format of a concatenated string.</source>
          <target state="translated">En la &amp;uacute;ltima secci&amp;oacute;n se discuti&amp;oacute; que los ayudantes se pueden anidar. Esto se puede combinar con este tipo de ayudantes din&amp;aacute;micos. Por ejemplo, el ayudante &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Templates.helpers.html#method_concat&quot;&gt; &lt;code&gt;{{concat}}&lt;/code&gt; &lt;/a&gt; facilita el env&amp;iacute;o din&amp;aacute;mico de una serie de par&amp;aacute;metros a un componente o ayudante como un solo par&amp;aacute;metro en el formato de una cadena concatenada.</target>
        </trans-unit>
        <trans-unit id="2b214df3a911e95c5faa8abdfc7455c4bb7bc392" translate="yes" xml:space="preserve">
          <source>In the last section you learned how to write a helper. A helper is usually a simple function that can be used in any template. Ember comes with a few helpers that can make developing your templates a bit easier. These helpers can allow you to be more dynamic in passing data to another helper or component.</source>
          <target state="translated">En la última sección aprendiste a escribir un ayudante.Un helper es normalmente una función simple que puede ser usada en cualquier plantilla.Ember viene con algunos ayudantes que pueden hacer que el desarrollo de tus plantillas sea un poco más fácil.Estos ayudantes pueden permitirte ser más dinámico a la hora de pasar datos a otro ayudante o componente.</target>
        </trans-unit>
        <trans-unit id="aa44080e0fbc6502e95ff1793ce1365dcc77c43a" translate="yes" xml:space="preserve">
          <source>In the next example, we'll add another test that validates that the display changes when we modify the values on the service.</source>
          <target state="translated">En el siguiente ejemplo,añadiremos otra prueba que valida que la pantalla cambia cuando modificamos los valores en el servicio.</target>
        </trans-unit>
        <trans-unit id="0c6940786aa8b86cdd87c15a75e09b023f37cd0e" translate="yes" xml:space="preserve">
          <source>In the next section, &lt;a href=&quot;../specifying-a-routes-model&quot;&gt;Specifying a Route's Model&lt;/a&gt;, you will learn more about how to load a model.</source>
          <target state="translated">En la siguiente secci&amp;oacute;n, &lt;a href=&quot;../specifying-a-routes-model&quot;&gt;Especificar el modelo de una ruta&lt;/a&gt; , aprender&amp;aacute; m&amp;aacute;s sobre c&amp;oacute;mo cargar un modelo.</target>
        </trans-unit>
        <trans-unit id="5b3225b90ebee0970e72480b63600650d742c3b9" translate="yes" xml:space="preserve">
          <source>In the next section, we will study 3 types of tests that Ember supports&amp;mdash;unit, rendering, and application tests. We will look at each type and when you might use one over another.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8fb6c182d1e1d1b3ff42808f106bd10346acee4" translate="yes" xml:space="preserve">
          <source>In the next section, we will take a look at best practices for writing tests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20f227fda6517c338c8f0755e380dce74ab30bcf" translate="yes" xml:space="preserve">
          <source>In the parent component, decide how you want to react to the action. Here, we want to have the action delete the user's account when it's used in one place, and send a message when used in another place.</source>
          <target state="translated">En el componente padre,decide cómo quieres reaccionar a la acción.Aquí,queremos que la acción elimine la cuenta del usuario cuando se utilice en un lugar,y que envíe un mensaje cuando se utilice en otro lugar.</target>
        </trans-unit>
        <trans-unit id="3313b9f50f45c5962f8742cc4398d29a196f8cf9" translate="yes" xml:space="preserve">
          <source>In the parent component, let's first define what we want to happen when the user clicks the button and then confirms. In the first case, we'll find the user's account and delete it.</source>
          <target state="translated">En el componente padre,definamos primero lo que queremos que suceda cuando el usuario haga clic en el botón y luego confirme.En el primer caso,encontraremos la cuenta del usuario y la borraremos.</target>
        </trans-unit>
        <trans-unit id="ef1ad9585c971f09074f6ec7df95f060115bbba6" translate="yes" xml:space="preserve">
          <source>In the previous Guides topic, we showed making a dynamic segment in the app's &lt;code&gt;router.js&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f37bbd2dbe24f753a19698ec2897d367ba4e42f8" translate="yes" xml:space="preserve">
          <source>In the previous example, the &lt;code&gt;fullName&lt;/code&gt; computed property depends on two other properties:</source>
          <target state="translated">En el ejemplo anterior, la propiedad calculada &lt;code&gt;fullName&lt;/code&gt; depende de otras dos propiedades:</target>
        </trans-unit>
        <trans-unit id="6bd421e4151bfe7046f0243f413ff18a5b4146ae" translate="yes" xml:space="preserve">
          <source>In the rest of the code examples in this tutorial, whenever we add or remove code, we will show a &quot;diff.&quot; The lines you need to remove have a minus sign in front of them, and the lines you should add have a plus sign. If you are using a screen reader while you go through the Guides, we recommend using Firefox and NVDA or Safari and VoiceOver for the best experience.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bf66bc363e2d2d179030f65e4b2fd6a15e764ca" translate="yes" xml:space="preserve">
          <source>In the rest of this guide, we'll explore some of the most common enumerable conveniences. For the full list, please see the &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Enumerable.html&quot;&gt;Ember.Enumerable API reference documentation.&lt;/a&gt;</source>
          <target state="translated">En el resto de esta gu&amp;iacute;a, exploraremos algunas de las comodidades enumerables m&amp;aacute;s comunes. Para obtener la lista completa, consulte la &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Enumerable.html&quot;&gt;documentaci&amp;oacute;n de referencia de la API Ember.Enumerable.&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3626ecb2f5cd34b98ca0d7192ad49e872f224b58" translate="yes" xml:space="preserve">
          <source>In the route template &lt;code&gt;/app/templates/contact.hbs&lt;/code&gt;, let's add our contact details:</source>
          <target state="translated">En la plantilla de ruta &lt;code&gt;/app/templates/contact.hbs&lt;/code&gt; , agreguemos nuestros datos de contacto:</target>
        </trans-unit>
        <trans-unit id="668783723e5ac5676bc988cb4ae5331af970bd5c" translate="yes" xml:space="preserve">
          <source>In the router example above, entering &lt;code&gt;/#/posts/new&lt;/code&gt; will take you to the &lt;code&gt;posts.new&lt;/code&gt; route.</source>
          <target state="translated">En el ejemplo de enrutador anterior, ingresar &lt;code&gt;/#/posts/new&lt;/code&gt; lo llevar&amp;aacute; a la ruta &lt;code&gt;posts.new&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9c50826bece7aef7c56c72cb820458df889a2f3c" translate="yes" xml:space="preserve">
          <source>In the screen recording below, we run the tests, deselect &quot;Hide passed tests&quot;, and set the module to our acceptance test, revealing the 3 tests we got passing.</source>
          <target state="translated">En la grabación de la pantalla de abajo,ejecutamos las pruebas,deseleccionamos &quot;Ocultar las pruebas superadas&quot;,y ajustamos el módulo a nuestra prueba de aceptación,revelando las 3 pruebas que hemos superado.</target>
        </trans-unit>
        <trans-unit id="757d4eaaf4fcacd33748d5ba1755b484699bd593" translate="yes" xml:space="preserve">
          <source>In the second form, you should provide the key of the array of sort values as the second parameter:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6d8101c2f83153723232cf86f5364cb7b9dd72c" translate="yes" xml:space="preserve">
          <source>In the second test, only one assert is expected (line 26), since the map element is fetched from cache and does not use the utility.</source>
          <target state="translated">En la segunda prueba,sólo se espera una afirmación (línea 26),ya que el elemento del mapa se obtiene de la memoria caché y no utiliza la utilidad.</target>
        </trans-unit>
        <trans-unit id="1d510ca47cdbc1037a37b0a8df8550c2f230b705" translate="yes" xml:space="preserve">
          <source>In the second test, we verify that clicking on the image toggles the size. We will assert that the component is initially rendered without the &lt;code&gt;wide&lt;/code&gt; class name. Clicking the image will add the class &lt;code&gt;wide&lt;/code&gt; to our element, and clicking it a second time will take the &lt;code&gt;wide&lt;/code&gt; class away. Note that we find the image element using the CSS selector &lt;code&gt;.image&lt;/code&gt;.</source>
          <target state="translated">En la segunda prueba, verificamos que al hacer clic en la imagen se alterna el tama&amp;ntilde;o. Afirmaremos que el componente se representa inicialmente sin el nombre de clase &lt;code&gt;wide&lt;/code&gt; . Al hacer clic en la imagen, se agregar&amp;aacute; la clase &lt;code&gt;wide&lt;/code&gt; a nuestro elemento, y hacer clic en ella por segunda vez eliminar&amp;aacute; la clase &lt;code&gt;wide&lt;/code&gt; . Tenga en cuenta que encontramos el elemento de imagen usando el selector de CSS &lt;code&gt;.image&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ec8a8c0979d60d242dc91aa3938dee728238dc02" translate="yes" xml:space="preserve">
          <source>In the section on &lt;a href=&quot;../ember-data#toc_updating-the-model-hook&quot;&gt;using Ember Data&lt;/a&gt;, we added a call to fetch all rentals. Let's implement our newly generated &lt;code&gt;rentals/index&lt;/code&gt; route by moving this &lt;code&gt;findAll&lt;/code&gt; call from the parent &lt;code&gt;rentals&lt;/code&gt; route to our new sub-route.</source>
          <target state="translated">En la secci&amp;oacute;n sobre el &lt;a href=&quot;../ember-data#toc_updating-the-model-hook&quot;&gt;uso de Ember Data&lt;/a&gt; , agregamos una llamada para buscar todos los alquileres. Implementemos nuestra ruta de &lt;code&gt;rentals/index&lt;/code&gt; reci&amp;eacute;n generada moviendo esta llamada &lt;code&gt;findAll&lt;/code&gt; de la ruta de &lt;code&gt;rentals&lt;/code&gt; principal a nuestra nueva subruta .</target>
        </trans-unit>
        <trans-unit id="2c75e9e9ff5ae595c7677f979b46395e2cc4263b" translate="yes" xml:space="preserve">
          <source>In the tests above, we're using &lt;a href=&quot;https://api.qunitjs.com/assert/equal&quot;&gt;&lt;code&gt;assert.equal()&lt;/code&gt;&lt;/a&gt;. &lt;code&gt;assert.equal()&lt;/code&gt; checks to see if two items (our first and second arguments) equal each other. If they don't, our test will fail. The third optional argument allows us to provide a nicer message which we'll be shown if this test fails.</source>
          <target state="translated">En las pruebas anteriores, usamos &lt;a href=&quot;https://api.qunitjs.com/assert/equal&quot;&gt; &lt;code&gt;assert.equal()&lt;/code&gt; &lt;/a&gt; . &lt;code&gt;assert.equal()&lt;/code&gt; comprueba si dos elementos (nuestro primer y segundo argumento) son iguales entre s&amp;iacute;. Si no lo hacen, nuestra prueba fallar&amp;aacute;. El tercer argumento opcional nos permite proporcionar un mensaje m&amp;aacute;s agradable que se mostrar&amp;aacute; si esta prueba falla.</target>
        </trans-unit>
        <trans-unit id="699021456e02b0a02fefc8a8a7b9c9b63413abb7" translate="yes" xml:space="preserve">
          <source>In these cases, make sure to declare &lt;em&gt;all&lt;/em&gt; of the relevant values in the correct order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e6e40cf44bcbf93efe5143664ba428bdef9ed0e" translate="yes" xml:space="preserve">
          <source>In these cases, you can use nested routes to display one template inside of another.</source>
          <target state="translated">En estos casos,puede utilizar rutas anidadas para mostrar una plantilla dentro de otra.</target>
        </trans-unit>
        <trans-unit id="277d1ed1f9dffb2d6cb7f7d8d7e8e3b1c14c3fa5" translate="yes" xml:space="preserve">
          <source>In these contexts, the helper is called a &quot;closure action&quot; helper. Its behavior is simple: If passed a function name, read that function off the &lt;code&gt;actions&lt;/code&gt; property of the current context. Once that function is read (or if a function was passed), create a closure over that function and any arguments. The resulting value of an action helper used this way is simply a function.</source>
          <target state="translated">En estos contextos, el ayudante se denomina ayudante de &quot;acci&amp;oacute;n de cierre&quot;. Su comportamiento es simple: si se le pasa un nombre de funci&amp;oacute;n, lea esa funci&amp;oacute;n en la propiedad de &lt;code&gt;actions&lt;/code&gt; del contexto actual. Una vez que se lea esa funci&amp;oacute;n (o si se pas&amp;oacute; una funci&amp;oacute;n), cree un cierre sobre esa funci&amp;oacute;n y cualquier argumento. El valor resultante de un asistente de acci&amp;oacute;n utilizado de esta manera es simplemente una funci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="7b40f2616211274eedc138c16712bb3e490db358" translate="yes" xml:space="preserve">
          <source>In these contexts, the helper is called a &quot;closure action&quot; helper. Its behavior is simple: If passed a function name, read that function off the &lt;code&gt;actions&lt;/code&gt; property of the current context. Once that function is read, or immediately if a function was passed, create a closure over that function and any arguments. The resulting value of an action helper used this way is simply a function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f097e3a4a018fab97639f3a2a4cad00cf18f7bb3" translate="yes" xml:space="preserve">
          <source>In this above case, the new comment's &lt;code&gt;belongsTo&lt;/code&gt; relationship will be automatically set to the parent blogPost.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="342f8dbcd0d3f421e8ad569b6a2dec1023c30989" translate="yes" xml:space="preserve">
          <source>In this case the &lt;code&gt;display-item&lt;/code&gt; component will receive a normal function that it can invoke. When it invokes the function, the &lt;code&gt;handleSelected&lt;/code&gt; function will receive the &lt;code&gt;item&lt;/code&gt; and any arguments passed, thanks to the &lt;code&gt;fn&lt;/code&gt; helper.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fed254713d8a384178635a4f0159717fca4422f8" translate="yes" xml:space="preserve">
          <source>In this case the new comment's &lt;code&gt;belongsTo&lt;/code&gt; relationship will be set to the parent blogPost.</source>
          <target state="translated">En este caso, la relaci&amp;oacute;n &lt;code&gt;belongsTo&lt;/code&gt; del nuevo comentario se establecer&amp;aacute; en el blogPost principal.</target>
        </trans-unit>
        <trans-unit id="199ccadf938b7b77e98d7c392830ac4292b84798" translate="yes" xml:space="preserve">
          <source>In this case we are passing, or &quot;yielding&quot;, our filter data to the inner markup as a variable called &lt;code&gt;rentals&lt;/code&gt; (line 14).</source>
          <target state="translated">En este caso, estamos pasando, o &quot;cediendo&quot;, nuestros datos de filtro al marcado interno como una variable llamada &lt;code&gt;rentals&lt;/code&gt; (l&amp;iacute;nea 14).</target>
        </trans-unit>
        <trans-unit id="702b52a12ed04e5c7a6456f4e79607df4353a3e8" translate="yes" xml:space="preserve">
          <source>In this case we want a helper function that takes three arguments: a string, a starting position, and a length. The function will return a substring of the original string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27a71c7a780b2d1d5cfac2270df871c02621afe3" translate="yes" xml:space="preserve">
          <source>In this case, because the store already knew about the record, it returns a promise that it resolves with the record immediately. It does not need to ask the adapter (and, therefore, the server) for a copy since it already has it saved locally.</source>
          <target state="translated">En este caso,como la tienda ya sabía del disco,devuelve una promesa que resuelve con el disco inmediatamente.No necesita pedir una copia al adaptador (y,por lo tanto,al servidor)ya que lo tiene guardado localmente.</target>
        </trans-unit>
        <trans-unit id="2b4e6a4d0a04cf700c0709867999184ac9542b3f" translate="yes" xml:space="preserve">
          <source>In this case, each time the &lt;code&gt;people&lt;/code&gt; array is &lt;code&gt;map&lt;/code&gt;-ed over, it will produce an new array with completely different objects between renders. In these cases, you can help Ember determine how these objects related to each other with the &lt;code&gt;key&lt;/code&gt; option:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a472d46b229efeb213c4172d4b722f17169718f" translate="yes" xml:space="preserve">
          <source>In this case, the &lt;code&gt;saveLike&lt;/code&gt; function will receive two arguments: the click event and the value of &lt;code&gt;@post&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e1d87a15a3c605526aa32dda158f7d4b73ddaab" translate="yes" xml:space="preserve">
          <source>In this case, the content we wanted to display came from the model. But what if we want the developer using our component to be able to provide custom HTML content?</source>
          <target state="translated">En este caso,el contenido que queríamos mostrar provenía de la modelo.¿Pero qué pasa si queremos que el desarrollador que usa nuestro componente pueda proporcionar contenido HTML personalizado?</target>
        </trans-unit>
        <trans-unit id="2046680a815290cb64f7bc7924424fc5389744c4" translate="yes" xml:space="preserve">
          <source>In this case, the logger will only be injected on the index route.</source>
          <target state="translated">En este caso,el registrador sólo se inyectará en la ruta del índice.</target>
        </trans-unit>
        <trans-unit id="e9c5869730a01e8966a0da64c64cbd5600227613" translate="yes" xml:space="preserve">
          <source>In this case, the post's comments would then be available in your template as &lt;code&gt;model.comments&lt;/code&gt;.</source>
          <target state="translated">En este caso, los comentarios de la publicaci&amp;oacute;n estar&amp;aacute;n disponibles en su plantilla como &lt;code&gt;model.comments&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3f476dfd13b461823b64be7683af84202948a1ab" translate="yes" xml:space="preserve">
          <source>In this case, the provided &lt;code&gt;id&lt;/code&gt; will be used to populate the URL's dynamic segment directly, bypassing the &lt;code&gt;serialize&lt;/code&gt; hook entirely:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67dc04af7405d68be38e9a11700632d49b9ac8e0" translate="yes" xml:space="preserve">
          <source>In this case, we told Ember to build for the production environment via the &lt;code&gt;--env&lt;/code&gt; flag. This creates an optimized bundle that's ready to upload to your web host. Once the build finishes, you'll find all of the concatenated and minified assets in your application's &lt;code&gt;dist/&lt;/code&gt; directory.</source>
          <target state="translated">En este caso, le dijimos a Ember que compilara para el entorno de producci&amp;oacute;n a trav&amp;eacute;s de la bandera &lt;code&gt;--env&lt;/code&gt; . Esto crea un paquete optimizado que est&amp;aacute; listo para cargarse en su servidor web. Una vez que finalice la compilaci&amp;oacute;n, encontrar&amp;aacute; todos los activos concatenados y minificados en el directorio &lt;code&gt;dist/&lt;/code&gt; de su aplicaci&amp;oacute;n .</target>
        </trans-unit>
        <trans-unit id="669c7b150b8832cd317cde01bc84166c816df31f" translate="yes" xml:space="preserve">
          <source>In this case, we told Ember to build for the production environment via the &lt;code&gt;--environment&lt;/code&gt; flag. This creates an optimized bundle that's ready to upload to your web host. Once the build finishes, you'll find all of the concatenated and minified assets in your application's &lt;code&gt;dist/&lt;/code&gt; directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3eede79d6dafa887aef94f30b1ece8ed419ec25c" translate="yes" xml:space="preserve">
          <source>In this case, we use it to be notified when an Ember Data user defines a belongs-to relationship. In that case, we need to set up observers for each one, allowing us to track relationship changes and automatically reflect changes in the inverse has-many array.</source>
          <target state="translated">En este caso,lo usamos para ser notificados cuando un usuario de Ember Data define una relación de pertenencia.En ese caso,necesitamos establecer observadores para cada uno,permitiéndonos seguir los cambios de la relación y reflejar automáticamente los cambios en el conjunto inverso has-muchos.</target>
        </trans-unit>
        <trans-unit id="461fa1325f68686ad7a43aef88f48e81b585fe1d" translate="yes" xml:space="preserve">
          <source>In this case, we're telling the &lt;code&gt;{{link-to}}&lt;/code&gt; helper the name of the route we want to link to: &lt;code&gt;contact&lt;/code&gt;. When we look at our about page at &lt;a href=&quot;http://localhost:4200/about&quot;&gt;&lt;code&gt;http://localhost:4200/about&lt;/code&gt;&lt;/a&gt;, we now have a working link to our contact page:</source>
          <target state="translated">En este caso, le estamos diciendo al ayudante &lt;code&gt;{{link-to}}&lt;/code&gt; el nombre de la ruta a la que queremos vincular: &lt;code&gt;contact&lt;/code&gt; o . Cuando miramos nuestra p&amp;aacute;gina acerca de en &lt;a href=&quot;http://localhost:4200/about&quot;&gt; &lt;code&gt;http://localhost:4200/about&lt;/code&gt; &lt;/a&gt; , ahora tenemos un enlace funcional a nuestra p&amp;aacute;gina de contacto:</target>
        </trans-unit>
        <trans-unit id="dc32e934f649a7cf009df72c87782315b612f602" translate="yes" xml:space="preserve">
          <source>In this case, when the first component is clicked on, Ember will invoke the &lt;code&gt;firstWidgetClicked&lt;/code&gt; action. When the second component is clicked on, Ember will invoke the &lt;code&gt;secondWidgetClicked&lt;/code&gt; action instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c73ca24be13f11ba0f5221ab51f23a9605b99495" translate="yes" xml:space="preserve">
          <source>In this example, the &lt;code&gt;div&lt;/code&gt; within the Tooltip component will get the &lt;code&gt;did-insert&lt;/code&gt; modifier applied to it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78362467d2beea9a5306a4cec029f74ef9aa51c4" translate="yes" xml:space="preserve">
          <source>In this example, the Router service is injected into a component to initiate a transition to a dedicated route:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84d0561a9ead5edcac660e0b3bb91aa9374122d7" translate="yes" xml:space="preserve">
          <source>In this example, the URL for the &lt;code&gt;author.books&lt;/code&gt; route for a given author is copied to the clipboard.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5880253b9626a727ceaac0543aeb8364c3b6af22" translate="yes" xml:space="preserve">
          <source>In this example, the function receives a dollar amount in cents as the first parameter (&lt;code&gt;value&lt;/code&gt;). We then use regular JavaScript to turn the count of cents into a formatted string, like &lt;code&gt;&quot;$5.00&quot;&lt;/code&gt;.</source>
          <target state="translated">En este ejemplo, la funci&amp;oacute;n recibe una cantidad en d&amp;oacute;lares en centavos como primer par&amp;aacute;metro ( &lt;code&gt;value&lt;/code&gt; ). Luego usamos JavaScript normal para convertir la cuenta de centavos en una cadena formateada, como &lt;code&gt;&quot;$5.00&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6158ae94c3896cf85b79adc98237afb3cf841842" translate="yes" xml:space="preserve">
          <source>In this example, the initial value in the &lt;code&gt;&amp;lt;input /&amp;gt;&lt;/code&gt; will be set to the value of &lt;code&gt;searchWord&lt;/code&gt;. If the user changes the text, the value of &lt;code&gt;searchWord&lt;/code&gt; will also be updated.</source>
          <target state="translated">En este ejemplo, el valor inicial en &lt;code&gt;&amp;lt;input /&amp;gt;&lt;/code&gt; se establecer&amp;aacute; en el valor de &lt;code&gt;searchWord&lt;/code&gt; . Si el usuario cambia el texto, el valor de &lt;code&gt;searchWord&lt;/code&gt; tambi&amp;eacute;n se actualizar&amp;aacute;.</target>
        </trans-unit>
        <trans-unit id="5aede71aa871782486d3a5891c86a7ef3fcfd95a" translate="yes" xml:space="preserve">
          <source>In this example, the sequence of code forced the browser to recalculate style, and relayout after each step. However, if we were able to batch similar jobs together, the browser would have only needed to recalculate the style and layout once.</source>
          <target state="translated">En este ejemplo,la secuencia de código obligó al navegador a recalcular el estilo,y a retransmitirlo después de cada paso.Sin embargo,si pudiéramos agrupar trabajos similares,el navegador sólo habría necesitado recalcular el estilo y el diseño una vez.</target>
        </trans-unit>
        <trans-unit id="20237293cf816390a6366bd495a7d8e7744d22d2" translate="yes" xml:space="preserve">
          <source>In this example, the two computed properties are equivalent:</source>
          <target state="translated">En este ejemplo,las dos propiedades calculadas son equivalentes:</target>
        </trans-unit>
        <trans-unit id="ff878382b6e37c236c3de0808d9b1bd675159463" translate="yes" xml:space="preserve">
          <source>In this example, there is a list component that needs to scroll to a selected item when rendered. Since scrolling to a specific spot is based on positions within the DOM, we need to ensure that the list has been rendered before scrolling. We can first render this list, and then set the scroll.</source>
          <target state="translated">En este ejemplo,hay un componente de la lista que necesita desplazarse a un elemento seleccionado cuando se renderiza.Dado que el desplazamiento a un punto específico se basa en las posiciones dentro del DOM,necesitamos asegurarnos de que la lista se ha renderizado antes de desplazarnos.Primero podemos renderizar esta lista y luego configurar el desplazamiento.</target>
        </trans-unit>
        <trans-unit id="b35e1bea28a8c67a3355806b7603a59e103b7b51" translate="yes" xml:space="preserve">
          <source>In this example, we are using a helper to multiply &lt;code&gt;2&lt;/code&gt; and &lt;code&gt;4&lt;/code&gt;&lt;em&gt;before&lt;/em&gt; passing the value into &lt;code&gt;{{sum}}&lt;/code&gt;.</source>
          <target state="translated">En este ejemplo, estamos usando un ayudante para multiplicar &lt;code&gt;2&lt;/code&gt; y &lt;code&gt;4&lt;/code&gt; &lt;em&gt;antes de&lt;/em&gt; pasar el valor a &lt;code&gt;{{sum}}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1492c259605af50da4db4a47d8e5e22b694e5081" translate="yes" xml:space="preserve">
          <source>In this example, we can pass a &lt;code&gt;sign&lt;/code&gt; argument to our &lt;code&gt;format-currency&lt;/code&gt; helper:</source>
          <target state="translated">En este ejemplo, podemos pasar un argumento de &lt;code&gt;sign&lt;/code&gt; o a nuestro ayudante de &lt;code&gt;format-currency&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="5767c5cb905f0664fc9f95094c3e0f1c979ba7de" translate="yes" xml:space="preserve">
          <source>In this example, we use &lt;code&gt;bind&lt;/code&gt; to bind the setupEditor method to the context of the RichTextEditor component and to have the invocation of that method be safely handled and executed by the Ember run loop.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b8ca5686ff09717fb49801687a768d5feaf0fa7" translate="yes" xml:space="preserve">
          <source>In this example, we use Ember.run.bind to bind the setupEditor method to the context of the App.RichTextEditorComponent and to have the invocation of that method be safely handled and executed by the Ember run loop.</source>
          <target state="translated">En este ejemplo,utilizamos Ember.run.bind para vincular el método setupEditor al contexto del App.RichTextEditorComponent y para que la invocación de ese método sea manejada y ejecutada con seguridad por el bucle de ejecución Ember.</target>
        </trans-unit>
        <trans-unit id="9df69a02a508c73bcaebff148172387c68b680c7" translate="yes" xml:space="preserve">
          <source>In this example, when &lt;code&gt;handleSelected&lt;/code&gt; is invoked inside the &lt;code&gt;display-item&lt;/code&gt; component, it will &lt;strong&gt;not&lt;/strong&gt; have access to the component instance. In other words, it will have no &lt;code&gt;this&lt;/code&gt; context, so please make sure your functions are bound (via &lt;code&gt;@action&lt;/code&gt; or other means) before passing into &lt;code&gt;fn&lt;/code&gt;!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="020ca6936c01fad3ab78384589ded10445d38689" translate="yes" xml:space="preserve">
          <source>In this example, when the button is clicked &lt;code&gt;saveLike&lt;/code&gt; will be invoked, it will &lt;strong&gt;not&lt;/strong&gt; have access to the component instance. In other words, it will have no &lt;code&gt;this&lt;/code&gt; context, so please make sure your functions are bound (via &lt;code&gt;@action&lt;/code&gt; or other means) before passing into &lt;code&gt;on&lt;/code&gt;!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9c9f75521a4694639919f03ae33a4a4769ee609" translate="yes" xml:space="preserve">
          <source>In this example, whenever the user clicked anywhere inside the component, it will log a message to the console.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f871c6dadd71fe1de4d3a786cddada8b88f621f" translate="yes" xml:space="preserve">
          <source>In this form, the &lt;code&gt;if&lt;/code&gt; helper receives three arguments, the conditional value, the value to render when truthy, and the value to render when falsey.</source>
          <target state="translated">De esta forma, el asistente &lt;code&gt;if&lt;/code&gt; recibe tres argumentos, el valor condicional, el valor para representar cuando es verdadero y el valor para representar cuando es falso.</target>
        </trans-unit>
        <trans-unit id="85676c9a2156ae5ac01732fcc6113fa9b9311590" translate="yes" xml:space="preserve">
          <source>In this route we've &lt;a href=&quot;http://en.wikipedia.org/wiki/Separation_of_concerns&quot;&gt;separated our concerns&lt;/a&gt;: The action &lt;code&gt;displayAlert&lt;/code&gt; contains the code that is called when the action is received, and the private function &lt;code&gt;_displayAlert&lt;/code&gt; performs the work. While not necessarily obvious here because of the small size of the functions, separating code into smaller chunks (or &quot;concerns&quot;), allows it to be more readily isolated for testing, which in turn allows you to catch bugs more easily.</source>
          <target state="translated">En esta ruta, hemos &lt;a href=&quot;http://en.wikipedia.org/wiki/Separation_of_concerns&quot;&gt;separado nuestras preocupaciones&lt;/a&gt; : la acci&amp;oacute;n &lt;code&gt;displayAlert&lt;/code&gt; contiene el c&amp;oacute;digo que se llama cuando se recibe la acci&amp;oacute;n, y la funci&amp;oacute;n privada &lt;code&gt;_displayAlert&lt;/code&gt; realiza el trabajo. Si bien no es necesariamente obvio aqu&amp;iacute; debido al peque&amp;ntilde;o tama&amp;ntilde;o de las funciones, separar el c&amp;oacute;digo en trozos m&amp;aacute;s peque&amp;ntilde;os (o &quot;preocupaciones&quot;) permite aislarlo m&amp;aacute;s f&amp;aacute;cilmente para las pruebas, lo que a su vez le permite detectar errores m&amp;aacute;s f&amp;aacute;cilmente.</target>
        </trans-unit>
        <trans-unit id="c80e4b42bff243ceab0e73d39f5dfb01720a6cf2" translate="yes" xml:space="preserve">
          <source>In this route we've &lt;a href=&quot;https://en.wikipedia.org/wiki/Separation_of_concerns&quot;&gt;separated our concerns&lt;/a&gt;: The action &lt;code&gt;displayAlert&lt;/code&gt; contains the code that is called when the action is received, and the private function &lt;code&gt;_displayAlert&lt;/code&gt; performs the work. While not necessarily obvious here because of the small size of the functions, separating code into smaller chunks (or &quot;concerns&quot;) allows it to be more readily isolated for testing, which in turn allows you to catch bugs more easily.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b022151b9652026cd7c8427da425bc7366703cd1" translate="yes" xml:space="preserve">
          <source>In this scenario, because Ember does not have access to a global &lt;code&gt;document&lt;/code&gt; object in the Node.js environment, you must provide one explicitly. In practice, in the non-browser environment, the stand-in &lt;code&gt;document&lt;/code&gt; object only need to implement a limited subset of the full DOM API. The &lt;code&gt;SimpleDOM&lt;/code&gt; library is known to work.</source>
          <target state="translated">En este escenario, debido a que Ember no tiene acceso a un objeto de &lt;code&gt;document&lt;/code&gt; o global en el entorno Node.js, debe proporcionar uno expl&amp;iacute;citamente. En la pr&amp;aacute;ctica, en el entorno sin navegador, el objeto de &lt;code&gt;document&lt;/code&gt; o independiente solo necesita implementar un subconjunto limitado de la API DOM completa. Se &lt;code&gt;SimpleDOM&lt;/code&gt; biblioteca SimpleDOM funciona.</target>
        </trans-unit>
        <trans-unit id="57164e03cab54092ebb12b4e1cf1df57e2e7b071" translate="yes" xml:space="preserve">
          <source>In this scenario, because Ember does not have access to a global &lt;code&gt;document&lt;/code&gt; object in the Node.js environment, you must provide one explicitly. In practice, in the non-browser environment, the stand-in &lt;code&gt;document&lt;/code&gt; object only needs to implement a limited subset of the full DOM API. The &lt;code&gt;SimpleDOM&lt;/code&gt; library is known to work.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f65ee4cafac9946869503f8cbc68e6f462324d26" translate="yes" xml:space="preserve">
          <source>In this scenario, you can use the &lt;code&gt;paramsFor&lt;/code&gt; method to get the parameters of a parent route.</source>
          <target state="translated">En este escenario, puede utilizar el m&amp;eacute;todo &lt;code&gt;paramsFor&lt;/code&gt; para obtener los par&amp;aacute;metros de una ruta principal.</target>
        </trans-unit>
        <trans-unit id="e5af0f0cd0596abf60ade257c1529f5943cf96db" translate="yes" xml:space="preserve">
          <source>In this section, we will cover why testing is important, what tools can help you with testing, and how to run and debug your tests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72192f66aec1fb2570c763025790700612711804" translate="yes" xml:space="preserve">
          <source>In this section, you will learn about the configurations and libraries that affect an entire application's accessibility.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4dbeb08773a5cb1638ce3b022da9beaf53c12bc" translate="yes" xml:space="preserve">
          <source>In this setup, when we click the child component's button, it'll update the value in both the child component &lt;em&gt;and&lt;/em&gt; the parent component. This feature led to many problematic data patterns in classic components, where mutations would occur seemingly randomly. It was hard to figure out what was causing changes, and to debug them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81560c534e4433982f4c3df51a4462ac667ae44d" translate="yes" xml:space="preserve">
          <source>In this simple example, we don't have any display-specific properties or actions just yet. For now, our controller's &lt;code&gt;model&lt;/code&gt; property acts as a pass-through (or &quot;proxy&quot;) for the model properties. (Remember that a controller gets the model it represents from its route handler.)</source>
          <target state="translated">En este ejemplo simple, todav&amp;iacute;a no tenemos propiedades o acciones espec&amp;iacute;ficas de visualizaci&amp;oacute;n. Por ahora, la propiedad del &lt;code&gt;model&lt;/code&gt; o de nuestro controlador act&amp;uacute;a como un paso a trav&amp;eacute;s (o &quot;proxy&quot;) para las propiedades del modelo. (Recuerde que un controlador obtiene el modelo que representa de su controlador de ruta).</target>
        </trans-unit>
        <trans-unit id="b0756f46ca544553b008afacdbcc6b9b4cef1187" translate="yes" xml:space="preserve">
          <source>In this template, we loop through each object. On each iteration, the current object gets stored in a variable called &lt;code&gt;rental&lt;/code&gt;. From the rental variable in each step, we create a listing with information about the property.</source>
          <target state="translated">En esta plantilla, recorremos cada objeto. En cada iteraci&amp;oacute;n, el objeto actual se almacena en una variable llamada &lt;code&gt;rental&lt;/code&gt; . A partir de la variable de alquiler en cada paso, creamos un listado con informaci&amp;oacute;n sobre la propiedad.</target>
        </trans-unit>
        <trans-unit id="bb1245f29d80607633d75644d47932fff9d63a52" translate="yes" xml:space="preserve">
          <source>In those cases, where you can't or don't want to modify native prototypes, Ember.js allows you to completely disable the extensions described above.</source>
          <target state="translated">En aquellos casos en los que no se puede o no se quiere modificar los prototipos nativos,Ember.js permite desactivar completamente las extensiones descritas anteriormente.</target>
        </trans-unit>
        <trans-unit id="81efe7ebe18a05dd1b3c3254dfb1143943c026da" translate="yes" xml:space="preserve">
          <source>In those cases, you can still use &lt;code&gt;get&lt;/code&gt; and &lt;code&gt;set&lt;/code&gt; to read and update state from POJOs within your getters, and these will track automatically and trigger updates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fa3eef579971126af92229cfe86ba023e5c223f" translate="yes" xml:space="preserve">
          <source>In web development, query parameters are used within a URL as described above but can also be used in API requests that retrieve data. Ember treats these as &lt;em&gt;two&lt;/em&gt; different concepts. This section describes how routing query parameters are used in Ember. See &lt;a href=&quot;https://guides.emberjs.com/models/finding-records/#toc_querying-for-multiple-records&quot;&gt;finding records&lt;/a&gt; to see how query parameters are applied to API requests in Ember Data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd46774c381c00d09e29f00fa227bec7c7d940cc" translate="yes" xml:space="preserve">
          <source>In what order are jobs executed on the queues?</source>
          <target state="translated">¿En qué orden se ejecutan los trabajos en las colas?</target>
        </trans-unit>
        <trans-unit id="c7aceac0f5ac3bfa7079511870522e9827cd7fbe" translate="yes" xml:space="preserve">
          <source>In your browser, open &lt;a href=&quot;http://localhost:4200/scientists&quot;&gt;&lt;code&gt;http://localhost:4200/scientists&lt;/code&gt;&lt;/a&gt;. You should see the &lt;code&gt;&amp;lt;h2&amp;gt;&lt;/code&gt; we put in the &lt;code&gt;scientists.hbs&lt;/code&gt; template right below the &lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt; from our &lt;code&gt;application.hbs&lt;/code&gt; template.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9f2b38d81eeabfd2bc7ef6b0fd39d869c6e5d1b" translate="yes" xml:space="preserve">
          <source>In your browser, open &lt;a href=&quot;http://localhost:4200/scientists&quot;&gt;&lt;code&gt;http://localhost:4200/scientists&lt;/code&gt;&lt;/a&gt;. You should see the &lt;code&gt;&amp;lt;h2&amp;gt;&lt;/code&gt; you put in the &lt;code&gt;scientists.hbs&lt;/code&gt; template, right below the &lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt; from our &lt;code&gt;application.hbs&lt;/code&gt; template.</source>
          <target state="translated">En su navegador, abra &lt;a href=&quot;http://localhost:4200/scientists&quot;&gt; &lt;code&gt;http://localhost:4200/scientists&lt;/code&gt; &lt;/a&gt; . Deber&amp;iacute;a ver el &lt;code&gt;&amp;lt;h2&amp;gt;&lt;/code&gt; que puso en la plantilla &lt;code&gt;scientists.hbs&lt;/code&gt; , justo debajo del &lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt; de nuestra plantilla &lt;code&gt;application.hbs&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f14e7e7921e753c5ab85465a14bce8af05d18537" translate="yes" xml:space="preserve">
          <source>In your integration test, use the &lt;code&gt;wait&lt;/code&gt; function to wait until your debounce timer is up and then assert that the page is rendered appropriately.</source>
          <target state="translated">En su prueba de integraci&amp;oacute;n, utilice la &lt;code&gt;wait&lt;/code&gt; la funci&amp;oacute;n que esperar hasta que el temporizador de supresi&amp;oacute;n de rebotes es hacia arriba y luego afirmar que la p&amp;aacute;gina se representa de manera apropiada.</target>
        </trans-unit>
        <trans-unit id="4120c3ad66daf24de1f6245ad5c1b4020268016a" translate="yes" xml:space="preserve">
          <source>In your test, use the &lt;code&gt;settled&lt;/code&gt; helper to wait until your debounce timer is up and then assert that the page is rendered appropriately.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe0088eaa395b20ae6efa31c5287ba25b2ad7bf5" translate="yes" xml:space="preserve">
          <source>Including jQuery with integration APIs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="660c85ded4228d28ec3896fd97747ebf5f9f5e78" translate="yes" xml:space="preserve">
          <source>Including jQuery without integration APIs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f39e75ae8721f349f4f7a1d287a6800970f1027" translate="yes" xml:space="preserve">
          <source>Index Routes</source>
          <target state="translated">Rutas de índice</target>
        </trans-unit>
        <trans-unit id="5a6bdab0c6db458e90545a059bae821391f2bc1c" translate="yes" xml:space="preserve">
          <source>Inflector</source>
          <target state="translated">Inflector</target>
        </trans-unit>
        <trans-unit id="4f1335a34172db79b3bbf3af91a45dba45bda360" translate="yes" xml:space="preserve">
          <source>Inflector.Ember provides a mechanism for supplying inflection rules for your application. Ember includes a default set of inflection rules, and provides an API for providing additional rules.</source>
          <target state="translated">El ámbar proporciona un mecanismo para suministrar las reglas de inflexión para su aplicación.Ember incluye un conjunto predeterminado de reglas de inflexión y proporciona una API para proporcionar reglas adicionales.</target>
        </trans-unit>
        <trans-unit id="917f6528d25b634c59b7214df4542ce21c466dcf" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/adapters/build-url-mixin.js#L110&quot;&gt; DS.BuildURLMixin addon/-private/adapters/build-url-mixin.js:110 &lt;/a&gt;</source>
          <target state="translated">Heredado de &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/adapters/build-url-mixin.js#L110&quot;&gt;DS.BuildURLMixin addon / -private / adapters / build-url-mixin.js: 110&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8af38017a0e4b4a67cbca318a828a847945fae7e" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/adapters/build-url-mixin.js#L137&quot;&gt; DS.BuildURLMixin addon/-private/adapters/build-url-mixin.js:137 &lt;/a&gt;</source>
          <target state="translated">Heredado de &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/adapters/build-url-mixin.js#L137&quot;&gt;DS.BuildURLMixin addon / -private / adapters / build-url-mixin.js: 137&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="275e9366146489daa2ae55ad27e435a7b48c6668" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/adapters/build-url-mixin.js#L161&quot;&gt; DS.BuildURLMixin addon/-private/adapters/build-url-mixin.js:161 &lt;/a&gt;</source>
          <target state="translated">Heredado de &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/adapters/build-url-mixin.js#L161&quot;&gt;DS.BuildURLMixin addon / -private / adapters / build-url-mixin.js: 161&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="04449e818c6a9276d4c445011df9e6919966cd24" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/adapters/build-url-mixin.js#L191&quot;&gt; DS.BuildURLMixin addon/-private/adapters/build-url-mixin.js:191 &lt;/a&gt;</source>
          <target state="translated">Heredado de &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/adapters/build-url-mixin.js#L191&quot;&gt;DS.BuildURLMixin addon / -private / adapters / build-url-mixin.js: 191&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e15487780dc85d4846cae12b282078401bfeac3d" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/adapters/build-url-mixin.js#L216&quot;&gt; DS.BuildURLMixin addon/-private/adapters/build-url-mixin.js:216 &lt;/a&gt;</source>
          <target state="translated">Heredado de &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/adapters/build-url-mixin.js#L216&quot;&gt;DS.BuildURLMixin addon / -private / adapters / build-url-mixin.js: 216&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="aa690db7efe3617dad4adaf1817f8691090aeb70" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/adapters/build-url-mixin.js#L244&quot;&gt; DS.BuildURLMixin addon/-private/adapters/build-url-mixin.js:244 &lt;/a&gt;</source>
          <target state="translated">Heredado de &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/adapters/build-url-mixin.js#L244&quot;&gt;DS.BuildURLMixin addon / -private / adapters / build-url-mixin.js: 244&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9993875454e213980296f893b0ec7a48ecf6904b" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/adapters/build-url-mixin.js#L271&quot;&gt; DS.BuildURLMixin addon/-private/adapters/build-url-mixin.js:271 &lt;/a&gt;</source>
          <target state="translated">Heredado de &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/adapters/build-url-mixin.js#L271&quot;&gt;DS.BuildURLMixin addon / -private / adapters / build-url-mixin.js: 271&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4e9383ec47eab4378dbd7ae5330fcd80607917fc" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/adapters/build-url-mixin.js#L298&quot;&gt; DS.BuildURLMixin addon/-private/adapters/build-url-mixin.js:298 &lt;/a&gt;</source>
          <target state="translated">Heredado de &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/adapters/build-url-mixin.js#L298&quot;&gt;DS.BuildURLMixin addon / -private / adapters / build-url-mixin.js: 298&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c1ca27743f38a06ce9d0c7b136db63e78cd7aa52" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/adapters/build-url-mixin.js#L323&quot;&gt; DS.BuildURLMixin addon/-private/adapters/build-url-mixin.js:323 &lt;/a&gt;</source>
          <target state="translated">Heredado de &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/adapters/build-url-mixin.js#L323&quot;&gt;DS.BuildURLMixin addon / -private / adapters / build-url-mixin.js: 323&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="169f2df807678932156445038d7552c48a8248f7" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/adapters/build-url-mixin.js#L33&quot;&gt; DS.BuildURLMixin addon/-private/adapters/build-url-mixin.js:33 &lt;/a&gt;</source>
          <target state="translated">Heredado de &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/adapters/build-url-mixin.js#L33&quot;&gt;DS.BuildURLMixin addon / -private / adapters / build-url-mixin.js: 33&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cad300a565ca32992d0287cacd1a596863896094" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/adapters/build-url-mixin.js#L348&quot;&gt; DS.BuildURLMixin addon/-private/adapters/build-url-mixin.js:348 &lt;/a&gt;</source>
          <target state="translated">Heredado de &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/adapters/build-url-mixin.js#L348&quot;&gt;DS.BuildURLMixin addon / -private / adapters / build-url-mixin.js: 348&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="10725a12c6d5ede44b34d68abea25b184d3ffc91" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/adapters/build-url-mixin.js#L410&quot;&gt; DS.BuildURLMixin addon/-private/adapters/build-url-mixin.js:410 &lt;/a&gt;</source>
          <target state="translated">Heredado de &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/adapters/build-url-mixin.js#L410&quot;&gt;DS.BuildURLMixin addon / -private / adapters / build-url-mixin.js: 410&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4de67514525517a90c3e04b0ab9fa8d3fa65d119" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/system/record-arrays/record-array.js#L112&quot;&gt; DS.RecordArray addon/-private/system/record-arrays/record-array.js:112 &lt;/a&gt;</source>
          <target state="translated">Heredado de &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/system/record-arrays/record-array.js#L112&quot;&gt;DS.RecordArray addon / -private / system / record-arrays / record-array.js: 112&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8c7e7a55b41883ec0076fcb2affa419dcf6e5996" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/system/record-arrays/record-array.js#L180&quot;&gt; DS.RecordArray addon/-private/system/record-arrays/record-array.js:180 &lt;/a&gt;</source>
          <target state="translated">Heredado de &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/system/record-arrays/record-array.js#L180&quot;&gt;DS.RecordArray addon / -private / system / record-arrays / record-array.js: 180&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2f853db6114f0ea5984f7bae2b6757b0cf1cd7ca" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/system/record-arrays/record-array.js#L40&quot;&gt; DS.RecordArray addon/-private/system/record-arrays/record-array.js:40 &lt;/a&gt;</source>
          <target state="translated">Heredado de &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/system/record-arrays/record-array.js#L40&quot;&gt;DS.RecordArray addon / -private / system / record-arrays / record-array.js: 40&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b34b906633a1f734cc5778bd33b6997baad28984" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/system/record-arrays/record-array.js#L54&quot;&gt; DS.RecordArray addon/-private/system/record-arrays/record-array.js:54 &lt;/a&gt;</source>
          <target state="translated">Heredado de &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/system/record-arrays/record-array.js#L54&quot;&gt;DS.RecordArray addon / -private / system / record-arrays / record-array.js: 54&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="48be307f17a4fd3c8afac7232c8acaa693feac88" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/system/record-arrays/record-array.js#L86&quot;&gt; DS.RecordArray addon/-private/system/record-arrays/record-array.js:86 &lt;/a&gt;</source>
          <target state="translated">Heredado de &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/system/record-arrays/record-array.js#L86&quot;&gt;DS.RecordArray addon / -private / system / record-arrays / record-array.js: 86&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f9b9813b71a1a30355f0a8f15e79deee6d7c6c4b" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/adapter.js#L223&quot;&gt; DS.Adapter addon/adapter.js:223 &lt;/a&gt;</source>
          <target state="translated">Heredado de &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/adapter.js#L223&quot;&gt;DS.Adapter addon / adapter.js: 223&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="719207b473e2a6e9d32d7423d4bb057f8b60ff8d" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/adapter.js#L257&quot;&gt; DS.Adapter addon/adapter.js:257 &lt;/a&gt;</source>
          <target state="translated">Heredado de &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/adapter.js#L257&quot;&gt;DS.Adapter addon / adapter.js: 257&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ec839b1cb1ddad3b9dffe4c0d982c6d69cd1bf16" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/adapter.js#L417&quot;&gt; DS.Adapter addon/adapter.js:417 &lt;/a&gt;</source>
          <target state="translated">Heredado de &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/adapter.js#L417&quot;&gt;DS.Adapter addon / adapter.js: 417&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="32ee7137b0084532e7a7b79bbc7e0a3a05321ab1" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/adapter.js#L485&quot;&gt; DS.Adapter addon/adapter.js:485 &lt;/a&gt;</source>
          <target state="translated">Heredado de &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/adapter.js#L485&quot;&gt;DS.Adapter addon / adapter.js: 485&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ed7ca6251b9a91cddc15739a0f57bfa3e208ca4d" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/adapter.js#L535&quot;&gt; DS.Adapter addon/adapter.js:535 &lt;/a&gt;</source>
          <target state="translated">Heredado de &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/adapter.js#L535&quot;&gt;DS.Adapter addon / adapter.js: 535&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ecdfd3bf26d9c18e7005fcd4c61290c301d26ab7" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/adapter.js#L590&quot;&gt; DS.Adapter addon/adapter.js:590 &lt;/a&gt;</source>
          <target state="translated">Heredado de &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/adapter.js#L590&quot;&gt;DS.Adapter addon / adapter.js: 590&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="af262bc7cae5def7694aecd77a1b9ad33259a06b" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/adapter.js#L630&quot;&gt; DS.Adapter addon/adapter.js:630 &lt;/a&gt;</source>
          <target state="translated">Heredado de &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/adapter.js#L630&quot;&gt;DS.Adapter addon / adapter.js: 630&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cfdac2c425f716850e207364b9744042fc88c957" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/adapter.js#L65&quot;&gt; DS.Adapter addon/adapter.js:65 &lt;/a&gt;</source>
          <target state="translated">Heredado de &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/adapter.js#L65&quot;&gt;DS.Adapter addon / adapter.js: 65&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="11ff2f1b4c28926f8d7a8ea0bffbebcce237b251" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/adapters/rest.js#L1007&quot;&gt; DS.RESTAdapter addon/adapters/rest.js:1007 &lt;/a&gt;</source>
          <target state="translated">Heredado de &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/adapters/rest.js#L1007&quot;&gt;DS.RESTAdapter addon / adapters / rest.js: 1007&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="23a5de1b7eed4883f02cf4f23da9302f08fbe98f" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/adapters/rest.js#L1243&quot;&gt; DS.RESTAdapter addon/adapters/rest.js:1243 &lt;/a&gt;</source>
          <target state="translated">Heredado de &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/adapters/rest.js#L1243&quot;&gt;DS.RESTAdapter addon / adapters / rest.js: 1243&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="01d97869873f6d54c3c60da5743df12bec42402b" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/adapters/rest.js#L1301&quot;&gt; DS.RESTAdapter addon/adapters/rest.js:1301 &lt;/a&gt;</source>
          <target state="translated">Heredado de &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/adapters/rest.js#L1301&quot;&gt;DS.RESTAdapter addon / adapters / rest.js: 1301&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="44121039bcb7900811192e43b5c06279774a5c92" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/adapters/rest.js#L1321&quot;&gt; DS.RESTAdapter addon/adapters/rest.js:1321 &lt;/a&gt;</source>
          <target state="translated">Heredado de &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/adapters/rest.js#L1321&quot;&gt;DS.RESTAdapter addon / adapters / rest.js: 1321&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4cbcefe1ca9c089e18f378d97dde846a51c19f57" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/adapters/rest.js#L1358&quot;&gt; DS.RESTAdapter addon/adapters/rest.js:1358 &lt;/a&gt;</source>
          <target state="translated">Heredado de &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/adapters/rest.js#L1358&quot;&gt;DS.RESTAdapter addon / adapters / rest.js: 1358&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8556b90bb6b31e8386159cee01252f8f6889f7d4" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/adapters/rest.js#L289&quot;&gt; DS.RESTAdapter addon/adapters/rest.js:289 &lt;/a&gt;</source>
          <target state="translated">Heredado de &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/adapters/rest.js#L289&quot;&gt;DS.RESTAdapter addon / adapters / rest.js: 289&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3a67e9c1db45c3bf8f363c33d78e4f6ac0f716a1" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/adapters/rest.js#L395&quot;&gt; DS.RESTAdapter addon/adapters/rest.js:395 &lt;/a&gt;</source>
          <target state="translated">Heredado de &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/adapters/rest.js#L395&quot;&gt;DS.RESTAdapter addon / adapters / rest.js: 395&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2357c1b1d1d2cac5a37c391ed79f7d82a004982c" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/adapters/rest.js#L413&quot;&gt; DS.RESTAdapter addon/adapters/rest.js:413 &lt;/a&gt;</source>
          <target state="translated">Heredado de &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/adapters/rest.js#L413&quot;&gt;DS.RESTAdapter addon / adapters / rest.js: 413&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cd04b16f1a38322b973a4673f8ad7d2ae3578f4e" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/adapters/rest.js#L430&quot;&gt; DS.RESTAdapter addon/adapters/rest.js:430 &lt;/a&gt;</source>
          <target state="translated">Heredado de &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/adapters/rest.js#L430&quot;&gt;DS.RESTAdapter addon / adapters / rest.js: 430&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8a41eaa1e24a2e484101ca0160b5c88459ab7bda" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/adapters/rest.js#L452&quot;&gt; DS.RESTAdapter addon/adapters/rest.js:452 &lt;/a&gt;</source>
          <target state="translated">Heredado de &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/adapters/rest.js#L452&quot;&gt;DS.RESTAdapter addon / adapters / rest.js: 452&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5f336cc122fae293e3aaaa55af3dd3cdec0d060f" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/adapters/rest.js#L485&quot;&gt; DS.RESTAdapter addon/adapters/rest.js:485 &lt;/a&gt;</source>
          <target state="translated">Heredado de &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/adapters/rest.js#L485&quot;&gt;DS.RESTAdapter addon / adapters / rest.js: 485&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="99c8e92083a384eed18d2da63db34979b2c1bc72" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/adapters/rest.js#L521&quot;&gt; DS.RESTAdapter addon/adapters/rest.js:521 &lt;/a&gt;</source>
          <target state="translated">Heredado de &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/adapters/rest.js#L521&quot;&gt;DS.RESTAdapter addon / adapters / rest.js: 521&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ebc176d8991bff939d7e44e3b94c358e89278459" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/adapters/rest.js#L557&quot;&gt; DS.RESTAdapter addon/adapters/rest.js:557 &lt;/a&gt;</source>
          <target state="translated">Heredado de &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/adapters/rest.js#L557&quot;&gt;DS.RESTAdapter addon / adapters / rest.js: 557&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="24724d184c7ebfcb2014503ed3dcdfff40a1850f" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/adapters/rest.js#L594&quot;&gt; DS.RESTAdapter addon/adapters/rest.js:594 &lt;/a&gt;</source>
          <target state="translated">Heredado de &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/adapters/rest.js#L594&quot;&gt;DS.RESTAdapter addon / adapters / rest.js: 594&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a945ee640fe756dd1205c0bf6a779f039f02012a" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/adapters/rest.js#L641&quot;&gt; DS.RESTAdapter addon/adapters/rest.js:641 &lt;/a&gt;</source>
          <target state="translated">Heredado de &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/adapters/rest.js#L641&quot;&gt;DS.RESTAdapter addon / adapters / rest.js: 641&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d22921a58342f30c31e09bc57b853f91ff073a14" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/adapters/rest.js#L695&quot;&gt; DS.RESTAdapter addon/adapters/rest.js:695 &lt;/a&gt;</source>
          <target state="translated">Heredado de &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/adapters/rest.js#L695&quot;&gt;DS.RESTAdapter addon / adapters / rest.js: 695&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="46c0d2cc03174e1f1cf5b21026fac823bbf76da2" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/adapters/rest.js#L747&quot;&gt; DS.RESTAdapter addon/adapters/rest.js:747 &lt;/a&gt;</source>
          <target state="translated">Heredado de &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/adapters/rest.js#L747&quot;&gt;DS.RESTAdapter addon / adapters / rest.js: 747&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b8523283ef449bd6f9165f76f188369ed0698962" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/adapters/rest.js#L782&quot;&gt; DS.RESTAdapter addon/adapters/rest.js:782 &lt;/a&gt;</source>
          <target state="translated">Heredado de &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/adapters/rest.js#L782&quot;&gt;DS.RESTAdapter addon / adapters / rest.js: 782&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="34c21fa905a0cde4e22d95be7910eb2ea45fb4a1" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/adapters/rest.js#L819&quot;&gt; DS.RESTAdapter addon/adapters/rest.js:819 &lt;/a&gt;</source>
          <target state="translated">Heredado de &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/adapters/rest.js#L819&quot;&gt;DS.RESTAdapter addon / adapters / rest.js: 819&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="70f6c823e8a21e471bbf58d212b5db1a436b571d" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/adapters/rest.js#L869&quot;&gt; DS.RESTAdapter addon/adapters/rest.js:869 &lt;/a&gt;</source>
          <target state="translated">Heredado de &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/adapters/rest.js#L869&quot;&gt;DS.RESTAdapter addon / adapters / rest.js: 869&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a678e0e08061c6a8842ad2fba7b9aafc3e1bcebf" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/adapters/rest.js#L933&quot;&gt; DS.RESTAdapter addon/adapters/rest.js:933 &lt;/a&gt;</source>
          <target state="translated">Heredado de &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/adapters/rest.js#L933&quot;&gt;DS.RESTAdapter addon / adapters / rest.js: 933&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="567641d73878b8e3185539ba68d218d19814ed3a" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/adapters/rest.js#L992&quot;&gt; DS.RESTAdapter addon/adapters/rest.js:992 &lt;/a&gt;</source>
          <target state="translated">Heredado de &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/adapters/rest.js#L992&quot;&gt;DS.RESTAdapter addon / adapters / rest.js: 992&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7b8a7d52de2ae7100e3ee906b9e9cc54349be2a1" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/serializer.js#L129&quot;&gt; DS.Serializer addon/serializer.js:129 &lt;/a&gt;</source>
          <target state="translated">Heredado de &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/serializer.js#L129&quot;&gt;DS.Serializer addon / serializer.js: 129&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2f24d0861763921df7a604a19c922db4e2055b76" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/serializer.js#L29&quot;&gt; DS.Serializer addon/serializer.js:29 &lt;/a&gt;</source>
          <target state="translated">Heredado de &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/serializer.js#L29&quot;&gt;DS.Serializer addon / serializer.js: 29&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cf2b2961b775d7a9873085a1a46e9ae20acb6d44" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/serializer.js#L87&quot;&gt; DS.Serializer addon/serializer.js:87 &lt;/a&gt;</source>
          <target state="translated">Heredado de &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/serializer.js#L87&quot;&gt;DS.Serializer addon / serializer.js: 87&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="08a97c7407bcd5972ff5aa5497035f65e4109fcf" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/serializers/json.js#L1059&quot;&gt; DS.JSONSerializer addon/serializers/json.js:1059 &lt;/a&gt;</source>
          <target state="translated">Heredado de &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/serializers/json.js#L1059&quot;&gt;DS.JSONSerializer addon / serializers / json.js: 1059&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7e294d569041d7846b2343ea8b98c0a3db063ef3" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/serializers/json.js#L109&quot;&gt; DS.JSONSerializer addon/serializers/json.js:109 &lt;/a&gt;</source>
          <target state="translated">Heredado de &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/serializers/json.js#L109&quot;&gt;DS.JSONSerializer addon / serializers / json.js: 109&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c308cb3dd8618862f397b175f6700b070ceca2d8" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/serializers/json.js#L1090&quot;&gt; DS.JSONSerializer addon/serializers/json.js:1090 &lt;/a&gt;</source>
          <target state="translated">Heredado de &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/serializers/json.js#L1090&quot;&gt;DS.JSONSerializer addon / serializers / json.js: 1090&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="82d106775aebc802dcf3f6529d0ea35e19e20b0a" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/serializers/json.js#L1137&quot;&gt; DS.JSONSerializer addon/serializers/json.js:1137 &lt;/a&gt;</source>
          <target state="translated">Heredado de &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/serializers/json.js#L1137&quot;&gt;DS.JSONSerializer addon / serializers / json.js: 1137&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="671c7920dcf2b6a8a8f5a8a40f5f7764df4a8482" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/serializers/json.js#L1189&quot;&gt; DS.JSONSerializer addon/serializers/json.js:1189 &lt;/a&gt;</source>
          <target state="translated">Heredado de &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/serializers/json.js#L1189&quot;&gt;DS.JSONSerializer addon / serializers / json.js: 1189&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8a9128336454243724d412f2aa85c2bf341d938a" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/serializers/json.js#L1238&quot;&gt; DS.JSONSerializer addon/serializers/json.js:1238 &lt;/a&gt;</source>
          <target state="translated">Heredado de &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/serializers/json.js#L1238&quot;&gt;DS.JSONSerializer addon / serializers / json.js: 1238&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5dda906cc8b5218b35970e394a749fdcdd16a0d4" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/serializers/json.js#L1272&quot;&gt; DS.JSONSerializer addon/serializers/json.js:1272 &lt;/a&gt;</source>
          <target state="translated">Heredado de &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/serializers/json.js#L1272&quot;&gt;DS.JSONSerializer addon / serializers / json.js: 1272&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f30f95b17810d21731966ade92cf742564e4e1e6" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/serializers/json.js#L1306&quot;&gt; DS.JSONSerializer addon/serializers/json.js:1306 &lt;/a&gt;</source>
          <target state="translated">Heredado de &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/serializers/json.js#L1306&quot;&gt;DS.JSONSerializer addon / serializers / json.js: 1306&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="994a8f911ac1650e158fa4325f66f053e2bbf31f" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/serializers/json.js#L1417&quot;&gt; DS.JSONSerializer addon/serializers/json.js:1417 &lt;/a&gt;</source>
          <target state="translated">Heredado de &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/serializers/json.js#L1417&quot;&gt;DS.JSONSerializer addon / serializers / json.js: 1417&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5f65ba8ac7231be9fde46c0fea17cadfad33775c" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/serializers/json.js#L1442&quot;&gt; DS.JSONSerializer addon/serializers/json.js:1442 &lt;/a&gt;</source>
          <target state="translated">Heredado de &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/serializers/json.js#L1442&quot;&gt;DS.JSONSerializer addon / serializers / json.js: 1442&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="32fc8d932a64b77a154c2a26ec7cf29a3e5d5d51" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/serializers/json.js#L1469&quot;&gt; DS.JSONSerializer addon/serializers/json.js:1469 &lt;/a&gt;</source>
          <target state="translated">Heredado de &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/serializers/json.js#L1469&quot;&gt;DS.JSONSerializer addon / serializers / json.js: 1469&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c67dd9a07916dad70e6c054c22d7f2a99c8fa916" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/serializers/json.js#L1526&quot;&gt; DS.JSONSerializer addon/serializers/json.js:1526 &lt;/a&gt;</source>
          <target state="translated">Heredado de &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/serializers/json.js#L1526&quot;&gt;DS.JSONSerializer addon / serializers / json.js: 1526&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1363c2175a352732672ab04d6d784a9711765582" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/serializers/json.js#L200&quot;&gt; DS.JSONSerializer addon/serializers/json.js:200 &lt;/a&gt;</source>
          <target state="translated">Heredado de &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/serializers/json.js#L200&quot;&gt;DS.JSONSerializer addon / serializers / json.js: 200&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4b79ffd6186366f6029650dedc16e747a20be195" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/serializers/json.js#L260&quot;&gt; DS.JSONSerializer addon/serializers/json.js:260 &lt;/a&gt;</source>
          <target state="translated">Heredado de &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/serializers/json.js#L260&quot;&gt;DS.JSONSerializer addon / serializers / json.js: 260&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="beb5629b8ad9699317bf95b5454fa6fee8ec8c45" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/serializers/json.js#L274&quot;&gt; DS.JSONSerializer addon/serializers/json.js:274 &lt;/a&gt;</source>
          <target state="translated">Heredado de &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/serializers/json.js#L274&quot;&gt;DS.JSONSerializer addon / serializers / json.js: 274&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="854a42700ba3f950adcdf80c239498e6afea70c7" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/serializers/json.js#L288&quot;&gt; DS.JSONSerializer addon/serializers/json.js:288 &lt;/a&gt;</source>
          <target state="translated">Heredado de &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/serializers/json.js#L288&quot;&gt;DS.JSONSerializer addon / serializers / json.js: 288&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1e277be7f21f4adc99f8b37379575bacd53edd1b" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/serializers/json.js#L302&quot;&gt; DS.JSONSerializer addon/serializers/json.js:302 &lt;/a&gt;</source>
          <target state="translated">Heredado de &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/serializers/json.js#L302&quot;&gt;DS.JSONSerializer addon / serializers / json.js: 302&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2bca61e2974353b8aeee2ec63ed635478bb5ff31" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/serializers/json.js#L316&quot;&gt; DS.JSONSerializer addon/serializers/json.js:316 &lt;/a&gt;</source>
          <target state="translated">Heredado de &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/serializers/json.js#L316&quot;&gt;DS.JSONSerializer addon / serializers / json.js: 316&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8d24a45fd2b2ccf2fbc331f69957c1386ba38806" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/serializers/json.js#L330&quot;&gt; DS.JSONSerializer addon/serializers/json.js:330 &lt;/a&gt;</source>
          <target state="translated">Heredado de &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/serializers/json.js#L330&quot;&gt;DS.JSONSerializer addon / serializers / json.js: 330&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b67a80706efe019bba498f181b3d08725dddd205" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/serializers/json.js#L344&quot;&gt; DS.JSONSerializer addon/serializers/json.js:344 &lt;/a&gt;</source>
          <target state="translated">Heredado de &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/serializers/json.js#L344&quot;&gt;DS.JSONSerializer addon / serializers / json.js: 344&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="70bd930c372be35c32638663d32662fdb5abf4b1" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/serializers/json.js#L358&quot;&gt; DS.JSONSerializer addon/serializers/json.js:358 &lt;/a&gt;</source>
          <target state="translated">Heredado de &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/serializers/json.js#L358&quot;&gt;DS.JSONSerializer addon / serializers / json.js: 358&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="da7c8bc671c52ee46062d769938729ce48901003" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/serializers/json.js#L372&quot;&gt; DS.JSONSerializer addon/serializers/json.js:372 &lt;/a&gt;</source>
          <target state="translated">Heredado de &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/serializers/json.js#L372&quot;&gt;DS.JSONSerializer addon / serializers / json.js: 372&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="52fcc7cb798757fbaa3b3436fc4dea31521fa732" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/serializers/json.js#L386&quot;&gt; DS.JSONSerializer addon/serializers/json.js:386 &lt;/a&gt;</source>
          <target state="translated">Heredado de &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/serializers/json.js#L386&quot;&gt;DS.JSONSerializer addon / serializers / json.js: 386&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="02bb87432f3add4d0c1dd5ecee7830879e873441" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/serializers/json.js#L400&quot;&gt; DS.JSONSerializer addon/serializers/json.js:400 &lt;/a&gt;</source>
          <target state="translated">Heredado de &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/serializers/json.js#L400&quot;&gt;DS.JSONSerializer addon / serializers / json.js: 400&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a3a9eb8111cbd96b4d6b60ddab9a2fe90142bfc1" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/serializers/json.js#L414&quot;&gt; DS.JSONSerializer addon/serializers/json.js:414 &lt;/a&gt;</source>
          <target state="translated">Heredado de &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/serializers/json.js#L414&quot;&gt;DS.JSONSerializer addon / serializers / json.js: 414&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1fabe01ef0ecfd7f571faf8dffe2afb39f51ad0d" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/serializers/json.js#L428&quot;&gt; DS.JSONSerializer addon/serializers/json.js:428 &lt;/a&gt;</source>
          <target state="translated">Heredado de &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/serializers/json.js#L428&quot;&gt;DS.JSONSerializer addon / serializers / json.js: 428&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="16c881a0e367933bbb0f37284b7a53fae612bb65" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/serializers/json.js#L489&quot;&gt; DS.JSONSerializer addon/serializers/json.js:489 &lt;/a&gt;</source>
          <target state="translated">Heredado de &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/serializers/json.js#L489&quot;&gt;DS.JSONSerializer addon / serializers / json.js: 489&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8d3c9438bb26adbb134d9122799f213e3b85f0c6" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/serializers/json.js#L550&quot;&gt; DS.JSONSerializer addon/serializers/json.js:550 &lt;/a&gt;</source>
          <target state="translated">Heredado de &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/serializers/json.js#L550&quot;&gt;DS.JSONSerializer addon / serializers / json.js: 550&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ed7b8c739f447ebcc53994d8bac495c82640fd94" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/serializers/json.js#L564&quot;&gt; DS.JSONSerializer addon/serializers/json.js:564 &lt;/a&gt;</source>
          <target state="translated">Heredado de &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/serializers/json.js#L564&quot;&gt;DS.JSONSerializer addon / serializers / json.js: 564&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d91ddf0a41f7ff51a8173f2ec002d43c9cbda3e6" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/serializers/json.js#L588&quot;&gt; DS.JSONSerializer addon/serializers/json.js:588 &lt;/a&gt;</source>
          <target state="translated">Heredado de &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/serializers/json.js#L588&quot;&gt;DS.JSONSerializer addon / serializers / json.js: 588&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b914cfcf2857ee1b98c23f8089b9096f7b84327b" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/serializers/json.js#L637&quot;&gt; DS.JSONSerializer addon/serializers/json.js:637 &lt;/a&gt;</source>
          <target state="translated">Heredado de &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/serializers/json.js#L637&quot;&gt;DS.JSONSerializer addon / serializers / json.js: 637&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="99789ff3c49a3cbfb398977aeea4827794e1d77b" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/serializers/json.js#L660&quot;&gt; DS.JSONSerializer addon/serializers/json.js:660 &lt;/a&gt;</source>
          <target state="translated">Heredado de &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/serializers/json.js#L660&quot;&gt;DS.JSONSerializer addon / serializers / json.js: 660&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9a381f67f429e62a0fe7875e1149da5be1dde145" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/serializers/json.js#L838&quot;&gt; DS.JSONSerializer addon/serializers/json.js:838 &lt;/a&gt;</source>
          <target state="translated">Heredado de &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/serializers/json.js#L838&quot;&gt;DS.JSONSerializer addon / serializers / json.js: 838&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e2a8be874b6f2e2389ca575fd139e70767bb9b10" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/serializers/json.js#L85&quot;&gt; DS.JSONSerializer addon/serializers/json.js:85 &lt;/a&gt;</source>
          <target state="translated">Heredado de &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/serializers/json.js#L85&quot;&gt;DS.JSONSerializer addon / serializers / json.js: 85&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e8468b7f9d631ecd5eca870b9d9234c37a7f5c50" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/serializers/json.js#L879&quot;&gt; DS.JSONSerializer addon/serializers/json.js:879 &lt;/a&gt;</source>
          <target state="translated">Heredado de &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/serializers/json.js#L879&quot;&gt;DS.JSONSerializer addon / serializers / json.js: 879&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4ecf8dce048c5e5e235dd500e4d0a884b9a1254f" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/transforms/transform.js#L71&quot;&gt; DS.Transform addon/transforms/transform.js:71 &lt;/a&gt;</source>
          <target state="translated">Heredado de &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/transforms/transform.js#L71&quot;&gt;DS.Transform addon / transforms / transform.js: 71&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6d8d8eda80ddc83b2d1eb4e5ed5c54addf79ae94" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/transforms/transform.js#L90&quot;&gt; DS.Transform addon/transforms/transform.js:90 &lt;/a&gt;</source>
          <target state="translated">Heredado de &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/transforms/transform.js#L90&quot;&gt;DS.Transform addon / transforms / transform.js: 90&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e4fbd02a45a4237944cb477c19dd50d1dfc39419" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v3.25.0/packages/-ember-data/../adapter/addon/-private/build-url-mixin.js#L120&quot;&gt; BuildURLMixin ../adapter/addon/-private/build-url-mixin.js:120 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56ad722557faca23cd71c64066c575fb3a9decb8" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v3.25.0/packages/-ember-data/../adapter/addon/-private/build-url-mixin.js#L147&quot;&gt; BuildURLMixin ../adapter/addon/-private/build-url-mixin.js:147 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="224998a124d4889bdcab7b13929a9e9673d94c63" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v3.25.0/packages/-ember-data/../adapter/addon/-private/build-url-mixin.js#L172&quot;&gt; BuildURLMixin ../adapter/addon/-private/build-url-mixin.js:172 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fab53c1fe2755688ba3e324cea657f317639ce5a" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v3.25.0/packages/-ember-data/../adapter/addon/-private/build-url-mixin.js#L202&quot;&gt; BuildURLMixin ../adapter/addon/-private/build-url-mixin.js:202 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="381fa73758ac8b5770d307bc09d0a516ed5fb73c" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v3.25.0/packages/-ember-data/../adapter/addon/-private/build-url-mixin.js#L227&quot;&gt; BuildURLMixin ../adapter/addon/-private/build-url-mixin.js:227 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b65b80255c2fb600000c48b52f1dca66a1be9bd7" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v3.25.0/packages/-ember-data/../adapter/addon/-private/build-url-mixin.js#L255&quot;&gt; BuildURLMixin ../adapter/addon/-private/build-url-mixin.js:255 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d41d8dbe6bb44253b8bc10b9118ddc723b676782" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v3.25.0/packages/-ember-data/../adapter/addon/-private/build-url-mixin.js#L282&quot;&gt; BuildURLMixin ../adapter/addon/-private/build-url-mixin.js:282 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81cd5560670800a3700994b10f3c905fca594729" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v3.25.0/packages/-ember-data/../adapter/addon/-private/build-url-mixin.js#L309&quot;&gt; BuildURLMixin ../adapter/addon/-private/build-url-mixin.js:309 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13510905b336ddb9bebf8d08d3e22e2f33951d64" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v3.25.0/packages/-ember-data/../adapter/addon/-private/build-url-mixin.js#L334&quot;&gt; BuildURLMixin ../adapter/addon/-private/build-url-mixin.js:334 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf01da84c1fb6d201dec61acf4da2283e2a2c60b" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v3.25.0/packages/-ember-data/../adapter/addon/-private/build-url-mixin.js#L359&quot;&gt; BuildURLMixin ../adapter/addon/-private/build-url-mixin.js:359 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30151f7478c5746102a6c828174a931636b644da" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v3.25.0/packages/-ember-data/../adapter/addon/-private/build-url-mixin.js#L37&quot;&gt; BuildURLMixin ../adapter/addon/-private/build-url-mixin.js:37 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f86c63112d49bb9ac622b060cee169bec328398" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v3.25.0/packages/-ember-data/../adapter/addon/-private/build-url-mixin.js#L425&quot;&gt; BuildURLMixin ../adapter/addon/-private/build-url-mixin.js:425 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21dae4549772b83cf05e642d7b1d079b4298a484" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v3.25.0/packages/-ember-data/../adapter/addon/index.js#L218&quot;&gt; Adapter ../adapter/addon/index.js:218 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72d61868c1a84731917b3db39fa0a079e8484305" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v3.25.0/packages/-ember-data/../adapter/addon/index.js#L251&quot;&gt; Adapter ../adapter/addon/index.js:251 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40ed8d3b17404c00724e1ecb9199db75df468f28" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v3.25.0/packages/-ember-data/../adapter/addon/index.js#L414&quot;&gt; Adapter ../adapter/addon/index.js:414 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d313773824f4a81964b7fb147a0621e401cd24a" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v3.25.0/packages/-ember-data/../adapter/addon/index.js#L482&quot;&gt; Adapter ../adapter/addon/index.js:482 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="209f8c63517f9e7e985c79d70a9e54de78105039" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v3.25.0/packages/-ember-data/../adapter/addon/index.js#L532&quot;&gt; Adapter ../adapter/addon/index.js:532 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83e174aad9e79c5069cd7dbf48506eb955ff894e" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v3.25.0/packages/-ember-data/../adapter/addon/index.js#L587&quot;&gt; Adapter ../adapter/addon/index.js:587 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="304a758ce14aca7c82b1d4901dd4dc1319c07814" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v3.25.0/packages/-ember-data/../adapter/addon/index.js#L623&quot;&gt; Adapter ../adapter/addon/index.js:623 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="306a06294b9ccbce645b5bded0645effcd58916d" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v3.25.0/packages/-ember-data/../adapter/addon/rest.js#L1202&quot;&gt; RESTAdapter ../adapter/addon/rest.js:1202 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf09fb14bbb257c36a2e147ebf00f4912f196384" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v3.25.0/packages/-ember-data/../adapter/addon/rest.js#L315&quot;&gt; RESTAdapter ../adapter/addon/rest.js:315 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59a230e4939fbab12bab61185e3fe4c29f45d1a9" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v3.25.0/packages/-ember-data/../adapter/addon/rest.js#L321&quot;&gt; RESTAdapter ../adapter/addon/rest.js:321 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f551a92b6e73bbf14dc795e9ab94920b263527b" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v3.25.0/packages/-ember-data/../adapter/addon/rest.js#L427&quot;&gt; RESTAdapter ../adapter/addon/rest.js:427 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6a6b30cec0243756e1063bf8fa215d2df995428" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v3.25.0/packages/-ember-data/../adapter/addon/rest.js#L445&quot;&gt; RESTAdapter ../adapter/addon/rest.js:445 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c124bd01367852936f1c2cf4a4927835f1c625cf" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v3.25.0/packages/-ember-data/../adapter/addon/rest.js#L462&quot;&gt; RESTAdapter ../adapter/addon/rest.js:462 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="923e74002b8d6e7f55fa65d4ade721ef57f90fcf" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v3.25.0/packages/-ember-data/../adapter/addon/rest.js#L487&quot;&gt; RESTAdapter ../adapter/addon/rest.js:487 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73f2abb1cc3b2de10dccb29d97547251c1a034b4" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v3.25.0/packages/-ember-data/../adapter/addon/rest.js#L511&quot;&gt; RESTAdapter ../adapter/addon/rest.js:511 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a15f937b12ac6fb312bcfed46960aea117782016" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v3.25.0/packages/-ember-data/../adapter/addon/rest.js#L536&quot;&gt; RESTAdapter ../adapter/addon/rest.js:536 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e034fa3dcfc8a2ac839e5db3e8b51ade8192ec26" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v3.25.0/packages/-ember-data/../adapter/addon/rest.js#L563&quot;&gt; RESTAdapter ../adapter/addon/rest.js:563 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4873e373ff024a51d3d9eab80fea781f7d4f6895" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v3.25.0/packages/-ember-data/../adapter/addon/rest.js#L591&quot;&gt; RESTAdapter ../adapter/addon/rest.js:591 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5396b16071f8d2649e732ad95de8731bd448e4b0" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v3.25.0/packages/-ember-data/../adapter/addon/rest.js#L629&quot;&gt; RESTAdapter ../adapter/addon/rest.js:629 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80bff4ce1582535f7c07fa0be16c4f50f7772f09" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v3.25.0/packages/-ember-data/../adapter/addon/rest.js#L674&quot;&gt; RESTAdapter ../adapter/addon/rest.js:674 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4863c9c48451f3c2904b2e30fa868d030cb9a008" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v3.25.0/packages/-ember-data/../adapter/addon/rest.js#L718&quot;&gt; RESTAdapter ../adapter/addon/rest.js:718 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64dec43d25a20d946786fa6c7a4d89bbb7c25006" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v3.25.0/packages/-ember-data/../adapter/addon/rest.js#L742&quot;&gt; RESTAdapter ../adapter/addon/rest.js:742 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df320d57f88bc05dacbe3b92b3b2e44d0d13146e" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v3.25.0/packages/-ember-data/../adapter/addon/rest.js#L767&quot;&gt; RESTAdapter ../adapter/addon/rest.js:767 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe1a2b98bab12797b45061b3c26c6a8665d76afc" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v3.25.0/packages/-ember-data/../adapter/addon/rest.js#L808&quot;&gt; RESTAdapter ../adapter/addon/rest.js:808 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d73050d4bc6dfc1d013932e0d5136e837bbd9009" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v3.25.0/packages/-ember-data/../adapter/addon/rest.js#L876&quot;&gt; RESTAdapter ../adapter/addon/rest.js:876 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd8c722d3414a9218644fd087dce60b3cce25677" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v3.25.0/packages/-ember-data/../adapter/addon/rest.js#L933&quot;&gt; RESTAdapter ../adapter/addon/rest.js:933 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec2a81e7cccc8a5a7b6ac99e1e70db35a30de5ac" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v3.25.0/packages/-ember-data/../adapter/addon/rest.js#L948&quot;&gt; RESTAdapter ../adapter/addon/rest.js:948 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b9b1d66213262502f8f38a24da65448542dfc6c" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v3.25.0/packages/-ember-data/../serializer/addon/-private/transforms/transform.js#L100&quot;&gt; Transform ../serializer/addon/-private/transforms/transform.js:100 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b7cbd7f3815140f465ef61b39c1b66d3529665b" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v3.25.0/packages/-ember-data/../serializer/addon/-private/transforms/transform.js#L79&quot;&gt; Transform ../serializer/addon/-private/transforms/transform.js:79 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="600460c6f8c3e52242bc1ac60ad2b309165c128f" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v3.25.0/packages/-ember-data/../serializer/addon/index.js#L127&quot;&gt; Serializer ../serializer/addon/index.js:127 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed4019b832ad38139aada9253185d5f7f4d972ae" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v3.25.0/packages/-ember-data/../serializer/addon/index.js#L27&quot;&gt; Serializer ../serializer/addon/index.js:27 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47887d5142b7d5275ac27351f1b7b1122488e7cd" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v3.25.0/packages/-ember-data/../serializer/addon/index.js#L85&quot;&gt; Serializer ../serializer/addon/index.js:85 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56b37fcb11a0392e2ed51d5b404133968d1f4184" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v3.25.0/packages/-ember-data/../serializer/addon/json.js#L1058&quot;&gt; JSONSerializer ../serializer/addon/json.js:1058 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e2be1836915d4d5184733df86a8002b178e2c90" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v3.25.0/packages/-ember-data/../serializer/addon/json.js#L107&quot;&gt; JSONSerializer ../serializer/addon/json.js:107 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fd0920ce12940db1287800eb033b8393389f256" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v3.25.0/packages/-ember-data/../serializer/addon/json.js#L1090&quot;&gt; JSONSerializer ../serializer/addon/json.js:1090 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f98cef9c6b474c086f1e78e8a4007a17eab97ea" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v3.25.0/packages/-ember-data/../serializer/addon/json.js#L1136&quot;&gt; JSONSerializer ../serializer/addon/json.js:1136 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69de6b556e4842ed109f217cc40108e1bae7cfae" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v3.25.0/packages/-ember-data/../serializer/addon/json.js#L1189&quot;&gt; JSONSerializer ../serializer/addon/json.js:1189 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29f49e83687657d4db0dc4240d00a8bf41b94096" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v3.25.0/packages/-ember-data/../serializer/addon/json.js#L1234&quot;&gt; JSONSerializer ../serializer/addon/json.js:1234 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5db91397d8716d7d6650d14d01c6679b1090bffb" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v3.25.0/packages/-ember-data/../serializer/addon/json.js#L1269&quot;&gt; JSONSerializer ../serializer/addon/json.js:1269 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f00b871324c927561b9fe63e90402e7d212e9120" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v3.25.0/packages/-ember-data/../serializer/addon/json.js#L1303&quot;&gt; JSONSerializer ../serializer/addon/json.js:1303 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1b11de0d46edc3658fb526e962b3339e069aed2" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v3.25.0/packages/-ember-data/../serializer/addon/json.js#L1414&quot;&gt; JSONSerializer ../serializer/addon/json.js:1414 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cd41f6b517a95d71ee2b898a839649711f52b81" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v3.25.0/packages/-ember-data/../serializer/addon/json.js#L1440&quot;&gt; JSONSerializer ../serializer/addon/json.js:1440 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82c039fdf1ccfe8bbe4d024224900dcaa122088c" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v3.25.0/packages/-ember-data/../serializer/addon/json.js#L1468&quot;&gt; JSONSerializer ../serializer/addon/json.js:1468 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10c1ebca0890e6622bc1bb739b536675cf03ef0c" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v3.25.0/packages/-ember-data/../serializer/addon/json.js#L204&quot;&gt; JSONSerializer ../serializer/addon/json.js:204 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f0fa5713374317d30027f79af628d07bb7aa0b8" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v3.25.0/packages/-ember-data/../serializer/addon/json.js#L264&quot;&gt; JSONSerializer ../serializer/addon/json.js:264 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10cdc09581f38d8483b4fb9a84a321ba9422ea2e" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v3.25.0/packages/-ember-data/../serializer/addon/json.js#L278&quot;&gt; JSONSerializer ../serializer/addon/json.js:278 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6014180ea1a022c28fd20edbaa21c3b690c05f1f" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v3.25.0/packages/-ember-data/../serializer/addon/json.js#L292&quot;&gt; JSONSerializer ../serializer/addon/json.js:292 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd79ca5796159d2476c1d2bea640c04dc01588c7" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v3.25.0/packages/-ember-data/../serializer/addon/json.js#L306&quot;&gt; JSONSerializer ../serializer/addon/json.js:306 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aba764e3b9a3649043f4c13b2b761ad07f36bf5f" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v3.25.0/packages/-ember-data/../serializer/addon/json.js#L320&quot;&gt; JSONSerializer ../serializer/addon/json.js:320 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41c3a1b50dcb0d1d03a43a33bcdc74525d282d10" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v3.25.0/packages/-ember-data/../serializer/addon/json.js#L334&quot;&gt; JSONSerializer ../serializer/addon/json.js:334 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b26aeab4cab8446cd5d90a9092302ee85407847" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;https://github.com/emberjs/data/tree/v3.25.0/packages/-ember-data/../serializer/addon/json.js#L348&quot;&gt; JSONSerializer ../serializer/addon/json.js:348 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
