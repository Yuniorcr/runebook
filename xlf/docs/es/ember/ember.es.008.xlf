<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="ember">
    <body>
      <group id="ember">
        <trans-unit id="fa74a5445ac21a141ea80fae8c137247dd31ba9d" translate="yes" xml:space="preserve">
          <source>Now in our browser we should see that the first rental property is listed as &quot;Standalone&quot;, while the other two are listed as &quot;Community&quot;.</source>
          <target state="translated">Ahora en nuestro navegador deberíamos ver que la primera propiedad de alquiler está listada como &quot;Independiente&quot;,mientras que las otras dos están listadas como &quot;Comunidad&quot;.</target>
        </trans-unit>
        <trans-unit id="02f78c37e1d7493e21b1b94978d032932bbcb8df" translate="yes" xml:space="preserve">
          <source>Now in the browser when a scientist's name is clicked, this function is called and the person's name is alerted.</source>
          <target state="translated">Ahora en el navegador cuando se hace clic en el nombre de un científico,se llama a esta función y se alerta el nombre de la persona.</target>
        </trans-unit>
        <trans-unit id="ed29b70e455c078562a5f430d4dbd6281287bd7b" translate="yes" xml:space="preserve">
          <source>Now let's add code that simulates a visitor arriving on our homepage, clicking one of our links and then visiting a new page.</source>
          <target state="translated">Ahora añadamos un código que simule un visitante que llega a nuestra página principal,haciendo clic en uno de nuestros enlaces y luego visitando una nueva página.</target>
        </trans-unit>
        <trans-unit id="697e0df1cf9b32cc42300e9918ecad3b0cea695c" translate="yes" xml:space="preserve">
          <source>Now let's create a test which will call &lt;code&gt;levelUp&lt;/code&gt; on the player when they are level 4 to assert that the &lt;code&gt;levelName&lt;/code&gt; changes. We will use &lt;code&gt;module&lt;/code&gt; together with the &lt;code&gt;setupTest&lt;/code&gt; helper method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c09d33d498277510cb65c5bde600e541b65944ec" translate="yes" xml:space="preserve">
          <source>Now let's create a test which will call &lt;code&gt;levelUp&lt;/code&gt; on the player when they are level 4 to assert that the &lt;code&gt;levelName&lt;/code&gt; changes. We will use &lt;code&gt;moduleForModel&lt;/code&gt;:</source>
          <target state="translated">Ahora &lt;code&gt;levelUp&lt;/code&gt; una prueba que llamar&amp;aacute; levelUp en el jugador cuando est&amp;eacute; en el nivel 4 para afirmar que el &lt;code&gt;levelName&lt;/code&gt; cambia. Usaremos &lt;code&gt;moduleForModel&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="37fd2a1099f983eece52ae774c4e471341b866db" translate="yes" xml:space="preserve">
          <source>Now let's create another route with contact details for the company. Once again, we'll start by generating a route:</source>
          <target state="translated">Ahora vamos a crear otra ruta con los datos de contacto de la empresa.Una vez más,empezaremos generando una ruta:</target>
        </trans-unit>
        <trans-unit id="311e7c28de846f6b4798420c4a5a9e440da7f54c" translate="yes" xml:space="preserve">
          <source>Now let's render our component using the &lt;code&gt;render&lt;/code&gt; function. The &lt;code&gt;render&lt;/code&gt; function allows us to pass a template string, so that we can declare the component in the same way we do in our templates. Since we set the &lt;code&gt;rentalObj&lt;/code&gt; variable to our local scope, we can access it as part of our render string.</source>
          <target state="translated">Ahora rendericemos nuestro componente usando la funci&amp;oacute;n &lt;code&gt;render&lt;/code&gt; . La funci&amp;oacute;n de &lt;code&gt;render&lt;/code&gt; nos permite pasar una cadena de plantilla, para que podamos declarar el componente de la misma manera que lo hacemos en nuestras plantillas. Dado que configuramos la variable &lt;code&gt;rentalObj&lt;/code&gt; en nuestro &amp;aacute;mbito local, podemos acceder a ella como parte de nuestra cadena de procesamiento.</target>
        </trans-unit>
        <trans-unit id="431b5430f4b40181fa2b80add538cc5e19028acf" translate="yes" xml:space="preserve">
          <source>Now let's say your template is starting to get a bit cluttered and you want to clean up the logic in your templates. This can be achieved with the &lt;code&gt;let&lt;/code&gt; block helper. The &lt;a href=&quot;https://api.emberjs.com/ember/release/classes/Ember.Templates.helpers/methods#let&quot;&gt;&lt;code&gt;{{let}}&lt;/code&gt;&lt;/a&gt; helper lets you create new bindings (or temporary variables) in your template.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae22d53ed6893c6b12aeed6c790fd45587cc8f49" translate="yes" xml:space="preserve">
          <source>Now let's tell Ember how to turn that array of strings into HTML. Open the &lt;code&gt;scientists&lt;/code&gt; template and add the following code to loop through the array and print it:</source>
          <target state="translated">Ahora vamos a decirle a Ember c&amp;oacute;mo convertir ese conjunto de cadenas en HTML. Abra la plantilla de &lt;code&gt;scientists&lt;/code&gt; y agregue el siguiente c&amp;oacute;digo para recorrer la matriz e imprimirla:</target>
        </trans-unit>
        <trans-unit id="7f913783707682a29aebe4955714ed5c947732a8" translate="yes" xml:space="preserve">
          <source>Now let's test that the map component is relying on our service to provide map elements.</source>
          <target state="translated">Ahora probemos que el componente del mapa depende de nuestro servicio para proporcionar elementos del mapa.</target>
        </trans-unit>
        <trans-unit id="96f7e41a4cd747d58701a050ee081913d14c9b5e" translate="yes" xml:space="preserve">
          <source>Now let's write a test that sets a property on our &lt;code&gt;post&lt;/code&gt; model in the &lt;code&gt;PostController&lt;/code&gt; that would be available on the &lt;code&gt;CommentsController&lt;/code&gt;.</source>
          <target state="translated">Ahora escribamos una prueba que establezca una propiedad en nuestro modelo de &lt;code&gt;post&lt;/code&gt; en &lt;code&gt;PostController&lt;/code&gt; que estar&amp;iacute;a disponible en &lt;code&gt;CommentsController&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c9f9ed10a2412df54c18588a43c8397490d4ba61" translate="yes" xml:space="preserve">
          <source>Now run &lt;code&gt;ember server&lt;/code&gt; (or &lt;code&gt;ember serve&lt;/code&gt;, or even &lt;code&gt;ember s&lt;/code&gt; for short) on your command line to start the Ember development server and then go to &lt;a href=&quot;http://localhost:4200/about&quot;&gt;&lt;code&gt;http://localhost:4200/about&lt;/code&gt;&lt;/a&gt; to see our new page in action!</source>
          <target state="translated">Ahora ejecute &lt;code&gt;ember server&lt;/code&gt; (o &lt;code&gt;ember serve&lt;/code&gt; , o incluso &lt;code&gt;ember s&lt;/code&gt; para abreviar) en su l&amp;iacute;nea de comando para iniciar el servidor de desarrollo Ember y luego vaya a &lt;a href=&quot;http://localhost:4200/about&quot;&gt; &lt;code&gt;http://localhost:4200/about&lt;/code&gt; &lt;/a&gt; para ver nuestra nueva p&amp;aacute;gina en acci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="84b050c16846a3214fdf9d603f7c5b69acbc94b6" translate="yes" xml:space="preserve">
          <source>Now run the tests by typing &lt;code&gt;ember test --server&lt;/code&gt; in the command line (or &lt;code&gt;ember t -s&lt;/code&gt; for short).</source>
          <target state="translated">Ahora ejecute las pruebas escribiendo &lt;code&gt;ember test --server&lt;/code&gt; en la l&amp;iacute;nea de comando (o &lt;code&gt;ember t -s&lt;/code&gt; para abreviar).</target>
        </trans-unit>
        <trans-unit id="34b197a6f48a8ab8f16c6e0063a35905a4b87cee" translate="yes" xml:space="preserve">
          <source>Now run your test suite with the CLI command, &lt;code&gt;ember test --server&lt;/code&gt;.</source>
          <target state="translated">Ahora ejecute su suite de pruebas con el comando CLI, &lt;code&gt;ember test --server&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="787a23779b90cc388529dd5a1d0792e8596631dc" translate="yes" xml:space="preserve">
          <source>Now that data can be used in the &lt;code&gt;favorite-posts&lt;/code&gt; template:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e32163bdf7a676f31ff681bf9c67e518f8ae20d2" translate="yes" xml:space="preserve">
          <source>Now that our API is ready to return individual rentals, we can generate our &lt;code&gt;show&lt;/code&gt; sub-route. Much like generating our &lt;code&gt;rentals&lt;/code&gt; route, we will use &lt;code&gt;ember g&lt;/code&gt; to create a nested route.</source>
          <target state="translated">Ahora que nuestra API est&amp;aacute; lista para devolver alquileres individuales, podemos generar nuestra subruta de &lt;code&gt;show&lt;/code&gt; . Al igual que generar nuestra ruta de &lt;code&gt;rentals&lt;/code&gt; , usaremos &lt;code&gt;ember g&lt;/code&gt; para crear una ruta anidada.</target>
        </trans-unit>
        <trans-unit id="390b956f83716b5d2b619a143ece53c88d58057b" translate="yes" xml:space="preserve">
          <source>Now that we are able to generate a map element, we will implement a maps service that will keep a reference to the Map object we create, and attach the map to an element in our application</source>
          <target state="translated">Ahora que somos capaces de generar un elemento del mapa,implementaremos un servicio de mapas que mantendrá una referencia al objeto del mapa que creamos,y adjuntará el mapa a un elemento de nuestra aplicación</target>
        </trans-unit>
        <trans-unit id="e29152200d11c3493e21bf49ce8fe2f07316838b" translate="yes" xml:space="preserve">
          <source>Now that we are returning all of our rentals to the nested route's model, we will also move the rental list markup from our main route template to our nested route index template.</source>
          <target state="translated">Ahora que estamos devolviendo todos nuestros alquileres al modelo de la ruta anidada,también moveremos el marcado de la lista de alquileres de nuestra plantilla de la ruta principal a nuestra plantilla del índice de la ruta anidada.</target>
        </trans-unit>
        <trans-unit id="74ca8a47289101b4d71bc8a893d38054ad494e17" translate="yes" xml:space="preserve">
          <source>Now that we can load pages for individual rentals, we'll add a link (using the &lt;code&gt;link-to&lt;/code&gt; helper) within our &lt;code&gt;rental-listing&lt;/code&gt; component to navigate to individual pages. Here, the &lt;code&gt;link-to&lt;/code&gt; helper takes the route name and the rental model object as arguments. When you pass an object as second argument into the &lt;code&gt;link-to&lt;/code&gt; block helper, it will by default &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Route.html#method_serialize&quot;&gt;serialize&lt;/a&gt; the object to the ID of the model into the URL. Alternately, you may just pass &lt;code&gt;rental.id&lt;/code&gt; for clarity.</source>
          <target state="translated">Ahora que podemos cargar p&amp;aacute;ginas para alquileres individuales, agregaremos un enlace (utilizando el asistente de &lt;code&gt;link-to&lt;/code&gt; ) dentro de nuestro componente de &lt;code&gt;rental-listing&lt;/code&gt; para navegar a p&amp;aacute;ginas individuales. Aqu&amp;iacute;, el asistente de &lt;code&gt;link-to&lt;/code&gt; toma el nombre de la ruta y el objeto del modelo de alquiler como argumentos. Cuando pasa un objeto como segundo argumento al asistente de bloqueo de &lt;code&gt;link-to&lt;/code&gt; , de forma predeterminada &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Route.html#method_serialize&quot;&gt;serializar&amp;aacute;&lt;/a&gt; el objeto con la ID del modelo en la URL. Alternativamente, puede pasar &lt;code&gt;rental.id&lt;/code&gt; para mayor claridad.</target>
        </trans-unit>
        <trans-unit id="7449048b4c1f507cba589b5896f56bc6e59ebf2b" translate="yes" xml:space="preserve">
          <source>Now that we have a button, we need to wire it up to do &lt;em&gt;something&lt;/em&gt; when a user clicks on it. For simplicity, let's say we want to show an &lt;code&gt;alert&lt;/code&gt; dialog with the person's name when the button is clicked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4255feacf5239fbecd768d0253861a9694b0f109" translate="yes" xml:space="preserve">
          <source>Now that we have implemented the desired behavior, we can go back to the component's template and wire everything up:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f51bc732dd5d0541e4168611797a812b626f2f08" translate="yes" xml:space="preserve">
          <source>Now that we have the maps API available to the application, we can create our map utility. Utility files can be generated using Ember CLI.</source>
          <target state="translated">Ahora que tenemos la API de mapas disponible para la aplicación,podemos crear nuestra utilidad de mapas.Los archivos de la utilidad pueden ser generados usando Ember CLI.</target>
        </trans-unit>
        <trans-unit id="a4e52876f40ef26dc44f65cd5da56d10b2128afb" translate="yes" xml:space="preserve">
          <source>Now that we have various pages in our application, let's walk through how to build tests for them.</source>
          <target state="translated">Ahora que tenemos varias páginas en nuestra aplicación,veamos cómo construir pruebas para ellas.</target>
        </trans-unit>
        <trans-unit id="a9325da4991f12e5819676980260f75961e78b11" translate="yes" xml:space="preserve">
          <source>Now that we see &lt;em&gt;why&lt;/em&gt; we want to use a modifier for our audio component, let's walk through &lt;em&gt;how&lt;/em&gt; to create one. We will start with the component (to manage the state) and then implement the modifier (the manage the DOM).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6188cec92e3b92a3cd3573bff0b61954c555c273" translate="yes" xml:space="preserve">
          <source>Now that we've created a new component for filtering a list, we want to create a test to verify it. Let's use a &lt;a href=&quot;https://guides.emberjs.com/testing/testing-components&quot;&gt;component integration test&lt;/a&gt; to verify our component behavior, similar to &lt;a href=&quot;../simple-component#toc_an-integration-test&quot;&gt;how we tested our rental listing component earlier&lt;/a&gt;.</source>
          <target state="translated">Ahora que hemos creado un nuevo componente para filtrar una lista, queremos crear una prueba para verificarlo. Usemos una &lt;a href=&quot;https://guides.emberjs.com/testing/testing-components&quot;&gt;prueba de integraci&amp;oacute;n de componentes&lt;/a&gt; para verificar el comportamiento de nuestro componente, similar a &lt;a href=&quot;../simple-component#toc_an-integration-test&quot;&gt;c&amp;oacute;mo probamos nuestro componente de listado de alquiler anteriormente&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8f98c7ad85c92ecc814c29c3767c5a61cece2013" translate="yes" xml:space="preserve">
          <source>Now that we've created this modifier, we can use it in our &lt;code&gt;modal&lt;/code&gt; component, and add some logic to invoke a passed-in action whenever the user clicks outside the modal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22d276eb5319d347792a8180152b4cf12d2f8003" translate="yes" xml:space="preserve">
          <source>Now that we've got the &lt;code&gt;scientists&lt;/code&gt; template rendering, let's give it some data to render. We do that by specifying a &lt;em&gt;model&lt;/em&gt; for that route, and we can specify a model by editing &lt;code&gt;app/routes/scientists.js&lt;/code&gt;.</source>
          <target state="translated">Ahora que tenemos la renderizaci&amp;oacute;n de la plantilla de &lt;code&gt;scientists&lt;/code&gt; , vamos a darle algunos datos para renderizar. Lo hacemos especificando un &lt;em&gt;modelo&lt;/em&gt; para esa ruta, y podemos especificar un modelo editando &lt;code&gt;app/routes/scientists.js&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="409a5bf3323ebbf783bca40b618202511ed25e9c" translate="yes" xml:space="preserve">
          <source>Now that we've tested that the &lt;code&gt;list-filter&lt;/code&gt; component behaves as expected, let's test that the page itself also behaves properly with an acceptance test. We'll verify that a user visiting the rentals page can enter text into the search field and narrow the list of rentals by city.</source>
          <target state="translated">Ahora que hemos probado que el componente de &lt;code&gt;list-filter&lt;/code&gt; comporta como se esperaba, probemos que la p&amp;aacute;gina en s&amp;iacute; tambi&amp;eacute;n se comporta correctamente con una prueba de aceptaci&amp;oacute;n. Verificaremos que un usuario que visite la p&amp;aacute;gina de alquileres pueda ingresar texto en el campo de b&amp;uacute;squeda y reducir la lista de alquileres por ciudad.</target>
        </trans-unit>
        <trans-unit id="e9f934b876c6d18b3147c025ed6401410b05147e" translate="yes" xml:space="preserve">
          <source>Now that we've written our application and verified that it works in development, it's time to get it ready to deploy to our users.</source>
          <target state="translated">Ahora que hemos escrito nuestra aplicación y verificado que funciona en el desarrollo,es hora de prepararla para desplegarla a nuestros usuarios.</target>
        </trans-unit>
        <trans-unit id="9242ac3aa654e84ff49bf7dcc4f82def076c3580" translate="yes" xml:space="preserve">
          <source>Now that you have the basics down, are you feeling creative and adventurous? The Ember community has created hundreds of addons that you can use for free in your app. Addons let you quickly add features like calendars, navbars, payments, authentication, themes, and more. Visit &lt;a href=&quot;https://emberobserver.com&quot;&gt;Ember Observer&lt;/a&gt; to browse the possibilities!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42a2fba2bd604ccca37641fca53a4a2fc6b8507c" translate="yes" xml:space="preserve">
          <source>Now that your app is deployed, what should you do next?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84e818bed748241b2d7235584a3e41d2b94d2146" translate="yes" xml:space="preserve">
          <source>Now the Text component doesn't have any internal state, it defers to the parent Form component, and when the Form component toggles its disabled state, it clears the state of the text. The mutation of state is centralized in the action where it occurs, making our program easier to reason about as a whole.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb98077b823bffbec7d94fef2fd368d976bda3cd" translate="yes" xml:space="preserve">
          <source>Now the same template above renders the following HTML:</source>
          <target state="translated">Ahora la misma plantilla de arriba muestra el siguiente HTML:</target>
        </trans-unit>
        <trans-unit id="751cdc42f9ac3dfa5f8f1d9e4ef15bfaddd5edf2" translate="yes" xml:space="preserve">
          <source>Now the value passed into the helper has its HTML escaped, but the trusted &lt;code&gt;&amp;lt;b&amp;gt;&lt;/code&gt; tags that we want to wrap the value in are &lt;em&gt;not&lt;/em&gt; escaped. A malicious user setting their &lt;code&gt;firstName&lt;/code&gt; to something containing HTML would see this:</source>
          <target state="translated">Ahora el valor pasado al ayudante tiene su HTML escapado, pero las etiquetas &lt;code&gt;&amp;lt;b&amp;gt;&lt;/code&gt; confiables en las que queremos envolver el valor &lt;em&gt;no se&lt;/em&gt; escapan. Un usuario malicioso configurando sus &lt;code&gt;firstName&lt;/code&gt; a algo que contiene HTML ver&amp;iacute;a esto:</target>
        </trans-unit>
        <trans-unit id="8b6b5009f8b7a2901d3d319dd17092db9a1ed606" translate="yes" xml:space="preserve">
          <source>Now visiting the root route at &lt;code&gt;/&lt;/code&gt; will result in the &lt;code&gt;/rentals&lt;/code&gt; URL loading.</source>
          <target state="translated">Ahora, al visitar la ruta ra&amp;iacute;z en &lt;code&gt;/&lt;/code&gt; ,se cargar&amp;aacute; la URL de &lt;code&gt;/rentals&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6c6c7e593ed0c850f3e8190fef9191b81f3e28da" translate="yes" xml:space="preserve">
          <source>Now we are listing rentals, and verifying it with an acceptance test. This leaves us with 2 remaining acceptance test failures (and 1 eslint failure):</source>
          <target state="translated">Ahora estamos haciendo una lista de alquileres,y verificándolo con una prueba de aceptación.Esto nos deja con 2 fallas restantes en la prueba de aceptación (y una sola falla):</target>
        </trans-unit>
        <trans-unit id="7108a8b8c763bba0f7398042020329fed4eaf6cc" translate="yes" xml:space="preserve">
          <source>Now we can add functionality that will show the image of a rental when requested by the user.</source>
          <target state="translated">Ahora podemos añadir una funcionalidad que mostrará la imagen de un alquiler cuando lo solicite el usuario.</target>
        </trans-unit>
        <trans-unit id="0eb5f04b662c492a3092ec0f4d3de3f94910b7d1" translate="yes" xml:space="preserve">
          <source>Now we can either set the &lt;code&gt;belongsTo&lt;/code&gt; relationship in our new comment, or, update the blogPost's &lt;code&gt;hasMany&lt;/code&gt; relationship. As you might observe, we don't need to set both &lt;code&gt;hasMany&lt;/code&gt; and &lt;code&gt;belongsTo&lt;/code&gt; for a record. Ember Data will do that for us.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe4c933206df8d089a9a5f5490e91df59c0228d5" translate="yes" xml:space="preserve">
          <source>Now we can move on to a more complex test case that ensures our helper is rendered correctly as well. This can be done with the &lt;code&gt;setupRenderingTest&lt;/code&gt; helper, as shown in &lt;a href=&quot;../testing-components&quot;&gt;Testing Components&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfa9210fe58ffde8b4dcc9ff4b51a5ca9f882a82" translate="yes" xml:space="preserve">
          <source>Now we can move on to an integration test. Integration testing helpers is done with the &lt;code&gt;moduleForComponent&lt;/code&gt; helpers, as shown in &lt;a href=&quot;../unit-testing-basics&quot;&gt;Testing Components&lt;/a&gt;.</source>
          <target state="translated">Ahora podemos pasar a una prueba de integraci&amp;oacute;n. Los ayudantes de prueba de integraci&amp;oacute;n se realizan con los ayudantes de &lt;code&gt;moduleForComponent&lt;/code&gt; , como se muestra en &lt;a href=&quot;../unit-testing-basics&quot;&gt;Prueba de componentes&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d378360c77a1435b23b3e8fbbda88e19e03f54b9" translate="yes" xml:space="preserve">
          <source>Now we can open and close the modal dialog at will! Next, we'll setup the component to send its &lt;em&gt;own&lt;/em&gt; events when the user clicks the &quot;OK&quot; and &quot;Cancel&quot; buttons.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11398bb83489e7573750eb0b3ecfd3dc7203a6e0" translate="yes" xml:space="preserve">
          <source>Now we can use our custom &lt;code&gt;{{autofocus}}&lt;/code&gt; modifier throughout our application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fdad371bc9df138ad834391faad276517ce8b68" translate="yes" xml:space="preserve">
          <source>Now we have a button that can receive some text as an argument, with a modal confirmation that will show conditionally based on its &lt;code&gt;isConfirming&lt;/code&gt; property. You'll notice this property is decorated with the &lt;code&gt;@tracked&lt;/code&gt; decorator - this is known as a &lt;em&gt;tracked property&lt;/em&gt;, and indicates to Ember that the field will change in value over the lifetime of the component. You can learn more about tracked properties in the &lt;a href=&quot;../autotracking-in-depth&quot;&gt;Autotracking In-Depth&lt;/a&gt; guide.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4adfea733a9bf47405887104fee15db7d39c58a6" translate="yes" xml:space="preserve">
          <source>Now we need to define a computed property of our category-filtered array that the &lt;code&gt;articles&lt;/code&gt; template will render:</source>
          <target state="translated">Ahora necesitamos definir una propiedad calculada de nuestra matriz filtrada por categor&amp;iacute;as que la plantilla de &lt;code&gt;articles&lt;/code&gt; representar&amp;aacute;:</target>
        </trans-unit>
        <trans-unit id="0a9ade858770208815604908e8c6a68cfd6d052d" translate="yes" xml:space="preserve">
          <source>Now we need to define a getter for our category-filtered array, which the &lt;code&gt;articles&lt;/code&gt; template will render. For the getter to recompute when values change, &lt;code&gt;category&lt;/code&gt; and &lt;code&gt;model&lt;/code&gt; should be marked as tracked properties:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54e5a7d11514449fe0aca845de95725d318042b5" translate="yes" xml:space="preserve">
          <source>Now we need to make it so that the &lt;code&gt;userDidDeleteAccount()&lt;/code&gt; action defined in the parent component &lt;code&gt;user-profile&lt;/code&gt; can be triggered from within &lt;code&gt;button-with-confirmation&lt;/code&gt;. We'll do this by passing the action to the child component in exactly the same way that we pass other properties. This is possible since actions are simply functions, just like any other method on a component, and they can therefore be passed from one component to another like this:</source>
          <target state="translated">Ahora tenemos que hacerlo de modo que la acci&amp;oacute;n &lt;code&gt;userDidDeleteAccount()&lt;/code&gt; definida en el &lt;code&gt;user-profile&lt;/code&gt; componente principal se pueda activar desde el &lt;code&gt;button-with-confirmation&lt;/code&gt; . Haremos esto pasando la acci&amp;oacute;n al componente hijo exactamente de la misma manera que pasamos otras propiedades. Esto es posible ya que las acciones son simplemente funciones, como cualquier otro m&amp;eacute;todo en un componente, y por lo tanto se pueden pasar de un componente a otro de esta manera:</target>
        </trans-unit>
        <trans-unit id="638d79b6dc710ae90d1be166135c3fd4850c0c22" translate="yes" xml:space="preserve">
          <source>Now we've implemented our action, but we have not told Ember when we want this action to be triggered, which is the next step.</source>
          <target state="translated">Ahora hemos implementado nuestra acción,pero no le hemos dicho a Ember cuándo queremos que se desencadene esta acción,que es el siguiente paso.</target>
        </trans-unit>
        <trans-unit id="eb138d4ac2039ca6f91d7778d49a1e0c080f7905" translate="yes" xml:space="preserve">
          <source>Now we've implemented our action, but we have not told Ember when we want this action to be triggered. In order to trigger the action when the user clicks &quot;OK&quot; in the &lt;code&gt;ButtonWithConfirmation&lt;/code&gt; component, we'll need to pass the action &lt;em&gt;down&lt;/em&gt; to it as an argument:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55a49ef66b489e2e182e74e6d1a108e56c676795" translate="yes" xml:space="preserve">
          <source>Now when called like so:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c2fddefdc4b37f652575c4a9980122a108feeff" translate="yes" xml:space="preserve">
          <source>Now when the &lt;code&gt;SystemPreferencesEditor&lt;/code&gt; handles the delete action, it receives only the user's account &lt;code&gt;id&lt;/code&gt; string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8266b5a5c3d0155af7d2420da1952fd4bf225240" translate="yes" xml:space="preserve">
          <source>Now when the &lt;code&gt;system-preferences-editor&lt;/code&gt; handles the delete action, it receives only the user's account &lt;code&gt;id&lt;/code&gt; string.</source>
          <target state="translated">Ahora, cuando el &lt;code&gt;system-preferences-editor&lt;/code&gt; del sistema maneja la acci&amp;oacute;n de eliminaci&amp;oacute;n, solo recibe la cadena de &lt;code&gt;id&lt;/code&gt; entificaci&amp;oacute;n de la cuenta del usuario .</target>
        </trans-unit>
        <trans-unit id="24e0f7c85a3653f2f8783ca8850aaea9de98c648" translate="yes" xml:space="preserve">
          <source>Now when we click the image or the &lt;code&gt;View Larger&lt;/code&gt; link in our browser, we see our image show larger. When we click the enlarged image again, we see it smaller.</source>
          <target state="translated">Ahora, cuando hacemos clic en la imagen o en el enlace &lt;code&gt;View Larger&lt;/code&gt; en nuestro navegador, vemos que nuestra imagen se muestra m&amp;aacute;s grande. Cuando volvemos a hacer clic en la imagen ampliada, la vemos m&amp;aacute;s peque&amp;ntilde;a.</target>
        </trans-unit>
        <trans-unit id="5d245f0aef23eeedd834fcade7b3ff3025ac6d19" translate="yes" xml:space="preserve">
          <source>Now when we go to &lt;a href=&quot;http://localhost:4200/contact&quot;&gt;&lt;code&gt;http://localhost:4200/contact&lt;/code&gt;&lt;/a&gt;, we'll see our contact page.</source>
          <target state="translated">Ahora, cuando vayamos a &lt;a href=&quot;http://localhost:4200/contact&quot;&gt; &lt;code&gt;http://localhost:4200/contact&lt;/code&gt; &lt;/a&gt; , veremos nuestra p&amp;aacute;gina de contacto.</target>
        </trans-unit>
        <trans-unit id="be877b75fca57439ff66da3a78bca6da09e90e67" translate="yes" xml:space="preserve">
          <source>Now when you confirm deletion, the action goes straight to the &lt;code&gt;SystemPreferencesEditor&lt;/code&gt; to be handled in its local context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce9483b052b5784076ba5b335a0118e44ab1c9e9" translate="yes" xml:space="preserve">
          <source>Now when you confirm deletion, the action goes straight to the &lt;code&gt;system-preferences-editor&lt;/code&gt; to be handled in its local context.</source>
          <target state="translated">Ahora, cuando confirma la eliminaci&amp;oacute;n, la acci&amp;oacute;n va directamente al &lt;code&gt;system-preferences-editor&lt;/code&gt; del sistema para ser manejada en su contexto local.</target>
        </trans-unit>
        <trans-unit id="473068e00c295cfcafcd8f45ee6f410ef05f53fa" translate="yes" xml:space="preserve">
          <source>Now, almost anywhere in your app, you can use the various jQuery integration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c492595dd56aaada785857fc9c9edf375ab46697" translate="yes" xml:space="preserve">
          <source>Now, as long as your template is wrapped in the &lt;code&gt;let&lt;/code&gt; helper, you can access the capitalized given name and family name as &lt;code&gt;givenName&lt;/code&gt; and &lt;code&gt;familyName&lt;/code&gt; instead of &lt;code&gt;(capitalize this.person.givenName)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61a8b0d0ff011a9764ca1ad939461500c43c3744" translate="yes" xml:space="preserve">
          <source>Now, define your new controller like so:</source>
          <target state="translated">Ahora,define tu nuevo controlador así:</target>
        </trans-unit>
        <trans-unit id="2bd21344ef8f95330e5f178d2999e6351e5140b4" translate="yes" xml:space="preserve">
          <source>Now, if we use our &lt;code&gt;ErrorDialog&lt;/code&gt; component without a block, we'll get the default message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4fd3bbdfb6ab9a0619b9f651b994843f728f190" translate="yes" xml:space="preserve">
          <source>Now, let's add a list of available rentals to the rentals page we've just created.</source>
          <target state="translated">Ahora,agreguemos una lista de alquileres disponibles a la página de alquileres que acabamos de crear.</target>
        </trans-unit>
        <trans-unit id="a53ad0647104e578d8de2040723dfe077ba174b5" translate="yes" xml:space="preserve">
          <source>Now, let's switch over to our rentals page template. We can use the model attribute to display our list of rentals. Here, we'll use another common Handlebars helper called &lt;a href=&quot;https://guides.emberjs.com/templates/displaying-a-list-of-items/&quot;&gt;&lt;code&gt;{{each}}&lt;/code&gt;&lt;/a&gt;. This helper will let us loop through each of the rental objects in our model:</source>
          <target state="translated">Ahora, cambiemos a nuestra plantilla de p&amp;aacute;gina de alquileres. Podemos usar el atributo de modelo para mostrar nuestra lista de alquileres. Aqu&amp;iacute;, usaremos otro ayudante com&amp;uacute;n de Handlebars llamado &lt;a href=&quot;https://guides.emberjs.com/templates/displaying-a-list-of-items/&quot;&gt; &lt;code&gt;{{each}}&lt;/code&gt; &lt;/a&gt; . Este ayudante nos permitir&amp;aacute; recorrer cada uno de los objetos de alquiler en nuestro modelo:</target>
        </trans-unit>
        <trans-unit id="1c7b54e01c4ec08044f348cb31fc93794811e59a" translate="yes" xml:space="preserve">
          <source>Now, suppose we want to add comments to an existing blogPost. We can do this in two ways, but for both of them, we first need to look up a blog post that is already loaded in the store, using its id:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5634ffbc151b6f602493d24fb1795397f8549ec" translate="yes" xml:space="preserve">
          <source>Now, the Counter calls the &lt;code&gt;updateMultiple&lt;/code&gt; argument (which we expect to be a function) with the new value for &lt;code&gt;multiple&lt;/code&gt;, and the parent component can update the multiple.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15795f7ce89f935cc441a35c4b6d01a3b8f097c4" translate="yes" xml:space="preserve">
          <source>Now, we can use &lt;code&gt;onConfirm&lt;/code&gt; in the child component to invoke the action on the parent:</source>
          <target state="translated">Ahora, podemos usar &lt;code&gt;onConfirm&lt;/code&gt; en el componente hijo para invocar la acci&amp;oacute;n en el padre:</target>
        </trans-unit>
        <trans-unit id="e8a74da24790015ebe84e057ae755a540ac6ffaa" translate="yes" xml:space="preserve">
          <source>Now, we can use the &lt;code&gt;{{blog-post}}&lt;/code&gt; component and pass it properties in another template:</source>
          <target state="translated">Ahora, podemos usar el componente &lt;code&gt;{{blog-post}}&lt;/code&gt; y pasarle propiedades a otra plantilla:</target>
        </trans-unit>
        <trans-unit id="fdf62c9f4192c9e36113ca42781fc9263390a9ef" translate="yes" xml:space="preserve">
          <source>Now, we'll add our corresponding link to the contact page so we can move back and forth between &lt;code&gt;about&lt;/code&gt; and &lt;code&gt;contact&lt;/code&gt;:</source>
          <target state="translated">Ahora, agregaremos nuestro enlace correspondiente a la p&amp;aacute;gina de contacto para que podamos avanzar y retroceder entre &lt;code&gt;about&lt;/code&gt; y &lt;code&gt;contact&lt;/code&gt; o :</target>
        </trans-unit>
        <trans-unit id="a879d50bf8c09faae5535f3cab8516120420f26f" translate="yes" xml:space="preserve">
          <source>Now, when the &lt;code&gt;+1&lt;/code&gt; and &lt;code&gt;-1&lt;/code&gt; buttons get clicked, the number displayed will change.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b6222fa9f13976ca7ad6beffaa5b6d82e8a9acf" translate="yes" xml:space="preserve">
          <source>Now, when the user visits &lt;code&gt;/about&lt;/code&gt;, Ember will render the &lt;code&gt;about&lt;/code&gt; template. Visiting &lt;code&gt;/favs&lt;/code&gt; will render the &lt;code&gt;favorites&lt;/code&gt; template.</source>
          <target state="translated">Ahora, cuando el usuario visite &lt;code&gt;/about&lt;/code&gt; , Ember renderizar&amp;aacute; la plantilla &lt;code&gt;about&lt;/code&gt; . Visiting &lt;code&gt;/favs&lt;/code&gt; renderizar&amp;aacute; la plantilla de &lt;code&gt;favorites&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="894378d414e7ebe678c18c3f781dba0645530766" translate="yes" xml:space="preserve">
          <source>Now, when we click on the confirm button, the &lt;code&gt;submitConfirm&lt;/code&gt; action will also call the &lt;code&gt;deleteAccount&lt;/code&gt; action, which was passed down as an argument to the confirmation button component. In this way, the &lt;code&gt;@onConfirm&lt;/code&gt; argument is like an event which our &lt;code&gt;ButtonWithConfirmation&lt;/code&gt; component triggers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="714db7ba4265493aac8451d6fdd39218363b66cb" translate="yes" xml:space="preserve">
          <source>Now, whenever we change the value of the &lt;code&gt;select&lt;/code&gt;, it'll call the action method, which will set the value of &lt;code&gt;language&lt;/code&gt;. Since &lt;code&gt;language&lt;/code&gt; is marked as tracked, and was used in rendering &lt;code&gt;greeting&lt;/code&gt;, Ember will know that &lt;code&gt;greeting&lt;/code&gt; needs to be re-rendered in the template, and will update.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e024f13e16917f40a23bcb1554e9bce6943df6d7" translate="yes" xml:space="preserve">
          <source>Now, whenever we type a value and submit it in the form, a new message object will be added to the array, and the &lt;code&gt;{{each}}&lt;/code&gt; will update with the new item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5cd41af69260a04d94db9c599bc1850243572fb" translate="yes" xml:space="preserve">
          <source>Now, you have a choice to make, and the right answer varies based on how your team operates and what your app is like. Consider which path has the least mental overhead for your engineering team, including both experienced and beginner Ember developers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="109085beaaa80ac89858b283a64f7c75d7e5bb12" translate="yes" xml:space="preserve">
          <source>Null</source>
          <target state="translated">Null</target>
        </trans-unit>
        <trans-unit id="b7baa1d40c4ea29afc9098732bffee2a861a6c44" translate="yes" xml:space="preserve">
          <source>Number</source>
          <target state="translated">Number</target>
        </trans-unit>
        <trans-unit id="88edc4776d403507658bee878ccdd72f1066d6fc" translate="yes" xml:space="preserve">
          <source>Number of elements that should be removed from the array, starting at *idx*.</source>
          <target state="translated">Número de elementos que deben ser eliminados de la matriz,empezando por *idx*.</target>
        </trans-unit>
        <trans-unit id="0da649b10044d0f71d7a6905e9b6d63659072ba9" translate="yes" xml:space="preserve">
          <source>Number of milliseconds to space out requests.</source>
          <target state="translated">Número de milisegundos para espaciar las solicitudes.</target>
        </trans-unit>
        <trans-unit id="76f886e5f43af44774fe994d2bf9d8f584ccf233" translate="yes" xml:space="preserve">
          <source>Number of milliseconds to wait.</source>
          <target state="translated">Número de milisegundos de espera.</target>
        </trans-unit>
        <trans-unit id="dd4ba91b29d32edc1f365c3bd6735151219f7f8b" translate="yes" xml:space="preserve">
          <source>NumberTransform</source>
          <target state="translated">NumberTransform</target>
        </trans-unit>
        <trans-unit id="c96f8cfa04b2401642b632ab99c696e7b056b4c9" translate="yes" xml:space="preserve">
          <source>Number|Property</source>
          <target state="translated">Number|Property</target>
        </trans-unit>
        <trans-unit id="2883f191bc5ebfdc16c0813eff659b35363ea69b" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="translated">Object</target>
        </trans-unit>
        <trans-unit id="046bbc130ff7274f6d64607d913605fb2889bf35" translate="yes" xml:space="preserve">
          <source>Object Inspector</source>
          <target state="translated">Inspector de objetos</target>
        </trans-unit>
        <trans-unit id="e1513401bdad97eeec26a0df3ad83cdcfa1ea677" translate="yes" xml:space="preserve">
          <source>Object Root</source>
          <target state="translated">Raíz del objeto</target>
        </trans-unit>
        <trans-unit id="a7b77dbe50791d31096e5af54a26e5c31a19b936" translate="yes" xml:space="preserve">
          <source>Object containing values to use within the new class</source>
          <target state="translated">El objeto que contiene los valores a utilizar dentro de la nueva clase</target>
        </trans-unit>
        <trans-unit id="f1d7548ccd9210fe9f2413508f315d38d0d8c629" translate="yes" xml:space="preserve">
          <source>Object that will be set as the model of the engine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2fff7b4d950616ac3bef1a515c9329ec963f60e" translate="yes" xml:space="preserve">
          <source>Object | AdapterError</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b304869b69598961a9d35b37c6fa6c60971f424" translate="yes" xml:space="preserve">
          <source>Object | DS.AdapterError</source>
          <target state="translated">Objeto | DS.AdaptadorError</target>
        </trans-unit>
        <trans-unit id="b4784d7acbd2702fa6271cd5462cc264f381f5af" translate="yes" xml:space="preserve">
          <source>Object | undefined</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43710f2ae099d35ce837e6f0eaa732de92f07067" translate="yes" xml:space="preserve">
          <source>Object...</source>
          <target state="translated">Object...</target>
        </trans-unit>
        <trans-unit id="509eaa966f59106fc4885b0bd87f377320887ef2" translate="yes" xml:space="preserve">
          <source>ObjectProxy</source>
          <target state="translated">ObjectProxy</target>
        </trans-unit>
        <trans-unit id="b6ab519ee4828e64cb84e7da4b0494d126262ccd" translate="yes" xml:space="preserve">
          <source>Objects are considered Array-like if any of the following are true:</source>
          <target state="translated">Los objetos se consideran como de tipo &quot;array&quot; si alguno de los siguientes elementos es cierto:</target>
        </trans-unit>
        <trans-unit id="1f91056b2f2c5a87fefcf8263cdce9940569716e" translate="yes" xml:space="preserve">
          <source>Objects in Ember</source>
          <target state="translated">Objetos de ámbar</target>
        </trans-unit>
        <trans-unit id="ea0a98c632b2c1b78a2d3889fe6a012055812ca8" translate="yes" xml:space="preserve">
          <source>Object|Function</source>
          <target state="translated">Object|Function</target>
        </trans-unit>
        <trans-unit id="d9008046621fd4aa468204fcfd6ca159f07a8852" translate="yes" xml:space="preserve">
          <source>Object|Promise</source>
          <target state="translated">Object|Promise</target>
        </trans-unit>
        <trans-unit id="c231f0cfa191393d14a834365263558785e900ee" translate="yes" xml:space="preserve">
          <source>Object|String</source>
          <target state="translated">Object|String</target>
        </trans-unit>
        <trans-unit id="c92258fa87a7fd87bfb0eac39b2cad3876c1531d" translate="yes" xml:space="preserve">
          <source>Observable</source>
          <target state="translated">Observable</target>
        </trans-unit>
        <trans-unit id="307932fe3fc8a6a623482336122238a18d63c345" translate="yes" xml:space="preserve">
          <source>Observable Equivalent</source>
          <target state="translated">Equivalente observable</target>
        </trans-unit>
        <trans-unit id="03ec7d08aec77b2156c9347f0082c5eed203b4e0" translate="yes" xml:space="preserve">
          <source>Observer Methods</source>
          <target state="translated">Métodos de observación</target>
        </trans-unit>
        <trans-unit id="20c17cb09007fd332a06112b65f303ed65335037" translate="yes" xml:space="preserve">
          <source>Observer methods have the following signature:</source>
          <target state="translated">Los métodos de observación tienen la siguiente firma:</target>
        </trans-unit>
        <trans-unit id="0618a214d16e39be75c6315a11d086a7dcbea1b6" translate="yes" xml:space="preserve">
          <source>Observers</source>
          <target state="translated">Observers</target>
        </trans-unit>
        <trans-unit id="853a6ea1725e790242a53c8b71d88a3606114195" translate="yes" xml:space="preserve">
          <source>Observers / Binding</source>
          <target state="translated">Observadores/Vinculación</target>
        </trans-unit>
        <trans-unit id="0ba30584277e971c04f0d982aa5c093fa641ac6a" translate="yes" xml:space="preserve">
          <source>Observers and asynchrony</source>
          <target state="translated">Observadores y asincronía</target>
        </trans-unit>
        <trans-unit id="dd121fa26be2df8672e845b1537510d9b314c5cd" translate="yes" xml:space="preserve">
          <source>Observers and object initialization</source>
          <target state="translated">Observadores e inicialización de objetos</target>
        </trans-unit>
        <trans-unit id="e736f6b09fdaa953337c6d536a1450f9f94c9a91" translate="yes" xml:space="preserve">
          <source>Observers are annotated using &lt;code&gt;Ember.observer()&lt;/code&gt;:</source>
          <target state="translated">Los observadores se anotan usando &lt;code&gt;Ember.observer()&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="3077946aa34d8ec8d2b52fd810a985c5b86ca007" translate="yes" xml:space="preserve">
          <source>Observers in Ember are currently synchronous. This means that they will fire as soon as one of the properties they observe changes. Because of this, it is easy to introduce bugs where properties are not yet synchronized:</source>
          <target state="translated">Los observadores en Ember están actualmente sincronizados.Esto significa que dispararán tan pronto como cambie una de las propiedades que observan.Debido a esto,es fácil introducir errores donde las propiedades no están sincronizadas todavía:</target>
        </trans-unit>
        <trans-unit id="0dcd8db6908df157727f62893615213904a58453" translate="yes" xml:space="preserve">
          <source>Observers never fire until after the initialization of an object is complete.</source>
          <target state="translated">Los observadores nunca disparan hasta que la inicialización de un objeto está completa.</target>
        </trans-unit>
        <trans-unit id="f5999f9bc2923f92d05e5b16aa536ea236796646" translate="yes" xml:space="preserve">
          <source>Observers should contain behavior that reacts to changes in another property. Observers are especially useful when you need to perform some behavior after a binding has finished synchronizing.</source>
          <target state="translated">Los observadores deben contener el comportamiento que reacciona a los cambios en otra propiedad.Los observadores son especialmente útiles cuando se necesita realizar algún comportamiento después de que una unión haya terminado de sincronizarse.</target>
        </trans-unit>
        <trans-unit id="e3b3d585c4b8fcab8db62fcf152d3716f7e04235" translate="yes" xml:space="preserve">
          <source>Observes all relevant properties and re-sends the wrapped record when a change occurs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e48525b5f6912ad099b4ea5d21fef8fb5a4b87c" translate="yes" xml:space="preserve">
          <source>Observing Property Changes</source>
          <target state="translated">Observación de los cambios en la propiedad</target>
        </trans-unit>
        <trans-unit id="49abd5a03a91a7274230eb2dc93800125ce2b2dc" translate="yes" xml:space="preserve">
          <source>Occasionally you may want to prevent the app from initializing during setup. This could enable extra configuration, or enable asserting prior to the app becoming ready.</source>
          <target state="translated">De vez en cuando puede que quieras evitar que la aplicación se inicialice durante la configuración.Esto podría habilitar una configuración extra,o permitir la afirmación antes de que la aplicación esté lista.</target>
        </trans-unit>
        <trans-unit id="5998747d026b2e17f67c947965996ccf455b6d78" translate="yes" xml:space="preserve">
          <source>Octane provides a set of new conventional APIs for creating and adding event handlers and actions to your components and templates:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="767e6f8a96c4ae852ffc759490d9c6e73f237304" translate="yes" xml:space="preserve">
          <source>Octane upgrade strategy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1004ee76d68d2440e2104c1c0f8c10a40b78ea70" translate="yes" xml:space="preserve">
          <source>Octane was a big shift in Ember's syntax, features, and mental models! If you are in the process of upgrading an existing app to use Octane patterns, check out our dedicated &lt;a href=&quot;current-edition&quot;&gt;Octane Update Guide&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ff2f4ac5135f40e96e90d7929e9e452ea04a10c" translate="yes" xml:space="preserve">
          <source>Often actions perform asynchronous tasks, such as making an ajax request to a server. Since actions are functions that can be passed in by a parent component, they are able to return values when called. The most common scenario is for an action to return a promise so that the component can handle the action's completion.</source>
          <target state="translated">A menudo las acciones realizan tareas asincrónicas,como hacer una solicitud de ajax a un servidor.Dado que las acciones son funciones que pueden ser pasadas por un componente padre,son capaces de devolver valores cuando son llamadas.El escenario más común es que una acción devuelva una promesa para que el componente pueda manejar la finalización de la acción.</target>
        </trans-unit>
        <trans-unit id="bc5a51fbbacf924217ea79e869e7741f73181329" translate="yes" xml:space="preserve">
          <source>Often this is unnecessary, but to ensure robust auto-tracking behavior it is advisable to mark tracked state appropriately wherever possible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89cb7859835dee6ef77b5791366871c69a2d100f" translate="yes" xml:space="preserve">
          <source>Often times, your components will just encapsulate certain snippets of Handlebars templates that you find yourself using over and over. In those cases, you do not need to write any JavaScript at all. Define the Handlebars template as described above and use the component that is created.</source>
          <target state="translated">A menudo,sus componentes sólo encapsulan ciertos fragmentos de plantillas de manillares que usted se encuentra usando una y otra vez.En esos casos,no necesitas escribir ningún Javascript en absoluto.Defina la plantilla del Manillar como se describe arriba y utilice el componente que se cree.</target>
        </trans-unit>
        <trans-unit id="5aaf5caa5b49b93e7119e86a70d536ce6664ca8a" translate="yes" xml:space="preserve">
          <source>Often you'll want to have a template that displays inside another template. For example, in a blogging application, instead of going from a list of blog posts to creating a new post, you might want to have the post creation page display next to the list.</source>
          <target state="translated">A menudo querrás tener una plantilla que se muestre dentro de otra plantilla.Por ejemplo,en una aplicación de blog,en lugar de pasar de una lista de entradas de blog a crear una nueva entrada,es posible que desee que la página de creación de entradas se muestre junto a la lista.</target>
        </trans-unit>
        <trans-unit id="62bb97c24abd34d344b7c7e101be577c8280b132" translate="yes" xml:space="preserve">
          <source>Often, interacting with a component will cause asynchronous behavior to occur, such as HTTP requests, or timers. The &lt;code&gt;wait&lt;/code&gt; helper is designed to handle these scenarios, by providing a hook to ensure assertions are made after all Ajax requests and timers are complete.</source>
          <target state="translated">A menudo, la interacci&amp;oacute;n con un componente har&amp;aacute; que se produzca un comportamiento asincr&amp;oacute;nico, como solicitudes HTTP o temporizadores. El asistente de &lt;code&gt;wait&lt;/code&gt; est&amp;aacute; dise&amp;ntilde;ado para manejar estos escenarios, proporcionando un enlace para garantizar que las afirmaciones se realicen despu&amp;eacute;s de que se completen todas las solicitudes y temporizadores de Ajax.</target>
        </trans-unit>
        <trans-unit id="474dbfb11cc1f0dc8c12a795f79767e73fcd2a35" translate="yes" xml:space="preserve">
          <source>Often, interacting with a component will cause asynchronous behavior to occur, such as HTTP requests, or timers. The module &lt;code&gt;@ember/test-helpers&lt;/code&gt; provides you with several &lt;a href=&quot;https://github.com/emberjs/ember-test-helpers/blob/master/API.md&quot;&gt;useful helpers&lt;/a&gt; that will allow you to wait for any asynchronous behavior to complete that is triggered by a DOM interaction induced by those. To use them in your tests, you can &lt;code&gt;await&lt;/code&gt; any of them to make sure that subsequent assertions are executed once the asynchronous behavior has fully settled:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50ea8ddf844ede9c0ec44349c06ad04be2998925" translate="yes" xml:space="preserve">
          <source>Often, services connect to third party APIs that are not desirable to include in automated tests. To stub these services we simply have to register a stub service that implements the same API, but does not have the dependencies that are problematic for the test suite.</source>
          <target state="translated">A menudo,los servicios se conectan a API de terceros que no es conveniente incluir en las pruebas automatizadas.Para dar de baja a estos servicios simplemente tenemos que registrar un servicio de baja que implemente la misma API,pero que no tenga las dependencias que son problemáticas para el conjunto de pruebas.</target>
        </trans-unit>
        <trans-unit id="0ce500ec9eb2726f6b12a95aabe734c404cd89eb" translate="yes" xml:space="preserve">
          <source>Often, the relationships in Ember Data applications will have an inverse. For example, imagine the following models are defined:</source>
          <target state="translated">A menudo,las relaciones en las aplicaciones de Ember Data tendrán un aspecto inverso.Por ejemplo,imaginemos que se definen los siguientes modelos:</target>
        </trans-unit>
        <trans-unit id="c1f047d78b062689ec81f8220591ae2637824e50" translate="yes" xml:space="preserve">
          <source>Often, you'll want a template to display data from a model. Loading the appropriate model is one job of a route.</source>
          <target state="translated">A menudo,usted querrá una plantilla para mostrar los datos de un modelo.Cargar el modelo apropiado es un trabajo de una ruta.</target>
        </trans-unit>
        <trans-unit id="d6ad0b4e0abbf304dee7a1c87c639ad156bc354a" translate="yes" xml:space="preserve">
          <source>Oftentimes we'll need to repeat a component multiple times in a row, with different data for each usage of the component. We can use the &lt;a href=&quot;https://api.emberjs.com/ember/release/classes/Ember.Templates.helpers/methods#each&quot;&gt;&lt;code&gt;{{#each}}&lt;/code&gt;&lt;/a&gt; helper to loop through lists of items like this, repeating a section of template for each item in the list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c3ffdb1abb5aafa99ed88d09e01065a059a00a9" translate="yes" xml:space="preserve">
          <source>On Component Destroy</source>
          <target state="translated">Sobre la destrucción de componentes</target>
        </trans-unit>
        <trans-unit id="7871fb44d093405668420a934d855c398825b852" translate="yes" xml:space="preserve">
          <source>On Initial Render</source>
          <target state="translated">En la presentación inicial...</target>
        </trans-unit>
        <trans-unit id="3b81a353de54248fb63ae86d5a82b1a0e405029d" translate="yes" xml:space="preserve">
          <source>On Mac and Linux, you can improve file watching performance by installing &lt;a href=&quot;https://facebook.github.io/watchman/docs/install.html&quot;&gt;Watchman&lt;/a&gt;.</source>
          <target state="translated">En Mac y Linux, puede mejorar el rendimiento de &lt;a href=&quot;https://facebook.github.io/watchman/docs/install.html&quot;&gt;visualizaci&amp;oacute;n de&lt;/a&gt; archivos instalando Watchman .</target>
        </trans-unit>
        <trans-unit id="58e13e632d3a342d5053b03478a93981c741b85e" translate="yes" xml:space="preserve">
          <source>On Re-Render</source>
          <target state="translated">En Re-Renderización</target>
        </trans-unit>
        <trans-unit id="79702120c7c021f8b09ee1afda618cd0df787a69" translate="yes" xml:space="preserve">
          <source>On a belongsTo relationship:</source>
          <target state="translated">en una relación de pertenencia:</target>
        </trans-unit>
        <trans-unit id="eb43fdb147dc2a32fcd7a2f1655715ba70c1d257" translate="yes" xml:space="preserve">
          <source>On a class-based helper, it may be useful to force a recomputation of that helpers value. This is akin to &lt;code&gt;rerender&lt;/code&gt; on a component.</source>
          <target state="translated">En un ayudante basado en clases, puede ser &amp;uacute;til forzar un rec&amp;aacute;lculo de ese valor de ayudante. Esto es similar a &lt;code&gt;rerender&lt;/code&gt; en un componente.</target>
        </trans-unit>
        <trans-unit id="6861bce269e523e12d7da65c6da77edffe736f32" translate="yes" xml:space="preserve">
          <source>On all newer browsers, you only need to use this method to retrieve properties if the property might not be defined on the object and you want to respect the &lt;code&gt;unknownProperty&lt;/code&gt; handler. Otherwise you can ignore this method.</source>
          <target state="translated">En todos los navegadores m&amp;aacute;s nuevos, solo necesita usar este m&amp;eacute;todo para recuperar propiedades si es posible que la propiedad no est&amp;eacute; definida en el objeto y desea respetar el controlador &lt;code&gt;unknownProperty&lt;/code&gt; . De lo contrario, puede ignorar este m&amp;eacute;todo.</target>
        </trans-unit>
        <trans-unit id="aeba23ad12f082d9bc5f8ea964d08e7ff1c2466b" translate="yes" xml:space="preserve">
          <source>On an Apache server, the rewrite engine (mod-rewrite) must be enabled in order for Ember routing to work properly. If you upload your dist folder, going to your main URL works, but when you try to go to a route such as '{main URL}/example' and it returns 404, your server has not been configured for &quot;friendly&quot; URLs.</source>
          <target state="translated">En un servidor Apache,el motor de reescritura (mod-rewrite)debe estar habilitado para que el enrutamiento de Ember funcione correctamente.Si subes tu carpeta dist,ir a tu URL principal funciona,pero cuando tratas de ir a una ruta como '{Ulumna principal}/ejemplo' y devuelve 404,tu servidor no ha sido configurado para URLs &quot;amigables&quot;.</target>
        </trans-unit>
        <trans-unit id="a9188633f146f1828663d4971118211e9bc5e119" translate="yes" xml:space="preserve">
          <source>On each call to the &lt;code&gt;normalize&lt;/code&gt; method, the third parameter (&lt;code&gt;prop&lt;/code&gt;) is always one of the keys that were in the original payload or in the result of another normalization as &lt;code&gt;normalizeResponse&lt;/code&gt;.</source>
          <target state="translated">En cada llamada al m&amp;eacute;todo &lt;code&gt;normalize&lt;/code&gt; , el tercer par&amp;aacute;metro ( &lt;code&gt;prop&lt;/code&gt; ) es siempre una de las claves que estaban en la carga &amp;uacute;til original o en el resultado de otra normalizaci&amp;oacute;n como &lt;code&gt;normalizeResponse&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8c9c6f59e26d3f950eadfc25af534272ba19cb77" translate="yes" xml:space="preserve">
          <source>On success, the request promise will be resolved with the full response payload.</source>
          <target state="translated">En caso de éxito,la promesa de la solicitud se resolverá con la carga de respuesta completa.</target>
        </trans-unit>
        <trans-unit id="78f324f1e8f3f3b4f5bff5c1b66a78f5e0759ff5" translate="yes" xml:space="preserve">
          <source>On the left side of each Guides page is a table of contents, organized into sections that can be expanded to show the topics they cover. Both the sections and the topics within each section are ordered from basic to advanced concepts.</source>
          <target state="translated">En el lado izquierdo de cada página de las Guías hay un índice,organizado en secciones que pueden ser ampliadas para mostrar los temas que cubren.Tanto las secciones como los temas dentro de cada sección están ordenados desde los conceptos básicos hasta los avanzados.</target>
        </trans-unit>
        <trans-unit id="e3e4d1cf6f4dc0ce1d411fc45282d9de13cdd984" translate="yes" xml:space="preserve">
          <source>On the other hand, if you're looking at JavaScript documentation that tells you to set a property on an element object, you can use &lt;code&gt;{{prop&lt;/code&gt; to set the prop</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e32c960456f9b43f9166f605a702a559006007ce" translate="yes" xml:space="preserve">
          <source>Once a factory is registered, it can be &quot;injected&quot; where it is needed.</source>
          <target state="translated">Una vez que una fábrica está registrada,puede ser &quot;inyectada&quot; donde se necesite.</target>
        </trans-unit>
        <trans-unit id="f9cbd543588086a92219171a559bd29b089ae9bc" translate="yes" xml:space="preserve">
          <source>Once defined, a class exists like a variable does in the current scope:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdec5004fb5c33e3b2c477c863020702ae402501" translate="yes" xml:space="preserve">
          <source>Once injected into a component, a service can also be used in the template. Note &lt;code&gt;cart&lt;/code&gt; being used below to get data from the cart.</source>
          <target state="translated">Una vez inyectado en un componente, tambi&amp;eacute;n se puede utilizar un servicio en la plantilla. Tenga en cuenta que el &lt;code&gt;cart&lt;/code&gt; se utiliza a continuaci&amp;oacute;n para obtener datos del carrito.</target>
        </trans-unit>
        <trans-unit id="ccee3bf08a6536ea2be6c885ed850fbb3a399af9" translate="yes" xml:space="preserve">
          <source>Once inside the &lt;code&gt;articles&lt;/code&gt; route, any changes to the &lt;code&gt;category&lt;/code&gt; property on &lt;code&gt;controller:articles&lt;/code&gt; will cause the URL to update the query param. By default, a query param property change won't cause a full router transition (i.e. it won't call &lt;code&gt;model&lt;/code&gt; hooks and &lt;code&gt;setupController&lt;/code&gt;, etc.); it will only update the URL.</source>
          <target state="translated">Una vez dentro de la ruta de &lt;code&gt;articles&lt;/code&gt; , cualquier cambio en la propiedad de &lt;code&gt;category&lt;/code&gt; en el &lt;code&gt;controller:articles&lt;/code&gt; har&amp;aacute; que la URL actualice el par&amp;aacute;metro de consulta. De forma predeterminada, un cambio en la propiedad del par&amp;aacute;metro de consulta no provocar&amp;aacute; una transici&amp;oacute;n completa del enrutador (es decir, no llamar&amp;aacute; a los hooks del &lt;code&gt;model&lt;/code&gt; o y &lt;code&gt;setupController&lt;/code&gt; , etc.); solo actualizar&amp;aacute; la URL.</target>
        </trans-unit>
        <trans-unit id="457d77836a439fdff49c3b23b258781eb29f6526" translate="yes" xml:space="preserve">
          <source>Once installed, go to an Ember application, open the Developer Tools, and click on the &lt;code&gt;Ember&lt;/code&gt; tab at the far right.</source>
          <target state="translated">Una vez instalado, vaya a una aplicaci&amp;oacute;n Ember, abra las Herramientas de desarrollo y haga clic en la pesta&amp;ntilde;a &lt;code&gt;Ember&lt;/code&gt; en el extremo derecho.</target>
        </trans-unit>
        <trans-unit id="d4986dfc0d963c8eec63b7840ddbc1ff83a864a8" translate="yes" xml:space="preserve">
          <source>Once installed, go to an Ember application, open the Developer Tools, and click on the &lt;code&gt;Ember&lt;/code&gt; tab.</source>
          <target state="translated">Una vez instalado, vaya a una aplicaci&amp;oacute;n Ember, abra las Herramientas de desarrollo y haga clic en la pesta&amp;ntilde;a &lt;code&gt;Ember&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="164742e39c4ca64cff90a3cf61eb5e20c381b0f7" translate="yes" xml:space="preserve">
          <source>Once installed, the addon works in 3 steps:</source>
          <target state="translated">Una vez instalado,el addon funciona en 3 pasos:</target>
        </trans-unit>
        <trans-unit id="cd5d0a583c546e922e7dd07f13b00126893c9cbb" translate="yes" xml:space="preserve">
          <source>Once loaded, a service will persist until the application exits.</source>
          <target state="translated">Una vez cargado,un servicio persistirá hasta que la aplicación salga.</target>
        </trans-unit>
        <trans-unit id="9b7473ccb2808c3e1202cafe608e15eb9e87bf60" translate="yes" xml:space="preserve">
          <source>Once open, remove the component labeled &lt;code&gt;{{welcome-page}}&lt;/code&gt;. The application should now be a completely blank canvas to build our application on.</source>
          <target state="translated">Una vez abierto, elimine el componente etiquetado &lt;code&gt;{{welcome-page}}&lt;/code&gt; . La aplicaci&amp;oacute;n ahora deber&amp;iacute;a ser un lienzo completamente en blanco para construir nuestra aplicaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="1eca8732180d60ac42bab4f21f28e52ea9a48daf" translate="yes" xml:space="preserve">
          <source>Once rendered an element's &lt;code&gt;elementId&lt;/code&gt; is considered immutable and you should never change it. If you need to compute a dynamic value for the &lt;code&gt;elementId&lt;/code&gt;, you should do this when the component or element is being instantiated:</source>
          <target state="translated">Una vez renderizado, el &lt;code&gt;elementId&lt;/code&gt; de un elemento se considera inmutable y nunca debe cambiarlo. Si necesita calcular un valor din&amp;aacute;mico para el &lt;code&gt;elementId&lt;/code&gt; , debe hacerlo cuando se instancia el componente o elemento:</target>
        </trans-unit>
        <trans-unit id="82a9545fb47f95fd5c00cdd70a3ecca8110ee2b0" translate="yes" xml:space="preserve">
          <source>Once the &lt;code&gt;DEBUG&lt;/code&gt; value is set to &lt;code&gt;true&lt;/code&gt;, when you are at a breakpoint you can navigate back up the stack to the &lt;code&gt;flush&lt;/code&gt; method in and check the &lt;code&gt;errorRecordedForStack.stack&lt;/code&gt; value, which will be the captured stack when this job was scheduled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4267347d40eb36c6cbbed253186fd37bf3007beb" translate="yes" xml:space="preserve">
          <source>Once the beta cycle has completed, the next stable release will include any features that were enabled during the beta cycle. At this point the feature flags will be removed from the canary and future beta branches, and the feature becomes part of the framework.</source>
          <target state="translated">Una vez que el ciclo beta se haya completado,la próxima versión estable incluirá cualquier característica que se haya habilitado durante el ciclo beta.En este punto,las banderas de las características serán eliminadas de las ramas canarias y de las futuras versiones beta,y la característica pasará a formar parte del marco de trabajo.</target>
        </trans-unit>
        <trans-unit id="56051bb2517e89df5d91846d46bbeb555a7edbb5" translate="yes" xml:space="preserve">
          <source>Once the main transition into &lt;code&gt;slow-model&lt;/code&gt; completes, the &lt;code&gt;loading&lt;/code&gt; route will be exited and the transition to &lt;code&gt;slow-model&lt;/code&gt; will continue.</source>
          <target state="translated">Una vez que se complete la transici&amp;oacute;n principal al &lt;code&gt;slow-model&lt;/code&gt; , se saldr&amp;aacute; de la ruta de &lt;code&gt;loading&lt;/code&gt; y continuar&amp;aacute; la transici&amp;oacute;n al &lt;code&gt;slow-model&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d59a62a3f97ccc2bfdeef6fc089edaeadc6ceb33" translate="yes" xml:space="preserve">
          <source>Once the proxied promise has settled this will become &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">Una vez que se haya establecido la promesa representada, esto se volver&amp;aacute; &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4398fd5039ae29bd335437e10b017a202f1021a5" translate="yes" xml:space="preserve">
          <source>Once the proxied promise has settled this will become &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">Una vez que se haya establecido la promesa representada, esto se har&amp;aacute; &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4688c68d00bda5e6b4d6f0282ecb2274e65f3aa4" translate="yes" xml:space="preserve">
          <source>Once the request to the server returns with a JSON payload for the requested record, the adapter resolves the promise it returned to the store with the JSON.</source>
          <target state="translated">Una vez que la solicitud al servidor vuelve con una carga de JSON para el registro solicitado,el adaptador resuelve la promesa de que regresó a la tienda con el JSON.</target>
        </trans-unit>
        <trans-unit id="035a2dea0fa0be24848d3ad0692450c6fa370306" translate="yes" xml:space="preserve">
          <source>Once the routes are defined, how do we go about transitioning between them within our application? It depends on where the transition needs to take place:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7341d0efec76622cf31b57420e0efd9cc42ff86" translate="yes" xml:space="preserve">
          <source>Once the stub service is registered the test simply needs to check that the stub data that is being returned from the service is reflected in the component output.</source>
          <target state="translated">Una vez que se registra el servicio de talones,la prueba sólo necesita comprobar que los datos de los talones que se devuelven del servicio se reflejan en la salida del componente.</target>
        </trans-unit>
        <trans-unit id="f005b56256f8b41ba8bc28347de5eacad0139afb" translate="yes" xml:space="preserve">
          <source>Once the stub service is registered, the test needs to check that the stub data from the service is reflected in the component output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a047160287303cb08554e10e09d6a4704cbf7198" translate="yes" xml:space="preserve">
          <source>Once we &lt;code&gt;await&lt;/code&gt; the execution of the asynchronous helpers this way, we will ensure that all subsequent assertions are always made &lt;strong&gt;after&lt;/strong&gt; the previous steps in the test have completed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f0dda9c0cb3a268c5b42422c783a5ad7cd0e1d9" translate="yes" xml:space="preserve">
          <source>Once we create this &quot;button with confirmation&quot; component, we want to be able to reuse it all over our application.</source>
          <target state="translated">Una vez que creemos este componente de &quot;botón con confirmación&quot;,queremos ser capaces de reutilizarlo en toda nuestra aplicación.</target>
        </trans-unit>
        <trans-unit id="9fbeae9a67f6bd9c4e25f14b9f726db44131dc7a" translate="yes" xml:space="preserve">
          <source>Once we have a new project in place, we can confirm everything is working by starting the Ember development server:</source>
          <target state="translated">Una vez que tengamos un nuevo proyecto en marcha,podemos confirmar que todo funciona iniciando el servidor de desarrollo de Ember:</target>
        </trans-unit>
        <trans-unit id="23b19ac1ee33b1618505282400756773afbf338c" translate="yes" xml:space="preserve">
          <source>Once yielded, the data can be accessed by the wrapped content by referencing the &lt;code&gt;post&lt;/code&gt; variable. Now a component called &lt;code&gt;markdown-style&lt;/code&gt; will be rendered in &lt;code&gt;{{post.body}}&lt;/code&gt;.</source>
          <target state="translated">Una vez generados, el contenido empaquetado puede acceder a los datos haciendo referencia a la variable de &lt;code&gt;post&lt;/code&gt; . Ahora un componente llamado &lt;code&gt;markdown-style&lt;/code&gt; se renderizar&amp;aacute; en &lt;code&gt;{{post.body}}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a140d5eab4a5bae85d89e8c5e6d02aa38933424a" translate="yes" xml:space="preserve">
          <source>Once you are logged-in to your Netlify account and in the &quot;Sites&quot; section, you should see the Netlify drag and drop area</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be2dc254dc6c7464981de655c454c5b817215603" translate="yes" xml:space="preserve">
          <source>Once you call this method, any time the key's value is set, your observer will be notified. Note that the observers are triggered any time the value is set, regardless of whether it has actually changed. Your observer should be prepared to handle that.</source>
          <target state="translated">Una vez que llame a este método,en cualquier momento que se establezca el valor de la llave,su observador será notificado.Tenga en cuenta que los observadores se activan cada vez que se fija el valor,independientemente de si ha cambiado realmente.Su observador debe estar preparado para manejar eso.</target>
        </trans-unit>
        <trans-unit id="c2c34893439eddc0041c09c4f5e714db935f2904" translate="yes" xml:space="preserve">
          <source>Once you click the &quot;Deploy site&quot; button, you will be taken to your website &quot;Overview&quot; and you should see the status of your deployment</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9adc765189962af6b2b054d5d23f3d48e08dcdbd" translate="yes" xml:space="preserve">
          <source>Once you have an understanding of Ember Data, you will have a much better way to manage the complexity of data loading in your application. This will allow your code to evolve and grow, with better maintainability.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e423cbca6b9df549f466352ce6ab4bd43120115" translate="yes" xml:space="preserve">
          <source>Once you have an understanding of Ember Data, you will have a much better way to manage the complexity of data loading in your application. This will allow your code to evolve without becoming a mess.</source>
          <target state="translated">Una vez que entienda los Datos Ember,tendrá una forma mucho mejor de manejar la complejidad de la carga de datos en su aplicación.Esto permitirá que su código evolucione sin convertirse en un desastre.</target>
        </trans-unit>
        <trans-unit id="e7879c2db8a502cf08ab955e6b7189ce9ea7ec40" translate="yes" xml:space="preserve">
          <source>Once you have built your &lt;code&gt;deprecation-workflow.js&lt;/code&gt; file and your deprecations are silenced, you can begin to work on deprecations one by one at your own leisure. To find deprecations, you can change the handler value of that message to either &lt;code&gt;throw&lt;/code&gt; or &lt;code&gt;log&lt;/code&gt;. Throw will throw an actual exception when the deprecation is encountered, so that tests that use the deprecated feature will fail. Choosing to log will simply log a warning to the console as before. These settings give you some flexibility on how you want to go about fixing the deprecations.</source>
          <target state="translated">Una vez que haya creado su archivo &lt;code&gt;deprecation-workflow.js&lt;/code&gt; y sus desaprobaciones est&amp;eacute;n silenciadas, puede comenzar a trabajar en las desaprobaciones una por una a su propio ritmo. Para encontrar desaprobaciones, puede cambiar el valor del controlador de ese mensaje a &lt;code&gt;throw&lt;/code&gt; o &lt;code&gt;log&lt;/code&gt; . Throw lanzar&amp;aacute; una excepci&amp;oacute;n real cuando se encuentre la obsolescencia, de modo que las pruebas que usen la caracter&amp;iacute;stica obsoleta fallar&amp;aacute;n. Si elige iniciar sesi&amp;oacute;n, simplemente registrar&amp;aacute; una advertencia en la consola como antes. Estas configuraciones le brindan cierta flexibilidad sobre c&amp;oacute;mo desea solucionar las desaprobaciones.</target>
        </trans-unit>
        <trans-unit id="297de7e31394aa2c72d2a09e3d3842f25dc27bdc" translate="yes" xml:space="preserve">
          <source>Once you have defined a class, you can create new &lt;em&gt;instances&lt;/em&gt; of that class by calling its &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Object.html#method_create&quot;&gt;&lt;code&gt;create()&lt;/code&gt;&lt;/a&gt; method. Any methods, properties and computed properties you defined on the class will be available to instances:</source>
          <target state="translated">Una vez que haya definido una clase, puede crear nuevas &lt;em&gt;instancias&lt;/em&gt; de esa clase llamando a su m&amp;eacute;todo &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Object.html#method_create&quot;&gt; &lt;code&gt;create()&lt;/code&gt; &lt;/a&gt; . Todos los m&amp;eacute;todos, propiedades y propiedades calculadas que defini&amp;oacute; en la clase estar&amp;aacute;n disponibles para las instancias:</target>
        </trans-unit>
        <trans-unit id="0ae78f9453ab89e2b98b40a513549fd747f33aca" translate="yes" xml:space="preserve">
          <source>Once you have defined a route with a dynamic segment, Ember will extract the value of the dynamic segment from the URL for you and pass them as a hash to the &lt;code&gt;model&lt;/code&gt; hook as the first argument:</source>
          <target state="translated">Una vez que haya definido una ruta con un segmento din&amp;aacute;mico, Ember extraer&amp;aacute; el valor del segmento din&amp;aacute;mico de la URL por usted y lo pasar&amp;aacute; como un hash al gancho del &lt;code&gt;model&lt;/code&gt; o como primer argumento:</target>
        </trans-unit>
        <trans-unit id="d56fddae181db8c2b78a84601bce87e7de8acc10" translate="yes" xml:space="preserve">
          <source>Once you have installed canary, feature-flags can be activated at build-time by an environment variable or at runtime using &lt;code&gt;window.EmberDataENV&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa5d0d138ce115e372b6db1d89430c67ac960c72" translate="yes" xml:space="preserve">
          <source>Once you have successfully connected your GitHub account with Netlify, you should see a list of repositories to choose from. Select or search for your GitHub repository that you wish to deploy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37dc9e0949005db31c3bef8749a046174ea22093" translate="yes" xml:space="preserve">
          <source>Once you have these two methods implemented, apply the &lt;code&gt;Ember.Enumerable&lt;/code&gt; mixin to your class and you will be able to enumerate the contents of your object like any other collection.</source>
          <target state="translated">Una vez que haya implementado estos dos m&amp;eacute;todos, aplique el mixin &lt;code&gt;Ember.Enumerable&lt;/code&gt; a su clase y podr&amp;aacute; enumerar el contenido de su objeto como cualquier otra colecci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="b15e1b20d0b0af628b5179c016082022baa8c7ff" translate="yes" xml:space="preserve">
          <source>Once you have upgraded an app's version, some new features may be available out of the box. On the other hand, some features will require that you enable them specifically in your app's configuration, since they may change the app's default behavior.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33ebab4951d433891c0e76e835d2372486c21e1f" translate="yes" xml:space="preserve">
          <source>Once you see &quot;Your site is deployed&quot; as shown above, your website is now live and you can click on the link provided above the &quot;Getting started&quot; section to view your site</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b9d85c5deeeb3704876076fe0a38dc0383e0843" translate="yes" xml:space="preserve">
          <source>Once you see a feature that you would like to toggle for your project you can run one of two commands, &lt;code&gt;ember feature:enable &amp;lt;feature&amp;gt;&lt;/code&gt; and &lt;code&gt;ember feature:disable &amp;lt;feature&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d318d88b083e6a740e5695fcce549c330e442a4c" translate="yes" xml:space="preserve">
          <source>Once you've installed Ember CLI via npm, you will have access to a new &lt;code&gt;ember&lt;/code&gt; command in your terminal. You can use the &lt;code&gt;ember new&lt;/code&gt; command to create a new application.</source>
          <target state="translated">Una vez que haya instalado Ember CLI a trav&amp;eacute;s de npm, tendr&amp;aacute; acceso a un nuevo comando de &lt;code&gt;ember&lt;/code&gt; en su terminal. Puede utilizar el comando &lt;code&gt;ember new&lt;/code&gt; para crear una nueva aplicaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="ed008ddc2ecf4254729fcc7abac70a4419caad53" translate="yes" xml:space="preserve">
          <source>Once you've loaded your models from storage, components know how to translate model data into a UI that your user can interact with. For more information about how components get model data, see the &lt;a href=&quot;../routing/specifying-a-routes-model&quot;&gt;Specifying a Route's Model&lt;/a&gt; guide.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fae22ba23783545c09734f8348d02996c94f94d2" translate="yes" xml:space="preserve">
          <source>Once you've loaded your models from storage, components know how to translate model data into a UI that your user can interact with. For more information about how components get model data, see the &lt;a href=&quot;https://guides.emberjs.com/routing/specifying-a-routes-model&quot;&gt;Specifying a Route's Model&lt;/a&gt; guide.</source>
          <target state="translated">Una vez que haya cargado sus modelos desde el almacenamiento, los componentes saben c&amp;oacute;mo traducir los datos del modelo en una interfaz de usuario con la que su usuario pueda interactuar. Para obtener m&amp;aacute;s informaci&amp;oacute;n acerca de c&amp;oacute;mo los componentes obtienen datos del modelo, consulte la gu&amp;iacute;a &lt;a href=&quot;https://guides.emberjs.com/routing/specifying-a-routes-model&quot;&gt;Especificaci&amp;oacute;n de un modelo de ruta&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ec5fbc573c5964663edea838c458902fcef9408a" translate="yes" xml:space="preserve">
          <source>Once you've loaded your models from storage, components know how to translate model data into a UI that your user can interact with. For more information about how components get model data, see the &lt;a href=&quot;https://guides.emberjs.com/routing/specifying-a-routes-model/&quot;&gt;Specifying a Route's Model&lt;/a&gt; guide.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="946fb83a5b5f0d85f4cd4d0947e1d59cebfd37a1" translate="yes" xml:space="preserve">
          <source>Once you've removed deprecations that you may not need to immediately address, you may still be left with many deprecations. Also, your remaining deprecations may only occur in very specific scenarios that are not obvious. How then should you go about finding and fixing these? This is where the &lt;a href=&quot;http://emberobserver.com/addons/ember-cli-deprecation-workflow&quot;&gt;ember-cli-deprecation-workflow&lt;/a&gt; addon can be extremely helpful.</source>
          <target state="translated">Una vez que haya eliminado las bajas que quiz&amp;aacute;s no necesite abordar de inmediato, es posible que a&amp;uacute;n le queden muchas bajas. Adem&amp;aacute;s, es posible que las bajas restantes solo ocurran en escenarios muy espec&amp;iacute;ficos que no son obvios. Entonces, &amp;iquest;c&amp;oacute;mo deber&amp;iacute;a buscar y solucionar estos problemas? Aqu&amp;iacute; es donde el complemento &lt;a href=&quot;http://emberobserver.com/addons/ember-cli-deprecation-workflow&quot;&gt;ember-cli-deprecation-workflow&lt;/a&gt; puede ser extremadamente &amp;uacute;til.</target>
        </trans-unit>
        <trans-unit id="9b5a236db997313e379baebf8b99be646172bb5f" translate="yes" xml:space="preserve">
          <source>One benefit of the above approach compared to using &lt;code&gt;next&lt;/code&gt; is that you will be able to perform DOM/CSS operations before unprocessed elements are rendered to the screen, which may prevent flickering or other artifacts caused by delaying processing until after rendering.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d393feab7e66d7efa30902c007f830f56512202" translate="yes" xml:space="preserve">
          <source>One benefit of the above approach compared to using &lt;code&gt;run.next&lt;/code&gt; is that you will be able to perform DOM/CSS operations before unprocessed elements are rendered to the screen, which may prevent flickering or other artifacts caused by delaying processing until after rendering.</source>
          <target state="translated">Un beneficio del enfoque anterior en comparaci&amp;oacute;n con el uso de &lt;code&gt;run.next&lt;/code&gt; es que podr&amp;aacute; realizar operaciones DOM / CSS antes de que los elementos no procesados ​​se procesen en la pantalla, lo que puede evitar el parpadeo u otros artefactos causados ​​por retrasar el procesamiento hasta despu&amp;eacute;s de la renderizaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="2017e7fd0f2a575b1a1bb39b33094a703f7dc923" translate="yes" xml:space="preserve">
          <source>One common example is when overriding the &lt;a href=&quot;http://emberjs.com/api/data/classes/DS.JSONAPISerializer.html#method_normalizeResponse&quot;&gt;&lt;code&gt;normalizeResponse()&lt;/code&gt;&lt;/a&gt; hook in one of Ember-Data's serializers.</source>
          <target state="translated">Un ejemplo com&amp;uacute;n es cuando se reemplaza el enlace &lt;a href=&quot;http://emberjs.com/api/data/classes/DS.JSONAPISerializer.html#method_normalizeResponse&quot;&gt; &lt;code&gt;normalizeResponse()&lt;/code&gt; &lt;/a&gt; en uno de los serializadores de Ember-Data.</target>
        </trans-unit>
        <trans-unit id="24d60b4229d3dd8c3b6979867083b6a314e88b0d" translate="yes" xml:space="preserve">
          <source>One common example is when overriding the &lt;a href=&quot;https://api.emberjs.com/ember-data/release/classes/JSONAPISerializer/methods#normalizeResponse&quot;&gt;&lt;code&gt;normalizeResponse()&lt;/code&gt;&lt;/a&gt; hook in one of Ember Data's serializers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef72e13fa9c7abd23262b84daf45e66eae37d8b2" translate="yes" xml:space="preserve">
          <source>One common way of building web applications is to tightly couple user interface elements to data fetching. For example, imagine you are writing the admin section of a blogging app, which has a feature that lists the drafts for the currently logged in user.</source>
          <target state="translated">Una forma común de construir aplicaciones web es acoplar estrechamente los elementos de la interfaz de usuario a la búsqueda de datos.Por ejemplo,imagina que estás escribiendo la sección de administración de una aplicación de blog,que tiene una función que enumera los borradores para el usuario actualmente conectado.</target>
        </trans-unit>
        <trans-unit id="1fd57542548476a402566a40e7028672d63f27fb" translate="yes" xml:space="preserve">
          <source>One detail to keep in mind is that both branches of the &lt;code&gt;if&lt;/code&gt; helper will be evaluated, so if you have &lt;code&gt;{{if condition &quot;foo&quot; (expensive-operation &quot;bar&quot;)&lt;/code&gt;, &lt;code&gt;expensive-operation&lt;/code&gt; will always calculate.</source>
          <target state="translated">Un detalle a tener en cuenta es que se evaluar&amp;aacute;n ambas ramas del ayudante &lt;code&gt;if&lt;/code&gt; , por lo que si tiene &lt;code&gt;{{if condition &quot;foo&quot; (expensive-operation &quot;bar&quot;)&lt;/code&gt; &lt;code&gt;expensive-operation&lt;/code&gt; ) , la operaci&amp;oacute;n cara siempre calcular&amp;aacute;.</target>
        </trans-unit>
        <trans-unit id="921f9a649da7d3ee552d9bb46da95892c7504e20" translate="yes" xml:space="preserve">
          <source>One downside to returning a cached record is you may find the state of the data has changed since it was first loaded into the store's identity map. In order to prevent this stale data from being a problem for long, Ember Data will automatically make a request in the background each time a cached record is returned from the store. When the new data comes in, the record is updated, and if there have been changes to the record since the initial render, the template is re-rendered with the new information.</source>
          <target state="translated">Una desventaja de devolver un registro en caché es que puedes encontrar que el estado de los datos ha cambiado desde que se cargó por primera vez en el mapa de identidad de la tienda.Para evitar que estos datos rancios sean un problema por mucho tiempo,Ember Data hará una solicitud automáticamente en segundo plano cada vez que se devuelva un registro en caché de la tienda.Cuando llegan los nuevos datos,el registro se actualiza,y si ha habido cambios en el registro desde el renderizado inicial,la plantilla se vuelve a renderizar con la nueva información.</target>
        </trans-unit>
        <trans-unit id="3e384e5b15606da3e69fd4ec7b0e22e51cb4eec4" translate="yes" xml:space="preserve">
          <source>One example is to add computed properties to your component:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e6e9d09355e2e6fdfee3fc6889b073f2cc7d11f" translate="yes" xml:space="preserve">
          <source>One job of a route handler is rendering the appropriate template to the screen.</source>
          <target state="translated">Una de las tareas de un manejador de rutas es mostrar la plantilla apropiada en la pantalla.</target>
        </trans-unit>
        <trans-unit id="023b2e22d9619644336d8abd002c12ec4e3957f7" translate="yes" xml:space="preserve">
          <source>One nice thing about this model is that if you try to set a value to the same thing as last time, Ember (through HTMLBars) will avoid doing any work on the DOM.</source>
          <target state="translated">Una cosa buena de este modelo es que si tratas de poner un valor a lo mismo que la última vez,Ember (a través de HTMLBars)evitará hacer cualquier trabajo en el DOM.</target>
        </trans-unit>
        <trans-unit id="2c25bd1df98cee9098780b27f236f384e2f2dd2d" translate="yes" xml:space="preserve">
          <source>One of the major issues in testing web applications is that all code is event-driven and therefore has the potential to be asynchronous (i.e. output can happen out of sequence from input). This has the ramification that code can be executed in any order.</source>
          <target state="translated">Una de las principales cuestiones que se plantean al probar aplicaciones web es que todo el código está impulsado por eventos y,por lo tanto,tiene el potencial de ser asíncrono (es decir,la salida puede producirse fuera de la secuencia de la entrada).Esto tiene la ramificación de que el código puede ser ejecutado en cualquier orden.</target>
        </trans-unit>
        <trans-unit id="f22cb0dab0dc2d88fe000d648a9d5f8ff6c7e07a" translate="yes" xml:space="preserve">
          <source>One of the methods is &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Route.html#method_transitionTo&quot;&gt;&lt;code&gt;transitionTo()&lt;/code&gt;&lt;/a&gt;. Calling &lt;code&gt;transitionTo()&lt;/code&gt; from a route or &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Controller.html#method_transitionToRoute&quot;&gt;&lt;code&gt;transitionToRoute()&lt;/code&gt;&lt;/a&gt; from a controller will stop any transitions currently in progress and start a new one, functioning as a redirect. &lt;code&gt;transitionTo()&lt;/code&gt; behaves exactly like the &lt;a href=&quot;https://guides.emberjs.com/templates/links&quot;&gt;link-to&lt;/a&gt; helper.</source>
          <target state="translated">Uno de los m&amp;eacute;todos es &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Route.html#method_transitionTo&quot;&gt; &lt;code&gt;transitionTo()&lt;/code&gt; &lt;/a&gt; . Llamar a &lt;code&gt;transitionTo()&lt;/code&gt; desde una ruta o a &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Controller.html#method_transitionToRoute&quot;&gt; &lt;code&gt;transitionToRoute()&lt;/code&gt; &lt;/a&gt; desde un controlador detendr&amp;aacute; cualquier transici&amp;oacute;n en curso y comenzar&amp;aacute; una nueva, que funciona como una redirecci&amp;oacute;n. &lt;code&gt;transitionTo()&lt;/code&gt; comporta exactamente como el asistente de &lt;a href=&quot;https://guides.emberjs.com/templates/links&quot;&gt;enlace&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d7fa6909d82a904c6cff8f9a667268e7d78933f3" translate="yes" xml:space="preserve">
          <source>One of the methods is &lt;a href=&quot;https://api.emberjs.com/ember/release/classes/Route/methods#transitionTo&quot;&gt;&lt;code&gt;transitionTo()&lt;/code&gt;&lt;/a&gt;. Calling &lt;code&gt;transitionTo()&lt;/code&gt; from a route or &lt;a href=&quot;https://api.emberjs.com/ember/release/classes/Controller/methods#transitionToRoute&quot;&gt;&lt;code&gt;transitionToRoute()&lt;/code&gt;&lt;/a&gt; from a controller will stop any transitions currently in progress and start a new one, functioning as a redirect. &lt;code&gt;transitionTo()&lt;/code&gt; behaves exactly like the &lt;a href=&quot;https://guides.emberjs.com/templates/links/&quot;&gt;&lt;code&gt;LinkTo&lt;/code&gt;&lt;/a&gt; helper.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d247fef3beb6617e410a9310b1691023a273f3f" translate="yes" xml:space="preserve">
          <source>One of the responsibilities of a route is to load a model.</source>
          <target state="translated">Una de las responsabilidades de una ruta es cargar un modelo.</target>
        </trans-unit>
        <trans-unit id="4db10af2705c05b2352d5ae0b313303226020bab" translate="yes" xml:space="preserve">
          <source>One of the ways that Ember releases guarantee stability is by following &lt;a href=&quot;https://semver.org/&quot;&gt;Semantic Versioning&lt;/a&gt; (SemVer). For the Ember project this means that any feature that is to be removed must first be deprecated, and only removed when a major version is released. It also means that new features are introduced in a backwards compatible way.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc339cc993a1d0dfdea6070d19f55e3e10babcc4" translate="yes" xml:space="preserve">
          <source>One or more Mixin classes</source>
          <target state="translated">Una o más clases de Mixin</target>
        </trans-unit>
        <trans-unit id="a4387dcdd8c21d687d201ae902808eab655aaeb6" translate="yes" xml:space="preserve">
          <source>One property can be mapped on to another by placing a &quot;:&quot; between the source property and the destination property:</source>
          <target state="translated">Una propiedad puede ser mapeada en otra colocando un &quot;:&quot; entre la propiedad de origen y la de destino:</target>
        </trans-unit>
        <trans-unit id="ddd8ba8819277c241acfb17d9b513165c7a86664" translate="yes" xml:space="preserve">
          <source>One scenario would be to camelCase the meta keys of your payload. The example below shows how this could be done using &lt;code&gt;normalizeArrayResponse&lt;/code&gt; and &lt;code&gt;extractRelationship&lt;/code&gt;.</source>
          <target state="translated">Un escenario ser&amp;iacute;a camelCase con las meta claves de su carga &amp;uacute;til. El siguiente ejemplo muestra c&amp;oacute;mo se puede hacer esto usando &lt;code&gt;normalizeArrayResponse&lt;/code&gt; y &lt;code&gt;extractRelationship&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="467f5c1f11f4fc8b09ce3a5b43a54f0e1c05570d" translate="yes" xml:space="preserve">
          <source>One simple way to add page titles is to create a &lt;code&gt;title&lt;/code&gt; helper:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97e7553844cde0e577049d9ab7cc94f72565fa90" translate="yes" xml:space="preserve">
          <source>One thing that makes Ember special is that every app you create has a &lt;em&gt;lot&lt;/em&gt; in common with apps that other people have made. This means that chances are good that you can connect with other developers who share both your interests and technical challenges. Visit the &lt;a href=&quot;https://emberjs.com/community/&quot;&gt;Ember Community page&lt;/a&gt; to learn about the ways you can get connected. Find a nearby meetup, ask questions, follow a newsletter, and more! We hope to see you around!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="867d5906f67405a74420e9289d5c01bc85d7ba3c" translate="yes" xml:space="preserve">
          <source>One way to organize is to mimic the folder structure of &lt;code&gt;app/routes&lt;/code&gt;. In other words, for every route, you create an application test file. If this would result in too many files, you can instead create a file for each parent route.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa8da0e5204ecf2e3129f7e87c21cf719d86102c" translate="yes" xml:space="preserve">
          <source>One way to think about the store is as a cache of all of the records that have been loaded by your application. If a route or a controller in your app asks for a record, the store can return it immediately if it is in the cache. Otherwise, the store must ask the adapter to load it, which usually means a trip over the network to retrieve it from the server.</source>
          <target state="translated">Una forma de pensar en la tienda es como un caché de todos los registros que han sido cargados por su aplicación.Si una ruta o un controlador de tu aplicación te pide un registro,el almacén puede devolverlo inmediatamente si está en la caché.De lo contrario,el almacén debe pedir al adaptador que lo cargue,lo que normalmente significa un viaje a través de la red para recuperarlo del servidor.</target>
        </trans-unit>
        <trans-unit id="8c24dfe505a974aee3ed176f59d17fbda0bb9ffa" translate="yes" xml:space="preserve">
          <source>One, unit tests are typically isolated and focus on individual methods and functions, so it is easy to debug when your tests fail.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="206de582d9e42728271567f32cef1d2caa66c410" translate="yes" xml:space="preserve">
          <source>One-To-Many</source>
          <target state="translated">One-To-Many</target>
        </trans-unit>
        <trans-unit id="72ed6317b3c29cc659bd9726d64c0704e0a987b4" translate="yes" xml:space="preserve">
          <source>One-To-One</source>
          <target state="translated">One-To-One</target>
        </trans-unit>
        <trans-unit id="e8edf93e5fc748fcefb10c45b67f1fe2105f8341" translate="yes" xml:space="preserve">
          <source>One-Way Bindings</source>
          <target state="translated">Fijaciones de una sola dirección</target>
        </trans-unit>
        <trans-unit id="a888cbb9d1975f7a372576caffb7acdfc8b16b4f" translate="yes" xml:space="preserve">
          <source>One-to-Many</source>
          <target state="translated">One-to-Many</target>
        </trans-unit>
        <trans-unit id="a2cab38603c3673e0e2b0a47873e43f0dbfdffa8" translate="yes" xml:space="preserve">
          <source>One-to-One</source>
          <target state="translated">One-to-One</target>
        </trans-unit>
        <trans-unit id="69039b055f29859716cd66c6b480ac6e9f39194e" translate="yes" xml:space="preserve">
          <source>One-way Data Flow</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cd4094ddfbc83c812c552f23a48ae51c79c9bda" translate="yes" xml:space="preserve">
          <source>Only one helper manager is guaranteed to exist per &lt;code&gt;owner&lt;/code&gt; and per usage of &lt;code&gt;setHelperManager&lt;/code&gt;, so many helpers will end up using the same instance of the helper manager. As such, you should only store state that is related to the manager itself. If you want to store state specific to a particular helper definition, you should assign a unique helper manager to that helper. In general, most managers should either be stateless, or only have the &lt;code&gt;owner&lt;/code&gt; they were created with as state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56312e9de33823d672f614456c13a57c2666c655" translate="yes" xml:space="preserve">
          <source>Only specific decorators provided by Ember can be applied this way in classic classes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d328cfa965ffcc50cbae46e22f7eacf54dc6ea0e" translate="yes" xml:space="preserve">
          <source>Only valid HTML elements in a &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; tag can be used</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfa59a0348d458088b021847d4beef2f800c063e" translate="yes" xml:space="preserve">
          <source>Open &lt;a href=&quot;http://localhost:4200&quot;&gt;&lt;code&gt;http://localhost:4200&lt;/code&gt;&lt;/a&gt; in your browser of choice. You should see an Ember welcome page and not much else.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2b45396a05b9e6a742a38dba57faf9bcaacbc0e" translate="yes" xml:space="preserve">
          <source>Open &lt;a href=&quot;http://localhost:4200&quot;&gt;&lt;code&gt;http://localhost:4200&lt;/code&gt;&lt;/a&gt; in your browser of choice. You should see an Ember welcome page and not much else. Congratulations! You just created and booted your first Ember app.</source>
          <target state="translated">Abra &lt;a href=&quot;http://localhost:4200&quot;&gt; &lt;code&gt;http://localhost:4200&lt;/code&gt; &lt;/a&gt; en el navegador de su elecci&amp;oacute;n. Deber&amp;iacute;a ver una p&amp;aacute;gina de bienvenida de Ember y no mucho m&amp;aacute;s. &amp;iexcl;Felicidades! Acaba de crear y arrancar su primera aplicaci&amp;oacute;n Ember.</target>
        </trans-unit>
        <trans-unit id="2f97601478ddfa30694a21e0aee77ce407626778" translate="yes" xml:space="preserve">
          <source>Open our existing acceptance test, &lt;code&gt;tests/acceptance/list-rentals-test.js&lt;/code&gt;, and implement the test labeled &quot;should filter the list of rentals by city&quot;.</source>
          <target state="translated">Abra nuestra prueba de aceptaci&amp;oacute;n existente, &lt;code&gt;tests/acceptance/list-rentals-test.js&lt;/code&gt; , e implemente la prueba etiquetada &quot;deber&amp;iacute;a filtrar la lista de alquileres por ciudad&quot;.</target>
        </trans-unit>
        <trans-unit id="0cc801dfb3bc3822b07222ee8a7d8dcfc04c59ec" translate="yes" xml:space="preserve">
          <source>Open the newly-created template in &lt;code&gt;app/templates/scientists.hbs&lt;/code&gt; and add the following HTML:</source>
          <target state="translated">Abra la plantilla reci&amp;eacute;n creada en &lt;code&gt;app/templates/scientists.hbs&lt;/code&gt; y agregue el siguiente HTML:</target>
        </trans-unit>
        <trans-unit id="ca4a95be4af61aa0fce1e5925d32c5bcc4963385" translate="yes" xml:space="preserve">
          <source>Opening an issue or pull request to &lt;a href=&quot;https://github.com/ember-learn/guides-source/&quot;&gt;the GitHub repository&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd792fbd2875bdf3718df2a36075e5b668af82a7" translate="yes" xml:space="preserve">
          <source>Opening an issue or pull request to &lt;a href=&quot;https://github.com/emberjs/guides/&quot;&gt;the GitHub repository&lt;/a&gt;</source>
          <target state="translated">Abrir un problema o una solicitud de extracci&amp;oacute;n al &lt;a href=&quot;https://github.com/emberjs/guides/&quot;&gt;repositorio de GitHub&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c1dd165afc95895bd90768a2a8a39ca08acf8783" translate="yes" xml:space="preserve">
          <source>Opening that file will reveal some initial code that will try to go to the &lt;code&gt;list-rentals&lt;/code&gt; route and verify that the route is loaded. The initial code is there to help us build our first acceptance test.</source>
          <target state="translated">Al abrir ese archivo, se revelar&amp;aacute; un c&amp;oacute;digo inicial que intentar&amp;aacute; ir a la ruta de &lt;code&gt;list-rentals&lt;/code&gt; y verificar que la ruta est&amp;eacute; cargada. El c&amp;oacute;digo inicial est&amp;aacute; ah&amp;iacute; para ayudarnos a construir nuestra primera prueba de aceptaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="68394f0bdcf1b11a4905c9738f7ac23b35d3aca2" translate="yes" xml:space="preserve">
          <source>Opening the template for this route reveals an outlet underneath the route's general page information. At the bottom of the template, you'll notice an &lt;code&gt;{{outlet}}&lt;/code&gt; helper. This is where the active nested route will be rendered.</source>
          <target state="translated">Al abrir la plantilla para esta ruta, se muestra una salida debajo de la informaci&amp;oacute;n de la p&amp;aacute;gina general de la ruta. En la parte inferior de la plantilla, ver&amp;aacute; un ayudante &lt;code&gt;{{outlet}}&lt;/code&gt; . Aqu&amp;iacute; es donde se renderizar&amp;aacute; la ruta anidada activa.</target>
        </trans-unit>
        <trans-unit id="84c592e4f2dcd576f7dfcf84d3f2fab2e7d1c377" translate="yes" xml:space="preserve">
          <source>Operations performed in initializers should be kept as lightweight as possible to minimize delays in loading your application. Although advanced techniques exist for allowing asynchrony in application initializers (i.e. &lt;code&gt;deferReadiness&lt;/code&gt; and &lt;code&gt;advanceReadiness&lt;/code&gt;), these techniques should generally be avoided. Any asynchronous loading conditions (e.g. user authorization) are almost always better handled in your application route's hooks, which allows for DOM interaction while waiting for conditions to resolve.</source>
          <target state="translated">Las operaciones realizadas en inicializadores deben mantenerse lo m&amp;aacute;s ligeras posible para minimizar los retrasos en la carga de su aplicaci&amp;oacute;n. Aunque existen t&amp;eacute;cnicas avanzadas para permitir la asincron&amp;iacute;a en los inicializadores de aplicaciones (es decir, &lt;code&gt;deferReadiness&lt;/code&gt; y &lt;code&gt;advanceReadiness&lt;/code&gt; ), estas t&amp;eacute;cnicas generalmente deben evitarse. Cualquier condici&amp;oacute;n de carga asincr&amp;oacute;nica (por ejemplo, autorizaci&amp;oacute;n del usuario) casi siempre se maneja mejor en los ganchos de la ruta de la aplicaci&amp;oacute;n, lo que permite la interacci&amp;oacute;n DOM mientras se espera que se resuelvan las condiciones.</target>
        </trans-unit>
        <trans-unit id="245a923eb00420b9baa12f359835e88308f803dd" translate="yes" xml:space="preserve">
          <source>Opting into a full transition</source>
          <target state="translated">Optar por una transición completa</target>
        </trans-unit>
        <trans-unit id="1c49b1643c903074dd04faa3ee683900d824639b" translate="yes" xml:space="preserve">
          <source>Optional Features</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="878e1e97652f92b3656ef534228d846d629e2052" translate="yes" xml:space="preserve">
          <source>Optional addons for Neovim's Ember Language Server:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66b8b140d34ca56fe840cbf56dad53e263eb6056" translate="yes" xml:space="preserve">
          <source>Optional arguments to be passed to the queued method.</source>
          <target state="translated">Argumentos opcionales para ser pasados al método de la cola.</target>
        </trans-unit>
        <trans-unit id="7174acae61247527fa92ec0872c03eec9cf98de5" translate="yes" xml:space="preserve">
          <source>Optional arguments to pass on</source>
          <target state="translated">Argumentos opcionales para transmitir</target>
        </trans-unit>
        <trans-unit id="f4fa0c5292f62f88297e792835dcb8ffe325cd65" translate="yes" xml:space="preserve">
          <source>Optional arguments to pass to the timeout.</source>
          <target state="translated">Argumentos opcionales para pasar al tiempo muerto.</target>
        </trans-unit>
        <trans-unit id="a00dbf5de4ed7db7948c3423669d8aeb01e9edd2" translate="yes" xml:space="preserve">
          <source>Optional array of actions (listeners).</source>
          <target state="translated">Conjunto de acciones opcionales (oyentes).</target>
        </trans-unit>
        <trans-unit id="1fddf763cfe0151919fd12f5694dc361ffe0744c" translate="yes" xml:space="preserve">
          <source>Optional array of objects to insert or null if no objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7f4c5eb44535d1e4f3e27873e7fffaf8af0087e" translate="yes" xml:space="preserve">
          <source>Optional array of parameters to interpolate into string.</source>
          <target state="translated">Conjunto opcional de parámetros para interpolar en cadena.</target>
        </trans-unit>
        <trans-unit id="ff1789bb5d4aa8d68c7ab51838333480e8e224d2" translate="yes" xml:space="preserve">
          <source>Optional dependent keys that trigger this computed property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ce8b2338198547d4dbc4f7c5014302632a59a0d" translate="yes" xml:space="preserve">
          <source>Optional features in Octane</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c4f35334f92330cec8db7b3c2ec6ce4d524729c" translate="yes" xml:space="preserve">
          <source>Optional hash of configuration options including `willChange` and `didChange` option.</source>
          <target state="translated">Hash de opciones de configuración,incluyendo la opción &quot;willChange&quot; y &quot;didChange&quot;.</target>
        </trans-unit>
        <trans-unit id="2f6b7a5c6a5652ddfb412d45674a61749417b985" translate="yes" xml:space="preserve">
          <source>Optional meta to lookup listeners</source>
          <target state="translated">Meta opcional para buscar oyentes</target>
        </trans-unit>
        <trans-unit id="844e0186eb00638ab699a19704bf6b6030a59426" translate="yes" xml:space="preserve">
          <source>Optional parameters for each listener.</source>
          <target state="translated">Parámetros opcionales para cada oyente.</target>
        </trans-unit>
        <trans-unit id="6f066f2da230be0f98eac3487bbb5312285fcf7e" translate="yes" xml:space="preserve">
          <source>Optionally supply a model for the route in question. The model will be serialized into the URL using the &lt;code&gt;serialize&lt;/code&gt; hook of the route:</source>
          <target state="translated">Opcionalmente proporcione un modelo para la ruta en cuesti&amp;oacute;n. El modelo se serializar&amp;aacute; en la URL utilizando el gancho de &lt;code&gt;serialize&lt;/code&gt; de la ruta:</target>
        </trans-unit>
        <trans-unit id="4afb26fd74d5f6e8ea7cbf72fa7921df56de5e90" translate="yes" xml:space="preserve">
          <source>Optionally you can pass a type which unload all records for a given type.</source>
          <target state="translated">Opcionalmente se puede pasar un tipo que descargue todos los registros de un tipo determinado.</target>
        </trans-unit>
        <trans-unit id="d707d47d0d151fe2e1d8731df65d7ece3ccb76af" translate="yes" xml:space="preserve">
          <source>Optionally, a model type used to determine which serializer will be used</source>
          <target state="translated">Opcionalmente,un tipo de modelo utilizado para determinar qué serializador se utilizará</target>
        </trans-unit>
        <trans-unit id="136ae3638c2d9288aced04a9905490f376059e3b" translate="yes" xml:space="preserve">
          <source>Optionally, if &lt;code&gt;adapter.shouldBackgroundReloadAll&lt;/code&gt; evaluates to &lt;code&gt;true&lt;/code&gt;, then a background reload is started. Once this resolves, the array with which the promise resolves, is updated automatically so it contains all the records in the store:</source>
          <target state="translated">Opcionalmente, si &lt;code&gt;adapter.shouldBackgroundReloadAll&lt;/code&gt; se eval&amp;uacute;a como &lt;code&gt;true&lt;/code&gt; , se inicia una recarga en segundo plano. Una vez que esto se resuelve, la matriz con la que se resuelve la promesa, se actualiza autom&amp;aacute;ticamente para que contenga todos los registros de la tienda:</target>
        </trans-unit>
        <trans-unit id="f76ca3aa52e342e9e499538412c709f9fc9c6c82" translate="yes" xml:space="preserve">
          <source>Optionally, if &lt;code&gt;adapter.shouldBackgroundReloadRecord&lt;/code&gt; evaluates to &lt;code&gt;true&lt;/code&gt;, then a background reload is started, which updates the records' data, once it is available:</source>
          <target state="translated">Opcionalmente, si &lt;code&gt;adapter.shouldBackgroundReloadRecord&lt;/code&gt; se eval&amp;uacute;a como &lt;code&gt;true&lt;/code&gt; , se inicia una recarga en segundo plano, que actualiza los datos de los registros, una vez que est&amp;aacute;n disponibles:</target>
        </trans-unit>
        <trans-unit id="6bf5da9c080bee3a8142586c412aa39971137eee" translate="yes" xml:space="preserve">
          <source>Options</source>
          <target state="translated">Options</target>
        </trans-unit>
        <trans-unit id="056a298f55d85765827346a51abdb7d167ab8056" translate="yes" xml:space="preserve">
          <source>Options for `Ember.deprecate`.</source>
          <target state="translated">Opciones para &quot;Ember.depreciar&quot;.</target>
        </trans-unit>
        <trans-unit id="56daff5148c17e197dc8b310ce65f94faf88f205" translate="yes" xml:space="preserve">
          <source>Options for `deprecate`.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da90baa9e342d697ce99637be813aa29582aef4f" translate="yes" xml:space="preserve">
          <source>Or an inline &lt;code&gt;hash&lt;/code&gt;, and you can even pass components:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="009e8dbddb1a9a2e364046dc2b7da46c91d93f02" translate="yes" xml:space="preserve">
          <source>Or by using a helper in the template:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6e1814cb1ede5b914af8ed5b9da5330939a141d" translate="yes" xml:space="preserve">
          <source>Or equivalently, &lt;code&gt;{{person/short-profile}}&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d84522ef4b97044a7b5036fbf48e647677689781" translate="yes" xml:space="preserve">
          <source>Or if you pass it an array with names it returns the parameters as a hash:</source>
          <target state="translated">O si le pasas una matriz con nombres,devuelve los parámetros como un hash:</target>
        </trans-unit>
        <trans-unit id="37cdfe0b0058fe4edf3c475c18fb07ae927c2616" translate="yes" xml:space="preserve">
          <source>Or on a hasMany relationship:</source>
          <target state="translated">O en una relación de hasMany:</target>
        </trans-unit>
        <trans-unit id="64e13784e0e5fc4499c58a28e19a3b279f630bc2" translate="yes" xml:space="preserve">
          <source>Or perhaps you might want to boot two instances of your app on the same page for a split-screen multiplayer experience:</source>
          <target state="translated">O quizás quieras arrancar dos instancias de tu aplicación en la misma página para una experiencia multijugador en pantalla dividida:</target>
        </trans-unit>
        <trans-unit id="50016e626900570663ecf9226b2c2f188c840413" translate="yes" xml:space="preserve">
          <source>Or, assign an action to an inline event handler in the template (which creates a closure action and does receive the event object as an argument).</source>
          <target state="translated">O bien,asigne una acción a un manejador de eventos en línea en la plantilla (que crea una acción de cierre y recibe el objeto de evento como argumento).</target>
        </trans-unit>
        <trans-unit id="852f185db9f10db5ab3f8319e0a877a87def8abb" translate="yes" xml:space="preserve">
          <source>Orca, available for integration in Ubuntu, otherwise available as a download</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4cc74f7b298a6159af4768c4304193189c80184" translate="yes" xml:space="preserve">
          <source>Order of Lifecycle Hooks Called</source>
          <target state="translated">El orden de los ganchos del ciclo de vida llamado</target>
        </trans-unit>
        <trans-unit id="d3ed86c1334d74f0ae883f47feef902d83b9d8c6" translate="yes" xml:space="preserve">
          <source>Ordering</source>
          <target state="translated">Ordering</target>
        </trans-unit>
        <trans-unit id="519255ae1f74ffc5ddd29979295c7572f048ad81" translate="yes" xml:space="preserve">
          <source>Organization</source>
          <target state="translated">Organization</target>
        </trans-unit>
        <trans-unit id="f6011263f2c8df7e6d5838c01886ff0ab127d426" translate="yes" xml:space="preserve">
          <source>Organize records into groups, each of which is to be passed to separate calls to &lt;code&gt;findMany&lt;/code&gt;.</source>
          <target state="translated">Organice los registros en grupos, cada uno de los cuales se &lt;code&gt;findMany&lt;/code&gt; a llamadas separadas para findMany .</target>
        </trans-unit>
        <trans-unit id="5c2df0e1900518adaa51b92719f7b922310675ba" translate="yes" xml:space="preserve">
          <source>Other Assets</source>
          <target state="translated">Otros activos</target>
        </trans-unit>
        <trans-unit id="050073d537a7166c91b8fc6249ae7d68937485e8" translate="yes" xml:space="preserve">
          <source>Other Ember-specific addons for data loading. Search for them on &lt;a href=&quot;https://emberobserver.com&quot;&gt;Ember Observer&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cebb63339c152392cb23339f7e974429533abe9" translate="yes" xml:space="preserve">
          <source>Other HTML Attributes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a18cb54e465ff4fb1bb3202ed20081c8f7fe153e" translate="yes" xml:space="preserve">
          <source>Other Useful Articles</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3a5d50dac3d2fd3be1db7f31ed808c7f8a1ff9f" translate="yes" xml:space="preserve">
          <source>Other assets</source>
          <target state="translated">Otros activos</target>
        </trans-unit>
        <trans-unit id="be657d8c6d64e6d3d350289bde7b2fdefa384a70" translate="yes" xml:space="preserve">
          <source>Other decorators exist, including &lt;code&gt;@tracked&lt;/code&gt; which will be discussed later on, and the &lt;code&gt;@action&lt;/code&gt; decorator. The &lt;code&gt;@action&lt;/code&gt; decorator replaces the &lt;code&gt;actions&lt;/code&gt; hash on routes, controllers, and components:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4dafe89467b908579e92440e9dade6a6a530c6d" translate="yes" xml:space="preserve">
          <source>Other than that, fields can generally safely replace properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72938e69e43228a9d4d754a44650fe08dcd71b15" translate="yes" xml:space="preserve">
          <source>Other than that, go to town!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05b2c2f5c7ef214490e816d188da36da6aead3a8" translate="yes" xml:space="preserve">
          <source>Other than these two restrictions, Ember Data's normalized JSON object follows the &lt;a href=&quot;http://jsonapi.org/&quot;&gt;JSON API&lt;/a&gt; specification.</source>
          <target state="translated">Aparte de estas dos restricciones, el objeto JSON normalizado de Ember Data sigue la especificaci&amp;oacute;n de la &lt;a href=&quot;http://jsonapi.org/&quot;&gt;API JSON&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d677034ba96b86d96a07c3b5f23a48edcbc95ef6" translate="yes" xml:space="preserve">
          <source>Other than these two restrictions, Ember Data's normalized JSON object follows the &lt;a href=&quot;http://jsonapi.org/&quot;&gt;JSON:API&lt;/a&gt; specification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d1570f0454b1699f4dd4b984290a82643a03560" translate="yes" xml:space="preserve">
          <source>Otherwise, when using native class syntax, native class rules and behaviors apply, and when using classic class syntax, classic class rules apply.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a59ae439add2f420237329f253278208031489d" translate="yes" xml:space="preserve">
          <source>Our &lt;code&gt;filterByCity&lt;/code&gt; function is going to pretend to be the action function for our component, that does the actual filtering of the rental list.</source>
          <target state="translated">Nuestra funci&amp;oacute;n &lt;code&gt;filterByCity&lt;/code&gt; pretende ser la funci&amp;oacute;n de acci&amp;oacute;n de nuestro componente, que realiza el filtrado real de la lista de alquiler.</target>
        </trans-unit>
        <trans-unit id="1d2352d7289d1df632f9cdd6e7d02d2ec6a168ab" translate="yes" xml:space="preserve">
          <source>Our &lt;code&gt;rentals&lt;/code&gt; route is going to serve multiple functions. From our &lt;a href=&quot;../acceptance-test&quot;&gt;acceptance tests&lt;/a&gt;, we've shown that we want our users to be able to browse and search rentals, as well as see detailed information for individual rentals. To satisfy that requirement, we are going to make use of Ember's &lt;a href=&quot;https://guides.emberjs.com/routing/defining-your-routes/#toc_nested-routes&quot;&gt;nested route capability&lt;/a&gt;.</source>
          <target state="translated">Nuestra ruta de &lt;code&gt;rentals&lt;/code&gt; va a tener m&amp;uacute;ltiples funciones. De nuestras &lt;a href=&quot;../acceptance-test&quot;&gt;pruebas de aceptaci&amp;oacute;n&lt;/a&gt; , hemos demostrado que queremos que nuestros usuarios puedan navegar y buscar alquileres, as&amp;iacute; como ver informaci&amp;oacute;n detallada sobre alquileres individuales. Para satisfacer ese requisito, haremos uso de la &lt;a href=&quot;https://guides.emberjs.com/routing/defining-your-routes/#toc_nested-routes&quot;&gt;capacidad de ruta anidada&lt;/a&gt; de Ember .</target>
        </trans-unit>
        <trans-unit id="ceabe1dbf5cc8df0bb7eda712f95c063f04ae06b" translate="yes" xml:space="preserve">
          <source>Our app needs a single function, &lt;code&gt;createMap&lt;/code&gt;, which makes use of &lt;code&gt;google.maps.Map&lt;/code&gt; to create our map element, &lt;code&gt;google.maps.Geocoder&lt;/code&gt; to lookup the coordinates of our location, and &lt;code&gt;google.maps.Marker&lt;/code&gt; to pin our map based on the resolved location.</source>
          <target state="translated">Nuestra aplicaci&amp;oacute;n necesita una sola funci&amp;oacute;n, &lt;code&gt;createMap&lt;/code&gt; , que utiliza &lt;code&gt;google.maps.Map&lt;/code&gt; para crear nuestro elemento de mapa, &lt;code&gt;google.maps.Geocoder&lt;/code&gt; para buscar las coordenadas de nuestra ubicaci&amp;oacute;n y &lt;code&gt;google.maps.Marker&lt;/code&gt; para fijar nuestro mapa en funci&amp;oacute;n de la Ubicaci&amp;oacute;n resuelta.</target>
        </trans-unit>
        <trans-unit id="e07b0dd7549ed8c27ea39867fe2f2d1988667c3e" translate="yes" xml:space="preserve">
          <source>Our app should behave now as before, with the addition of an image for each rental item.</source>
          <target state="translated">Nuestra aplicación debe comportarse ahora como antes,con la adición de una imagen para cada artículo de alquiler.</target>
        </trans-unit>
        <trans-unit id="6a20c7d31e256f685e6854e8af9656af5d1a7698" translate="yes" xml:space="preserve">
          <source>Our component integration test will test two different behaviors:</source>
          <target state="translated">Nuestra prueba de integración de componentes probará dos comportamientos diferentes:</target>
        </trans-unit>
        <trans-unit id="bc927403c3f4e27e29509ea224d204579314bd1e" translate="yes" xml:space="preserve">
          <source>Our component is called &lt;code&gt;&amp;lt;PeopleList&amp;gt;&lt;/code&gt;, based on its name on the file system. Please note that the letters P and L are capitalized.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aac6bcc3102b1ecd24b4fb91e8b2669dc6aa577c" translate="yes" xml:space="preserve">
          <source>Our counter has two different actions, &lt;code&gt;increment&lt;/code&gt; and &lt;code&gt;decrement&lt;/code&gt;. But both actions are mostly doing the same thing. The only difference is that &lt;code&gt;increment&lt;/code&gt; changes the count by &lt;code&gt;+1&lt;/code&gt;, while &lt;code&gt;decrement&lt;/code&gt; changes it by &lt;code&gt;-1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cae96a04e9b7056dc33933f973849aed2afc24ae" translate="yes" xml:space="preserve">
          <source>Our goal is to help you avoid that mess and come up to speed as fast as possible; you can consider us your internet friend.</source>
          <target state="translated">Nuestro objetivo es ayudarte a evitar ese lío y a ponerte al día lo más rápido posible;puedes considerarnos tu amigo de Internet.</target>
        </trans-unit>
        <trans-unit id="939816c45abd273d6565fd8a68842401b6e05c49" translate="yes" xml:space="preserve">
          <source>Our launched Chrome web browser now shows 10 successful tests. If you toggle the box labeled &quot;Hide passed tests&quot;, you should see our successful acceptance test, along with 9 passing ESLint tests. Ember tests each file you create for syntax issues (known as &quot;linting&quot;) using &lt;a href=&quot;http://eslint.org/&quot;&gt;ESLint&lt;/a&gt;.</source>
          <target state="translated">Nuestro navegador web Chrome lanzado ahora muestra 10 pruebas exitosas. Si activa la casilla &quot;Ocultar pruebas aprobadas&quot;, deber&amp;iacute;a ver nuestra prueba de aceptaci&amp;oacute;n exitosa, junto con 9 pruebas ESLint aprobadas. Ember prueba cada archivo que crea en busca de problemas de sintaxis (conocidos como &quot;linting&quot;) usando &lt;a href=&quot;http://eslint.org/&quot;&gt;ESLint&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="bb08f510a40d4531dddec319cee316e84226d5d3" translate="yes" xml:space="preserve">
          <source>Our list-filter component takes a function as an argument, used to find the list of matching rentals based on the filter string provided by the user. We provide an action function by setting it to the local scope of our test by calling &lt;code&gt;this.on&lt;/code&gt;.</source>
          <target state="translated">Nuestro componente de filtro de lista toma una funci&amp;oacute;n como argumento, que se utiliza para encontrar la lista de alquileres coincidentes en funci&amp;oacute;n de la cadena de filtro proporcionada por el usuario. Proporcionamos una funci&amp;oacute;n de acci&amp;oacute;n estableci&amp;eacute;ndola en el &amp;aacute;mbito local de nuestra prueba llamando &lt;code&gt;this.on&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b06b1f865cc2e950e72d8ef25f106bf2e0d12435" translate="yes" xml:space="preserve">
          <source>Our new &lt;code&gt;rental-listing&lt;/code&gt; component will manage how a user sees and interacts with a rental. To start, let's move the rental display details for a single rental from the &lt;code&gt;rentals.hbs&lt;/code&gt; template into &lt;code&gt;rental-listing.hbs&lt;/code&gt; and add the image field:</source>
          <target state="translated">Nuestro nuevo componente de &lt;code&gt;rental-listing&lt;/code&gt; gestionar&amp;aacute; c&amp;oacute;mo un usuario ve e interact&amp;uacute;a con un alquiler. Para comenzar, &lt;code&gt;rentals.hbs&lt;/code&gt; los detalles de visualizaci&amp;oacute;n del alquiler para un solo alquiler de la plantilla rentals.hbs a &lt;code&gt;rental-listing.hbs&lt;/code&gt; y agreguemos el campo de imagen:</target>
        </trans-unit>
        <trans-unit id="29373ffd294040aafa4cf834c59c8d7e6c803a1c" translate="yes" xml:space="preserve">
          <source>Our new helper starts out with some boilerplate code from the generator:</source>
          <target state="translated">Nuestro nuevo ayudante empieza con un código de la placa de la caldera del generador:</target>
        </trans-unit>
        <trans-unit id="a349524a1f4aadac769db82fd11c98cb24360fc6" translate="yes" xml:space="preserve">
          <source>Our new route is nested within our &lt;code&gt;rentals&lt;/code&gt; route. This tells Ember that it is a sub-route and will be accessed through &lt;code&gt;localhost:4200/rentals/show&lt;/code&gt;.</source>
          <target state="translated">Nuestra nueva ruta est&amp;aacute; anidada dentro de nuestra ruta de &lt;code&gt;rentals&lt;/code&gt; . Esto le dice a Ember que es una subruta y se acceder&amp;aacute; a trav&amp;eacute;s de &lt;code&gt;localhost:4200/rentals/show&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4f76189ba851aa52d8190127cc50d8974b28cd36" translate="yes" xml:space="preserve">
          <source>Our primary focus with mirage will be in the &lt;code&gt;config.js&lt;/code&gt; file, which is where we can define our API endpoints and our data. We will be following the &lt;a href=&quot;http://jsonapi.org/&quot;&gt;JSON-API specification&lt;/a&gt; which requires our data to be formatted a certain way. Let's configure Mirage to send back our rentals that we had defined above by updating &lt;code&gt;mirage/config.js&lt;/code&gt;:</source>
          <target state="translated">Nuestro enfoque principal con mirage estar&amp;aacute; en el archivo &lt;code&gt;config.js&lt;/code&gt; , que es donde podemos definir nuestros puntos finales de API y nuestros datos. Seguiremos la &lt;a href=&quot;http://jsonapi.org/&quot;&gt;especificaci&amp;oacute;n JSON-API&lt;/a&gt; que requiere que nuestros datos tengan un formato determinado. Configuremos Mirage para devolver nuestros alquileres que hab&amp;iacute;amos definido anteriormente actualizando &lt;code&gt;mirage/config.js&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="1b24e7c85fa3198f703161c3ddef40fe3394011b" translate="yes" xml:space="preserve">
          <source>Our test fills out &quot;Seattle&quot; as the search criteria in the search field, and then sends a &lt;code&gt;keyup&lt;/code&gt; event to the same field with a code of &lt;code&gt;69&lt;/code&gt; (the &lt;code&gt;e&lt;/code&gt; key) to simulate a user typing.</source>
          <target state="translated">Nuestra prueba completa &quot;Seattle&quot; como criterio de b&amp;uacute;squeda en el campo de b&amp;uacute;squeda, y luego env&amp;iacute;a un evento &lt;code&gt;keyup&lt;/code&gt; al mismo campo con un c&amp;oacute;digo &lt;code&gt;69&lt;/code&gt; (la tecla &lt;code&gt;e&lt;/code&gt; ) para simular un usuario escribiendo.</target>
        </trans-unit>
        <trans-unit id="01bb65c5738545e59a2a76289dfe05d3a8130803" translate="yes" xml:space="preserve">
          <source>Out of the box, Ember provides 2 components for building a form:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bea2ea8d295526b6de7ab08ba561f86c1192c9c8" translate="yes" xml:space="preserve">
          <source>Out-of-Component Modifications</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8169481c0bf47ccddb7f0929954e65aedb10ffd6" translate="yes" xml:space="preserve">
          <source>Outer HTML</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78d0fbfeeac956fe03189a14212a32e505b7af40" translate="yes" xml:space="preserve">
          <source>Outputting their name and age.</source>
          <target state="translated">Emitiendo su nombre y su edad.</target>
        </trans-unit>
        <trans-unit id="7f785f12de428c659f4e7bcaf5ae3019791cd9ca" translate="yes" xml:space="preserve">
          <source>Outside of class definitions</source>
          <target state="translated">Fuera de las definiciones de clase</target>
        </trans-unit>
        <trans-unit id="eafba9b212384c69a2a6dba1d05842ab6585a134" translate="yes" xml:space="preserve">
          <source>Over the past few years, many new features have been added to Ember with the goal of introducing a new programming model for the framework. This new model brings major gains in productivity and performance, incrementally via a series of minor (non-breaking) releases. This allows for new apps to have the best features enabled automatically, while teams working on existing apps can migrate over time, while still keeping their apps up-to-date with the latest release.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6448c99bf69eeb2ba6848557375b741d43c476bb" translate="yes" xml:space="preserve">
          <source>Override this function when writing a class-based helper.</source>
          <target state="translated">Anula esta función cuando escribes un ayudante de clase.</target>
        </trans-unit>
        <trans-unit id="e7118e866bd2fbc9b87fc7380712b78a5ce41ae2" translate="yes" xml:space="preserve">
          <source>Override this method with your testing framework's false assertion. This function is called whenever an exception occurs causing the testing promise to fail.</source>
          <target state="translated">Anular este método con la falsa afirmación de su marco de pruebas.Esta función se llama siempre que se produce una excepción que hace que las pruebas prometan fallar.</target>
        </trans-unit>
        <trans-unit id="78724f610daa7d335490afd0afef134897e80478" translate="yes" xml:space="preserve">
          <source>Override this to call your framework's methods that handle async operations.</source>
          <target state="translated">Anula esto para llamar a los métodos de su marco que manejan las operaciones de sincronización.</target>
        </trans-unit>
        <trans-unit id="6d464e9e96aeb92e00f8be7c60b6ca811e20cee2" translate="yes" xml:space="preserve">
          <source>Override to implement teardown.</source>
          <target state="translated">Anular para implementar el desmontaje.</target>
        </trans-unit>
        <trans-unit id="72f33b6fd8ce9f99ebb8295cb19dd840fcca6242" translate="yes" xml:space="preserve">
          <source>Overrides &lt;code&gt;RegistryProxy#unregister&lt;/code&gt; in order to clear any cached instances of the unregistered factory.</source>
          <target state="translated">Anula &lt;code&gt;RegistryProxy#unregister&lt;/code&gt; para borrar cualquier instancia almacenada en cach&amp;eacute; de la f&amp;aacute;brica no registrada.</target>
        </trans-unit>
        <trans-unit id="e441b8e9bc7405861b187f25fbe7e852d75948a0" translate="yes" xml:space="preserve">
          <source>Overriding Application-wide Defaults</source>
          <target state="translated">Anulación de los valores predeterminados de toda la aplicación</target>
        </trans-unit>
        <trans-unit id="fff1ab70d9215d47433358aa873ef34fdced6c34" translate="yes" xml:space="preserve">
          <source>Overriding Parent Class Methods</source>
          <target state="translated">Anulando los métodos de las clases para padres</target>
        </trans-unit>
        <trans-unit id="bfaaaf32788c2fd06d3c8e0c98eb03bc280e18a2" translate="yes" xml:space="preserve">
          <source>Overriding attributes</source>
          <target state="translated">Atributos primordiales</target>
        </trans-unit>
        <trans-unit id="0efc2e6be4c23b9a513d7ce0dcff8ed80e8912e7" translate="yes" xml:space="preserve">
          <source>Overview</source>
          <target state="translated">Overview</target>
        </trans-unit>
        <trans-unit id="9fbe29d4d76ec756421aee06e0f34f17fa488ff3" translate="yes" xml:space="preserve">
          <source>PATCH</source>
          <target state="translated">PATCH</target>
        </trans-unit>
        <trans-unit id="61ff81c30aa3c76e78afea62b2e3bd1dfa49e854" translate="yes" xml:space="preserve">
          <source>POST</source>
          <target state="translated">POST</target>
        </trans-unit>
        <trans-unit id="9290a0c61239f22dc109f2cd18743bbd807cdfac" translate="yes" xml:space="preserve">
          <source>Package @ember-data/adapter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e48b0cb91fa97df93af72ee439134098689f0194" translate="yes" xml:space="preserve">
          <source>Package @ember-data/canary-features</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0df8a2ed461206098f5b4f4bb6b0b2f49d2c5424" translate="yes" xml:space="preserve">
          <source>Package @ember-data/debug</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b7005ba2cff12f87eed22566914ec8bc55ebaf0" translate="yes" xml:space="preserve">
          <source>Package @ember-data/deprecations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="003e7b5f1273dcc0898f2a9cd0b132fbd688696d" translate="yes" xml:space="preserve">
          <source>Package @ember-data/model</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47ad3c107b0e54a7ac1944c31fed17b5bb0710b2" translate="yes" xml:space="preserve">
          <source>Package @ember-data/record-data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fd4f67405e1b8aaeb42c2b813a453272e96702d" translate="yes" xml:space="preserve">
          <source>Package @ember-data/serializer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1428f30eaa099cc623d9e5875f2945adcbf8b3f" translate="yes" xml:space="preserve">
          <source>Package @ember-data/store</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fc9be9110da4f7fb13626f72e62a26c36c3285a" translate="yes" xml:space="preserve">
          <source>Package @ember/application</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="734ddb7d2dec1da49f5a7fc4629acf3a0da89742" translate="yes" xml:space="preserve">
          <source>Package @ember/array</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b42065785fb6162ff0afee19170bdb1dd62e3f3e" translate="yes" xml:space="preserve">
          <source>Package @ember/canary-features</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d68e9ad98654a50df7ef78f05cf1891259317b6f" translate="yes" xml:space="preserve">
          <source>Package @ember/component</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d695465b0e4cf906ffdacae17d59c894af69af4" translate="yes" xml:space="preserve">
          <source>Package @ember/component/template-only</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7efd390eff02546d1f737fae51a9b0fce7d5272" translate="yes" xml:space="preserve">
          <source>Package @ember/controller</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f1b639937499523a3c3c4afcd3c6b9aa0f47a5b" translate="yes" xml:space="preserve">
          <source>Package @ember/debug</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15b3cc89b5948c441515371238505ac6bdc640a2" translate="yes" xml:space="preserve">
          <source>Package @ember/destroyable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="288f71afaeef2694e4f64440becbe75db3414274" translate="yes" xml:space="preserve">
          <source>Package @ember/engine</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22cdfc249e93751bc4e29af9207596016371912e" translate="yes" xml:space="preserve">
          <source>Package @ember/enumerable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91262918ea03b8ce2ce4191feee99570cfde1a47" translate="yes" xml:space="preserve">
          <source>Package @ember/error</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39640ebf9a47fcd005b23845b0a078c1994e86be" translate="yes" xml:space="preserve">
          <source>Package @ember/helper</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cce16c7338b5d8b924f1cc6f3d1bbcd885119379" translate="yes" xml:space="preserve">
          <source>Package @ember/object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06e0c1a06b356a4bb4ea26a54c36bcd05dca95e6" translate="yes" xml:space="preserve">
          <source>Package @ember/polyfills</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8957e0676c9cdd531464db23eece45a24eebf23" translate="yes" xml:space="preserve">
          <source>Package @ember/routing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fac61a119c4b8c50423c769ea4f236d4573336b" translate="yes" xml:space="preserve">
          <source>Package @ember/runloop</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b0836fca2e2abdb0c5955b1f8d2b052a49b9757" translate="yes" xml:space="preserve">
          <source>Package @ember/service</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="167799b5dc9f55026cd1b693dbf9e2db4a456aab" translate="yes" xml:space="preserve">
          <source>Package @ember/string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60870d470295461c33c93fcdaab465250cc3710c" translate="yes" xml:space="preserve">
          <source>Package @ember/template</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0527976ce9e613c1af2c657cfcd35ca62ed6e24a" translate="yes" xml:space="preserve">
          <source>Package @ember/test</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25f0d5bb78f64057f00284b3938d011e12e60d25" translate="yes" xml:space="preserve">
          <source>Package @ember/utils</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5493c735a2970d00426d269a6a115776da490027" translate="yes" xml:space="preserve">
          <source>Package @glimmer/component</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9d00a0b930fb49d15a31cc517fd94f6342ceb3d" translate="yes" xml:space="preserve">
          <source>Package @glimmer/tracking</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f6cd1e1b9b2885f0f08a829e5728420fd9cdd78" translate="yes" xml:space="preserve">
          <source>Package ember</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1d327c69c7c0d03ff923e3dd13072724f7f2692" translate="yes" xml:space="preserve">
          <source>Package rsvp</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c03c75ad187275e61e870b10c1663f828100a587" translate="yes" xml:space="preserve">
          <source>Page Template Considerations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4aeab6c0b8647d5f1be2e4da4b067b9dd6c2ef73" translate="yes" xml:space="preserve">
          <source>Page Title</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e19661733745ef4b2adef80a34cf5d1556477ae" translate="yes" xml:space="preserve">
          <source>Pagination is a common example of using metadata. Imagine a blog with far more posts than you can display at once. You might query it like so:</source>
          <target state="translated">La paginación es un ejemplo común del uso de metadatos.Imagina un blog con muchas más entradas de las que puedes mostrar a la vez.Podrías consultarlo así:</target>
        </trans-unit>
        <trans-unit id="758bd025ac3588ef2bf1ea78e2ec92a078d36580" translate="yes" xml:space="preserve">
          <source>Parent components can pass actions to child components through templates alone without adding JavaScript code to those child components.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53b2b4d9664c2f7ba6c736b20cc936678a185b0b" translate="yes" xml:space="preserve">
          <source>Parent:&lt;a href=&quot;ember&quot;&gt;ember&lt;/a&gt;</source>
          <target state="translated">Parent:&lt;a href=&quot;ember&quot;&gt;ember&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2e82d2ab7546c96cb9a5574e03456855e889721d" translate="yes" xml:space="preserve">
          <source>Part of what makes components so useful is that they let you take complete control of a section of the DOM. This allows for direct DOM manipulation, listening and responding to browser events, and using 3rd party JavaScript libraries in your Ember app.</source>
          <target state="translated">Parte de lo que hace que los componentes sean tan útiles es que permiten tomar el control completo de una sección del DOM.Esto permite la manipulación directa del DOM,escuchando y respondiendo a los eventos del navegador,y usando librerías JavaScript de terceros en tu aplicación Ember.</target>
        </trans-unit>
        <trans-unit id="6d4b8ab5dc9107f2d41ceec11911caf0fa5785aa" translate="yes" xml:space="preserve">
          <source>Pass a function that is costly to compute to &lt;code&gt;createCache&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd0f0c84bbea848ebc99a6d8b09e02c0b6c2687a" translate="yes" xml:space="preserve">
          <source>Passing Actions With Angle Bracket Invocation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fd681d8590147352e763485982ff52042383b47" translate="yes" xml:space="preserve">
          <source>Passing Arguments</source>
          <target state="translated">Argumentos de paso</target>
        </trans-unit>
        <trans-unit id="e653b24bf9e209d80df6a1f3355da460f12ffc78" translate="yes" xml:space="preserve">
          <source>Passing Arguments to Actions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e7148ce0c1621aba30d240c1c19ad8aaf313466" translate="yes" xml:space="preserve">
          <source>Passing Properties to a Component</source>
          <target state="translated">Pasar las propiedades a un componente</target>
        </trans-unit>
        <trans-unit id="3da03a376688d5fb14e52c7f63a1a27343631407" translate="yes" xml:space="preserve">
          <source>Passing arguments</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d1352dd442d4cfba0e5fd622749a8a67bb427c2" translate="yes" xml:space="preserve">
          <source>Passing classes to an invocation (i.e. &lt;code&gt;{{my-component class=&quot;...&quot;}}&lt;/code&gt;) will no longer result in those classes being present on any element. This could be a change in behavior which impacts any reflected attribute passed as an argument, such as &lt;code&gt;id=&lt;/code&gt; or &lt;code&gt;tagName=&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7b6892060d3ef827e6332e1ab8d7813ce2e7481" translate="yes" xml:space="preserve">
          <source>Passing functions with the action helper</source>
          <target state="translated">Pasar funciones con el ayudante de acción</target>
        </trans-unit>
        <trans-unit id="1f6f9f64dca762b74228ae921a682024bab888c8" translate="yes" xml:space="preserve">
          <source>Passing multiple blocks</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="974e5a0b0533d8543bc9f8c28e441ee3eaff1431" translate="yes" xml:space="preserve">
          <source>Passing parameters to blocks</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84eae16350232d0e4ebbc64979eac30603537f4e" translate="yes" xml:space="preserve">
          <source>Passing parameters to named bxlocks</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b910b718628891639ad10590baddf47ec63bfe2" translate="yes" xml:space="preserve">
          <source>Passing the Action to the Component</source>
          <target state="translated">Pasar la acción al componente</target>
        </trans-unit>
        <trans-unit id="3ae4de702d5188523f33d4b5bc1b974cacf49f52" translate="yes" xml:space="preserve">
          <source>Passing three arguments:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27ba0b50b608b03349c7157edc6ddef068a469a8" translate="yes" xml:space="preserve">
          <source>Passing two arguments:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc9542bcb8c51a85721c7d88e5203af136f9bb1f" translate="yes" xml:space="preserve">
          <source>Path Customization</source>
          <target state="translated">Personalización de la ruta</target>
        </trans-unit>
        <trans-unit id="356cd3bf86420c7cad5947142df308e6e29392c9" translate="yes" xml:space="preserve">
          <source>Pathname customization</source>
          <target state="translated">Personalización del nombre de la ruta</target>
        </trans-unit>
        <trans-unit id="acf84c0cf396ae71011ae919f3466523baa1c7b1" translate="yes" xml:space="preserve">
          <source>Patterns for Actions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e703641d8deb06b53efdd58ac5208df544778810" translate="yes" xml:space="preserve">
          <source>Patterns for Components</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d370c50b556b5821596079c3ed48ddf2fbe93ad" translate="yes" xml:space="preserve">
          <source>Pauses the current test - this is useful for debugging while testing or for test-driving. It allows you to inspect the state of your application at any point. Example (The test will pause before clicking the button):</source>
          <target state="translated">Pone en pausa la prueba actual-esto es útil para depurar mientras se prueba o para probar la conducción.Le permite inspeccionar el estado de su aplicación en cualquier momento.Ejemplo (La prueba se detendrá antes de hacer clic en el botón):</target>
        </trans-unit>
        <trans-unit id="61b6cd1258641f0b4de19e16db4a9ed827fe2c16" translate="yes" xml:space="preserve">
          <source>Percy</source>
          <target state="translated">Percy</target>
        </trans-unit>
        <trans-unit id="4946af784e3408745353f1accc2c18f8c0f6d02d" translate="yes" xml:space="preserve">
          <source>Perform a synchronous transition into another route without attempting to resolve promises, update the URL, or abort any currently active asynchronous transitions (i.e. regular transitions caused by &lt;code&gt;transitionTo&lt;/code&gt; or URL changes).</source>
          <target state="translated">Realice una transici&amp;oacute;n sincr&amp;oacute;nica a otra ruta sin intentar resolver las promesas, actualizar la URL o abortar cualquier transici&amp;oacute;n asincr&amp;oacute;nica actualmente activa (es decir, transiciones regulares causadas por &lt;code&gt;transitionTo&lt;/code&gt; o cambios de URL).</target>
        </trans-unit>
        <trans-unit id="f66eb1046fbcbd1e99aff53dcfd1c6c3e96fed3d" translate="yes" xml:space="preserve">
          <source>Performance can be a concern with fields, since they eagerly create new values for &lt;em&gt;every&lt;/em&gt; instance of the component. This is generally not a problem, but is something to be aware of.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c97446af9643bcb61ef246b84f5ae53f1e5a2243" translate="yes" xml:space="preserve">
          <source>Perhaps the &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; itself was the target of styles (e.g. &lt;code&gt;body &amp;gt; div &amp;gt; .some-child&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55048dbb27d1bf87f25ec1c140008767e958cd27" translate="yes" xml:space="preserve">
          <source>Perhaps the application relied on the root &lt;code&gt;.ember-view&lt;/code&gt; for styles (CSS).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f12c5f85d68b2c1cf86b757e8d7188dc87be03b5" translate="yes" xml:space="preserve">
          <source>Persisting Records</source>
          <target state="translated">Registros persistentes</target>
        </trans-unit>
        <trans-unit id="7681a0376373e3089f3cc1d9cb621f731b425cd6" translate="yes" xml:space="preserve">
          <source>Picking different components to render in response to the data allows you to have different template and behavior for each case. The &lt;code&gt;{{component}}&lt;/code&gt; helper is a powerful tool for improving code modularity.</source>
          <target state="translated">Elegir diferentes componentes para renderizar en respuesta a los datos le permite tener diferentes plantillas y comportamientos para cada caso. El ayudante &lt;code&gt;{{component}}&lt;/code&gt; es una herramienta poderosa para mejorar la modularidad del c&amp;oacute;digo.</target>
        </trans-unit>
        <trans-unit id="53a53cee8d77f69a554611c87983d1a34a9295ae" translate="yes" xml:space="preserve">
          <source>Place &lt;code&gt;...attributes&lt;/code&gt;&lt;strong&gt;before&lt;/strong&gt; your attributes only if you want to disallow tags from overriding your attributes. This is likely to be unusual.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f5cbf3b9054a982345706be838f8ffee79e5683" translate="yes" xml:space="preserve">
          <source>Plain Old JavaScript Objects (POJOs)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdc10446ecd38ca13652c931db183d1cff77fdfe" translate="yes" xml:space="preserve">
          <source>Plain Properties</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1a35f314bf2633bdff792cb61a30fd24db73276" translate="yes" xml:space="preserve">
          <source>Planning Your App</source>
          <target state="translated">Planeando su aplicación</target>
        </trans-unit>
        <trans-unit id="0a8d7e61a508ccfa82dd401015443674854d4316" translate="yes" xml:space="preserve">
          <source>Please note that jQuery integration is off by default and this feature will not work properly. To enable this feature, you can read the instructions in the &lt;a href=&quot;https://guides.emberjs.com/release/configuring-ember/optional-features/#toc_jquery-integration&quot;&gt;jquery-integration optional feature guide&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10ab891c24a563405b3a70b1ca34ebe464adb253" translate="yes" xml:space="preserve">
          <source>Please note: This is not for normal usage, and should be used sparingly.</source>
          <target state="translated">Por favor,tenga en cuenta:Esto no es para el uso normal,y debe ser usado con moderación.</target>
        </trans-unit>
        <trans-unit id="651987c8f13c93d564a719b93607cd420d73a63f" translate="yes" xml:space="preserve">
          <source>Please note: any property changes made during this event will have no effect on object observers.</source>
          <target state="translated">Tenga en cuenta:cualquier cambio de propiedad realizado durante este evento no tendrá ningún efecto en los observadores de objetos.</target>
        </trans-unit>
        <trans-unit id="0f86931da96969bb0d673e6eb85b8c9d2da0aefa" translate="yes" xml:space="preserve">
          <source>Please see the &lt;a href=&quot;https://api.emberjs.com/ember/release/classes/Ember.Templates.helpers/methods#if&quot;&gt;API documentation of the &lt;code&gt;if&lt;/code&gt; helper&lt;/a&gt; for more patterns.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97a8fb33f7301b7d070bb6b9b6f5697d38d45f2d" translate="yes" xml:space="preserve">
          <source>Pluralization Customization</source>
          <target state="translated">Personalización de la pluralización</target>
        </trans-unit>
        <trans-unit id="861260cecd797e42301015d1972945d6ccce6883" translate="yes" xml:space="preserve">
          <source>Polyfill</source>
          <target state="translated">Polyfill</target>
        </trans-unit>
        <trans-unit id="989fc91d044783d05d714e433d3e90dca9bdf4da" translate="yes" xml:space="preserve">
          <source>Polymorphism</source>
          <target state="translated">Polymorphism</target>
        </trans-unit>
        <trans-unit id="b60b227dfc72ce2592d5e011bdf46ba68f6f3eeb" translate="yes" xml:space="preserve">
          <source>Polymorphism is a powerful concept which allows a developer to abstract common functionality into a base class. Consider the following example: a user with multiple payment methods. They could have a linked PayPal account, and a couple credit cards on file.</source>
          <target state="translated">El polimorfismo es un concepto poderoso que permite a un desarrollador abstraer la funcionalidad común en una clase base.Consideremos el siguiente ejemplo:un usuario con múltiples métodos de pago.Podrían tener una cuenta PayPal vinculada,y un par de tarjetas de crédito en el archivo.</target>
        </trans-unit>
        <trans-unit id="4cb4bbf7cc3d4bc42049240fc08ab58851cd946a" translate="yes" xml:space="preserve">
          <source>Pop object from array or nil if none are left. Works just like &lt;code&gt;pop()&lt;/code&gt; but it is KVO-compliant.</source>
          <target state="translated">Saque el objeto de la matriz o nulo si no queda ninguno. Funciona igual que &lt;code&gt;pop()&lt;/code&gt; pero es compatible con KVO.</target>
        </trans-unit>
        <trans-unit id="dc996b0d24beeb1d3c79bbc55469c48d769e7cfb" translate="yes" xml:space="preserve">
          <source>Positional Params</source>
          <target state="translated">Parámetros de posición</target>
        </trans-unit>
        <trans-unit id="b3f0b82d15093c4f3eefcefcd7c265667c8881d6" translate="yes" xml:space="preserve">
          <source>Positional arguments (e.g. &lt;code&gt;{{my-component this.someValue}}&lt;/code&gt;) are &lt;em&gt;not&lt;/em&gt; available in angle bracket invocation, since there is some ambiguity between their behavior and the behavior of standard HTML attributes (HTML attributes without &lt;code&gt;=&lt;/code&gt; default to truthy). If you still need positional arguments, you &lt;em&gt;must&lt;/em&gt; use the component with curly bracket syntax.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e660f41bf1644faff28e9b935d929c729609d44" translate="yes" xml:space="preserve">
          <source>Practical Resources</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bacc2b59c813afe0d96367410de97912289853d4" translate="yes" xml:space="preserve">
          <source>Prefer the &lt;code&gt;constructor&lt;/code&gt; function, unless the class extends &lt;code&gt;EmberObject&lt;/code&gt;, in which case prefer &lt;code&gt;init&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2684504bc0f6384c84c477f8be4a0311c5832d7" translate="yes" xml:space="preserve">
          <source>Preloading</source>
          <target state="translated">Preloading</target>
        </trans-unit>
        <trans-unit id="1ac28a409b05010e5dbd603d91ab6fbe68e42feb" translate="yes" xml:space="preserve">
          <source>Preparing an Addon to use a Canary Feature</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fa8462b8d7a18af6be6a7e1a411e11684ed8f8f" translate="yes" xml:space="preserve">
          <source>Pretty nice, right?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b1fb7e1484b0ba94928623eb8f36f404667ac59" translate="yes" xml:space="preserve">
          <source>Preventing Transitions via &lt;code&gt;willTransition&lt;/code&gt;</source>
          <target state="translated">Prevenci&amp;oacute;n de transiciones a trav&amp;eacute;s de &lt;code&gt;willTransition&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d802d61c8a7392e75323ae02de35b9864c66709a" translate="yes" xml:space="preserve">
          <source>Preventing and Retrying Transitions</source>
          <target state="translated">Prevención y reintento de las transiciones</target>
        </trans-unit>
        <trans-unit id="5013daf65503f91d54eccc1797b76d7e4dcd2880" translate="yes" xml:space="preserve">
          <source>Previously, in the &lt;a href=&quot;../routes-and-templates&quot;&gt;Routes and Templates tutorial&lt;/a&gt;, we set up a &lt;code&gt;rentals&lt;/code&gt; route.</source>
          <target state="translated">Anteriormente, en el &lt;a href=&quot;../routes-and-templates&quot;&gt;tutorial Rutas y plantillas&lt;/a&gt; , configuramos una ruta de &lt;code&gt;rentals&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f9baaec4106faea48eaf7fcd6f074b9e97eaf3ab" translate="yes" xml:space="preserve">
          <source>Process all the jobs sequentially in &lt;code&gt;WORK_QUEUE&lt;/code&gt;</source>
          <target state="translated">Procesar todos los trabajos secuencialmente en &lt;code&gt;WORK_QUEUE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fe5671922bc7f67cfabfa60ab97a9542ac21f39f" translate="yes" xml:space="preserve">
          <source>Promise</source>
          <target state="translated">Promise</target>
        </trans-unit>
        <trans-unit id="eb5d6e800790dcdd19447fac47669042de50dde8" translate="yes" xml:space="preserve">
          <source>Promise Example;</source>
          <target state="translated">Ejemplo de promesa;</target>
        </trans-unit>
        <trans-unit id="7763424e70cdeb92b8efa1ce1e7ab2fb3c67f143" translate="yes" xml:space="preserve">
          <source>Promise States and Filtering</source>
          <target state="translated">Los estados de promesa y el filtrado</target>
        </trans-unit>
        <trans-unit id="5ea8f6f7f55aefad94d6f37edf953a84817d34aa" translate="yes" xml:space="preserve">
          <source>Promise objects represent the eventual result of an asynchronous operation. The primary way of interacting with a promise is through its &lt;code&gt;then&lt;/code&gt; method, which registers callbacks to receive either a promise&amp;rsquo;s eventual value or the reason why the promise cannot be fulfilled.</source>
          <target state="translated">Los objetos de promesa representan el resultado final de una operaci&amp;oacute;n asincr&amp;oacute;nica. La forma principal de interactuar con una promesa es a trav&amp;eacute;s de su m&amp;eacute;todo &lt;code&gt;then&lt;/code&gt; , que registra devoluciones de llamada para recibir el valor eventual de una promesa o la raz&amp;oacute;n por la que la promesa no se puede cumplir.</target>
        </trans-unit>
        <trans-unit id="46847c5528bf36a862876e82e64f9301b7d8c435" translate="yes" xml:space="preserve">
          <source>Promise that resolves to the passed value.</source>
          <target state="translated">Promesa que se resuelve al valor pasado.</target>
        </trans-unit>
        <trans-unit id="031404877d6971f9d9a6925cfa325d146b1c8336" translate="yes" xml:space="preserve">
          <source>Promise&amp;lt;Application,Error&amp;gt;</source>
          <target state="translated">Promise&amp;lt;Application,Error&amp;gt;</target>
        </trans-unit>
        <trans-unit id="f3922bee8d393adcf25c00ee1087ae678555fbab" translate="yes" xml:space="preserve">
          <source>Promise&amp;lt;ApplicationInstance, Error&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f90fc3965e7f0b82d63fa7168a48a06bdbb2d8a7" translate="yes" xml:space="preserve">
          <source>Promise&amp;lt;Ember.ApplicationInstance, Error&amp;gt;</source>
          <target state="translated">Promesa &amp;lt;Ember.ApplicationInstance, Error&amp;gt;</target>
        </trans-unit>
        <trans-unit id="b8fc6774f9e5c60ba40f1272fa1455b64359b716" translate="yes" xml:space="preserve">
          <source>Promise&amp;lt;EngineInstance,Error&amp;gt;</source>
          <target state="translated">Promise&amp;lt;EngineInstance,Error&amp;gt;</target>
        </trans-unit>
        <trans-unit id="20dfb17fbcb83737eb52f26791ace1434823d825" translate="yes" xml:space="preserve">
          <source>Promise&amp;lt;record&amp;gt;</source>
          <target state="translated">Promise&amp;lt;record&amp;gt;</target>
        </trans-unit>
        <trans-unit id="203fae2a257dd496efa85980bf0ba4c7773be142" translate="yes" xml:space="preserve">
          <source>Promise&amp;lt;record&amp;gt; a promise for the value (record or relationship)</source>
          <target state="translated">Promise &amp;lt;registro&amp;gt; una promesa por el valor (registro o relaci&amp;oacute;n)</target>
        </trans-unit>
        <trans-unit id="dbab246007bbd1239c5f27c1517a97b421235a50" translate="yes" xml:space="preserve">
          <source>PromiseArray</source>
          <target state="translated">PromiseArray</target>
        </trans-unit>
        <trans-unit id="9507c3c92d0c3333ad409798f6bbbe601a9c7186" translate="yes" xml:space="preserve">
          <source>PromiseObject</source>
          <target state="translated">PromiseObject</target>
        </trans-unit>
        <trans-unit id="1e8da2708d11a179d860eb37dfe66600b1bd2b46" translate="yes" xml:space="preserve">
          <source>PromiseProxyMixin</source>
          <target state="translated">PromiseProxyMixin</target>
        </trans-unit>
        <trans-unit id="b1d472e424c03ff52490d1edc8a0e23f95babb92" translate="yes" xml:space="preserve">
          <source>Promises</source>
          <target state="translated">Promises</target>
        </trans-unit>
        <trans-unit id="f44a75e9345297610dff0ce9a97e4b57b6b46aab" translate="yes" xml:space="preserve">
          <source>Promises A+ specifies that any exceptions that occur with a promise must be caught by the promises implementation and bubbled to the last handler. For this reason, it is recommended that you always specify a second rejection handler function to &lt;code&gt;then&lt;/code&gt;. However, &lt;code&gt;RSVP.rethrow&lt;/code&gt; will throw the exception outside of the promise, so it bubbles up to your console if in the browser, or domain/cause uncaught exception in Node. &lt;code&gt;rethrow&lt;/code&gt; will also throw the error again so the error can be handled by the promise per the spec.</source>
          <target state="translated">Promises A + especifica que cualquier excepci&amp;oacute;n que ocurra con una promesa debe ser detectada por la implementaci&amp;oacute;n de las promesas y enviada al &amp;uacute;ltimo controlador. Por esta raz&amp;oacute;n, se recomienda que siempre especifique una segunda funci&amp;oacute;n de controlador de rechazo para &lt;code&gt;then&lt;/code&gt; . Sin embargo, &lt;code&gt;RSVP.rethrow&lt;/code&gt; arrojar&amp;aacute; la excepci&amp;oacute;n fuera de la promesa, por lo que aparecer&amp;aacute; en su consola si est&amp;aacute; en el navegador, o el dominio / causa una excepci&amp;oacute;n no detectada en Node. &lt;code&gt;rethrow&lt;/code&gt; tambi&amp;eacute;n arrojar&amp;aacute; el error nuevamente para que el error pueda ser manejado por la promesa seg&amp;uacute;n la especificaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="f087fe7714b99fc26f67b90d3aebac0b1e3a66e9" translate="yes" xml:space="preserve">
          <source>Promises A+ specifies that any exceptions that occur with a promise must be caught by the promises implementation and bubbled to the last handler. For this reason, it is recommended that you always specify a second rejection handler function to &lt;code&gt;then&lt;/code&gt;. However, &lt;code&gt;rethrow&lt;/code&gt; will throw the exception outside of the promise, so it bubbles up to your console if in the browser, or domain/cause uncaught exception in Node. &lt;code&gt;rethrow&lt;/code&gt; will also throw the error again so the error can be handled by the promise per the spec.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="216c902fd90fd7f61531c27c5a86d60085ec25e9" translate="yes" xml:space="preserve">
          <source>Promises Not Detected</source>
          <target state="translated">Promesas no detectadas</target>
        </trans-unit>
        <trans-unit id="aaca97f965d2c31995d03cad0b27e350c3445416" translate="yes" xml:space="preserve">
          <source>Promises can also be said to &lt;em&gt;resolve&lt;/em&gt; a value. If this value is also a promise, then the original promise's settled state will match the value's settled state. So a promise that &lt;em&gt;resolves&lt;/em&gt; a promise that rejects will itself reject, and a promise that &lt;em&gt;resolves&lt;/em&gt; a promise that fulfills will itself fulfill.</source>
          <target state="translated">Tambi&amp;eacute;n se puede decir que las promesas &lt;em&gt;resuelven&lt;/em&gt; un valor. Si este valor tambi&amp;eacute;n es una promesa, entonces el estado establecido de la promesa original coincidir&amp;aacute; con el estado establecido del valor. Entonces, una promesa que &lt;em&gt;resuelve&lt;/em&gt; una promesa que rechaza, se rechazar&amp;aacute; ella misma, y ​​una promesa que &lt;em&gt;resuelve&lt;/em&gt; una promesa que se cumple, se cumplir&amp;aacute; ella misma.</target>
        </trans-unit>
        <trans-unit id="9f4ddbbce9b9a96df78d3c916a6239398660cebc" translate="yes" xml:space="preserve">
          <source>Promises generated by Ember are all labeled by default. You can also label your own RSVP Promises to find them in the Inspector's Promises tab. All RSVP methods can take a label as the final argument.</source>
          <target state="translated">Las promesas generadas por Ember están todas etiquetadas por defecto.También puedes etiquetar tus propias Promesas RSVP para encontrarlas en la pestaña de Promesas del Inspector.Todos los métodos de RSVP pueden tomar una etiqueta como argumento final.</target>
        </trans-unit>
        <trans-unit id="763b5a177da3472a739c49add6d1a21b1ef06c5d" translate="yes" xml:space="preserve">
          <source>Promises have different colors based on their state.</source>
          <target state="translated">Las promesas tienen diferentes colores según su estado.</target>
        </trans-unit>
        <trans-unit id="f72d01a967e01e14a4a0fa223b3309202aa7c45b" translate="yes" xml:space="preserve">
          <source>Promises shine when abstracting away asynchronous interactions such as &lt;code&gt;XMLHttpRequest&lt;/code&gt;s.</source>
          <target state="translated">Las promesas brillan cuando se abstraen interacciones asincr&amp;oacute;nicas como &lt;code&gt;XMLHttpRequest&lt;/code&gt; s.</target>
        </trans-unit>
        <trans-unit id="9229a94589162572814117eb770a291cf02fddad" translate="yes" xml:space="preserve">
          <source>Promises that are fulfilled have a fulfillment value and are in the fulfilled state. Promises that are rejected have a rejection reason and are in the rejected state. A fulfillment value is never a thenable.</source>
          <target state="translated">Las promesas que se cumplen tienen un valor de cumplimiento y están en el estado de cumplimiento.Las promesas que son rechazadas tienen una razón de rechazo y están en el estado de rechazo.Un valor de cumplimiento nunca es una posibilidad.</target>
        </trans-unit>
        <trans-unit id="03590df139443945075f2a3bc957119a024699ce" translate="yes" xml:space="preserve">
          <source>Promise|Object</source>
          <target state="translated">Promise|Object</target>
        </trans-unit>
        <trans-unit id="4d27d8f128502f9f8111caae7ff62cbb3ed8d690" translate="yes" xml:space="preserve">
          <source>Proper use of loading and error states result in better user experience</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc6c88db2f0703a9e2461a4a8060ccf1cb881998" translate="yes" xml:space="preserve">
          <source>Properties</source>
          <target state="translated">Properties</target>
        </trans-unit>
        <trans-unit id="7ed31ad18cd5e9f2707ad799a56faddf17019c6d" translate="yes" xml:space="preserve">
          <source>Properties and Fields</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="536b9006793cf5c3c1070e09df19893db8668d7a" translate="yes" xml:space="preserve">
          <source>Properties and observers allow one object to observe changes to a property on another object. This is one of the fundamental ways that models, controllers and views communicate with each other in an Ember application.</source>
          <target state="translated">Las propiedades y los observadores permiten a un objeto observar los cambios de una propiedad en otro objeto.Esta es una de las formas fundamentales en que los modelos,controladores y vistas se comunican entre sí en una aplicación Ember.</target>
        </trans-unit>
        <trans-unit id="82033eb711807359e0eec9de4a43a4d74d92c987" translate="yes" xml:space="preserve">
          <source>Properties can be chained as well:</source>
          <target state="translated">Las propiedades también pueden ser encadenadas:</target>
        </trans-unit>
        <trans-unit id="78f31ba10d57ca9b7adea36e3e53f11fe1911b58" translate="yes" xml:space="preserve">
          <source>Properties passed to &lt;code&gt;create&lt;/code&gt; will be available on the instance by the time &lt;code&gt;init&lt;/code&gt; runs, so any code that requires these values should work at that time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c379650924c833d1858287bc08588ceb832a8a0" translate="yes" xml:space="preserve">
          <source>Properties that are defined on the model but are omitted in the normalized JSON API document object will not be updated. Properties that are included in the normalized JSON API document object but not defined on the Model will be ignored.</source>
          <target state="translated">Las propiedades que se definen en el modelo pero que se omiten en el objeto de documento normalizado de la API JSON no se actualizarán.Las propiedades que se incluyen en el objeto de documento normalizado de la API JSON pero que no están definidas en el modelo serán ignoradas.</target>
        </trans-unit>
        <trans-unit id="8abb7eb3c6d007528a186713bf1812adcaa9791f" translate="yes" xml:space="preserve">
          <source>Properties that are defined on the model but are omitted in the normalized JSON:API document object will not be updated. Properties that are included in the normalized JSON:API document object but not defined on the Model will be ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d9e37b396787a5cb09465045bf0f0a4eab7185e" translate="yes" xml:space="preserve">
          <source>Property Observers</source>
          <target state="translated">Observadores de la propiedad</target>
        </trans-unit>
        <trans-unit id="36a5c5d127ff74bc8923ef2c6b095fb263a73471" translate="yes" xml:space="preserve">
          <source>PropertyDecorator</source>
          <target state="translated">PropertyDecorator</target>
        </trans-unit>
        <trans-unit id="1663fd75547a6135b01b3df3236c0070aa5f0920" translate="yes" xml:space="preserve">
          <source>PropertyDescriptor|undefined</source>
          <target state="translated">PropertyDescriptor|undefined</target>
        </trans-unit>
        <trans-unit id="3249cd85365c1d97e6d4a3239b88af5d064671ab" translate="yes" xml:space="preserve">
          <source>Provide the asset path as the first argument, and the list of modules and exports as the second.</source>
          <target state="translated">Proporcione la ruta de los activos como primer argumento,y la lista de módulos y exportaciones como segundo.</target>
        </trans-unit>
        <trans-unit id="4e7ccdfdc46e55a1f8f8e8698100457fdda15b9f" translate="yes" xml:space="preserve">
          <source>Provide the asset path as the first argument:</source>
          <target state="translated">Proporcionar el camino de los activos como primer argumento:</target>
        </trans-unit>
        <trans-unit id="804a830ba49ef5270d658059a3cc0bf26f755759" translate="yes" xml:space="preserve">
          <source>Providing Markup to a Component</source>
          <target state="translated">Proporcionar marcas a un componente</target>
        </trans-unit>
        <trans-unit id="5c9b1ac36b5021ea213e2a9b52e09401d0c16a5b" translate="yes" xml:space="preserve">
          <source>Proxies to the serializer's &lt;code&gt;serialize&lt;/code&gt; method.</source>
          <target state="translated">Proxies para el m&amp;eacute;todo de serializaci&amp;oacute;n del &lt;code&gt;serialize&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="127bb9e4bb030d22e2337f3c5cdd29d2359e0a2d" translate="yes" xml:space="preserve">
          <source>ProxyMixin</source>
          <target state="translated">ProxyMixin</target>
        </trans-unit>
        <trans-unit id="942ee8718427c820129c01d74733d07d8f832498" translate="yes" xml:space="preserve">
          <source>Pure native classes, sharing functionality via class inheritance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4a9924b7849758c869d4fd5e52d97bd8b26ff5e" translate="yes" xml:space="preserve">
          <source>Push some data for a given type into the store.</source>
          <target state="translated">Empujar algunos datos para un tipo determinado en la tienda.</target>
        </trans-unit>
        <trans-unit id="9536ee10c3ab2432a5e6558f3207239d0d2ea555" translate="yes" xml:space="preserve">
          <source>Push some raw data into the store.</source>
          <target state="translated">Empujar algunos datos en bruto en la tienda.</target>
        </trans-unit>
        <trans-unit id="9b601bad7a8b3234afd2de3a37d3cb2f2f119973" translate="yes" xml:space="preserve">
          <source>Push the object onto the end of the array if it is not already present in the array.</source>
          <target state="translated">Empujar el objeto al final de la matriz si no está ya presente en la matriz.</target>
        </trans-unit>
        <trans-unit id="5a5340b1561d715113dc2d332842eae59747ca32" translate="yes" xml:space="preserve">
          <source>Push the object onto the end of the array. Works just like &lt;code&gt;push()&lt;/code&gt; but it is KVO-compliant.</source>
          <target state="translated">Empuje el objeto hacia el final de la matriz. Funciona igual que &lt;code&gt;push()&lt;/code&gt; pero es compatible con KVO.</target>
        </trans-unit>
        <trans-unit id="700f90c6bd512a32dbfb55478282f3c7731cdb78" translate="yes" xml:space="preserve">
          <source>Pushing Records</source>
          <target state="translated">Empujando los registros</target>
        </trans-unit>
        <trans-unit id="08491627624f56833d6474da961363d94fe64101" translate="yes" xml:space="preserve">
          <source>Pushing Records into the Store</source>
          <target state="translated">Empujar los registros a la tienda</target>
        </trans-unit>
        <trans-unit id="ba83f3a04b35edb4a33611352a88476fef56f328" translate="yes" xml:space="preserve">
          <source>QUnit example:</source>
          <target state="translated">Ejemplo de QUnit:</target>
        </trans-unit>
        <trans-unit id="c5aad12964a69eb6cc9ccef39e0f740e43015f0f" translate="yes" xml:space="preserve">
          <source>QUnit passes in an object called an &lt;a href=&quot;https://api.qunitjs.com/assert/&quot;&gt;&lt;code&gt;assert&lt;/code&gt;&lt;/a&gt; to each test function. An &lt;code&gt;assert&lt;/code&gt; has functions, such as &lt;code&gt;equal()&lt;/code&gt;, that allow your test to check for conditions within the test environment. A test must have one passing assert to be successful.</source>
          <target state="translated">QUnit pasa un objeto llamado &lt;a href=&quot;https://api.qunitjs.com/assert/&quot;&gt; &lt;code&gt;assert&lt;/code&gt; &lt;/a&gt; a cada funci&amp;oacute;n de prueba. Una &lt;code&gt;assert&lt;/code&gt; tiene funciones, como &lt;code&gt;equal()&lt;/code&gt; , que le permiten a su prueba verificar las condiciones dentro del entorno de prueba. Una prueba debe tener una afirmaci&amp;oacute;n aprobada para tener &amp;eacute;xito.</target>
        </trans-unit>
        <trans-unit id="8efa9f9b516b6bc7822720c80c7291bdcd7559ed" translate="yes" xml:space="preserve">
          <source>QUnit, QUnit DOM</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3229861d9c9111cf61a19e43da48ddbbd1b48efd" translate="yes" xml:space="preserve">
          <source>Query Parameters</source>
          <target state="translated">Parámetros de la consulta</target>
        </trans-unit>
        <trans-unit id="0fd0190c18a1b0c89567786d2da87abd9ad2e6a8" translate="yes" xml:space="preserve">
          <source>Query Params</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5139ef15ef3085f1688a1e87d332dfd36e0ceff6" translate="yes" xml:space="preserve">
          <source>Query param values are cast to the same datatype as the default value, e.g. a URL change from &lt;code&gt;/?page=3&lt;/code&gt; to &lt;code&gt;/?page=2&lt;/code&gt; will set &lt;code&gt;controller:articles&lt;/code&gt;'s &lt;code&gt;page&lt;/code&gt; property to the number &lt;code&gt;2&lt;/code&gt;, rather than the string &lt;code&gt;&quot;2&quot;&lt;/code&gt;. The same also applies to boolean default values. If the default value is an array, the string will be parsed using &lt;code&gt;JSON.parse&lt;/code&gt;.</source>
          <target state="translated">Consulta de los valores param se echan al mismo tipo de datos como el valor predeterminado, por ejemplo, un cambio de URL desde &lt;code&gt;/?page=3&lt;/code&gt; A &lt;code&gt;/?page=2&lt;/code&gt; Establecer&amp;aacute; &lt;code&gt;controller:articles&lt;/code&gt; 's &lt;code&gt;page&lt;/code&gt; propiedad en el n&amp;uacute;mero &lt;code&gt;2&lt;/code&gt; , en lugar de la cadena &lt;code&gt;&quot;2&quot;&lt;/code&gt; . Lo mismo se aplica tambi&amp;eacute;n a los valores booleanos predeterminados. Si el valor predeterminado es una matriz, la cadena se analizar&amp;aacute; mediante &lt;code&gt;JSON.parse&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0aca39e962863236da8c92fd756de102fb200868" translate="yes" xml:space="preserve">
          <source>Query parameters are optional key-value pairs that appear to the right of the &lt;code&gt;?&lt;/code&gt; in a URL. For example, the following URL has two query params, &lt;code&gt;sort&lt;/code&gt; and &lt;code&gt;page&lt;/code&gt;, with respective values &lt;code&gt;ASC&lt;/code&gt; and &lt;code&gt;2&lt;/code&gt;:</source>
          <target state="translated">Los par&amp;aacute;metros de consulta son pares clave-valor opcionales que aparecen a la derecha de &lt;code&gt;?&lt;/code&gt; en una URL. Por ejemplo, la siguiente URL tiene dos par&amp;aacute;metros de consulta, &lt;code&gt;sort&lt;/code&gt; y &lt;code&gt;page&lt;/code&gt; , con los valores respectivos &lt;code&gt;ASC&lt;/code&gt; y &lt;code&gt;2&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="b0f8ce0e88182d09e5b36ad33c8efbb1f3a42a78" translate="yes" xml:space="preserve">
          <source>Query params allow for additional application state to be serialized into the URL that can't otherwise fit into the &lt;em&gt;path&lt;/em&gt; of the URL (i.e. everything to the left of the &lt;code&gt;?&lt;/code&gt;). Common use cases for query params include representing the current page number in a paginated collection, filter criteria, or sorting criteria.</source>
          <target state="translated">Los par&amp;aacute;metros de consulta permiten que el estado de la aplicaci&amp;oacute;n adicional se serialice en la URL que de otra manera no podr&amp;iacute;a encajar en la &lt;em&gt;ruta&lt;/em&gt; de la URL (es decir, todo lo que est&amp;aacute; a la izquierda de &lt;code&gt;?&lt;/code&gt; ). Los casos de uso comunes para los par&amp;aacute;metros de consulta incluyen la representaci&amp;oacute;n del n&amp;uacute;mero de p&amp;aacute;gina actual en una colecci&amp;oacute;n paginada, criterios de filtrado o criterios de clasificaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="b1782f7b18226435ee790bf1a339595b9fcaafce" translate="yes" xml:space="preserve">
          <source>Query params are declared on route-driven controllers. For example, to configure query params that are active within the &lt;code&gt;articles&lt;/code&gt; route, they must be declared on &lt;code&gt;controller:articles&lt;/code&gt;.</source>
          <target state="translated">Los par&amp;aacute;metros de consulta se declaran en controladores controlados por rutas. Por ejemplo, para configurar los par&amp;aacute;metros de consulta que est&amp;aacute;n activos dentro de la ruta de &lt;code&gt;articles&lt;/code&gt; , deben declararse en el &lt;code&gt;controller:articles&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b1e8c5f9eb6a51268771357d73e5c3d414ee77b7" translate="yes" xml:space="preserve">
          <source>Query params that require additional customization can be provided along with strings in the &lt;code&gt;queryParams&lt;/code&gt; array.</source>
          <target state="translated">Los par&amp;aacute;metros de consulta que requieren personalizaci&amp;oacute;n adicional se pueden proporcionar junto con cadenas en la matriz &lt;code&gt;queryParams&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="84d51a6c79840a7e20e6f3b3c232167ddd101fdb" translate="yes" xml:space="preserve">
          <source>Querying for A Single Record</source>
          <target state="translated">Consulta de un único registro</target>
        </trans-unit>
        <trans-unit id="bab1721e2fbda766f83183971199264a105762c8" translate="yes" xml:space="preserve">
          <source>Querying for Multiple Records</source>
          <target state="translated">Búsqueda de registros múltiples</target>
        </trans-unit>
        <trans-unit id="455083cac2ae96eabe3895762b6080aa09e6afa4" translate="yes" xml:space="preserve">
          <source>Quick Start</source>
          <target state="translated">Inicio rápido</target>
        </trans-unit>
        <trans-unit id="230411ef89f03596bd363a86e0479171061c9d26" translate="yes" xml:space="preserve">
          <source>RESTAdapter</source>
          <target state="translated">RESTAdapter</target>
        </trans-unit>
        <trans-unit id="d951635668302f4b57a9b19aab103a9dba73ce9f" translate="yes" xml:space="preserve">
          <source>RESTSerializer</source>
          <target state="translated">RESTSerializer</target>
        </trans-unit>
        <trans-unit id="9e2ff6c5483cb39d97a402f850cb39e32d0c9dbc" translate="yes" xml:space="preserve">
          <source>RSVP</source>
          <target state="translated">RSVP</target>
        </trans-unit>
        <trans-unit id="cc85f8587031356b78b2448d63c222acc180e5f9" translate="yes" xml:space="preserve">
          <source>RSVP.EventTarget</source>
          <target state="translated">RSVP.EventTarget</target>
        </trans-unit>
        <trans-unit id="8c3018eec21a26738e481a8b5ea2b8b6ade95786" translate="yes" xml:space="preserve">
          <source>RSVP.Promise</source>
          <target state="translated">RSVP.Promise</target>
        </trans-unit>
        <trans-unit id="4e1ef1585228db21136c63e2c103fa2fc8cba9b0" translate="yes" xml:space="preserve">
          <source>RSVP.Promise&amp;lt;any&amp;gt;</source>
          <target state="translated">RSVP.Promise&amp;lt;any&amp;gt;</target>
        </trans-unit>
        <trans-unit id="02ed91fc301225e19af656a773481bbe02910c4f" translate="yes" xml:space="preserve">
          <source>RSVP.Promise&amp;lt;undefined&amp;gt;</source>
          <target state="translated">RSVP.Promise&amp;lt;undefined&amp;gt;</target>
        </trans-unit>
        <trans-unit id="0e57c7077cfdd6dccd21781d8c00850d345148e3" translate="yes" xml:space="preserve">
          <source>Rather than create an arbitrary set of conventions, Ember Data is designed to work out of the box with &lt;a href=&quot;http://jsonapi.org&quot;&gt;JSON API&lt;/a&gt;. JSON API is a formal specification for building conventional, robust, and performant APIs that allow clients and servers to communicate model data.</source>
          <target state="translated">En lugar de crear un conjunto arbitrario de convenciones, Ember Data est&amp;aacute; dise&amp;ntilde;ado para funcionar de &lt;a href=&quot;http://jsonapi.org&quot;&gt;inmediato&lt;/a&gt; con la API JSON . JSON API es una especificaci&amp;oacute;n formal para crear API convencionales, robustas y de alto rendimiento que permiten a los clientes y servidores comunicar datos del modelo.</target>
        </trans-unit>
        <trans-unit id="20a3458f1862c89f455c490634fb5f573475fbc2" translate="yes" xml:space="preserve">
          <source>Rather than writing the higher level app code that internally invokes the various run loop scheduling functions, we have stripped away the covers, and shown the raw run-loop interactions.</source>
          <target state="translated">En lugar de escribir el código de la aplicación de alto nivel que invoca internamente las diversas funciones de programación del bucle de ejecución,hemos quitado las tapas y mostrado las interacciones del bucle de ejecución en bruto.</target>
        </trans-unit>
        <trans-unit id="02143f2c5abf0fcc77c1815c31c2586f2ab77a8d" translate="yes" xml:space="preserve">
          <source>Re-route to the existing url</source>
          <target state="translated">Reencaminar a la url existente</target>
        </trans-unit>
        <trans-unit id="555768dd72554ce46dd9aaba0b928945c0c45add" translate="yes" xml:space="preserve">
          <source>Read some blog posts about data loading in Ember. Apps and APIs come in so many different shapes and sizes that it's helpful to seek out examples that are similar to your goals before digging into the details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4762fc07015da670d25188e13fd68f6f63cbbe2e" translate="yes" xml:space="preserve">
          <source>Read-only Attributes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c853a28871d264d43a0d86e34fdf1c1f3e7482f4" translate="yes" xml:space="preserve">
          <source>Readonly Nested Data</source>
          <target state="translated">Datos anidados de sólo lectura</target>
        </trans-unit>
        <trans-unit id="a541f922c72dc2bbd61c03c85126d821763fdbd8" translate="yes" xml:space="preserve">
          <source>Recall that our modifier will manage the DOM (i.e. calling the audio element's &lt;code&gt;play&lt;/code&gt; or &lt;code&gt;pause&lt;/code&gt; method). All the component needs to do is to track whether the audio is playing:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ced23c694be11636b1a1057eb27e72fe6d077ceb" translate="yes" xml:space="preserve">
          <source>Recall that there were a few exceptions. The following input attributes must be passed as arguments (i.e. do prepend &lt;code&gt;@&lt;/code&gt;) to the &lt;code&gt;&amp;lt;Input&amp;gt;&lt;/code&gt; component:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c10e60d11c6190929e46b216e3485144d573585" translate="yes" xml:space="preserve">
          <source>Receives a destroyable and a destructor function, and de-associates the destructor from the destroyable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d7346f83dd4ebab78f9b401d93fec94888fd513" translate="yes" xml:space="preserve">
          <source>Receives a destroyable object and a destructor function, and associates the function with it. When the destroyable is destroyed with destroy, or when its parent is destroyed, the destructor function will be called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfb21c34cc91761b59549492bc38bb22aee9aa80" translate="yes" xml:space="preserve">
          <source>Receives a destroyable, and returns true if the destroyable has begun destroying. Otherwise returns false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22c4309d8d736af351252e3939d38e7b00f34610" translate="yes" xml:space="preserve">
          <source>Receives a destroyable, and returns true if the destroyable has finished destroying. Otherwise returns false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="698fcc6e06623ab7a1f886a395c6817e24d08745" translate="yes" xml:space="preserve">
          <source>Recomputing is fine in most cases. If the computation that happens in the getter is very expensive, however, you will want to cache the value and retrieve it when the dependencies haven't changed. You want to recompute only if a dependency has been updated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b129f9f5e547d2585b00b80301e33d0ccd886142" translate="yes" xml:space="preserve">
          <source>Record States and Filtering</source>
          <target state="translated">Estados de registro y filtrado</target>
        </trans-unit>
        <trans-unit id="c4612a8c735947d2f4860fb003a9cdd796980b66" translate="yes" xml:space="preserve">
          <source>RecordArray</source>
          <target state="translated">RecordArray</target>
        </trans-unit>
        <trans-unit id="779639f77d26423e55093890463c73df4117f2b4" translate="yes" xml:space="preserve">
          <source>RecordReference</source>
          <target state="translated">RecordReference</target>
        </trans-unit>
        <trans-unit id="e51c55255be9007d473b3c04b4553c2a27d6f03b" translate="yes" xml:space="preserve">
          <source>Records</source>
          <target state="translated">Records</target>
        </trans-unit>
        <trans-unit id="09f48f492f46fd16811c910592ad171170771ab8" translate="yes" xml:space="preserve">
          <source>Records in Ember Data are persisted on a per-instance basis. Call &lt;a href=&quot;http://emberjs.com/api/data/classes/DS.Model.html#method_save&quot;&gt;&lt;code&gt;save()&lt;/code&gt;&lt;/a&gt; on any instance of &lt;code&gt;DS.Model&lt;/code&gt; and it will make a network request.</source>
          <target state="translated">Los registros en Ember Data se conservan por instancia. Llame a &lt;a href=&quot;http://emberjs.com/api/data/classes/DS.Model.html#method_save&quot;&gt; &lt;code&gt;save()&lt;/code&gt; &lt;/a&gt; en cualquier instancia de &lt;code&gt;DS.Model&lt;/code&gt; y realizar&amp;aacute; una solicitud de red.</target>
        </trans-unit>
        <trans-unit id="ed751fe2f444ff45c31b40f1861107d5255a6d0f" translate="yes" xml:space="preserve">
          <source>Records in Ember Data are persisted on a per-instance basis. Call &lt;a href=&quot;https://api.emberjs.com/ember-data/release/classes/Model/methods#save&quot;&gt;&lt;code&gt;save()&lt;/code&gt;&lt;/a&gt; on any instance of &lt;code&gt;Model&lt;/code&gt; and it will make a network request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93f89c3ab4a799a6a0aab99eb1bb7100ea88724d" translate="yes" xml:space="preserve">
          <source>Records that already exist on the backend are updated using the HTTP &lt;code&gt;PATCH&lt;/code&gt; verb.</source>
          <target state="translated">Los registros que ya existen en el backend se actualizan mediante el verbo HTTP &lt;code&gt;PATCH&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2f7c32c0b4917effc40dd0a0959efa8e648135b6" translate="yes" xml:space="preserve">
          <source>Records without an &lt;code&gt;id&lt;/code&gt; property are not considered embedded records, model instances must have an &lt;code&gt;id&lt;/code&gt; property to be used with Ember Data.</source>
          <target state="translated">Los registros sin una propiedad de &lt;code&gt;id&lt;/code&gt; entificaci&amp;oacute;n no se consideran registros incrustados, las instancias del modelo deben tener una propiedad de &lt;code&gt;id&lt;/code&gt; entificaci&amp;oacute;n para usarse con Ember Data.</target>
        </trans-unit>
        <trans-unit id="5ac9a9807e12ead40a070a8626218b2274db6816" translate="yes" xml:space="preserve">
          <source>Recovering from Rejection</source>
          <target state="translated">Recuperándose del rechazo</target>
        </trans-unit>
        <trans-unit id="60e22121bdd0bc71cdb2bae2a3aa577006b2eae9" translate="yes" xml:space="preserve">
          <source>Redirecting</source>
          <target state="translated">Redirecting</target>
        </trans-unit>
        <trans-unit id="d0b1214393f95eb4505b13838fbc94ad949a9823" translate="yes" xml:space="preserve">
          <source>Refactor some components to use &lt;a href=&quot;../../components&quot;&gt;Glimmer Components&lt;/a&gt;. Good components to refactor first are those that do not rely on two-way bindings, computed properties, or observers. These components will serve as examples that your coworkers can refer back to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="699246f530a0f9bdddf368649ef2dcc19173ed67" translate="yes" xml:space="preserve">
          <source>Refactor some components to use &lt;a href=&quot;https://guides.emberjs.com/components/&quot;&gt;Glimmer Components&lt;/a&gt;. Good components to refactor first are those that do not rely on two-way bindings, computed properties, or observers. These components will serve as examples that your coworkers can refer back to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f398f3fd3d702745528a0e9f42da80b185589162" translate="yes" xml:space="preserve">
          <source>Refactoring checklist</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bfa4764dfd3c083f396267379ee172ae1854a8d" translate="yes" xml:space="preserve">
          <source>Refer to documentation for &lt;code&gt;beforeModel&lt;/code&gt; for a description of transition-pausing semantics when a promise is returned from this hook.</source>
          <target state="translated">Consulte la documentaci&amp;oacute;n de &lt;code&gt;beforeModel&lt;/code&gt; para obtener una descripci&amp;oacute;n de la sem&amp;aacute;ntica de pausa de transici&amp;oacute;n cuando se devuelve una promesa desde este gancho.</target>
        </trans-unit>
        <trans-unit id="db1c784524e1b54011a95823026161f7c8517fe0" translate="yes" xml:space="preserve">
          <source>Reference</source>
          <target state="translated">Reference</target>
        </trans-unit>
        <trans-unit id="99f62095529c6af5ce3c4c2976cf5e8e543250eb" translate="yes" xml:space="preserve">
          <source>References to other records should be done by ID. For example, if you have a model with a &lt;code&gt;hasMany&lt;/code&gt; relationship:</source>
          <target state="translated">Las referencias a otros registros deben hacerse por ID. Por ejemplo, si tiene un modelo con una relaci&amp;oacute;n &lt;code&gt;hasMany&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="69f6bad51245a7a68b6a5d503ecf8f42a933df09" translate="yes" xml:space="preserve">
          <source>Reflexive Relations</source>
          <target state="translated">Relaciones Reflexivas</target>
        </trans-unit>
        <trans-unit id="6224a939ef652c56dddd065c6b6575aface1416e" translate="yes" xml:space="preserve">
          <source>Refresh the model on this route and any child routes, firing the &lt;code&gt;beforeModel&lt;/code&gt;, &lt;code&gt;model&lt;/code&gt;, and &lt;code&gt;afterModel&lt;/code&gt; hooks in a similar fashion to how routes are entered when transitioning in from other route. The current route params (e.g. &lt;code&gt;article_id&lt;/code&gt;) will be passed in to the respective model hooks, and if a different model is returned, &lt;code&gt;setupController&lt;/code&gt; and associated route hooks will re-fire as well.</source>
          <target state="translated">Actualice el modelo en esta ruta y las rutas &lt;code&gt;beforeModel&lt;/code&gt; , &lt;code&gt;afterModel&lt;/code&gt; ganchos beforeModel , &lt;code&gt;model&lt;/code&gt; y afterModel de manera similar a como se ingresan las rutas cuando se realiza la transici&amp;oacute;n desde otra ruta. Los par&amp;aacute;metros de ruta actuales (por ejemplo, &lt;code&gt;article_id&lt;/code&gt; ) se pasar&amp;aacute;n a los respectivos ganchos del modelo, y si se devuelve un modelo diferente, &lt;code&gt;setupController&lt;/code&gt; y los ganchos de ruta asociados tambi&amp;eacute;n volver&amp;aacute;n a activarse .</target>
        </trans-unit>
        <trans-unit id="ca5db4fe93ba98fe1b576309acf2388052f2a36a" translate="yes" xml:space="preserve">
          <source>RegExp</source>
          <target state="translated">RegExp</target>
        </trans-unit>
        <trans-unit id="06b326b8df4964d11fe7f98ffc257e678212ac9e" translate="yes" xml:space="preserve">
          <source>Regardless of how the URL becomes set, the Ember router then maps the current URL to one or more route handlers. A route handler can do several things:</source>
          <target state="translated">Independientemente de cómo se configure la URL,el router Ember asigna la URL actual a uno o más manejadores de ruta.Un manejador de ruta puede hacer varias cosas:</target>
        </trans-unit>
        <trans-unit id="13ef3793fbf15d676e0da171536ccb7a8b55c72a" translate="yes" xml:space="preserve">
          <source>Regardless of the serializer used, this metadata is extracted from the response. You can then read it with &lt;code&gt;.get('meta')&lt;/code&gt;.</source>
          <target state="translated">Independientemente del serializador utilizado, estos metadatos se extraen de la respuesta. Luego puede leerlo con &lt;code&gt;.get('meta')&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6bf45590a3ae91521f07c3e91845970cf7b6a81b" translate="yes" xml:space="preserve">
          <source>Regardless of the serializer used, this metadata is extracted from the response. You can then read it with &lt;code&gt;.meta&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="580b18a39e5b39765415c0eed123af6da265aa11" translate="yes" xml:space="preserve">
          <source>Register options for a particular factory.</source>
          <target state="translated">Registra las opciones de una fábrica en particular.</target>
        </trans-unit>
        <trans-unit id="6291ba0522621d5582aa26e4decc87be7d141a60" translate="yes" xml:space="preserve">
          <source>Register/Unregister additional test helpers.</source>
          <target state="translated">Registra y desregistra ayudantes de prueba adicionales.</target>
        </trans-unit>
        <trans-unit id="57ac94516e6ba3226fa58ffc652e3e7312c91e5d" translate="yes" xml:space="preserve">
          <source>Registered factories are &lt;strong&gt;instantiated&lt;/strong&gt; by having &lt;code&gt;create&lt;/code&gt; called on them. Additionally they are &lt;strong&gt;singletons&lt;/strong&gt;, each time they are looked up they return the same instance.</source>
          <target state="translated">Se &lt;code&gt;create&lt;/code&gt; &lt;strong&gt;instancias de las&lt;/strong&gt; f&amp;aacute;bricas registradas al haberlas llamado create . Adem&amp;aacute;s, son &lt;strong&gt;singletons&lt;/strong&gt; , cada vez que se buscan devuelven la misma instancia.</target>
        </trans-unit>
        <trans-unit id="63c9b0772d57be72a0c5d903431a873fcdb8a6f2" translate="yes" xml:space="preserve">
          <source>Registering Already Instantiated Objects</source>
          <target state="translated">Registro de los objetos ya instalados</target>
        </trans-unit>
        <trans-unit id="4e4aa5ae30460fc62431c4dbebe42f4477bbe300" translate="yes" xml:space="preserve">
          <source>Registering Singletons vs. Non-Singletons</source>
          <target state="translated">Registrando a los solteros contra los no solteros</target>
        </trans-unit>
        <trans-unit id="aba41c3a5d53b4b36fb1b8a0fdb902b0488d3a7a" translate="yes" xml:space="preserve">
          <source>Registering a Library</source>
          <target state="translated">Registro de una biblioteca</target>
        </trans-unit>
        <trans-unit id="0803d3a3d9f15e36c86ae2132d20124795a72459" translate="yes" xml:space="preserve">
          <source>Registers a factory that can be used for dependency injection (with &lt;code&gt;inject&lt;/code&gt;) or for service lookup. Each factory is registered with a full name including two parts: &lt;code&gt;type:name&lt;/code&gt;.</source>
          <target state="translated">Registra una f&amp;aacute;brica que se puede usar para inyecci&amp;oacute;n de dependencia (con &lt;code&gt;inject&lt;/code&gt; ) o para b&amp;uacute;squeda de servicios. Cada f&amp;aacute;brica est&amp;aacute; registrada con un nombre completo que incluye dos partes: &lt;code&gt;type:name&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9f7e42ab82b7c92882f8e66014048c4f809e7e13" translate="yes" xml:space="preserve">
          <source>Registration keys have two segments split by a colon (&lt;code&gt;:&lt;/code&gt;). The first segment is the framework factory type, and the second is the name of the particular factory. Hence, the &lt;code&gt;index&lt;/code&gt; template has the key &lt;code&gt;template:index&lt;/code&gt;. Ember has several built-in factory types, such as &lt;code&gt;service&lt;/code&gt;, &lt;code&gt;route&lt;/code&gt;, &lt;code&gt;template&lt;/code&gt;, and &lt;code&gt;component&lt;/code&gt;.</source>
          <target state="translated">Las claves de registro tienen dos segmentos separados por dos puntos ( &lt;code&gt;:&lt;/code&gt; ). El primer segmento es el tipo de f&amp;aacute;brica de estructuras y el segundo es el nombre de la f&amp;aacute;brica en particular. Por lo tanto, la plantilla de &lt;code&gt;index&lt;/code&gt; tiene la &lt;code&gt;template:index&lt;/code&gt; clave : index . Ember tiene varios tipos de f&amp;aacute;brica incorporados, como &lt;code&gt;service&lt;/code&gt; , &lt;code&gt;route&lt;/code&gt; , &lt;code&gt;template&lt;/code&gt; y &lt;code&gt;component&lt;/code&gt; e .</target>
        </trans-unit>
        <trans-unit id="74bb08da802a694a3d25bf4c3835ded58d2f6fc6" translate="yes" xml:space="preserve">
          <source>RegistryProxy</source>
          <target state="translated">RegistryProxy</target>
        </trans-unit>
        <trans-unit id="0a580368138bbedf511a06592637b0c30c98bec4" translate="yes" xml:space="preserve">
          <source>RegistryProxyMixin</source>
          <target state="translated">RegistryProxyMixin</target>
        </trans-unit>
        <trans-unit id="63a6a6ef6785a3cb9c1352a24ea4357d90e0f58f" translate="yes" xml:space="preserve">
          <source>RegistryProxyMixin  (private)</source>
          <target state="translated">RegistryProxyMixin (privado)</target>
        </trans-unit>
        <trans-unit id="0db97526891b25965235d31bf6cc3d8269a10d30" translate="yes" xml:space="preserve">
          <source>RegistryProxyMixin is used to provide public access to specific registry functionality.</source>
          <target state="translated">RegistryProxyMixin se utiliza para proporcionar acceso público a la funcionalidad específica del registro.</target>
        </trans-unit>
        <trans-unit id="b4fc9c8d52106a97dfa0edae4264e66eed1c5b26" translate="yes" xml:space="preserve">
          <source>Regular npm packages</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f5b133edab536327af2bd039bb8a3451c0c686b" translate="yes" xml:space="preserve">
          <source>Rejected model promises halt transitions, but because promises are chainable, you can catch promise rejects within the &lt;code&gt;model&lt;/code&gt; hook itself and convert them into fulfills that won't halt the transition.</source>
          <target state="translated">Las promesas del modelo rechazado detienen las transiciones, pero debido a que las promesas se pueden encadenar, puede detectar las promesas rechazadas dentro del gancho del &lt;code&gt;model&lt;/code&gt; o y convertirlas en cumplidos que no detendr&amp;aacute;n la transici&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="4345bd81dfdc7be3c7d907680b6150899b9077a3" translate="yes" xml:space="preserve">
          <source>RelationshipSchema</source>
          <target state="translated">RelationshipSchema</target>
        </trans-unit>
        <trans-unit id="229981dd1dc44fcc3bf72493583bb63fa236cecf" translate="yes" xml:space="preserve">
          <source>Relationships</source>
          <target state="translated">Relationships</target>
        </trans-unit>
        <trans-unit id="7ebee1cc4a1ef9624d817353b136be3fe22ab7fc" translate="yes" xml:space="preserve">
          <source>Relationships are usually represented by ids to the record in the relationship. The related records can then be sideloaded in the response under a key for the type.</source>
          <target state="translated">Las relaciones suelen estar representadas por identificaciones para el registro en la relación.Los registros relacionados pueden entonces ser puestos de lado en la respuesta bajo una clave para el tipo.</target>
        </trans-unit>
        <trans-unit id="d4abfee2fa163eac14a7ded7bb1fdab42b33f49a" translate="yes" xml:space="preserve">
          <source>Relationships as Promises</source>
          <target state="translated">Las relaciones como promesas</target>
        </trans-unit>
        <trans-unit id="34bad3622d708d6c624e5f19e7f5f5bb00dbbb2d" translate="yes" xml:space="preserve">
          <source>Relevant keywords for search.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="282e0c1116f45802ea510d978c4bb1aaeda3e638" translate="yes" xml:space="preserve">
          <source>Reload the record from the adapter.</source>
          <target state="translated">Recarga el disco desde el adaptador.</target>
        </trans-unit>
        <trans-unit id="b9032b6f32f6e2281f4ae7c18e28a848286c6415" translate="yes" xml:space="preserve">
          <source>Reloading</source>
          <target state="translated">Reloading</target>
        </trans-unit>
        <trans-unit id="4d8114b387125160739c4384d9e4a3715ae113c8" translate="yes" xml:space="preserve">
          <source>Reloads all of the records in the manyArray. If the manyArray holds a relationship that was originally fetched using a links url Ember Data will revisit the original links url to repopulate the relationship.</source>
          <target state="translated">Recarga todos los registros en el ManyArray.Si el manyArray tiene una relación que fue originalmente obtenida usando una url de enlaces,Ember Data revisará la url de enlaces original para repoblar la relación.</target>
        </trans-unit>
        <trans-unit id="d6324829793579791ae457de1efbafabdce16f68" translate="yes" xml:space="preserve">
          <source>Reloads the record if it is already loaded. If the record is not loaded it will load the record via &lt;code&gt;store.findRecord&lt;/code&gt;</source>
          <target state="translated">Vuelve a cargar el registro si ya est&amp;aacute; cargado. Si el registro no est&amp;aacute; cargado, cargar&amp;aacute; el registro a trav&amp;eacute;s de &lt;code&gt;store.findRecord&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5bd1485c9bed37c1cf2bf2094bc180edee39e981" translate="yes" xml:space="preserve">
          <source>Reloads this has-many relationship.</source>
          <target state="translated">Recarga esta relación de &quot;tiene-muchos&quot;.</target>
        </trans-unit>
        <trans-unit id="59de02ca246fcb0ddd1b90d1b40ad31e348afc0d" translate="yes" xml:space="preserve">
          <source>Reloads this has-many relationship. This causes a request to the specified relationship link or reloads all items currently in the relationship.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4276922880097708e01378b7c926ae47b0ca730" translate="yes" xml:space="preserve">
          <source>Relying on autoruns is not a rigorous or efficient way to use the run loop. Wrapping event handlers manually are preferred.</source>
          <target state="translated">Confiar en las autoejecuciones no es una forma rigurosa o eficiente de usar el bucle de ejecución.Se prefieren los manejadores de eventos de envoltura manual.</target>
        </trans-unit>
        <trans-unit id="4656fc9d7b003300b618f2b5e454b26fe556d1b6" translate="yes" xml:space="preserve">
          <source>Remember that &lt;code&gt;{{firstName}}&lt;/code&gt; and &lt;code&gt;{{lastName}}&lt;/code&gt; are bound data. That means if the value of one of those properties changes, the DOM will be updated automatically.</source>
          <target state="translated">Recuerde que &lt;code&gt;{{firstName}}&lt;/code&gt; y &lt;code&gt;{{lastName}}&lt;/code&gt; son datos vinculados. Eso significa que si el valor de una de esas propiedades cambia, el DOM se actualizar&amp;aacute; autom&amp;aacute;ticamente.</target>
        </trans-unit>
        <trans-unit id="685e29f4b662e2c0f1a0744e653894d1da2671ad" translate="yes" xml:space="preserve">
          <source>Remember that &lt;em&gt;only events&lt;/em&gt; should ever cause a state transition. You should never call &lt;code&gt;transitionTo()&lt;/code&gt; from outside a state's event handler. If you are tempted to do so, create a new event and send that to the state manager.</source>
          <target state="translated">Recuerde que &lt;em&gt;solo los eventos&lt;/em&gt; deber&amp;iacute;an causar una transici&amp;oacute;n de estado. Nunca debe llamar a &lt;code&gt;transitionTo()&lt;/code&gt; desde fuera del controlador de eventos de un estado. Si tiene la tentaci&amp;oacute;n de hacerlo, cree un nuevo evento y env&amp;iacute;elo al administrador estatal.</target>
        </trans-unit>
        <trans-unit id="2772f3979b8490dfd9afc9103221e01e92eba84f" translate="yes" xml:space="preserve">
          <source>Remove a previously added helper method.</source>
          <target state="translated">Quitar un método de ayuda previamente añadido.</target>
        </trans-unit>
        <trans-unit id="6c924c7cc754f0fab9bce280a8c42f9e3cff21cd" translate="yes" xml:space="preserve">
          <source>Remove all elements from the array. This is useful if you want to reuse an existing array without having to recreate it.</source>
          <target state="translated">Eliminar todos los elementos de la matriz.Esto es útil si quieres reutilizar una matriz existente sin tener que recrearla.</target>
        </trans-unit>
        <trans-unit id="f6355dee47de1f32bf6f9799d78b6fee6bcd492e" translate="yes" xml:space="preserve">
          <source>Remove all occurrences of an object in the array.</source>
          <target state="translated">Eliminar todas las ocurrencias de un objeto en la matriz.</target>
        </trans-unit>
        <trans-unit id="152c1eaa085138cfa9d77a0942ce9534a3d76fe7" translate="yes" xml:space="preserve">
          <source>Remove an event listener</source>
          <target state="translated">Eliminar a un oyente de eventos</target>
        </trans-unit>
        <trans-unit id="4aa91b51bc12a3f5d89e5b53340b91ffc806cb11" translate="yes" xml:space="preserve">
          <source>Remove an object at the specified index using the &lt;code&gt;replace()&lt;/code&gt; primitive method. You can pass either a single index, or a start and a length.</source>
          <target state="translated">Elimina un objeto en el &amp;iacute;ndice especificado usando el m&amp;eacute;todo primitivo &lt;code&gt;replace()&lt;/code&gt; . Puede pasar un solo &amp;iacute;ndice o un inicio y una longitud.</target>
        </trans-unit>
        <trans-unit id="b8553b7b30d27bd6e52896284d645032511283c5" translate="yes" xml:space="preserve">
          <source>Remove an observer you have previously registered on this object. Pass the same key, target, and method you passed to &lt;code&gt;addObserver()&lt;/code&gt; and your target will no longer receive notifications.</source>
          <target state="translated">Elimine un observador que haya registrado previamente en este objeto. Pase la misma clave, objetivo y m&amp;eacute;todo que pas&amp;oacute; a &lt;code&gt;addObserver()&lt;/code&gt; y su objetivo ya no recibir&amp;aacute; notificaciones.</target>
        </trans-unit>
        <trans-unit id="1fff707f00d08e1f5dfe2689260813207706b7e3" translate="yes" xml:space="preserve">
          <source>Removes an array observer from the object if the observer is current registered. Calling this method multiple times with the same object will have no effect.</source>
          <target state="translated">Retira un observador de la matriz del objeto si el observador está registrado actualmente.Llamar a este método varias veces con el mismo objeto no tendrá ningún efecto.</target>
        </trans-unit>
        <trans-unit id="3723e36afe7e7b4392638a97cc108f54843aa4a5" translate="yes" xml:space="preserve">
          <source>Removes each object in the passed array from the receiver.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18f9a7bd887e2ad04e12b6586614eadc5a5bf73f" translate="yes" xml:space="preserve">
          <source>Removes each object in the passed enumerable from the receiver.</source>
          <target state="translated">Quita cada objeto del enumerable pasado del receptor.</target>
        </trans-unit>
        <trans-unit id="878c0c65b88d3bf26a4e986890bfb205e92a4a9b" translate="yes" xml:space="preserve">
          <source>Removes identifiers from the &lt;code&gt;RecordArray&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53ebb1fef0864af0278ae31f4ac0ec30dc3e82ad" translate="yes" xml:space="preserve">
          <source>Removing Objects</source>
          <target state="translated">Retirar objetos</target>
        </trans-unit>
        <trans-unit id="6d84c2db53b8c4b4553001a5c3d3b995a8fc5d9b" translate="yes" xml:space="preserve">
          <source>Removing Relationships</source>
          <target state="translated">Eliminar las relaciones</target>
        </trans-unit>
        <trans-unit id="9f698ccebc9b22f6dbcefd96182ce1c685d4fb77" translate="yes" xml:space="preserve">
          <source>Removing jQuery completely</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="041f6ca8e2d2dc5b856e1d078db74ba2885f4518" translate="yes" xml:space="preserve">
          <source>Rendering Performance</source>
          <target state="translated">Rendimiento de la representación</target>
        </trans-unit>
        <trans-unit id="78e1949446438590a34392113638b5521c9fcf75" translate="yes" xml:space="preserve">
          <source>Rendering Tests</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0985a0ecfabc2231124bd8de762617aaeafd5bd5" translate="yes" xml:space="preserve">
          <source>Rendering a Template</source>
          <target state="translated">Renderizando una plantilla</target>
        </trans-unit>
        <trans-unit id="67db7b0b091d6d767654968bfc75b8a1cf8456c3" translate="yes" xml:space="preserve">
          <source>Rendering tests (integration tests) check how a &lt;strong&gt;component looks and behaves&lt;/strong&gt;. Ember CLI creates rendering tests for &lt;a href=&quot;https://guides.emberjs.com/components/defining-a-component/&quot;&gt;components&lt;/a&gt; and &lt;a href=&quot;https://guides.emberjs.com/templates/writing-helpers/&quot;&gt;helpers&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f641e50ecb0ef4a6143f745a23c883acd88a466b" translate="yes" xml:space="preserve">
          <source>Rendering tests (previously known as integration tests)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e00afed9568e851f563f95aa0fc07a60bfd0ba4" translate="yes" xml:space="preserve">
          <source>Rendering tests let you test components using Ember's rendering engine. This means, a component created in your rendering test will behave as it would in the real app. You are guaranteed that the component will follow its lifecycle hooks. You can also interact with the component like an end-user would.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bf2cfd82c10e27a15ca73d1aff040c4b9aabd81" translate="yes" xml:space="preserve">
          <source>Renders the view again. This will work regardless of whether the view is already in the DOM or not. If the view is in the DOM, the rendering process will be deferred to give bindings a chance to synchronize.</source>
          <target state="translated">Vuelve a dar la vista.Esto funcionará independientemente de si la vista ya está en el DOM o no.Si la vista está en el DOM,el proceso de renderizado se aplazará para dar a los bindings la oportunidad de sincronizarse.</target>
        </trans-unit>
        <trans-unit id="90fcf58a93bf37c133e53c27b59ac552b7f86095" translate="yes" xml:space="preserve">
          <source>Reopening Classes and Instances</source>
          <target state="translated">Reapertura de clases e instancias</target>
        </trans-unit>
        <trans-unit id="68fd737319a0b0cb58525f439e8f98a23d49c821" translate="yes" xml:space="preserve">
          <source>Replace all the receiver's content with content of the argument. If argument is an empty array receiver will be cleared.</source>
          <target state="translated">Reemplaza todo el contenido del receptor por el contenido del argumento.Si el argumento es una matriz vacía,el receptor se borrará.</target>
        </trans-unit>
        <trans-unit id="12205427cfdf5328a7ffdc0d916e8bdc2aeef4ed" translate="yes" xml:space="preserve">
          <source>Replacement for &lt;code&gt;Ember.RSVP.resolve&lt;/code&gt; The only difference is this uses an instance of &lt;code&gt;Ember.Test.Promise&lt;/code&gt;</source>
          <target state="translated">Reemplazo de &lt;code&gt;Ember.RSVP.resolve&lt;/code&gt; La &amp;uacute;nica diferencia es que usa una instancia de &lt;code&gt;Ember.Test.Promise&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="38df34ec5043e01b14b58ab782972627050d5e4e" translate="yes" xml:space="preserve">
          <source>Replaces underscores, spaces, or camelCase with dashes.</source>
          <target state="translated">Reemplaza los subrayados,los espacios o la caja del camello con guiones.</target>
        </trans-unit>
        <trans-unit id="551c187c4562e07235299d81c81fb5553d3be6b8" translate="yes" xml:space="preserve">
          <source>Replacing history entries</source>
          <target state="translated">Reemplazar las entradas del historial</target>
        </trans-unit>
        <trans-unit id="db33df2b86e0548c5026c0e2feca083dd46c73b8" translate="yes" xml:space="preserve">
          <source>Reporting a problem</source>
          <target state="translated">Informar de un problema</target>
        </trans-unit>
        <trans-unit id="5a3259ad102284e341592f2a49ccbc5935cfc92a" translate="yes" xml:space="preserve">
          <source>Represents a list of records whose membership is determined by the store. As records are created, loaded, or modified, the store evaluates them to determine if they should be part of the record array.</source>
          <target state="translated">Representa una lista de registros cuya pertenencia está determinada por la tienda.A medida que se crean,cargan o modifican los registros,el almacén los evalúa para determinar si deben formar parte del conjunto de registros.</target>
        </trans-unit>
        <trans-unit id="97471577bb242ec38248e3746d99aa261e14fdfd" translate="yes" xml:space="preserve">
          <source>Represents an ordered list of records whose order and membership is determined by the adapter. For example, a query sent to the adapter may trigger a search on the server, whose results would be loaded into an instance of the &lt;code&gt;AdapterPopulatedRecordArray&lt;/code&gt;.</source>
          <target state="translated">Representa una lista ordenada de registros cuyo orden y pertenencia los determina el adaptador. Por ejemplo, una consulta enviada al adaptador puede desencadenar una b&amp;uacute;squeda en el servidor, cuyos resultados se cargar&amp;iacute;an en una instancia de &lt;code&gt;AdapterPopulatedRecordArray&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f983e24377129faa7d20942c23e23254dfe09a06" translate="yes" xml:space="preserve">
          <source>Represents the URL of the root of the application, often '/'. This prefix is assumed on all routes defined on this router.</source>
          <target state="translated">Representa la URL de la raíz de la aplicación,a menudo '/'.Este prefijo se asume en todas las rutas definidas en este router.</target>
        </trans-unit>
        <trans-unit id="99a531ee74a48c9f139d54302917c31212c36e9a" translate="yes" xml:space="preserve">
          <source>Represents the model's class name as a string. This can be used to look up the model's class name through &lt;code&gt;DS.Store&lt;/code&gt;'s modelFor method.</source>
          <target state="translated">Representa el nombre de la clase del modelo como una cadena. Esto se puede utilizar para buscar el nombre de clase del modelo a trav&amp;eacute;s de &lt;code&gt;DS.Store&lt;/code&gt; m&amp;eacute;todo modelFor 's.</target>
        </trans-unit>
        <trans-unit id="46266c1e4f3d4db7ab26dd4974b725ba8d500a8c" translate="yes" xml:space="preserve">
          <source>Represents the model's class name as a string. This can be used to look up the model's class name through &lt;code&gt;Store&lt;/code&gt;'s modelFor method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a4d728aaa71b622cd6daaefae1957da6eba6abf" translate="yes" xml:space="preserve">
          <source>Request Errors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddf10a02bb0396e1c0bcad5c8cea1e4177da9463" translate="yes" xml:space="preserve">
          <source>Request Flow</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a446bfa5dd57c064db5b7db62b9216d2d4fe7f6" translate="yes" xml:space="preserve">
          <source>Requests for &lt;code&gt;person&lt;/code&gt; would now target &lt;code&gt;/person/1&lt;/code&gt;. Requests for &lt;code&gt;user-profile&lt;/code&gt; would now target &lt;code&gt;/user_profile/1&lt;/code&gt;.</source>
          <target state="translated">Las solicitudes de &lt;code&gt;person&lt;/code&gt; a ahora se orientar&amp;aacute;n a &lt;code&gt;/person/1&lt;/code&gt; . Las solicitudes de &lt;code&gt;user-profile&lt;/code&gt; de usuario ahora se &lt;code&gt;/user_profile/1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e23fb7f5045063dea88f661c92bdf8761f6d2db8" translate="yes" xml:space="preserve">
          <source>Requests for &lt;code&gt;person&lt;/code&gt; would now target &lt;code&gt;http://emberjs.com/api/1/people/1&lt;/code&gt;.</source>
          <target state="translated">Las solicitudes de &lt;code&gt;person&lt;/code&gt; a ahora se orientar&amp;aacute;n a &lt;code&gt;http://emberjs.com/api/1/people/1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e8662a972a8167c817a2396b8c370f76230f2940" translate="yes" xml:space="preserve">
          <source>Requests for &lt;code&gt;person&lt;/code&gt; would now target &lt;code&gt;https://api.emberjs.com/api/1/people/1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbed8372b111ece5b7dea26366e56a504eeb78ba" translate="yes" xml:space="preserve">
          <source>Requests for &lt;code&gt;person&lt;/code&gt; would now target &lt;code&gt;https://api.example.com/people/1&lt;/code&gt;.</source>
          <target state="translated">Las solicitudes de &lt;code&gt;person&lt;/code&gt; a ahora se orientar&amp;aacute;n a &lt;code&gt;https://api.example.com/people/1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="39adf7b336b15481b1d246e2d2e38d4faf23c063" translate="yes" xml:space="preserve">
          <source>Requests for the &lt;code&gt;Person&lt;/code&gt; model would now target &lt;code&gt;/api/1/people/1&lt;/code&gt;.</source>
          <target state="translated">Las solicitudes para el modelo de &lt;code&gt;Person&lt;/code&gt; ahora se orientar&amp;aacute;n a &lt;code&gt;/api/1/people/1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b5a6ae7596913135d59e602a8445cd7c591187b4" translate="yes" xml:space="preserve">
          <source>Requests for the &lt;code&gt;Post&lt;/code&gt; model would now target &lt;code&gt;/api/1/post/&lt;/code&gt;.</source>
          <target state="translated">Las solicitudes para el modelo de &lt;code&gt;Post&lt;/code&gt; ahora se dirigir&amp;aacute;n a &lt;code&gt;/api/1/post/&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="47352f3ca02fa7dd1203791432c99adf3ee88922" translate="yes" xml:space="preserve">
          <source>Requests for the &lt;code&gt;Post&lt;/code&gt; model would now target &lt;code&gt;https://api.example.com/post/&lt;/code&gt;.</source>
          <target state="translated">Las solicitudes para el modelo de &lt;code&gt;Post&lt;/code&gt; ahora se orientar&amp;iacute;an a &lt;code&gt;https://api.example.com/post/&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="507eba662c0bdfc5e6dcd2e527c591cbe849d43c" translate="yes" xml:space="preserve">
          <source>Requests for the &lt;code&gt;person&lt;/code&gt; model would now target &lt;code&gt;/api/1/people/1&lt;/code&gt;.</source>
          <target state="translated">Las solicitudes para el modelo de &lt;code&gt;person&lt;/code&gt; a ahora se orientar&amp;aacute;n a &lt;code&gt;/api/1/people/1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c77ddbd00374e8cd6c0cc4272b91fdfbb3d601e3" translate="yes" xml:space="preserve">
          <source>Requests for the &lt;code&gt;person&lt;/code&gt; model would now target &lt;code&gt;https://api.example.com/people/1&lt;/code&gt;.</source>
          <target state="translated">Las solicitudes del modelo de &lt;code&gt;person&lt;/code&gt; a ahora se orientar&amp;iacute;an a &lt;code&gt;https://api.example.com/people/1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e190e5d005c3ed64981ff2ea4572bff204aed4b0" translate="yes" xml:space="preserve">
          <source>Requests in Components</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51c8ad35eaad89bb264b06a831b0f1c6c203b261" translate="yes" xml:space="preserve">
          <source>Requests in Services</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1c0056db49c0064449972ec5b173f83fa648732" translate="yes" xml:space="preserve">
          <source>Requests in a Route's &lt;code&gt;model&lt;/code&gt; hook</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd278c9727c891a2d697427de980af3125d812f7" translate="yes" xml:space="preserve">
          <source>Requests in services have the same drawbacks as Components. Functions and state in a Service can be used almost anywhere in the app.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef47fdb02ee01d8a4e88ea5e1d94c9f92f4cd4c9" translate="yes" xml:space="preserve">
          <source>Required &lt;code&gt;this&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ea99c4b89bd3e73a15c7dfe3ef60bd94d5f0728" translate="yes" xml:space="preserve">
          <source>Required &lt;code&gt;this&lt;/code&gt; in templates</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d1ce0dbae3dcf8f899bd4893d4663dda4cf2c7d" translate="yes" xml:space="preserve">
          <source>Rerun your test suite as you make updates to your workflow file and you should validate that your deprecations are gone. Once that is completed, you can proceed with enhancing your application without the sea of deprecation warnings clouding your log.</source>
          <target state="translated">Vuelva a ejecutar el paquete de pruebas a medida que actualiza su archivo de flujo de trabajo y debería validar que sus deprecaciones han desaparecido.Una vez que se haya completado,puede proceder a mejorar su aplicación sin que el mar de advertencias de depreciación nuble su registro.</target>
        </trans-unit>
        <trans-unit id="1459337c0ecc835d1d2041391957329cf96ed92d" translate="yes" xml:space="preserve">
          <source>Reset the application. This is typically used only in tests. It cleans up the application in the following order:</source>
          <target state="translated">Reinicie la aplicación.Esto se usa típicamente sólo en las pruebas.Limpia la aplicación en el siguiente orden:</target>
        </trans-unit>
        <trans-unit id="9799189643ce709a24fb886e74561834ed7c1a6f" translate="yes" xml:space="preserve">
          <source>Resetting Presentation State on Attribute Change with &lt;code&gt;didUpdateAttrs&lt;/code&gt;</source>
          <target state="translated">Restablecimiento del estado de presentaci&amp;oacute;n en el cambio de atributo con &lt;code&gt;didUpdateAttrs&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bed023e0df790a0e66439a5a1e1a05337670d105" translate="yes" xml:space="preserve">
          <source>Respecting the URL results in better user experience</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14de0ea979680e88715bf0fb25e6a27c36244df1" translate="yes" xml:space="preserve">
          <source>Responding to Browser Events</source>
          <target state="translated">Respondiendo a los eventos del navegador</target>
        </trans-unit>
        <trans-unit id="86514db4ea326cca476f8161d03fbe8c00199720" translate="yes" xml:space="preserve">
          <source>Responding to user interactions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38ad8517f1dfe99e4d87fbdbdd90a3a14b28b872" translate="yes" xml:space="preserve">
          <source>Restrictions</source>
          <target state="translated">Restrictions</target>
        </trans-unit>
        <trans-unit id="bd4afc0073cac79bf136f8e1d922b83f76e969ad" translate="yes" xml:space="preserve">
          <source>Result:</source>
          <target state="translated">Result:</target>
        </trans-unit>
        <trans-unit id="02d55b2baf2725bcbe0634735b4de01c005aa3e5" translate="yes" xml:space="preserve">
          <source>Results in:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dd10def5c86f482d9171ac3d500c6b0ae25364b" translate="yes" xml:space="preserve">
          <source>Resumes a test paused by &lt;code&gt;pauseTest&lt;/code&gt;.</source>
          <target state="translated">Reanuda una prueba pausada por &lt;code&gt;pauseTest&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ea776300d8aba3829da1ffb0408566a09e4e259f" translate="yes" xml:space="preserve">
          <source>Retries a previously-aborted transition (making sure to abort the transition if it's still active). Returns a new transition that represents the new attempt to transition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c136ec01ad8662f631bfe9cf5dd76daebe9695f1" translate="yes" xml:space="preserve">
          <source>Retrieves the value of a property from an Object, or a default value in the case that the property returns &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">Recupera el valor de una propiedad de un objeto, o un valor predeterminado en el caso de que la propiedad devuelva &lt;code&gt;undefined&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="97f8358f1a7527129a6026137d59d3b142bea4da" translate="yes" xml:space="preserve">
          <source>Retrieves the value of a property from the object.</source>
          <target state="translated">Recupera el valor de una propiedad del objeto.</target>
        </trans-unit>
        <trans-unit id="c2507d71833d1926fc8ca2bfcba6650b2356a523" translate="yes" xml:space="preserve">
          <source>Retrieves the value of a property, or a default value in the case that the property returns &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">Recupera el valor de una propiedad o un valor predeterminado en el caso de que la propiedad devuelva &lt;code&gt;undefined&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c9b109a01cbb856b78796ff1f23e3ed037d6d59e" translate="yes" xml:space="preserve">
          <source>Retrieving Multiple Records</source>
          <target state="translated">Recuperación de múltiples registros</target>
        </trans-unit>
        <trans-unit id="f585070c87519f1f46d5aa282e338ef3ef4cffe8" translate="yes" xml:space="preserve">
          <source>Retrieving Related Model Records</source>
          <target state="translated">Recuperación de registros modelo relacionados</target>
        </trans-unit>
        <trans-unit id="5763b513c21e726fa47e619aeec98e7a63c47120" translate="yes" xml:space="preserve">
          <source>Retrieving Related Records</source>
          <target state="translated">Recuperación de registros relacionados</target>
        </trans-unit>
        <trans-unit id="f42b92f006ec325e98a3d7f40334441d8ddf5a15" translate="yes" xml:space="preserve">
          <source>Retrieving Specific Fields by Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ea11ae149c9ff5b4ef4d8e06d23a82d3df6baab" translate="yes" xml:space="preserve">
          <source>Retrieving a Single Record</source>
          <target state="translated">Recuperación de un único registro</target>
        </trans-unit>
        <trans-unit id="9cd9632ea5c6744340a949d9498150ea0dd8d956" translate="yes" xml:space="preserve">
          <source>Return a specific registered option for a particular factory.</source>
          <target state="translated">Devolver una opción registrada específica para una fábrica en particular.</target>
        </trans-unit>
        <trans-unit id="29ebe6c216062fb1ce4cf798a7f1e3baeab920a9" translate="yes" xml:space="preserve">
          <source>Return registered options for a particular factory.</source>
          <target state="translated">Devuelva las opciones registradas de una fábrica en particular.</target>
        </trans-unit>
        <trans-unit id="26b22776384430c648a6b859ff17b84f59ea040d" translate="yes" xml:space="preserve">
          <source>Return the new cumulative value.</source>
          <target state="translated">Devuelve el nuevo valor acumulado.</target>
        </trans-unit>
        <trans-unit id="edee4fec8219eea58f41fb844b109d44f9727045" translate="yes" xml:space="preserve">
          <source>Return the registered options for all factories of a type.</source>
          <target state="translated">Devuelva las opciones registradas para todas las fábricas de un tipo.</target>
        </trans-unit>
        <trans-unit id="3f2c37eae2ce5f96df692aaeedf57af072ef9d9e" translate="yes" xml:space="preserve">
          <source>Return to Step 1</source>
          <target state="translated">Volver al paso 1</target>
        </trans-unit>
        <trans-unit id="86661c3a6c5cd6befa4e37cc90df459f0d9bf691" translate="yes" xml:space="preserve">
          <source>Return value from invoking the passed function. Please note, when called within an existing loop, no return value is possible.</source>
          <target state="translated">Devuelve el valor de la invocación de la función pasada.Tenga en cuenta que cuando se llama dentro de un bucle existente,no es posible obtener un valor de retorno.</target>
        </trans-unit>
        <trans-unit id="19e15fef1135e42fb3ddbd944fd5ba42b4c44461" translate="yes" xml:space="preserve">
          <source>Return values from a component with &lt;code&gt;yield&lt;/code&gt;</source>
          <target state="translated">Devolver valores de un componente con &lt;code&gt;yield&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f303cd37013bf328626e038174b28974872e0cbc" translate="yes" xml:space="preserve">
          <source>Returning a &lt;code&gt;DS.InvalidError&lt;/code&gt; from this method will cause the record to transition into the &lt;code&gt;invalid&lt;/code&gt; state and make the &lt;code&gt;errors&lt;/code&gt; object available on the record. When returning an &lt;code&gt;DS.InvalidError&lt;/code&gt; the store will attempt to normalize the error data returned from the server using the serializer's &lt;code&gt;extractErrors&lt;/code&gt; method.</source>
          <target state="translated">Devolver un &lt;code&gt;DS.InvalidError&lt;/code&gt; de este m&amp;eacute;todo har&amp;aacute; que el registro pase al estado &lt;code&gt;invalid&lt;/code&gt; y har&amp;aacute; que el objeto de &lt;code&gt;errors&lt;/code&gt; est&amp;eacute; disponible en el registro. Al devolver un &lt;code&gt;DS.InvalidError&lt;/code&gt; , la tienda intentar&amp;aacute; normalizar los datos de error devueltos por el servidor utilizando el m&amp;eacute;todo &lt;code&gt;extractErrors&lt;/code&gt; del serializador .</target>
        </trans-unit>
        <trans-unit id="d76aa8210cf0dafd3f5542c252c74215e7c0d82e" translate="yes" xml:space="preserve">
          <source>Returning a &lt;code&gt;InvalidError&lt;/code&gt; from this method will cause the record to transition into the &lt;code&gt;invalid&lt;/code&gt; state and make the &lt;code&gt;errors&lt;/code&gt; object available on the record. When returning an &lt;code&gt;InvalidError&lt;/code&gt; the store will attempt to normalize the error data returned from the server using the serializer's &lt;code&gt;extractErrors&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cee47736237de7f8bb7ea807b0ee3fa5be36f81b" translate="yes" xml:space="preserve">
          <source>Returns -1 if no match is found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5eb7b0965957835e626048810b6a5e9b19ca1f4e" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;routeName/models/queryParams&lt;/code&gt; is the active route, where &lt;code&gt;models&lt;/code&gt; and &lt;code&gt;queryParams&lt;/code&gt; are optional. See &lt;a href=&quot;api/ember/release/classes/route/methods#model&quot;&gt;model&lt;/a&gt; and &lt;a href=&quot;https://api.emberjs.com/api/ember/3.7/classes/Route/properties#queryParams&quot;&gt;queryParams&lt;/a&gt; for more information about these arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85b812af2c70b17fb4a0e4704404e2e2663bc781" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the passed function returns true for any item in the enumeration.</source>
          <target state="translated">Devuelve &lt;code&gt;true&lt;/code&gt; si la funci&amp;oacute;n pasada devuelve verdadero para cualquier elemento de la enumeraci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="f60ba937bfb0a86b00fcc64b5fa06c54faa1208f" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the passed function returns true for every item in the enumeration. This corresponds with the &lt;code&gt;Array.prototype.every()&lt;/code&gt; method defined in ES5.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ca1e9e1279673b31d55774d9185dc03beed7b19" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the passed function returns true for every item in the enumeration. This corresponds with the &lt;code&gt;every()&lt;/code&gt; method in JavaScript 1.6.</source>
          <target state="translated">Devuelve &lt;code&gt;true&lt;/code&gt; si la funci&amp;oacute;n pasada devuelve verdadero para cada elemento de la enumeraci&amp;oacute;n. Esto se corresponde con el m&amp;eacute;todo &lt;code&gt;every()&lt;/code&gt; en JavaScript 1.6.</target>
        </trans-unit>
        <trans-unit id="48e8bff0730db4951905ce3907f251ae28d439c0" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the passed object can be found in the array. This method is a Polyfill for ES 2016 Array.includes. If no &lt;code&gt;startAt&lt;/code&gt; argument is given, the starting location to search is 0. If it's negative, searches from the index of &lt;code&gt;this.length + startAt&lt;/code&gt; by asc.</source>
          <target state="translated">Devuelve &lt;code&gt;true&lt;/code&gt; si el objeto pasado se puede encontrar en la matriz. Este m&amp;eacute;todo es un Polyfill para ES 2016 Array. Incluye. Si no se &lt;code&gt;startAt&lt;/code&gt; ning&amp;uacute;n argumento startAt , la ubicaci&amp;oacute;n de inicio de la b&amp;uacute;squeda es 0. Si es negativa, busca desde el &amp;iacute;ndice &lt;code&gt;this.length + startAt&lt;/code&gt; por asc.</target>
        </trans-unit>
        <trans-unit id="97d2d4c6d57998537e2ece3978bd7eda8781ffbc" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the passed object can be found in the enumerable.</source>
          <target state="translated">Devuelve &lt;code&gt;true&lt;/code&gt; si el objeto pasado se puede encontrar en el enumerable.</target>
        </trans-unit>
        <trans-unit id="59ba394095833f93ec360f4386b9490268271009" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the passed property resolves to the value of the second argument for all items in the array. This method is often simpler/faster than using a callback.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e0cff20c4e03c114bb589de045dad56c4977ab9" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the passed property resolves to the value of the second argument for all items in the enumerable. This method is often simpler/faster than using a callback.</source>
          <target state="translated">Devuelve &lt;code&gt;true&lt;/code&gt; si la propiedad pasada se resuelve en el valor del segundo argumento para todos los elementos del enumerable. Este m&amp;eacute;todo suele ser m&amp;aacute;s simple / r&amp;aacute;pido que usar una devoluci&amp;oacute;n de llamada.</target>
        </trans-unit>
        <trans-unit id="19694ec1d241ea3ac0257cd094f61a4584115eaf" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the passed property resolves to the value of the second argument for any item in the array. This method is often simpler/faster than using a callback.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="785710d311908f0da91ca0999d02fda0b1b3f90e" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the passed property resolves to the value of the second argument for any item in the enumerable. This method is often simpler/faster than using a callback.</source>
          <target state="translated">Devuelve &lt;code&gt;true&lt;/code&gt; si la propiedad pasada se resuelve en el valor del segundo argumento para cualquier elemento del enumerable. Este m&amp;eacute;todo suele ser m&amp;aacute;s simple / r&amp;aacute;pido que usar una devoluci&amp;oacute;n de llamada.</target>
        </trans-unit>
        <trans-unit id="125bbdbd31c014a3c75ab73874ead547c5f9f32b" translate="yes" xml:space="preserve">
          <source>Returns a consistent type for the passed object.</source>
          <target state="translated">Devuelve un tipo consistente para el objeto pasado.</target>
        </trans-unit>
        <trans-unit id="d5e31a7796519c4db2aefafeb16832aabfafcd9e" translate="yes" xml:space="preserve">
          <source>Returns a copy of the array with all &lt;code&gt;null&lt;/code&gt; and &lt;code&gt;undefined&lt;/code&gt; elements removed.</source>
          <target state="translated">Devuelve una copia de la matriz con todos &lt;code&gt;null&lt;/code&gt; elementos nulos e &lt;code&gt;undefined&lt;/code&gt; eliminados.</target>
        </trans-unit>
        <trans-unit id="2b92287589187fde80aa3c9745f11bf4566c0019" translate="yes" xml:space="preserve">
          <source>Returns a hash containing the parameters of an ancestor route.</source>
          <target state="translated">Devuelve un hash que contiene los parámetros de una ruta ancestral.</target>
        </trans-unit>
        <trans-unit id="b4ada03057da551460d8be699ac1083dbb48fb4c" translate="yes" xml:space="preserve">
          <source>Returns a jQuery object for this component's element. If you pass in a selector string, this method will return a jQuery object, using the current element as its buffer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2703351044d1524246ab647abe9d450da6a2453f" translate="yes" xml:space="preserve">
          <source>Returns a jQuery object for this component's element. If you pass in a selector string, this method will return a jQuery object, using the current element as its buffer. For example, calling &lt;code&gt;component.$('li')&lt;/code&gt; will return a jQuery object containing all of the &lt;code&gt;li&lt;/code&gt; elements inside the DOM element of this component.</source>
          <target state="translated">Devuelve un objeto jQuery para el elemento de este componente. Si pasa una cadena de selecci&amp;oacute;n, este m&amp;eacute;todo devolver&amp;aacute; un objeto jQuery, usando el elemento actual como su b&amp;uacute;fer. Por ejemplo, llamar al &lt;code&gt;component.$('li')&lt;/code&gt; devolver&amp;aacute; un objeto jQuery que contiene todos los elementos &lt;code&gt;li&lt;/code&gt; dentro del elemento DOM de este componente.</target>
        </trans-unit>
        <trans-unit id="8a47cf2c5ff6ea84daf5839f6f90517c7d1d2ada" translate="yes" xml:space="preserve">
          <source>Returns a jQuery object for this view's element. If you pass in a selector string, this method will return a jQuery object, using the current element as its buffer.</source>
          <target state="translated">Devuelve un objeto jQuery para el elemento de esta vista.Si pasas una cadena de selección,este método devolverá un objeto jQuery,usando el elemento actual como su búfer.</target>
        </trans-unit>
        <trans-unit id="4ed70d04f3ee7207358048712104fcd24783ff91" translate="yes" xml:space="preserve">
          <source>Returns a new array that contains only items containing a unique property value. The default implementation returns an array regardless of the receiver type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ee49ab71f088094d7a6ef65373cff6aea3b838c" translate="yes" xml:space="preserve">
          <source>Returns a new array that contains only unique values. The default implementation returns an array regardless of the receiver type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f535e0230de6304fca3d92bc4f17beb2ef84342a" translate="yes" xml:space="preserve">
          <source>Returns a new array that excludes the passed value. The default implementation returns an array regardless of the receiver type. If the receiver does not contain the value it returns the original array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="926fcdedb193ee950b728d011e0592df4e16f0a0" translate="yes" xml:space="preserve">
          <source>Returns a new array that is a slice of the receiver. This implementation uses the observable array methods to retrieve the objects for the new slice.</source>
          <target state="translated">Devuelve un nuevo arreglo que es un trozo del receptor.Esta implementación utiliza los métodos de arreglo observable para recuperar los objetos para el nuevo trozo.</target>
        </trans-unit>
        <trans-unit id="332a3f58f30615456cdeb690333df10511405cb9" translate="yes" xml:space="preserve">
          <source>Returns a new array with all of the items in the enumeration that the provided callback function returns true for. This method corresponds to &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter&quot;&gt;Array.prototype.filter()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f490c002b2bf76e65c1ef0218a8c11e0b2f0ba00" translate="yes" xml:space="preserve">
          <source>Returns a new enumerable that contains only items containing a unique property value. The default implementation returns an array regardless of the receiver type.</source>
          <target state="translated">Devuelve un nuevo enumerable que contiene sólo artículos con un valor de propiedad único.La implementación predeterminada devuelve un conjunto,independientemente del tipo de receptor.</target>
        </trans-unit>
        <trans-unit id="bdd3af7ab7b2da54382d05f7328e37ab891fb2d3" translate="yes" xml:space="preserve">
          <source>Returns a new enumerable that contains only unique values. The default implementation returns an array regardless of the receiver type.</source>
          <target state="translated">Devuelve un nuevo enumerable que contiene sólo valores únicos.La implementación por defecto devuelve un conjunto independientemente del tipo de receptor.</target>
        </trans-unit>
        <trans-unit id="31c2891af58e7eda6b60e3cadcd876d663730e1c" translate="yes" xml:space="preserve">
          <source>Returns a new enumerable that excludes the passed value. The default implementation returns an array regardless of the receiver type. If the receiver does not contain the value it returns the original enumerable.</source>
          <target state="translated">Devuelve un nuevo enumerable que excluye el valor pasado.La implementación por defecto devuelve un arreglo sin importar el tipo de receptor.Si el receptor no contiene el valor,devuelve el enumerable original.</target>
        </trans-unit>
        <trans-unit id="79b5522f2b1ae4f90cc466e02013320e2a3ad2b8" translate="yes" xml:space="preserve">
          <source>Returns a polymorphic relationship formatted as a JSON-API &quot;relationship object&quot;.</source>
          <target state="translated">Devuelve una relación polimórfica formateada como un &quot;objeto de relación&quot; JSON-API.</target>
        </trans-unit>
        <trans-unit id="da5d72f3f51387291e0c92700f8ccbb22c667d59" translate="yes" xml:space="preserve">
          <source>Returns a promise that is fulfilled when all the given promises have been fulfilled, or rejected if any of them become rejected. The returned promise is fulfilled with a hash that has the same key names as the &lt;code&gt;promises&lt;/code&gt; object argument. If any of the values in the object are not promises, they will simply be copied over to the fulfilled object.</source>
          <target state="translated">Devuelve una promesa que se cumple cuando se han cumplido todas las promesas dadas, o se rechaza si alguna de ellas se rechaza. La promesa devuelta se cumple con un hash que tiene los mismos nombres de clave que el argumento del objeto &lt;code&gt;promises&lt;/code&gt; . Si alguno de los valores del objeto no es una promesa, simplemente se copiar&amp;aacute; al objeto cumplido.</target>
        </trans-unit>
        <trans-unit id="82c815d0ca08ef29364305f689eaaae5497c95e1" translate="yes" xml:space="preserve">
          <source>Returns a promise that is fulfilled when all the given promises have been settled, or rejected if the passed parameters are invalid.</source>
          <target state="translated">Devuelve una promesa que se cumple cuando todas las promesas dadas han sido saldadas,o rechazadas si los parámetros pasados son inválidos.</target>
        </trans-unit>
        <trans-unit id="6d3f9c4b4397f9ef81ee1535035150e16652f8d6" translate="yes" xml:space="preserve">
          <source>Returns a promise that is fulfilled when all the given promises have been settled. The return promise is fulfilled with an array of the states of the promises passed into the &lt;code&gt;promises&lt;/code&gt; array argument.</source>
          <target state="translated">Devuelve una promesa que se cumple cuando se han cumplido todas las promesas dadas. La promesa de devoluci&amp;oacute;n se cumple con una matriz de los estados de las promesas pasadas al argumento de la matriz de &lt;code&gt;promises&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f6e385587e066b24048df3bceae7d07c05eb9136" translate="yes" xml:space="preserve">
          <source>Returns a relationship formatted as a JSON-API &quot;relationship object&quot;.</source>
          <target state="translated">Devuelve una relación formateada como un &quot;objeto de relación&quot; JSON-API.</target>
        </trans-unit>
        <trans-unit id="52a97236412e0d9a5ce17c93a028e57570cea2e1" translate="yes" xml:space="preserve">
          <source>Returns a special object that can be used to observe individual properties on the array. Just get an equivalent property on this object and it will return an enumerable that maps automatically to the named key on the member objects.</source>
          <target state="translated">Devuelve un objeto especial que puede ser usado para observar las propiedades individuales del conjunto.Sólo consigue una propiedad equivalente en este objeto y devolverá un enumerable que se mapea automáticamente a la clave nombrada en los objetos miembros.</target>
        </trans-unit>
        <trans-unit id="f1bb9132b749d70b8d6303a10f424698c9fb0eed" translate="yes" xml:space="preserve">
          <source>Returns a string representation which attempts to provide more information than Javascript's &lt;code&gt;toString&lt;/code&gt; typically does, in a generic way for all Ember objects.</source>
          <target state="translated">Devuelve una representaci&amp;oacute;n de cadena que intenta proporcionar m&amp;aacute;s informaci&amp;oacute;n de la que suele hacer &lt;code&gt;toString&lt;/code&gt; de Javascript , de forma gen&amp;eacute;rica para todos los objetos Ember.</target>
        </trans-unit>
        <trans-unit id="1baffde3c198a82c1a9f24fd1699b9537bf5a9f0" translate="yes" xml:space="preserve">
          <source>Returns a unique id for the object. If the object does not yet have a guid, one will be assigned to it. You can call this on any object, &lt;code&gt;Ember.Object&lt;/code&gt;-based or not, but be aware that it will add a &lt;code&gt;_guid&lt;/code&gt; property.</source>
          <target state="translated">Devuelve una identificaci&amp;oacute;n &amp;uacute;nica para el objeto. Si el objeto a&amp;uacute;n no tiene una gu&amp;iacute;a, se le asignar&amp;aacute; una. Puede llamar a esto en cualquier objeto, basado en &lt;code&gt;Ember.Object&lt;/code&gt; o no, pero tenga en cuenta que agregar&amp;aacute; una propiedad &lt;code&gt;_guid&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4fe073685bcbe50133bcaf9d9680a9bc1a21e5a7" translate="yes" xml:space="preserve">
          <source>Returns a unique id for the object. If the object does not yet have a guid, one will be assigned to it. You can call this on any object, &lt;code&gt;EmberObject&lt;/code&gt;-based or not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f4ec976109d986b5a79d48479eb69b877f9ce1c" translate="yes" xml:space="preserve">
          <source>Returns an array mapped to the specified key.</source>
          <target state="translated">Devuelve una matriz mapeada a la clave especificada.</target>
        </trans-unit>
        <trans-unit id="b64d16ac418315ac651a71cfd903dcf3f4c1950a" translate="yes" xml:space="preserve">
          <source>Returns an array mapped via the callback</source>
          <target state="translated">Devuelve una matriz mapeada a través de la devolución de llamada</target>
        </trans-unit>
        <trans-unit id="829d878e18002574178651ec68a61b50ed634687" translate="yes" xml:space="preserve">
          <source>Returns an array with all of the items in the enumeration that the passed function returns true for. This method corresponds to &lt;code&gt;filter()&lt;/code&gt; defined in JavaScript 1.6.</source>
          <target state="translated">Devuelve una matriz con todos los elementos de la enumeraci&amp;oacute;n para los que la funci&amp;oacute;n pasada devuelve verdadero. Este m&amp;eacute;todo corresponde a &lt;code&gt;filter()&lt;/code&gt; definido en JavaScript 1.6.</target>
        </trans-unit>
        <trans-unit id="c71aa9a7da9062c13eb9514b5d81794253550ff0" translate="yes" xml:space="preserve">
          <source>Returns an array with all of the items in the enumeration where the passed function returns false. This method is the inverse of filter().</source>
          <target state="translated">Devuelve una matriz con todos los elementos de la enumeración donde la función pasada devuelve false.Este método es el inverso de filter().</target>
        </trans-unit>
        <trans-unit id="78ff059f5f0f8f4ba1bb336fa61257c52bc1e554" translate="yes" xml:space="preserve">
          <source>Returns an array with just the items with the matched property. You can pass an optional second argument with the target value. Otherwise this will match any property that evaluates to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">Devuelve una matriz con solo los elementos con la propiedad coincidente. Puede pasar un segundo argumento opcional con el valor objetivo. De lo contrario, esto coincidir&amp;aacute; con cualquier propiedad que se eval&amp;uacute;e como &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f5d725514851c9b11eac282307b62e805938ccc7" translate="yes" xml:space="preserve">
          <source>Returns an array with the items that do not have truthy values for key. You can pass an optional second argument with the target value. Otherwise this will match any property that evaluates to false.</source>
          <target state="translated">Devuelve una matriz con los elementos que no tienen valores de verdad para la clave.Puedes pasar un segundo argumento opcional con el valor objetivo.De lo contrario,esto coincidirá con cualquier propiedad que se evalúe como falsa.</target>
        </trans-unit>
        <trans-unit id="3b041d1644fe8d55b45f0896022ff7a3e5e96227" translate="yes" xml:space="preserve">
          <source>Returns an array with the items that do not have truthy values for the provided key. You can pass an optional second argument with a target value to reject for the key. Otherwise this will reject objects where the provided property evaluates to false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a3670a2d50cfc92881b423c60b1f1c2575feb6e" translate="yes" xml:space="preserve">
          <source>Returns an instance of the adapter for a given type. For example, &lt;code&gt;adapterFor('person')&lt;/code&gt; will return an instance of &lt;code&gt;App.PersonAdapter&lt;/code&gt;.</source>
          <target state="translated">Devuelve una instancia del adaptador para un tipo determinado. Por ejemplo, &lt;code&gt;adapterFor('person')&lt;/code&gt; devolver&amp;aacute; una instancia de &lt;code&gt;App.PersonAdapter&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="673a33da06126a5640a2ab9e96c90786fc9c52f9" translate="yes" xml:space="preserve">
          <source>Returns an instance of the serializer for a given type. For example, &lt;code&gt;serializerFor('person')&lt;/code&gt; will return an instance of &lt;code&gt;App.PersonSerializer&lt;/code&gt;.</source>
          <target state="translated">Devuelve una instancia del serializador para un tipo determinado. Por ejemplo, &lt;code&gt;serializerFor('person')&lt;/code&gt; devolver&amp;aacute; una instancia de &lt;code&gt;App.PersonSerializer&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="57c8785371bfdb428b7960568f1bb17a9b411222" translate="yes" xml:space="preserve">
          <source>Returns an object that can be used to provide an owner to a manually created instance.</source>
          <target state="translated">Devuelve un objeto que puede utilizarse para proporcionar un propietario a una instancia creada manualmente.</target>
        </trans-unit>
        <trans-unit id="fd2a4f6967074c15ba164a31f50b2fef12d1c233" translate="yes" xml:space="preserve">
          <source>Returns an object, whose keys are changed properties, and value is an [oldProp, newProp] array.</source>
          <target state="translated">Devuelve un objeto,cuyas claves son propiedades cambiadas,y el valor es un array [oldProp,newProp].</target>
        </trans-unit>
        <trans-unit id="eb72d59dd2b98c9d1f57e9369a6432daa8505854" translate="yes" xml:space="preserve">
          <source>Returns errors for a given attribute</source>
          <target state="translated">Devuelve los errores para un atributo determinado</target>
        </trans-unit>
        <trans-unit id="84982465e39ac847f3650a8b4a93110951755c44" translate="yes" xml:space="preserve">
          <source>Returns keywords to match when searching records.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c53cee14bf3f2dd98c4f832e2cfc8603ac6576e6" translate="yes" xml:space="preserve">
          <source>Returns the Capitalized form of a string</source>
          <target state="translated">Devuelve la forma capitalizada de una cadena</target>
        </trans-unit>
        <trans-unit id="27bef32d6017037bf8ae7ec87140c840faa058d7" translate="yes" xml:space="preserve">
          <source>Returns the UpperCamelCase form of a string.</source>
          <target state="translated">Devuelve la forma de UpperCamelCase de una cuerda.</target>
        </trans-unit>
        <trans-unit id="9e667554d12ea03a5ae716d11d67d4c4964f3096" translate="yes" xml:space="preserve">
          <source>Returns the associated child for convenience.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ea8d719e010027a981f551b7907ffaf6428b3c0" translate="yes" xml:space="preserve">
          <source>Returns the available classes a given type.</source>
          <target state="translated">Devuelve las clases disponibles de un tipo determinado.</target>
        </trans-unit>
        <trans-unit id="559a00b1190b2d1cae3fc144a9dbab5ae67bb15d" translate="yes" xml:space="preserve">
          <source>Returns the cached value for a property, if one exists. This can be useful for peeking at the value of a computed property that is generated lazily, without accidentally causing it to be created.</source>
          <target state="translated">Devuelve el valor almacenado de una propiedad,si existe.Esto puede ser útil para ver el valor de una propiedad computarizada que se genera perezosamente,sin causar accidentalmente que se cree.</target>
        </trans-unit>
        <trans-unit id="c7c90e8f44c4bb41743551254bcbc3f92e3bc124" translate="yes" xml:space="preserve">
          <source>Returns the cached value of a computed property, if it exists. This allows you to inspect the value of a computed property without accidentally invoking it if it is intended to be generated lazily.</source>
          <target state="translated">Devuelve el valor almacenado en memoria intermedia de una propiedad calculada,si existe.Esto permite inspeccionar el valor de una propiedad computada sin invocarla accidentalmente si se pretende que se genere perezosamente.</target>
        </trans-unit>
        <trans-unit id="fc4ee2b850450a7e973ddd1ed839152228fa5e24" translate="yes" xml:space="preserve">
          <source>Returns the controller of the current route, or a parent (or any ancestor) route in a route hierarchy.</source>
          <target state="translated">Devuelve el controlador de la ruta actual,o una ruta padre (o cualquier antepasado)en una jerarquía de rutas.</target>
        </trans-unit>
        <trans-unit id="9725708a8c5defae2f7c0cd978776509197591b1" translate="yes" xml:space="preserve">
          <source>Returns the current DOM element for the view.</source>
          <target state="translated">Devuelve el elemento DOM actual para la vista.</target>
        </trans-unit>
        <trans-unit id="b98b32c89ebbfef46cceba77784cc4659c5bbd7e" translate="yes" xml:space="preserve">
          <source>Returns the current URL.</source>
          <target state="translated">Devuelve la URL actual.</target>
        </trans-unit>
        <trans-unit id="603c43d141eff0347fdae1c71f24b3fffbceee88" translate="yes" xml:space="preserve">
          <source>Returns the current path.</source>
          <target state="translated">Devuelve el camino actual.</target>
        </trans-unit>
        <trans-unit id="5f1aa9ae053c0edabb551d28c02b549a6462af84" translate="yes" xml:space="preserve">
          <source>Returns the currently active route name.</source>
          <target state="translated">Devuelve el nombre de la ruta actualmente activa.</target>
        </trans-unit>
        <trans-unit id="813b9ecb5f8511435272f62810e6b41f7e57a004" translate="yes" xml:space="preserve">
          <source>Returns the first item in the array for which the callback returns true. This method is similar to the &lt;code&gt;find()&lt;/code&gt; method defined in ECMAScript 2015.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9fe31d2ca8c909a9d417483d744e509af227d01" translate="yes" xml:space="preserve">
          <source>Returns the first item in the array for which the callback returns true. This method works similar to the &lt;code&gt;filter()&lt;/code&gt; method defined in JavaScript 1.6 except that it will stop working on the array once a match is found.</source>
          <target state="translated">Devuelve el primer elemento de la matriz para el que la devoluci&amp;oacute;n de llamada devuelve verdadero. Este m&amp;eacute;todo funciona de manera similar al m&amp;eacute;todo &lt;code&gt;filter()&lt;/code&gt; definido en JavaScript 1.6, excepto que dejar&amp;aacute; de funcionar en la matriz una vez que se encuentre una coincidencia.</target>
        </trans-unit>
        <trans-unit id="2e59a22f6a7f2a23baf41260a3a174ae4dda651e" translate="yes" xml:space="preserve">
          <source>Returns the first item with a property matching the passed value. You can pass an optional second argument with the target value. Otherwise this will match any property that evaluates to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">Devuelve el primer elemento con una propiedad que coincide con el valor pasado. Puede pasar un segundo argumento opcional con el valor objetivo. De lo contrario, esto coincidir&amp;aacute; con cualquier propiedad que se eval&amp;uacute;e como &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4e4749aa6dc27e7bce3a78184551818e1fd4702e" translate="yes" xml:space="preserve">
          <source>Returns the index of the given &lt;code&gt;object&lt;/code&gt;'s last occurrence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5a026a77c75bacd53505cdcc6e9f209285cfdf2" translate="yes" xml:space="preserve">
          <source>Returns the index of the given object's first occurrence. If no &lt;code&gt;startAt&lt;/code&gt; argument is given, the starting location to search is 0. If it's negative, will count backward from the end of the array. Returns -1 if no match is found.</source>
          <target state="translated">Devuelve el &amp;iacute;ndice de la primera aparici&amp;oacute;n del objeto dado. Si no se &lt;code&gt;startAt&lt;/code&gt; ning&amp;uacute;n argumento startAt , la ubicaci&amp;oacute;n inicial para buscar es 0. Si es negativo, contar&amp;aacute; hacia atr&amp;aacute;s desde el final de la matriz. Devuelve -1 si no se encuentra ninguna coincidencia.</target>
        </trans-unit>
        <trans-unit id="b0b515aad064fd3b288bb9d89c67df97fc51d2b5" translate="yes" xml:space="preserve">
          <source>Returns the index of the given object's last occurrence. If no &lt;code&gt;startAt&lt;/code&gt; argument is given, the search starts from the last position. If it's negative, will count backward from the end of the array. Returns -1 if no match is found.</source>
          <target state="translated">Devuelve el &amp;iacute;ndice de la &amp;uacute;ltima aparici&amp;oacute;n del objeto dado. Si no se &lt;code&gt;startAt&lt;/code&gt; ning&amp;uacute;n argumento startAt , la b&amp;uacute;squeda comienza desde la &amp;uacute;ltima posici&amp;oacute;n. Si es negativo, contar&amp;aacute; hacia atr&amp;aacute;s desde el final de la matriz. Devuelve -1 si no se encuentra ninguna coincidencia.</target>
        </trans-unit>
        <trans-unit id="53b4efc0ec12b66bfb72581aacfd1278f1182232" translate="yes" xml:space="preserve">
          <source>Returns the lowerCamelCase form of a string.</source>
          <target state="translated">Devuelve la forma de una cuerda en minúscula.</target>
        </trans-unit>
        <trans-unit id="9578d2b6bd478f1d1d2ab145665ede9e0378f6c2" translate="yes" xml:space="preserve">
          <source>Returns the model class for the particular &lt;code&gt;modelName&lt;/code&gt;.</source>
          <target state="translated">Devuelve la clase de modelo para el &lt;code&gt;modelName&lt;/code&gt; en particular .</target>
        </trans-unit>
        <trans-unit id="6084c6c52d8f4610c165db1925af06fb94911fbb" translate="yes" xml:space="preserve">
          <source>Returns the name of the model class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bab782f8ac9d0f882b41382a9b9eba4f7d1cced" translate="yes" xml:space="preserve">
          <source>Returns the object at the given &lt;code&gt;index&lt;/code&gt;. If the given &lt;code&gt;index&lt;/code&gt; is negative or is greater or equal than the array length, returns &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">Devuelve el objeto en el &lt;code&gt;index&lt;/code&gt; dado . Si el &lt;code&gt;index&lt;/code&gt; dado es negativo o es mayor o igual que la longitud de la matriz, devuelve &lt;code&gt;undefined&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f3f7b4ca85546523dc009d25cb0b789a874b05c9" translate="yes" xml:space="preserve">
          <source>Returns the resolved model of a parent (or any ancestor) route in a route hierarchy. During a transition, all routes must resolve a model object, and if a route needs access to a parent route's model in order to resolve a model (or just reuse the model from a parent), it can call &lt;code&gt;this.modelFor(theNameOfParentRoute)&lt;/code&gt; to retrieve it. If the ancestor route's model was a promise, its resolved result is returned.</source>
          <target state="translated">Devuelve el modelo resuelto de una ruta principal (o de cualquier ancestro) en una jerarqu&amp;iacute;a de rutas. Durante una transici&amp;oacute;n, todas las rutas deben resolver un objeto de modelo, y si una ruta necesita acceso al modelo de una ruta principal para resolver un modelo (o simplemente reutilizar el modelo de una principal), puede llamar a &lt;code&gt;this.modelFor(theNameOfParentRoute)&lt;/code&gt; para recuperarlo. Si el modelo de la ruta ancestral era una promesa, se devuelve el resultado resuelto.</target>
        </trans-unit>
        <trans-unit id="a84d41130ac37df9542127b00978dea35fe64b87" translate="yes" xml:space="preserve">
          <source>Returns the resource's ID.</source>
          <target state="translated">Devuelve la identificación del recurso.</target>
        </trans-unit>
        <trans-unit id="bf66565ff73540d9dd7fc00f9444426f536c7d08" translate="yes" xml:space="preserve">
          <source>Returns the resource's attributes formatted as a JSON-API &quot;attributes object&quot;.</source>
          <target state="translated">Devuelve los atributos del recurso formateados como un &quot;objeto de atributos&quot; JSON-API.</target>
        </trans-unit>
        <trans-unit id="415b933c18c5478e404754280a5d65c8ca1940a0" translate="yes" xml:space="preserve">
          <source>Returns the resource's relationships formatted as a JSON-API &quot;relationships object&quot;.</source>
          <target state="translated">Devuelve las relaciones del recurso formateadas como un &quot;objeto de relaciones&quot; JSON-API.</target>
        </trans-unit>
        <trans-unit id="cdf54eb05e0fa1e3d781a566f01099e76afe41b7" translate="yes" xml:space="preserve">
          <source>Returns the value of the named property on all items in the enumeration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7070d6237ca8bd3631e5672cdd05bb5c80f183e0" translate="yes" xml:space="preserve">
          <source>Returns the values of filters defined by &lt;code&gt;getFilters&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afc70541a8fa4d9fce60946294448cc54071c811" translate="yes" xml:space="preserve">
          <source>Returns true if it is possible to catalog a list of available classes in the resolver for a given type.</source>
          <target state="translated">Devuelve verdadero si es posible catalogar una lista de clases disponibles en la resolución para un tipo determinado.</target>
        </trans-unit>
        <trans-unit id="dbd27005b9eb80ac7f03ed6d41eccecffd320423" translate="yes" xml:space="preserve">
          <source>Returns true if the passed object is an array or Array-like.</source>
          <target state="translated">Vuelve a la realidad si el objeto pasado es una matriz o un array.</target>
        </trans-unit>
        <trans-unit id="2cbfc0edc2a1571a31104dc3ac6c9e8701099f18" translate="yes" xml:space="preserve">
          <source>Returns true if the passed value is null or undefined. This avoids errors from JSLint complaining about use of ==, which can be technically confusing.</source>
          <target state="translated">Devuelve verdadero si el valor pasado es nulo o indefinido.Esto evita los errores de JSLint que se quejan del uso de ==,lo que puede ser técnicamente confuso.</target>
        </trans-unit>
        <trans-unit id="cb7fd3ff2c053ac1f7adced8bb08e8be1c57f557" translate="yes" xml:space="preserve">
          <source>Reusing Route Context</source>
          <target state="translated">Reutilización del contexto de la ruta</target>
        </trans-unit>
        <trans-unit id="f7a260f32f2ae28e993f2a321848e1adcfad19eb" translate="yes" xml:space="preserve">
          <source>Reverse objects in the array. Works just like &lt;code&gt;reverse()&lt;/code&gt; but it is KVO-compliant.</source>
          <target state="translated">Objetos inversos en la matriz. Funciona igual que &lt;code&gt;reverse()&lt;/code&gt; pero es compatible con KVO.</target>
        </trans-unit>
        <trans-unit id="ef58b6655b1d174bf86dcad644fe5f14396fd1de" translate="yes" xml:space="preserve">
          <source>Review the refactoring checklist below to create a plan for handling existing code. Note that some steps have codemods available!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6209537eda0bb676e9c1139d4542bb71b587c921" translate="yes" xml:space="preserve">
          <source>RootState</source>
          <target state="translated">RootState</target>
        </trans-unit>
        <trans-unit id="4999528efe0f94f8f66b1dc05aad8ebaaae7b2be" translate="yes" xml:space="preserve">
          <source>Route</source>
          <target state="translated">Route</target>
        </trans-unit>
        <trans-unit id="20bb4efd64b3d8c3fbab0cab5b9e525a3f5f3641" translate="yes" xml:space="preserve">
          <source>Route Handlers</source>
          <target state="translated">Manipuladores de ruta</target>
        </trans-unit>
        <trans-unit id="3e5b526bf5c2870cc328f02613777cab7924648b" translate="yes" xml:space="preserve">
          <source>RouteInfo</source>
          <target state="translated">RouteInfo</target>
        </trans-unit>
        <trans-unit id="836d21b73cac9b2da1021cc61047f6d87e32ce66" translate="yes" xml:space="preserve">
          <source>RouteInfoWithAttributes</source>
          <target state="translated">RouteInfoWithAttributes</target>
        </trans-unit>
        <trans-unit id="6dcf16e1c5d3e9fd2ae4a4d54c174448fe43e1b6" translate="yes" xml:space="preserve">
          <source>Router</source>
          <target state="translated">Router</target>
        </trans-unit>
        <trans-unit id="15507cd11e5f36e3bd1000cd0d459f39fb04d158" translate="yes" xml:space="preserve">
          <source>Router and Route Handlers</source>
          <target state="translated">Routers y Manipuladores de Rutas</target>
        </trans-unit>
        <trans-unit id="eb04e4102ddcdddd2b4ad8996248c661dcd7e77f" translate="yes" xml:space="preserve">
          <source>RouterService</source>
          <target state="translated">RouterService</target>
        </trans-unit>
        <trans-unit id="a9d3b175c69e17dc9060b2a51d5088436b3d7c7d" translate="yes" xml:space="preserve">
          <source>RouterService  (public)</source>
          <target state="translated">RouterService (público)</target>
        </trans-unit>
        <trans-unit id="03730e58401ef5d9e79d1f674df0a5f9cf756e33" translate="yes" xml:space="preserve">
          <source>Routes</source>
          <target state="translated">Routes</target>
        </trans-unit>
        <trans-unit id="bbe3002d2245379df83a5467ffff0fec18ef89e8" translate="yes" xml:space="preserve">
          <source>Routes and Templates</source>
          <target state="translated">Rutas y plantillas</target>
        </trans-unit>
        <trans-unit id="8987ca9f541ce3e64483abe2d701eb7b2b6a9540" translate="yes" xml:space="preserve">
          <source>Routes in this example application can now access the injected logger:</source>
          <target state="translated">Las rutas de esta aplicación de ejemplo pueden ahora acceder al registrador inyectado:</target>
        </trans-unit>
        <trans-unit id="64588f6aefa7085fb2efbbcac558cdfba1c74948" translate="yes" xml:space="preserve">
          <source>Routes without dynamic segments will always execute the model hook.</source>
          <target state="translated">Las rutas sin segmentos dinámicos siempre ejecutarán el gancho del modelo.</target>
        </trans-unit>
        <trans-unit id="0e523b39cf9ec96ace784b7a343ed0d9faa3ec4c" translate="yes" xml:space="preserve">
          <source>Routine minor version maintenance upgrades</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d15dd1bec2e055c5b177c9f869305ae6c54c9bb" translate="yes" xml:space="preserve">
          <source>Routing</source>
          <target state="translated">Routing</target>
        </trans-unit>
        <trans-unit id="0cd39bd2ed21b982743ecb7fd781003d0e3b3062" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;ember server&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1442914c6ee08b64a917d4c330cde7b015a3686d" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;ember t -s&lt;/code&gt; to verify that our new test is passing. To find the new test, locate &quot;Integration | Component | rental listing&quot; in the &quot;Module&quot; field of the test UI.</source>
          <target state="translated">Ejecute &lt;code&gt;ember t -s&lt;/code&gt; para verificar que nuestra nueva prueba est&amp;eacute; pasando. Para encontrar la nueva prueba, busque &quot;Integraci&amp;oacute;n | Componente | listado de alquiler&quot; en el campo &quot;M&amp;oacute;dulo&quot; de la IU de prueba.</target>
        </trans-unit>
        <trans-unit id="64e27783b0104ad18b07f55f262e7f7444bb57e6" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;npx @ember/octanify&lt;/code&gt; to add any missing Octane related dependencies and enable the set of Octane optional features.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dbbc67840c5e39c504d798d6593f53821d2cc88" translate="yes" xml:space="preserve">
          <source>Run a function meant for debugging.</source>
          <target state="translated">Ejecute una función destinada a la depuración.</target>
        </trans-unit>
        <trans-unit id="72b319733a3cbd1a60f4223245198cfc2ad86b61" translate="yes" xml:space="preserve">
          <source>Run any application initializers and run the application load hook. These hooks may choose to defer readiness. For example, an authentication hook might want to defer readiness until the auth token has been retrieved.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66a5ecdab45965e437f71333f302f2e5bab78442" translate="yes" xml:space="preserve">
          <source>Run in a full browser environment.</source>
          <target state="translated">Corre en un entorno de navegador completo.</target>
        </trans-unit>
        <trans-unit id="edc3981913706bf02d5feb303f21804148ecbc99" translate="yes" xml:space="preserve">
          <source>Run the following command to install the addon:</source>
          <target state="translated">Ejecute el siguiente comando para instalar el addon:</target>
        </trans-unit>
        <trans-unit id="2acab689db555e5a40a3ad5f90d7b5a3c8c74f42" translate="yes" xml:space="preserve">
          <source>Run the following commands to install the addon and generate a new modifier:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f6ff3e3092b35d4ef3929076640b57e0d508a29" translate="yes" xml:space="preserve">
          <source>Run the tests again using the command &lt;code&gt;ember t -s&lt;/code&gt;, and toggle &quot;Hide passed tests&quot; to show your new passing test.</source>
          <target state="translated">Ejecute las pruebas de nuevo con el comando &lt;code&gt;ember t -s&lt;/code&gt; y active &quot;Ocultar pruebas aprobadas&quot; para mostrar su nueva prueba aprobada.</target>
        </trans-unit>
        <trans-unit id="113d8c01f0ce1a9637e7e61d07f886f1ce894435" translate="yes" xml:space="preserve">
          <source>Run time, where we begin executing the application once everything has loaded.</source>
          <target state="translated">Tiempo de ejecución,donde empezamos a ejecutar la aplicación una vez que todo se ha cargado.</target>
        </trans-unit>
        <trans-unit id="18856dbed1e97664803502cb153a1b07dd530799" translate="yes" xml:space="preserve">
          <source>Run your tests to make sure everything still works as expected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cbc363f50b4971680e11de197253d5ebff17363" translate="yes" xml:space="preserve">
          <source>Run your tests with &lt;code&gt;ember test&lt;/code&gt; on the command-line. You can re-run your tests on every file-change with &lt;code&gt;ember test --server&lt;/code&gt;.</source>
          <target state="translated">Ejecute sus pruebas con &lt;code&gt;ember test&lt;/code&gt; en la l&amp;iacute;nea de comandos. Puede volver a ejecutar sus pruebas en cada cambio de archivo con &lt;code&gt;ember test --server&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2ce92b8f8a607252af27b98ddec45308f2f8137b" translate="yes" xml:space="preserve">
          <source>Running &lt;code&gt;ember test --server&lt;/code&gt; will now show 7 failing tests (out of 15). Each of the 6 tests we setup above will fail, plus one ESLint test will fail saying, &lt;code&gt;assert is defined but never used&lt;/code&gt;. The tests above fail because QUnit requires at least one check for a specific condition (known as an &lt;code&gt;assert&lt;/code&gt;).</source>
          <target state="translated">Ejecutando la &lt;code&gt;ember test --server&lt;/code&gt; ahora mostrar&amp;aacute; 7 pruebas fallidas (de 15). Cada una de las 6 pruebas que configuramos anteriormente fallar&amp;aacute;, adem&amp;aacute;s de una prueba de ESLint fallar&amp;aacute; diciendo que la aserci&amp;oacute;n &lt;code&gt;assert is defined but never used&lt;/code&gt; . Las pruebas anteriores fallan porque QUnit requiere al menos una verificaci&amp;oacute;n para una condici&amp;oacute;n espec&amp;iacute;fica (conocida como &lt;code&gt;assert&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="52d1f9fc84c72f964d3e2290880c642e3e33c2c8" translate="yes" xml:space="preserve">
          <source>Running this command generates three files: a component JavaScript file, a template, and a test file.</source>
          <target state="translated">Al ejecutar este comando se generan tres archivos:un archivo JavaScript componente,una plantilla y un archivo de prueba.</target>
        </trans-unit>
        <trans-unit id="42272791157160739ed302e320a2062a5ebaa316" translate="yes" xml:space="preserve">
          <source>Runs the passed target and method inside of a RunLoop, ensuring any deferred actions including bindings and views updates are flushed at the end.</source>
          <target state="translated">Ejecuta el objetivo y el método pasado dentro de un RunLoop,asegurando que cualquier acción aplazada,incluyendo las actualizaciones de los bindings y las vistas,sean eliminadas al final.</target>
        </trans-unit>
        <trans-unit id="222cad2bd37e45b5f33d5d967590f4b613622bfd" translate="yes" xml:space="preserve">
          <source>Runtime Configuration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="429ee37aaa10a7c1e1dbc7f3832b6b87b1b491c2" translate="yes" xml:space="preserve">
          <source>SSR</source>
          <target state="translated">SSR</target>
        </trans-unit>
        <trans-unit id="50fce6d02899850101b1865a947b45128c5350eb" translate="yes" xml:space="preserve">
          <source>SVG</source>
          <target state="translated">SVG</target>
        </trans-unit>
        <trans-unit id="34e3d9fa2efb3b7c73f3535f9e2462b7e96c9177" translate="yes" xml:space="preserve">
          <source>Safari &amp;amp; VoiceOver (MacOS)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d8e270a3b478909d95ca7c40279e9043d659c52" translate="yes" xml:space="preserve">
          <source>SafeString</source>
          <target state="translated">SafeString</target>
        </trans-unit>
        <trans-unit id="3345733b5704ef652ed8eb46f076938ea03125bd" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;deleteRecord&lt;/code&gt;, but saves the record immediately.</source>
          <target state="translated">Igual que &lt;code&gt;deleteRecord&lt;/code&gt; , pero guarda el registro inmediatamente.</target>
        </trans-unit>
        <trans-unit id="4a7e069bd507c730311a8b251060b5b9997cb937" translate="yes" xml:space="preserve">
          <source>Sass/Less Comparison</source>
          <target state="translated">Comparación de Sass/Less</target>
        </trans-unit>
        <trans-unit id="25818b0851afccf72a718a0e15e8c5e40a99b3fc" translate="yes" xml:space="preserve">
          <source>Save the record and persist any changes to the record to an external source via the adapter.</source>
          <target state="translated">Guarda el registro y persiste cualquier cambio en el registro a una fuente externa a través del adaptador.</target>
        </trans-unit>
        <trans-unit id="6c84a72cd3751d9f682a3838ae1434b6568e663c" translate="yes" xml:space="preserve">
          <source>Save this template and switch back to the &lt;code&gt;scientists&lt;/code&gt; template.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6db7e04098ce89e31bb81c3fc95a3a70f998a013" translate="yes" xml:space="preserve">
          <source>Save this template and switch back to the &lt;code&gt;scientists&lt;/code&gt; template. Replace all our old code with our new componentized version. Components look like HTML tags but instead of using angle brackets (&lt;code&gt;&amp;lt;tag&amp;gt;&lt;/code&gt;) they use double curly braces (&lt;code&gt;{{component}}&lt;/code&gt;).</source>
          <target state="translated">Guarde esta plantilla y vuelva a la plantilla de &lt;code&gt;scientists&lt;/code&gt; . Reemplace todo nuestro c&amp;oacute;digo antiguo con nuestra nueva versi&amp;oacute;n en componentes. Los componentes se ven como etiquetas HTML, pero en lugar de usar corchetes angulares ( &lt;code&gt;&amp;lt;tag&amp;gt;&lt;/code&gt; ), usan llaves dobles ( &lt;code&gt;{{component}}&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="75008fab400537d9213cc7b35f572e830001bbbb" translate="yes" xml:space="preserve">
          <source>Saves all of the records in the &lt;code&gt;ManyArray&lt;/code&gt;.</source>
          <target state="translated">Guarda todos los registros en &lt;code&gt;ManyArray&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="df3feb104ba2e45607091340bd579e0e82e620de" translate="yes" xml:space="preserve">
          <source>Saves all of the records in the &lt;code&gt;RecordArray&lt;/code&gt;.</source>
          <target state="translated">Guarda todos los registros en &lt;code&gt;RecordArray&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3fe2b6866788c46de111214341e6e46e2056460c" translate="yes" xml:space="preserve">
          <source>Say your API namespaces the type of a model and expects the following payload when you update the &lt;code&gt;post&lt;/code&gt; model, which has a polymorphic &lt;code&gt;user&lt;/code&gt; relationship:</source>
          <target state="translated">Supongamos que los espacios de nombres de su API son el tipo de modelo y esperan la siguiente carga &amp;uacute;til cuando actualiza el modelo de &lt;code&gt;post&lt;/code&gt; , que tiene una relaci&amp;oacute;n de &lt;code&gt;user&lt;/code&gt; polim&amp;oacute;rfica :</target>
        </trans-unit>
        <trans-unit id="d136d61c474d3b91c7e154860b021ed3fbba6838" translate="yes" xml:space="preserve">
          <source>Say your API namespaces the type of a model and expects the following payload when you update the &lt;code&gt;post&lt;/code&gt; model:</source>
          <target state="translated">Supongamos que los espacios de nombres de su API son el tipo de un modelo y esperan la siguiente carga &amp;uacute;til cuando actualiza el modelo de &lt;code&gt;post&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="ea662432dbe1c412446984e3028f23c30fe1a705" translate="yes" xml:space="preserve">
          <source>Say your API namespaces the type of a model and returns the following payload for the &lt;code&gt;post&lt;/code&gt; model, which has a polymorphic &lt;code&gt;user&lt;/code&gt; relationship:</source>
          <target state="translated">Supongamos que los espacios de nombres de la API son el tipo de un modelo y devuelven la siguiente carga &amp;uacute;til para el modelo de &lt;code&gt;post&lt;/code&gt; , que tiene una relaci&amp;oacute;n de &lt;code&gt;user&lt;/code&gt; polim&amp;oacute;rfica :</target>
        </trans-unit>
        <trans-unit id="a903a2095a7bcdbfa11fb73fb67d71d335131cd8" translate="yes" xml:space="preserve">
          <source>Say your API namespaces the type of a model and returns the following payload for the &lt;code&gt;post&lt;/code&gt; model:</source>
          <target state="translated">Supongamos que los espacios de nombres de su API son el tipo de un modelo y devuelven la siguiente carga &amp;uacute;til para el modelo de &lt;code&gt;post&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="b6d33be0f5b1eaf876dc704dde51d9330f8ce358" translate="yes" xml:space="preserve">
          <source>Say your template now looks like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc16a7d79cd8b9582ffe6cf1c9f51f2a4e6b9968" translate="yes" xml:space="preserve">
          <source>Schedule a function to run one time during the current RunLoop. This is equivalent to calling &lt;code&gt;scheduleOnce&lt;/code&gt; with the &quot;actions&quot; queue.</source>
          <target state="translated">Programe una funci&amp;oacute;n para que se ejecute una vez durante el RunLoop actual. Esto es equivalente a llamar a &lt;code&gt;scheduleOnce&lt;/code&gt; con la cola de &quot;acciones&quot;.</target>
        </trans-unit>
        <trans-unit id="2fa9c050bafdf85859c52a24173e46d2b0a60bfa" translate="yes" xml:space="preserve">
          <source>Schedules a function to run one time in a given queue of the current RunLoop. Calling this method with the same queue/target/method combination will have no effect (past the initial call).</source>
          <target state="translated">Programa una función para que se ejecute una vez en una cola dada del RunLoop actual.Llamar a este método con la misma combinación de cola/destino/método no tendrá ningún efecto (más allá de la llamada inicial).</target>
        </trans-unit>
        <trans-unit id="1b04067c753c9231c4ab1631929ac85a00912241" translate="yes" xml:space="preserve">
          <source>Schedules an item to run from within a separate run loop, after control has been returned to the system. This is equivalent to calling &lt;code&gt;later&lt;/code&gt; with a wait time of 1ms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="415823adc474692ea63ccbfdd4bf9285fdf51e36" translate="yes" xml:space="preserve">
          <source>Schedules an item to run from within a separate run loop, after control has been returned to the system. This is equivalent to calling &lt;code&gt;run.later&lt;/code&gt; with a wait time of 1ms.</source>
          <target state="translated">Programa un art&amp;iacute;culo para que se ejecute desde un ciclo de ejecuci&amp;oacute;n independiente, despu&amp;eacute;s de que el control se haya devuelto al sistema. Esto equivale a llamar a &lt;code&gt;run.later&lt;/code&gt; con un tiempo de espera de 1 ms.</target>
        </trans-unit>
        <trans-unit id="d41e78b236856ccbed77627ade3d088d216acb1c" translate="yes" xml:space="preserve">
          <source>Screen Reader and Browser Combinations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b35f99d17c2b4cd3489d04e3e8a0753839e2f05" translate="yes" xml:space="preserve">
          <source>Scrolling to a Component in the Browser</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2da8e5963f5b139e60b530201737776279520ba2" translate="yes" xml:space="preserve">
          <source>Second value to compare</source>
          <target state="translated">Segundo valor a comparar</target>
        </trans-unit>
        <trans-unit id="fbb14676cc33f6f4135e4da0888670ea8bff400b" translate="yes" xml:space="preserve">
          <source>Second, attribute and relationship names in the JSON API document should exactly match the name and casing of the &lt;code&gt;DS.attr()&lt;/code&gt;, &lt;code&gt;DS.belongsTo()&lt;/code&gt; and &lt;code&gt;DS.hasMany()&lt;/code&gt;, properties defined on the Model.</source>
          <target state="translated">En segundo lugar, los nombres de los atributos y las relaciones en el documento de la API JSON deben coincidir exactamente con el nombre y la carcasa de &lt;code&gt;DS.attr()&lt;/code&gt; , &lt;code&gt;DS.belongsTo()&lt;/code&gt; y &lt;code&gt;DS.hasMany()&lt;/code&gt; , propiedades definidas en el modelo.</target>
        </trans-unit>
        <trans-unit id="034dffe4f830c683fca9562126a5ca88d70ebe7c" translate="yes" xml:space="preserve">
          <source>Second, attribute and relationship names in the JSON:API document should exactly match the name and casing of the &lt;code&gt;@attr&lt;/code&gt;, &lt;code&gt;@belongsTo&lt;/code&gt; and &lt;code&gt;@hasMany&lt;/code&gt;, properties defined on the Model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db838ce03ec02cddf2e180b605abba62ccb78900" translate="yes" xml:space="preserve">
          <source>Second, you can use Ember CLI to create an application test. Because application tests can cover anything in your app, you will want to organize the files in some natural manner. This will help you quickly find tests and prevent writing duplicates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2505c754e96c76956a7be1f711c7c15d871a6591" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#method_findRecord&quot;&gt;findRecord&lt;/a&gt; if you would like to request this record from the backend.</source>
          <target state="translated">Consulte &lt;a href=&quot;#method_findRecord&quot;&gt;findRecord&lt;/a&gt; si desea solicitar este registro desde el backend.</target>
        </trans-unit>
        <trans-unit id="e6b7139c565ccba6b41646265abe63665bc0e0fb" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#method_peekAll&quot;&gt;peekAll&lt;/a&gt; to get an array of current records in the store, without waiting until a reload is finished.</source>
          <target state="translated">Consulte &lt;a href=&quot;#method_peekAll&quot;&gt;peekAll&lt;/a&gt; para obtener una matriz de registros actuales en la tienda, sin esperar hasta que finalice una recarga.</target>
        </trans-unit>
        <trans-unit id="886ff4d1e817dd0f2c949c0a7b4ce296faa34a4f" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#method_peekRecord&quot;&gt;peekRecord&lt;/a&gt; to get the cached version of a record.</source>
          <target state="translated">Consulte &lt;a href=&quot;#method_peekRecord&quot;&gt;peekRecord&lt;/a&gt; para obtener la versi&amp;oacute;n en cach&amp;eacute; de un registro.</target>
        </trans-unit>
        <trans-unit id="61ccab3b58667205608bc05c31f4f4471dba3cbc" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#method_query&quot;&gt;query&lt;/a&gt; to only get a subset of records from the server.</source>
          <target state="translated">Consulte la &lt;a href=&quot;#method_query&quot;&gt;consulta&lt;/a&gt; para obtener solo un subconjunto de registros del servidor.</target>
        </trans-unit>
        <trans-unit id="3105a13b11f9cc2079e6d9c9697d486cac446dad" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../classes/store/methods#findRecord&quot;&gt;findRecord&lt;/a&gt; if you would like to request this record from the backend.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="767b15fbf66aebbc4c1178cfc66ef2addeaff7a7" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../classes/store/methods#peekAll&quot;&gt;peekAll&lt;/a&gt; to get an array of current records in the store, without waiting until a reload is finished.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="301e5555d56099e927bafe66085f45d680ad09fd" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../classes/store/methods#peekRecord&quot;&gt;peekRecord&lt;/a&gt; to get the cached version of a record.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52b9c1d58375374ce85b3db6e92e1d22b6f76771" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../classes/store/methods#query&quot;&gt;query&lt;/a&gt; to only get a subset of records from the server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46d9795971c80ea476d0b1500751d7a511c3ccff" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../passing-properties-to-a-component&quot;&gt;Passing Properties to a Component&lt;/a&gt; for more.</source>
          <target state="translated">Consulte &lt;a href=&quot;../passing-properties-to-a-component&quot;&gt;Pasar propiedades a un componente&lt;/a&gt; para obtener m&amp;aacute;s informaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="0319da9f087136e4a227ecabe7592e7410d686a7" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://api.emberjs.com/ember/release/classes/Component&quot;&gt;&quot;Event Names&quot;&lt;/a&gt; for a list of acceptable DOM event names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59c230214dd323fd59b372f5662d59a31f4e058f" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://api.emberjs.com/ember/release/classes/Ember.Templates.components/methods#Input&quot;&gt;Ember.Templates.components.Input&lt;/a&gt; for usage details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c606b9d8595a50fa7aa94676800966aac8b31e0c" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://api.emberjs.com/ember/release/classes/Ember.Templates.components/methods#Input&quot;&gt;Ember.Templates.components.Input&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b59e94468bbac79b422f95f86d51ba6d3357a3b" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://api.emberjs.com/ember/release/classes/Ember.Templates.components/methods#LinkTo&quot;&gt;Ember.Templates.components.LinkTo&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d8ef01c673e480de87f9a30258d0cc3c0b91e52" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://api.emberjs.com/ember/release/classes/Ember.Templates.helpers/methods#action&quot;&gt;Ember.Templates.helpers.action&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff6fbd0c84895ac5a1183d822bece1572d790301" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://api.emberjs.com/ember/release/classes/Ember.Templates.helpers/methods#input&quot;&gt;Ember.Templates.helpers.input&lt;/a&gt; for usage details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f4195a0e3a0053f1daea3c2b0663c242da9aae2" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://api.emberjs.com/ember/release/classes/HashLocation&quot;&gt;HashLocation&lt;/a&gt;. See &lt;a href=&quot;https://api.emberjs.com/ember/release/classes/HistoryLocation&quot;&gt;HistoryLocation&lt;/a&gt;. See &lt;a href=&quot;https://api.emberjs.com/ember/release/classes/NoneLocation&quot;&gt;NoneLocation&lt;/a&gt;. See &lt;a href=&quot;https://api.emberjs.com/ember/release/classes/AutoLocation&quot;&gt;AutoLocation&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30783607813c38b446462004a03e85001d9c1d18" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://api.emberjs.com/ember/release/classes/Location&quot;&gt;Location&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7cd238cafae20ea63e84d678404ca936763fda5" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://api.emberjs.com/ember/release/classes/Route/methods#replaceWith&quot;&gt;replaceWith&lt;/a&gt; for more info.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1495cd26c813c59a09e8d41995ed5d2e6a8db9b7" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://api.emberjs.com/ember/release/classes/Route/methods#transitionTo&quot;&gt;transitionTo&lt;/a&gt; for more info.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aead30c4035a153b7292346def1a11abd9b74534" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://api.emberjs.com/ember/release/classes/RouteInfo&quot;&gt;RouteInfo&lt;/a&gt; for more info.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3db6252e2ca3a79d9351ce05c47a2d29d1a3f0d3" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://emberjs.com/api/classes/Ember.Component#event-names&quot;&gt;&quot;Event Names&quot;&lt;/a&gt; for a list of acceptable DOM event names.</source>
          <target state="translated">Consulte &lt;a href=&quot;https://emberjs.com/api/classes/Ember.Component#event-names&quot;&gt;&quot;Nombres de eventos&quot;&lt;/a&gt; para obtener una lista de nombres de eventos DOM aceptables.</target>
        </trans-unit>
        <trans-unit id="e8789001d899131f2e85e2f5f2831793db5bede0" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://emberjs.com/api/classes/Ember.ComputedProperty.html&quot;&gt;Ember.ComputedProperty&lt;/a&gt;, &lt;a href=&quot;https://emberjs.com/api/classes/Ember.computed.html&quot;&gt;Ember.computed&lt;/a&gt;.</source>
          <target state="translated">Consulte &lt;a href=&quot;https://emberjs.com/api/classes/Ember.ComputedProperty.html&quot;&gt;Ember.ComputedProperty&lt;/a&gt; , &lt;a href=&quot;https://emberjs.com/api/classes/Ember.computed.html&quot;&gt;Ember.computed&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="65ead4fce2d577717cfc6277eb28eb28c8681b44" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://emberjs.com/api/classes/Ember.LinkComponent.html&quot;&gt;Ember.LinkComponent&lt;/a&gt; for a complete list of overrideable properties. Be sure to also check out inherited properties of &lt;code&gt;LinkComponent&lt;/code&gt;.</source>
          <target state="translated">Consulte &lt;a href=&quot;https://emberjs.com/api/classes/Ember.LinkComponent.html&quot;&gt;Ember.LinkComponent&lt;/a&gt; para obtener una lista completa de propiedades reemplazables. Aseg&amp;uacute;rese de consultar tambi&amp;eacute;n las propiedades heredadas de &lt;code&gt;LinkComponent&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="045265cfa59bb6f41aaac98fec78959fdd19abe6" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://emberjs.com/api/classes/Ember.Location.HashLocation&quot;&gt;Ember.Location.HashLocation&lt;/a&gt;. See &lt;a href=&quot;https://emberjs.com/api/classes/Ember.Location.HistoryLocation&quot;&gt;Ember.Location.HistoryLocation&lt;/a&gt;. See &lt;a href=&quot;https://emberjs.com/api/classes/Ember.Location.NoneLocation&quot;&gt;Ember.Location.NoneLocation&lt;/a&gt;. See &lt;a href=&quot;https://emberjs.com/api/classes/Ember.Location.AutoLocation&quot;&gt;Ember.Location.AutoLocation&lt;/a&gt;.</source>
          <target state="translated">Consulte &lt;a href=&quot;https://emberjs.com/api/classes/Ember.Location.HashLocation&quot;&gt;Ember.Location.HashLocation&lt;/a&gt; . Consulte &lt;a href=&quot;https://emberjs.com/api/classes/Ember.Location.HistoryLocation&quot;&gt;Ember.Location.HistoryLocation&lt;/a&gt; . Ver &lt;a href=&quot;https://emberjs.com/api/classes/Ember.Location.NoneLocation&quot;&gt;Ember.Location.NoneLocation&lt;/a&gt; . Ver &lt;a href=&quot;https://emberjs.com/api/classes/Ember.Location.AutoLocation&quot;&gt;Ember.Location.AutoLocation&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="01062a6ca91683116a2e4f5f08c832a71f5fe8f8" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://emberjs.com/api/classes/Ember.Route.html#method_replaceWith&quot;&gt;Route.replaceWith&lt;/a&gt; for more info.</source>
          <target state="translated">Consulte &lt;a href=&quot;https://emberjs.com/api/classes/Ember.Route.html#method_replaceWith&quot;&gt;Route.replaceWith&lt;/a&gt; para obtener m&amp;aacute;s informaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="857a99c53ed3cf0419cf7f9b690df0548804f0cb" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://emberjs.com/api/classes/Ember.Route.html#method_transitionTo&quot;&gt;Route.transitionTo&lt;/a&gt; for more info.</source>
          <target state="translated">Consulte &lt;a href=&quot;https://emberjs.com/api/classes/Ember.Route.html#method_transitionTo&quot;&gt;Route.transitionTo&lt;/a&gt; para obtener m&amp;aacute;s informaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="881033150b0297e5f01d4a625bd73488021b52e6" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://emberjs.com/api/classes/Ember.String.html#method_loc&quot;&gt;Ember.String.loc&lt;/a&gt; for how to set up localized string references.</source>
          <target state="translated">Consulte &lt;a href=&quot;https://emberjs.com/api/classes/Ember.String.html#method_loc&quot;&gt;Ember.String.loc&lt;/a&gt; para saber c&amp;oacute;mo configurar referencias de cadenas localizadas.</target>
        </trans-unit>
        <trans-unit id="6112da6f0d617231dc4dbb1b45eeb398b827508d" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://emberjs.com/api/classes/Ember.Templates.helpers.html#method_action&quot;&gt;Ember.Templates.helpers.action&lt;/a&gt;.</source>
          <target state="translated">Consulte &lt;a href=&quot;https://emberjs.com/api/classes/Ember.Templates.helpers.html#method_action&quot;&gt;Ember.Templates.helpers.action&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2e320b1d30f80cb3e78ed752a8fd867c8ef8c8dc" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://emberjs.com/api/classes/Ember.Templates.helpers.html#method_input&quot;&gt;Ember.Templates.helpers.input&lt;/a&gt; for usage details.</source>
          <target state="translated">Consulte &lt;a href=&quot;https://emberjs.com/api/classes/Ember.Templates.helpers.html#method_input&quot;&gt;Ember.Templates.helpers.input&lt;/a&gt; para obtener detalles de uso.</target>
        </trans-unit>
        <trans-unit id="03d11afa96477f44a066fa485ba8101cf284b0ae" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://emberjs.com/api/classes/Ember.Templates.helpers.html#method_textarea&quot;&gt;Ember.Templates.helpers.textarea&lt;/a&gt; for usage details.</source>
          <target state="translated">Consulte &lt;a href=&quot;https://emberjs.com/api/classes/Ember.Templates.helpers.html#method_textarea&quot;&gt;Ember.Templates.helpers.textarea&lt;/a&gt; para obtener detalles de uso.</target>
        </trans-unit>
        <trans-unit id="47faa79acc3c86a2306cd182fa2b1e0dd8b6cb51" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://emberjs.com/api/classes/Ember.Templates.helpers.html#method_yield&quot;&gt;Ember.Templates.helpers.yield&lt;/a&gt; for more information.</source>
          <target state="translated">Consulte &lt;a href=&quot;https://emberjs.com/api/classes/Ember.Templates.helpers.html#method_yield&quot;&gt;Ember.Templates.helpers.yield&lt;/a&gt; para obtener m&amp;aacute;s informaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="5d084a39940c5ca6a3dc230b8703de366598062d" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://emberjs.com/guides/templates/the-application-template/&quot;&gt;templates guide&lt;/a&gt; for additional information on using &lt;code&gt;{{outlet}}&lt;/code&gt; in &lt;code&gt;application.hbs&lt;/code&gt;. You may also specify a name for the &lt;code&gt;{{outlet}}&lt;/code&gt;, which is useful when using more than one &lt;code&gt;{{outlet}}&lt;/code&gt; in a template:</source>
          <target state="translated">Consulte &lt;a href=&quot;https://emberjs.com/guides/templates/the-application-template/&quot;&gt;la gu&amp;iacute;a de plantillas&lt;/a&gt; para obtener informaci&amp;oacute;n adicional sobre el uso de &lt;code&gt;{{outlet}}&lt;/code&gt; en &lt;code&gt;application.hbs&lt;/code&gt; . Tambi&amp;eacute;n puede especificar un nombre para el &lt;code&gt;{{outlet}}&lt;/code&gt; , que es &amp;uacute;til cuando se usa m&amp;aacute;s de un &lt;code&gt;{{outlet}}&lt;/code&gt; en una plantilla:</target>
        </trans-unit>
        <trans-unit id="da7f7101e86e008a15c9fc249f9d10eeeb8ad692" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;Ember.observer&lt;/code&gt;.</source>
          <target state="translated">Ver &lt;code&gt;Ember.observer&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cb6d38f9f2619d3888781eee8439db883f2023dd" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;Ember.on&lt;/code&gt;.</source>
          <target state="translated">Ver &lt;code&gt;Ember.on&lt;/code&gt; . En .</target>
        </trans-unit>
        <trans-unit id="d5654e29a2f9b281a9e8375d997a1390c911e728" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;serialize&lt;/code&gt; for information on how to customize the serialized form of a record.</source>
          <target state="translated">Consulte &lt;code&gt;serialize&lt;/code&gt; para obtener informaci&amp;oacute;n sobre c&amp;oacute;mo personalizar la forma serializada de un registro.</target>
        </trans-unit>
        <trans-unit id="d9a00896f41c599da76dc20f479edb128563ac86" translate="yes" xml:space="preserve">
          <source>See Application.initializer for discussion on the usage of before and after.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c586195d203dee29ed62d91d26341ea7df6918eb" translate="yes" xml:space="preserve">
          <source>See Ember.Application.initializer for discussion on the usage of before and after.</source>
          <target state="translated">Véase Ember.Application.initializer para el debate sobre el uso de antes y después.</target>
        </trans-unit>
        <trans-unit id="bede171d87f7cb61701998037e437c80414a95a2" translate="yes" xml:space="preserve">
          <source>See Ember.Templates.components.Textarea.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e38cd17e666018827e69a44432616458686394b7" translate="yes" xml:space="preserve">
          <source>See RSVP.Promise.catch.</source>
          <target state="translated">Ver RSVP.Promise.catch.</target>
        </trans-unit>
        <trans-unit id="392314b527dfbd25d9b7ed433a5cad392661aecf" translate="yes" xml:space="preserve">
          <source>See RSVP.Promise.finally.</source>
          <target state="translated">Ver RSVP.Promise.finally.</target>
        </trans-unit>
        <trans-unit id="2192c68214bde1365823cd88f18083860287db7d" translate="yes" xml:space="preserve">
          <source>See RSVP.Promise.then.</source>
          <target state="translated">Ver RSVP.Promise.then.</target>
        </trans-unit>
        <trans-unit id="e4f6b4832e77e568563e9f9654dc677db5ef2bd6" translate="yes" xml:space="preserve">
          <source>See all observers for an object, key</source>
          <target state="translated">Ver todos los observadores de un objeto,clave</target>
        </trans-unit>
        <trans-unit id="f44d1816a0f33954c0c1b606d935226b15a7a275" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#method_replaceWith&quot;&gt;replaceWith&lt;/a&gt;.</source>
          <target state="translated">Consulte tambi&amp;eacute;n &lt;a href=&quot;#method_replaceWith&quot;&gt;replaceWith&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1988f100a0c69901fb6b7c62063558d170fe6707" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;https://api.emberjs.com/ember/release/classes/Ember.ControllerMixin/methods#replaceRoute&quot;&gt;replaceRoute&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65b6e8e3055ab3ad8943a84067c6dde10eeb6b38" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;https://emberjs.com/api/classes/Ember.ControllerMixin.html#method_replaceRoute&quot;&gt;replaceRoute&lt;/a&gt;.</source>
          <target state="translated">Consulte tambi&amp;eacute;n &lt;a href=&quot;https://emberjs.com/api/classes/Ember.ControllerMixin.html#method_replaceRoute&quot;&gt;replaceRoute&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="97dd9bb1a71a2721679fe0253b5d472ea10ebad5" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;https://en.wikipedia.org/wiki/Partial_application&quot;&gt;partial application&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b99a8f14eeb215db8b265ce373ed6b7c06c3bcdc" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;findMany&lt;/code&gt; and &lt;code&gt;coalesceFindRequests&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9055a79315a92197a81491b2935920ef41434f7b" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;groupRecordsForFindMany&lt;/code&gt; and &lt;code&gt;coalesceFindRequests&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6e0086846357bfe5efd4585bcddabbf01147a92" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;shouldReloadAll&lt;/code&gt; and &lt;code&gt;shouldBackgroundReloadAll&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9f85b38eecb68cbfa9743890c0ab6a9e7d97afa" translate="yes" xml:space="preserve">
          <source>See also the documentation for &lt;code&gt;shouldBackgroundReloadRecord&lt;/code&gt; which defaults to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1131debc15fa7b2f9872d39240142f424b1f9d69" translate="yes" xml:space="preserve">
          <source>See more about &lt;a href=&quot;https://emberjs.com/api/classes/Ember.Component.html&quot;&gt;Ember components&lt;/a&gt;</source>
          <target state="translated">M&amp;aacute;s informaci&amp;oacute;n sobre los &lt;a href=&quot;https://emberjs.com/api/classes/Ember.Component.html&quot;&gt;componentes de Ember&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3ba9f21e3fbfc35d0ad9d88b57d28f52f45794dc" translate="yes" xml:space="preserve">
          <source>See more about &lt;a href=&quot;https://emberjs.com/api/classes/Ember.TextArea.html&quot;&gt;Text Support Actions&lt;/a&gt;</source>
          <target state="translated">M&amp;aacute;s informaci&amp;oacute;n sobre &lt;a href=&quot;https://emberjs.com/api/classes/Ember.TextArea.html&quot;&gt;las acciones de soporte de texto&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d8d27c03873709d7fb4d40eef28f6d91b6c1accb" translate="yes" xml:space="preserve">
          <source>See more about &lt;a href=&quot;https://emberjs.com/api/classes/Ember.TextField.html&quot;&gt;Text Support Actions&lt;/a&gt;</source>
          <target state="translated">M&amp;aacute;s informaci&amp;oacute;n sobre &lt;a href=&quot;https://emberjs.com/api/classes/Ember.TextField.html&quot;&gt;las acciones de soporte de texto&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="962ed2719e85d5ea79a83fc6aacb86ed6c442ba1" translate="yes" xml:space="preserve">
          <source>See that first, we are creating a new testing module using the &lt;a href=&quot;https://api.qunitjs.com/QUnit/module&quot;&gt;&lt;code&gt;QUnit.module&lt;/code&gt;&lt;/a&gt; function. This will scope all of our tests together into one group that can be configured and run independently from other modules defined in our test suite. Also, we have used &lt;code&gt;setupTest&lt;/code&gt;, one of the several test helpers provided by &lt;a href=&quot;https://github.com/emberjs/ember-qunit&quot;&gt;ember-qunit&lt;/a&gt;. The &lt;code&gt;setupTest&lt;/code&gt; helper provides us with some conveniences, such as the &lt;code&gt;this.owner&lt;/code&gt; object, that helps us to create or lookup objects which are needed to setup our test. In this example, we use the &lt;code&gt;this.owner&lt;/code&gt; object to lookup the service instance that becomes our test subject: &lt;code&gt;someThing&lt;/code&gt;. Note that in a unit test you can customize any object under test by setting its properties accordingly. We can use the &lt;code&gt;set&lt;/code&gt; method of the test object to achieve this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5aa5055098c1d7f1ee4bd170e24743c3af2dcaa6" translate="yes" xml:space="preserve">
          <source>See that we have used &lt;code&gt;moduleFor&lt;/code&gt;, one of the several unit-test helpers provided by Ember-Qunit. Test helpers provide us with some conveniences, such as the &lt;code&gt;subject&lt;/code&gt; function that handles lookup and instantiation for our object under test. Note that in a unit test you can customize the initialization of your object under test by passing to the &lt;code&gt;subject&lt;/code&gt; function an object containing the instance variables you would like to initialize. For example, to initialize the property 'foo' in our object under test, we would call &lt;code&gt;this.subject({ foo: 'bar' });&lt;/code&gt;</source>
          <target state="translated">Vea que hemos utilizado &lt;code&gt;moduleFor&lt;/code&gt; , uno de los varios ayudantes de prueba unitaria proporcionados por Ember-Qunit. Los ayudantes de prueba nos brindan algunas comodidades, como la funci&amp;oacute;n de &lt;code&gt;subject&lt;/code&gt; que maneja la b&amp;uacute;squeda y la creaci&amp;oacute;n de instancias para nuestro objeto bajo prueba. Tenga en cuenta que en una prueba unitaria puede personalizar la inicializaci&amp;oacute;n de su objeto bajo prueba pasando a la funci&amp;oacute;n del &lt;code&gt;subject&lt;/code&gt; un objeto que contenga las variables de instancia que le gustar&amp;iacute;a inicializar. Por ejemplo, para inicializar la propiedad 'foo' en nuestro objeto bajo prueba, llamar&amp;iacute;amos &lt;code&gt;this.subject({ foo: 'bar' });&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ae9382bccb52583673509854efe6c33c1551b8a4" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;https://emberjs.com/guides/routing/rendering-a-template/&quot;&gt;routing guide&lt;/a&gt; for more information on how your &lt;code&gt;route&lt;/code&gt; interacts with the &lt;code&gt;{{outlet}}&lt;/code&gt; helper. Note: Your content &lt;strong&gt;will not render&lt;/strong&gt; if there isn't an &lt;code&gt;{{outlet}}&lt;/code&gt; for it.</source>
          <target state="translated">Consulte la &lt;a href=&quot;https://emberjs.com/guides/routing/rendering-a-template/&quot;&gt;gu&amp;iacute;a de enrutamiento&lt;/a&gt; para obtener m&amp;aacute;s informaci&amp;oacute;n sobre c&amp;oacute;mo interact&amp;uacute;a su &lt;code&gt;route&lt;/code&gt; con el ayudante &lt;code&gt;{{outlet}}&lt;/code&gt; . Nota: Su contenido &lt;strong&gt;no se procesar&amp;aacute;&lt;/strong&gt; si no hay una &lt;code&gt;{{outlet}}&lt;/code&gt; para ello.</target>
        </trans-unit>
        <trans-unit id="2edbaf0ad072472661c6c4f6ea9bc0de07118fdf" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;https://guides.emberjs.com/release/configuring-ember/feature-flags/&quot;&gt;feature flag guide&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddb5210f337735b81962ad926f8b222ce36247c9" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;https://guides.emberjs.com/release/routing/rendering-a-template/&quot;&gt;routing guide&lt;/a&gt; for more information on how your &lt;code&gt;route&lt;/code&gt; interacts with the &lt;code&gt;{{outlet}}&lt;/code&gt; helper. Note: Your content &lt;strong&gt;will not render&lt;/strong&gt; if there isn't an &lt;code&gt;{{outlet}}&lt;/code&gt; for it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a57805751973ea57faaaae7c6e36d1170562cb5e" translate="yes" xml:space="preserve">
          <source>See the &lt;code&gt;normalize&lt;/code&gt; documentation for more information.</source>
          <target state="translated">Consulte la documentaci&amp;oacute;n de &lt;code&gt;normalize&lt;/code&gt; para obtener m&amp;aacute;s informaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="466a6e9c7a1e57a171042a7f153306f2eec6b51f" translate="yes" xml:space="preserve">
          <source>See the Handlebars documentation on &lt;a href=&quot;http://handlebarsjs.com/#block-expressions&quot;&gt;block expressions&lt;/a&gt; for more.</source>
          <target state="translated">Consulte la documentaci&amp;oacute;n de Handlebars sobre &lt;a href=&quot;http://handlebarsjs.com/#block-expressions&quot;&gt;expresiones de bloque&lt;/a&gt; para obtener m&amp;aacute;s informaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="9f864ff30f39009bee652eeaa77b5d4e2cb3c219" translate="yes" xml:space="preserve">
          <source>See the documentation for &lt;code&gt;Ember.EventDispatcher&lt;/code&gt; for more information.</source>
          <target state="translated">Consulte la documentaci&amp;oacute;n de &lt;code&gt;Ember.EventDispatcher&lt;/code&gt; para obtener m&amp;aacute;s informaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="f9ec3fb36372bb7e739319f5901a89f1c01950e5" translate="yes" xml:space="preserve">
          <source>See the documentation on &lt;code&gt;Application&lt;/code&gt;'s &lt;code&gt;rootElement&lt;/code&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea7a7d93a5f6e7b777d76bb4492e53852bacf5fc" translate="yes" xml:space="preserve">
          <source>See the documentation on &lt;code&gt;BootOptions&lt;/code&gt; for the options it takes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d1186a24f13f7ddf3bb7bc489fbe38dfa0116f7" translate="yes" xml:space="preserve">
          <source>See the documentation on &lt;code&gt;Ember.Applications&lt;/code&gt;'s &lt;code&gt;rootElement&lt;/code&gt; for details.</source>
          <target state="translated">Consulte la documentaci&amp;oacute;n sobre &lt;code&gt;Ember.Applications&lt;/code&gt; de &lt;code&gt;rootElement&lt;/code&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="dea9dace86fce4ca0506d1cbbe4c73c1b60d132e" translate="yes" xml:space="preserve">
          <source>See the documentation on the &lt;code&gt;isBrowser&lt;/code&gt;, &lt;code&gt;document&lt;/code&gt; and &lt;code&gt;rootElement&lt;/code&gt; properties on &lt;code&gt;ApplicationInstance.BootOptions&lt;/code&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1adc341f4763a89fa8173df93fc2565a43324631" translate="yes" xml:space="preserve">
          <source>See the documentation on the &lt;code&gt;isBrowser&lt;/code&gt;, &lt;code&gt;document&lt;/code&gt; and &lt;code&gt;rootElement&lt;/code&gt; properties on &lt;code&gt;Ember.ApplicationInstance.BootOptions&lt;/code&gt; for details.</source>
          <target state="translated">Consulte la documentaci&amp;oacute;n sobre las &lt;code&gt;isBrowser&lt;/code&gt; , &lt;code&gt;document&lt;/code&gt; y &lt;code&gt;rootElement&lt;/code&gt; en &lt;code&gt;Ember.ApplicationInstance.BootOptions&lt;/code&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="1824d460f7c3833816d20ccdd7e4598d1c806c7e" translate="yes" xml:space="preserve">
          <source>See the list of event names at the end of this page. Any event can be defined as an event handler in your component.</source>
          <target state="translated">Vea la lista de nombres de eventos al final de esta página.Cualquier evento puede ser definido como un manejador de eventos en su componente.</target>
        </trans-unit>
        <trans-unit id="1a127955b9093eefeadddc3e86e6bc2ecfb11432" translate="yes" xml:space="preserve">
          <source>See {{#crossLink &quot;Ember.String/pluralize&quot;}}{{/crossLink}}</source>
          <target state="translated">Ver {{{##CrossLink &quot;Ember.String/pluralize&quot;}}{{{/crossLink}}</target>
        </trans-unit>
        <trans-unit id="b2ec09c4221cd9352fad5f335a19d089d3aff099" translate="yes" xml:space="preserve">
          <source>See {{#crossLink &quot;Ember.String/singularize&quot;}}{{/crossLink}}</source>
          <target state="translated">Ver {{{#crossLink &quot;Ember.String/singularize&quot;}}{{{/crossLink}}</target>
        </trans-unit>
        <trans-unit id="091a6847e80f8f6e58ab446255013d6e21fc3d12" translate="yes" xml:space="preserve">
          <source>Self-Closing Tags</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4908850b77074857fa2902c9a0c51ac951c3d066" translate="yes" xml:space="preserve">
          <source>Send an event. The execution of suspended listeners is skipped, and once listeners are removed. A listener without a target is executed on the passed object. If an array of actions is not passed, the actions stored on the passed object are invoked.</source>
          <target state="translated">Envía un evento.La ejecución de los oyentes suspendidos se salta,y una vez que los oyentes son removidos.Un oyente sin objetivo es ejecutado en el objeto pasado.Si no se pasa un conjunto de acciones,se invocan las acciones almacenadas en el objeto pasado.</target>
        </trans-unit>
        <trans-unit id="a7cbd3195b0b1848a603028087345561cbdb3c83" translate="yes" xml:space="preserve">
          <source>Sending Actions</source>
          <target state="translated">Envío de acciones</target>
        </trans-unit>
        <trans-unit id="090be3d6246540fa8c78341d0fd9ec8bb7d44ef7" translate="yes" xml:space="preserve">
          <source>Sending from the Console to the Inspector</source>
          <target state="translated">Enviando desde la consola al inspector</target>
        </trans-unit>
        <trans-unit id="064119347ce21be3830f42ad99fd305e6bb36ddb" translate="yes" xml:space="preserve">
          <source>Sending from the Inspector to the Console</source>
          <target state="translated">Envío del inspector a la consola</target>
        </trans-unit>
        <trans-unit id="37adf51f8e931f4ac6beffdc0bce4b8c9a345a4c" translate="yes" xml:space="preserve">
          <source>Sends a delete request for the record to the server.</source>
          <target state="translated">Envía una solicitud de eliminación del registro al servidor.</target>
        </trans-unit>
        <trans-unit id="291d83532f286c48f65ce13d9158d367234e5871" translate="yes" xml:space="preserve">
          <source>Sends an action to the router, which will delegate it to the currently active route hierarchy per the bubbling rules explained under &lt;code&gt;actions&lt;/code&gt;.</source>
          <target state="translated">Env&amp;iacute;a una acci&amp;oacute;n al enrutador, que la delegar&amp;aacute; en la jerarqu&amp;iacute;a de rutas actualmente activa seg&amp;uacute;n las reglas de propagaci&amp;oacute;n explicadas en &lt;code&gt;actions&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="21f60515d4413efa1948ac110388d426adab17c9" translate="yes" xml:space="preserve">
          <source>Serialize &lt;code&gt;belongsTo&lt;/code&gt; relationship when it is configured as an embedded object.</source>
          <target state="translated">Serializar la relaci&amp;oacute;n &lt;code&gt;belongsTo&lt;/code&gt; cuando se configura como un objeto incrustado.</target>
        </trans-unit>
        <trans-unit id="59bee72c1fd17c82da45c231f035a209dfdee94a" translate="yes" xml:space="preserve">
          <source>Serializer</source>
          <target state="translated">Serializer</target>
        </trans-unit>
        <trans-unit id="ba84cd3aab23d1d10e849506dac174ba63cacf16" translate="yes" xml:space="preserve">
          <source>Serializer Resolution</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77f5a897d372d976dbdf3ed3fd84a1f9fe2c636a" translate="yes" xml:space="preserve">
          <source>Serializes &lt;code&gt;hasMany&lt;/code&gt; relationships when it is configured as embedded objects.</source>
          <target state="translated">Serializa tiene &lt;code&gt;hasMany&lt;/code&gt; relaciones cuando se configura como objetos incrustados.</target>
        </trans-unit>
        <trans-unit id="859739a640dcccec7d3c89114d041ab46afff14a" translate="yes" xml:space="preserve">
          <source>Serializes the record and sends it to the server.</source>
          <target state="translated">Serializa el registro y lo envía al servidor.</target>
        </trans-unit>
        <trans-unit id="aa92b22d8e89b667210a07e5334e64f079da918f" translate="yes" xml:space="preserve">
          <source>Serializes the record update and sends it to the server.</source>
          <target state="translated">Serializa la actualización del registro y lo envía al servidor.</target>
        </trans-unit>
        <trans-unit id="761efa682a827fca2803f8da4a302dc39dc2208e" translate="yes" xml:space="preserve">
          <source>Serializing a &lt;code&gt;belongsTo&lt;/code&gt; relationship removes the property that refers to the parent record</source>
          <target state="translated">Serializar una relaci&amp;oacute;n &lt;code&gt;belongsTo&lt;/code&gt; elimina la propiedad que hace referencia al registro principal</target>
        </trans-unit>
        <trans-unit id="5fe4ca86767cc1bd91544bb1b9f91724e637ec8b" translate="yes" xml:space="preserve">
          <source>Serializing a &lt;code&gt;hasMany&lt;/code&gt; relationship does not remove the property that refers to the parent record.</source>
          <target state="translated">Serializar una relaci&amp;oacute;n &lt;code&gt;hasMany&lt;/code&gt; no elimina la propiedad que hace referencia al registro principal.</target>
        </trans-unit>
        <trans-unit id="b6798f213d4815c22490d46bda891a2bbd22a2a8" translate="yes" xml:space="preserve">
          <source>Serializing records</source>
          <target state="translated">Serialización de los registros</target>
        </trans-unit>
        <trans-unit id="01fe9a20a8fdeb0f312fdcea1363c6a939cf772b" translate="yes" xml:space="preserve">
          <source>Server-Side Rendering</source>
          <target state="translated">Renderización del lado del servidor</target>
        </trans-unit>
        <trans-unit id="d4b08fda9668f41846dc7fb238475372e5a87571" translate="yes" xml:space="preserve">
          <source>Server-Side Rendering (also known as FastBoot)</source>
          <target state="translated">Renderización del lado del servidor (también conocido como FastBoot)</target>
        </trans-unit>
        <trans-unit id="ddedf41976a8db9f179e56d77dad30a5828aa47a" translate="yes" xml:space="preserve">
          <source>Server-Side Resource Discovery</source>
          <target state="translated">Descubrimiento de recursos del lado del servidor</target>
        </trans-unit>
        <trans-unit id="626629d0773ba5b8e704de2a8cf4d1b2671d6966" translate="yes" xml:space="preserve">
          <source>Server-backed API calls that may not fit Ember Data.</source>
          <target state="translated">Llamadas a la API respaldadas por el servidor que pueden no encajar en Ember Data.</target>
        </trans-unit>
        <trans-unit id="3788673593a9fb3cb0da7a56e2684739ac286fa2" translate="yes" xml:space="preserve">
          <source>Server-sent events or notifications.</source>
          <target state="translated">Eventos o notificaciones enviados por el servidor.</target>
        </trans-unit>
        <trans-unit id="9b6a5da899565637a0947288637800a9aafb0780" translate="yes" xml:space="preserve">
          <source>ServerError</source>
          <target state="translated">ServerError</target>
        </trans-unit>
        <trans-unit id="acca64b83535b9a1dff37a13cd176f393be7c195" translate="yes" xml:space="preserve">
          <source>Servers</source>
          <target state="translated">Servers</target>
        </trans-unit>
        <trans-unit id="329cb8b6ba8c427be7c09b298295c655415c7ac9" translate="yes" xml:space="preserve">
          <source>Service</source>
          <target state="translated">Service</target>
        </trans-unit>
        <trans-unit id="24bd63c80b86894e4c67eb6439773461722ba2f2" translate="yes" xml:space="preserve">
          <source>Service injections and arguments are available in the constructor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cbd584046863bc7b753e57e8681a98a87f36f0f" translate="yes" xml:space="preserve">
          <source>Services</source>
          <target state="translated">Services</target>
        </trans-unit>
        <trans-unit id="8c95ce8ed53a712d7d11fe978a559e8aacdfb5cc" translate="yes" xml:space="preserve">
          <source>Services and Utilities</source>
          <target state="translated">Servicios y utilidades</target>
        </trans-unit>
        <trans-unit id="973e47a9c7779d6a3f292ac37ac9d79ba9c45893" translate="yes" xml:space="preserve">
          <source>Services are useful for features that require shared state or persistent connections. Example uses of services might include:</source>
          <target state="translated">Los servicios son útiles para las características que requieren un estado compartido o conexiones persistentes.Algunos ejemplos de uso de los servicios podrían ser</target>
        </trans-unit>
        <trans-unit id="44de33fce9e667d81467d696283b746a2b89ae0f" translate="yes" xml:space="preserve">
          <source>Services can be generated using Ember CLI's &lt;code&gt;service&lt;/code&gt; generator. For example, the following command will create the &lt;code&gt;ShoppingCart&lt;/code&gt; service:</source>
          <target state="translated">Los servicios se pueden generar utilizando el generador de &lt;code&gt;service&lt;/code&gt; Ember CLI . Por ejemplo, el siguiente comando crear&amp;aacute; el servicio &lt;code&gt;ShoppingCart&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="f28ef67c082d95db9b197a590c7d6ac777b73ad0" translate="yes" xml:space="preserve">
          <source>Services must extend the &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Service.html&quot;&gt;&lt;code&gt;Ember.Service&lt;/code&gt;&lt;/a&gt; base class:</source>
          <target state="translated">Los servicios deben ampliar la clase base &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Service.html&quot;&gt; &lt;code&gt;Ember.Service&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="05197f4ec7c1ead15af7cb4af2fab7e9ba449c55" translate="yes" xml:space="preserve">
          <source>Services must extend the &lt;a href=&quot;https://api.emberjs.com/ember/release/classes/Service&quot;&gt;&lt;code&gt;Service&lt;/code&gt;&lt;/a&gt; base class:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d8ded186c4b66ab76f84a5c45d66e048959d458" translate="yes" xml:space="preserve">
          <source>Services which can be injected into multiple classes, sharing functionality and state between them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca477a114f59f850145f1a7532f31375acde781f" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;EmberENV.FEATURES&lt;/code&gt; in your application's &lt;code&gt;config/environment.js&lt;/code&gt; file to enable canary features in your application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac2ee51eb0d899834a5e76d58a0d52b264a8975b" translate="yes" xml:space="preserve">
          <source>Set a list of properties on an object. These properties are set inside a single &lt;code&gt;beginPropertyChanges&lt;/code&gt; and &lt;code&gt;endPropertyChanges&lt;/code&gt; batch, so observers will be buffered.</source>
          <target state="translated">Establecer una lista de propiedades en un objeto. Estas propiedades se establecen dentro de un solo lote &lt;code&gt;beginPropertyChanges&lt;/code&gt; y &lt;code&gt;endPropertyChanges&lt;/code&gt; , por lo que los observadores se almacenar&amp;aacute;n en b&amp;uacute;fer.</target>
        </trans-unit>
        <trans-unit id="bb507d8cf4504dfd969277729f9d6cb3da94b46d" translate="yes" xml:space="preserve">
          <source>Set the value of a boolean property to the opposite of its current value.</source>
          <target state="translated">Poner el valor de una propiedad booleana al contrario de su valor actual.</target>
        </trans-unit>
        <trans-unit id="354b450dc637fea87122e449b4c6d64fd161d127" translate="yes" xml:space="preserve">
          <source>Set the value of a property to the current value minus some amount.</source>
          <target state="translated">Establece el valor de una propiedad al valor actual menos alguna cantidad.</target>
        </trans-unit>
        <trans-unit id="0a474206fc22982beb1518f159723d7d5b1a7bd6" translate="yes" xml:space="preserve">
          <source>Set the value of a property to the current value plus some amount.</source>
          <target state="translated">Establece el valor de una propiedad al valor actual más alguna cantidad.</target>
        </trans-unit>
        <trans-unit id="e42433abf46583349e14e913f6b0bddd60fc0563" translate="yes" xml:space="preserve">
          <source>Set this to provide an alternate class to &lt;code&gt;DefaultResolver&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="022856defe2402ee0a7880769473d89d1b0fd118" translate="yes" xml:space="preserve">
          <source>Set this to provide an alternate class to &lt;code&gt;Ember.DefaultResolver&lt;/code&gt;</source>
          <target state="translated">Establezca esto para proporcionar una clase alternativa a &lt;code&gt;Ember.DefaultResolver&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b2871131570de12ffc4fe0e0fa49f2aa7a81352e" translate="yes" xml:space="preserve">
          <source>Sets a list of properties at once. These properties are set inside a single &lt;code&gt;beginPropertyChanges&lt;/code&gt; and &lt;code&gt;endPropertyChanges&lt;/code&gt; batch, so observers will be buffered.</source>
          <target state="translated">Establece una lista de propiedades a la vez. Estas propiedades se establecen dentro de un solo lote &lt;code&gt;beginPropertyChanges&lt;/code&gt; y &lt;code&gt;endPropertyChanges&lt;/code&gt; , por lo que los observadores se almacenar&amp;aacute;n en b&amp;uacute;fer.</target>
        </trans-unit>
        <trans-unit id="2478dff276ae3c77d7f495b39bbafe7dedf46174" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;disabled&lt;/code&gt; attribute of the &lt;code&gt;Checkbox&lt;/code&gt;'s element</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e54a99e025defe6d81185356e0087e36fb02c41f" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;rel&lt;/code&gt; attribute of the &lt;code&gt;LinkComponent&lt;/code&gt;'s HTML element.</source>
          <target state="translated">Establece el atributo &lt;code&gt;rel&lt;/code&gt; del elemento HTML de &lt;code&gt;LinkComponent&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d5e1f88540ae2f1f6c34ad87101fb61aaa2e4704" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;tabindex&lt;/code&gt; attribute of the &lt;code&gt;LinkComponent&lt;/code&gt;'s HTML element.</source>
          <target state="translated">Establece el atributo &lt;code&gt;tabindex&lt;/code&gt; del elemento HTML de &lt;code&gt;LinkComponent&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2bdac2845cc69ea660701ca0222c09a0c44c26f0" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;target&lt;/code&gt; attribute of the &lt;code&gt;LinkComponent&lt;/code&gt;'s HTML element.</source>
          <target state="translated">Establece el atributo de &lt;code&gt;target&lt;/code&gt; del elemento HTML de &lt;code&gt;LinkComponent&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fcf346b3d86476123ef32bd696299134f1d94520" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;title&lt;/code&gt; attribute of the &lt;code&gt;LinkComponent&lt;/code&gt;'s HTML element.</source>
          <target state="translated">Establece el atributo de &lt;code&gt;title&lt;/code&gt; del elemento HTML de &lt;code&gt;LinkComponent&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="51b9025622045e7bea6fb4165ada413012de1269" translate="yes" xml:space="preserve">
          <source>Sets the URL-changing method to be employed at the end of a successful transition. By default, a new Transition will just use &lt;code&gt;updateURL&lt;/code&gt;, but passing 'replace' to this method will cause the URL to update using 'replaceWith' instead. Omitting a parameter will disable the URL change, allowing for transitions that don't update the URL at completion (this is also used for handleURL, since the URL has already changed before the transition took place).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b72787353f86d425923f841fb4aef6f74ac404b9" translate="yes" xml:space="preserve">
          <source>Sets the dependent keys on this computed property. Pass any number of arguments containing key paths that this computed property depends on.</source>
          <target state="translated">Establece las claves dependientes de esta propiedad computarizada.Pasa cualquier número de argumentos que contengan las claves de las que depende esta propiedad calculada.</target>
        </trans-unit>
        <trans-unit id="2f675f90939d774f421170557b095c97251f63f9" translate="yes" xml:space="preserve">
          <source>Sets the helper manager for an object or function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dcc21cc9416b36d9a48400e5dcfa0b900385d0e" translate="yes" xml:space="preserve">
          <source>Sets the provided key or path to the value.</source>
          <target state="translated">Establece la clave o ruta proporcionada al valor.</target>
        </trans-unit>
        <trans-unit id="871a5db89a47b1c8ac126c47ae45dbaed6801707" translate="yes" xml:space="preserve">
          <source>Sets the value of a property on an object, respecting computed properties and notifying observers and other listeners of the change. If the property is not defined but the object implements the &lt;code&gt;setUnknownProperty&lt;/code&gt; method then that will be invoked as well.</source>
          <target state="translated">Establece el valor de una propiedad en un objeto, respetando las propiedades calculadas y notificando a los observadores y otros oyentes del cambio. Si la propiedad no est&amp;aacute; definida pero el objeto implementa el m&amp;eacute;todo &lt;code&gt;setUnknownProperty&lt;/code&gt; , entonces tambi&amp;eacute;n se invocar&amp;aacute;.</target>
        </trans-unit>
        <trans-unit id="4d62cb5e39e4fa575e3defe17489ed6fd18a914c" translate="yes" xml:space="preserve">
          <source>Sets the value of a property on an object, respecting computed properties and notifying observers and other listeners of the change. If the specified property is not defined on the object and the object implements the &lt;code&gt;setUnknownProperty&lt;/code&gt; method, then instead of setting the value of the property on the object, its &lt;code&gt;setUnknownProperty&lt;/code&gt; handler will be invoked with the two parameters &lt;code&gt;keyName&lt;/code&gt; and &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="290a8a4289954bb2a5ee87f2331ca5e9d2142b2b" translate="yes" xml:space="preserve">
          <source>Sets the value on the named property for each member. This is more ergonomic than using other methods defined on this helper. If the object implements Ember.Observable, the value will be changed to &lt;code&gt;set(),&lt;/code&gt; otherwise it will be set directly. &lt;code&gt;null&lt;/code&gt; objects are skipped.</source>
          <target state="translated">Establece el valor de la propiedad nombrada para cada miembro. Esto es m&amp;aacute;s ergon&amp;oacute;mico que usar otros m&amp;eacute;todos definidos en este ayudante. Si el objeto implementa Ember.Observable, el valor se cambiar&amp;aacute; a &lt;code&gt;set(),&lt;/code&gt; contrario se establecer&amp;aacute; directamente. se omiten los objetos &lt;code&gt;null&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="742c211cf05d64e5ad624ceb43a028370924a427" translate="yes" xml:space="preserve">
          <source>Sets the value on the named property for each member. This is more ergonomic than using other methods defined on this helper. If the object implements Observable, the value will be changed to &lt;code&gt;set(),&lt;/code&gt; otherwise it will be set directly. &lt;code&gt;null&lt;/code&gt; objects are skipped.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bb3a4f26234490d92af65a4b7728511ce022d83" translate="yes" xml:space="preserve">
          <source>Setting &lt;code&gt;serialize&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; enforces serialization for hasMany relationships even if it's neither a many-to-many nor many-to-none relationship.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b425d7e560cd8c0761f98a652da8de1351923229" translate="yes" xml:space="preserve">
          <source>Setting &lt;code&gt;sortQueryParams&lt;/code&gt; to a falsey value will respect the original order.</source>
          <target state="translated">Establecer &lt;code&gt;sortQueryParams&lt;/code&gt; en un valor falso respetar&amp;aacute; el orden original.</target>
        </trans-unit>
        <trans-unit id="da33b396a5b97cdc6b9f02bcd176c913528421e0" translate="yes" xml:space="preserve">
          <source>Setting Computed Properties</source>
          <target state="translated">Configuración de las propiedades computarizadas</target>
        </trans-unit>
        <trans-unit id="b2159831f0f013e12890235b72b76c9ed8107ba6" translate="yes" xml:space="preserve">
          <source>Setting any dependent property will propagate changes through any computed properties that depend on them, all the way down the chain of computed properties you've created.</source>
          <target state="translated">Establecer cualquier propiedad dependiente propagará los cambios a través de cualquier propiedad calculada que dependa de ellos,a lo largo de toda la cadena de propiedades calculadas que hayas creado.</target>
        </trans-unit>
        <trans-unit id="4c811f11c80da676754851d73427229f494eb7e2" translate="yes" xml:space="preserve">
          <source>Setting attributes on &lt;code&gt;&amp;lt;Input&amp;gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3caba60e55b03843eed07241fa6a00961df6443b" translate="yes" xml:space="preserve">
          <source>Setting attributes on &lt;code&gt;&amp;lt;Textarea&amp;gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5789f3a613624c39e98b0a04a128ab506fbe4ddc" translate="yes" xml:space="preserve">
          <source>Setting coalesceFindRequests to &lt;code&gt;true&lt;/code&gt; also works for &lt;code&gt;store.find&lt;/code&gt; requests and &lt;code&gt;belongsTo&lt;/code&gt; relationships accessed within the same runloop. If you set &lt;code&gt;coalesceFindRequests: true&lt;/code&gt;</source>
          <target state="translated">Establecer coalesceFindRequests en &lt;code&gt;true&lt;/code&gt; tambi&amp;eacute;n funciona para &lt;code&gt;store.find&lt;/code&gt; solicitudes &lt;code&gt;belongsTo&lt;/code&gt; y las relaciones pertenecen a las que se accede dentro del mismo runloop. Si establece &lt;code&gt;coalesceFindRequests: true&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e771b554952852c7a0bf2e49bb60a2514950d6a7" translate="yes" xml:space="preserve">
          <source>Setting properties on an HTML element, on the other hand, is a different story, because there's no way to set a property using HTML syntax.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afe29c914c9d854075bf9ebee96af7585fe24770" translate="yes" xml:space="preserve">
          <source>Setting properties on the component in &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Component.html#event_didInsertElement&quot;&gt;&lt;code&gt;didInsertElement()&lt;/code&gt;&lt;/a&gt; triggers a re-render, and for performance reasons, is not allowed.</source>
          <target state="translated">Establecer propiedades en el componente en &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Component.html#event_didInsertElement&quot;&gt; &lt;code&gt;didInsertElement()&lt;/code&gt; &lt;/a&gt; desencadena una nueva renderizaci&amp;oacute;n y, por razones de rendimiento, no est&amp;aacute; permitido.</target>
        </trans-unit>
        <trans-unit id="f02aee210f24787a1e623ad68c0d1a1b060d3aeb" translate="yes" xml:space="preserve">
          <source>Setting query-params</source>
          <target state="translated">Estableciendo parámetros de consulta</target>
        </trans-unit>
        <trans-unit id="3d7cc07cf937737b1517c6bf9374d4cc18998479" translate="yes" xml:space="preserve">
          <source>Setting up Data for the Nested Detail Route</source>
          <target state="translated">Configurando los datos para la ruta de los detalles anidados</target>
        </trans-unit>
        <trans-unit id="04b56454c3e76a73bcf804097a9d07a7e2424bf3" translate="yes" xml:space="preserve">
          <source>Setup callbacks to be fired when the test helpers are injected into your application.</source>
          <target state="translated">Configure las llamadas de retorno para que se disparen cuando los ayudantes de la prueba se inyecten en su aplicación.</target>
        </trans-unit>
        <trans-unit id="7fd361ad8b078a558ea7b7da0dad0bbe6c028891" translate="yes" xml:space="preserve">
          <source>Several of the &lt;a href=&quot;http://emberjs.com/api/classes/Ember.computed.html&quot;&gt;Ember.computed&lt;/a&gt; macros utilize the &lt;code&gt;[]&lt;/code&gt; key to implement common use-cases. For instance, to create a computed property that mapped properties from an array, you could use &lt;a href=&quot;http://emberjs.com/api/classes/Ember.computed.html#method_map&quot;&gt;Ember.computed.map&lt;/a&gt; or build the computed property yourself:</source>
          <target state="translated">Varias de las macros &lt;a href=&quot;http://emberjs.com/api/classes/Ember.computed.html&quot;&gt;calculadas&lt;/a&gt; de Ember utilizan la tecla &lt;code&gt;[]&lt;/code&gt; para implementar casos de uso comunes. Por ejemplo, para crear una propiedad calculada que asigne propiedades a partir de una matriz, puede usar &lt;a href=&quot;http://emberjs.com/api/classes/Ember.computed.html#method_map&quot;&gt;Ember.computed.map&lt;/a&gt; o construir la propiedad calculada usted mismo:</target>
        </trans-unit>
        <trans-unit id="56671d09d11f94a0111d047a53973e69ddd5107c" translate="yes" xml:space="preserve">
          <source>Shadow DOM</source>
          <target state="translated">Sombra DOM</target>
        </trans-unit>
        <trans-unit id="a07efaea553500b80c6b1e25c2a1ad7f85b92746" translate="yes" xml:space="preserve">
          <source>Sharing Component Data with its Wrapped Content</source>
          <target state="translated">Compartir los datos de los componentes con su contenido envuelto</target>
        </trans-unit>
        <trans-unit id="5765ccb23e0fb8bade85df4ffb0d4efcfedb02e5" translate="yes" xml:space="preserve">
          <source>Shift an object from start of array or nil if none are left. Works just like &lt;code&gt;shift()&lt;/code&gt; but it is KVO-compliant.</source>
          <target state="translated">Cambia un objeto desde el inicio de la matriz o cero si no queda ninguno. Funciona igual que &lt;code&gt;shift()&lt;/code&gt; pero es compatible con KVO.</target>
        </trans-unit>
        <trans-unit id="bcb7f8e893a6eec69601e5f12cb167564cd7ea66" translate="yes" xml:space="preserve">
          <source>Should I use controllers in my application? I've heard they're going away!</source>
          <target state="translated">¿Debo usar controladores en mi aplicación? ¡He oído que se van!</target>
        </trans-unit>
        <trans-unit id="beeea36abf2de6573612e2054086e5dc5b962f2d" translate="yes" xml:space="preserve">
          <source>Should actually replace the specified objects on the content array. You can override this method in subclasses to transform the content item into something new.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c4c063ccc2f6265cd6469510436e8100e2e23a9" translate="yes" xml:space="preserve">
          <source>Should actually retrieve the object at the specified index from the content. You can override this method in subclasses to transform the content item to something new.</source>
          <target state="translated">Debería realmente recuperar el objeto en el índice especificado del contenido.Puede anular este método en subclases para transformar el objeto de contenido en algo nuevo.</target>
        </trans-unit>
        <trans-unit id="ce6b3b9a9ec11b6f601d2c791d118fb24339f616" translate="yes" xml:space="preserve">
          <source>Should cause Ember to rerender if and when they change</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="283dd7128cd25f308270c83f4e6274499295d261" translate="yes" xml:space="preserve">
          <source>Should we use controllers in my application? I've heard they're going away!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3cbebe0c33c59b226e4d26667ceeeb607570eb4" translate="yes" xml:space="preserve">
          <source>Show more details for a selected rental</source>
          <target state="translated">Mostrar más detalles para un alquiler seleccionado</target>
        </trans-unit>
        <trans-unit id="63295e39bc7e2edd921e15de80cf52a0162dce6f" translate="yes" xml:space="preserve">
          <source>Show rentals on the home page</source>
          <target state="translated">Mostrar los alquileres en la página de inicio</target>
        </trans-unit>
        <trans-unit id="a6df6bc849e9ed5bad5bd1b761e2d78888c983b9" translate="yes" xml:space="preserve">
          <source>Showing a property</source>
          <target state="translated">Mostrando una propiedad</target>
        </trans-unit>
        <trans-unit id="5feabe6b60582bbf4b541103f30632fee297466c" translate="yes" xml:space="preserve">
          <source>Sideloaded Data</source>
          <target state="translated">Datos de carga lateral</target>
        </trans-unit>
        <trans-unit id="f5028052c614a640caa81611333680ece76b35e0" translate="yes" xml:space="preserve">
          <source>Silencing Deprecation Warnings During Compile</source>
          <target state="translated">Silenciar las advertencias de depredación durante la compilación</target>
        </trans-unit>
        <trans-unit id="41b23908c12c4f5949e08b4e02f7c021d977337b" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;transitionTo&lt;/code&gt;, but instead of adding the destination to the browser's URL history, it replaces the entry for the current route. When the user clicks the &quot;back&quot; button in the browser, there will be fewer steps. This is most commonly used to manage redirects in a way that does not cause confusing additions to the user's browsing history.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af61b24dae3801016bbf21366ede7ddbe142922e" translate="yes" xml:space="preserve">
          <source>Similar to how the default &lt;code&gt;loading&lt;/code&gt; event handlers are implemented, the default &lt;code&gt;error&lt;/code&gt; handlers will look for an appropriate error substate to enter, if one can be found.</source>
          <target state="translated">De manera similar a c&amp;oacute;mo se implementan los controladores de eventos de &lt;code&gt;loading&lt;/code&gt; predeterminados , los controladores de &lt;code&gt;error&lt;/code&gt; es predeterminados buscar&amp;aacute;n un subestado de error apropiado para ingresar, si se puede encontrar uno.</target>
        </trans-unit>
        <trans-unit id="717acf41849b10523800fa58b23cc2b20a9ef6da" translate="yes" xml:space="preserve">
          <source>Similar to map, this specialized function returns the value of the named property on all items in the enumeration.</source>
          <target state="translated">De manera similar al mapa,esta función especializada devuelve el valor de la propiedad nombrada en todos los artículos de la enumeración.</target>
        </trans-unit>
        <trans-unit id="74e714802d7db3b86e903677715205f93a921c22" translate="yes" xml:space="preserve">
          <source>Similarly, if your backend store provides data in a format other than JSON API, you can use the &lt;a href=&quot;http://emberjs.com/api/data/classes/DS.JSONAPISerializer.html#method_normalizeResponse&quot;&gt;&lt;code&gt;normalizeResponse()&lt;/code&gt;&lt;/a&gt; hook. Using the same example as above, if the server provides data that looks like:</source>
          <target state="translated">De manera similar, si su tienda de backend proporciona datos en un formato que no sea JSON API, puede usar el &lt;a href=&quot;http://emberjs.com/api/data/classes/DS.JSONAPISerializer.html#method_normalizeResponse&quot;&gt; &lt;code&gt;normalizeResponse()&lt;/code&gt; &lt;/a&gt; . Utilizando el mismo ejemplo anterior, si el servidor proporciona datos que se parecen a:</target>
        </trans-unit>
        <trans-unit id="3618bd19508f0430379f994f5efcc9f7fdc1d229" translate="yes" xml:space="preserve">
          <source>Similarly, if your backend store provides data in a format other than JSON:API, you can use the &lt;a href=&quot;https://api.emberjs.com/ember-data/release/classes/JSONAPISerializer/methods#normalizeResponse&quot;&gt;&lt;code&gt;normalizeResponse()&lt;/code&gt;&lt;/a&gt; hook. Using the same example as above, if the server provides data that looks like:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5ba23a2acdb58eae654126aeb02c16cfa736653" translate="yes" xml:space="preserve">
          <source>Similarly, in response to a &lt;code&gt;GET&lt;/code&gt; request for &lt;code&gt;/posts&lt;/code&gt;, the JSON should look like this:</source>
          <target state="translated">De manera similar, en respuesta a una solicitud &lt;code&gt;GET&lt;/code&gt; de &lt;code&gt;/posts&lt;/code&gt; , el JSON deber&amp;iacute;a verse as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="c15fa4b758d35cc97d9959bcc45edd294156d605" translate="yes" xml:space="preserve">
          <source>Simple Example</source>
          <target state="translated">Ejemplo simple</target>
        </trans-unit>
        <trans-unit id="5d072a0f490db522bd703110a84349b2f76d1d40" translate="yes" xml:space="preserve">
          <source>Simple Transition Example</source>
          <target state="translated">Ejemplo de transición simple</target>
        </trans-unit>
        <trans-unit id="38e622f586624128158ede91d1097cbecc68bbfa" translate="yes" xml:space="preserve">
          <source>Simply add &lt;code&gt;await pauseTest();&lt;/code&gt; to your test code, then save. When the test reaches this line, it will pause, allowing you to inspect the state of your application. When you are done, type &lt;code&gt;resumeTest()&lt;/code&gt; in the browser console to continue the test.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b4ed4e4198e38ae80e5b6a6af9aeb8f248f3233" translate="yes" xml:space="preserve">
          <source>Simply converts the enumerable into a genuine array. The order is not guaranteed. Corresponds to the method implemented by Prototype.</source>
          <target state="translated">Simplemente convierte lo enumerable en un conjunto genuino.El pedido no está garantizado.Corresponde al método implementado por Prototipo.</target>
        </trans-unit>
        <trans-unit id="58e976acf9398464f5580a302f815169000d3a0c" translate="yes" xml:space="preserve">
          <source>Simply converts the object into a genuine array. The order is not guaranteed. Corresponds to the method implemented by Prototype.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe202f68e7bb9a71a693a3787ee7684995266c8a" translate="yes" xml:space="preserve">
          <source>Simply define a template called &lt;code&gt;loading&lt;/code&gt; (and optionally a corresponding route) that Ember will transition to. The intermediate transition into the loading substate happens immediately (synchronously), the URL won't be updated, and, unlike other transitions, the currently active transition won't be aborted.</source>
          <target state="translated">Simplemente defina una plantilla llamada &lt;code&gt;loading&lt;/code&gt; (y opcionalmente una ruta correspondiente) a la que Ember har&amp;aacute; la transici&amp;oacute;n. La transici&amp;oacute;n intermedia al subestado de carga ocurre inmediatamente (sincr&amp;oacute;nicamente), la URL no se actualizar&amp;aacute; y, a diferencia de otras transiciones, la transici&amp;oacute;n actualmente activa no se cancelar&amp;aacute;.</target>
        </trans-unit>
        <trans-unit id="97cf625e23a87e8fb775cd15dcb177e76da7d713" translate="yes" xml:space="preserve">
          <source>Simulates a key event type, e.g. &lt;code&gt;keypress&lt;/code&gt;, &lt;code&gt;keydown&lt;/code&gt;, &lt;code&gt;keyup&lt;/code&gt; with the desired keyCode on element found by the selector.</source>
          <target state="translated">Simula un tipo de evento clave, por ejemplo &lt;code&gt;keypress&lt;/code&gt; , &lt;code&gt;keydown&lt;/code&gt; , &lt;code&gt;keyup&lt;/code&gt; con el c&amp;oacute;digo clave deseado en elemento que se encuentra por el selector.</target>
        </trans-unit>
        <trans-unit id="9d573de332969d08498e24e616e22a931b37eb39" translate="yes" xml:space="preserve">
          <source>Simulates a key event, e.g. &lt;code&gt;keypress&lt;/code&gt;, &lt;code&gt;keydown&lt;/code&gt;, &lt;code&gt;keyup&lt;/code&gt; with the desired keyCode Example:</source>
          <target state="translated">Simula un evento clave, por ejemplo &lt;code&gt;keypress&lt;/code&gt; , &lt;code&gt;keydown&lt;/code&gt; , &lt;code&gt;keyup&lt;/code&gt; con el Ejemplo keyCode deseada:</target>
        </trans-unit>
        <trans-unit id="5ff3adcfa93d61b2bd68be16bf0530824ab668cd" translate="yes" xml:space="preserve">
          <source>Simulating API requests</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe22422d207cd0772ccfa88aaa36392c7d87ecf6" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;didUpdateAttrs&lt;/code&gt; is called prior to rerender, you can use this hook to execute code when specific attributes are changed. This hook can be an effective alternative to an observer, as it will run prior to a re-render, but after an attribute has changed.</source>
          <target state="translated">Dado que &lt;code&gt;didUpdateAttrs&lt;/code&gt; se llama antes de volver a renderizar, puede utilizar este enlace para ejecutar c&amp;oacute;digo cuando se cambian atributos espec&amp;iacute;ficos. Este gancho puede ser una alternativa eficaz para un observador, ya que se ejecutar&amp;aacute; antes de volver a renderizar, pero despu&amp;eacute;s de que un atributo haya cambiado.</target>
        </trans-unit>
        <trans-unit id="f64ef341b1692fc1922e959a50c6efb02dd93401" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;srcObject&lt;/code&gt; is a property and not an HTML attribute, you can use the &lt;code&gt;prop&lt;/code&gt; element modifier from &lt;a href=&quot;https://www.npmjs.com/package/ember-prop-modifier&quot;&gt;ember-prop-modifier&lt;/a&gt; like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b527d855f262ec89fbcbd6c18de1d551d43311d9" translate="yes" xml:space="preserve">
          <source>Since Ember addons are npm packages, &lt;code&gt;ember install&lt;/code&gt; installs them in the &lt;code&gt;node_modules&lt;/code&gt; directory, and makes an entry in &lt;code&gt;package.json&lt;/code&gt;. Be sure to restart your server after the addon has installed successfully. Restarting the server will incorporate the new CSS and refreshing the browser window will give you this:</source>
          <target state="translated">Dado que los complementos de Ember son paquetes npm, &lt;code&gt;ember install&lt;/code&gt; los instala en el directorio &lt;code&gt;node_modules&lt;/code&gt; y realiza una entrada en &lt;code&gt;package.json&lt;/code&gt; . Aseg&amp;uacute;rese de reiniciar su servidor despu&amp;eacute;s de que el complemento se haya instalado correctamente. Reiniciar el servidor incorporar&amp;aacute; el nuevo CSS y actualizar la ventana del navegador le dar&amp;aacute; esto:</target>
        </trans-unit>
        <trans-unit id="ec8081d027ecc0077fdd772e1c50ff82e993f556" translate="yes" xml:space="preserve">
          <source>Since Ember is a template-oriented framework, not all developers need to use JavaScript when working on Ember apps. Some developers may be more focused on the structure of an app's templates, its styles, or the accessibility of an app. However, it's good to have some general knowledge of JavaScript for the places where it is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5760823c11d76bb4f0f8aa397fbe539249ff2741" translate="yes" xml:space="preserve">
          <source>Since a JSON API Document can have meta defined in multiple locations you can use the specific serializer hooks if you need to customize the meta.</source>
          <target state="translated">Dado que un documento de la API de JSON puede tener meta definida en múltiples lugares,puede utilizar los ganchos específicos del serializador si necesita personalizar la meta.</target>
        </trans-unit>
        <trans-unit id="a3a256154d2dce95ced059699c91ae1f2f5c9d2c" translate="yes" xml:space="preserve">
          <source>Since a route's &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Route.html#method_beforeModel&quot;&gt;&lt;code&gt;beforeModel()&lt;/code&gt;&lt;/a&gt; executes before the &lt;code&gt;model()&lt;/code&gt; hook, it's a good place to do a redirect if you don't need any information that is contained in the model.</source>
          <target state="translated">Dado que el &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Route.html#method_beforeModel&quot;&gt; &lt;code&gt;beforeModel()&lt;/code&gt; &lt;/a&gt; una ruta se ejecuta antes que el hook &lt;code&gt;model()&lt;/code&gt; , es un buen lugar para hacer una redirecci&amp;oacute;n si no necesita ninguna informaci&amp;oacute;n contenida en el modelo.</target>
        </trans-unit>
        <trans-unit id="682b1a98a4f99c8285fdf96f23e6c200bb6255b0" translate="yes" xml:space="preserve">
          <source>Since a route's &lt;a href=&quot;https://api.emberjs.com/ember/release/classes/Route/methods#beforeModel&quot;&gt;&lt;code&gt;beforeModel()&lt;/code&gt;&lt;/a&gt; executes before the &lt;code&gt;model()&lt;/code&gt; hook, it's a good place to do a redirect if you don't need any information that is contained in the model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1df2b7cd90ba8966b9e8733c80dc430ec4b6a752" translate="yes" xml:space="preserve">
          <source>Since our component is expecting the filter process to be asynchronous, we return promises from our filter, using &lt;a href=&quot;http://emberjs.com/api/classes/RSVP.html&quot;&gt;Ember's RSVP library&lt;/a&gt;.</source>
          <target state="translated">Dado que nuestro componente espera que el proceso de filtrado sea asincr&amp;oacute;nico, devolvemos las promesas de nuestro filtro, utilizando &lt;a href=&quot;http://emberjs.com/api/classes/RSVP.html&quot;&gt;la biblioteca RSVP de Ember&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="410a75600d988e5e0052e587fd06ad0d2fe20811" translate="yes" xml:space="preserve">
          <source>Since our data is hard-coded in Mirage, we know that there is only one rental with a city name of &quot;Seattle&quot;, so we assert that the number of listings is one and that the location it displays is named, &quot;Seattle&quot;.</source>
          <target state="translated">Como nuestros datos están codificados en el Mirage,sabemos que sólo hay un alquiler con el nombre de la ciudad de &quot;Seattle&quot;,por lo que afirmamos que el número de listados es uno y que la ubicación que muestra se llama &quot;Seattle&quot;.</target>
        </trans-unit>
        <trans-unit id="cd893f3a53047516be9e73d4b5f5e2369b6477ff" translate="yes" xml:space="preserve">
          <source>Since tests are a core part of the Ember framework and your development cycle, we will dedicate several sections to learning how to write tests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba722444287b7c4015475cc81a6d6d752afc68bd" translate="yes" xml:space="preserve">
          <source>Since the &lt;code&gt;didReceiveAttrs&lt;/code&gt; hook is called every time a component's attributes are updated whether on render or re-render, you can use the hook to effectively act as an observer, ensuring code is executed every time an attribute changes.</source>
          <target state="translated">Dado que el gancho &lt;code&gt;didReceiveAttrs&lt;/code&gt; se llama cada vez que se actualizan los atributos de un componente, ya sea al renderizar o volver a renderizar, puede utilizar el gancho para actuar eficazmente como un observador, asegurando que el c&amp;oacute;digo se ejecute cada vez que cambie un atributo.</target>
        </trans-unit>
        <trans-unit id="a20cf75b3f9d9576789e92d06b30e1f775773a29" translate="yes" xml:space="preserve">
          <source>Since the &lt;code&gt;model&lt;/code&gt; hook is Promise-aware, it is great for making API requests (using tools like &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API&quot;&gt;fetch&lt;/a&gt;) and returning the results.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f47663319ab899455b89bcb7770d1bba128290a" translate="yes" xml:space="preserve">
          <source>Since the scientist route is nested under the application route, Ember will render its content inside the application route template's &lt;code&gt;{{outlet}}&lt;/code&gt; directive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28d7c278a30e6ec4d4f3023b775fa6840cb84e97" translate="yes" xml:space="preserve">
          <source>Since the specific &lt;code&gt;id&lt;/code&gt; of the &lt;code&gt;user&lt;/code&gt; is not known beforehand, we can use &lt;code&gt;queryRecord&lt;/code&gt; to get the user:</source>
          <target state="translated">Dado que la &lt;code&gt;id&lt;/code&gt; entificaci&amp;oacute;n espec&amp;iacute;fica del &lt;code&gt;user&lt;/code&gt; no se conoce de antemano, podemos usar &lt;code&gt;queryRecord&lt;/code&gt; para obtener el usuario:</target>
        </trans-unit>
        <trans-unit id="fb26b8bc3ae369feedef6c08efb8cf5ba34752ca" translate="yes" xml:space="preserve">
          <source>Since the title is just the &lt;code&gt;@username&lt;/code&gt; plus some extra stuff, we can replace &lt;code&gt;@avatarTitle&lt;/code&gt; by &lt;em&gt;interpolating&lt;/em&gt; the &lt;code&gt;@username&lt;/code&gt; argument in a string literal passed to &lt;code&gt;&amp;lt;Message::Avatar&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51f0b4a52b8cebee35dc789d53b13ace54ffb771" translate="yes" xml:space="preserve">
          <source>Since there is no access to jQuery in the non-browser environment, you must also specify a DOM &lt;code&gt;Element&lt;/code&gt; object in the same &lt;code&gt;document&lt;/code&gt; for the &lt;code&gt;rootElement&lt;/code&gt; option (as opposed to a selector string like &lt;code&gt;&quot;body&quot;&lt;/code&gt;).</source>
          <target state="translated">Dado que no hay acceso a jQuery en el entorno sin navegador, tambi&amp;eacute;n debe especificar un objeto &lt;code&gt;Element&lt;/code&gt; o DOM en el mismo &lt;code&gt;document&lt;/code&gt; o para la opci&amp;oacute;n &lt;code&gt;rootElement&lt;/code&gt; (a diferencia de una cadena de selecci&amp;oacute;n como &lt;code&gt;&quot;body&quot;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="bd76475c68e526debe88fcdc606730652138849e" translate="yes" xml:space="preserve">
          <source>Since we added &lt;code&gt;:rental_id&lt;/code&gt; to the &lt;code&gt;show&lt;/code&gt; path in our router, &lt;code&gt;rental_id&lt;/code&gt; is now available in our &lt;code&gt;model&lt;/code&gt; hook. When we call &lt;code&gt;this.get('store').findRecord('rental', params.rental_id)&lt;/code&gt;, Ember Data queries &lt;code&gt;/rentals/our-id&lt;/code&gt; using a HTTP GET request (&lt;a href=&quot;https://guides.emberjs.com/models/&quot;&gt;learn more about that here&lt;/a&gt;).</source>
          <target state="translated">Desde que agregamos &lt;code&gt;:rental_id&lt;/code&gt; a la ruta &lt;code&gt;show&lt;/code&gt; en nuestro enrutador, &lt;code&gt;rental_id&lt;/code&gt; ahora est&amp;aacute; disponible en nuestro &lt;code&gt;model&lt;/code&gt; o de gancho. Cuando llamamos &lt;code&gt;this.get('store').findRecord('rental', params.rental_id)&lt;/code&gt; , Ember Data queries &lt;code&gt;/rentals/our-id&lt;/code&gt; usando una solicitud HTTP GET ( &lt;a href=&quot;https://guides.emberjs.com/models/&quot;&gt;aprende m&amp;aacute;s sobre eso aqu&amp;iacute;&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="a193b3400008fcdd68f61cf30910ac15e02de1ad" translate="yes" xml:space="preserve">
          <source>Since we have already set up Ember Mirage in our development environment, Mirage will return the data we requested without actually making a network request.</source>
          <target state="translated">Como ya hemos establecido Ember Mirage en nuestro entorno de desarrollo,Mirage devolverá los datos que hemos solicitado sin hacer una solicitud de red.</target>
        </trans-unit>
        <trans-unit id="d50f255275c91b6d41ca18a9a609fd25ba369850" translate="yes" xml:space="preserve">
          <source>Since we haven't added any functionality to our application yet, we'll use this first test to get started on running tests in our app.</source>
          <target state="translated">Como aún no hemos añadido ninguna funcionalidad a nuestra aplicación,usaremos esta primera prueba para empezar a ejecutar pruebas en nuestra aplicación.</target>
        </trans-unit>
        <trans-unit id="59ca8024809d59f43c02b2a1ec4a73e4e2d23ac4" translate="yes" xml:space="preserve">
          <source>Since we want to remove this namespace, we can define a serializer for the application that will remove &quot;blog/&quot; from the payload key whenver it's encountered by Ember Data:</source>
          <target state="translated">Como queremos eliminar este espacio de nombres,podemos definir un serializador para la aplicación que eliminará el &quot;blog/&quot; de la clave de carga cuando sea encontrado por Ember Data:</target>
        </trans-unit>
        <trans-unit id="36cf3d73436a3652e530541299f44a225f1e4f9e" translate="yes" xml:space="preserve">
          <source>Since you're writing an HTML template, you can use dynamic substitution inside of an attribute's value; whenever the value changes, the attribute will change.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea807664a1d8b2ab5af2d6a9b45e6b93f54d047b" translate="yes" xml:space="preserve">
          <source>Since your app is made up of multiple components, you want to ensure that each is correct before testing them as a group. If a component is reusable, you want to guarantee that it works for all (if not, many) permutations of &lt;a href=&quot;https://guides.emberjs.com/components/component-arguments-and-html-attributes/&quot;&gt;arguments&lt;/a&gt; and &lt;a href=&quot;https://guides.emberjs.com/components/component-state-and-actions/&quot;&gt;actions&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4434cedbc25a9b21d7d06d3713a6484879933703" translate="yes" xml:space="preserve">
          <source>Since:</source>
          <target state="translated">Since:</target>
        </trans-unit>
        <trans-unit id="aea64bd0a70c382637df038e21dc5f4ef10a121b" translate="yes" xml:space="preserve">
          <source>Single word component names are completely OK in angle bracket form.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf8e78bc810b7c1f530dd6d72d017daf1c3887b6" translate="yes" xml:space="preserve">
          <source>SingleResourceDocument</source>
          <target state="translated">SingleResourceDocument</target>
        </trans-unit>
        <trans-unit id="39ca4feb35676630d8f746e3036b880a54da9d5c" translate="yes" xml:space="preserve">
          <source>Skip Navigation Links</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a516a3ce4b9fd1e3a2a9186564fe4ca0d9da8218" translate="yes" xml:space="preserve">
          <source>Skipping tests</source>
          <target state="translated">Saltarse las pruebas</target>
        </trans-unit>
        <trans-unit id="b08ae37ed0218a85800a574ce852c8c93ad73b28" translate="yes" xml:space="preserve">
          <source>Snapshot</source>
          <target state="translated">Snapshot</target>
        </trans-unit>
        <trans-unit id="5fd5c5d29b3c095a89a560172a9860a1ee047466" translate="yes" xml:space="preserve">
          <source>SnapshotRecordArray</source>
          <target state="translated">SnapshotRecordArray</target>
        </trans-unit>
        <trans-unit id="de370e832d39727a0c5b9309d06edd07070c125e" translate="yes" xml:space="preserve">
          <source>So &lt;code&gt;{ embedded: 'always' }&lt;/code&gt; is shorthand for: &lt;code&gt;{ serialize: 'records', deserialize: 'records' }&lt;/code&gt;</source>
          <target state="translated">Entonces &lt;code&gt;{ embedded: 'always' }&lt;/code&gt; es una abreviatura de: &lt;code&gt;{ serialize: 'records', deserialize: 'records' }&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0dbbff918236c7712aa927da66b932a496597385" translate="yes" xml:space="preserve">
          <source>So far in our example, the action we have passed to &lt;code&gt;ButtonWithConfirmation&lt;/code&gt; is a function that accepts one argument, &lt;code&gt;messageType&lt;/code&gt;. Suppose we want to extend this by allowing &lt;code&gt;sendMessage&lt;/code&gt; to take a second argument, the actual text of the message the user is sending:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92b64ffe3c61fe82b2f00e41e184a5ff233a2011" translate="yes" xml:space="preserve">
          <source>So far in our example, the action we have passed to &lt;code&gt;button-with-confirmation&lt;/code&gt; is a function that accepts one argument, &lt;code&gt;messageType&lt;/code&gt;. Suppose we want to extend this by allowing &lt;code&gt;sendMessage&lt;/code&gt; to take a second argument, the actual text of the message the user is sending:</source>
          <target state="translated">Hasta ahora, en nuestro ejemplo, la acci&amp;oacute;n que hemos pasado a &lt;code&gt;button-with-confirmation&lt;/code&gt; es una funci&amp;oacute;n que acepta un argumento, &lt;code&gt;messageType&lt;/code&gt; . Supongamos que queremos extender esto permitiendo que &lt;code&gt;sendMessage&lt;/code&gt; tome un segundo argumento, el texto real del mensaje que env&amp;iacute;a el usuario:</target>
        </trans-unit>
        <trans-unit id="19c36a10e1948ddfdc6257320833f42dd10fde96" translate="yes" xml:space="preserve">
          <source>So far we've only shown tracked properties working through getters, but tracking works through &lt;em&gt;methods&lt;/em&gt; or &lt;em&gt;functions&lt;/em&gt; as well:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80a65522f1652c5d00122d3950c2523b284f1750" translate="yes" xml:space="preserve">
          <source>So far, our &lt;code&gt;&amp;lt;PeopleList&amp;gt;&lt;/code&gt; component is purely presentational &amp;ndash; it takes some inputs as arguments and renders them using a template. To introduce &lt;em&gt;behavior&lt;/em&gt; to our component &amp;ndash; handling the button click in this case, we will need to attach some &lt;em&gt;code&lt;/em&gt; to the component.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="860179c222e257dfd377a3ba0841f6fa360f92ff" translate="yes" xml:space="preserve">
          <source>So far, our app is directly showing the user data from our Ember Data models. As our app grows, we will want to manipulate data further before presenting it to our users. For this reason, Ember offers Handlebars template helpers to decorate the data in our templates. Let's use a handlebars helper to allow our users to quickly see if a property is &quot;Standalone&quot; or part of a &quot;Community&quot;.</source>
          <target state="translated">Hasta ahora,nuestra aplicación muestra directamente los datos de los usuarios de nuestros modelos de Ember Data.A medida que nuestra aplicación crezca,querremos manipular más los datos antes de presentarlos a nuestros usuarios.Por esta razón,Ember ofrece ayudantes de plantillas de Handlebars para decorar los datos de nuestras plantillas.Usemos un ayudante de manillar para que nuestros usuarios puedan ver rápidamente si una propiedad es &quot;Independiente&quot; o parte de una &quot;Comunidad&quot;.</target>
        </trans-unit>
        <trans-unit id="5a240f0aacaf6090843d2fe6aff9163a4d3416bb" translate="yes" xml:space="preserve">
          <source>So far, our application is listing data, but there is no way for the user to interact with the information. In web applications we often want to respond to user actions like clicks or hovers. Ember makes this easy to do.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b117a8a88428d25b4b1e4a7c06468ec66a59e3f" translate="yes" xml:space="preserve">
          <source>So far, we've talked about how to populate an attribute with the value of a variable. But what if we want the value of an attribute to differ based upon whether the variable is truthy or falsy?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2d06f6c5fcf83668c50dcf5e00a42ff400f7c2d" translate="yes" xml:space="preserve">
          <source>So far, we've talked about web APIs that work by setting attributes as well as web APIs that work by setting properties. But what about web APIs that work by calling methods, like setting focus on an element?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4beaba805d3a97bce58afc2f7cb86863c0470f86" translate="yes" xml:space="preserve">
          <source>So far, your application is listing data, but there is no way for the user to interact with the information. In web applications you often want to listen for user events like clicks or hovers. Ember makes this easy to do. First add an &lt;code&gt;action&lt;/code&gt; helper to the &lt;code&gt;li&lt;/code&gt; in your &lt;code&gt;people-list&lt;/code&gt; component.</source>
          <target state="translated">Hasta ahora, su aplicaci&amp;oacute;n enumera datos, pero no hay forma de que el usuario interact&amp;uacute;e con la informaci&amp;oacute;n. En las aplicaciones web, a menudo desea escuchar eventos de usuario como clics o desplazamientos. Ember hace que esto sea f&amp;aacute;cil de hacer. Primero agregue un asistente de &lt;code&gt;action&lt;/code&gt; al &lt;code&gt;li&lt;/code&gt; en su componente de &lt;code&gt;people-list&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="82dbd01dbf5e166342277657acc79af70412fa18" translate="yes" xml:space="preserve">
          <source>So this change to &lt;code&gt;firstName&lt;/code&gt; was observed by &lt;code&gt;fullName&lt;/code&gt; computed property, which was itself observed by the &lt;code&gt;description&lt;/code&gt; property.</source>
          <target state="translated">Entonces, este cambio a &lt;code&gt;firstName&lt;/code&gt; fue observado por la propiedad computada &lt;code&gt;fullName&lt;/code&gt; , que a su vez fue observada por la propiedad &lt;code&gt;description&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7c179ab2cf598954fd3d4e13b9ad80cb323f34c9" translate="yes" xml:space="preserve">
          <source>So too with JSON API. By using JSON API to interop between your Ember app and your server, you can entirely change your backend stack without breaking your frontend. And as you add apps for other platforms, such as iOS and Android, you will be able to leverage JSON API libraries for those platforms to easily consume the same API your Ember app uses.</source>
          <target state="translated">También con el API de JSON.Usando el API de JSON para interoperar entre tu aplicación Ember y tu servidor,puedes cambiar completamente tu pila de backend sin romper tu frontend.Y a medida que añada aplicaciones para otras plataformas,como iOS y Android,podrá aprovechar las bibliotecas de la API de JSON para que esas plataformas consuman fácilmente la misma API que utiliza su aplicación Ember.</target>
        </trans-unit>
        <trans-unit id="1b4ae5f1c58dc8bb8ea15838b3e9682246652530" translate="yes" xml:space="preserve">
          <source>So, how can we provide some visual feedback during the transition?</source>
          <target state="translated">Entonces,¿cómo podemos proporcionar alguna retroalimentación visual durante la transición?</target>
        </trans-unit>
        <trans-unit id="fd7b7f2884ce4c1630ffc4f76897bd0d01d7ef54" translate="yes" xml:space="preserve">
          <source>So, if we want to display a purchase total we can pass the value into the template in cents:</source>
          <target state="translated">Así que,si queremos mostrar un total de compras podemos pasar el valor a la plantilla en centavos:</target>
        </trans-unit>
        <trans-unit id="820ab04fe6d1513548b6823192b5113a17600f54" translate="yes" xml:space="preserve">
          <source>Some APIs require HTTP headers, e.g. to provide an API key. Arbitrary headers can be set as key/value pairs on the &lt;code&gt;JSONAPIAdapter&lt;/code&gt;'s &lt;code&gt;headers&lt;/code&gt; object and Ember Data will send them along with each ajax request.</source>
          <target state="translated">Algunas API requieren encabezados HTTP, por ejemplo, para proporcionar una clave API. Cabeceras arbitrarias se pueden establecer como pares clave / valor en la &lt;code&gt;JSONAPIAdapter&lt;/code&gt; 's &lt;code&gt;headers&lt;/code&gt; objetar y Ember Los datos ser&amp;aacute;n enviarlos junto con cada solicitud Ajax.</target>
        </trans-unit>
        <trans-unit id="8b2ac0c846f9c6b1368c32fcb57645817bd2729e" translate="yes" xml:space="preserve">
          <source>Some APIs require HTTP headers, e.g. to provide an API key. Arbitrary headers can be set as key/value pairs on the &lt;code&gt;RESTAdapter&lt;/code&gt;'s &lt;code&gt;headers&lt;/code&gt; object and Ember Data will send them along with each ajax request.</source>
          <target state="translated">Algunas API requieren encabezados HTTP, por ejemplo, para proporcionar una clave API. Cabeceras arbitrarias se pueden establecer como pares clave / valor en la &lt;code&gt;RESTAdapter&lt;/code&gt; 's &lt;code&gt;headers&lt;/code&gt; objeto y Ember Los datos ser&amp;aacute;n enviarlos junto con cada solicitud Ajax.</target>
        </trans-unit>
        <trans-unit id="470ef24de909d94ebda0dd114d92e50df150b44d" translate="yes" xml:space="preserve">
          <source>Some APIs require HTTP headers, e.g. to provide an API key. Arbitrary headers can be set as key/value pairs on the &lt;code&gt;RESTAdapter&lt;/code&gt;'s &lt;code&gt;headers&lt;/code&gt; object and Ember Data will send them along with each ajax request. For dynamic headers see &lt;a href=&quot;https://api.emberjs.com/ember-data/release/classes/RESTAdapter&quot;&gt;headers customization&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ff79da2240d73d23b85815d98e514154e6babb3" translate="yes" xml:space="preserve">
          <source>Some APIs require HTTP headers, e.g. to provide an API key. Arbitrary headers can be set as key/value pairs on the &lt;code&gt;RESTAdapter&lt;/code&gt;'s &lt;code&gt;headers&lt;/code&gt; object and Ember Data will send them along with each ajax request. For dynamic headers see &lt;a href=&quot;https://emberjs.com/api/data/classes/DS.RESTAdapter.html#toc_headers-customization&quot;&gt;headers customization&lt;/a&gt;.</source>
          <target state="translated">Algunas API requieren encabezados HTTP, por ejemplo, para proporcionar una clave API. Cabeceras arbitrarias se pueden establecer como pares clave / valor en la &lt;code&gt;RESTAdapter&lt;/code&gt; 's &lt;code&gt;headers&lt;/code&gt; objeto y Ember Los datos ser&amp;aacute;n enviarlos junto con cada solicitud Ajax. Para encabezados din&amp;aacute;micos, consulte &lt;a href=&quot;https://emberjs.com/api/data/classes/DS.RESTAdapter.html#toc_headers-customization&quot;&gt;personalizaci&amp;oacute;n de encabezados&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="589305bc3eb0d013e4fe10cb12d21b40cca5f01f" translate="yes" xml:space="preserve">
          <source>Some addons might conditionally include polyfills only if needed. Some linters may emit warnings when using features not yet fully supported in your targets. Some addons may even automatically prefix unsupported CSS properties.</source>
          <target state="translated">Algunos complementos pueden incluir condicionalmente polifenoles sólo si son necesarios.Algunos linters pueden emitir advertencias cuando se utilizan características que aún no están totalmente soportadas en sus objetivos.Algunos addons pueden incluso anteponer automáticamente el prefijo de propiedades CSS no soportadas.</target>
        </trans-unit>
        <trans-unit id="3ff258fab639787350b4d162b7b89ec9d01856b6" translate="yes" xml:space="preserve">
          <source>Some common tools for making &lt;a href=&quot;https://en.wikipedia.org/wiki/Create,_read,_update_and_delete&quot;&gt;CRUD&lt;/a&gt; (create, read, update, delete) requests in Ember include:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e74245b72df6c829e572b3d6fe97cf270bbb1d9" translate="yes" xml:space="preserve">
          <source>Some common use cases include:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb8a1601e22971013d244a3199654c426856db1e" translate="yes" xml:space="preserve">
          <source>Some decorators can also receive arguments:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17a6dac8bf912ce569cbeab14f1bf531b4c08379" translate="yes" xml:space="preserve">
          <source>Some examples modifying that default behavior:</source>
          <target state="translated">Algunos ejemplos que modifican ese comportamiento predeterminado:</target>
        </trans-unit>
        <trans-unit id="85e58413d75b43a1155e92c311ad52664b36bef1" translate="yes" xml:space="preserve">
          <source>Some examples of how &lt;em&gt;enabling&lt;/em&gt; this feature impacts app code are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82534b5183631ee9d5eeba124dc1c2d8a8efa3a1" translate="yes" xml:space="preserve">
          <source>Some examples of how names are resolved:</source>
          <target state="translated">Algunos ejemplos de cómo se resuelven los nombres:</target>
        </trans-unit>
        <trans-unit id="d36a638a9881c1c5bedbe70a1f5fac81a45f759e" translate="yes" xml:space="preserve">
          <source>Some models may have properties that are deeply nested objects of readonly data. The na&amp;iuml;ve solution would be to define models for each nested object and use &lt;code&gt;hasMany&lt;/code&gt; and &lt;code&gt;belongsTo&lt;/code&gt; to recreate the nested relationship. However, since readonly data will never need to be updated and saved this often results in the creation of a great deal of code for very little benefit. An alternate approach is to define these relationships using an attribute with no transform (&lt;code&gt;@attr&lt;/code&gt;). This makes it easy to access readonly values in other objects and templates without the overhead of defining extraneous models.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d5184c34d7d66d58908b766bee8f66460408f46" translate="yes" xml:space="preserve">
          <source>Some models may have properties that are deeply nested objects of readonly data. The na&amp;iuml;ve solution would be to define models for each nested object and use &lt;code&gt;hasMany&lt;/code&gt; and &lt;code&gt;belongsTo&lt;/code&gt; to recreate the nested relationship. However, since readonly data will never need to be updated and saved this often results in the creation of a great deal of code for very little benefit. An alternate approach is to define these relationships using an attribute with no transform (&lt;code&gt;DS.attr()&lt;/code&gt;). This makes it easy to access readonly values in computed properties and templates without the overhead of defining extraneous models.</source>
          <target state="translated">Algunos modelos pueden tener propiedades que son objetos profundamente anidados de datos de solo lectura. La soluci&amp;oacute;n ingenua ser&amp;iacute;a definir modelos para cada objeto anidado y usar &lt;code&gt;hasMany&lt;/code&gt; y &lt;code&gt;belongsTo&lt;/code&gt; para recrear la relaci&amp;oacute;n anidada. Sin embargo, dado que los datos de solo lectura nunca necesitar&amp;aacute;n actualizarse y guardarse, esto a menudo da como resultado la creaci&amp;oacute;n de una gran cantidad de c&amp;oacute;digo con muy pocos beneficios. Un enfoque alternativo es definir estas relaciones utilizando un atributo sin transformaci&amp;oacute;n ( &lt;code&gt;DS.attr()&lt;/code&gt; ). Esto facilita el acceso a valores de solo lectura en propiedades y plantillas calculadas sin la sobrecarga de definir modelos extra&amp;ntilde;os.</target>
        </trans-unit>
        <trans-unit id="9b4ade66ce72953c75feeb49b9c6df4d4fc8e7c5" translate="yes" xml:space="preserve">
          <source>Some notes about &lt;code&gt;class&lt;/code&gt; usage:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c345287ac108fa43e40986e9e0b206ee82b4fe8" translate="yes" xml:space="preserve">
          <source>Some of Ember's test helpers are promises that wait for the run loop to empty before resolving. If your application has code that runs &lt;em&gt;outside&lt;/em&gt; a run loop, these will resolve too early and give erroneous test failures which are difficult to find. Disabling autoruns help you identify these scenarios and helps both your testing and your application!</source>
          <target state="translated">Algunos de los ayudantes de prueba de Ember son promesas que esperan a que el ciclo de ejecuci&amp;oacute;n se vac&amp;iacute;e antes de resolverse. Si su aplicaci&amp;oacute;n tiene c&amp;oacute;digo que se ejecuta &lt;em&gt;fuera de&lt;/em&gt; un ciclo de ejecuci&amp;oacute;n, estos se resolver&amp;aacute;n demasiado pronto y producir&amp;aacute;n fallas de prueba err&amp;oacute;neas que son dif&amp;iacute;ciles de encontrar. &amp;iexcl;Deshabilitar las ejecuciones autom&amp;aacute;ticas lo ayuda a identificar estos escenarios y ayuda tanto a sus pruebas como a su aplicaci&amp;oacute;n!</target>
        </trans-unit>
        <trans-unit id="b1bbf5eaf965f38fe34ca676ba670d7b7e3a16eb" translate="yes" xml:space="preserve">
          <source>Some of the features that Ember relies on, such as &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes#Field_declarations&quot;&gt;class fields&lt;/a&gt; and &lt;a href=&quot;https://github.com/tc39/proposal-decorators&quot;&gt;decorators&lt;/a&gt; have not yet been fully finalized in JavaScript just yet, so we'll cover these here with the assumption that you've had a chance to familiarize yourself with classes before. If you haven't, you can also check out &lt;a href=&quot;https://guides.emberjs.com/in-depth-topics/native-classes-in-depth/&quot;&gt;our detailed class primer&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4979198f37570d49855015976a8e9dfdb6023e02" translate="yes" xml:space="preserve">
          <source>Some of the helpers we'll use commonly are:</source>
          <target state="translated">Algunos de los ayudantes que usaremos comúnmente son:</target>
        </trans-unit>
        <trans-unit id="3748e66aa53dcbbdabc1f3d7af1f40169fdff824" translate="yes" xml:space="preserve">
          <source>Some of the more common ways to report a problem with the guides are:</source>
          <target state="translated">Algunas de las formas más comunes de reportar un problema con las guías son:</target>
        </trans-unit>
        <trans-unit id="5337883a101c091bf437d743927429e7f9b3a8dc" translate="yes" xml:space="preserve">
          <source>Some of the reasons this may happen:</source>
          <target state="translated">Algunas de las razones por las que esto puede suceder:</target>
        </trans-unit>
        <trans-unit id="822e1f477acc562b0e523818fa99c2731cc5d901" translate="yes" xml:space="preserve">
          <source>Some of these features that you'll learn about in the guides are:</source>
          <target state="translated">Algunas de estas características que aprenderás en las guías son:</target>
        </trans-unit>
        <trans-unit id="013194aba18ba879d16afd5810abb441525b32e0" translate="yes" xml:space="preserve">
          <source>Some of these handy helpers are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66952b6d0704d8bd5ed88829a1728002186d07f9" translate="yes" xml:space="preserve">
          <source>Some other event in the app causes the URL to change.</source>
          <target state="translated">Algún otro evento en la aplicación hace que la URL cambie.</target>
        </trans-unit>
        <trans-unit id="57317550a3c27511c883be0f3369988d320cb4f4" translate="yes" xml:space="preserve">
          <source>Some people choose to load data in their Components. The drawback is that requires more work from developers to handle async, rendering, errors, concurrency, and URL state themselves - functionality they would get automatically if they used a Route's &lt;code&gt;model&lt;/code&gt; hook. However there are valid use cases for loading data in a component, for developers who are comfortable handling the router's features themselves.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6662963cf7cb67b19d16e3797446e1a4df2164ae" translate="yes" xml:space="preserve">
          <source>Some properties are not only grouped by inheritance, but also by framework level semantics. For example, if you inspect an Ember Data model, you can see &lt;code&gt;Attributes&lt;/code&gt;, &lt;code&gt;Belongs To&lt;/code&gt;, &lt;code&gt;Has Many&lt;/code&gt;, and &lt;code&gt;Flags&lt;/code&gt; groups.</source>
          <target state="translated">Algunas propiedades no solo se agrupan por herencia, sino tambi&amp;eacute;n por sem&amp;aacute;ntica de nivel de marco. Por ejemplo, si inspecciona un modelo de datos de Ember, puede ver los grupos &lt;code&gt;Attributes&lt;/code&gt; , &lt;code&gt;Belongs To&lt;/code&gt; , &lt;code&gt;Has Many&lt;/code&gt; y &lt;code&gt;Flags&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d53376f049cded3ffe42cdb45579f580b958c176" translate="yes" xml:space="preserve">
          <source>Some raw JSON data to be normalized into a JSON:API Resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="325238f44bc39a7d51558fbf18caf5277d0da375" translate="yes" xml:space="preserve">
          <source>Some reasons for customizing an Adapter include using &lt;code&gt;underscores_case&lt;/code&gt; in your urls, using a medium other than REST to communicate with your backend API or even using a &lt;a href=&quot;https://github.com/locks/ember-localstorage-adapter&quot;&gt;local storage backend&lt;/a&gt;.</source>
          <target state="translated">Algunas de las razones para personalizar un adaptador incluyen el uso de &lt;code&gt;underscores_case&lt;/code&gt; en sus URL, el uso de un medio que no sea REST para comunicarse con su API de backend o incluso el uso de un &lt;a href=&quot;https://github.com/locks/ember-localstorage-adapter&quot;&gt;backend de almacenamiento local&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2244f25ae871987e59d131e17c8c7397712981aa" translate="yes" xml:space="preserve">
          <source>Some routes always display the same model. For example, the &lt;code&gt;/photos&lt;/code&gt; route will always display the same list of photos available in the application. If your user leaves this route and comes back later, the model does not change.</source>
          <target state="translated">Algunas rutas siempre muestran el mismo modelo. Por ejemplo, la ruta &lt;code&gt;/photos&lt;/code&gt; siempre mostrar&amp;aacute; la misma lista de fotos disponibles en la aplicaci&amp;oacute;n. Si su usuario abandona esta ruta y regresa m&amp;aacute;s tarde, el modelo no cambia.</target>
        </trans-unit>
        <trans-unit id="dfada9d7be3abdb25489a10a3babdd4c487f5a91" translate="yes" xml:space="preserve">
          <source>Some specific examples of units tests are:</source>
          <target state="translated">Algunos ejemplos concretos de pruebas de unidades son:</target>
        </trans-unit>
        <trans-unit id="f4c0047cd154d80ed200c3a10a6e33a060f165c8" translate="yes" xml:space="preserve">
          <source>Some times you might be working on a feature, but know that a certain test will fail so you might want to skip it. You can do it by using &lt;code&gt;skip&lt;/code&gt;:</source>
          <target state="translated">Algunas veces, es posible que est&amp;eacute; trabajando en una funci&amp;oacute;n, pero sepa que una determinada prueba fallar&amp;aacute;, por lo que es posible que desee omitirla. Puedes hacerlo usando &lt;code&gt;skip&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="e8353c07cd51f4950ee2ad76a1992e4ffb81690e" translate="yes" xml:space="preserve">
          <source>Some types of computed properties are very common. Ember provides a number of computed property macros, which are shorter ways of expressing certain types of computed property.</source>
          <target state="translated">Algunos tipos de propiedades computarizadas son muy comunes.Ember proporciona una serie de macros de propiedades computarizadas,que son formas más cortas de expresar ciertos tipos de propiedades computarizadas.</target>
        </trans-unit>
        <trans-unit id="e242b0e25372bca745a56f2ef24c52a13c526d4c" translate="yes" xml:space="preserve">
          <source>Sometimes a service may or may not exist, like when an initializer conditionally registers a service. Since normal injection will throw an error if the service doesn't exist, you must look up the service using Ember's &lt;a href=&quot;https://api.emberjs.com/ember/release/classes/@ember%2Fapplication/methods#getOwner&quot;&gt;&lt;code&gt;getOwner&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86c891d4cd8c7cba722589fb8d2aa6a1abb982b5" translate="yes" xml:space="preserve">
          <source>Sometimes a service may or may not exist, like when an initializer conditionally registers a service. Since normal injection will throw an error if the service doesn't exist, you must look up the service using Ember's &lt;a href=&quot;https://emberjs.com/api/classes/Ember.html#method_getOwner&quot;&gt;&lt;code&gt;getOwner&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">A veces, un servicio puede existir o no, como cuando un inicializador registra condicionalmente un servicio. Dado que la inyecci&amp;oacute;n normal arrojar&amp;aacute; un error si el servicio no existe, debe buscar el servicio utilizando &lt;a href=&quot;https://emberjs.com/api/classes/Ember.html#method_getOwner&quot;&gt; &lt;code&gt;getOwner&lt;/code&gt; &lt;/a&gt; de Ember en su lugar.</target>
        </trans-unit>
        <trans-unit id="3155e1aa9ca809aad16247d1dc430dba0afcf4d9" translate="yes" xml:space="preserve">
          <source>Sometimes controllers have dependencies on other controllers. This is accomplished by injecting one controller into another. For example, here are two simple controllers. The &lt;code&gt;CommentsController&lt;/code&gt; uses the &lt;code&gt;PostController&lt;/code&gt; via &lt;code&gt;inject&lt;/code&gt;:</source>
          <target state="translated">A veces, los controladores tienen dependencias de otros controladores. Esto se logra inyectando un controlador en otro. Por ejemplo, aqu&amp;iacute; hay dos controladores simples. El &lt;code&gt;CommentsController&lt;/code&gt; utiliza el &lt;code&gt;PostController&lt;/code&gt; a trav&amp;eacute;s de &lt;code&gt;inject&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="ec494ae7d5dc61d3450971f28ceab15c4a31768f" translate="yes" xml:space="preserve">
          <source>Sometimes the parent component invoking an action has some context needed for the action that the child component doesn't. Consider, for example, the case where the &lt;code&gt;ButtonWithConfirmation&lt;/code&gt; component we've defined is used within &lt;code&gt;SendMessage&lt;/code&gt;. The &lt;code&gt;sendMessage&lt;/code&gt; action that we pass to the child component may expect a message type parameter to be provided as an argument:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e4d9e623bb94a60e9ac83b620b9d575221d6a19" translate="yes" xml:space="preserve">
          <source>Sometimes the parent component invoking an action has some context needed for the action that the child component doesn't. Consider, for example, the case where the &lt;code&gt;button-with-confirmation&lt;/code&gt; component we've defined is used within &lt;code&gt;send-message&lt;/code&gt;. The &lt;code&gt;sendMessage&lt;/code&gt; action that we pass to the child component may expect a message type parameter to be provided as an argument:</source>
          <target state="translated">A veces, el componente padre que invoca una acci&amp;oacute;n tiene alg&amp;uacute;n contexto necesario para la acci&amp;oacute;n que el componente hijo no tiene. Considere, por ejemplo, el caso en el que el componente de &lt;code&gt;button-with-confirmation&lt;/code&gt; que hemos definido se usa dentro de &lt;code&gt;send-message&lt;/code&gt; . La acci&amp;oacute;n &lt;code&gt;sendMessage&lt;/code&gt; que pasamos al componente hijo puede esperar que se proporcione un par&amp;aacute;metro de tipo de mensaje como argumento:</target>
        </trans-unit>
        <trans-unit id="b795927e172ff54b29fd66e4ef2233525e286ec2" translate="yes" xml:space="preserve">
          <source>Sometimes the value you want to propagate to a downstream promise can only be retrieved asynchronously. This can be achieved by returning a promise in the fulfillment or rejection handler. The downstream promise will then be pending until the returned promise is settled. This is called &lt;em&gt;assimilation&lt;/em&gt;.</source>
          <target state="translated">A veces, el valor que desea propagar a una promesa posterior solo se puede recuperar de forma asincr&amp;oacute;nica. Esto se puede lograr devolviendo una promesa en el controlador de cumplimiento o rechazo. La promesa posterior estar&amp;aacute; pendiente hasta que se resuelva la promesa devuelta. A esto se le llama &lt;em&gt;asimilaci&amp;oacute;n&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="fb6b416b736de5984855b00b7181426c6ea9cfe1" translate="yes" xml:space="preserve">
          <source>Sometimes we want to set relationships on already existing records. We can simply set a &lt;code&gt;belongsTo&lt;/code&gt; relationship:</source>
          <target state="translated">A veces queremos establecer relaciones en registros ya existentes. Simplemente podemos establecer una relaci&amp;oacute;n &lt;code&gt;belongsTo&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="e3938ef49fd1f00900f13ab44705cfe380190afd" translate="yes" xml:space="preserve">
          <source>Sometimes you don't care if properties of individual array items change. In this case use the &lt;code&gt;[]&lt;/code&gt; key instead of &lt;code&gt;@each&lt;/code&gt;. Computed properties dependent on an array using the &lt;code&gt;[]&lt;/code&gt; key will only update if items are added to or removed from the array, or if the array property is set to a different array. For example:</source>
          <target state="translated">A veces, no le importa si cambian las propiedades de los elementos individuales de la matriz. En este caso, use la tecla &lt;code&gt;[]&lt;/code&gt; en lugar de &lt;code&gt;@each&lt;/code&gt; . Las propiedades calculadas que dependen de una matriz que utiliza la tecla &lt;code&gt;[]&lt;/code&gt; solo se actualizar&amp;aacute;n si se agregan o eliminan elementos de la matriz, o si la propiedad de la matriz se establece en una matriz diferente. Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="59593e85c482d9ccffbf9cb3f10447cbf9a7e137" translate="yes" xml:space="preserve">
          <source>Sometimes you have a computed property whose value depends on the properties of items in an array. For example, you may have an array of todo items, and want to calculate the incomplete todo's based on their &lt;code&gt;isDone&lt;/code&gt; property.</source>
          <target state="translated">A veces, tiene una propiedad calculada cuyo valor depende de las propiedades de los elementos de una matriz. Por ejemplo, es posible que tenga una serie de elementos de &lt;code&gt;isDone&lt;/code&gt; y desee calcular las tareas pendientes incompletas en funci&amp;oacute;n de su propiedad isDone .</target>
        </trans-unit>
        <trans-unit id="02020eb76a56d4e096072529eb83ef7b6e6a7883" translate="yes" xml:space="preserve">
          <source>Sometimes you need to change a value directly or indirectly without actually calling &lt;code&gt;get()&lt;/code&gt; or &lt;code&gt;set()&lt;/code&gt; on it. In this case, you can use this method instead. Calling this method will notify all observers that the property has potentially changed value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="416096650446b210755d175075d7e07b083b9ad1" translate="yes" xml:space="preserve">
          <source>Sometimes you need to fetch a model, but your route doesn't have the parameters, because it's a child route and the route directly above or a few levels above has the parameters that your route needs.</source>
          <target state="translated">A veces necesitas buscar un modelo,pero tu ruta no tiene los parámetros,porque es una ruta infantil y la ruta directamente arriba o unos niveles más arriba tiene los parámetros que tu ruta necesita.</target>
        </trans-unit>
        <trans-unit id="204181322499311f46007cd4bc07ef725e80b57a" translate="yes" xml:space="preserve">
          <source>Sometimes you need to fetch a model, but your route doesn't have the parameters, because it's a child route and the route directly above or a few levels above has the parameters that your route needs. You might run into this if you have a URL like &lt;code&gt;/album/4/songs/18&lt;/code&gt;, and when you're in the songs route, you need an album ID.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="559f553ca9e321ad0a7cbfeb49c2a261a0036395" translate="yes" xml:space="preserve">
          <source>Sometimes you need to retain the &lt;code&gt;this&lt;/code&gt;:</source>
          <target state="translated">A veces es necesario conservar &lt;code&gt;this&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="069522e3125331b06bf7bf0225dd816607897fe7" translate="yes" xml:space="preserve">
          <source>Sometimes you want to redirect a user to a different page than what they requested for.</source>
          <target state="translated">A veces quieres redirigir a un usuario a una página diferente de la que solicitó.</target>
        </trans-unit>
        <trans-unit id="0b639c578441ab69ca93cfe6eacb7e5c4ffe28f4" translate="yes" xml:space="preserve">
          <source>Sometimes, we may want to provide some default content if the user of a component hasn't provided a block. For instance, consider an error message dialog that has a default message in cases where we don't know what error occurred. We could show the default message using the &lt;code&gt;(has-block)&lt;/code&gt; syntax in an &lt;code&gt;ErrorDialog&lt;/code&gt; component.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff1deea5816647c86f04dab422bbd3f177c20025" translate="yes" xml:space="preserve">
          <source>Sometimes, you may need to generate links for nested routes which can have multiple &lt;a href=&quot;https://guides.emberjs.com/routing/defining-your-routes/#toc_dynamic-segments&quot;&gt;dynamic segments&lt;/a&gt;. For example, consider the following route definitions:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2baef004d709137087990a2c9d850371fca71c1c" translate="yes" xml:space="preserve">
          <source>Sometimes, you may want to define a component that wraps content provided by other templates.</source>
          <target state="translated">A veces,puede querer definir un componente que envuelva el contenido proporcionado por otras plantillas.</target>
        </trans-unit>
        <trans-unit id="2395a368ce28ec5ec373220c01e2fc1461af523a" translate="yes" xml:space="preserve">
          <source>Sometimes, you might see helpers invoked by placing them inside parentheses, &lt;code&gt;()&lt;/code&gt;. This means that a Helper is being used inside of another Helper or Component. This is referred to as a &quot;nested&quot; Helper Invocation. Parentheses must be used because curly braces &lt;code&gt;{{}}&lt;/code&gt; cannot be nested.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ed644784dc95f21d324b17adf99f942121d6a63" translate="yes" xml:space="preserve">
          <source>Sometimes, you will want to conditionally set an argument or attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="064d7374612367c011789ae5321e5d060ef161dd" translate="yes" xml:space="preserve">
          <source>Sorts the array by the keys specified in the argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03d664c8a7630fa11c74ace4dc1511eeaa4841f2" translate="yes" xml:space="preserve">
          <source>Special HTML elements like &lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96659bf5510b1ddbf595565c481a37824bc493f8" translate="yes" xml:space="preserve">
          <source>Specifies how records can be filtered. Records returned will need to have a &lt;code&gt;filterValues&lt;/code&gt; property with a key for every name in the returned array.</source>
          <target state="translated">Especifica c&amp;oacute;mo se pueden filtrar los registros. Los registros devueltos deber&amp;aacute;n tener una propiedad &lt;code&gt;filterValues&lt;/code&gt; con una clave para cada nombre en la matriz devuelta.</target>
        </trans-unit>
        <trans-unit id="95f6dd8dc212ba5d85302c1420a17db8da9053f3" translate="yes" xml:space="preserve">
          <source>Specify a method that observes property changes.</source>
          <target state="translated">Especifique un método que observe los cambios de propiedad.</target>
        </trans-unit>
        <trans-unit id="223591aeca04cad98919771b70c08a1289123a53" translate="yes" xml:space="preserve">
          <source>Specifying DOM event type</source>
          <target state="translated">Especificar el tipo de evento DOM</target>
        </trans-unit>
        <trans-unit id="9dc9de0aa5ed554b19547386f6cca49a1ec57918" translate="yes" xml:space="preserve">
          <source>Specifying Initializer Order</source>
          <target state="translated">Especificar el orden de inicialización</target>
        </trans-unit>
        <trans-unit id="5fdf0dd083e563032f5e6602ce7e005cc574889d" translate="yes" xml:space="preserve">
          <source>Specifying Keys</source>
          <target state="translated">Especificar las claves</target>
        </trans-unit>
        <trans-unit id="35833528563ce69a1f68854f07be8e7aa16a509d" translate="yes" xml:space="preserve">
          <source>Specifying Query Parameters</source>
          <target state="translated">Especificar los parámetros de la consulta</target>
        </trans-unit>
        <trans-unit id="7c35f3946da6ff79b8757a6ceb8ee8d49df16369" translate="yes" xml:space="preserve">
          <source>Specifying a Root URL</source>
          <target state="translated">Especificar un URL raíz</target>
        </trans-unit>
        <trans-unit id="3178f09d7674b2ba76416a9f78ffa51e9d2fdd63" translate="yes" xml:space="preserve">
          <source>Specifying a Route&amp;#x27;s Model</source>
          <target state="translated">Especificar el modelo de una ruta</target>
        </trans-unit>
        <trans-unit id="0aab4ef25ec9e8d4b45fcc096abf64fe7a154c92" translate="yes" xml:space="preserve">
          <source>Specifying a Route's Model</source>
          <target state="translated">Especificar el modelo de una ruta</target>
        </trans-unit>
        <trans-unit id="9d13a540e07e9718658fc51f3532a2a9665ff955" translate="yes" xml:space="preserve">
          <source>Specifying a Target</source>
          <target state="translated">Especificar un objetivo</target>
        </trans-unit>
        <trans-unit id="0576f645f0df389ae6ff04ea0100cb46c490b756" translate="yes" xml:space="preserve">
          <source>Specifying the Type of Event</source>
          <target state="translated">Especificar el tipo de evento</target>
        </trans-unit>
        <trans-unit id="d91b92c60fdffefa96bc27ffdf887f5e281d0a13" translate="yes" xml:space="preserve">
          <source>Specifying the URL Type</source>
          <target state="translated">Especificar el tipo de URL</target>
        </trans-unit>
        <trans-unit id="c69285edae5096eb75f15a92d92d9083fbcd550c" translate="yes" xml:space="preserve">
          <source>Specifying whitelisted modifier keys</source>
          <target state="translated">Especificar las claves modificadoras de la lista blanca</target>
        </trans-unit>
        <trans-unit id="9d4fa9e78c183321cef3a8e36a830b3610a9a700" translate="yes" xml:space="preserve">
          <source>Splits a string into separate units separated by spaces, eliminating any empty strings in the process. This is a convenience method for split that is mostly useful when applied to the &lt;code&gt;String.prototype&lt;/code&gt;.</source>
          <target state="translated">Divide una cadena en unidades separadas separadas por espacios, eliminando cualquier cadena vac&amp;iacute;a en el proceso. Este es un m&amp;eacute;todo conveniente para dividir que es principalmente &amp;uacute;til cuando se aplica al &lt;code&gt;String.prototype&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="be240ad179556a0e830c1c4a80ede62ad10a9099" translate="yes" xml:space="preserve">
          <source>StableRecordIdentifier[]</source>
          <target state="translated">StableRecordIdentifier[]</target>
        </trans-unit>
        <trans-unit id="0d1e61286aa50eb30bfbfd7083574b6c91fc2ff1" translate="yes" xml:space="preserve">
          <source>Standard CSS class names to apply to the view's outer element. This property automatically inherits any class names defined by the view's superclasses as well.</source>
          <target state="translated">Nombres de clase CSS estándar para aplicar al elemento exterior de la vista.Esta propiedad hereda automáticamente cualquier nombre de clase definido por las superclases de la vista también.</target>
        </trans-unit>
        <trans-unit id="8d2e5c61163ac5addfc66cdf3663694e20d997c0" translate="yes" xml:space="preserve">
          <source>Standard Method</source>
          <target state="translated">Método estándar</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
