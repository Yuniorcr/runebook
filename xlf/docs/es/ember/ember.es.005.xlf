<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="ember">
    <body>
      <group id="ember">
        <trans-unit id="222ee7852900322bdc3b9e28c3052875024db7e1" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/runtime/lib/system/core_object.js#L538&quot;&gt; packages/@ember/-internals/runtime/lib/system/core_object.js:538 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50e25b13114ddf60f29666bb11ec65af5fc0a5dd" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/runtime/lib/system/core_object.js#L546&quot;&gt; packages/@ember/-internals/runtime/lib/system/core_object.js:546 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7e0644e238514cfa0e1dea412eac13535ec7247" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/runtime/lib/system/core_object.js#L596&quot;&gt; packages/@ember/-internals/runtime/lib/system/core_object.js:596 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="971eca05e1ad30d64badfcdaace61543b34e0097" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/runtime/lib/system/core_object.js#L756&quot;&gt; packages/@ember/-internals/runtime/lib/system/core_object.js:756 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f419692b56000ba1fac31b24e9f07a2ddd9b49b" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/runtime/lib/system/core_object.js#L810&quot;&gt; packages/@ember/-internals/runtime/lib/system/core_object.js:810 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0acaebcce1646df1b08198adcc56680b8b2c2e6f" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/runtime/lib/type-of.js#L24&quot;&gt; packages/@ember/-internals/runtime/lib/type-of.js:24 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8e78739233ca746def816ab7ce75058349e7a4b" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/utils/lib/guid.ts#L86&quot;&gt; packages/@ember/-internals/utils/lib/guid.ts:86 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="932da0f7af64f30734430d45c1551a9a8e06b4e5" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/-internals/utils/lib/invoke.ts#L29&quot;&gt; packages/@ember/-internals/utils/lib/invoke.ts:29 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32185e4d4a694e9347bf5105a2561ea11c0c5d37" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/application/instance.js#L365&quot;&gt; packages/@ember/application/instance.js:365 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77a4c81d13697c4bce388f63dcef565d8fbf0026" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/application/instance.js#L401&quot;&gt; packages/@ember/application/instance.js:401 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a2f9e0f8d66a29a1e4fc0ed8bc4b024c66f9757" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/application/instance.js#L424&quot;&gt; packages/@ember/application/instance.js:424 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea87fd740914a0e01daa8570e6c46b107dab8869" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/application/instance.js#L451&quot;&gt; packages/@ember/application/instance.js:451 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5caa1dc7cd957e464585a4a491eb5c006609b136" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/application/instance.js#L476&quot;&gt; packages/@ember/application/instance.js:476 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ddd58dcd269626f01f3876f9a315e70b7a9c141" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/application/lib/application.js#L192&quot;&gt; packages/@ember/application/lib/application.js:192 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ab1fe2d28a54ddce5b1b6a0b48cc6cea6f37246" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/application/lib/application.js#L217&quot;&gt; packages/@ember/application/lib/application.js:217 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11488f12fbc53a0ba39a17c2cf6cd603b5cd5ddf" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/application/lib/application.js#L234&quot;&gt; packages/@ember/application/lib/application.js:234 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eac276e0cdc034e54a7972ea8bda217681934838" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/application/lib/application.js#L391&quot;&gt; packages/@ember/application/lib/application.js:391 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52923eb6a758ced2b960977fb06a2c962fdef578" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/application/lib/application.js#L552&quot;&gt; packages/@ember/application/lib/application.js:552 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88e59faa46792530719e13f48dd72cd00b565767" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/application/lib/application.js#L603&quot;&gt; packages/@ember/application/lib/application.js:603 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0e052814738dfff88923b5a2d7ea36ecb41d404" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/application/lib/application.js#L640&quot;&gt; packages/@ember/application/lib/application.js:640 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="164ede628d84844a195c2f8e3043c02c6198a8fb" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/application/lib/application.js#L717&quot;&gt; packages/@ember/application/lib/application.js:717 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b05e0bc67fabba8ad8556baf5dc8d56070ebd97a" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/application/lib/application.js#L875&quot;&gt; packages/@ember/application/lib/application.js:875 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b603e7f4691faac1123748841f26bb8230ab47c7" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/application/lib/application.js#L902&quot;&gt; packages/@ember/application/lib/application.js:902 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f61f159766fb5ade36bd1a8490fa34c1518cf6d" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/controller/index.js#L17&quot;&gt; packages/@ember/controller/index.js:17 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc15f875b476b5ecab18ab1ca49d09162c3d1300" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/debug/index.ts#L131&quot;&gt; packages/@ember/debug/index.ts:131 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca4a58d729225fffd98adccef1bc47df81d6013c" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/debug/index.ts#L171&quot;&gt; packages/@ember/debug/index.ts:171 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbed33fa2d88969a7d9a49b922c9bf114a4ca438" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/debug/index.ts#L262&quot;&gt; packages/@ember/debug/index.ts:262 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d55ebdaab8c464c076354db036f1b022cc164702" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/debug/lib/deprecate.ts#L177&quot;&gt; packages/@ember/debug/lib/deprecate.ts:177 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c58d23f059b3f8caddac2141651de741cb6a05ff" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/debug/lib/deprecate.ts#L30&quot;&gt; packages/@ember/debug/lib/deprecate.ts:30 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3910afd07f55e3b895060dc0687332c7fc19fc03" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/debug/lib/warn.ts#L23&quot;&gt; packages/@ember/debug/lib/warn.ts:23 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91b86c56295e0a507e541fcb564d08bfa7d1fa07" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/debug/lib/warn.ts#L70&quot;&gt; packages/@ember/debug/lib/warn.ts:70 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8810595c3d745b336a01023a84d1abdd2477217" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/destroyable/index.ts#L102&quot;&gt; packages/@ember/destroyable/index.ts:102 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25462e3d2ef024281702b6cedce44deecd2d5549" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/destroyable/index.ts#L137&quot;&gt; packages/@ember/destroyable/index.ts:137 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e292b33bb81b9374107b4e6a8006fc904d20ee26" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/destroyable/index.ts#L151&quot;&gt; packages/@ember/destroyable/index.ts:151 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37be063d0e1813e62d9d0c54cdb6c9196fbbf662" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/destroyable/index.ts#L163&quot;&gt; packages/@ember/destroyable/index.ts:163 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc880a4eafe9d814f9977ca02e879292aa7c275d" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/destroyable/index.ts#L222&quot;&gt; packages/@ember/destroyable/index.ts:222 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45b6ed032491369531ef10e4a42c599686395ed7" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/destroyable/index.ts#L31&quot;&gt; packages/@ember/destroyable/index.ts:31 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62ac07182d83e0dd91707776b595655b4c8bd180" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/destroyable/index.ts#L57&quot;&gt; packages/@ember/destroyable/index.ts:57 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba0bd50b0b18a5e7512619468a0d8c4a6d9da358" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/destroyable/index.ts#L79&quot;&gt; packages/@ember/destroyable/index.ts:79 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a7663e26440ea94c7527e36e1d3e74eee64fd41" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/engine/index.js#L159&quot;&gt; packages/@ember/engine/index.js:159 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c686fcb2e21202532906d062b318cee35d65d82" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/engine/index.js#L306&quot;&gt; packages/@ember/engine/index.js:306 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="416bb670552274cd2bc0234e7b91f29423fcfccd" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/engine/index.js#L429&quot;&gt; packages/@ember/engine/index.js:429 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70966ab0cad5866300087cac202adc5651e5533c" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/engine/index.js#L75&quot;&gt; packages/@ember/engine/index.js:75 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60e1e32bc05e16fe69436cae9022f2c3582a6578" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/engine/instance.js#L124&quot;&gt; packages/@ember/engine/instance.js:124 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f9aede6108e4dd41d99290c5c5e7646c19f4b6c" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/engine/instance.js#L62&quot;&gt; packages/@ember/engine/instance.js:62 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e438cab064c5b9161912f9090805313e0aecc7e" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/helper/index.ts#L251&quot;&gt; packages/@ember/helper/index.ts:251 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cae4ec68819df5d5377e18610935d8d05f1d3c43" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/helper/index.ts#L5&quot;&gt; packages/@ember/helper/index.ts:5 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e63d9273511ffa789ef00cb37f1268028966b6ee" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/helper/index.ts#L58&quot;&gt; packages/@ember/helper/index.ts:58 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2030aa0f8317caac0811c4fb2a38875684da1f2b" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/object/compat.ts#L39&quot;&gt; packages/@ember/object/compat.ts:39 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08fbe0aa00f4f0b63aa8a5f8504f6d2baad20f02" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/object/index.js#L5&quot;&gt; packages/@ember/object/index.js:5 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50e9e86c19362c53727a1cb1a0c65418d2d9636e" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/object/lib/computed/computed_macros.js#L1063&quot;&gt; packages/@ember/object/lib/computed/computed_macros.js:1063 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58eb90067067dabe49bf5b6fd75a6345f43b0296" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/object/lib/computed/computed_macros.js#L1076&quot;&gt; packages/@ember/object/lib/computed/computed_macros.js:1076 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0baca9ad2f3d4fd24e951cd9b04cd57fd6622cc" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/object/lib/computed/computed_macros.js#L1152&quot;&gt; packages/@ember/object/lib/computed/computed_macros.js:1152 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b29e360791d3424283aa46800a56a1fb46cfdfca" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/object/lib/computed/computed_macros.js#L131&quot;&gt; packages/@ember/object/lib/computed/computed_macros.js:131 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3cd30d960073724608bda447e627f37efca9d63" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/object/lib/computed/computed_macros.js#L196&quot;&gt; packages/@ember/object/lib/computed/computed_macros.js:196 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5f299a881c4912359ba477ff6e3c000813996b5" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/object/lib/computed/computed_macros.js#L260&quot;&gt; packages/@ember/object/lib/computed/computed_macros.js:260 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15753b0293cce0b4d1ec7641b7584f0391ecd960" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/object/lib/computed/computed_macros.js#L321&quot;&gt; packages/@ember/object/lib/computed/computed_macros.js:321 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2f7378861e4f4e1f27e63a3df891fdd2ee0b524" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/object/lib/computed/computed_macros.js#L394&quot;&gt; packages/@ember/object/lib/computed/computed_macros.js:394 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43ed7a9234582a4d05021464963e24404e69705b" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/object/lib/computed/computed_macros.js#L462&quot;&gt; packages/@ember/object/lib/computed/computed_macros.js:462 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="280944a6247f6587e5dfc872acc4add45a383624" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/object/lib/computed/computed_macros.js#L528&quot;&gt; packages/@ember/object/lib/computed/computed_macros.js:528 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0b9486466b87a6abe447601034edceb500fb89c" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/object/lib/computed/computed_macros.js#L594&quot;&gt; packages/@ember/object/lib/computed/computed_macros.js:594 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c1ebef5ceb75f520baef8d20b4e5f9f9753e33c" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/object/lib/computed/computed_macros.js#L63&quot;&gt; packages/@ember/object/lib/computed/computed_macros.js:63 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b6ccc218b6c2d933f841f7f3a8b1ab3a1f22270" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/object/lib/computed/computed_macros.js#L660&quot;&gt; packages/@ember/object/lib/computed/computed_macros.js:660 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="188ee1cd81a35172e911f8e94924d626c99972a0" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/object/lib/computed/computed_macros.js#L726&quot;&gt; packages/@ember/object/lib/computed/computed_macros.js:726 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24d25b9aa1309e74118f1f46f48e670342e3d8b9" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/object/lib/computed/computed_macros.js#L792&quot;&gt; packages/@ember/object/lib/computed/computed_macros.js:792 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d50f0d034d3087babcdcae52926182ed6b8721c" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/object/lib/computed/computed_macros.js#L866&quot;&gt; packages/@ember/object/lib/computed/computed_macros.js:866 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a55bd1a44c7fee750d470df37b9c9df78b12fbe" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/object/lib/computed/computed_macros.js#L934&quot;&gt; packages/@ember/object/lib/computed/computed_macros.js:934 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ae89a432a98f001b3f6c951b51c3e770405055a" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/object/lib/computed/computed_macros.js#L990&quot;&gt; packages/@ember/object/lib/computed/computed_macros.js:990 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1c640b8232e999385e309dea99a114f14553695" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/object/lib/computed/reduce_computed_macros.js#L1001&quot;&gt; packages/@ember/object/lib/computed/reduce_computed_macros.js:1001 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7944ff1f8d2db92eb63a87ce8ffe96a54bc62c03" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/object/lib/computed/reduce_computed_macros.js#L1093&quot;&gt; packages/@ember/object/lib/computed/reduce_computed_macros.js:1093 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ce31892e6f24ade978bc139dc79524af1e3e16b" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/object/lib/computed/reduce_computed_macros.js#L110&quot;&gt; packages/@ember/object/lib/computed/reduce_computed_macros.js:110 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64bbd90625dadbe7ed15b51434017fe3087744aa" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/object/lib/computed/reduce_computed_macros.js#L1188&quot;&gt; packages/@ember/object/lib/computed/reduce_computed_macros.js:1188 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="484bffa8c589fbe91d9deaf2557c1d28bbf62822" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/object/lib/computed/reduce_computed_macros.js#L1258&quot;&gt; packages/@ember/object/lib/computed/reduce_computed_macros.js:1258 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bab0da5d9eff17436ebea992392c35d7f939587e" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/object/lib/computed/reduce_computed_macros.js#L210&quot;&gt; packages/@ember/object/lib/computed/reduce_computed_macros.js:210 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23db8699295d4e36742e4f429ab34322f470e6d7" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/object/lib/computed/reduce_computed_macros.js#L309&quot;&gt; packages/@ember/object/lib/computed/reduce_computed_macros.js:309 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adea0c3837ceed0ed2d2daf5a5815b350dc83ba8" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/object/lib/computed/reduce_computed_macros.js#L429&quot;&gt; packages/@ember/object/lib/computed/reduce_computed_macros.js:429 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e0d62dfb78c5fc67ec11564e7df6883c3145226" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/object/lib/computed/reduce_computed_macros.js#L531&quot;&gt; packages/@ember/object/lib/computed/reduce_computed_macros.js:531 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7248705a407cc95da44a8e6e444523bd97e2aa4" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/object/lib/computed/reduce_computed_macros.js#L56&quot;&gt; packages/@ember/object/lib/computed/reduce_computed_macros.js:56 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50032d8dc705bef89a66c9d7475f2af0c822f60e" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/object/lib/computed/reduce_computed_macros.js#L685&quot;&gt; packages/@ember/object/lib/computed/reduce_computed_macros.js:685 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3799ade00dd69c0251ffb8153b5b5d86a4d04dd3" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/object/lib/computed/reduce_computed_macros.js#L762&quot;&gt; packages/@ember/object/lib/computed/reduce_computed_macros.js:762 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cae7a9bec06b63965c81dc3e7bdac5191959c29e" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/object/lib/computed/reduce_computed_macros.js#L850&quot;&gt; packages/@ember/object/lib/computed/reduce_computed_macros.js:850 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1311650822dd030a808357402af330d16adca1e1" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/object/lib/computed/reduce_computed_macros.js#L926&quot;&gt; packages/@ember/object/lib/computed/reduce_computed_macros.js:926 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4083f69e18b0475aaa0b436926143ad76176a0a6" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/polyfills/lib/assign.ts#L9&quot;&gt; packages/@ember/polyfills/lib/assign.ts:9 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc294b2bf37270d70e0097e3f8e508b4a2111dac" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/polyfills/lib/merge.ts#L9&quot;&gt; packages/@ember/polyfills/lib/merge.ts:9 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e79e226c0dcfb0d78d81b8cd51cf4721efc5fef3" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/runloop/index.js#L109&quot;&gt; packages/@ember/runloop/index.js:109 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f89dd56c3c9baccc925b087fd7bab2e632edbc8" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/runloop/index.js#L157&quot;&gt; packages/@ember/runloop/index.js:157 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f442f66edab43521d10e949beb1c287d8ef4e38" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/runloop/index.js#L244&quot;&gt; packages/@ember/runloop/index.js:244 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db17d72dcca975d089996e1d4dbd0739e6307cf7" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/runloop/index.js#L267&quot;&gt; packages/@ember/runloop/index.js:267 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1268adaa495fba64445a2da95cb614a3128941fe" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/runloop/index.js#L290&quot;&gt; packages/@ember/runloop/index.js:290 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02005acdb1c39b1a3401d644bbc0fcf64d6a9144" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/runloop/index.js#L345&quot;&gt; packages/@ember/runloop/index.js:345 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba1fa91c2627bab86273835c986514a9b3a9dded" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/runloop/index.js#L379&quot;&gt; packages/@ember/runloop/index.js:379 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10b790ccc09be999ad9dd1febd94a12c4dae27ce" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/runloop/index.js#L399&quot;&gt; packages/@ember/runloop/index.js:399 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99f299dbdf059b85d46613903bcc2a09c3242835" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/runloop/index.js#L475&quot;&gt; packages/@ember/runloop/index.js:475 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e1df6d743dd34748fb381e1e8174d072792dbdc" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/runloop/index.js#L550&quot;&gt; packages/@ember/runloop/index.js:550 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3996b202ec81b98f91465a7fa1f09e0f3b573e85" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/runloop/index.js#L621&quot;&gt; packages/@ember/runloop/index.js:621 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfe8c06978e61dfa03d8bb08303e675f5702cfc6" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/runloop/index.js#L699&quot;&gt; packages/@ember/runloop/index.js:699 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6ddf43fb029c35575c362452aab50132df82455" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/runloop/index.js#L74&quot;&gt; packages/@ember/runloop/index.js:74 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51d35981ab14f239a1d6cbf32aeff19d4d2fc193" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/service/index.js#L9&quot;&gt; packages/@ember/service/index.js:9 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c078e738568af36a941a163c85b49cfa406f0d0b" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/string/index.ts#L138&quot;&gt; packages/@ember/string/index.ts:138 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="459565d4029840c5840bafd10f379f81ab19cf04" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/string/index.ts#L164&quot;&gt; packages/@ember/string/index.ts:164 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb860ebedfda364ab37f0a6d09f56d94efdb1e24" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/string/index.ts#L185&quot;&gt; packages/@ember/string/index.ts:185 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24b37474a69ec6bd2ba70a7d69ebcfc048c539c2" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/string/index.ts#L207&quot;&gt; packages/@ember/string/index.ts:207 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7564240e7b8bd5c9fcb3d9c6f25505488daee697" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/string/index.ts#L230&quot;&gt; packages/@ember/string/index.ts:230 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a340da53a3331df4e907d9ac5708926c3958a580" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/string/index.ts#L252&quot;&gt; packages/@ember/string/index.ts:252 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a825c5b77bfb200bbf122e237888f51b93fa688e" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/@ember/string/index.ts#L275&quot;&gt; packages/@ember/string/index.ts:275 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12fbb636be90865f89dbdda94599844b9b6f155b" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/ember-testing/lib/adapters/adapter.js#L19&quot;&gt; packages/ember-testing/lib/adapters/adapter.js:19 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc161b5ccd8e47ba6d6f1e57f60c441ac51fc4e6" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/ember-testing/lib/adapters/adapter.js#L30&quot;&gt; packages/ember-testing/lib/adapters/adapter.js:30 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f2eedb9cc66254c67d37c5aa149256343931c28" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/ember-testing/lib/adapters/adapter.js#L38&quot;&gt; packages/ember-testing/lib/adapters/adapter.js:38 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ea05bdff26bbaa70153cd2b0fbfe3340abb4091" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/ember-testing/lib/test.js#L45&quot;&gt; packages/ember-testing/lib/test.js:45 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="885e5663a31466d08095b89a636cfb91cda85ef8" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/ember-testing/lib/test/helpers.js#L105&quot;&gt; packages/ember-testing/lib/test/helpers.js:105 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dc2976232d36400357b221e5bfa4d3e1076137b" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/ember-testing/lib/test/helpers.js#L8&quot;&gt; packages/ember-testing/lib/test/helpers.js:8 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ab59c02efc0ec730e01cb98315589d93e29199a" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/ember-testing/lib/test/on_inject_helpers.js#L3&quot;&gt; packages/ember-testing/lib/test/on_inject_helpers.js:3 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69e6627b71adb5e452d5caeb9acb3fe3bd4f30a4" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/ember-testing/lib/test/promise.js#L21&quot;&gt; packages/ember-testing/lib/test/promise.js:21 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dc7927f40634f8ba3aadfac815d56a097073455" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/ember-testing/lib/test/promise.js#L39&quot;&gt; packages/ember-testing/lib/test/promise.js:39 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="281599a1e6bdd40b9bcb76c33260c26d3bbb8a37" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/ember-testing/lib/test/waiters.js#L55&quot;&gt; packages/ember-testing/lib/test/waiters.js:55 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cf32b77f67c7732749c49b7f450ee4dc1146ba3" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/ember-testing/lib/test/waiters.js#L7&quot;&gt; packages/ember-testing/lib/test/waiters.js:7 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78a2ef60fcf05f62b31ed0c6e265bc81519bae2e" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/ember.js/tree/v3.25.1/packages/ember-testing/lib/test/waiters.js#L83&quot;&gt; packages/ember-testing/lib/test/waiters.js:83 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09ed49e899e6ee4793648a24ef645a111621e440" translate="yes" xml:space="preserve">
          <source>Defined in:</source>
          <target state="translated">Definido en:</target>
        </trans-unit>
        <trans-unit id="d801c745504dbdfb7f78558c39debe6722b56e50" translate="yes" xml:space="preserve">
          <source>Defines a property on an object. This method works much like the ES5 &lt;code&gt;Object.defineProperty()&lt;/code&gt; method except that it can also accept computed properties and other special descriptors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fa4550d6e8365bec4c35713938c87c2c23db99f" translate="yes" xml:space="preserve">
          <source>Defines string helper methods including string formatting and localization. Unless &lt;code&gt;EmberENV.EXTEND_PROTOTYPES.String&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt; these methods will also be added to the &lt;code&gt;String.prototype&lt;/code&gt; as well.</source>
          <target state="translated">Define m&amp;eacute;todos auxiliares de cadenas, incluido el formato y la localizaci&amp;oacute;n de cadenas. A menos que &lt;code&gt;EmberENV.EXTEND_PROTOTYPES.String&lt;/code&gt; sea &lt;code&gt;false&lt;/code&gt; estos m&amp;eacute;todos tambi&amp;eacute;n se agregar&amp;aacute;n al &lt;code&gt;String.prototype&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5478cba1e14b55281028467d5da3970408585880" translate="yes" xml:space="preserve">
          <source>Defines the properties that will be concatenated from the superclass (instead of overridden).</source>
          <target state="translated">Define las propiedades que se concatenarán a partir de la superclase (en lugar de anularse).</target>
        </trans-unit>
        <trans-unit id="e06333a234336b1088bcec7a90a503fef6042e9f" translate="yes" xml:space="preserve">
          <source>Defines the properties that will be merged from the superclass (instead of overridden).</source>
          <target state="translated">Define las propiedades que se fusionarán de la superclase (en lugar de anularse).</target>
        </trans-unit>
        <trans-unit id="cba04525a9e86cb89051a67264bee4845d497f7c" translate="yes" xml:space="preserve">
          <source>Defines which query parameters the controller accepts. If you give the names &lt;code&gt;['category','page']&lt;/code&gt; it will bind the values of these query parameters to the variables &lt;code&gt;this.category&lt;/code&gt; and &lt;code&gt;this.page&lt;/code&gt;. By default, Ember coerces query parameter values using &lt;code&gt;toggleProperty&lt;/code&gt;. This behavior may lead to unexpected results. Available queryParam types: &lt;code&gt;boolean&lt;/code&gt;, &lt;code&gt;number&lt;/code&gt;, &lt;code&gt;array&lt;/code&gt;. If query param type not specified, it will be &lt;code&gt;string&lt;/code&gt;. To explicitly configure a query parameter property so it coerces as expected, you must define a type property:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69ad8feb04c973549f2146912842215a4e12ad28" translate="yes" xml:space="preserve">
          <source>Defines which query parameters the controller accepts. If you give the names &lt;code&gt;['category','page']&lt;/code&gt; it will bind the values of these query parameters to the variables &lt;code&gt;this.category&lt;/code&gt; and &lt;code&gt;this.page&lt;/code&gt;. By default, Ember coerces query parameter values using &lt;code&gt;toggleProperty&lt;/code&gt;. This behavior may lead to unexpected results. To explicitly configure a query parameter property so it coerces as expected, you must define a type property:</source>
          <target state="translated">Define qu&amp;eacute; par&amp;aacute;metros de consulta acepta el controlador. Si da los nombres &lt;code&gt;['category','page']&lt;/code&gt; , vincular&amp;aacute; los valores de estos par&amp;aacute;metros de consulta a las variables &lt;code&gt;this.category&lt;/code&gt; y &lt;code&gt;this.page&lt;/code&gt; . De forma predeterminada, Ember coacciona los valores de los par&amp;aacute;metros de consulta mediante &lt;code&gt;toggleProperty&lt;/code&gt; . Este comportamiento puede dar lugar a resultados inesperados. Para configurar expl&amp;iacute;citamente una propiedad de par&amp;aacute;metro de consulta para que coaccione como se espera, debe definir una propiedad de tipo:</target>
        </trans-unit>
        <trans-unit id="4b067372b65b1b2359dfffb305eb7a14b64cdca2" translate="yes" xml:space="preserve">
          <source>Defining Attributes</source>
          <target state="translated">Definición de los atributos</target>
        </trans-unit>
        <trans-unit id="5cde166cde96ee71ad872bcd315dce4717cd7061" translate="yes" xml:space="preserve">
          <source>Defining Classes</source>
          <target state="translated">Definiendo las clases</target>
        </trans-unit>
        <trans-unit id="684d1cecc167ddcefbe8bd587de86c9ce08d69a0" translate="yes" xml:space="preserve">
          <source>Defining Models</source>
          <target state="translated">Definiendo los modelos</target>
        </trans-unit>
        <trans-unit id="aee75193fceeb68d33849a47ad620ebf0c0c86a3" translate="yes" xml:space="preserve">
          <source>Defining Services</source>
          <target state="translated">Definiendo los servicios</target>
        </trans-unit>
        <trans-unit id="b0f334c73f01ca6f3c70d7958cb5bc394c75789e" translate="yes" xml:space="preserve">
          <source>Defining Your Routes</source>
          <target state="translated">Definiendo sus rutas</target>
        </trans-unit>
        <trans-unit id="c656b358cbd9ce75138fa2c90d4518824c9449eb" translate="yes" xml:space="preserve">
          <source>Defining a Classic Component</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fae0d5a1edc861176fb1e8c343e96c4c5f6cba4" translate="yes" xml:space="preserve">
          <source>Defining a Component</source>
          <target state="translated">Definición de un componente</target>
        </trans-unit>
        <trans-unit id="82e3ca3eb173fcd008d316170fe1125d2a3dba11" translate="yes" xml:space="preserve">
          <source>Defining a Component Subclass</source>
          <target state="translated">Definición de una subclase de componentes</target>
        </trans-unit>
        <trans-unit id="0a52e5d4e996287d618b8571577357e2d8f4c02f" translate="yes" xml:space="preserve">
          <source>Defining a Controller</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="612d7117bf428fd190186238807b7cd9af2f4daf" translate="yes" xml:space="preserve">
          <source>Defining a Model</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5428172111ac4ffce461a76f23eab7416fbbcaa" translate="yes" xml:space="preserve">
          <source>Defining a Template-only Component</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bee19c1356d2835220e2de01cf7e2d6df40547c" translate="yes" xml:space="preserve">
          <source>Defining a route.</source>
          <target state="translated">Definiendo una ruta.</target>
        </trans-unit>
        <trans-unit id="6229a5d4bc3998de888a0e49efd3c572dc5c99a2" translate="yes" xml:space="preserve">
          <source>Defining subclasses is otherwise the same as defining a base class in most ways, with the exception of the &lt;code&gt;constructor&lt;/code&gt; function where you &lt;em&gt;must&lt;/em&gt; use the &lt;code&gt;super&lt;/code&gt; keyword (discussed in more detail below). Class elements that are redefined by the child class will be &lt;em&gt;overridden&lt;/em&gt;, and their values will be fully replaced on the child:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf1be2b7ad07bae2fe92475d10173eb638774def" translate="yes" xml:space="preserve">
          <source>Definition</source>
          <target state="translated">Definition</target>
        </trans-unit>
        <trans-unit id="4a492ee34463c5db4d8ddc62b40e22338163fe2a" translate="yes" xml:space="preserve">
          <source>Definition time can be expensive and only needs to happen once since it is an idempotent operation. For example, between test runs and FastBoot requests, the application stays the same. It is only the state that we want to reset.</source>
          <target state="translated">El tiempo de definición puede ser costoso y sólo tiene que ocurrir una vez,ya que es una operación idéa.Por ejemplo,entre las ejecuciones de prueba y las solicitudes de FastBoot,la aplicación permanece igual.Es sólo el estado que queremos reiniciar.</target>
        </trans-unit>
        <trans-unit id="c029198bb43cebd423df3b66dc734c335035bfec" translate="yes" xml:space="preserve">
          <source>Definition time, where all of the classes, templates, and other dependencies are loaded (typically in the browser).</source>
          <target state="translated">Tiempo de definición,donde se cargan todas las clases,plantillas y otras dependencias (típicamente en el navegador).</target>
        </trans-unit>
        <trans-unit id="15225baac48fc3d689cb2b0f74b936eff4339ff7" translate="yes" xml:space="preserve">
          <source>Definitions</source>
          <target state="translated">Definitions</target>
        </trans-unit>
        <trans-unit id="fe56cd89225cb15eb55a347a39f15888e0f41834" translate="yes" xml:space="preserve">
          <source>Delay calling the target method until the debounce period has elapsed with no additional debounce calls. If &lt;code&gt;debounce&lt;/code&gt; is called again before the specified time has elapsed, the timer is reset and the entire period must pass again before the target method is called.</source>
          <target state="translated">Retrase la llamada al m&amp;eacute;todo de destino hasta que haya transcurrido el per&amp;iacute;odo antirrebote sin llamadas antirrebote adicionales. Si se vuelve a llamar a &lt;code&gt;debounce&lt;/code&gt; antes de que haya transcurrido el tiempo especificado, el temporizador se reinicia y el per&amp;iacute;odo completo debe pasar de nuevo antes de que se llame al m&amp;eacute;todo de destino.</target>
        </trans-unit>
        <trans-unit id="6f55c35c2841c14deb04e9cdcbfb136babcf8f8b" translate="yes" xml:space="preserve">
          <source>Delegated properties can be bound to and will change when content is updated.</source>
          <target state="translated">Las propiedades delegadas pueden ser vinculadas y cambiarán cuando se actualice el contenido.</target>
        </trans-unit>
        <trans-unit id="f6fdbe48dc54dd86f63097a03bd24094dedd713a" translate="yes" xml:space="preserve">
          <source>Delete</source>
          <target state="translated">Delete</target>
        </trans-unit>
        <trans-unit id="907e783b0342a83203d67d0431b3641fb64ed736" translate="yes" xml:space="preserve">
          <source>Delete &lt;code&gt;postRecord.destroyRecord()&lt;/code&gt;</source>
          <target state="translated">Eliminar &lt;code&gt;postRecord.destroyRecord()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8867ec80db096728c17662440034aca8e41390c5" translate="yes" xml:space="preserve">
          <source>Delete `postRecord.destroyRecord()`</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d0100454a85c628231b0e75af94c719e0554ed1" translate="yes" xml:space="preserve">
          <source>Deleting Records</source>
          <target state="translated">Eliminación de registros</target>
        </trans-unit>
        <trans-unit id="aa64dfaadd5df06565c7755f32130e5641e48407" translate="yes" xml:space="preserve">
          <source>Deleting records is as straightforward as creating records. Call &lt;a href=&quot;http://emberjs.com/api/data/classes/DS.Model.html#method_deleteRecord&quot;&gt;&lt;code&gt;deleteRecord()&lt;/code&gt;&lt;/a&gt; on any instance of &lt;code&gt;DS.Model&lt;/code&gt;. This flags the record as &lt;code&gt;isDeleted&lt;/code&gt;. The deletion can then be persisted using &lt;code&gt;save()&lt;/code&gt;. Alternatively, you can use the &lt;a href=&quot;http://emberjs.com/api/data/classes/DS.Model.html#method_destroyRecord&quot;&gt;&lt;code&gt;destroyRecord&lt;/code&gt;&lt;/a&gt; method to delete and persist at the same time.</source>
          <target state="translated">Eliminar registros es tan sencillo como crear registros. Llame a &lt;a href=&quot;http://emberjs.com/api/data/classes/DS.Model.html#method_deleteRecord&quot;&gt; &lt;code&gt;deleteRecord()&lt;/code&gt; &lt;/a&gt; en cualquier instancia de &lt;code&gt;DS.Model&lt;/code&gt; . Esto marca el registro como &lt;code&gt;isDeleted&lt;/code&gt; . La eliminaci&amp;oacute;n puede persistir usando &lt;code&gt;save()&lt;/code&gt; . Alternativamente, puede usar el m&amp;eacute;todo &lt;a href=&quot;http://emberjs.com/api/data/classes/DS.Model.html#method_destroyRecord&quot;&gt; &lt;code&gt;destroyRecord&lt;/code&gt; &lt;/a&gt; para eliminar y persistir al mismo tiempo.</target>
        </trans-unit>
        <trans-unit id="ed56c29ba07d9bebc6dce7acbeaf82456fdc7dec" translate="yes" xml:space="preserve">
          <source>Deleting records is as straightforward as creating records. Call &lt;a href=&quot;https://api.emberjs.com/ember-data/release/classes/Model/methods#deleteRecord&quot;&gt;&lt;code&gt;deleteRecord()&lt;/code&gt;&lt;/a&gt; on any instance of &lt;code&gt;Model&lt;/code&gt;. This flags the record as &lt;code&gt;isDeleted&lt;/code&gt;. The deletion can then be persisted using &lt;code&gt;save()&lt;/code&gt;. Alternatively, you can use the &lt;a href=&quot;https://api.emberjs.com/ember-data/release/classes/Model/methods#destroyRecord&quot;&gt;&lt;code&gt;destroyRecord&lt;/code&gt;&lt;/a&gt; method to delete and persist at the same time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4295cbc7445a6fd6c39d2e93e549524e0964ba30" translate="yes" xml:space="preserve">
          <source>Demo.</source>
          <target state="translated">Demo.</target>
        </trans-unit>
        <trans-unit id="0562f32dc56f5c702810cbe010068ddd38dbd69a" translate="yes" xml:space="preserve">
          <source>Dependencies</source>
          <target state="translated">Dependencies</target>
        </trans-unit>
        <trans-unit id="3aefbe2f210572802298b2ad0347dc9e423d2690" translate="yes" xml:space="preserve">
          <source>Dependency Injection</source>
          <target state="translated">Inyección de dependencia</target>
        </trans-unit>
        <trans-unit id="e5934a18dc17bf4af5f11772a5eecd4af8a276e5" translate="yes" xml:space="preserve">
          <source>Dependency injections can also be declared directly on Ember classes using &lt;code&gt;Ember.inject&lt;/code&gt;. Currently, &lt;code&gt;Ember.inject&lt;/code&gt; supports injecting controllers (via &lt;code&gt;Ember.inject.controller&lt;/code&gt;) and services (via &lt;code&gt;Ember.inject.service&lt;/code&gt;).</source>
          <target state="translated">Las inyecciones de dependencia tambi&amp;eacute;n se pueden declarar directamente en las clases de Ember usando &lt;code&gt;Ember.inject&lt;/code&gt; . Actualmente, &lt;code&gt;Ember.inject&lt;/code&gt; admite la inyecci&amp;oacute;n de controladores (a trav&amp;eacute;s de &lt;code&gt;Ember.inject.controller&lt;/code&gt; ) y servicios (a trav&amp;eacute;s de &lt;code&gt;Ember.inject.service&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="b8f5554c40d725d297c7971f77ec993237873880" translate="yes" xml:space="preserve">
          <source>Dependency injections can also be declared directly on Ember classes using &lt;code&gt;inject&lt;/code&gt;. Currently, &lt;code&gt;inject&lt;/code&gt; supports injecting controllers (via &lt;code&gt;import { inject } from '@ember/controller';&lt;/code&gt;) and services (via &lt;code&gt;import { inject } from '@ember/service';&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ef76ee671f791215cbf8ad6b846262ce9adfe7b" translate="yes" xml:space="preserve">
          <source>Dependency keys have no effect on volatile properties as they are for cache invalidation and notification when cached value is invalidated.</source>
          <target state="translated">Las claves de dependencia no tienen ningún efecto sobre las propiedades volátiles,ya que son para la invalidación de la caché y la notificación cuando se invalida el valor de la caché.</target>
        </trans-unit>
        <trans-unit id="e737a090242c9d0342d3b7cea16bdfa684be6790" translate="yes" xml:space="preserve">
          <source>Deploying</source>
          <target state="translated">Deploying</target>
        </trans-unit>
        <trans-unit id="09f950c19f5517134d2742f474ecf5990e1fc4ce" translate="yes" xml:space="preserve">
          <source>Deploying to Netlify using Git (specifically GitHub)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3f8ae2cabfcc7f45cdeb0586b9f7c7a526f73f0" translate="yes" xml:space="preserve">
          <source>Deploying to Netlify using drag and drop</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6b35d491102fe1492667467875d49cff64fe20b" translate="yes" xml:space="preserve">
          <source>Deploying to surge.sh</source>
          <target state="translated">Desplegándose a surge.sh</target>
        </trans-unit>
        <trans-unit id="59e35105cb013ad2e00e3f75ff96f0b8930870f3" translate="yes" xml:space="preserve">
          <source>Deploying with scp</source>
          <target state="translated">Desplegando con scp</target>
        </trans-unit>
        <trans-unit id="db1927201c49dc304bade1dd9b3a8383e89e8deb" translate="yes" xml:space="preserve">
          <source>Deploying your app to Netlify</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1eee62fd5647920b64a71e39936c3e47072f2ef8" translate="yes" xml:space="preserve">
          <source>Deploying your app to Netlify.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ee2f057911534559aa980409648126811612543" translate="yes" xml:space="preserve">
          <source>Deprecation Handling in Ember Inspector</source>
          <target state="translated">Manejo de la depredación en el Inspector Ember</target>
        </trans-unit>
        <trans-unit id="a8c62f497d751a4289da9a815fc0b6c665654a8a" translate="yes" xml:space="preserve">
          <source>Deprecation Workflow</source>
          <target state="translated">Flujo de trabajo de depreciación</target>
        </trans-unit>
        <trans-unit id="34730e9bbd5c0ba7b7655973316eed44e39da85f" translate="yes" xml:space="preserve">
          <source>Deprecations</source>
          <target state="translated">Deprecations</target>
        </trans-unit>
        <trans-unit id="cacb15ce5da6de7282484c5712721d4bcf86ceed" translate="yes" xml:space="preserve">
          <source>Deprecations that matter for Octane</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df7237ae1b6223b18d776eb47eb59a2d3f95c841" translate="yes" xml:space="preserve">
          <source>Describes the expectation. This will become the text of the Error thrown if the assertion fails.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b409d2f978417749b80e17e39c0ca01376f2c97a" translate="yes" xml:space="preserve">
          <source>Descriptor</source>
          <target state="translated">Descriptor</target>
        </trans-unit>
        <trans-unit id="59b035367211a9382930b2a4c13637dbc33c4f32" translate="yes" xml:space="preserve">
          <source>Design</source>
          <target state="translated">Design</target>
        </trans-unit>
        <trans-unit id="ab146a1650fef1a944e534c2c75a7b6bf43f2f19" translate="yes" xml:space="preserve">
          <source>Designing the Action</source>
          <target state="translated">Diseñando la acción</target>
        </trans-unit>
        <trans-unit id="d49748bfcebe73462144512662b4e42f301ab437" translate="yes" xml:space="preserve">
          <source>Designing the Child Component</source>
          <target state="translated">El diseño del componente infantil</target>
        </trans-unit>
        <trans-unit id="94312445402335ec83f5239d1454753cf4723026" translate="yes" xml:space="preserve">
          <source>Destroy all objects in the container</source>
          <target state="translated">Destruir todos los objetos del contenedor</target>
        </trans-unit>
        <trans-unit id="cdc692fd3611c52b3884e0668c92f8e4e969f39f" translate="yes" xml:space="preserve">
          <source>Destroyed object property flag.</source>
          <target state="translated">Destruyó la bandera de propiedad del objeto.</target>
        </trans-unit>
        <trans-unit id="32e71571975568b3ba9ba6b1c458e5d1851329fc" translate="yes" xml:space="preserve">
          <source>Destroys an object by setting the &lt;code&gt;isDestroyed&lt;/code&gt; flag and removing its metadata, which effectively destroys observers and bindings.</source>
          <target state="translated">Destruye un objeto estableciendo la &lt;code&gt;isDestroyed&lt;/code&gt; y eliminando sus metadatos, lo que efectivamente destruye observadores y enlaces.</target>
        </trans-unit>
        <trans-unit id="aa2625d3d8d891265f4ba5c6381823d802d6e2a4" translate="yes" xml:space="preserve">
          <source>Destruction scheduled flag. The &lt;code&gt;destroy()&lt;/code&gt; method has been called.</source>
          <target state="translated">Bandera de destrucci&amp;oacute;n programada. Se ha llamado al m&amp;eacute;todo &lt;code&gt;destroy()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1a3ea622564281e6df5303794676452e2f0e5f11" translate="yes" xml:space="preserve">
          <source>Destruction via &lt;code&gt;destroy()&lt;/code&gt; follows these steps:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="917dbbdfb6c8dac4687bf695f888f7fdf35afe65" translate="yes" xml:space="preserve">
          <source>Destructuring Objects Passed as Action Arguments</source>
          <target state="translated">Los objetos destructores pasan como argumentos de acción</target>
        </trans-unit>
        <trans-unit id="1576e5de418de4b3bc2b20ffc5a7e01ffe480b29" translate="yes" xml:space="preserve">
          <source>Detaching and Tearing Down Component Elements with &lt;code&gt;willDestroyElement&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;willDestroyElement&lt;/code&gt; y desmontaje de elementos componentes con willDestroyElement</target>
        </trans-unit>
        <trans-unit id="44077f29930fde233bdc6c36ecef94efb1b769f8" translate="yes" xml:space="preserve">
          <source>Detect whether a class is a model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71a4b30ce1c93b4f10f2ce4336198361dcdc1480" translate="yes" xml:space="preserve">
          <source>Detects if a string was decorated using &lt;code&gt;Ember.String.htmlSafe&lt;/code&gt;.</source>
          <target state="translated">Detecta si una cadena se decor&amp;oacute; con &lt;code&gt;Ember.String.htmlSafe&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f307ddb6771c5b9e4087df6d7273b7006adcb04b" translate="yes" xml:space="preserve">
          <source>Detects if a string was decorated using &lt;code&gt;htmlSafe&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6217e018d9690530f35e93f5b181567efb1b0e8" translate="yes" xml:space="preserve">
          <source>Determine whether the specified &lt;code&gt;feature&lt;/code&gt; is enabled. Used by Ember's build tools to exclude experimental features from beta/stable builds.</source>
          <target state="translated">Determine si la &lt;code&gt;feature&lt;/code&gt; especificada est&amp;aacute; habilitada. Utilizado por las herramientas de compilaci&amp;oacute;n de Ember para excluir caracter&amp;iacute;sticas experimentales de compilaciones beta / estables.</target>
        </trans-unit>
        <trans-unit id="9497909fed04d80e5b1397a93c701071209baaa9" translate="yes" xml:space="preserve">
          <source>Determines if the helper has a destroyable to include in the destructor hierarchy. If enabled, the &lt;code&gt;getDestroyable&lt;/code&gt; hook will be called, and its result will be associated with the destroyable parent block.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="747bfdf716ccb2cfb269f0830e8963cde91673df" translate="yes" xml:space="preserve">
          <source>Determines if the helper has a value which can be used externally. The helper's &lt;code&gt;getValue&lt;/code&gt; hook will be run whenever the value of the helper is accessed if this capability is enabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47c1d0846c0eee9f0a9b57d8e1dbd3b0a07ed8ba" translate="yes" xml:space="preserve">
          <source>Determines the pathname for a given type.</source>
          <target state="translated">Determina la ruta de un tipo determinado.</target>
        </trans-unit>
        <trans-unit id="d995d3acf0905aa37c363e614fdf633df81247d4" translate="yes" xml:space="preserve">
          <source>Determines whether Ember should add to &lt;code&gt;Array&lt;/code&gt;, &lt;code&gt;Function&lt;/code&gt;, and &lt;code&gt;String&lt;/code&gt; native object prototypes, a few extra methods in order to provide a more friendly API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a6bb50fe7409535e288a8bf60d13d6136ee81f3" translate="yes" xml:space="preserve">
          <source>Determines whether a route is active.</source>
          <target state="translated">Determina si una ruta está activa.</target>
        </trans-unit>
        <trans-unit id="238d33853587f87308b0dd503b7656327797337c" translate="yes" xml:space="preserve">
          <source>Determines whether the &lt;code&gt;LinkComponent&lt;/code&gt; will trigger routing via the &lt;code&gt;replaceWith&lt;/code&gt; routing strategy.</source>
          <target state="translated">Determina si &lt;code&gt;LinkComponent&lt;/code&gt; activar&amp;aacute; el enrutamiento a trav&amp;eacute;s de la estrategia de enrutamiento &lt;code&gt;replaceWith&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b62b81b826164854f939b55515f8facc9973fbae" translate="yes" xml:space="preserve">
          <source>Development Helpers</source>
          <target state="translated">Ayudantes de desarrollo</target>
        </trans-unit>
        <trans-unit id="14a37ec9b5718abce3a1c9ada986d1bc7f32ea3a" translate="yes" xml:space="preserve">
          <source>Different apps may have very different models, depending on what problems they're trying to solve. For example, a photo sharing application might have a &lt;code&gt;Photo&lt;/code&gt; model to represent a particular photo, and a &lt;code&gt;PhotoAlbum&lt;/code&gt; that represents a group of photos. In contrast, an online shopping app would probably have different models, like &lt;code&gt;ShoppingCart&lt;/code&gt;, &lt;code&gt;Invoice&lt;/code&gt;, or &lt;code&gt;LineItem&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a4eb664e58ad5c0c69f787efbf78b1ca8325ba5" translate="yes" xml:space="preserve">
          <source>Digital accessibility regulations vary from country to country, but most at least point to the &lt;a href=&quot;https://www.w3.org/WAI/&quot;&gt;WAI-ARIA&lt;/a&gt; specification for compliance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4231962edb9e8518287ecb041570a1708d6378b" translate="yes" xml:space="preserve">
          <source>Direct manipulation of &lt;code&gt;checked&lt;/code&gt;</source>
          <target state="translated">Manipulaci&amp;oacute;n directa de &lt;code&gt;checked&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="99946884377a9fee47f0a9dadc16a697de435a38" translate="yes" xml:space="preserve">
          <source>Directory Structure</source>
          <target state="translated">Estructura del directorio</target>
        </trans-unit>
        <trans-unit id="37ac9a91b252b9a5f8fb42735599f21ca4b7eaff" translate="yes" xml:space="preserve">
          <source>Disable rendering completely.</source>
          <target state="translated">Deshabilitar la representación completamente.</target>
        </trans-unit>
        <trans-unit id="367a3d2993becd19e79f505935d8ef8aa5385f40" translate="yes" xml:space="preserve">
          <source>Disabling Prototype Extensions</source>
          <target state="translated">Desactivando las extensiones de los prototipos</target>
        </trans-unit>
        <trans-unit id="f378a79b9bc753bc2dee2164e11b8ae453be09d3" translate="yes" xml:space="preserve">
          <source>Disabling URL Management</source>
          <target state="translated">Desactivando la administración de URL</target>
        </trans-unit>
        <trans-unit id="dc7dbf004afd4a8483633185bcdb4f42c2f27f86" translate="yes" xml:space="preserve">
          <source>Disabling the &lt;code&gt;link-to&lt;/code&gt; component</source>
          <target state="translated">Deshabilitar el componente de &lt;code&gt;link-to&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bfbb1a4c307b058729177180bc8abc9f5501b0ff" translate="yes" xml:space="preserve">
          <source>Discards any unsaved changes to the given attribute. This feature is not enabled by default. You must enable &lt;code&gt;ds-rollback-attribute&lt;/code&gt; and be running a canary build.</source>
          <target state="translated">Descarta cualquier cambio no guardado en el atributo dado. Esta funci&amp;oacute;n no est&amp;aacute; habilitada de forma predeterminada. Debe habilitar &lt;code&gt;ds-rollback-attribute&lt;/code&gt; y ejecutar una compilaci&amp;oacute;n canary.</target>
        </trans-unit>
        <trans-unit id="a3d716130aad8bda0a7fa10e31cd23144a492a44" translate="yes" xml:space="preserve">
          <source>Disconnects a view that has been rendered into an outlet.</source>
          <target state="translated">Desconecta una vista que se ha convertido en una salida.</target>
        </trans-unit>
        <trans-unit id="adff59920688f75021d7cbe8caea7d8ce3c81d2c" translate="yes" xml:space="preserve">
          <source>Display Maps With a Component</source>
          <target state="translated">Mostrar los mapas con un componente</target>
        </trans-unit>
        <trans-unit id="d24937b5b5ee15306389efce10f84cc172d6767d" translate="yes" xml:space="preserve">
          <source>Display a debug notice.</source>
          <target state="translated">Mostrar un aviso de depuración.</target>
        </trans-unit>
        <trans-unit id="9b393131bc34ae40c8366c09e8e7ac91ef72a22a" translate="yes" xml:space="preserve">
          <source>Display a deprecation warning with the provided message and a stack trace (Chrome and Firefox only).</source>
          <target state="translated">Mostrar una advertencia de deprecación con el mensaje proporcionado y un rastro de la pila (sólo en Chrome y Firefox).</target>
        </trans-unit>
        <trans-unit id="74dff7e47ad84a1e7e0fbe8d937dba188a469635" translate="yes" xml:space="preserve">
          <source>Display a warning with the provided message.</source>
          <target state="translated">Mostrar una advertencia con el mensaje proporcionado.</target>
        </trans-unit>
        <trans-unit id="14a211d406cb54078dc051d2516433df1049f018" translate="yes" xml:space="preserve">
          <source>Displaying Properties</source>
          <target state="translated">Mostrando las propiedades</target>
        </trans-unit>
        <trans-unit id="06dff54a410dab575a68ff666e82fed47f1dbbf4" translate="yes" xml:space="preserve">
          <source>Displaying a List of Items</source>
          <target state="translated">Visualización de una lista de artículos</target>
        </trans-unit>
        <trans-unit id="2676a10004d97630855ca7e273863a19a706b61f" translate="yes" xml:space="preserve">
          <source>Displaying the Keys in an Object</source>
          <target state="translated">Mostrar las claves de un objeto</target>
        </trans-unit>
        <trans-unit id="d29084618734a0c2eea0f8b2f8c7a75a5a2115b7" translate="yes" xml:space="preserve">
          <source>Do note that each app instance maintains their own registry/container, so they will run in complete isolation by default.</source>
          <target state="translated">Tenga en cuenta que cada instancia de aplicación mantiene su propio registro/contenedor,por lo que se ejecutarán de forma completamente aislada por defecto.</target>
        </trans-unit>
        <trans-unit id="601126261dc4a73a132f136b523d5aba047d64e6" translate="yes" xml:space="preserve">
          <source>Doing this allows us to simplify the original template like so:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd30c53bdc0a778d3f7beb6c8bbdfd04d1d70981" translate="yes" xml:space="preserve">
          <source>Don't have npm? &lt;a href=&quot;https://docs.npmjs.com/getting-started/installing-node&quot;&gt;Learn how to install Node.js and npm here&lt;/a&gt;. For a full list of dependencies necessary for an Ember CLI project, consult our &lt;a href=&quot;https://guides.emberjs.com/getting-started/&quot;&gt;Installing Ember&lt;/a&gt; guide.</source>
          <target state="translated">&amp;iquest;No tienes npm? &lt;a href=&quot;https://docs.npmjs.com/getting-started/installing-node&quot;&gt;Aprenda a instalar Node.js y npm aqu&amp;iacute;&lt;/a&gt; . Para obtener una lista completa de las dependencias necesarias para un proyecto CLI de Ember, consulte nuestra gu&amp;iacute;a de &lt;a href=&quot;https://guides.emberjs.com/getting-started/&quot;&gt;instalaci&amp;oacute;n de Ember&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="184ffd13d87df53678a7729b1dc65187f62aa662" translate="yes" xml:space="preserve">
          <source>Don't have npm? &lt;a href=&quot;https://docs.npmjs.com/getting-started/installing-node&quot;&gt;Learn how to install Node.js and npm here&lt;/a&gt;. For a full list of dependencies necessary for an Ember CLI project, visit the &lt;a href=&quot;https://cli.emberjs.com/release/basic-use/&quot;&gt;Ember CLI Guides - Installing&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="383217db62d0e96a7e70dcd1e5ec1cb6f03def00" translate="yes" xml:space="preserve">
          <source>Drag and drop events:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65968f0badc72224db501308c0905f984ce4e918" translate="yes" xml:space="preserve">
          <source>Due to the expense of array comparisons, collections will never be equal to each other even if each of their items are equal to each other.</source>
          <target state="translated">Debido al gasto que suponen las comparaciones de matrices,las colecciones nunca serán iguales entre sí,aunque cada uno de sus elementos sea igual a los demás.</target>
        </trans-unit>
        <trans-unit id="c5de642fd9309f71daa03b344eae4590100c50cc" translate="yes" xml:space="preserve">
          <source>Due to the way JS Bin uses iframes, the Inspector doesn't work with edit mode. To use the Inspector with JS Bin, switch to the &quot;live preview&quot; mode by clicking on the arrow circled below.</source>
          <target state="translated">Debido a la forma en que JS Bin utiliza los iframes,el Inspector no trabaja con el modo de edición.Para usar el Inspector con JS Bin,cambie al modo de &quot;vista previa en vivo&quot; haciendo clic en la flecha que se encuentra debajo.</target>
        </trans-unit>
        <trans-unit id="cc4c2dbd476f61255b537fe8d6a11f61187ea685" translate="yes" xml:space="preserve">
          <source>Due to their limited network connectivity and CPU power, great performance on mobile devices rarely comes for free. You should integrate performance testing into your development workflow from the beginning. This will help you avoid making costly architectural mistakes that are much harder to fix if you only notice them once your app is nearly complete.</source>
          <target state="translated">Debido a su limitada conectividad de red y potencia de la CPU,el gran rendimiento de los dispositivos móviles rara vez es gratuito.Debería integrar las pruebas de rendimiento en su flujo de trabajo de desarrollo desde el principio.Esto le ayudará a evitar cometer costosos errores de arquitectura que son mucho más difíciles de corregir si sólo los nota una vez que su aplicación está casi terminada.</target>
        </trans-unit>
        <trans-unit id="1370004da76fa4f3b7a5180fd5436065ef4c7d5b" translate="yes" xml:space="preserve">
          <source>Duration</source>
          <target state="translated">Duration</target>
        </trans-unit>
        <trans-unit id="9dee214ba943b1b5975aeb2395d6991ad2030020" translate="yes" xml:space="preserve">
          <source>During a route transition, the Ember Router passes a transition object to the various hooks on the routes involved in the transition. Any hook that has access to this transition object has the ability to immediately abort the transition by calling &lt;code&gt;transition.abort()&lt;/code&gt;, and if the transition object is stored, it can be re-attempted at a later time by calling &lt;code&gt;transition.retry()&lt;/code&gt;.</source>
          <target state="translated">Durante una transici&amp;oacute;n de ruta, el enrutador Ember pasa un objeto de transici&amp;oacute;n a los distintos ganchos de las rutas involucradas en la transici&amp;oacute;n. Cualquier gancho que tenga acceso a este objeto de transici&amp;oacute;n tiene la capacidad de abortar inmediatamente la transici&amp;oacute;n llamando a &lt;code&gt;transition.abort()&lt;/code&gt; , y si el objeto de transici&amp;oacute;n est&amp;aacute; almacenado, se puede volver a intentar en un momento posterior llamando a &lt;code&gt;transition.retry()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8d834ca3b12373d8e03ac115d1a9a23e41757b42" translate="yes" xml:space="preserve">
          <source>During development, add Ember.js specific extensions to your code editor for added functionality. Below is a list of some of the extensions available, many of which are created and maintained by the developer community:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea23811db97b8961262c8005387b23871ee3bb99" translate="yes" xml:space="preserve">
          <source>During iteration, the index of each item in the array is provided as a second block param. Block params are space-separated, without commas. For example:</source>
          <target state="translated">Durante la iteración,el índice de cada elemento de la matriz se proporciona como un segundo parametro de bloque.Los parámetros de bloque están separados por el espacio,sin comas.Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="978f14629415bf769be720d8a2ee56464c683409" translate="yes" xml:space="preserve">
          <source>During iteration, the index of each item in the array is provided as a second block parameter.</source>
          <target state="translated">Durante la iteración,el índice de cada elemento de la matriz se proporciona como un segundo parámetro de bloque.</target>
        </trans-unit>
        <trans-unit id="41476b5ff3ef74a3359490a29c2fcdf852e76665" translate="yes" xml:space="preserve">
          <source>During the &lt;code&gt;beforeModel&lt;/code&gt;, &lt;code&gt;model&lt;/code&gt;, and &lt;code&gt;afterModel&lt;/code&gt; hooks, data may take some time to load. Technically, the router pauses the transition until the promises returned from each hook fulfill.</source>
          <target state="translated">Durante los &lt;code&gt;beforeModel&lt;/code&gt; , &lt;code&gt;model&lt;/code&gt; y &lt;code&gt;afterModel&lt;/code&gt; , los datos pueden tardar un tiempo en cargarse. T&amp;eacute;cnicamente, el enrutador detiene la transici&amp;oacute;n hasta que se cumplen las promesas devueltas de cada gancho.</target>
        </trans-unit>
        <trans-unit id="dbd3f76981507ecaccd56410d969be2eb0b8dc68" translate="yes" xml:space="preserve">
          <source>During the development of your tests or when you refactor your application's code, the execution of your tests may fail. In order to help you understand why, &lt;a href=&quot;https://github.com/emberjs/ember-test-helpers/blob/master/API.md#pausetest&quot;&gt;&lt;code&gt;pauseTest()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://github.com/emberjs/ember-test-helpers/blob/master/API.md#resumetest&quot;&gt;&lt;code&gt;resumeTest()&lt;/code&gt;&lt;/a&gt; can help you.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="148bde726835af7c4334b2a56d36dc634c2457ca" translate="yes" xml:space="preserve">
          <source>Dynamic Models</source>
          <target state="translated">Modelos dinámicos</target>
        </trans-unit>
        <trans-unit id="f68c1eed8a5b13c48c7ec75c21b7357e122568cd" translate="yes" xml:space="preserve">
          <source>Dynamic Segments</source>
          <target state="translated">Segmentos dinámicos</target>
        </trans-unit>
        <trans-unit id="de500d252dcb2472c90753e930dae9d24879d1ad" translate="yes" xml:space="preserve">
          <source>Dynamic content inside a Handlebars expression is rendered with data-binding. This means if you update a property, your usage of that property in a template will be automatically updated to the latest value.</source>
          <target state="translated">El contenido dinámico dentro de una expresión del manubrio se renderiza con la vinculación de datos.Esto significa que si actualiza una propiedad,su uso de esa propiedad en una plantilla se actualizará automáticamente al último valor.</target>
        </trans-unit>
        <trans-unit id="f23924d64f30f4b012549b77aaa2c1de429b8a81" translate="yes" xml:space="preserve">
          <source>Dynamic updating</source>
          <target state="translated">Actualización dinámica</target>
        </trans-unit>
        <trans-unit id="be8e661508314a044956e4608bf23fb3f8d64328" translate="yes" xml:space="preserve">
          <source>Dynamically look up a property on an object. The second argument to &lt;code&gt;{{get}}&lt;/code&gt; should have a string value, although it can be bound.</source>
          <target state="translated">Busque din&amp;aacute;micamente una propiedad en un objeto. El segundo argumento de &lt;code&gt;{{get}}&lt;/code&gt; deber&amp;iacute;a tener un valor de cadena, aunque se puede vincular.</target>
        </trans-unit>
        <trans-unit id="3ac0a120345370f8f3cbc24679ca1cb8d75d98e8" translate="yes" xml:space="preserve">
          <source>Dynamically rendering a component</source>
          <target state="translated">La representación dinámica de un componente</target>
        </trans-unit>
        <trans-unit id="6d85b2d399967a027efc0d611a548da5bc48a920" translate="yes" xml:space="preserve">
          <source>ECMAScript</source>
          <target state="translated">ECMAScript</target>
        </trans-unit>
        <trans-unit id="de82c444bfce325bd727348d79d035eeb7adcdd0" translate="yes" xml:space="preserve">
          <source>ES stands for ECMAScript, which is the specification that JavaScript is based on. The number that follows is the version of the specification.</source>
          <target state="translated">ES significa ECMAScript,que es la especificación en la que se basa JavaScript.El número que sigue es la versión de la especificación.</target>
        </trans-unit>
        <trans-unit id="3111e1df8b9251c7edde3fe679904728f174443a" translate="yes" xml:space="preserve">
          <source>ES2015 features via Babel.</source>
          <target state="translated">ES2015 se presenta a través de Babel.</target>
        </trans-unit>
        <trans-unit id="c64fd6bb0d42e0db2c31bcb1496af22f477a511b" translate="yes" xml:space="preserve">
          <source>ES3, ES5, ES5.1, ES6 (aka ES2015), etc</source>
          <target state="translated">ES3,ES5,ES5.1,ES6 (alias ES2015),etc.</target>
        </trans-unit>
        <trans-unit id="609447fda1e98fc9a10c5a8b451be6650aee6318" translate="yes" xml:space="preserve">
          <source>ES5 support</source>
          <target state="translated">Soporte de ES5</target>
        </trans-unit>
        <trans-unit id="f9d8a7611370241de60b894de016326924a7a9e7" translate="yes" xml:space="preserve">
          <source>ES6 Modules</source>
          <target state="translated">Módulos ES6</target>
        </trans-unit>
        <trans-unit id="ffbb0e3823e33fe63c570b6b9e20d944754cf818" translate="yes" xml:space="preserve">
          <source>ES6 support</source>
          <target state="translated">Soporte de ES6</target>
        </trans-unit>
        <trans-unit id="8e2e8d7697b7c17ffeb334ec9b74abede936ddd4" translate="yes" xml:space="preserve">
          <source>EXTEND_PROTOTYPES</source>
          <target state="translated">EXTEND_PROTOTYPES</target>
        </trans-unit>
        <trans-unit id="ffc4ebd77a7eb1f517a0e2179413f9d0876746e3" translate="yes" xml:space="preserve">
          <source>EXTEND_PROTOTYPESpublic</source>
          <target state="translated">EXTEND_PROTOTYPESpublic</target>
        </trans-unit>
        <trans-unit id="93ec056a102c44f17369e86a7a549e892aa06cea" translate="yes" xml:space="preserve">
          <source>Each &lt;a href=&quot;https://guides.emberjs.com/v2.12.0/templates/writing-helpers/#toc_helper-arguments&quot;&gt;argument&lt;/a&gt; in the helper will be added to an array and passed to our helper. For example, &lt;code&gt;{{my-helper &quot;foo&quot; &quot;bar&quot;}}&lt;/code&gt; would result in &lt;code&gt;myHelper([&quot;foo&quot;, &quot;bar&quot;])&lt;/code&gt;. Using array &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment&quot;&gt;ES2015 destructuring&lt;/a&gt; assignment, we can name expected parameters within the array. In the example above, the first argument in the template will be assigned to &lt;code&gt;propertyType&lt;/code&gt;. This provides a flexible, expressive interface for your helpers, including optional arguments and default values.</source>
          <target state="translated">Cada &lt;a href=&quot;https://guides.emberjs.com/v2.12.0/templates/writing-helpers/#toc_helper-arguments&quot;&gt;argumento&lt;/a&gt; del ayudante se agregar&amp;aacute; a una matriz y se pasar&amp;aacute; a nuestro ayudante. Por ejemplo, &lt;code&gt;{{my-helper &quot;foo&quot; &quot;bar&quot;}}&lt;/code&gt; dar&amp;iacute;a como resultado &lt;code&gt;myHelper([&quot;foo&quot;, &quot;bar&quot;])&lt;/code&gt; . Usando la asignaci&amp;oacute;n de &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment&quot;&gt;desestructuraci&amp;oacute;n de la&lt;/a&gt; matriz ES2015 , podemos nombrar los par&amp;aacute;metros esperados dentro de la matriz. En el ejemplo anterior, el primer argumento de la plantilla se asignar&amp;aacute; a &lt;code&gt;propertyType&lt;/code&gt; . Esto proporciona una interfaz flexible y expresiva para sus ayudantes, incluidos argumentos opcionales y valores predeterminados.</target>
        </trans-unit>
        <trans-unit id="c58b746b3729165f51855597cf42f4febcc63b59" translate="yes" xml:space="preserve">
          <source>Each Ember app has one and only one &lt;code&gt;Application&lt;/code&gt; object. Although Ember CLI creates this object implicitly, the &lt;code&gt;Application&lt;/code&gt; class is defined in the &lt;code&gt;app/app.js&lt;/code&gt;. You can define a &lt;code&gt;ready&lt;/code&gt; method on the &lt;code&gt;Application&lt;/code&gt; class, which will be run by Ember when the application is initialized.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f56ff188f7caee2b686bff16d490623a9d2fa38f" translate="yes" xml:space="preserve">
          <source>Each Ember app has one and only one &lt;code&gt;Ember.Application&lt;/code&gt; object. In fact, the very first thing you should do in your application is create the instance:</source>
          <target state="translated">Cada aplicaci&amp;oacute;n Ember tiene un &amp;uacute;nico objeto &lt;code&gt;Ember.Application&lt;/code&gt; . De hecho, lo primero que debe hacer en su aplicaci&amp;oacute;n es crear la instancia:</target>
        </trans-unit>
        <trans-unit id="033c437e29e38e5d372b3eb9aa152fdc2a475c1a" translate="yes" xml:space="preserve">
          <source>Each component, under the hood, is backed by an element. By default Ember will use a &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; element to contain your component's template. To learn how to change the element Ember uses for your component, see &lt;a href=&quot;../customizing-a-components-element&quot;&gt;Customizing a Component's Element&lt;/a&gt;.</source>
          <target state="translated">Cada componente, debajo del cap&amp;oacute;, est&amp;aacute; respaldado por un elemento. Por defecto, Ember usar&amp;aacute; un elemento &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; para contener la plantilla de su componente. Para saber c&amp;oacute;mo cambiar el elemento que usa Ember para su componente, consulte &lt;a href=&quot;../customizing-a-components-element&quot;&gt;Personalizaci&amp;oacute;n del elemento de un componente&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b5a353aee12771501e4424892e3b968dddb73274" translate="yes" xml:space="preserve">
          <source>Each engine manages a registry that's used for dependency injection and exposed through &lt;code&gt;RegistryProxy&lt;/code&gt;.</source>
          <target state="translated">Cada motor administra un registro que se usa para la inyecci&amp;oacute;n de dependencias y se expone a trav&amp;eacute;s de &lt;code&gt;RegistryProxy&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0e06e260a7e8c0e93cb49653218545f4b3cad340" translate="yes" xml:space="preserve">
          <source>Each location implementation must provide the following methods:</source>
          <target state="translated">La implementación de cada ubicación debe proporcionar los siguientes métodos:</target>
        </trans-unit>
        <trans-unit id="8c18dd65bf8d9a9df3fa9a276baf08bc0ec6250a" translate="yes" xml:space="preserve">
          <source>Each of the following assumes a transition from the application or index route.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b07cd6ff8b89c639fc35cf9911b45132d407d245" translate="yes" xml:space="preserve">
          <source>Each of these request types has a matching store method that triggers it and matching &lt;code&gt;requestType&lt;/code&gt; that is passed to the serializer's &lt;code&gt;normalizeResponse&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a023fe0e42ca9362aaf069c5a5e6be84fdb35ce0" translate="yes" xml:space="preserve">
          <source>Each page (what is rendered for a unique URL) should have a page title. This page title should be unique to that page, and should accurately reflect what that page does.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00d66c69d805a73f324e1fbc71aa128a9f8741b9" translate="yes" xml:space="preserve">
          <source>Each property value in this view is bound to your application, so if the value of a property updates in your app, it will be reflected in the Inspector.</source>
          <target state="translated">Cada valor de propiedad en esta vista está vinculado a su aplicación,por lo que si el valor de una propiedad se actualiza en su aplicación,se reflejará en el Inspector.</target>
        </trans-unit>
        <trans-unit id="759c34271e2fef13ae5896631631a78302162630" translate="yes" xml:space="preserve">
          <source>Each record can have a color that represents its state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8aba78f6eb4d086100577d336fc6b0d447c385af" translate="yes" xml:space="preserve">
          <source>Each record has a &lt;code&gt;currentState&lt;/code&gt; property that explicitly tracks what state a record is in at any given time. For instance, if a record is newly created and has not yet been sent to the adapter to be saved, it would be in the &lt;code&gt;root.loaded.created.uncommitted&lt;/code&gt; state. If a record has had local modifications made to it that are in the process of being saved, the record would be in the &lt;code&gt;root.loaded.updated.inFlight&lt;/code&gt; state. (This state paths will be explained in more detail below.)</source>
          <target state="translated">Cada registro tiene una propiedad &lt;code&gt;currentState&lt;/code&gt; que rastrea expl&amp;iacute;citamente en qu&amp;eacute; estado se encuentra un registro en un momento dado. Por ejemplo, si se acaba de crear un registro y a&amp;uacute;n no se ha enviado al adaptador para guardarlo, estar&amp;aacute; en el estado &lt;code&gt;root.loaded.created.uncommitted&lt;/code&gt; . Si se han realizado modificaciones locales en un registro que est&amp;aacute;n en proceso de guardarse, el registro estar&amp;iacute;a en el estado &lt;code&gt;root.loaded.updated.inFlight&lt;/code&gt; . (Estas rutas de estado se explicar&amp;aacute;n con m&amp;aacute;s detalle a continuaci&amp;oacute;n).</target>
        </trans-unit>
        <trans-unit id="c13e0c519c5b08297794d41e486e9636bdef617a" translate="yes" xml:space="preserve">
          <source>Each route handler has a set of &quot;lifecycle hooks&quot;, which are functions that are invoked at specific times during the loading of a page. The &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Route.html#method_beforeModel&quot;&gt;&lt;code&gt;beforeModel&lt;/code&gt;&lt;/a&gt; hook gets executed before the data gets fetched from the model hook, and before the page is rendered. See &lt;a href=&quot;../model-hook&quot;&gt;the next section&lt;/a&gt; for an explanation of the model hook.</source>
          <target state="translated">Cada controlador de ruta tiene un conjunto de &quot;enlaces de ciclo de vida&quot;, que son funciones que se invocan en momentos espec&amp;iacute;ficos durante la carga de una p&amp;aacute;gina. El gancho &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Route.html#method_beforeModel&quot;&gt; &lt;code&gt;beforeModel&lt;/code&gt; &lt;/a&gt; se ejecuta antes de que los datos se obtengan del gancho del modelo y antes de que se represente la p&amp;aacute;gina. Consulte &lt;a href=&quot;../model-hook&quot;&gt;la siguiente secci&amp;oacute;n&lt;/a&gt; para obtener una explicaci&amp;oacute;n del modelo de gancho.</target>
        </trans-unit>
        <trans-unit id="5d85f1fbb60cb37388257018027133817ca91cd2" translate="yes" xml:space="preserve">
          <source>Each row in the list corresponds to one record. The first four model attributes are shown in the list view. Clicking on the record will open the Object Inspector for that record, and display all attributes.</source>
          <target state="translated">Cada fila de la lista corresponde a un registro.Los primeros cuatro atributos del modelo se muestran en la vista de lista.Al hacer clic en el registro se abrirá el Inspector de Objetos para ese registro,y se mostrarán todos los atributos.</target>
        </trans-unit>
        <trans-unit id="d5e5e449eeef320506ec3771e9f271a83007060e" translate="yes" xml:space="preserve">
          <source>Each serializer will expect the metadata to be returned differently. For example, Ember Data's JSON deserializer looks for a &lt;code&gt;meta&lt;/code&gt; key:</source>
          <target state="translated">Cada serializador esperar&amp;aacute; que los metadatos se devuelvan de manera diferente. Por ejemplo, el deserializador JSON de Ember Data busca una clave &lt;code&gt;meta&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="20cde28b0d95b1da213848951445e3d39dd625fe" translate="yes" xml:space="preserve">
          <source>Each state object will either indicate fulfillment or rejection, and provide the corresponding value or reason. The states will take one of the following formats:</source>
          <target state="translated">Cada objeto de estado indicará el cumplimiento o el rechazo,y proporcionará el valor o la razón correspondiente.Los estados tomarán uno de los siguientes formatos:</target>
        </trans-unit>
        <trans-unit id="083cf6c7a78303527be839ae339327069559775c" translate="yes" xml:space="preserve">
          <source>Each template will be rendered into the &lt;code&gt;{{outlet}}&lt;/code&gt; of its parent route's template. For example, the &lt;code&gt;posts.new&lt;/code&gt; route will render its template into the &lt;code&gt;posts.hbs&lt;/code&gt;'s &lt;code&gt;{{outlet}}&lt;/code&gt;, and the &lt;code&gt;posts&lt;/code&gt; route will render its template into the &lt;code&gt;application.hbs&lt;/code&gt;'s &lt;code&gt;{{outlet}}&lt;/code&gt;.</source>
          <target state="translated">Cada plantilla se representar&amp;aacute; en el &lt;code&gt;{{outlet}}&lt;/code&gt; de la plantilla de su ruta principal. Por ejemplo, el &lt;code&gt;posts.new&lt;/code&gt; ruta har&amp;aacute; que su plantilla en los &lt;code&gt;posts.hbs&lt;/code&gt; 's &lt;code&gt;{{outlet}}&lt;/code&gt; , y los &lt;code&gt;posts&lt;/code&gt; ruta har&amp;aacute; que su plantilla en los &lt;code&gt;application.hbs&lt;/code&gt; ' s &lt;code&gt;{{outlet}}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a2f8170a7a2ce90e4c83aa49476195d9b27d8b72" translate="yes" xml:space="preserve">
          <source>Each test can use the &lt;code&gt;render()&lt;/code&gt; function imported from the &lt;code&gt;@ember/test-helpers&lt;/code&gt; package to create a new instance of the component by declaring the component in template syntax, as we would in our application. Also notice, the keyword &lt;code&gt;await&lt;/code&gt; in front of the call to &lt;code&gt;render&lt;/code&gt;. It allows the test which we marked as &lt;code&gt;async&lt;/code&gt; earlier to wait for any asynchronous behavior to complete before executing the rest of the code below. In this case our first assertion will correctly execute after the component has fully rendered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff937fa50699f308ad42f2e23f14f2faf77a6f60" translate="yes" xml:space="preserve">
          <source>Each test following the &lt;code&gt;moduleForComponent&lt;/code&gt; call has access to the &lt;code&gt;render()&lt;/code&gt; function, which lets us create a new instance of the component by declaring the component in template syntax, as we would in our application.</source>
          <target state="translated">Cada prueba que sigue a la llamada &lt;code&gt;moduleForComponent&lt;/code&gt; tiene acceso a la funci&amp;oacute;n &lt;code&gt;render()&lt;/code&gt; , que nos permite crear una nueva instancia del componente declarando el componente en la sintaxis de la plantilla, como lo har&amp;iacute;amos en nuestra aplicaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="2bf2e46fb2b6784fb150c95293e0cb9ae0ca9815" translate="yes" xml:space="preserve">
          <source>Each time the input to a helper changes, the &lt;code&gt;compute&lt;/code&gt; function will be called again.</source>
          <target state="translated">Cada vez que cambia la entrada a un ayudante, la funci&amp;oacute;n de &lt;code&gt;compute&lt;/code&gt; volver&amp;aacute; a llamar.</target>
        </trans-unit>
        <trans-unit id="220b8b9ce4e2c3a1599a9627f969adf83b70c872" translate="yes" xml:space="preserve">
          <source>Each time this method is called a new request is made through the adapter.</source>
          <target state="translated">Cada vez que se llama este método se hace una nueva petición a través del adaptador.</target>
        </trans-unit>
        <trans-unit id="3cfff4621814cfd59ad9c7149a02f4a6445f6404" translate="yes" xml:space="preserve">
          <source>Edge &amp;amp; Narrator (Windows)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b82013db14431d44c65603435eedcb8a2a4a4e3f" translate="yes" xml:space="preserve">
          <source>Edit the property and press the &lt;code&gt;ENTER&lt;/code&gt; key to commit the change, or &lt;code&gt;ESC&lt;/code&gt; to cancel.</source>
          <target state="translated">Edite la propiedad y presione la tecla &lt;code&gt;ENTER&lt;/code&gt; para confirmar el cambio o &lt;code&gt;ESC&lt;/code&gt; para cancelar.</target>
        </trans-unit>
        <trans-unit id="50474c08262226a9c64678f96f2ed28f2314d9f4" translate="yes" xml:space="preserve">
          <source>Editing Properties</source>
          <target state="translated">Editar las propiedades</target>
        </trans-unit>
        <trans-unit id="4b658c897b4be35f7b2c7498757a1a48eeee946f" translate="yes" xml:space="preserve">
          <source>Embedded records must have a model defined to be extracted and serialized. Note that when defining any relationships on your model such as &lt;code&gt;belongsTo&lt;/code&gt; and &lt;code&gt;hasMany&lt;/code&gt;, you should not both specify &lt;code&gt;async: true&lt;/code&gt; and also indicate through the serializer's &lt;code&gt;attrs&lt;/code&gt; attribute that the related model should be embedded for deserialization. If a model is declared embedded for deserialization (&lt;code&gt;embedded: 'always'&lt;/code&gt; or &lt;code&gt;deserialize: 'records'&lt;/code&gt;), then do not use &lt;code&gt;async: true&lt;/code&gt;.</source>
          <target state="translated">Los registros incrustados deben tener un modelo definido para ser extra&amp;iacute;dos y serializados. Tenga en cuenta que al definir cualquier relaci&amp;oacute;n en su modelo, como &lt;code&gt;belongsTo&lt;/code&gt; y &lt;code&gt;hasMany&lt;/code&gt; , no debe especificar &lt;code&gt;async: true&lt;/code&gt; y tambi&amp;eacute;n indicar a trav&amp;eacute;s del atributo &lt;code&gt;attrs&lt;/code&gt; del serializador que el modelo relacionado debe estar incrustado para la deserializaci&amp;oacute;n. Si un modelo se declara incrustado para la deserializaci&amp;oacute;n ( &lt;code&gt;embedded: 'always'&lt;/code&gt; o &lt;code&gt;deserialize: 'records'&lt;/code&gt; ), no use &lt;code&gt;async: true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="339a978328c271ff976040600e410d31ff32e45a" translate="yes" xml:space="preserve">
          <source>EmbeddedRecordMixin</source>
          <target state="translated">EmbeddedRecordMixin</target>
        </trans-unit>
        <trans-unit id="7a1d859f04edca42c0e174f4853d1aa7b064a095" translate="yes" xml:space="preserve">
          <source>EmbeddedRecordsMixin</source>
          <target state="translated">EmbeddedRecordsMixin</target>
        </trans-unit>
        <trans-unit id="a2be45d0e043c48791a7a6924c1ae6b4db394aa2" translate="yes" xml:space="preserve">
          <source>EmbeddedRecordsMixin Defaults</source>
          <target state="translated">EmbeddedRecordsMixin Defaults</target>
        </trans-unit>
        <trans-unit id="729e6fb7a86f981f6c297834cc8d02b77b0d20ee" translate="yes" xml:space="preserve">
          <source>EmbeddedRecordsMixin defaults</source>
          <target state="translated">EmbeddedRecordsMixin por defecto</target>
        </trans-unit>
        <trans-unit id="098ed2cbcee2dc05730821a0483be90e49bb1702" translate="yes" xml:space="preserve">
          <source>Embedding Applications</source>
          <target state="translated">Aplicaciones de incrustación</target>
        </trans-unit>
        <trans-unit id="20632bc30721b7b1111cc82ebfe4420e4ad7d5d8" translate="yes" xml:space="preserve">
          <source>Ember</source>
          <target state="translated">Ember</target>
        </trans-unit>
        <trans-unit id="e0e225914df148e2621c407cb53bc95d5d509278" translate="yes" xml:space="preserve">
          <source>Ember  (public)</source>
          <target state="translated">Ember (público)</target>
        </trans-unit>
        <trans-unit id="b4c1c434f8631f9ebd128dbea8736a620e6915d8" translate="yes" xml:space="preserve">
          <source>Ember Addons can be installed using &lt;a href=&quot;http://ember-cli.com/extending/#developing-addons-and-blueprints&quot;&gt;Ember CLI&lt;/a&gt; (e.g. &lt;code&gt;ember install ember-cli-sass&lt;/code&gt;). Addons may bring in other dependencies by modifying your project's &lt;code&gt;bower.json&lt;/code&gt; file automatically.</source>
          <target state="translated">Los complementos de Ember se pueden instalar utilizando la &lt;a href=&quot;http://ember-cli.com/extending/#developing-addons-and-blueprints&quot;&gt;CLI de Ember&lt;/a&gt; (por ejemplo, &lt;code&gt;ember install ember-cli-sass&lt;/code&gt; ). Los complementos pueden traer otras dependencias modificando el archivo &lt;code&gt;bower.json&lt;/code&gt; de su proyecto autom&amp;aacute;ticamente.</target>
        </trans-unit>
        <trans-unit id="e4fe3a2069e00ad90dedcfb81a8c89c729aedd66" translate="yes" xml:space="preserve">
          <source>Ember Application Not Detected</source>
          <target state="translated">No se ha detectado la aplicación Ember</target>
        </trans-unit>
        <trans-unit id="db92c2d2268a30e9c3a8b78abd8f219f5f741c12" translate="yes" xml:space="preserve">
          <source>Ember CLI</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24352b6e05fb4d09bc37637f93c07f6b16a54cae" translate="yes" xml:space="preserve">
          <source>Ember CLI Deprecation Sources</source>
          <target state="translated">Fuentes de depreciación de CLI Ember</target>
        </trans-unit>
        <trans-unit id="280d223be0a9b8563f26872d4ba5c9fc491032b7" translate="yes" xml:space="preserve">
          <source>Ember CLI Mirage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="987d87440fae5bcbd1d94cf666c1eaced82ea01e" translate="yes" xml:space="preserve">
          <source>Ember CLI by default uses &lt;a href=&quot;https://babeljs.io/&quot;&gt;Babel.js&lt;/a&gt; to allow you to use tomorrow's JavaScript, today.</source>
          <target state="translated">Ember CLI de forma predeterminada usa &lt;a href=&quot;https://babeljs.io/&quot;&gt;Babel.js&lt;/a&gt; para permitirle usar el JavaScript del ma&amp;ntilde;ana, hoy.</target>
        </trans-unit>
        <trans-unit id="e3a15b98c62725eb23dc59ff5893b75c1051dfa3" translate="yes" xml:space="preserve">
          <source>Ember CLI is built with JavaScript, and requires the most recent LTS version of the &lt;a href=&quot;https://nodejs.org/&quot;&gt;Node.js&lt;/a&gt; runtime. It also requires dependencies fetched via &lt;a href=&quot;https://www.npmjs.com/&quot;&gt;npm&lt;/a&gt;. npm is packaged with Node.js, so if your computer has Node.js installed you are ready to go.</source>
          <target state="translated">Ember CLI est&amp;aacute; construido con JavaScript y requiere la versi&amp;oacute;n LTS m&amp;aacute;s reciente del tiempo de ejecuci&amp;oacute;n de &lt;a href=&quot;https://nodejs.org/&quot;&gt;Node.js. &lt;/a&gt;Tambi&amp;eacute;n requiere que las dependencias se &lt;a href=&quot;https://www.npmjs.com/&quot;&gt;obtengan&lt;/a&gt; mediante npm . npm est&amp;aacute; empaquetado con Node.js, por lo que si su computadora tiene Node.js instalado, est&amp;aacute; listo para comenzar.</target>
        </trans-unit>
        <trans-unit id="d6424bb074fd2488550f852458621b78e95bc292" translate="yes" xml:space="preserve">
          <source>Ember CLI provides a common format called &lt;a href=&quot;#toc_addons&quot;&gt;Ember Addons&lt;/a&gt; for distributing reusable libraries to solve some of these problems. Additionally, you may want to make use of front-end dependencies like a CSS framework or a JavaScript datepicker that aren't specific to Ember apps.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a96fc88c2e9941ab2f43cf2f63849d82712a4d7c" translate="yes" xml:space="preserve">
          <source>Ember CLI ships with support for managing your application's environment. Ember CLI will setup a default environment config file at &lt;code&gt;config/environment&lt;/code&gt;. Here, you can define an &lt;code&gt;ENV&lt;/code&gt; object for each environment, which are currently limited to three: development, test, and production.</source>
          <target state="translated">Ember CLI se env&amp;iacute;a con soporte para administrar el entorno de su aplicaci&amp;oacute;n. Ember CLI configurar&amp;aacute; un archivo de configuraci&amp;oacute;n de entorno predeterminado en &lt;code&gt;config/environment&lt;/code&gt; . Aqu&amp;iacute;, puede definir un objeto &lt;code&gt;ENV&lt;/code&gt; para cada entorno, que actualmente est&amp;aacute; limitado a tres: desarrollo, prueba y producci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="535d1e79da97e1fe02fddddd3f67e2e1e3a44849" translate="yes" xml:space="preserve">
          <source>Ember CLI specifically uses &lt;a href=&quot;https://babeljs.io/&quot;&gt;Babel&lt;/a&gt; via the &lt;a href=&quot;https://github.com/babel/ember-cli-babel&quot;&gt;ember-cli-babel&lt;/a&gt; plugin.</source>
          <target state="translated">Ember CLI usa espec&amp;iacute;ficamente &lt;a href=&quot;https://babeljs.io/&quot;&gt;Babel a&lt;/a&gt; trav&amp;eacute;s del complemento &lt;a href=&quot;https://github.com/babel/ember-cli-babel&quot;&gt;ember-cli-babel&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3fd65aa47d650537dd39f0a6299d2025af57bbc1" translate="yes" xml:space="preserve">
          <source>Ember CLI uses &lt;a href=&quot;https://babeljs.io/&quot;&gt;Babel.js&lt;/a&gt; for the compile step in this process. If you've used Babel before, you know that it comes with a large set of options, including the ability to configure &quot;targets&quot;; i.e. the environments in which your application is expected to run. For example, if your application is embedded in an &lt;a href=&quot;https://www.electronjs.org&quot;&gt;Electron app&lt;/a&gt;, you might only care about compiling for the latest Chromium build. Or if your app targets Enterprise users, you may need to compile your JavaScript to older syntax that runs in IE11.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a96ac56333ee63bb91b4c01647cd5ae52b556f3a" translate="yes" xml:space="preserve">
          <source>Ember CLI uses ECMAScript 2015 (ES2015 for short or previously known as ES6) modules to organize application code. For example, the line &lt;code&gt;import Ember from 'ember';&lt;/code&gt; gives us access to the actual Ember.js library as the variable &lt;code&gt;Ember&lt;/code&gt;. And the &lt;code&gt;import config from
'./config/environment';&lt;/code&gt; line gives us access to our app's configuration data as the variable &lt;code&gt;config&lt;/code&gt;. &lt;code&gt;const&lt;/code&gt; is a way to declare a read-only variable to make sure it is not accidentally reassigned elsewhere. At the end of the file, &lt;code&gt;export default Router;&lt;/code&gt; makes the &lt;code&gt;Router&lt;/code&gt; variable defined in this file available to other parts of the app.</source>
          <target state="translated">Ember CLI utiliza m&amp;oacute;dulos ECMAScript 2015 (ES2015 para abreviar o anteriormente conocido como ES6) para organizar el c&amp;oacute;digo de la aplicaci&amp;oacute;n. Por ejemplo, la l&amp;iacute;nea &lt;code&gt;import Ember from 'ember';&lt;/code&gt; nos da acceso a la biblioteca Ember.js real como la variable &lt;code&gt;Ember&lt;/code&gt; . Y la &lt;code&gt;import config from './config/environment';&lt;/code&gt; line nos da acceso a los datos de configuraci&amp;oacute;n de nuestra aplicaci&amp;oacute;n como la variable &lt;code&gt;config&lt;/code&gt; . &lt;code&gt;const&lt;/code&gt; es una forma de declarar una variable de solo lectura para asegurarse de que no se reasigne accidentalmente en otro lugar. Al final del archivo, &lt;code&gt;export default Router;&lt;/code&gt; hace que la variable &lt;code&gt;Router&lt;/code&gt; definida en este archivo est&amp;eacute; disponible para otras partes de la aplicaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="4000d99a0f20d578d0089d74ba4f813aef803e2d" translate="yes" xml:space="preserve">
          <source>Ember CLI will then generate a handful of files for our component:</source>
          <target state="translated">Ember CLI generará entonces un puñado de archivos para nuestro componente:</target>
        </trans-unit>
        <trans-unit id="7b6f7d13f130ea17ca08d391048ba55f5ef53a38" translate="yes" xml:space="preserve">
          <source>Ember CLI, Ember's command line interface, provides a standard project structure, a set of development tools, and an addon system. This allows Ember developers to focus on building apps rather than building the support structures that make them run. From your command line, a quick &lt;code&gt;ember --help&lt;/code&gt; shows the commands Ember CLI provides. For more information on a specific command, type &lt;code&gt;ember help &amp;lt;command-name&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">Ember CLI, la interfaz de l&amp;iacute;nea de comandos de Ember, proporciona una estructura de proyecto est&amp;aacute;ndar, un conjunto de herramientas de desarrollo y un sistema adicional. Esto permite a los desarrolladores de Ember centrarse en crear aplicaciones en lugar de crear las estructuras de soporte que las hacen funcionar. Desde su l&amp;iacute;nea de comando, una &lt;code&gt;ember --help&lt;/code&gt; r&amp;aacute;pida: ayuda muestra los comandos que proporciona la CLI de Ember. Para obtener m&amp;aacute;s informaci&amp;oacute;n sobre un comando espec&amp;iacute;fico, escriba &lt;code&gt;ember help &amp;lt;command-name&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d52449d4614ed3116d54d77f9d3cb483e2a52b2e" translate="yes" xml:space="preserve">
          <source>Ember Cli</source>
          <target state="translated">Ember Cli</target>
        </trans-unit>
        <trans-unit id="00257260921c6c28dbc6436c1ea9d22042f2db9c" translate="yes" xml:space="preserve">
          <source>Ember Data</source>
          <target state="translated">Datos de Ember</target>
        </trans-unit>
        <trans-unit id="4e9a2c3cff1552914144ba18793ba39c46905344" translate="yes" xml:space="preserve">
          <source>Ember Data &amp;gt; v1.0.0-beta.18 requires string model names to be passed around instead of the actual factories.</source>
          <target state="translated">Ember Data&amp;gt; v1.0.0-beta.18 requiere que se pasen los nombres de los modelos de cadenas en lugar de las f&amp;aacute;bricas reales.</target>
        </trans-unit>
        <trans-unit id="548671d1a64816c6553daa968ff734cd9e7bcef3" translate="yes" xml:space="preserve">
          <source>Ember Data 2.0 Serializer:</source>
          <target state="translated">Serializador Ember Data 2.0:</target>
        </trans-unit>
        <trans-unit id="a5e86e0e08dfe6e3775b239cd87789a909a07698" translate="yes" xml:space="preserve">
          <source>Ember Data Models</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c10789009896b0e19191b25d18c9012854061c18" translate="yes" xml:space="preserve">
          <source>Ember Data can have new JSON transforms registered for use as attributes:</source>
          <target state="translated">Ember Data puede tener nuevas transformaciones JSON registradas para su uso como atributos:</target>
        </trans-unit>
        <trans-unit id="3bbb2c9e9ad8249ca44a98977df16121949507d8" translate="yes" xml:space="preserve">
          <source>Ember Data comes with several built-in adapters. Feel free to use these adapters as a starting point for creating your own custom adapter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6432969d75272b39cc0b54619eaedfc66b4311b4" translate="yes" xml:space="preserve">
          <source>Ember Data example</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6da63d3b19ea0d0a73e33aa7ba1ffeeadacd622b" translate="yes" xml:space="preserve">
          <source>Ember Data flexibility</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cbd12b2dfd38ce2529ad951236c5c8df8d720a4" translate="yes" xml:space="preserve">
          <source>Ember Data includes several built-in relationship types to help you define how your models relate to each other.</source>
          <target state="translated">Ember Data incluye varios tipos de relaciones incorporadas para ayudarle a definir cómo se relacionan sus modelos entre sí.</target>
        </trans-unit>
        <trans-unit id="2dc4234690873f687b6484a6b981e1c0b9974af7" translate="yes" xml:space="preserve">
          <source>Ember Data injects the store service to every route and controller so that you can immediately write &lt;code&gt;this.store&lt;/code&gt;! If you want to access the store in a component or another service, you will need to &lt;a href=&quot;../services#toc_accessing-services&quot;&gt;inject&lt;/a&gt; the store service.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57437cc6d96dc785cb6ab2c4645b4c4a1a972dc6" translate="yes" xml:space="preserve">
          <source>Ember Data injects the store service to every route and controller so that you can immediately write &lt;code&gt;this.store&lt;/code&gt;! If you want to access the store in a component or another service, you will need to &lt;a href=&quot;https://guides.emberjs.com/services/#toc_accessing-services&quot;&gt;inject&lt;/a&gt; the store service.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a29a13f13eb2a39fe062e3da079a57eee020cea0" translate="yes" xml:space="preserve">
          <source>Ember Data is a powerful (but optional) library included by default in new Ember apps. In the next example, we will use Ember Data's &lt;a href=&quot;https://api.emberjs.com/ember-data/release/classes/Store/methods#findAll&quot;&gt;&lt;code&gt;findAll&lt;/code&gt;&lt;/a&gt; method, which returns a Promise, and resolves with an array of &lt;a href=&quot;https://guides.emberjs.com/models/&quot;&gt;Ember Data records&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dfbf0d89d028d99cb4c6b0f31864766e1cae045" translate="yes" xml:space="preserve">
          <source>Ember Data is also designed to work with streaming servers, like those powered by WebSockets. You can open a socket to your server and push changes into Ember Data whenever they occur, giving your app a real-time user interface that is always up-to-date.</source>
          <target state="translated">Ember Data también está diseñado para trabajar con servidores de streaming,como los que funcionan con WebSockets.Puedes abrir un socket a tu servidor y empujar los cambios en los Datos Ember siempre que ocurran,dando a tu aplicación una interfaz de usuario en tiempo real que está siempre actualizada.</target>
        </trans-unit>
        <trans-unit id="378dab7b3d1e8311b08f829c04619f292d9b4e7d" translate="yes" xml:space="preserve">
          <source>Ember Data is going to normalize the payload's root key for the modelName. As a result, it will try to look up the &quot;blog/post&quot; model. Since we don't have a model called &quot;blog/post&quot; (or a file called app/models/blog/post.js in ember-cli), Ember Data will throw an error because it cannot find the &quot;blog/post&quot; model.</source>
          <target state="translated">Ember Data va a normalizar la clave de raíz de la carga útil para el nombre del modelo.Como resultado,intentará buscar el modelo &quot;blog/post&quot;.Como no tenemos un modelo llamado &quot;blog/post&quot; (o un archivo llamado app/models/blog/post.js en ember-cli),Ember Data arrojará un error porque no puede encontrar el modelo &quot;blog/post&quot;.</target>
        </trans-unit>
        <trans-unit id="69202064217e142f0e79549d53c764f0488b0e29" translate="yes" xml:space="preserve">
          <source>Ember Data models are normally setup using the singular form (which is why we use `person` instead of `people` here)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b03b899fc2017f3647ab2c317090ea7399a28008" translate="yes" xml:space="preserve">
          <source>Ember Data provides the ability to query for records that meet certain criteria. Calling &lt;a href=&quot;http://emberjs.com/api/data/classes/DS.Store.html#method_query&quot;&gt;&lt;code&gt;store.query()&lt;/code&gt;&lt;/a&gt; will make a &lt;code&gt;GET&lt;/code&gt; request with the passed object serialized as query params. This method returns a &lt;code&gt;DS.PromiseArray&lt;/code&gt; in the same way as &lt;code&gt;findAll&lt;/code&gt;.</source>
          <target state="translated">Ember Data brinda la capacidad de consultar registros que cumplan con ciertos criterios. Llamar a &lt;a href=&quot;http://emberjs.com/api/data/classes/DS.Store.html#method_query&quot;&gt; &lt;code&gt;store.query()&lt;/code&gt; &lt;/a&gt; har&amp;aacute; una solicitud &lt;code&gt;GET&lt;/code&gt; con el objeto pasado serializado como par&amp;aacute;metros de consulta. Este m&amp;eacute;todo devuelve un &lt;code&gt;DS.PromiseArray&lt;/code&gt; de la misma forma que &lt;code&gt;findAll&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fda62bfbd783741eba968fe2ceec3c8f0306e115" translate="yes" xml:space="preserve">
          <source>Ember Data provides the ability to query for records that meet certain criteria. Calling &lt;a href=&quot;https://api.emberjs.com/ember-data/release/classes/Store/methods#query&quot;&gt;&lt;code&gt;store.query()&lt;/code&gt;&lt;/a&gt; will make a &lt;code&gt;GET&lt;/code&gt; request with the passed object serialized as query params. This method returns a &lt;code&gt;PromiseArray&lt;/code&gt; in the same way as &lt;code&gt;findAll&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9036aba2e5e2938a579e470c7a6cd1598da401bb" translate="yes" xml:space="preserve">
          <source>Ember Data requires you to define the structure of the data you wish to provide to your application by extending &lt;a href=&quot;http://emberjs.com/api/data/classes/DS.Model.html&quot;&gt;&lt;code&gt;DS.Model&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Ember Data requiere que defina la estructura de los datos que desea proporcionar a su aplicaci&amp;oacute;n ampliando &lt;a href=&quot;http://emberjs.com/api/data/classes/DS.Model.html&quot;&gt; &lt;code&gt;DS.Model&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8e4bb2004e6d085ea51f95bbee65153e6b18f521" translate="yes" xml:space="preserve">
          <source>Ember Data resolves sync relationships with the related resources available in its local store, hence it is expected these resources to be loaded before or along-side the primary resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="521c75005de415a946915e85375757d992054245" translate="yes" xml:space="preserve">
          <source>Ember Data ships with 3 serializers. The &lt;a href=&quot;http://emberjs.com/api/data/classes/DS.JSONAPISerializer.html&quot;&gt;&lt;code&gt;JSONAPISerializer&lt;/code&gt;&lt;/a&gt; is the default serializer and works with JSON API backends. The &lt;a href=&quot;http://emberjs.com/api/data/classes/DS.JSONSerializer.html&quot;&gt;&lt;code&gt;JSONSerializer&lt;/code&gt;&lt;/a&gt; is a simple serializer for working with single json object or arrays of records. The &lt;a href=&quot;http://emberjs.com/api/data/classes/DS.RESTSerializer.html&quot;&gt;&lt;code&gt;RESTSerializer&lt;/code&gt;&lt;/a&gt; is a more complex serializer that supports sideloading and was the default serializer before 2.0.</source>
          <target state="translated">Ember Data se env&amp;iacute;a con 3 serializadores. El &lt;a href=&quot;http://emberjs.com/api/data/classes/DS.JSONAPISerializer.html&quot;&gt; &lt;code&gt;JSONAPISerializer&lt;/code&gt; &lt;/a&gt; es el serializador predeterminado y trabaja con backends API JSON. El &lt;a href=&quot;http://emberjs.com/api/data/classes/DS.JSONSerializer.html&quot;&gt; &lt;code&gt;JSONSerializer&lt;/code&gt; &lt;/a&gt; es un serializador sencilla para trabajar con objeto JSON simple o arrays de registros. El &lt;a href=&quot;http://emberjs.com/api/data/classes/DS.RESTSerializer.html&quot;&gt; &lt;code&gt;RESTSerializer&lt;/code&gt; &lt;/a&gt; es un serializador m&amp;aacute;s complejo que los soportes de carga lateral y fue el serializador predeterminado antes de 2.0.</target>
        </trans-unit>
        <trans-unit id="8b880e30dec8f9fb4fdb1433cb3a815c767cef51" translate="yes" xml:space="preserve">
          <source>Ember Data ships with 3 serializers. The &lt;a href=&quot;https://api.emberjs.com/ember-data/release/classes/JSONAPISerializer&quot;&gt;&lt;code&gt;JSONAPISerializer&lt;/code&gt;&lt;/a&gt; is the default serializer and works with JSON:API backends. The &lt;a href=&quot;https://api.emberjs.com/ember-data/release/classes/JSONSerializer&quot;&gt;&lt;code&gt;JSONSerializer&lt;/code&gt;&lt;/a&gt; is a simple serializer for working with single JSON object or arrays of records. The &lt;a href=&quot;https://api.emberjs.com/ember-data/release/classes/RESTSerializer&quot;&gt;&lt;code&gt;RESTSerializer&lt;/code&gt;&lt;/a&gt; is a more complex serializer that supports sideloading and was the default serializer before 2.0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4de8d325e6b47599bdd4e40288b0880ceeccb103" translate="yes" xml:space="preserve">
          <source>Ember Data takes care of tracking the state of each record for you. This allows Ember Data to treat newly created records differently from existing records when saving.</source>
          <target state="translated">Ember Data se encarga de rastrear el estado de cada registro para usted.Esto permite a Ember Data tratar los registros recién creados de forma diferente a los existentes al guardarlos.</target>
        </trans-unit>
        <trans-unit id="9c1900a0f2e88f9c6f2a2ade35975c57aa78e41d" translate="yes" xml:space="preserve">
          <source>Ember Data uses the &lt;code&gt;JSONAPISerializer&lt;/code&gt; by default, but you can override this default by defining a custom serializer. There are two ways to define a custom serializer. First, you can define a custom serializer for your entire application by defining an &quot;application&quot; serializer.</source>
          <target state="translated">Ember Data usa &lt;code&gt;JSONAPISerializer&lt;/code&gt; de forma predeterminada, pero puede anular este valor predeterminado definiendo un serializador personalizado. Hay dos formas de definir un serializador personalizado. Primero, puede definir un serializador personalizado para toda su aplicaci&amp;oacute;n definiendo un serializador de &quot;aplicaci&amp;oacute;n&quot;.</target>
        </trans-unit>
        <trans-unit id="82ddded3cee9ab35d5edfe92a4ae2c35d504e2d4" translate="yes" xml:space="preserve">
          <source>Ember Data will do its best to discover which relationships map to one another. In the one-to-many code above, for example, Ember Data can figure out that changing the &lt;code&gt;comments&lt;/code&gt; relationship should update the &lt;code&gt;blogPost&lt;/code&gt; relationship on the inverse because &lt;code&gt;blogPost&lt;/code&gt; is the only relationship to that model.</source>
          <target state="translated">Ember Data har&amp;aacute; todo lo posible para descubrir qu&amp;eacute; relaciones se asignan entre s&amp;iacute;. En el c&amp;oacute;digo de uno a muchos anterior, por ejemplo, Ember Data puede darse cuenta de que cambiar la relaci&amp;oacute;n de &lt;code&gt;comments&lt;/code&gt; deber&amp;iacute;a actualizar la relaci&amp;oacute;n &lt;code&gt;blogPost&lt;/code&gt; a la inversa porque &lt;code&gt;blogPost&lt;/code&gt; es la &amp;uacute;nica relaci&amp;oacute;n con ese modelo.</target>
        </trans-unit>
        <trans-unit id="a4df05730ff3cf9f514c15ee02f7a92cf46f2961" translate="yes" xml:space="preserve">
          <source>Ember Data will do its best to discover which relationships map to one another. In the one-to-many code above, for example, Ember Data can figure out that changing the &lt;code&gt;comments&lt;/code&gt; relationship should update the &lt;code&gt;post&lt;/code&gt; relationship on the inverse because post is the only relationship to that model.</source>
          <target state="translated">Ember Data har&amp;aacute; todo lo posible para descubrir qu&amp;eacute; relaciones se asignan entre s&amp;iacute;. En el c&amp;oacute;digo de uno a muchos anterior, por ejemplo, Ember Data puede darse cuenta de que cambiar la relaci&amp;oacute;n de &lt;code&gt;comments&lt;/code&gt; deber&amp;iacute;a actualizar la relaci&amp;oacute;n de &lt;code&gt;post&lt;/code&gt; a la inversa porque la publicaci&amp;oacute;n es la &amp;uacute;nica relaci&amp;oacute;n con ese modelo.</target>
        </trans-unit>
        <trans-unit id="c4dfe208eee93114760af51ca7100c90085b9194" translate="yes" xml:space="preserve">
          <source>Ember Data will query the server for the appropriate records and re-render the template once the data is received.</source>
          <target state="translated">Ember Data buscará en el servidor los registros apropiados y volverá a presentar la plantilla una vez que se reciban los datos.</target>
        </trans-unit>
        <trans-unit id="f3f3ae2f204b23ff82b2db2b4edf61d044dfa91a" translate="yes" xml:space="preserve">
          <source>Ember Data's Normalized JSON Format</source>
          <target state="translated">El formato JSON normalizado de Ember Data</target>
        </trans-unit>
        <trans-unit id="fd91b1dd0436e6e932c6673481b8c4558fb8203e" translate="yes" xml:space="preserve">
          <source>Ember Data's default Adapter has some built-in assumptions about how a &lt;a href=&quot;http://jsonapi.org/&quot;&gt;REST API should look&lt;/a&gt;. If your backend conventions differ from those assumptions, Ember Data allows either slight adjustments or you can switch to a different adapter if your backend works noticeably differently.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="deff1c6c2b88f967053ae278d28df44af0c103e0" translate="yes" xml:space="preserve">
          <source>Ember Data, included by default when you create a new application, is a library that integrates tightly with Ember to make it easy to retrieve models from your server as JSON, save updates back to the server, and create new models in the browser.</source>
          <target state="translated">Ember Data,incluida por defecto cuando se crea una nueva aplicación,es una biblioteca que se integra estrechamente con Ember para facilitar la recuperación de modelos de su servidor como JSON,guardar las actualizaciones en el servidor y crear nuevos modelos en el navegador.</target>
        </trans-unit>
        <trans-unit id="6c2f7e6fceda810278d915b16521d29e207b1f8f" translate="yes" xml:space="preserve">
          <source>Ember Engines</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cbb03153af3c98545def04509ea329b782f17d2" translate="yes" xml:space="preserve">
          <source>Ember Exam</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ddce6028f95c0639637f7e2bfbf446e0227099a" translate="yes" xml:space="preserve">
          <source>Ember Exam also lets you randomize how the tests are run. Why would you want to do so? When you don't properly set up and tear down a test, you can create dependencies among tests. Randomizing the order helps you catch these inadvertent bugs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c959eca15d83a91240ed3a81db3fe6daac584535" translate="yes" xml:space="preserve">
          <source>Ember Extensions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aab43f826b3c8d3079a16a04f74dde41f4314445" translate="yes" xml:space="preserve">
          <source>Ember Helpers are functions that can compute values, and are used in templates. For example, this code calls a helper named &lt;code&gt;format-currency&lt;/code&gt;:</source>
          <target state="translated">Ember Helpers son funciones que pueden calcular valores y se utilizan en plantillas. Por ejemplo, este c&amp;oacute;digo llama a un ayudante llamado &lt;code&gt;format-currency&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="437668e434f8bfba7bc73c1e04a0b86e8359906d" translate="yes" xml:space="preserve">
          <source>Ember Inspector</source>
          <target state="translated">Inspector Ember</target>
        </trans-unit>
        <trans-unit id="8ddc4fed83efbda511ddb908334fa22bab38a25f" translate="yes" xml:space="preserve">
          <source>Ember Inspector also provides deprecation handling capability. It can work complimentary to ember-cli-deprecation-workflow. As you unsilence deprecations to fix them, the inspector can allow you to more quickly find where in your code a deprecation occurs when you run into it at runtime, reducing the amount of stack trace browsing you have to do. For more information on using deprecation handling in Ember Inspector, see its &lt;a href=&quot;https://guides.emberjs.com/ember-inspector/deprecations/&quot;&gt;guides section&lt;/a&gt;.</source>
          <target state="translated">Ember Inspector tambi&amp;eacute;n proporciona capacidad de manejo de obsolescencia. Puede funcionar de forma complementaria a ember-cli-deprecation-workflow. A medida que desactive las desaprobaciones para corregirlas, el inspector puede permitirle encontrar m&amp;aacute;s r&amp;aacute;pidamente en qu&amp;eacute; parte de su c&amp;oacute;digo ocurre una desaprobaci&amp;oacute;n cuando se encuentra con &amp;eacute;l en tiempo de ejecuci&amp;oacute;n, reduciendo la cantidad de exploraci&amp;oacute;n de seguimiento de pila que tiene que hacer. Para obtener m&amp;aacute;s informaci&amp;oacute;n sobre el uso de la gesti&amp;oacute;n de obsolescencia en Ember Inspector, consulte la &lt;a href=&quot;https://guides.emberjs.com/ember-inspector/deprecations/&quot;&gt;secci&amp;oacute;n de gu&amp;iacute;as&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7253bace2e069d96dc7c3d75ddac85b98bb6aed5" translate="yes" xml:space="preserve">
          <source>Ember Observer</source>
          <target state="translated">Observador Ember</target>
        </trans-unit>
        <trans-unit id="545d6671ff9721a426e18f2bc0f12c1dfd1d2f60" translate="yes" xml:space="preserve">
          <source>Ember Test Selectors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe88ddbd91cc5946e54bfbe5cab48833103454cc" translate="yes" xml:space="preserve">
          <source>Ember acceptance tests use a set of test helper functions, such as the &lt;code&gt;visit&lt;/code&gt;, &lt;code&gt;andThen&lt;/code&gt;, and &lt;code&gt;currentURL&lt;/code&gt; functions used above. We'll discuss those functions in more detail later in the tutorial.</source>
          <target state="translated">Las pruebas de aceptaci&amp;oacute;n de Ember utilizan un conjunto de funciones auxiliares de prueba, como las funciones &lt;code&gt;visit&lt;/code&gt; , &lt;code&gt;andThen&lt;/code&gt; y &lt;code&gt;currentURL&lt;/code&gt; utilizadas anteriormente. Discutiremos esas funciones con m&amp;aacute;s detalle m&amp;aacute;s adelante en el tutorial.</target>
        </trans-unit>
        <trans-unit id="92ffeb95f3ec7c756165554e5239bfc18836a394" translate="yes" xml:space="preserve">
          <source>Ember also allows you to write an &lt;code&gt;if else&lt;/code&gt; statement in inline form. It looks similar to a ternary operator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25f4c9f30daa8bff897a1e412dd6c1aaacc57917" translate="yes" xml:space="preserve">
          <source>Ember also extends the JavaScript &lt;code&gt;Array&lt;/code&gt; prototype with its &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Enumerable.html&quot;&gt;Ember.Enumerable&lt;/a&gt; interface to provide change observation for arrays.</source>
          <target state="translated">Ember tambi&amp;eacute;n ampl&amp;iacute;a el prototipo de JavaScript &lt;code&gt;Array&lt;/code&gt; con su interfaz &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Enumerable.html&quot;&gt;Ember.Enumerable&lt;/a&gt; para proporcionar observaci&amp;oacute;n de cambios para los arreglos.</target>
        </trans-unit>
        <trans-unit id="83e381d0afcb61447ae0053f9e2c4fd45e7ab318" translate="yes" xml:space="preserve">
          <source>Ember also provides a computed property macro &lt;a href=&quot;http://emberjs.com/api/classes/Ember.computed.html#method_filterBy&quot;&gt;&lt;code&gt;computed.filterBy&lt;/code&gt;&lt;/a&gt;, which is a shorter way of expressing the above computed property:</source>
          <target state="translated">Ember tambi&amp;eacute;n proporciona una macro de propiedad &lt;a href=&quot;http://emberjs.com/api/classes/Ember.computed.html#method_filterBy&quot;&gt; &lt;code&gt;computed.filterBy&lt;/code&gt; &lt;/a&gt; , que es una forma m&amp;aacute;s corta de expresar la propiedad calculada anterior:</target>
        </trans-unit>
        <trans-unit id="7309f90d485aa003ad6130ad411edcc62d97be4c" translate="yes" xml:space="preserve">
          <source>Ember application builds are created by the Ember CLI build pipeline. Just as with your application code, Ember CLI ships with a sensible set of defaults to compile and bundle the assets that can be deployed to production. Under the hood, this is accomplished using a series of Broccoli plugins, each of which can be configured in the &lt;code&gt;ember-cli-build.js&lt;/code&gt; file at the root of your project.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e5fa57949b1db2cc56d74d027652a118508df96" translate="yes" xml:space="preserve">
          <source>Ember applications utilize the &lt;a href=&quot;https://en.wikipedia.org/wiki/Dependency_injection&quot;&gt;dependency injection&lt;/a&gt; (&quot;DI&quot;) design pattern to declare and instantiate classes of objects and dependencies between them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fab2de46c2898e1103dae837ed48ff08da0417c" translate="yes" xml:space="preserve">
          <source>Ember applications utilize the &lt;a href=&quot;https://en.wikipedia.org/wiki/Dependency_injection&quot;&gt;dependency injection&lt;/a&gt; (&quot;DI&quot;) design pattern to declare and instantiate classes of objects and dependencies between them. Applications and application instances each serve a role in Ember's DI implementation.</source>
          <target state="translated">Las aplicaciones Ember utilizan el patr&amp;oacute;n de dise&amp;ntilde;o de &lt;a href=&quot;https://en.wikipedia.org/wiki/Dependency_injection&quot;&gt;inyecci&amp;oacute;n de dependencia&lt;/a&gt; (&quot;DI&quot;) para declarar e instanciar clases de objetos y dependencias entre ellos. Las aplicaciones y las instancias de aplicaciones cumplen un papel en la implementaci&amp;oacute;n de DI de Ember.</target>
        </trans-unit>
        <trans-unit id="e4c770bd413edff2c4d9d24205edfb2c115d2185" translate="yes" xml:space="preserve">
          <source>Ember comes with &lt;em&gt;generators&lt;/em&gt; that automate the boilerplate code for common tasks. To generate a route, type this in a new terminal window in your &lt;code&gt;ember-quickstart&lt;/code&gt; directory:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37ba02b45494a5f1d6ec2104936c9f1cb5ae3883" translate="yes" xml:space="preserve">
          <source>Ember comes with &lt;em&gt;generators&lt;/em&gt; that automate the boilerplate code for common tasks. To generate a route, type this in your terminal:</source>
          <target state="translated">Ember viene con &lt;em&gt;generadores&lt;/em&gt; que automatizan el c&amp;oacute;digo est&amp;aacute;ndar para tareas comunes. Para generar una ruta, escriba esto en su terminal:</target>
        </trans-unit>
        <trans-unit id="aa2f0e98de61e195118b13ff85455c287d57f643" translate="yes" xml:space="preserve">
          <source>Ember comes with a data management library called &lt;a href=&quot;https://github.com/emberjs/data&quot;&gt;Ember Data&lt;/a&gt; to help deal with persistent application data.</source>
          <target state="translated">Ember viene con una biblioteca de administraci&amp;oacute;n de datos llamada &lt;a href=&quot;https://github.com/emberjs/data&quot;&gt;Ember Data&lt;/a&gt; para ayudar a lidiar con los datos persistentes de la aplicaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="3b047e9d9beae9b057e5f1de9d86bd5bf6bbac46" translate="yes" xml:space="preserve">
          <source>Ember components are commonly tested with &lt;a href=&quot;https://guides.emberjs.com/testing/testing-components/&quot;&gt;component integration tests&lt;/a&gt;. Component integration tests verify the behavior of a component within the context of Ember's rendering engine. When running in an integration test, the component goes through its regular &lt;a href=&quot;https://guides.emberjs.com/components/the-component-lifecycle/&quot;&gt;render lifecycle&lt;/a&gt;, and has access to dependent objects, loaded through Ember's resolver.</source>
          <target state="translated">Los componentes de Ember se prueban com&amp;uacute;nmente con &lt;a href=&quot;https://guides.emberjs.com/testing/testing-components/&quot;&gt;pruebas de integraci&amp;oacute;n de componentes&lt;/a&gt; . Las pruebas de integraci&amp;oacute;n de componentes verifican el comportamiento de un componente dentro del contexto del motor de renderizado de Ember. Cuando se ejecuta en una prueba de integraci&amp;oacute;n, el componente pasa por su &lt;a href=&quot;https://guides.emberjs.com/components/the-component-lifecycle/&quot;&gt;ciclo de vida de renderizado&lt;/a&gt; normal y tiene acceso a los objetos dependientes, cargados a trav&amp;eacute;s del resolutor de Ember.</target>
        </trans-unit>
        <trans-unit id="64cee7b4768d7118e7f238eeaa155aa318949e38" translate="yes" xml:space="preserve">
          <source>Ember components represent state to the UI of an application. Further reading on components can be found under &lt;a href=&quot;https://api.emberjs.com/ember/release/classes/Component&quot;&gt;Component&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a471df2253ef2b3f017543d1b20c9891c1d84036" translate="yes" xml:space="preserve">
          <source>Ember components represent state to the UI of an application. Further reading on components can be found under &lt;a href=&quot;https://emberjs.com/api/classes/Ember.Component.html&quot;&gt;Ember.Component&lt;/a&gt;.</source>
          <target state="translated">Los componentes de Ember representan el estado de la interfaz de usuario de una aplicaci&amp;oacute;n. Se puede encontrar m&amp;aacute;s informaci&amp;oacute;n sobre los componentes en &lt;a href=&quot;https://emberjs.com/api/classes/Ember.Component.html&quot;&gt;Ember.Component&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b7b690db229b10c8c62c4c685459eeea738a3f49" translate="yes" xml:space="preserve">
          <source>Ember considers testing a first-class citizen. In addition to providing easy paths to integrate QUnit and Mocha, Ember supports a variety of addons and debugging tools to improve your developer experience in testing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56d20b50a63addb50eeb5e03f1dc01efebd9862a" translate="yes" xml:space="preserve">
          <source>Ember detects the changed file and automatically reloads the page for you in the background. You should see that the welcome page has been replaced by &quot;PeopleTracker&quot;. You also added an &lt;code&gt;{{outlet}}&lt;/code&gt; to this page, which means that any nested route will be rendered in that place.</source>
          <target state="translated">Ember detecta el archivo modificado y vuelve a cargar autom&amp;aacute;ticamente la p&amp;aacute;gina en segundo plano. Deber&amp;iacute;a ver que la p&amp;aacute;gina de bienvenida ha sido reemplazada por &quot;PeopleTracker&quot;. Tambi&amp;eacute;n agreg&amp;oacute; un &lt;code&gt;{{outlet}}&lt;/code&gt; a esta p&amp;aacute;gina, lo que significa que cualquier ruta anidada se representar&amp;aacute; en ese lugar.</target>
        </trans-unit>
        <trans-unit id="60090d42ac0bbb750fe52cf49dd09a30848c46b4" translate="yes" xml:space="preserve">
          <source>Ember detects the changed file and automatically reloads the page for you in the background. You should see that the welcome page has been replaced by &quot;PeopleTracker&quot;. You also added an &lt;code&gt;{{outlet}}&lt;/code&gt; to this page, which means that any route will be rendered in that place.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a7e6001dcb14a649247e38f062c08220c09d2b8" translate="yes" xml:space="preserve">
          <source>Ember developers have great options for how they handle data from back end APIs. Ember itself works with any type of back end: REST, JSON:API, GraphQL, or anything else. This guide will summarize how and where to make API requests. Follow the links within it to see examples and learn more.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a6f49a148bccb4778ded15bb2d0e9d74c638a63" translate="yes" xml:space="preserve">
          <source>Ember gives you &lt;strong&gt;the power to write tests and be productive from day one&lt;/strong&gt;. You can be confident that your app will be correct today and years from now. A question remains: &lt;em&gt;How&lt;/em&gt; should you write tests?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab317ef21ea2f3c914cb81c1bbe4ccb7946f75cc" translate="yes" xml:space="preserve">
          <source>Ember gives you the ability to &lt;a href=&quot;../writing-helpers&quot;&gt;write your own helpers&lt;/a&gt;, to bring a minimum of logic into Ember templating.</source>
          <target state="translated">Ember le brinda la capacidad de &lt;a href=&quot;../writing-helpers&quot;&gt;escribir sus propios ayudantes&lt;/a&gt; , para aportar un m&amp;iacute;nimo de l&amp;oacute;gica a las plantillas de Ember.</target>
        </trans-unit>
        <trans-unit id="a03dadf6a40a3fb1db82643f6ea6c919d99e8279" translate="yes" xml:space="preserve">
          <source>Ember guarantees that, by the time &lt;code&gt;didInsertElement()&lt;/code&gt; is called:</source>
          <target state="translated">Ember garantiza que, para cuando se &lt;code&gt;didInsertElement()&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="1c9812f1934854a8babfdd000cbd1d5d4490ee55" translate="yes" xml:space="preserve">
          <source>Ember has a rich ecosystem of addons that can be easily added to projects. Addons provide a wide range of functionality to projects, often saving time and letting you focus on your project.</source>
          <target state="translated">Ember tiene un rico ecosistema de addons que pueden ser fácilmente añadidos a los proyectos.Los addons proporcionan una amplia gama de funcionalidades a los proyectos,a menudo ahorrando tiempo y permitiéndole centrarse en su proyecto.</target>
        </trans-unit>
        <trans-unit id="3a5ece50f287050aa8d644f316c2b11826720ae1" translate="yes" xml:space="preserve">
          <source>Ember has and continues to support an implementation of a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy&quot;&gt;Proxy&lt;/a&gt;, which is a type of object that can &lt;em&gt;wrap around&lt;/em&gt; other objects and &lt;em&gt;intercept&lt;/em&gt; all of your gets and sets to them. Native JavaScript proxies allow you to do this without any special methods or syntax, but unfortunately they are not available in IE11. Since many Ember users must still support IE11, Ember's &lt;code&gt;ObjectProxy&lt;/code&gt; class allows us to accomplish something similar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d92f25a98db17be3b263cb354c8cfab9be97f51" translate="yes" xml:space="preserve">
          <source>Ember includes several helpers to facilitate acceptance testing. There are two types of helpers: &lt;strong&gt;asynchronous&lt;/strong&gt; and &lt;strong&gt;synchronous&lt;/strong&gt;.</source>
          <target state="translated">Ember incluye varios ayudantes para facilitar las pruebas de aceptaci&amp;oacute;n. Hay dos tipos de ayudantes: &lt;strong&gt;as&amp;iacute;ncronos&lt;/strong&gt; y &lt;strong&gt;sincr&amp;oacute;nicos&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="85a88dcdf52ec507f315a70c8036c165c801decf" translate="yes" xml:space="preserve">
          <source>Ember includes several helpers to facilitate application testing. There are two types of helpers: &lt;strong&gt;asynchronous&lt;/strong&gt; and &lt;strong&gt;synchronous&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7ded525fedd1378fdb8e1ba2f86f6bd86a788c4" translate="yes" xml:space="preserve">
          <source>Ember is a JavaScript front-end framework designed to help you build websites with rich and complex user interactions. It does so by providing developers both with many features that are essential to manage complexity in modern web applications, as well as an integrated development toolkit that enables rapid iteration.</source>
          <target state="translated">Ember es un marco de trabajo de JavaScript diseñado para ayudar a construir sitios web con interacciones de usuario ricas y complejas.Lo hace proporcionando a los desarrolladores muchas características esenciales para gestionar la complejidad en las aplicaciones web modernas,así como un conjunto de herramientas de desarrollo integrado que permite una rápida iteración.</target>
        </trans-unit>
        <trans-unit id="d81981f6d3802a80a8d64d45017c4267aec017d2" translate="yes" xml:space="preserve">
          <source>Ember is a framework for building applications that run in the browser, which means that they are made with HTML, CSS, and JavaScript. It is very helpful to be familiar with these technologies. If you find yourself getting stuck or confused as you learn Ember, come back to this page and see if there is a general topic below that you could explore.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3ab138aaea55fab0046f00d1ce02954a3cb355e" translate="yes" xml:space="preserve">
          <source>Ember is only able to infer the dynamic segments because the &lt;code&gt;photo&lt;/code&gt; route is currently active. If we were to invoke the &lt;code&gt;&amp;lt;LinkTo /&amp;gt;&lt;/code&gt; component for the same &lt;code&gt;photos.photo.comment&lt;/code&gt; route, but from the &lt;code&gt;photos&lt;/code&gt; route's template, it will result in an error, as we did not pass enough model objects to populate all the dynamic segments needed to generate the URL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0ad99d0a347f708d9477d90558508f95814ccd6" translate="yes" xml:space="preserve">
          <source>Ember keeps data for a page in an object called a &lt;code&gt;model&lt;/code&gt;. To keep things simple at first, we'll populate the model for our rental listing page to use a hard-coded array of JavaScript objects. Later, we'll switch to using &lt;a href=&quot;https://github.com/emberjs/data&quot;&gt;Ember Data&lt;/a&gt;, a library for robustly managing data in our app.</source>
          <target state="translated">Ember guarda los datos de una p&amp;aacute;gina en un objeto llamado &lt;code&gt;model&lt;/code&gt; o . Para simplificar las cosas al principio, completaremos el modelo de nuestra p&amp;aacute;gina de listado de alquileres para usar una matriz codificada de objetos JavaScript. M&amp;aacute;s adelante, pasaremos a usar &lt;a href=&quot;https://github.com/emberjs/data&quot;&gt;Ember Data&lt;/a&gt; , una biblioteca para administrar datos de manera s&amp;oacute;lida en nuestra aplicaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="228517640b3c32bd8690d28560a8ca2b94e01280" translate="yes" xml:space="preserve">
          <source>Ember knows which subclass powers a component based on its filename. For example, if you have a component called &lt;code&gt;blog-post&lt;/code&gt;, you would create a file at &lt;code&gt;app/components/blog-post.js&lt;/code&gt;. If your component was called &lt;code&gt;audio-player-controls&lt;/code&gt;, the file name would be at &lt;code&gt;app/components/audio-player-controls.js&lt;/code&gt;.</source>
          <target state="translated">Ember sabe qu&amp;eacute; subclase alimenta un componente en funci&amp;oacute;n de su nombre de archivo. Por ejemplo, si tiene un componente llamado &lt;code&gt;blog-post&lt;/code&gt; , crear&amp;iacute;a un archivo en &lt;code&gt;app/components/blog-post.js&lt;/code&gt; . Si su componente se llamara &lt;code&gt;audio-player-controls&lt;/code&gt; , el nombre del archivo estar&amp;iacute;a en &lt;code&gt;app/components/audio-player-controls.js&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="771bfe46ea7958eb9d77d5458e062862858c3ad2" translate="yes" xml:space="preserve">
          <source>Ember makes use of these in places like the model hook for a route. Until the promise resolves, Ember is able to put the route into a &quot;loading&quot; state.</source>
          <target state="translated">Ember hace uso de estos en lugares como el gancho de modelo para una ruta.Hasta que la promesa se resuelva,Ember es capaz de poner la ruta en un estado de &quot;carga&quot;.</target>
        </trans-unit>
        <trans-unit id="8722eba0093636f90448785ffc6cb4446ed17706" translate="yes" xml:space="preserve">
          <source>Ember manages the lifecycles and lifetimes of many built in constructs, such as components, and does so in a hierarchical way - when a parent component is destroyed, all of its children are destroyed as well.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee03e6489231e878b92c98f93c1e9eef8d3b1fed" translate="yes" xml:space="preserve">
          <source>Ember provides 3 types of tests out of the box:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c7063bb0c7c18465e2c381358844fbba69a1a31" translate="yes" xml:space="preserve">
          <source>Ember provides a browser extension and several configuration options to help you debug your application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="784cda1f167fef6c33f528292edbaf9fc78f4180" translate="yes" xml:space="preserve">
          <source>Ember provides a few ways to help developers more easily produce accessible applications, and this section of the guides will more explicitly assist with that.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f97ea07058ad6e1b063f9d459ef3f85cf285fc1a" translate="yes" xml:space="preserve">
          <source>Ember provides a number of decorators, such as the &lt;code&gt;@tracked&lt;/code&gt; decorator, that will be described in greater detail later on in the guides.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b12393c040a3f0980d4e5e14b09e288f6809047" translate="yes" xml:space="preserve">
          <source>Ember provides a variety of acceptance test helpers to make common tasks easier, such as visiting routes, filling in fields, clicking on links/buttons, and waiting for pages to display.</source>
          <target state="translated">Ember proporciona una variedad de ayudantes para las pruebas de aceptación para facilitar las tareas comunes,como visitar las rutas,rellenar los campos,hacer clic en los enlaces/botones y esperar a que se muestren las páginas.</target>
        </trans-unit>
        <trans-unit id="cf44f0cb83d26502cec3eec323b4744b75950cb4" translate="yes" xml:space="preserve">
          <source>Ember provides an analogous approach to &lt;code&gt;loading&lt;/code&gt; substates in the case of errors encountered during a transition.</source>
          <target state="translated">Ember proporciona un enfoque an&amp;aacute;logo para &lt;code&gt;loading&lt;/code&gt; subestados en el caso de errores encontrados durante una transici&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="fcf960908b3ae5131c37ddf82deaef50dce4af31" translate="yes" xml:space="preserve">
          <source>Ember provides several configuration options that can help you debug problems with your application.</source>
          <target state="translated">Ember proporciona varias opciones de configuración que pueden ayudarle a depurar los problemas de su aplicación.</target>
        </trans-unit>
        <trans-unit id="343e2cd8c3db4a355b5a77b61f9bafe4555f8431" translate="yes" xml:space="preserve">
          <source>Ember requires Git to manage many of its dependencies. Git comes with Mac OS X and most Linux distributions. Windows users can download and run &lt;a href=&quot;http://git-scm.com/download/win&quot;&gt;this Git installer&lt;/a&gt;.</source>
          <target state="translated">Ember requiere que Git administre muchas de sus dependencias. Git viene con Mac OS X y la mayor&amp;iacute;a de las distribuciones de Linux. Los usuarios de Windows pueden descargar y ejecutar &lt;a href=&quot;http://git-scm.com/download/win&quot;&gt;este instalador de Git&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b0073ac716d906033ada2d3faf10f86333a4fb6f" translate="yes" xml:space="preserve">
          <source>Ember scans &lt;code&gt;app/locations/*&lt;/code&gt; for extending the Location API.</source>
          <target state="translated">Ember escanea la &lt;code&gt;app/locations/*&lt;/code&gt; para extender la API de ubicaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="e3fa5deb6f7ea31a9180c87e9aa17d9bcd3f7008" translate="yes" xml:space="preserve">
          <source>Ember ships with several built-in helpers, which you will learn more about in the following guides.</source>
          <target state="translated">Naves de ámbar con varios ayudantes incorporados,sobre los que aprenderás más en las siguientes guías.</target>
        </trans-unit>
        <trans-unit id="3c32d5ad39385c75f4c3ee519527e97952a2f6e5" translate="yes" xml:space="preserve">
          <source>Ember ships with two types of JavaScript classes for components:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6574f5be2256d3c9f43b6aa58e820c7cb74ef2a9" translate="yes" xml:space="preserve">
          <source>Ember supports observing any property, including computed properties.</source>
          <target state="translated">Ember apoya la observación de cualquier propiedad,incluyendo las propiedades computarizadas.</target>
        </trans-unit>
        <trans-unit id="1f69953cf21ff37ee778d22c668312eb02aaeb5d" translate="yes" xml:space="preserve">
          <source>Ember templates use the syntax of &lt;a href=&quot;http://handlebarsjs.com&quot;&gt;Handlebars&lt;/a&gt; templates. Anything that is valid Handlebars syntax is valid Ember syntax.</source>
          <target state="translated">Las plantillas Ember utilizan la sintaxis de las plantillas &lt;a href=&quot;http://handlebarsjs.com&quot;&gt;Handlebars&lt;/a&gt; . Todo lo que sea v&amp;aacute;lido en la sintaxis de Handlebars es una sintaxis v&amp;aacute;lida de Ember.</target>
        </trans-unit>
        <trans-unit id="4061b22ae43475730e627d43fec4af8d942a4288" translate="yes" xml:space="preserve">
          <source>Ember used its own custom class syntax before native JavaScript classes existed, which looks like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b14dbbfe407b0a3b18ea56071a89179aec2acce5" translate="yes" xml:space="preserve">
          <source>Ember uses &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes&quot;&gt;JavaScript classes&lt;/a&gt; for many of its constructs, such as Components, Routes, Services, and more:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77d31f9609b470fee8c414c3e82290f78c45c4ef" translate="yes" xml:space="preserve">
          <source>Ember uses a technique called &lt;em&gt;event delegation&lt;/em&gt;. This allows the framework to set up a global, shared event listener instead of requiring each view to do it manually. For example, instead of each view registering its own &lt;code&gt;mousedown&lt;/code&gt; listener on its associated element, Ember sets up a &lt;code&gt;mousedown&lt;/code&gt; listener on the &lt;code&gt;body&lt;/code&gt;.</source>
          <target state="translated">Ember usa una t&amp;eacute;cnica llamada &lt;em&gt;delegaci&amp;oacute;n de eventos&lt;/em&gt; . Esto permite que el marco configure un detector de eventos compartido global en lugar de requerir que cada vista lo haga manualmente. Por ejemplo, en lugar de que cada vista registre su propio oyente de &lt;code&gt;mousedown&lt;/code&gt; en su elemento asociado, Ember configura un oyente de &lt;code&gt;mousedown&lt;/code&gt; en el &lt;code&gt;body&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0f7b78c44fa36e65e62123e97cced3a42595417b" translate="yes" xml:space="preserve">
          <source>Ember uses templates to build up the user interface in an application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6b7939ee3ac109b5b9e0b9eca8d75f1a858380f" translate="yes" xml:space="preserve">
          <source>Ember uses templates to organize the layout of HTML in an application.</source>
          <target state="translated">Ember utiliza plantillas para organizar el diseño de HTML en una aplicación.</target>
        </trans-unit>
        <trans-unit id="e390a9dbec0757ad9a6013e9ec85c6a72cbf1cca" translate="yes" xml:space="preserve">
          <source>Ember uses the &lt;a href=&quot;http://www.handlebarsjs.com&quot;&gt;Handlebars templating library&lt;/a&gt; to power your app's user interface. Handlebars templates contain static HTML and dynamic content inside Handlebars expressions, which are invoked with double curly braces: &lt;code&gt;{{}}&lt;/code&gt;.</source>
          <target state="translated">Ember utiliza la &lt;a href=&quot;http://www.handlebarsjs.com&quot;&gt;biblioteca de plantillas de Handlebars&lt;/a&gt; para impulsar la interfaz de usuario de su aplicaci&amp;oacute;n. Las plantillas de Handlebars contienen HTML est&amp;aacute;tico y contenido din&amp;aacute;mico dentro de las expresiones de Handlebars, que se invocan con llaves dobles: &lt;code&gt;{{}}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="703fb025adbeedad22271f7047c126b3607cbd2e" translate="yes" xml:space="preserve">
          <source>Ember utilities are reusable code that can be accessed from various parts of the application. For Super Rentals, we'll use a utility to access the Google Maps API. The utility will abstract the Google API away from our Maps service, which will allow for future reuse of the maps API within the application, easier refactoring to alternate maps implementations, and easier testing of code that depends on it.</source>
          <target state="translated">Las utilidades Ember son códigos reutilizables a los que se puede acceder desde varias partes de la aplicación.En el caso de Super Rentals,usaremos una utilidad para acceder a la API de Google Maps.La utilidad abstrae el API de Google de nuestro servicio de mapas,lo que permitirá la futura reutilización del API de mapas dentro de la aplicación,una refactorización más fácil para alternar implementaciones de mapas,y una prueba más fácil del código que depende de él.</target>
        </trans-unit>
        <trans-unit id="48da3eeb1948aeea92006904f1c1bdcc50e65934" translate="yes" xml:space="preserve">
          <source>Ember will &lt;em&gt;not&lt;/em&gt; look above the common parent in a transition between child routes. For example, if the user transitions from &lt;code&gt;user.about.index&lt;/code&gt; to &lt;code&gt;user.about.slow-model&lt;/code&gt; the following search for template will happen:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca862ad8ad644ea10b632a7232d32c2b0afaa07b" translate="yes" xml:space="preserve">
          <source>Ember will do a lot to help you write fast apps, but it can't prevent you from writing a slow one. This is especially true on mobile devices. To deliver a great experience, it's important to measure performance early and often, and with a diverse set of devices.</source>
          <target state="translated">Ember hará mucho para ayudarte a escribir aplicaciones rápidas,pero no puede evitar que escribas una lenta.Esto es especialmente cierto en los dispositivos móviles.Para ofrecer una gran experiencia,es importante medir el rendimiento a tiempo y a menudo,y con un conjunto diverso de dispositivos.</target>
        </trans-unit>
        <trans-unit id="6f95a171614a83e43a1b51cfcacdaa14f8b4a281" translate="yes" xml:space="preserve">
          <source>Ember will escape the HTML tags, like this:</source>
          <target state="translated">Ember escapará de las etiquetas HTML,así:</target>
        </trans-unit>
        <trans-unit id="d69361ba889d9500419cc0dc34133167c04fbffb" translate="yes" xml:space="preserve">
          <source>Ember will resolve factories from the &lt;code&gt;App&lt;/code&gt; namespace automatically. For example &lt;code&gt;App.CarsController&lt;/code&gt; will be discovered and returned if an application requests &lt;code&gt;controller:cars&lt;/code&gt;.</source>
          <target state="translated">Ember resolver&amp;aacute; las f&amp;aacute;bricas desde el espacio de nombres de la &lt;code&gt;App&lt;/code&gt; autom&amp;aacute;ticamente. Por ejemplo, &lt;code&gt;App.CarsController&lt;/code&gt; ser&amp;aacute; descubierto y devuelto si una aplicaci&amp;oacute;n solicita &lt;code&gt;controller:cars&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f491638b57d711a5183f3f9a2de08588a3f7d0d1" translate="yes" xml:space="preserve">
          <source>Ember will use the model object returned above and save it as an attribute called &lt;code&gt;model&lt;/code&gt;, available to the rentals template we generated with our route in &lt;a href=&quot;../routes-and-templates#toc_a-rentals-route&quot;&gt;Routes and Templates&lt;/a&gt;.</source>
          <target state="translated">Ember usar&amp;aacute; el objeto modelo devuelto anteriormente y lo guardar&amp;aacute; como un atributo llamado &lt;code&gt;model&lt;/code&gt; o , disponible para la plantilla de alquileres que generamos con nuestra ruta en &lt;a href=&quot;../routes-and-templates#toc_a-rentals-route&quot;&gt;Rutas y Plantillas&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8036753468383e25943cb0d6540cfc9e0c9c563f" translate="yes" xml:space="preserve">
          <source>Ember's &lt;a href=&quot;https://github.com/ember-polyfills/ember-cache-primitive-polyfill&quot;&gt;cache API&lt;/a&gt; lets you cache a getter in 2 steps:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6edb2356b5717f9b0b716c0ad973ad625f8e9389" translate="yes" xml:space="preserve">
          <source>Ember's &lt;a href=&quot;https://guides.emberjs.com/testing/testing-components/#toc_waiting-on-asynchronous-behavior&quot;&gt;wait helper&lt;/a&gt; waits for all asynchronous tasks to complete before running the given function callback. It returns a promise that we also return from the test.</source>
          <target state="translated">El &lt;a href=&quot;https://guides.emberjs.com/testing/testing-components/#toc_waiting-on-asynchronous-behavior&quot;&gt;asistente de&lt;/a&gt; espera de Ember espera a que se completen todas las tareas asincr&amp;oacute;nicas antes de ejecutar la devoluci&amp;oacute;n de llamada de funci&amp;oacute;n dada. Devuelve una promesa de que tambi&amp;eacute;n volveremos de la prueba.</target>
        </trans-unit>
        <trans-unit id="6095a49148876c1cbd9499b675e47698332763db" translate="yes" xml:space="preserve">
          <source>Ember's approach to handling asynchronous logic in the router makes heavy use of the concept of Promises. In short, promises are objects that represent an eventual value. A promise can either &lt;em&gt;fulfill&lt;/em&gt; (successfully resolve the value) or &lt;em&gt;reject&lt;/em&gt; (fail to resolve the value). The way to retrieve this eventual value, or handle the cases when the promise rejects, is via the promise's &lt;a href=&quot;http://emberjs.com/api/classes/RSVP.Promise.html#method_then&quot;&gt;&lt;code&gt;then()&lt;/code&gt;&lt;/a&gt; method, which accepts two optional callbacks, one for fulfillment and one for rejection. If the promise fulfills, the fulfillment handler gets called with the fulfilled value as its sole argument, and if the promise rejects, the rejection handler gets called with a reason for the rejection as its sole argument. For example:</source>
          <target state="translated">El enfoque de Ember para manejar la l&amp;oacute;gica as&amp;iacute;ncrona en el enrutador hace un uso intensivo del concepto de Promesas. En resumen, las promesas son objetos que representan un valor eventual. Una promesa puede &lt;em&gt;cumplirse&lt;/em&gt; (resolver con &amp;eacute;xito el valor) o &lt;em&gt;rechazar&lt;/em&gt; (no resolver el valor). La forma de recuperar este valor eventual, o manejar los casos cuando la promesa se rechaza, es a trav&amp;eacute;s del m&amp;eacute;todo &lt;a href=&quot;http://emberjs.com/api/classes/RSVP.Promise.html#method_then&quot;&gt; &lt;code&gt;then()&lt;/code&gt; &lt;/a&gt; la promesa , que acepta dos devoluciones de llamada opcionales, una para el cumplimiento y otra para el rechazo. Si la promesa se cumple, se llama al controlador de cumplimiento con el valor cumplido como &amp;uacute;nico argumento, y si la promesa se rechaza, se llama al controlador de rechazo con un motivo del rechazo como &amp;uacute;nico argumento. Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="e5e8b1928453baa46ab5be07a7298518c984da35" translate="yes" xml:space="preserve">
          <source>Ember's approach to handling asynchronous logic in the router makes heavy use of the concept of Promises. In short, promises are objects that represent an eventual value. A promise can either &lt;em&gt;fulfill&lt;/em&gt; (successfully resolve the value) or &lt;em&gt;reject&lt;/em&gt; (fail to resolve the value). The way to retrieve this eventual value, or handle the cases when the promise rejects, is via the promise's &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/then&quot;&gt;&lt;code&gt;then()&lt;/code&gt;&lt;/a&gt; method, which accepts two optional callbacks, one for fulfillment and one for rejection. If the promise fulfills, the fulfillment handler gets called with the fulfilled value as its sole argument, and if the promise rejects, the rejection handler gets called with a reason for the rejection as its sole argument. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="094ef24d904cddb1f57bf2495785ba204055ed69" translate="yes" xml:space="preserve">
          <source>Ember's built-in helpers are described under the &lt;a href=&quot;https://api.emberjs.com/ember/release/classes/Ember.Templates.helpers&quot;&gt;Ember.Templates.helpers&lt;/a&gt; namespace. Documentation on creating custom helpers can be found under &lt;a href=&quot;https://api.emberjs.com/ember/release/functions/@ember%2Fcomponent%2Fhelper/helper&quot;&gt;helper&lt;/a&gt; (or under &lt;a href=&quot;https://api.emberjs.com/ember/release/classes/Helper&quot;&gt;Helper&lt;/a&gt; if a helper requires access to dependency injection).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e79349be2f7290fe5ca546e1b73a533a375eabf7" translate="yes" xml:space="preserve">
          <source>Ember's built-in helpers are described under the &lt;a href=&quot;https://emberjs.com/api/classes/Ember.Templates.helpers.html&quot;&gt;Ember.Templates.helpers&lt;/a&gt; namespace. Documentation on creating custom helpers can be found under &lt;a href=&quot;https://emberjs.com/api/classes/Ember.Helper.html&quot;&gt;Ember.Helper&lt;/a&gt;.</source>
          <target state="translated">Los ayudantes integrados de Ember se describen en el espacio de nombres &lt;a href=&quot;https://emberjs.com/api/classes/Ember.Templates.helpers.html&quot;&gt;Ember.Templates.helpers&lt;/a&gt; . La documentaci&amp;oacute;n sobre la creaci&amp;oacute;n de ayudantes personalizados se puede encontrar en &lt;a href=&quot;https://emberjs.com/api/classes/Ember.Helper.html&quot;&gt;Ember.Helper&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3c0f9d9bf048623c54d4d0924e5a97bb2bf26a2f" translate="yes" xml:space="preserve">
          <source>Ember's classic change tracking system used two methods to ensure that all data was accessed properly and updated correctly: &lt;code&gt;get&lt;/code&gt; and &lt;code&gt;set&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcd53cc45139dc5246441c0a11d5d080cb0ad0ae" translate="yes" xml:space="preserve">
          <source>Ember's internals and most of the code you will write in your applications takes place in a run loop. The run loop is used to batch, and order (or reorder) work in a way that is most effective and efficient.</source>
          <target state="translated">Los internos de Ember y la mayor parte del código que escribirá en sus aplicaciones tiene lugar en un bucle de ejecución.El bucle de ejecución se utiliza para hacer lotes y ordenar (o reordenar)el trabajo de la manera más efectiva y eficiente.</target>
        </trans-unit>
        <trans-unit id="39c872bc6f3f0efe606cfe19b7629be22b0f61f9" translate="yes" xml:space="preserve">
          <source>Ember's template syntax limits what you can express to keep the structure of your application clear at a glance. When you need to compute something using JavaScript, you can use helper functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6be996ba6cd33f8103ecdfbc59910278f5879fff" translate="yes" xml:space="preserve">
          <source>Ember's test helpers</source>
          <target state="translated">Los ayudantes de la prueba de Ember</target>
        </trans-unit>
        <trans-unit id="914fa361345873952abe23a6dc0ad3eafb2baa3e" translate="yes" xml:space="preserve">
          <source>Ember.$()</source>
          <target state="translated">Ember.$()</target>
        </trans-unit>
        <trans-unit id="b0f598f5fd538279750da37e48a4a293d53f1a0f" translate="yes" xml:space="preserve">
          <source>Ember.A()</source>
          <target state="translated">Ember.A()</target>
        </trans-unit>
        <trans-unit id="e8e460b5733c0fb74d12500c4e16c96ff83e6e04" translate="yes" xml:space="preserve">
          <source>Ember.ActionHandler</source>
          <target state="translated">Ember.ActionHandler</target>
        </trans-unit>
        <trans-unit id="922a82517a3c363186b8cb22ab32d037d060303a" translate="yes" xml:space="preserve">
          <source>Ember.ActionHandler  (private)</source>
          <target state="translated">Ember.ActionHandler (privado)</target>
        </trans-unit>
        <trans-unit id="15aff2d7bc33c5635c441298ddd60ae1951d78d0" translate="yes" xml:space="preserve">
          <source>Ember.ActionSupport  (private)</source>
          <target state="translated">Ember.ActionSupport (privado)</target>
        </trans-unit>
        <trans-unit id="713c41cae0cb1d232ffe9289d42f9775b7badc28" translate="yes" xml:space="preserve">
          <source>Ember.Application</source>
          <target state="translated">Ember.Application</target>
        </trans-unit>
        <trans-unit id="ab03fc8628b1bdaed6c92a6bd196531ccbb1aab1" translate="yes" xml:space="preserve">
          <source>Ember.Application  (public)</source>
          <target state="translated">Ember.Application (public)</target>
        </trans-unit>
        <trans-unit id="e3faac80f047e46a9dd9d33bcad1647ff3921364" translate="yes" xml:space="preserve">
          <source>Ember.ApplicationInstance</source>
          <target state="translated">Ember.ApplicationInstance</target>
        </trans-unit>
        <trans-unit id="dffd1f260601a7340b76113840758b815cd07b75" translate="yes" xml:space="preserve">
          <source>Ember.ApplicationInstance  (public)</source>
          <target state="translated">Ember.ApplicationInstance (public)</target>
        </trans-unit>
        <trans-unit id="a2232cfd4a3393acb524fceccb47b55083688817" translate="yes" xml:space="preserve">
          <source>Ember.ApplicationInstance.BootOptions</source>
          <target state="translated">Ember.ApplicationInstance.BootOptions</target>
        </trans-unit>
        <trans-unit id="fbae5eff06ffeed2104908cafa5d3b3d094a21e6" translate="yes" xml:space="preserve">
          <source>Ember.ApplicationInstance.BootOptions  (public)</source>
          <target state="translated">Ember.ApplicationInstance.BootOptions (público)</target>
        </trans-unit>
        <trans-unit id="7a6b661413caca21b8638bd98ec882681fc7629a" translate="yes" xml:space="preserve">
          <source>Ember.Array</source>
          <target state="translated">Ember.Array</target>
        </trans-unit>
        <trans-unit id="7d267e11143241c2768795b23dd6e9174dd520e0" translate="yes" xml:space="preserve">
          <source>Ember.Array  (public)</source>
          <target state="translated">Ember.Array (público)</target>
        </trans-unit>
        <trans-unit id="77a52820f9bd23423391fb7a4eb2f524edaa19bb" translate="yes" xml:space="preserve">
          <source>Ember.ArrayProxy</source>
          <target state="translated">Ember.ArrayProxy</target>
        </trans-unit>
        <trans-unit id="9ec4b126867856ba8be80d545d3bbb7be0094d39" translate="yes" xml:space="preserve">
          <source>Ember.ArrayProxy  (public)</source>
          <target state="translated">Ember.ArrayProxy (público)</target>
        </trans-unit>
        <trans-unit id="9c18d3847387f52d7ee39b1c14871de7aa422ca2" translate="yes" xml:space="preserve">
          <source>Ember.AutoLocation</source>
          <target state="translated">Ember.AutoLocation</target>
        </trans-unit>
        <trans-unit id="c7d28c084f935480483d101f072ad808910a4d14" translate="yes" xml:space="preserve">
          <source>Ember.AutoLocation  (protected)</source>
          <target state="translated">Ember.Autolocalización (protegida)</target>
        </trans-unit>
        <trans-unit id="462d399623a99849eea77ac5d2ae12167ac7a699" translate="yes" xml:space="preserve">
          <source>Ember.AutoLocation will select the best location option based off browser support with the priority order: history, hash, none.</source>
          <target state="translated">Ember.Autolocalización seleccionará la mejor opción de localización basándose en el soporte del navegador con el orden de prioridad:historial,hash,ninguno.</target>
        </trans-unit>
        <trans-unit id="aec77311e4c408bf83fcdbde4dae193da72d75e7" translate="yes" xml:space="preserve">
          <source>Ember.Binding</source>
          <target state="translated">Ember.Binding</target>
        </trans-unit>
        <trans-unit id="f3717d52f74be7d7d0359d06896ad42f547a854f" translate="yes" xml:space="preserve">
          <source>Ember.Checkbox</source>
          <target state="translated">Ember.Checkbox</target>
        </trans-unit>
        <trans-unit id="5e56bd3c44b511f0966fcc566a3b02483fa25116" translate="yes" xml:space="preserve">
          <source>Ember.Checkbox  (public)</source>
          <target state="translated">Ember.Casilla de verificación (pública)</target>
        </trans-unit>
        <trans-unit id="004c0c2dde170d27e2693bfee255e491a257be9b" translate="yes" xml:space="preserve">
          <source>Ember.ClassNamesSupport  (private)</source>
          <target state="translated">Ember.ClassNamesSupport (privado)</target>
        </trans-unit>
        <trans-unit id="bfe07a79702884b19260f81f95abfa611e7f6151" translate="yes" xml:space="preserve">
          <source>Ember.Component</source>
          <target state="translated">Ember.Component</target>
        </trans-unit>
        <trans-unit id="f6ae6bfb50179f1e71f169d96e6f4e4368443cd1" translate="yes" xml:space="preserve">
          <source>Ember.Component  (public)</source>
          <target state="translated">Ember.Componente (público)</target>
        </trans-unit>
        <trans-unit id="4fac341c641a75aaa1fd6e8a189915498f94d674" translate="yes" xml:space="preserve">
          <source>Ember.ComputedProperty</source>
          <target state="translated">Ember.ComputedProperty</target>
        </trans-unit>
        <trans-unit id="562f5329d6f1ec790dfe1017360fcca367aeddb7" translate="yes" xml:space="preserve">
          <source>Ember.ComputedProperty  (public)</source>
          <target state="translated">Ember.ComputedProperty (público)</target>
        </trans-unit>
        <trans-unit id="6c510e5ba24a212639a396e57827fed387edb204" translate="yes" xml:space="preserve">
          <source>Ember.ContainerDebugAdapter</source>
          <target state="translated">Ember.ContainerDebugAdapter</target>
        </trans-unit>
        <trans-unit id="df50c89394a63fc293552827751d18800bcf9942" translate="yes" xml:space="preserve">
          <source>Ember.ContainerDebugAdapter  (public)</source>
          <target state="translated">Ember.ContainerDebugAdapter (público)</target>
        </trans-unit>
        <trans-unit id="dcbc72a2bb46513b04116ee7bc746f6e3b6e622e" translate="yes" xml:space="preserve">
          <source>Ember.Controller</source>
          <target state="translated">Ember.Controller</target>
        </trans-unit>
        <trans-unit id="17f756c20ded3cad7e0a09a565973b9d76e7b955" translate="yes" xml:space="preserve">
          <source>Ember.Controller  (public)</source>
          <target state="translated">Ember.Controlador (público)</target>
        </trans-unit>
        <trans-unit id="c4d3930263bc5af8900c163ba205a96e63fd0126" translate="yes" xml:space="preserve">
          <source>Ember.ControllerMixin</source>
          <target state="translated">Ember.ControllerMixin</target>
        </trans-unit>
        <trans-unit id="9bc4666c599ba596aad10898fb31dbbeb0f38f7c" translate="yes" xml:space="preserve">
          <source>Ember.ControllerMixin  (private)</source>
          <target state="translated">Ember.ControllerMixin (privado)</target>
        </trans-unit>
        <trans-unit id="bbf1f4d26725b6fb68a8f1c85c40b38534747cc1" translate="yes" xml:space="preserve">
          <source>Ember.Copyable  (private)</source>
          <target state="translated">Ember.Copiable (privado)</target>
        </trans-unit>
        <trans-unit id="11518d4a9d3520e935d1394352e9bb5f3c4e7357" translate="yes" xml:space="preserve">
          <source>Ember.CoreObject</source>
          <target state="translated">Ember.CoreObject</target>
        </trans-unit>
        <trans-unit id="8ca51e9c7b60ea9b5d9b1f279f411b64c90d52a8" translate="yes" xml:space="preserve">
          <source>Ember.CoreObject  (public)</source>
          <target state="translated">Ember.CoreObject (público)</target>
        </trans-unit>
        <trans-unit id="e133e0c3532844cdec14406a503b582a9844e6a5" translate="yes" xml:space="preserve">
          <source>Ember.CoreView</source>
          <target state="translated">Ember.CoreView</target>
        </trans-unit>
        <trans-unit id="a68334daf31e2cdebc677946276e707f71f6208d" translate="yes" xml:space="preserve">
          <source>Ember.CoreView  (private)</source>
          <target state="translated">Ember.CoreView (privado)</target>
        </trans-unit>
        <trans-unit id="8be348e1cb0e873d3db08d0e2a68a28fdd7948e8" translate="yes" xml:space="preserve">
          <source>Ember.DataAdapter</source>
          <target state="translated">Ember.DataAdapter</target>
        </trans-unit>
        <trans-unit id="b29fdc042b440e9f4668c7d45c01b9a78495c7a3" translate="yes" xml:space="preserve">
          <source>Ember.DataAdapter  (public)</source>
          <target state="translated">Ember.DataAdapter (público)</target>
        </trans-unit>
        <trans-unit id="676210d1647ab8027b54057983cf5538bba9b3b4" translate="yes" xml:space="preserve">
          <source>Ember.Debug</source>
          <target state="translated">Ember.Debug</target>
        </trans-unit>
        <trans-unit id="a0da2d92176cfccca262ecc241a24318d2a86ba0" translate="yes" xml:space="preserve">
          <source>Ember.Debug  (public)</source>
          <target state="translated">Ember.Debug (público)</target>
        </trans-unit>
        <trans-unit id="2f906adc335e9b761e07b3293475c8e66ef5071f" translate="yes" xml:space="preserve">
          <source>Ember.DefaultResolver</source>
          <target state="translated">Ember.DefaultResolver</target>
        </trans-unit>
        <trans-unit id="90d6a4e87d8338861f3668e476209de1b77f4919" translate="yes" xml:space="preserve">
          <source>Ember.DefaultResolver  (public)</source>
          <target state="translated">Ember.DefaultResolver (público)</target>
        </trans-unit>
        <trans-unit id="8c16daa2a7d5e103cbe04f1f724b73c285d4e5f3" translate="yes" xml:space="preserve">
          <source>Ember.EmberENV</source>
          <target state="translated">Ember.EmberENV</target>
        </trans-unit>
        <trans-unit id="8fbe732266bd84c086612000161bdbb92528f311" translate="yes" xml:space="preserve">
          <source>Ember.Engine</source>
          <target state="translated">Ember.Engine</target>
        </trans-unit>
        <trans-unit id="1f0e0f3af58758f30d9a85815929c2d292e6bf36" translate="yes" xml:space="preserve">
          <source>Ember.Engine  (public)</source>
          <target state="translated">Ember.Engine (público)</target>
        </trans-unit>
        <trans-unit id="7c238cf79bb0628888616d7e4309703a64d23b05" translate="yes" xml:space="preserve">
          <source>Ember.EngineInstance</source>
          <target state="translated">Ember.EngineInstance</target>
        </trans-unit>
        <trans-unit id="93df00f84086aef83fce4728a0dad83c3aaf3c16" translate="yes" xml:space="preserve">
          <source>Ember.EngineInstance  (public)</source>
          <target state="translated">Ember.EngineInstance (público)</target>
        </trans-unit>
        <trans-unit id="001a636a73a18a0f9d500c1b97aa3be30d5d49f1" translate="yes" xml:space="preserve">
          <source>Ember.Enumerable</source>
          <target state="translated">Ember.Enumerable</target>
        </trans-unit>
        <trans-unit id="67dbb04f9fc4d64ff9bac7b140519f9c3dd0ee02" translate="yes" xml:space="preserve">
          <source>Ember.Enumerable  (private)</source>
          <target state="translated">Ember.Numerosas (privadas)</target>
        </trans-unit>
        <trans-unit id="cba1950a79cc8493d000756804730e98ffa58139" translate="yes" xml:space="preserve">
          <source>Ember.Error</source>
          <target state="translated">Ember.Error</target>
        </trans-unit>
        <trans-unit id="f1acf2310287f06c597a2c52770d8244af7591ce" translate="yes" xml:space="preserve">
          <source>Ember.Error  (public)</source>
          <target state="translated">Ember.Error (público)</target>
        </trans-unit>
        <trans-unit id="9aeebd4e38b3e365b11209f6fa31244818a51bd5" translate="yes" xml:space="preserve">
          <source>Ember.Evented</source>
          <target state="translated">Ember.Evented</target>
        </trans-unit>
        <trans-unit id="7bd15935f2c21d8b2a49ad51e7905ade64db7207" translate="yes" xml:space="preserve">
          <source>Ember.Evented  (public)</source>
          <target state="translated">Ember.Evento (público)</target>
        </trans-unit>
        <trans-unit id="19e394e034dc42afbeb64d78a26d1015a785fdca" translate="yes" xml:space="preserve">
          <source>Ember.FEATURES</source>
          <target state="translated">Ember.FEATURES</target>
        </trans-unit>
        <trans-unit id="d8be7c5784804b0911cc15176037583ac8d8b970" translate="yes" xml:space="preserve">
          <source>Ember.FEATURES  (public)</source>
          <target state="translated">Ember.CARACTERÍSTICAS (público)</target>
        </trans-unit>
        <trans-unit id="d331badb95b3c9a36b514eeda7a0d682fc133519" translate="yes" xml:space="preserve">
          <source>Ember.HTMLBars.helpers</source>
          <target state="translated">Ember.HTMLBars.helpers</target>
        </trans-unit>
        <trans-unit id="5c8e12b95dc35365a72cb627f48ef05a7f80c117" translate="yes" xml:space="preserve">
          <source>Ember.HashLocation</source>
          <target state="translated">Ember.HashLocation</target>
        </trans-unit>
        <trans-unit id="a0d754e186044923dc32b52fe0548744992b2e19" translate="yes" xml:space="preserve">
          <source>Ember.HashLocation  (protected)</source>
          <target state="translated">Ember.HashLocation (protegido)</target>
        </trans-unit>
        <trans-unit id="0d234143654f21bd2ec5578dde45e90665ba44c6" translate="yes" xml:space="preserve">
          <source>Ember.Helper</source>
          <target state="translated">Ember.Helper</target>
        </trans-unit>
        <trans-unit id="030a5339ade8f96f749cb064681437d06d22c258" translate="yes" xml:space="preserve">
          <source>Ember.Helper  (public)</source>
          <target state="translated">Ember.Ayudante (público)</target>
        </trans-unit>
        <trans-unit id="257c7fd484531881391b4665b91387ab85f16839" translate="yes" xml:space="preserve">
          <source>Ember.HistoryLocation</source>
          <target state="translated">Ember.HistoryLocation</target>
        </trans-unit>
        <trans-unit id="1e195d77e21445ae1b7b378e785f51387cb67e1b" translate="yes" xml:space="preserve">
          <source>Ember.HistoryLocation  (protected)</source>
          <target state="translated">Ember.HistoryLocación (protegida)</target>
        </trans-unit>
        <trans-unit id="1ea062cacc084f863a7e0a36a769f2573be51d22" translate="yes" xml:space="preserve">
          <source>Ember.HistoryLocation implements the location API using the browser's history.pushState API.</source>
          <target state="translated">Ember.HistoryLocation implementa la API de localización utilizando la API history.pushState del navegador.</target>
        </trans-unit>
        <trans-unit id="755be5875f4ffc44a7e719defd0d1507d7e15671" translate="yes" xml:space="preserve">
          <source>Ember.Inflector</source>
          <target state="translated">Ember.Inflector</target>
        </trans-unit>
        <trans-unit id="d237b93ccf9f4cdaba16c7829037b58104677ff7" translate="yes" xml:space="preserve">
          <source>Ember.InjectedProperty</source>
          <target state="translated">Ember.InjectedProperty</target>
        </trans-unit>
        <trans-unit id="ea553cf27b26ad211e535d3443c961881b892c9f" translate="yes" xml:space="preserve">
          <source>Ember.Instrumentation</source>
          <target state="translated">Ember.Instrumentation</target>
        </trans-unit>
        <trans-unit id="0972ee1cabee0fe1743d39208ba02c356f442a90" translate="yes" xml:space="preserve">
          <source>Ember.Instrumentation  (private)</source>
          <target state="translated">Ember.Instrumentación (privada)</target>
        </trans-unit>
        <trans-unit id="a41099117c916f9f720247a59ab4186900f0d159" translate="yes" xml:space="preserve">
          <source>Ember.LinkComponent</source>
          <target state="translated">Ember.LinkComponent</target>
        </trans-unit>
        <trans-unit id="ed6be0c16e7127a346efc3853eb932134daa04e8" translate="yes" xml:space="preserve">
          <source>Ember.LinkComponent  (public)</source>
          <target state="translated">Ember.LinkComponente (público)</target>
        </trans-unit>
        <trans-unit id="ada85ce7774bdca250eea0e583c681132495af28" translate="yes" xml:space="preserve">
          <source>Ember.Location returns an instance of the correct implementation of the &lt;code&gt;location&lt;/code&gt; API.</source>
          <target state="translated">Ember.Location devuelve una instancia de la implementaci&amp;oacute;n correcta de la API de &lt;code&gt;location&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1736be843d715a11d44e91ef11c1882c50a009dc" translate="yes" xml:space="preserve">
          <source>Ember.Mixin</source>
          <target state="translated">Ember.Mixin</target>
        </trans-unit>
        <trans-unit id="b4059bf02c60cafb26c6998c612a7955c54aad96" translate="yes" xml:space="preserve">
          <source>Ember.Mixin  (public)</source>
          <target state="translated">Ember.Mixin (público)</target>
        </trans-unit>
        <trans-unit id="18c09e10a90b6a947387ff9ae92a0b4e3d45bd9a" translate="yes" xml:space="preserve">
          <source>Ember.MutableArray</source>
          <target state="translated">Ember.MutableArray</target>
        </trans-unit>
        <trans-unit id="fc2b9e4c91eb7635e2ce97c13a75e6a281791edd" translate="yes" xml:space="preserve">
          <source>Ember.MutableArray  (public)</source>
          <target state="translated">Ember.MutableArray (público)</target>
        </trans-unit>
        <trans-unit id="1e0f24413a44f66b86311afab56b8f958866877a" translate="yes" xml:space="preserve">
          <source>Ember.MutableEnumerable</source>
          <target state="translated">Ember.MutableEnumerable</target>
        </trans-unit>
        <trans-unit id="75ce85d83fe6e88e40654c329abd4a433777ca87" translate="yes" xml:space="preserve">
          <source>Ember.MutableEnumerable  (public)</source>
          <target state="translated">Ember.MutableNúmero (público)</target>
        </trans-unit>
        <trans-unit id="d3f147201e81e6db6080df7c9d45ac58998e38d1" translate="yes" xml:space="preserve">
          <source>Ember.Namespace</source>
          <target state="translated">Ember.Namespace</target>
        </trans-unit>
        <trans-unit id="e329091b2d05f11ef48b7406b525d6441d89c54d" translate="yes" xml:space="preserve">
          <source>Ember.Namespace  (public)</source>
          <target state="translated">Ember.Namespace (público)</target>
        </trans-unit>
        <trans-unit id="f6019367540925feed6e870d2b10c321f90bea10" translate="yes" xml:space="preserve">
          <source>Ember.NativeArray</source>
          <target state="translated">Ember.NativeArray</target>
        </trans-unit>
        <trans-unit id="e3dd8a2f873025d0833c76171efecb727945ab25" translate="yes" xml:space="preserve">
          <source>Ember.NativeArray  (public)</source>
          <target state="translated">Ember.NativeArray (público)</target>
        </trans-unit>
        <trans-unit id="2afa2fd62959e2a8cda6f3db78b864432bf8a5c0" translate="yes" xml:space="preserve">
          <source>Ember.NoneLocation</source>
          <target state="translated">Ember.NoneLocation</target>
        </trans-unit>
        <trans-unit id="1416dff8d7a39cfd319fcd29e752251d4921afff" translate="yes" xml:space="preserve">
          <source>Ember.NoneLocation  (protected)</source>
          <target state="translated">Ember.NoneLocalización (protegida)</target>
        </trans-unit>
        <trans-unit id="e10de1bac86a102c4e67eb2f33759b53f198e225" translate="yes" xml:space="preserve">
          <source>Ember.NoneLocation does not interact with the browser. It is useful for testing, or when you need to manage state with your Router, but temporarily don't want it to muck with the URL (for example when you embed your application in a larger page).</source>
          <target state="translated">Ember.NoneLocation no interactúa con el navegador.Es útil para realizar pruebas o cuando necesita gestionar el estado con su router,pero temporalmente no quiere que se ensucie con la URL (por ejemplo,cuando incrusta su aplicación en una página más grande).</target>
        </trans-unit>
        <trans-unit id="c8ff02b6a123b6fb7681af53956465dd399f4878" translate="yes" xml:space="preserve">
          <source>Ember.Object</source>
          <target state="translated">Ember.Object</target>
        </trans-unit>
        <trans-unit id="0756f25e5edbe3995503ad290de58e8cf2d71ffb" translate="yes" xml:space="preserve">
          <source>Ember.Object  (public)</source>
          <target state="translated">Ember.Objeto (público)</target>
        </trans-unit>
        <trans-unit id="0dd2de7672b3d5c8ea26f05f3c426669a35bff8f" translate="yes" xml:space="preserve">
          <source>Ember.ObjectProxy</source>
          <target state="translated">Ember.ObjectProxy</target>
        </trans-unit>
        <trans-unit id="f2790c3c0d2b8b5e153332befc899281f1edde34" translate="yes" xml:space="preserve">
          <source>Ember.ObjectProxy  (public)</source>
          <target state="translated">Ember.ObjectProxy (público)</target>
        </trans-unit>
        <trans-unit id="da55aedf341dd4339bf5bded1e2bdeb640106145" translate="yes" xml:space="preserve">
          <source>Ember.Observable</source>
          <target state="translated">Ember.Observable</target>
        </trans-unit>
        <trans-unit id="e2938e91cf66a189f17bb6eb2a17b9f851f81c1f" translate="yes" xml:space="preserve">
          <source>Ember.Observable  (public)</source>
          <target state="translated">Ember.Observable (público)</target>
        </trans-unit>
        <trans-unit id="d181235d1279747a2408ce9dfdf4c7a27df856c3" translate="yes" xml:space="preserve">
          <source>Ember.PromiseProxyMixin</source>
          <target state="translated">Ember.PromiseProxyMixin</target>
        </trans-unit>
        <trans-unit id="338e8a6be5416dd31dcd136f795b2f7a6828d529" translate="yes" xml:space="preserve">
          <source>Ember.PromiseProxyMixin  (public)</source>
          <target state="translated">Ember.PromiseProxyMixin (público)</target>
        </trans-unit>
        <trans-unit id="b6f3e452973dd0f1ee8115a28f148d2057d30aad" translate="yes" xml:space="preserve">
          <source>Ember.ProxyMixin</source>
          <target state="translated">Ember.ProxyMixin</target>
        </trans-unit>
        <trans-unit id="633077e9349b383f253bf4259daebe57aebe4c36" translate="yes" xml:space="preserve">
          <source>Ember.ProxyMixin  (private)</source>
          <target state="translated">Ember.ProxyMixin (privado)</target>
        </trans-unit>
        <trans-unit id="bc4f70201d28ddbca19b73d12161033f4c8d8a3a" translate="yes" xml:space="preserve">
          <source>Ember.Route</source>
          <target state="translated">Ember.Route</target>
        </trans-unit>
        <trans-unit id="d6e968d59f841af544abbc680ffd68a991d7868f" translate="yes" xml:space="preserve">
          <source>Ember.Route  (public)</source>
          <target state="translated">Ember Road (público)</target>
        </trans-unit>
        <trans-unit id="2cfa8682da25ce3b717b9d6f7b87456bb19c3031" translate="yes" xml:space="preserve">
          <source>Ember.Router</source>
          <target state="translated">Ember.Router</target>
        </trans-unit>
        <trans-unit id="066a906ce0ac6845cf8228b5d5c955427bdd69bd" translate="yes" xml:space="preserve">
          <source>Ember.Router  (public)</source>
          <target state="translated">Ember.Router (público)</target>
        </trans-unit>
        <trans-unit id="c8e12de76e6230ab20f9aba5adedceb8fd8dfddf" translate="yes" xml:space="preserve">
          <source>Ember.Service</source>
          <target state="translated">Ember.Service</target>
        </trans-unit>
        <trans-unit id="ad1063b7c1c08fca7e440121c7db4a91b518d74a" translate="yes" xml:space="preserve">
          <source>Ember.Service  (public)</source>
          <target state="translated">Ember.Service (público)</target>
        </trans-unit>
        <trans-unit id="a427e00434c3c4d9a83e79a43b5c0566ba5527ae" translate="yes" xml:space="preserve">
          <source>Ember.String</source>
          <target state="translated">Ember.String</target>
        </trans-unit>
        <trans-unit id="e9fb702e719806a83e2bac4727f734deae735f4a" translate="yes" xml:space="preserve">
          <source>Ember.String  (public)</source>
          <target state="translated">Ember.String (público)</target>
        </trans-unit>
        <trans-unit id="71de4de71c9f4f899314883459e4d8dbf9783f88" translate="yes" xml:space="preserve">
          <source>Ember.TargetActionSupport</source>
          <target state="translated">Ember.TargetActionSupport</target>
        </trans-unit>
        <trans-unit id="6dfff80b3871f24811a978a2c8ecacd7c4e58197" translate="yes" xml:space="preserve">
          <source>Ember.TargetActionSupport  (private)</source>
          <target state="translated">Ember.TargetActionSupport (privado)</target>
        </trans-unit>
        <trans-unit id="f1a5c9dee104c44c592db6229972eeea357486ad" translate="yes" xml:space="preserve">
          <source>Ember.Templates.helpers</source>
          <target state="translated">Ember.Templates.helpers</target>
        </trans-unit>
        <trans-unit id="a0922ba888214f7d1ee936e8df22f07c6930b87e" translate="yes" xml:space="preserve">
          <source>Ember.Test</source>
          <target state="translated">Ember.Test</target>
        </trans-unit>
        <trans-unit id="da0c137ca5da0da15d26c86733b6d526fc7298f3" translate="yes" xml:space="preserve">
          <source>Ember.Test  (public)</source>
          <target state="translated">Ember.Prueba (pública)</target>
        </trans-unit>
        <trans-unit id="4b15e99ca664d4c1015a7d6ad76ac31e982b1877" translate="yes" xml:space="preserve">
          <source>Ember.Test.Adapter</source>
          <target state="translated">Ember.Test.Adapter</target>
        </trans-unit>
        <trans-unit id="69c656334ea11b6899a9291b8d0e07b57d84436f" translate="yes" xml:space="preserve">
          <source>Ember.Test.Adapter  (public)</source>
          <target state="translated">Adaptador de prueba de Ember (público)</target>
        </trans-unit>
        <trans-unit id="3ce4d1363ce9d405db2e5940a5bd41b4c21fbed0" translate="yes" xml:space="preserve">
          <source>Ember.Test.QUnitAdapter</source>
          <target state="translated">Ember.Test.QUnitAdapter</target>
        </trans-unit>
        <trans-unit id="c96023d8839b56cab3d00c93601ec6e1dfd55f91" translate="yes" xml:space="preserve">
          <source>Ember.Test.QUnitAdapter  (public)</source>
          <target state="translated">Ember.Test.QUnitAdapter (público)</target>
        </trans-unit>
        <trans-unit id="3fb0c3d1157d548a3ac017f9bc1dfe23a02fe0b8" translate="yes" xml:space="preserve">
          <source>Ember.TextArea</source>
          <target state="translated">Ember.TextArea</target>
        </trans-unit>
        <trans-unit id="80bc4c0a10d44901a0e65cb1a32e71e268b2af2c" translate="yes" xml:space="preserve">
          <source>Ember.TextArea  (public)</source>
          <target state="translated">Ember.TextArea (público)</target>
        </trans-unit>
        <trans-unit id="aa809523b3f9796d1ad9291b98aaf29630f94fd5" translate="yes" xml:space="preserve">
          <source>Ember.TextField</source>
          <target state="translated">Ember.TextField</target>
        </trans-unit>
        <trans-unit id="cb358ee1c518cb846f5e0712ef7e587646593c67" translate="yes" xml:space="preserve">
          <source>Ember.TextField  (public)</source>
          <target state="translated">Ember.TextField (público)</target>
        </trans-unit>
        <trans-unit id="348ebabf9a4cff246e5393eaa3816c64b2e3b6cb" translate="yes" xml:space="preserve">
          <source>Ember.TextSupport</source>
          <target state="translated">Ember.TextSupport</target>
        </trans-unit>
        <trans-unit id="9e8ced72acd669c0156721c5eafb022e355af436" translate="yes" xml:space="preserve">
          <source>Ember.TextSupport  (private)</source>
          <target state="translated">Ember.TextSupport (privado)</target>
        </trans-unit>
        <trans-unit id="5e057edb8ae34457dbf2e10e2ada8d5cca1a88fe" translate="yes" xml:space="preserve">
          <source>Ember.ViewMixin  (private)</source>
          <target state="translated">Ember.ViewMixin (privado)</target>
        </trans-unit>
        <trans-unit id="27516aba2a3cace3a60247e55a9348d83d01d81e" translate="yes" xml:space="preserve">
          <source>Ember.computed</source>
          <target state="translated">Ember.computed</target>
        </trans-unit>
        <trans-unit id="8fd52f6ff95fe6988b43c3c9527509d056797d42" translate="yes" xml:space="preserve">
          <source>Ember.computed  (public)</source>
          <target state="translated">Ember.computado (público)</target>
        </trans-unit>
        <trans-unit id="808a9073912c9ba151a0fc3d2317926009d39d7e" translate="yes" xml:space="preserve">
          <source>Ember.computed.gt()</source>
          <target state="translated">Ember.computed.gt()</target>
        </trans-unit>
        <trans-unit id="8e5d2631dbd650878982a89efd2b8f1ca1be2b28" translate="yes" xml:space="preserve">
          <source>Ember.computed.lt()</source>
          <target state="translated">Ember.computed.lt()</target>
        </trans-unit>
        <trans-unit id="d617dc014b5eb8b8b009044b84bd41b3b4a76bb0" translate="yes" xml:space="preserve">
          <source>Ember.computed.or()</source>
          <target state="translated">Ember.computed.or()</target>
        </trans-unit>
        <trans-unit id="254b8d437f289bc82dce00d81294f85e82919c0a" translate="yes" xml:space="preserve">
          <source>Ember.inject</source>
          <target state="translated">Ember.inject</target>
        </trans-unit>
        <trans-unit id="fb5831f1f8afa770b8334b350846e7e387d74860" translate="yes" xml:space="preserve">
          <source>Ember.inject  (public)</source>
          <target state="translated">Ember.inject (público)</target>
        </trans-unit>
        <trans-unit id="16ecb5f9431de8b0cec5717985eb281e13fa564f" translate="yes" xml:space="preserve">
          <source>Ember.js</source>
          <target state="translated">Ember.js</target>
        </trans-unit>
        <trans-unit id="0e7a1b3338236829f879a20135c785e528fa6157" translate="yes" xml:space="preserve">
          <source>Ember.js Guides</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2744e8418fe1dc813d4107ec59af935c3a9e9460" translate="yes" xml:space="preserve">
          <source>Ember.js is a productive, battle-tested JavaScript framework for building modern web applications. It includes everything you need to build rich UIs that work on any device. It does so by providing developers many features that are essential to manage complexity in modern web applications, as well as an integrated development toolkit that enables rapid iteration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68e02ce12739d6dfefd2c5d4f6b2805cec3b3e15" translate="yes" xml:space="preserve">
          <source>Ember.js itself works with any type of back end: REST, JSON:API, GraphQL, or anything else. To learn about other ways to handle data and to find extensions, check out the guide for &lt;a href=&quot;../in-depth-topics/making-api-requests&quot;&gt;making API requests&lt;/a&gt;, look for plugins on &lt;a href=&quot;https://www.emberobserver.com/&quot;&gt;Ember Observer&lt;/a&gt;, and search for community-made tutorials.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3765a2afa53fcbc64f3f9564b4080b8eb053b165" translate="yes" xml:space="preserve">
          <source>Ember.js itself works with any type of back end: REST, JSON:API, GraphQL, or anything else. To learn about other ways to handle data and to find extensions, check out the guide for &lt;a href=&quot;https://guides.emberjs.com/in-depth-topics/making-api-requests/&quot;&gt;making API requests&lt;/a&gt;, look for plugins on &lt;a href=&quot;https://www.emberobserver.com/&quot;&gt;Ember Observer&lt;/a&gt;, and search for community-made tutorials.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3c45a09b13c5d71314ee2400e1e100d1f2ef430" translate="yes" xml:space="preserve">
          <source>Ember.on()</source>
          <target state="translated">Ember.on()</target>
        </trans-unit>
        <trans-unit id="1974fd7a394c3ab546f760dc6de20d0d0bc2f477" translate="yes" xml:space="preserve">
          <source>Ember.run</source>
          <target state="translated">Ember.run</target>
        </trans-unit>
        <trans-unit id="3406ea55d7b1b98047bbe1312f773e59d00ca3b5" translate="yes" xml:space="preserve">
          <source>Ember.run  (public)</source>
          <target state="translated">Ember.run (público)</target>
        </trans-unit>
        <trans-unit id="46897c079a4ac7aac4e47f26ec88ff0a988d7467" translate="yes" xml:space="preserve">
          <source>EmberArray</source>
          <target state="translated">EmberArray</target>
        </trans-unit>
        <trans-unit id="a7f5378a54d4d42b81036d4e7c6a5d8d5f2d8c73" translate="yes" xml:space="preserve">
          <source>EmberData allows users to opt-in and remove code that exists to support deprecated behaviors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5d64f8e1e7bb6deb564fdce4b8f7d30db04eb11" translate="yes" xml:space="preserve">
          <source>EmberData allows users to test features that are implemented but not yet available even in canary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00e0027fb4b06bef4152b4a1495644ed8f42fc32" translate="yes" xml:space="preserve">
          <source>EmberData.DeprecatedEvented</source>
          <target state="translated">EmberData.DeprecatedEvented</target>
        </trans-unit>
        <trans-unit id="e2e6abf829f4727e016352e7790205c1bbec9dfc" translate="yes" xml:space="preserve">
          <source>EmberObject</source>
          <target state="translated">EmberObject</target>
        </trans-unit>
        <trans-unit id="3647edc26f7f20bff0766b3c4bc36f0805e91112" translate="yes" xml:space="preserve">
          <source>EmberRouter</source>
          <target state="translated">EmberRouter</target>
        </trans-unit>
        <trans-unit id="e12348abf3ab7ba8084d06a467c799e97f89de04" translate="yes" xml:space="preserve">
          <source>Empty Lists</source>
          <target state="translated">Listas vacías</target>
        </trans-unit>
        <trans-unit id="eb0036d3919fa6e5318d080cdcfddf3f172b1238" translate="yes" xml:space="preserve">
          <source>Enable Ember Favicon</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f403ef0109c0523a5d41cfc16187b8459d211dc" translate="yes" xml:space="preserve">
          <source>Enable Tomster</source>
          <target state="translated">Habilitar a Tomster</target>
        </trans-unit>
        <trans-unit id="f3ebd8e1e9e694e654d18823b23e55f1e1525e49" translate="yes" xml:space="preserve">
          <source>Enables components to take a list of parameters as arguments. For example, a component that takes two parameters with the names &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;age&lt;/code&gt;:</source>
          <target state="translated">Permite que los componentes tomen una lista de par&amp;aacute;metros como argumentos. Por ejemplo, un componente que toma dos par&amp;aacute;metros con los nombres &lt;code&gt;name&lt;/code&gt; y &lt;code&gt;age&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="17ba52a4a99379b72fa31fc0c68cf94e23629ac3" translate="yes" xml:space="preserve">
          <source>Enabling At Runtime</source>
          <target state="translated">Habilitación en tiempo de ejecución</target>
        </trans-unit>
        <trans-unit id="3843d1e09c0507b629e0dba6f2ac93f7f143adac" translate="yes" xml:space="preserve">
          <source>Enabling this feature makes template-only components more consistent with angle-bracket invocation and with Glimmer components. Additionally it improves the performance of template-only components (there is no JS object instantiated to provide context) and makes them an excellent replacement for use of Ember's more complex and now discouraged API &lt;code&gt;{{partial&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64fa9774d1de3f05ab8171a48958b3170113f2a3" translate="yes" xml:space="preserve">
          <source>Enabling this feature will result in only the contents of the template being rendered, and additionally in no classic Ember component instance being instantiated to provide it context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="851f20cb075439a384349c1a4fca25868b3d734e" translate="yes" xml:space="preserve">
          <source>Endpoint Path Customization</source>
          <target state="translated">Personalización de la trayectoria del punto final</target>
        </trans-unit>
        <trans-unit id="8f45cadea6cdda33e345e17a8e6d63f0f0496c1f" translate="yes" xml:space="preserve">
          <source>Endpoint path customization</source>
          <target state="translated">Personalización de la trayectoria del punto final</target>
        </trans-unit>
        <trans-unit id="dc210213e8360e285af511ee9be69cfb2d8f6c2c" translate="yes" xml:space="preserve">
          <source>Endpoint paths can be prefixed with a &lt;code&gt;namespace&lt;/code&gt; by setting the namespace property on the adapter:</source>
          <target state="translated">Las rutas de los extremos pueden tener como prefijo un &lt;code&gt;namespace&lt;/code&gt; de nombres estableciendo la propiedad del espacio de nombres en el adaptador:</target>
        </trans-unit>
        <trans-unit id="e548ddf520419fd5ee11365d3d4182b276507d87" translate="yes" xml:space="preserve">
          <source>Ends a RunLoop. This must be called sometime after you call &lt;code&gt;begin()&lt;/code&gt; to flush any deferred actions. This is a lower-level way to use a RunLoop instead of using &lt;code&gt;run()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c90317873b2dd0dca17175bfa2d5c9c12a9ea898" translate="yes" xml:space="preserve">
          <source>Ends a RunLoop. This must be called sometime after you call &lt;code&gt;run.begin()&lt;/code&gt; to flush any deferred actions. This is a lower-level way to use a RunLoop instead of using &lt;code&gt;run()&lt;/code&gt;.</source>
          <target state="translated">Finaliza un RunLoop. Esto se debe llamar en alg&amp;uacute;n momento despu&amp;eacute;s de llamar a &lt;code&gt;run.begin()&lt;/code&gt; para eliminar cualquier acci&amp;oacute;n diferida. Esta es una forma de nivel inferior de usar RunLoop en lugar de usar &lt;code&gt;run()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c1f65ddb75ed7d97e701168af35171410be8f9e7" translate="yes" xml:space="preserve">
          <source>Engine</source>
          <target state="translated">Engine</target>
        </trans-unit>
        <trans-unit id="1ceb9d2f3f43a5d49f7e4af45d99b54ee33c643c" translate="yes" xml:space="preserve">
          <source>EngineInstance</source>
          <target state="translated">EngineInstance</target>
        </trans-unit>
        <trans-unit id="83dfb23cc274b32d70e2d1af02d1484beabb488c" translate="yes" xml:space="preserve">
          <source>Engines also manage initializers and instance initializers.</source>
          <target state="translated">Los motores también gestionan los inicializadores y los inicializadores de instancia.</target>
        </trans-unit>
        <trans-unit id="cbc12cb5aeccadfc50c98322468e8d3f9bf4626c" translate="yes" xml:space="preserve">
          <source>Engines are good for organizations that have multiple teams, where each team has their own area that is clearly separated from the others. The isolation is good when it matches organizational boundaries, but adds unnecessary complexity when there is not a good match.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21c518bca901bd382b031b7b684a16df34cb5292" translate="yes" xml:space="preserve">
          <source>Engines are used by a number of large organizations to power sites with million of users.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b83f54e3881318f4f77eaddfc794c5ba9d83957e" translate="yes" xml:space="preserve">
          <source>Engines can spawn &lt;code&gt;EngineInstance&lt;/code&gt; instances via &lt;code&gt;buildInstance()&lt;/code&gt;.</source>
          <target state="translated">Los motores pueden desovar &lt;code&gt;EngineInstance&lt;/code&gt; casos a trav&amp;eacute;s de &lt;code&gt;buildInstance()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3b87351998c22e252f4f1bd1553c545f348ec4ff" translate="yes" xml:space="preserve">
          <source>Engines provide an antidote to these problems by allowing for distributed development, testing, and packaging of logically-grouped pieces of an application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e3e803a360b2dea25b3f7717bf0ca97563a097a" translate="yes" xml:space="preserve">
          <source>Ensure that the target method is never called more frequently than the specified spacing period. The target method is called immediately.</source>
          <target state="translated">Asegurarse de que el método de objetivo nunca se llame con más frecuencia que el período de espaciamiento especificado.El método de destino se llama inmediatamente.</target>
        </trans-unit>
        <trans-unit id="8662d647975acf6437d48da8b7fff03b28824980" translate="yes" xml:space="preserve">
          <source>Enter &lt;em&gt;dynamic segments&lt;/em&gt;.</source>
          <target state="translated">Ingrese &lt;em&gt;segmentos din&amp;aacute;micos&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="7688dfee832085b479474f9720115719cee22622" translate="yes" xml:space="preserve">
          <source>Enumberable</source>
          <target state="translated">Enumberable</target>
        </trans-unit>
        <trans-unit id="83df7a7ef8fa21dd3116045758d3e9407ca3149d" translate="yes" xml:space="preserve">
          <source>Enumerable</source>
          <target state="translated">Enumerable</target>
        </trans-unit>
        <trans-unit id="7d2e28d9448f286359bfee7b46440bedbb9fdf58" translate="yes" xml:space="preserve">
          <source>Enumerables</source>
          <target state="translated">Enumerables</target>
        </trans-unit>
        <trans-unit id="75b20f050d70ab17ebe45f963c1d6074808f8cc8" translate="yes" xml:space="preserve">
          <source>Environment-Specific Assets</source>
          <target state="translated">Activos específicos del medio ambiente</target>
        </trans-unit>
        <trans-unit id="6226739c0c20e77eb4b6aec928c74de944e42429" translate="yes" xml:space="preserve">
          <source>Errback Example</source>
          <target state="translated">Ejemplo de error</target>
        </trans-unit>
        <trans-unit id="7f2f6a15cf8da2b27e5a4af47b58e7ad71c0b3d9" translate="yes" xml:space="preserve">
          <source>Error</source>
          <target state="translated">Error</target>
        </trans-unit>
        <trans-unit id="ef145476280f173df11aef2c3faf1fcf94827764" translate="yes" xml:space="preserve">
          <source>Error-tolerant form of &lt;code&gt;Ember.set&lt;/code&gt;. Will not blow up if any part of the chain is &lt;code&gt;undefined&lt;/code&gt;, &lt;code&gt;null&lt;/code&gt;, or destroyed.</source>
          <target state="translated">Forma tolerante a errores de &lt;code&gt;Ember.set&lt;/code&gt; . No explotar&amp;aacute; si alguna parte de la cadena &lt;code&gt;undefined&lt;/code&gt; est&amp;aacute; definida , es &lt;code&gt;null&lt;/code&gt; o est&amp;aacute; destruida.</target>
        </trans-unit>
        <trans-unit id="14bd83b9c257411bd7a756b8c613118eb2ddd70a" translate="yes" xml:space="preserve">
          <source>Error-tolerant form of &lt;code&gt;set&lt;/code&gt;. Will not blow up if any part of the chain is &lt;code&gt;undefined&lt;/code&gt;, &lt;code&gt;null&lt;/code&gt;, or destroyed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="805e86a8cbf628e38e4c45612c005a504009e79a" translate="yes" xml:space="preserve">
          <source>Errors</source>
          <target state="translated">Errors</target>
        </trans-unit>
        <trans-unit id="231ec3223ea840501661d5b8f867f20a371c299c" translate="yes" xml:space="preserve">
          <source>Errors can be displayed to the user by accessing their property name to get an array of all the error objects for that property. Each error object is a JavaScript object with two keys:</source>
          <target state="translated">Los errores pueden ser mostrados al usuario accediendo a su nombre de propiedad para obtener una matriz de todos los objetos de error para esa propiedad.Cada objeto de error es un objeto JavaScript con dos claves:</target>
        </trans-unit>
        <trans-unit id="fe67e5b1f270bbb85d379c9d76b5741bf78dda06" translate="yes" xml:space="preserve">
          <source>Errors within &lt;code&gt;Ember.run.later&lt;/code&gt; (&lt;a href=&quot;https://github.com/ebryn/backburner.js&quot;&gt;Backburner.js&lt;/a&gt;)</source>
          <target state="translated">Errores dentro &lt;code&gt;Ember.run.later&lt;/code&gt; ( &lt;a href=&quot;https://github.com/ebryn/backburner.js&quot;&gt;Backburner.js&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="2ae4292a5efb921c2eaf1cfd6146a07189f56e2a" translate="yes" xml:space="preserve">
          <source>Errors within &lt;code&gt;Ember.run.later&lt;/code&gt; Backburner</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4a29dcd0f0bbd18d3a1d690ca89cd6a94a9fbd5" translate="yes" xml:space="preserve">
          <source>Errors within an &lt;code&gt;RSVP.Promise&lt;/code&gt;</source>
          <target state="translated">Errores dentro de una &lt;code&gt;RSVP.Promise&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c3f1c141505b88cb980c471878c8d61b5b40d7ff" translate="yes" xml:space="preserve">
          <source>Escaping HTML Content</source>
          <target state="translated">Escapando del contenido HTML</target>
        </trans-unit>
        <trans-unit id="906539ca5112675ad7ab7f1e2cf0ebe41179e939" translate="yes" xml:space="preserve">
          <source>Essentially, the &lt;code&gt;Application&lt;/code&gt;&lt;em&gt;defines your application&lt;/em&gt; while the &lt;code&gt;ApplicationInstance&lt;/code&gt;&lt;em&gt;manages its state&lt;/em&gt;.</source>
          <target state="translated">Esencialmente, la &lt;code&gt;Application&lt;/code&gt; &lt;em&gt;define su aplicaci&amp;oacute;n&lt;/em&gt; mientras que &lt;code&gt;ApplicationInstance&lt;/code&gt; &lt;em&gt;administra su estado&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="7e0bd11626130293bbb8948821c367b4e145fa8c" translate="yes" xml:space="preserve">
          <source>Even though &lt;code&gt;get name&lt;/code&gt; is a method, we can treat it like a normal property. However, if we try to set the name property to a new value, we get an error:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a8e97d81f1cccdfa6bfa118b8e143fc01c7d4cc" translate="yes" xml:space="preserve">
          <source>Event Delegation</source>
          <target state="translated">Delegación de eventos</target>
        </trans-unit>
        <trans-unit id="1e1cda5690056886f9af8a7b917588091c3378d3" translate="yes" xml:space="preserve">
          <source>Event Handler Methods</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c874625e9b4c4789838bc2475c5fa96b872d071" translate="yes" xml:space="preserve">
          <source>Event Handlers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed4d874df84489b3b2e3acc9c685b0095bc84604" translate="yes" xml:space="preserve">
          <source>Event Names</source>
          <target state="translated">Nombres de los eventos</target>
        </trans-unit>
        <trans-unit id="c819cbacc479d7bead41a4ce4b723c74d3e0fa1a" translate="yes" xml:space="preserve">
          <source>Event Propagation</source>
          <target state="translated">Propagación de eventos</target>
        </trans-unit>
        <trans-unit id="3ed3f92f8f3f5211d4bdfa5116c3d34b5c522d37" translate="yes" xml:space="preserve">
          <source>Event handlers on Classic components, such as &lt;code&gt;click()&lt;/code&gt; and &lt;code&gt;mouseEnter()&lt;/code&gt;. These APIs still work without the integration enabled, but they no longer receive a jQuery event, they receive a native Event instead. You can convert to using native events incrementally by using the &lt;a href=&quot;https://github.com/emberjs/ember-jquery-legacy&quot;&gt;&lt;code&gt;ember-jquery-legacy&lt;/code&gt;&lt;/a&gt; addon, which provides a function that converts a jQuery event into a native event safely. Once all of your event handlers have been converted, you can disable jQuery integration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3014b663663976c245f863a9d00e4e29abf82cc" translate="yes" xml:space="preserve">
          <source>Event names passed to &lt;code&gt;Ember.instrument&lt;/code&gt; are namespaced by periods, from more general to more specific. Subscribers can listen for events by whatever level of granularity they are interested in.</source>
          <target state="translated">Los nombres de eventos pasados ​​a &lt;code&gt;Ember.instrument&lt;/code&gt; est&amp;aacute;n separados por puntos, de m&amp;aacute;s general a m&amp;aacute;s espec&amp;iacute;fico. Los suscriptores pueden escuchar eventos seg&amp;uacute;n el nivel de granularidad que les interese.</target>
        </trans-unit>
        <trans-unit id="06d2da8cd620cdca5a8c4a25bc54d444bda9ad32" translate="yes" xml:space="preserve">
          <source>EventTarget</source>
          <target state="translated">EventTarget</target>
        </trans-unit>
        <trans-unit id="668fe3075b1c8f275c8cdda0675518e270a9253f" translate="yes" xml:space="preserve">
          <source>Evented</source>
          <target state="translated">Evented</target>
        </trans-unit>
        <trans-unit id="39d3f17773993ca29c0897c7d603e6420be25cec" translate="yes" xml:space="preserve">
          <source>Evented functions are annotated using &lt;a href=&quot;https://api.emberjs.com/ember/release/classes/Evented/methods#on&quot;&gt;&lt;code&gt;Ember.on()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dd224c7edd8a11361e1f04e5c896bf98f07fcec" translate="yes" xml:space="preserve">
          <source>Evented functions are annotated using &lt;code&gt;Ember.on()&lt;/code&gt;:</source>
          <target state="translated">Las funciones con eventos se anotan usando &lt;code&gt;Ember.on()&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="6f7752ccc21875c927ff35396579c41b6d3bbd78" translate="yes" xml:space="preserve">
          <source>Evented.on()</source>
          <target state="translated">Evented.on()</target>
        </trans-unit>
        <trans-unit id="c5497bca58468ae64aed6c0fd921109217988db3" translate="yes" xml:space="preserve">
          <source>Events</source>
          <target state="translated">Events</target>
        </trans-unit>
        <trans-unit id="98b5a08f55dcecc9edd038f3dd1d6cbdd1569fa3" translate="yes" xml:space="preserve">
          <source>Events and Flags</source>
          <target state="translated">Eventos y banderas</target>
        </trans-unit>
        <trans-unit id="c3b22ffc16fe49ca532580490b956657e13aea60" translate="yes" xml:space="preserve">
          <source>Events are named functions that are invoked when sent to a record. The record will first look for a method with the given name on the current state. If no method is found, it will search the current state's parent, and then its grandparent, and so on until reaching the top of the hierarchy. If the root is reached without an event handler being found, an exception will be raised. This can be very helpful when debugging new features.</source>
          <target state="translated">Los eventos se denominan funciones que se invocan cuando se envían a un registro.El registro buscará primero un método con el nombre dado en el estado actual.Si no se encuentra ningún método,buscará al padre del estado actual,y luego a su abuelo,y así sucesivamente hasta llegar a la cima de la jerarquía.Si se llega a la raíz sin encontrar un manejador de eventos,se planteará una excepción.Esto puede ser muy útil cuando se depuran nuevas características.</target>
        </trans-unit>
        <trans-unit id="df4e45185747f0028b1ea444369aa7e5c739e2b4" translate="yes" xml:space="preserve">
          <source>Events are sent by the record or its store to the record's &lt;code&gt;currentState&lt;/code&gt; property. How the state reacts to these events is dependent on which state it is in. In some states, certain events will be invalid and will cause an exception to be raised.</source>
          <target state="translated">Los eventos son enviados por el registro o su tienda a la propiedad &lt;code&gt;currentState&lt;/code&gt; del registro . La forma en que el estado reacciona a estos eventos depende del estado en el que se encuentre. En algunos estados, ciertos eventos no ser&amp;aacute;n v&amp;aacute;lidos y provocar&amp;aacute;n que se genere una excepci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="4e76329a32d0cf295edc0f75d863e97f0a132360" translate="yes" xml:space="preserve">
          <source>Events should transition to a different state if appropriate. This can be done by calling the record's &lt;code&gt;transitionTo()&lt;/code&gt; method with a path to the desired state. The state manager will attempt to resolve the state path relative to the current state. If no state is found at that path, it will attempt to resolve it relative to the current state's parent, and then its parent, and so on until the root is reached. For example, imagine a hierarchy like this:</source>
          <target state="translated">Los eventos deben pasar a un estado diferente si corresponde. Esto se puede hacer llamando al m&amp;eacute;todo &lt;code&gt;transitionTo()&lt;/code&gt; del registro con una ruta al estado deseado. El administrador del estado intentar&amp;aacute; resolver la ruta del estado en relaci&amp;oacute;n con el estado actual. Si no se encuentra ning&amp;uacute;n estado en esa ruta, intentar&amp;aacute; resolverlo en relaci&amp;oacute;n con el padre del estado actual, y luego con su padre, y as&amp;iacute; sucesivamente hasta que se alcance la ra&amp;iacute;z. Por ejemplo, imagina una jerarqu&amp;iacute;a como esta:</target>
        </trans-unit>
        <trans-unit id="d64b9a4b70475d5110fc98496e65068a350e1fd9" translate="yes" xml:space="preserve">
          <source>Events triggered through the action helper will automatically have &lt;code&gt;.preventDefault()&lt;/code&gt; called on them. You do not need to do so in your event handlers. If you need to allow event propagation (to handle file inputs for example) you can supply the &lt;code&gt;preventDefault=false&lt;/code&gt; option to the &lt;code&gt;{{action}}&lt;/code&gt; helper:</source>
          <target state="translated">Los eventos activados a trav&amp;eacute;s del asistente de acci&amp;oacute;n tendr&amp;aacute;n autom&amp;aacute;ticamente &lt;code&gt;.preventDefault()&lt;/code&gt; invocado en ellos. No es necesario que lo haga en sus controladores de eventos. Si necesita permitir la propagaci&amp;oacute;n de eventos (para manejar entradas de archivos, por ejemplo), puede proporcionar la opci&amp;oacute;n &lt;code&gt;preventDefault=false&lt;/code&gt; al ayudante &lt;code&gt;{{action}}&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="acfc76075c9404a1b5ba14c3874489c29112f142" translate="yes" xml:space="preserve">
          <source>Evergreen Browsers</source>
          <target state="translated">Navegadores Evergreen</target>
        </trans-unit>
        <trans-unit id="49d7fbab2114faecfd1195a14711db719f317f57" translate="yes" xml:space="preserve">
          <source>Evergreen browsers</source>
          <target state="translated">Navegadores Evergreen</target>
        </trans-unit>
        <trans-unit id="b5377a30c83f431ca8cc0f163352f1d1dd9d3d93" translate="yes" xml:space="preserve">
          <source>Every &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; element should have an associated &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; element. To do this, the &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; element's &lt;code&gt;id&lt;/code&gt; attribute value should be the same as the &lt;code&gt;for&lt;/code&gt; attribute value on the &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt;, like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a0e925e4ab484a6f358aee295dd7a7c5c94a894" translate="yes" xml:space="preserve">
          <source>Every &lt;code&gt;DS.Model&lt;/code&gt; has an &lt;code&gt;errors&lt;/code&gt; property that is an instance of &lt;code&gt;DS.Errors&lt;/code&gt;. This can be used to display validation error messages returned from the server when a &lt;code&gt;record.save()&lt;/code&gt; rejects.</source>
          <target state="translated">Cada &lt;code&gt;DS.Model&lt;/code&gt; tiene una propiedad de &lt;code&gt;errors&lt;/code&gt; que es una instancia de &lt;code&gt;DS.Errors&lt;/code&gt; . Esto se puede usar para mostrar mensajes de error de validaci&amp;oacute;n devueltos por el servidor cuando un &lt;code&gt;record.save()&lt;/code&gt; rechaza.</target>
        </trans-unit>
        <trans-unit id="14ffc86a06d4fc6a96676949566730adfdc2a133" translate="yes" xml:space="preserve">
          <source>Every &lt;code&gt;Model&lt;/code&gt; has an &lt;code&gt;errors&lt;/code&gt; property that is an instance of &lt;code&gt;Errors&lt;/code&gt;. This can be used to display validation error messages returned from the server when a &lt;code&gt;record.save()&lt;/code&gt; rejects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76334a5c6b1c7a97dee9c5375ddfe86a8a707dcc" translate="yes" xml:space="preserve">
          <source>Every Ember app comes with &lt;a href=&quot;https://qunitjs.com/&quot;&gt;QUnit&lt;/a&gt; and &lt;a href=&quot;https://github.com/simplabs/qunit-dom&quot;&gt;QUnit DOM&lt;/a&gt;. QUnit is a testing framework, and QUnit DOM is a library that helps you &lt;strong&gt;write tests that are concise and readable&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85988e68d013f75cfc1374e87a65e3e1e3c8b772" translate="yes" xml:space="preserve">
          <source>Every Ember application has a container that maintains object instances for you. You can inspect these instances using the Container tab. This is useful for objects that don't fall under a dedicated menu, such as services.</source>
          <target state="translated">Cada aplicación Ember tiene un contenedor que mantiene instancias de objetos para ti.Puedes inspeccionar estas instancias utilizando la pestaña Contenedor.Esto es útil para los objetos que no se encuentran en un menú dedicado,como los servicios.</target>
        </trans-unit>
        <trans-unit id="b8a9f512422af88bdb1c60c02383c045ed3fe355" translate="yes" xml:space="preserve">
          <source>Every Ember application is represented by a class that extends &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Application.html&quot;&gt;&lt;code&gt;Ember.Application&lt;/code&gt;&lt;/a&gt;. This class is used to declare and configure the many objects that make up your app.</source>
          <target state="translated">Cada aplicaci&amp;oacute;n de Ember est&amp;aacute; representada por una clase que ampl&amp;iacute;a &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Application.html&quot;&gt; &lt;code&gt;Ember.Application&lt;/code&gt; &lt;/a&gt; . Esta clase se usa para declarar y configurar los muchos objetos que componen su aplicaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="de56a64135a6759f510b8ec2ed86a890cab9c305" translate="yes" xml:space="preserve">
          <source>Every Ember application is represented by a class that extends &lt;a href=&quot;https://api.emberjs.com/ember/release/classes/Application&quot;&gt;&lt;code&gt;Application&lt;/code&gt;&lt;/a&gt;. This class is used to declare and configure the many objects that make up your app.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c693f11f5cba9c5625c100db803ef4b1b7cdcd8" translate="yes" xml:space="preserve">
          <source>Every decorator is unique! See the documentation for each decorator to see how it should be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="557d8633cfa8c1dfe985ce67867527451ecd52fc" translate="yes" xml:space="preserve">
          <source>Every input should be associated with a label. In HTML, there are a few ways to do this. With the built-in &lt;code&gt;&amp;lt;Input&amp;gt;&lt;/code&gt; component,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f01ed56a1e32a05e5ef96e4d779f34784af9a96" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Example</target>
        </trans-unit>
        <trans-unit id="855b8b0d4366bf071beb7b47a234298bc8fa0a83" translate="yes" xml:space="preserve">
          <source>Example JSON payloads, Models and Serializers</source>
          <target state="translated">Ejemplo de cargas útiles JSON,modelos y serializadores</target>
        </trans-unit>
        <trans-unit id="654d7a479004b2b26e7de7b5ed9cd79a331ded80" translate="yes" xml:space="preserve">
          <source>Example Usage</source>
          <target state="translated">Ejemplo de uso</target>
        </trans-unit>
        <trans-unit id="30d9e9e6f4ce5ea49de6402830c224a348be7a83" translate="yes" xml:space="preserve">
          <source>Example Usage:</source>
          <target state="translated">Ejemplo de uso:</target>
        </trans-unit>
        <trans-unit id="185ab25dac87e9a89176e18269949db86107baf7" translate="yes" xml:space="preserve">
          <source>Example for Multiple Segments</source>
          <target state="translated">Ejemplo de segmentos múltiples</target>
        </trans-unit>
        <trans-unit id="1fc09b7c0f219e5a0f57fe8580ae14b45f02bdf8" translate="yes" xml:space="preserve">
          <source>Example instanceInitializer to preload data into the store.</source>
          <target state="translated">Ejemplo de instanciaIniciador para precargar datos en el almacén.</target>
        </trans-unit>
        <trans-unit id="8a385ccb7b0fab6b5f0a04df0ef8cd68dc33801c" translate="yes" xml:space="preserve">
          <source>Example of alternative implementation, overriding the default behavior to deal with a different format of errors:</source>
          <target state="translated">Ejemplo de implementación alternativa,anulando el comportamiento por defecto para tratar un formato diferente de errores:</target>
        </trans-unit>
        <trans-unit id="56b86dbf777bc82ae79c1db97734c2ca8302f229" translate="yes" xml:space="preserve">
          <source>Example of using &lt;code&gt;application&lt;/code&gt; to register an adapter:</source>
          <target state="translated">Ejemplo de uso de la &lt;code&gt;application&lt;/code&gt; para registrar un adaptador:</target>
        </trans-unit>
        <trans-unit id="5ab7721397827b925456d2a147cb5704105a62a7" translate="yes" xml:space="preserve">
          <source>Example usage:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="2671d230a3bee690947d566d2c23896bdbb1481e" translate="yes" xml:space="preserve">
          <source>Example: given this &lt;code&gt;post&lt;/code&gt; model.</source>
          <target state="translated">Ejemplo: dado este modelo de &lt;code&gt;post&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="eb01bf04c9a0e8a71c45816513df424f1c7ffedb" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">Examples</target>
        </trans-unit>
        <trans-unit id="cc9ce9cb848d733d6e780e33083b93f55c0047c4" translate="yes" xml:space="preserve">
          <source>Examples of integration tests are:</source>
          <target state="translated">Ejemplos de pruebas de integración son:</target>
        </trans-unit>
        <trans-unit id="fb3447b632f6a431215776dcf254a01001a40c4f" translate="yes" xml:space="preserve">
          <source>Examples:</source>
          <target state="translated">Examples:</target>
        </trans-unit>
        <trans-unit id="20049bc069b0a04404c23d571b5e0b56f0660c02" translate="yes" xml:space="preserve">
          <source>Exception</source>
          <target state="translated">Exception</target>
        </trans-unit>
        <trans-unit id="4057eb19bc2345cdfb8ab9b72e74b0d0ab590fc6" translate="yes" xml:space="preserve">
          <source>Execute the &lt;code&gt;debugger&lt;/code&gt; statement in the current template's context.</source>
          <target state="translated">Ejecute la declaraci&amp;oacute;n del &lt;code&gt;debugger&lt;/code&gt; en el contexto de la plantilla actual.</target>
        </trans-unit>
        <trans-unit id="f8d5ed694983381cf25f15a1bcaa91e8354044c7" translate="yes" xml:space="preserve">
          <source>Existing records for the &lt;code&gt;type&lt;/code&gt; will not be removed. The key difference is in the result returned by the &lt;code&gt;store&lt;/code&gt;. For &lt;code&gt;findAll&lt;/code&gt; the result is all known records of the &lt;code&gt;type&lt;/code&gt;, while for &lt;code&gt;query&lt;/code&gt; it will only be the records returned from &lt;code&gt;adapter.query&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32320839827fa2e0725e13f8323ef8349436099e" translate="yes" xml:space="preserve">
          <source>Expanding and Collapsing Components</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5c837be64d9e31d6756f4ebb2b47be6d7382375" translate="yes" xml:space="preserve">
          <source>Expands &lt;code&gt;pattern&lt;/code&gt;, invoking &lt;code&gt;callback&lt;/code&gt; for each expansion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52dcec4c796d6649b4952af879aa6cc2faa55260" translate="yes" xml:space="preserve">
          <source>Explicit Inverses</source>
          <target state="translated">Inversores explícitos</target>
        </trans-unit>
        <trans-unit id="ef5a3f09ccb18d1b1024a3722f3feee0d8889edc" translate="yes" xml:space="preserve">
          <source>Explore the ecosystem</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c580236805d237e3cd61e7baff6475fe054ba15b" translate="yes" xml:space="preserve">
          <source>Exposing Actions as Public API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a9b29e809457ee1bb5054807ca67ee1c7300fe1" translate="yes" xml:space="preserve">
          <source>Exposing Objects to the Console</source>
          <target state="translated">Exponer objetos a la consola</target>
        </trans-unit>
        <trans-unit id="46ec25089ffe4bbbdc2d0a4305e4dc1ad731b2e0" translate="yes" xml:space="preserve">
          <source>Exposing queries this way seems preferable to creating an abstract query language for all server-side queries, and then require all adapters to implement them.</source>
          <target state="translated">Exponer las consultas de esta manera parece preferible a crear un lenguaje de consulta abstracto para todas las consultas del lado del servidor,y luego requerir todos los adaptadores para implementarlas.</target>
        </trans-unit>
        <trans-unit id="f84c91363a362a83a4dda3cbe5faedf153339bf6" translate="yes" xml:space="preserve">
          <source>Extending &lt;code&gt;Ember.Checkbox&lt;/code&gt;</source>
          <target state="translated">Extendiendo &lt;code&gt;Ember.Checkbox&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="aece37639a26747d27b6bec229350503d67eb06f" translate="yes" xml:space="preserve">
          <source>Extending &lt;code&gt;Ember.TextField&lt;/code&gt;</source>
          <target state="translated">Extendiendo &lt;code&gt;Ember.TextField&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="41a932389493b0a691d1b7443ca8def0a959fdb3" translate="yes" xml:space="preserve">
          <source>Extending Adapters is a natural process in Ember Data. Ember takes the position that you should extend an adapter to add different functionality. This results in code that is more testable, easier to understand and reduces bloat for people who may want to subclass your adapter.</source>
          <target state="translated">Extender los adaptadores es un proceso natural en Ember Data.Ember toma la posición de que debe extender un adaptador para añadir una funcionalidad diferente.Esto da como resultado un código que es más comprobable,más fácil de entender y reduce la hinchazón para las personas que pueden querer subclasificar su adaptador.</target>
        </trans-unit>
        <trans-unit id="dcabbc390e17d15f91473972556065a69ff821df" translate="yes" xml:space="preserve">
          <source>Extending Classes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2352749bc5f9f90417816157b063755a08862b8f" translate="yes" xml:space="preserve">
          <source>Extending Classic Classes with Native Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33292f9753394b83f5d76e9c9d11ef6b04e05198" translate="yes" xml:space="preserve">
          <source>Extending the example, if we have a &amp;ldquo;post&amp;rdquo; route that lives within the &amp;ldquo;posts&amp;rdquo; route, we could set its page title like so:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddf3071dc94d26c323c107229af8795c491bd816" translate="yes" xml:space="preserve">
          <source>Extends:</source>
          <target state="translated">Extends:</target>
        </trans-unit>
        <trans-unit id="659087d3ca23db6ae11e0a43579b5f4a260dda11" translate="yes" xml:space="preserve">
          <source>Extension</source>
          <target state="translated">Extension</target>
        </trans-unit>
        <trans-unit id="c19e4865e91fb490331cf2e5ed770c0039d69eff" translate="yes" xml:space="preserve">
          <source>Factories can be injected into whole &quot;types&quot; of factories with &lt;em&gt;type injections&lt;/em&gt;. For example:</source>
          <target state="translated">Las f&amp;aacute;bricas pueden inyectarse en &quot;tipos&quot; completos de f&amp;aacute;bricas con &lt;em&gt;inyecciones de tipo&lt;/em&gt; . Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="da465632cd7a925c54e92038aac8472d7b87a0dc" translate="yes" xml:space="preserve">
          <source>Factory Injections</source>
          <target state="translated">Inyecciones de fábrica</target>
        </trans-unit>
        <trans-unit id="405317722b3b6e2bd0b518051f11582bab889ae1" translate="yes" xml:space="preserve">
          <source>Factory Instance Lookups</source>
          <target state="translated">Las búsquedas de instancias de fábrica</target>
        </trans-unit>
        <trans-unit id="322b9664e956ccfc12da782ec73cbc42ffbe37cf" translate="yes" xml:space="preserve">
          <source>Factory Registrations</source>
          <target state="translated">Registros de fábrica</target>
        </trans-unit>
        <trans-unit id="d939c0a1d24985fbab8a46236bfe68741efdf86e" translate="yes" xml:space="preserve">
          <source>Factory registrations must be performed either in application or application instance initializers (with the former being much more common).</source>
          <target state="translated">Los registros de fábrica deben realizarse en los iniciadores de la aplicación o de la instancia de aplicación (siendo los primeros mucho más comunes).</target>
        </trans-unit>
        <trans-unit id="7e519b7ed2d65ec61a02497be53258f4a7ca5526" translate="yes" xml:space="preserve">
          <source>FactoryManager</source>
          <target state="translated">FactoryManager</target>
        </trans-unit>
        <trans-unit id="7c7ea86b9d1cacaead9ab87274fb0a3c8e9c3909" translate="yes" xml:space="preserve">
          <source>Failed responses with status code 422 (&quot;Unprocessable Entity&quot;) will be considered &quot;invalid&quot;. The response will be discarded, except for the &lt;code&gt;errors&lt;/code&gt; key. The request promise will be rejected with a &lt;code&gt;DS.InvalidError&lt;/code&gt;. This error object will encapsulate the saved &lt;code&gt;errors&lt;/code&gt; value.</source>
          <target state="translated">Las respuestas fallidas con el c&amp;oacute;digo de estado 422 (&quot;Entidad no procesable&quot;) se considerar&amp;aacute;n &quot;inv&amp;aacute;lidas&quot;. La respuesta se descartar&amp;aacute;, excepto la clave de &lt;code&gt;errors&lt;/code&gt; . La promesa de solicitud se rechazar&amp;aacute; con un &lt;code&gt;DS.InvalidError&lt;/code&gt; . Este objeto de error encapsular&amp;aacute; el valor de &lt;code&gt;errors&lt;/code&gt; guardados .</target>
        </trans-unit>
        <trans-unit id="7397d437ff1ee99c72781ff2f8bab60f9895c85c" translate="yes" xml:space="preserve">
          <source>Failed responses with status code 422 (&quot;Unprocessable Entity&quot;) will be considered &quot;invalid&quot;. The response will be discarded, except for the &lt;code&gt;errors&lt;/code&gt; key. The request promise will be rejected with a &lt;code&gt;InvalidError&lt;/code&gt;. This error object will encapsulate the saved &lt;code&gt;errors&lt;/code&gt; value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6138a14f00dad4b345df4ca480ac1608f03ce9b2" translate="yes" xml:space="preserve">
          <source>Faking Query Results</source>
          <target state="translated">Falsificación de los resultados de las consultas</target>
        </trans-unit>
        <trans-unit id="4f5a54627dea26b6876632913ba4f8191aad7605" translate="yes" xml:space="preserve">
          <source>Feature Flags</source>
          <target state="translated">Banderas de presentación</target>
        </trans-unit>
        <trans-unit id="873cc081945620a3cd0038f4521f4807e9aabc35" translate="yes" xml:space="preserve">
          <source>Feature Life-Cycle</source>
          <target state="translated">Ciclo de vida de la película</target>
        </trans-unit>
        <trans-unit id="647a8bb14f534478c015ee2df0d7575e1de2666a" translate="yes" xml:space="preserve">
          <source>Feature Listing (&lt;a href=&quot;https://github.com/emberjs/ember.js/blob/master/FEATURES.md&quot;&gt; &lt;p&gt;When a developer adds a new feature to the &lt;code&gt;canary&lt;/code&gt; channel (i.e. the &lt;code&gt;master&lt;/code&gt; branch on GitHub), they also add an entry to &lt;a href=&quot;https://github.com/emberjs/ember.js/blob/master/FEATURES.md&quot;&gt;&lt;code&gt;FEATURES.md&lt;/code&gt;&lt;/a&gt; explaining what the feature does, and linking to their originating pull request. This list is kept current, and reflects what is available in each channel (&lt;code&gt;release&lt;/code&gt;, &lt;code&gt;beta&lt;/code&gt;, and &lt;code&gt;canary&lt;/code&gt;).&lt;/p&gt; &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fd810a1d436a57ec60e3cf0d93b6df18ed8799a" translate="yes" xml:space="preserve">
          <source>Feature Listing (&lt;a href=&quot;https://github.com/emberjs/ember.js/blob/master/FEATURES.md&quot;&gt;&lt;code&gt;FEATURES.md&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">Listado de &lt;a href=&quot;https://github.com/emberjs/ember.js/blob/master/FEATURES.md&quot;&gt; &lt;code&gt;FEATURES.md&lt;/code&gt; &lt;/a&gt; ( FEATURES.md )</target>
        </trans-unit>
        <trans-unit id="fc338f87a058158eb824b53705961801516a9460" translate="yes" xml:space="preserve">
          <source>Features</source>
          <target state="translated">Features</target>
        </trans-unit>
        <trans-unit id="bb76b76858ecc973034701e1f87405ffe40ffec2" translate="yes" xml:space="preserve">
          <source>Feel free to try this in the browser. Finally, everything should behave exactly as we hoped!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20128dd028aa1ba6cf47a8ab888d34d0b8899b23" translate="yes" xml:space="preserve">
          <source>Fetch example</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1bb193199e8d075cf0640d0c7fba69854d7c702" translate="yes" xml:space="preserve">
          <source>Fetch the model types and observe them for changes.</source>
          <target state="translated">Busca los tipos de modelo y obsérvalos para ver si hay cambios.</target>
        </trans-unit>
        <trans-unit id="af4915dd9e547677cf018f48b13c3467ebf46486" translate="yes" xml:space="preserve">
          <source>Fetch the records of a given type and observe them for changes.</source>
          <target state="translated">Busca los registros de un tipo determinado y obsérvalos para ver si hay cambios.</target>
        </trans-unit>
        <trans-unit id="e8c4a80dae8b33a05286dec8f741acbec8b0637a" translate="yes" xml:space="preserve">
          <source>Fetches all loaded records for a given type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="907630a6a512049112f0e0bff7070bb3f3e256e4" translate="yes" xml:space="preserve">
          <source>Fetching Maps With a Service</source>
          <target state="translated">Obtención de mapas con un servicio</target>
        </trans-unit>
        <trans-unit id="e8b685271238adf161cffed3c91f54d97023262b" translate="yes" xml:space="preserve">
          <source>Fields</source>
          <target state="translated">Fields</target>
        </trans-unit>
        <trans-unit id="94db54f47ee768bd7caa2f4ad921efba6068952d" translate="yes" xml:space="preserve">
          <source>Fields are assigned before any code in the &lt;code&gt;constructor&lt;/code&gt; method is run, which is why we can rely on them being assigned correctly by the time it runs. As with methods, fields do &lt;em&gt;not&lt;/em&gt; exist on the class itself, nor do they exist on the class's prototype, they only exist on the &lt;em&gt;instance&lt;/em&gt; of the class. However, they can be added to the class directly using the &lt;code&gt;static&lt;/code&gt; keyword, which is described in more detail below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99ebbdcbd58500e5fc6879d0fac4e21d2f84bcf4" translate="yes" xml:space="preserve">
          <source>Fields are assigned before any code in the &lt;code&gt;constructor&lt;/code&gt; method is run, which is why we can rely on them being assigned correctly by the time it runs. Fields do &lt;em&gt;not&lt;/em&gt; exist on the class itself, nor do they exist on the class's prototype, they only exist on the &lt;em&gt;instance&lt;/em&gt; of the class. However, they can be added to the class directly using the &lt;code&gt;static&lt;/code&gt; keyword, like other class elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb6cf8255f249e748911e5d6a97bdbd180f4900e" translate="yes" xml:space="preserve">
          <source>Fields are assigned before any constructor code is run, so you can access their values in the &lt;code&gt;constructor&lt;/code&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a668828e117d624a612f4ed52d98989bac795817" translate="yes" xml:space="preserve">
          <source>Fields are syntactic sugar for assigning the value in the constructor, like so:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b51cc0c72ed0c9b51784b81150d044229275209c" translate="yes" xml:space="preserve">
          <source>Fields can also access the class instance using &lt;code&gt;this&lt;/code&gt; when they are being assigned:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f457d55c53f31bef1e51b3a7cb8266e914589c5" translate="yes" xml:space="preserve">
          <source>Fields vs. Properties</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd86bc61c1dacf032c3be1d771a2bee121f48d62" translate="yes" xml:space="preserve">
          <source>File System Nesting</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9496b0ae023a28f794b4da6d8516cb7ebef60860" translate="yes" xml:space="preserve">
          <source>File:// protocol</source>
          <target state="translated">Archivo://protocolo</target>
        </trans-unit>
        <trans-unit id="0a94f96e1d123523b6f432fd15a7935cd669e442" translate="yes" xml:space="preserve">
          <source>Fills in an input element with some text.</source>
          <target state="translated">Rellena un elemento de entrada con algo de texto.</target>
        </trans-unit>
        <trans-unit id="d135c8f5a88ca7d5101aa0bec21446b0d5a47c66" translate="yes" xml:space="preserve">
          <source>Fills in the selected input with the given value and returns a promise that fulfills when all resulting async behavior is complete. Works with &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; elements as well as &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; elements. Keep in mind that with &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; elements, &lt;code&gt;value&lt;/code&gt; must be set to the &lt;em&gt;value&lt;/em&gt; of the &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; tag, rather than its &lt;em&gt;content&lt;/em&gt; (for example, &lt;code&gt;true&lt;/code&gt; rather than &lt;code&gt;&quot;Yes&quot;&lt;/code&gt;).</source>
          <target state="translated">Completa la entrada seleccionada con el valor dado y devuelve una promesa que se cumple cuando se completa todo el comportamiento asincr&amp;oacute;nico resultante. Funciona con elementos &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; as&amp;iacute; como con elementos &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; . Tenga en cuenta que con los elementos &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; , el &lt;code&gt;value&lt;/code&gt; debe establecerse en el &lt;em&gt;valor&lt;/em&gt; de la etiqueta &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; , en lugar de su &lt;em&gt;contenido&lt;/em&gt; (por ejemplo, &lt;code&gt;true&lt;/code&gt; lugar de &lt;code&gt;&quot;Yes&quot;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="4b340be2783a2587796ecb02f6de204bddd76efc" translate="yes" xml:space="preserve">
          <source>Filter and Reload</source>
          <target state="translated">Filtrar y recargar</target>
        </trans-unit>
        <trans-unit id="e032cecb51091cee135217097ec169f76c53604e" translate="yes" xml:space="preserve">
          <source>Filter the list of rentals by city</source>
          <target state="translated">Filtra la lista de alquileres por ciudad</target>
        </trans-unit>
        <trans-unit id="9075edca21736af901d2add18e4d9491f2452b4d" translate="yes" xml:space="preserve">
          <source>Filtering</source>
          <target state="translated">Filtering</target>
        </trans-unit>
        <trans-unit id="f6a202634d90a0c4c936584e5c490b28cb63b012" translate="yes" xml:space="preserve">
          <source>Filtering Components</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="551a7f038933335530d66a08ece58c1a8935cb22" translate="yes" xml:space="preserve">
          <source>Filtering Data Based on Input</source>
          <target state="translated">Filtro de datos basado en la entrada</target>
        </trans-unit>
        <trans-unit id="116395f3d2bc16d3082261ebf4d31f033fdd81fa" translate="yes" xml:space="preserve">
          <source>Filtering Deprecations</source>
          <target state="translated">Filtrando las deprecaciones</target>
        </trans-unit>
        <trans-unit id="90b6c2c7edcb9aeb3fbbe35540242baebdd2e266" translate="yes" xml:space="preserve">
          <source>Filtering and Clearing</source>
          <target state="translated">Filtrado y limpieza</target>
        </trans-unit>
        <trans-unit id="36c0956220077ceac28f372e4660f2ebbe3defd2" translate="yes" xml:space="preserve">
          <source>Filters the array by the callback.</source>
          <target state="translated">Filtra la matriz por la llamada.</target>
        </trans-unit>
        <trans-unit id="14c4749b708f71a2048ccfa656d71a16f8fc0762" translate="yes" xml:space="preserve">
          <source>Filters the array by the property and an optional value. If a value is given, it returns the items that have said value for the property. If not, it returns all the items that have a truthy value for the property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="371d7b7bc6141c52d4f7030fde26a3e1f8e8c744" translate="yes" xml:space="preserve">
          <source>Filters the array by the property and value</source>
          <target state="translated">Filtra la matriz por la propiedad y el valor</target>
        </trans-unit>
        <trans-unit id="14e7a651d9db304aa4d5f78a23219033e41dc0ff" translate="yes" xml:space="preserve">
          <source>Filters the array by the property and value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fe061f56a7795a7b55617b02eff5ffabf60788a" translate="yes" xml:space="preserve">
          <source>Finally a serializer will need to implement a &lt;a href=&quot;http://emberjs.com/api/data/classes/DS.Serializer.html#method_serialize&quot;&gt;serialize&lt;/a&gt; method. Ember Data will provide a record snapshot and an options hash and this method should return an object that the adapter will send to the server when creating, updating or deleting a record.</source>
          <target state="translated">Finalmente, un serializador deber&amp;aacute; implementar un m&amp;eacute;todo de &lt;a href=&quot;http://emberjs.com/api/data/classes/DS.Serializer.html#method_serialize&quot;&gt;serializaci&amp;oacute;n&lt;/a&gt; . Ember Data proporcionar&amp;aacute; una instant&amp;aacute;nea del registro y un hash de opciones y este m&amp;eacute;todo debe devolver un objeto que el adaptador enviar&amp;aacute; al servidor al crear, actualizar o eliminar un registro.</target>
        </trans-unit>
        <trans-unit id="4b720c13df4baa23aad24eeed448415065db74f8" translate="yes" xml:space="preserve">
          <source>Finally a serializer will need to implement a &lt;a href=&quot;https://api.emberjs.com/ember-data/release/classes/Serializer/methods#serialize&quot;&gt;serialize&lt;/a&gt; method. Ember Data will provide a record snapshot and an options hash and this method should return an object that the adapter will send to the server when creating, updating or deleting a record.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53abf2998d07adb4557f8892c6fb6b3e72bf5b25" translate="yes" xml:space="preserve">
          <source>Finally open the template file for our &lt;code&gt;rental-listing&lt;/code&gt; component and add the new &lt;code&gt;location-map&lt;/code&gt; component.</source>
          <target state="translated">Finalmente, abra el archivo de plantilla para nuestro componente de &lt;code&gt;rental-listing&lt;/code&gt; y agregue el nuevo componente de &lt;code&gt;location-map&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="29a531072b0dbcc9960ada1d1bcd4d17999b99fc" translate="yes" xml:space="preserve">
          <source>Finally we add a &lt;code&gt;wait&lt;/code&gt; call at the end of our test to assert the results.</source>
          <target state="translated">Finalmente, agregamos una llamada de &lt;code&gt;wait&lt;/code&gt; al final de nuestra prueba para afirmar los resultados.</target>
        </trans-unit>
        <trans-unit id="b88e3e49db47026a262a44b3439e7215204b23bb" translate="yes" xml:space="preserve">
          <source>Finally we add an initializer named &lt;code&gt;post&lt;/code&gt;, specifying it should run after both the &lt;code&gt;first&lt;/code&gt; and the &lt;code&gt;second&lt;/code&gt; initializers:</source>
          <target state="translated">Finalmente agregamos un inicializador llamado &lt;code&gt;post&lt;/code&gt; , especificando que debe ejecutarse despu&amp;eacute;s del &lt;code&gt;first&lt;/code&gt; y &lt;code&gt;second&lt;/code&gt; inicializador:</target>
        </trans-unit>
        <trans-unit id="9df8c9c8f476fcf261c0abc68bfaf432bb6dbe7c" translate="yes" xml:space="preserve">
          <source>Finally, Ember extends the &lt;code&gt;String&lt;/code&gt; prototype with a few &lt;a href=&quot;http://emberjs.com/api/classes/Ember.String.html&quot;&gt;formatting and localization methods&lt;/a&gt;.</source>
          <target state="translated">Finalmente, Ember ampl&amp;iacute;a el prototipo &lt;code&gt;String&lt;/code&gt; con algunos &lt;a href=&quot;http://emberjs.com/api/classes/Ember.String.html&quot;&gt;m&amp;eacute;todos de localizaci&amp;oacute;n y formato&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ac2dea4418a0522d69af2b72656abac2726f80c0" translate="yes" xml:space="preserve">
          <source>Finally, don't forget to add your helpers in &lt;code&gt;tests/.eslintrc.js&lt;/code&gt; and in &lt;code&gt;tests/helpers/start-app.js&lt;/code&gt;. In &lt;code&gt;tests/.eslintrc.js&lt;/code&gt; you need to add it in the &lt;code&gt;globals&lt;/code&gt; section, otherwise you will get failing ESLint tests:</source>
          <target state="translated">Finalmente, no olvide agregar sus ayudantes en &lt;code&gt;tests/.eslintrc.js&lt;/code&gt; y en &lt;code&gt;tests/helpers/start-app.js&lt;/code&gt; . En &lt;code&gt;tests/.eslintrc.js&lt;/code&gt; es necesario agregar que en el &lt;code&gt;globals&lt;/code&gt; secci&amp;oacute;n, de lo contrario se ESLint no superen los ensayos:</target>
        </trans-unit>
        <trans-unit id="a550e49cef61ec4c3db4060cd13e422f661e7472" translate="yes" xml:space="preserve">
          <source>Finally, if you don't apply &lt;code&gt;...attributes&lt;/code&gt; to &lt;em&gt;any&lt;/em&gt; elements, then Ember will throw an error if someone tries to use attributes when invoking your component:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fbde48965af70cf4d20c7223027cb04614768e1" translate="yes" xml:space="preserve">
          <source>Finally, if you don't want the browser's URL to interact with your application at all, you can disable the location API entirely by setting &lt;code&gt;ENV.locationType&lt;/code&gt; to &lt;code&gt;none&lt;/code&gt;. This is useful for testing, or when you don't want Ember to muck with the URL (for example when you embed your application in a larger page).</source>
          <target state="translated">Finalmente, si no desea que la URL del navegador interact&amp;uacute;e con su aplicaci&amp;oacute;n en absoluto, puede deshabilitar la API de ubicaci&amp;oacute;n por completo configurando &lt;code&gt;ENV.locationType&lt;/code&gt; en &lt;code&gt;none&lt;/code&gt; . Esto es &amp;uacute;til para realizar pruebas o cuando no desea que Ember altere la URL (por ejemplo, cuando inserta su aplicaci&amp;oacute;n en una p&amp;aacute;gina m&amp;aacute;s grande).</target>
        </trans-unit>
        <trans-unit id="6a068dcb9ef6150a8070ef1c72aa3e1acb8cc283" translate="yes" xml:space="preserve">
          <source>Finally, if your application receives and sends data, you want to guarantee that you can take these actions successfully. You also want to prove that you can handle the error states correctly. Application tests are a great place to check these, since you have to interact with the app just like the user would.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57511eeee9718d342effdc518031ec30c35903a4" translate="yes" xml:space="preserve">
          <source>Finally, in order for application tests to work, you must call &lt;a href=&quot;https://github.com/emberjs/ember-qunit#setup-application-tests&quot;&gt;&lt;code&gt;setupApplicationTest()&lt;/code&gt;&lt;/a&gt; and pass the &lt;code&gt;hooks&lt;/code&gt; object. In addition to the usual goodness of &lt;code&gt;setupTest()&lt;/code&gt;, this method creates an application instance so that you can test the app from an end-user perspective. It also lets you use test helpers for routing and DOM interaction, such as &lt;code&gt;currentURL&lt;/code&gt;, &lt;code&gt;visit&lt;/code&gt;, &lt;code&gt;click&lt;/code&gt;, and &lt;code&gt;fillIn&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ea0802540ea39458f9947dac60990a298daac79" translate="yes" xml:space="preserve">
          <source>Finally, let's add our actions and assertions.</source>
          <target state="translated">Finalmente,agreguemos nuestras acciones y afirmaciones.</target>
        </trans-unit>
        <trans-unit id="2c6515fa7070643d6305d13e99aa197b3f6bd897" translate="yes" xml:space="preserve">
          <source>Finally, one thing you may have noticed in the above examples is a lot more references to &lt;code&gt;this&lt;/code&gt; in the template. Values that are rendered from the local component or controller instance that backs the template must now have &lt;code&gt;this&lt;/code&gt; prepended at the beginning of the path:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89dccf2279af0bef5eb5c218f3dba10cc58a83fc" translate="yes" xml:space="preserve">
          <source>Finally, this example really shows the power and ease of Ember when two properties are bound to eachother via &lt;code&gt;Ember.computed.alias&lt;/code&gt;. Type into either text area box and they'll both stay in sync. Note that &lt;code&gt;Ember.computed.alias&lt;/code&gt; costs more in terms of performance, so only use it when your really binding in both directions:</source>
          <target state="translated">Finalmente, este ejemplo realmente muestra el poder y la facilidad de Ember cuando dos propiedades est&amp;aacute;n vinculadas entre s&amp;iacute; a trav&amp;eacute;s de &lt;code&gt;Ember.computed.alias&lt;/code&gt; . Escriba en cualquiera de los cuadros del &amp;aacute;rea de texto y ambos permanecer&amp;aacute;n sincronizados. Tenga en cuenta que &lt;code&gt;Ember.computed.alias&lt;/code&gt; cuesta m&amp;aacute;s en t&amp;eacute;rminos de rendimiento, por lo que solo &amp;uacute;selo cuando sea realmente vinculante en ambas direcciones:</target>
        </trans-unit>
        <trans-unit id="aa5142669c662243129cef753c5d9502f1e8ff2c" translate="yes" xml:space="preserve">
          <source>Finally, unit tests run extremely fast, so you can check many permutations of arguments with minimal impact on your test suite performance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16c226828e7ec0486ac183e99d085dbe9061d8aa" translate="yes" xml:space="preserve">
          <source>Finally, we need to make our controller that has our filter action available to the new nested index route.</source>
          <target state="translated">Por último,tenemos que hacer que nuestro controlador que tiene nuestra acción de filtro esté disponible para la nueva ruta de índice anidado.</target>
        </trans-unit>
        <trans-unit id="f55134f6efef1aa95cff72f286a5eb107e327ef4" translate="yes" xml:space="preserve">
          <source>Finally, we need to share &lt;code&gt;myText&lt;/code&gt; with the body in order to have it display. To pass the blog text to the body component, we'll add a &lt;code&gt;postData&lt;/code&gt; argument to the component helper.</source>
          <target state="translated">Finalmente, necesitamos compartir &lt;code&gt;myText&lt;/code&gt; con el cuerpo para que se muestre. Para pasar el texto del blog al componente del cuerpo, agregaremos un argumento &lt;code&gt;postData&lt;/code&gt; al asistente del componente.</target>
        </trans-unit>
        <trans-unit id="7bd5224f7d1fdcb8a1ea0eb84b4fa35751c6fca4" translate="yes" xml:space="preserve">
          <source>Finally, we want to update our acceptance tests to account for our new service. While it would be great to verify that a map is displaying, we don't want to hammer the Google Maps API every time we run our acceptance test. For this tutorial we'll rely on our component integration tests to ensure that the map DOM is being attached to our screen. To avoid hitting our Maps request limit, we'll stub out our Maps service in our acceptance tests.</source>
          <target state="translated">Por último,queremos actualizar nuestras pruebas de aceptación para dar cuenta de nuestro nuevo servicio.Aunque sería genial verificar que un mapa se muestra,no queremos martillar la API de Google Maps cada vez que ejecutemos nuestra prueba de aceptación.Para este tutorial nos basaremos en nuestras pruebas de integración de componentes para asegurarnos de que el mapa DOM se está adjuntando a nuestra pantalla.Para evitar que se supere el límite de solicitud de Mapas,eliminaremos el servicio de Mapas en las pruebas de aceptación.</target>
        </trans-unit>
        <trans-unit id="11f735b132b82e6d4a2da9c10cf2ff0b482eb037" translate="yes" xml:space="preserve">
          <source>Finally, you can optionally pass an array of additional dependent keys as the second parameter to the macro, if your filter function relies on any external values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df251b06eefdaa932e97b54fbe9a74d3e606fa61" translate="yes" xml:space="preserve">
          <source>Find</source>
          <target state="translated">Find</target>
        </trans-unit>
        <trans-unit id="d0b9d0d8b89ed01e6a028a8eface6486e9874348" translate="yes" xml:space="preserve">
          <source>Find All</source>
          <target state="translated">Encuentra todo</target>
        </trans-unit>
        <trans-unit id="6fd7e2ad683fed279ce7ac30981798c122ef18fe" translate="yes" xml:space="preserve">
          <source>Find the relationship which is the inverse of the one asked for.</source>
          <target state="translated">Encuentra la relación que es la inversa de la que se pidió.</target>
        </trans-unit>
        <trans-unit id="07a4da9bf87aedf306c0fda9f6ed6d66854f986e" translate="yes" xml:space="preserve">
          <source>Finding By ID</source>
          <target state="translated">Encontrar por identificación</target>
        </trans-unit>
        <trans-unit id="a6ee6c0088e5a7525cd78d8199ca750e5ec27e36" translate="yes" xml:space="preserve">
          <source>Finding Records</source>
          <target state="translated">Encontrar registros</target>
        </trans-unit>
        <trans-unit id="bbbc23ac98c2de3f33ff0b233f661318414e36e8" translate="yes" xml:space="preserve">
          <source>Finds an element in the context of the app's container element. A simple alias for &lt;code&gt;app.$(selector)&lt;/code&gt;.</source>
          <target state="translated">Busca un elemento en el contexto del elemento contenedor de la aplicaci&amp;oacute;n. Un alias simple para la &lt;code&gt;app.$(selector)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="364b707ca3ab0a66ddcd76f7a3927a3e2b2fad32" translate="yes" xml:space="preserve">
          <source>Finds an element within the app's root element and within the context (optional). Scoping to the root element is especially useful to avoid conflicts with the test framework's reporter, and this is done by default if the context is not specified.</source>
          <target state="translated">Encuentra un elemento dentro del elemento raíz de la aplicación y dentro del contexto (opcional).El alcance al elemento raíz es especialmente útil para evitar conflictos con el reportero del marco de pruebas,y esto se hace por defecto si no se especifica el contexto.</target>
        </trans-unit>
        <trans-unit id="e9340b4de6f2982022d5e92677c91bc7ae925675" translate="yes" xml:space="preserve">
          <source>Fired when a new record is commited to the server.</source>
          <target state="translated">Despedido cuando un nuevo disco se compromete con el servidor.</target>
        </trans-unit>
        <trans-unit id="5c9d41cea7617ca25b2b37beeadefc250eef89fb" translate="yes" xml:space="preserve">
          <source>Fired when the record becomes invalid.</source>
          <target state="translated">Despedido cuando el registro se convierte en inválido.</target>
        </trans-unit>
        <trans-unit id="bc010a123ac6b42f55f9ec869fcc622f3290bc15" translate="yes" xml:space="preserve">
          <source>Fired when the record enters the error state.</source>
          <target state="translated">Despedido cuando el registro entra en el estado de error.</target>
        </trans-unit>
        <trans-unit id="88e553c68002dcc06fbe67991784b204885f1f0f" translate="yes" xml:space="preserve">
          <source>Fired when the record is deleted.</source>
          <target state="translated">Despedido cuando se borra el registro.</target>
        </trans-unit>
        <trans-unit id="d81a7bd7e7e66972ff36d55a5cec937bf4c48c72" translate="yes" xml:space="preserve">
          <source>Fired when the record is loaded from the server.</source>
          <target state="translated">Despedido cuando el registro se carga desde el servidor.</target>
        </trans-unit>
        <trans-unit id="f544a236b4af07de6375b5508a245dff20b86b8c" translate="yes" xml:space="preserve">
          <source>Fired when the record is ready to be interacted with, that is either loaded from the server or created locally.</source>
          <target state="translated">Se dispara cuando el disco está listo para interactuar con él,que se carga desde el servidor o se crea localmente.</target>
        </trans-unit>
        <trans-unit id="ba1d6ecb2d4cfdc326ecaf54924c925c810e8b7b" translate="yes" xml:space="preserve">
          <source>Fired when the record is rolled back.</source>
          <target state="translated">Despedido cuando el disco se retire.</target>
        </trans-unit>
        <trans-unit id="64bd5b25c90ba3467b4740fb0ff8c4968c739c56" translate="yes" xml:space="preserve">
          <source>Fired when the record is updated.</source>
          <target state="translated">Despedido cuando se actualiza el registro.</target>
        </trans-unit>
        <trans-unit id="b4ee6522335b033249255b4cc1d572993282aafb" translate="yes" xml:space="preserve">
          <source>Firefox</source>
          <target state="translated">Firefox</target>
        </trans-unit>
        <trans-unit id="ef50657ac032b1800911be6f1d1e4eafbdcaa8f9" translate="yes" xml:space="preserve">
          <source>Firefox &amp;amp; NVDA (Windows)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9f195c0554a5e8a3fad76420891ccc86770d946" translate="yes" xml:space="preserve">
          <source>Firefox addons need to go through a review process with each update, so the Inspector is usually one version behind.</source>
          <target state="translated">Los complementos de Firefox necesitan pasar por un proceso de revisión con cada actualización,así que el Inspector suele ir una versión por detrás.</target>
        </trans-unit>
        <trans-unit id="65b985fe04c58a63c10016eb835b7b9c395dc3f3" translate="yes" xml:space="preserve">
          <source>Fires an event on the current list of resolved/resolving handlers within this transition. Useful for firing events on route hierarchies that haven't fully been entered yet. Note: This method is also aliased as &lt;code&gt;send&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b06703746e6acb488d56832fc1d761f23b3c8e97" translate="yes" xml:space="preserve">
          <source>First and Last Objects</source>
          <target state="translated">El primer y último objeto</target>
        </trans-unit>
        <trans-unit id="ffb6d3f0feb146801ac61e115004356226ddf23d" translate="yes" xml:space="preserve">
          <source>First is the time that application tests take to run. For small apps, its impact is minimal. However, for large apps, maintaining a short feedback loop becomes critical. In these cases, if you can verify a scenario in your app using unit or rendering tests, you may want to consider them instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e33769ad7672d04881ddd3aea2baf22a3cc17026" translate="yes" xml:space="preserve">
          <source>First value to compare</source>
          <target state="translated">El primer valor a comparar</target>
        </trans-unit>
        <trans-unit id="770c9b2ebd77215ac2fff5cae72286877c14aff4" translate="yes" xml:space="preserve">
          <source>First we visit the new posts URL &quot;/posts/new&quot;, enter the text &quot;My new post&quot; into an input control with the CSS class &quot;title&quot;, and click on a button whose class is &quot;submit&quot;.</source>
          <target state="translated">Primero visitamos la URL de los nuevos posts &quot;/posts/new&quot;,introducimos el texto &quot;Mi nuevo post&quot; en un control de entrada con la clase CSS &quot;title&quot;,y pulsamos un botón cuya clase es &quot;submit&quot;.</target>
        </trans-unit>
        <trans-unit id="c53913ab2118ac97e33d44700256f63c040001e5" translate="yes" xml:space="preserve">
          <source>First we would move the &lt;code&gt;deleteUser&lt;/code&gt; action from &lt;code&gt;user-profile.js&lt;/code&gt; to the actions object on &lt;code&gt;system-preferences-editor&lt;/code&gt;.</source>
          <target state="translated">Primero, &lt;code&gt;deleteUser&lt;/code&gt; acci&amp;oacute;n deleteUser de &lt;code&gt;user-profile.js&lt;/code&gt; al objeto actions en &lt;code&gt;system-preferences-editor&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2e4b6945759d3f5197e96ab684731ce5bdfd1506" translate="yes" xml:space="preserve">
          <source>First we would move the &lt;code&gt;deleteUser&lt;/code&gt; action from &lt;code&gt;user-profile.js&lt;/code&gt; to the parent &lt;code&gt;system-preferences-editor.js&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66c8e53244464608c3b48bf66f6821f392b02e85" translate="yes" xml:space="preserve">
          <source>First we'll define what we want to happen when the user clicks the button and then confirms. In the first case, we'll find the user's account and delete it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eddd943f2a9a3800d4e2d73cb9f7b762dd80be42" translate="yes" xml:space="preserve">
          <source>First you need to &lt;a href=&quot;https://app.netlify.com/signup&quot;&gt;sign up for a Netlify account&lt;/a&gt; if you do not already have one:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a0a1d434adeadf99dafeeb7810f84b7d9f8413d" translate="yes" xml:space="preserve">
          <source>First, here's an example using a core browser API called &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API&quot;&gt;&lt;code&gt;fetch&lt;/code&gt;&lt;/a&gt;, which returns a Promise. Install &lt;a href=&quot;https://github.com/ember-cli/ember-fetch&quot;&gt;&lt;code&gt;ember-fetch&lt;/code&gt;&lt;/a&gt; with the command &lt;code&gt;ember install ember-fetch&lt;/code&gt;, if it is not already in the app's &lt;code&gt;package.json&lt;/code&gt;. Older browsers may not have &lt;code&gt;fetch&lt;/code&gt;, but the &lt;code&gt;ember-fetch&lt;/code&gt; library includes a polyfill, so we don't have to worry about backwards compatibility!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ece6152a0b447872978aa0c867e00d2d5474e847" translate="yes" xml:space="preserve">
          <source>First, it is important to make sure that the &lt;code&gt;type&lt;/code&gt; name of a record in the normalized JSON object exactly matches the filename of the model defined for this record type. By convention Model names are singular in Ember Data, however, the example type names shown in the &lt;a href=&quot;http://jsonapi.org/format/&quot;&gt;JSON API spec&lt;/a&gt; are pluralized. The JSON API spec itself is agnostic about inflection rules, however, Ember Data's own &lt;code&gt;JSONAPISerializer&lt;/code&gt; assumes types are plural and it will automatically singularize the types.</source>
          <target state="translated">Primero, es importante asegurarse de que el nombre de &lt;code&gt;type&lt;/code&gt; de un registro en el objeto JSON normalizado coincida exactamente con el nombre de archivo del modelo definido para este tipo de registro. Por convenci&amp;oacute;n, los nombres de modelo son singulares en Ember Data, sin embargo, los nombres de tipo de ejemplo que se muestran en la &lt;a href=&quot;http://jsonapi.org/format/&quot;&gt;especificaci&amp;oacute;n de la API JSON&lt;/a&gt; est&amp;aacute;n pluralizados. La especificaci&amp;oacute;n de la API JSON en s&amp;iacute; misma es independiente de las reglas de inflexi&amp;oacute;n, sin embargo, el propio &lt;code&gt;JSONAPISerializer&lt;/code&gt; de Ember Data asume que los tipos son plurales y los singularizar&amp;aacute; autom&amp;aacute;ticamente.</target>
        </trans-unit>
        <trans-unit id="037597fd6dd51a53b7aebdf3a46803009790e2bf" translate="yes" xml:space="preserve">
          <source>First, it is important to make sure that the &lt;code&gt;type&lt;/code&gt; name of a record in the normalized JSON object exactly matches the filename of the model defined for this record type. By convention Model names are singular in Ember Data, however, the example type names shown in the &lt;a href=&quot;http://jsonapi.org/format/&quot;&gt;JSON:API spec&lt;/a&gt; are pluralized. The JSON:API spec itself is agnostic about inflection rules, however, Ember Data's own &lt;code&gt;JSONAPISerializer&lt;/code&gt; assumes types are plural and it will automatically singularize the types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5bb2480a7390cd171d8e6e7da4d914c5c57bae2" translate="yes" xml:space="preserve">
          <source>First, let's copy Tomster's message into its own component. Components go in the &lt;code&gt;app/components&lt;/code&gt; directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d184d8c77ce90884e7f1cbfc1ae2b64be52a4c2" translate="yes" xml:space="preserve">
          <source>First, let's look at setting the &lt;code&gt;belongsTo&lt;/code&gt; relationship in our new comment:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6eadcb5f0a4f39ed8ede149f4439b7363969cd98" translate="yes" xml:space="preserve">
          <source>First, let's look at the model definitions:</source>
          <target state="translated">Primero,veamos las definiciones del modelo:</target>
        </trans-unit>
        <trans-unit id="2d4aa57fc0f8f1880631484c60f1ef3f6b6df0a4" translate="yes" xml:space="preserve">
          <source>First, let's start with the HTML.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="948ba0b5c2d99cf6144521a6394416708807b6ae" translate="yes" xml:space="preserve">
          <source>First, let's turn our &lt;code&gt;increment&lt;/code&gt; and &lt;code&gt;decrement&lt;/code&gt; methods into a single &lt;code&gt;change&lt;/code&gt; method that takes the amount as a parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="820cfc89d284678866eb3c45a0088b1821983809" translate="yes" xml:space="preserve">
          <source>First, refactor your own code to not depend on jQuery. See the section above on how to do this. Keep in mind that you will have to remove jQuery usage entirely, you cannot use solutions that replace the integration API with jQuery independently such as &lt;code&gt;$(this.element)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="472239296d98f3194e8bb30847f70bef3c7937fe" translate="yes" xml:space="preserve">
          <source>First, we add actions to handle the &lt;code&gt;click&lt;/code&gt; events for the &lt;code&gt;Play&lt;/code&gt; and &lt;code&gt;Pause&lt;/code&gt; buttons:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3381dace0d96459f09929584bf5b806768029515" translate="yes" xml:space="preserve">
          <source>First, we can modify the &lt;code&gt;&amp;lt;PeopleList&amp;gt;&lt;/code&gt; component to include a button:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0629bcd6a04aa486281fdec7ac1791e0a0fc19b" translate="yes" xml:space="preserve">
          <source>First, we want to test that visiting &lt;code&gt;/&lt;/code&gt; properly redirects to &lt;code&gt;/rentals&lt;/code&gt;. We'll use the Ember &lt;code&gt;visit&lt;/code&gt; helper and then make sure our current URL is &lt;code&gt;/rentals&lt;/code&gt; once the redirect occurs.</source>
          <target state="translated">Primero, queremos probar que visitar &lt;code&gt;/&lt;/code&gt; redirecciona correctamente a &lt;code&gt;/rentals&lt;/code&gt; . Usaremos el asistente de &lt;code&gt;visit&lt;/code&gt; a de Ember y luego nos aseguraremos de que nuestra URL actual sea &lt;code&gt;/rentals&lt;/code&gt; una vez que se produzca la redirecci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="bcb59c1a58c38561e2f0a31c63e53aa249dedbda" translate="yes" xml:space="preserve">
          <source>First, we would add a component class and extract the parts of each &lt;code&gt;&amp;lt;Message&amp;gt;&lt;/code&gt; component that are different into an array on that class. We would extract the username, active value, local time, and the yielded content for each message. For the yielded content, since it's plain HTML, we can extract it as a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b9e569b97de65bcfc14bf39fec8679fb982a301" translate="yes" xml:space="preserve">
          <source>First, you can run the test suite by entering the command &lt;code&gt;ember test&lt;/code&gt;, or &lt;code&gt;ember t&lt;/code&gt;, in your terminal. This will run the suite just once.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6706b49fc30db4d029bde11b98efa970615d213c" translate="yes" xml:space="preserve">
          <source>Flagging Details</source>
          <target state="translated">Detalles de la bandera</target>
        </trans-unit>
        <trans-unit id="5d728758adcdd5154d3be55552c1c061ef1489b2" translate="yes" xml:space="preserve">
          <source>Flags</source>
          <target state="translated">Flags</target>
        </trans-unit>
        <trans-unit id="19cb5ab7ee7f1f9598ac357f666b0f5509ab62a2" translate="yes" xml:space="preserve">
          <source>Flags are Boolean values that can be used to introspect a record's current state in a more user-friendly way than examining its state path. For example, instead of doing this:</source>
          <target state="translated">Las banderas son valores booleanos que pueden utilizarse para introspectar el estado actual de un registro de una manera más fácil de usar que examinando su trayectoria de estado.Por ejemplo,en lugar de hacer esto:</target>
        </trans-unit>
        <trans-unit id="b4b770e289db379ddae59b3a7a4305d8bcdacb14" translate="yes" xml:space="preserve">
          <source>Focus Management</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7364a2e9bf38000e6c8cf95c07c1e59d10416bf" translate="yes" xml:space="preserve">
          <source>Focus is one of the main ways a component can communicate with screen readers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a27bad688a1495e1d0e0640951fdf0fe6cefdb7" translate="yes" xml:space="preserve">
          <source>Focus management in components</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a41650b1923238b95545dfd4da035963c6ba7d6" translate="yes" xml:space="preserve">
          <source>Focus should return from whence it came- for example, if a &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; element opens a modal, the focus should then be returned to that same trigger button once the modal is closed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b8df3f68a8b572701fbfac12cbf5b5265e25ce1" translate="yes" xml:space="preserve">
          <source>Follow the &lt;a href=&quot;https://cli.emberjs.com/release/basic-use/upgrading/&quot;&gt;regular upgrade steps&lt;/a&gt; to update your app to at least version &lt;code&gt;3.15&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a28beaaed4ef1d566f4c97eccc1caa61549d33dd" translate="yes" xml:space="preserve">
          <source>Following these steps will help you get your site up and running in minutes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d11dc4abb333b77947ff74b7169fb2a22341d1f8" translate="yes" xml:space="preserve">
          <source>For Ember Data to correctly map errors to their corresponding properties on the model, Ember Data expects each error to be a valid JSON-API error object with a &lt;code&gt;source/pointer&lt;/code&gt; that matches the property name. For example, if you had a Post model that looked like this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="608af683967cdf20062b6769068e1aa8964643ac" translate="yes" xml:space="preserve">
          <source>For Ember Data to correctly map errors to their corresponding properties on the model, Ember Data expects each error to be a valid json-api error object with a &lt;code&gt;source/pointer&lt;/code&gt; that matches the property name. For example if you had a Post model that looked like this.</source>
          <target state="translated">Para que Ember Data asigne correctamente los errores a sus propiedades correspondientes en el modelo, Ember Data espera que cada error sea un objeto de error json-api v&amp;aacute;lido con una &lt;code&gt;source/pointer&lt;/code&gt; que coincida con el nombre de la propiedad. Por ejemplo, si tuvieras un modelo de Post con este aspecto.</target>
        </trans-unit>
        <trans-unit id="8901a64a4130543da37dae623336833c3ed01d95" translate="yes" xml:space="preserve">
          <source>For Example, if you had a &lt;code&gt;User&lt;/code&gt; model that looked like this:</source>
          <target state="translated">Por ejemplo, si tiene un modelo de &lt;code&gt;User&lt;/code&gt; que se ve as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="9bf222dedc4fde701f327ad11e7bcbfb8bbe58aa" translate="yes" xml:space="preserve">
          <source>For Glimmer components, arguments are &lt;em&gt;one-way bound&lt;/em&gt;. There is no way to directly mutate a value on a parent component from the child component, even if it is passed as an argument. Instead, you must send an &lt;em&gt;action&lt;/em&gt; upward to mutate the value:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d17bb81f259dfd87f21096341e61841d99e8a36c" translate="yes" xml:space="preserve">
          <source>For Super Rentals, we want to arrive at a home page which displays a list of rentals. From there, we should be able to visit an about page and our contact page.</source>
          <target state="translated">Para Súper Alquileres,queremos llegar a una página de inicio que muestra una lista de alquileres.Desde allí,deberíamos poder visitar una página de información y nuestra página de contacto.</target>
        </trans-unit>
        <trans-unit id="6c19850875c0f4c200fdbe850c4cc53c4bc55d59" translate="yes" xml:space="preserve">
          <source>For Super Rentals, we want to be able to display a map showing where each rental is. To implement this feature, we will take advantage of several Ember concepts:</source>
          <target state="translated">Para Super Alquileres,queremos poder mostrar un mapa que muestre dónde está cada alquiler.Para implementar esta característica,aprovecharemos varios conceptos de Ember:</target>
        </trans-unit>
        <trans-unit id="11e2ef0182a51d3a82241cd0b83c6b8e1e2299f1" translate="yes" xml:space="preserve">
          <source>For Super Rentals, we'll take advantage of two addons: &lt;a href=&quot;https://github.com/toddjordan/ember-cli-tutorial-style&quot;&gt;ember-cli-tutorial-style&lt;/a&gt; and &lt;a href=&quot;http://www.ember-cli-mirage.com/&quot;&gt;ember-cli-mirage&lt;/a&gt;.</source>
          <target state="translated">Para Super Rentals, aprovecharemos dos complementos: &lt;a href=&quot;https://github.com/toddjordan/ember-cli-tutorial-style&quot;&gt;ember-cli-tutorial-style&lt;/a&gt; y &lt;a href=&quot;http://www.ember-cli-mirage.com/&quot;&gt;ember-cli-mirage&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cd0364f3fbd052edc01be35296c37eaa0f495aa7" translate="yes" xml:space="preserve">
          <source>For a findRecord request, this is the id initially provided in the call to store.findRecord. Else this value is null.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5b8f6c95cbe660c082982f09e9c828163fb2d1f" translate="yes" xml:space="preserve">
          <source>For a full list of command line options, run &lt;code&gt;ember help&lt;/code&gt;.</source>
          <target state="translated">Para obtener una lista completa de las opciones de la l&amp;iacute;nea de comandos, ejecute la &lt;code&gt;ember help&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="df9331f557ec97b660c482b532a718f800964df0" translate="yes" xml:space="preserve">
          <source>For a given relationship name, returns the model type of the relationship.</source>
          <target state="translated">Para un nombre de relación determinado,devuelve el tipo de modelo de la relación.</target>
        </trans-unit>
        <trans-unit id="4bbf91ea9cb6dee3d2f030e7e006dcf2ff83888c" translate="yes" xml:space="preserve">
          <source>For a model called TacoParty, its &lt;code&gt;modelName&lt;/code&gt; would be the string &lt;code&gt;taco-party&lt;/code&gt;. The RESTSerializer will send it to the server with &lt;code&gt;tacoParty&lt;/code&gt; as the root key in the JSON payload:</source>
          <target state="translated">Para un modelo llamado TacoParty, su &lt;code&gt;modelName&lt;/code&gt; ser&amp;iacute;a la cadena &lt;code&gt;taco-party&lt;/code&gt; . RESTSerializer lo enviar&amp;aacute; al servidor con &lt;code&gt;tacoParty&lt;/code&gt; como clave ra&amp;iacute;z en la carga &amp;uacute;til JSON:</target>
        </trans-unit>
        <trans-unit id="55bdaf1a83e02f4ce01b2c3a5eb12b3cb6773aca" translate="yes" xml:space="preserve">
          <source>For a more complex example, this template would allow the user to switch between showing the user's height and weight with a click:</source>
          <target state="translated">Para un ejemplo más complejo,esta plantilla permitiría al usuario cambiar entre mostrar la altura y el peso del usuario con un clic:</target>
        </trans-unit>
        <trans-unit id="aacbc5ca40c83127bb62b881de3e0d83a93aaabc" translate="yes" xml:space="preserve">
          <source>For addons needing more advanced detection &lt;a href=&quot;https://github.com/ember-cli/babel-plugin-debug-macros&quot;&gt;babel-plugin-debug-macros&lt;/a&gt; can be leveraged to provide code-stripping based on feature presence. For example in your addon's &lt;code&gt;index.js&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3700335c1af8f6f4f3a1f0c5b9ed40e2c148205e" translate="yes" xml:space="preserve">
          <source>For an example implementation, see &lt;a href=&quot;ds.jsonserializer&quot;&gt;DS.JSONSerializer&lt;/a&gt;, the included JSON serializer.</source>
          <target state="translated">Para ver una implementaci&amp;oacute;n de ejemplo, consulte &lt;a href=&quot;ds.jsonserializer&quot;&gt;DS.JSONSerializer&lt;/a&gt; , el serializador JSON incluido.</target>
        </trans-unit>
        <trans-unit id="d638e7624c5a777bf24a21f0c4a48fe8683a638c" translate="yes" xml:space="preserve">
          <source>For an example implementation, see &lt;a href=&quot;jsonserializer&quot;&gt;JSONSerializer&lt;/a&gt;, the included JSON serializer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ca994b2a5d04d63be4a4b3fea64e6f8c73fb10c" translate="yes" xml:space="preserve">
          <source>For an example implementation, see &lt;code&gt;DS.RESTAdapter&lt;/code&gt;, the included REST adapter.</source>
          <target state="translated">Para ver una implementaci&amp;oacute;n de ejemplo, consulte &lt;code&gt;DS.RESTAdapter&lt;/code&gt; , el adaptador REST incluido.</target>
        </trans-unit>
        <trans-unit id="795ea3c24992645ecbb62e28ed978653dcdbb67c" translate="yes" xml:space="preserve">
          <source>For any of these cases, you can configure &lt;code&gt;ember build&lt;/code&gt; to do The Right Thing. You can read more about this in &lt;a href=&quot;https://cli.emberjs.com/release/advanced-use/build-targets/&quot;&gt;the Ember CLI Guides&lt;/a&gt;!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19d83c29fec0c9696864748fc37c9295098a6ed4" translate="yes" xml:space="preserve">
          <source>For applications whose APIs are &lt;em&gt;very close to&lt;/em&gt; or &lt;em&gt;exactly&lt;/em&gt; the &lt;strong&gt;REST&lt;/strong&gt; format or &lt;strong&gt;JSON:API&lt;/strong&gt; format the &lt;code&gt;@ember-data/serializer&lt;/code&gt; package contains implementations these applications can extend. It also contains a simple &lt;code&gt;JSONSerializer&lt;/code&gt; for serializing to/from very basic JSON objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2d3f7ef5183f7de30d3540a21b33817bbe112b6" translate="yes" xml:space="preserve">
          <source>For arbitrary filtering, use the &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Enumerable.html#method_filter&quot;&gt;&lt;code&gt;filter()&lt;/code&gt;&lt;/a&gt; method. The filter method expects the callback to return &lt;code&gt;true&lt;/code&gt; if Ember should include it in the final Array, and &lt;code&gt;false&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt; if Ember should not.</source>
          <target state="translated">Para un filtrado arbitrario, use el m&amp;eacute;todo &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Enumerable.html#method_filter&quot;&gt; &lt;code&gt;filter()&lt;/code&gt; &lt;/a&gt; . El m&amp;eacute;todo de filtro espera que la devoluci&amp;oacute;n de llamada devuelva &lt;code&gt;true&lt;/code&gt; si Ember deber&amp;iacute;a incluirlo en el Array final, y &lt;code&gt;false&lt;/code&gt; o &lt;code&gt;undefined&lt;/code&gt; si Ember no deber&amp;iacute;a.</target>
        </trans-unit>
        <trans-unit id="ea2f77cc825060eb2a2d64424a142c42b41a9027" translate="yes" xml:space="preserve">
          <source>For backwards compatibility with earlier versions of Ember, it is possible to call an action by passing an event argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c5c7bfbe7ec718eba75809ebe5f4bc5e7414f1e" translate="yes" xml:space="preserve">
          <source>For basic Ember app development scenarios, you don't need to understand the run loop or use it directly. All common paths are paved nicely for you and don't require working with the run loop directly.</source>
          <target state="translated">Para los escenarios básicos de desarrollo de aplicaciones de Ember,no es necesario entender el bucle de ejecución o utilizarlo directamente.Todos los caminos comunes están bien pavimentados y no requieren trabajar con el bucle de ejecución directamente.</target>
        </trans-unit>
        <trans-unit id="ca90b49f09108e8c5f3baf10440957cff8c7e056" translate="yes" xml:space="preserve">
          <source>For classic components, only attributes that were explicitly listed by the component you are invoking would be placed on the component's wrapper element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56ce68e24eb61ded26449c175235262d8e871d12" translate="yes" xml:space="preserve">
          <source>For creating your own test helper, run &lt;code&gt;ember generate test-helper
&amp;lt;helper-name&amp;gt;&lt;/code&gt;. Here is the result of running &lt;code&gt;ember g test-helper
shouldHaveElementWithCount&lt;/code&gt;:</source>
          <target state="translated">Para crear su propio asistente de prueba, ejecute &lt;code&gt;ember generate test-helper &amp;lt;helper-name&amp;gt;&lt;/code&gt; . Aqu&amp;iacute; est&amp;aacute; el resultado de ejecutar &lt;code&gt;ember g test-helper shouldHaveElementWithCount&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="2ae4b0ef9f0e766abe75e47e63d9b8a5da4127f3" translate="yes" xml:space="preserve">
          <source>For deep-linking to route paths that contain multiple dynamic segments, multiple model arguments can be used. As the router transitions through the route path, each supplied model argument will become the context for the route with the dynamic segments:</source>
          <target state="translated">Para la vinculación profunda con rutas que contienen múltiples segmentos dinámicos,se pueden utilizar múltiples argumentos de modelo.A medida que el enrutador pasa por el trayecto de la ruta,cada argumento de modelo suministrado se convertirá en el contexto de la ruta con los segmentos dinámicos:</target>
        </trans-unit>
        <trans-unit id="18aa8c626627f3993e0ea20a45eaee1871b8d93b" translate="yes" xml:space="preserve">
          <source>For detailed usage, see the &lt;a href=&quot;https://guides.emberjs.com/release/object-model/&quot;&gt;Object Model&lt;/a&gt; section of the guides.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="738ab1bb57b35b828d77d1e2c2e81f811ff8e2f7" translate="yes" xml:space="preserve">
          <source>For developers who are not already familiar with native classes, check out &lt;a href=&quot;https://guides.emberjs.com/in-depth-topics/native-classes-in-depth/&quot;&gt;Ember's native class guide&lt;/a&gt;, which provides a thorough breakdown of native class functionality and usage. This section of the upgrade guide will focus on the differences between classic Ember classes and native classes. You can also reference the &lt;a href=&quot;https://ember-learn.github.io/ember-octane-vs-classic-cheat-sheet/&quot;&gt;Octane vs. Classic Cheatsheet&lt;/a&gt; as a quick reference for these differences.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="422b640ae923c2f1dbcc59b71d7f412d819eeae7" translate="yes" xml:space="preserve">
          <source>For example &lt;code&gt;post&lt;/code&gt; would be converted to &lt;code&gt;posts&lt;/code&gt; and &lt;code&gt;student-assesment&lt;/code&gt; would be converted to &lt;code&gt;student-assesments&lt;/code&gt;.</source>
          <target state="translated">Por ejemplo, la &lt;code&gt;post&lt;/code&gt; se convertir&amp;iacute;a en &lt;code&gt;posts&lt;/code&gt; y &lt;code&gt;student-assesment&lt;/code&gt; se convertir&amp;iacute;a en &lt;code&gt;student-assesments&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="29e6284618835e51e5f101b2f2c1824310bf5fd3" translate="yes" xml:space="preserve">
          <source>For example a component for playing or pausing music may translate click events into action notifications of &quot;play&quot; or &quot;stop&quot; depending on some internal state of the component:</source>
          <target state="translated">Por ejemplo,un componente para reproducir o pausar música puede traducir los eventos de clic en notificaciones de acción de &quot;reproducir&quot; o &quot;detener&quot; dependiendo de algún estado interno del componente:</target>
        </trans-unit>
        <trans-unit id="c4ffae2db69018636d385df639a37b80e2029b44" translate="yes" xml:space="preserve">
          <source>For example having a user that has many pets:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4274de86023f1d8ef0c38c3b4f1a841459c37ceb" translate="yes" xml:space="preserve">
          <source>For example if you have an object LineItem with an endpoint of &quot;/line_items/&quot;.</source>
          <target state="translated">Por ejemplo,si tienes un objeto LineItem con un punto final de &quot;/line_items/&quot;.</target>
        </trans-unit>
        <trans-unit id="32b4b0a4775727dc38c8719870e36f7a3ebf9e32" translate="yes" xml:space="preserve">
          <source>For example if you wanted to ensure all your attributes were always serialized as properties on an &lt;code&gt;attributes&lt;/code&gt; object you could write:</source>
          <target state="translated">Por ejemplo, si desea asegurarse de que todos sus atributos siempre se serialicen como propiedades en un objeto de &lt;code&gt;attributes&lt;/code&gt; , puede escribir:</target>
        </trans-unit>
        <trans-unit id="16ff63a70847a566067bc93db18e57265f811c13" translate="yes" xml:space="preserve">
          <source>For example review the docs for each method of this mixin:</source>
          <target state="translated">Por ejemplo,revisa los documentos de cada método de esta mezcla:</target>
        </trans-unit>
        <trans-unit id="89e34524011e47a91b9054a4492f9d96c645a014" translate="yes" xml:space="preserve">
          <source>For example the key &lt;code&gt;posts&lt;/code&gt; would be converted to &lt;code&gt;post&lt;/code&gt; and the key &lt;code&gt;studentAssesments&lt;/code&gt; would be converted to &lt;code&gt;student-assesment&lt;/code&gt;.</source>
          <target state="translated">Por ejemplo, las &lt;code&gt;posts&lt;/code&gt; clave se convertir&amp;iacute;an en &lt;code&gt;post&lt;/code&gt; y las &lt;code&gt;studentAssesments&lt;/code&gt; clave de los estudiantes se convertir&amp;iacute;an en &lt;code&gt;student-assesment&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dcdf15727eb2b28f1020aebdfa796fc8be46d4b5" translate="yes" xml:space="preserve">
          <source>For example you may find that you want to read an embedded record when extracting a JSON payload but only include the relationship's id when serializing the record. This is possible by using the &lt;code&gt;serialize:
'ids'&lt;/code&gt; option. You can also opt out of serializing a relationship by setting &lt;code&gt;serialize: false&lt;/code&gt;.</source>
          <target state="translated">Por ejemplo, es posible que desee leer un registro incrustado al extraer una carga &amp;uacute;til JSON, pero solo incluya la identificaci&amp;oacute;n de la relaci&amp;oacute;n al serializar el registro. Esto es posible utilizando la opci&amp;oacute;n &lt;code&gt;serialize: 'ids'&lt;/code&gt; . Tambi&amp;eacute;n puede optar por no serializar una relaci&amp;oacute;n configurando &lt;code&gt;serialize: false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="33d2f1cbb1d8553be392d988868f6a5371d2ec96" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;recordReference.push(promise)&lt;/code&gt; will be resolved with a record.</source>
          <target state="translated">Por ejemplo, &lt;code&gt;recordReference.push(promise)&lt;/code&gt; se resolver&amp;aacute; con un registro.</target>
        </trans-unit>
        <trans-unit id="af68c84b34b6d750b82bc37ecf88ed15f7fc2ff6" translate="yes" xml:space="preserve">
          <source>For example, ArrayProxy is a concrete class that can be instantiated to implement array-like behavior. This class uses the Array Mixin by way of the MutableArray mixin, which allows observable changes to be made to the underlying array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6e5033ffdb8426f6ba4331cc5b92fee148c9ad1" translate="yes" xml:space="preserve">
          <source>For example, ArrayProxy is a concrete classes that can be instantiated to implement array-like behavior. Both of these classes use the Array Mixin by way of the MutableArray mixin, which allows observable changes to be made to the underlying array.</source>
          <target state="translated">Por ejemplo,ArrayProxy es una clase concreta que puede ser instanciada para implementar un comportamiento similar al de un array.Ambas clases utilizan el Array Mixin por medio del MutableArray mixin,que permite que se hagan cambios observables en el array subyacente.</target>
        </trans-unit>
        <trans-unit id="ff3d376904c68d022bfbba8a10050ecfb6143d30" translate="yes" xml:space="preserve">
          <source>For example, a &lt;code&gt;favicon&lt;/code&gt; located at &lt;code&gt;public/images/favicon.ico&lt;/code&gt; will be copied to &lt;code&gt;dist/images/favicon.ico&lt;/code&gt;.</source>
          <target state="translated">Por ejemplo, un &lt;code&gt;favicon&lt;/code&gt; ubicado en &lt;code&gt;public/images/favicon.ico&lt;/code&gt; se copiar&amp;aacute; en &lt;code&gt;dist/images/favicon.ico&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="87e82c21445e0bff3eded3b0bd032f6402cb94c2" translate="yes" xml:space="preserve">
          <source>For example, a common desire is to change the port that Ember CLI serves the app from. It's possible to pass the port number from the command line with &lt;code&gt;ember server --port 8080&lt;/code&gt;. To make this configuration permanent, edit your &lt;code&gt;.ember-cli&lt;/code&gt; file like so:</source>
          <target state="translated">Por ejemplo, un deseo com&amp;uacute;n es cambiar el puerto desde el que Ember CLI sirve a la aplicaci&amp;oacute;n. Es posible pasar el n&amp;uacute;mero de puerto desde la l&amp;iacute;nea de comando con el &lt;code&gt;ember server --port 8080&lt;/code&gt; . Para que esta configuraci&amp;oacute;n sea permanente, edite su archivo &lt;code&gt;.ember-cli&lt;/code&gt; as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="9fbdf151c291a6758e34cf2395f457e9db52c84f" translate="yes" xml:space="preserve">
          <source>For example, a computed property like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a5acb60141e929963eb39d18bb05eef3650c6b8" translate="yes" xml:space="preserve">
          <source>For example, a photo sharing application might have a &lt;code&gt;Photo&lt;/code&gt; model to represent a particular photo, and a &lt;code&gt;PhotoAlbum&lt;/code&gt; that represents a group of photos. In contrast, an online shopping app would probably have different models, like &lt;code&gt;ShoppingCart&lt;/code&gt;, &lt;code&gt;Invoice&lt;/code&gt;, or &lt;code&gt;LineItem&lt;/code&gt;.</source>
          <target state="translated">Por ejemplo, una aplicaci&amp;oacute;n para compartir fotos puede tener un modelo de &lt;code&gt;Photo&lt;/code&gt; para representar una foto en particular y un &lt;code&gt;PhotoAlbum&lt;/code&gt; de fotos que representa un grupo de fotos. Por el contrario, una aplicaci&amp;oacute;n de compras en l&amp;iacute;nea probablemente tenga diferentes modelos, como &lt;code&gt;ShoppingCart&lt;/code&gt; , &lt;code&gt;Invoice&lt;/code&gt; o &lt;code&gt;LineItem&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="44ab29873b3591712c2e0c74255092599fc0926d" translate="yes" xml:space="preserve">
          <source>For example, a property rentals application would want to save the details of a rental when a user publishes it, and so a rental would have a model defining its details, perhaps called the &lt;em&gt;rental&lt;/em&gt; model.</source>
          <target state="translated">Por ejemplo, una aplicaci&amp;oacute;n de alquiler de propiedades querr&amp;iacute;a guardar los detalles de un alquiler cuando un usuario lo publica, por lo que un alquiler tendr&amp;iacute;a un modelo que define sus detalles, quiz&amp;aacute;s llamado modelo de &lt;em&gt;alquiler&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="8d21aad40a9bed94333d576f120ad094ac4f4399" translate="yes" xml:space="preserve">
          <source>For example, a property rentals application would want to save the details of a rental when a user publishes it, and so a rental would have a model defining its details, perhaps called the &lt;em&gt;rental&lt;/em&gt; model. You may also need a &lt;em&gt;user&lt;/em&gt; model to keep track of who is currently logged in.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3080b60207e20160ffb7606a977c66f7b9da764" translate="yes" xml:space="preserve">
          <source>For example, a route found at &lt;code&gt;addon/routes/posts/post.js&lt;/code&gt; within an engine named &lt;code&gt;admin&lt;/code&gt; will have a &lt;code&gt;fullRouteName&lt;/code&gt; of &lt;code&gt;admin.posts.post&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43c6758042b2d1438265c2824d5327c2afbb14fb" translate="yes" xml:space="preserve">
          <source>For example, a route found at &lt;code&gt;app/routes/posts/post.js&lt;/code&gt; will have a &lt;code&gt;routeName&lt;/code&gt; of &lt;code&gt;posts.post&lt;/code&gt;.</source>
          <target state="translated">Por ejemplo, una ruta que se encuentre en &lt;code&gt;app/routes/posts/post.js&lt;/code&gt; tendr&amp;aacute; un &lt;code&gt;routeName&lt;/code&gt; de &lt;code&gt;posts.post&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="17296f09aca6cccf14c16b12a76d0dd488e56f7b" translate="yes" xml:space="preserve">
          <source>For example, an application initializer could register a &lt;code&gt;Logger&lt;/code&gt; factory with the key &lt;code&gt;logger:main&lt;/code&gt;:</source>
          <target state="translated">Por ejemplo, un inicializador aplicaci&amp;oacute;n podr&amp;iacute;a registrar un &lt;code&gt;Logger&lt;/code&gt; f&amp;aacute;brica con la clave &lt;code&gt;logger:main&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="da0d75be4fec5bac71e3c62f711ff5453bad5610" translate="yes" xml:space="preserve">
          <source>For example, as mentioned before, the route handler makes the model available to its template:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="677aedd807574aa47c0443452f50034656705301" translate="yes" xml:space="preserve">
          <source>For example, booting the instance in the full browser environment while specifying a foreign &lt;code&gt;document&lt;/code&gt; object (e.g. &lt;code&gt;{ isBrowser: true,
document: iframe.contentDocument }&lt;/code&gt;) does not work correctly today, largely due to Ember's jQuery dependency.</source>
          <target state="translated">Por ejemplo, arrancar la instancia en el entorno de navegador completo mientras se especifica un objeto de &lt;code&gt;document&lt;/code&gt; o ajeno (por ejemplo, &lt;code&gt;{ isBrowser: true, document: iframe.contentDocument }&lt;/code&gt; ) no funciona correctamente hoy, en gran parte debido a la dependencia jQuery de Ember.</target>
        </trans-unit>
        <trans-unit id="bf94a69859a173b24fa03f34475fba8bbc739769" translate="yes" xml:space="preserve">
          <source>For example, calling &lt;code&gt;component.$('li')&lt;/code&gt; will return a jQuery object containing all of the &lt;code&gt;li&lt;/code&gt; elements inside the DOM element of this component.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dc524afcecae3a5d1a3b574ce3653941b460f7f" translate="yes" xml:space="preserve">
          <source>For example, calling &lt;code&gt;view.$('li')&lt;/code&gt; will return a jQuery object containing all of the &lt;code&gt;li&lt;/code&gt; elements inside the DOM element of this view.</source>
          <target state="translated">Por ejemplo, llamar a &lt;code&gt;view.$('li')&lt;/code&gt; devolver&amp;aacute; un objeto jQuery que contiene todos los elementos &lt;code&gt;li&lt;/code&gt; dentro del elemento DOM de esta vista.</target>
        </trans-unit>
        <trans-unit id="832e7319fdf4fe74d789f4ff97a42892a8e5bfc9" translate="yes" xml:space="preserve">
          <source>For example, consider a service that keeps an array of messages, to be shown to the user at a later time:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb2b2ca3c29f9c0fe918c9aa0e06f7e004422a06" translate="yes" xml:space="preserve">
          <source>For example, consider an &lt;code&gt;Article&lt;/code&gt; component that takes &lt;code&gt;@title&lt;/code&gt; and &lt;code&gt;@body&lt;/code&gt; arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c8ee7c9556775363655c292f702c4a670e25c24" translate="yes" xml:space="preserve">
          <source>For example, consider this model:</source>
          <target state="translated">Por ejemplo,considere este modelo:</target>
        </trans-unit>
        <trans-unit id="89077fa5b9e32d8be08e87125ce9f1df113d07ae" translate="yes" xml:space="preserve">
          <source>For example, given a &lt;code&gt;post&lt;/code&gt; model that has a &lt;code&gt;hasMany&lt;/code&gt; relationship with a &lt;code&gt;comment&lt;/code&gt; model, when we retrieve a specific post we can have the server also return that post's comments in the same request:</source>
          <target state="translated">Por ejemplo, dado un modelo de &lt;code&gt;post&lt;/code&gt; que tiene una relaci&amp;oacute;n &lt;code&gt;hasMany&lt;/code&gt; con un modelo de &lt;code&gt;comment&lt;/code&gt; , cuando recuperamos una publicaci&amp;oacute;n espec&amp;iacute;fica, podemos hacer que el servidor tambi&amp;eacute;n devuelva los comentarios de esa publicaci&amp;oacute;n en la misma solicitud:</target>
        </trans-unit>
        <trans-unit id="e57d8ceb5b0b225e29789d4aa5961260d2659c4c" translate="yes" xml:space="preserve">
          <source>For example, given a &lt;code&gt;post&lt;/code&gt; model that has a &lt;code&gt;hasMany&lt;/code&gt; relationship with a &lt;code&gt;comment&lt;/code&gt; model, when we retrieve all of the post records we can have the server also return all of the posts' comments in the same request:</source>
          <target state="translated">Por ejemplo, dado un modelo de &lt;code&gt;post&lt;/code&gt; que tiene una relaci&amp;oacute;n &lt;code&gt;hasMany&lt;/code&gt; con un modelo de &lt;code&gt;comment&lt;/code&gt; , cuando recuperamos todos los registros de publicaciones podemos hacer que el servidor tambi&amp;eacute;n devuelva todos los comentarios de las publicaciones en la misma solicitud:</target>
        </trans-unit>
        <trans-unit id="489f404e218cc75986bba15e8e11745beda5b8ec" translate="yes" xml:space="preserve">
          <source>For example, given a &lt;code&gt;user&lt;/code&gt; object that looks like:</source>
          <target state="translated">Por ejemplo, dado un objeto de &lt;code&gt;user&lt;/code&gt; que se parece a:</target>
        </trans-unit>
        <trans-unit id="db5aeb2693175b560fe1010b9127dd8f733e96eb" translate="yes" xml:space="preserve">
          <source>For example, given a model with this definition:</source>
          <target state="translated">Por ejemplo,dado un modelo con esta definición:</target>
        </trans-unit>
        <trans-unit id="1180f3f7b18505ee8214c9a6062c2ec07decdecd" translate="yes" xml:space="preserve">
          <source>For example, given the following &lt;code&gt;User&lt;/code&gt; model and JSON payload:</source>
          <target state="translated">Por ejemplo, dado el siguiente modelo de &lt;code&gt;User&lt;/code&gt; y carga &amp;uacute;til JSON:</target>
        </trans-unit>
        <trans-unit id="dd6659d9b3a107d7109a9db88fc8bd8f8d6b4873" translate="yes" xml:space="preserve">
          <source>For example, given the following minimal router and templates:</source>
          <target state="translated">Por ejemplo,dado el siguiente enrutador mínimo y plantillas:</target>
        </trans-unit>
        <trans-unit id="85210e4c1cd5b251efc905283d29211e973a4353" translate="yes" xml:space="preserve">
          <source>For example, given the following model definition:</source>
          <target state="translated">Por ejemplo,dada la siguiente definición de modelo:</target>
        </trans-unit>
        <trans-unit id="46aef77986066ff4fcd7d5b3e1120a76a2b8736b" translate="yes" xml:space="preserve">
          <source>For example, given this component definition:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f59cce862ab3b75b665ac2791c566ec98398ef4" translate="yes" xml:space="preserve">
          <source>For example, here we pass a &lt;code&gt;class&lt;/code&gt; to a component:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4732529e8579217d42b369a80620f5828598bc5" translate="yes" xml:space="preserve">
          <source>For example, here's a &lt;code&gt;make-bold&lt;/code&gt; helper that returns a string containing HTML:</source>
          <target state="translated">Por ejemplo, aqu&amp;iacute; hay un ayudante para &lt;code&gt;make-bold&lt;/code&gt; que devuelve una cadena que contiene HTML:</target>
        </trans-unit>
        <trans-unit id="a0931ea25923fefdb6a38cd790a3537d6f79fb6d" translate="yes" xml:space="preserve">
          <source>For example, here's the &lt;code&gt;{{#each}}&lt;/code&gt; helper with its &lt;code&gt;key&lt;/code&gt; set to &lt;code&gt;id&lt;/code&gt;:</source>
          <target state="translated">Por ejemplo, aqu&amp;iacute; est&amp;aacute; el &lt;code&gt;{{#each}}&lt;/code&gt; con su &lt;code&gt;key&lt;/code&gt; configurada en &lt;code&gt;id&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="9b5f4bb9027369a31d821f9f1441d45b248f4fcc" translate="yes" xml:space="preserve">
          <source>For example, if &lt;code&gt;this.photos&lt;/code&gt; is a list of three photos, the rendered HTML would look something like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbcf42d8d7967ae994bbf983e708fe2d57e7d01c" translate="yes" xml:space="preserve">
          <source>For example, if &lt;code&gt;useLongGreeting&lt;/code&gt; is truthy, the following:</source>
          <target state="translated">Por ejemplo, si &lt;code&gt;useLongGreeting&lt;/code&gt; es veraz, lo siguiente:</target>
        </trans-unit>
        <trans-unit id="90ee2ce35d12e00f7a7456f8b811fd34e12ce174" translate="yes" xml:space="preserve">
          <source>For example, if all of your keys are underscored and all-caps, but otherwise consistent with the names you use in your models, you can implement across-the-board rules for how to convert an attribute name in your model to a key in your JSON.</source>
          <target state="translated">Por ejemplo,si todas las claves están subrayadas y todas las mayúsculas,pero por lo demás son coherentes con los nombres que utiliza en sus modelos,puede implementar reglas generales sobre cómo convertir un nombre de atributo en su modelo en una clave en su JSON.</target>
        </trans-unit>
        <trans-unit id="02a30a3ddd052fb29a20412930f92c0856aa39c6" translate="yes" xml:space="preserve">
          <source>For example, if only events inside a DOM element with the ID of &lt;code&gt;ember-app&lt;/code&gt; should be delegated, set your application's &lt;code&gt;rootElement&lt;/code&gt; property:</source>
          <target state="translated">Por ejemplo, si solo deben delegarse los eventos dentro de un elemento DOM con el ID de &lt;code&gt;ember-app&lt;/code&gt; , configure la propiedad &lt;code&gt;rootElement&lt;/code&gt; de su aplicaci&amp;oacute;n :</target>
        </trans-unit>
        <trans-unit id="3a9272e879b64b4a237182b125c580de3ff30f1e" translate="yes" xml:space="preserve">
          <source>For example, if the &lt;code&gt;IDs&lt;/code&gt; under &lt;code&gt;&quot;comments&quot;&lt;/code&gt; are provided as &lt;code&gt;_id&lt;/code&gt; instead of &lt;code&gt;id&lt;/code&gt;, you can specify how to normalize just the comments:</source>
          <target state="translated">Por ejemplo, si los &lt;code&gt;IDs&lt;/code&gt; en &lt;code&gt;&quot;comments&quot;&lt;/code&gt; se proporcionan como &lt;code&gt;_id&lt;/code&gt; en lugar de &lt;code&gt;id&lt;/code&gt; , puede especificar c&amp;oacute;mo normalizar solo los comentarios:</target>
        </trans-unit>
        <trans-unit id="08d0bf160d6c1ec0e1162e1c16cc1119d1e3be74" translate="yes" xml:space="preserve">
          <source>For example, if the &lt;code&gt;post&lt;/code&gt; argument was passed:</source>
          <target state="translated">Por ejemplo, si se pas&amp;oacute; el argumento de &lt;code&gt;post&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="896be09c413b3b2a12ea8051f29c05498cff5107" translate="yes" xml:space="preserve">
          <source>For example, if the original payload looks like:</source>
          <target state="translated">Por ejemplo,si la carga útil original se parece:</target>
        </trans-unit>
        <trans-unit id="eae48d7fffea1cab126121b7821c2c8b22f1b439" translate="yes" xml:space="preserve">
          <source>For example, if they're not logged in, you might want to prevent them from editing their profile, accessing private information, or checking out items in their shopping cart. Usually you want to redirect them to the login page, and after they have successfully logged in, take them back to the page they originally wanted to access.</source>
          <target state="translated">Por ejemplo,si no están conectados,puede evitar que editen su perfil,accedan a información privada o comprueben los artículos de su cesta de la compra.Por lo general,querrá redirigirlos a la página de inicio de sesión y,después de que hayan iniciado sesión con éxito,llevarlos de vuelta a la página a la que querían acceder originalmente.</target>
        </trans-unit>
        <trans-unit id="0fb055a8920b02f55febb777ebd4888a452094de" translate="yes" xml:space="preserve">
          <source>For example, if we are currently on &lt;code&gt;/photos/2&lt;/code&gt;, then the following template:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25041eaac09d3faca0bcc2bc718aee028281495e" translate="yes" xml:space="preserve">
          <source>For example, if we have a &amp;ldquo;posts&amp;rdquo; route, we can set the page title for it like so:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f73806b25dddfb94626863db4e4cbac2ab1cab96" translate="yes" xml:space="preserve">
          <source>For example, if we have the route &lt;code&gt;this.route('posts');&lt;/code&gt;, our route might load all of the blog posts for the app.</source>
          <target state="translated">Por ejemplo, si tenemos la ruta &lt;code&gt;this.route('posts');&lt;/code&gt; , nuestra ruta puede cargar todas las publicaciones del blog de la aplicaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="d7530a9a1849b5e34e195f285cd3d57d53d0b2f2" translate="yes" xml:space="preserve">
          <source>For example, if we were to work on a blogPost's asynchronous comments, we would have to wait until the promise has fulfilled:</source>
          <target state="translated">Por ejemplo,si trabajáramos en los comentarios asincrónicos de un blogPost,tendríamos que esperar hasta que la promesa se haya cumplido:</target>
        </trans-unit>
        <trans-unit id="f47e9b784954b10b2771eb8757cd1777f9724f7e" translate="yes" xml:space="preserve">
          <source>For example, if you are building an events ticketing system, in which users can only reserve tickets for 20 minutes at a time, and want to ensure that in each route you have data that is no more than 20 minutes old you could write:</source>
          <target state="translated">Por ejemplo,si estás construyendo un sistema de venta de entradas para eventos,en el que los usuarios sólo pueden reservar entradas para 20 minutos cada vez,y quieres asegurarte de que en cada ruta tienes datos que no tienen más de 20 minutos de antigüedad que podrías escribir:</target>
        </trans-unit>
        <trans-unit id="460edfe2b86e784c531932e74ac73c470273eb11" translate="yes" xml:space="preserve">
          <source>For example, if you define a model like this:</source>
          <target state="translated">Por ejemplo,si se define un modelo como este:</target>
        </trans-unit>
        <trans-unit id="d36faabef517cd5254e968a43b6fa26414afa3be" translate="yes" xml:space="preserve">
          <source>For example, if you define a view class, it might look like this:</source>
          <target state="translated">Por ejemplo,si se define una clase de vista,podría verse así:</target>
        </trans-unit>
        <trans-unit id="266ea5db8384b7e0ee687c908635246f12fda8d5" translate="yes" xml:space="preserve">
          <source>For example, if you define models like this:</source>
          <target state="translated">Por ejemplo,si se definen modelos como este:</target>
        </trans-unit>
        <trans-unit id="ab71643d1a343c350f40fecb15ad48172d275cdc" translate="yes" xml:space="preserve">
          <source>For example, if you desire an action to be sent when the input is blurred, you only need to setup the action name to the event name property.</source>
          <target state="translated">Por ejemplo,si desea que se envíe una acción cuando la entrada sea borrosa,sólo tiene que configurar el nombre de la acción a la propiedad de nombre de evento.</target>
        </trans-unit>
        <trans-unit id="69120901f27e4d92d120f09306db2200386d8ca5" translate="yes" xml:space="preserve">
          <source>For example, if you did not want to pluralize model names and needed underscore_case instead of camelCase you could override the &lt;code&gt;pathForType&lt;/code&gt; method like this:</source>
          <target state="translated">Por ejemplo, si no desea pluralizar los nombres de los modelos y necesita subrayado_case en lugar de camelCase, puede anular el m&amp;eacute;todo &lt;code&gt;pathForType&lt;/code&gt; de esta manera:</target>
        </trans-unit>
        <trans-unit id="0cb1c079cff6f181eb53c59a5d4d1c717cfb215d" translate="yes" xml:space="preserve">
          <source>For example, if you did not want to pluralize model names and needed underscore_case instead of dash-case you could override the &lt;code&gt;pathForType&lt;/code&gt; method like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1ec227d724ad2048f69c0dcb05514a48174eb14" translate="yes" xml:space="preserve">
          <source>For example, if you do not want to fetch complex data over a mobile connection, or if the network is down, you can implement &lt;code&gt;shouldBackgroundReloadAll&lt;/code&gt; as follows:</source>
          <target state="translated">Por ejemplo, si no desea obtener datos complejos a trav&amp;eacute;s de una conexi&amp;oacute;n m&amp;oacute;vil, o si la red no funciona, puede implementar &lt;code&gt;shouldBackgroundReloadAll&lt;/code&gt; de la siguiente manera:</target>
        </trans-unit>
        <trans-unit id="39bd2ee7480f96c51f502ace691e2eb98e3e8a2b" translate="yes" xml:space="preserve">
          <source>For example, if you do not want to fetch complex data over a mobile connection, or if the network is down, you can implement &lt;code&gt;shouldBackgroundReloadRecord&lt;/code&gt; as follows:</source>
          <target state="translated">Por ejemplo, si no desea obtener datos complejos a trav&amp;eacute;s de una conexi&amp;oacute;n m&amp;oacute;vil, o si la red no funciona, puede implementar &lt;code&gt;shouldBackgroundReloadRecord&lt;/code&gt; de la siguiente manera:</target>
        </trans-unit>
        <trans-unit id="6bfedef11963fbdb23bc65ee36f13d3932d60a5f" translate="yes" xml:space="preserve">
          <source>For example, if you have a &lt;code&gt;Person&lt;/code&gt; model:</source>
          <target state="translated">Por ejemplo, si tiene un modelo &lt;code&gt;Person&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="988cd2fd7fda873455ec0acfe67fcb1934ef76e9" translate="yes" xml:space="preserve">
          <source>For example, if you have a component that renders based on a json configuration, but you want to provide your component with the option of taking the config as a string, you can leverage &lt;code&gt;didReceiveAttrs&lt;/code&gt; to ensure the incoming config is always parsed.</source>
          <target state="translated">Por ejemplo, si tiene un componente que se procesa en funci&amp;oacute;n de una configuraci&amp;oacute;n json, pero desea proporcionar a su componente la opci&amp;oacute;n de tomar la configuraci&amp;oacute;n como una cadena, puede aprovechar &lt;code&gt;didReceiveAttrs&lt;/code&gt; para asegurarse de que la configuraci&amp;oacute;n entrante siempre se analice.</target>
        </trans-unit>
        <trans-unit id="7564e650f576cd9c9fb50018560eedf67b6e7d6c" translate="yes" xml:space="preserve">
          <source>For example, if you have a normal link tag and want the link to bring the user to another page in addition to triggering an ember action when clicked, you can use &lt;code&gt;preventDefault=false&lt;/code&gt;:</source>
          <target state="translated">Por ejemplo, si tiene una etiqueta de enlace normal y desea que el enlace lleve al usuario a otra p&amp;aacute;gina adem&amp;aacute;s de activar una acci&amp;oacute;n de ascuas al hacer clic, puede usar &lt;code&gt;preventDefault=false&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="5aaf0a55116c35dc679cd8fc2fbce94f8dcb4be1" translate="yes" xml:space="preserve">
          <source>For example, if you have a payload that looks like this:</source>
          <target state="translated">Por ejemplo,si tienes una carga útil que se ve así:</target>
        </trans-unit>
        <trans-unit id="f713f98461e6f44452ba7b5d52ecd69bbfcbc2e5" translate="yes" xml:space="preserve">
          <source>For example, if you have an &lt;code&gt;each&lt;/code&gt; helper looping over a number of items, you may need to pass a function that expects to receive the item as an argument to a component invoked within the loop. Here's how you could use the &lt;code&gt;fn&lt;/code&gt; helper to pass both the function and its arguments together:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba83a1f29a77cf84620d7760413868b22fa7a566" translate="yes" xml:space="preserve">
          <source>For example, if you have an initial payload of:</source>
          <target state="translated">Por ejemplo,si tienes una carga inicial de:</target>
        </trans-unit>
        <trans-unit id="9db22e238497aaeddaf3930e27b5f085241835c9" translate="yes" xml:space="preserve">
          <source>For example, if you have an object &lt;code&gt;LineItem&lt;/code&gt; with an endpoint of &lt;code&gt;/line_items/&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2102ec1248c55a678ec81f71bc96b959d0eee89f" translate="yes" xml:space="preserve">
          <source>For example, if you pass a falsey &lt;code&gt;useLongGreeting&lt;/code&gt; to the &lt;code&gt;Greeting&lt;/code&gt; component:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf3a65ca552bf54b8278f49bae0d188a6e161fbf" translate="yes" xml:space="preserve">
          <source>For example, if you want to set the &lt;code&gt;author&lt;/code&gt; property of a blogPost, this would &lt;strong&gt;not&lt;/strong&gt; work if the &lt;code&gt;user&lt;/code&gt; with id isn't already loaded into the store:</source>
          <target state="translated">Por ejemplo, si desea establecer la propiedad de &lt;code&gt;author&lt;/code&gt; de un blogPost, esto &lt;strong&gt;no&lt;/strong&gt; funcionar&amp;iacute;a si el &lt;code&gt;user&lt;/code&gt; con id no est&amp;aacute; ya cargado en la tienda:</target>
        </trans-unit>
        <trans-unit id="d907fcf82bce83f2c3b1516afcac4beef1e7aaa9" translate="yes" xml:space="preserve">
          <source>For example, if you wanted to serve your blogging application from &lt;code&gt;http://emberjs.com/blog/&lt;/code&gt;, it would be necessary to specify a root URL of &lt;code&gt;/blog/&lt;/code&gt;.</source>
          <target state="translated">Por ejemplo, si quisiera servir su aplicaci&amp;oacute;n de blogs desde &lt;code&gt;http://emberjs.com/blog/&lt;/code&gt; , ser&amp;iacute;a necesario especificar una URL ra&amp;iacute;z de &lt;code&gt;/blog/&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4f647f466ea1578196e5c43dcf0b647792ac4661" translate="yes" xml:space="preserve">
          <source>For example, if you were writing a contact management app, you might have a &lt;code&gt;Person&lt;/code&gt; model. An individual record in your app might have a type of &lt;code&gt;person&lt;/code&gt; and an ID of &lt;code&gt;1&lt;/code&gt; or &lt;code&gt;steve-buscemi&lt;/code&gt;.</source>
          <target state="translated">Por ejemplo, si estuviera escribiendo una aplicaci&amp;oacute;n de administraci&amp;oacute;n de contactos, podr&amp;iacute;a tener un modelo de &lt;code&gt;Person&lt;/code&gt; a . Un registro individual en su aplicaci&amp;oacute;n puede tener un tipo de &lt;code&gt;person&lt;/code&gt; a y una identificaci&amp;oacute;n de &lt;code&gt;1&lt;/code&gt; o &lt;code&gt;steve-buscemi&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="727ffb5688e015ef5607fd0c6cd0fa77d38b934c" translate="yes" xml:space="preserve">
          <source>For example, if you write a simple router like this:</source>
          <target state="translated">Por ejemplo,si escribes un simple router como este:</target>
        </trans-unit>
        <trans-unit id="ccc901c9b0f17db5a38b432a9a754c43f8c10426" translate="yes" xml:space="preserve">
          <source>For example, if you'd like to run a function on your component when a &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; in the components template is clicked you might do something like:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9beeb4da020945d358679fe3a2bc38db74dfa79f" translate="yes" xml:space="preserve">
          <source>For example, if your &lt;code&gt;post&lt;/code&gt; model contained an embedded &lt;code&gt;author&lt;/code&gt; record that looks similar to this:</source>
          <target state="translated">Por ejemplo, si su modelo de &lt;code&gt;post&lt;/code&gt; conten&amp;iacute;a un registro de &lt;code&gt;author&lt;/code&gt; incrustado que se parece a esto:</target>
        </trans-unit>
        <trans-unit id="c1cbf700efefeb0c2b2f0de5c98b0430075776cd" translate="yes" xml:space="preserve">
          <source>For example, if your API has nested URLs that depend on the parent, you will want to group records by their parent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ec38d4aaf0f702bea728bd8bab975d5784bde22" translate="yes" xml:space="preserve">
          <source>For example, if your Ember route looks like &lt;code&gt;/posts/1/comments/2&lt;/code&gt; and your API route for the comment also looks like &lt;code&gt;/posts/1/comments/2&lt;/code&gt; if you want to fetch the comment without fetching the post you can pass in the post to the &lt;code&gt;findRecord&lt;/code&gt; call:</source>
          <target state="translated">Por ejemplo, si su ruta Ember se parece a &lt;code&gt;/posts/1/comments/2&lt;/code&gt; y su ruta API para el comentario tambi&amp;eacute;n se parece a &lt;code&gt;/posts/1/comments/2&lt;/code&gt; , si desea obtener el comentario sin obtener la publicaci&amp;oacute;n, puede pasar la publicaci&amp;oacute;n de la llamada &lt;code&gt;findRecord&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="c1db57f0b51b68d69e8e59a940d8b1acdffb8a82" translate="yes" xml:space="preserve">
          <source>For example, if your api has nested URLs that depend on the parent, you will want to group records by their parent.</source>
          <target state="translated">Por ejemplo,si su API tiene URL anidadas que dependen del progenitor,querrá agrupar los registros por su progenitor.</target>
        </trans-unit>
        <trans-unit id="4cae9b667115af19b0f70d218bb91758fd6b9875" translate="yes" xml:space="preserve">
          <source>For example, if your application asks for a &lt;code&gt;Person&lt;/code&gt; with an ID of &lt;code&gt;1&lt;/code&gt;, how should Ember load it? Over HTTP or a WebSocket? If it's HTTP, is the URL &lt;code&gt;/person/1&lt;/code&gt; or &lt;code&gt;/resources/people/1&lt;/code&gt;?</source>
          <target state="translated">Por ejemplo, si su aplicaci&amp;oacute;n solicita una &lt;code&gt;Person&lt;/code&gt; a con un ID de &lt;code&gt;1&lt;/code&gt; , &amp;iquest;c&amp;oacute;mo deber&amp;iacute;a cargarla Ember? &amp;iquest;A trav&amp;eacute;s de HTTP o WebSocket? Si es HTTP, &amp;iquest;la URL es &lt;code&gt;/person/1&lt;/code&gt; o &lt;code&gt;/resources/people/1&lt;/code&gt; ?</target>
        </trans-unit>
        <trans-unit id="7737d9d26b3489cfdc5a25ba60ecfce6f8146aa6" translate="yes" xml:space="preserve">
          <source>For example, if your original payload looks like this:</source>
          <target state="translated">Por ejemplo,si su carga útil original se ve así:</target>
        </trans-unit>
        <trans-unit id="503e020476eef35b5c99a0e714f631dc45a7617b" translate="yes" xml:space="preserve">
          <source>For example, if your server API provides an endpoint for the currently logged in user:</source>
          <target state="translated">Por ejemplo,si la API de su servidor proporciona un punto final para el usuario actualmente conectado:</target>
        </trans-unit>
        <trans-unit id="9e4656876265d68a19262a9887c691638554c435" translate="yes" xml:space="preserve">
          <source>For example, imagine that we have a chat app and use our &lt;code&gt;make-bold&lt;/code&gt; helper to welcome the new users into the channel:</source>
          <target state="translated">Por ejemplo, imaginemos que tenemos una aplicaci&amp;oacute;n de chat y utilizar nuestro &lt;code&gt;make-bold&lt;/code&gt; ayudante para recibir a los nuevos usuarios en el canal:</target>
        </trans-unit>
        <trans-unit id="60c06ee63cd2aaa2e2e6d8c1ded9b35d5d2dc8c0" translate="yes" xml:space="preserve">
          <source>For example, imagine we are building a &lt;code&gt;blog-post&lt;/code&gt; component that we can use in our application to display a blog post:</source>
          <target state="translated">Por ejemplo, imagina que estamos creando un componente de &lt;code&gt;blog-post&lt;/code&gt; que podemos usar en nuestra aplicaci&amp;oacute;n para mostrar una publicaci&amp;oacute;n de blog:</target>
        </trans-unit>
        <trans-unit id="353d75503fc7da2af98494e6492240246c7e65a2" translate="yes" xml:space="preserve">
          <source>For example, imagine we have a template like this:</source>
          <target state="translated">Por ejemplo,imagina que tenemos una plantilla como esta:</target>
        </trans-unit>
        <trans-unit id="095f52e43267d1ba872a387928ba3aa3aabe5e68" translate="yes" xml:space="preserve">
          <source>For example, imagine we have an &lt;code&gt;Invoice&lt;/code&gt; model that contains a &lt;code&gt;totalDue&lt;/code&gt; attribute, which represents the total amount due for that invoice. Because we do not want our company to go out of business due to strange JavaScript rounding errors, &lt;a href=&quot;http://stackoverflow.com/a/3730040&quot;&gt;we store this value in cents instead of a floating point dollar value&lt;/a&gt;.</source>
          <target state="translated">Por ejemplo, imagine que tenemos un modelo de &lt;code&gt;Invoice&lt;/code&gt; que contiene un atributo &lt;code&gt;totalDue&lt;/code&gt; , que representa el monto total adeudado por esa factura. Debido a que no queremos que nuestra empresa cierre debido a extra&amp;ntilde;os errores de redondeo de JavaScript, &lt;a href=&quot;http://stackoverflow.com/a/3730040&quot;&gt;almacenamos este valor en centavos en lugar de un valor en d&amp;oacute;lares de coma flotante&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8571a832dfdafb3d90b012da01ec2eb030713161" translate="yes" xml:space="preserve">
          <source>For example, imagine we want to preload some data into the store when the application boots for the first time.</source>
          <target state="translated">Por ejemplo,imaginemos que queremos precargar algunos datos en el almacén cuando la aplicación se inicia por primera vez.</target>
        </trans-unit>
        <trans-unit id="c575bb413560b9c910aafe13e4ed30cf41d3bcbd" translate="yes" xml:space="preserve">
          <source>For example, imagine you have a &lt;code&gt;blog-post&lt;/code&gt; component that is used to display a blog post:</source>
          <target state="translated">Por ejemplo, imagina que tienes un componente de &lt;code&gt;blog-post&lt;/code&gt; que se usa para mostrar una publicaci&amp;oacute;n de blog:</target>
        </trans-unit>
        <trans-unit id="e5c3d6d6f6cd20fac18eb943b85e6bbabb8772c7" translate="yes" xml:space="preserve">
          <source>For example, imagine you have a comment form component that invokes a &lt;code&gt;submitComment&lt;/code&gt; action when the form is submitted, passing along the form's data:</source>
          <target state="translated">Por ejemplo, imagina que tienes un componente de formulario de comentarios que invoca una acci&amp;oacute;n &lt;code&gt;submitComment&lt;/code&gt; cuando se env&amp;iacute;a el formulario, pasando los datos del formulario:</target>
        </trans-unit>
        <trans-unit id="2b5fb5cb301dfd09a76e6b3ab24b6fdca6fc5ad9" translate="yes" xml:space="preserve">
          <source>For example, imagine your controller has a property that contains a URL to an image:</source>
          <target state="translated">Por ejemplo,imagina que tu controlador tiene una propiedad que contiene el URL de una imagen:</target>
        </trans-unit>
        <trans-unit id="c575c66aa4c4e9c00209d2fae3767498adbdd605" translate="yes" xml:space="preserve">
          <source>For example, in our example case above if you'd like to pass in the post that was being liked when the button is clicked you could do something like:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc289fd9ac809499aac8a2ac954840ac4dc5e73c" translate="yes" xml:space="preserve">
          <source>For example, in the attribute context:</source>
          <target state="translated">Por ejemplo,en el contexto de los atributos:</target>
        </trans-unit>
        <trans-unit id="00167da181a6b301648370b15c2cfcb4ce80368e" translate="yes" xml:space="preserve">
          <source>For example, let's say we want the &lt;code&gt;class&lt;/code&gt; on a &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; to be &lt;code&gt;superuser&lt;/code&gt; if the &lt;code&gt;@isAdmin&lt;/code&gt; variable is true, but &lt;code&gt;standard&lt;/code&gt; if the &lt;code&gt;@isAdmin&lt;/code&gt; variable is false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2944e2254a7a7dee002c8c0ec28c34c63dfec3de" translate="yes" xml:space="preserve">
          <source>For example, let's say we want to enhance our &lt;code&gt;Article&lt;/code&gt; component to include a &lt;code&gt;title&lt;/code&gt; attribute on the &lt;code&gt;&amp;lt;article&amp;gt;&lt;/code&gt; tag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48ca58aa6ae96689aae6d2be68008572352241f1" translate="yes" xml:space="preserve">
          <source>For example, let's say we want to focus an &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; in a form as soon as the form is rendered. The web API for focusing an element is:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b918b0fae6b1144420a9245b2ef0992ff616f66b" translate="yes" xml:space="preserve">
          <source>For example, let's say you want to create an &lt;code&gt;&amp;lt;audio&amp;gt;&lt;/code&gt; element, but pass it a blob as its &lt;a href=&quot;https://www.w3.org/TR/html52/semantics-embedded-content.html#dom-htmlmediaelement-srcobject&quot;&gt;&lt;code&gt;srcObject&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3c47507dd4f2c091a9b598432a6dce2f5318193" translate="yes" xml:space="preserve">
          <source>For example, let's say you would like the ability to add a few numbers together, without needing to define a computed property everywhere you would like to do so.</source>
          <target state="translated">Por ejemplo,digamos que le gustaría tener la posibilidad de sumar unos cuantos números,sin necesidad de definir una propiedad computarizada en todos los lugares donde le gustaría hacerlo.</target>
        </trans-unit>
        <trans-unit id="5404e506f85f30a0212f298d5150286a116a5c55" translate="yes" xml:space="preserve">
          <source>For example, perhaps you have some custom CSS animations trigger when the component is rendered and you want to handle some cleanup when it ends:</source>
          <target state="translated">Por ejemplo,tal vez tengas algunas animaciones CSS personalizadas que se activan cuando se renderiza el componente y quieras encargarte de la limpieza cuando termine:</target>
        </trans-unit>
        <trans-unit id="ce1f02adead333eee688197f6f9df9989d3a960c" translate="yes" xml:space="preserve">
          <source>For example, say we want to move account deletion from the &lt;code&gt;UserProfile&lt;/code&gt; component to its parent &lt;code&gt;SystemPreferencesEditor&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="055eb926cb59cd107962bfdf2f176909570b3021" translate="yes" xml:space="preserve">
          <source>For example, say we want to move account deletion from the &lt;code&gt;user-profile&lt;/code&gt; component to its parent &lt;code&gt;system-preferences-editor&lt;/code&gt;.</source>
          <target state="translated">Por ejemplo, digamos que queremos mover la eliminaci&amp;oacute;n de la cuenta del componente de &lt;code&gt;user-profile&lt;/code&gt; a su &lt;code&gt;system-preferences-editor&lt;/code&gt; principal .</target>
        </trans-unit>
        <trans-unit id="d3aa5fb3b9e2e47d7403cf706a058c910c7facad" translate="yes" xml:space="preserve">
          <source>For example, take this router:</source>
          <target state="translated">Por ejemplo,toma este router:</target>
        </trans-unit>
        <trans-unit id="1e0b93f74e0becd7dfdaf8fcb009fe5b8980d6e1" translate="yes" xml:space="preserve">
          <source>For example, the &lt;code&gt;aria-labelledby&lt;/code&gt; attribute may be useful if you have a search input. The search button can serve as the label for the input element:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="111f5abdbac75b149d5dadbc46189eb08bac975f" translate="yes" xml:space="preserve">
          <source>For example, the example in the previous section is getting a bit long. We can &lt;em&gt;extract&lt;/em&gt; the snippet for rendering the user's name and profile picture into its own component:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dd2552612d116371909ab658c83d3703fce53b3" translate="yes" xml:space="preserve">
          <source>For example, the first time your application asks the store for a &lt;code&gt;person&lt;/code&gt; record with an ID of &lt;code&gt;1&lt;/code&gt;, it will fetch that information from your server.</source>
          <target state="translated">Por ejemplo, la primera vez que su aplicaci&amp;oacute;n le pide a la tienda un registro de &lt;code&gt;person&lt;/code&gt; a con un ID de &lt;code&gt;1&lt;/code&gt; , obtendr&amp;aacute; esa informaci&amp;oacute;n de su servidor.</target>
        </trans-unit>
        <trans-unit id="ec4787348e430964fae6265ba02c5cf7488e71cc" translate="yes" xml:space="preserve">
          <source>For example, the following template mounts the &lt;code&gt;ember-chat&lt;/code&gt; engine:</source>
          <target state="translated">Por ejemplo, la siguiente plantilla monta el motor de &lt;code&gt;ember-chat&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="c6d03a91e81318969094daca7d34b6bd64d9a2ee" translate="yes" xml:space="preserve">
          <source>For example, these two usages are equivalent:</source>
          <target state="translated">Por ejemplo,estos dos usos son equivalentes:</target>
        </trans-unit>
        <trans-unit id="b55d96c8de865779927bc570b7a3c5b4fae0dae0" translate="yes" xml:space="preserve">
          <source>For example, this &lt;code&gt;application.hbs&lt;/code&gt; template will render a first and last name:</source>
          <target state="translated">Por ejemplo, esta plantilla &lt;code&gt;application.hbs&lt;/code&gt; representar&amp;aacute; un nombre y apellido:</target>
        </trans-unit>
        <trans-unit id="20aa59d0e915ae5dd07c0d9955c52ed849e682e9" translate="yes" xml:space="preserve">
          <source>For example, this allows you to render a miniture demo of your application into a specific area on your marketing website:</source>
          <target state="translated">Por ejemplo,esto le permite hacer una demostración de su aplicación en un área específica de su sitio web de marketing:</target>
        </trans-unit>
        <trans-unit id="fce9ee69404eba5f232771b92aea425c5e7bda19" translate="yes" xml:space="preserve">
          <source>For example, this component dynamically looks up a service based on the &lt;code&gt;audioType&lt;/code&gt; passed as an argument:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d83bd82561c502ee0f4b3542e5c5cbaf9687e61" translate="yes" xml:space="preserve">
          <source>For example, this component dynamically looks up a service based on the &lt;code&gt;audioType&lt;/code&gt; passed as an attribute:</source>
          <target state="translated">Por ejemplo, este componente busca din&amp;aacute;micamente un servicio basado en el &lt;code&gt;audioType&lt;/code&gt; pasado como atributo:</target>
        </trans-unit>
        <trans-unit id="605eb7e4a825bdf1d4cbe53bb187bb6b230bfa42" translate="yes" xml:space="preserve">
          <source>For example, this component plays songs with different audio services based on a song's &lt;code&gt;audioType&lt;/code&gt;.</source>
          <target state="translated">Por ejemplo, este componente toca canciones con diferentes servicios de audio basado en una canci&amp;oacute;n de &lt;code&gt;audioType&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8eaafb79932d377872257d19be825835e78a804c" translate="yes" xml:space="preserve">
          <source>For example, this component will rerender when the &lt;code&gt;currentUser&lt;/code&gt; on a session service changes:</source>
          <target state="translated">Por ejemplo, este componente se volver&amp;aacute; a procesar cuando &lt;code&gt;currentUser&lt;/code&gt; el usuario actual en un servicio de sesi&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="90a7142ebded867aecac1c6cd5d3b74f09343bf1" translate="yes" xml:space="preserve">
          <source>For example, this template conditionally shows properties on &lt;code&gt;person&lt;/code&gt; only if that it is present:</source>
          <target state="translated">Por ejemplo, esta plantilla muestra condicionalmente las propiedades de la &lt;code&gt;person&lt;/code&gt; a solo si est&amp;aacute; presente:</target>
        </trans-unit>
        <trans-unit id="f018cc53fcc23c3d307fcab82307e69edf7b58e9" translate="yes" xml:space="preserve">
          <source>For example, this template iterates an array named &lt;code&gt;people&lt;/code&gt; that contains objects. Each item in the array is provided as the block param &lt;code&gt;person&lt;/code&gt;.</source>
          <target state="translated">Por ejemplo, esta plantilla itera una matriz denominada &lt;code&gt;people&lt;/code&gt; que contiene objetos. Cada elemento de la matriz se proporciona como &lt;code&gt;person&lt;/code&gt; a de par&amp;aacute;metro de bloque .</target>
        </trans-unit>
        <trans-unit id="d105de0c23fe5232392e5213bdaf95b84dff874f" translate="yes" xml:space="preserve">
          <source>For example, to notify google analytics when the route changes, you could use this hook. (Note: requires also including GA scripts, etc.)</source>
          <target state="translated">Por ejemplo,para notificar a Google Analytics cuando la ruta cambia,podrías usar este gancho.(Nota:requiere también incluir scripts GA,etc.)</target>
        </trans-unit>
        <trans-unit id="e53fdd1e5fa921a7decdf09ca3b2c5d4bc78f174" translate="yes" xml:space="preserve">
          <source>For example, transitioning to the &lt;code&gt;photo&lt;/code&gt; route this way won't cause the &lt;code&gt;model&lt;/code&gt; hook to be executed (because &lt;code&gt;link-to&lt;/code&gt; was passed a model):</source>
          <target state="translated">Por ejemplo, hacer la transici&amp;oacute;n a la ruta de la &lt;code&gt;photo&lt;/code&gt; esta manera no har&amp;aacute; que se ejecute el gancho del &lt;code&gt;model&lt;/code&gt; o (porque se pas&amp;oacute; un &lt;code&gt;link-to&lt;/code&gt; un modelo):</target>
        </trans-unit>
        <trans-unit id="990c07eb16ce9b36a491b2e854ecc3b9aa105d86" translate="yes" xml:space="preserve">
          <source>For example, we could search for all &lt;code&gt;person&lt;/code&gt; models who have the name of &lt;code&gt;Peter&lt;/code&gt;:</source>
          <target state="translated">Por ejemplo, podr&amp;iacute;amos buscar todos los modelos de &lt;code&gt;person&lt;/code&gt; a que tengan el nombre de &lt;code&gt;Peter&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="d47f3090b8178aff0771982fc7f5d315290733fb" translate="yes" xml:space="preserve">
          <source>For example, when a Handlebars template uses the &lt;code&gt;{{action}}&lt;/code&gt; helper, it will attempt to send the action to the view's controller's &lt;code&gt;target&lt;/code&gt;.</source>
          <target state="translated">Por ejemplo, cuando una plantilla Manillar utiliza el &lt;code&gt;{{action}}&lt;/code&gt; ayudante, se intentar&amp;aacute; enviar a la acci&amp;oacute;n del controlador de la vista &lt;code&gt;target&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="29528d3799c267facb13bd22a0d3c368a5aece31" translate="yes" xml:space="preserve">
          <source>For example, when you hit tab on a page or click on a form field, a blue border usually appears around the element. This kind of behavior is part of focus. Developers can use JavaScript to control the focus in their apps, enabling keyboard navigation and usability by screen readers. For example, if there is a button that launches a modal with interactive elements in it, that button's click handler needs to contain code that brings focus to the new content.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5843613115c1e4d767226c816dddc69a6f938075" translate="yes" xml:space="preserve">
          <source>For example, you could implement the action &lt;code&gt;hello&lt;/code&gt; for the &lt;code&gt;person-profile&lt;/code&gt; component:</source>
          <target state="translated">Por ejemplo, podr&amp;iacute;a implementar la acci&amp;oacute;n &lt;code&gt;hello&lt;/code&gt; para el componente de &lt;code&gt;person-profile&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="d6888cfa6f75bf808b447c4e5833322abda82e8b" translate="yes" xml:space="preserve">
          <source>For example, your server may expect dasherized root objects:</source>
          <target state="translated">Por ejemplo,su servidor puede esperar que los objetos de la raíz se desplacen:</target>
        </trans-unit>
        <trans-unit id="3b9e84a2093cc32805d40970c4d9572340f1ea90" translate="yes" xml:space="preserve">
          <source>For example, your server may expect underscored root objects.</source>
          <target state="translated">Por ejemplo,su servidor puede esperar objetos raíz subrayados.</target>
        </trans-unit>
        <trans-unit id="8ee1c2eb6b481f0f8bab8a68aca74861776344fc" translate="yes" xml:space="preserve">
          <source>For example, your server may send a model name that does not correspond with the name of the model in your app. Let's take a look at an example model, and an example payload:</source>
          <target state="translated">Por ejemplo,su servidor puede enviar un nombre de modelo que no se corresponda con el nombre del modelo en su aplicación.Echemos un vistazo a un modelo de ejemplo,y un ejemplo de carga útil:</target>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="67bd6e289a5531e2d71f9f33d1cd06ac5dc9f6fd" translate="yes" xml:space="preserve">
          <source>For example: &lt;code&gt;{{#with foo.bar as |foo|}}&lt;/code&gt; is not supported because it attempts to alias using the first part of the property path, &lt;code&gt;foo&lt;/code&gt;. Instead, use &lt;code&gt;{{#with foo.bar as |baz|}}&lt;/code&gt;.</source>
          <target state="translated">Por ejemplo: &lt;code&gt;{{#with foo.bar as |foo|}}&lt;/code&gt; no es compatible porque intenta crear un alias utilizando la primera parte de la ruta de la propiedad, &lt;code&gt;foo&lt;/code&gt; . En su lugar, use &lt;code&gt;{{#with foo.bar as |baz|}}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6363e2abeb661ad8952fc15c2dce40c1ff2e0f73" translate="yes" xml:space="preserve">
          <source>For existing Ember apps, a developer may edit the &lt;code&gt;index.html&lt;/code&gt; file or leverage &lt;a href=&quot;https://github.com/ember-intl/ember-intl&quot;&gt;ember-intl&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f25414b1e364353a76b7850db08875124cea32d1" translate="yes" xml:space="preserve">
          <source>For existing Ember users, Native Classes might seem a bit strange, but for developers coming from general JavaScript backgrounds or other frameworks, it might be hard for them to imagine Ember any other way.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7914a48d80fe564885d6449a553ff84fa77cd6ea" translate="yes" xml:space="preserve">
          <source>For instance, consider two components that display a user's avatar. One is for a recipient and the other for a sender.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce4ee78bb710bdadd94e05dda2fc192d5b2eef86" translate="yes" xml:space="preserve">
          <source>For instance, if a deprecation was introduced in 3.13, and the app specifies 3.13 as its minimum version compatibility, any deprecations introduced before or during 3.13 would be stripped away.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f852011db8af7ac839f8c76005df7ed1913eb792" translate="yes" xml:space="preserve">
          <source>For instance, if you wanted to create a tooltip icon that had a standard icon and class, you could do it like so:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9b33f19821b81c7ec5b3ee6f59d57b385ad8589" translate="yes" xml:space="preserve">
          <source>For instance, in a messaging app, we could have a &lt;code&gt;&amp;lt;Message&amp;gt;&lt;/code&gt; component that we repeat for each message that the users have sent to each other.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dd243765cfdbc245638899e14678af2191ab6f3" translate="yes" xml:space="preserve">
          <source>For instance, let's take a look at a generic message component from a messaging app.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f9d9d958c9f4b8da946d338df12ff5f21c104ce" translate="yes" xml:space="preserve">
          <source>For instance, your API may expect resources to be keyed by underscored type in the payload:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3b267c64e45fa079a27a5349659d2f287f095d2" translate="yes" xml:space="preserve">
          <source>For many Octane features, there are codemods available as well, so be sure to read our &lt;a href=&quot;../../upgrading&quot;&gt;Upgrade Strategy Guide&lt;/a&gt; before making changes like these by hand.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51bea2df7fefb31358bb16ba97f9fc2ba6227ac7" translate="yes" xml:space="preserve">
          <source>For many of the optional features, the thing they affect the most is what you see in your newly-created files, not within your existing code. Your app will keep working, even if you haven't refactored code to use Octane's features yet. Making new files in the Octane style is good place to start, but eventually you should refactor existing code so that your app follows one main programming model, not a mixture of Octane and Classic. Following a refactoring plan will help with onboarding new developers, and minimize flipping back and forth between different versions of the Ember Guides.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6dd39d5bdf936f5049223bd83077f74e9d365d0" translate="yes" xml:space="preserve">
          <source>For more about adding computed properties to your classes, see &lt;a href=&quot;https://guides.emberjs.com/object-model/computed-properties&quot;&gt;Computed Properties&lt;/a&gt;.</source>
          <target state="translated">Para obtener m&amp;aacute;s informaci&amp;oacute;n sobre c&amp;oacute;mo agregar propiedades calculadas a sus clases, consulte &lt;a href=&quot;https://guides.emberjs.com/object-model/computed-properties&quot;&gt;Propiedades&lt;/a&gt; calculadas .</target>
        </trans-unit>
        <trans-unit id="fc4637ca2142dd49c0ab6c1eb1068c89db2a1a67" translate="yes" xml:space="preserve">
          <source>For more detailed documentation and examples please see &lt;a href=&quot;https://emberjs.com/guides/routing/defining-your-routes/&quot;&gt;the guides&lt;/a&gt;.</source>
          <target state="translated">Para obtener documentaci&amp;oacute;n y ejemplos m&amp;aacute;s detallados, consulte &lt;a href=&quot;https://emberjs.com/guides/routing/defining-your-routes/&quot;&gt;las gu&amp;iacute;as&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="41ef6dfe1ee415562c8749cd0098a147ab52d435" translate="yes" xml:space="preserve">
          <source>For more guidance on what to do with deprecations, visit &lt;a href=&quot;../configuring-ember/handling-deprecations&quot;&gt;Handling Deprecations&lt;/a&gt;, check out the Ember Inspector &lt;a href=&quot;release/ember-inspector/deprecations&quot;&gt;tools for deprecations&lt;/a&gt;, or read about the specifics in the &lt;a href=&quot;https://deprecations.emberjs.com/&quot;&gt;Deprecations Guides&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5295af1ae2a533eb2fdc72de0ac7bd0335e79c99" translate="yes" xml:space="preserve">
          <source>For more guidance on what to do with deprecations, visit &lt;a href=&quot;https://guides.emberjs.com/configuring-ember/handling-deprecations/&quot;&gt;Handling Deprecations&lt;/a&gt;, check out the Ember Inspector &lt;a href=&quot;release/ember-inspector/deprecations&quot;&gt;tools for deprecations&lt;/a&gt;, or read about the specifics in the &lt;a href=&quot;https://deprecations.emberjs.com/&quot;&gt;Deprecations Guides&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29338faef17451bff40b98b69efc15788fd2eb88" translate="yes" xml:space="preserve">
          <source>For more hooks to customize the serializer with, see the &lt;a href=&quot;http://emberjs.com/api/data/classes/DS.JSONAPISerializer.html#index&quot;&gt;Ember Data serializer API documentation&lt;/a&gt;.</source>
          <target state="translated">Para obtener m&amp;aacute;s ganchos para personalizar el serializador, consulte la &lt;a href=&quot;http://emberjs.com/api/data/classes/DS.JSONAPISerializer.html#index&quot;&gt;documentaci&amp;oacute;n de la API del serializador de Ember Data&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6ccc120a920e4763252a126c205c7d754a7bb32f" translate="yes" xml:space="preserve">
          <source>For more hooks to customize the serializer with, see the &lt;a href=&quot;https://api.emberjs.com/ember-data/release/classes/JSONAPISerializer&quot;&gt;Ember Data serializer API documentation&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bad2c357e0daf0ce5fdcc9aea0887fc6339d0934" translate="yes" xml:space="preserve">
          <source>For more information on how to use query parameters see the &lt;a href=&quot;https://guides.emberjs.com/routing/query-params/&quot;&gt;query parameters&lt;/a&gt; section in Routing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7437275ef3927077a50728b595e06c2301a6c51" translate="yes" xml:space="preserve">
          <source>For more information see the &lt;a href=&quot;https://api.emberjs.com/ember/release/classes/PromiseProxyMixin&quot;&gt;Ember.PromiseProxyMixin documentation&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4befdb1069467e996d91aa6926e1f7b68c66d78" translate="yes" xml:space="preserve">
          <source>For more information see the &lt;a href=&quot;https://api.emberjs.com/ember/release/classes/PromiseProxyMixin.html&quot;&gt;Ember.PromiseProxyMixin documentation&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7282de866e5f853cd3e8ffbabd363e03c2f925f8" translate="yes" xml:space="preserve">
          <source>For more information see the &lt;a href=&quot;https://emberjs.com/api/classes/Ember.PromiseProxyMixin.html&quot;&gt;Ember.PromiseProxyMixin documentation&lt;/a&gt;.</source>
          <target state="translated">Para obtener m&amp;aacute;s informaci&amp;oacute;n, consulte la &lt;a href=&quot;https://emberjs.com/api/classes/Ember.PromiseProxyMixin.html&quot;&gt;documentaci&amp;oacute;n de Ember.PromiseProxyMixin&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d5233e193dd0aa315bd18119eb9b8df8b9ea4ceb" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;https://github.com/emberjs/rfcs/blob/master/text/0278-template-only-components.md&quot;&gt;RFC #278&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9422e0347fb394b0e3012b6a1b23512245e80635" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;https://github.com/emberjs/rfcs/blob/master/text/0280-remove-application-wrapper.md&quot;&gt;RFC #280&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee1dc312e7b0bcbf5370d1ad29be635c9b558b3d" translate="yes" xml:space="preserve">
          <source>For most addons and most features simple version detection should be enough. Using the provided version compatibility helpers from &lt;a href=&quot;https://github.com/pzuraq/ember-compatibility-helpers&quot;&gt;ember-compatibility-helpers&lt;/a&gt; the following can be done:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40732fcb4234a5619ce081b7798a0214549a58ea" translate="yes" xml:space="preserve">
          <source>For nested routes, like:</source>
          <target state="translated">Para las rutas anidadas,como:</target>
        </trans-unit>
        <trans-unit id="9eeb17fc50ad17784945236a03c3efdf26f73b49" translate="yes" xml:space="preserve">
          <source>For one-off events specific to particular instance of a component, it is possible to pass actions to the component's element using angle bracket invocation syntax.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b44bf8db76b49951c7eaac5a3fc9525e1133bec4" translate="yes" xml:space="preserve">
          <source>For our second test, we'll check that typing text in the filter will actually appropriately call the filter action and update the listings shown.</source>
          <target state="translated">Para nuestra segunda prueba,comprobaremos que tecleando el texto en el filtro realmente se llama apropiadamente la acción de filtrado y se actualizan los listados mostrados.</target>
        </trans-unit>
        <trans-unit id="52f2c08737c2821eeea5248eeeedc5d7eacaa951" translate="yes" xml:space="preserve">
          <source>For our service unit test, we'll want to verify that locations that have been previously loaded are fetched from cache, while new locations are created using the utility. We will isolate our tests from actually calling Google Maps by stubbing our map utility. On line 6 of &lt;code&gt;maps-test.js&lt;/code&gt; below we create an Ember object to simulate the behavior of the utility, but instead of creating a google map, we return an empty JavaScript object.</source>
          <target state="translated">Para nuestra prueba de unidad de servicio, queremos verificar que las ubicaciones que se hayan cargado previamente se obtengan de la cach&amp;eacute;, mientras que las nuevas ubicaciones se crean utilizando la utilidad. Aislaremos nuestras pruebas de las llamadas a Google Maps mediante el c&amp;oacute;digo de nuestra utilidad de mapa. En la l&amp;iacute;nea 6 de &lt;code&gt;maps-test.js&lt;/code&gt; a continuaci&amp;oacute;n, creamos un objeto Ember para simular el comportamiento de la utilidad, pero en lugar de crear un mapa de Google, devolvemos un objeto JavaScript vac&amp;iacute;o.</target>
        </trans-unit>
        <trans-unit id="bcf714fdce67954b18fdd874853ff99248025a2a" translate="yes" xml:space="preserve">
          <source>For primitive values (which are immutable in JavaScript), the passed object is simply returned.</source>
          <target state="translated">Para los valores primitivos (que son inmutables en JavaScript),el objeto pasado simplemente se devuelve.</target>
        </trans-unit>
        <trans-unit id="238bd7c4be84902608f021126f24b30d5f4547e2" translate="yes" xml:space="preserve">
          <source>For relationships you probably only want to test that the relationship declarations are setup properly.</source>
          <target state="translated">Para las relaciones,probablemente sólo quieras comprobar que las declaraciones de la relación están configuradas correctamente.</target>
        </trans-unit>
        <trans-unit id="5d84fd958637aa021fe65126c1c34b36d7f4d0f2" translate="yes" xml:space="preserve">
          <source>For requests that are only expected to return 0 or more records (e.g. &lt;code&gt;store.findAll('post')&lt;/code&gt; or &lt;code&gt;store.query('post', { filter: { status: 'draft' } })&lt;/code&gt;) the &lt;code&gt;JSONSerializer&lt;/code&gt; expects the response to be a JSON array that looks similar to this:</source>
          <target state="translated">Para las solicitudes que solo se espera que devuelvan 0 o m&amp;aacute;s registros (por ejemplo, &lt;code&gt;store.findAll('post')&lt;/code&gt; o &lt;code&gt;store.query('post', { filter: { status: 'draft' } })&lt;/code&gt; ) el &lt;code&gt;JSONSerializer&lt;/code&gt; espera que la respuesta ser una matriz JSON que se parezca a esto:</target>
        </trans-unit>
        <trans-unit id="e41c7713b198e325a57d5d23ef3c948b33c7b8c9" translate="yes" xml:space="preserve">
          <source>For requests that are only expected to return 1 record (e.g. &lt;code&gt;store.findRecord('post', 1)&lt;/code&gt;) the &lt;code&gt;JSONSerializer&lt;/code&gt; expects the response to be a JSON object that looks similar to this:</source>
          <target state="translated">Para las solicitudes que solo se espera que devuelvan 1 registro (por ejemplo, &lt;code&gt;store.findRecord('post', 1)&lt;/code&gt; ), &lt;code&gt;JSONSerializer&lt;/code&gt; espera que la respuesta sea un objeto JSON que se parezca a esto:</target>
        </trans-unit>
        <trans-unit id="6f44c4c78e3ccae3e3feba77d0d41b2ad2d7ffb4" translate="yes" xml:space="preserve">
          <source>For symmetry, a record can be deleted via the store.</source>
          <target state="translated">Para la simetría,un registro puede ser borrado a través de la tienda.</target>
        </trans-unit>
        <trans-unit id="1dbdae64a2126571b205dad151b3be5b622ef748" translate="yes" xml:space="preserve">
          <source>For symmetry, a record can be unloaded via the store. This will cause the record to be destroyed and freed up for garbage collection.</source>
          <target state="translated">Para la simetría,se puede descargar un disco a través de la tienda.Esto hará que el disco sea destruido y liberado para la recogida de basura.</target>
        </trans-unit>
        <trans-unit id="e8698c13171823902968377bdef2ca89e548f138" translate="yes" xml:space="preserve">
          <source>For the &lt;code&gt;post&lt;/code&gt; route, a controller named &lt;code&gt;App.PostController&lt;/code&gt; would be used if it is defined. If it is not defined, a basic &lt;code&gt;Ember.Controller&lt;/code&gt; instance would be used.</source>
          <target state="translated">Para la ruta de &lt;code&gt;post&lt;/code&gt; , se &lt;code&gt;App.PostController&lt;/code&gt; un controlador llamado App.PostController si est&amp;aacute; definido. Si no est&amp;aacute; definido, se &lt;code&gt;Ember.Controller&lt;/code&gt; instancia b&amp;aacute;sica de Ember.Controller .</target>
        </trans-unit>
        <trans-unit id="ab03ec3bece1d637423015b51ead16b564c68acd" translate="yes" xml:space="preserve">
          <source>For the following code:</source>
          <target state="translated">Para el siguiente código:</target>
        </trans-unit>
        <trans-unit id="44305dcf5fd8a54360ff01562d1bda7600fe0365" translate="yes" xml:space="preserve">
          <source>For the following example, the template receives a &lt;code&gt;post&lt;/code&gt; object with &lt;code&gt;content&lt;/code&gt; and &lt;code&gt;title&lt;/code&gt; properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f6b8ed8bb2be7c4e922216782b09df7dfef84fd" translate="yes" xml:space="preserve">
          <source>For the following template:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af7930cb4a7d69cd8db14ee6e8b5a7f77cf970bb" translate="yes" xml:space="preserve">
          <source>For the most part, you should be able to build Ember applications without directly manipulating the DOM. Before considering directly accessing the DOM, it's always best to first consider whether there's an Ember-native way to accomplish your goal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53b1317ee0dff26c47faa19e99ec8ae432650704" translate="yes" xml:space="preserve">
          <source>For the remainder of this page, we'll give you an introduction to testing in Ember and get you set up to add tests as we implement pieces of our app. On subsequent tutorial pages, the final sections of each page will be devoted to adding a test for the feature you just implemented. These sections aren't required for a working application and you may move on with the tutorial without writing them.</source>
          <target state="translated">Para el resto de esta página,le daremos una introducción a las pruebas en Ember y le prepararemos para añadir pruebas a medida que implementemos las piezas de nuestra aplicación.En las siguientes páginas del tutorial,las secciones finales de cada página se dedicarán a añadir una prueba para la función que acaba de implementar.Estas secciones no son necesarias para una aplicación en funcionamiento y puedes seguir con el tutorial sin escribirlas.</target>
        </trans-unit>
        <trans-unit id="90d86d60539134a54d0f678225fc9d2a578113d6" translate="yes" xml:space="preserve">
          <source>For the test we'll pass the component a fake object that has all the properties that our rental model has. We'll give the variable the name &lt;code&gt;rental&lt;/code&gt;, and in each test we'll set &lt;code&gt;rental&lt;/code&gt; to our local scope, represented by the &lt;code&gt;this&lt;/code&gt; object. The render template can access values in local scope.</source>
          <target state="translated">Para la prueba pasaremos al componente un objeto falso que tiene todas las propiedades que tiene nuestro modelo de alquiler. Le daremos a la variable el nombre &lt;code&gt;rental&lt;/code&gt; , y en cada prueba configuraremos &lt;code&gt;rental&lt;/code&gt; en nuestro &amp;aacute;mbito local, representado por el objeto &lt;code&gt;this&lt;/code&gt; . La plantilla de representaci&amp;oacute;n puede acceder a valores en el &amp;aacute;mbito local.</target>
        </trans-unit>
        <trans-unit id="11208c35bf587ec4a12ccbc8ab430fb048e0e38b" translate="yes" xml:space="preserve">
          <source>For the truly ambitious developer, setting &lt;code&gt;ENV.EmberENV.ENABLE_ALL_FEATURES&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; will enable all experimental features.</source>
          <target state="translated">Para el desarrollador verdaderamente ambicioso, configurar &lt;code&gt;ENV.EmberENV.ENABLE_ALL_FEATURES&lt;/code&gt; en &lt;code&gt;true&lt;/code&gt; habilitar&amp;aacute; todas las funciones experimentales.</target>
        </trans-unit>
        <trans-unit id="7d414cc56d356af2b222b476ee0fb256f69c5e10" translate="yes" xml:space="preserve">
          <source>For this action to work, we need to replace our Mirage &lt;code&gt;config.js&lt;/code&gt; file with the following, so that it can respond to our queries. Instead of simply returning the list of rentals, our Mirage HTTP GET handler for &lt;code&gt;rentals&lt;/code&gt; will return rentals matching the string provided in the URL query parameter called &lt;code&gt;city&lt;/code&gt;.</source>
          <target state="translated">Para que esta acci&amp;oacute;n funcione, necesitamos reemplazar nuestro archivo &lt;code&gt;config.js&lt;/code&gt; de Mirage con lo siguiente, para que pueda responder a nuestras consultas. En lugar de simplemente devolver la lista de alquileres, nuestro controlador Mirage HTTP GET para &lt;code&gt;rentals&lt;/code&gt; devolver&amp;aacute; alquileres que coincidan con la cadena proporcionada en el par&amp;aacute;metro de consulta de URL llamado &lt;code&gt;city&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="805d2264ad28af999150c7ca8f54eca24ffa5d31" translate="yes" xml:space="preserve">
          <source>For this model:</source>
          <target state="translated">Para este modelo:</target>
        </trans-unit>
        <trans-unit id="a24a3fba4a828376a45b40eb1ccd192e56b6e2a5" translate="yes" xml:space="preserve">
          <source>ForbiddenError</source>
          <target state="translated">ForbiddenError</target>
        </trans-unit>
        <trans-unit id="e121592f2766d340c24b47ea2f5774c152f53cca" translate="yes" xml:space="preserve">
          <source>Form events:</source>
          <target state="translated">Formar eventos:</target>
        </trans-unit>
        <trans-unit id="7cdc3deed2a7f6cc9c38d5a1cab4a58fed801b5f" translate="yes" xml:space="preserve">
          <source>Formats the passed string, but first looks up the string in the localized strings hash. This is a convenient way to localize text. See &lt;code&gt;Ember.String.fmt()&lt;/code&gt; for more information on formatting.</source>
          <target state="translated">Formatea la cadena pasada, pero primero busca la cadena en el hash de cadenas localizado. Esta es una forma conveniente de localizar texto. Consulte &lt;code&gt;Ember.String.fmt()&lt;/code&gt; para obtener m&amp;aacute;s informaci&amp;oacute;n sobre el formateo.</target>
        </trans-unit>
        <trans-unit id="29aee65fd752807a4efafa236faf97668e75caee" translate="yes" xml:space="preserve">
          <source>Formatting Component Attributes with &lt;code&gt;didReceiveAttrs&lt;/code&gt;</source>
          <target state="translated">Formateo de atributos de componentes con &lt;code&gt;didReceiveAttrs&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d747cf39d36a21f5bf79d91fa7a95f35c01a1a50" translate="yes" xml:space="preserve">
          <source>Fortunately, Ember provides a way for projects to deal with deprecations in an organized and efficient manner.</source>
          <target state="translated">Afortunadamente,Ember proporciona una forma para que los proyectos se ocupen de las deprecaciones de una manera organizada y eficiente.</target>
        </trans-unit>
        <trans-unit id="5cf883f899d7818321b020e5391d2ce7ac485c77" translate="yes" xml:space="preserve">
          <source>Forwards to the internal &lt;code&gt;promise&lt;/code&gt; property which you can use in situations where you want to pass around a thennable, but not the Transition itself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="445366cfc965ea1eefc0253eafebbc45d43ad9bd" translate="yes" xml:space="preserve">
          <source>Found item or `undefined`.</source>
          <target state="translated">Un ítem encontrado o &quot;indefinido&quot;.</target>
        </trans-unit>
        <trans-unit id="892149376900bccc1f23c1b76c83f5909b4baafa" translate="yes" xml:space="preserve">
          <source>Found item or undefined</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1845de0d37b6bb99f3f645167ac00024bf5cd983" translate="yes" xml:space="preserve">
          <source>Framework objects in an Ember application (components, services, routes, etc.) are created via a factory and dependency injection system. Each of these objects is the responsibility of an &quot;owner&quot;, which handled its instantiation and manages its lifetime.</source>
          <target state="translated">Los objetos marco de una aplicación Ember (componentes,servicios,rutas,etc.)se crean a través de un sistema de inyección de fábrica y de dependencia.Cada uno de estos objetos es responsabilidad de un &quot;propietario&quot;,que se encarga de su instanciación y gestiona su vida útil.</target>
        </trans-unit>
        <trans-unit id="28e49ef141f281830f6ce959ad0f2b4d73e1cade" translate="yes" xml:space="preserve">
          <source>Frameworks (or apps built on those frameworks) don't need to write lots of custom code to add support for a new database; as long as that database supports SQL, adding support for it is relatively easy.</source>
          <target state="translated">Los marcos (o aplicaciones construidas sobre esos marcos)no necesitan escribir mucho código personalizado para añadir soporte para una nueva base de datos;siempre que esa base de datos soporte SQL,añadirle soporte es relativamente fácil.</target>
        </trans-unit>
        <trans-unit id="f97e4329a79b80781e88fc0b7075fb35ec5f6657" translate="yes" xml:space="preserve">
          <source>From a controller, use the &lt;a href=&quot;https://api.emberjs.com/ember/release/classes/Controller/methods#transitionToRoute&quot;&gt;&lt;code&gt;transitionToRoute()&lt;/code&gt;&lt;/a&gt; method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47fe021ef5948d7c02a3c81390a2d1e7cbcfa2a6" translate="yes" xml:space="preserve">
          <source>From a route, use the &lt;a href=&quot;https://api.emberjs.com/ember/release/classes/Route/methods#transitionTo&quot;&gt;&lt;code&gt;transitionTo()&lt;/code&gt;&lt;/a&gt; method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="582654d9cea6e300f6d181523054e7cf172f898b" translate="yes" xml:space="preserve">
          <source>From a template, use &lt;a href=&quot;https://api.emberjs.com/ember/release/classes/Ember.Templates.components/methods#LinkTo&quot;&gt;&lt;code&gt;&amp;lt;LinkTo /&amp;gt;&lt;/code&gt;&lt;/a&gt; as mentioned above</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd48478b2ebd428b5b178d07e8a905331e2f6884" translate="yes" xml:space="preserve">
          <source>From anywhere else in your application, such as a component, inject the &lt;a href=&quot;https://api.emberjs.com/ember/release/classes/RouterService&quot;&gt;Router Service&lt;/a&gt; and use the &lt;a href=&quot;https://api.emberjs.com/ember/release/classes/RouterService/methods#transitionTo&quot;&gt;&lt;code&gt;transitionTo()&lt;/code&gt;&lt;/a&gt; method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f93277273c2d468b90135b3055cba26e77e16d75" translate="yes" xml:space="preserve">
          <source>From here you can move on to the &lt;a href=&quot;../model-hook&quot;&gt;next page&lt;/a&gt; or dive into testing the new functionality we just added.</source>
          <target state="translated">Desde aqu&amp;iacute;, puede pasar a la &lt;a href=&quot;../model-hook&quot;&gt;p&amp;aacute;gina siguiente&lt;/a&gt; o sumergirse en las pruebas de la nueva funcionalidad que acabamos de agregar.</target>
        </trans-unit>
        <trans-unit id="12e62a21222cfb2cd2678c0f1b35ca66a58cbeac" translate="yes" xml:space="preserve">
          <source>From the value of &lt;code&gt;count&lt;/code&gt;, we see that &lt;code&gt;aspectRatio&lt;/code&gt; was calculated 3 times.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b821dabcc5bdf96323e1a7cc746c308389497381" translate="yes" xml:space="preserve">
          <source>From the value of &lt;code&gt;count&lt;/code&gt;, we see that, this time, &lt;code&gt;aspectRatio&lt;/code&gt; was calculated only twice.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1e410ad1472b42cb42cc98962428637290b6706" translate="yes" xml:space="preserve">
          <source>Function</source>
          <target state="translated">Function</target>
        </trans-unit>
        <trans-unit id="6b50e92fc7aea5426c00478727616aa2732e335b" translate="yes" xml:space="preserve">
          <source>Function Context</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c171828ba33200e5da444a3585c4abe04f275224" translate="yes" xml:space="preserve">
          <source>Function.on()</source>
          <target state="translated">Function.on()</target>
        </trans-unit>
        <trans-unit id="2a2015f5befe6d207f02fc8237deb8958521dcca" translate="yes" xml:space="preserve">
          <source>Function?</source>
          <target state="translated">Function?</target>
        </trans-unit>
        <trans-unit id="2b961dea1dc0c60ddf9a2c8e9d090f6f7d082483" translate="yes" xml:space="preserve">
          <source>Functions</source>
          <target state="translated">Functions</target>
        </trans-unit>
        <trans-unit id="7f327caeccd97a403dd1611a7c63975063bda543" translate="yes" xml:space="preserve">
          <source>Function|String</source>
          <target state="translated">Function|String</target>
        </trans-unit>
        <trans-unit id="d30e6731d445385026fb0435212e0f0347140a85" translate="yes" xml:space="preserve">
          <source>Function|undefined</source>
          <target state="translated">Function|undefined</target>
        </trans-unit>
        <trans-unit id="baa570f3e6ae8f1812a881f7231e27d8c648f32a" translate="yes" xml:space="preserve">
          <source>Furthermore, these sticky query param values are remembered/restored according to the model loaded into the route. So, given a &lt;code&gt;team&lt;/code&gt; route with dynamic segment &lt;code&gt;/:team_name&lt;/code&gt; and controller query param &quot;filter&quot;, if you navigate to &lt;code&gt;/badgers&lt;/code&gt; and filter by &lt;code&gt;&quot;rookies&quot;&lt;/code&gt;, then navigate to &lt;code&gt;/bears&lt;/code&gt; and filter by &lt;code&gt;&quot;best&quot;&lt;/code&gt;, and then navigate to &lt;code&gt;/potatoes&lt;/code&gt; and filter by &lt;code&gt;&quot;worst&quot;&lt;/code&gt;, then given the following nav bar links:</source>
          <target state="translated">Adem&amp;aacute;s, estos valores de par&amp;aacute;metros de consulta adhesivos se recuerdan / restauran de acuerdo con el modelo cargado en la ruta. Entonces, dada una ruta de &lt;code&gt;team&lt;/code&gt; con segmento din&amp;aacute;mico &lt;code&gt;/:team_name&lt;/code&gt; y par&amp;aacute;metro de consulta de controlador &quot;filtro&quot;, si navega a &lt;code&gt;/badgers&lt;/code&gt; y filtra por &lt;code&gt;&quot;rookies&quot;&lt;/code&gt; , navegue a &lt;code&gt;/bears&lt;/code&gt; y filtre por &lt;code&gt;&quot;best&quot;&lt;/code&gt; , y luego navegue a &lt;code&gt;/potatoes&lt;/code&gt; y filtrar por &lt;code&gt;&quot;worst&quot;&lt;/code&gt; , luego dados los siguientes enlaces de la barra de navegaci&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="f030bbbd32966cde41037b98a8849c46b76e4bc1" translate="yes" xml:space="preserve">
          <source>GET</source>
          <target state="translated">GET</target>
        </trans-unit>
        <trans-unit id="94eb6c8b6f7cfc6aedf8571508c6bdd1a4df9488" translate="yes" xml:space="preserve">
          <source>General utility classes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f986fdaffda9cf7306775b5287d9b3762661886" translate="yes" xml:space="preserve">
          <source>Generally, &lt;a href=&quot;https://guides.emberjs.com/services/&quot;&gt;Services&lt;/a&gt; are Ember's primary method for sharing state via dependency injection. In most cases, you shouldn't need to learn about how to work with Ember's DI system directly, or how to manually register and setup dependencies. However, there are times when it may be necessary. This guide covers the details of the system, and how to use it when needed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4aac835ea2b6aab97a2559e177a6e622b0c90f2f" translate="yes" xml:space="preserve">
          <source>Generally, you should try to create classes with their tracked properties enumerated and decorated with &lt;code&gt;@tracked&lt;/code&gt;, instead of relying on dynamically created POJOs. In some cases however, if your usage of properties on POJOs is too dynamic, you may not be able to enumerate every single property that could be tracked. There could be a prohibitive number of possible properties, or there could be no way to know them in advance. In this case, it's recommended that you &lt;em&gt;reset&lt;/em&gt; the value wherever it is updated:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="600f5a7d6e66f8bb8c3182789a0bd212bedd8fd4" translate="yes" xml:space="preserve">
          <source>Generate a URL based on the supplied route name and optionally a model. The URL is returned as a string that can be used for any purpose.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33da7677e2d56059c92e30d9b6be9e4b6b73f6c0" translate="yes" xml:space="preserve">
          <source>Generate a URL based on the supplied route name.</source>
          <target state="translated">Generar un URL basado en el nombre de la ruta suministrada.</target>
        </trans-unit>
        <trans-unit id="f09345bf2216d01aba14af93487fbeccd2903c9b" translate="yes" xml:space="preserve">
          <source>Generate a controller for the &lt;code&gt;rentals&lt;/code&gt; route by running the following:</source>
          <target state="translated">Genere un controlador para la ruta de &lt;code&gt;rentals&lt;/code&gt; ejecutando lo siguiente:</target>
        </trans-unit>
        <trans-unit id="c8dce6fb6cede76539314f90bc59a5c80135a499" translate="yes" xml:space="preserve">
          <source>Generate the map component using Ember CLI.</source>
          <target state="translated">Generar el componente del mapa usando Ember CLI.</target>
        </trans-unit>
        <trans-unit id="0aea205a47266be8c495348ad0f9c73741f98201" translate="yes" xml:space="preserve">
          <source>Generating a Nested Detail Route</source>
          <target state="translated">Generando una ruta de detalles anidados</target>
        </trans-unit>
        <trans-unit id="9d43d2f2ee9b4bb4f9bcf0d5b2a41df9def6363a" translate="yes" xml:space="preserve">
          <source>Generating a Nested Index Route</source>
          <target state="translated">Generando una ruta de índice anidado</target>
        </trans-unit>
        <trans-unit id="9760cc894e686d61f7fec03c4e44d1b80af4b48c" translate="yes" xml:space="preserve">
          <source>Generators to help create components, routes, and more.</source>
          <target state="translated">Generadores para ayudar a crear componentes,rutas y más.</target>
        </trans-unit>
        <trans-unit id="70aec302e339fa13f3554c23e3ef7e1931b84ea4" translate="yes" xml:space="preserve">
          <source>Geolocation.</source>
          <target state="translated">Geolocation.</target>
        </trans-unit>
        <trans-unit id="26405aeae26ce9287363b843e9d7c68ace255d6e" translate="yes" xml:space="preserve">
          <source>Get a record by a given type and ID without triggering a fetch.</source>
          <target state="translated">Obtener un registro por un tipo y una identificación determinados sin activar una búsqueda.</target>
        </trans-unit>
        <trans-unit id="93b44ba5398b64d9f08dc1913faba7571d1550c6" translate="yes" xml:space="preserve">
          <source>Get the HTTP method for a request.</source>
          <target state="translated">Obtener el método HTTP para una solicitud.</target>
        </trans-unit>
        <trans-unit id="5003481ec84564c8683a4ad02a9203d02e4eac74" translate="yes" xml:space="preserve">
          <source>Get the URL for a request.</source>
          <target state="translated">Obtener la URL de una solicitud.</target>
        </trans-unit>
        <trans-unit id="c66c083b7e4e67179663e5f016d2e525ccb45253" translate="yes" xml:space="preserve">
          <source>Get the columns for a given model type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="830f1ea06d329a4ac6a3756016f9898516fc9ca9" translate="yes" xml:space="preserve">
          <source>Get the data (body or query params) for a request.</source>
          <target state="translated">Obtener los datos (cuerpo o parámetros de consulta)para una solicitud.</target>
        </trans-unit>
        <trans-unit id="b1e901f6ea92c6f40580f56bfddd989c4ea2a838" translate="yes" xml:space="preserve">
          <source>Get the headers for a request.</source>
          <target state="translated">Consigue los encabezados para una solicitud.</target>
        </trans-unit>
        <trans-unit id="ed3f518cc219dc8f15775cecb4e1626d19a66ad7" translate="yes" xml:space="preserve">
          <source>Get the reference for the specified belongsTo relationship.</source>
          <target state="translated">Obtener la referencia de la relación de pertenencia especificada.</target>
        </trans-unit>
        <trans-unit id="fb73064448953de9ae0204965dea3b9d6a169dbe" translate="yes" xml:space="preserve">
          <source>Get the reference for the specified hasMany relationship.</source>
          <target state="translated">Consigue la referencia para la relación especificada de hasMany.</target>
        </trans-unit>
        <trans-unit id="a98502f7f02fe62e117df0ed62a5e923a6bb3c37" translate="yes" xml:space="preserve">
          <source>Get the reference for the specified record.</source>
          <target state="translated">Consigue la referencia para el registro especificado.</target>
        </trans-unit>
        <trans-unit id="71dbe0f3342deafc2ab56de8db0b18a3d3aa8466" translate="yes" xml:space="preserve">
          <source>Gets the value of a property on an object. If the property is computed, the function will be invoked. If the property is not defined but the object implements the &lt;code&gt;unknownProperty&lt;/code&gt; method then that will be invoked.</source>
          <target state="translated">Obtiene el valor de una propiedad en un objeto. Si se calcula la propiedad, se invocar&amp;aacute; la funci&amp;oacute;n. Si la propiedad no est&amp;aacute; definida, pero el objeto implementa el m&amp;eacute;todo &lt;code&gt;unknownProperty&lt;/code&gt; , se invocar&amp;aacute;.</target>
        </trans-unit>
        <trans-unit id="d7d84ad6f67235f8d24baed7073b1c879631b92e" translate="yes" xml:space="preserve">
          <source>Gets the values for each column.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ed1aac47efbb51b56ad6a6f326722a1c1c048e0" translate="yes" xml:space="preserve">
          <source>Getters and Setters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bef3cda8498d10f284719875dd9d400fb2a36f8" translate="yes" xml:space="preserve">
          <source>Getters and setters can be defined directly on native classes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da0e664c038630fafa8a53bd9525ec0851a35929" translate="yes" xml:space="preserve">
          <source>Getters can also be used on their own to calculate values dynamically:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5820f409d566d6fa6e63d27fe80fc350ad5eaa73" translate="yes" xml:space="preserve">
          <source>Getters run every time the property is read, setters run every time the property is set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0af5fc22a2f31287c8334505bd79709d34b085b7" translate="yes" xml:space="preserve">
          <source>Getters should not mutate state, and should be idempotent (they return the same value every time if nothing else has changed).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da0e079040a74584fda30a64b2e0355a622a9581" translate="yes" xml:space="preserve">
          <source>Getting an Application Instance from a Factory Instance</source>
          <target state="translated">Obtener una instancia de solicitud de una instancia de fábrica</target>
        </trans-unit>
        <trans-unit id="539a29762302f74206cdfdac8a74b914ea48b56e" translate="yes" xml:space="preserve">
          <source>Getting started with Ember is easy. Ember projects are created and managed through our command line build tool Ember CLI. This tool provides:</source>
          <target state="translated">Empezar con Ember es fácil.Los proyectos Ember se crean y gestionan a través de nuestra herramienta de construcción de línea de comandos Ember CLI.Esta herramienta proporciona:</target>
        </trans-unit>
        <trans-unit id="2e721fbe889b717ca607bdb2fd941e5ea34bdb25" translate="yes" xml:space="preserve">
          <source>Getting used to &lt;code&gt;@action&lt;/code&gt;, &lt;code&gt;{{on}}&lt;/code&gt;, and &lt;code&gt;{{fn}}&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b25e1fda499132342197e70671d2453668989729" translate="yes" xml:space="preserve">
          <source>Getting used to &lt;code&gt;this&lt;/code&gt; in templates</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b420c886ab52c24fc2c89a0e089f8ee1b266ec75" translate="yes" xml:space="preserve">
          <source>Getting used to Angle Brackets</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da0b90ff35871666aa911ca2058790353da63038" translate="yes" xml:space="preserve">
          <source>Getting used to Glimmer Components</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cbc36bca75d7fc9910aab164c50ac95db4b600e" translate="yes" xml:space="preserve">
          <source>Getting used to Named Arguments</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5819778898df55e3a762f0c5728b457970d72cae" translate="yes" xml:space="preserve">
          <source>Git</source>
          <target state="translated">Git</target>
        </trans-unit>
        <trans-unit id="5442e2b64fa09764b9f593867e59a97292c84059" translate="yes" xml:space="preserve">
          <source>GitHub</source>
          <target state="translated">GitHub</target>
        </trans-unit>
        <trans-unit id="4e5f6a0536d05d128a6d128d52648145b148c9ad" translate="yes" xml:space="preserve">
          <source>Given a &lt;code&gt;TacoParty&lt;/code&gt; model, calling &lt;code&gt;save&lt;/code&gt; on it would produce an outgoing request like:</source>
          <target state="translated">Dado un modelo de &lt;code&gt;TacoParty&lt;/code&gt; , llamar a &lt;code&gt;save&lt;/code&gt; en &amp;eacute;l producir&amp;iacute;a una solicitud saliente como:</target>
        </trans-unit>
        <trans-unit id="7b75fe28dbd75322da6f73f3048e9d964415a406" translate="yes" xml:space="preserve">
          <source>Given a &lt;code&gt;post&lt;/code&gt; model with attributes body, title, publishDate and meta, you can retrieve a filtered list of attributes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b798b22a36a8fb7d259e78c87e14188011223c0" translate="yes" xml:space="preserve">
          <source>Given a callback, iterates over each of the relationships in the model, invoking the callback with the name of each relationship and its relationship descriptor.</source>
          <target state="translated">Al recibir una llamada,itera sobre cada una de las relaciones del modelo,invocando la llamada con el nombre de cada relación y su descriptor de relación.</target>
        </trans-unit>
        <trans-unit id="e0568745c680da8312437a23e1c44462bee329e1" translate="yes" xml:space="preserve">
          <source>Given a callback, iterates over each of the types related to a model, invoking the callback with the related type's class. Each type will be returned just once, regardless of how many different relationships it has with a model.</source>
          <target state="translated">Cuando se le devuelve la llamada,itera sobre cada uno de los tipos relacionados con un modelo,invocando la llamada con la clase del tipo relacionado.Cada tipo será devuelto sólo una vez,independientemente de cuántas relaciones diferentes tenga con un modelo.</target>
        </trans-unit>
        <trans-unit id="b0e5f9e1f8152169694773a02abf35185d808804" translate="yes" xml:space="preserve">
          <source>Given a fullName return a corresponding instance.</source>
          <target state="translated">Si se le da un nombre completo,devuelve una instancia correspondiente.</target>
        </trans-unit>
        <trans-unit id="2f13fbc6cdf339f2d25e87142ea0a90a53658a0b" translate="yes" xml:space="preserve">
          <source>Given a fullName return a factory manager.</source>
          <target state="translated">Si se le da un nombre completo al gerente de la fábrica.</target>
        </trans-unit>
        <trans-unit id="37d74c6bdfabf001cba8ff91688da5fa40622684" translate="yes" xml:space="preserve">
          <source>Given a fullName return the corresponding factory.</source>
          <target state="translated">Si se le da un nombre completo,devuelva la fábrica correspondiente.</target>
        </trans-unit>
        <trans-unit id="4be37d698977b216fa3468816c77b29a601a1557" translate="yes" xml:space="preserve">
          <source>Given an input array like:</source>
          <target state="translated">Dada una matriz de entrada como:</target>
        </trans-unit>
        <trans-unit id="84ddb97291956d6a93caa6fd9afa6398920b6cce" translate="yes" xml:space="preserve">
          <source>Given that the server returns the following JSON payload when fetching a hasMany relationship:</source>
          <target state="translated">Dado que el servidor devuelve la siguiente carga JSON al buscar una relación hasMany:</target>
        </trans-unit>
        <trans-unit id="5327a59c0f2fd5c93a18b32cdc17ca3fe95c50bb" translate="yes" xml:space="preserve">
          <source>Given the above template, you can now use the &lt;code&gt;{{blog-post}}&lt;/code&gt; component:</source>
          <target state="translated">Dada la plantilla anterior, ahora puede usar el componente &lt;code&gt;{{blog-post}}&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="d25dc77ecf9ac2c548f7fdca3ea0008c74ec5b8e" translate="yes" xml:space="preserve">
          <source>Given the following router, entering &lt;code&gt;/posts/new&lt;/code&gt; will take you to the &lt;code&gt;posts.new&lt;/code&gt; route.</source>
          <target state="translated">Dado el siguiente enrutador, ingresar &lt;code&gt;/posts/new&lt;/code&gt; lo llevar&amp;aacute; a la ruta &lt;code&gt;posts.new&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="eeb4407f4e9773be51e3832417af1b5ed6ee6fba" translate="yes" xml:space="preserve">
          <source>Given the following template:</source>
          <target state="translated">Dada la siguiente plantilla:</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
