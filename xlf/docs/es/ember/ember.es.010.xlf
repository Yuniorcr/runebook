<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="ember">
    <body>
      <group id="ember">
        <trans-unit id="8c165b17a642662e30f428db8ec59304e29197b2" translate="yes" xml:space="preserve">
          <source>There are also community APIs available for writing your own modifiers, such as &lt;a href=&quot;https://github.com/ember-modifier/ember-modifier&quot;&gt;ember-modifier&lt;/a&gt;. Ember itself has low level APIs known as &lt;em&gt;modifier managers&lt;/em&gt; which can be used to write these higher level APIs. In general, it's recommended to use a community addon to write modifiers, and &lt;em&gt;not&lt;/em&gt; to write your own modifier manager.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07dc5b987a506f1827c7174aac49e91df915147a" translate="yes" xml:space="preserve">
          <source>There are also times when we need to loop through the keys and values of an object rather than an array, similar to JavaScript's &lt;code&gt;for...in&lt;/code&gt; loop. We can use the &lt;a href=&quot;https://api.emberjs.com/ember/release/classes/Ember.Templates.helpers/methods#each-in&quot;&gt;&lt;code&gt;{{#each-in}}&lt;/code&gt;&lt;/a&gt; helper to do this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0359b98b88e850c909fee09f5815ae21b16d401e" translate="yes" xml:space="preserve">
          <source>There are assistive technologies (known as screen readers) available for all common desktop platforms and mobile devices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d63cdbaaf5acafc467755d0fe3dadd094986c1f" translate="yes" xml:space="preserve">
          <source>There are many addons that cover all kinds of use cases. For more detail, as well as examples of what addons can do, we invite you to have a look at the &lt;a href=&quot;https://cli.emberjs.com/release/basic-use/using-addons/&quot;&gt;Ember CLI documentation&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="578096648c11d6a69dd22171bb32ab27d9d7328e" translate="yes" xml:space="preserve">
          <source>There are many other reasons you probably want to have the last word on whether a user can or cannot access a certain page. Ember allows you to control that access with a combination of hooks and methods in your route.</source>
          <target state="translated">Hay muchas otras razones por las que probablemente quieras tener la última palabra sobre si un usuario puede o no puede acceder a una determinada página.Ember le permite controlar ese acceso con una combinación de ganchos y métodos en su ruta.</target>
        </trans-unit>
        <trans-unit id="775b203c577bdb140ffa94c799cf2a6a1b4a311d" translate="yes" xml:space="preserve">
          <source>There are only two required serializer methods, one for normalizing data from the server API format into JSON:API, and another for serializing records via &lt;code&gt;Snapshots&lt;/code&gt; into the expected server API format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69a2f9362be5ece6004337fb1919abd173f60009" translate="yes" xml:space="preserve">
          <source>There are seven required adapter methods, one for each of the primary request types that EmberData issues.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6205ecb1c706ed6b9a63517df8cc3501ccd070fd" translate="yes" xml:space="preserve">
          <source>There are some &lt;code&gt;aria&lt;/code&gt; attributes that can have multiple values &lt;strong&gt;and&lt;/strong&gt; the order of those values matter. The most frequently used of these is &lt;code&gt;aria-describedby&lt;/code&gt; and &lt;code&gt;aria-labelledby&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12806d9b5503b976f19a8bd2d11453b604b4436e" translate="yes" xml:space="preserve">
          <source>There are some existing Ember addons that may help you make your app more accessible. Each addon should be evaluated for its own usefulness and merit- you may find in some instances, that it would be better to implement the ideas presented in the addon in your own application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e116b7284a783a93524c56507c577f15c7f8f3a" translate="yes" xml:space="preserve">
          <source>There are some typical properties for &lt;code&gt;JSONAPI&lt;/code&gt; payload:</source>
          <target state="translated">Hay algunas propiedades t&amp;iacute;picas de la carga &amp;uacute;til &lt;code&gt;JSONAPI&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="fa40a8819696a1f893c91e0074003303e8e955ba" translate="yes" xml:space="preserve">
          <source>There are three contexts an action helper can be used in. The first two contexts to discuss are attribute context, and Handlebars value context.</source>
          <target state="translated">Hay tres contextos en los que un ayudante de acción puede ser utilizado.Los dos primeros contextos que hay que analizar son el contexto de los atributos y el contexto de los valores del manillar.</target>
        </trans-unit>
        <trans-unit id="eb35d84a7b28ef37fc1f3ad04e7b79de4e7986bd" translate="yes" xml:space="preserve">
          <source>There are three different classifications of tests that you will need: &lt;strong&gt;Acceptance&lt;/strong&gt;, &lt;strong&gt;Unit&lt;/strong&gt;, and &lt;strong&gt;Integration&lt;/strong&gt;.</source>
          <target state="translated">Hay tres clasificaciones diferentes de pruebas que necesitar&amp;aacute;: &lt;strong&gt;Aceptaci&amp;oacute;n&lt;/strong&gt; , &lt;strong&gt;Unidad&lt;/strong&gt; e &lt;strong&gt;Integraci&amp;oacute;n&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="55ec0fd33fa933ba8edc87cdec2dedca23c0d9b2" translate="yes" xml:space="preserve">
          <source>There are three major changes to templates in Octane compared to classic Ember:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61e915bce39600ae78d86a8a2f57b0a6e3650f57" translate="yes" xml:space="preserve">
          <source>There are three reasons to reach for modifiers for DOM element interactions:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7367662dcdee81e54f51c21bbee10f32226fbf53" translate="yes" xml:space="preserve">
          <source>There are times when dealing with promises that it seems like any errors are being 'swallowed', and not properly raised. This makes it extremely difficult to track down where a given issue is coming from. Thankfully, &lt;code&gt;RSVP&lt;/code&gt; has a solution for this problem built in.</source>
          <target state="translated">A veces, cuando se trata de promesas, parece que los errores se &quot;tragan&quot; y no se plantean correctamente. Esto hace que sea extremadamente dif&amp;iacute;cil rastrear de d&amp;oacute;nde proviene un problema determinado. Afortunadamente, &lt;code&gt;RSVP&lt;/code&gt; tiene una soluci&amp;oacute;n para este problema incorporada.</target>
        </trans-unit>
        <trans-unit id="cbbbf6730bf36824753412fd002e78a4cdd85e2c" translate="yes" xml:space="preserve">
          <source>There are two areas of focus for upgrading to Octane: learning, and implementing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58292ec01fe4732965c33151b41b5ee2bb29dfe4" translate="yes" xml:space="preserve">
          <source>There are two common invocation patterns for &lt;code&gt;.addObserver()&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="857fe0ed7c7e175d8f1aea817ccf0ed3aa408b2b" translate="yes" xml:space="preserve">
          <source>There are two special values for &lt;code&gt;key&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44cfec86f1ebe6d62f3d92a60b1b8d46e0ac4e6e" translate="yes" xml:space="preserve">
          <source>There are two types of initializers: application initializers and application instance initializers.</source>
          <target state="translated">Hay dos tipos de inicializadores:los inicializadores de aplicación y los inicializadores de instancia de aplicación.</target>
        </trans-unit>
        <trans-unit id="5c0f5bf8ffcc2ef833217f862744e578168bb7d9" translate="yes" xml:space="preserve">
          <source>There are two ways to link to a dynamic segment from an &lt;code&gt;.hbs&lt;/code&gt; template using &lt;a href=&quot;https://guides.emberjs.com/templates/links/&quot;&gt;&lt;code&gt;&amp;lt;LinkTo&amp;gt;&lt;/code&gt;&lt;/a&gt;. Depending on which approach you use, it will affect whether that route's &lt;code&gt;model&lt;/code&gt; hook is run. To learn how to link to a dynamic segment from within the JavaScript file, see the API documentation on &lt;a href=&quot;https://api.emberjs.com/ember/release/classes/RouterService/methods#transitionTo&quot;&gt;&lt;code&gt;transitionTo&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ddc863139b61f386947ab375dcee77d68a6db49" translate="yes" xml:space="preserve">
          <source>There is a difference between browse mode and focus mode in screen readers- see &lt;a href=&quot;https://codepen.io/melsumner/live/ZJeYoP&quot;&gt;&quot;Focus Please&quot;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f270a949030a35146d8584768a6326689af3a42b" translate="yes" xml:space="preserve">
          <source>There is a problem with this though &amp;ndash; if you tried this in the browser, you will quickly discover that clicking on the buttons will bring up an alert dialog that said &quot;The person's name is &lt;code&gt;[Object MouseEvent]&lt;/code&gt;!&quot; &amp;ndash; eek!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd6415938d2259e6b11974583516c4b28493285c" translate="yes" xml:space="preserve">
          <source>There is also a &lt;em&gt;tight coupling&lt;/em&gt; between your application's UI and the network code. If the URL or the format of the JSON payload changes, it is likely to break all of your UI components in ways that are hard to track down.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c93293573cc4730e6f6925ce1aadc37cf558354" translate="yes" xml:space="preserve">
          <source>There is also a &lt;em&gt;tight coupling&lt;/em&gt; between your application's UI and the network code. If the url or the format of the JSON payload changes, it is likely to break all of your UI components in ways that are hard to track down.</source>
          <target state="translated">Tambi&amp;eacute;n existe una &lt;em&gt;estrecha relaci&amp;oacute;n&lt;/em&gt; entre la interfaz de usuario de su aplicaci&amp;oacute;n y el c&amp;oacute;digo de red. Si la URL o el formato de la carga &amp;uacute;til JSON cambian, es probable que se rompan todos los componentes de la interfaz de usuario de formas dif&amp;iacute;ciles de rastrear.</target>
        </trans-unit>
        <trans-unit id="4d05d80fad77d5b9ca545ded611a63131b8dfe96" translate="yes" xml:space="preserve">
          <source>There is also a way to share data within your blog post component with the content it is wrapping. In our blog post component we want to provide a way for the user to configure what type of style they want to write their post in. We will give them the option to specify either &lt;code&gt;markdown-style&lt;/code&gt; or &lt;code&gt;html-style&lt;/code&gt;.</source>
          <target state="translated">Tambi&amp;eacute;n hay una forma de compartir datos dentro del componente de publicaci&amp;oacute;n de su blog con el contenido que est&amp;aacute; envolviendo. En nuestro componente de publicaci&amp;oacute;n de blog, queremos proporcionar una forma para que el usuario configure el tipo de estilo en el que desea escribir su publicaci&amp;oacute;n. Le daremos la opci&amp;oacute;n de especificar el &lt;code&gt;markdown-style&lt;/code&gt; o el estilo &lt;code&gt;html-style&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="66baec3dcfb862e412f8645d5dd62af38e05aa9e" translate="yes" xml:space="preserve">
          <source>There is an official, free tutorial here in the Guides that delves deeper into some of the features you used today. &lt;a href=&quot;https://guides.emberjs.com/tutorial/part-1/&quot;&gt;Give it a try!&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bce1dba6eb8d20d25b8d3b47eeeb56679f7d843" translate="yes" xml:space="preserve">
          <source>There is an option of not embedding JSON in the serialized payload by using serialize: 'ids'. If you do not want the relationship sent at all, you can use &lt;code&gt;serialize: false&lt;/code&gt;.</source>
          <target state="translated">Existe la opci&amp;oacute;n de no incrustar JSON en la carga &amp;uacute;til serializada mediante serialize: 'ids'. Si no desea que se env&amp;iacute;e la relaci&amp;oacute;n en absoluto, puede usar &lt;code&gt;serialize: false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="954498fe7dd0c3f6aac9164ddf4b53324de41ed9" translate="yes" xml:space="preserve">
          <source>There is no confusing two-way data binding for arguments via the component class, data can only flow in one direction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa91d2b4e4c0d7b9ccd13335fc8f54b86eb5baf7" translate="yes" xml:space="preserve">
          <source>There is one exception to this, which is the &lt;code&gt;class&lt;/code&gt; attribute. &lt;code&gt;class&lt;/code&gt; will get merged, since its more often the case that users of the component want to &lt;em&gt;add&lt;/em&gt; a class than completely override the existing ones. For &lt;code&gt;class&lt;/code&gt;, the order of &lt;code&gt;...attributes&lt;/code&gt; will determine the order of merging. Putting it before:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="596e48ed005d8f1769bfccf612d9adb9087b29b8" translate="yes" xml:space="preserve">
          <source>There's a new component API in Octane! For this section, we'll be focusing on the differences between the new style, known as Glimmer components, and classic components, and how to upgrade. &quot;Classic&quot; components refer to older-style components that do not use native classes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdcc4e622a6269348d6ee83409631d2d40cd629a" translate="yes" xml:space="preserve">
          <source>There's no one-size-fits-all strategy, but here is a checklist you can adapt, once you're familiar with what Octane has to offer:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c0962f2c7df03fd0ed2a6aa0f4eb2fdab83af0e" translate="yes" xml:space="preserve">
          <source>Therefore, if this function is comparing some numeric values, simple &lt;code&gt;itemA - itemB&lt;/code&gt; or &lt;code&gt;itemA.get( 'foo' ) - itemB.get( 'foo' )&lt;/code&gt; can be used instead of series of &lt;code&gt;if&lt;/code&gt;.</source>
          <target state="translated">Por lo tanto, si esta funci&amp;oacute;n est&amp;aacute; comparando algunos valores num&amp;eacute;ricos, se puede &lt;code&gt;itemA - itemB&lt;/code&gt; simple itemA - itemB o &lt;code&gt;itemA.get( 'foo' ) - itemB.get( 'foo' )&lt;/code&gt; lugar de series de &lt;code&gt;if&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="aad175917d363bcce8de657f15e60b1692b21276" translate="yes" xml:space="preserve">
          <source>These Guides do not cover how to load data in components, since the majority of data fetching should be done in a route's &lt;code&gt;model&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b113c2abb173382c15c2dd806d68e416f093b34c" translate="yes" xml:space="preserve">
          <source>These accessibility learning resources will provide additional support to the developer looking to improve the quality of the code they write.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d873f60929440340af9336691d42395001d2da6" translate="yes" xml:space="preserve">
          <source>These are also mostly the same between native and classic classes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c0660d5302de3d7014b6613e931596da4023437" translate="yes" xml:space="preserve">
          <source>These are both languages that compile to JavaScript. You're able to write your code using the syntax they offer and when ready you compile your TypeScript or CoffeeScript into JavaScript.</source>
          <target state="translated">Estos son los dos lenguajes que compilan a JavaScript.Puedes escribir tu código usando la sintaxis que ofrecen y cuando estés listo compilarás tu TypeScript o CoffeeScript en JavaScript.</target>
        </trans-unit>
        <trans-unit id="4c8de96641d3cbe8d9c8edc8dc4c69c126a40fc2" translate="yes" xml:space="preserve">
          <source>These are meant to replace the &lt;code&gt;{{action}}&lt;/code&gt; helper/modifier, which will be deprecated in the future. You can use them like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31a3130dbfaeb9b8e566839bfa8b94686af9524c" translate="yes" xml:space="preserve">
          <source>These are the main reasons to load data in a &lt;code&gt;model&lt;/code&gt; hook:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f8d310b142485d1a7ea1b222ade6e3057013180" translate="yes" xml:space="preserve">
          <source>These can be used to setup the class and tear it down, respectively. Other lifecycle hooks, like &lt;code&gt;didInsertElement&lt;/code&gt; and &lt;code&gt;didUpdate&lt;/code&gt; don't have equivalents. Instead, you should use &lt;em&gt;modifiers&lt;/em&gt; to fill their use cases. These are discussed in more detail later on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d3e697f7096d0082422200a034677663294c6f5" translate="yes" xml:space="preserve">
          <source>These can generally be replaced either by using getters, in cases where they are related to updating component state, or by using &lt;em&gt;modifiers&lt;/em&gt;. For example, installing the &lt;a href=&quot;https://github.com/emberjs/ember-render-modifiers&quot;&gt;&lt;code&gt;ember-render-modifiers&lt;/code&gt;&lt;/a&gt; addon will give you the ability to use &lt;code&gt;{{did-insert}}&lt;/code&gt; and &lt;code&gt;{{did-update}}&lt;/code&gt;. You can also write your own modifiers! Keep reading below to learn more.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f634da40a54ec867094862d4220f2487fe12f5b" translate="yes" xml:space="preserve">
          <source>These commands run your tests using &lt;a href=&quot;https://github.com/airportyh/testem&quot;&gt;Testem&lt;/a&gt; to make testing multiple browsers very easy. You can configure Testem using the &lt;code&gt;testem.js&lt;/code&gt; file in your application root.</source>
          <target state="translated">Estos comandos ejecutan sus pruebas usando &lt;a href=&quot;https://github.com/airportyh/testem&quot;&gt;Testem&lt;/a&gt; para facilitar la prueba de m&amp;uacute;ltiples navegadores. Puede configurar Testem usando el archivo &lt;code&gt;testem.js&lt;/code&gt; en la ra&amp;iacute;z de su aplicaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="61777bbf5e521d73865a1db0cd7e3363d228be73" translate="yes" xml:space="preserve">
          <source>These components are similar in HTML markup to the native &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;textarea&amp;gt;&lt;/code&gt; elements. In contrast to the native elements, &lt;code&gt;&amp;lt;Input&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;Textarea&amp;gt;&lt;/code&gt; automatically update the state of their bound values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="786a36961ca585971e2e7546d5f6e047e5c8cc4e" translate="yes" xml:space="preserve">
          <source>These components don't have a wrapping element. This is referred to as &lt;em&gt;outer HTML semantics&lt;/em&gt;, and it means that whatever you see in the template is what you get in the final rendered DOM:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b434af3b0a23d493db802f77a8fea21f94ada5a0" translate="yes" xml:space="preserve">
          <source>These components have 2 lifecycle hooks:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ac140f85fac47671e02dda468bad7f3d465b715" translate="yes" xml:space="preserve">
          <source>These functions will be invoked when a matching &lt;code&gt;{{action}}&lt;/code&gt; is triggered from within a template and the application's current route is this route.</source>
          <target state="translated">Estas funciones se invocar&amp;aacute;n cuando se active una &lt;code&gt;{{action}}&lt;/code&gt; coincidente desde dentro de una plantilla y la ruta actual de la aplicaci&amp;oacute;n sea esta ruta.</target>
        </trans-unit>
        <trans-unit id="0057e815fd8b2620dc9e4b8bc9d8daca9ff42a47" translate="yes" xml:space="preserve">
          <source>These have been replaced or made optional in Octane:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13bbe9645b476da8535e27b2466b716e791a8efb" translate="yes" xml:space="preserve">
          <source>These modifiers run the function passed to them when the &lt;em&gt;element&lt;/em&gt; they are applied to is inserted into or removed from the DOM. This makes the hooks explicit in the element they are acting on. There is also a &lt;code&gt;did-update&lt;/code&gt; modifier, which does not run on insertion, but runs whenever any of its passed values &lt;em&gt;change&lt;/em&gt;, allowing you to update the element:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="161059d7370879ddfe7243a0b810cace10c1efd5" translate="yes" xml:space="preserve">
          <source>These new components give you all the benefits described in Native Classes above</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94056680d2238e5f9418ea4d621a35f14aa9069e" translate="yes" xml:space="preserve">
          <source>These new types of Components &lt;em&gt;require&lt;/em&gt; native class syntax. You can define one like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fdc6a595f0ee640c4a0b599450ef35192869b98" translate="yes" xml:space="preserve">
          <source>These parameters can then be used like so:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a989452889acc49f04f1b5d711e50b032ffaa9f" translate="yes" xml:space="preserve">
          <source>These tests differ in how many parts of your app they integrate to help you arrive at a logical conclusion. On one end, unit tests let you check a section of your code in isolation. On the other, application tests let you experience your entire application as end-user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="380d201ee7339dc3fbb3c8548f0e008b245953d6" translate="yes" xml:space="preserve">
          <source>These three modifiers are basic modifiers that allow you to cover most of the functionality that lifecycle hooks contained.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f000050ca0200e805c16a0913f8c1fad925ae6a7" translate="yes" xml:space="preserve">
          <source>These tips will help you identify problems early so they can be addressed systematically, rather than in a last-minute scramble.</source>
          <target state="translated">Estos consejos le ayudarán a identificar los problemas a tiempo para que puedan ser abordados sistemáticamente,en vez de en un revoltijo de última hora.</target>
        </trans-unit>
        <trans-unit id="5ac01f1f97000458db4f5a61a0b13b2cb9e93dd3" translate="yes" xml:space="preserve">
          <source>These values are recalculated every time the property is accessed:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c379b7b1ea9ca10a78f7b0e63c171cdd0497c5d8" translate="yes" xml:space="preserve">
          <source>They also do not have equivalents in JavaScript directly, so they cannot be used for other situations where binding would be useful.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83968a2b833ec299014955b669844bf935a80325" translate="yes" xml:space="preserve">
          <source>They are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1baa2dd1813d850d4d58e12f7e00f8d101a1f77" translate="yes" xml:space="preserve">
          <source>They can be thought of as &lt;em&gt;functional&lt;/em&gt; components, in the sense that their output (the rendered template) is a pure function of their inputs (their arguments). The fact that they can't have state makes them much easier to reason about in general, and less prone to errors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58881cdbdcce8e5a64c38827cd226f41285e6d20" translate="yes" xml:space="preserve">
          <source>They don't extend from &lt;code&gt;EmberObject&lt;/code&gt; at all, which means that they don't need &lt;code&gt;EmberObject&lt;/code&gt; APIs, such as &lt;code&gt;reopenClass&lt;/code&gt;, &lt;code&gt;extend&lt;/code&gt;. You can safely use &lt;code&gt;constructor&lt;/code&gt; for all setup code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="333001595a5f1bb5ef4cea25934228133faa1100" translate="yes" xml:space="preserve">
          <source>They don't have that wrapping HTML element that got in the way of CSS styling and layout</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59baf199ee991542e1d1bd15a351ae5c730a7ad5" translate="yes" xml:space="preserve">
          <source>They enforce a &quot;public API&quot; of all values that are trackable in your class. With computed properties, it was possible to watch &lt;em&gt;any&lt;/em&gt; value in a class for changes, and there was nothing you as the class author could do about it. With tracked properties, only the values you &lt;em&gt;want&lt;/em&gt; to be trackable will trigger updates to anything external to your class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1681b170c17035ae17e0710fc60495ba3fbbd028" translate="yes" xml:space="preserve">
          <source>They enforce that all of the trackable properties in your classes are annotated, making them easy to find. With computed properties, it was common to have properties be &quot;implicit&quot; in a class definition, like in the example above; the classic class version of &lt;code&gt;Image&lt;/code&gt; doesn't have &lt;code&gt;width&lt;/code&gt; and &lt;code&gt;height&lt;/code&gt; properties defined, but they are &lt;em&gt;implied&lt;/em&gt; by their existence as dependencies in the &lt;code&gt;aspectRatio&lt;/code&gt; computed property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5d8fb2fbdaea0c4272ca86c1513cf90803ca1b3" translate="yes" xml:space="preserve">
          <source>They exist on the class's &lt;em&gt;prototype&lt;/em&gt;, and are only readily callable by instances. However, they can be added to the class directly using the &lt;code&gt;static&lt;/code&gt; keyword, which is described in more detail below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75fc311a8a7aa86afd9963a3b4b7eeeaf07c2b2d" translate="yes" xml:space="preserve">
          <source>Things to know</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd79b21c1e6bc707f846d1f0dbbb85f955d73575" translate="yes" xml:space="preserve">
          <source>Think of this as evaluating the template from scratch, substituting in the new values, and updating the output with the new contents.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="181131df6a38e6d28e2f4421a72b6584672cb091" translate="yes" xml:space="preserve">
          <source>Thinking About Updates</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb68b862cfa676cabebaff85159658805baa3a42" translate="yes" xml:space="preserve">
          <source>Third-party APIs.</source>
          <target state="translated">API de terceros.</target>
        </trans-unit>
        <trans-unit id="ddfb0ac04a55327aee053575597c9dda63adb165" translate="yes" xml:space="preserve">
          <source>Third-party JavaScript not available as an addon or Bower package should be placed in the &lt;code&gt;vendor/&lt;/code&gt; folder in your project.</source>
          <target state="translated">JavaScript de terceros no disponible como complemento o paquete Bower debe colocarse en la carpeta del &lt;code&gt;vendor/&lt;/code&gt; en su proyecto.</target>
        </trans-unit>
        <trans-unit id="2b2d7e78185f072c22436993b20d284d1f30739b" translate="yes" xml:space="preserve">
          <source>Third-party JavaScript not available as an addon or npm package should be placed in the &lt;code&gt;vendor/&lt;/code&gt; folder in your project.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c152859cd8202abcdaed3b38272a28b1f61176c" translate="yes" xml:space="preserve">
          <source>Third-party assets that are not added via &lt;code&gt;app.import()&lt;/code&gt; will not be present in the final build.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ffb1109d5b126cb0663125d9dacbb7624bde715" translate="yes" xml:space="preserve">
          <source>Third-party assets that are not added via &lt;code&gt;import()&lt;/code&gt; will not be present in the final build.</source>
          <target state="translated">Los activos de terceros que no se agregan mediante la &lt;code&gt;import()&lt;/code&gt; no estar&amp;aacute;n presentes en la compilaci&amp;oacute;n final.</target>
        </trans-unit>
        <trans-unit id="452f64b3ac568069b0d3fb42cc4172b03c430605" translate="yes" xml:space="preserve">
          <source>This API allows you to provide a reference with new data. The simplest usage of this API is similar to &lt;code&gt;store.push&lt;/code&gt;: you provide a normalized hash of data and the object represented by the reference will update.</source>
          <target state="translated">Esta API le permite proporcionar una referencia con nuevos datos. El uso m&amp;aacute;s simple de esta API es similar a &lt;code&gt;store.push&lt;/code&gt; : usted proporciona un hash normalizado de datos y el objeto representado por la referencia se actualizar&amp;aacute;.</target>
        </trans-unit>
        <trans-unit id="37ffc8f135d22f0957ffebde87903095e52c78e0" translate="yes" xml:space="preserve">
          <source>This Ember.js hook allows an object to be notified when a property is defined.</source>
          <target state="translated">Este gancho Ember.js permite notificar a un objeto cuando se define una propiedad.</target>
        </trans-unit>
        <trans-unit id="b09c105db361629ca95455f0150513486c5dc1db" translate="yes" xml:space="preserve">
          <source>This action uses the &lt;code&gt;onCreate&lt;/code&gt; argument to expose a public API for defining what happens when a message is created. This way, the &lt;code&gt;&amp;lt;NewMessageInput&amp;gt;&lt;/code&gt; component doesn't have to worry about the external details - it can focus on getting the new message input.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6b8e36a48ff33ef3a57b6d9dd97582f0dfd4fca" translate="yes" xml:space="preserve">
          <source>This adapter does not make any assumptions as to the format of the &lt;code&gt;errors&lt;/code&gt; object. It will simply be passed along as is, wrapped in an instance of &lt;code&gt;DS.InvalidError&lt;/code&gt; or &lt;code&gt;DS.AdapterError&lt;/code&gt;. The serializer can interpret it afterwards.</source>
          <target state="translated">Este adaptador no hace ninguna suposici&amp;oacute;n sobre el formato del objeto de &lt;code&gt;errors&lt;/code&gt; . Simplemente se transmitir&amp;aacute; tal cual, &lt;code&gt;DS.InvalidError&lt;/code&gt; en una instancia de DS.InvalidError o &lt;code&gt;DS.AdapterError&lt;/code&gt; . El serializador puede interpretarlo posteriormente.</target>
        </trans-unit>
        <trans-unit id="31309097c652bcb29f43566cdd5ee615b8e45a1c" translate="yes" xml:space="preserve">
          <source>This adapter does not make any assumptions as to the format of the &lt;code&gt;errors&lt;/code&gt; object. It will simply be passed along as is, wrapped in an instance of &lt;code&gt;InvalidError&lt;/code&gt; or &lt;code&gt;AdapterError&lt;/code&gt;. The serializer can interpret it afterwards.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad2124edee9f5095f02b332c56318c024bf9499a" translate="yes" xml:space="preserve">
          <source>This adapter is designed around the idea that the JSON exchanged with the server should be conventional.</source>
          <target state="translated">Este adaptador está diseñado en torno a la idea de que el JSON intercambiado con el servidor debe ser convencional.</target>
        </trans-unit>
        <trans-unit id="853904908c1556303a04442689a343ac7e65fed7" translate="yes" xml:space="preserve">
          <source>This adapter will extend the &lt;a href=&quot;http://emberjs.com/api/data/classes/DS.JSONAPIAdapter.html&quot;&gt;&lt;code&gt;JSONAPIAdapter&lt;/code&gt;&lt;/a&gt; base class from Ember Data:</source>
          <target state="translated">Este adaptador extender&amp;aacute; la clase base &lt;a href=&quot;http://emberjs.com/api/data/classes/DS.JSONAPIAdapter.html&quot;&gt; &lt;code&gt;JSONAPIAdapter&lt;/code&gt; &lt;/a&gt; de Ember Data:</target>
        </trans-unit>
        <trans-unit id="7f8c99814d002a149e53514eb44437d60a2e1b46" translate="yes" xml:space="preserve">
          <source>This addon does nothing by default, but provides a command-line interface to enable and disable breaking changes in Ember.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d5dbdc061173e19b17b6f110fb18cfb4cd22c55" translate="yes" xml:space="preserve">
          <source>This affects query param behavior in two ways:</source>
          <target state="translated">Esto afecta el comportamiento de los paramédicos de dos maneras:</target>
        </trans-unit>
        <trans-unit id="fb40c747b5f5c098cf71b6fa217888659cbabe96" translate="yes" xml:space="preserve">
          <source>This allows each in-app location state to be tracked uniquely across history state changes via the &lt;code&gt;uuid&lt;/code&gt; field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9236129e7ad8572a6f3cfa7ce7b534bcdc1773a8" translate="yes" xml:space="preserve">
          <source>This allows ember-testing to play nicely with other asynchronous events, such as an application that is waiting for a CSS3 transition or an IndexDB transaction. The waiter runs periodically after each async helper (i.e. &lt;code&gt;click&lt;/code&gt;, &lt;code&gt;andThen&lt;/code&gt;, &lt;code&gt;visit&lt;/code&gt;, etc) has executed, until the returning result is truthy. After the waiters finish, the next async helper is executed and the process repeats.</source>
          <target state="translated">Esto permite que la prueba de ascuas funcione bien con otros eventos asincr&amp;oacute;nicos, como una aplicaci&amp;oacute;n que est&amp;aacute; esperando una transici&amp;oacute;n de CSS3 o una transacci&amp;oacute;n de IndexDB. El camarero se ejecuta peri&amp;oacute;dicamente despu&amp;eacute;s de que se haya ejecutado cada asistente as&amp;iacute;ncrono (es decir , &lt;code&gt;click&lt;/code&gt; , y &lt;code&gt;andThen&lt;/code&gt; , &lt;code&gt;visit&lt;/code&gt; e , etc.), hasta que el resultado devuelto sea verdadero. Una vez que los camareros terminan, se ejecuta el siguiente asistente as&amp;iacute;ncrono y el proceso se repite.</target>
        </trans-unit>
        <trans-unit id="59effbfb5ad3093ffb299683ce194cb7792a2e6a" translate="yes" xml:space="preserve">
          <source>This allows the developer to introduce shorter names for certain computations in the template.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17544a9635bda05a65f8cbf8e04034181c47050d" translate="yes" xml:space="preserve">
          <source>This allows the manager to store metadata that it doesn't want to expose to the user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d63f6d895f9dbaa7a1f0c7f4aab7d30d5d8234cc" translate="yes" xml:space="preserve">
          <source>This allows the original method to continue operating as it normally would.</source>
          <target state="translated">Esto permite que el método original siga funcionando como lo haría normalmente.</target>
        </trans-unit>
        <trans-unit id="24a13b7fd5f29060d14130a50f2cc487cfbbe911" translate="yes" xml:space="preserve">
          <source>This allows you to define different &lt;em&gt;kinds&lt;/em&gt; of objects, which have their own methods, properties, fields, and more. This is essentially Object Oriented Programming - you define different types of objects that handle different problems and concerns, keeping your code organized.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24bcc3785d46e8ac4ffd376b07abde90f0f28ecb" translate="yes" xml:space="preserve">
          <source>This allows you to do whatever kind of munging you need and is especially useful if your server is inconsistent and you need to do munging differently for many different kinds of responses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="283d55de2d3a0d1c60968c365e7a92f311d2ac8a" translate="yes" xml:space="preserve">
          <source>This allows you to do whatever kind of munging you need, and is especially useful if your server is inconsistent and you need to do munging differently for many different kinds of responses.</source>
          <target state="translated">Esto le permite hacer cualquier tipo de munición que necesite,y es especialmente útil si su servidor es inconsistente y necesita hacer la munición de manera diferente para muchos tipos diferentes de respuestas.</target>
        </trans-unit>
        <trans-unit id="fd87b224bfacdd8f67d689202e0b6d11b295e8ca" translate="yes" xml:space="preserve">
          <source>This allows you to perform asynchronous setup logic and defer booting your application until the setup has finished.</source>
          <target state="translated">Esto le permite realizar una lógica de configuración asíncrona y aplazar el arranque de su aplicación hasta que la configuración haya terminado.</target>
        </trans-unit>
        <trans-unit id="f64fc9d39bf58ac731301cee5c513c4b5484e576" translate="yes" xml:space="preserve">
          <source>This allows you to see at a glance whether a value is an argument, which will likely affect the JS of a component, or an attribute, which will likely affect the HTML of a component.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecbde4b0429160e6e38b29497afe7050bd66eba4" translate="yes" xml:space="preserve">
          <source>This approach works great when you're trying to produce output that can be represented in HTML. But what about aspects of your component that aren't represented in HTML, like event handlers? In those cases, Ember tries to stick to the spirit of the Principle of Substitution, and allow you to write templates as if they only ran one time, and then automatically keep the output up to date for you.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cdde2b5de75dbd9f848f898dbadf64aaba67fae" translate="yes" xml:space="preserve">
          <source>This argument will become the model context of the linked route:</source>
          <target state="translated">Este argumento se convertirá en el contexto modelo de la ruta de enlace:</target>
        </trans-unit>
        <trans-unit id="28fcfea622d48bd9ddb516b9d25db4e8b821a9b4" translate="yes" xml:space="preserve">
          <source>This article is a good launching point for learning more about focus: &lt;a href=&quot;https://webaim.org/techniques/keyboard/&quot;&gt;Keyboard accessibility&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4324e0761c8ed6f27abea5db22464d25198145c1" translate="yes" xml:space="preserve">
          <source>This assumes you have already created the &lt;code&gt;dist/&lt;/code&gt; directory by running this command</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="941f661a9bdc6020b125f022848bfff58eb9c9a2" translate="yes" xml:space="preserve">
          <source>This behavior extends to object creation as well. Continuing the above example:</source>
          <target state="translated">Este comportamiento se extiende también a la creación de objetos.Continuando con el ejemplo anterior:</target>
        </trans-unit>
        <trans-unit id="53fa6c0fd3b00088bf6ab65b06527f4d9856bb1d" translate="yes" xml:space="preserve">
          <source>This behavior is not available during object &lt;code&gt;create&lt;/code&gt; calls. It is only available at &lt;code&gt;extend&lt;/code&gt; time.</source>
          <target state="translated">Este comportamiento no est&amp;aacute; disponible durante las llamadas de &lt;code&gt;create&lt;/code&gt; objetos . Solo est&amp;aacute; disponible por tiempo &lt;code&gt;extend&lt;/code&gt; ido .</target>
        </trans-unit>
        <trans-unit id="43d2dd221d5ae1ea9bb7a9856edbf09d1a30ce17" translate="yes" xml:space="preserve">
          <source>This behavior is similar to &lt;code&gt;&amp;lt;LinkTo /&amp;gt;&lt;/code&gt;, which also lets you opt into a &lt;code&gt;replaceState&lt;/code&gt; transition via &lt;code&gt;replace=true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b10353972c333adf35b656d7d67ecb6081d088a1" translate="yes" xml:space="preserve">
          <source>This behaviour can be easily customized by extending this method.</source>
          <target state="translated">Este comportamiento puede personalizarse fácilmente ampliando este método.</target>
        </trans-unit>
        <trans-unit id="7087d2aa7e0c9dbae55ad8456ac0ed7c2474bcbd" translate="yes" xml:space="preserve">
          <source>This behaviour is similar to &lt;code&gt;link-to&lt;/code&gt;, which also lets you opt into a &lt;code&gt;replaceState&lt;/code&gt; transition via &lt;code&gt;replace=true&lt;/code&gt;.</source>
          <target state="translated">Este comportamiento es similar al &lt;code&gt;link-to&lt;/code&gt; , que tambi&amp;eacute;n le permite optar por una transici&amp;oacute;n de &lt;code&gt;replaceState&lt;/code&gt; a trav&amp;eacute;s de &lt;code&gt;replace=true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="646b88b52695fd5b351e17ed4f20ebf3a312b1da" translate="yes" xml:space="preserve">
          <source>This callback will be called whenever an async operation has completed.</source>
          <target state="translated">Esta llamada se llamará cuando se haya completado una operación de sincronización.</target>
        </trans-unit>
        <trans-unit id="9d3decb642e6ed5fe3151ae228c0dab60ea9dbcb" translate="yes" xml:space="preserve">
          <source>This callback will be called whenever an async operation is about to start.</source>
          <target state="translated">Esta llamada será llamada cada vez que una operación de sincronización esté a punto de comenzar.</target>
        </trans-unit>
        <trans-unit id="d94c197506d9b806492553adc280734f866e9c03" translate="yes" xml:space="preserve">
          <source>This can also be used in JavaScript code directly:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e4f6495a0bfd49c0b770ee29b970fcdc0b8a129" translate="yes" xml:space="preserve">
          <source>This can be achieved by configuring the &lt;code&gt;rootURL&lt;/code&gt; property on &lt;code&gt;ENV&lt;/code&gt;:</source>
          <target state="translated">Esto se puede lograr configurando la propiedad &lt;code&gt;rootURL&lt;/code&gt; en &lt;code&gt;ENV&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="592e84b1e0b4e61032446b865d26f0c9377deab5" translate="yes" xml:space="preserve">
          <source>This can be done on the result of a &lt;code&gt;store.query()&lt;/code&gt; call:</source>
          <target state="translated">Esto se puede hacer en el resultado de una llamada &lt;code&gt;store.query()&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="9a9791a95fe25e97691cfe2cc4d22cfc96f21523" translate="yes" xml:space="preserve">
          <source>This cheatsheet is a quick reference for the best practices and differences in native and classic classes. Remember, you should &lt;em&gt;prefer&lt;/em&gt; using native class syntax and &lt;em&gt;not&lt;/em&gt; extending from &lt;code&gt;EmberObject&lt;/code&gt; at all in your apps.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3f869a4e4a76d784deb8c0310fd8160dedadf6c" translate="yes" xml:space="preserve">
          <source>This class can also be useful as a layer to transform the contents of an array, as they are accessed. This can be done by overriding &lt;code&gt;objectAtContent&lt;/code&gt;:</source>
          <target state="translated">Esta clase tambi&amp;eacute;n puede ser &amp;uacute;til como capa para transformar el contenido de una matriz a medida que se accede a ellos. Esto se puede hacer anulando &lt;code&gt;objectAtContent&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="5c735fa315afadd4e939bc22605b4168dc7fd925" translate="yes" xml:space="preserve">
          <source>This class can be extended by a custom resolver implementer to override some of the methods with library-specific code.</source>
          <target state="translated">Esta clase puede ser ampliada por un implementador de resolución personalizada para anular algunos de los métodos con código específico de la biblioteca.</target>
        </trans-unit>
        <trans-unit id="3106dd228ae8524f2463f5eb418ced8f6f5d8666" translate="yes" xml:space="preserve">
          <source>This class implements the methods defined by Ember.Test.Adapter for the QUnit testing framework.</source>
          <target state="translated">Esta clase implementa los métodos definidos por Ember.Test.Adapter para el marco de pruebas de QUnit.</target>
        </trans-unit>
        <trans-unit id="0865d5cdf769ef7337ee72ac5a5a24e52404e677" translate="yes" xml:space="preserve">
          <source>This class implements the methods defined by TestAdapter for the QUnit testing framework.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="320b5810ffa80935692e4a814095e9bb406c7d7d" translate="yes" xml:space="preserve">
          <source>This class will be extended by a persistence library which will override some of the methods with library-specific code.</source>
          <target state="translated">Esta clase se ampliará con una biblioteca de persistencia que anulará algunos de los métodos con código específico de la biblioteca.</target>
        </trans-unit>
        <trans-unit id="27a1bf954f28f9228362cbc78df0337d440875b7" translate="yes" xml:space="preserve">
          <source>This code example uses a feature of JavaScript called classes. Learn more with this &lt;a href=&quot;https://ponyfoo.com/articles/es6&quot;&gt;overview of the latest JavaScript features&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="674eb11f18e5896906fc06f889797fc9a66d2250" translate="yes" xml:space="preserve">
          <source>This code example uses the latest features in JavaScript, some of which you may not be familiar with. Learn more with this &lt;a href=&quot;https://ponyfoo.com/articles/es6&quot;&gt;overview of the newest JavaScript features&lt;/a&gt;.</source>
          <target state="translated">Este ejemplo de c&amp;oacute;digo utiliza las &amp;uacute;ltimas funciones de JavaScript, algunas de las cuales es posible que no conozca. Obtenga m&amp;aacute;s informaci&amp;oacute;n con esta &lt;a href=&quot;https://ponyfoo.com/articles/es6&quot;&gt;descripci&amp;oacute;n general de las funciones de JavaScript m&amp;aacute;s recientes&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9cbc5b39eb798eb51d77f552d2e0d841fdd661b2" translate="yes" xml:space="preserve">
          <source>This code includes the &lt;code&gt;&amp;lt;Avatar&amp;gt;&lt;/code&gt; component, which expects two &lt;em&gt;arguments&lt;/em&gt;: &lt;code&gt;@title&lt;/code&gt; and &lt;code&gt;@initial&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b058885d803d2851bab3b76256360f9c6b694f72" translate="yes" xml:space="preserve">
          <source>This code needs to run after the element is rendered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="741c3c5c9cbc26a8058ac14397f68ef356ac31ed" translate="yes" xml:space="preserve">
          <source>This command will create your application with French defined as the primary language on the &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt; element's &lt;code&gt;lang&lt;/code&gt; attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75f38d5fab184552fc6e1d3c8a9a21567a04ca7a" translate="yes" xml:space="preserve">
          <source>This component could then be invoked like so:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42747deec204b16bbd726cbdb8758b3c96383a2a" translate="yes" xml:space="preserve">
          <source>This component is invoked with a block:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6994d84354b5d5369f1efbb938cdaffbfff8abdb" translate="yes" xml:space="preserve">
          <source>This component is invoked with block params:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d11a1a27fac3bf7919d31fb41ebc66d539dfc70a" translate="yes" xml:space="preserve">
          <source>This component is invoked without a block:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51ba6f902cb3179e8a817fb66b9ce04fcc18109b" translate="yes" xml:space="preserve">
          <source>This component is invoked without block params:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f38bf488518f6eb94f480d68c4e9cd4e6005d41" translate="yes" xml:space="preserve">
          <source>This component would be invoked this way:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fc86456128b2bec3fcb1e1970d2427a1fdb6365" translate="yes" xml:space="preserve">
          <source>This component would render the following:</source>
          <target state="translated">Este componente haría lo siguiente:</target>
        </trans-unit>
        <trans-unit id="e42d35491e18c0eb8d5095f19ff074a10aab3fc5" translate="yes" xml:space="preserve">
          <source>This computed property would return a map describing these relationships, like this:</source>
          <target state="translated">Esta propiedad computarizada devolvería un mapa que describe estas relaciones,así:</target>
        </trans-unit>
        <trans-unit id="e801b088f01bc479b0a62d07e708e3f59c7fa4fc" translate="yes" xml:space="preserve">
          <source>This could be rewritten using the &lt;code&gt;{{did-insert}}&lt;/code&gt; and &lt;code&gt;{{will-destroy}}&lt;/code&gt; modifiers, if you install &lt;a href=&quot;https://github.com/emberjs/ember-render-modifiers&quot;&gt;ember-render-modifiers&lt;/a&gt; in your app:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41901a4413a6388d0163c06aa5caaeddb4abd187" translate="yes" xml:space="preserve">
          <source>This creates a controller file at &lt;code&gt;app/controllers/my-controller-name.js&lt;/code&gt;, and a unit test file at &lt;code&gt;tests/unit/controllers/my-controller-name-test.js&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec813caf1f669a427b25e6f09bf93ba65ce6c773" translate="yes" xml:space="preserve">
          <source>This creates a route file at &lt;code&gt;app/routes/route-name.js&lt;/code&gt;, a template for the route at &lt;code&gt;app/templates/route-name.hbs&lt;/code&gt;, and a unit test file at &lt;code&gt;tests/unit/routes/route-name-test.js&lt;/code&gt;. It also adds the route to the router.</source>
          <target state="translated">Esto crea un archivo de ruta en &lt;code&gt;app/routes/route-name.js&lt;/code&gt; , una plantilla para la ruta en &lt;code&gt;app/templates/route-name.hbs&lt;/code&gt; y un archivo de prueba de unidad en &lt;code&gt;tests/unit/routes/route-name-test.js&lt;/code&gt; . Tambi&amp;eacute;n agrega la ruta al enrutador.</target>
        </trans-unit>
        <trans-unit id="91ce519eb8ba59c7f3b8c3662743cb9f43554cc3" translate="yes" xml:space="preserve">
          <source>This declares &lt;code&gt;fullName&lt;/code&gt; to be a computed property, with &lt;code&gt;firstName&lt;/code&gt; and &lt;code&gt;lastName&lt;/code&gt; as the properties it depends on. The first time you access the &lt;code&gt;fullName&lt;/code&gt; property, the function will be called and the results will be cached. Subsequent access of &lt;code&gt;fullName&lt;/code&gt; will read from the cache without calling the function. Changing any of the dependent properties causes the cache to invalidate, so that the computed function runs again on the next access.</source>
          <target state="translated">Esto declara que &lt;code&gt;fullName&lt;/code&gt; es una propiedad calculada, con &lt;code&gt;firstName&lt;/code&gt; y &lt;code&gt;lastName&lt;/code&gt; como las propiedades de las que depende. La primera vez que acceda a la propiedad &lt;code&gt;fullName&lt;/code&gt; , se llamar&amp;aacute; a la funci&amp;oacute;n y los resultados se almacenar&amp;aacute;n en cach&amp;eacute;. El acceso posterior de &lt;code&gt;fullName&lt;/code&gt; leer&amp;aacute; desde el cach&amp;eacute; sin llamar a la funci&amp;oacute;n. Cambiar cualquiera de las propiedades dependientes hace que la cach&amp;eacute; se invalide, de modo que la funci&amp;oacute;n calculada se ejecuta nuevamente en el siguiente acceso.</target>
        </trans-unit>
        <trans-unit id="31bb2006f39cafcc9484e2a81a9f308f7180aef7" translate="yes" xml:space="preserve">
          <source>This defines a new &lt;code&gt;Person&lt;/code&gt; class with a &lt;code&gt;say()&lt;/code&gt; method.</source>
          <target state="translated">Esto define una nueva clase &lt;code&gt;Person&lt;/code&gt; con un m&amp;eacute;todo &lt;code&gt;say()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="116d968a917da2cb6719f721c279bfccee4349ce" translate="yes" xml:space="preserve">
          <source>This defines a new subclass of Ember.Object: &lt;code&gt;Person&lt;/code&gt;. It contains one method: &lt;code&gt;say()&lt;/code&gt;.</source>
          <target state="translated">Esto define una nueva subclase de Ember.Object: &lt;code&gt;Person&lt;/code&gt; . Contiene un m&amp;eacute;todo: &lt;code&gt;say()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="507be2b201a787f598f02ddf1f2d63fb67b3e63f" translate="yes" xml:space="preserve">
          <source>This defines a new subclass of EmberObject: &lt;code&gt;Person&lt;/code&gt;. It contains one method: &lt;code&gt;say()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38e367c32d9360c0c04a62f0fdb65d8584bf4d3e" translate="yes" xml:space="preserve">
          <source>This destroyables API exposes the basic building blocks for destruction:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4af4dccef2a80a69c041a6f95a959661b8e03a9" translate="yes" xml:space="preserve">
          <source>This doesn't usually affect application code because computed properties are almost always observed at the same time as they are fetched. For example, you get the value of a computed property, put it in DOM (or draw it with D3), and then observe it so you can update the DOM once the property changes.</source>
          <target state="translated">Esto no suele afectar al código de la aplicación porque las propiedades calculadas casi siempre se observan al mismo tiempo que se obtienen.Por ejemplo,se obtiene el valor de una propiedad calculada,se pone en DOM (o se dibuja con D3),y luego se observa para poder actualizar el DOM una vez que la propiedad cambia.</target>
        </trans-unit>
        <trans-unit id="784b0ed31150b193e479ab80ab41ebf62f83f1ec" translate="yes" xml:space="preserve">
          <source>This error would then be returned by an adapter's &lt;code&gt;handleResponse&lt;/code&gt; method:</source>
          <target state="translated">Este error luego ser&amp;iacute;a devuelto por el m&amp;eacute;todo &lt;code&gt;handleResponse&lt;/code&gt; de un adaptador :</target>
        </trans-unit>
        <trans-unit id="b6170d3568edf87d92c7c80728ddd942353f0af6" translate="yes" xml:space="preserve">
          <source>This event is triggered when the router completely exits this route. It is not executed when the model for the route changes.</source>
          <target state="translated">Este evento se desencadena cuando el router sale completamente de esta ruta.No se ejecuta cuando el modelo de la ruta cambia.</target>
        </trans-unit>
        <trans-unit id="4b0c96e516f34305bd6b72b775ae4db9e3545500" translate="yes" xml:space="preserve">
          <source>This event is triggered when the router enters the route. It is not executed when the model for the route changes.</source>
          <target state="translated">Este evento se desencadena cuando el router entra en la ruta.No se ejecuta cuando cambia el modelo de la ruta.</target>
        </trans-unit>
        <trans-unit id="d16fd1f0dc576c2612cded3cdb4e1f4f8b33fa5c" translate="yes" xml:space="preserve">
          <source>This example combines several Handlebars features to create a personalized experience for the user, something we couldn't do with just static HTML alone. We used the comment syntax (&lt;code&gt;{{!-- ... --}}&lt;/code&gt;) to leave a note for future developers, the double curly braces syntax (&lt;code&gt;{{...}}&lt;/code&gt;) to include dynamic values, as well as using the &lt;code&gt;{{#if}}...{{/if}}&lt;/code&gt; syntax to conditionally render some extra content.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cab4a8f298d62a398a20d8205ec2eba83599f69c" translate="yes" xml:space="preserve">
          <source>This example of a post model has many comments:</source>
          <target state="translated">Este ejemplo de un modelo de poste tiene muchos comentarios:</target>
        </trans-unit>
        <trans-unit id="9fe7ed9c19bb8a7f1cbe6b019c963a036d9478fe" translate="yes" xml:space="preserve">
          <source>This example of an author model belongs to a post model:</source>
          <target state="translated">Este ejemplo de un modelo de autor pertenece a un modelo de postproducción:</target>
        </trans-unit>
        <trans-unit id="7ccc911768f0da88e6ef9f3cf49eef3b432ed969" translate="yes" xml:space="preserve">
          <source>This example uses the &lt;code&gt;=&amp;gt;&lt;/code&gt; function syntax, which is a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions&quot;&gt;new ES2015 syntax for callback functions&lt;/a&gt; that provides a lexical &lt;code&gt;this&lt;/code&gt;. If this syntax is new, think of it as a function that has the same &lt;code&gt;this&lt;/code&gt; as the context it is defined in.</source>
          <target state="translated">Este ejemplo usa la sintaxis de funci&amp;oacute;n &lt;code&gt;=&amp;gt;&lt;/code&gt; , que es una &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions&quot;&gt;nueva sintaxis de ES2015 para funciones de devoluci&amp;oacute;n de llamada&lt;/a&gt; que proporciona un l&amp;eacute;xico &lt;code&gt;this&lt;/code&gt; . Si esta sintaxis es nuevo, pensar en ella como una funci&amp;oacute;n que tiene el mismo &lt;code&gt;this&lt;/code&gt; como el contexto en el que se define.</target>
        </trans-unit>
        <trans-unit id="71cde9139e41d931d3bdacfa5f2ca54241aeb5c1" translate="yes" xml:space="preserve">
          <source>This example will create a &lt;code&gt;posts&lt;/code&gt; property on the &lt;code&gt;post&lt;/code&gt; controller that looks up the &lt;code&gt;posts&lt;/code&gt; controller in the container, making it easy to reference other controllers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff609b107eeeef59c10a02a7f765526a45b3b82b" translate="yes" xml:space="preserve">
          <source>This example will create a &lt;code&gt;posts&lt;/code&gt; property on the &lt;code&gt;post&lt;/code&gt; controller that looks up the &lt;code&gt;posts&lt;/code&gt; controller in the container, making it easy to reference other controllers. This is functionally equivalent to:</source>
          <target state="translated">Este ejemplo crear&amp;aacute; una propiedad de &lt;code&gt;posts&lt;/code&gt; en el controlador de &lt;code&gt;post&lt;/code&gt; que busca el controlador de &lt;code&gt;posts&lt;/code&gt; en el contenedor, lo que facilita la referencia a otros controladores. Esto es funcionalmente equivalente a:</target>
        </trans-unit>
        <trans-unit id="49855cd9123878194ff56a8b6fd54aa27e05b647" translate="yes" xml:space="preserve">
          <source>This example will create an &lt;code&gt;authManager&lt;/code&gt; property on the application route that looks up the &lt;code&gt;auth&lt;/code&gt; service in the container, making it easily accessible in the &lt;code&gt;model&lt;/code&gt; hook.</source>
          <target state="translated">Este ejemplo crear&amp;aacute; una propiedad &lt;code&gt;authManager&lt;/code&gt; en la ruta de la aplicaci&amp;oacute;n que busca el servicio de &lt;code&gt;auth&lt;/code&gt; en el contenedor, haci&amp;eacute;ndolo f&amp;aacute;cilmente accesible en el enlace del &lt;code&gt;model&lt;/code&gt; o .</target>
        </trans-unit>
        <trans-unit id="6567df05d4a192c48cd4c99f719e2addb19ced5a" translate="yes" xml:space="preserve">
          <source>This example would create the font file in &lt;code&gt;dist/font-awesome/fonts/fontawesome-webfont.ttf&lt;/code&gt;.</source>
          <target state="translated">Este ejemplo crear&amp;iacute;a el archivo de fuente en &lt;code&gt;dist/font-awesome/fonts/fontawesome-webfont.ttf&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="487dfa2fb498fbeeecec5ffef779e77c25b4bf73" translate="yes" xml:space="preserve">
          <source>This feature is available for you to use throughout the Ember object model, although typical app developers are likely to use it infrequently. Since it changes expectations about behavior of properties, you should properly document its usage in each individual concatenated property (to not mislead your users to think they can override the property in a subclass).</source>
          <target state="translated">Esta característica está disponible para que la uses en todo el modelo de objetos Ember,aunque es probable que los desarrolladores de aplicaciones típicas la usen con poca frecuencia.Dado que cambia las expectativas sobre el comportamiento de las propiedades,deberías documentar adecuadamente su uso en cada propiedad concatenada individual (para no confundir a tus usuarios con la idea de que pueden anular la propiedad en una subclase).</target>
        </trans-unit>
        <trans-unit id="0e9e3a7edaabb385dc159a68dfa2582b6dd6bf05" translate="yes" xml:space="preserve">
          <source>This feature is available for you to use throughout the Ember object model, although typical app developers are likely to use it infrequently. Since it changes expectations about behavior of properties, you should properly document its usage in each individual merged property (to not mislead your users to think they can override the property in a subclass).</source>
          <target state="translated">Esta característica está disponible para que la uses en todo el modelo de objetos Ember,aunque es probable que los desarrolladores de aplicaciones típicas la usen con poca frecuencia.Dado que cambia las expectativas sobre el comportamiento de las propiedades,debería documentar adecuadamente su uso en cada propiedad individual fusionada (para no confundir a sus usuarios con la idea de que pueden anular la propiedad en una subclase).</target>
        </trans-unit>
        <trans-unit id="d8a914b8d45890e4d1608c302453e2c8af0f22d0" translate="yes" xml:space="preserve">
          <source>This feature is backed by &lt;a href=&quot;https://github.com/ai/browserslist&quot;&gt;Browserlist&lt;/a&gt; and &lt;a href=&quot;http://caniuse.com/&quot;&gt;Can I Use&lt;/a&gt;. These websites track usage stats of browsers, so you can use complex queries based on the user base of every browser.</source>
          <target state="translated">Esta funci&amp;oacute;n est&amp;aacute; respaldada por &lt;a href=&quot;https://github.com/ai/browserslist&quot;&gt;Browserlist&lt;/a&gt; y &lt;a href=&quot;http://caniuse.com/&quot;&gt;Can I Use&lt;/a&gt; . Estos sitios web rastrean las estad&amp;iacute;sticas de uso de los navegadores, por lo que puede utilizar consultas complejas basadas en la base de usuarios de cada navegador.</target>
        </trans-unit>
        <trans-unit id="e5f27096f81286c74af81139f2656aefdd7ce466" translate="yes" xml:space="preserve">
          <source>This form does not work with native decorators.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42e04b12a3e8406ffc417ced15bf24d60f4988fe" translate="yes" xml:space="preserve">
          <source>This form of &lt;code&gt;tracked&lt;/code&gt; also accepts an optional configuration object containing either an initial &lt;code&gt;value&lt;/code&gt; or an &lt;code&gt;initializer&lt;/code&gt; function (but not both).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90f88dc9d490b3e27b450d9ddbd71c7b8b636e53" translate="yes" xml:space="preserve">
          <source>This function asserts that all objects which have associated destructors or associated children have been destroyed at the time it is called. It is meant to be a low level hook that testing frameworks can use to hook into and validate that all destroyables have in fact been destroyed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03b7e29be2a6d0b1b9a7c23f78882cd55b024912" translate="yes" xml:space="preserve">
          <source>This function instructs the destroyable system to keep track of all destroyables (their children, destructors, etc). This enables a future usage of &lt;code&gt;assertDestroyablesDestroyed&lt;/code&gt; to be used to ensure that all destroyable tasks (registered destructors and associated children) have completed when &lt;code&gt;assertDestroyablesDestroyed&lt;/code&gt; is called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64538eeaa69495fbf439bdd1cfc24f0232fa5ecb" translate="yes" xml:space="preserve">
          <source>This function is used to associate a destroyable object with a parent. When the parent is destroyed, all registered children will also be destroyed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83f2bb14b91e952f8096d91d5ace072d883fe155" translate="yes" xml:space="preserve">
          <source>This function requires that &lt;code&gt;enableDestroyableTracking&lt;/code&gt; was called previously, and is only available in non-production builds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecc77b26d29bca9f5a5a76e216f7aa3707d9f628" translate="yes" xml:space="preserve">
          <source>This function should return negative number (e.g. &lt;code&gt;-1&lt;/code&gt;) when &lt;code&gt;itemA&lt;/code&gt; should come before &lt;code&gt;itemB&lt;/code&gt;. It should return positive number (e.g. &lt;code&gt;1&lt;/code&gt;) when &lt;code&gt;itemA&lt;/code&gt; should come after &lt;code&gt;itemB&lt;/code&gt;. If the &lt;code&gt;itemA&lt;/code&gt; and &lt;code&gt;itemB&lt;/code&gt; are equal this function should return &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">Esta funci&amp;oacute;n deber&amp;iacute;a devolver un n&amp;uacute;mero negativo (por ejemplo, &lt;code&gt;-1&lt;/code&gt; ) cuando &lt;code&gt;itemA&lt;/code&gt; deber&amp;iacute;a ir antes que &lt;code&gt;itemB&lt;/code&gt; . Deber&amp;iacute;a devolver un n&amp;uacute;mero positivo (por ejemplo, &lt;code&gt;1&lt;/code&gt; ) cuando el &lt;code&gt;itemA&lt;/code&gt; deber&amp;iacute;a ir despu&amp;eacute;s del &lt;code&gt;itemB&lt;/code&gt; . Si &lt;code&gt;itemA&lt;/code&gt; y &lt;code&gt;itemB&lt;/code&gt; son iguales, esta funci&amp;oacute;n deber&amp;iacute;a devolver &lt;code&gt;0&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f30316f73cbc0d1bc15eef0cddcc2f8521c3da8f" translate="yes" xml:space="preserve">
          <source>This function takes an optional 2nd argument that will become the &quot;this&quot; value for the callback. If this argument is passed then the 3rd argument becomes the function.</source>
          <target state="translated">Esta función toma un segundo argumento opcional que se convertirá en el valor &quot;este&quot; para la llamada de retorno.Si se pasa este argumento,el 3er argumento se convierte en la función.</target>
        </trans-unit>
        <trans-unit id="569c2d2cb1416ab5465654a84f35d8786fd5b227" translate="yes" xml:space="preserve">
          <source>This function takes an optional 2nd argument that will become the &quot;this&quot; value for the callback. When the target parameter is used the callback method becomes the third argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4f4cb957931dcfb537731cc8f27357bfd707b9e" translate="yes" xml:space="preserve">
          <source>This generates the following HTML:</source>
          <target state="translated">Esto genera el siguiente HTML:</target>
        </trans-unit>
        <trans-unit id="b56834d4d36dbad6e5fe72083562d1d2e8904eaf" translate="yes" xml:space="preserve">
          <source>This generates this file:</source>
          <target state="translated">Esto genera este archivo:</target>
        </trans-unit>
        <trans-unit id="acffd8287f5f7fa62edb1b3b419955bbdbbac080" translate="yes" xml:space="preserve">
          <source>This gives you the flexibility to compute a value &lt;em&gt;before&lt;/em&gt; it is passed in as an argument or an attribute of another.</source>
          <target state="translated">Esto le brinda la flexibilidad de calcular un valor &lt;em&gt;antes de&lt;/em&gt; que se pase como argumento o atributo de otro.</target>
        </trans-unit>
        <trans-unit id="4dbabbfbc43356c6224bdd446df2e419dd36b317" translate="yes" xml:space="preserve">
          <source>This guide assumes that you have read the &lt;a href=&quot;https://guides.emberjs.com/components/&quot;&gt;component guides&lt;/a&gt; and are familiar with how Ember components work. We'll cover components in more depth in this section. At the end, we'll present recommended component patterns.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3fcb44dfac184e5f4739827479344f6a392ecca" translate="yes" xml:space="preserve">
          <source>This guide doesn't intend to fully delve into all the different ways promises can be used, but if you'd like a more thorough introduction, take a look at the readme for &lt;a href=&quot;https://github.com/tildeio/rsvp.js&quot;&gt;RSVP&lt;/a&gt;, the promise library that Ember uses.</source>
          <target state="translated">Esta gu&amp;iacute;a no pretende profundizar en todas las diferentes formas en que se pueden usar las promesas, pero si desea una introducci&amp;oacute;n m&amp;aacute;s detallada, eche un vistazo al archivo L&amp;eacute;ame para &lt;a href=&quot;https://github.com/tildeio/rsvp.js&quot;&gt;RSVP&lt;/a&gt; , la biblioteca de promesas que usa Ember.</target>
        </trans-unit>
        <trans-unit id="519728bf5c4799871945553705bcdcc4b7233129" translate="yes" xml:space="preserve">
          <source>This guide is for developers who already know Ember, and who want to learn the new concepts introduced by Octane, Ember's first Edition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bf01cc260ad5042f4b62199661456049868a798" translate="yes" xml:space="preserve">
          <source>This guide will go over the basics of classes, along with two new features that are still in development in JavaScript: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes#Field_declarations&quot;&gt;class fields&lt;/a&gt; and &lt;a href=&quot;https://github.com/tc39/proposal-decorators&quot;&gt;decorators&lt;/a&gt;. We use these features in Ember because they are very useful and make writing class code much easier, and they have made it far enough along the process of being added to JavaScript to depend on in production applications.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0e66094f6d943792b41d17683719c61a494f26d" translate="yes" xml:space="preserve">
          <source>This guide will teach you how to build a simple app using Ember from scratch.</source>
          <target state="translated">Esta guía te enseñará a construir una aplicación sencilla usando Ember desde cero.</target>
        </trans-unit>
        <trans-unit id="30d220e5292c20d9ac340b310df750f8c7cfdd17" translate="yes" xml:space="preserve">
          <source>This happens if you are using a version of Ember &amp;lt; 1.3.</source>
          <target state="translated">Esto sucede si est&amp;aacute; utilizando una versi&amp;oacute;n de Ember &amp;lt;1.3.</target>
        </trans-unit>
        <trans-unit id="02c316553c03e6bb16963930257b1149ad1c5f21" translate="yes" xml:space="preserve">
          <source>This has the effect of providing a default template when using a component in the non-block form but providing yielded values for use with block params when using a block expression.</source>
          <target state="translated">Esto tiene el efecto de proporcionar una plantilla por defecto cuando se utiliza un componente en la forma no bloqueada pero proporcionando valores cedidos para su uso con parámetros de bloque cuando se utiliza una expresión de bloque.</target>
        </trans-unit>
        <trans-unit id="d69577f3c578c6eabf0c4658463bd74f9978c696" translate="yes" xml:space="preserve">
          <source>This helper can later be called without arguments because it will be called with &lt;code&gt;app&lt;/code&gt; as the first parameter.</source>
          <target state="translated">Este ayudante se puede llamar m&amp;aacute;s tarde sin argumentos porque se llamar&amp;aacute; con la &lt;code&gt;app&lt;/code&gt; como primer par&amp;aacute;metro.</target>
        </trans-unit>
        <trans-unit id="9980bdea2787a4277e138ccf5100590320a94254" translate="yes" xml:space="preserve">
          <source>This helper has two forms, block and inline.</source>
          <target state="translated">Este ayudante tiene dos formas,bloque y en línea.</target>
        </trans-unit>
        <trans-unit id="78766705ae99c240131efc47a151aeeb110c957c" translate="yes" xml:space="preserve">
          <source>This helper returns a new property descriptor that wraps the passed computed property function. You can use this helper to define properties with mixins or via &lt;code&gt;Ember.defineProperty()&lt;/code&gt;.</source>
          <target state="translated">Este ayudante devuelve un nuevo descriptor de propiedad que envuelve la funci&amp;oacute;n de propiedad calculada pasada. Puede utilizar este ayudante para definir propiedades con mixins o mediante &lt;code&gt;Ember.defineProperty()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="be36723a46b5b249d9e1dbdbd2ab416928f233bd" translate="yes" xml:space="preserve">
          <source>This helper returns a new property descriptor that wraps the passed computed property function. You can use this helper to define properties with native decorator syntax, mixins, or via &lt;code&gt;defineProperty()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10ab382783ea15303c4f3ab1e310527699744871" translate="yes" xml:space="preserve">
          <source>This helper will output a value of &lt;code&gt;6&lt;/code&gt;.</source>
          <target state="translated">Este ayudante generar&amp;aacute; un valor de &lt;code&gt;6&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6c987e5674d133f7c1af95e69f41a85eb2745738" translate="yes" xml:space="preserve">
          <source>This hook defers the readiness of the application, so that you can start the app when your tests are ready to run. It also sets the router's location to 'none', so that the window's location will not be modified (preventing both accidental leaking of state between tests and interference with your testing framework). &lt;code&gt;setupForTesting&lt;/code&gt; should only be called after setting a custom &lt;code&gt;router&lt;/code&gt; class (for example &lt;code&gt;App.Router = Router.extend(&lt;/code&gt;).</source>
          <target state="translated">Este gancho difiere la preparaci&amp;oacute;n de la aplicaci&amp;oacute;n, de modo que pueda iniciar la aplicaci&amp;oacute;n cuando sus pruebas est&amp;eacute;n listas para ejecutarse. Tambi&amp;eacute;n establece la ubicaci&amp;oacute;n del enrutador en 'ninguno', de modo que la ubicaci&amp;oacute;n de la ventana no se modificar&amp;aacute; (evitando tanto la fuga accidental de estado entre las pruebas como la interferencia con su marco de prueba). &lt;code&gt;setupForTesting&lt;/code&gt; solo debe invocarse despu&amp;eacute;s de configurar una clase de &lt;code&gt;router&lt;/code&gt; personalizada (por ejemplo, &lt;code&gt;App.Router = Router.extend(&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="9f3850932b6cdc771f8eba24e4c0356c191dabae" translate="yes" xml:space="preserve">
          <source>This hook follows the asynchronous/promise semantics described in the documentation for &lt;code&gt;beforeModel&lt;/code&gt;. In particular, if a promise returned from &lt;code&gt;model&lt;/code&gt; fails, the error will be handled by the &lt;code&gt;error&lt;/code&gt; hook on &lt;code&gt;Ember.Route&lt;/code&gt;.</source>
          <target state="translated">Este gancho sigue la sem&amp;aacute;ntica asincr&amp;oacute;nica / de promesa descrita en la documentaci&amp;oacute;n de &lt;code&gt;beforeModel&lt;/code&gt; . En particular, si una promesa devuelta por el &lt;code&gt;model&lt;/code&gt; o falla, el error ser&amp;aacute; manejado por el gancho de &lt;code&gt;error&lt;/code&gt; en &lt;code&gt;Ember.Route&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4516c5380128a6d4a51ce2dd886f6a079aeafb21" translate="yes" xml:space="preserve">
          <source>This hook follows the asynchronous/promise semantics described in the documentation for &lt;code&gt;beforeModel&lt;/code&gt;. In particular, if a promise returned from &lt;code&gt;model&lt;/code&gt; fails, the error will be handled by the &lt;code&gt;error&lt;/code&gt; hook on &lt;code&gt;Route&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff4a499b1734e2648c668e8abe544aa5bbb1bac0" translate="yes" xml:space="preserve">
          <source>This hook has the following timing semantics:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2c3771a5c2a2c87e58d1d7c291c46a9fa428f30" translate="yes" xml:space="preserve">
          <source>This hook is &lt;em&gt;not&lt;/em&gt; autotracked - changes to tracked values used within this hook will &lt;em&gt;not&lt;/em&gt; result in a call to any of the other lifecycle hooks. This is because it is unclear what should happen if it invalidates, and rather than make a decision at this point, the initial API is aiming to allow as much expressivity as possible. This could change in the future with changes to capabilities and their behaviors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8ee41feb9ddc3fa7957fac4385c3669d97c9aa0" translate="yes" xml:space="preserve">
          <source>This hook is called after this route's model has resolved. It follows identical async/promise semantics to &lt;code&gt;beforeModel&lt;/code&gt; but is provided the route's resolved model in addition to the &lt;code&gt;transition&lt;/code&gt;, and is therefore suited to performing logic that can only take place after the model has already resolved.</source>
          <target state="translated">Este gancho se llama despu&amp;eacute;s de que se haya resuelto el modelo de esta ruta. Sigue una sem&amp;aacute;ntica as&amp;iacute;ncrona / promesa id&amp;eacute;ntica a &lt;code&gt;beforeModel&lt;/code&gt; , pero se proporciona el modelo resuelto de la ruta adem&amp;aacute;s de la &lt;code&gt;transition&lt;/code&gt; y, por lo tanto, es adecuado para realizar la l&amp;oacute;gica que solo puede tener lugar despu&amp;eacute;s de que el modelo ya se haya resuelto.</target>
        </trans-unit>
        <trans-unit id="91fc7822f66113746c2dc6a2c52016d2d0d0b2ea" translate="yes" xml:space="preserve">
          <source>This hook is called when the value is requested from the helper (e.g. when the template is rendering and the helper value is needed). The hook is autotracked, and will rerun whenever any tracked values used inside of it are updated. Otherwise it does not rerun.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eabb2494e26202e5215d9e0f9642c252667f7896" translate="yes" xml:space="preserve">
          <source>This hook is executed when the router completely exits this route. It is not executed when the model for the route changes.</source>
          <target state="translated">Este gancho se ejecuta cuando el router sale completamente de esta ruta.No se ejecuta cuando el modelo de la ruta cambia.</target>
        </trans-unit>
        <trans-unit id="ab287814fce6cc5b5c9f8e315d84a3c408dbd520" translate="yes" xml:space="preserve">
          <source>This hook is executed when the router enters the route. It is not executed when the model for the route changes.</source>
          <target state="translated">Este gancho se ejecuta cuando el router entra en la ruta.No se ejecuta cuando el modelo de la ruta cambia.</target>
        </trans-unit>
        <trans-unit id="af76bb7c096814efef9043709f61f4f387940cbb" translate="yes" xml:space="preserve">
          <source>This hook is only called for helpers with the &lt;code&gt;hasScheduledEffect&lt;/code&gt; capability enabled. This hook is also not called in SSR currently, though this could be added as a capability in the future. It has the following timing semantics:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27f0d6018950fffa85b3cd23c210ac2ced77d849" translate="yes" xml:space="preserve">
          <source>This hook is only called for helpers with the &lt;code&gt;hasValue&lt;/code&gt; capability enabled. This hook has the following timing semantics:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ed5112cc8742b9d70e3846b62e3c7a4f35140f1" translate="yes" xml:space="preserve">
          <source>This hook is provided the current &lt;code&gt;transition&lt;/code&gt; attempt as a parameter, which can be used to &lt;code&gt;.abort()&lt;/code&gt; the transition, save it for a later &lt;code&gt;.retry()&lt;/code&gt;, or retrieve values set on it from a previous hook. You can also just call &lt;code&gt;this.transitionTo&lt;/code&gt; to another route to implicitly abort the &lt;code&gt;transition&lt;/code&gt;.</source>
          <target state="translated">Este gancho se proporciona el intento de &lt;code&gt;transition&lt;/code&gt; actual como par&amp;aacute;metro, que se puede usar para &lt;code&gt;.abort()&lt;/code&gt; la transici&amp;oacute;n, guardarlo para un &lt;code&gt;.retry()&lt;/code&gt; posterior o recuperar valores establecidos en un gancho anterior. Tambi&amp;eacute;n puede simplemente llamar &lt;code&gt;this.transitionTo&lt;/code&gt; a otra ruta para abortar impl&amp;iacute;citamente la &lt;code&gt;transition&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9c61f00c51ff62a7e2fe708f7669b39e4f7e010f" translate="yes" xml:space="preserve">
          <source>This hook is scheduled to be called some time after render and prior to paint. There is not a guaranteed, 1-to-1 relationship between a render pass and this hook firing. For instance, multiple render passes could occur, and the hook may only trigger once. It may also never trigger if it was dirtied in one render pass and then destroyed in the next.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03eecee84bea910e6f484a02d840e085770096a0" translate="yes" xml:space="preserve">
          <source>This hook is the first of the route entry validation hooks called when an attempt is made to transition into a route or one of its children. It is called before &lt;code&gt;model&lt;/code&gt; and &lt;code&gt;afterModel&lt;/code&gt;, and is appropriate for cases when:</source>
          <target state="translated">Este gancho es el primero de los ganchos de validaci&amp;oacute;n de entrada de ruta llamados cuando se intenta realizar la transici&amp;oacute;n a una ruta o uno de sus elementos secundarios. Se llama before &lt;code&gt;model&lt;/code&gt; y &lt;code&gt;afterModel&lt;/code&gt; , y es apropiado para casos en los que:</target>
        </trans-unit>
        <trans-unit id="77e8a262fef81666b48b6131a8b3be017a044f7d" translate="yes" xml:space="preserve">
          <source>This hook passes the class being set up, as well as the key and value being defined. So, for example, when the user does this:</source>
          <target state="translated">Este gancho pasa la clase que se está configurando,así como la clave y el valor que se está definiendo.Así,por ejemplo,cuando el usuario hace esto:</target>
        </trans-unit>
        <trans-unit id="b11aa29d15777ceef5c81c577245a76748891249" translate="yes" xml:space="preserve">
          <source>This hook would be called with &quot;parent&quot; as the key and the computed property returned by &lt;code&gt;DS.belongsTo&lt;/code&gt; as the value.</source>
          <target state="translated">Este gancho se llamar&amp;iacute;a con &quot;parent&quot; como clave y la propiedad calculada devuelta por &lt;code&gt;DS.belongsTo&lt;/code&gt; como valor.</target>
        </trans-unit>
        <trans-unit id="3fc7a1f064649acf207da18e9b59a14b7d7c2ed5" translate="yes" xml:space="preserve">
          <source>This illustrates that once you change a query param, it is stored and tied to the model loaded into the route.</source>
          <target state="translated">Esto ilustra que una vez que se cambia un parámetro de consulta,se almacena y se vincula al modelo cargado en la ruta.</target>
        </trans-unit>
        <trans-unit id="94954009755f7b62385acf4ff8569cb1a9193610" translate="yes" xml:space="preserve">
          <source>This implementation groups together records that have the same base URL but differing ids. For example &lt;code&gt;/comments/1&lt;/code&gt; and &lt;code&gt;/comments/2&lt;/code&gt; will be grouped together because we know findMany can coalesce them together as &lt;code&gt;/comments?ids[]=1&amp;amp;ids[]=2&lt;/code&gt;</source>
          <target state="translated">Esta implementaci&amp;oacute;n agrupa los registros que tienen la misma URL base pero diferentes ID. Por ejemplo, &lt;code&gt;/comments/1&lt;/code&gt; y &lt;code&gt;/comments/2&lt;/code&gt; se agrupar&amp;aacute;n porque sabemos que findMany puede fusionarlos como &lt;code&gt;/comments?ids[]=1&amp;amp;ids[]=2&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="43a57a8aa1cac3820168c45cb5637c10d424bc60" translate="yes" xml:space="preserve">
          <source>This initializer will now have the name &lt;code&gt;my-logger&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc9ad364e420bf1a681684a934117cc1159d58e2" translate="yes" xml:space="preserve">
          <source>This injects the shopping cart service into the component and makes it available as the &lt;code&gt;cart&lt;/code&gt; property.</source>
          <target state="translated">Esto inyecta el servicio de carrito de compras en el componente y lo pone a disposici&amp;oacute;n como propiedad del &lt;code&gt;cart&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="32952c300d761f7fe44ea070c8e1f6c98890254d" translate="yes" xml:space="preserve">
          <source>This injects the shopping cart service into the component and makes it available as the &lt;code&gt;shoppingCart&lt;/code&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="918384a3831377bfd82a1b852b04244ee7f5702c" translate="yes" xml:space="preserve">
          <source>This injects the test helpers into the &lt;code&gt;helperContainer&lt;/code&gt; object. If an object is provided it will be used as the helperContainer. If &lt;code&gt;helperContainer&lt;/code&gt; is not set it will default to &lt;code&gt;window&lt;/code&gt;. If a function of the same name has already been defined it will be cached (so that it can be reset if the helper is removed with &lt;code&gt;unregisterHelper&lt;/code&gt; or &lt;code&gt;removeTestHelpers&lt;/code&gt;).</source>
          <target state="translated">Esto inyecta los ayudantes de prueba en el objeto &lt;code&gt;helperContainer&lt;/code&gt; . Si se proporciona un objeto, se utilizar&amp;aacute; como helperContainer. Si no se establece &lt;code&gt;helperContainer&lt;/code&gt; , el valor predeterminado ser&amp;aacute; &lt;code&gt;window&lt;/code&gt; . Si ya se ha definido una funci&amp;oacute;n con el mismo nombre, se almacenar&amp;aacute; en cach&amp;eacute; (de modo que se pueda restablecer si el asistente se elimina con &lt;code&gt;unregisterHelper&lt;/code&gt; o &lt;code&gt;removeTestHelpers&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="f723a6881e5d6d4df77092077259b1e266ea97bd" translate="yes" xml:space="preserve">
          <source>This is a concept that typically means providing JavaScript which tests for features that are missing (prototypes not defined, etc) and &quot;fills&quot; them by providing an implementation.</source>
          <target state="translated">Este es un concepto que típicamente significa proporcionar JavaScript que prueba las características que faltan (prototipos no definidos,etc.)y las &quot;rellena&quot; proporcionando una implementación.</target>
        </trans-unit>
        <trans-unit id="b176511dc82a11995524ba7ee6d3eaf35d75f683" translate="yes" xml:space="preserve">
          <source>This is a container for an assortment of testing related functionality:</source>
          <target state="translated">Este es un contenedor para un surtido de funciones relacionadas con las pruebas:</target>
        </trans-unit>
        <trans-unit id="9c26132c65fad6b850f1d387d6b3b5c7d82263a8" translate="yes" xml:space="preserve">
          <source>This is a convenient alias for &lt;code&gt;Promise.all&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a63f64e440a57d49236d809d5040ac1f45e1e988" translate="yes" xml:space="preserve">
          <source>This is a convenient alias for &lt;code&gt;Promise.race&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dbd81e39a9935f1225a812f3c6adac63a0c0789" translate="yes" xml:space="preserve">
          <source>This is a convenient alias for &lt;code&gt;Promise.reject&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7154e612ed9db7397dd7cf0cf599eeb3ccfdf549" translate="yes" xml:space="preserve">
          <source>This is a convenient alias for &lt;code&gt;Promise.resolve&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="822a2e55a49b0a3ce1602c9de4a12deec4027902" translate="yes" xml:space="preserve">
          <source>This is a convenient alias for &lt;code&gt;RSVP.Promise.all&lt;/code&gt;.</source>
          <target state="translated">Este es un alias conveniente para &lt;code&gt;RSVP.Promise.all&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a49db288a4492f38be2239b9a4aecd51132e4df3" translate="yes" xml:space="preserve">
          <source>This is a convenient alias for &lt;code&gt;RSVP.Promise.race&lt;/code&gt;.</source>
          <target state="translated">Este es un alias conveniente para &lt;code&gt;RSVP.Promise.race&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c5311bad197bc2e95ae7fce155d89195d60075c0" translate="yes" xml:space="preserve">
          <source>This is a convenient alias for &lt;code&gt;RSVP.Promise.reject&lt;/code&gt;.</source>
          <target state="translated">Este es un alias conveniente para &lt;code&gt;RSVP.Promise.reject&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="302b1ad84c9db80e1b5c3df3fe7952f0681a2eae" translate="yes" xml:space="preserve">
          <source>This is a convenient alias for &lt;code&gt;RSVP.Promise.resolve&lt;/code&gt;.</source>
          <target state="translated">Este es un alias conveniente para &lt;code&gt;RSVP.Promise.resolve&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4971ebf34a654ca424132ff11439c59713fb5e6b" translate="yes" xml:space="preserve">
          <source>This is a great way to use the parent context to load something that you want. Using &lt;code&gt;paramsFor&lt;/code&gt; will also give you the query params defined on that route's controller. This method could also be used to look up the current route's parameters from an action or another method on the route, and in that case we have a shortcut: &lt;code&gt;this.paramsFor(this.routeName)&lt;/code&gt;.</source>
          <target state="translated">Esta es una excelente manera de usar el contexto principal para cargar algo que desee. El uso de &lt;code&gt;paramsFor&lt;/code&gt; tambi&amp;eacute;n le dar&amp;aacute; los par&amp;aacute;metros de consulta definidos en el controlador de esa ruta. Este m&amp;eacute;todo tambi&amp;eacute;n podr&amp;iacute;a usarse para buscar los par&amp;aacute;metros de la ruta actual a partir de una acci&amp;oacute;n u otro m&amp;eacute;todo en la ruta, y en ese caso tenemos un acceso directo: &lt;code&gt;this.paramsFor(this.routeName)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="55cd0539422e5b82b20c0cc8f62bbdbb7052339e" translate="yes" xml:space="preserve">
          <source>This is a helper to be used in conjunction with the link-to helper. It will supply url query parameters to the target route.</source>
          <target state="translated">Este es un ayudante para ser usado en conjunto con el ayudante de enlace.Suministrará los parámetros de consulta de la url a la ruta objetivo.</target>
        </trans-unit>
        <trans-unit id="05915bea473f3b9dca751ce1d38f16283b7858bd" translate="yes" xml:space="preserve">
          <source>This is a more semantically meaningful alias of &lt;code&gt;computed.oneWay&lt;/code&gt;, whose name is somewhat ambiguous as to which direction the data flows.</source>
          <target state="translated">Este es un alias sem&amp;aacute;nticamente m&amp;aacute;s significativo de &lt;code&gt;computed.oneWay&lt;/code&gt; , cuyo nombre es algo ambiguo en cuanto a la direcci&amp;oacute;n en la que fluyen los datos.</target>
        </trans-unit>
        <trans-unit id="6d8df01af0767ac4f864bdb935d5fd81c46a68ea" translate="yes" xml:space="preserve">
          <source>This is a replacement for &lt;code&gt;{{action}}&lt;/code&gt; when it is used as a modifier:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76ffabe250c4850f0de1f943c4559093a6f83c75" translate="yes" xml:space="preserve">
          <source>This is a replacement for passing parameters to the &lt;code&gt;{{action}}&lt;/code&gt; modifier or helper:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46a94c8f55595ad1f21083bd7fb3718a4dbf03a0" translate="yes" xml:space="preserve">
          <source>This is a stamp for the Ember Inspector to differentiate between the versions to be able to support older versions too.</source>
          <target state="translated">Este es un sello para que el Inspector Ember diferencie entre las versiones para poder soportar también las versiones más antiguas.</target>
        </trans-unit>
        <trans-unit id="ec2df623b6ecc9f4e570340c54e42cd3266c977a" translate="yes" xml:space="preserve">
          <source>This is actually used internally by the &lt;code&gt;keyEvent&lt;/code&gt; helper like so:</source>
          <target state="translated">En realidad, esto es usado internamente por el asistente &lt;code&gt;keyEvent&lt;/code&gt; as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="cae98a4a7769d71f37361f60ba843a38154b60b5" translate="yes" xml:space="preserve">
          <source>This is also useful when working with older Ember code which has not yet been updated to tracked properties. If you're unsure, you can use &lt;code&gt;get&lt;/code&gt; and &lt;code&gt;set&lt;/code&gt; to be safe.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="308ba443f81e87e775aa3ae34fbf288a703e8c5c" translate="yes" xml:space="preserve">
          <source>This is an interface class that exists purely to document the available options; you do not need to construct it manually. Simply pass a regular JavaScript object containing the desired options into methods that require one of these options object:</source>
          <target state="translated">Se trata de una clase de interfaz que existe únicamente para documentar las opciones disponibles;no es necesario construirla manualmente.Simplemente pasa un objeto JavaScript normal que contenga las opciones deseadas a los métodos que requieran uno de estos objetos de opciones:</target>
        </trans-unit>
        <trans-unit id="b98c4393def85ba88d54bfd3c7d44f84bd97ad65" translate="yes" xml:space="preserve">
          <source>This is considered best practice, since it means that methods will be bound correctly no matter where they are used. By contrast, the &lt;code&gt;{{action}}&lt;/code&gt; helper and modifier can also be used to bind context, but it will be required for every usage of the method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52b5acc36d459304c86eb8b1da50a28c5a055843" translate="yes" xml:space="preserve">
          <source>This is equivalent to having the following entry in &lt;code&gt;app/router.js&lt;/code&gt; file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b6d36748b25d028f4bf8ba16c564fda1c4ec965" translate="yes" xml:space="preserve">
          <source>This is especially useful if you are passing properties to a component that receives a lot of options and you want to clean up the invocation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="306dec7bd8c7954e508c1735c09535d1dd8b815e" translate="yes" xml:space="preserve">
          <source>This is especially useful when you depend on properties of an object, since it allows you to replace:</source>
          <target state="translated">Esto es especialmente útil cuando se depende de las propiedades de un objeto,ya que permite reemplazarlas:</target>
        </trans-unit>
        <trans-unit id="c46a6c0ebb4282802f95e4e63e750434a46d6914" translate="yes" xml:space="preserve">
          <source>This is exactly equivalent to the &lt;code&gt;format-currency&lt;/code&gt; example above. You can think of the function version as a shorthand for the longer class form if it does not require dependency injection.</source>
          <target state="translated">Esto es exactamente equivalente al ejemplo de &lt;code&gt;format-currency&lt;/code&gt; anterior. Puede pensar en la versi&amp;oacute;n de la funci&amp;oacute;n como una forma abreviada de la forma de clase m&amp;aacute;s larga si no requiere inyecci&amp;oacute;n de dependencia.</target>
        </trans-unit>
        <trans-unit id="80b9a9d98da12b68b0c4b2e6f44b4b81fb921c26" translate="yes" xml:space="preserve">
          <source>This is generally used internally from the acceptance/integration test infrastructure.</source>
          <target state="translated">Generalmente se utiliza internamente desde la infraestructura de pruebas de aceptación/integración.</target>
        </trans-unit>
        <trans-unit id="a02623baf101f6c1f72c8f3ddff6f2d7a7b7ddbb" translate="yes" xml:space="preserve">
          <source>This is guaranteed to work because the parent route is loaded. But if you tried to do &lt;code&gt;paramsFor&lt;/code&gt; on a sibling route, you wouldn't have the results you expected.</source>
          <target state="translated">Se garantiza que esto funciona porque la ruta principal est&amp;aacute; cargada. Pero si intentara hacer &lt;code&gt;paramsFor&lt;/code&gt; en una ruta de hermanos, no obtendr&amp;iacute;a los resultados que esperaba.</target>
        </trans-unit>
        <trans-unit id="33576dec1bb55808eaf77c0499cb0de647da565d" translate="yes" xml:space="preserve">
          <source>This is just one example of how developers can use HTML's built in features to improve accessibility and reduce the need for custom code. Read more here: &lt;a href=&quot;https://developer.paciellogroup.com/blog/2011/04/html5-accessibility-chops-just-use-a-button/&quot;&gt;&quot;Just use a button&quot;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa36d77986525618ad7065da5d31723d28369a95" translate="yes" xml:space="preserve">
          <source>This is most often used as the return value for the helper functions (see 'click', 'fillIn','visit',etc). However, there is a method to register a test helper which utilizes this method without the need to actually call &lt;code&gt;wait()&lt;/code&gt; in your helpers.</source>
          <target state="translated">Esto se usa con mayor frecuencia como el valor de retorno para las funciones auxiliares (ver 'clic', 'llenar', 'visitar', etc.). Sin embargo, existe un m&amp;eacute;todo para registrar un ayudante de prueba que utiliza este m&amp;eacute;todo sin la necesidad de llamar a &lt;code&gt;wait()&lt;/code&gt; en sus ayudantes.</target>
        </trans-unit>
        <trans-unit id="e012518624cc2f89b04d821689a88883b2eadb7c" translate="yes" xml:space="preserve">
          <source>This is not an Ember application</source>
          <target state="translated">Esta no es una aplicación Ember</target>
        </trans-unit>
        <trans-unit id="c62cbb1d5e63e1e37b85a51686c003fd0001230a" translate="yes" xml:space="preserve">
          <source>This is not just a performance optimization. If an attribute has not changed, it is important not to clobber the element's &quot;hidden state&quot;. For example, if you set an input's &lt;code&gt;value&lt;/code&gt; to the same value as before, it will clobber selection state and cursor position. In other words, setting an attribute is not &lt;strong&gt;always&lt;/strong&gt; idempotent.</source>
          <target state="translated">Esto no es solo una optimizaci&amp;oacute;n del rendimiento. Si un atributo no ha cambiado, es importante no golpear el &quot;estado oculto&quot; del elemento. Por ejemplo, si establece el &lt;code&gt;value&lt;/code&gt; una entrada en el mismo valor que antes, chocar&amp;aacute; con el estado de selecci&amp;oacute;n y la posici&amp;oacute;n del cursor. En otras palabras, establecer un atributo no &lt;strong&gt;siempre es&lt;/strong&gt; idempotente.</target>
        </trans-unit>
        <trans-unit id="2539c270f8689ccfed557582f8b1c7e030447925" translate="yes" xml:space="preserve">
          <source>This is one of the primitives you must implement to support &lt;code&gt;Array&lt;/code&gt;. You should replace amt objects started at idx with the objects in the passed array. You should also call &lt;code&gt;this.arrayContentDidChange()&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfe703d974f911cefa2119330aa9316aad45d5a9" translate="yes" xml:space="preserve">
          <source>This is one of the primitives you must implement to support &lt;code&gt;Ember.Array&lt;/code&gt;. If your object supports retrieving the value of an array item using &lt;code&gt;get()&lt;/code&gt; (i.e. &lt;code&gt;myArray.get(0)&lt;/code&gt;), then you do not need to implement this method yourself.</source>
          <target state="translated">Esta es una de las primitivas que debe implementar para admitir &lt;code&gt;Ember.Array&lt;/code&gt; . Si su objeto admite recuperar el valor de un elemento de matriz usando &lt;code&gt;get()&lt;/code&gt; (es decir, &lt;code&gt;myArray.get(0)&lt;/code&gt; ), entonces no es necesario que implemente este m&amp;eacute;todo usted mismo.</target>
        </trans-unit>
        <trans-unit id="e9a9fd73a9f803dbe1cc43144f590d9b54349043" translate="yes" xml:space="preserve">
          <source>This is one of the primitives you must implement to support &lt;code&gt;Ember.Array&lt;/code&gt;. You should replace amt objects started at idx with the objects in the passed array. You should also call &lt;code&gt;this.enumerableContentDidChange()&lt;/code&gt;</source>
          <target state="translated">Esta es una de las primitivas que debe implementar para admitir &lt;code&gt;Ember.Array&lt;/code&gt; . Debe reemplazar los objetos amt iniciados en idx con los objetos de la matriz pasada. Tambi&amp;eacute;n debe llamar a &lt;code&gt;this.enumerableContentDidChange()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a74aba5bf2dd635bf9b1cda3fbe336d3243b3f69" translate="yes" xml:space="preserve">
          <source>This is one of the primitives you must implement to support &lt;code&gt;EmberArray&lt;/code&gt;. If your object supports retrieving the value of an array item using &lt;code&gt;get()&lt;/code&gt; (i.e. &lt;code&gt;myArray.get(0)&lt;/code&gt;), then you do not need to implement this method yourself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f356f63243afe37729165e88f111f35dc1627c0e" translate="yes" xml:space="preserve">
          <source>This is particularly useful for polymorphic relationships where records don't share the same table and the &lt;code&gt;id&lt;/code&gt; is not enough information.</source>
          <target state="translated">Esto es particularmente &amp;uacute;til para relaciones polim&amp;oacute;rficas donde los registros no comparten la misma tabla y la &lt;code&gt;id&lt;/code&gt; entificaci&amp;oacute;n no es suficiente informaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="202d339791e806b1e70147736eb9208a5f3911be" translate="yes" xml:space="preserve">
          <source>This is primarily used when syncing bindings, which may try to update after an object has been destroyed.</source>
          <target state="translated">Esto se utiliza principalmente cuando se sincronizan los enlaces,que pueden tratar de actualizarse después de que un objeto haya sido destruido.</target>
        </trans-unit>
        <trans-unit id="daeaceef80ff296a12644de6285774c59ae74c52" translate="yes" xml:space="preserve">
          <source>This is the core method used to register an observer for a property.</source>
          <target state="translated">Este es el método básico utilizado para registrar a un observador de una propiedad.</target>
        </trans-unit>
        <trans-unit id="bac9760d303007d38afed39bbecd73ad9b39f5bb" translate="yes" xml:space="preserve">
          <source>This is the element that will be passed to the Application's, &lt;code&gt;eventDispatcher&lt;/code&gt;, which sets up the listeners for event delegation. Every view in your application should be a child of the element you specify here.</source>
          <target state="translated">Este es el elemento que se pasar&amp;aacute; a la aplicaci&amp;oacute;n, &lt;code&gt;eventDispatcher&lt;/code&gt; , que configura los oyentes para la delegaci&amp;oacute;n de eventos. Cada vista en su aplicaci&amp;oacute;n debe ser un elemento secundario del elemento que especifique aqu&amp;iacute;.</target>
        </trans-unit>
        <trans-unit id="3a569fa746c8405832bed1c05febae66d94a94fc" translate="yes" xml:space="preserve">
          <source>This is the extent to which Ember.js enhances native prototypes. We have carefully weighed the trade-offs involved with changing these prototypes, and recommend that most Ember.js developers use them. These extensions significantly reduce the amount of boilerplate code that must be typed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="decc32c6cf9850c53e2f6bac9e782138a3406ae1" translate="yes" xml:space="preserve">
          <source>This is the extent to which Ember.js enhances native prototypes. We have carefully weighed the tradeoffs involved with changing these prototypes, and recommend that most Ember.js developers use them. These extensions significantly reduce the amount of boilerplate code that must be typed.</source>
          <target state="translated">Esta es la medida en que Ember.js mejora los prototipos nativos.Hemos sopesado cuidadosamente las ventajas y desventajas de cambiar estos prototipos,y recomendamos que la mayoría de los desarrolladores de Ember.js los utilicen.Estas extensiones reducen significativamente la cantidad de código de calderilla que debe ser escrito.</target>
        </trans-unit>
        <trans-unit id="94928a1a6bed0b1e582ca40e9000c55b3eb6631f" translate="yes" xml:space="preserve">
          <source>This is the handler for the special array content property. If you get this property, it will return this. If you set this property to a new array, it will replace the current content.</source>
          <target state="translated">Este es el manejador de la propiedad de contenido especial de la matriz.Si obtienes esta propiedad,te devolverá esto.Si pones esta propiedad en un nuevo array,reemplazará el contenido actual.</target>
        </trans-unit>
        <trans-unit id="a3d9ffb17ccc89ae953b1bcdd608ab0903d935a3" translate="yes" xml:space="preserve">
          <source>This is the resolved return value from the route's model hook.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbbcde5990b7a38adaafc218c59a9597d423bbd5" translate="yes" xml:space="preserve">
          <source>This is the syntax for an &lt;code&gt;if&lt;/code&gt; statement in block form. If the &lt;code&gt;condition&lt;/code&gt; is true, Ember will render the content that is inside the block.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d0aeb8539d4ac13c1b43ef5712487f0500ab378" translate="yes" xml:space="preserve">
          <source>This is the syntax for an &lt;code&gt;if&lt;/code&gt; statement in inline form. If the &lt;code&gt;condition&lt;/code&gt; is true, Ember will use &lt;code&gt;value&lt;/code&gt; at the invocation site.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f051ff0c94165498e453f7c24f725d220d0bf59d" translate="yes" xml:space="preserve">
          <source>This is the very similar to defining the &lt;code&gt;Person&lt;/code&gt; class with a constructor like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dada04f5800d31f549425491d1886c63a016bd11" translate="yes" xml:space="preserve">
          <source>This is typically a paid service you can use to get great performance for your app. Many CDNs act as caching proxies to your origin server; some require you to upload your assets to them. They give you a URL for each resource in your app. This URL will resolve differently for folks depending on where they're browsing.</source>
          <target state="translated">Este es un servicio de pago que puedes usar para obtener un gran rendimiento de tu aplicación.Muchos CDNs actúan como proxies de caché para tu servidor de origen;algunos requieren que subas tus activos a ellos.Te dan una URL para cada recurso de tu aplicación.Esta URL se resolverá de forma diferente para cada persona dependiendo de dónde esté navegando.</target>
        </trans-unit>
        <trans-unit id="b0dcf6a43e9a72bfb12e3bb5077f5422dc0fbbbe" translate="yes" xml:space="preserve">
          <source>This is useful for communicating assumptions in the code to other human readers as well as catching bugs that accidentally violates these expectations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9029cd114fa0d3c8586307b8eff931586da2bfe7" translate="yes" xml:space="preserve">
          <source>This is useful if you have a good sense of what records the user will need next. When they click on a link, instead of waiting for a network request to finish, Ember.js can render the new template immediately. It feels instantaneous.</source>
          <target state="translated">Esto es útil si tienes una buena idea de qué registros necesitará el usuario a continuación.Cuando hacen clic en un enlace,en lugar de esperar a que termine una solicitud de la red,Ember.js puede renderizar la nueva plantilla inmediatamente.Se siente instantáneo.</target>
        </trans-unit>
        <trans-unit id="9c0e2a474431ea68ddf5ecf51a7ea34a70a0a409" translate="yes" xml:space="preserve">
          <source>This is useful in many ways, as the controller specified will be:</source>
          <target state="translated">Esto es útil en muchos sentidos,como lo será el controlador especificado:</target>
        </trans-unit>
        <trans-unit id="05b6a97bb57b5dddb0183025a13b19fcb8089e6d" translate="yes" xml:space="preserve">
          <source>This is useful when you want to create a component that can optionally take a block and then render a default template when it is not invoked with a block.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfc8c1ff007f969ec72037eadac7eef5a773d669" translate="yes" xml:space="preserve">
          <source>This is useful when you want to create a component that can render itself differently when it is not invoked with block params.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e62480fdd97ece07a8f43a03399112cd947a3bd" translate="yes" xml:space="preserve">
          <source>This is usually sufficient, so in most cases, the &lt;code&gt;key&lt;/code&gt; option is simply not needed. However, in some rare cases, the objects' identities may change even though they represent the same underlying data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2fb2f884217983006b8b8e8d2fa01aa0d3916bf" translate="yes" xml:space="preserve">
          <source>This is very similar to defining the &lt;code&gt;Permission&lt;/code&gt; class with a constructor like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ade33abb6fdd45e411d88ae2ac98039f0bf103b" translate="yes" xml:space="preserve">
          <source>This is why all Ember's test helpers are wrapped in code that ensures Ember is back in a synchronized state when it makes its assertions. It saves you from having to wrap everything in code that does that, and it makes it easier to read your tests because there's less boilerplate in them.</source>
          <target state="translated">Por eso todos los ayudantes de pruebas de Ember están envueltos en un código que asegura que Ember está de vuelta en un estado sincronizado cuando hace sus afirmaciones.Te ahorra tener que envolver todo en un código que hace eso,y hace más fácil leer tus pruebas porque hay menos información en ellas.</target>
        </trans-unit>
        <trans-unit id="f81078bdd16c56d5ce8e099f63a66414055f7a65" translate="yes" xml:space="preserve">
          <source>This is why getters should generally &lt;em&gt;avoid&lt;/em&gt; mutating state on the instance, and you should be aware of their performance cost since they'll rerun the code every time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36a619a3c774a79fc088bfa87be2e0068406b665" translate="yes" xml:space="preserve">
          <source>This keeps the responsibilities clearly delineated, and makes it much easier to reason about what each individual API is doing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="373629a051fd9d6a82479c3fb955dcff38bff20a" translate="yes" xml:space="preserve">
          <source>This list of attributes is inherited from the component's superclasses, as well.</source>
          <target state="translated">Esta lista de atributos también se hereda de las superclases del componente.</target>
        </trans-unit>
        <trans-unit id="9d2978c3cf092adf7f085027707c1fa11a58cc84" translate="yes" xml:space="preserve">
          <source>This list of properties is inherited from the component's superclasses as well.</source>
          <target state="translated">Esta lista de propiedades también se hereda de las superclases del componente.</target>
        </trans-unit>
        <trans-unit id="fb5f23b5212bb7243dee0fb723c49f54d8ba342c" translate="yes" xml:space="preserve">
          <source>This may be helpful for keeping links active for:</source>
          <target state="translated">Esto puede ser útil para mantener activos los enlaces para:</target>
        </trans-unit>
        <trans-unit id="48bf2a80eecc91ba8c0cc640cc15dd93a2ce4248" translate="yes" xml:space="preserve">
          <source>This means that all of the following HTML features work as-is:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d8d90e20c4960944f5d4bfc511c8c0d5bc0399b" translate="yes" xml:space="preserve">
          <source>This means that the field created is assigned for every &lt;em&gt;instance&lt;/em&gt;, instead of once on the prototype like properties. This has a few important implications:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f1437c8a96afb9704b37db936b4718d9929b39b" translate="yes" xml:space="preserve">
          <source>This means that you no longer have to customize your component using any of the following APIs:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4888089f036f3bfaae8dabe19bbed72fa838b8f" translate="yes" xml:space="preserve">
          <source>This method allows for normalization of data when &lt;code&gt;store.pushPayload&lt;/code&gt; is called and should be implemented if you want to use that method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd65fb1a8b4790597e5a153d1da512dab6fb3ee8" translate="yes" xml:space="preserve">
          <source>This method allows for you to split pending requests for records into multiple &lt;code&gt;findMany&lt;/code&gt; requests. It receives an array of snapshots where each snapshot represents a unique record requested via &lt;code&gt;store.findRecord&lt;/code&gt; during the most recent &lt;code&gt;runloop&lt;/code&gt; that was not found in the cache or needs to be reloaded. It should return an array of groups.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="627b891473247bd5815547809011482806305c21" translate="yes" xml:space="preserve">
          <source>This method allows you to push a payload containing top-level collections of records organized per type.</source>
          <target state="translated">Este método permite empujar una carga útil que contiene colecciones de registros de alto nivel organizadas por tipo.</target>
        </trans-unit>
        <trans-unit id="a33ed191a5e22ddc6587f89a182ff201376ef50b" translate="yes" xml:space="preserve">
          <source>This method also takes a hash of boot-time configuration options for customizing the instance's behavior. See the documentation on &lt;code&gt;ApplicationInstance.BootOptions&lt;/code&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb9e9c872a5cfd75bae202c4ea4839d24085215a" translate="yes" xml:space="preserve">
          <source>This method also takes a hash of boot-time configuration options for customizing the instance's behavior. See the documentation on &lt;code&gt;Ember.ApplicationInstance.BootOptions&lt;/code&gt; for details.</source>
          <target state="translated">Este m&amp;eacute;todo tambi&amp;eacute;n toma un hash de las opciones de configuraci&amp;oacute;n en el momento del arranque para personalizar el comportamiento de la instancia. Consulte la documentaci&amp;oacute;n sobre &lt;code&gt;Ember.ApplicationInstance.BootOptions&lt;/code&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="0d3f7722b1918a033bfc704ab024b6e1cf5c8659" translate="yes" xml:space="preserve">
          <source>This method can be overridden to set up and render additional or alternative templates.</source>
          <target state="translated">Este método puede ser anulado para establecer y presentar plantillas adicionales o alternativas.</target>
        </trans-unit>
        <trans-unit id="75131c915bde03ba240c1d475bfd5896ca45f619" translate="yes" xml:space="preserve">
          <source>This method can be used both to push in brand new records, as well as to update existing records.</source>
          <target state="translated">Este método puede utilizarse tanto para introducir nuevos registros como para actualizar los ya existentes.</target>
        </trans-unit>
        <trans-unit id="2f6b399d017a3f3f52b041707517412999041988" translate="yes" xml:space="preserve">
          <source>This method can be used both to push in brand new records, as well as to update existing records. You can push in more than one type of object at once. All objects should be in the format expected by the serializer.</source>
          <target state="translated">Este método puede utilizarse tanto para introducir nuevos registros como para actualizar los ya existentes.Se puede introducir más de un tipo de objeto a la vez.Todos los objetos deben estar en el formato esperado por el serializador.</target>
        </trans-unit>
        <trans-unit id="b02dc4cad6cf02610e6058c95d7caebe5eb539eb" translate="yes" xml:space="preserve">
          <source>This method can be used when it is certain that the server will return a single object for the primary data.</source>
          <target state="translated">Este método puede utilizarse cuando se tiene la certeza de que el servidor devolverá un solo objeto para los datos primarios.</target>
        </trans-unit>
        <trans-unit id="31a10777d9035c12a3fcba90767411843e07f906" translate="yes" xml:space="preserve">
          <source>This method delegates a query to the adapter. This is the one place where adapter-level semantics are exposed to the application.</source>
          <target state="translated">Este método delega una consulta al adaptador.Este es el único lugar donde la semántica a nivel de adaptador se expone a la aplicación.</target>
        </trans-unit>
        <trans-unit id="7ae3f2f0c751efc8927d65bfd222cb31c552601f" translate="yes" xml:space="preserve">
          <source>This method delegates to a more specific normalize method based on the &lt;code&gt;requestType&lt;/code&gt;.</source>
          <target state="translated">Este m&amp;eacute;todo delega en un m&amp;eacute;todo de normalizaci&amp;oacute;n m&amp;aacute;s espec&amp;iacute;fico basado en &lt;code&gt;requestType&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a25d67dc575ed0fba225af931e94045db1b5a8f9" translate="yes" xml:space="preserve">
          <source>This method expects normalized &lt;a href=&quot;http://jsonapi.org/&quot;&gt;JSON API&lt;/a&gt; document. This means you have to follow &lt;a href=&quot;http://jsonapi.org/format/&quot;&gt;JSON API specification&lt;/a&gt; with few minor adjustments:</source>
          <target state="translated">Este m&amp;eacute;todo espera un documento &lt;a href=&quot;http://jsonapi.org/&quot;&gt;API JSON&lt;/a&gt; normalizado . Esto significa que debe seguir la &lt;a href=&quot;http://jsonapi.org/format/&quot;&gt;especificaci&amp;oacute;n de la API JSON&lt;/a&gt; con algunos ajustes menores:</target>
        </trans-unit>
        <trans-unit id="b793cd33b0dda2d7814c4efa8f1fc4cea44de39f" translate="yes" xml:space="preserve">
          <source>This method has the same behavior of JavaScript's &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/includes&quot;&gt;Array.includes&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7df7b83c336ab5cbac360f1c5c272ebe13752bdd" translate="yes" xml:space="preserve">
          <source>This method is &lt;em&gt;only&lt;/em&gt; checked by the store when the store is returning a cached record array.</source>
          <target state="translated">La tienda &lt;em&gt;solo&lt;/em&gt; comprueba este m&amp;eacute;todo cuando devuelve una matriz de registros en cach&amp;eacute;.</target>
        </trans-unit>
        <trans-unit id="e8062e08f7c0f7fcdf86622114e1823949507341" translate="yes" xml:space="preserve">
          <source>This method is &lt;em&gt;only&lt;/em&gt; checked by the store when the store is returning a cached record.</source>
          <target state="translated">La tienda &lt;em&gt;solo&lt;/em&gt; verifica este m&amp;eacute;todo cuando devuelve un registro en cach&amp;eacute;.</target>
        </trans-unit>
        <trans-unit id="0d46ff24f336be7a98aa657eb9226dd692056b66" translate="yes" xml:space="preserve">
          <source>This method is called by &lt;code&gt;snapshot.serialize()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="689587cc6e16e93dbddabd5968491f5542448ecf" translate="yes" xml:space="preserve">
          <source>This method is called by the &lt;code&gt;Store&lt;/code&gt; when &lt;code&gt;store.normalize(modelName, payload)&lt;/code&gt; is called. It is recommended to use &lt;code&gt;store.serializerFor(modelName).normalizeResponse&lt;/code&gt; over &lt;code&gt;store.normalize&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3509ace1db000a92db88fe8a1836ad0b7713cbb8" translate="yes" xml:space="preserve">
          <source>This method is called via the container's resolver method. It parses the provided &lt;code&gt;fullName&lt;/code&gt; and then looks up and returns the appropriate template or class.</source>
          <target state="translated">Este m&amp;eacute;todo se llama a trav&amp;eacute;s del m&amp;eacute;todo de resoluci&amp;oacute;n del contenedor. Analiza el &lt;code&gt;fullName&lt;/code&gt; proporcionado y luego busca y devuelve la plantilla o clase apropiada.</target>
        </trans-unit>
        <trans-unit id="9ce28964f15279cf3d730ef68345532b784ce703" translate="yes" xml:space="preserve">
          <source>This method is called when &lt;code&gt;transitionTo&lt;/code&gt; is called with a context in order to populate the URL.</source>
          <target state="translated">Este m&amp;eacute;todo se llama cuando se llama a &lt;code&gt;transitionTo&lt;/code&gt; con un contexto para completar la URL.</target>
        </trans-unit>
        <trans-unit id="f0c4ee83b8e7fbb139652d78dd5741771d80faf6" translate="yes" xml:space="preserve">
          <source>This method is called when you call &lt;code&gt;query&lt;/code&gt; on the store.</source>
          <target state="translated">Este m&amp;eacute;todo se llama cuando llama a &lt;code&gt;query&lt;/code&gt; en la tienda.</target>
        </trans-unit>
        <trans-unit id="13a7fe79d0533fe9608f31da98b7023d71e69453" translate="yes" xml:space="preserve">
          <source>This method is called with the controller for the current route and the model supplied by the &lt;code&gt;model&lt;/code&gt; hook.</source>
          <target state="translated">Este m&amp;eacute;todo se llama con el controlador para la ruta actual y el modelo proporcionado por el gancho de &lt;code&gt;model&lt;/code&gt; o .</target>
        </trans-unit>
        <trans-unit id="bbedcce78155921a2bf55755fabf12698cc38674" translate="yes" xml:space="preserve">
          <source>This method is called with the controller for the current route and the model supplied by the &lt;code&gt;model&lt;/code&gt; hook. By default, it renders the route's template, configured with the controller for the route.</source>
          <target state="translated">Este m&amp;eacute;todo se llama con el controlador para la ruta actual y el modelo proporcionado por el gancho de &lt;code&gt;model&lt;/code&gt; o . De forma predeterminada, representa la plantilla de la ruta, configurada con el controlador para la ruta.</target>
        </trans-unit>
        <trans-unit id="c6d0b6398b87777d58312eba81fe646f7810a695" translate="yes" xml:space="preserve">
          <source>This method is generally very similar to calling &lt;code&gt;object[&quot;key&quot;] = value&lt;/code&gt; or &lt;code&gt;object.key = value&lt;/code&gt;, except that it provides support for computed properties, the &lt;code&gt;setUnknownProperty()&lt;/code&gt; method and property observers.</source>
          <target state="translated">Este m&amp;eacute;todo es generalmente muy similar a llamar a &lt;code&gt;object[&quot;key&quot;] = value&lt;/code&gt; u &lt;code&gt;object.key = value&lt;/code&gt; , excepto que proporciona soporte para propiedades calculadas, el m&amp;eacute;todo &lt;code&gt;setUnknownProperty()&lt;/code&gt; y observadores de propiedades.</target>
        </trans-unit>
        <trans-unit id="74bd84dac410bdb6c99add62a62d5417953e7c5c" translate="yes" xml:space="preserve">
          <source>This method is handy for performing intermediate transitions on the way to a final destination route, and is called internally by the default implementations of the &lt;code&gt;error&lt;/code&gt; and &lt;code&gt;loading&lt;/code&gt; handlers.</source>
          <target state="translated">Este m&amp;eacute;todo es &amp;uacute;til para realizar transiciones intermedias en el camino hacia una ruta de destino final, y las implementaciones predeterminadas de los controladores de &lt;code&gt;error&lt;/code&gt; y &lt;code&gt;loading&lt;/code&gt; llaman internamente .</target>
        </trans-unit>
        <trans-unit id="6e1b3ac3cee3c21cae8befd0ad80964b9df49462" translate="yes" xml:space="preserve">
          <source>This method is intended to normalize data into a &lt;a href=&quot;https://jsonapi.org/format/#document-structure&quot;&gt;JSON:API Document&lt;/a&gt; with a data member containing a single &lt;a href=&quot;https://jsonapi.org/format/#document-resource-objects&quot;&gt;Resource&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fea818b09106addf019b8f0b55ff58039848df8" translate="yes" xml:space="preserve">
          <source>This method is responsible for normalizing the value resolved from the promise returned by an Adapter request into the format expected by the &lt;code&gt;Store&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86c218f86eaf174e7d4e58e194162a1a6ff14deb" translate="yes" xml:space="preserve">
          <source>This method is responsible for serializing an individual record via a &lt;a href=&quot;snapshot&quot;&gt;Snapshot&lt;/a&gt; into the format expected by the API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4221d761150152984c7c3ca386868626f2f0a116" translate="yes" xml:space="preserve">
          <source>This method is similar to the &lt;code&gt;find()&lt;/code&gt; method defined in ECMAScript 2015.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa05443efe853cc3f28766f6d6fb9fe7a13a6090" translate="yes" xml:space="preserve">
          <source>This method is used by the store to determine if the store should reload a record after the &lt;code&gt;store.findRecord&lt;/code&gt; method resolves a cached record.</source>
          <target state="translated">La tienda utiliza este m&amp;eacute;todo para determinar si la tienda debe recargar un registro despu&amp;eacute;s de que el m&amp;eacute;todo &lt;code&gt;store.findRecord&lt;/code&gt; resuelva un registro en cach&amp;eacute;.</target>
        </trans-unit>
        <trans-unit id="ba3f4183468eab98d1908948e41cd0eef07925e8" translate="yes" xml:space="preserve">
          <source>This method is used by the store to determine if the store should reload a record array after the &lt;code&gt;store.findAll&lt;/code&gt; method resolves with a cached record array.</source>
          <target state="translated">La tienda utiliza este m&amp;eacute;todo para determinar si la tienda debe recargar una matriz de registros despu&amp;eacute;s de que el m&amp;eacute;todo &lt;code&gt;store.findAll&lt;/code&gt; se resuelva con una matriz de registros en cach&amp;eacute;.</target>
        </trans-unit>
        <trans-unit id="0dc1d4e602a3dbc746be228073f7c5e9072291ae" translate="yes" xml:space="preserve">
          <source>This method is used by the store to determine if the store should reload a record from the adapter when a record is requested by &lt;code&gt;store.findRecord&lt;/code&gt;.</source>
          <target state="translated">La tienda utiliza este m&amp;eacute;todo para determinar si la tienda debe recargar un registro del adaptador cuando &lt;code&gt;store.findRecord&lt;/code&gt; solicita un registro .</target>
        </trans-unit>
        <trans-unit id="8ce64195ca8b7e509dff95556cc7ab216203e10e" translate="yes" xml:space="preserve">
          <source>This method is used by the store to determine if the store should reload all records from the adapter when records are requested by &lt;code&gt;store.findAll&lt;/code&gt;.</source>
          <target state="translated">La tienda utiliza este m&amp;eacute;todo para determinar si la tienda debe recargar todos los registros del adaptador cuando &lt;code&gt;store.findAll&lt;/code&gt; los solicita .</target>
        </trans-unit>
        <trans-unit id="726a13d031eb08fa1d97022da145454908c66cf3" translate="yes" xml:space="preserve">
          <source>This method is used to convert each JSON root key in the payload into a modelName that it can use to look up the appropriate model for that part of the payload.</source>
          <target state="translated">Este método se utiliza para convertir cada clave raíz JSON de la carga útil en un ModelName que puede utilizar para buscar el modelo apropiado para esa parte de la carga útil.</target>
        </trans-unit>
        <trans-unit id="6c5bbd7f853651246ca39c9ea5a7bd46d3c9d051" translate="yes" xml:space="preserve">
          <source>This method is usually similar to using &lt;code&gt;object[keyName]&lt;/code&gt; or &lt;code&gt;object.keyName&lt;/code&gt;, however it supports both computed properties and the unknownProperty handler.</source>
          <target state="translated">Este m&amp;eacute;todo suele ser similar al uso de &lt;code&gt;object[keyName]&lt;/code&gt; u &lt;code&gt;object.keyName&lt;/code&gt; , sin embargo, admite tanto propiedades calculadas como el controlador unknownProperty.</target>
        </trans-unit>
        <trans-unit id="b114921bcf8d16e2e444b824deee9fc587f6fb2a" translate="yes" xml:space="preserve">
          <source>This method makes a request for one record, where the &lt;code&gt;id&lt;/code&gt; is not known beforehand (if the &lt;code&gt;id&lt;/code&gt; is known, use &lt;a href=&quot;#method_findRecord&quot;&gt;&lt;code&gt;findRecord&lt;/code&gt;&lt;/a&gt; instead).</source>
          <target state="translated">Este m&amp;eacute;todo realiza una solicitud de un registro, donde la &lt;code&gt;id&lt;/code&gt; entificaci&amp;oacute;n no se conoce de antemano (si se conoce la &lt;code&gt;id&lt;/code&gt; entificaci&amp;oacute;n , utilice &lt;a href=&quot;#method_findRecord&quot;&gt; &lt;code&gt;findRecord&lt;/code&gt; &lt;/a&gt; en su lugar).</target>
        </trans-unit>
        <trans-unit id="9189dad7da9da0a19a5a58d8e0fbed8333814043" translate="yes" xml:space="preserve">
          <source>This method makes a request for one record, where the &lt;code&gt;id&lt;/code&gt; is not known beforehand (if the &lt;code&gt;id&lt;/code&gt; is known, use &lt;a href=&quot;../classes/store/methods#findRecord&quot;&gt;&lt;code&gt;findRecord&lt;/code&gt;&lt;/a&gt; instead).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="238521c0958db6a0539fd05f5b408a4f1cb6977a" translate="yes" xml:space="preserve">
          <source>This method may also be called when normalizing embedded relationships when using the &lt;code&gt;EmbeddedRecordsMixin&lt;/code&gt;. If using this mixin in a serializer in your application we recommend implementing this method, but caution that it may lead to unexpected mixing of formats.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67fd9e92dfa4396d5b162756b9cf663a85a3fdbe" translate="yes" xml:space="preserve">
          <source>This method may be called when also using the &lt;code&gt;JSONAPISerializer&lt;/code&gt; when normalizing included records. If mixing serializer usage in this way we recommend implementing this method, but caution that it may lead to unexpected mixing of formats.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66fbdc56effaf56f7af34e2ad54d6ad71801c28b" translate="yes" xml:space="preserve">
          <source>This method may be called when also using the &lt;code&gt;RESTSerializer&lt;/code&gt; when &lt;code&gt;serializer.pushPayload&lt;/code&gt; is called by &lt;code&gt;store.pushPayload&lt;/code&gt;. However, it is recommended to use &lt;code&gt;store.push&lt;/code&gt; over &lt;code&gt;store.pushPayload&lt;/code&gt; after normalizing the payload directly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe413c14bf4da8f3d5f53d8ded6cddab3dfd4a8c" translate="yes" xml:space="preserve">
          <source>This method normalizes a modelName into the format Ember Data uses internally.</source>
          <target state="translated">Este método normaliza un ModelName en el formato que Ember Data utiliza internamente.</target>
        </trans-unit>
        <trans-unit id="08631e46477a7a941a13e8472a1d4934d0dfbb83" translate="yes" xml:space="preserve">
          <source>This method performs an HTTP &lt;code&gt;GET&lt;/code&gt; request with the id provided as part of the query string.</source>
          <target state="translated">Este m&amp;eacute;todo realiza una solicitud HTTP &lt;code&gt;GET&lt;/code&gt; con la identificaci&amp;oacute;n proporcionada como parte de la cadena de consulta.</target>
        </trans-unit>
        <trans-unit id="7856b76816169cfe893ef391554413f9b77a695b" translate="yes" xml:space="preserve">
          <source>This method provides a way to read an element's attribute and also update the last value Ember knows about at the same time. This makes setting an attribute idempotent.</source>
          <target state="translated">Este método proporciona una forma de leer el atributo de un elemento y también de actualizar el último valor que Ember conoce al mismo tiempo.Esto hace que el establecimiento de un atributo sea idempotente.</target>
        </trans-unit>
        <trans-unit id="eaa052f406471ed8cf31fb7bf4efd7f61a813eea" translate="yes" xml:space="preserve">
          <source>This method provides the ability to generate an ID to assign to a new record whenever &lt;code&gt;store.createRecord&lt;/code&gt; is called if no &lt;code&gt;id&lt;/code&gt; was provided.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1be81e576abbc9f8bf07bfebbb5d7035d8f905c9" translate="yes" xml:space="preserve">
          <source>This method receives the &lt;code&gt;store&lt;/code&gt;, the Model class for the request, the payload, the id of the record request (or &lt;code&gt;null&lt;/code&gt; if there is no id associated with the request), and the request type (a string with the possible values of: &lt;code&gt;'findRecord'&lt;/code&gt;, &lt;code&gt;'queryRecord'&lt;/code&gt;, &lt;code&gt;'findAll'&lt;/code&gt;, &lt;code&gt;'findBelongsTo'&lt;/code&gt;, &lt;code&gt;'findHasMany'&lt;/code&gt;, &lt;code&gt;'findMany'&lt;/code&gt;, &lt;code&gt;'query'&lt;/code&gt;, &lt;code&gt;'createRecord'&lt;/code&gt;, &lt;code&gt;'deleteRecord'&lt;/code&gt;, and &lt;code&gt;'updateRecord'&lt;/code&gt;) as arguments.</source>
          <target state="translated">Este m&amp;eacute;todo recibe la &lt;code&gt;store&lt;/code&gt; , la clase Model para la solicitud, la carga &amp;uacute;til, el id de la solicitud de registro (o &lt;code&gt;null&lt;/code&gt; si no hay un id asociado con la solicitud) y el tipo de solicitud (una cadena con los posibles valores de: &lt;code&gt;'findRecord'&lt;/code&gt; , &lt;code&gt;'queryRecord'&lt;/code&gt; , &lt;code&gt;'findAll'&lt;/code&gt; , &lt;code&gt;'findBelongsTo'&lt;/code&gt; , &lt;code&gt;'findHasMany'&lt;/code&gt; , &lt;code&gt;'findMany'&lt;/code&gt; , &lt;code&gt;'query'&lt;/code&gt; , &lt;code&gt;'createRecord'&lt;/code&gt; , &lt;code&gt;'deleteRecord'&lt;/code&gt; y &lt;code&gt;'updateRecord'&lt;/code&gt; ) como argumentos.</target>
        </trans-unit>
        <trans-unit id="83cfea1ccac994b0f515944e96fac8ec32c2f20c" translate="yes" xml:space="preserve">
          <source>This method returns a filtered array that contains all of the known records for a given type in the store.</source>
          <target state="translated">Este método devuelve una matriz filtrada que contiene todos los registros conocidos para un tipo determinado en la tienda.</target>
        </trans-unit>
        <trans-unit id="6a6a5fc1791645c2940034d3812b1b516a3835b0" translate="yes" xml:space="preserve">
          <source>This method returns a manager which can be used for introspection of the factory's class or for the creation of factory instances with initial properties. The manager is an object with the following properties:</source>
          <target state="translated">Este método devuelve un gestor que puede utilizarse para la introspección de la clase de la fábrica o para la creación de instancias de la fábrica con propiedades iniciales.El manager es un objeto con las siguientes propiedades:</target>
        </trans-unit>
        <trans-unit id="b23b68987e06baaee9d2d14013a12d56a2d0b3b3" translate="yes" xml:space="preserve">
          <source>This method returns a promise, which is resolved with an &lt;a href=&quot;http://emberjs.com/api/data/classes/DS.AdapterPopulatedRecordArray.html&quot;&gt;&lt;code&gt;AdapterPopulatedRecordArray&lt;/code&gt;&lt;/a&gt; once the server returns.</source>
          <target state="translated">Este m&amp;eacute;todo devuelve una promesa, que se resuelve con un &lt;a href=&quot;http://emberjs.com/api/data/classes/DS.AdapterPopulatedRecordArray.html&quot;&gt; &lt;code&gt;AdapterPopulatedRecordArray&lt;/code&gt; &lt;/a&gt; una vez que el servidor regresa.</target>
        </trans-unit>
        <trans-unit id="9d3268bf3eda6c50900b9a2834239939db28ea9b" translate="yes" xml:space="preserve">
          <source>This method returns a promise, which is resolved with an &lt;a href=&quot;https://api.emberjs.com/ember-data/release/classes/AdapterPopulatedRecordArray&quot;&gt;&lt;code&gt;AdapterPopulatedRecordArray&lt;/code&gt;&lt;/a&gt; once the server returns.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eed4c7cdb29f6c03f0723f0629feb07c3656376e" translate="yes" xml:space="preserve">
          <source>This method returns a promise, which resolves with the found record.</source>
          <target state="translated">Este método devuelve una promesa,que se resuelve con el registro encontrado.</target>
        </trans-unit>
        <trans-unit id="a9ee61f9f9c7e39cc14b2113ef18411dc61a4eca" translate="yes" xml:space="preserve">
          <source>This method returns a record for a given type and id combination.</source>
          <target state="translated">Este método devuelve un registro para una determinada combinación de tipo e identificación.</target>
        </trans-unit>
        <trans-unit id="5addfbbe95b2a58af44bf1bdcf2499db95fe3c02" translate="yes" xml:space="preserve">
          <source>This method returns true if a record for a given modelName and id is already loaded in the store. Use this function to know beforehand if a findRecord() will result in a request or that it will be a cache hit.</source>
          <target state="translated">Este método devuelve verdadero si un registro para un determinado modelName e id ya está cargado en la tienda.Usa esta función para saber de antemano si un findRecord()resultará en una petición o que será un hit de la caché.</target>
        </trans-unit>
        <trans-unit id="29ad6b6ad91ee119d75a9bab0ee8ae0631edf987" translate="yes" xml:space="preserve">
          <source>This method should be returned by async helpers such as &lt;code&gt;wait&lt;/code&gt;.</source>
          <target state="translated">Este m&amp;eacute;todo debe ser devuelto por ayudantes as&amp;iacute;ncronos como &lt;code&gt;wait&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="df6dcf687152ce38d873a2ff72a1326ba3f69cb3" translate="yes" xml:space="preserve">
          <source>This method should be used when an event may be called multiple times but the action should only be called once when the event is done firing. A common example is for scroll events where you only want updates to happen once scrolling has ceased.</source>
          <target state="translated">Este método debe utilizarse cuando un evento puede ser llamado varias veces,pero la acción sólo debe ser llamada una vez cuando el evento se hace disparando.Un ejemplo común es para los eventos de desplazamiento en los que sólo se desea que las actualizaciones se produzcan una vez que el desplazamiento haya cesado.</target>
        </trans-unit>
        <trans-unit id="1b7af68bf1d14a0a7494d03c440d73e28a4b7190" translate="yes" xml:space="preserve">
          <source>This method unloads all records in the store. It schedules unloading to happen during the next run loop.</source>
          <target state="translated">Este método descarga todos los registros en el almacén.Programa la descarga para que ocurra durante el siguiente ciclo de ejecución.</target>
        </trans-unit>
        <trans-unit id="f68e595b779d29ca69cd56edd16cad0978ac86aa" translate="yes" xml:space="preserve">
          <source>This method will be called with the parent record and &lt;code&gt;/people/1/group&lt;/code&gt;.</source>
          <target state="translated">Este m&amp;eacute;todo se llamar&amp;aacute; con el registro principal y &lt;code&gt;/people/1/group&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="90e07dd7b94be524253c05e8e1714813e05bd28a" translate="yes" xml:space="preserve">
          <source>This method will be called with the parent record and &lt;code&gt;/posts/1/comments&lt;/code&gt;.</source>
          <target state="translated">Este m&amp;eacute;todo se llamar&amp;aacute; con el registro principal y &lt;code&gt;/posts/1/comments&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="105f0e895ac617988c6c362e0f459352f9da2718" translate="yes" xml:space="preserve">
          <source>This method will only be called if content is non-&lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">Este m&amp;eacute;todo solo se llamar&amp;aacute; si el contenido no es &lt;code&gt;null&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="657150ab50b85204bae3030b7eec6fc817ac1dfb" translate="yes" xml:space="preserve">
          <source>This method will synchronously return the record if it is available in the store, otherwise it will return &lt;code&gt;null&lt;/code&gt;. A record is available if it has been fetched earlier, or pushed manually into the store.</source>
          <target state="translated">Este m&amp;eacute;todo devolver&amp;aacute; sincr&amp;oacute;nicamente el registro si est&amp;aacute; disponible en la tienda; de lo contrario, devolver&amp;aacute; un &lt;code&gt;null&lt;/code&gt; . Un registro est&amp;aacute; disponible si se ha obtenido antes o si se ha introducido manualmente en la tienda.</target>
        </trans-unit>
        <trans-unit id="5d308bedb05bb7d9b40bb5a78f093cc80094bac4" translate="yes" xml:space="preserve">
          <source>This method works much like the more generic &lt;code&gt;find()&lt;/code&gt; method.</source>
          <target state="translated">Este m&amp;eacute;todo funciona de manera muy similar al m&amp;eacute;todo &lt;code&gt;find()&lt;/code&gt; m&amp;aacute;s gen&amp;eacute;rico .</target>
        </trans-unit>
        <trans-unit id="28c70fd4104148a561dcde3c0978e4acb10eaa64" translate="yes" xml:space="preserve">
          <source>This method would ensure that whenever you do &lt;code&gt;store.findAll('ticket')&lt;/code&gt; you will always get a list of tickets that are no more than 20 minutes old. In case a cached version is more than 20 minutes old, &lt;code&gt;findAll&lt;/code&gt; will not resolve until you fetched the latest versions.</source>
          <target state="translated">Este m&amp;eacute;todo asegurar&amp;iacute;a que siempre que haga &lt;code&gt;store.findAll('ticket')&lt;/code&gt; siempre obtendr&amp;aacute; una lista de tickets que no tengan m&amp;aacute;s de 20 minutos de antig&amp;uuml;edad. En caso de que una versi&amp;oacute;n en cach&amp;eacute; tenga m&amp;aacute;s de 20 minutos de antig&amp;uuml;edad, &lt;code&gt;findAll&lt;/code&gt; no se resolver&amp;aacute; hasta que obtenga las &amp;uacute;ltimas versiones.</target>
        </trans-unit>
        <trans-unit id="2678263a74a0b565310ba1599428e1ae18b8c295" translate="yes" xml:space="preserve">
          <source>This method would ensure that whenever you do &lt;code&gt;store.findRecord('ticket',
id)&lt;/code&gt; you will always get a ticket that is no more than 20 minutes old. In case the cached version is more than 20 minutes old, &lt;code&gt;findRecord&lt;/code&gt; will not resolve until you fetched the latest version.</source>
          <target state="translated">Este m&amp;eacute;todo garantizar&amp;iacute;a que siempre que haga &lt;code&gt;store.findRecord('ticket', id)&lt;/code&gt; siempre obtendr&amp;aacute; un ticket que no tenga m&amp;aacute;s de 20 minutos de antig&amp;uuml;edad. En caso de que la versi&amp;oacute;n en cach&amp;eacute; tenga m&amp;aacute;s de 20 minutos, &lt;code&gt;findRecord&lt;/code&gt; no se resolver&amp;aacute; hasta que obtenga la &amp;uacute;ltima versi&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="ec834c3e944edee230a4909331939d62bcbb6301" translate="yes" xml:space="preserve">
          <source>This mixin allows for Ember objects to subscribe to and emit events.</source>
          <target state="translated">Esta mezcla permite que los objetos de ámbar se suscriban y emitan eventos.</target>
        </trans-unit>
        <trans-unit id="a6ba832406a1e0178c844251cd0911414c38c230" translate="yes" xml:space="preserve">
          <source>This mixin defines methods specifically for collections that provide index-ordered access to their contents. When you are designing code that needs to accept any kind of Array-like object, you should use these methods instead of Array primitives because these will properly notify observers of changes to the array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bf4568e2d4c8f66ef058891e43df4c9d7beb31a" translate="yes" xml:space="preserve">
          <source>This mixin defines the API for modifying array-like objects. These methods can be applied only to a collection that keeps its items in an ordered set. It builds upon the Array mixin and adds methods to modify the array. One concrete implementations of this class include ArrayProxy.</source>
          <target state="translated">Este mixin define el API para modificar objetos tipo array.Estos métodos pueden aplicarse sólo a una colección que mantiene sus objetos en un conjunto ordenado.Se basa en el mixin de Array y añade métodos para modificar el array.Una implementación concreta de esta clase incluye ArrayProxy.</target>
        </trans-unit>
        <trans-unit id="0c9ab29a7ae181e083871bfe59c6eb5fa8dee6de" translate="yes" xml:space="preserve">
          <source>This mixin defines the API for modifying generic enumerables. These methods can be applied to an object regardless of whether it is ordered or unordered.</source>
          <target state="translated">Este mixin define la API para modificar los enumerables genéricos.Estos métodos pueden aplicarse a un objeto independientemente de si está ordenado o no.</target>
        </trans-unit>
        <trans-unit id="c505b5abe483be3c71930f0a0c5dfa5e8fc1384e" translate="yes" xml:space="preserve">
          <source>This mixin defines the common interface implemented by enumerable objects in Ember. Most of these methods follow the standard Array iteration API defined up to JavaScript 1.8 (excluding language-specific features that cannot be emulated in older versions of JavaScript).</source>
          <target state="translated">Esta mezcla define la interfaz común implementada por los objetos enumerables en el Ámbar.La mayoría de estos métodos siguen el estándar Array iteration API definido hasta JavaScript 1.8 (excluyendo las características específicas del lenguaje que no pueden ser emuladas en versiones anteriores de JavaScript).</target>
        </trans-unit>
        <trans-unit id="a9d0130ce13b8d50b5ddf38e1dae3ada3564de2d" translate="yes" xml:space="preserve">
          <source>This mixin implements Observer-friendly Array-like behavior. It is not a concrete implementation, but it can be used up by other classes that want to appear like arrays.</source>
          <target state="translated">Esta mezcla implementa un comportamiento similar al de los Observadores.No es una implementación concreta,pero puede ser utilizada por otras clases que quieran aparecer como arrays.</target>
        </trans-unit>
        <trans-unit id="6d8916c9cfd84a7db880c63d8afc0d632f773b4d" translate="yes" xml:space="preserve">
          <source>This mixin is applied automatically to the Array class on page load, so you can use any of these methods on simple arrays. If Array already implements one of these methods, the mixin will not override them.</source>
          <target state="translated">Este mixin se aplica automáticamente a la clase Array en la carga de la página,así que puedes usar cualquiera de estos métodos en arreglos simples.Si Array ya implementa uno de estos métodos,el mixin no los anulará.</target>
        </trans-unit>
        <trans-unit id="763268c55e99fe8d5e6cfe80a692c9e9a1ec4278" translate="yes" xml:space="preserve">
          <source>This mixin provides properties and property observing functionality, core features of the Ember object model.</source>
          <target state="translated">Esta mezcla proporciona propiedades y funcionalidad de observación de propiedades,características centrales del modelo del objeto Ember.</target>
        </trans-unit>
        <trans-unit id="fa268524ae8db1ab4917b0e45f5723396b09f37b" translate="yes" xml:space="preserve">
          <source>This modifier generalizes the functionality that the component implemented using lifecycle hooks before, so we can use this modifier whenever we need to in &lt;em&gt;any&lt;/em&gt; component. This is a much better solution than manually managing event listeners every time we need one! At this point, the modifier is effectively the same as the &lt;code&gt;{{on}}&lt;/code&gt; modifier as well, so we could get rid of it altogether and replace it with &lt;code&gt;on&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16c6c4f7af60f66230f7ffba2118c188148ccc3d" translate="yes" xml:space="preserve">
          <source>This namespace contains all Ember methods and functions. Future versions of Ember may overwrite this namespace and therefore, you should avoid adding any new properties.</source>
          <target state="translated">Este espacio de nombres contiene todos los métodos y funciones de Ember.Futuras versiones de Ember pueden sobrescribir este espacio de nombres y por lo tanto,deberías evitar añadir nuevas propiedades.</target>
        </trans-unit>
        <trans-unit id="5c0f1fb8cd697c512e05d5434c4202f674808490" translate="yes" xml:space="preserve">
          <source>This one command will create a new directory called &lt;code&gt;ember-quickstart&lt;/code&gt; and set up a new Ember application inside of it. Out of the box, your application will include:</source>
          <target state="translated">Este comando crear&amp;aacute; un nuevo directorio llamado &lt;code&gt;ember-quickstart&lt;/code&gt; y configurar&amp;aacute; una nueva aplicaci&amp;oacute;n Ember dentro de &amp;eacute;l. Fuera de la caja, su aplicaci&amp;oacute;n incluir&amp;aacute;:</target>
        </trans-unit>
        <trans-unit id="22b05375afd4c5a6fbf1b0596508c3b38ba312ab" translate="yes" xml:space="preserve">
          <source>This one command will create a new directory called &lt;code&gt;ember-quickstart&lt;/code&gt; and set up a new Ember application inside of it. The &lt;code&gt;--lang en&lt;/code&gt; option sets the app's primary language to English to help improve &lt;a href=&quot;https://guides.emberjs.com/accessibility/application-considerations/&quot;&gt;accessibility&lt;/a&gt;. Out of the box, your application will include:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d1ae48e7202427b88a954866fa91e5d3ebf6ba4" translate="yes" xml:space="preserve">
          <source>This only works on primitive data types, e.g. Strings, Numbers, etc.</source>
          <target state="translated">Esto sólo funciona con tipos de datos primitivos,por ejemplo,Cadenas,Números,etc.</target>
        </trans-unit>
        <trans-unit id="308984791a98ba4402203e44b8c501a854c6be67" translate="yes" xml:space="preserve">
          <source>This option logs all the lookups that are done to the console. Custom objects you've created yourself have a tick, and Ember generated ones don't.</source>
          <target state="translated">Esta opción registra todas las búsquedas que se hacen en la consola.Los objetos personalizados que has creado tú mismo tienen una marca,y los generados por Ember no.</target>
        </trans-unit>
        <trans-unit id="827122ab1dbe9e086209a96121534bdf50459740" translate="yes" xml:space="preserve">
          <source>This package adds roughly .6 KB when minified and compressed to your application in production; however, you can opt out of shipping this addon in production via options in &lt;code&gt;ember-cli-build.js&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4932c0bd7aa01b1b43179f723f190ae1a102d2fc" translate="yes" xml:space="preserve">
          <source>This package provides the &lt;code&gt;DataAdapter&lt;/code&gt; which the &lt;a href=&quot;https://github.com/emberjs/ember-inspector&quot;&gt;Ember Inspector&lt;/a&gt; uses to subscribe and retrieve information for the &lt;code&gt;data&lt;/code&gt; tab in the inspector.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92634f5f6b56e889bfe5bd98c614519c1b9f68df" translate="yes" xml:space="preserve">
          <source>This parameter is no longer used and will always be null.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="895ebcf851270f30da8196f670fecc5894c45820" translate="yes" xml:space="preserve">
          <source>This pattern is known as &lt;em&gt;Data-Down, Actions Up&lt;/em&gt;, or &lt;em&gt;unidirectional data flow&lt;/em&gt;. For these new components, this pattern is enforced - all mutations must occur through actions. This clarifies the data flow, because it's immediately possible to see where all of the mutations are occurring.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="864837a696f2c980e81e10f2eb17aa9ee09a9e87" translate="yes" xml:space="preserve">
          <source>This pause-on-promise behavior is extremely valuable for when you need to guarantee that a route's data has fully loaded before displaying a new template.</source>
          <target state="translated">Este comportamiento de &quot;pausa en la promesa&quot; es extremadamente valioso para cuando necesitas garantizar que los datos de una ruta se han cargado completamente antes de mostrar una nueva plantilla.</target>
        </trans-unit>
        <trans-unit id="68b70d5b5dbc2ccc714f22b801fc4c2b2e2527d0" translate="yes" xml:space="preserve">
          <source>This prevents the reverse flow, and also throws an exception when it occurs.</source>
          <target state="translated">Esto impide el flujo inverso,y también lanza una excepción cuando se produce.</target>
        </trans-unit>
        <trans-unit id="f188f197791f50828cb93afbcf35a833dccb3e89" translate="yes" xml:space="preserve">
          <source>This property can be specified as either an element or a &lt;a href=&quot;http://api.jquery.com/category/selectors/&quot;&gt;jQuery-compatible selector string&lt;/a&gt;.</source>
          <target state="translated">Esta propiedad se puede especificar como un elemento o como una &lt;a href=&quot;http://api.jquery.com/category/selectors/&quot;&gt;cadena de selecci&amp;oacute;n compatible con jQuery&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="092e990dea4b4b80085b80d8d2436d253e79f3f5" translate="yes" xml:space="preserve">
          <source>This property can be specified as either an element or a &lt;a href=&quot;https://api.jquery.com/category/selectors/&quot;&gt;jQuery-compatible selector string&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="259eb851af0e49aa172ab983617f64d1b8524d4e" translate="yes" xml:space="preserve">
          <source>This property contains the testing helpers for the current application. These are created once you call &lt;code&gt;injectTestHelpers&lt;/code&gt; on your &lt;code&gt;Ember.Application&lt;/code&gt; instance. The included helpers are also available on the &lt;code&gt;window&lt;/code&gt; object by default, but can be used from this object on the individual application also.</source>
          <target state="translated">Esta propiedad contiene los ayudantes de prueba para la aplicaci&amp;oacute;n actual. Estos se crean una vez que llama a &lt;code&gt;injectTestHelpers&lt;/code&gt; en su instancia de &lt;code&gt;Ember.Application&lt;/code&gt; . Los ayudantes incluidos tambi&amp;eacute;n est&amp;aacute;n disponibles en el objeto de &lt;code&gt;window&lt;/code&gt; de forma predeterminada, pero tambi&amp;eacute;n se pueden utilizar desde este objeto en la aplicaci&amp;oacute;n individual.</target>
        </trans-unit>
        <trans-unit id="6c153ca85376c7d3f3baec72fd802aaaa30a6dd4" translate="yes" xml:space="preserve">
          <source>This property holds the &lt;code&gt;AdapterError&lt;/code&gt; object with which last adapter operation was rejected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="880b36e1d1b71d83f727290b52d71974b054fd06" translate="yes" xml:space="preserve">
          <source>This property holds the &lt;code&gt;DS.AdapterError&lt;/code&gt; object with which last adapter operation was rejected.</source>
          <target state="translated">Esta propiedad contiene el objeto &lt;code&gt;DS.AdapterError&lt;/code&gt; con el que se rechaz&amp;oacute; la &amp;uacute;ltima operaci&amp;oacute;n del adaptador.</target>
        </trans-unit>
        <trans-unit id="c2672723b4000e8dc3a4be8a1dec2e30fc2e556d" translate="yes" xml:space="preserve">
          <source>This property indicates whether or not this application is currently in testing mode. This is set when &lt;code&gt;setupForTesting&lt;/code&gt; is called on the current application.</source>
          <target state="translated">Esta propiedad indica si esta aplicaci&amp;oacute;n se encuentra actualmente en modo de prueba. Esto se establece cuando se llama a &lt;code&gt;setupForTesting&lt;/code&gt; en la aplicaci&amp;oacute;n actual.</target>
        </trans-unit>
        <trans-unit id="9827e139537e2e6df485db87bf1d8a8b5e6721eb" translate="yes" xml:space="preserve">
          <source>This property is a &lt;code&gt;RouteInfo&lt;/code&gt; object that represents where the router is transitioning to. It's important to note that a &lt;code&gt;RouteInfo&lt;/code&gt; is a linked list and this property represents the leafmost route.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63de6d307d7a245c691791efc25b406e879ae75a" translate="yes" xml:space="preserve">
          <source>This property is a &lt;code&gt;RouteInfo&lt;/code&gt; object that represents where transition originated from. It's important to note that a &lt;code&gt;RouteInfo&lt;/code&gt; is a linked list and this property represents the head node of the list. In the case of an initial render, &lt;code&gt;from&lt;/code&gt; will be set to &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="feece382aeeb11aff2c1f402bfa62d1348fb6268" translate="yes" xml:space="preserve">
          <source>This property is guaranteed to change whenever a route transition happens (even when that transition only changes parameters and doesn't change the active route).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d61da15319a8f6d477ea54281d1f750de320a8d" translate="yes" xml:space="preserve">
          <source>This property must be specified upon creation, and should not be changed once created.</source>
          <target state="translated">Esta propiedad debe ser especificada en el momento de la creación,y no debe ser cambiada una vez creada.</target>
        </trans-unit>
        <trans-unit id="7cb254d7e44a7f93fba2ee853638d58a655e0c55" translate="yes" xml:space="preserve">
          <source>This property overrides the default property defined in &lt;code&gt;Ember.Enumerable&lt;/code&gt;.</source>
          <target state="translated">Esta propiedad anula la propiedad predeterminada definida en &lt;code&gt;Ember.Enumerable&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bc4839933224a7545119e48843b9c5e1290794d8" translate="yes" xml:space="preserve">
          <source>This property represents the logical name of the route, which is comma separated. For the following router:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bf517043771a30954400aa054dd262728704215" translate="yes" xml:space="preserve">
          <source>This property will return &lt;code&gt;/my-root&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9773d501349ee6511de2ee684d6598a19311be0d" translate="yes" xml:space="preserve">
          <source>This property would contain the following:</source>
          <target state="translated">Esta propiedad contendría lo siguiente:</target>
        </trans-unit>
        <trans-unit id="d20b59f6a96b6617ee0085cdddc214c8c3d28af2" translate="yes" xml:space="preserve">
          <source>This removes all helpers that have been registered, and resets and functions that were overridden by the helpers.</source>
          <target state="translated">Esto elimina todos los ayudantes que han sido registrados,y reinicia y funciones que fueron anuladas por los ayudantes.</target>
        </trans-unit>
        <trans-unit id="f3b7c25a3f2e20075045c10f4cbaf58f922adbe5" translate="yes" xml:space="preserve">
          <source>This results in the creation of a model file and a test file:</source>
          <target state="translated">Esto resulta en la creación de un archivo modelo y un archivo de prueba:</target>
        </trans-unit>
        <trans-unit id="2a89f1868ed6f1ee9a365b3c0e407202123ba3e9" translate="yes" xml:space="preserve">
          <source>This results in the entire tree of destroyables being first marked as destroying, then having all of their destructors called, and finally all being marked as isDestroyed. There won't be any in between states where some items are marked as &lt;code&gt;isDestroying&lt;/code&gt; while destroying, while others are not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d2448d5cbbd2264adc36cdc0345ffb2188196cb" translate="yes" xml:space="preserve">
          <source>This returns a string that represents how the reference will be looked up when it is loaded. If the relationship has a link it will use the &quot;link&quot; otherwise it defaults to &quot;id&quot;.</source>
          <target state="translated">Esto devuelve una cadena que representa cómo se buscará la referencia cuando se cargue.Si la relación tiene un enlace,utilizará el &quot;enlace&quot;,de lo contrario,el valor predeterminado es &quot;id&quot;.</target>
        </trans-unit>
        <trans-unit id="f4a77f92e2016358406f536036ee528d0389ad89" translate="yes" xml:space="preserve">
          <source>This returns a thenable tailored for testing. It catches failed &lt;code&gt;onSuccess&lt;/code&gt; callbacks and invokes the &lt;code&gt;Ember.Test.adapter.exception&lt;/code&gt; callback in the last chained then.</source>
          <target state="translated">Esto devuelve un thenable adaptado para la prueba. &lt;code&gt;onSuccess&lt;/code&gt; devoluciones de llamada fallidas onSuccess e invoca la devoluci&amp;oacute;n de llamada &lt;code&gt;Ember.Test.adapter.exception&lt;/code&gt; en el &amp;uacute;ltimo encadenado entonces.</target>
        </trans-unit>
        <trans-unit id="50faf92dba9f3a4835092fca1ed3e0228234be67" translate="yes" xml:space="preserve">
          <source>This returns the objects at the specified indexes, using &lt;code&gt;objectAt&lt;/code&gt;.</source>
          <target state="translated">Esto devuelve los objetos en los &amp;iacute;ndices especificados, utilizando &lt;code&gt;objectAt&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f1e3aaaf80637b6eaa622e8df1944a99aa521731" translate="yes" xml:space="preserve">
          <source>This route is part of every application, so you don't need to specify it in your &lt;code&gt;app/router.js&lt;/code&gt;.</source>
          <target state="translated">Esta ruta es parte de todas las aplicaciones, por lo que no es necesario que la especifique en su &lt;code&gt;app/router.js&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="03d7bba0ebc44c5b5992d770552d3d3655e4353b" translate="yes" xml:space="preserve">
          <source>This router creates a route for &lt;code&gt;/posts&lt;/code&gt; and for &lt;code&gt;/posts/new&lt;/code&gt;. When a user visits &lt;code&gt;/posts&lt;/code&gt;, they'll simply see the &lt;code&gt;posts.hbs&lt;/code&gt; template. (Below, &lt;a href=&quot;#toc_index-routes&quot;&gt;index routes&lt;/a&gt; explains an important addition to this.) When the user visits &lt;code&gt;posts/new&lt;/code&gt;, they'll see the &lt;code&gt;posts/new.hbs&lt;/code&gt; template rendered into the &lt;code&gt;{{outlet}}&lt;/code&gt; of the &lt;code&gt;posts&lt;/code&gt; template.</source>
          <target state="translated">Este enrutador crea una ruta para &lt;code&gt;/posts&lt;/code&gt; y para &lt;code&gt;/posts/new&lt;/code&gt; . Cuando un usuario visita &lt;code&gt;/posts&lt;/code&gt; , simplemente ver&amp;aacute; la plantilla &lt;code&gt;posts.hbs&lt;/code&gt; . (A continuaci&amp;oacute;n, las &lt;a href=&quot;#toc_index-routes&quot;&gt;rutas de &amp;iacute;ndice&lt;/a&gt; explican una adici&amp;oacute;n importante a esto). Cuando el usuario visite &lt;code&gt;posts/new&lt;/code&gt; , ver&amp;aacute; la plantilla &lt;code&gt;posts/new.hbs&lt;/code&gt; representada en el &lt;code&gt;{{outlet}}&lt;/code&gt; de la plantilla de &lt;code&gt;posts&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2682ff7e745a9f583a877a94603b3a194f20069b" translate="yes" xml:space="preserve">
          <source>This section covers some more advanced features of the router and its capability for handling complex async logic within your app.</source>
          <target state="translated">Esta sección cubre algunas características más avanzadas del router y su capacidad para manejar la compleja lógica de sincronización dentro de su aplicación.</target>
        </trans-unit>
        <trans-unit id="356477e9c652b8c488b3be5d88a9d6be9a9cca4e" translate="yes" xml:space="preserve">
          <source>This section of the Guides describes the essential features of Ember Data, a powerful set of tools for formatting requests, normalizing responses, and efficiently managing a local cache of data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6349d18558bd40c087dbdecb5a17a71ea3aa9584" translate="yes" xml:space="preserve">
          <source>This section will walk you through two ways to deploy your ember application to production using the Netlify platform:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d03de60bffa51d324cefb82c172247484bdd27e" translate="yes" xml:space="preserve">
          <source>This separation of concerns not only clarifies the architecture of your app, it can also improve its efficiency. This is particularly true when your app needs to be booted repeatedly during testing and / or server-rendering (e.g. via &lt;a href=&quot;https://github.com/tildeio/ember-cli-fastboot&quot;&gt;FastBoot&lt;/a&gt;). The configuration of a single &lt;code&gt;Application&lt;/code&gt; can be done once and shared among multiple stateful &lt;code&gt;ApplicationInstance&lt;/code&gt; instances. These instances can be discarded once they're no longer needed (e.g. when a test has run or FastBoot request has finished).</source>
          <target state="translated">Esta separaci&amp;oacute;n de preocupaciones no solo aclara la arquitectura de su aplicaci&amp;oacute;n, sino que tambi&amp;eacute;n puede mejorar su eficiencia. Esto es particularmente cierto cuando su aplicaci&amp;oacute;n necesita ser iniciada repetidamente durante las pruebas y / o la renderizaci&amp;oacute;n del servidor (por ejemplo, a trav&amp;eacute;s de &lt;a href=&quot;https://github.com/tildeio/ember-cli-fastboot&quot;&gt;FastBoot&lt;/a&gt; ). La configuraci&amp;oacute;n de una sola &lt;code&gt;Application&lt;/code&gt; se puede realizar una vez y compartir entre varias instancias de &lt;code&gt;ApplicationInstance&lt;/code&gt; con estado . Estas instancias se pueden descartar una vez que ya no sean necesarias (por ejemplo, cuando se ha ejecutado una prueba o ha finalizado la solicitud FastBoot).</target>
        </trans-unit>
        <trans-unit id="4805cff80c4003c73bc07ed858d965751990b299" translate="yes" xml:space="preserve">
          <source>This serializer expects this &lt;code&gt;errors&lt;/code&gt; object to be an Array similar to the following, compliant with the &lt;a href=&quot;https://jsonapi.org/format/#errors&quot;&gt;https://jsonapi.org/format/#errors&lt;/a&gt; specification:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="789aeba7e703a9b9f8a1615849db9c70a791d7f5" translate="yes" xml:space="preserve">
          <source>This serializer expects this &lt;code&gt;errors&lt;/code&gt; object to be an Array similar to the following, compliant with the JSON-API specification:</source>
          <target state="translated">Este serializador espera que este objeto de &lt;code&gt;errors&lt;/code&gt; sea ​​una matriz similar a la siguiente, que cumpla con la especificaci&amp;oacute;n JSON-API:</target>
        </trans-unit>
        <trans-unit id="bb8c0ec823dbba7a7a2ed2b41b55cb5e08ee937a" translate="yes" xml:space="preserve">
          <source>This serializer normalizes a JSON API payload that looks like:</source>
          <target state="translated">Este serializador normaliza una carga útil de la API de JSON que parece:</target>
        </trans-unit>
        <trans-unit id="6ae149f60b66b9e03410e34d8b8dd68ba195fe2d" translate="yes" xml:space="preserve">
          <source>This serializer will generate JSON that looks like this:</source>
          <target state="translated">Este seriador generará un JSON que se verá así:</target>
        </trans-unit>
        <trans-unit id="a037d496c03267daf854fbff115ff2ed3892a36d" translate="yes" xml:space="preserve">
          <source>This sets up a binding between the &lt;code&gt;category&lt;/code&gt; query param in the URL, and the &lt;code&gt;category&lt;/code&gt; property on &lt;code&gt;controller:articles&lt;/code&gt;. In other words, once the &lt;code&gt;articles&lt;/code&gt; route has been entered, any changes to the &lt;code&gt;category&lt;/code&gt; query param in the URL will update the &lt;code&gt;category&lt;/code&gt; property on &lt;code&gt;controller:articles&lt;/code&gt;, and vice versa. Note that you can't bind &lt;code&gt;queryParams&lt;/code&gt; to computed properties, they have to be values.</source>
          <target state="translated">Esto establece un enlace entre el par&amp;aacute;metro de consulta de &lt;code&gt;category&lt;/code&gt; en la URL y la propiedad de &lt;code&gt;category&lt;/code&gt; en el &lt;code&gt;controller:articles&lt;/code&gt; . En otras palabras, una vez que se ha ingresado la ruta de &lt;code&gt;articles&lt;/code&gt; , cualquier cambio en el par&amp;aacute;metro de consulta de &lt;code&gt;category&lt;/code&gt; en la URL actualizar&amp;aacute; la propiedad de &lt;code&gt;category&lt;/code&gt; en el &lt;code&gt;controller:articles&lt;/code&gt; , y viceversa. Tenga en cuenta que no puede vincular &lt;code&gt;queryParams&lt;/code&gt; a propiedades calculadas, tienen que ser valores.</target>
        </trans-unit>
        <trans-unit id="8dc21fa764ab09b3766ad6e775fb8fca84781eb0" translate="yes" xml:space="preserve">
          <source>This sets up a binding between the &lt;code&gt;category&lt;/code&gt; query param in the URL, and the &lt;code&gt;category&lt;/code&gt; property on &lt;code&gt;controller:articles&lt;/code&gt;. In other words, once the &lt;code&gt;articles&lt;/code&gt; route has been entered, any changes to the &lt;code&gt;category&lt;/code&gt; query param in the URL will update the &lt;code&gt;category&lt;/code&gt; property on &lt;code&gt;controller:articles&lt;/code&gt;, and vice versa. Note that you can't make &lt;code&gt;queryParams&lt;/code&gt; be a dynamically generated property (neither computed property, nor property getter); they have to be values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4fca12a79c237845effaba4d5f11c49b9077507" translate="yes" xml:space="preserve">
          <source>This setup allows you to run the routing layer of your Ember app in a server environment using Node.js and completely disable rendering. This allows you to simulate and discover the resources (i.e. AJAX requests) needed to fulfill a given request and eagerly &quot;push&quot; these resources to the client.</source>
          <target state="translated">Esta configuración te permite ejecutar la capa de enrutamiento de tu aplicación Ember en un entorno de servidor usando Node.js y desactivar completamente el renderizado.Esto te permite simular y descubrir los recursos (es decir,las solicitudes AJAX)necesarios para cumplir con una solicitud determinada y &quot;empujar&quot; con entusiasmo estos recursos al cliente.</target>
        </trans-unit>
        <trans-unit id="02dd78ab18220d6a23d424669cd9bfd4688435b6" translate="yes" xml:space="preserve">
          <source>This setup allows you to run your Ember app in a server environment using Node.js and render its content into static HTML for SEO purposes.</source>
          <target state="translated">Esta configuración le permite ejecutar su aplicación Ember en un entorno de servidor utilizando Node.js y convertir su contenido en HTML estático para fines de SEO.</target>
        </trans-unit>
        <trans-unit id="0fc8bfa537605301181bc268ec1121a0fff7f530" translate="yes" xml:space="preserve">
          <source>This shows the literal string &lt;code&gt;&amp;lt;b&amp;gt;Hello world&amp;lt;/b&amp;gt;&lt;/code&gt; to the user, rather than the text in bold as you probably intended. We can tell Ember not to escape the return value (that is, that it is &lt;em&gt;safe&lt;/em&gt;) by using the &lt;a href=&quot;http://emberjs.com/api/classes/Ember.String.html#method_htmlSafe&quot;&gt;&lt;code&gt;htmlSafe&lt;/code&gt;&lt;/a&gt; string utility:</source>
          <target state="translated">Esto muestra la cadena literal &lt;code&gt;&amp;lt;b&amp;gt;Hello world&amp;lt;/b&amp;gt;&lt;/code&gt; al usuario, en lugar del texto en negrita como probablemente pretend&amp;iacute;a. Podemos decirle a Ember que no escape el valor de retorno (es decir, que es &lt;em&gt;seguro&lt;/em&gt; ) usando la utilidad de cadena &lt;a href=&quot;http://emberjs.com/api/classes/Ember.String.html#method_htmlSafe&quot;&gt; &lt;code&gt;htmlSafe&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="14461f490d3629183001df3471224dbd1beb7332" translate="yes" xml:space="preserve">
          <source>This snippet says &quot;take the &lt;code&gt;userDidDeleteAccount&lt;/code&gt; action from the parent and make it available on the child component as the property &lt;code&gt;onConfirm&lt;/code&gt;.&quot; Note the use here of the &lt;code&gt;action&lt;/code&gt; helper, which serves to return the function named &lt;code&gt;&quot;userDidDeleteAccount&quot;&lt;/code&gt; that we are passing to the component.</source>
          <target state="translated">Este fragmento dice &quot;tomar la acci&amp;oacute;n &lt;code&gt;userDidDeleteAccount&lt;/code&gt; del padre y hacerla disponible en el componente hijo como la propiedad &lt;code&gt;onConfirm&lt;/code&gt; &quot;. Tenga en cuenta el uso aqu&amp;iacute; del asistente de &lt;code&gt;action&lt;/code&gt; , que sirve para devolver la funci&amp;oacute;n denominada &lt;code&gt;&quot;userDidDeleteAccount&quot;&lt;/code&gt; que le estamos pasando al componente.</target>
        </trans-unit>
        <trans-unit id="10aa9c950fe3b173b7fe0ffb80e1c78f6a244f66" translate="yes" xml:space="preserve">
          <source>This synchronous behavior can also lead to observers being fired multiple times when observing multiple properties:</source>
          <target state="translated">Este comportamiento sincrónico también puede llevar a que los observadores sean disparados varias veces al observar múltiples propiedades:</target>
        </trans-unit>
        <trans-unit id="365161a9879b63b8be4e252766b6673143714259" translate="yes" xml:space="preserve">
          <source>This syntax is known as &lt;em&gt;classic class&lt;/em&gt; syntax, and if you're starting out on a new Ember application it's recommended that you stick with native classes instead. However, if you are working in an older application, or in an addon, you may encounter this syntax, so you can check out the &lt;a href=&quot;https://guides.emberjs.com/v3.12.0/object-model/&quot;&gt;pre-Octane guides on classic classes&lt;/a&gt; for more information on them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ca7bb302863b1f3661818e192c30d8b7af3c091" translate="yes" xml:space="preserve">
          <source>This syntax offers the convenience to add a class if a property is &lt;code&gt;false&lt;/code&gt;:</source>
          <target state="translated">Esta sintaxis ofrece la conveniencia de agregar una clase si una propiedad es &lt;code&gt;false&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="a9ae6e226ca09bce17c61dde6d0c00e6d37618ea" translate="yes" xml:space="preserve">
          <source>This technique is a reasonable first step, but has limitations:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1ed53e820aed98abe96f4bcad2c93d5f60e035c" translate="yes" xml:space="preserve">
          <source>This template would display all properties on the &lt;code&gt;developer&lt;/code&gt; object in a list:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eee93099eea962e7715594aebb65f2ee2649df43" translate="yes" xml:space="preserve">
          <source>This template would display all properties on the &lt;code&gt;user&lt;/code&gt; object in a list:</source>
          <target state="translated">Esta plantilla mostrar&amp;iacute;a todas las propiedades del objeto de &lt;code&gt;user&lt;/code&gt; en una lista:</target>
        </trans-unit>
        <trans-unit id="afccb08d1ac5974f56f2db8b4c4a83dee7fac93b" translate="yes" xml:space="preserve">
          <source>This time when we setup our &lt;code&gt;moduleFor&lt;/code&gt; we need to pass an options object as our third argument that has the controller's &lt;code&gt;needs&lt;/code&gt;.</source>
          <target state="translated">Esta vez, cuando configuramos nuestro &lt;code&gt;moduleFor&lt;/code&gt; , necesitamos pasar un objeto de opciones como nuestro tercer argumento que tiene las &lt;code&gt;needs&lt;/code&gt; del controlador .</target>
        </trans-unit>
        <trans-unit id="26eb1c85e3767170ddbe236d44279a005945e744" translate="yes" xml:space="preserve">
          <source>This title will take effect when we enter the &amp;ldquo;post&amp;rdquo; route, and the line of code in our &lt;code&gt;willDestroy&lt;/code&gt; hook will take care of restoring the former title when we return to the &amp;ldquo;posts&amp;rdquo; route.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d62e458d7d882a12cb4203c51a285838866941d2" translate="yes" xml:space="preserve">
          <source>This transformation allows you to &lt;code&gt;import&lt;/code&gt; moment in your app. (e.g. &lt;code&gt;import moment from 'moment';&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="472a11330a41f27829d5766ed001e83edced7c89" translate="yes" xml:space="preserve">
          <source>This utility function is used to declare a given component has no backing class. When the rendering engine detects this it is able to perform a number of optimizations. Templates that are associated with &lt;code&gt;templateOnly()&lt;/code&gt; will be rendered &lt;em&gt;as is&lt;/em&gt; without adding a wrapping &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; (or any of the other element customization behaviors of &lt;a href=&quot;https://api.emberjs.com/ember/release/classes/Component&quot;&gt;@ember/component&lt;/a&gt;). Specifically, this means that the template will be rendered as &quot;outer HTML&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d01f3b8c1863d9586e5d760a848d3d268d6bdf8" translate="yes" xml:space="preserve">
          <source>This value is defaulted to &lt;code&gt;auto&lt;/code&gt; by the &lt;code&gt;locationType&lt;/code&gt; setting of &lt;code&gt;/config/environment.js&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="320e20ec08a17dd14b114fefba162280a1a8e762" translate="yes" xml:space="preserve">
          <source>This way the &lt;code&gt;{{action}}&lt;/code&gt; will fire when clicking with the alt key pressed down.</source>
          <target state="translated">De esta manera, la &lt;code&gt;{{action}}&lt;/code&gt; activar&amp;aacute; al hacer clic con la tecla alt presionada.</target>
        </trans-unit>
        <trans-unit id="e963dddd92986a8f66f2f216766871bc0c689a3c" translate="yes" xml:space="preserve">
          <source>This way the action will fire when clicking with the alt key pressed down. Alternatively, supply &quot;any&quot; to the &lt;code&gt;allowedKeys&lt;/code&gt; option to accept any combination of modifier keys.</source>
          <target state="translated">De esta manera, la acci&amp;oacute;n se disparar&amp;aacute; al hacer clic con la tecla alt presionada. Alternativamente, proporcione &quot;cualquiera&quot; a la opci&amp;oacute;n &lt;code&gt;allowedKeys&lt;/code&gt; para aceptar cualquier combinaci&amp;oacute;n de teclas modificadoras.</target>
        </trans-unit>
        <trans-unit id="93d9f53f59f84e70d021255650919e1893d8f819" translate="yes" xml:space="preserve">
          <source>This will allow you to import jQuery from &lt;code&gt;jquery&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd6de6f2495f60b0b45637260afcb844ddcddbc6" translate="yes" xml:space="preserve">
          <source>This will also trigger a rerender. No matter where the update occurs, updating a tracked property will let Ember know to rerender any affected portion of the app.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bedb78f365050fbd4069b91241e79e0fffc66905" translate="yes" xml:space="preserve">
          <source>This will be set to the Application instance when it is created.</source>
          <target state="translated">Esto se establecerá en la instancia de la Aplicación cuando se cree.</target>
        </trans-unit>
        <trans-unit id="b0d2a0761856747c7bdf1757594db900c323b0ab" translate="yes" xml:space="preserve">
          <source>This will bind checked state of this checkbox to the value of &lt;code&gt;isEmberized&lt;/code&gt; -- if either one changes, it will be reflected in the other.</source>
          <target state="translated">Esto vincular&amp;aacute; el estado marcado de esta casilla de verificaci&amp;oacute;n al valor de &lt;code&gt;isEmberized&lt;/code&gt; ; si alguno de ellos cambia, se reflejar&amp;aacute; en el otro.</target>
        </trans-unit>
        <trans-unit id="25e3b1918ed474cee33c724ea48d9dc47b998531" translate="yes" xml:space="preserve">
          <source>This will call the &lt;code&gt;targetAction&lt;/code&gt; method on the &lt;code&gt;targetObject&lt;/code&gt; whenever the value of the &lt;code&gt;propertyKey&lt;/code&gt; changes.</source>
          <target state="translated">Esto llamar&amp;aacute; al m&amp;eacute;todo &lt;code&gt;targetAction&lt;/code&gt; en &lt;code&gt;targetObject&lt;/code&gt; siempre que cambie el valor de &lt;code&gt;propertyKey&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1112ad430de08e3a9e5b258697086fe3531f93eb" translate="yes" xml:space="preserve">
          <source>This will cause changes to the &lt;code&gt;controller:articles&lt;/code&gt;'s &lt;code&gt;category&lt;/code&gt; property to update the &lt;code&gt;articles_category&lt;/code&gt; query param, and vice versa.</source>
          <target state="translated">Esto provocar&amp;aacute; cambios en el &lt;code&gt;controller:articles&lt;/code&gt; 's &lt;code&gt;category&lt;/code&gt; propiedad para actualizar el &lt;code&gt;articles_category&lt;/code&gt; consulta par&amp;aacute;metro, y viceversa.</target>
        </trans-unit>
        <trans-unit id="b9755f75a3b22405decec5b951256d1bf2194edb" translate="yes" xml:space="preserve">
          <source>This will combine the values of the array into a single value. It is a useful way to collect a summary value from an array. This corresponds to the &lt;code&gt;reduce()&lt;/code&gt; method defined in JavaScript 1.8.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01abb5b2dee8f3eadfbf27cf12dc694c82c9b0fa" translate="yes" xml:space="preserve">
          <source>This will combine the values of the enumerator into a single value. It is a useful way to collect a summary value from an enumeration. This corresponds to the &lt;code&gt;reduce()&lt;/code&gt; method defined in JavaScript 1.8.</source>
          <target state="translated">Esto combinar&amp;aacute; los valores del enumerador en un solo valor. Es una forma &amp;uacute;til de recopilar un valor de resumen de una enumeraci&amp;oacute;n. Esto corresponde al m&amp;eacute;todo &lt;code&gt;reduce()&lt;/code&gt; definido en JavaScript 1.8.</target>
        </trans-unit>
        <trans-unit id="4d8eee678a37c71d0c8bd12462d3862f9e24bd5a" translate="yes" xml:space="preserve">
          <source>This will create a new &lt;code&gt;comment&lt;/code&gt; record and save it to the server. Ember Data will also update the blogPost to include our newly created comment in its &lt;code&gt;comments&lt;/code&gt; relationship.</source>
          <target state="translated">Esto crear&amp;aacute; un nuevo registro de &lt;code&gt;comment&lt;/code&gt; y lo guardar&amp;aacute; en el servidor. Ember Data tambi&amp;eacute;n actualizar&amp;aacute; el blogPost para incluir nuestro comentario reci&amp;eacute;n creado en su relaci&amp;oacute;n de &lt;code&gt;comments&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="33c9e6435e1c4f883e5e4bdb72fe6185866b3577" translate="yes" xml:space="preserve">
          <source>This will create two files, our helper and its related test:</source>
          <target state="translated">Esto creará dos archivos,nuestro ayudante y su prueba relacionada:</target>
        </trans-unit>
        <trans-unit id="dcbe74f9dc4684893252fa7928f87a33353149e1" translate="yes" xml:space="preserve">
          <source>This will display the result of &lt;code&gt;this.foo.item1&lt;/code&gt; when index is 1, and &lt;code&gt;this.foo.item2&lt;/code&gt; when index is 2, etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06a61beff59c9a238e101b8d830b62a3ba3f1d36" translate="yes" xml:space="preserve">
          <source>This will display the result of &lt;code&gt;this.get('foo.item1')&lt;/code&gt; when index is 1, and &lt;code&gt;this.get('foo.item2')&lt;/code&gt; when index is 2, etc.</source>
          <target state="translated">Esto mostrar&amp;aacute; el resultado de &lt;code&gt;this.get('foo.item1')&lt;/code&gt; cuando el &amp;iacute;ndice es 1, y &lt;code&gt;this.get('foo.item2')&lt;/code&gt; cuando el &amp;iacute;ndice es 2, etc.</target>
        </trans-unit>
        <trans-unit id="a9259ca0bb82d89e48df977ef1e42ddeb57457e8" translate="yes" xml:space="preserve">
          <source>This will generate the following file:</source>
          <target state="translated">Esto generará el siguiente archivo:</target>
        </trans-unit>
        <trans-unit id="f66f6e9c3264383a6dc79ef4dba17dfe12475045" translate="yes" xml:space="preserve">
          <source>This will make three new commands available to Ember CLI within your project, &lt;code&gt;feature:list&lt;/code&gt;, &lt;code&gt;feature:enable&lt;/code&gt;, and &lt;code&gt;feature:disable&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df9f78f7b1600d62af8dbc79c8ec1c529fffac70" translate="yes" xml:space="preserve">
          <source>This will modify your &lt;code&gt;package.json&lt;/code&gt; (and &lt;code&gt;package-lock.json&lt;/code&gt; or &lt;code&gt;yarn.lock&lt;/code&gt;), typically bringing in other dependencies. Some addons will also add additional files to your projects when relevant.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="906404e31e56fa309043de215463e96251e5794e" translate="yes" xml:space="preserve">
          <source>This will only work if the record has already finished loading.</source>
          <target state="translated">Esto sólo funcionará si el disco ya ha terminado de cargarse.</target>
        </trans-unit>
        <trans-unit id="275c4807a4fc7dd57c70ad52977455a63b60071c" translate="yes" xml:space="preserve">
          <source>This will push the tag for the &lt;code&gt;[]&lt;/code&gt; property onto the autotrack stack, and that property is what is invalidated when the array is updated with KVO methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="128514546a9dca77c2ec486e9e802bd28c483968" translate="yes" xml:space="preserve">
          <source>This will remove jQuery from your vendor.js bundle and disable any use of jQuery in Ember itself. Now your app will be about 30KB lighter!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8d929b9d0335a3ed5cf736b11bdf433272222ee" translate="yes" xml:space="preserve">
          <source>This will result in a posts.new url of &lt;code&gt;/#/posts/new&lt;/code&gt;.</source>
          <target state="translated">Esto dar&amp;aacute; como resultado una URL posts.new de &lt;code&gt;/#/posts/new&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="29fb1351e61c41fb104416f7850a8b5069cdd3f6" translate="yes" xml:space="preserve">
          <source>This will result in a posts.new url of &lt;code&gt;/posts/new&lt;/code&gt; for modern browsers that support the &lt;code&gt;history&lt;/code&gt; api or &lt;code&gt;/#/posts/new&lt;/code&gt; for older ones, like Internet Explorer 9 and below.</source>
          <target state="translated">Esto dar&amp;aacute; como resultado una URL posts.new de &lt;code&gt;/posts/new&lt;/code&gt; para los navegadores modernos que admiten la API del &lt;code&gt;history&lt;/code&gt; o &lt;code&gt;/#/posts/new&lt;/code&gt; para los m&amp;aacute;s antiguos, como Internet Explorer 9 y versiones anteriores.</target>
        </trans-unit>
        <trans-unit id="ef38bf8c063d320ef5caf31e346a8a11963ad798" translate="yes" xml:space="preserve">
          <source>This will result in a posts.new url of &lt;code&gt;/posts/new&lt;/code&gt;.</source>
          <target state="translated">Esto dar&amp;aacute; como resultado una URL posts.new de &lt;code&gt;/posts/new&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a594b83e2729c4c06fe483d9931d88196c8ca620" translate="yes" xml:space="preserve">
          <source>This will tell the JSON API adapter that requests for &lt;code&gt;formula&lt;/code&gt; should go to &lt;code&gt;/formulae/1&lt;/code&gt; instead of &lt;code&gt;/formulas/1&lt;/code&gt;, and that requests for &lt;code&gt;advice&lt;/code&gt; should go to &lt;code&gt;/advice/1&lt;/code&gt; instead of &lt;code&gt;/advices/1&lt;/code&gt;.</source>
          <target state="translated">Esto le dir&amp;aacute; al adaptador de API JSON que las solicitudes de &lt;code&gt;formula&lt;/code&gt; deben ir a &lt;code&gt;/formulae/1&lt;/code&gt; lugar de &lt;code&gt;/formulas/1&lt;/code&gt; , y que las solicitudes de &lt;code&gt;advice&lt;/code&gt; deben ir a &lt;code&gt;/advice/1&lt;/code&gt; en lugar de &lt;code&gt;/advices/1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="388cb66fb1ec711f83c1701450ba620236ebbe6b" translate="yes" xml:space="preserve">
          <source>This will use the primitive &lt;code&gt;replace()&lt;/code&gt; method to insert an object at the specified index.</source>
          <target state="translated">Esto usar&amp;aacute; el m&amp;eacute;todo principal &lt;code&gt;replace()&lt;/code&gt; para insertar un objeto en el &amp;iacute;ndice especificado.</target>
        </trans-unit>
        <trans-unit id="43bffd1dffcb32d458aa58f02d05febe38e1f4a7" translate="yes" xml:space="preserve">
          <source>This works great for the &lt;code&gt;list-of-drafts&lt;/code&gt; component. However, your app is likely made up of many different components. On another page you may want a component to display the number of drafts. You may be tempted to copy and paste your existing &lt;code&gt;willRender&lt;/code&gt; code into the new component.</source>
          <target state="translated">Esto funciona muy bien para el componente de &lt;code&gt;list-of-drafts&lt;/code&gt; . Sin embargo, es probable que su aplicaci&amp;oacute;n est&amp;eacute; formada por muchos componentes diferentes. En otra p&amp;aacute;gina, es posible que desee que un componente muestre el n&amp;uacute;mero de borradores. Puede tener la tentaci&amp;oacute;n de copiar y pegar su c&amp;oacute;digo &lt;code&gt;willRender&lt;/code&gt; existente en el nuevo componente.</target>
        </trans-unit>
        <trans-unit id="560b1385ffc6e729721990fa2a58263d2b72df09" translate="yes" xml:space="preserve">
          <source>This works pretty well, but the message content is very different. It's also pretty long, so it wouldn't really be easy to pass the message content through as an argument. What we really want is to leave a placeholder for any content supplied by the &lt;code&gt;&amp;lt;Message&amp;gt;&lt;/code&gt; tag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14da4507e84203e01b9ae7da382b3a00aaae7fdc" translate="yes" xml:space="preserve">
          <source>This would render this HTML when no title is passed to the component:</source>
          <target state="translated">Esto haría que este HTML cuando no se le pase el título al componente:</target>
        </trans-unit>
        <trans-unit id="8336ed0cc011aca5ef8d79b9105deaab281f7bb6" translate="yes" xml:space="preserve">
          <source>This would render this HTML:</source>
          <target state="translated">Esto haría que este HTML:</target>
        </trans-unit>
        <trans-unit id="0bafaa0983dca2c93a7d748f2e163597e94bf0d7" translate="yes" xml:space="preserve">
          <source>Three notable properties on the &lt;code&gt;ENV&lt;/code&gt; object are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddbb8f268d6b753ca5221af5991b8173c660326e" translate="yes" xml:space="preserve">
          <source>Throwing an &lt;code&gt;InvalidError&lt;/code&gt; makes per-attribute errors available for records to use in the UI as needed. Records can also use this information to mark themselves as being in an &lt;code&gt;invalid&lt;/code&gt; state. For more reading &lt;a href=&quot;https://emberjs.github.io/rfcs/0465-record-data-errors.html&quot;&gt;see the RecordData Errors RFC&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84006ec1fbe089f93f04790646a82cbef861bb3e" translate="yes" xml:space="preserve">
          <source>Thus when the div is clicked, the action on that context is called. Because the &lt;code&gt;actionFunction&lt;/code&gt; is just a function, closure actions can be passed between components and still execute in the correct context.</source>
          <target state="translated">Por lo tanto, cuando se hace clic en el div, se llama a la acci&amp;oacute;n en ese contexto. Debido a que &lt;code&gt;actionFunction&lt;/code&gt; es solo una funci&amp;oacute;n, las acciones de cierre se pueden pasar entre componentes y a&amp;uacute;n ejecutarse en el contexto correcto.</target>
        </trans-unit>
        <trans-unit id="777fb441ed8a221e3154f33948c533e6c0b3cd66" translate="yes" xml:space="preserve">
          <source>Thus, many of Ember's built-in helpers (as well as your custom helpers) can be used in nested form.</source>
          <target state="translated">Así,muchos de los ayudantes incorporados de Ember (así como sus ayudantes personalizados)pueden ser utilizados en forma anidada.</target>
        </trans-unit>
        <trans-unit id="bc09fd602f6d10a4673777c6b4fc42a255573839" translate="yes" xml:space="preserve">
          <source>Thus, the output of these combined helpers is &lt;code&gt;10&lt;/code&gt;.</source>
          <target state="translated">Por lo tanto, la salida de estos ayudantes combinados es &lt;code&gt;10&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="22a4ad2c60d9b1a4a4ab47810c732e12faec00b0" translate="yes" xml:space="preserve">
          <source>TimeoutError</source>
          <target state="translated">TimeoutError</target>
        </trans-unit>
        <trans-unit id="1f2ce174b2e23b432db6447553d675ab0c9dda04" translate="yes" xml:space="preserve">
          <source>Timer information for use in canceling, see `cancel`.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8708c4922aad6bc5f7d4fb439f5a35edf457ec9" translate="yes" xml:space="preserve">
          <source>Timer information for use in canceling, see `run.cancel`.</source>
          <target state="translated">Información del temporizador para usar en la cancelación,ver &quot;correr.cancelar&quot;.</target>
        </trans-unit>
        <trans-unit id="ad8314f52b2f4c62535401de872ed1002612344d" translate="yes" xml:space="preserve">
          <source>Timer object to cancel</source>
          <target state="translated">El temporizador se opone a la cancelación</target>
        </trans-unit>
        <trans-unit id="d393dc0e4b2a5c2cc44ef7e4ef9df6956f16e16f" translate="yes" xml:space="preserve">
          <source>To access a service, you can inject it in any container-resolved object such as a component or another service using the &lt;code&gt;Ember.inject.service&lt;/code&gt; function. There are two ways to use this function. You can either invoke it with no arguments, or you can pass it the registered name of the service. When no arguments are passed, the service is loaded based on the name of the variable key. You can load the shopping cart service with no arguments like below.</source>
          <target state="translated">Para acceder a un servicio, puede inyectarlo en cualquier objeto resuelto por un contenedor, como un componente u otro servicio, utilizando la funci&amp;oacute;n &lt;code&gt;Ember.inject.service&lt;/code&gt; . Hay dos formas de utilizar esta funci&amp;oacute;n. Puede invocarlo sin argumentos o puede pasarle el nombre registrado del servicio. Cuando no se pasan argumentos, el servicio se carga en funci&amp;oacute;n del nombre de la clave de la variable. Puede cargar el servicio de carrito de compras sin argumentos como el siguiente.</target>
        </trans-unit>
        <trans-unit id="47a48f940e245023ae65dbf358116a8794750b2b" translate="yes" xml:space="preserve">
          <source>To access a service, you can inject it in any container-resolved object such as a component or another service using the &lt;code&gt;inject&lt;/code&gt; decorator from the &lt;code&gt;@ember/service&lt;/code&gt; module. Standard practice is to alias &lt;code&gt;inject&lt;/code&gt; as &lt;code&gt;service&lt;/code&gt; to make it more clear that it is performing service injection. There are two ways to use this decorator. You can either invoke it with no arguments, or you can pass it the registered name of the service. When no arguments are passed, the service is loaded based on the name of the decorated property. You can load the shopping cart service with no arguments like below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffe33c827a08c52160d5affa7f5c08e93d329fbb" translate="yes" xml:space="preserve">
          <source>To accomplish that, we'll create a modifier in &lt;code&gt;app/modifiers/autofocus.js&lt;/code&gt;. First, install &lt;a href=&quot;https://github.com/ember-modifier/ember-modifier&quot;&gt;&lt;code&gt;ember-modifier&lt;/code&gt;&lt;/a&gt; and then generate an &lt;code&gt;autofocus&lt;/code&gt; modifier for your app:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="331593d4190d1c8bc321ea7f987f9d54aab9f978" translate="yes" xml:space="preserve">
          <source>To accomplish this, we can use &lt;a href=&quot;https://github.com/ember-modifier/ember-modifier&quot;&gt;&lt;code&gt;ember-modifier&lt;/code&gt;&lt;/a&gt; to create a &lt;code&gt;on-click-outside&lt;/code&gt; modifier that sets up the event listener after the element is first inserted and removes the event listener when the element is removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cb96283d1f05e33a412979c08b0402944a820d8" translate="yes" xml:space="preserve">
          <source>To add JavaScript to a component, create a JavaScript file in the same location as the template file, with the same name, and export a subclass of &lt;code&gt;Component&lt;/code&gt; as the default value. For example, to add Javascript to the &lt;code&gt;PersonProfile&lt;/code&gt; component which we defined above, we would create &lt;code&gt;app/comopnents/person-profile.js&lt;/code&gt; and export our class as the default, like so:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad4e497b4d36c647d22f988a7c0708a0614aef99" translate="yes" xml:space="preserve">
          <source>To add a &lt;code&gt;category&lt;/code&gt; query parameter that will filter out all the articles that haven't been categorized as popular we'd specify &lt;code&gt;'category'&lt;/code&gt; as one of &lt;code&gt;controller:article&lt;/code&gt;'s &lt;code&gt;queryParams&lt;/code&gt;:</source>
          <target state="translated">Para agregar un par&amp;aacute;metro de consulta de &lt;code&gt;category&lt;/code&gt; que filtrar&amp;aacute; todos los art&amp;iacute;culos que no han sido categorizados como populares, especificar&amp;iacute;amos &lt;code&gt;'category'&lt;/code&gt; como uno de &lt;code&gt;controller:article&lt;/code&gt; 's &lt;code&gt;queryParams&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="881e05d45a48244e280518b093e6c499505339ae" translate="yes" xml:space="preserve">
          <source>To add a &lt;code&gt;category&lt;/code&gt; query parameter that will filter out all the articles that haven't been categorized as popular we'd specify &lt;code&gt;'category'&lt;/code&gt; as one of &lt;code&gt;controller:articles&lt;/code&gt;'s &lt;code&gt;queryParams&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64b4906525b4bd262e5a9d0ce454f20e5241165a" translate="yes" xml:space="preserve">
          <source>To add a new helper, create a file with the name of the helper you want (e.g. &lt;code&gt;format-currency.js&lt;/code&gt;) in your application's &lt;code&gt;helpers&lt;/code&gt; directory. You can also have Ember generate the file for you from the command line:</source>
          <target state="translated">Para agregar un nuevo ayudante, cree un archivo con el nombre del ayudante que desee (por ejemplo, &lt;code&gt;format-currency.js&lt;/code&gt; ) en el directorio de &lt;code&gt;helpers&lt;/code&gt; su aplicaci&amp;oacute;n . Tambi&amp;eacute;n puede hacer que Ember genere el archivo por usted desde la l&amp;iacute;nea de comando:</target>
        </trans-unit>
        <trans-unit id="ccf70d0371c2fbff368e75db67c4c62218610aa5" translate="yes" xml:space="preserve">
          <source>To add an object to an enumerable, use the &lt;code&gt;addObject()&lt;/code&gt; method. This method will only add the object to the enumerable if the object is not already present and is of a type supported by the enumerable.</source>
          <target state="translated">Para agregar un objeto a un enumerable, use el m&amp;eacute;todo &lt;code&gt;addObject()&lt;/code&gt; . Este m&amp;eacute;todo solo agregar&amp;aacute; el objeto al enumerable si el objeto a&amp;uacute;n no est&amp;aacute; presente y es de un tipo admitido por el enumerable.</target>
        </trans-unit>
        <trans-unit id="612437c7a9dd2aab848343a115ff82b4a3a49077" translate="yes" xml:space="preserve">
          <source>To add an observer for a property, call:</source>
          <target state="translated">Para añadir un observador para una propiedad,llame:</target>
        </trans-unit>
        <trans-unit id="4867be37996666d07d63c82a065245790f59a744" translate="yes" xml:space="preserve">
          <source>To add behavior to the Application's boot process, you can define initializers in the &lt;code&gt;app/initializers&lt;/code&gt; directory, or with &lt;code&gt;ember generate initializer&lt;/code&gt; using Ember CLI. These files should export a named &lt;code&gt;initialize&lt;/code&gt; function which will receive the created &lt;code&gt;application&lt;/code&gt; object as its first argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64f77ec9361b31e70af01b3aeed99d505520fad8" translate="yes" xml:space="preserve">
          <source>To add functions and properties to instances of a constructor by extending the constructor's prototype see &lt;code&gt;reopen&lt;/code&gt;</source>
          <target state="translated">Para agregar funciones y propiedades a instancias de un constructor extendiendo el prototipo del constructor, vea &lt;code&gt;reopen&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fbc1d24b350815efa8e5ebb0581fbf2701efa8fd" translate="yes" xml:space="preserve">
          <source>To add functions and properties to the constructor itself, see &lt;code&gt;reopenClass&lt;/code&gt;</source>
          <target state="translated">Para agregar funciones y propiedades al propio constructor, consulte &lt;code&gt;reopenClass&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0e1f6f236f185a772efb6540307b2e949361e3c1" translate="yes" xml:space="preserve">
          <source>To add new events to be listened to:</source>
          <target state="translated">Para añadir nuevos eventos para ser escuchados:</target>
        </trans-unit>
        <trans-unit id="dd74399dd3c625fbe38e2a7a93a9e1356892dc03" translate="yes" xml:space="preserve">
          <source>To allow the &lt;code&gt;willTransition&lt;/code&gt; event to continue bubbling to the parent route, use &lt;code&gt;return true;&lt;/code&gt;. When the &lt;code&gt;willTransition&lt;/code&gt; method has a return value of &lt;code&gt;true&lt;/code&gt; then the parent route's &lt;code&gt;willTransition&lt;/code&gt; method will be fired, enabling &quot;bubbling&quot; behavior for the event.</source>
          <target state="translated">Para permitir que el evento &lt;code&gt;willTransition&lt;/code&gt; contin&amp;uacute;e propag&amp;aacute;ndose a la ruta principal, use &lt;code&gt;return true;&lt;/code&gt; . Cuando el m&amp;eacute;todo &lt;code&gt;willTransition&lt;/code&gt; tiene un valor de retorno &lt;code&gt;true&lt;/code&gt; , se &lt;code&gt;willTransition&lt;/code&gt; m&amp;eacute;todo willTransition de la ruta principal , lo que permitir&amp;aacute; el comportamiento de &quot;burbujeo&quot; para el evento.</target>
        </trans-unit>
        <trans-unit id="f55c6421e541207d1e25237aa0749707b6d2ce1f" translate="yes" xml:space="preserve">
          <source>To allow the user to widen the image, we will need to add an action that toggles the value of &lt;code&gt;isWide&lt;/code&gt;. Let's call this action &lt;code&gt;toggleImageSize&lt;/code&gt;</source>
          <target state="translated">Para permitir al usuario ampliar la imagen, necesitaremos agregar una acci&amp;oacute;n que &lt;code&gt;isWide&lt;/code&gt; el valor de isWide . Llamemos a esta acci&amp;oacute;n &lt;code&gt;toggleImageSize&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3893ea84ac6eb7bbc9a0aae0f524ff440385112a" translate="yes" xml:space="preserve">
          <source>To annotate computed properties, use the &lt;code&gt;Ember.computed()&lt;/code&gt; method to wrap the function:</source>
          <target state="translated">Para anotar las propiedades calculadas, use el m&amp;eacute;todo &lt;code&gt;Ember.computed()&lt;/code&gt; para ajustar la funci&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="e071cc851bb0bc0f6989e55a7267d408ac9f27fc" translate="yes" xml:space="preserve">
          <source>To attach an event handler to an HTML tag, we use the &lt;code&gt;on&lt;/code&gt; HTML modifier. HTML modifiers are an Ember syntax that allow us to attach logic to a tag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fe75361f7d4d895b287bf14c5b819b85797d1a1" translate="yes" xml:space="preserve">
          <source>To avoid this behavior, it is encouraged to initialize those arrays and object properties during &lt;code&gt;init()&lt;/code&gt;. Doing so ensures each instance will be unique.</source>
          <target state="translated">Para evitar este comportamiento, se recomienda inicializar esas matrices y propiedades de objeto durante &lt;code&gt;init()&lt;/code&gt; . Hacerlo asegura que cada instancia ser&amp;aacute; &amp;uacute;nica.</target>
        </trans-unit>
        <trans-unit id="7023afe6c467f1d9d8a77531b4eee7ffb2d113e8" translate="yes" xml:space="preserve">
          <source>To begin, let's generate our new component. We'll call this component &lt;code&gt;list-filter&lt;/code&gt;, since all we want our component to do is filter the list of rentals based on input.</source>
          <target state="translated">Para comenzar, generemos nuestro nuevo componente. A este componente lo llamaremos &lt;code&gt;list-filter&lt;/code&gt; , ya que todo lo que queremos que haga nuestro componente es filtrar la lista de alquileres seg&amp;uacute;n la entrada.</target>
        </trans-unit>
        <trans-unit id="2041c7e5184639b6652b147ff7731d4861370040" translate="yes" xml:space="preserve">
          <source>To browse addons, visit the &lt;a href=&quot;https://emberobserver.com/&quot;&gt;Ember Observer&lt;/a&gt; website. It catalogs and categorizes Ember addons that have been published to NPM and assigns them a score based on a variety of criteria.</source>
          <target state="translated">Para buscar complementos, visite el sitio web de &lt;a href=&quot;https://emberobserver.com/&quot;&gt;Ember Observer&lt;/a&gt; . Cataloga y clasifica los complementos de Ember que se han publicado en NPM y les asigna una puntuaci&amp;oacute;n basada en una variedad de criterios.</target>
        </trans-unit>
        <trans-unit id="72c79a645f164969a578face136c93d7b1bba2ca" translate="yes" xml:space="preserve">
          <source>To call an action on specific events, use the &lt;code&gt;{{on}}&lt;/code&gt; modifier:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d2de65aa264859c42ccec965b16380ce611d54d" translate="yes" xml:space="preserve">
          <source>To change the format of the data that is sent to the backend store, you can use the &lt;a href=&quot;http://emberjs.com/api/data/classes/DS.JSONAPISerializer.html#method_serialize&quot;&gt;&lt;code&gt;serialize()&lt;/code&gt;&lt;/a&gt; hook. Let's say that we have this JSON API response from Ember Data:</source>
          <target state="translated">Para cambiar el formato de los datos que se env&amp;iacute;an a la tienda de backend, puede usar el &lt;a href=&quot;http://emberjs.com/api/data/classes/DS.JSONAPISerializer.html#method_serialize&quot;&gt; &lt;code&gt;serialize()&lt;/code&gt; &lt;/a&gt; . Digamos que tenemos esta respuesta de la API JSON de Ember Data:</target>
        </trans-unit>
        <trans-unit id="b8e8771ec7ed4b3c5ee9b1bbe9db135c8bf0b4ce" translate="yes" xml:space="preserve">
          <source>To change the format of the data that is sent to the backend store, you can use the &lt;a href=&quot;https://api.emberjs.com/ember-data/release/classes/JSONAPISerializer/methods#serialize&quot;&gt;&lt;code&gt;serialize()&lt;/code&gt;&lt;/a&gt; hook. Let's say that we have this JSON:API response from Ember Data:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8147260956e1d80c68ae4385b8dfaf8e846f2a9f" translate="yes" xml:space="preserve">
          <source>To check that rentals are listed with an automated test, we will create a test to visit the index route and check that the results show 3 listings.</source>
          <target state="translated">Para comprobar que los alquileres están listados con una prueba automatizada,crearemos una prueba para visitar la ruta del índice y comprobar que los resultados muestran 3 listados.</target>
        </trans-unit>
        <trans-unit id="1f8255d58ff45b69a2cfcbdef10d629721ba8fc6" translate="yes" xml:space="preserve">
          <source>To clear the currently logged Promises, click on the clear icon on the top left of the tab.</source>
          <target state="translated">Para borrar las Promesas actualmente registradas,haz clic en el icono de borrar en la parte superior izquierda de la pestaña.</target>
        </trans-unit>
        <trans-unit id="29f27b12694ecb81b431f0d90751a5300c28c856" translate="yes" xml:space="preserve">
          <source>To collect deprecations, first run your in-browser test suite by starting your development server and navigating to &lt;a href=&quot;http://localhost:4200/tests&quot;&gt;&lt;code&gt;http://localhost:4200/tests&lt;/code&gt;&lt;/a&gt;. If your test suite isn't fully covering your app's functionality, you may also manually exercise functionality within your app where needed. Once you've exercised the app to your satisfaction, run the following command within your browser console: &lt;code&gt;deprecationWorkflow.flushDeprecations()&lt;/code&gt;. This will print to the console JavaScript code, which you should then copy to a new file in your project called &lt;code&gt;/config/deprecation-workflow.js&lt;/code&gt;</source>
          <target state="translated">Para recopilar las desaprobaciones, primero ejecute su suite de pruebas en el navegador iniciando su servidor de desarrollo y navegando a &lt;a href=&quot;http://localhost:4200/tests&quot;&gt; &lt;code&gt;http://localhost:4200/tests&lt;/code&gt; &lt;/a&gt; . Si su conjunto de pruebas no cubre completamente la funcionalidad de su aplicaci&amp;oacute;n, tambi&amp;eacute;n puede ejercitar manualmente la funcionalidad dentro de su aplicaci&amp;oacute;n cuando sea necesario. Una vez que haya utilizado la aplicaci&amp;oacute;n a su satisfacci&amp;oacute;n, ejecute el siguiente comando dentro de la consola de su navegador: &lt;code&gt;deprecationWorkflow.flushDeprecations()&lt;/code&gt; . Esto se imprimir&amp;aacute; en el c&amp;oacute;digo JavaScript de la consola, que luego debe copiar a un nuevo archivo en su proyecto llamado &lt;code&gt;/config/deprecation-workflow.js&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e7e50ab7bdcafc87b9e1da97ba46ad133f5b5047" translate="yes" xml:space="preserve">
          <source>To collect deprecations, first run your in-browser test suite by starting your development server and navigating to &lt;a href=&quot;http://localhost:4200/tests&quot;&gt;&lt;code&gt;http://localhost:4200/tests&lt;/code&gt;&lt;/a&gt;. If your test suite isn't fully covering your app's functionality, you may also manually exercise functionality within your app where needed. Once you've exercised the app to your satisfaction, run the following command within your browser console: &lt;code&gt;deprecationWorkflow.flushDeprecations()&lt;/code&gt;. This will print to the console JavaScript code, which you should then copy to a new file in your project called &lt;code&gt;config/deprecation-workflow.js&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fdc1331bae434af40f12bc03ea73f91e17ec118" translate="yes" xml:space="preserve">
          <source>To configure feature-flags at runtime you will want to configure &lt;code&gt;window.EmberDataENV = {}&lt;/code&gt; appropriately. You should add this global property in your app prior to your application booting. At the top of your &lt;code&gt;app.js&lt;/code&gt; file is a convenient location, as is within &lt;code&gt;index.html&lt;/code&gt; as a script running prior to loading any other scripts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e30036137bbed352514ffa1a7f66b8cbe2dcdd5f" translate="yes" xml:space="preserve">
          <source>To configure your compatibility version, set the &lt;code&gt;compatWith&lt;/code&gt; to the version you are compatible with on the &lt;code&gt;emberData&lt;/code&gt; config in your &lt;code&gt;ember-cli-build.js&lt;/code&gt; file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a04c51d3d1b4bc7bda88a128ff59a1c6cc33823" translate="yes" xml:space="preserve">
          <source>To consult all available built-in helpers, you can check the &lt;a href=&quot;https://api.emberjs.com/ember/release/classes/Ember.Templates.helpers/&quot;&gt;template helpers API documentation&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3175b38418b12c2d580746cc8cc19dc3a953fab7" translate="yes" xml:space="preserve">
          <source>To create a class-based helper, rather than exporting a simple function, you should export a subclass of &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Helper.html&quot;&gt;&lt;code&gt;Ember.Helper&lt;/code&gt;&lt;/a&gt;. Helper classes must contain a &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Helper.html#method_compute&quot;&gt;&lt;code&gt;compute&lt;/code&gt;&lt;/a&gt; method that behaves the same as the function passed to &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Helper.html#method_helper&quot;&gt;&lt;code&gt;Ember.Helper.helper&lt;/code&gt;&lt;/a&gt;. In order to access a service, you must first inject it into the class-based helper. Once added, you can call the service's methods or access its properties from within the &lt;code&gt;compute()&lt;/code&gt; method.</source>
          <target state="translated">Para crear un ayudante basado en clases, en lugar de exportar una funci&amp;oacute;n simple, debe exportar una subclase de &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Helper.html&quot;&gt; &lt;code&gt;Ember.Helper&lt;/code&gt; &lt;/a&gt; . Las clases auxiliares deben contener un m&amp;eacute;todo de &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Helper.html#method_compute&quot;&gt; &lt;code&gt;compute&lt;/code&gt; &lt;/a&gt; que se comporte de la misma forma que la funci&amp;oacute;n pasada a &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Helper.html#method_helper&quot;&gt; &lt;code&gt;Ember.Helper.helper&lt;/code&gt; &lt;/a&gt; . Para acceder a un servicio, primero debe inyectarlo en el ayudante basado en clases. Una vez agregado, puede llamar a los m&amp;eacute;todos del servicio o acceder a sus propiedades desde el m&amp;eacute;todo &lt;code&gt;compute()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="483b244a408fb90428d0b9a44c7fe6d9ad8692be" translate="yes" xml:space="preserve">
          <source>To create a custom error to signal a specific error state in communicating with an external API, extend the &lt;code&gt;DS.AdapterError&lt;/code&gt;. For example if the external API exclusively used HTTP &lt;code&gt;503 Service Unavailable&lt;/code&gt; to indicate it was closed for maintenance:</source>
          <target state="translated">Para crear un error personalizado para se&amp;ntilde;alar un estado de error espec&amp;iacute;fico al comunicarse con una API externa, ampl&amp;iacute;e &lt;code&gt;DS.AdapterError&lt;/code&gt; . Por ejemplo, si la API externa us&amp;oacute; exclusivamente HTTP &lt;code&gt;503 Service Unavailable&lt;/code&gt; para indicar que se cerr&amp;oacute; por mantenimiento:</target>
        </trans-unit>
        <trans-unit id="d9f0badc4f0227ed4677bc2258f094b4ab9b5955" translate="yes" xml:space="preserve">
          <source>To create a new app that has every Octane feature enabled, first make sure you have the latest Ember CLI version installed:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f58871b9ab756fa7fbfd2a0634d267d3a4ce8ae" translate="yes" xml:space="preserve">
          <source>To create a new instance of a &lt;code&gt;Post&lt;/code&gt; that has a relationship with a &lt;code&gt;User&lt;/code&gt; record:</source>
          <target state="translated">Para crear una nueva instancia de una &lt;code&gt;Post&lt;/code&gt; que tenga una relaci&amp;oacute;n con un registro de &lt;code&gt;User&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="0e61e0cae04fd9ad56d0c4c5698e8faa32a1f269" translate="yes" xml:space="preserve">
          <source>To create a new instance of a &lt;code&gt;Post&lt;/code&gt;:</source>
          <target state="translated">Para crear una nueva instancia de una &lt;code&gt;Post&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="7fa82787ae3f63115905a224cbbd4da31001a607" translate="yes" xml:space="preserve">
          <source>To create a new project using Ember CLI, use the &lt;code&gt;new&lt;/code&gt; command. In preparation for the tutorial in the next section, you can make an app called &lt;code&gt;super-rentals&lt;/code&gt;.</source>
          <target state="translated">Para crear un nuevo proyecto usando Ember CLI, use el &lt;code&gt;new&lt;/code&gt; comando. En preparaci&amp;oacute;n para el tutorial de la siguiente secci&amp;oacute;n, puede crear una aplicaci&amp;oacute;n llamada &lt;code&gt;super-rentals&lt;/code&gt; Rentals .</target>
        </trans-unit>
        <trans-unit id="0507bf8200bc0fc65ea17fae004600ec931bee74" translate="yes" xml:space="preserve">
          <source>To create an acceptance test, run &lt;code&gt;ember generate acceptance-test &amp;lt;name&amp;gt;&lt;/code&gt;. For example:</source>
          <target state="translated">Para crear una prueba de aceptaci&amp;oacute;n, ejecute &lt;code&gt;ember generate acceptance-test &amp;lt;name&amp;gt;&lt;/code&gt; . Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="189a622c1c4bcbb39d736471076d4c691a324ae2" translate="yes" xml:space="preserve">
          <source>To create an application test, run &lt;code&gt;ember generate acceptance-test &amp;lt;name&amp;gt;&lt;/code&gt;. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6546ce366ebc2a0397c0ab3926caf7dfba659cf6" translate="yes" xml:space="preserve">
          <source>To create an index nested route, run the following command:</source>
          <target state="translated">Para crear un índice de rutas anidadas,ejecute el siguiente comando:</target>
        </trans-unit>
        <trans-unit id="f16533be33b27f3dabd74f1c1a59b9369d04e94e" translate="yes" xml:space="preserve">
          <source>To customize how &lt;code&gt;JSONSerializer&lt;/code&gt; normalizes a specific response from the server, use one of the many specific &lt;code&gt;normalizeResponse&lt;/code&gt; hooks.</source>
          <target state="translated">Para personalizar c&amp;oacute;mo &lt;code&gt;JSONSerializer&lt;/code&gt; normaliza una respuesta espec&amp;iacute;fica del servidor, use uno de los muchos ganchos &lt;code&gt;normalizeResponse&lt;/code&gt; espec&amp;iacute;ficos .</target>
        </trans-unit>
        <trans-unit id="efffbb69cac955b484ca11b4daebd1d8a4b7475b" translate="yes" xml:space="preserve">
          <source>To customize how &lt;code&gt;JSONSerializer&lt;/code&gt; normalizes the whole server response, use the &lt;code&gt;normalizeResponse&lt;/code&gt; hook.</source>
          <target state="translated">Para personalizar c&amp;oacute;mo &lt;code&gt;JSONSerializer&lt;/code&gt; normaliza toda la respuesta del servidor, use el gancho &lt;code&gt;normalizeResponse&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="85f903926c89b490fde43d23a09ec470fcb5dc60" translate="yes" xml:space="preserve">
          <source>To customize how &lt;code&gt;JSONSerializer&lt;/code&gt; normalizes your id, attributes or relationships, use the &lt;code&gt;extractId&lt;/code&gt;, &lt;code&gt;extractAttributes&lt;/code&gt; and &lt;code&gt;extractRelationships&lt;/code&gt; hooks.</source>
          <target state="translated">Para personalizar c&amp;oacute;mo &lt;code&gt;JSONSerializer&lt;/code&gt; normaliza su identificaci&amp;oacute;n, atributos o relaciones, use los &lt;code&gt;extractId&lt;/code&gt; , &lt;code&gt;extractAttributes&lt;/code&gt; y &lt;code&gt;extractRelationships&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ba373f1b978a32c09a08e1c1a2055e76267a7a9f" translate="yes" xml:space="preserve">
          <source>To customize how a single record is normalized, use the &lt;code&gt;normalize&lt;/code&gt; hook.</source>
          <target state="translated">Para personalizar c&amp;oacute;mo se normaliza un solo registro, utilice el &lt;code&gt;normalize&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="896f7618df1a2c5ae15b21da0d539bcce0c86fef" translate="yes" xml:space="preserve">
          <source>To customize metadata extraction, check out the documentation for your serializer.</source>
          <target state="translated">Para personalizar la extracción de metadatos,consulte la documentación de su serializador.</target>
        </trans-unit>
        <trans-unit id="d00f2a82ea97d7698e61579522a38bad982a0f6f" translate="yes" xml:space="preserve">
          <source>To declare a many-to-many relationship between two models, use &lt;code&gt;DS.hasMany&lt;/code&gt;:</source>
          <target state="translated">Para declarar una relaci&amp;oacute;n de varios a varios entre dos modelos, utilice &lt;code&gt;DS.hasMany&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="cc67abd9992f5eb4a7a6b6a250d06fb9592d2ffd" translate="yes" xml:space="preserve">
          <source>To declare a many-to-many relationship between two models, use &lt;code&gt;hasMany&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f384718df6203efdfa0de22885112131e57b9ef5" translate="yes" xml:space="preserve">
          <source>To declare a one-to-many relationship between two models, use &lt;code&gt;DS.belongsTo&lt;/code&gt; in combination with &lt;code&gt;DS.hasMany&lt;/code&gt;, like this:</source>
          <target state="translated">Para declarar una relaci&amp;oacute;n de uno a muchos entre dos modelos, use &lt;code&gt;DS.belongsTo&lt;/code&gt; en combinaci&amp;oacute;n con &lt;code&gt;DS.hasMany&lt;/code&gt; , as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="fe1ed030da25f0ac767e451614ef71155dfe5a43" translate="yes" xml:space="preserve">
          <source>To declare a one-to-many relationship between two models, use &lt;code&gt;belongsTo&lt;/code&gt; in combination with &lt;code&gt;hasMany&lt;/code&gt;, like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd45271172de2827aec0b66ded46c1526981e4f0" translate="yes" xml:space="preserve">
          <source>To declare a one-to-one relationship between two models, use &lt;code&gt;DS.belongsTo&lt;/code&gt;:</source>
          <target state="translated">Para declarar una relaci&amp;oacute;n uno a uno entre dos modelos, utilice &lt;code&gt;DS.belongsTo&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="db339c08523231f8edd90171a686e296be3611f1" translate="yes" xml:space="preserve">
          <source>To declare a one-to-one relationship between two models, use &lt;code&gt;belongsTo&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22bb95d7016d3a82a771c01b24a90740704cb355" translate="yes" xml:space="preserve">
          <source>To define a Controller, run:</source>
          <target state="translated">Para definir un Controlador,corra:</target>
        </trans-unit>
        <trans-unit id="537f62c13bb7ffd878dfd54110b3a5a612606ee8" translate="yes" xml:space="preserve">
          <source>To define a component, run:</source>
          <target state="translated">Para definir un componente,corra:</target>
        </trans-unit>
        <trans-unit id="284d1b21151d2a0f19c15e660bf3d35370f288b5" translate="yes" xml:space="preserve">
          <source>To define a new Ember &lt;em&gt;class&lt;/em&gt;, call the &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Object.html#method_extend&quot;&gt;&lt;code&gt;extend()&lt;/code&gt;&lt;/a&gt; method on &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Object.html&quot;&gt;&lt;code&gt;Ember.Object&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">Para definir una nueva &lt;em&gt;clase&lt;/em&gt; Ember , llame al m&amp;eacute;todo &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Object.html#method_extend&quot;&gt; &lt;code&gt;extend()&lt;/code&gt; &lt;/a&gt; en &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Object.html&quot;&gt; &lt;code&gt;Ember.Object&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="820da85f7f75fe525eb448c437bc45950e1f888d" translate="yes" xml:space="preserve">
          <source>To define a route, run</source>
          <target state="translated">Para definir una ruta,corra</target>
        </trans-unit>
        <trans-unit id="e7d7b2d08cd1de85998600ba46809350abc299b9" translate="yes" xml:space="preserve">
          <source>To deploy an Ember application simply transfer the output from &lt;code&gt;ember build&lt;/code&gt; to a web server. This can be done with standard Unix file transfer tools such as &lt;code&gt;rsync&lt;/code&gt; or &lt;code&gt;scp&lt;/code&gt;. There are also services that will let you deploy easily.</source>
          <target state="translated">Para implementar una aplicaci&amp;oacute;n Ember, simplemente transfiera la salida de la &lt;code&gt;ember build&lt;/code&gt; a un servidor web. Esto se puede hacer con herramientas est&amp;aacute;ndar de transferencia de archivos de Unix, como &lt;code&gt;rsync&lt;/code&gt; o &lt;code&gt;scp&lt;/code&gt; . Tambi&amp;eacute;n hay servicios que le permitir&amp;aacute;n implementar f&amp;aacute;cilmente.</target>
        </trans-unit>
        <trans-unit id="065fd99d1476baffa1b82c4b08460d031141cb32" translate="yes" xml:space="preserve">
          <source>To deploy to the same URL after making changes, perform the same steps, reusing the same domain as before.</source>
          <target state="translated">Para desplegar a la misma URL después de hacer los cambios,realice los mismos pasos,reutilizando el mismo dominio que antes.</target>
        </trans-unit>
        <trans-unit id="49f0e5a5556d1784583a08d323f8bb602095029d" translate="yes" xml:space="preserve">
          <source>To dig deeper into accessible input patterns in Ember check out the &lt;a href=&quot;https://emberjs-1.gitbook.io/ember-component-patterns/form-components/input&quot;&gt;ember-component-patterns article on Input Fields&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6734a6e5bb3c4c06ddac515519b73ca33307818c" translate="yes" xml:space="preserve">
          <source>To disable bubbling with closure style actions you must create your own wrapper helper that makes use of &lt;code&gt;event.stopPropagation()&lt;/code&gt;:</source>
          <target state="translated">Para deshabilitar el burbujeo con acciones de estilo de cierre, debe crear su propio asistente de envoltura que haga uso de &lt;code&gt;event.stopPropagation()&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="03d431777776d94843205036e89382929b67b7df" translate="yes" xml:space="preserve">
          <source>To disable bubbling, pass &lt;code&gt;bubbles=false&lt;/code&gt; to the helper:</source>
          <target state="translated">Para deshabilitar el burbujeo, pase &lt;code&gt;bubbles=false&lt;/code&gt; al ayudante:</target>
        </trans-unit>
        <trans-unit id="0a92d47537f25ade1c4b932096e3e3c06b398c23" translate="yes" xml:space="preserve">
          <source>To disable this feature, first migrate away from the jQuery integration APIs. Below is a list of the jQuery specific APIs in Ember, and how to migrate away from them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83f92bbd711ff46b48c7b3053ad6815ca742a2e1" translate="yes" xml:space="preserve">
          <source>To dispatch an action on specific events, such as &lt;code&gt;enter&lt;/code&gt; or &lt;code&gt;key-press&lt;/code&gt;, use the following</source>
          <target state="translated">Para enviar una acci&amp;oacute;n en eventos espec&amp;iacute;ficos, como &lt;code&gt;enter&lt;/code&gt; o &lt;code&gt;key-press&lt;/code&gt; , use lo siguiente</target>
        </trans-unit>
        <trans-unit id="53be2d3cee464dda29e541bcc47ec4c0a39972d4" translate="yes" xml:space="preserve">
          <source>To do so, run the following command:</source>
          <target state="translated">Para ello,ejecute el siguiente comando:</target>
        </trans-unit>
        <trans-unit id="0711a711e6a702ee3f035ad582cb0f83d0ea3111" translate="yes" xml:space="preserve">
          <source>To do so, simply set the &lt;code&gt;EmberENV.EXTEND_PROTOTYPES&lt;/code&gt; flag to &lt;code&gt;false&lt;/code&gt;:</source>
          <target state="translated">Para hacerlo, simplemente establezca el indicador &lt;code&gt;EmberENV.EXTEND_PROTOTYPES&lt;/code&gt; en &lt;code&gt;false&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="642b3e926c752f7b1f53ecb9a54d25f0d597ad8b" translate="yes" xml:space="preserve">
          <source>To do that, replace occurrences of &lt;code&gt;/list-rentals&lt;/code&gt; in the generated test with &lt;code&gt;/&lt;/code&gt;. The test will start our app at the base url, &lt;code&gt;http://localhost:4200/&lt;/code&gt;, and then do a basic check that the page has finished loading and that the url is what we want it to be.</source>
          <target state="translated">Para hacerlo, reemplace las apariciones de &lt;code&gt;/list-rentals&lt;/code&gt; en la prueba generada con &lt;code&gt;/&lt;/code&gt; . La prueba iniciar&amp;aacute; nuestra aplicaci&amp;oacute;n en la URL base, &lt;code&gt;http://localhost:4200/&lt;/code&gt; , y luego har&amp;aacute; una verificaci&amp;oacute;n b&amp;aacute;sica de que la p&amp;aacute;gina haya terminado de cargarse y que la URL sea la que queremos que sea.</target>
        </trans-unit>
        <trans-unit id="1df522ee440a55de68e6a9dd8378f737af37e593" translate="yes" xml:space="preserve">
          <source>To do that, we modify our route as follows:</source>
          <target state="translated">Para ello,modificamos nuestra ruta de la siguiente manera:</target>
        </trans-unit>
        <trans-unit id="077ff282e23889aeeea0b97f0141bf14b2b23e54" translate="yes" xml:space="preserve">
          <source>To do that, we'll use a &lt;a href=&quot;https://guides.emberjs.com/templates/links/&quot;&gt;&lt;code&gt;{{link-to}}&lt;/code&gt;&lt;/a&gt; helper that Ember provides that makes it easy to link between our routes. Let's adjust our &lt;code&gt;about.hbs&lt;/code&gt; file:</source>
          <target state="translated">Para hacer eso, usaremos un ayudante &lt;a href=&quot;https://guides.emberjs.com/templates/links/&quot;&gt; &lt;code&gt;{{link-to}}&lt;/code&gt; &lt;/a&gt; que proporciona Ember que facilita la vinculaci&amp;oacute;n entre nuestras rutas. &lt;code&gt;about.hbs&lt;/code&gt; nuestro archivo about.hbs :</target>
        </trans-unit>
        <trans-unit id="11c58088248b73af9dd4c10ee5d8407a7c330748" translate="yes" xml:space="preserve">
          <source>To do this, create an &lt;a href=&quot;https://guides.emberjs.com/applications/initializers/&quot;&gt;Initializer&lt;/a&gt; file containing your customizations. The Ember CLI's &lt;code&gt;initializer&lt;/code&gt; generator can be used &lt;code&gt;ember generate initializer custom-inflector-rules&lt;/code&gt; to create the file. Update its content as follow:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d87c2ae1d29eef6f28426678419f6574ae578e14" translate="yes" xml:space="preserve">
          <source>To embed the &lt;code&gt;ids&lt;/code&gt; for a related object (using a hasMany relationship):</source>
          <target state="translated">Para incrustar los &lt;code&gt;ids&lt;/code&gt; de un objeto relacionado (usando una relaci&amp;oacute;n hasMany):</target>
        </trans-unit>
        <trans-unit id="7b266ec9d9020d51490a793b222a2e15e77408c1" translate="yes" xml:space="preserve">
          <source>To embed the relationship as a collection of objects with &lt;code&gt;id&lt;/code&gt; and &lt;code&gt;type&lt;/code&gt; keys, set &lt;code&gt;ids-and-types&lt;/code&gt; for the related object.</source>
          <target state="translated">Para incrustar la relaci&amp;oacute;n como una colecci&amp;oacute;n de objetos con &lt;code&gt;id&lt;/code&gt; y &lt;code&gt;type&lt;/code&gt; llaves, juego de &lt;code&gt;ids-and-types&lt;/code&gt; para el objeto relacionado.</target>
        </trans-unit>
        <trans-unit id="9f64d9ceccb26c4763feaef7f57fe7b97b194674" translate="yes" xml:space="preserve">
          <source>To enable full stacktrace mode in Backburner, and thus determine the stack of the task when it was scheduled onto the run loop, you can set:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4dbe3553d2c10be5b18402a6280f709c7557952" translate="yes" xml:space="preserve">
          <source>To enable support for data attributes an attribute binding must be added to the component, e.g. &lt;a href=&quot;http://emberjs.com/api/classes/Ember.LinkComponent.html&quot;&gt;&lt;code&gt;Ember.LinkComponent&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;http://emberjs.com/api/classes/Ember.TextField.html&quot;&gt;&lt;code&gt;Ember.TextField&lt;/code&gt;&lt;/a&gt; for the specific attribute:</source>
          <target state="translated">Para habilitar el soporte para atributos de datos, se debe agregar un enlace de atributo al componente, por ejemplo, &lt;a href=&quot;http://emberjs.com/api/classes/Ember.LinkComponent.html&quot;&gt; &lt;code&gt;Ember.LinkComponent&lt;/code&gt; &lt;/a&gt; o &lt;a href=&quot;http://emberjs.com/api/classes/Ember.TextField.html&quot;&gt; &lt;code&gt;Ember.TextField&lt;/code&gt; &lt;/a&gt; para el atributo espec&amp;iacute;fico:</target>
        </trans-unit>
        <trans-unit id="9395edf3439fe814bda2e423bd1d2d6905021476" translate="yes" xml:space="preserve">
          <source>To enable the Ember favicon to show up in the URL bar whenever you are visiting a site that uses Ember visit &lt;code&gt;about:addons&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb5f57bc075f6cf1a9892170f5cc300d7a2ec2da" translate="yes" xml:space="preserve">
          <source>To enable the Tomster icon to show up in the URL bar whenever you are visiting a site that uses Ember visit &lt;code&gt;about:addons&lt;/code&gt;.</source>
          <target state="translated">Para permitir que el icono de Tomster aparezca en la barra de URL cada vez que visite un sitio que utilice Ember, visite &lt;code&gt;about:addons&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="52c2b2d458eaa991122169345b898417f6372aad" translate="yes" xml:space="preserve">
          <source>To enable this mode you can set:</source>
          <target state="translated">Para activar este modo se puede configurar:</target>
        </trans-unit>
        <trans-unit id="d3e54ffc59a679009cd71018fbf20dc2908c33d0" translate="yes" xml:space="preserve">
          <source>To enumerate all the values of an enumerable object, use the &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Enumerable.html#method_forEach&quot;&gt;&lt;code&gt;forEach()&lt;/code&gt;&lt;/a&gt; method:</source>
          <target state="translated">Para enumerar todos los valores de un objeto enumerable, use el m&amp;eacute;todo &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Enumerable.html#method_forEach&quot;&gt; &lt;code&gt;forEach()&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="d359b2db0086dd5035c16e4f02e4ba46333d6fbe" translate="yes" xml:space="preserve">
          <source>To evaluate more addons to add/manage content in the &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; of a page, view this category on &lt;a href=&quot;https://emberobserver.com/categories/header-content&quot;&gt;Ember Observer&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2576d6fed5029c6df127ccc7ce3941b77810324b" translate="yes" xml:space="preserve">
          <source>To facilitate pluralizing model names when generating route URLs Ember Data comes bundled with &lt;a href=&quot;https://github.com/stefanpenner/ember-inflector&quot;&gt;Ember Inflector&lt;/a&gt;, an ActiveSupport::Inflector compatible library for inflecting words between plural and singular forms. Irregular or uncountable pluralizations can be specified via &lt;code&gt;Ember.Inflector.inflector&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e247d282c81bce4351bac12e80aee643f2064371" translate="yes" xml:space="preserve">
          <source>To facilitate pluralizing model names when generating route urls Ember Data comes bundled with &lt;a href=&quot;https://github.com/stefanpenner/ember-inflector&quot;&gt;Ember Inflector&lt;/a&gt;, an ActiveSupport::Inflector compatible library for inflecting words between plural and singular forms. Irregular or uncountable pluralizations can be specified via &lt;code&gt;Ember.Inflector.inflector&lt;/code&gt;. A common way to do this is:</source>
          <target state="translated">Para facilitar la pluralizaci&amp;oacute;n de nombres de modelos al generar direcciones URL de ruta, Ember Data viene con &lt;a href=&quot;https://github.com/stefanpenner/ember-inflector&quot;&gt;Ember Inflector&lt;/a&gt; , una biblioteca compatible con ActiveSupport :: Inflector para inflexi&amp;oacute;n de palabras entre formas plurales y singulares. Se pueden especificar pluralizaciones irregulares o incontables mediante &lt;code&gt;Ember.Inflector.inflector&lt;/code&gt; . Una forma com&amp;uacute;n de hacer esto es:</target>
        </trans-unit>
        <trans-unit id="89387035491e2b9779d432c33ff0f9bc1db9ee30" translate="yes" xml:space="preserve">
          <source>To facilitate this, Ember provides the &lt;code&gt;@each&lt;/code&gt; key illustrated below:</source>
          <target state="translated">Para facilitar esto, Ember proporciona la clave &lt;code&gt;@each&lt;/code&gt; que se ilustra a continuaci&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="d181f0d9ef256075afc193e940cb2778cc125a3c" translate="yes" xml:space="preserve">
          <source>To fetch an instantiated factory from the running application you can call the &lt;a href=&quot;http://emberjs.com/api/classes/Ember.ApplicationInstance.html#method_lookup&quot;&gt;&lt;code&gt;lookup&lt;/code&gt;&lt;/a&gt; method on an application instance. This method takes a string to identify a factory and returns the appropriate object.</source>
          <target state="translated">Para obtener una f&amp;aacute;brica instanciada de la aplicaci&amp;oacute;n en ejecuci&amp;oacute;n, puede llamar al m&amp;eacute;todo de &lt;a href=&quot;http://emberjs.com/api/classes/Ember.ApplicationInstance.html#method_lookup&quot;&gt; &lt;code&gt;lookup&lt;/code&gt; &lt;/a&gt; en una instancia de la aplicaci&amp;oacute;n. Este m&amp;eacute;todo toma una cadena para identificar una f&amp;aacute;brica y devuelve el objeto apropiado.</target>
        </trans-unit>
        <trans-unit id="528db8f8f881013ff42a8ee9a66389f79f4204aa" translate="yes" xml:space="preserve">
          <source>To fetch an instantiated factory from the running application you can call the &lt;a href=&quot;https://api.emberjs.com/ember/release/classes/ApplicationInstance/methods#lookup&quot;&gt;&lt;code&gt;lookup&lt;/code&gt;&lt;/a&gt; method on an application instance. This method takes a string to identify a factory and returns the appropriate object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d1f23fd8117e1414f047abb53730ce2c42e57e9" translate="yes" xml:space="preserve">
          <source>To filter the logs, type a query in the search box.</source>
          <target state="translated">Para filtrar los registros,escriba una consulta en el cuadro de búsqueda.</target>
        </trans-unit>
        <trans-unit id="0333f3c27efad06e51f74436dfa3235419a97177" translate="yes" xml:space="preserve">
          <source>To find out the problem, you can add &lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Statements/debugger&quot;&gt;&lt;code&gt;debugger&lt;/code&gt;&lt;/a&gt; to your code to check the intermediate state. You can add this line to both test and application code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9c9e9ecb077e7d53718dabf283948eae57a0fe4" translate="yes" xml:space="preserve">
          <source>To find out whether at least one item in an enumerable matches some condition, you can use the &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Enumerable.html#method_any&quot;&gt;&lt;code&gt;any()&lt;/code&gt;&lt;/a&gt; method:</source>
          <target state="translated">Para saber si al menos un elemento de un enumerable coincide con alguna condici&amp;oacute;n, puede utilizar el m&amp;eacute;todo &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Enumerable.html#method_any&quot;&gt; &lt;code&gt;any()&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="4c63511432e85445a8b4de943b86b4ff86b52bda" translate="yes" xml:space="preserve">
          <source>To find out whether every item in an enumerable matches some condition, you can use the &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Enumerable.html#method_every&quot;&gt;&lt;code&gt;every()&lt;/code&gt;&lt;/a&gt; method:</source>
          <target state="translated">Para saber si cada elemento de un enumerable coincide con alguna condici&amp;oacute;n, puede usar el m&amp;eacute;todo &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Enumerable.html#method_every&quot;&gt; &lt;code&gt;every()&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="06062dde08f65defee01d144c5693a07b8897c5e" translate="yes" xml:space="preserve">
          <source>To find the elements that have a class called &lt;code&gt;listing&lt;/code&gt;, we'll use a test helper called &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Test.html#method_find&quot;&gt;find&lt;/a&gt;. The &lt;code&gt;find&lt;/code&gt; function returns the elements that match the given &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors&quot;&gt;CSS selector&lt;/a&gt;. In this case it will return an array of all the elements with a class called &lt;code&gt;listing&lt;/code&gt;.</source>
          <target state="translated">Para encontrar los elementos que tienen una clase llamada &lt;code&gt;listing&lt;/code&gt; , usaremos un ayudante de prueba llamado &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Test.html#method_find&quot;&gt;encontrar&lt;/a&gt; . La funci&amp;oacute;n de &lt;code&gt;find&lt;/code&gt; devuelve los elementos que coinciden con el &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors&quot;&gt;selector de CSS&lt;/a&gt; dado . En este caso, devolver&amp;aacute; una matriz de todos los elementos con una clase llamada &lt;code&gt;listing&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2fd9f8a52de87bee0c288eaed67d1f195e5f6ddf" translate="yes" xml:space="preserve">
          <source>To fix this add a file called '.htaccess' to the root folder of your website. Add these lines:</source>
          <target state="translated">Para solucionar esto,agregue un archivo llamado '.htaccess' a la carpeta raíz de su sitio web.Añade estas líneas:</target>
        </trans-unit>
        <trans-unit id="04005e74615bbb182cf85c5e41c6f4392088d120" translate="yes" xml:space="preserve">
          <source>To force a particular &lt;code&gt;location&lt;/code&gt; API implementation to be used in your application you can set a location type on your &lt;code&gt;config/environment&lt;/code&gt;. For example, to set the &lt;code&gt;history&lt;/code&gt; type:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4874052fd3da4130e20d57017b5ff65b2f9c812f" translate="yes" xml:space="preserve">
          <source>To generate a controller, run</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc22e48a36a2fa58e492a5c1d7190654605ab3b1" translate="yes" xml:space="preserve">
          <source>To get around these problems, you should make use of &lt;a href=&quot;http://emberjs.com/api/classes/Ember.run.html#method_once&quot;&gt;&lt;code&gt;Ember.run.once()&lt;/code&gt;&lt;/a&gt;. This will ensure that any processing you need to do only happens once, and happens in the next run loop once all bindings are synchronized:</source>
          <target state="translated">Para solucionar estos problemas, debe utilizar &lt;a href=&quot;http://emberjs.com/api/classes/Ember.run.html#method_once&quot;&gt; &lt;code&gt;Ember.run.once()&lt;/code&gt; &lt;/a&gt; . Esto asegurar&amp;aacute; que cualquier procesamiento que necesite hacer solo ocurra una vez, y ocurra en el siguiente ciclo de ejecuci&amp;oacute;n una vez que todos los enlaces est&amp;eacute;n sincronizados:</target>
        </trans-unit>
        <trans-unit id="0c5c7f3992c8b26c72a8ca9516e0759dd90b734e" translate="yes" xml:space="preserve">
          <source>To get different &lt;em&gt;pages&lt;/em&gt; of data, you'd simply change your offset in increments of 10. So far, so good. But how do you know how many pages of data you have? Your server would need to return the total number of records as a piece of metadata.</source>
          <target state="translated">Para obtener diferentes &lt;em&gt;p&amp;aacute;ginas&lt;/em&gt; de datos, simplemente cambiar&amp;iacute;a su compensaci&amp;oacute;n en incrementos de 10. Hasta ahora todo bien. Pero, &amp;iquest;c&amp;oacute;mo sabes cu&amp;aacute;ntas p&amp;aacute;ginas de datos tienes? Su servidor necesitar&amp;iacute;a devolver el n&amp;uacute;mero total de registros como una pieza de metadatos.</target>
        </trans-unit>
        <trans-unit id="f2a4e5cc694d3be2b7e400ea560253d1f71eaa5c" translate="yes" xml:space="preserve">
          <source>To get multiple properties at once, call &lt;code&gt;Ember.getProperties&lt;/code&gt; with an object followed by a list of strings or an array:</source>
          <target state="translated">Para obtener varias propiedades a la vez, llame a &lt;code&gt;Ember.getProperties&lt;/code&gt; con un objeto seguido de una lista de cadenas o una matriz:</target>
        </trans-unit>
        <trans-unit id="a4eb5bbacbba2cef49091dbac7935cb10725ae22" translate="yes" xml:space="preserve">
          <source>To get multiple properties at once, call &lt;code&gt;getProperties&lt;/code&gt; with an object followed by a list of strings or an array:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f78d2de846a584ba2b1e880b414bf10c370b52c9" translate="yes" xml:space="preserve">
          <source>To get started with optional features, you must install the addon:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52ae9585ef4ff335f0b0a68e5513ed3dbe6488ec" translate="yes" xml:space="preserve">
          <source>To get started, let's generate a helper for &lt;code&gt;rental-property-type&lt;/code&gt;:</source>
          <target state="translated">Para comenzar, generemos un asistente para el &lt;code&gt;rental-property-type&lt;/code&gt; de alquiler :</target>
        </trans-unit>
        <trans-unit id="73b15a2e4a984f27699d34f68a905af2183041a0" translate="yes" xml:space="preserve">
          <source>To get the most use out of a component, it is important to understand these lifecycle methods.</source>
          <target state="translated">Para sacar el máximo provecho de un componente,es importante entender estos métodos de ciclo de vida.</target>
        </trans-unit>
        <trans-unit id="6236f3f8e8d8fe3fca72807f5fa28810b0997175" translate="yes" xml:space="preserve">
          <source>To get the multiplied number into the template, we'll use a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/get&quot;&gt;JavaScript getter&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e28feb25417f98b442624123c65f66c40e988f2" translate="yes" xml:space="preserve">
          <source>To get the values of multiple properties at once, call &lt;code&gt;getProperties&lt;/code&gt; with a list of strings or an array:</source>
          <target state="translated">Para obtener los valores de varias propiedades a la vez, llame a &lt;code&gt;getProperties&lt;/code&gt; con una lista de cadenas o una matriz:</target>
        </trans-unit>
        <trans-unit id="48925557944e4e5ce54e4156dc66a8b020363878" translate="yes" xml:space="preserve">
          <source>To give the project a path forward when a breaking change is mandatory, we've released the &lt;a href=&quot;https://github.com/emberjs/ember-optional-features&quot;&gt;&lt;code&gt;@ember/optional-features&lt;/code&gt;&lt;/a&gt; addon.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7806e1c587e05f08b69393f6478019cb19942b1e" translate="yes" xml:space="preserve">
          <source>To handle this function call you need to modify the &lt;code&gt;people-list&lt;/code&gt; component file to add the function to be called. In the component, add an &lt;code&gt;actions&lt;/code&gt; object with a &lt;code&gt;showPerson&lt;/code&gt; function that alerts the first argument.</source>
          <target state="translated">Para manejar esta llamada de funci&amp;oacute;n, necesita modificar el archivo del componente de la &lt;code&gt;people-list&lt;/code&gt; para agregar la funci&amp;oacute;n que se llamar&amp;aacute;. En el componente, agregue un objeto de &lt;code&gt;actions&lt;/code&gt; con una funci&amp;oacute;n &lt;code&gt;showPerson&lt;/code&gt; que alerta al primer argumento.</target>
        </trans-unit>
        <trans-unit id="5416b7eb8dce5acb1c8efef4e78276fe44c883b2" translate="yes" xml:space="preserve">
          <source>To have your route do something beyond render a template with the same name, you'll need to create a route handler. The following guides will explore the different features of route handlers. For more information on routes, see the API documentation for &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Router.html&quot;&gt;the router&lt;/a&gt; and for &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Route.html&quot;&gt;route handlers&lt;/a&gt;.</source>
          <target state="translated">Para que su ruta haga algo m&amp;aacute;s que representar una plantilla con el mismo nombre, deber&amp;aacute; crear un controlador de ruta. Las siguientes gu&amp;iacute;as explorar&amp;aacute;n las diferentes caracter&amp;iacute;sticas de los controladores de ruta. Para obtener m&amp;aacute;s informaci&amp;oacute;n sobre las rutas, consulte la documentaci&amp;oacute;n de &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Router.html&quot;&gt;la&lt;/a&gt; API para el enrutador y los &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Route.html&quot;&gt;controladores de ruta&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="914b4488aebbaf7feacdaea87f6b86fabbc536b7" translate="yes" xml:space="preserve">
          <source>To have your route do something beyond render a template with the same name, you'll need to create a route handler. The following guides will explore the different features of route handlers. For more information on routes, see the API documentation for &lt;a href=&quot;https://api.emberjs.com/ember/release/classes/EmberRouter&quot;&gt;the router&lt;/a&gt; and for &lt;a href=&quot;https://api.emberjs.com/ember/release/classes/Route&quot;&gt;route handlers&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9afb56800cc2c35a1d33a4613b349e4ff3b51493" translate="yes" xml:space="preserve">
          <source>To implement a serializer, export a class that conforms to the structure described by the &lt;a href=&quot;https://api.emberjs.com/ember-data/release/classes/MinimumSerializerInterface&quot;&gt;MinimumSerializerInterface&lt;/a&gt; from the &lt;code&gt;app/serializers/&lt;/code&gt; directory. An example is below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba8d875adbf72e3a77f820466038fcca4672c52f" translate="yes" xml:space="preserve">
          <source>To implement a skip link in an application, add an anchor element as close as possible after the opening &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; element, and have it link to the beginning of the page's main content area.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37017a8822c89a19516c602dcc48cbd220d1dbfb" translate="yes" xml:space="preserve">
          <source>To implement the &lt;code&gt;filter&lt;/code&gt; function to do the actual filter of rentals by city, we'll create a &lt;code&gt;rentals&lt;/code&gt; controller. &lt;a href=&quot;https://guides.emberjs.com/controllers/&quot;&gt;Controllers&lt;/a&gt; contain actions and properties available to the template of its corresponding route. In our case we want to generate a controller called &lt;code&gt;rentals&lt;/code&gt;. Ember will know that a controller with the name of &lt;code&gt;rentals&lt;/code&gt; will apply to the route with the same name.</source>
          <target state="translated">Para implementar la funci&amp;oacute;n de &lt;code&gt;filter&lt;/code&gt; para hacer el filtro real de alquileres por ciudad, crearemos un controlador de &lt;code&gt;rentals&lt;/code&gt; . &lt;a href=&quot;https://guides.emberjs.com/controllers/&quot;&gt;Los controladores&lt;/a&gt; contienen acciones y propiedades disponibles para la plantilla de su ruta correspondiente. En nuestro caso queremos generar un controlador llamado &lt;code&gt;rentals&lt;/code&gt; . Ember sabr&amp;aacute; que un controlador con el nombre de los &lt;code&gt;rentals&lt;/code&gt; se aplicar&amp;aacute; a la ruta con el mismo nombre.</target>
        </trans-unit>
        <trans-unit id="6a18fa809ef2b226e508df95e115d1c7866fed2b" translate="yes" xml:space="preserve">
          <source>To implement the helper, we write a JavaScript function that takes its arguments as an &lt;em&gt;array&lt;/em&gt;. This is because helpers can also receive &lt;em&gt;named&lt;/em&gt; arguments, which we'll discuss next.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db39c8ec99de08b269bbe4798a73309f9f804b4b" translate="yes" xml:space="preserve">
          <source>To improve the network performance of your application, you can optimize your adapter by overriding these lower-level methods:</source>
          <target state="translated">Para mejorar el rendimiento de la red de su aplicación,puede optimizar su adaptador anulando estos métodos de nivel inferior:</target>
        </trans-unit>
        <trans-unit id="4a1b8fc671a0891cd11cc8c038ed274d72de5dc3" translate="yes" xml:space="preserve">
          <source>To include jQuery in your Ember app and enable the jQuery integration APIs such as &lt;code&gt;this.$()&lt;/code&gt;, follow the instructions above to install &lt;code&gt;@ember/optional-features&lt;/code&gt;. Next, enable the feature:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45c60387f626fac146933d93ac9b0afdd5ae5762" translate="yes" xml:space="preserve">
          <source>To invoke it using angle bracket syntax, you would do the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cdcf89a4a448babacd6de864831466ba71fbff2" translate="yes" xml:space="preserve">
          <source>To iterate over a list of items, use the &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Templates.helpers.html#method_each&quot;&gt;&lt;code&gt;{{#each}}&lt;/code&gt;&lt;/a&gt; helper. The first argument to this helper is the array to be iterated, and the value being iterated is yielded as a block param. Block params are only available inside the block of their helper.</source>
          <target state="translated">Para iterar sobre una lista de elementos, use el ayudante &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Templates.helpers.html#method_each&quot;&gt; &lt;code&gt;{{#each}}&lt;/code&gt; &lt;/a&gt; . El primer argumento de este ayudante es la matriz que se va a iterar, y el valor que se itera se obtiene como un par&amp;aacute;metro de bloque. Los par&amp;aacute;metros de bloque solo est&amp;aacute;n disponibles dentro del bloque de su ayudante.</target>
        </trans-unit>
        <trans-unit id="37a8c0af98548e46e1f92597c00cca2ab2c7f773" translate="yes" xml:space="preserve">
          <source>To keep this guide concise, we built a separate site for &lt;a href=&quot;https://emberjs-1.gitbook.io/ember-component-patterns/&quot;&gt;component patterns in Ember&lt;/a&gt;. This project also addresses anti-patterns and accessibility for components.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a88256a4a31be9bc45d51ea6053877423fd02664" translate="yes" xml:space="preserve">
          <source>To learn more about &lt;code&gt;aria&lt;/code&gt; roles and accessibility in Ember, check out the &lt;a href=&quot;https://guides.emberjs.com/reference/accessibility-guide/&quot;&gt;Accessibility Guide&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e19aea22e6a2837bc8ee95e58af45dcff1d5f81b" translate="yes" xml:space="preserve">
          <source>To learn more about options for testing, you can visit &lt;a href=&quot;https://ember-cli.com/testing&quot;&gt;Ember CLI Documentation&lt;/a&gt; or type &lt;code&gt;ember help test&lt;/code&gt; in the command line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="495824f667e5b6c15d06332388e59af8ef8bc393" translate="yes" xml:space="preserve">
          <source>To learn more about the events Ember components use, see</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05f24d5f6782acbbef958bb70776badee1ad078d" translate="yes" xml:space="preserve">
          <source>To learn more about the events Ember components use, see &lt;a href=&quot;https://guides.emberjs.com/v2.6.0/components/handling-events/#toc_event-names&quot;&gt;components/handling-events&lt;/a&gt;.</source>
          <target state="translated">Para obtener m&amp;aacute;s informaci&amp;oacute;n sobre los eventos que utilizan los componentes de Ember, consulte &lt;a href=&quot;https://guides.emberjs.com/v2.6.0/components/handling-events/#toc_event-names&quot;&gt;components / handling-events&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="33fe7cdd3e4959aca8ceb9ad1340e73c0d1046f0" translate="yes" xml:space="preserve">
          <source>To learn more about the lang attribute and how to use it: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/lang&quot;&gt;https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/lang&lt;/a&gt;. Unsure which language subtag to use? Try &lt;a href=&quot;https://r12a.github.io/app-subtags/&quot;&gt;the Language Subtag Lookup tool&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1d4e80f03459d1f52f2363e1225daa9d4f187cf" translate="yes" xml:space="preserve">
          <source>To limit the test to validating only its own behavior and not the service, we'll take advantage of the registration API to register a stub maps service. That way when Ember injects the map service into the component, it uses our fake service instead of the real one.</source>
          <target state="translated">Para limitar la prueba a validar sólo su propio comportamiento y no el servicio,aprovecharemos la API de registro para registrar un servicio de mapas de talones.De esa manera,cuando Ember inyecte el servicio de mapas en el componente,utilizará nuestro servicio falso en lugar del real.</target>
        </trans-unit>
        <trans-unit id="77755e062047f1b190e24cc4c004d477b633a1d4" translate="yes" xml:space="preserve">
          <source>To load a model for the &lt;code&gt;favorite-posts&lt;/code&gt; route, you would use the &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Route.html#method_model&quot;&gt;&lt;code&gt;model()&lt;/code&gt;&lt;/a&gt; hook in the &lt;code&gt;favorite-posts&lt;/code&gt; route handler:</source>
          <target state="translated">Para cargar un modelo para la ruta de &lt;code&gt;favorite-posts&lt;/code&gt; , usar&amp;iacute;a el gancho &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Route.html#method_model&quot;&gt; &lt;code&gt;model()&lt;/code&gt; &lt;/a&gt; en el controlador de ruta de &lt;code&gt;favorite-posts&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="cb784f4c7a7e45243b2ca051231756f4e509689e" translate="yes" xml:space="preserve">
          <source>To make that more concrete, let's take a look at two similar components representing different user's messages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e87807c4d673ac108892ab383e4f9629d81be61" translate="yes" xml:space="preserve">
          <source>To make the most out of the guides, you should have a working knowledge of &lt;strong&gt;HTML, CSS, and JavaScript&lt;/strong&gt; - the building blocks of web pages. You can find out more about each of these technologies in the &lt;a href=&quot;working-with-html-css-and-javascript&quot;&gt;Working with HTML, CSS, and JavaScript&lt;/a&gt; guide, including some of the special features that Ember uses such as class fields and decorators.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f654c2cf3da300af867e72e2bd26f7caf007cd2a" translate="yes" xml:space="preserve">
          <source>To make the most out of the guides, you should have a working knowledge of:</source>
          <target state="translated">Para sacar el máximo provecho de los guías,deberías tener un conocimiento práctico de:</target>
        </trans-unit>
        <trans-unit id="e5b3fef2d40648db9d74e2b4390e982acb8c7ae7" translate="yes" xml:space="preserve">
          <source>To make this work, we will need to stop hard coding the number, and we will need to wire up the buttons.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b48bbd7cf636ae4aa97041195d11824d502d201" translate="yes" xml:space="preserve">
          <source>To make those event handlers do something, we will need to define &lt;em&gt;actions&lt;/em&gt; in the component JavaScript. An action is a JavaScript method that can be used from a template.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0de715ec4bdc05fe56d9fee36be46b5f31b2be4" translate="yes" xml:space="preserve">
          <source>To make your own custom class enumerable, you need two items:</source>
          <target state="translated">Para hacer tu propia clase personalizada enumerable,necesitas dos artículos:</target>
        </trans-unit>
        <trans-unit id="1c466dfb41d5e397019aa3e58144514a595ced70" translate="yes" xml:space="preserve">
          <source>To match multiple routes 'space-separate' the routes:</source>
          <target state="translated">Para hacer coincidir varias rutas &quot;separar el espacio&quot; las rutas:</target>
        </trans-unit>
        <trans-unit id="13060a627addc391f25235a99ca3db1518034089" translate="yes" xml:space="preserve">
          <source>To measure components and templates that are rendered on initial application boot, click on the &quot;Reload&quot; button at the top. This button ensures that the Inspector starts measuring render times when your app boots.</source>
          <target state="translated">Para medir los componentes y plantillas que se renderizan en el arranque inicial de la aplicación,haga clic en el botón &quot;Recargar&quot; en la parte superior.Este botón asegura que el Inspector empiece a medir los tiempos de renderizado cuando su aplicación arranque.</target>
        </trans-unit>
        <trans-unit id="dc09e7ab0122ed1f10aad8febf2686e9ee8f8063" translate="yes" xml:space="preserve">
          <source>To normalize only a single model, you can use the &lt;a href=&quot;http://emberjs.com/api/data/classes/DS.JSONAPISerializer.html#method_normalize&quot;&gt;&lt;code&gt;normalize()&lt;/code&gt;&lt;/a&gt; hook similarly.</source>
          <target state="translated">Para normalizar solo un modelo, puede usar el gancho &lt;a href=&quot;http://emberjs.com/api/data/classes/DS.JSONAPISerializer.html#method_normalize&quot;&gt; &lt;code&gt;normalize()&lt;/code&gt; &lt;/a&gt; manera similar.</target>
        </trans-unit>
        <trans-unit id="1cdccb6c958acd580a297a3496a9089227ce41f9" translate="yes" xml:space="preserve">
          <source>To normalize only a single model, you can use the &lt;a href=&quot;https://api.emberjs.com/ember-data/release/classes/JSONAPISerializer/methods#normalize&quot;&gt;&lt;code&gt;normalize()&lt;/code&gt;&lt;/a&gt; hook similarly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b36d9c0d96220aa91e734666c278c544e5c33712" translate="yes" xml:space="preserve">
          <source>To open the Inspector, click on the new bookmark. Safari blocks popups by default, so you'll need to enable popups before using the bookmarklet.</source>
          <target state="translated">Para abrir el Inspector,haga clic en el nuevo marcador.Safari bloquea los popups por defecto,por lo que tendrás que habilitarlos antes de usar el bookmarklet.</target>
        </trans-unit>
        <trans-unit id="e32951622e512a5e2dbbf6daeb91928456978164" translate="yes" xml:space="preserve">
          <source>To override this method with a custom one, make sure to call &lt;code&gt;return this._super(store, primaryModelClass, payload, id, requestType)&lt;/code&gt; with your pre-processed data.</source>
          <target state="translated">Para anular este m&amp;eacute;todo con uno personalizado, aseg&amp;uacute;rese de llamar a &lt;code&gt;return this._super(store, primaryModelClass, payload, id, requestType)&lt;/code&gt; con sus datos preprocesados.</target>
        </trans-unit>
        <trans-unit id="643424ccbff431db940e6db1682aad8fbb931a53" translate="yes" xml:space="preserve">
          <source>To override this option for your entire application, see &quot;Overriding Application-wide Defaults&quot;.</source>
          <target state="translated">Para anular esta opción para toda la aplicación,consulte &quot;Anulación de los valores predeterminados de toda la aplicación&quot;.</target>
        </trans-unit>
        <trans-unit id="e7b7de1f5b2acd114aa92dfc71c79109066e6419" translate="yes" xml:space="preserve">
          <source>To pass multiple arguments to a helper, add them as a space-separated list after the helper name:</source>
          <target state="translated">Para pasar múltiples argumentos a un ayudante,añádelos como una lista separada del espacio después del nombre del ayudante:</target>
        </trans-unit>
        <trans-unit id="782db8348bb156313d7ba95741850dae22fcade0" translate="yes" xml:space="preserve">
          <source>To prevent Ember from setting up a listener for a default event, specify the event name with a &lt;code&gt;null&lt;/code&gt; value in the &lt;code&gt;customEvents&lt;/code&gt; property:</source>
          <target state="translated">Para evitar que Ember configure un detector para un evento predeterminado, especifique el nombre del evento con un valor &lt;code&gt;null&lt;/code&gt; en la propiedad &lt;code&gt;customEvents&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="7ad2dcdf74eb53253ee43f5d7112c03d7ee0c5cc" translate="yes" xml:space="preserve">
          <source>To prevent default events from being listened to:</source>
          <target state="translated">Para evitar que se escuchen los eventos predeterminados:</target>
        </trans-unit>
        <trans-unit id="d140dc02f52e1fafe21fbb1f3e0a87899ed55913" translate="yes" xml:space="preserve">
          <source>To prevent setting an attribute altogether, use &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt; as the return value of the &lt;code&gt;attributeBindings&lt;/code&gt; monitored property:</source>
          <target state="translated">Para evitar establecer un atributo por completo, use &lt;code&gt;null&lt;/code&gt; o &lt;code&gt;undefined&lt;/code&gt; como valor de retorno de la propiedad supervisada &lt;code&gt;attributeBindings&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="73a02062b3e08887f288a9fd11ff79db2b0726ee" translate="yes" xml:space="preserve">
          <source>To prevent setting an attribute altogether, use &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt; as the value of the property used in &lt;code&gt;attributeBindings&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88949b439b77da8a131b94c8c49c2264eabd59cf" translate="yes" xml:space="preserve">
          <source>To protect your application from cross-site scripting attacks (XSS), Ember automatically escapes any value you return from a helper so that the browser will not interpret it as HTML.</source>
          <target state="translated">Para proteger su aplicación de los ataques de cross-site scripting (XSS),Ember escapa automáticamente de cualquier valor que usted devuelva de un ayudante para que el navegador no lo interprete como HTML.</target>
        </trans-unit>
        <trans-unit id="410e671fa5ad1d60ce482717f4854a77655715ac" translate="yes" xml:space="preserve">
          <source>To provide a &lt;code&gt;firstName&lt;/code&gt; and &lt;code&gt;lastName&lt;/code&gt; to the above template, properties must be added to the application controller. If you are following along with an Ember CLI application, you may need to create this file:</source>
          <target state="translated">Para proporcionar una &lt;code&gt;firstName&lt;/code&gt; y &lt;code&gt;lastName&lt;/code&gt; a la plantilla anterior, las propiedades se deben a&amp;ntilde;adir al controlador de la aplicaci&amp;oacute;n. Si est&amp;aacute; siguiendo junto con una aplicaci&amp;oacute;n CLI de Ember, es posible que deba crear este archivo:</target>
        </trans-unit>
        <trans-unit id="29f27a0e8e02bfdfa170f1d9c3e3d514551a7d10" translate="yes" xml:space="preserve">
          <source>To push a record into the store, call the store's &lt;a href=&quot;http://emberjs.com/api/data/classes/DS.Store.html#method_push&quot;&gt;&lt;code&gt;push()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">Para enviar un registro a la tienda, llame al m&amp;eacute;todo &lt;a href=&quot;http://emberjs.com/api/data/classes/DS.Store.html#method_push&quot;&gt; &lt;code&gt;push()&lt;/code&gt; &lt;/a&gt; la tienda .</target>
        </trans-unit>
        <trans-unit id="37becbf52e680e8079dbf9fd6ab0890843872f81" translate="yes" xml:space="preserve">
          <source>To push a record into the store, call the store's &lt;a href=&quot;https://api.emberjs.com/ember-data/release/classes/Store/methods#push&quot;&gt;&lt;code&gt;push()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bb00b92ec7eb5ae8ed0e4fc8df3e54dd14fd77c" translate="yes" xml:space="preserve">
          <source>To read more about skip links, visit the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Learn/Accessibility/HTML#Skip_links&quot;&gt;MDN docs&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a185e83c481228539f24bb1c09c6b0245f73852" translate="yes" xml:space="preserve">
          <source>To remove a &lt;code&gt;belongsTo&lt;/code&gt; relationship, we can set it to &lt;code&gt;null&lt;/code&gt;, which will also remove it from the &lt;code&gt;hasMany&lt;/code&gt; side:</source>
          <target state="translated">Para eliminar una relaci&amp;oacute;n &lt;code&gt;belongsTo&lt;/code&gt; , podemos establecerla en &lt;code&gt;null&lt;/code&gt; , lo que tambi&amp;eacute;n la eliminar&amp;aacute; del lado &lt;code&gt;hasMany&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="432349a69d598accb34ee2c2bc3e7748a2394e9f" translate="yes" xml:space="preserve">
          <source>To remove an object from an enumerable, use the &lt;code&gt;removeObject()&lt;/code&gt; method. This will only remove the object if it is present in the enumerable, otherwise this method has no effect.</source>
          <target state="translated">Para eliminar un objeto de un enumerable, use el m&amp;eacute;todo &lt;code&gt;removeObject()&lt;/code&gt; . Esto solo eliminar&amp;aacute; el objeto si est&amp;aacute; presente en el enumerable; de ​​lo contrario, este m&amp;eacute;todo no tiene ning&amp;uacute;n efecto.</target>
        </trans-unit>
        <trans-unit id="7d9de26d22f9d5fddcc6b008df4be9a302d40e54" translate="yes" xml:space="preserve">
          <source>To represent the children as IDs:</source>
          <target state="translated">Para representar a los niños como identificaciones:</target>
        </trans-unit>
        <trans-unit id="96baf3260095c6e999a09f07d2439de39521a921" translate="yes" xml:space="preserve">
          <source>To represent the children relationship as a URL:</source>
          <target state="translated">Para representar la relación con los niños como una URL:</target>
        </trans-unit>
        <trans-unit id="61b2e6985c9d49eab39fc6b2473ca71648f4f595" translate="yes" xml:space="preserve">
          <source>To run a subset of your tests by title use the &lt;code&gt;--filter&lt;/code&gt; option. Quickly test your current work &lt;code&gt;ember test --filter=&quot;dashboard&quot;&lt;/code&gt;, or only run a certain type of test &lt;code&gt;ember test --filter=&quot;integration&quot;&lt;/code&gt;. When using QUnit it is possible to exclude tests by adding an exclamation point to the beginning of the filter &lt;code&gt;ember test --filter=&quot;!acceptance&quot;&lt;/code&gt;.</source>
          <target state="translated">Para ejecutar un subconjunto de sus pruebas por t&amp;iacute;tulo, use la opci&amp;oacute;n &lt;code&gt;--filter&lt;/code&gt; . Pruebe r&amp;aacute;pidamente su trabajo actual &lt;code&gt;ember test --filter=&quot;dashboard&quot;&lt;/code&gt; , o solo ejecute un cierto tipo de prueba &lt;code&gt;ember test --filter=&quot;integration&quot;&lt;/code&gt; . Cuando se usa QUnit, es posible excluir pruebas agregando un signo de exclamaci&amp;oacute;n al comienzo de la &lt;code&gt;ember test --filter=&quot;!acceptance&quot;&lt;/code&gt; del filtro --filter = &quot;! Accept&quot; .</target>
        </trans-unit>
        <trans-unit id="1886972c9e7e9a4f558bbcd67fc568ef5594acf6" translate="yes" xml:space="preserve">
          <source>To see a list of libraries used in your application, click on the &lt;code&gt;Info&lt;/code&gt; menu. This view displays the libraries used, along with their version.</source>
          <target state="translated">Para ver una lista de las bibliotecas utilizadas en su aplicaci&amp;oacute;n, haga clic en el men&amp;uacute; &lt;code&gt;Info&lt;/code&gt; rmaci&amp;oacute;n . Esta vista muestra las bibliotecas utilizadas, junto con su versi&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="bd3f95548b425d3595dc1e5a7a281f78a35f8f4c" translate="yes" xml:space="preserve">
          <source>To see how a template was rendered by Ember, click on the template in the View Tree. If you're using Chrome or Firefox, you'll be sent to the Elements panel with that DOM element selected.</source>
          <target state="translated">Para ver cómo una plantilla fue renderizada por Ember,haz clic en la plantilla en el Árbol de Vista.Si utilizas Chrome o Firefox,se te enviará al panel Elementos con ese elemento DOM seleccionado.</target>
        </trans-unit>
        <trans-unit id="e44b68c60f76b61bbdf60c921597a9cf8aad1469" translate="yes" xml:space="preserve">
          <source>To see the full list of computed property macros, have a look at &lt;a href=&quot;http://emberjs.com/api/classes/Ember.computed.html&quot;&gt;the API documentation&lt;/a&gt;</source>
          <target state="translated">Para ver la lista completa de macros de propiedades calculadas, consulte &lt;a href=&quot;http://emberjs.com/api/classes/Ember.computed.html&quot;&gt;la documentaci&amp;oacute;n de la API&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="44dfd079527ff92f76f15c9e2233ee33c127f0bf" translate="yes" xml:space="preserve">
          <source>To see the power of QUnit DOM, consider this code snippet. It checks whether our button component shows the right label and the right attributes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64c967ef9e903d9ceb1995e5404c8ab3a7e41b10" translate="yes" xml:space="preserve">
          <source>To see which optional features are available, you can run the following command:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10d1aa4aa9fe506d80116cddb13e609d02185dad" translate="yes" xml:space="preserve">
          <source>To set the component up to receive parameters this way, you need to set the &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Component.html#property_positionalParams&quot;&gt;&lt;code&gt;positionalParams&lt;/code&gt;&lt;/a&gt; attribute in your component class.</source>
          <target state="translated">Para configurar el componente para recibir par&amp;aacute;metros de esta manera, necesita establecer el atributo &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Component.html#property_positionalParams&quot;&gt; &lt;code&gt;positionalParams&lt;/code&gt; &lt;/a&gt; en su clase de componente.</target>
        </trans-unit>
        <trans-unit id="844e0103c86e1064d969400e55f8cbd4212c42ec" translate="yes" xml:space="preserve">
          <source>To set up embedded records, include the mixin when extending a serializer then define and configure embedded relationships.</source>
          <target state="translated">Para configurar los registros incrustados,incluya la mezcla al extender un serializador y luego defina y configure las relaciones incrustadas.</target>
        </trans-unit>
        <trans-unit id="7823165518baac275622086e0a64947c8412aa36" translate="yes" xml:space="preserve">
          <source>To set up embedded records, include the mixin when extending a serializer, then define and configure embedded (model) relationships.</source>
          <target state="translated">Para configurar los registros incrustados,incluya la mezcla al extender un serializador,luego defina y configure las relaciones incrustadas (modelo).</target>
        </trans-unit>
        <trans-unit id="04b6c1283408d9d9cea206ac24ad417174a73fb9" translate="yes" xml:space="preserve">
          <source>To show an error from the server related to the &lt;code&gt;title&lt;/code&gt; and &lt;code&gt;content&lt;/code&gt; properties your adapter could return a promise that rejects with a &lt;code&gt;DS.InvalidError&lt;/code&gt; object that looks like this:</source>
          <target state="translated">Para mostrar un error del servidor relacionado con el &lt;code&gt;title&lt;/code&gt; y las propiedades del &lt;code&gt;content&lt;/code&gt; , su adaptador podr&amp;iacute;a devolver una promesa que rechaza con un objeto &lt;code&gt;DS.InvalidError&lt;/code&gt; que se ve as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="5de09f992e282286fbce2df4cdb2170153b10b38" translate="yes" xml:space="preserve">
          <source>To show an error from the server related to the &lt;code&gt;title&lt;/code&gt; and &lt;code&gt;content&lt;/code&gt; properties your adapter could return a promise that rejects with a &lt;code&gt;InvalidError&lt;/code&gt; object that looks like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d22fb46ffa697dab0c28d5708fe886c943fb273" translate="yes" xml:space="preserve">
          <source>To show something on every page, we can use the application template (which we edited earlier). Let's open it again (&lt;code&gt;/app/templates/application.hbs&lt;/code&gt;) and replace its contents with the following:</source>
          <target state="translated">Para mostrar algo en cada p&amp;aacute;gina, podemos usar la plantilla de la aplicaci&amp;oacute;n (que editamos anteriormente). &lt;code&gt;/app/templates/application.hbs&lt;/code&gt; nuevamente ( /app/templates/application.hbs ) y reemplacemos su contenido con lo siguiente:</target>
        </trans-unit>
        <trans-unit id="ce4f53072b200771a6bd1a485f9c6358e79dc97f" translate="yes" xml:space="preserve">
          <source>To show the basic setup of an Ember application, we'll walk through building an app for a property rental site called Super Rentals. We'll start with a homepage, an about page and a contact page.</source>
          <target state="translated">Para mostrar la configuración básica de una aplicación Ember,vamos a construir una aplicación para un sitio de alquiler de propiedades llamado Super Rentals.Empezaremos con una página de inicio,una página de información y una página de contacto.</target>
        </trans-unit>
        <trans-unit id="393642dc2786c94991716cb91c7abd6d69b2c10b" translate="yes" xml:space="preserve">
          <source>To solve this problem, or maybe to cross-link comments from photos other than the currently active one, you can pass an array of model objects using the &lt;code&gt;@models&lt;/code&gt; argument and the &lt;code&gt;{{array}}&lt;/code&gt; helper:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c27517c0e2be0e963976ab64dbcdf375c7c6419" translate="yes" xml:space="preserve">
          <source>To specify that a parameter is mutable, when invoking the child &lt;code&gt;Component&lt;/code&gt;:</source>
          <target state="translated">Para especificar que un par&amp;aacute;metro es mutable, al invocar el &lt;code&gt;Component&lt;/code&gt; secundario :</target>
        </trans-unit>
        <trans-unit id="9e5e44d1e323523fd04fa6c63b5e27609319bbd8" translate="yes" xml:space="preserve">
          <source>To start, here's an example of returning a simple array from the &lt;code&gt;model&lt;/code&gt; hook. Even if we eventually plan to fetch this data over a network, starting with something simple makes initial development of a new route quick and easy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ca79710a45c8aed09d51d44e598c3593126facf" translate="yes" xml:space="preserve">
          <source>To stub the location service in your test, create a local stub object that extends &lt;code&gt;Ember.Service&lt;/code&gt;, and register the stub as the service your tests need in the beforeEach function. In this case we initially force location to New York.</source>
          <target state="translated">Para stub del servicio de ubicaci&amp;oacute;n en su prueba, cree un objeto stub local que ampl&amp;iacute;e &lt;code&gt;Ember.Service&lt;/code&gt; y registre el stub como el servicio que necesitan sus pruebas en la funci&amp;oacute;n beforeEach. En este caso, inicialmente forzamos la ubicaci&amp;oacute;n en Nueva York.</target>
        </trans-unit>
        <trans-unit id="e616fccd7436f63f17fdce0168c842b758d82ca3" translate="yes" xml:space="preserve">
          <source>To stub the location service in your test, create a local stub object that extends &lt;code&gt;Service&lt;/code&gt; from &lt;code&gt;@ember/service&lt;/code&gt;, and register the stub as the service your tests need in the beforeEach function. In this case we initially force location to &quot;New York&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9098d98f5bd71ee073118d2cf99cd0bc1bee3928" translate="yes" xml:space="preserve">
          <source>To style the application, copy the following CSS into &lt;code&gt;app/styles/app.css&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83c3a034dda372c47a7e55506b94a499dd11f2f5" translate="yes" xml:space="preserve">
          <source>To successfully extract and serialize embedded records the model relationships must be setup correcty. See the &lt;a href=&quot;https://emberjs.com/guides/models/defining-models/#toc_defining-relationships&quot;&gt;defining relationships&lt;/a&gt; section of the &lt;strong&gt;Defining Models&lt;/strong&gt; guide page.</source>
          <target state="translated">Para extraer y serializar correctamente los registros incrustados, las relaciones del modelo deben configurarse correctamente. Consulte la secci&amp;oacute;n de &lt;a href=&quot;https://emberjs.com/guides/models/defining-models/#toc_defining-relationships&quot;&gt;definici&amp;oacute;n de relaciones&lt;/a&gt; de la p&amp;aacute;gina de la gu&amp;iacute;a &lt;strong&gt;Definici&amp;oacute;n de modelos&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="5761ba208af86e2cfca0cbd986b96597bbcbe5f9" translate="yes" xml:space="preserve">
          <source>To sum it up, the new mental model is that the &quot;wrapping&quot; element is just like any other element in your template, and you interact with it in exactly the same way. This means that when converting a classic component, you will need to add the wrapping element that was there previously to the template (unless it was a tagless component, e.g. &lt;code&gt;tagName: ''&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6f5b7a5feba70d7bbd8e7ea599c7843b8360f83" translate="yes" xml:space="preserve">
          <source>To support &lt;code&gt;Ember.Array&lt;/code&gt; in your own class, you must override two primitives to use it: &lt;code&gt;length()&lt;/code&gt; and &lt;code&gt;objectAt()&lt;/code&gt;.</source>
          <target state="translated">Para admitir &lt;code&gt;Ember.Array&lt;/code&gt; en su propia clase, debe anular dos primitivas para usarlo: &lt;code&gt;length()&lt;/code&gt; y &lt;code&gt;objectAt()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="abb5441db3b24bf9c5e1a7d877b0758ccc2bf085" translate="yes" xml:space="preserve">
          <source>To support &lt;code&gt;EmberArray&lt;/code&gt; in your own class, you must override two primitives to use it: &lt;code&gt;length()&lt;/code&gt; and &lt;code&gt;objectAt()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="284156262ec009225218096a34db99fe111eef94" translate="yes" xml:space="preserve">
          <source>To tell the application which rental we want to access, we need to replace the &lt;code&gt;show&lt;/code&gt; route path with the ID of the rental listing. We also want to simplify the URL so that it looks more like this: &lt;code&gt;localhost:4200/rentals/id-for-rental&lt;/code&gt;.</source>
          <target state="translated">Para decirle a la aplicaci&amp;oacute;n a qu&amp;eacute; alquiler queremos acceder, debemos reemplazar la ruta de la ruta del &lt;code&gt;show&lt;/code&gt; con el ID de la lista de alquiler. Tambi&amp;eacute;n queremos simplificar la URL para que se parezca m&amp;aacute;s a esto: &lt;code&gt;localhost:4200/rentals/id-for-rental&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="94da23cc0d21ccaeb4d36e6224841c46fd4046cc" translate="yes" xml:space="preserve">
          <source>To test a feature you MUST be using a canary build. Canary builds are published to &lt;code&gt;npm&lt;/code&gt; and can be installed using a precise tag (such as &lt;code&gt;ember-data@3.16.0-alpha.1&lt;/code&gt;) or by installing the latest dist-tag published to the &lt;code&gt;canary&lt;/code&gt; channel.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb8bdc2ee12cbad5bed5fddb2deaabca492791bd" translate="yes" xml:space="preserve">
          <source>To test it, we create an instance of our class &lt;code&gt;SomeThing&lt;/code&gt; as defined above, call the &lt;code&gt;testMethod&lt;/code&gt; method and assert that the internal state is correct as a result of the method call.</source>
          <target state="translated">Para probarlo, creamos una instancia de nuestra clase &lt;code&gt;SomeThing&lt;/code&gt; como se defini&amp;oacute; anteriormente, llamamos al m&amp;eacute;todo &lt;code&gt;testMethod&lt;/code&gt; y afirmamos que el estado interno es correcto como resultado de la llamada al m&amp;eacute;todo.</target>
        </trans-unit>
        <trans-unit id="5469506e055e796f8450fa42672d0e80ba255641" translate="yes" xml:space="preserve">
          <source>To trace a Promise, click on the &lt;code&gt;Trace&lt;/code&gt; button next to the label, which will send the Promise stack trace to the console.</source>
          <target state="translated">Para rastrear una Promesa, haga clic en el bot&amp;oacute;n &lt;code&gt;Trace&lt;/code&gt; junto a la etiqueta, que enviar&amp;aacute; el rastreo de la pila de Promesas a la consola.</target>
        </trans-unit>
        <trans-unit id="81efb30747bfc7cc6e140692ae70701b93384146" translate="yes" xml:space="preserve">
          <source>To trigger this event:</source>
          <target state="translated">Para desencadenar este evento:</target>
        </trans-unit>
        <trans-unit id="2bcedd4c9e4a623cc510a72ad9fb73f9dac4c3f9" translate="yes" xml:space="preserve">
          <source>To try them out, do the following steps:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48d77718e1db6d457932cf1dfee14241b04544bc" translate="yes" xml:space="preserve">
          <source>To use a tag other than &lt;code&gt;div&lt;/code&gt;, subclass &lt;code&gt;Ember.Component&lt;/code&gt; and assign it a &lt;code&gt;tagName&lt;/code&gt; property. This property can be any valid HTML5 tag name as a string.</source>
          <target state="translated">Para usar una etiqueta que no sea &lt;code&gt;div&lt;/code&gt; , subclase &lt;code&gt;Ember.Component&lt;/code&gt; y as&amp;iacute;gnele una propiedad &lt;code&gt;tagName&lt;/code&gt; . Esta propiedad puede ser cualquier nombre de etiqueta HTML5 v&amp;aacute;lido como cadena.</target>
        </trans-unit>
        <trans-unit id="3a10e85d71bb02f30ffa65660d976a2614878268" translate="yes" xml:space="preserve">
          <source>To use it in your application you will need to define a &lt;code&gt;serializer:application&lt;/code&gt; that extends the &lt;code&gt;JSONSerializer&lt;/code&gt;.</source>
          <target state="translated">Para usarlo en su aplicaci&amp;oacute;n, deber&amp;aacute; definir un &lt;code&gt;serializer:application&lt;/code&gt; que ampl&amp;iacute;e &lt;code&gt;JSONSerializer&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3ac55d23e3de772ab700ee1e89d91af6e27bd4d1" translate="yes" xml:space="preserve">
          <source>To use it, pass the conditional value to the &lt;code&gt;if&lt;/code&gt; helper, using the block form to wrap the section of template you want to conditionally render. Like so:</source>
          <target state="translated">Para usarlo, pase el valor condicional al ayudante &lt;code&gt;if&lt;/code&gt; , usando el formulario de bloque para envolver la secci&amp;oacute;n de la plantilla que desea renderizar condicionalmente. Al igual que:</target>
        </trans-unit>
        <trans-unit id="d4ed92f3e127472a3aa889d5c0b4781b9d9a78db" translate="yes" xml:space="preserve">
          <source>To use our new Ember Data Model object, we need to update the &lt;code&gt;model&lt;/code&gt; function we &lt;a href=&quot;../model-hook&quot;&gt;previously defined&lt;/a&gt; in our route handler. Delete the hard-coded JavaScript Array, and replace it with the following call to the &lt;a href=&quot;https://guides.emberjs.com/models/#toc_the-store-and-a-single-source-of-truth&quot;&gt;Ember Data Store service&lt;/a&gt;. The &lt;a href=&quot;http://emberjs.com/api/data/classes/DS.Store.html&quot;&gt;store service&lt;/a&gt; is injected into all routes and components in Ember. It is the main interface you use to interact with Ember Data. In this case, call the &lt;a href=&quot;http://emberjs.com/api/data/classes/DS.Store.html#method_findAll&quot;&gt;&lt;code&gt;findAll&lt;/code&gt;&lt;/a&gt; function on the store and provide it with the name of your newly created rental model class.</source>
          <target state="translated">Para usar nuestro nuevo objeto Ember Data Model, necesitamos actualizar la funci&amp;oacute;n del &lt;code&gt;model&lt;/code&gt; o que definimos &lt;a href=&quot;../model-hook&quot;&gt;previamente&lt;/a&gt; en nuestro controlador de ruta. Elimine la matriz JavaScript codificada de forma r&amp;iacute;gida y reempl&amp;aacute;cela con la siguiente llamada al &lt;a href=&quot;https://guides.emberjs.com/models/#toc_the-store-and-a-single-source-of-truth&quot;&gt;servicio Ember Data Store&lt;/a&gt; . El &lt;a href=&quot;http://emberjs.com/api/data/classes/DS.Store.html&quot;&gt;servicio de tienda&lt;/a&gt; se inyecta en todas las rutas y componentes en Ember. Es la interfaz principal que usa para interactuar con Ember Data. En este caso, llame a la funci&amp;oacute;n &lt;a href=&quot;http://emberjs.com/api/data/classes/DS.Store.html#method_findAll&quot;&gt; &lt;code&gt;findAll&lt;/code&gt; &lt;/a&gt; en la tienda y proporcione el nombre de su clase de modelo de alquiler reci&amp;eacute;n creada.</target>
        </trans-unit>
        <trans-unit id="a1bd3b7a10987c576e4b3e5ef0d1eb55854bd669" translate="yes" xml:space="preserve">
          <source>To use the &lt;code&gt;format-currency&lt;/code&gt; helper, you call it using curly braces in your template:</source>
          <target state="translated">Para usar el ayudante de &lt;code&gt;format-currency&lt;/code&gt; , ll&amp;aacute;melo usando llaves en su plantilla:</target>
        </trans-unit>
        <trans-unit id="ff265ce4f656a5022fc0eb3e3b6a48bcf6f66b72" translate="yes" xml:space="preserve">
          <source>To use the &lt;code&gt;meta&lt;/code&gt; data outside of the &lt;code&gt;model&lt;/code&gt; hook, you need to return it:</source>
          <target state="translated">Para usar los &lt;code&gt;meta&lt;/code&gt; datos fuera del enlace del &lt;code&gt;model&lt;/code&gt; o , debe devolverlos:</target>
        </trans-unit>
        <trans-unit id="6c97e84d6c7f8dbcc0f576804dd9a172f8ea4443" translate="yes" xml:space="preserve">
          <source>To use the Inspector with the &lt;code&gt;file://&lt;/code&gt; protocol, visit &lt;code&gt;chrome://extensions&lt;/code&gt; in Chrome and check the &quot;Allow access to file URLs&quot; checkbox:</source>
          <target state="translated">Para usar el Inspector con el protocolo &lt;code&gt;file://&lt;/code&gt; , visite &lt;code&gt;chrome://extensions&lt;/code&gt; en Chrome y marque la casilla de verificaci&amp;oacute;n &quot;Permitir el acceso a las URL de los archivos&quot;:</target>
        </trans-unit>
        <trans-unit id="5b4b9b0f7d1081e76bebbad8d407bc61b550eeac" translate="yes" xml:space="preserve">
          <source>To use the block form, add a &lt;code&gt;#&lt;/code&gt; character to the beginning of the component name, then make sure to add a closing tag.</source>
          <target state="translated">Para usar el formulario de bloque, agregue un car&amp;aacute;cter &lt;code&gt;#&lt;/code&gt; al principio del nombre del componente, luego aseg&amp;uacute;rese de agregar una etiqueta de cierre.</target>
        </trans-unit>
        <trans-unit id="2b34f2fce983b8f7e66aeba0dcd54687c1641fe4" translate="yes" xml:space="preserve">
          <source>To use url building, include the mixin when extending an adapter, and call &lt;code&gt;buildURL&lt;/code&gt; where needed. The default behaviour is designed for RESTAdapter.</source>
          <target state="translated">Para usar la construcci&amp;oacute;n de URL, incluya el mixin al extender un adaptador y llame a &lt;code&gt;buildURL&lt;/code&gt; cuando sea necesario. El comportamiento predeterminado est&amp;aacute; dise&amp;ntilde;ado para RESTAdapter.</target>
        </trans-unit>
        <trans-unit id="b06bc5d392cd3c4ae056891cbe7f6e4fea87f456" translate="yes" xml:space="preserve">
          <source>To utilize an &lt;code&gt;event&lt;/code&gt; object as a function parameter:</source>
          <target state="translated">Para utilizar un objeto de &lt;code&gt;event&lt;/code&gt; o como par&amp;aacute;metro de funci&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="c8e7168cd76584331b5822b4bec75e170927b9af" translate="yes" xml:space="preserve">
          <source>To verify that your installation was successful, run:</source>
          <target state="translated">Para verificar que su instalación fue exitosa,corra:</target>
        </trans-unit>
        <trans-unit id="4c45291da01a2d21f8e4e871bb2b3b252689cfbd" translate="yes" xml:space="preserve">
          <source>To view the list of deprecations in an app, click on the &lt;code&gt;Deprecations&lt;/code&gt; menu.</source>
          <target state="translated">Para ver la lista de obsolescencias en una aplicaci&amp;oacute;n, haga clic en el men&amp;uacute; &lt;code&gt;Deprecations&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bc6b3697807941cf644d0c3ddef26bebd3c914d3" translate="yes" xml:space="preserve">
          <source>Together, the &lt;code&gt;type&lt;/code&gt; and &lt;code&gt;id&lt;/code&gt; properties form a composite key for the identity map.</source>
          <target state="translated">Juntos, las propiedades de &lt;code&gt;type&lt;/code&gt; e &lt;code&gt;id&lt;/code&gt; forman una clave compuesta para el mapa de identidad.</target>
        </trans-unit>
        <trans-unit id="d56de7b370288540849e6b1f840001a93d377139" translate="yes" xml:space="preserve">
          <source>Tomster says...</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="212af41073666530ad8bf245becce259a0964242" translate="yes" xml:space="preserve">
          <source>Toolbar</source>
          <target state="translated">Toolbar</target>
        </trans-unit>
        <trans-unit id="f9ed2d73afa9c116adcb8e39bc914e28acd8bed9" translate="yes" xml:space="preserve">
          <source>Topics in the &lt;a href=&quot;https://ember-learn.github.io/ember-octane-vs-classic-cheat-sheet/&quot;&gt;cheat sheet&lt;/a&gt; include:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c201b38fdebbb9bb45b78e75ce5a39c7cd55dd3a" translate="yes" xml:space="preserve">
          <source>Total number of errors.</source>
          <target state="translated">Número total de errores.</target>
        </trans-unit>
        <trans-unit id="feca6ac147fe6946560ac4f3352301d8cb402e31" translate="yes" xml:space="preserve">
          <source>Touch events:</source>
          <target state="translated">Toca los eventos:</target>
        </trans-unit>
        <trans-unit id="68c508431455ff22684105af9cb2ecc131f7e321" translate="yes" xml:space="preserve">
          <source>Tracing</source>
          <target state="translated">Tracing</target>
        </trans-unit>
        <trans-unit id="62aa935fa553c399eb205ec038f54040176e41b4" translate="yes" xml:space="preserve">
          <source>Tracked Properties</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36dadccfbf6b0a562e3d2d31c8194949fce9d447" translate="yes" xml:space="preserve">
          <source>Tracked Properties in Custom Classes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6ec23565c8db5fcd7f5868497b3f514f9b037e2" translate="yes" xml:space="preserve">
          <source>Tracked properties are fully backwards compatible with computed properties and &lt;code&gt;get&lt;/code&gt;/&lt;code&gt;set&lt;/code&gt;. Computed properties can depend on tracked properties like any other dependency:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0de365a3324ea771edb043edf9fc43d7465591b4" translate="yes" xml:space="preserve">
          <source>Tracked properties can also be applied to your own custom classes, and used within your components and routes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed56cadc9ca1726b0fcb5052461fc8a8057508ba" translate="yes" xml:space="preserve">
          <source>Tracked properties can be updated like any other property, using standard JavaScript syntax. For instance, we could update a tracked property via an action, as in this example component.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="338f7f75821dd5e87c99535dfd8c4169066c6d13" translate="yes" xml:space="preserve">
          <source>Tracked properties have subtler benefits as well:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="792ac62324ec24646a9d1e12b4446100b04a3de6" translate="yes" xml:space="preserve">
          <source>Tracked properties replace computed properties. Unlike computed properties, which require you to annotate every getter with the values it depends on, tracked properties only require you to annotate the values that are &lt;em&gt;trackable&lt;/em&gt;, that is values that:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5271bbbae154f516a424da7d054f458ac3e263e5" translate="yes" xml:space="preserve">
          <source>Tracked vs Computed Properties</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="417871b118006bea50a751b23725ff8029ea56b2" translate="yes" xml:space="preserve">
          <source>Tracking Through Methods</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dea51bb13a4467c505ee6181171375f497334d54" translate="yes" xml:space="preserve">
          <source>Transform</source>
          <target state="translated">Transform</target>
        </trans-unit>
        <trans-unit id="0cef4df4d340703594fc301669e90430e959441b" translate="yes" xml:space="preserve">
          <source>Transforms</source>
          <target state="translated">Transforms</target>
        </trans-unit>
        <trans-unit id="ee9a7401cfdf77cbfcfa276345967663f2ed541e" translate="yes" xml:space="preserve">
          <source>Transforms are not required. If you do not specify a transform name Ember Data will do no additional processing of the value.</source>
          <target state="translated">No es necesario hacer transformaciones.Si no se especifica un nombre de transformación,Ember Data no hará ningún procesamiento adicional del valor.</target>
        </trans-unit>
        <trans-unit id="4ead496f48fa5f6d2d96f52143b2d7c60b4140d3" translate="yes" xml:space="preserve">
          <source>Transition</source>
          <target state="translated">Transition</target>
        </trans-unit>
        <trans-unit id="3a38dd0e80493ddad0a8b9fc31e36c252b5d7258" translate="yes" xml:space="preserve">
          <source>Transition Plans</source>
          <target state="translated">Planes de transición</target>
        </trans-unit>
        <trans-unit id="58d6d64ea8820023309981d51b607f7cb4f0da7e" translate="yes" xml:space="preserve">
          <source>Transition into another route while replacing the current URL, if possible. The route may be either a single route or route path:</source>
          <target state="translated">Transición a otra ruta mientras se reemplaza el URL actual,si es posible.La ruta puede ser una ruta única o un camino de ruta:</target>
        </trans-unit>
        <trans-unit id="bc1b0e501d34e708fc9cc731a2b3c2033acc8b08" translate="yes" xml:space="preserve">
          <source>Transition into another route while replacing the current URL, if possible. This will replace the current history entry instead of adding a new one. Beside that, it is identical to &lt;code&gt;transitionTo&lt;/code&gt; in all other respects. See 'transitionTo' for additional information regarding multiple models.</source>
          <target state="translated">Realice la transici&amp;oacute;n a otra ruta mientras reemplaza la URL actual, si es posible. Esto reemplazar&amp;aacute; la entrada actual del historial en lugar de agregar una nueva. Adem&amp;aacute;s de eso, es id&amp;eacute;ntico a &lt;code&gt;transitionTo&lt;/code&gt; en todos los dem&amp;aacute;s aspectos. Consulte 'transici&amp;oacute;n a' para obtener informaci&amp;oacute;n adicional sobre varios modelos.</target>
        </trans-unit>
        <trans-unit id="3817345cd736105fd19da678c761e0ee0dc1d3d6" translate="yes" xml:space="preserve">
          <source>Transition into another route while replacing the current URL, if possible. This will replace the current history entry instead of adding a new one. Beside that, it is identical to &lt;code&gt;transitionToRoute&lt;/code&gt; in all other respects.</source>
          <target state="translated">Realice la transici&amp;oacute;n a otra ruta mientras reemplaza la URL actual, si es posible. Esto reemplazar&amp;aacute; la entrada actual del historial en lugar de agregar una nueva. Adem&amp;aacute;s de eso, es id&amp;eacute;ntico a &lt;code&gt;transitionToRoute&lt;/code&gt; en todos los dem&amp;aacute;s aspectos.</target>
        </trans-unit>
        <trans-unit id="f9fbe2b3f5c5cd05ac457782cac8426ace4067da" translate="yes" xml:space="preserve">
          <source>Transition the application into another route. The route may be either a single route or route path:</source>
          <target state="translated">Transfiera la aplicación a otra ruta.La ruta puede ser una ruta única o un camino de ruta:</target>
        </trans-unit>
        <trans-unit id="09485928bf975e30a09112e580ae8b87390ef25d" translate="yes" xml:space="preserve">
          <source>Transition to a nested route</source>
          <target state="translated">La transición a una ruta anidada</target>
        </trans-unit>
        <trans-unit id="2e8d1954c6e263dec2af78024bacfdd651c85cb4" translate="yes" xml:space="preserve">
          <source>Transitioning After the Model is Known</source>
          <target state="translated">La transición después de que se conozca el modelo</target>
        </trans-unit>
        <trans-unit id="8eeb89d7f7b67faed7cc1a366a765420b6ef9289" translate="yes" xml:space="preserve">
          <source>Transitioning Before the Model is Known</source>
          <target state="translated">La transición antes de que se conozca el modelo</target>
        </trans-unit>
        <trans-unit id="3f2c8e69cd8ba2d1f715431bd113f96337919877" translate="yes" xml:space="preserve">
          <source>Transitioning Between Routes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04eb77e03c3f23bf5e6e18ba4df0da5cd5f31776" translate="yes" xml:space="preserve">
          <source>Transitions are aborted and their promises rejected when redirects occur; this method returns a promise that will follow any redirects that occur and fulfill with the value fulfilled by any redirecting transitions that occur.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b867dfc8d8f207f8f4c1fbcb4af23d1d9288622d" translate="yes" xml:space="preserve">
          <source>Transpile</source>
          <target state="translated">Transpile</target>
        </trans-unit>
        <trans-unit id="7be9134d32caa15cd71ab9ecd34dc5705a1ebaf0" translate="yes" xml:space="preserve">
          <source>Treating a function like a property is useful because they can work with bindings, just like any other property.</source>
          <target state="translated">Tratar una función como una propiedad es útil porque pueden trabajar con ataduras,como cualquier otra propiedad.</target>
        </trans-unit>
        <trans-unit id="6b82a6a604ce871413a50334f0f8ba973ba15b4b" translate="yes" xml:space="preserve">
          <source>Trigger the function on the leading instead of the trailing edge of the wait interval. Defaults to false.</source>
          <target state="translated">Activar la función en el borde anterior en lugar del borde posterior del intervalo de espera.Por defecto es falso.</target>
        </trans-unit>
        <trans-unit id="6bd621dbfc252949948e1fe15e02e3b79027c1b3" translate="yes" xml:space="preserve">
          <source>Trigger the function on the leading instead of the trailing edge of the wait interval. Defaults to true.</source>
          <target state="translated">Activar la función en el borde anterior en lugar del borde posterior del intervalo de espera.Por defecto es verdadero.</target>
        </trans-unit>
        <trans-unit id="a2759c77b24ab94668e8d1b8b501df3aeb5de2d0" translate="yes" xml:space="preserve">
          <source>Triggering Changes with Actions</source>
          <target state="translated">Desencadenando cambios con acciones</target>
        </trans-unit>
        <trans-unit id="edfa1c6872dd277eb5731ab22fc55770b3601c4a" translate="yes" xml:space="preserve">
          <source>Triggering an update like this will cause any getters that used the &lt;code&gt;_cache&lt;/code&gt; to recalculate. Note that we can use the &lt;code&gt;get&lt;/code&gt; method to access the cache, and it will still push the &lt;code&gt;_cache&lt;/code&gt; tracked property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73a3d9bc198a238e77a9c030c52dc7b578779d72" translate="yes" xml:space="preserve">
          <source>Triggering an update like this will cause any getters that used the &lt;code&gt;cache&lt;/code&gt; to recalculate. Note that we can use the &lt;code&gt;get&lt;/code&gt; method to access the cache, and it will still push the &lt;code&gt;_cache&lt;/code&gt; tracked property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05c0c58fbbc9f0cf9c0bb880afe8c0b49d825dcd" translate="yes" xml:space="preserve">
          <source>Triggers a fetch for the backing entity based on its &lt;code&gt;remoteType&lt;/code&gt; (see &lt;code&gt;remoteType&lt;/code&gt; definitions per reference type).</source>
          <target state="translated">Activa una b&amp;uacute;squeda para la entidad de respaldo en funci&amp;oacute;n de su &lt;code&gt;remoteType&lt;/code&gt; (consulte &lt;code&gt;remoteType&lt;/code&gt; definiciones de remoteType por tipo de referencia).</target>
        </trans-unit>
        <trans-unit id="1f7ec6fd588f66e0f74bc20fe04496819936427e" translate="yes" xml:space="preserve">
          <source>Triggers a named action on the &lt;code&gt;ActionHandler&lt;/code&gt;. Any parameters supplied after the &lt;code&gt;actionName&lt;/code&gt; string will be passed as arguments to the action target function.</source>
          <target state="translated">Activa una acci&amp;oacute;n con nombre en &lt;code&gt;ActionHandler&lt;/code&gt; . Cualquier par&amp;aacute;metro proporcionado despu&amp;eacute;s de la cadena &lt;code&gt;actionName&lt;/code&gt; se pasar&amp;aacute; como argumentos a la funci&amp;oacute;n de destino de la acci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="caf81df837a77ea1a1597867231d2fd92f696d66" translate="yes" xml:space="preserve">
          <source>Triggers a named event for the object. Any additional arguments will be passed as parameters to the functions that are subscribed to the event.</source>
          <target state="translated">Desencadena un evento con nombre para el objeto.Cualquier argumento adicional se pasará como parámetro a las funciones que estén suscritas al evento.</target>
        </trans-unit>
        <trans-unit id="b37a90c35c25e5423f4922a95a3be6ba46a762f1" translate="yes" xml:space="preserve">
          <source>Triggers a reload of the value in this relationship. If the remoteType is &lt;code&gt;&quot;link&quot;&lt;/code&gt; Ember Data will use the relationship link to reload the relationship. Otherwise it will reload the record by its id.</source>
          <target state="translated">Activa una recarga del valor en esta relaci&amp;oacute;n. Si el tipo remoto es &lt;code&gt;&quot;link&quot;&lt;/code&gt; Ember Data utilizar&amp;aacute; el enlace de relaci&amp;oacute;n para recargar la relaci&amp;oacute;n. De lo contrario, volver&amp;aacute; a cargar el registro por su id.</target>
        </trans-unit>
        <trans-unit id="90ab4ebeae51b5fd454cba0691dd4c85d5df4631" translate="yes" xml:space="preserve">
          <source>Triggers the given DOM event on the element identified by the provided selector. Example:</source>
          <target state="translated">Dispara el evento DOM dado en el elemento identificado por el selector provisto.Ejemplo:</target>
        </trans-unit>
        <trans-unit id="b3c7ae9f5129772a579c1a689085b260b5f7a672" translate="yes" xml:space="preserve">
          <source>Triggers the given event, e.g. &lt;code&gt;blur&lt;/code&gt;, &lt;code&gt;dblclick&lt;/code&gt; on the element identified by the provided selector.</source>
          <target state="translated">Activa el evento dado, por ejemplo, &lt;code&gt;blur&lt;/code&gt; , &lt;code&gt;dblclick&lt;/code&gt; en el elemento identificado por el selector proporcionado.</target>
        </trans-unit>
        <trans-unit id="88ede053a62e801fe94c3f39f9283bc95d7953b4" translate="yes" xml:space="preserve">
          <source>Triggers the router level &lt;code&gt;didTransition&lt;/code&gt; hook.</source>
          <target state="translated">Activa el gancho &lt;code&gt;didTransition&lt;/code&gt; a nivel del enrutador .</target>
        </trans-unit>
        <trans-unit id="fd1c5125e97b8ef7401e3054a46c338003dc15f5" translate="yes" xml:space="preserve">
          <source>Triggers the router level &lt;code&gt;willTransition&lt;/code&gt; hook.</source>
          <target state="translated">Activa el gancho de &lt;code&gt;willTransition&lt;/code&gt; nivel del enrutador .</target>
        </trans-unit>
        <trans-unit id="c4f15d1227f1cecd460d1f08b6f43ba52c0f8b32" translate="yes" xml:space="preserve">
          <source>Triple curly brackets are a convenient way to put dynamic HTML into Ember templates, but are not recommended for production apps. Inserting unknown HTML can create unexpected results and security issues. Be sure to sanitize the HTML before you render it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="285ec850c11d78bac10f6bfa31b69a37f1b257c9" translate="yes" xml:space="preserve">
          <source>Troubleshooting</source>
          <target state="translated">Troubleshooting</target>
        </trans-unit>
        <trans-unit id="32c1f66a64fae49554e8daf1291a5edd4605373b" translate="yes" xml:space="preserve">
          <source>Try refactoring one existing component to use Octane style. Check out the &lt;a href=&quot;cheat-sheet&quot;&gt;Cheat Sheet&lt;/a&gt; and &lt;a href=&quot;https://guides.emberjs.com/in-depth-topics/&quot;&gt;Edition's Deep Dive&lt;/a&gt; for some pointers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51139440f1946cdd636cad160b3632b12dfda096" translate="yes" xml:space="preserve">
          <source>Try refactoring one existing component to use Octane style. Check out the &lt;a href=&quot;cheat-sheet&quot;&gt;Cheat Sheet&lt;/a&gt; and &lt;a href=&quot;https://guides.emberjs.com/v3.25.0/in-depth-topics/&quot;&gt;Edition's Deep Dive&lt;/a&gt; for some pointers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3afd3167184bdb3baea996bf37e014fc89cdadc8" translate="yes" xml:space="preserve">
          <source>Turn on resolver resolution logging</source>
          <target state="translated">Activar el registro de la resolución de la resolución</target>
        </trans-unit>
        <trans-unit id="171dc559b8c86e4b5f59e4b10965ed25793a055c" translate="yes" xml:space="preserve">
          <source>Tweaking the Default JSON</source>
          <target state="translated">Ajustando el JSON por defecto</target>
        </trans-unit>
        <trans-unit id="7b4a2b410126ecccb887285bdab4c6d3146bd760" translate="yes" xml:space="preserve">
          <source>Two, unit tests allow you to focus on small pieces of logic that might be difficult to exercise in higher-level tests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59ae438323ad843da4c143e3db72fa92cf8f29ed" translate="yes" xml:space="preserve">
          <source>Typical Example:</source>
          <target state="translated">Ejemplo típico:</target>
        </trans-unit>
        <trans-unit id="92bbd30186d37d129136d1fb54f7113f7bd05fd7" translate="yes" xml:space="preserve">
          <source>Typically &lt;code&gt;serializerFor&lt;/code&gt; will be used to find a serializer with a name matching that of the primary resource &lt;code&gt;type&lt;/code&gt; for the request, falling back to the &lt;code&gt;application&lt;/code&gt; serializer for those types that do not have a defined serializer. This is often described as a &lt;code&gt;per-model&lt;/code&gt; or &lt;code&gt;per-type&lt;/code&gt; strategy for defining serializers. However, because APIs rarely format payloads per-type but rather per-API-version, this may not be a desired strategy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4dd5329de229683bdb2f5069e615011060b419a" translate="yes" xml:space="preserve">
          <source>Typically these features represent work that might introduce a new concept, new API, change an API, or risk an unintended change in behavior to consuming applications.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1016393aae80d0b7e8ffa293c223fee10559838d" translate="yes" xml:space="preserve">
          <source>Typically, most models are loaded from and saved to a server that uses a database to store data. Usually you will send JSON representations of models back and forth to an HTTP server that you have written. However, Ember makes it easy to use other durable storage, such as saving to the user's hard disk with &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API&quot;&gt;IndexedDB&lt;/a&gt;, or hosted storage solutions that let you avoid writing and hosting your own servers.</source>
          <target state="translated">Normalmente, la mayor&amp;iacute;a de los modelos se cargan y se guardan en un servidor que utiliza una base de datos para almacenar datos. Por lo general, enviar&amp;aacute; representaciones JSON de modelos de un lado a otro a un servidor HTTP que haya escrito. Sin embargo, Ember facilita el uso de otro almacenamiento duradero, como guardar en el disco duro del usuario con &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API&quot;&gt;IndexedDB&lt;/a&gt; , o soluciones de almacenamiento alojado que le permiten evitar escribir y alojar sus propios servidores.</target>
        </trans-unit>
        <trans-unit id="d0f00d1a5e9139be33f8866b6b8f269ded268029" translate="yes" xml:space="preserve">
          <source>Typically, the &lt;code&gt;model&lt;/code&gt; hook should return an &lt;a href=&quot;https://guides.emberjs.com/models/&quot;&gt;Ember Data&lt;/a&gt; record, but it can also return any &lt;a href=&quot;https://www.promisejs.org/&quot;&gt;promise&lt;/a&gt; object (Ember Data records are promises), or a plain JavaScript object or array. Ember will wait until the data finishes loading (until the promise is resolved) before rendering the template.</source>
          <target state="translated">Por lo general, el gancho &lt;code&gt;model&lt;/code&gt; o debe devolver un registro de &lt;a href=&quot;https://guides.emberjs.com/models/&quot;&gt;datos de Ember&lt;/a&gt; , pero tambi&amp;eacute;n puede devolver cualquier objeto de &lt;a href=&quot;https://www.promisejs.org/&quot;&gt;promesa&lt;/a&gt; (los registros de datos de Ember son promesas), o un objeto o matriz de JavaScript simple. Ember esperar&amp;aacute; hasta que los datos terminen de cargarse (hasta que se resuelva la promesa) antes de renderizar la plantilla.</target>
        </trans-unit>
        <trans-unit id="90f6a780943179d8b1aae6e03c66f89fa92e7702" translate="yes" xml:space="preserve">
          <source>Typically, the application object is the only global variable. All other classes in your app should be properties on the &lt;code&gt;Ember.Application&lt;/code&gt; instance, which highlights its first role: a global namespace.</source>
          <target state="translated">Normalmente, el objeto de la aplicaci&amp;oacute;n es la &amp;uacute;nica variable global. Todas las dem&amp;aacute;s clases de su aplicaci&amp;oacute;n deben ser propiedades en la instancia de &lt;code&gt;Ember.Application&lt;/code&gt; , que destaca su primera funci&amp;oacute;n: un espacio de nombres global.</target>
        </trans-unit>
        <trans-unit id="9a9cecfe60e474fbd88d57ddf86af2698a9750c5" translate="yes" xml:space="preserve">
          <source>Typos, missing words, and code samples with errors are all considered documentation bugs. If you spot one of them, or want to otherwise improve the existing guides, we are happy to help you help us!</source>
          <target state="translated">Los errores tipográficos,las palabras perdidas y los códigos con errores se consideran errores de documentación.Si detectas alguno de ellos,o quieres mejorar las guías existentes,¡estamos encantados de ayudarte a ayudarnos!</target>
        </trans-unit>
        <trans-unit id="9d57875196c613785a1eee010c55223a0f1aa821" translate="yes" xml:space="preserve">
          <source>UI</source>
          <target state="translated">UI</target>
        </trans-unit>
        <trans-unit id="0ba153f162628204eee9e4b45358dd42399839e8" translate="yes" xml:space="preserve">
          <source>UI elements whose data is independent of a route. For example, a modal that could appear on many different routes, and the modal has its own unique data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56ec268e73f8f2ff103ef53a9916b081ba7f3172" translate="yes" xml:space="preserve">
          <source>UI stands for User Interface and is essentially what the user sees and interacts with on a device. In terms of the web, the UI is generally composed of a series of pages containing visual elements such as buttons and icons that a user can interact with to perform a specific function.</source>
          <target state="translated">UI significa User Interface y es esencialmente lo que el usuario ve e interactúa en un dispositivo.En lo que respecta a la web,la UI se compone generalmente de una serie de páginas que contienen elementos visuales como botones e iconos con los que el usuario puede interactuar para realizar una función específica.</target>
        </trans-unit>
        <trans-unit id="25ba44ec3b391ba4ce5fbbd2979635e254775e7d" translate="yes" xml:space="preserve">
          <source>UNKNOWN</source>
          <target state="translated">UNKNOWN</target>
        </trans-unit>
        <trans-unit id="0e2d9b0777a485c1276de0803c12a7d76fbc5c39" translate="yes" xml:space="preserve">
          <source>URL</source>
          <target state="translated">URL</target>
        </trans-unit>
        <trans-unit id="2a78301c31a5cdf1806010201d9c88a248b6e24f" translate="yes" xml:space="preserve">
          <source>URL Conventions</source>
          <target state="translated">Convenciones de la URL</target>
        </trans-unit>
        <trans-unit id="76d8d79b3321afa690f6de9e3b55b258a0c6db9c" translate="yes" xml:space="preserve">
          <source>UnauthorizedError</source>
          <target state="translated">UnauthorizedError</target>
        </trans-unit>
        <trans-unit id="1d0b24ed134011a2aa230bdbb865f186a7f4281a" translate="yes" xml:space="preserve">
          <source>Unbound:</source>
          <target state="translated">Unbound:</target>
        </trans-unit>
        <trans-unit id="adcff83915dac1afac720f25d1f1be8c41ff4bd5" translate="yes" xml:space="preserve">
          <source>Unconsumed Computed Properties Do Not Trigger Observers</source>
          <target state="translated">Las propiedades computarizadas no consumidas no activan a los observadores</target>
        </trans-unit>
        <trans-unit id="0646f4afd90c8fdb87bbcb57b63ee1911f5a9a46" translate="yes" xml:space="preserve">
          <source>Undefined</source>
          <target state="translated">Undefined</target>
        </trans-unit>
        <trans-unit id="b2cf9e638539bf147e1afc2be86aae23bea12dca" translate="yes" xml:space="preserve">
          <source>Unfortunately we don't have control over the Firefox review process, so if you need the latest Inspector version, download and install it manually from &lt;a href=&quot;https://github.com/emberjs/ember-inspector&quot;&gt;GitHub&lt;/a&gt;.</source>
          <target state="translated">Desafortunadamente, no tenemos control sobre el proceso de revisi&amp;oacute;n de Firefox, por lo que si necesita la &amp;uacute;ltima versi&amp;oacute;n de Inspector, desc&amp;aacute;rguela e inst&amp;aacute;lela manualmente desde &lt;a href=&quot;https://github.com/emberjs/ember-inspector&quot;&gt;GitHub&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2cac43b24a13e42d8cce322b40984d5b87556749" translate="yes" xml:space="preserve">
          <source>Unfortunately, the app will now make two separate requests for the same information. Not only is the redundant data fetching costly in terms of wasted bandwidth and affecting the perceived speed of your app, it's easy for the two values to get out-of-sync. You yourself have probably used a web application where the list of items gets out of sync with the counter in a toolbar, leading to a frustrating and inconsistent experience.</source>
          <target state="translated">Desafortunadamente,la aplicación ahora hará dos solicitudes separadas para la misma información.No sólo la obtención de datos redundantes es costosa en términos de desperdicio de ancho de banda y afecta a la velocidad percibida de la aplicación,sino que es fácil que los dos valores se desincronicen.Usted mismo probablemente ha utilizado una aplicación web en la que la lista de elementos se desincroniza con el contador de una barra de herramientas,lo que lleva a una experiencia frustrante e inconsistente.</target>
        </trans-unit>
        <trans-unit id="435a0121b4b4da7be6794568d5ff9daf201cc903" translate="yes" xml:space="preserve">
          <source>Unit Testing Basics</source>
          <target state="translated">Conceptos básicos de las pruebas de la unidad</target>
        </trans-unit>
        <trans-unit id="55319d93decd49524c6577ad2944aab8499b8def" translate="yes" xml:space="preserve">
          <source>Unit Tests</source>
          <target state="translated">Pruebas de la unidad</target>
        </trans-unit>
        <trans-unit id="93ff14f84e553511a6d925afc2fd312d4a69fdf2" translate="yes" xml:space="preserve">
          <source>Unit testing a Service</source>
          <target state="translated">La unidad que prueba un servicio</target>
        </trans-unit>
        <trans-unit id="e953abafc0e9309d7c5083375c031969ba683421" translate="yes" xml:space="preserve">
          <source>Unit testing controllers is very simple using the unit test helper which is part of the ember-qunit framework.</source>
          <target state="translated">Los controladores de prueba de la unidad son muy simples usando el ayudante de prueba de la unidad que forma parte del marco de la unidad de la brasa.</target>
        </trans-unit>
        <trans-unit id="69c9113ad75da6e23f23a276dff26e75c7de4dc5" translate="yes" xml:space="preserve">
          <source>Unit tests</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b03ebbb65885649ce0fbc7112c728f9a7b47136d" translate="yes" xml:space="preserve">
          <source>Unit tests (as well as container tests) are generally used to test a small piece of code and ensure that it is doing what was intended. Unlike application tests, they are narrow in scope and do not require the Ember application to be running.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f2e8408bfaa4887c87ced8532981f549a2f0ac1" translate="yes" xml:space="preserve">
          <source>Unit tests are generally used to test a small piece of code and ensure that it is doing what was intended. Unlike acceptance tests, they are narrow in scope and do not require the Ember application to be running.</source>
          <target state="translated">Las pruebas de unidad se utilizan generalmente para probar un pequeño trozo de código y asegurar que está haciendo lo que se pretendía.A diferencia de las pruebas de aceptación,son de alcance limitado y no requieren que la aplicación Ember esté funcionando.</target>
        </trans-unit>
        <trans-unit id="477bdac7302f74643108a43b14379442934d16fb" translate="yes" xml:space="preserve">
          <source>Unit tests are often testing methods that call other methods or work with other objects. A stub is a substitute method or object to be used during the test. This isolates a unit test to the actual method under test.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb68db7729e7a12b83a5c5895b39431e1671922d" translate="yes" xml:space="preserve">
          <source>Unit tests are used to test isolated chunks of functionality, or &quot;units&quot;. They can be written against any isolated application logic.</source>
          <target state="translated">Las pruebas de unidad se utilizan para probar trozos aislados de funcionalidad,o &quot;unidades&quot;.Pueden ser escritas contra cualquier lógica de aplicación aislada.</target>
        </trans-unit>
        <trans-unit id="65fdd323176f359323fb786c58eb952cf8a02fd5" translate="yes" xml:space="preserve">
          <source>Unit tests check the &lt;strong&gt;correctness of individual methods and functions&lt;/strong&gt;. Given an input, does the method return the right output? Since unit tests can check code at the method level, they can form the &lt;strong&gt;foundation of your test suite&lt;/strong&gt;. Unit tests are also &lt;strong&gt;extremely fast&lt;/strong&gt; by nature.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="722fe06f105e9e949dd86f88ac62441b0e5583fb" translate="yes" xml:space="preserve">
          <source>Unit tests gets created automatically when you use Ember CLI to create &lt;a href=&quot;https://guides.emberjs.com/models/customizing-adapters/&quot;&gt;adapters&lt;/a&gt;, controllers, initializers, &lt;a href=&quot;https://guides.emberjs.com/models/defining-models/&quot;&gt;models&lt;/a&gt;, &lt;a href=&quot;https://guides.emberjs.com/models/customizing-serializers/&quot;&gt;serializers&lt;/a&gt;, &lt;a href=&quot;https://guides.emberjs.com/services/&quot;&gt;services&lt;/a&gt;, and utilities. We encourage you to read the rest of the documentation to learn writing tests for each.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17909e26819874f7405577d82491e99531963e55" translate="yes" xml:space="preserve">
          <source>Unit tests use the function called &lt;code&gt;this.subject&lt;/code&gt; to instantiate the object to test, and lets the test pass in initial values as arguments. In our case we are passing in our fake map utility object in the first test, and passing a cache object for the second test.</source>
          <target state="translated">Las pruebas unitarias usan la funci&amp;oacute;n llamada &lt;code&gt;this.subject&lt;/code&gt; para instanciar el objeto a probar, y permiten que la prueba pase los valores iniciales como argumentos. En nuestro caso, estamos pasando nuestro objeto de utilidad de mapa falso en la primera prueba y pasando un objeto de cach&amp;eacute; para la segunda prueba.</target>
        </trans-unit>
        <trans-unit id="699a683faaa9485bee8084684b0d1eae07aa0ba1" translate="yes" xml:space="preserve">
          <source>Unknown Properties</source>
          <target state="translated">Propiedades desconocidas</target>
        </trans-unit>
        <trans-unit id="e645e94764f04f4c7f3e561913a7d9a2e676183b" translate="yes" xml:space="preserve">
          <source>Unless you have specific needs for &lt;code&gt;CoreView&lt;/code&gt;, you will use &lt;code&gt;Ember.Component&lt;/code&gt; in your applications.</source>
          <target state="translated">A menos que tenga necesidades espec&amp;iacute;ficas para &lt;code&gt;CoreView&lt;/code&gt; , utilizar&amp;aacute; &lt;code&gt;Ember.Component&lt;/code&gt; en sus aplicaciones.</target>
        </trans-unit>
        <trans-unit id="f1dc9a4536b97fe5b5d22858d040db7f2f7b9e35" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;https://guides.emberjs.com/components/defining-a-component/&quot;&gt;components&lt;/a&gt;, which require a dash in the name to follow the Custom Element spec, helper names can be single or multi-word. If your helper's name is multi-word, it should be dasherized as the examples on this page.</source>
          <target state="translated">A diferencia de los &lt;a href=&quot;https://guides.emberjs.com/components/defining-a-component/&quot;&gt;componentes&lt;/a&gt; , que requieren un gui&amp;oacute;n en el nombre para seguir la especificaci&amp;oacute;n del elemento personalizado, los nombres de ayuda pueden ser de una o varias palabras. Si el nombre de su ayudante es de varias palabras, debe estar dividido como en los ejemplos de esta p&amp;aacute;gina.</target>
        </trans-unit>
        <trans-unit id="0ba71c17b8be5769afabb31b692ab4883feaae70" translate="yes" xml:space="preserve">
          <source>Unlike &lt;code&gt;Ember.Enumerable,&lt;/code&gt; this mixin defines methods specifically for collections that provide index-ordered access to their contents. When you are designing code that needs to accept any kind of Array-like object, you should use these methods instead of Array primitives because these will properly notify observers of changes to the array.</source>
          <target state="translated">A diferencia de &lt;code&gt;Ember.Enumerable,&lt;/code&gt; este mixin define m&amp;eacute;todos espec&amp;iacute;ficamente para colecciones que brindan acceso ordenado por &amp;iacute;ndices a sus contenidos. Cuando dise&amp;ntilde;e un c&amp;oacute;digo que necesite aceptar cualquier tipo de objeto tipo Array, debe utilizar estos m&amp;eacute;todos en lugar de las primitivas de Array porque notificar&amp;aacute;n adecuadamente a los observadores de los cambios en la matriz.</target>
        </trans-unit>
        <trans-unit id="c2346a7015c8d7f54cbe428fcb6f3328b3d12eff" translate="yes" xml:space="preserve">
          <source>Unlike &lt;code&gt;Ember.typeOf&lt;/code&gt; this method returns true even if the passed object is not formally an array but appears to be array-like (i.e. implements &lt;code&gt;Ember.Array&lt;/code&gt;)</source>
          <target state="translated">A diferencia de &lt;code&gt;Ember.typeOf&lt;/code&gt; , este m&amp;eacute;todo devuelve verdadero incluso si el objeto pasado no es formalmente una matriz, pero parece ser similar a una matriz (es decir, implementa &lt;code&gt;Ember.Array&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="48f1b9ff4d1a0458244d8e86c4b05ccfa10f68f1" translate="yes" xml:space="preserve">
          <source>Unlike &lt;code&gt;RSVP.all&lt;/code&gt; or &lt;code&gt;RSVP.hash&lt;/code&gt;, which implement a fail-fast method, but like &lt;code&gt;RSVP.allSettled&lt;/code&gt;, &lt;code&gt;hashSettled&lt;/code&gt; waits until all the constituent promises have returned and then shows you all the results with their states and values/reasons. This is useful if you want to handle multiple promises' failure states together as a set.</source>
          <target state="translated">A diferencia de &lt;code&gt;RSVP.all&lt;/code&gt; o &lt;code&gt;RSVP.hash&lt;/code&gt; , que implementan un m&amp;eacute;todo a prueba de fallas, pero como &lt;code&gt;RSVP.allSettled&lt;/code&gt; , &lt;code&gt;hashSettled&lt;/code&gt; espera hasta que todas las promesas constituyentes hayan regresado y luego le muestra todos los resultados con sus estados y valores / razones. Esto es &amp;uacute;til si desea manejar estados de falla de m&amp;uacute;ltiples promesas juntos como un conjunto.</target>
        </trans-unit>
        <trans-unit id="2a3d689226368801677173ed390db24291389456" translate="yes" xml:space="preserve">
          <source>Unlike &lt;code&gt;all&lt;/code&gt; or &lt;code&gt;hash&lt;/code&gt;, which implement a fail-fast method, but like &lt;code&gt;allSettled&lt;/code&gt;, &lt;code&gt;hashSettled&lt;/code&gt; waits until all the constituent promises have returned and then shows you all the results with their states and values/reasons. This is useful if you want to handle multiple promises' failure states together as a set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dbbd0ee4cec488c0bcd007e3fc3536b828c4409" translate="yes" xml:space="preserve">
          <source>Unlike &lt;code&gt;typeOf&lt;/code&gt; this method returns true even if the passed object is not formally an array but appears to be array-like (i.e. implements &lt;code&gt;Array&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a08498d44947ff6cad133013afcd3e725d914842" translate="yes" xml:space="preserve">
          <source>Unlike attributes, element modifiers do &lt;strong&gt;not&lt;/strong&gt; run on the server-side, because there is no general-purpose and complete way to serialize the results of an element modifier into HTML.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bee6d6d59812dc43ec15a1949e4a9aea2e5d664" translate="yes" xml:space="preserve">
          <source>Unlike callbacks, promises are great composable primitives.</source>
          <target state="translated">A diferencia de las devoluciones de llamada,las promesas son grandes primitivas componibles.</target>
        </trans-unit>
        <trans-unit id="e43318987c768f8fb9f16d1a9218b08aab2bb57f" translate="yes" xml:space="preserve">
          <source>Unlike most other frameworks that include some sort of binding implementation, bindings in Ember.js can be used with any object. That said, bindings are most often used within the Ember framework itself, and for most problems Ember app developers face, computed properties are the appropriate solution.</source>
          <target state="translated">A diferencia de la mayoría de los demás marcos que incluyen algún tipo de aplicación vinculante,las encuadernaciones en Ember.js pueden utilizarse con cualquier objeto.Dicho esto,los bindings se utilizan más a menudo dentro del propio marco de trabajo de Ember,y para la mayoría de los problemas a los que se enfrentan los desarrolladores de aplicaciones de Ember,las propiedades computarizadas son la solución apropiada.</target>
        </trans-unit>
        <trans-unit id="17e1fed215e92f510045ef5c63c8abbeeddb605f" translate="yes" xml:space="preserve">
          <source>Unlike the other route handlers we've made so far, the &lt;code&gt;index&lt;/code&gt; route is special: it does NOT require an entry in the router's mapping. We'll learn more about why the entry isn't required later on when we look at &lt;a href=&quot;../subroutes&quot;&gt;nested routes&lt;/a&gt; in Ember.</source>
          <target state="translated">A diferencia de los otros controladores de ruta que hemos creado hasta ahora, la ruta de &lt;code&gt;index&lt;/code&gt; es especial: NO requiere una entrada en el mapeo del enrutador. Aprenderemos m&amp;aacute;s sobre por qu&amp;eacute; no se requiere la entrada m&amp;aacute;s adelante cuando veamos &lt;a href=&quot;../subroutes&quot;&gt;las rutas anidadas&lt;/a&gt; en Ember.</target>
        </trans-unit>
        <trans-unit id="0a31d24114be4656ec50e863002c0179157848ce" translate="yes" xml:space="preserve">
          <source>Unloads the record from the store. This will cause the record to be destroyed and freed up for garbage collection.</source>
          <target state="translated">Descarga el disco de la tienda.Esto hará que el disco sea destruido y liberado para la recolección de basura.</target>
        </trans-unit>
        <trans-unit id="0dae4316acf45078caf64366600a3d5db302e2df" translate="yes" xml:space="preserve">
          <source>Unloads the record from the store. This will not send a delete request to your server, it just unloads the record from memory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43070cef7aeb427607d411dd1ba9004d00927bf7" translate="yes" xml:space="preserve">
          <source>Unregister a factory.</source>
          <target state="translated">Desregistrar una fábrica.</target>
        </trans-unit>
        <trans-unit id="4f9491f2acb9ac489a58e64c4620334de6474d19" translate="yes" xml:space="preserve">
          <source>Unshift an object to start of array. Works just like &lt;code&gt;unshift()&lt;/code&gt; but it is KVO-compliant.</source>
          <target state="translated">Desplazar un objeto al inicio de la matriz. Funciona igual que &lt;code&gt;unshift()&lt;/code&gt; pero es compatible con KVO.</target>
        </trans-unit>
        <trans-unit id="164f698a644916b960657c8f2ff6769690a513d0" translate="yes" xml:space="preserve">
          <source>Up to this point, we've generated four top level routes.</source>
          <target state="translated">Hasta este punto,hemos generado cuatro rutas de nivel superior.</target>
        </trans-unit>
        <trans-unit id="fb91e24fa52d8d2b32937bf04d843f730319a902" translate="yes" xml:space="preserve">
          <source>Update</source>
          <target state="translated">Update</target>
        </trans-unit>
        <trans-unit id="1cfa49d59018eef26ef97632e877b7882570010a" translate="yes" xml:space="preserve">
          <source>Update &lt;code&gt;postRecord.save()&lt;/code&gt;</source>
          <target state="translated">Actualizar &lt;code&gt;postRecord.save()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ac2e17800a0ab0d112375860107fae65bea51067" translate="yes" xml:space="preserve">
          <source>Update URL with &lt;code&gt;replaceState&lt;/code&gt; instead</source>
          <target state="translated">Actualice la URL con &lt;code&gt;replaceState&lt;/code&gt; en su lugar</target>
        </trans-unit>
        <trans-unit id="283ecf05902b1f4ae28ebde679dcfbd32a70c589" translate="yes" xml:space="preserve">
          <source>Update `postRecord.save()`</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f40768a6e2c45ddd1db6d9752d413302ad8b03c7" translate="yes" xml:space="preserve">
          <source>Update the content of the integration test to the following to fix it:</source>
          <target state="translated">Actualice el contenido de la prueba de integración a lo siguiente para arreglarlo:</target>
        </trans-unit>
        <trans-unit id="f44d15f99a99d55ba65a02fe8182dacce539418d" translate="yes" xml:space="preserve">
          <source>Updates to the property of an attribute binding will result in automatic update of the HTML attribute in the component's HTML output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af48d19b99946eb85b1c250ae52baaf10a9733dd" translate="yes" xml:space="preserve">
          <source>Updates to the property of an attribute binding will result in automatic update of the HTML attribute in the component's rendered HTML representation. &lt;code&gt;attributeBindings&lt;/code&gt; is a concatenated property. See &lt;a href=&quot;https://emberjs.com/api/classes/Ember.Object.html&quot;&gt;Ember.Object&lt;/a&gt; documentation for more information about concatenated properties.</source>
          <target state="translated">Las actualizaciones de la propiedad de un enlace de atributo dar&amp;aacute;n como resultado la actualizaci&amp;oacute;n autom&amp;aacute;tica del atributo HTML en la representaci&amp;oacute;n HTML renderizada del componente. &lt;code&gt;attributeBindings&lt;/code&gt; es una propiedad concatenada. Consulte la documentaci&amp;oacute;n de &lt;a href=&quot;https://emberjs.com/api/classes/Ember.Object.html&quot;&gt;Ember.Object&lt;/a&gt; para obtener m&amp;aacute;s informaci&amp;oacute;n sobre las propiedades concatenadas.</target>
        </trans-unit>
        <trans-unit id="be507a9e83cd3f83b3a85b340f1acf039f989a67" translate="yes" xml:space="preserve">
          <source>Updates to the value of a class name binding will result in automatic update of the HTML &lt;code&gt;class&lt;/code&gt; attribute in the component's rendered HTML representation. If the value becomes &lt;code&gt;false&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt; the class name will be removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85553080c5bd51708efff543f11a80f132dd3bad" translate="yes" xml:space="preserve">
          <source>Updates to the value of a class name binding will result in automatic update of the HTML &lt;code&gt;class&lt;/code&gt; attribute in the component's rendered HTML representation. If the value becomes &lt;code&gt;false&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt; the class name will be removed. Both &lt;code&gt;classNames&lt;/code&gt; and &lt;code&gt;classNameBindings&lt;/code&gt; are concatenated properties. See &lt;a href=&quot;https://emberjs.com/api/classes/Ember.Object.html&quot;&gt;Ember.Object&lt;/a&gt; documentation for more information about concatenated properties.</source>
          <target state="translated">Las actualizaciones del valor de un enlace de nombre de clase dar&amp;aacute;n como resultado la actualizaci&amp;oacute;n autom&amp;aacute;tica del atributo de &lt;code&gt;class&lt;/code&gt; HTML en la representaci&amp;oacute;n HTML renderizada del componente. Si el valor se vuelve &lt;code&gt;false&lt;/code&gt; o &lt;code&gt;undefined&lt;/code&gt; , se eliminar&amp;aacute; el nombre de la clase. Tanto &lt;code&gt;classNames&lt;/code&gt; como &lt;code&gt;classNameBindings&lt;/code&gt; son propiedades concatenadas. Consulte la documentaci&amp;oacute;n de &lt;a href=&quot;https://emberjs.com/api/classes/Ember.Object.html&quot;&gt;Ember.Object&lt;/a&gt; para obtener m&amp;aacute;s informaci&amp;oacute;n sobre las propiedades concatenadas.</target>
        </trans-unit>
        <trans-unit id="1a89fee8955539e6cbec654a32c63f6e50462e63" translate="yes" xml:space="preserve">
          <source>Updating Existing Records</source>
          <target state="translated">Actualización de los registros existentes</target>
        </trans-unit>
        <trans-unit id="6bd9c9b66922bfad86141b602f4fb9dff2ad1b54" translate="yes" xml:space="preserve">
          <source>Updating Lists</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5b09343b2238bb74ea50d37eff3231b6eb0978f" translate="yes" xml:space="preserve">
          <source>Updating Records</source>
          <target state="translated">Actualización de los registros</target>
        </trans-unit>
        <trans-unit id="6092cd6e56ba0e1df831fd6765619573bcc81e1b" translate="yes" xml:space="preserve">
          <source>Updating Tracked Properties</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ac6235a9bbbe7f6e90305851495b8bbe8fb3841" translate="yes" xml:space="preserve">
          <source>Updating component state</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3c251798976c1a4eaea1b25759d885d99218eb3" translate="yes" xml:space="preserve">
          <source>Updating the Model Hook</source>
          <target state="translated">Actualizando el Gancho Modelo</target>
        </trans-unit>
        <trans-unit id="f7084ea284959866b9e5683c0595c9d4d36808f8" translate="yes" xml:space="preserve">
          <source>Upgrading to Octane</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">Usage</target>
        </trans-unit>
        <trans-unit id="9629fc5be7eebf84f66a1a4fe14d7eee29fbc498" translate="yes" xml:space="preserve">
          <source>Usage Example:</source>
          <target state="translated">Ejemplo de uso:</target>
        </trans-unit>
        <trans-unit id="fec43ce445f974147bd0eb223a50147e7fb7202d" translate="yes" xml:space="preserve">
          <source>Usage example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b00b4ece5adc635acb7f5dc011be482040b5b456" translate="yes" xml:space="preserve">
          <source>Usage with Native Classes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5babfd7f28c97261be5d747a98ff927af4a35448" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;ds.jsonserializer&quot;&gt;DS.JSONSerializer&lt;/a&gt; to get the JSON representation of a record.</source>
          <target state="translated">Utilice &lt;a href=&quot;ds.jsonserializer&quot;&gt;DS.JSONSerializer&lt;/a&gt; para obtener la representaci&amp;oacute;n JSON de un registro.</target>
        </trans-unit>
        <trans-unit id="79babe4a58b3c5377a30d47b99f3a166cc374c1c" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;http://emberjs.com/api/data/classes/DS.Store.html#method_findAll&quot;&gt;&lt;code&gt;store.findAll()&lt;/code&gt;&lt;/a&gt; to retrieve all of the records for a given type:</source>
          <target state="translated">Utilice &lt;a href=&quot;http://emberjs.com/api/data/classes/DS.Store.html#method_findAll&quot;&gt; &lt;code&gt;store.findAll()&lt;/code&gt; &lt;/a&gt; para recuperar todos los registros de un tipo determinado:</target>
        </trans-unit>
        <trans-unit id="1eeddfe464eb2a59d11d65139e6a152e23204fe3" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;http://emberjs.com/api/data/classes/DS.Store.html#method_findRecord&quot;&gt;&lt;code&gt;store.findRecord()&lt;/code&gt;&lt;/a&gt; to retrieve a record by its type and ID. This will return a promise that fulfills with the requested record:</source>
          <target state="translated">Utilice &lt;a href=&quot;http://emberjs.com/api/data/classes/DS.Store.html#method_findRecord&quot;&gt; &lt;code&gt;store.findRecord()&lt;/code&gt; &lt;/a&gt; para recuperar un registro por su tipo e ID. Esto devolver&amp;aacute; una promesa que cumple con el registro solicitado:</target>
        </trans-unit>
        <trans-unit id="cdebe1f775b156e00e0b7192c360b92d672f22ea" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;http://emberjs.com/api/data/classes/DS.Store.html#method_peekAll&quot;&gt;&lt;code&gt;store.peekAll()&lt;/code&gt;&lt;/a&gt; to retrieve all of the records for a given type that are already loaded into the store, without making a network request:</source>
          <target state="translated">Utilice &lt;a href=&quot;http://emberjs.com/api/data/classes/DS.Store.html#method_peekAll&quot;&gt; &lt;code&gt;store.peekAll()&lt;/code&gt; &lt;/a&gt; para recuperar todos los registros de un tipo determinado que ya est&amp;aacute;n cargados en la tienda, sin realizar una solicitud de red:</target>
        </trans-unit>
        <trans-unit id="b6be3a24df2cc3843f7fe4f0b083c1f949820c19" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;http://emberjs.com/api/data/classes/DS.Store.html#method_peekRecord&quot;&gt;&lt;code&gt;store.peekRecord()&lt;/code&gt;&lt;/a&gt; to retrieve a record by its type and ID, without making a network request. This will return the record only if it is already present in the store:</source>
          <target state="translated">Utilice &lt;a href=&quot;http://emberjs.com/api/data/classes/DS.Store.html#method_peekRecord&quot;&gt; &lt;code&gt;store.peekRecord()&lt;/code&gt; &lt;/a&gt; para recuperar un registro por su tipo e ID, sin realizar una solicitud de red. Esto devolver&amp;aacute; el registro solo si ya est&amp;aacute; presente en la tienda:</target>
        </trans-unit>
        <trans-unit id="a4859223f768210296b47b666b66691fc9711573" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;https://api.emberjs.com/ember-data/release/classes/Store/methods#findAll&quot;&gt;&lt;code&gt;store.findAll()&lt;/code&gt;&lt;/a&gt; to retrieve all of the records for a given type:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3783ab5084026a76399c8e4742116f09328d9c1d" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;https://api.emberjs.com/ember-data/release/classes/Store/methods#findRecord&quot;&gt;&lt;code&gt;store.findRecord()&lt;/code&gt;&lt;/a&gt; to retrieve a record by its type and ID. This will return a promise that fulfills with the requested record:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47db5e9551640021722a698d193fe4986ca61029" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;https://api.emberjs.com/ember-data/release/classes/Store/methods#peekAll&quot;&gt;&lt;code&gt;store.peekAll()&lt;/code&gt;&lt;/a&gt; to retrieve all of the records for a given type that are already loaded into the store, without making a network request:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="845461ca687dc3a79feada7430e1ec683234bbd9" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;https://api.emberjs.com/ember-data/release/classes/Store/methods#peekRecord&quot;&gt;&lt;code&gt;store.peekRecord()&lt;/code&gt;&lt;/a&gt; to retrieve a record by its type and ID, without making a network request. This will return the record only if it is already present in the store:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21e8bdf95a6108d0bc0eeba659302eb1aae7b857" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;jsonserializer&quot;&gt;JSONSerializer&lt;/a&gt; to get the JSON representation of a record.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="392764678d8366e741ee8ecc091620344bb6b590" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;templates#toc_named-arguments&quot;&gt;Named Arguments&lt;/a&gt; and &lt;code&gt;this&lt;/code&gt; in your templates, by running the &lt;a href=&quot;https://github.com/ember-codemods/ember-no-implicit-this-codemod&quot;&gt;&lt;code&gt;ember-no-implicit-this-codemod&lt;/code&gt;&lt;/a&gt;. Component behavior should not change.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af15101421b39bbd5b9e6e5fa1102dcad5bbaa91" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;class&lt;/code&gt; when defining a class, and &lt;code&gt;class ... extends&lt;/code&gt; when extending a class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1b3cd7d64a31d9f368592138fce8b354df82dbd" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;create&lt;/code&gt; instead of &lt;code&gt;new&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02022d360c80799822eb1c41ac85caa35c731f30" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;init&lt;/code&gt; instead of &lt;code&gt;constructor&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30a8de43ef5f7fad2338e36c8c2b12cc6db80fae" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;reopenClass&lt;/code&gt; to add static elements to the constructor:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00e000124add0ce9217af1c895a1ba1b021e403c" translate="yes" xml:space="preserve">
          <source>Use a custom (type) serializer for the post model to configure embedded author</source>
          <target state="translated">Usar un serializador personalizado (tipo)para el modelo de poste para configurar el autor incrustado</target>
        </trans-unit>
        <trans-unit id="2822b36d55ca0f281fdd5caf6ce712c478b4c480" translate="yes" xml:space="preserve">
          <source>Use a custom (type) serializer for the post model to configure embedded comments</source>
          <target state="translated">Usar un serializador personalizado (tipo)para el modelo de correo para configurar los comentarios incrustados</target>
        </trans-unit>
        <trans-unit id="18a2f23148493346b4dfeba036baa75787a6bab3" translate="yes" xml:space="preserve">
          <source>Use of Observable Methods and Properties</source>
          <target state="translated">Uso de métodos y propiedades observables</target>
        </trans-unit>
        <trans-unit id="aae16ef21556478e52876efe7f2def61a654dbec" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;https://api.emberjs.com/ember/release/classes/Ember.Templates.helpers/methods#debugger&quot;&gt;&lt;code&gt;{{debugger}}&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://api.emberjs.com/ember/release/classes/Ember.Templates.helpers/methods#log&quot;&gt;&lt;code&gt;{{log}}&lt;/code&gt;&lt;/a&gt; helper to inspect the &lt;code&gt;{{@model}}&lt;/code&gt; from the template</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d96d62219181a82960b50004a708bec5880356f9" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;https://api.emberjs.com/ember/release/functions/@ember%2Fobject/create&quot;&gt;&lt;code&gt;create&lt;/code&gt;&lt;/a&gt; static method to create instances of the class:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2623def3eedab83b13cf09d5b748b498a25cbb89" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;https://api.emberjs.com/ember/release/functions/@ember%2Fobject/extend&quot;&gt;&lt;code&gt;extend&lt;/code&gt;&lt;/a&gt; static method to define a class, with &lt;a href=&quot;https://api.emberjs.com/ember/release/classes/EmberObject&quot;&gt;&lt;code&gt;EmberObject&lt;/code&gt;&lt;/a&gt; as the root base class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="130f409f7044687437389390fa8c19bce475ecad" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;https://github.com/ember-codemods/ember-native-class-codemod&quot;&gt;&lt;code&gt;ember-native-class-codemod&lt;/code&gt;&lt;/a&gt; on your non-component JavaScript files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7694a895c2720d34384666722189e92ffb017e1" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;_super()&lt;/code&gt; function to call the super method with the same name as the current method that is executing:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76eef6568923fe3c5ee9d20276bdbfd3bdb13882" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;init&lt;/code&gt; method instead of the &lt;code&gt;constructor&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e397b43dbbe9978bfd8289900d9094ad56d0665" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;new&lt;/code&gt; keyword to create instances of the class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9896a0dc24fd0d039379529f13a88d43f6189a2" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;super&lt;/code&gt; keyword</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3fd739fa9c9591a0117b09c96aea594a051f255" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;{{array}}&lt;/code&gt; helper to create an array to pass as an option to your components.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97fdbc8ed53b640b746052deb57d44ffe6c429d2" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;{{hash}}&lt;/code&gt; helper to create a hash to pass as an option to your components. This is specially useful for contextual components where you can just yield a hash:</source>
          <target state="translated">Utilice el ayudante &lt;code&gt;{{hash}}&lt;/code&gt; para crear un hash y pasarlo como una opci&amp;oacute;n a sus componentes. Esto es especialmente &amp;uacute;til para componentes contextuales en los que puede generar un hash:</target>
        </trans-unit>
        <trans-unit id="8e7ccd90e8cfeff420ef08923c36a50e99640cd2" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;{{with}}&lt;/code&gt; helper when you want to alias a property to a new name. This is helpful for semantic clarity as it allows you to retain default scope or to reference a property from another &lt;code&gt;{{with}}&lt;/code&gt; block.</source>
          <target state="translated">Utilice el ayudante &lt;code&gt;{{with}}&lt;/code&gt; cuando desee asignar un alias a una propiedad con un nuevo nombre. Esto es &amp;uacute;til para la claridad sem&amp;aacute;ntica ya que le permite retener el alcance predeterminado o hacer referencia a una propiedad de otro bloque &lt;code&gt;{{with}}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b101cb1e03e8a43550840a8c7fd20af20f00b55b" translate="yes" xml:space="preserve">
          <source>Use the tips described in &lt;a href=&quot;../object-inspector&quot;&gt;Object Inspector&lt;/a&gt; to inspect models and controllers. See below for templates and components.</source>
          <target state="translated">Utilice los consejos descritos en el &lt;a href=&quot;../object-inspector&quot;&gt;Inspector de objetos&lt;/a&gt; para inspeccionar modelos y controladores. Consulte a continuaci&amp;oacute;n las plantillas y los componentes.</target>
        </trans-unit>
        <trans-unit id="7830b0609b9584de5bbebc9de314d759ef55371b" translate="yes" xml:space="preserve">
          <source>Use this instead of the built-in &lt;code&gt;typeof&lt;/code&gt; to get the type of an item. It will return the same result across all browsers and includes a bit more detail. Here is what will be returned:</source>
          <target state="translated">Use esto en lugar del &lt;code&gt;typeof&lt;/code&gt; incorporado para obtener el tipo de un elemento. Devolver&amp;aacute; el mismo resultado en todos los navegadores e incluye un poco m&amp;aacute;s de detalle. Esto es lo que se devolver&amp;aacute;:</target>
        </trans-unit>
        <trans-unit id="c645581e547e78cc873442313071c5e0586bcb0f" translate="yes" xml:space="preserve">
          <source>Use this to defer readiness until some condition is true.</source>
          <target state="translated">Usa esto para aplazar la preparación hasta que alguna condición sea cierta.</target>
        </trans-unit>
        <trans-unit id="48121977e8f8997c6672074e5371d5969d40ddbf" translate="yes" xml:space="preserve">
          <source>Use with &lt;code&gt;Component&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="306cbcab821af23dfb473fbf6d987c353799e01a" translate="yes" xml:space="preserve">
          <source>Use with Ember.Component</source>
          <target state="translated">Usar con Ember.Component</target>
        </trans-unit>
        <trans-unit id="542d6ad86b7eee775bf26a301d712477fe03a84b" translate="yes" xml:space="preserve">
          <source>Used this way, the &lt;code&gt;{{action}}&lt;/code&gt; helper provides a useful shortcut for registering an HTML element in a template for a single DOM event and forwarding that interaction to the template's context (controller or component). If the context of a template is a controller, actions used this way will bubble to routes when the controller does not implement the specified action. Once an action hits a route, it will bubble through the route hierarchy.</source>
          <target state="translated">Usado de esta manera, el asistente de &lt;code&gt;{{action}}&lt;/code&gt; proporciona un atajo &amp;uacute;til para registrar un elemento HTML en una plantilla para un solo evento DOM y reenviar esa interacci&amp;oacute;n al contexto de la plantilla (controlador o componente). Si el contexto de una plantilla es un controlador, las acciones utilizadas de esta manera aparecer&amp;aacute;n en las rutas cuando el controlador no implemente la acci&amp;oacute;n especificada. Una vez que una acci&amp;oacute;n llega a una ruta, pasar&amp;aacute; por la jerarqu&amp;iacute;a de rutas.</target>
        </trans-unit>
        <trans-unit id="4c7c0d10b10d1e9407fe7fd091a42e7426902b37" translate="yes" xml:space="preserve">
          <source>Used to allow ember-testing to communicate with a specific testing framework.</source>
          <target state="translated">Se utiliza para permitir que la prueba de la brasa se comunique con un marco de pruebas específico.</target>
        </trans-unit>
        <trans-unit id="55d2ee6134860f5a3842aa0334e35e2b668dc821" translate="yes" xml:space="preserve">
          <source>Used to determine if the array contains the passed object. Returns &lt;code&gt;true&lt;/code&gt; if found, &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df5646ff626d5a83284889dd2548a84aebedbe9d" translate="yes" xml:space="preserve">
          <source>Used to determine the passed object's first occurrence in the array. Returns the index if found, -1 if no match is found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2522c403a71c0acbdd066953587aaea739ffa591" translate="yes" xml:space="preserve">
          <source>Used to determine when this &lt;code&gt;LinkComponent&lt;/code&gt; is active.</source>
          <target state="translated">Se utiliza para determinar cu&amp;aacute;ndo est&amp;aacute; activo este &lt;code&gt;LinkComponent&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e06eb9fc01574fd7225f291066780d472903fee4" translate="yes" xml:space="preserve">
          <source>Used to get the latest version of all of the records in this array from the adapter.</source>
          <target state="translated">Se utiliza para obtener la última versión de todos los registros de este arreglo desde el adaptador.</target>
        </trans-unit>
        <trans-unit id="b625a63d0e499059d2ca14c82e5df7615a107612" translate="yes" xml:space="preserve">
          <source>Used to register callbacks to be fired whenever &lt;code&gt;App.injectTestHelpers&lt;/code&gt; is called.</source>
          <target state="translated">Se utiliza para registrar devoluciones de llamada que se &lt;code&gt;App.injectTestHelpers&lt;/code&gt; cada vez que se llame a App.injectTestHelpers .</target>
        </trans-unit>
        <trans-unit id="cb7f2badb8e4d94f6c7118903ad2f323f4cc77e3" translate="yes" xml:space="preserve">
          <source>User/session authentication.</source>
          <target state="translated">Autenticación de usuario/sesión.</target>
        </trans-unit>
        <trans-unit id="fed8214c42275ba9c04a1e30208425f4358807a9" translate="yes" xml:space="preserve">
          <source>Users may explicitly declare a record should/should not be background reloaded by passing &lt;code&gt;backgroundReload: true&lt;/code&gt; or &lt;code&gt;backgroundReload: false&lt;/code&gt; as an option to the request respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3973a9700b0b87a3d0ce2660254fee68a542cb75" translate="yes" xml:space="preserve">
          <source>Users may explicitly declare that this background request should/should not occur by passing &lt;code&gt;backgroundReload: true&lt;/code&gt; or &lt;code&gt;backgroundReload: false&lt;/code&gt; as an option to the request respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16bc4c4d7d89c3b988308786cd8619cfd3a339a8" translate="yes" xml:space="preserve">
          <source>Uses:</source>
          <target state="translated">Uses:</target>
        </trans-unit>
        <trans-unit id="9b8970c914983383f99e53ae30acfba6c7f27456" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;HashLocation&lt;/code&gt; results in URLs with a &lt;code&gt;#&lt;/code&gt; (hash sign) separating the server side URL portion of the URL from the portion that is used by Ember.</source>
          <target state="translated">El uso de &lt;code&gt;HashLocation&lt;/code&gt; da como resultado URL con un &lt;code&gt;#&lt;/code&gt; (signo de almohadilla) que separa la parte de la URL del lado del servidor de la URL de la parte que usa Ember.</target>
        </trans-unit>
        <trans-unit id="2e374626d7a0702cc9f9268ad2fdcfaaf4d3ebb8" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;HistoryLocation&lt;/code&gt; results in URLs that are indistinguishable from a standard URL. This relies upon the browser's &lt;code&gt;history&lt;/code&gt; API.</source>
          <target state="translated">El uso de &lt;code&gt;HistoryLocation&lt;/code&gt; da como resultado URL que no se pueden distinguir de una URL est&amp;aacute;ndar. Esto se basa en la API de &lt;code&gt;history&lt;/code&gt; del navegador .</target>
        </trans-unit>
        <trans-unit id="12d381ddb9c8137de1d2923feb2b3a6160cab716" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;HistoryLocation&lt;/code&gt; will also result in location states being recorded by the browser &lt;code&gt;history&lt;/code&gt; API with the following schema:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b274154b8cd2e420cefe87ab03d519a29e9efd6b" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;NoneLocation&lt;/code&gt; causes Ember to not store the applications URL state in the actual URL. This is generally used for testing purposes, and is one of the changes made when calling &lt;code&gt;App.setupForTesting()&lt;/code&gt;.</source>
          <target state="translated">El uso de &lt;code&gt;NoneLocation&lt;/code&gt; hace que Ember no almacene el estado de la URL de las aplicaciones en la URL real. Esto generalmente se usa con fines de prueba y es uno de los cambios realizados al llamar a &lt;code&gt;App.setupForTesting()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="60d8d1f0299627d742dc7cc43fee81d677009b4e" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;denodeify&lt;/code&gt; makes it easier to compose asynchronous operations instead of using callbacks. For example, instead of:</source>
          <target state="translated">El uso de &lt;code&gt;denodeify&lt;/code&gt; facilita la composici&amp;oacute;n de operaciones asincr&amp;oacute;nicas en lugar de utilizar devoluciones de llamada. Por ejemplo, en lugar de:</target>
        </trans-unit>
        <trans-unit id="f5822b7870a8d5523c5615715941fb03bf4b2289" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;get()&lt;/code&gt; and &lt;code&gt;set()&lt;/code&gt;</source>
          <target state="translated">Usando &lt;code&gt;get()&lt;/code&gt; y &lt;code&gt;set()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a807017af45e47826656353c74a452531495803d" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;super&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2b903f4ec447c2f19c335196b01fe88d084b735" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;{{on}}&lt;/code&gt; instead of the actions helper in templates</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8109d0339990f1783cd0634fdca5b574393894cb" translate="yes" xml:space="preserve">
          <source>Using Block Params</source>
          <target state="translated">Usando Parámetros de Bloque</target>
        </trans-unit>
        <trans-unit id="6790aa0871b5a22aba4914c2aca702feae6e26fa" translate="yes" xml:space="preserve">
          <source>Using Blocks</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74f837326f24cf10cc05302b64d55360b8652855" translate="yes" xml:space="preserve">
          <source>Using BuildURLMixin</source>
          <target state="translated">Usando BuildURLMixin</target>
        </trans-unit>
        <trans-unit id="e8517af265fabf196c410cce740af7a7b6bec59d" translate="yes" xml:space="preserve">
          <source>Using Embedded Records</source>
          <target state="translated">Usando los registros incrustados</target>
        </trans-unit>
        <trans-unit id="165fcfc43ecaff89929b038e0b256dd0b70e6794" translate="yes" xml:space="preserve">
          <source>Using Ember Data</source>
          <target state="translated">Usando los datos de Ember</target>
        </trans-unit>
        <trans-unit id="fb2881f07ad66266580a01fb816b0dce10a1a576" translate="yes" xml:space="preserve">
          <source>Using Ember Enumeration with Other Libraries</source>
          <target state="translated">Uso de la Enumeración Ember con otras bibliotecas</target>
        </trans-unit>
        <trans-unit id="32288de7b5b629b3ca02d918cfe820a4ecaf3608" translate="yes" xml:space="preserve">
          <source>Using Ember helpers</source>
          <target state="translated">Usando los ayudantes de Ember</target>
        </trans-unit>
        <trans-unit id="b0f12819e1b49d9c8c49a88f3c0717d94a82974f" translate="yes" xml:space="preserve">
          <source>Using a Serializer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca7a4602a2a74d46f96031f6b4efa287c3f5c2c8" translate="yes" xml:space="preserve">
          <source>Using a helper to get a property dynamically</source>
          <target state="translated">Usar un ayudante para conseguir una propiedad de forma dinámica</target>
        </trans-unit>
        <trans-unit id="9059eac12c500c79a5a3d1134418440b0c07e282" translate="yes" xml:space="preserve">
          <source>Using a string instead of an array allows for an arbitrary number of parameters:</source>
          <target state="translated">El uso de una cadena en lugar de una matriz permite un número arbitrario de parámetros:</target>
        </trans-unit>
        <trans-unit id="28caefd8a232351fe54aff62842c8eb333074b44" translate="yes" xml:space="preserve">
          <source>Using an Adapter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e7f18de2a8e24c22728aa51e8b3f677f7daf728" translate="yes" xml:space="preserve">
          <source>Using an Application Instance Within an Instance Initializer</source>
          <target state="translated">Uso de una instancia de aplicación dentro de un iniciador de instancia</target>
        </trans-unit>
        <trans-unit id="34b9681fe55a7ecfb5a0c7ea34a9b1845ae5fc03" translate="yes" xml:space="preserve">
          <source>Using an identity map is important because it ensures that changes you make in one part of your UI are propagated to other parts of the UI. It also means that you don't have to manually keep records in sync&amp;mdash;you can ask for a record by ID and not have to worry about whether other parts of your application have already asked for and loaded it.</source>
          <target state="translated">El uso de un mapa de identidad es importante porque garantiza que los cambios que realice en una parte de su IU se propaguen a otras partes de la IU. Tambi&amp;eacute;n significa que no tiene que mantener los registros sincronizados manualmente; puede solicitar un registro por ID y no tener que preocuparse por si otras partes de su aplicaci&amp;oacute;n ya lo han solicitado y cargado.</target>
        </trans-unit>
        <trans-unit id="07ce6f1c64ca461dcf2e1ecf7c141612e2c8b87b" translate="yes" xml:space="preserve">
          <source>Using angle bracket invocation, this looks like:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fad29eae11c2c19b66190933f6cc057fc210083" translate="yes" xml:space="preserve">
          <source>Using jQuery to simulate user click events might lead to unexpected test results as the action can potentially be called twice.</source>
          <target state="translated">El uso de jQuery para simular los eventos de clic del usuario podría llevar a resultados inesperados de la prueba ya que la acción puede ser potencialmente llamada dos veces.</target>
        </trans-unit>
        <trans-unit id="83b0855b5b2fdec20f88550a7559cc5f3fbd42a0" translate="yes" xml:space="preserve">
          <source>Using link-to as an inline component</source>
          <target state="translated">Usando el enlace como un componente en línea</target>
        </trans-unit>
        <trans-unit id="6b21844246a5e746bf6603cfe1437e125a8c0ffa" translate="yes" xml:space="preserve">
          <source>Using named arguments, we could make our template a lot clearer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3361a59105672115887409f50dc1f334cdbc7e8" translate="yes" xml:space="preserve">
          <source>Using native classes, and switching back to the old Ember Object model is fully supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89489b3c821f9036ebeead0732861e05bc042122" translate="yes" xml:space="preserve">
          <source>Using new features</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6514ea0b7a4031dd4cfdf0f43db752921a2b16e5" translate="yes" xml:space="preserve">
          <source>Using the &lt;a href=&quot;https://api.emberjs.com/ember/release/classes/Ember.Templates.helpers/methods#array&quot;&gt;&lt;code&gt;{{array}}&lt;/code&gt;&lt;/a&gt; helper, you can pass arrays directly from the template as an argument to your components.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7b09c136d923d47d3169d52132488fce4871697" translate="yes" xml:space="preserve">
          <source>Using the &lt;a href=&quot;https://api.emberjs.com/ember/release/classes/Ember.Templates.helpers/methods#hash&quot;&gt;&lt;code&gt;{{hash}}&lt;/code&gt;&lt;/a&gt; helper, you can pass objects directly from the template as an argument to your components.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dfc559dfffe991176278a255237452049d26387" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;concatenatedProperties&lt;/code&gt; property, we can tell Ember to mix the content of the properties.</source>
          <target state="translated">Usando la propiedad &lt;code&gt;concatenatedProperties&lt;/code&gt; , podemos decirle a Ember que mezcle el contenido de las propiedades.</target>
        </trans-unit>
        <trans-unit id="a8441b31a8ac6de25541ff52dececd458a113c5a" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;did-insert&lt;/code&gt; modifier works well for one-off cases, but if you want to pull this logic into reusable functionality that you can use throughout your app, you can make your &lt;em&gt;own&lt;/em&gt; modifier.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc052a6c684d0a200b80b2590fd8a6190ba4ab89" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;model&lt;/code&gt; hook</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="016843e89fab219d5ff8dfd7056e0e1c600484ca" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;value&lt;/code&gt; option modifies that behavior by extracting that property from the event object:</source>
          <target state="translated">El uso de la opci&amp;oacute;n de &lt;code&gt;value&lt;/code&gt; modifica ese comportamiento al extraer esa propiedad del objeto de evento:</target>
        </trans-unit>
        <trans-unit id="81f782cd38bd4d2134d355c024bfa8805f72b089" translate="yes" xml:space="preserve">
          <source>Using the Inspector adds a delay to your rendering, so the durations you see are not an accurate representation of the speed of your production apps. Use these times to compare durations and debug rendering bottlenecks, but not as a way to accurately measure rendering times.</source>
          <target state="translated">El uso del Inspector añade un retraso a su renderización,por lo que las duraciones que ve no son una representación exacta de la velocidad de sus aplicaciones de producción.Usa estos tiempos para comparar las duraciones y depurar los cuellos de botella de la renderización,pero no como una forma de medir con precisión los tiempos de renderización.</target>
        </trans-unit>
        <trans-unit id="74184cac3d00b39dad0d578fed89481eadcba9cb" translate="yes" xml:space="preserve">
          <source>Using the Inspector with JS Bin</source>
          <target state="translated">Usando el Inspector con JS Bin</target>
        </trans-unit>
        <trans-unit id="efa1a79a6306766f409c4bca723bf29d0eb2184f" translate="yes" xml:space="preserve">
          <source>Using the block form of this helper is similar to using the block form of a component. Given the following application template:</source>
          <target state="translated">El uso de la forma de bloque de este ayudante es similar al uso de la forma de bloque de un componente.Dada la siguiente plantilla de aplicación:</target>
        </trans-unit>
        <trans-unit id="391f67adbcc74616743bc53de0dfefcb12d91038" translate="yes" xml:space="preserve">
          <source>Using the pencil icon on the top-right of each guide page</source>
          <target state="translated">Usando el icono del lápiz en la parte superior derecha de cada página de la guía</target>
        </trans-unit>
        <trans-unit id="c04c131609186adfe1bc7ccc394a0ad9c1f75084" translate="yes" xml:space="preserve">
          <source>Using the same process we did for our about and contact pages, we will first generate a new route called &lt;code&gt;index&lt;/code&gt;.</source>
          <target state="translated">Usando el mismo proceso que hicimos para nuestras p&amp;aacute;ginas de contacto y acerca de, primero generaremos una nueva ruta llamada &lt;code&gt;index&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7440a853c106707a120cc166daeabd6069ac7294" translate="yes" xml:space="preserve">
          <source>Usually the response will be empty, but you may include additional updates in the response. The response will be fed to the associated serializer's &lt;code&gt;normalizeResponse&lt;/code&gt; method with the &lt;code&gt;requestType&lt;/code&gt; set to &lt;code&gt;deleteRecord&lt;/code&gt;, which should return a &lt;code&gt;JSON:API&lt;/code&gt; document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76df093ba11570d1d43808629350f8343fd79f73" translate="yes" xml:space="preserve">
          <source>Usually you will not need the value or revision parameters at the end. In this case, it is common to write observer methods that take only a sender and key value as parameters or, if you aren't interested in any of these values, to write an observer that has no parameters at all.</source>
          <target state="translated">Por lo general,no necesitará el valor o los parámetros de revisión al final.En este caso,es común escribir métodos de observación que toman sólo un remitente y un valor clave como parámetros o,si no le interesa ninguno de estos valores,escribir un observador que no tiene ningún parámetro.</target>
        </trans-unit>
        <trans-unit id="c82b6bdbc274f53f32f9ce798b9cacbb11fe43b3" translate="yes" xml:space="preserve">
          <source>Utility functions which can be imported and used in multiple classes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b33892fbddeffc3368077b4904ad0b3d562a7312" translate="yes" xml:space="preserve">
          <source>VERSION</source>
          <target state="translated">VERSION</target>
        </trans-unit>
        <trans-unit id="c88dde9be6de65aa9f6a4053123062cf461174e1" translate="yes" xml:space="preserve">
          <source>VERSIONpublic</source>
          <target state="translated">VERSIONpublic</target>
        </trans-unit>
        <trans-unit id="72661fddf00221bbd8be22e1f6b3314d366e3aaf" translate="yes" xml:space="preserve">
          <source>Value to test</source>
          <target state="translated">Valor a probar</target>
        </trans-unit>
        <trans-unit id="2a2eb4b0d611b447805fded2ec383687ba6268e8" translate="yes" xml:space="preserve">
          <source>Verifies that a value is &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt;, an empty string, or an empty array.</source>
          <target state="translated">Verifica que un valor sea &lt;code&gt;null&lt;/code&gt; o &lt;code&gt;undefined&lt;/code&gt; , una cadena vac&amp;iacute;a o una matriz vac&amp;iacute;a.</target>
        </trans-unit>
        <trans-unit id="7bf5be677a008f785ff4bef5b2686070101bd076" translate="yes" xml:space="preserve">
          <source>Verify that a certain expectation is met, or throw a exception otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40eefdc490f84d2d7d51132947e203d320fc75e7" translate="yes" xml:space="preserve">
          <source>Very often, batching similar work has benefits. Web browsers do something quite similar by batching changes to the DOM.</source>
          <target state="translated">Muy a menudo,la agrupación de trabajos similares tiene beneficios.Los navegadores web hacen algo bastante similar agrupando los cambios en el DOM.</target>
        </trans-unit>
        <trans-unit id="d356352bbabea4b8461ad53f2b6e5047c3a92bb4" translate="yes" xml:space="preserve">
          <source>Via Bookmarklet</source>
          <target state="translated">A través de Bookmarklet</target>
        </trans-unit>
        <trans-unit id="191609c3bfb4b60d2e752147db86c5085d463647" translate="yes" xml:space="preserve">
          <source>Vice-versa, computed properties used in native getters will autotrack and cause the getter to update correctly:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f75e28a09edb173079d6821dcac995b9d3fa468" translate="yes" xml:space="preserve">
          <source>View all registered templates</source>
          <target state="translated">Ver todas las plantillas registradas</target>
        </trans-unit>
        <trans-unit id="fed11cb30e531fe5e8a975933cbf81d152f07822" translate="yes" xml:space="preserve">
          <source>ViewMixin</source>
          <target state="translated">ViewMixin</target>
        </trans-unit>
        <trans-unit id="e0b53d31dd0d08c5d637bdbcfd99da245e929f76" translate="yes" xml:space="preserve">
          <source>ViewMixin.$()</source>
          <target state="translated">ViewMixin.$()</target>
        </trans-unit>
        <trans-unit id="6e319bb0cbbf9bda646e8734599d271812fbe1c8" translate="yes" xml:space="preserve">
          <source>Viewing Objects</source>
          <target state="translated">Viendo los objetos</target>
        </trans-unit>
        <trans-unit id="ddbd58eaa27448b7a8896aa4d192125c461285ac" translate="yes" xml:space="preserve">
          <source>Viewing the Current Route</source>
          <target state="translated">Ver la ruta actual...</target>
        </trans-unit>
        <trans-unit id="e22d9da12b10d6e11d609d7f966b50128d1e7d62" translate="yes" xml:space="preserve">
          <source>Views / Templates</source>
          <target state="translated">Vistas/Plantillas</target>
        </trans-unit>
        <trans-unit id="a78ad277616170813560c5fab7aabae8ac9cfb23" translate="yes" xml:space="preserve">
          <source>Vim</source>
          <target state="translated">Vim</target>
        </trans-unit>
        <trans-unit id="3c2ff4664e6df2af21fbcdce20e8aeceafa0f794" translate="yes" xml:space="preserve">
          <source>Vim is a highly configurable text editor built to make creating and changing any kind of text very efficient. It is included as &quot;vi&quot; with most UNIX systems and with Apple OS X.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cab0d7e1c96c3ea19c16733af4fdea5420773df9" translate="yes" xml:space="preserve">
          <source>Virtual DOM</source>
          <target state="translated">DOM virtual</target>
        </trans-unit>
        <trans-unit id="a465424577f9d8a6535a1629848bbf0b98d3c16e" translate="yes" xml:space="preserve">
          <source>Visit &lt;code&gt;chrome://extensions&lt;/code&gt;, then click on &lt;code&gt;Options&lt;/code&gt;.</source>
          <target state="translated">Visite &lt;code&gt;chrome://extensions&lt;/code&gt; , luego haga clic en &lt;code&gt;Options&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c3935bcb4dc9aa73ef69d15d8fca3aca079699e2" translate="yes" xml:space="preserve">
          <source>Visit &lt;code&gt;http://localhost:4200/tests&lt;/code&gt; in your browser</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e27c0f23c9732cbd86ef5de81e90796e9f8537ab" translate="yes" xml:space="preserve">
          <source>Visit each page of your app and refresh. Does it still work as expected? If not, you may need to refactor where your app makes data requests or use query params to track state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22c950d9edbfed65c9f96562f33f6915d0dc933e" translate="yes" xml:space="preserve">
          <source>Visit the Add-on page on the &lt;a href=&quot;https://addons.mozilla.org/en-US/firefox/addon/ember-inspector/&quot;&gt;Mozilla Add-ons site&lt;/a&gt;.</source>
          <target state="translated">Visite la p&amp;aacute;gina &lt;a href=&quot;https://addons.mozilla.org/en-US/firefox/addon/ember-inspector/&quot;&gt;de complementos en el sitio de complementos de Mozilla&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="36e79518d0364a56d61df135d558d8f6663cb025" translate="yes" xml:space="preserve">
          <source>Visit the Add-on page on the &lt;a href=&quot;https://addons.mozilla.org/en-US/firefox/addon/ember-inspector/&quot;&gt;Mozilla Addons site&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3678db269e3fe76460953e9c72646a1f16d3cc77" translate="yes" xml:space="preserve">
          <source>Visits the given route and returns a promise that fulfills when all resulting async behavior is complete.</source>
          <target state="translated">Visita la ruta dada y devuelve una promesa que se cumple cuando todo el comportamiento de asincronía resultante está completo.</target>
        </trans-unit>
        <trans-unit id="423f1f3d80c4d824ca917e13649a5c584a13ec87" translate="yes" xml:space="preserve">
          <source>Visual Studio Code</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e448bacd0d7e08e1b986c6f41b3406d4e0b0214" translate="yes" xml:space="preserve">
          <source>Visual Studio Code is a code editor optimized for building and debugging modern web applications. Visual Studio Code is one of the most popular text editors among Ember developers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24b60821ac7f3fed786bd94a8d7c617d56a8df97" translate="yes" xml:space="preserve">
          <source>VoiceOver, integrated in Apple products</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="207c7c00630b836d3afb46848bdb24a92023331d" translate="yes" xml:space="preserve">
          <source>Void</source>
          <target state="translated">Void</target>
        </trans-unit>
        <trans-unit id="745c743d98b1b3fb097bf85457820d6602c2ed22" translate="yes" xml:space="preserve">
          <source>W3C Working Draft</source>
          <target state="translated">Borrador de trabajo del W3C</target>
        </trans-unit>
        <trans-unit id="1c94052dc8e3b79f99ca4a72f4623c05fefaf225" translate="yes" xml:space="preserve">
          <source>WARNING: This interface is likely to change in order to accomodate &lt;a href=&quot;https://github.com/emberjs/rfcs/pull/4&quot;&gt;https://github.com/emberjs/rfcs/pull/4&lt;/a&gt;</source>
          <target state="translated">ADVERTENCIA: Es probable que esta interfaz cambie para adaptarse a &lt;a href=&quot;https://github.com/emberjs/rfcs/pull/4&quot;&gt;https://github.com/emberjs/rfcs/pull/4&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6aa0358a08931c1d7d8fa7c6e9e6fc515572b8cd" translate="yes" xml:space="preserve">
          <source>Wait Helpers</source>
          <target state="translated">Ayudantes de espera</target>
        </trans-unit>
        <trans-unit id="3d68e1241b229e5b8feafc79aefd9b39e529fc4f" translate="yes" xml:space="preserve">
          <source>Waiting on Asynchronous Behavior</source>
          <target state="translated">Esperando el comportamiento asíncrono</target>
        </trans-unit>
        <trans-unit id="828357c3569d7e51335798b042828e1409dc8e89" translate="yes" xml:space="preserve">
          <source>Watchman (optional)</source>
          <target state="translated">Vigilante (opcional)</target>
        </trans-unit>
        <trans-unit id="c9d28ee44ab604daa14f1ec23dee2ae1c41d6a30" translate="yes" xml:space="preserve">
          <source>Ways to associate labels and inputs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84045d81b9276a47f2e9131445990d42b57f6d87" translate="yes" xml:space="preserve">
          <source>We add another initializer named &lt;code&gt;second&lt;/code&gt;, specifying that it should run after the initializer named &lt;code&gt;first&lt;/code&gt;:</source>
          <target state="translated">Agregamos otro inicializador llamado &lt;code&gt;second&lt;/code&gt; , especificando que debe ejecutarse despu&amp;eacute;s del inicializador llamado &lt;code&gt;first&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="344bd202f0f01182b485cbed5ea1f3890a4f88a0" translate="yes" xml:space="preserve">
          <source>We are going to call the &lt;code&gt;my-post&lt;/code&gt; component, passing a title which is the title of the post suffixed with the name of the blog, the content of the post, and a series of options defined in-place.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eed522ad465a007af829de5460c5930e29e604ae" translate="yes" xml:space="preserve">
          <source>We are not testing the actual filtering of rentals in this test, since it is focused on only the capability of the component. We will test the full logic of filtering in acceptance tests, described in the next section.</source>
          <target state="translated">No estamos probando el filtrado real de los alquileres en esta prueba,ya que se centra sólo en la capacidad del componente.Probaremos la lógica completa del filtrado en las pruebas de aceptación,descritas en la siguiente sección.</target>
        </trans-unit>
        <trans-unit id="cabb5b7c4a4187b9fc6e817a4c98d08de8be9b77" translate="yes" xml:space="preserve">
          <source>We call the record to which a relationship belongs the relationship's &lt;em&gt;owner&lt;/em&gt;.</source>
          <target state="translated">Llamamos &lt;em&gt;propietario de&lt;/em&gt; la relaci&amp;oacute;n al registro al que pertenece una relaci&amp;oacute;n .</target>
        </trans-unit>
        <trans-unit id="7a04cbc10d487c55fca246e338e4cf7675c544ab" translate="yes" xml:space="preserve">
          <source>We call the record to which a relationship belongs-to the relationship's &lt;em&gt;owner&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3332d6bcd42e017f425e6741f05b40fe962c5758" translate="yes" xml:space="preserve">
          <source>We can also check if a block receives parameters using the &lt;code&gt;(has-block-params)&lt;/code&gt; keyword, and conditionally yield different values if so.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db95d52d9cfac20d8d8e8d823114e1cf043cd539" translate="yes" xml:space="preserve">
          <source>We can also pass actions down to components via their arguments, which allows child components to communicate with their parents and notify them of changes to state. For instance, if we wanted to add back the doubling button we had previously, we could using an action passed down via arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cf5809fea567240b7d05ae9629bc0c397775313" translate="yes" xml:space="preserve">
          <source>We can also use a short-hand syntax called &lt;em&gt;brace expansion&lt;/em&gt; to declare the dependents. You surround the dependent properties with braces (&lt;code&gt;{}&lt;/code&gt;), and separate with commas, like so:</source>
          <target state="translated">Tambi&amp;eacute;n podemos usar una sintaxis abreviada llamada &lt;em&gt;expansi&amp;oacute;n de llaves&lt;/em&gt; para declarar los dependientes. Rodea las propiedades dependientes con llaves ( &lt;code&gt;{}&lt;/code&gt; ) y las separas con comas, as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="ec020ec180e7728849a778d877ba8273c5f0b4b1" translate="yes" xml:space="preserve">
          <source>We can create a component that can be used in both situations by &lt;em&gt;templating&lt;/em&gt; the parts of the HTML that are different.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3869ad9aae760b9afc2f878d668966932d2ca6e" translate="yes" xml:space="preserve">
          <source>We can do a similar thing for our &lt;code&gt;send-message&lt;/code&gt; component:</source>
          <target state="translated">Podemos hacer algo similar para nuestro componente de &lt;code&gt;send-message&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="cb509cbf7a734e2d6efd91304815e4bb7cac1780" translate="yes" xml:space="preserve">
          <source>We can do the same for the &lt;code&gt;&amp;lt;SentMessage&amp;gt;&lt;/code&gt; component:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edb9d64c9ab05d3cbe8f73587d93feac19066994" translate="yes" xml:space="preserve">
          <source>We can do this by marking the field with the &lt;code&gt;@tracked&lt;/code&gt; decorator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0ef9021f1ba0ba5b613c8842d2d927edf0263f2" translate="yes" xml:space="preserve">
          <source>We can do this by marking the field with the &lt;code&gt;@tracked&lt;/code&gt; decorator:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b08e7c3b6fef6d30c90ec006c46d165bad92d16" translate="yes" xml:space="preserve">
          <source>We can include our new component into our application by using HTML tag syntax.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34bab3cee02986c772e29b6bab11c7229c871938" translate="yes" xml:space="preserve">
          <source>We can make additional style tweaks to &lt;code&gt;vendor/ember-tutorial.css&lt;/code&gt;, and the changes will take effect whenever we restart the app.</source>
          <target state="translated">Podemos hacer ajustes de estilo adicionales a &lt;code&gt;vendor/ember-tutorial.css&lt;/code&gt; , y los cambios entrar&amp;aacute;n en vigor cada vez que reiniciemos la aplicaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="ba7db9fcb1fe54640fa0cdff7fa5f94c653a0b5f" translate="yes" xml:space="preserve">
          <source>We can now also properly test if a helper will respond to property changes.</source>
          <target state="translated">Ahora también podemos probar adecuadamente si un ayudante responderá a los cambios de propiedad.</target>
        </trans-unit>
        <trans-unit id="d8d36abf9da835afe94bedc8160a00d0555f097c" translate="yes" xml:space="preserve">
          <source>We can now update the template to use the &lt;code&gt;total&lt;/code&gt; property:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4fb8ae546ae3ae837ff391be815ee5e21bd8c97" translate="yes" xml:space="preserve">
          <source>We can represent the goals above as &lt;a href=&quot;https://guides.emberjs.com/testing/acceptance/&quot;&gt;Ember acceptance tests&lt;/a&gt;. Acceptance tests interact with our app like an actual person would, but are automated, helping ensure that our app doesn't break in the future.</source>
          <target state="translated">Podemos representar los objetivos anteriores como &lt;a href=&quot;https://guides.emberjs.com/testing/acceptance/&quot;&gt;pruebas de aceptaci&amp;oacute;n de Ember&lt;/a&gt; . Las pruebas de aceptaci&amp;oacute;n interact&amp;uacute;an con nuestra aplicaci&amp;oacute;n como lo har&amp;iacute;a una persona real, pero est&amp;aacute;n automatizadas, lo que ayuda a garantizar que nuestra aplicaci&amp;oacute;n no se rompa en el futuro.</target>
        </trans-unit>
        <trans-unit id="12347628afee2bdbfe829e4c398c4dc8f08b55ed" translate="yes" xml:space="preserve">
          <source>We can see that if the property &lt;code&gt;isExpanded&lt;/code&gt; is toggled to true, we will show the body property of the model to the user. This &lt;code&gt;isExpanded&lt;/code&gt; is stored in the controller.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05a2b409d552263133b17d63dc1a008d4585945e" translate="yes" xml:space="preserve">
          <source>We can see the now familiar output for the route generator:</source>
          <target state="translated">Podemos ver la ahora familiar salida para el generador de ruta:</target>
        </trans-unit>
        <trans-unit id="8f6848525d747cfeaf1cfe0d7110ea0049ba5a7f" translate="yes" xml:space="preserve">
          <source>We can tell the action to invoke the &lt;code&gt;sendMessage&lt;/code&gt; action directly on the messaging service with the &lt;code&gt;target&lt;/code&gt; attribute.</source>
          <target state="translated">Podemos decirle a la acci&amp;oacute;n que invoque la acci&amp;oacute;n &lt;code&gt;sendMessage&lt;/code&gt; directamente en el servicio de mensajer&amp;iacute;a con el atributo de &lt;code&gt;target&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8fd202e30e9dfaf8e9312982221be63d6c416895" translate="yes" xml:space="preserve">
          <source>We can tell the action to invoke the &lt;code&gt;sendMessage&lt;/code&gt; action directly on the messaging service.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2d96f7bbd8d7273fb9ba80b308ff3ffbf64462d" translate="yes" xml:space="preserve">
          <source>We can test that changing the component's &lt;code&gt;name&lt;/code&gt; property updates the component's &lt;code&gt;style&lt;/code&gt; attribute and is reflected in the rendered HTML:</source>
          <target state="translated">Podemos probar que cambiar la propiedad del &lt;code&gt;name&lt;/code&gt; del componente actualiza el atributo de &lt;code&gt;style&lt;/code&gt; del componente y se refleja en el HTML renderizado:</target>
        </trans-unit>
        <trans-unit id="5d1f15612b1f46ee85eacd7d28bddd7386939f02" translate="yes" xml:space="preserve">
          <source>We can then use the &lt;code&gt;::&lt;/code&gt; separator in templates to access components within a folder:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de3eab786afb916107b8491dcadb27751e84a79b" translate="yes" xml:space="preserve">
          <source>We can then use this helper in the component's template to get the first letter of the username.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a086f3d7118276837543e634754ba5955ea1b3df" translate="yes" xml:space="preserve">
          <source>We can then use this value in the block like so:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5ae9728d249a94edb07d0467840ac30af0a3686" translate="yes" xml:space="preserve">
          <source>We can tighten up the implementation by moving the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment&quot;&gt;destructuring&lt;/a&gt; into the function's signature.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05413438d4aaefc36cec13fdd858893db64d4207" translate="yes" xml:space="preserve">
          <source>We can use components &lt;em&gt;within&lt;/em&gt; other components, so we can continue to break down our template into smaller pieces if we want. For instance, Tomster's avatar could be made into its own component that is then used within the &lt;code&gt;&amp;lt;ReceivedMessage&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c446cb97ed2cecf3bb4f22b8ef4132bff4346eee" translate="yes" xml:space="preserve">
          <source>We can use the &lt;a href=&quot;https://api.emberjs.com/ember/release/functions/@ember%2Ftemplate/htmlSafe&quot;&gt;htmlSafe&lt;/a&gt; function to mark a sanitized HTML as safe, then use double curly brackets to render the HTML. We can also create a &lt;a href=&quot;../helper-functions&quot;&gt;helper&lt;/a&gt; that sanitizes the HTML, marks it as safe, and returns the output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acdef20152fdd39508fb6ea7068f63114599e8e2" translate="yes" xml:space="preserve">
          <source>We can use the &lt;code&gt;route:application&lt;/code&gt; to do so. The &lt;code&gt;route:application&lt;/code&gt; is the top-most route in the route hierarchy, and its &lt;code&gt;model&lt;/code&gt; hook gets called once when the app starts up.</source>
          <target state="translated">Podemos usar la &lt;code&gt;route:application&lt;/code&gt; para hacerlo. La &lt;code&gt;route:application&lt;/code&gt; es la ruta m&amp;aacute;s alta en la jerarqu&amp;iacute;a de rutas, y su enlace de &lt;code&gt;model&lt;/code&gt; o se llama una vez cuando se inicia la aplicaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="105a4c47b88f0af5a2ec7f31753e90bb02e9543b" translate="yes" xml:space="preserve">
          <source>We can use this helper to set the page title at any point in any template.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c4737f6845bce4f769e8480b5745211aa3b11ec" translate="yes" xml:space="preserve">
          <source>We can yield back multiple values as well, separated by spaces.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a772c8776f21128d3db926f8e7cd83bf6500962f" translate="yes" xml:space="preserve">
          <source>We chose funny-name.surge.sh but you may use any unclaimed subdomain you like or use a custom domain that you own and have pointed the DNS to one of surges servers. If the second argument is left blank surge will prompt you with a suggested subdomain.</source>
          <target state="translated">Elegimos funny-name.surge.sh pero puedes usar cualquier subdominio no reclamado que te guste o usar un dominio personalizado que te pertenezca y que haya apuntado el DNS a uno de los servidores de surges.Si el segundo argumento se deja en blanco,Surge te sugerirá un subdominio.</target>
        </trans-unit>
        <trans-unit id="09674f796d4cd746dcbb22784d97262e462a04a9" translate="yes" xml:space="preserve">
          <source>We could accomplish this requirement by using the &lt;code&gt;if&lt;/code&gt; helper inside of an attribute:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2aa2c5b2de193a2fb2f794b0b00be9b4678fdb4e" translate="yes" xml:space="preserve">
          <source>We could also extract the username from the message:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d43d8a045ad3dc68d2c072194acd24bdc73be4b" translate="yes" xml:space="preserve">
          <source>We could have also linked the two records together by updating the blogPost's &lt;code&gt;hasMany&lt;/code&gt; relationship:</source>
          <target state="translated">Tambi&amp;eacute;n podr&amp;iacute;amos haber vinculado los dos registros actualizando la relaci&amp;oacute;n hasMany de &lt;code&gt;hasMany&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="9fd928242649957020233269717bd6b5d9490d3b" translate="yes" xml:space="preserve">
          <source>We could then invoke it like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61e1ee86eabfb27e99d5d8fc614c5f17c85d1034" translate="yes" xml:space="preserve">
          <source>We could then use the &lt;code&gt;modal&lt;/code&gt; component this way:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c78c1ef9a203957391cf3433b016cac21925d6c5" translate="yes" xml:space="preserve">
          <source>We define helper functions in the &lt;code&gt;app/helpers&lt;/code&gt; folder.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66a621b360f69638e676da656a565a3966cef035" translate="yes" xml:space="preserve">
          <source>We don't have to use the &lt;code&gt;moduleFor&lt;/code&gt; helper for unit testing helpers. Helpers are functions, which can be easily tested with &lt;code&gt;module&lt;/code&gt;.</source>
          <target state="translated">No tenemos que usar el &lt;code&gt;moduleFor&lt;/code&gt; ayuda para ayudantes de pruebas unitarias. Los ayudantes son funciones que se pueden probar f&amp;aacute;cilmente con &lt;code&gt;module&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d26817d55848c868b988fd806de5b1e32a953cca" translate="yes" xml:space="preserve">
          <source>We don't want to use &lt;code&gt;{{on &quot;click&quot;}}&lt;/code&gt; here because we want the opposite behavior: do something whenever the user clicks &lt;em&gt;outside&lt;/em&gt; of the &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;. To accomplish that, we'll register a &lt;code&gt;click&lt;/code&gt; handler on the entire document and then hit-test it, looking something like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5af15d361879d47a1ffb398a38a710339f7d8d31" translate="yes" xml:space="preserve">
          <source>We force the action by generating a &lt;code&gt;keyUp&lt;/code&gt; event on our input field, and then assert that only one item is rendered.</source>
          <target state="translated">&lt;code&gt;keyUp&lt;/code&gt; la acci&amp;oacute;n generando un evento keyUp en nuestro campo de entrada y luego afirmamos que solo se representa un elemento.</target>
        </trans-unit>
        <trans-unit id="93f7ee3a4c5ee96ce430f42c49dc82dab1d4ff31" translate="yes" xml:space="preserve">
          <source>We generally recommend leaving this option set to true however, if you need to turn it off, you can add the configuration property &lt;code&gt;EXTEND_PROTOTYPES&lt;/code&gt; to &lt;code&gt;EmberENV&lt;/code&gt; and set it to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc3bdc09dd5efba1fa010f8ceafc901a0d8c1b66" translate="yes" xml:space="preserve">
          <source>We have one last component to extract. Let's pull out the new message input.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dbbae3f342afe3e9010ee1f3f01e1cf465f33d3" translate="yes" xml:space="preserve">
          <source>We introduce two new helpers into this test, &lt;code&gt;fillIn&lt;/code&gt; and &lt;code&gt;keyEvent&lt;/code&gt;.</source>
          <target state="translated">Introducimos dos nuevos ayudantes en esta prueba, &lt;code&gt;fillIn&lt;/code&gt; y &lt;code&gt;keyEvent&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b9fb933733deb10bc3b4b7e41a4641f9c623b68e" translate="yes" xml:space="preserve">
          <source>We learned that, by default, Ember provides 3 types of tests: unit, rendering, and application tests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6c0c006a7c6f41f88694e034d106cada67bf9da" translate="yes" xml:space="preserve">
          <source>We may want to give the user the ability to put extra content before or after the post, such as an image or a profile. Since we don't know what the user wants to do with the body of the post, we can instead pass the body back to them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e78a8508d479e0fb1c9ce3180cbae22fd2cf480f" translate="yes" xml:space="preserve">
          <source>We mentioned above that helpers can be nested. This can be combined with different dynamic helpers. For example, the &lt;a href=&quot;https://api.emberjs.com/ember/release/classes/Ember.Templates.helpers/methods#concat&quot;&gt;&lt;code&gt;{{concat}}&lt;/code&gt;&lt;/a&gt; helper makes it easy to dynamically send a number of parameters to a component or helper as a single parameter in the format of a concatenated string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec254fe5964525c5e52d5539d23c4eede8ed1aae" translate="yes" xml:space="preserve">
          <source>We mentioned that the built-in components are similar in HTML markup to their native counterparts. What does this mean?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8b1317d968ebe5e737be5bcb1af90e31abf8c78" translate="yes" xml:space="preserve">
          <source>We might also test this component to ensure that the content of its template is being rendered properly:</source>
          <target state="translated">También podríamos probar este componente para asegurarnos de que el contenido de su plantilla se representa correctamente:</target>
        </trans-unit>
        <trans-unit id="f09ff94b844e8d099d1cd7b9327a85f9d504f630" translate="yes" xml:space="preserve">
          <source>We need to add a &lt;em&gt;setter&lt;/em&gt; in order to be able to set it. Generally, the setter function stores the value somewhere, and the getter function retrieves it:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6446910653b2a626fcb0855d68ef1d06df9faedf" translate="yes" xml:space="preserve">
          <source>We need to compute a value based on the results of the model hook</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d57f4fb9663406bdbcca59a18eb0648aeac14593" translate="yes" xml:space="preserve">
          <source>We need to support query parameters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3677f761534906e5eee3fed2c4d70c64652a0667" translate="yes" xml:space="preserve">
          <source>We now have a model object that we can use for our Ember Data implementation.</source>
          <target state="translated">Ahora tenemos un objeto modelo que podemos usar para nuestra implementación de Datos Ecológicos.</target>
        </trans-unit>
        <trans-unit id="de7d01b5284ad5190215b09fb6656237d40de474" translate="yes" xml:space="preserve">
          <source>We only need to generate a Controller file if we want to customize the properties or provide any actions to the Route. If we have no customizations, Ember will provide a default Controller instance for us at run time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed5b896f8eda0644ab9681451806087217a00dc9" translate="yes" xml:space="preserve">
          <source>We provide the maps service into our component by initializing a property of our component, called &lt;code&gt;maps&lt;/code&gt;. Services are commonly made available in components and other Ember objects by &lt;a href=&quot;https://guides.emberjs.com/applications/services/#toc_accessing-services&quot;&gt;&quot;service injection&quot;&lt;/a&gt;. When you initialize a property with &lt;code&gt;Ember.inject.service()&lt;/code&gt;, Ember tries to set that property with a service matching its name.</source>
          <target state="translated">Proporcionamos el servicio de mapas en nuestro componente inicializando una propiedad de nuestro componente, denominada &lt;code&gt;maps&lt;/code&gt; . Los servicios suelen estar disponibles en componentes y otros objetos Ember mediante &lt;a href=&quot;https://guides.emberjs.com/applications/services/#toc_accessing-services&quot;&gt;&quot;inyecci&amp;oacute;n de servicios&quot;&lt;/a&gt; . Cuando inicializa una propiedad con &lt;code&gt;Ember.inject.service()&lt;/code&gt; , Ember intenta establecer esa propiedad con un servicio que coincida con su nombre.</target>
        </trans-unit>
        <trans-unit id="86ea7af7b3ce7dbcf327164e27766386cbe07185" translate="yes" xml:space="preserve">
          <source>We recommend familiarizing yourself with the following concepts in particular to make the most out of these guides and of Ember:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4796744b7aeea7cf65dadaf2408df7e4f37e87aa" translate="yes" xml:space="preserve">
          <source>We recommend that all developers go through the &lt;a href=&quot;../../getting-started/quick-start&quot;&gt;Quick Start Tutorial&lt;/a&gt; to learn the fundamentals of Octane, and then the main &lt;a href=&quot;https://guides.emberjs.com/v3.25.0/tutorial/&quot;&gt;Tutorial&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e30d681ef9c1c377e3ec59ffdc28bb94b8a8f349" translate="yes" xml:space="preserve">
          <source>We recommend that all developers go through the &lt;a href=&quot;https://guides.emberjs.com/getting-started/quick-start/&quot;&gt;Quick Start Tutorial&lt;/a&gt; to learn the fundamentals of Octane, and then the main &lt;a href=&quot;https://guides.emberjs.com/tutorial/&quot;&gt;Tutorial&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0392d3120def495c8bb3a75804e9d02babbf5e2c" translate="yes" xml:space="preserve">
          <source>We recommend using native DOM events wrapped inside the run loop or the &lt;a href=&quot;https://github.com/cibernox/ember-native-dom-helpers&quot;&gt;&lt;code&gt;ember-native-dom-helpers&lt;/code&gt;&lt;/a&gt; addon to simulate user interaction and test that the title is updated when the button is clicked.</source>
          <target state="translated">Recomendamos usar eventos DOM nativos envueltos dentro del ciclo de ejecuci&amp;oacute;n o el complemento &lt;a href=&quot;https://github.com/cibernox/ember-native-dom-helpers&quot;&gt; &lt;code&gt;ember-native-dom-helpers&lt;/code&gt; &lt;/a&gt; para simular la interacci&amp;oacute;n del usuario y probar que el t&amp;iacute;tulo se actualiza cuando se hace clic en el bot&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="1ce3107006cc7f608a1fc35546a4adace75ce526" translate="yes" xml:space="preserve">
          <source>We refer to a component's argument from JavaScript by prefixing them with &lt;code&gt;this.args.&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a381713ed4d46ca6610fcd38a6d33532494cc13" translate="yes" xml:space="preserve">
          <source>We see that the browser will rerender the template twice.</source>
          <target state="translated">Vemos que el navegador volverá a reproducir la plantilla dos veces.</target>
        </trans-unit>
        <trans-unit id="bcf6fb188e06877ea86984c5124c68bf5caddafd" translate="yes" xml:space="preserve">
          <source>We take these API designs into account and end up with a reusable component. The component uses an inline &lt;code&gt;if&lt;/code&gt; to conditionally apply the &lt;code&gt;is-active&lt;/code&gt; class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4fbab8d9368db17ea6a78e8c40c05cdf7b7f58e" translate="yes" xml:space="preserve">
          <source>We then make a call to the &lt;code&gt;andThen&lt;/code&gt; helper which will wait for the preceding asynchronous test helpers to complete (specifically, &lt;code&gt;andThen&lt;/code&gt; will only be called &lt;strong&gt;after&lt;/strong&gt; the new posts URL was visited, the text filled in and the submit button was clicked, &lt;strong&gt;and&lt;/strong&gt; the browser has returned from doing whatever those actions required). Note &lt;code&gt;andThen&lt;/code&gt; has a single argument of the function that contains the code to execute after the other test helpers have finished.</source>
          <target state="translated">Luego hacemos una llamada al ayudante &lt;code&gt;andThen&lt;/code&gt; , que esperar&amp;aacute; a que se completen los ayudantes de prueba asincr&amp;oacute;nicos anteriores (espec&amp;iacute;ficamente, y solo se llamar&amp;aacute; a &lt;code&gt;andThen&lt;/code&gt; &lt;strong&gt;despu&amp;eacute;s de que&lt;/strong&gt; se haya visitado la URL de las nuevas publicaciones, se haya completado el texto y se haya hecho clic en el bot&amp;oacute;n enviar, &lt;strong&gt;y&lt;/strong&gt; el navegador ha regresado de hacer lo que sea necesario para esas acciones). Note &lt;code&gt;andThen&lt;/code&gt; tiene un solo argumento de la funci&amp;oacute;n que contiene el c&amp;oacute;digo para ejecutar despu&amp;eacute;s de que los otros ayudantes de prueba hayan terminado.</target>
        </trans-unit>
        <trans-unit id="89d7017358e1fd53677d28f0d7d36b0f3814d3c1" translate="yes" xml:space="preserve">
          <source>We use &lt;code&gt;--environment=development&lt;/code&gt; here so that Mirage will continue to mock fake data. However, normally we would use &lt;code&gt;ember build --environment=production&lt;/code&gt; which optimizes your application for production.</source>
          <target state="translated">Usamos &lt;code&gt;--environment=development&lt;/code&gt; aqu&amp;iacute; para que Mirage contin&amp;uacute;e simulando datos falsos. Sin embargo, normalmente &lt;code&gt;ember build --environment=production&lt;/code&gt; que optimiza su aplicaci&amp;oacute;n para la producci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="437b3d5d4b5e3d3b7a96a7d22c758c9b17206794" translate="yes" xml:space="preserve">
          <source>We want the component to simply provide an input field and yield the results list to its block, so our template will be simple:</source>
          <target state="translated">Queremos que el componente simplemente provea un campo de entrada y rinda la lista de resultados a su bloque,así que nuestra plantilla será simple:</target>
        </trans-unit>
        <trans-unit id="8d8a33d979d2a378731ecc9906f6d745c82e33ee" translate="yes" xml:space="preserve">
          <source>We want to arrange for the action to be invoked from within &lt;code&gt;ButtonWithConfirmation&lt;/code&gt; with both arguments. We've seen already that if we provide a &lt;code&gt;messageType&lt;/code&gt; value to the &lt;code&gt;fn&lt;/code&gt; helper when we insert &lt;code&gt;ButtonWithConfirmation&lt;/code&gt; into its parent &lt;code&gt;SendMessage&lt;/code&gt; template, that value will be passed to the &lt;code&gt;sendMessage&lt;/code&gt; action as its first argument automatically when invoked as &lt;code&gt;onConfirm&lt;/code&gt;. If we subsequently pass a single additional argument to &lt;code&gt;onConfirm&lt;/code&gt; explicitly, that argument will be passed to &lt;code&gt;sendMessage&lt;/code&gt; as its second argument (This ability to provide arguments to a function one at a time is known as &lt;a href=&quot;https://en.wikipedia.org/wiki/Partial_application&quot;&gt;partial application&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27eca1244a2d042815d63447bfd3d4bafc33c45e" translate="yes" xml:space="preserve">
          <source>We want to arrange for the action to be invoked from within &lt;code&gt;button-with-confirmation&lt;/code&gt; with both arguments. We've seen already that if we provide a &lt;code&gt;messageType&lt;/code&gt; value to the &lt;code&gt;action&lt;/code&gt; helper when we insert &lt;code&gt;button-with-confirmation&lt;/code&gt; into its parent &lt;code&gt;send-message&lt;/code&gt; template, that value will be passed to the &lt;code&gt;sendMessage&lt;/code&gt; action as its first argument automatically when invoked as &lt;code&gt;onConfirm&lt;/code&gt;. If we subsequently pass a single additional argument to &lt;code&gt;onConfirm&lt;/code&gt; explicitly, that argument will be passed to &lt;code&gt;sendMessage&lt;/code&gt; as its second argument (This ability to provide arguments to a function one at a time is known as &lt;a href=&quot;https://en.wikipedia.org/wiki/Currying&quot;&gt;currying&lt;/a&gt;).</source>
          <target state="translated">Queremos disponer que la acci&amp;oacute;n se invoque desde dentro del &lt;code&gt;button-with-confirmation&lt;/code&gt; con ambos argumentos. Ya hemos visto que si proporcionamos un valor de &lt;code&gt;messageType&lt;/code&gt; al asistente de &lt;code&gt;action&lt;/code&gt; cuando insertamos el &lt;code&gt;button-with-confirmation&lt;/code&gt; en su plantilla de &lt;code&gt;send-message&lt;/code&gt; , ese valor se pasar&amp;aacute; a la acci&amp;oacute;n &lt;code&gt;sendMessage&lt;/code&gt; como su primer argumento autom&amp;aacute;ticamente cuando se invoca como &lt;code&gt;onConfirm&lt;/code&gt; . Si posteriormente pasamos un solo argumento adicional a &lt;code&gt;onConfirm&lt;/code&gt; expl&amp;iacute;citamente, ese argumento se pasar&amp;aacute; a &lt;code&gt;sendMessage&lt;/code&gt; como su segundo argumento (esta capacidad de proporcionar argumentos a una funci&amp;oacute;n uno a la vez se conoce como&lt;a href=&quot;https://en.wikipedia.org/wiki/Currying&quot;&gt;curry&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="57871ac98119b392f78a67f54e863fe9ea2740e2" translate="yes" xml:space="preserve">
          <source>We want to pass down actions or variables to share with a Route&amp;rsquo;s child components</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5748c7642668b5173a2078dab6f3ce97a1306d7" translate="yes" xml:space="preserve">
          <source>We want to verify that we can click on a specific rental and load a detailed view to the page. We'll click on the title and validate that an expanded description of the rental is shown.</source>
          <target state="translated">Queremos verificar que podemos hacer clic en un alquiler específico y cargar una vista detallada de la página.Haremos clic en el título y validaremos que se muestre una descripción ampliada del alquiler.</target>
        </trans-unit>
        <trans-unit id="8561199c13d7dc65608eefd4f1b6885051807097" translate="yes" xml:space="preserve">
          <source>We will cover these advanced component features in a later chapter. For now, let's see these core concepts in action by building a property rental application in the next lesson.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58623492e918c1212102733eb4d80f52c1725f65" translate="yes" xml:space="preserve">
          <source>We will go into more details about each of these template features later on in this guide.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71d647a4022262d3a708d8f65093c6f6252fdbf8" translate="yes" xml:space="preserve">
          <source>We will start by editing the &lt;code&gt;application&lt;/code&gt; template. This template is always on screen while the user has your application loaded. In your editor, open &lt;code&gt;app/templates/application.hbs&lt;/code&gt; and change it to the following:</source>
          <target state="translated">Comenzaremos editando la plantilla de la &lt;code&gt;application&lt;/code&gt; . Esta plantilla est&amp;aacute; siempre en pantalla mientras el usuario tiene su aplicaci&amp;oacute;n cargada. En su editor, abra &lt;code&gt;app/templates/application.hbs&lt;/code&gt; y c&amp;aacute;mbielo a lo siguiente:</target>
        </trans-unit>
        <trans-unit id="56e5f5b48c6b928345891aaa143baffe89fe7553" translate="yes" xml:space="preserve">
          <source>We'd like our helper to print pounds sterling rather than US dollars:</source>
          <target state="translated">Nos gustaría que nuestro ayudante imprimiera libras esterlinas en lugar de dólares americanos:</target>
        </trans-unit>
        <trans-unit id="621911b4faa7e3dd3e785815b13ad5972379bd5d" translate="yes" xml:space="preserve">
          <source>We'll add some additional functionality to our &lt;code&gt;filterByCity&lt;/code&gt; action to additionally return a single rental, represented by the variable &lt;code&gt;FILTERED_ITEMS&lt;/code&gt; when any value is set.</source>
          <target state="translated">&lt;code&gt;filterByCity&lt;/code&gt; algunas funciones adicionales a nuestra acci&amp;oacute;n filterByCity para devolver adicionalmente un solo alquiler, representado por la variable &lt;code&gt;FILTERED_ITEMS&lt;/code&gt; cuando se establece cualquier valor.</target>
        </trans-unit>
        <trans-unit id="2c5d938a89ee99595180f09de543d94bc99b847c" translate="yes" xml:space="preserve">
          <source>We'll also want to use the component elsewhere, perhaps like this:</source>
          <target state="translated">También querremos usar el componente en otro lugar,tal vez así:</target>
        </trans-unit>
        <trans-unit id="ca74fd7a1a443edb25110d84fc02382671ff3490" translate="yes" xml:space="preserve">
          <source>We'll break apart the larger HTML file into files containing each of these parts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="caa6ee9d9ee5e479d7688d157d008530d368ce91" translate="yes" xml:space="preserve">
          <source>We'll call this the &lt;code&gt;ButtonWithConfirmation&lt;/code&gt; component. We can start off with a normal component definition, like we've seen before:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d1a55c50bbd1c4fe9c2f78f99cb3a7271f219bd" translate="yes" xml:space="preserve">
          <source>We'll cover these steps:</source>
          <target state="translated">Cubriremos estos pasos:</target>
        </trans-unit>
        <trans-unit id="76c90f3a2bc09cf017b4258b98acd18706384829" translate="yes" xml:space="preserve">
          <source>We'll discuss the capabilities and core concepts of templates in the following chapters, but before we do that, we should get started with the basics. The simplest way to get started on an Ember template is with some HTML!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddafa1f647707c3a72a39d4018c65c4526daeeda" translate="yes" xml:space="preserve">
          <source>We'll implement an action on the parent component called &lt;code&gt;deleteAccount()&lt;/code&gt; that, when called, gets a hypothetical &lt;code&gt;login&lt;/code&gt;&lt;a href=&quot;https://guides.emberjs.com/services/&quot;&gt;service&lt;/a&gt; and calls the service's &lt;code&gt;deleteUser()&lt;/code&gt; method. We'll go over services later on - for now, think of it as an API that manages the user's login and information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec7141941ff5757a9e139f4b128b4730b901c1ef" translate="yes" xml:space="preserve">
          <source>We'll implement an action on the parent component called &lt;code&gt;userDidDeleteAccount()&lt;/code&gt; that, when called, gets a hypothetical &lt;code&gt;login&lt;/code&gt;&lt;a href=&quot;https://guides.emberjs.com/applications/services/&quot;&gt;service&lt;/a&gt; and calls the service's &lt;code&gt;deleteUser()&lt;/code&gt; method.</source>
          <target state="translated">Implementaremos una acci&amp;oacute;n en el componente principal llamado &lt;code&gt;userDidDeleteAccount()&lt;/code&gt; que, cuando se llama, obtiene un &lt;a href=&quot;https://guides.emberjs.com/applications/services/&quot;&gt;servicio de &lt;/a&gt; &lt;code&gt;login&lt;/code&gt; hipot&amp;eacute;tico y llama al m&amp;eacute;todo &lt;code&gt;deleteUser()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b3a69d6b8f6bb9d602758ceab1b52171fd6fe0b5" translate="yes" xml:space="preserve">
          <source>We'll need to make some changes to the code we wrote before.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfa461b4980a08c7849802896e48b45579b62013" translate="yes" xml:space="preserve">
          <source>We'll plan to use the component in a template something like this:</source>
          <target state="translated">Planearemos usar el componente en una plantilla como esta:</target>
        </trans-unit>
        <trans-unit id="49fbd6ef6ee0f4a7335e4946320842c0633ffb54" translate="yes" xml:space="preserve">
          <source>We'll start by using Ember CLI to generate a new acceptance test:</source>
          <target state="translated">Empezaremos usando Ember CLI para generar una nueva prueba de aceptación:</target>
        </trans-unit>
        <trans-unit id="6b512f7c526eddf7cb5027f4b3755d3635c93db8" translate="yes" xml:space="preserve">
          <source>We'll start with a simple example. We have a &lt;code&gt;Person&lt;/code&gt; object with &lt;code&gt;firstName&lt;/code&gt; and &lt;code&gt;lastName&lt;/code&gt; properties, but we also want a &lt;code&gt;fullName&lt;/code&gt; property that joins the two names when either of them changes:</source>
          <target state="translated">Empezaremos con un ejemplo sencillo. Tenemos un objeto &lt;code&gt;Person&lt;/code&gt; con &lt;code&gt;firstName&lt;/code&gt; y &lt;code&gt;lastName&lt;/code&gt; , pero tambi&amp;eacute;n queremos una propiedad &lt;code&gt;fullName&lt;/code&gt; que una los dos nombres cuando cualquiera de ellos cambie:</target>
        </trans-unit>
        <trans-unit id="28d4aab512bcec9f852a9bba9595bee7c9e27c8c" translate="yes" xml:space="preserve">
          <source>We'll take the code created for us by the generator and add a &lt;code&gt;model()&lt;/code&gt; method to the &lt;code&gt;Route&lt;/code&gt;:</source>
          <target state="translated">Tomaremos el c&amp;oacute;digo creado para nosotros por el generador y agregaremos un m&amp;eacute;todo &lt;code&gt;model()&lt;/code&gt; a la &lt;code&gt;Route&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="5d6d9a78d5453b569f967dc69a5ceb971007c2f8" translate="yes" xml:space="preserve">
          <source>We'll use a unit test to validate the service. Unit tests are more isolated than integration tests and acceptance tests, and are intended for testing specific logic within a class.</source>
          <target state="translated">Usaremos una prueba de unidad para validar el servicio.Las pruebas unitarias son más aisladas que las pruebas de integración y las pruebas de aceptación,y están destinadas a probar la lógica específica dentro de una clase.</target>
        </trans-unit>
        <trans-unit id="0f28fdf4934be1cf10d3779562c79625bf3b8794" translate="yes" xml:space="preserve">
          <source>We're going to demonstrate how to test helpers by testing the &lt;code&gt;format-currency&lt;/code&gt; helper from &lt;a href=&quot;https://guides.emberjs.com/templates/writing-helpers&quot;&gt;Writing Helpers&lt;/a&gt;.</source>
          <target state="translated">Vamos a demostrar c&amp;oacute;mo probar los ayudantes probando el ayudante de &lt;code&gt;format-currency&lt;/code&gt; de &lt;a href=&quot;https://guides.emberjs.com/templates/writing-helpers&quot;&gt;Writing Helpers&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5a19c5b762ef4e30aec6b9c84897a002a09a8c4c" translate="yes" xml:space="preserve">
          <source>We're going to demonstrate how to test helpers by testing the &lt;code&gt;format-currency&lt;/code&gt; helper from &lt;a href=&quot;https://guides.emberjs.com/templates/writing-helpers/&quot;&gt;Writing Helpers&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d418058b4c745f5dd2b0304598ea74f7419421d8" translate="yes" xml:space="preserve">
          <source>We're going to tell our component:</source>
          <target state="translated">Vamos a decirle a nuestro componente:</target>
        </trans-unit>
        <trans-unit id="66dc772c65bef2a0f7cba14bb42e3cd58c1d560a" translate="yes" xml:space="preserve">
          <source>We're just missing the &lt;code&gt;current-user&lt;/code&gt; class on the HTML &lt;code&gt;&amp;lt;aside&amp;gt;&lt;/code&gt; element. To make that work, we'll specify the HTML attribute &lt;code&gt;class&lt;/code&gt; on the &lt;code&gt;&amp;lt;Avatar&amp;gt;&lt;/code&gt; tag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1d3da965644f107ee64edf7439c05d63040adf6" translate="yes" xml:space="preserve">
          <source>We're really, really close.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e0c1d5f20ebc7ff2c45ca5efab5fb48e8816aef" translate="yes" xml:space="preserve">
          <source>We're using the &lt;code&gt;submit&lt;/code&gt; event on the form itself here rather than adding a &lt;code&gt;click&lt;/code&gt; event handler to the button since it is about submitting the form as a whole. We also updated the &lt;code&gt;input&lt;/code&gt; tag to instead use the built in &lt;code&gt;&amp;lt;Input&amp;gt;&lt;/code&gt; component, which automatically updates the value we pass to &lt;code&gt;@value&lt;/code&gt;. Next, let's add the component class:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd4797da80eae7d8f95ba056eff22702f9595be0" translate="yes" xml:space="preserve">
          <source>We've also renamed &lt;code&gt;scientist&lt;/code&gt; to the more-generic &lt;code&gt;person&lt;/code&gt;, decreasing the coupling of our component to where it's used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1e5d59e02f3c455fb66d9e1d5b4e9d1ff8de041" translate="yes" xml:space="preserve">
          <source>We've covered the case when a model promise fulfills, but what if it rejects?</source>
          <target state="translated">Hemos cubierto el caso cuando una promesa de modelo se cumple,pero ¿qué pasa si se rechaza?</target>
        </trans-unit>
        <trans-unit id="f859088711ed3a94c742e4bd935f2d138c2f9ca1" translate="yes" xml:space="preserve">
          <source>We've just created our first component!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9e644093a7a7b66e6a61bd2e7b50d0b70e2ed5d" translate="yes" xml:space="preserve">
          <source>We've seen most of this before, but the &lt;code&gt;{{outlet}}&lt;/code&gt; beneath &lt;code&gt;&amp;lt;div class=&quot;body&quot;&amp;gt;&lt;/code&gt; is new. The &lt;code&gt;{{outlet}}&lt;/code&gt; helper tells Ember where content for our current route (such as &lt;code&gt;about&lt;/code&gt; or &lt;code&gt;contact&lt;/code&gt;) should be shown.</source>
          <target state="translated">Hemos visto la mayor parte de esto antes, pero el &lt;code&gt;{{outlet}}&lt;/code&gt; debajo de &lt;code&gt;&amp;lt;div class=&quot;body&quot;&amp;gt;&lt;/code&gt; es nuevo. El ayudante &lt;code&gt;{{outlet}}&lt;/code&gt; le dice a Ember d&amp;oacute;nde se debe mostrar el contenido de nuestra ruta actual (como &lt;code&gt;about&lt;/code&gt; o &lt;code&gt;contact&lt;/code&gt; o ).</target>
        </trans-unit>
        <trans-unit id="fd96ebe1f53832334ded31f142c8aaf2661be3db" translate="yes" xml:space="preserve">
          <source>We've taken a big HTML file and broken it up into &lt;em&gt;components&lt;/em&gt; to make the content easier to understand and maintain.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb4a73abdeb9df38b385d119bf485b42937822a0" translate="yes" xml:space="preserve">
          <source>Web Content Accessibility Guidelines(WCAG) 2.1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9adbbf981a608a69c175cd257a4594e6b28af94f" translate="yes" xml:space="preserve">
          <source>Web Development</source>
          <target state="translated">Desarrollo de la Web</target>
        </trans-unit>
        <trans-unit id="06173f30ba037cccb9d203c2dee575ebeb29f9ea" translate="yes" xml:space="preserve">
          <source>Web components</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ca6740481490592d182c54c048bffd7426b589c" translate="yes" xml:space="preserve">
          <source>WebSocket callbacks</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4d3b53a7eaf3764d59f45e670b49e2810dc9bf1" translate="yes" xml:space="preserve">
          <source>WebSockets.</source>
          <target state="translated">WebSockets.</target>
        </trans-unit>
        <trans-unit id="5df1449d8121c876d37d0580d5ac59c93e722e17" translate="yes" xml:space="preserve">
          <source>Websocket callbacks</source>
          <target state="translated">Las llamadas de Websocket</target>
        </trans-unit>
        <trans-unit id="0882292973fec4cdc6e646a0ef2fb781fce44cce" translate="yes" xml:space="preserve">
          <source>Welcome to Ember! Follow this guide to build a simple web app using HTML, JavaScript, the command line, and some of Ember's best features. Each step has code you can copy and paste directly or modify to make it your own. Along the way, you will be introduced to the Ember community so that you know who to ask for help and how to continue your learning journey.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5be4cb435a04586775c457a3fbcdeb080a06b851" translate="yes" xml:space="preserve">
          <source>Welcome to the Ember Tutorial! This tutorial is meant to introduce basic Ember concepts while creating a professional looking application. If you get stuck at any point during the tutorial, feel free to download &lt;a href=&quot;https://github.com/ember-learn/super-rentals&quot;&gt;https://github.com/ember-learn/super-rentals&lt;/a&gt; for a working example of the completed app.</source>
          <target state="translated">&amp;iexcl;Bienvenido al tutorial de Ember! Este tutorial est&amp;aacute; destinado a presentar conceptos b&amp;aacute;sicos de Ember mientras crea una aplicaci&amp;oacute;n de aspecto profesional. Si se queda atascado en alg&amp;uacute;n momento durante el tutorial, no dude en descargar &lt;a href=&quot;https://github.com/ember-learn/super-rentals&quot;&gt;https://github.com/ember-learn/super-rentals&lt;/a&gt; para ver un ejemplo funcional de la aplicaci&amp;oacute;n completa.</target>
        </trans-unit>
        <trans-unit id="9842b19893cf1c143654b0168e1196702a8520a6" translate="yes" xml:space="preserve">
          <source>Welcome to the Ember.js Guides! This documentation will take you from total beginner to Ember expert.</source>
          <target state="translated">¡Bienvenidos a las Guías Ember.js! Esta documentación te llevará desde el principiante total hasta el experto en Ember.</target>
        </trans-unit>
        <trans-unit id="489c59f4db30188992ce5592879b4fcfe217e1f7" translate="yes" xml:space="preserve">
          <source>What Tools Can Help Me?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2bf8908ff31eb0ad409d99921c5c64c1d2f0c96" translate="yes" xml:space="preserve">
          <source>What are Computed Properties?</source>
          <target state="translated">¿Qué son las propiedades computarizadas?</target>
        </trans-unit>
        <trans-unit id="c6006257bc079837ccfa8256d6e0abef2c5ce8f4" translate="yes" xml:space="preserve">
          <source>What are Ember Data models?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="965cc49bbf709aa781a3233924d56b6c9a09b261" translate="yes" xml:space="preserve">
          <source>What are Engines?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a45e8ed9d6c9849a9dc59f27c0e9f825db12547b" translate="yes" xml:space="preserve">
          <source>What are other things that you can test for?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="414cbfaecc94d5ca7aa8d5d4b0b070784cc03fbe" translate="yes" xml:space="preserve">
          <source>What are the queues, and what is their priority order?</source>
          <target state="translated">¿Cuáles son las colas y cuál es su orden de prioridad?</target>
        </trans-unit>
        <trans-unit id="77a582f0743a83fe16d7738cbbc6fe32a10c6365" translate="yes" xml:space="preserve">
          <source>What array of people to use, via the &lt;code&gt;@people&lt;/code&gt; argument. We'll provide this route's &lt;code&gt;@model&lt;/code&gt; as the list of people.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8084f8358944029b7c618b1c600f50f0008886dc" translate="yes" xml:space="preserve">
          <source>What array of people to use, via the &lt;code&gt;people&lt;/code&gt; attribute. We'll provide this route's &lt;code&gt;model&lt;/code&gt; as the list of people.</source>
          <target state="translated">Qu&amp;eacute; conjunto de personas utilizar, a trav&amp;eacute;s del atributo de &lt;code&gt;people&lt;/code&gt; . Proporcionaremos el &lt;code&gt;model&lt;/code&gt; o de esta ruta como lista de personas.</target>
        </trans-unit>
        <trans-unit id="4c6a74ca18745291eec4b8e7bd75a3239a0efe03" translate="yes" xml:space="preserve">
          <source>What does &lt;code&gt;setupRenderingTest()&lt;/code&gt; do? First, it uses &lt;code&gt;setupTest()&lt;/code&gt; behind the scenes. Just like in &lt;a href=&quot;../test-types#toc_what-to-watch-out-for&quot;&gt;Unit Tests&lt;/a&gt;, you have access to &lt;code&gt;this.owner&lt;/code&gt;, &lt;code&gt;this.get()&lt;/code&gt;, &lt;code&gt;this.set()&lt;/code&gt;, and &lt;code&gt;pauseTest()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a922ff72dedf9379c499035b1aa5ab32532df37b" translate="yes" xml:space="preserve">
          <source>What happens if I forget to start a run loop in an async handler?</source>
          <target state="translated">¿Qué pasa si me olvido de iniciar un bucle de ejecución en un controlador de sincronización?</target>
        </trans-unit>
        <trans-unit id="cf6ddbfe4d20d55010944430453bfb3e2538ad87" translate="yes" xml:space="preserve">
          <source>What happens in these queues?</source>
          <target state="translated">¿Qué pasa en estas colas?</target>
        </trans-unit>
        <trans-unit id="f549e5aa4336f1737efe7a24d791858c80e0559d" translate="yes" xml:space="preserve">
          <source>What if you want to handle an event in one part of your component by calling a DOM method on another part? For example, let's say you're creating an audio component:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45c0fb256c4d03bffb51f5e28bed6782177705a1" translate="yes" xml:space="preserve">
          <source>What is Ember Octane?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ed3f6e9db41f7194c82e74c8365b1cacfa80b07" translate="yes" xml:space="preserve">
          <source>What is Ember?</source>
          <target state="translated">¿Qué es Ember?</target>
        </trans-unit>
        <trans-unit id="f976987a119bdc1734e183b718ef7804c4053052" translate="yes" xml:space="preserve">
          <source>What is a Controller?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9138ca30e6c050393ea819ef398598c4601fc85" translate="yes" xml:space="preserve">
          <source>What should you do if you need the &lt;code&gt;model&lt;/code&gt; to return the results of multiple API requests?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd6d4999cbbb3d6716c424f48072b86e1a1f6c9d" translate="yes" xml:space="preserve">
          <source>What the Heck is Shadow DOM?</source>
          <target state="translated">¿Qué diablos es Shadow DOM?</target>
        </trans-unit>
        <trans-unit id="4c7ba9fcadb7660dfe62b7add263e9829f3b2117" translate="yes" xml:space="preserve">
          <source>What title to use, via the &lt;code&gt;@title&lt;/code&gt; argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c40774de8da3d6f1735ec3622c0cc4f7f489eb8" translate="yes" xml:space="preserve">
          <source>What title to use, via the &lt;code&gt;title&lt;/code&gt; attribute.</source>
          <target state="translated">Qu&amp;eacute; t&amp;iacute;tulo usar, a trav&amp;eacute;s del atributo &lt;code&gt;title&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4856f9d805ed3c92102385ef9d0eed847b666a85" translate="yes" xml:space="preserve">
          <source>What to Watch Out for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="425d40f649c4a4a152ad38f28a16151d9e71d616" translate="yes" xml:space="preserve">
          <source>What we need is a way to display the local time if &lt;code&gt;@localTime&lt;/code&gt; exists. We can do this with an &lt;code&gt;if&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b50276f62cd48092fe2b224dc32bc245b64733f6" translate="yes" xml:space="preserve">
          <source>What's happening here is we are adding our own stub maps service that simply creates an empty div. Then we are putting it in Ember's &lt;a href=&quot;https://guides.emberjs.com/applications/dependency-injection#toc_factory-registrations&quot;&gt;registry&lt;/a&gt;, and injecting it into the &lt;code&gt;location-map&lt;/code&gt; component that uses it. That way every time that component is created, our stub map service gets injected over the Google maps service. Now when we run our acceptance tests, you'll notice that maps do not get rendered as the test runs.</source>
          <target state="translated">Lo que est&amp;aacute; sucediendo aqu&amp;iacute; es que estamos agregando nuestro propio servicio de mapas de c&amp;oacute;digo auxiliar que simplemente crea un div vac&amp;iacute;o. Luego lo colocamos en el &lt;a href=&quot;https://guides.emberjs.com/applications/dependency-injection#toc_factory-registrations&quot;&gt;registro&lt;/a&gt; de Ember y lo inyectamos en el componente de &lt;code&gt;location-map&lt;/code&gt; que lo usa. De esa manera, cada vez que se crea ese componente, nuestro servicio de mapas de c&amp;oacute;digo auxiliar se inyecta sobre el servicio de mapas de Google. Ahora, cuando ejecutamos nuestras pruebas de aceptaci&amp;oacute;n, notar&amp;aacute; que los mapas no se procesan mientras se ejecuta la prueba.</target>
        </trans-unit>
        <trans-unit id="e2354f75bedc71afce4246694064820a904997d1" translate="yes" xml:space="preserve">
          <source>Whatever shows up in the URL at the &lt;code&gt;:post_id&lt;/code&gt;, the dynamic segment, will be available in the params for the route's &lt;code&gt;model&lt;/code&gt; hook:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92b158f903e2985e4cf49bb4bc78b7644c732050" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;autoboot&lt;/code&gt; is disabled, calling &lt;code&gt;visit&lt;/code&gt; would first cause the application to boot, which runs the application initializers.</source>
          <target state="translated">Cuando el &lt;code&gt;autoboot&lt;/code&gt; est&amp;aacute; deshabilitado, llamar a &lt;code&gt;visit&lt;/code&gt; primero har&amp;iacute;a que la aplicaci&amp;oacute;n se iniciara , que ejecuta los inicializadores de la aplicaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="a97db7600a941b8c2922fc7d0191155824b7dd9b" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;coordinatePoint&lt;/code&gt; is received from the API, it is expected to be an array:</source>
          <target state="translated">Cuando &lt;code&gt;coordinatePoint&lt;/code&gt; se recibe de la API, se espera que sea una matriz:</target>
        </trans-unit>
        <trans-unit id="ca4c53301080f84de219e124485638a246285643" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;store.findAll(&amp;lt;type&amp;gt;)&lt;/code&gt; is called and a &lt;code&gt;reload&lt;/code&gt; is not initiated, the adapter is presented the opportunity to trigger a new non-blocking (background) request for records of that type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c16991f9228e65d9e9c66fd4c04fb1632071f700" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;store.findAll(&amp;lt;type&amp;gt;)&lt;/code&gt; is called without a &lt;code&gt;reload&lt;/code&gt; option, the adapter is presented the opportunity to trigger a new request for records of that type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64bcb9bda88f06c6f7d931508e844c4c85ee14f4" translate="yes" xml:space="preserve">
          <source>When &lt;em&gt;disabled&lt;/em&gt;, this div will not be output. This is usually desirable, but may break the styling of an existing application in subtle ways:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a89f4c37b6fc937f61c56c227c4083c051d5574" translate="yes" xml:space="preserve">
          <source>When Ember first renders a component, it renders the initial &lt;em&gt;state&lt;/em&gt; of that component - the state of the instance, and state of the arguments that are passed to it:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8315c0a0f7ae27482af6274c37c80899744e3060" translate="yes" xml:space="preserve">
          <source>When Ember instantiates a controller, view, or other framework component it can attach a dependency to that component. This is often used to provide services to a set of framework components.</source>
          <target state="translated">Cuando Ember instale un controlador,una vista u otro componente del marco,puede asociar una dependencia a ese componente.Esto se utiliza a menudo para prestar servicios a un conjunto de componentes del marco.</target>
        </trans-unit>
        <trans-unit id="9723817b7b18ae317264d92944e92a5ba69baaab" translate="yes" xml:space="preserve">
          <source>When Ember renders a value like &lt;code&gt;{{this.greeting}}&lt;/code&gt; in the template, it takes note of any tracked properties that it encounters, in this case &lt;code&gt;language&lt;/code&gt;. If these values change in the future, it schedules a rerender, and then updates &lt;em&gt;only&lt;/em&gt; the values that could have changed. This means that when &lt;code&gt;language&lt;/code&gt; changes, only the &lt;code&gt;Hello&lt;/code&gt; text in the browser will rerender - Ember leaves the &lt;code&gt;, Jen Weber!&lt;/code&gt; portion completely alone!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6d268aa97a60988690ce67fa45e369ef9323618" translate="yes" xml:space="preserve">
          <source>When Ember renders this template, we get:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f7f428dfb57ca67c18248ff77a041cc6fd944c5" translate="yes" xml:space="preserve">
          <source>When Ember renders this template, you will see the following HTML code:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2eb96beec7460653b379fff8aec34c25e0afd889" translate="yes" xml:space="preserve">
          <source>When Promises Reject...</source>
          <target state="translated">Cuando las promesas se rechazan...</target>
        </trans-unit>
        <trans-unit id="6928933b74ca93e68fe065e4e82c69f5eba72f13" translate="yes" xml:space="preserve">
          <source>When a component detects that it is time to remove itself from the DOM, Ember will trigger the &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Component.html#event_willDestroyElement&quot;&gt;&lt;code&gt;willDestroyElement()&lt;/code&gt;&lt;/a&gt; method, allowing for any teardown logic to be performed.</source>
          <target state="translated">Cuando un componente detecta que es hora de eliminarse del DOM, Ember activar&amp;aacute; el m&amp;eacute;todo &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Component.html#event_willDestroyElement&quot;&gt; &lt;code&gt;willDestroyElement()&lt;/code&gt; &lt;/a&gt; , lo que permitir&amp;aacute; realizar cualquier l&amp;oacute;gica de desmontaje.</target>
        </trans-unit>
        <trans-unit id="60559043c1e6ffcda817b4e753ae1270d6d60184" translate="yes" xml:space="preserve">
          <source>When a controller's query param property is currently set to its default value, this value won't be serialized into the URL. So in the above example, if &lt;code&gt;page&lt;/code&gt; is &lt;code&gt;1&lt;/code&gt;, the URL might look like &lt;code&gt;/articles&lt;/code&gt;, but once someone sets the controller's &lt;code&gt;page&lt;/code&gt; value to &lt;code&gt;2&lt;/code&gt;, the URL will become &lt;code&gt;/articles?page=2&lt;/code&gt;.</source>
          <target state="translated">Cuando la propiedad de par&amp;aacute;metro de consulta de un controlador est&amp;aacute; actualmente establecida en su valor predeterminado, este valor no se serializar&amp;aacute; en la URL. Entonces, en el ejemplo anterior, si la &lt;code&gt;page&lt;/code&gt; es &lt;code&gt;1&lt;/code&gt; , la URL puede verse como &lt;code&gt;/articles&lt;/code&gt; , pero una vez que alguien establece el valor de la &lt;code&gt;page&lt;/code&gt; del controlador en &lt;code&gt;2&lt;/code&gt; , la URL se convertir&amp;aacute; en &lt;code&gt;/articles?page=2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="71f0172b25858f42459a129f9504adf20cbc9e61" translate="yes" xml:space="preserve">
          <source>When a developer adds a new feature to the &lt;code&gt;canary&lt;/code&gt; channel (i.e. the &lt;code&gt;master&lt;/code&gt; branch on github), they also add an entry to &lt;a href=&quot;https://github.com/emberjs/ember.js/blob/master/FEATURES.md&quot;&gt;&lt;code&gt;FEATURES.md&lt;/code&gt;&lt;/a&gt; explaining what the feature does, and linking to their originating pull request. This list is kept current, and reflects what is available in each channel (&lt;code&gt;release&lt;/code&gt;, &lt;code&gt;beta&lt;/code&gt;, and &lt;code&gt;canary&lt;/code&gt;).</source>
          <target state="translated">Cuando un desarrollador agrega una nueva caracter&amp;iacute;stica al canal &lt;code&gt;canary&lt;/code&gt; (es decir, la rama &lt;code&gt;master&lt;/code&gt; en github), tambi&amp;eacute;n agrega una entrada a &lt;a href=&quot;https://github.com/emberjs/ember.js/blob/master/FEATURES.md&quot;&gt; &lt;code&gt;FEATURES.md&lt;/code&gt; &lt;/a&gt; explicando lo que hace la caracter&amp;iacute;stica y vinculando a su solicitud de extracci&amp;oacute;n de origen. Esta lista se mantiene actualizada y refleja lo que est&amp;aacute; disponible en cada canal ( &lt;code&gt;release&lt;/code&gt; , &lt;code&gt;beta&lt;/code&gt; y &lt;code&gt;canary&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="0fa8cd77765c3c60ecb4a59d7a68466ab220f46c" translate="yes" xml:space="preserve">
          <source>When a new instance is created, its &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Object.html#method_init&quot;&gt;&lt;code&gt;init()&lt;/code&gt;&lt;/a&gt; method is invoked automatically. This is the ideal place to implement setup required on new instances:</source>
          <target state="translated">Cuando se crea una nueva instancia, su m&amp;eacute;todo &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Object.html#method_init&quot;&gt; &lt;code&gt;init()&lt;/code&gt; &lt;/a&gt; se invoca autom&amp;aacute;ticamente. Este es el lugar ideal para implementar la configuraci&amp;oacute;n requerida en nuevas instancias:</target>
        </trans-unit>
        <trans-unit id="beed679da3967bec2aa8a4351e6a947bbe9c786f" translate="yes" xml:space="preserve">
          <source>When a record is already available in the store and is requested again via &lt;code&gt;store.findRecord&lt;/code&gt;, and &lt;code&gt;reload&lt;/code&gt; is not specified as an option in the request, this method is called to determine whether the record should be reloaded prior to returning the result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75a68293b40ec67aa969d2056c5f58a41c78b1dc" translate="yes" xml:space="preserve">
          <source>When a record is already available in the store and is requested again via &lt;code&gt;store.findRecord&lt;/code&gt;, and the record does not need to be reloaded prior to return, this method provides the ability to specify whether a refresh of the data for the reload should be scheduled to occur in the background.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="127d57cd6a4f7c4d5d0a4aea37c60c45b1da2f9e" translate="yes" xml:space="preserve">
          <source>When a request errors and your adapter does not have the ability to recover from the error, you may either reject the promise returned by your adapter method with the error or simply throw the error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d1543fb4b5b015042457ca87160036d3cc4c7f9" translate="yes" xml:space="preserve">
          <source>When a transition is attempted, whether via &lt;code&gt;&amp;lt;LinkTo /&amp;gt;&lt;/code&gt;, &lt;code&gt;transitionTo&lt;/code&gt;, or a URL change, a &lt;code&gt;willTransition&lt;/code&gt; action is fired on the currently active routes. This gives each active route, starting with the leaf-most route, the opportunity to decide whether or not the transition should occur.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd147475ad0e68eacc33463a5ee33c1accb6a4b3" translate="yes" xml:space="preserve">
          <source>When a transition is attempted, whether via &lt;code&gt;{{link-to}}&lt;/code&gt;, &lt;code&gt;transitionTo&lt;/code&gt;, or a URL change, a &lt;code&gt;willTransition&lt;/code&gt; action is fired on the currently active routes. This gives each active route, starting with the leaf-most route, the opportunity to decide whether or not the transition should occur.</source>
          <target state="translated">Cuando se intenta una transici&amp;oacute;n, ya sea a trav&amp;eacute;s de &lt;code&gt;{{link-to}}&lt;/code&gt; , &lt;code&gt;transitionTo&lt;/code&gt; o un cambio de URL, se &lt;code&gt;willTransition&lt;/code&gt; una acci&amp;oacute;n willTransition en las rutas activas actualmente. Esto le da a cada ruta activa, comenzando con la ruta con m&amp;aacute;s hojas, la oportunidad de decidir si la transici&amp;oacute;n debe ocurrir o no.</target>
        </trans-unit>
        <trans-unit id="c05f72b55c08ef694a24c0fa35fd9f01a8e3123a" translate="yes" xml:space="preserve">
          <source>When a user comments on a blogPost, we need to create a relationship between the two records. We can simply set the &lt;code&gt;belongsTo&lt;/code&gt; relationship in our new comment:</source>
          <target state="translated">Cuando un usuario comenta en un blogPost, necesitamos crear una relaci&amp;oacute;n entre los dos registros. Simplemente podemos establecer la relaci&amp;oacute;n &lt;code&gt;belongsTo&lt;/code&gt; en nuestro nuevo comentario:</target>
        </trans-unit>
        <trans-unit id="9ba430c40dea9616974d43b1952ac6c52744bd7a" translate="yes" xml:space="preserve">
          <source>When a user navigates to &lt;code&gt;/posts&lt;/code&gt;, the contents of &lt;code&gt;index.hbs&lt;/code&gt; will be rendered. This is similar to a user navigating to the child route of &lt;code&gt;/posts&lt;/code&gt;. &lt;code&gt;/posts/index&lt;/code&gt; is child route like &lt;code&gt;/posts/comments&lt;/code&gt; or &lt;code&gt;/posts/likes&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3a8ee7ab3a1dca16668aeae3dae6013c870afab" translate="yes" xml:space="preserve">
          <source>When a user visits a link to your application, they will be automatically upgraded or downgraded to the appropriate &lt;code&gt;Location&lt;/code&gt; class, with the URL transformed accordingly, if needed.</source>
          <target state="translated">Cuando un usuario visita un enlace a su aplicaci&amp;oacute;n, se actualizar&amp;aacute; o degradar&amp;aacute; autom&amp;aacute;ticamente a la clase de &lt;code&gt;Location&lt;/code&gt; adecuada , con la URL transformada en consecuencia, si es necesario.</target>
        </trans-unit>
        <trans-unit id="c5b7b2935359609128d898dfd758ea026ebff970" translate="yes" xml:space="preserve">
          <source>When a value is used as a helper in a template, the helper manager is looked up on the object by walking up its prototype chain and finding the first helper manager. This manager then receives the value and can create and manage an instance of a helper from it. This provides a layer of indirection that allows users to design high-level helper APIs, without Ember needing to worry about the details. High-level APIs can be experimented with and iterated on while the core of Ember helpers remains stable, and new APIs can be introduced gradually over time to existing code bases.</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
