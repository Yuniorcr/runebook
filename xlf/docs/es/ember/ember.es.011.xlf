<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="ember">
    <body>
      <group id="ember">
        <trans-unit id="b3574b2926fe15aafef3260a4a723fa086d31dd5" translate="yes" xml:space="preserve">
          <source>When a view has children, didInsertElement will be called on the child view(s) first and on itself afterwards.</source>
          <target state="translated">Cuando una vista tiene niños,didInsertElement será llamado en la vista del niño primero y en sí mismo después.</target>
        </trans-unit>
        <trans-unit id="49c06a37629c59003868c8a0bc648b0f1c0197c9" translate="yes" xml:space="preserve">
          <source>When accessing &lt;code&gt;foo.bar.slow-model&lt;/code&gt; route then Ember will alternate trying to find a &lt;code&gt;routeName-loading&lt;/code&gt; or &lt;code&gt;loading&lt;/code&gt; template in the hierarchy starting with &lt;code&gt;foo.bar.slow-model-loading&lt;/code&gt;:</source>
          <target state="translated">Al acceder &lt;code&gt;foo.bar.slow-model&lt;/code&gt; ruta foo.bar.slow-model , Ember alternar&amp;aacute; tratando de encontrar una &lt;code&gt;routeName-loading&lt;/code&gt; o de &lt;code&gt;loading&lt;/code&gt; routeName en la jerarqu&amp;iacute;a comenzando con &lt;code&gt;foo.bar.slow-model-loading&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="cd0ef1f1bd292918a7ce621fab2f4beb9dde4995" translate="yes" xml:space="preserve">
          <source>When accessing &lt;code&gt;foo.bar&lt;/code&gt; route then Ember will search for:</source>
          <target state="translated">Al acceder a la ruta &lt;code&gt;foo.bar&lt;/code&gt; , Ember buscar&amp;aacute;:</target>
        </trans-unit>
        <trans-unit id="0ce6f96752e30d6a16af1ccdc704c679c3348a78" translate="yes" xml:space="preserve">
          <source>When accessing &lt;code&gt;user.about.slow-model&lt;/code&gt; route then Ember will alternate trying to find a &lt;code&gt;routeName-loading&lt;/code&gt; or &lt;code&gt;loading&lt;/code&gt; template in the hierarchy starting with &lt;code&gt;user.about.slow-model-loading&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7e8263fc574bf9de64a4e3fe8465c1d59fe3559" translate="yes" xml:space="preserve">
          <source>When accessing &lt;code&gt;user.about&lt;/code&gt; route then Ember will search for:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="882caebd850e5a1a77427d14c6bf02858f2b5135" translate="yes" xml:space="preserve">
          <source>When accessing and updating plain properties on objects without decorators</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b6d1c5bcfcade4a3672cbc4cb82d989ed22cc24" translate="yes" xml:space="preserve">
          <source>When accessing the properties of an object, use the &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Object.html#method_get&quot;&gt;&lt;code&gt;get()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Object.html#method_set&quot;&gt;&lt;code&gt;set()&lt;/code&gt;&lt;/a&gt; accessor methods:</source>
          <target state="translated">Al acceder a las propiedades de un objeto, utilice los m&amp;eacute;todos de acceso &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Object.html#method_get&quot;&gt; &lt;code&gt;get()&lt;/code&gt; &lt;/a&gt; y &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Object.html#method_set&quot;&gt; &lt;code&gt;set()&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="e9cc0315c39e8cb28c4ae2782cceccadef8cfb5f" translate="yes" xml:space="preserve">
          <source>When attempting to transition into a route, any of the hooks may return a promise that rejects, at which point an &lt;code&gt;error&lt;/code&gt; action will be fired on the partially-entered routes, allowing for per-route error handling logic, or shared error handling logic defined on a parent route.</source>
          <target state="translated">Al intentar realizar la transici&amp;oacute;n a una ruta, cualquiera de los ganchos puede devolver una promesa que rechaza, momento en el que se activar&amp;aacute; una acci&amp;oacute;n de &lt;code&gt;error&lt;/code&gt; en las rutas ingresadas parcialmente, lo que permitir&amp;aacute; una l&amp;oacute;gica de manejo de errores por ruta o una l&amp;oacute;gica de manejo de errores compartida definida en una ruta principal.</target>
        </trans-unit>
        <trans-unit id="1a953c385d2c1e27258913fe3bc4288bf340afce" translate="yes" xml:space="preserve">
          <source>When called by &lt;code&gt;RESTAdapter.findMany()&lt;/code&gt; the &lt;code&gt;id&lt;/code&gt; and &lt;code&gt;snapshot&lt;/code&gt; parameters will be arrays of ids and snapshots.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f61670b164652f8ae173d35005c925da03450e9e" translate="yes" xml:space="preserve">
          <source>When called by RESTAdapter.findMany() the &lt;code&gt;id&lt;/code&gt; and &lt;code&gt;snapshot&lt;/code&gt; parameters will be arrays of ids and snapshots.</source>
          <target state="translated">Cuando es llamado por RESTAdapter.findMany (), los par&amp;aacute;metros de &lt;code&gt;id&lt;/code&gt; y &lt;code&gt;snapshot&lt;/code&gt; ser&amp;aacute;n matrices de identificadores e instant&amp;aacute;neas.</target>
        </trans-unit>
        <trans-unit id="6c1b7cbdab681ec7ffda064821fee573e9eb33af" translate="yes" xml:space="preserve">
          <source>When called by the EmbeddedRecordsMixin this param will be the property at which the object provided as rawPayload was found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcc4a2dce291297e7211d52eab31b0e3641721fd" translate="yes" xml:space="preserve">
          <source>When considering an application's page or view structure, there are a few primary concerns that should be planned for:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94bfc77978d0bacc6f9ffec5d288a4472ea7d962" translate="yes" xml:space="preserve">
          <source>When content is passed in mustaches &lt;code&gt;{{}}&lt;/code&gt;, Ember will first try to find a helper or component with that name. For example, the &lt;code&gt;if&lt;/code&gt; helper:</source>
          <target state="translated">Cuando el contenido se pasa en bigotes &lt;code&gt;{{}}&lt;/code&gt; , Ember primero intentar&amp;aacute; encontrar un ayudante o componente con ese nombre. Por ejemplo, el ayudante &lt;code&gt;if&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="bcfed6592b582c45fb243ba21f9e2f896fe61578" translate="yes" xml:space="preserve">
          <source>When crafting an accessible component, the first and most important thing is that the component should render valid HTML.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67cc7ba0bf3e132da328fe90231204bd0c1537bc" translate="yes" xml:space="preserve">
          <source>When creating a custom serializer you will need to define a &lt;a href=&quot;http://emberjs.com/api/data/classes/DS.Serializer.html#method_normalizeResponse&quot;&gt;normalizeResponse&lt;/a&gt; method to transform the response from the adapter into the normalized JSON object described above.</source>
          <target state="translated">Al crear un serializador personalizado, deber&amp;aacute; definir un m&amp;eacute;todo &lt;a href=&quot;http://emberjs.com/api/data/classes/DS.Serializer.html#method_normalizeResponse&quot;&gt;normalizeResponse&lt;/a&gt; para transformar la respuesta del adaptador en el objeto JSON normalizado descrito anteriormente.</target>
        </trans-unit>
        <trans-unit id="9fcaf79026569d9bae4f21e18f5445bf453e0e34" translate="yes" xml:space="preserve">
          <source>When creating a custom serializer you will need to define a &lt;a href=&quot;https://api.emberjs.com/ember-data/release/classes/Serializer/methods#normalizeResponse&quot;&gt;normalizeResponse&lt;/a&gt; method to transform the response from the adapter into the normalized JSON object described above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8969f49a7e609386d366ca2e4ea2a415a3ba9385" translate="yes" xml:space="preserve">
          <source>When creating an instance, you can initialize the values of its properties by passing an optional hash to the &lt;code&gt;create()&lt;/code&gt; method:</source>
          <target state="translated">Al crear una instancia, puede inicializar los valores de sus propiedades pasando un hash opcional al m&amp;eacute;todo &lt;code&gt;create()&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="629ef5bec9f779ee35cd16bb47920afce843b83d" translate="yes" xml:space="preserve">
          <source>When defining a subclass, you can override methods but still access the implementation of your parent class by calling the special &lt;code&gt;_super()&lt;/code&gt; method:</source>
          <target state="translated">Al definir una subclase, puede anular m&amp;eacute;todos pero a&amp;uacute;n acceder a la implementaci&amp;oacute;n de su clase principal llamando al &lt;code&gt;_super()&lt;/code&gt; especial _super () :</target>
        </trans-unit>
        <trans-unit id="32e3cf4f0e55bc2c0d67db28e65a276ca7469b19" translate="yes" xml:space="preserve">
          <source>When designing components &lt;code&gt;{{yield}}&lt;/code&gt; is used to denote where, inside the component's template, an optional block passed to the component should render:</source>
          <target state="translated">Cuando se dise&amp;ntilde;an componentes, &lt;code&gt;{{yield}}&lt;/code&gt; se usa para indicar d&amp;oacute;nde, dentro de la plantilla del componente, un bloque opcional pasado al componente deber&amp;iacute;a representar:</target>
        </trans-unit>
        <trans-unit id="06d89f7d8497324847d158c70e091e88066ecc74" translate="yes" xml:space="preserve">
          <source>When extending a class, if you define a &lt;code&gt;constructor&lt;/code&gt; function you &lt;em&gt;must&lt;/em&gt; call &lt;code&gt;super&lt;/code&gt; in the constructor, and you must do it &lt;em&gt;before&lt;/em&gt; you access the class with &lt;code&gt;this&lt;/code&gt;. This will call the parent class's constructor, ensuring that the class is setup properly:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c49adc628d88d9b445cad3bd2bbbb37405283bda" translate="yes" xml:space="preserve">
          <source>When generating a link you might want to set additional attributes for it. You can do this with additional arguments to the &lt;code&gt;link-to&lt;/code&gt; component:</source>
          <target state="translated">Al generar un enlace, es posible que desee establecer atributos adicionales para &amp;eacute;l. Puede hacer esto con argumentos adicionales &lt;code&gt;link-to&lt;/code&gt; componente de enlace :</target>
        </trans-unit>
        <trans-unit id="c06ab6e43f021e006637fdd91a15539cd41a60c1" translate="yes" xml:space="preserve">
          <source>When generating a link, you may want to customize its HTML attributes. For example, it is quite common to want to add additional CSS classes to the generated link tag, or specifying the appropriate ARIA attributes. You can simply pass them along with the invocation:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="737a131d7c82a11e0b927b79503d079fd017beb5" translate="yes" xml:space="preserve">
          <source>When given a deserialized value from a record attribute this method must return the serialized value.</source>
          <target state="translated">Cuando se le da un valor deserializado de un atributo de registro,este método debe devolver el valor serializado.</target>
        </trans-unit>
        <trans-unit id="f556ea33c97aa3ae15eedf7ba4b91c387cccf06f" translate="yes" xml:space="preserve">
          <source>When given a serialize value from a JSON object this method must return the deserialized value for the record attribute.</source>
          <target state="translated">Cuando se le da un valor de serialización de un objeto JSON,este método debe devolver el valor deserializado para el atributo de registro.</target>
        </trans-unit>
        <trans-unit id="c0faaee05c7bc6ec598ae7e1c1749a947c9b3b41" translate="yes" xml:space="preserve">
          <source>When given a serialized value from a JSON object this method must return the deserialized value for the record attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c613241657f144b43e1d69ef2e6270883c2e419c" translate="yes" xml:space="preserve">
          <source>When implementing an action on a component that will be handled outside the component, you need to break it down into two steps:</source>
          <target state="translated">Cuando se implementa una acción en un componente que se manejará fuera del componente,es necesario dividirla en dos pasos:</target>
        </trans-unit>
        <trans-unit id="9acef1ebdad92c03cd3e67e3863cc13b2e5b9680" translate="yes" xml:space="preserve">
          <source>When invoked as &lt;code&gt;this.args.select('foo')&lt;/code&gt; the &lt;code&gt;handleSelected&lt;/code&gt; function will receive the &lt;code&gt;item&lt;/code&gt; from the loop as its first argument and the string &lt;code&gt;'foo'&lt;/code&gt; as its second argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="037b147003e32634f750fe6995278230a5555141" translate="yes" xml:space="preserve">
          <source>When invoked as &lt;code&gt;this.args.select()&lt;/code&gt; the &lt;code&gt;handleSelected&lt;/code&gt; function will receive the &lt;code&gt;item&lt;/code&gt; from the loop as its first and only argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7b5cdc7fc3faa0d325d40b98bc11a11b02c81b9" translate="yes" xml:space="preserve">
          <source>When invoked with &lt;code&gt;{{input type=&quot;text&quot;}}&lt;/code&gt;, you can only customize these attributes. When invoked with &lt;code&gt;&amp;lt;Input @type=&quot;text&quot; /&amp;gt;&lt;/code&gt;, you can just use HTML attributes directly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8880861238ebf7bfb4ceb8ef4f63189eb5c469b6" translate="yes" xml:space="preserve">
          <source>When invoked with angle bracket invocation, this list is irrelevant, because you can use HTML attribute syntax to customize the element (i.e. &lt;code&gt;&amp;lt;Input @type=&quot;checkbox&quot; disabled data-custom=&quot;custom value&quot; /&amp;gt;&lt;/code&gt;). However, &lt;code&gt;@type&lt;/code&gt; and &lt;code&gt;@checked&lt;/code&gt; must be passed as named arguments, not attributes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b65b9705f603d537afcfaf86b5e4a45abf18361b" translate="yes" xml:space="preserve">
          <source>When invoked with curly braces, this is the exhaustive list of HTML attributes you can customize (i.e. &lt;code&gt;{{input type=&quot;checkbox&quot; disabled=true}}&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c32b666ae0439c9a75e4acaa0445cd6a383edfd9" translate="yes" xml:space="preserve">
          <source>When invoked, this component would produce output that looks something like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16e943d12ae84c8eb4c17004cacd8b76a8f5bb87" translate="yes" xml:space="preserve">
          <source>When isEnabled is &lt;code&gt;false&lt;/code&gt;, the resulting HTML representation looks like this:</source>
          <target state="translated">Cuando isEnabled es &lt;code&gt;false&lt;/code&gt; , la representaci&amp;oacute;n HTML resultante se ve as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="e97d82d1f3c81569a0aa8fea835926d752783566" translate="yes" xml:space="preserve">
          <source>When not using &lt;code&gt;ember-data&lt;/code&gt; as a dependency but instead using EmberData via declaring specific &lt;code&gt;@ember-data/&amp;lt;package&amp;gt;&lt;/code&gt; dependencies the default is to not ship to production.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f7ad03a428d9e60bd1dc2bca95ce588addb93c7" translate="yes" xml:space="preserve">
          <source>When overriding this class, it is important to place the call to &lt;code&gt;_super&lt;/code&gt;&lt;em&gt;after&lt;/em&gt; setting &lt;code&gt;content&lt;/code&gt; so the internal observers have a chance to fire properly:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4021a93e58c670b29a51e69f32556a4bf0a5be0a" translate="yes" xml:space="preserve">
          <source>When passed as an argument, the &lt;code&gt;set&lt;/code&gt; function should accept two parameters, &lt;code&gt;key&lt;/code&gt; and &lt;code&gt;value&lt;/code&gt;. The value returned from &lt;code&gt;set&lt;/code&gt; will be the new value of the property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be9f52df4b84ed3568d481d0f3aff01548ce00e8" translate="yes" xml:space="preserve">
          <source>When passing a &lt;code&gt;@model&lt;/code&gt; object to the &lt;code&gt;&amp;lt;LinkTo /&amp;gt;&lt;/code&gt; component, that single model object will be used to populate the innermost dynamic segment. In this case, that would be &lt;code&gt;:comment_id&lt;/code&gt;. The &lt;code&gt;:photo_id&lt;/code&gt; will be inferred from the current URL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1bbd4979c7ddff43d60230588187d803ea3119e" translate="yes" xml:space="preserve">
          <source>When passing a literal JavaScript value to a component, we have to wrap the value in double curlies (e.g. &lt;code&gt;@isActive={{true}}&lt;/code&gt;). A value that isn't wrapped in curlies is assigned as string, which matches the behavior in HTML attributes. For example, writing &lt;code&gt;@isActive=true&lt;/code&gt; will set &lt;code&gt;@isActive&lt;/code&gt; to the string &lt;code&gt;'true'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f5746bf5674b7a6e94193ad78f43b6a7a96710e" translate="yes" xml:space="preserve">
          <source>When passing named blocks, you must name every block, including the &lt;code&gt;default&lt;/code&gt; block, which is the block that is defined if you do not pass a &lt;code&gt;to&lt;/code&gt; parameter to &lt;code&gt;{{yield}}&lt;/code&gt;. Whenever you invoke a component without passing explicitly named blocks, the passed block is considered the &lt;code&gt;default&lt;/code&gt; block.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78e82097c98658977921a1d04c725caa5e546086" translate="yes" xml:space="preserve">
          <source>When rejecting a &lt;code&gt;createRecord&lt;/code&gt; request due to validation issues during save (typically a 422 status code), you may throw an &lt;code&gt;InvalidError&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab879db9ef2c681e63a6ee1bef82393cf1a9c0ef" translate="yes" xml:space="preserve">
          <source>When related to JavaScript, this can be part of your build process which &quot;transpiles&quot; (converts) your ES6 syntax JavaScript to JavaScript that is supported by current browsers.</source>
          <target state="translated">Cuando se relaciona con JavaScript,esto puede ser parte de su proceso de construcción que &quot;transpone&quot; (convierte)su sintaxis ES6 JavaScript a JavaScript que es soportado por los navegadores actuales.</target>
        </trans-unit>
        <trans-unit id="7b4489e5269dceb9416fcd716acc1fbaa9f0085d" translate="yes" xml:space="preserve">
          <source>When rendered the component will iterate through the given list and apply a class to the one that is selected.</source>
          <target state="translated">Cuando se renderice el componente iterará a través de la lista dada y aplicará una clase a la que se seleccione.</target>
        </trans-unit>
        <trans-unit id="e18069510c43dbb959decfa9fa3c0aee11bcf360" translate="yes" xml:space="preserve">
          <source>When requesting a record, the &lt;code&gt;JSONAPISerializer&lt;/code&gt; expects your server to return a JSON representation of the record that conforms to the following conventions.</source>
          <target state="translated">Al solicitar un registro, &lt;code&gt;JSONAPISerializer&lt;/code&gt; espera que su servidor devuelva una representaci&amp;oacute;n JSON del registro que cumpla con las siguientes convenciones.</target>
        </trans-unit>
        <trans-unit id="5b53e9923f14ba529f6f541ccedf15c4fb777656" translate="yes" xml:space="preserve">
          <source>When serialized:</source>
          <target state="translated">Cuando se serializa:</target>
        </trans-unit>
        <trans-unit id="1b5406273aa018125a1167e0f20f46563a5021ba" translate="yes" xml:space="preserve">
          <source>When serializing an embedded record, modify the property (in the &lt;code&gt;JSON&lt;/code&gt; payload) that refers to the parent record (foreign key for the relationship).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c42bfbe08862184e760e361fe6fe0cf4dac47793" translate="yes" xml:space="preserve">
          <source>When serializing an embedded record, modify the property (in the json payload) that refers to the parent record (foreign key for relationship).</source>
          <target state="translated">Cuando serialice un registro incrustado,modifique la propiedad (en la carga útil json)que se refiere al registro padre (clave foránea para la relación).</target>
        </trans-unit>
        <trans-unit id="e1d5ff38013bca2fb71a004b87802e3240358850" translate="yes" xml:space="preserve">
          <source>When set to a quoted string, these value will be directly applied to the HTML element. When left unquoted, these values will be bound to a property on the template's current rendering context (most typically a controller instance).</source>
          <target state="translated">Cuando se establece en una cadena de citas,estos valores se aplicarán directamente al elemento HTML.Cuando se dejan sin citar,estos valores estarán vinculados a una propiedad en el contexto de renderización actual de la plantilla (lo más típico es una instancia de controlador).</target>
        </trans-unit>
        <trans-unit id="3d35543d61d259c1518cf1f54cb195d4215500dd" translate="yes" xml:space="preserve">
          <source>When set to a quoted string, these values will be directly applied to the HTML element. When left unquoted, these values will be bound to a property on the template's current rendering context (most typically a controller instance). A very common use of this helper is to bind the &lt;code&gt;value&lt;/code&gt; of an input to an Object's attribute:</source>
          <target state="translated">Cuando se establece en una cadena entre comillas, estos valores se aplicar&amp;aacute;n directamente al elemento HTML. Cuando no se citan, estos valores se vincular&amp;aacute;n a una propiedad en el contexto de representaci&amp;oacute;n actual de la plantilla (por lo general, una instancia de controlador). Un uso muy com&amp;uacute;n de este ayudante es vincular el &lt;code&gt;value&lt;/code&gt; de una entrada al atributo de un objeto:</target>
        </trans-unit>
        <trans-unit id="8b9798d11dd3aaa504b4db7065ac03233b986212" translate="yes" xml:space="preserve">
          <source>When should we create a Controller?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de13c0bc4d28ce6706298017469d7c23f469a9ab" translate="yes" xml:space="preserve">
          <source>When someone says they are &quot;upgrading&quot; their Ember app, it could mean one of several things, especially if they say that they are &quot;upgrading to Octane.&quot; This Guide will help fill in the blanks about how to upgrade your app's version, get access to the latest and greatest features, and form a strategy for using Octane's features in your existing apps.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1257dc65835687a4870676193b5e4494accdaab" translate="yes" xml:space="preserve">
          <source>When specifying irregular inflection rules for compound words, only the final word or phrase should be specified. For example, to specify the plural of &lt;code&gt;redCow&lt;/code&gt; as &lt;code&gt;redKine&lt;/code&gt; or &lt;code&gt;red-cow&lt;/code&gt; as &lt;code&gt;red-kine&lt;/code&gt;, only the final word segments &lt;code&gt;cow&lt;/code&gt; and &lt;code&gt;kine&lt;/code&gt; should be specified:</source>
          <target state="translated">Al especificar reglas de inflexi&amp;oacute;n irregular para palabras compuestas, solo se debe especificar la palabra o frase final. Por ejemplo, para especificar el plural de &lt;code&gt;redCow&lt;/code&gt; como &lt;code&gt;redKine&lt;/code&gt; o &lt;code&gt;red-cow&lt;/code&gt; como &lt;code&gt;red-kine&lt;/code&gt; , solo se deben especificar los segmentos de palabras finales &lt;code&gt;cow&lt;/code&gt; y &lt;code&gt;kine&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="200f4f9f7ce290eb95d22b652a4a6fbc84942851" translate="yes" xml:space="preserve">
          <source>When the $.getJSON completes, and the promise is fulfilled with json, the life cycle attributes will update accordingly. Note that $.getJSON doesn't return an ECMA specified promise, it is useful to wrap this with an &lt;code&gt;RSVP.resolve&lt;/code&gt; so that it behaves as a spec compliant promise.</source>
          <target state="translated">Cuando se complete $ .getJSON y se cumpla la promesa con json, los atributos del ciclo de vida se actualizar&amp;aacute;n en consecuencia. Tenga en cuenta que $ .getJSON no devuelve una promesa especificada por ECMA, es &amp;uacute;til envolver esto con un &lt;code&gt;RSVP.resolve&lt;/code&gt; para que se comporte como una promesa que cumpla con las especificaciones.</target>
        </trans-unit>
        <trans-unit id="db724274ad80fa479002697ccf6ba5ae02e5c9da" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;isEnabled&lt;/code&gt; property on the component is set to &lt;code&gt;false&lt;/code&gt;, it will result in component instances with an HTML representation of:</source>
          <target state="translated">Cuando la propiedad &lt;code&gt;isEnabled&lt;/code&gt; en el componente se establece en &lt;code&gt;false&lt;/code&gt; , dar&amp;aacute; como resultado instancias de componente con una representaci&amp;oacute;n HTML de:</target>
        </trans-unit>
        <trans-unit id="d6d0401c7961026a9b638e98fa33e76b410ee474" translate="yes" xml:space="preserve">
          <source>When the API returns a deeply nested, read-only object or array, there is no need to create multiple models with &lt;code&gt;attr('hasMany')&lt;/code&gt; or &lt;code&gt;attr('belongsTo')&lt;/code&gt; relationships. This could result in a potentially large amount of unnecessary code. You can access these objects in the template without transforming them. This can be done by using &lt;code&gt;@attr&lt;/code&gt; without specifying a transform:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcc2f990e87dfce3d7bb566e548f6011fae730cb" translate="yes" xml:space="preserve">
          <source>When the component receives a browser &lt;code&gt;click&lt;/code&gt; event it translate this interaction into application-specific semantics (&quot;play&quot; or &quot;stop&quot;) and calls the specified action.</source>
          <target state="translated">Cuando el componente recibe un evento de &lt;code&gt;click&lt;/code&gt; navegador , traduce esta interacci&amp;oacute;n en sem&amp;aacute;ntica espec&amp;iacute;fica de la aplicaci&amp;oacute;n (&quot;reproducir&quot; o &quot;detener&quot;) y llama a la acci&amp;oacute;n especificada.</target>
        </trans-unit>
        <trans-unit id="802e6a6fdc8c31a6f424af739adb7e743bd5f96f" translate="yes" xml:space="preserve">
          <source>When the execution of the test come upon &lt;code&gt;await pauseTest()&lt;/code&gt;, the test will be paused, allowing you to inspect the state of your application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c2f01551c9eb0d7b46f1718e744f4b8346158e1" translate="yes" xml:space="preserve">
          <source>When the generated link matches the current URL, then the generated link tag will be given the &lt;code&gt;active&lt;/code&gt; CSS class. For example, if you were at the URL &lt;code&gt;/photos/2&lt;/code&gt;, the first example above would render as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca44dc1d49027785453efc416cdd9ffeeaf2c088" translate="yes" xml:space="preserve">
          <source>When the parameter passed to &lt;code&gt;{{component}}&lt;/code&gt; evaluates to &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt;, the helper renders nothing. When the parameter changes, the currently rendered component is destroyed and the new component is created and brought in.</source>
          <target state="translated">Cuando el par&amp;aacute;metro pasado a &lt;code&gt;{{component}}&lt;/code&gt; eval&amp;uacute;a como &lt;code&gt;null&lt;/code&gt; o &lt;code&gt;undefined&lt;/code&gt; , el asistente no muestra nada. Cuando el par&amp;aacute;metro cambia, el componente actualmente renderizado se destruye y el nuevo componente se crea y se incorpora.</target>
        </trans-unit>
        <trans-unit id="69891a73072830b84004f75bf79c7ad40ccf000a" translate="yes" xml:space="preserve">
          <source>When the record is in the &lt;code&gt;invalid&lt;/code&gt; state this object will contain any errors returned by the adapter. When present the errors hash contains keys corresponding to the invalid property names and values which are arrays of Javascript objects with two keys:</source>
          <target state="translated">Cuando el registro est&amp;aacute; en el estado &lt;code&gt;invalid&lt;/code&gt; , este objeto contendr&amp;aacute; cualquier error devuelto por el adaptador. Cuando est&amp;aacute; presente, el hash de errores contiene claves correspondientes a los nombres y valores de propiedad no v&amp;aacute;lidos que son matrices de objetos Javascript con dos claves:</target>
        </trans-unit>
        <trans-unit id="910e4b3f4e1b0beb887c640eabd243e5e37d67a6" translate="yes" xml:space="preserve">
          <source>When the rendered link matches the current route, and the same object instance is passed into the component, then the link is given &lt;code&gt;class=&quot;active&quot;&lt;/code&gt;. For example, if you were at the URL &lt;code&gt;/photos/2&lt;/code&gt;, the first example above would render as:</source>
          <target state="translated">Cuando el enlace renderizado coincide con la ruta actual y se pasa la misma instancia de objeto al componente, el enlace recibe &lt;code&gt;class=&quot;active&quot;&lt;/code&gt; . Por ejemplo, si estuviera en la URL &lt;code&gt;/photos/2&lt;/code&gt; , el primer ejemplo anterior se representar&amp;iacute;a como:</target>
        </trans-unit>
        <trans-unit id="f75ec6efbd86187d1ba1bbc975719ebcc18344fd" translate="yes" xml:space="preserve">
          <source>When the service calls &lt;code&gt;createMap&lt;/code&gt; on our fake utility, we will run asserts to validate that it is called. In our first test notice that we expect four asserts to be run in line 17. Two of the asserts run in the test function, while the other two are run when &lt;code&gt;createMap&lt;/code&gt; is called.</source>
          <target state="translated">Cuando el servicio llame a &lt;code&gt;createMap&lt;/code&gt; en nuestra utilidad falsa, ejecutaremos asserts para validar que se llama. En nuestro primer aviso de prueba, esperamos que se ejecuten cuatro afirmaciones en la l&amp;iacute;nea 17. Dos de las afirmaciones se ejecutan en la funci&amp;oacute;n de prueba, mientras que las otras dos se ejecutan cuando se llama a &lt;code&gt;createMap&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="108007b01845a79b9a5fc32d544de5f859ea0b01" translate="yes" xml:space="preserve">
          <source>When the store decides it needs to issue a request it uses the following flow to manage the request and process the data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b226ee62e56c802087139eda0a022284a8a1d434" translate="yes" xml:space="preserve">
          <source>When the user clicks on a &lt;code&gt;&amp;lt;LinkTo /&amp;gt;&lt;/code&gt; component, or when the app initiates a transition by using &lt;code&gt;transitionTo&lt;/code&gt;, the transition will be aborted and the URL will remain unchanged. However, if the browser back button is used to navigate away from &lt;code&gt;route:form&lt;/code&gt;, or if the user manually changes the URL, the new URL will be navigated to before the &lt;code&gt;willTransition&lt;/code&gt; action is called. This will result in the browser displaying the new URL, even if &lt;code&gt;willTransition&lt;/code&gt; calls &lt;code&gt;transition.abort()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47be05244c78c427307d36b56ede091000647c5b" translate="yes" xml:space="preserve">
          <source>When the user clicks on a &lt;code&gt;{{link-to}}&lt;/code&gt; helper, or when the app initiates a transition by using &lt;code&gt;transitionTo&lt;/code&gt;, the transition will be aborted and the URL will remain unchanged. However, if the browser back button is used to navigate away from &lt;code&gt;route:form&lt;/code&gt;, or if the user manually changes the URL, the new URL will be navigated to before the &lt;code&gt;willTransition&lt;/code&gt; action is called. This will result in the browser displaying the new URL, even if &lt;code&gt;willTransition&lt;/code&gt; calls &lt;code&gt;transition.abort()&lt;/code&gt;.</source>
          <target state="translated">Cuando el usuario hace clic en un asistente de &lt;code&gt;{{link-to}}&lt;/code&gt; , o cuando la aplicaci&amp;oacute;n inicia una transici&amp;oacute;n mediante el uso de &lt;code&gt;transitionTo&lt;/code&gt; , la transici&amp;oacute;n se cancelar&amp;aacute; y la URL permanecer&amp;aacute; sin cambios. Sin embargo, si el bot&amp;oacute;n de retroceso del navegador se usa para navegar fuera de &lt;code&gt;route:form&lt;/code&gt; , o si el usuario cambia manualmente la URL, se navegar&amp;aacute; a la nueva URL antes de que se &lt;code&gt;willTransition&lt;/code&gt; acci&amp;oacute;n willTransition . Esto dar&amp;aacute; como resultado que el navegador muestre la nueva URL, incluso si &lt;code&gt;willTransition&lt;/code&gt; llama a &lt;code&gt;transition.abort()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="71dfb546bbb6e2c55701dea883548b99d3e1c1a1" translate="yes" xml:space="preserve">
          <source>When the user clicks on the link, Ember will run the &lt;code&gt;PhotoEditRoute&lt;/code&gt;'s &lt;code&gt;model&lt;/code&gt; hook with &lt;code&gt;params.photo_id = 1&lt;/code&gt;. On the other hand, if a model object was passed instead of the &lt;code&gt;id&lt;/code&gt;, the model hook will &lt;em&gt;not&lt;/em&gt; run.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d713db9fd7323528ddd7e801c541cd75632cd2ff" translate="yes" xml:space="preserve">
          <source>When the user clicks the button, Ember will invoke the &lt;code&gt;hello&lt;/code&gt; action, passing in the current value of &lt;code&gt;@person.name&lt;/code&gt; as an argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="754546411bff1a05e1e31c84ca8c192c93a9a237" translate="yes" xml:space="preserve">
          <source>When the user enters their message into the input field, the message text will now be available to the component as &lt;code&gt;confirmValue&lt;/code&gt;. Then, once they click the &quot;OK&quot; button, the &lt;code&gt;submitConfirm&lt;/code&gt; action will be triggered, calling &lt;code&gt;onConfirm&lt;/code&gt; with the provided &lt;code&gt;confirmValue&lt;/code&gt;, thus invoking the &lt;code&gt;sendMessage&lt;/code&gt; action in &lt;code&gt;SendMessage&lt;/code&gt; with both the &lt;code&gt;messageType&lt;/code&gt; and &lt;code&gt;messageText&lt;/code&gt; arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daa9e9474c5e33d722a4c88e21c5439b21d7fb3f" translate="yes" xml:space="preserve">
          <source>When the user enters their message into the input field, the message text will now be available to the component as &lt;code&gt;confirmValue&lt;/code&gt;. Then, once they click the &quot;OK&quot; button, the &lt;code&gt;submitConfirm&lt;/code&gt; action will be triggered, calling &lt;code&gt;onConfirm&lt;/code&gt; with the provided &lt;code&gt;confirmValue&lt;/code&gt;, thus invoking the &lt;code&gt;sendMessage&lt;/code&gt; action in &lt;code&gt;send-message&lt;/code&gt; with both the &lt;code&gt;messageType&lt;/code&gt; and &lt;code&gt;messageText&lt;/code&gt; arguments.</source>
          <target state="translated">Cuando el usuario ingresa su mensaje en el campo de entrada, el texto del mensaje ahora estar&amp;aacute; disponible para el componente como &lt;code&gt;confirmValue&lt;/code&gt; . Luego, una vez que &lt;code&gt;submitConfirm&lt;/code&gt; clic en el bot&amp;oacute;n &quot;Aceptar&quot;, se activar&amp;aacute; la acci&amp;oacute;n submitConfirm , llamando a &lt;code&gt;onConfirm&lt;/code&gt; con el &lt;code&gt;confirmValue&lt;/code&gt; proporcionado , invocando as&amp;iacute; la acci&amp;oacute;n &lt;code&gt;sendMessage&lt;/code&gt; en &lt;code&gt;send-message&lt;/code&gt; con los argumentos &lt;code&gt;messageType&lt;/code&gt; y &lt;code&gt;messageText&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c5479643e908ec25266e2a384efb846ce63d8647" translate="yes" xml:space="preserve">
          <source>When the user navigates to &lt;code&gt;/posts/123&lt;/code&gt;, the following markup will be seen:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d948cbfcd074be3456f819e313fbbce25a74e627" translate="yes" xml:space="preserve">
          <source>When the user navigates to &lt;code&gt;/posts/&lt;/code&gt;, the following markup will be seen:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3df28342d1986410e72085932f57cbca9624936" translate="yes" xml:space="preserve">
          <source>When the user types in the text field in our component, the &lt;code&gt;filterByCity&lt;/code&gt; action in the controller is called. This action takes in the &lt;code&gt;value&lt;/code&gt; property, and filters the &lt;code&gt;rental&lt;/code&gt; data for records in data store that match what the user has typed thus far. The result of the query is returned to the caller.</source>
          <target state="translated">Cuando el usuario escribe en el campo de texto de nuestro componente, se &lt;code&gt;filterByCity&lt;/code&gt; acci&amp;oacute;n filterByCity en el controlador. Esta acci&amp;oacute;n toma la propiedad de &lt;code&gt;value&lt;/code&gt; y filtra los datos de &lt;code&gt;rental&lt;/code&gt; para los registros en el almac&amp;eacute;n de datos que coinciden con lo que el usuario ha escrito hasta el momento. El resultado de la consulta se devuelve a la persona que llama.</target>
        </trans-unit>
        <trans-unit id="7c9c7d7cd485062d5a47ad0c7b6ff322528557ce" translate="yes" xml:space="preserve">
          <source>When these arguments are truthy, a class with the same name will be set on the element. When falsy, the associated class will not be on the element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4aa124f295fc64e4184f169a3c3fb81c0cc7fa34" translate="yes" xml:space="preserve">
          <source>When this &lt;code&gt;{{#each}}&lt;/code&gt; re-renders, Ember will match up the previously rendered items (and reorder the generated DOM elements) based on each item's &lt;code&gt;id&lt;/code&gt; property. By default the item's own reference is used.</source>
          <target state="translated">Cuando este &lt;code&gt;{{#each}}&lt;/code&gt; vuelva a renderizarse, Ember har&amp;aacute; coincidir los elementos renderizados previamente (y reordenar&amp;aacute; los elementos DOM generados) seg&amp;uacute;n la propiedad de &lt;code&gt;id&lt;/code&gt; entificaci&amp;oacute;n de cada elemento . Por defecto, se utiliza la propia referencia del art&amp;iacute;culo.</target>
        </trans-unit>
        <trans-unit id="414258534455c22fff5937b4d8b918b7ed1557df" translate="yes" xml:space="preserve">
          <source>When this flag is set to &lt;code&gt;false&lt;/code&gt;, it will disable most browser-specific and interactive features. Specifically:</source>
          <target state="translated">Cuando este indicador se establece en &lt;code&gt;false&lt;/code&gt; , deshabilitar&amp;aacute; la mayor&amp;iacute;a de las funciones interactivas y espec&amp;iacute;ficas del navegador. Espec&amp;iacute;ficamente:</target>
        </trans-unit>
        <trans-unit id="0f0cb82990e3e3942e58065756a33aa424803a07" translate="yes" xml:space="preserve">
          <source>When this flag is set to &lt;code&gt;false&lt;/code&gt;, it will disable the entire rendering pipeline. Essentially, this puts the app into &quot;routing-only&quot; mode. No templates will be rendered, and no Components will be created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bfae607a70d9d6e41ca6254307fd575bc9c2971" translate="yes" xml:space="preserve">
          <source>When this flag is set to &lt;code&gt;true&lt;/code&gt;, it will disable the entire rendering pipeline. Essentially, this puts the app into &quot;routing-only&quot; mode. No templates will be rendered, and no Components will be created.</source>
          <target state="translated">Cuando este indicador se establece en &lt;code&gt;true&lt;/code&gt; , deshabilitar&amp;aacute; toda la canalizaci&amp;oacute;n de renderizado. B&amp;aacute;sicamente, esto pone la aplicaci&amp;oacute;n en modo &quot;solo enrutamiento&quot;. No se procesar&amp;aacute; ninguna plantilla y no se crear&amp;aacute; ning&amp;uacute;n componente.</target>
        </trans-unit>
        <trans-unit id="92ac71d6232739b84008186b97f0bb3cfeede94e" translate="yes" xml:space="preserve">
          <source>When to Use &lt;code&gt;get&lt;/code&gt; and &lt;code&gt;set&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a74b1abe416c6d5e77e77b311275fd417351403e" translate="yes" xml:space="preserve">
          <source>When to use an index route</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0954ef66448702b13b1f4f596e46ba03c440d8c9" translate="yes" xml:space="preserve">
          <source>When transitioning between routes, the Ember router collects all of the models (via the &lt;code&gt;model&lt;/code&gt; hook) that will be passed to the route's controllers at the end of the transition. If the &lt;code&gt;model&lt;/code&gt; hook (or the related &lt;code&gt;beforeModel&lt;/code&gt; or &lt;code&gt;afterModel&lt;/code&gt; hooks) return normal (non-promise) objects or arrays, the transition will complete immediately. But if the &lt;code&gt;model&lt;/code&gt; hook (or the related &lt;code&gt;beforeModel&lt;/code&gt; or &lt;code&gt;afterModel&lt;/code&gt; hooks) returns a promise (or if a promise was provided as an argument to &lt;code&gt;transitionTo&lt;/code&gt;), the transition will pause until that promise fulfills or rejects.</source>
          <target state="translated">Al realizar la transici&amp;oacute;n entre rutas, el enrutador Ember recopila todos los modelos (a trav&amp;eacute;s del gancho de &lt;code&gt;model&lt;/code&gt; o ) que se pasar&amp;aacute;n a los controladores de la ruta al final de la transici&amp;oacute;n. Si el gancho del &lt;code&gt;model&lt;/code&gt; o (o los &lt;code&gt;beforeModel&lt;/code&gt; relacionados beforeModel o &lt;code&gt;afterModel&lt;/code&gt; ) devuelve objetos o matrices normales (no prometidos), la transici&amp;oacute;n se completar&amp;aacute; inmediatamente. Pero si el gancho del &lt;code&gt;model&lt;/code&gt; o (o los &lt;code&gt;beforeModel&lt;/code&gt; relacionados beforeModel o &lt;code&gt;afterModel&lt;/code&gt; ) devuelve una promesa (o si se proporcion&amp;oacute; una promesa como argumento para la &lt;code&gt;transitionTo&lt;/code&gt; ), la transici&amp;oacute;n se detendr&amp;aacute; hasta que esa promesa se cumpla o se rechace.</target>
        </trans-unit>
        <trans-unit id="326ad1f96782a1c63b8f16b55934144907c04aed" translate="yes" xml:space="preserve">
          <source>When transitioning into &lt;code&gt;route:tardy&lt;/code&gt;, the &lt;code&gt;model()&lt;/code&gt; hook will be called and return a promise that won't resolve until 3 seconds later, during which time the router will be paused in mid-transition. When the promise eventually fulfills, the router will continue transitioning and eventually call &lt;code&gt;route:tardy&lt;/code&gt;'s &lt;code&gt;setupController()&lt;/code&gt; hook with the resolved object.</source>
          <target state="translated">Al realizar la transici&amp;oacute;n a &lt;code&gt;route:tardy&lt;/code&gt; , se llamar&amp;aacute; al hook &lt;code&gt;model()&lt;/code&gt; y se devolver&amp;aacute; una promesa que no se resolver&amp;aacute; hasta 3 segundos despu&amp;eacute;s, tiempo durante el cual el enrutador se detendr&amp;aacute; a mitad de la transici&amp;oacute;n. Cuando la promesa eventualmente Cumple, el router continuar&amp;aacute; la transici&amp;oacute;n y, finalmente, llamar &lt;code&gt;route:tardy&lt;/code&gt; 's &lt;code&gt;setupController()&lt;/code&gt; gancho con el objeto resuelto.</target>
        </trans-unit>
        <trans-unit id="c9fd979f8b359618ed351054a1bac137ca9a1a78" translate="yes" xml:space="preserve">
          <source>When transitioning into the linked route, the &lt;code&gt;model&lt;/code&gt; hook will be triggered with parameters including this passed identifier.</source>
          <target state="translated">Al realizar la transici&amp;oacute;n a la ruta vinculada, el gancho del &lt;code&gt;model&lt;/code&gt; o se activar&amp;aacute; con par&amp;aacute;metros que incluyen este identificador pasado.</target>
        </trans-unit>
        <trans-unit id="55f474bfe82a90c4db4a2bdea32190f24985ed84" translate="yes" xml:space="preserve">
          <source>When transitioning to the &lt;code&gt;posts&lt;/code&gt; route if it turns out that there is only one post, the current transition will be aborted in favor of redirecting to the &lt;code&gt;PostRoute&lt;/code&gt; with the single post object being its model.</source>
          <target state="translated">Al realizar la transici&amp;oacute;n a la ruta de &lt;code&gt;posts&lt;/code&gt; , si resulta que solo hay una publicaci&amp;oacute;n, la transici&amp;oacute;n actual se &lt;code&gt;PostRoute&lt;/code&gt; a favor de redirigir a la PostRoute con el objeto de publicaci&amp;oacute;n &amp;uacute;nica como modelo.</target>
        </trans-unit>
        <trans-unit id="dab7e511c3981d00dc6712f7b6fb28a2b4614806" translate="yes" xml:space="preserve">
          <source>When turn into a &lt;code&gt;DS.Errors&lt;/code&gt; object, you can read these errors through the property &lt;code&gt;base&lt;/code&gt;:</source>
          <target state="translated">Cuando se convierte en un objeto &lt;code&gt;DS.Errors&lt;/code&gt; , puede leer estos errores a trav&amp;eacute;s de la &lt;code&gt;base&lt;/code&gt; de propiedades :</target>
        </trans-unit>
        <trans-unit id="3f5ca94071bbcc31456cbc35374b9ae88e40d89c" translate="yes" xml:space="preserve">
          <source>When turn into a &lt;code&gt;Errors&lt;/code&gt; object, you can read these errors through the property &lt;code&gt;base&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="382cd4e5b3f9f91906f6b8e36e5a0e3b22fa2c35" translate="yes" xml:space="preserve">
          <source>When unit tests involve the Ember framework, you must import and call &lt;a href=&quot;https://github.com/emberjs/ember-qunit#setup-tests&quot;&gt;&lt;code&gt;setupTest()&lt;/code&gt;&lt;/a&gt;, then pass the &lt;code&gt;hooks&lt;/code&gt; object. (Don't worry. &lt;a href=&quot;../index#toc_ember-cli&quot;&gt;Ember CLI&lt;/a&gt; will do this for you!)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a88ab2d71dfbf2438d393cbee16eb28b188dc5c0" translate="yes" xml:space="preserve">
          <source>When using &lt;code&gt;JSONAPIAdapter&lt;/code&gt; or &lt;code&gt;RESTAdapter&lt;/code&gt; this method is called by &lt;code&gt;adapter.updateRecord&lt;/code&gt; and &lt;code&gt;adapter.createRecord&lt;/code&gt; if &lt;code&gt;serializer.serializeIntoHash&lt;/code&gt; is implemented. If this method is not implemented, &lt;code&gt;serializer.serialize&lt;/code&gt; will be called in this case.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="185aa64b604fa1154c4c973b9f129cbeb9aa0d43" translate="yes" xml:space="preserve">
          <source>When using &lt;code&gt;JSONAPIAdapter&lt;/code&gt; or &lt;code&gt;RESTAdapter&lt;/code&gt; this method is called by &lt;code&gt;updateRecord&lt;/code&gt; and &lt;code&gt;createRecord&lt;/code&gt; if &lt;code&gt;Serializer.serializeIntoHash&lt;/code&gt; is not implemented.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a98250880f874ebd1eecc0ee1a4a054914231634" translate="yes" xml:space="preserve">
          <source>When using &lt;code&gt;Model&lt;/code&gt;, this method is called by &lt;code&gt;record.serialize()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbc8abbe34689123c1f2f44b325a9263e525b6e0" translate="yes" xml:space="preserve">
          <source>When using &lt;code&gt;ember-data&lt;/code&gt; as a dependency of your app, the default is to ship the inspector support to production.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54ac3414d33d0e54baaec356a6c033a5e5c3841d" translate="yes" xml:space="preserve">
          <source>When using &lt;code&gt;history&lt;/code&gt;, Ember uses the browser's &lt;a href=&quot;http://caniuse.com/history&quot;&gt;history&lt;/a&gt; API to produce URLs with a structure like &lt;code&gt;/posts/new&lt;/code&gt;.</source>
          <target state="translated">Cuando usa el &lt;code&gt;history&lt;/code&gt; , Ember usa la API del &lt;a href=&quot;http://caniuse.com/history&quot;&gt;historial&lt;/a&gt; del navegador para producir URL con una estructura como &lt;code&gt;/posts/new&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9d4812a7e60656de60f3cace49edb1915eec7b7f" translate="yes" xml:space="preserve">
          <source>When using &lt;code&gt;history&lt;/code&gt;, Ember uses the browser's &lt;a href=&quot;https://caniuse.com/history&quot;&gt;history&lt;/a&gt; API to produce URLs with a structure like &lt;code&gt;/posts/new&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfc87c6093c8a5e5b66f6d85e2ece6052e7a48d6" translate="yes" xml:space="preserve">
          <source>When using &lt;code&gt;reopen()&lt;/code&gt;, you can also override existing methods and call &lt;code&gt;this._super&lt;/code&gt;.</source>
          <target state="translated">Al usar &lt;code&gt;reopen()&lt;/code&gt; , tambi&amp;eacute;n puede anular los m&amp;eacute;todos existentes y llamar a &lt;code&gt;this._super&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="94107c5293abdd3822f1c5d3ebecf7fbe8030b63" translate="yes" xml:space="preserve">
          <source>When using Ember's &lt;code&gt;ObjectProxy&lt;/code&gt; class, or a class that implements the &lt;code&gt;unknownProperty&lt;/code&gt; function (which allows objects to intercept &lt;code&gt;get&lt;/code&gt; calls)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="999d888b75b2a4e9d43ee6fa04e18855611d4252" translate="yes" xml:space="preserve">
          <source>When using boolean class name bindings you can supply a string value other than the property name for use as the &lt;code&gt;class&lt;/code&gt; HTML attribute by appending the preferred value after a &quot;:&quot; character when defining the binding:</source>
          <target state="translated">Cuando utilice enlaces de nombre de clase booleanos, puede proporcionar un valor de cadena diferente al nombre de la propiedad para usar como el atributo HTML de la &lt;code&gt;class&lt;/code&gt; a&amp;ntilde;adiendo el valor preferido despu&amp;eacute;s de un car&amp;aacute;cter &quot;:&quot; al definir el enlace:</target>
        </trans-unit>
        <trans-unit id="10b8e278ab8feb8a0ef03e8d7c1bf3f6602dbe5e" translate="yes" xml:space="preserve">
          <source>When using native classes, you should use &lt;code&gt;constructor&lt;/code&gt; instead of the &lt;code&gt;init&lt;/code&gt; function:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29eddbd256c9a4d038cbaddd2fa08b67d30d7481" translate="yes" xml:space="preserve">
          <source>When using the &lt;code&gt;loading&lt;/code&gt; handler, we can make use of the transition promise to know when the loading event is over:</source>
          <target state="translated">Cuando usamos el controlador de &lt;code&gt;loading&lt;/code&gt; , podemos hacer uso de la promesa de transici&amp;oacute;n para saber cu&amp;aacute;ndo finaliza el evento de carga:</target>
        </trans-unit>
        <trans-unit id="a6c48430a9a293345e3d9ee69368fe16ac2c8676" translate="yes" xml:space="preserve">
          <source>When using the &lt;code&gt;model&lt;/code&gt; hook to load data, you can take advantage of other niceties that Ember provides, like &lt;a href=&quot;../preventing-and-retrying-transitions&quot;&gt;automatic route transitions&lt;/a&gt; after the data is returned, &lt;a href=&quot;../loading-and-error-substates&quot;&gt;loading screens, error handling&lt;/a&gt;, and more.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="973a1db91072f1a83c02ac82b964cd612f338be8" translate="yes" xml:space="preserve">
          <source>When using the Ember.js canary or beta builds you can enable a &quot;&lt;strong&gt;present&lt;/strong&gt; but &lt;strong&gt;disabled&lt;/strong&gt;&quot; feature by setting its flag value to &lt;code&gt;true&lt;/code&gt; before your application boots:</source>
          <target state="translated">Al usar las compilaciones canary o beta de Ember.js, puede habilitar una funci&amp;oacute;n &quot; &lt;strong&gt;presente&lt;/strong&gt; pero &lt;strong&gt;deshabilitada&lt;/strong&gt; &quot; estableciendo su valor de &lt;code&gt;true&lt;/code&gt; en verdadero antes de que se inicie la aplicaci&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="30f8fa361b1109345a0cd5b48e882e510d1323dd" translate="yes" xml:space="preserve">
          <source>When using the debugger helper you will have access to a &lt;code&gt;get&lt;/code&gt; function. This function retrieves values available in the context of the template. For example, if you're wondering why a value &lt;code&gt;{{foo}}&lt;/code&gt; isn't rendering as expected within a template, you could place a &lt;code&gt;{{debugger}}&lt;/code&gt; statement and, when the &lt;code&gt;debugger;&lt;/code&gt; breakpoint is hit, you can attempt to retrieve this value:</source>
          <target state="translated">Cuando utilice el ayudante del depurador, tendr&amp;aacute; acceso a una funci&amp;oacute;n de &lt;code&gt;get&lt;/code&gt; . Esta funci&amp;oacute;n recupera los valores disponibles en el contexto de la plantilla. Por ejemplo, si se pregunta por qu&amp;eacute; un valor &lt;code&gt;{{foo}}&lt;/code&gt; no se muestra como se espera dentro de una plantilla, puede colocar una instrucci&amp;oacute;n &lt;code&gt;{{debugger}}&lt;/code&gt; y, cuando el &lt;code&gt;debugger;&lt;/code&gt; se alcanza el punto de interrupci&amp;oacute;n, puede intentar recuperar este valor:</target>
        </trans-unit>
        <trans-unit id="c2cb350c561e05763a31a0ba8aa3a67802b49e73" translate="yes" xml:space="preserve">
          <source>When we call &lt;code&gt;findAll&lt;/code&gt;, Ember Data will attempt to fetch rentals from &lt;code&gt;/api/rentals&lt;/code&gt;. If you recall, in the section titled &lt;a href=&quot;../installing-addons&quot;&gt;Installing Addons&lt;/a&gt; we set up an adapter to route data requests through &lt;code&gt;/api&lt;/code&gt;.</source>
          <target state="translated">Cuando llamamos a &lt;code&gt;findAll&lt;/code&gt; , Ember Data intentar&amp;aacute; obtener alquileres de &lt;code&gt;/api/rentals&lt;/code&gt; . Si recuerda, en la secci&amp;oacute;n titulada &lt;a href=&quot;../installing-addons&quot;&gt;Instalaci&amp;oacute;n de complementos&lt;/a&gt; , configuramos un adaptador para enrutar las solicitudes de datos a trav&amp;eacute;s de &lt;code&gt;/api&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="494e351435f4ac84f243de43fcf3149dde4df7ed" translate="yes" xml:space="preserve">
          <source>When we create a new Ember Project using Ember CLI, it uses the &lt;a href=&quot;https://qunitjs.com/&quot;&gt;&lt;code&gt;QUnit&lt;/code&gt;&lt;/a&gt; JavaScript test framework to define and run tests.</source>
          <target state="translated">Cuando creamos un nuevo proyecto Ember usando Ember CLI, usa el marco de prueba &lt;a href=&quot;https://qunitjs.com/&quot;&gt; &lt;code&gt;QUnit&lt;/code&gt; &lt;/a&gt; JavaScript para definir y ejecutar pruebas.</target>
        </trans-unit>
        <trans-unit id="5eef9cd7a7dd9d3e703ff5dc935b50f0613f4acd" translate="yes" xml:space="preserve">
          <source>When we deploy our app to a production server, we will likely want to replace Mirage with a remote server for Ember Data to communicate with for storing and retrieving persisted data. A remote server will allow for data to be shared and updated across users.</source>
          <target state="translated">Cuando despleguemos nuestra aplicación en un servidor de producción,es probable que queramos reemplazar Mirage con un servidor remoto para que Ember Data se comunique con él para almacenar y recuperar los datos persistentes.Un servidor remoto permitirá que los datos se compartan y se actualicen entre los usuarios.</target>
        </trans-unit>
        <trans-unit id="255f84d9fb219eefbce3ae9ebe6d20a26115fd47" translate="yes" xml:space="preserve">
          <source>When we open the model file, we can see a blank class extending &lt;a href=&quot;http://emberjs.com/api/data/classes/DS.Model.html&quot;&gt;&lt;code&gt;DS.Model&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">Cuando abrimos el archivo del modelo, podemos ver una clase en blanco que extiende &lt;a href=&quot;http://emberjs.com/api/data/classes/DS.Model.html&quot;&gt; &lt;code&gt;DS.Model&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="0b9346e690c11ca7174f94d9d2caae411b966c11" translate="yes" xml:space="preserve">
          <source>When we refer to a &lt;code&gt;record&lt;/code&gt; we refer to a specific class instance presenting the resource data for a given &lt;code&gt;type&lt;/code&gt; and &lt;code&gt;id&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4c0bebfdf80f3b868dc65a78adcef4fa92baaf4" translate="yes" xml:space="preserve">
          <source>When we refer to the &lt;code&gt;ModelClass&lt;/code&gt; we are referring to the class definition and the static schema methods present on it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bef91b1e7258bf1ba0c16492f57c5658c64bdee" translate="yes" xml:space="preserve">
          <source>When we use &lt;code&gt;{{this.count}}&lt;/code&gt; in the component template, we're referring to a property that we defined in the JavaScript class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6a7dc65f4fe216aaa5e48ac14700a9120e984c0" translate="yes" xml:space="preserve">
          <source>When working with a collection of Ember objects, you will often want to filter a set of objects based upon the value of some property. The &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Enumerable.html#method_filterBy&quot;&gt;&lt;code&gt;filterBy()&lt;/code&gt;&lt;/a&gt; method provides a shortcut.</source>
          <target state="translated">Cuando trabaje con una colecci&amp;oacute;n de objetos Ember, a menudo querr&amp;aacute; filtrar un conjunto de objetos seg&amp;uacute;n el valor de alguna propiedad. El m&amp;eacute;todo &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Enumerable.html#method_filterBy&quot;&gt; &lt;code&gt;filterBy()&lt;/code&gt; &lt;/a&gt; proporciona un atajo.</target>
        </trans-unit>
        <trans-unit id="ed6a77ac62cc72ae71a0d92e1cf3a63efea2fc34" translate="yes" xml:space="preserve">
          <source>When writing your tests, you need to be keenly aware of the fact that you cannot be sure that the response will return immediately after you make your requests, therefore your assertion code (the &quot;tester&quot;) needs to wait for the thing being tested (the &quot;testee&quot;) to be in a synchronized state. In the example above, that would be when both servers have responded and the test code can go about its business checking the data (whether it is mock data, or real data).</source>
          <target state="translated">Al redactar sus pruebas,debe tener muy presente el hecho de que no puede estar seguro de que la respuesta vuelva inmediatamente después de hacer sus solicitudes,por lo que su código de afirmación (el &quot;probador&quot;)debe esperar a que la cosa que se está probando (el &quot;probador&quot;)esté en un estado sincronizado.En el ejemplo anterior,eso sería cuando ambos servidores han respondido y el código de prueba puede dedicarse a comprobar los datos (ya sean datos simulados o datos reales).</target>
        </trans-unit>
        <trans-unit id="bc6c889dc29562421a1cbed27fc494f80c816936" translate="yes" xml:space="preserve">
          <source>When yielding the component via the &lt;code&gt;hash&lt;/code&gt; helper, the component is invoked directly. See the following snippet:</source>
          <target state="translated">Al ceder el componente a trav&amp;eacute;s del asistente de &lt;code&gt;hash&lt;/code&gt; , el componente se invoca directamente. Vea el siguiente fragmento:</target>
        </trans-unit>
        <trans-unit id="d2db1fe9eb48c5fab31c98a008b4c0e47160e775" translate="yes" xml:space="preserve">
          <source>When yielding the component without the &lt;code&gt;hash&lt;/code&gt; helper use the &lt;code&gt;component&lt;/code&gt; helper. For example, below is a &lt;code&gt;full-name&lt;/code&gt; component template:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="955afbdd86a66fd0fad6a362eac667cecab3a1cb" translate="yes" xml:space="preserve">
          <source>When yielding the component without the hash helper use the &lt;code&gt;component&lt;/code&gt; helper. For example, below is a &lt;code&gt;full-name&lt;/code&gt; component template:</source>
          <target state="translated">Cuando ceda el componente sin el asistente de hash, utilice el asistente de &lt;code&gt;component&lt;/code&gt; e . Por ejemplo, a continuaci&amp;oacute;n se muestra una plantilla de componente de &lt;code&gt;full-name&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="894957b8ae02a5aad3767a74142875e56ceb9f20" translate="yes" xml:space="preserve">
          <source>When you are using a component in a template, you can invoke it using Angle Brackets (&lt;code&gt;&amp;lt;...&amp;gt;&lt;/code&gt;) instead of curly braces (&lt;code&gt;{{...}}&lt;/code&gt;). The component itself will work the same as it did before.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3dccb1c751f38d58337f76676e9501c4178625a" translate="yes" xml:space="preserve">
          <source>When you are working on a single component or page, you will want only a small subset of tests to run after every file change. To specify which tests to run, you can add &lt;code&gt;--module&lt;/code&gt; or &lt;code&gt;--filter&lt;/code&gt; option to your command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8905fb05f200fad89b67982c923b306277b5491e" translate="yes" xml:space="preserve">
          <source>When you are writing tests or application code, the execution of your tests may fail.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d4ce4aabe2a5cbf8cd07f307c94163b20e3f716" translate="yes" xml:space="preserve">
          <source>When you call &lt;code&gt;get&lt;/code&gt; on a computed property, the function will be called and the return value will be returned instead of the function itself.</source>
          <target state="translated">Cuando llama a &lt;code&gt;get&lt;/code&gt; en una propiedad calculada, se llamar&amp;aacute; a la funci&amp;oacute;n y se devolver&amp;aacute; el valor de retorno en lugar de la funci&amp;oacute;n en s&amp;iacute;.</target>
        </trans-unit>
        <trans-unit id="ca48ed0dca64eaf6eab461653520ad5c10c410f7" translate="yes" xml:space="preserve">
          <source>When you change query params through a transition (&lt;code&gt;transitionTo&lt;/code&gt; and &lt;code&gt;&amp;lt;LinkTo /&amp;gt;&lt;/code&gt;), it is not considered a full transition. This means that the controller properties associated with the query params will be updated, as will the URL, but no &lt;code&gt;Route&lt;/code&gt; method hook like &lt;code&gt;model&lt;/code&gt; or &lt;code&gt;setupController&lt;/code&gt; will be called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6bb11aa01b4dce02bd2a33e01ed2c88bcda5ee9" translate="yes" xml:space="preserve">
          <source>When you change query params through a transition (&lt;code&gt;transitionTo&lt;/code&gt; and &lt;code&gt;link-to&lt;/code&gt;), it is not considered a full transition. This means that the controller properties associated with the query params will be updated, as will the URL, but no &lt;code&gt;Route&lt;/code&gt; method hook like &lt;code&gt;model&lt;/code&gt; or &lt;code&gt;setupController&lt;/code&gt; will be called.</source>
          <target state="translated">Cuando cambia los par&amp;aacute;metros de consulta a trav&amp;eacute;s de una transici&amp;oacute;n ( &lt;code&gt;transitionTo&lt;/code&gt; y &lt;code&gt;link-to&lt;/code&gt; ), no se considera una transici&amp;oacute;n completa. Esto significa que las propiedades del controlador asociadas con los par&amp;aacute;metros de consulta se actualizar&amp;aacute;n, al igual que la URL, pero no se llamar&amp;aacute; ning&amp;uacute;n enlace de m&amp;eacute;todo de &lt;code&gt;Route&lt;/code&gt; como &lt;code&gt;model&lt;/code&gt; o &lt;code&gt;setupController&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c69e47f37e42158acc7577bc5d9ecff2994656a0" translate="yes" xml:space="preserve">
          <source>When you click on the Data tab, and see this message:</source>
          <target state="translated">Cuando haga clic en la pestaña de datos,y vea este mensaje:</target>
        </trans-unit>
        <trans-unit id="81d8b8a13138b4e6a694aa7f7d1779cf312f9ed5" translate="yes" xml:space="preserve">
          <source>When you hover over the items in the Component Tree, the related component will be highlighted in your app. For every highlighted component, you can see the template name and its associated objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bbc01ca1dfe0372e7f2252748ab40434c66b771" translate="yes" xml:space="preserve">
          <source>When you hover over the items in the View Tree, the related templates will be highlighted in your app. For every highlighted template, you can see the template name, and its associated objects.</source>
          <target state="translated">Al pasar el cursor sobre los elementos del Árbol de vistas,las plantillas relacionadas se resaltarán en tu aplicación.Para cada plantilla resaltada,puedes ver el nombre de la plantilla y sus objetos asociados.</target>
        </trans-unit>
        <trans-unit id="2d3cafb4c2c57ff52c2b3bc9d3b62c0c66344f3d" translate="yes" xml:space="preserve">
          <source>When you open the Data tab, you will see a list of model types defined in your application, along with the number of loaded records. The Inspector displays the loaded records when you click on a model type.</source>
          <target state="translated">Cuando abra la pestaña Datos,verá una lista de los tipos de modelos definidos en su aplicación,junto con el número de registros cargados.El Inspector muestra los registros cargados cuando hace clic en un tipo de modelo.</target>
        </trans-unit>
        <trans-unit id="ef93ac816985adc42ad5e98f221d5b76007eeefb" translate="yes" xml:space="preserve">
          <source>When you pass a bound value to a component, remember that it needs to be wrapped in curly braces:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ddff4691462de09c30a82853e12ae4afd708aa6" translate="yes" xml:space="preserve">
          <source>When you pass standard HTML attributes to a component (like &lt;code&gt;class&lt;/code&gt;, &lt;code&gt;alt&lt;/code&gt;, &lt;code&gt;role&lt;/code&gt;, etc), you need to tell the template where to put them. Remember, there's no wrapping element anymore! The way you show where to apply the attributes is by using &lt;code&gt;...attributes&lt;/code&gt; in the template.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2e6f6059446b6f5066839ac0b0a370c4e20eab6" translate="yes" xml:space="preserve">
          <source>When you provide a string or number to the &lt;code&gt;&amp;lt;LinkTo&amp;gt;&lt;/code&gt;, the dynamic segment's &lt;code&gt;model&lt;/code&gt; hook will run when the app transitions to the new route. In this example, &lt;code&gt;photo.id&lt;/code&gt; might have an id of &lt;code&gt;4&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab149f77bf8009aa699db797bf2762ec6eda70c0" translate="yes" xml:space="preserve">
          <source>When you request data from the server for a model that has relationships with one or more others, you may want to retrieve records corresponding to those related models at the same time. For example, when retrieving a blog post, you may need to access the comments associated with the post as well. The &lt;a href=&quot;http://jsonapi.org/format/#fetching-includes&quot;&gt;JSON API specification allows&lt;/a&gt; servers to accept a query parameter with the key &lt;code&gt;include&lt;/code&gt; as a request to include those related records in the response returned to the client. The value of the parameter should be a comma-separated list of names of the relationships required.</source>
          <target state="translated">Cuando solicita datos del servidor para un modelo que tiene relaciones con uno o m&amp;aacute;s otros, es posible que desee recuperar los registros correspondientes a esos modelos relacionados al mismo tiempo. Por ejemplo, al recuperar una publicaci&amp;oacute;n de blog, es posible que tambi&amp;eacute;n deba acceder a los comentarios asociados con la publicaci&amp;oacute;n. La &lt;a href=&quot;http://jsonapi.org/format/#fetching-includes&quot;&gt;especificaci&amp;oacute;n de la API JSON permite a los&lt;/a&gt; servidores aceptar un par&amp;aacute;metro de consulta con la clave &lt;code&gt;include&lt;/code&gt; como una solicitud para incluir esos registros relacionados en la respuesta devuelta al cliente. El valor del par&amp;aacute;metro debe ser una lista separada por comas de los nombres de las relaciones requeridas.</target>
        </trans-unit>
        <trans-unit id="ae96a09fa213c17cfa1abe07152dc8e435a00902" translate="yes" xml:space="preserve">
          <source>When you request data from the server for a model that has relationships with one or more others, you may want to retrieve records corresponding to those related models at the same time. For example, when retrieving a blog post, you may need to access the comments associated with the post as well. The &lt;a href=&quot;http://jsonapi.org/format/#fetching-includes&quot;&gt;JSON:API specification allows&lt;/a&gt; servers to accept a query parameter with the key &lt;code&gt;include&lt;/code&gt; as a request to include those related records in the response returned to the client. The value of the parameter should be a comma-separated list of names of the relationships required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e88238873f7b49bfefb91f44b99e66addcf39319" translate="yes" xml:space="preserve">
          <source>When you return data from this model, it becomes automatically available in the route's &lt;code&gt;.hbs&lt;/code&gt; file as &lt;code&gt;@model&lt;/code&gt; and in the route's controller as &lt;code&gt;this.model&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ade3f58501ad315fcc3f5df9580c740a09d8ea3" translate="yes" xml:space="preserve">
          <source>When you see a named argument used in a component's template, you can tell immediately that it is a value that was passed to the component, without looking at the component's class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bcae9585d1ee02ebac8b9fa84f7d0f952769304" translate="yes" xml:space="preserve">
          <source>When you use &lt;a href=&quot;https://ember-cli.com/generators-and-blueprints&quot;&gt;Ember CLI&lt;/a&gt; to generate an Ember &quot;object&quot; (e.g. component, model, service), it will create a test file with a setup that correctly addresses your testing framework and the &lt;a href=&quot;test-types&quot;&gt;type of test that you should write&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7fbc067c99c105678a413cf9dc6b264ea4c4416" translate="yes" xml:space="preserve">
          <source>When you use getters and functions to &lt;em&gt;derive&lt;/em&gt; the state you need, you're taking advantage of the benefits of &lt;strong&gt;declarative&lt;/strong&gt; programming. In declarative programming, you describe &lt;em&gt;what&lt;/em&gt; you need, not &lt;em&gt;how&lt;/em&gt; to get it, which reduces the number of places where you can make mistakes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8144075bbe72bea2bdce879a516b4559539fae75" translate="yes" xml:space="preserve">
          <source>When you want a new model for your application you need to create a new file under the models folder and extend from &lt;code&gt;DS.Model&lt;/code&gt;. This is more conveniently done by using one of Ember CLI's generator commands. For instance, let's create a &lt;code&gt;person&lt;/code&gt; model:</source>
          <target state="translated">Cuando desee un nuevo modelo para su aplicaci&amp;oacute;n, debe crear un nuevo archivo en la carpeta de modelos y ampliarlo desde &lt;code&gt;DS.Model&lt;/code&gt; . Esto se hace m&amp;aacute;s convenientemente usando uno de los comandos del generador de Ember CLI. Por ejemplo, creemos un modelo de &lt;code&gt;person&lt;/code&gt; a :</target>
        </trans-unit>
        <trans-unit id="3a56d56b93e77612f2ea5bfad60743dfc2d27fb1" translate="yes" xml:space="preserve">
          <source>When you want a new model for your application you need to create a new file under the models folder and extend from &lt;code&gt;Model&lt;/code&gt;. This is more conveniently done by using one of Ember CLI's generator commands. For instance, let's create a &lt;code&gt;person&lt;/code&gt; model:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="027f30c54b1ac34470b73ea4f3b5515cff4f2455" translate="yes" xml:space="preserve">
          <source>When you want fresh objects to be created for every lookup, register your factories as non-singletons using the &lt;code&gt;singleton: false&lt;/code&gt; option.</source>
          <target state="translated">Cuando desee que se creen objetos nuevos para cada b&amp;uacute;squeda, registre sus f&amp;aacute;bricas como no singleton utilizando la opci&amp;oacute;n &lt;code&gt;singleton: false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="78baa627ce51c69a9ea170e905d5ed8aac6303cb" translate="yes" xml:space="preserve">
          <source>When you want to define a reflexive relation (a model that has a relationship to itself), you must explicitly define the inverse relationship. If there is no inverse relationship then you can set the inverse to &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">Cuando desee definir una relaci&amp;oacute;n reflexiva (un modelo que tiene una relaci&amp;oacute;n consigo mismo), debe definir expl&amp;iacute;citamente la relaci&amp;oacute;n inversa. Si no hay una relaci&amp;oacute;n inversa, puede establecer la inversa en &lt;code&gt;null&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a964e00fc978a0cbd1a2855f3758a3484a1ecb27" translate="yes" xml:space="preserve">
          <source>When you're using dependencies that are not included in an addon, you will have to instruct Ember CLI to include your assets in the build. This is done using the asset manifest file &lt;code&gt;ember-cli-build.js&lt;/code&gt;. You should only try to import assets located in the &lt;code&gt;bower_components&lt;/code&gt; and &lt;code&gt;vendor&lt;/code&gt; folders.</source>
          <target state="translated">Cuando use dependencias que no est&amp;aacute;n incluidas en un complemento, deber&amp;aacute; indicarle a Ember CLI que incluya sus activos en la compilaci&amp;oacute;n. Esto se hace usando el archivo de manifiesto de activos &lt;code&gt;ember-cli-build.js&lt;/code&gt; . Solo debe intentar importar activos ubicados en las carpetas &lt;code&gt;bower_components&lt;/code&gt; y &lt;code&gt;vendor&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ab2385c20b4e5c6564e746d671e8515b6a99f2b0" translate="yes" xml:space="preserve">
          <source>When you're using dependencies that are not included in an addon, you will have to instruct Ember CLI to include your assets in the build. This is done using the asset manifest file &lt;code&gt;ember-cli-build.js&lt;/code&gt;. You should only try to import assets located in the &lt;code&gt;node_modules&lt;/code&gt; and &lt;code&gt;vendor&lt;/code&gt; folders. &lt;code&gt;bower_components&lt;/code&gt; also still works, but is recommended against, unless you have no other choice. Even bower recommends not to use itself anymore.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25bbea6e32f4fa6501f2554759c56309d62efa1d" translate="yes" xml:space="preserve">
          <source>When your application is in &lt;em&gt;testing mode&lt;/em&gt; then Ember will throw an error if you try to schedule work without an available run loop.</source>
          <target state="translated">Cuando su aplicaci&amp;oacute;n est&amp;aacute; en &lt;em&gt;modo de prueba,&lt;/em&gt; Ember arrojar&amp;aacute; un error si intenta programar el trabajo sin un ciclo de ejecuci&amp;oacute;n disponible.</target>
        </trans-unit>
        <trans-unit id="d8aaa7fa5531024af7a0819cb54e2d39a6457293" translate="yes" xml:space="preserve">
          <source>When your application starts, the router matches the current URL to the &lt;em&gt;routes&lt;/em&gt; that you've defined. The routes, in turn, are responsible for displaying templates, loading data, and setting up application state.</source>
          <target state="translated">Cuando se inicia su aplicaci&amp;oacute;n, el enrutador hace coincidir la URL actual con las &lt;em&gt;rutas&lt;/em&gt; que ha definido. Las rutas, a su vez, son responsables de mostrar plantillas, cargar datos y configurar el estado de la aplicaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="e7d5a079fcedf42385402a4c472d9f9c28940763" translate="yes" xml:space="preserve">
          <source>When your components go multiple template layers deep, it is common to need to handle an action several layers up the tree.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a711049b81b3819eab401d49b2d79f589556ee3c" translate="yes" xml:space="preserve">
          <source>When your components go multiple template layers deep, it is common to need to handle an action several layers up the tree. Using the action helper, parent components can pass actions to child components through templates alone without adding JavaScript code to those child components.</source>
          <target state="translated">Cuando tus componentes van a varias capas de plantilla en profundidad,es común que tengas que manejar una acción a varias capas del árbol.Usando el asistente de acciones,los componentes padres pueden pasar acciones a los componentes hijos a través de plantillas solamente sin añadir código JavaScript a esos componentes hijos.</target>
        </trans-unit>
        <trans-unit id="77ad0389c618692a0c088419460d599b15ee65d6" translate="yes" xml:space="preserve">
          <source>When your files have been successfully uploaded, you should see the status of your deployment in the &quot;Getting started&quot; section</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85f86b215366d1ab40f969f299ec8896a6077418" translate="yes" xml:space="preserve">
          <source>When your needs become more complex, the following addons facilitate page titles in a more dynamic and maintainable way (including FastBoot support):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="482dc4def0e64871e30d23266f8cee25255acfd6" translate="yes" xml:space="preserve">
          <source>When your project has a lot of deprecations, you can start by filtering out deprecations that do not have to be addressed right away. You can use the &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Debug.html#method_registerDeprecationHandler&quot;&gt;deprecation handlers&lt;/a&gt; API to check for what release a deprecated feature will be removed. An example handler is shown below that filters out all deprecations that are not going away in release 2.0.0.</source>
          <target state="translated">Cuando su proyecto tiene muchas bajas, puede comenzar por filtrar las bajas que no deben abordarse de inmediato. Puede utilizar la API de &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Debug.html#method_registerDeprecationHandler&quot;&gt;controladores obsoletos&lt;/a&gt; para comprobar qu&amp;eacute; versi&amp;oacute;n se eliminar&amp;aacute; una funci&amp;oacute;n obsoleta. A continuaci&amp;oacute;n, se muestra un controlador de ejemplo que filtra todas las bajas que no desaparecer&amp;aacute;n en la versi&amp;oacute;n 2.0.0.</target>
        </trans-unit>
        <trans-unit id="1a52e33efbec2377cb1e0c3138c25bf5fba2922d" translate="yes" xml:space="preserve">
          <source>When your project has a lot of deprecations, you can start by filtering out deprecations that do not have to be addressed right away. You can use the &lt;a href=&quot;https://api.emberjs.com/ember/release/functions/@ember%2Fdebug/registerDeprecationHandler&quot;&gt;deprecation handlers&lt;/a&gt; API to check for what release a deprecated feature will be removed. An example handler is shown below that filters out all deprecations that are not going away in release 2.0.0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1cd86c6521c91a86d6a2ff1d36261279e6ca4ca" translate="yes" xml:space="preserve">
          <source>Whenever any of those variables change, Ember will automatically update the HTML efficiently without blowing away browser state unnecessarily.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70e88e7a1d803ae6d6b54e96fe6859beb6851ff8" translate="yes" xml:space="preserve">
          <source>Whenever the arguments you've passed to a helper change, whether they come from a model or a component, Ember will automatically call your helper again with the new values and keep the page up-to-date.</source>
          <target state="translated">Siempre que los argumentos que has pasado a un ayudante cambien,ya sea que provengan de un modelo o de un componente,Ember llamará de nuevo a tu ayudante con los nuevos valores y mantendrá la página actualizada.</target>
        </trans-unit>
        <trans-unit id="189125d5ded93acbc3fab2ebd518ddaf124f38b3" translate="yes" xml:space="preserve">
          <source>Whenever the checkbox is inserted into the DOM, perform initialization steps, which include setting the indeterminate property if needed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1087c035b5cddd8d1b1bd6ab63841e1c6f46a54b" translate="yes" xml:space="preserve">
          <source>Whenever you make new components, use Octane-style components. Create them with &lt;code&gt;ember generate component my-component -gc&lt;/code&gt;. They can coexist in the same app with older components. Meanwhile, go through the rest of the steps below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cd047804ba20fa25426caad93fae6eda1b93317" translate="yes" xml:space="preserve">
          <source>Whenever you use your helper in a template, Ember will call this function and insert whatever you return from the helper into the DOM.</source>
          <target state="translated">Cada vez que uses tu ayudante en una plantilla,Ember llamará a esta función e insertará lo que devuelvas del ayudante en el DOM.</target>
        </trans-unit>
        <trans-unit id="1a1d33243d666f95d2fb14200dcf15b4666b0d41" translate="yes" xml:space="preserve">
          <source>Where &lt;code&gt;computed.alias&lt;/code&gt; aliases &lt;code&gt;get&lt;/code&gt; and &lt;code&gt;set&lt;/code&gt;, and allows for bidirectional data flow, &lt;code&gt;computed.oneWay&lt;/code&gt; only provides an aliased &lt;code&gt;get&lt;/code&gt;. The &lt;code&gt;set&lt;/code&gt; will not mutate the upstream property, rather causes the current property to become the value set. This causes the downstream property to permanently diverge from the upstream property.</source>
          <target state="translated">Donde los alias de &lt;code&gt;computed.alias&lt;/code&gt; se &lt;code&gt;get&lt;/code&gt; y se &lt;code&gt;set&lt;/code&gt; , y permiten el flujo de datos bidireccional, &lt;code&gt;computed.oneWay&lt;/code&gt; solo proporciona un &lt;code&gt;get&lt;/code&gt; con alias . El &lt;code&gt;set&lt;/code&gt; no mutar&amp;aacute; la propiedad ascendente, sino que har&amp;aacute; que la propiedad actual se convierta en el conjunto de valores. Esto hace que la propiedad aguas abajo diverja permanentemente de la propiedad aguas arriba.</target>
        </trans-unit>
        <trans-unit id="9e793bdd5c04fd1cf34a5c957ee4db4a05709a8b" translate="yes" xml:space="preserve">
          <source>Where &lt;code&gt;computed.oneWay&lt;/code&gt; provides oneWay bindings, &lt;code&gt;computed.readOnly&lt;/code&gt; provides a readOnly one way binding. Very often when using &lt;code&gt;computed.oneWay&lt;/code&gt; one does not also want changes to propagate back up, as they will replace the value.</source>
          <target state="translated">Donde &lt;code&gt;computed.oneWay&lt;/code&gt; proporciona enlaces oneWay, &lt;code&gt;computed.readOnly&lt;/code&gt; proporciona un enlace readOnly unidireccional. Muy a menudo, cuando se usa &lt;code&gt;computed.oneWay&lt;/code&gt; , tampoco se desea que los cambios se propaguen de nuevo, ya que reemplazar&amp;aacute;n el valor.</target>
        </trans-unit>
        <trans-unit id="591ddf03ad9d803aac24295b2dae5a22e112ace5" translate="yes" xml:space="preserve">
          <source>Where &lt;code&gt;post.id&lt;/code&gt; is the id of a specific post, which is represented in the route as /posts/[post.id]. If &lt;code&gt;post.id&lt;/code&gt; is equal to 1, then isActive will return true if the current route is /posts/1, and false if the route is anything else.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="725c820606a11193705354720b2bceafba6ea091" translate="yes" xml:space="preserve">
          <source>Where and When to use Controllers?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8abf3e1679790fc51bf8e282ab72f921dfd09900" translate="yes" xml:space="preserve">
          <source>Where can I find more information?</source>
          <target state="translated">¿Dónde puedo encontrar más información?</target>
        </trans-unit>
        <trans-unit id="af776227a660102e1fc023b4da9e42621b47a55f" translate="yes" xml:space="preserve">
          <source>Where the 3rd item in the array is bound to updates of the &lt;code&gt;myOtherPerson&lt;/code&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76c186039deb48872971e5af2a99aefa510721c5" translate="yes" xml:space="preserve">
          <source>Where the &lt;code&gt;title&lt;/code&gt; is bound to updates of the &lt;code&gt;office&lt;/code&gt; property.</source>
          <target state="translated">Donde el &lt;code&gt;title&lt;/code&gt; est&amp;aacute; vinculado a actualizaciones de la propiedad de la &lt;code&gt;office&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5c39daa739705822c5952d4f2cf02ccdc952c821" translate="yes" xml:space="preserve">
          <source>Where to make API requests</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d2b5bf92fb2804577be0e34d0d60f13feb47e18" translate="yes" xml:space="preserve">
          <source>Whether the observer is async or not</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60a3f513ec998904642ede77180ea9f4fab08523" translate="yes" xml:space="preserve">
          <source>Whether the observer is sync or not</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e63fd8e89167c3837b7871cdcff71a69af33da26" translate="yes" xml:space="preserve">
          <source>Which can be bound or set as described in the previous section.</source>
          <target state="translated">Que puede ser atado o fijado como se describe en la sección anterior.</target>
        </trans-unit>
        <trans-unit id="649c708e1376e97b1ce6e207271a0b839d8c9dd7" translate="yes" xml:space="preserve">
          <source>Which outputs an input whose value is already bound to &lt;code&gt;model.name&lt;/code&gt; and &lt;code&gt;placeholder&lt;/code&gt; is &quot;Username&quot;.</source>
          <target state="translated">Lo que genera una entrada cuyo valor ya est&amp;aacute; vinculado a &lt;code&gt;model.name&lt;/code&gt; y el &lt;code&gt;placeholder&lt;/code&gt; es &quot;Username&quot;.</target>
        </trans-unit>
        <trans-unit id="56540156893576deb27c7be97ecc98156010e382" translate="yes" xml:space="preserve">
          <source>Which parts of your app they check for correctness. Having different types of tests help separate testing concerns.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c84cfab526d2f7eebe7a90e9902d65a587756c4b" translate="yes" xml:space="preserve">
          <source>Which when using these adapters can be achieved by implementing this method similar to the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7880392d2f4932e207d45be7e39481299ca23449" translate="yes" xml:space="preserve">
          <source>While &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Component.html#event_didInsertElement&quot;&gt;&lt;code&gt;didInsertElement()&lt;/code&gt;&lt;/a&gt; is technically an event that can be listened for using &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Component.html#method_on&quot;&gt;&lt;code&gt;on()&lt;/code&gt;&lt;/a&gt;, it is encouraged to override the default method itself, particularly when order of execution is important.</source>
          <target state="translated">Si bien &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Component.html#event_didInsertElement&quot;&gt; &lt;code&gt;didInsertElement()&lt;/code&gt; &lt;/a&gt; es t&amp;eacute;cnicamente un evento que se puede escuchar para usar &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Component.html#method_on&quot;&gt; &lt;code&gt;on()&lt;/code&gt; &lt;/a&gt; , se recomienda anular el m&amp;eacute;todo predeterminado en s&amp;iacute;, particularmente cuando el orden de ejecuci&amp;oacute;n es importante.</target>
        </trans-unit>
        <trans-unit id="17cbc55433d2acd9d39804c761931d38e649223c" translate="yes" xml:space="preserve">
          <source>While &lt;code&gt;content&lt;/code&gt; is unset, setting a property to be delegated will throw an Error.</source>
          <target state="translated">Mientras el &lt;code&gt;content&lt;/code&gt; est&amp;aacute; configurado, configurar una propiedad para delegar arrojar&amp;aacute; un error.</target>
        </trans-unit>
        <trans-unit id="f44ee6b82dadf50ac1f8e1eba355adafda947311" translate="yes" xml:space="preserve">
          <source>While Ember gives you strong defaults so that you might never need to configure anything, it still supports configuring your app if you need to! Ember CLI ships with support for managing your application's environment. The runtime environment for the application is defined in &lt;code&gt;config/environment.js&lt;/code&gt;. Here an object &lt;code&gt;ENV&lt;/code&gt; is built for each of the three Ember CLI-supported build modes: development, test, and production.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c810aa8f87d2f2ab94b90b90b85f018eb8e2890" translate="yes" xml:space="preserve">
          <source>While dependencies can be managed in several ways, it's worth noting that the process can be greatly simplified for new developers by using ember-auto-import, which offers zero config imports from npm packages. It's built into new Ember apps by default and can be installed in older apps by using &lt;code&gt;ember install ember-auto-import&lt;/code&gt;. For further usage instructions, please follow the &lt;a href=&quot;https://github.com/ef4/ember-auto-import&quot;&gt;project README&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="280400d50fe503867611f4b60120ffcbee40ba32" translate="yes" xml:space="preserve">
          <source>While developing and testing for conformance, keep in mind that there are well-known screen reader and browser combinations that were developed in a way that work well together; using combinations different than these may produce false-positive results. It should be noted that these may change over time, so periodic review of this list is recommended.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af929e17d15a099cbccbea77c1ec1fb42e65ce0a" translate="yes" xml:space="preserve">
          <source>While it is more appropriate to use the &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; element, the &lt;code&gt;aria-label&lt;/code&gt; attribute can be used in instances where visible text content is not possible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d0998b101a4cd2ab4f077903e883d459a8ae864" translate="yes" xml:space="preserve">
          <source>While on the &lt;code&gt;show&lt;/code&gt; route, we will also want to show additional information about our specific rental.</source>
          <target state="translated">Mientras estamos en la ruta del &lt;code&gt;show&lt;/code&gt; , tambi&amp;eacute;n querremos mostrar informaci&amp;oacute;n adicional sobre nuestro alquiler espec&amp;iacute;fico.</target>
        </trans-unit>
        <trans-unit id="73255ea31681f1f1f36f3de37c4c66601834ad74" translate="yes" xml:space="preserve">
          <source>While templates describe how a user interface looks, components control how the user interface &lt;em&gt;behaves&lt;/em&gt;.</source>
          <target state="translated">Mientras que las plantillas describen c&amp;oacute;mo se ve una interfaz de usuario, los componentes controlan c&amp;oacute;mo se &lt;em&gt;comporta la&lt;/em&gt; interfaz de usuario .</target>
        </trans-unit>
        <trans-unit id="2ce330398bafdc06d03189bb761006dae51deaf1" translate="yes" xml:space="preserve">
          <source>While the &lt;code&gt;BootOptions&lt;/code&gt; class exposes a large number of knobs, not all combinations of them are valid; certain incompatible combinations might result in unexpected behavior.</source>
          <target state="translated">Si bien la clase &lt;code&gt;BootOptions&lt;/code&gt; expone una gran cantidad de botones, no todas las combinaciones de ellos son v&amp;aacute;lidas; ciertas combinaciones incompatibles pueden provocar un comportamiento inesperado.</target>
        </trans-unit>
        <trans-unit id="fc0d368e7360d302daa92053cd9b691749b06bd3" translate="yes" xml:space="preserve">
          <source>While the &lt;code&gt;default-async-observers&lt;/code&gt; feature is only enabled by default in modern Ember applications, you can enable this optional feature in older apps (Ember 3.13+) as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6ea7eb7abf38eaf5c20d0de362cb691680631dd" translate="yes" xml:space="preserve">
          <source>While the angle bracket invocation form is generally preferred, it is also possible to invoke the same component with the &lt;code&gt;{{person-profile}}&lt;/code&gt; syntax:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18e0500d0ddd93c6e8a97c7e3b459318ce6d07b3" translate="yes" xml:space="preserve">
          <source>While there are quite a few moving parts, here's a cheat sheet to get you started: &lt;a href=&quot;https://moritzgiessmann.de/accessibility-cheatsheet/&quot;&gt;Accessibility Cheat Sheet&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8d704cde65c4d3b1a1241864a3f06f7c5589633" translate="yes" xml:space="preserve">
          <source>While this approach will keep our results order consistent, there are other things to consider when dealing with multiple concurrent tasks, such as &lt;a href=&quot;https://emberjs.com/api/classes/Ember.run.html#method_debounce&quot;&gt;limiting the number of requests made to the server&lt;/a&gt;. To create effective and robust autocomplete behavior for your applications, we recommend considering the &lt;a href=&quot;http://ember-concurrency.com/#/docs/introduction&quot;&gt;&lt;code&gt;ember-concurrency&lt;/code&gt;&lt;/a&gt; addon project.</source>
          <target state="translated">Si bien este enfoque mantendr&amp;aacute; nuestro orden de resultados consistente, hay otras cosas a considerar cuando se trata de m&amp;uacute;ltiples tareas concurrentes, como &lt;a href=&quot;https://emberjs.com/api/classes/Ember.run.html#method_debounce&quot;&gt;limitar la cantidad de solicitudes realizadas al servidor&lt;/a&gt; . Para crear un comportamiento de autocompletado eficaz y robusto para sus aplicaciones, le recomendamos que considere el proyecto de complemento &lt;a href=&quot;http://ember-concurrency.com/#/docs/introduction&quot;&gt; &lt;code&gt;ember-concurrency&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e5299dbe635ae154f1bd6bcbb340eff5dca9a96e" translate="yes" xml:space="preserve">
          <source>While we &lt;em&gt;could&lt;/em&gt; manage these DOM interactions in the component class (for example, by using &lt;code&gt;{{did-render}}&lt;/code&gt;), we're better off using a modifier here. It lets us cleanly separate our concerns: the component manages the &lt;em&gt;state&lt;/em&gt;, and the modifier manages &lt;em&gt;interactions with the DOM&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88f2a19bfc82584a9896c679501e915c097eadee" translate="yes" xml:space="preserve">
          <source>While we don't recommend this practice in general, you might also use Percy in lieu of application tests to capture complex workflows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c0d5bcaed0bd1e10c3fc3205ddf958fc77c0950" translate="yes" xml:space="preserve">
          <source>While we try to make the Guides as beginner-friendly as we can, we must establish a baseline so that the guides can keep focused on Ember.js functionality. We will try to link to appropriate documentation whenever a concept is introduced.</source>
          <target state="translated">Mientras intentamos que las Guías sean lo más amigables posible para los principiantes,debemos establecer una línea de base para que las guías puedan mantenerse enfocadas en la funcionalidad de Ember.js.Trataremos de enlazar con la documentación apropiada cada vez que se introduzca un concepto.</target>
        </trans-unit>
        <trans-unit id="2807fe93fc492c1c3e0484f143b58c32876ee911" translate="yes" xml:space="preserve">
          <source>While working with relationships it is important to remember that they return promises.</source>
          <target state="translated">Mientras se trabaja con las relaciones es importante recordar que devuelven las promesas.</target>
        </trans-unit>
        <trans-unit id="05db6c64d9c326241e692c017fb2ecf8e161bfac" translate="yes" xml:space="preserve">
          <source>While you can accomplish a lot in Ember using HTML templating, you'll need JavaScript to make your application interactive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81bb4f1b67889aabc72389f175c00e0a96ee6e72" translate="yes" xml:space="preserve">
          <source>While you can think of your &lt;code&gt;Application&lt;/code&gt; as a container that holds the other classes in your application, there are several other responsibilities going on under-the-hood that you may want to understand. It is also important to understand that an &lt;code&gt;Application&lt;/code&gt; is different from an &lt;code&gt;ApplicationInstance&lt;/code&gt;. Refer to the Guides to understand the difference between these.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88e581776b4f0526dc2e22ac0f07b677e446867b" translate="yes" xml:space="preserve">
          <source>While you can think of your &lt;code&gt;Ember.Application&lt;/code&gt; as a container that holds the other classes in your application, there are several other responsibilities going on under-the-hood that you may want to understand.</source>
          <target state="translated">Si bien puede pensar en su aplicaci&amp;oacute;n &lt;code&gt;Ember.Application&lt;/code&gt; como un contenedor que contiene las otras clases en su aplicaci&amp;oacute;n, hay varias otras responsabilidades que se encuentran bajo el cap&amp;oacute; que es posible que desee comprender.</target>
        </trans-unit>
        <trans-unit id="3814622872ad47311be371b7c0b95e2c6e50e865" translate="yes" xml:space="preserve">
          <source>While you can use CSS classes as selectors, a best practice for testing is to &lt;strong&gt;separate the concerns between styling and testing&lt;/strong&gt;. Class names and DOM structure change over time&amp;mdash;for the better&amp;mdash;by you, your team, and addon developers. If you rely on CSS classes, your tests will break and need a significant rewrite.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75279c0977f57b3382932457323acba034f094f7" translate="yes" xml:space="preserve">
          <source>White space (following the same rules as normal HTML)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf987dcd29ff507bf50613966c0bcd95f8f93f0c" translate="yes" xml:space="preserve">
          <source>Why Do I Need Tests?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b354f762ab7ea55d9e1586501e6a4d6a230b42f0" translate="yes" xml:space="preserve">
          <source>Why Netlify?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21f7e726bcf0083979b23547ef8a616d3e176806" translate="yes" xml:space="preserve">
          <source>Why Use Them?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11d0625240ec4d66cf7f2e438bfbb3df97e562be" translate="yes" xml:space="preserve">
          <source>Why is the run loop useful?</source>
          <target state="translated">¿Por qué es útil el bucle de ejecución?</target>
        </trans-unit>
        <trans-unit id="b6bc36dd6ad649e43c814fd86085fb7bbbe9ba72" translate="yes" xml:space="preserve">
          <source>Why use Engines?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31371b9ffa547f7bd2175157075a04f541589e22" translate="yes" xml:space="preserve">
          <source>Wildcard / globbing routes</source>
          <target state="translated">Rutas de Wildcard/Globbing</target>
        </trans-unit>
        <trans-unit id="5ef4943ec999e8db7d1a88b9eaafcd5eb161c275" translate="yes" xml:space="preserve">
          <source>Will become &lt;code&gt;true&lt;/code&gt; if the proxied promise is fulfilled.</source>
          <target state="translated">Se har&amp;aacute; &lt;code&gt;true&lt;/code&gt; si se cumple la promesa delegada.</target>
        </trans-unit>
        <trans-unit id="4c1c13165c51936db10fa63c3e8f52effca9660b" translate="yes" xml:space="preserve">
          <source>Will become &lt;code&gt;true&lt;/code&gt; if the proxied promise is rejected.</source>
          <target state="translated">Se har&amp;aacute; &lt;code&gt;true&lt;/code&gt; si se rechaza la promesa sustituida.</target>
        </trans-unit>
        <trans-unit id="1ac6d9646522fe48ad32b3fffb2a4692cff0ee0f" translate="yes" xml:space="preserve">
          <source>Will become:</source>
          <target state="translated">Se convertirá:</target>
        </trans-unit>
        <trans-unit id="967bf6e3e764bd44b5a88c203f09207919ac67cd" translate="yes" xml:space="preserve">
          <source>Will bind the &lt;code&gt;disabled&lt;/code&gt; attribute to the value of &lt;code&gt;entryNotAllowed&lt;/code&gt; in the current context.</source>
          <target state="translated">Se unir&amp;aacute; al &lt;code&gt;disabled&lt;/code&gt; atributo con el valor de &lt;code&gt;entryNotAllowed&lt;/code&gt; en el contexto actual.</target>
        </trans-unit>
        <trans-unit id="4fb75e9cb0eb606b74f61d02123a5c6d4312d1d7" translate="yes" xml:space="preserve">
          <source>Will bind the value of the text area to &lt;code&gt;name&lt;/code&gt; on the current context.</source>
          <target state="translated">Vincular&amp;aacute; el valor del &amp;aacute;rea de texto al &lt;code&gt;name&lt;/code&gt; en el contexto actual.</target>
        </trans-unit>
        <trans-unit id="9226b50ad94e1216dfdb8d9e524d3ac95c5af36b" translate="yes" xml:space="preserve">
          <source>Will contain the result &lt;code&gt;Route#buildRouteInfoMetadata&lt;/code&gt; for the corresponding Route.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87ab8fe8130e40e084dc4e1c213c1ca1bb051613" translate="yes" xml:space="preserve">
          <source>Will render:</source>
          <target state="translated">Se rendirá:</target>
        </trans-unit>
        <trans-unit id="16ea7be50679346bb0ff3e85bae446af0a5f1cdb" translate="yes" xml:space="preserve">
          <source>Will result in a component instance with an HTML representation of:</source>
          <target state="translated">Resultará en una instancia de componente con una representación HTML de:</target>
        </trans-unit>
        <trans-unit id="2c9fd69d283239c5b37eef894efbe5a737283675" translate="yes" xml:space="preserve">
          <source>Will result in component instances with an HTML representation of:</source>
          <target state="translated">Resultará en instancias componentes con una representación HTML de:</target>
        </trans-unit>
        <trans-unit id="597b6d83a7c0d62ea3004fc4f90dd4d4e38edbe7" translate="yes" xml:space="preserve">
          <source>Windows or Mac users can download and run &lt;a href=&quot;http://nodejs.org/en/download/&quot;&gt;this Node.js installer&lt;/a&gt;.</source>
          <target state="translated">Los usuarios de Windows o Mac pueden descargar y ejecutar &lt;a href=&quot;http://nodejs.org/en/download/&quot;&gt;este instalador Node.js&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e20d366a0759113bfb7cd09eb9f194c6444ea748" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;App.Comment&lt;/code&gt;, &lt;code&gt;&quot;comments&quot;&lt;/code&gt; and &lt;code&gt;{ id: 1, body: &quot;FIRST&quot; }&lt;/code&gt;</source>
          <target state="translated">Con &lt;code&gt;App.Comment&lt;/code&gt; , &lt;code&gt;&quot;comments&quot;&lt;/code&gt; y &lt;code&gt;{ id: 1, body: &quot;FIRST&quot; }&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d607d78297dc6fa2b7a39dbd6f14454e5af5cca1" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;App.Comment&lt;/code&gt;, &lt;code&gt;&quot;comments&quot;&lt;/code&gt; and &lt;code&gt;{ id: 2, body: &quot;Rails is unagi&quot; }&lt;/code&gt;</source>
          <target state="translated">Con &lt;code&gt;App.Comment&lt;/code&gt; , &lt;code&gt;&quot;comments&quot;&lt;/code&gt; y &lt;code&gt;{ id: 2, body: &quot;Rails is unagi&quot; }&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3ddce649a75fe236a3754b74a54cd6f672cc97e7" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;App.Post&lt;/code&gt;, &lt;code&gt;&quot;posts&quot;&lt;/code&gt; and &lt;code&gt;{ id: 1, title: &quot;Rails is omakase&quot;, ... }&lt;/code&gt;</source>
          <target state="translated">Con &lt;code&gt;App.Post&lt;/code&gt; , &lt;code&gt;&quot;posts&quot;&lt;/code&gt; y &lt;code&gt;{ id: 1, title: &quot;Rails is omakase&quot;, ... }&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2ce037c28fff2a0540ff9621816588d8265a6748" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;preventDefault=false&lt;/code&gt; omitted, if the user clicked on the link, Ember.js will trigger the action, but the user will remain on the current page.</source>
          <target state="translated">Con &lt;code&gt;preventDefault=false&lt;/code&gt; omitido, si el usuario hizo clic en el enlace, Ember.js activar&amp;aacute; la acci&amp;oacute;n, pero el usuario permanecer&amp;aacute; en la p&amp;aacute;gina actual.</target>
        </trans-unit>
        <trans-unit id="bb911e726c920e4e8d286e33b26d8518cfbd8fd9" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;preventDefault=false&lt;/code&gt; present, if the user clicked on the link, Ember.js will trigger the action &lt;em&gt;and&lt;/em&gt; the user will be directed to the new page.</source>
          <target state="translated">Con &lt;code&gt;preventDefault=false&lt;/code&gt; presente, si el usuario hizo clic en el enlace, Ember.js activar&amp;aacute; la acci&amp;oacute;n &lt;em&gt;y&lt;/em&gt; el usuario ser&amp;aacute; dirigido a la nueva p&amp;aacute;gina.</target>
        </trans-unit>
        <trans-unit id="ca008b375b3c7fd79a920906220dd0d2790d6f97" translate="yes" xml:space="preserve">
          <source>With Ember Data, managing models as your application grows becomes both simple &lt;em&gt;and&lt;/em&gt; easy.</source>
          <target state="translated">Con Ember Data, administrar modelos a medida que su aplicaci&amp;oacute;n crece se vuelve simple &lt;em&gt;y&lt;/em&gt; f&amp;aacute;cil.</target>
        </trans-unit>
        <trans-unit id="b892731164dfa38ca381f162d50d37728a6ce0f1" translate="yes" xml:space="preserve">
          <source>With Ember Data, managing models as your application grows becomes both simpler &lt;em&gt;and&lt;/em&gt; easier.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b757282b599dbd83b3f776b03f630ba9afdecf7b" translate="yes" xml:space="preserve">
          <source>With a few exceptions, you can pass &lt;a href=&quot;https://developer.mozilla.org/docs/Web/HTML/Element/input#Attributes&quot;&gt;input attributes&lt;/a&gt; as attributes (i.e. do not prepend &lt;code&gt;@&lt;/code&gt;) to the &lt;code&gt;&amp;lt;Input&amp;gt;&lt;/code&gt; component.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71d1face5dbed72bcf5dd93c6f2e67335d04fcbf" translate="yes" xml:space="preserve">
          <source>With a service and utility that render a map to a web page element, we'll connect it to our application using a component.</source>
          <target state="translated">Con un servicio y una utilidad que renderizan un mapa a un elemento de la página web,lo conectaremos a nuestra aplicación mediante un componente.</target>
        </trans-unit>
        <trans-unit id="41baaba3c9d0311d695bd2a000ccd8189e090db6" translate="yes" xml:space="preserve">
          <source>With angle bracket syntax, block params look like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67d4fcb7fb1dcf58d555cab476ac26808d82b74c" translate="yes" xml:space="preserve">
          <source>With angle brackets, since you can pass standard HTML attributes to the component directly, we need a way to distinguish between those and the component's arguments. To do this, we use the &lt;code&gt;@&lt;/code&gt; symbol:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a801223d7ad9be6cc74b7b1edb731377b9ffed8" translate="yes" xml:space="preserve">
          <source>With angle brackets, there is a new syntax for passing arguments to a component:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8d2e7e3b4fbd308fc0b4b0a2d6511026e591593" translate="yes" xml:space="preserve">
          <source>With our &lt;code&gt;maps&lt;/code&gt; service, our component will call the &lt;code&gt;getMapElement&lt;/code&gt; function with the provided location. We append the map element we get back from the service by implementing &lt;code&gt;didInsertElement&lt;/code&gt;, which is a &lt;a href=&quot;https://guides.emberjs.com/components/the-component-lifecycle/#toc_integrating-with-third-party-libraries-with-code-didinsertelement-code&quot;&gt;component lifecycle hook&lt;/a&gt;. This function runs during the component render, after the component's markup gets inserted into the page.</source>
          <target state="translated">Con nuestro servicio de &lt;code&gt;maps&lt;/code&gt; , nuestro componente llamar&amp;aacute; a la funci&amp;oacute;n &lt;code&gt;getMapElement&lt;/code&gt; con la ubicaci&amp;oacute;n proporcionada. Agregamos el elemento de mapa que obtenemos del servicio implementando &lt;code&gt;didInsertElement&lt;/code&gt; , que es un &lt;a href=&quot;https://guides.emberjs.com/components/the-component-lifecycle/#toc_integrating-with-third-party-libraries-with-code-didinsertelement-code&quot;&gt;gancho del ciclo de vida del componente&lt;/a&gt; . Esta funci&amp;oacute;n se ejecuta durante el renderizado del componente, despu&amp;eacute;s de que el marcado del componente se inserta en la p&amp;aacute;gina.</target>
        </trans-unit>
        <trans-unit id="a74694e1997c77eea34afad72b8e60c04c456903" translate="yes" xml:space="preserve">
          <source>With our three routes in place, we are ready to add an index route, which will handle requests to the root URI (&lt;code&gt;/&lt;/code&gt;) of our site. We'd like to make the rentals page the main page of our application, and we've already created a route. Therefore, we want our index route to simply forward to the &lt;code&gt;rentals&lt;/code&gt; route we've already created.</source>
          <target state="translated">Con nuestras tres rutas en su lugar, estamos listos para agregar una ruta de &amp;iacute;ndice, que manejar&amp;aacute; las solicitudes al URI ra&amp;iacute;z ( &lt;code&gt;/&lt;/code&gt; ) de nuestro sitio. Nos gustar&amp;iacute;a que la p&amp;aacute;gina de alquileres sea la p&amp;aacute;gina principal de nuestra aplicaci&amp;oacute;n y ya hemos creado una ruta. Por lo tanto, queremos que nuestra ruta de &amp;iacute;ndice simplemente reenv&amp;iacute;e a la ruta de &lt;code&gt;rentals&lt;/code&gt; que ya hemos creado.</target>
        </trans-unit>
        <trans-unit id="a8ebfdeb97f88f51e6784457c678235d78d34353" translate="yes" xml:space="preserve">
          <source>With that, we can now click the buttons to play and pause the audio!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc93f0b3397e7c8784db05d922cabbb128144795" translate="yes" xml:space="preserve">
          <source>With the &lt;code&gt;context&lt;/code&gt; param:</source>
          <target state="translated">Con el par&amp;aacute;metro de &lt;code&gt;context&lt;/code&gt; o :</target>
        </trans-unit>
        <trans-unit id="14e87ae71f6cf85476dad9ebad06f865eaaeb02d" translate="yes" xml:space="preserve">
          <source>With the exception of &lt;code&gt;@value&lt;/code&gt; argument, you can use any &lt;a href=&quot;https://developer.mozilla.org/docs/Web/HTML/Element/textarea#Attributes&quot;&gt;attribute&lt;/a&gt; that &lt;code&gt;&amp;lt;textarea&amp;gt;&lt;/code&gt; natively supports.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afc9e19f53488aad2a481ff0a3515a7225e03017" translate="yes" xml:space="preserve">
          <source>With the model:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="187a5401493e60186249b47233744ddf9f3ca91c" translate="yes" xml:space="preserve">
          <source>With the plethora of libraries readily available for front-end development, sometimes it can be a little confusing to work with a front-end framework like Ember.js, where &lt;em&gt;everything&lt;/em&gt; you need to build an application is already included. To that end, we've segmented out each part of the guides so you can focus on just the part you want to work with. This should also make it faster for you to find what you need!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="282ef40e9baa7fb5c8ca413764be4b7460ed0374" translate="yes" xml:space="preserve">
          <source>With these steps in mind, let's introduce caching to &lt;code&gt;aspectRatio&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="958e54a2c6813f88ee03d2f8d6e46b7770e01129" translate="yes" xml:space="preserve">
          <source>With this code, we have established the following behaviors:</source>
          <target state="translated">Con este código,hemos establecido los siguientes comportamientos:</target>
        </trans-unit>
        <trans-unit id="2ff151e887f9d9731e4f09a351f832aa1932e7a4" translate="yes" xml:space="preserve">
          <source>With this feature &lt;em&gt;disabled&lt;/em&gt; Ember will create an implicit element for components which have no JavaScript file (&quot;template-only components&quot;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e21812f6df6f985487462ffb32b0253f53cd9196" translate="yes" xml:space="preserve">
          <source>With this feature &lt;em&gt;enabled&lt;/em&gt; Ember creates a wrapping div around the entire rendered application. Effectively, it is creating a &lt;code&gt;&amp;lt;div class=&quot;ember-view&quot;&amp;gt;&lt;/code&gt; element which wraps the contents of an application's &lt;code&gt;app/templates/application.hbs&lt;/code&gt; file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55468b11ae000fd3079cf60e364debc14b90f2df" translate="yes" xml:space="preserve">
          <source>With this feature &lt;em&gt;enabled&lt;/em&gt;, Ember will run all observers in the application asynchronously by default. This leads to observers running in the run loop &lt;em&gt;after&lt;/em&gt; the one in which the observed properties were updated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e796394a75b998b6d8e68735a358dcea53d265f8" translate="yes" xml:space="preserve">
          <source>With this modification, we can now use the component in &lt;code&gt;SendMessage&lt;/code&gt; to wrap a text input element whose &lt;code&gt;value&lt;/code&gt; attribute is set to &lt;code&gt;confirmValue&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="593a7df287c3064eddb1573ea6b03e7d39905140" translate="yes" xml:space="preserve">
          <source>With this modification, we can now use the component in &lt;code&gt;send-message&lt;/code&gt; to wrap a text input element whose &lt;code&gt;value&lt;/code&gt; attribute is set to &lt;code&gt;confirmValue&lt;/code&gt;:</source>
          <target state="translated">Con esta modificaci&amp;oacute;n, ahora podemos usar el componente en &lt;code&gt;send-message&lt;/code&gt; para envolver un elemento de entrada de texto cuyo atributo de &lt;code&gt;value&lt;/code&gt; se establece en &lt;code&gt;confirmValue&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="b54cfb00ad2781f08acfe788e82b5f3fd958c47b" translate="yes" xml:space="preserve">
          <source>With this template, we can then optionally pass in one block, both blocks, or none at all:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="481fb28305f07753a1f4dbf1661e0f78f96b0f99" translate="yes" xml:space="preserve">
          <source>With tracked properties this is &lt;em&gt;not&lt;/em&gt; possible, since each property must be instrumented ahead of time, and decorators can only be applied in classes. In general, the recommendation here is to convert usages of POJOs to native classes wherever possible:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfa2a879186e45980c1b4dd8c08f6c7e24cfb812" translate="yes" xml:space="preserve">
          <source>With:</source>
          <target state="translated">With:</target>
        </trans-unit>
        <trans-unit id="3af66d532bff6fe7a2aaf27adfa0f390ab7d7171" translate="yes" xml:space="preserve">
          <source>Within &lt;code&gt;ButtonWithConfirmation&lt;/code&gt;, the code in the &lt;code&gt;submitConfirm&lt;/code&gt; action does not change. It will still invoke &lt;code&gt;onConfirm&lt;/code&gt; without explicit arguments:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c46c2e06fad675102fab206f9ae9c46755de4b4a" translate="yes" xml:space="preserve">
          <source>Within &lt;code&gt;button-with-confirmation&lt;/code&gt;, the code in the &lt;code&gt;submitConfirm&lt;/code&gt; action does not change. It will still invoke &lt;code&gt;onConfirm&lt;/code&gt; without explicit arguments:</source>
          <target state="translated">Dentro del &lt;code&gt;button-with-confirmation&lt;/code&gt; , el c&amp;oacute;digo de la acci&amp;oacute;n &lt;code&gt;submitConfirm&lt;/code&gt; no cambia. Seguir&amp;aacute; invocando &lt;code&gt;onConfirm&lt;/code&gt; sin argumentos expl&amp;iacute;citos:</target>
        </trans-unit>
        <trans-unit id="36b87956bba707cfde1a5058787f58f6d44ae891" translate="yes" xml:space="preserve">
          <source>Within a Controller, Route or Component's action handler, the value of the &lt;code&gt;this&lt;/code&gt; context is the Controller, Route or Component object:</source>
          <target state="translated">Dentro de un controlador de acciones de controlador, ruta o componente, el valor de &lt;code&gt;this&lt;/code&gt; contexto es el objeto controlador, ruta o componente:</target>
        </trans-unit>
        <trans-unit id="5e7306b5b428ef8916bb9f757d2cedfe83a09195" translate="yes" xml:space="preserve">
          <source>Within the component, you can now access these arguments &lt;em&gt;directly&lt;/em&gt; with the same syntax:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c284591f2d79f325d91a346b5a994c22ad0e7f4" translate="yes" xml:space="preserve">
          <source>Within the test for this object we'll create an instance, update the &lt;code&gt;foo&lt;/code&gt; property (which should trigger the computed property), and assert that the logic in our computed property is working correctly.</source>
          <target state="translated">Dentro de la prueba para este objeto, crearemos una instancia, actualizaremos la propiedad &lt;code&gt;foo&lt;/code&gt; (que deber&amp;iacute;a activar la propiedad calculada) y afirmaremos que la l&amp;oacute;gica en nuestra propiedad calculada est&amp;aacute; funcionando correctamente.</target>
        </trans-unit>
        <trans-unit id="c1ce0fbd48781bed94cacf53791563de46e76a90" translate="yes" xml:space="preserve">
          <source>Within the test for this object, we'll lookup the service instance, update the &lt;code&gt;foo&lt;/code&gt; property (which should trigger the computed property), and assert that the logic in our computed property is working correctly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8775f08b2a2db2fe464b3385293d54699d83fb43" translate="yes" xml:space="preserve">
          <source>Working with HTML, CSS, and JavaScript</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="523907bd7f55f4bc190b263ce66c723ab1375079" translate="yes" xml:space="preserve">
          <source>Working with this API directly is not common in most Ember apps, but understanding this example will help you to understand the run-loops algorithm, which will make you a better Ember developer.</source>
          <target state="translated">Trabajar con esta API directamente no es común en la mayoría de las aplicaciones Ember,pero entender este ejemplo te ayudará a entender el algoritmo de run-loops,lo que te convertirá en un mejor desarrollador de Ember.</target>
        </trans-unit>
        <trans-unit id="747b6292ff9f23b22904a47a4c3ad9490c00a29f" translate="yes" xml:space="preserve">
          <source>Would allow the user to swap what fact is being displayed, and also edit that fact via a two-way mutable binding.</source>
          <target state="translated">Permitiría al usuario cambiar el hecho que se está mostrando,y también editar ese hecho a través de un enlace mutable bidireccional.</target>
        </trans-unit>
        <trans-unit id="e67a0e3ec1a1e8db8401ce1fa3dedb22663e729b" translate="yes" xml:space="preserve">
          <source>Would result in an object such as:</source>
          <target state="translated">resultaría en un objeto como:</target>
        </trans-unit>
        <trans-unit id="2cfd0503f96b4265073cb83895d8715978b7e19e" translate="yes" xml:space="preserve">
          <source>Would result in instances with the following HTML:</source>
          <target state="translated">Resultaría en instancias con el siguiente HTML:</target>
        </trans-unit>
        <trans-unit id="6d3d79d47aab793640b75f7a1912c3a7d02bc791" translate="yes" xml:space="preserve">
          <source>Would result in the following &lt;code&gt;args&lt;/code&gt; object to be passed to the component:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe560e16aa8d2bf860b5ce66ccf60777aa839a9d" translate="yes" xml:space="preserve">
          <source>Would result in the following HTML:</source>
          <target state="translated">Resultaría en el siguiente HTML:</target>
        </trans-unit>
        <trans-unit id="1af0e20fc2c428a1420bac915368a4addce03651" translate="yes" xml:space="preserve">
          <source>Wrapping Content in a Component</source>
          <target state="translated">Envolver el contenido en un componente</target>
        </trans-unit>
        <trans-unit id="24fb8a0dd541157a3a060425094adc6356f62b43" translate="yes" xml:space="preserve">
          <source>Write some HTML in a template</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dabb8334b6cbbc19635a160f00032f11eeb9962" translate="yes" xml:space="preserve">
          <source>Writing</source>
          <target state="translated">Writing</target>
        </trans-unit>
        <trans-unit id="4551a15fed736bc15e03f948b22237ccecd536e1" translate="yes" xml:space="preserve">
          <source>Writing Helpers</source>
          <target state="translated">Ayudantes de escritura</target>
        </trans-unit>
        <trans-unit id="f1c258d40d37f1ceb46ee642d4152034eefa10b4" translate="yes" xml:space="preserve">
          <source>Writing Your Own Enumerable</source>
          <target state="translated">Escribiendo su propio número</target>
        </trans-unit>
        <trans-unit id="090966a0381371e0c912d364c8b841b1baa6dfc8" translate="yes" xml:space="preserve">
          <source>Writing a Helper Function</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ea344edec4d37d27d7627c2be67e13eb6230916" translate="yes" xml:space="preserve">
          <source>Writing a UI component.</source>
          <target state="translated">Escribiendo un componente de UI.</target>
        </trans-unit>
        <trans-unit id="a9983aca3a1e13e90cf5de58d15dfebe343aa564" translate="yes" xml:space="preserve">
          <source>Writing tests is a necessary ingredient if you want to guarantee users and stakeholders that your app, whether small or large, will function as intended at any given time. The larger your app, the more costly and error-prone manual testing becomes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4436bc4b48062befc69ea28bc7bde4ab51347dcc" translate="yes" xml:space="preserve">
          <source>Writing tests is also a fun activity, a nice change of pace from delivering features daily, and a way to help you refactor code and improve as a developer. Tests can also serve as a living documentation&amp;mdash;a key element in onboarding new developers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80249ccaba35e20965bd9d6b96e9e6cfc9ad2de6" translate="yes" xml:space="preserve">
          <source>Writing your own modifiers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="825fdb096a77edab0bb1ca62bab2903688f07d71" translate="yes" xml:space="preserve">
          <source>Yes! Controllers are still an integral part of an Ember application architecture, and generated by the framework even if you don't declare a Controller module explicitly.</source>
          <target state="translated">¡Sí! Los controladores siguen siendo una parte integral de la arquitectura de una aplicación Ember,y generados por el marco de trabajo incluso si no declaras un módulo controlador explícitamente.</target>
        </trans-unit>
        <trans-unit id="396d9576e7ffe8fe8534b8a90783de2a933f5c82" translate="yes" xml:space="preserve">
          <source>Yielded components can also be invoked with angle bracket syntax:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41ca0848836748204986b80a9818df6583dc6b97" translate="yes" xml:space="preserve">
          <source>Yielded values work the same as in curly invocation:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="deee9e44e853c883ec21559e22ae2a998a1f1682" translate="yes" xml:space="preserve">
          <source>You &lt;em&gt;could&lt;/em&gt; put all of your application HTML into a single file, but in practice, you'll probably want to break it apart into smaller files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a4cf926c7ad59a777c1a2ec109f7194d8b8ab62" translate="yes" xml:space="preserve">
          <source>You are also able to combine &lt;code&gt;else&lt;/code&gt; and &lt;code&gt;if&lt;/code&gt; helpers to create more complex conditional logic.</source>
          <target state="translated">Tambi&amp;eacute;n puede combinar los ayudantes &lt;code&gt;else&lt;/code&gt; y &lt;code&gt;if&lt;/code&gt; para crear una l&amp;oacute;gica condicional m&amp;aacute;s compleja.</target>
        </trans-unit>
        <trans-unit id="2470a8c296da709327c34f194f1d00dd46bfb812" translate="yes" xml:space="preserve">
          <source>You are left with browsers that have full support of ES2015 and ES2016. If you inspect the compiled code, you will see that some features are not compiled to ES5 code anymore, such as arrow functions.</source>
          <target state="translated">Te quedan los navegadores que tienen soporte completo para ES2015 y ES2016.Si inspeccionas el código compilado,verás que algunas características ya no están compiladas en el código ES5,como las funciones de las flechas.</target>
        </trans-unit>
        <trans-unit id="98e0bba09279b5fd26c4f584dff1bb36be89dd12" translate="yes" xml:space="preserve">
          <source>You are probably familiar with HTML attributes, which tell the &lt;em&gt;browser&lt;/em&gt; how to draw an HTML element. The syntax &lt;code&gt;@title=&lt;/code&gt; is similar, but instead of telling the &lt;em&gt;browser&lt;/em&gt; what to do, it's telling your custom tag what to do.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdfeca1679ea9e98f17cb40848eb03764c12cd9d" translate="yes" xml:space="preserve">
          <source>You are using a protocol other than HTTP or HTTPS. For file:// protocol, follow &lt;a href=&quot;../installation#toc_file-protocol&quot;&gt;these steps&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="178620469436884ad92219f1ec156778668f2c73" translate="yes" xml:space="preserve">
          <source>You are using a protocol other than http or https. For file:// protocol, follow &lt;a href=&quot;../installation#toc_file-protocol&quot;&gt;these steps&lt;/a&gt;.</source>
          <target state="translated">Est&amp;aacute; utilizando un protocolo que no sea http o https. Para el protocolo file: //, siga &lt;a href=&quot;../installation#toc_file-protocol&quot;&gt;estos pasos&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7d5ae1a8beb93f53eded0a563a09132680ae43c5" translate="yes" xml:space="preserve">
          <source>You are using an old Ember version ( &amp;lt; 1.0 ).</source>
          <target state="translated">Est&amp;aacute; utilizando una versi&amp;oacute;n antigua de Ember (&amp;lt;1.0).</target>
        </trans-unit>
        <trans-unit id="d4241743edec8c6b1881c3361a5204b9078ed807" translate="yes" xml:space="preserve">
          <source>You can &lt;em&gt;serve&lt;/em&gt; the app by running &lt;code&gt;ember s&lt;/code&gt; in your terminal, which will make the local copy of your application available to view in your web browser.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7e8bfadeefe8698f807de1a79e1e9eaf1647f7b" translate="yes" xml:space="preserve">
          <source>You can access these environment variables in your application code by importing from &lt;code&gt;your-application-name/config/environment&lt;/code&gt;.</source>
          <target state="translated">Puede acceder a estas variables de entorno en el c&amp;oacute;digo de su aplicaci&amp;oacute;n importando desde &lt;code&gt;your-application-name/config/environment&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1672c3ecbb5bf7bca530658fdd60939804efe584" translate="yes" xml:space="preserve">
          <source>You can add your own properties, methods, and lifecycle hooks to this subclass to customize its behavior, and you can reference the instance of the class in your template using &lt;code&gt;{{this}}&lt;/code&gt;. For instance, we could access the &lt;code&gt;displayName&lt;/code&gt; property of our &lt;code&gt;PersonProfile&lt;/code&gt; component instance in the template like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1e964c8fea5783239cfbaff562cd97971b8964a" translate="yes" xml:space="preserve">
          <source>You can also access the context of the view to make sure it is the object that you expect:</source>
          <target state="translated">También puede acceder al contexto de la vista para asegurarse de que es el objeto que espera:</target>
        </trans-unit>
        <trans-unit id="ef9adf0e8c0dd7d7e96a39f2ad8e61ed91bc1b43" translate="yes" xml:space="preserve">
          <source>You can also access the special &lt;code&gt;messages&lt;/code&gt; property on the error object to get an array of all the error strings.</source>
          <target state="translated">Tambi&amp;eacute;n puede acceder a la propiedad de &lt;code&gt;messages&lt;/code&gt; especiales en el objeto de error para obtener una matriz de todas las cadenas de error.</target>
        </trans-unit>
        <trans-unit id="88d64bc7dbc1e71c7ab04a3a9175ab32b74f5a75" translate="yes" xml:space="preserve">
          <source>You can also add observers to an object outside of a class definition using &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Object.html#method_addObserver&quot;&gt;&lt;code&gt;addObserver()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">Tambi&amp;eacute;n puede agregar observadores a un objeto fuera de una definici&amp;oacute;n de clase usando &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Object.html#method_addObserver&quot;&gt; &lt;code&gt;addObserver()&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="1b6fce5351cce1baea3450672234068c6a8fe431" translate="yes" xml:space="preserve">
          <source>You can also add query params to URL transitions:</source>
          <target state="translated">También puede agregar parámetros de consulta a las transiciones de URL:</target>
        </trans-unit>
        <trans-unit id="0a60f26b52cc3668779a9b8c2373864ac65482e0" translate="yes" xml:space="preserve">
          <source>You can also bind the attribute value to a property that you own. In the next example, the &lt;code&gt;disabled&lt;/code&gt; attribute is bound to the value of &lt;code&gt;isReadOnly&lt;/code&gt; in the current context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d335a5df872ced21fc742cf3cd56a18d14f626c8" translate="yes" xml:space="preserve">
          <source>You can also bind these attributes to differently named properties:</source>
          <target state="translated">También puedes unir estos atributos a propiedades con nombres diferentes:</target>
        </trans-unit>
        <trans-unit id="e6da65d649425022f41ea9d96b1d68d0231feb8b" translate="yes" xml:space="preserve">
          <source>You can also call &lt;em&gt;different&lt;/em&gt; methods on the super class if you want, allowing you to change behaviors or alias methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f112f7bed124d8b8eb661e444e253067a69dffb" translate="yes" xml:space="preserve">
          <source>You can also chain multiple event subscriptions:</source>
          <target state="translated">También puedes encadenar suscripciones a múltiples eventos:</target>
        </trans-unit>
        <trans-unit id="57394fd140c59d018bb92302ce82e39228e60cab" translate="yes" xml:space="preserve">
          <source>You can also check to see if a block exists using the &lt;code&gt;(has-block)&lt;/code&gt; keyword, and conditionally use it, or provide a default template instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3430a2819d4043f27e8b3ad44a08784ac8bf436" translate="yes" xml:space="preserve">
          <source>You can also click on the &lt;code&gt;$E&lt;/code&gt; button to send the value to the console.</source>
          <target state="translated">Tambi&amp;eacute;n puede hacer clic en el bot&amp;oacute;n &lt;code&gt;$E&lt;/code&gt; para enviar el valor a la consola.</target>
        </trans-unit>
        <trans-unit id="5584838479afb10a8d24bf9dfbed7b7c77af4db6" translate="yes" xml:space="preserve">
          <source>You can also create a &lt;em&gt;subclass&lt;/em&gt; from any existing class by calling its &lt;code&gt;extend()&lt;/code&gt; method. For example, you might want to create a subclass of Ember's built-in &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Component.html&quot;&gt;&lt;code&gt;Ember.Component&lt;/code&gt;&lt;/a&gt; class:</source>
          <target state="translated">Tambi&amp;eacute;n puede crear una &lt;em&gt;subclase&lt;/em&gt; de cualquier clase existente llamando a su m&amp;eacute;todo &lt;code&gt;extend()&lt;/code&gt; . Por ejemplo, es posible que desee crear una subclase de la clase &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Component.html&quot;&gt; &lt;code&gt;Ember.Component&lt;/code&gt; &lt;/a&gt; incorporada de Ember :</target>
        </trans-unit>
        <trans-unit id="5dcc0b6faed9d601c795a9299014c2ce1c2e1eb6" translate="yes" xml:space="preserve">
          <source>You can also create a subclass from any existing class by calling its &lt;code&gt;extend()&lt;/code&gt; method. For example, you might want to create a subclass of Ember's built-in &lt;code&gt;Component&lt;/code&gt; class:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a335c1d15e1f14d3b1eb90fd889a9dfb9fe11dfa" translate="yes" xml:space="preserve">
          <source>You can also create a subclass from any existing class by calling its &lt;code&gt;extend()&lt;/code&gt; method. For example, you might want to create a subclass of Ember's built-in &lt;code&gt;Ember.Component&lt;/code&gt; class:</source>
          <target state="translated">Tambi&amp;eacute;n puede crear una subclase de cualquier clase existente llamando a su m&amp;eacute;todo &lt;code&gt;extend()&lt;/code&gt; . Por ejemplo, es posible que desee crear una subclase de la clase &lt;code&gt;Ember.Component&lt;/code&gt; incorporada de Ember :</target>
        </trans-unit>
        <trans-unit id="75b84adec37e709c07b69151af2b82a948deb95f" translate="yes" xml:space="preserve">
          <source>You can also create custom transforms with Ember CLI's &lt;code&gt;transform&lt;/code&gt; generator:</source>
          <target state="translated">Tambi&amp;eacute;n puede crear transformaciones personalizadas con el generador de &lt;code&gt;transform&lt;/code&gt; aciones de Ember CLI :</target>
        </trans-unit>
        <trans-unit id="768d179c54fdcb053f5de5d279f4435ae0035002" translate="yes" xml:space="preserve">
          <source>You can also define a reflexive relationship that doesn't have an inverse:</source>
          <target state="translated">También puedes definir una relación reflexiva que no tenga un inverso:</target>
        </trans-unit>
        <trans-unit id="a6fc139240172bd2567095ed38d5bd305ce0e668" translate="yes" xml:space="preserve">
          <source>You can also define a serializer for a specific model. For example, if you had a &lt;code&gt;post&lt;/code&gt; model you could also define a &lt;code&gt;post&lt;/code&gt; serializer:</source>
          <target state="translated">Tambi&amp;eacute;n puede definir un serializador para un modelo espec&amp;iacute;fico. Por ejemplo, si tuviera un modelo de &lt;code&gt;post&lt;/code&gt; , tambi&amp;eacute;n podr&amp;iacute;a definir un serializador de &lt;code&gt;post&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="c7154e30c3054ead6f8cfc8a21a807c0486c0a01" translate="yes" xml:space="preserve">
          <source>You can also define what Ember should do when setting a computed property by providing additional function (&lt;code&gt;set&lt;/code&gt;) in hash argument. If you try to set a computed property, it will try to invoke setter accessor function with the key and value you want to set it to as arguments.</source>
          <target state="translated">Tambi&amp;eacute;n puede definir lo que debe hacer Ember al establecer una propiedad calculada proporcionando una funci&amp;oacute;n adicional ( &lt;code&gt;set&lt;/code&gt; ) en el argumento hash. Si intenta establecer una propiedad calculada, intentar&amp;aacute; invocar la funci&amp;oacute;n de acceso del setter con la clave y el valor que desea establecer como argumentos.</target>
        </trans-unit>
        <trans-unit id="ef13f688afcdf3cb317160d7ff711cd08cfd0e33" translate="yes" xml:space="preserve">
          <source>You can also define what Ember should do when setting a computed property. If you try to set a computed property, it will be invoked with the key (property name), and the value you want to set it to. You must return the new intended value of the computed property from the setter function.</source>
          <target state="translated">También puedes definir lo que Ember debe hacer cuando establece una propiedad calculada.Si intentas establecer una propiedad calculada,se invocará con la clave (nombre de la propiedad),y el valor al que quieras establecerla.Debe devolver el nuevo valor previsto de la propiedad calculada desde la función de configuración.</target>
        </trans-unit>
        <trans-unit id="85f257d0340345cf032cd658d7a53e8ac99d5b5e" translate="yes" xml:space="preserve">
          <source>You can also define what to show if the property is falsey by using the &lt;code&gt;else&lt;/code&gt; helper.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5af7ed3cfbc688ba23b9d7e3919466d53bd7104" translate="yes" xml:space="preserve">
          <source>You can also expose properties to the console. When you hover over an object's properties, a &lt;code&gt;$E&lt;/code&gt; button will appear next to every property. Click on it to expose the property's value to the console.</source>
          <target state="translated">Tambi&amp;eacute;n puede exponer propiedades a la consola. Cuando pasa el cursor sobre las propiedades de un objeto, aparecer&amp;aacute; un bot&amp;oacute;n &lt;code&gt;$E&lt;/code&gt; junto a cada propiedad. Haga clic en &amp;eacute;l para exponer el valor de la propiedad a la consola.</target>
        </trans-unit>
        <trans-unit id="be3962f6baeb2c6a5aedfd2e2bf34292ff4b8649" translate="yes" xml:space="preserve">
          <source>You can also filter records by entering a query in the search box.</source>
          <target state="translated">También puede filtrar los registros introduciendo una consulta en el cuadro de búsqueda.</target>
        </trans-unit>
        <trans-unit id="5fb9bef8f99ccd8524f225484eaa3ae2da2d5391" translate="yes" xml:space="preserve">
          <source>You can also implement &lt;code&gt;keyForRelationship&lt;/code&gt;, which takes the name of the relationship as the first parameter, the kind of relationship (&lt;code&gt;hasMany&lt;/code&gt; or &lt;code&gt;belongsTo&lt;/code&gt;) as the second parameter, and the method (&lt;code&gt;serialize&lt;/code&gt; or &lt;code&gt;deserialize&lt;/code&gt;) as the third parameter.</source>
          <target state="translated">Tambi&amp;eacute;n puede implementar &lt;code&gt;keyForRelationship&lt;/code&gt; , que toma el nombre de la relaci&amp;oacute;n como primer par&amp;aacute;metro, el tipo de relaci&amp;oacute;n ( &lt;code&gt;hasMany&lt;/code&gt; o &lt;code&gt;belongsTo&lt;/code&gt; ) como segundo par&amp;aacute;metro y el m&amp;eacute;todo ( &lt;code&gt;serialize&lt;/code&gt; o &lt;code&gt;deserialize&lt;/code&gt; ) como tercer par&amp;aacute;metro.</target>
        </trans-unit>
        <trans-unit id="766839f8aefc0c5bfd6507b505fe6724c3f9c474" translate="yes" xml:space="preserve">
          <source>You can also mark computed property as &lt;code&gt;.readOnly()&lt;/code&gt; and block all attempts to set it.</source>
          <target state="translated">Tambi&amp;eacute;n puede marcar la propiedad calculada como &lt;code&gt;.readOnly()&lt;/code&gt; y bloquear todos los intentos de establecerla.</target>
        </trans-unit>
        <trans-unit id="275d192ff13ae82dcf910dcd661ef58aee818734" translate="yes" xml:space="preserve">
          <source>You can also optionally pass an array of additional dependent keys as the second parameter, if your sort function is dependent on additional values that could changes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="790f5b8730f1146bcd682c10416fcea7a1ad2d0c" translate="yes" xml:space="preserve">
          <source>You can also optionally tell &lt;code&gt;import()&lt;/code&gt; to place the file at a different path. The following example will copy the file to &lt;code&gt;dist/assets/fontawesome-webfont.ttf&lt;/code&gt;.</source>
          <target state="translated">Opcionalmente, tambi&amp;eacute;n puede decirle a &lt;code&gt;import()&lt;/code&gt; que coloque el archivo en una ruta diferente. El siguiente ejemplo copiar&amp;aacute; el archivo a &lt;code&gt;dist/assets/fontawesome-webfont.ttf&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="526368ab062f3f8742f13acd3c8e3cc84e1e74c3" translate="yes" xml:space="preserve">
          <source>You can also pass &lt;code&gt;Mixin&lt;/code&gt; classes to add additional properties to the subclass.</source>
          <target state="translated">Tambi&amp;eacute;n puede pasar clases &lt;code&gt;Mixin&lt;/code&gt; para agregar propiedades adicionales a la subclase.</target>
        </trans-unit>
        <trans-unit id="93405185e98adcce81525d4ad89d1c9b6b86926e" translate="yes" xml:space="preserve">
          <source>You can also pass a getter function or object with &lt;code&gt;get&lt;/code&gt; and &lt;code&gt;set&lt;/code&gt; functions as the last argument to the computed decorator. This allows you to define computed property &lt;em&gt;macros&lt;/em&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e6eeb242dcff5d2813f48bd8041bd2cded2d843" translate="yes" xml:space="preserve">
          <source>You can also pass additional options such as &lt;code&gt;passive&lt;/code&gt; and &lt;code&gt;once&lt;/code&gt; as named parameters to the modifier:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="012a871b1a0d62c82c22708b7b437fc3d98666b7" translate="yes" xml:space="preserve">
          <source>You can also pass arguments to the &lt;code&gt;constructor&lt;/code&gt; when creating instances with &lt;code&gt;new&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42e38d4ad377a01b78228ef73c6a9974ae73e324" translate="yes" xml:space="preserve">
          <source>You can also pass parameters to named blocks:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6208e2d0a2f48ea35c417b09af2d25d775baefc" translate="yes" xml:space="preserve">
          <source>You can also pass positional parameters to &lt;code&gt;{{yield}}&lt;/code&gt;, which are then made available in the block:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1162fb9c818c1fc611e2cff0ecdf2a8681a96d2" translate="yes" xml:space="preserve">
          <source>You can also provide a setter, either directly on the class using native class syntax, or by passing a hash with &lt;code&gt;get&lt;/code&gt; and &lt;code&gt;set&lt;/code&gt; functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca03b8c73897486b892c2b7290ed482cf66651a1" translate="yes" xml:space="preserve">
          <source>You can also provide a setter, which will be used when updating the computed property. Ember's &lt;code&gt;set&lt;/code&gt; function must be used to update the property since it will also notify observers of the property:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cac606de61263d153e2389ba87e0dead0cd589e9" translate="yes" xml:space="preserve">
          <source>You can also provide your own model layer using other data libraries such as &lt;a href=&quot;https://github.com/ember-redux/ember-redux&quot;&gt;Redux&lt;/a&gt; or &lt;a href=&quot;https://github.com/ember-graphql/ember-apollo-client&quot;&gt;Apollo&lt;/a&gt;, or create your own model layer using the tools that Ember provides for state, such as &lt;a href=&quot;https://guides.emberjs.com/components/component-state-and-actions/&quot;&gt;autotracking&lt;/a&gt;. We'll learn more about these tools throughout the guides.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66cd24c177ec563348586a2f5ff8b35e04660534" translate="yes" xml:space="preserve">
          <source>You can also redirect elsewhere by calling &lt;code&gt;this.transitionTo('elsewhere')&lt;/code&gt; from within &lt;code&gt;willTransition&lt;/code&gt;. Note that &lt;code&gt;willTransition&lt;/code&gt; will not be fired for the redirecting &lt;code&gt;transitionTo&lt;/code&gt;, since &lt;code&gt;willTransition&lt;/code&gt; doesn't fire when there is already a transition underway. If you want subsequent &lt;code&gt;willTransition&lt;/code&gt; actions to fire for the redirecting transition, you must first explicitly call &lt;code&gt;transition.abort()&lt;/code&gt;.</source>
          <target state="translated">Tambi&amp;eacute;n puede redirigir a otro lugar llamando a &lt;code&gt;this.transitionTo('elsewhere')&lt;/code&gt; desde &lt;code&gt;willTransition&lt;/code&gt; . Tenga en cuenta que &lt;code&gt;willTransition&lt;/code&gt; no ser&amp;aacute; despedido por la reorientaci&amp;oacute;n de &lt;code&gt;transitionTo&lt;/code&gt; , ya &lt;code&gt;willTransition&lt;/code&gt; no se dispara cuando ya hay una transici&amp;oacute;n en curso. Si desea que las acciones &lt;code&gt;willTransition&lt;/code&gt; posteriores se activen para la transici&amp;oacute;n de redireccionamiento, primero debe llamar expl&amp;iacute;citamente a &lt;code&gt;transition.abort()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fc573d1069d6c51c8d700afcaa6eefacb774cf7d" translate="yes" xml:space="preserve">
          <source>You can also remove attributes and relationships by setting the &lt;code&gt;serialize&lt;/code&gt; key to &lt;code&gt;false&lt;/code&gt; in your mapping object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc90a8ecee78486b79c8d897922743c36a23e9c6" translate="yes" xml:space="preserve">
          <source>You can also remove attributes by setting the &lt;code&gt;serialize&lt;/code&gt; key to &lt;code&gt;false&lt;/code&gt; in your mapping object.</source>
          <target state="translated">Tambi&amp;eacute;n puede eliminar atributos configurando la clave de &lt;code&gt;serialize&lt;/code&gt; en &lt;code&gt;false&lt;/code&gt; en su objeto de mapeo.</target>
        </trans-unit>
        <trans-unit id="2ad79d33b20e55672ed7e9c04eaf24113ed22091" translate="yes" xml:space="preserve">
          <source>You can also search for Promises by typing a query in the search box.</source>
          <target state="translated">También puedes buscar Promesas escribiendo una consulta en el cuadro de búsqueda.</target>
        </trans-unit>
        <trans-unit id="02a244a8dd77e3423dfb12d76d6dd5ecf27a2002" translate="yes" xml:space="preserve">
          <source>You can also specify a class which should only be added when the property is &lt;code&gt;false&lt;/code&gt; by declaring &lt;code&gt;classNameBindings&lt;/code&gt; like this:</source>
          <target state="translated">Tambi&amp;eacute;n puede especificar una clase que solo debe agregarse cuando la propiedad es &lt;code&gt;false&lt;/code&gt; declarando &lt;code&gt;classNameBindings&lt;/code&gt; de esta manera:</target>
        </trans-unit>
        <trans-unit id="88629031663799f125ecc79c9c9b0c86c9e8a507" translate="yes" xml:space="preserve">
          <source>You can also specify a template to show if the property is falsey by using the &lt;code&gt;else&lt;/code&gt; helper.</source>
          <target state="translated">Tambi&amp;eacute;n puede especificar una plantilla para mostrar si la propiedad es falsa utilizando el asistente &lt;code&gt;else&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e024e0d765b5bede80159cdacd45d20e975e65ed" translate="yes" xml:space="preserve">
          <source>You can also specify an inverse on a &lt;code&gt;belongsTo&lt;/code&gt;, which works how you'd expect.</source>
          <target state="translated">Tambi&amp;eacute;n puede especificar una inversa en &lt;code&gt;belongsTo&lt;/code&gt; , que funciona como esperar&amp;iacute;a.</target>
        </trans-unit>
        <trans-unit id="1def373c9f64a516324d8fe71b4712e2573192ea" translate="yes" xml:space="preserve">
          <source>You can also specify which class names are applied to the component's element by setting its &lt;code&gt;classNames&lt;/code&gt; property to an array of strings:</source>
          <target state="translated">Tambi&amp;eacute;n puede especificar qu&amp;eacute; nombres de clase se aplican al elemento del componente estableciendo su propiedad &lt;code&gt;classNames&lt;/code&gt; en una matriz de cadenas:</target>
        </trans-unit>
        <trans-unit id="7422983be5bfeef5b8d3820a7dbee9d9084dbe93" translate="yes" xml:space="preserve">
          <source>You can also stub an object:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7dcb6377d51bfed519a9b7e758dc92f9c9d1008" translate="yes" xml:space="preserve">
          <source>You can also toggle &quot;Hide passed tests&quot; to show your passing test case along with the tests that are still failing (because we haven't yet built them).</source>
          <target state="translated">También puedes activar la opción &quot;Ocultar pruebas superadas&quot; para mostrar tu caso de prueba superada junto con las pruebas que aún están fallando (porque aún no las hemos construido).</target>
        </trans-unit>
        <trans-unit id="366753f2f41869dc2e446cc8f654153c1a91bc58" translate="yes" xml:space="preserve">
          <source>You can also use &lt;code&gt;@each.property&lt;/code&gt; in your dependent key, the callback will still use the underlying array:</source>
          <target state="translated">Tambi&amp;eacute;n puede usar &lt;code&gt;@each.property&lt;/code&gt; en su clave dependiente, la devoluci&amp;oacute;n de llamada seguir&amp;aacute; usando la matriz subyacente:</target>
        </trans-unit>
        <trans-unit id="34ff27a988257c51a9736a5a9d0bfdfcdc6630cf" translate="yes" xml:space="preserve">
          <source>You can also use Ember CLI to create the test file separately from the object. For example, if you enter the following lines in the terminal:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84a984d684962e71d8ce11e61c355ec9b12085f0" translate="yes" xml:space="preserve">
          <source>You can also use an &lt;code&gt;else&lt;/code&gt; helper with the &lt;code&gt;unless&lt;/code&gt; block. The &lt;code&gt;else&lt;/code&gt; will display if the value is truthy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1767199b3d98b895cb5f65fade57bde1e730555e" translate="yes" xml:space="preserve">
          <source>You can also use an inline form of &lt;code&gt;{{link-to}}&lt;/code&gt; component by passing the link text as the first argument to the component:</source>
          <target state="translated">Tambi&amp;eacute;n puede utilizar una forma en l&amp;iacute;nea del componente &lt;code&gt;{{link-to}}&lt;/code&gt; pasando el texto del v&amp;iacute;nculo como primer argumento del componente:</target>
        </trans-unit>
        <trans-unit id="6a5c54d1843325d77decee236a44e87d48b9a8ab" translate="yes" xml:space="preserve">
          <source>You can also use application tests to check routing. Can the user navigate from one page to another? Will they see the right components when the page is loaded? It's easy to check these in application tests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72aa79f1b8f384843377aea66d93c8fc47a85395" translate="yes" xml:space="preserve">
          <source>You can also use the &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Templates.helpers.html#method_input&quot;&gt;&lt;code&gt;{{input}}&lt;/code&gt;&lt;/a&gt; helper to create a checkbox by setting its &lt;code&gt;type&lt;/code&gt;:</source>
          <target state="translated">Tambi&amp;eacute;n puede usar el ayudante &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Templates.helpers.html#method_input&quot;&gt; &lt;code&gt;{{input}}&lt;/code&gt; &lt;/a&gt; para crear una casilla de verificaci&amp;oacute;n configurando su &lt;code&gt;type&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="eb5aee03132d9bc261fd345c3973e0a85cd6f8e6" translate="yes" xml:space="preserve">
          <source>You can also use the &lt;code&gt;value&lt;/code&gt; option:</source>
          <target state="translated">Tambi&amp;eacute;n puede utilizar la opci&amp;oacute;n de &lt;code&gt;value&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="336f49b9ae0d3c27311ed52797674adbf85d7c6a" translate="yes" xml:space="preserve">
          <source>You can also use this method on DOM Element objects.</source>
          <target state="translated">También puedes usar este método en los objetos de elementos DOM.</target>
        </trans-unit>
        <trans-unit id="0d0c2739133d8fbe3d42a666c737cb1a4659ab42" translate="yes" xml:space="preserve">
          <source>You can apply &lt;code&gt;...attributes&lt;/code&gt; to elements that have explicit attributes as well. If &lt;code&gt;...attributes&lt;/code&gt; comes &lt;em&gt;after&lt;/em&gt; another attribute, then it'll be possible for the user to override them:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1081047683b318169e277b614b9fbd48e69e53a8" translate="yes" xml:space="preserve">
          <source>You can avoid passing a string as the first parameter. In that case Ember Data will infer the type from the key name.</source>
          <target state="translated">Puedes evitar pasar una cadena como primer parámetro.En ese caso,Ember Data deducirá el tipo a partir del nombre de la clave.</target>
        </trans-unit>
        <trans-unit id="9b46ae54d361d9b8ccac0153dfe2cd64d8512063" translate="yes" xml:space="preserve">
          <source>You can avoid passing a string as the first parameter. In that case Ember Data will infer the type from the singularized key name.</source>
          <target state="translated">Puedes evitar pasar una cadena como primer parámetro.En ese caso,Ember Data deducirá el tipo a partir del nombre de la clave singularizada.</target>
        </trans-unit>
        <trans-unit id="95ddfdd2a5fc42c5b8feba85a925492634b05595" translate="yes" xml:space="preserve">
          <source>You can bind attributes to the DOM element that represents a component by using &lt;code&gt;attributeBindings&lt;/code&gt;:</source>
          <target state="translated">Puede vincular atributos al elemento DOM que representa un componente mediante el uso de &lt;code&gt;attributeBindings&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="86f30d72a75f8ae4b5db6e64b600ea4442253193" translate="yes" xml:space="preserve">
          <source>You can choose not to give your class a name, making it an &lt;em&gt;anonymous&lt;/em&gt; class. For instance, you could do a default export like this, but it is not recommended:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4575941e42cfaa4efd61ac232e901125b7aaad7" translate="yes" xml:space="preserve">
          <source>You can combine tracked properties with ES6 getters to make &lt;code&gt;headers&lt;/code&gt; dynamic. For example, you may have a &lt;code&gt;session&lt;/code&gt; service with a tracked property called &lt;code&gt;authToken&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9986af59d6bcd5244e38bb82e0eeb25e2961dcbc" translate="yes" xml:space="preserve">
          <source>You can configure a Tomster icon to show up in Chrome's URL bar whenever you are visiting a site that uses Ember.</source>
          <target state="translated">Puedes configurar un icono de Tomster para que aparezca en la barra de direcciones de Chrome siempre que visites un sitio que utilice Ember.</target>
        </trans-unit>
        <trans-unit id="5d3a6e160aaf66ed86a4e5337f24cc04665ef575" translate="yes" xml:space="preserve">
          <source>You can configure an Ember favicon to show up in Chrome's URL bar whenever you are visiting a site that uses Ember.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13002d34e50c8cbb269c39a328a94e87ba847104" translate="yes" xml:space="preserve">
          <source>You can configure this error-handling logic via the &lt;code&gt;error&lt;/code&gt; handler on the route's &lt;code&gt;actions&lt;/code&gt; hash. When a promise rejects, an &lt;code&gt;error&lt;/code&gt; event will be fired on that route and bubble up to &lt;code&gt;route:application&lt;/code&gt;'s default error handler unless it is handled by a custom error handler along the way, e.g.:</source>
          <target state="translated">Puede configurar esta l&amp;oacute;gica de manejo de errores a trav&amp;eacute;s del controlador de &lt;code&gt;error&lt;/code&gt; es en el hash de &lt;code&gt;actions&lt;/code&gt; la ruta . Cuando se rechaza una promesa, &lt;code&gt;error&lt;/code&gt; activar&amp;aacute; un evento de error en esa ruta y se propagar&amp;aacute; hasta la &lt;code&gt;route:application&lt;/code&gt; controlador de errores predeterminado de la aplicaci&amp;oacute;n a menos que sea manejado por un controlador de errores personalizado en el camino, por ejemplo:</target>
        </trans-unit>
        <trans-unit id="c438bc26519ab0aea59a98fc54cc66b83e513722" translate="yes" xml:space="preserve">
          <source>You can configure this error-handling logic via the &lt;code&gt;error&lt;/code&gt; handler. When a promise rejects, an &lt;code&gt;error&lt;/code&gt; event will be fired on that route and bubble up to &lt;code&gt;route:application&lt;/code&gt;'s default error handler unless it is handled by a custom error handler along the way, e.g.:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1373748a6a40c42d4acd8e8c9df3ac723dfc197" translate="yes" xml:space="preserve">
          <source>You can configure which classes to include prototype extensions for in your application's configuration like so:</source>
          <target state="translated">Puede configurar las clases para incluir extensiones de prototipos en la configuración de su aplicación de esta manera:</target>
        </trans-unit>
        <trans-unit id="1d0c546350d929559c32675d186c8c5618e522ee" translate="yes" xml:space="preserve">
          <source>You can continue drill into the Inspector as long as properties contain either an Ember object or an array. In the image below, we clicked on the &lt;code&gt;model&lt;/code&gt; property first, then clicked on the &lt;code&gt;store&lt;/code&gt; property.</source>
          <target state="translated">Puede continuar profundizando en el Inspector siempre que las propiedades contengan un objeto Ember o una matriz. En la imagen de abajo, primero hicimos clic en la propiedad del &lt;code&gt;model&lt;/code&gt; o y luego en la propiedad de la &lt;code&gt;store&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3c1be4e93f57f3b51dd30915bd19e37584fb1246" translate="yes" xml:space="preserve">
          <source>You can create a new &lt;em&gt;instance&lt;/em&gt; of the class using the &lt;code&gt;new&lt;/code&gt; keyword:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d009c8f24960fb365a042c48a63c55b0923b1ff0" translate="yes" xml:space="preserve">
          <source>You can create an ID (globally unique within the webpage), then associate the label to the input with &lt;code&gt;for&lt;/code&gt; attribute and &lt;code&gt;@id&lt;/code&gt; argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5144453c187d593e3d019a6a078d07a8e3971db" translate="yes" xml:space="preserve">
          <source>You can create classes that extend existing classes, inheriting all of their elements, using the &lt;code&gt;extends&lt;/code&gt; keyword:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29941d4d50a4b6adb18ff37f3fe5ce1b72234bcc" translate="yes" xml:space="preserve">
          <source>You can create records by calling the &lt;a href=&quot;http://emberjs.com/api/data/classes/DS.Store.html#method_createRecord&quot;&gt;&lt;code&gt;createRecord()&lt;/code&gt;&lt;/a&gt; method on the store.</source>
          <target state="translated">Puede crear registros llamando al m&amp;eacute;todo &lt;a href=&quot;http://emberjs.com/api/data/classes/DS.Store.html#method_createRecord&quot;&gt; &lt;code&gt;createRecord()&lt;/code&gt; &lt;/a&gt; en la tienda.</target>
        </trans-unit>
        <trans-unit id="8126a926a6f115dc27c859bbf319a0fa0e433403" translate="yes" xml:space="preserve">
          <source>You can create records by calling the &lt;a href=&quot;https://api.emberjs.com/ember-data/release/classes/Store/methods#createRecord&quot;&gt;&lt;code&gt;createRecord()&lt;/code&gt;&lt;/a&gt; method on the store.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="051139e04944ab02bd040472a4b3647f79cf6c9e" translate="yes" xml:space="preserve">
          <source>You can create your own factory type by simply registering a factory with the new type. For example, to create a &lt;code&gt;user&lt;/code&gt; type, you'd simply register your factory with &lt;code&gt;application.register('user:user-to-register')&lt;/code&gt;.</source>
          <target state="translated">Puede crear su propio tipo de f&amp;aacute;brica simplemente registrando una f&amp;aacute;brica con el nuevo tipo. Por ejemplo, para crear un tipo de &lt;code&gt;user&lt;/code&gt; , simplemente registrar&amp;iacute;a su f&amp;aacute;brica con &lt;code&gt;application.register('user:user-to-register')&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7270c44b60416700c51aedead2abdaa04a5f46df" translate="yes" xml:space="preserve">
          <source>You can customize how JSONSerializer processes its payload by passing options in the &lt;code&gt;attrs&lt;/code&gt; hash or by subclassing the &lt;code&gt;JSONSerializer&lt;/code&gt; and overriding hooks:</source>
          <target state="translated">Puede personalizar c&amp;oacute;mo JSONSerializer procesa su carga &amp;uacute;til pasando opciones en el hash &lt;code&gt;attrs&lt;/code&gt; o subclasificando &lt;code&gt;JSONSerializer&lt;/code&gt; y anulando los ganchos:</target>
        </trans-unit>
        <trans-unit id="a5666878b6ad0c28cd9e049e3e6fb9c824edcc33" translate="yes" xml:space="preserve">
          <source>You can customize what type of element Ember generates for your component, including its attributes and class names, by creating a subclass of &lt;code&gt;Ember.Component&lt;/code&gt; in your JavaScript.</source>
          <target state="translated">Puede personalizar qu&amp;eacute; tipo de elemento genera Ember para su componente, incluidos sus atributos y nombres de clase, creando una subclase de &lt;code&gt;Ember.Component&lt;/code&gt; en su JavaScript.</target>
        </trans-unit>
        <trans-unit id="9967d4df91336097c218ffa433eb28f772c03f47" translate="yes" xml:space="preserve">
          <source>You can define a &lt;code&gt;ready&lt;/code&gt; method on the &lt;code&gt;Ember.Application&lt;/code&gt; instance, which will be run by Ember when the application is initialized.</source>
          <target state="translated">Puede definir un m&amp;eacute;todo &lt;code&gt;ready&lt;/code&gt; en la instancia de &lt;code&gt;Ember.Application&lt;/code&gt; , que ser&amp;aacute; ejecutado por Ember cuando se inicialice la aplicaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="f88758e1b44eedda3cc2c7a18b88b1cf0313dc98" translate="yes" xml:space="preserve">
          <source>You can define a class by extending from &lt;code&gt;CoreObject&lt;/code&gt; using the &lt;code&gt;extend&lt;/code&gt; method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9659b7e6f934d57ca0bfeab2ee1a7958b83ef0f" translate="yes" xml:space="preserve">
          <source>You can define nested routes by passing a callback to &lt;code&gt;this.route&lt;/code&gt;:</source>
          <target state="translated">Puede definir rutas anidadas pasando una devoluci&amp;oacute;n de llamada a &lt;code&gt;this.route&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="be5f0fc5ef7269eaba8dc9370469e09fd35a29ca" translate="yes" xml:space="preserve">
          <source>You can define the component's event handlers to manage the drop event. And if you need to, you may also stop events from bubbling, by using &lt;code&gt;return false;&lt;/code&gt;.</source>
          <target state="translated">Puede definir los controladores de eventos del componente para administrar el evento de ca&amp;iacute;da. Y si es necesario, tambi&amp;eacute;n puede detener la propagaci&amp;oacute;n de eventos utilizando &lt;code&gt;return false;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f5155b42adc09f20e8b838447047cf92d99c96b8" translate="yes" xml:space="preserve">
          <source>You can define the following configuration options:</source>
          <target state="translated">Puede definir las siguientes opciones de configuración:</target>
        </trans-unit>
        <trans-unit id="535422cf29771d09df6ebc4fd5f89c3e5ddc98cf" translate="yes" xml:space="preserve">
          <source>You can define wildcard routes that will match multiple URL segments. This could be used, for example, if you'd like a catch-all route which is useful when the user enters an incorrect URL not managed by your app. Wildcard routes begin with an asterisk.</source>
          <target state="translated">Puede definir rutas comodín que coincidan con múltiples segmentos de URL.Esto se podría utilizar,por ejemplo,si quieres una ruta comodín que sea útil cuando el usuario introduce una URL incorrecta no gestionada por tu aplicación.Las rutas comodín comienzan con un asterisco.</target>
        </trans-unit>
        <trans-unit id="d21b52924eea416c35e82f9fc59fd5ed6c48fab9" translate="yes" xml:space="preserve">
          <source>You can deploy your application to any web server by copying the output from &lt;code&gt;ember build&lt;/code&gt; to any web server:</source>
          <target state="translated">Puede implementar su aplicaci&amp;oacute;n en cualquier servidor web copiando la salida de &lt;code&gt;ember build&lt;/code&gt; a cualquier servidor web:</target>
        </trans-unit>
        <trans-unit id="fde757d9c4c3d8abc62788701efcc26e5b0db0c8" translate="yes" xml:space="preserve">
          <source>You can easily transform each item in an enumerable using the &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Enumerable.html#method_map&quot;&gt;&lt;code&gt;map()&lt;/code&gt;&lt;/a&gt; method, which creates a new array with results of calling a function on each item in the enumerable.</source>
          <target state="translated">Puede transformar f&amp;aacute;cilmente cada elemento en un enumerable utilizando el m&amp;eacute;todo &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Enumerable.html#method_map&quot;&gt; &lt;code&gt;map()&lt;/code&gt; &lt;/a&gt; , que crea una nueva matriz con los resultados de llamar a una funci&amp;oacute;n en cada elemento del enumerable.</target>
        </trans-unit>
        <trans-unit id="a70b6bab1536578bc7cec522a368573107514930" translate="yes" xml:space="preserve">
          <source>You can edit &lt;code&gt;String&lt;/code&gt;, &lt;code&gt;Number&lt;/code&gt;, and &lt;code&gt;Boolean&lt;/code&gt; properties in the Inspector. Your changes will be reflected immediately in your app. Click on a property's value to start editing it.</source>
          <target state="translated">Puede editar &lt;code&gt;Boolean&lt;/code&gt; propiedades &lt;code&gt;String&lt;/code&gt; , &lt;code&gt;Number&lt;/code&gt; y Boolean en el Inspector. Sus cambios se reflejar&amp;aacute;n inmediatamente en su aplicaci&amp;oacute;n. Haga clic en el valor de una propiedad para comenzar a editarla.</target>
        </trans-unit>
        <trans-unit id="284bf39afb8f5f3aeec9d3e24ba420863568743f" translate="yes" xml:space="preserve">
          <source>You can even use SVG or web components without any changes. As long as your HTML is valid, Ember will render it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c519a137c8a7240a8668ceb93f3c3a8158e89328" translate="yes" xml:space="preserve">
          <source>You can expose objects to the console by clicking on the &lt;code&gt;$E&lt;/code&gt; button within the Inspector. This will set the global &lt;code&gt;$E&lt;/code&gt; variable to the chosen object.</source>
          <target state="translated">Puede exponer objetos a la consola haciendo clic en el bot&amp;oacute;n &lt;code&gt;$E&lt;/code&gt; dentro del Inspector. Esto establecer&amp;aacute; la variable &lt;code&gt;$E&lt;/code&gt; global en el objeto elegido.</target>
        </trans-unit>
        <trans-unit id="bc46e4ad90c33d8c17299fa950918f15f7deae0d" translate="yes" xml:space="preserve">
          <source>You can filter by clicking on the following pills: &lt;code&gt;Rejected&lt;/code&gt;, &lt;code&gt;Pending&lt;/code&gt;, &lt;code&gt;Fulfilled&lt;/code&gt;.</source>
          <target state="translated">Puede filtrar haciendo clic en las siguientes p&amp;iacute;ldoras: &lt;code&gt;Rejected&lt;/code&gt; , &lt;code&gt;Pending&lt;/code&gt; , &lt;code&gt;Fulfilled&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="19153f2f011646812cbf369337842417b695217c" translate="yes" xml:space="preserve">
          <source>You can filter the deprecations by typing a query in the search box. You can also clear the current deprecations by clicking on the clear icon at the top.</source>
          <target state="translated">Puedes filtrar las deprecaciones escribiendo una consulta en el cuadro de búsqueda.También puedes borrar las deprecaciones actuales haciendo clic en el icono de borrar en la parte superior.</target>
        </trans-unit>
        <trans-unit id="08d7ee724babad2481b94dc2726abf834c60094f" translate="yes" xml:space="preserve">
          <source>You can find listings of addons on &lt;a href=&quot;http://emberobserver.com&quot;&gt;Ember Observer&lt;/a&gt;.</source>
          <target state="translated">Puede encontrar listados de complementos en &lt;a href=&quot;http://emberobserver.com&quot;&gt;Ember Observer&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f68435c17de0613a2543881a281132fbd6d683a0" translate="yes" xml:space="preserve">
          <source>You can find the full list of helpers in the &lt;a href=&quot;https://github.com/emberjs/ember-test-helpers/blob/master/API.md&quot;&gt;API Documentation of ember-test-helpers&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d178dedfcead04d6e5e7cae35cae8dc7208cf65b" translate="yes" xml:space="preserve">
          <source>You can follow along by generating your own component with &lt;code&gt;ember generate
component comment-form&lt;/code&gt;.</source>
          <target state="translated">Puede seguir generando su propio componente con &lt;code&gt;ember generate component comment-form&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1dca45437258033b64333ae9063690cc4f9bf147" translate="yes" xml:space="preserve">
          <source>You can follow along by generating your own component with &lt;code&gt;ember generate
component delayed-typeahead&lt;/code&gt;.</source>
          <target state="translated">Puede seguir generando su propio componente con &lt;code&gt;ember generate component delayed-typeahead&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="35ac138a56df66cb36c40b9aeeeb1e3c345ed8ed" translate="yes" xml:space="preserve">
          <source>You can follow along by generating your own component with &lt;code&gt;ember generate
component location-indicator&lt;/code&gt;.</source>
          <target state="translated">Puede seguir generando su propio componente con el &lt;code&gt;ember generate component location-indicator&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="05ca9bc6f7a18ad144121adfd2e2e31852aaa01f" translate="yes" xml:space="preserve">
          <source>You can follow along by generating your own component with &lt;code&gt;ember generate
component magic-title&lt;/code&gt;.</source>
          <target state="translated">Puede seguir generando su propio componente con &lt;code&gt;ember generate component magic-title&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7918f87a1abe83575a47a05d159e5095dd02a154" translate="yes" xml:space="preserve">
          <source>You can follow along by generating your own component with &lt;code&gt;ember generate
component pretty-color&lt;/code&gt;.</source>
          <target state="translated">Puede seguir generando su propio componente con &lt;code&gt;ember generate component pretty-color&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="33941ff4e8458b6f5e7bd69861ecc424d51b0636" translate="yes" xml:space="preserve">
          <source>You can follow along by generating your own controller with &lt;code&gt;ember generate
controller post&lt;/code&gt;, and &lt;code&gt;ember generate controller comments&lt;/code&gt;.</source>
          <target state="translated">Puede seguir generando su propio controlador con &lt;code&gt;ember generate controller post&lt;/code&gt; y &lt;code&gt;ember generate controller comments&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d1600d4c8d43b2ab746957a915dc70aab5527c1f" translate="yes" xml:space="preserve">
          <source>You can follow along by generating your own controller with &lt;code&gt;ember generate
controller posts&lt;/code&gt;.</source>
          <target state="translated">Puede seguir generando su propio controlador con &lt;code&gt;ember generate controller posts&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3a28addaf1b706dfe366b74be4e77f13cd3b26c0" translate="yes" xml:space="preserve">
          <source>You can follow along by generating your own helper with &lt;code&gt;ember generate helper
format-currency&lt;/code&gt;.</source>
          <target state="translated">Puede seguir generando su propio ayudante con &lt;code&gt;ember generate helper format-currency&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="11a442fa4089f7c54cb0daae45878b21101840f4" translate="yes" xml:space="preserve">
          <source>You can follow along by generating your own model with &lt;code&gt;ember generate
model player&lt;/code&gt;.</source>
          <target state="translated">Puede seguir generando su propio modelo con &lt;code&gt;ember generate model player&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="de05884f0101333c8b3e9811573826da92686b4e" translate="yes" xml:space="preserve">
          <source>You can follow along by generating your own user and profile models with &lt;code&gt;ember
generate model user&lt;/code&gt; and &lt;code&gt;ember generate model profile&lt;/code&gt;.</source>
          <target state="translated">Puede seguirlo generando sus propios modelos de usuario y perfil con &lt;code&gt;ember generate model user&lt;/code&gt; y &lt;code&gt;ember generate model profile&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="745d25bcd464e7c38d3932e96359cd94e12aa1ed" translate="yes" xml:space="preserve">
          <source>You can generate an Ember Data Model using Ember CLI. We'll call our model &lt;code&gt;rental&lt;/code&gt; and generate it as follows:</source>
          <target state="translated">Puede generar un modelo de datos de Ember mediante la CLI de Ember. Llamaremos a nuestro modelo de &lt;code&gt;rental&lt;/code&gt; y lo generaremos de la siguiente manera:</target>
        </trans-unit>
        <trans-unit id="0a3ef966dac57d478b51077dd76933188cddc580" translate="yes" xml:space="preserve">
          <source>You can have as many of both as you want, so long as the parameters come first:</source>
          <target state="translated">Puedes tener tantos de ambos como quieras,siempre y cuando los parámetros sean los primeros:</target>
        </trans-unit>
        <trans-unit id="164c14d6ceca80145023f7c5c55ffa525c2b2c37" translate="yes" xml:space="preserve">
          <source>You can inspect your models by clicking on the &lt;code&gt;Data&lt;/code&gt; tab. Check out &lt;a href=&quot;#toc_building-a-data-custom-adapter&quot;&gt;Building a Data Custom Adapter&lt;/a&gt; below if you maintain your own persistence library.</source>
          <target state="translated">Puede inspeccionar sus modelos haciendo clic en la pesta&amp;ntilde;a &lt;code&gt;Data&lt;/code&gt; . Consulte &lt;a href=&quot;#toc_building-a-data-custom-adapter&quot;&gt;Creaci&amp;oacute;n de un adaptador personalizado de datos a&lt;/a&gt; continuaci&amp;oacute;n si mantiene su propia biblioteca de persistencia.</target>
        </trans-unit>
        <trans-unit id="ec9ac2c8e690ea0ca4ada8f4552a66c36d9d7277" translate="yes" xml:space="preserve">
          <source>You can inspect your models by clicking on the &lt;code&gt;Data&lt;/code&gt; tab. Check out &lt;a href=&quot;#toc_building-a-data-custom-adapter&quot;&gt;Building a Data Custom Adapter&lt;/a&gt; below if you maintain your own persistence library. When you open the Data tab, you will see a list of model types defined in your application, along with the number of loaded records. The Inspector displays the loaded records when you click on a model type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="274c90b3871c55c1f8826d9438b969033b8cec47" translate="yes" xml:space="preserve">
          <source>You can install Ember with a single command using npm, the Node.js package manager. Type this into your terminal:</source>
          <target state="translated">Puedes instalar Ember con un solo comando usando npm,el gestor de paquetes Node.js.Escriba esto en su terminal:</target>
        </trans-unit>
        <trans-unit id="e33df6fb0fa79f8014dbc0ee16ffa25d94a366ca" translate="yes" xml:space="preserve">
          <source>You can install the Inspector on Google Chrome as a new Developer Tool. To begin, visit the Extension page on the &lt;a href=&quot;https://chrome.google.com/webstore/detail/ember-inspector/bmdblncegkenkacieihfhpjfppoconhi&quot;&gt;Chrome Web Store&lt;/a&gt;.</source>
          <target state="translated">Puede instalar Inspector en Google Chrome como una nueva herramienta para desarrolladores. Para comenzar, visite la p&amp;aacute;gina de Extensi&amp;oacute;n en &lt;a href=&quot;https://chrome.google.com/webstore/detail/ember-inspector/bmdblncegkenkacieihfhpjfppoconhi&quot;&gt;Chrome Web Store&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c1e975ce10515cdb401f506933c2eee9857552b8" translate="yes" xml:space="preserve">
          <source>You can install the Inspector on Google Chrome, Firefox, other browsers (via a bookmarklet), and on mobile devices by following the steps below.</source>
          <target state="translated">Puedes instalar el Inspector en Google Chrome,Firefox,otros navegadores (a través de un bookmarklet)y en dispositivos móviles siguiendo los pasos que se indican a continuación.</target>
        </trans-unit>
        <trans-unit id="3ad630b0266b853bf1c273b32d384023a18d6392" translate="yes" xml:space="preserve">
          <source>You can install the latest version of &lt;code&gt;ember-cli&lt;/code&gt; by following the &lt;a href=&quot;https://guides.emberjs.com/getting-started/quick-start/#toc_install-ember&quot;&gt;Quick Start&lt;/a&gt; guide &quot;Installing Ember&quot; section.</source>
          <target state="translated">Puede instalar la &amp;uacute;ltima versi&amp;oacute;n de &lt;code&gt;ember-cli&lt;/code&gt; siguiendo la secci&amp;oacute;n &quot;Instalaci&amp;oacute;n de Ember&quot; de la gu&amp;iacute;a de &lt;a href=&quot;https://guides.emberjs.com/getting-started/quick-start/#toc_install-ember&quot;&gt;inicio r&amp;aacute;pido&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d95293fec3ff9516bd23198c82a42af8a6652faf" translate="yes" xml:space="preserve">
          <source>You can instead model this through getters and setters, deriving the value from the state of your component:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aed0db7ec0b7f94a3006bf5cb306cb0901dee78f" translate="yes" xml:space="preserve">
          <source>You can invoke it like this:</source>
          <target state="translated">Puedes invocarla así:</target>
        </trans-unit>
        <trans-unit id="cece65758c607f0b1ce4128ca02dd8e913ed196a" translate="yes" xml:space="preserve">
          <source>You can learn more about writing a custom adapter by reading the &lt;code&gt;Adapter&lt;/code&gt; documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8eb5e739749aea400d436883367f4899bf8bdf45" translate="yes" xml:space="preserve">
          <source>You can learn more about writing a custom adapter by reading the &lt;code&gt;DS.Adapter&lt;/code&gt; documentation.</source>
          <target state="translated">Puede obtener m&amp;aacute;s informaci&amp;oacute;n sobre c&amp;oacute;mo escribir un adaptador personalizado leyendo la documentaci&amp;oacute;n de &lt;code&gt;DS.Adapter&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1530db60399ce39521684a84ecd24238fc4f51d9" translate="yes" xml:space="preserve">
          <source>You can leave off the path if it is the same as the route name. In this case, the following is equivalent to the above example:</source>
          <target state="translated">Puedes salir del camino si es el mismo que el nombre de la ruta.En este caso,lo siguiente es equivalente al ejemplo anterior:</target>
        </trans-unit>
        <trans-unit id="dcba13b361b826bab9f22af229454f3ee5664a3c" translate="yes" xml:space="preserve">
          <source>You can listen for events simply by adding the &lt;code&gt;on&lt;/code&gt; call to the end of your method declarations in classes or mixins that you write. For example:</source>
          <target state="translated">Puede escuchar eventos simplemente agregando el &lt;code&gt;on&lt;/code&gt; call al final de las declaraciones de su m&amp;eacute;todo en las clases o mixins que escriba. Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="d3df784a86d751131241068dfbaf6c3a26263779" translate="yes" xml:space="preserve">
          <source>You can manually coerce a native array into an array that implements the required interfaces using the convenience method &lt;code&gt;Ember.A&lt;/code&gt;:</source>
          <target state="translated">Puede convertir manualmente una matriz nativa en una matriz que implemente las interfaces necesarias utilizando el m&amp;eacute;todo de conveniencia &lt;code&gt;Ember.A&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="84cab421dd0dd807ca776f6eecf2c0dc60b919c7" translate="yes" xml:space="preserve">
          <source>You can manually set it before calling &lt;code&gt;App.setupForTesting()&lt;/code&gt;.</source>
          <target state="translated">Puede configurarlo manualmente antes de llamar a &lt;code&gt;App.setupForTesting()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="27c7bd753567a4c1b3da1e369807de097b78bd4f" translate="yes" xml:space="preserve">
          <source>You can mix positional and named arguments to make your templates easy to read.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ab9e8eae3658cbe9f4c467487adc5ee97d44f5a" translate="yes" xml:space="preserve">
          <source>You can nest the input inside the label.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5450649e62a8d19ce96beaf3bcc1e848c742b20d" translate="yes" xml:space="preserve">
          <source>You can now &lt;code&gt;import&lt;/code&gt; them in your app. (e.g. &lt;code&gt;import showdown from 'showdown';&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4227dcc5e7e9117d1ae54088486c1e6f1b2336b7" translate="yes" xml:space="preserve">
          <source>You can now &lt;code&gt;import&lt;/code&gt; them in your app. (e.g. &lt;code&gt;import { raw as icAjaxRaw } from 'ic-ajax';&lt;/code&gt;)</source>
          <target state="translated">Ahora puede &lt;code&gt;import&lt;/code&gt; arlos en su aplicaci&amp;oacute;n. (por ejemplo, &lt;code&gt;import { raw as icAjaxRaw } from 'ic-ajax';&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="134710248885a52a9eddc487fefc838a23d690e0" translate="yes" xml:space="preserve">
          <source>You can now proceed on to implement the &lt;a href=&quot;../service&quot;&gt;next feature&lt;/a&gt;, or continue on to test our newly created filter component.</source>
          <target state="translated">Ahora puede continuar con la implementaci&amp;oacute;n de la &lt;a href=&quot;../service&quot;&gt;siguiente funci&amp;oacute;n&lt;/a&gt; o continuar para probar nuestro componente de filtro reci&amp;eacute;n creado.</target>
        </trans-unit>
        <trans-unit id="cd3792b665314f9667c66d3a861d0668e1aa0c54" translate="yes" xml:space="preserve">
          <source>You can now type &lt;code&gt;resumeTest()&lt;/code&gt; in the console of your browser to continue the test execution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="604459bc895c8326510833e1df11b063d987353b" translate="yes" xml:space="preserve">
          <source>You can observe property changes simply by adding the &lt;code&gt;observes&lt;/code&gt; call to the end of your method declarations in classes that you write. For example:</source>
          <target state="translated">Puede observar los cambios de propiedad simplemente agregando la llamada de &lt;code&gt;observes&lt;/code&gt; al final de las declaraciones de su m&amp;eacute;todo en las clases que escribe. Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="5e380b5925a98b246667af35704179bdb52ce95d" translate="yes" xml:space="preserve">
          <source>You can optionally &lt;code&gt;preload&lt;/code&gt; specific attributes and relationships that you know of by passing them via the passed &lt;code&gt;options&lt;/code&gt;.</source>
          <target state="translated">Opcionalmente, puede &lt;code&gt;preload&lt;/code&gt; atributos y relaciones espec&amp;iacute;ficos que conoce pas&amp;aacute;ndolos a trav&amp;eacute;s de las &lt;code&gt;options&lt;/code&gt; pasadas .</target>
        </trans-unit>
        <trans-unit id="a9b7dc60ff0a4fb0fe22a4048011d25a8fdebadc" translate="yes" xml:space="preserve">
          <source>You can optionally pass an array of additional dependent keys as the second parameter to the macro, if your map function relies on any external values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62335e5060f3cdf84f963f9ecfeb712384bd3844" translate="yes" xml:space="preserve">
          <source>You can optionally pass arguments to the action handler. Any values passed to the &lt;code&gt;{{action}}&lt;/code&gt; helper after the action name will be passed to the handler as arguments.</source>
          <target state="translated">Opcionalmente, puede pasar argumentos al controlador de acciones. Cualquier valor que se pase al ayudante &lt;code&gt;{{action}}&lt;/code&gt; despu&amp;eacute;s del nombre de la acci&amp;oacute;n se pasar&amp;aacute; al controlador como argumentos.</target>
        </trans-unit>
        <trans-unit id="83a967dd540dfd8e48503f23a927c45fd5bb22b4" translate="yes" xml:space="preserve">
          <source>You can override any given property of the &lt;code&gt;Ember.LinkComponent&lt;/code&gt; that is generated by the &lt;code&gt;{{link-to}}&lt;/code&gt; component by passing key/value pairs, like so:</source>
          <target state="translated">Puede anular cualquier propiedad dada de &lt;code&gt;Ember.LinkComponent&lt;/code&gt; que es generado por el componente &lt;code&gt;{{link-to}}&lt;/code&gt; pasando pares clave / valor, as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="facf163a6673b8dc2e5b74811bdcffc5c0c2bd2c" translate="yes" xml:space="preserve">
          <source>You can override the &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Route.html#method_renderTemplate&quot;&gt;&lt;code&gt;renderTemplate()&lt;/code&gt;&lt;/a&gt; hook if you want finer control over template rendering. Among other things, it allows you to choose the controller used to configure the template and specific outlet to render it into.</source>
          <target state="translated">Puede anular el &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Route.html#method_renderTemplate&quot;&gt; &lt;code&gt;renderTemplate()&lt;/code&gt; &lt;/a&gt; si desea un control m&amp;aacute;s preciso sobre la representaci&amp;oacute;n de la plantilla. Entre otras cosas, le permite elegir el controlador utilizado para configurar la plantilla y la salida espec&amp;iacute;fica para renderizarla.</target>
        </trans-unit>
        <trans-unit id="7b4c074bc31fc838311e6d2ca173e2af5e432bbd" translate="yes" xml:space="preserve">
          <source>You can overwrite computed property with normal property (no longer computed), that won't change if dependencies change, if you set computed property and it won't have setter accessor function defined.</source>
          <target state="translated">Puedes sobrescribir la propiedad calculada con la propiedad normal (ya no calculada),que no cambiará si las dependencias cambian,si fijas la propiedad calculada y no tendrá definida la función de acceso al fijador.</target>
        </trans-unit>
        <trans-unit id="b5bddf88fa7745b3b67ac9f8b538e00a1b1c1d17" translate="yes" xml:space="preserve">
          <source>You can overwrite computed property without setters with a normal property (no longer computed) that won't change if dependencies change. You can also mark computed property as &lt;code&gt;.readOnly()&lt;/code&gt; and block all attempts to set it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c072ac76e1c4d3d58f1d847325464e1143d1ce5d" translate="yes" xml:space="preserve">
          <source>You can pass a hash of these values to a computed property like this:</source>
          <target state="translated">Puedes pasar un hash de estos valores a una propiedad computarizada como esta:</target>
        </trans-unit>
        <trans-unit id="d13ac17c4902b4a0e8b5c3474662b942b80ab77d" translate="yes" xml:space="preserve">
          <source>You can pass a hash with two functions, &lt;code&gt;get&lt;/code&gt; and &lt;code&gt;set&lt;/code&gt;, as an argument to provide both a getter and setter:</source>
          <target state="translated">Puede pasar un hash con dos funciones, &lt;code&gt;get&lt;/code&gt; y &lt;code&gt;set&lt;/code&gt; , como argumento para proporcionar tanto un getter como un setter:</target>
        </trans-unit>
        <trans-unit id="0c93b4ae1807d07df0b269f54a5e2b99ee276f9d" translate="yes" xml:space="preserve">
          <source>You can pass an implementation name (&lt;code&gt;hash&lt;/code&gt;, &lt;code&gt;history&lt;/code&gt;, &lt;code&gt;none&lt;/code&gt;, &lt;code&gt;auto&lt;/code&gt;) to force a particular implementation to be used in your application.</source>
          <target state="translated">Puede pasar un nombre de implementaci&amp;oacute;n ( &lt;code&gt;hash&lt;/code&gt; , &lt;code&gt;history&lt;/code&gt; , &lt;code&gt;none&lt;/code&gt; , &lt;code&gt;auto&lt;/code&gt; m&amp;aacute;tico ) para forzar el uso de una implementaci&amp;oacute;n particular en su aplicaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="09668c6ad971ca5f785b5186fc5bd350e5bcd531" translate="yes" xml:space="preserve">
          <source>You can pass an object of values to &lt;code&gt;create&lt;/code&gt;, and they'll be assigned to the instance:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e39ee1b00fca2c95949c82ff1061ccd901738c12" translate="yes" xml:space="preserve">
          <source>You can pass as many named arguments as you'd like. They get added to the &lt;code&gt;namedArgs&lt;/code&gt; argument passed to the function:</source>
          <target state="translated">Puede pasar tantos argumentos con nombre como desee. Se agregan al argumento &lt;code&gt;namedArgs&lt;/code&gt; pasado a la funci&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="2c61836fc906f75dbbda85b31a1479046416a8ed" translate="yes" xml:space="preserve">
          <source>You can pass multiple blocks to a component by giving them names, and specifying which block you are yielding to with &lt;code&gt;{{yield}}&lt;/code&gt;. For instance, if we wanted to add a way for users to customize the title of our &lt;code&gt;&amp;lt;PersonProfile&amp;gt;&lt;/code&gt; component, we could add a named block inside of the header:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d714d9d2dca9ae1378dca6ed91881611d421392" translate="yes" xml:space="preserve">
          <source>You can pass one or more arguments to be used inside the function. In the above example, we passed the amount in cents as the first and only argument.</source>
          <target state="translated">Puedes pasar uno o más argumentos para ser usados dentro de la función.En el ejemplo anterior,pasamos la cantidad en céntimos como el primer y único argumento.</target>
        </trans-unit>
        <trans-unit id="60df59635cb1b119be0b3ea353cca7b675c0776a" translate="yes" xml:space="preserve">
          <source>You can pass the following standard &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; attributes within the input helper:</source>
          <target state="translated">Puede pasar los siguientes atributos &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; est&amp;aacute;ndar dentro del asistente de entrada:</target>
        </trans-unit>
        <trans-unit id="09d908a63c7f10481cea0372e5afe3bb58d462b3" translate="yes" xml:space="preserve">
          <source>You can prevent Ember from making changes to the URL by &lt;a href=&quot;../specifying-url-type&quot;&gt;changing the router's &lt;code&gt;location&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;none&lt;/code&gt;:</source>
          <target state="translated">Puede evitar que Ember realice cambios en la URL &lt;a href=&quot;../specifying-url-type&quot;&gt;cambiando la &lt;code&gt;location&lt;/code&gt; &lt;/a&gt; del enrutador a &lt;code&gt;none&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="6156155a1130ff496b90d3de6af34903ab397a96" translate="yes" xml:space="preserve">
          <source>You can provide an &lt;code&gt;onerror&lt;/code&gt; function that will be called with the error details if any errors occur within your promise. This function can be anything, but a common practice is to call &lt;code&gt;console.assert&lt;/code&gt; to dump the error to the console.</source>
          <target state="translated">Puede proporcionar una funci&amp;oacute;n de &lt;code&gt;onerror&lt;/code&gt; que se llamar&amp;aacute; con los detalles del error si se produce alg&amp;uacute;n error dentro de su promesa. Esta funci&amp;oacute;n puede ser cualquier cosa, pero una pr&amp;aacute;ctica com&amp;uacute;n es llamar a &lt;code&gt;console.assert&lt;/code&gt; para volcar el error en la consola.</target>
        </trans-unit>
        <trans-unit id="ae7bba23d9d7eedd979283292d7bfbaa00d2c814" translate="yes" xml:space="preserve">
          <source>You can read more about Ember Data in the &lt;a href=&quot;https://guides.emberjs.com/models/&quot;&gt;Models section&lt;/a&gt;.</source>
          <target state="translated">Puede leer m&amp;aacute;s sobre Ember Data en la &lt;a href=&quot;https://guides.emberjs.com/models/&quot;&gt;secci&amp;oacute;n Modelos&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="82468447fdc6fd60a840865bf667b27661c295cc" translate="yes" xml:space="preserve">
          <source>You can reload the container tab by clicking on the reload icon. To search for instances, type a query in the search box.</source>
          <target state="translated">Puedes recargar la pestaña del contenedor haciendo clic en el icono de recarga.Para buscar instancias,escriba una consulta en el cuadro de búsqueda.</target>
        </trans-unit>
        <trans-unit id="6a2d690f11a37ec44a69c18d88e362bdbbb8eda9" translate="yes" xml:space="preserve">
          <source>You can render &lt;code&gt;photos.hbs&lt;/code&gt; into the &lt;code&gt;&quot;anOutletName&quot;&lt;/code&gt; outlet of &lt;code&gt;application.hbs&lt;/code&gt; by calling &lt;code&gt;render&lt;/code&gt;:</source>
          <target state="translated">Puede renderizar &lt;code&gt;photos.hbs&lt;/code&gt; en la salida &lt;code&gt;&quot;anOutletName&quot;&lt;/code&gt; de &lt;code&gt;application.hbs&lt;/code&gt; llamando a &lt;code&gt;render&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="7aacae50e9f34c96a434675cbc8ae5fa80982409" translate="yes" xml:space="preserve">
          <source>You can respond to user events on your component like double-clicking, hovering, and key presses through event handlers. Simply implement the name of the event you want to respond to as a method on your component.</source>
          <target state="translated">Puedes responder a los eventos de los usuarios en tu componente como hacer doble clic,flotar y pulsar teclas a través de los manejadores de eventos.Simplemente implementa el nombre del evento al que quieres responder como un método en tu componente.</target>
        </trans-unit>
        <trans-unit id="a2235a2c16bf318421effd350868b1af616d5683" translate="yes" xml:space="preserve">
          <source>You can retrieve models from the store in several ways. To retrieve a record for a specific id, use &lt;code&gt;DS.Store&lt;/code&gt;'s &lt;code&gt;findRecord()&lt;/code&gt; method:</source>
          <target state="translated">Puede recuperar modelos de la tienda de varias formas. Para recuperar un registro de identificaci&amp;oacute;n espec&amp;iacute;fico, utilice &lt;code&gt;DS.Store&lt;/code&gt; 's &lt;code&gt;findRecord()&lt;/code&gt; m&amp;eacute;todo:</target>
        </trans-unit>
        <trans-unit id="3184e62a2e2139ad209aea3da680268007068308" translate="yes" xml:space="preserve">
          <source>You can retrieve models from the store in several ways. To retrieve a record for a specific id, use the &lt;code&gt;Store&lt;/code&gt;'s &lt;code&gt;findRecord()&lt;/code&gt; method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cad87831ee535c97dae89a261e1413fd3f8e2750" translate="yes" xml:space="preserve">
          <source>You can return a promise from this hook to pause the transition until the promise resolves (or rejects). This could be useful, for instance, for retrieving async code from the server that is required to enter a route.</source>
          <target state="translated">Puedes devolver una promesa de este gancho para detener la transición hasta que la promesa se resuelva (o se rechace).Esto podría ser útil,por ejemplo,para recuperar el código de sincronización del servidor que se requiere para introducir una ruta.</target>
        </trans-unit>
        <trans-unit id="4c62406c29e1c1c164c9a69275c18d7d99f5c760" translate="yes" xml:space="preserve">
          <source>You can say:</source>
          <target state="translated">Puedes decir:</target>
        </trans-unit>
        <trans-unit id="dbdb460c58d8bc8a2d35d18cd2bcca9731f435a8" translate="yes" xml:space="preserve">
          <source>You can see a hierarchical list of Promises with labels describing each Promise, its state, its settled value, and the time it took to settle.</source>
          <target state="translated">Se puede ver una lista jerárquica de las promesas con etiquetas que describen cada una de ellas,su estado,su valor establecido y el tiempo que tardó en establecerse.</target>
        </trans-unit>
        <trans-unit id="c01b63f65fe4b7eedf939fe3afdac968f823fca3" translate="yes" xml:space="preserve">
          <source>You can see that we've replaced &lt;code&gt;{{body}}&lt;/code&gt; with &lt;code&gt;{{yield}}&lt;/code&gt;. This tells Ember that this content will be provided when the component is used.</source>
          <target state="translated">Puede ver que reemplazamos &lt;code&gt;{{body}}&lt;/code&gt; con &lt;code&gt;{{yield}}&lt;/code&gt; . Esto le dice a Ember que este contenido se proporcionar&amp;aacute; cuando se utilice el componente.</target>
        </trans-unit>
        <trans-unit id="020e17120dd0ef511e6021920a028e89609de2e6" translate="yes" xml:space="preserve">
          <source>You can see the path to the current object at the top of the Inspector. You can go back to the previous object by clicking on the left-facing arrow at the top left.</source>
          <target state="translated">Puedes ver el camino hacia el objeto actual en la parte superior del Inspector.Puede volver al objeto anterior haciendo clic en la flecha hacia la izquierda en la parte superior izquierda.</target>
        </trans-unit>
        <trans-unit id="881b061cce8150e45980e7d0484a879f2baca638" translate="yes" xml:space="preserve">
          <source>You can see the total number of deprecations next to the &lt;code&gt;Deprecations&lt;/code&gt; menu. You can also see the number of occurrences for each deprecation.</source>
          <target state="translated">Puede ver el n&amp;uacute;mero total de bajas al lado del men&amp;uacute; &lt;code&gt;Deprecations&lt;/code&gt; . Tambi&amp;eacute;n puede ver el n&amp;uacute;mero de ocurrencias de cada desactivaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="23b0bedec2362bcce4fcf72d2b4394b2bc1741e8" translate="yes" xml:space="preserve">
          <source>You can see this in action if you create a new route that shows a different list of people. As an additional exercise (that we won't cover), you can try to create a &lt;code&gt;programmers&lt;/code&gt; route that shows a list of famous programmers. If you re-use the &lt;code&gt;&amp;lt;PeopleList&amp;gt;&lt;/code&gt; component, you can do it with almost no code at all.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6242dc44002047d4bbaca4cf1d3172d46d6ff425" translate="yes" xml:space="preserve">
          <source>You can see this in action if you create a new route that shows a different list of people. As an exercise for the reader, you may try to create a &lt;code&gt;programmers&lt;/code&gt; route that shows a list of famous programmers. By re-using the &lt;code&gt;people-list&lt;/code&gt; component, you can do it in almost no code at all.</source>
          <target state="translated">Puede ver esto en acci&amp;oacute;n si crea una nueva ruta que muestra una lista diferente de personas. Como ejercicio para el lector, puede intentar crear una ruta de &lt;code&gt;programmers&lt;/code&gt; que muestre una lista de programadores famosos. Al reutilizar el componente de &lt;code&gt;people-list&lt;/code&gt; , puede hacerlo casi sin c&amp;oacute;digo.</target>
        </trans-unit>
        <trans-unit id="6d910c38d8efa562d07ccaa6d6b0569ff35d5eaf" translate="yes" xml:space="preserve">
          <source>You can send Ember objects and arrays to the Inspector by using &lt;code&gt;EmberInspector.inspect&lt;/code&gt; within the console.</source>
          <target state="translated">Puede enviar objetos y matrices Ember al Inspector utilizando &lt;code&gt;EmberInspector.inspect&lt;/code&gt; dentro de la consola.</target>
        </trans-unit>
        <trans-unit id="2a369ae750a012526a7b0355eab980dc0c639452" translate="yes" xml:space="preserve">
          <source>You can send the deprecation message's stack trace to the console by clicking on &lt;code&gt;Trace in the console&lt;/code&gt;.</source>
          <target state="translated">Puede enviar el seguimiento de la pila del mensaje de obsolescencia a la consola haciendo clic en &lt;code&gt;Trace in the console&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5f8fd6a8c4b2fc2e4adceb17951e4d15309ebf9f" translate="yes" xml:space="preserve">
          <source>You can set up an observer on an object by using &lt;code&gt;Ember.observer&lt;/code&gt;:</source>
          <target state="translated">Puede configurar un observador en un objeto utilizando &lt;code&gt;Ember.observer&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="0e54de88613d796b2b79fd8e5dd83832a62074a7" translate="yes" xml:space="preserve">
          <source>You can significantly reduce the amount of code you need to write and maintain by relying on Ember's conventions. Since these conventions will be shared among developers on your team, following them leads to code that is easier to maintain and understand.</source>
          <target state="translated">Puedes reducir significativamente la cantidad de código que necesitas escribir y mantener confiando en las convenciones de Ember.Ya que estas convenciones serán compartidas entre los desarrolladores de su equipo,seguirlas lleva a un código que es más fácil de mantener y entender.</target>
        </trans-unit>
        <trans-unit id="e9ac3091b6b67b9cec73c0242e17792af2751d25" translate="yes" xml:space="preserve">
          <source>You can specify an alternative event by using the &lt;code&gt;on&lt;/code&gt; option.</source>
          <target state="translated">Puede especificar un evento alternativo utilizando la opci&amp;oacute;n &lt;code&gt;on&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d1d372a4500ab33dad209a22a672bc78455f2f4b" translate="yes" xml:space="preserve">
          <source>You can specify the class of a component's element at invocation time the same way you would for a regular HTML element:</source>
          <target state="translated">Puede especificar la clase del elemento de un componente en el momento de la invocación de la misma manera que lo haría para un elemento HTML normal:</target>
        </trans-unit>
        <trans-unit id="49ec6c6a4d8cc32ab23db839055ef7ee6446a6c8" translate="yes" xml:space="preserve">
          <source>You can tell if a record has outstanding changes that have not yet been saved by checking its &lt;a href=&quot;http://emberjs.com/api/data/classes/DS.Model.html#property_hasDirtyAttributes&quot;&gt;&lt;code&gt;hasDirtyAttributes&lt;/code&gt;&lt;/a&gt; property. You can also see what parts of the record were changed and what the original value was using the &lt;a href=&quot;http://emberjs.com/api/data/classes/DS.Model.html#method_changedAttributes&quot;&gt;&lt;code&gt;changedAttributes()&lt;/code&gt;&lt;/a&gt; method. &lt;code&gt;changedAttributes&lt;/code&gt; returns an object, whose keys are the changed properties and values are an array of values &lt;code&gt;[oldValue, newValue]&lt;/code&gt;.</source>
          <target state="translated">Puede saber si un registro tiene cambios pendientes que a&amp;uacute;n no se han guardado al verificar su propiedad &lt;a href=&quot;http://emberjs.com/api/data/classes/DS.Model.html#property_hasDirtyAttributes&quot;&gt; &lt;code&gt;hasDirtyAttributes&lt;/code&gt; &lt;/a&gt; . Tambi&amp;eacute;n puede ver qu&amp;eacute; partes del registro se cambiaron y cu&amp;aacute;l era el valor original usando el m&amp;eacute;todo &lt;a href=&quot;http://emberjs.com/api/data/classes/DS.Model.html#method_changedAttributes&quot;&gt; &lt;code&gt;changedAttributes()&lt;/code&gt; &lt;/a&gt; . &lt;code&gt;changedAttributes&lt;/code&gt; devuelve un objeto, cuyas claves son las propiedades modificadas y los valores son una matriz de valores &lt;code&gt;[oldValue, newValue]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="935fc66183f42f35b9eb9f994ab6e1f71011e18e" translate="yes" xml:space="preserve">
          <source>You can tell if a record has outstanding changes that have not yet been saved by checking its &lt;a href=&quot;https://api.emberjs.com/ember-data/release/classes/Model/properties#hasDirtyAttributes&quot;&gt;&lt;code&gt;hasDirtyAttributes&lt;/code&gt;&lt;/a&gt; property. You can also see what parts of the record were changed and what the original value was using the &lt;a href=&quot;https://api.emberjs.com/ember-data/release/classes/Model/methods#changedAttributes&quot;&gt;&lt;code&gt;changedAttributes()&lt;/code&gt;&lt;/a&gt; method. &lt;code&gt;changedAttributes&lt;/code&gt; returns an object, whose keys are the changed properties and values are an array of values &lt;code&gt;[oldValue, newValue]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0983a609aca6361b8a199d94596c437f85f63233" translate="yes" xml:space="preserve">
          <source>You can tell the application to append the application template to a different element by specifying its &lt;code&gt;rootElement&lt;/code&gt; property:</source>
          <target state="translated">Puede decirle a la aplicaci&amp;oacute;n que agregue la plantilla de la aplicaci&amp;oacute;n a un elemento diferente especificando su propiedad &lt;code&gt;rootElement&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="4e6b9e59cb8a30a740f3a9691f1c448d194e8081" translate="yes" xml:space="preserve">
          <source>You can test that page titles are generated correctly by asserting on the value of &lt;code&gt;document.title&lt;/code&gt; in your tests:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98533fb1639b60399686505fb87fe895445bca25" translate="yes" xml:space="preserve">
          <source>You can then access the metadata via the &lt;code&gt;meta&lt;/code&gt; property:</source>
          <target state="translated">Luego puede acceder a los metadatos a trav&amp;eacute;s de la propiedad &lt;code&gt;meta&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="7a02fad14be2eccbf956190d88b769d0a28703a8" translate="yes" xml:space="preserve">
          <source>You can then define what the action does within the &lt;code&gt;actions&lt;/code&gt; hook of the controller, as you would with a component:</source>
          <target state="translated">Luego puede definir qu&amp;eacute; hace la acci&amp;oacute;n dentro del gancho de &lt;code&gt;actions&lt;/code&gt; del controlador, como lo har&amp;iacute;a con un componente:</target>
        </trans-unit>
        <trans-unit id="7a7a87bec51239e77b1eea284c82f97a05986626" translate="yes" xml:space="preserve">
          <source>You can then inspect components using the Object Inspector.</source>
          <target state="translated">Entonces puede inspeccionar los componentes usando el Inspector de Objetos.</target>
        </trans-unit>
        <trans-unit id="f4205737f0c742583b3c23355b7cc18013731686" translate="yes" xml:space="preserve">
          <source>You can think of &lt;code&gt;this&lt;/code&gt; as meaning, an argument came from &lt;code&gt;this&lt;/code&gt; component or controller, not a parent context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d0d2f91e3d5d46b532442bb3de7380ad580a305" translate="yes" xml:space="preserve">
          <source>You can think of a component as a black box of UI functionality. So far, you've learned how parent components can pass attributes in to a child component, and how that component can use those attributes from both JavaScript and its template.</source>
          <target state="translated">Puedes pensar en un componente como una caja negra de la funcionalidad de la interfaz de usuario.Hasta ahora,has aprendido cómo los componentes padres pueden pasar atributos a un componente hijo,y cómo ese componente puede usar esos atributos tanto de JavaScript como de su plantilla.</target>
        </trans-unit>
        <trans-unit id="e69db33d75c0b743feec73ce1813886e60f7ce08" translate="yes" xml:space="preserve">
          <source>You can think of components as Ember's way for letting you create your own HTML tags. In addition to rendering content, components can also have JavaScript code associated with them, allowing you to add &lt;em&gt;behavior&lt;/em&gt;, such as responding to a user clicking on your component.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1cb54f7549f6a0a8741273f881b930a8b75a877" translate="yes" xml:space="preserve">
          <source>You can think of the &lt;code&gt;Message&lt;/code&gt; component like a function, and the block as a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Callback_function&quot;&gt;&lt;em&gt;callback&lt;/em&gt;&lt;/a&gt; that you're passing to the component. From this perspective, the &lt;code&gt;{{yield}}&lt;/code&gt; syntax calls the callback.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aacb6e32cd55bdd7ebcaf8594f19b26ddb6eb94c" translate="yes" xml:space="preserve">
          <source>You can think of using &lt;code&gt;{{yield}}&lt;/code&gt; as leaving a placeholder for the content of the &lt;code&gt;&amp;lt;Message&amp;gt;&lt;/code&gt; tag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="182be84cf404104e8e159e5b81043e84f28b5022" translate="yes" xml:space="preserve">
          <source>You can transform an anonymous AMD module to a named one by using the &lt;code&gt;amd&lt;/code&gt; transformation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a81aca4bf188fbb9314423030d91a038e8f7e4f" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;payloadKeyFromModelName&lt;/code&gt; to override the root key for an outgoing request. By default, the RESTSerializer returns a camelized version of the model's name.</source>
          <target state="translated">Puede usar &lt;code&gt;payloadKeyFromModelName&lt;/code&gt; para anular la clave ra&amp;iacute;z para una solicitud saliente. De forma predeterminada, RESTSerializer devuelve una versi&amp;oacute;n camelizada del nombre del modelo.</target>
        </trans-unit>
        <trans-unit id="05cedb30055bca298b69bb66b44d44406740ce8d" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;settled&lt;/code&gt; as a helper in your tests directly and &lt;code&gt;await&lt;/code&gt; it for all async behavior to settle deliberately.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd74aa013a51bc21b6e48335bc85a308b4bddb83" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;yield&lt;/code&gt; inside a template to include the &lt;strong&gt;contents&lt;/strong&gt; of any block attached to the component. For instance, if we added a &lt;code&gt;{{yield}}&lt;/code&gt; to our component like so:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58b0c5a976534ee3456104a871955840e8f2ec1c" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;yield&lt;/code&gt; inside a template to include the &lt;strong&gt;contents&lt;/strong&gt; of any block attached to the component. The block will be executed in the context of the surrounding context or outer controller:</source>
          <target state="translated">Puede usar &lt;code&gt;yield&lt;/code&gt; dentro de una plantilla para incluir el &lt;strong&gt;contenido&lt;/strong&gt; de cualquier bloque adjunto al componente. El bloque se ejecutar&amp;aacute; en el contexto del contexto circundante o controlador externo:</target>
        </trans-unit>
        <trans-unit id="093a4fefdaba6b8fc52eed85a87f6995326888d9" translate="yes" xml:space="preserve">
          <source>You can use JavaScript's destructuring assignment shorthand in this case as well to clean up the above code:</source>
          <target state="translated">Puedes usar la taquigrafía de asignación de desestructuración de JavaScript en este caso también para limpiar el código anterior:</target>
        </trans-unit>
        <trans-unit id="3c598d6636f7fd7c0c755d63c357d2f3e26c384b" translate="yes" xml:space="preserve">
          <source>You can use JavaScript's destructuring assignment shorthand to clean up the code. This example is equivalent to the above example (note the function signature):</source>
          <target state="translated">Puedes usar la taquigrafía de asignación de desestructuración de JavaScript para limpiar el código.Este ejemplo es equivalente al ejemplo anterior (note la firma de la función):</target>
        </trans-unit>
        <trans-unit id="0033ffeb0f289b184f431870214f02f75ec0940d" translate="yes" xml:space="preserve">
          <source>You can use application tests (acceptance tests) to &lt;strong&gt;verify user stories and features from an end-user perspective&lt;/strong&gt;. You interact with the application in the same way as a user would&amp;mdash;from visiting the homepage, to authenticating oneself, to navigating to a different page, to filling out a form, etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="902a0e43c36ed08288f06c177a35befa6d905057" translate="yes" xml:space="preserve">
          <source>You can use attributes like any other property, including as part of a computed property. Frequently, you will want to define computed properties that combine or transform primitive attributes.</source>
          <target state="translated">Puedes usar atributos como cualquier otra propiedad,incluso como parte de una propiedad computarizada.Con frecuencia,querrás definir propiedades calculadas que combinen o transformen atributos primitivos.</target>
        </trans-unit>
        <trans-unit id="ff6712d14119e42f2f648411eca70403823a487c" translate="yes" xml:space="preserve">
          <source>You can use attributes like any other property, including from within &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/get&quot;&gt;getter functions&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d8d3ea2cc005e6e4cae27b9dbdea9e620e25a99" translate="yes" xml:space="preserve">
          <source>You can use computed properties as values to create new computed properties. Let's add a &lt;code&gt;description&lt;/code&gt; computed property to the previous example, and use the existing &lt;code&gt;fullName&lt;/code&gt; property and add in some other properties:</source>
          <target state="translated">Puede utilizar propiedades calculadas como valores para crear nuevas propiedades calculadas. &lt;code&gt;fullName&lt;/code&gt; una propiedad calculada de &lt;code&gt;description&lt;/code&gt; al ejemplo anterior, y usemos la propiedad fullName existente y agreguemos algunas otras propiedades:</target>
        </trans-unit>
        <trans-unit id="5782d9b5a1905940fe17a46e708d96c5d1f29b5b" translate="yes" xml:space="preserve">
          <source>You can use either angle bracket or curly brackets invocation for a given component within the same app, and even within the same template. This allows for gradual migration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="414b82177e51b1ede3f89123213df7ab25640b8d" translate="yes" xml:space="preserve">
          <source>You can use the &lt;a href=&quot;https://api.emberjs.com/ember/release/classes/Ember.Templates.components/methods#Input&quot;&gt;&lt;code&gt;&amp;lt;Input&amp;gt;&lt;/code&gt;&lt;/a&gt; component to create a checkbox. Set &lt;code&gt;@type&lt;/code&gt; to the string &lt;code&gt;&quot;checkbox&quot;&lt;/code&gt;, and use &lt;code&gt;@checked&lt;/code&gt; instead of &lt;code&gt;@value&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40c2fed14af2de2c6166b15eba436805c6a271cf" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;aria-label&lt;/code&gt; attribute to label the input with a string that is visually hidden but still available to assistive technology.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43abf2c717a2a4e681c77412c768f5117a20b4f0" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;if&lt;/code&gt; helper inside another helper as a nested helper:</source>
          <target state="translated">Puede usar el ayudante &lt;code&gt;if&lt;/code&gt; dentro de otro ayudante como ayudante anidado:</target>
        </trans-unit>
        <trans-unit id="5a318792d033717a4416c26b2892fc5ef7be45d0" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;unless&lt;/code&gt; helper inside another helper as a subexpression.</source>
          <target state="translated">Puede usar el asistente a &lt;code&gt;unless&lt;/code&gt; dentro de otro asistente como subexpresi&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="7a65c7baec2245d719bea9099125030e195a809a" translate="yes" xml:space="preserve">
          <source>You can use the Inspector to measure your app's render times. Click on &lt;code&gt;Render Performance&lt;/code&gt; to start inspecting render times.</source>
          <target state="translated">Puede usar el Inspector para medir los tiempos de renderizado de su aplicaci&amp;oacute;n. Haga clic en &lt;code&gt;Render Performance&lt;/code&gt; para comenzar a inspeccionar los tiempos de renderizado.</target>
        </trans-unit>
        <trans-unit id="e9b407e6dbdec202bf9f76df68780bb62ca56b6c" translate="yes" xml:space="preserve">
          <source>You can use the View Tree to inspect your application's current state. The View Tree shows you the currently rendered templates, models, controllers, and components, in a tree format. Click on the &lt;code&gt;View Tree&lt;/code&gt; menu on the left to see these.</source>
          <target state="translated">Puede utilizar el &amp;aacute;rbol de visualizaci&amp;oacute;n para inspeccionar el estado actual de su aplicaci&amp;oacute;n. El &amp;aacute;rbol de vista muestra las plantillas, modelos, controladores y componentes actualmente renderizados, en un formato de &amp;aacute;rbol. Haga clic en el men&amp;uacute; &lt;code&gt;View Tree&lt;/code&gt; a la izquierda para verlos.</target>
        </trans-unit>
        <trans-unit id="d548631b3f69069b0bb0e508648863fc3f49959a" translate="yes" xml:space="preserve">
          <source>You can use the block form of &lt;code&gt;if&lt;/code&gt; to conditionally render a section of the template.</source>
          <target state="translated">Puede utilizar la forma de bloque de &lt;code&gt;if&lt;/code&gt; para renderizar condicionalmente una secci&amp;oacute;n de la plantilla.</target>
        </trans-unit>
        <trans-unit id="a03638e87105c4e31623acf45f6a4ffb640b8251" translate="yes" xml:space="preserve">
          <source>You can use the methods defined in this module to access and modify array contents in a KVO-friendly way. You can also be notified whenever the membership of an array changes by using &lt;code&gt;.observes('myArray.[]')&lt;/code&gt;.</source>
          <target state="translated">Puede utilizar los m&amp;eacute;todos definidos en este m&amp;oacute;dulo para acceder y modificar el contenido de la matriz de una manera compatible con KVO. Tambi&amp;eacute;n puede recibir una notificaci&amp;oacute;n cada vez que cambie la pertenencia a una matriz utilizando &lt;code&gt;.observes('myArray.[]')&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f44ab25ac02458c2defe8ecc85709766763b39cd" translate="yes" xml:space="preserve">
          <source>You can use the methods defined in this module to access and modify array contents in an observable-friendly way. You can also be notified whenever the membership of an array changes by using &lt;code&gt;.observes('myArray.[]')&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea32d9cc66476184ce52400783ba602232c7766d" translate="yes" xml:space="preserve">
          <source>You can use this method to customize how a polymorphic relationship should be extracted.</source>
          <target state="translated">Se puede utilizar este método para personalizar la forma en que se debe extraer una relación polimórfica.</target>
        </trans-unit>
        <trans-unit id="15d4cdce8e27f0a73eb4c8575d059aa59a29f2b6" translate="yes" xml:space="preserve">
          <source>You can use this method to customize how a serialized record is added to the complete JSON hash to be sent to the server. By default the JSON Serializer does not namespace the payload and just sends the raw serialized JSON object. If your server expects namespaced keys, you should consider using the RESTSerializer. Otherwise you can override this method to customize how the record is added to the hash. The hash property should be modified by reference.</source>
          <target state="translated">Puedes usar este método para personalizar cómo se añade un registro serializado al hash completo de JSON para enviarlo al servidor.Por defecto,el serializador JSON no espacia por nombre la carga útil y sólo envía el objeto JSON serializado en bruto.Si su servidor espera claves con espacio de nombre,debería considerar el uso del RESTSerializer.De lo contrario,puede anular este método para personalizar la forma en que el registro se agrega al hash.La propiedad hash debe ser modificada por referencia.</target>
        </trans-unit>
        <trans-unit id="fb561a833b0aacd467fe43d7a7a1341ff4a284b4" translate="yes" xml:space="preserve">
          <source>You can use this method to customize how polymorphic objects are serialized. By default the REST Serializer creates the key by appending &lt;code&gt;Type&lt;/code&gt; to the attribute and value from the model's camelcased model name.</source>
          <target state="translated">Puede utilizar este m&amp;eacute;todo para personalizar c&amp;oacute;mo se serializan los objetos polim&amp;oacute;rficos. De forma predeterminada, el serializador REST crea la clave agregando &lt;code&gt;Type&lt;/code&gt; al atributo y el valor del nombre del modelo en caja de camello del modelo.</target>
        </trans-unit>
        <trans-unit id="ad896673bbb88125268cea6dec180cfe8c58c871" translate="yes" xml:space="preserve">
          <source>You can use this method to customize how polymorphic objects are serialized. Objects are considered to be polymorphic if &lt;code&gt;{ polymorphic: true }&lt;/code&gt; is pass as the second argument to the &lt;code&gt;DS.belongsTo&lt;/code&gt; function.</source>
          <target state="translated">Puede utilizar este m&amp;eacute;todo para personalizar c&amp;oacute;mo se serializan los objetos polim&amp;oacute;rficos. Los objetos se consideran polim&amp;oacute;rficos si &lt;code&gt;{ polymorphic: true }&lt;/code&gt; se pasa como segundo argumento a la funci&amp;oacute;n &lt;code&gt;DS.belongsTo&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dfb543b6d53c4f70031b97e6823746c4060ad6dc" translate="yes" xml:space="preserve">
          <source>You can use this method to customize how polymorphic objects are serialized. Objects are considered to be polymorphic if &lt;code&gt;{ polymorphic: true }&lt;/code&gt; is pass as the second argument to the &lt;code&gt;belongsTo&lt;/code&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bfc1e7787913a0bebf245631b3dad14973b0364" translate="yes" xml:space="preserve">
          <source>You can use this method to customize the root keys serialized into the JSON. The hash property should be modified by reference (possibly using something like _.extend) By default the REST Serializer sends the modelName of a model, which is a camelized version of the name.</source>
          <target state="translated">Puedes usar este método para personalizar las claves de raíz serializadas en el JSON.La propiedad hash debe ser modificada por referencia (posiblemente usando algo como _.extend)Por defecto el Serializador REST envía el nombre del modelo,que es una versión camelizada del nombre.</target>
        </trans-unit>
        <trans-unit id="2a60e43772223469181b0c19dd3e6b583ccc7b1c" translate="yes" xml:space="preserve">
          <source>You can use this method to customize the root keys serialized into the payload. The hash property should be modified by reference.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9c8b0da434d99afc09b2e53ad2b7b65fbc6cf6a" translate="yes" xml:space="preserve">
          <source>You can use this method, for example, to normalize underscored keys to camelized or other general-purpose normalizations.</source>
          <target state="translated">Puede utilizar este método,por ejemplo,para normalizar claves subrayadas a camelizadas u otras normalizaciones de propósito general.</target>
        </trans-unit>
        <trans-unit id="e42f7a21a4e8f59969afa2155bef10aa114c9d3b" translate="yes" xml:space="preserve">
          <source>You can use this method, for example, to normalize underscored keys to camelized or other general-purpose normalizations. You will only need to implement &lt;code&gt;normalize&lt;/code&gt; and manipulate the payload as desired.</source>
          <target state="translated">Puede utilizar este m&amp;eacute;todo, por ejemplo, para normalizar claves subrayadas en camelizadas u otras normalizaciones de uso general. Solo necesitar&amp;aacute; implementar &lt;code&gt;normalize&lt;/code&gt; y manipular la carga &amp;uacute;til como desee.</target>
        </trans-unit>
        <trans-unit id="a37b8374de990793e904e34b92629af20448614b" translate="yes" xml:space="preserve">
          <source>You can use your own data persistence library with the Inspector. Build a &lt;a href=&quot;https://github.com/emberjs/ember.js/blob/3ac2fdb0b7373cbe9f3100bdb9035dd87a849f64/packages/ember-extension-support/lib/data_adapter.js&quot;&gt;data adapter&lt;/a&gt;, and you can inspect your models using the Data tab. Use &lt;a href=&quot;https://github.com/emberjs/data/blob/d7988679590bff63f4d92c4b5ecab173bd624ebb/packages/ember-data/lib/system/debug/debug_adapter.js&quot;&gt;Ember Data's data adapter&lt;/a&gt; as an example for how to build your data adapter and &lt;a href=&quot;https://api.emberjs.com/ember/release/classes/DataAdapter&quot;&gt;DataAdapter&lt;/a&gt; documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdf8b15e2ec35ce235c9e8c5d5898d9529043390" translate="yes" xml:space="preserve">
          <source>You can use your own data persistence library with the Inspector. Build a &lt;a href=&quot;https://github.com/emberjs/ember.js/blob/3ac2fdb0b7373cbe9f3100bdb9035dd87a849f64/packages/ember-extension-support/lib/data_adapter.js&quot;&gt;data adapter&lt;/a&gt;, and you can inspect your models using the Data tab. Use &lt;a href=&quot;https://github.com/emberjs/data/blob/d7988679590bff63f4d92c4b5ecab173bd624ebb/packages/ember-data/lib/system/debug/debug_adapter.js&quot;&gt;Ember Data's data adapter&lt;/a&gt; as an example for how to build your data adapter.</source>
          <target state="translated">Puede utilizar su propia biblioteca de persistencia de datos con el Inspector. Construya un &lt;a href=&quot;https://github.com/emberjs/ember.js/blob/3ac2fdb0b7373cbe9f3100bdb9035dd87a849f64/packages/ember-extension-support/lib/data_adapter.js&quot;&gt;adaptador de datos&lt;/a&gt; y podr&amp;aacute; inspeccionar sus modelos usando la pesta&amp;ntilde;a Datos. Utilice &lt;a href=&quot;https://github.com/emberjs/data/blob/d7988679590bff63f4d92c4b5ecab173bd624ebb/packages/ember-data/lib/system/debug/debug_adapter.js&quot;&gt;el adaptador de datos de Ember Data&lt;/a&gt; como ejemplo de c&amp;oacute;mo construir su adaptador de datos.</target>
        </trans-unit>
        <trans-unit id="1d6ab11218c2ab8d4e7df0edb393368b126ee075" translate="yes" xml:space="preserve">
          <source>You click on the Promises tab, and see this message:</source>
          <target state="translated">Haz clic en la pestaña Promesas y verás este mensaje:</target>
        </trans-unit>
        <trans-unit id="9d856328f483a2e4524ea1f54d0cbc469e7ec252" translate="yes" xml:space="preserve">
          <source>You could then show the list of drafts in your component's template like this:</source>
          <target state="translated">Podrías entonces mostrar la lista de borradores en la plantilla de tu componente de esta manera:</target>
        </trans-unit>
        <trans-unit id="30611eb049e5565b7d7c999e584eec8928011feb" translate="yes" xml:space="preserve">
          <source>You create a link to a route using the &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Templates.helpers.html#method_link-to&quot;&gt;&lt;code&gt;{{link-to}}&lt;/code&gt;&lt;/a&gt; component.</source>
          <target state="translated">Crea un enlace a una ruta utilizando el componente &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Templates.helpers.html#method_link-to&quot;&gt; &lt;code&gt;{{link-to}}&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ca030ed5ccc001f4cb4b9eface94ea589d85c28b" translate="yes" xml:space="preserve">
          <source>You create a link to a route using the &lt;a href=&quot;https://api.emberjs.com/ember/release/classes/Ember.Templates.components/methods#LinkTo&quot;&gt;&lt;code&gt;&amp;lt;LinkTo /&amp;gt;&lt;/code&gt;&lt;/a&gt; component.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfe06439b7292107820b14e17a77cf3526883510" translate="yes" xml:space="preserve">
          <source>You don't &lt;strong&gt;need&lt;/strong&gt; to use this syntax for &lt;a href=&quot;https://html.spec.whatwg.org/multipage/syntax.html#void-elements&quot;&gt;&quot;void&quot; HTML tags&lt;/a&gt; such as &lt;code&gt;img&lt;/code&gt; or &lt;code&gt;br&lt;/code&gt;, which are already defined as self-closing by the HTML specification, but you &lt;strong&gt;can&lt;/strong&gt; use this syntax as a shorthand for tags that are not self-closing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d9e7b742e44e78bba6c2441e392bd5247a0ddd5" translate="yes" xml:space="preserve">
          <source>You don't need to build a back end in order to see how your app might work once it has real data loading in! Check out the &lt;a href=&quot;https://emberjs.com/learn&quot;&gt;official Ember.js Tutorials&lt;/a&gt; to learn how to simulate API requests in an app and test your data loading.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d278178a35feef5e3f9779d017d176da7904e01" translate="yes" xml:space="preserve">
          <source>You don't need to define a class all at once. You can reopen a class and define new properties using the &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Object.html#method_reopen&quot;&gt;&lt;code&gt;reopen()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">No es necesario definir una clase de una vez. Puede volver a abrir una clase y definir nuevas propiedades usando el m&amp;eacute;todo &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Object.html#method_reopen&quot;&gt; &lt;code&gt;reopen()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f87fcee5ffa218a7444297851eeddb1f37a6e802" translate="yes" xml:space="preserve">
          <source>You have a few options for running tests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5583c08285a5c3cfb96a6c4e3082cdd07ad5e9f1" translate="yes" xml:space="preserve">
          <source>You may also pass in an options object whose properties will be fed forward. This enables you to pass &lt;code&gt;adapterOptions&lt;/code&gt; into the request given to the adapter via the reference.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f399f92c1d6327661d7e04f47d15ee139c617e96" translate="yes" xml:space="preserve">
          <source>You may also pass in an options object whose properties will be fed forward. This enables you to pass &lt;code&gt;adapterOptions&lt;/code&gt; into the request given to the adapter via the reference. A full example can be found in the &lt;code&gt;load&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b1428f36ca11c27355d4123412c366466f7dfa5" translate="yes" xml:space="preserve">
          <source>You may also specify a name for the &lt;code&gt;{{outlet}}&lt;/code&gt;, which is useful when using more than one &lt;code&gt;{{outlet}}&lt;/code&gt; in a template:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f7de9c7e699dc4f1bd8fd3bdb448e4e7913d693" translate="yes" xml:space="preserve">
          <source>You may find the type of an attribute returned by the server does not match the type you would like to use in your JavaScript code. Ember Data allows you to define simple serialization and deserialization methods for attribute types called transforms. You can specify that you would like a transform to run for an attribute by providing the transform name as the first argument to the &lt;code&gt;DS.attr&lt;/code&gt; method. Ember Data supports attribute types of &lt;code&gt;string&lt;/code&gt;, &lt;code&gt;number&lt;/code&gt;, &lt;code&gt;boolean&lt;/code&gt;, and &lt;code&gt;date&lt;/code&gt;, which coerce the value to the JavaScript type that matches its name.</source>
          <target state="translated">Puede encontrar que el tipo de atributo devuelto por el servidor no coincide con el tipo que le gustar&amp;iacute;a usar en su c&amp;oacute;digo JavaScript. Ember Data le permite definir m&amp;eacute;todos simples de serializaci&amp;oacute;n y deserializaci&amp;oacute;n para tipos de atributos llamados transformaciones. Puede especificar que desea que se ejecute una transformaci&amp;oacute;n para un atributo proporcionando el nombre de la transformaci&amp;oacute;n como primer argumento del m&amp;eacute;todo &lt;code&gt;DS.attr&lt;/code&gt; . Ember Data admite tipos de atributos de &lt;code&gt;string&lt;/code&gt; , &lt;code&gt;number&lt;/code&gt; , &lt;code&gt;boolean&lt;/code&gt; o y &lt;code&gt;date&lt;/code&gt; , que transfieren el valor al tipo de JavaScript que coincide con su nombre.</target>
        </trans-unit>
        <trans-unit id="e176eabede0555fd31701f6b67dee5eb090eb088" translate="yes" xml:space="preserve">
          <source>You may find the type of an attribute returned by the server does not match the type you would like to use in your JavaScript code. Ember Data allows you to define simple serialization and deserialization methods for attribute types called transforms. You can specify that you would like a transform to run for an attribute by providing the transform name as the first argument to the &lt;code&gt;attr&lt;/code&gt; method. Ember Data supports attribute types of &lt;code&gt;string&lt;/code&gt;, &lt;code&gt;number&lt;/code&gt;, &lt;code&gt;boolean&lt;/code&gt;, and &lt;code&gt;date&lt;/code&gt;, which coerce the value to the JavaScript type that matches its name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efd07ededd3a98f85f8c5167a977e41845cd02db" translate="yes" xml:space="preserve">
          <source>You may have noticed that &lt;code&gt;this.get('location')&lt;/code&gt; refers to a property location we haven't defined. This property will be passed in to the component by its parent template below.</source>
          <target state="translated">Es posible que haya notado que &lt;code&gt;this.get('location')&lt;/code&gt; refiere a una ubicaci&amp;oacute;n de propiedad que no hemos definido. Esta propiedad pasar&amp;aacute; al componente por su plantilla principal a continuaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="82712e95491b6a9efa34075e713a7a2a3f72794d" translate="yes" xml:space="preserve">
          <source>You may move onto the &lt;a href=&quot;../installing-addons&quot;&gt;next page&lt;/a&gt; to keep implementing new features, or continue reading on testing the app you've created.</source>
          <target state="translated">Puede pasar a la &lt;a href=&quot;../installing-addons&quot;&gt;p&amp;aacute;gina siguiente&lt;/a&gt; para seguir implementando nuevas funciones o continuar leyendo para probar la aplicaci&amp;oacute;n que ha creado.</target>
        </trans-unit>
        <trans-unit id="89dae61e41ff0fa84d1b8bf040dcfb34e8ded1a7" translate="yes" xml:space="preserve">
          <source>You may notice that &lt;code&gt;this.paramsFor&lt;/code&gt; sometimes works when referring to a child route, but this behavior should not be relied upon as only ancestor routes are certain to be loaded in time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3480eed855d79e4b5fafd758ab257ec44b38d9d4" translate="yes" xml:space="preserve">
          <source>You may notice that the &lt;code&gt;is-active&lt;/code&gt; class on the received message avatar from the previous chapters is missing here. We'll cover that in the next chapter on &lt;a href=&quot;../conditional-content&quot;&gt;Conditional Content&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7349a1f1c27af3e1c4ebba86acd8f93ea32f46e3" translate="yes" xml:space="preserve">
          <source>You may now either move onto the &lt;a href=&quot;../subroutes&quot;&gt;next feature&lt;/a&gt;, or continue here to test the maps feature we just added.</source>
          <target state="translated">Ahora puede pasar a la &lt;a href=&quot;../subroutes&quot;&gt;siguiente funci&amp;oacute;n&lt;/a&gt; o continuar aqu&amp;iacute; para probar la funci&amp;oacute;n de mapas que acabamos de agregar.</target>
        </trans-unit>
        <trans-unit id="1cbfa89216e5872317a08f371af7996baac5ce2b" translate="yes" xml:space="preserve">
          <source>You may pass any or all of the following options to &lt;code&gt;disconnectOutlet&lt;/code&gt;:</source>
          <target state="translated">Puede pasar cualquiera o todas las siguientes opciones para &lt;code&gt;disconnectOutlet&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="e47bda309e55c44772054e3aee82c3c3f5d2e8dd" translate="yes" xml:space="preserve">
          <source>You may pass in more than two properties and even use property brace expansion. The computed property will return the first falsy value or last truthy value just like JavaScript's &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; operator.</source>
          <target state="translated">Puede pasar m&amp;aacute;s de dos propiedades e incluso usar la expansi&amp;oacute;n de llaves de propiedad. La propiedad calculada devolver&amp;aacute; el primer valor falso o el &amp;uacute;ltimo valor verdadero al igual que el operador &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; de JavaScript .</target>
        </trans-unit>
        <trans-unit id="e68695900e6eebba5efe00151d7a87ff730a7ce3" translate="yes" xml:space="preserve">
          <source>You may pass in more than two properties and even use property brace expansion. The computed property will return the first truthy value or last falsy value just like JavaScript's &lt;code&gt;||&lt;/code&gt; operator.</source>
          <target state="translated">Puede pasar m&amp;aacute;s de dos propiedades e incluso usar la expansi&amp;oacute;n de llaves de propiedad. La propiedad calculada devolver&amp;aacute; el primer valor verdadero o el &amp;uacute;ltimo valor falso como el de JavaScript &lt;code&gt;||&lt;/code&gt; operador.</target>
        </trans-unit>
        <trans-unit id="81932e7639161a2297b89e39d30a7dba374b170f" translate="yes" xml:space="preserve">
          <source>You may provide multiple arguments to sort by multiple properties.</source>
          <target state="translated">Puede proporcionar múltiples argumentos para ordenar por múltiples propiedades.</target>
        </trans-unit>
        <trans-unit id="0a2dac0b264f465e2c2c1322c69577930c808c23" translate="yes" xml:space="preserve">
          <source>You might be tempted to make the component responsible for fetching that data and storing it:</source>
          <target state="translated">Podrías estar tentado de hacer que el componente se encargue de buscar esos datos y almacenarlos:</target>
        </trans-unit>
        <trans-unit id="9306914370af7624835bdadca10725a9e0e5a148" translate="yes" xml:space="preserve">
          <source>You might be wondering why Ember uses the `@` syntax for its components instead of normal HTML attribute syntax. We'll learn why in the next section.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6a552adf0c5cee2409895c91e1350aa31f6df81" translate="yes" xml:space="preserve">
          <source>You might have been tempted to make &lt;code&gt;total&lt;/code&gt; a &lt;code&gt;@tracked&lt;/code&gt; property and update it in the &lt;code&gt;double&lt;/code&gt; and &lt;code&gt;change&lt;/code&gt; actions. But this kind of &quot;push-based&quot; approach creates a lot of bugs. What happens if you create a new way to update &lt;code&gt;multiple&lt;/code&gt; or &lt;code&gt;amount&lt;/code&gt; properties and forget to update &lt;code&gt;total&lt;/code&gt; at the same time?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a08fad8e5da8b01c03aa322808afa0bc40d01ef5" translate="yes" xml:space="preserve">
          <source>You might need to bind a property dynamically to an input if you're building a flexible form, for example. To achieve this you need to use the &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Templates.helpers.html#method_get&quot;&gt;&lt;code&gt;{{get}}&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Templates.helpers.html#method_mut&quot;&gt;&lt;code&gt;{{mut}}&lt;/code&gt;&lt;/a&gt; in conjunction like shown in the following example:</source>
          <target state="translated">Es posible que deba vincular una propiedad de forma din&amp;aacute;mica a una entrada si est&amp;aacute; creando un formulario flexible, por ejemplo. Para lograr esto, debe usar &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Templates.helpers.html#method_get&quot;&gt; &lt;code&gt;{{get}}&lt;/code&gt; &lt;/a&gt; y &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Templates.helpers.html#method_mut&quot;&gt; &lt;code&gt;{{mut}}&lt;/code&gt; &lt;/a&gt; en conjunto como se muestra en el siguiente ejemplo:</target>
        </trans-unit>
        <trans-unit id="338c3745b2740f48753edce5183abe9e3ecbe915" translate="yes" xml:space="preserve">
          <source>You might need to bind a property dynamically to an input if you're building a flexible form, for example. To achieve this you need to use the &lt;a href=&quot;https://api.emberjs.com/ember/release/classes/Ember.Templates.helpers/methods#get&quot;&gt;&lt;code&gt;{{get}}&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://api.emberjs.com/ember/release/classes/Ember.Templates.helpers/methods#mut&quot;&gt;&lt;code&gt;{{mut}}&lt;/code&gt;&lt;/a&gt; in conjunction like shown in the following example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6114574bf783756c614b9042f0debac1f2523bc" translate="yes" xml:space="preserve">
          <source>You might notice that the import comes from a package named &lt;code&gt;@glimmer&lt;/code&gt;, not &lt;code&gt;@ember&lt;/code&gt;. Behind the scenes, Ember's rendering engine comes from Glimmer, and now the components do too. However, Glimmer is a low-level integration with Ember, and you don't need to worry about learning it separately.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c02919f924ed6c5479032fd7849e1792a14779e" translate="yes" xml:space="preserve">
          <source>You might notice that you have a lot of duplicated messages in your workflow file, like the 3 messages in the above example that start with &lt;code&gt;Accessing 'template' in...&lt;/code&gt;. This is because some of the deprecation messages provide context to the specific deprecation, making them different than the same deprecation in other parts of the app. If you want to consolidate the duplication, you can use a simple regular expression with a wildcard (&lt;code&gt;.*&lt;/code&gt;) for the part of the message that varies per instance.</source>
          <target state="translated">Usted puede notar que tiene una gran cantidad de mensajes duplicados en el archivo de flujo de trabajo, al igual que los 3 mensajes en el ejemplo anterior que comienzan con &lt;code&gt;Accessing 'template' in...&lt;/code&gt; . Esto se debe a que algunos de los mensajes de desaprobaci&amp;oacute;n proporcionan contexto a la desaprobaci&amp;oacute;n espec&amp;iacute;fica, lo que los hace diferentes a la misma desaprobaci&amp;oacute;n en otras partes de la aplicaci&amp;oacute;n. Si desea consolidar la duplicaci&amp;oacute;n, puede usar una expresi&amp;oacute;n regular simple con un comod&amp;iacute;n ( &lt;code&gt;.*&lt;/code&gt; ) Para la parte del mensaje que var&amp;iacute;a seg&amp;uacute;n la instancia.</target>
        </trans-unit>
        <trans-unit id="abe9dab0e9d7d3ba3e061eef4ca2bd1ef9ba1ec8" translate="yes" xml:space="preserve">
          <source>You must have a length property. This property should change whenever the number of items in your enumerable object changes. If you use this with an &lt;code&gt;Ember.Object&lt;/code&gt; subclass, you should be sure to change the length property using &lt;code&gt;set().&lt;/code&gt;</source>
          <target state="translated">Debe tener una propiedad de longitud. Esta propiedad debe cambiar siempre que cambie el n&amp;uacute;mero de elementos en su objeto enumerable. Si usa esto con una subclase &lt;code&gt;Ember.Object&lt;/code&gt; , debe asegurarse de cambiar la propiedad length usando &lt;code&gt;set().&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e6b7c199d109995660639ebc4502cd4c810d42a2" translate="yes" xml:space="preserve">
          <source>You must implement &lt;code&gt;nextObject().&lt;/code&gt; See documentation.</source>
          <target state="translated">Debe implementar &lt;code&gt;nextObject().&lt;/code&gt; Ver documentaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="de8f6bd659ce24198c6267f0ca93493a836b92bb" translate="yes" xml:space="preserve">
          <source>You only need to generate a Controller if you want to customize its properties or provide any &lt;code&gt;actions&lt;/code&gt;. If you have no customizations, Ember will provide a Controller instance for you at run time.</source>
          <target state="translated">Solo necesita generar un controlador si desea personalizar sus propiedades o proporcionar &lt;code&gt;actions&lt;/code&gt; . Si no tiene personalizaciones, Ember le proporcionar&amp;aacute; una instancia de Controller en tiempo de ejecuci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="06660abc3350b9f2c67222ad078b7090dfc7f739" translate="yes" xml:space="preserve">
          <source>You should be down to only 2 failing tests: One remaining acceptance test failure; and our ESLint test that fails on an unused assert for our unimplemented test.</source>
          <target state="translated">Sólo deberías tener dos exámenes fallidos:Una prueba de aceptación que falla;y nuestra prueba de ESLint que falla en una afirmación no usada para nuestra prueba no implementada.</target>
        </trans-unit>
        <trans-unit id="b1bdef39a66cc3ff9390b599503741803d6de894" translate="yes" xml:space="preserve">
          <source>You should begin a run loop when the callback fires.</source>
          <target state="translated">Deberías comenzar un bucle de ejecución cuando se dispare la devolución de llamada.</target>
        </trans-unit>
        <trans-unit id="a14212b45f7227e190b822690ace71d0b774e227" translate="yes" xml:space="preserve">
          <source>You should generally implement the &lt;code&gt;copy()&lt;/code&gt; method to return a copy of the receiver.</source>
          <target state="translated">Por lo general, debe implementar el m&amp;eacute;todo &lt;code&gt;copy()&lt;/code&gt; para devolver una copia del receptor.</target>
        </trans-unit>
        <trans-unit id="414c01daf6fc0e2f5d84fa84a4a7aaf9a1e1d37b" translate="yes" xml:space="preserve">
          <source>You should use the &lt;code&gt;camelCased&lt;/code&gt; event names, so two-word names like &lt;code&gt;keypress&lt;/code&gt; become &lt;code&gt;keyPress&lt;/code&gt;.</source>
          <target state="translated">Debe usar los nombres de eventos &lt;code&gt;camelCased&lt;/code&gt; , de modo que los nombres de dos palabras como &lt;code&gt;keypress&lt;/code&gt; se conviertan en &lt;code&gt;keyPress&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="82b8d636b1904d648b3d05b1b56deaf9b20753a8" translate="yes" xml:space="preserve">
          <source>You should use this method whenever you need to run some action after a period of time instead of using &lt;code&gt;setTimeout()&lt;/code&gt;. This method will ensure that items that expire during the same script execution cycle all execute together, which is often more efficient than using a real setTimeout.</source>
          <target state="translated">Debe usar este m&amp;eacute;todo siempre que necesite ejecutar alguna acci&amp;oacute;n despu&amp;eacute;s de un per&amp;iacute;odo de tiempo en lugar de usar &lt;code&gt;setTimeout()&lt;/code&gt; . Este m&amp;eacute;todo garantizar&amp;aacute; que los elementos que caducan durante el mismo ciclo de ejecuci&amp;oacute;n del script se ejecuten todos juntos, lo que a menudo es m&amp;aacute;s eficiente que usar un setTimeout real.</target>
        </trans-unit>
        <trans-unit id="9f7f9eb3e670237dc4ec3d6e047e41cbaa13e1e9" translate="yes" xml:space="preserve">
          <source>You start building parts of an Ember application using HTML, so if you already know HTML and CSS, you know how to build a basic Ember application!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8b83f1ff9741f8fe3e63e41f99e4b0a8b95484a" translate="yes" xml:space="preserve">
          <source>You typically observe property changes simply by using the &lt;code&gt;Ember.observer&lt;/code&gt; function in classes that you write.</source>
          <target state="translated">Por lo general, observa los cambios de propiedad simplemente usando la funci&amp;oacute;n &lt;code&gt;Ember.observer&lt;/code&gt; en las clases que escribe.</target>
        </trans-unit>
        <trans-unit id="df65ceebe506bd0be3d61451f17c51ef60697e22" translate="yes" xml:space="preserve">
          <source>You typically observe property changes simply by using the &lt;code&gt;observer&lt;/code&gt; function in classes that you write.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91b75b7c2ac89f4be14793476b163a7ff79da16e" translate="yes" xml:space="preserve">
          <source>You want to be able to grab DOM elements in your tests. Since Ember is just JavaScript, you can use &lt;a href=&quot;https://developer.mozilla.org/docs/Web/API/Element/querySelector&quot;&gt;&lt;code&gt;querySelector&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/docs/Web/API/Element/querySelectorAll&quot;&gt;&lt;code&gt;querySelectorAll&lt;/code&gt;&lt;/a&gt; to do so. These methods require you to pass a &lt;strong&gt;selector&lt;/strong&gt;, a string that identifies the element(s) that you want.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="920dbce7f7b020e4aceaba9dad8379dd094d76ec" translate="yes" xml:space="preserve">
          <source>You want your tests to finish fast. A fast run means you get to try out a different solution and iterate many more times.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40ed647972acfe9aeff33e41c1db15fc55907308" translate="yes" xml:space="preserve">
          <source>You will be able to use &lt;code&gt;&amp;lt;PersonProfile /&amp;gt;&lt;/code&gt; to invoke this component elsewhere in your application:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a59089e26714551a5ce33231383db9a07f9592ce" translate="yes" xml:space="preserve">
          <source>You will frequently create components in an app. Establishing patterns early can help reduce bugs and unforeseen issues. Learn more from the chapter &lt;a href=&quot;https://guides.emberjs.com/in-depth-topics/patterns-for-components/&quot;&gt;Patterns for Components&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12cf863d5bee380195638bb6011401719f88bf71" translate="yes" xml:space="preserve">
          <source>You will learn about more advanced usages in the Component's &lt;a href=&quot;https://guides.emberjs.com/components/triggering-changes-with-actions/&quot;&gt;Triggering Changes With Actions&lt;/a&gt; guide, but you should familiarize yourself with the following basics first.</source>
          <target state="translated">Aprender&amp;aacute; sobre usos m&amp;aacute;s avanzados en la gu&amp;iacute;a &lt;a href=&quot;https://guides.emberjs.com/components/triggering-changes-with-actions/&quot;&gt;Activaci&amp;oacute;n de cambios con acciones&lt;/a&gt; del componente , pero primero debe familiarizarse con los siguientes conceptos b&amp;aacute;sicos.</target>
        </trans-unit>
        <trans-unit id="3760b6263b2d7af99c9002adda39ece467fd2299" translate="yes" xml:space="preserve">
          <source>You will need to add &lt;code&gt;&quot;moment&quot;&lt;/code&gt; to the &lt;code&gt;globals&lt;/code&gt; section in &lt;code&gt;.eslintrc.js&lt;/code&gt; to prevent ESLint errors about using an undefined variable.</source>
          <target state="translated">Deber&amp;aacute; agregar &lt;code&gt;&quot;moment&quot;&lt;/code&gt; a la secci&amp;oacute;n &lt;code&gt;globals&lt;/code&gt; en &lt;code&gt;.eslintrc.js&lt;/code&gt; para evitar errores de ESLint sobre el uso de una variable indefinida.</target>
        </trans-unit>
        <trans-unit id="d80d458d66bdd1556bcab314e512e42e94558357" translate="yes" xml:space="preserve">
          <source>You will need to have the surge cli tool installed:</source>
          <target state="translated">Necesitarás tener instalada la herramienta de aumento de presión:</target>
        </trans-unit>
        <trans-unit id="fc4134676c933b991101fb8a241181e95547980b" translate="yes" xml:space="preserve">
          <source>You will notice that this is then used to configure your application's router:</source>
          <target state="translated">Notará que esto se utiliza para configurar el router de su aplicación:</target>
        </trans-unit>
        <trans-unit id="09393a4e4e13e85e942ea4c2a3b157e35aa7e6c3" translate="yes" xml:space="preserve">
          <source>You will see output like this:</source>
          <target state="translated">Verás la salida así:</target>
        </trans-unit>
        <trans-unit id="7176897946bc6061510c704773079d75dd19f3fd" translate="yes" xml:space="preserve">
          <source>You would define your relationship like this:</source>
          <target state="translated">Definirías tu relación así:</target>
        </trans-unit>
        <trans-unit id="482df8a0e78ccd78b660949b69965278b235a9b0" translate="yes" xml:space="preserve">
          <source>You would use the custom &lt;code&gt;dollars&lt;/code&gt; transform like this:</source>
          <target state="translated">Usar&amp;iacute;a la transformaci&amp;oacute;n de &lt;code&gt;dollars&lt;/code&gt; personalizada de esta manera:</target>
        </trans-unit>
        <trans-unit id="d48ec885503b90142bfdbbb287b1f0a3115298a5" translate="yes" xml:space="preserve">
          <source>You'll be able to get values from the current item:</source>
          <target state="translated">Podrás obtener valores del artículo actual:</target>
        </trans-unit>
        <trans-unit id="ecaead5b1d4bd052fc2f48b6b11cfe9912ce078f" translate="yes" xml:space="preserve">
          <source>You'll notice standard JavaScript class patterns and the new ES2015 classes aren't widely used in Ember. Plain objects can still be found, and sometimes they're referred to as &quot;hashes&quot;.</source>
          <target state="translated">Notarán que los patrones de clase estándar de JavaScript y las nuevas clases ES2015 no se usan mucho en Ember.Todavía se pueden encontrar objetos sencillos,y a veces se les llama &quot;hashes&quot;.</target>
        </trans-unit>
        <trans-unit id="486a5f5b4748c10c8948f598b66323c27fb36dc3" translate="yes" xml:space="preserve">
          <source>You'll notice that this getter is &lt;em&gt;mutating&lt;/em&gt; the value when the Text component is disabled. If this feels like a code smell to you, it probably is, and is a sign that we're managing state at the wrong level. In this case, for instance, we should instead consider converting the text component to be a stateless component, and mutate the value in the same place where the &lt;code&gt;disabled&lt;/code&gt; is set: The Parent component.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a46313eb881e0df25b61e1c35d71fec97961d98f" translate="yes" xml:space="preserve">
          <source>You'll see output like this:</source>
          <target state="translated">Verás la salida así:</target>
        </trans-unit>
        <trans-unit id="9a0e6ba31cec4aa278bd9c3542990bf78c64778a" translate="yes" xml:space="preserve">
          <source>Your API might return errors as successful responses with status code 200 and an Errors text or object. You can return a &lt;code&gt;DS.InvalidError&lt;/code&gt; or a &lt;code&gt;DS.AdapterError&lt;/code&gt; (or a sub class) from this hook and it will automatically reject the promise and put your record into the invalid or error state.</source>
          <target state="translated">Su API puede devolver errores como respuestas correctas con el c&amp;oacute;digo de estado 200 y un texto u objeto de Errores. Puede devolver un &lt;code&gt;DS.InvalidError&lt;/code&gt; o un &lt;code&gt;DS.AdapterError&lt;/code&gt; (o una subclase) de este gancho y autom&amp;aacute;ticamente rechazar&amp;aacute; la promesa y pondr&amp;aacute; su registro en el estado de error o no v&amp;aacute;lido.</target>
        </trans-unit>
        <trans-unit id="0219a4f305fac6d8b74759b8389a25e75ad2c978" translate="yes" xml:space="preserve">
          <source>Your API might return errors as successful responses with status code 200 and an Errors text or object. You can return a &lt;code&gt;InvalidError&lt;/code&gt; or a &lt;code&gt;AdapterError&lt;/code&gt; (or a sub class) from this hook and it will automatically reject the promise and put your record into the invalid or error state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0ba6fe8735fe29aa9dcaad12ad7ec2f604d6d2b" translate="yes" xml:space="preserve">
          <source>Your API might return useful results in the response headers. Response headers are passed in as the second argument.</source>
          <target state="translated">Su API podría devolver resultados útiles en los encabezados de respuesta.Las cabeceras de respuesta se pasan como segundo argumento.</target>
        </trans-unit>
        <trans-unit id="23b563413c0bc58b1bdd693e101751d31a479070" translate="yes" xml:space="preserve">
          <source>Your app will often need a way to let users interact with controls that change application state. For example, imagine that you have a template that shows a blog title, and supports expanding the post to show the body.</source>
          <target state="translated">Su aplicación necesitará a menudo una forma de permitir a los usuarios interactuar con los controles que cambian el estado de la aplicación.Por ejemplo,imagina que tienes una plantilla que muestra el título de un blog y que admite la expansión de la entrada para mostrar el cuerpo.</target>
        </trans-unit>
        <trans-unit id="442e3bc8c2d4a91877ca32ace7779e5f2ef2e104" translate="yes" xml:space="preserve">
          <source>Your array must support the &lt;code&gt;length&lt;/code&gt; property. Your replace methods should set this property whenever it changes.</source>
          <target state="translated">Su matriz debe admitir la propiedad &lt;code&gt;length&lt;/code&gt; . Sus m&amp;eacute;todos de reemplazo deben establecer esta propiedad siempre que cambie.</target>
        </trans-unit>
        <trans-unit id="504420a04e0663954fb267fd51573a09e5369c47" translate="yes" xml:space="preserve">
          <source>Your backend may use different property names for your records the store will attempt extract and normalize the errors using the serializer's &lt;code&gt;extractErrors&lt;/code&gt; method before the errors get added to the the model. As a result, it is safe for the &lt;code&gt;InvalidError&lt;/code&gt; to wrap the error payload unaltered.</source>
          <target state="translated">Su backend puede usar diferentes nombres de propiedad para sus registros, la tienda intentar&amp;aacute; extraer y normalizar los errores utilizando el m&amp;eacute;todo &lt;code&gt;extractErrors&lt;/code&gt; del serializador antes de que los errores se agreguen al modelo. Como resultado, es seguro que &lt;code&gt;InvalidError&lt;/code&gt; envuelva la carga &amp;uacute;til del error sin alteraciones.</target>
        </trans-unit>
        <trans-unit id="112db875196e33f996b5cfec95bc0cf690c6bf0c" translate="yes" xml:space="preserve">
          <source>Your backend may use different property names for your records the store will attempt to extract and normalize the errors using the serializer's &lt;code&gt;extractErrors&lt;/code&gt; method before the errors get added to the model. As a result, it is safe for the &lt;code&gt;InvalidError&lt;/code&gt; to wrap the error payload unaltered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05fe5a86e8cac898b34a53a28c442fa92dab5bc2" translate="yes" xml:space="preserve">
          <source>Your backend would be expected to return an error response that described the problem, so that error messages can be generated on the app.</source>
          <target state="translated">Se esperaría que su backend devolviera una respuesta de error que describiera el problema,para que se puedan generar mensajes de error en la aplicación.</target>
        </trans-unit>
        <trans-unit id="33fe217dbdb5799101e7abb3dbf72b35a87564d0" translate="yes" xml:space="preserve">
          <source>Your own assets (such as &lt;code&gt;robots.txt&lt;/code&gt;, &lt;code&gt;favicon&lt;/code&gt;, custom fonts, etc) should be placed in the &lt;code&gt;public/&lt;/code&gt; folder in your project.</source>
          <target state="translated">Sus propios activos (como &lt;code&gt;robots.txt&lt;/code&gt; , &lt;code&gt;favicon&lt;/code&gt; , fuentes personalizadas, etc.) deben colocarse en la carpeta &lt;code&gt;public/&lt;/code&gt; de su proyecto.</target>
        </trans-unit>
        <trans-unit id="0c1388a8e8e4202fca31370fdbffab5607e9021d" translate="yes" xml:space="preserve">
          <source>Your routes can then render into a specific one of these &lt;code&gt;outlet&lt;/code&gt;s by specifying the &lt;code&gt;outlet&lt;/code&gt; attribute in your &lt;code&gt;renderTemplate&lt;/code&gt; function:</source>
          <target state="translated">Sus rutas pueden luego representar en una de estas &lt;code&gt;outlet&lt;/code&gt; especificando el atributo de &lt;code&gt;outlet&lt;/code&gt; en su funci&amp;oacute;n &lt;code&gt;renderTemplate&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="9d6fbe7f5b7926a5f1268665f300136fdac32f6b" translate="yes" xml:space="preserve">
          <source>Your server may expect a different JSON format than the built-in serialization format.</source>
          <target state="translated">Su servidor puede esperar un formato JSON diferente al formato de serialización incorporado.</target>
        </trans-unit>
        <trans-unit id="af314da8e840851fa439923164604edaa4d9245d" translate="yes" xml:space="preserve">
          <source>Your server's configuration may be different so you may need different options. Please see the &lt;a href=&quot;http://httpd.apache.org/docs/2.0/misc/rewriteguide.html&quot;&gt;Apache URL Rewriting Guide&lt;/a&gt; for more information.</source>
          <target state="translated">La configuraci&amp;oacute;n de su servidor puede ser diferente, por lo que es posible que necesite diferentes opciones. Consulte la &lt;a href=&quot;http://httpd.apache.org/docs/2.0/misc/rewriteguide.html&quot;&gt;Gu&amp;iacute;a de reescritura de URL de Apache&lt;/a&gt; para obtener m&amp;aacute;s informaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="44c3f664076888f887d58171bb311cbe600f1b35" translate="yes" xml:space="preserve">
          <source>Your template would bind to these properties in the &lt;code&gt;blog-post&lt;/code&gt; template:</source>
          <target state="translated">Su plantilla se vincular&amp;iacute;a a estas propiedades en la plantilla de &lt;code&gt;blog-post&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="c628e887db4fc212ba37f61abe1f280d951f0808" translate="yes" xml:space="preserve">
          <source>Zoey says...</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12bddb94f3d1240225c8e481304050b5fffdf98d" translate="yes" xml:space="preserve">
          <source>[]public</source>
          <target state="translated">[]public</target>
        </trans-unit>
        <trans-unit id="35e74d8f6482f7e45751218177a2722c273459bf" translate="yes" xml:space="preserve">
          <source>_dissociateFromOwnRecords</source>
          <target state="translated">_dissociateFromOwnRecords</target>
        </trans-unit>
        <trans-unit id="03877c33dc480adf582df4b8762511ce62570172" translate="yes" xml:space="preserve">
          <source>_path</source>
          <target state="translated">_path</target>
        </trans-unit>
        <trans-unit id="3fadd99beeaeabf62083fdda9aa22658d8e1bcbc" translate="yes" xml:space="preserve">
          <source>_pushIdentifiers</source>
          <target state="translated">_pushIdentifiers</target>
        </trans-unit>
        <trans-unit id="ea9f304693e680aef363bb481f1727e694918700" translate="yes" xml:space="preserve">
          <source>_pushIdentifiers (identifiers)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0251014d6b1960b70690b6d65c87b7074f7a5c8d" translate="yes" xml:space="preserve">
          <source>_removeIdentifiers</source>
          <target state="translated">_removeIdentifiers</target>
        </trans-unit>
        <trans-unit id="50e23215e6f1ea64e58569aada3d84f31f41a88a" translate="yes" xml:space="preserve">
          <source>_removeIdentifiers (identifiers)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc3163a15a2fd2d9e0ca4ab854b38bc4e4dd9c77" translate="yes" xml:space="preserve">
          <source>_setIdentifiers</source>
          <target state="translated">_setIdentifiers</target>
        </trans-unit>
        <trans-unit id="af413eedf5512fe26d81697b1e20f9e77f57f074" translate="yes" xml:space="preserve">
          <source>_setIdentifiers (identifiers, payload)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="058f6cf9610e9f1e504c7d818a40cc7e639f9ecf" translate="yes" xml:space="preserve">
          <source>_takeSnapshot</source>
          <target state="translated">_takeSnapshot</target>
        </trans-unit>
        <trans-unit id="8a2e62d521488a190d55a0fcc20e5f720ccd30c0" translate="yes" xml:space="preserve">
          <source>```javascript // models/blog.js export default DS.Model.extend({ user: DS.belongsTo({ async: true }) });</source>
          <target state="translated">`` `javascript // modelos / blog.js exporta DS.Model.extend predeterminado ({usuario: DS.belongsTo ({async: true})});</target>
        </trans-unit>
        <trans-unit id="3f966b055ac9c37b9c73e7b295e92e10dfa81e69" translate="yes" xml:space="preserve">
          <source>`accept`</source>
          <target state="translated">`accept`</target>
        </trans-unit>
        <trans-unit id="da09fa7bb1ab3cf343b06c26207ce7ffcc11ff0b" translate="yes" xml:space="preserve">
          <source>`autocomplete`</source>
          <target state="translated">`autocomplete`</target>
        </trans-unit>
        <trans-unit id="f9483edc984fda67218b942fae870e63e9e67d2d" translate="yes" xml:space="preserve">
          <source>`autofocus`</source>
          <target state="translated">`autofocus`</target>
        </trans-unit>
        <trans-unit id="56c9cf438200de42a4d26637a07e87c04e65db93" translate="yes" xml:space="preserve">
          <source>`autosave`</source>
          <target state="translated">`autosave`</target>
        </trans-unit>
        <trans-unit id="3abfaa9780608e488cb52152035d50d121a56521" translate="yes" xml:space="preserve">
          <source>`belongsTo` or `hasMany`</source>
          <target state="translated">`pertenece a` o` hasMucho`</target>
        </trans-unit>
        <trans-unit id="8f34379c26a66e601f085b25c7552a43f2ff5933" translate="yes" xml:space="preserve">
          <source>`disabled`</source>
          <target state="translated">`disabled`</target>
        </trans-unit>
        <trans-unit id="b69377941b05949277bb89be518ec7b180137961" translate="yes" xml:space="preserve">
          <source>`form`</source>
          <target state="translated">`form`</target>
        </trans-unit>
        <trans-unit id="0b482b6f118cdcf1894b723b293bc4f20fc770fa" translate="yes" xml:space="preserve">
          <source>`formaction`</source>
          <target state="translated">`formaction`</target>
        </trans-unit>
        <trans-unit id="e1a7562deb2830f78f1cacf28d7386db9c01954c" translate="yes" xml:space="preserve">
          <source>`formenctype`</source>
          <target state="translated">`formenctype`</target>
        </trans-unit>
        <trans-unit id="0eba06d330684088239ce0dbb164cdc5135244b1" translate="yes" xml:space="preserve">
          <source>`formmethod`</source>
          <target state="translated">`formmethod`</target>
        </trans-unit>
        <trans-unit id="f7d0631424eb0ebed3375d12b07caebde08e2e28" translate="yes" xml:space="preserve">
          <source>`formnovalidate`</source>
          <target state="translated">`formnovalidate`</target>
        </trans-unit>
        <trans-unit id="f32d608992d1f4b86dd534e698d7a0b3e20bd8ba" translate="yes" xml:space="preserve">
          <source>`formtarget`</source>
          <target state="translated">`formtarget`</target>
        </trans-unit>
        <trans-unit id="f5a628d6759f3026fda098cc9ba33c7c520df99c" translate="yes" xml:space="preserve">
          <source>`height`</source>
          <target state="translated">`height`</target>
        </trans-unit>
        <trans-unit id="f69dcdf6ffc96144eb765217074bbac560f0090e" translate="yes" xml:space="preserve">
          <source>`inputmode`</source>
          <target state="translated">`inputmode`</target>
        </trans-unit>
        <trans-unit id="17c8f553b7da3b0becf0f6451908cee7a187539a" translate="yes" xml:space="preserve">
          <source>`max`</source>
          <target state="translated">`max`</target>
        </trans-unit>
        <trans-unit id="c92720e72733cde41db5caf58f96d0455927be98" translate="yes" xml:space="preserve">
          <source>`maxlength`</source>
          <target state="translated">`maxlength`</target>
        </trans-unit>
        <trans-unit id="d7e127bd814e7a9eb7bacea896587fc78647a0f0" translate="yes" xml:space="preserve">
          <source>`min`</source>
          <target state="translated">`min`</target>
        </trans-unit>
        <trans-unit id="e73b0c427dab9339dd532e1a34d8a92a06e426c0" translate="yes" xml:space="preserve">
          <source>`multiple`</source>
          <target state="translated">`multiple`</target>
        </trans-unit>
        <trans-unit id="f97279e76d95d98f7433ff400fab94e189ee6052" translate="yes" xml:space="preserve">
          <source>`name`</source>
          <target state="translated">`name`</target>
        </trans-unit>
        <trans-unit id="4b8be36dc0d51e53d3009bd382a1c9c59dabf307" translate="yes" xml:space="preserve">
          <source>`pattern`</source>
          <target state="translated">`pattern`</target>
        </trans-unit>
        <trans-unit id="686174b37f3e0b7d71bc52900a008103e1885049" translate="yes" xml:space="preserve">
          <source>`placeholder`</source>
          <target state="translated">`placeholder`</target>
        </trans-unit>
        <trans-unit id="274badacbe4b948799e159b8e98ac363edad508a" translate="yes" xml:space="preserve">
          <source>`readonly`</source>
          <target state="translated">`readonly`</target>
        </trans-unit>
        <trans-unit id="421bfaf05a58dc0bc5c0d16b9eac89db0b801cf3" translate="yes" xml:space="preserve">
          <source>`required`</source>
          <target state="translated">`required`</target>
        </trans-unit>
        <trans-unit id="d68653bbd416c3c0f479d97c3708cd614247b8a9" translate="yes" xml:space="preserve">
          <source>`selectionDirection`</source>
          <target state="translated">`selectionDirection`</target>
        </trans-unit>
        <trans-unit id="1e76e9f29c637eafbd87941a3a5740d3222949f1" translate="yes" xml:space="preserve">
          <source>`size`</source>
          <target state="translated">`size`</target>
        </trans-unit>
        <trans-unit id="e1479c07dd09ac6eb703c5eda133ba7661aaef1e" translate="yes" xml:space="preserve">
          <source>`spellcheck`</source>
          <target state="translated">`spellcheck`</target>
        </trans-unit>
        <trans-unit id="5c95c906f48cd41957f7479c8d27054c01a55203" translate="yes" xml:space="preserve">
          <source>`step`</source>
          <target state="translated">`step`</target>
        </trans-unit>
        <trans-unit id="a6f6506979c3ec41cb389f56e1857cbabb24ce99" translate="yes" xml:space="preserve">
          <source>`store.findAll('post')`</source>
          <target state="translated">`store.findAll('post')`</target>
        </trans-unit>
        <trans-unit id="3bcc44bcfaaabb5303e65b9c14cf3db54488aefe" translate="yes" xml:space="preserve">
          <source>`store.findRecord('post', 123)`</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f92a9ba387b9f8f8bcec269a2b8fcb8f7ee9a60b" translate="yes" xml:space="preserve">
          <source>`tabindex`</source>
          <target state="translated">`tabindex`</target>
        </trans-unit>
        <trans-unit id="a5a4283ea7b52fb7dc2bdcd64a5bb9e48b99a901" translate="yes" xml:space="preserve">
          <source>`true` if object is found in the array.</source>
          <target state="translated">`verdadero` si el objeto se encuentra en la matriz.</target>
        </trans-unit>
        <trans-unit id="890190f700436149ebddfcd85e3715702d00aa34" translate="yes" xml:space="preserve">
          <source>`true` if object is found in the enumerable.</source>
          <target state="translated">`verdadero` si el objeto se encuentra en el enumerable.</target>
        </trans-unit>
        <trans-unit id="8378580e799d0a7e5b648352f61a2d27778364b7" translate="yes" xml:space="preserve">
          <source>`true` if the component was invoked with a block</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d01e7deafd82307590c1a8b5431aa56696fb4eb" translate="yes" xml:space="preserve">
          <source>`true` if the component was invoked with block params</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6891b6e8952067dbbe9ce94387174ebae0e38c30" translate="yes" xml:space="preserve">
          <source>`true` if the passed function returns `true` for any item</source>
          <target state="translated">`true` si la funci&amp;oacute;n pasada devuelve` true` para cualquier elemento</target>
        </trans-unit>
        <trans-unit id="5a4bae9bd52ea45c92946fbed18e02155aa07814" translate="yes" xml:space="preserve">
          <source>`true` if the record should be in the array</source>
          <target state="translated">`true` si el registro debe estar en la matriz</target>
        </trans-unit>
        <trans-unit id="ebf68994fee414c300045b8754f96d86a00e641f" translate="yes" xml:space="preserve">
          <source>`true` if the string was decorated with `htmlSafe`, `false` otherwise.</source>
          <target state="translated">`true` si la cadena estaba decorada con` htmlSafe`, `false` en caso contrario.</target>
        </trans-unit>
        <trans-unit id="62c3ff0da13331c5f56278d4d52058a44f09f62d" translate="yes" xml:space="preserve">
          <source>`type`</source>
          <target state="translated">`type`</target>
        </trans-unit>
        <trans-unit id="1fa64afde3afb7ea14c6a4a6215c4553e1082676" translate="yes" xml:space="preserve">
          <source>`value`</source>
          <target state="translated">`value`</target>
        </trans-unit>
        <trans-unit id="fa5238cc42860278a829992a12cff604523301e3" translate="yes" xml:space="preserve">
          <source>`width`</source>
          <target state="translated">`width`</target>
        </trans-unit>
        <trans-unit id="86f7e437faa5a7fce15d1ddcb9eaeaea377667b8" translate="yes" xml:space="preserve">
          <source>a</source>
          <target state="translated">a</target>
        </trans-unit>
        <trans-unit id="9f3634a1e625df63a529d405c445941110df5915" translate="yes" xml:space="preserve">
          <source>a 'node-style' function that takes a callback as its last argument. The callback expects an error to be passed as its first argument (if an error occurred, otherwise null), and the value from the operation as its second argument ('function(err, value){ }').</source>
          <target state="translated">una función de &quot;estilo nodal&quot; que toma una llamada como último argumento.La llamada de retorno espera que se le pase un error como primer argumento (si se produce un error,en caso contrario es nulo),y el valor de la operación como segundo argumento ('function(err,value){}').</target>
        </trans-unit>
        <trans-unit id="b22995bb9c5bf888ac4164c0351fbe2b9c4647e0" translate="yes" xml:space="preserve">
          <source>a Handlebars template (&lt;code&gt;app/templates/components/list-filter.hbs&lt;/code&gt;),</source>
          <target state="translated">una plantilla de manubrios ( &lt;code&gt;app/templates/components/list-filter.hbs&lt;/code&gt; ),</target>
        </trans-unit>
        <trans-unit id="81a88667b998722d863a3094db0e62f2fc1b30c2" translate="yes" xml:space="preserve">
          <source>a JSON:API ResourceDocument or a promise resolving to one</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b80f4ef239078d1c4d0e5c9d68f2e5e863034fc9" translate="yes" xml:space="preserve">
          <source>a JavaScript file (&lt;code&gt;app/components/list-filter.js&lt;/code&gt;),</source>
          <target state="translated">un archivo JavaScript ( &lt;code&gt;app/components/list-filter.js&lt;/code&gt; ),</target>
        </trans-unit>
        <trans-unit id="8521f54a5357f2a6ce0ce3241ae736e19414cda1" translate="yes" xml:space="preserve">
          <source>a boolean specifying whether unhandled events throw an error</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91d39915bec30ed18e6a8da6344fc365ed3dcac0" translate="yes" xml:space="preserve">
          <source>a context to send with the action</source>
          <target state="translated">un contexto para enviar con la acción</target>
        </trans-unit>
        <trans-unit id="62b3a48d4e3c6fdc8fb0be3c3ceac83fe3b11ad3" translate="yes" xml:space="preserve">
          <source>a dependent key to an array of sort properties (add `:desc` to the arrays sort properties to sort descending) or a function to use when sorting</source>
          <target state="translated">una clave dependiente de una matriz de propiedades de ordenación (añadir `:desc` a las propiedades de ordenación de las matrices para ordenarlas de forma descendente)o una función para usar al ordenar</target>
        </trans-unit>
        <trans-unit id="35a4255e9cf1fd230740d06ba59ab0918259f621" translate="yes" xml:space="preserve">
          <source>a document following the structure of a JSON:API Document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="185aed8b9b4e6c549a5c78e222d20dc9031f3bd2" translate="yes" xml:space="preserve">
          <source>a function that wraps `nodeFunc` to return a `Promise`</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d25a0b0c00fd64142b9e9b108b6e5d9879fe6c51" translate="yes" xml:space="preserve">
          <source>a function that wraps `nodeFunc` to return an `RSVP.Promise`</source>
          <target state="translated">una función que envuelve a &quot;NodeFunc&quot; para devolver una &quot;Promesa de S.V.P.</target>
        </trans-unit>
        <trans-unit id="a5adc7792c5b7d26ef95447d4af057ccb4b53c74" translate="yes" xml:space="preserve">
          <source>a hash of options</source>
          <target state="translated">un montón de opciones</target>
        </trans-unit>
        <trans-unit id="f4c78aaed2a7d5d240519c43ccffea07ba21460e" translate="yes" xml:space="preserve">
          <source>a hash of properties to set on the newly created record.</source>
          <target state="translated">un conjunto de propiedades para establecer en el nuevo registro creado.</target>
        </trans-unit>
        <trans-unit id="7df1af8af1ec94b77cd4832bef06b54339557de1" translate="yes" xml:space="preserve">
          <source>a jQuery-compatible selector string</source>
          <target state="translated">una cadena de selección compatible con jQuery</target>
        </trans-unit>
        <trans-unit id="8c587ee1e2c9e2f6db1895ddf0a2cba432828311" translate="yes" xml:space="preserve">
          <source>a machine-readable name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98e14430898174cead5468e361592d4ce9a81fa8" translate="yes" xml:space="preserve">
          <source>a place in the &lt;code&gt;TAB&lt;/code&gt; order of the page</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd3ef545b79b37f510f59d50dc0b1a390f768d68" translate="yes" xml:space="preserve">
          <source>a promise for the value (record or relationship)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="244c99e3255ce9568ad4c30a7f6492a580d91748" translate="yes" xml:space="preserve">
          <source>a promise rejected with the given `reason`.</source>
          <target state="translated">una promesa rechazada con la &quot;razón&quot; dada.</target>
        </trans-unit>
        <trans-unit id="5beb2ef8b88e4e4995d296bad8bdbaf5fd228767" translate="yes" xml:space="preserve">
          <source>a promise resolving with resource data to feed to the associated serializer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dddd0cfe33203009860947d8a3e61b525385aad" translate="yes" xml:space="preserve">
          <source>a promise that fulfills with the same value that the final redirecting transition fulfills with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c741f389d51bf384f998af1cb40e0872bb81cbe6" translate="yes" xml:space="preserve">
          <source>a promise that resolves to a JSONAPI document object describing the new value of this relationship.</source>
          <target state="translated">una promesa que resuelve a un objeto documento JSONAPI que describe el nuevo valor de esta relación.</target>
        </trans-unit>
        <trans-unit id="ce603224be4a0981ae5f7fdc266bd97da5a20934" translate="yes" xml:space="preserve">
          <source>a promise that resolves with the ManyArray in this has-many relationship.</source>
          <target state="translated">una promesa que se resuelve con el ManyArray en esta relación de has-muchos.</target>
        </trans-unit>
        <trans-unit id="a66003a3773be838464961bf548a63be38e98abc" translate="yes" xml:space="preserve">
          <source>a promise that resolves with the record in this belongs-to relationship after the reload has completed.</source>
          <target state="translated">una promesa que se resuelve con el registro en esta relación de pertenencia después de que la recarga se haya completado.</target>
        </trans-unit>
        <trans-unit id="a47bc6c80bc28946f4aac3e6c12d317feff79143" translate="yes" xml:space="preserve">
          <source>a promise that resolves with the record in this belongs-to relationship.</source>
          <target state="translated">una promesa que se resuelve con el registro en esta relación de pertenencia.</target>
        </trans-unit>
        <trans-unit id="cefd75fb1b94cd2aa382bd02ce040234d875ffbc" translate="yes" xml:space="preserve">
          <source>a promise that will be resolved when the adapter returns successfully or rejected if the adapter returns with an error.</source>
          <target state="translated">una promesa que se resolverá cuando el adaptador regrese con éxito o se rechazará si el adaptador regresa con un error.</target>
        </trans-unit>
        <trans-unit id="72d7ff712d0e11027a1a5b3923dd7d6ae7336e0e" translate="yes" xml:space="preserve">
          <source>a promise that will be resolved with the record when the adapter returns successfully or rejected if the adapter returns with an error.</source>
          <target state="translated">una promesa que se resolverá con el registro cuando el adaptador regrese con éxito o se rechazará si el adaptador regresa con un error.</target>
        </trans-unit>
        <trans-unit id="7349855f3f6549d3c4f983d8c2c14cf506138b1c" translate="yes" xml:space="preserve">
          <source>a promise that will become fulfilled with the given `value`</source>
          <target state="translated">una promesa que se cumplirá con el &quot;valor&quot; dado</target>
        </trans-unit>
        <trans-unit id="f5b000612994b33d1e66dd7618008471cf921602" translate="yes" xml:space="preserve">
          <source>a promise which settles in the same way as the first passed promise to settle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce3c5129632821161cf37e91313c5e4bca572f28" translate="yes" xml:space="preserve">
          <source>a string ID that should be unique (no other models of `type` in the cache should have this `id`)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a94bf099383a3328896f4c5e13f39ffd432b9f7" translate="yes" xml:space="preserve">
          <source>a value is never provided to this argument</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22dba2e631dd56a9b8a2ce7ccce76633ed1dd66d" translate="yes" xml:space="preserve">
          <source>aXe extension for Chrome</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b61646f016483b318b49a910668a966b6ce09ede" translate="yes" xml:space="preserve">
          <source>abort</source>
          <target state="translated">abort</target>
        </trans-unit>
        <trans-unit id="dec8f8a7202e4eed3fa175ba4ceb3c89f37c6468" translate="yes" xml:space="preserve">
          <source>abortTransitionpublic</source>
          <target state="translated">abortTransitionpublic</target>
        </trans-unit>
        <trans-unit id="5fb801f2f30ac5b8a6671f1d04a959a51fc1671e" translate="yes" xml:space="preserve">
          <source>accept</source>
          <target state="translated">accept</target>
        </trans-unit>
        <trans-unit id="cc296184f70016189c45e2de74f09a3a54cb2a7d" translate="yes" xml:space="preserve">
          <source>acceptsModelName</source>
          <target state="translated">acceptsModelName</target>
        </trans-unit>
        <trans-unit id="d155f857bd62b44cb9959fe0eeeb8468c03d5a89" translate="yes" xml:space="preserve">
          <source>acceptsModelNamepublic</source>
          <target state="translated">acceptsModelNamepublic</target>
        </trans-unit>
        <trans-unit id="34eb4c4ef005207e8b8f916b9f1fffacccd6945e" translate="yes" xml:space="preserve">
          <source>action</source>
          <target state="translated">action</target>
        </trans-unit>
        <trans-unit id="3dd02ad9799d1d54ad6a02e7786af341f6c04c37" translate="yes" xml:space="preserve">
          <source>action (callback) PropertyDecoratorpublic</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd1a8cc06243414157e32f12015aaf853e2aac70" translate="yes" xml:space="preserve">
          <source>actionName</source>
          <target state="translated">actionName</target>
        </trans-unit>
        <trans-unit id="a48d5ead1931f62c7a1ae4335f9ab5b1fe5b7c2f" translate="yes" xml:space="preserve">
          <source>actionpublic</source>
          <target state="translated">actionpublic</target>
        </trans-unit>
        <trans-unit id="326b426f9ac7a96ed6baf62f8838565416d27df8" translate="yes" xml:space="preserve">
          <source>actions</source>
          <target state="translated">actions</target>
        </trans-unit>
        <trans-unit id="5e97193c6a7c5595966c7d75e3b2ad3a17783e62" translate="yes" xml:space="preserve">
          <source>actionspublic</source>
          <target state="translated">actionspublic</target>
        </trans-unit>
        <trans-unit id="2c1e2b1daf8e75bbba55ee03e9b6e28c23686988" translate="yes" xml:space="preserve">
          <source>activate</source>
          <target state="translated">activate</target>
        </trans-unit>
        <trans-unit id="093f1fd816c063f0bee01e26e2411705559c5416" translate="yes" xml:space="preserve">
          <source>activate (transition) public</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b75a48c70241b04306d6825c19e5078e907e4e44" translate="yes" xml:space="preserve">
          <source>activatepublic</source>
          <target state="translated">activatepublic</target>
        </trans-unit>
        <trans-unit id="2bb6b986c5d6fb26dd9dd1054b545ce022371b0c" translate="yes" xml:space="preserve">
          <source>active</source>
          <target state="translated">active</target>
        </trans-unit>
        <trans-unit id="002f154895a55930b60babeca6f3f212d3c1f724" translate="yes" xml:space="preserve">
          <source>activeClass</source>
          <target state="translated">activeClass</target>
        </trans-unit>
        <trans-unit id="320ae8f05c9d36c5cdb7b9561402d813a01248b6" translate="yes" xml:space="preserve">
          <source>activeClasspublic</source>
          <target state="translated">activeClasspublic</target>
        </trans-unit>
        <trans-unit id="7fe7fcbbf6586bb9560b0192ae21701cc0f7f19d" translate="yes" xml:space="preserve">
          <source>adapter</source>
          <target state="translated">adapter</target>
        </trans-unit>
        <trans-unit id="33fcd42f85515fb01ead1818fccbe54b0bef84ca" translate="yes" xml:space="preserve">
          <source>adapterError</source>
          <target state="translated">adapterError</target>
        </trans-unit>
        <trans-unit id="44f637dff67eeea950ca2f45d4d83577b4c57e7c" translate="yes" xml:space="preserve">
          <source>adapterFor</source>
          <target state="translated">adapterFor</target>
        </trans-unit>
        <trans-unit id="3d2e876335a7c34c2ff684112b498af1e0e2d6d0" translate="yes" xml:space="preserve">
          <source>adapterFor (modelName) public</source>
          <target state="translated">adapterFor (modelName)public</target>
        </trans-unit>
        <trans-unit id="4094dec2e3a249c50a28f40bdfc83a522e2738ba" translate="yes" xml:space="preserve">
          <source>adapterOptions</source>
          <target state="translated">adapterOptions</target>
        </trans-unit>
        <trans-unit id="becc07726b8f6cf41ebd813c8001045433a88f2a" translate="yes" xml:space="preserve">
          <source>adapterpublic</source>
          <target state="translated">adapterpublic</target>
        </trans-unit>
        <trans-unit id="58d1bbce297de3c304a9fefc3b483181872a5c6b" translate="yes" xml:space="preserve">
          <source>add</source>
          <target state="translated">add</target>
        </trans-unit>
        <trans-unit id="65c0c83ac25bcdf53fcba1618ccd760e576aa236" translate="yes" xml:space="preserve">
          <source>add (attribute, messages)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd764be3a22c417adcda1ce27ea94e74cf2fc550" translate="yes" xml:space="preserve">
          <source>add the button to the tab order (&lt;code&gt;tabindex=&quot;0&quot;&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d11f189bf74ab3131201c3a7994f91c0c797abf" translate="yes" xml:space="preserve">
          <source>add the keyboard functionality (a JavaScript function to activate the associated action when the &lt;code&gt;ENTER&lt;/code&gt; key is pressed)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c82eb97f8cde1deda83e955c2d0fdaf8ba513df8" translate="yes" xml:space="preserve">
          <source>add the role of button (&lt;code&gt;role=&quot;button&quot;&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdded17d3c0e7a4bdf44d8e4b8a266f4c0f6595a" translate="yes" xml:space="preserve">
          <source>addAmt</source>
          <target state="translated">addAmt</target>
        </trans-unit>
        <trans-unit id="c9c16c8123d18cdf7e8f05f4cd33ec011170f1ff" translate="yes" xml:space="preserve">
          <source>addArrayObserver</source>
          <target state="translated">addArrayObserver</target>
        </trans-unit>
        <trans-unit id="06ae788402d9a297098528816fe312c39318bd9c" translate="yes" xml:space="preserve">
          <source>addArrayObserver (target, opts) Ember.Arraypublic</source>
          <target state="translated">addArrayObserver (target,opts)Ember.Arraypublic</target>
        </trans-unit>
        <trans-unit id="1f47cc9c8371e8b790a60cda2e64392173e7d9a1" translate="yes" xml:space="preserve">
          <source>addArrayObserver (target, opts) EmberArraypublic</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56e0a46c7d84840ba411eea47524727561509868" translate="yes" xml:space="preserve">
          <source>addListener</source>
          <target state="translated">addListener</target>
        </trans-unit>
        <trans-unit id="2f6c3927e01c74eebbbb55db0da5039430f0fda7" translate="yes" xml:space="preserve">
          <source>addListener (obj, eventName, target, method, once) public</source>
          <target state="translated">addListener (obj,eventName,target,method,once)public</target>
        </trans-unit>
        <trans-unit id="b5bd66a8a0ee0cb08d34c4f1bcbc943d7d3b7f1c" translate="yes" xml:space="preserve">
          <source>addObject</source>
          <target state="translated">addObject</target>
        </trans-unit>
        <trans-unit id="e9030ecf9b727ff166cc3dfb290ff2897dc9bf92" translate="yes" xml:space="preserve">
          <source>addObject (obj) Ember.Arraypublic</source>
          <target state="translated">addObject (obj)Ember.Arraypublic</target>
        </trans-unit>
        <trans-unit id="626dc18d3c329182f07d8324b28daef28da7018a" translate="yes" xml:space="preserve">
          <source>addObject (obj) EmberArraypublic</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16b4be009817af0b36957bf8e40128e2b5dc878c" translate="yes" xml:space="preserve">
          <source>addObject (object) Objectpublic</source>
          <target state="translated">addObject (object)Objectpublic</target>
        </trans-unit>
        <trans-unit id="b3281763ef5ab10df1c06a57b58c94fc899c6f97" translate="yes" xml:space="preserve">
          <source>addObjects</source>
          <target state="translated">addObjects</target>
        </trans-unit>
        <trans-unit id="0edb9ad1cd73799d5e8c7ed2d75e2e4e28a40f3e" translate="yes" xml:space="preserve">
          <source>addObjects (objects) EmberArraypublic</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd9249cfbc3b9fa5c42d95b8b6da33e249f66db5" translate="yes" xml:space="preserve">
          <source>addObjects (objects) Objectpublic</source>
          <target state="translated">addObjects (objects)Objectpublic</target>
        </trans-unit>
        <trans-unit id="648d0593f2a2d4ad861ec1303ddd800dc0c05482" translate="yes" xml:space="preserve">
          <source>addObserver</source>
          <target state="translated">addObserver</target>
        </trans-unit>
        <trans-unit id="7d49face02c10e7e5606228d994e4687c936fec6" translate="yes" xml:space="preserve">
          <source>addObserver (key, target, method) public</source>
          <target state="translated">addObserver (clave,objetivo,método)público</target>
        </trans-unit>
        <trans-unit id="736e6a04c49426e3a510850fb0acb8741019ff26" translate="yes" xml:space="preserve">
          <source>addObserver (key, target, method, sync) Observablepublic</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f9e537fcc40c1aa02c768c531d25c9584f182b7" translate="yes" xml:space="preserve">
          <source>addObserver (obj, _path, target, method) public</source>
          <target state="translated">addObserver (obj,_path,target,method)public</target>
        </trans-unit>
        <trans-unit id="6b5547d37cc6e783a7bedc5b4352a926f3f67b59" translate="yes" xml:space="preserve">
          <source>addObserver (obj, path, target, method) public</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84321ecf1740f143a0c369ef7b40dd6b865de703" translate="yes" xml:space="preserve">
          <source>additionalDependentKeys</source>
          <target state="translated">additionalDependentKeys</target>
        </trans-unit>
        <trans-unit id="4b7428079fa537ec02ce1eddbea575941b501e4b" translate="yes" xml:space="preserve">
          <source>addon/-private/adapters/build-url-mixin.js:5</source>
          <target state="translated">addon/-private/adapters/build-url-mixin.js:5</target>
        </trans-unit>
        <trans-unit id="9ec1d2939b803fe80db9755ec7138d5224564b6b" translate="yes" xml:space="preserve">
          <source>addon/-private/adapters/errors.js:12</source>
          <target state="translated">addon/-private/adapters/errors.js:12</target>
        </trans-unit>
        <trans-unit id="9bdff9c25e7601f7f6e6989657310a9552200a66" translate="yes" xml:space="preserve">
          <source>addon/-private/adapters/errors.js:122</source>
          <target state="translated">addon/-private/adapters/errors.js:122</target>
        </trans-unit>
        <trans-unit id="bbfe6621166a8271ee78a67a07aa96c43f980e0b" translate="yes" xml:space="preserve">
          <source>addon/-private/adapters/errors.js:183</source>
          <target state="translated">addon/-private/adapters/errors.js:183</target>
        </trans-unit>
        <trans-unit id="ab47a954a57d7648b1436707ca1833384927ed22" translate="yes" xml:space="preserve">
          <source>addon/-private/adapters/errors.js:218</source>
          <target state="translated">addon/-private/adapters/errors.js:218</target>
        </trans-unit>
        <trans-unit id="dd7afc58b5ab05bd5797c0bdcac64a0ffd4cd144" translate="yes" xml:space="preserve">
          <source>addon/-private/adapters/errors.js:230</source>
          <target state="translated">addon/-private/adapters/errors.js:230</target>
        </trans-unit>
        <trans-unit id="d5bfa1ed37de5d90df87b9ff1a3cecff6287ee8c" translate="yes" xml:space="preserve">
          <source>addon/-private/adapters/errors.js:266</source>
          <target state="translated">addon/-private/adapters/errors.js:266</target>
        </trans-unit>
        <trans-unit id="0b840acfcbb06613f154849991f47d6e4ad396df" translate="yes" xml:space="preserve">
          <source>addon/-private/adapters/errors.js:279</source>
          <target state="translated">addon/-private/adapters/errors.js:279</target>
        </trans-unit>
        <trans-unit id="a61fa5772ab22fd9f407de0c663536b0238f6033" translate="yes" xml:space="preserve">
          <source>addon/-private/adapters/errors.js:318</source>
          <target state="translated">addon/-private/adapters/errors.js:318</target>
        </trans-unit>
        <trans-unit id="069c1bc67d7f1d7cfc17185071e3782194ec9089" translate="yes" xml:space="preserve">
          <source>addon/-private/adapters/errors.js:331</source>
          <target state="translated">addon/-private/adapters/errors.js:331</target>
        </trans-unit>
        <trans-unit id="7a8eaa6e51d2bf1845484f926f2aa9cae76c52da" translate="yes" xml:space="preserve">
          <source>addon/-private/core.js:8</source>
          <target state="translated">addon/-private/core.js:8</target>
        </trans-unit>
        <trans-unit id="73161bbfc24c32b34f4d38314e21452d86174523" translate="yes" xml:space="preserve">
          <source>addon/-private/system/many-array.js:12</source>
          <target state="translated">addon/-private/system/many-array.js:12</target>
        </trans-unit>
        <trans-unit id="e8c147e9397c125eec527f75f36a1b9aa025a39d" translate="yes" xml:space="preserve">
          <source>addon/-private/system/model/errors.js:15</source>
          <target state="translated">addon/-private/system/model/errors.js:15</target>
        </trans-unit>
        <trans-unit id="daf133d55225327c2e3f568ee6eaf2f6fb6a618e" translate="yes" xml:space="preserve">
          <source>addon/-private/system/model/model.js:70</source>
          <target state="translated">addon/-private/system/model/model.js:70</target>
        </trans-unit>
        <trans-unit id="1d91ebee95641c003e4a3ca4a95290a6bc596b75" translate="yes" xml:space="preserve">
          <source>addon/-private/system/model/states.js:10</source>
          <target state="translated">addon/-private/system/model/states.js:10</target>
        </trans-unit>
        <trans-unit id="9da7cde1ac90906a5399aca0482f5d80e27a324e" translate="yes" xml:space="preserve">
          <source>addon/-private/system/promise-proxies.js:37</source>
          <target state="translated">addon/-private/system/promise-proxies.js:37</target>
        </trans-unit>
        <trans-unit id="dc022a961328dc615b86b5c590d338e0a7aff9c2" translate="yes" xml:space="preserve">
          <source>addon/-private/system/promise-proxies.js:6</source>
          <target state="translated">addon/-private/system/promise-proxies.js:6</target>
        </trans-unit>
        <trans-unit id="6d027d2af94eef877b9c1b60be3b91d9edb52116" translate="yes" xml:space="preserve">
          <source>addon/-private/system/promise-proxies.js:80</source>
          <target state="translated">addon/-private/system/promise-proxies.js:80</target>
        </trans-unit>
        <trans-unit id="d72f8c3d9a1b5ec93f57e41e9c7527bf389c28eb" translate="yes" xml:space="preserve">
          <source>addon/-private/system/record-arrays/adapter-populated-record-array.js:11</source>
          <target state="translated">addon/-private/system/record-arrays/adapter-populated-record-array.js:11</target>
        </trans-unit>
        <trans-unit id="c5af73895e69cc2ad103dc0bc74a00fab6b4dc16" translate="yes" xml:space="preserve">
          <source>addon/-private/system/record-arrays/filtered-record-array.js:10</source>
          <target state="translated">addon/-private/system/record-arrays/filtered-record-array.js:10</target>
        </trans-unit>
        <trans-unit id="5b3c9da69781a7c46387d96d1944f216df4fe221" translate="yes" xml:space="preserve">
          <source>addon/-private/system/record-arrays/record-array.js:11</source>
          <target state="translated">addon/-private/system/record-arrays/record-array.js:11</target>
        </trans-unit>
        <trans-unit id="240299b88ca21509e7841a42b800f475b1643c73" translate="yes" xml:space="preserve">
          <source>addon/-private/system/references/belongs-to.js:9</source>
          <target state="translated">addon/-private/system/references/belongs-to.js:9</target>
        </trans-unit>
        <trans-unit id="8ece4ccdd9cf3b13305929c6ad03d7ff14960fc3" translate="yes" xml:space="preserve">
          <source>addon/-private/system/references/has-many.js:16</source>
          <target state="translated">addon/-private/system/references/has-many.js:16</target>
        </trans-unit>
        <trans-unit id="9ff9849c1cebea5fc1e303b9fa47a8f53b3c0555" translate="yes" xml:space="preserve">
          <source>addon/-private/system/references/record.js:4</source>
          <target state="translated">addon/-private/system/references/record.js:4</target>
        </trans-unit>
        <trans-unit id="229c844c0ae2a2c814052367e7f382848096f2f6" translate="yes" xml:space="preserve">
          <source>addon/-private/system/store.js:135</source>
          <target state="translated">addon/-private/system/store.js:135</target>
        </trans-unit>
        <trans-unit id="e49987146c21bb294e9bb2386b5ea60a13fb1251" translate="yes" xml:space="preserve">
          <source>addon/adapter.js:7</source>
          <target state="translated">addon/adapter.js:7</target>
        </trans-unit>
        <trans-unit id="e6fd186a6b0734d8a5abcff4ff9496370f446274" translate="yes" xml:space="preserve">
          <source>addon/adapters/json-api.js:11</source>
          <target state="translated">addon/adapters/json-api.js:11</target>
        </trans-unit>
        <trans-unit id="ae7db88471597039e4479b4c398e037a8da6b511" translate="yes" xml:space="preserve">
          <source>addon/adapters/rest.js:31</source>
          <target state="translated">addon/adapters/rest.js:31</target>
        </trans-unit>
        <trans-unit id="5abb1eca35106c2076c2b03af339703bffc4bb09" translate="yes" xml:space="preserve">
          <source>addon/serializer.js:7</source>
          <target state="translated">addon/serializer.js:7</target>
        </trans-unit>
        <trans-unit id="729649ea8786a8dbee9bbdb3d9ac36352d13e0eb" translate="yes" xml:space="preserve">
          <source>addon/serializers/embedded-records-mixin.js:8</source>
          <target state="translated">addon/serializers/embedded-records-mixin.js:8</target>
        </trans-unit>
        <trans-unit id="1384f9eec5d771289cbafadbe653402f9d702b46" translate="yes" xml:space="preserve">
          <source>addon/serializers/json-api.js:13</source>
          <target state="translated">addon/serializers/json-api.js:13</target>
        </trans-unit>
        <trans-unit id="81735b8146523391176496bea2a99caa1613724c" translate="yes" xml:space="preserve">
          <source>addon/serializers/json.js:17</source>
          <target state="translated">addon/serializers/json.js:17</target>
        </trans-unit>
        <trans-unit id="669be359b618801877a5597f5cdd83195f2fd8ca" translate="yes" xml:space="preserve">
          <source>addon/serializers/rest.js:13</source>
          <target state="translated">addon/serializers/rest.js:13</target>
        </trans-unit>
        <trans-unit id="64d48d1d2036a4634bcd2569652e7bea70ca91cf" translate="yes" xml:space="preserve">
          <source>addon/transforms/boolean.js:6</source>
          <target state="translated">addon/transforms/boolean.js:6</target>
        </trans-unit>
        <trans-unit id="4b35e9510f6ce9c911b13fb3278e638c66db3d63" translate="yes" xml:space="preserve">
          <source>addon/transforms/date.js:35</source>
          <target state="translated">addon/transforms/date.js:35</target>
        </trans-unit>
        <trans-unit id="e8d4eba5406d6848582747e06e42a5ec7a938289" translate="yes" xml:space="preserve">
          <source>addon/transforms/number.js:10</source>
          <target state="translated">addon/transforms/number.js:10</target>
        </trans-unit>
        <trans-unit id="1db9ee44e8d53b36189c6d39670cf76764d4fd4a" translate="yes" xml:space="preserve">
          <source>addon/transforms/string.js:6</source>
          <target state="translated">addon/transforms/string.js:6</target>
        </trans-unit>
        <trans-unit id="d008afd6b41275d6e546bff4f18cc4e6428e0859" translate="yes" xml:space="preserve">
          <source>addon/transforms/transform.js:3</source>
          <target state="translated">addon/transforms/transform.js:3</target>
        </trans-unit>
        <trans-unit id="c059aa7a4877a935f6e64a732362d4447d943be5" translate="yes" xml:space="preserve">
          <source>advanceReadiness</source>
          <target state="translated">advanceReadiness</target>
        </trans-unit>
        <trans-unit id="7912e299df658652011c0e6325dd10d4207131ac" translate="yes" xml:space="preserve">
          <source>advanceReadinesspublic</source>
          <target state="translated">advanceReadinesspublic</target>
        </trans-unit>
        <trans-unit id="1ebf6e4676b0b75d1d9d8ffef7d422158336fb2f" translate="yes" xml:space="preserve">
          <source>afterModel</source>
          <target state="translated">afterModel</target>
        </trans-unit>
        <trans-unit id="a10030fe1788436991ca22abf7d7a3ee394dd2b7" translate="yes" xml:space="preserve">
          <source>afterModel (resolvedModel, transition) Any | Promise&amp;lt;any&amp;gt;public</source>
          <target state="translated">afterModel (modelo resuelto, transici&amp;oacute;n) Cualquiera | Promesa &amp;lt;cualquier&amp;gt; p&amp;uacute;blico</target>
        </trans-unit>
        <trans-unit id="cdb6fdbe91faa53a7c573c80b7c18108c73c0480" translate="yes" xml:space="preserve">
          <source>alias</source>
          <target state="translated">alias</target>
        </trans-unit>
        <trans-unit id="0c1da7c134076261cf786ea4ba27c3c724c6575f" translate="yes" xml:space="preserve">
          <source>alias (dependentKey) ComputedPropertypublic</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2850d8aa03b457d7530a05b7c88eb88886c10c2" translate="yes" xml:space="preserve">
          <source>alias (dependentKey) Ember.ComputedPropertypublic</source>
          <target state="translated">alias (dependienteKey)Ember.ComputedPropertypublic</target>
        </trans-unit>
        <trans-unit id="17c3c508ac5051ae32957004c7eaa13491fa41c7" translate="yes" xml:space="preserve">
          <source>aliasMethod</source>
          <target state="translated">aliasMethod</target>
        </trans-unit>
        <trans-unit id="cab62eb101b3750a6da1f2ee01180893804daa7b" translate="yes" xml:space="preserve">
          <source>aliasMethod (methodName) public</source>
          <target state="translated">aliasMethod (methodName)public</target>
        </trans-unit>
        <trans-unit id="1d492d610beaf6cefaf66ce28b690b6c4e68e126" translate="yes" xml:space="preserve">
          <source>aliasMethod (methodName) publicdeprecated</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d87c448044defb778f33158d8ccf94a20531d600" translate="yes" xml:space="preserve">
          <source>all</source>
          <target state="translated">all</target>
        </trans-unit>
        <trans-unit id="2471617b2afdc98523987df5c3278f0d92baf071" translate="yes" xml:space="preserve">
          <source>all (array, label)</source>
          <target state="translated">todos (matriz,etiqueta)</target>
        </trans-unit>
        <trans-unit id="206d709197cb6e59c6c248467f1c53376173db0e" translate="yes" xml:space="preserve">
          <source>all (array, label) public</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f95474a591d7f2126df577168c0aa4da1f64cc20" translate="yes" xml:space="preserve">
          <source>all (entries, label) Promise</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0894cbc1ff254839bfbbb5b981c4cb61894b9363" translate="yes" xml:space="preserve">
          <source>allSettled</source>
          <target state="translated">allSettled</target>
        </trans-unit>
        <trans-unit id="f83e3b6810a12656437039c3c4cd8195d99fe419" translate="yes" xml:space="preserve">
          <source>allSettled (entries, label) Promise</source>
          <target state="translated">AllSettled (entradas,etiqueta)Promesa</target>
        </trans-unit>
        <trans-unit id="586a9dd28380066acd01a2ebd306e531572ec6cb" translate="yes" xml:space="preserve">
          <source>allSettled (entries, label) Promisepublic</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0da4bbe7319405047d7f48987f1bba93b9df5f8f" translate="yes" xml:space="preserve">
          <source>amt</source>
          <target state="translated">amt</target>
        </trans-unit>
        <trans-unit id="612fda0c92b3ca2aad4f36fc9c7e82307bb293f7" translate="yes" xml:space="preserve">
          <source>an Array of parameter names for the current route (in the example, `['post_id']`.</source>
          <target state="translated">una matriz de nombres de parámetros para la ruta actual (en el ejemplo,`['post_id']`.</target>
        </trans-unit>
        <trans-unit id="d300bb4e28aa1f2c1663e8d43635c9f137c5acda" translate="yes" xml:space="preserve">
          <source>an array mapped to the specified key</source>
          <target state="translated">una matriz mapeada a la clave especificada</target>
        </trans-unit>
        <trans-unit id="44e01c95832c6e2a897a8440cc77fe0df4318a3b" translate="yes" xml:space="preserve">
          <source>an array mapped via the callback</source>
          <target state="translated">una matriz mapeada a través de la llamada</target>
        </trans-unit>
        <trans-unit id="8bf7a31dc6654d888ee2f9f8d76a8f2f673e89f9" translate="yes" xml:space="preserve">
          <source>an array of arrays of records, each of which is to be loaded separately by `findMany`.</source>
          <target state="translated">una serie de conjuntos de registros,cada uno de los cuales debe ser cargado por separado por &quot;Encontrar a Muchos&quot;.</target>
        </trans-unit>
        <trans-unit id="772d53bfdb8fea28f5e8c0b8958742a0f2d6994b" translate="yes" xml:space="preserve">
          <source>an instance of DS.Store</source>
          <target state="translated">una instancia de DS.Store</target>
        </trans-unit>
        <trans-unit id="c91810e5f5737eef69ee8953cedbfd6d033d3b29" translate="yes" xml:space="preserve">
          <source>an instance of Store</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0396162d4ba4554bad751edade1ef85591ed76b8" translate="yes" xml:space="preserve">
          <source>an instance of `Descriptor` (typically a computed property) or an ES5 descriptor. You must provide this or `data` but not both.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee8a67984173c6cc07e71362ac196916bee62bc3" translate="yes" xml:space="preserve">
          <source>an object containing any passed in options, adapterOptions, and the ability to access a snapshot for each existing record of the type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96b375f76afb3739f75ac6070a9db2b4d5be7139" translate="yes" xml:space="preserve">
          <source>an object whose values are primitive JSON values only</source>
          <target state="translated">un objeto cuyos valores son sólo valores primitivos de JSON</target>
        </trans-unit>
        <trans-unit id="aa85ec166b29488582c3fbe47d5bf5041d71d527" translate="yes" xml:space="preserve">
          <source>an object, whose keys are changed properties, and value is an [oldProp, newProp] array.</source>
          <target state="translated">un objeto,cuyas claves son propiedades cambiadas,y el valor es una matriz [oldProp,newProp].</target>
        </trans-unit>
        <trans-unit id="7f583011c23166040c680107e167ad46fdd4e9e6" translate="yes" xml:space="preserve">
          <source>an opaque query to be used by the adapter</source>
          <target state="translated">una consulta opaca para ser usada por el adaptador</target>
        </trans-unit>
        <trans-unit id="cffa50a32cb13a240d705317bcec65dd1f31b6ad" translate="yes" xml:space="preserve">
          <source>and</source>
          <target state="translated">and</target>
        </trans-unit>
        <trans-unit id="22fa56c4f0c8597539e2b3d22d847bf03f8fd51e" translate="yes" xml:space="preserve">
          <source>and (dependentKey) ComputedPropertypublic</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a484452c2d5a731194415dc578076f5773fc91bf" translate="yes" xml:space="preserve">
          <source>and (dependentKey) Ember.ComputedPropertypublic</source>
          <target state="translated">y (dependienteKey)Ember.ComputedPropertypublic</target>
        </trans-unit>
        <trans-unit id="151dee65473ed0b1b82ef641fae9bfd622ec4085" translate="yes" xml:space="preserve">
          <source>and a component integration test (&lt;code&gt;tests/integration/components/list-filter-test.js&lt;/code&gt;).</source>
          <target state="translated">y una prueba de integraci&amp;oacute;n de componentes ( &lt;code&gt;tests/integration/components/list-filter-test.js&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="9d20c6b338044f563d6d474e06c1a8af91a06b80" translate="yes" xml:space="preserve">
          <source>and a template to display its attributes:</source>
          <target state="translated">y una plantilla para mostrar sus atributos:</target>
        </trans-unit>
        <trans-unit id="4dd7818d8719e2092594f8bea5aeb6d2a0df8039" translate="yes" xml:space="preserve">
          <source>and calling it with a falsey &lt;code&gt;userData&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="389de3652199c8b5e1f7f7f52c982c7bec0954b7" translate="yes" xml:space="preserve">
          <source>and executing the following code:</source>
          <target state="translated">y ejecutando el siguiente código:</target>
        </trans-unit>
        <trans-unit id="267d18d0747484478ee864fd61605d59a9f68d67" translate="yes" xml:space="preserve">
          <source>and the adapter for the &lt;code&gt;User&lt;/code&gt; model defines a &lt;code&gt;queryRecord()&lt;/code&gt; method that targets that endpoint:</source>
          <target state="translated">y el adaptador para el modelo de &lt;code&gt;User&lt;/code&gt; define un m&amp;eacute;todo &lt;code&gt;queryRecord()&lt;/code&gt; que apunta a ese punto final:</target>
        </trans-unit>
        <trans-unit id="c5fe0200d1c7a5139bd18fd22268c4ca8bf45e90" translate="yes" xml:space="preserve">
          <source>any</source>
          <target state="translated">any</target>
        </trans-unit>
        <trans-unit id="e8d25da651a27b9c6be2e2ba1db826a512adeece" translate="yes" xml:space="preserve">
          <source>any (callback, target) Booleanpublic</source>
          <target state="translated">cualquier (llamada,objetivo)Booleanpublic</target>
        </trans-unit>
        <trans-unit id="0ed8250379c1c3b2ca66d30cd0889abb61ab1a49" translate="yes" xml:space="preserve">
          <source>any object, string, number, Element, or primitive</source>
          <target state="translated">cualquier objeto,cadena,número,elemento o primitivo</target>
        </trans-unit>
        <trans-unit id="ba1b7fc6be771befd60dc80f781e4c281f9bbb53" translate="yes" xml:space="preserve">
          <source>any passed value to &lt;code&gt;disabled&lt;/code&gt; will disable it except &lt;code&gt;undefined&lt;/code&gt;. to ensure that only &lt;code&gt;true&lt;/code&gt; disable the &lt;code&gt;link-to&lt;/code&gt; component you can override the global behavior of &lt;code&gt;Ember.LinkComponent&lt;/code&gt;.</source>
          <target state="translated">cualquier valor pasado a &lt;code&gt;disabled&lt;/code&gt; lo deshabilitar&amp;aacute; excepto &lt;code&gt;undefined&lt;/code&gt; . para asegurarse de que solo deshabilite el componente de &lt;code&gt;link-to&lt;/code&gt; &lt;code&gt;true&lt;/code&gt; , puede anular el comportamiento global de &lt;code&gt;Ember.LinkComponent&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ed11339b422da3811e222b435ea7d477f1ef9f88" translate="yes" xml:space="preserve">
          <source>application-template-wrapper</source>
          <target state="translated">application-template-wrapper</target>
        </trans-unit>
        <trans-unit id="3030e728f154bf51419109efb93b6b8aeec9a976" translate="yes" xml:space="preserve">
          <source>args</source>
          <target state="translated">args</target>
        </trans-unit>
        <trans-unit id="bb1c37ab13fb7a92c6c0c451b2d0b67564c0c1f7" translate="yes" xml:space="preserve">
          <source>args*</source>
          <target state="translated">args*</target>
        </trans-unit>
        <trans-unit id="536f158f6dfd529865dcb865a97bb16804e34d70" translate="yes" xml:space="preserve">
          <source>arguments</source>
          <target state="translated">arguments</target>
        </trans-unit>
        <trans-unit id="b10982fdeb01b184e3c8f11fc69a3037c89e0364" translate="yes" xml:space="preserve">
          <source>arguments for the action</source>
          <target state="translated">argumentos para la acción</target>
        </trans-unit>
        <trans-unit id="7c62d3440115ef4ec9fd804640a373cb7f1d99ca" translate="yes" xml:space="preserve">
          <source>arguments*</source>
          <target state="translated">arguments*</target>
        </trans-unit>
        <trans-unit id="b784d13837cc44f0b45c00bd61924c7bd6f673cb" translate="yes" xml:space="preserve">
          <source>ariaRole</source>
          <target state="translated">ariaRole</target>
        </trans-unit>
        <trans-unit id="96e7436203a4b3ebf87065ef17336cace4684d6c" translate="yes" xml:space="preserve">
          <source>ariaRolepublic</source>
          <target state="translated">ariaRolepublic</target>
        </trans-unit>
        <trans-unit id="db8d3466d4cbbb3eb0919225deb20c2e6d03fb63" translate="yes" xml:space="preserve">
          <source>arrangedContent</source>
          <target state="translated">arrangedContent</target>
        </trans-unit>
        <trans-unit id="aace2861a2918db6938ff7d563bbe3df57a5da71" translate="yes" xml:space="preserve">
          <source>arrangedContentpublic</source>
          <target state="translated">arrangedContentpublic</target>
        </trans-unit>
        <trans-unit id="19edc1210777ba4d45049c29280d9cc5e1064c25" translate="yes" xml:space="preserve">
          <source>array</source>
          <target state="translated">array</target>
        </trans-unit>
        <trans-unit id="bf118291c2799ae2ec831d041b65e8b4cc8798b7" translate="yes" xml:space="preserve">
          <source>array (options) Arraypublic</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b2900153aa860f3dd8922b013a55c643bb20025" translate="yes" xml:space="preserve">
          <source>array containing the split strings</source>
          <target state="translated">que contiene las cuerdas divididas</target>
        </trans-unit>
        <trans-unit id="ec9aab808ce11e9072efaba32f73405a0b6cbe22" translate="yes" xml:space="preserve">
          <source>array of errors in JSON-API format</source>
          <target state="translated">una serie de errores en el formato JSON-API</target>
        </trans-unit>
        <trans-unit id="4c1b092d9320d62f7adc355ec608fa80fcfdb366" translate="yes" xml:space="preserve">
          <source>array of promises</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0076cd669d78b91743bc7d84ccfd3d067c7067fa" translate="yes" xml:space="preserve">
          <source>array of promises to observe</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd754704d046058309c03c2f51a6ee6f4517d8ed" translate="yes" xml:space="preserve">
          <source>array whose content will be used for replacing the content of the receiver</source>
          <target state="translated">cuyo contenido se usará para reemplazar el contenido del receptor</target>
        </trans-unit>
        <trans-unit id="c8ba3b245d3b571fff7780da3778b35c93a07e86" translate="yes" xml:space="preserve">
          <source>arrayContentDidChange</source>
          <target state="translated">arrayContentDidChange</target>
        </trans-unit>
        <trans-unit id="58e12ede3e92538d3584989fd095cfd186180da6" translate="yes" xml:space="preserve">
          <source>arrayContentDidChange (startIdx, removeAmt, addAmt) Ember.Arraypublic</source>
          <target state="translated">arrayContentDidChange (startIdx,removeAmt,addAmt)Ember.Arraypublic</target>
        </trans-unit>
        <trans-unit id="a336f0168067127cab60f60ca6f11afc5b447721" translate="yes" xml:space="preserve">
          <source>arrayContentDidChange (startIdx, removeAmt, addAmt) EmberArraypublic</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bf027961fd585bb5057924d06a51a82275dd553" translate="yes" xml:space="preserve">
          <source>arrayContentWillChange</source>
          <target state="translated">arrayContentWillChange</target>
        </trans-unit>
        <trans-unit id="c4f089e4c1204ec5b9c1a10e62913fda301314c2" translate="yes" xml:space="preserve">
          <source>arrayContentWillChange (startIdx, removeAmt, addAmt) Ember.Arraypublic</source>
          <target state="translated">arrayContentWillChange (startIdx,removeAmt,addAmt)Ember.Arraypublic</target>
        </trans-unit>
        <trans-unit id="57b38b408e2978122931faaea2e3d6c1e1c04f59" translate="yes" xml:space="preserve">
          <source>arrayContentWillChange (startIdx, removeAmt, addAmt) EmberArraypublic</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64b5daad5073849378993ba34e058d7008293097" translate="yes" xml:space="preserve">
          <source>assert</source>
          <target state="translated">assert</target>
        </trans-unit>
        <trans-unit id="2d5b2c70d8436a05aa29b310e4c3a81ae119a253" translate="yes" xml:space="preserve">
          <source>assert (desc, test) public</source>
          <target state="translated">afirmar (desc,test)público</target>
        </trans-unit>
        <trans-unit id="61bc26c2de0bf64d725cf30f9d4986ef925ddd77" translate="yes" xml:space="preserve">
          <source>assert (description, condition) public</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a5b56f65778a518b40f247066c7a2cc947a1ea2" translate="yes" xml:space="preserve">
          <source>assertDestroyablesDestroyed</source>
          <target state="translated">assertDestroyablesDestroyed</target>
        </trans-unit>
        <trans-unit id="455f09de77c98ca9b5f8334753ab2bc1097bd7e5" translate="yes" xml:space="preserve">
          <source>assertDestroyablesDestroyedpublic</source>
          <target state="translated">assertDestroyablesDestroyedpublic</target>
        </trans-unit>
        <trans-unit id="9009b730f26e909d049a4a0c3612e3c61160f37f" translate="yes" xml:space="preserve">
          <source>assign</source>
          <target state="translated">assign</target>
        </trans-unit>
        <trans-unit id="85ee91079111d676780c83bf77325f4067fb9305" translate="yes" xml:space="preserve">
          <source>assign (original, args) Objectpublic</source>
          <target state="translated">asignar (original,args)Objectpublic</target>
        </trans-unit>
        <trans-unit id="e931eb5ac05366106349e82700c6bd59e6f8dfd4" translate="yes" xml:space="preserve">
          <source>assign (target, args) Objectpublic</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f336adf4ee963574dee7a84ab466bc01305d3b8" translate="yes" xml:space="preserve">
          <source>associate an object as a child of another so that the child object will be destroyed when the associated parent object is destroyed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b44b2b9f217ced0d0566824960c797bf1ab6a8a9" translate="yes" xml:space="preserve">
          <source>associateDestroyableChild</source>
          <target state="translated">associateDestroyableChild</target>
        </trans-unit>
        <trans-unit id="bbe78c4685c47325b882979650c50c0394df9f0d" translate="yes" xml:space="preserve">
          <source>associateDestroyableChild (parent, child, destructor) Object|Functionpublic</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27c1c1e57f6ba0858176ca4eed4e2f77a777b644" translate="yes" xml:space="preserve">
          <source>asyncEnd</source>
          <target state="translated">asyncEnd</target>
        </trans-unit>
        <trans-unit id="a3e10021149aa7ca6daae31d35f4d93f31a57e36" translate="yes" xml:space="preserve">
          <source>asyncEndpublic</source>
          <target state="translated">asyncEndpublic</target>
        </trans-unit>
        <trans-unit id="d923d15f179862191039fde4603541a0795719fb" translate="yes" xml:space="preserve">
          <source>asyncStart</source>
          <target state="translated">asyncStart</target>
        </trans-unit>
        <trans-unit id="1850d86c0c4f7e645ffd7f08e3fb8471b29c0555" translate="yes" xml:space="preserve">
          <source>asyncStartpublic</source>
          <target state="translated">asyncStartpublic</target>
        </trans-unit>
        <trans-unit id="fc88c6b3cc380853de27e44642207df9743ff63d" translate="yes" xml:space="preserve">
          <source>attr</source>
          <target state="translated">attr</target>
        </trans-unit>
        <trans-unit id="c576c3989a1f6bdf395925a0713eb1482b0be626" translate="yes" xml:space="preserve">
          <source>attr (type, options) Attribute</source>
          <target state="translated">attr (tipo,opciones)Atributo</target>
        </trans-unit>
        <trans-unit id="67c40775f0e48d4318094857aa7cc1d3a63d7f5e" translate="yes" xml:space="preserve">
          <source>attr (type, options) Attributepublic</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c317cd0735d9046d7675c475fa1c6dce647953f" translate="yes" xml:space="preserve">
          <source>attribute</source>
          <target state="translated">attribute</target>
        </trans-unit>
        <trans-unit id="d0210793c2dcb66d8439b8861adf659582577ef2" translate="yes" xml:space="preserve">
          <source>attributeBindings</source>
          <target state="translated">attributeBindings</target>
        </trans-unit>
        <trans-unit id="ac2812ff968488be792df47d7af15890743ab5a5" translate="yes" xml:space="preserve">
          <source>attributeBindingspublic</source>
          <target state="translated">attributeBindingspublic</target>
        </trans-unit>
        <trans-unit id="d7f67a250d8254339cc572b200990d99fe1baf29" translate="yes" xml:space="preserve">
          <source>attributes</source>
          <target state="translated">attributes</target>
        </trans-unit>
        <trans-unit id="360470acac99f52396c26d643ac4bb892e66b825" translate="yes" xml:space="preserve">
          <source>attributespublic</source>
          <target state="translated">attributespublic</target>
        </trans-unit>
        <trans-unit id="130856e90bbab066b8bff5aef533f2fbad235efb" translate="yes" xml:space="preserve">
          <source>attrs</source>
          <target state="translated">attrs</target>
        </trans-unit>
        <trans-unit id="a0c55b9f6981ad930c9f9a6e456e4a2a65a27b75" translate="yes" xml:space="preserve">
          <source>autocomplete</source>
          <target state="translated">autocomplete</target>
        </trans-unit>
        <trans-unit id="0d2b98a9093686a223ccc82022c3db762739720f" translate="yes" xml:space="preserve">
          <source>autofocus</source>
          <target state="translated">autofocus</target>
        </trans-unit>
        <trans-unit id="20aa73aab64b5a0de7eafb3f7e8f6a765199f873" translate="yes" xml:space="preserve">
          <source>autosave</source>
          <target state="translated">autosave</target>
        </trans-unit>
        <trans-unit id="78bf7436a50449c85ab2bbe9c63af08af3410d23" translate="yes" xml:space="preserve">
          <source>await the adapter's response</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9d71f5ee7c92d6dc9e92ffdad17b8bd49418f98" translate="yes" xml:space="preserve">
          <source>b</source>
          <target state="translated">b</target>
        </trans-unit>
        <trans-unit id="90d5edff3a81c03312850adf401467a1ced69b75" translate="yes" xml:space="preserve">
          <source>becameError</source>
          <target state="translated">becameError</target>
        </trans-unit>
        <trans-unit id="40907776242f8611e1ab6c686d4e772cfcfd3386" translate="yes" xml:space="preserve">
          <source>becameInvalid</source>
          <target state="translated">becameInvalid</target>
        </trans-unit>
        <trans-unit id="362dddce5a292acaecae5af82ba6aba212c3bf4b" translate="yes" xml:space="preserve">
          <source>beforeModel</source>
          <target state="translated">beforeModel</target>
        </trans-unit>
        <trans-unit id="a3816c80bef3ebdc128bef42cceb39d414edd182" translate="yes" xml:space="preserve">
          <source>beforeModel (transition) Any | Promise&amp;lt;any&amp;gt;public</source>
          <target state="translated">beforeModel (transici&amp;oacute;n) Cualquiera | Promesa &amp;lt;cualquier&amp;gt; p&amp;uacute;blico</target>
        </trans-unit>
        <trans-unit id="8cbd0a74c6efdb39943b290bb82c9d6b2a6ee5a6" translate="yes" xml:space="preserve">
          <source>begin</source>
          <target state="translated">begin</target>
        </trans-unit>
        <trans-unit id="2999cce082431c9c9a9c2497e822cd60962731a1" translate="yes" xml:space="preserve">
          <source>beginIndex</source>
          <target state="translated">beginIndex</target>
        </trans-unit>
        <trans-unit id="8f12118835b98ef876342ee2b4cf9067f368cdfc" translate="yes" xml:space="preserve">
          <source>beginVoidpublic</source>
          <target state="translated">beginVoidpublic</target>
        </trans-unit>
        <trans-unit id="53e2f16efa626834856ed48ae854a1acca19d382" translate="yes" xml:space="preserve">
          <source>belongsTo</source>
          <target state="translated">belongsTo</target>
        </trans-unit>
        <trans-unit id="1baaf668007149f58209227fa734e8b3001baf03" translate="yes" xml:space="preserve">
          <source>belongsTo (modelName, options) Ember.computed</source>
          <target state="translated">belongsTo (nombre del modelo,opciones)Ember.computed</target>
        </trans-unit>
        <trans-unit id="41cb9a0e6b41d24965633e4e3721c7b201b7b320" translate="yes" xml:space="preserve">
          <source>belongsTo (modelName, options) Ember.computedpublic</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e12cce69d90539a5fcada817a5530f8042e517a7" translate="yes" xml:space="preserve">
          <source>belongsTo (name) BelongsToReference</source>
          <target state="translated">pertenece a (nombre)pertenece a (nombre)pertenece a (referencia)</target>
        </trans-unit>
        <trans-unit id="ad5b94b67fab82d1ff23035824e02884417a227e" translate="yes" xml:space="preserve">
          <source>belongsTo: &lt;code&gt;{ serialize: 'id', deserialize: 'id' }&lt;/code&gt; hasMany &lt;code&gt;{ serialize: false, deserialize: 'ids' }&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bdd4db977b0f96aaf3bff2e4300153c648ca382" translate="yes" xml:space="preserve">
          <source>bind</source>
          <target state="translated">bind</target>
        </trans-unit>
        <trans-unit id="8387b44aeaafe2398567d7de0bd7ee19f6df9435" translate="yes" xml:space="preserve">
          <source>bind (obj, to, from) Ember.Bindingpublic</source>
          <target state="translated">bind (obj,to,from)Ember.Bindingpublic</target>
        </trans-unit>
        <trans-unit id="f173670a857abdc9d0d8cac63e1cd0b7d2e3c8ff" translate="yes" xml:space="preserve">
          <source>bind (target, method, args*) Functionpublic</source>
          <target state="translated">bind (target,method,args*)Functionpublic</target>
        </trans-unit>
        <trans-unit id="4a9fb8d92972382b39b524ce7f8cdc6213d95500" translate="yes" xml:space="preserve">
          <source>binding</source>
          <target state="translated">binding</target>
        </trans-unit>
        <trans-unit id="118b2d1121611966abdb38a772f9ba74feab27ef" translate="yes" xml:space="preserve">
          <source>binding instance</source>
          <target state="translated">instancia vinculante</target>
        </trans-unit>
        <trans-unit id="5039d155a71c0a5f7a2b2654ad49cb7ee47a8980" translate="yes" xml:space="preserve">
          <source>bool</source>
          <target state="translated">bool</target>
        </trans-unit>
        <trans-unit id="5a693a5dc805966fb7f8822686e4f8fd6fb5e5ec" translate="yes" xml:space="preserve">
          <source>bool (dependentKey) ComputedPropertypublic</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e6f14ff0b4526e9f727a9299538588e00ec5eae" translate="yes" xml:space="preserve">
          <source>bool (dependentKey) Ember.ComputedPropertypublic</source>
          <target state="translated">bool (dependentKey)Ember.ComputedPropertypublic</target>
        </trans-unit>
        <trans-unit id="48647474b89fa8f56ed6bda0f8148a17b51b97bd" translate="yes" xml:space="preserve">
          <source>boolean</source>
          <target state="translated">boolean</target>
        </trans-unit>
        <trans-unit id="3850f60ed2e13449b65e86113811c0e71fb07058" translate="yes" xml:space="preserve">
          <source>boolean Whether the class is a model class or not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c73b0c6f476ded38de389f894770f06f4d02b2f" translate="yes" xml:space="preserve">
          <source>boot</source>
          <target state="translated">boot</target>
        </trans-unit>
        <trans-unit id="8d2dcd288d45578e7b864fc4a21747ac96c1871a" translate="yes" xml:space="preserve">
          <source>boot (options) Promise&amp;lt;EngineInstance,Error&amp;gt;public</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce5876d9c30cdb2067f0506e3b95b937ea2caf34" translate="yes" xml:space="preserve">
          <source>bootPromise&amp;lt;Application,Error&amp;gt;public</source>
          <target state="translated">bootPromise&amp;lt;Application,Error&amp;gt;public</target>
        </trans-unit>
        <trans-unit id="997872e1a55b5e035ba69570a384f1643cb85daa" translate="yes" xml:space="preserve">
          <source>buildInstance</source>
          <target state="translated">buildInstance</target>
        </trans-unit>
        <trans-unit id="5b8754544cfd62ede75aaeefaf7f5582e8c4b49d" translate="yes" xml:space="preserve">
          <source>buildInstanceApplicationInstancepublic</source>
          <target state="translated">buildInstanceApplicationInstancepublic</target>
        </trans-unit>
        <trans-unit id="68bc331981b8dec56668975b6c23ec966666e249" translate="yes" xml:space="preserve">
          <source>buildInstanceEngineInstancepublic</source>
          <target state="translated">buildInstanceEngineInstancepublic</target>
        </trans-unit>
        <trans-unit id="92e952652a96016252c54f288d2cd8c503f3c82d" translate="yes" xml:space="preserve">
          <source>buildQuery</source>
          <target state="translated">buildQuery</target>
        </trans-unit>
        <trans-unit id="7f40d6c2ebcc8bb6c336a2ce9f2b881131c429ab" translate="yes" xml:space="preserve">
          <source>buildQuery (snapshot) Objectpublic</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c47e0c00738e42fb4bfcb12258f1972bd55e035d" translate="yes" xml:space="preserve">
          <source>buildRouteInfoMetadata</source>
          <target state="translated">buildRouteInfoMetadata</target>
        </trans-unit>
        <trans-unit id="7c8de87d3d633894911a50b7c6ad5b6912b83a72" translate="yes" xml:space="preserve">
          <source>buildRouteInfoMetadatapublic</source>
          <target state="translated">buildRouteInfoMetadatapublic</target>
        </trans-unit>
        <trans-unit id="8511a50f351d498a53fe29676955ec0ebc4d8546" translate="yes" xml:space="preserve">
          <source>buildURL</source>
          <target state="translated">buildURL</target>
        </trans-unit>
        <trans-unit id="96598646f08707f63249aa25b03a2778ac83a8cb" translate="yes" xml:space="preserve">
          <source>buildURL (modelName, id, snapshot, requestType, query) String</source>
          <target state="translated">buildURL (modelName,id,snapshot,requestType,query)String</target>
        </trans-unit>
        <trans-unit id="62e5ce90f68be46cf422dcd4dc0f016eb6b271f8" translate="yes" xml:space="preserve">
          <source>cacheFor</source>
          <target state="translated">cacheFor</target>
        </trans-unit>
        <trans-unit id="d5c9b463aabe448804477940aee0f0de6d185256" translate="yes" xml:space="preserve">
          <source>cacheFor (keyName) Objectpublic</source>
          <target state="translated">cacheFor (keyName)Objectpublic</target>
        </trans-unit>
        <trans-unit id="7d03b5b031a1aed97323838dcdbbf9abe975d792" translate="yes" xml:space="preserve">
          <source>cacheFor (obj, key) Objectpublic</source>
          <target state="translated">cacheFor (obj,key)Objectpublic</target>
        </trans-unit>
        <trans-unit id="b4d5b37bf7a986c138ede89e0806f366b5cb1830" translate="yes" xml:space="preserve">
          <source>callback</source>
          <target state="translated">callback</target>
        </trans-unit>
        <trans-unit id="3cb3b31e96321c9b8cd028eba32469bb77aca6cc" translate="yes" xml:space="preserve">
          <source>called after autotracked state has changed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2b12de27ebecc7a6fc26889aad75cfde1f5321b" translate="yes" xml:space="preserve">
          <source>called after autotracked state has changed, if the helper has not been destroyed during render</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="877878cb31d4b4a8499956e5c6df4daedbf4af39" translate="yes" xml:space="preserve">
          <source>called after the helper was first created, if the helper has not been destroyed since creation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94b7e6c788507a4c372d0ed9521e38fdd223d148" translate="yes" xml:space="preserve">
          <source>called as discovered during DOM construction</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="374084ab61fd04d85bc7ce51b0d46cbfa501a7d5" translate="yes" xml:space="preserve">
          <source>called if the &lt;code&gt;hasDestroyable&lt;/code&gt; capability is disabled</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcaa5c6c4d1f78a6112bbcd185cec34ff77a3e8e" translate="yes" xml:space="preserve">
          <source>called if the &lt;code&gt;hasScheduledEffect&lt;/code&gt; capability is disabled</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16bf3b6c4290fbe1af7f7eaed457c395a164ad9c" translate="yes" xml:space="preserve">
          <source>called if the &lt;code&gt;hasValue&lt;/code&gt; capability is disabled</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84419d8f5b1b457a94532a73ed5ef961bed2c216" translate="yes" xml:space="preserve">
          <source>called immediately after the &lt;code&gt;createHelper&lt;/code&gt; hook is called</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a0b58a292ae93d1cc17dd58974ff31fa2b7e40c" translate="yes" xml:space="preserve">
          <source>called in SSR</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e68819c830fa168f26f6df7541a3cd2dc78ffc0f" translate="yes" xml:space="preserve">
          <source>called in definition order in the template</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee668fa0a1f95e38ea33116e97fb4dcb8a80e5a0" translate="yes" xml:space="preserve">
          <source>called the first time the helper value is requested</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2695563698f4c6d7387ed53f92437e756310661" translate="yes" xml:space="preserve">
          <source>camelize</source>
          <target state="translated">camelize</target>
        </trans-unit>
        <trans-unit id="3ae58e97a249d94b9652c3b2ad61832fa87af34e" translate="yes" xml:space="preserve">
          <source>camelize (str) Stringpublic</source>
          <target state="translated">camelize (str)Stringpublic</target>
        </trans-unit>
        <trans-unit id="ac48e5f6fd279a998e1f9e931e232a995abfeadb" translate="yes" xml:space="preserve">
          <source>canCatalogEntriesByType</source>
          <target state="translated">canCatalogEntriesByType</target>
        </trans-unit>
        <trans-unit id="1f89c10df11df39c71717979addebde404926d7f" translate="yes" xml:space="preserve">
          <source>canCatalogEntriesByType (type) Booleanpublic</source>
          <target state="translated">canCatálogosPorTipo (tipo)Booleanpublic</target>
        </trans-unit>
        <trans-unit id="4fd0653c4f2aef3b19a3c145bbdc5f4740715a09" translate="yes" xml:space="preserve">
          <source>cancel</source>
          <target state="translated">cancel</target>
        </trans-unit>
        <trans-unit id="c5874a8bee179aa7e7bffd97620ccae9dda53245" translate="yes" xml:space="preserve">
          <source>cancel (timer) Booleanpublic</source>
          <target state="translated">cancelar (temporizador)Booleanpublic</target>
        </trans-unit>
        <trans-unit id="53fdf514eb90dc91df4d0c64e075cb794aafff39" translate="yes" xml:space="preserve">
          <source>capabilities</source>
          <target state="translated">capabilities</target>
        </trans-unit>
        <trans-unit id="5864f363616849248f9aea4c07beeecbb22f04e8" translate="yes" xml:space="preserve">
          <source>capabilities (managerApiVersion, options) Capabilitiespublic</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d01a341706c2a5c67a30eb227bba3d0fd7ace906" translate="yes" xml:space="preserve">
          <source>capitalize</source>
          <target state="translated">capitalize</target>
        </trans-unit>
        <trans-unit id="c3cb50ed3989efe79fce037334b197ea5bb0b3c0" translate="yes" xml:space="preserve">
          <source>capitalize (str) Stringpublic</source>
          <target state="translated">capitalizar (str)Stringpublic</target>
        </trans-unit>
        <trans-unit id="2e6e8971fcaed02d26828519fe88d68e1be59342" translate="yes" xml:space="preserve">
          <source>capture -- a &lt;code&gt;true&lt;/code&gt; value indicates that events of this type will be dispatched to the registered listener before being dispatched to any EventTarget beneath it in the DOM tree.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5c79943b361485a67783fd582b75f962a64beec" translate="yes" xml:space="preserve">
          <source>catalogEntriesByType</source>
          <target state="translated">catalogEntriesByType</target>
        </trans-unit>
        <trans-unit id="426db3601e3ef7da74b0e8b103bbb3fdced68c07" translate="yes" xml:space="preserve">
          <source>catalogEntriesByType (type) Arraypublic</source>
          <target state="translated">catalogoEntradasPorTipo (tipo)Arraypublic</target>
        </trans-unit>
        <trans-unit id="9ebad64e5d2b9542779537fce0354f34c099e7ff" translate="yes" xml:space="preserve">
          <source>catch</source>
          <target state="translated">catch</target>
        </trans-unit>
        <trans-unit id="a4c2dcd142b36dcf11f40036021925135444c80a" translate="yes" xml:space="preserve">
          <source>catch (callback) RSVP.Promisepublic</source>
          <target state="translated">catch (callback)RSVP.Promisepublic</target>
        </trans-unit>
        <trans-unit id="27b4526315402989025cfb9532b1f1b612668d96" translate="yes" xml:space="preserve">
          <source>catch (onRejection, label) Promise</source>
          <target state="translated">atrapar (en Rechazo,etiqueta)Promesa</target>
        </trans-unit>
        <trans-unit id="8b84755b7bcc34053a6aff026e3636fb19a94e99" translate="yes" xml:space="preserve">
          <source>catch (onRejection, label) Promisepublic</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7282a0ebbeec5ccc6d119a9cf8dbea2a264f0a8a" translate="yes" xml:space="preserve">
          <source>changedAttributes</source>
          <target state="translated">changedAttributes</target>
        </trans-unit>
        <trans-unit id="e99264b1e1e80d81bb2b815be9f74a773d382e57" translate="yes" xml:space="preserve">
          <source>changedAttributesObject</source>
          <target state="translated">changedAttributesObject</target>
        </trans-unit>
        <trans-unit id="21f0efd4a3f92bded0f935615ee49c74fb71573f" translate="yes" xml:space="preserve">
          <source>check to see whether the data returned from a &lt;code&gt;model&lt;/code&gt; hook is an object, array, or JavaScript Primitive. For example, if the result of &lt;code&gt;model&lt;/code&gt; is an array, using &lt;code&gt;{{@model}}&lt;/code&gt; in the template won't work. You will need to iterate over the array with an &lt;a href=&quot;https://api.emberjs.com/ember/release/classes/Ember.Templates.helpers/methods#each&quot;&gt;&lt;code&gt;{{#each}}&lt;/code&gt;&lt;/a&gt; helper. If the result is an object, you need to access the individual attribute like &lt;code&gt;{{@model.title}}&lt;/code&gt; to render it in the template.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d56fe29f05ee6f3bf8ea6f48b2fe37aeeac91abb" translate="yes" xml:space="preserve">
          <source>checkWaiters</source>
          <target state="translated">checkWaiters</target>
        </trans-unit>
        <trans-unit id="8f5d309823bda99d7fa656518e974a27e93e2ede" translate="yes" xml:space="preserve">
          <source>checkWaiterspublic</source>
          <target state="translated">checkWaiterspublic</target>
        </trans-unit>
        <trans-unit id="e75ef57c23e828e781b50fff85c7074ccb8b6ab0" translate="yes" xml:space="preserve">
          <source>checking if an object is in a destroying state</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e93069c40111cd62dac2cd02cd71daffdb01cc0" translate="yes" xml:space="preserve">
          <source>child</source>
          <target state="translated">child</target>
        </trans-unit>
        <trans-unit id="282116eb9ca16814307abc188033ad4977eb61eb" translate="yes" xml:space="preserve">
          <source>childpublic</source>
          <target state="translated">childpublic</target>
        </trans-unit>
        <trans-unit id="8d767bf5b72373d12f0efd4406677e9ed076f592" translate="yes" xml:space="preserve">
          <source>class</source>
          <target state="translated">class</target>
        </trans-unit>
        <trans-unit id="ab83591327f673ec5c958d0624ec91f14ce5ce55" translate="yes" xml:space="preserve">
          <source>classNameBindings</source>
          <target state="translated">classNameBindings</target>
        </trans-unit>
        <trans-unit id="a291acb5870eb60969685f94355f38e0b8c561da" translate="yes" xml:space="preserve">
          <source>classNameBindingspublic</source>
          <target state="translated">classNameBindingspublic</target>
        </trans-unit>
        <trans-unit id="959178bb27b91e04c55e8189938100590b3df47a" translate="yes" xml:space="preserve">
          <source>classNames</source>
          <target state="translated">classNames</target>
        </trans-unit>
        <trans-unit id="18104eb9c84f4cd33b05f14201eea48d710b6aa5" translate="yes" xml:space="preserve">
          <source>classNamespublic</source>
          <target state="translated">classNamespublic</target>
        </trans-unit>
        <trans-unit id="6144cd5e38eb39e0abdec68c3842d9cab9a289d6" translate="yes" xml:space="preserve">
          <source>classify</source>
          <target state="translated">classify</target>
        </trans-unit>
        <trans-unit id="3a2d6de82edfcd3a3ffa0e94a6fd9684892d35d7" translate="yes" xml:space="preserve">
          <source>classify (str) Stringpublic</source>
          <target state="translated">clasificar (str)Stringpublic</target>
        </trans-unit>
        <trans-unit id="168cbb2ea52b9e34d271accecfa7d7951e948a99" translate="yes" xml:space="preserve">
          <source>clear</source>
          <target state="translated">clear</target>
        </trans-unit>
        <trans-unit id="422b77e9bed4feb35a67e084aed468148d54ab80" translate="yes" xml:space="preserve">
          <source>clearArraypublic</source>
          <target state="translated">clearArraypublic</target>
        </trans-unit>
        <trans-unit id="6457067b09c3c63e34bd54d69c5093ceb1bcb80f" translate="yes" xml:space="preserve">
          <source>clearEmber.Arraypublic</source>
          <target state="translated">clearEmber.Arraypublic</target>
        </trans-unit>
        <trans-unit id="b93ec56608fb302fea7a8019d7c0e8e7239fc033" translate="yes" xml:space="preserve">
          <source>click</source>
          <target state="translated">click</target>
        </trans-unit>
        <trans-unit id="283029d5aa715391be8ed534dd32e74d1452fb0d" translate="yes" xml:space="preserve">
          <source>click (selector, context) RSVP.Promise&amp;lt;undefined&amp;gt;public</source>
          <target state="translated">haga clic en (selector, contexto) RSVP.Promise &amp;lt;undefined&amp;gt; public</target>
        </trans-unit>
        <trans-unit id="f04a55ef391242bae77333cdc782842d1d78bc15" translate="yes" xml:space="preserve">
          <source>coalesceFindRequests</source>
          <target state="translated">coalesceFindRequests</target>
        </trans-unit>
        <trans-unit id="45b6370f3c3ef802f93ca17fb244254e2b069f9d" translate="yes" xml:space="preserve">
          <source>coalesceFindRequests [OPTIONAL]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="596f93abcb9ddaf8a274aaa631c7c4f5725d65db" translate="yes" xml:space="preserve">
          <source>coalesceFindRequests [OPTIONAL]public</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3d0a8449e0722833f9377138f6a1188f143e76d" translate="yes" xml:space="preserve">
          <source>collect</source>
          <target state="translated">collect</target>
        </trans-unit>
        <trans-unit id="29c8b1ce0666345c5838b45b814fb16fd47efba9" translate="yes" xml:space="preserve">
          <source>collect (dependentKey) ComputedPropertypublic</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8ddfea0ff1fa70fe6a075a2b1d638e5967dbfcd" translate="yes" xml:space="preserve">
          <source>collect (dependentKey) Ember.ComputedPropertypublic</source>
          <target state="translated">recoger (dependentKey)Ember.ComputedPropertypublic</target>
        </trans-unit>
        <trans-unit id="ecb36d808c1f1ac5b532962f560b9b979283a93e" translate="yes" xml:space="preserve">
          <source>columnsForType</source>
          <target state="translated">columnsForType</target>
        </trans-unit>
        <trans-unit id="3b663d0b0b946dcf9674e3a67fc86f9a1d751e64" translate="yes" xml:space="preserve">
          <source>columnsForTypeArraypublic</source>
          <target state="translated">columnsForTypeArraypublic</target>
        </trans-unit>
        <trans-unit id="4f44e2cffa8f7b516c9e499285c951d788431a28" translate="yes" xml:space="preserve">
          <source>compact</source>
          <target state="translated">compact</target>
        </trans-unit>
        <trans-unit id="eb1de8e176a435635b8a6977790ccfdc210513aa" translate="yes" xml:space="preserve">
          <source>compactArraypublic</source>
          <target state="translated">compactArraypublic</target>
        </trans-unit>
        <trans-unit id="b64ca250f492e3f0444ad32b68be5f60a163bede" translate="yes" xml:space="preserve">
          <source>compare</source>
          <target state="translated">compare</target>
        </trans-unit>
        <trans-unit id="907497e8f4d50fb9261fdd7552ef6a6bbdb8345a" translate="yes" xml:space="preserve">
          <source>compare (v, w) Numberpublic</source>
          <target state="translated">comparar (v,w)Numberpublic</target>
        </trans-unit>
        <trans-unit id="335c4c1e2f05b5297a56769d8de75ad9c4874cd3" translate="yes" xml:space="preserve">
          <source>component</source>
          <target state="translated">component</target>
        </trans-unit>
        <trans-unit id="9c41e8f7355be66f7d1593c16d9ada66c344f3ac" translate="yes" xml:space="preserve">
          <source>componentpublic</source>
          <target state="translated">componentpublic</target>
        </trans-unit>
        <trans-unit id="24989d8ee41c1575924630844ad094b55e6b1445" translate="yes" xml:space="preserve">
          <source>compute</source>
          <target state="translated">compute</target>
        </trans-unit>
        <trans-unit id="f858e06b2e1b75f5bfd684c81933a956bcc91ad6" translate="yes" xml:space="preserve">
          <source>compute (params, hash) public</source>
          <target state="translated">computar (params,hash)público</target>
        </trans-unit>
        <trans-unit id="d0bc9457568848828a2406f0fa63c68fc290cc10" translate="yes" xml:space="preserve">
          <source>computeArgs</source>
          <target state="translated">computeArgs</target>
        </trans-unit>
        <trans-unit id="4ebaef57b71a3ae20e28c13e1420fb5ed634b545" translate="yes" xml:space="preserve">
          <source>computed</source>
          <target state="translated">computed</target>
        </trans-unit>
        <trans-unit id="34342c6e3996bac15f2205b46736d6a0309e61f6" translate="yes" xml:space="preserve">
          <source>computed (dependentKeys*, func) ComputedDecoratorpublic</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6e42f42c574d2f46dd45b59c83826204bce7341" translate="yes" xml:space="preserve">
          <source>computed property which converts to boolean the original value for property</source>
          <target state="translated">propiedad computarizada que convierte en booleano el valor original de la propiedad</target>
        </trans-unit>
        <trans-unit id="58c9a1cb971781c311ef5b37294661f04e6e050f" translate="yes" xml:space="preserve">
          <source>computed property which creates a one way computed property to the original value for property.</source>
          <target state="translated">propiedad computarizada que crea una propiedad computarizada unidireccional al valor original de la propiedad.</target>
        </trans-unit>
        <trans-unit id="b40143bdbfe9dcc8b3ec32fa1d11bfbcdd9786e1" translate="yes" xml:space="preserve">
          <source>computed property which creates an alias to the original value for property.</source>
          <target state="translated">propiedad computarizada que crea un alias al valor original de la propiedad.</target>
        </trans-unit>
        <trans-unit id="86157947757d69cba70213445f34ab32fadaa455" translate="yes" xml:space="preserve">
          <source>computed property which creates an alias with a deprecation to the original value for property.</source>
          <target state="translated">propiedad computarizada que crea un alias con una depreciación al valor original de la propiedad.</target>
        </trans-unit>
        <trans-unit id="808f6f2ecab089bf091125f82663355bbe169361" translate="yes" xml:space="preserve">
          <source>computed property which maps values of all passed in properties to an array.</source>
          <target state="translated">propiedad computarizada que mapea los valores de todas las propiedades pasadas a una matriz.</target>
        </trans-unit>
        <trans-unit id="5c3dc2fef83546c253d5c6ec6f60e357f1b6de78" translate="yes" xml:space="preserve">
          <source>computed property which match the original value for property against a given RegExp</source>
          <target state="translated">propiedad computarizada que coinciden con el valor original de la propiedad contra un determinado RegExp</target>
        </trans-unit>
        <trans-unit id="5e7c63da9cbbc33366040de63ceba17d47f511ae" translate="yes" xml:space="preserve">
          <source>computed property which negate the original value for property</source>
          <target state="translated">propiedad computarizada que niega el valor original de la propiedad</target>
        </trans-unit>
        <trans-unit id="c7f6bcef30146325b4524e3f91445f2770cbec96" translate="yes" xml:space="preserve">
          <source>computed property which performs a logical `and` on the values of all the original values for properties.</source>
          <target state="translated">propiedad calculada que realiza una lógica &quot;y&quot; sobre los valores de todos los valores originales de las propiedades.</target>
        </trans-unit>
        <trans-unit id="a467c976f1f777334ceadb48e80bc12e14a1104d" translate="yes" xml:space="preserve">
          <source>computed property which performs a logical `or` on the values of all the original values for properties.</source>
          <target state="translated">propiedad calculada que realiza un &quot;o&quot; lógico sobre los valores de todos los valores originales de las propiedades.</target>
        </trans-unit>
        <trans-unit id="184bfdeecb2c62af67f0f9604302f4594d2c6604" translate="yes" xml:space="preserve">
          <source>computed property which returns inverse of the original value for property</source>
          <target state="translated">propiedad computarizada que retorna invertida del valor original de la propiedad</target>
        </trans-unit>
        <trans-unit id="1547efcb094f0887b3f56e55ef716ea723ad322f" translate="yes" xml:space="preserve">
          <source>computed property which returns true if original value for property is not empty.</source>
          <target state="translated">propiedad computarizada que retorna verdadera si el valor original de la propiedad no está vacío.</target>
        </trans-unit>
        <trans-unit id="622a1f7541d337087a6c8a8783d911eab1e57f6f" translate="yes" xml:space="preserve">
          <source>computed property which returns true if original value for property is null or undefined.</source>
          <target state="translated">propiedad computarizada que retorna verdadera si el valor original de la propiedad es nulo o indefinido.</target>
        </trans-unit>
        <trans-unit id="ba8d64d4759366a84af6f430098a600896e13e77" translate="yes" xml:space="preserve">
          <source>computed property which returns true if the original value for property is equal to the given value.</source>
          <target state="translated">propiedad computarizada que retorna verdadera si el valor original de la propiedad es igual al valor dado.</target>
        </trans-unit>
        <trans-unit id="7511442afb774dd4a64f206f5271ac4355666877" translate="yes" xml:space="preserve">
          <source>computed property which returns true if the original value for property is greater or equal then given value.</source>
          <target state="translated">propiedad computarizada que retorna verdadera si el valor original de la propiedad es mayor o igual al valor dado.</target>
        </trans-unit>
        <trans-unit id="445cdb6d347a7a4fb1bb2f49666b17e12f303ddd" translate="yes" xml:space="preserve">
          <source>computed property which returns true if the original value for property is greater than given value.</source>
          <target state="translated">propiedad computarizada que retorna verdadera si el valor original de la propiedad es mayor que el valor dado.</target>
        </trans-unit>
        <trans-unit id="47d193330a8250d4b0594033d685a3e85a6b77c8" translate="yes" xml:space="preserve">
          <source>computed property which returns true if the original value for property is less or equal than given value.</source>
          <target state="translated">propiedad computarizada que retorna verdadera si el valor original de la propiedad es menor o igual que el valor dado.</target>
        </trans-unit>
        <trans-unit id="a2bd8c80f26a74d5a0159dcd4f4e6eecfed93d62" translate="yes" xml:space="preserve">
          <source>computed property which returns true if the original value for property is less then given value.</source>
          <target state="translated">propiedad computarizada que se vuelve verdadera si el valor original de la propiedad es menor que el valor dado.</target>
        </trans-unit>
        <trans-unit id="84160a6d8c3718bdc143398a9be6806ef900cd10" translate="yes" xml:space="preserve">
          <source>computed property which returns true if the value of the dependent property is null, an empty string, empty array, or empty function and false if the underlying value is not empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9af1b7977e282f9c06def4b48a507bcc1f0ad39" translate="yes" xml:space="preserve">
          <source>computes a new array with all the duplicated elements from the dependent arrays</source>
          <target state="translated">calcula un nuevo conjunto con todos los elementos duplicados de los conjuntos dependientes</target>
        </trans-unit>
        <trans-unit id="9a2ecb3350ee199ffd154030ca8ebaf2886b6357" translate="yes" xml:space="preserve">
          <source>computes a new array with all the items from the first dependent array that are not in the second dependent array</source>
          <target state="translated">calcula una nueva matriz con todos los elementos de la primera matriz dependiente que no están en la segunda matriz dependiente</target>
        </trans-unit>
        <trans-unit id="d4259c725d4adc37b159de115ef4182d8581fb04" translate="yes" xml:space="preserve">
          <source>computes a new array with all the unique elements from one or more dependent arrays.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0948ea9333e01b845e359245daf14de379c1ffde" translate="yes" xml:space="preserve">
          <source>computes a new array with all the unique elements from the dependent array</source>
          <target state="translated">calcula un nuevo conjunto con todos los elementos únicos del conjunto dependiente</target>
        </trans-unit>
        <trans-unit id="627e277796c13c3c37222cb780b5f847a4fbac9b" translate="yes" xml:space="preserve">
          <source>computes a new sorted array based on the sort property array or callback function</source>
          <target state="translated">calcula un nuevo arreglo clasificado basado en el arreglo de propiedades de clasificación o la función de devolución de llamada</target>
        </trans-unit>
        <trans-unit id="813b13914207de7713ea6cb355a9a75c1364f8fa" translate="yes" xml:space="preserve">
          <source>computes the largest value in the dependentKey's array</source>
          <target state="translated">calcula el mayor valor de la matriz de la llave dependiente</target>
        </trans-unit>
        <trans-unit id="0a6b049f7bab1cd6cdd3244b73b6970111915ae3" translate="yes" xml:space="preserve">
          <source>computes the smallest value in the dependentKey's array</source>
          <target state="translated">calcula el valor más pequeño de la matriz de la llave dependiente</target>
        </trans-unit>
        <trans-unit id="a41b73f276d1c28970cc4736ee15f66745885cc1" translate="yes" xml:space="preserve">
          <source>computes the sum of all values in the dependentKey's array</source>
          <target state="translated">calcula la suma de todos los valores de la matriz de la llave dependiente</target>
        </trans-unit>
        <trans-unit id="49ba358c3272c2db40fc6ab2c103669678628b68" translate="yes" xml:space="preserve">
          <source>concat</source>
          <target state="translated">concat</target>
        </trans-unit>
        <trans-unit id="3afe7bd40df2594c67ac1b659c92bf60f9c300e4" translate="yes" xml:space="preserve">
          <source>concatenatedProperties</source>
          <target state="translated">concatenatedProperties</target>
        </trans-unit>
        <trans-unit id="d37f31e41a6b9ee5aff773c47cb0c59e4383606a" translate="yes" xml:space="preserve">
          <source>concatenatedPropertiespublic</source>
          <target state="translated">concatenatedPropertiespublic</target>
        </trans-unit>
        <trans-unit id="e7685b51d3e267bc87885d1dbe31ead01bb07fd6" translate="yes" xml:space="preserve">
          <source>concatpublic</source>
          <target state="translated">concatpublic</target>
        </trans-unit>
        <trans-unit id="afad9a69767e7c24ecda5af9187202e1b4b070b2" translate="yes" xml:space="preserve">
          <source>condition</source>
          <target state="translated">condition</target>
        </trans-unit>
        <trans-unit id="2cc7fd40fbdedf3ea94e5b2ae8dc6e773156ce93" translate="yes" xml:space="preserve">
          <source>containerDebugAdapter</source>
          <target state="translated">containerDebugAdapter</target>
        </trans-unit>
        <trans-unit id="f1bed8bce4c7b7655af60424a1f8be96f3b2c304" translate="yes" xml:space="preserve">
          <source>containerDebugAdapterpublic</source>
          <target state="translated">containerDebugAdapterpublic</target>
        </trans-unit>
        <trans-unit id="040f06fd774092478d450774f5ba30c5da78acc8" translate="yes" xml:space="preserve">
          <source>content</source>
          <target state="translated">content</target>
        </trans-unit>
        <trans-unit id="5ff3ac0133f3116fe0f259291de68733d3a58942" translate="yes" xml:space="preserve">
          <source>contentpublic</source>
          <target state="translated">contentpublic</target>
        </trans-unit>
        <trans-unit id="ec2727b3b71f07635f726026bef44352ec89e452" translate="yes" xml:space="preserve">
          <source>context</source>
          <target state="translated">context</target>
        </trans-unit>
        <trans-unit id="f79a2222c311aaf3748e792896911891d1ff255b" translate="yes" xml:space="preserve">
          <source>controller</source>
          <target state="translated">controller</target>
        </trans-unit>
        <trans-unit id="553cbfe154c4721e6c8540c1b5727dcc35d8ca25" translate="yes" xml:space="preserve">
          <source>controller (name) Ember.InjectedPropertypublic</source>
          <target state="translated">controlador (nombre)Ember.InjectedPropertypublic</target>
        </trans-unit>
        <trans-unit id="dca08ede44a74b0ac77962ada2f6abaa086230cd" translate="yes" xml:space="preserve">
          <source>controllerFor</source>
          <target state="translated">controllerFor</target>
        </trans-unit>
        <trans-unit id="8a81d0e8cfff6dbeb5ce0517256937c8c341cd60" translate="yes" xml:space="preserve">
          <source>controllerFor (name) Controllerpublic</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2ee21623fcf49a5965b36f28afbaafa7b2c5528" translate="yes" xml:space="preserve">
          <source>controllerFor (name) Ember.Controllerpublic</source>
          <target state="translated">controladorPara (nombre)Ember.Controllerpublic</target>
        </trans-unit>
        <trans-unit id="0ef35403014c2bed4973249a9ffd4b33f88c82e6" translate="yes" xml:space="preserve">
          <source>controllerName</source>
          <target state="translated">controllerName</target>
        </trans-unit>
        <trans-unit id="737eb0084321d4b74002fa712cabfa79dd493a50" translate="yes" xml:space="preserve">
          <source>controllerNamepublic</source>
          <target state="translated">controllerNamepublic</target>
        </trans-unit>
        <trans-unit id="7e3a34f749911a38680349ee8464286f1314aed8" translate="yes" xml:space="preserve">
          <source>controllerpublic</source>
          <target state="translated">controllerpublic</target>
        </trans-unit>
        <trans-unit id="f84e2e2dadd87384fb55f25886926b777e8378f1" translate="yes" xml:space="preserve">
          <source>copy</source>
          <target state="translated">copy</target>
        </trans-unit>
        <trans-unit id="06904193b39a1e2d718391162185a10d50ae8062" translate="yes" xml:space="preserve">
          <source>copy (obj, deep) Objectpublic</source>
          <target state="translated">copy (obj,deep)Objectpublic</target>
        </trans-unit>
        <trans-unit id="ac512f62f01e734210bbe801db1302aa4f5edc9c" translate="yes" xml:space="preserve">
          <source>copy (obj, deep) Objectpublicdeprecated</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee9f38e186ba06f57b7b74d7e626b94e13ce2556" translate="yes" xml:space="preserve">
          <source>count</source>
          <target state="translated">count</target>
        </trans-unit>
        <trans-unit id="8745fab404613f0fe6a71e61e8911c53fdc2ea2d" translate="yes" xml:space="preserve">
          <source>count of objects</source>
          <target state="translated">recuento de objetos</target>
        </trans-unit>
        <trans-unit id="9b7c68a918b17eb053809b198d7c9abfc142f30a" translate="yes" xml:space="preserve">
          <source>create</source>
          <target state="translated">create</target>
        </trans-unit>
        <trans-unit id="c2b941a6871ffd494a47b28de37e1f5c7d645fcb" translate="yes" xml:space="preserve">
          <source>create (arguments) public</source>
          <target state="translated">crear (argumentos)públicos</target>
        </trans-unit>
        <trans-unit id="b206ba6f1a343224e901ebcc04cc17d5be2410ba" translate="yes" xml:space="preserve">
          <source>createRecord</source>
          <target state="translated">createRecord</target>
        </trans-unit>
        <trans-unit id="9c9c01af37c49912b9fc147f1e08761c953e4751" translate="yes" xml:space="preserve">
          <source>createRecord (modelName, inputProperties) DS.Model</source>
          <target state="translated">createRecord (modelName,inputProperties)DS.Model</target>
        </trans-unit>
        <trans-unit id="c8f7da06e710092775ececff2c4af9bd50d0e582" translate="yes" xml:space="preserve">
          <source>createRecord (modelName, inputProperties) Model</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adcb539e64268be6fcf04c32fa536db2b43cbbc8" translate="yes" xml:space="preserve">
          <source>createRecord (store, schema, snapshot) Promisepublic</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e68848c552df4e350b078eab8a1bff415fcc7d16" translate="yes" xml:space="preserve">
          <source>createRecord (store, type, snapshot) Promise</source>
          <target state="translated">createRecord (almacenar,escribir,instantánea)Promesa</target>
        </trans-unit>
        <trans-unit id="e008cffd57f6d2e258c663784ee43d7faad06015" translate="yes" xml:space="preserve">
          <source>current-when</source>
          <target state="translated">current-when</target>
        </trans-unit>
        <trans-unit id="b6b264f12aab03a2647c8487c95df5c6c2e57c3c" translate="yes" xml:space="preserve">
          <source>current-whenpublic</source>
          <target state="translated">current-whenpublic</target>
        </trans-unit>
        <trans-unit id="3c5ac6e9c2e1fd0c98625dd469f874d33a3178cd" translate="yes" xml:space="preserve">
          <source>currentPath</source>
          <target state="translated">currentPath</target>
        </trans-unit>
        <trans-unit id="5e8278808494160d52d5df6889134f639f18aa2e" translate="yes" xml:space="preserve">
          <source>currentPathObjectpublic</source>
          <target state="translated">currentPathObjectpublic</target>
        </trans-unit>
        <trans-unit id="f28633e032abfa9a862b7d14478d159c0e2fbe36" translate="yes" xml:space="preserve">
          <source>currentRoute</source>
          <target state="translated">currentRoute</target>
        </trans-unit>
        <trans-unit id="f3d41d45c11e46d35bd61c0e8d512b66b8709e5d" translate="yes" xml:space="preserve">
          <source>currentRouteName</source>
          <target state="translated">currentRouteName</target>
        </trans-unit>
        <trans-unit id="c1607ab0a65d5d4e455dd0b7eca1484ba8d3ab59" translate="yes" xml:space="preserve">
          <source>currentRouteNameObjectpublic</source>
          <target state="translated">currentRouteNameObjectpublic</target>
        </trans-unit>
        <trans-unit id="9f1e020554e9235c12768f94aa4f2173f11ae256" translate="yes" xml:space="preserve">
          <source>currentRouteNamepublic</source>
          <target state="translated">currentRouteNamepublic</target>
        </trans-unit>
        <trans-unit id="b2529267bbec9ca9d65373b9e9baa3ae1e4934d3" translate="yes" xml:space="preserve">
          <source>currentRoutepublic</source>
          <target state="translated">currentRoutepublic</target>
        </trans-unit>
        <trans-unit id="4193249c10fe1de350364ca1bdd5b15c8da9675e" translate="yes" xml:space="preserve">
          <source>currentURL</source>
          <target state="translated">currentURL</target>
        </trans-unit>
        <trans-unit id="6204494bb8388e6818bc63a7f1b9ee3b2e93cac7" translate="yes" xml:space="preserve">
          <source>currentURLObjectpublic</source>
          <target state="translated">currentURLObjectpublic</target>
        </trans-unit>
        <trans-unit id="58be6ba07e4ed32f03626e8fe786b653bbd3c111" translate="yes" xml:space="preserve">
          <source>currentURLpublic</source>
          <target state="translated">currentURLpublic</target>
        </trans-unit>
        <trans-unit id="658756b0e6a02e17a05c52cda1ef53f113d23fd4" translate="yes" xml:space="preserve">
          <source>currentWhen</source>
          <target state="translated">currentWhen</target>
        </trans-unit>
        <trans-unit id="4f9bbafaa8e3165c0de1de863642af4bbeb18242" translate="yes" xml:space="preserve">
          <source>currentWhenpublic</source>
          <target state="translated">currentWhenpublic</target>
        </trans-unit>
        <trans-unit id="c3ee006c843ada928264ba3c290a2f1e1e4f18db" translate="yes" xml:space="preserve">
          <source>customEvents</source>
          <target state="translated">customEvents</target>
        </trans-unit>
        <trans-unit id="3ba4dd687c9c3402411999903a5373e746fd22d6" translate="yes" xml:space="preserve">
          <source>customEventspublic</source>
          <target state="translated">customEventspublic</target>
        </trans-unit>
        <trans-unit id="1d490eeed9e75872584ad01a482c58d9e5e55588" translate="yes" xml:space="preserve">
          <source>dasherize</source>
          <target state="translated">dasherize</target>
        </trans-unit>
        <trans-unit id="05b4ad38df03bf36f37cb5bbbe75c6aed8cf7f80" translate="yes" xml:space="preserve">
          <source>dasherize (str) Stringpublic</source>
          <target state="translated">dasherize (str)Stringpublic</target>
        </trans-unit>
        <trans-unit id="a17c9aaa61e80a1bf71d0d850af4e5baa9800bbd" translate="yes" xml:space="preserve">
          <source>data</source>
          <target state="translated">data</target>
        </trans-unit>
        <trans-unit id="516c763184e0623347208f8a49d1570f6899eed0" translate="yes" xml:space="preserve">
          <source>dataForRequest</source>
          <target state="translated">dataForRequest</target>
        </trans-unit>
        <trans-unit id="44fda4fc994d261461cf648773d7e834935d1a61" translate="yes" xml:space="preserve">
          <source>dataForRequest (params) Objectpublic</source>
          <target state="translated">dataForRequest (params)Objectpublic</target>
        </trans-unit>
        <trans-unit id="242a2aa098f8086fbfa03d107833369053c82835" translate="yes" xml:space="preserve">
          <source>datapublic</source>
          <target state="translated">datapublic</target>
        </trans-unit>
        <trans-unit id="e927d0677c77241b707442314346326278051dd6" translate="yes" xml:space="preserve">
          <source>date</source>
          <target state="translated">date</target>
        </trans-unit>
        <trans-unit id="5d310091f52b45f4f934e07e2dcd85dc77eee56a" translate="yes" xml:space="preserve">
          <source>deactivate</source>
          <target state="translated">deactivate</target>
        </trans-unit>
        <trans-unit id="36a1df2d144268291617ca1ae07c980d77045067" translate="yes" xml:space="preserve">
          <source>deactivate (transition) public</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1798b3a44bb909a0ecf2d77f04751764efb56eef" translate="yes" xml:space="preserve">
          <source>deactivatepublic</source>
          <target state="translated">deactivatepublic</target>
        </trans-unit>
        <trans-unit id="e8bc042e894b57e385c141e975f8f8f605b63b87" translate="yes" xml:space="preserve">
          <source>debounce</source>
          <target state="translated">debounce</target>
        </trans-unit>
        <trans-unit id="e050e1f715538c84361cffcec6f4993d41ed6a76" translate="yes" xml:space="preserve">
          <source>debounce (target, method, args*, wait, immediate) Arraypublic</source>
          <target state="translated">Debounce (target,method,args*,wait,immediate)Arraypublic</target>
        </trans-unit>
        <trans-unit id="32faaecac742100f7753f0c1d0aa0add01b4046b" translate="yes" xml:space="preserve">
          <source>debug</source>
          <target state="translated">debug</target>
        </trans-unit>
        <trans-unit id="0c50b6b78e9a7583780cc8c2661a7f20e47273f5" translate="yes" xml:space="preserve">
          <source>debug (message) public</source>
          <target state="translated">depurar (mensaje)público</target>
        </trans-unit>
        <trans-unit id="05a528fdcc588fc97241e06c21a26b26092a45d5" translate="yes" xml:space="preserve">
          <source>debugAbortStack</source>
          <target state="translated">debugAbortStack</target>
        </trans-unit>
        <trans-unit id="6bb0089d12c6683a32cd0e248610e6c9b70094a6" translate="yes" xml:space="preserve">
          <source>debugCreationStack</source>
          <target state="translated">debugCreationStack</target>
        </trans-unit>
        <trans-unit id="8fca499e84c745bff7a5ab5834eb2e7f4262256d" translate="yes" xml:space="preserve">
          <source>debugPreviousTransition</source>
          <target state="translated">debugPreviousTransition</target>
        </trans-unit>
        <trans-unit id="5fbd02245cf700ea94d638c8d76924ecca52d330" translate="yes" xml:space="preserve">
          <source>debugger</source>
          <target state="translated">debugger</target>
        </trans-unit>
        <trans-unit id="73d3172a526fe68aaca218260f3ae7f46402ed1c" translate="yes" xml:space="preserve">
          <source>debuggerpublic</source>
          <target state="translated">debuggerpublic</target>
        </trans-unit>
        <trans-unit id="da3dcfccf0d1019ebc1f076c4fca898413d24390" translate="yes" xml:space="preserve">
          <source>decamelize</source>
          <target state="translated">decamelize</target>
        </trans-unit>
        <trans-unit id="e896185adb3936208437a43c41495c0d7c931e6a" translate="yes" xml:space="preserve">
          <source>decamelize (str) Stringpublic</source>
          <target state="translated">decamelizar (str)Stringpublic</target>
        </trans-unit>
        <trans-unit id="cb8747153bde6524fb1a852e80cdd561013db583" translate="yes" xml:space="preserve">
          <source>decrement</source>
          <target state="translated">decrement</target>
        </trans-unit>
        <trans-unit id="ae6885061e34119caf142a7293f830f4d6f07052" translate="yes" xml:space="preserve">
          <source>decrementProperty</source>
          <target state="translated">decrementProperty</target>
        </trans-unit>
        <trans-unit id="1abec767ece1dca890d6578f4ad04350df2dbf33" translate="yes" xml:space="preserve">
          <source>decrementProperty (keyName, decrement) Numberpublic</source>
          <target state="translated">decrementoPropiedad (nombre clave,decremento)Número público</target>
        </trans-unit>
        <trans-unit id="3dde59ff3d79fc2322f4192f74c1d1af30d32cc6" translate="yes" xml:space="preserve">
          <source>deep</source>
          <target state="translated">deep</target>
        </trans-unit>
        <trans-unit id="728afd91533fd49f6e4788c36f003a18a2668a1d" translate="yes" xml:space="preserve">
          <source>default-async-observers</source>
          <target state="translated">default-async-observers</target>
        </trans-unit>
        <trans-unit id="710393cec09784fd9c2c06727325b1a24f63d115" translate="yes" xml:space="preserve">
          <source>defaultSerializer</source>
          <target state="translated">defaultSerializer</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
