<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="qt">
    <body>
      <group id="qt">
        <trans-unit id="bfe97fbbfa2f67de68a1677bd135815ab62fdc14" translate="yes" xml:space="preserve">
          <source>tabPosition : &lt;a href=&quot;qtabwidget#TabPosition-enum&quot;&gt;TabPosition&lt;/a&gt;</source>
          <target state="translated">tabPosition: &lt;a href=&quot;qtabwidget#TabPosition-enum&quot;&gt;TabPosition&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6f36ced2a77de5fc0e457be7802c67703d530951" translate="yes" xml:space="preserve">
          <source>tabPressed(</source>
          <target state="translated">tabPressed(</target>
        </trans-unit>
        <trans-unit id="3f713d32e19bbcd200e20f3488af9af9d3f2d62a" translate="yes" xml:space="preserve">
          <source>tabPressed(&lt;a href=&quot;qml-qt3d-input-keyevent&quot;&gt;KeyEvent&lt;/a&gt;</source>
          <target state="translated">tabPressed(&lt;a href=&quot;qml-qt3d-input-keyevent&quot;&gt;KeyEvent&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cb622262e2137c1555fc68717c7a7bd63278fe40" translate="yes" xml:space="preserve">
          <source>tabPressed(&lt;a href=&quot;qml-qtquick-keyevent&quot;&gt;KeyEvent&lt;/a&gt;</source>
          <target state="translated">tabPressed(&lt;a href=&quot;qml-qtquick-keyevent&quot;&gt;KeyEvent&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="041688d85b019aebf9dd8151c0d3ed48dc306bb6" translate="yes" xml:space="preserve">
          <source>tabShape</source>
          <target state="translated">tabShape</target>
        </trans-unit>
        <trans-unit id="70a60252f69003321ba94693e48b337a3a03d9ce" translate="yes" xml:space="preserve">
          <source>tabShape : &lt;a href=&quot;qtabwidget#TabShape-enum&quot;&gt;QTabWidget::TabShape&lt;/a&gt;</source>
          <target state="translated">tabShape: &lt;a href=&quot;qtabwidget#TabShape-enum&quot;&gt;QTabWidget :: TabShape&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7919e5f2a184b5043654fdc17bc16dbcf9244ed5" translate="yes" xml:space="preserve">
          <source>tabShape : &lt;a href=&quot;qtabwidget#TabShape-enum&quot;&gt;TabShape&lt;/a&gt;</source>
          <target state="translated">tabShape: &lt;a href=&quot;qtabwidget#TabShape-enum&quot;&gt;TabShape&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="13ce81e866a56fdd0926d583383b8dafbbc0a060" translate="yes" xml:space="preserve">
          <source>tabStopDistance</source>
          <target state="translated">tabStopDistance</target>
        </trans-unit>
        <trans-unit id="585be0219936d1fec89e18f0cc6282e6e9cc13bc" translate="yes" xml:space="preserve">
          <source>tabStopDistance : &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">tabStopDistance: &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a849f3568fc69220a0420173a2c1ff9a58fdc466" translate="yes" xml:space="preserve">
          <source>tabStopDistance : &lt;a href=&quot;qml-real&quot;&gt;real&lt;/a&gt;</source>
          <target state="translated">tabStopDistance: &lt;a href=&quot;qml-real&quot;&gt;real&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5c2ea439c61298ff0e72db35486be55a9e064857" translate="yes" xml:space="preserve">
          <source>tabStopDistance : &lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d65967b4aad55e0d8f87fbcfe2b9cb5b28dd7949" translate="yes" xml:space="preserve">
          <source>tabStops</source>
          <target state="translated">tabStops</target>
        </trans-unit>
        <trans-unit id="a1fba2cf975f9fbffdb6a4948b015f518c444251" translate="yes" xml:space="preserve">
          <source>tabType</source>
          <target state="translated">tabType</target>
        </trans-unit>
        <trans-unit id="aff38e118665408a84f0962ed361328eb2f4f4c7" translate="yes" xml:space="preserve">
          <source>tabWidth</source>
          <target state="translated">tabWidth</target>
        </trans-unit>
        <trans-unit id="c3ee137d4f22eb06ed1351d644f3674592c90836" translate="yes" xml:space="preserve">
          <source>table</source>
          <target state="translated">table</target>
        </trans-unit>
        <trans-unit id="c794f1be9a6c800fe7877a1ac76412156d73a3c1" translate="yes" xml:space="preserve">
          <source>table cell to this table cell.</source>
          <target state="translated">de la celda de la mesa a esta celda de la mesa.</target>
        </trans-unit>
        <trans-unit id="de82c770a0f6fff7471d7368fa543d7ca93e8c9c" translate="yes" xml:space="preserve">
          <source>table rows and columns.</source>
          <target state="translated">filas y columnas de la tabla.</target>
        </trans-unit>
        <trans-unit id="a7ac4337ab85db67a994ede305d1d1640c2891cf" translate="yes" xml:space="preserve">
          <source>table selection range.</source>
          <target state="translated">rango de selecci√≥n de la tabla.</target>
        </trans-unit>
        <trans-unit id="8ff51f0353458e5ba87261c6e82b3dd9a78931b9" translate="yes" xml:space="preserve">
          <source>tableData</source>
          <target state="translated">tableData</target>
        </trans-unit>
        <trans-unit id="d63a6972032e06e8e7ce2904f90046c61efb86a3" translate="yes" xml:space="preserve">
          <source>tableData : &lt;a href=&quot;qscxmltabledata&quot;&gt;QScxmlTableData&lt;/a&gt;*</source>
          <target state="translated">tableData: &lt;a href=&quot;qscxmltabledata&quot;&gt;QScxmlTableData&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="3e70608233f4131ec786b33e204cf8da82ead1ef" translate="yes" xml:space="preserve">
          <source>tableName</source>
          <target state="translated">tableName</target>
        </trans-unit>
        <trans-unit id="5befc22162009a4edc31f8e721af0d8b82bb42f1" translate="yes" xml:space="preserve">
          <source>tableType</source>
          <target state="translated">tableType</target>
        </trans-unit>
        <trans-unit id="63ffe5849e2064c117dcf7944e6af7ea46a40c9c" translate="yes" xml:space="preserve">
          <source>tablename</source>
          <target state="translated">tablename</target>
        </trans-unit>
        <trans-unit id="32ebadba97da8c826d3f60925382e591597d1d3c" translate="yes" xml:space="preserve">
          <source>tabletTracking : bool</source>
          <target state="translated">tabletTracking:bool</target>
        </trans-unit>
        <trans-unit id="72a26a3e0e42e0991a18a2080c2d2796dd97f964" translate="yes" xml:space="preserve">
          <source>tabs</source>
          <target state="translated">tabs</target>
        </trans-unit>
        <trans-unit id="f20fe5024837ed449c867bbda11d27942d8fdef4" translate="yes" xml:space="preserve">
          <source>tabsAlignment : &lt;a href=&quot;qml-int&quot;&gt;int&lt;/a&gt;</source>
          <target state="translated">tabsAlignment: &lt;a href=&quot;qml-int&quot;&gt;int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f23c02b7478ad1aaf7240c6166ff607d62ce264a" translate="yes" xml:space="preserve">
          <source>tabsClosable : bool</source>
          <target state="translated">tabsCerrado:bool</target>
        </trans-unit>
        <trans-unit id="8034e1d9e5430785d8a715d7fd540b47e466ab2f" translate="yes" xml:space="preserve">
          <source>tabsMovable : &lt;a href=&quot;qml-bool&quot;&gt;bool&lt;/a&gt;</source>
          <target state="translated">tabsMovable: &lt;a href=&quot;qml-bool&quot;&gt;bool&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="98bd923d0be19700cbc88ff4bdb2f898cb51cf65" translate="yes" xml:space="preserve">
          <source>tabsMovable : bool</source>
          <target state="translated">tabsMovable:bool</target>
        </trans-unit>
        <trans-unit id="51ea392ac6da7ae2eff27604f44b251a5280f979" translate="yes" xml:space="preserve">
          <source>tabsVisible : &lt;a href=&quot;qml-bool&quot;&gt;bool&lt;/a&gt;</source>
          <target state="translated">tabsVisible: &lt;a href=&quot;qml-bool&quot;&gt;bool&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="25d7d8d45aa506913db7927ccb15acb87ccdaaec" translate="yes" xml:space="preserve">
          <source>tabsize</source>
          <target state="translated">tabsize</target>
        </trans-unit>
        <trans-unit id="5e9b60f69165f32f8930843ca718e10fdee30c52" translate="yes" xml:space="preserve">
          <source>tag</source>
          <target state="translated">tag</target>
        </trans-unit>
        <trans-unit id="ce66d249e632c7150ba96bf0ea8d6466d43b6d03" translate="yes" xml:space="preserve">
          <source>tag : &lt;a href=&quot;qml-string&quot;&gt;string&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d50daa5a5a908df8da7222a91ba5ebd8b755e1ec" translate="yes" xml:space="preserve">
          <source>tag : const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;</source>
          <target state="translated">etiqueta: const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="29c3da78b17e94bdb4aa31f593f5aa9de43fa653" translate="yes" xml:space="preserve">
          <source>tag.</source>
          <target state="translated">tag.</target>
        </trans-unit>
        <trans-unit id="3316a1b6eaffa91f3632cd41f1bc887a4c46f171" translate="yes" xml:space="preserve">
          <source>tagFound()</source>
          <target state="translated">tagFound()</target>
        </trans-unit>
        <trans-unit id="527dc848f3ee3989b8d691b4649af383f1dc7067" translate="yes" xml:space="preserve">
          <source>tagName</source>
          <target state="translated">tagName</target>
        </trans-unit>
        <trans-unit id="7d8198d2111b217017596bad3b0e3ce2df3a8168" translate="yes" xml:space="preserve">
          <source>tagRemoved()</source>
          <target state="translated">tagRemoved()</target>
        </trans-unit>
        <trans-unit id="756b34e76d8b1fc238ecbae7b13f38a9d70632b4" translate="yes" xml:space="preserve">
          <source>tagfile</source>
          <target state="translated">tagfile</target>
        </trans-unit>
        <trans-unit id="f33b5f5ffb61e6451b3b32d1fb3f949cf619ab74" translate="yes" xml:space="preserve">
          <source>tagname</source>
          <target state="translated">tagname</target>
        </trans-unit>
        <trans-unit id="ce55aa1773de006525f336ee52d81015e922764a" translate="yes" xml:space="preserve">
          <source>take exclusive ownership of certain touch points, it is also possible to have multiple MultiPointTouchAreas active at the same time, each operating on a different set of touch points.</source>
          <target state="translated">tomar la propiedad exclusiva de ciertos puntos de contacto,tambi√©n es posible tener varias MultiPointTouchAreas activas al mismo tiempo,cada una operando en un conjunto diferente de puntos de contacto.</target>
        </trans-unit>
        <trans-unit id="a166526c4e7eac23da05f469ff0407c9060afee0" translate="yes" xml:space="preserve">
          <source>take ownership of</source>
          <target state="translated">tomar la propiedad de</target>
        </trans-unit>
        <trans-unit id="c18bb1318530308eceeb59e9994a16edd5a64089" translate="yes" xml:space="preserve">
          <source>take ownership of the &lt;a href=&quot;qudpsocket&quot;&gt;QUdpSocket&lt;/a&gt; object.</source>
          <target state="translated">tomar posesi&amp;oacute;n del objeto &lt;a href=&quot;qudpsocket&quot;&gt;QUdpSocket&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="190770e0e54d574b984cd922b92ebc32b0f6d32f" translate="yes" xml:space="preserve">
          <source>take ownership of the model unless it is the model's parent object because the model may be shared between many different views.</source>
          <target state="translated">se adue√±an del modelo a menos que sea el objeto padre del modelo,porque el modelo puede ser compartido por muchas opiniones diferentes.</target>
        </trans-unit>
        <trans-unit id="49321678158802105267750e81ae85c4da328edd" translate="yes" xml:space="preserve">
          <source>take ownership of the resolver. It's the callers responsibility to ensure that the resolver is valid during the entire life-time of the stream reader object, or until another resolver or &lt;code&gt;nullptr&lt;/code&gt; is set.</source>
          <target state="translated">tomar posesi&amp;oacute;n del resolutor. Es responsabilidad de las personas que llaman asegurarse de que el resolutor sea v&amp;aacute;lido durante toda la vida &amp;uacute;til del objeto del lector de flujo, o hasta que se establezca otro resolutor o &lt;code&gt;nullptr&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e3aa5728c6a6b56b6f7e2a12a16ec0a65416f427" translate="yes" xml:space="preserve">
          <source>take(</source>
          <target state="translated">take(</target>
        </trans-unit>
        <trans-unit id="be9030d6796634868085da1b2ec4c56ee88f8ea6" translate="yes" xml:space="preserve">
          <source>take(&lt;a href=&quot;qml-qtquick-item&quot;&gt;Item&lt;/a&gt;</source>
          <target state="translated">take(&lt;a href=&quot;qml-qtquick-item&quot;&gt;Item&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="05c410b33e7ae75d23618ede62ae1f86e35e4057" translate="yes" xml:space="preserve">
          <source>takeOwnership</source>
          <target state="translated">takeOwnership</target>
        </trans-unit>
        <trans-unit id="ad468e0387a94cec9c5a972dbc488609270cc482" translate="yes" xml:space="preserve">
          <source>take_first(variablename)</source>
          <target state="translated">take_first(variablename)</target>
        </trans-unit>
        <trans-unit id="03145e2829b2e26afb2b1c1dc0084baed3037e31" translate="yes" xml:space="preserve">
          <source>take_last(variablename)</source>
          <target state="translated">take_last(variablename)</target>
        </trans-unit>
        <trans-unit id="079da53b59f3e068072828c268b09d8a4c014b28" translate="yes" xml:space="preserve">
          <source>taken in.</source>
          <target state="translated">...que se ha acogido.</target>
        </trans-unit>
        <trans-unit id="60aed62f5f860e9462f5f3b545d65f9b3ebde0f2" translate="yes" xml:space="preserve">
          <source>takes a reference to the item, so that any modifications done to the item will appear in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7c10eac0936bde90b18eb01b32fec54157bca93" translate="yes" xml:space="preserve">
          <source>takes a reference to the item, so that any modifications done to the item will appear in the sequence which the iterators belong to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2046dc856262b1be1d02d0ad157b681e07fc8b7" translate="yes" xml:space="preserve">
          <source>takes a single argument, the resulted &lt;a href=&quot;qtcore-changes-qt6#qfuture&quot;&gt;QFuture&lt;/a&gt; will be filled with the signal's argument value. If the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e81c419e4200ba0d64f272adb9aa6a7983c68a93" translate="yes" xml:space="preserve">
          <source>takes multiple arguments, the resulted &lt;a href=&quot;qtcore-changes-qt6#qfuture&quot;&gt;QFuture&lt;/a&gt; is filled with std::tuple storing the values of signal's arguments. If the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d823789c5d88db5ed1d513e9a6dae53cae6c5ee1" translate="yes" xml:space="preserve">
          <source>takes no arguments, a &lt;a href=&quot;qtcore-changes-qt6#qfuture&quot;&gt;QFuture&lt;/a&gt;&amp;lt;void&amp;gt; is returned. If the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00595d74907911890c7bc39f00d30f3329a22848" translate="yes" xml:space="preserve">
          <source>takes ownership of the &lt;a href=&quot;qthread&quot;&gt;QThread&lt;/a&gt;. The thread does not begin executing until &lt;a href=&quot;qthread#start&quot;&gt;start&lt;/a&gt;() is called.</source>
          <target state="translated">toma posesi&amp;oacute;n de &lt;a href=&quot;qthread&quot;&gt;QThread&lt;/a&gt; . El hilo no comienza a ejecutarse hasta que se llama a &lt;a href=&quot;qthread#start&quot;&gt;start&lt;/a&gt; ().</target>
        </trans-unit>
        <trans-unit id="fed7ca36d80d43747bb98d98abdec167f49ee519" translate="yes" xml:space="preserve">
          <source>takes ownership of the QThread. The thread does not begin executing until &lt;a href=&quot;qthread#start&quot;&gt;start&lt;/a&gt;() is called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d16806e0530f650942ac8cfab877b38d88ef6562" translate="yes" xml:space="preserve">
          <source>takes ownership of the object.</source>
          <target state="translated">toma la propiedad del objeto.</target>
        </trans-unit>
        <trans-unit id="33d4170a535758b9a0b0bd1481c79ffa6c5aad32" translate="yes" xml:space="preserve">
          <source>takes that into account, so be cautious when overriding the size with a fixed size. A minimal size of 64x64 should always work.</source>
          <target state="translated">tiene eso en cuenta,as√≠ que ten cuidado al anular el tama√±o con un tama√±o fijo.Un tama√±o m√≠nimo de 64x64 deber√≠a funcionar siempre.</target>
        </trans-unit>
        <trans-unit id="65ebe412cbcdb6a3cd0a04ad13f9f938dc25637a" translate="yes" xml:space="preserve">
          <source>takes the device pixel ratio into account, meaning that it is already multiplied by the correct scale factor. When moving the window containing the &lt;a href=&quot;qquickframebufferobject&quot;&gt;QQuickFramebufferObject&lt;/a&gt; item to a screen with different settings, the FBO is automatically recreated and this function is invoked with the correct size.</source>
          <target state="translated">tiene en cuenta la proporci&amp;oacute;n de p&amp;iacute;xeles del dispositivo, lo que significa que ya est&amp;aacute; multiplicada por el factor de escala correcto. Al mover la ventana que contiene el elemento &lt;a href=&quot;qquickframebufferobject&quot;&gt;QQuickFramebufferObject&lt;/a&gt; a una pantalla con diferentes configuraciones, el FBO se recrea autom&amp;aacute;ticamente y esta funci&amp;oacute;n se invoca con el tama&amp;ntilde;o correcto.</target>
        </trans-unit>
        <trans-unit id="cc8a1220157ba36110a61bc3faa7b1ab87551a02" translate="yes" xml:space="preserve">
          <source>takes the four closest texels and bilinearly interpolates them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4654ba9f8e86e7a0ace8744780e0e24a24b6107" translate="yes" xml:space="preserve">
          <source>takes the result of this future as its argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35ca8cf12ff7ebe96d1bd7602a1968f756f4af33" translate="yes" xml:space="preserve">
          <source>tan</source>
          <target state="translated">tan</target>
        </trans-unit>
        <trans-unit id="104cd618c2f9eb378255e17bd33bdc23e652b4a4" translate="yes" xml:space="preserve">
          <source>tan(x)</source>
          <target state="translated">tan(x)</target>
        </trans-unit>
        <trans-unit id="35746d1f26303f05cda32ca6589672c37bf23b43" translate="yes" xml:space="preserve">
          <source>tangentAttribute : &lt;a href=&quot;qml-qt3d-core-attribute&quot;&gt;Attribute&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="650be6291deb6a9753e2adaa163474dece312cfb" translate="yes" xml:space="preserve">
          <source>tangentAttribute : &lt;a href=&quot;qml-qt3d-render-attribute&quot;&gt;Attribute&lt;/a&gt;</source>
          <target state="translated">tangentAttribute: &lt;a href=&quot;qml-qt3d-render-attribute&quot;&gt;Atributo&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b2c7633fd6f605f45ecdb04f1cbaf560adde2f72" translate="yes" xml:space="preserve">
          <source>tangentAttribute : &lt;a href=&quot;qt3drender-qattribute&quot;&gt;Qt3DRender::QAttribute&lt;/a&gt;* const</source>
          <target state="translated">tangentAttribute: &lt;a href=&quot;qt3drender-qattribute&quot;&gt;Qt3DRender :: QAttribute&lt;/a&gt; * const</target>
        </trans-unit>
        <trans-unit id="b1936704c22d48c07a77374012ecc4c36ba0c43d" translate="yes" xml:space="preserve">
          <source>tangentialPressure</source>
          <target state="translated">tangentialPressure</target>
        </trans-unit>
        <trans-unit id="160dac239a306eb6dfc8d958c89ea9e59df0c800" translate="yes" xml:space="preserve">
          <source>tanh(x)</source>
          <target state="translated">tanh(x)</target>
        </trans-unit>
        <trans-unit id="168c271113879c96011839893a24ba4bff54634c" translate="yes" xml:space="preserve">
          <source>tao_tuple</source>
          <target state="translated">tao_tuple</target>
        </trans-unit>
        <trans-unit id="ee9b5dccece6bd642a757f2f44077664169e5d14" translate="yes" xml:space="preserve">
          <source>tapCountChanged()</source>
          <target state="translated">tapCountChanged()</target>
        </trans-unit>
        <trans-unit id="5c6881b45f18ac833e44288e57eadd906cbe666e" translate="yes" xml:space="preserve">
          <source>tapDirection</source>
          <target state="translated">tapDirection</target>
        </trans-unit>
        <trans-unit id="4d3f4765f277b1d06e1545ab9f42867741170156" translate="yes" xml:space="preserve">
          <source>tapDirection : TapDirection</source>
          <target state="translated">TapDirection:TapDirection</target>
        </trans-unit>
        <trans-unit id="cdfe7a2214b1c4e945a7019df5b8e9e3182426ce" translate="yes" xml:space="preserve">
          <source>tapDirection : const &lt;a href=&quot;qtapreading#TapDirection-enum&quot;&gt;TapDirection&lt;/a&gt;</source>
          <target state="translated">tapDirection: const &lt;a href=&quot;qtapreading#TapDirection-enum&quot;&gt;TapDirection&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a6d313d2efc4a768c19c4f9151cc6aeeebd35555" translate="yes" xml:space="preserve">
          <source>tapped(</source>
          <target state="translated">tapped(</target>
        </trans-unit>
        <trans-unit id="2c6c819b21fb3a01c494eb60a2689277f3a61515" translate="yes" xml:space="preserve">
          <source>tapped(&lt;a href=&quot;qml-qtquick-eventpoint&quot;&gt;EventPoint&lt;/a&gt;</source>
          <target state="translated">tapped(&lt;a href=&quot;qml-qtquick-eventpoint&quot;&gt;EventPoint&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5521f93a6ddb1b11f62aadcbdbcb17cd26936e07" translate="yes" xml:space="preserve">
          <source>tapped(EventPoint</source>
          <target state="translated">tapped(EventPoint</target>
        </trans-unit>
        <trans-unit id="0e8a3ad980ec179856012b7eecf4327e99cd44cd" translate="yes" xml:space="preserve">
          <source>target</source>
          <target state="translated">target</target>
        </trans-unit>
        <trans-unit id="14241cf302df03823a5eec8acdaeb2821b666010" translate="yes" xml:space="preserve">
          <source>target : &lt;a href=&quot;qml-qt3d-core-transform&quot;&gt;Transform&lt;/a&gt;</source>
          <target state="translated">objetivo: &lt;a href=&quot;qml-qt3d-core-transform&quot;&gt;Transformar&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4a6a704122313ec98eab2826a48102d58dc8c01b" translate="yes" xml:space="preserve">
          <source>target : &lt;a href=&quot;qml-qt3d-render-geometryrenderer&quot;&gt;GeometryRenderer&lt;/a&gt;</source>
          <target state="translated">objetivo: &lt;a href=&quot;qml-qt3d-render-geometryrenderer&quot;&gt;GeometryRenderer&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1448420040a609bc47348d0a0a3b30355a6a8277" translate="yes" xml:space="preserve">
          <source>target : &lt;a href=&quot;qml-qt3d-render-rendertarget&quot;&gt;RenderTarget&lt;/a&gt;</source>
          <target state="translated">objetivo: &lt;a href=&quot;qml-qt3d-render-rendertarget&quot;&gt;RenderTarget&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fec70f280f7a7473b8adb3978db2855a18a65082" translate="yes" xml:space="preserve">
          <source>target : &lt;a href=&quot;qml-qtquick-item&quot;&gt;Item&lt;/a&gt;</source>
          <target state="translated">objetivo: &lt;a href=&quot;qml-qtquick-item&quot;&gt;art&amp;iacute;culo&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="638091827cecf642535b1cb7d4fce92a6fb826d4" translate="yes" xml:space="preserve">
          <source>target : &lt;a href=&quot;qml-qtquick-item&quot;&gt;QtQuick::Item&lt;/a&gt;</source>
          <target state="translated">objetivo: &lt;a href=&quot;qml-qtquick-item&quot;&gt;QtQuick :: Item&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="34d68262effc5efc6b49bb0193ebc83d95c37092" translate="yes" xml:space="preserve">
          <source>target : &lt;a href=&quot;qml-string&quot;&gt;string&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc13f67a7bcc6ab12e569e60e6ff45678e7172d6" translate="yes" xml:space="preserve">
          <source>target : &lt;a href=&quot;qml-var&quot;&gt;var&lt;/a&gt;</source>
          <target state="translated">objetivo: &lt;a href=&quot;qml-var&quot;&gt;var&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e74339aa33ccb97196e810ca6fdfe4f976ba6f2b" translate="yes" xml:space="preserve">
          <source>target : &lt;a href=&quot;qml-vector3d&quot;&gt;vector3d&lt;/a&gt;</source>
          <target state="translated">objetivo: &lt;a href=&quot;qml-vector3d&quot;&gt;vector3d&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d72b3e29dc732709d347d134a020333759fbd2b9" translate="yes" xml:space="preserve">
          <source>target : &lt;a href=&quot;qt3dcore-qtransform&quot;&gt;Qt3DCore::QTransform&lt;/a&gt;*</source>
          <target state="translated">objetivo: &lt;a href=&quot;qt3dcore-qtransform&quot;&gt;Qt3DCore :: QTransform&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="394956927ac7a2972860607eb383e02afd8659d8" translate="yes" xml:space="preserve">
          <source>target : &lt;a href=&quot;qt3drender-qgeometryrenderer&quot;&gt;Qt3DRender::QGeometryRenderer&lt;/a&gt;*</source>
          <target state="translated">destino: &lt;a href=&quot;qt3drender-qgeometryrenderer&quot;&gt;Qt3DRender :: QGeometryRenderer&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="11b873a0ff0f46db579da09dda0368ecc668df41" translate="yes" xml:space="preserve">
          <source>target : &lt;a href=&quot;qt3drender-qrendertarget&quot;&gt;Qt3DRender::QRenderTarget&lt;/a&gt;*</source>
          <target state="translated">destino: &lt;a href=&quot;qt3drender-qrendertarget&quot;&gt;Qt3DRender :: QRenderTarget&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="07ebe948e93f65e1a4050a2215ca3ff5447ac794" translate="yes" xml:space="preserve">
          <source>target : &lt;a href=&quot;qvector3d&quot;&gt;QVector3D&lt;/a&gt;</source>
          <target state="translated">objetivo: &lt;a href=&quot;qvector3d&quot;&gt;QVector3D&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bdbd44b0e016d002e9777979255e2dbe0072780d" translate="yes" xml:space="preserve">
          <source>target : Object</source>
          <target state="translated">Objetivo:Objeto</target>
        </trans-unit>
        <trans-unit id="8afd40a235494336ec24fe35111e2c8eceacea94" translate="yes" xml:space="preserve">
          <source>target : const &lt;a href=&quot;qt3drender-qabstracttexture#Target-enum&quot;&gt;Target&lt;/a&gt;</source>
          <target state="translated">objetivo: const &lt;a href=&quot;qt3drender-qabstracttexture#Target-enum&quot;&gt;Target&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="44d3dc76405343e478af46452c4bb71723378541" translate="yes" xml:space="preserve">
          <source>target : var</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21d9cdb9c52fd7ef95236ac91978c6f4b3339c69" translate="yes" xml:space="preserve">
          <source>targetItem : &lt;a href=&quot;qml-qtquick-item&quot;&gt;Item&lt;/a&gt;</source>
          <target state="translated">targetItem: &lt;a href=&quot;qml-qtquick-item&quot;&gt;Item&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fea2331e36f4856d954d22c7f7514fb2b9698687" translate="yes" xml:space="preserve">
          <source>targetName : &lt;a href=&quot;qml-string&quot;&gt;string&lt;/a&gt;</source>
          <target state="translated">targetName: &lt;a href=&quot;qml-string&quot;&gt;cadena&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fb6d374f82418b9f63a05a1b710353f337bd446b" translate="yes" xml:space="preserve">
          <source>targetName : &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;</source>
          <target state="translated">targetName: &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c5cc7688813825ae743ff1189ccc5927e3fad5b9" translate="yes" xml:space="preserve">
          <source>targetObject : &lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt;*</source>
          <target state="translated">targetObject: &lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="d2380969626c8e2532945ec5d6b33272a3a19594" translate="yes" xml:space="preserve">
          <source>targetOffset</source>
          <target state="translated">targetOffset</target>
        </trans-unit>
        <trans-unit id="989c40a33ff35a9ec61fa28daa6d0a9c362f9b0c" translate="yes" xml:space="preserve">
          <source>targetPositions</source>
          <target state="translated">targetPositions</target>
        </trans-unit>
        <trans-unit id="0c743f063716feab03708eb9f61d3da6dd4e3d1c" translate="yes" xml:space="preserve">
          <source>targetPositions : &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;float&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50f86e624016853967be84f74943404f27a55e3f" translate="yes" xml:space="preserve">
          <source>targetPositions : &lt;a href=&quot;qml-list&quot;&gt;list&lt;/a&gt;&amp;lt;&lt;a href=&quot;qml-real&quot;&gt;real&lt;/a&gt;&amp;gt;</source>
          <target state="translated">targetPositions: &lt;a href=&quot;qml-list&quot;&gt;lista&lt;/a&gt; &amp;lt; &lt;a href=&quot;qml-real&quot;&gt;real&lt;/a&gt; &amp;gt;</target>
        </trans-unit>
        <trans-unit id="a117bf28e20ccaafeee1ed40b5033261470c6bd8" translate="yes" xml:space="preserve">
          <source>targetPositions : &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;float&amp;gt;</source>
          <target state="translated">targetPositions: &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt; &amp;lt;float&amp;gt;</target>
        </trans-unit>
        <trans-unit id="60fd5ec378417511ace4b68c13fa13760ee389ff" translate="yes" xml:space="preserve">
          <source>targetRect</source>
          <target state="translated">targetRect</target>
        </trans-unit>
        <trans-unit id="11caf6161770304ba62eaf30aa21b1fbd8abf0e9" translate="yes" xml:space="preserve">
          <source>targetScaleMultiplier : &lt;a href=&quot;qml-real&quot;&gt;real&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5177b23e1d678cec79006d8bf55075d65d35b910" translate="yes" xml:space="preserve">
          <source>targetScreen</source>
          <target state="translated">targetScreen</target>
        </trans-unit>
        <trans-unit id="07668b41f45649c3205e72128ecbb27bf492f9fb" translate="yes" xml:space="preserve">
          <source>targetSize</source>
          <target state="translated">targetSize</target>
        </trans-unit>
        <trans-unit id="87194d700652d391e5319a3ff0338a63b232ec7e" translate="yes" xml:space="preserve">
          <source>targetState : &lt;a href=&quot;qabstractstate&quot;&gt;QAbstractState&lt;/a&gt;*</source>
          <target state="translated">targetState: &lt;a href=&quot;qabstractstate&quot;&gt;QAbstractState&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="23b2423863063b1fb80acfe2148a90be0ce753a7" translate="yes" xml:space="preserve">
          <source>targetState : &lt;a href=&quot;qml-qtqml-statemachine-qabstractstate&quot;&gt;QAbstractState&lt;/a&gt;</source>
          <target state="translated">targetState: &lt;a href=&quot;qml-qtqml-statemachine-qabstractstate&quot;&gt;QAbstractState&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="45bed826934157d026521778bc2b0c6caebbd100" translate="yes" xml:space="preserve">
          <source>targetStates : &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;&lt;a href=&quot;qabstractstate&quot;&gt;QAbstractState&lt;/a&gt;*&amp;gt;</source>
          <target state="translated">targetStates: &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; &amp;lt; &lt;a href=&quot;qabstractstate&quot;&gt;QAbstractState&lt;/a&gt; *&amp;gt;</target>
        </trans-unit>
        <trans-unit id="5ce404bb4be631a6086b7600b267abd14d239dfb" translate="yes" xml:space="preserve">
          <source>targetStates : &lt;a href=&quot;qml-list&quot;&gt;list&lt;/a&gt;&amp;lt;&lt;a href=&quot;qml-qtqml-statemachine-qabstractstate&quot;&gt;QAbstractState&lt;/a&gt;&amp;gt;</source>
          <target state="translated">targetStates: &lt;a href=&quot;qml-list&quot;&gt;lista&lt;/a&gt; &amp;lt; &lt;a href=&quot;qml-qtqml-statemachine-qabstractstate&quot;&gt;QAbstractState&lt;/a&gt; &amp;gt;</target>
        </trans-unit>
        <trans-unit id="bc814bad5b30a762867e802319bf18e948a160f1" translate="yes" xml:space="preserve">
          <source>targetThread</source>
          <target state="translated">targetThread</target>
        </trans-unit>
        <trans-unit id="209c348b61e3ad406cad33c3a5806925e2cd50a4" translate="yes" xml:space="preserve">
          <source>targetTransform</source>
          <target state="translated">targetTransform</target>
        </trans-unit>
        <trans-unit id="4d40a9e97f91ca3368a601c6462297dd5fdc3f6e" translate="yes" xml:space="preserve">
          <source>targetTransformAroundCursor : &lt;a href=&quot;qml-bool&quot;&gt;bool&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa6b188d3101e2a5e782c1f0af6fafca10c8ba53" translate="yes" xml:space="preserve">
          <source>targetType</source>
          <target state="translated">targetType</target>
        </trans-unit>
        <trans-unit id="1d629e7268d76f08200a7660c2edf3bf295b1f75" translate="yes" xml:space="preserve">
          <source>targetTypeId</source>
          <target state="translated">targetTypeId</target>
        </trans-unit>
        <trans-unit id="f86a469d0dd8e6d77752bb78fa9e2cd6952bf695" translate="yes" xml:space="preserve">
          <source>targetValue : Variant</source>
          <target state="translated">targetValue:Variante</target>
        </trans-unit>
        <trans-unit id="8ae6ae5b1e29e791f30bc32a7404eca5b4a6c516" translate="yes" xml:space="preserve">
          <source>targetVariation : &lt;a href=&quot;qml-real&quot;&gt;real&lt;/a&gt;</source>
          <target state="translated">targetVariation: &lt;a href=&quot;qml-real&quot;&gt;real&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c66496f88b5b16ba7f295d53a9528c698cc7cf6d" translate="yes" xml:space="preserve">
          <source>targetX : &lt;a href=&quot;qml-real&quot;&gt;real&lt;/a&gt;</source>
          <target state="translated">targetX: &lt;a href=&quot;qml-real&quot;&gt;real&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c16d88d2f32d0bbdf5377a549df01b2c5b388c51" translate="yes" xml:space="preserve">
          <source>targetY : &lt;a href=&quot;qml-real&quot;&gt;real&lt;/a&gt;</source>
          <target state="translated">targetY: &lt;a href=&quot;qml-real&quot;&gt;real&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c8c0c2ff7782c500f82a3abb92914fcf1fbf15ce" translate="yes" xml:space="preserve">
          <source>target_predeps</source>
          <target state="translated">target_predeps</target>
        </trans-unit>
        <trans-unit id="10c7238c7bc5ff147e27bc7d06b715e59acb1caa" translate="yes" xml:space="preserve">
          <source>targetexpr</source>
          <target state="translated">targetexpr</target>
        </trans-unit>
        <trans-unit id="4683e789c34cafab560170ca34013a773f2f9773" translate="yes" xml:space="preserve">
          <source>targets</source>
          <target state="translated">targets</target>
        </trans-unit>
        <trans-unit id="0a0102a0644cbb017ac2c679933c3df052fe8ba2" translate="yes" xml:space="preserve">
          <source>targets : &lt;a href=&quot;qml-list&quot;&gt;list&lt;/a&gt;&amp;lt;&lt;a href=&quot;qml-qtquick-item&quot;&gt;Item&lt;/a&gt;&amp;gt;</source>
          <target state="translated">objetivos: &lt;a href=&quot;qml-list&quot;&gt;lista&lt;/a&gt; &amp;lt; &lt;a href=&quot;qml-qtquick-item&quot;&gt;Elemento&lt;/a&gt; &amp;gt;</target>
        </trans-unit>
        <trans-unit id="4a403989e4c2e0e62092cb0deacab316328f84de" translate="yes" xml:space="preserve">
          <source>targets but</source>
          <target state="translated">objetivos pero</target>
        </trans-unit>
        <trans-unit id="7fbb727db4b2b6715b092505673cb5922a0d63a8" translate="yes" xml:space="preserve">
          <source>task</source>
          <target state="translated">task</target>
        </trans-unit>
        <trans-unit id="56041de721987ec6cd083b648e1407e203372aba" translate="yes" xml:space="preserve">
          <source>task menu. Optionally, you can reimplement the &lt;a href=&quot;qdesignertaskmenuextension#preferredEditAction&quot;&gt;preferredEditAction&lt;/a&gt;() function to set the action that is invoked when selecting your plugin and pressing &lt;b&gt;F2&lt;/b&gt;. The preferred edit action must be one of the actions returned by &lt;a href=&quot;qdesignertaskmenuextension#taskActions&quot;&gt;taskActions&lt;/a&gt;() and, if it's not defined, pressing the &lt;b&gt;F2&lt;/b&gt; key will simply be ignored.</source>
          <target state="translated">men&amp;uacute; de tareas. Opcionalmente, se puede reimplementar la &lt;a href=&quot;qdesignertaskmenuextension#preferredEditAction&quot;&gt;preferredEditAction&lt;/a&gt; () para establecer la acci&amp;oacute;n que se invoca cuando la selecci&amp;oacute;n de su plugin y presionando &lt;b&gt;F2&lt;/b&gt; . La acci&amp;oacute;n de edici&amp;oacute;n preferida debe ser una de las acciones devueltas por &lt;a href=&quot;qdesignertaskmenuextension#taskActions&quot;&gt;taskActions&lt;/a&gt; () y, si no est&amp;aacute; definida, simplemente se ignorar&amp;aacute; presionar la tecla &lt;b&gt;F2&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="7c3b3a3f9efbe65f9a9eda33ade477d64c6e42c2" translate="yes" xml:space="preserve">
          <source>tasks : &lt;a href=&quot;qml-qtwinextras-jumplistcategory&quot;&gt;JumpListCategory&lt;/a&gt;</source>
          <target state="translated">tareas: &lt;a href=&quot;qml-qtwinextras-jumplistcategory&quot;&gt;JumpListCategory&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fbce2c364a46f4c8162dfc1f0473ca824a2a2195" translate="yes" xml:space="preserve">
          <source>tb</source>
          <target state="translated">tb</target>
        </trans-unit>
        <trans-unit id="03e06c4b7a097e464b3b18a5314bb6b96855b6c4" translate="yes" xml:space="preserve">
          <source>teal</source>
          <target state="translated">teal</target>
        </trans-unit>
        <trans-unit id="83b9626c1a6906de8c7da7776d8ab47bf62a4d25" translate="yes" xml:space="preserve">
          <source>tearOffEnabled : bool</source>
          <target state="translated">tearOffEnabled:bool</target>
        </trans-unit>
        <trans-unit id="db97104db6868feea37288e94a748cca1f8da719" translate="yes" xml:space="preserve">
          <source>techniques : &lt;a href=&quot;qml-list&quot;&gt;list&lt;/a&gt;&amp;lt;&lt;a href=&quot;qml-qt3d-render-technique&quot;&gt;Technique&lt;/a&gt;&amp;gt;</source>
          <target state="translated">t&amp;eacute;cnicas: &lt;a href=&quot;qml-list&quot;&gt;lista&lt;/a&gt; &amp;lt; &lt;a href=&quot;qml-qt3d-render-technique&quot;&gt;T&amp;eacute;cnica&lt;/a&gt; &amp;gt;</target>
        </trans-unit>
        <trans-unit id="e829581ce522872c6d590e27428fcf8c45f8271f" translate="yes" xml:space="preserve">
          <source>technology preview</source>
          <target state="translated">avance de la tecnolog√≠a</target>
        </trans-unit>
        <trans-unit id="9f453a7c9d6f6b089eb0aa59914855a27129b4c5" translate="yes" xml:space="preserve">
          <source>telling the window system.</source>
          <target state="translated">que le dice al sistema de ventanas.</target>
        </trans-unit>
        <trans-unit id="84713c17986689d2369124cc90fcd46d5e79e737" translate="yes" xml:space="preserve">
          <source>tells QDoc to accept a matching target only if the traget is on a QML page. Qdoc actually finds the C++ namespace target first, but since that target is on a C++ page, QDoc ignores it and keeps looking until it finds the same target on a QML page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26661bba34fec2206b603d850891ed88c74646d0" translate="yes" xml:space="preserve">
          <source>tells if the alert was fatal or it was a warning.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acfa18e421cb131522e7fbe829d49b92e2a4f64b" translate="yes" xml:space="preserve">
          <source>tells qdoc to accept a matching target only if the traget is on a QML page. Qdoc actually finds the C++ namespace target first, but since that target is on a C++ page, qdoc ignores it and keeps looking until it finds the same target on a QML page.</source>
          <target state="translated">le dice al qdoc que acepte un objetivo coincidente s√≥lo si el traget est√° en una p√°gina QML.En realidad,Qdoc encuentra primero el objetivo del espacio de nombres C++,pero como ese objetivo est√° en una p√°gina C++,qdoc lo ignora y sigue buscando hasta que encuentra el mismo objetivo en una p√°gina QML.</target>
        </trans-unit>
        <trans-unit id="7033e90fcdda169d2f5d08da17507b0c5db52029" translate="yes" xml:space="preserve">
          <source>temperature</source>
          <target state="translated">temperature</target>
        </trans-unit>
        <trans-unit id="68f6c8d7868711562eedb0f6f1bf098954992c50" translate="yes" xml:space="preserve">
          <source>temperature : const &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">temperatura: const &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8c9c7d18d0218b79e5cc0bdbc6c87f6752ec7740" translate="yes" xml:space="preserve">
          <source>temperature : const &lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de24882e3c1324c028961bbb7035f0735cb7f7ab" translate="yes" xml:space="preserve">
          <source>temperature : qreal</source>
          <target state="translated">temperatura:qreal</target>
        </trans-unit>
        <trans-unit id="5039d047a2545466cae5059904748e5b456f9c8f" translate="yes" xml:space="preserve">
          <source>template &amp;lt;int N, int M&amp;gt; &lt;a href=&quot;qgenericmatrix&quot;&gt;QGenericMatrix&lt;/a&gt;&amp;lt;N, M, float&amp;gt; QMatrix4x4::toGenericMatrix() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="050d61698b9ac03dc4a9039a5a45d438dd8c1a24" translate="yes" xml:space="preserve">
          <source>template &amp;lt;int N, int M&amp;gt; QGenericMatrix&amp;lt;N, M, float&amp;gt; QMatrix4x4::toGenericMatrix()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4aa6783d9ce508828fa9029daf4404df12e5334f" translate="yes" xml:space="preserve">
          <source>template &amp;lt;int N, int M&amp;gt; QMatrix4x4::QMatrix4x4()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa0537af180ead7668f7545495a8133e0e16cc9e" translate="yes" xml:space="preserve">
          <source>template &amp;lt;int N, int M&amp;gt; QMatrix4x4::QMatrix4x4(const &lt;a href=&quot;qgenericmatrix&quot;&gt;QGenericMatrix&lt;/a&gt;&amp;lt;N, M, float&amp;gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5c7946b8f333ec1f53e025162fab52c6c2d198b" translate="yes" xml:space="preserve">
          <source>template &amp;lt;int N, int M, typename T&amp;gt; &lt;a href=&quot;qdatastream&quot;&gt;QDataStream&lt;/a&gt; &amp;amp;operator&amp;gt;&amp;gt;(&lt;a href=&quot;qdatastream&quot;&gt;QDataStream&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43c7d789df52832df35ef0c099a1f0494c956c0f" translate="yes" xml:space="preserve">
          <source>template &amp;lt;int N, int M, typename T&amp;gt; &lt;a href=&quot;qdatastream&quot;&gt;QDataStream&lt;/a&gt; &amp;amp;operator&amp;lt;&amp;lt;(&lt;a href=&quot;qdatastream&quot;&gt;QDataStream&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29aad2efbb7a2e25179821a92db26c8ba8a05595" translate="yes" xml:space="preserve">
          <source>template &amp;lt;int N, int M, typename T&amp;gt; &lt;a href=&quot;qgenericmatrix#QGenericMatrix&quot;&gt;QGenericMatrix&lt;/a&gt;&amp;lt;N, M, T&amp;gt; operator*(T</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22d8356e68ad461fead4ac8615dfa566ea49f852" translate="yes" xml:space="preserve">
          <source>template &amp;lt;int N, int M, typename T&amp;gt; &lt;a href=&quot;qgenericmatrix#QGenericMatrix&quot;&gt;QGenericMatrix&lt;/a&gt;&amp;lt;N, M, T&amp;gt; operator*(const &lt;a href=&quot;qgenericmatrix#QGenericMatrix&quot;&gt;QGenericMatrix&lt;/a&gt;&amp;lt;N, M, T&amp;gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6981621593d71033bcba430a0b2ff4c949d88462" translate="yes" xml:space="preserve">
          <source>template &amp;lt;int N, int M, typename T&amp;gt; &lt;a href=&quot;qgenericmatrix#QGenericMatrix&quot;&gt;QGenericMatrix&lt;/a&gt;&amp;lt;N, M, T&amp;gt; operator+(const &lt;a href=&quot;qgenericmatrix#QGenericMatrix&quot;&gt;QGenericMatrix&lt;/a&gt;&amp;lt;N, M, T&amp;gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="666add4b4efb7b2c4b1336049f4e22adbaae4b30" translate="yes" xml:space="preserve">
          <source>template &amp;lt;int N, int M, typename T&amp;gt; &lt;a href=&quot;qgenericmatrix#QGenericMatrix&quot;&gt;QGenericMatrix&lt;/a&gt;&amp;lt;N, M, T&amp;gt; operator-(const &lt;a href=&quot;qgenericmatrix#QGenericMatrix&quot;&gt;QGenericMatrix&lt;/a&gt;&amp;lt;N, M, T&amp;gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6f448d2fb43140de8257eb10cec2ebe4c75af94" translate="yes" xml:space="preserve">
          <source>template &amp;lt;int N, int M, typename T&amp;gt; &lt;a href=&quot;qgenericmatrix#QGenericMatrix&quot;&gt;QGenericMatrix&lt;/a&gt;&amp;lt;N, M, T&amp;gt; operator/(const &lt;a href=&quot;qgenericmatrix#QGenericMatrix&quot;&gt;QGenericMatrix&lt;/a&gt;&amp;lt;N, M, T&amp;gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e535c00ea2c0fccdba67d357e225db654a28304" translate="yes" xml:space="preserve">
          <source>template &amp;lt;int N, int M, typename T&amp;gt; QDataStream &amp;amp;operator&amp;gt;&amp;gt;()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6a2d778aaa06d6af4e4a59d2c44d651b6a432eb" translate="yes" xml:space="preserve">
          <source>template &amp;lt;int N, int M, typename T&amp;gt; QDataStream &amp;amp;operator&amp;lt;&amp;lt;()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9edd69b3f3c87b851aa3e2c6803798da93d7db2b" translate="yes" xml:space="preserve">
          <source>template &amp;lt;int N, int M, typename T&amp;gt; QGenericMatrix&amp;lt;N, M, T&amp;gt; operator*()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9db156bf8256016d8824a355f5f3530cf217424e" translate="yes" xml:space="preserve">
          <source>template &amp;lt;int N, int M, typename T&amp;gt; QGenericMatrix&amp;lt;N, M, T&amp;gt; operator+()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4c079dde42446b0ab99aa97aa2845fc004ca603" translate="yes" xml:space="preserve">
          <source>template &amp;lt;int N, int M, typename T&amp;gt; QGenericMatrix&amp;lt;N, M, T&amp;gt; operator-()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f06ccf4ba42b02216efdf1e0d4d02af21106a9db" translate="yes" xml:space="preserve">
          <source>template &amp;lt;int N, int M, typename T&amp;gt; QGenericMatrix&amp;lt;N, M, T&amp;gt; operator/()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0923c125c1fcb667baffb25c15381b1e4ca2001" translate="yes" xml:space="preserve">
          <source>template &amp;lt;int N, int M, typename T&amp;gt; class QGenericMatrix</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5a29a550729d8c42888d99df149ff2d02447ba2" translate="yes" xml:space="preserve">
          <source>template &amp;lt;int NN, int M1, int M2, typename TT&amp;gt; &lt;a href=&quot;qgenericmatrix#QGenericMatrix&quot;&gt;QGenericMatrix&lt;/a&gt;&amp;lt;M1, M2, TT&amp;gt; operator*(const &lt;a href=&quot;qgenericmatrix#QGenericMatrix&quot;&gt;QGenericMatrix&lt;/a&gt;&amp;lt;NN, M2, TT&amp;gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1483d4f941a44074b98cb61619e4191ce3cf2f17" translate="yes" xml:space="preserve">
          <source>template &amp;lt;int NN, int M1, int M2, typename TT&amp;gt; QGenericMatrix&amp;lt;M1, M2, TT&amp;gt; operator*()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0de2d5892e9a35c1367e680c5373e344130ee6a" translate="yes" xml:space="preserve">
          <source>template &amp;lt;qsizetype N&amp;gt; QRandomGenerator::QRandomGenerator()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75ab6bc676e833343275872d44eaf7945c54062d" translate="yes" xml:space="preserve">
          <source>template &amp;lt;qsizetype N&amp;gt; QRandomGenerator::QRandomGenerator(const &lt;a href=&quot;qtglobal#quint32-typedef&quot;&gt;quint32&lt;/a&gt; (&amp;amp;)[N]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fee3d4717af4f43998b8b546b884fb65f5ec9d80" translate="yes" xml:space="preserve">
          <source>template &amp;lt;size_t Size&amp;gt; QByteArrayView::QByteArrayView(const char (&amp;amp;)[Size]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25a4c681c93b38ecb4ec323da3558d83bde9912a" translate="yes" xml:space="preserve">
          <source>template &amp;lt;template &amp;lt;typename&amp;gt; class ApiDefinition, typename ObjectType&amp;gt; bool QRemoteObjectHostBase::enableRemoting()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a79635979c223c54293c24736fb3a981617d88f" translate="yes" xml:space="preserve">
          <source>template &amp;lt;template &amp;lt;typename&amp;gt; class ApiDefinition, typename ObjectType&amp;gt; bool QRemoteObjectHostBase::enableRemoting(ObjectType *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bb0e2a486134efe03916530bd985757854ca70c" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename AKey, typename AT&amp;gt; QTypeTraits::compare_eq_result&amp;lt;AKey, AT&amp;gt; operator!=(const &lt;a href=&quot;qmap#QMap&quot;&gt;QMap&lt;/a&gt;&amp;lt;Key, T&amp;gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="154cfa274e8d944e834d981b5357cbcb85f8b672" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename AKey, typename AT&amp;gt; QTypeTraits::compare_eq_result&amp;lt;AKey, AT&amp;gt; operator!=(const &lt;a href=&quot;qmultimap#QMultiMap&quot;&gt;QMultiMap&lt;/a&gt;&amp;lt;Key, T&amp;gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="438528e9143584e801ffd20eae066c64c1116b04" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename AKey, typename AT&amp;gt; QTypeTraits::compare_eq_result&amp;lt;AKey, AT&amp;gt; operator==(const &lt;a href=&quot;qmap#QMap&quot;&gt;QMap&lt;/a&gt;&amp;lt;Key, T&amp;gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4d194df9bca7de45e49ddbfd4ad74db5996b877" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename AKey, typename AT&amp;gt; QTypeTraits::compare_eq_result&amp;lt;AKey, AT&amp;gt; operator==(const &lt;a href=&quot;qmultimap#QMultiMap&quot;&gt;QMultiMap&lt;/a&gt;&amp;lt;Key, T&amp;gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e650c2d82df998ec26fe1798cfb8a4534e4509f" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename AT&amp;gt; bool QList::contains(const AT &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ed3032bca92be78398ac252a83f5a95d73edb2f" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename AT&amp;gt; qsizetype QList::count(const AT &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a3b96b36659e9758b82b27f58d30223cc32ec57" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename AT&amp;gt; qsizetype QList::indexOf(const AT &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cde180e3a1ba6b1ea0403bf8d16cb57f0d660f7" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename AT&amp;gt; qsizetype QList::lastIndexOf(const AT &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50ab48f29809783302f93a117a9b70ee65e440c8" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Args&amp;gt; &lt;a href=&quot;qdbusmessage&quot;&gt;QDBusMessage&lt;/a&gt; QDBusAbstractInterface::call(&lt;a href=&quot;qdbus#CallMode-enum&quot;&gt;QDBus::CallMode&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b884498cd2913af9ab27952d841e9f1f7ef289e" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Args&amp;gt; &lt;a href=&quot;qdbusmessage&quot;&gt;QDBusMessage&lt;/a&gt; QDBusAbstractInterface::call(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55fe89606fe273242d413f81bd69c30d0aefd989" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Args&amp;gt; &lt;a href=&quot;qdbuspendingcall&quot;&gt;QDBusPendingCall&lt;/a&gt; QDBusAbstractInterface::asyncCall(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="793556e87735625a0ae131c4aea81315cbafdfed" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Args&amp;gt; &lt;a href=&quot;qhash-iterator&quot;&gt;QHash::iterator&lt;/a&gt; QHash::emplace(Key &amp;amp;&amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a73c469470940ce5aeb86e3cae74bb1dffebb67" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Args&amp;gt; &lt;a href=&quot;qhash-iterator&quot;&gt;QHash::iterator&lt;/a&gt; QHash::emplace(const Key &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee0a7d0badf5d3e88f1abc65862deb6edb08cf3a" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Args&amp;gt; &lt;a href=&quot;qlist-iterator&quot;&gt;QList::iterator&lt;/a&gt; QList::emplace(&lt;a href=&quot;qlist-const-iterator&quot;&gt;QList::const_iterator&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e5f43f10c9d2afb875002a2a784899d18a86983" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Args&amp;gt; &lt;a href=&quot;qlist-iterator&quot;&gt;QList::iterator&lt;/a&gt; QList::emplace(qsizetype</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f6ca5406ca67829c9f8d75ef1cfe9a5fd345692" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Args&amp;gt; &lt;a href=&quot;qmultihash-iterator&quot;&gt;QMultiHash::iterator&lt;/a&gt; QMultiHash::emplace(Key &amp;amp;&amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e584e30f6e3d22e875be47108b89cf67f544a5c" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Args&amp;gt; &lt;a href=&quot;qmultihash-iterator&quot;&gt;QMultiHash::iterator&lt;/a&gt; QMultiHash::emplace(const Key &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00d34c651b7157c86359edd40eed77c4a97428d0" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Args&amp;gt; &lt;a href=&quot;qmultihash-iterator&quot;&gt;QMultiHash::iterator&lt;/a&gt; QMultiHash::emplaceReplace(Key &amp;amp;&amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7d246831ca133bd7b82924410056e8893b9aa70" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Args&amp;gt; &lt;a href=&quot;qmultihash-iterator&quot;&gt;QMultiHash::iterator&lt;/a&gt; QMultiHash::emplaceReplace(const Key &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="063c34f25786f371ced4bdc197f1f6473436ad7d" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Args&amp;gt; &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QLatin1String::arg(Args &amp;amp;&amp;amp;...</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffb6b9897d274b902f2566762a7b9ac73c3ccc3f" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Args&amp;gt; &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QStringView::arg(Args &amp;amp;&amp;amp;...</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbbf2ca03c96911996b1ccff5f0fd0e73e6da42e" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Args&amp;gt; &lt;a href=&quot;qstring#QString&quot;&gt;QString&lt;/a&gt; QString::arg(Args &amp;amp;&amp;amp;...</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea9f8b6521dd9d12d30bcd4f10fe349fe0e9b442" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Args&amp;gt; QDBusMessage QDBusAbstractInterface::call()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82947c829f3bd1adcd3a6a2d2fd06174d578c810" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Args&amp;gt; QDBusPendingCall QDBusAbstractInterface::asyncCall()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac7d163de91c94d876bd65e4be790778e6bb3d67" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Args&amp;gt; QList::reference QList::emplaceBack(Args &amp;amp;&amp;amp;...</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfd2332495dbd247964c79c4999f802dbe1fc6d2" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Args&amp;gt; QList::reference QList::emplace_back(Args &amp;amp;&amp;amp;...</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52bd941c495697ee7b737400167c16e08d1b1fa0" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Args&amp;gt; QModbusRequest::QModbusRequest()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a044ba420c55850ef7d20fccf8d3869fd1f6c93" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Args&amp;gt; QModbusRequest::QModbusRequest(&lt;a href=&quot;qmodbuspdu#FunctionCode-enum&quot;&gt;QModbusPdu::FunctionCode&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1664ed61bbfab997c045e688b7697b82549b9f6" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Args&amp;gt; QModbusResponse::QModbusResponse()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fb149df2b57883c23a88112e4ae04cbb6aab04a" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Args&amp;gt; QModbusResponse::QModbusResponse(&lt;a href=&quot;qmodbuspdu#FunctionCode-enum&quot;&gt;QModbusPdu::FunctionCode&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="226ab82e1ef0c135369ce850796b35ea2a1a481c" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Args&amp;gt; QSharedPointer&amp;lt;T&amp;gt; QSharedPointer::create()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f2858da9acff25fccb9b57c0c3e6b060aa780ec" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Args&amp;gt; QString QLatin1String::arg()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf29db165262ba11efba8e5f684192814dfe09fb" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Args&amp;gt; QString QString::arg()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4f407100640bf3d4f315fb5043f3fb3be8a67d1" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Args&amp;gt; QString QStringView::arg()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d377be65c31526fd19f3068dc387e9edcac44493" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Args&amp;gt; void QModbusPdu::decodeData()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06b8b5a1382d36f2bc9dfc8b4742e2f8a46d989a" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Args&amp;gt; void QModbusPdu::decodeData(Args &amp;amp;&amp;amp;...</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="791ccc6ec997f2a8f36fcd6bcb910d366815b802" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Args&amp;gt; void QModbusPdu::encodeData()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18cac7cf1c89f23079d46aa74ad518d48266824e" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Args&amp;gt; void QModbusPdu::encodeData(Args...</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b17f84c2b96cae01ded4e1f1d720ff4e487e4d6d" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Byte&amp;gt; QByteArrayView::QByteArrayView(const Byte *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64ecfc172d80482210cf393ceab85a835a6db292" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Byte, if_compatible_byte&amp;lt;Byte&amp;gt;&amp;gt; QByteArrayView::QByteArrayView(const Byte *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5fbad995585bd298b0c73adcef3824803f11fc2" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Char&amp;gt; QAnyStringView::QAnyStringView(const Char *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="890d1f3a1c9162f72dade80362fbc0c095b37020" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Char&amp;gt; QStringView::QStringView()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ad85af4dff4163ef3ef442e0a6bfa7541570a1a" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Char&amp;gt; QStringView::QStringView(const Char *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6892884ba484a31ff61cbda027e649e6ae7746ca" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Char&amp;gt; QUtf8StringView::QUtf8StringView(const Char *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d06faa06f5111ccf6d061d4c4a03a8ca0f086ea" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Char, if_compatible_char&amp;lt;Char&amp;gt;&amp;gt; QAnyStringView::QAnyStringView(const Char *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b081b96115bacf182c85591b2b991699fd1c83a" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Char, if_compatible_char&amp;lt;Char&amp;gt;&amp;gt; QStringView::QStringView()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1557faf9a1d6229f3afadc0df9de81ea716ccbee" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Char, if_compatible_char&amp;lt;Char&amp;gt;&amp;gt; QStringView::QStringView(const Char *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3b4b1bc45eac51e0780d4c6abe17be359e23293" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Char, if_compatible_char&amp;lt;Char&amp;gt;&amp;gt; QUtf8StringView::QUtf8StringView(const Char *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39906d4879dd7e2224f9ea4153bc4f0e8b9bb9e5" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Char, size_t N&amp;gt; QAnyStringView::QAnyStringView(const Char (&amp;amp;)[N]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e633c4a0b02894726b8103762e52754d83a5970" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Char, size_t N&amp;gt; QStringView::QStringView()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96c0d3c48ebf088bbb259eb05a9f5a338ddc9598" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Char, size_t N&amp;gt; QStringView::QStringView(const Char (&amp;amp;)[N]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf1f6513c558a57afdbca93f211ac46b06b35d43" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Char, size_t N&amp;gt; QUtf8StringView::QUtf8StringView(const Char (&amp;amp;)[N]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73152719e6ded9dcc7aec2d332f09c7b9f416684" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Class, typename T, auto Offset, auto Signal&amp;gt; class QObjectBindableProperty</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58770a0fa654b4f1cd630cd346d35bf906d24bee" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Clock, typename Duration&amp;gt; &lt;a href=&quot;qdeadlinetimer#QDeadlineTimer&quot;&gt;QDeadlineTimer&lt;/a&gt; &amp;amp;QDeadlineTimer::operator=(std::chrono::time_point&amp;lt;Clock, Duration&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c17c1206b374fe86b31a8bfc260c115c63f9f9c6" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Clock, typename Duration&amp;gt; QDeadlineTimer &amp;amp;QDeadlineTimer::operator=()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4d5b9f7416533f425c59c5f8d641b29f1cb316d" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Clock, typename Duration&amp;gt; QDeadlineTimer::QDeadlineTimer()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d13c35b3864d66207bc9c86a77179d1a0e9ee40" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Clock, typename Duration&amp;gt; QDeadlineTimer::QDeadlineTimer(std::chrono::time_point&amp;lt;Clock, Duration&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f87fefe3fba5ae44c01d11db20e426292620ea23" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Clock, typename Duration&amp;gt; bool QMutex::try_lock_until()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d193e0ffecef552b529cd30537a23a306e850e3" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Clock, typename Duration&amp;gt; bool QMutex::try_lock_until(std::chrono::time_point&amp;lt;Clock, Duration&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e436dada4c1d0d1808cda60bd39f5ba47c3bcbb6" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Clock, typename Duration&amp;gt; void QDeadlineTimer::setDeadline()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a7143c1a296ec343d623e7ca0c50c8a1a653a77" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Clock, typename Duration&amp;gt; void QDeadlineTimer::setDeadline(std::chrono::time_point&amp;lt;Clock, Duration&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aedea40a039421c2f02d98ed1da99d7b794bb440" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Container&amp;gt; class QBaseIterator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0824ec638a644828075b03a5e965a3535bc49d0f" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Container&amp;gt; class QIterable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31aabc05dc03b5ce52a09ad7a318ef7e453ab10f" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Container&amp;gt; struct &lt;a href=&quot;qcborstreamreader&quot;&gt;QCborStreamReader&lt;/a&gt;::StringResult</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c346f5cd9f1135e13cdf5fd7540564f0acea632" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Container&amp;gt; struct QConstIterator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77602df4412a7c9a1f1d6cfc4b18fba9e0328556" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Container&amp;gt; struct QIterator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34450f59052f25f01fa75dbb1cd1a060c1627bab" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Container&amp;gt; void qDeleteAll()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ce41b8ad881d050f68c5c6f488605afcbe9997f" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Container&amp;gt; voidqDeleteAll(const Container &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed85e5291eb48cba2ddac2fa2498dccf6fae0e48" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Container, if_compatible_container&amp;lt;Container&amp;gt;&amp;gt; QByteArrayView::QByteArrayView(const Container &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80ab9e0b7595c787216eb1ad48278fc0dc871414" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Container, if_compatible_container&amp;lt;Container&amp;gt;&amp;gt; QModelRoleDataSpan::QModelRoleDataSpan(Container &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0130c0a590b2c962534e22427bc4cd29306e0338" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Container, if_compatible_container&amp;lt;Container&amp;gt;&amp;gt; QStringView::QStringView(const Container &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0ed4bdad5fbb54b5a18403c2bf7a8c3635c225a" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Container, if_compatible_container&amp;lt;Container&amp;gt;&amp;gt; QUtf8StringView::QUtf8StringView(const Container &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7afab277d0390c012d8a2873271bc6850b54d88" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename D, if_same_type&amp;lt;D&amp;gt;&amp;gt; QScopedArrayPointer::QScopedArrayPointer()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91cd1d6a48e77b7d586d9bc997f93904840575ec" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename D, if_same_type&amp;lt;D&amp;gt;&amp;gt; QScopedArrayPointer::QScopedArrayPointer(D *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c78eef2624721413531b270a40fd1bad4353409" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Deleter&amp;gt; QSharedPointer::QSharedPointer(</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e42a9082344360571381c7cfdbd4d02c2479630d" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Deleter&amp;gt; QSharedPointer::QSharedPointer()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="568b2158ca5b473b9d34fe424087b88b9bb3db6a" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Deleter&amp;gt; void QSharedPointer::reset()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c837291b68385937bcd8b255b0d633ac399d14b0" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Deleter&amp;gt; void QSharedPointer::reset(T *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7555d61e67f2decc6549b3c37f9088a18c8db98" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename DerivedType&amp;gt; QQmlPropertyMap::QQmlPropertyMap()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="539b271b26aa800fce101f3bfecc7abd583b7e4c" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Enum&amp;gt; class QFlags</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ebe51e9faf7b84587aed98a67d0eaa083de52db" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename ExtraArgs&amp;gt; &lt;a href=&quot;qtconcurrent-qtaskbuilder&quot;&gt;QTaskBuilder&lt;/a&gt;&amp;lt;Task, ExtraArgs...&amp;gt; QTaskBuilder::withArguments(ExtraArgs &amp;amp;&amp;amp;...</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56b9a9261481ff83d9856997dad0a1db5c11822d" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename F&amp;gt; &lt;a href=&quot;qscopeguard#QScopeGuard&quot;&gt;QScopeGuard&lt;/a&gt;&amp;lt;typenamestd::decay&amp;lt;F&amp;gt;::type&amp;gt; qScopeGuard(F &amp;amp;&amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a596b3346e94411da003c92dcfb036f3a9d677c8" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename F&amp;gt; QScopeGuard&amp;lt;typename std::decay&amp;lt;F&amp;gt;::type&amp;gt; qScopeGuard()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acf3ca8fde3c0971fb50379c6ef046ae520317af" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename F&amp;gt; class QScopeGuard</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51131ca9e3aaf555651bb18379f4acdce6b7d71d" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename ForwardIterator&amp;gt; void QRandomGenerator::generate()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a16c592ff6d9a90900521abed0f2f92bd8ac4cc" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename ForwardIterator&amp;gt; void QRandomGenerator::generate(ForwardIterator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82a1c965b06d7986e8cc45e9ebf1ebc1fd6e3112" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename ForwardIterator&amp;gt; void qDeleteAll()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b02f63f24ae15476e38e97a5e92ac08d22f3dd36" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename ForwardIterator&amp;gt; voidqDeleteAll(ForwardIterator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="387868d9220016bc66355bdd65b4b9c10c440f35" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename From, typename To&amp;gt; bool QMetaType::hasRegisteredConverterFunction()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b41f7c527e1309d2bf5da5f27cfc8af2ae1015b7" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename From, typename To&amp;gt; bool QMetaType::registerConverter()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbc3c83355317b86ed96ca2289d34ac0f74fa219" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Frontend&amp;gt; void Qt3DCore::registerBackendType()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a6176d9d26cd6c9b49af0f7343e13c4d62afaca" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Function&amp;gt; QThread *QThread::create()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="627cd08c71e468c27141bae1ef4ca59662513af4" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Function, typename Args&amp;gt; QThread *QThread::create()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed9adbf0defb8d923df100bc3ce62910ab438957" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Functor&amp;gt; &lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; *QMenu::addAction(const &lt;a href=&quot;qicon&quot;&gt;QIcon&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a576e3c8a255d9d2261f376cf9aade3597d045d1" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Functor&amp;gt; &lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; *QMenu::addAction(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4a7a84d6fdf805c1a1d67349be15b1743f48a69" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Functor&amp;gt; &lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; *QMenuBar::addAction(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36a7c02da3c20f9da9c8918a2fbf92951d6197ef" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Functor&amp;gt; &lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; *QToolBar::addAction(const &lt;a href=&quot;qicon&quot;&gt;QIcon&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="457c503d8f3ee42091144e58fc80d29e15d09701" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Functor&amp;gt; &lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; *QToolBar::addAction(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49a3eb4f723216b59125c2c5b14b4387af836bd6" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Functor&amp;gt; &lt;a href=&quot;qmetaobject-connection&quot;&gt;QMetaObject::Connection&lt;/a&gt; QTimer::callOnTimeout(Functor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ae87ed68df940f3615f4d6c72bf6d22a0d0dc3c" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Functor&amp;gt; &lt;a href=&quot;qmetaobject-connection&quot;&gt;QMetaObject::Connection&lt;/a&gt; QTimer::callOnTimeout(const &lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="366b15ae4c0e24326d26136c2996a4616a015f91" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Functor&amp;gt; &lt;a href=&quot;qpropertychangehandler&quot;&gt;QPropertyChangeHandler&lt;/a&gt;&amp;lt;Functor&amp;gt; QObjectBindableProperty::onValueChanged(Functor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82906baab2cadeaaf357e11959763b858e5cbe3b" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Functor&amp;gt; &lt;a href=&quot;qpropertychangehandler&quot;&gt;QPropertyChangeHandler&lt;/a&gt;&amp;lt;Functor&amp;gt; QObjectBindableProperty::subscribe(Functor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ab635cf80dc2928982197c8af96895e6e0ff046" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Functor&amp;gt; &lt;a href=&quot;qpropertychangehandler&quot;&gt;QPropertyChangeHandler&lt;/a&gt;&amp;lt;Functor&amp;gt; QProperty::onValueChanged(Functor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b1f75f07c3a25e54c785d6a740e7b864eaf2725" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Functor&amp;gt; &lt;a href=&quot;qpropertychangehandler&quot;&gt;QPropertyChangeHandler&lt;/a&gt;&amp;lt;Functor&amp;gt; QProperty::subscribe(Functor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10307811244084570808da28f750cb24af2878c3" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Functor&amp;gt; &lt;a href=&quot;qpropertychangehandler&quot;&gt;QPropertyChangeHandler&lt;/a&gt;&amp;lt;Functor&amp;gt; QPropertyAlias::onValueChanged(Functor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30590881cd540f30dcf2c33f23d789d05ffd0ab7" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Functor&amp;gt; &lt;a href=&quot;qpropertychangehandler&quot;&gt;QPropertyChangeHandler&lt;/a&gt;&amp;lt;Functor&amp;gt; QPropertyAlias::subscribe(Functor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3b0f69e4392aae026e7b11286bae3adcee43c95" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Functor&amp;gt; QAction *QMenu::addAction()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd6f5f5a9ac14b2ddd93c46596b341c9292bc5bf" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Functor&amp;gt; QAction *QMenuBar::addAction()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db6f00768353e1297b65d05efd824703f79678bc" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Functor&amp;gt; QAction *QToolBar::addAction()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8407552d36627742d1694ddbf8940cf71f5fda7c" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Functor&amp;gt; QMetaObject::Connection QTimer::callOnTimeout()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b229faca268779f2ff036b6f4718f54b23e4ed8a" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Functor&amp;gt; QObjectBindableProperty::QObjectBindableProperty(Functor &amp;amp;&amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ff6bb35b0437b7a7c2c97630ab76e03cb096c7d" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Functor&amp;gt; QProperty::QProperty(Functor &amp;amp;&amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1abcd299b31f05f8d0f94e01e2aed1369807514c" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Functor&amp;gt; QPropertyBinding&amp;lt;T&amp;gt; QObjectBindableProperty::setBinding(Functor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b048dab887f7b572299c039acfe06128efd09a09" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Functor&amp;gt; QPropertyBinding&amp;lt;T&amp;gt; QProperty::setBinding(Functor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="562eba0908c3ba65c290cb6a94e3d7ed7e5f19ac" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Functor&amp;gt; QPropertyBinding&amp;lt;T&amp;gt; QPropertyAlias::setBinding(Functor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93a6efa509c1a601a52c9f9c090809dc7f939f6d" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Functor&amp;gt; bool QTest::qWaitFor()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18ffd51555055462e90c9c6364e55053dae59fa8" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Functor&amp;gt; bool QTest::qWaitFor(Functor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1f4f39f48b0c3c9972b6dade16cb0e4d96868d0" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Functor&amp;gt; class QPropertyChangeHandler</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="520717d72d4fbd51beb063f8b6cbedbe60a316c6" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Functor&amp;gt; int QHostInfo::lookupHost()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a5169524ebc767dbe0c0ef78a85d2954e8f8e75" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Functor&amp;gt; std::function&amp;lt;void ()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0e1f0e59b64af6fa26fd714d7d59d3e31b1970c" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Functor&amp;gt; typename QtPrivate::QEnableIf&amp;lt;!QtPrivate::FunctionPointer&amp;lt;Functor&amp;gt;::IsPointerToMemberFunction &amp;amp;&amp;amp; !std::is_same&amp;lt;const char *, Functor&amp;gt;::value, QMetaObject::Connection&amp;gt;::Type QScxmlStateMachine::connectToEvent()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f2e04bc44efed56caf6550c5fb8cbe5307d57f4" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Functor&amp;gt; typename QtPrivate::QEnableIf&amp;lt;!QtPrivate::FunctionPointer&amp;lt;Functor&amp;gt;::IsPointerToMemberFunction &amp;amp;&amp;amp; !std::is_same&amp;lt;const char *, Functor&amp;gt;::value, QMetaObject::Connection&amp;gt;::Type QScxmlStateMachine::connectToState()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4db16f32731566df4ff7b002afbfb0aa13b6d21f" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Functor&amp;gt; typenameQtPrivate::QEnableIf&amp;lt;!&lt;a href=&quot;qtprivate-functionpointer&quot;&gt;QtPrivate::FunctionPointer&lt;/a&gt;&amp;lt;Functor&amp;gt;::IsPointerToMemberFunction &amp;amp;&amp;amp; !std::is_same&amp;lt;const char *, Functor&amp;gt;::value, &lt;a href=&quot;qmetaobject-connection&quot;&gt;QMetaObject::Connection&lt;/a&gt;&amp;gt;::Type QScxmlStateMachine::connectToEvent(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49c0c6bbb032713963c0b5383a5cbfe871c44713" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Functor&amp;gt; typenameQtPrivate::QEnableIf&amp;lt;!&lt;a href=&quot;qtprivate-functionpointer&quot;&gt;QtPrivate::FunctionPointer&lt;/a&gt;&amp;lt;Functor&amp;gt;::IsPointerToMemberFunction &amp;amp;&amp;amp; !std::is_same&amp;lt;const char *, Functor&amp;gt;::value, &lt;a href=&quot;qmetaobject-connection&quot;&gt;QMetaObject::Connection&lt;/a&gt;&amp;gt;::Type QScxmlStateMachine::connectToState(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="607c7435805938e17a963271407d37b8706e169a" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Functor&amp;gt; void QTimer::singleShot()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b174ca292913fb3d1029b29830aa1ea71619c09" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Functor, int&amp;gt; void QTimer::singleShot()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d4110ca34675df9a01aa22dd7293a47ab6328f6" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Functor, typename FunctorReturnType&amp;gt; bool QMetaObject::invokeMethod()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0f621e5cdcc441eac34c8a29ec7673f008765e8" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Haystack, typename Needle&amp;gt; class QStringTokenizer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="491915a892db30a032d82e69f50f4288870b98d1" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename InputIterator&amp;gt; &lt;a href=&quot;qtglobal#uint-typedef&quot;&gt;uint&lt;/a&gt;qHashRange(InputIterator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd9ea9444de481d9fd47defa134ebd4b1280bef6" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename InputIterator&amp;gt; &lt;a href=&quot;qtglobal#uint-typedef&quot;&gt;uint&lt;/a&gt;qHashRangeCommutative(InputIterator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0119fde99de5ec9906328b68f0d02d5dac20a626" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename InputIterator&amp;gt; QHash::QHash()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb5b886aec2039762e064bde2df466a2ad89af99" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename InputIterator&amp;gt; QHash::QHash(InputIterator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1678cf225675fb3937292c990616c81b487972b7" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename InputIterator&amp;gt; QLinkedList::QLinkedList()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b507d8e272ec8a4c11da70ece68de6426ef5bd42" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename InputIterator&amp;gt; QLinkedList::QLinkedList(InputIterator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9321f424f58121f96b539e66c118927a6bf081fc" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename InputIterator&amp;gt; QList::QList()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15bd8e6146cd61ef8ca5493fd54663e2d6046501" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename InputIterator&amp;gt; QList::QList(InputIterator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f173622de8fa5bb598df962a12a0b548711c7c14" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename InputIterator&amp;gt; QMultiHash::QMultiHash()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0da03e1d1793ef0f2eed5549ee67dc9cb619160" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename InputIterator&amp;gt; QMultiHash::QMultiHash(InputIterator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1319b726a2206fb0d757e1c4a4b7ad30c69d927" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename InputIterator&amp;gt; QSet::QSet()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1068dfa4ce2e506d58b58cb2f557fe9b10bc32ac" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename InputIterator&amp;gt; QSet::QSet(InputIterator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9d2d89f924414dbff30cb7e25783082ec6ee873" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename InputIterator&amp;gt; QStringList::QStringList()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e43649d68101f7a3d7a3e5b7ff6cef05c764ce4f" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename InputIterator&amp;gt; QStringList::QStringList(InputIterator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f52bc38c1d5e1dc96350bcc4def09262e71a5c8" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename InputIterator&amp;gt; QVarLengthArray::QVarLengthArray()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b939af78f71b47d3b522fac77047ac665188eae3" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename InputIterator&amp;gt; QVarLengthArray::QVarLengthArray(InputIterator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fff803094e056889c03eae49eb66dce66e8bcb4f" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename InputIterator&amp;gt; QVector::QVector()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5b99c0eeef7597ae243f5554da7e525e837b23a" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename InputIterator&amp;gt; QVector::QVector(InputIterator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df5a2871c574aec64828860d11315fc857d2d08e" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename InputIterator&amp;gt; uint qHashRange()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="514c7d051064701cc2d37f8ad435e43243477220" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename InputIterator&amp;gt; uint qHashRangeCommutative()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae85db948e692b98da48768f2f3de07e6543862a" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Integer, if_valid_value_type&amp;lt;Integer&amp;gt;&amp;gt; Integer QTypeRevision::toEncodedVersion() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84e900dd0194a8bf38da78afd1469aa52d8857fd" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Iterator, typename IteratorCategory&amp;gt; class QTaggedIterator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5993da7f0ff83388b15a3a22bc6ca875bc61d7aa" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Iterator, typename KeepFunctor&amp;gt; &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;&amp;lt;typenameqValueType&amp;lt;Iterator&amp;gt;::value_type&amp;gt; QtConcurrent::filtered(&lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt; *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfbe9a5bbed3627e14441bce9d96cdde798ff5fe" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Iterator, typename KeepFunctor&amp;gt; &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;&amp;lt;typenameqValueType&amp;lt;Iterator&amp;gt;::value_type&amp;gt; QtConcurrent::filtered(Iterator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="337d59750983d3292eb08eecb4e0ab6602c1569e" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Iterator, typename KeepFunctor&amp;gt; QFuture&amp;lt;typename qValueType&amp;lt;Iterator&amp;gt;::value_type&amp;gt; QtConcurrent::filtered()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20bd95d2aa2fc06b5d9d6ec6c6331ebe5f9b941e" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Iterator, typename MapFunctor&amp;gt; &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;&amp;lt;QtPrivate::MapResultType&amp;lt;Iterator, MapFunctor&amp;gt; &amp;gt; QtConcurrent::mapped(&lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt; *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d5c427a67b7a28902d2399f8016702dbf33b14b" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Iterator, typename MapFunctor&amp;gt; &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;&amp;lt;QtPrivate::MapResultType&amp;lt;Iterator, MapFunctor&amp;gt; &amp;gt; QtConcurrent::mapped(Iterator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15decf5c7c9f6048183cb54507c7e1fa323b5c30" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Iterator, typename MapFunctor&amp;gt; &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;&amp;lt;typenameQtPrivate::MapResultType&amp;lt;void, MapFunctor&amp;gt;::ResultType&amp;gt; QtConcurrent::mapped(Iterator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1d13349f9160c15bea87014461fff536b839e52" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Iterator, typename MapFunctor&amp;gt; &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;&amp;lt;void&amp;gt; QtConcurrent::map(&lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt; *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b39c97cae54650b66f2c8ae08eb642a40fe73405" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Iterator, typename MapFunctor&amp;gt; &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;&amp;lt;void&amp;gt; QtConcurrent::map(Iterator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a922079d1ef7650f8d5e7ebdf5eae2928dad3545" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Iterator, typename MapFunctor&amp;gt; QFuture&amp;lt;typename QtPrivate::MapResultType&amp;lt;void, MapFunctor&amp;gt;::ResultType&amp;gt; QtConcurrent::mapped()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40599f6cce4e93991f4ef476dc45342890c8c0bb" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Iterator, typename MapFunctor&amp;gt; QFuture&amp;lt;void&amp;gt; QtConcurrent::map()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfc7edea9f0c9324b017f577c42dd38458a9f522" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Iterator, typename MapFunctor&amp;gt; void QtConcurrent::blockingMap()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="068135d9270034518dea2937d1aa642189f4b5f2" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Iterator, typename MapFunctor&amp;gt; void QtConcurrent::blockingMap(&lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt; *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a00c2ee9918148821b628692a96df9bca6bb69f" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Iterator, typename MapFunctor&amp;gt; void QtConcurrent::blockingMap(Iterator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2673cb44894f5ff57acf398ae01f9e77121a1de7" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Key, typename T&amp;gt; &lt;a href=&quot;qdatastream&quot;&gt;QDataStream&lt;/a&gt; &amp;amp;operator&amp;gt;&amp;gt;(&lt;a href=&quot;qdatastream&quot;&gt;QDataStream&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44b45c9f7ae992a6f0f516cfff17c6e5bb165ba3" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Key, typename T&amp;gt; &lt;a href=&quot;qdatastream&quot;&gt;QDataStream&lt;/a&gt; &amp;amp;operator&amp;lt;&amp;lt;(&lt;a href=&quot;qdatastream&quot;&gt;QDataStream&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d41442a1ae98989f3f65eb9063310be096af73ee" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Key, typename T&amp;gt; &lt;a href=&quot;qdebug#QDebug&quot;&gt;QDebug&lt;/a&gt;operator&amp;lt;&amp;lt;(&lt;a href=&quot;qdebug#QDebug&quot;&gt;QDebug&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="918490247d2d3f42d727cb0dc7a557f3df08cf2b" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Key, typename T&amp;gt; &lt;a href=&quot;qtglobal#uint-typedef&quot;&gt;uint&lt;/a&gt;qHash(const &lt;a href=&quot;qhash#QHash&quot;&gt;QHash&lt;/a&gt;&amp;lt;Key, T&amp;gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c82cea0ab478f1bbf169f015ea5f9df204d97bb" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Key, typename T&amp;gt; &lt;a href=&quot;qtglobal#uint-typedef&quot;&gt;uint&lt;/a&gt;qHash(const &lt;a href=&quot;qmultihash#QMultiHash&quot;&gt;QMultiHash&lt;/a&gt;&amp;lt;Key, T&amp;gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fbb106e5b29b3cd6cecf1586cf246c4acedc8c0" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Key, typename T&amp;gt; QDataStream &amp;amp;operator&amp;gt;&amp;gt;()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45fee8b07b91844a7acb58199bee9c2fa552dd20" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Key, typename T&amp;gt; QDataStream &amp;amp;operator&amp;lt;&amp;lt;()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0297e0a421670b90d56716125c905e2da9113966" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Key, typename T&amp;gt; QDataStreamIfHasIStreamOperators&amp;lt;Key, T&amp;gt; operator&amp;gt;&amp;gt;(&lt;a href=&quot;qdatastream&quot;&gt;QDataStream&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abc90d886ae88d13d9e4431f29e7a88b9f80bb43" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Key, typename T&amp;gt; QDataStreamIfHasOStreamOperators&amp;lt;Key, T&amp;gt; operator&amp;lt;&amp;lt;(&lt;a href=&quot;qdatastream&quot;&gt;QDataStream&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="978770a25ac815aab0841a997d5bcdde77d725ae" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Key, typename T&amp;gt; QDebug operator&amp;lt;&amp;lt;()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb8fc48fac18526be6c74cc225631743c6035383" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Key, typename T&amp;gt; QDebugIfHasDebugStream&amp;lt;Key, T&amp;gt; operator&amp;lt;&amp;lt;(&lt;a href=&quot;qdebug#QDebug&quot;&gt;QDebug&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9ee5313e51a8e8f2a5de93c948ca9c7d63b2327" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Key, typename T&amp;gt; class QCache</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83f7daa501a6dd7383b6704d1d573786ca3f428f" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Key, typename T&amp;gt; class QHash</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="277321d4246d689f719e94d397f299df3f5e2e33" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Key, typename T&amp;gt; class QHashIterator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99b48fdcbce3e38171836c26fbce659259787c52" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Key, typename T&amp;gt; class QMap</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82379a57e2e825a832c021d652c6ae56219bb0fc" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Key, typename T&amp;gt; class QMapIterator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4750d20d7b5d932d331cc3c1bddd8df642ddb69" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Key, typename T&amp;gt; class QMultiHash</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f47afbc27991c36aa7a63e4abf35c4905e494097" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Key, typename T&amp;gt; class QMultiMap</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50a9fe8953b1d332d600916d59c40731b9e05558" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Key, typename T&amp;gt; class QMultiMapIterator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2db1e5eff4a95ce996e85cdb183024bb64082e6f" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Key, typename T&amp;gt; class QMutableHashIterator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33661e4a4841e402a3f7ab90671f451aeca92bd4" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Key, typename T&amp;gt; class QMutableMapIterator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8716c287ecbddc052ccef4dea0290c7ef67797a" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Key, typename T&amp;gt; class QMutableMultiMapIterator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="075ce2948e6b732c0e4c828cc742f520320dc09a" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Key, typename T&amp;gt; uint qHash()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bd23ea38fc55b5a143a80493e5966a280721270" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Key, typename T, typename Compare, typename Alloc&amp;gt; &lt;a href=&quot;qdebug#QDebug&quot;&gt;QDebug&lt;/a&gt;operator&amp;lt;&amp;lt;(&lt;a href=&quot;qdebug#QDebug&quot;&gt;QDebug&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c04856b1b81dbfab23352394a1cf8758a4e3c3ad" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Key, typename T, typename Compare, typename Alloc&amp;gt; QDebug operator&amp;lt;&amp;lt;()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b394aa799dcc85727c3f06e3eba0770a54a27a5d" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Key, typename T, typename Iterator&amp;gt; class QKeyValueIterator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="514fe6fdbdb4d7b4bc25540cb66bd657729c4781" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename LContainer&amp;gt; LContainer QStringTokenizer::toContainer(LContainer &amp;amp;&amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1164f23488cd6bc76099afdbd99920b269a131d8" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename MemberFunction&amp;gt; &lt;a href=&quot;qmetaobject-connection&quot;&gt;QMetaObject::Connection&lt;/a&gt; QTimer::callOnTimeout(const &lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38651a8579ef28a7a19f64170a821d467500f236" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename MemberFunction&amp;gt; QMetaObject::Connection QTimer::callOnTimeout()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0c3286625da2a7be9f33cbba569592e06e7d11f" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename MemberFunction, int&amp;gt; bool QMetaType::registerConverter()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c16b56d0704a6edbb51bd892f287b13e80e35ee" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename MemberFunctionOk, char&amp;gt; bool QMetaType::registerConverter()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7aa0cb78a5041c774b19d58e939c565c34d53615" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Mutex&amp;gt; class QMutexLocker</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16e52af093e30c4db94353c11bd2ee70b1ba86aa" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Needle, typename Flags&amp;gt; decltype(&lt;a href=&quot;qstringtokenizer#qTokenize&quot;&gt;qTokenize&lt;/a&gt;(*this, std::forward&amp;lt;Needle&amp;gt;(needle), flags...)) QLatin1String::tokenize(Needle &amp;amp;&amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59b947007f60a04a25fb3df9eb18ec72b5451bf8" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Needle, typename Flags&amp;gt; decltype(&lt;a href=&quot;qstringtokenizer#qTokenize&quot;&gt;qTokenize&lt;/a&gt;(*this, std::forward&amp;lt;Needle&amp;gt;(needle), flags...)) QString::tokenize(Needle &amp;amp;&amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c99aec38db86409eaefa964e4c3f37f8790ad31" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Needle, typename Flags&amp;gt; decltype(&lt;a href=&quot;qstringtokenizer#qTokenize&quot;&gt;qTokenize&lt;/a&gt;(*this, std::forward&amp;lt;Needle&amp;gt;(needle), flags...)) QStringView::tokenize(Needle &amp;amp;&amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fb232543a107992aef506e8871d6da55f26e943" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Needle, typename Flags&amp;gt; decltype(&lt;a href=&quot;qstringtokenizer#qTokenize&quot;&gt;qTokenize&lt;/a&gt;(std::move(*this), std::forward&amp;lt;Needle&amp;gt;(needle), flags...)) QString::tokenize(Needle &amp;amp;&amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e6b35af5846b241f4a1ba9fc1ae5c1adf5ef4bf" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Obj, typename PointerToMemberFunctionOrFunctor&amp;gt; &lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; *QMenuBar::addAction(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cff534f1fd4fad526d686d0f73fe95ee94b728f" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Obj, typename PointerToMemberFunctionOrFunctor&amp;gt; QAction *QMenuBar::addAction()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69ae47b09723c8e16a77721c4c7fe41b0ed6c572" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename ObjectType&amp;gt; ObjectType *QRemoteObjectNode::acquire()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a872600824a1be7b5c7d479d66deb18f1691000" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename ObjectType&amp;gt; ObjectType *QRemoteObjectNode::acquire(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c3703c6bc919cc3f96c0d4c8b30740bfbb9714e" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename OutputSequence, typename InputSequence, typename MapFunctor&amp;gt; OutputSequence QtConcurrent::blockingMapped()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="caf3d22b054748a3e41062669dac8743403fa881" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename OutputSequence, typename InputSequence, typename MapFunctor&amp;gt; OutputSequence QtConcurrent::blockingMapped(&lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt; *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d8086d6393ebd7a79d24726705283083782dbea" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename OutputSequence, typename InputSequence, typename MapFunctor&amp;gt; OutputSequence QtConcurrent::blockingMapped(InputSequence &amp;amp;&amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84164bbc1b281d84eff8affd1a0128540e39e8c7" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename OutputSequence, typename InputSequence, typename MapFunctor&amp;gt; OutputSequence QtConcurrent::blockingMapped(const InputSequence &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e25e3e384eb765dc1dc52b11144b2c122a46939" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename OutputSequence, typename Iterator, typename KeepFunctor&amp;gt; OutputSequence QtConcurrent::blockingFiltered()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa9eb44981b79c153b0ad7e8c3621248df98e0f7" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename OutputSequence, typename Iterator, typename KeepFunctor&amp;gt; OutputSequence QtConcurrent::blockingFiltered(&lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt; *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c827154469f410b50393c0fdd98d14dc2eea689" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename OutputSequence, typename Iterator, typename KeepFunctor&amp;gt; OutputSequence QtConcurrent::blockingFiltered(Iterator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2132e651162132aba4bc963f679c554279a7baa" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Pointer&amp;gt; class QVariantPointer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c692aeabb20de6f710c765b83eb833b2f1bc952" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Pointer&amp;gt; class QVariantRef</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02a75539b89f8a50455fd8ecbc2ac331ddcf4646" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename PointerToMemberFunction&amp;gt; &lt;a href=&quot;qmetaobject-connection&quot;&gt;QMetaObject::Connection&lt;/a&gt; QScxmlStateMachine::connectToEvent(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13ba36c91ab6501ab5d2551fbeddb533d22ef1bb" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename PointerToMemberFunction&amp;gt; &lt;a href=&quot;qmetaobject-connection&quot;&gt;QMetaObject::Connection&lt;/a&gt; QScxmlStateMachine::connectToState(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96333923251533613d596aa9b51fa4b39efd485d" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename PointerToMemberFunction&amp;gt; &lt;a href=&quot;qsignaltransition&quot;&gt;QSignalTransition&lt;/a&gt; *QState::addTransition(const &lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eec92e59412f3fb5d68a55596980955400f1026d" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename PointerToMemberFunction&amp;gt; QMetaMethod QMetaMethod::fromSignal()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c2753789141f93ec9c46c78e8d224a0bed36bb2" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename PointerToMemberFunction&amp;gt; QMetaObject::Connection QObject::connect()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fe109373018decb96882fae3d3bd4d9392f14dc" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename PointerToMemberFunction&amp;gt; QMetaObject::Connection QScxmlStateMachine::connectToEvent()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7174853edbf32b5e41a2048567c25457db3edff" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename PointerToMemberFunction&amp;gt; QMetaObject::Connection QScxmlStateMachine::connectToState()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1ae1b7158733173fbfc47bfd1a32296d3edc12c" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename PointerToMemberFunction&amp;gt; QSignalSpy::QSignalSpy()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4849790bb1a2a3b8ecc4003879b0ecb3a9fb1d69" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename PointerToMemberFunction&amp;gt; QSignalSpy::QSignalSpy(const &lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="748545a4a5777f75cbe07d8b76126bc6a7af340e" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename PointerToMemberFunction&amp;gt; QSignalTransition *QState::addTransition()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3edbce1cb8222ba190f6075bce3c5d0a72d5c15" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename PointerToMemberFunction&amp;gt; QSignalTransition::QSignalTransition()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfe4d2a1dff8461dc2fbdcb5005fd32b52c0805d" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename PointerToMemberFunction&amp;gt; QSignalTransition::QSignalTransition(const &lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2005a1441f8e0ed9f3cbc6307357ef60d1a95ad8" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename PointerToMemberFunction&amp;gt; bool QObject::disconnect()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7cb7d0cecafe889b8bee49ebfbdcf766a8ba6f4" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename PointerToMemberFunction&amp;gt; std::function&amp;lt;void ()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4c13a3cc38e34cedb5820b77ee2d563f997ba16" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename PointerToMemberFunction&amp;gt; void QTimer::singleShot()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7c2b9877a56303618c834d0c4b148714d49062a" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename PointerToMemberFunction, typename Functor&amp;gt; QMetaObject::Connection QObject::connect()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f04a72d052a5e71bd564efae496d8bfa95939987" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename QNativeInterface&amp;gt; QNativeInterface *QOffscreenSurface::nativeInterface() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9dae0a8f8dd6757ab4146937f6fb1b5e8244643" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename QNativeInterface&amp;gt; QNativeInterface *QOpenGLContext::nativeInterface() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13e308da5214b6babbcef89f53fd8685097be1ab" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename QNativeInterface&amp;gt; QNativeInterface *QSGTexture::nativeInterface() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86bc266a4e1d3b27c800a8e54bc629c168b33ca6" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename RContainer&amp;gt; RContainer QStringTokenizer::toContainer(RContainer &amp;amp;&amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0256fabec412b4a9b9e0f9aa9bb1582f385e268" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Rep, typename Period&amp;gt; &lt;a href=&quot;qdeadlinetimer#QDeadlineTimer&quot;&gt;QDeadlineTimer&lt;/a&gt; &amp;amp;QDeadlineTimer::operator=(std::chrono::duration&amp;lt;Rep, Period&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be21ec3b460408c2456a1bf96116f3856e5cbca6" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Rep, typename Period&amp;gt; QDeadlineTimer &amp;amp;QDeadlineTimer::operator=()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d836fbec5595dc79ee31721c0aa35a63569bcacd" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Rep, typename Period&amp;gt; QDeadlineTimer::QDeadlineTimer()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d9c939be66e4ba5d32436823d646e0acba29823" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Rep, typename Period&amp;gt; QDeadlineTimer::QDeadlineTimer(std::chrono::duration&amp;lt;Rep, Period&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b89066cba27f6f02eaa9ac5c8dd676818f933ad8" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Rep, typename Period&amp;gt; bool QMutex::try_lock_for()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccf571904d2d2c7aaab4fae8963b01834dcea39a" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Rep, typename Period&amp;gt; bool QMutex::try_lock_for(std::chrono::duration&amp;lt;Rep, Period&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d99a1e5742c718303b3aa55b06b5980853f8ebad" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Rep, typename Period&amp;gt; void QDeadlineTimer::setRemainingTime()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af7de67a0b4dfb293a23b6f113971b7f48c4f4ff" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Rep, typename Period&amp;gt; void QDeadlineTimer::setRemainingTime(std::chrono::duration&amp;lt;Rep, Period&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff8c04bb8c6156c3420085d797b70830927652c2" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename ResultType, typename Iterator, typename KeepFunctor, typename ReduceFunctor&amp;gt; &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;&amp;lt;ResultType&amp;gt; QtConcurrent::filteredReduced(&lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt; *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="329b6913c4ebcc7827c7ea5ff330e676d34e41c6" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename ResultType, typename Iterator, typename KeepFunctor, typename ReduceFunctor&amp;gt; &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;&amp;lt;ResultType&amp;gt; QtConcurrent::filteredReduced(Iterator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e367b069c58c35f383e3aeb6077a5b564149848" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename ResultType, typename Iterator, typename KeepFunctor, typename ReduceFunctor&amp;gt; QFuture&amp;lt;ResultType&amp;gt; QtConcurrent::filteredReduced()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb7abfb370f957f145325747f83d629a0bcedcf8" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename ResultType, typename Iterator, typename KeepFunctor, typename ReduceFunctor&amp;gt; ResultType QtConcurrent::blockingFilteredReduced()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19925d186d39c0cf26299b755fd8c8d265a0035d" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename ResultType, typename Iterator, typename KeepFunctor, typename ReduceFunctor&amp;gt; ResultType QtConcurrent::blockingFilteredReduced(&lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt; *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4651a590aa531e0e18af2ca6eff41978b11a9ec3" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename ResultType, typename Iterator, typename KeepFunctor, typename ReduceFunctor&amp;gt; ResultType QtConcurrent::blockingFilteredReduced(Iterator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72a1b659e3bc1d32c224ce8ada9c999f32d3e230" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename ResultType, typename Iterator, typename KeepFunctor, typename ReduceFunctor, typename InitialValueType&amp;gt; &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;&amp;lt;ResultType&amp;gt; QtConcurrent::filteredReduced(&lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt; *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc0cd427bed049d744dd0a20cc83d22c82fe62cc" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename ResultType, typename Iterator, typename KeepFunctor, typename ReduceFunctor, typename InitialValueType&amp;gt; &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;&amp;lt;ResultType&amp;gt; QtConcurrent::filteredReduced(Iterator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28bd03a4f8a9bad55b94ca3eabaea3cc4ccf0ea3" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename ResultType, typename Iterator, typename KeepFunctor, typename ReduceFunctor, typename InitialValueType&amp;gt; ResultType QtConcurrent::blockingFilteredReduced(&lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt; *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d58d47aa53a7fec262736cf5ab7474333a08e6b" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename ResultType, typename Iterator, typename KeepFunctor, typename ReduceFunctor, typename InitialValueType&amp;gt; ResultType QtConcurrent::blockingFilteredReduced(Iterator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="998ad57c8d4bf7f82330b121cee5c89c0aedfe20" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename ResultType, typename Iterator, typename MapFunctor, typename ReduceFunctor&amp;gt; &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;&amp;lt;ResultType&amp;gt; QtConcurrent::mappedReduced(&lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt; *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8372f36c30a5fa6a9f7605b9e21c6dbd5372ee34" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename ResultType, typename Iterator, typename MapFunctor, typename ReduceFunctor&amp;gt; &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;&amp;lt;ResultType&amp;gt; QtConcurrent::mappedReduced(Iterator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b57f91e98cf0cb807082b141b341834610838d6" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename ResultType, typename Iterator, typename MapFunctor, typename ReduceFunctor&amp;gt; QFuture&amp;lt;ResultType&amp;gt; QtConcurrent::mappedReduced()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72f15ade97edc421527772181ea20888b27fe1ff" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename ResultType, typename Iterator, typename MapFunctor, typename ReduceFunctor&amp;gt; ResultType QtConcurrent::blockingMappedReduced()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02b90913a1b1110e9d30f0155baf2df8efd35eca" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename ResultType, typename Iterator, typename MapFunctor, typename ReduceFunctor&amp;gt; ResultType QtConcurrent::blockingMappedReduced(&lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt; *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bd144c6705b140127c5caf526486390d3858dd5" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename ResultType, typename Iterator, typename MapFunctor, typename ReduceFunctor&amp;gt; ResultType QtConcurrent::blockingMappedReduced(Iterator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61fea626ea8c7553e0b1b022b5c02a0e364758a5" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename ResultType, typename Iterator, typename MapFunctor, typename ReduceFunctor, typename InitialValueType&amp;gt; &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;&amp;lt;ResultType&amp;gt; QtConcurrent::mappedReduced(&lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt; *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="842df9c36397df6c4fdf00e8d0882b185aa65a86" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename ResultType, typename Iterator, typename MapFunctor, typename ReduceFunctor, typename InitialValueType&amp;gt; &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;&amp;lt;ResultType&amp;gt; QtConcurrent::mappedReduced(Iterator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ddf44a6e3599df1827b5a2e357ab22626f39d35" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename ResultType, typename Iterator, typename MapFunctor, typename ReduceFunctor, typename InitialValueType&amp;gt; ResultType QtConcurrent::blockingMappedReduced(&lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt; *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25b74604b191b5ed0bc1c2be288a24d35c36dbd5" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename ResultType, typename Iterator, typename MapFunctor, typename ReduceFunctor, typename InitialValueType&amp;gt; ResultType QtConcurrent::blockingMappedReduced(Iterator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f0ee143a5950bd58746a4cdc717bc0d493a8362" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename ResultType, typename Sequence, typename KeepFunctor, typename ReduceFunctor&amp;gt; &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;&amp;lt;ResultType&amp;gt; QtConcurrent::filteredReduced(&lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt; *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b1796293a3b8150e88f2a8a011898e5b0de0768" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename ResultType, typename Sequence, typename KeepFunctor, typename ReduceFunctor&amp;gt; &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;&amp;lt;ResultType&amp;gt; QtConcurrent::filteredReduced(Sequence &amp;amp;&amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fe25ef36785b3bd505da44b1bbb58a3f19e5e9e" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename ResultType, typename Sequence, typename KeepFunctor, typename ReduceFunctor&amp;gt; &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;&amp;lt;ResultType&amp;gt; QtConcurrent::filteredReduced(const Sequence &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d15787245b573a99147039bbe0c70a6200edf74" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename ResultType, typename Sequence, typename KeepFunctor, typename ReduceFunctor&amp;gt; QFuture&amp;lt;ResultType&amp;gt; QtConcurrent::filteredReduced()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2229476c7d64ea68d1c185459fa89146d3f17084" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename ResultType, typename Sequence, typename KeepFunctor, typename ReduceFunctor&amp;gt; ResultType QtConcurrent::blockingFilteredReduced()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0bc7845a85c28b79cb491c3c547695eacd64a49" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename ResultType, typename Sequence, typename KeepFunctor, typename ReduceFunctor&amp;gt; ResultType QtConcurrent::blockingFilteredReduced(&lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt; *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ec75cac675e231181e3042304604b27fe6986ed" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename ResultType, typename Sequence, typename KeepFunctor, typename ReduceFunctor&amp;gt; ResultType QtConcurrent::blockingFilteredReduced(Sequence &amp;amp;&amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe9d57f06d159e4ba04d00ad8f89c9ea963ce10d" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename ResultType, typename Sequence, typename KeepFunctor, typename ReduceFunctor&amp;gt; ResultType QtConcurrent::blockingFilteredReduced(const Sequence &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2340997ed72cd4df590cf824460f7f57f92a2fc0" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename ResultType, typename Sequence, typename KeepFunctor, typename ReduceFunctor, typename InitialValueType&amp;gt; &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;&amp;lt;ResultType&amp;gt; QtConcurrent::filteredReduced(&lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt; *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5fd38733ef0fdf77e9df0d69ffa7c58ed20c02a" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename ResultType, typename Sequence, typename KeepFunctor, typename ReduceFunctor, typename InitialValueType&amp;gt; &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;&amp;lt;ResultType&amp;gt; QtConcurrent::filteredReduced(Sequence &amp;amp;&amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02261de93ab2c111d87ae6140f862cf09db288a3" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename ResultType, typename Sequence, typename KeepFunctor, typename ReduceFunctor, typename InitialValueType&amp;gt; ResultType QtConcurrent::blockingFilteredReduced(&lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt; *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9affc791acbd891e776d34d0e9ee63e774cc97ed" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename ResultType, typename Sequence, typename KeepFunctor, typename ReduceFunctor, typename InitialValueType&amp;gt; ResultType QtConcurrent::blockingFilteredReduced(Sequence &amp;amp;&amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1cf1034ec145360cdd7d6a3de6b15ec5c6f7e4a" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename ResultType, typename Sequence, typename MapFunctor, typename ReduceFunctor&amp;gt; &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;&amp;lt;ResultType&amp;gt; QtConcurrent::mappedReduced(&lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt; *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0acdb99aee53f3614b22fa7e86d92a149f4946cb" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename ResultType, typename Sequence, typename MapFunctor, typename ReduceFunctor&amp;gt; &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;&amp;lt;ResultType&amp;gt; QtConcurrent::mappedReduced(Sequence &amp;amp;&amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="782cc4ea2a1a9d68329b8b1e7f6625960dd4f8a1" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename ResultType, typename Sequence, typename MapFunctor, typename ReduceFunctor&amp;gt; &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;&amp;lt;ResultType&amp;gt; QtConcurrent::mappedReduced(const Sequence &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a08059febcf2865dda85d5e0ce7d1400b61bc60a" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename ResultType, typename Sequence, typename MapFunctor, typename ReduceFunctor&amp;gt; QFuture&amp;lt;ResultType&amp;gt; QtConcurrent::mappedReduced()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcdfb82cc407de668302954bb2eab424e88d31f3" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename ResultType, typename Sequence, typename MapFunctor, typename ReduceFunctor&amp;gt; ResultType QtConcurrent::blockingMappedReduced()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1b9e38ed52c779a588631d10a446d9b57ccf9ee" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename ResultType, typename Sequence, typename MapFunctor, typename ReduceFunctor&amp;gt; ResultType QtConcurrent::blockingMappedReduced(&lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt; *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6fa3f2d471f42854aaffa6a472113d4d41ce870" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename ResultType, typename Sequence, typename MapFunctor, typename ReduceFunctor&amp;gt; ResultType QtConcurrent::blockingMappedReduced(Sequence &amp;amp;&amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="998145de43de44cdea4c5f5aea4605e1b87e7b8b" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename ResultType, typename Sequence, typename MapFunctor, typename ReduceFunctor&amp;gt; ResultType QtConcurrent::blockingMappedReduced(const Sequence &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e1678a6cabb776a487f8de71cc21c1bd96591eb" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename ResultType, typename Sequence, typename MapFunctor, typename ReduceFunctor, typename InitialValueType&amp;gt; &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;&amp;lt;ResultType&amp;gt; QtConcurrent::mappedReduced(&lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt; *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d83b706d78f55d25b0d0d7739584c6ecb6ee8489" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename ResultType, typename Sequence, typename MapFunctor, typename ReduceFunctor, typename InitialValueType&amp;gt; &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;&amp;lt;ResultType&amp;gt; QtConcurrent::mappedReduced(Sequence &amp;amp;&amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="399b7523ebb8ba719ff5d3a88d4842d3b812cc17" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename ResultType, typename Sequence, typename MapFunctor, typename ReduceFunctor, typename InitialValueType&amp;gt; ResultType QtConcurrent::blockingMappedReduced(&lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt; *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ca4737c1b35072b323dfdfef74137d2b4b8145e" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename ResultType, typename Sequence, typename MapFunctor, typename ReduceFunctor, typename InitialValueType&amp;gt; ResultType QtConcurrent::blockingMappedReduced(Sequence &amp;amp;&amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d7702c955692b62fa119e5e3bf2262162d8821d" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Sender, typename Signal, typename&amp;gt; &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;&amp;lt;ArgsType&amp;lt;Signal&amp;gt; &amp;gt; QtFuture::connect(Sender *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f841d20397ac872fbc3fd4588bbd05d64b29fa36" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Sequence, typename Iterator, typename MapFunctor&amp;gt; Sequence QtConcurrent::blockingMapped()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d0a2c7c0bc0e896868b1575f92b345f71c9cd7c" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Sequence, typename Iterator, typename MapFunctor&amp;gt; Sequence QtConcurrent::blockingMapped(&lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt; *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dbe0f72915e0091d67785aa25fc08a21eac0bd2" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Sequence, typename Iterator, typename MapFunctor&amp;gt; Sequence QtConcurrent::blockingMapped(Iterator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9f3d2d8728d4f75963df3f3810d96ba126b9e17" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Sequence, typename KeepFunctor&amp;gt; &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;&amp;lt;typenameSequence::value_type&amp;gt; QtConcurrent::filtered(const Sequence &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be9d7bfdc07faf1d4d6df0dc6b2e9def87464818" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Sequence, typename KeepFunctor&amp;gt; &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;&amp;lt;typenamestd::decay_t&amp;lt;Sequence&amp;gt;::value_type&amp;gt; QtConcurrent::filtered(&lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt; *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eefcf5ce5e72770f3f5f6a63c3ae41c777a84462" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Sequence, typename KeepFunctor&amp;gt; &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;&amp;lt;typenamestd::decay_t&amp;lt;Sequence&amp;gt;::value_type&amp;gt; QtConcurrent::filtered(Sequence &amp;amp;&amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c09ef7b8565220e8681f3a17c10aed5ebacfa174" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Sequence, typename KeepFunctor&amp;gt; &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;&amp;lt;void&amp;gt; QtConcurrent::filter(&lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt; *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbac9384d138c9fd2fe4a4f0f7577ba3d9d3d46c" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Sequence, typename KeepFunctor&amp;gt; &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;&amp;lt;void&amp;gt; QtConcurrent::filter(Sequence &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b479aaf3675455a87d7392bc1fbaf077b7c4c58" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Sequence, typename KeepFunctor&amp;gt; QFuture&amp;lt;typename Sequence::value_type&amp;gt; QtConcurrent::filtered()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2d99332cdcf32a67cf4f05abbfe939b44fc752f" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Sequence, typename KeepFunctor&amp;gt; QFuture&amp;lt;void&amp;gt; QtConcurrent::filter()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bff8f8b4051ac6756d715fe1016f7e1d43164c3" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Sequence, typename KeepFunctor&amp;gt; Sequence QtConcurrent::blockingFiltered()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd7067015e1b5d546ee4cc42295455d89ff84ec9" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Sequence, typename KeepFunctor&amp;gt; Sequence QtConcurrent::blockingFiltered(const Sequence &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e311b5d5bde5e1963f943494cc45dc02a09f695b" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Sequence, typename KeepFunctor&amp;gt; std::decay_t&amp;lt;Sequence&amp;gt; QtConcurrent::blockingFiltered(&lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt; *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59f5c26eda90549fe2ea5e38a332ff27b4ac6be3" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Sequence, typename KeepFunctor&amp;gt; std::decay_t&amp;lt;Sequence&amp;gt; QtConcurrent::blockingFiltered(Sequence &amp;amp;&amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e8e7104e0d84ff70b63c665217d9225799a8385" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Sequence, typename KeepFunctor&amp;gt; void QtConcurrent::blockingFilter()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5813e5fe7f63b960968b815a15bc84806bc3bf0f" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Sequence, typename KeepFunctor&amp;gt; void QtConcurrent::blockingFilter(&lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt; *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a034278e69c81b7364462f6b02ae95de33f8319" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Sequence, typename KeepFunctor&amp;gt; void QtConcurrent::blockingFilter(Sequence &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75affc490670ad216d486eabb706b5e798eca800" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Sequence, typename MapFunctor&amp;gt; &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;&amp;lt;QtPrivate::MapResultType&amp;lt;Sequence, MapFunctor&amp;gt; &amp;gt; QtConcurrent::mapped(&lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt; *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7a4bf2ca64f6ce72171928cdd9a81ba3885fbbf" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Sequence, typename MapFunctor&amp;gt; &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;&amp;lt;QtPrivate::MapResultType&amp;lt;Sequence, MapFunctor&amp;gt; &amp;gt; QtConcurrent::mapped(Sequence &amp;amp;&amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4344bbcdc464c128a622044ab582bc3eeb181a12" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Sequence, typename MapFunctor&amp;gt; &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;&amp;lt;typenameQtPrivate::MapResultType&amp;lt;void, MapFunctor&amp;gt;::ResultType&amp;gt; QtConcurrent::mapped(const Sequence &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c026b1c31479ca3e1e001b66a880e09754ef55a2" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Sequence, typename MapFunctor&amp;gt; &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;&amp;lt;void&amp;gt; QtConcurrent::map(&lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt; *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="318308f57e681f514e494e35f53ab26e893aa201" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Sequence, typename MapFunctor&amp;gt; &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;&amp;lt;void&amp;gt; QtConcurrent::map(Sequence &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33604fe13f0881540061607bcab4ab4444722efd" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Sequence, typename MapFunctor&amp;gt; &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;&amp;lt;void&amp;gt; QtConcurrent::map(Sequence &amp;amp;&amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="788426b650c1759c70e16704cdfeffecc3f3ef54" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Sequence, typename MapFunctor&amp;gt; QFuture&amp;lt;typename QtPrivate::MapResultType&amp;lt;void, MapFunctor&amp;gt;::ResultType&amp;gt; QtConcurrent::mapped()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73b9f30f1c3c647673299b2309ab4463f50ef166" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Sequence, typename MapFunctor&amp;gt; QFuture&amp;lt;void&amp;gt; QtConcurrent::map()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e3ed8b648bec24064f1427784c031f4f619aee9" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Sequence, typename MapFunctor&amp;gt; void QtConcurrent::blockingMap()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fd5c4ab5fb019d83c9ccda2c255d330cb223c69" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Sequence, typename MapFunctor&amp;gt; void QtConcurrent::blockingMap(&lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt; *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="700cf016c8c1a222694220129e4d4ba0772eff29" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Sequence, typename MapFunctor&amp;gt; void QtConcurrent::blockingMap(Sequence &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d0aa8ad861f7cb3da0d5e05a9f51e1ffe46fed7" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Sequence, typename MapFunctor&amp;gt; void QtConcurrent::blockingMap(Sequence &amp;amp;&amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="969dd7c28aad51135363af33a41e80d9fbbe05a8" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename State&amp;gt; class QSGSimpleMaterial</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a53f19e9e3423b60175971b3e47eabe88b8840a3" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename State&amp;gt; class QSGSimpleMaterialShader</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03960198a13d232db56ce0fea9950a94cbf9f017" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename StdBasicString, if_compatible_string&amp;lt;StdBasicString&amp;gt;&amp;gt; QStringView::QStringView()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5a22920c74d93008e9fe9b3ada647ce4b591155" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename StdBasicString, if_compatible_string&amp;lt;StdBasicString&amp;gt;&amp;gt; QStringView::QStringView(const StdBasicString &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f73c3f5c033d4c2b146014ad22fe5d0dcd64488" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; &lt;a href=&quot;qandroidjniobject#QAndroidJniObject&quot;&gt;QAndroidJniObject&lt;/a&gt; &amp;amp;QAndroidJniObject::operator=(T</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5eab0adf5fbb177ed226243763b60224aa116a82" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; &lt;a href=&quot;qandroidjniobject#QAndroidJniObject&quot;&gt;QAndroidJniObject&lt;/a&gt; QAndroidJniObject::callObjectMethod(const char *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fb5f3490a173c18cf90cd6f2cce8adcb29c14a2" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; &lt;a href=&quot;qandroidjniobject#QAndroidJniObject&quot;&gt;QAndroidJniObject&lt;/a&gt; QAndroidJniObject::getObjectField(const char *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17e047394606a7c391f568a7bf042f8871c3af3f" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; &lt;a href=&quot;qdatastream&quot;&gt;QDataStream&lt;/a&gt; &amp;amp;operator&amp;gt;&amp;gt;(&lt;a href=&quot;qdatastream&quot;&gt;QDataStream&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="522dd12cd6b65ebb3dc9efc70bbc828a3a65059e" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; &lt;a href=&quot;qdatastream&quot;&gt;QDataStream&lt;/a&gt; &amp;amp;operator&amp;lt;&amp;lt;(&lt;a href=&quot;qdatastream&quot;&gt;QDataStream&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7f54ed06fd9855cd1f6bf5d8ec05c3343b3847e" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; &lt;a href=&quot;qdebug&quot;&gt;QDebug&lt;/a&gt;operator&amp;lt;&amp;lt;(&lt;a href=&quot;qdebug&quot;&gt;QDebug&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbc4e1b9f74cc49951efe23fd9a66ec55d923623" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; &lt;a href=&quot;qdebug#QDebug&quot;&gt;QDebug&lt;/a&gt;operator&amp;lt;&amp;lt;(&lt;a href=&quot;qdebug#QDebug&quot;&gt;QDebug&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fa7c27862713bbc0804c140e08ee3d2cf936457" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;&amp;lt;T&amp;gt; QtConcurrent::run(&lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt; *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81c3b42a8d3c00587a12eaf5e4161138159225d3" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;&amp;lt;T&amp;gt; QtConcurrent::run(Function</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05defc5ca430afa30a99858c57a3bf95eab10629" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; &lt;a href=&quot;qjsvalue&quot;&gt;QJSValue&lt;/a&gt; QJSEngine::newQMetaObject()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b61b7a5bf7c0dd96541d02b550923b1e1c68c1d" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; &lt;a href=&quot;qjsvalue&quot;&gt;QJSValue&lt;/a&gt; QJSEngine::toScriptValue(const T &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b479d3000b0bab0d2bdbe9ee8355b161a60d61b" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;T *&amp;gt; QEntity::componentsOfType() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c001c6f4d1fbef15cfb35c185ee8fb37bb09ee8b" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;T&amp;gt; QObject::findChildren(const &lt;a href=&quot;qregularexpression&quot;&gt;QRegularExpression&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="920b73a5926ff350988a04019b1f643439203c1e" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;T&amp;gt; QObject::findChildren(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28d446ef976414b8a230d3eff3095ab3047cb2fd" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;T&amp;gt; qFindChildren(const &lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f34afc2b6e93fb040251ba6ec49e1d17bf17219b" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; &lt;a href=&quot;qmetatype&quot;&gt;QMetaType&lt;/a&gt;qDBusRegisterMetaType()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20a86ddd35c4a1a6065250652f9855f6c8a872d8" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; &lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *qmlAttachedPropertiesObject(const &lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="578f7ab18bcd4f2564c0b4114fb8a24df428ecdd" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; &lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt; QRemoteObjectNode::instances() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27a4ae041af97f445dad6a1054731df24be014c4" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; &lt;a href=&quot;qt3dcore-qnodeid#QNodeIdVector-typedef&quot;&gt;Qt3DCore::QNodeIdVector&lt;/a&gt;qIdsForNodes(const T &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc0f734d9a4a2bc2a8af6b7fcba5234fa9dc2f8a" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; &lt;a href=&quot;qtglobal#qintptr-typedef&quot;&gt;qintptr&lt;/a&gt; Qt3DCore::functorTypeId()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2121bc24869b9bfafa1031709f53a98ffc278631" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; &lt;a href=&quot;qtglobal#qintptr-typedef&quot;&gt;qintptr&lt;/a&gt; Qt3DRender::functorTypeId()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fd4bd0ace33c46fe908cd304fd6f367860c3f5e" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; &lt;a href=&quot;qtglobal#uint-typedef&quot;&gt;uint&lt;/a&gt;qHash(const &lt;a href=&quot;qlist#QList&quot;&gt;QList&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bce048d329011492e923b7909930189782a762e" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; &lt;a href=&quot;qtglobal#uint-typedef&quot;&gt;uint&lt;/a&gt;qHash(const &lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e411f520b542448de1d8a856a3eb6f5bf65ca67" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; &lt;a href=&quot;qtglobal#uint-typedef&quot;&gt;uint&lt;/a&gt;qHash(const &lt;a href=&quot;qvector#QVector&quot;&gt;QVector&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b195309299ade7ea426cdf3190ce2a95936a15da" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; &lt;a href=&quot;qtglobal#uint-typedef&quot;&gt;uint&lt;/a&gt;qHash(const T *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9aa744db9b88ff3c1e08c1a04cf819fddf529209" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;T *&amp;gt; QEntity::componentsOfType() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfae6c230231dc20051d3a8ae1e1c1be7ad5256e" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; QAndroidJniObject &amp;amp;QAndroidJniObject::operator=()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d14a2c4564b23162097619a52b44d6092e57b621" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; QAndroidJniObject QAndroidJniObject::callObjectMethod()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="144a6f694d6ecd09746576806fd40ed24c5e6812" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; QAndroidJniObject QAndroidJniObject::callStaticObjectMethod()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bbb0ef94e7a5ab51407a24fa2564b68456c47df" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; QAndroidJniObject QAndroidJniObject::getObjectField()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c83d66d5dd879da3c7c2ac99ce65242801a2427" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; QAndroidJniObject QAndroidJniObject::getStaticObjectField()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58e72d3d3b26f0c8295df4209f1e6c1fd7543806" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; QDataStream &amp;amp;operator&amp;gt;&amp;gt;()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2980abf91625b728d69aa6a59dfb6645a7972235" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; QDataStream &amp;amp;operator&amp;lt;&amp;lt;()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f043fdc0f09ae5ecc6e8106ff4d7196b9bcf9d8" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; QDataStreamIfHasIStreamOperators&amp;lt;T&amp;gt; operator&amp;gt;&amp;gt;(&lt;a href=&quot;qdatastream&quot;&gt;QDataStream&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc7e6578bf4411a951b9272e78d0f61317025c5f" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; QDataStreamIfHasOStreamOperators&amp;lt;T&amp;gt; operator&amp;lt;&amp;lt;(&lt;a href=&quot;qdatastream&quot;&gt;QDataStream&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eadb2ec041e04f548a1ec8c7d8df8924174eb962" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; QDebug operator&amp;lt;&amp;lt;()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49fff3b87336be099daeee27841f9e09525bea91" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; QDebugIfHasDebugStream&amp;lt;T&amp;gt; operator&amp;lt;&amp;lt;(&lt;a href=&quot;qdebug#QDebug&quot;&gt;QDebug&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd523ed3886f3fcef3e90107ce1404d49b807526" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; QFuture&amp;lt;T&amp;gt; QtConcurrent::run()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e374fd907da026a7a9c16c1e35f566889ac0a5cb" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; QJSValue QJSEngine::newQMetaObject()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46fc13caad2779277e578c05150427595cbf882d" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; QJSValue QJSEngine::toScriptValue()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42c4e93ee53209428e7eeed8999e14e1b0c9b103" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; QList&amp;lt;T&amp;gt; QObject::findChildren()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4d0a11eb0c2dd2565d3dbd1bfbbb85425a7a9d5" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; QList&amp;lt;T&amp;gt; qFindChildren()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="764334c5b78e230274b7fab4f3c3bf07d650de31" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; QMetaEnum QMetaEnum::fromType()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3adff29c56c4efa52a9483cc67dc8f9cb7bf3af2" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; QMetaType QMetaType::fromType()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1ec824534bd5e11dc1373ece6c3f0a9d9e4ade6" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; QObject *qmlAttachedPropertiesObject()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fde58faaefebf945700eced27d8fc2be444b0fb" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; QStringList QRemoteObjectNode::instances()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27e127bed5233e8ab3410c7336bdff9242052930" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; QVariant QVariant::fromValue()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8af2adf39b6806082f8570b111f10b90d28f3034" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; QVector&amp;lt;T *&amp;gt; Qt3DCore::componentsOfType()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d66e5e8576a38577233799c4e678842ff18a4888" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; Qt3DCore::QNodeIdVector qIdsForNodes()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c5d1ce07abd0e6cd774e1bb43abebaada03c8c7" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; Qt3DCore::QNodeIdVectorqIdsForNodes(const T &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dee37601ed611fea8029c6bf2a317693508a549a" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; Qt3DCore::Qt3DCoreIdVector qIdsForNodes()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="852d9bb20fc767883229fdc71be91587f1862f80" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; T *QSensorBackend::setReading()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b10730f36a247b0f17cb8567195d4589477a549" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; T *QSensorBackend::setReading(T *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cc10c505caa2c9616f9bca89e0b38659c082152" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; T *q_check_ptr()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e952ce1b41b7c7c7f0387d3727082716b862ec9" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; T *q_check_ptr(T *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cfe01fb342d586bf49b8cc0dd28c5b9b52aa2b3" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; T QAndroidJniObject::callMethod()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db878dd0384f4e93e18a307809a7fab6eba57abe" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; T QAndroidJniObject::callMethod(const char *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c64c5722d41f8f1ff803fde1096cfc67e4bbd03" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; T QAndroidJniObject::callStaticMethod()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b7934477f21709641f044ff41ac3759bb00b7f9" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; T QAndroidJniObject::getField()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14e6192f6ac76ec86d2b2338d5f994eefb985e2b" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; T QAndroidJniObject::getField(const char *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc0795ef6172bd921d2a60e392b7a86cdd602d50" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; T QAndroidJniObject::getStaticField()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4784b118a8e9481e748c8191fe3aaaf7990e8405" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; T QAndroidJniObject::object()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21a6bc7963f9a79969f994ccd99ee3b30eb6ab8e" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; T QAndroidJniObject::object() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f368648415999741f1b93e3c06ec07ac99a2b87" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; T QJSEngine::fromScriptValue()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cccde344163acda23c3110b9f3bcd9e7e47aa91" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; T QJSEngine::fromScriptValue(const &lt;a href=&quot;qjsvalue&quot;&gt;QJSValue&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7637f6fa4e14846969f1624239d4c040ab190c1" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; T QMediaService::requestControl()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be0058bcbb48131d82f72907b4ae761c829f117e" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; T QObject::findChild()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e13e600046b4a228b44989c3416989dc319a866" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; T QObject::findChild(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f016a642a0826bc545e95429af8b2b9ebab9794" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; T QQmlEngine::singletonInstance()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="574e35fe161981968f391a721f7135a23e293137" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; T QQmlEngine::singletonInstance(int</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d987a655b92fd1887773abc4feb89b607adc29d2" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; T QVariant::value()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17054a53cbdcdaea810fc202934c85b4a0e01a7f" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; T QVariant::value() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b0f1b05845e6914ce78046e94b83c4372862f1c" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; T QVariant::view()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e28a0332de4d44a172c4bdc3083f136fef062ac" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; T qAbs()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1ef1e63795b9bed554f9de8949b0127af143394" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; T qdbus_cast()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9444dc244a418ef259760cda59d872f27746f7ee" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; T qgraphicsitem_cast()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fd9dd1a53d7a3381c860e5b2f6dd8ef683884dc" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; T qobject_cast()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d96c62d47762678a756feed49232f07aa492f61" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; T qstyleoption_cast()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d4a14886e8afb0089c7292245a762cb96553e7c" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; T qt_extension()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68435f0d137e888882c3a199221262fa6f182cbb" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; T qvariant_cast()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdcb2c9f129107e2740d9d6abc993949a8860a70" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; TqAbs(const T &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e589bdf359e2f318d279462b36e949b885163e46" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; Tqdbus_cast(const &lt;a href=&quot;qdbusargument#QDBusArgument&quot;&gt;QDBusArgument&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4fc3ea75af06b82ef229a88fd58ad8d3dfa61fe" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; Tqgraphicsitem_cast(&lt;a href=&quot;qgraphicsitem#QGraphicsItem&quot;&gt;QGraphicsItem&lt;/a&gt; *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8736cdf55d378f833ca9b3846b411b9982396ef1" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; Tqobject_cast(&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d33d9e755dfbaaf1271c4f4d8f3260dd2d2e542" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; Tqobject_cast(const &lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="406e70745fc090f3acec41d8d8b79ca20671adac" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; Tqstyleoption_cast(&lt;a href=&quot;qstylehintreturn#QStyleHintReturn&quot;&gt;QStyleHintReturn&lt;/a&gt; *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bdb50e1e4c0b977f137a477578466680145755e" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; Tqstyleoption_cast(&lt;a href=&quot;qstyleoption#QStyleOption&quot;&gt;QStyleOption&lt;/a&gt; *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4e70508160f9f8064d22b53cb7f096f19a67617" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; Tqstyleoption_cast(const &lt;a href=&quot;qstylehintreturn#QStyleHintReturn&quot;&gt;QStyleHintReturn&lt;/a&gt; *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06cc32d196cb68391112a5696575d08bf6ec5d76" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; Tqstyleoption_cast(const &lt;a href=&quot;qstyleoption#QStyleOption&quot;&gt;QStyleOption&lt;/a&gt; *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b767d780c71ba057a370fc70790328125561e039" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; Tqt_extension(&lt;a href=&quot;qabstractextensionmanager&quot;&gt;QAbstractExtensionManager&lt;/a&gt; *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ba8d164d6cc24b26d5889f67a5e59f1a78fb0f1" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; Tqvariant_cast(const &lt;a href=&quot;qvariant#QVariant&quot;&gt;QVariant&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86312a6a728f2cc9e3121e0a9ffd6b70ac95533d" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; auto qConstOverload()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1615357b172ef1ff40378ae15146e1041854a32f" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; auto qNonConstOverload()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f6d74bfebd1baae8a69ed97544b540136ec1e3c" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; auto qOverload()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0f2c5f2109d513a4104ca56591550cf82f20449" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; autoqConstOverload(T</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3539d1a3bb4f5f4597f8597b756f32b43913da95" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; autoqNonConstOverload(T</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa310d4d3e9b5506d1c97c598fd3fb8844258e7d" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; autoqOverload(T</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48d2b6a0674053eaa1d0e1da7b70fd2dd8f68917" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; bool QMetaType::hasRegisteredComparators()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8d4c1a00fcb61f7941ae7eab411a8ab67728eaa" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; bool QMetaType::hasRegisteredDebugStreamOperator()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd2aa55fad91759e63f2bb55c79af09daf6d907e" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; bool QMetaType::registerComparators()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f1aaebb90e90b86d7fcca327ba56540ff1b0b24" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; bool QMetaType::registerDebugStreamOperator()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf3fcd676f5bf2283349dfde83fada51f395d356" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; bool QMetaType::registerEqualsComparator()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a10edff1cb2c648950fd3fb108944131553140c1" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; bool QNdefRecord::isRecordType()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ac050a2f4b416795badeb743fb4f744bb194636" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; bool QNdefRecord::isRecordType() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1543d5619a5c5df9a3061dfb1da3de73f6d8eff4" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; bool QVariant::canConvert()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b37fcf59eed3db7834d59ab52f63206dd1a29a25" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; bool QVariant::canConvert() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cbee56462e6dd44858943140c947af8f45b827f" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; bool QVariant::canView() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="914275790645dd390e2dd708cb312628bed18bb2" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; bool operator!=()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c106dddb5849d6203ef5eb4025f999b4ba401aae" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; bool operator&amp;gt;()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d87e2f2b95cb26106ebf8ffce7b59ab16841f376" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; bool operator&amp;gt;=()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dc244e28f801bc14a8c38f7d5c7e6473bd5451c" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; bool operator&amp;lt;()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7a94e4c5193b09f9d66facd1a53d127266e94b2" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; bool operator&amp;lt;=()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a1896496da6f1b505606bc32816898c45d2539b" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; bool operator==()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c4f000897b49d3fc25bd9ac7f29dd4cdc975949" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; booloperator!=(</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96607b316694bd5376ddda3a9762e8b13af9cc02" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; booloperator!=(T *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2976ddb354542b84aab0b12836ab68ab56e37a4" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; booloperator!=(const &lt;a href=&quot;qpointer#QPointer&quot;&gt;QPointer&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ba25f968b982915aae56a6a7596b49ad0bdc916" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; booloperator!=(const &lt;a href=&quot;qsharedpointer#QSharedPointer&quot;&gt;QSharedPointer&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4e3bbb25a2530ee20d588edf101d101b70077d3" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; booloperator!=(const &lt;a href=&quot;qweakpointer#QWeakPointer&quot;&gt;QWeakPointer&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8044a5b6fab012fcd51653f49a7f77a36f1bfd36" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; booloperator!=(const T *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2cca485a2f243749f6325adde63d95e2e7d7a30" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; booloperator&amp;gt;(const &lt;a href=&quot;qlist#QList&quot;&gt;QList&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5763fc0e44a30415a62abbcc113abf5f479ee3b2" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; booloperator&amp;gt;(const &lt;a href=&quot;qvector#QVector&quot;&gt;QVector&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddb04732e407044d06d2482bbb75e4091e3003cf" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; booloperator&amp;gt;=(const &lt;a href=&quot;qlist#QList&quot;&gt;QList&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4e14a695ad89590d0bab3de68e467dc9f66144a" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; booloperator&amp;gt;=(const &lt;a href=&quot;qvector#QVector&quot;&gt;QVector&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bca62ccae3691ccb9767591c9d3763cd53a12b41" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; booloperator&amp;lt;(const &lt;a href=&quot;qlist#QList&quot;&gt;QList&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17abb1837b474b12b2e5307d6ded4cd2046780d8" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; booloperator&amp;lt;(const &lt;a href=&quot;qvector#QVector&quot;&gt;QVector&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71a0005926f3a6351703a420cd9ec5b0533e8d25" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; booloperator&amp;lt;=(const &lt;a href=&quot;qlist#QList&quot;&gt;QList&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9551af2654fd5e221ded3d9c36076adcd83aeada" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; booloperator&amp;lt;=(const &lt;a href=&quot;qvector#QVector&quot;&gt;QVector&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2781e1b0da173892b11a1c06fe5a49e3547b4950" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; booloperator==(</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b026de3a8733b143fb7980adc417109956b1de3" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; booloperator==(T *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cf339850f918bf571787dfd75c7344c90295c53" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; booloperator==(const &lt;a href=&quot;qpointer#QPointer&quot;&gt;QPointer&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fd7a967cf9fe01c22c8ccaee65ec8813dc3bb98" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; booloperator==(const &lt;a href=&quot;qsharedpointer#QSharedPointer&quot;&gt;QSharedPointer&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3d3df21184b4aa8d624cf8a1b7267cfb7debafa" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; booloperator==(const &lt;a href=&quot;qweakpointer#QWeakPointer&quot;&gt;QWeakPointer&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="208fa0be6c3887e2491f05fedf64395b0b0ef74d" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; booloperator==(const T *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6da778be7373cfb9fafc34b70fa8a63ea2b22ac" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; char *QTest::toString()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e5afe0d95fcf0703c3d19ffe0e1bfcb729ed460" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; char *QTest::toString(const T &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e17309f7f49af629cc163efd8daf3cf8304d8ea3" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; class &lt;a href=&quot;https://doc.qt.io/qt-5.15/qt3dcore-module.html&quot;&gt;Qt3DCore&lt;/a&gt;::QNodeCreatedChange</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65351b63d349ef0bb2d061b85d6deb196ad6ae93" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; class QAtomicInteger</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="658fd65352026520b3fad72a19196fb44d82f09f" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; class QAtomicPointer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9f31304374bd568f93ddcb4672e2bbecf91bbdb" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; class QBEInteger</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f082a32a2303cb9b115ae6cdbb83237acd20b358" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; class QContiguousCache</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ec3fdb960dee9354c3f6c225f20777afff4bfd2" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; class QDBusReply</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42efdd6ccb8ce98e7976a3ebc421fe83ee339033" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; class QEnableSharedFromThis</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26d28073f9c6f055eb925b0f7ba7ad6ea8427421" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; class QExplicitlySharedDataPointer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="336429852ac5394044624444694ca81cdc3013b9" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; class QFuture</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4f862684593910df8fddd11a45a76af7ef7aca2" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; class QFutureIterator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75642e0225fad6f919b35ec0fda163315e7a7e7c" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; class QFutureSynchronizer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d681cbdda6acd23c4a8954404ff63b2543075098" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; class QFutureWatcher</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc017ade2402d3e1fd0785368f23fd4694aeb9c4" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; class QItemEditorCreator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd29ccbc7f9090a398ca30402f304dc8a027a546" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; class QLEInteger</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6cddd1722bdffb9b45788c45246a1c35d713ad6" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; class QLinkedList</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b7a813f67e3abc9ddd64bf8159ee5e1c830810a" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; class QLinkedListIterator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6bd06bde585844beb5a2561b71408eabe9258c5" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; class QList</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd34f832346b094e11769ab1daf993604080bf14" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; class QListIterator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81c1d2b68c3ca45a2451a36897dd56240d06eabe" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; class QMutableLinkedListIterator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab07c13fdf3cec02bdf6dea8b585fbaa69519ba1" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; class QMutableListIterator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d76689afd8361987b19994ff69d4f42d2066a52f" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; class QMutableSetIterator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c547eb38f4c08a6ab456ad5289475f699652a358" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; class QMutableVectorIterator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4720e62fc16f531fa117849189ca754f8970bff8" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; class QPointer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d4f0d4df68fb93f93bdf488a2e902c51fb068c2" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; class QPromise</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f651afc2828f968926db38ee82edeca380bbc0f" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; class QProperty</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6a50d5d73bb5a27b35d8b2cfcd19e0d4471a4b3" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; class QPropertyAlias</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffdbe7e156abfd4de860ee4443598caf580a80b4" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; class QPropertyData</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54c1b4564f01061e814fbe5d06cbd5122f74c08f" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; class QQmlListProperty</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14911d136b181d35eb7a470e04109d4f0887786a" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; class QQueue</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70ea8a9ffda4b8bee82296bad4e42127e2dff937" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; class QRemoteObjectPendingReply</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8286f1f1d6dfd4e2ef8baa9c409574c8e6236eea" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; class QScopedValueRollback</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8f52de71e6bdc46d92cedefc1215dbffb35ec56" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; class QSet</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cdb1b8d7c286a4fac76a9b726a0d541368c70d1" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; class QSetIterator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e2f718d76f645d2e801c75904560d4753d5dc7f" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; class QSharedDataPointer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8a351b72677ff9d333bc087d437e30282d8218c" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; class QSharedPointer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adf9be683f29c9aa3a25a8f900352441f4cdb7a0" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; class QSqlDriverCreator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f753d1a1b053c52e2154932e1aef8fcad297db5" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; class QStack</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8945918c5e924f15d77a3626c34fe5137b1daa20" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; class QStandardItemEditorCreator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd196983691c455d0853d15c3153b1e07091de76" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; class QThreadStorage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd5ed82537d29788df865282c8a3e25e771f8f15" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; class QVector</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fa1a8708017ed42e971acec360b8af14b8aeab5" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; class QVectorIterator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1db3ab2eee26228bf345e5c4af5ae4367c820de4" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; class QVulkanInfoVector</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46c0652d6b870bbf454a2866c55d13569d0b49ec" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; class QWeakPointer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a94d5f117742687aa9d1e39eaea899bf67b3070b" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; const T &amp;amp;qBound()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba2588daf34b60a319ab54946cb49943dda9e22f" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; const T &amp;amp;qBound(const T &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28787039af332c8432f2bd93f22c4999a33da28e" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; const T &amp;amp;qMax()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a029ee27fe67613ef1bba828b352d770ee54f2a" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; const T &amp;amp;qMax(const T &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ded7a1c6839f15befc31ec683416d93f294713dd" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; const T &amp;amp;qMin()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cc1c63084a4ff11e17adc42d2140c499b9b4b30" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; const T &amp;amp;qMin(const T &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23c1eefd6272f6056e50e1b0da85176292123ccd" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; const T *QAbstractFunctor::functor_cast(const &lt;a href=&quot;qt3dcore-qabstractfunctor&quot;&gt;Qt3DCore::QAbstractFunctor&lt;/a&gt; *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f565101105a6530eeed7b4279ac5cab020489f2c" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; const T *QAbstractFunctor::functor_cast(const &lt;a href=&quot;qt3drender-qabstractfunctor&quot;&gt;Qt3DRender::QAbstractFunctor&lt;/a&gt; *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3472ad8a249c73c08f0d974c63c13079fc27fd1" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; const T *Qt3DRender::functor_cast()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af5b8770e40be14355e5d2d318a117c8d0c84f22" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; int qDBusRegisterMetaType()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3699d93365b2f5235375e540391a6f2368e245fd" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; int qMetaTypeId()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b48e101fdf74aa143ecaa83e0df0cbdb7d01172c" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; int qRegisterMetaType()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c255f380efc3964f0c6bccced424d16d993d836" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; int qmlRegisterAnonymousType()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="065271ab8d0a32fbba295c7fa5f427c314a311b8" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; int qmlRegisterInterface()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14e41b9b62f333a72f6b48abe64a9a7ff5468584" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; int qmlRegisterSingletonType()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="760ebf622a6b99df931dfb5d6c9ff139c3fb51c2" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; int qmlRegisterType()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f514fa89e79fabeffd13f85613f21faf07ae04fd" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; int qmlRegisterUncreatableType()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b9f58240446423ec03c29d098a550dc176320f5" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; intqDBusRegisterMetaType()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88cecdb75f412553da0757e294e9f4cd4094f157" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; intqMetaTypeId()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f3f6881b5c4256f00f53105386e18a629372eb1" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; intqRegisterMetaType()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a60e5533812b326ce425b98e38d7f549b00dbf98" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; intqRegisterMetaType(const char *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb57f17d0c8010db8123c9b797e136db1f61f05f" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; intqmlRegisterAnonymousType(const char *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50f50992955b50b01379f7eb8857c9e4db1f4989" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; intqmlRegisterInterface(const char *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26c1bbea6e8eb331b484b17513c1a2a28e8eea14" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; intqmlRegisterSingletonType(const char *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fc5a1aafdb1b5e83be4f3e9cdd277896e59ef88" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; intqmlRegisterType(const char *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7390338a458107f34933506e551ed45d60e3deac" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; intqmlRegisterUncreatableType(const char *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f86d5b99e804e74cc184162307c1c3b49a84aeb" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; qintptr Qt3DRender::functorTypeId()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="794392189523a67cb1af93626db49e944f67255a" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; struct &lt;a href=&quot;qaudiobuffer&quot;&gt;QAudioBuffer&lt;/a&gt;::StereoFrame</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49706b22dab9c8d76dd11ea17bba75d0b802ceb0" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; typename std::add_const&amp;lt;T&amp;gt;::type &amp;amp;qAsConst()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe6e52a48cfdc7371397035b976dd29a76d8ae28" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; typenamestd::add_const&amp;lt;T&amp;gt;::type &amp;amp;qAsConst(T &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="234ee714dd274396ed19c7505d7a1074293c0e8b" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; uint qHash()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3af9c0b6ac15dbc80536c6bfd4addfa3c80bd48" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; void QAndroidJniObject::setField()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a18d0ad5d03f50ba5cc057d5c8e1d8f9bf23f2f" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; void QAndroidJniObject::setField(const char *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5de478c60cd9e69ba3f0d4fbb60d5951e8dcbd3a" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; void QAndroidJniObject::setStaticField()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e268d6f961179c738b15ec910b6723e89225c0d8" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; void QModelRoleData::setData(T &amp;amp;&amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09247046da200d04ace62a935da2f13619d35145" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; void QNdefFilter::appendRecord()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="550ab4cc3fd8dfefc0aa6b05a493509854d671ea" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; void QNdefFilter::appendRecord(unsignedint</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a02f44470828a4a9f22c9db89f74b64ab9638349" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; void QTest::addColumn()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9f1fcee48f612408889703e9cd0d875d73cd383" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; void QTest::addColumn(const char *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2905b1b82b0ba17bd7a4eca72f026c7508c05b6" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; void QVariant::setValue()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2cd56869c32857e703771bf64993090f88f6018" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; void QVariant::setValue(const T &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14ac4df4c566096903520740758efa788dde287b" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; void qAsConst()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="521565c435cf6486035fd60f8f3e86f419dbcacf" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; void qRegisterAnimationInterpolator()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d73aca7e5ade343c27b42a4f0d5ea17cb99293c8" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; void qRegisterMetaTypeStreamOperators()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c2a3e2d5e57c4278caced327e3e6ed5524bb465" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; void qRegisterRemoteObjectsClient()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e126a18bd6dd456572e585ed89777f5faa2cf84" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; void qRegisterRemoteObjectsServer()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20de4e7ff700541378312a3f811054f32c2b2435" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; voidqAsConst(const T &amp;amp;&amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="251ca035d70c9ab8a39e0f5b402372d45a5f930b" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; voidqRegisterAnimationInterpolator(&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; (*)(const T &amp;amp;, const T &amp;amp;, &lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e83714c6bfdb01de5d16384c08b235e911882f96" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; voidqRegisterMetaTypeStreamOperators(const char *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5ff085801c62fc5ee1bb67cec8c902faab845bb" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; voidqRegisterRemoteObjectsClient(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e157d5a84f3d053ff885bcba8438730473ddef2" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T&amp;gt; voidqRegisterRemoteObjectsServer(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d407b69bd98bd922960f88198a607e4d6989302e" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T, int Prealloc&amp;gt; &lt;a href=&quot;qtglobal#uint-typedef&quot;&gt;uint&lt;/a&gt;qHash(const QVarLengthArray&amp;lt;T, Prealloc&amp;gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d27383d615df0c1d1e0d091873f17bb91eef0a80" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T, int Prealloc&amp;gt; class QVarLengthArray</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b95bbf89269689749288eee7752f104ac51fea2" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T, int Prealloc&amp;gt; uint qHash()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a67a16260affca1c39f373991a14eb5773026e2a" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T, int Prealloc1, int Prealloc2&amp;gt; bool operator!=()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76b86726fe9ee99d19281d742387d141d644afa8" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T, int Prealloc1, int Prealloc2&amp;gt; bool operator&amp;gt;()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29e40bb49838a812ac3f45238fca04c69e0eed2f" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T, int Prealloc1, int Prealloc2&amp;gt; bool operator&amp;gt;=()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d57c9476b30b7216dfb643780a6aa6a8a1ebf553" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T, int Prealloc1, int Prealloc2&amp;gt; bool operator&amp;lt;()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1954cdf83c6a639678ce59547400ac52262d54da" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T, int Prealloc1, int Prealloc2&amp;gt; bool operator&amp;lt;=()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1eaf9dce92b6767f9efa379ecb6d8787225331eb" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T, int Prealloc1, int Prealloc2&amp;gt; bool operator==()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72c23a7683701af5a0fcde28635ad0952eed9542" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T, int Prealloc1, int Prealloc2&amp;gt; booloperator!=(const QVarLengthArray&amp;lt;T, Prealloc1&amp;gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a107be1fb0234e4fbaf6c5b9b624234e8375daf" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T, int Prealloc1, int Prealloc2&amp;gt; booloperator&amp;gt;(const QVarLengthArray&amp;lt;T, Prealloc1&amp;gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bbf65c1cf3e02d0c450829570369d5c28c5b7c5" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T, int Prealloc1, int Prealloc2&amp;gt; booloperator&amp;gt;=(const QVarLengthArray&amp;lt;T, Prealloc1&amp;gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6840f38c570951b26b2d880fa54e353c3608319c" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T, int Prealloc1, int Prealloc2&amp;gt; booloperator&amp;lt;(const QVarLengthArray&amp;lt;T, Prealloc1&amp;gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e534b445857f59db1fc65628438f90cbeb2b122d" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T, int Prealloc1, int Prealloc2&amp;gt; booloperator&amp;lt;=(const QVarLengthArray&amp;lt;T, Prealloc1&amp;gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="199cbc1fe4c8bd8e3935fc11493f9f5adfa3309e" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T, int Prealloc1, int Prealloc2&amp;gt; booloperator==(const QVarLengthArray&amp;lt;T, Prealloc1&amp;gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fccab84edd4b875faf41d1a74470301ef86f609" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T, int metaObjectRevision&amp;gt; int qmlRegisterRevision()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9b26d0046eac127f206c00cfd8e22366fa01ceb" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T, int metaObjectRevision&amp;gt; intqmlRegisterRevision(const char *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85c5a8af52be7c2d1bde04d0fa7813ee358b184f" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T, qsizetype Prealloc&amp;gt; class QVarLengthArray</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d5fc38933e3822ba7574d8852f10055dcf14cf4" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T, qsizetype Prealloc1, qsizetype Prealloc2&amp;gt; booloperator!=(const QVarLengthArray&amp;lt;T, Prealloc1&amp;gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d809f9385f3b98aba3978281db7e3a228e8063a" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T, qsizetype Prealloc1, qsizetype Prealloc2&amp;gt; booloperator==(const QVarLengthArray&amp;lt;T, Prealloc1&amp;gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ea4bd553fa23343a04235498322f4ac7e7d4e49" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T, typename Alloc&amp;gt; &lt;a href=&quot;qdebug#QDebug&quot;&gt;QDebug&lt;/a&gt;operator&amp;lt;&amp;lt;(&lt;a href=&quot;qdebug#QDebug&quot;&gt;QDebug&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbd7f7cf5c90cc7638fbb2cd620019bdaedb7565" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T, typename Alloc&amp;gt; QDebug operator&amp;lt;&amp;lt;()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df30abae59d02c551eb30fd1a71b5485082e1067" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T, typename Cleanup&amp;gt; bool operator!=()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="310b74d760d87980a0f2e9ed4bf186f6ca2e6507" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T, typename Cleanup&amp;gt; bool operator==()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2213f0db8476eaa99156f53a1d7ed5d9f41458ec" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T, typename Cleanup&amp;gt; booloperator!=(</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d009c73019660cf943ee76e6d3294f0a2a9b43cd" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T, typename Cleanup&amp;gt; booloperator!=(const &lt;a href=&quot;qscopedpointer#QScopedPointer&quot;&gt;QScopedPointer&lt;/a&gt;&amp;lt;T, Cleanup&amp;gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1eb9596e77868448c42fe7100e030aee1bc56a1e" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T, typename Cleanup&amp;gt; booloperator==(</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf992793ac2c28299d2d15e6607a9947967d38d7" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T, typename Cleanup&amp;gt; booloperator==(const &lt;a href=&quot;qscopedpointer#QScopedPointer&quot;&gt;QScopedPointer&lt;/a&gt;&amp;lt;T, Cleanup&amp;gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cad4d6b3e52bdd51c72bd292295d97439055ada5" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T, typename Cleanup&amp;gt; class QScopedArrayPointer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2377ff977260843d066fa26451053c61a4ffb866" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T, typename Cleanup&amp;gt; class QScopedPointer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ee1fd18354a9f75e5154757d24df813f9a1d900" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T, typename E&amp;gt; int qmlRegisterExtendedType()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cac18bcddd55c3154a2f4a98036f22c24801a461" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T, typename E&amp;gt; int qmlRegisterExtendedUncreatableType()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35eb590ffcd5ced2f73d3f88a974bd323dc29aa8" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T, typename E&amp;gt; intqmlRegisterExtendedType(const char *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7821eec5436a5d88cb3bdad1b16c7db71725b56" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T, typename E&amp;gt; intqmlRegisterExtendedUncreatableType(const char *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="287d294653f1ccd31161b836ef8e4937cbfb0e09" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T, typename U&amp;gt; T qExchange()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b25ea3139eafbebd4d5b31a17bc29453bee3f8c" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T, typename U&amp;gt; TqExchange(T &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d0ace638e8a8bdb90650b4803b3054d880592c0" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T, typename X&amp;gt; bool operator!=()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cf02575feb268573af7126dce8280cb15e211e2" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T, typename X&amp;gt; bool operator==()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e4a2ae5eb3c0e198e35823d1c8f70f91431b1f2" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T, typename X&amp;gt; booloperator!=(const &lt;a href=&quot;qsharedpointer&quot;&gt;QSharedPointer&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f30d0458999bff566827e2b189a99904d5efe29" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T, typename X&amp;gt; booloperator!=(const &lt;a href=&quot;qsharedpointer#QSharedPointer&quot;&gt;QSharedPointer&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc69607c23adef076714a698e275b7b7f3de8a95" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T, typename X&amp;gt; booloperator!=(const &lt;a href=&quot;qweakpointer#QWeakPointer&quot;&gt;QWeakPointer&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19a52db7640a3492298cf4466c2d5821dd5232d3" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T, typename X&amp;gt; booloperator!=(const T *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f42a1d9b4bdb2a335181ee78316bab56956cc31" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T, typename X&amp;gt; booloperator==(const &lt;a href=&quot;qsharedpointer&quot;&gt;QSharedPointer&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8e6cbccb961103df802497f95630d18d4f60a1d" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T, typename X&amp;gt; booloperator==(const &lt;a href=&quot;qsharedpointer#QSharedPointer&quot;&gt;QSharedPointer&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6943c810050f3e898e16b27aaf7a08afc931294b" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T, typename X&amp;gt; booloperator==(const &lt;a href=&quot;qweakpointer#QWeakPointer&quot;&gt;QWeakPointer&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca8ebca9689388651947b6b91d7e68355fbc5f2a" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T, typename X&amp;gt; booloperator==(const T *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c710e15c5a8dff2cc8e59093c955762323c4e876" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T, typename&amp;gt; void QVariant::setValue(T &amp;amp;&amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="301240d64178fcbc049a9dfb71b9358bd75bbc2b" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T1, typename T2&amp;gt; &lt;a href=&quot;qdatastream&quot;&gt;QDataStream&lt;/a&gt; &amp;amp;operator&amp;gt;&amp;gt;(&lt;a href=&quot;qdatastream&quot;&gt;QDataStream&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b62cff841e022a2e5831c1f47f9a453d4247f632" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T1, typename T2&amp;gt; &lt;a href=&quot;qdatastream&quot;&gt;QDataStream&lt;/a&gt; &amp;amp;operator&amp;lt;&amp;lt;(&lt;a href=&quot;qdatastream&quot;&gt;QDataStream&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f229beca97c51e97efb99372202450a6913f1483" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T1, typename T2&amp;gt; &lt;a href=&quot;qdebug#QDebug&quot;&gt;QDebug&lt;/a&gt;operator&amp;lt;&amp;lt;(&lt;a href=&quot;qdebug#QDebug&quot;&gt;QDebug&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="513c04d6ef30725354f7d83c07954298c73e4eab" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T1, typename T2&amp;gt; &lt;a href=&quot;qpair#QPair&quot;&gt;QPair&lt;/a&gt;&amp;lt;T1, T2&amp;gt; qMakePair(const T1 &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f792fdc1751d6730e007f870e5f3eded40cbcfb" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T1, typename T2&amp;gt; &lt;a href=&quot;qtglobal#uint-typedef&quot;&gt;uint&lt;/a&gt;qHash(const &lt;a href=&quot;qpair&quot;&gt;QPair&lt;/a&gt;&amp;lt;T1, T2&amp;gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b65cfab01f17115002fa6594a77b7e65bb3d9c6" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T1, typename T2&amp;gt; &lt;a href=&quot;qtglobal#uint-typedef&quot;&gt;uint&lt;/a&gt;qHash(const std::pair&amp;lt;T1, T2&amp;gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4331cd41b0c8d5bc751edfb14acd24f35e6700a" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T1, typename T2&amp;gt; QDataStream &amp;amp;operator&amp;gt;&amp;gt;()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f791aec8fb93a818862096b8dede0c1b5e6be49f" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T1, typename T2&amp;gt; QDataStream &amp;amp;operator&amp;lt;&amp;lt;()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a0dd509e43f2c55d3f6191befdc87d104e9e468" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T1, typename T2&amp;gt; QDebug operator&amp;lt;&amp;lt;()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e35f40e9f5b2e0014e4c321d8e8938fdc0c048ec" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T1, typename T2&amp;gt; QPair&amp;lt;T1, T2&amp;gt; qMakePair()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c547f456178605ac2032033549ff9893afd94298" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T1, typename T2&amp;gt; bool operator!=()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="077a7ac7bb4354b1d63b645e9092634727419595" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T1, typename T2&amp;gt; bool operator&amp;gt;()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ca12af7d74a6d7ad6effc365b6a72a578bfd9d6" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T1, typename T2&amp;gt; bool operator&amp;gt;=()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e383659bc1736d34d5f96cf046fcd70374663917" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T1, typename T2&amp;gt; bool operator&amp;lt;()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b672b98e6259413acae535bed68800672675c51d" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T1, typename T2&amp;gt; bool operator&amp;lt;=()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62a19dfb8e02e25d6a569188bc6fbbb0e30a9c71" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T1, typename T2&amp;gt; bool operator==()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28920cea20e7c59928490fd0fcf7eeffeed4b781" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T1, typename T2&amp;gt; booloperator!=(const &lt;a href=&quot;qpair#QPair&quot;&gt;QPair&lt;/a&gt;&amp;lt;T1, T2&amp;gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6504aefc9a161a8fafa4d8b704450e268f8330c5" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T1, typename T2&amp;gt; booloperator&amp;gt;(const &lt;a href=&quot;qpair#QPair&quot;&gt;QPair&lt;/a&gt;&amp;lt;T1, T2&amp;gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af9a1e105c395bf312d12b32b6596914ed86a769" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T1, typename T2&amp;gt; booloperator&amp;gt;=(const &lt;a href=&quot;qpair#QPair&quot;&gt;QPair&lt;/a&gt;&amp;lt;T1, T2&amp;gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3378fd3b5944d05270bf1298f15dd85d2b5205b9" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T1, typename T2&amp;gt; booloperator&amp;lt;(const &lt;a href=&quot;qpair#QPair&quot;&gt;QPair&lt;/a&gt;&amp;lt;T1, T2&amp;gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28ab23ef00b92362c2da40636590ef7e57840913" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T1, typename T2&amp;gt; booloperator&amp;lt;=(const &lt;a href=&quot;qpair#QPair&quot;&gt;QPair&lt;/a&gt;&amp;lt;T1, T2&amp;gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52a4d81d0c93336c654d387bf60bea3fe513d91e" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T1, typename T2&amp;gt; booloperator==(const &lt;a href=&quot;qpair#QPair&quot;&gt;QPair&lt;/a&gt;&amp;lt;T1, T2&amp;gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de1b3619304e5cb45c2897e8d25019769b64f105" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T1, typename T2&amp;gt; char *QTest::toString()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c48004136c84373fcd0a56234b0e204791aad345" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T1, typename T2&amp;gt; char *QTest::toString(const &lt;a href=&quot;qpair&quot;&gt;QPair&lt;/a&gt;&amp;lt;T1, T2&amp;gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04e62144bd01128e777a21ec9237d5dd7e4e8d72" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T1, typename T2&amp;gt; char *QTest::toString(const std::pair&amp;lt;T1, T2&amp;gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a4025e547580d6052e121e861e8f9d73cbff599" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T1, typename T2&amp;gt; struct QPair</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1eafc5dc9cde3143c46a1944414d25d9f742320b" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T1, typename T2&amp;gt; uint qHash()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c1881b43ef4f956b6d0ea5ffe31b2dc90c2ab67" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T1, typename T2&amp;gt; void swap()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71c4ba1cb1690821d0350f550e0033372c9f3746" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T1, typename T2&amp;gt; voidswap(&lt;a href=&quot;qpair#QPair&quot;&gt;QPair&lt;/a&gt;&amp;lt;T1, T2&amp;gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c26eef965438d8fdbbc09d00a3cded423e550e18" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8&amp;gt; class QDBusPendingReply</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="612364e25e44baf7dc7e534655ad9997472430d6" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename TT1, typename TT2&amp;gt; &lt;a href=&quot;qpair#QPair&quot;&gt;QPair&lt;/a&gt;&amp;lt;T1, T2&amp;gt; &amp;amp;QPair::operator=(&lt;a href=&quot;qpair#QPair&quot;&gt;QPair&lt;/a&gt;&amp;lt;TT1, TT2&amp;gt; &amp;amp;&amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a200cc8bd0531cd158c58a46f6df0c8d9fb6b995" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename TT1, typename TT2&amp;gt; &lt;a href=&quot;qpair#QPair&quot;&gt;QPair&lt;/a&gt;&amp;lt;T1, T2&amp;gt; &amp;amp;QPair::operator=(const &lt;a href=&quot;qpair#QPair&quot;&gt;QPair&lt;/a&gt;&amp;lt;TT1, TT2&amp;gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96319e3e9f0350c7a58208376045d317e18a69ae" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename TT1, typename TT2&amp;gt; QPair&amp;lt;T1, T2&amp;gt; &amp;amp;QPair::operator=()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c158b72d9afec2a56a90bd1e382fef17cd7a5678" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename TT1, typename TT2&amp;gt; QPair::QPair()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae97ade6c5e2cb1ba8aaefe5cbc9fbc9db602a42" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename TT1, typename TT2&amp;gt; QPair::QPair(&lt;a href=&quot;qpair#QPair&quot;&gt;QPair&lt;/a&gt;&amp;lt;TT1, TT2&amp;gt; &amp;amp;&amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58f66f33912b2300259ce7c0014b5279e9278195" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename TT1, typename TT2&amp;gt; QPair::QPair(const &lt;a href=&quot;qpair#QPair&quot;&gt;QPair&lt;/a&gt;&amp;lt;TT1, TT2&amp;gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91eaa6ca38155d24eb60de93359e119cb6bdff2b" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename TYPE&amp;gt; TYPE *QOpenGLContext::versionFunctions()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf9298002bf4674607353816605cf6e45fa9f021" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename TYPE&amp;gt; TYPE *QOpenGLContext::versionFunctions() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf3f90df0c9d907c62e2df0101c5da7dcd16f9de" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Task, typename Args&amp;gt; class &lt;a href=&quot;https://doc.qt.io/qt-6.0/qtconcurrent-module.html&quot;&gt;QtConcurrent&lt;/a&gt;::QTaskBuilder</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a2a1672263cca06fce2bd5b2dc0637d4721198d" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Types&amp;gt; QVariant QVariant::fromStdVariant()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fdb3236de92f3b8b7b04cd33c428c6c4e2ebb73" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Types&amp;gt; char *QTest::toString()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="226845ebda5626c380c9e1ae7408974becf235f1" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Types&amp;gt; char *QTest::toString(const std::tuple&amp;lt;Types...&amp;gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d81c4dda7aa18180f27615dbd5bc0d7a2a8fad61" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename Types&amp;gt; class QDBusPendingReply</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bbe9b986771aec2175fd63c0629b4e27cc1b9de" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename U&amp;gt; QTypeTraits::compare_eq_result&amp;lt;U&amp;gt; QContiguousCache::operator!=(const &lt;a href=&quot;qcontiguouscache#QContiguousCache&quot;&gt;QContiguousCache&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1beae17e7912d6e466c307ca996c1865bdb9ba8b" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename U&amp;gt; QTypeTraits::compare_eq_result&amp;lt;U&amp;gt; QContiguousCache::operator==(const &lt;a href=&quot;qcontiguouscache#QContiguousCache&quot;&gt;QContiguousCache&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="791d798d365efea6cfaa8d29d60dd095106a3020" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename U&amp;gt; QTypeTraits::compare_eq_result&amp;lt;U&amp;gt; QHash::operator!=(const &lt;a href=&quot;qhash#QHash&quot;&gt;QHash&lt;/a&gt;&amp;lt;Key, T&amp;gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dc76f3e31d0e899edca8a988a0b23ffaebe2fc9" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename U&amp;gt; QTypeTraits::compare_eq_result&amp;lt;U&amp;gt; QHash::operator==(const &lt;a href=&quot;qhash#QHash&quot;&gt;QHash&lt;/a&gt;&amp;lt;Key, T&amp;gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dad60935e9a990d758d4d98109396ac750a73113" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename U&amp;gt; QTypeTraits::compare_eq_result&amp;lt;U&amp;gt; QList::operator!=(const QList&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="864b0ad3ed38ee35e480bba91ba4d936223878af" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename U&amp;gt; QTypeTraits::compare_eq_result&amp;lt;U&amp;gt; QList::operator==(const QList&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e6d6653643af2d7c76df7ae3f1f2e5fe6e06f66" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename U&amp;gt; QTypeTraits::compare_eq_result&amp;lt;U&amp;gt; QSet::operator!=(const &lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="752f9a7b8651e7a4d63cb18d48cd3d2a9b3ee779" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename U&amp;gt; QTypeTraits::compare_eq_result&amp;lt;U&amp;gt; QSet::operator==(const &lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af9a0cdbe3878aecbc1810d17ed79c7e22139662" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename U, typename&amp;gt; &lt;a href=&quot;qfuture-const-iterator&quot;&gt;QFuture::const_iterator&lt;/a&gt; QFuture::begin() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db534746059ff837ea83710264337ce78a7e4d92" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename U, typename&amp;gt; &lt;a href=&quot;qfuture-const-iterator&quot;&gt;QFuture::const_iterator&lt;/a&gt; QFuture::constBegin() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e1e4d25ddc9d4240afb50b5b29834df57316944" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename U, typename&amp;gt; &lt;a href=&quot;qfuture-const-iterator&quot;&gt;QFuture::const_iterator&lt;/a&gt; QFuture::constEnd() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7039c6fdcb14bfd85dcff64ab3fa2816585e5511" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename U, typename&amp;gt; &lt;a href=&quot;qfuture-const-iterator&quot;&gt;QFuture::const_iterator&lt;/a&gt; QFuture::end() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9cabb44ba32cf7970f20ab8f940d125be60251a" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename U, typename&amp;gt; &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;T&amp;gt; QFuture::results() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3267cbb3e4def6bff93d16874f2af917521454cd" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename U, typename&amp;gt; T QFuture::result() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64800aca533df2bd82a2b8c0cdfacdfcb97acd73" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename U, typename&amp;gt; T QFuture::resultAt(int</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d5dd30a58eb197a74e2c729104300e16fc6d288" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename U, typename&amp;gt; T QFutureWatcher::result() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39cbbbe0e5afb70411d047cc3cbbe6326ca078ef" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename U, typename&amp;gt; T QFutureWatcher::resultAt(int</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7391a6e059cd4bee878778f06ed2356aacbcd27" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename U, typename&amp;gt; bool QFuture::isResultReadyAt(int</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1063e933cac204a3ea0318c1221f4af76cafa19" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename UInt, IfValidUInt&amp;lt;UInt&amp;gt;&amp;gt; void QRandomGenerator::fillRange()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acab0a0468a54b65194d9a2d321817fada7fe6c6" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename UInt, IfValidUInt&amp;lt;UInt&amp;gt;&amp;gt; void QRandomGenerator::fillRange(UInt *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a03644b09334f55f0385787bd4bdd68d28433521" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename UInt, size_t N, IfValidUInt&amp;lt;UInt&amp;gt;&amp;gt; void QRandomGenerator::fillRange()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff2b0f3aab5081f74de332540160913e821be0a8" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename UInt, size_t N, IfValidUInt&amp;lt;UInt&amp;gt;&amp;gt; void QRandomGenerator::fillRange(UInt (&amp;amp;)[N]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3866318f71db29b65bdabc0ca8e4a131781ca3eb" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename UnaryFunction&amp;gt; bool QMetaType::registerConverter()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81035a8cdfff47ae4dd9d60a0f7a7b92ae4e209c" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename X&amp;gt; &lt;a href=&quot;qsharedpointer#QSharedPointer&quot;&gt;QSharedPointer&lt;/a&gt;&amp;lt;X&amp;gt; QSharedPointer::constCast() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="848fa4a061483e8a9665ec2773ea42764cf34421" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename X&amp;gt; &lt;a href=&quot;qsharedpointer#QSharedPointer&quot;&gt;QSharedPointer&lt;/a&gt;&amp;lt;X&amp;gt; QSharedPointer::dynamicCast() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd1bbb5dee3beb25c36803417013f5eb85d00064" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename X&amp;gt; &lt;a href=&quot;qsharedpointer#QSharedPointer&quot;&gt;QSharedPointer&lt;/a&gt;&amp;lt;X&amp;gt; QSharedPointer::objectCast() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f701485d0f087b84cec4e457c7b64a2e1c655e0" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename X&amp;gt; &lt;a href=&quot;qsharedpointer#QSharedPointer&quot;&gt;QSharedPointer&lt;/a&gt;&amp;lt;X&amp;gt; QSharedPointer::staticCast() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8faf0f5000fc716a48536cf424b2597c4f0a5719" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename X&amp;gt; QExplicitlySharedDataPointer::QExplicitlySharedDataPointer()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd57dd8be44ca3b82f4cdd41806d84ecfdd1e1ef" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename X&amp;gt; QExplicitlySharedDataPointer::QExplicitlySharedDataPointer(const &lt;a href=&quot;qexplicitlyshareddatapointer#QExplicitlySharedDataPointer&quot;&gt;QExplicitlySharedDataPointer&lt;/a&gt;&amp;lt;X&amp;gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a0e5abd75fdae2d0613cf42c0c80fe4d827e631" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename X&amp;gt; QSharedPointer&amp;lt;X&amp;gt; QSharedPointer::constCast()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b94a3c80b249b899a719df00f1989322a28765a1" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename X&amp;gt; QSharedPointer&amp;lt;X&amp;gt; QSharedPointer::dynamicCast()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83f73fa11c1163ab8229b2950790e38f7d367963" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename X&amp;gt; QSharedPointer&amp;lt;X&amp;gt; QSharedPointer::objectCast()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b859c6766784f825edbbc2580ad20cb2013f6598" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename X&amp;gt; QSharedPointer&amp;lt;X&amp;gt; QSharedPointer::staticCast()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f67dc0d8083f1dacfea7833c7fc95cb431e0b2cf" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename X&amp;gt; QSharedPointer::QSharedPointer()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="952a033b342ef325934a3cbc2541ec2681aaed3d" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename X&amp;gt; QSharedPointer::QSharedPointer(X *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68513853be51bfe69e7900aa151fe3f6e5c8d23a" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename X&amp;gt; booloperator!=(X *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a32d119efb7bc2c4ad9cf24add136e9513b966a4" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename X&amp;gt; booloperator!=(const &lt;a href=&quot;qpointer#QPointer&quot;&gt;QPointer&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c933c5d04b28c4fd2c103906d6b134c7b23b4bb" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename X&amp;gt; booloperator==(X *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18cc47be06b09b006a3db9d75476c376b467cac9" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename X&amp;gt; booloperator==(const &lt;a href=&quot;qpointer#QPointer&quot;&gt;QPointer&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b65799436da6f4d0d0b7ab392928e74c4830422e" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename X, typename Deleter&amp;gt; QSharedPointer::QSharedPointer()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0f3cb4714e65a8a5df88f325bc3a686a18cea73" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename X, typename Deleter&amp;gt; QSharedPointer::QSharedPointer(X *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f80ba9cdfa253b6f4203a8cde9b7b1958e8aec27" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename X, typename T&amp;gt; &lt;a href=&quot;qsharedpointer#QSharedPointer&quot;&gt;QSharedPointer&lt;/a&gt;&amp;lt;X&amp;gt; qSharedPointerCast(const &lt;a href=&quot;qsharedpointer#QSharedPointer&quot;&gt;QSharedPointer&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2551d906b83d8d925915cc613894638ad35f276" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename X, typename T&amp;gt; &lt;a href=&quot;qsharedpointer#QSharedPointer&quot;&gt;QSharedPointer&lt;/a&gt;&amp;lt;X&amp;gt; qSharedPointerCast(const &lt;a href=&quot;qweakpointer&quot;&gt;QWeakPointer&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="515c7ad6f052d7c52fa935c9c1d0d3f4ad53da1e" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename X, typename T&amp;gt; &lt;a href=&quot;qsharedpointer#QSharedPointer&quot;&gt;QSharedPointer&lt;/a&gt;&amp;lt;X&amp;gt; qSharedPointerConstCast(const &lt;a href=&quot;qsharedpointer#QSharedPointer&quot;&gt;QSharedPointer&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20b23f025fd7976674d34e3678a77d8b25625852" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename X, typename T&amp;gt; &lt;a href=&quot;qsharedpointer#QSharedPointer&quot;&gt;QSharedPointer&lt;/a&gt;&amp;lt;X&amp;gt; qSharedPointerConstCast(const &lt;a href=&quot;qweakpointer&quot;&gt;QWeakPointer&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0617cda741ce75dff575bb8ec1a57fe37fa4b147" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename X, typename T&amp;gt; &lt;a href=&quot;qsharedpointer#QSharedPointer&quot;&gt;QSharedPointer&lt;/a&gt;&amp;lt;X&amp;gt; qSharedPointerDynamicCast(const &lt;a href=&quot;qsharedpointer#QSharedPointer&quot;&gt;QSharedPointer&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a71beb92dc677080b3ba2628a5c473f690f55525" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename X, typename T&amp;gt; &lt;a href=&quot;qsharedpointer#QSharedPointer&quot;&gt;QSharedPointer&lt;/a&gt;&amp;lt;X&amp;gt; qSharedPointerDynamicCast(const &lt;a href=&quot;qweakpointer&quot;&gt;QWeakPointer&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7aa8851f9bda1249957fbe0b05e6e3a9040b46e" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename X, typename T&amp;gt; &lt;a href=&quot;qsharedpointer#QSharedPointer&quot;&gt;QSharedPointer&lt;/a&gt;&amp;lt;X&amp;gt; qSharedPointerObjectCast(const &lt;a href=&quot;qsharedpointer#QSharedPointer&quot;&gt;QSharedPointer&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25b46f896a790088787c6ade411a8fd2ed5461ef" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename X, typename T&amp;gt; &lt;a href=&quot;qsharedpointer#QSharedPointer&quot;&gt;QSharedPointer&lt;/a&gt;&amp;lt;X&amp;gt; qSharedPointerObjectCast(const &lt;a href=&quot;qweakpointer&quot;&gt;QWeakPointer&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fab3e888e4aa5db15be2123aa5dc1f9a11e0a486" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename X, typename T&amp;gt; &lt;a href=&quot;qweakpointer#QWeakPointer&quot;&gt;QWeakPointer&lt;/a&gt;&amp;lt;X&amp;gt; qWeakPointerCast(const &lt;a href=&quot;qweakpointer#QWeakPointer&quot;&gt;QWeakPointer&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39f923f44972b05806c5b051643cd153d4e18cce" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename X, typename T&amp;gt; QSharedPointer&amp;lt;X&amp;gt; qSharedPointerCast()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b052daadc4168174719718b520695f236194a71" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename X, typename T&amp;gt; QSharedPointer&amp;lt;X&amp;gt; qSharedPointerConstCast()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c4b60cbe44309947f1e6c71bf7b6ee3aec00b10" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename X, typename T&amp;gt; QSharedPointer&amp;lt;X&amp;gt; qSharedPointerDynamicCast()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb59eea5d60deccb07e89f7779e0825330726717" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename X, typename T&amp;gt; QSharedPointer&amp;lt;X&amp;gt; qSharedPointerObjectCast()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96425b6061b803d3cbd913336c3fb1f053825892" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename X, typename T&amp;gt; QWeakPointer&amp;lt;X&amp;gt; qWeakPointerCast()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ce75deb54ec8667b93fd7792787d19e77c158b3" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename X, typename T&amp;gt; std::shared_ptr&amp;lt;X&amp;gt; qSharedPointerObjectCast()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0da59ec980108991d8310d78690b3ad8cb08939" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename X, typename T&amp;gt; std::shared_ptr&amp;lt;X&amp;gt; qSharedPointerObjectCast(const std::shared_ptr&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c154784d4899f3bc9426dc2e115ecf201446dab" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename X, typename T&amp;gt; std::shared_ptr&amp;lt;X&amp;gt; qSharedPointerObjectCast(std::shared_ptr&amp;lt;T&amp;gt; &amp;amp;&amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57523ee18a4fdf354a509897efeeee4365bc784d" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename X, typename T&amp;gt; std::shared_ptr&amp;lt;X&amp;gt; qobject_pointer_cast()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a6b1a26dd60d1e196fc8670ca26ea4c4b031a38" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename X, typename T&amp;gt; std::shared_ptr&amp;lt;X&amp;gt; qobject_pointer_cast(const std::shared_ptr&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6d91700af8d6d5af7c01ce8a971b3baee400288" translate="yes" xml:space="preserve">
          <source>template &amp;lt;typename X, typename T&amp;gt; std::shared_ptr&amp;lt;X&amp;gt; qobject_pointer_cast(std::shared_ptr&amp;lt;T&amp;gt; &amp;amp;&amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df187ae02bb86584bd3c5ec8b801696354a617f3" translate="yes" xml:space="preserve">
          <source>template &amp;lt;uint N&amp;gt; QStaticByteArrayMatcher&amp;lt;N&amp;gt; qMakeStaticByteArrayMatcher()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d866069d009d6452bca6cb89d4cbd8d0423edc8" translate="yes" xml:space="preserve">
          <source>template &amp;lt;uint N&amp;gt; QStaticByteArrayMatcher&amp;lt;N&amp;gt; qMakeStaticByteArrayMatcher(const char (&amp;amp;)[N]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1abe6b18d71c2389c7855fe493c8bba68f3c6526" translate="yes" xml:space="preserve">
          <source>template &amp;lt;uint N&amp;gt; class QStaticByteArrayMatcher</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c11a17119f38ce5f95cba41468dab4e2f5dabef" translate="yes" xml:space="preserve">
          <source>templateName</source>
          <target state="translated">templateName</target>
        </trans-unit>
        <trans-unit id="063aa98d6e522b15a85635da26353bc8ae1cf512" translate="yes" xml:space="preserve">
          <source>templatePath</source>
          <target state="translated">templatePath</target>
        </trans-unit>
        <trans-unit id="d0b4e35d12945cbecb972c6b120744a362964255" translate="yes" xml:space="preserve">
          <source>temporalAAEnabled : &lt;a href=&quot;qml-bool&quot;&gt;bool&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30435660e2c0b0ab0863023ae8eda749eeb4e7c9" translate="yes" xml:space="preserve">
          <source>temporalAAStrength : float</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcdc8b2d0a7955131b67e56602873f6384102669" translate="yes" xml:space="preserve">
          <source>temporary</source>
          <target state="translated">temporary</target>
        </trans-unit>
        <trans-unit id="4ffa357d2b94054a0575c069b140ad2ad850b878" translate="yes" xml:space="preserve">
          <source>temporaryToken</source>
          <target state="translated">temporaryToken</target>
        </trans-unit>
        <trans-unit id="2a4c3b84009d0ba24c742a698f0adb23e6f1ea7c" translate="yes" xml:space="preserve">
          <source>term</source>
          <target state="translated">term</target>
        </trans-unit>
        <trans-unit id="646495ba5440c8bc7debc3c83dbe14c9178925a8" translate="yes" xml:space="preserve">
          <source>terminationStatus</source>
          <target state="translated">terminationStatus</target>
        </trans-unit>
        <trans-unit id="834e7ed4c67ae86f6675add38609062c44d2a4d0" translate="yes" xml:space="preserve">
          <source>territory is an uppercase, two-letter, ISO 3166 country code,</source>
          <target state="translated">El territorio es un c√≥digo de pa√≠s ISO 3166 en may√∫sculas y dos letras,</target>
        </trans-unit>
        <trans-unit id="97e46ce36c082a164d389d86140d3644f48b200f" translate="yes" xml:space="preserve">
          <source>tessellationControlShaderCode</source>
          <target state="translated">tessellationControlShaderCode</target>
        </trans-unit>
        <trans-unit id="176fe4b1a03ca5ea1ddcb6fce30992e4c0c688ab" translate="yes" xml:space="preserve">
          <source>tessellationControlShaderCode : &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt;</source>
          <target state="translated">tessellationControlShaderCode: &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="91b22975e35846dcdb34af5607890e15c11a735f" translate="yes" xml:space="preserve">
          <source>tessellationControlShaderCode : &lt;a href=&quot;qml-string&quot;&gt;string&lt;/a&gt;</source>
          <target state="translated">tessellationControlShaderCode: &lt;a href=&quot;qml-string&quot;&gt;string&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="aa83185ec6e4e418fb1a363c5bba24dc6662e933" translate="yes" xml:space="preserve">
          <source>tessellationControlShaderCode : const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="332936028f1148ee7956ab47659a96f340489e96" translate="yes" xml:space="preserve">
          <source>tessellationControlShaderGraph</source>
          <target state="translated">tessellationControlShaderGraph</target>
        </trans-unit>
        <trans-unit id="d5b987f6adc66effc501e999564281bcc9a99caa" translate="yes" xml:space="preserve">
          <source>tessellationControlShaderGraph : &lt;a href=&quot;qml-string&quot;&gt;string&lt;/a&gt;</source>
          <target state="translated">tessellationControlShaderGraph: &lt;a href=&quot;qml-string&quot;&gt;string&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4331881a248773de6f0acad2e5bb843c876cfe5a" translate="yes" xml:space="preserve">
          <source>tessellationControlShaderGraph : &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt;</source>
          <target state="translated">tessellationControlShaderGraph: &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2cbb14b0e0560eef1cb6156763dca6f20f2f1be1" translate="yes" xml:space="preserve">
          <source>tessellationEvaluationShaderCode</source>
          <target state="translated">tessellationEvaluationShaderCode</target>
        </trans-unit>
        <trans-unit id="f2da9b562484132a291d6e1bb2002950252f5b80" translate="yes" xml:space="preserve">
          <source>tessellationEvaluationShaderCode : &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt;</source>
          <target state="translated">tessellationEvaluationShaderCode: &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="47b25422146840d5ccf938d3c4ba12621f3305e4" translate="yes" xml:space="preserve">
          <source>tessellationEvaluationShaderCode : &lt;a href=&quot;qml-string&quot;&gt;string&lt;/a&gt;</source>
          <target state="translated">tessellationEvaluationShaderCode: &lt;a href=&quot;qml-string&quot;&gt;string&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b503041eebcda60a399d6ed94b3e417f23976ba4" translate="yes" xml:space="preserve">
          <source>tessellationEvaluationShaderCode : const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96fe1ac20cb8950e48f61fff183f2780893bab0d" translate="yes" xml:space="preserve">
          <source>tessellationEvaluationShaderGraph</source>
          <target state="translated">tessellationEvaluationShaderGraph</target>
        </trans-unit>
        <trans-unit id="562ddee959ea58d8bc7e31b29229d9deece7e5ef" translate="yes" xml:space="preserve">
          <source>tessellationEvaluationShaderGraph : &lt;a href=&quot;qml-string&quot;&gt;string&lt;/a&gt;</source>
          <target state="translated">tessellationEvaluationShaderGraph: &lt;a href=&quot;qml-string&quot;&gt;string&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="59b12c64de2b05f52827dae50219575bac5ca5f7" translate="yes" xml:space="preserve">
          <source>tessellationEvaluationShaderGraph : &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt;</source>
          <target state="translated">tessellationEvaluationShaderGraph: &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6231c0532e854b6a542f2f14d728eb98bcf26c26" translate="yes" xml:space="preserve">
          <source>tessellationMode : &lt;a href=&quot;qml-enumeration&quot;&gt;enumeration&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a94a8fe5ccb19ba61c4c0873d391e987982fbbd3" translate="yes" xml:space="preserve">
          <source>test</source>
          <target state="translated">test</target>
        </trans-unit>
        <trans-unit id="c2a645ef326f5ebcb1881f80c9f36bdb9d4945ec" translate="yes" xml:space="preserve">
          <source>test(string)</source>
          <target state="translated">test(string)</target>
        </trans-unit>
        <trans-unit id="843ad783bdd6dd7e83a7f09ea18213d236dadd19" translate="yes" xml:space="preserve">
          <source>testElement</source>
          <target state="translated">testElement</target>
        </trans-unit>
        <trans-unit id="0f96e97e60dedfb34418ad3e98b1c6a7ce61a3be" translate="yes" xml:space="preserve">
          <source>testMode</source>
          <target state="translated">testMode</target>
        </trans-unit>
        <trans-unit id="6fae783f603e3dc66c4b3ece04fac84f70278bab" translate="yes" xml:space="preserve">
          <source>testObject</source>
          <target state="translated">testObject</target>
        </trans-unit>
        <trans-unit id="fb0d5756a011a9d443aba29438de4ebdcfac2522" translate="yes" xml:space="preserve">
          <source>testcase</source>
          <target state="translated">testcase</target>
        </trans-unit>
        <trans-unit id="cd3ca969d45d69f0d677d1ac5f7426855f7a3b60" translate="yes" xml:space="preserve">
          <source>testcon - An ActiveX Test Container (ActiveQt)</source>
          <target state="translated">testcon-Un contenedor de prueba ActiveX (ActiveQt)</target>
        </trans-unit>
        <trans-unit id="160a76d81e8ccddab058444f2eaa2c3c7592fb86" translate="yes" xml:space="preserve">
          <source>testlib</source>
          <target state="translated">testlib</target>
        </trans-unit>
        <trans-unit id="c152a6a94f9490bb116cf00bb1104a0402894e91" translate="yes" xml:space="preserve">
          <source>texCoordAttribute : &lt;a href=&quot;qml-qt3d-core-attribute&quot;&gt;Attribute&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d9cd19cf58592e2bb866e4213547d862c3957d4" translate="yes" xml:space="preserve">
          <source>texCoordAttribute : &lt;a href=&quot;qml-qt3d-render-attribute&quot;&gt;Attribute&lt;/a&gt;</source>
          <target state="translated">texCoordAttribute: &lt;a href=&quot;qml-qt3d-render-attribute&quot;&gt;Atributo&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="36c961ae1cba6f456ee019ffa3338909e203ce12" translate="yes" xml:space="preserve">
          <source>texCoordAttribute : &lt;a href=&quot;qt3drender-qattribute&quot;&gt;Qt3DRender::QAttribute&lt;/a&gt;* const</source>
          <target state="translated">texCoordAttribute: &lt;a href=&quot;qt3drender-qattribute&quot;&gt;Qt3DRender :: QAttribute&lt;/a&gt; * const</target>
        </trans-unit>
        <trans-unit id="da4855533080c5e8f55d320afc727bc7fa732a78" translate="yes" xml:space="preserve">
          <source>texCoordMode</source>
          <target state="translated">texCoordMode</target>
        </trans-unit>
        <trans-unit id="01ff670275c393a5378fa80439a6abebcd92f1af" translate="yes" xml:space="preserve">
          <source>texFormat</source>
          <target state="translated">texFormat</target>
        </trans-unit>
        <trans-unit id="372ea08cab33e71c02c651dbc83a474d32c676ea" translate="yes" xml:space="preserve">
          <source>text</source>
          <target state="translated">text</target>
        </trans-unit>
        <trans-unit id="f593ae8bb992f986ad68f9d1f98dd88a0acfdc59" translate="yes" xml:space="preserve">
          <source>text : &lt;a href=&quot;qml-color&quot;&gt;color&lt;/a&gt;</source>
          <target state="translated">texto: &lt;a href=&quot;qml-color&quot;&gt;color&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5e84dd7ba145ffcd7aec1e19bc46a71bc3a7d208" translate="yes" xml:space="preserve">
          <source>text : &lt;a href=&quot;qml-int&quot;&gt;int&lt;/a&gt;</source>
          <target state="translated">texto: &lt;a href=&quot;qml-int&quot;&gt;int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="eb7bf2ce0b182986ca5dccfe45272bcd4004aa22" translate="yes" xml:space="preserve">
          <source>text : &lt;a href=&quot;qml-string&quot;&gt;string&lt;/a&gt;</source>
          <target state="translated">texto: &lt;a href=&quot;qml-string&quot;&gt;cadena&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="96f984dfcdd8fbbb8cdd61cd2052dfa626a89d1a" translate="yes" xml:space="preserve">
          <source>text : &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;</source>
          <target state="translated">texto: &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="13f0ddccb6776b632be4a3a241671dbaf1e7c71a" translate="yes" xml:space="preserve">
          <source>text : QString</source>
          <target state="translated">texto:QString</target>
        </trans-unit>
        <trans-unit id="8952050900b3e93da4d507b0ad80386eeacee3b9" translate="yes" xml:space="preserve">
          <source>text : const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;</source>
          <target state="translated">texto: const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ff831bca47bd9555c10be4e47430afb2808b5432" translate="yes" xml:space="preserve">
          <source>text : string</source>
          <target state="translated">texto:cadena</target>
        </trans-unit>
        <trans-unit id="9d54ea5e31b2a3b4fa7aef7d6dc72021286c7fc8" translate="yes" xml:space="preserve">
          <source>text block in the document.</source>
          <target state="translated">bloque de texto en el documento.</target>
        </trans-unit>
        <trans-unit id="cd6c5230cdb066f6ca5e7746f7f74451a9c1765c" translate="yes" xml:space="preserve">
          <source>text block to this text block.</source>
          <target state="translated">a este bloque de texto.</target>
        </trans-unit>
        <trans-unit id="7a01c162273435d126205bbcb1a202f979e486e6" translate="yes" xml:space="preserve">
          <source>text block's attributes to this text block.</source>
          <target state="translated">los atributos del bloque de texto a este bloque de texto.</target>
        </trans-unit>
        <trans-unit id="27c419a816e9b0df5cf92e06f93fa02bac3c8f7c" translate="yes" xml:space="preserve">
          <source>text block.</source>
          <target state="translated">bloque de texto.</target>
        </trans-unit>
        <trans-unit id="8247ea9a9c423c6f78e1a14215108fd4c341ae0e" translate="yes" xml:space="preserve">
          <source>text format to this text format, and returns a reference to this text format.</source>
          <target state="translated">a este formato de texto,y devuelve una referencia a este formato de texto.</target>
        </trans-unit>
        <trans-unit id="bff03de1e0fc4041ec8d158a3ca516ea7620e5d5" translate="yes" xml:space="preserve">
          <source>text format.</source>
          <target state="translated">formato de texto.</target>
        </trans-unit>
        <trans-unit id="a8108a4fded97780628508a1084ff155900a071b" translate="yes" xml:space="preserve">
          <source>text fragment to this text fragment.</source>
          <target state="translated">a este fragmento de texto.</target>
        </trans-unit>
        <trans-unit id="3d02339fc56cfe1562fe914021055c94a98d7578" translate="yes" xml:space="preserve">
          <source>text fragment; otherwise returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">fragmento de texto; de lo contrario, devuelve &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="280b54f04040c63f5b53b271aba1e94437554a5b" translate="yes" xml:space="preserve">
          <source>text fragment; otherwise returns false.</source>
          <target state="translated">fragmento de texto;de lo contrario,devuelve falso.</target>
        </trans-unit>
        <trans-unit id="12ca4ff0be97a95b32ac4c6b771853406044113a" translate="yes" xml:space="preserve">
          <source>text is found. The</source>
          <target state="translated">el texto se encuentra.El</target>
        </trans-unit>
        <trans-unit id="39a197827f27eb78f4de346474a4e6f7b3013c27" translate="yes" xml:space="preserve">
          <source>text is matched case-sensitively or not depending on the</source>
          <target state="translated">El texto se ajusta al caso sensiblemente o no dependiendo de la</target>
        </trans-unit>
        <trans-unit id="80bffec32ce83dfb555b4c76d74b7272f20c249c" translate="yes" xml:space="preserve">
          <source>text length.</source>
          <target state="translated">la longitud del texto.</target>
        </trans-unit>
        <trans-unit id="4b5d5026df927714ad294865b13e1adb12030942" translate="yes" xml:space="preserve">
          <source>text nodes</source>
          <target state="translated">nodos de texto</target>
        </trans-unit>
        <trans-unit id="b65d8fccff4b790f6278f777f8905a6f1e206ca4" translate="yes" xml:space="preserve">
          <source>text onto the splash screen with color</source>
          <target state="translated">texto en la pantalla de inicio con color</target>
        </trans-unit>
        <trans-unit id="366c8b539d2063626a646e590ff0a03d7d402ec5" translate="yes" xml:space="preserve">
          <source>text option.</source>
          <target state="translated">opci√≥n de texto.</target>
        </trans-unit>
        <trans-unit id="7385577a3625a79ecdea9e3c5580975b29d0e5b0" translate="yes" xml:space="preserve">
          <source>text option; otherwise returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">opci&amp;oacute;n de texto; de lo contrario, devuelve &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="343ebf8bc628e95527d6b6a8452eaf829f333a0e" translate="yes" xml:space="preserve">
          <source>text records.</source>
          <target state="translated">registros de texto.</target>
        </trans-unit>
        <trans-unit id="9eb4e9a5e1549a4b735791e063bb306d869bfada" translate="yes" xml:space="preserve">
          <source>text replaced with the</source>
          <target state="translated">texto sustituido por el</target>
        </trans-unit>
        <trans-unit id="e83f1622d6dd389baa4aaf6008d8ecb5b20deb62" translate="yes" xml:space="preserve">
          <source>text shown when no valid index is set</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fccbc35b4447d11896a4a446337fab520316e4d" translate="yes" xml:space="preserve">
          <source>text wherever the</source>
          <target state="translated">texto dondequiera que el</target>
        </trans-unit>
        <trans-unit id="8dacb2218712bfda60b7a214deebf6c97fa9ada9" translate="yes" xml:space="preserve">
          <source>text. Below is an example from the Qt Reference Documentation:</source>
          <target state="translated">texto.A continuaci√≥n se muestra un ejemplo de la documentaci√≥n de referencia de Qt:</target>
        </trans-unit>
        <trans-unit id="3a14ee1ce620903a0b0b2c6e07c7bf967588d9b4" translate="yes" xml:space="preserve">
          <source>text. Note the use of the fully qualified</source>
          <target state="translated">texto.Observe el uso de la tarjeta de</target>
        </trans-unit>
        <trans-unit id="2243e2488e18ceb518ae1b3ffe75758a5235f777" translate="yes" xml:space="preserve">
          <source>textAlign</source>
          <target state="translated">textAlign</target>
        </trans-unit>
        <trans-unit id="47e4918cca4ee06ca2399e43a303d936d04078c1" translate="yes" xml:space="preserve">
          <source>textAlign : &lt;a href=&quot;qml-string&quot;&gt;string&lt;/a&gt;</source>
          <target state="translated">textAlign: &lt;a href=&quot;qml-string&quot;&gt;cadena&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="36060e9a6871365338dda57b19c6b2f70d19bd9d" translate="yes" xml:space="preserve">
          <source>textAlignment</source>
          <target state="translated">textAlignment</target>
        </trans-unit>
        <trans-unit id="625ada048bca5b42fcd49422f6d609ec154016ac" translate="yes" xml:space="preserve">
          <source>textBaseline</source>
          <target state="translated">textBaseline</target>
        </trans-unit>
        <trans-unit id="4f26ede9965f8a56ca75cc1133d0e6d6c6d809bd" translate="yes" xml:space="preserve">
          <source>textBaseline : &lt;a href=&quot;qml-string&quot;&gt;string&lt;/a&gt;</source>
          <target state="translated">textBaseline: &lt;a href=&quot;qml-string&quot;&gt;cadena&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f0e28613ef94a8b3bd620964663b9c5a3d83c7c2" translate="yes" xml:space="preserve">
          <source>textCase</source>
          <target state="translated">textCase</target>
        </trans-unit>
        <trans-unit id="81f1a1c044b7ca34b5e8455695936b76c322a387" translate="yes" xml:space="preserve">
          <source>textChanged()</source>
          <target state="translated">textChanged()</target>
        </trans-unit>
        <trans-unit id="c805e65e43babd53e90fc0c0a8c42137a2cb5662" translate="yes" xml:space="preserve">
          <source>textColor</source>
          <target state="translated">textColor</target>
        </trans-unit>
        <trans-unit id="14533ffabf5204c069f1e2d3f0b9522cea2c3c62" translate="yes" xml:space="preserve">
          <source>textColor : &lt;a href=&quot;qcolor&quot;&gt;QColor&lt;/a&gt;</source>
          <target state="translated">textColor: &lt;a href=&quot;qcolor&quot;&gt;QColor&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9cf29863bf691d4515ef9a3d81231120a5ea328c" translate="yes" xml:space="preserve">
          <source>textColor : &lt;a href=&quot;qml-color&quot;&gt;color&lt;/a&gt;</source>
          <target state="translated">textColor: &lt;a href=&quot;qml-color&quot;&gt;color&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f4a5be93e4cfe4b9b92757a467efc885e32afd6c" translate="yes" xml:space="preserve">
          <source>textCursor : &lt;a href=&quot;qtextcursor&quot;&gt;QTextCursor&lt;/a&gt;</source>
          <target state="translated">textCursor: &lt;a href=&quot;qtextcursor&quot;&gt;QTextCursor&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f23e4cc36b9bc5e5d9e3e8452f4eb5bd690f3a81" translate="yes" xml:space="preserve">
          <source>textDirection</source>
          <target state="translated">textDirection</target>
        </trans-unit>
        <trans-unit id="45804c3be5cb587f8a8debc649d0718e04a048b5" translate="yes" xml:space="preserve">
          <source>textDirection : &lt;a href=&quot;qml-enumeration&quot;&gt;enumeration&lt;/a&gt;</source>
          <target state="translated">textDirection: &lt;a href=&quot;qml-enumeration&quot;&gt;enumeraci&amp;oacute;n&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8f42a0553367376635d559fe3b361cfdeae96002" translate="yes" xml:space="preserve">
          <source>textDirection : &lt;a href=&quot;qprogressbar#Direction-enum&quot;&gt;Direction&lt;/a&gt;</source>
          <target state="translated">textDirection: &lt;a href=&quot;qprogressbar#Direction-enum&quot;&gt;Direcci&amp;oacute;n&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6f6f2f4fe8f48ef59f4b0952248ee36d76c86f02" translate="yes" xml:space="preserve">
          <source>textDocument : TextDocument</source>
          <target state="translated">textDocument:TextDocument</target>
        </trans-unit>
        <trans-unit id="db48a68f6e0909708e4c92c4a368e36f706c851d" translate="yes" xml:space="preserve">
          <source>textEchoMode : &lt;a href=&quot;qlineedit#EchoMode-enum&quot;&gt;QLineEdit::EchoMode&lt;/a&gt;</source>
          <target state="translated">textEchoMode: &lt;a href=&quot;qlineedit#EchoMode-enum&quot;&gt;QLineEdit :: EchoMode&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ea4ddf4aa63b7c0983b6e608b5d30f033e55c294" translate="yes" xml:space="preserve">
          <source>textEdited()</source>
          <target state="translated">textEdited()</target>
        </trans-unit>
        <trans-unit id="d0b468eda642246f1f3dbe9f479d0a42d67cfd69" translate="yes" xml:space="preserve">
          <source>textElideMode : &lt;a href=&quot;qt#TextElideMode-enum&quot;&gt;Qt::TextElideMode&lt;/a&gt;</source>
          <target state="translated">textElideMode: &lt;a href=&quot;qt#TextElideMode-enum&quot;&gt;Qt :: TextElideMode&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="25802f71ab5ef7964107ca0c2c607006a56b4442" translate="yes" xml:space="preserve">
          <source>textFormat</source>
          <target state="translated">textFormat</target>
        </trans-unit>
        <trans-unit id="30511a0450da2ad45d66f1e3737d35a5853e5831" translate="yes" xml:space="preserve">
          <source>textFormat : &lt;a href=&quot;qml-enumeration&quot;&gt;enumeration&lt;/a&gt;</source>
          <target state="translated">textFormat: &lt;a href=&quot;qml-enumeration&quot;&gt;enumeraci&amp;oacute;n&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7269ebc724762568d02a16c72660206d6f2f0bfc" translate="yes" xml:space="preserve">
          <source>textFormat : &lt;a href=&quot;qt#TextFormat-enum&quot;&gt;Qt::TextFormat&lt;/a&gt;</source>
          <target state="translated">textFormat: &lt;a href=&quot;qt#TextFormat-enum&quot;&gt;Qt :: TextFormat&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d24932d35c39f7893a32b682ac2f72be722c3fbc" translate="yes" xml:space="preserve">
          <source>textFromValue : function</source>
          <target state="translated">textFromValue:funci√≥n</target>
        </trans-unit>
        <trans-unit id="8b9c5696740722bbabe30d80d7a6c0ef72cf9125" translate="yes" xml:space="preserve">
          <source>textInteractionFlags : &lt;a href=&quot;qt#TextInteractionFlag-enum&quot;&gt;Qt::TextInteractionFlags&lt;/a&gt;</source>
          <target state="translated">textInteractionFlags: &lt;a href=&quot;qt#TextInteractionFlag-enum&quot;&gt;Qt :: TextInteractionFlags&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7d8e593a9fb5fb88668ef9836c0900207646bc27" translate="yes" xml:space="preserve">
          <source>textItem</source>
          <target state="translated">textItem</target>
        </trans-unit>
        <trans-unit id="a8b924f746e974090e985ef0c367e0cd9ef2d6b1" translate="yes" xml:space="preserve">
          <source>textMargin : &lt;a href=&quot;qml-real&quot;&gt;real&lt;/a&gt;</source>
          <target state="translated">textMargin: &lt;a href=&quot;qml-real&quot;&gt;real&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6476cc40ca97543f1f4b2a7575712c03158e0d4a" translate="yes" xml:space="preserve">
          <source>textMessageReceived(</source>
          <target state="translated">textMessageReceived(</target>
        </trans-unit>
        <trans-unit id="256cc5ffc22ba03e57fde02109a8d8f886e3cd71" translate="yes" xml:space="preserve">
          <source>textMessageReceived(QString</source>
          <target state="translated">textMessageReceived(QString</target>
        </trans-unit>
        <trans-unit id="6b0fc1acba38ee51be7c4180fea6442fd770fc54" translate="yes" xml:space="preserve">
          <source>textOption</source>
          <target state="translated">textOption</target>
        </trans-unit>
        <trans-unit id="ee5080356061e8beeec91788005257ff14a7287f" translate="yes" xml:space="preserve">
          <source>textRole</source>
          <target state="translated">textRole</target>
        </trans-unit>
        <trans-unit id="f0a5afb49ff2c89c61d4817719a5b4bf2063cd38" translate="yes" xml:space="preserve">
          <source>textRole : &lt;a href=&quot;qml-string&quot;&gt;string&lt;/a&gt;</source>
          <target state="translated">textRole: &lt;a href=&quot;qml-string&quot;&gt;cadena&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="eda962b654e77ff785d30f9e60e2d964c5baba36" translate="yes" xml:space="preserve">
          <source>textRole : QString</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c8cbf1fb6a87f7baea490ef4d2f4080b14d1bc5" translate="yes" xml:space="preserve">
          <source>textValue : &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;</source>
          <target state="translated">textValue: &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0f219ed0e394e1e95550d920109bca74eccd0d10" translate="yes" xml:space="preserve">
          <source>textVisible</source>
          <target state="translated">textVisible</target>
        </trans-unit>
        <trans-unit id="3886bfc3784467b74d94789786fe292b47629a67" translate="yes" xml:space="preserve">
          <source>textVisible : bool</source>
          <target state="translated">textVisible:bool</target>
        </trans-unit>
        <trans-unit id="ec50ff2e8f93cc35ee7133cfca6c9ba56ae7a5ea" translate="yes" xml:space="preserve">
          <source>textWidth</source>
          <target state="translated">textWidth</target>
        </trans-unit>
        <trans-unit id="1b4e443eef3f8d6599fc6f8bb62aec8c4ab391a2" translate="yes" xml:space="preserve">
          <source>textWidth : &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">textWidth: &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="31cf813371e3fceaab1f53c4b7762f7aec7f60bb" translate="yes" xml:space="preserve">
          <source>textWidth : &lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e876495d42c7394128a6d479d0cb749c43394f0b" translate="yes" xml:space="preserve">
          <source>texts</source>
          <target state="translated">texts</target>
        </trans-unit>
        <trans-unit id="8ab5cbe29ff8a179c2e5a288d14b2074824bf0bb" translate="yes" xml:space="preserve">
          <source>texture</source>
          <target state="translated">texture</target>
        </trans-unit>
        <trans-unit id="0d7635bfe11e192f923cb8d8d5d2b863d5b46e17" translate="yes" xml:space="preserve">
          <source>texture : &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt;</source>
          <target state="translated">textura: &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="06036ebcb84a84f72d15cd2c93df536e1dc1f72a" translate="yes" xml:space="preserve">
          <source>texture : &lt;a href=&quot;qml-qtquick3d-texture&quot;&gt;Texture&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="543e6d427a162f086d3eea74b2035c78126a00bf" translate="yes" xml:space="preserve">
          <source>texture : &lt;a href=&quot;qt3drender-qabstracttexture&quot;&gt;QAbstractTexture&lt;/a&gt;*</source>
          <target state="translated">textura: &lt;a href=&quot;qt3drender-qabstracttexture&quot;&gt;QAbstractTexture&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="ff10db1b0113751a8780d816e7ab8853682fdd5c" translate="yes" xml:space="preserve">
          <source>texture : &lt;a href=&quot;qt3drender-qabstracttexture&quot;&gt;Qt3DRender::QAbstractTexture&lt;/a&gt;*</source>
          <target state="translated">textura: &lt;a href=&quot;qt3drender-qabstracttexture&quot;&gt;Qt3DRender :: QAbstractTexture&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="8c38878f733fe37194b7b431704391783f7e98f9" translate="yes" xml:space="preserve">
          <source>texture : Texture</source>
          <target state="translated">textura:Textura</target>
        </trans-unit>
        <trans-unit id="62a629797a9ced24750cad4f226d6f9c5be4ac9f" translate="yes" xml:space="preserve">
          <source>textureCoordOperation : &lt;a href=&quot;qml-enumeration&quot;&gt;enumeration&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b68148f7fd0102d1857037379f9a132f4bcd7ef9" translate="yes" xml:space="preserve">
          <source>textureData</source>
          <target state="translated">textureData</target>
        </trans-unit>
        <trans-unit id="3a6a4f523daefc49c8f9e641e32aaa5423eb1479" translate="yes" xml:space="preserve">
          <source>textureData : &lt;a href=&quot;qml-qtquick3d-texturedata&quot;&gt;TextureData&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e19a988d3c636ea94b4a43f3caa3bafea0d97b39" translate="yes" xml:space="preserve">
          <source>textureData : &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;&lt;a href=&quot;#uchar-typedef&quot;&gt;uchar&lt;/a&gt;&amp;gt;*</source>
          <target state="translated">textureData: &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt; &amp;lt; &lt;a href=&quot;#uchar-typedef&quot;&gt;uchar&lt;/a&gt; &amp;gt; *</target>
        </trans-unit>
        <trans-unit id="1b34529fe865a6fd40d9aa46b87b0b4c87a95978" translate="yes" xml:space="preserve">
          <source>textureData : &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;&lt;a href=&quot;qtglobal#uchar-typedef&quot;&gt;uchar&lt;/a&gt;&amp;gt;*</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c919cd032589390de1737739cf3d337afddbfe3" translate="yes" xml:space="preserve">
          <source>textureDepth</source>
          <target state="translated">textureDepth</target>
        </trans-unit>
        <trans-unit id="1ed074d0b46bb60542091727abbd727aa8c971cb" translate="yes" xml:space="preserve">
          <source>textureDepth : &lt;a href=&quot;qml-int&quot;&gt;int&lt;/a&gt;</source>
          <target state="translated">textureDepth: &lt;a href=&quot;qml-int&quot;&gt;int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="10ad419a8299bee1c2a1aafce10b0d4c48b6c506" translate="yes" xml:space="preserve">
          <source>textureDepth : int</source>
          <target state="translated">textureDepth:int</target>
        </trans-unit>
        <trans-unit id="19f53d83b69a37cb4911bd58320710d18f719d45" translate="yes" xml:space="preserve">
          <source>textureFile</source>
          <target state="translated">textureFile</target>
        </trans-unit>
        <trans-unit id="2356abb01203130242b5ec76308904731b4bebaf" translate="yes" xml:space="preserve">
          <source>textureFile : &lt;a href=&quot;qml-string&quot;&gt;string&lt;/a&gt;</source>
          <target state="translated">textureFile: &lt;a href=&quot;qml-string&quot;&gt;string&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fa128443908e1037ce4bf10639597a410d184c61" translate="yes" xml:space="preserve">
          <source>textureFile : &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;</source>
          <target state="translated">textureFile: &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3b8a9802cf478c9982b150b8252bc52a1c8a8a0b" translate="yes" xml:space="preserve">
          <source>textureFilterOperation : &lt;a href=&quot;qml-enumeration&quot;&gt;enumeration&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="131cc9d40c32cce6ba5d15294e5cb6172df590ba" translate="yes" xml:space="preserve">
          <source>textureFollowsItemSize : bool</source>
          <target state="translated">texturaSigueItemSize:bool</target>
        </trans-unit>
        <trans-unit id="53b4e7c3898429bb29e086adfa90217afe85fe65" translate="yes" xml:space="preserve">
          <source>textureFormat</source>
          <target state="translated">textureFormat</target>
        </trans-unit>
        <trans-unit id="25c11b299083b5959a1b80bc1a3098ffa93fcc26" translate="yes" xml:space="preserve">
          <source>textureHeight</source>
          <target state="translated">textureHeight</target>
        </trans-unit>
        <trans-unit id="5fdd30f33238d3fe96f6d52edb3d81a2909bd364" translate="yes" xml:space="preserve">
          <source>textureHeight : &lt;a href=&quot;qml-int&quot;&gt;int&lt;/a&gt;</source>
          <target state="translated">textureHeight: &lt;a href=&quot;qml-int&quot;&gt;int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d9866e5b071d28d464f22f82371e2e5ba80f02bb" translate="yes" xml:space="preserve">
          <source>textureHeight : int</source>
          <target state="translated">texturaAltura:int</target>
        </trans-unit>
        <trans-unit id="08d1b91fa8cf11c81b995a2eda66d368259be139" translate="yes" xml:space="preserve">
          <source>textureId</source>
          <target state="translated">textureId</target>
        </trans-unit>
        <trans-unit id="5f19acedead1eee8aeb1197411b6f1bc72e9dddc" translate="yes" xml:space="preserve">
          <source>textureId : &lt;a href=&quot;qml-int&quot;&gt;int&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25d6230fe3b6a650fb69a7462078e0d74d289f0a" translate="yes" xml:space="preserve">
          <source>textureId : int</source>
          <target state="translated">textureId:int</target>
        </trans-unit>
        <trans-unit id="4e6d430c2aeeeb511763459b09e7948eeec36ef8" translate="yes" xml:space="preserve">
          <source>textureImage</source>
          <target state="translated">textureImage</target>
        </trans-unit>
        <trans-unit id="da5a6c330e8c3a075091f21c352ce0db46495f29" translate="yes" xml:space="preserve">
          <source>textureMirroring : &lt;a href=&quot;qml-enumeration&quot;&gt;enumeration&lt;/a&gt;</source>
          <target state="translated">textureMirroring: &lt;a href=&quot;qml-enumeration&quot;&gt;enumeraci&amp;oacute;n&lt;/a&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
