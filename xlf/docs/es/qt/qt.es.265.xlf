<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="qt">
    <body>
      <group id="qt">
        <trans-unit id="f9b2a4701ce7e9150f1081b0a02692566c33e8c9" translate="yes" xml:space="preserve">
          <source>bool QGeoShape::isEmpty() const</source>
          <target state="translated">bool QGeoShape::isEmpty()const</target>
        </trans-unit>
        <trans-unit id="b1b9fe59e90b907fcd5fb12b425771c442ff8b01" translate="yes" xml:space="preserve">
          <source>bool QGeoShape::isValid() const</source>
          <target state="translated">bool QGeoShape::isValid()const</target>
        </trans-unit>
        <trans-unit id="37ac63a0a84ecf150ef97ed5c9b947489f0720f7" translate="yes" xml:space="preserve">
          <source>bool QGeoShape::operator!=(const &lt;a href=&quot;qgeoshape#QGeoShape&quot;&gt;QGeoShape&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QGeoShape :: operator! = (const &lt;a href=&quot;qgeoshape#QGeoShape&quot;&gt;QGeoShape&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="bbffa51337a107a4fa6bb38c2d6d19630b1d3864" translate="yes" xml:space="preserve">
          <source>bool QGeoShape::operator==(const &lt;a href=&quot;qgeoshape#QGeoShape&quot;&gt;QGeoShape&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QGeoShape :: operator == (const &lt;a href=&quot;qgeoshape#QGeoShape&quot;&gt;QGeoShape&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="5d55b10a7134d7d2c92bd43d66a49556c1b210d9" translate="yes" xml:space="preserve">
          <source>bool QGestureEvent::isAccepted(&lt;a href=&quot;qgesture&quot;&gt;QGesture&lt;/a&gt; *</source>
          <target state="translated">bool QGestureEvent :: isAccepted ( &lt;a href=&quot;qgesture&quot;&gt;QGesture&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="1bb908f84c231c9bf9bc0c020dc30dce0bc05ca9" translate="yes" xml:space="preserve">
          <source>bool QGestureEvent::isAccepted(&lt;a href=&quot;qt#GestureType-enum&quot;&gt;Qt::GestureType&lt;/a&gt;</source>
          <target state="translated">bool QGestureEvent :: isAccepted ( &lt;a href=&quot;qt#GestureType-enum&quot;&gt;Qt :: GestureType&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e1067d50edc880930dfe000517590b7e199cd045" translate="yes" xml:space="preserve">
          <source>bool QGradient::operator!=(const QGradient &amp;amp;</source>
          <target state="translated">bool QGradient :: operator! = (const QGradient &amp;amp;</target>
        </trans-unit>
        <trans-unit id="b2984bdcbc5512811cefe95d5bf1da476cdeaf37" translate="yes" xml:space="preserve">
          <source>bool QGradient::operator==(const QGradient &amp;amp;</source>
          <target state="translated">bool QGradient :: operator == (const QGradient &amp;amp;</target>
        </trans-unit>
        <trans-unit id="b57d504133abbdccdfa8423ec34aae93c024dde8" translate="yes" xml:space="preserve">
          <source>bool QGraphicsApiFilter::operator!=(const &lt;a href=&quot;qt3drender-qgraphicsapifilter&quot;&gt;Qt3DRender::QGraphicsApiFilter&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QGraphicsApiFilter :: operator! = (const &lt;a href=&quot;qt3drender-qgraphicsapifilter&quot;&gt;Qt3DRender :: QGraphicsApiFilter&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="95ab3e2080584c459665b103f8db5d14a33b860f" translate="yes" xml:space="preserve">
          <source>bool QGraphicsApiFilter::operator==(const &lt;a href=&quot;qt3drender-qgraphicsapifilter&quot;&gt;Qt3DRender::QGraphicsApiFilter&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QGraphicsApiFilter :: operator == (const &lt;a href=&quot;qt3drender-qgraphicsapifilter&quot;&gt;Qt3DRender :: QGraphicsApiFilter&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="a5b55028ce542798772b3613bc110bea5005e800" translate="yes" xml:space="preserve">
          <source>bool QGraphicsItem::acceptDrops() const</source>
          <target state="translated">bool QGraphicsItem::acceptDrops()const</target>
        </trans-unit>
        <trans-unit id="9a82e1e76e0d92da19ec034aa5f7ebefd0b443ae" translate="yes" xml:space="preserve">
          <source>bool QGraphicsItem::acceptHoverEvents() const</source>
          <target state="translated">bool QGraphicsItem::acceptHoverEvents()const</target>
        </trans-unit>
        <trans-unit id="83a65d7d3cb290e44e6ee1fdbf6804fead119a73" translate="yes" xml:space="preserve">
          <source>bool QGraphicsItem::acceptTouchEvents() const</source>
          <target state="translated">bool QGraphicsItem::acceptTouchEvents()const</target>
        </trans-unit>
        <trans-unit id="eafacd864065914f5a2ee1cde5b87ed2d40e5211" translate="yes" xml:space="preserve">
          <source>bool QGraphicsItem::filtersChildEvents() const</source>
          <target state="translated">bool QGraphicsItem::filtersChildEvents()const</target>
        </trans-unit>
        <trans-unit id="10b9601f8df1c5a28545e2c1ea622f9d80e3a936" translate="yes" xml:space="preserve">
          <source>bool QGraphicsItem::hasCursor() const</source>
          <target state="translated">bool QGraphicsItem::hasCursor()const</target>
        </trans-unit>
        <trans-unit id="331d0c555be4f8946c247e96d42d63beaabe2392" translate="yes" xml:space="preserve">
          <source>bool QGraphicsItem::hasFocus() const</source>
          <target state="translated">bool QGraphicsItem::hasFocus()const</target>
        </trans-unit>
        <trans-unit id="4e23a2c1a00b1a6d0e75b6c86c977f66836ff4a4" translate="yes" xml:space="preserve">
          <source>bool QGraphicsItem::isActive() const</source>
          <target state="translated">bool QGraphicsItem::isActive()const</target>
        </trans-unit>
        <trans-unit id="d747e7b1ba5e0fb420c0088464398a060de2ee14" translate="yes" xml:space="preserve">
          <source>bool QGraphicsItem::isAncestorOf(const &lt;a href=&quot;qgraphicsitem#QGraphicsItem&quot;&gt;QGraphicsItem&lt;/a&gt; *</source>
          <target state="translated">bool QGraphicsItem :: isAncestorOf (const &lt;a href=&quot;qgraphicsitem#QGraphicsItem&quot;&gt;QGraphicsItem&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="4b42ccc3b282e905d51e17fc76d3ea852bdab6e2" translate="yes" xml:space="preserve">
          <source>bool QGraphicsItem::isBlockedByModalPanel(&lt;a href=&quot;qgraphicsitem#QGraphicsItem&quot;&gt;QGraphicsItem&lt;/a&gt; **</source>
          <target state="translated">bool QGraphicsItem :: isBlockedByModalPanel ( &lt;a href=&quot;qgraphicsitem#QGraphicsItem&quot;&gt;QGraphicsItem&lt;/a&gt; **</target>
        </trans-unit>
        <trans-unit id="e9a8ac112a98f9b25162da106c4d6b8d202d6df6" translate="yes" xml:space="preserve">
          <source>bool QGraphicsItem::isClipped() const</source>
          <target state="translated">bool QGraphicsItem::isClipped()const</target>
        </trans-unit>
        <trans-unit id="2e651b21f9d8abeddd521228fc12d3d8ca30455b" translate="yes" xml:space="preserve">
          <source>bool QGraphicsItem::isEnabled() const</source>
          <target state="translated">bool QGraphicsItem::isEnabled()const</target>
        </trans-unit>
        <trans-unit id="89c0c27505c31e05d0f2a9ad3b3ee5b4e3956664" translate="yes" xml:space="preserve">
          <source>bool QGraphicsItem::isObscured(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">bool QGraphicsItem :: isObscured ( &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1d3a26be3d12ba623f6406a34aa47153b9bb85b2" translate="yes" xml:space="preserve">
          <source>bool QGraphicsItem::isObscured(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e4413b5b5bc5ec705eed8b3d2e3005461a1a7f7" translate="yes" xml:space="preserve">
          <source>bool QGraphicsItem::isObscured(const &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QGraphicsItem :: isObscured (const &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="9aabc4fef7e9881d6d540fc755370e1daa6421a9" translate="yes" xml:space="preserve">
          <source>bool QGraphicsItem::isPanel() const</source>
          <target state="translated">bool QGraphicsItem::isPanel()const</target>
        </trans-unit>
        <trans-unit id="cb7caf2aba27ba60ac409864455d893189780767" translate="yes" xml:space="preserve">
          <source>bool QGraphicsItem::isSelected() const</source>
          <target state="translated">bool QGraphicsItem::isSelected()const</target>
        </trans-unit>
        <trans-unit id="f9ef0acfcd7fa2af721d456ac564e3048713baf1" translate="yes" xml:space="preserve">
          <source>bool QGraphicsItem::isUnderMouse() const</source>
          <target state="translated">bool QGraphicsItem::isUnderMouse()const</target>
        </trans-unit>
        <trans-unit id="aeb4109ce0b0c33abb8dac3ba0db256087d7f8ed" translate="yes" xml:space="preserve">
          <source>bool QGraphicsItem::isVisible() const</source>
          <target state="translated">bool QGraphicsItem::isVisible()const</target>
        </trans-unit>
        <trans-unit id="2736bf3395c8537ef0974a5f9977cfcf2e0829c0" translate="yes" xml:space="preserve">
          <source>bool QGraphicsItem::isVisibleTo(const &lt;a href=&quot;qgraphicsitem#QGraphicsItem&quot;&gt;QGraphicsItem&lt;/a&gt; *</source>
          <target state="translated">bool QGraphicsItem :: isVisibleTo (const &lt;a href=&quot;qgraphicsitem#QGraphicsItem&quot;&gt;QGraphicsItem&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="786a7a124ce06a17739b05739b676bd0f6ab56e2" translate="yes" xml:space="preserve">
          <source>bool QGraphicsItem::isWidget() const</source>
          <target state="translated">bool QGraphicsItem::isWidget()const</target>
        </trans-unit>
        <trans-unit id="45ea70409095138689ba1b6d407ddd5d35df3e40" translate="yes" xml:space="preserve">
          <source>bool QGraphicsItem::isWindow() const</source>
          <target state="translated">bool QGraphicsItem::isWindow()const</target>
        </trans-unit>
        <trans-unit id="7b80964a5cf4f8f70c970cf10641cd41cd39abd5" translate="yes" xml:space="preserve">
          <source>bool QGraphicsLayout::isActivated() const</source>
          <target state="translated">bool QGraphicsLayout::isActivated()const</target>
        </trans-unit>
        <trans-unit id="910ad7563735e6a3579ef861826612d7f6745ad6" translate="yes" xml:space="preserve">
          <source>bool QGraphicsLayoutItem::isLayout() const</source>
          <target state="translated">bool QGraphicsLayoutItem::isLayout()const</target>
        </trans-unit>
        <trans-unit id="aca8c18743fc4bc78d95ba3f2d507d706a57a1e3" translate="yes" xml:space="preserve">
          <source>bool QGraphicsLayoutItem::ownedByLayout() const</source>
          <target state="translated">bool QGraphicsLayoutItem::ownedByLayout()const</target>
        </trans-unit>
        <trans-unit id="1751a0022131b130cc816bf0504fb9f9c49cdccc" translate="yes" xml:space="preserve">
          <source>bool QGraphicsScene::hasFocus() const</source>
          <target state="translated">bool QGraphicsScene::hasFocus()const</target>
        </trans-unit>
        <trans-unit id="1d28c7f55e9b428be10c57fe34731fc8a065681b" translate="yes" xml:space="preserve">
          <source>bool QGraphicsScene::isActive() const</source>
          <target state="translated">bool QGraphicsScene::isActive()const</target>
        </trans-unit>
        <trans-unit id="25cd8572561bb9ba471b6cbc87608d1a94c16bbb" translate="yes" xml:space="preserve">
          <source>bool QGraphicsScene::sendEvent(&lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt; *</source>
          <target state="translated">bool QGraphicsScene :: sendEvent ( &lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="dfc64cd21dfec529e6345dedca8b7a62d4abe1ef" translate="yes" xml:space="preserve">
          <source>bool QGraphicsTextItem::tabChangesFocus() const</source>
          <target state="translated">bool QGraphicsTextItem::tabChangesFocus()const</target>
        </trans-unit>
        <trans-unit id="d93fc644a2440d01d23eba9ceff6677e1b79a7cc" translate="yes" xml:space="preserve">
          <source>bool QGraphicsView::isTransformed() const</source>
          <target state="translated">bool QGraphicsView::isTransformed()const</target>
        </trans-unit>
        <trans-unit id="112001bc5a3ebec4e5d92825f13c1ec3a2642e13" translate="yes" xml:space="preserve">
          <source>bool QGraphicsWidget::isActiveWindow() const</source>
          <target state="translated">bool QGraphicsWidget::isActiveWindow()const</target>
        </trans-unit>
        <trans-unit id="d4fc103fbe09758d182c209456d9df51a1fc630d" translate="yes" xml:space="preserve">
          <source>bool QGraphicsWidget::testAttribute(&lt;a href=&quot;qt#WidgetAttribute-enum&quot;&gt;Qt::WidgetAttribute&lt;/a&gt;</source>
          <target state="translated">bool QGraphicsWidget :: testAttribute ( &lt;a href=&quot;qt#WidgetAttribute-enum&quot;&gt;Qt :: WidgetAttribute&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b7eb1adcbecb6aa38a73f10fb1976830610951dc" translate="yes" xml:space="preserve">
          <source>bool QGuiApplication::isSavingSession() const</source>
          <target state="translated">bool QGuiAplicación::isSavingSession()const</target>
        </trans-unit>
        <trans-unit id="9b18c35a9bab093efcbd2addbf982355652832db" translate="yes" xml:space="preserve">
          <source>bool QGuiApplication::isSessionRestored() const</source>
          <target state="translated">bool QGuiAplicación::isSesiónRestaurada()const</target>
        </trans-unit>
        <trans-unit id="ce6949ea2bae62d1bd45d00adae52bd9835f5ee5" translate="yes" xml:space="preserve">
          <source>bool QHash::contains(const Key &amp;amp;</source>
          <target state="translated">bool QHash :: contiene (clave const y</target>
        </trans-unit>
        <trans-unit id="b0a6c0fcfd62da122584528270d57c2b61434080" translate="yes" xml:space="preserve">
          <source>bool QHash::empty() const</source>
          <target state="translated">bool QHash::empty()const</target>
        </trans-unit>
        <trans-unit id="dadfbe77e57518c45660f994e06fefc09cddd249" translate="yes" xml:space="preserve">
          <source>bool QHash::isEmpty() const</source>
          <target state="translated">bool QHash::isEmpty()const</target>
        </trans-unit>
        <trans-unit id="00a2bed7bdff2f615891f97bcc494b5515d072cb" translate="yes" xml:space="preserve">
          <source>bool QHash::operator!=(const &lt;a href=&quot;qhash#QHash&quot;&gt;QHash&lt;/a&gt;&amp;lt;K, V&amp;gt; &amp;amp;</source>
          <target state="translated">bool QHash :: operator! = (const &lt;a href=&quot;qhash#QHash&quot;&gt;QHash&lt;/a&gt; &amp;lt;K, V&amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="62ff4df1021a15fa3b594dd8dec313dcb4573ba2" translate="yes" xml:space="preserve">
          <source>bool QHash::operator==(const &lt;a href=&quot;qhash#QHash&quot;&gt;QHash&lt;/a&gt;&amp;lt;K, V&amp;gt; &amp;amp;</source>
          <target state="translated">bool QHash :: operator == (const &lt;a href=&quot;qhash#QHash&quot;&gt;QHash&lt;/a&gt; &amp;lt;K, V&amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="5dd67b8133a6ac3214b4bb551631b6cf05a1b41d" translate="yes" xml:space="preserve">
          <source>bool QHash::remove(const Key &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bb4e6baaf7a7776b75ef377ef90f5c2656a9277" translate="yes" xml:space="preserve">
          <source>bool QHashIterator::findNext(const T &amp;amp;</source>
          <target state="translated">bool QHashIterator :: findNext (const T &amp;amp;</target>
        </trans-unit>
        <trans-unit id="3d3dde5d32883b921bafe57869580aaec29df13c" translate="yes" xml:space="preserve">
          <source>bool QHashIterator::findPrevious(const T &amp;amp;</source>
          <target state="translated">bool QHashIterator :: findPrevious (const T &amp;amp;</target>
        </trans-unit>
        <trans-unit id="066c61c3d67cadd8b7ce72f4043436b5e183af13" translate="yes" xml:space="preserve">
          <source>bool QHashIterator::hasNext() const</source>
          <target state="translated">bool QHashIterator::hasNext()const</target>
        </trans-unit>
        <trans-unit id="b05dd58c3cca0688ebd988c80662951866f5094e" translate="yes" xml:space="preserve">
          <source>bool QHashIterator::hasPrevious() const</source>
          <target state="translated">bool QHashIterator::hasPrevio()const</target>
        </trans-unit>
        <trans-unit id="bf5e2f698dae5b5d8094cf6534bd52aebbb2345f" translate="yes" xml:space="preserve">
          <source>bool QHeaderView::isSectionHidden(int</source>
          <target state="translated">bool QHeaderView::isSectionHidden(int</target>
        </trans-unit>
        <trans-unit id="46b029a4f43202290bfd758b4245a3a55f5277b9" translate="yes" xml:space="preserve">
          <source>bool QHeaderView::restoreState(const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QHeaderView :: restoreState (const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="1e4cd38c2c536325be18590d55ac58357387d06c" translate="yes" xml:space="preserve">
          <source>bool QHeaderView::sectionsClickable() const</source>
          <target state="translated">bool QHeaderView::seccionesClickable()const</target>
        </trans-unit>
        <trans-unit id="cea0606d8b437245abceef8470e4b55ea439200f" translate="yes" xml:space="preserve">
          <source>bool QHeaderView::sectionsHidden() const</source>
          <target state="translated">bool QHeaderView::sectionsHidden()const</target>
        </trans-unit>
        <trans-unit id="2a8dc609ed773fa5022ade83042889b91a68f756" translate="yes" xml:space="preserve">
          <source>bool QHeaderView::sectionsMovable() const</source>
          <target state="translated">bool QHeaderVer::seccionesMovible()const</target>
        </trans-unit>
        <trans-unit id="67d6ec690949ce0fbe9457925279505fe65b427c" translate="yes" xml:space="preserve">
          <source>bool QHeaderView::sectionsMoved() const</source>
          <target state="translated">bool QHeaderVer::seccionesMovidas()const</target>
        </trans-unit>
        <trans-unit id="3a6d6bcc3e825fdb826fb3f2cc4da234f596518b" translate="yes" xml:space="preserve">
          <source>bool QHelpContentModel::isCreatingContents() const</source>
          <target state="translated">bool QHelpContentModel::isCreatingContents()const</target>
        </trans-unit>
        <trans-unit id="ec87959d01fadeb394e0843c43754ced2edfd4c8" translate="yes" xml:space="preserve">
          <source>bool QHelpEngineCore::copyCollectionFile(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QHelpEngineCore :: copyCollectionFile (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="31d69c3897ce2f4427485d07bb7e5772e151e55c" translate="yes" xml:space="preserve">
          <source>bool QHelpEngineCore::registerDocumentation(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QHelpEngineCore :: registerDocumentation (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="8680654775aa5d3734b6de7e6ca92c148f54da67" translate="yes" xml:space="preserve">
          <source>bool QHelpEngineCore::removeCustomValue(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QHelpEngineCore :: removeCustomValue (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="68d08146f7abd473b3b712e2654c509c034de3b7" translate="yes" xml:space="preserve">
          <source>bool QHelpEngineCore::setCustomValue(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QHelpEngineCore :: setCustomValue (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="e6d8800d7281dc99bfa0189f12da7898c1caa507" translate="yes" xml:space="preserve">
          <source>bool QHelpEngineCore::setupData()</source>
          <target state="translated">bool QHelpEngineCore::setupData()</target>
        </trans-unit>
        <trans-unit id="418dd6be532b6a6eadb632173e42cc235c5482bc" translate="yes" xml:space="preserve">
          <source>bool QHelpEngineCore::unregisterDocumentation(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QHelpEngineCore :: unregisterDocumentation (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="17b153b89467a592ef0277e4eca00d601da82374" translate="yes" xml:space="preserve">
          <source>bool QHelpEngineCore::usesFilterEngine() const</source>
          <target state="translated">bool QHelpEngineCore::usesFilterEngine()const</target>
        </trans-unit>
        <trans-unit id="d64042cbb9629eece9a7785bcbea13c0a598dd50" translate="yes" xml:space="preserve">
          <source>bool QHelpFilterEngine::removeFilter(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QHelpFilterEngine :: removeFilter (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="ea171cb17b1812ef5bce06703ee6809f68a652d3" translate="yes" xml:space="preserve">
          <source>bool QHelpFilterEngine::setActiveFilter(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QHelpFilterEngine :: setActiveFilter (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="61e697d3a4c8b45e07ee36530b61215b268b7c0b" translate="yes" xml:space="preserve">
          <source>bool QHelpFilterEngine::setFilterData(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QHelpFilterEngine :: setFilterData (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="49191695bff4d9a8957f8592b94f833c5ea8d5b0" translate="yes" xml:space="preserve">
          <source>bool QHelpFilterSettingsWidget::applySettings(&lt;a href=&quot;qhelpfilterengine&quot;&gt;QHelpFilterEngine&lt;/a&gt; *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="486f777d6c7ec679c7d4f1f7e2d8f3ff45d2a861" translate="yes" xml:space="preserve">
          <source>bool QHelpIndexModel::isCreatingIndex() const</source>
          <target state="translated">bool QHelpIndexModelo::isCreatingIndex()const</target>
        </trans-unit>
        <trans-unit id="7b9f6f9de1b3239ef29719015588221ea1c883cb" translate="yes" xml:space="preserve">
          <source>bool QHostAddress::isBroadcast() const</source>
          <target state="translated">bool QHostAddress::isBroadcast()const</target>
        </trans-unit>
        <trans-unit id="bf85f6708b1f9bde77ff1a7ada5c8b39c5ec1de0" translate="yes" xml:space="preserve">
          <source>bool QHostAddress::isEqual(const &lt;a href=&quot;qhostaddress#QHostAddress&quot;&gt;QHostAddress&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QHostAddress :: isEqual (const &lt;a href=&quot;qhostaddress#QHostAddress&quot;&gt;QHostAddress&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="db592e4231e9d118a7ac8860e50b34eef820324b" translate="yes" xml:space="preserve">
          <source>bool QHostAddress::isGlobal() const</source>
          <target state="translated">bool QHostAddress::isGlobal()const</target>
        </trans-unit>
        <trans-unit id="a89cf2d013e00f513e1d875f9931b52f02c1baf1" translate="yes" xml:space="preserve">
          <source>bool QHostAddress::isInSubnet(const &lt;a href=&quot;qhostaddress#QHostAddress&quot;&gt;QHostAddress&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QHostAddress :: isInSubnet (const &lt;a href=&quot;qhostaddress#QHostAddress&quot;&gt;QHostAddress&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="209728fa0ef8321f2d893284af7cecc9bf74c6bc" translate="yes" xml:space="preserve">
          <source>bool QHostAddress::isInSubnet(const &lt;a href=&quot;qpair&quot;&gt;QPair&lt;/a&gt;&amp;lt;&lt;a href=&quot;qhostaddress#QHostAddress&quot;&gt;QHostAddress&lt;/a&gt;, int&amp;gt; &amp;amp;</source>
          <target state="translated">bool QHostAddress :: isInSubnet (const &lt;a href=&quot;qpair&quot;&gt;QPair&lt;/a&gt; &amp;lt; &lt;a href=&quot;qhostaddress#QHostAddress&quot;&gt;QHostAddress&lt;/a&gt; , int&amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="d5a76331c782f781d9e1173cbae4f5a8e67ce483" translate="yes" xml:space="preserve">
          <source>bool QHostAddress::isInSubnet(const QPair&amp;lt;&lt;a href=&quot;qhostaddress#QHostAddress&quot;&gt;QHostAddress&lt;/a&gt;, int&amp;gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25c1fbc2545200cb48645fdc6f30e2847638ffe7" translate="yes" xml:space="preserve">
          <source>bool QHostAddress::isLinkLocal() const</source>
          <target state="translated">bool QHostAddress::isLinkLocal()const</target>
        </trans-unit>
        <trans-unit id="df6b248dd37e88ac169ad2ec1d51b0516d7857ee" translate="yes" xml:space="preserve">
          <source>bool QHostAddress::isLoopback() const</source>
          <target state="translated">bool QHostAddress::isLoopback()const</target>
        </trans-unit>
        <trans-unit id="2bd0cfb77c0d021e9ee66ffd805b6f481e304374" translate="yes" xml:space="preserve">
          <source>bool QHostAddress::isMulticast() const</source>
          <target state="translated">bool QHostAddress::isMulticast()const</target>
        </trans-unit>
        <trans-unit id="1a4ad2fd67f07c0f98957a41fc7c3411c222f355" translate="yes" xml:space="preserve">
          <source>bool QHostAddress::isNull() const</source>
          <target state="translated">bool QHostAddress::isNull()const</target>
        </trans-unit>
        <trans-unit id="5d2ecf0ffd0a1e637e9f2c1cbdb191316c33a375" translate="yes" xml:space="preserve">
          <source>bool QHostAddress::isSiteLocal() const</source>
          <target state="translated">bool QHostAddress::isSiteLocal()const</target>
        </trans-unit>
        <trans-unit id="67237961da79554fa435bedc7d21ab52e295d9f4" translate="yes" xml:space="preserve">
          <source>bool QHostAddress::isUniqueLocalUnicast() const</source>
          <target state="translated">bool QHostDirección::isUniqueLocalUnicast()const</target>
        </trans-unit>
        <trans-unit id="0129245dfae514104391942088b43ebed7962c30" translate="yes" xml:space="preserve">
          <source>bool QHostAddress::operator!=(&lt;a href=&quot;qhostaddress#SpecialAddress-enum&quot;&gt;QHostAddress::SpecialAddress&lt;/a&gt;</source>
          <target state="translated">bool QHostAddress :: operator! = ( &lt;a href=&quot;qhostaddress#SpecialAddress-enum&quot;&gt;QHostAddress :: SpecialAddress&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ea576e27108b544715a6c78d7831fc11c7d79adf" translate="yes" xml:space="preserve">
          <source>bool QHostAddress::operator!=(const &lt;a href=&quot;qhostaddress#QHostAddress&quot;&gt;QHostAddress&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QHostAddress :: operator! = (const &lt;a href=&quot;qhostaddress#QHostAddress&quot;&gt;QHostAddress&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="8dca17f25b5221d5a0c8e8a1124ad7713d2ad4eb" translate="yes" xml:space="preserve">
          <source>bool QHostAddress::operator==(&lt;a href=&quot;qhostaddress#SpecialAddress-enum&quot;&gt;QHostAddress::SpecialAddress&lt;/a&gt;</source>
          <target state="translated">bool QHostAddress :: operator == ( &lt;a href=&quot;qhostaddress#SpecialAddress-enum&quot;&gt;QHostAddress :: SpecialAddress&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="aae845447d830ae9337b8a38c0f52632830b5f48" translate="yes" xml:space="preserve">
          <source>bool QHostAddress::operator==(const &lt;a href=&quot;qhostaddress#QHostAddress&quot;&gt;QHostAddress&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QHostAddress :: operator == (const &lt;a href=&quot;qhostaddress#QHostAddress&quot;&gt;QHostAddress&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="e9466779123b25b4a5565360e992ca8b7bd3c007" translate="yes" xml:space="preserve">
          <source>bool QHostAddress::setAddress(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QHostAddress :: setAddress (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="1b66afa716759fa6e8f23b7f19b6e4c6814b1d25" translate="yes" xml:space="preserve">
          <source>bool QHstsPolicy::includesSubDomains() const</source>
          <target state="translated">bool QHstsPolicy::includesSubDomains()const</target>
        </trans-unit>
        <trans-unit id="0e8a01a9d4c99eac90ff980e2c202c7ef3dfb7ec" translate="yes" xml:space="preserve">
          <source>bool QHstsPolicy::isExpired() const</source>
          <target state="translated">bool QHstsPolicy::isExpired()const</target>
        </trans-unit>
        <trans-unit id="a7bfc5286b240c614b5ef68eb069fa3aa7b3d476" translate="yes" xml:space="preserve">
          <source>bool QHttp2Configuration::huffmanCompressionEnabled() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12a2e0739bde2e8cdab3ac3bf10cd4511cf6e3cd" translate="yes" xml:space="preserve">
          <source>bool QHttp2Configuration::serverPushEnabled() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fbd5891231bd96acd9a1136590f46b9986b1f17" translate="yes" xml:space="preserve">
          <source>bool QHttp2Configuration::setMaxFrameSize(unsignedint</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97e3a43000cf7d64bbdd1445a4a281e759762c94" translate="yes" xml:space="preserve">
          <source>bool QHttp2Configuration::setSessionReceiveWindowSize(unsignedint</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2d9fdafd7911fc6c2f6d5270e5dfe4dcf1d2aeb" translate="yes" xml:space="preserve">
          <source>bool QHttp2Configuration::setStreamReceiveWindowSize(unsignedint</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be3c589e2c80edfad5fe3bf7703366e12cab96df" translate="yes" xml:space="preserve">
          <source>bool QHttpPart::operator!=(const &lt;a href=&quot;qhttppart#QHttpPart&quot;&gt;QHttpPart&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QHttpPart :: operator! = (const &lt;a href=&quot;qhttppart#QHttpPart&quot;&gt;QHttpPart&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="758c3ea03cc22a7cb2cd967a2cc4213d61665804" translate="yes" xml:space="preserve">
          <source>bool QHttpPart::operator==(const &lt;a href=&quot;qhttppart#QHttpPart&quot;&gt;QHttpPart&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QHttpPart :: operator == (const &lt;a href=&quot;qhttppart#QHttpPart&quot;&gt;QHttpPart&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="5f3f4044acdde88251bf0693e1bab68ed680d3c4" translate="yes" xml:space="preserve">
          <source>bool QIODevice::getChar(char *</source>
          <target state="translated">bool QIODevice::getChar(char *</target>
        </trans-unit>
        <trans-unit id="6c648d5934a992db346630dbf48f4a538808607e" translate="yes" xml:space="preserve">
          <source>bool QIODevice::isOpen() const</source>
          <target state="translated">bool QIODispositivo::isOpen()const</target>
        </trans-unit>
        <trans-unit id="eb410c9abfe2d3c5d50fbb846e934801bbab2bb7" translate="yes" xml:space="preserve">
          <source>bool QIODevice::isReadable() const</source>
          <target state="translated">bool QIODispositivo::isReadable()const</target>
        </trans-unit>
        <trans-unit id="c4083f502d916d08813aa06920a49390554b5888" translate="yes" xml:space="preserve">
          <source>bool QIODevice::isTextModeEnabled() const</source>
          <target state="translated">bool QIODispositivo::isTextModeEnabled()const</target>
        </trans-unit>
        <trans-unit id="83f49fef3a3dfba5f213e4267e4662160b7ccea5" translate="yes" xml:space="preserve">
          <source>bool QIODevice::isTransactionStarted() const</source>
          <target state="translated">bool QIODispositivo::isTransactionStarted()const</target>
        </trans-unit>
        <trans-unit id="55ee9d8eeb6349bacd445d39ad4fbb01250209fe" translate="yes" xml:space="preserve">
          <source>bool QIODevice::isWritable() const</source>
          <target state="translated">bool QIODispositivo::isWritable()const</target>
        </trans-unit>
        <trans-unit id="734c39308bfa87d22b49b62d33f33faf292b47a2" translate="yes" xml:space="preserve">
          <source>bool QIODevice::putChar(char</source>
          <target state="translated">bool QIODispositivo::putChar(char</target>
        </trans-unit>
        <trans-unit id="e56a978a892f543d6603868d1841abaeec550540" translate="yes" xml:space="preserve">
          <source>bool QIcon::isMask() const</source>
          <target state="translated">bool QIcon::isMask()const</target>
        </trans-unit>
        <trans-unit id="ad2db8d67680e6e0ed47d643253f1d5987116a3d" translate="yes" xml:space="preserve">
          <source>bool QIcon::isNull() const</source>
          <target state="translated">bool QIcon::isNull()const</target>
        </trans-unit>
        <trans-unit id="d4f779e9cd45a6ab61a644f54f32611c329d1fe2" translate="yes" xml:space="preserve">
          <source>bool QIconEngine::isNull() const</source>
          <target state="translated">bool QIconEngine::isNull()const</target>
        </trans-unit>
        <trans-unit id="5ea2d7a01640420d70ec7faa96fbaff13753a43e" translate="yes" xml:space="preserve">
          <source>bool QImage::allGray() const</source>
          <target state="translated">bool QImage::allGray()const</target>
        </trans-unit>
        <trans-unit id="4588280c753781c7897bc8a053e3c6914fc84453" translate="yes" xml:space="preserve">
          <source>bool QImage::hasAlphaChannel() const</source>
          <target state="translated">bool QImage::hasAlphaChannel()const</target>
        </trans-unit>
        <trans-unit id="a42690290a7b9957be7a59ccef9bef2f2e0b47c7" translate="yes" xml:space="preserve">
          <source>bool QImage::isGrayscale() const</source>
          <target state="translated">bool QImage::isGrayscale()const</target>
        </trans-unit>
        <trans-unit id="513b487912f490c4247947ef6e5fd729b0a85311" translate="yes" xml:space="preserve">
          <source>bool QImage::isNull() const</source>
          <target state="translated">bool QImage::isNull()const</target>
        </trans-unit>
        <trans-unit id="c7b8aa0a86d1b9a4820deff507dbea6126289f9c" translate="yes" xml:space="preserve">
          <source>bool QImage::load(&lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt; *</source>
          <target state="translated">bool QImage :: load ( &lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="e195688e7571d9859cd992dbfd0640db5211d16e" translate="yes" xml:space="preserve">
          <source>bool QImage::load(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QImage :: load (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="a9e68a5eebbcee903441a2103da23cd85a5484c8" translate="yes" xml:space="preserve">
          <source>bool QImage::loadFromData(const &lt;a href=&quot;#uchar-typedef&quot;&gt;uchar&lt;/a&gt; *</source>
          <target state="translated">bool QImage :: loadFromData (const &lt;a href=&quot;#uchar-typedef&quot;&gt;uchar&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="e32713e54e49526dc7dccf2da689809ac4055bde" translate="yes" xml:space="preserve">
          <source>bool QImage::loadFromData(const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QImage :: loadFromData (const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="e4b0edb45b30f5ba3d9acda316de09c5f0870c5b" translate="yes" xml:space="preserve">
          <source>bool QImage::loadFromData(const &lt;a href=&quot;qtglobal#uchar-typedef&quot;&gt;uchar&lt;/a&gt; *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43a756f1730db3a9048601b91471258143cd5fd9" translate="yes" xml:space="preserve">
          <source>bool QImage::operator!=(const &lt;a href=&quot;qimage#QImage&quot;&gt;QImage&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QImage :: operador! = (const &lt;a href=&quot;qimage#QImage&quot;&gt;QImage&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="f87c4a31280e530a9b6d55d436cebddb9af4bb23" translate="yes" xml:space="preserve">
          <source>bool QImage::operator==(const &lt;a href=&quot;qimage#QImage&quot;&gt;QImage&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QImage :: operador == (const &lt;a href=&quot;qimage#QImage&quot;&gt;QImage&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="7e8218db8c862121fed1b23e356ca3f4558d3a60" translate="yes" xml:space="preserve">
          <source>bool QImage::reinterpretAsFormat(&lt;a href=&quot;qimage#Format-enum&quot;&gt;QImage::Format&lt;/a&gt;</source>
          <target state="translated">bool QImage :: reinterpretAsFormat ( &lt;a href=&quot;qimage#Format-enum&quot;&gt;QImage :: Formato&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="318f627040a7e31a44f245ecf421d1e4bb540b2c" translate="yes" xml:space="preserve">
          <source>bool QImage::save(&lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt; *</source>
          <target state="translated">bool QImage :: guardar ( &lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="4ec969c3e4eef97f51f356f0598fd00e7ee325de" translate="yes" xml:space="preserve">
          <source>bool QImage::save(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QImage :: save (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="6e2bfff8d77c179e57a85545446e801ba3bf2506" translate="yes" xml:space="preserve">
          <source>bool QImage::valid(const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QImage :: v&amp;aacute;lido (const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="ce727151e6090fd8d52976b26acf4ba6fe3188eb" translate="yes" xml:space="preserve">
          <source>bool QImage::valid(int</source>
          <target state="translated">bool QImage::valid(int</target>
        </trans-unit>
        <trans-unit id="2dce39bf729aacae82e616c01036c4d708f5736d" translate="yes" xml:space="preserve">
          <source>bool QImageEncoderSettings::isNull() const</source>
          <target state="translated">bool QImageEncoderSettings::isNull()const</target>
        </trans-unit>
        <trans-unit id="227ff013194f04159c872e73dd33156d73503572" translate="yes" xml:space="preserve">
          <source>bool QImageEncoderSettings::operator!=(const &lt;a href=&quot;qimageencodersettings#QImageEncoderSettings&quot;&gt;QImageEncoderSettings&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QImageEncoderSettings :: operator! = (const &lt;a href=&quot;qimageencodersettings#QImageEncoderSettings&quot;&gt;QImageEncoderSettings&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="d5bc8934fd95e03ff4e69b592b58dfd055d3fc99" translate="yes" xml:space="preserve">
          <source>bool QImageEncoderSettings::operator==(const &lt;a href=&quot;qimageencodersettings#QImageEncoderSettings&quot;&gt;QImageEncoderSettings&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QImageEncoderSettings :: operator == (const &lt;a href=&quot;qimageencodersettings#QImageEncoderSettings&quot;&gt;QImageEncoderSettings&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="7e8ee8be4c71e5952707bb24772bd081466d0bfa" translate="yes" xml:space="preserve">
          <source>bool QImageReader::autoDetectImageFormat() const</source>
          <target state="translated">bool QImageReader::autoDetectImageFormat()const</target>
        </trans-unit>
        <trans-unit id="dfa3bbcae8bca86ede83f288b79d741b1c4186ca" translate="yes" xml:space="preserve">
          <source>bool QImageReader::autoTransform() const</source>
          <target state="translated">bool QImageReader::autoTransform()const</target>
        </trans-unit>
        <trans-unit id="2674c9449259f64b35cedc87f8edbc47716ee69c" translate="yes" xml:space="preserve">
          <source>bool QImageReader::canRead() const</source>
          <target state="translated">bool QImageReader::canRead()const</target>
        </trans-unit>
        <trans-unit id="a0870efc8b4aecdd90bdc59ebf0aa4889c19eed4" translate="yes" xml:space="preserve">
          <source>bool QImageReader::decideFormatFromContent() const</source>
          <target state="translated">bool QImageReader::decideFormatFromContent()const</target>
        </trans-unit>
        <trans-unit id="88ac0e1f0f10b4fdfa587f47bc6f5338d2a8c543" translate="yes" xml:space="preserve">
          <source>bool QImageReader::jumpToImage(int</source>
          <target state="translated">bool QImageReader::jumpToImage(int</target>
        </trans-unit>
        <trans-unit id="594a639a3622fcc99d53af8fd455339e9f0dac1e" translate="yes" xml:space="preserve">
          <source>bool QImageReader::jumpToNextImage()</source>
          <target state="translated">bool QImageReader::jumpToNextImage()</target>
        </trans-unit>
        <trans-unit id="ab6801336065b3a274d3a4fefe0509bd131d1e49" translate="yes" xml:space="preserve">
          <source>bool QImageReader::read(&lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; *</source>
          <target state="translated">bool QImageReader :: read ( &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="5d09ab40f48fd630e9762fdd982799c67d2431df" translate="yes" xml:space="preserve">
          <source>bool QImageReader::supportsAnimation() const</source>
          <target state="translated">bool QImageReader::supportsAnimation()const</target>
        </trans-unit>
        <trans-unit id="2e90fc120961b9daaf4037a5e4aec1c5057a25cf" translate="yes" xml:space="preserve">
          <source>bool QImageReader::supportsOption(&lt;a href=&quot;qimageiohandler#ImageOption-enum&quot;&gt;QImageIOHandler::ImageOption&lt;/a&gt;</source>
          <target state="translated">bool QImageReader :: supportsOption ( &lt;a href=&quot;qimageiohandler#ImageOption-enum&quot;&gt;QImageIOHandler :: ImageOption&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ab5a12284b87e21fc7266898604fde649d56b506" translate="yes" xml:space="preserve">
          <source>bool QImageWriter::canWrite() const</source>
          <target state="translated">bool QImageWriter::canWrite()const</target>
        </trans-unit>
        <trans-unit id="d0d1a279e58238c30dfc0b0d80d4f526ec930031" translate="yes" xml:space="preserve">
          <source>bool QImageWriter::optimizedWrite() const</source>
          <target state="translated">bool QImageWriter::optimizadoEscritura()const</target>
        </trans-unit>
        <trans-unit id="bb04f39d53534480d8b424f11db501407ffdc617" translate="yes" xml:space="preserve">
          <source>bool QImageWriter::progressiveScanWrite() const</source>
          <target state="translated">bool QImageWriter::progressiveScanWrite()const</target>
        </trans-unit>
        <trans-unit id="1d2d9cb46306718a0c05a43ae4223507fb7aa7e0" translate="yes" xml:space="preserve">
          <source>bool QImageWriter::supportsOption(&lt;a href=&quot;qimageiohandler#ImageOption-enum&quot;&gt;QImageIOHandler::ImageOption&lt;/a&gt;</source>
          <target state="translated">bool QImageWriter :: supportsOption ( &lt;a href=&quot;qimageiohandler#ImageOption-enum&quot;&gt;QImageIOHandler :: ImageOption&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="35b5c030643cc1ddd189abe8ca6fa69743bca68e" translate="yes" xml:space="preserve">
          <source>bool QImageWriter::write(const &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QImageWriter :: write (const &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="f9edcbd4cf788fecfd48fca66e2bc309be4ac9f5" translate="yes" xml:space="preserve">
          <source>bool QInputDevice::hasCapability(&lt;a href=&quot;qinputdevice#Capability-enum&quot;&gt;QInputDevice::Capability&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4677f8235af8755710b0b4d407cc38f8c34fcb74" translate="yes" xml:space="preserve">
          <source>bool QInputDialog::testOption(&lt;a href=&quot;qinputdialog#InputDialogOption-enum&quot;&gt;QInputDialog::InputDialogOption&lt;/a&gt;</source>
          <target state="translated">bool QInputDialog :: testOption ( &lt;a href=&quot;qinputdialog#InputDialogOption-enum&quot;&gt;QInputDialog :: InputDialogOption&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="30471ce3109477efb19d2fb5ddca7fe66ee56067" translate="yes" xml:space="preserve">
          <source>bool QItemSelection::contains(const &lt;a href=&quot;qmodelindex&quot;&gt;QModelIndex&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QItemSelection :: contiene (const &lt;a href=&quot;qmodelindex&quot;&gt;QModelIndex&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="9a387000722d666074759f724922b1f0007d9f8f" translate="yes" xml:space="preserve">
          <source>bool QItemSelectionModel::columnIntersectsSelection(int</source>
          <target state="translated">bool QItemSelectionModel::columnIntersectsSelection(int</target>
        </trans-unit>
        <trans-unit id="e9f87e45fc06dedb2d06c40ea4de6e0010f23b8b" translate="yes" xml:space="preserve">
          <source>bool QItemSelectionModel::hasSelection() const</source>
          <target state="translated">bool QItemSelectionModel::hasSelection()const</target>
        </trans-unit>
        <trans-unit id="7ddc85cbb8f008f17a681d653e29099e7a31e734" translate="yes" xml:space="preserve">
          <source>bool QItemSelectionModel::isColumnSelected(int</source>
          <target state="translated">bool QItemSelectionModel::isColumnSelected(int</target>
        </trans-unit>
        <trans-unit id="75d461eaa5f2d76bed62abfdbf039b2d9597a624" translate="yes" xml:space="preserve">
          <source>bool QItemSelectionModel::isRowSelected(int</source>
          <target state="translated">bool QItemSelectionModel::isRowSelected(int</target>
        </trans-unit>
        <trans-unit id="537fed0accd01a34c3eafa361d26c06d2a23a380" translate="yes" xml:space="preserve">
          <source>bool QItemSelectionModel::isSelected(const &lt;a href=&quot;qmodelindex&quot;&gt;QModelIndex&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QItemSelectionModel :: isSelected (const &lt;a href=&quot;qmodelindex&quot;&gt;QModelIndex&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="0ca0a293d3e628e96f707f01e94dd4e0c781b641" translate="yes" xml:space="preserve">
          <source>bool QItemSelectionModel::rowIntersectsSelection(int</source>
          <target state="translated">bool QItemSelectionModel::rowIntersectsSelection(int</target>
        </trans-unit>
        <trans-unit id="ccb1efd16cdf61b0d0a003c6e277607d26e68aea" translate="yes" xml:space="preserve">
          <source>bool QItemSelectionRange::contains(const &lt;a href=&quot;qmodelindex&quot;&gt;QModelIndex&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QItemSelectionRange :: contiene (const &lt;a href=&quot;qmodelindex&quot;&gt;QModelIndex&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="398a721b1fcdf342449050b11756d2ef522fe7e8" translate="yes" xml:space="preserve">
          <source>bool QItemSelectionRange::contains(int</source>
          <target state="translated">bool QItemSelectionRange::contains(int</target>
        </trans-unit>
        <trans-unit id="d9505fca71b38bd6c2f8f73b8d6e3260eb5f8c5f" translate="yes" xml:space="preserve">
          <source>bool QItemSelectionRange::intersects(const &lt;a href=&quot;qitemselectionrange#QItemSelectionRange&quot;&gt;QItemSelectionRange&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QItemSelectionRange :: intersects (const &lt;a href=&quot;qitemselectionrange#QItemSelectionRange&quot;&gt;QItemSelectionRange&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="2262a2dd2d86712e81487862c05731a96e0e2867" translate="yes" xml:space="preserve">
          <source>bool QItemSelectionRange::isEmpty() const</source>
          <target state="translated">bool QItemSelectionRange::isEmpty()const</target>
        </trans-unit>
        <trans-unit id="86930bb520d209b8814d76e0c1ec60a72d802c89" translate="yes" xml:space="preserve">
          <source>bool QItemSelectionRange::isValid() const</source>
          <target state="translated">bool QItemSelectionRange::isValid()const</target>
        </trans-unit>
        <trans-unit id="b9b717c29861370b99e926dd47726102ae24c63b" translate="yes" xml:space="preserve">
          <source>bool QItemSelectionRange::operator!=(const &lt;a href=&quot;qitemselectionrange#QItemSelectionRange&quot;&gt;QItemSelectionRange&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QItemSelectionRange :: operator! = (const &lt;a href=&quot;qitemselectionrange#QItemSelectionRange&quot;&gt;QItemSelectionRange&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="3b66328b04dbdfeb03a873f6842f8593a1281e10" translate="yes" xml:space="preserve">
          <source>bool QItemSelectionRange::operator&amp;lt;(const &lt;a href=&quot;qitemselectionrange#QItemSelectionRange&quot;&gt;QItemSelectionRange&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QItemSelectionRange :: operator &amp;lt;(const &lt;a href=&quot;qitemselectionrange#QItemSelectionRange&quot;&gt;QItemSelectionRange&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="e675a7006f30948cf04b15f45f130e7752b95c42" translate="yes" xml:space="preserve">
          <source>bool QItemSelectionRange::operator==(const &lt;a href=&quot;qitemselectionrange#QItemSelectionRange&quot;&gt;QItemSelectionRange&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QItemSelectionRange :: operator == (const &lt;a href=&quot;qitemselectionrange#QItemSelectionRange&quot;&gt;QItemSelectionRange&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="0554ed04d15b5fed994cd267251b3366c6172a35" translate="yes" xml:space="preserve">
          <source>bool QIterable::canForwardIterate() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3af5dc12e632f266aad4b876b4a355bc70948d57" translate="yes" xml:space="preserve">
          <source>bool QIterable::canInputIterate() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eabae24c2ddcffb9e5d80f1d4d49c7f0462b77fb" translate="yes" xml:space="preserve">
          <source>bool QIterable::canRandomAccessIterate() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3319b9aff618526d755284ac52477b90e69cf92" translate="yes" xml:space="preserve">
          <source>bool QIterable::canReverseIterate() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="952059e77e44ad351c7ad4e4f8c1da0a0d6e6a0c" translate="yes" xml:space="preserve">
          <source>bool QIterator::operator!=(const &lt;a href=&quot;qiterator#QIterator&quot;&gt;QIterator&lt;/a&gt;&amp;lt;Container&amp;gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10982e1fa39bf647efc5e7c1d89b5e11fa6a0a4b" translate="yes" xml:space="preserve">
          <source>bool QIterator::operator==(const &lt;a href=&quot;qiterator#QIterator&quot;&gt;QIterator&lt;/a&gt;&amp;lt;Container&amp;gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46e5d19fa5ac6b3a1400a466b675f76d06559c6a" translate="yes" xml:space="preserve">
          <source>bool QJSEngine::isInterrupted() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15d0666e994f6bfdddf84ba123d69955a284bcd8" translate="yes" xml:space="preserve">
          <source>bool QJSValue::deleteProperty(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QJSValue :: deleteProperty (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="a636b892813aeda0c34ebe492d61cb9660534df6" translate="yes" xml:space="preserve">
          <source>bool QJSValue::equals(const &lt;a href=&quot;qjsvalue#QJSValue&quot;&gt;QJSValue&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QJSValue :: equals (const &lt;a href=&quot;qjsvalue#QJSValue&quot;&gt;QJSValue&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="bc8dd7644c84288aa239952176e30c5b158d8c57" translate="yes" xml:space="preserve">
          <source>bool QJSValue::hasOwnProperty(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QJSValue :: hasOwnProperty (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="2c0383e206ad3d5fab34c860630f1f5ed599b467" translate="yes" xml:space="preserve">
          <source>bool QJSValue::hasProperty(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QJSValue :: hasProperty (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="b1e36dee2270449026f90578c679a00d28c7f524" translate="yes" xml:space="preserve">
          <source>bool QJSValue::isArray() const</source>
          <target state="translated">bool QJSValue::isArray()const</target>
        </trans-unit>
        <trans-unit id="bb1a8aaa5891857beb93896f173f53ab22d4e65e" translate="yes" xml:space="preserve">
          <source>bool QJSValue::isBool() const</source>
          <target state="translated">bool QJSValue::isBool()const</target>
        </trans-unit>
        <trans-unit id="8d0140c8bf6509d7038e504abb1f533d47a4a899" translate="yes" xml:space="preserve">
          <source>bool QJSValue::isCallable() const</source>
          <target state="translated">bool QJSValue::isCallable()const</target>
        </trans-unit>
        <trans-unit id="f380f1e3d4b2ed8eca9ec46ac237aec7f19ccd31" translate="yes" xml:space="preserve">
          <source>bool QJSValue::isDate() const</source>
          <target state="translated">bool QJSValue::isDate()const</target>
        </trans-unit>
        <trans-unit id="0309929e11a7ab20963f1ee860b57bc0daab09d3" translate="yes" xml:space="preserve">
          <source>bool QJSValue::isError() const</source>
          <target state="translated">bool QJSValue::isError()const</target>
        </trans-unit>
        <trans-unit id="32debad3f57ac4dfdf03fe7500456b8f97eb3f5a" translate="yes" xml:space="preserve">
          <source>bool QJSValue::isNull() const</source>
          <target state="translated">bool QJSValue::isNull()const</target>
        </trans-unit>
        <trans-unit id="3010163d419cb817a8663d1fbbfb4a08892a7141" translate="yes" xml:space="preserve">
          <source>bool QJSValue::isNumber() const</source>
          <target state="translated">bool QJSValue::isNumber()const</target>
        </trans-unit>
        <trans-unit id="3e52e720c3cb9ac3cc55d20e3678da25f1421c6f" translate="yes" xml:space="preserve">
          <source>bool QJSValue::isObject() const</source>
          <target state="translated">bool QJSValue::isObject()const</target>
        </trans-unit>
        <trans-unit id="d799308ba348aadc2e26dda9aee7a830d4c9b7c7" translate="yes" xml:space="preserve">
          <source>bool QJSValue::isQMetaObject() const</source>
          <target state="translated">bool QJSValue::isQMetaObject()const</target>
        </trans-unit>
        <trans-unit id="77419db147d4746b7b240183ae3b8187a55f6e52" translate="yes" xml:space="preserve">
          <source>bool QJSValue::isQObject() const</source>
          <target state="translated">bool QJSValue::isQObject()const</target>
        </trans-unit>
        <trans-unit id="efae295f93d98aa4a8db48a72ff054842dea385e" translate="yes" xml:space="preserve">
          <source>bool QJSValue::isRegExp() const</source>
          <target state="translated">bool QJSValue::isRegExp()const</target>
        </trans-unit>
        <trans-unit id="07b283fbc2aacb3b76e541295b5e3f440181379c" translate="yes" xml:space="preserve">
          <source>bool QJSValue::isString() const</source>
          <target state="translated">bool QJSValue::isString()const</target>
        </trans-unit>
        <trans-unit id="f4b7c9ef86127d0f86611c5b5c782e404cbcbb3b" translate="yes" xml:space="preserve">
          <source>bool QJSValue::isUndefined() const</source>
          <target state="translated">bool QJSValue::isUndefined()const</target>
        </trans-unit>
        <trans-unit id="5f04a33c469464a09d0627ffedd6d28f33fe783c" translate="yes" xml:space="preserve">
          <source>bool QJSValue::isVariant() const</source>
          <target state="translated">bool QJSValue::isVariant()const</target>
        </trans-unit>
        <trans-unit id="e61cb6305562d0951b8e6f9e2118cb068ab3b61b" translate="yes" xml:space="preserve">
          <source>bool QJSValue::strictlyEquals(const &lt;a href=&quot;qjsvalue#QJSValue&quot;&gt;QJSValue&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QJSValue :: estrictamenteEquals (const &lt;a href=&quot;qjsvalue#QJSValue&quot;&gt;QJSValue&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="3003161fb374e9779bfc04f8a9e4b37e9645e40b" translate="yes" xml:space="preserve">
          <source>bool QJSValue::toBool() const</source>
          <target state="translated">bool QJSValue::toBool()const</target>
        </trans-unit>
        <trans-unit id="8bdafb18f448a7054785b771c677e5f2c5122a2f" translate="yes" xml:space="preserve">
          <source>bool QJSValueIterator::hasNext() const</source>
          <target state="translated">bool QJSValueIterator::hasNext()const</target>
        </trans-unit>
        <trans-unit id="845ce0e7fa45268b0a1ebd607a933b9ac32fd287" translate="yes" xml:space="preserve">
          <source>bool QJSValueIterator::next()</source>
          <target state="translated">bool QJSValueIterator::next()</target>
        </trans-unit>
        <trans-unit id="87487bf1733dfff33ad561f10586c78a8dc9d6d2" translate="yes" xml:space="preserve">
          <source>bool QJsonArray::contains(const &lt;a href=&quot;qjsonvalue&quot;&gt;QJsonValue&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QJsonArray :: contiene (const &lt;a href=&quot;qjsonvalue&quot;&gt;QJsonValue&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="d38b678966e86d913ba06abc5abc36d31d23bb17" translate="yes" xml:space="preserve">
          <source>bool QJsonArray::empty() const</source>
          <target state="translated">bool QJsonArray::empty()const</target>
        </trans-unit>
        <trans-unit id="c8872ace3f60a20a453e31e81cd6344c0ec88034" translate="yes" xml:space="preserve">
          <source>bool QJsonArray::isEmpty() const</source>
          <target state="translated">bool QJsonArray::isEmpty()const</target>
        </trans-unit>
        <trans-unit id="ce86768ed06e9c51ed7f43696d0150f87d2a4624" translate="yes" xml:space="preserve">
          <source>bool QJsonArray::operator!=(const &lt;a href=&quot;qjsonarray#QJsonArray&quot;&gt;QJsonArray&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QJsonArray :: operator! = (const &lt;a href=&quot;qjsonarray#QJsonArray&quot;&gt;QJsonArray&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="0548b5b71f6a541cedcccd0fc511281e073ca7d6" translate="yes" xml:space="preserve">
          <source>bool QJsonArray::operator==(const &lt;a href=&quot;qjsonarray#QJsonArray&quot;&gt;QJsonArray&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QJsonArray :: operator == (const &lt;a href=&quot;qjsonarray#QJsonArray&quot;&gt;QJsonArray&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="8ccae047a0e0e95ce5bfba79804b171c1a2aa8d2" translate="yes" xml:space="preserve">
          <source>bool QJsonDocument::isArray() const</source>
          <target state="translated">bool QJsonDocumento::isArray()const</target>
        </trans-unit>
        <trans-unit id="258e7c2bb921e4c21cbfab4cba6159dec1c3255a" translate="yes" xml:space="preserve">
          <source>bool QJsonDocument::isEmpty() const</source>
          <target state="translated">bool QJsonDocumento::isEmpty()const</target>
        </trans-unit>
        <trans-unit id="f3d9fa8c6e00696cd00b3f0b45f23bc765878260" translate="yes" xml:space="preserve">
          <source>bool QJsonDocument::isNull() const</source>
          <target state="translated">bool QJsonDocumento::isNull()const</target>
        </trans-unit>
        <trans-unit id="1391355ab1186a2036ebc7e6445431671db6c477" translate="yes" xml:space="preserve">
          <source>bool QJsonDocument::isObject() const</source>
          <target state="translated">bool QJsonDocumento::isObjeto()const</target>
        </trans-unit>
        <trans-unit id="fc28d5a1d00e46b9ef2539dcccf2326442ef0089" translate="yes" xml:space="preserve">
          <source>bool QJsonDocument::operator!=(const &lt;a href=&quot;qjsondocument#QJsonDocument&quot;&gt;QJsonDocument&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QJsonDocument :: operator! = (const &lt;a href=&quot;qjsondocument#QJsonDocument&quot;&gt;QJsonDocument&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="053790be837cdca5b6c250a9306d49bfaae3a01b" translate="yes" xml:space="preserve">
          <source>bool QJsonDocument::operator==(const &lt;a href=&quot;qjsondocument#QJsonDocument&quot;&gt;QJsonDocument&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QJsonDocument :: operator == (const &lt;a href=&quot;qjsondocument#QJsonDocument&quot;&gt;QJsonDocument&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="00c9d802d9d8de7d1323d75fd3a10048903ceae7" translate="yes" xml:space="preserve">
          <source>bool QJsonObject::contains(&lt;a href=&quot;qlatin1string&quot;&gt;QLatin1String&lt;/a&gt;</source>
          <target state="translated">bool QJsonObject :: contiene ( &lt;a href=&quot;qlatin1string&quot;&gt;QLatin1String&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="27a63d222f7fe10999d11494b2e675f39a73d64b" translate="yes" xml:space="preserve">
          <source>bool QJsonObject::contains(&lt;a href=&quot;qstringview&quot;&gt;QStringView&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4b780b49b0f14360d0f8c8460c984bcc718b393" translate="yes" xml:space="preserve">
          <source>bool QJsonObject::contains(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QJsonObject :: contiene (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="c9fdb18cc493babbb9f0af2c6aae68f735609d17" translate="yes" xml:space="preserve">
          <source>bool QJsonObject::empty() const</source>
          <target state="translated">bool QJsonObjeto::empty()const</target>
        </trans-unit>
        <trans-unit id="30694cd1675ae8832d644a56350408fb6db54052" translate="yes" xml:space="preserve">
          <source>bool QJsonObject::isEmpty() const</source>
          <target state="translated">bool QJsonObjeto::esVacío()const</target>
        </trans-unit>
        <trans-unit id="5b247aa806a4d383fb768d55e555816e189e4431" translate="yes" xml:space="preserve">
          <source>bool QJsonObject::operator!=(const &lt;a href=&quot;qjsonobject#QJsonObject&quot;&gt;QJsonObject&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QJsonObject :: operator! = (const &lt;a href=&quot;qjsonobject#QJsonObject&quot;&gt;QJsonObject&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="352f301fbf97b67772b314e179ea82f61cba37bb" translate="yes" xml:space="preserve">
          <source>bool QJsonObject::operator==(const &lt;a href=&quot;qjsonobject#QJsonObject&quot;&gt;QJsonObject&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QJsonObject :: operator == (const &lt;a href=&quot;qjsonobject#QJsonObject&quot;&gt;QJsonObject&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="f23d68b485a42754eed1274bf12cc97dc2803336" translate="yes" xml:space="preserve">
          <source>bool QJsonValue::isArray() const</source>
          <target state="translated">bool QJsonValue::isArray()const</target>
        </trans-unit>
        <trans-unit id="2d82bb821a57bac4f6ed102a20a9f1e041beaba8" translate="yes" xml:space="preserve">
          <source>bool QJsonValue::isBool() const</source>
          <target state="translated">bool QJsonValue::isBool()const</target>
        </trans-unit>
        <trans-unit id="da36f9c9ea1cb91078b6d012e90f58f99f6b0853" translate="yes" xml:space="preserve">
          <source>bool QJsonValue::isDouble() const</source>
          <target state="translated">bool QJsonValor::isDoble()const</target>
        </trans-unit>
        <trans-unit id="c32a60e396a45b5cd4ff5b4d5a4873fc68911c88" translate="yes" xml:space="preserve">
          <source>bool QJsonValue::isNull() const</source>
          <target state="translated">bool QJsonValue::isNull()const</target>
        </trans-unit>
        <trans-unit id="a4cedb5ba8f737e3d6b759aa59dd0fed3c65c356" translate="yes" xml:space="preserve">
          <source>bool QJsonValue::isObject() const</source>
          <target state="translated">bool QJsonValor::isObjeto()const</target>
        </trans-unit>
        <trans-unit id="f01299782a5b7230c7133330bd52c7e060f0c3c5" translate="yes" xml:space="preserve">
          <source>bool QJsonValue::isString() const</source>
          <target state="translated">bool QJsonValue::isString()const</target>
        </trans-unit>
        <trans-unit id="c0d93114cc42997b7efb23ab01818e71d4b15b89" translate="yes" xml:space="preserve">
          <source>bool QJsonValue::isUndefined() const</source>
          <target state="translated">bool QJsonValue::isUndefined()const</target>
        </trans-unit>
        <trans-unit id="6bf1899df632ce0fecae7fc42e6a05cc73ea3bc4" translate="yes" xml:space="preserve">
          <source>bool QJsonValue::operator!=(const &lt;a href=&quot;qjsonvalue#QJsonValue&quot;&gt;QJsonValue&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QJsonValue :: operator! = (const &lt;a href=&quot;qjsonvalue#QJsonValue&quot;&gt; QJsonValue&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="db6802f3e1b028e403aec71299c54936112a858b" translate="yes" xml:space="preserve">
          <source>bool QJsonValue::operator==(const &lt;a href=&quot;qjsonvalue#QJsonValue&quot;&gt;QJsonValue&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QJsonValue :: operador == (const &lt;a href=&quot;qjsonvalue#QJsonValue&quot;&gt;QJsonValue&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="444adfda7fb2f633f8d4788d4b29298146545d3d" translate="yes" xml:space="preserve">
          <source>bool QJsonValue::toBool(bool</source>
          <target state="translated">bool QJsonValue::toBool(bool</target>
        </trans-unit>
        <trans-unit id="dc48ba90a5212979d1ddd45bab4f102e88550ab8" translate="yes" xml:space="preserve">
          <source>bool QKeyEvent::isAutoRepeat() const</source>
          <target state="translated">bool QKeyEvent::isAutoRepeat()const</target>
        </trans-unit>
        <trans-unit id="86f387f506e7091fb3e462dc6bd2427dec1b2cfb" translate="yes" xml:space="preserve">
          <source>bool QKeyEvent::matches(&lt;a href=&quot;qkeysequence#StandardKey-enum&quot;&gt;QKeySequence::StandardKey&lt;/a&gt;</source>
          <target state="translated">bool QKeyEvent :: coincidencias (&lt;a href=&quot;qkeysequence#StandardKey-enum&quot;&gt; QKeySequence :: StandardKey&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6344b885373c52de7533bfe431265de1f7b477dc" translate="yes" xml:space="preserve">
          <source>bool QKeySequence::isEmpty() const</source>
          <target state="translated">bool QKeySequence::isEmpty()const</target>
        </trans-unit>
        <trans-unit id="140b6da1f1257c445dd4d25220c8155a54925f98" translate="yes" xml:space="preserve">
          <source>bool QKeySequence::operator!=(const &lt;a href=&quot;qkeysequence#QKeySequence&quot;&gt;QKeySequence&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QKeySequence :: operator! = (const &lt;a href=&quot;qkeysequence#QKeySequence&quot;&gt;QKeySequence&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="376abb675246be599ae92169c71b4560e4a6486b" translate="yes" xml:space="preserve">
          <source>bool QKeySequence::operator&amp;gt;(const &lt;a href=&quot;qkeysequence#QKeySequence&quot;&gt;QKeySequence&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QKeySequence :: operador&amp;gt; (const &lt;a href=&quot;qkeysequence#QKeySequence&quot;&gt;QKeySequence&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="0ac16372d61dd258a40b804d7cc9838be3b502e3" translate="yes" xml:space="preserve">
          <source>bool QKeySequence::operator&amp;gt;=(const &lt;a href=&quot;qkeysequence#QKeySequence&quot;&gt;QKeySequence&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QKeySequence :: operador&amp;gt; = (const &lt;a href=&quot;qkeysequence#QKeySequence&quot;&gt;QKeySequence&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="c4e6b03544423cea63cbdd28857052b9c85b31aa" translate="yes" xml:space="preserve">
          <source>bool QKeySequence::operator&amp;lt;(const &lt;a href=&quot;qkeysequence#QKeySequence&quot;&gt;QKeySequence&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QKeySequence :: operator &amp;lt;(const &lt;a href=&quot;qkeysequence#QKeySequence&quot;&gt;QKeySequence&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="cc3e47d8007ac86970a28397c42aa156c368c514" translate="yes" xml:space="preserve">
          <source>bool QKeySequence::operator&amp;lt;=(const &lt;a href=&quot;qkeysequence#QKeySequence&quot;&gt;QKeySequence&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QKeySequence :: operator &amp;lt;= (const &lt;a href=&quot;qkeysequence#QKeySequence&quot;&gt;QKeySequence&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="2b0282def6184e19a0bc8c14652ec0deed0ef665" translate="yes" xml:space="preserve">
          <source>bool QKeySequence::operator==(const &lt;a href=&quot;qkeysequence#QKeySequence&quot;&gt;QKeySequence&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QKeySequence :: operator == (const &lt;a href=&quot;qkeysequence#QKeySequence&quot;&gt;QKeySequence&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="abc19c3becf54ddf1b8f77faec1b7d3a720ed312" translate="yes" xml:space="preserve">
          <source>bool QKeyValueIterator::operator!=(&lt;a href=&quot;qkeyvalueiterator#QKeyValueIterator&quot;&gt;QKeyValueIterator&lt;/a&gt;&amp;lt;Key, T, Iterator&amp;gt;</source>
          <target state="translated">bool QKeyValueIterator :: operator! = ( &lt;a href=&quot;qkeyvalueiterator#QKeyValueIterator&quot;&gt;QKeyValueIterator&lt;/a&gt; &amp;lt;Clave, T, Iterador&amp;gt;</target>
        </trans-unit>
        <trans-unit id="72b33d8047883dfb069b34da145a362e511819d4" translate="yes" xml:space="preserve">
          <source>bool QKeyValueIterator::operator==(&lt;a href=&quot;qkeyvalueiterator#QKeyValueIterator&quot;&gt;QKeyValueIterator&lt;/a&gt;&amp;lt;Key, T, Iterator&amp;gt;</source>
          <target state="translated">bool QKeyValueIterator :: operator == ( &lt;a href=&quot;qkeyvalueiterator#QKeyValueIterator&quot;&gt;QKeyValueIterator&lt;/a&gt; &amp;lt;Clave, T, Iterador&amp;gt;</target>
        </trans-unit>
        <trans-unit id="b579885c44440fdf9dfad1fb1b511a0c3dce7aeb" translate="yes" xml:space="preserve">
          <source>bool QLCDNumber::checkOverflow(double</source>
          <target state="translated">bool QLCDNúmero::checkOverflow(doble</target>
        </trans-unit>
        <trans-unit id="e0e84e244c19ec9fa3bcddf9c940323ba22c0c5b" translate="yes" xml:space="preserve">
          <source>bool QLCDNumber::checkOverflow(int</source>
          <target state="translated">bool QLCDNúmero::checkOverflow(int</target>
        </trans-unit>
        <trans-unit id="1f901328c0ed5cdbb4a954f10d2a8f67a1d1360c" translate="yes" xml:space="preserve">
          <source>bool QLEInteger::operator!=(&lt;a href=&quot;qleinteger#QLEInteger&quot;&gt;QLEInteger&lt;/a&gt;&amp;lt;T&amp;gt;</source>
          <target state="translated">bool QLEInteger :: operador! = ( &lt;a href=&quot;qleinteger#QLEInteger&quot;&gt;QLEInteger&lt;/a&gt; &amp;lt;T&amp;gt;</target>
        </trans-unit>
        <trans-unit id="954b4215eac4d52b0c057227f7d582642c6ebc9e" translate="yes" xml:space="preserve">
          <source>bool QLEInteger::operator==(&lt;a href=&quot;qleinteger#QLEInteger&quot;&gt;QLEInteger&lt;/a&gt;&amp;lt;T&amp;gt;</source>
          <target state="translated">bool QLEInteger :: operador == ( &lt;a href=&quot;qleinteger#QLEInteger&quot;&gt;QLEInteger&lt;/a&gt; &amp;lt;T&amp;gt;</target>
        </trans-unit>
        <trans-unit id="f16b6a70d167bb777dff2900ec7f070db68373da" translate="yes" xml:space="preserve">
          <source>bool QLatin1String::contains(&lt;a href=&quot;qchar&quot;&gt;QChar&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d72198e248879a7b67c177e89d15e00d8575ebce" translate="yes" xml:space="preserve">
          <source>bool QLatin1String::contains(&lt;a href=&quot;qlatin1string#QLatin1String&quot;&gt;QLatin1String&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51d7a2e8c6cb0466ca278633d65cac02f8ad1786" translate="yes" xml:space="preserve">
          <source>bool QLatin1String::contains(&lt;a href=&quot;qstringview&quot;&gt;QStringView&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e659b90421d4122efed70d7eef4938fea100cc3" translate="yes" xml:space="preserve">
          <source>bool QLatin1String::endsWith(&lt;a href=&quot;qchar&quot;&gt;QChar&lt;/a&gt;</source>
          <target state="translated">bool QLatin1String :: endsWith ( &lt;a href=&quot;qchar&quot;&gt;QChar&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="66e1c4b7e6e93c5567689bc60bd830ac0dbab6c0" translate="yes" xml:space="preserve">
          <source>bool QLatin1String::endsWith(&lt;a href=&quot;qlatin1string#QLatin1String&quot;&gt;QLatin1String&lt;/a&gt;</source>
          <target state="translated">bool QLatin1String :: endsWith ( &lt;a href=&quot;qlatin1string#QLatin1String&quot;&gt;QLatin1String&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4f0460dd30a5f1d614f7515e8fd27bed086271ee" translate="yes" xml:space="preserve">
          <source>bool QLatin1String::endsWith(&lt;a href=&quot;qstringview&quot;&gt;QStringView&lt;/a&gt;</source>
          <target state="translated">bool QLatin1String :: endsWith ( &lt;a href=&quot;qstringview&quot;&gt;QStringView&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4cc5d4a726a1d32f934e2adc0c4de15244d74820" translate="yes" xml:space="preserve">
          <source>bool QLatin1String::isEmpty() const</source>
          <target state="translated">bool QLatin1String::isEmpty()const</target>
        </trans-unit>
        <trans-unit id="edc52c693f8ecdc0ca7d4f662e10ed4ded038622" translate="yes" xml:space="preserve">
          <source>bool QLatin1String::isNull() const</source>
          <target state="translated">bool QLatin1String::isNull()const</target>
        </trans-unit>
        <trans-unit id="b22ea6749a0dc9ecd7613b4db7b49d0426476bbe" translate="yes" xml:space="preserve">
          <source>bool QLatin1String::operator!=(&lt;a href=&quot;qlatin1string#QLatin1String&quot;&gt;QLatin1String&lt;/a&gt;</source>
          <target state="translated">bool QLatin1String :: operador! = ( &lt;a href=&quot;qlatin1string#QLatin1String&quot;&gt;QLatin1String&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8f9c510e2c4c87204fbb69557c05fd1b4a5ebb81" translate="yes" xml:space="preserve">
          <source>bool QLatin1String::operator!=(const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QLatin1String :: operator! = (const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="2c2a22eb52ad2ced86f7706fac35e631f040506f" translate="yes" xml:space="preserve">
          <source>bool QLatin1String::operator!=(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QLatin1String :: operator! = (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="8e1f3875f0aa336631b21ae173890a7bfa2dd9b0" translate="yes" xml:space="preserve">
          <source>bool QLatin1String::operator!=(const char *</source>
          <target state="translated">bool QLatin1String::¡operador! =(const char *</target>
        </trans-unit>
        <trans-unit id="f63397c161894d8690fa0e3096c126431ddf2a1a" translate="yes" xml:space="preserve">
          <source>bool QLatin1String::operator&amp;gt;(&lt;a href=&quot;qlatin1string#QLatin1String&quot;&gt;QLatin1String&lt;/a&gt;</source>
          <target state="translated">bool QLatin1String :: operador&amp;gt; (&lt;a href=&quot;qlatin1string#QLatin1String&quot;&gt; QLatin1String&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="23e8952336f9dbdaa1116c1446356ad9d02fc93f" translate="yes" xml:space="preserve">
          <source>bool QLatin1String::operator&amp;gt;(const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QLatin1String :: operator&amp;gt; (const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="a5e6ce8f40645ecc0846f36c1e2685f8bdf15b19" translate="yes" xml:space="preserve">
          <source>bool QLatin1String::operator&amp;gt;(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QLatin1String :: operador&amp;gt; (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="f83d7509eff08e28f66a87cd2ef59d411a0b2fdf" translate="yes" xml:space="preserve">
          <source>bool QLatin1String::operator&amp;gt;(const char *</source>
          <target state="translated">bool QLatin1String :: operador&amp;gt; (const char *</target>
        </trans-unit>
        <trans-unit id="3a8da7435caa6e1de44e501e56b07e48c3cea8a4" translate="yes" xml:space="preserve">
          <source>bool QLatin1String::operator&amp;gt;=(&lt;a href=&quot;qlatin1string#QLatin1String&quot;&gt;QLatin1String&lt;/a&gt;</source>
          <target state="translated">bool QLatin1String :: operador&amp;gt; = ( &lt;a href=&quot;qlatin1string#QLatin1String&quot;&gt;QLatin1String&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="92ef99a6708f5a4940b9bd32dbc316a5122c50b4" translate="yes" xml:space="preserve">
          <source>bool QLatin1String::operator&amp;gt;=(const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QLatin1String :: operador&amp;gt; = (const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="33e3783f4e5f9bb27d52fae9fdf6bafe76037872" translate="yes" xml:space="preserve">
          <source>bool QLatin1String::operator&amp;gt;=(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QLatin1String :: operador&amp;gt; = (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="8c4f76915e0cc2ca9b77a191c46b840e82dd75d2" translate="yes" xml:space="preserve">
          <source>bool QLatin1String::operator&amp;gt;=(const char *</source>
          <target state="translated">bool QLatin1String :: operador&amp;gt; = (const char *</target>
        </trans-unit>
        <trans-unit id="91c8ae1ce21e12d558ccf2524659612c928c965f" translate="yes" xml:space="preserve">
          <source>bool QLatin1String::operator&amp;lt;(&lt;a href=&quot;qlatin1string#QLatin1String&quot;&gt;QLatin1String&lt;/a&gt;</source>
          <target state="translated">bool QLatin1String :: operador &amp;lt;( &lt;a href=&quot;qlatin1string#QLatin1String&quot;&gt;QLatin1String&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2f4d5516973751ea01b5b2fc2de1a1668064765b" translate="yes" xml:space="preserve">
          <source>bool QLatin1String::operator&amp;lt;(const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QLatin1String :: operator &amp;lt;(const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="8441274f276149b40258adfbec23f4654b8b108b" translate="yes" xml:space="preserve">
          <source>bool QLatin1String::operator&amp;lt;(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QLatin1String :: operator &amp;lt;(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="fa8eac62e0276f0517851836727f23a7f9e99740" translate="yes" xml:space="preserve">
          <source>bool QLatin1String::operator&amp;lt;(const char *</source>
          <target state="translated">bool QLatin1String :: operator &amp;lt;(const char *</target>
        </trans-unit>
        <trans-unit id="4ecfc1603c505193e64c2262c92e0f602f63e869" translate="yes" xml:space="preserve">
          <source>bool QLatin1String::operator&amp;lt;=(&lt;a href=&quot;qlatin1string#QLatin1String&quot;&gt;QLatin1String&lt;/a&gt;</source>
          <target state="translated">bool QLatin1String :: operador &amp;lt;= ( &lt;a href=&quot;qlatin1string#QLatin1String&quot;&gt;QLatin1String&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="73e1a2312f2e59f9cebf63c41736aa19b9703686" translate="yes" xml:space="preserve">
          <source>bool QLatin1String::operator&amp;lt;=(const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QLatin1String :: operator &amp;lt;= (const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="9f87345df9aa32852abc9c2ec0dfcfd1e1a41ffe" translate="yes" xml:space="preserve">
          <source>bool QLatin1String::operator&amp;lt;=(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QLatin1String :: operator &amp;lt;= (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="ee8911827becf5342f5dabdb6837e50764f1a9d6" translate="yes" xml:space="preserve">
          <source>bool QLatin1String::operator&amp;lt;=(const char *</source>
          <target state="translated">bool QLatin1String :: operador &amp;lt;= (const char *</target>
        </trans-unit>
        <trans-unit id="fc7ad81fe1ccaf764fa6f97db95841f6b1e74f51" translate="yes" xml:space="preserve">
          <source>bool QLatin1String::operator==(&lt;a href=&quot;qlatin1string#QLatin1String&quot;&gt;QLatin1String&lt;/a&gt;</source>
          <target state="translated">bool QLatin1String :: operador == ( &lt;a href=&quot;qlatin1string#QLatin1String&quot;&gt;QLatin1String&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="562522df107898c2c928f645972d207fc15151be" translate="yes" xml:space="preserve">
          <source>bool QLatin1String::operator==(const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QLatin1String :: operator == (const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="9a785cc2a7c3a6ee609d9d8c1f7301c0f45a6bd2" translate="yes" xml:space="preserve">
          <source>bool QLatin1String::operator==(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QLatin1String :: operator == (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="136804b817d392052a0b5c07938a77a7c633ef1a" translate="yes" xml:space="preserve">
          <source>bool QLatin1String::operator==(const char *</source>
          <target state="translated">bool QLatin1String::operator==(const char *</target>
        </trans-unit>
        <trans-unit id="94cdcaa2e02c7dc39d589b90e5a7f014b676f655" translate="yes" xml:space="preserve">
          <source>bool QLatin1String::startsWith(&lt;a href=&quot;qchar&quot;&gt;QChar&lt;/a&gt;</source>
          <target state="translated">bool QLatin1String :: startsWith ( &lt;a href=&quot;qchar&quot;&gt;QChar&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="df7f420e9831dd51cd6aea20db2b5a35d4e6c0fd" translate="yes" xml:space="preserve">
          <source>bool QLatin1String::startsWith(&lt;a href=&quot;qlatin1string#QLatin1String&quot;&gt;QLatin1String&lt;/a&gt;</source>
          <target state="translated">bool QLatin1String :: startsWith ( &lt;a href=&quot;qlatin1string#QLatin1String&quot;&gt;QLatin1String&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5e22c81f344fd89586e4a97fbd2464f9bfc80a82" translate="yes" xml:space="preserve">
          <source>bool QLatin1String::startsWith(&lt;a href=&quot;qstringview&quot;&gt;QStringView&lt;/a&gt;</source>
          <target state="translated">bool QLatin1String :: startsWith ( &lt;a href=&quot;qstringview&quot;&gt;QStringView&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b22a020fae1a5fd127da95d9edfc9b720dfdec93" translate="yes" xml:space="preserve">
          <source>bool QLayout::activate()</source>
          <target state="translated">bool QLayout::activate()</target>
        </trans-unit>
        <trans-unit id="16eb170a727ac2961235958d8d09e14f820bb600" translate="yes" xml:space="preserve">
          <source>bool QLayout::isEnabled() const</source>
          <target state="translated">bool QLayout::isEnabled()const</target>
        </trans-unit>
        <trans-unit id="2468ef9c9de26ca9531c765719b44816a976cd74" translate="yes" xml:space="preserve">
          <source>bool QLayout::setAlignment(&lt;a href=&quot;qlayout#QLayout&quot;&gt;QLayout&lt;/a&gt; *</source>
          <target state="translated">bool QLayout :: setAlignment ( &lt;a href=&quot;qlayout#QLayout&quot;&gt;QLayout&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="34271592a1fcac98ca563c9704a8f275351fc76b" translate="yes" xml:space="preserve">
          <source>bool QLayout::setAlignment(&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; *</source>
          <target state="translated">bool QLayout :: setAlignment ( &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="4be9580b6cd370c0f7bc474c36249c2e946dfff8" translate="yes" xml:space="preserve">
          <source>bool QLegend::isAttachedToChart()</source>
          <target state="translated">bool QLegend::isAttachedToChart()</target>
        </trans-unit>
        <trans-unit id="c7bc403c4440bfe26510dfe5e3261a36e672d808" translate="yes" xml:space="preserve">
          <source>bool QLegend::isBackgroundVisible() const</source>
          <target state="translated">bool QLegend::isBackgroundVisible()const</target>
        </trans-unit>
        <trans-unit id="c8d02c802a4aa341bcdca55d6edcc4213bdb5834" translate="yes" xml:space="preserve">
          <source>bool QLegend::showToolTips() const</source>
          <target state="translated">bool QLegend::showToolTips()const</target>
        </trans-unit>
        <trans-unit id="628c0ced8202ddf5d9621506cde02d999a1de6ca" translate="yes" xml:space="preserve">
          <source>bool QLegendMarker::isVisible() const</source>
          <target state="translated">bool QLegendMarker::isVisible()const</target>
        </trans-unit>
        <trans-unit id="8f615d0f13999b176f498a4bbf303528cd3fef9d" translate="yes" xml:space="preserve">
          <source>bool QLibrary::isLoaded() const</source>
          <target state="translated">bool QLibrary::isLoaded()const</target>
        </trans-unit>
        <trans-unit id="22cf4e1b717864446281ac40768f9fdc018dfd2c" translate="yes" xml:space="preserve">
          <source>bool QLibrary::load()</source>
          <target state="translated">bool QLibrary::load()</target>
        </trans-unit>
        <trans-unit id="a3af012d08c8527e638273f3cd2b987cc10a2980" translate="yes" xml:space="preserve">
          <source>bool QLibrary::unload()</source>
          <target state="translated">bool QLibrary::unload()</target>
        </trans-unit>
        <trans-unit id="a7040b31343a2287bff2c27e4f6527d48727baae" translate="yes" xml:space="preserve">
          <source>bool QLine::isNull() const</source>
          <target state="translated">bool QLine::isNull()const</target>
        </trans-unit>
        <trans-unit id="897ce5a572157d232d8b84fc8a2c49c34c50b183" translate="yes" xml:space="preserve">
          <source>bool QLine::operator!=(const &lt;a href=&quot;qline#QLine&quot;&gt;QLine&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QLine :: operator! = (const &lt;a href=&quot;qline#QLine&quot;&gt;QLine&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="475df3faa5f3e4a92e76564d6c7dc2363aaaba2f" translate="yes" xml:space="preserve">
          <source>bool QLine::operator==(const &lt;a href=&quot;qline#QLine&quot;&gt;QLine&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QLine :: operator == (const &lt;a href=&quot;qline#QLine&quot;&gt;QLine&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="981c96d1fd00804fbbd9d926c670762cde5625c0" translate="yes" xml:space="preserve">
          <source>bool QLineF::isNull() const</source>
          <target state="translated">bool QLineF::isNull()const</target>
        </trans-unit>
        <trans-unit id="69ffa113470df9d7b8d2e0412af50ecfe09c794e" translate="yes" xml:space="preserve">
          <source>bool QLineF::operator!=(const &lt;a href=&quot;qlinef#QLineF&quot;&gt;QLineF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QLineF :: operator! = (const &lt;a href=&quot;qlinef#QLineF&quot;&gt;QLineF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="1333d484306ac4531d3e44a4b782ac0e257261db" translate="yes" xml:space="preserve">
          <source>bool QLineF::operator==(const &lt;a href=&quot;qlinef#QLineF&quot;&gt;QLineF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QLineF :: operator == (const &lt;a href=&quot;qlinef#QLineF&quot;&gt;QLineF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="5f1f30bc523d2f4e007556404512cfd57ef7862e" translate="yes" xml:space="preserve">
          <source>bool QLinkedList::contains(const T &amp;amp;</source>
          <target state="translated">bool QLinkedList :: contiene (const T &amp;amp;</target>
        </trans-unit>
        <trans-unit id="e54857016cb95b1b27aadc70476ca6e210032fff" translate="yes" xml:space="preserve">
          <source>bool QLinkedList::empty() const</source>
          <target state="translated">bool QLinkedList::empty()const</target>
        </trans-unit>
        <trans-unit id="da1e719fed220241c6246978f2d70e471f80ec5d" translate="yes" xml:space="preserve">
          <source>bool QLinkedList::endsWith(const T &amp;amp;</source>
          <target state="translated">bool QLinkedList :: endsWith (const T &amp;amp;</target>
        </trans-unit>
        <trans-unit id="aa623a873257a906da8de97131eae2d7cb3a68b0" translate="yes" xml:space="preserve">
          <source>bool QLinkedList::isEmpty() const</source>
          <target state="translated">bool QLinkedList::isEmpty()const</target>
        </trans-unit>
        <trans-unit id="82618e4c347f394bcbec5fe0fab45d376b27937f" translate="yes" xml:space="preserve">
          <source>bool QLinkedList::operator!=(const &lt;a href=&quot;qlinkedlist#QLinkedList&quot;&gt;QLinkedList&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="translated">bool QLinkedList :: operator! = (const &lt;a href=&quot;qlinkedlist#QLinkedList&quot;&gt;QLinkedList&lt;/a&gt; &amp;lt;T&amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="0e0086e5b6c8c9db4a62e81cc23e50e546aa1075" translate="yes" xml:space="preserve">
          <source>bool QLinkedList::operator==(const &lt;a href=&quot;qlinkedlist#QLinkedList&quot;&gt;QLinkedList&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="translated">bool QLinkedList :: operator == (const &lt;a href=&quot;qlinkedlist#QLinkedList&quot;&gt;QLinkedList&lt;/a&gt; &amp;lt;T&amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="5ecd463b9b6a65df5e0738a1affcb31674e36959" translate="yes" xml:space="preserve">
          <source>bool QLinkedList::removeOne(const T &amp;amp;</source>
          <target state="translated">bool QLinkedList :: removeOne (const T &amp;amp;</target>
        </trans-unit>
        <trans-unit id="fe193b7a4b5867322e06d5f88b9c4dc3ef790298" translate="yes" xml:space="preserve">
          <source>bool QLinkedList::startsWith(const T &amp;amp;</source>
          <target state="translated">bool QLinkedList :: startsWith (const T &amp;amp;</target>
        </trans-unit>
        <trans-unit id="29d5ef40ace3ba91ef48be15fa1f9ac8f7fab9d7" translate="yes" xml:space="preserve">
          <source>bool QLinkedListIterator::findNext(const T &amp;amp;</source>
          <target state="translated">bool QLinkedListIterator :: findNext (const T &amp;amp;</target>
        </trans-unit>
        <trans-unit id="ea87893f189994db382714a7bf056699fa460cb8" translate="yes" xml:space="preserve">
          <source>bool QLinkedListIterator::findPrevious(const T &amp;amp;</source>
          <target state="translated">bool QLinkedListIterator :: findPrevious (const T &amp;amp;</target>
        </trans-unit>
        <trans-unit id="17616dc68aa6e00e9d6bff06f4eb356e9422589f" translate="yes" xml:space="preserve">
          <source>bool QLinkedListIterator::hasNext() const</source>
          <target state="translated">bool QLinkedListIterator::hasNext()const</target>
        </trans-unit>
        <trans-unit id="44a86c62a0770f4919278dd780bfdb827d52c21a" translate="yes" xml:space="preserve">
          <source>bool QLinkedListIterator::hasPrevious() const</source>
          <target state="translated">bool QLinkedListIterator::hasPrevious()const</target>
        </trans-unit>
        <trans-unit id="c4892d95428831b116ef25a852c07ca40748bdf0" translate="yes" xml:space="preserve">
          <source>bool QList::contains(const T &amp;amp;</source>
          <target state="translated">bool QList :: contiene (const T &amp;amp;</target>
        </trans-unit>
        <trans-unit id="ba424314c4f67c4d46cbdfc5fed6df50de2cfca6" translate="yes" xml:space="preserve">
          <source>bool QList::empty() const</source>
          <target state="translated">bool QList::empty()const</target>
        </trans-unit>
        <trans-unit id="1ad408d690b4ccebf43ef35faccb6ebd2723f35e" translate="yes" xml:space="preserve">
          <source>bool QList::endsWith(QList::parameter_type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89fbcec92db32606b0a299ecaa69fe7ac07097bb" translate="yes" xml:space="preserve">
          <source>bool QList::endsWith(const T &amp;amp;</source>
          <target state="translated">bool QList :: endsWith (const T &amp;amp;</target>
        </trans-unit>
        <trans-unit id="a6c40acf62622930347f9309c5eb0475965eadea" translate="yes" xml:space="preserve">
          <source>bool QList::isEmpty() const</source>
          <target state="translated">bool QList::isEmpty()const</target>
        </trans-unit>
        <trans-unit id="36c28fd5d359333f409b4083415c6d5ed7d19ec5" translate="yes" xml:space="preserve">
          <source>bool QList::operator!=(const &lt;a href=&quot;qlist#QList&quot;&gt;QList&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="translated">bool QList :: operator! = (const &lt;a href=&quot;qlist#QList&quot;&gt;QList&lt;/a&gt; &amp;lt;T&amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="a7b4621926cc4ecbf37ed93aad6588d7cf574ea8" translate="yes" xml:space="preserve">
          <source>bool QList::operator&amp;gt;(const &lt;a href=&quot;qlist#QList&quot;&gt;QList&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="translated">bool QList :: operator&amp;gt; (const &lt;a href=&quot;qlist#QList&quot;&gt;QList&lt;/a&gt; &amp;lt;T&amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="afdcdd1d63f1f06768d0690f5a4a3b167fee1538" translate="yes" xml:space="preserve">
          <source>bool QList::operator&amp;gt;=(const &lt;a href=&quot;qlist#QList&quot;&gt;QList&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="translated">bool QList :: operator&amp;gt; = (const &lt;a href=&quot;qlist#QList&quot;&gt;QList&lt;/a&gt; &amp;lt;T&amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="69a00ca8f852b57f2a489974e382fc0a8832f12d" translate="yes" xml:space="preserve">
          <source>bool QList::operator&amp;lt;(const &lt;a href=&quot;qlist#QList&quot;&gt;QList&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="translated">bool QList :: operator &amp;lt;(const &lt;a href=&quot;qlist#QList&quot;&gt;QList&lt;/a&gt; &amp;lt;T&amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="5e8e3ea897fbdf2c1664e08d16ed5d837c2806d2" translate="yes" xml:space="preserve">
          <source>bool QList::operator&amp;lt;=(const &lt;a href=&quot;qlist#QList&quot;&gt;QList&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="translated">bool QList :: operator &amp;lt;= (const &lt;a href=&quot;qlist#QList&quot;&gt;QList&lt;/a&gt; &amp;lt;T&amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="8097ce70d160818a0f2bb78e27649aef28b0c7b1" translate="yes" xml:space="preserve">
          <source>bool QList::operator==(const &lt;a href=&quot;qlist#QList&quot;&gt;QList&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="translated">bool QList :: operator == (const &lt;a href=&quot;qlist#QList&quot;&gt;QList&lt;/a&gt; &amp;lt;T&amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="9343c505b123730aa55b1c237596d26f59241df5" translate="yes" xml:space="preserve">
          <source>bool QList::removeOne(const T &amp;amp;</source>
          <target state="translated">bool QList :: removeOne (const T &amp;amp;</target>
        </trans-unit>
        <trans-unit id="d98bf11fcfb6cfdf16239e918eb146d831b03b06" translate="yes" xml:space="preserve">
          <source>bool QList::startsWith(QList::parameter_type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2efaca05f313575418c0294ee549bd6000937939" translate="yes" xml:space="preserve">
          <source>bool QList::startsWith(const T &amp;amp;</source>
          <target state="translated">bool QList :: startsWith (const T &amp;amp;</target>
        </trans-unit>
        <trans-unit id="e078481fc860f270228a57433e89a45ad55cdcc8" translate="yes" xml:space="preserve">
          <source>bool QListIterator::findNext(const T &amp;amp;</source>
          <target state="translated">bool QListIterator :: findNext (const T &amp;amp;</target>
        </trans-unit>
        <trans-unit id="0c0fb124ae5c838d7ba38c3c0c3f60003be19b53" translate="yes" xml:space="preserve">
          <source>bool QListIterator::findPrevious(const T &amp;amp;</source>
          <target state="translated">bool QListIterator :: findPrevious (const T &amp;amp;</target>
        </trans-unit>
        <trans-unit id="8f36b3d9aa3005e1c90320c4a383276cb52724c5" translate="yes" xml:space="preserve">
          <source>bool QListIterator::hasNext() const</source>
          <target state="translated">bool QListIterator::hasNext()const</target>
        </trans-unit>
        <trans-unit id="7c960d1bed7ce0eb79520ac3741e07fffcd7675d" translate="yes" xml:space="preserve">
          <source>bool QListIterator::hasPrevious() const</source>
          <target state="translated">bool QListIterator::hasPrevio()const</target>
        </trans-unit>
        <trans-unit id="f734f3d8e86ff0cf3ae712f00594857c4ccae236" translate="yes" xml:space="preserve">
          <source>bool QListView::isRowHidden(int</source>
          <target state="translated">bool QListView::isRowHidden(int</target>
        </trans-unit>
        <trans-unit id="34dfc85e34ee103ebd6c3b609d084279d6f9f4eb" translate="yes" xml:space="preserve">
          <source>bool QListWidget::isPersistentEditorOpen(&lt;a href=&quot;qlistwidgetitem&quot;&gt;QListWidgetItem&lt;/a&gt; *</source>
          <target state="translated">bool QListWidget :: isPersistentEditorOpen ( &lt;a href=&quot;qlistwidgetitem&quot;&gt;QListWidgetItem&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="e0f40def2ff370c194cf3b902e0306386ea76c18" translate="yes" xml:space="preserve">
          <source>bool QListWidgetItem::isHidden() const</source>
          <target state="translated">bool QListWidgetItem::isHidden()const</target>
        </trans-unit>
        <trans-unit id="c1a2a9cf8fe4b0e03b5f54efdeab1243af18fb59" translate="yes" xml:space="preserve">
          <source>bool QListWidgetItem::isSelected() const</source>
          <target state="translated">bool QListWidgetItem::isSelected()const</target>
        </trans-unit>
        <trans-unit id="4b29063f38c36535142bb05536ec0af5039f74a4" translate="yes" xml:space="preserve">
          <source>bool QLocalServer::isListening() const</source>
          <target state="translated">bool QLocalServer::isListening()const</target>
        </trans-unit>
        <trans-unit id="54e09ec3beb1b20c7711767efdc3d7eac82ad7db" translate="yes" xml:space="preserve">
          <source>bool QLocalServer::listen(&lt;a href=&quot;#qintptr-typedef&quot;&gt;qintptr&lt;/a&gt;</source>
          <target state="translated">bool QLocalServer :: escuchar ( &lt;a href=&quot;#qintptr-typedef&quot;&gt;qintptr&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="42e2830bb4d57f311d91900b06738b2b987ec381" translate="yes" xml:space="preserve">
          <source>bool QLocalServer::listen(&lt;a href=&quot;qtglobal#qintptr-typedef&quot;&gt;qintptr&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0d8f2c960e25fee6474341d92bf61703f2618b8" translate="yes" xml:space="preserve">
          <source>bool QLocalServer::listen(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QLocalServer :: listen (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="e7214024c0179ebe21afa42e5f809ca76bd4290d" translate="yes" xml:space="preserve">
          <source>bool QLocalServer::waitForNewConnection(int</source>
          <target state="translated">bool QLocalServer::waitForNewConnection(int</target>
        </trans-unit>
        <trans-unit id="77d5b65719834ab49264c1a1c23690e85292809a" translate="yes" xml:space="preserve">
          <source>bool QLocalSocket::flush()</source>
          <target state="translated">bool QLocalSocket::flush()</target>
        </trans-unit>
        <trans-unit id="0f34e39df4b60c17a4f1d7cd0a0f3caaa7cc535e" translate="yes" xml:space="preserve">
          <source>bool QLocalSocket::isValid() const</source>
          <target state="translated">bool QLocalSocket::isValid()const</target>
        </trans-unit>
        <trans-unit id="ce4788708205f78124b6becad2dfc54e7911c521" translate="yes" xml:space="preserve">
          <source>bool QLocalSocket::setSocketDescriptor(&lt;a href=&quot;#qintptr-typedef&quot;&gt;qintptr&lt;/a&gt;</source>
          <target state="translated">bool QLocalSocket :: setSocketDescriptor ( &lt;a href=&quot;#qintptr-typedef&quot;&gt;qintptr&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f194d64844d911c07ffb4d2bf3a9a2dd2560a48b" translate="yes" xml:space="preserve">
          <source>bool QLocalSocket::setSocketDescriptor(&lt;a href=&quot;qtglobal#qintptr-typedef&quot;&gt;qintptr&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66a573180ffc8820f6d759f83a20da3a263bd2af" translate="yes" xml:space="preserve">
          <source>bool QLocalSocket::waitForConnected(int</source>
          <target state="translated">bool QLocalSocket::waitForConnected(int</target>
        </trans-unit>
        <trans-unit id="b0121ebec14cb4efb8556c0b6718a36a3d580857" translate="yes" xml:space="preserve">
          <source>bool QLocalSocket::waitForDisconnected(int</source>
          <target state="translated">bool QLocalSocket::waitForDisconnected(int</target>
        </trans-unit>
        <trans-unit id="1df5db67bb0d43f7306016a505304ac8068be968" translate="yes" xml:space="preserve">
          <source>bool QLocale::operator!=(const &lt;a href=&quot;qlocale#QLocale&quot;&gt;QLocale&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QLocale :: operator! = (const &lt;a href=&quot;qlocale#QLocale&quot;&gt;QLocale&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="86372907ce2e7f0fec69996ec36089aed1b544ab" translate="yes" xml:space="preserve">
          <source>bool QLocale::operator==(const &lt;a href=&quot;qlocale#QLocale&quot;&gt;QLocale&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QLocale :: operator == (const &lt;a href=&quot;qlocale#QLocale&quot;&gt;QLocale&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="aa2951df10630bbbd9dc834fc81f423ad69e647b" translate="yes" xml:space="preserve">
          <source>bool QLockFile::getLockInfo(&lt;a href=&quot;qtglobal#qint64-typedef&quot;&gt;qint64&lt;/a&gt; *</source>
          <target state="translated">bool QLockFile :: getLockInfo ( &lt;a href=&quot;qtglobal#qint64-typedef&quot;&gt;qint64&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="67fb0ae408429feab9c450fce26fb296e9586b5a" translate="yes" xml:space="preserve">
          <source>bool QLockFile::isLocked() const</source>
          <target state="translated">bool QLockFile::isLocked()const</target>
        </trans-unit>
        <trans-unit id="befd067b45c1cc7e86b22825f0895027247e5521" translate="yes" xml:space="preserve">
          <source>bool QLockFile::lock()</source>
          <target state="translated">bool QLockFile::lock()</target>
        </trans-unit>
        <trans-unit id="0a66ff7fd606aa7ea2843773b89d02c4d1102ce0" translate="yes" xml:space="preserve">
          <source>bool QLockFile::removeStaleLockFile()</source>
          <target state="translated">bool QLockFile::removeStaleLockFile()</target>
        </trans-unit>
        <trans-unit id="e305f209e65f2b2bf2025bf0ae179632fd4f6f7b" translate="yes" xml:space="preserve">
          <source>bool QLockFile::tryLock(int</source>
          <target state="translated">bool QLockFile::tryLock(int</target>
        </trans-unit>
        <trans-unit id="b2ccb794d21be21116f3f49de5120971fbe2cfb7" translate="yes" xml:space="preserve">
          <source>bool QLoggingCategory::isCriticalEnabled() const</source>
          <target state="translated">bool QLoggingCategory::isCriticalEnabled()const</target>
        </trans-unit>
        <trans-unit id="a36c95f72bf9fcc7b78dbbd27f125231f9425c15" translate="yes" xml:space="preserve">
          <source>bool QLoggingCategory::isDebugEnabled() const</source>
          <target state="translated">bool QLoggingCategory::isDebugEnabled()const</target>
        </trans-unit>
        <trans-unit id="1339bdaa465aff5a6a9f052a26c0f343b71e4873" translate="yes" xml:space="preserve">
          <source>bool QLoggingCategory::isEnabled(&lt;a href=&quot;qtglobal#QtMsgType-enum&quot;&gt;QtMsgType&lt;/a&gt;</source>
          <target state="translated">bool QLoggingCategory :: isEnabled ( &lt;a href=&quot;qtglobal#QtMsgType-enum&quot;&gt;QtMsgType&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0c1864e2f81cd5a461ea7ce571d56b559f7af1d3" translate="yes" xml:space="preserve">
          <source>bool QLoggingCategory::isInfoEnabled() const</source>
          <target state="translated">bool QLoggingCategoría::isInfoEnabled()const</target>
        </trans-unit>
        <trans-unit id="043f76a23fd1ae28c4fba36351d0338f9e27a004" translate="yes" xml:space="preserve">
          <source>bool QLoggingCategory::isWarningEnabled() const</source>
          <target state="translated">bool QLoggingCategoría::isWarningEnabled()const</target>
        </trans-unit>
        <trans-unit id="5526eb7991a36ec2f4edb6e67211a04fa4c113b2" translate="yes" xml:space="preserve">
          <source>bool QLowEnergyAdvertisingData::includePowerLevel() const</source>
          <target state="translated">bool QLowEnergyAdvertisingData::includePowerLevel()const</target>
        </trans-unit>
        <trans-unit id="df4982db1bc9adcde4c986cd629d959181580584" translate="yes" xml:space="preserve">
          <source>bool QLowEnergyCharacteristic::isValid() const</source>
          <target state="translated">bool QLowEnergyCaracterística::isValid()const</target>
        </trans-unit>
        <trans-unit id="31ed21349c7da5d71efd55bc6843b67ad95fe00b" translate="yes" xml:space="preserve">
          <source>bool QLowEnergyCharacteristic::operator!=(const &lt;a href=&quot;qlowenergycharacteristic#QLowEnergyCharacteristic&quot;&gt;QLowEnergyCharacteristic&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QLowEnergyCharacteristic :: operator! = (const &lt;a href=&quot;qlowenergycharacteristic#QLowEnergyCharacteristic&quot;&gt;QLowEnergyCharacteristic&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="079c87d91ab35afa9d1d464ee1b05a677f46b001" translate="yes" xml:space="preserve">
          <source>bool QLowEnergyCharacteristic::operator==(const &lt;a href=&quot;qlowenergycharacteristic#QLowEnergyCharacteristic&quot;&gt;QLowEnergyCharacteristic&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QLowEnergyCharacteristic :: operator == (const &lt;a href=&quot;qlowenergycharacteristic#QLowEnergyCharacteristic&quot;&gt;QLowEnergyCharacteristic&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="fc132b9e146713790137e981fcc6ad755084e23b" translate="yes" xml:space="preserve">
          <source>bool QLowEnergyCharacteristicData::isValid() const</source>
          <target state="translated">bool QLowEnergyCharacteristicData::isValid()const</target>
        </trans-unit>
        <trans-unit id="078c736f76c0fcf1b8b60510ee3935a641eaf057" translate="yes" xml:space="preserve">
          <source>bool QLowEnergyDescriptor::isValid() const</source>
          <target state="translated">bool QLowEnergyDescriptor::isValid()const</target>
        </trans-unit>
        <trans-unit id="18d8f0bc4a425a2a7524d147ffce2ed53193eaa7" translate="yes" xml:space="preserve">
          <source>bool QLowEnergyDescriptor::operator!=(const &lt;a href=&quot;qlowenergydescriptor#QLowEnergyDescriptor&quot;&gt;QLowEnergyDescriptor&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QLowEnergyDescriptor :: operator! = (const &lt;a href=&quot;qlowenergydescriptor#QLowEnergyDescriptor&quot;&gt;QLowEnergyDescriptor&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="47253d30008dade71c2455387366de81d163ac52" translate="yes" xml:space="preserve">
          <source>bool QLowEnergyDescriptor::operator==(const &lt;a href=&quot;qlowenergydescriptor#QLowEnergyDescriptor&quot;&gt;QLowEnergyDescriptor&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QLowEnergyDescriptor :: operator == (const &lt;a href=&quot;qlowenergydescriptor#QLowEnergyDescriptor&quot;&gt;QLowEnergyDescriptor&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="57cb4567cc39ed5cad549cf10d923d110cfe6a72" translate="yes" xml:space="preserve">
          <source>bool QLowEnergyDescriptorData::isReadable() const</source>
          <target state="translated">bool QLowEnergyDescriptorData::isReadable()const</target>
        </trans-unit>
        <trans-unit id="27ed4f7f26897c40d0a6677cbe85782eedb685f7" translate="yes" xml:space="preserve">
          <source>bool QLowEnergyDescriptorData::isValid() const</source>
          <target state="translated">bool QLowEnergyDescriptorData::isValid()const</target>
        </trans-unit>
        <trans-unit id="a658d23c7a6d055cf6aa99fa2898b3606f741fed" translate="yes" xml:space="preserve">
          <source>bool QLowEnergyDescriptorData::isWritable() const</source>
          <target state="translated">bool QLowEnergyDescriptorData::isWritable()const</target>
        </trans-unit>
        <trans-unit id="da44acda2b14c33d7f2b6e0aa36284821f0463ea" translate="yes" xml:space="preserve">
          <source>bool QLowEnergyService::contains(const &lt;a href=&quot;qlowenergycharacteristic&quot;&gt;QLowEnergyCharacteristic&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QLowEnergyService :: contiene (const &lt;a href=&quot;qlowenergycharacteristic&quot;&gt;QLowEnergyCharacteristic&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="e888e68da89391452869d47cb4ab460d567e5a7a" translate="yes" xml:space="preserve">
          <source>bool QLowEnergyService::contains(const &lt;a href=&quot;qlowenergydescriptor&quot;&gt;QLowEnergyDescriptor&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QLowEnergyService :: contiene (const &lt;a href=&quot;qlowenergydescriptor&quot;&gt;QLowEnergyDescriptor&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="4555d68121af357afd754f9eae7702af0aaa4610" translate="yes" xml:space="preserve">
          <source>bool QLowEnergyServiceData::isValid() const</source>
          <target state="translated">bool QLowEnergyServiceData::isValid()const</target>
        </trans-unit>
        <trans-unit id="8fa9a70f439ddf2cddc2f0b6331804f138f8f78b" translate="yes" xml:space="preserve">
          <source>bool QML Basic Type</source>
          <target state="translated">bool QML Tipo Básico</target>
        </trans-unit>
        <trans-unit id="e39dacc66917e8f9d41a720e24e8b2c775cd6a66" translate="yes" xml:space="preserve">
          <source>bool QMainWindow::restoreDockWidget(&lt;a href=&quot;qdockwidget&quot;&gt;QDockWidget&lt;/a&gt; *</source>
          <target state="translated">bool QMainWindow :: restoreDockWidget ( &lt;a href=&quot;qdockwidget&quot;&gt;QDockWidget&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="b3ac540169082587db193536ed2cf3c9a3b0e38e" translate="yes" xml:space="preserve">
          <source>bool QMainWindow::restoreState(const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QMainWindow :: restoreState (const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="e94c28347863adb0cee3258e96de22797331a85c" translate="yes" xml:space="preserve">
          <source>bool QMainWindow::toolBarBreak(&lt;a href=&quot;qtoolbar&quot;&gt;QToolBar&lt;/a&gt; *</source>
          <target state="translated">bool QMainWindow :: toolBarBreak ( &lt;a href=&quot;qtoolbar&quot;&gt;QToolBar&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="eda4815a968d1dfa588e5a0ece087385f9da5247" translate="yes" xml:space="preserve">
          <source>bool QMap::contains(const Key &amp;amp;</source>
          <target state="translated">bool QMap :: contiene (clave const y</target>
        </trans-unit>
        <trans-unit id="a4b17368f2d2e5938c196510c96808767cc973bc" translate="yes" xml:space="preserve">
          <source>bool QMap::empty() const</source>
          <target state="translated">bool QMap::empty()const</target>
        </trans-unit>
        <trans-unit id="c152fa5744ec36136e2d6401236ffe7a9c67ff56" translate="yes" xml:space="preserve">
          <source>bool QMap::isEmpty() const</source>
          <target state="translated">bool QMap::isEmpty()const</target>
        </trans-unit>
        <trans-unit id="daa1ff3e4b80e8d9ee6eced59f2c3f5f2bf15651" translate="yes" xml:space="preserve">
          <source>bool QMap::operator!=(const &lt;a href=&quot;qmap#QMap&quot;&gt;QMap&lt;/a&gt;&amp;lt;Key, T&amp;gt; &amp;amp;</source>
          <target state="translated">bool QMap :: operator! = (const &lt;a href=&quot;qmap#QMap&quot;&gt;QMap&lt;/a&gt; &amp;lt;Key, T&amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="9216976e0828b313a44c1c269f5cb95f8ad2b0e5" translate="yes" xml:space="preserve">
          <source>bool QMap::operator==(const &lt;a href=&quot;qmap#QMap&quot;&gt;QMap&lt;/a&gt;&amp;lt;Key, T&amp;gt; &amp;amp;</source>
          <target state="translated">bool QMap :: operator == (const &lt;a href=&quot;qmap#QMap&quot;&gt;QMap&lt;/a&gt; &amp;lt;Key, T&amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="00dd61096019e0685badb2543e5cad4c8ca06715" translate="yes" xml:space="preserve">
          <source>bool QMapIterator::findNext(const T &amp;amp;</source>
          <target state="translated">bool QMapIterator :: findNext (const T &amp;amp;</target>
        </trans-unit>
        <trans-unit id="4d07800875773442c5d68236737ad5772ed5b909" translate="yes" xml:space="preserve">
          <source>bool QMapIterator::findPrevious(const T &amp;amp;</source>
          <target state="translated">bool QMapIterator :: findPrevious (const T &amp;amp;</target>
        </trans-unit>
        <trans-unit id="b8fc140ac8292caf4be0abee100a4819c9d68ed9" translate="yes" xml:space="preserve">
          <source>bool QMapIterator::hasNext() const</source>
          <target state="translated">bool QMapIterator::hasNext()const</target>
        </trans-unit>
        <trans-unit id="7e44cb1d3418d9518076e8c88e96b058ee28d2a9" translate="yes" xml:space="preserve">
          <source>bool QMapIterator::hasPrevious() const</source>
          <target state="translated">bool QMapIterator::hasPrevio()const</target>
        </trans-unit>
        <trans-unit id="274482619c4801569c6694ea33da694c4fd644af" translate="yes" xml:space="preserve">
          <source>bool QMargins::isNull() const</source>
          <target state="translated">bool QMargins::isNull()const</target>
        </trans-unit>
        <trans-unit id="93472f99bd781b1694db2334f247d5dba4042977" translate="yes" xml:space="preserve">
          <source>bool QMargins::operator!=(const &lt;a href=&quot;qmargins#QMargins&quot;&gt;QMargins&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QMargins :: operator! = (const &lt;a href=&quot;qmargins#QMargins&quot;&gt;QMargins&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="7abca54c4a4389aee49daf55aaaf8c41da51809f" translate="yes" xml:space="preserve">
          <source>bool QMargins::operator==(const &lt;a href=&quot;qmargins#QMargins&quot;&gt;QMargins&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QMargins :: operator == (const &lt;a href=&quot;qmargins#QMargins&quot;&gt;QMargins&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="8ddca12e59fefa43f074f7849d3c2b29452907ff" translate="yes" xml:space="preserve">
          <source>bool QMarginsF::isNull() const</source>
          <target state="translated">bool QMarginsF::isNull()const</target>
        </trans-unit>
        <trans-unit id="20dbc58581a31ec1cf95e770d54982097d03f797" translate="yes" xml:space="preserve">
          <source>bool QMarginsF::operator!=(const &lt;a href=&quot;qmarginsf#QMarginsF&quot;&gt;QMarginsF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QMarginsF :: operator! = (const &lt;a href=&quot;qmarginsf#QMarginsF&quot;&gt;QMarginsF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="8073bd85677d0f6aa9669daf508cfc9777d23624" translate="yes" xml:space="preserve">
          <source>bool QMarginsF::operator==(const &lt;a href=&quot;qmarginsf#QMarginsF&quot;&gt;QMarginsF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QMarginsF :: operator == (const &lt;a href=&quot;qmarginsf#QMarginsF&quot;&gt;QMarginsF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="566e31924e56627b57c6491da9eb321af5718564" translate="yes" xml:space="preserve">
          <source>bool QMatrix4x4::isAffine() const</source>
          <target state="translated">bool QMatrix4x4::isAffine()const</target>
        </trans-unit>
        <trans-unit id="f1e2a1d2b06283fc97f009032cdb4a819421666e" translate="yes" xml:space="preserve">
          <source>bool QMatrix4x4::isIdentity() const</source>
          <target state="translated">bool QMatrix4x4::isIdentidad()const</target>
        </trans-unit>
        <trans-unit id="b45c4a10109c5b8e194ca0825bcffbcacfe51c40" translate="yes" xml:space="preserve">
          <source>bool QMatrix4x4::operator!=(const &lt;a href=&quot;qmatrix4x4#QMatrix4x4&quot;&gt;QMatrix4x4&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QMatrix4x4 :: operator! = (const &lt;a href=&quot;qmatrix4x4#QMatrix4x4&quot;&gt;QMatrix4x4&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="bf053828f686c795b8ff6dfaf875d900994f74e1" translate="yes" xml:space="preserve">
          <source>bool QMatrix4x4::operator==(const &lt;a href=&quot;qmatrix4x4#QMatrix4x4&quot;&gt;QMatrix4x4&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QMatrix4x4 :: operator == (const &lt;a href=&quot;qmatrix4x4#QMatrix4x4&quot;&gt;QMatrix4x4&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="f9f9f6f1395ccf307deb8138830adbea6dc51092" translate="yes" xml:space="preserve">
          <source>bool QMatrix4x4::qFuzzyCompare(const &lt;a href=&quot;qmatrix4x4#QMatrix4x4&quot;&gt;QMatrix4x4&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QMatrix4x4 :: qFuzzyCompare (const &lt;a href=&quot;qmatrix4x4#QMatrix4x4&quot;&gt;QMatrix4x4&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="a14abda08118ff9f032d2553f25b0afa199eb116" translate="yes" xml:space="preserve">
          <source>bool QMatrix::isIdentity() const</source>
          <target state="translated">bool QMatrix::isIdentidad()const</target>
        </trans-unit>
        <trans-unit id="6d9e7ae9fac4a2689eacbb193703c2c587c59b04" translate="yes" xml:space="preserve">
          <source>bool QMatrix::isInvertible() const</source>
          <target state="translated">bool QMatrix::isInvertible()const</target>
        </trans-unit>
        <trans-unit id="29d0de8c6b3bd3ca37410b6fee11bbc801296a9a" translate="yes" xml:space="preserve">
          <source>bool QMatrix::operator!=(const QMatrix &amp;amp;</source>
          <target state="translated">bool QMatrix :: operator! = (const QMatrix &amp;amp;</target>
        </trans-unit>
        <trans-unit id="0a22afbe8e4ece8d1ea719de3c6edd80169a035f" translate="yes" xml:space="preserve">
          <source>bool QMatrix::operator==(const QMatrix &amp;amp;</source>
          <target state="translated">bool QMatrix :: operator == (const QMatrix &amp;amp;</target>
        </trans-unit>
        <trans-unit id="8708f68c59878bdaa643bc4ed6931fceb4c49a49" translate="yes" xml:space="preserve">
          <source>bool QMatrix::qFuzzyCompare(const QMatrix &amp;amp;</source>
          <target state="translated">bool QMatrix :: qFuzzyCompare (const QMatrix &amp;amp;</target>
        </trans-unit>
        <trans-unit id="e0b0ac7bb82296d854374e13014686a903559d89" translate="yes" xml:space="preserve">
          <source>bool QMdiArea::testOption(&lt;a href=&quot;qmdiarea#AreaOption-enum&quot;&gt;QMdiArea::AreaOption&lt;/a&gt;</source>
          <target state="translated">bool QMdiArea :: testOption ( &lt;a href=&quot;qmdiarea#AreaOption-enum&quot;&gt;QMdiArea :: AreaOption&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="726f0af6388d72e7cb6ce2ff267537c7934c8950" translate="yes" xml:space="preserve">
          <source>bool QMdiSubWindow::isShaded() const</source>
          <target state="translated">bool QMdiSubWindow::isShaded()const</target>
        </trans-unit>
        <trans-unit id="5b0983ee9036b58adb39c5f6a2ce6825cb80ab5e" translate="yes" xml:space="preserve">
          <source>bool QMdiSubWindow::testOption(&lt;a href=&quot;qmdisubwindow#SubWindowOption-enum&quot;&gt;QMdiSubWindow::SubWindowOption&lt;/a&gt;</source>
          <target state="translated">bool QMdiSubWindow :: testOption ( &lt;a href=&quot;qmdisubwindow#SubWindowOption-enum&quot;&gt;QMdiSubWindow :: SubWindowOption&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="44980ec520bdd8416185511ddddbc993816fcea5" translate="yes" xml:space="preserve">
          <source>bool QMediaContent::isNull() const</source>
          <target state="translated">bool QMediaContent::isNull()const</target>
        </trans-unit>
        <trans-unit id="7142b12b4a281f67903c6e0d788d825e20457c4a" translate="yes" xml:space="preserve">
          <source>bool QMediaContent::operator!=(const &lt;a href=&quot;qmediacontent#QMediaContent&quot;&gt;QMediaContent&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QMediaContent :: operator! = (const &lt;a href=&quot;qmediacontent#QMediaContent&quot;&gt;QMediaContent&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="443f7e96c9a2fa474e25cbbc427cf62436d53a29" translate="yes" xml:space="preserve">
          <source>bool QMediaContent::operator==(const &lt;a href=&quot;qmediacontent#QMediaContent&quot;&gt;QMediaContent&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QMediaContent :: operator == (const &lt;a href=&quot;qmediacontent#QMediaContent&quot;&gt;QMediaContent&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="daffacd93ac449bb11ebaa849893de7168fdd0f2" translate="yes" xml:space="preserve">
          <source>bool QMediaObject::isMetaDataAvailable() const</source>
          <target state="translated">bool QMediaObjeto::isMetaDataDisponible()const</target>
        </trans-unit>
        <trans-unit id="cd2f356c045f7de45fd09f31856cb0f22f92fa4b" translate="yes" xml:space="preserve">
          <source>bool QMediaPlaylist::addMedia(const &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;&lt;a href=&quot;qmediacontent&quot;&gt;QMediaContent&lt;/a&gt;&amp;gt; &amp;amp;</source>
          <target state="translated">bool QMediaPlaylist :: addMedia (const &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; &amp;lt; &lt;a href=&quot;qmediacontent&quot;&gt;QMediaContent&lt;/a&gt; &amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="db324e3568f18ae892ad15202241c89a42cdc58b" translate="yes" xml:space="preserve">
          <source>bool QMediaPlaylist::addMedia(const &lt;a href=&quot;qmediacontent&quot;&gt;QMediaContent&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QMediaPlaylist :: addMedia (const &lt;a href=&quot;qmediacontent&quot;&gt;QMediaContent&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="e1f85c75b6c20704b7eef1459d210dda018677b7" translate="yes" xml:space="preserve">
          <source>bool QMediaPlaylist::clear()</source>
          <target state="translated">bool QMediaPlaylist::clear()</target>
        </trans-unit>
        <trans-unit id="eed6e944edfebce8377b24d49fbc2647524ea93e" translate="yes" xml:space="preserve">
          <source>bool QMediaPlaylist::insertMedia(int</source>
          <target state="translated">bool QMediaPlaylist::insertMedia(int</target>
        </trans-unit>
        <trans-unit id="814d8e6544363a37ae30820c89b4d26d5a3eb5ae" translate="yes" xml:space="preserve">
          <source>bool QMediaPlaylist::isEmpty() const</source>
          <target state="translated">bool QMediaPlaylist::isEmpty()const</target>
        </trans-unit>
        <trans-unit id="5bffb50c40737e1be0c975b6ea17ab288fc5f415" translate="yes" xml:space="preserve">
          <source>bool QMediaPlaylist::isReadOnly() const</source>
          <target state="translated">bool QMediaPlaylist::isReadOnly()const</target>
        </trans-unit>
        <trans-unit id="35589ee93601f4021166bec0f8e100276bf18b93" translate="yes" xml:space="preserve">
          <source>bool QMediaPlaylist::moveMedia(int</source>
          <target state="translated">bool QMediaPlaylist::moveMedia(int</target>
        </trans-unit>
        <trans-unit id="60e67da58f9dd2b2469db17b72cfc17e74b4292c" translate="yes" xml:space="preserve">
          <source>bool QMediaPlaylist::removeMedia(int</source>
          <target state="translated">bool QMediaPlaylist::removeMedia(int</target>
        </trans-unit>
        <trans-unit id="77919f5807593ff1c46a76b3f673e9e67f9c0d50" translate="yes" xml:space="preserve">
          <source>bool QMediaPlaylist::save(&lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt; *</source>
          <target state="translated">bool QMediaPlaylist :: save ( &lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="2f5c91a575db3b87a4b560e4c765143288de74b1" translate="yes" xml:space="preserve">
          <source>bool QMediaPlaylist::save(const &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QMediaPlaylist :: save (const &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="4398b9ba2eade3dba5b4bbf34ba25c09d61928e7" translate="yes" xml:space="preserve">
          <source>bool QMediaRecorder::isAvailable() const</source>
          <target state="translated">bool QMediaRecorder::isAvailable()const</target>
        </trans-unit>
        <trans-unit id="d95ad3dbc055d4ad248ab595621a6b3bf9b94d0b" translate="yes" xml:space="preserve">
          <source>bool QMediaResource::isNull() const</source>
          <target state="translated">bool QMediaResource::isNull()const</target>
        </trans-unit>
        <trans-unit id="144c84bd0cdca8a5a6f0b93cfbe124838ac8726f" translate="yes" xml:space="preserve">
          <source>bool QMediaResource::operator!=(const &lt;a href=&quot;qmediaresource#QMediaResource&quot;&gt;QMediaResource&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QMediaResource :: operator! = (const &lt;a href=&quot;qmediaresource#QMediaResource&quot;&gt;QMediaResource&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="2fb91edc1d9f1e8c7271537866c837de4df31742" translate="yes" xml:space="preserve">
          <source>bool QMediaResource::operator==(const &lt;a href=&quot;qmediaresource#QMediaResource&quot;&gt;QMediaResource&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QMediaResource :: operator == (const &lt;a href=&quot;qmediaresource#QMediaResource&quot;&gt;QMediaResource&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="0fbcc5525884ff8d4e8418b4b7b5b4ba6e35eae5" translate="yes" xml:space="preserve">
          <source>bool QMediaTimeInterval::contains(&lt;a href=&quot;#qint64-typedef&quot;&gt;qint64&lt;/a&gt;</source>
          <target state="translated">bool QMediaTimeInterval :: contiene ( &lt;a href=&quot;#qint64-typedef&quot;&gt;qint64&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="929ad89cef2c841f99f83ae9dfe30134d976bb67" translate="yes" xml:space="preserve">
          <source>bool QMediaTimeInterval::contains(&lt;a href=&quot;qtglobal#qint64-typedef&quot;&gt;qint64&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3bfe15c2a08748132f750e55b325f5e1bab6d40" translate="yes" xml:space="preserve">
          <source>bool QMediaTimeInterval::isNormal() const</source>
          <target state="translated">bool QMediaTimeIntervalo::isNormal()const</target>
        </trans-unit>
        <trans-unit id="6156cd3468ecfeeee729398cd577b30c52705fa1" translate="yes" xml:space="preserve">
          <source>bool QMediaTimeRange::contains(&lt;a href=&quot;#qint64-typedef&quot;&gt;qint64&lt;/a&gt;</source>
          <target state="translated">bool QMediaTimeRange :: contiene ( &lt;a href=&quot;#qint64-typedef&quot;&gt;qint64&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d022703b2e479c0c5f87a2ff614d53d7636308e2" translate="yes" xml:space="preserve">
          <source>bool QMediaTimeRange::contains(&lt;a href=&quot;qtglobal#qint64-typedef&quot;&gt;qint64&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af09ce6ac161ea4ba1aa17f3db4d36590a5e30c7" translate="yes" xml:space="preserve">
          <source>bool QMediaTimeRange::isContinuous() const</source>
          <target state="translated">bool QMediaTimeRange::isContinuo()const</target>
        </trans-unit>
        <trans-unit id="3ef22b2c5c4e82d47027da67d9dd1709e8f385af" translate="yes" xml:space="preserve">
          <source>bool QMediaTimeRange::isEmpty() const</source>
          <target state="translated">bool QMediaTimeRange::isEmpty()const</target>
        </trans-unit>
        <trans-unit id="867552589103fd8316e65a69f1a7de8c4365db31" translate="yes" xml:space="preserve">
          <source>bool QMediaTimeRange::operator!=(const &lt;a href=&quot;qmediatimeinterval&quot;&gt;QMediaTimeInterval&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QMediaTimeRange :: operator! = (const &lt;a href=&quot;qmediatimeinterval&quot;&gt;QMediaTimeInterval&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="efdf43ec0bc8269bac322cb8494e6838c856ff0a" translate="yes" xml:space="preserve">
          <source>bool QMediaTimeRange::operator!=(const &lt;a href=&quot;qmediatimerange#QMediaTimeRange&quot;&gt;QMediaTimeRange&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QMediaTimeRange :: operator! = (const &lt;a href=&quot;qmediatimerange#QMediaTimeRange&quot;&gt;QMediaTimeRange&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="2da8c56d2605c309d54ce4f76598a3555880b019" translate="yes" xml:space="preserve">
          <source>bool QMediaTimeRange::operator==(const &lt;a href=&quot;qmediatimeinterval&quot;&gt;QMediaTimeInterval&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QMediaTimeRange :: operator == (const &lt;a href=&quot;qmediatimeinterval&quot;&gt;QMediaTimeInterval&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="2def5a16f732ba8c138417d03f04bb76e380d280" translate="yes" xml:space="preserve">
          <source>bool QMediaTimeRange::operator==(const &lt;a href=&quot;qmediatimerange#QMediaTimeRange&quot;&gt;QMediaTimeRange&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QMediaTimeRange :: operator == (const &lt;a href=&quot;qmediatimerange#QMediaTimeRange&quot;&gt;QMediaTimeRange&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="bafa5af8d40bcb076b9cf5076bd64c00db375a93" translate="yes" xml:space="preserve">
          <source>bool QMenu::isEmpty() const</source>
          <target state="translated">bool QMenu::isEmpty()const</target>
        </trans-unit>
        <trans-unit id="03d2a246ee391a53f276eb064cd504f52c61a085" translate="yes" xml:space="preserve">
          <source>bool QMenu::isTearOffMenuVisible() const</source>
          <target state="translated">bool QMenu::isTearOffMenuVisu()const</target>
        </trans-unit>
        <trans-unit id="fb101d5e12e1e26d5e50f6bc616f6335747559d0" translate="yes" xml:space="preserve">
          <source>bool QMessageAuthenticationCode::addData(&lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt; *</source>
          <target state="translated">bool QMessageAuthenticationCode :: addData ( &lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="e700fb678742ce5e20136db1154f42a2aeaad9f5" translate="yes" xml:space="preserve">
          <source>bool QMetaEnum::isFlag() const</source>
          <target state="translated">bool QMetaEnum::isFlag()const</target>
        </trans-unit>
        <trans-unit id="7abe1383d5e4c1341344e79df2ebaee6dcd0ef62" translate="yes" xml:space="preserve">
          <source>bool QMetaEnum::isScoped() const</source>
          <target state="translated">bool QMetaEnum::isScoped()const</target>
        </trans-unit>
        <trans-unit id="605ea194f17dd0b1ab8f7c3563b5ad58ef5c0b06" translate="yes" xml:space="preserve">
          <source>bool QMetaEnum::isValid() const</source>
          <target state="translated">bool QMetaEnum::isValid()const</target>
        </trans-unit>
        <trans-unit id="02806c346e16cbf03e9a6e4d422507159b5a99a2" translate="yes" xml:space="preserve">
          <source>bool QMetaMethod::invoke(&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="translated">bool QMetaMethod :: invoke ( &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="eb4f223a27e4d0ab64841ac4de222a4dcc06a357" translate="yes" xml:space="preserve">
          <source>bool QMetaMethod::invokeOnGadget(void *</source>
          <target state="translated">bool Q MetaMethod::invokeOnGadget(void *</target>
        </trans-unit>
        <trans-unit id="0b18ef38c79e63a0d25e243031960efb8d53a6af" translate="yes" xml:space="preserve">
          <source>bool QMetaMethod::isValid() const</source>
          <target state="translated">bool QMetaMethod::isValid()const</target>
        </trans-unit>
        <trans-unit id="36be4b9096d0650a6a205a8d37908ae7bb829cad" translate="yes" xml:space="preserve">
          <source>bool QMetaMethod::operator!=(const QMetaMethod &amp;amp;</source>
          <target state="translated">bool QMetaMethod :: operator! = (const QMetaMethod &amp;amp;</target>
        </trans-unit>
        <trans-unit id="d6440a936e6c3c74983de0797642be4e35adc59d" translate="yes" xml:space="preserve">
          <source>bool QMetaMethod::operator==(const QMetaMethod &amp;amp;</source>
          <target state="translated">bool QMetaMethod :: operator == (const QMetaMethod &amp;amp;</target>
        </trans-unit>
        <trans-unit id="f9d5f6afc0b7eaf66fbc0b3422d072a8970fa976" translate="yes" xml:space="preserve">
          <source>bool QMetaObject::inherits(const &lt;a href=&quot;qmetaobject&quot;&gt;QMetaObject&lt;/a&gt; *</source>
          <target state="translated">bool QMetaObject :: hereda (const &lt;a href=&quot;qmetaobject&quot;&gt;QMetaObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="9355b5113e1ab89cc87b63ed0adda492e3b6bf78" translate="yes" xml:space="preserve">
          <source>bool QMetaProperty::hasNotifySignal() const</source>
          <target state="translated">bool QMetaProperty::hasNotifySignal()const</target>
        </trans-unit>
        <trans-unit id="5bcfa546e95f1b5a4960cfa382b3878905a3236d" translate="yes" xml:space="preserve">
          <source>bool QMetaProperty::isConstant() const</source>
          <target state="translated">bool QMetaProperty::isConstant()const</target>
        </trans-unit>
        <trans-unit id="b7e030e78aa49e970983c7b3887855366c19aca3" translate="yes" xml:space="preserve">
          <source>bool QMetaProperty::isDesignable() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b74a3c0afd279be5c318cb2adc12fc714cc6aac4" translate="yes" xml:space="preserve">
          <source>bool QMetaProperty::isDesignable(const &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="translated">bool QMetaProperty :: isDesignable (const &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="e993c2815562bbc1fb2a4e99605fbfaa837c31a7" translate="yes" xml:space="preserve">
          <source>bool QMetaProperty::isEnumType() const</source>
          <target state="translated">bool QMetaProperty::isEnumType()const</target>
        </trans-unit>
        <trans-unit id="5012dd8c877690bef769773c9f7b5c7ebddf3448" translate="yes" xml:space="preserve">
          <source>bool QMetaProperty::isFinal() const</source>
          <target state="translated">bool QMetaProperty::isFinal()const</target>
        </trans-unit>
        <trans-unit id="a0a260c85f5aac53d5f3b977fb308a1de4d93c2f" translate="yes" xml:space="preserve">
          <source>bool QMetaProperty::isFlagType() const</source>
          <target state="translated">bool QMetaProperty::isFlagType()const</target>
        </trans-unit>
        <trans-unit id="30ce8e966b63040016a9525dcc8609370f5961f7" translate="yes" xml:space="preserve">
          <source>bool QMetaProperty::isReadable() const</source>
          <target state="translated">bool QMetaProperty::isReadable()const</target>
        </trans-unit>
        <trans-unit id="9e1d1fab5186c7e1475ef869ec552ad07f846c36" translate="yes" xml:space="preserve">
          <source>bool QMetaProperty::isRequired() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7111772f5bbd6848d5bc520dd5607686d63c1d6" translate="yes" xml:space="preserve">
          <source>bool QMetaProperty::isResettable() const</source>
          <target state="translated">bool QMetaProperty::isResettable()const</target>
        </trans-unit>
        <trans-unit id="6d0c4d54b798d2f29c73b591032b69f90ac578e9" translate="yes" xml:space="preserve">
          <source>bool QMetaProperty::isScriptable() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9023b605159eb8d29b61bd12cc71269f68092cb4" translate="yes" xml:space="preserve">
          <source>bool QMetaProperty::isScriptable(const &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="translated">bool QMetaProperty :: isScriptable (const &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="d8fefc852f6149393c55eca69177e22c7247b876" translate="yes" xml:space="preserve">
          <source>bool QMetaProperty::isStored() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91865bf0a52524ce5ad8adb34a51bcbb0a510df0" translate="yes" xml:space="preserve">
          <source>bool QMetaProperty::isStored(const &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="translated">bool QMetaProperty :: isStored (const &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="ca1076e02b8e24e4c51ae66ea03f27717182fe23" translate="yes" xml:space="preserve">
          <source>bool QMetaProperty::isUser() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1677d9ee547dc87d13e2f7cd51793da3b2bd9094" translate="yes" xml:space="preserve">
          <source>bool QMetaProperty::isUser(const &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="translated">bool QMetaProperty :: isUser (const &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="1cb32fa2c0d385248b4c7ca5b1cb2462610b386f" translate="yes" xml:space="preserve">
          <source>bool QMetaProperty::isValid() const</source>
          <target state="translated">bool QMetaProperty::isValid()const</target>
        </trans-unit>
        <trans-unit id="47f840ebb559eea576ca72d3f63b29302c78ffa7" translate="yes" xml:space="preserve">
          <source>bool QMetaProperty::isWritable() const</source>
          <target state="translated">bool QMetaProperty::isWritable()const</target>
        </trans-unit>
        <trans-unit id="b4151e1bd9ed7677b4e68bbbeac3b8d18315786a" translate="yes" xml:space="preserve">
          <source>bool QMetaProperty::reset(&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="translated">bool QMetaProperty :: reset ( &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="c28de564769594b69aaa04a88d6da49c063c7fdb" translate="yes" xml:space="preserve">
          <source>bool QMetaProperty::resetOnGadget(void *</source>
          <target state="translated">bool QMetaProperty::resetOnGadget(void *)</target>
        </trans-unit>
        <trans-unit id="ddfce5fc6ffb44c91cef34eed6bed0012fa6a329" translate="yes" xml:space="preserve">
          <source>bool QMetaProperty::write(&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="translated">bool QMetaProperty :: write ( &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="0057ed8acc4377ca5cae30bb96d8d75aa5e29515" translate="yes" xml:space="preserve">
          <source>bool QMetaProperty::writeOnGadget(void *</source>
          <target state="translated">bool QMetaProperty::writeOnGadget(void *)</target>
        </trans-unit>
        <trans-unit id="ec85a25d514f9193efa6df84ac05b2c2c28896d9" translate="yes" xml:space="preserve">
          <source>bool QMetaSequence::canAddValue() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e21673906494465dfd0fd8ade47f832a5c2aa71d" translate="yes" xml:space="preserve">
          <source>bool QMetaSequence::canAddValueAtBegin() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94edcbb33fa561fd2c30b09f4981cf997eeabd09" translate="yes" xml:space="preserve">
          <source>bool QMetaSequence::canAddValueAtEnd() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78f24c9613e6f61e9e8f92ae626d637f0f4289f2" translate="yes" xml:space="preserve">
          <source>bool QMetaSequence::canEraseRangeAtIterator() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e931ded01b6bb24baa658b4411f6e8fb103e500" translate="yes" xml:space="preserve">
          <source>bool QMetaSequence::canEraseValueAtIterator() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fdc1b6184b36cb64a26de2740187b594b863055" translate="yes" xml:space="preserve">
          <source>bool QMetaSequence::canGetValueAtConstIterator() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7e02cc3fc517ff8c52775800f6fbde4e7959120" translate="yes" xml:space="preserve">
          <source>bool QMetaSequence::canGetValueAtIndex() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68b297e880bc541b36404b0d5df55719fd5e99d4" translate="yes" xml:space="preserve">
          <source>bool QMetaSequence::canGetValueAtIterator() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e41bab147c934746ea7251d19c36178f9ae5f56" translate="yes" xml:space="preserve">
          <source>bool QMetaSequence::canInsertValueAtIterator() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ca65f7ffb1050b663a8cb79bd3c7edc64a973d2" translate="yes" xml:space="preserve">
          <source>bool QMetaSequence::canRemoveValue() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8214cd15c8c52af75e6d3e09499a9b333d8aa9a7" translate="yes" xml:space="preserve">
          <source>bool QMetaSequence::canRemoveValueAtBegin() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f8266a17ae076af358afa71c9169120a35e93f3" translate="yes" xml:space="preserve">
          <source>bool QMetaSequence::canRemoveValueAtEnd() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aae785f664ce71999e7c8e6fd2d5f28114a9d6ae" translate="yes" xml:space="preserve">
          <source>bool QMetaSequence::canSetValueAtIndex() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d348e791e3c731ffe838c8d10d8c4be8cc887148" translate="yes" xml:space="preserve">
          <source>bool QMetaSequence::canSetValueAtIterator() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64c9e4635f34734169165a1eb41bd65d5b075579" translate="yes" xml:space="preserve">
          <source>bool QMetaSequence::isSortable() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dc9f971071d632fd5a8644155235676126c82e5" translate="yes" xml:space="preserve">
          <source>bool QMetaType::isEqualityComparable() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3db0557ffad32c686cdf6a3fe29794e48f2c4398" translate="yes" xml:space="preserve">
          <source>bool QMetaType::isOrdered() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb2949231e152bc52d94b176a5d1de8b6706c027" translate="yes" xml:space="preserve">
          <source>bool QMetaType::isRegistered() const</source>
          <target state="translated">bool QMetaType::isRegistered()const</target>
        </trans-unit>
        <trans-unit id="0e1b7de893b6c3ba4f8f37bd3189becd8dbc39e1" translate="yes" xml:space="preserve">
          <source>bool QMetaType::isValid() const</source>
          <target state="translated">bool QMetaType::isValid()const</target>
        </trans-unit>
        <trans-unit id="4c95e71c4d8fbe822edbf9482dcb3cb219dcc1f3" translate="yes" xml:space="preserve">
          <source>bool QMetaType::load(&lt;a href=&quot;qdatastream&quot;&gt;QDataStream&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c1eb4c62f468f3bfa2e55dea377d6b8553f6749" translate="yes" xml:space="preserve">
          <source>bool QMetaType::save(&lt;a href=&quot;qdatastream&quot;&gt;QDataStream&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e051da446f6ddc2510f16622df8dca17d0c247ee" translate="yes" xml:space="preserve">
          <source>bool QMimeData::hasColor() const</source>
          <target state="translated">bool QMimeData::hasColor()const</target>
        </trans-unit>
        <trans-unit id="3ccfeddad061db01d062a8c6316b323ae52a061f" translate="yes" xml:space="preserve">
          <source>bool QMimeData::hasHtml() const</source>
          <target state="translated">bool QMimeData::hasHtml()const</target>
        </trans-unit>
        <trans-unit id="426085a7d014a0181e7d7b5cf11d304929bbab36" translate="yes" xml:space="preserve">
          <source>bool QMimeData::hasImage() const</source>
          <target state="translated">bool QMimeData::hasImage()const</target>
        </trans-unit>
        <trans-unit id="a85ec26895a7df79add5ff6fbceec29c5303485d" translate="yes" xml:space="preserve">
          <source>bool QMimeData::hasText() const</source>
          <target state="translated">bool QMimeData::hasText()const</target>
        </trans-unit>
        <trans-unit id="49a71d06106d8c5e6c3e5d40920b82c533724e73" translate="yes" xml:space="preserve">
          <source>bool QMimeData::hasUrls() const</source>
          <target state="translated">bool QMimeData::hasUrls()const</target>
        </trans-unit>
        <trans-unit id="735413260fd9586ea6dfac2d6bcbae0330d53a97" translate="yes" xml:space="preserve">
          <source>bool QMimeType::inherits(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QMimeType :: hereda (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="15c41ac979a5ad549e999233dc62b6a8f8b23dea" translate="yes" xml:space="preserve">
          <source>bool QMimeType::operator!=(const &lt;a href=&quot;qmimetype#QMimeType&quot;&gt;QMimeType&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QMimeType :: operator! = (const &lt;a href=&quot;qmimetype#QMimeType&quot;&gt;QMimeType&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="55410db8ee5e740474e4ce93a6ae1e2d28a7fbb8" translate="yes" xml:space="preserve">
          <source>bool QMimeType::operator==(const &lt;a href=&quot;qmimetype#QMimeType&quot;&gt;QMimeType&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QMimeType :: operator == (const &lt;a href=&quot;qmimetype#QMimeType&quot;&gt;QMimeType&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="9b55c5b19594be5ba674edabe1fa6f994eee3abe" translate="yes" xml:space="preserve">
          <source>bool QModbusDataUnit::isValid() const</source>
          <target state="translated">bool QModbusDataUnit::isValid()const</target>
        </trans-unit>
        <trans-unit id="6d9205fe3cb87f2728c20bc7acad884d2e4d61b8" translate="yes" xml:space="preserve">
          <source>bool QModbusDevice::connectDevice()</source>
          <target state="translated">bool QModbusDevice::connectDevice()</target>
        </trans-unit>
        <trans-unit id="9586363f3b8c585a8864e7bcb0c255b811d186e1" translate="yes" xml:space="preserve">
          <source>bool QModbusDeviceIdentification::contains(&lt;a href=&quot;#uint-typedef&quot;&gt;uint&lt;/a&gt;</source>
          <target state="translated">bool QModbusDeviceIdentification :: contiene ( &lt;a href=&quot;#uint-typedef&quot;&gt;uint&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6bfb69057a978684314ce9038a6f6059a1bbaf49" translate="yes" xml:space="preserve">
          <source>bool QModbusDeviceIdentification::contains(&lt;a href=&quot;qtglobal#uint-typedef&quot;&gt;uint&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f4f8d45d69069ef5fc401950461ab30365c8faa" translate="yes" xml:space="preserve">
          <source>bool QModbusDeviceIdentification::insert(&lt;a href=&quot;#uint-typedef&quot;&gt;uint&lt;/a&gt;</source>
          <target state="translated">bool QModbusDeviceIdentification :: insert ( &lt;a href=&quot;#uint-typedef&quot;&gt;uint&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f6c3cbb93a0a436392929933c244504da8423730" translate="yes" xml:space="preserve">
          <source>bool QModbusDeviceIdentification::insert(&lt;a href=&quot;qtglobal#uint-typedef&quot;&gt;uint&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e37f77b7d39c7639fdd6db212c556e84ca4d50d" translate="yes" xml:space="preserve">
          <source>bool QModbusDeviceIdentification::isValid() const</source>
          <target state="translated">bool QModbusDeviceIdentification::isValid()const</target>
        </trans-unit>
        <trans-unit id="a5098b98a1b60ae459deaf5450bfebc59c7f97ea" translate="yes" xml:space="preserve">
          <source>bool QModbusPdu::isException() const</source>
          <target state="translated">bool QModbusPdu::isException()const</target>
        </trans-unit>
        <trans-unit id="0299e570e591d3200b05cb0b69b770afe2bd2c82" translate="yes" xml:space="preserve">
          <source>bool QModbusPdu::isValid() const</source>
          <target state="translated">bool QModbusPdu::isValid()const</target>
        </trans-unit>
        <trans-unit id="3d23af0dbe882cebc8f3acb320243ccff060fc29" translate="yes" xml:space="preserve">
          <source>bool QModbusReply::isFinished() const</source>
          <target state="translated">bool QModbusReply::isFinished()const</target>
        </trans-unit>
        <trans-unit id="23b3557ada3750f26e5d135e78562ed9d27ed007" translate="yes" xml:space="preserve">
          <source>bool QModbusServer::data(&lt;a href=&quot;qmodbusdataunit&quot;&gt;QModbusDataUnit&lt;/a&gt; *</source>
          <target state="translated">bool QModbusServer :: datos ( &lt;a href=&quot;qmodbusdataunit&quot;&gt;QModbusDataUnit&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="00b7ff71904de1482ecc56abca1c94adfc77c8e0" translate="yes" xml:space="preserve">
          <source>bool QModbusServer::data(&lt;a href=&quot;qmodbusdataunit#RegisterType-enum&quot;&gt;QModbusDataUnit::RegisterType&lt;/a&gt;</source>
          <target state="translated">bool QModbusServer :: datos ( &lt;a href=&quot;qmodbusdataunit#RegisterType-enum&quot;&gt;QModbusDataUnit :: RegisterType&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8de9d8cb05dc90a4e4b8c7bfa14f23ddeacb994d" translate="yes" xml:space="preserve">
          <source>bool QModbusServer::setData(&lt;a href=&quot;qmodbusdataunit#RegisterType-enum&quot;&gt;QModbusDataUnit::RegisterType&lt;/a&gt;</source>
          <target state="translated">bool QModbusServer :: setData ( &lt;a href=&quot;qmodbusdataunit#RegisterType-enum&quot;&gt;QModbusDataUnit :: RegisterType&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ecce6657e544cc91ff68cfbd68fd55dadfcb6678" translate="yes" xml:space="preserve">
          <source>bool QModbusServer::setData(const &lt;a href=&quot;qmodbusdataunit&quot;&gt;QModbusDataUnit&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QModbusServer :: setData (const &lt;a href=&quot;qmodbusdataunit&quot;&gt;QModbusDataUnit&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="0f504f0779e48766234e03113ddf1ae4e08e56a7" translate="yes" xml:space="preserve">
          <source>bool QModelIndex::isValid() const</source>
          <target state="translated">bool QModelIndex::isValid()const</target>
        </trans-unit>
        <trans-unit id="8ef444ecf120615cbb54e3369d36ea901e9d26ec" translate="yes" xml:space="preserve">
          <source>bool QModelIndex::operator!=(const &lt;a href=&quot;qmodelindex#QModelIndex&quot;&gt;QModelIndex&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QModelIndex :: operator! = (const &lt;a href=&quot;qmodelindex#QModelIndex&quot;&gt;QModelIndex&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="c485b9a78a2f2676094fce8a3becebde022c9e70" translate="yes" xml:space="preserve">
          <source>bool QModelIndex::operator&amp;lt;(const &lt;a href=&quot;qmodelindex#QModelIndex&quot;&gt;QModelIndex&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QModelIndex :: operator &amp;lt;(const &lt;a href=&quot;qmodelindex#QModelIndex&quot;&gt;QModelIndex&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="0eb6fa577dcf0d778886e7d0adb5d451597a738b" translate="yes" xml:space="preserve">
          <source>bool QModelIndex::operator==(const &lt;a href=&quot;qmodelindex#QModelIndex&quot;&gt;QModelIndex&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QModelIndex :: operator == (const &lt;a href=&quot;qmodelindex#QModelIndex&quot;&gt;QModelIndex&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="e46ee7f998ec055d8cf41bdd3313b831131775c2" translate="yes" xml:space="preserve">
          <source>bool QMouseEvent::isAccepted() const</source>
          <target state="translated">bool QMouseEvent::isAccepted()const</target>
        </trans-unit>
        <trans-unit id="f2def48d3526b0546efced49a39bb8dec96e8edb" translate="yes" xml:space="preserve">
          <source>bool QMovie::isValid() const</source>
          <target state="translated">bool QMovie::isValid()const</target>
        </trans-unit>
        <trans-unit id="6ea40d474ea69190c0272a7dfd53caa9600c71d9" translate="yes" xml:space="preserve">
          <source>bool QMovie::jumpToFrame(int</source>
          <target state="translated">bool QMovie::jumpToFrame(int</target>
        </trans-unit>
        <trans-unit id="3b36fbedabe92b7776479634822427a7e9d8cbf9" translate="yes" xml:space="preserve">
          <source>bool QMultiHash::contains(const Key &amp;amp;</source>
          <target state="translated">bool QMultiHash :: contiene (clave const y</target>
        </trans-unit>
        <trans-unit id="f6ab11934990a8b3118dcf4f61d197af9cb474ff" translate="yes" xml:space="preserve">
          <source>bool QMultiMap::contains(const Key &amp;amp;</source>
          <target state="translated">bool QMultiMap :: contiene (clave const &amp;amp;</target>
        </trans-unit>
        <trans-unit id="3d667a8635af9129b02d98059cf2da05422c9310" translate="yes" xml:space="preserve">
          <source>bool QMultiMap::empty() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66291f8060383f2962076e795a2db84532585fe2" translate="yes" xml:space="preserve">
          <source>bool QMultiMap::isEmpty() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab08b50156222f91508c78243d3f71f2820eacc8" translate="yes" xml:space="preserve">
          <source>bool QMultiMapIterator::findNext(const T &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27008cf37a800599f6167b31f09ab875aacbc1f2" translate="yes" xml:space="preserve">
          <source>bool QMultiMapIterator::findPrevious(const T &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa08da339a4fe18e037c18265b32d9f225d4bcd7" translate="yes" xml:space="preserve">
          <source>bool QMultiMapIterator::hasNext() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cd8ab0b13d44fa6c268ba5d9d37a3053a7498c4" translate="yes" xml:space="preserve">
          <source>bool QMultiMapIterator::hasPrevious() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="973baa36ad046d43c306af56944417e166b24f76" translate="yes" xml:space="preserve">
          <source>bool QMutableHashIterator::findNext(const T &amp;amp;</source>
          <target state="translated">bool QMutableHashIterator :: findNext (const T &amp;amp;</target>
        </trans-unit>
        <trans-unit id="df29884de5632d91d7f505d0e9bec911cdc8d695" translate="yes" xml:space="preserve">
          <source>bool QMutableHashIterator::findPrevious(const T &amp;amp;</source>
          <target state="translated">bool QMutableHashIterator :: findPrevious (const T &amp;amp;</target>
        </trans-unit>
        <trans-unit id="7f20657a39420f011d9a93d512d3aed59cb3670e" translate="yes" xml:space="preserve">
          <source>bool QMutableHashIterator::hasNext() const</source>
          <target state="translated">bool QMutableHashIterator::hasNext()const</target>
        </trans-unit>
        <trans-unit id="20ec326396c4c043a9b3ede90e42b9c04d666f28" translate="yes" xml:space="preserve">
          <source>bool QMutableHashIterator::hasPrevious() const</source>
          <target state="translated">bool QMutableHashIterator::hasPrevious()const</target>
        </trans-unit>
        <trans-unit id="43a131358d6ac1da94ef787c7c4e6bf36c125b39" translate="yes" xml:space="preserve">
          <source>bool QMutableLinkedListIterator::findNext(const T &amp;amp;</source>
          <target state="translated">bool QMutableLinkedListIterator :: findNext (const T &amp;amp;</target>
        </trans-unit>
        <trans-unit id="95f09b680bdfdf81571c1da4383ca78d0afa1eeb" translate="yes" xml:space="preserve">
          <source>bool QMutableLinkedListIterator::findPrevious(const T &amp;amp;</source>
          <target state="translated">bool QMutableLinkedListIterator :: findPrevious (const T &amp;amp;</target>
        </trans-unit>
        <trans-unit id="f38ff858c9697c531809f4f30c25761c5056c487" translate="yes" xml:space="preserve">
          <source>bool QMutableLinkedListIterator::hasNext() const</source>
          <target state="translated">bool QMutableLinkedListIterator::hasNext()const</target>
        </trans-unit>
        <trans-unit id="fa2d735c791ff2627ecd8f071c53ae660eaea243" translate="yes" xml:space="preserve">
          <source>bool QMutableLinkedListIterator::hasPrevious() const</source>
          <target state="translated">bool QMutableLinkedListIterator::hasPrevious()const</target>
        </trans-unit>
        <trans-unit id="553cde57d7e1624c4d8ba14142854ef6708e6184" translate="yes" xml:space="preserve">
          <source>bool QMutableListIterator::findNext(const T &amp;amp;</source>
          <target state="translated">bool QMutableListIterator :: findNext (const T &amp;amp;</target>
        </trans-unit>
        <trans-unit id="9d0ea94aac2e095a42c7602d9e44a43c7bc8ab91" translate="yes" xml:space="preserve">
          <source>bool QMutableListIterator::findPrevious(const T &amp;amp;</source>
          <target state="translated">bool QMutableListIterator :: findPrevious (const T &amp;amp;</target>
        </trans-unit>
        <trans-unit id="6bbe7e0372c306f8ee52b4ad37219bf0b1001bae" translate="yes" xml:space="preserve">
          <source>bool QMutableListIterator::hasNext() const</source>
          <target state="translated">bool QMutableListIterator::hasNext()const</target>
        </trans-unit>
        <trans-unit id="a4832af2494c22a950de124212ed53c514bd9125" translate="yes" xml:space="preserve">
          <source>bool QMutableListIterator::hasPrevious() const</source>
          <target state="translated">bool QMutableListIterator::hasPrevious()const</target>
        </trans-unit>
        <trans-unit id="80af409c648901d3384d43ecf9055f26110d3d5d" translate="yes" xml:space="preserve">
          <source>bool QMutableMapIterator::findNext(const T &amp;amp;</source>
          <target state="translated">bool QMutableMapIterator :: findNext (const T &amp;amp;</target>
        </trans-unit>
        <trans-unit id="fc5ece783e51253e0138d9792f3eb97be76ea8ac" translate="yes" xml:space="preserve">
          <source>bool QMutableMapIterator::findPrevious(const T &amp;amp;</source>
          <target state="translated">bool QMutableMapIterator :: findPrevious (const T &amp;amp;</target>
        </trans-unit>
        <trans-unit id="c05beb0e720b46ccc642a8cb204a44c6e09257b5" translate="yes" xml:space="preserve">
          <source>bool QMutableMapIterator::hasNext() const</source>
          <target state="translated">bool QMutableMapIterator::hasNext()const</target>
        </trans-unit>
        <trans-unit id="746cf8bcdc460f6c78248b6af029d879fd07103c" translate="yes" xml:space="preserve">
          <source>bool QMutableMapIterator::hasPrevious() const</source>
          <target state="translated">bool QMutableMapIterator::hasPrevious()const</target>
        </trans-unit>
        <trans-unit id="11aa85810c8e0a5d47aafba26bfde2f727a032aa" translate="yes" xml:space="preserve">
          <source>bool QMutableMultiMapIterator::findNext(const T &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90adf79c1065bad03c10e9bc438d44c72230a3c4" translate="yes" xml:space="preserve">
          <source>bool QMutableMultiMapIterator::findPrevious(const T &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3a0ad244719473526df09dcf8ca688ed3915fa5" translate="yes" xml:space="preserve">
          <source>bool QMutableMultiMapIterator::hasNext() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd6cde5d6fbbd84d8517f4666a5c0b781447c2ab" translate="yes" xml:space="preserve">
          <source>bool QMutableMultiMapIterator::hasPrevious() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1c31e0474f701207da2aa5fd6549c919188432c" translate="yes" xml:space="preserve">
          <source>bool QMutableSetIterator::findNext(const T &amp;amp;</source>
          <target state="translated">bool QMutableSetIterator :: findNext (const T &amp;amp;</target>
        </trans-unit>
        <trans-unit id="fc6672c9f014085f5d3b079a30b16547e4f98c52" translate="yes" xml:space="preserve">
          <source>bool QMutableSetIterator::findPrevious(const T &amp;amp;</source>
          <target state="translated">bool QMutableSetIterator :: findPrevious (const T &amp;amp;</target>
        </trans-unit>
        <trans-unit id="2c03823cef1a9b89e382f223a5a0bad5827af2d0" translate="yes" xml:space="preserve">
          <source>bool QMutableSetIterator::hasNext() const</source>
          <target state="translated">bool QMutableSetIterator::hasNext()const</target>
        </trans-unit>
        <trans-unit id="7eb30ad7443ee1c5b3a2aa001d03ec1d53cd88ad" translate="yes" xml:space="preserve">
          <source>bool QMutableSetIterator::hasPrevious() const</source>
          <target state="translated">bool QMutableSetIterator::hasPrevious()const</target>
        </trans-unit>
        <trans-unit id="9e66425c3dc130d326bf16ed67b70211aeffdfee" translate="yes" xml:space="preserve">
          <source>bool QMutableVectorIterator::findNext(const T &amp;amp;</source>
          <target state="translated">bool QMutableVectorIterator :: findNext (const T &amp;amp;</target>
        </trans-unit>
        <trans-unit id="eadea4c3b3197f82362a8dac1f3b3d34c3449831" translate="yes" xml:space="preserve">
          <source>bool QMutableVectorIterator::findPrevious(const T &amp;amp;</source>
          <target state="translated">bool QMutableVectorIterator :: findPrevious (const T &amp;amp;</target>
        </trans-unit>
        <trans-unit id="44f12c647c973ef0a4bbd555df811444b289da1f" translate="yes" xml:space="preserve">
          <source>bool QMutableVectorIterator::hasNext() const</source>
          <target state="translated">bool QMutableVectorIterator::hasNext()const</target>
        </trans-unit>
        <trans-unit id="01d972a3caebe36e8cff5ca9d3af2386d9d750c2" translate="yes" xml:space="preserve">
          <source>bool QMutableVectorIterator::hasPrevious() const</source>
          <target state="translated">bool QMutableVectorIterator::hasPrevious()const</target>
        </trans-unit>
        <trans-unit id="46fbcf325b2c606dba44a9272cc86e8f2b21a7e6" translate="yes" xml:space="preserve">
          <source>bool QMutex::isRecursive() const</source>
          <target state="translated">bool QMutex::isRecursive()const</target>
        </trans-unit>
        <trans-unit id="7a27aa02f7ac6fa24a4743e5d8255ff9813f0f5e" translate="yes" xml:space="preserve">
          <source>bool QMutex::tryLock()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="625c0a40912a9c17c5a1166ebd54f1f7d74214f2" translate="yes" xml:space="preserve">
          <source>bool QMutex::tryLock(int</source>
          <target state="translated">bool QMutex::tryLock(int</target>
        </trans-unit>
        <trans-unit id="640658f62a7515eda02c740d09058b2306bbc7e0" translate="yes" xml:space="preserve">
          <source>bool QMutex::try_lock()</source>
          <target state="translated">bool QMutex::try_lock()</target>
        </trans-unit>
        <trans-unit id="ee1c01ae15c8273959c9864b4648b9846a787faf" translate="yes" xml:space="preserve">
          <source>bool QMutex::try_lock_for(std::chrono::duration&amp;lt;Rep, Period&amp;gt;</source>
          <target state="translated">bool QMutex :: try_lock_for (std :: chrono :: duration &amp;lt;Rep, Period&amp;gt;</target>
        </trans-unit>
        <trans-unit id="e24289a99ecdefb0bd1f6106c3fedf10771c3b5c" translate="yes" xml:space="preserve">
          <source>bool QMutex::try_lock_until(std::chrono::time_point&amp;lt;Clock, Duration&amp;gt;</source>
          <target state="translated">bool QMutex :: try_lock_until (std :: chrono :: time_point &amp;lt;Reloj, Duraci&amp;oacute;n&amp;gt;</target>
        </trans-unit>
        <trans-unit id="ebae17731adfaacc8d0ebb4b5590cd46cd2447ab" translate="yes" xml:space="preserve">
          <source>bool QNdefFilter::orderMatch() const</source>
          <target state="translated">bool QNdefFilter::orderMatch()const</target>
        </trans-unit>
        <trans-unit id="1545fff96d49614a70cd1ca9de51d7fd48513cf3" translate="yes" xml:space="preserve">
          <source>bool QNdefMessage::operator==(const &lt;a href=&quot;qndefmessage#QNdefMessage&quot;&gt;QNdefMessage&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QNdefMessage :: operator == (const &lt;a href=&quot;qndefmessage#QNdefMessage&quot;&gt;QNdefMessage&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="b0a04f40a692d0c79513ac6f4bb5dd40d4fd7d90" translate="yes" xml:space="preserve">
          <source>bool QNdefNfcSmartPosterRecord::addTitle(const &lt;a href=&quot;qndefnfctextrecord&quot;&gt;QNdefNfcTextRecord&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QNdefNfcSmartPosterRecord :: addTitle (const &lt;a href=&quot;qndefnfctextrecord&quot;&gt;QNdefNfcTextRecord&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="58a051770f35723bb65c2afc788dffe8fb07f4a0" translate="yes" xml:space="preserve">
          <source>bool QNdefNfcSmartPosterRecord::addTitle(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QNdefNfcSmartPosterRecord :: addTitle (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="339df7f64c6a5f6cd34ebd281dddefd0118ed4e4" translate="yes" xml:space="preserve">
          <source>bool QNdefNfcSmartPosterRecord::hasAction() const</source>
          <target state="translated">bool QNdefNfcSmartPosterRecord::hasAction()const</target>
        </trans-unit>
        <trans-unit id="adb22f70576d088b4da197927ca0aa72b84ec062" translate="yes" xml:space="preserve">
          <source>bool QNdefNfcSmartPosterRecord::hasIcon(const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QNdefNfcSmartPosterRecord :: hasIcon (const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="66ddc4bb038988b476bb7c69b3a2c4ffc11b5235" translate="yes" xml:space="preserve">
          <source>bool QNdefNfcSmartPosterRecord::hasSize() const</source>
          <target state="translated">bool QNdefNfcSmartPosterRecord::hasSize()const</target>
        </trans-unit>
        <trans-unit id="5eede325f9ba44957bb5c6be74125f26b9331b77" translate="yes" xml:space="preserve">
          <source>bool QNdefNfcSmartPosterRecord::hasTitle(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QNdefNfcSmartPosterRecord :: hasTitle (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="a1d36042b39ede02a44bb29f44d3533ce5a9ffcd" translate="yes" xml:space="preserve">
          <source>bool QNdefNfcSmartPosterRecord::hasTypeInfo() const</source>
          <target state="translated">bool QNdefNfcSmartPosterRecord::hasTypeInfo()const</target>
        </trans-unit>
        <trans-unit id="35ae80eab67e5526a6553a23e4c4778b164b4775" translate="yes" xml:space="preserve">
          <source>bool QNdefNfcSmartPosterRecord::removeIcon(const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QNdefNfcSmartPosterRecord :: removeIcon (const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="900c4bdb29846cba57988c04f3e4ce61611e2c4d" translate="yes" xml:space="preserve">
          <source>bool QNdefNfcSmartPosterRecord::removeIcon(const QNdefNfcIconRecord &amp;amp;</source>
          <target state="translated">bool QNdefNfcSmartPosterRecord :: removeIcon (const QNdefNfcIconRecord &amp;amp;</target>
        </trans-unit>
        <trans-unit id="7d39006c4818e045b6424b50ecdb744db3e2bc3b" translate="yes" xml:space="preserve">
          <source>bool QNdefNfcSmartPosterRecord::removeTitle(const &lt;a href=&quot;qndefnfctextrecord&quot;&gt;QNdefNfcTextRecord&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QNdefNfcSmartPosterRecord :: removeTitle (const &lt;a href=&quot;qndefnfctextrecord&quot;&gt;QNdefNfcTextRecord&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="d8ba45f863695cd075d34af1a62389ab48b96ced" translate="yes" xml:space="preserve">
          <source>bool QNdefNfcSmartPosterRecord::removeTitle(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QNdefNfcSmartPosterRecord :: removeTitle (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="043eeb1b6055bb49b295d5f997ec602b5f7a7ede" translate="yes" xml:space="preserve">
          <source>bool QNdefRecord::isEmpty() const</source>
          <target state="translated">bool QNdefRecord::isEmpty()const</target>
        </trans-unit>
        <trans-unit id="b482dd64a9ef9ef9ae34c4f183c10d8f37052f58" translate="yes" xml:space="preserve">
          <source>bool QNdefRecord::isRecordType() const</source>
          <target state="translated">bool QNdefRecord::isRecordType()const</target>
        </trans-unit>
        <trans-unit id="c115e597f48d5ff07803bbc01145a7209aa41b3f" translate="yes" xml:space="preserve">
          <source>bool QNdefRecord::operator!=(const &lt;a href=&quot;qndefrecord#QNdefRecord&quot;&gt;QNdefRecord&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QNdefRecord :: operator! = (const &lt;a href=&quot;qndefrecord#QNdefRecord&quot;&gt;QNdefRecord&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="c573ba312843c5770de6ef7a47411a30a13354b3" translate="yes" xml:space="preserve">
          <source>bool QNdefRecord::operator==(const &lt;a href=&quot;qndefrecord#QNdefRecord&quot;&gt;QNdefRecord&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QNdefRecord :: operator == (const &lt;a href=&quot;qndefrecord#QNdefRecord&quot;&gt;QNdefRecord&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="c68085c52260f265e26014fd33fbaffed501b3e6" translate="yes" xml:space="preserve">
          <source>bool QNearFieldManager::isAvailable() const</source>
          <target state="translated">bool QNearFieldManager::isAvailable()const</target>
        </trans-unit>
        <trans-unit id="13188e0cbf21e8dfe4476f20bc322eaf43b3c22f" translate="yes" xml:space="preserve">
          <source>bool QNearFieldManager::isSupported() const</source>
          <target state="translated">bool QNearFieldManager::isSupported()const</target>
        </trans-unit>
        <trans-unit id="0b45aa881c8e16db71e4d1311eba5e1dc0effe9d" translate="yes" xml:space="preserve">
          <source>bool QNearFieldManager::startTargetDetection()</source>
          <target state="translated">bool QNearFieldManager::startTargetDetection()</target>
        </trans-unit>
        <trans-unit id="c3e7d48f5ced97ade7b813a80530304794fd09c9" translate="yes" xml:space="preserve">
          <source>bool QNearFieldManager::unregisterNdefMessageHandler(int</source>
          <target state="translated">bool QNearFieldManager::unregisterNdefMessageHandler(int</target>
        </trans-unit>
        <trans-unit id="b2c8dcb9c8cb8686845aa88a38a8f01184a43b83" translate="yes" xml:space="preserve">
          <source>bool QNearFieldShareTarget::isShareInProgress() const</source>
          <target state="translated">bool QNearFieldShareTarget::isShareInProgress()const</target>
        </trans-unit>
        <trans-unit id="a766b866e4b0e1850f7c63bc99d2c02b5e714900" translate="yes" xml:space="preserve">
          <source>bool QNearFieldShareTarget::share(const &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;&lt;a href=&quot;qfileinfo&quot;&gt;QFileInfo&lt;/a&gt;&amp;gt; &amp;amp;</source>
          <target state="translated">bool QNearFieldShareTarget :: share (const &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; &amp;lt; &lt;a href=&quot;qfileinfo&quot;&gt;QFileInfo&lt;/a&gt; &amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="60700f8a86147e59c81d921358e6ad13e3cb758a" translate="yes" xml:space="preserve">
          <source>bool QNearFieldShareTarget::share(const &lt;a href=&quot;qndefmessage&quot;&gt;QNdefMessage&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QNearFieldShareTarget :: share (const &lt;a href=&quot;qndefmessage&quot;&gt;QNdefMessage&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="794492f0a5a89ca558a528dcd9497b356e6cfe42" translate="yes" xml:space="preserve">
          <source>bool QNearFieldTarget::disconnect()</source>
          <target state="translated">bool QNearFieldTarget::disconnect()</target>
        </trans-unit>
        <trans-unit id="e0a7e74201233c100dc7b469aff134ee888f4f9f" translate="yes" xml:space="preserve">
          <source>bool QNearFieldTarget::isProcessingCommand() const</source>
          <target state="translated">bool QNearFieldTarget::isProcessingCommand()const</target>
        </trans-unit>
        <trans-unit id="345a77b9aec8a4d4b141e8233fffd392e4e1d447" translate="yes" xml:space="preserve">
          <source>bool QNearFieldTarget::keepConnection() const</source>
          <target state="translated">bool QNearFieldTarget::keepConnection()const</target>
        </trans-unit>
        <trans-unit id="73c6fcfa780bf65fee0272407edba24f222e6a32" translate="yes" xml:space="preserve">
          <source>bool QNearFieldTarget::setKeepConnection(bool</source>
          <target state="translated">bool QNearFieldTarget::setKeepConnection(bool</target>
        </trans-unit>
        <trans-unit id="cb4caa3ecd40e912246ae0705dd0bf1c39478b05" translate="yes" xml:space="preserve">
          <source>bool QNetworkAccessManager::autoDeleteReplies() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="084e049e096674ea3389e9f34ae724103a49b60f" translate="yes" xml:space="preserve">
          <source>bool QNetworkAccessManager::isStrictTransportSecurityEnabled() const</source>
          <target state="translated">bool QNetworkAccessManager::isStrictTransportSecurityEnabled()const</target>
        </trans-unit>
        <trans-unit id="7c85dba61611817c03b9d69b7ee2a9b512564ece" translate="yes" xml:space="preserve">
          <source>bool QNetworkAccessManager::isStrictTransportSecurityStoreEnabled() const</source>
          <target state="translated">bool QNetworkAccessManager::isStrictTransportSecurityStoreEnabled()const</target>
        </trans-unit>
        <trans-unit id="0647a3fcc4c962a7518ccf029559b5b4d7f61f8c" translate="yes" xml:space="preserve">
          <source>bool QNetworkAddressEntry::isLifetimeKnown() const</source>
          <target state="translated">bool QNetworkAddressEntry::isLifetimeKnown()const</target>
        </trans-unit>
        <trans-unit id="bd8d8fab5cf4f7115e5a1f6dfeec8d6e6ae02dbf" translate="yes" xml:space="preserve">
          <source>bool QNetworkAddressEntry::isPermanent() const</source>
          <target state="translated">bool QNetworkAddressEntry::isPermanent()const</target>
        </trans-unit>
        <trans-unit id="8437eca5db8d78c9d12fb3118efb9ff2955cb6fd" translate="yes" xml:space="preserve">
          <source>bool QNetworkAddressEntry::isTemporary() const</source>
          <target state="translated">bool QNetworkAddressEntry::isTemporary()const</target>
        </trans-unit>
        <trans-unit id="37cb469b59ccd56faf2b89280960280697e29985" translate="yes" xml:space="preserve">
          <source>bool QNetworkAddressEntry::operator!=(const &lt;a href=&quot;qnetworkaddressentry#QNetworkAddressEntry&quot;&gt;QNetworkAddressEntry&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QNetworkAddressEntry :: operator! = (const &lt;a href=&quot;qnetworkaddressentry#QNetworkAddressEntry&quot;&gt;QNetworkAddressEntry&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="f8ac87f83648be6f4aedf86c82a0e196f0ad5117" translate="yes" xml:space="preserve">
          <source>bool QNetworkAddressEntry::operator==(const &lt;a href=&quot;qnetworkaddressentry#QNetworkAddressEntry&quot;&gt;QNetworkAddressEntry&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QNetworkAddressEntry :: operator == (const &lt;a href=&quot;qnetworkaddressentry#QNetworkAddressEntry&quot;&gt;QNetworkAddressEntry&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="c4ece806c78e7bda900b7f39c8f8192b679265df" translate="yes" xml:space="preserve">
          <source>bool QNetworkCacheMetaData::isValid() const</source>
          <target state="translated">bool QNetworkCacheMetaData::isValid()const</target>
        </trans-unit>
        <trans-unit id="4927e027f4508522c331f807a6c369536d7e375e" translate="yes" xml:space="preserve">
          <source>bool QNetworkCacheMetaData::operator!=(const &lt;a href=&quot;qnetworkcachemetadata#QNetworkCacheMetaData&quot;&gt;QNetworkCacheMetaData&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QNetworkCacheMetaData :: operator! = (const &lt;a href=&quot;qnetworkcachemetadata#QNetworkCacheMetaData&quot;&gt;QNetworkCacheMetaData&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="bfdabb6f2e611a16643a6e0bc5fb4b7ecac944d3" translate="yes" xml:space="preserve">
          <source>bool QNetworkCacheMetaData::operator==(const &lt;a href=&quot;qnetworkcachemetadata#QNetworkCacheMetaData&quot;&gt;QNetworkCacheMetaData&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QNetworkCacheMetaData :: operator == (const &lt;a href=&quot;qnetworkcachemetadata#QNetworkCacheMetaData&quot;&gt;QNetworkCacheMetaData&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="1b93c804727e09be1c763b0c98ee7a8705718cfd" translate="yes" xml:space="preserve">
          <source>bool QNetworkCacheMetaData::saveToDisk() const</source>
          <target state="translated">bool QNetworkCacheMetaData::saveToDisk()const</target>
        </trans-unit>
        <trans-unit id="58f6cdb85a2ac8c4e85cdb7a341114b6bb2f4b9a" translate="yes" xml:space="preserve">
          <source>bool QNetworkConfiguration::isRoamingAvailable() const</source>
          <target state="translated">bool QNetworkConfiguration::isRoamingAvailable()const</target>
        </trans-unit>
        <trans-unit id="9b38f5882b6a31f4ef0a13b277336c1de9eea453" translate="yes" xml:space="preserve">
          <source>bool QNetworkConfiguration::isValid() const</source>
          <target state="translated">bool QNetworkConfiguración::isValid()const</target>
        </trans-unit>
        <trans-unit id="eb1ad33f04ae9e6bc48455032fd6d1fd354f626d" translate="yes" xml:space="preserve">
          <source>bool QNetworkConfiguration::operator!=(const &lt;a href=&quot;qnetworkconfiguration#QNetworkConfiguration&quot;&gt;QNetworkConfiguration&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QNetworkConfiguration :: operator! = (const &lt;a href=&quot;qnetworkconfiguration#QNetworkConfiguration&quot;&gt;QNetworkConfiguration&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="976b92dd069600434c553a5773a01bf2e2b19fda" translate="yes" xml:space="preserve">
          <source>bool QNetworkConfiguration::operator==(const &lt;a href=&quot;qnetworkconfiguration#QNetworkConfiguration&quot;&gt;QNetworkConfiguration&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QNetworkConfiguration :: operator == (const &lt;a href=&quot;qnetworkconfiguration#QNetworkConfiguration&quot;&gt;QNetworkConfiguration&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="e8ffd3c39f2721af336269c8fe59662571a050e4" translate="yes" xml:space="preserve">
          <source>bool QNetworkConfiguration::setConnectTimeout(int</source>
          <target state="translated">bool QNetworkConfiguration::setConnectTimeout(int</target>
        </trans-unit>
        <trans-unit id="b22f351c1ffcaf8eda0e38d98ece14ace833e6ac" translate="yes" xml:space="preserve">
          <source>bool QNetworkConfigurationManager::isOnline() const</source>
          <target state="translated">bool QNetworkConfigurationManager::isOnline()const</target>
        </trans-unit>
        <trans-unit id="01b1e56fac6d99ff97f91d6dc313c97feddca308" translate="yes" xml:space="preserve">
          <source>bool QNetworkCookie::hasSameIdentifier(const &lt;a href=&quot;qnetworkcookie#QNetworkCookie&quot;&gt;QNetworkCookie&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QNetworkCookie :: hasSameIdentifier (const &lt;a href=&quot;qnetworkcookie#QNetworkCookie&quot;&gt;QNetworkCookie&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="cd4b87b3aa916315f8f11b157c1b9e8cf5c50de2" translate="yes" xml:space="preserve">
          <source>bool QNetworkCookie::isHttpOnly() const</source>
          <target state="translated">bool QNetworkCookie::isHttpOnly()const</target>
        </trans-unit>
        <trans-unit id="c93440f028aa7ead13ac6753bdcfee5e71de7494" translate="yes" xml:space="preserve">
          <source>bool QNetworkCookie::isSecure() const</source>
          <target state="translated">bool QNetworkCookie::isSecure()const</target>
        </trans-unit>
        <trans-unit id="caf8bf7f44a5aeae7fd23134fa58978c65ea8646" translate="yes" xml:space="preserve">
          <source>bool QNetworkCookie::isSessionCookie() const</source>
          <target state="translated">bool QNetworkCookie::isSessionCookie()const</target>
        </trans-unit>
        <trans-unit id="8f78bf94898edc947af4241d6e03d5d859e163ff" translate="yes" xml:space="preserve">
          <source>bool QNetworkCookie::operator!=(const &lt;a href=&quot;qnetworkcookie#QNetworkCookie&quot;&gt;QNetworkCookie&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QNetworkCookie :: operator! = (const &lt;a href=&quot;qnetworkcookie#QNetworkCookie&quot;&gt;QNetworkCookie&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="89574d814de13e52ef40df76bd527205c4f13543" translate="yes" xml:space="preserve">
          <source>bool QNetworkCookie::operator==(const &lt;a href=&quot;qnetworkcookie#QNetworkCookie&quot;&gt;QNetworkCookie&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QNetworkCookie :: operator == (const &lt;a href=&quot;qnetworkcookie#QNetworkCookie&quot;&gt;QNetworkCookie&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="1420b722b0a2d01ff0b41bfa76e66b1a2b20083e" translate="yes" xml:space="preserve">
          <source>bool QNetworkDatagram::isNull() const</source>
          <target state="translated">bool QNetworkDatagrama::isNull()const</target>
        </trans-unit>
        <trans-unit id="1779e105b80bc88d572957726ada87a1c377a039" translate="yes" xml:space="preserve">
          <source>bool QNetworkDatagram::isValid() const</source>
          <target state="translated">bool QNetworkDatagrama::isValid()const</target>
        </trans-unit>
        <trans-unit id="0f37fbb6472adee5c8b961e36bddfdf32ce8e9f9" translate="yes" xml:space="preserve">
          <source>bool QNetworkInterface::isValid() const</source>
          <target state="translated">bool QNetworkInterface::isValid()const</target>
        </trans-unit>
        <trans-unit id="564acd1c18a52b00c1f29e812e795d91819b9395" translate="yes" xml:space="preserve">
          <source>bool QNetworkProxy::hasRawHeader(const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QNetworkProxy :: hasRawHeader (const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="f27f938511ddf38af0041b9aa6cb71a1097238f8" translate="yes" xml:space="preserve">
          <source>bool QNetworkProxy::isCachingProxy() const</source>
          <target state="translated">bool QNetworkProxy::isCachingProxy()const</target>
        </trans-unit>
        <trans-unit id="04484d850253c3a44d24a076e9022f2c663c28dc" translate="yes" xml:space="preserve">
          <source>bool QNetworkProxy::isTransparentProxy() const</source>
          <target state="translated">bool QNetworkProxy::isTransparentProxy()const</target>
        </trans-unit>
        <trans-unit id="957c83c44dc2146b260f5eaafe2f3277da52b73d" translate="yes" xml:space="preserve">
          <source>bool QNetworkProxy::operator!=(const &lt;a href=&quot;qnetworkproxy#QNetworkProxy&quot;&gt;QNetworkProxy&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QNetworkProxy :: operator! = (const &lt;a href=&quot;qnetworkproxy#QNetworkProxy&quot;&gt;QNetworkProxy&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="88a39beeb1b6604c4269d1a9a82de5effff7af0e" translate="yes" xml:space="preserve">
          <source>bool QNetworkProxy::operator==(const &lt;a href=&quot;qnetworkproxy#QNetworkProxy&quot;&gt;QNetworkProxy&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QNetworkProxy :: operator == (const &lt;a href=&quot;qnetworkproxy#QNetworkProxy&quot;&gt;QNetworkProxy&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="7ea2847aa1557547d8d170e807f7cb379db8a29f" translate="yes" xml:space="preserve">
          <source>bool QNetworkProxyQuery::operator!=(const &lt;a href=&quot;qnetworkproxyquery#QNetworkProxyQuery&quot;&gt;QNetworkProxyQuery&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QNetworkProxyQuery :: operator! = (const &lt;a href=&quot;qnetworkproxyquery#QNetworkProxyQuery&quot;&gt;QNetworkProxyQuery&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="9fd13a3dbbd44961cedc341a7ad352f9562ad438" translate="yes" xml:space="preserve">
          <source>bool QNetworkProxyQuery::operator==(const &lt;a href=&quot;qnetworkproxyquery#QNetworkProxyQuery&quot;&gt;QNetworkProxyQuery&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QNetworkProxyQuery :: operator == (const &lt;a href=&quot;qnetworkproxyquery#QNetworkProxyQuery&quot;&gt;QNetworkProxyQuery&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="ee72b4b3e18a3936169db55a03be8b1fd0a7b0fb" translate="yes" xml:space="preserve">
          <source>bool QNetworkReply::hasRawHeader(const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QNetworkReply :: hasRawHeader (const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="4676422e214940b3dfeb8883f24ae9280539486e" translate="yes" xml:space="preserve">
          <source>bool QNetworkReply::isFinished() const</source>
          <target state="translated">bool QNetworkReply::isFinished()const</target>
        </trans-unit>
        <trans-unit id="a0a28b4043ac80de2d077c1c6625466d5d89a153" translate="yes" xml:space="preserve">
          <source>bool QNetworkReply::isRunning() const</source>
          <target state="translated">bool QNetworkReply::isRunning()const</target>
        </trans-unit>
        <trans-unit id="3ced8f5a08acc83744158ea3cba1c4116a788309" translate="yes" xml:space="preserve">
          <source>bool QNetworkRequest::hasRawHeader(const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QNetworkRequest :: hasRawHeader (const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="2ffc422eaed07f8781f8383df014d1ddb4addab4" translate="yes" xml:space="preserve">
          <source>bool QNetworkRequest::operator!=(const &lt;a href=&quot;qnetworkrequest#QNetworkRequest&quot;&gt;QNetworkRequest&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QNetworkRequest :: operator! = (const &lt;a href=&quot;qnetworkrequest#QNetworkRequest&quot;&gt;QNetworkRequest&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="b6fcf654bda0f55c4dcafa2c3084aef7e276cd5d" translate="yes" xml:space="preserve">
          <source>bool QNetworkRequest::operator==(const &lt;a href=&quot;qnetworkrequest#QNetworkRequest&quot;&gt;QNetworkRequest&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QNetworkRequest :: operator == (const &lt;a href=&quot;qnetworkrequest#QNetworkRequest&quot;&gt;QNetworkRequest&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="7a958a63c429681a91fe55af5b64e62f8d5b903b" translate="yes" xml:space="preserve">
          <source>bool QNetworkSession::isOpen() const</source>
          <target state="translated">bool QNetworkSession::isOpen()const</target>
        </trans-unit>
        <trans-unit id="c617dd158e150e218f51727ac0fc4258868288f8" translate="yes" xml:space="preserve">
          <source>bool QNetworkSession::waitForOpened(int</source>
          <target state="translated">bool QNetworkSession::waitForOpened(int</target>
        </trans-unit>
        <trans-unit id="fa6e7ce602d2ddbfd853e0568b556529af2dbc59" translate="yes" xml:space="preserve">
          <source>bool QNode::blockNotifications(bool</source>
          <target state="translated">bool QNode::blockNotificaciones(bool</target>
        </trans-unit>
        <trans-unit id="e04676e72f517901c7018d2e6946f0b8aa2be0fb" translate="yes" xml:space="preserve">
          <source>bool QNode::notificationsBlocked() const</source>
          <target state="translated">bool QNode::notificationsBlocked()const</target>
        </trans-unit>
        <trans-unit id="437b80c913d04ee310133e4d097e5ed2f10c3413" translate="yes" xml:space="preserve">
          <source>bool QNodeCreatedChangeBase::isNodeEnabled() const</source>
          <target state="translated">bool QNodeCreatedChangeBase::isNodeEnabled()const</target>
        </trans-unit>
        <trans-unit id="eb4adaf7401668022637cd93378587f176a0a53d" translate="yes" xml:space="preserve">
          <source>bool QNodeId::isNull() const</source>
          <target state="translated">bool QNodeId::isNull()const</target>
        </trans-unit>
        <trans-unit id="e1043349874b9bc3c933aa5b9ec8c6c13a26978b" translate="yes" xml:space="preserve">
          <source>bool QNodeId::operator bool() const</source>
          <target state="translated">bool QNodeId::operador bool()const</target>
        </trans-unit>
        <trans-unit id="8a339b1eed3cbcfe0e91f5b6956927069ff9fdae" translate="yes" xml:space="preserve">
          <source>bool QNodeId::operator!=(&lt;a href=&quot;qt3dcore-qnodeid&quot;&gt;Qt3DCore::QNodeId&lt;/a&gt;</source>
          <target state="translated">bool QNodeId :: operador! = ( &lt;a href=&quot;qt3dcore-qnodeid&quot;&gt;Qt3DCore :: QNodeId&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c3d5a827dcf1b1bc95a0889be4a13c78456b5685" translate="yes" xml:space="preserve">
          <source>bool QNodeId::operator&amp;gt;(&lt;a href=&quot;qt3dcore-qnodeid&quot;&gt;Qt3DCore::QNodeId&lt;/a&gt;</source>
          <target state="translated">bool QNodeId :: operador&amp;gt; ( &lt;a href=&quot;qt3dcore-qnodeid&quot;&gt;Qt3DCore :: QNodeId&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="462c9911aabcb1af11a78b597fa439ab148a3464" translate="yes" xml:space="preserve">
          <source>bool QNodeId::operator&amp;lt;(&lt;a href=&quot;qt3dcore-qnodeid&quot;&gt;Qt3DCore::QNodeId&lt;/a&gt;</source>
          <target state="translated">bool QNodeId :: operador &amp;lt;( &lt;a href=&quot;qt3dcore-qnodeid&quot;&gt;Qt3DCore :: QNodeId&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bbdd428ece119c1ad1626ae0d3e4fc6e449e57dc" translate="yes" xml:space="preserve">
          <source>bool QNodeId::operator==(&lt;a href=&quot;qt3dcore-qnodeid&quot;&gt;Qt3DCore::QNodeId&lt;/a&gt;</source>
          <target state="translated">bool QNodeId :: operador == ( &lt;a href=&quot;qt3dcore-qnodeid&quot;&gt;Qt3DCore :: QNodeId&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b1875d55e56b574cfdcbca2e8bc672f3588f9393" translate="yes" xml:space="preserve">
          <source>bool QObject::blockSignals(bool</source>
          <target state="translated">bool QObjecto::blockSignals(bool</target>
        </trans-unit>
        <trans-unit id="b9d9a44684fbec3d8abd6d5671645f58315bf025" translate="yes" xml:space="preserve">
          <source>bool QObject::disconnect(const &lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="translated">bool QObject :: desconectar (const &lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="67abc469bb5e9a69b4f7ea9d5a1464820c7c94e6" translate="yes" xml:space="preserve">
          <source>bool QObject::disconnect(const char *</source>
          <target state="translated">bool QObjeto::desconectar(const char *)</target>
        </trans-unit>
        <trans-unit id="dfd9bb2de9c255d929e90cc283387b3de7a42ba1" translate="yes" xml:space="preserve">
          <source>bool QObject::inherits(const char *</source>
          <target state="translated">bool QObjeto::hereda(const char *)</target>
        </trans-unit>
        <trans-unit id="0a200198adc73ae6fe8ed7f7a5065dc63cabac41" translate="yes" xml:space="preserve">
          <source>bool QObject::isWidgetType() const</source>
          <target state="translated">bool QObjecto::isWidgetType()const</target>
        </trans-unit>
        <trans-unit id="ad6732c2dab618b734c6176cea56c88a62bba583" translate="yes" xml:space="preserve">
          <source>bool QObject::isWindowType() const</source>
          <target state="translated">bool QObjecto::isWindowType()const</target>
        </trans-unit>
        <trans-unit id="f833d0d77f3a8a32e4a33cc4aa1462ceb8ceb0f7" translate="yes" xml:space="preserve">
          <source>bool QObject::setProperty(const char *</source>
          <target state="translated">bool QObjecto::setPropiedad(const char *)</target>
        </trans-unit>
        <trans-unit id="11f8c1663d0a049a6ba7be1fe96eeeb857cde1f8" translate="yes" xml:space="preserve">
          <source>bool QObject::signalsBlocked() const</source>
          <target state="translated">bool QObjeto::señalesBloqueado()const</target>
        </trans-unit>
        <trans-unit id="a83f3491b6c5f8f487aa2e6a7b7dadf5d9040be3" translate="yes" xml:space="preserve">
          <source>bool QObjectBindableProperty::hasBinding() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e8d4d008c295e13dc4a40033de0f81a52c56845" translate="yes" xml:space="preserve">
          <source>bool QObjectBindableProperty::setBinding(const QUntypedPropertyBinding &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea9b0f2b6ab17dad3a708fd17c40960dca16dae6" translate="yes" xml:space="preserve">
          <source>bool QObjectCleanupHandler::isEmpty() const</source>
          <target state="translated">bool QObjectCleanupHandler::isEmpty()const</target>
        </trans-unit>
        <trans-unit id="80d519d9873e2dc10d4c1ef21ca6afd41937f1d6" translate="yes" xml:space="preserve">
          <source>bool QObjectPicker::containsMouse() const</source>
          <target state="translated">bool QObjectPicker::contieneMouse()const</target>
        </trans-unit>
        <trans-unit id="8766cbf8be6755b701df2829f4a446500c30d2b8" translate="yes" xml:space="preserve">
          <source>bool QObjectPicker::isDragEnabled() const</source>
          <target state="translated">bool QObjectPicker::isDragEnabled()const</target>
        </trans-unit>
        <trans-unit id="cc95666dfc1f534723fb3734974d6039270a42a5" translate="yes" xml:space="preserve">
          <source>bool QObjectPicker::isHoverEnabled() const</source>
          <target state="translated">bool QObjectPicker::isHoverEnabled()const</target>
        </trans-unit>
        <trans-unit id="855ca6424fb3092ead978e8da613184182a0ce09" translate="yes" xml:space="preserve">
          <source>bool QOcspResponse::operator!=(const &lt;a href=&quot;qocspresponse#QOcspResponse&quot;&gt;QOcspResponse&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QOcspResponse :: operator! = (const &lt;a href=&quot;qocspresponse#QOcspResponse&quot;&gt;QOcspResponse&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="d6fb62597455ef1be3fb94a985bc9e976bea008f" translate="yes" xml:space="preserve">
          <source>bool QOcspResponse::operator==(const &lt;a href=&quot;qocspresponse#QOcspResponse&quot;&gt;QOcspResponse&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QOcspResponse :: operator == (const &lt;a href=&quot;qocspresponse#QOcspResponse&quot;&gt;QOcspResponse&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="cc0e301697cd297ecb69152b6ada13ff02244473" translate="yes" xml:space="preserve">
          <source>bool QOffscreenSurface::isValid() const</source>
          <target state="translated">bool QOffscreenSurface::isValid()const</target>
        </trans-unit>
        <trans-unit id="750c6d9a25255ffe6071016053d07e4f2a838a51" translate="yes" xml:space="preserve">
          <source>bool QOpenGLBuffer::bind()</source>
          <target state="translated">bool QOpenGLBuffer::bind()</target>
        </trans-unit>
        <trans-unit id="cbce6d1fbf4baadc0895a46ff5476544ce95e819" translate="yes" xml:space="preserve">
          <source>bool QOpenGLBuffer::create()</source>
          <target state="translated">bool QOpenGLBuffer::create()</target>
        </trans-unit>
        <trans-unit id="99873160c07b7f9ac8f0c44ae41814d0bb5b7957" translate="yes" xml:space="preserve">
          <source>bool QOpenGLBuffer::isCreated() const</source>
          <target state="translated">bool QOpenGLBuffer::isCreated()const</target>
        </trans-unit>
        <trans-unit id="ac1a51e590e5e2aad813dd74e20d60264d65cadc" translate="yes" xml:space="preserve">
          <source>bool QOpenGLBuffer::read(int</source>
          <target state="translated">bool QOpenGLBuffer::read(int</target>
        </trans-unit>
        <trans-unit id="d6723182f4a54efc455a3526f3c1b5cf7870d0ba" translate="yes" xml:space="preserve">
          <source>bool QOpenGLBuffer::unmap()</source>
          <target state="translated">bool QOpenGLBuffer::unmap()</target>
        </trans-unit>
        <trans-unit id="ba8eaf8a33db7f5a237035eb1a4f05a3d5bea05c" translate="yes" xml:space="preserve">
          <source>bool QOpenGLContext::create()</source>
          <target state="translated">bool QOpenGLContext::create()</target>
        </trans-unit>
        <trans-unit id="4bddb54d5e9d1f408e2346c3c5183a311ef37104" translate="yes" xml:space="preserve">
          <source>bool QOpenGLContext::hasExtension(const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QOpenGLContext :: hasExtension (const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="4302fed2fd98bf6a2f183df4a7e4972ead1f1c81" translate="yes" xml:space="preserve">
          <source>bool QOpenGLContext::isOpenGLES() const</source>
          <target state="translated">bool QOpenGLContext::isOpenGLES()const</target>
        </trans-unit>
        <trans-unit id="248f580a040f7bf9611dc79bc2afa04c4555e969" translate="yes" xml:space="preserve">
          <source>bool QOpenGLContext::isValid() const</source>
          <target state="translated">bool QOpenGLContext::isValid()const</target>
        </trans-unit>
        <trans-unit id="f9c0bdd44f49e6eef8983eed1430f5977309c7b1" translate="yes" xml:space="preserve">
          <source>bool QOpenGLContext::makeCurrent(&lt;a href=&quot;qsurface&quot;&gt;QSurface&lt;/a&gt; *</source>
          <target state="translated">bool QOpenGLContext :: makeCurrent ( &lt;a href=&quot;qsurface&quot;&gt;QSurface&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="fbcd3429a294d0ceb04a7b83407060a67515f30d" translate="yes" xml:space="preserve">
          <source>bool QOpenGLDebugLogger::initialize()</source>
          <target state="translated">bool QOpenGLDebugLogger::initialize()</target>
        </trans-unit>
        <trans-unit id="12d687de7be420421a50f8af2bb18a36e6ad5c02" translate="yes" xml:space="preserve">
          <source>bool QOpenGLDebugLogger::isLogging() const</source>
          <target state="translated">bool QOpenGLDebugLogger::isLogging()const</target>
        </trans-unit>
        <trans-unit id="5a3880ebd3ce5b3fd189d040aeb8d80614785977" translate="yes" xml:space="preserve">
          <source>bool QOpenGLDebugMessage::operator!=(const &lt;a href=&quot;qopengldebugmessage#QOpenGLDebugMessage&quot;&gt;QOpenGLDebugMessage&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QOpenGLDebugMessage :: operator! = (const &lt;a href=&quot;qopengldebugmessage#QOpenGLDebugMessage&quot;&gt;QOpenGLDebugMessage&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="1923362ad5a5d15a69231111eeb1bb370e121681" translate="yes" xml:space="preserve">
          <source>bool QOpenGLDebugMessage::operator==(const &lt;a href=&quot;qopengldebugmessage#QOpenGLDebugMessage&quot;&gt;QOpenGLDebugMessage&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QOpenGLDebugMessage :: operator == (const &lt;a href=&quot;qopengldebugmessage#QOpenGLDebugMessage&quot;&gt;QOpenGLDebugMessage&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="24fb43ad129ec5afba4001179f990e8cbff21064" translate="yes" xml:space="preserve">
          <source>bool QOpenGLFramebufferObject::bind()</source>
          <target state="translated">Bole QOpenGLBuffer de marcoObjeto::bind()</target>
        </trans-unit>
        <trans-unit id="65e6e79b7926c29a7b523f2372e5a7a8cee7dc1e" translate="yes" xml:space="preserve">
          <source>bool QOpenGLFramebufferObject::isBound() const</source>
          <target state="translated">bool QOpenGLFramebufferObjeto::isBound()const</target>
        </trans-unit>
        <trans-unit id="6cdae4d40bb5ab7d2ce5db5f3eba614ef9ee5b61" translate="yes" xml:space="preserve">
          <source>bool QOpenGLFramebufferObject::isValid() const</source>
          <target state="translated">bool QOpenGLFramebufferObjeto::isValid()const</target>
        </trans-unit>
        <trans-unit id="51d59f42c70f8b7de3020daa7e0028522bdf4f4c" translate="yes" xml:space="preserve">
          <source>bool QOpenGLFramebufferObject::release()</source>
          <target state="translated">bool QOpenGLFramebufferObjeto::release()</target>
        </trans-unit>
        <trans-unit id="0ea7b1150ac5a4e2e3f94f7dce3f072711509a5d" translate="yes" xml:space="preserve">
          <source>bool QOpenGLFramebufferObjectFormat::mipmap() const</source>
          <target state="translated">bool QOpenGLFramebufferObjectFormat::mipmap()const</target>
        </trans-unit>
        <trans-unit id="d2903893a67d7b5e31db1d79d1943fbb2e534a1a" translate="yes" xml:space="preserve">
          <source>bool QOpenGLFramebufferObjectFormat::operator!=(const &lt;a href=&quot;qopenglframebufferobjectformat#QOpenGLFramebufferObjectFormat&quot;&gt;QOpenGLFramebufferObjectFormat&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QOpenGLFramebufferObjectFormat :: operator! = (const &lt;a href=&quot;qopenglframebufferobjectformat#QOpenGLFramebufferObjectFormat&quot;&gt;QOpenGLFramebufferObjectFormat&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="3b05fbba5935a1f7f9130693987e8f2f79337b9a" translate="yes" xml:space="preserve">
          <source>bool QOpenGLFramebufferObjectFormat::operator==(const &lt;a href=&quot;qopenglframebufferobjectformat#QOpenGLFramebufferObjectFormat&quot;&gt;QOpenGLFramebufferObjectFormat&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QOpenGLFramebufferObjectFormat :: operator == (const &lt;a href=&quot;qopenglframebufferobjectformat#QOpenGLFramebufferObjectFormat&quot;&gt;QOpenGLFramebufferObjectFormat&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="4922aa8c2317608404e6c794e38cb03e5afa3acb" translate="yes" xml:space="preserve">
          <source>bool QOpenGLPaintDevice::paintFlipped() const</source>
          <target state="translated">bool QOpenGLPaintDevice::paintFlipped()const</target>
        </trans-unit>
        <trans-unit id="2ce6a30313d71b1a4c9b0cf17b1a4a581b59cdde" translate="yes" xml:space="preserve">
          <source>bool QOpenGLPixelTransferOptions::isLeastSignificantBitFirst() const</source>
          <target state="translated">bool QOpenGLPixelTransferOptions::is LeastSignificantBitFirst()const</target>
        </trans-unit>
        <trans-unit id="3c099a0cb2a8d9f9cbf21564deabd37953025789" translate="yes" xml:space="preserve">
          <source>bool QOpenGLPixelTransferOptions::isSwapBytesEnabled() const</source>
          <target state="translated">bool QOpenGLPixelTransferOptions::isSwapBytesEnabled()const</target>
        </trans-unit>
        <trans-unit id="966db6daf895fedb0a0b1bfa1e4663ef57348548" translate="yes" xml:space="preserve">
          <source>bool QOpenGLShader::compileSourceCode(const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QOpenGLShader :: compileSourceCode (const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="43b8c31f6f0fb201f8a5fbcd33f38f31d144c7c0" translate="yes" xml:space="preserve">
          <source>bool QOpenGLShader::compileSourceCode(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QOpenGLShader :: compileSourceCode (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="13e8b5cb7b5f3ca12b7ff2c8d5676cd6cb268d40" translate="yes" xml:space="preserve">
          <source>bool QOpenGLShader::compileSourceCode(const char *</source>
          <target state="translated">bool QOpenGLShader::compileSourceCode(const char *</target>
        </trans-unit>
        <trans-unit id="68d31f786ebaa89624ca601c7e6fab05009f9770" translate="yes" xml:space="preserve">
          <source>bool QOpenGLShader::compileSourceFile(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QOpenGLShader :: compileSourceFile (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="3c6bded94d143441a10e01c7b589eb578ab0e9d2" translate="yes" xml:space="preserve">
          <source>bool QOpenGLShader::isCompiled() const</source>
          <target state="translated">bool QOpenGLShader::isCompiled()const</target>
        </trans-unit>
        <trans-unit id="218316f45d17fb72651e796f8ecc5952f52c0b95" translate="yes" xml:space="preserve">
          <source>bool QOpenGLShaderProgram::addCacheableShaderFromSourceCode(&lt;a href=&quot;qopenglshader#ShaderTypeBit-enum&quot;&gt;QOpenGLShader::ShaderType&lt;/a&gt;</source>
          <target state="translated">bool QOpenGLShaderProgram :: addCacheableShaderFromSourceCode ( &lt;a href=&quot;qopenglshader#ShaderTypeBit-enum&quot;&gt;QOpenGLShader :: ShaderType&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d218e5c96b0126a5ca1297ee86af0053ec38cb7e" translate="yes" xml:space="preserve">
          <source>bool QOpenGLShaderProgram::addCacheableShaderFromSourceFile(&lt;a href=&quot;qopenglshader#ShaderTypeBit-enum&quot;&gt;QOpenGLShader::ShaderType&lt;/a&gt;</source>
          <target state="translated">bool QOpenGLShaderProgram :: addCacheableShaderFromSourceFile ( &lt;a href=&quot;qopenglshader#ShaderTypeBit-enum&quot;&gt;QOpenGLShader :: ShaderType&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="15ddd1d70cf2e9629c91d6e519eac4fe3b63cc45" translate="yes" xml:space="preserve">
          <source>bool QOpenGLShaderProgram::addShader(&lt;a href=&quot;qopenglshader&quot;&gt;QOpenGLShader&lt;/a&gt; *</source>
          <target state="translated">bool QOpenGLShaderProgram :: addShader ( &lt;a href=&quot;qopenglshader&quot;&gt;QOpenGLShader&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="f5c14e710da641f2db849b44a03f3ab928fadecc" translate="yes" xml:space="preserve">
          <source>bool QOpenGLShaderProgram::addShaderFromSourceCode(&lt;a href=&quot;qopenglshader#ShaderTypeBit-enum&quot;&gt;QOpenGLShader::ShaderType&lt;/a&gt;</source>
          <target state="translated">bool QOpenGLShaderProgram :: addShaderFromSourceCode ( &lt;a href=&quot;qopenglshader#ShaderTypeBit-enum&quot;&gt;QOpenGLShader :: ShaderType&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="aed3ac811fb04bd49a6f0647117939d883bcf466" translate="yes" xml:space="preserve">
          <source>bool QOpenGLShaderProgram::addShaderFromSourceFile(&lt;a href=&quot;qopenglshader#ShaderTypeBit-enum&quot;&gt;QOpenGLShader::ShaderType&lt;/a&gt;</source>
          <target state="translated">bool QOpenGLShaderProgram :: addShaderFromSourceFile ( &lt;a href=&quot;qopenglshader#ShaderTypeBit-enum&quot;&gt;QOpenGLShader :: ShaderType&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8308a21704110292f2f433820b67aef936fe36c8" translate="yes" xml:space="preserve">
          <source>bool QOpenGLShaderProgram::bind()</source>
          <target state="translated">bool QOpenGLShaderProgram::bind()</target>
        </trans-unit>
        <trans-unit id="5e7682ff027593334220ae9ffa120989224c4a19" translate="yes" xml:space="preserve">
          <source>bool QOpenGLShaderProgram::create()</source>
          <target state="translated">bool QOpenGLShaderProgram::create()</target>
        </trans-unit>
        <trans-unit id="3a85d1372efc9fcd521909a7148a29391f0ee4ac" translate="yes" xml:space="preserve">
          <source>bool QOpenGLShaderProgram::isLinked() const</source>
          <target state="translated">bool QOpenGLShaderProgram::isLinked()const</target>
        </trans-unit>
        <trans-unit id="c27d7d2be963bb37ccad2cf141bed72f1b9402a1" translate="yes" xml:space="preserve">
          <source>bool QOpenGLTexture::create()</source>
          <target state="translated">bool QOpenGLTexture::create()</target>
        </trans-unit>
        <trans-unit id="226cc34375415eb0b6c591fdbadbe2efba216b51" translate="yes" xml:space="preserve">
          <source>bool QOpenGLTexture::isAutoMipMapGenerationEnabled() const</source>
          <target state="translated">bool QOpenGLTexture::isAutoMipMapGenerationEnabled()const</target>
        </trans-unit>
        <trans-unit id="e2ec02a2d8233725ac75d710ecb6f5be257d4a5a" translate="yes" xml:space="preserve">
          <source>bool QOpenGLTexture::isBound() const</source>
          <target state="translated">bool QOpenGLTexture::isBound()const</target>
        </trans-unit>
        <trans-unit id="040ed254ec1ef268f318017217a97eccb1bb0155" translate="yes" xml:space="preserve">
          <source>bool QOpenGLTexture::isBound(&lt;a href=&quot;#uint-typedef&quot;&gt;uint&lt;/a&gt;</source>
          <target state="translated">bool QOpenGLTexture :: isBound ( &lt;a href=&quot;#uint-typedef&quot;&gt;uint&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e92cc6afc4eba61c22d2f4e103c6ff0781d2412c" translate="yes" xml:space="preserve">
          <source>bool QOpenGLTexture::isBound(&lt;a href=&quot;qtglobal#uint-typedef&quot;&gt;uint&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95cb68d725ac0e17e3adee112055460eb491973d" translate="yes" xml:space="preserve">
          <source>bool QOpenGLTexture::isCreated() const</source>
          <target state="translated">bool QOpenGLTexture::isCreated()const</target>
        </trans-unit>
        <trans-unit id="6b2f18b33609a7c0b9c242af3841c213bd8a4f4e" translate="yes" xml:space="preserve">
          <source>bool QOpenGLTexture::isFixedSamplePositions() const</source>
          <target state="translated">bool QOpenGLTexture::isFixedSamplePositions()const</target>
        </trans-unit>
        <trans-unit id="4d1d8a1ec31f88d08ca74d7c023db38801f59298" translate="yes" xml:space="preserve">
          <source>bool QOpenGLTexture::isStorageAllocated() const</source>
          <target state="translated">bool QOpenGLTexture::isStorageAllocated()const</target>
        </trans-unit>
        <trans-unit id="8cef500f492074905cec0edf33a1954ceabef308" translate="yes" xml:space="preserve">
          <source>bool QOpenGLTexture::isTextureView() const</source>
          <target state="translated">bool QOpenGLTexture::isTextureView()const</target>
        </trans-unit>
        <trans-unit id="c0bfa7ef7b66ce3e7db02ea97455d9b178f14f6f" translate="yes" xml:space="preserve">
          <source>bool QOpenGLTextureBlitter::create()</source>
          <target state="translated">bool QOpenGLTextureBlitter::create()</target>
        </trans-unit>
        <trans-unit id="0c5546508666ea20153fa169055ed1f359442bdf" translate="yes" xml:space="preserve">
          <source>bool QOpenGLTextureBlitter::isCreated() const</source>
          <target state="translated">bool QOpenGLTextureBlitter::isCreated()const</target>
        </trans-unit>
        <trans-unit id="8d801eef861cc37d7738fcbe52059d8d0eef8803" translate="yes" xml:space="preserve">
          <source>bool QOpenGLTextureBlitter::supportsExternalOESTarget() const</source>
          <target state="translated">bool QOpenGLTextureBlitter::supportsExternalOESTarget()const</target>
        </trans-unit>
        <trans-unit id="ce3a39c1bb83560f6da5e18647125942851d021b" translate="yes" xml:space="preserve">
          <source>bool QOpenGLTimeMonitor::create()</source>
          <target state="translated">bool QOpenGLTimeMonitor::create()</target>
        </trans-unit>
        <trans-unit id="54ea94e88010879eae7d7da9a75b891ac4312d72" translate="yes" xml:space="preserve">
          <source>bool QOpenGLTimeMonitor::isCreated() const</source>
          <target state="translated">bool QOpenGLTimeMonitor::isCreated()const</target>
        </trans-unit>
        <trans-unit id="752d1238b4fc0e095cbdb2a221bd9b5763581d16" translate="yes" xml:space="preserve">
          <source>bool QOpenGLTimeMonitor::isResultAvailable() const</source>
          <target state="translated">bool QOpenGLTimeMonitor::isResultadoDisponible()const</target>
        </trans-unit>
        <trans-unit id="5634ae1d645cf5d37d7f10e4e369ad3d51789d7b" translate="yes" xml:space="preserve">
          <source>bool QOpenGLTimerQuery::create()</source>
          <target state="translated">bool QOpenGLTimerQuery::create()</target>
        </trans-unit>
        <trans-unit id="09126be30143d87ac88a2ce27e7d657bb15b5bbd" translate="yes" xml:space="preserve">
          <source>bool QOpenGLTimerQuery::isCreated() const</source>
          <target state="translated">bool QOpenGLTimerQuery::isCreated()const</target>
        </trans-unit>
        <trans-unit id="2c924c983941f1ab0516febf00beaafe90bd59ef" translate="yes" xml:space="preserve">
          <source>bool QOpenGLTimerQuery::isResultAvailable() const</source>
          <target state="translated">bool QOpenGLTimerQuery::isResultAvailable()const</target>
        </trans-unit>
        <trans-unit id="72a82ee6ac4879a346c432e7dc2391366171792e" translate="yes" xml:space="preserve">
          <source>bool QOpenGLVersionProfile::hasProfiles() const</source>
          <target state="translated">bool QOpenGLVersionProfile::hasProfiles()const</target>
        </trans-unit>
        <trans-unit id="2beeb486a1107a62d1f61761fe32568284ba3a7e" translate="yes" xml:space="preserve">
          <source>bool QOpenGLVersionProfile::isLegacyVersion() const</source>
          <target state="translated">bool QOpenGLVersionProfile::isLegacyVersion()const</target>
        </trans-unit>
        <trans-unit id="fd9f60d61e76166381fbf9bc827707f3538cd2dd" translate="yes" xml:space="preserve">
          <source>bool QOpenGLVersionProfile::isValid() const</source>
          <target state="translated">bool QOpenGLVersionProfile::isValid()const</target>
        </trans-unit>
        <trans-unit id="572b836718deb3ee2249231443fd3831d1df2cfb" translate="yes" xml:space="preserve">
          <source>bool QOpenGLVertexArrayObject::create()</source>
          <target state="translated">bool QOpenGLVertexArrayObjeto::create()</target>
        </trans-unit>
        <trans-unit id="b4956cc559321ba1aa13e57c24712f4af6d48222" translate="yes" xml:space="preserve">
          <source>bool QOpenGLVertexArrayObject::isCreated() const</source>
          <target state="translated">bool QOpenGLVertexArrayObjeto::isCreated()const</target>
        </trans-unit>
        <trans-unit id="bb93c4400b259d0501953ac4bde2a8807b3925ca" translate="yes" xml:space="preserve">
          <source>bool QOpenGLWidget::isValid() const</source>
          <target state="translated">bool QOpenGLWidget::isValid()const</target>
        </trans-unit>
        <trans-unit id="d74cc7e539a42896bf50dc0788cf06eed289d376" translate="yes" xml:space="preserve">
          <source>bool QOpenGLWindow::isValid() const</source>
          <target state="translated">bool QOpenGLWindow::isValid()const</target>
        </trans-unit>
        <trans-unit id="4a0f88a724fbdfd654168b25b3427ca7b3ae37dd" translate="yes" xml:space="preserve">
          <source>bool QOperatingSystemVersion::isAnyOfType(std::initializer_list&amp;lt;&lt;a href=&quot;qoperatingsystemversion#OSType-enum&quot;&gt;OSType&lt;/a&gt;&amp;gt;</source>
          <target state="translated">bool QOperatingSystemVersion :: isAnyOfType (std :: initializer_list &amp;lt; &lt;a href=&quot;qoperatingsystemversion#OSType-enum&quot;&gt;OSType&lt;/a&gt; &amp;gt;</target>
        </trans-unit>
        <trans-unit id="6268b05aa47a401b7229a158d1256a0a436006b5" translate="yes" xml:space="preserve">
          <source>bool QPageLayout::isEquivalentTo(const &lt;a href=&quot;qpagelayout#QPageLayout&quot;&gt;QPageLayout&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QPageLayout :: isEquivalentTo (const &lt;a href=&quot;qpagelayout#QPageLayout&quot;&gt;QPageLayout&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="44bbd0fd6da0789a31c9153b6721526af1a40759" translate="yes" xml:space="preserve">
          <source>bool QPageLayout::isValid() const</source>
          <target state="translated">bool QPageLayout::isValid()const</target>
        </trans-unit>
        <trans-unit id="3a2a81029a6f66ce335f11766aa7d4de159442c0" translate="yes" xml:space="preserve">
          <source>bool QPageLayout::operator!=(const &lt;a href=&quot;qpagelayout#QPageLayout&quot;&gt;QPageLayout&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QPageLayout :: operator! = (const &lt;a href=&quot;qpagelayout#QPageLayout&quot;&gt;QPageLayout&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="f85ee3161ef144cc42d6010d257f63736c33d967" translate="yes" xml:space="preserve">
          <source>bool QPageLayout::operator==(const &lt;a href=&quot;qpagelayout#QPageLayout&quot;&gt;QPageLayout&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QPageLayout :: operator == (const &lt;a href=&quot;qpagelayout#QPageLayout&quot;&gt;QPageLayout&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="38149d13707073703b982abfdcc0bcc912d47cb0" translate="yes" xml:space="preserve">
          <source>bool QPageLayout::setBottomMargin(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">bool QPageLayout :: setBottomMargin ( &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dbb9555ca68532572c02c79f5ff1fd793541023e" translate="yes" xml:space="preserve">
          <source>bool QPageLayout::setBottomMargin(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c8cf56e54fd292e2903c8d172e592da9eb22850" translate="yes" xml:space="preserve">
          <source>bool QPageLayout::setLeftMargin(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">bool QPageLayout :: setLeftMargin ( &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3833c3dbe23fd7b08088a0309910d2eecdde0c5f" translate="yes" xml:space="preserve">
          <source>bool QPageLayout::setLeftMargin(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d044e7ee6c6f096099d149fa4b61f31ceaf5ae4d" translate="yes" xml:space="preserve">
          <source>bool QPageLayout::setMargins(const &lt;a href=&quot;qmarginsf&quot;&gt;QMarginsF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QPageLayout :: setMargins (const &lt;a href=&quot;qmarginsf&quot;&gt;QMarginsF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="ffffc2268af156c522551e7c454f0acd1c8134a2" translate="yes" xml:space="preserve">
          <source>bool QPageLayout::setRightMargin(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">bool QPageLayout :: setRightMargin ( &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3ab49ff4a9304d25529541197de505dbbe857502" translate="yes" xml:space="preserve">
          <source>bool QPageLayout::setRightMargin(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c6d940c909db5ae450d5e6cee121294cba860ce" translate="yes" xml:space="preserve">
          <source>bool QPageLayout::setTopMargin(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">bool QPageLayout :: setTopMargin ( &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c23a804d6e2f11ef41a6d79a267310e1092acb3f" translate="yes" xml:space="preserve">
          <source>bool QPageLayout::setTopMargin(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61462c16529e5af391832a0f3b43c4d2a15ae51b" translate="yes" xml:space="preserve">
          <source>bool QPageRanges::contains(int</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdac3ba58f40ce9786bc6ebc6cb9001621fc5e9a" translate="yes" xml:space="preserve">
          <source>bool QPageRanges::isEmpty() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e59e2502e7e5b478078364c2fa65a12f6bf9f233" translate="yes" xml:space="preserve">
          <source>bool QPageSize::isEquivalentTo(const &lt;a href=&quot;qpagesize#QPageSize&quot;&gt;QPageSize&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QPageSize :: isEquivalentTo (const &lt;a href=&quot;qpagesize#QPageSize&quot;&gt;QPageSize&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="903bf95df3fb191eb2d608b60d06d08a60f05bc9" translate="yes" xml:space="preserve">
          <source>bool QPageSize::isValid() const</source>
          <target state="translated">bool QPageSize::isValid()const</target>
        </trans-unit>
        <trans-unit id="7b20ec8988c82ca72ad03d65eae397eb2a180a5f" translate="yes" xml:space="preserve">
          <source>bool QPageSize::operator!=(const &lt;a href=&quot;qpagesize#QPageSize&quot;&gt;QPageSize&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QPageSize :: operator! = (const &lt;a href=&quot;qpagesize#QPageSize&quot;&gt;QPageSize&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="de2848404b5cf8011d97cf95c4a4005d12394ec7" translate="yes" xml:space="preserve">
          <source>bool QPageSize::operator==(const &lt;a href=&quot;qpagesize#QPageSize&quot;&gt;QPageSize&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QPageSize :: operator == (const &lt;a href=&quot;qpagesize#QPageSize&quot;&gt;QPageSize&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="5e0b398eb9ebd17037a8053318fca9aa0db369a4" translate="yes" xml:space="preserve">
          <source>bool QPagedPaintDevice::setPageLayout(const &lt;a href=&quot;qpagelayout&quot;&gt;QPageLayout&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QPagedPaintDevice :: setPageLayout (const &lt;a href=&quot;qpagelayout&quot;&gt;QPageLayout&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="c6b3c02a908b9d1555ddaa4e065f03118aea899f" translate="yes" xml:space="preserve">
          <source>bool QPagedPaintDevice::setPageMargins(const &lt;a href=&quot;qmarginsf&quot;&gt;QMarginsF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QPagedPaintDevice :: setPageMargins (const &lt;a href=&quot;qmarginsf&quot;&gt;QMarginsF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="da4358b9e9d5304b21b2a5217deb3aeecf9ae187" translate="yes" xml:space="preserve">
          <source>bool QPagedPaintDevice::setPageOrientation(&lt;a href=&quot;qpagelayout#Orientation-enum&quot;&gt;QPageLayout::Orientation&lt;/a&gt;</source>
          <target state="translated">bool QPagedPaintDevice :: setPageOrientation ( &lt;a href=&quot;qpagelayout#Orientation-enum&quot;&gt;QPageLayout :: Orientaci&amp;oacute;n&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="187ff12ca48c7a0dd59ba298db3a5a832316e44b" translate="yes" xml:space="preserve">
          <source>bool QPagedPaintDevice::setPageSize(const &lt;a href=&quot;qpagesize&quot;&gt;QPageSize&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QPagedPaintDevice :: setPageSize (const &lt;a href=&quot;qpagesize&quot;&gt;QPageSize&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="624db3c22d8e9bea4ca935e93330f3f12ec03d20" translate="yes" xml:space="preserve">
          <source>bool QPaintDevice::paintingActive() const</source>
          <target state="translated">bool QPaintDevice::paintingActive()const</target>
        </trans-unit>
        <trans-unit id="9d7f1ef8371f37d38a8506c60e95d2f9618365fa" translate="yes" xml:space="preserve">
          <source>bool QPaintEngine::hasFeature(&lt;a href=&quot;qpaintengine#PaintEngineFeature-enum&quot;&gt;QPaintEngine::PaintEngineFeatures&lt;/a&gt;</source>
          <target state="translated">bool QPaintEngine :: hasFeature ( &lt;a href=&quot;qpaintengine#PaintEngineFeature-enum&quot;&gt;QPaintEngine :: PaintEngineFeatures&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c84d6f672df8d9bce54175b1e37a9c0558b67362" translate="yes" xml:space="preserve">
          <source>bool QPaintEngine::isActive() const</source>
          <target state="translated">bool QPaintEngine::isActive()const</target>
        </trans-unit>
        <trans-unit id="c03d5afadc0ad58bfd630a941e1ed03138446a65" translate="yes" xml:space="preserve">
          <source>bool QPaintEngineState::brushNeedsResolving() const</source>
          <target state="translated">bool QPaintEngineState::brushNeedsResolving()const</target>
        </trans-unit>
        <trans-unit id="d7ab4cac9982eec9b8af0aab9048e8493c499234" translate="yes" xml:space="preserve">
          <source>bool QPaintEngineState::isClipEnabled() const</source>
          <target state="translated">bool QPaintEngineState::isClipEnabled()const</target>
        </trans-unit>
        <trans-unit id="997838e65eed9474ce062a633e81353c64285751" translate="yes" xml:space="preserve">
          <source>bool QPaintEngineState::penNeedsResolving() const</source>
          <target state="translated">bool QPaintEngineState::penNeedsResolving()const</target>
        </trans-unit>
        <trans-unit id="805e08185b9819644b57a572376b97032451d50e" translate="yes" xml:space="preserve">
          <source>bool QPainter::begin(&lt;a href=&quot;qpaintdevice&quot;&gt;QPaintDevice&lt;/a&gt; *</source>
          <target state="translated">bool QPainter :: begin ( &lt;a href=&quot;qpaintdevice&quot;&gt;QPaintDevice&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="0b186bff495ab7d3f9ae2ace6046041d7d0c501a" translate="yes" xml:space="preserve">
          <source>bool QPainter::end()</source>
          <target state="translated">bool QPainter::end()</target>
        </trans-unit>
        <trans-unit id="94c7f6fdcb253d23310716fcdd82c8bc28af60e1" translate="yes" xml:space="preserve">
          <source>bool QPainter::hasClipping() const</source>
          <target state="translated">bool QPainter::hasClipping()const</target>
        </trans-unit>
        <trans-unit id="5dc25841a257d202374b569c4758ecd662bc892a" translate="yes" xml:space="preserve">
          <source>bool QPainter::isActive() const</source>
          <target state="translated">bool QPainter::isActive()const</target>
        </trans-unit>
        <trans-unit id="44ec17a8be373265cde6a38d743f8426bd68b143" translate="yes" xml:space="preserve">
          <source>bool QPainter::testRenderHint(&lt;a href=&quot;qpainter#RenderHint-enum&quot;&gt;QPainter::RenderHint&lt;/a&gt;</source>
          <target state="translated">bool QPainter :: testRenderHint ( &lt;a href=&quot;qpainter#RenderHint-enum&quot;&gt;QPainter :: RenderHint&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="96ba142c754c152c8ffc3aaba085d5dc7b728088" translate="yes" xml:space="preserve">
          <source>bool QPainter::viewTransformEnabled() const</source>
          <target state="translated">bool QPainter::viewTransformEnabled()const</target>
        </trans-unit>
        <trans-unit id="36b6313511fa12da6b6956c048261a198713f158" translate="yes" xml:space="preserve">
          <source>bool QPainter::worldMatrixEnabled() const</source>
          <target state="translated">bool QPainter::worldMatrixEnabled()const</target>
        </trans-unit>
        <trans-unit id="f2d062e31a16221c8c28393edf08f1618d1c5590" translate="yes" xml:space="preserve">
          <source>bool QPainterPath::contains(const &lt;a href=&quot;qpainterpath#QPainterPath&quot;&gt;QPainterPath&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QPainterPath :: contiene (const &lt;a href=&quot;qpainterpath#QPainterPath&quot;&gt;QPainterPath&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="48068c2b1de88157d00eb1a575f9f619356fc1b8" translate="yes" xml:space="preserve">
          <source>bool QPainterPath::contains(const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QPainterPath :: contiene (const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="c49fdf086227ef2acd33040a12f99286ba0bdfae" translate="yes" xml:space="preserve">
          <source>bool QPainterPath::contains(const &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QPainterPath :: contiene (const &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="bc44172ba3b4f11454d99d43f4f15b55936ec6a8" translate="yes" xml:space="preserve">
          <source>bool QPainterPath::intersects(const &lt;a href=&quot;qpainterpath#QPainterPath&quot;&gt;QPainterPath&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QPainterPath :: intersects (const &lt;a href=&quot;qpainterpath#QPainterPath&quot;&gt;QPainterPath&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="e9d3ce93ae29e364b0b38ffaec02494db7fd29c3" translate="yes" xml:space="preserve">
          <source>bool QPainterPath::intersects(const &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QPainterPath :: intersects (const &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="5539e80adb34a4c1442689f5a384abc6f4e1c8c9" translate="yes" xml:space="preserve">
          <source>bool QPainterPath::isEmpty() const</source>
          <target state="translated">bool QPainterPath::isEmpty()const</target>
        </trans-unit>
        <trans-unit id="081a96959e40f70f401f5a7ec0021410b8b5266d" translate="yes" xml:space="preserve">
          <source>bool QPainterPath::operator!=(const &lt;a href=&quot;qpainterpath#QPainterPath&quot;&gt;QPainterPath&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QPainterPath :: operator! = (const &lt;a href=&quot;qpainterpath#QPainterPath&quot;&gt;QPainterPath&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="046a0de177a6c35b1e465f70823333d8e4452125" translate="yes" xml:space="preserve">
          <source>bool QPainterPath::operator==(const &lt;a href=&quot;qpainterpath#QPainterPath&quot;&gt;QPainterPath&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QPainterPath :: operator == (const &lt;a href=&quot;qpainterpath#QPainterPath&quot;&gt;QPainterPath&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="d3c5366dd443969d174ead933e17cd7a91927074" translate="yes" xml:space="preserve">
          <source>bool QPair::operator!=(const &lt;a href=&quot;qpair#QPair&quot;&gt;QPair&lt;/a&gt;&amp;lt;T1, T2&amp;gt; &amp;amp;</source>
          <target state="translated">bool QPair :: operator! = (const &lt;a href=&quot;qpair#QPair&quot;&gt;QPair&lt;/a&gt; &amp;lt;T1, T2&amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="f643f5f6acfec47071b0d2c3917365f71fbdf9af" translate="yes" xml:space="preserve">
          <source>bool QPair::operator&amp;gt;(const &lt;a href=&quot;qpair#QPair&quot;&gt;QPair&lt;/a&gt;&amp;lt;T1, T2&amp;gt; &amp;amp;</source>
          <target state="translated">bool QPair :: operador&amp;gt; (const &lt;a href=&quot;qpair#QPair&quot;&gt;QPair&lt;/a&gt; &amp;lt;T1, T2&amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="7e9101ad2e9d2b7a85c30f4c25dd5c7d274d9743" translate="yes" xml:space="preserve">
          <source>bool QPair::operator&amp;gt;=(const &lt;a href=&quot;qpair#QPair&quot;&gt;QPair&lt;/a&gt;&amp;lt;T1, T2&amp;gt; &amp;amp;</source>
          <target state="translated">bool QPair :: operador&amp;gt; = (const &lt;a href=&quot;qpair#QPair&quot;&gt;QPair&lt;/a&gt; &amp;lt;T1, T2&amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="a85c1c9ebfe08edaadd9ebaf6b0d49d842007702" translate="yes" xml:space="preserve">
          <source>bool QPair::operator&amp;lt;(const &lt;a href=&quot;qpair#QPair&quot;&gt;QPair&lt;/a&gt;&amp;lt;T1, T2&amp;gt; &amp;amp;</source>
          <target state="translated">bool QPair :: operador &amp;lt;(const &lt;a href=&quot;qpair#QPair&quot;&gt;QPair&lt;/a&gt; &amp;lt;T1, T2&amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="c860429bb162726908dcb832f0e4897cf24ac393" translate="yes" xml:space="preserve">
          <source>bool QPair::operator&amp;lt;=(const &lt;a href=&quot;qpair#QPair&quot;&gt;QPair&lt;/a&gt;&amp;lt;T1, T2&amp;gt; &amp;amp;</source>
          <target state="translated">bool QPair :: operador &amp;lt;= (const &lt;a href=&quot;qpair#QPair&quot;&gt;QPair&lt;/a&gt; &amp;lt;T1, T2&amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="92c75cdcaaa54b1fb9755a991a1a307b1134eca9" translate="yes" xml:space="preserve">
          <source>bool QPair::operator==(const &lt;a href=&quot;qpair#QPair&quot;&gt;QPair&lt;/a&gt;&amp;lt;T1, T2&amp;gt; &amp;amp;</source>
          <target state="translated">bool QPair :: operator == (const &lt;a href=&quot;qpair#QPair&quot;&gt;QPair&lt;/a&gt; &amp;lt;T1, T2&amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="40d523316436cc052f4add033e0b49c754328ef4" translate="yes" xml:space="preserve">
          <source>bool QPalette::isBrushSet(&lt;a href=&quot;qpalette#ColorGroup-enum&quot;&gt;QPalette::ColorGroup&lt;/a&gt;</source>
          <target state="translated">bool QPalette :: isBrushSet ( &lt;a href=&quot;qpalette#ColorGroup-enum&quot;&gt;QPalette :: ColorGroup&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="aa6c2733a756002345104f72f40b07aeeef098da" translate="yes" xml:space="preserve">
          <source>bool QPalette::isCopyOf(const &lt;a href=&quot;qpalette#QPalette&quot;&gt;QPalette&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QPalette :: isCopyOf (const &lt;a href=&quot;qpalette#QPalette&quot;&gt;QPalette&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="7d41a1cea85848c6215b3a76868bc43239292d25" translate="yes" xml:space="preserve">
          <source>bool QPalette::isEqual(&lt;a href=&quot;qpalette#ColorGroup-enum&quot;&gt;QPalette::ColorGroup&lt;/a&gt;</source>
          <target state="translated">bool QPalette :: isEqual ( &lt;a href=&quot;qpalette#ColorGroup-enum&quot;&gt;QPalette :: ColorGroup&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="372f6cf037e59432f73ed8d8217f0a4ed5447314" translate="yes" xml:space="preserve">
          <source>bool QPalette::operator!=(const &lt;a href=&quot;qpalette#QPalette&quot;&gt;QPalette&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QPalette :: operator! = (const &lt;a href=&quot;qpalette#QPalette&quot;&gt;QPalette&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="73dd16699f30ca5077893847d473fefb68bd3dcf" translate="yes" xml:space="preserve">
          <source>bool QPalette::operator==(const &lt;a href=&quot;qpalette#QPalette&quot;&gt;QPalette&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QPalette :: operador == (const &lt;a href=&quot;qpalette#QPalette&quot;&gt;QPalette&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="09daa236aeb90315f49ae690138fa955aa2a71e8" translate="yes" xml:space="preserve">
          <source>bool QPdfPageNavigation::canGoToNextPage() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e95a99196b59d29072c9cd10cfb2f6d1dc74d34b" translate="yes" xml:space="preserve">
          <source>bool QPdfPageNavigation::canGoToPreviousPage() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7197cc4001777ae8d3f1dc303a8e64278704857f" translate="yes" xml:space="preserve">
          <source>bool QPdfWriter::setPageLayout(const &lt;a href=&quot;qpagelayout&quot;&gt;QPageLayout&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QPdfWriter :: setPageLayout (const &lt;a href=&quot;qpagelayout&quot;&gt;QPageLayout&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="e1f5b448a60ac9c35d884c2ddaa1cb21a2df0a72" translate="yes" xml:space="preserve">
          <source>bool QPdfWriter::setPageMargins(const &lt;a href=&quot;qmarginsf&quot;&gt;QMarginsF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QPdfWriter :: setPageMargins (const &lt;a href=&quot;qmarginsf&quot;&gt;QMarginsF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="425b80607d4fcf51bcc03ef7c6b7d36710c20917" translate="yes" xml:space="preserve">
          <source>bool QPdfWriter::setPageOrientation(&lt;a href=&quot;qpagelayout#Orientation-enum&quot;&gt;QPageLayout::Orientation&lt;/a&gt;</source>
          <target state="translated">bool QPdfWriter :: setPageOrientation ( &lt;a href=&quot;qpagelayout#Orientation-enum&quot;&gt;QPageLayout :: Orientaci&amp;oacute;n&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bc39d54ab995e42482617b1b0929595268a7d4d7" translate="yes" xml:space="preserve">
          <source>bool QPdfWriter::setPageSize(const &lt;a href=&quot;qpagesize&quot;&gt;QPageSize&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QPdfWriter :: setPageSize (const &lt;a href=&quot;qpagesize&quot;&gt;QPageSize&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="d691eba7c1d0bfb88e64cf599b14ace580d7910e" translate="yes" xml:space="preserve">
          <source>bool QPen::isCosmetic() const</source>
          <target state="translated">bool QPen::isCosmetic()const</target>
        </trans-unit>
        <trans-unit id="f4436530588c6fbc0fc6e75e6a14ce4a874aff8e" translate="yes" xml:space="preserve">
          <source>bool QPen::isSolid() const</source>
          <target state="translated">bool QPen::isSolid()const</target>
        </trans-unit>
        <trans-unit id="258473055f0d1c6942cdfacfb3d615552ba381c9" translate="yes" xml:space="preserve">
          <source>bool QPen::operator!=(const &lt;a href=&quot;qpen#QPen&quot;&gt;QPen&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QPen :: operator! = (const &lt;a href=&quot;qpen#QPen&quot;&gt;QPen&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="f0a3a7ee599095687ae39aa98c57e95d531a54d7" translate="yes" xml:space="preserve">
          <source>bool QPen::operator==(const &lt;a href=&quot;qpen#QPen&quot;&gt;QPen&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QPen :: operator == (const &lt;a href=&quot;qpen#QPen&quot;&gt;QPen&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="39868f589ba1ed86c792a7420b16b15f847aa19b" translate="yes" xml:space="preserve">
          <source>bool QPersistentModelIndex::isValid() const</source>
          <target state="translated">bool QPersistentModelIndex::isValid()const</target>
        </trans-unit>
        <trans-unit id="40b9a0ef8f946ed2473ed0b25ede52d9b064a8d1" translate="yes" xml:space="preserve">
          <source>bool QPersistentModelIndex::operator!=(const &lt;a href=&quot;qmodelindex&quot;&gt;QModelIndex&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QPersistentModelIndex :: operator! = (const &lt;a href=&quot;qmodelindex&quot;&gt;QModelIndex&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="63c4234908225a206764b7cc03befb6e2a60b342" translate="yes" xml:space="preserve">
          <source>bool QPersistentModelIndex::operator!=(const QPersistentModelIndex &amp;amp;</source>
          <target state="translated">bool QPersistentModelIndex :: operator! = (const QPersistentModelIndex &amp;amp;</target>
        </trans-unit>
        <trans-unit id="0834cda02727bd6c7e4aa5be7c3edbd806c44997" translate="yes" xml:space="preserve">
          <source>bool QPersistentModelIndex::operator&amp;lt;(const QPersistentModelIndex &amp;amp;</source>
          <target state="translated">bool QPersistentModelIndex :: operator &amp;lt;(const QPersistentModelIndex &amp;amp;</target>
        </trans-unit>
        <trans-unit id="910f949f63f4c78614da2bd22cd0dffcedbcca39" translate="yes" xml:space="preserve">
          <source>bool QPersistentModelIndex::operator==(const &lt;a href=&quot;qmodelindex&quot;&gt;QModelIndex&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QPersistentModelIndex :: operator == (const &lt;a href=&quot;qmodelindex&quot;&gt;QModelIndex&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="0a276e35049a05176e9dd61e1516c09aaf3b8c05" translate="yes" xml:space="preserve">
          <source>bool QPersistentModelIndex::operator==(const QPersistentModelIndex &amp;amp;</source>
          <target state="translated">bool QPersistentModelIndex :: operator == (const QPersistentModelIndex &amp;amp;</target>
        </trans-unit>
        <trans-unit id="f1dd9b3f01c237f7a86ef5b0add1292b31dacbb0" translate="yes" xml:space="preserve">
          <source>bool QPickEvent::isAccepted() const</source>
          <target state="translated">bool QPickEvent::isAccepted()const</target>
        </trans-unit>
        <trans-unit id="0e296feb78255b5b22bd4b1bcc6bff2b2f62d13f" translate="yes" xml:space="preserve">
          <source>bool QPicture::isNull() const</source>
          <target state="translated">bool QPicture::isNull()const</target>
        </trans-unit>
        <trans-unit id="54f91c583245fc2f4ddc7487ce2a049cd101b219" translate="yes" xml:space="preserve">
          <source>bool QPicture::load(&lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt; *</source>
          <target state="translated">bool QPicture :: load ( &lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="0cf7867a351ae6440161668edf73b878a65658ed" translate="yes" xml:space="preserve">
          <source>bool QPicture::load(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QPicture :: load (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="ff3f4ac70aa20eea873374a93c934bc47b797164" translate="yes" xml:space="preserve">
          <source>bool QPicture::play(&lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; *</source>
          <target state="translated">bool QPicture :: play ( &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="f91392f3336b9d1a69fd7d2f1782c7f449933aee" translate="yes" xml:space="preserve">
          <source>bool QPicture::save(&lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt; *</source>
          <target state="translated">bool QPicture :: save ( &lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="43e889c3dba56a54e5f8b8d0438e7accd1f89adb" translate="yes" xml:space="preserve">
          <source>bool QPicture::save(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QPicture :: save (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="4cd978d7c74b2a537dadb07cbe0b8988b50cfe56" translate="yes" xml:space="preserve">
          <source>bool QPictureIO::read()</source>
          <target state="translated">bool QPictureIO::read()</target>
        </trans-unit>
        <trans-unit id="6be34dd45f47fce192114a5fa0a4472c69cd9b3b" translate="yes" xml:space="preserve">
          <source>bool QPictureIO::write()</source>
          <target state="translated">bool QPictureIO::write()</target>
        </trans-unit>
        <trans-unit id="79e4e81c61725cfd89957330b86a69e04473e76b" translate="yes" xml:space="preserve">
          <source>bool QPieSeries::append(&lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;&lt;a href=&quot;qpieslice&quot;&gt;QPieSlice&lt;/a&gt; *&amp;gt;</source>
          <target state="translated">bool QPieSeries :: agregar ( &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; &amp;lt; &lt;a href=&quot;qpieslice&quot;&gt;QPieSlice&lt;/a&gt; *&amp;gt;</target>
        </trans-unit>
        <trans-unit id="ecb37f6e80480c07b3620a9629cd4d24fb1c65be" translate="yes" xml:space="preserve">
          <source>bool QPieSeries::append(&lt;a href=&quot;qpieslice&quot;&gt;QPieSlice&lt;/a&gt; *</source>
          <target state="translated">bool QPieSeries :: agregar ( &lt;a href=&quot;qpieslice&quot;&gt;QPieSlice&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="c521099939d667dda123fdf4da2418e9e322909a" translate="yes" xml:space="preserve">
          <source>bool QPieSeries::insert(int</source>
          <target state="translated">bool QPieSeries::insertar(int</target>
        </trans-unit>
        <trans-unit id="29f331332c65bea8a9360a068650e6568c73c829" translate="yes" xml:space="preserve">
          <source>bool QPieSeries::isEmpty() const</source>
          <target state="translated">bool QPieSeries::isEmpty()const</target>
        </trans-unit>
        <trans-unit id="4ce445b7ddb30a0e91d2472b59a520b73481206b" translate="yes" xml:space="preserve">
          <source>bool QPieSeries::remove(&lt;a href=&quot;qpieslice&quot;&gt;QPieSlice&lt;/a&gt; *</source>
          <target state="translated">bool QPieSeries :: eliminar ( &lt;a href=&quot;qpieslice&quot;&gt;QPieSlice&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="99f9e79e251c2032c1a52c131d59a1d847d7e655" translate="yes" xml:space="preserve">
          <source>bool QPieSeries::take(&lt;a href=&quot;qpieslice&quot;&gt;QPieSlice&lt;/a&gt; *</source>
          <target state="translated">bool QPieSeries :: take ( &lt;a href=&quot;qpieslice&quot;&gt;QPieSlice&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="34786972e997c90d781d010619fa48059957d161" translate="yes" xml:space="preserve">
          <source>bool QPixmap::convertFromImage(const &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QPixmap :: convertFromImage (const &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="0888bafeb6d5723817a935a690760a0d817d16ae" translate="yes" xml:space="preserve">
          <source>bool QPixmap::hasAlpha() const</source>
          <target state="translated">bool QPixmap::hasAlpha()const</target>
        </trans-unit>
        <trans-unit id="8622504f07d3fab52baada4b9f3f8ff1bb08ecb9" translate="yes" xml:space="preserve">
          <source>bool QPixmap::hasAlphaChannel() const</source>
          <target state="translated">bool QPixmap::hasAlphaChannel()const</target>
        </trans-unit>
        <trans-unit id="5f3bb90923182abe10096efea3c4ab09f8b9567f" translate="yes" xml:space="preserve">
          <source>bool QPixmap::isNull() const</source>
          <target state="translated">bool QPixmap::isNull()const</target>
        </trans-unit>
        <trans-unit id="0828a1839d16e63dabe25b0218c62ab5efe0d179" translate="yes" xml:space="preserve">
          <source>bool QPixmap::isQBitmap() const</source>
          <target state="translated">bool QPixmap::isQBitmap()const</target>
        </trans-unit>
        <trans-unit id="c0c6e4871ad76e9bb67af82f657624d977b6ec13" translate="yes" xml:space="preserve">
          <source>bool QPixmap::load(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QPixmap :: load (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="0bb95c7c7aeef10a3c46e64e01656c3bb78d0392" translate="yes" xml:space="preserve">
          <source>bool QPixmap::loadFromData(const &lt;a href=&quot;#uchar-typedef&quot;&gt;uchar&lt;/a&gt; *</source>
          <target state="translated">bool QPixmap :: loadFromData (const &lt;a href=&quot;#uchar-typedef&quot;&gt;uchar&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="f78956422bb2d660311f3d4a9c6b0e12be156dbc" translate="yes" xml:space="preserve">
          <source>bool QPixmap::loadFromData(const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QPixmap :: loadFromData (const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="d632bbd8537cf18294c41c8201bcd52a8254ed7b" translate="yes" xml:space="preserve">
          <source>bool QPixmap::loadFromData(const &lt;a href=&quot;qtglobal#uchar-typedef&quot;&gt;uchar&lt;/a&gt; *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6b756eadc995cd90a373ef4cea42418d5b58dba" translate="yes" xml:space="preserve">
          <source>bool QPixmap::operator!() const</source>
          <target state="translated">bool QPixmap::operador!()const</target>
        </trans-unit>
        <trans-unit id="adcbf094ab446dae33111fc48aa76ce2c0bd1bd8" translate="yes" xml:space="preserve">
          <source>bool QPixmap::save(&lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt; *</source>
          <target state="translated">bool QPixmap :: save ( &lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="dae142c92ac6a365fc21b9a16efb10b0038af01c" translate="yes" xml:space="preserve">
          <source>bool QPixmap::save(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QPixmap :: save (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="106d7cb32d8599c1ff5e95e0682b88d35ff84603" translate="yes" xml:space="preserve">
          <source>bool QPlace::detailsFetched() const</source>
          <target state="translated">bool QPlace::detailsFetched()const</target>
        </trans-unit>
        <trans-unit id="7e79c39d5063ce36c3e232cd1a96249fe754c9d9" translate="yes" xml:space="preserve">
          <source>bool QPlace::isEmpty() const</source>
          <target state="translated">bool QPlace::isEmpty()const</target>
        </trans-unit>
        <trans-unit id="7c5ea925617aea6ab1b9181bfe11384ecbeb1b65" translate="yes" xml:space="preserve">
          <source>bool QPlace::operator!=(const &lt;a href=&quot;qplace#QPlace&quot;&gt;QPlace&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QPlace :: operator! = (const &lt;a href=&quot;qplace#QPlace&quot;&gt;QPlace&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="beff2a74acb584bd15ddca0180cab84764e0bbc0" translate="yes" xml:space="preserve">
          <source>bool QPlace::operator==(const &lt;a href=&quot;qplace#QPlace&quot;&gt;QPlace&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QPlace :: operator == (const &lt;a href=&quot;qplace#QPlace&quot;&gt;QPlace&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="4c88d4e158140efd3a17846883f8ed6977014575" translate="yes" xml:space="preserve">
          <source>bool QPlaceAttribute::isEmpty() const</source>
          <target state="translated">bool QPlaceAttribute::isEmpty()const</target>
        </trans-unit>
        <trans-unit id="44da4bb9f8bbf7e8a98ebe8fac599aaf68ae10cf" translate="yes" xml:space="preserve">
          <source>bool QPlaceAttribute::operator!=(const &lt;a href=&quot;qplaceattribute#QPlaceAttribute&quot;&gt;QPlaceAttribute&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QPlaceAttribute :: operator! = (const &lt;a href=&quot;qplaceattribute#QPlaceAttribute&quot;&gt;QPlaceAttribute&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="240f8d1027557946e94dc57783c9411db684c09e" translate="yes" xml:space="preserve">
          <source>bool QPlaceAttribute::operator==(const &lt;a href=&quot;qplaceattribute#QPlaceAttribute&quot;&gt;QPlaceAttribute&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QPlaceAttribute :: operator == (const &lt;a href=&quot;qplaceattribute#QPlaceAttribute&quot;&gt;QPlaceAttribute&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="9bb645260aeb4b6a4dd634879f2c19dc9acb7d6a" translate="yes" xml:space="preserve">
          <source>bool QPlaceCategory::isEmpty() const</source>
          <target state="translated">bool QPlaceCategory::isEmpty()const</target>
        </trans-unit>
        <trans-unit id="5ed0cbc7657a91339c2253b460e324cfc12f9500" translate="yes" xml:space="preserve">
          <source>bool QPlaceCategory::operator!=(const &lt;a href=&quot;qplacecategory#QPlaceCategory&quot;&gt;QPlaceCategory&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QPlaceCategory :: operator! = (const &lt;a href=&quot;qplacecategory#QPlaceCategory&quot;&gt;QPlaceCategory&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="1b085c9510a43890ae3d5c2ed1f08d10fcb02ec6" translate="yes" xml:space="preserve">
          <source>bool QPlaceCategory::operator==(const &lt;a href=&quot;qplacecategory#QPlaceCategory&quot;&gt;QPlaceCategory&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QPlaceCategory :: operator == (const &lt;a href=&quot;qplacecategory#QPlaceCategory&quot;&gt;QPlaceCategory&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="158f477d5bd1deb380909fd61d48169f86340755" translate="yes" xml:space="preserve">
          <source>bool QPlaceContactDetail::operator!=(const &lt;a href=&quot;qplacecontactdetail#QPlaceContactDetail&quot;&gt;QPlaceContactDetail&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QPlaceContactDetail :: operator! = (const &lt;a href=&quot;qplacecontactdetail#QPlaceContactDetail&quot;&gt;QPlaceContactDetail&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="4a984b93e0f29076c7b2e3be3d8e7d36e933c842" translate="yes" xml:space="preserve">
          <source>bool QPlaceContactDetail::operator==(const &lt;a href=&quot;qplacecontactdetail#QPlaceContactDetail&quot;&gt;QPlaceContactDetail&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QPlaceContactDetail :: operator == (const &lt;a href=&quot;qplacecontactdetail#QPlaceContactDetail&quot;&gt;QPlaceContactDetail&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="7b1ccc2c6c428f8d2e9a8719972865e9ec8db229" translate="yes" xml:space="preserve">
          <source>bool QPlaceContent::operator!=(const &lt;a href=&quot;qplacecontent#QPlaceContent&quot;&gt;QPlaceContent&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QPlaceContent :: operator! = (const &lt;a href=&quot;qplacecontent#QPlaceContent&quot;&gt;QPlaceContent&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="85e517d8b4e8109900c8cf44d6410c2e1d6355c3" translate="yes" xml:space="preserve">
          <source>bool QPlaceContent::operator==(const &lt;a href=&quot;qplacecontent#QPlaceContent&quot;&gt;QPlaceContent&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QPlaceContent :: operator == (const &lt;a href=&quot;qplacecontent#QPlaceContent&quot;&gt;QPlaceContent&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="670904624ec1f3cf4f86a2cb6829fc363ea25f98" translate="yes" xml:space="preserve">
          <source>bool QPlaceContentRequest::operator!=(const &lt;a href=&quot;qplacecontentrequest#QPlaceContentRequest&quot;&gt;QPlaceContentRequest&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QPlaceContentRequest :: operator! = (const &lt;a href=&quot;qplacecontentrequest#QPlaceContentRequest&quot;&gt;QPlaceContentRequest&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="4abde606566a5c5abffb2681d4acab3973b30d17" translate="yes" xml:space="preserve">
          <source>bool QPlaceContentRequest::operator==(const &lt;a href=&quot;qplacecontentrequest#QPlaceContentRequest&quot;&gt;QPlaceContentRequest&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QPlaceContentRequest :: operator == (const &lt;a href=&quot;qplacecontentrequest#QPlaceContentRequest&quot;&gt;QPlaceContentRequest&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="6502f15fa52155ee6c772a5d7406cec9c9489350" translate="yes" xml:space="preserve">
          <source>bool QPlaceIcon::isEmpty() const</source>
          <target state="translated">bool QPlaceIcon::isEmpty()const</target>
        </trans-unit>
        <trans-unit id="54125ba4dff86caf1cfe41656644b456c2ac7f20" translate="yes" xml:space="preserve">
          <source>bool QPlaceIcon::operator!=(const &lt;a href=&quot;qplaceicon#QPlaceIcon&quot;&gt;QPlaceIcon&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QPlaceIcon :: operator! = (const &lt;a href=&quot;qplaceicon#QPlaceIcon&quot;&gt;QPlaceIcon&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="c48d446f051de0f96bd4978b24e5a46a335e75b5" translate="yes" xml:space="preserve">
          <source>bool QPlaceIcon::operator==(const &lt;a href=&quot;qplaceicon#QPlaceIcon&quot;&gt;QPlaceIcon&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QPlaceIcon :: operator == (const &lt;a href=&quot;qplaceicon#QPlaceIcon&quot;&gt;QPlaceIcon&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="1beddd41c9c481bc2c3c74a4929ad73350d068f3" translate="yes" xml:space="preserve">
          <source>bool QPlaceMatchRequest::operator!=(const &lt;a href=&quot;qplacematchrequest#QPlaceMatchRequest&quot;&gt;QPlaceMatchRequest&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QPlaceMatchRequest :: operator! = (const &lt;a href=&quot;qplacematchrequest#QPlaceMatchRequest&quot;&gt;QPlaceMatchRequest&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="41bb4132713871e8b9f16b7250a46cb4086a3542" translate="yes" xml:space="preserve">
          <source>bool QPlaceMatchRequest::operator==(const &lt;a href=&quot;qplacematchrequest#QPlaceMatchRequest&quot;&gt;QPlaceMatchRequest&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QPlaceMatchRequest :: operator == (const &lt;a href=&quot;qplacematchrequest#QPlaceMatchRequest&quot;&gt;QPlaceMatchRequest&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="3b589ac63fa726915bb05df847bb0b55933b8a3e" translate="yes" xml:space="preserve">
          <source>bool QPlaceRatings::isEmpty() const</source>
          <target state="translated">bool QPlaceRatings::isEmpty()const</target>
        </trans-unit>
        <trans-unit id="532a75ade07fadff648eed798d416d892558f9ab" translate="yes" xml:space="preserve">
          <source>bool QPlaceRatings::operator!=(const &lt;a href=&quot;qplaceratings#QPlaceRatings&quot;&gt;QPlaceRatings&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QPlaceRatings :: operator! = (const &lt;a href=&quot;qplaceratings#QPlaceRatings&quot;&gt;QPlaceRatings&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="eca29c09b33c3d1cee8444772d3c62f1e93c3438" translate="yes" xml:space="preserve">
          <source>bool QPlaceRatings::operator==(const &lt;a href=&quot;qplaceratings#QPlaceRatings&quot;&gt;QPlaceRatings&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QPlaceRatings :: operator == (const &lt;a href=&quot;qplaceratings#QPlaceRatings&quot;&gt;QPlaceRatings&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="a2d78d50143a698d72c7619dc03fbc61d821c42e" translate="yes" xml:space="preserve">
          <source>bool QPlaceReply::isFinished() const</source>
          <target state="translated">bool QPlaceReply::isFinished()const</target>
        </trans-unit>
        <trans-unit id="510aad2f6800fa15db4ba75d03c7476c750e0b6c" translate="yes" xml:space="preserve">
          <source>bool QPlaceResult::isSponsored() const</source>
          <target state="translated">bool QPlaceResultado::isSponsored()const</target>
        </trans-unit>
        <trans-unit id="5f63bf70811f66e899950d2573a5878c17ab810a" translate="yes" xml:space="preserve">
          <source>bool QPlaceSearchRequest::operator!=(const &lt;a href=&quot;qplacesearchrequest#QPlaceSearchRequest&quot;&gt;QPlaceSearchRequest&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QPlaceSearchRequest :: operator! = (const &lt;a href=&quot;qplacesearchrequest#QPlaceSearchRequest&quot;&gt;QPlaceSearchRequest&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="7d45c387c58f2e1f83754aa6bdaa0dd2fe3dbb6e" translate="yes" xml:space="preserve">
          <source>bool QPlaceSearchRequest::operator==(const &lt;a href=&quot;qplacesearchrequest#QPlaceSearchRequest&quot;&gt;QPlaceSearchRequest&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QPlaceSearchRequest :: operator == (const &lt;a href=&quot;qplacesearchrequest#QPlaceSearchRequest&quot;&gt;QPlaceSearchRequest&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="ccd2dde20b2dd68d71d6af3cbbaeb353d53d8610" translate="yes" xml:space="preserve">
          <source>bool QPlaceSearchResult::operator!=(const &lt;a href=&quot;qplacesearchresult#QPlaceSearchResult&quot;&gt;QPlaceSearchResult&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QPlaceSearchResult :: operator! = (const &lt;a href=&quot;qplacesearchresult#QPlaceSearchResult&quot;&gt;QPlaceSearchResult&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="b560a3b39e46969a07dc2e971f325c8160d537bf" translate="yes" xml:space="preserve">
          <source>bool QPlaceSearchResult::operator==(const &lt;a href=&quot;qplacesearchresult#QPlaceSearchResult&quot;&gt;QPlaceSearchResult&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QPlaceSearchResult :: operator == (const &lt;a href=&quot;qplacesearchresult#QPlaceSearchResult&quot;&gt;QPlaceSearchResult&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="9075e19b13808610a8fc21e0b3209021188befd0" translate="yes" xml:space="preserve">
          <source>bool QPlaceSupplier::isEmpty() const</source>
          <target state="translated">bool QPlaceSupplier::isEmpty()const</target>
        </trans-unit>
        <trans-unit id="bb95748fcb088c697b7e0a27c3af84f0ab637639" translate="yes" xml:space="preserve">
          <source>bool QPlaceSupplier::operator!=(const &lt;a href=&quot;qplacesupplier#QPlaceSupplier&quot;&gt;QPlaceSupplier&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QPlaceSupplier :: operator! = (const &lt;a href=&quot;qplacesupplier#QPlaceSupplier&quot;&gt;QPlaceSupplier&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="83bae8a467b2ac6e6165f651875456a0287ce59c" translate="yes" xml:space="preserve">
          <source>bool QPlaceSupplier::operator==(const &lt;a href=&quot;qplacesupplier#QPlaceSupplier&quot;&gt;QPlaceSupplier&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QPlaceSupplier :: operator == (const &lt;a href=&quot;qplacesupplier#QPlaceSupplier&quot;&gt;QPlaceSupplier&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="ef6f23bddf48a005dc38f4e1be14dab808634202" translate="yes" xml:space="preserve">
          <source>bool QPlaceUser::operator!=(const &lt;a href=&quot;qplaceuser#QPlaceUser&quot;&gt;QPlaceUser&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QPlaceUser :: operator! = (const &lt;a href=&quot;qplaceuser#QPlaceUser&quot;&gt;QPlaceUser&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="fbb2880d34d731a30eed3b4c834ee8f69151d88a" translate="yes" xml:space="preserve">
          <source>bool QPlaceUser::operator==(const &lt;a href=&quot;qplaceuser#QPlaceUser&quot;&gt;QPlaceUser&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QPlaceUser :: operator == (const &lt;a href=&quot;qplaceuser#QPlaceUser&quot;&gt;QPlaceUser&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="c62b688da509da5769da14c1a3927698dc97dc5d" translate="yes" xml:space="preserve">
          <source>bool QPlainTextEdit::canPaste() const</source>
          <target state="translated">bool QPlainTextEdit::canPaste()const</target>
        </trans-unit>
        <trans-unit id="84c6f39877409a13197d509f8fc5c2a573436c6f" translate="yes" xml:space="preserve">
          <source>bool QPlainTextEdit::find(const &lt;a href=&quot;qregexp&quot;&gt;QRegExp&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QPlainTextEdit :: find (const &lt;a href=&quot;qregexp&quot;&gt;QRegExp&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="76a161ee39ccc0c14cb45d12571b2b1aeddc98c3" translate="yes" xml:space="preserve">
          <source>bool QPlainTextEdit::find(const &lt;a href=&quot;qregularexpression&quot;&gt;QRegularExpression&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QPlainTextEdit :: find (const &lt;a href=&quot;qregularexpression&quot;&gt;QRegularExpression&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="d396c3d41dfd6df88bac1f4bb3a6d36434401b43" translate="yes" xml:space="preserve">
          <source>bool QPlainTextEdit::find(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QPlainTextEdit :: find (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="ba8509c7207f5aa9c7b69e7b8adf2ffd407f2ab7" translate="yes" xml:space="preserve">
          <source>bool QPluginLoader::isLoaded() const</source>
          <target state="translated">bool QPluginLoader::isLoaded()const</target>
        </trans-unit>
        <trans-unit id="d6b11b081beca06885696b8e7f99dc09ef601ccc" translate="yes" xml:space="preserve">
          <source>bool QPluginLoader::load()</source>
          <target state="translated">bool QPluginLoader::load()</target>
        </trans-unit>
        <trans-unit id="0d560081e8fad87db2586828edc90c6f7953bc7b" translate="yes" xml:space="preserve">
          <source>bool QPluginLoader::unload()</source>
          <target state="translated">bool QPluginLoader::unload()</target>
        </trans-unit>
        <trans-unit id="3c3004ef0850bd15a0e735d00c82aa997dd9a1cc" translate="yes" xml:space="preserve">
          <source>bool QPoint::isNull() const</source>
          <target state="translated">bool QPoint::isNull()const</target>
        </trans-unit>
        <trans-unit id="016fab800c8d7f8e793773a69c5aa02fd9145edb" translate="yes" xml:space="preserve">
          <source>bool QPoint::operator!=(const &lt;a href=&quot;qpoint#QPoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QPoint :: operador! = (const &lt;a href=&quot;qpoint#QPoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="62e61c3e86abd25c2d857f946847216d4c83f028" translate="yes" xml:space="preserve">
          <source>bool QPoint::operator==(const &lt;a href=&quot;qpoint#QPoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QPoint :: operador == (const &lt;a href=&quot;qpoint#QPoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="8073be4209335b4d3ff7d8897ccd6ca576f78102" translate="yes" xml:space="preserve">
          <source>bool QPointF::isNull() const</source>
          <target state="translated">bool QPointF::isNull()const</target>
        </trans-unit>
        <trans-unit id="9e2c3389fb5be6f5b1eaac807db51c56c7d711a9" translate="yes" xml:space="preserve">
          <source>bool QPointF::operator!=(const &lt;a href=&quot;qpointf#QPointF&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QPointF :: operador! = (const &lt;a href=&quot;qpointf#QPointF&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="7b1caa224ce4f3fe3033fba55e31d4f98887b984" translate="yes" xml:space="preserve">
          <source>bool QPointF::operator==(const &lt;a href=&quot;qpointf#QPointF&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QPointF :: operador == (const &lt;a href=&quot;qpointf#QPointF&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="995d70bb78c23becae04b3e4b4628cebfaf28a0e" translate="yes" xml:space="preserve">
          <source>bool QPointer::isNull() const</source>
          <target state="translated">bool QPointer::isNull()const</target>
        </trans-unit>
        <trans-unit id="5dc0bce4733112a0ebcc67567ecae656365dd134" translate="yes" xml:space="preserve">
          <source>bool QPointer::operator!=(T *</source>
          <target state="translated">bool QPointer::¡operador! =(T *</target>
        </trans-unit>
        <trans-unit id="3f23bc6d7576ea601c8016e5b1d31cbef2c7956a" translate="yes" xml:space="preserve">
          <source>bool QPointer::operator!=(const &lt;a href=&quot;qpointer#QPointer&quot;&gt;QPointer&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="translated">bool QPointer :: operator! = (const &lt;a href=&quot;qpointer#QPointer&quot;&gt;QPointer&lt;/a&gt; &amp;lt;T&amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="7e01a0a670e9a1c095085d05c1234241d9e20483" translate="yes" xml:space="preserve">
          <source>bool QPointer::operator!=(const T *</source>
          <target state="translated">bool QPointer::operador!=(const T *</target>
        </trans-unit>
        <trans-unit id="32bb483afbf2a45110ec08151447fb03def16af0" translate="yes" xml:space="preserve">
          <source>bool QPointer::operator==(T *</source>
          <target state="translated">bool QPointer::operador==(T *)</target>
        </trans-unit>
        <trans-unit id="d018a1fd3dab10c4c3f8e31783bcaaba07d37c9b" translate="yes" xml:space="preserve">
          <source>bool QPointer::operator==(const &lt;a href=&quot;qpointer#QPointer&quot;&gt;QPointer&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="translated">bool QPointer :: operator == (const &lt;a href=&quot;qpointer#QPointer&quot;&gt;QPointer&lt;/a&gt; &amp;lt;T&amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="b0e97b00e8055e9ea101f3157f659c92f93fd831" translate="yes" xml:space="preserve">
          <source>bool QPointer::operator==(const T *</source>
          <target state="translated">bool QPointer::operator==(const T *</target>
        </trans-unit>
        <trans-unit id="44d835050ff889c50dfd8aac6d24061fac92c671" translate="yes" xml:space="preserve">
          <source>bool QPointerEvent::addPassiveGrabber(const &lt;a href=&quot;qeventpoint&quot;&gt;QEventPoint&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d932074271acbfc91e1d887e3ef1869857bc7e7e" translate="yes" xml:space="preserve">
          <source>bool QPointerEvent::allPointsAccepted() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3988a31f09ac34a670d30e9e40dabc57fe4b1c37" translate="yes" xml:space="preserve">
          <source>bool QPointerEvent::allPointsGrabbed() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab67b021bdc7011b43bbfc81991e7e6754d2f87d" translate="yes" xml:space="preserve">
          <source>bool QPointerEvent::removePassiveGrabber(const &lt;a href=&quot;qeventpoint&quot;&gt;QEventPoint&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0470e1d5e9f157ddec0396cc4f04463ed3d4f2ac" translate="yes" xml:space="preserve">
          <source>bool QPointingDeviceUniqueId::isValid() const</source>
          <target state="translated">bool QPointingDeviceUniqueId::isValid()const</target>
        </trans-unit>
        <trans-unit id="31fecde44e82600feeac1c0dc7934b3c13edafac" translate="yes" xml:space="preserve">
          <source>bool QPointingDeviceUniqueId::operator!=(&lt;a href=&quot;qpointingdeviceuniqueid#QPointingDeviceUniqueId&quot;&gt;QPointingDeviceUniqueId&lt;/a&gt;</source>
          <target state="translated">bool QPointingDeviceUniqueId :: operator! = ( &lt;a href=&quot;qpointingdeviceuniqueid#QPointingDeviceUniqueId&quot;&gt;QPointingDeviceUniqueId&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="edcf8bffeb46d96a0c70769ee71fc2e2da673be3" translate="yes" xml:space="preserve">
          <source>bool QPointingDeviceUniqueId::operator==(&lt;a href=&quot;qpointingdeviceuniqueid#QPointingDeviceUniqueId&quot;&gt;QPointingDeviceUniqueId&lt;/a&gt;</source>
          <target state="translated">bool QPointingDeviceUniqueId :: operator == ( &lt;a href=&quot;qpointingdeviceuniqueid#QPointingDeviceUniqueId&quot;&gt;QPointingDeviceUniqueId&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="feff011a3e832aabf302b231c027fb4cfda8e915" translate="yes" xml:space="preserve">
          <source>bool QPolygon::containsPoint(const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QPolygon :: containsPoint (const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="2c965dfe9e3c1b49d89254cc263377fcbe40ec38" translate="yes" xml:space="preserve">
          <source>bool QPolygon::intersects(const &lt;a href=&quot;qpolygon#QPolygon&quot;&gt;QPolygon&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QPolygon :: intersects (const &lt;a href=&quot;qpolygon#QPolygon&quot;&gt;QPolygon&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="49348af06f5d2f7dd1d6aa468a62307e4d88bd97" translate="yes" xml:space="preserve">
          <source>bool QPolygonF::containsPoint(const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QPolygonF :: containsPoint (const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="ecefc2850330396d9b33eca62d2a308f432fa8db" translate="yes" xml:space="preserve">
          <source>bool QPolygonF::intersects(const &lt;a href=&quot;qpolygonf#QPolygonF&quot;&gt;QPolygonF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QPolygonF :: intersects (const &lt;a href=&quot;qpolygonf#QPolygonF&quot;&gt;QPolygonF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="621f935ee6825b515e00d878e98d79830bb2dabb" translate="yes" xml:space="preserve">
          <source>bool QPolygonF::isClosed() const</source>
          <target state="translated">bool QPolygonF::isClosed()const</target>
        </trans-unit>
        <trans-unit id="743afc43cb120d6deed3d490d6c1890b7acae3ac" translate="yes" xml:space="preserve">
          <source>bool QPrintDialog::testOption(&lt;a href=&quot;qabstractprintdialog#PrintDialogOption-enum&quot;&gt;QAbstractPrintDialog::PrintDialogOption&lt;/a&gt;</source>
          <target state="translated">bool QPrintDialog :: testOption ( &lt;a href=&quot;qabstractprintdialog#PrintDialogOption-enum&quot;&gt;QAbstractPrintDialog :: PrintDialogOption&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7f71f29f9e07ad337efb6b88bad0f8aaabfe5c38" translate="yes" xml:space="preserve">
          <source>bool QPrinter::abort()</source>
          <target state="translated">bool QPrinter::abortar()</target>
        </trans-unit>
        <trans-unit id="190df5446ac348f4d4e9849545e1b4b19d965cf3" translate="yes" xml:space="preserve">
          <source>bool QPrinter::collateCopies() const</source>
          <target state="translated">bool QPrinter::collateCopies()const</target>
        </trans-unit>
        <trans-unit id="33741e1e564052a02ae9815fab25443f06a42d63" translate="yes" xml:space="preserve">
          <source>bool QPrinter::fontEmbeddingEnabled() const</source>
          <target state="translated">bool QPrinter::fontEmbeddingEnabled()const</target>
        </trans-unit>
        <trans-unit id="1ad8a5568aab861a07b21db0189a1b72967e35f5" translate="yes" xml:space="preserve">
          <source>bool QPrinter::fullPage() const</source>
          <target state="translated">bool QPrinter::fullPage()const</target>
        </trans-unit>
        <trans-unit id="98edd138899a3f95db5ab43d6827fad6bad4cfdc" translate="yes" xml:space="preserve">
          <source>bool QPrinter::isValid() const</source>
          <target state="translated">bool QPrinter::isValid()const</target>
        </trans-unit>
        <trans-unit id="dfc6a3abfc7043dde163a2a1b5adef0cc1d1adcb" translate="yes" xml:space="preserve">
          <source>bool QPrinter::setPageLayout(const &lt;a href=&quot;qpagelayout&quot;&gt;QPageLayout&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QPrinter :: setPageLayout (const &lt;a href=&quot;qpagelayout&quot;&gt;QPageLayout&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="1d950e250b60b607ed24e611500876c0b4b923a6" translate="yes" xml:space="preserve">
          <source>bool QPrinter::setPageMargins(const &lt;a href=&quot;qmarginsf&quot;&gt;QMarginsF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QPrinter :: setPageMargins (const &lt;a href=&quot;qmarginsf&quot;&gt;QMarginsF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="233a3d3acc0358029868511556e5ee859037a9f6" translate="yes" xml:space="preserve">
          <source>bool QPrinter::setPageOrientation(&lt;a href=&quot;qpagelayout#Orientation-enum&quot;&gt;QPageLayout::Orientation&lt;/a&gt;</source>
          <target state="translated">bool QPrinter :: setPageOrientation ( &lt;a href=&quot;qpagelayout#Orientation-enum&quot;&gt;QPageLayout :: Orientaci&amp;oacute;n&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d9f002b94aaaf84f5017fb5cf1286c6735284b6f" translate="yes" xml:space="preserve">
          <source>bool QPrinter::setPageSize(const &lt;a href=&quot;qpagesize&quot;&gt;QPageSize&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QPrinter :: setPageSize (const &lt;a href=&quot;qpagesize&quot;&gt;QPageSize&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="23bab0b2319fc3b6bf7214838afa7a111baab91b" translate="yes" xml:space="preserve">
          <source>bool QPrinter::supportsMultipleCopies() const</source>
          <target state="translated">bool QPrinter::supportsMultipleCopies()const</target>
        </trans-unit>
        <trans-unit id="8978a5a6a944e6585b213bc2ad2ba33cae2a53ff" translate="yes" xml:space="preserve">
          <source>bool QPrinterInfo::isDefault() const</source>
          <target state="translated">bool QPrinterInfo::isDefault()const</target>
        </trans-unit>
        <trans-unit id="ac5c78d18b31d4427d6cedb762e47d326ada779a" translate="yes" xml:space="preserve">
          <source>bool QPrinterInfo::isNull() const</source>
          <target state="translated">bool QPrinterInfo::isNull()const</target>
        </trans-unit>
        <trans-unit id="7cddc2e43238932b949b35a8d53dfeafe73e0fc1" translate="yes" xml:space="preserve">
          <source>bool QPrinterInfo::isRemote() const</source>
          <target state="translated">bool QPrinterInfo::isRemote()const</target>
        </trans-unit>
        <trans-unit id="53e45ea77d67ab89fd9bb925dbeb36710e9faf64" translate="yes" xml:space="preserve">
          <source>bool QPrinterInfo::supportsCustomPageSizes() const</source>
          <target state="translated">bool QPrinterInfo::supportsCustomPageSizes()const</target>
        </trans-unit>
        <trans-unit id="c036432210e4689feb59ff416b50881a5fb069ba" translate="yes" xml:space="preserve">
          <source>bool QProcess::startDetached(&lt;a href=&quot;qtglobal#qint64-typedef&quot;&gt;qint64&lt;/a&gt; *</source>
          <target state="translated">bool QProcess :: startDetached ( &lt;a href=&quot;qtglobal#qint64-typedef&quot;&gt;qint64&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="d8e72c28bc9da29a7099de495134365e781a70ff" translate="yes" xml:space="preserve">
          <source>bool QProcess::waitForFinished(int</source>
          <target state="translated">bool QProcess::waitForFinished(int</target>
        </trans-unit>
        <trans-unit id="b99af6f0c6fadc3411b6f71ce1aee3b4685c5125" translate="yes" xml:space="preserve">
          <source>bool QProcess::waitForStarted(int</source>
          <target state="translated">bool QProcess::waitForStarted(int</target>
        </trans-unit>
        <trans-unit id="97011ba36585ae8935ee7949cbc74cae1c4aa1b5" translate="yes" xml:space="preserve">
          <source>bool QProcessEnvironment::contains(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QProcessEnvironment :: contiene (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="12cbecf95ab6b87f47746863f9748d450bd75934" translate="yes" xml:space="preserve">
          <source>bool QProcessEnvironment::isEmpty() const</source>
          <target state="translated">bool QProcessEnvironment::isEmpty()const</target>
        </trans-unit>
        <trans-unit id="d4a40a584b8ada6f5560cbadcbcd1eced83b4438" translate="yes" xml:space="preserve">
          <source>bool QProcessEnvironment::operator!=(const &lt;a href=&quot;qprocessenvironment#QProcessEnvironment&quot;&gt;QProcessEnvironment&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QProcessEnvironment :: operator! = (const &lt;a href=&quot;qprocessenvironment#QProcessEnvironment&quot;&gt;QProcessEnvironment&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="fca4a9ee0ca4da36578f5f5c99317f5581780ca1" translate="yes" xml:space="preserve">
          <source>bool QProcessEnvironment::operator==(const &lt;a href=&quot;qprocessenvironment#QProcessEnvironment&quot;&gt;QProcessEnvironment&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QProcessEnvironment :: operator == (const &lt;a href=&quot;qprocessenvironment#QProcessEnvironment&quot;&gt;QProcessEnvironment&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="1605fd715cd9b4b8b623818b226041e05a1e8018" translate="yes" xml:space="preserve">
          <source>bool QPromise::addResult(T &amp;amp;&amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff87fc9151868593e92602c14b607469b1a0cb0a" translate="yes" xml:space="preserve">
          <source>bool QPromise::addResult(const T &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4ad302877f0e3d58f60091353f8eb870cbad768" translate="yes" xml:space="preserve">
          <source>bool QPromise::isCanceled() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5ceba1f386050aa11f448921844b31925dd1ea4" translate="yes" xml:space="preserve">
          <source>bool QProperty::setBinding(const QUntypedPropertyBinding &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81aed647d081fecfe772340281713713c81ac1e7" translate="yes" xml:space="preserve">
          <source>bool QPropertyAlias::hasBinding() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0acb04345005570add9342720aef23dcf8bbac1" translate="yes" xml:space="preserve">
          <source>bool QPropertyAlias::isValid() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0584b3c3da95668374af2ff846c457f3a357a0a6" translate="yes" xml:space="preserve">
          <source>bool QPropertyAlias::setBinding(const QUntypedPropertyBinding &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d0e2e0a49eb887a8ddea048342c3cad77416488" translate="yes" xml:space="preserve">
          <source>bool QQmlComponent::isError() const</source>
          <target state="translated">bool QQmlComponente::isError()const</target>
        </trans-unit>
        <trans-unit id="92aef4b4e09af5e369506cdbd83b550aeb5b6ae6" translate="yes" xml:space="preserve">
          <source>bool QQmlComponent::isLoading() const</source>
          <target state="translated">bool QQmlComponente::isLoading()const</target>
        </trans-unit>
        <trans-unit id="fdb76e501a5c9aa864e6bf50d28f8452d2b7538a" translate="yes" xml:space="preserve">
          <source>bool QQmlComponent::isNull() const</source>
          <target state="translated">bool QQmlComponente::isNull()const</target>
        </trans-unit>
        <trans-unit id="0205df8a3d34cd90ada70794093179accb11e627" translate="yes" xml:space="preserve">
          <source>bool QQmlComponent::isReady() const</source>
          <target state="translated">bool QQmlComponente::isReady()const</target>
        </trans-unit>
        <trans-unit id="75e9668c0a78779a55bca5b92f0130b8fbb5a03e" translate="yes" xml:space="preserve">
          <source>bool QQmlContext::isValid() const</source>
          <target state="translated">bool QQmlContexto::isVálido()const</target>
        </trans-unit>
        <trans-unit id="ca7cad0c21b8c4f4eda2dc201ff8c8edb5604cba" translate="yes" xml:space="preserve">
          <source>bool QQmlEngine::importPlugin(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QQmlEngine :: importPlugin (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="0fff091d3123f829030a36647af4aaac9a1618c9" translate="yes" xml:space="preserve">
          <source>bool QQmlEngine::outputWarningsToStandardError() const</source>
          <target state="translated">bool QQmlMotor::outputWarningsToStandardError()const</target>
        </trans-unit>
        <trans-unit id="7ebe0a0773044d1aa7f3d5513e617fa67f55756d" translate="yes" xml:space="preserve">
          <source>bool QQmlEngine::qmlProtectModule(const char *</source>
          <target state="translated">bool QQmlMotor::qmlProtegerMódulo(const char *</target>
        </trans-unit>
        <trans-unit id="0ec85373b9f5f5d4f044406eb27b4a860916dccf" translate="yes" xml:space="preserve">
          <source>bool QQmlError::isValid() const</source>
          <target state="translated">bool QQmlError::isValid()const</target>
        </trans-unit>
        <trans-unit id="e09524796a4d7797549b5e6ed2297a6817adeb75" translate="yes" xml:space="preserve">
          <source>bool QQmlExpression::hasError() const</source>
          <target state="translated">bool QQmlExpresión::hasError()const</target>
        </trans-unit>
        <trans-unit id="a6a506b03b0c1c32b984d4ad1cf26d9f640b6ddc" translate="yes" xml:space="preserve">
          <source>bool QQmlExpression::notifyOnValueChanged() const</source>
          <target state="translated">bool QQmlExpresión::notifyOnValueChanged()const</target>
        </trans-unit>
        <trans-unit id="53187500c5c8902545770b0d5f321288df07cd77" translate="yes" xml:space="preserve">
          <source>bool QQmlIncubator::isError() const</source>
          <target state="translated">bool QQmlIncubadora::isError()const</target>
        </trans-unit>
        <trans-unit id="9371092d72951b663009f5393f38fc0f7fe02eb6" translate="yes" xml:space="preserve">
          <source>bool QQmlIncubator::isLoading() const</source>
          <target state="translated">bool QQmlIncubadora::isLoading()const</target>
        </trans-unit>
        <trans-unit id="b9f01c93f25e7f4bbb616d266fde9cf598779507" translate="yes" xml:space="preserve">
          <source>bool QQmlIncubator::isNull() const</source>
          <target state="translated">bool QQmlIncubadora::isNull()const</target>
        </trans-unit>
        <trans-unit id="7fb8573eb4a64c2dc4c6b8e9e7fec35663e18087" translate="yes" xml:space="preserve">
          <source>bool QQmlIncubator::isReady() const</source>
          <target state="translated">bool QQmlIncubadora::isReady()const</target>
        </trans-unit>
        <trans-unit id="ebca213584406327b2877eb0238bfc9067ec1dd3" translate="yes" xml:space="preserve">
          <source>bool QQmlListProperty::operator==(const QQmlListProperty&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="translated">bool QQmlListProperty :: operator == (const QQmlListProperty &amp;lt;T&amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="17e6f54f6c4f12f9c159a67ab23d4ac80bded53c" translate="yes" xml:space="preserve">
          <source>bool QQmlListReference::append(&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="translated">bool QQmlListReference :: append ( &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="2e3e291fa070add3d503d0c5cf719a2c48fa177c" translate="yes" xml:space="preserve">
          <source>bool QQmlListReference::canAppend() const</source>
          <target state="translated">bool QQmlListReferencia::canAppend()const</target>
        </trans-unit>
        <trans-unit id="cb2704a6a09fa988282bdf330af1bd2d1774501e" translate="yes" xml:space="preserve">
          <source>bool QQmlListReference::canAt() const</source>
          <target state="translated">bool QQmlListReferencia::canAt()const</target>
        </trans-unit>
        <trans-unit id="76bb9384cd40f167e86ce379b677f607676b42e9" translate="yes" xml:space="preserve">
          <source>bool QQmlListReference::canClear() const</source>
          <target state="translated">bool QQmlListReferencia::canClear()const</target>
        </trans-unit>
        <trans-unit id="42df3e1781ad4595e2b30f649f51678f2d2b593d" translate="yes" xml:space="preserve">
          <source>bool QQmlListReference::canCount() const</source>
          <target state="translated">bool QQmlListReferencia::canCount()const</target>
        </trans-unit>
        <trans-unit id="fc6b44e883b1d67916a67d8fb0a45cb9ef0bd8e4" translate="yes" xml:space="preserve">
          <source>bool QQmlListReference::canRemoveLast() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f97907ea2fe134f3c2de94b58757a8f536ee2d0d" translate="yes" xml:space="preserve">
          <source>bool QQmlListReference::canReplace() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e143c5de6bd9afb304cb1db5ce921fca829cdc09" translate="yes" xml:space="preserve">
          <source>bool QQmlListReference::clear() const</source>
          <target state="translated">bool QQmlListReferencia::clear()const</target>
        </trans-unit>
        <trans-unit id="c7064758f94a10689d520dd14aa556230c88ca62" translate="yes" xml:space="preserve">
          <source>bool QQmlListReference::isManipulable() const</source>
          <target state="translated">bool QQmlListReferencia::esManipulable()const</target>
        </trans-unit>
        <trans-unit id="aaf69fab05937186f2096c42050af98d4fa107c3" translate="yes" xml:space="preserve">
          <source>bool QQmlListReference::isReadable() const</source>
          <target state="translated">bool QQmlListReferencia::isReadable()const</target>
        </trans-unit>
        <trans-unit id="46b5c9e72f453ac1d1aace59aab754c8b48faff1" translate="yes" xml:space="preserve">
          <source>bool QQmlListReference::isValid() const</source>
          <target state="translated">bool QQmlListReferencia::isValid()const</target>
        </trans-unit>
        <trans-unit id="dc5e2415ed9f25f8c1da8d7e35b04e91aff80de7" translate="yes" xml:space="preserve">
          <source>bool QQmlListReference::operator==(const &lt;a href=&quot;qqmllistreference#QQmlListReference&quot;&gt;QQmlListReference&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc43922322641f081926b57d7e8d9a8fcfecaab8" translate="yes" xml:space="preserve">
          <source>bool QQmlListReference::removeLast() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53cdf4c45ab9f0db5dbe4dc31165cacab4fa8827" translate="yes" xml:space="preserve">
          <source>bool QQmlListReference::replace(int</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90e9b30938d2bc311f4742b25195cd892111c3d6" translate="yes" xml:space="preserve">
          <source>bool QQmlListReference::replace(qsizetype</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92642ee32c60e0aff988a3af8adf5fada84d0e40" translate="yes" xml:space="preserve">
          <source>bool QQmlProperty::connectNotifySignal(&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="translated">bool QQmlProperty :: connectNotifySignal ( &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="14fb4e7ded305387ba6b0dd94afcfb866a154e5b" translate="yes" xml:space="preserve">
          <source>bool QQmlProperty::hasNotifySignal() const</source>
          <target state="translated">bool QQmlPropiedad::hasNotificarSeñal()const</target>
        </trans-unit>
        <trans-unit id="cba12679ef1d0edf543c3856c3bacfab6cb94246" translate="yes" xml:space="preserve">
          <source>bool QQmlProperty::isDesignable() const</source>
          <target state="translated">bool QQmlPropiedad::isDeseñable()const</target>
        </trans-unit>
        <trans-unit id="91f30f6331c0114bc3e5aace26b60efe22832bc1" translate="yes" xml:space="preserve">
          <source>bool QQmlProperty::isProperty() const</source>
          <target state="translated">bool QQmlProperty::isProperty()const</target>
        </trans-unit>
        <trans-unit id="d49d68404076641f4ce9636dfaaca89eed379e60" translate="yes" xml:space="preserve">
          <source>bool QQmlProperty::isResettable() const</source>
          <target state="translated">bool QQmlPropiedad::esResettable()const</target>
        </trans-unit>
        <trans-unit id="220e002f34d1f7b3f6c6f2123d547d742f98d894" translate="yes" xml:space="preserve">
          <source>bool QQmlProperty::isSignalProperty() const</source>
          <target state="translated">bool QQmlProperty::isSignalProperty()const</target>
        </trans-unit>
        <trans-unit id="04c1b7cd3d8d2329b7c7ace7821f49ae91b023cd" translate="yes" xml:space="preserve">
          <source>bool QQmlProperty::isValid() const</source>
          <target state="translated">bool QQmlPropiedad::isVálido()const</target>
        </trans-unit>
        <trans-unit id="a07dccb438778fb351899d515fd8ca914e700633" translate="yes" xml:space="preserve">
          <source>bool QQmlProperty::isWritable() const</source>
          <target state="translated">bool QQmlPropiedad::isWritable()const</target>
        </trans-unit>
        <trans-unit id="9bb74d557954dd78e59d66786ef08876baa03647" translate="yes" xml:space="preserve">
          <source>bool QQmlProperty::needsNotifySignal() const</source>
          <target state="translated">bool QQmlPropiedad::necesitaNotificarSeñal()const</target>
        </trans-unit>
        <trans-unit id="81b008e277f3596ebbc26da03088b0209f7ffd41" translate="yes" xml:space="preserve">
          <source>bool QQmlProperty::operator==(const &lt;a href=&quot;qqmlproperty#QQmlProperty&quot;&gt;QQmlProperty&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QQmlProperty :: operator == (const &lt;a href=&quot;qqmlproperty#QQmlProperty&quot;&gt;QQmlProperty&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="c59c0b812710c18138a6393650960cd2fb7d25f0" translate="yes" xml:space="preserve">
          <source>bool QQmlProperty::reset() const</source>
          <target state="translated">bool QQmlPropiedad::reset()const</target>
        </trans-unit>
        <trans-unit id="58b293bc37e574ef3368873fd7295f0173624b1b" translate="yes" xml:space="preserve">
          <source>bool QQmlProperty::write(const &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QQmlProperty :: write (const &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="f0716a101e571258cbef5cf8fc7a46b5fde1f97d" translate="yes" xml:space="preserve">
          <source>bool QQmlPropertyMap::contains(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QQmlPropertyMap :: contiene (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="d1800943da7891ed216b9c09a37fb9596835ea03" translate="yes" xml:space="preserve">
          <source>bool QQmlPropertyMap::isEmpty() const</source>
          <target state="translated">bool QQmlPropertyMap::isEmpty()const</target>
        </trans-unit>
        <trans-unit id="bc90d29be76bf2c0acadc5f1376f81ef09196429" translate="yes" xml:space="preserve">
          <source>bool QQmlScriptString::booleanLiteral(bool *</source>
          <target state="translated">bool QQmlScriptString::booleanLiteral(bool *)</target>
        </trans-unit>
        <trans-unit id="60f0f3b9174446835abebc620466e3e65a32e18a" translate="yes" xml:space="preserve">
          <source>bool QQmlScriptString::isEmpty() const</source>
          <target state="translated">bool QQmlScriptString::isEmpty()const</target>
        </trans-unit>
        <trans-unit id="e680d0a8d986721ca5e2f9e7c248d19b9aeed516" translate="yes" xml:space="preserve">
          <source>bool QQmlScriptString::isNullLiteral() const</source>
          <target state="translated">bool QQmlScriptString::isNullLiteral()const</target>
        </trans-unit>
        <trans-unit id="dbb0d6ed037e6603ea0baa43061a2fef1a57fc28" translate="yes" xml:space="preserve">
          <source>bool QQmlScriptString::isUndefinedLiteral() const</source>
          <target state="translated">bool QQmlScriptString::isUndefinedLiteral()const</target>
        </trans-unit>
        <trans-unit id="3af5ee689e8b139cafb4a4dfc9bd5a7f0dcf0a88" translate="yes" xml:space="preserve">
          <source>bool QQmlScriptString::operator!=(const &lt;a href=&quot;qqmlscriptstring#QQmlScriptString&quot;&gt;QQmlScriptString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QQmlScriptString :: operator! = (const &lt;a href=&quot;qqmlscriptstring#QQmlScriptString&quot;&gt;QQmlScriptString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="8f655e09205efe04c87caed549021f6ea5af5611" translate="yes" xml:space="preserve">
          <source>bool QQmlScriptString::operator==(const &lt;a href=&quot;qqmlscriptstring#QQmlScriptString&quot;&gt;QQmlScriptString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QQmlScriptString :: operator == (const &lt;a href=&quot;qqmlscriptstring#QQmlScriptString&quot;&gt;QQmlScriptString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="4362aa8fe485384ef3e9dc798ccb354925865847" translate="yes" xml:space="preserve">
          <source>bool QQuaternion::isIdentity() const</source>
          <target state="translated">bool QQuaternion::isIdentidad()const</target>
        </trans-unit>
        <trans-unit id="837770d404a9a6ad0e9ba3c2d0f881b13c3a3438" translate="yes" xml:space="preserve">
          <source>bool QQuaternion::isNull() const</source>
          <target state="translated">bool QQuaternion::isNull()const</target>
        </trans-unit>
        <trans-unit id="e7e266c324895ffe3336de6f1b8ee78538045ed9" translate="yes" xml:space="preserve">
          <source>bool QQuaternion::operator!=(const &lt;a href=&quot;qquaternion#QQuaternion&quot;&gt;QQuaternion&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QQuaternion :: operator! = (const &lt;a href=&quot;qquaternion#QQuaternion&quot;&gt;QQuaternion&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="bc79619864afbd7783e2a57efd018c47a97722a8" translate="yes" xml:space="preserve">
          <source>bool QQuaternion::operator==(const &lt;a href=&quot;qquaternion#QQuaternion&quot;&gt;QQuaternion&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QQuaternion :: operator == (const &lt;a href=&quot;qquaternion#QQuaternion&quot;&gt;QQuaternion&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="0a1a5dc60460fa366f8740c076ada51fda2d13b6" translate="yes" xml:space="preserve">
          <source>bool QQuaternion::qFuzzyCompare(const &lt;a href=&quot;qquaternion#QQuaternion&quot;&gt;QQuaternion&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QQuaternion :: qFuzzyCompare (const &lt;a href=&quot;qquaternion#QQuaternion&quot;&gt;QQuaternion&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="2eb7e6a06128883010385b1ddab5607f6d2510a6" translate="yes" xml:space="preserve">
          <source>bool QQuick3DTextureData::hasTransparency() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91de260a1accf0482c5b6baf3894e555e3d54930" translate="yes" xml:space="preserve">
          <source>bool QQuickGraphicsConfiguration::isDepthBufferEnabledFor2D() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e62009d177380e2c63ed7065678f1c172ad8ab1" translate="yes" xml:space="preserve">
          <source>bool QQuickGraphicsDevice::isNull() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b30bbf2d83ee2ecddd87794172e6ad5147b765c" translate="yes" xml:space="preserve">
          <source>bool QQuickItem::acceptHoverEvents() const</source>
          <target state="translated">bool QQuickItem::acceptHoverEvents()const</target>
        </trans-unit>
        <trans-unit id="ac53b7a953bcf920a241c9e8f88d411f5b9b4ac9" translate="yes" xml:space="preserve">
          <source>bool QQuickItem::acceptTouchEvents() const</source>
          <target state="translated">bool QQuickItem::acceptTouchEvents()const</target>
        </trans-unit>
        <trans-unit id="ea6961a2683153084a3b93cb179f360103f54f95" translate="yes" xml:space="preserve">
          <source>bool QQuickItem::filtersChildMouseEvents() const</source>
          <target state="translated">bool QQuickItem::filtrosChildMouseEvents()const</target>
        </trans-unit>
        <trans-unit id="e5ffe3d723f4061579858018a9bfd90a1fd09085" translate="yes" xml:space="preserve">
          <source>bool QQuickItem::isAncestorOf(const &lt;a href=&quot;qquickitem#QQuickItem&quot;&gt;QQuickItem&lt;/a&gt; *</source>
          <target state="translated">bool QQuickItem :: isAncestorOf (const &lt;a href=&quot;qquickitem#QQuickItem&quot;&gt;QQuickItem&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="1712bd3924cc910c1e7cbf24991cef79dc966bfc" translate="yes" xml:space="preserve">
          <source>bool QQuickItem::isFocusScope() const</source>
          <target state="translated">bool QQuickItem::isFocusScope()const</target>
        </trans-unit>
        <trans-unit id="4bd2ef3c006b1fccf6de2e8449bdbe1008c49c73" translate="yes" xml:space="preserve">
          <source>bool QQuickItem::keepMouseGrab() const</source>
          <target state="translated">bool QQuickItem::keepMouseGrab()const</target>
        </trans-unit>
        <trans-unit id="ed7bcd6abccb959827822cbfa5a7c20faf0dffea" translate="yes" xml:space="preserve">
          <source>bool QQuickItem::keepTouchGrab() const</source>
          <target state="translated">bool QQuickItem::keepTouchGrab()const</target>
        </trans-unit>
        <trans-unit id="1f20a413b1711fa2b193609e6f29d77a961f60c6" translate="yes" xml:space="preserve">
          <source>bool QQuickItemGrabResult::saveToFile(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QQuickItemGrabResult :: saveToFile (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="1d4adbbaa7160214fb65c9e10bebf57437088a2c" translate="yes" xml:space="preserve">
          <source>bool QQuickPaintedItem::antialiasing() const</source>
          <target state="translated">bool QQuickPaintedItem::antialiasing()const</target>
        </trans-unit>
        <trans-unit id="745e98ebe670964dd557dc111a1197a83455ac41" translate="yes" xml:space="preserve">
          <source>bool QQuickPaintedItem::mipmap() const</source>
          <target state="translated">bool QQuickPaintedItem::mipmap()const</target>
        </trans-unit>
        <trans-unit id="5041c34b4a90e6583ce32fad4b11ca3849942493" translate="yes" xml:space="preserve">
          <source>bool QQuickPaintedItem::opaquePainting() const</source>
          <target state="translated">bool QQuickPaintedItem::pintura opaca()const</target>
        </trans-unit>
        <trans-unit id="e8d0174c6b45b61aab132dfa5a70a7c2d601c9c6" translate="yes" xml:space="preserve">
          <source>bool QQuickRenderControl::sync()</source>
          <target state="translated">bool QQuickRenderControl::sync()</target>
        </trans-unit>
        <trans-unit id="8af98d12c923ad08ffa63f701df976376dbee9c3" translate="yes" xml:space="preserve">
          <source>bool QQuickRenderTarget::isNull() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b66b509a53da66581f99e7cd9ac4316491619fb" translate="yes" xml:space="preserve">
          <source>bool QQuickTest::qIsPolishScheduled(const &lt;a href=&quot;qquickitem&quot;&gt;QQuickItem&lt;/a&gt; *</source>
          <target state="translated">bool QQuickTest :: qIsPolishScheduled (const &lt;a href=&quot;qquickitem&quot;&gt;QQuickItem&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="6c2b7600848640d04a630f4a8c386533908b964b" translate="yes" xml:space="preserve">
          <source>bool QQuickTest::qWaitForItemPolished(const &lt;a href=&quot;qquickitem&quot;&gt;QQuickItem&lt;/a&gt; *</source>
          <target state="translated">bool QQuickTest :: qWaitForItemPolished (const &lt;a href=&quot;qquickitem&quot;&gt;QQuickItem&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="1333d1883a1ecebe7b8162a961fb1a7def7f4492" translate="yes" xml:space="preserve">
          <source>bool QQuickWindow::clearBeforeRendering() const</source>
          <target state="translated">bool QQuickWindow::clearBeforeRendering()const</target>
        </trans-unit>
        <trans-unit id="6b829374f688965c42998d63ea6e63966f3a91e2" translate="yes" xml:space="preserve">
          <source>bool QQuickWindow::isPersistentGraphics() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40bd6cc950e3f58a5d123d4c4ba237b0988e1a44" translate="yes" xml:space="preserve">
          <source>bool QQuickWindow::isPersistentOpenGLContext() const</source>
          <target state="translated">bool QQuickWindow::isPersistentOpenGLContext()const</target>
        </trans-unit>
        <trans-unit id="89e00df2578af6e13ff82ef90dbe89695bb0a1c0" translate="yes" xml:space="preserve">
          <source>bool QQuickWindow::isPersistentSceneGraph() const</source>
          <target state="translated">bool QQuickWindow::isPersistentSceneGraph()const</target>
        </trans-unit>
        <trans-unit id="a8e0bbf132efd352fbd40e554501d8589d5c6bd7" translate="yes" xml:space="preserve">
          <source>bool QQuickWindow::isSceneGraphInitialized() const</source>
          <target state="translated">bool QQuickWindow::isSceneGraphInitialized()const</target>
        </trans-unit>
        <trans-unit id="fe55ba230276f6ab8b813218c36ac686b710bc79" translate="yes" xml:space="preserve">
          <source>bool QRadioTuner::isBandSupported(&lt;a href=&quot;qradiotuner#Band-enum&quot;&gt;QRadioTuner::Band&lt;/a&gt;</source>
          <target state="translated">bool QRadioTuner :: isBandSupported ( &lt;a href=&quot;qradiotuner#Band-enum&quot;&gt;QRadioTuner :: Band&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e167e9afe7ac904c6724db36cdbb0a2e51ee93f9" translate="yes" xml:space="preserve">
          <source>bool QRandomGenerator::operator!=(const &lt;a href=&quot;qrandomgenerator#QRandomGenerator&quot;&gt;QRandomGenerator&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QRandomGenerator :: operator! = (const &lt;a href=&quot;qrandomgenerator#QRandomGenerator&quot;&gt;QRandomGenerator&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="fedde1a18546bb9d70b69b6dc9b1c4c708441097" translate="yes" xml:space="preserve">
          <source>bool QRandomGenerator::operator==(const &lt;a href=&quot;qrandomgenerator#QRandomGenerator&quot;&gt;QRandomGenerator&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QRandomGenerator :: operator == (const &lt;a href=&quot;qrandomgenerator#QRandomGenerator&quot;&gt;QRandomGenerator&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="b52721f6ebca9542d91a6a998e36f827eee1740e" translate="yes" xml:space="preserve">
          <source>bool QRawFont::advancesForGlyphIndexes(const &lt;a href=&quot;#quint32-typedef&quot;&gt;quint32&lt;/a&gt; *</source>
          <target state="translated">bool QRawFont :: avancesForGlyphIndexes (const &lt;a href=&quot;#quint32-typedef&quot;&gt;quint32&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="76e0a3d63e567324cafb1d2f7129f7652f95e17d" translate="yes" xml:space="preserve">
          <source>bool QRawFont::advancesForGlyphIndexes(const &lt;a href=&quot;qtglobal#quint32-typedef&quot;&gt;quint32&lt;/a&gt; *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="690a399b1839c74155bc1786eec7140a690b0e83" translate="yes" xml:space="preserve">
          <source>bool QRawFont::glyphIndexesForChars(const &lt;a href=&quot;qchar&quot;&gt;QChar&lt;/a&gt; *</source>
          <target state="translated">bool QRawFont :: glyphIndexesForChars (const &lt;a href=&quot;qchar&quot;&gt;QChar&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="8714eb67edbea872a3b08c5844f0bbdca4841f46" translate="yes" xml:space="preserve">
          <source>bool QRawFont::isValid() const</source>
          <target state="translated">bool QRawFont::isValid()const</target>
        </trans-unit>
        <trans-unit id="80f9f1a6e985cf77cc5d72256088601b45685a0c" translate="yes" xml:space="preserve">
          <source>bool QRawFont::operator!=(const &lt;a href=&quot;qrawfont#QRawFont&quot;&gt;QRawFont&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QRawFont :: operator! = (const &lt;a href=&quot;qrawfont#QRawFont&quot;&gt;QRawFont&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="03a885605327c40f45d5c6b946231a62afccf659" translate="yes" xml:space="preserve">
          <source>bool QRawFont::operator==(const &lt;a href=&quot;qrawfont#QRawFont&quot;&gt;QRawFont&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QRawFont :: operator == (const &lt;a href=&quot;qrawfont#QRawFont&quot;&gt;QRawFont&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="ae9972cefed7b31d531424a26b7773e87437e628" translate="yes" xml:space="preserve">
          <source>bool QRawFont::supportsCharacter(&lt;a href=&quot;#uint-typedef&quot;&gt;uint&lt;/a&gt;</source>
          <target state="translated">bool QRawFont :: supportsCharacter ( &lt;a href=&quot;#uint-typedef&quot;&gt;uint&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="eb93a628f283cfabc0fa83d7cc8768d94c7141c1" translate="yes" xml:space="preserve">
          <source>bool QRawFont::supportsCharacter(&lt;a href=&quot;qchar&quot;&gt;QChar&lt;/a&gt;</source>
          <target state="translated">bool QRawFont :: supportsCharacter ( &lt;a href=&quot;qchar&quot;&gt;QChar&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8aa298dc94eed33dd0da5e1e2496c42c8356ae4e" translate="yes" xml:space="preserve">
          <source>bool QRawFont::supportsCharacter(&lt;a href=&quot;qtglobal#uint-typedef&quot;&gt;uint&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7b666a904a42673d0c80d7245278334b2bf5cde" translate="yes" xml:space="preserve">
          <source>bool QReadWriteLock::tryLockForRead()</source>
          <target state="translated">bool QReadWriteLock::tryLockForRead()</target>
        </trans-unit>
        <trans-unit id="ce2060419840c7e2bce70da1c31c90976eea95d2" translate="yes" xml:space="preserve">
          <source>bool QReadWriteLock::tryLockForRead(int</source>
          <target state="translated">bool QReadWriteLock::tryLockForRead(int</target>
        </trans-unit>
        <trans-unit id="311f14e28293297a28b5528bf2f8489b9522152b" translate="yes" xml:space="preserve">
          <source>bool QReadWriteLock::tryLockForWrite()</source>
          <target state="translated">bool QReadWriteLock::tryLockForWrite()</target>
        </trans-unit>
        <trans-unit id="5482922307262bc64e902ad4f4216c0b066f8b15" translate="yes" xml:space="preserve">
          <source>bool QReadWriteLock::tryLockForWrite(int</source>
          <target state="translated">bool QReadWriteLock::tryLockForWrite(int</target>
        </trans-unit>
        <trans-unit id="2deea3c28d5222859952b14a9c46c6df031553ed" translate="yes" xml:space="preserve">
          <source>bool QRect::contains(const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QRect :: contiene (const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="b3845a81d547c3f0f7d4f8e5e0b3e243f27e5738" translate="yes" xml:space="preserve">
          <source>bool QRect::contains(const &lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QRect :: contiene (const &lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="c16c65a96975dbdd3b912e8e172ea8bb86ab66e3" translate="yes" xml:space="preserve">
          <source>bool QRect::contains(int</source>
          <target state="translated">bool QRect::contiene(int</target>
        </trans-unit>
        <trans-unit id="e6070687978021baf70450c096e9ea7c88481848" translate="yes" xml:space="preserve">
          <source>bool QRect::intersects(const &lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QRect :: intersects (const &lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="eb4f12c609f57ecd8bcdf1d8ac051b4a03c72b1a" translate="yes" xml:space="preserve">
          <source>bool QRect::isEmpty() const</source>
          <target state="translated">bool QRect::isEmpty()const</target>
        </trans-unit>
        <trans-unit id="a567b1104f255bf928638152d9b6edb2dc6f46d7" translate="yes" xml:space="preserve">
          <source>bool QRect::isNull() const</source>
          <target state="translated">bool QRect::isNull()const</target>
        </trans-unit>
        <trans-unit id="4950f6efae8acee10b546724a93bf54093df6ceb" translate="yes" xml:space="preserve">
          <source>bool QRect::isValid() const</source>
          <target state="translated">bool QRect::isValid()const</target>
        </trans-unit>
        <trans-unit id="bd8a0d6634853d4df342dad1a9a1dd0f6e1abe9f" translate="yes" xml:space="preserve">
          <source>bool QRect::operator!=(const &lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QRect :: operator! = (const &lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="586c6f0eed8c1d33bf12dc1cb0f9e4b082370781" translate="yes" xml:space="preserve">
          <source>bool QRect::operator==(const &lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QRect :: operator == (const &lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="65151b8340baabb598287c33fa94d6f52eebfc0a" translate="yes" xml:space="preserve">
          <source>bool QRectF::contains(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">bool QRectF :: contiene ( &lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7250b82b8ba7bbb7fc5861736543ea855d79ed2e" translate="yes" xml:space="preserve">
          <source>bool QRectF::contains(const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QRectF :: contiene (const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="c91154878bb5611febede723458b543a5dd0045a" translate="yes" xml:space="preserve">
          <source>bool QRectF::contains(const &lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QRectF :: contiene (const &lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
