<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="qt">
    <body>
      <group id="qt">
        <trans-unit id="bd4ff63675d9e8087d261fedf9864c0f76e172d1" translate="yes" xml:space="preserve">
          <source>void QRectF::setTopRight(const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QRectF :: setTopRight (const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="c376ebaf274d7249bf6d12b7b19aad98cb4c35a5" translate="yes" xml:space="preserve">
          <source>void QRectF::setWidth(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QRectF :: setWidth ( &lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="96b5ab8917e53a34979c910772f4f9490f0f6373" translate="yes" xml:space="preserve">
          <source>void QRectF::setX(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QRectF :: setX ( &lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ec1551beeaca42b7d5bed0eb9edfc0bb04abf94f" translate="yes" xml:space="preserve">
          <source>void QRectF::setY(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QRectF :: setY ( &lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d86dc85fe3163a8864d1662431c79482ce9a0cbc" translate="yes" xml:space="preserve">
          <source>void QRectF::translate(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QRectF :: traducir ( &lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2abc53e93ef725f2b1970df179f69a5e56224885" translate="yes" xml:space="preserve">
          <source>void QRectF::translate(const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QRectF :: translate (const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="dbb9ada9a6c9bd6cd63c723dcbbeb184a003e48e" translate="yes" xml:space="preserve">
          <source>void QRegExp::setCaseSensitivity(&lt;a href=&quot;qt#CaseSensitivity-enum&quot;&gt;Qt::CaseSensitivity&lt;/a&gt;</source>
          <target state="translated">void QRegExp :: setCaseSensitivity ( &lt;a href=&quot;qt#CaseSensitivity-enum&quot;&gt;Qt :: CaseSensitivity&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7c0fbf9a907e4ee63b1b981e1902fa41027489ff" translate="yes" xml:space="preserve">
          <source>void QRegExp::setMinimal(bool</source>
          <target state="translated">void QRegExp::setMinimal(bool</target>
        </trans-unit>
        <trans-unit id="2d6b4ed1dd7f43d62907ae2d2cda8c835c384722" translate="yes" xml:space="preserve">
          <source>void QRegExp::setPattern(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QRegExp :: setPattern (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="5710cc444a92a1b52a7bdfef59a5cc05178d4b03" translate="yes" xml:space="preserve">
          <source>void QRegExp::setPatternSyntax(&lt;a href=&quot;qregexp#PatternSyntax-enum&quot;&gt;QRegExp::PatternSyntax&lt;/a&gt;</source>
          <target state="translated">void QRegExp :: setPatternSyntax ( &lt;a href=&quot;qregexp#PatternSyntax-enum&quot;&gt;QRegExp :: PatternSyntax&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c933ad3c3f4aa56f1cb025bc971b0f01b37be427" translate="yes" xml:space="preserve">
          <source>void QRegExp::swap(&lt;a href=&quot;qregexp#QRegExp&quot;&gt;QRegExp&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QRegExp :: swap ( &lt;a href=&quot;qregexp#QRegExp&quot;&gt;QRegExp&lt;/a&gt; y</target>
        </trans-unit>
        <trans-unit id="00ce09f5e6fbf7bb7f86cfec78c6cc46fb24e713" translate="yes" xml:space="preserve">
          <source>void QRegion::setRects(const &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; *</source>
          <target state="translated">void QRegion :: setRects (const &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="9fcf1078d9713a5816c745e954457f7d334d36ff" translate="yes" xml:space="preserve">
          <source>void QRegion::swap(&lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QRegion :: swap ( &lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="1c02f0f66b510db0300295bed859436096578211" translate="yes" xml:space="preserve">
          <source>void QRegion::translate(const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QRegion :: translate (const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="7ed9a2f665d6a26cb4edc35f64e984198011f069" translate="yes" xml:space="preserve">
          <source>void QRegion::translate(int</source>
          <target state="translated">void QRegión::translate(int</target>
        </trans-unit>
        <trans-unit id="8fd1eae23f5240449fbd0b0f95b2cc1a477bcfc6" translate="yes" xml:space="preserve">
          <source>void QRegularExpression::optimize() const</source>
          <target state="translated">void QExpresiónRegular::optimizar()const</target>
        </trans-unit>
        <trans-unit id="b3e13b262a331354c70f5b4986fb4fc2c79b7fbc" translate="yes" xml:space="preserve">
          <source>void QRegularExpression::setPattern(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QRegularExpression :: setPattern (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="41b860740684c020faaef949a52137d8fc322165" translate="yes" xml:space="preserve">
          <source>void QRegularExpression::setPatternOptions(&lt;a href=&quot;qregularexpression#PatternOption-enum&quot;&gt;QRegularExpression::PatternOptions&lt;/a&gt;</source>
          <target state="translated">void QRegularExpression :: setPatternOptions ( &lt;a href=&quot;qregularexpression#PatternOption-enum&quot;&gt;QRegularExpression :: PatternOptions&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cac6cb0307683fd01f900a5a4649ebc3d4e269d7" translate="yes" xml:space="preserve">
          <source>void QRegularExpression::swap(&lt;a href=&quot;qregularexpression#QRegularExpression&quot;&gt;QRegularExpression&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QRegularExpression :: swap ( &lt;a href=&quot;qregularexpression#QRegularExpression&quot;&gt;QRegularExpression&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="088a58a960916e61b2ecc71af342bcfe4624507b" translate="yes" xml:space="preserve">
          <source>void QRegularExpressionMatch::swap(&lt;a href=&quot;qregularexpressionmatch#QRegularExpressionMatch&quot;&gt;QRegularExpressionMatch&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QRegularExpressionMatch :: swap ( &lt;a href=&quot;qregularexpressionmatch#QRegularExpressionMatch&quot;&gt;QRegularExpressionMatch&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="3ae2e34fc992c51d007849fe39d69b4c78ce8974" translate="yes" xml:space="preserve">
          <source>void QRegularExpressionMatchIterator::swap(&lt;a href=&quot;qregularexpressionmatchiterator#QRegularExpressionMatchIterator&quot;&gt;QRegularExpressionMatchIterator&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QRegularExpressionMatchIterator :: swap ( &lt;a href=&quot;qregularexpressionmatchiterator#QRegularExpressionMatchIterator&quot;&gt;QRegularExpressionMatchIterator&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="bbd62d8a84fc3d91f174ce1b31dc2a3c89fe0825" translate="yes" xml:space="preserve">
          <source>void QRemoteObjectHostBase::addHostSideConnection(&lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt; *</source>
          <target state="translated">anular QRemoteObjectHostBase :: addHostSideConnection ( &lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="79b9a7a19e3efe4c29543256e9a176eeffde090b" translate="yes" xml:space="preserve">
          <source>void QRemoteObjectNode::addClientSideConnection(&lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt; *</source>
          <target state="translated">vac&amp;iacute;o QRemoteObjectNode :: addClientSideConnection ( &lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="055e81e5c0fc8b7ab3efcbb5b4ae203330f42eaa" translate="yes" xml:space="preserve">
          <source>void QRemoteObjectNode::registerExternalSchema(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QRemoteObjectNode :: registerExternalSchema (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="731991ff750b72c4c72c7432567821a272e4d07b" translate="yes" xml:space="preserve">
          <source>void QRemoteObjectPendingCallWatcher::waitForFinished()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="532d565f2999e65ef76bb06d023edc05ce8f3b6a" translate="yes" xml:space="preserve">
          <source>void QRenderPass::addFilterKey(&lt;a href=&quot;qt3drender-qfilterkey&quot;&gt;Qt3DRender::QFilterKey&lt;/a&gt; *</source>
          <target state="translated">anular QRenderPass :: addFilterKey ( &lt;a href=&quot;qt3drender-qfilterkey&quot;&gt;Qt3DRender :: QFilterKey&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="32e78ffd49def90c8b710cfdf0db68b6eb4c22db" translate="yes" xml:space="preserve">
          <source>void QRenderPass::addParameter(&lt;a href=&quot;qt3drender-qparameter&quot;&gt;Qt3DRender::QParameter&lt;/a&gt; *</source>
          <target state="translated">anular QRenderPass :: addParameter ( &lt;a href=&quot;qt3drender-qparameter&quot;&gt;Qt3DRender :: QParameter&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="9843cb9adc57e75b24b7b91c7c572d8449544dd1" translate="yes" xml:space="preserve">
          <source>void QRenderPass::addRenderState(&lt;a href=&quot;qt3drender-qrenderstate&quot;&gt;Qt3DRender::QRenderState&lt;/a&gt; *</source>
          <target state="translated">anular QRenderPass :: addRenderState ( &lt;a href=&quot;qt3drender-qrenderstate&quot;&gt;Qt3DRender :: QRenderState&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="e4ec9ed7b0832b03c9e3f456d10f3946b4aec91b" translate="yes" xml:space="preserve">
          <source>void QRenderPass::removeFilterKey(&lt;a href=&quot;qt3drender-qfilterkey&quot;&gt;Qt3DRender::QFilterKey&lt;/a&gt; *</source>
          <target state="translated">anular QRenderPass :: removeFilterKey ( &lt;a href=&quot;qt3drender-qfilterkey&quot;&gt;Qt3DRender :: QFilterKey&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="f14ec1b25fb01de4993128f3f0333ab3d8d33de4" translate="yes" xml:space="preserve">
          <source>void QRenderPass::removeParameter(&lt;a href=&quot;qt3drender-qparameter&quot;&gt;Qt3DRender::QParameter&lt;/a&gt; *</source>
          <target state="translated">anular QRenderPass :: removeParameter ( &lt;a href=&quot;qt3drender-qparameter&quot;&gt;Qt3DRender :: QParameter&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="55366df95cd1269e833467de5c705d322476700f" translate="yes" xml:space="preserve">
          <source>void QRenderPass::removeRenderState(&lt;a href=&quot;qt3drender-qrenderstate&quot;&gt;Qt3DRender::QRenderState&lt;/a&gt; *</source>
          <target state="translated">anular QRenderPass :: removeRenderState ( &lt;a href=&quot;qt3drender-qrenderstate&quot;&gt;Qt3DRender :: QRenderState&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="e8519a2d1f1354fe9cd5c071d0c852569759e20e" translate="yes" xml:space="preserve">
          <source>void QRenderPassFilter::addMatch(&lt;a href=&quot;qt3drender-qfilterkey&quot;&gt;Qt3DRender::QFilterKey&lt;/a&gt; *</source>
          <target state="translated">anular QRenderPassFilter :: addMatch ( &lt;a href=&quot;qt3drender-qfilterkey&quot;&gt;Qt3DRender :: QFilterKey&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="250cce9bf21fd80d6eacadc7e80661d348e4c726" translate="yes" xml:space="preserve">
          <source>void QRenderPassFilter::addParameter(&lt;a href=&quot;qt3drender-qparameter&quot;&gt;Qt3DRender::QParameter&lt;/a&gt; *</source>
          <target state="translated">anular QRenderPassFilter :: addParameter ( &lt;a href=&quot;qt3drender-qparameter&quot;&gt;Qt3DRender :: QParameter&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="e4e48fda5cf17554e16bc78f99348d38e78f0bd0" translate="yes" xml:space="preserve">
          <source>void QRenderPassFilter::removeMatch(&lt;a href=&quot;qt3drender-qfilterkey&quot;&gt;Qt3DRender::QFilterKey&lt;/a&gt; *</source>
          <target state="translated">anular QRenderPassFilter :: removeMatch ( &lt;a href=&quot;qt3drender-qfilterkey&quot;&gt;Qt3DRender :: QFilterKey&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="3835731ec3f8bb43865008543da695e4e9962b31" translate="yes" xml:space="preserve">
          <source>void QRenderPassFilter::removeParameter(&lt;a href=&quot;qt3drender-qparameter&quot;&gt;Qt3DRender::QParameter&lt;/a&gt; *</source>
          <target state="translated">anular QRenderPassFilter :: removeParameter ( &lt;a href=&quot;qt3drender-qparameter&quot;&gt;Qt3DRender :: QParameter&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="e1b7673a6918ff5a34356b1b6a9dc32abaf7ac0a" translate="yes" xml:space="preserve">
          <source>void QRenderStateSet::addRenderState(&lt;a href=&quot;qt3drender-qrenderstate&quot;&gt;Qt3DRender::QRenderState&lt;/a&gt; *</source>
          <target state="translated">vac&amp;iacute;o QRenderStateSet :: addRenderState ( &lt;a href=&quot;qt3drender-qrenderstate&quot;&gt;Qt3DRender :: QRenderState&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="c338d94007ac63595c51a0a166681670f7cc67e5" translate="yes" xml:space="preserve">
          <source>void QRenderStateSet::removeRenderState(&lt;a href=&quot;qt3drender-qrenderstate&quot;&gt;Qt3DRender::QRenderState&lt;/a&gt; *</source>
          <target state="translated">vac&amp;iacute;o QRenderStateSet :: removeRenderState ( &lt;a href=&quot;qt3drender-qrenderstate&quot;&gt;Qt3DRender :: QRenderState&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="58f396a140aec8f41f02589cbca412772bf33802" translate="yes" xml:space="preserve">
          <source>void QRenderTarget::addOutput(&lt;a href=&quot;qt3drender-qrendertargetoutput&quot;&gt;Qt3DRender::QRenderTargetOutput&lt;/a&gt; *</source>
          <target state="translated">anular QRenderTarget :: addOutput ( &lt;a href=&quot;qt3drender-qrendertargetoutput&quot;&gt;Qt3DRender :: QRenderTargetOutput&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="c654d85981749bb24888390516e929ea9d382f32" translate="yes" xml:space="preserve">
          <source>void QRenderTarget::removeOutput(&lt;a href=&quot;qt3drender-qrendertargetoutput&quot;&gt;Qt3DRender::QRenderTargetOutput&lt;/a&gt; *</source>
          <target state="translated">anular QRenderTarget :: removeOutput ( &lt;a href=&quot;qt3drender-qrendertargetoutput&quot;&gt;Qt3DRender :: QRenderTargetOutput&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="42d63ab6d43d4022e6a471fe62520260810a1379" translate="yes" xml:space="preserve">
          <source>void QRenderTargetSelector::setOutputs(const &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;&lt;a href=&quot;qt3drender-qrendertargetoutput#AttachmentPoint-enum&quot;&gt;QRenderTargetOutput::AttachmentPoint&lt;/a&gt;&amp;gt; &amp;amp;</source>
          <target state="translated">void QRenderTargetSelector :: setOutputs (const &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt; &amp;lt; &lt;a href=&quot;qt3drender-qrendertargetoutput#AttachmentPoint-enum&quot;&gt;QRenderTargetOutput :: AttachmentPoint&lt;/a&gt; &amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="3ea2481cb068eabee1b9476400d3ff03d8844259" translate="yes" xml:space="preserve">
          <source>void QResource::setFileName(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QResource :: setFileName (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="5de6846991dff1b54557c2dbbab026d43b603120" translate="yes" xml:space="preserve">
          <source>void QResource::setLocale(const &lt;a href=&quot;qlocale&quot;&gt;QLocale&lt;/a&gt; &amp;amp;</source>
          <target state="translated">vac&amp;iacute;o QResource :: setLocale (const &lt;a href=&quot;qlocale&quot;&gt;QLocale&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="a467833dd9c77811fd6e544e16e25e15a89b8dae" translate="yes" xml:space="preserve">
          <source>void QRgba64::setAlpha(&lt;a href=&quot;#quint16-typedef&quot;&gt;quint16&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QRgba64 :: setAlpha ( &lt;a href=&quot;#quint16-typedef&quot;&gt;quint16&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="13cd0a153b94d51e1ee90a256111199224cca0b6" translate="yes" xml:space="preserve">
          <source>void QRgba64::setAlpha(&lt;a href=&quot;qtglobal#quint16-typedef&quot;&gt;quint16&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e84c71373e1c89f42be49265f05f233ec5678001" translate="yes" xml:space="preserve">
          <source>void QRgba64::setBlue(&lt;a href=&quot;#quint16-typedef&quot;&gt;quint16&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QRgba64 :: setBlue ( &lt;a href=&quot;#quint16-typedef&quot;&gt;quint16&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="eb4876303312ddeca710321f790a5e1e26fdb632" translate="yes" xml:space="preserve">
          <source>void QRgba64::setBlue(&lt;a href=&quot;qtglobal#quint16-typedef&quot;&gt;quint16&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b722066ca21f4ff7efb5f56f5ffe2a916b770ae7" translate="yes" xml:space="preserve">
          <source>void QRgba64::setGreen(&lt;a href=&quot;#quint16-typedef&quot;&gt;quint16&lt;/a&gt;</source>
          <target state="translated">void QRgba64 :: setGreen ( &lt;a href=&quot;#quint16-typedef&quot;&gt;quint16&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e2f3b2f17010679ed75a9fbc5244349c4be375bd" translate="yes" xml:space="preserve">
          <source>void QRgba64::setGreen(&lt;a href=&quot;qtglobal#quint16-typedef&quot;&gt;quint16&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17d347a1960af8f6f07e0d7562573d942ba735e8" translate="yes" xml:space="preserve">
          <source>void QRgba64::setRed(&lt;a href=&quot;#quint16-typedef&quot;&gt;quint16&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QRgba64 :: setRed ( &lt;a href=&quot;#quint16-typedef&quot;&gt;quint16&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ab27bcb689c309ed7e5e8a183b73ac167225e802" translate="yes" xml:space="preserve">
          <source>void QRgba64::setRed(&lt;a href=&quot;qtglobal#quint16-typedef&quot;&gt;quint16&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d90d976381c4fdda2e4d43fa87ed910b1b088354" translate="yes" xml:space="preserve">
          <source>void QRotationReading::setFromEuler(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QRotationReading :: setFromEuler ( &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f6d7c853142eeea338589628b86c66cf960040ed" translate="yes" xml:space="preserve">
          <source>void QRotationReading::setFromEuler(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26e430afa6b8cb83f770ed0fb9d32d5f69652b5a" translate="yes" xml:space="preserve">
          <source>void QRotationSensor::setHasZ(bool</source>
          <target state="translated">void QRotationSensor::setHasZ(bool</target>
        </trans-unit>
        <trans-unit id="e86a273d7fb70763b0cb08f7623f94c3da008d54" translate="yes" xml:space="preserve">
          <source>void QRubberBand::move(const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QRubberBand :: move (const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="e28302b709f451dd7b96e666d7214bab267d9332" translate="yes" xml:space="preserve">
          <source>void QRubberBand::move(int</source>
          <target state="translated">anular QRubberBand::move(int</target>
        </trans-unit>
        <trans-unit id="271e75aaef7133dc26aabeb71710e5cf9b27a251" translate="yes" xml:space="preserve">
          <source>void QRubberBand::resize(const &lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QRubberBand :: resize (const &lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="c72e001705d8959a4ab80d5b48d4f717e2423cb1" translate="yes" xml:space="preserve">
          <source>void QRubberBand::resize(int</source>
          <target state="translated">anular QRubberBand::resize(int</target>
        </trans-unit>
        <trans-unit id="dc6718fb08bc1919eac7ae065c6b615178ffc570" translate="yes" xml:space="preserve">
          <source>void QRubberBand::setGeometry(const &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QRubberBand :: setGeometry (const &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="7d8026e65745ac9fda68f3fd8a348ca6031a5cc0" translate="yes" xml:space="preserve">
          <source>void QRubberBand::setGeometry(int</source>
          <target state="translated">void QRubberBand::setGeometry(int</target>
        </trans-unit>
        <trans-unit id="fbe42c7cfd6c0037011ce4cfe9b7583c8f79db45" translate="yes" xml:space="preserve">
          <source>void QRunnable::setAutoDelete(bool</source>
          <target state="translated">anular QRunnable::setAutoBorración(bool</target>
        </trans-unit>
        <trans-unit id="8df2707069f32e59ee59e4f124d6267df8a47dd8" translate="yes" xml:space="preserve">
          <source>void QSGAbstractRenderer::setClearColor(const &lt;a href=&quot;qcolor&quot;&gt;QColor&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QSGAbstractRenderer :: setClearColor (const &lt;a href=&quot;qcolor&quot;&gt;QColor&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="01bc8f5191db261f101490d44f4959fac363b277" translate="yes" xml:space="preserve">
          <source>void QSGAbstractRenderer::setClearMode(&lt;a href=&quot;qsgabstractrenderer#ClearModeBit-enum&quot;&gt;QSGAbstractRenderer::ClearMode&lt;/a&gt;</source>
          <target state="translated">anular QSGAbstractRenderer :: setClearMode ( &lt;a href=&quot;qsgabstractrenderer#ClearModeBit-enum&quot;&gt;QSGAbstractRenderer :: ClearMode&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="500266227b0a57f5c9417cadecc3a6721db1f8e9" translate="yes" xml:space="preserve">
          <source>void QSGAbstractRenderer::setDeviceRect(const &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QSGAbstractRenderer :: setDeviceRect (const &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="f43244860dbaa7c15fa4f36d39b1dd1121f957bc" translate="yes" xml:space="preserve">
          <source>void QSGAbstractRenderer::setDeviceRect(const &lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QSGAbstractRenderer :: setDeviceRect (const &lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="1ab71e956f462232e10d1eb605c9e112a6dd6d64" translate="yes" xml:space="preserve">
          <source>void QSGAbstractRenderer::setProjectionMatrix(const &lt;a href=&quot;qmatrix4x4&quot;&gt;QMatrix4x4&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QSGAbstractRenderer :: setProjectionMatrix (const &lt;a href=&quot;qmatrix4x4&quot;&gt;QMatrix4x4&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="37e3077950b31baddff81cda5458b1578f7a66f0" translate="yes" xml:space="preserve">
          <source>void QSGAbstractRenderer::setProjectionMatrixToRect(const &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QSGAbstractRenderer :: setProjectionMatrixToRect (const &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="96d8d2c0535a7715aaf6f1e389f508723aa8d06d" translate="yes" xml:space="preserve">
          <source>void QSGAbstractRenderer::setRootNode(QSGRootNode *</source>
          <target state="translated">void QSGAbstractRenderer::setRootNode(QSGRootNode *</target>
        </trans-unit>
        <trans-unit id="4994a571184254c55666d3d047eebe2617459949" translate="yes" xml:space="preserve">
          <source>void QSGAbstractRenderer::setViewportRect(const &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QSGAbstractRenderer :: setViewportRect (const &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="cc286f1d60a18a6cd4dd02c5899310973a7e1e1a" translate="yes" xml:space="preserve">
          <source>void QSGAbstractRenderer::setViewportRect(const &lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QSGAbstractRenderer :: setViewportRect (const &lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="667c74a3a5995155bcac703fbdd35cce970465e9" translate="yes" xml:space="preserve">
          <source>void QSGBasicGeometryNode::setGeometry(&lt;a href=&quot;qsggeometry&quot;&gt;QSGGeometry&lt;/a&gt; *</source>
          <target state="translated">void QSGBasicGeometryNode :: setGeometry ( &lt;a href=&quot;qsggeometry&quot;&gt;QSGGeometry&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="62a2d8e807c49600d2f079a0bf51555b0135ee4b" translate="yes" xml:space="preserve">
          <source>void QSGClipNode::setClipRect(const &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QSGClipNode :: setClipRect (const &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="44741acd2f829c9c7037c548883831d409d37207" translate="yes" xml:space="preserve">
          <source>void QSGClipNode::setIsRectangular(bool</source>
          <target state="translated">void QSGClipNode::setIsRectangular(bool</target>
        </trans-unit>
        <trans-unit id="16af625dddea3e64d30947c8db557d830cd7d067" translate="yes" xml:space="preserve">
          <source>void QSGEngine::initialize(&lt;a href=&quot;qopenglcontext&quot;&gt;QOpenGLContext&lt;/a&gt; *</source>
          <target state="translated">void QSGEngine :: initialize ( &lt;a href=&quot;qopenglcontext&quot;&gt;QOpenGLContext&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="532d328b49476c400163b280b340507a28046bc3" translate="yes" xml:space="preserve">
          <source>void QSGEngine::invalidate()</source>
          <target state="translated">anular QSGEngine::invalidar()</target>
        </trans-unit>
        <trans-unit id="977ca8138c54d7b802aa819dfb503893eb2c6f96" translate="yes" xml:space="preserve">
          <source>void QSGFlatColorMaterial::setColor(const &lt;a href=&quot;qcolor&quot;&gt;QColor&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QSGFlatColorMaterial :: setColor (const &lt;a href=&quot;qcolor&quot;&gt;QColor&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="91a636b8c21c481b85600332bbf50a5dd360eeac" translate="yes" xml:space="preserve">
          <source>void QSGGeometry::allocate(int</source>
          <target state="translated">void QSGGeometry::allocate(int</target>
        </trans-unit>
        <trans-unit id="d66ec750397c6d82102493591e83456141414c6f" translate="yes" xml:space="preserve">
          <source>void QSGGeometry::markIndexDataDirty()</source>
          <target state="translated">void QSGGeometry::markIndexDataDirty()</target>
        </trans-unit>
        <trans-unit id="f38d2f53d91d8063a71e1febaeeebf77462e2da2" translate="yes" xml:space="preserve">
          <source>void QSGGeometry::markVertexDataDirty()</source>
          <target state="translated">void QSGGeometry::markVertexDataDirty()</target>
        </trans-unit>
        <trans-unit id="81c3ebd6b8c145011f874b17e756b08a94a5ac1e" translate="yes" xml:space="preserve">
          <source>void QSGGeometry::setDrawingMode(unsignedint</source>
          <target state="translated">void QSGGeometry::setDrawingMode(sin signo)</target>
        </trans-unit>
        <trans-unit id="4d520c57054caa6b62e9685c98d9a27b29e72df9" translate="yes" xml:space="preserve">
          <source>void QSGGeometry::setIndexDataPattern(&lt;a href=&quot;qsggeometry#DataPattern-enum&quot;&gt;QSGGeometry::DataPattern&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QSGGeometry :: setIndexDataPattern ( &lt;a href=&quot;qsggeometry#DataPattern-enum&quot;&gt;QSGGeometry :: DataPattern&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6555da0a8fe8d9de90942623c2218bc5c2a797cc" translate="yes" xml:space="preserve">
          <source>void QSGGeometry::setLineWidth(float</source>
          <target state="translated">vacío QSGGeometry::setLineWidth(float</target>
        </trans-unit>
        <trans-unit id="29392573cc8f6d5e3dc89f8bc89aea69bd251df3" translate="yes" xml:space="preserve">
          <source>void QSGGeometry::setVertexDataPattern(&lt;a href=&quot;qsggeometry#DataPattern-enum&quot;&gt;QSGGeometry::DataPattern&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QSGGeometry :: setVertexDataPattern ( &lt;a href=&quot;qsggeometry#DataPattern-enum&quot;&gt;QSGGeometry :: DataPattern&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="113a7e74c7a0aa140f43dc4eb72537eb6a6f73c4" translate="yes" xml:space="preserve">
          <source>void QSGGeometryNode::setMaterial(&lt;a href=&quot;qsgmaterial&quot;&gt;QSGMaterial&lt;/a&gt; *</source>
          <target state="translated">vac&amp;iacute;o QSGGeometryNode :: setMaterial ( &lt;a href=&quot;qsgmaterial&quot;&gt;QSGMaterial&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="1de34480feb3a3da6b51aeafbfbc338bbba8d5cd" translate="yes" xml:space="preserve">
          <source>void QSGGeometryNode::setOpaqueMaterial(&lt;a href=&quot;qsgmaterial&quot;&gt;QSGMaterial&lt;/a&gt; *</source>
          <target state="translated">vac&amp;iacute;o QSGGeometryNode :: setOpaqueMaterial ( &lt;a href=&quot;qsgmaterial&quot;&gt;QSGMaterial&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="55dfc41232187e047738ee2e0af9c042daf6ee82" translate="yes" xml:space="preserve">
          <source>void QSGImageNode::setRect(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QSGImageNode :: setRect ( &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="80d2e6ebd30f9b9be19b705f60261b19f912cb80" translate="yes" xml:space="preserve">
          <source>void QSGImageNode::setRect(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="116156422556594a44c09ec81e57d11961adccde" translate="yes" xml:space="preserve">
          <source>void QSGImageNode::setSourceRect(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QSGImageNode :: setSourceRect ( &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="71c9abfb8c042194d5df80f8b489f2407bd6f872" translate="yes" xml:space="preserve">
          <source>void QSGImageNode::setSourceRect(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dea8c3af9a95b930f62046f60b75c1a8e9eae88" translate="yes" xml:space="preserve">
          <source>void QSGMaterial::setFlag(&lt;a href=&quot;qsgmaterial#Flag-enum&quot;&gt;QSGMaterial::Flags&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QSGMaterial :: setFlag ( &lt;a href=&quot;qsgmaterial#Flag-enum&quot;&gt;QSGMaterial :: Banderas&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="64fe28c8f0a5435cb04714ed0a26bc010f850f2d" translate="yes" xml:space="preserve">
          <source>void QSGMaterialRhiShader::setFlag(&lt;a href=&quot;qsgmaterialrhishader#Flag-enum&quot;&gt;QSGMaterialRhiShader::Flags&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87938802805fe7fba95c05097b48c0a19c039bb1" translate="yes" xml:space="preserve">
          <source>void QSGNode::appendChildNode(&lt;a href=&quot;qsgnode#QSGNode&quot;&gt;QSGNode&lt;/a&gt; *</source>
          <target state="translated">anular QSGNode :: appendChildNode ( &lt;a href=&quot;qsgnode#QSGNode&quot;&gt;QSGNode&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="50596b778ccb35a116f1a482a64f299d7f15914a" translate="yes" xml:space="preserve">
          <source>void QSGNode::insertChildNodeAfter(&lt;a href=&quot;qsgnode#QSGNode&quot;&gt;QSGNode&lt;/a&gt; *</source>
          <target state="translated">anular QSGNode :: insertChildNodeAfter ( &lt;a href=&quot;qsgnode#QSGNode&quot;&gt;QSGNode&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="730329961459462b87ee865baec34d96dad13f8d" translate="yes" xml:space="preserve">
          <source>void QSGNode::insertChildNodeBefore(&lt;a href=&quot;qsgnode#QSGNode&quot;&gt;QSGNode&lt;/a&gt; *</source>
          <target state="translated">anular QSGNode :: insertChildNodeBefore ( &lt;a href=&quot;qsgnode#QSGNode&quot;&gt;QSGNode&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="8f0aba07c16439e81fe1db243e4e3f9f4820edd0" translate="yes" xml:space="preserve">
          <source>void QSGNode::markDirty(&lt;a href=&quot;qsgnode#DirtyStateBit-enum&quot;&gt;QSGNode::DirtyState&lt;/a&gt;</source>
          <target state="translated">anular QSGNode :: markDirty ( &lt;a href=&quot;qsgnode#DirtyStateBit-enum&quot;&gt;QSGNode :: DirtyState&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="25d8475e757dee666a1797f3ccb09a79a0bdbbbb" translate="yes" xml:space="preserve">
          <source>void QSGNode::prependChildNode(&lt;a href=&quot;qsgnode#QSGNode&quot;&gt;QSGNode&lt;/a&gt; *</source>
          <target state="translated">nulo QSGNode :: prependChildNode ( &lt;a href=&quot;qsgnode#QSGNode&quot;&gt;QSGNode&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="89e31824b598e979c86c2fc3a021fcce5bf2790f" translate="yes" xml:space="preserve">
          <source>void QSGNode::removeAllChildNodes()</source>
          <target state="translated">anular el QSGNode::removeAllChildNodes()</target>
        </trans-unit>
        <trans-unit id="73095ef1da2c5e4b54a317819b8c2f7139959051" translate="yes" xml:space="preserve">
          <source>void QSGNode::removeChildNode(&lt;a href=&quot;qsgnode#QSGNode&quot;&gt;QSGNode&lt;/a&gt; *</source>
          <target state="translated">anular QSGNode :: removeChildNode ( &lt;a href=&quot;qsgnode#QSGNode&quot;&gt;QSGNode&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="77a45ffacee1a83392c2288e906ad6ba7d7be8b0" translate="yes" xml:space="preserve">
          <source>void QSGNode::setFlag(&lt;a href=&quot;qsgnode#Flag-enum&quot;&gt;QSGNode::Flag&lt;/a&gt;</source>
          <target state="translated">void QSGNode :: setFlag ( &lt;a href=&quot;qsgnode#Flag-enum&quot;&gt;QSGNode :: Flag&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d2aaceee8be6bca3ee6d26bb49feef69ca39a6d4" translate="yes" xml:space="preserve">
          <source>void QSGNode::setFlags(&lt;a href=&quot;qsgnode#Flag-enum&quot;&gt;QSGNode::Flags&lt;/a&gt;</source>
          <target state="translated">void QSGNode :: setFlags ( &lt;a href=&quot;qsgnode#Flag-enum&quot;&gt;QSGNode :: Flags&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="79e0e8a78096eb4d37df7324afa87f8755f6d989" translate="yes" xml:space="preserve">
          <source>void QSGOpacityNode::setOpacity(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QSGOpacityNode :: setOpacity ( &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ef80f4a2ec809da6446ff7b87841a8e854c682a6" translate="yes" xml:space="preserve">
          <source>void QSGOpacityNode::setOpacity(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="111ed15ba18dc4b7b3b589b459ef80c1564cb9d0" translate="yes" xml:space="preserve">
          <source>void QSGOpaqueTextureMaterial::setAnisotropyLevel(&lt;a href=&quot;qsgtexture#AnisotropyLevel-enum&quot;&gt;QSGTexture::AnisotropyLevel&lt;/a&gt;</source>
          <target state="translated">void QSGOpaqueTextureMaterial :: setAnisotropyLevel ( &lt;a href=&quot;qsgtexture#AnisotropyLevel-enum&quot;&gt;QSGTexture :: AnisotropyLevel&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6d20a36728060c8f69196d9a2cbaf6f83735868f" translate="yes" xml:space="preserve">
          <source>void QSGOpaqueTextureMaterial::setFiltering(&lt;a href=&quot;qsgtexture#Filtering-enum&quot;&gt;QSGTexture::Filtering&lt;/a&gt;</source>
          <target state="translated">void QSGOpaqueTextureMaterial :: setFiltering ( &lt;a href=&quot;qsgtexture#Filtering-enum&quot;&gt;QSGTexture :: Filtering&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7e3bf5b8f8f1686a7532dfd3b546f855d2be35fc" translate="yes" xml:space="preserve">
          <source>void QSGOpaqueTextureMaterial::setHorizontalWrapMode(&lt;a href=&quot;qsgtexture#WrapMode-enum&quot;&gt;QSGTexture::WrapMode&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QSGOpaqueTextureMaterial :: setHorizontalWrapMode ( &lt;a href=&quot;qsgtexture#WrapMode-enum&quot;&gt;QSGTexture :: WrapMode&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="750ebe4463d53d49dc587bbe986f576ed09b4ece" translate="yes" xml:space="preserve">
          <source>void QSGOpaqueTextureMaterial::setMipmapFiltering(&lt;a href=&quot;qsgtexture#Filtering-enum&quot;&gt;QSGTexture::Filtering&lt;/a&gt;</source>
          <target state="translated">void QSGOpaqueTextureMaterial :: setMipmapFiltering ( &lt;a href=&quot;qsgtexture#Filtering-enum&quot;&gt;QSGTexture :: Filtering&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0142eaa5739bb0970e401a15196d48930fc91a07" translate="yes" xml:space="preserve">
          <source>void QSGOpaqueTextureMaterial::setTexture(&lt;a href=&quot;qsgtexture&quot;&gt;QSGTexture&lt;/a&gt; *</source>
          <target state="translated">vac&amp;iacute;o QSGOpaqueTextureMaterial :: setTexture ( &lt;a href=&quot;qsgtexture&quot;&gt;QSGTexture&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="aed47b997c45597b97c96d3515054873268ff80e" translate="yes" xml:space="preserve">
          <source>void QSGOpaqueTextureMaterial::setVerticalWrapMode(&lt;a href=&quot;qsgtexture#WrapMode-enum&quot;&gt;QSGTexture::WrapMode&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QSGOpaqueTextureMaterial :: setVerticalWrapMode ( &lt;a href=&quot;qsgtexture#WrapMode-enum&quot;&gt;QSGTexture :: WrapMode&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c409452d3d44440d1e0a292857b7ae37a400d968" translate="yes" xml:space="preserve">
          <source>void QSGRectangleNode::setRect(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QSGRectangleNode :: setRect ( &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1622bdbe166a725cc3329219a12af44e0cd72fd9" translate="yes" xml:space="preserve">
          <source>void QSGRectangleNode::setRect(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="068f18d618447cca9720fa5a50034311185cdbbc" translate="yes" xml:space="preserve">
          <source>void QSGSimpleRectNode::setColor(const &lt;a href=&quot;qcolor&quot;&gt;QColor&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QSGSimpleRectNode :: setColor (const &lt;a href=&quot;qcolor&quot;&gt;QColor&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="727410dc436d6997f60fdec41849ff4f63503398" translate="yes" xml:space="preserve">
          <source>void QSGSimpleRectNode::setRect(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QSGSimpleRectNode :: setRect ( &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1e34cac85dc5fb2d582348c75cadc0a8046e920a" translate="yes" xml:space="preserve">
          <source>void QSGSimpleRectNode::setRect(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea22e706892742195de7b20d131af0584f7a78a9" translate="yes" xml:space="preserve">
          <source>void QSGSimpleRectNode::setRect(const &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QSGSimpleRectNode :: setRect (const &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="963e0dd06dcd46486ab34b61d5df498209f3b698" translate="yes" xml:space="preserve">
          <source>void QSGSimpleTextureNode::setFiltering(&lt;a href=&quot;qsgtexture#Filtering-enum&quot;&gt;QSGTexture::Filtering&lt;/a&gt;</source>
          <target state="translated">void QSGSimpleTextureNode :: setFiltering ( &lt;a href=&quot;qsgtexture#Filtering-enum&quot;&gt;QSGTexture :: Filtering&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3658282773009b9a4f5c052ea14570516a614191" translate="yes" xml:space="preserve">
          <source>void QSGSimpleTextureNode::setOwnsTexture(bool</source>
          <target state="translated">void QSGSimpleTextureNode::setOwnsTexture(bool</target>
        </trans-unit>
        <trans-unit id="c390b3369aa1e0e52aaf3cb740ddd6ee294a281d" translate="yes" xml:space="preserve">
          <source>void QSGSimpleTextureNode::setRect(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QSGSimpleTextureNode :: setRect ( &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0ce9e7cb267e57406720248589b9b2befc3a58ea" translate="yes" xml:space="preserve">
          <source>void QSGSimpleTextureNode::setRect(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e12e1fe08094bb1680621ff08fd3619c4a79dde" translate="yes" xml:space="preserve">
          <source>void QSGSimpleTextureNode::setRect(const &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QSGSimpleTextureNode :: setRect (const &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="c744248ab20ca934d72b49fd021934bcd153469f" translate="yes" xml:space="preserve">
          <source>void QSGSimpleTextureNode::setSourceRect(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QSGSimpleTextureNode :: setSourceRect ( &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="454d80458a89d462bbbbcd5d55c0d66afc751968" translate="yes" xml:space="preserve">
          <source>void QSGSimpleTextureNode::setSourceRect(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19a2136e2e37344b43303896ea1140a563afa845" translate="yes" xml:space="preserve">
          <source>void QSGSimpleTextureNode::setSourceRect(const &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QSGSimpleTextureNode :: setSourceRect (const &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="8d9c76c55b2460ab65baa75744fa3d6ff724631b" translate="yes" xml:space="preserve">
          <source>void QSGSimpleTextureNode::setTexture(&lt;a href=&quot;qsgtexture&quot;&gt;QSGTexture&lt;/a&gt; *</source>
          <target state="translated">vac&amp;iacute;o QSGSimpleTextureNode :: setTexture ( &lt;a href=&quot;qsgtexture&quot;&gt;QSGTexture&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="f9985dd0f11e93be8c300081691372f35b52e430" translate="yes" xml:space="preserve">
          <source>void QSGSimpleTextureNode::setTextureCoordinatesTransform(&lt;a href=&quot;qsgsimpletexturenode#TextureCoordinatesTransformFlag-enum&quot;&gt;QSGSimpleTextureNode::TextureCoordinatesTransformMode&lt;/a&gt;</source>
          <target state="translated">void QSGSimpleTextureNode :: setTextureCoordinatesTransform ( &lt;a href=&quot;qsgsimpletexturenode#TextureCoordinatesTransformFlag-enum&quot;&gt;QSGSimpleTextureNode :: TextureCoordinatesTransformMode&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2cd95a3e0331a814ed251e40d046b7b5327a56fa" translate="yes" xml:space="preserve">
          <source>void QSGTexture::setAnisotropyLevel(&lt;a href=&quot;qsgtexture#AnisotropyLevel-enum&quot;&gt;QSGTexture::AnisotropyLevel&lt;/a&gt;</source>
          <target state="translated">void QSGTexture :: setAnisotropyLevel ( &lt;a href=&quot;qsgtexture#AnisotropyLevel-enum&quot;&gt;QSGTexture :: AnisotropyLevel&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9676bd3c66f7d0218fbf05353231271bc223d0c7" translate="yes" xml:space="preserve">
          <source>void QSGTexture::setFiltering(&lt;a href=&quot;qsgtexture#Filtering-enum&quot;&gt;QSGTexture::Filtering&lt;/a&gt;</source>
          <target state="translated">void QSGTexture :: setFiltering ( &lt;a href=&quot;qsgtexture#Filtering-enum&quot;&gt;QSGTexture :: Filtering&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4be363f7f21cdb0b4ce7e73077d070813c096e96" translate="yes" xml:space="preserve">
          <source>void QSGTexture::setHorizontalWrapMode(&lt;a href=&quot;qsgtexture#WrapMode-enum&quot;&gt;QSGTexture::WrapMode&lt;/a&gt;</source>
          <target state="translated">void QSGTexture :: setHorizontalWrapMode ( &lt;a href=&quot;qsgtexture#WrapMode-enum&quot;&gt;QSGTexture :: WrapMode&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3653b2a3ca7c49cdfe5863593761a90352110298" translate="yes" xml:space="preserve">
          <source>void QSGTexture::setMipmapFiltering(&lt;a href=&quot;qsgtexture#Filtering-enum&quot;&gt;QSGTexture::Filtering&lt;/a&gt;</source>
          <target state="translated">void QSGTexture :: setMipmapFiltering ( &lt;a href=&quot;qsgtexture#Filtering-enum&quot;&gt;QSGTexture :: Filtering&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a781c5394d4b4b9473c36d0e1eeedb93d805a973" translate="yes" xml:space="preserve">
          <source>void QSGTexture::setVerticalWrapMode(&lt;a href=&quot;qsgtexture#WrapMode-enum&quot;&gt;QSGTexture::WrapMode&lt;/a&gt;</source>
          <target state="translated">void QSGTexture :: setVerticalWrapMode ( &lt;a href=&quot;qsgtexture#WrapMode-enum&quot;&gt;QSGTexture :: WrapMode&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="73c79510c1afcdbeae8d34bb92149589d0f1b891" translate="yes" xml:space="preserve">
          <source>void QSGTexture::updateBindOptions(bool</source>
          <target state="translated">anular QSGTexture::updateBindOptions(bool</target>
        </trans-unit>
        <trans-unit id="499ce09f5d7749f4c2804c64f986dbe35a68e4e0" translate="yes" xml:space="preserve">
          <source>void QSGTexture::updateRhiTexture(&lt;a href=&quot;qrhi&quot;&gt;QRhi&lt;/a&gt; *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7e6164129f85923885775bf8c1c0a9584fe3101" translate="yes" xml:space="preserve">
          <source>void QSGTransformNode::setMatrix(const &lt;a href=&quot;qmatrix4x4&quot;&gt;QMatrix4x4&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QSGTransformNode :: setMatrix (const &lt;a href=&quot;qmatrix4x4&quot;&gt;QMatrix4x4&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="c95cf4c4956ddd63d4814c8ff0dbbdd636173957" translate="yes" xml:space="preserve">
          <source>void QSaveFile::cancelWriting()</source>
          <target state="translated">anular QSaveFile::cancelWriting()</target>
        </trans-unit>
        <trans-unit id="1025aec6cb1999c76d42417e7db9c43969342dc7" translate="yes" xml:space="preserve">
          <source>void QSaveFile::setDirectWriteFallback(bool</source>
          <target state="translated">anular QSaveFile::setDirectWriteFallback(bool</target>
        </trans-unit>
        <trans-unit id="5f5b7f10c70a62476b9f109e83797fbafb91e079" translate="yes" xml:space="preserve">
          <source>void QSaveFile::setFileName(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QSaveFile :: setFileName (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="1cd118ba5e15cd0e08a7c9b69c989f1e1deb8f8d" translate="yes" xml:space="preserve">
          <source>void QScatter3DSeries::setDataProxy(&lt;a href=&quot;qscatterdataproxy&quot;&gt;QScatterDataProxy&lt;/a&gt; *</source>
          <target state="translated">vac&amp;iacute;o QScatter3DSeries :: setDataProxy ( &lt;a href=&quot;qscatterdataproxy&quot;&gt;QScatterDataProxy&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="cef1af3dc1e632698b6915deab8ebdb7b686ca51" translate="yes" xml:space="preserve">
          <source>void QScatter3DSeries::setSelectedItem(int</source>
          <target state="translated">void QScatter3DSeries::setSelectedItem(int</target>
        </trans-unit>
        <trans-unit id="6157fb6a7f10c6a8995f5fc46156855058886684" translate="yes" xml:space="preserve">
          <source>void QScatterDataItem::setPosition(const &lt;a href=&quot;qvector3d&quot;&gt;QVector3D&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QScatterDataItem :: setPosition (const &lt;a href=&quot;qvector3d&quot;&gt;QVector3D&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="a6722bb4f6c174af959afdbfa4672cbfdea11557" translate="yes" xml:space="preserve">
          <source>void QScatterDataItem::setRotation(const &lt;a href=&quot;qquaternion&quot;&gt;QQuaternion&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QScatterDataItem :: setRotation (const &lt;a href=&quot;qquaternion&quot;&gt;QQuaternion&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="3b5968ea039f28c81c015702c9754402c0a8c230" translate="yes" xml:space="preserve">
          <source>void QScatterDataItem::setX(float</source>
          <target state="translated">void QScatterDataItem::setX(float</target>
        </trans-unit>
        <trans-unit id="a0d7807f5d6c36cddac6120278503a4239dbab8b" translate="yes" xml:space="preserve">
          <source>void QScatterDataItem::setY(float</source>
          <target state="translated">void QScatterDataItem::setY(float</target>
        </trans-unit>
        <trans-unit id="882be4137d36b72bed4fd18f3c46f71903fae5d6" translate="yes" xml:space="preserve">
          <source>void QScatterDataItem::setZ(float</source>
          <target state="translated">void QScatterDataItem::setZ(float</target>
        </trans-unit>
        <trans-unit id="6e8382824b053b05e44c514fcd915afed92becec" translate="yes" xml:space="preserve">
          <source>void QScatterDataProxy::insertItem(int</source>
          <target state="translated">anular QScatterDataProxy::insertItem(int</target>
        </trans-unit>
        <trans-unit id="05afb49674f52a76e0652267bfe42496bf874834" translate="yes" xml:space="preserve">
          <source>void QScatterDataProxy::insertItems(int</source>
          <target state="translated">anular QScatterDataProxy::insertItems(int</target>
        </trans-unit>
        <trans-unit id="cbee67495273a2b4db796b58278a1e3c5b10eb9b" translate="yes" xml:space="preserve">
          <source>void QScatterDataProxy::removeItems(int</source>
          <target state="translated">anular QScatterDataProxy::removeItems(int</target>
        </trans-unit>
        <trans-unit id="7ffccc320c3bc64970031d6067e6f5123a5502dd" translate="yes" xml:space="preserve">
          <source>void QScatterDataProxy::resetArray(&lt;a href=&quot;qscatterdataproxy#QScatterDataArray-typedef&quot;&gt;QScatterDataArray&lt;/a&gt; *</source>
          <target state="translated">vac&amp;iacute;o QScatterDataProxy :: resetArray ( &lt;a href=&quot;qscatterdataproxy#QScatterDataArray-typedef&quot;&gt;QScatterDataArray&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="f84b1f9ec217d949bdb4f710fa05bf9da8abcccb" translate="yes" xml:space="preserve">
          <source>void QScatterDataProxy::setItem(int</source>
          <target state="translated">void QScatterDataProxy::setItem(int</target>
        </trans-unit>
        <trans-unit id="422c48038da85852b462fcb518f316de8eb0e5d7" translate="yes" xml:space="preserve">
          <source>void QScatterDataProxy::setItems(int</source>
          <target state="translated">void QScatterDataProxy::setItems(int</target>
        </trans-unit>
        <trans-unit id="0395fde256817769201342a600b5baff1d51e206" translate="yes" xml:space="preserve">
          <source>void QScene2D::addEntity(&lt;a href=&quot;qt3dcore-qentity&quot;&gt;Qt3DCore::QEntity&lt;/a&gt; *</source>
          <target state="translated">vac&amp;iacute;o QScene2D :: addEntity ( &lt;a href=&quot;qt3dcore-qentity&quot;&gt;Qt3DCore :: QEntity&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="14f4f86b33a57011d4e24ca04cbd424baa3d7419" translate="yes" xml:space="preserve">
          <source>void QScene2D::removeEntity(&lt;a href=&quot;qt3dcore-qentity&quot;&gt;Qt3DCore::QEntity&lt;/a&gt; *</source>
          <target state="translated">vac&amp;iacute;o QScene2D :: removeEntity ( &lt;a href=&quot;qt3dcore-qentity&quot;&gt;Qt3DCore :: QEntity&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="e94b44e12cfff33291affe59c7df33d52d6d567f" translate="yes" xml:space="preserve">
          <source>void QSceneChange::setDeliveryFlags(&lt;a href=&quot;qt3dcore-qscenechange#DeliveryFlag-enum&quot;&gt;Qt3DCore::QSceneChange::DeliveryFlags&lt;/a&gt;</source>
          <target state="translated">void QSceneChange :: setDeliveryFlags ( &lt;a href=&quot;qt3dcore-qscenechange#DeliveryFlag-enum&quot;&gt;Qt3DCore :: QSceneChange :: DeliveryFlags&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="255d9c4f45b2a21c7d1949c76dd7c8fb727efca6" translate="yes" xml:space="preserve">
          <source>void QScopeGuard::dismiss()</source>
          <target state="translated">anular QScopeGuard::dismiss()</target>
        </trans-unit>
        <trans-unit id="0757d4c12f74bd7fd611a5dcf839c053855abd19" translate="yes" xml:space="preserve">
          <source>void QScopedArrayPointer::swap(&lt;a href=&quot;qscopedarraypointer#QScopedArrayPointer&quot;&gt;QScopedArrayPointer&lt;/a&gt;&amp;lt;T, Cleanup&amp;gt; &amp;amp;</source>
          <target state="translated">void QScopedArrayPointer :: swap ( &lt;a href=&quot;qscopedarraypointer#QScopedArrayPointer&quot;&gt;QScopedArrayPointer&lt;/a&gt; &amp;lt;T, Limpieza&amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="d8525f859a3b9d418770f0a10673c141f7c0abd3" translate="yes" xml:space="preserve">
          <source>void QScopedPointer::reset(T *</source>
          <target state="translated">anular QScopedPointer::reset(T *</target>
        </trans-unit>
        <trans-unit id="182e6f72295f450642f2e035f5cf900c4ca9b3ab" translate="yes" xml:space="preserve">
          <source>void QScopedPointer::swap(&lt;a href=&quot;qscopedpointer#QScopedPointer&quot;&gt;QScopedPointer&lt;/a&gt;&amp;lt;T, Cleanup&amp;gt; &amp;amp;</source>
          <target state="translated">void QScopedPointer :: swap ( &lt;a href=&quot;qscopedpointer#QScopedPointer&quot;&gt;QScopedPointer&lt;/a&gt; &amp;lt;T, Limpieza&amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="2412a4211cbeeb5c3944f1a91cbf6d19c4a91af7" translate="yes" xml:space="preserve">
          <source>void QScopedValueRollback::commit()</source>
          <target state="translated">anular QScopedValueRollback::commit()</target>
        </trans-unit>
        <trans-unit id="d9161da4c89265d619416323aabfe164fd1d1a6f" translate="yes" xml:space="preserve">
          <source>void QScreen::setOrientationUpdateMask(&lt;a href=&quot;qt#ScreenOrientation-enum&quot;&gt;Qt::ScreenOrientations&lt;/a&gt;</source>
          <target state="translated">void QScreen :: setOrientationUpdateMask ( &lt;a href=&quot;qt#ScreenOrientation-enum&quot;&gt;Qt :: ScreenOrientations&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="71de62c63f9767cf2b332b1bf3801122a314008a" translate="yes" xml:space="preserve">
          <source>void QScrollArea::ensureVisible(int</source>
          <target state="translated">anular el área de QScroll::ensureVisible(int</target>
        </trans-unit>
        <trans-unit id="7afcaa3493571611688ee0ba417076185bc58c9a" translate="yes" xml:space="preserve">
          <source>void QScrollArea::ensureWidgetVisible(&lt;a href=&quot;qwidget#QWidget&quot;&gt;QWidget&lt;/a&gt; *</source>
          <target state="translated">void QScrollArea :: asegurarWidgetVisible ( &lt;a href=&quot;qwidget#QWidget&quot;&gt;QWidget&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="b90564e6028d00ae9054a74d1f379083433632fa" translate="yes" xml:space="preserve">
          <source>void QScrollArea::setWidget(&lt;a href=&quot;qwidget#QWidget&quot;&gt;QWidget&lt;/a&gt; *</source>
          <target state="translated">void QScrollArea :: setWidget ( &lt;a href=&quot;qwidget#QWidget&quot;&gt;QWidget&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="54b6c1d809c7b3a4fcf102615e8ce93eef3c1581" translate="yes" xml:space="preserve">
          <source>void QScrollPrepareEvent::setContentPos(const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QScrollPrepareEvent :: setContentPos (const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="9acab244e9b4ab9dfbc115b19b47dad3f37a13f1" translate="yes" xml:space="preserve">
          <source>void QScrollPrepareEvent::setContentPosRange(const &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QScrollPrepareEvent :: setContentPosRange (const &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="beef83ab38445d380382924ff9cbb901502a8150" translate="yes" xml:space="preserve">
          <source>void QScrollPrepareEvent::setViewportSize(const &lt;a href=&quot;qsizef&quot;&gt;QSizeF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QScrollPrepareEvent :: setViewportSize (const &lt;a href=&quot;qsizef&quot;&gt;QSizeF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="36a664acf1295b01b95608a667bd21ab6e97b731" translate="yes" xml:space="preserve">
          <source>void QScroller::setSnapPositionsX(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">QScroller vac&amp;iacute;o :: setSnapPositionsX ( &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d4f6dea4f98465329670bcbe6ea61ab378668f52" translate="yes" xml:space="preserve">
          <source>void QScroller::setSnapPositionsX(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f0999f471456a9fa6a7c4666f858bdfe2adcbf4" translate="yes" xml:space="preserve">
          <source>void QScroller::setSnapPositionsX(const &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;&amp;gt; &amp;amp;</source>
          <target state="translated">void QScroller :: setSnapPositionsX (const &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; &amp;lt; &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt; &amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="2ffd5fb4001721265e2d8cba26c2dd3bd2f6cc97" translate="yes" xml:space="preserve">
          <source>void QScroller::setSnapPositionsX(const &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;&amp;gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1be7bc017ea4c90222b613564ba4c36e5df6a0e1" translate="yes" xml:space="preserve">
          <source>void QScroller::setSnapPositionsY(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">void QScroller :: setSnapPositionsY ( &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2bde53e715fab8520d5f81e9b8550b6a6fab2c8f" translate="yes" xml:space="preserve">
          <source>void QScroller::setSnapPositionsY(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4bb3916fdf5731269d86d91a84e44446356dd81" translate="yes" xml:space="preserve">
          <source>void QScroller::setSnapPositionsY(const &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;&amp;gt; &amp;amp;</source>
          <target state="translated">void QScroller :: setSnapPositionsY (const &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; &amp;lt; &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt; &amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="8447b3a6053630e8919aa71a4ec19b7cd3abf129" translate="yes" xml:space="preserve">
          <source>void QScroller::setSnapPositionsY(const &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;&amp;gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f4f0a2d7cf2ef44968c3388983574a55c1a1d83" translate="yes" xml:space="preserve">
          <source>void QScroller::stop()</source>
          <target state="translated">anular el QScroller::stop()</target>
        </trans-unit>
        <trans-unit id="b532d480437f34b880208e3f98f2fbfa565957c8" translate="yes" xml:space="preserve">
          <source>void QScrollerProperties::setScrollMetric(&lt;a href=&quot;qscrollerproperties#ScrollMetric-enum&quot;&gt;QScrollerProperties::ScrollMetric&lt;/a&gt;</source>
          <target state="translated">void QScrollerProperties :: setScrollMetric ( &lt;a href=&quot;qscrollerproperties#ScrollMetric-enum&quot;&gt;QScrollerProperties :: ScrollMetric&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="89d8476b546ef8f94ed68ba9c3fda6d3e6a8d6e5" translate="yes" xml:space="preserve">
          <source>void QSctpServer::setMaximumChannelCount(int</source>
          <target state="translated">void QSctpServer::setMaximumChannelCount(int</target>
        </trans-unit>
        <trans-unit id="3b6f17f70c2aba605e509921ba1c18c8cd5a763f" translate="yes" xml:space="preserve">
          <source>void QSctpSocket::setMaximumChannelCount(int</source>
          <target state="translated">void QSctpSocket::setMaximumChannelCount(int</target>
        </trans-unit>
        <trans-unit id="802c66b4bf8805a71ef133a48a25cad0b19aa13e" translate="yes" xml:space="preserve">
          <source>void QScxmlCompiler::setFileName(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QScxmlCompiler :: setFileName (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="286d91ef39fac5b049ace7e5584c1c69018e46a6" translate="yes" xml:space="preserve">
          <source>void QScxmlCompiler::setLoader(&lt;a href=&quot;qscxmlcompiler-loader&quot;&gt;QScxmlCompiler::Loader&lt;/a&gt; *</source>
          <target state="translated">void QScxmlCompiler :: setLoader ( &lt;a href=&quot;qscxmlcompiler-loader&quot;&gt;QScxmlCompiler :: Loader&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="dfbbdeb010d394d3e95504f009973a9e75ccbf83" translate="yes" xml:space="preserve">
          <source>void QScxmlDataModel::setStateMachine(&lt;a href=&quot;qscxmlstatemachine&quot;&gt;QScxmlStateMachine&lt;/a&gt; *</source>
          <target state="translated">vac&amp;iacute;o QScxmlDataModel :: setStateMachine ( &lt;a href=&quot;qscxmlstatemachine&quot;&gt;QScxmlStateMachine&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="4ecceaaddd1703e4c1a82a679d0b54fb878f01ed" translate="yes" xml:space="preserve">
          <source>void QScxmlEvent::clear()</source>
          <target state="translated">void QScxmlEvent::clear()</target>
        </trans-unit>
        <trans-unit id="4c6ab277241b4c4cf84c97f6a1bc6d3634576a3f" translate="yes" xml:space="preserve">
          <source>void QScxmlEvent::setData(const &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QScxmlEvent :: setData (const &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="1cd9a20b75678e576a493488c56d9e87a6358f74" translate="yes" xml:space="preserve">
          <source>void QScxmlEvent::setDelay(int</source>
          <target state="translated">void QScxmlEvent::setDelay(int</target>
        </trans-unit>
        <trans-unit id="723056e9885b8be29f066aab0e61269b7424a606" translate="yes" xml:space="preserve">
          <source>void QScxmlEvent::setErrorMessage(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QScxmlEvent :: setErrorMessage (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="dd031875a9c411a4f90847f52c936e74a2d88bb3" translate="yes" xml:space="preserve">
          <source>void QScxmlEvent::setEventType(const &lt;a href=&quot;qscxmlevent#EventType-enum&quot;&gt;QScxmlEvent::EventType&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QScxmlEvent :: setEventType (const &lt;a href=&quot;qscxmlevent#EventType-enum&quot;&gt;QScxmlEvent :: EventType&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="d490903699052220d88ee2c62bd2408b6c00e27e" translate="yes" xml:space="preserve">
          <source>void QScxmlEvent::setInvokeId(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QScxmlEvent :: setInvokeId (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="93a914945529a9662ffeb668c9b6790ab3bce399" translate="yes" xml:space="preserve">
          <source>void QScxmlEvent::setName(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QScxmlEvent :: setName (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="7fbe0ece3b0f2097907f55bf6452df83f08cebcd" translate="yes" xml:space="preserve">
          <source>void QScxmlEvent::setOrigin(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QScxmlEvent :: setOrigin (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="fc222d80b9afa620ef574b10cf25dc190077dfa2" translate="yes" xml:space="preserve">
          <source>void QScxmlEvent::setOriginType(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QScxmlEvent :: setOriginType (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="12799505a4b273749520235764fc57d746b507a4" translate="yes" xml:space="preserve">
          <source>void QScxmlEvent::setSendId(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QScxmlEvent :: setSendId (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="1c9f92e3cb89f25218a45ffeaec0d1dc35ee73cb" translate="yes" xml:space="preserve">
          <source>void QScxmlStateMachine::cancelDelayedEvent(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QScxmlStateMachine :: cancelDelayedEvent (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="f2e11a716dca3ba624c15a1896c0e8777d02100c" translate="yes" xml:space="preserve">
          <source>void QScxmlStateMachine::setDataModel(&lt;a href=&quot;qscxmldatamodel&quot;&gt;QScxmlDataModel&lt;/a&gt; *</source>
          <target state="translated">vac&amp;iacute;o QScxmlStateMachine :: setDataModel ( &lt;a href=&quot;qscxmldatamodel&quot;&gt;QScxmlDataModel&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="2f02046b2fc3ace9ae17622229a478437261aaaa" translate="yes" xml:space="preserve">
          <source>void QScxmlStateMachine::setRunning(bool</source>
          <target state="translated">void QScxmlStateMachine::setRunning(bool</target>
        </trans-unit>
        <trans-unit id="3f7a6025bb46c35b2c4a9aedc46e12dbb67a234d" translate="yes" xml:space="preserve">
          <source>void QScxmlStateMachine::submitEvent(&lt;a href=&quot;qscxmlevent&quot;&gt;QScxmlEvent&lt;/a&gt; *</source>
          <target state="translated">vac&amp;iacute;o QScxmlStateMachine :: submitEvent ( &lt;a href=&quot;qscxmlevent&quot;&gt;QScxmlEvent&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="f3b1041345aca6831bb6ae3f915ec5cc7d5f9d25" translate="yes" xml:space="preserve">
          <source>void QScxmlStateMachine::submitEvent(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QScxmlStateMachine :: submitEvent (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="483c5dfb23f356e688147d496d99f00851d0f2d1" translate="yes" xml:space="preserve">
          <source>void QSemaphore::acquire(int</source>
          <target state="translated">anular QSemáforo::adquirir(int</target>
        </trans-unit>
        <trans-unit id="77da48a713843010d0df98c667f395f12a38117f" translate="yes" xml:space="preserve">
          <source>void QSemaphore::release(int</source>
          <target state="translated">anular QSemaphore::release(int</target>
        </trans-unit>
        <trans-unit id="1c629e8c0a85f45bd22864b3c1fc39309801873b" translate="yes" xml:space="preserve">
          <source>void QSemaphoreReleaser::swap(&lt;a href=&quot;qsemaphorereleaser#QSemaphoreReleaser&quot;&gt;QSemaphoreReleaser&lt;/a&gt; &amp;amp;</source>
          <target state="translated">anular QSemaphoreReleaser :: swap ( &lt;a href=&quot;qsemaphorereleaser#QSemaphoreReleaser&quot;&gt;QSemaphoreReleaser&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="ac905271475de4c181c8e249b76df784d6190958" translate="yes" xml:space="preserve">
          <source>void QSensor::addFilter(&lt;a href=&quot;qsensorfilter&quot;&gt;QSensorFilter&lt;/a&gt; *</source>
          <target state="translated">anular QSensor :: addFilter ( &lt;a href=&quot;qsensorfilter&quot;&gt;QSensorFilter&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="73dbb4decf7dca39943d34147a4f45725697e0c1" translate="yes" xml:space="preserve">
          <source>void QSensor::removeFilter(&lt;a href=&quot;qsensorfilter&quot;&gt;QSensorFilter&lt;/a&gt; *</source>
          <target state="translated">anular QSensor :: removeFilter ( &lt;a href=&quot;qsensorfilter&quot;&gt;QSensorFilter&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="c091dd9595dba417f70641f8be6d4d81535a1499" translate="yes" xml:space="preserve">
          <source>void QSensor::setCurrentOrientation(int</source>
          <target state="translated">anular el sensor Q::setCurrentOrientation(int</target>
        </trans-unit>
        <trans-unit id="b9cc4094c8d733bdd8b24e155fe3012c946ba083" translate="yes" xml:space="preserve">
          <source>void QSensor::setEfficientBufferSize(int</source>
          <target state="translated">anular el QSensor::setEfficientBufferSize(int</target>
        </trans-unit>
        <trans-unit id="77d9a307966ffeebeff3c89a43ca26b41120e624" translate="yes" xml:space="preserve">
          <source>void QSensor::setMaxBufferSize(int</source>
          <target state="translated">anular el QSensor::setMaxBufferSize(int</target>
        </trans-unit>
        <trans-unit id="59953d751155aa7c3b1a8dd1c9e8b92a2e999e0b" translate="yes" xml:space="preserve">
          <source>void QSensor::setSkipDuplicates(bool</source>
          <target state="translated">anular el QSensor::setSkipDuplicates(bool</target>
        </trans-unit>
        <trans-unit id="eb923af6632e48f482c38ce10c9aedec2afe4ecb" translate="yes" xml:space="preserve">
          <source>void QSensorBackend::addDataRate(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QSensorBackend :: addDataRate ( &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e8c2080a6836bb0d955ce35e16461d6849221301" translate="yes" xml:space="preserve">
          <source>void QSensorBackend::addDataRate(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be54f8116aa7124966b67cf801a79c76af15c9b6" translate="yes" xml:space="preserve">
          <source>void QSensorBackend::addOutputRange(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">void QSensorBackend :: addOutputRange ( &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="65c39abfbca6b6b0bbc1ed22546b3579ecb13d5e" translate="yes" xml:space="preserve">
          <source>void QSensorBackend::addOutputRange(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eff4324e49c52d87cbeadd0700e407dfa8603e42" translate="yes" xml:space="preserve">
          <source>void QSensorBackend::newReadingAvailable()</source>
          <target state="translated">anular QSensorBackend::newReadingAvailable()</target>
        </trans-unit>
        <trans-unit id="a85ca52a28d8189510522a72d68381252c73773c" translate="yes" xml:space="preserve">
          <source>void QSensorBackend::sensorBusy()</source>
          <target state="translated">anular QSensorBackend::sensorBusy()</target>
        </trans-unit>
        <trans-unit id="808d45767f3d6315bbfc12daab55755ff97acffc" translate="yes" xml:space="preserve">
          <source>void QSensorBackend::sensorError(int</source>
          <target state="translated">void QSensorBackend::sensorError(int</target>
        </trans-unit>
        <trans-unit id="fb92c255a837bd34fd4379246d77ba0fd5128acb" translate="yes" xml:space="preserve">
          <source>void QSensorBackend::sensorStopped()</source>
          <target state="translated">void QSensorBackend::sensorStopped()</target>
        </trans-unit>
        <trans-unit id="e2939341e315cb78ee4e339a7558d44697e9d1cd" translate="yes" xml:space="preserve">
          <source>void QSensorBackend::setDataRates(const &lt;a href=&quot;qsensor&quot;&gt;QSensor&lt;/a&gt; *</source>
          <target state="translated">void QSensorBackend :: setDataRates (const &lt;a href=&quot;qsensor&quot;&gt;QSensor&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="3f3b54460192ca08bed203ea85924ac689fc44bf" translate="yes" xml:space="preserve">
          <source>void QSensorBackend::setDescription(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QSensorBackend :: setDescription (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="8f7ca8a553cd26c11e7f493251fc1ae039574c3b" translate="yes" xml:space="preserve">
          <source>void QSensorGesture::startDetection()</source>
          <target state="translated">void QSensorGesture::startDetection()</target>
        </trans-unit>
        <trans-unit id="488c073e8270f3433e090f6e2cb0cb88883056d9" translate="yes" xml:space="preserve">
          <source>void QSensorGesture::stopDetection()</source>
          <target state="translated">void QSensorGesture::stopDetection()</target>
        </trans-unit>
        <trans-unit id="fd02a75bf3f5d0035a8df4617532d8d63ceabede" translate="yes" xml:space="preserve">
          <source>void QSensorGestureRecognizer::createBackend()</source>
          <target state="translated">void QSensorGestureRecognizer::createBackend()</target>
        </trans-unit>
        <trans-unit id="2aed9a889c273ded9f439caad84c9bf30822fc19" translate="yes" xml:space="preserve">
          <source>void QSensorGestureRecognizer::startBackend()</source>
          <target state="translated">void QSensorGestureRecognizer::startBackend()</target>
        </trans-unit>
        <trans-unit id="913de30a6bdc5e67d2de1a025d4f208e28dc24ed" translate="yes" xml:space="preserve">
          <source>void QSensorGestureRecognizer::stopBackend()</source>
          <target state="translated">void QSensorGestureRecognizer::stopBackend()</target>
        </trans-unit>
        <trans-unit id="94f04816aa32726c33bfe9e870e9913a4b93bb4a" translate="yes" xml:space="preserve">
          <source>void QSensorReading::setTimestamp(&lt;a href=&quot;#quint64-typedef&quot;&gt;quint64&lt;/a&gt;</source>
          <target state="translated">void QSensorReading :: setTimestamp ( &lt;a href=&quot;#quint64-typedef&quot;&gt;quint64&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="00dfbb46fd97244b43ca0523bead075d47c1efb0" translate="yes" xml:space="preserve">
          <source>void QSensorReading::setTimestamp(&lt;a href=&quot;qtglobal#quint64-typedef&quot;&gt;quint64&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25369a56bdc07e3647036bf5a9ba517dbbccdfe0" translate="yes" xml:space="preserve">
          <source>void QSerialPort::setPort(const &lt;a href=&quot;qserialportinfo&quot;&gt;QSerialPortInfo&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QSerialPort :: setPort (const &lt;a href=&quot;qserialportinfo&quot;&gt;QSerialPortInfo&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="f0ca27a2f97a966b8d5ec2f0061a625e3f959862" translate="yes" xml:space="preserve">
          <source>void QSerialPort::setPortName(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QSerialPort :: setPortName (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="79f3d3392e03299ed0929cfa2f45adb6ed37db1e" translate="yes" xml:space="preserve">
          <source>void QSerialPort::setReadBufferSize(&lt;a href=&quot;#qint64-typedef&quot;&gt;qint64&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QSerialPort :: setReadBufferSize ( &lt;a href=&quot;#qint64-typedef&quot;&gt;qint64&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bdb70b3d9ac060afb47fbec9b92a1b06cf58858e" translate="yes" xml:space="preserve">
          <source>void QSerialPort::setReadBufferSize(&lt;a href=&quot;qtglobal#qint64-typedef&quot;&gt;qint64&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9172cb205295ac43cb9a5cb9ece7efbb53600cef" translate="yes" xml:space="preserve">
          <source>void QSerialPortInfo::swap(&lt;a href=&quot;qserialportinfo#QSerialPortInfo&quot;&gt;QSerialPortInfo&lt;/a&gt; &amp;amp;</source>
          <target state="translated">anular QSerialPortInfo :: swap ( &lt;a href=&quot;qserialportinfo#QSerialPortInfo&quot;&gt;QSerialPortInfo&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="967e1f6ba58aade6d72fc0bf40ade2b9123c7e03" translate="yes" xml:space="preserve">
          <source>void QSessionManager::cancel()</source>
          <target state="translated">anular QSessionManager::cancel()</target>
        </trans-unit>
        <trans-unit id="032750008f2972efe13fbb0700d8af720b0dfc23" translate="yes" xml:space="preserve">
          <source>void QSessionManager::release()</source>
          <target state="translated">anular QSessionManager::release()</target>
        </trans-unit>
        <trans-unit id="8ad43fb02327eb8399e52056199150ba880513ca" translate="yes" xml:space="preserve">
          <source>void QSessionManager::requestPhase2()</source>
          <target state="translated">void QSessionManager::requestPhase2()</target>
        </trans-unit>
        <trans-unit id="2493d7d572c14d0a49c479d6f365d3c2376fb114" translate="yes" xml:space="preserve">
          <source>void QSessionManager::setDiscardCommand(const &lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QSessionManager :: setDiscardCommand (const &lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="6a4dbb269ae0215fe3e8db5e2190e8e70f7b7b42" translate="yes" xml:space="preserve">
          <source>void QSessionManager::setManagerProperty(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QSessionManager :: setManagerProperty (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="03800afed00c5cc1afca59d23213b12dfa89ab4c" translate="yes" xml:space="preserve">
          <source>void QSessionManager::setRestartCommand(const &lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QSessionManager :: setRestartCommand (const &lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="639b2b6e4d0bba8124941237e384ac845f48ab3a" translate="yes" xml:space="preserve">
          <source>void QSessionManager::setRestartHint(&lt;a href=&quot;qsessionmanager#RestartHint-enum&quot;&gt;QSessionManager::RestartHint&lt;/a&gt;</source>
          <target state="translated">void QSessionManager :: setRestartHint ( &lt;a href=&quot;qsessionmanager#RestartHint-enum&quot;&gt;QSessionManager :: RestartHint&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3dda31e41d1e28258f3619041bc3b12549277c23" translate="yes" xml:space="preserve">
          <source>void QSet::clear()</source>
          <target state="translated">Vacío QSet::clear()</target>
        </trans-unit>
        <trans-unit id="ae9df5cb4a9f30bff00d68bbd9b94a421f0b2c6a" translate="yes" xml:space="preserve">
          <source>void QSet::reserve(int</source>
          <target state="translated">anular QSet::reserva(int</target>
        </trans-unit>
        <trans-unit id="8f97036e061d24bb8cc1c9c4276fbeeca77c46e4" translate="yes" xml:space="preserve">
          <source>void QSet::squeeze()</source>
          <target state="translated">anular QSet::squeeze()</target>
        </trans-unit>
        <trans-unit id="08cb2e169de0fe0836206965f0422316ba37894a" translate="yes" xml:space="preserve">
          <source>void QSet::swap(&lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="translated">anular QSet :: swap ( &lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt; &amp;lt;T&amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="1275e4c01637e090aa5a8de6955137cc061e79b2" translate="yes" xml:space="preserve">
          <source>void QSetIterator::toBack()</source>
          <target state="translated">anular QSetIterator::toBack()</target>
        </trans-unit>
        <trans-unit id="5dd87e64b19218427561259b2e916f0911d97c69" translate="yes" xml:space="preserve">
          <source>void QSetIterator::toFront()</source>
          <target state="translated">anular QSetIterator::toFront()</target>
        </trans-unit>
        <trans-unit id="250e443ec9aed77364d5066cc82fb0555f568072" translate="yes" xml:space="preserve">
          <source>void QSettings::beginGroup(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QSettings :: beginGroup (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="46f66b57f6957b45bbdf3a5c5b1268e07fe23f21" translate="yes" xml:space="preserve">
          <source>void QSettings::beginWriteArray(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QSettings :: beginWriteArray (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="32d3ad3372d02518c6d4a5870be540e5d8f7009e" translate="yes" xml:space="preserve">
          <source>void QSettings::clear()</source>
          <target state="translated">anular QSettings::clear()</target>
        </trans-unit>
        <trans-unit id="e9df2f837f736b126c0c5460d04ea29b3e84c91a" translate="yes" xml:space="preserve">
          <source>void QSettings::endArray()</source>
          <target state="translated">anular QSettings::endArray()</target>
        </trans-unit>
        <trans-unit id="0173e74edac7ede75bd3b645f47821bf5ca3fcbe" translate="yes" xml:space="preserve">
          <source>void QSettings::endGroup()</source>
          <target state="translated">anular QSettings::endGroup()</target>
        </trans-unit>
        <trans-unit id="0a0c00e440bce259fdcfb90a043f749d4f31dafa" translate="yes" xml:space="preserve">
          <source>void QSettings::remove(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QSettings :: remove (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="6eae899444c6a5b07b1aa990b8ebab82f5899c7d" translate="yes" xml:space="preserve">
          <source>void QSettings::setArrayIndex(int</source>
          <target state="translated">anular QSettings::setArrayIndex(int</target>
        </trans-unit>
        <trans-unit id="a212e529c800e6535bef0d2d3325f7d96f5358e3" translate="yes" xml:space="preserve">
          <source>void QSettings::setAtomicSyncRequired(bool</source>
          <target state="translated">anular QSettings::setAtomicSyncRequired(bool</target>
        </trans-unit>
        <trans-unit id="ae86657aa9d1028aead04ed351c5195cdff77f54" translate="yes" xml:space="preserve">
          <source>void QSettings::setFallbacksEnabled(bool</source>
          <target state="translated">anular QSettings::setFallbacksEnabled(bool</target>
        </trans-unit>
        <trans-unit id="d01e617345c80e5cf5b4634e94822aaba597899c" translate="yes" xml:space="preserve">
          <source>void QSettings::setIniCodec(&lt;a href=&quot;qtextcodec&quot;&gt;QTextCodec&lt;/a&gt; *</source>
          <target state="translated">Void QSettings :: setIniCodec ( &lt;a href=&quot;qtextcodec&quot;&gt;QTextCodec&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="763cee999fd1bdd3725ecb71911113cafbdd8863" translate="yes" xml:space="preserve">
          <source>void QSettings::setIniCodec(const char *</source>
          <target state="translated">anular QSettings::setIniCodec(const char *</target>
        </trans-unit>
        <trans-unit id="bdc0a3aac8845eb82511068ba94d8f3628a19220" translate="yes" xml:space="preserve">
          <source>void QSettings::setValue(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QSettings :: setValue (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="248019bba5182e8b57cb11178321f55d01fe9d17" translate="yes" xml:space="preserve">
          <source>void QSettings::sync()</source>
          <target state="translated">anular QSettings::sync()</target>
        </trans-unit>
        <trans-unit id="ce002a380bcb903a7800f34d2621ea72c8fa330e" translate="yes" xml:space="preserve">
          <source>void QShaderProgram::setShaderCode(&lt;a href=&quot;qt3drender-qshaderprogram#ShaderType-enum&quot;&gt;Qt3DRender::QShaderProgram::ShaderType&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QShaderProgram :: setShaderCode ( &lt;a href=&quot;qt3drender-qshaderprogram#ShaderType-enum&quot;&gt;Qt3DRender :: QShaderProgram :: ShaderType&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="42932d51a706b5f9ac1a2845c5e9273f6a20cde8" translate="yes" xml:space="preserve">
          <source>void QSharedDataPointer::detach()</source>
          <target state="translated">anular el QSharedDataPointer::separar()</target>
        </trans-unit>
        <trans-unit id="08f9630df3f29429a5e3caf1f712e4b9e866294e" translate="yes" xml:space="preserve">
          <source>void QSharedDataPointer::swap(&lt;a href=&quot;qshareddatapointer#QSharedDataPointer&quot;&gt;QSharedDataPointer&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="translated">void QSharedDataPointer :: swap ( &lt;a href=&quot;qshareddatapointer#QSharedDataPointer&quot;&gt;QSharedDataPointer&lt;/a&gt; &amp;lt;T&amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="0ffc28c8a32d188fd1abc26fedf62ccdcda35541" translate="yes" xml:space="preserve">
          <source>void QSharedMemory::setKey(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QSharedMemory :: setKey (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="e6f67578552d2a2865b70f5e66b99cb2658365a2" translate="yes" xml:space="preserve">
          <source>void QSharedMemory::setNativeKey(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QSharedMemory :: setNativeKey (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="ab3f32a166a5f3a6860ef152a3011fbbfc8ae171" translate="yes" xml:space="preserve">
          <source>void QSharedPointer::clear()</source>
          <target state="translated">anular el QSharedPointer::clear()</target>
        </trans-unit>
        <trans-unit id="011a3525afa26b09c18a8deedae4e160235c7b4a" translate="yes" xml:space="preserve">
          <source>void QSharedPointer::reset()</source>
          <target state="translated">anular el QSharedPointer::reset()</target>
        </trans-unit>
        <trans-unit id="c8c3feb541db41405cf4c96ca4563a5281907e53" translate="yes" xml:space="preserve">
          <source>void QSharedPointer::reset(T *</source>
          <target state="translated">anular QSharedPointer::reset(T *</target>
        </trans-unit>
        <trans-unit id="05c5af42b1947f0165d083dd15e59f754c7a2e1f" translate="yes" xml:space="preserve">
          <source>void QSharedPointer::swap(&lt;a href=&quot;qsharedpointer#QSharedPointer&quot;&gt;QSharedPointer&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="translated">void QSharedPointer :: swap ( &lt;a href=&quot;qsharedpointer#QSharedPointer&quot;&gt;QSharedPointer&lt;/a&gt; &amp;lt;T&amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="cbba6c021d80075bdd97f534655668e0806efc6b" translate="yes" xml:space="preserve">
          <source>void QSignalBlocker::reblock()</source>
          <target state="translated">anular QSignalBlocker::reblock()</target>
        </trans-unit>
        <trans-unit id="ecfbb901dc3eed01de167130d752213f92ba6018" translate="yes" xml:space="preserve">
          <source>void QSignalBlocker::unblock()</source>
          <target state="translated">anular QSignalBlocker::desbloquear()</target>
        </trans-unit>
        <trans-unit id="91e9922f357dc9e2d117f85410afa4405b5b1430" translate="yes" xml:space="preserve">
          <source>void QSignalMapper::removeMappings(&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="translated">anular QSignalMapper :: removeMappings ( &lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="8201a43e3da9a33fa35d538b9f5cbfb317826a40" translate="yes" xml:space="preserve">
          <source>void QSignalMapper::setMapping(&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="translated">vac&amp;iacute;o QSignalMapper :: setMapping ( &lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="622212b04a2890fa56796a4ed259fb2b1e428ff9" translate="yes" xml:space="preserve">
          <source>void QSignalTransition::setSenderObject(const &lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="translated">void QSignalTransition :: setSenderObject (const &lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="aba4c0d5011fb61f537409864e46d0db1e5909c3" translate="yes" xml:space="preserve">
          <source>void QSignalTransition::setSignal(const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QSignalTransition :: setSignal (const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="59ee6a13f39b2a082129c8a07a171a93964152ab" translate="yes" xml:space="preserve">
          <source>void QSize::scale(const &lt;a href=&quot;qsize#QSize&quot;&gt;QSize&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QSize :: scale (const &lt;a href=&quot;qsize#QSize&quot;&gt;QSize&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="51d59f2975df5ce24a892dea2573b96f4fd90c0f" translate="yes" xml:space="preserve">
          <source>void QSize::scale(int</source>
          <target state="translated">anular QSize::scale(int</target>
        </trans-unit>
        <trans-unit id="7a4febd77f6925f3c46926934f9ab788cbf1e016" translate="yes" xml:space="preserve">
          <source>void QSize::setHeight(int</source>
          <target state="translated">void QSize::setHeight(int</target>
        </trans-unit>
        <trans-unit id="3e1b01db1a5c30c6433062af6b2831189b9ca514" translate="yes" xml:space="preserve">
          <source>void QSize::setWidth(int</source>
          <target state="translated">void QSize::setWidth(int</target>
        </trans-unit>
        <trans-unit id="e1280e545e458bc03be67cdf9a1b0f6a2561768f" translate="yes" xml:space="preserve">
          <source>void QSize::transpose()</source>
          <target state="translated">anular QSize::transponer()</target>
        </trans-unit>
        <trans-unit id="81bada63a78b6f1a6a431ab5d49930d0a7a9ea42" translate="yes" xml:space="preserve">
          <source>void QSizeF::scale(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">void QSizeF :: scale ( &lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8b679607b0d0627fcd40826af67380b362d470f7" translate="yes" xml:space="preserve">
          <source>void QSizeF::scale(const &lt;a href=&quot;qsizef#QSizeF&quot;&gt;QSizeF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QSizeF :: scale (const &lt;a href=&quot;qsizef#QSizeF&quot;&gt;QSizeF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="41bdf487283de03f208f61f7455aa485a9bef73c" translate="yes" xml:space="preserve">
          <source>void QSizeF::setHeight(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QSizeF :: setHeight ( &lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="242f4c5c2c2e34cc55513bdf9f0b56902cb1dc76" translate="yes" xml:space="preserve">
          <source>void QSizeF::setWidth(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">anular QSizeF :: setWidth ( &lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="247967aea85491c14616db40af3134436077ee80" translate="yes" xml:space="preserve">
          <source>void QSizeF::transpose()</source>
          <target state="translated">anular QSizeF::transponer()</target>
        </trans-unit>
        <trans-unit id="3070c6c69ffd0cb0b56a2d9d4e2c9447bc84dd88" translate="yes" xml:space="preserve">
          <source>void QSizePolicy::setControlType(&lt;a href=&quot;qsizepolicy#ControlType-enum&quot;&gt;QSizePolicy::ControlType&lt;/a&gt;</source>
          <target state="translated">void QSizePolicy :: setControlType ( &lt;a href=&quot;qsizepolicy#ControlType-enum&quot;&gt;QSizePolicy :: ControlType&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1e877e33b5a084825a91e85a31c5f71c71d3ae44" translate="yes" xml:space="preserve">
          <source>void QSizePolicy::setHeightForWidth(bool</source>
          <target state="translated">void QSizePolicy::setHeightForWidth(bool</target>
        </trans-unit>
        <trans-unit id="d97cd066230fb3f87475290c9c1b4a129e793e59" translate="yes" xml:space="preserve">
          <source>void QSizePolicy::setHorizontalPolicy(&lt;a href=&quot;qsizepolicy#Policy-enum&quot;&gt;QSizePolicy::Policy&lt;/a&gt;</source>
          <target state="translated">anular QSizePolicy :: setHorizontalPolicy ( &lt;a href=&quot;qsizepolicy#Policy-enum&quot;&gt;QSizePolicy :: Pol&amp;iacute;tica&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d324517fe0a4d7632bcc8ae908c55a7ba5b39fc0" translate="yes" xml:space="preserve">
          <source>void QSizePolicy::setHorizontalStretch(int</source>
          <target state="translated">void QSizePolicy::setHorizontalStretch(int</target>
        </trans-unit>
        <trans-unit id="99e61fc6aa33ba49e990461980ae5af413f9668d" translate="yes" xml:space="preserve">
          <source>void QSizePolicy::setRetainSizeWhenHidden(bool</source>
          <target state="translated">void QSizePolicy::setRetainSizeWhenHidden(bool</target>
        </trans-unit>
        <trans-unit id="6b1c9acfff3ec2f93515946cc3133c538ec422be" translate="yes" xml:space="preserve">
          <source>void QSizePolicy::setVerticalPolicy(&lt;a href=&quot;qsizepolicy#Policy-enum&quot;&gt;QSizePolicy::Policy&lt;/a&gt;</source>
          <target state="translated">void QSizePolicy :: setVerticalPolicy ( &lt;a href=&quot;qsizepolicy#Policy-enum&quot;&gt;QSizePolicy :: Pol&amp;iacute;tica&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9c7211eae2dcbf9bbc0b1010da3cc9fc0ffb454c" translate="yes" xml:space="preserve">
          <source>void QSizePolicy::setVerticalStretch(int</source>
          <target state="translated">void QSizePolicy::setVerticalStretch(int</target>
        </trans-unit>
        <trans-unit id="73b69fe13d6559fa2b9d90814821f4e3c3671b40" translate="yes" xml:space="preserve">
          <source>void QSizePolicy::setWidthForHeight(bool</source>
          <target state="translated">void QSizePolicy::setWidthForHeight(bool</target>
        </trans-unit>
        <trans-unit id="77c1e7cbeb8033e23338538a72ed7e692f51f571" translate="yes" xml:space="preserve">
          <source>void QSizePolicy::transpose()</source>
          <target state="translated">anular QSizePolicy::transpose()</target>
        </trans-unit>
        <trans-unit id="e2bb50ae76a4dac9ec86f7c2568a7b78f0f46cd3" translate="yes" xml:space="preserve">
          <source>void QSound::setLoops(int</source>
          <target state="translated">void QSound::setLoops(int</target>
        </trans-unit>
        <trans-unit id="c44e03ab2b501414f64d87d5a4e33ce3dab3b28e" translate="yes" xml:space="preserve">
          <source>void QSoundEffect::setCategory(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QSoundEffect :: setCategory (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="0e263b184078c85a3026082021d6820665b25ff0" translate="yes" xml:space="preserve">
          <source>void QSoundEffect::setLoopCount(int</source>
          <target state="translated">void QSoundEffect::setLoopCount(int</target>
        </trans-unit>
        <trans-unit id="619dfc66ed9870ed7a9b992d77a00bc7abe840a5" translate="yes" xml:space="preserve">
          <source>void QSoundEffect::setMuted(bool</source>
          <target state="translated">void QSoundEffect::setMuted(bool</target>
        </trans-unit>
        <trans-unit id="0a7f4373cf215b054727b07078ce3c3ddaf590f3" translate="yes" xml:space="preserve">
          <source>void QSoundEffect::setSource(const &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QSoundEffect :: setSource (const &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="85b42b6867ebaf82cf9b1a6939e3f4adb4e367bc" translate="yes" xml:space="preserve">
          <source>void QSoundEffect::setVolume(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">QSoundEffect vac&amp;iacute;o :: setVolume ( &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2826e49a7b8ac4023d837de3ebcdf6f9c7193460" translate="yes" xml:space="preserve">
          <source>void QSoundEffect::setVolume(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68ed0b7d027527b72834826a348c665682026131" translate="yes" xml:space="preserve">
          <source>void QSourceLocation::setColumn(&lt;a href=&quot;#qint64-typedef&quot;&gt;qint64&lt;/a&gt;</source>
          <target state="translated">void QSourceLocation :: setColumn ( &lt;a href=&quot;#qint64-typedef&quot;&gt;qint64&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="05a78ff68209ca8b8a65086a75478fe18ea3211f" translate="yes" xml:space="preserve">
          <source>void QSourceLocation::setColumn(&lt;a href=&quot;qtglobal#qint64-typedef&quot;&gt;qint64&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d41babb8f1a520a17c1b93d1b8b4fef57fc76aa" translate="yes" xml:space="preserve">
          <source>void QSourceLocation::setLine(&lt;a href=&quot;#qint64-typedef&quot;&gt;qint64&lt;/a&gt;</source>
          <target state="translated">void QSourceLocation :: setLine ( &lt;a href=&quot;#qint64-typedef&quot;&gt;qint64&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bd66cf5da646bbcf50643a8ce572bfe50949ed5d" translate="yes" xml:space="preserve">
          <source>void QSourceLocation::setLine(&lt;a href=&quot;qtglobal#qint64-typedef&quot;&gt;qint64&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="971ae7e42a3996d006d8ce0a1692186448f6d109" translate="yes" xml:space="preserve">
          <source>void QSourceLocation::setUri(const &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QSourceLocation :: setUri (const &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="bbd9097cbbcc65526950a4c6ce2ce8b59909268d" translate="yes" xml:space="preserve">
          <source>void QSpacerItem::changeSize(int</source>
          <target state="translated">anular QSpacerItem::changeSize(int</target>
        </trans-unit>
        <trans-unit id="bbe1d549d2f98cb3017a4390f1210fb268c2808c" translate="yes" xml:space="preserve">
          <source>void QSphereGeometry::updateIndices()</source>
          <target state="translated">void QSphereGeometry::updateIndices()</target>
        </trans-unit>
        <trans-unit id="f87972d9d91062607ba18ee2cbfcd2608e0cbf45" translate="yes" xml:space="preserve">
          <source>void QSphereGeometry::updateVertices()</source>
          <target state="translated">void QSphereGeometry::updateVertices()</target>
        </trans-unit>
        <trans-unit id="fae1cc6aaad5caeae3d4915f629b3f4162a9bc0a" translate="yes" xml:space="preserve">
          <source>void QSpinBox::setRange(int</source>
          <target state="translated">void QSpinBox::setRange(int</target>
        </trans-unit>
        <trans-unit id="fae264c7d6dba22dcbadec2ec2158a6da3d23a48" translate="yes" xml:space="preserve">
          <source>void QSpinBox::setStepType(&lt;a href=&quot;qabstractspinbox#StepType-enum&quot;&gt;QAbstractSpinBox::StepType&lt;/a&gt;</source>
          <target state="translated">void QSpinBox :: setStepType ( &lt;a href=&quot;qabstractspinbox#StepType-enum&quot;&gt;QAbstractSpinBox :: StepType&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="58ddf58c97587f387a43aa99e163cf34897c818e" translate="yes" xml:space="preserve">
          <source>void QSplashScreen::finish(&lt;a href=&quot;qwidget#QWidget&quot;&gt;QWidget&lt;/a&gt; *</source>
          <target state="translated">void QSplashScreen :: finish ( &lt;a href=&quot;qwidget#QWidget&quot;&gt;QWidget&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="1af5c9c000378eec3d123eadc634040108a07223" translate="yes" xml:space="preserve">
          <source>void QSplashScreen::repaint()</source>
          <target state="translated">anular QSplashScreen::repintar()</target>
        </trans-unit>
        <trans-unit id="b96ea4f0caa74ed05306983d3d49ace0dc6a9c52" translate="yes" xml:space="preserve">
          <source>void QSplashScreen::setPixmap(const &lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QSplashScreen :: setPixmap (const &lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="750187b0bf08c846b19063737c93b355698a07b2" translate="yes" xml:space="preserve">
          <source>void QSplitter::addWidget(&lt;a href=&quot;qwidget#QWidget&quot;&gt;QWidget&lt;/a&gt; *</source>
          <target state="translated">void QSplitter :: addWidget ( &lt;a href=&quot;qwidget#QWidget&quot;&gt;QWidget&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="db0cce3cad409e721d54a2eff87bf8a01bcc407f" translate="yes" xml:space="preserve">
          <source>void QSplitter::getRange(int</source>
          <target state="translated">anular QSplitter::getRange(int</target>
        </trans-unit>
        <trans-unit id="a65d5dc76961d837555fdf958d84ff5f32541e5b" translate="yes" xml:space="preserve">
          <source>void QSplitter::insertWidget(int</source>
          <target state="translated">anular QSplitter::insertarWidget(int</target>
        </trans-unit>
        <trans-unit id="32b38ee1fb62b0c5d7e0c67428d45e68e8024417" translate="yes" xml:space="preserve">
          <source>void QSplitter::refresh()</source>
          <target state="translated">anular el QSplitter::refresh()</target>
        </trans-unit>
        <trans-unit id="af49a669b489eee1dbe5e2f6e5f479ec45b16417" translate="yes" xml:space="preserve">
          <source>void QSplitter::setCollapsible(int</source>
          <target state="translated">anular QSplitter::setCollapsible(int</target>
        </trans-unit>
        <trans-unit id="db9f2bd10061c18860e03244e9e4760d904d677b" translate="yes" xml:space="preserve">
          <source>void QSplitter::setSizes(const &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;int&amp;gt; &amp;amp;</source>
          <target state="translated">void QSplitter :: setSizes (const &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; &amp;lt;int&amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="abc4fa8c558c34b0033ca96880a54b7b35eac957" translate="yes" xml:space="preserve">
          <source>void QSplitter::setStretchFactor(int</source>
          <target state="translated">anular QSplitter::setStretchFactor(int</target>
        </trans-unit>
        <trans-unit id="746950931f83c5d92c2fee51b994b5439ed4d012" translate="yes" xml:space="preserve">
          <source>void QSplitterHandle::setOrientation(&lt;a href=&quot;qt#Orientation-enum&quot;&gt;Qt::Orientation&lt;/a&gt;</source>
          <target state="translated">void QSplitterHandle :: setOrientation ( &lt;a href=&quot;qt#Orientation-enum&quot;&gt;Qt :: Orientation&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9f098b0a5544e325bdc87cccf1f47f07656d1d7e" translate="yes" xml:space="preserve">
          <source>void QSqlDatabase::close()</source>
          <target state="translated">anular la base de datos QSql::close()</target>
        </trans-unit>
        <trans-unit id="2f7a36e63ab366d908e73b43e4441fae9315bc26" translate="yes" xml:space="preserve">
          <source>void QSqlDatabase::setConnectOptions(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QSqlDatabase :: setConnectOptions (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="e5bf24aa30e06b4c54132f8a811941e3ecd8d4ec" translate="yes" xml:space="preserve">
          <source>void QSqlDatabase::setDatabaseName(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QSqlDatabase :: setDatabaseName (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="c816dce33f02acf6dd0cafba1c8562692a1fc64b" translate="yes" xml:space="preserve">
          <source>void QSqlDatabase::setHostName(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QSqlDatabase :: setHostName (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="bbf43d164c0f732428b4e6ff21bd25b4b5a5923a" translate="yes" xml:space="preserve">
          <source>void QSqlDatabase::setNumericalPrecisionPolicy(&lt;a href=&quot;qsql#NumericalPrecisionPolicy-enum&quot;&gt;QSql::NumericalPrecisionPolicy&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QSqlDatabase :: setNumericalPrecisionPolicy ( &lt;a href=&quot;qsql#NumericalPrecisionPolicy-enum&quot;&gt;QSql :: NumericalPrecisionPolicy&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9bf5397c853d87bd86163185671da96f6a074e3c" translate="yes" xml:space="preserve">
          <source>void QSqlDatabase::setPassword(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QSqlDatabase :: setPassword (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="59298a19b9262e20d6a15543ce975ecc03fcb85b" translate="yes" xml:space="preserve">
          <source>void QSqlDatabase::setPort(int</source>
          <target state="translated">anular la base de datos QSql::setPort(int</target>
        </trans-unit>
        <trans-unit id="73dd29c1779f987d3d13320924a73e9f4f341a6d" translate="yes" xml:space="preserve">
          <source>void QSqlDatabase::setUserName(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QSqlDatabase :: setUserName (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="e13cbd1563442193a16a0a317c1f0d6aa6af0c8b" translate="yes" xml:space="preserve">
          <source>void QSqlDriver::setNumericalPrecisionPolicy(&lt;a href=&quot;qsql#NumericalPrecisionPolicy-enum&quot;&gt;QSql::NumericalPrecisionPolicy&lt;/a&gt;</source>
          <target state="translated">void QSqlDriver :: setNumericalPrecisionPolicy ( &lt;a href=&quot;qsql#NumericalPrecisionPolicy-enum&quot;&gt;QSql :: NumericalPrecisionPolicy&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a0bcd9e8f777f0267688143f3843872e2011ee3f" translate="yes" xml:space="preserve">
          <source>void QSqlError::swap(&lt;a href=&quot;https://doc.qt.io/qt-5.13/qsqlerror-obsolete.html#QSqlError&quot;&gt;QSqlError&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QSqlError :: swap ( &lt;a href=&quot;https://doc.qt.io/qt-5.13/qsqlerror-obsolete.html#QSqlError&quot;&gt;QSqlError&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="463870432aab0d221b7516a55a41ce21fa05f56b" translate="yes" xml:space="preserve">
          <source>void QSqlError::swap(&lt;a href=&quot;https://doc.qt.io/qt-5.15/qsqlerror-obsolete.html#QSqlError&quot;&gt;QSqlError&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcc499d7388d015f08a6df9d8e017f7d1f25f513" translate="yes" xml:space="preserve">
          <source>void QSqlField::clear()</source>
          <target state="translated">anular QSqlField::clear()</target>
        </trans-unit>
        <trans-unit id="501ba3f4da98a0be674356f67e880453d6691d29" translate="yes" xml:space="preserve">
          <source>void QSqlField::setAutoValue(bool</source>
          <target state="translated">anular QSqlField::setAutoValue(bool</target>
        </trans-unit>
        <trans-unit id="044464984b64974d9af5d2f9adbb4640d225bd02" translate="yes" xml:space="preserve">
          <source>void QSqlField::setDefaultValue(const &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QSqlField :: setDefaultValue (const &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="46b8f70dd0159e1ceb56d21d080738948b8c7732" translate="yes" xml:space="preserve">
          <source>void QSqlField::setGenerated(bool</source>
          <target state="translated">void QSqlField::setGenerated(bool</target>
        </trans-unit>
        <trans-unit id="8a36a6d636ae56d77f410df9ff20a6584d8b2e45" translate="yes" xml:space="preserve">
          <source>void QSqlField::setLength(int</source>
          <target state="translated">void QSqlField::setLength(int</target>
        </trans-unit>
        <trans-unit id="dabfddc1b49ca89bc0abe85f42ff376a87d2d7fa" translate="yes" xml:space="preserve">
          <source>void QSqlField::setName(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QSqlField :: setName (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="e5b42bf6f7e664cfe0db79c57ed53fa5c1b7d600" translate="yes" xml:space="preserve">
          <source>void QSqlField::setPrecision(int</source>
          <target state="translated">anular QSqlField::setPrecision(int</target>
        </trans-unit>
        <trans-unit id="49215ccf7cde16c7ba949b5daf337becf02cf003" translate="yes" xml:space="preserve">
          <source>void QSqlField::setReadOnly(bool</source>
          <target state="translated">void QSqlField::setReadOnly(bool</target>
        </trans-unit>
        <trans-unit id="23293117333ac50d813579c84c55a6660453f785" translate="yes" xml:space="preserve">
          <source>void QSqlField::setRequired(bool</source>
          <target state="translated">void QSqlField::setRequired(bool</target>
        </trans-unit>
        <trans-unit id="ccaad980615139440b2296f52d26ba551760535b" translate="yes" xml:space="preserve">
          <source>void QSqlField::setRequiredStatus(&lt;a href=&quot;qsqlfield#RequiredStatus-enum&quot;&gt;QSqlField::RequiredStatus&lt;/a&gt;</source>
          <target state="translated">void QSqlField :: setRequiredStatus ( &lt;a href=&quot;qsqlfield#RequiredStatus-enum&quot;&gt;QSqlField :: RequiredStatus&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fb4a2840c5f9369d4d8d7334f872591a21b91a4c" translate="yes" xml:space="preserve">
          <source>void QSqlField::setTableName(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QSqlField :: setTableName (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="6291c08774518bfc93dd282a8c9e74a3ffb2667d" translate="yes" xml:space="preserve">
          <source>void QSqlField::setType(&lt;a href=&quot;https://doc.qt.io/qt-5.13/qvariant-obsolete.html#Type-enum&quot;&gt;QVariant::Type&lt;/a&gt;</source>
          <target state="translated">void QSqlField :: setType ( &lt;a href=&quot;https://doc.qt.io/qt-5.13/qvariant-obsolete.html#Type-enum&quot;&gt;QVariant :: Type&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="98dbcebe1d709ad6ef08e67a5104cc02248c5d09" translate="yes" xml:space="preserve">
          <source>void QSqlField::setType(&lt;a href=&quot;https://doc.qt.io/qt-5.15/qvariant-obsolete.html#Type-enum&quot;&gt;QVariant::Type&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7faa52498a2f6e5d46b33b95620fab95936b23ac" translate="yes" xml:space="preserve">
          <source>void QSqlField::setValue(const &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QSqlField :: setValue (const &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="709c31b8a9f9dd51239377c2eb86d96c481da903" translate="yes" xml:space="preserve">
          <source>void QSqlIndex::append(const &lt;a href=&quot;qsqlfield&quot;&gt;QSqlField&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QSqlIndex :: append (const &lt;a href=&quot;qsqlfield&quot;&gt;QSqlField&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="7940836f5bc83aceccc4327d7a11fedf9bd932fc" translate="yes" xml:space="preserve">
          <source>void QSqlIndex::setCursorName(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QSqlIndex :: setCursorName (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="5a43c3db20157549bfeafa80891a4addf37590da" translate="yes" xml:space="preserve">
          <source>void QSqlIndex::setDescending(int</source>
          <target state="translated">void QSqlIndex::setDescendiendo(int</target>
        </trans-unit>
        <trans-unit id="cf3aeaabe44ea5737fdfcc85cfb88e795601ca7b" translate="yes" xml:space="preserve">
          <source>void QSqlIndex::setName(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QSqlIndex :: setName (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="f9b849499cdffed3684b003483aef116545b0152" translate="yes" xml:space="preserve">
          <source>void QSqlQuery::addBindValue(const &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QSqlQuery :: addBindValue (const &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="70fa9e3301cc2c6b5fde9f132c8603667367c164" translate="yes" xml:space="preserve">
          <source>void QSqlQuery::bindValue(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QSqlQuery :: bindValue (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="79bbeb59585f5fb42300a5ff6fc6e1b4bce6791e" translate="yes" xml:space="preserve">
          <source>void QSqlQuery::bindValue(int</source>
          <target state="translated">void QSqlQuery::bindValue(int</target>
        </trans-unit>
        <trans-unit id="c9556730f00eb1df4d4789922f9a3c897838a694" translate="yes" xml:space="preserve">
          <source>void QSqlQuery::clear()</source>
          <target state="translated">anular QSqlQuery::clear()</target>
        </trans-unit>
        <trans-unit id="efc5ae29b4aa4b85f119a377578b28b42ee3c0ac" translate="yes" xml:space="preserve">
          <source>void QSqlQuery::finish()</source>
          <target state="translated">anular QSqlQuery::finish()</target>
        </trans-unit>
        <trans-unit id="a1b80079acfc5358121bb6f1f97b7f7103a8a5a6" translate="yes" xml:space="preserve">
          <source>void QSqlQuery::setForwardOnly(bool</source>
          <target state="translated">void QSqlQuery::setForwardOnly(bool</target>
        </trans-unit>
        <trans-unit id="f4a33fe350339bd51f73a105b42c88917e4ba2ac" translate="yes" xml:space="preserve">
          <source>void QSqlQuery::setNumericalPrecisionPolicy(&lt;a href=&quot;qsql#NumericalPrecisionPolicy-enum&quot;&gt;QSql::NumericalPrecisionPolicy&lt;/a&gt;</source>
          <target state="translated">void QSqlQuery :: setNumericalPrecisionPolicy ( &lt;a href=&quot;qsql#NumericalPrecisionPolicy-enum&quot;&gt;QSql :: NumericalPrecisionPolicy&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6cdf8e45cd1912ba4a7228007c6cf29634e978d5" translate="yes" xml:space="preserve">
          <source>void QSqlQueryModel::setQuery(const &lt;a href=&quot;qsqlquery&quot;&gt;QSqlQuery&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QSqlQueryModel :: setQuery (const &lt;a href=&quot;qsqlquery&quot;&gt;QSqlQuery&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="69dd858a63157187f3046586c83327d8c653de2b" translate="yes" xml:space="preserve">
          <source>void QSqlQueryModel::setQuery(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QSqlQueryModel :: setQuery (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="ce9d476e9c7cd41d0315f4e0b8e9faf7bd483034" translate="yes" xml:space="preserve">
          <source>void QSqlRecord::append(const &lt;a href=&quot;qsqlfield&quot;&gt;QSqlField&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QSqlRecord :: append (const &lt;a href=&quot;qsqlfield&quot;&gt;QSqlField&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="f0c757f0b840a87e4ea180ca73e627a2c8d02e35" translate="yes" xml:space="preserve">
          <source>void QSqlRecord::clear()</source>
          <target state="translated">anular QSqlRecord::clear()</target>
        </trans-unit>
        <trans-unit id="0226ff7850c5ff66179f48249150475befff34fa" translate="yes" xml:space="preserve">
          <source>void QSqlRecord::clearValues()</source>
          <target state="translated">anular QSqlRecord::clearValues()</target>
        </trans-unit>
        <trans-unit id="f9f1d775b5042d0bd9917b56a86d6f98d0f04947" translate="yes" xml:space="preserve">
          <source>void QSqlRecord::insert(int</source>
          <target state="translated">anular QSqlRecord::insertar(int</target>
        </trans-unit>
        <trans-unit id="696d3daa2ea5c9095f5da023a22b70a2ce93fb0b" translate="yes" xml:space="preserve">
          <source>void QSqlRecord::remove(int</source>
          <target state="translated">anular QSqlRecord::remove(int</target>
        </trans-unit>
        <trans-unit id="df69bc6f14f2bdbceeb8347d30e0c5c53cecefe9" translate="yes" xml:space="preserve">
          <source>void QSqlRecord::replace(int</source>
          <target state="translated">anular QSqlRecord::replace(int</target>
        </trans-unit>
        <trans-unit id="7b48f103574fb83a96c591e4218c4cce728090e2" translate="yes" xml:space="preserve">
          <source>void QSqlRecord::setGenerated(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QSqlRecord :: setGenerated (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="29ef5d0caaf0deae3b027f3ac5fae8776e8cff8a" translate="yes" xml:space="preserve">
          <source>void QSqlRecord::setGenerated(int</source>
          <target state="translated">anular QSqlRecord::setGenerated(int</target>
        </trans-unit>
        <trans-unit id="bde999bc274aee3eee698f5403abc13ec4e69d39" translate="yes" xml:space="preserve">
          <source>void QSqlRecord::setNull(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QSqlRecord :: setNull (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="727e92a0e56bf5b7ec85586a9431d9a8a45fddad" translate="yes" xml:space="preserve">
          <source>void QSqlRecord::setNull(int</source>
          <target state="translated">anular QSqlRecord::setNull(int</target>
        </trans-unit>
        <trans-unit id="d0049f210ad5f70832437eff3d443ed756a184d5" translate="yes" xml:space="preserve">
          <source>void QSqlRecord::setValue(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QSqlRecord :: setValue (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="5df2ed79b6fac2c9138f815b4a87fb6dc247c2bd" translate="yes" xml:space="preserve">
          <source>void QSqlRecord::setValue(int</source>
          <target state="translated">anular QSqlRecord::setValue(int</target>
        </trans-unit>
        <trans-unit id="fbb24936428884361ac5ae95d3c7642d40f0fee4" translate="yes" xml:space="preserve">
          <source>void QSqlRelation::swap(&lt;a href=&quot;qsqlrelation#QSqlRelation&quot;&gt;QSqlRelation&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QSqlRelation :: swap ( &lt;a href=&quot;qsqlrelation#QSqlRelation&quot;&gt;QSqlRelation&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="661e3534e470a8882d60fbd02c727c4bc5b34924" translate="yes" xml:space="preserve">
          <source>void QSqlRelationalTableModel::setJoinMode(&lt;a href=&quot;qsqlrelationaltablemodel#JoinMode-enum&quot;&gt;QSqlRelationalTableModel::JoinMode&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QSqlRelationalTableModel :: setJoinMode ( &lt;a href=&quot;qsqlrelationaltablemodel#JoinMode-enum&quot;&gt;QSqlRelationalTableModel :: JoinMode&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="04e480749424bf359eb9388a578ab285b940c81b" translate="yes" xml:space="preserve">
          <source>void QSslCertificate::clear()</source>
          <target state="translated">anular el certificado QSsl::clear()</target>
        </trans-unit>
        <trans-unit id="52c0c4dcfe6423925034732bf8bb357a467ee27a" translate="yes" xml:space="preserve">
          <source>void QSslCertificate::swap(&lt;a href=&quot;qsslcertificate#QSslCertificate&quot;&gt;QSslCertificate&lt;/a&gt; &amp;amp;</source>
          <target state="translated">anular QSslCertificate :: swap ( &lt;a href=&quot;qsslcertificate#QSslCertificate&quot;&gt;QSslCertificate&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="04d561e8ab9f5c9960d9a5eb8bcea776a0f5cdb8" translate="yes" xml:space="preserve">
          <source>void QSslCertificateExtension::swap(&lt;a href=&quot;qsslcertificateextension#QSslCertificateExtension&quot;&gt;QSslCertificateExtension&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QSslCertificateExtension :: swap ( &lt;a href=&quot;qsslcertificateextension#QSslCertificateExtension&quot;&gt;QSslCertificateExtension&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="07a8f5b3dd62382bd8a313fb64e932e6fa283a8a" translate="yes" xml:space="preserve">
          <source>void QSslCipher::swap(&lt;a href=&quot;qsslcipher#QSslCipher&quot;&gt;QSslCipher&lt;/a&gt; &amp;amp;</source>
          <target state="translated">anular QSslCipher :: swap ( &lt;a href=&quot;qsslcipher#QSslCipher&quot;&gt;QSslCipher&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="10852d66873c52d466366a1db60e86096c556c20" translate="yes" xml:space="preserve">
          <source>void QSslConfiguration::addCaCertificate(const &lt;a href=&quot;qsslcertificate&quot;&gt;QSslCertificate&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="808f7da3bd14dea83706ca3f6ddcd5cf96aa693c" translate="yes" xml:space="preserve">
          <source>void QSslConfiguration::addCaCertificates(const &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;&lt;a href=&quot;qsslcertificate&quot;&gt;QSslCertificate&lt;/a&gt;&amp;gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6469ad8056de90d1937604acf34b4501fcfe850c" translate="yes" xml:space="preserve">
          <source>void QSslConfiguration::setAllowedNextProtocols(&lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt;&amp;gt;</source>
          <target state="translated">void QSslConfiguration :: setAllowedNextProtocols ( &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; &amp;lt; &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;gt;</target>
        </trans-unit>
        <trans-unit id="0c5a12ef6ca40d214428c5d69e3ee7aadc76683c" translate="yes" xml:space="preserve">
          <source>void QSslConfiguration::setBackendConfiguration(const &lt;a href=&quot;qmap&quot;&gt;QMap&lt;/a&gt;&amp;lt;&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt;, &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt;&amp;gt; &amp;amp;</source>
          <target state="translated">void QSslConfiguration :: setBackendConfiguration (const &lt;a href=&quot;qmap&quot;&gt;QMap&lt;/a&gt; &amp;lt; &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; , &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; &amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="76d9e605398ece5031fb25dcee801aaf44871017" translate="yes" xml:space="preserve">
          <source>void QSslConfiguration::setBackendConfigurationOption(const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QSslConfiguration :: setBackendConfigurationOption (const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="992a9b892f060510356e93c429ac71e4ce849d35" translate="yes" xml:space="preserve">
          <source>void QSslConfiguration::setCaCertificates(const &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;&lt;a href=&quot;qsslcertificate&quot;&gt;QSslCertificate&lt;/a&gt;&amp;gt; &amp;amp;</source>
          <target state="translated">void QSslConfiguration :: setCaCertificates (const &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; &amp;lt; &lt;a href=&quot;qsslcertificate&quot;&gt;QSslCertificate&lt;/a&gt; &amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="e453c41e2391c2f25626582486bfe58a45376bf9" translate="yes" xml:space="preserve">
          <source>void QSslConfiguration::setCiphers(const &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;&lt;a href=&quot;qsslcipher&quot;&gt;QSslCipher&lt;/a&gt;&amp;gt; &amp;amp;</source>
          <target state="translated">void QSslConfiguration :: setCiphers (const &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; &amp;lt; &lt;a href=&quot;qsslcipher&quot;&gt;QSslCipher&lt;/a&gt; &amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="1a73e9f6647044bfaae8fbb6425a5847f4ede4e8" translate="yes" xml:space="preserve">
          <source>void QSslConfiguration::setDiffieHellmanParameters(const &lt;a href=&quot;qssldiffiehellmanparameters&quot;&gt;QSslDiffieHellmanParameters&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QSslConfiguration :: setDiffieHellmanParameters (const &lt;a href=&quot;qssldiffiehellmanparameters&quot;&gt;QSslDiffieHellmanParameters&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="72ba6cf7bd37a5baa272eea6652a9185a8fb98e0" translate="yes" xml:space="preserve">
          <source>void QSslConfiguration::setDtlsCookieVerificationEnabled(bool</source>
          <target state="translated">void QSslConfiguración::setDtlsCookieVerificaciónActivada(bool</target>
        </trans-unit>
        <trans-unit id="a0e4450a78626775d9076051b4d27a548e38b1eb" translate="yes" xml:space="preserve">
          <source>void QSslConfiguration::setEllipticCurves(const &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;&lt;a href=&quot;qsslellipticcurve&quot;&gt;QSslEllipticCurve&lt;/a&gt;&amp;gt; &amp;amp;</source>
          <target state="translated">void QSslConfiguration :: setEllipticCurves (const &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt; &amp;lt; &lt;a href=&quot;qsslellipticcurve&quot;&gt;QSslEllipticCurve&lt;/a&gt; &amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="e7f35202eb1a1c5345b0114ec2673ddb7f90d9c9" translate="yes" xml:space="preserve">
          <source>void QSslConfiguration::setLocalCertificate(const &lt;a href=&quot;qsslcertificate&quot;&gt;QSslCertificate&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QSslConfiguration :: setLocalCertificate (const &lt;a href=&quot;qsslcertificate&quot;&gt;QSslCertificate&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="254eabebeae898594c086ba0b5a2553f00c6cbee" translate="yes" xml:space="preserve">
          <source>void QSslConfiguration::setLocalCertificateChain(const &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;&lt;a href=&quot;qsslcertificate&quot;&gt;QSslCertificate&lt;/a&gt;&amp;gt; &amp;amp;</source>
          <target state="translated">void QSslConfiguration :: setLocalCertificateChain (const &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; &amp;lt; &lt;a href=&quot;qsslcertificate&quot;&gt;QSslCertificate&lt;/a&gt; &amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="28eb34265d4b4ee26344397eea5c3fb35dd0eebe" translate="yes" xml:space="preserve">
          <source>void QSslConfiguration::setOcspStaplingEnabled(bool</source>
          <target state="translated">void QSslConfiguration::setOcspStaplingEnabled(bool</target>
        </trans-unit>
        <trans-unit id="66065eaf264fec0aeb16d3709f50d0f8588312e5" translate="yes" xml:space="preserve">
          <source>void QSslConfiguration::setPeerVerifyDepth(int</source>
          <target state="translated">void QSslConfiguration::setPeerVerifyDepth(int</target>
        </trans-unit>
        <trans-unit id="50796652600c892f803b52e00727d996f1a8ebe7" translate="yes" xml:space="preserve">
          <source>void QSslConfiguration::setPeerVerifyMode(&lt;a href=&quot;qsslsocket#PeerVerifyMode-enum&quot;&gt;QSslSocket::PeerVerifyMode&lt;/a&gt;</source>
          <target state="translated">void QSslConfiguration :: setPeerVerifyMode ( &lt;a href=&quot;qsslsocket#PeerVerifyMode-enum&quot;&gt;QSslSocket :: PeerVerifyMode&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8bf30b894659eb4bad3fc333fe35b2f84014001e" translate="yes" xml:space="preserve">
          <source>void QSslConfiguration::setPreSharedKeyIdentityHint(const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QSslConfiguration :: setPreSharedKeyIdentityHint (const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="72b6f0af7f2cfeeecc14cdf270cff4a1312a150e" translate="yes" xml:space="preserve">
          <source>void QSslConfiguration::setPrivateKey(const &lt;a href=&quot;qsslkey&quot;&gt;QSslKey&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QSslConfiguration :: setPrivateKey (const &lt;a href=&quot;qsslkey&quot;&gt;QSslKey&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="078a2cecb5b8af008eaa8766c172c709014cca95" translate="yes" xml:space="preserve">
          <source>void QSslConfiguration::setProtocol(&lt;a href=&quot;qssl#SslProtocol-enum&quot;&gt;QSsl::SslProtocol&lt;/a&gt;</source>
          <target state="translated">void QSslConfiguration :: setProtocol ( &lt;a href=&quot;qssl#SslProtocol-enum&quot;&gt;QSsl :: SslProtocol&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="34187fd57f6727bc146ac692be5c465d62a61cdf" translate="yes" xml:space="preserve">
          <source>void QSslConfiguration::setSessionTicket(const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QSslConfiguration :: setSessionTicket (const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="52f9b8b1dadfa51e100ff0ba368f8932576b20ed" translate="yes" xml:space="preserve">
          <source>void QSslConfiguration::setSslOption(&lt;a href=&quot;qssl#SslOption-enum&quot;&gt;QSsl::SslOption&lt;/a&gt;</source>
          <target state="translated">void QSslConfiguration :: setSslOption ( &lt;a href=&quot;qssl#SslOption-enum&quot;&gt;QSsl :: SslOption&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0f28199a5d0843d68f3498b746d6a5c9f57bb053" translate="yes" xml:space="preserve">
          <source>void QSslConfiguration::swap(&lt;a href=&quot;qsslconfiguration#QSslConfiguration&quot;&gt;QSslConfiguration&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QSslConfiguration :: swap ( &lt;a href=&quot;qsslconfiguration#QSslConfiguration&quot;&gt;QSslConfiguration&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="9189aa401a3839cb4470dca1cc285908c42c0cfa" translate="yes" xml:space="preserve">
          <source>void QSslDiffieHellmanParameters::swap(&lt;a href=&quot;qssldiffiehellmanparameters#QSslDiffieHellmanParameters&quot;&gt;QSslDiffieHellmanParameters&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QSslDiffieHellmanParameters :: swap ( &lt;a href=&quot;qssldiffiehellmanparameters#QSslDiffieHellmanParameters&quot;&gt;QSslDiffieHellmanParameters&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="0886df11c0f4dc33bc4925073ad875af8077822d" translate="yes" xml:space="preserve">
          <source>void QSslError::swap(&lt;a href=&quot;qsslerror#QSslError&quot;&gt;QSslError&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QSslError :: swap ( &lt;a href=&quot;qsslerror#QSslError&quot;&gt;QSslError&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="12d5ee1758e615a05d974c6ebb53455801a2b7fd" translate="yes" xml:space="preserve">
          <source>void QSslKey::clear()</source>
          <target state="translated">anular QSslKey::clear()</target>
        </trans-unit>
        <trans-unit id="1b1a4c0619484170ef2180148a612061a2eb60e4" translate="yes" xml:space="preserve">
          <source>void QSslKey::swap(&lt;a href=&quot;qsslkey#QSslKey&quot;&gt;QSslKey&lt;/a&gt; &amp;amp;</source>
          <target state="translated">anular QSslKey :: swap ( &lt;a href=&quot;qsslkey#QSslKey&quot;&gt;QSslKey&lt;/a&gt; y</target>
        </trans-unit>
        <trans-unit id="66d66b41605298171370eca38564ac0aaa093aec" translate="yes" xml:space="preserve">
          <source>void QSslPreSharedKeyAuthenticator::setIdentity(const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QSslPreSharedKeyAuthenticator :: setIdentity (const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="e3f3888af0d0ef410a28fb88da0b9d2d09525543" translate="yes" xml:space="preserve">
          <source>void QSslPreSharedKeyAuthenticator::setPreSharedKey(const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QSslPreSharedKeyAuthenticator :: setPreSharedKey (const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="9df453bb3936a02da4a84522e57b835b683408cf" translate="yes" xml:space="preserve">
          <source>void QSslPreSharedKeyAuthenticator::swap(&lt;a href=&quot;qsslpresharedkeyauthenticator#QSslPreSharedKeyAuthenticator&quot;&gt;QSslPreSharedKeyAuthenticator&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QSslPreSharedKeyAuthenticator :: swap ( &lt;a href=&quot;qsslpresharedkeyauthenticator#QSslPreSharedKeyAuthenticator&quot;&gt;QSslPreSharedKeyAuthenticator&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="8a50e059c16c21da79811ef22325f4a5cea52931" translate="yes" xml:space="preserve">
          <source>void QSslSocket::abort()</source>
          <target state="translated">anular QSslSocket::abortar()</target>
        </trans-unit>
        <trans-unit id="d71b31d49360b9a3c2d50f6cc5a2428c805ff4f9" translate="yes" xml:space="preserve">
          <source>void QSslSocket::addCaCertificate(const &lt;a href=&quot;qsslcertificate&quot;&gt;QSslCertificate&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QSslSocket :: addCaCertificate (const &lt;a href=&quot;qsslcertificate&quot;&gt;QSslCertificate&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="ae56784bdf9129901cbd35dcb0b05df49ed2d0bf" translate="yes" xml:space="preserve">
          <source>void QSslSocket::addCaCertificates(const &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;&lt;a href=&quot;qsslcertificate&quot;&gt;QSslCertificate&lt;/a&gt;&amp;gt; &amp;amp;</source>
          <target state="translated">void QSslSocket :: addCaCertificates (const &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; &amp;lt; &lt;a href=&quot;qsslcertificate&quot;&gt;QSslCertificate&lt;/a&gt; &amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="87015055b1d9fb51fe8548c640e7f33263afe16b" translate="yes" xml:space="preserve">
          <source>void QSslSocket::connectToHostEncrypted(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QSslSocket :: connectToHostEncrypted (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="d4372074cc658dd1acd37ebf0ac1626aad9a4cd6" translate="yes" xml:space="preserve">
          <source>void QSslSocket::ignoreSslErrors(const &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;&lt;a href=&quot;qsslerror&quot;&gt;QSslError&lt;/a&gt;&amp;gt; &amp;amp;</source>
          <target state="translated">void QSslSocket :: ignoreSslErrors (const &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; &amp;lt; &lt;a href=&quot;qsslerror&quot;&gt;QSslError&lt;/a&gt; &amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="1ff644d4726e70bb968e686c30ff92ee46a7dbcf" translate="yes" xml:space="preserve">
          <source>void QSslSocket::setLocalCertificate(const &lt;a href=&quot;qsslcertificate&quot;&gt;QSslCertificate&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QSslSocket :: setLocalCertificate (const &lt;a href=&quot;qsslcertificate&quot;&gt;QSslCertificate&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="9145346d6d9d8b564e81d65bda8ff4a3c7de1101" translate="yes" xml:space="preserve">
          <source>void QSslSocket::setLocalCertificate(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QSslSocket :: setLocalCertificate (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="cd6beeba5463176046ba9ff2cd1bd5ed5d89fa0d" translate="yes" xml:space="preserve">
          <source>void QSslSocket::setLocalCertificateChain(const &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;&lt;a href=&quot;qsslcertificate&quot;&gt;QSslCertificate&lt;/a&gt;&amp;gt; &amp;amp;</source>
          <target state="translated">void QSslSocket :: setLocalCertificateChain (const &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; &amp;lt; &lt;a href=&quot;qsslcertificate&quot;&gt;QSslCertificate&lt;/a&gt; &amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="c71af3af35896a358db53039a0fae45ec6cfff14" translate="yes" xml:space="preserve">
          <source>void QSslSocket::setPeerVerifyDepth(int</source>
          <target state="translated">anular QSslSocket::setPeerVerifyDepth(int</target>
        </trans-unit>
        <trans-unit id="87ec686d0a4d1714acb366a79d352036fa9adb2f" translate="yes" xml:space="preserve">
          <source>void QSslSocket::setPeerVerifyMode(&lt;a href=&quot;qsslsocket#PeerVerifyMode-enum&quot;&gt;QSslSocket::PeerVerifyMode&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QSslSocket :: setPeerVerifyMode ( &lt;a href=&quot;qsslsocket#PeerVerifyMode-enum&quot;&gt;QSslSocket :: PeerVerifyMode&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="37e1c1f65428ae59cf0b4305b6291176b1e18339" translate="yes" xml:space="preserve">
          <source>void QSslSocket::setPeerVerifyName(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QSslSocket :: setPeerVerifyName (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="3466103a17e930c6d3f3d65cfa65622424410bf5" translate="yes" xml:space="preserve">
          <source>void QSslSocket::setPrivateKey(const &lt;a href=&quot;qsslkey&quot;&gt;QSslKey&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QSslSocket :: setPrivateKey (const &lt;a href=&quot;qsslkey&quot;&gt;QSslKey&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="d29bff256fd77fd7039694a928ad1b42f94e03f9" translate="yes" xml:space="preserve">
          <source>void QSslSocket::setPrivateKey(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QSslSocket :: setPrivateKey (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="e22b028e12ec5c7c7e7e56962a3e797f0ed38f76" translate="yes" xml:space="preserve">
          <source>void QSslSocket::setProtocol(&lt;a href=&quot;qssl#SslProtocol-enum&quot;&gt;QSsl::SslProtocol&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QSslSocket :: setProtocol ( &lt;a href=&quot;qssl#SslProtocol-enum&quot;&gt;QSsl :: SslProtocol&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="26a448901e74d9fbea7c8fddd46eebed25b71077" translate="yes" xml:space="preserve">
          <source>void QSslSocket::setSslConfiguration(const &lt;a href=&quot;qsslconfiguration&quot;&gt;QSslConfiguration&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QSslSocket :: setSslConfiguration (const &lt;a href=&quot;qsslconfiguration&quot;&gt;QSslConfiguration&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="79a03b9f1a8e2fe9c04154257b31d0798089d4ae" translate="yes" xml:space="preserve">
          <source>void QStack::push(const T &amp;amp;</source>
          <target state="translated">void QStack :: push (const T &amp;amp;</target>
        </trans-unit>
        <trans-unit id="6674289be1e1bde3ef66ec70e7701b7396aafda3" translate="yes" xml:space="preserve">
          <source>void QStack::swap(&lt;a href=&quot;qstack&quot;&gt;QStack&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="translated">anular QStack :: swap ( &lt;a href=&quot;qstack&quot;&gt;QStack&lt;/a&gt; &amp;lt;T&amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="aa8244c47125bf8fe0fd2b5bf34eb6676fa2f38b" translate="yes" xml:space="preserve">
          <source>void QStackedWidget::removeWidget(&lt;a href=&quot;qwidget#QWidget&quot;&gt;QWidget&lt;/a&gt; *</source>
          <target state="translated">void QStackedWidget :: removeWidget ( &lt;a href=&quot;qwidget#QWidget&quot;&gt;QWidget&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="b78f4f4abd9c1a1206ab01f45ad3b1ff23ebe7db" translate="yes" xml:space="preserve">
          <source>void QStandardItem::appendColumn(const QList&amp;lt;&lt;a href=&quot;qstandarditem#QStandardItem&quot;&gt;QStandardItem&lt;/a&gt; *&amp;gt; &amp;amp;</source>
          <target state="translated">void QStandardItem :: appendColumn (const QList &amp;lt; &lt;a href=&quot;qstandarditem#QStandardItem&quot;&gt;QStandardItem&lt;/a&gt; *&amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="e94c7220e86f2e6e577add1751f895acc30d0683" translate="yes" xml:space="preserve">
          <source>void QStandardItem::appendRow(&lt;a href=&quot;qstandarditem#QStandardItem&quot;&gt;QStandardItem&lt;/a&gt; *</source>
          <target state="translated">anular QStandardItem :: appendRow ( &lt;a href=&quot;qstandarditem#QStandardItem&quot;&gt;QStandardItem&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="1d11b8056bccadb896fc7bbe96cdcb07b4c4cc44" translate="yes" xml:space="preserve">
          <source>void QStandardItem::appendRow(const QList&amp;lt;&lt;a href=&quot;qstandarditem#QStandardItem&quot;&gt;QStandardItem&lt;/a&gt; *&amp;gt; &amp;amp;</source>
          <target state="translated">void QStandardItem :: appendRow (const QList &amp;lt; &lt;a href=&quot;qstandarditem#QStandardItem&quot;&gt;QStandardItem&lt;/a&gt; *&amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="41e117d05a1469db391b5d591dc66c5bafcbca6d" translate="yes" xml:space="preserve">
          <source>void QStandardItem::appendRows(const QList&amp;lt;&lt;a href=&quot;qstandarditem#QStandardItem&quot;&gt;QStandardItem&lt;/a&gt; *&amp;gt; &amp;amp;</source>
          <target state="translated">void QStandardItem :: appendRows (const QList &amp;lt; &lt;a href=&quot;qstandarditem#QStandardItem&quot;&gt;QStandardItem&lt;/a&gt; *&amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="9b58cbf653e429e2ddfdc3a79b1035a112e16ed8" translate="yes" xml:space="preserve">
          <source>void QStandardItem::clearData()</source>
          <target state="translated">anular QStandardItem::clearData()</target>
        </trans-unit>
        <trans-unit id="389d4aa9bcad79b9fd7282cf23086141929985ea" translate="yes" xml:space="preserve">
          <source>void QStandardItem::insertColumn(int</source>
          <target state="translated">anular QStandardItem::insertarColumna(int</target>
        </trans-unit>
        <trans-unit id="d91084c79f2430be8bb04cf4a9694432bb4a39db" translate="yes" xml:space="preserve">
          <source>void QStandardItem::insertColumns(int</source>
          <target state="translated">anular QStandardItem::insertarColumnas(int</target>
        </trans-unit>
        <trans-unit id="71832c327cceb23a6b5f8fd93292492a8fa35e71" translate="yes" xml:space="preserve">
          <source>void QStandardItem::insertRow(int</source>
          <target state="translated">anular QStandardItem::insertRow(int</target>
        </trans-unit>
        <trans-unit id="ebea0ed5a2e000f6041b73bc69e6c41fcc0e2394" translate="yes" xml:space="preserve">
          <source>void QStandardItem::insertRows(int</source>
          <target state="translated">anular QStandardItem::insertRows(int</target>
        </trans-unit>
        <trans-unit id="28524ec3c69ad7f35d0fe3079f7ddeb25022e6dc" translate="yes" xml:space="preserve">
          <source>void QStandardItem::removeColumn(int</source>
          <target state="translated">anular QStandardItem::removeColumn(int</target>
        </trans-unit>
        <trans-unit id="77950fa12fe8dc45b7661dd5fcee3652ab8e31b4" translate="yes" xml:space="preserve">
          <source>void QStandardItem::removeColumns(int</source>
          <target state="translated">anular QStandardItem::removeColumns(int</target>
        </trans-unit>
        <trans-unit id="7fb7b83626b76a9466f014136e12cb4e2c407e53" translate="yes" xml:space="preserve">
          <source>void QStandardItem::removeRow(int</source>
          <target state="translated">anular QStandardItem::removeRow(int</target>
        </trans-unit>
        <trans-unit id="e904bbbade19ed037eb4974c2495d0cffd760769" translate="yes" xml:space="preserve">
          <source>void QStandardItem::removeRows(int</source>
          <target state="translated">anular QStandardItem::removeRows(int</target>
        </trans-unit>
        <trans-unit id="63a820162198f19abeb091a266597af4003cfacd" translate="yes" xml:space="preserve">
          <source>void QStandardItem::setAccessibleDescription(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QStandardItem :: setAccessibleDescription (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="a0496d3d6078b5ade51f41462f84ccb44b192eac" translate="yes" xml:space="preserve">
          <source>void QStandardItem::setAccessibleText(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QStandardItem :: setAccessibleText (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="42058cf4fddb17366ee5d273599699da06c09b26" translate="yes" xml:space="preserve">
          <source>void QStandardItem::setAutoTristate(bool</source>
          <target state="translated">anular QStandardItem::setAutoTristate(bool</target>
        </trans-unit>
        <trans-unit id="eed1ca17d0ece112d56cc8feef9bc62e556ab731" translate="yes" xml:space="preserve">
          <source>void QStandardItem::setBackground(const &lt;a href=&quot;qbrush&quot;&gt;QBrush&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QStandardItem :: setBackground (const &lt;a href=&quot;qbrush&quot;&gt;QBrush&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="d00d765b277972caba98c3939ce8b158cedbae89" translate="yes" xml:space="preserve">
          <source>void QStandardItem::setCheckState(&lt;a href=&quot;qt#CheckState-enum&quot;&gt;Qt::CheckState&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QStandardItem :: setCheckState ( &lt;a href=&quot;qt#CheckState-enum&quot;&gt;Qt :: CheckState&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c7a0ad93cbe4fb20af870d898306a773ececc1b3" translate="yes" xml:space="preserve">
          <source>void QStandardItem::setCheckable(bool</source>
          <target state="translated">anular QStandardItem::setCheckable(bool</target>
        </trans-unit>
        <trans-unit id="cb2582a786fee78fa43155a7661942e30dace817" translate="yes" xml:space="preserve">
          <source>void QStandardItem::setChild(int</source>
          <target state="translated">anular QStandardItem::setChild(int</target>
        </trans-unit>
        <trans-unit id="be4ce83cebe914a4c88b00aafc08ebe4a3f460de" translate="yes" xml:space="preserve">
          <source>void QStandardItem::setColumnCount(int</source>
          <target state="translated">void QStandardItem::setColumnCount(int</target>
        </trans-unit>
        <trans-unit id="5c3f41717f5cf713913829d0cf312c318d58c7e8" translate="yes" xml:space="preserve">
          <source>void QStandardItem::setDragEnabled(bool</source>
          <target state="translated">void QStandardItem::setDragEnabled(bool</target>
        </trans-unit>
        <trans-unit id="ecb9100427c4ce7f93beb10f5c973a13af06a7d7" translate="yes" xml:space="preserve">
          <source>void QStandardItem::setDropEnabled(bool</source>
          <target state="translated">void QStandardItem::setDropEnabled(bool</target>
        </trans-unit>
        <trans-unit id="9d4c98fb40262e9be55c53d8c0364ffceb3f1d57" translate="yes" xml:space="preserve">
          <source>void QStandardItem::setEditable(bool</source>
          <target state="translated">anular QStandardItem::setEditable(bool</target>
        </trans-unit>
        <trans-unit id="4cda8a882ab8bb1594275b81ad9488c20f297f8f" translate="yes" xml:space="preserve">
          <source>void QStandardItem::setEnabled(bool</source>
          <target state="translated">void QStandardItem::setEnabled(bool</target>
        </trans-unit>
        <trans-unit id="3580fcd79b3a50ed412d97187d9b553a69af3f37" translate="yes" xml:space="preserve">
          <source>void QStandardItem::setFlags(&lt;a href=&quot;qt#ItemFlag-enum&quot;&gt;Qt::ItemFlags&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QStandardItem :: setFlags ( &lt;a href=&quot;qt#ItemFlag-enum&quot;&gt;Qt :: ItemFlags&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f48519f47f87ef50223dea6792c1089c456734d6" translate="yes" xml:space="preserve">
          <source>void QStandardItem::setFont(const &lt;a href=&quot;qfont&quot;&gt;QFont&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QStandardItem :: setFont (const &lt;a href=&quot;qfont&quot;&gt;QFont&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="ab74dbdf0f782407b2cb06eb788ba7223361ecbe" translate="yes" xml:space="preserve">
          <source>void QStandardItem::setForeground(const &lt;a href=&quot;qbrush&quot;&gt;QBrush&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QStandardItem :: setForeground (const &lt;a href=&quot;qbrush&quot;&gt;QBrush&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="36f7dcb75e1b52cf45cb8693f84161525b34abec" translate="yes" xml:space="preserve">
          <source>void QStandardItem::setIcon(const &lt;a href=&quot;qicon&quot;&gt;QIcon&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QStandardItem :: setIcon (const &lt;a href=&quot;qicon&quot;&gt;QIcon&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="3490b43e33ecc85385e7d7f98cb2e17b3cee777e" translate="yes" xml:space="preserve">
          <source>void QStandardItem::setRowCount(int</source>
          <target state="translated">anular QStandardItem::setRowCount(int</target>
        </trans-unit>
        <trans-unit id="9cf026cdd0ca1f6b65b9f96364340a9bf34a0c36" translate="yes" xml:space="preserve">
          <source>void QStandardItem::setSelectable(bool</source>
          <target state="translated">anular QStandardItem::setSeleccionable(bool</target>
        </trans-unit>
        <trans-unit id="778445efb04f40fe636873388fbf9a223a904f6d" translate="yes" xml:space="preserve">
          <source>void QStandardItem::setSizeHint(const &lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QStandardItem :: setSizeHint (const &lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="01eb82e42c9007e911beecfaa6d88f038b1214c0" translate="yes" xml:space="preserve">
          <source>void QStandardItem::setStatusTip(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QStandardItem :: setStatusTip (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="933ed1e2f6effed2d3b20e159c682a62aad0d36f" translate="yes" xml:space="preserve">
          <source>void QStandardItem::setText(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QStandardItem :: setText (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="2dc981e7bfc1e0e7087e252ae3f951bf56b7a70c" translate="yes" xml:space="preserve">
          <source>void QStandardItem::setTextAlignment(&lt;a href=&quot;qt#AlignmentFlag-enum&quot;&gt;Qt::Alignment&lt;/a&gt;</source>
          <target state="translated">void QStandardItem :: setTextAlignment ( &lt;a href=&quot;qt#AlignmentFlag-enum&quot;&gt;Qt :: Alignment&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="35907e33b975e595207b9d32ab25d978a8e18f34" translate="yes" xml:space="preserve">
          <source>void QStandardItem::setToolTip(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QStandardItem :: setToolTip (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="422cd1dafa51a40166047b5dc217633418304770" translate="yes" xml:space="preserve">
          <source>void QStandardItem::setUserTristate(bool</source>
          <target state="translated">anular QStandardItem::setUserTristate(bool</target>
        </trans-unit>
        <trans-unit id="aac2fd98643df83c4d1bbaf5fa6079157636756c" translate="yes" xml:space="preserve">
          <source>void QStandardItem::setWhatsThis(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QStandardItem :: setWhatsThis (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="1d938e78888a89267b9c74afb3d945a6a9cc4321" translate="yes" xml:space="preserve">
          <source>void QStandardItem::sortChildren(int</source>
          <target state="translated">anular QStandardItem::sortChildren(int</target>
        </trans-unit>
        <trans-unit id="783f64334d5d5719e98d6e1e2a976752774e5657" translate="yes" xml:space="preserve">
          <source>void QStandardItemModel::appendColumn(const QList&amp;lt;&lt;a href=&quot;qstandarditem&quot;&gt;QStandardItem&lt;/a&gt; *&amp;gt; &amp;amp;</source>
          <target state="translated">void QStandardItemModel :: appendColumn (const QList &amp;lt; &lt;a href=&quot;qstandarditem&quot;&gt;QStandardItem&lt;/a&gt; *&amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="66e4981092d76b601f51af40524d321a638ec630" translate="yes" xml:space="preserve">
          <source>void QStandardItemModel::appendRow(&lt;a href=&quot;qstandarditem&quot;&gt;QStandardItem&lt;/a&gt; *</source>
          <target state="translated">void QStandardItemModel :: appendRow ( &lt;a href=&quot;qstandarditem&quot;&gt;QStandardItem&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="b4c7b597489945128a5b9eb8d0ad26f666f8e727" translate="yes" xml:space="preserve">
          <source>void QStandardItemModel::appendRow(const QList&amp;lt;&lt;a href=&quot;qstandarditem&quot;&gt;QStandardItem&lt;/a&gt; *&amp;gt; &amp;amp;</source>
          <target state="translated">void QStandardItemModel :: appendRow (const QList &amp;lt; &lt;a href=&quot;qstandarditem&quot;&gt;QStandardItem&lt;/a&gt; *&amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="28fb93b4de717f4c762529245a681da2b6b56d0f" translate="yes" xml:space="preserve">
          <source>void QStandardItemModel::clear()</source>
          <target state="translated">anular QStandardItemModel::clear()</target>
        </trans-unit>
        <trans-unit id="801ff1440c53a02ce1978820ab769900d01bcd44" translate="yes" xml:space="preserve">
          <source>void QStandardItemModel::insertColumn(int</source>
          <target state="translated">anular QStandardItemModel::insertarColumna(int</target>
        </trans-unit>
        <trans-unit id="89c4a7cf030291acccd539714c802d89dec448a0" translate="yes" xml:space="preserve">
          <source>void QStandardItemModel::insertRow(int</source>
          <target state="translated">anular QStandardItemModel::insertRow(int</target>
        </trans-unit>
        <trans-unit id="a908d26a6364f9729e49b75da622c3dcec4bdca0" translate="yes" xml:space="preserve">
          <source>void QStandardItemModel::setColumnCount(int</source>
          <target state="translated">void QStandardItemModel::setColumnCount(int</target>
        </trans-unit>
        <trans-unit id="03b636edf31bd610995a572997c7bc32cf4e3728" translate="yes" xml:space="preserve">
          <source>void QStandardItemModel::setHorizontalHeaderItem(int</source>
          <target state="translated">void QStandardItemModel::setHorizontalHeaderItem(int</target>
        </trans-unit>
        <trans-unit id="9f4264d643846faeb2ac9696679831510e0e878b" translate="yes" xml:space="preserve">
          <source>void QStandardItemModel::setHorizontalHeaderLabels(const &lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QStandardItemModel :: setHorizontalHeaderLabels (const &lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="f34531dc003ea7d5c929dc9f846b51c5ec13e5c5" translate="yes" xml:space="preserve">
          <source>void QStandardItemModel::setItem(int</source>
          <target state="translated">void QStandardItemModel::setItem(int</target>
        </trans-unit>
        <trans-unit id="bd966648ba0a04702663b5c389430efb9eee3cfa" translate="yes" xml:space="preserve">
          <source>void QStandardItemModel::setItemPrototype(const &lt;a href=&quot;qstandarditem&quot;&gt;QStandardItem&lt;/a&gt; *</source>
          <target state="translated">void QStandardItemModel :: setItemPrototype (const &lt;a href=&quot;qstandarditem&quot;&gt;QStandardItem&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="5a8c9f19440d92152c325cfe2fdb868c068aba9c" translate="yes" xml:space="preserve">
          <source>void QStandardItemModel::setItemRoleNames(const &lt;a href=&quot;qhash&quot;&gt;QHash&lt;/a&gt;&amp;lt;int, &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt;&amp;gt; &amp;amp;</source>
          <target state="translated">void QStandardItemModel :: setItemRoleNames (const &lt;a href=&quot;qhash&quot;&gt;QHash&lt;/a&gt; &amp;lt;int, &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="c587105ce5da1dcbd2f9285248b35f1dd89f9d1e" translate="yes" xml:space="preserve">
          <source>void QStandardItemModel::setRowCount(int</source>
          <target state="translated">void QStandardItemModel::setRowCount(int</target>
        </trans-unit>
        <trans-unit id="9927cb82edb53b68ec02dffe0667b1564017ef14" translate="yes" xml:space="preserve">
          <source>void QStandardItemModel::setVerticalHeaderItem(int</source>
          <target state="translated">void QStandardItemModel::setVerticalHeaderItem(int</target>
        </trans-unit>
        <trans-unit id="c3a832e141623a2bb6d3daca40d1b9b80e16329d" translate="yes" xml:space="preserve">
          <source>void QStandardItemModel::setVerticalHeaderLabels(const &lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QStandardItemModel :: setVerticalHeaderLabels (const &lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="1dcdd59924f0f4126b90ff58690fc5c6bec9a7e3" translate="yes" xml:space="preserve">
          <source>void QState::addTransition(&lt;a href=&quot;qabstracttransition&quot;&gt;QAbstractTransition&lt;/a&gt; *</source>
          <target state="translated">vac&amp;iacute;o QState :: addTransition ( &lt;a href=&quot;qabstracttransition&quot;&gt;QAbstractTransition&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="9ad63f072db916eb304904e64cd69b017d424294" translate="yes" xml:space="preserve">
          <source>void QState::assignProperty(&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="translated">anular QState :: assignProperty ( &lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="af0b13ab9b94ca70f96b593669d4f4afef067e27" translate="yes" xml:space="preserve">
          <source>void QState::removeTransition(&lt;a href=&quot;qabstracttransition&quot;&gt;QAbstractTransition&lt;/a&gt; *</source>
          <target state="translated">vac&amp;iacute;o QState :: removeTransition ( &lt;a href=&quot;qabstracttransition&quot;&gt;QAbstractTransition&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="24bb004b9b99cffffe3db3a772ca48defc45a8ec" translate="yes" xml:space="preserve">
          <source>void QState::setChildMode(&lt;a href=&quot;qstate#ChildMode-enum&quot;&gt;QState::ChildMode&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QState :: setChildMode ( &lt;a href=&quot;qstate#ChildMode-enum&quot;&gt;QState :: ChildMode&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8332eaf63b261ca43c5ec63c40d0a0969fd1330c" translate="yes" xml:space="preserve">
          <source>void QState::setErrorState(&lt;a href=&quot;qabstractstate#QAbstractState&quot;&gt;QAbstractState&lt;/a&gt; *</source>
          <target state="translated">vac&amp;iacute;o QState :: setErrorState ( &lt;a href=&quot;qabstractstate#QAbstractState&quot;&gt;QAbstractState&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="de4232ac760b5b0f7c6aa8f0a54e3a6bd574ceab" translate="yes" xml:space="preserve">
          <source>void QState::setInitialState(&lt;a href=&quot;qabstractstate#QAbstractState&quot;&gt;QAbstractState&lt;/a&gt; *</source>
          <target state="translated">vac&amp;iacute;o QState :: setInitialState ( &lt;a href=&quot;qabstractstate#QAbstractState&quot;&gt;QAbstractState&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="911aff88ae824777b9e197216ba05fe1f2f2a226" translate="yes" xml:space="preserve">
          <source>void QStateMachine::addDefaultAnimation(&lt;a href=&quot;qabstractanimation&quot;&gt;QAbstractAnimation&lt;/a&gt; *</source>
          <target state="translated">void QStateMachine :: addDefaultAnimation ( &lt;a href=&quot;qabstractanimation&quot;&gt;QAbstractAnimation&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="3a9ffa59ff8637d77e7f89785793537b6990fd1f" translate="yes" xml:space="preserve">
          <source>void QStateMachine::addState(&lt;a href=&quot;qabstractstate#QAbstractState&quot;&gt;QAbstractState&lt;/a&gt; *</source>
          <target state="translated">void QStateMachine :: addState ( &lt;a href=&quot;qabstractstate#QAbstractState&quot;&gt;QAbstractState&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="3053940efe605676e1d773fe4d5267e2e1c3fc53" translate="yes" xml:space="preserve">
          <source>void QStateMachine::clearError()</source>
          <target state="translated">anular QStateMachine::clearError()</target>
        </trans-unit>
        <trans-unit id="6ab1b8d7c188d91925ee48563462bc5c6ec7d34b" translate="yes" xml:space="preserve">
          <source>void QStateMachine::postEvent(&lt;a href=&quot;qevent&quot;&gt;QEvent&lt;/a&gt; *</source>
          <target state="translated">void QStateMachine :: postEvent ( &lt;a href=&quot;qevent&quot;&gt;QEvent&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="f4ac696486578ffbb2d49e192a12c1140d50b572" translate="yes" xml:space="preserve">
          <source>void QStateMachine::removeDefaultAnimation(&lt;a href=&quot;qabstractanimation&quot;&gt;QAbstractAnimation&lt;/a&gt; *</source>
          <target state="translated">void QStateMachine :: removeDefaultAnimation ( &lt;a href=&quot;qabstractanimation&quot;&gt;QAbstractAnimation&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="9d2c2f3d2f07cf5bd612f8cfa81209e39a6f9f48" translate="yes" xml:space="preserve">
          <source>void QStateMachine::removeState(&lt;a href=&quot;qabstractstate#QAbstractState&quot;&gt;QAbstractState&lt;/a&gt; *</source>
          <target state="translated">void QStateMachine :: removeState ( &lt;a href=&quot;qabstractstate#QAbstractState&quot;&gt;QAbstractState&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="fdfe5ce98d94c4b76d51208595d35550f60cd503" translate="yes" xml:space="preserve">
          <source>void QStateMachine::setAnimated(bool</source>
          <target state="translated">void QStateMachine::setAnimated(bool</target>
        </trans-unit>
        <trans-unit id="ce43bae949788adee419cddf768ac47fe716c5d6" translate="yes" xml:space="preserve">
          <source>void QStateMachine::setGlobalRestorePolicy(&lt;a href=&quot;qstate#RestorePolicy-enum&quot;&gt;QState::RestorePolicy&lt;/a&gt;</source>
          <target state="translated">anular QStateMachine :: setGlobalRestorePolicy ( &lt;a href=&quot;qstate#RestorePolicy-enum&quot;&gt;QState :: RestorePolicy&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c220e9b6fece1b17040dc7c83d71bdb33d2e5e72" translate="yes" xml:space="preserve">
          <source>void QStaticPropertyUpdatedChangeBase::setPropertyName(const char *</source>
          <target state="translated">void QStaticPropertyUpdatedChangeBase::setPropertyName(const char *</target>
        </trans-unit>
        <trans-unit id="bd68baa4a894c1b37e0cf16b9ac665a4b6e5635a" translate="yes" xml:space="preserve">
          <source>void QStaticPropertyValueAddedChangeBase::setPropertyName(const char *</source>
          <target state="translated">void QStaticPropertyValueAddedChangeBase::setPropertyName(const char *</target>
        </trans-unit>
        <trans-unit id="986f1c7dc792759cfbae1aa34f0038310a931a0f" translate="yes" xml:space="preserve">
          <source>void QStaticPropertyValueRemovedChangeBase::setPropertyName(const char *</source>
          <target state="translated">void QStaticPropertyValueRemovedChangeBase::setPropertyName(const char *</target>
        </trans-unit>
        <trans-unit id="5be8ef0a9f4906c7340f2c04be58e3cdbcb580e3" translate="yes" xml:space="preserve">
          <source>void QStaticText::prepare(const &lt;a href=&quot;qtransform&quot;&gt;QTransform&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QStaticText :: prepare (const &lt;a href=&quot;qtransform&quot;&gt;QTransform&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="733927fc0af120aea1e8d56bdb5700ffdfeaf2ee" translate="yes" xml:space="preserve">
          <source>void QStaticText::setPerformanceHint(&lt;a href=&quot;qstatictext#PerformanceHint-enum&quot;&gt;QStaticText::PerformanceHint&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QStaticText :: setPerformanceHint ( &lt;a href=&quot;qstatictext#PerformanceHint-enum&quot;&gt;QStaticText :: PerformanceHint&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="200676d2b9ed4a0bc4518c1b734283828b88ede1" translate="yes" xml:space="preserve">
          <source>void QStaticText::setText(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QStaticText :: setText (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="181741dddfde34d4c806013c90d92a866b20567e" translate="yes" xml:space="preserve">
          <source>void QStaticText::setTextFormat(&lt;a href=&quot;qt#TextFormat-enum&quot;&gt;Qt::TextFormat&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QStaticText :: setTextFormat ( &lt;a href=&quot;qt#TextFormat-enum&quot;&gt;Qt :: TextFormat&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="431e9808a65a069fb62d3e77f4627d3f1ea7c1c1" translate="yes" xml:space="preserve">
          <source>void QStaticText::setTextOption(const &lt;a href=&quot;qtextoption&quot;&gt;QTextOption&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QStaticText :: setTextOption (const &lt;a href=&quot;qtextoption&quot;&gt;QTextOption&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="ebb99bc267ca7aabf4cdbcf16691fa452a4d4cc1" translate="yes" xml:space="preserve">
          <source>void QStaticText::setTextWidth(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QStaticText :: setTextWidth ( &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="74a07435272ee53a4ea451dd9b95949d5984b8bb" translate="yes" xml:space="preserve">
          <source>void QStaticText::setTextWidth(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46a4af639e44c47311318e26855098b1cafe4129" translate="yes" xml:space="preserve">
          <source>void QStaticText::swap(&lt;a href=&quot;qstatictext#QStaticText&quot;&gt;QStaticText&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QStaticText :: swap ( &lt;a href=&quot;qstatictext#QStaticText&quot;&gt;QStaticText&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="1e9dcc261f0abc8c0fd93413e5ef4bf4184bff07" translate="yes" xml:space="preserve">
          <source>void QStatusBar::addPermanentWidget(&lt;a href=&quot;qwidget#QWidget&quot;&gt;QWidget&lt;/a&gt; *</source>
          <target state="translated">void QStatusBar :: addPermanentWidget ( &lt;a href=&quot;qwidget#QWidget&quot;&gt;QWidget&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="fe99396496afe0dea47f9962f558fa34671f2f3f" translate="yes" xml:space="preserve">
          <source>void QStatusBar::addWidget(&lt;a href=&quot;qwidget#QWidget&quot;&gt;QWidget&lt;/a&gt; *</source>
          <target state="translated">void QStatusBar :: addWidget ( &lt;a href=&quot;qwidget#QWidget&quot;&gt;QWidget&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="fe4eed90f272be920212c7b643d84b6713d0ec53" translate="yes" xml:space="preserve">
          <source>void QStatusBar::removeWidget(&lt;a href=&quot;qwidget#QWidget&quot;&gt;QWidget&lt;/a&gt; *</source>
          <target state="translated">void QStatusBar :: removeWidget ( &lt;a href=&quot;qwidget#QWidget&quot;&gt;QWidget&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="6e4594a5c4d0b5453501a151f3f543663676b086" translate="yes" xml:space="preserve">
          <source>void QStorageInfo::refresh()</source>
          <target state="translated">anular QStorageInfo::refresh()</target>
        </trans-unit>
        <trans-unit id="52e320471f0e226106ece211b81616c9b34e720c" translate="yes" xml:space="preserve">
          <source>void QStorageInfo::setPath(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QStorageInfo :: setPath (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="ffdb1c1acff456b4c151837f92969acdf64b4c07" translate="yes" xml:space="preserve">
          <source>void QStorageInfo::swap(&lt;a href=&quot;qstorageinfo#QStorageInfo&quot;&gt;QStorageInfo&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QStorageInfo :: swap ( &lt;a href=&quot;qstorageinfo#QStorageInfo&quot;&gt;QStorageInfo&lt;/a&gt; y</target>
        </trans-unit>
        <trans-unit id="78177ba2897878a0708466ab3bbe9311d75cdc03" translate="yes" xml:space="preserve">
          <source>void QString::chop(int</source>
          <target state="translated">anular QString::chop(int</target>
        </trans-unit>
        <trans-unit id="6898d54ee7d4ae9fd1a732c854d1893d9f5406af" translate="yes" xml:space="preserve">
          <source>void QString::clear()</source>
          <target state="translated">anular QString::clear()</target>
        </trans-unit>
        <trans-unit id="5f1ff001e6aa070300976332c9fc2707559ea4c7" translate="yes" xml:space="preserve">
          <source>void QString::push_back(&lt;a href=&quot;qchar&quot;&gt;QChar&lt;/a&gt;</source>
          <target state="translated">void QString :: push_back ( &lt;a href=&quot;qchar&quot;&gt;QChar&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0757b616300769cb67644749ae1b3f88ac65b377" translate="yes" xml:space="preserve">
          <source>void QString::push_back(const &lt;a href=&quot;qstring#QString&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QString :: push_back (const &lt;a href=&quot;qstring#QString&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="8cd3089c7c838172c1f377aa3191f3b62dc77943" translate="yes" xml:space="preserve">
          <source>void QString::push_front(&lt;a href=&quot;qchar&quot;&gt;QChar&lt;/a&gt;</source>
          <target state="translated">void QString :: push_front ( &lt;a href=&quot;qchar&quot;&gt;QChar&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5f48dd0788a50dc0143c84e3c68c834120a73cec" translate="yes" xml:space="preserve">
          <source>void QString::push_front(const &lt;a href=&quot;qstring#QString&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QString :: push_front (const &lt;a href=&quot;qstring#QString&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="7a9d48fa549dbb3954cf46b321258d8fae341622" translate="yes" xml:space="preserve">
          <source>void QString::reserve(int</source>
          <target state="translated">anular QString::reserve(int</target>
        </trans-unit>
        <trans-unit id="d9f92cd9eab00f9b24b244af87cc0a59ce57b4ab" translate="yes" xml:space="preserve">
          <source>void QString::resize(int</source>
          <target state="translated">anular QString::resize(int</target>
        </trans-unit>
        <trans-unit id="d8f885e23acd810b1e179a26564080258c2c6aa9" translate="yes" xml:space="preserve">
          <source>void QString::shrink_to_fit()</source>
          <target state="translated">anular QString::shrink_to_fit()</target>
        </trans-unit>
        <trans-unit id="963223ae733b0077481e9dca9b612d7d7dbc0d00" translate="yes" xml:space="preserve">
          <source>void QString::squeeze()</source>
          <target state="translated">anular QString::squeeze()</target>
        </trans-unit>
        <trans-unit id="fcaa36e83168fc918874ea393f4ed9035f5d9c3d" translate="yes" xml:space="preserve">
          <source>void QString::swap(&lt;a href=&quot;qstring#QString&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QString :: swap ( &lt;a href=&quot;qstring#QString&quot;&gt;QString&lt;/a&gt; y</target>
        </trans-unit>
        <trans-unit id="17ebf246d991fa1ed69f6ab1cf1d9a42f8edb76e" translate="yes" xml:space="preserve">
          <source>void QString::truncate(int</source>
          <target state="translated">anular QString::truncado(int</target>
        </trans-unit>
        <trans-unit id="d9d91fb20da7dff2b906c7217659aa9cc5c2d023" translate="yes" xml:space="preserve">
          <source>void QStringList::sort(&lt;a href=&quot;qt#CaseSensitivity-enum&quot;&gt;Qt::CaseSensitivity&lt;/a&gt;</source>
          <target state="translated">void QStringList :: sort ( &lt;a href=&quot;qt#CaseSensitivity-enum&quot;&gt;Qt :: CaseSensitivity&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="82ab57a70d7f255d440c2c0deeb8f1e540c13cd5" translate="yes" xml:space="preserve">
          <source>void QStringListModel::setStringList(const &lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QStringListModel :: setStringList (const &lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="be978ca3fbb8ce437fbd45090065a6d36434ec6a" translate="yes" xml:space="preserve">
          <source>void QStringMatcher::setCaseSensitivity(&lt;a href=&quot;qt#CaseSensitivity-enum&quot;&gt;Qt::CaseSensitivity&lt;/a&gt;</source>
          <target state="translated">void QStringMatcher :: setCaseSensitivity ( &lt;a href=&quot;qt#CaseSensitivity-enum&quot;&gt;Qt :: CaseSensitivity&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f7e174282bb9c966381332b5462cdf6e2fac3b76" translate="yes" xml:space="preserve">
          <source>void QStringMatcher::setPattern(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QStringMatcher :: setPattern (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="9637826a2b1c6409f19995724d5bd307e4bbac37" translate="yes" xml:space="preserve">
          <source>void QStringRef::chop(int</source>
          <target state="translated">anular QStringRef::chop(int</target>
        </trans-unit>
        <trans-unit id="46bdda992d8f8d90a5b096ac3c53fca29bd106ee" translate="yes" xml:space="preserve">
          <source>void QStringRef::clear()</source>
          <target state="translated">anular QStringRef::clear()</target>
        </trans-unit>
        <trans-unit id="f6a587607bef1f6b7b42166f0ee48055234ec112" translate="yes" xml:space="preserve">
          <source>void QStringRef::truncate(int</source>
          <target state="translated">void QStringRef::trunca(int</target>
        </trans-unit>
        <trans-unit id="5ece610819b5bf01dd740657de68cbafb5659b76" translate="yes" xml:space="preserve">
          <source>void QStringView::chop(qsizetype</source>
          <target state="translated">anular QStringView::chop(qsizetype)</target>
        </trans-unit>
        <trans-unit id="bde4f5c6e68a9efbf35c83ecd99a037e52feb42f" translate="yes" xml:space="preserve">
          <source>void QStringView::truncate(qsizetype</source>
          <target state="translated">anular QStringView::truncar(qsizetype)</target>
        </trans-unit>
        <trans-unit id="e9a41a99831b1490dbb27825d108e18b6ebf5b30" translate="yes" xml:space="preserve">
          <source>void QStyleOption::initFrom(const &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; *</source>
          <target state="translated">anular QStyleOption :: initFrom (const &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="0aef4978942b7763aaf6e4fdc3258344d21e174e" translate="yes" xml:space="preserve">
          <source>void QStylePainter::drawComplexControl(&lt;a href=&quot;qstyle#ComplexControl-enum&quot;&gt;QStyle::ComplexControl&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QStylePainter :: drawComplexControl ( &lt;a href=&quot;qstyle#ComplexControl-enum&quot;&gt;QStyle :: ComplexControl&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e1434901cfffa853f31288b6684784e222e284c9" translate="yes" xml:space="preserve">
          <source>void QStylePainter::drawControl(&lt;a href=&quot;qstyle#ControlElement-enum&quot;&gt;QStyle::ControlElement&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QStylePainter :: drawControl ( &lt;a href=&quot;qstyle#ControlElement-enum&quot;&gt;QStyle :: ControlElement&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="409073f35a08b539c846c537f428eedf8d2df17f" translate="yes" xml:space="preserve">
          <source>void QStylePainter::drawItemPixmap(const &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QStylePainter :: drawItemPixmap (const &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="f0cbe6e9c8a0c6fe88b2ee293debdc335dba7e27" translate="yes" xml:space="preserve">
          <source>void QStylePainter::drawItemText(const &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QStylePainter :: drawItemText (const &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="b7865aea31e0a43aa1e444ac67503be8a318b1c8" translate="yes" xml:space="preserve">
          <source>void QStylePainter::drawPrimitive(&lt;a href=&quot;qstyle#PrimitiveElement-enum&quot;&gt;QStyle::PrimitiveElement&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QStylePainter :: drawPrimitive ( &lt;a href=&quot;qstyle#PrimitiveElement-enum&quot;&gt;QStyle :: PrimitiveElement&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="23c477e4addb1097ce04c5194e6f7ec87e858405" translate="yes" xml:space="preserve">
          <source>void QStyledItemDelegate::setItemEditorFactory(&lt;a href=&quot;qitemeditorfactory&quot;&gt;QItemEditorFactory&lt;/a&gt; *</source>
          <target state="translated">vac&amp;iacute;o QStyledItemDelegate :: setItemEditorFactory ( &lt;a href=&quot;qitemeditorfactory&quot;&gt;QItemEditorFactory&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="ce8aae6fd7d2e2fb459122451b175ad360d1e449" translate="yes" xml:space="preserve">
          <source>void QSubtreeEnabler::requestUpdate()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="745f692f7b871354cc30fd0752627028982404c5" translate="yes" xml:space="preserve">
          <source>void QSupportedWritingSystems::setSupported(&lt;a href=&quot;qfontdatabase#WritingSystem-enum&quot;&gt;QFontDatabase::WritingSystem&lt;/a&gt;</source>
          <target state="translated">void QSupportedWritingSystems :: setSupported ( &lt;a href=&quot;qfontdatabase#WritingSystem-enum&quot;&gt;QFontDatabase :: WritingSystem&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="934204f04205f501ffb788a7cecbf95678413f90" translate="yes" xml:space="preserve">
          <source>void QSurface3DSeries::setSelectedPoint(const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QSurface3DSeries :: setSelectedPoint (const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="b5ff369751997106a188927fc4c5dd140c94afe5" translate="yes" xml:space="preserve">
          <source>void QSurfaceDataItem::setPosition(const &lt;a href=&quot;qvector3d&quot;&gt;QVector3D&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QSurfaceDataItem :: setPosition (const &lt;a href=&quot;qvector3d&quot;&gt;QVector3D&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="ba9667a5a7aed55704f5d859cbcfb91322d3a763" translate="yes" xml:space="preserve">
          <source>void QSurfaceDataItem::setX(float</source>
          <target state="translated">void QSurfaceDataItem::setX(float</target>
        </trans-unit>
        <trans-unit id="c888ae4a2f8560fad08fc258e97e5a8594607e0b" translate="yes" xml:space="preserve">
          <source>void QSurfaceDataItem::setY(float</source>
          <target state="translated">void QSurfaceDataItem::setY(float</target>
        </trans-unit>
        <trans-unit id="761b991990f09ed17c232d02af79d46674de1395" translate="yes" xml:space="preserve">
          <source>void QSurfaceDataItem::setZ(float</source>
          <target state="translated">void QSurfaceDataItem::setZ(float</target>
        </trans-unit>
        <trans-unit id="9129aeca3e69d2ca78ac38ed1fc2a33a8f7e1fba" translate="yes" xml:space="preserve">
          <source>void QSurfaceDataProxy::insertRow(int</source>
          <target state="translated">void QSurfaceDataProxy::insertRow(int</target>
        </trans-unit>
        <trans-unit id="ad81f34df0e920c047c77942f488eba433e4cf38" translate="yes" xml:space="preserve">
          <source>void QSurfaceDataProxy::insertRows(int</source>
          <target state="translated">anular QSurfaceDataProxy::insertRows(int</target>
        </trans-unit>
        <trans-unit id="47b8ec993b4301cad4d1989ca74228e0718cfd8d" translate="yes" xml:space="preserve">
          <source>void QSurfaceDataProxy::removeRows(int</source>
          <target state="translated">anular QSurfaceDataProxy::removeRows(int</target>
        </trans-unit>
        <trans-unit id="3a9fee3d143867dbf8a6b66c61ba5bc5f8b0340c" translate="yes" xml:space="preserve">
          <source>void QSurfaceDataProxy::resetArray(&lt;a href=&quot;qsurfacedataproxy#QSurfaceDataArray-typedef&quot;&gt;QSurfaceDataArray&lt;/a&gt; *</source>
          <target state="translated">vac&amp;iacute;o QSurfaceDataProxy :: resetArray ( &lt;a href=&quot;qsurfacedataproxy#QSurfaceDataArray-typedef&quot;&gt;QSurfaceDataArray&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="440dafd35249aeb26f42e3fd51828bad5299f9e2" translate="yes" xml:space="preserve">
          <source>void QSurfaceDataProxy::setItem(const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QSurfaceDataProxy :: setItem (const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="eebaab739b166027296283df4d822752f96873b1" translate="yes" xml:space="preserve">
          <source>void QSurfaceDataProxy::setItem(int</source>
          <target state="translated">void QSurfaceDataProxy::setItem(int</target>
        </trans-unit>
        <trans-unit id="7f47e0ad44f90a84c0798ef49ce3091e05e2b570" translate="yes" xml:space="preserve">
          <source>void QSurfaceDataProxy::setRow(int</source>
          <target state="translated">void QSurfaceDataProxy::setRow(int</target>
        </trans-unit>
        <trans-unit id="2c52bca97cc8d2de0066a05639af785e2f6478d5" translate="yes" xml:space="preserve">
          <source>void QSurfaceDataProxy::setRows(int</source>
          <target state="translated">void QSurfaceDataProxy::setRows(int</target>
        </trans-unit>
        <trans-unit id="77ebf9e77ea6e6ac4a48f8f19dc3157150395951" translate="yes" xml:space="preserve">
          <source>void QSurfaceFormat::setAlphaBufferSize(int</source>
          <target state="translated">void QSurfaceFormat::setAlphaBufferSize(int</target>
        </trans-unit>
        <trans-unit id="c8566e20e3de87784fe0e1261325e2fbf1dbcc8a" translate="yes" xml:space="preserve">
          <source>void QSurfaceFormat::setBlueBufferSize(int</source>
          <target state="translated">void QSurfaceFormat::setBlueBufferSize(int</target>
        </trans-unit>
        <trans-unit id="aad8342501667f401a2a68dbd4925ea5f5cd535e" translate="yes" xml:space="preserve">
          <source>void QSurfaceFormat::setColorSpace(&lt;a href=&quot;qsurfaceformat#ColorSpace-enum&quot;&gt;QSurfaceFormat::ColorSpace&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QSurfaceFormat :: setColorSpace ( &lt;a href=&quot;qsurfaceformat#ColorSpace-enum&quot;&gt;QSurfaceFormat :: ColorSpace&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7efb719c39e222ad4f15341965e2303a426868e2" translate="yes" xml:space="preserve">
          <source>void QSurfaceFormat::setDepthBufferSize(int</source>
          <target state="translated">void QSurfaceFormat::setDepthBufferSize(int</target>
        </trans-unit>
        <trans-unit id="39bd0978376d7a06180c352528e36545bb603422" translate="yes" xml:space="preserve">
          <source>void QSurfaceFormat::setGreenBufferSize(int</source>
          <target state="translated">void QSurfaceFormat::setGreenBufferSize(int</target>
        </trans-unit>
        <trans-unit id="f6f78b323c6e07d5d3c98eb0f1f6668df77a8f01" translate="yes" xml:space="preserve">
          <source>void QSurfaceFormat::setMajorVersion(int</source>
          <target state="translated">void QSurfaceFormat::setMajorVersion(int</target>
        </trans-unit>
        <trans-unit id="1c39e2bf44fe0dc80a7332938f81ed97f139ff49" translate="yes" xml:space="preserve">
          <source>void QSurfaceFormat::setMinorVersion(int</source>
          <target state="translated">void QSurfaceFormat::setMinorVersion(int</target>
        </trans-unit>
        <trans-unit id="6cd98c2eb0a462b897da7e4e423921e1050dd614" translate="yes" xml:space="preserve">
          <source>void QSurfaceFormat::setOption(&lt;a href=&quot;qsurfaceformat#FormatOption-enum&quot;&gt;QSurfaceFormat::FormatOption&lt;/a&gt;</source>
          <target state="translated">void QSurfaceFormat :: setOption ( &lt;a href=&quot;qsurfaceformat#FormatOption-enum&quot;&gt;QSurfaceFormat :: FormatOption&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0c9cea30ede2568885ff5125485adbfea2ea0914" translate="yes" xml:space="preserve">
          <source>void QSurfaceFormat::setOptions(&lt;a href=&quot;qsurfaceformat#FormatOption-enum&quot;&gt;QSurfaceFormat::FormatOptions&lt;/a&gt;</source>
          <target state="translated">void QSurfaceFormat :: setOptions ( &lt;a href=&quot;qsurfaceformat#FormatOption-enum&quot;&gt;QSurfaceFormat :: FormatOptions&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="758bcaf46a01e3183fef45489b1b2d9462936b26" translate="yes" xml:space="preserve">
          <source>void QSurfaceFormat::setProfile(&lt;a href=&quot;qsurfaceformat#OpenGLContextProfile-enum&quot;&gt;QSurfaceFormat::OpenGLContextProfile&lt;/a&gt;</source>
          <target state="translated">void QSurfaceFormat :: setProfile ( &lt;a href=&quot;qsurfaceformat#OpenGLContextProfile-enum&quot;&gt;QSurfaceFormat :: OpenGLContextProfile&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="71a7e29743ae6e59b9e4b66f58adf42019894d9b" translate="yes" xml:space="preserve">
          <source>void QSurfaceFormat::setRedBufferSize(int</source>
          <target state="translated">void QSurfaceFormat::setRedBufferSize(int</target>
        </trans-unit>
        <trans-unit id="e93f2fb30767bb9aaae86bf2e9a4fad22db1f846" translate="yes" xml:space="preserve">
          <source>void QSurfaceFormat::setRenderableType(&lt;a href=&quot;qsurfaceformat#RenderableType-enum&quot;&gt;QSurfaceFormat::RenderableType&lt;/a&gt;</source>
          <target state="translated">void QSurfaceFormat :: setRenderableType ( &lt;a href=&quot;qsurfaceformat#RenderableType-enum&quot;&gt;QSurfaceFormat :: RenderableType&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0fd5f6b714282db33e4a265631e8ca683b006716" translate="yes" xml:space="preserve">
          <source>void QSurfaceFormat::setSamples(int</source>
          <target state="translated">void QSurfaceFormat::setSamples(int</target>
        </trans-unit>
        <trans-unit id="55b12edd66505288f1d252fc262c77407d1535b0" translate="yes" xml:space="preserve">
          <source>void QSurfaceFormat::setStencilBufferSize(int</source>
          <target state="translated">void QSurfaceFormat::setStencilBufferSize(int</target>
        </trans-unit>
        <trans-unit id="474be980f59060e6e03a735fbe8926505afdc779" translate="yes" xml:space="preserve">
          <source>void QSurfaceFormat::setStereo(bool</source>
          <target state="translated">void QSurfaceFormat::setStereo(bool</target>
        </trans-unit>
        <trans-unit id="53a7f56789ec0677b871df64964d9730b6642721" translate="yes" xml:space="preserve">
          <source>void QSurfaceFormat::setSwapBehavior(&lt;a href=&quot;qsurfaceformat#SwapBehavior-enum&quot;&gt;QSurfaceFormat::SwapBehavior&lt;/a&gt;</source>
          <target state="translated">void QSurfaceFormat :: setSwapBehavior ( &lt;a href=&quot;qsurfaceformat#SwapBehavior-enum&quot;&gt;QSurfaceFormat :: SwapBehavior&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f132fa3dfed5fec97cd596c4065dc62768a6b1de" translate="yes" xml:space="preserve">
          <source>void QSurfaceFormat::setSwapInterval(int</source>
          <target state="translated">void QSurfaceFormat::setSwapInterval(int</target>
        </trans-unit>
        <trans-unit id="0061a56e39e2691651070689b701cc81a162a8f4" translate="yes" xml:space="preserve">
          <source>void QSurfaceFormat::setVersion(int</source>
          <target state="translated">void QSurfaceFormat::setVersion(int</target>
        </trans-unit>
        <trans-unit id="36857abd9a76ad059c964d55c4129c7888c64610" translate="yes" xml:space="preserve">
          <source>void QSyntaxHighlighter::setDocument(&lt;a href=&quot;qtextdocument&quot;&gt;QTextDocument&lt;/a&gt; *</source>
          <target state="translated">void QSyntaxHighlighter :: setDocument ( &lt;a href=&quot;qtextdocument&quot;&gt;QTextDocument&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="264427ddc15f0e1ca6c643886793dbcbbd33d5a1" translate="yes" xml:space="preserve">
          <source>void QSystemSemaphore::setKey(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QSystemSemaphore :: setKey (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="051be521de6ec49c4b8113035d8052cce46deb4c" translate="yes" xml:space="preserve">
          <source>void QSystemTrayIcon::setContextMenu(&lt;a href=&quot;qmenu&quot;&gt;QMenu&lt;/a&gt; *</source>
          <target state="translated">vac&amp;iacute;o QSystemTrayIcon :: setContextMenu ( &lt;a href=&quot;qmenu&quot;&gt;QMenu&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="e2bb9eb55014330a926b18947332fccf2098d497" translate="yes" xml:space="preserve">
          <source>void QTabBar::moveTab(int</source>
          <target state="translated">anular QTabBar::moveTab(int</target>
        </trans-unit>
        <trans-unit id="729fd70016f382a2aa6907c7dae356c9bdf5d605" translate="yes" xml:space="preserve">
          <source>void QTabBar::removeTab(int</source>
          <target state="translated">anular QTabBar::removeTab(int</target>
        </trans-unit>
        <trans-unit id="75280ea4177279c78dfd3b77a29b80f1f6bf4a0e" translate="yes" xml:space="preserve">
          <source>void QTabBar::setAccessibleTabName(int</source>
          <target state="translated">anular QTabBar::setAccessibleTabName(int</target>
        </trans-unit>
        <trans-unit id="625255ef5225d6cdcfe156f9b39d62a4e08dfaca" translate="yes" xml:space="preserve">
          <source>void QTabBar::setTabButton(int</source>
          <target state="translated">anular QTabBar::setTabButton(int</target>
        </trans-unit>
        <trans-unit id="1bdad539b034ed2fc651a9e6d17b17dcd9572fff" translate="yes" xml:space="preserve">
          <source>void QTabBar::setTabData(int</source>
          <target state="translated">void QTabBar::setTabData(int</target>
        </trans-unit>
        <trans-unit id="1f25e8ef73295818be7442175f3e98ca6a7423ed" translate="yes" xml:space="preserve">
          <source>void QTabBar::setTabEnabled(int</source>
          <target state="translated">void QTabBar::setTabEnabled(int</target>
        </trans-unit>
        <trans-unit id="82333e18068cc97b3f5307f7b0eb4d5075366ada" translate="yes" xml:space="preserve">
          <source>void QTabBar::setTabIcon(int</source>
          <target state="translated">anular QTabBar::setTabIcon(int</target>
        </trans-unit>
        <trans-unit id="30f7fb7ea565ea63fef6ab28cd51d0280635cacd" translate="yes" xml:space="preserve">
          <source>void QTabBar::setTabText(int</source>
          <target state="translated">anular QTabBar::setTabText(int</target>
        </trans-unit>
        <trans-unit id="bf10cf22c73aae552ecc763f74a5c6526915db89" translate="yes" xml:space="preserve">
          <source>void QTabBar::setTabTextColor(int</source>
          <target state="translated">void QTabBar::setTabTextColor(int</target>
        </trans-unit>
        <trans-unit id="7ebe1f8b6f6841c68259f2b9ea0022ae04ed129b" translate="yes" xml:space="preserve">
          <source>void QTabBar::setTabToolTip(int</source>
          <target state="translated">anular QTabBar::setTabToolTip(int</target>
        </trans-unit>
        <trans-unit id="bdf8a6c6b879c9ea8158e3654fc5401f0c988966" translate="yes" xml:space="preserve">
          <source>void QTabBar::setTabVisible(int</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34351870364cd15e845ad746ee0e3f56efb8a3e5" translate="yes" xml:space="preserve">
          <source>void QTabBar::setTabWhatsThis(int</source>
          <target state="translated">anular QTabBar::setTabwhatsThis(int</target>
        </trans-unit>
        <trans-unit id="2e4e33bec9490608d14692293dfa02f6332cff16" translate="yes" xml:space="preserve">
          <source>void QTabWidget::clear()</source>
          <target state="translated">void QTabWidget::clear()</target>
        </trans-unit>
        <trans-unit id="af6331734211e0cc9fb0fc8b2a2bbb7c7f3bc7f7" translate="yes" xml:space="preserve">
          <source>void QTabWidget::removeTab(int</source>
          <target state="translated">anular QTabWidget::removeTab(int</target>
        </trans-unit>
        <trans-unit id="eca535ea7696892f67a29db7e30dfb3802005cd3" translate="yes" xml:space="preserve">
          <source>void QTabWidget::setCornerWidget(&lt;a href=&quot;qwidget#QWidget&quot;&gt;QWidget&lt;/a&gt; *</source>
          <target state="translated">void QTabWidget :: setCornerWidget ( &lt;a href=&quot;qwidget#QWidget&quot;&gt;QWidget&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="ae3668d87da5237fbfc01a7e7cd05a9835500f72" translate="yes" xml:space="preserve">
          <source>void QTabWidget::setTabEnabled(int</source>
          <target state="translated">void QTabWidget::setTabEnabled(int</target>
        </trans-unit>
        <trans-unit id="6f884b5d4685ea03cc8348be0108c4ef16117507" translate="yes" xml:space="preserve">
          <source>void QTabWidget::setTabIcon(int</source>
          <target state="translated">void QTabWidget::setTabIcon(int</target>
        </trans-unit>
        <trans-unit id="e9634a312c36d73f2c1d9302f44079422d0646aa" translate="yes" xml:space="preserve">
          <source>void QTabWidget::setTabText(int</source>
          <target state="translated">void QTabWidget::setTabText(int</target>
        </trans-unit>
        <trans-unit id="75ec55ef1149f268e0cfff7ea53f1c08605b5869" translate="yes" xml:space="preserve">
          <source>void QTabWidget::setTabToolTip(int</source>
          <target state="translated">void QTabWidget::setTabToolTip(int</target>
        </trans-unit>
        <trans-unit id="565c6528fdae209accbd1768addb72562c54b63f" translate="yes" xml:space="preserve">
          <source>void QTabWidget::setTabVisible(int</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66e331db564fef25da8a339b337db95cd88a7921" translate="yes" xml:space="preserve">
          <source>void QTabWidget::setTabWhatsThis(int</source>
          <target state="translated">void QTabWidget::setTabWhatsThis(int</target>
        </trans-unit>
        <trans-unit id="403fb7b10b1f1172f742222bccfa01e7aff60652" translate="yes" xml:space="preserve">
          <source>void QTableView::clearSpans()</source>
          <target state="translated">anular QTableView::clearSpans()</target>
        </trans-unit>
        <trans-unit id="9d38f4a856e5090e3c2d8ec5e879dbb70993ef08" translate="yes" xml:space="preserve">
          <source>void QTableView::setColumnHidden(int</source>
          <target state="translated">anular QTableView::setColumnHidden(int</target>
        </trans-unit>
        <trans-unit id="01e6117b18f2c03e79c6cbb60be9593da5917d39" translate="yes" xml:space="preserve">
          <source>void QTableView::setColumnWidth(int</source>
          <target state="translated">void QTableView::setColumnWidth(int</target>
        </trans-unit>
        <trans-unit id="86262465469beb87e532f3a7f20f8f351af7fbb9" translate="yes" xml:space="preserve">
          <source>void QTableView::setHorizontalHeader(&lt;a href=&quot;qheaderview&quot;&gt;QHeaderView&lt;/a&gt; *</source>
          <target state="translated">anular QTableView :: setHorizontalHeader ( &lt;a href=&quot;qheaderview&quot;&gt;QHeaderView&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="ec29ddf8492b18ae559f43823c45b741b39abdc8" translate="yes" xml:space="preserve">
          <source>void QTableView::setRowHeight(int</source>
          <target state="translated">anular QTableView::setRowHeight(int</target>
        </trans-unit>
        <trans-unit id="d855f7b46bf689e3fec5e57cfeea15230c09d8e9" translate="yes" xml:space="preserve">
          <source>void QTableView::setRowHidden(int</source>
          <target state="translated">anular QTableView::setRowHidden(int</target>
        </trans-unit>
        <trans-unit id="a39b1313f5baff70f0c7a06856781ebd8fae1468" translate="yes" xml:space="preserve">
          <source>void QTableView::setSortingEnabled(bool</source>
          <target state="translated">anular QTableView::setSortingEnabled(bool</target>
        </trans-unit>
        <trans-unit id="6922a5ffc4c921ab19a0e9b020a539849452b379" translate="yes" xml:space="preserve">
          <source>void QTableView::setSpan(int</source>
          <target state="translated">anular QTableView::setSpan(int</target>
        </trans-unit>
        <trans-unit id="1f001085c6fba0ace8ffe61e42756c1914d3f361" translate="yes" xml:space="preserve">
          <source>void QTableView::setVerticalHeader(&lt;a href=&quot;qheaderview&quot;&gt;QHeaderView&lt;/a&gt; *</source>
          <target state="translated">vac&amp;iacute;o QTableView :: setVerticalHeader ( &lt;a href=&quot;qheaderview&quot;&gt;QHeaderView&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="2e61fcf453b6fe040c1bac2a5f971d4e0db24fd2" translate="yes" xml:space="preserve">
          <source>void QTableWidget::closePersistentEditor(&lt;a href=&quot;qtablewidgetitem&quot;&gt;QTableWidgetItem&lt;/a&gt; *</source>
          <target state="translated">void QTableWidget :: closePersistentEditor ( &lt;a href=&quot;qtablewidgetitem&quot;&gt;QTableWidgetItem&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="dd9defe01db4e394d53ac000d7c2df4a486776ad" translate="yes" xml:space="preserve">
          <source>void QTableWidget::editItem(&lt;a href=&quot;qtablewidgetitem&quot;&gt;QTableWidgetItem&lt;/a&gt; *</source>
          <target state="translated">anular QTableWidget :: editItem ( &lt;a href=&quot;qtablewidgetitem&quot;&gt;QTableWidgetItem&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="65d9655c35d28e4ed11a8a4483bf3b18b2aa74fb" translate="yes" xml:space="preserve">
          <source>void QTableWidget::openPersistentEditor(&lt;a href=&quot;qtablewidgetitem&quot;&gt;QTableWidgetItem&lt;/a&gt; *</source>
          <target state="translated">void QTableWidget :: openPersistentEditor ( &lt;a href=&quot;qtablewidgetitem&quot;&gt;QTableWidgetItem&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="9ac576dec90927bf5995784b4dfeae93697691df" translate="yes" xml:space="preserve">
          <source>void QTableWidget::removeCellWidget(int</source>
          <target state="translated">void QTableWidget::removeCellWidget(int</target>
        </trans-unit>
        <trans-unit id="625fa5eee05c9617370afc41f8ae39f56852027e" translate="yes" xml:space="preserve">
          <source>void QTableWidget::setCellWidget(int</source>
          <target state="translated">void QTableWidget::setCellWidget(int</target>
        </trans-unit>
        <trans-unit id="c5c82b57b8b95c44954d6e10809089ce8f2ed98e" translate="yes" xml:space="preserve">
          <source>void QTableWidget::setColumnCount(int</source>
          <target state="translated">void QTableWidget::setColumnCount(int</target>
        </trans-unit>
        <trans-unit id="d2b3b61c635505fe64a6c470b15667e963fe011c" translate="yes" xml:space="preserve">
          <source>void QTableWidget::setCurrentCell(int</source>
          <target state="translated">void QTableWidget::setCurrentCell(int</target>
        </trans-unit>
        <trans-unit id="72aa5ff8764fd2cc38d50d9f735b21dca9da900b" translate="yes" xml:space="preserve">
          <source>void QTableWidget::setCurrentItem(&lt;a href=&quot;qtablewidgetitem&quot;&gt;QTableWidgetItem&lt;/a&gt; *</source>
          <target state="translated">vac&amp;iacute;o QTableWidget :: setCurrentItem ( &lt;a href=&quot;qtablewidgetitem&quot;&gt;QTableWidgetItem&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="bbbdf4096364efdbd98231daf79ee79648e405b1" translate="yes" xml:space="preserve">
          <source>void QTableWidget::setHorizontalHeaderItem(int</source>
          <target state="translated">void QTableWidget::setHorizontalHeaderItem(int</target>
        </trans-unit>
        <trans-unit id="b0f803a67e53f27618c30ec589cf203cc71e0638" translate="yes" xml:space="preserve">
          <source>void QTableWidget::setHorizontalHeaderLabels(const &lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QTableWidget :: setHorizontalHeaderLabels (const &lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="77198200297dbc186c4677ab576ad33402b3b4af" translate="yes" xml:space="preserve">
          <source>void QTableWidget::setItem(int</source>
          <target state="translated">void QTableWidget::setItem(int</target>
        </trans-unit>
        <trans-unit id="b4dcc136ac60d5c1c3f80613f13e64875b1e156b" translate="yes" xml:space="preserve">
          <source>void QTableWidget::setItemPrototype(const &lt;a href=&quot;qtablewidgetitem&quot;&gt;QTableWidgetItem&lt;/a&gt; *</source>
          <target state="translated">void QTableWidget :: setItemPrototype (const &lt;a href=&quot;qtablewidgetitem&quot;&gt;QTableWidgetItem&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="7a0dcb8c544f540b5f18e04797de33f9b3af3f2a" translate="yes" xml:space="preserve">
          <source>void QTableWidget::setRangeSelected(const &lt;a href=&quot;qtablewidgetselectionrange&quot;&gt;QTableWidgetSelectionRange&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QTableWidget :: setRangeSelected (const &lt;a href=&quot;qtablewidgetselectionrange&quot;&gt;QTableWidgetSelectionRange&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="889e959ffce315518d096c7a6ac9c6c716ce7d50" translate="yes" xml:space="preserve">
          <source>void QTableWidget::setRowCount(int</source>
          <target state="translated">void QTableWidget::setRowCount(int</target>
        </trans-unit>
        <trans-unit id="f53824b4600445858fb004be36601143a61e4f99" translate="yes" xml:space="preserve">
          <source>void QTableWidget::setVerticalHeaderItem(int</source>
          <target state="translated">void QTableWidget::setVerticalHeaderItem(int</target>
        </trans-unit>
        <trans-unit id="0b8e4d4df8fff10cfea7a580404e4f7170761ec0" translate="yes" xml:space="preserve">
          <source>void QTableWidget::setVerticalHeaderLabels(const &lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QTableWidget :: setVerticalHeaderLabels (const &lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="a6712ca6161a76c6b679cd273ba547c5b9decbe4" translate="yes" xml:space="preserve">
          <source>void QTableWidget::sortItems(int</source>
          <target state="translated">void QTableWidget::sortItems(int</target>
        </trans-unit>
        <trans-unit id="574099786310eb52ed72580c8a32bd6d3b5a720f" translate="yes" xml:space="preserve">
          <source>void QTableWidgetItem::setBackground(const &lt;a href=&quot;qbrush&quot;&gt;QBrush&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QTableWidgetItem :: setBackground (const &lt;a href=&quot;qbrush&quot;&gt;QBrush&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="5a1027dfdfc787284aca55ece21d9aeae2d062ec" translate="yes" xml:space="preserve">
          <source>void QTableWidgetItem::setCheckState(&lt;a href=&quot;qt#CheckState-enum&quot;&gt;Qt::CheckState&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QTableWidgetItem :: setCheckState ( &lt;a href=&quot;qt#CheckState-enum&quot;&gt;Qt :: CheckState&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6725e58e5cdd0553dc811f535a1ac3b7ece18a6a" translate="yes" xml:space="preserve">
          <source>void QTableWidgetItem::setFlags(&lt;a href=&quot;qt#ItemFlag-enum&quot;&gt;Qt::ItemFlags&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QTableWidgetItem :: setFlags ( &lt;a href=&quot;qt#ItemFlag-enum&quot;&gt;Qt :: ItemFlags&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ce4af6df855511891430f648de7db04743ae3050" translate="yes" xml:space="preserve">
          <source>void QTableWidgetItem::setFont(const &lt;a href=&quot;qfont&quot;&gt;QFont&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QTableWidgetItem :: setFont (const &lt;a href=&quot;qfont&quot;&gt;QFont&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="4b044c48f3ea8a2245fdee2026fab2eab49e5511" translate="yes" xml:space="preserve">
          <source>void QTableWidgetItem::setForeground(const &lt;a href=&quot;qbrush&quot;&gt;QBrush&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QTableWidgetItem :: setForeground (const &lt;a href=&quot;qbrush&quot;&gt;QBrush&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="874323fc998f1f5d5783a4d9595dc1b8e07cfd4e" translate="yes" xml:space="preserve">
          <source>void QTableWidgetItem::setIcon(const &lt;a href=&quot;qicon&quot;&gt;QIcon&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QTableWidgetItem :: setIcon (const &lt;a href=&quot;qicon&quot;&gt;QIcon&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="33b10a0113dcd669a5c32bee6652895928ebc46e" translate="yes" xml:space="preserve">
          <source>void QTableWidgetItem::setSelected(bool</source>
          <target state="translated">void QTableWidgetItem::setSelected(bool</target>
        </trans-unit>
        <trans-unit id="4bbbd6dfc59d0c5c2c2d954896fd5a058d77aa31" translate="yes" xml:space="preserve">
          <source>void QTableWidgetItem::setSizeHint(const &lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QTableWidgetItem :: setSizeHint (const &lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="dc4cdaba7530c46913a8b2fe6da51275241555bb" translate="yes" xml:space="preserve">
          <source>void QTableWidgetItem::setStatusTip(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QTableWidgetItem :: setStatusTip (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="7987a34473239c922c9f386b2b772f417f2344b5" translate="yes" xml:space="preserve">
          <source>void QTableWidgetItem::setText(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QTableWidgetItem :: setText (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="c06efc35cad5b2843030dd9da407d77b259d2953" translate="yes" xml:space="preserve">
          <source>void QTableWidgetItem::setTextAlignment(int</source>
          <target state="translated">void QTableWidgetItem::setTextAlignment(int</target>
        </trans-unit>
        <trans-unit id="df301137c3be95cd9e5205b991f1277d3897b571" translate="yes" xml:space="preserve">
          <source>void QTableWidgetItem::setToolTip(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QTableWidgetItem :: setToolTip (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="59dd7032aa6ef12650399a938b0195c4fd5a03ae" translate="yes" xml:space="preserve">
          <source>void QTableWidgetItem::setWhatsThis(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QTableWidgetItem :: setWhatsThis (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="93c54878da2921b4e920f32750f532aff1cc05f2" translate="yes" xml:space="preserve">
          <source>void QTapReading::setDoubleTap(bool</source>
          <target state="translated">void QTapLectura::setDoubleTap(bool</target>
        </trans-unit>
        <trans-unit id="5f2a80dfdaea8bf9aefe6981482bd9b3ee8e4cac" translate="yes" xml:space="preserve">
          <source>void QTapReading::setTapDirection(&lt;a href=&quot;qtapreading#TapDirection-enum&quot;&gt;QTapReading::TapDirection&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QTapReading :: setTapDirection ( &lt;a href=&quot;qtapreading#TapDirection-enum&quot;&gt;QTapReading :: TapDirection&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6f25fafbd783634a0ed7f55e6f5df34314432557" translate="yes" xml:space="preserve">
          <source>void QTcpServer::close()</source>
          <target state="translated">anular QTcpServer::close()</target>
        </trans-unit>
        <trans-unit id="fbca036b1806a5c2a6516df2382318696d591122" translate="yes" xml:space="preserve">
          <source>void QTcpServer::pauseAccepting()</source>
          <target state="translated">anular el QTcpServer::pausaAceptar()</target>
        </trans-unit>
        <trans-unit id="ff12a1be483c565d12c19f6f6a288b8e603b249a" translate="yes" xml:space="preserve">
          <source>void QTcpServer::resumeAccepting()</source>
          <target state="translated">anular el QTcpServer::resume Aceptar()</target>
        </trans-unit>
        <trans-unit id="f998a3f4ba5493231d431c5087f0b20af1d079f7" translate="yes" xml:space="preserve">
          <source>void QTcpServer::setMaxPendingConnections(int</source>
          <target state="translated">void QTcpServer::setMaxPendingConnections(int</target>
        </trans-unit>
        <trans-unit id="67e2ff3ec96291d1c5780a060eceb42f40b85326" translate="yes" xml:space="preserve">
          <source>void QTcpServer::setProxy(const &lt;a href=&quot;qnetworkproxy&quot;&gt;QNetworkProxy&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QTcpServer :: setProxy (const &lt;a href=&quot;qnetworkproxy&quot;&gt;QNetworkProxy&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="dd8e4fdd8e225e8d75e93ddade49b16abd5c0964" translate="yes" xml:space="preserve">
          <source>void QTechnique::addFilterKey(&lt;a href=&quot;qt3drender-qfilterkey&quot;&gt;Qt3DRender::QFilterKey&lt;/a&gt; *</source>
          <target state="translated">void QTechnique :: addFilterKey ( &lt;a href=&quot;qt3drender-qfilterkey&quot;&gt;Qt3DRender :: QFilterKey&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="3f4065c58a8d716cedfac3afc0f5731fc4e06f31" translate="yes" xml:space="preserve">
          <source>void QTechnique::addParameter(&lt;a href=&quot;qt3drender-qparameter&quot;&gt;Qt3DRender::QParameter&lt;/a&gt; *</source>
          <target state="translated">void QTechnique :: addParameter ( &lt;a href=&quot;qt3drender-qparameter&quot;&gt;Qt3DRender :: QParameter&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="a956b58dd7c824556c2a6ab3fe145bad0e9458c5" translate="yes" xml:space="preserve">
          <source>void QTechnique::addRenderPass(&lt;a href=&quot;qt3drender-qrenderpass&quot;&gt;Qt3DRender::QRenderPass&lt;/a&gt; *</source>
          <target state="translated">void QTechnique :: addRenderPass ( &lt;a href=&quot;qt3drender-qrenderpass&quot;&gt;Qt3DRender :: QRenderPass&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="6bf33a64c6430ba2188047da0073213c0e00cd3c" translate="yes" xml:space="preserve">
          <source>void QTechnique::removeFilterKey(&lt;a href=&quot;qt3drender-qfilterkey&quot;&gt;Qt3DRender::QFilterKey&lt;/a&gt; *</source>
          <target state="translated">void QTechnique :: removeFilterKey ( &lt;a href=&quot;qt3drender-qfilterkey&quot;&gt;Qt3DRender :: QFilterKey&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="d004cb81de366c086c43cc784f83f23a35f058f5" translate="yes" xml:space="preserve">
          <source>void QTechnique::removeParameter(&lt;a href=&quot;qt3drender-qparameter&quot;&gt;Qt3DRender::QParameter&lt;/a&gt; *</source>
          <target state="translated">void QTechnique :: removeParameter ( &lt;a href=&quot;qt3drender-qparameter&quot;&gt;Qt3DRender :: QParameter&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="2897c6c1e11d49538da451cf4b5e8081e6540ca8" translate="yes" xml:space="preserve">
          <source>void QTechnique::removeRenderPass(&lt;a href=&quot;qt3drender-qrenderpass&quot;&gt;Qt3DRender::QRenderPass&lt;/a&gt; *</source>
          <target state="translated">void QTechnique :: removeRenderPass ( &lt;a href=&quot;qt3drender-qrenderpass&quot;&gt;Qt3DRender :: QRenderPass&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="11504803aeb2347eef3441e0eb7426eb3ab66685" translate="yes" xml:space="preserve">
          <source>void QTechniqueFilter::addMatch(&lt;a href=&quot;qt3drender-qfilterkey&quot;&gt;Qt3DRender::QFilterKey&lt;/a&gt; *</source>
          <target state="translated">vac&amp;iacute;o QTechniqueFilter :: addMatch ( &lt;a href=&quot;qt3drender-qfilterkey&quot;&gt;Qt3DRender :: QFilterKey&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="ce08d604bac06e7da589701c08fd16e8aeb2f311" translate="yes" xml:space="preserve">
          <source>void QTechniqueFilter::addParameter(&lt;a href=&quot;qt3drender-qparameter&quot;&gt;Qt3DRender::QParameter&lt;/a&gt; *</source>
          <target state="translated">vac&amp;iacute;o QTechniqueFilter :: addParameter ( &lt;a href=&quot;qt3drender-qparameter&quot;&gt;Qt3DRender :: QParameter&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="b789be441f3af28aff696e0abeb0e323d8795118" translate="yes" xml:space="preserve">
          <source>void QTechniqueFilter::removeMatch(&lt;a href=&quot;qt3drender-qfilterkey&quot;&gt;Qt3DRender::QFilterKey&lt;/a&gt; *</source>
          <target state="translated">vac&amp;iacute;o QTechniqueFilter :: removeMatch ( &lt;a href=&quot;qt3drender-qfilterkey&quot;&gt;Qt3DRender :: QFilterKey&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="de08e0f3038a43bca7e2b0105803ee3400775842" translate="yes" xml:space="preserve">
          <source>void QTechniqueFilter::removeParameter(&lt;a href=&quot;qt3drender-qparameter&quot;&gt;Qt3DRender::QParameter&lt;/a&gt; *</source>
          <target state="translated">void QTechniqueFilter :: removeParameter ( &lt;a href=&quot;qt3drender-qparameter&quot;&gt;Qt3DRender :: QParameter&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="c92e1edabb79d2db9a27338ff01bafca133dbb2c" translate="yes" xml:space="preserve">
          <source>void QTemporaryDir::setAutoRemove(bool</source>
          <target state="translated">void QTemporaryDir::setAutoRemove(bool</target>
        </trans-unit>
        <trans-unit id="fd3ddb11682a0eff760530f901ab7fc1d1c48df2" translate="yes" xml:space="preserve">
          <source>void QTemporaryFile::setAutoRemove(bool</source>
          <target state="translated">anular QTemporaryFile::setAutoRemove(bool</target>
        </trans-unit>
        <trans-unit id="40f85e3c34a47c863913eeda296c0eb37c64c1fc" translate="yes" xml:space="preserve">
          <source>void QTemporaryFile::setFileTemplate(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QTemporaryFile :: setFileTemplate (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="7105ba47c9e0d67e488b8903c6d2eb27a9104cbb" translate="yes" xml:space="preserve">
          <source>void QTest::addColumn(const char *</source>
          <target state="translated">void QTest::addColumn(const char *)</target>
        </trans-unit>
        <trans-unit id="215057fb915a91407c9ab90295c0af5013acefbf" translate="yes" xml:space="preserve">
          <source>void QTest::ignoreMessage(&lt;a href=&quot;#QtMsgType-enum&quot;&gt;QtMsgType&lt;/a&gt;</source>
          <target state="translated">QTest vac&amp;iacute;o :: ignoreMessage ( &lt;a href=&quot;#QtMsgType-enum&quot;&gt;QtMsgType&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f4658aa30544785988f085996256a8c9e82e4cfb" translate="yes" xml:space="preserve">
          <source>void QTest::ignoreMessage(&lt;a href=&quot;qtglobal#QtMsgType-enum&quot;&gt;QtMsgType&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="667115b56c355c2fa7a9d761b60b35cb43f90f57" translate="yes" xml:space="preserve">
          <source>void QTest::keyClick(&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; *</source>
          <target state="translated">void QTest :: keyClick ( &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="7e8450add749518619af9bb156190b0ac75e1259" translate="yes" xml:space="preserve">
          <source>void QTest::keyClick(&lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt; *</source>
          <target state="translated">void QTest :: keyClick ( &lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="1e81a9925c306bd597bfd6aff26688171482503e" translate="yes" xml:space="preserve">
          <source>void QTest::keyClicks(&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; *</source>
          <target state="translated">void QTest :: keyClicks ( &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="bfe0fb765c3184ae730bfde3b0c3a1c90f9178cf" translate="yes" xml:space="preserve">
          <source>void QTest::keyEvent(&lt;a href=&quot;qtest#KeyAction-enum&quot;&gt;QTest::KeyAction&lt;/a&gt;</source>
          <target state="translated">anular QTest :: keyEvent ( &lt;a href=&quot;qtest#KeyAction-enum&quot;&gt;QTest :: KeyAction&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b15862895afb651497670be4abe8299c4ffe9d7f" translate="yes" xml:space="preserve">
          <source>void QTest::keyPress(&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; *</source>
          <target state="translated">QTest vac&amp;iacute;o :: keyPress ( &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="5abba4c62cd5ebff708af182e782d71e86947854" translate="yes" xml:space="preserve">
          <source>void QTest::keyPress(&lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt; *</source>
          <target state="translated">anular QTest :: keyPress ( &lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="ab59059a83f074ab3406cbd63429ff211bda9bae" translate="yes" xml:space="preserve">
          <source>void QTest::keyRelease(&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; *</source>
          <target state="translated">void QTest :: keyRelease ( &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="0774202975cbcd678cd7ab4cff2595d29aafd10c" translate="yes" xml:space="preserve">
          <source>void QTest::keyRelease(&lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt; *</source>
          <target state="translated">void QTest :: keyRelease ( &lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="7f3542a8046bb9ce0de8725b8ef72c46c05b3e6e" translate="yes" xml:space="preserve">
          <source>void QTest::keySequence(&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; *</source>
          <target state="translated">QTest vac&amp;iacute;o :: keySequence ( &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="b1c1d0c8b2f58634f0f51ba7b36b5a9fb097a661" translate="yes" xml:space="preserve">
          <source>void QTest::keySequence(&lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt; *</source>
          <target state="translated">void QTest :: keySequence ( &lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="01d3efa160a9df0c819c2e263e2b47a89546998d" translate="yes" xml:space="preserve">
          <source>void QTest::mouseClick(&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; *</source>
          <target state="translated">void QTest :: mouseClick ( &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="8cce556097983836d7f77f3b7f72ab89c98b4f17" translate="yes" xml:space="preserve">
          <source>void QTest::mouseClick(&lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt; *</source>
          <target state="translated">void QTest :: mouseClick ( &lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="81c9041fd22895c416405bd0e42e6e5cdf426174" translate="yes" xml:space="preserve">
          <source>void QTest::mouseDClick(&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; *</source>
          <target state="translated">void QTest :: mouseDClick ( &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="5ce572fc7bcfa7fb42743972a2558b5ed7ec6d1e" translate="yes" xml:space="preserve">
          <source>void QTest::mouseDClick(&lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt; *</source>
          <target state="translated">void QTest :: mouseDClick ( &lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="3f4fd458addb796c69488ec2ee697ee87887ade2" translate="yes" xml:space="preserve">
          <source>void QTest::mouseMove(&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; *</source>
          <target state="translated">QTest vac&amp;iacute;o :: mouseMove ( &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="4fd1b871eeaf4998dd86ff33cf9ba1e22ede65cb" translate="yes" xml:space="preserve">
          <source>void QTest::mouseMove(&lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt; *</source>
          <target state="translated">void QTest :: mouseMove ( &lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="70d7042ce3acf174c3f0f02a02b33c1c43e65dd9" translate="yes" xml:space="preserve">
          <source>void QTest::mousePress(&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; *</source>
          <target state="translated">QTest vac&amp;iacute;o :: mousePress ( &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="60e932b21fa47f5c6c6cbb5acdca8010d0bdcb6a" translate="yes" xml:space="preserve">
          <source>void QTest::mousePress(&lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt; *</source>
          <target state="translated">anular QTest :: mousePress ( &lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="23e19bbe5bbd690b9e1a81368a538fbf86b02907" translate="yes" xml:space="preserve">
          <source>void QTest::mouseRelease(&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; *</source>
          <target state="translated">void QTest :: mouseRelease ( &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="23d8f13e380550c8c6b2bf43052b47ca777d2c04" translate="yes" xml:space="preserve">
          <source>void QTest::mouseRelease(&lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt; *</source>
          <target state="translated">void QTest :: mouseRelease ( &lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="04eae4c40ddbae27530a8e97408dcacdf27d58ce" translate="yes" xml:space="preserve">
          <source>void QTest::qSleep(int</source>
          <target state="translated">void QTest::qSleep(int</target>
        </trans-unit>
        <trans-unit id="65f4a9a9d83d7c9f36cd55203f8abb249e97193f" translate="yes" xml:space="preserve">
          <source>void QTest::qWait(int</source>
          <target state="translated">void QTest::qWait(int</target>
        </trans-unit>
        <trans-unit id="e70f756f2206c8a6c77463da536b6407d42b5d14" translate="yes" xml:space="preserve">
          <source>void QTest::setBenchmarkResult(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">QTest vac&amp;iacute;o :: setBenchmarkResult ( &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2f4994043e8de9e17ef91e532607cf83d74edb9a" translate="yes" xml:space="preserve">
          <source>void QTest::setBenchmarkResult(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec3cdc343787d10888993710338f7b97d0df4350" translate="yes" xml:space="preserve">
          <source>void QTestEventList::addDelay(int</source>
          <target state="translated">void QTestEventList::addDelay(int</target>
        </trans-unit>
        <trans-unit id="da121f8ef0f09c85477eb041d14cbc35af81e9b5" translate="yes" xml:space="preserve">
          <source>void QTestEventList::addKeyClick(&lt;a href=&quot;qt#Key-enum&quot;&gt;Qt::Key&lt;/a&gt;</source>
          <target state="translated">void QTestEventList :: addKeyClick ( &lt;a href=&quot;qt#Key-enum&quot;&gt;Qt :: Key&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="043876a3e992281745c745de906f29e0913492a9" translate="yes" xml:space="preserve">
          <source>void QTestEventList::addKeyClick(char</source>
          <target state="translated">anular QTestEventList::addKeyClick(char</target>
        </trans-unit>
        <trans-unit id="e327fd5e625ab6173fc53ec950d07f368ace7b59" translate="yes" xml:space="preserve">
          <source>void QTestEventList::addKeyClicks(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QTestEventList :: addKeyClicks (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="71539ed3e556315c3247f539400476cc3908e271" translate="yes" xml:space="preserve">
          <source>void QTestEventList::addKeyPress(&lt;a href=&quot;qt#Key-enum&quot;&gt;Qt::Key&lt;/a&gt;</source>
          <target state="translated">void QTestEventList :: addKeyPress ( &lt;a href=&quot;qt#Key-enum&quot;&gt;Qt :: Key&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="58e509d848201b2a3438d23e8479ff785ad1729f" translate="yes" xml:space="preserve">
          <source>void QTestEventList::addKeyPress(char</source>
          <target state="translated">anular QTestEventList::addKeyPress(char</target>
        </trans-unit>
        <trans-unit id="0fbab84050b85076d3e98f2fab7e297ca2b219d3" translate="yes" xml:space="preserve">
          <source>void QTestEventList::addKeyRelease(&lt;a href=&quot;qt#Key-enum&quot;&gt;Qt::Key&lt;/a&gt;</source>
          <target state="translated">void QTestEventList :: addKeyRelease ( &lt;a href=&quot;qt#Key-enum&quot;&gt;Qt :: Key&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cdf56d70d05bde1b55ef469dee86198404010280" translate="yes" xml:space="preserve">
          <source>void QTestEventList::addKeyRelease(char</source>
          <target state="translated">anular QTestEventList::addKeyRelease(char</target>
        </trans-unit>
        <trans-unit id="14a9325d2e4eb73a4b8a1af7c49ad55bf5e04a64" translate="yes" xml:space="preserve">
          <source>void QTestEventList::addMouseClick(&lt;a href=&quot;qt#MouseButton-enum&quot;&gt;Qt::MouseButton&lt;/a&gt;</source>
          <target state="translated">void QTestEventList :: addMouseClick ( &lt;a href=&quot;qt#MouseButton-enum&quot;&gt;Qt :: MouseButton&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="64f1fffc3a6ddce8fb101cc4635fa9d1d44079c6" translate="yes" xml:space="preserve">
          <source>void QTestEventList::addMouseDClick(&lt;a href=&quot;qt#MouseButton-enum&quot;&gt;Qt::MouseButton&lt;/a&gt;</source>
          <target state="translated">void QTestEventList :: addMouseDClick ( &lt;a href=&quot;qt#MouseButton-enum&quot;&gt;Qt :: MouseButton&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9d72f0800927e0fd0b4bfddfbbd9dbb697a21311" translate="yes" xml:space="preserve">
          <source>void QTestEventList::addMouseMove(&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt;</source>
          <target state="translated">void QTestEventList :: addMouseMove ( &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5ad2e7c494d656aac17018a1fe06201fe2e01c47" translate="yes" xml:space="preserve">
          <source>void QTestEventList::addMousePress(&lt;a href=&quot;qt#MouseButton-enum&quot;&gt;Qt::MouseButton&lt;/a&gt;</source>
          <target state="translated">void QTestEventList :: addMousePress ( &lt;a href=&quot;qt#MouseButton-enum&quot;&gt;Qt :: MouseButton&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0e381ccee8aaff6daa626033ca5ec846534d67eb" translate="yes" xml:space="preserve">
          <source>void QTestEventList::addMouseRelease(&lt;a href=&quot;qt#MouseButton-enum&quot;&gt;Qt::MouseButton&lt;/a&gt;</source>
          <target state="translated">anular QTestEventList :: addMouseRelease ( &lt;a href=&quot;qt#MouseButton-enum&quot;&gt;Qt :: MouseButton&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5bd32cb1390e27ae1659ccfa27204888ade7633c" translate="yes" xml:space="preserve">
          <source>void QTestEventList::clear()</source>
          <target state="translated">anular QTestEventList::clear()</target>
        </trans-unit>
        <trans-unit id="01a81382b2cbc2ae6bf2e5353cb698c310bdaa11" translate="yes" xml:space="preserve">
          <source>void QTestEventList::simulate(&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; *</source>
          <target state="translated">void QTestEventList :: simulate ( &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="33454aff36aee72b14ec353b0712412b44000c91" translate="yes" xml:space="preserve">
          <source>void QTextBlock::clearLayout()</source>
          <target state="translated">anular QTextBlock::clearLayout()</target>
        </trans-unit>
        <trans-unit id="fe998eeb8c51ac5ea2483b6355d04f9c8ad70bac" translate="yes" xml:space="preserve">
          <source>void QTextBlock::setLineCount(int</source>
          <target state="translated">void QTextBlock::setLineCount(int</target>
        </trans-unit>
        <trans-unit id="fc38324bab7425f2dbd3d423680c725cd482f22e" translate="yes" xml:space="preserve">
          <source>void QTextBlock::setRevision(int</source>
          <target state="translated">anular QTextBlock::setRevision(int</target>
        </trans-unit>
        <trans-unit id="5bc50fb1a10a352159800027b14b5c7fb79fa693" translate="yes" xml:space="preserve">
          <source>void QTextBlock::setUserData(&lt;a href=&quot;qtextblockuserdata&quot;&gt;QTextBlockUserData&lt;/a&gt; *</source>
          <target state="translated">vac&amp;iacute;o QTextBlock :: setUserData ( &lt;a href=&quot;qtextblockuserdata&quot;&gt;QTextBlockUserData&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="eba6cfbab7b5f92b49983c8a3125ec8848f3f90b" translate="yes" xml:space="preserve">
          <source>void QTextBlock::setUserState(int</source>
          <target state="translated">anular QTextBlock::setUserState(int</target>
        </trans-unit>
        <trans-unit id="ac157cc627802a149ba4cd5bc1fb8885ca1f7cf1" translate="yes" xml:space="preserve">
          <source>void QTextBlock::setVisible(bool</source>
          <target state="translated">void QTextBlock::setVisible(bool</target>
        </trans-unit>
        <trans-unit id="a3c7f07c022c73a72ea159c0ea387d7b1a88a6b3" translate="yes" xml:space="preserve">
          <source>void QTextBlockFormat::setAlignment(&lt;a href=&quot;qt#AlignmentFlag-enum&quot;&gt;Qt::Alignment&lt;/a&gt;</source>
          <target state="translated">void QTextBlockFormat :: setAlignment ( &lt;a href=&quot;qt#AlignmentFlag-enum&quot;&gt;Qt :: Alignment&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7b2ab03a4d5dfdad5e44096e37608cdf963ddc50" translate="yes" xml:space="preserve">
          <source>void QTextBlockFormat::setBottomMargin(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">anular QTextBlockFormat :: setBottomMargin ( &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e239f157ef7f21b515da54fc546d8567ad3ec042" translate="yes" xml:space="preserve">
          <source>void QTextBlockFormat::setBottomMargin(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34dd4f02a3306e0363fcfaf18ae8871274d75198" translate="yes" xml:space="preserve">
          <source>void QTextBlockFormat::setHeadingLevel(int</source>
          <target state="translated">void QTextBlockFormat::setHeadingLevel(int</target>
        </trans-unit>
        <trans-unit id="db11d401df42269f2f8c0cd2a1e4df11701c07bd" translate="yes" xml:space="preserve">
          <source>void QTextBlockFormat::setIndent(int</source>
          <target state="translated">void QTextBlockFormat::setIndent(int</target>
        </trans-unit>
        <trans-unit id="99456360db19986ae7d76dc0830bab1e428f1bc1" translate="yes" xml:space="preserve">
          <source>void QTextBlockFormat::setLeftMargin(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">void QTextBlockFormat :: setLeftMargin ( &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f6638eb8c9364a79c39fe9b61690a3b9b749048b" translate="yes" xml:space="preserve">
          <source>void QTextBlockFormat::setLeftMargin(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c92a7879d11a7eb6c646bc1b20e211987f47e07" translate="yes" xml:space="preserve">
          <source>void QTextBlockFormat::setLineHeight(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">void QTextBlockFormat :: setLineHeight ( &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0cbcaae8afe28fe351be728679b7f7f3f62f2f72" translate="yes" xml:space="preserve">
          <source>void QTextBlockFormat::setLineHeight(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a583bd7b50897cd7132ecc3d02aebcde0da6e2fd" translate="yes" xml:space="preserve">
          <source>void QTextBlockFormat::setMarker(&lt;a href=&quot;qtextblockformat#MarkerType-enum&quot;&gt;QTextBlockFormat::MarkerType&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="805b757f06a42925818c0d93f7a69d9fe9ed2ffa" translate="yes" xml:space="preserve">
          <source>void QTextBlockFormat::setNonBreakableLines(bool</source>
          <target state="translated">void QTextBlockFormat::setNonBreakableLines(bool</target>
        </trans-unit>
        <trans-unit id="0785c85bc593d3c638cd580c8fd6957410cda52e" translate="yes" xml:space="preserve">
          <source>void QTextBlockFormat::setPageBreakPolicy(&lt;a href=&quot;qtextformat#PageBreakFlag-enum&quot;&gt;QTextFormat::PageBreakFlags&lt;/a&gt;</source>
          <target state="translated">anular QTextBlockFormat :: setPageBreakPolicy ( &lt;a href=&quot;qtextformat#PageBreakFlag-enum&quot;&gt;QTextFormat :: PageBreakFlags&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4f2ffbd75bb2db44dfa4bcc3a12e1f3f8b1b7b15" translate="yes" xml:space="preserve">
          <source>void QTextBlockFormat::setRightMargin(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">void QTextBlockFormat :: setRightMargin ( &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c5dc0df56edb517bd66f97f05e0acce8b90d50a0" translate="yes" xml:space="preserve">
          <source>void QTextBlockFormat::setRightMargin(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50a9f631719deb4253f26c478ee0fdb419873dae" translate="yes" xml:space="preserve">
          <source>void QTextBlockFormat::setTabPositions(const QList&amp;lt;&lt;a href=&quot;qtextoption-tab&quot;&gt;QTextOption::Tab&lt;/a&gt;&amp;gt; &amp;amp;</source>
          <target state="translated">void QTextBlockFormat :: setTabPositions (const QList &amp;lt; &lt;a href=&quot;qtextoption-tab&quot;&gt;QTextOption :: Tab&lt;/a&gt; &amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="8601beab3540bccecf2426c732d6a691570a5a3a" translate="yes" xml:space="preserve">
          <source>void QTextBlockFormat::setTextIndent(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QTextBlockFormat :: setTextIndent ( &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7a2fb459cb93bbb5abd268fcc3a367bf7d5d9955" translate="yes" xml:space="preserve">
          <source>void QTextBlockFormat::setTextIndent(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4aac397c7fb52d453c57b3af5032e3c4fd06d7e" translate="yes" xml:space="preserve">
          <source>void QTextBlockFormat::setTopMargin(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">void QTextBlockFormat :: setTopMargin ( &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cd664f350703fa52ce0e279f8e7f5ebaacded0cd" translate="yes" xml:space="preserve">
          <source>void QTextBlockFormat::setTopMargin(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4cd53522ce600698dacea35aca1150c7ea8c35b" translate="yes" xml:space="preserve">
          <source>void QTextBoundaryFinder::setPosition(int</source>
          <target state="translated">void QTextBoundaryFinder::setPosition(int</target>
        </trans-unit>
        <trans-unit id="dde52617b41c9fa50d28ef24c99b812cda3979ce" translate="yes" xml:space="preserve">
          <source>void QTextBoundaryFinder::toEnd()</source>
          <target state="translated">void QTextBoundaryFinder::toEnd()</target>
        </trans-unit>
        <trans-unit id="94dbd0167dc412ddb8bff48bace811297cedba5e" translate="yes" xml:space="preserve">
          <source>void QTextBoundaryFinder::toStart()</source>
          <target state="translated">void QTextBoundaryFinder::toStart()</target>
        </trans-unit>
        <trans-unit id="05c825108d07aef32c8050fef227ee73bf143694" translate="yes" xml:space="preserve">
          <source>void QTextBrowser::clearHistory()</source>
          <target state="translated">void QTextBrowser::clearHistory()</target>
        </trans-unit>
        <trans-unit id="2695acfe4c65f77a001fee1225dd492ebd529534" translate="yes" xml:space="preserve">
          <source>void QTextCharFormat::setAnchor(bool</source>
          <target state="translated">void QTextCharFormat::setAnchor(bool</target>
        </trans-unit>
        <trans-unit id="a3e7571f26aff2c48011753be7e353523a3ad7e0" translate="yes" xml:space="preserve">
          <source>void QTextCharFormat::setAnchorHref(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QTextCharFormat :: setAnchorHref (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="da73ef8b49473c12c1d92ea3685d2062db994fb4" translate="yes" xml:space="preserve">
          <source>void QTextCharFormat::setAnchorNames(const &lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QTextCharFormat :: setAnchorNames (const &lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="b9ed880dbba2601fdd1d99898186b56337edccbf" translate="yes" xml:space="preserve">
          <source>void QTextCharFormat::setFont(const &lt;a href=&quot;qfont&quot;&gt;QFont&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QTextCharFormat :: setFont (const &lt;a href=&quot;qfont&quot;&gt;QFont&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="dd94113e88b47bfebfaac698a91722d2dc90ea25" translate="yes" xml:space="preserve">
          <source>void QTextCharFormat::setFontCapitalization(&lt;a href=&quot;qfont#Capitalization-enum&quot;&gt;QFont::Capitalization&lt;/a&gt;</source>
          <target state="translated">void QTextCharFormat :: setFontCapitalization ( &lt;a href=&quot;qfont#Capitalization-enum&quot;&gt;QFont :: Capitalizaci&amp;oacute;n&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3a8b7af4b0e25a1714b8dfc49ee9051707cae69c" translate="yes" xml:space="preserve">
          <source>void QTextCharFormat::setFontFamilies(const &lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QTextCharFormat :: setFontFamilies (const &lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="0fe8de9b44eef787e4b7820708d0dcdb926bfecd" translate="yes" xml:space="preserve">
          <source>void QTextCharFormat::setFontFamily(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QTextCharFormat :: setFontFamily (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="a9d1fd7e795c115b688c649ad7c4bee82a125298" translate="yes" xml:space="preserve">
          <source>void QTextCharFormat::setFontFixedPitch(bool</source>
          <target state="translated">void QTextCharFormat::setFontFixedPitch(bool</target>
        </trans-unit>
        <trans-unit id="a1268e568bd66e9e2ded23733802e649565cc4ff" translate="yes" xml:space="preserve">
          <source>void QTextCharFormat::setFontHintingPreference(&lt;a href=&quot;qfont#HintingPreference-enum&quot;&gt;QFont::HintingPreference&lt;/a&gt;</source>
          <target state="translated">void QTextCharFormat :: setFontHintingPreference ( &lt;a href=&quot;qfont#HintingPreference-enum&quot;&gt;QFont :: HintingPreference&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f8a1cd59f6884ff235e39db4139c4243b018e45e" translate="yes" xml:space="preserve">
          <source>void QTextCharFormat::setFontItalic(bool</source>
          <target state="translated">void QTextCharFormat::setFontItalic(bool</target>
        </trans-unit>
        <trans-unit id="559ecec88209b2dac18096728bcf873f2a6e518a" translate="yes" xml:space="preserve">
          <source>void QTextCharFormat::setFontKerning(bool</source>
          <target state="translated">void QTextCharFormat::setFontKerning(bool</target>
        </trans-unit>
        <trans-unit id="c8eddf3c71e147a10189afc8ac7aac22ed10941f" translate="yes" xml:space="preserve">
          <source>void QTextCharFormat::setFontLetterSpacing(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">void QTextCharFormat :: setFontLetterSpacing ( &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1a3751693f2c0c06360176dd7deb84875c736a88" translate="yes" xml:space="preserve">
          <source>void QTextCharFormat::setFontLetterSpacing(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bb35ce039711bf80e4996c2aad597b98cf51203" translate="yes" xml:space="preserve">
          <source>void QTextCharFormat::setFontLetterSpacingType(&lt;a href=&quot;qfont#SpacingType-enum&quot;&gt;QFont::SpacingType&lt;/a&gt;</source>
          <target state="translated">void QTextCharFormat :: setFontLetterSpacingType ( &lt;a href=&quot;qfont#SpacingType-enum&quot;&gt;QFont :: SpacingType&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="729524ba76fd7e33e6412ec396e8c5ac4eb71af8" translate="yes" xml:space="preserve">
          <source>void QTextCharFormat::setFontOverline(bool</source>
          <target state="translated">void QTextCharFormat::setFontOverline(bool</target>
        </trans-unit>
        <trans-unit id="a60a02a448043906fde9f953d41901d6b3ce57ee" translate="yes" xml:space="preserve">
          <source>void QTextCharFormat::setFontPointSize(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">void QTextCharFormat :: setFontPointSize ( &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f5cba64aba8d7e18fcfa153774249a0c954fc868" translate="yes" xml:space="preserve">
          <source>void QTextCharFormat::setFontPointSize(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e613ff8ee2e4790010fc6229ad089afd468c3730" translate="yes" xml:space="preserve">
          <source>void QTextCharFormat::setFontStretch(int</source>
          <target state="translated">void QTextCharFormat::setFontStretch(int</target>
        </trans-unit>
        <trans-unit id="6d282e5262bcb538d2e4653cc4a1d257455770c0" translate="yes" xml:space="preserve">
          <source>void QTextCharFormat::setFontStrikeOut(bool</source>
          <target state="translated">void QTextCharFormat::setFontStrikeOut(bool</target>
        </trans-unit>
        <trans-unit id="8b3732e4202dee6b34ee96c1586803ac2f2dd4ae" translate="yes" xml:space="preserve">
          <source>void QTextCharFormat::setFontStyleHint(&lt;a href=&quot;qfont#StyleHint-enum&quot;&gt;QFont::StyleHint&lt;/a&gt;</source>
          <target state="translated">anular QTextCharFormat :: setFontStyleHint ( &lt;a href=&quot;qfont#StyleHint-enum&quot;&gt;QFont :: StyleHint&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c927df423628feff265d0023300a9b8c7574b7f9" translate="yes" xml:space="preserve">
          <source>void QTextCharFormat::setFontStyleName(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QTextCharFormat :: setFontStyleName (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="44021627dd27cd1b88cb21b1bd6724e0995e3270" translate="yes" xml:space="preserve">
          <source>void QTextCharFormat::setFontStyleStrategy(&lt;a href=&quot;qfont#StyleStrategy-enum&quot;&gt;QFont::StyleStrategy&lt;/a&gt;</source>
          <target state="translated">void QTextCharFormat :: setFontStyleStrategy ( &lt;a href=&quot;qfont#StyleStrategy-enum&quot;&gt;QFont :: StyleStrategy&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3f337673da1f263e2e60f2162fda2c8c4daf9225" translate="yes" xml:space="preserve">
          <source>void QTextCharFormat::setFontUnderline(bool</source>
          <target state="translated">void QTextCharFormat::setFontUnderline(bool</target>
        </trans-unit>
        <trans-unit id="0e7d45cabe5bc2d454985d03b7c6b78b33afc456" translate="yes" xml:space="preserve">
          <source>void QTextCharFormat::setFontWeight(int</source>
          <target state="translated">void QTextCharFormat::setFontWeight(int</target>
        </trans-unit>
        <trans-unit id="031ce9edf397d934a08904582913158c6c3cc771" translate="yes" xml:space="preserve">
          <source>void QTextCharFormat::setFontWordSpacing(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">void QTextCharFormat :: setFontWordSpacing ( &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f15fd8c73875d6b45b98068bad189b3da1c68b69" translate="yes" xml:space="preserve">
          <source>void QTextCharFormat::setFontWordSpacing(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b0ffda4f7b7c51e8d0e029eeaf57437489bec18" translate="yes" xml:space="preserve">
          <source>void QTextCharFormat::setTextOutline(const &lt;a href=&quot;qpen&quot;&gt;QPen&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QTextCharFormat :: setTextOutline (const &lt;a href=&quot;qpen&quot;&gt;QPen&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="fd11a25adc821d5919034534fddf8b1554f8b59e" translate="yes" xml:space="preserve">
          <source>void QTextCharFormat::setToolTip(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QTextCharFormat :: setToolTip (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="166a855a8a0dc634f88804964cc1327bc34a8e07" translate="yes" xml:space="preserve">
          <source>void QTextCharFormat::setUnderlineColor(const &lt;a href=&quot;qcolor&quot;&gt;QColor&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QTextCharFormat :: setUnderlineColor (const &lt;a href=&quot;qcolor&quot;&gt;QColor&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="a483eb1efe833f689bbba509f91c34a660bb41bc" translate="yes" xml:space="preserve">
          <source>void QTextCharFormat::setUnderlineStyle(&lt;a href=&quot;qtextcharformat#UnderlineStyle-enum&quot;&gt;QTextCharFormat::UnderlineStyle&lt;/a&gt;</source>
          <target state="translated">void QTextCharFormat :: setUnderlineStyle ( &lt;a href=&quot;qtextcharformat#UnderlineStyle-enum&quot;&gt;QTextCharFormat :: UnderlineStyle&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e64cb47845d58511d4d2c3227726dddf5866f47e" translate="yes" xml:space="preserve">
          <source>void QTextCharFormat::setVerticalAlignment(&lt;a href=&quot;qtextcharformat#VerticalAlignment-enum&quot;&gt;QTextCharFormat::VerticalAlignment&lt;/a&gt;</source>
          <target state="translated">void QTextCharFormat :: setVerticalAlignment ( &lt;a href=&quot;qtextcharformat#VerticalAlignment-enum&quot;&gt;QTextCharFormat :: VerticalAlignment&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="17572f5e3af2ac75dfcfa05b9a426ea19b593c02" translate="yes" xml:space="preserve">
          <source>void QTextCursor::beginEditBlock()</source>
          <target state="translated">anular QTextCursor::beginEditBlock()</target>
        </trans-unit>
        <trans-unit id="12350ac78d48cea4fd2602c4ddf82fbcdb328b36" translate="yes" xml:space="preserve">
          <source>void QTextCursor::clearSelection()</source>
          <target state="translated">void QTextCursor::clearSelection()</target>
        </trans-unit>
        <trans-unit id="f14535373147e98d87073dd7fa5f356865cc0e0f" translate="yes" xml:space="preserve">
          <source>void QTextCursor::deleteChar()</source>
          <target state="translated">anular el QTextCursor::deleteChar()</target>
        </trans-unit>
        <trans-unit id="00c2a88aafbfa92f69193d4c1b239e2c49e32034" translate="yes" xml:space="preserve">
          <source>void QTextCursor::deletePreviousChar()</source>
          <target state="translated">anular QTextCursor::deletePreviousChar()</target>
        </trans-unit>
        <trans-unit id="519a0edb245b54b21b2ab13200c93d0f5b380dab" translate="yes" xml:space="preserve">
          <source>void QTextCursor::endEditBlock()</source>
          <target state="translated">anular QTextCursor::endEditBlock()</target>
        </trans-unit>
        <trans-unit id="0846b0cfed8cac3cfbe5de1e0b6bfb6ffd736da8" translate="yes" xml:space="preserve">
          <source>void QTextCursor::insertBlock()</source>
          <target state="translated">anular QTextCursor::insertBlock()</target>
        </trans-unit>
        <trans-unit id="575097caebc61a1e9abf9fe2f1e7e81e4355f7ad" translate="yes" xml:space="preserve">
          <source>void QTextCursor::insertBlock(const &lt;a href=&quot;qtextblockformat&quot;&gt;QTextBlockFormat&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QTextCursor :: insertBlock (const &lt;a href=&quot;qtextblockformat&quot;&gt;QTextBlockFormat&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="694128629e23416bbacf856c7a3e540244cd9599" translate="yes" xml:space="preserve">
          <source>void QTextCursor::insertFragment(const &lt;a href=&quot;qtextdocumentfragment&quot;&gt;QTextDocumentFragment&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QTextCursor :: insertFragment (const &lt;a href=&quot;qtextdocumentfragment&quot;&gt;QTextDocumentFragment&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="a7d6a5a7975c2cccaebec019fb68d4d0b75b1b23" translate="yes" xml:space="preserve">
          <source>void QTextCursor::insertHtml(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QTextCursor :: insertHtml (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="32437a43d0ea44a3c2f70b81f39e766c9f1079f0" translate="yes" xml:space="preserve">
          <source>void QTextCursor::insertImage(const &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QTextCursor :: insertImage (const &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="3f070680fc8425b7f8bea8dbfef8076534feed59" translate="yes" xml:space="preserve">
          <source>void QTextCursor::insertImage(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QTextCursor :: insertImage (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="e063d356d4e89961bcdf0d033f5a5cc8487a5ebc" translate="yes" xml:space="preserve">
          <source>void QTextCursor::insertImage(const &lt;a href=&quot;qtextimageformat&quot;&gt;QTextImageFormat&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QTextCursor :: insertImage (const &lt;a href=&quot;qtextimageformat&quot;&gt;QTextImageFormat&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="ac4b07cb5e93e0d1c9eab68f9c3192f92bf3b9f3" translate="yes" xml:space="preserve">
          <source>void QTextCursor::insertText(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QTextCursor :: insertText (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="84b303207be11801f211990195f876be7411b3c9" translate="yes" xml:space="preserve">
          <source>void QTextCursor::joinPreviousEditBlock()</source>
          <target state="translated">anular QTextCursor::joinPreviousEditBlock()</target>
        </trans-unit>
        <trans-unit id="96e383d5301a5440e13640959bf4af097133ece7" translate="yes" xml:space="preserve">
          <source>void QTextCursor::mergeBlockCharFormat(const &lt;a href=&quot;qtextcharformat&quot;&gt;QTextCharFormat&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QTextCursor :: mergeBlockCharFormat (const &lt;a href=&quot;qtextcharformat&quot;&gt;QTextCharFormat&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="50c4ee4759691c4903dd4b32f8491efb16df392d" translate="yes" xml:space="preserve">
          <source>void QTextCursor::mergeBlockFormat(const &lt;a href=&quot;qtextblockformat&quot;&gt;QTextBlockFormat&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QTextCursor :: mergeBlockFormat (const &lt;a href=&quot;qtextblockformat&quot;&gt;QTextBlockFormat&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="33479d2b2b753e8fa71eb02376a2e997b4daaf9f" translate="yes" xml:space="preserve">
          <source>void QTextCursor::mergeCharFormat(const &lt;a href=&quot;qtextcharformat&quot;&gt;QTextCharFormat&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QTextCursor :: mergeCharFormat (const &lt;a href=&quot;qtextcharformat&quot;&gt;QTextCharFormat&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="04ea61acb2623c8c2b5c121a219aa6aafac32dbe" translate="yes" xml:space="preserve">
          <source>void QTextCursor::removeSelectedText()</source>
          <target state="translated">anular el QTextCursor::removeSelectedText()</target>
        </trans-unit>
        <trans-unit id="dda8f94774ef01156b9c498b0c072a973f660fcd" translate="yes" xml:space="preserve">
          <source>void QTextCursor::select(&lt;a href=&quot;qtextcursor#SelectionType-enum&quot;&gt;QTextCursor::SelectionType&lt;/a&gt;</source>
          <target state="translated">void QTextCursor :: select ( &lt;a href=&quot;qtextcursor#SelectionType-enum&quot;&gt;QTextCursor :: SelectionType&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="de3be4915a6c9ed9f5516d53594d7afd53daa097" translate="yes" xml:space="preserve">
          <source>void QTextCursor::selectedTableCells(int *</source>
          <target state="translated">anular el QTextCursor::selectedTableCells(int *</target>
        </trans-unit>
        <trans-unit id="f57d6f0c3132abd4ed2566c87319e79a374c6284" translate="yes" xml:space="preserve">
          <source>void QTextCursor::setBlockCharFormat(const &lt;a href=&quot;qtextcharformat&quot;&gt;QTextCharFormat&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QTextCursor :: setBlockCharFormat (const &lt;a href=&quot;qtextcharformat&quot;&gt;QTextCharFormat&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="b90892fb3cf7935ee5d10668efa44870dd5fd1be" translate="yes" xml:space="preserve">
          <source>void QTextCursor::setBlockFormat(const &lt;a href=&quot;qtextblockformat&quot;&gt;QTextBlockFormat&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QTextCursor :: setBlockFormat (const &lt;a href=&quot;qtextblockformat&quot;&gt;QTextBlockFormat&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="c08483bde53bc2d235adeadab27965cf46b9216f" translate="yes" xml:space="preserve">
          <source>void QTextCursor::setCharFormat(const &lt;a href=&quot;qtextcharformat&quot;&gt;QTextCharFormat&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QTextCursor :: setCharFormat (const &lt;a href=&quot;qtextcharformat&quot;&gt;QTextCharFormat&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="e7e71e4e09f5afa03aadd70ec84b7245fd79650e" translate="yes" xml:space="preserve">
          <source>void QTextCursor::setKeepPositionOnInsert(bool</source>
          <target state="translated">void QTextCursor::setKeepPositionOnInsert(bool</target>
        </trans-unit>
        <trans-unit id="bc06f8f27760d2b9d0d8ed68b5d4212a37afba2f" translate="yes" xml:space="preserve">
          <source>void QTextCursor::setPosition(int</source>
          <target state="translated">void QTextCursor::setPosition(int</target>
        </trans-unit>
        <trans-unit id="d8979664aa284ee7034c65757937bf55748a8cb2" translate="yes" xml:space="preserve">
          <source>void QTextCursor::setVerticalMovementX(int</source>
          <target state="translated">void QTextCursor::setVerticalMovementX(int</target>
        </trans-unit>
        <trans-unit id="daf0d4ef32299adb2aeb85a8305c4666aee8f7b2" translate="yes" xml:space="preserve">
          <source>void QTextCursor::setVisualNavigation(bool</source>
          <target state="translated">void QTextCursor::setVisualNavigation(bool</target>
        </trans-unit>
        <trans-unit id="fdbafb9b325a07c8bedc43c0e8864908416f7907" translate="yes" xml:space="preserve">
          <source>void QTextCursor::swap(&lt;a href=&quot;qtextcursor#QTextCursor&quot;&gt;QTextCursor&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QTextCursor :: swap ( &lt;a href=&quot;qtextcursor#QTextCursor&quot;&gt;QTextCursor&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="eeb07bb85053f1df51f816e22e55672093674dbc" translate="yes" xml:space="preserve">
          <source>void QTextDecoder::toUnicode(&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; *</source>
          <target state="translated">anular QTextDecoder :: toUnicode ( &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="5a5156f260b76628ffa97391e0a8cb04803ee35f" translate="yes" xml:space="preserve">
          <source>void QTextDocument::addResource(int</source>
          <target state="translated">anular QTextDocumento::addResource(int</target>
        </trans-unit>
        <trans-unit id="b0dcee19063501457d41022777daa5467edf01c1" translate="yes" xml:space="preserve">
          <source>void QTextDocument::adjustSize()</source>
          <target state="translated">anular QTextDocumento::adjustSize()</target>
        </trans-unit>
        <trans-unit id="bdc11b922eba86ea9a4c887fb37ecd4a9b3114ea" translate="yes" xml:space="preserve">
          <source>void QTextDocument::clearUndoRedoStacks(&lt;a href=&quot;qtextdocument#Stacks-enum&quot;&gt;QTextDocument::Stacks&lt;/a&gt;</source>
          <target state="translated">void QTextDocument :: clearUndoRedoStacks ( &lt;a href=&quot;qtextdocument#Stacks-enum&quot;&gt;QTextDocument :: Stacks&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="393fb8ee97272d8dfcb57946ed692e0e76b0508a" translate="yes" xml:space="preserve">
          <source>void QTextDocument::drawContents(&lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; *</source>
          <target state="translated">vac&amp;iacute;o QTextDocument :: drawContents ( &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="0dae230b8199381be03a4220979e4588df1c41d0" translate="yes" xml:space="preserve">
          <source>void QTextDocument::markContentsDirty(int</source>
          <target state="translated">anular QTextDocumento::markContentsDirty(int</target>
        </trans-unit>
        <trans-unit id="87418c13cb2a79e8364850a0889c9035170d2ae9" translate="yes" xml:space="preserve">
          <source>void QTextDocument::print(&lt;a href=&quot;qpagedpaintdevice&quot;&gt;QPagedPaintDevice&lt;/a&gt; *</source>
          <target state="translated">vac&amp;iacute;o QTextDocument :: print ( &lt;a href=&quot;qpagedpaintdevice&quot;&gt;QPagedPaintDevice&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="a84dbe2a47514e9aa1a9e97dee393b6e602b73fe" translate="yes" xml:space="preserve">
          <source>void QTextDocument::redo(&lt;a href=&quot;qtextcursor&quot;&gt;QTextCursor&lt;/a&gt; *</source>
          <target state="translated">anular QTextDocument :: rehacer ( &lt;a href=&quot;qtextcursor&quot;&gt;QTextCursor&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="a96847013a0667746e699b627f7c64b407065a86" translate="yes" xml:space="preserve">
          <source>void QTextDocument::setDefaultCursorMoveStyle(&lt;a href=&quot;qt#CursorMoveStyle-enum&quot;&gt;Qt::CursorMoveStyle&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QTextDocument :: setDefaultCursorMoveStyle ( &lt;a href=&quot;qt#CursorMoveStyle-enum&quot;&gt;Qt :: CursorMoveStyle&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bdaf5842cd26d56a9f432f39901c6d3b2a7bf758" translate="yes" xml:space="preserve">
          <source>void QTextDocument::setDefaultFont(const &lt;a href=&quot;qfont&quot;&gt;QFont&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QTextDocument :: setDefaultFont (const &lt;a href=&quot;qfont&quot;&gt;QFont&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="42719a81beb502abc0867d893f985860e686f3b4" translate="yes" xml:space="preserve">
          <source>void QTextDocument::setDefaultTextOption(const &lt;a href=&quot;qtextoption&quot;&gt;QTextOption&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QTextDocument :: setDefaultTextOption (const &lt;a href=&quot;qtextoption&quot;&gt;QTextOption&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="58ecc18c0636fad32e54249072930f9ad32db993" translate="yes" xml:space="preserve">
          <source>void QTextDocument::setDocumentLayout(&lt;a href=&quot;qabstracttextdocumentlayout&quot;&gt;QAbstractTextDocumentLayout&lt;/a&gt; *</source>
          <target state="translated">void QTextDocument :: setDocumentLayout ( &lt;a href=&quot;qabstracttextdocumentlayout&quot;&gt;QAbstractTextDocumentLayout&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="c0ffefe2e71ffa8ed27e56a66c4a7522efcee98c" translate="yes" xml:space="preserve">
          <source>void QTextDocument::setHtml(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QTextDocument :: setHtml (const &lt;a href=&quot;qstring&quot;&gt; QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="5ca3dd2e683f74a19d8b120e1e28f5f91291e4c2" translate="yes" xml:space="preserve">
          <source>void QTextDocument::setIndentWidth(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">anular QTextDocument :: setIndentWidth ( &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9e96cfda1752d1e8ed74f8bcd90b7e2d2698b0b1" translate="yes" xml:space="preserve">
          <source>void QTextDocument::setIndentWidth(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8921b4c6dc526497c13b8ef4435dad732d82902d" translate="yes" xml:space="preserve">
          <source>void QTextDocument::setMarkdown(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c030c159e9edd13d940d0bf000cb08db8771e123" translate="yes" xml:space="preserve">
          <source>void QTextDocument::setMetaInformation(&lt;a href=&quot;qtextdocument#MetaInformation-enum&quot;&gt;QTextDocument::MetaInformation&lt;/a&gt;</source>
          <target state="translated">void QTextDocument :: setMetaInformation ( &lt;a href=&quot;qtextdocument#MetaInformation-enum&quot;&gt;QTextDocument :: MetaInformation&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4a3e7e4f0e421a1cb1256c7b4c38987bb407a690" translate="yes" xml:space="preserve">
          <source>void QTextDocument::setPlainText(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QTextDocument :: setPlainText (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="560ffc3672e027bd0af9eedc68fc65de16b53f3b" translate="yes" xml:space="preserve">
          <source>void QTextDocument::undo(&lt;a href=&quot;qtextcursor&quot;&gt;QTextCursor&lt;/a&gt; *</source>
          <target state="translated">anular QTextDocument :: deshacer ( &lt;a href=&quot;qtextcursor&quot;&gt;QTextCursor&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="f3f79fba8b4de3135806b31149c03201f59e5ea2" translate="yes" xml:space="preserve">
          <source>void QTextDocumentWriter::setCodec(&lt;a href=&quot;qtextcodec&quot;&gt;QTextCodec&lt;/a&gt; *</source>
          <target state="translated">anular QTextDocumentWriter :: setCodec ( &lt;a href=&quot;qtextcodec&quot;&gt;QTextCodec&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="d141d7698184ae320d44d7c485240634cef57e7a" translate="yes" xml:space="preserve">
          <source>void QTextDocumentWriter::setDevice(&lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt; *</source>
          <target state="translated">void QTextDocumentWriter :: setDevice ( &lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="5320f44fdb7b798fd8e6f27cd3e68edb6ef2102d" translate="yes" xml:space="preserve">
          <source>void QTextDocumentWriter::setFileName(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">anular QTextDocumentWriter :: setFileName (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="f5e36da3a6fe5b47c1f47057ea01f6f4f2957ba8" translate="yes" xml:space="preserve">
          <source>void QTextDocumentWriter::setFormat(const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QTextDocumentWriter :: setFormat (const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="404e2b026e16d330531c270f8a323c5d1bee35e3" translate="yes" xml:space="preserve">
          <source>void QTextEdit::ensureCursorVisible()</source>
          <target state="translated">void QTextEdit::ensureCursorVisible()</target>
        </trans-unit>
        <trans-unit id="364d29a8e86f85215c30680675364e2d1e219ca4" translate="yes" xml:space="preserve">
          <source>void QTextEdit::mergeCurrentCharFormat(const &lt;a href=&quot;qtextcharformat&quot;&gt;QTextCharFormat&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QTextEdit :: mergeCurrentCharFormat (const &lt;a href=&quot;qtextcharformat&quot;&gt;QTextCharFormat&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="7012698c1e3e58d0c65dce7c210946f5b1f848e6" translate="yes" xml:space="preserve">
          <source>void QTextEdit::moveCursor(&lt;a href=&quot;qtextcursor#MoveOperation-enum&quot;&gt;QTextCursor::MoveOperation&lt;/a&gt;</source>
          <target state="translated">void QTextEdit :: moveCursor ( &lt;a href=&quot;qtextcursor#MoveOperation-enum&quot;&gt;QTextCursor :: MoveOperation&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e02b62b424ce4ab3447a028046315530e4ee7bf4" translate="yes" xml:space="preserve">
          <source>void QTextEdit::print(&lt;a href=&quot;qpagedpaintdevice&quot;&gt;QPagedPaintDevice&lt;/a&gt; *</source>
          <target state="translated">vac&amp;iacute;o QTextEdit :: print ( &lt;a href=&quot;qpagedpaintdevice&quot;&gt;QPagedPaintDevice&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="2273cebb45fe73958c413c49114acebb37b35b60" translate="yes" xml:space="preserve">
          <source>void QTextEdit::setCurrentCharFormat(const &lt;a href=&quot;qtextcharformat&quot;&gt;QTextCharFormat&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QTextEdit :: setCurrentCharFormat (const &lt;a href=&quot;qtextcharformat&quot;&gt;QTextCharFormat&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="f9eefe88f09cd971c8d4d6140ccc32a3224927c8" translate="yes" xml:space="preserve">
          <source>void QTextEdit::setExtraSelections(const &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;&lt;a href=&quot;qtextedit-extraselection&quot;&gt;QTextEdit::ExtraSelection&lt;/a&gt;&amp;gt; &amp;amp;</source>
          <target state="translated">anular QTextEdit :: setExtraSelections (const &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; &amp;lt; &lt;a href=&quot;qtextedit-extraselection&quot;&gt;QTextEdit :: ExtraSelection&lt;/a&gt; &amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="1db3d3f4601dd7dd4afa75f65b51621d34510fd4" translate="yes" xml:space="preserve">
          <source>void QTextEdit::setTextCursor(const &lt;a href=&quot;qtextcursor&quot;&gt;QTextCursor&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QTextEdit :: setTextCursor (const &lt;a href=&quot;qtextcursor&quot;&gt;QTextCursor&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="ead6d182824506eedc3ed1a8f08bedc0efb9fbc4" translate="yes" xml:space="preserve">
          <source>void QTextFormat::clearBackground()</source>
          <target state="translated">void QTextFormat::clearBackground()</target>
        </trans-unit>
        <trans-unit id="ead62dd42b7443ca919ecaed58c7152fc00eab23" translate="yes" xml:space="preserve">
          <source>void QTextFormat::clearForeground()</source>
          <target state="translated">anular QTextFormat::clearForeground()</target>
        </trans-unit>
        <trans-unit id="1e5054f736f4587b5fe4c7e2f1690e27fcc0f1ed" translate="yes" xml:space="preserve">
          <source>void QTextFormat::clearProperty(int</source>
          <target state="translated">void QTextFormat::clearProperty(int</target>
        </trans-unit>
        <trans-unit id="6288b0af25c1eb6c0f3e635bc0ca36576d615409" translate="yes" xml:space="preserve">
          <source>void QTextFormat::merge(const &lt;a href=&quot;qtextformat#QTextFormat&quot;&gt;QTextFormat&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QTextFormat :: merge (const &lt;a href=&quot;qtextformat#QTextFormat&quot;&gt;QTextFormat&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="24e18670265454b71925cab1577e737e5db25de3" translate="yes" xml:space="preserve">
          <source>void QTextFormat::setBackground(const &lt;a href=&quot;qbrush&quot;&gt;QBrush&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QTextFormat :: setBackground (const &lt;a href=&quot;qbrush&quot;&gt;QBrush&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="2275fcba656edc135952d5747b95059e275718d5" translate="yes" xml:space="preserve">
          <source>void QTextFormat::setForeground(const &lt;a href=&quot;qbrush&quot;&gt;QBrush&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QTextFormat :: setForeground (const &lt;a href=&quot;qbrush&quot;&gt;QBrush&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="2847863260afc050af30cfbd6da526a4d9c21153" translate="yes" xml:space="preserve">
          <source>void QTextFormat::setLayoutDirection(&lt;a href=&quot;qt#LayoutDirection-enum&quot;&gt;Qt::LayoutDirection&lt;/a&gt;</source>
          <target state="translated">void QTextFormat :: setLayoutDirection ( &lt;a href=&quot;qt#LayoutDirection-enum&quot;&gt;Qt :: LayoutDirection&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f5cf4ae9eb0ec34611999475d3b9e2eaecd68813" translate="yes" xml:space="preserve">
          <source>void QTextFormat::setObjectIndex(int</source>
          <target state="translated">void QTextFormat::setObjectIndex(int</target>
        </trans-unit>
        <trans-unit id="56004194efdf2f2848a447b4fa60301116acab66" translate="yes" xml:space="preserve">
          <source>void QTextFormat::setObjectType(int</source>
          <target state="translated">void QTextFormat::setObjectType(int</target>
        </trans-unit>
        <trans-unit id="dcf79e1906f1a6f98c96051b4d225c552d66a8ad" translate="yes" xml:space="preserve">
          <source>void QTextFormat::setProperty(int</source>
          <target state="translated">void QTextFormat::setProperty(int</target>
        </trans-unit>
        <trans-unit id="4d091105cedcecce2e575d74b877a2f716ef7aa8" translate="yes" xml:space="preserve">
          <source>void QTextFormat::swap(&lt;a href=&quot;qtextformat#QTextFormat&quot;&gt;QTextFormat&lt;/a&gt; &amp;amp;</source>
          <target state="translated">anular QTextFormat :: swap ( &lt;a href=&quot;qtextformat#QTextFormat&quot;&gt;QTextFormat&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="fcc91338f2a2335abf78f3cffc3b7037dee1c188" translate="yes" xml:space="preserve">
          <source>void QTextFrame::setFrameFormat(const &lt;a href=&quot;qtextframeformat&quot;&gt;QTextFrameFormat&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QTextFrame :: setFrameFormat (const &lt;a href=&quot;qtextframeformat&quot;&gt;QTextFrameFormat&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="3776e19743da5cdc01d9b05521f384ec380da5fa" translate="yes" xml:space="preserve">
          <source>void QTextFrameFormat::setBorder(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QTextFrameFormat :: setBorder ( &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="236e126bded9e99a0009a5e98023aed493c442de" translate="yes" xml:space="preserve">
          <source>void QTextFrameFormat::setBorder(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c09c207bcec5d5baad0378f6b86820e8156e51e" translate="yes" xml:space="preserve">
          <source>void QTextFrameFormat::setBorderBrush(const &lt;a href=&quot;qbrush&quot;&gt;QBrush&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QTextFrameFormat :: setBorderBrush (const &lt;a href=&quot;qbrush&quot;&gt;QBrush&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="0e60515c3c2a809e794f28de87025d404fb3ef05" translate="yes" xml:space="preserve">
          <source>void QTextFrameFormat::setBorderStyle(&lt;a href=&quot;qtextframeformat#BorderStyle-enum&quot;&gt;QTextFrameFormat::BorderStyle&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QTextFrameFormat :: setBorderStyle ( &lt;a href=&quot;qtextframeformat#BorderStyle-enum&quot;&gt;QTextFrameFormat :: BorderStyle&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="36518afd1642628e1b61c0029b3df08711f7adea" translate="yes" xml:space="preserve">
          <source>void QTextFrameFormat::setBottomMargin(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QTextFrameFormat :: setBottomMargin ( &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2f44955e8dcded9d68a69edf3010d54f69d6f9c5" translate="yes" xml:space="preserve">
          <source>void QTextFrameFormat::setBottomMargin(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f694d077c983a6f278fa93dfe206a9efe0adac9" translate="yes" xml:space="preserve">
          <source>void QTextFrameFormat::setHeight(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QTextFrameFormat :: setHeight ( &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="af474882309b4f6ae98495a5bd0b6e30e4d989f0" translate="yes" xml:space="preserve">
          <source>void QTextFrameFormat::setHeight(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ff402fdd22a5319052b8e658fb2b90d43532fe2" translate="yes" xml:space="preserve">
          <source>void QTextFrameFormat::setHeight(const &lt;a href=&quot;qtextlength&quot;&gt;QTextLength&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QTextFrameFormat :: setHeight (const &lt;a href=&quot;qtextlength&quot;&gt;QTextLength&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="6cb2497f546ddd8279c092d0649f81d017307dbc" translate="yes" xml:space="preserve">
          <source>void QTextFrameFormat::setLeftMargin(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QTextFrameFormat :: setLeftMargin ( &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7473ebe5c5c766da5431b11bc94baa213d148b57" translate="yes" xml:space="preserve">
          <source>void QTextFrameFormat::setLeftMargin(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40aa6683e7cefcbe60d9e8dbf708d555141810df" translate="yes" xml:space="preserve">
          <source>void QTextFrameFormat::setMargin(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">anular QTextFrameFormat :: setMargin ( &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4b1da69fe3022466e578e9aaedcf3f4f428b639f" translate="yes" xml:space="preserve">
          <source>void QTextFrameFormat::setMargin(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a062daafcec90f44b48c8918cef2361b1835c52" translate="yes" xml:space="preserve">
          <source>void QTextFrameFormat::setPadding(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QTextFrameFormat :: setPadding ( &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a6c8299d2d416e45454ea5345c8fbf8a70dc8b80" translate="yes" xml:space="preserve">
          <source>void QTextFrameFormat::setPadding(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71db23c320e3e9979c29af6b24f7e1b46838e2bc" translate="yes" xml:space="preserve">
          <source>void QTextFrameFormat::setPageBreakPolicy(&lt;a href=&quot;qtextformat#PageBreakFlag-enum&quot;&gt;QTextFormat::PageBreakFlags&lt;/a&gt;</source>
          <target state="translated">void QTextFrameFormat :: setPageBreakPolicy ( &lt;a href=&quot;qtextformat#PageBreakFlag-enum&quot;&gt;QTextFormat :: PageBreakFlags&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="79c0ce89e31e0f9a01f7d9035dd50b7f7b756b83" translate="yes" xml:space="preserve">
          <source>void QTextFrameFormat::setPosition(&lt;a href=&quot;qtextframeformat#Position-enum&quot;&gt;QTextFrameFormat::Position&lt;/a&gt;</source>
          <target state="translated">void QTextFrameFormat :: setPosition ( &lt;a href=&quot;qtextframeformat#Position-enum&quot;&gt;QTextFrameFormat :: Posici&amp;oacute;n&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3707f74b00ad34106dbac21c51185bf290ffd736" translate="yes" xml:space="preserve">
          <source>void QTextFrameFormat::setRightMargin(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">anular QTextFrameFormat :: setRightMargin ( &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="98193d4cb3e742bae10e5f557e4d4720c6bb4459" translate="yes" xml:space="preserve">
          <source>void QTextFrameFormat::setRightMargin(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a71f9f52e0c7b0cfcd825300f130e3958a1903e" translate="yes" xml:space="preserve">
          <source>void QTextFrameFormat::setTopMargin(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">anular QTextFrameFormat :: setTopMargin ( &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8d69dd38f555418c7df41c4826abfe38b77c3f11" translate="yes" xml:space="preserve">
          <source>void QTextFrameFormat::setTopMargin(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c658c0ae497e3be8918555f45249dc9dd2c8d2b7" translate="yes" xml:space="preserve">
          <source>void QTextFrameFormat::setWidth(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">anular QTextFrameFormat :: setWidth ( &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="064189bf231b5724d3956c49b0018ccb2e666e90" translate="yes" xml:space="preserve">
          <source>void QTextFrameFormat::setWidth(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="892496396b21fe4e2bfd319ecd28f3b863b0a6aa" translate="yes" xml:space="preserve">
          <source>void QTextFrameFormat::setWidth(const &lt;a href=&quot;qtextlength&quot;&gt;QTextLength&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QTextFrameFormat :: setWidth (const &lt;a href=&quot;qtextlength&quot;&gt;QTextLength&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="d401c0700b5321fcf3b259fdd3aa030ceec779cc" translate="yes" xml:space="preserve">
          <source>void QTextImageFormat::setHeight(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QTextImageFormat :: setHeight ( &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a643ac7eda22caff85c8064c9020e64ed9216510" translate="yes" xml:space="preserve">
          <source>void QTextImageFormat::setHeight(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d838fed88aa725f3b189fd87dd1f70742a0b660" translate="yes" xml:space="preserve">
          <source>void QTextImageFormat::setName(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QTextImageFormat :: setName (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="01f0082f6855dc4399ab18e7a5f7c8f4085f6535" translate="yes" xml:space="preserve">
          <source>void QTextImageFormat::setQuality(int</source>
          <target state="translated">void QTextImageFormat::setQuality(int</target>
        </trans-unit>
        <trans-unit id="43d0c5841d91b9ab9c184410df3520d906e805dc" translate="yes" xml:space="preserve">
          <source>void QTextImageFormat::setWidth(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">nulo QTextImageFormat :: setWidth ( &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="16233b8fcb64ddaf3a5b3c52d69b043f5185178c" translate="yes" xml:space="preserve">
          <source>void QTextImageFormat::setWidth(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d29e2618efa33a95ea89a5d8b03f323760f02eac" translate="yes" xml:space="preserve">
          <source>void QTextInlineObject::setAscent(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QTextInlineObject :: setAscent ( &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8515cd1a09764ab65057a3a2ed8ec3b80486f3ff" translate="yes" xml:space="preserve">
          <source>void QTextInlineObject::setAscent(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16f30457639b6aedc63046e61942401317464fb0" translate="yes" xml:space="preserve">
          <source>void QTextInlineObject::setDescent(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QTextInlineObject :: setDescent ( &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6940a7fb4f53e9c69e7c2cb545e80b361ae187fe" translate="yes" xml:space="preserve">
          <source>void QTextInlineObject::setDescent(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcfdee3917c8898bfbd6442fc4e840c65d0e5157" translate="yes" xml:space="preserve">
          <source>void QTextInlineObject::setWidth(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QTextInlineObject :: setWidth ( &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7bae901799f81ccf02f9e0ca1b831f3583f1fb30" translate="yes" xml:space="preserve">
          <source>void QTextInlineObject::setWidth(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96602656e9dce48b89ce3aac29fa3705cf17b9c3" translate="yes" xml:space="preserve">
          <source>void QTextLayout::beginLayout()</source>
          <target state="translated">anular QTextLayout::beginLayout()</target>
        </trans-unit>
        <trans-unit id="ae19a434bbf79608b107904f79d8b74b93a31a07" translate="yes" xml:space="preserve">
          <source>void QTextLayout::clearFormats()</source>
          <target state="translated">void QTextLayout::clearFormats()</target>
        </trans-unit>
        <trans-unit id="967a01c2e5230bb4226662774c83bbd21a25354f" translate="yes" xml:space="preserve">
          <source>void QTextLayout::clearLayout()</source>
          <target state="translated">void QTextLayout::clearLayout()</target>
        </trans-unit>
        <trans-unit id="8b4f1214a911ef2db265d602c7af074851c6d7bb" translate="yes" xml:space="preserve">
          <source>void QTextLayout::draw(&lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; *</source>
          <target state="translated">vac&amp;iacute;o QTextLayout :: dibujar ( &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="eb1d2f47aadd22531b75eb5d0b49fe1f29012958" translate="yes" xml:space="preserve">
          <source>void QTextLayout::drawCursor(&lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; *</source>
          <target state="translated">vac&amp;iacute;o QTextLayout :: drawCursor ( &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="8015b0253c2f1369699db4ff7f7ba39d0731197d" translate="yes" xml:space="preserve">
          <source>void QTextLayout::endLayout()</source>
          <target state="translated">anular QTextLayout::endLayout()</target>
        </trans-unit>
        <trans-unit id="dad48740a024971b5f4d12d4586f1dbfd7fee04c" translate="yes" xml:space="preserve">
          <source>void QTextLayout::setCacheEnabled(bool</source>
          <target state="translated">void QTextLayout::setCacheEnabled(bool</target>
        </trans-unit>
        <trans-unit id="1cf48d769e4fd3511ccee44b05dd5b9c92966632" translate="yes" xml:space="preserve">
          <source>void QTextLayout::setCursorMoveStyle(&lt;a href=&quot;qt#CursorMoveStyle-enum&quot;&gt;Qt::CursorMoveStyle&lt;/a&gt;</source>
          <target state="translated">void QTextLayout :: setCursorMoveStyle ( &lt;a href=&quot;qt#CursorMoveStyle-enum&quot;&gt;Qt :: CursorMoveStyle&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cfb9ded2a053ae8e96aedcc899127314b7642bde" translate="yes" xml:space="preserve">
          <source>void QTextLayout::setFont(const &lt;a href=&quot;qfont&quot;&gt;QFont&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QTextLayout :: setFont (const &lt;a href=&quot;qfont&quot;&gt;QFont&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="08bcf9cae74d918563c8ef3b829278c575cd06d3" translate="yes" xml:space="preserve">
          <source>void QTextLayout::setFormats(const &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;&lt;a href=&quot;qtextlayout-formatrange&quot;&gt;QTextLayout::FormatRange&lt;/a&gt;&amp;gt; &amp;amp;</source>
          <target state="translated">void QTextLayout :: setFormats (const &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt; &amp;lt; &lt;a href=&quot;qtextlayout-formatrange&quot;&gt;QTextLayout :: FormatRange&lt;/a&gt; &amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="c91d778082238201bfee49081755bc6f60054cec" translate="yes" xml:space="preserve">
          <source>void QTextLayout::setPosition(const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QTextLayout :: setPosition (const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="ab22c966186bb44c95eb601cfb8ffa403b9845e8" translate="yes" xml:space="preserve">
          <source>void QTextLayout::setPreeditArea(int</source>
          <target state="translated">anular QTextLayout::setPreeditArea(int</target>
        </trans-unit>
        <trans-unit id="7fdbe7f8186b3cc3bb99df3ffe2485e95c3a4ab4" translate="yes" xml:space="preserve">
          <source>void QTextLayout::setText(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QTextLayout :: setText (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="4056e904277191a4d746c41087ac0302001704f8" translate="yes" xml:space="preserve">
          <source>void QTextLayout::setTextOption(const &lt;a href=&quot;qtextoption&quot;&gt;QTextOption&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QTextLayout :: setTextOption (const &lt;a href=&quot;qtextoption&quot;&gt;QTextOption&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="dcd49f25ad73f1f154564135617d9763d33a10c3" translate="yes" xml:space="preserve">
          <source>void QTextLine::draw(&lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; *</source>
          <target state="translated">void QTextLine :: dibujar ( &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="63ca344d37153eba4b9352e8934a7ed31f5bfdba" translate="yes" xml:space="preserve">
          <source>void QTextLine::setLeadingIncluded(bool</source>
          <target state="translated">void QTextLine::setLeadingIncluded(bool</target>
        </trans-unit>
        <trans-unit id="eb6c90b83682bec24bf562841ebdee9cf975e2ca" translate="yes" xml:space="preserve">
          <source>void QTextLine::setLineWidth(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">anular QTextLine :: setLineWidth ( &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="12eadc9d8dc72a35eebd9e94cb94583366a75adf" translate="yes" xml:space="preserve">
          <source>void QTextLine::setLineWidth(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="443d20faf3e7e3e46f5d1c7271a8ee6937ff85fa" translate="yes" xml:space="preserve">
          <source>void QTextLine::setNumColumns(int</source>
          <target state="translated">void QTextLine::setNumColumns(int</target>
        </trans-unit>
        <trans-unit id="c1a7fa12d5ff12704e38963da5b3bed361c44b83" translate="yes" xml:space="preserve">
          <source>void QTextLine::setPosition(const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QTextLine :: setPosition (const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="be4e9c9090df5485b8af2c7d1664e2655ef24058" translate="yes" xml:space="preserve">
          <source>void QTextList::add(const &lt;a href=&quot;qtextblock&quot;&gt;QTextBlock&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QTextList :: add (const &lt;a href=&quot;qtextblock&quot;&gt;QTextBlock&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="5b29e1637d294feea8609820605a001525e47bd6" translate="yes" xml:space="preserve">
          <source>void QTextList::remove(const &lt;a href=&quot;qtextblock&quot;&gt;QTextBlock&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QTextList :: remove (const &lt;a href=&quot;qtextblock&quot;&gt;QTextBlock&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="258acce6d7cd7cf71741126befa692fcde103313" translate="yes" xml:space="preserve">
          <source>void QTextList::removeItem(int</source>
          <target state="translated">anular QTextList::removeItem(int</target>
        </trans-unit>
        <trans-unit id="697175a9c98dfa0b2fc56c4be25ebbef1fe19e0b" translate="yes" xml:space="preserve">
          <source>void QTextList::setFormat(const &lt;a href=&quot;qtextlistformat&quot;&gt;QTextListFormat&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QTextList :: setFormat (const &lt;a href=&quot;qtextlistformat&quot;&gt;QTextListFormat&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="20a5b33a8f5e4c0a7288d413da17e41eac22c074" translate="yes" xml:space="preserve">
          <source>void QTextListFormat::setIndent(int</source>
          <target state="translated">void QTextListFormat::setIndent(int</target>
        </trans-unit>
        <trans-unit id="24d69236eb6440000c60c40b6e0110332a3fca41" translate="yes" xml:space="preserve">
          <source>void QTextListFormat::setNumberPrefix(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QTextListFormat :: setNumberPrefix (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="17e3a59d220082403c68011adcdb3eb5e2e16fa8" translate="yes" xml:space="preserve">
          <source>void QTextListFormat::setNumberSuffix(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QTextListFormat :: setNumberSuffix (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="dfb3d6784b9a76b91ae3c05c8eb33309ddb05451" translate="yes" xml:space="preserve">
          <source>void QTextListFormat::setStyle(&lt;a href=&quot;qtextlistformat#Style-enum&quot;&gt;QTextListFormat::Style&lt;/a&gt;</source>
          <target state="translated">void QTextListFormat :: setStyle ( &lt;a href=&quot;qtextlistformat#Style-enum&quot;&gt;QTextListFormat :: Estilo&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c89ff371702e3f8ad9c161789b4b585306417b3b" translate="yes" xml:space="preserve">
          <source>void QTextOption::setAlignment(&lt;a href=&quot;qt#AlignmentFlag-enum&quot;&gt;Qt::Alignment&lt;/a&gt;</source>
          <target state="translated">void QTextOption :: setAlignment ( &lt;a href=&quot;qt#AlignmentFlag-enum&quot;&gt;Qt :: Alignment&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3465c8fc68b07b43eceecf69c86210b1b4a6ad65" translate="yes" xml:space="preserve">
          <source>void QTextOption::setFlags(&lt;a href=&quot;qtextoption#Flag-enum&quot;&gt;QTextOption::Flags&lt;/a&gt;</source>
          <target state="translated">void QTextOption :: setFlags ( &lt;a href=&quot;qtextoption#Flag-enum&quot;&gt;QTextOption :: Flags&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a5040f8ccb853ce0c4b0f7d9c3f1746053009add" translate="yes" xml:space="preserve">
          <source>void QTextOption::setTabArray(const QList&amp;lt;&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;&amp;gt; &amp;amp;</source>
          <target state="translated">void QTextOption :: setTabArray (const QList &amp;lt; &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt; &amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="4f8018def55940381bacf1117863c4bd4d59f83f" translate="yes" xml:space="preserve">
          <source>void QTextOption::setTabArray(const QList&amp;lt;&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;&amp;gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="137a5b9b94430570d2fa65e10ecd0d133386e8db" translate="yes" xml:space="preserve">
          <source>void QTextOption::setTabStopDistance(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">anular QTextOption :: setTabStopDistance ( &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="564a3ca6eebec86231caddfa95078150f76033f7" translate="yes" xml:space="preserve">
          <source>void QTextOption::setTabStopDistance(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa1ee09a1b63a80091094eea6bf9b25fa4c3003b" translate="yes" xml:space="preserve">
          <source>void QTextOption::setTabs(const QList&amp;lt;&lt;a href=&quot;qtextoption-tab&quot;&gt;QTextOption::Tab&lt;/a&gt;&amp;gt; &amp;amp;</source>
          <target state="translated">void QTextOption :: setTabs (const QList &amp;lt; &lt;a href=&quot;qtextoption-tab&quot;&gt;QTextOption :: Tab&lt;/a&gt; &amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="c456db8c206a8b6f3682820df9370328981b3930" translate="yes" xml:space="preserve">
          <source>void QTextOption::setTextDirection(&lt;a href=&quot;qt#LayoutDirection-enum&quot;&gt;Qt::LayoutDirection&lt;/a&gt;</source>
          <target state="translated">anular QTextOption :: setTextDirection ( &lt;a href=&quot;qt#LayoutDirection-enum&quot;&gt;Qt :: LayoutDirection&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0f68d013942fbb8d3151b0f294ec4f76890ceacb" translate="yes" xml:space="preserve">
          <source>void QTextOption::setUseDesignMetrics(bool</source>
          <target state="translated">anular QTextOption::setUseDesignMetrics(bool</target>
        </trans-unit>
        <trans-unit id="1f0e7ae5f87b2d5292c1da0863791e2a78378dbe" translate="yes" xml:space="preserve">
          <source>void QTextOption::setWrapMode(&lt;a href=&quot;qtextoption#WrapMode-enum&quot;&gt;QTextOption::WrapMode&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QTextOption :: setWrapMode ( &lt;a href=&quot;qtextoption#WrapMode-enum&quot;&gt;QTextOption :: WrapMode&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3bb57d12271da8bd1b2012a56a0cb33370be284e" translate="yes" xml:space="preserve">
          <source>void QTextStream::flush()</source>
          <target state="translated">void QTextStream::flush()</target>
        </trans-unit>
        <trans-unit id="034f55498cea241416699c9c1b36f19f64e8dd3c" translate="yes" xml:space="preserve">
          <source>void QTextStream::reset()</source>
          <target state="translated">anular QTextStream::reset()</target>
        </trans-unit>
        <trans-unit id="3bfa88d62c4bbb4ec05777b35540e5f5974c548c" translate="yes" xml:space="preserve">
          <source>void QTextStream::resetStatus()</source>
          <target state="translated">anular QTextStream::resetStatus()</target>
        </trans-unit>
        <trans-unit id="453fb4fa7a7570ed520b889a72b373f149166d0e" translate="yes" xml:space="preserve">
          <source>void QTextStream::setAutoDetectUnicode(bool</source>
          <target state="translated">anular QTextStream::setAutoDetectUnicode(bool</target>
        </trans-unit>
        <trans-unit id="47584f326343b51ed01b57eed560da25b8d6e5a2" translate="yes" xml:space="preserve">
          <source>void QTextStream::setCodec(&lt;a href=&quot;qtextcodec&quot;&gt;QTextCodec&lt;/a&gt; *</source>
          <target state="translated">vac&amp;iacute;o QTextStream :: setCodec ( &lt;a href=&quot;qtextcodec&quot;&gt;QTextCodec&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="d0025516d3680de54d40b1d417280795182c2a25" translate="yes" xml:space="preserve">
          <source>void QTextStream::setCodec(const char *</source>
          <target state="translated">void QTextStream::setCodec(const char *</target>
        </trans-unit>
        <trans-unit id="f8144e78be236e524c24874bbd3803affc57e270" translate="yes" xml:space="preserve">
          <source>void QTextStream::setDevice(&lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt; *</source>
          <target state="translated">void QTextStream :: setDevice ( &lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="a9303b5bff4154354094ebe823190bb39c7d9495" translate="yes" xml:space="preserve">
          <source>void QTextStream::setFieldAlignment(&lt;a href=&quot;qtextstream#FieldAlignment-enum&quot;&gt;QTextStream::FieldAlignment&lt;/a&gt;</source>
          <target state="translated">anular QTextStream :: setFieldAlignment ( &lt;a href=&quot;qtextstream#FieldAlignment-enum&quot;&gt;QTextStream :: FieldAlignment&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="26a53f2a2395afe9f86dd633805df26e6915a7c6" translate="yes" xml:space="preserve">
          <source>void QTextStream::setFieldWidth(int</source>
          <target state="translated">void QTextStream::setFieldWidth(int</target>
        </trans-unit>
        <trans-unit id="bcb22ff35cd2b8a809bcaee5dcfdb7aa500b53f2" translate="yes" xml:space="preserve">
          <source>void QTextStream::setGenerateByteOrderMark(bool</source>
          <target state="translated">void QTextStream::setGenerateByteOrderMark(bool</target>
        </trans-unit>
        <trans-unit id="7b6664c8d2a438c26dfdfaf575a96de8da57817e" translate="yes" xml:space="preserve">
          <source>void QTextStream::setIntegerBase(int</source>
          <target state="translated">void QTextStream::setIntegerBase(int</target>
        </trans-unit>
        <trans-unit id="4ff94b7c8af756331febf49bf66b35221d8773a1" translate="yes" xml:space="preserve">
          <source>void QTextStream::setLocale(const &lt;a href=&quot;qlocale&quot;&gt;QLocale&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QTextStream :: setLocale (const &lt;a href=&quot;qlocale&quot;&gt;QLocale&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="75213c7fd3d3a8a6ee0c09c6cb6e30c68ba01038" translate="yes" xml:space="preserve">
          <source>void QTextStream::setNumberFlags(&lt;a href=&quot;qtextstream#NumberFlag-enum&quot;&gt;QTextStream::NumberFlags&lt;/a&gt;</source>
          <target state="translated">void QTextStream :: setNumberFlags ( &lt;a href=&quot;qtextstream#NumberFlag-enum&quot;&gt;QTextStream :: NumberFlags&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8b8bd1683ef2764280169d260dd920844faf7492" translate="yes" xml:space="preserve">
          <source>void QTextStream::setPadChar(&lt;a href=&quot;qchar&quot;&gt;QChar&lt;/a&gt;</source>
          <target state="translated">anular QTextStream :: setPadChar ( &lt;a href=&quot;qchar&quot;&gt;QChar&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c67e8d91f253cf973f3cb9e7facd802b13a03739" translate="yes" xml:space="preserve">
          <source>void QTextStream::setRealNumberNotation(&lt;a href=&quot;qtextstream#RealNumberNotation-enum&quot;&gt;QTextStream::RealNumberNotation&lt;/a&gt;</source>
          <target state="translated">void QTextStream :: setRealNumberNotation ( &lt;a href=&quot;qtextstream#RealNumberNotation-enum&quot;&gt;QTextStream :: RealNumberNotation&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="820e57ef5cf653ca129068b13a542fdcae24dd6e" translate="yes" xml:space="preserve">
          <source>void QTextStream::setRealNumberPrecision(int</source>
          <target state="translated">void QTextStream::setRealNumberPrecision(int</target>
        </trans-unit>
        <trans-unit id="d2af504ca398b65fe0577e002ba3650ce73a7d4d" translate="yes" xml:space="preserve">
          <source>void QTextStream::setStatus(&lt;a href=&quot;qtextstream#Status-enum&quot;&gt;QTextStream::Status&lt;/a&gt;</source>
          <target state="translated">void QTextStream :: setStatus ( &lt;a href=&quot;qtextstream#Status-enum&quot;&gt;QTextStream :: Estado&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="027c0dae85fd5629bbff24b7705f2c661e567829" translate="yes" xml:space="preserve">
          <source>void QTextStream::setString(&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; *</source>
          <target state="translated">vac&amp;iacute;o QTextStream :: setString ( &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="d0e8fbb93d2a8e91645ee89d7691faf988cb5a29" translate="yes" xml:space="preserve">
          <source>void QTextStream::skipWhiteSpace()</source>
          <target state="translated">void QTextStream::skipWhiteSpace()</target>
        </trans-unit>
        <trans-unit id="697917219745e991f22d937856248b0b05b7e6c0" translate="yes" xml:space="preserve">
          <source>void QTextTable::appendColumns(int</source>
          <target state="translated">void QTextTable::appendColumns(int</target>
        </trans-unit>
        <trans-unit id="451d5b385588f6040719236842c729e063a43b48" translate="yes" xml:space="preserve">
          <source>void QTextTable::appendRows(int</source>
          <target state="translated">void QTextTable::appendRows(int</target>
        </trans-unit>
        <trans-unit id="4b0093eeefe6f4d33ea689f3719d4e829c63d761" translate="yes" xml:space="preserve">
          <source>void QTextTable::insertColumns(int</source>
          <target state="translated">anular QTextTable::insertarColumnas(int</target>
        </trans-unit>
        <trans-unit id="3cd3dceba51ba768f4bcaf1d910149c2b9de1e29" translate="yes" xml:space="preserve">
          <source>void QTextTable::insertRows(int</source>
          <target state="translated">anular la tabla de texto::insertar filas(int</target>
        </trans-unit>
        <trans-unit id="118eb72a3e14e2982f6e52096ea18996033a4f81" translate="yes" xml:space="preserve">
          <source>void QTextTable::mergeCells(const &lt;a href=&quot;qtextcursor&quot;&gt;QTextCursor&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QTextTable :: mergeCells (const &lt;a href=&quot;qtextcursor&quot;&gt;QTextCursor&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="5cbc055b5d60743c9bc2a5e45ba170d7c5500174" translate="yes" xml:space="preserve">
          <source>void QTextTable::mergeCells(int</source>
          <target state="translated">anular QTextTable::mergeCells(int</target>
        </trans-unit>
        <trans-unit id="e4eb5ceaaeb79ba20ea90ab42e6cc25af8b36dc0" translate="yes" xml:space="preserve">
          <source>void QTextTable::removeColumns(int</source>
          <target state="translated">anular QTextTable::removeColumns(int</target>
        </trans-unit>
        <trans-unit id="e307e3adf5c84f9cef0f55c8ba4f067836330daf" translate="yes" xml:space="preserve">
          <source>void QTextTable::removeRows(int</source>
          <target state="translated">anular QTextTable::removeRows(int</target>
        </trans-unit>
        <trans-unit id="3b5e09c8dc616a12c3ebcc76f6de6425a78b15ad" translate="yes" xml:space="preserve">
          <source>void QTextTable::resize(int</source>
          <target state="translated">anular QTextTable::resize(int</target>
        </trans-unit>
        <trans-unit id="a1b094670201ea4869146933f0005c8f1a446806" translate="yes" xml:space="preserve">
          <source>void QTextTable::setFormat(const &lt;a href=&quot;qtexttableformat&quot;&gt;QTextTableFormat&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QTextTable :: setFormat (const &lt;a href=&quot;qtexttableformat&quot;&gt;QTextTableFormat&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="1eef89a1a7376408adbe741da7a4fa3c70d34a3d" translate="yes" xml:space="preserve">
          <source>void QTextTable::splitCell(int</source>
          <target state="translated">void QTextTable::splitCell(int</target>
        </trans-unit>
        <trans-unit id="8492613f25c103b1ab4370d3fff039d0e0eb5a70" translate="yes" xml:space="preserve">
          <source>void QTextTableCell::setFormat(const &lt;a href=&quot;qtextcharformat&quot;&gt;QTextCharFormat&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QTextTableCell :: setFormat (const &lt;a href=&quot;qtextcharformat&quot;&gt;QTextCharFormat&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="6fee3fce8d74f990348f96a00b737e5b88081a51" translate="yes" xml:space="preserve">
          <source>void QTextTableCellFormat::setBorder(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b11a3e3c653aa65461d2cbb3c86938baf7be6119" translate="yes" xml:space="preserve">
          <source>void QTextTableCellFormat::setBorderBrush(const &lt;a href=&quot;qbrush&quot;&gt;QBrush&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cf5feeefb12ffd8a57d6e4b053f443d07b6bb49" translate="yes" xml:space="preserve">
          <source>void QTextTableCellFormat::setBorderStyle(&lt;a href=&quot;qtextframeformat#BorderStyle-enum&quot;&gt;QTextFrameFormat::BorderStyle&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3c3445ec8764859ec40343f7fdbe7e464020961" translate="yes" xml:space="preserve">
          <source>void QTextTableCellFormat::setBottomBorder(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="032419d481e99593aa0318dfdd02aeefdd67cb0d" translate="yes" xml:space="preserve">
          <source>void QTextTableCellFormat::setBottomBorderBrush(const &lt;a href=&quot;qbrush&quot;&gt;QBrush&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d4dee944dad6349d9167a48d2fbb9a29082e407" translate="yes" xml:space="preserve">
          <source>void QTextTableCellFormat::setBottomBorderStyle(&lt;a href=&quot;qtextframeformat#BorderStyle-enum&quot;&gt;QTextFrameFormat::BorderStyle&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="299867538902a3ff12f00a4d7fbcf610e6ab94ba" translate="yes" xml:space="preserve">
          <source>void QTextTableCellFormat::setBottomPadding(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QTextTableCellFormat :: setBottomPadding ( &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d02b0f15d7e5e571f73f3cca6dcf53b9f6a6a20f" translate="yes" xml:space="preserve">
          <source>void QTextTableCellFormat::setBottomPadding(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1da04b28bc991fef575ebdfe16cde97a47fe378" translate="yes" xml:space="preserve">
          <source>void QTextTableCellFormat::setLeftBorder(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b101ea8272491de4fba9ed1efe4cc2daef69701" translate="yes" xml:space="preserve">
          <source>void QTextTableCellFormat::setLeftBorderBrush(const &lt;a href=&quot;qbrush&quot;&gt;QBrush&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c4c8123a81aa459bad0484c7b976be742014244" translate="yes" xml:space="preserve">
          <source>void QTextTableCellFormat::setLeftBorderStyle(&lt;a href=&quot;qtextframeformat#BorderStyle-enum&quot;&gt;QTextFrameFormat::BorderStyle&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6ab98b41c49277e281e1562ba9ae2061dd54e1f" translate="yes" xml:space="preserve">
          <source>void QTextTableCellFormat::setLeftPadding(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QTextTableCellFormat :: setLeftPadding ( &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2a45117be25e7d7a1fa6251c08fa5e67e0add45b" translate="yes" xml:space="preserve">
          <source>void QTextTableCellFormat::setLeftPadding(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="476a00b46f4c95470ad0ee8741262ba4de905526" translate="yes" xml:space="preserve">
          <source>void QTextTableCellFormat::setPadding(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QTextTableCellFormat :: setPadding ( &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5b44a7b51b51d8709cbd08df9e359d44a03eaf32" translate="yes" xml:space="preserve">
          <source>void QTextTableCellFormat::setPadding(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a566455d2c6a65b26326df8386a5958baceeccba" translate="yes" xml:space="preserve">
          <source>void QTextTableCellFormat::setRightBorder(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b1503b72a5205d556c0031e4c5238ba3f169651" translate="yes" xml:space="preserve">
          <source>void QTextTableCellFormat::setRightBorderBrush(const &lt;a href=&quot;qbrush&quot;&gt;QBrush&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="295a93ea92731d4b1c260b29d6f612ca2127318d" translate="yes" xml:space="preserve">
          <source>void QTextTableCellFormat::setRightBorderStyle(&lt;a href=&quot;qtextframeformat#BorderStyle-enum&quot;&gt;QTextFrameFormat::BorderStyle&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f617740751722954ba9507dcd1f0ba4cd0e4b805" translate="yes" xml:space="preserve">
          <source>void QTextTableCellFormat::setRightPadding(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QTextTableCellFormat :: setRightPadding ( &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="54d9c11a015da5e6001647499c27df35805496c6" translate="yes" xml:space="preserve">
          <source>void QTextTableCellFormat::setRightPadding(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2d9dbf51c6cd02f137617ddd69c601e3a75f398" translate="yes" xml:space="preserve">
          <source>void QTextTableCellFormat::setTopBorder(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f177742479ac71edf03bbecad29eb1062add5331" translate="yes" xml:space="preserve">
          <source>void QTextTableCellFormat::setTopBorderBrush(const &lt;a href=&quot;qbrush&quot;&gt;QBrush&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dc32960efb2469a8f516219806d408135698d78" translate="yes" xml:space="preserve">
          <source>void QTextTableCellFormat::setTopBorderStyle(&lt;a href=&quot;qtextframeformat#BorderStyle-enum&quot;&gt;QTextFrameFormat::BorderStyle&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60753f03ee6433e1d9513394b38fe871af72692a" translate="yes" xml:space="preserve">
          <source>void QTextTableCellFormat::setTopPadding(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QTextTableCellFormat :: setTopPadding ( &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="585d561050ceef10ce03a5f54b01c287e6d8fe9b" translate="yes" xml:space="preserve">
          <source>void QTextTableCellFormat::setTopPadding(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86b81bc356911ca55024deb52cd04fdc524836b5" translate="yes" xml:space="preserve">
          <source>void QTextTableFormat::clearColumnWidthConstraints()</source>
          <target state="translated">void QTextTableFormat::clearColumnWidthConstraints()</target>
        </trans-unit>
        <trans-unit id="9f0d81b7115e51e0a1b555a5dee66da1abd43405" translate="yes" xml:space="preserve">
          <source>void QTextTableFormat::setAlignment(&lt;a href=&quot;qt#AlignmentFlag-enum&quot;&gt;Qt::Alignment&lt;/a&gt;</source>
          <target state="translated">void QTextTableFormat :: setAlignment ( &lt;a href=&quot;qt#AlignmentFlag-enum&quot;&gt;Qt :: Alignment&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a7d2befb5ac9e95fa42caa023acf3881a1a54ccf" translate="yes" xml:space="preserve">
          <source>void QTextTableFormat::setBorderCollapse(bool</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c339e7b81ff75785b6c970143cd5e0fe638285ba" translate="yes" xml:space="preserve">
          <source>void QTextTableFormat::setCellPadding(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QTextTableFormat :: setCellPadding ( &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a93b759f10ed1dd87493f76336c0307b76629d6f" translate="yes" xml:space="preserve">
          <source>void QTextTableFormat::setCellPadding(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ea78a8ea857663b6505c10bb179b4903befc000" translate="yes" xml:space="preserve">
          <source>void QTextTableFormat::setCellSpacing(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">void QTextTableFormat :: setCellSpacing ( &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d4ea7e86f94d232ee43c05057d5a87df8c418f3c" translate="yes" xml:space="preserve">
          <source>void QTextTableFormat::setCellSpacing(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="423b9df00acfdf72670d99960c9752f43037225c" translate="yes" xml:space="preserve">
          <source>void QTextTableFormat::setColumnWidthConstraints(const &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;&lt;a href=&quot;qtextlength&quot;&gt;QTextLength&lt;/a&gt;&amp;gt; &amp;amp;</source>
          <target state="translated">void QTextTableFormat :: setColumnWidthConstraints (const &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt; &amp;lt; &lt;a href=&quot;qtextlength&quot;&gt;QTextLength&lt;/a&gt; &amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="c7455f0c9145067a407c28e3224c55ec4b04ab69" translate="yes" xml:space="preserve">
          <source>void QTextTableFormat::setHeaderRowCount(int</source>
          <target state="translated">void QTextTableFormat::setHeaderRowCount(int</target>
        </trans-unit>
        <trans-unit id="45461a27fc1dbc907942f7fc49442cbf690a40bb" translate="yes" xml:space="preserve">
          <source>void QTextureData::addImageData(const &lt;a href=&quot;qt3drender-qtextureimagedatagenerator#QTextureImageDataPtr-typedef&quot;&gt;Qt3DRender::QTextureImageDataPtr&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QTextureData :: addImageData (const &lt;a href=&quot;qt3drender-qtextureimagedatagenerator#QTextureImageDataPtr-typedef&quot;&gt;Qt3DRender :: QTextureImageDataPtr&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="6ff41bf5c72148fa401f5b2fd77481913a4e463a" translate="yes" xml:space="preserve">
          <source>void QTextureData::setAutoMipMapGenerationEnabled(bool</source>
          <target state="translated">void QTextureData::setAutoMipMapGenerationEnabled(bool</target>
        </trans-unit>
        <trans-unit id="84e3f065861915450b42ddbb8d04d2fb7bf2051c" translate="yes" xml:space="preserve">
          <source>void QTextureData::setComparisonFunction(QAbstractTexture::ComparisonFunction</source>
          <target state="translated">void QTextureData::setComparisonFunction(QAbstractTexture::ComparisonFunction</target>
        </trans-unit>
        <trans-unit id="cc69d723bd6881cdb7a13243071cac6fcdec9346" translate="yes" xml:space="preserve">
          <source>void QTextureData::setComparisonMode(QAbstractTexture::ComparisonMode</source>
          <target state="translated">void QTextureData::setComparisonMode(QAbstractTexture::ComparisonMode</target>
        </trans-unit>
        <trans-unit id="a903c1fa77c6aa35336a3ab40547c73c6df5bf7a" translate="yes" xml:space="preserve">
          <source>void QTextureData::setDepth(int</source>
          <target state="translated">void QTextureData::setDepth(int</target>
        </trans-unit>
        <trans-unit id="500ed5bbf8f98541f185bea995a63f08c1b4d333" translate="yes" xml:space="preserve">
          <source>void QTextureData::setFormat(&lt;a href=&quot;qt3drender-qabstracttexture#TextureFormat-enum&quot;&gt;QAbstractTexture::TextureFormat&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QTextureData :: setFormat ( &lt;a href=&quot;qt3drender-qabstracttexture#TextureFormat-enum&quot;&gt;QAbstractTexture :: TextureFormat&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1336bff0b4f2d8d227cff05350dd6d97ac154152" translate="yes" xml:space="preserve">
          <source>void QTextureData::setHeight(int</source>
          <target state="translated">void QTextureData::setHeight(int</target>
        </trans-unit>
        <trans-unit id="0e8b5bfb2428418aa69d397da473060401488de9" translate="yes" xml:space="preserve">
          <source>void QTextureData::setLayers(int</source>
          <target state="translated">void QTextureData::setLayers(int</target>
        </trans-unit>
        <trans-unit id="f1222336fbd691b919d4f409ca63126601c6ae75" translate="yes" xml:space="preserve">
          <source>void QTextureData::setMagnificationFilter(&lt;a href=&quot;qt3drender-qabstracttexture#Filter-enum&quot;&gt;QAbstractTexture::Filter&lt;/a&gt;</source>
          <target state="translated">void QTextureData :: setMagnificationFilter ( &lt;a href=&quot;qt3drender-qabstracttexture#Filter-enum&quot;&gt;QAbstractTexture :: Filter&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="48ceaba2afd8e2fd1fbb99dbad3afbb265df1a57" translate="yes" xml:space="preserve">
          <source>void QTextureData::setMaximumAnisotropy(float</source>
          <target state="translated">void QTextureData::setMaximumAnisotropy(float</target>
        </trans-unit>
        <trans-unit id="996894e00b36e4713422088d5a89bf16fefb72cd" translate="yes" xml:space="preserve">
          <source>void QTextureData::setMinificationFilter(&lt;a href=&quot;qt3drender-qabstracttexture#Filter-enum&quot;&gt;QAbstractTexture::Filter&lt;/a&gt;</source>
          <target state="translated">void QTextureData :: setMinificationFilter ( &lt;a href=&quot;qt3drender-qabstracttexture#Filter-enum&quot;&gt;QAbstractTexture :: Filter&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9fb84f5509ccb84bac1820d3883edfd16093fbdd" translate="yes" xml:space="preserve">
          <source>void QTextureData::setTarget(&lt;a href=&quot;qt3drender-qabstracttexture#Target-enum&quot;&gt;QAbstractTexture::Target&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QTextureData :: setTarget ( &lt;a href=&quot;qt3drender-qabstracttexture#Target-enum&quot;&gt;QAbstractTexture :: Target&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="21b756690b7b91c09ef60b180c1d4c6f0afb798f" translate="yes" xml:space="preserve">
          <source>void QTextureData::setWidth(int</source>
          <target state="translated">void QTextureData::setWidth(int</target>
        </trans-unit>
        <trans-unit id="05197118dc4742a3ba1c5ea30477d631f473041f" translate="yes" xml:space="preserve">
          <source>void QTextureData::setWrapModeX(&lt;a href=&quot;qt3drender-qtexturewrapmode#WrapMode-enum&quot;&gt;QTextureWrapMode::WrapMode&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QTextureData :: setWrapModeX ( &lt;a href=&quot;qt3drender-qtexturewrapmode#WrapMode-enum&quot;&gt;QTextureWrapMode :: WrapMode&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3df63892ac5dfd7b8eca2647dc48ad7a1a021979" translate="yes" xml:space="preserve">
          <source>void QTextureData::setWrapModeY(&lt;a href=&quot;qt3drender-qtexturewrapmode#WrapMode-enum&quot;&gt;QTextureWrapMode::WrapMode&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QTextureData :: setWrapModeY ( &lt;a href=&quot;qt3drender-qtexturewrapmode#WrapMode-enum&quot;&gt;QTextureWrapMode :: WrapMode&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d07219a8de4aff245719933c55a68555a04d5fbe" translate="yes" xml:space="preserve">
          <source>void QTextureData::setWrapModeZ(&lt;a href=&quot;qt3drender-qtexturewrapmode#WrapMode-enum&quot;&gt;QTextureWrapMode::WrapMode&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QTextureData :: setWrapModeZ ( &lt;a href=&quot;qt3drender-qtexturewrapmode#WrapMode-enum&quot;&gt;QTextureWrapMode :: WrapMode&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f3a305385ec45eca4a1cda4f3f0e8f6623043310" translate="yes" xml:space="preserve">
          <source>void QTextureImageData::cleanup()</source>
          <target state="translated">void QTextureImageData::cleanup()</target>
        </trans-unit>
        <trans-unit id="9db6517857189e9e94872f9c42a0e5c9806bcdbb" translate="yes" xml:space="preserve">
          <source>void QTextureImageData::setData(const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</source>
          <target state="translated">vac&amp;iacute;o QTextureImageData :: setData (const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="10864d2d71a549a5271b6c5e51bda3e89bfe2296" translate="yes" xml:space="preserve">
          <source>void QTextureImageData::setDepth(int</source>
          <target state="translated">void QTextureImageData::setDepth(int</target>
        </trans-unit>
        <trans-unit id="7116360cd8cec7b312ad2e3967706d5119b38d17" translate="yes" xml:space="preserve">
          <source>void QTextureImageData::setFaces(int</source>
          <target state="translated">void QTextureImageData::setFaces(int</target>
        </trans-unit>
        <trans-unit id="63763d2077915327df46f2a13fc70fca83992d34" translate="yes" xml:space="preserve">
          <source>void QTextureImageData::setFormat(&lt;a href=&quot;qopengltexture#TextureFormat-enum&quot;&gt;QOpenGLTexture::TextureFormat&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QTextureImageData :: setFormat ( &lt;a href=&quot;qopengltexture#TextureFormat-enum&quot;&gt;QOpenGLTexture :: TextureFormat&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="edb1335e7a04149a2f9276b95c10d52e4416de06" translate="yes" xml:space="preserve">
          <source>void QTextureImageData::setHeight(int</source>
          <target state="translated">void QTextureImageData::setHeight(int</target>
        </trans-unit>
        <trans-unit id="f25672bdfbc2ce92ea0feb55064aeef0ea8ba4e9" translate="yes" xml:space="preserve">
          <source>void QTextureImageData::setImage(const &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QTextureImageData :: setImage (const &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="adb67f6e165c9946b977df0e61370d317e8c4b8b" translate="yes" xml:space="preserve">
          <source>void QTextureImageData::setLayers(int</source>
          <target state="translated">void QTextureImageData::setLayers(int</target>
        </trans-unit>
        <trans-unit id="a45966fd48b87b2c6c14dd2d3e1eb2a88fab22ce" translate="yes" xml:space="preserve">
          <source>void QTextureImageData::setMipLevels(int</source>
          <target state="translated">void QTextureImageData::setMipLevels(int</target>
        </trans-unit>
        <trans-unit id="e331e4140c614a67cc419bf62d4ba7883f82502d" translate="yes" xml:space="preserve">
          <source>void QTextureImageData::setPixelFormat(&lt;a href=&quot;qopengltexture#PixelFormat-enum&quot;&gt;QOpenGLTexture::PixelFormat&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QTextureImageData :: setPixelFormat ( &lt;a href=&quot;qopengltexture#PixelFormat-enum&quot;&gt;QOpenGLTexture :: PixelFormat&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f344230253e0be3b3ecd8733d01b4fc1a8b78ea2" translate="yes" xml:space="preserve">
          <source>void QTextureImageData::setPixelType(&lt;a href=&quot;qopengltexture#PixelType-enum&quot;&gt;QOpenGLTexture::PixelType&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QTextureImageData :: setPixelType ( &lt;a href=&quot;qopengltexture#PixelType-enum&quot;&gt;QOpenGLTexture :: PixelType&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c92d2ea79fc73973c4f3e84f6922375257f12a43" translate="yes" xml:space="preserve">
          <source>void QTextureImageData::setTarget(&lt;a href=&quot;qopengltexture#Target-enum&quot;&gt;QOpenGLTexture::Target&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QTextureImageData :: setTarget ( &lt;a href=&quot;qopengltexture#Target-enum&quot;&gt;QOpenGLTexture :: Target&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c45194cb115bb6adcaf374623b16a88687ccbcc1" translate="yes" xml:space="preserve">
          <source>void QTextureImageData::setWidth(int</source>
          <target state="translated">void QTextureImageData::setWidth(int</target>
        </trans-unit>
        <trans-unit id="06649e8a4264c36e1a997a30703baab114176447" translate="yes" xml:space="preserve">
          <source>void QThread::exit(int</source>
          <target state="translated">void QThread::exit(int</target>
        </trans-unit>
        <trans-unit id="4b8fec10be6b1285d41407b00fe9d77ee7e5dd87" translate="yes" xml:space="preserve">
          <source>void QThread::requestInterruption()</source>
          <target state="translated">void QThread::requestInterruption()</target>
        </trans-unit>
        <trans-unit id="99450d2c68fc640c885aee9a9520daf3db35390a" translate="yes" xml:space="preserve">
          <source>void QThread::setEventDispatcher(&lt;a href=&quot;qabstracteventdispatcher&quot;&gt;QAbstractEventDispatcher&lt;/a&gt; *</source>
          <target state="translated">vac&amp;iacute;o QThread :: setEventDispatcher ( &lt;a href=&quot;qabstracteventdispatcher&quot;&gt;QAbstractEventDispatcher&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="5cf2d0ee71fe1682e25c57c239a3ea16b844f64c" translate="yes" xml:space="preserve">
          <source>void QThread::setPriority(&lt;a href=&quot;qthread#Priority-enum&quot;&gt;QThread::Priority&lt;/a&gt;</source>
          <target state="translated">anular QThread :: setPriority ( &lt;a href=&quot;qthread#Priority-enum&quot;&gt;QThread :: Prioridad&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f7c68281433d747a706d00dd420334202cfed758" translate="yes" xml:space="preserve">
          <source>void QThread::setStackSize(&lt;a href=&quot;qtglobal#uint-typedef&quot;&gt;uint&lt;/a&gt;</source>
          <target state="translated">void QThread :: setStackSize ( &lt;a href=&quot;qtglobal#uint-typedef&quot;&gt;uint&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="768a81ae6eaf98c96ad6ba196c46addc23a0aabc" translate="yes" xml:space="preserve">
          <source>void QThreadPool::clear()</source>
          <target state="translated">void QThreadPool::clear()</target>
        </trans-unit>
        <trans-unit id="82e7eaea1fcae1a9dff96174807bd8fa2a156bf4" translate="yes" xml:space="preserve">
          <source>void QThreadPool::releaseThread()</source>
          <target state="translated">void QThreadPool::releaseThread()</target>
        </trans-unit>
        <trans-unit id="6b5a895cec5b2b47b4d7a671ae3a411f0f107953" translate="yes" xml:space="preserve">
          <source>void QThreadPool::reserveThread()</source>
          <target state="translated">void QThreadPool::reserveThread()</target>
        </trans-unit>
        <trans-unit id="f85c25806278f50e664fb5847e0abe5badcfb0a4" translate="yes" xml:space="preserve">
          <source>void QThreadPool::start(&lt;a href=&quot;qrunnable&quot;&gt;QRunnable&lt;/a&gt; *</source>
          <target state="translated">void QThreadPool :: start ( &lt;a href=&quot;qrunnable&quot;&gt;QRunnable&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="344033399c481b9184799e4593715c5a4ff872b2" translate="yes" xml:space="preserve">
          <source>void QThreadPool::start(std::function&amp;lt;void ()&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be29312e6ca1beadb00290e07305234530640c4d" translate="yes" xml:space="preserve">
          <source>void QThreadStorage::setLocalData(T</source>
          <target state="translated">void QThreadStorage::setLocalData(T</target>
        </trans-unit>
        <trans-unit id="96830de65edef256461f6ffa2eee8e8bd96ef2af" translate="yes" xml:space="preserve">
          <source>void QTiltReading::setXRotation(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QTiltReading :: setXRotation ( &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="940ef922a6d81e274512ce6d3ed020a791f67c0d" translate="yes" xml:space="preserve">
          <source>void QTiltReading::setXRotation(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dfd4ae102e08c25620c33cddafa6c1096458568" translate="yes" xml:space="preserve">
          <source>void QTiltReading::setYRotation(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QTiltReading :: setYRotation ( &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9154f4e4a74db5a989ba924bd064d2cd9a401eb2" translate="yes" xml:space="preserve">
          <source>void QTiltReading::setYRotation(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d54ccb56a5b6b140e32a74b4da46fd663081a797" translate="yes" xml:space="preserve">
          <source>void QTiltSensor::calibrate()</source>
          <target state="translated">anular el QTiltSensor::calibrar()</target>
        </trans-unit>
        <trans-unit id="e86d11659a3ded511cecd1ff407d64adfe545c24" translate="yes" xml:space="preserve">
          <source>void QTime::start()</source>
          <target state="translated">void QTime::start()</target>
        </trans-unit>
        <trans-unit id="dafd57c281fadd7017d45d490167573133257178" translate="yes" xml:space="preserve">
          <source>void QTimeLine::setEndFrame(int</source>
          <target state="translated">void QTimeLine::setEndFrame(int</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
