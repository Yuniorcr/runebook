<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="qt">
    <body>
      <group id="qt">
        <trans-unit id="ff49fdf5c5083e067ff0c539747243b075d9f1a3" translate="yes" xml:space="preserve">
          <source>void QOAuth1Signature::setParameters(const &lt;a href=&quot;qvariant#QVariantMap-typedef&quot;&gt;QVariantMap&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QOAuth1Signature :: setParameters (const &lt;a href=&quot;qvariant#QVariantMap-typedef&quot;&gt;QVariantMap&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="926ae450d9988be5d0d88ebe964ccb3d2cf9fd98" translate="yes" xml:space="preserve">
          <source>void QOAuth1Signature::setTokenSecret(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QOAuth1Signature :: setTokenSecret (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="34cff8835323bd8cdb4c381949c9fcb128cf85a0" translate="yes" xml:space="preserve">
          <source>void QOAuth1Signature::setUrl(const &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QOAuth1Signature :: setUrl (const &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="a627c803d75ba501e45de9177e3ae4c9ffd31d1d" translate="yes" xml:space="preserve">
          <source>void QOAuth1Signature::swap(&lt;a href=&quot;qoauth1signature#QOAuth1Signature&quot;&gt;QOAuth1Signature&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QOAuth1Signature :: swap ( &lt;a href=&quot;qoauth1signature#QOAuth1Signature&quot;&gt;QOAuth1Signature&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="4d38c2f7ddb8facb7794de2c533f122ef2f7a993" translate="yes" xml:space="preserve">
          <source>void QOAuth2AuthorizationCodeFlow::setAccessTokenUrl(const &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QOAuth2AuthorizationCodeFlow :: setAccessTokenUrl (const &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="31d0a651d839a6bd7837da1c8083edcb897db72f" translate="yes" xml:space="preserve">
          <source>void QObject::dumpObjectInfo() const</source>
          <target state="translated">nulo QObject::dumpObjectInfo()const</target>
        </trans-unit>
        <trans-unit id="63dad72c13e7bcf7ce7a1387a6bfe674a9cb154a" translate="yes" xml:space="preserve">
          <source>void QObject::dumpObjectTree() const</source>
          <target state="translated">nulo QObject::dumpObjectTree()const</target>
        </trans-unit>
        <trans-unit id="e58ae0ef4eec036136b5040aa68bfa4096602cd8" translate="yes" xml:space="preserve">
          <source>void QObject::installEventFilter(&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="translated">void QObject :: installEventFilter ( &lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="7ea3f11829ad51ec1f0112e7580030e6bff86668" translate="yes" xml:space="preserve">
          <source>void QObject::killTimer(int</source>
          <target state="translated">anular el Objeto Q::killTimer(int</target>
        </trans-unit>
        <trans-unit id="e39c6287075f6a4a969d6aacdc93e01ebb74948b" translate="yes" xml:space="preserve">
          <source>void QObject::moveToThread(&lt;a href=&quot;qthread&quot;&gt;QThread&lt;/a&gt; *</source>
          <target state="translated">anular QObject :: moveToThread ( &lt;a href=&quot;qthread&quot;&gt;QThread&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="d91150bb1447a0ff053555e4a423a977e877c6e5" translate="yes" xml:space="preserve">
          <source>void QObject::removeEventFilter(&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="translated">void QObject :: removeEventFilter ( &lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="f3f414fe75b8eb969d5531bcfb4c15d35fd6dc4c" translate="yes" xml:space="preserve">
          <source>void QObject::setParent(&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="translated">void QObject :: setParent ( &lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="8b6196d6af261ea7d8ec9111276c78743a8f7108" translate="yes" xml:space="preserve">
          <source>void QObjectCleanupHandler::clear()</source>
          <target state="translated">void QObjectCleanupHandler::clear()</target>
        </trans-unit>
        <trans-unit id="e68291fec1639ddaaf8644fce61ca9a5c883323b" translate="yes" xml:space="preserve">
          <source>void QObjectCleanupHandler::remove(&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="translated">void QObjectCleanupHandler :: remove ( &lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="fec1f4d2c52b83b0f145bd0fc471ce17649debfa" translate="yes" xml:space="preserve">
          <source>void QOcspResponse::swap(&lt;a href=&quot;qocspresponse#QOcspResponse&quot;&gt;QOcspResponse&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QOcspResponse :: swap ( &lt;a href=&quot;qocspresponse#QOcspResponse&quot;&gt;QOcspResponse&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="98b4ae57f3b07503fd91a2537e0225d70e8e38a6" translate="yes" xml:space="preserve">
          <source>void QOffscreenSurface::create()</source>
          <target state="translated">anular QOffscreenSurface::create()</target>
        </trans-unit>
        <trans-unit id="fc5184a3b043831c171c5b4d180af9518fe5fba2" translate="yes" xml:space="preserve">
          <source>void QOffscreenSurface::destroy()</source>
          <target state="translated">anular QOffscreenSurface::destroy()</target>
        </trans-unit>
        <trans-unit id="11dd65bc2ffc91ffc62cc4720654f5217f515a93" translate="yes" xml:space="preserve">
          <source>void QOffscreenSurface::setFormat(const &lt;a href=&quot;qsurfaceformat&quot;&gt;QSurfaceFormat&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QOffscreenSurface :: setFormat (const &lt;a href=&quot;qsurfaceformat&quot;&gt;QSurfaceFormat&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="56da7bd18e199e63948b930a68ab0a94a65748cd" translate="yes" xml:space="preserve">
          <source>void QOffscreenSurface::setNativeHandle(void *</source>
          <target state="translated">void QOffscreenSurface::setNativeHandle(void *</target>
        </trans-unit>
        <trans-unit id="da127eb6675db1bcaffcbce7a02d2d027e2e7e9c" translate="yes" xml:space="preserve">
          <source>void QOffscreenSurface::setScreen(&lt;a href=&quot;qscreen&quot;&gt;QScreen&lt;/a&gt; *</source>
          <target state="translated">void QOffscreenSurface :: setScreen ( &lt;a href=&quot;qscreen&quot;&gt;QScreen&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="e7c6785bb492a28fb58470cdc92f24c52df46846" translate="yes" xml:space="preserve">
          <source>void QOpenGLBuffer::allocate(const void *</source>
          <target state="translated">void QOpenGLBuffer::allocate(const void *</target>
        </trans-unit>
        <trans-unit id="640b12d28d698247ae24bd9a9a81403dd02f37fb" translate="yes" xml:space="preserve">
          <source>void QOpenGLBuffer::allocate(int</source>
          <target state="translated">anular QOpenGLBuffer::allocate(int</target>
        </trans-unit>
        <trans-unit id="b870f2d5faecb50c7a2fcb77a03ee4ce18046e45" translate="yes" xml:space="preserve">
          <source>void QOpenGLBuffer::destroy()</source>
          <target state="translated">anular QOpenGLBuffer::destroy()</target>
        </trans-unit>
        <trans-unit id="9291da3bdcba050e7f7b2efa2677fb46dfbf9f1c" translate="yes" xml:space="preserve">
          <source>void QOpenGLBuffer::release()</source>
          <target state="translated">anular QOpenGLBuffer::release()</target>
        </trans-unit>
        <trans-unit id="49a967d1683b69a323e6923463683a315d455a3f" translate="yes" xml:space="preserve">
          <source>void QOpenGLBuffer::setUsagePattern(&lt;a href=&quot;qopenglbuffer#UsagePattern-enum&quot;&gt;QOpenGLBuffer::UsagePattern&lt;/a&gt;</source>
          <target state="translated">void QOpenGLBuffer :: setUsagePattern ( &lt;a href=&quot;qopenglbuffer#UsagePattern-enum&quot;&gt;QOpenGLBuffer :: UsagePattern&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1d06ebbddb35be27f09eb55af7905a8c532d4a6b" translate="yes" xml:space="preserve">
          <source>void QOpenGLBuffer::write(int</source>
          <target state="translated">anular QOpenGLBuffer::write(int</target>
        </trans-unit>
        <trans-unit id="c9c6d2026f212efe7d60655f458a05b9ad96aead" translate="yes" xml:space="preserve">
          <source>void QOpenGLContext::doneCurrent()</source>
          <target state="translated">anular QOpenGLContext::doneCurrent()</target>
        </trans-unit>
        <trans-unit id="1a5dd44575425bd49d3e6c41ee61786f9bae6570" translate="yes" xml:space="preserve">
          <source>void QOpenGLContext::setFormat(const &lt;a href=&quot;qsurfaceformat&quot;&gt;QSurfaceFormat&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QOpenGLContext :: setFormat (const &lt;a href=&quot;qsurfaceformat&quot;&gt;QSurfaceFormat&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="6138e140b4d6d9a035daee7f610c9df2d95ec76b" translate="yes" xml:space="preserve">
          <source>void QOpenGLContext::setNativeHandle(const &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QOpenGLContext :: setNativeHandle (const &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="226a4de2a0977df03594eabd037f406197a482c2" translate="yes" xml:space="preserve">
          <source>void QOpenGLContext::setScreen(&lt;a href=&quot;qscreen&quot;&gt;QScreen&lt;/a&gt; *</source>
          <target state="translated">void QOpenGLContext :: setScreen ( &lt;a href=&quot;qscreen&quot;&gt;QScreen&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="575e008288609544ffd74ba5d2fa47802624f6c6" translate="yes" xml:space="preserve">
          <source>void QOpenGLContext::setShareContext(&lt;a href=&quot;qopenglcontext#QOpenGLContext&quot;&gt;QOpenGLContext&lt;/a&gt; *</source>
          <target state="translated">void QOpenGLContext :: setShareContext ( &lt;a href=&quot;qopenglcontext#QOpenGLContext&quot;&gt;QOpenGLContext&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="333ec14d008982ce8dfd5c27f2e79a8c5a6d0dd8" translate="yes" xml:space="preserve">
          <source>void QOpenGLContext::swapBuffers(&lt;a href=&quot;qsurface&quot;&gt;QSurface&lt;/a&gt; *</source>
          <target state="translated">void QOpenGLContext :: swapBuffers ( &lt;a href=&quot;qsurface&quot;&gt;QSurface&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="9d568bc31f8b1de370d28bc0a7b01669dfe10ef0" translate="yes" xml:space="preserve">
          <source>void QOpenGLDebugLogger::disableMessages(&lt;a href=&quot;qopengldebugmessage#Source-enum&quot;&gt;QOpenGLDebugMessage::Sources&lt;/a&gt;</source>
          <target state="translated">void QOpenGLDebugLogger :: disableMessages ( &lt;a href=&quot;qopengldebugmessage#Source-enum&quot;&gt;QOpenGLDebugMessage :: Sources&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="df8b748fb9dc2362fdfbf6dbfd75b2120c4e8c77" translate="yes" xml:space="preserve">
          <source>void QOpenGLDebugLogger::disableMessages(const &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;GLuint&amp;gt; &amp;amp;</source>
          <target state="translated">void QOpenGLDebugLogger :: disableMessages (const &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt; &amp;lt;GLuint&amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="2883d119a14218992d1382e05193639d713da60b" translate="yes" xml:space="preserve">
          <source>void QOpenGLDebugLogger::enableMessages(&lt;a href=&quot;qopengldebugmessage#Source-enum&quot;&gt;QOpenGLDebugMessage::Sources&lt;/a&gt;</source>
          <target state="translated">void QOpenGLDebugLogger :: enableMessages ( &lt;a href=&quot;qopengldebugmessage#Source-enum&quot;&gt;QOpenGLDebugMessage :: Sources&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e60d5b3b3e5814af770c2932899e242a9a41c779" translate="yes" xml:space="preserve">
          <source>void QOpenGLDebugLogger::enableMessages(const &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;GLuint&amp;gt; &amp;amp;</source>
          <target state="translated">void QOpenGLDebugLogger :: enableMessages (const &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt; &amp;lt;GLuint&amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="27b3d514976710c5d8b86058c8fb3e07732cc78c" translate="yes" xml:space="preserve">
          <source>void QOpenGLDebugLogger::popGroup()</source>
          <target state="translated">anular QOpenGLDebugLogger::popGroup()</target>
        </trans-unit>
        <trans-unit id="cc51f3807e8f1a331d9bf8f3969ca288347d7c42" translate="yes" xml:space="preserve">
          <source>void QOpenGLDebugLogger::pushGroup(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QOpenGLDebugLogger :: pushGroup (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="3cb05621a1b5d01ac2674ed8ed2f7ed1e7179cf2" translate="yes" xml:space="preserve">
          <source>void QOpenGLDebugMessage::swap(&lt;a href=&quot;qopengldebugmessage#QOpenGLDebugMessage&quot;&gt;QOpenGLDebugMessage&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QOpenGLDebugMessage :: swap ( &lt;a href=&quot;qopengldebugmessage#QOpenGLDebugMessage&quot;&gt;QOpenGLDebugMessage&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="e6ddf77395a6a427faa360c4fbdd669867e663c2" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glActiveShaderProgram(GLuint</source>
          <target state="translated">void QOpenGLExtraFunctions::glActiveShaderProgram(GLuint</target>
        </trans-unit>
        <trans-unit id="189a7d516abad896c1daf1cc0c7005a3b3c82c0c" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glBeginQuery(GLenum</source>
          <target state="translated">void QOpenGLExtraFunctions::glBeginQuery(GLenum</target>
        </trans-unit>
        <trans-unit id="922b2edd4f220863d62bf4cbea81d8926b593bd2" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glBeginTransformFeedback(GLenum</source>
          <target state="translated">void QOpenGLExtraFunctions::glBeginTransformFeedback(GLenum</target>
        </trans-unit>
        <trans-unit id="fab426b2b8ef8bfc973e7ca5ef7278f5e2515dd5" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glBindBufferBase(GLenum</source>
          <target state="translated">void QOpenGLExtraFunctions::glBindBufferBase(GLenum</target>
        </trans-unit>
        <trans-unit id="f976fb6e64969d876ecd154fa50395abe648d875" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glBindBufferRange(GLenum</source>
          <target state="translated">void QOpenGLExtraFunctions::glBindBufferRange(GLenum</target>
        </trans-unit>
        <trans-unit id="e433b0d05bb48b216d330bc377ea1681bdd0d593" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glBindImageTexture(GLuint</source>
          <target state="translated">void QOpenGLExtraFunctions::glBindImageTexture(GLuint</target>
        </trans-unit>
        <trans-unit id="e2550806bd5b49c6b7b56404e38d01b7c048352c" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glBindProgramPipeline(GLuint</source>
          <target state="translated">void QOpenGLExtraFunctions::glBindProgramPipeline(GLuint</target>
        </trans-unit>
        <trans-unit id="e7ef220a3adc402ed6109426f3fb7cd3010a6922" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glBindSampler(GLuint</source>
          <target state="translated">void QOpenGLExtraFunctions::glBindSampler(GLuint</target>
        </trans-unit>
        <trans-unit id="8d0b2494bdc21302045ea6225685ad4886a17e7b" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glBindTransformFeedback(GLenum</source>
          <target state="translated">void QOpenGLExtraFunctions::glBindTransformFeedback(GLenum</target>
        </trans-unit>
        <trans-unit id="463f91cfb9812c9009c9f9ddbb863095ed1de65b" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glBindVertexArray(GLuint</source>
          <target state="translated">void QOpenGLExtraFunctions::glBindVertexArray(GLuint</target>
        </trans-unit>
        <trans-unit id="4e33fee392419811c735e45422df34ce9030f0bb" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glBindVertexBuffer(GLuint</source>
          <target state="translated">anular las funciones de QOpenGLExtraFunctions::glBindVertexBuffer(GLuint</target>
        </trans-unit>
        <trans-unit id="11e0050f165c07753d7ecefed75b55fc0006a52d" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glBlendBarrier()</source>
          <target state="translated">anular las funciones de QOpenGLExtraFunctions::glBlendBarrier()</target>
        </trans-unit>
        <trans-unit id="5e66b73b7a00bf8c3fb8f4e4fd37df8f816eaab2" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glBlendEquationSeparatei(GLuint</source>
          <target state="translated">void QOpenGLExtraFunctions::glBlendEquationSeparatei(GLuint</target>
        </trans-unit>
        <trans-unit id="f513919b366607daeb62235f8b0de0cc4bf0ceaa" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glBlendEquationi(GLuint</source>
          <target state="translated">void QOpenGLExtraFunctions::glBlendEquationi(GLuint</target>
        </trans-unit>
        <trans-unit id="148a735a9cfbf73fa2dc2bde157677a28926d843" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glBlendFuncSeparatei(GLuint</source>
          <target state="translated">void QOpenGLExtraFunctions::glBlendFuncSeparatei(GLuint</target>
        </trans-unit>
        <trans-unit id="05f09b3933cb221dd2b2ccd107cbcb7601900246" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glBlendFunci(GLuint</source>
          <target state="translated">void QOpenGLExtraFunctions::glBlendFunci(GLuint</target>
        </trans-unit>
        <trans-unit id="954041c3eaab13af62e055c433bf3a6ab2883010" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glBlitFramebuffer(GLint</source>
          <target state="translated">void QOpenGLExtraFunctions::glBlitFramebuffer(GLint</target>
        </trans-unit>
        <trans-unit id="7f937fc985dfb02a4a701ff3c614c0db75da8caa" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glClearBufferfi(GLenum</source>
          <target state="translated">void QOpenGLExtraFunctions::glClearBufferfi(GLenum</target>
        </trans-unit>
        <trans-unit id="6dad2dc0d64f59e30b050fe20c5cf61e59264d9d" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glClearBufferfv(GLenum</source>
          <target state="translated">void QOpenGLExtraFunctions::glClearBufferfv(GLenum</target>
        </trans-unit>
        <trans-unit id="a2ace12b1fb373f099e92eb82755b928431e8ba2" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glClearBufferiv(GLenum</source>
          <target state="translated">void QOpenGLExtraFunctions::glClearBufferiv(GLenum</target>
        </trans-unit>
        <trans-unit id="a9a56d8335f6a6f6b7505f6acb566f26bc05c516" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glClearBufferuiv(GLenum</source>
          <target state="translated">void QOpenGLExtraFunctions::glClearBufferuiv(GLenum</target>
        </trans-unit>
        <trans-unit id="8c1fe878071de12b82b707ea555cd594cd97d390" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glColorMaski(GLuint</source>
          <target state="translated">void QOpenGLExtraFunctions::glColorMaski(GLuint</target>
        </trans-unit>
        <trans-unit id="b1b5d89aa663518fea8eac7962a0dd5f311b217c" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glCompressedTexImage3D(GLenum</source>
          <target state="translated">void QOpenGLExtraFunctions::glCompressedTexImage3D(GLenum</target>
        </trans-unit>
        <trans-unit id="aba8fc205423086fa93bd7640f90ac72016e7ca4" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glCompressedTexSubImage3D(GLenum</source>
          <target state="translated">void QOpenGLExtraFunctions::glCompressedTexSubImage3D(GLenum</target>
        </trans-unit>
        <trans-unit id="3a92f46d6584c0eaa22c6a95a3744a3c48b49e67" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glCopyBufferSubData(GLenum</source>
          <target state="translated">void QOpenGLExtraFunctions::glCopyBufferSubData(GLenum</target>
        </trans-unit>
        <trans-unit id="b578e5a8035ec8c4831fb8cb14608c30d9a4d161" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glCopyImageSubData(GLuint</source>
          <target state="translated">void QOpenGLExtraFunctions::glCopyImageSubData(GLuint</target>
        </trans-unit>
        <trans-unit id="a16494b898d97f6769a09e15129120c928bf83a6" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glCopyTexSubImage3D(GLenum</source>
          <target state="translated">void QOpenGLExtraFunctions::glCopyTexSubImage3D(GLenum</target>
        </trans-unit>
        <trans-unit id="475e4bd7228e44f8f6dff4747e3c9ef3d1ce206a" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glDebugMessageCallback(GLDEBUGPROC</source>
          <target state="translated">void QOpenGLExtraFunctions::glDebugMessageCallback(GLDEBUGPROC</target>
        </trans-unit>
        <trans-unit id="fa4922447d2cd52997380ceb91ecd3edba4d9d0f" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glDebugMessageControl(GLenum</source>
          <target state="translated">void QOpenGLExtraFunctions::glDebugMessageControl(GLenum</target>
        </trans-unit>
        <trans-unit id="a1ecec6fc13e03478841214924948460a750dd33" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glDebugMessageInsert(GLenum</source>
          <target state="translated">void QOpenGLExtraFunctions::glDebugMessageInsert(GLenum</target>
        </trans-unit>
        <trans-unit id="8616d4f237c9f513c6b732c3992eed54972c75fc" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glDeleteProgramPipelines(GLsizei</source>
          <target state="translated">anular las funciones de QOpenGLExtraFunctions::glDeleteProgramPipelines(GLsizei</target>
        </trans-unit>
        <trans-unit id="abcf4457478eddf554e86799e008d73587236988" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glDeleteQueries(GLsizei</source>
          <target state="translated">anular las funciones de QOpenGLExtraFunctions::glDeleteQueries(GLsizei</target>
        </trans-unit>
        <trans-unit id="e8e852cc50f67e72f54237f6ae5d1dc41908595e" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glDeleteSamplers(GLsizei</source>
          <target state="translated">anular las funciones de QOpenGLExtraFunctions::glBorrarMuestras(GLsizei</target>
        </trans-unit>
        <trans-unit id="836f6aa36821ce6548ebe3c6ac8b3a81cc387df8" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glDeleteSync(GLsync</source>
          <target state="translated">anular las funciones de QOpenGLExtraFunctions::glDeleteSync(GLsync</target>
        </trans-unit>
        <trans-unit id="f02b658f9df3a58afb6af5925656d2d3754e08ed" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glDeleteTransformFeedbacks(GLsizei</source>
          <target state="translated">anular las funciones de QOpenGLExtraFunctions::glDeleteTransformFeedbacks(GLsizei</target>
        </trans-unit>
        <trans-unit id="cf5e91b12658b23fca2c97f6624fef677a5a20c4" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glDeleteVertexArrays(GLsizei</source>
          <target state="translated">anular las funciones de QOpenGLExtraFunctions::glDeleteVertexArrays(GLsizei</target>
        </trans-unit>
        <trans-unit id="99ddef588b99c249e2dcb9f41eacc61caf01e5f5" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glDisablei(GLenum</source>
          <target state="translated">anular las funciones de QOpenGLExtraFunctions::glDisablei(GLenum</target>
        </trans-unit>
        <trans-unit id="ee55a7efc719395de000b744513b8a6b853b75a7" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glDispatchCompute(GLuint</source>
          <target state="translated">anular las funciones de QOpenGLExtraFunctions::glDispatchCompute(GLuint</target>
        </trans-unit>
        <trans-unit id="2ec2a88741f25795e12af3e6989a4e8aeba2d0c8" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glDispatchComputeIndirect(GLintptr</source>
          <target state="translated">anular las funciones de QOpenGLExtra::glDispatchComputeIndirect(GLintptr</target>
        </trans-unit>
        <trans-unit id="cdedf290b1648cc73c2a2aeb6f2c5406e9d1ce0a" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glDrawArraysIndirect(GLenum</source>
          <target state="translated">void QOpenGLExtraFunctions::glDrawArraysIndirectos(GLenum</target>
        </trans-unit>
        <trans-unit id="45f0bb37614f4fe7a6f45e20b807e7003a3ec7ae" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glDrawArraysInstanced(GLenum</source>
          <target state="translated">void QOpenGLExtraFunctions::glDrawArraysInstanced(GLenum</target>
        </trans-unit>
        <trans-unit id="8b15b37fa622c0e8d388ebac7a9504ff2f6f925a" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glDrawBuffers(GLsizei</source>
          <target state="translated">anular las funciones de QOpenGLExtraFunctions::glDrawBuffers(GLsizei</target>
        </trans-unit>
        <trans-unit id="c726b289097824d392229d630c03ffd0f40edf19" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glDrawElementsBaseVertex(GLenum</source>
          <target state="translated">void QOpenGLExtraFunctions::glDrawElementsBaseVertex(GLenum</target>
        </trans-unit>
        <trans-unit id="aa5a31fd627c22bf2c1a92dde96ecf66ea58a814" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glDrawElementsIndirect(GLenum</source>
          <target state="translated">void QOpenGLExtraFunctions::glDrawElementsIndirect(GLenum</target>
        </trans-unit>
        <trans-unit id="e5bef659a755d712245983a39491c95c6b8d036c" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glDrawElementsInstanced(GLenum</source>
          <target state="translated">void QOpenGLExtraFunctions::glDrawElementsInstanced(GLenum</target>
        </trans-unit>
        <trans-unit id="6c8e79e39f2eaf523f9ddec457ca8534d7e36d2a" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glDrawElementsInstancedBaseVertex(GLenum</source>
          <target state="translated">void QOpenGLExtraFunctions::glDrawElementsInstancedBaseVertex(GLenum</target>
        </trans-unit>
        <trans-unit id="1345da2ca058a56e41ff75fdc3c395c340339f61" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glDrawRangeElements(GLenum</source>
          <target state="translated">void QOpenGLExtraFunctions::glDrawRangeElements(GLenum</target>
        </trans-unit>
        <trans-unit id="d4c3f11c03188462be5dba3b45a7fdd00bac758f" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glDrawRangeElementsBaseVertex(GLenum</source>
          <target state="translated">void QOpenGLExtraFunctions::glDrawRangeElementsBaseVertex(GLenum</target>
        </trans-unit>
        <trans-unit id="fc6a12c1fb609eb2d300f83c3d9b927ff7c9a896" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glEnablei(GLenum</source>
          <target state="translated">anular las funciones de QOpenGLExtraFunctions::glEnablei(GLenum</target>
        </trans-unit>
        <trans-unit id="e3ee8d7898119406a0a5932fb52568d0dfb2950e" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glEndQuery(GLenum</source>
          <target state="translated">void QOpenGLExtraFunctions::glEndQuery(GLenum</target>
        </trans-unit>
        <trans-unit id="f226961bd9ab10efcb41a6e214cbc6f34e860512" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glEndTransformFeedback()</source>
          <target state="translated">void QOpenGLExtraFunctions::glEndTransformFeedback()</target>
        </trans-unit>
        <trans-unit id="f2f8ed0ba5822aa5d52bada54063f24031552923" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glFlushMappedBufferRange(GLenum</source>
          <target state="translated">void QOpenGLExtraFunctions::glFlushMappedBufferRange(GLenum</target>
        </trans-unit>
        <trans-unit id="f72a24cd896683da2ccd7b0f1a167e2befc58b25" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glFramebufferParameteri(GLenum</source>
          <target state="translated">void QOpenGLExtraFunctions::glFramebufferParameteri(GLenum</target>
        </trans-unit>
        <trans-unit id="efbcc763f69df7dcc081d4894a0c662f8a7b2724" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glFramebufferTexture(GLenum</source>
          <target state="translated">void QOpenGLExtraFunctions::glFramebufferTexture(GLenum</target>
        </trans-unit>
        <trans-unit id="f00e774e809cc65f51100741a3fb473c32622bda" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glFramebufferTextureLayer(GLenum</source>
          <target state="translated">void QOpenGLExtraFunctions::glFramebufferTextureLayer(GLenum</target>
        </trans-unit>
        <trans-unit id="f7f3c6fefeacd6f58eb008dd24bf861b08f33a6c" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glGenProgramPipelines(GLsizei</source>
          <target state="translated">void QOpenGLExtraFunctions::glGenProgramPipelines(GLsizei</target>
        </trans-unit>
        <trans-unit id="0a53f8f77e244504f59c0e967d5f685777dec5b0" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glGenQueries(GLsizei</source>
          <target state="translated">anular las funciones de QOpenGLExtraFunctions::glGenQueries(GLsizei</target>
        </trans-unit>
        <trans-unit id="8cfe54f970d8bae293c3fa01163a4764d1c581d0" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glGenSamplers(GLsizei</source>
          <target state="translated">anular las funciones de QOpenGLExtraFunctions::glGenSamplers(GLsizei</target>
        </trans-unit>
        <trans-unit id="3538e59e7dedbff24e72dde8526598de431fb995" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glGenTransformFeedbacks(GLsizei</source>
          <target state="translated">void QOpenGLExtraFunctions::glGenTransformFeedbacks(GLsizei</target>
        </trans-unit>
        <trans-unit id="045c2275d1e10b3c764011ff326d956014f8a1c4" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glGenVertexArrays(GLsizei</source>
          <target state="translated">anular las funciones de QOpenGLExtraFunctions::glGenVertexArrays(GLsizei</target>
        </trans-unit>
        <trans-unit id="a58a08fc7df99598a32fe61c2c7e5330df828aca" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glGetActiveUniformBlockName(GLuint</source>
          <target state="translated">void QOpenGLExtraFunctions::glGetActiveUniformBlockName(GLuint</target>
        </trans-unit>
        <trans-unit id="2f341b2a2751987a7ca1502cf82a234e461ab7a6" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glGetActiveUniformBlockiv(GLuint</source>
          <target state="translated">void QOpenGLExtraFunctions::glGetActiveUniformBlockiv(GLuint</target>
        </trans-unit>
        <trans-unit id="5b59acd81e8b4a0a1d40e42e66e59bbc192f437f" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glGetActiveUniformsiv(GLuint</source>
          <target state="translated">void QOpenGLExtraFunctions::glGetActiveUniformsiv(GLuint</target>
        </trans-unit>
        <trans-unit id="ef7eb8080169e555c0d6444c5065f107159bd750" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glGetBooleani_v(GLenum</source>
          <target state="translated">void QOpenGLExtraFunctions::glGetBooleani_v(GLenum</target>
        </trans-unit>
        <trans-unit id="8b4106826b4fe52bdb96a174cb76e1012003265b" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glGetBufferParameteri64v(GLenum</source>
          <target state="translated">void QOpenGLExtraFunctions::glGetBufferParameteri64v(GLenum</target>
        </trans-unit>
        <trans-unit id="82291ba17b148e13c0d93bb5b98d444b35a47e91" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glGetBufferPointerv(GLenum</source>
          <target state="translated">void QOpenGLExtraFunctions::glGetBufferPointerv(GLenum</target>
        </trans-unit>
        <trans-unit id="a7ce6dba1843da5a835cca074697cb4662dd5615" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glGetFramebufferParameteriv(GLenum</source>
          <target state="translated">void QOpenGLExtraFunctions::glGetFramebufferParameteriv(GLenum</target>
        </trans-unit>
        <trans-unit id="2fcab0dc8574acd564195eecf1d49ec1f42a4216" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glGetInteger64i_v(GLenum</source>
          <target state="translated">void QOpenGLExtraFunctions::glGetInteger64i_v(GLenum</target>
        </trans-unit>
        <trans-unit id="a30b47c51efc08d093a038f570260bbad99ddd62" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glGetInteger64v(GLenum</source>
          <target state="translated">void QOpenGLExtraFunctions::glGetInteger64v(GLenum</target>
        </trans-unit>
        <trans-unit id="1d35065d2ca962a3530a316929b679db14aeec97" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glGetIntegeri_v(GLenum</source>
          <target state="translated">void QOpenGLExtraFunctions::glGetIntegeri_v(GLenum</target>
        </trans-unit>
        <trans-unit id="9e6b4397532b1db00128eb4d58b7e335a29b9e67" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glGetInternalformativ(GLenum</source>
          <target state="translated">void QOpenGLExtraFunctions::glGetInternalformativ(GLenum</target>
        </trans-unit>
        <trans-unit id="462ffaa72c46bec214dd3175e39febd948f13706" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glGetMultisamplefv(GLenum</source>
          <target state="translated">void QOpenGLExtraFunctions::glGetMultisamplefv(GLenum</target>
        </trans-unit>
        <trans-unit id="cf10c8c14ac794850e5491c48e6c03262311daa2" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glGetObjectLabel(GLenum</source>
          <target state="translated">void QOpenGLExtraFunctions::glGetObjectLabel(GLenum</target>
        </trans-unit>
        <trans-unit id="12b425d4ca713d005c9c24b95aeb276dcecafa29" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glGetObjectPtrLabel(const void *</source>
          <target state="translated">void QOpenGLExtraFunctions::glGetObjectPtrLabel(const void *</target>
        </trans-unit>
        <trans-unit id="3d99af8fea4a8c1cba51fc17614d6902c21763e7" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glGetPointerv(GLenum</source>
          <target state="translated">anular las funciones de QOpenGLExtraFunctions::glGetPointerv(GLenum</target>
        </trans-unit>
        <trans-unit id="4647a0d1036a77e3e45f21627d16274fa2280d73" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glGetProgramBinary(GLuint</source>
          <target state="translated">void QOpenGLExtraFunctions::glGetProgramBinary(GLuint</target>
        </trans-unit>
        <trans-unit id="c60cb42cdc950e620d4e58caeb04ad6b44ed7cad" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glGetProgramInterfaceiv(GLuint</source>
          <target state="translated">void QOpenGLExtraFunctions::glGetProgramInterfaceiv(GLuint</target>
        </trans-unit>
        <trans-unit id="871159b78e7bf1d2998dcf813408831efa140305" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glGetProgramPipelineInfoLog(GLuint</source>
          <target state="translated">void QOpenGLExtraFunctions::glGetProgramPipelineInfoLog(GLuint</target>
        </trans-unit>
        <trans-unit id="646c3d9bfea15164315abec12038a903292a4bf8" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glGetProgramPipelineiv(GLuint</source>
          <target state="translated">void QOpenGLExtraFunctions::glGetProgramPipelineiv(GLuint</target>
        </trans-unit>
        <trans-unit id="13080c7143bb353d802130e6c951e7f9775ffcb4" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glGetProgramResourceName(GLuint</source>
          <target state="translated">anular las funciones de QOpenGLExtraFunctions::glGetProgramResourceName(GLuint</target>
        </trans-unit>
        <trans-unit id="6e6345954ba8712dabc0f8b9cba2db1f986aace9" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glGetProgramResourceiv(GLuint</source>
          <target state="translated">void QOpenGLExtraFunctions::glGetProgramResourceiv(GLuint</target>
        </trans-unit>
        <trans-unit id="0c50f99b95cf6332cd9d7887518085844cd7d256" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glGetQueryObjectuiv(GLuint</source>
          <target state="translated">void QOpenGLExtraFunctions::glGetQueryObjectuiv(GLuint</target>
        </trans-unit>
        <trans-unit id="8251e6c0d50931e9a498eaa31169ac829f4878b6" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glGetQueryiv(GLenum</source>
          <target state="translated">void QOpenGLExtraFunctions::glGetQueryiv(GLenum</target>
        </trans-unit>
        <trans-unit id="e2a7e44c70a008dd61ec1dd9704d2b8bb07f37ca" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glGetSamplerParameterIiv(GLuint</source>
          <target state="translated">void QOpenGLExtraFunctions::glGetSamplerParameterIiv(GLuint</target>
        </trans-unit>
        <trans-unit id="4aa71047d1f45d2be4aedcfcc5d23996eddb8ec6" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glGetSamplerParameterIuiv(GLuint</source>
          <target state="translated">void QOpenGLExtraFunctions::glGetSamplerParameterIuiv(GLuint</target>
        </trans-unit>
        <trans-unit id="c03261d361059eab482e915b17b0e95bbf3a0e27" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glGetSamplerParameterfv(GLuint</source>
          <target state="translated">void QOpenGLExtraFunctions::glGetSamplerParameterfv(GLuint</target>
        </trans-unit>
        <trans-unit id="76b022a639637f776cc5454462ac0144cb770895" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glGetSamplerParameteriv(GLuint</source>
          <target state="translated">void QOpenGLExtraFunctions::glGetSamplerParameteriv(GLuint</target>
        </trans-unit>
        <trans-unit id="6b17f44ba88dc436012926f39bf7f78bbc83d478" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glGetSynciv(GLsync</source>
          <target state="translated">void QOpenGLExtraFunctions::glGetSynciv(GLsync</target>
        </trans-unit>
        <trans-unit id="eb9163d7b39edea09d12f7228bb731eb0fa59356" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glGetTexLevelParameterfv(GLenum</source>
          <target state="translated">void QOpenGLExtraFunctions::glGetTexLevelParameterfv(GLenum</target>
        </trans-unit>
        <trans-unit id="0d7e7ca261ad770bfebe98be5071200d52a27dfb" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glGetTexLevelParameteriv(GLenum</source>
          <target state="translated">void QOpenGLExtraFunctions::glGetTexLevelParameteriv(GLenum</target>
        </trans-unit>
        <trans-unit id="36cfbac5bd5ab868d306cce7999df7b59de83af2" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glGetTexParameterIiv(GLenum</source>
          <target state="translated">void QOpenGLExtraFunctions::glGetTexParameterIiv(GLenum</target>
        </trans-unit>
        <trans-unit id="b7e735d8b52a2764c8279992ae0cba9f0081301d" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glGetTexParameterIuiv(GLenum</source>
          <target state="translated">void QOpenGLExtraFunctions::glGetTexParameterIuiv(GLenum</target>
        </trans-unit>
        <trans-unit id="019912aabd9bb8bdfac4b00faae7b5442098c953" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glGetTransformFeedbackVarying(GLuint</source>
          <target state="translated">void QOpenGLExtraFunctions::glGetTransformFeedbackVarying(GLuint</target>
        </trans-unit>
        <trans-unit id="e101bdb9b3f60950216a9fe5a12e92e6a3f54f3e" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glGetUniformIndices(GLuint</source>
          <target state="translated">void QOpenGLExtraFunctions::glGetUniformIndices(GLuint</target>
        </trans-unit>
        <trans-unit id="38de989b2defcbff14941a68807e3816b3bb24cf" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glGetUniformuiv(GLuint</source>
          <target state="translated">void QOpenGLExtraFunctions::glGetUniformuiv(GLuint</target>
        </trans-unit>
        <trans-unit id="178da5a5ceb51ab57456d1f7d53f80f493c51567" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glGetVertexAttribIiv(GLuint</source>
          <target state="translated">anular las funciones de QOpenGLExtraFunctions::glGetVertexAttribIiv(GLuint</target>
        </trans-unit>
        <trans-unit id="a4a5855e45ff76c68bd9e65f2ffa13619402c4ea" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glGetVertexAttribIuiv(GLuint</source>
          <target state="translated">void QOpenGLExtraFunctions::glGetVertexAttribIuiv(GLuint</target>
        </trans-unit>
        <trans-unit id="0d419ac46db0bfbff3deb218bb29b467d2b56c72" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glGetnUniformfv(GLuint</source>
          <target state="translated">void QOpenGLExtraFunctions::glGetnUniformfv(GLuint</target>
        </trans-unit>
        <trans-unit id="cfa481de7c98cef7f5ca7b3a7d5f9c3991675a9e" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glGetnUniformiv(GLuint</source>
          <target state="translated">void QOpenGLExtraFunctions::glGetnUniformiv(GLuint</target>
        </trans-unit>
        <trans-unit id="696a7f5f40e79d7fa690b64eac21d5a424233aac" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glGetnUniformuiv(GLuint</source>
          <target state="translated">void QOpenGLExtraFunctions::glGetnUniformuiv(GLuint</target>
        </trans-unit>
        <trans-unit id="8e3b505593e4f282ab7edb8daf9b327a9c9068ef" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glInvalidateFramebuffer(GLenum</source>
          <target state="translated">anular QOpenGLExtraFunctions::glInvalidateFramebuffer(GLenum</target>
        </trans-unit>
        <trans-unit id="dce5a035cce4e8df781b1abcefc86434480dc0b4" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glInvalidateSubFramebuffer(GLenum</source>
          <target state="translated">anular QOpenGLExtraFunctions::glInvalidateSubFramebuffer(GLenum</target>
        </trans-unit>
        <trans-unit id="6bc34093ef0873030ef5b25ba3a75868eb3a9a83" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glMemoryBarrier(GLbitfield</source>
          <target state="translated">void QOpenGLExtraFunctions::glMemoryBarrier(GLbitfield</target>
        </trans-unit>
        <trans-unit id="97e97ac46b96352cb03f8d6b8a7f64dab8cd5acd" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glMemoryBarrierByRegion(GLbitfield</source>
          <target state="translated">void QOpenGLExtraFunctions::glMemoryBarrierByRegion(GLbitfield</target>
        </trans-unit>
        <trans-unit id="82550fad658172a4136188bd6a5f613e14add369" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glMinSampleShading(GLfloat</source>
          <target state="translated">void QOpenGLExtraFunctions::glMinSampleShading(GLfloat</target>
        </trans-unit>
        <trans-unit id="fa3ae1be8a9ad9d14cb42f1cc39051bcdefa44fe" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glObjectLabel(GLenum</source>
          <target state="translated">anular las funciones de QOpenGLExtraFunctions::glObjectLabel(GLenum</target>
        </trans-unit>
        <trans-unit id="e25b903152a15809c4420f0d68ebc39f4d67d939" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glObjectPtrLabel(const void *</source>
          <target state="translated">void QOpenGLExtraFunctions::glObjectPtrLabel(const void *</target>
        </trans-unit>
        <trans-unit id="3976efbf53ad48fd3098875c409f62e506d2d605" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glPatchParameteri(GLenum</source>
          <target state="translated">void QOpenGLExtraFunctions::glPatchParameteri(GLenum</target>
        </trans-unit>
        <trans-unit id="44cbc6b2712e4050bb2e50a85f595765674c1eb2" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glPauseTransformFeedback()</source>
          <target state="translated">void QOpenGLExtraFunctions::glPauseTransformFeedback()</target>
        </trans-unit>
        <trans-unit id="7658cf50143ea0581f10330ca6dca66e3413dc0e" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glPopDebugGroup()</source>
          <target state="translated">anular las funciones de QOpenGLExtraFunctions::glPopDebugGroup()</target>
        </trans-unit>
        <trans-unit id="2a9103466258c0be2324999298f45078dc35bbc1" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glPrimitiveBoundingBox(GLfloat</source>
          <target state="translated">void QOpenGLExtraFunctions::glPrimitiveBoundingBox(GLfloat</target>
        </trans-unit>
        <trans-unit id="137bebc56cad7e7e85d84362a7938885d445ae49" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glProgramBinary(GLuint</source>
          <target state="translated">void QOpenGLExtraFunctions::glProgramBinary(GLuint</target>
        </trans-unit>
        <trans-unit id="7ba563864f85454b158955ccecd3c8206d49e15b" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glProgramParameteri(GLuint</source>
          <target state="translated">void QOpenGLExtraFunctions::glProgramParameteri(GLuint)</target>
        </trans-unit>
        <trans-unit id="b884ed977331dfa161b933f2237b0e5dab4f1567" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glProgramUniform1f(GLuint</source>
          <target state="translated">void QOpenGLExtraFunctions::glProgramUniform1f(GLuint</target>
        </trans-unit>
        <trans-unit id="69fca98992b51da2f41dc8602ba3122a21c2d48b" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glProgramUniform1fv(GLuint</source>
          <target state="translated">void QOpenGLExtraFunctions::glProgramUniform1fv(GLuint</target>
        </trans-unit>
        <trans-unit id="558affbe94ecf63e9b39581ce374d95dcf2008ae" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glProgramUniform1i(GLuint</source>
          <target state="translated">void QOpenGLExtraFunctions::glProgramUniform1i(GLuint</target>
        </trans-unit>
        <trans-unit id="1078eb96f2da0f8d547a1dd7f69b374c5812670f" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glProgramUniform1iv(GLuint</source>
          <target state="translated">void QOpenGLExtraFunctions::glProgramUniform1iv(GLuint</target>
        </trans-unit>
        <trans-unit id="27cd67a8eb4cb64a8b8de468949173792ea8833d" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glProgramUniform1ui(GLuint</source>
          <target state="translated">void QOpenGLExtraFunctions::glProgramUniform1ui(GLuint</target>
        </trans-unit>
        <trans-unit id="cbc7f83cc0130a6699f2975fc45afbc6c4d0f1a4" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glProgramUniform1uiv(GLuint</source>
          <target state="translated">void QOpenGLExtraFunctions::glProgramUniform1uiv(GLuint</target>
        </trans-unit>
        <trans-unit id="c037a4cd48cdeacaf7f8ba711d284640b1bda4f1" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glProgramUniform2f(GLuint</source>
          <target state="translated">void QOpenGLExtraFunctions::glProgramUniform2f(GLuint</target>
        </trans-unit>
        <trans-unit id="da52b44819ee55cdb42d66e4cee52dea90b8c612" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glProgramUniform2fv(GLuint</source>
          <target state="translated">void QOpenGLExtraFunctions::glProgramUniform2fv(GLuint</target>
        </trans-unit>
        <trans-unit id="dc6a8b2dd0e3e3f2deae8e30fa80dfb51da83db5" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glProgramUniform2i(GLuint</source>
          <target state="translated">void QOpenGLExtraFunctions::glProgramUniform2i(GLuint</target>
        </trans-unit>
        <trans-unit id="2b98746899ceb1e840f3ecc3ec796f219a8fd4c4" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glProgramUniform2iv(GLuint</source>
          <target state="translated">void QOpenGLExtraFunctions::glProgramUniform2iv(GLuint</target>
        </trans-unit>
        <trans-unit id="771464bd3127abd84942684def315a51f1e17430" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glProgramUniform2ui(GLuint</source>
          <target state="translated">void QOpenGLExtraFunctions::glProgramUniform2ui(GLuint</target>
        </trans-unit>
        <trans-unit id="6c201f352b4910fb29f4678e929a2681e19c5e71" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glProgramUniform2uiv(GLuint</source>
          <target state="translated">void QOpenGLExtraFunctions::glProgramUniform2uiv(GLuint</target>
        </trans-unit>
        <trans-unit id="34a41f2305f63a682bed75782b1b463ecd82b512" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glProgramUniform3f(GLuint</source>
          <target state="translated">void QOpenGLExtraFunctions::glProgramUniform3f(GLuint</target>
        </trans-unit>
        <trans-unit id="4f96a8efa07f9a28a3448e5af80984bb325fb495" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glProgramUniform3fv(GLuint</source>
          <target state="translated">void QOpenGLExtraFunctions::glProgramUniform3fv(GLuint</target>
        </trans-unit>
        <trans-unit id="1b15520ee8cd9a67b7cb0245d5cafb96c52cd01e" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glProgramUniform3i(GLuint</source>
          <target state="translated">void QOpenGLExtraFunctions::glProgramUniform3i(GLuint</target>
        </trans-unit>
        <trans-unit id="2fbeabb369eb4df73fa591263eb16d9a0f18be82" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glProgramUniform3iv(GLuint</source>
          <target state="translated">void QOpenGLExtraFunctions::glProgramUniform3iv(GLuint</target>
        </trans-unit>
        <trans-unit id="9f9be238d6f605ed689ff845a418249d22bd21f7" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glProgramUniform3ui(GLuint</source>
          <target state="translated">void QOpenGLExtraFunctions::glProgramUniform3ui(GLuint</target>
        </trans-unit>
        <trans-unit id="357e14a3356b42b5458caf6c827391da9798b906" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glProgramUniform3uiv(GLuint</source>
          <target state="translated">void QOpenGLExtraFunctions::glProgramUniform3uiv(GLuint</target>
        </trans-unit>
        <trans-unit id="7f28d274f17dc006d31f37e3a76c1dc194e64dc3" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glProgramUniform4f(GLuint</source>
          <target state="translated">void QOpenGLExtraFunctions::glProgramUniform4f(GLuint</target>
        </trans-unit>
        <trans-unit id="015ab341a7513d51276973beb401232525816694" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glProgramUniform4fv(GLuint</source>
          <target state="translated">void QOpenGLExtraFunctions::glProgramUniform4fv(GLuint</target>
        </trans-unit>
        <trans-unit id="e01165998eb63fedc43126e1397168689c5e8f9a" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glProgramUniform4i(GLuint</source>
          <target state="translated">void QOpenGLExtraFunctions::glProgramUniform4i(GLuint</target>
        </trans-unit>
        <trans-unit id="64451df51ffe209744dd0e1b5488c34eb014dfef" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glProgramUniform4iv(GLuint</source>
          <target state="translated">void QOpenGLExtraFunctions::glProgramUniform4iv(GLuint</target>
        </trans-unit>
        <trans-unit id="e31edbd372d50603c229796db28eeeecbb9b1776" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glProgramUniform4ui(GLuint</source>
          <target state="translated">void QOpenGLExtraFunctions::glProgramUniform4ui(GLuint</target>
        </trans-unit>
        <trans-unit id="75b49ab3b96b524a78c42529fa9da71d41fedaa5" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glProgramUniform4uiv(GLuint</source>
          <target state="translated">void QOpenGLExtraFunctions::glProgramUniform4uiv(GLuint</target>
        </trans-unit>
        <trans-unit id="cc68abfb41be3bc53852cfdabb82428cf18bc39d" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glProgramUniformMatrix2fv(GLuint</source>
          <target state="translated">void QOpenGLExtraFunctions::glProgramUniformMatrix2fv(GLuint</target>
        </trans-unit>
        <trans-unit id="45a1958914a4ca9b67a936cf2a8989f69128cf69" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glProgramUniformMatrix2x3fv(GLuint</source>
          <target state="translated">void QOpenGLExtraFunctions::glProgramUniformMatrix2x3fv(GLuint</target>
        </trans-unit>
        <trans-unit id="bfc6a813296aab565388f746b978fc79207ba58f" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glProgramUniformMatrix2x4fv(GLuint</source>
          <target state="translated">void QOpenGLExtraFunctions::glProgramUniformMatrix2x4fv(GLuint</target>
        </trans-unit>
        <trans-unit id="79d9e052a182081e329eea5bf37f13e570cf51dd" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glProgramUniformMatrix3fv(GLuint</source>
          <target state="translated">void QOpenGLExtraFunctions::glProgramUniformMatrix3fv(GLuint</target>
        </trans-unit>
        <trans-unit id="67ef217a6dd6b603dd31e94e13fd4d3a83a09548" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glProgramUniformMatrix3x2fv(GLuint</source>
          <target state="translated">void QOpenGLExtraFunctions::glProgramUniformMatrix3x2fv(GLuint</target>
        </trans-unit>
        <trans-unit id="be24f36ab509e682dfdbccebc2829aa654e977f4" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glProgramUniformMatrix3x4fv(GLuint</source>
          <target state="translated">void QOpenGLExtraFunctions::glProgramUniformMatrix3x4fv(GLuint</target>
        </trans-unit>
        <trans-unit id="a13d6947ef0d7921e872df14d620a4e1195444c6" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glProgramUniformMatrix4fv(GLuint</source>
          <target state="translated">void QOpenGLExtraFunctions::glProgramUniformMatrix4fv(GLuint</target>
        </trans-unit>
        <trans-unit id="be82c030c935d70910142c4d6c2e0c1749b24528" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glProgramUniformMatrix4x2fv(GLuint</source>
          <target state="translated">void QOpenGLExtraFunctions::glProgramUniformMatrix4x2fv(GLuint</target>
        </trans-unit>
        <trans-unit id="fd17ef67879998bcb7f0de3c991dd8f14a3aec2c" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glProgramUniformMatrix4x3fv(GLuint</source>
          <target state="translated">void QOpenGLExtraFunctions::glProgramUniformMatrix4x3fv(GLuint</target>
        </trans-unit>
        <trans-unit id="3b43d3e04c4a3618bd8c53c57dae5d75186264c3" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glPushDebugGroup(GLenum</source>
          <target state="translated">void QOpenGLExtraFunctions::glPushDebugGroup(GLenum</target>
        </trans-unit>
        <trans-unit id="fab3e7110b5e2c365b31205404e0d7676e47c795" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glReadBuffer(GLenum</source>
          <target state="translated">anular las funciones de QOpenGLExtraFunctions::glReadBuffer(GLenum</target>
        </trans-unit>
        <trans-unit id="67e658743c3fd969ad32a10f5665e4a68d65b19f" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glReadnPixels(GLint</source>
          <target state="translated">anular las funciones de QOpenGLExtraFunctions::glReadnPixels(GLint</target>
        </trans-unit>
        <trans-unit id="d484751164330ffd378e6bae146c65b52589766e" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glRenderbufferStorageMultisample(GLenum</source>
          <target state="translated">void QOpenGLExtraFunctions::glRenderbufferStorageMultisample(GLenum</target>
        </trans-unit>
        <trans-unit id="7bf5955085d823bd1fd22901beda3166bddd7043" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glResumeTransformFeedback()</source>
          <target state="translated">void QOpenGLExtraFunctions::glResumeTransformFeedback()</target>
        </trans-unit>
        <trans-unit id="d024b78a03fe31f83584f73bd84bd892e0aafc52" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glSampleMaski(GLuint</source>
          <target state="translated">void QOpenGLExtraFunctions::glSampleMaski(GLuint</target>
        </trans-unit>
        <trans-unit id="d7474772bb3d31166de2512bf0bbfab8e703c692" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glSamplerParameterIiv(GLuint</source>
          <target state="translated">void QOpenGLExtraFunctions::glSamplerParameterIiv(GLuint</target>
        </trans-unit>
        <trans-unit id="067af3bafb0d9f420c14d4d4d73e81b50a05058b" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glSamplerParameterIuiv(GLuint</source>
          <target state="translated">void QOpenGLExtraFunctions::glSamplerParameterIuiv(GLuint</target>
        </trans-unit>
        <trans-unit id="a11ff5e27bfb770842ca117c234f9f4468b7efb6" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glSamplerParameterf(GLuint</source>
          <target state="translated">void QOpenGLExtraFunctions::glSamplerParameterf(GLuint</target>
        </trans-unit>
        <trans-unit id="0b238d7a758d4c8d59b71fb42d906f28552c580f" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glSamplerParameterfv(GLuint</source>
          <target state="translated">void QOpenGLExtraFunctions::glSamplerParameterfv(GLuint</target>
        </trans-unit>
        <trans-unit id="0353d61627ca4d3ffdd73e3bedf6dd7d5e4b031b" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glSamplerParameteri(GLuint</source>
          <target state="translated">void QOpenGLExtraFunctions::glSamplerParameteri(GLuint</target>
        </trans-unit>
        <trans-unit id="075b0fb022df74ca26c59488c6468396671fe2ae" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glSamplerParameteriv(GLuint</source>
          <target state="translated">void QOpenGLExtraFunctions::glSamplerParameteriv(GLuint</target>
        </trans-unit>
        <trans-unit id="74ee75f44857b1ad1c0347cabc74819aa18ee9d1" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glTexBuffer(GLenum</source>
          <target state="translated">void QOpenGLExtraFunctions::glTexBuffer(GLenum</target>
        </trans-unit>
        <trans-unit id="0b3562c9e57d85bd19d141b050912ac96aeaa0c4" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glTexBufferRange(GLenum</source>
          <target state="translated">void QOpenGLExtraFunctions::glTexBufferRange(GLenum</target>
        </trans-unit>
        <trans-unit id="47a678266209a7bb2c2af5862de2febbfce86ada" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glTexImage3D(GLenum</source>
          <target state="translated">void QOpenGLExtraFunctions::glTexImage3D(GLenum</target>
        </trans-unit>
        <trans-unit id="2bc3fd1f57f9ccd35147f6d87ffc121c1e6d64b2" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glTexParameterIiv(GLenum</source>
          <target state="translated">void QOpenGLExtraFunctions::glTexParameterIiv(GLenum</target>
        </trans-unit>
        <trans-unit id="85789ed222f3c23ba57e7193ad9aa6576b31b8f4" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glTexParameterIuiv(GLenum</source>
          <target state="translated">void QOpenGLExtraFunctions::glTexParameterIuiv(GLenum</target>
        </trans-unit>
        <trans-unit id="32428a0576751f05eace97d567452ddb2d56309d" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glTexStorage2D(GLenum</source>
          <target state="translated">void QOpenGLExtraFunctions::glTexStorage2D(GLenum</target>
        </trans-unit>
        <trans-unit id="04311cef867fb27313332a1d47e327b22bf0c095" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glTexStorage2DMultisample(GLenum</source>
          <target state="translated">void QOpenGLExtraFunctions::glTexStorage2DMultisample(GLenum</target>
        </trans-unit>
        <trans-unit id="62366781575d10ad77b0e168d06697c809b31c9a" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glTexStorage3D(GLenum</source>
          <target state="translated">void QOpenGLExtraFunctions::glTexStorage3D(GLenum</target>
        </trans-unit>
        <trans-unit id="3c092b0e1980f599d0561fe7e368e18c824d3802" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glTexStorage3DMultisample(GLenum</source>
          <target state="translated">void QOpenGLExtraFunctions::glTexStorage3DMultisample(GLenum</target>
        </trans-unit>
        <trans-unit id="29a13d5462a2729e3dffd88b7415f1f62a312bed" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glTexSubImage3D(GLenum</source>
          <target state="translated">void QOpenGLExtraFunctions::glTexSubImage3D(GLenum</target>
        </trans-unit>
        <trans-unit id="8352bd621daadeb099c6c8660447f2d3fc93cae0" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glTransformFeedbackVaryings(GLuint</source>
          <target state="translated">void QOpenGLExtraFunctions::glTransformFeedbackVaryings(GLuint</target>
        </trans-unit>
        <trans-unit id="06288ad25608cf92a9fa049e7f0be4e2700cbbf9" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glUniform1ui(GLint</source>
          <target state="translated">anular las funciones de QOpenGLExtraFunctions::glUniform1ui(GLint</target>
        </trans-unit>
        <trans-unit id="ebcf4d0a29e2d4c5a3d0d39d86b9deef61165c67" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glUniform1uiv(GLint</source>
          <target state="translated">void QOpenGLExtraFunctions::glUniform1uiv(GLint</target>
        </trans-unit>
        <trans-unit id="385140cc724921ad213b5c16ff293db35f7e7831" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glUniform2ui(GLint</source>
          <target state="translated">anular las funciones de QOpenGLExtraFunctions::glUniform2ui(GLint</target>
        </trans-unit>
        <trans-unit id="777843ff013eb16b69940dc2470adc7837347b87" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glUniform2uiv(GLint</source>
          <target state="translated">void QOpenGLExtraFunctions::glUniform2uiv(GLint</target>
        </trans-unit>
        <trans-unit id="dcd6c8bef0bdb3721594467876d1999b7e470188" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glUniform3ui(GLint</source>
          <target state="translated">anular las funciones de QOpenGLExtraFunctions::glUniform3ui(GLint</target>
        </trans-unit>
        <trans-unit id="d32e0574288985382a6d38f3ce6c831a014eb5d2" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glUniform3uiv(GLint</source>
          <target state="translated">void QOpenGLExtraFunctions::glUniform3uiv(GLint</target>
        </trans-unit>
        <trans-unit id="78691109e5efb942d1d1f88572f93fb89178a46e" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glUniform4ui(GLint</source>
          <target state="translated">anular las funciones de QOpenGLExtraFunctions::glUniform4ui(GLint</target>
        </trans-unit>
        <trans-unit id="48c3aa1c55587dec246e016e85d466a471128bfe" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glUniform4uiv(GLint</source>
          <target state="translated">void QOpenGLExtraFunctions::glUniform4uiv(GLint</target>
        </trans-unit>
        <trans-unit id="ae1716a1cf59b1b4189e3a234adc200903a3ded8" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glUniformBlockBinding(GLuint</source>
          <target state="translated">void QOpenGLExtraFunctions::glUniformBlockBinding(GLuint</target>
        </trans-unit>
        <trans-unit id="f5c5c712673ad0f4efea3e2c6a1be2895700904e" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glUniformMatrix2x3fv(GLint</source>
          <target state="translated">void QOpenGLExtraFunctions::glUniformMatrix2x3fv(GLint</target>
        </trans-unit>
        <trans-unit id="59c31b1dfd9cae3a1a309a75d5d37199ed970d25" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glUniformMatrix2x4fv(GLint</source>
          <target state="translated">void QOpenGLExtraFunctions::glUniformMatrix2x4fv(GLint</target>
        </trans-unit>
        <trans-unit id="ff89e11b4e9d62c11d8cb3d3880c356638e94416" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glUniformMatrix3x2fv(GLint</source>
          <target state="translated">void QOpenGLExtraFunctions::glUniformMatrix3x2fv(GLint</target>
        </trans-unit>
        <trans-unit id="f8038a356a98c251d43a463da1157ef00cd0e8d6" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glUniformMatrix3x4fv(GLint</source>
          <target state="translated">void QOpenGLExtraFunctions::glUniformMatrix3x4fv(GLint</target>
        </trans-unit>
        <trans-unit id="af84fffe9b9b62d3e6ed2a580d498d18931b59ad" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glUniformMatrix4x2fv(GLint</source>
          <target state="translated">void QOpenGLExtraFunctions::glUniformMatrix4x2fv(GLint</target>
        </trans-unit>
        <trans-unit id="d6c306531a6c0f7a4111902379179ac84b290cc5" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glUniformMatrix4x3fv(GLint</source>
          <target state="translated">void QOpenGLExtraFunctions::glUniformMatrix4x3fv(GLint</target>
        </trans-unit>
        <trans-unit id="832d79b338486aa1b3f3769f93bf24d115237d65" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glUseProgramStages(GLuint</source>
          <target state="translated">void QOpenGLExtraFunctions::glUseProgramStages(GLuint</target>
        </trans-unit>
        <trans-unit id="60a57f0791965fb7ea15382c918f540299113214" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glValidateProgramPipeline(GLuint</source>
          <target state="translated">void QOpenGLExtraFunctions::glValidateProgramPipeline(GLuint</target>
        </trans-unit>
        <trans-unit id="78b16b79ea449e56db5e9a53f45c22d9c6e9a3ca" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glVertexAttribBinding(GLuint</source>
          <target state="translated">void QOpenGLExtraFunctions::glVertexAttribBinding(GLuint</target>
        </trans-unit>
        <trans-unit id="6525e7c14674d8f9441a532a4056546efcf53f09" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glVertexAttribDivisor(GLuint</source>
          <target state="translated">void QOpenGLExtraFunctions::glVertexAttribDivisor(GLuint</target>
        </trans-unit>
        <trans-unit id="b344b83a53234ee1d922d2ed0b1ae2c593ae50b9" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glVertexAttribFormat(GLuint</source>
          <target state="translated">void QOpenGLExtraFunctions::glVertexAttribFormat(GLuint</target>
        </trans-unit>
        <trans-unit id="ec9f912ecf41e2d47fedc64e1bb05cdaaff04140" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glVertexAttribI4i(GLuint</source>
          <target state="translated">anular las funciones de QOpenGLExtraFunctions::glVertexAttribI4i(GLuint</target>
        </trans-unit>
        <trans-unit id="e84563d12d1b2c5de91af26d8b4d9e5dcc7eb25a" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glVertexAttribI4iv(GLuint</source>
          <target state="translated">anular las funciones de QOpenGLExtraFunctions::glVertexAttribI4iv(GLuint</target>
        </trans-unit>
        <trans-unit id="46b0cb40dc45620d8dbf0f5c92e5efbf286cef7f" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glVertexAttribI4ui(GLuint</source>
          <target state="translated">anular las funciones de QOpenGLExtraFunctions::glVertexAttribI4ui(GLuint</target>
        </trans-unit>
        <trans-unit id="3955d0345d5ea4646ec11ad7755d7d57ddd59da5" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glVertexAttribI4uiv(GLuint</source>
          <target state="translated">anular las funciones de QOpenGLExtraFunctions::glVertexAttribI4uiv(GLuint</target>
        </trans-unit>
        <trans-unit id="7940d793bc6be7c63959ff976cfe13174fd69171" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glVertexAttribIFormat(GLuint</source>
          <target state="translated">void QOpenGLExtraFunctions::glVertexAttribIFormat(GLuint</target>
        </trans-unit>
        <trans-unit id="22be6cda4412372418681b6c7fc7ec27332c8a76" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glVertexAttribIPointer(GLuint</source>
          <target state="translated">void QOpenGLExtraFunctions::glVertexAttribIPointer(GLuint</target>
        </trans-unit>
        <trans-unit id="fc8211081936364a82743a1be8d715b423797e2b" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glVertexBindingDivisor(GLuint</source>
          <target state="translated">void QOpenGLExtraFunctions::glVertexBindingDivisor(GLuint</target>
        </trans-unit>
        <trans-unit id="da823e1091ced6f63ba84e1e4e17edd2cb739f9e" translate="yes" xml:space="preserve">
          <source>void QOpenGLExtraFunctions::glWaitSync(GLsync</source>
          <target state="translated">void QOpenGLExtraFunctions::glWaitSync(GLsync</target>
        </trans-unit>
        <trans-unit id="6d3490b1871c5c8c249cddb6584b487ae278b830" translate="yes" xml:space="preserve">
          <source>void QOpenGLFramebufferObject::addColorAttachment(const &lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QOpenGLFramebufferObject :: addColorAttachment (const &lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="b07c792411e3fff7c3d865a1af8a55b25768cc6e" translate="yes" xml:space="preserve">
          <source>void QOpenGLFramebufferObject::addColorAttachment(int</source>
          <target state="translated">anular QOpenGLFramebufferObjeto::addColorAttachment(int</target>
        </trans-unit>
        <trans-unit id="9bbcd3f7a569f162b2f36b632c142da7316d2fb5" translate="yes" xml:space="preserve">
          <source>void QOpenGLFramebufferObject::setAttachment(&lt;a href=&quot;qopenglframebufferobject#Attachment-enum&quot;&gt;QOpenGLFramebufferObject::Attachment&lt;/a&gt;</source>
          <target state="translated">void QOpenGLFramebufferObject :: setAttachment ( &lt;a href=&quot;qopenglframebufferobject#Attachment-enum&quot;&gt;QOpenGLFramebufferObject :: Attachment&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f4ff94a84638733760cc52086638abf29f7dcafb" translate="yes" xml:space="preserve">
          <source>void QOpenGLFramebufferObjectFormat::setAttachment(&lt;a href=&quot;qopenglframebufferobject#Attachment-enum&quot;&gt;QOpenGLFramebufferObject::Attachment&lt;/a&gt;</source>
          <target state="translated">void QOpenGLFramebufferObjectFormat :: setAttachment ( &lt;a href=&quot;qopenglframebufferobject#Attachment-enum&quot;&gt;QOpenGLFramebufferObject :: Attachment&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="24aa6dae3e8667d37ac0bbe40a9b2ee41627f10e" translate="yes" xml:space="preserve">
          <source>void QOpenGLFramebufferObjectFormat::setInternalTextureFormat(GLenum</source>
          <target state="translated">void QOpenGLFramebufferObjectFormat::setInternalTextureFormat(GLenum</target>
        </trans-unit>
        <trans-unit id="ef527dfdc4d7d28b83a63e485e98f7f35b9fbbca" translate="yes" xml:space="preserve">
          <source>void QOpenGLFramebufferObjectFormat::setMipmap(bool</source>
          <target state="translated">void QOpenGLFramebufferObjectFormat::setMipmap(bool</target>
        </trans-unit>
        <trans-unit id="8b8c3cfc4a6b5c4034bdcc03fffd9d54558a286d" translate="yes" xml:space="preserve">
          <source>void QOpenGLFramebufferObjectFormat::setSamples(int</source>
          <target state="translated">void QOpenGLFramebufferObjectFormat::setSamples(int</target>
        </trans-unit>
        <trans-unit id="b8273965257c86c66c51a802cde72e2875f34862" translate="yes" xml:space="preserve">
          <source>void QOpenGLFramebufferObjectFormat::setTextureTarget(GLenum</source>
          <target state="translated">void QOpenGLFramebufferObjectFormat::setTextureTarget(GLenum</target>
        </trans-unit>
        <trans-unit id="40975637efe9f38c31a95d23f96e91edc2eb92b0" translate="yes" xml:space="preserve">
          <source>void QOpenGLPaintDevice::setDevicePixelRatio(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">void QOpenGLPaintDevice :: setDevicePixelRatio ( &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="116e44a57b70519ace86fa46ae2148574dca284d" translate="yes" xml:space="preserve">
          <source>void QOpenGLPaintDevice::setDevicePixelRatio(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec5ae1eae1fe38c5e1b96e6359ff71e6ad5a1e90" translate="yes" xml:space="preserve">
          <source>void QOpenGLPaintDevice::setDotsPerMeterX(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">void QOpenGLPaintDevice :: setDotsPerMeterX ( &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="46bfb8ef2142368120316484cf2d068e67a70610" translate="yes" xml:space="preserve">
          <source>void QOpenGLPaintDevice::setDotsPerMeterX(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="495f0fa6de295f6b4af9d15968515aec905a2335" translate="yes" xml:space="preserve">
          <source>void QOpenGLPaintDevice::setDotsPerMeterY(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">void QOpenGLPaintDevice :: setDotsPerMeterY ( &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="99935672794aea81c6932bb68fe27ec01c190464" translate="yes" xml:space="preserve">
          <source>void QOpenGLPaintDevice::setDotsPerMeterY(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7205bdcc4c0050ae845179dd6fbf6c920032419c" translate="yes" xml:space="preserve">
          <source>void QOpenGLPaintDevice::setPaintFlipped(bool</source>
          <target state="translated">void QOpenGLPaintDevice::setPaintFlipped(bool</target>
        </trans-unit>
        <trans-unit id="dde6526780fbf8cce0dc05734a36008ea368242b" translate="yes" xml:space="preserve">
          <source>void QOpenGLPaintDevice::setSize(const &lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QOpenGLPaintDevice :: setSize (const &lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="d2556557e52428d442b5d75fc3f918f78dcf2bd9" translate="yes" xml:space="preserve">
          <source>void QOpenGLPixelTransferOptions::setAlignment(int</source>
          <target state="translated">anular QOpenGLPixelTransferOpciones::setAlineación(int</target>
        </trans-unit>
        <trans-unit id="217d2b02d89411cd9a1dd0e2daeac1815df8590f" translate="yes" xml:space="preserve">
          <source>void QOpenGLPixelTransferOptions::setImageHeight(int</source>
          <target state="translated">anular QOpenGLPixelTransferOptions::setImageHeight(int</target>
        </trans-unit>
        <trans-unit id="955b0358e8c647b81f084ea04b37dd7b5c19ffdb" translate="yes" xml:space="preserve">
          <source>void QOpenGLPixelTransferOptions::setLeastSignificantByteFirst(bool</source>
          <target state="translated">anular QOpenGLPixelTransferOptions::setLeastSignificantByteFirst(bool</target>
        </trans-unit>
        <trans-unit id="0820bc35d2c71f16c06380b6f67c03880fd5ca46" translate="yes" xml:space="preserve">
          <source>void QOpenGLPixelTransferOptions::setRowLength(int</source>
          <target state="translated">void QOpenGLPixelTransferOptions::setRowLength(int</target>
        </trans-unit>
        <trans-unit id="4f0fc19dac812e55471fa3ec5cdaf9e8dae0c872" translate="yes" xml:space="preserve">
          <source>void QOpenGLPixelTransferOptions::setSkipImages(int</source>
          <target state="translated">anular QOpenGLPixelTransferOptions::setSkipImages(int</target>
        </trans-unit>
        <trans-unit id="f7546cc07afe09d5009ce1228950d9266d80a498" translate="yes" xml:space="preserve">
          <source>void QOpenGLPixelTransferOptions::setSkipPixels(int</source>
          <target state="translated">anular QOpenGLPixelTransferOptions::setSkipPixels(int</target>
        </trans-unit>
        <trans-unit id="42909dc14c0d1597d727fe02e44e488db9b853f5" translate="yes" xml:space="preserve">
          <source>void QOpenGLPixelTransferOptions::setSkipRows(int</source>
          <target state="translated">anular QOpenGLPixelTransferOptions::setSkipRows(int</target>
        </trans-unit>
        <trans-unit id="32484621216f9d6abca2ed1a7fd89430513cd47d" translate="yes" xml:space="preserve">
          <source>void QOpenGLPixelTransferOptions::setSwapBytesEnabled(bool</source>
          <target state="translated">void QOpenGLPixelTransferOptions::setSwapBytesEnabled(bool</target>
        </trans-unit>
        <trans-unit id="9baa93f14243ac5271edace645bc9f32ea052807" translate="yes" xml:space="preserve">
          <source>void QOpenGLShaderProgram::bindAttributeLocation(const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QOpenGLShaderProgram :: bindAttributeLocation (const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="34f914a4d3789319664cab29b6bba2754b8b7c2b" translate="yes" xml:space="preserve">
          <source>void QOpenGLShaderProgram::bindAttributeLocation(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QOpenGLShaderProgram :: bindAttributeLocation (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="e629741bae971ef4cac5b58c9f48723e717da77d" translate="yes" xml:space="preserve">
          <source>void QOpenGLShaderProgram::bindAttributeLocation(const char *</source>
          <target state="translated">void QOpenGLShaderProgram::bindAttributeLocation(const char *</target>
        </trans-unit>
        <trans-unit id="cc8ad894e43ee48323e84ce815bee33393b9ca93" translate="yes" xml:space="preserve">
          <source>void QOpenGLShaderProgram::disableAttributeArray(const char *</source>
          <target state="translated">anular el programa de sombreado QOpenGL::disableAttributeArray(const char *)</target>
        </trans-unit>
        <trans-unit id="3e4bb59f14eb43253891a4969f156e2fd4bdc4e5" translate="yes" xml:space="preserve">
          <source>void QOpenGLShaderProgram::disableAttributeArray(int</source>
          <target state="translated">anular el programa de sombreado QOpenGL::disableAttributeArray(int</target>
        </trans-unit>
        <trans-unit id="c7dce890111537e10f63c8c2c6a4582fa2747f85" translate="yes" xml:space="preserve">
          <source>void QOpenGLShaderProgram::enableAttributeArray(const char *</source>
          <target state="translated">anular el programa de sombreado QOpenGL::enableAttributeArray(const char *)</target>
        </trans-unit>
        <trans-unit id="9e96f25de69f9d5ab96cc4a5088baa35e361c4e2" translate="yes" xml:space="preserve">
          <source>void QOpenGLShaderProgram::enableAttributeArray(int</source>
          <target state="translated">anular el programa de sombreado QOpenGL::enableAttributeArray(int</target>
        </trans-unit>
        <trans-unit id="71939b1476d8d16ff693cb3fd52f192028963823" translate="yes" xml:space="preserve">
          <source>void QOpenGLShaderProgram::release()</source>
          <target state="translated">anular el programa de sombreado QOpenGL::release()</target>
        </trans-unit>
        <trans-unit id="575fd918dabda33da96701c28b9746eaf2536732" translate="yes" xml:space="preserve">
          <source>void QOpenGLShaderProgram::removeAllShaders()</source>
          <target state="translated">Anular el programa de sombreado QOpenGLShader::removeAllShaders()</target>
        </trans-unit>
        <trans-unit id="1129a22c308e69cbffbd73b12198f4ad9e7ba8f2" translate="yes" xml:space="preserve">
          <source>void QOpenGLShaderProgram::removeShader(&lt;a href=&quot;qopenglshader&quot;&gt;QOpenGLShader&lt;/a&gt; *</source>
          <target state="translated">void QOpenGLShaderProgram :: removeShader ( &lt;a href=&quot;qopenglshader&quot;&gt;QOpenGLShader&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="d56eb622ba1cf519b2a06a01874098009cf4dde7" translate="yes" xml:space="preserve">
          <source>void QOpenGLShaderProgram::setAttributeArray(const char *</source>
          <target state="translated">void QOpenGLShaderProgram::setAttributeArray(const char *</target>
        </trans-unit>
        <trans-unit id="9efed7dcefbfaa29d79a6658579817329c35b05a" translate="yes" xml:space="preserve">
          <source>void QOpenGLShaderProgram::setAttributeArray(int</source>
          <target state="translated">anular el programa de sombreado QOpenGL::setAttributeArray(int</target>
        </trans-unit>
        <trans-unit id="f1941275344a1e0835c62b14dad5acccf04886dd" translate="yes" xml:space="preserve">
          <source>void QOpenGLShaderProgram::setAttributeBuffer(const char *</source>
          <target state="translated">anular el programa de sombreado QOpenGL::setAttributeBuffer(const char *)</target>
        </trans-unit>
        <trans-unit id="f380d6eb1c748ad932005af1951603897617aa08" translate="yes" xml:space="preserve">
          <source>void QOpenGLShaderProgram::setAttributeBuffer(int</source>
          <target state="translated">anular el programa de sombreado QOpenGL::setAttributeBuffer(int</target>
        </trans-unit>
        <trans-unit id="1c40dbbb9c47b7ebee12ef6da8acf3d05cabb38b" translate="yes" xml:space="preserve">
          <source>void QOpenGLShaderProgram::setAttributeValue(const char *</source>
          <target state="translated">void QOpenGLShaderProgram::setAttributeValue(const char *</target>
        </trans-unit>
        <trans-unit id="032b837b48ed446581afd58ab421bc0d4c5b738c" translate="yes" xml:space="preserve">
          <source>void QOpenGLShaderProgram::setAttributeValue(int</source>
          <target state="translated">anular el programa de sombreado QOpenGL::setAttributeValue(int</target>
        </trans-unit>
        <trans-unit id="4c6588865183e1facc19f141f24d22a102284521" translate="yes" xml:space="preserve">
          <source>void QOpenGLShaderProgram::setDefaultInnerTessellationLevels(const &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;float&amp;gt; &amp;amp;</source>
          <target state="translated">void QOpenGLShaderProgram :: setDefaultInnerTessellationLevels (const &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt; &amp;lt;float&amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="812f06a33427183b320306c9fab0c4c596216692" translate="yes" xml:space="preserve">
          <source>void QOpenGLShaderProgram::setDefaultOuterTessellationLevels(const &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;float&amp;gt; &amp;amp;</source>
          <target state="translated">void QOpenGLShaderProgram :: setDefaultOuterTessellationLevels (const &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt; &amp;lt;float&amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="546d18e0ce47211ccd7d06efc44702c92c971384" translate="yes" xml:space="preserve">
          <source>void QOpenGLShaderProgram::setPatchVertexCount(int</source>
          <target state="translated">anular el programa de sombreado QOpenGL::setPatchVertexCount(int</target>
        </trans-unit>
        <trans-unit id="5810ccb2dc784db55820597efdcd432ae420012b" translate="yes" xml:space="preserve">
          <source>void QOpenGLShaderProgram::setUniformValue(const char *</source>
          <target state="translated">void QOpenGLShaderProgram::setUniformValue(const char *</target>
        </trans-unit>
        <trans-unit id="3a0b3058007a47b5646b5c6dfec4351a05b7554e" translate="yes" xml:space="preserve">
          <source>void QOpenGLShaderProgram::setUniformValue(int</source>
          <target state="translated">anular el programa de sombreado QOpenGL::setUniformValue(int</target>
        </trans-unit>
        <trans-unit id="1bf2bbd40d2998bbf33a82f5791243fbb5b42ca1" translate="yes" xml:space="preserve">
          <source>void QOpenGLShaderProgram::setUniformValueArray(const char *</source>
          <target state="translated">void QOpenGLShaderProgram::setUniformValueArray(const char *</target>
        </trans-unit>
        <trans-unit id="5a2f7270aca4d82cd5d0841a5e1e1fe35e47404f" translate="yes" xml:space="preserve">
          <source>void QOpenGLShaderProgram::setUniformValueArray(int</source>
          <target state="translated">anular el programa de sombreado QOpenGL::setUniformValueArray(int</target>
        </trans-unit>
        <trans-unit id="116038a7e963c36e625239b29fd4d364f9b2dcc5" translate="yes" xml:space="preserve">
          <source>void QOpenGLTexture::allocateStorage()</source>
          <target state="translated">void QOpenGLTexture::allocateStorage()</target>
        </trans-unit>
        <trans-unit id="c9de69c86779961110d3e5f3164d7fda629d331d" translate="yes" xml:space="preserve">
          <source>void QOpenGLTexture::allocateStorage(&lt;a href=&quot;qopengltexture#PixelFormat-enum&quot;&gt;QOpenGLTexture::PixelFormat&lt;/a&gt;</source>
          <target state="translated">void QOpenGLTexture :: allocateStorage ( &lt;a href=&quot;qopengltexture#PixelFormat-enum&quot;&gt;QOpenGLTexture :: PixelFormat&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cac57712bb9e3ba4e25cb3f2caef6def91d1a60c" translate="yes" xml:space="preserve">
          <source>void QOpenGLTexture::bind()</source>
          <target state="translated">void QOpenGLTexture::bind()</target>
        </trans-unit>
        <trans-unit id="4cd60a5704fe950374414dad7f9930c5479a5969" translate="yes" xml:space="preserve">
          <source>void QOpenGLTexture::bind(&lt;a href=&quot;#uint-typedef&quot;&gt;uint&lt;/a&gt;</source>
          <target state="translated">void QOpenGLTexture :: bind ( &lt;a href=&quot;#uint-typedef&quot;&gt;uint&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e41c9e30c72eedd1589b8cc6334b191ecf86fbd3" translate="yes" xml:space="preserve">
          <source>void QOpenGLTexture::bind(&lt;a href=&quot;qtglobal#uint-typedef&quot;&gt;uint&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9db2a61ce1c354dce24396f2560a27534244953" translate="yes" xml:space="preserve">
          <source>void QOpenGLTexture::borderColor(float *</source>
          <target state="translated">void QOpenGLTexture::borderColor(float *</target>
        </trans-unit>
        <trans-unit id="17deb7c45ef425fe948d7c36dd7c5fbdbdde5dfe" translate="yes" xml:space="preserve">
          <source>void QOpenGLTexture::borderColor(int *</source>
          <target state="translated">void QOpenGLTexture::borderColor(int *</target>
        </trans-unit>
        <trans-unit id="b01bcb5019a63021b10191cddcc5eb59645a2d3d" translate="yes" xml:space="preserve">
          <source>void QOpenGLTexture::borderColor(unsignedint *</source>
          <target state="translated">void QOpenGLTexture::borderColor(unsignedint *</target>
        </trans-unit>
        <trans-unit id="f0eb1a9f9599ae9e1dee96194e509f59b1d1e359" translate="yes" xml:space="preserve">
          <source>void QOpenGLTexture::destroy()</source>
          <target state="translated">anular QOpenGLTexture::destroy()</target>
        </trans-unit>
        <trans-unit id="23a01c854948197db7c6ee109b0df8b3a92884b5" translate="yes" xml:space="preserve">
          <source>void QOpenGLTexture::generateMipMaps()</source>
          <target state="translated">void QOpenGLTexture::generateMipMaps()</target>
        </trans-unit>
        <trans-unit id="3f9a793992300d151178a767436bc312977dc25d" translate="yes" xml:space="preserve">
          <source>void QOpenGLTexture::generateMipMaps(int</source>
          <target state="translated">void QOpenGLTexture::generateMipMaps(int</target>
        </trans-unit>
        <trans-unit id="7001b2b0a40aad4496b766c8dcd735dd568a4e0d" translate="yes" xml:space="preserve">
          <source>void QOpenGLTexture::release()</source>
          <target state="translated">void QOpenGLTexture::release()</target>
        </trans-unit>
        <trans-unit id="2c7d9d0f667d6863f7489b00ed4169075e9e254b" translate="yes" xml:space="preserve">
          <source>void QOpenGLTexture::release(&lt;a href=&quot;#uint-typedef&quot;&gt;uint&lt;/a&gt;</source>
          <target state="translated">void QOpenGLTexture :: release ( &lt;a href=&quot;#uint-typedef&quot;&gt;uint&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e4791a7fd372c2657f85be3be247f0014cf67b1e" translate="yes" xml:space="preserve">
          <source>void QOpenGLTexture::release(&lt;a href=&quot;qtglobal#uint-typedef&quot;&gt;uint&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b9c9faf9bf3f330e90a09dacbda97df355ab633" translate="yes" xml:space="preserve">
          <source>void QOpenGLTexture::setAutoMipMapGenerationEnabled(bool</source>
          <target state="translated">void QOpenGLTexture::setAutoMipMapGenerationEnabled(bool</target>
        </trans-unit>
        <trans-unit id="1b990b1f85e7734890edf73855381099a18608c6" translate="yes" xml:space="preserve">
          <source>void QOpenGLTexture::setBorderColor(&lt;a href=&quot;#uint-typedef&quot;&gt;uint&lt;/a&gt;</source>
          <target state="translated">void QOpenGLTexture :: setBorderColor ( &lt;a href=&quot;#uint-typedef&quot;&gt;uint&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6618a897a2330ef7f6f48e1d8dee0f210c947b33" translate="yes" xml:space="preserve">
          <source>void QOpenGLTexture::setBorderColor(&lt;a href=&quot;qcolor&quot;&gt;QColor&lt;/a&gt;</source>
          <target state="translated">void QOpenGLTexture :: setBorderColor ( &lt;a href=&quot;qcolor&quot;&gt;QColor&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="67751664a44b4773bb50ec15f26ea5e1f060ab0c" translate="yes" xml:space="preserve">
          <source>void QOpenGLTexture::setBorderColor(&lt;a href=&quot;qtglobal#uint-typedef&quot;&gt;uint&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdda1f599b185bc472f91f47c9e9321791d91fc4" translate="yes" xml:space="preserve">
          <source>void QOpenGLTexture::setBorderColor(float</source>
          <target state="translated">void QOpenGLTexture::setBorderColor(float</target>
        </trans-unit>
        <trans-unit id="b8161907486606b05b2aeb639688d4d5eafa566f" translate="yes" xml:space="preserve">
          <source>void QOpenGLTexture::setBorderColor(int</source>
          <target state="translated">void QOpenGLTexture::setBorderColor(int</target>
        </trans-unit>
        <trans-unit id="e89281de1a3950f93ae707b07ff1178e177f55a4" translate="yes" xml:space="preserve">
          <source>void QOpenGLTexture::setComparisonFunction(&lt;a href=&quot;qopengltexture#ComparisonFunction-enum&quot;&gt;QOpenGLTexture::ComparisonFunction&lt;/a&gt;</source>
          <target state="translated">void QOpenGLTexture :: setComparisonFunction ( &lt;a href=&quot;qopengltexture#ComparisonFunction-enum&quot;&gt;QOpenGLTexture :: ComparisonFunction&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="618acbd00a29cc7212edf43ebe91a14bed98f145" translate="yes" xml:space="preserve">
          <source>void QOpenGLTexture::setComparisonMode(&lt;a href=&quot;qopengltexture#ComparisonMode-enum&quot;&gt;QOpenGLTexture::ComparisonMode&lt;/a&gt;</source>
          <target state="translated">void QOpenGLTexture :: setComparisonMode ( &lt;a href=&quot;qopengltexture#ComparisonMode-enum&quot;&gt;QOpenGLTexture :: ComparisonMode&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="53cddcac3e2debaa5bbd18df3f135cd0a62a9ace" translate="yes" xml:space="preserve">
          <source>void QOpenGLTexture::setCompressedData(int</source>
          <target state="translated">void QOpenGLTexture::setCompressedData(int</target>
        </trans-unit>
        <trans-unit id="15fdf59c5cd3a03899a17b4cdc7dad30896e7346" translate="yes" xml:space="preserve">
          <source>void QOpenGLTexture::setData(&lt;a href=&quot;qopengltexture#PixelFormat-enum&quot;&gt;QOpenGLTexture::PixelFormat&lt;/a&gt;</source>
          <target state="translated">void QOpenGLTexture :: setData ( &lt;a href=&quot;qopengltexture#PixelFormat-enum&quot;&gt;QOpenGLTexture :: PixelFormat&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4679d74f5274f52077134cc1f0181b8375f46336" translate="yes" xml:space="preserve">
          <source>void QOpenGLTexture::setData(const &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QOpenGLTexture :: setData (const &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="a3d623bb4f7a78cb869a9f10d694e45cfafcf5d8" translate="yes" xml:space="preserve">
          <source>void QOpenGLTexture::setData(int</source>
          <target state="translated">void QOpenGLTexture::setData(int</target>
        </trans-unit>
        <trans-unit id="e9bb60be239c634719aae593a996763efe687a8c" translate="yes" xml:space="preserve">
          <source>void QOpenGLTexture::setDepthStencilMode(&lt;a href=&quot;qopengltexture#DepthStencilMode-enum&quot;&gt;QOpenGLTexture::DepthStencilMode&lt;/a&gt;</source>
          <target state="translated">void QOpenGLTexture :: setDepthStencilMode ( &lt;a href=&quot;qopengltexture#DepthStencilMode-enum&quot;&gt;QOpenGLTexture :: DepthStencilMode&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3058d774e35c7d5b817e63af5f15cdc9f4320842" translate="yes" xml:space="preserve">
          <source>void QOpenGLTexture::setFixedSamplePositions(bool</source>
          <target state="translated">void QOpenGLTexture::setFixedSamplePositions(bool</target>
        </trans-unit>
        <trans-unit id="7d978fda3a941456b25d71caea337a487e5c61ce" translate="yes" xml:space="preserve">
          <source>void QOpenGLTexture::setFormat(&lt;a href=&quot;qopengltexture#TextureFormat-enum&quot;&gt;QOpenGLTexture::TextureFormat&lt;/a&gt;</source>
          <target state="translated">void QOpenGLTexture :: setFormat ( &lt;a href=&quot;qopengltexture#TextureFormat-enum&quot;&gt;QOpenGLTexture :: TextureFormat&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ef180a0ddafaa3c10092bb862720cb66c744977e" translate="yes" xml:space="preserve">
          <source>void QOpenGLTexture::setLayers(int</source>
          <target state="translated">void QOpenGLTexture::setLayers(int</target>
        </trans-unit>
        <trans-unit id="9cc7ce1872c745a63273d1732e2e3901e7304981" translate="yes" xml:space="preserve">
          <source>void QOpenGLTexture::setLevelOfDetailRange(float</source>
          <target state="translated">void QOpenGLTexture::setLevelOfDetailRange(float</target>
        </trans-unit>
        <trans-unit id="bc3984bf053ed28505033eb9e524394a845ec0ee" translate="yes" xml:space="preserve">
          <source>void QOpenGLTexture::setLevelofDetailBias(float</source>
          <target state="translated">void QOpenGLTexture::setLevelofDetailBias(float</target>
        </trans-unit>
        <trans-unit id="9c9bf2e5008b34c22ef602ff136873b41ad7be49" translate="yes" xml:space="preserve">
          <source>void QOpenGLTexture::setMagnificationFilter(&lt;a href=&quot;qopengltexture#Filter-enum&quot;&gt;QOpenGLTexture::Filter&lt;/a&gt;</source>
          <target state="translated">void QOpenGLTexture :: setMagnificationFilter ( &lt;a href=&quot;qopengltexture#Filter-enum&quot;&gt;QOpenGLTexture :: Filter&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="47cd347e2199c55e96db4ebe723e49bc165db2b5" translate="yes" xml:space="preserve">
          <source>void QOpenGLTexture::setMaximumAnisotropy(float</source>
          <target state="translated">void QOpenGLTexture::setMaximumAnisotropy(float</target>
        </trans-unit>
        <trans-unit id="886a8f5eae5e2b00606899fe6fda882890a4c67a" translate="yes" xml:space="preserve">
          <source>void QOpenGLTexture::setMaximumLevelOfDetail(float</source>
          <target state="translated">void QOpenGLTexture::setMaximumLevelOfDetail(float</target>
        </trans-unit>
        <trans-unit id="d1b03f991eff211fdc63576f6fdd62bfecb41604" translate="yes" xml:space="preserve">
          <source>void QOpenGLTexture::setMinMagFilters(&lt;a href=&quot;qopengltexture#Filter-enum&quot;&gt;QOpenGLTexture::Filter&lt;/a&gt;</source>
          <target state="translated">void QOpenGLTexture :: setMinMagFilters ( &lt;a href=&quot;qopengltexture#Filter-enum&quot;&gt;QOpenGLTexture :: Filter&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="04c32a487bfac39e7187cf36d9075746314b9ebc" translate="yes" xml:space="preserve">
          <source>void QOpenGLTexture::setMinificationFilter(&lt;a href=&quot;qopengltexture#Filter-enum&quot;&gt;QOpenGLTexture::Filter&lt;/a&gt;</source>
          <target state="translated">void QOpenGLTexture :: setMinificationFilter ( &lt;a href=&quot;qopengltexture#Filter-enum&quot;&gt;QOpenGLTexture :: Filter&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f32d6c7abbd9664c0c736aabf313677cddfea870" translate="yes" xml:space="preserve">
          <source>void QOpenGLTexture::setMinimumLevelOfDetail(float</source>
          <target state="translated">void QOpenGLTexture::setMinimumLevelOfDetail(float</target>
        </trans-unit>
        <trans-unit id="8d290d0c7fad2a0d04b2d0b3cc487a72349d6efc" translate="yes" xml:space="preserve">
          <source>void QOpenGLTexture::setMipBaseLevel(int</source>
          <target state="translated">void QOpenGLTexture::setMipBaseLevel(int</target>
        </trans-unit>
        <trans-unit id="7bd5d1f879fee215d1d88ee27d27eebc7f7e6267" translate="yes" xml:space="preserve">
          <source>void QOpenGLTexture::setMipLevelRange(int</source>
          <target state="translated">anular QOpenGLTexture::setMipLevelRange(int</target>
        </trans-unit>
        <trans-unit id="10e6a8fb1de834f2333c0749827d297f454b9186" translate="yes" xml:space="preserve">
          <source>void QOpenGLTexture::setMipLevels(int</source>
          <target state="translated">anular QOpenGLTexture::setMipLevels(int</target>
        </trans-unit>
        <trans-unit id="fe42a1a02f02aa6f687932371a6abdbd809ed254" translate="yes" xml:space="preserve">
          <source>void QOpenGLTexture::setMipMaxLevel(int</source>
          <target state="translated">void QOpenGLTexture::setMipMaxLevel(int</target>
        </trans-unit>
        <trans-unit id="07138dd673258bb394cd3279d5d37b95982599ae" translate="yes" xml:space="preserve">
          <source>void QOpenGLTexture::setSamples(int</source>
          <target state="translated">void QOpenGLTexture::setSamples(int</target>
        </trans-unit>
        <trans-unit id="4e4326866cadffddfd4a7eb9773ffbd54c794ffc" translate="yes" xml:space="preserve">
          <source>void QOpenGLTexture::setSize(int</source>
          <target state="translated">void QOpenGLTexture::setSize(int</target>
        </trans-unit>
        <trans-unit id="68cadcc74fe96f10062b558a0dc82409d4f7b2d0" translate="yes" xml:space="preserve">
          <source>void QOpenGLTexture::setSwizzleMask(&lt;a href=&quot;qopengltexture#SwizzleComponent-enum&quot;&gt;QOpenGLTexture::SwizzleComponent&lt;/a&gt;</source>
          <target state="translated">void QOpenGLTexture :: setSwizzleMask ( &lt;a href=&quot;qopengltexture#SwizzleComponent-enum&quot;&gt;QOpenGLTexture :: SwizzleComponent&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c63faff7623b9893c5ee1251a2e44c8c26cbb957" translate="yes" xml:space="preserve">
          <source>void QOpenGLTexture::setSwizzleMask(&lt;a href=&quot;qopengltexture#SwizzleValue-enum&quot;&gt;QOpenGLTexture::SwizzleValue&lt;/a&gt;</source>
          <target state="translated">void QOpenGLTexture :: setSwizzleMask ( &lt;a href=&quot;qopengltexture#SwizzleValue-enum&quot;&gt;QOpenGLTexture :: SwizzleValue&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9b3922c058fbcccf249f12032230cf3e3cef150c" translate="yes" xml:space="preserve">
          <source>void QOpenGLTexture::setWrapMode(&lt;a href=&quot;qopengltexture#CoordinateDirection-enum&quot;&gt;QOpenGLTexture::CoordinateDirection&lt;/a&gt;</source>
          <target state="translated">void QOpenGLTexture :: setWrapMode ( &lt;a href=&quot;qopengltexture#CoordinateDirection-enum&quot;&gt;QOpenGLTexture :: CoordinateDirection&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="775a574b6bba4fff08badfa61bad2a3065cdae8e" translate="yes" xml:space="preserve">
          <source>void QOpenGLTexture::setWrapMode(&lt;a href=&quot;qopengltexture#WrapMode-enum&quot;&gt;QOpenGLTexture::WrapMode&lt;/a&gt;</source>
          <target state="translated">void QOpenGLTexture :: setWrapMode ( &lt;a href=&quot;qopengltexture#WrapMode-enum&quot;&gt;QOpenGLTexture :: WrapMode&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6d3575fafb77046041baa7ac1f53b2d1b5c9bd8e" translate="yes" xml:space="preserve">
          <source>void QOpenGLTextureBlitter::bind(GLenum</source>
          <target state="translated">void QOpenGLTextureBlitter::bind(GLenum</target>
        </trans-unit>
        <trans-unit id="56eb8a2126dbff5f6c5783fc282d06aca88a4a7b" translate="yes" xml:space="preserve">
          <source>void QOpenGLTextureBlitter::blit(GLuint</source>
          <target state="translated">void QOpenGLTextureBlitter::blit(GLuint)</target>
        </trans-unit>
        <trans-unit id="ae62b4cda08cb27b252de743cd3faae59cd2d4ef" translate="yes" xml:space="preserve">
          <source>void QOpenGLTextureBlitter::destroy()</source>
          <target state="translated">anular QOpenGLTextureBlitter::destroy()</target>
        </trans-unit>
        <trans-unit id="188a37c2791bc6832818963b535bf94b0055182a" translate="yes" xml:space="preserve">
          <source>void QOpenGLTextureBlitter::release()</source>
          <target state="translated">void QOpenGLTextureBlitter::release()</target>
        </trans-unit>
        <trans-unit id="e29fe7dc0485afbb0b73508ea9ac3336d2f6cd15" translate="yes" xml:space="preserve">
          <source>void QOpenGLTextureBlitter::setOpacity(float</source>
          <target state="translated">void QOpenGLTextureBlitter::setOpacidad(flotación)</target>
        </trans-unit>
        <trans-unit id="4e09930f64cf2ed0877a7ef48ed8ef4204bbe657" translate="yes" xml:space="preserve">
          <source>void QOpenGLTextureBlitter::setRedBlueSwizzle(bool</source>
          <target state="translated">void QOpenGLTextureBlitter::setRedBlueSwizzle(bool</target>
        </trans-unit>
        <trans-unit id="022f1648d963d9a2e1e5acb2ad52e52c0b9ab699" translate="yes" xml:space="preserve">
          <source>void QOpenGLTimeMonitor::destroy()</source>
          <target state="translated">anular QOpenGLTimeMonitor::destroy()</target>
        </trans-unit>
        <trans-unit id="edd0709a471a246411c9c2d080cfecfecb646473" translate="yes" xml:space="preserve">
          <source>void QOpenGLTimeMonitor::reset()</source>
          <target state="translated">anular QOpenGLTimeMonitor::reset()</target>
        </trans-unit>
        <trans-unit id="fa3b1722addf996aa1397c44ba8f82215792f967" translate="yes" xml:space="preserve">
          <source>void QOpenGLTimeMonitor::setSampleCount(int</source>
          <target state="translated">void QOpenGLTimeMonitor::setSampleCount(int</target>
        </trans-unit>
        <trans-unit id="595351e216e798bcd310c7b87b57e12afee8b0c8" translate="yes" xml:space="preserve">
          <source>void QOpenGLTimerQuery::begin()</source>
          <target state="translated">anular QOpenGLTimerQuery::begin()</target>
        </trans-unit>
        <trans-unit id="ac6e5f1aef69763dde3e36544da19c05e5f856bd" translate="yes" xml:space="preserve">
          <source>void QOpenGLTimerQuery::destroy()</source>
          <target state="translated">QOpenGLTimerQuery::destroy()</target>
        </trans-unit>
        <trans-unit id="2e2464525bb85e19213a55ad60378e227f0da71f" translate="yes" xml:space="preserve">
          <source>void QOpenGLTimerQuery::end()</source>
          <target state="translated">void QOpenGLTimerQuery::end()</target>
        </trans-unit>
        <trans-unit id="bd72666534eaa6d69874334ff66e725cb32d823e" translate="yes" xml:space="preserve">
          <source>void QOpenGLTimerQuery::recordTimestamp()</source>
          <target state="translated">void QOpenGLTimerQuery::recordTimestamp()</target>
        </trans-unit>
        <trans-unit id="1104aa8ca30bd9944172db233c846a026c409d5a" translate="yes" xml:space="preserve">
          <source>void QOpenGLVersionProfile::setProfile(&lt;a href=&quot;qsurfaceformat#OpenGLContextProfile-enum&quot;&gt;QSurfaceFormat::OpenGLContextProfile&lt;/a&gt;</source>
          <target state="translated">void QOpenGLVersionProfile :: setProfile ( &lt;a href=&quot;qsurfaceformat#OpenGLContextProfile-enum&quot;&gt;QSurfaceFormat :: OpenGLContextProfile&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8c293ab81f47ce2ea939b1ce34869be48e820650" translate="yes" xml:space="preserve">
          <source>void QOpenGLVersionProfile::setVersion(int</source>
          <target state="translated">nietig QOpenGLVersionProfile::setVersion(int.)</target>
        </trans-unit>
        <trans-unit id="9f73e4c1be76c805bb167c1d01dabc23ba648000" translate="yes" xml:space="preserve">
          <source>void QOpenGLVertexArrayObject::bind()</source>
          <target state="translated">nietig QOpenGLVertexArrayObject::bind()</target>
        </trans-unit>
        <trans-unit id="2e9dfacb600efe094d0ea8148831261cced0ea01" translate="yes" xml:space="preserve">
          <source>void QOpenGLVertexArrayObject::destroy()</source>
          <target state="translated">nietig QOpenGLVertexArrayObject:::vernietig()</target>
        </trans-unit>
        <trans-unit id="a2556810c264b6452a0b66329df916fa090507dc" translate="yes" xml:space="preserve">
          <source>void QOpenGLVertexArrayObject::release()</source>
          <target state="translated">nietig QOpenGLVertexArrayObject::release()</target>
        </trans-unit>
        <trans-unit id="a7eadaffbb7e16ae24b4437bbf15257309163bf4" translate="yes" xml:space="preserve">
          <source>void QOpenGLWidget::doneCurrent()</source>
          <target state="translated">QOpenGLWidget:::doneCurrent()</target>
        </trans-unit>
        <trans-unit id="c70810d29d4a00444e8cc36774a669a08e4e5c38" translate="yes" xml:space="preserve">
          <source>void QOpenGLWidget::makeCurrent()</source>
          <target state="translated">nietige QOpenGLWidget::makeCurrent()</target>
        </trans-unit>
        <trans-unit id="0cac7644cd6d19589d20277a22d76ad36dc16399" translate="yes" xml:space="preserve">
          <source>void QOpenGLWidget::setFormat(const &lt;a href=&quot;qsurfaceformat&quot;&gt;QSurfaceFormat&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QOpenGLWidget :: setFormat (const &lt;a href=&quot;qsurfaceformat&quot;&gt;QSurfaceFormat&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="8bdf364a308aca69a5d37e5e03ce52fb9860e7a1" translate="yes" xml:space="preserve">
          <source>void QOpenGLWidget::setTextureFormat(GLenum</source>
          <target state="translated">nietige QOpenGLWidget::setTextureFormat (GLenum)</target>
        </trans-unit>
        <trans-unit id="2af6b57b58d00bff0c7eae4a877b654323dfd337" translate="yes" xml:space="preserve">
          <source>void QOpenGLWidget::setUpdateBehavior(&lt;a href=&quot;qopenglwidget#UpdateBehavior-enum&quot;&gt;QOpenGLWidget::UpdateBehavior&lt;/a&gt;</source>
          <target state="translated">void QOpenGLWidget :: setUpdateBehavior ( &lt;a href=&quot;qopenglwidget#UpdateBehavior-enum&quot;&gt;QOpenGLWidget :: UpdateBehavior&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="af9aae73555bdf9a71ed6eb87795f411e6063b55" translate="yes" xml:space="preserve">
          <source>void QOpenGLWindow::doneCurrent()</source>
          <target state="translated">nietig QOpenGLWindow::doneCurrent()</target>
        </trans-unit>
        <trans-unit id="354a03e0f7564429792e148dc5a34cc6f16f33f3" translate="yes" xml:space="preserve">
          <source>void QOpenGLWindow::makeCurrent()</source>
          <target state="translated">nietig QOpenGLWindow::makeCurrent()</target>
        </trans-unit>
        <trans-unit id="d9ab86259a6751731a978f6f1e1bfb0fe3686ce6" translate="yes" xml:space="preserve">
          <source>void QOrientationReading::setOrientation(&lt;a href=&quot;qorientationreading#Orientation-enum&quot;&gt;QOrientationReading::Orientation&lt;/a&gt;</source>
          <target state="translated">void QOrientationReading :: setOrientation ( &lt;a href=&quot;qorientationreading#Orientation-enum&quot;&gt;QOrientationReading :: Orientaci&amp;oacute;n&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7ea7d705f32cdd679b765c88f40d87a8c3405e31" translate="yes" xml:space="preserve">
          <source>void QPageLayout::setMinimumMargins(const &lt;a href=&quot;qmarginsf&quot;&gt;QMarginsF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPageLayout :: setMinimumMargins (const &lt;a href=&quot;qmarginsf&quot;&gt;QMarginsF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="a11f665c715c87674e591f0157b6a250fb8bf9c1" translate="yes" xml:space="preserve">
          <source>void QPageLayout::setMode(&lt;a href=&quot;qpagelayout#Mode-enum&quot;&gt;QPageLayout::Mode&lt;/a&gt;</source>
          <target state="translated">void QPageLayout :: setMode ( &lt;a href=&quot;qpagelayout#Mode-enum&quot;&gt;QPageLayout :: Mode&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c00ef068a3c0e9a19e786b7351db2748c11febdc" translate="yes" xml:space="preserve">
          <source>void QPageLayout::setOrientation(&lt;a href=&quot;qpagelayout#Orientation-enum&quot;&gt;QPageLayout::Orientation&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QPageLayout :: setOrientation ( &lt;a href=&quot;qpagelayout#Orientation-enum&quot;&gt;QPageLayout :: Orientaci&amp;oacute;n&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1d548dca21fad6a628f6a77bd2bbda558d1461d0" translate="yes" xml:space="preserve">
          <source>void QPageLayout::setPageSize(const &lt;a href=&quot;qpagesize&quot;&gt;QPageSize&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPageLayout :: setPageSize (const &lt;a href=&quot;qpagesize&quot;&gt;QPageSize&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="76bf83fe3d16ecd5fc2354639b21155536842fea" translate="yes" xml:space="preserve">
          <source>void QPageLayout::setUnits(&lt;a href=&quot;qpagelayout#Unit-enum&quot;&gt;QPageLayout::Unit&lt;/a&gt;</source>
          <target state="translated">void QPageLayout :: setUnits ( &lt;a href=&quot;qpagelayout#Unit-enum&quot;&gt;QPageLayout :: Unit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="18753b3455513e058c4032cb353e3580dee7d2f5" translate="yes" xml:space="preserve">
          <source>void QPageLayout::swap(&lt;a href=&quot;qpagelayout#QPageLayout&quot;&gt;QPageLayout&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPageLayout :: swap ( &lt;a href=&quot;qpagelayout#QPageLayout&quot;&gt;QPageLayout&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="8f9275450615dc094f3fc857b30b6d97ef38b35c" translate="yes" xml:space="preserve">
          <source>void QPageSetupDialog::open(&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="translated">void QPageSetupDialog :: open ( &lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="6cd1982c462e1953850616299a4b48e709140d12" translate="yes" xml:space="preserve">
          <source>void QPageSize::swap(&lt;a href=&quot;qpagesize#QPageSize&quot;&gt;QPageSize&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPageSize :: swap ( &lt;a href=&quot;qpagesize#QPageSize&quot;&gt;QPageSize&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="426b1fdee4d114f25442a10534ec999d8baad51d" translate="yes" xml:space="preserve">
          <source>void QPaintDeviceWindow::update(const &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPaintDeviceWindow :: update (const &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="90a0d632669581cb65a25f8aecdd66624c78cf65" translate="yes" xml:space="preserve">
          <source>void QPaintDeviceWindow::update(const &lt;a href=&quot;qregion&quot;&gt;QRegion&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPaintDeviceWindow :: update (const &lt;a href=&quot;qregion&quot;&gt;QRegion&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="58299c86c5b8af8670234b8c62a82a38d76bcd2d" translate="yes" xml:space="preserve">
          <source>void QPaintEngine::setActive(bool</source>
          <target state="translated">void QPaintEngine::setActive(bool</target>
        </trans-unit>
        <trans-unit id="669711ba170279d2c93031ac9494cc9310a58528" translate="yes" xml:space="preserve">
          <source>void QPaintedTextureImage::update(const &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPaintedTextureImage :: update (const &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="10de245b2def15fb5ed36ce6f51962c9d99e5693" translate="yes" xml:space="preserve">
          <source>void QPainter::beginNativePainting()</source>
          <target state="translated">Vacío QPainter::beginNativePainting()</target>
        </trans-unit>
        <trans-unit id="d9174722aacfb8a9458f6d01dfb0cb009cd9ab8a" translate="yes" xml:space="preserve">
          <source>void QPainter::drawArc(const &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPainter :: drawArc (const &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="d98dbe7f7a97e02da054d1dcf07f295fc9960e50" translate="yes" xml:space="preserve">
          <source>void QPainter::drawArc(const &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPainter :: drawArc (const &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="616d07232da013d1479ea0f5e404513b00e63852" translate="yes" xml:space="preserve">
          <source>void QPainter::drawArc(int</source>
          <target state="translated">void QPainter::drawArc(int</target>
        </trans-unit>
        <trans-unit id="c19a183006661ccb45f007d466bcbccd9a7f8e81" translate="yes" xml:space="preserve">
          <source>void QPainter::drawChord(const &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPainter :: drawChord (const &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="ed7030945ec537a6418034b6cf787aba1368a963" translate="yes" xml:space="preserve">
          <source>void QPainter::drawChord(const &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPainter :: drawChord (const &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="f6d165e816669f1f121548ef7e122259a8388a06" translate="yes" xml:space="preserve">
          <source>void QPainter::drawChord(int</source>
          <target state="translated">void QPainter::drawChord(int</target>
        </trans-unit>
        <trans-unit id="deaca34a38197dc5975d1e103bf47e6a989f3464" translate="yes" xml:space="preserve">
          <source>void QPainter::drawConvexPolygon(const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; *</source>
          <target state="translated">QPainter vac&amp;iacute;o :: drawConvexPolygon (const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="8fa42a8bb085a64eeb735dbc8ea8b18441757654" translate="yes" xml:space="preserve">
          <source>void QPainter::drawConvexPolygon(const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; *</source>
          <target state="translated">QPainter vac&amp;iacute;o :: drawConvexPolygon (const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="7dc94bbfe5b1955b5108b67a24e29595d69bcb0f" translate="yes" xml:space="preserve">
          <source>void QPainter::drawConvexPolygon(const &lt;a href=&quot;qpolygon&quot;&gt;QPolygon&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPainter :: drawConvexPolygon (const &lt;a href=&quot;qpolygon&quot;&gt;QPolygon&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="db08c163102da2b2dd8157caa0d93630f71ddc23" translate="yes" xml:space="preserve">
          <source>void QPainter::drawConvexPolygon(const &lt;a href=&quot;qpolygonf&quot;&gt;QPolygonF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPainter :: drawConvexPolygon (const &lt;a href=&quot;qpolygonf&quot;&gt;QPolygonF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="ff96e908a752d1fa93700695d86d2d847d18f1ad" translate="yes" xml:space="preserve">
          <source>void QPainter::drawEllipse(const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPainter :: drawEllipse (const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="c4166a8dce0001799754a49f23391e1491b16c8c" translate="yes" xml:space="preserve">
          <source>void QPainter::drawEllipse(const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPainter :: drawEllipse (const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="c8efad9c328b8e7bf0f0989c1007d28ecbfc0560" translate="yes" xml:space="preserve">
          <source>void QPainter::drawEllipse(const &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPainter :: drawEllipse (const &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="0a50f0d4b8bdd8c2ba22a565f03173ac3c653c9d" translate="yes" xml:space="preserve">
          <source>void QPainter::drawEllipse(const &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPainter :: drawEllipse (const &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="ff4d721fb32c4557fdb8ad147cb872d14723b5a0" translate="yes" xml:space="preserve">
          <source>void QPainter::drawEllipse(int</source>
          <target state="translated">void QPainter::drawEllipse(int</target>
        </trans-unit>
        <trans-unit id="472d8bdaafa9b41b73f935901cb9ae7a7ae52d73" translate="yes" xml:space="preserve">
          <source>void QPainter::drawGlyphRun(const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPainter :: drawGlyphRun (const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="1cc7cc7f1386ab216e6480b4a0cabe25f32eb222" translate="yes" xml:space="preserve">
          <source>void QPainter::drawImage(const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPainter :: drawImage (const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="d2712a4d094952bb4c000a90f07fb6a773e8608d" translate="yes" xml:space="preserve">
          <source>void QPainter::drawImage(const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPainter :: drawImage (const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="a9228667c8ee21040338d60ddd540b7f3049efe3" translate="yes" xml:space="preserve">
          <source>void QPainter::drawImage(const &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPainter :: drawImage (const &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="33aac109681fecd3d57a53844d0f30466e0cac95" translate="yes" xml:space="preserve">
          <source>void QPainter::drawImage(const &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPainter :: drawImage (const &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="4732a8e6ac03665318bdfc8496619d5c4df03ce9" translate="yes" xml:space="preserve">
          <source>void QPainter::drawImage(int</source>
          <target state="translated">void QPainter::drawImage(int</target>
        </trans-unit>
        <trans-unit id="9c94e8a7279f10d85815777fc0d6a2509fd1ef5e" translate="yes" xml:space="preserve">
          <source>void QPainter::drawLine(const &lt;a href=&quot;qline&quot;&gt;QLine&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPainter :: drawLine (const &lt;a href=&quot;qline&quot;&gt;QLine&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="7e6b0c9954a52203e1a6ff06fb6c3d4f7bb3b026" translate="yes" xml:space="preserve">
          <source>void QPainter::drawLine(const &lt;a href=&quot;qlinef&quot;&gt;QLineF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPainter :: drawLine (const &lt;a href=&quot;qlinef&quot;&gt;QLineF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="47617cd1018b0a153f9011963f6a0ae4b32c7389" translate="yes" xml:space="preserve">
          <source>void QPainter::drawLine(const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPainter :: drawLine (const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="45e666e916817be2ff19a863f7b4a48d097155d5" translate="yes" xml:space="preserve">
          <source>void QPainter::drawLine(const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPainter :: drawLine (const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="7bd848084cff5d29008169e0d853800d875ecbce" translate="yes" xml:space="preserve">
          <source>void QPainter::drawLine(int</source>
          <target state="translated">void QPainter::drawLine(int</target>
        </trans-unit>
        <trans-unit id="80740d015a0f0d2020f565715b695db7412a4b48" translate="yes" xml:space="preserve">
          <source>void QPainter::drawLines(const &lt;a href=&quot;qline&quot;&gt;QLine&lt;/a&gt; *</source>
          <target state="translated">void QPainter :: drawLines (const &lt;a href=&quot;qline&quot;&gt;QLine&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="c025038f8b753235a149f5650d376c2e5b534d83" translate="yes" xml:space="preserve">
          <source>void QPainter::drawLines(const &lt;a href=&quot;qlinef&quot;&gt;QLineF&lt;/a&gt; *</source>
          <target state="translated">QPainter vac&amp;iacute;o :: drawLines (const &lt;a href=&quot;qlinef&quot;&gt;QLineF&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="252b59ffab0012b89414b03b47bd1d33dac67dc3" translate="yes" xml:space="preserve">
          <source>void QPainter::drawLines(const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; *</source>
          <target state="translated">void QPainter :: drawLines (const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="d7242e6d572fbdbb548fc33f4e944827c2cd4c19" translate="yes" xml:space="preserve">
          <source>void QPainter::drawLines(const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; *</source>
          <target state="translated">void QPainter :: drawLines (const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="8319f23c5c189b7e5755a8159e356c8a44297ecd" translate="yes" xml:space="preserve">
          <source>void QPainter::drawLines(const &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;&lt;a href=&quot;qline&quot;&gt;QLine&lt;/a&gt;&amp;gt; &amp;amp;</source>
          <target state="translated">void QPainter :: drawLines (const &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt; &amp;lt; &lt;a href=&quot;qline&quot;&gt;QLine&lt;/a&gt; &amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="10074aa849d54d0bbb32db3726fd1ea2921d1ddf" translate="yes" xml:space="preserve">
          <source>void QPainter::drawLines(const &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;&lt;a href=&quot;qlinef&quot;&gt;QLineF&lt;/a&gt;&amp;gt; &amp;amp;</source>
          <target state="translated">void QPainter :: drawLines (const &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt; &amp;lt; &lt;a href=&quot;qlinef&quot;&gt;QLineF&lt;/a&gt; &amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="6e948167aded4a4a4bec9629eb905063495fd402" translate="yes" xml:space="preserve">
          <source>void QPainter::drawLines(const &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt;&amp;gt; &amp;amp;</source>
          <target state="translated">void QPainter :: drawLines (const &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt; &amp;lt; &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; &amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="4a4cb8957165dc441a32323d425f8bcdd624c25d" translate="yes" xml:space="preserve">
          <source>void QPainter::drawLines(const &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt;&amp;gt; &amp;amp;</source>
          <target state="translated">void QPainter :: drawLines (const &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt; &amp;lt; &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; &amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="251478f8ab6bdc751a1e1eb7a7cbdce342950ae7" translate="yes" xml:space="preserve">
          <source>void QPainter::drawPath(const &lt;a href=&quot;qpainterpath&quot;&gt;QPainterPath&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPainter :: drawPath (const &lt;a href=&quot;qpainterpath&quot;&gt;QPainterPath&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="9c985fd4c340a0d6b57bfc136c791f43a389de9e" translate="yes" xml:space="preserve">
          <source>void QPainter::drawPicture(const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPainter :: drawPicture (const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="6b1b104069af59e50c2aef88aedd74bbe407dcd6" translate="yes" xml:space="preserve">
          <source>void QPainter::drawPicture(const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPainter :: drawPicture (const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="a6966b40bb4bf58b5383f6bfc08af44fa192a0d4" translate="yes" xml:space="preserve">
          <source>void QPainter::drawPicture(int</source>
          <target state="translated">void QPainter::drawPicture(int</target>
        </trans-unit>
        <trans-unit id="08138dbc7152b0540fed9d33d93bf046105d1aef" translate="yes" xml:space="preserve">
          <source>void QPainter::drawPie(const &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPainter :: drawPie (const &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="decc2f605e9834ef73d4ae2eba208bb9fe496f96" translate="yes" xml:space="preserve">
          <source>void QPainter::drawPie(const &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPainter :: drawPie (const &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="b5260684803eea6351dbad683ede1b20023e98cb" translate="yes" xml:space="preserve">
          <source>void QPainter::drawPie(int</source>
          <target state="translated">void QPainter::drawPie(int</target>
        </trans-unit>
        <trans-unit id="44f833ae421e009a913711d0e61e5c21e681c8d0" translate="yes" xml:space="preserve">
          <source>void QPainter::drawPixmap(const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPainter :: drawPixmap (const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="6b80fbb78997cfb4f03acf5db24f3f25b9d0d9c9" translate="yes" xml:space="preserve">
          <source>void QPainter::drawPixmap(const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPainter :: drawPixmap (const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="0a6c84f9d87179d9c31d3c5259fef46ad0b8c21d" translate="yes" xml:space="preserve">
          <source>void QPainter::drawPixmap(const &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPainter :: drawPixmap (const &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="ff74d24f8ed4b9204bd055601fa80fbeaa29f87b" translate="yes" xml:space="preserve">
          <source>void QPainter::drawPixmap(const &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPainter :: drawPixmap (const &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="5ec3b689f0a68f0be7740b80cf467494fff2f137" translate="yes" xml:space="preserve">
          <source>void QPainter::drawPixmap(int</source>
          <target state="translated">void QPainter::drawPixmap(int</target>
        </trans-unit>
        <trans-unit id="451575e87f353cb9d33c78cf06bdb1f161da6ac1" translate="yes" xml:space="preserve">
          <source>void QPainter::drawPixmapFragments(const &lt;a href=&quot;qpainter-pixmapfragment&quot;&gt;QPainter::PixmapFragment&lt;/a&gt; *</source>
          <target state="translated">void QPainter :: drawPixmapFragments (const &lt;a href=&quot;qpainter-pixmapfragment&quot;&gt;QPainter :: PixmapFragment&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="268b54eddca472dd0def10c70bf8a0ac07f720ba" translate="yes" xml:space="preserve">
          <source>void QPainter::drawPoint(const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPainter :: drawPoint (const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="71c21c1687857893d2cab341433ef0e1015f883a" translate="yes" xml:space="preserve">
          <source>void QPainter::drawPoint(const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPainter :: drawPoint (const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="19eaee3c375b94048f33db299077fa0ac289815e" translate="yes" xml:space="preserve">
          <source>void QPainter::drawPoint(int</source>
          <target state="translated">void QPainter::drawPoint(int</target>
        </trans-unit>
        <trans-unit id="b4b311d9565cb66f7324d37210c75eb220b72e3f" translate="yes" xml:space="preserve">
          <source>void QPainter::drawPoints(const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; *</source>
          <target state="translated">void QPainter :: drawPoints (const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="6b8dbd4a88e60b489a790ea27f3d2cd0d7010662" translate="yes" xml:space="preserve">
          <source>void QPainter::drawPoints(const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; *</source>
          <target state="translated">void QPainter :: drawPoints (const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="e4d020c93304f635f6c53deae0561c8f1443209d" translate="yes" xml:space="preserve">
          <source>void QPainter::drawPoints(const &lt;a href=&quot;qpolygon&quot;&gt;QPolygon&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPainter :: drawPoints (const &lt;a href=&quot;qpolygon&quot;&gt;QPolygon&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="94acc66a5fb43971369ea5f155bef3d6ddeb5e4b" translate="yes" xml:space="preserve">
          <source>void QPainter::drawPoints(const &lt;a href=&quot;qpolygonf&quot;&gt;QPolygonF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPainter :: drawPoints (const &lt;a href=&quot;qpolygonf&quot;&gt;QPolygonF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="8c8da2d20bbb2b2fb45ede7501ae66e0f46bb723" translate="yes" xml:space="preserve">
          <source>void QPainter::drawPolygon(const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; *</source>
          <target state="translated">void QPainter :: drawPolygon (const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="d2403d403c32c054423b8c241308d58b6feb4be7" translate="yes" xml:space="preserve">
          <source>void QPainter::drawPolygon(const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; *</source>
          <target state="translated">void QPainter :: drawPolygon (const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="144b3942d0bff69e1145e5fe615e69be70f8c548" translate="yes" xml:space="preserve">
          <source>void QPainter::drawPolygon(const &lt;a href=&quot;qpolygon&quot;&gt;QPolygon&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPainter :: drawPolygon (const &lt;a href=&quot;qpolygon&quot;&gt;QPolygon&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="9238433e06539fe01a422fc1fc5d2d058230acda" translate="yes" xml:space="preserve">
          <source>void QPainter::drawPolygon(const &lt;a href=&quot;qpolygonf&quot;&gt;QPolygonF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPainter :: drawPolygon (const &lt;a href=&quot;qpolygonf&quot;&gt;QPolygonF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="d5df809e9b994ebf2c998caedc93586692bcc64d" translate="yes" xml:space="preserve">
          <source>void QPainter::drawPolyline(const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; *</source>
          <target state="translated">QPainter vac&amp;iacute;o :: drawPolyline (const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="74dac20a37b1be5c51cb2199118e67b0a5a03463" translate="yes" xml:space="preserve">
          <source>void QPainter::drawPolyline(const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; *</source>
          <target state="translated">void QPainter :: drawPolyline (const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="e4bad8188b972341a269e63bb016cb7774fa513c" translate="yes" xml:space="preserve">
          <source>void QPainter::drawPolyline(const &lt;a href=&quot;qpolygon&quot;&gt;QPolygon&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPainter :: drawPolyline (const &lt;a href=&quot;qpolygon&quot;&gt;QPolygon&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="8de1092da01bb26dac50b5dbf46951e7e6d26e97" translate="yes" xml:space="preserve">
          <source>void QPainter::drawPolyline(const &lt;a href=&quot;qpolygonf&quot;&gt;QPolygonF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPainter :: drawPolyline (const &lt;a href=&quot;qpolygonf&quot;&gt;QPolygonF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="a114ad3e012488c74b36e09ab3b0b80a13463520" translate="yes" xml:space="preserve">
          <source>void QPainter::drawRect(const &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPainter :: drawRect (const &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="c34e5feebabb7ab0aa91177fc6497c3443c19b30" translate="yes" xml:space="preserve">
          <source>void QPainter::drawRect(const &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPainter :: drawRect (const &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="1498b06b86d735fa7430d80f72c136a3b89dd1ed" translate="yes" xml:space="preserve">
          <source>void QPainter::drawRect(int</source>
          <target state="translated">void QPainter::drawRect(int</target>
        </trans-unit>
        <trans-unit id="a9ab8ba64e0975bbc1e9ca358fe957d81c7db8ed" translate="yes" xml:space="preserve">
          <source>void QPainter::drawRects(const &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; *</source>
          <target state="translated">void QPainter :: drawRects (const &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="b38ca4a2135cd5b651e4cabb57d89c392c06b315" translate="yes" xml:space="preserve">
          <source>void QPainter::drawRects(const &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; *</source>
          <target state="translated">QPainter vac&amp;iacute;o :: drawRects (const &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="d628c6a20e08cb0d04781dc93c6866a7af1341c6" translate="yes" xml:space="preserve">
          <source>void QPainter::drawRects(const &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt;&amp;gt; &amp;amp;</source>
          <target state="translated">void QPainter :: drawRects (const &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt; &amp;lt; &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; &amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="4bec7e9913c6d6648189c0cf6600e38a46ea9af7" translate="yes" xml:space="preserve">
          <source>void QPainter::drawRects(const &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt;&amp;gt; &amp;amp;</source>
          <target state="translated">void QPainter :: drawRects (const &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt; &amp;lt; &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; &amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="70661c376fe36841728ea708ddb5e2968dfc8b42" translate="yes" xml:space="preserve">
          <source>void QPainter::drawRoundedRect(const &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPainter :: drawRoundedRect (const &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="7eb4f2bab9cbd18a54aa9c091fe50e193dac3d6e" translate="yes" xml:space="preserve">
          <source>void QPainter::drawRoundedRect(const &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPainter :: drawRoundedRect (const &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="784357aac45fc7537a5320e75c50c10871ac7ba6" translate="yes" xml:space="preserve">
          <source>void QPainter::drawRoundedRect(int</source>
          <target state="translated">void QPainter::drawRoundedRect(int</target>
        </trans-unit>
        <trans-unit id="892f4c298e6d4d533310189137ff8ea98f47d79f" translate="yes" xml:space="preserve">
          <source>void QPainter::drawStaticText(const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPainter :: drawStaticText (const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="5a32da2e5594900233b81f73bfc334c8c84d1213" translate="yes" xml:space="preserve">
          <source>void QPainter::drawStaticText(const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPainter :: drawStaticText (const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="d22a47d63a126d5d147ee05a74f7c963624e514e" translate="yes" xml:space="preserve">
          <source>void QPainter::drawStaticText(int</source>
          <target state="translated">void QPainter::drawStaticText(int</target>
        </trans-unit>
        <trans-unit id="fd8c7cdf5f700745d9bf887a2e2e7223c9f38890" translate="yes" xml:space="preserve">
          <source>void QPainter::drawText(const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPainter :: drawText (const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="edea492c2900e81b385bf08e55ad95c2f4a85e2e" translate="yes" xml:space="preserve">
          <source>void QPainter::drawText(const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPainter :: drawText (const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="94a689f1d905c3078658f874f2931425a602ac47" translate="yes" xml:space="preserve">
          <source>void QPainter::drawText(const &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPainter :: drawText (const &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="8c2d269fbc649606869645ba67b4b8ba6d87482f" translate="yes" xml:space="preserve">
          <source>void QPainter::drawText(const &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPainter :: drawText (const &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="670eb58f734c43108a98aea7f8ee8abb3c21b6de" translate="yes" xml:space="preserve">
          <source>void QPainter::drawText(int</source>
          <target state="translated">void QPainter::drawText(int</target>
        </trans-unit>
        <trans-unit id="06dee8f661a43d5b9ba0969b06c2c43057a9e643" translate="yes" xml:space="preserve">
          <source>void QPainter::drawTiledPixmap(const &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPainter :: drawTiledPixmap (const &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="6c1a546ff8b490a4156f37534f37c3aa5ee1245e" translate="yes" xml:space="preserve">
          <source>void QPainter::drawTiledPixmap(const &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPainter :: drawTiledPixmap (const &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="146a4607c989834ef36cfed9094796b26076af73" translate="yes" xml:space="preserve">
          <source>void QPainter::drawTiledPixmap(int</source>
          <target state="translated">void QPainter::drawTiledPixmap(int</target>
        </trans-unit>
        <trans-unit id="3e1a54a0afae9473da0d01e3ace39d1bc128023a" translate="yes" xml:space="preserve">
          <source>void QPainter::endNativePainting()</source>
          <target state="translated">void QPainter::endNativePainting()</target>
        </trans-unit>
        <trans-unit id="32e233c54c1d31195bbcddd30dc3f6e10a4b1112" translate="yes" xml:space="preserve">
          <source>void QPainter::eraseRect(const &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPainter :: eraseRect (const &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="3863c53f205ce58d5a833e3a47d62030ff7f2b0f" translate="yes" xml:space="preserve">
          <source>void QPainter::eraseRect(const &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPainter :: eraseRect (const &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="4922508305f27061c6280268452037ab7891b749" translate="yes" xml:space="preserve">
          <source>void QPainter::eraseRect(int</source>
          <target state="translated">anular QPainter::eraseRect(int</target>
        </trans-unit>
        <trans-unit id="87f5391fdc70c17fba00fc9a382541fbe00f45a9" translate="yes" xml:space="preserve">
          <source>void QPainter::fillPath(const &lt;a href=&quot;qpainterpath&quot;&gt;QPainterPath&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPainter :: fillPath (const &lt;a href=&quot;qpainterpath&quot;&gt;QPainterPath&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="8e0eb1f4f3e6be14b7f366bde4fab65ffde56151" translate="yes" xml:space="preserve">
          <source>void QPainter::fillRect(const &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPainter :: fillRect (const &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="c8a1dbfd35bdfd148ccf5c7aa11c99c7567c4122" translate="yes" xml:space="preserve">
          <source>void QPainter::fillRect(const &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPainter :: fillRect (const &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="af3bf7fff1198cc4960b0656b613db4c992d3495" translate="yes" xml:space="preserve">
          <source>void QPainter::fillRect(int</source>
          <target state="translated">void QPainter::fillRect(int</target>
        </trans-unit>
        <trans-unit id="0319f1f76cbc29d399caf6086d40a5049075ff9a" translate="yes" xml:space="preserve">
          <source>void QPainter::resetTransform()</source>
          <target state="translated">anular QPainter::resetTransform()</target>
        </trans-unit>
        <trans-unit id="19d5aa3af199c98f653d6148751d50743c7c46ac" translate="yes" xml:space="preserve">
          <source>void QPainter::restore()</source>
          <target state="translated">anular el QPainter::restore()</target>
        </trans-unit>
        <trans-unit id="e6201b19de209c13aaf15cf645b5051bab63d98a" translate="yes" xml:space="preserve">
          <source>void QPainter::rotate(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QPainter :: rotar ( &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dab4f7c28affeab4ab32257b7296fe65a0b95970" translate="yes" xml:space="preserve">
          <source>void QPainter::rotate(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48fd301e1613e561cb385e07908972c3f29634d3" translate="yes" xml:space="preserve">
          <source>void QPainter::save()</source>
          <target state="translated">anula el QPainter::save()</target>
        </trans-unit>
        <trans-unit id="bff56f1d5f56a536b6900054ed3a679053933e85" translate="yes" xml:space="preserve">
          <source>void QPainter::scale(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QPainter :: escala ( &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4ab247f304a753d92004ab02a6f363e326929208" translate="yes" xml:space="preserve">
          <source>void QPainter::scale(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6b9dcef67bd5c3e644ff9deac22bda13fc4f6ac" translate="yes" xml:space="preserve">
          <source>void QPainter::setBackground(const &lt;a href=&quot;qbrush&quot;&gt;QBrush&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPainter :: setBackground (const &lt;a href=&quot;qbrush&quot;&gt;QBrush&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="eb617cc3ec024ccb42151427b92419d2b3f246a9" translate="yes" xml:space="preserve">
          <source>void QPainter::setBackgroundMode(&lt;a href=&quot;qt#BGMode-enum&quot;&gt;Qt::BGMode&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QPainter :: setBackgroundMode ( &lt;a href=&quot;qt#BGMode-enum&quot;&gt;Qt :: BGMode&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="76a4938a047b9c3c864374edabad025d98f90d3c" translate="yes" xml:space="preserve">
          <source>void QPainter::setBrush(&lt;a href=&quot;qt#BrushStyle-enum&quot;&gt;Qt::BrushStyle&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QPainter :: setBrush ( &lt;a href=&quot;qt#BrushStyle-enum&quot;&gt;Qt :: BrushStyle&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a3acc85dded3b73fc852f371a468a97f5a493eb3" translate="yes" xml:space="preserve">
          <source>void QPainter::setBrush(const &lt;a href=&quot;qbrush&quot;&gt;QBrush&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPainter :: setBrush (const &lt;a href=&quot;qbrush&quot;&gt;QBrush&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="1790a51a1d7eae1ea0753417dfe140601312dcf0" translate="yes" xml:space="preserve">
          <source>void QPainter::setBrushOrigin(const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPainter :: setBrushOrigin (const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="0ca9f63c8fa4e59cfc7af364d4295d005398a167" translate="yes" xml:space="preserve">
          <source>void QPainter::setBrushOrigin(const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPainter :: setBrushOrigin (const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="2a7d603cdc6e9a56d2570c8f2a210bdde8609629" translate="yes" xml:space="preserve">
          <source>void QPainter::setBrushOrigin(int</source>
          <target state="translated">anular QPainter::setBrushOrigin(int</target>
        </trans-unit>
        <trans-unit id="5c404e53044c5e7c0ab3462dc5bd3604353fae72" translate="yes" xml:space="preserve">
          <source>void QPainter::setClipPath(const &lt;a href=&quot;qpainterpath&quot;&gt;QPainterPath&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPainter :: setClipPath (const &lt;a href=&quot;qpainterpath&quot;&gt;QPainterPath&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="0d7122fd135f73c5ba6f62156ce0f9bc3a3b4b08" translate="yes" xml:space="preserve">
          <source>void QPainter::setClipRect(const &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPainter :: setClipRect (const &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="2d8bc829fd49145c42467536865dfe6220c40e20" translate="yes" xml:space="preserve">
          <source>void QPainter::setClipRect(const &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPainter :: setClipRect (const &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="bede6e4ebc74b771a17231261653d6294ef80bb0" translate="yes" xml:space="preserve">
          <source>void QPainter::setClipRect(int</source>
          <target state="translated">void QPainter::setClipRect(int</target>
        </trans-unit>
        <trans-unit id="a3798c14b80d50e94fb80e68849d0ca99ed3ee77" translate="yes" xml:space="preserve">
          <source>void QPainter::setClipRegion(const &lt;a href=&quot;qregion&quot;&gt;QRegion&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPainter :: setClipRegion (const &lt;a href=&quot;qregion&quot;&gt;QRegion&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="5c53d6dc3760e6cd957acd0e113da10b7bbf8d26" translate="yes" xml:space="preserve">
          <source>void QPainter::setClipping(bool</source>
          <target state="translated">void QPainter::setClipping(bool</target>
        </trans-unit>
        <trans-unit id="bd0677b6f9078bb4439fc9e4bee7d0968f88422e" translate="yes" xml:space="preserve">
          <source>void QPainter::setCompositionMode(&lt;a href=&quot;qpainter#CompositionMode-enum&quot;&gt;QPainter::CompositionMode&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QPainter :: setCompositionMode ( &lt;a href=&quot;qpainter#CompositionMode-enum&quot;&gt;QPainter :: CompositionMode&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5aa13574210c514aed2e257852f76df651d3be11" translate="yes" xml:space="preserve">
          <source>void QPainter::setFont(const &lt;a href=&quot;qfont&quot;&gt;QFont&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPainter :: setFont (const &lt;a href=&quot;qfont&quot;&gt;QFont&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="9ddda4d22357202cdd4fd85e53c493ff3782dc6f" translate="yes" xml:space="preserve">
          <source>void QPainter::setLayoutDirection(&lt;a href=&quot;qt#LayoutDirection-enum&quot;&gt;Qt::LayoutDirection&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QPainter :: setLayoutDirection ( &lt;a href=&quot;qt#LayoutDirection-enum&quot;&gt;Qt :: LayoutDirection&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cbe2a456e1b1c844f161be82be0cd58d19993008" translate="yes" xml:space="preserve">
          <source>void QPainter::setOpacity(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">QPainter vac&amp;iacute;o :: setOpacity ( &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0bb3ee101b1819d7353599ba585052b3814916b6" translate="yes" xml:space="preserve">
          <source>void QPainter::setOpacity(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29e136b8185510370eb9a049ff609e77aaf3e301" translate="yes" xml:space="preserve">
          <source>void QPainter::setPen(&lt;a href=&quot;qt#PenStyle-enum&quot;&gt;Qt::PenStyle&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QPainter :: setPen ( &lt;a href=&quot;qt#PenStyle-enum&quot;&gt;Qt :: PenStyle&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e19e073acbf257562a845e75f8abfc3c8c34bc0d" translate="yes" xml:space="preserve">
          <source>void QPainter::setPen(const &lt;a href=&quot;qcolor&quot;&gt;QColor&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPainter :: setPen (const &lt;a href=&quot;qcolor&quot;&gt;QColor&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="6c46630798d2b95a876f8db85ecec601787aaa0a" translate="yes" xml:space="preserve">
          <source>void QPainter::setPen(const &lt;a href=&quot;qpen&quot;&gt;QPen&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPainter :: setPen (const &lt;a href=&quot;qpen&quot;&gt;QPen&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="1083a1e8b79af8e1e28d2306b5f424f37ae4b0ef" translate="yes" xml:space="preserve">
          <source>void QPainter::setRenderHint(&lt;a href=&quot;qpainter#RenderHint-enum&quot;&gt;QPainter::RenderHint&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QPainter :: setRenderHint ( &lt;a href=&quot;qpainter#RenderHint-enum&quot;&gt;QPainter :: RenderHint&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="66bc0a879d9326b3533ce7e5f6a3f03dd2c6c74e" translate="yes" xml:space="preserve">
          <source>void QPainter::setRenderHints(&lt;a href=&quot;qpainter#RenderHint-enum&quot;&gt;QPainter::RenderHints&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QPainter :: setRenderHints ( &lt;a href=&quot;qpainter#RenderHint-enum&quot;&gt;QPainter :: RenderHints&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="66fe1552ca8393e772c1a9b91dc73eb6224b80fd" translate="yes" xml:space="preserve">
          <source>void QPainter::setTransform(const &lt;a href=&quot;qtransform&quot;&gt;QTransform&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPainter :: setTransform (const &lt;a href=&quot;qtransform&quot;&gt;QTransform&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="72d3a0a3549763936ee6a9401c80b26d72b507a8" translate="yes" xml:space="preserve">
          <source>void QPainter::setViewTransformEnabled(bool</source>
          <target state="translated">void QPainter::setViewTransformEnabled(bool</target>
        </trans-unit>
        <trans-unit id="0a8619082bc8fad5c2ad19b78bf95371f75b58f7" translate="yes" xml:space="preserve">
          <source>void QPainter::setViewport(const &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPainter :: setViewport (const &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="8e4d5b849131a2668ad79310c0c2572e27467516" translate="yes" xml:space="preserve">
          <source>void QPainter::setViewport(int</source>
          <target state="translated">anular QPainter::setViewport(int</target>
        </trans-unit>
        <trans-unit id="75068a5d547aaf0748989e31c1f8c4dfe31c5df1" translate="yes" xml:space="preserve">
          <source>void QPainter::setWindow(const &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPainter :: setWindow (const &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="d90a629435e15bf22720d8aa5704af1975630bb4" translate="yes" xml:space="preserve">
          <source>void QPainter::setWindow(int</source>
          <target state="translated">anular QPainter::setWindow(int</target>
        </trans-unit>
        <trans-unit id="369807b647b3fcf69edee35d563bf803c435b5f6" translate="yes" xml:space="preserve">
          <source>void QPainter::setWorldMatrixEnabled(bool</source>
          <target state="translated">void QPainter::setWorldMatrixEnabled(bool</target>
        </trans-unit>
        <trans-unit id="e904d94e80a72704fd5ec21d931310f02db1e84a" translate="yes" xml:space="preserve">
          <source>void QPainter::setWorldTransform(const &lt;a href=&quot;qtransform&quot;&gt;QTransform&lt;/a&gt; &amp;amp;</source>
          <target state="translated">QPainter vac&amp;iacute;o :: setWorldTransform (const &lt;a href=&quot;qtransform&quot;&gt;QTransform&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="6fd5aed6c5871eb3b1b42f58fcc1f915213b2b2e" translate="yes" xml:space="preserve">
          <source>void QPainter::shear(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">void QPainter :: shear ( &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="70d34809ec8b5d01c9c3cc23597ea8623bc22099" translate="yes" xml:space="preserve">
          <source>void QPainter::shear(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e0c7eb1021e0f05d1cf32e0e94357ed7ac1030c" translate="yes" xml:space="preserve">
          <source>void QPainter::strokePath(const &lt;a href=&quot;qpainterpath&quot;&gt;QPainterPath&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPainter :: strokePath (const &lt;a href=&quot;qpainterpath&quot;&gt;QPainterPath&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="af7248bc15164520d7bb87c92d15ca429a11c651" translate="yes" xml:space="preserve">
          <source>void QPainter::translate(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">QPainter vac&amp;iacute;o :: traducir ( &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d7c3a58116cfd2088fe2f63c902e7a206410ef66" translate="yes" xml:space="preserve">
          <source>void QPainter::translate(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae053b65b70b3880248297c9d147f475643a8028" translate="yes" xml:space="preserve">
          <source>void QPainter::translate(const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPainter :: translate (const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="424eb43460d1548b83b30a023a68753463538c16" translate="yes" xml:space="preserve">
          <source>void QPainter::translate(const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPainter :: translate (const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="154b5cf9a4a6c55e9187747b9c2f249e2e5fb324" translate="yes" xml:space="preserve">
          <source>void QPainterPath::addEllipse(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">anular QPainterPath :: addEllipse ( &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d3ca2a7c23cf2c628cb8517ba9b84da3083ec658" translate="yes" xml:space="preserve">
          <source>void QPainterPath::addEllipse(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca2c54b7ecb9e8e263059a54ae48a104fa156ad5" translate="yes" xml:space="preserve">
          <source>void QPainterPath::addEllipse(const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPainterPath :: addEllipse (const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="adee4d70f435f8816a3a8723def064399b15f683" translate="yes" xml:space="preserve">
          <source>void QPainterPath::addEllipse(const &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPainterPath :: addEllipse (const &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="35b9ee722dbe9978bed8d8dbebd1468cc886ff58" translate="yes" xml:space="preserve">
          <source>void QPainterPath::addPath(const &lt;a href=&quot;qpainterpath#QPainterPath&quot;&gt;QPainterPath&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPainterPath :: addPath (const &lt;a href=&quot;qpainterpath#QPainterPath&quot;&gt;QPainterPath&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="825557d5cd775a5dc58c4885e7588ccdc7e1270e" translate="yes" xml:space="preserve">
          <source>void QPainterPath::addPolygon(const &lt;a href=&quot;qpolygonf&quot;&gt;QPolygonF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPainterPath :: addPolygon (const &lt;a href=&quot;qpolygonf&quot;&gt;QPolygonF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="d43fe6d8dd6c32d5d68c5706cb46bb40aee71106" translate="yes" xml:space="preserve">
          <source>void QPainterPath::addRect(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QPainterPath :: addRect ( &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8f8c3dbed237c3779aaa8be86f23f6fba7a4024a" translate="yes" xml:space="preserve">
          <source>void QPainterPath::addRect(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f112464f042f06dbcaa0d0ffb6e44a5f3a11907" translate="yes" xml:space="preserve">
          <source>void QPainterPath::addRect(const &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPainterPath :: addRect (const &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="e429f080f46185c18391eed80198f453229bafaf" translate="yes" xml:space="preserve">
          <source>void QPainterPath::addRegion(const &lt;a href=&quot;qregion&quot;&gt;QRegion&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPainterPath :: addRegion (const &lt;a href=&quot;qregion&quot;&gt;QRegion&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="a6922dbad4153ab2e1dc01aa134d029a20bbbdf9" translate="yes" xml:space="preserve">
          <source>void QPainterPath::addRoundedRect(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">QPainterPath vac&amp;iacute;o :: addRoundedRect ( &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2329d34622bf73b5431118f5093687ffec7bedd3" translate="yes" xml:space="preserve">
          <source>void QPainterPath::addRoundedRect(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16838d16430c42e340cfb47526c1defe4d2ea7a7" translate="yes" xml:space="preserve">
          <source>void QPainterPath::addRoundedRect(const &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPainterPath :: addRoundedRect (const &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="32429251ae2524b7737f9958e6163f298b185de6" translate="yes" xml:space="preserve">
          <source>void QPainterPath::addText(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">anular QPainterPath :: addText ( &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ed5ba7048c09e2118e17995f89895173ec09da16" translate="yes" xml:space="preserve">
          <source>void QPainterPath::addText(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8afece8151ec9ad16638d7fa169c8868319be1d7" translate="yes" xml:space="preserve">
          <source>void QPainterPath::addText(const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPainterPath :: addText (const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="ae1344db76f70b73485a860b030dbffc28d4d120" translate="yes" xml:space="preserve">
          <source>void QPainterPath::arcMoveTo(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QPainterPath :: arcMoveTo ( &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="be1285e9411c0a9bd2c52df1f10abd5efd31e2cd" translate="yes" xml:space="preserve">
          <source>void QPainterPath::arcMoveTo(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="617f01acbe672f2571e9795af89ae055f385e67c" translate="yes" xml:space="preserve">
          <source>void QPainterPath::arcMoveTo(const &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPainterPath :: arcMoveTo (const &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="84cf55ff4020ff2706efa37cd2d0484e5974dd65" translate="yes" xml:space="preserve">
          <source>void QPainterPath::arcTo(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QPainterPath :: arcTo ( &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="42048fb84c8802b67666713b2146e76bf6496b34" translate="yes" xml:space="preserve">
          <source>void QPainterPath::arcTo(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63a2f001c947449d029fdd59ab57b2cae2a0cfbc" translate="yes" xml:space="preserve">
          <source>void QPainterPath::arcTo(const &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPainterPath :: arcTo (const &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="efe24371ad23de1fa84c47d00f79dd49fc68bb62" translate="yes" xml:space="preserve">
          <source>void QPainterPath::clear()</source>
          <target state="translated">void QPainterPath::clear()</target>
        </trans-unit>
        <trans-unit id="f70fba40b48845030785423a99982da877cb4f75" translate="yes" xml:space="preserve">
          <source>void QPainterPath::closeSubpath()</source>
          <target state="translated">anular QPainterPath::closeSubpath()</target>
        </trans-unit>
        <trans-unit id="5dbb76ef7214dc5b8982622a9724eb1f13423531" translate="yes" xml:space="preserve">
          <source>void QPainterPath::connectPath(const &lt;a href=&quot;qpainterpath#QPainterPath&quot;&gt;QPainterPath&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPainterPath :: connectPath (const &lt;a href=&quot;qpainterpath#QPainterPath&quot;&gt;QPainterPath&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="634d0264c6a9aba9b8248d5838a870595da8437a" translate="yes" xml:space="preserve">
          <source>void QPainterPath::cubicTo(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QPainterPath :: cubicTo ( &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a1ae6d6d72d815294b031b35dbf1b9928da00b7d" translate="yes" xml:space="preserve">
          <source>void QPainterPath::cubicTo(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aea8943921ec7beea69d944648538d7b8a0ad72c" translate="yes" xml:space="preserve">
          <source>void QPainterPath::cubicTo(const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPainterPath :: cubicTo (const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="65b216a0fecf231d21484aa388391b90c7ac2ef9" translate="yes" xml:space="preserve">
          <source>void QPainterPath::lineTo(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">anular QPainterPath :: lineTo ( &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ef169a632ec34f6c31a5c630ee959417abfd55f6" translate="yes" xml:space="preserve">
          <source>void QPainterPath::lineTo(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d816a89bfc2d532108871d2c7d623cc365647b5" translate="yes" xml:space="preserve">
          <source>void QPainterPath::lineTo(const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPainterPath :: lineTo (const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="ac29e910e608b4334f107f4f0748047f1f0047c9" translate="yes" xml:space="preserve">
          <source>void QPainterPath::moveTo(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QPainterPath :: moveTo ( &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="96600968f0e0d2baa9a732e3ad1deaec71a50101" translate="yes" xml:space="preserve">
          <source>void QPainterPath::moveTo(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="237bb866ab5dd40ad28854f7b8d84d05879a895f" translate="yes" xml:space="preserve">
          <source>void QPainterPath::moveTo(const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPainterPath :: moveTo (const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="54fdae91afb18c96d4b7438e0f93bc7cf96173dc" translate="yes" xml:space="preserve">
          <source>void QPainterPath::quadTo(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">anular QPainterPath :: quadTo ( &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="30b579320f62a240f40e9d3bf11ea7ebe5ba7b1a" translate="yes" xml:space="preserve">
          <source>void QPainterPath::quadTo(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3473c9bffb460534a921eb3434f5b985525f064d" translate="yes" xml:space="preserve">
          <source>void QPainterPath::quadTo(const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPainterPath :: quadTo (const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="a79273df374d352e628880f6edd237495162a924" translate="yes" xml:space="preserve">
          <source>void QPainterPath::reserve(int</source>
          <target state="translated">anular el QPainterPath::reserva(int</target>
        </trans-unit>
        <trans-unit id="29ffdaa7327d179abd8e8c64d56aecd71ab03d14" translate="yes" xml:space="preserve">
          <source>void QPainterPath::setElementPositionAt(int</source>
          <target state="translated">void QPainterPath::setElementPositionAt(int</target>
        </trans-unit>
        <trans-unit id="39d3af31436ca59e2f0194bcd3f08c3d43055987" translate="yes" xml:space="preserve">
          <source>void QPainterPath::setFillRule(&lt;a href=&quot;qt#FillRule-enum&quot;&gt;Qt::FillRule&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QPainterPath :: setFillRule ( &lt;a href=&quot;qt#FillRule-enum&quot;&gt;Qt :: FillRule&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="60cb2ae13950d3df21e1851b0a4e60f0bd896a1c" translate="yes" xml:space="preserve">
          <source>void QPainterPath::swap(&lt;a href=&quot;qpainterpath#QPainterPath&quot;&gt;QPainterPath&lt;/a&gt; &amp;amp;</source>
          <target state="translated">anular QPainterPath :: swap ( &lt;a href=&quot;qpainterpath#QPainterPath&quot;&gt;QPainterPath&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="7ad1691add2c9f28251056eddcfcaf512e1f81a3" translate="yes" xml:space="preserve">
          <source>void QPainterPath::translate(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QPainterPath :: translate ( &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="19e6a215baabe5e117997eaf40b338d801538f8e" translate="yes" xml:space="preserve">
          <source>void QPainterPath::translate(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee2e3b1989f867f3f1f3fedc6e0947d32ab9a1ae" translate="yes" xml:space="preserve">
          <source>void QPainterPath::translate(const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPainterPath :: translate (const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="ae3d0cf2def738a7b925440e89624bc1a22ce70b" translate="yes" xml:space="preserve">
          <source>void QPainterPathStroker::setCapStyle(&lt;a href=&quot;qt#PenCapStyle-enum&quot;&gt;Qt::PenCapStyle&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QPainterPathStroker :: setCapStyle ( &lt;a href=&quot;qt#PenCapStyle-enum&quot;&gt;Qt :: PenCapStyle&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="16b9c75404f7f7635583cf13297237ecea668d23" translate="yes" xml:space="preserve">
          <source>void QPainterPathStroker::setCurveThreshold(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QPainterPathStroker :: setCurveThreshold ( &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="521ac01953c31245fc1bd1e6b7a1321fb47aebfa" translate="yes" xml:space="preserve">
          <source>void QPainterPathStroker::setCurveThreshold(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64d5e8ea463cbf88e593933b05ddd7e66ff11f50" translate="yes" xml:space="preserve">
          <source>void QPainterPathStroker::setDashOffset(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QPainterPathStroker :: setDashOffset ( &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="131651022f4b5d15e190c00e6feccd379bc29891" translate="yes" xml:space="preserve">
          <source>void QPainterPathStroker::setDashOffset(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e156ff03746f5bed366d9a8e8943a335ff1cff45" translate="yes" xml:space="preserve">
          <source>void QPainterPathStroker::setDashPattern(&lt;a href=&quot;qt#PenStyle-enum&quot;&gt;Qt::PenStyle&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QPainterPathStroker :: setDashPattern ( &lt;a href=&quot;qt#PenStyle-enum&quot;&gt;Qt :: PenStyle&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4f62f74541aa9e37e157953009535fa0f13c5ef6" translate="yes" xml:space="preserve">
          <source>void QPainterPathStroker::setDashPattern(const &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;&amp;gt; &amp;amp;</source>
          <target state="translated">void QPainterPathStroker :: setDashPattern (const &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt; &amp;lt; &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt; &amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="df858e4eb31b4511e46bb3cbc6ae3436f55ae769" translate="yes" xml:space="preserve">
          <source>void QPainterPathStroker::setDashPattern(const &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;&amp;gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="831f7e6257dcd4020f2f1b1bf9730ee9087d2de7" translate="yes" xml:space="preserve">
          <source>void QPainterPathStroker::setJoinStyle(&lt;a href=&quot;qt#PenJoinStyle-enum&quot;&gt;Qt::PenJoinStyle&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QPainterPathStroker :: setJoinStyle ( &lt;a href=&quot;qt#PenJoinStyle-enum&quot;&gt;Qt :: PenJoinStyle&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b9a22c3f7bd8275e8d9c25baac662cf097d72c94" translate="yes" xml:space="preserve">
          <source>void QPainterPathStroker::setMiterLimit(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QPainterPathStroker :: setMiterLimit ( &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ff0cf698078b8bc47b518473099d33283281fc89" translate="yes" xml:space="preserve">
          <source>void QPainterPathStroker::setMiterLimit(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6c51239533c90e86a02f27d2f1b2f15790b933d" translate="yes" xml:space="preserve">
          <source>void QPainterPathStroker::setWidth(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QPainterPathStroker :: setWidth ( &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b3a1d88c2eb0398987f6ccd5328f11a1d66b56f6" translate="yes" xml:space="preserve">
          <source>void QPainterPathStroker::setWidth(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c25c4045b4b3fd259065d95c6db9b2a286f9ec47" translate="yes" xml:space="preserve">
          <source>void QPair::swap(&lt;a href=&quot;qpair#QPair&quot;&gt;QPair&lt;/a&gt;&amp;lt;T1, T2&amp;gt; &amp;amp;</source>
          <target state="translated">anular QPair :: swap ( &lt;a href=&quot;qpair#QPair&quot;&gt;QPair&lt;/a&gt; &amp;lt;T1, T2&amp;gt; y</target>
        </trans-unit>
        <trans-unit id="27e4e65c1f1b400df295249a7789477ad5396902" translate="yes" xml:space="preserve">
          <source>void QPalette::setBrush(&lt;a href=&quot;qpalette#ColorGroup-enum&quot;&gt;QPalette::ColorGroup&lt;/a&gt;</source>
          <target state="translated">anular QPalette :: setBrush ( &lt;a href=&quot;qpalette#ColorGroup-enum&quot;&gt;QPalette :: ColorGroup&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cb2db518f0691b52c02c29fa2be2a2bd2e32bec6" translate="yes" xml:space="preserve">
          <source>void QPalette::setBrush(&lt;a href=&quot;qpalette#ColorRole-enum&quot;&gt;QPalette::ColorRole&lt;/a&gt;</source>
          <target state="translated">anular QPalette :: setBrush ( &lt;a href=&quot;qpalette#ColorRole-enum&quot;&gt;QPalette :: ColorRole&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="192e3e9b9b7ba14d246ee70433f4379580e706bd" translate="yes" xml:space="preserve">
          <source>void QPalette::setColor(&lt;a href=&quot;qpalette#ColorGroup-enum&quot;&gt;QPalette::ColorGroup&lt;/a&gt;</source>
          <target state="translated">anular QPalette :: setColor ( &lt;a href=&quot;qpalette#ColorGroup-enum&quot;&gt;QPalette :: ColorGroup&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cb3c0b1fe09cdf0be7412db22e77ed33d0be6fe9" translate="yes" xml:space="preserve">
          <source>void QPalette::setColor(&lt;a href=&quot;qpalette#ColorRole-enum&quot;&gt;QPalette::ColorRole&lt;/a&gt;</source>
          <target state="translated">anular QPalette :: setColor ( &lt;a href=&quot;qpalette#ColorRole-enum&quot;&gt;QPalette :: ColorRole&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="46168461e2c10a7fb7a4c5d33e2c714aaadbb8bd" translate="yes" xml:space="preserve">
          <source>void QPalette::setColorGroup(&lt;a href=&quot;qpalette#ColorGroup-enum&quot;&gt;QPalette::ColorGroup&lt;/a&gt;</source>
          <target state="translated">anular QPalette :: setColorGroup ( &lt;a href=&quot;qpalette#ColorGroup-enum&quot;&gt;QPalette :: ColorGroup&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6b7f0e7269cc97b6b997ce32d55a855fc2810d43" translate="yes" xml:space="preserve">
          <source>void QPalette::setCurrentColorGroup(&lt;a href=&quot;qpalette#ColorGroup-enum&quot;&gt;QPalette::ColorGroup&lt;/a&gt;</source>
          <target state="translated">anular QPalette :: setCurrentColorGroup ( &lt;a href=&quot;qpalette#ColorGroup-enum&quot;&gt;QPalette :: ColorGroup&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a17e79f5e30beb0be6df23507d0fd30b835d2681" translate="yes" xml:space="preserve">
          <source>void QPalette::swap(&lt;a href=&quot;qpalette#QPalette&quot;&gt;QPalette&lt;/a&gt; &amp;amp;</source>
          <target state="translated">anular QPalette :: swap ( &lt;a href=&quot;qpalette#QPalette&quot;&gt;QPalette&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="b92d790242230b4d332c924b3a2e52aa13b30347" translate="yes" xml:space="preserve">
          <source>void QPdfDocument::close()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="911c8ffb97926a673fe882021c1ed4a277aa2cdb" translate="yes" xml:space="preserve">
          <source>void QPdfDocumentRenderOptions::setRenderFlags(&lt;a href=&quot;qpdf#RenderFlag-enum&quot;&gt;QPdf::RenderFlags&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42674384d9a756008aa3f2076e387e6abd8b27ea" translate="yes" xml:space="preserve">
          <source>void QPdfDocumentRenderOptions::setRotation(&lt;a href=&quot;qpdf#Rotation-enum&quot;&gt;QPdf::Rotation&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d96a593e7c5979b1be48fffeef5a4618c058830f" translate="yes" xml:space="preserve">
          <source>void QPdfPageNavigation::setCurrentPage(int</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03fcc32a0d7ffe5fffd622c5921c162e4490cb1a" translate="yes" xml:space="preserve">
          <source>void QPdfPageNavigation::setDocument(&lt;a href=&quot;qpdfdocument&quot;&gt;QPdfDocument&lt;/a&gt; *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cbe7c25c5d22d12c45d99d4a8f18d17b243d0ad" translate="yes" xml:space="preserve">
          <source>void QPdfPageRenderer::setDocument(&lt;a href=&quot;qpdfdocument&quot;&gt;QPdfDocument&lt;/a&gt; *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e8ac0babf16c7d10da98242af8e2ec878c08d47" translate="yes" xml:space="preserve">
          <source>void QPdfPageRenderer::setRenderMode(&lt;a href=&quot;qpdfpagerenderer#RenderMode-enum&quot;&gt;QPdfPageRenderer::RenderMode&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d890cacb972e45c4c740e7b4917c39ebf8b67f6" translate="yes" xml:space="preserve">
          <source>void QPdfSelection::copyToClipboard(&lt;a href=&quot;qclipboard#Mode-enum&quot;&gt;QClipboard::Mode&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30a87d374b1db0a83135242c030ce484692b9a58" translate="yes" xml:space="preserve">
          <source>void QPdfWriter::addFileAttachment(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f0b542fb28e40dac3c0bab5b101204dfaa9a8a6" translate="yes" xml:space="preserve">
          <source>void QPdfWriter::setCreator(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPdfWriter :: setCreator (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="d3dc603a0f159a1279f1704077f7bd428220f54d" translate="yes" xml:space="preserve">
          <source>void QPdfWriter::setDocumentXmpMetadata(const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bdda7163848055f1b3c4f64358b9b5e9500dc18" translate="yes" xml:space="preserve">
          <source>void QPdfWriter::setPdfVersion(&lt;a href=&quot;qpagedpaintdevice#PdfVersion-enum&quot;&gt;QPagedPaintDevice::PdfVersion&lt;/a&gt;</source>
          <target state="translated">anular QPdfWriter :: setPdfVersion ( &lt;a href=&quot;qpagedpaintdevice#PdfVersion-enum&quot;&gt;QPagedPaintDevice :: PdfVersion&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="157b84d06e4d45b7e4e069cbe745c25cc7c30ba4" translate="yes" xml:space="preserve">
          <source>void QPdfWriter::setResolution(int</source>
          <target state="translated">void QPdfWriter::setResolution(int</target>
        </trans-unit>
        <trans-unit id="ad3252b62d5d9468269e278b7c333d1ff15d1057" translate="yes" xml:space="preserve">
          <source>void QPdfWriter::setTitle(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPdfWriter :: setTitle (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="86ec3f2a6bbefe1d64b5f433a8ee158d04813f00" translate="yes" xml:space="preserve">
          <source>void QPen::setBrush(const &lt;a href=&quot;qbrush&quot;&gt;QBrush&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPen :: setBrush (const &lt;a href=&quot;qbrush&quot;&gt;QBrush&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="76ecaea42d752e45a6dcb0ad1fedd7630d4cb19b" translate="yes" xml:space="preserve">
          <source>void QPen::setCapStyle(&lt;a href=&quot;qt#PenCapStyle-enum&quot;&gt;Qt::PenCapStyle&lt;/a&gt;</source>
          <target state="translated">anular QPen :: setCapStyle ( &lt;a href=&quot;qt#PenCapStyle-enum&quot;&gt;Qt :: PenCapStyle&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b2229568e4eff0571e7196e48d08b5e90556cbdf" translate="yes" xml:space="preserve">
          <source>void QPen::setColor(const &lt;a href=&quot;qcolor&quot;&gt;QColor&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPen :: setColor (const &lt;a href=&quot;qcolor&quot;&gt;QColor&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="89a40200effcfe6b1788d8651816da0d5ad42402" translate="yes" xml:space="preserve">
          <source>void QPen::setCosmetic(bool</source>
          <target state="translated">void QPen::setCosmetic(bool</target>
        </trans-unit>
        <trans-unit id="347d4558447f0d51198c124b97ad36f80a7e1a6b" translate="yes" xml:space="preserve">
          <source>void QPen::setDashOffset(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">QPen vac&amp;iacute;o :: setDashOffset ( &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f0cbcbb1d52c6dd044e2e0843d5bf7d3e46074b5" translate="yes" xml:space="preserve">
          <source>void QPen::setDashOffset(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb0b88e73ae56721eb7bc1dfaa90f5f30d3ae453" translate="yes" xml:space="preserve">
          <source>void QPen::setDashPattern(const &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;&amp;gt; &amp;amp;</source>
          <target state="translated">void QPen :: setDashPattern (const &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt; &amp;lt; &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt; &amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="8aace00b5dadfaa440f34151b1c3c4eca8a7b449" translate="yes" xml:space="preserve">
          <source>void QPen::setDashPattern(const &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;&amp;gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66a4d4b13e0cf78f6225af518826aac5a6307bee" translate="yes" xml:space="preserve">
          <source>void QPen::setJoinStyle(&lt;a href=&quot;qt#PenJoinStyle-enum&quot;&gt;Qt::PenJoinStyle&lt;/a&gt;</source>
          <target state="translated">anular QPen :: setJoinStyle ( &lt;a href=&quot;qt#PenJoinStyle-enum&quot;&gt;Qt :: PenJoinStyle&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5b0a7e37036e85b273cb2feef4b63d525215b006" translate="yes" xml:space="preserve">
          <source>void QPen::setMiterLimit(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">QPen vac&amp;iacute;o :: setMiterLimit ( &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="83df6a670a84c90b81e6af3d2e7be87c28688f24" translate="yes" xml:space="preserve">
          <source>void QPen::setMiterLimit(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69f12c6a242ddd5e1143755050292830e33a2273" translate="yes" xml:space="preserve">
          <source>void QPen::setStyle(&lt;a href=&quot;qt#PenStyle-enum&quot;&gt;Qt::PenStyle&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QPen :: setStyle ( &lt;a href=&quot;qt#PenStyle-enum&quot;&gt;Qt :: PenStyle&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="98648e4831a0c878161ef210eec133ddbc0d4cd4" translate="yes" xml:space="preserve">
          <source>void QPen::setWidth(int</source>
          <target state="translated">void QPen::setWidth(int</target>
        </trans-unit>
        <trans-unit id="82abfcb95a8d16138fc0282c0a77aaf8d68364c6" translate="yes" xml:space="preserve">
          <source>void QPen::setWidthF(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">anular QPen :: setWidthF ( &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2bbf60101c71231947aeefef2237ec9b09fe36d4" translate="yes" xml:space="preserve">
          <source>void QPen::setWidthF(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6f25bdc1f8c43b63c0dc6007ff1f6716e62ae2d" translate="yes" xml:space="preserve">
          <source>void QPen::swap(&lt;a href=&quot;qpen#QPen&quot;&gt;QPen&lt;/a&gt; &amp;amp;</source>
          <target state="translated">anular QPen :: swap ( &lt;a href=&quot;qpen#QPen&quot;&gt;QPen&lt;/a&gt; y</target>
        </trans-unit>
        <trans-unit id="2efc75e24e8adc485240a4c823207f8ab271ff1d" translate="yes" xml:space="preserve">
          <source>void QPersistentModelIndex::swap(QPersistentModelIndex &amp;amp;</source>
          <target state="translated">void QPersistentModelIndex :: swap (QPersistentModelIndex &amp;amp;</target>
        </trans-unit>
        <trans-unit id="87ff930093dc5ac9af76b940969f1e442f9380b4" translate="yes" xml:space="preserve">
          <source>void QPicture::setBoundingRect(const &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPicture :: setBoundingRect (const &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="88ae69870c380230769b1a75bd205e8ce3dec4b6" translate="yes" xml:space="preserve">
          <source>void QPicture::swap(&lt;a href=&quot;qpicture#QPicture&quot;&gt;QPicture&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPicture :: swap ( &lt;a href=&quot;qpicture#QPicture&quot;&gt;QPicture&lt;/a&gt; y</target>
        </trans-unit>
        <trans-unit id="491336efcba4d9fd0afb1b99391206f5517b9d70" translate="yes" xml:space="preserve">
          <source>void QPictureIO::setDescription(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPictureIO :: setDescription (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="ce647e44ddbeacff4dcff27fb030c3b2247905f7" translate="yes" xml:space="preserve">
          <source>void QPictureIO::setFileName(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPictureIO :: setFileName (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="3efedf9985b528accd1887494504730352bc40c3" translate="yes" xml:space="preserve">
          <source>void QPictureIO::setFormat(const char *</source>
          <target state="translated">void QPictureIO::setFormat(const char *</target>
        </trans-unit>
        <trans-unit id="68cd1c0f8a91cbc5c5fe07a25ac87cc1ef500e0b" translate="yes" xml:space="preserve">
          <source>void QPictureIO::setGamma(float</source>
          <target state="translated">void QPictureIO::setGamma(float)</target>
        </trans-unit>
        <trans-unit id="aac3766b8451ddd674763d686ff7a58964ebbe62" translate="yes" xml:space="preserve">
          <source>void QPictureIO::setIODevice(&lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt; *</source>
          <target state="translated">anular QPictureIO :: setIODevice ( &lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="924c2d4f2cc3b8ec16b3cc2f16f3e9b6966f4927" translate="yes" xml:space="preserve">
          <source>void QPictureIO::setParameters(const char *</source>
          <target state="translated">void QPictureIO::setParameters(const char *</target>
        </trans-unit>
        <trans-unit id="dcfe0ad0fcb5c03545ca67fa57fc85a4be3d147d" translate="yes" xml:space="preserve">
          <source>void QPictureIO::setPicture(const &lt;a href=&quot;qpicture&quot;&gt;QPicture&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPictureIO :: setPicture (const &lt;a href=&quot;qpicture&quot;&gt;QPicture&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="461d89d09f42c8997c17ba7f67be6c35f35c5f59" translate="yes" xml:space="preserve">
          <source>void QPictureIO::setQuality(int</source>
          <target state="translated">void QPictureIO::setQuality(int</target>
        </trans-unit>
        <trans-unit id="5c98a6298db6f187646ab4cb75b59294b0eaa640" translate="yes" xml:space="preserve">
          <source>void QPictureIO::setStatus(int</source>
          <target state="translated">anular QPictureIO::setStatus(int</target>
        </trans-unit>
        <trans-unit id="4e26a5a7df72fcae3b39cbeb6b5586aeb9d7aa93" translate="yes" xml:space="preserve">
          <source>void QPieSeries::clear()</source>
          <target state="translated">anular QPieSeries::clear()</target>
        </trans-unit>
        <trans-unit id="f97d13251a5b23d549035733dda222993ff49b54" translate="yes" xml:space="preserve">
          <source>void QPieSeries::setLabelsPosition(&lt;a href=&quot;qpieslice#LabelPosition-enum&quot;&gt;QPieSlice::LabelPosition&lt;/a&gt;</source>
          <target state="translated">anular QPieSeries :: setLabelsPosition ( &lt;a href=&quot;qpieslice#LabelPosition-enum&quot;&gt;QPieSlice :: LabelPosition&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4f65b06fe71b0bd76f3c4ab5f5720bb56c97809a" translate="yes" xml:space="preserve">
          <source>void QPieSeries::setLabelsVisible(bool</source>
          <target state="translated">void QPieSeries::setLabelsVisible(bool</target>
        </trans-unit>
        <trans-unit id="9c71f50caf7880a70dd53a897527f517d2b6cc1e" translate="yes" xml:space="preserve">
          <source>void QPieSeries::setPieEndAngle(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">anular QPieSeries :: setPieEndAngle ( &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5471e1652d2bc781da294955ea22be60fc6d5133" translate="yes" xml:space="preserve">
          <source>void QPieSeries::setPieEndAngle(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7120c067332619b5a7de908eb3cd67424e3df7b" translate="yes" xml:space="preserve">
          <source>void QPixmap::detach()</source>
          <target state="translated">anular el QPixmap::separar()</target>
        </trans-unit>
        <trans-unit id="45770b7212682f4c85873288b46430561ad233b9" translate="yes" xml:space="preserve">
          <source>void QPixmap::fill(const &lt;a href=&quot;qcolor&quot;&gt;QColor&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPixmap :: fill (const &lt;a href=&quot;qcolor&quot;&gt;QColor&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="f0330984164c1c29d3adfc91658b2f1757266935" translate="yes" xml:space="preserve">
          <source>void QPixmap::scroll(int</source>
          <target state="translated">anular QPixmap::scroll(int</target>
        </trans-unit>
        <trans-unit id="bf462aa90de286153452d10abae71b16395b741c" translate="yes" xml:space="preserve">
          <source>void QPixmap::setAlphaChannel(const &lt;a href=&quot;qpixmap#QPixmap&quot;&gt;QPixmap&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPixmap :: setAlphaChannel (const &lt;a href=&quot;qpixmap#QPixmap&quot;&gt;QPixmap&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="58bf5c87cc60a86dcef2df35ca1b12a790d9ff25" translate="yes" xml:space="preserve">
          <source>void QPixmap::setDevicePixelRatio(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">QPixmap vac&amp;iacute;o :: setDevicePixelRatio ( &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9ca5b630bd1d90fae2a71a80afcb5e4c4be2e3cd" translate="yes" xml:space="preserve">
          <source>void QPixmap::setDevicePixelRatio(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84f3e42cd812a4bdf0c6bedfac775a4800303634" translate="yes" xml:space="preserve">
          <source>void QPixmap::setMask(const &lt;a href=&quot;qbitmap&quot;&gt;QBitmap&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPixmap :: setMask (const &lt;a href=&quot;qbitmap&quot;&gt;QBitmap&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="9f68601d80a2db0ed45989b26dff6b36862448c3" translate="yes" xml:space="preserve">
          <source>void QPixmap::swap(&lt;a href=&quot;qpixmap#QPixmap&quot;&gt;QPixmap&lt;/a&gt; &amp;amp;</source>
          <target state="translated">anular QPixmap :: swap ( &lt;a href=&quot;qpixmap#QPixmap&quot;&gt;QPixmap&lt;/a&gt; y</target>
        </trans-unit>
        <trans-unit id="c90cfc0008f52f42c100a4b937215c899e31ff14" translate="yes" xml:space="preserve">
          <source>void QPlace::appendContactDetail(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPlace :: appendContactDetail (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="53af4395dacba1770b27bb82fb8389506fa717c5" translate="yes" xml:space="preserve">
          <source>void QPlace::insertContent(&lt;a href=&quot;qplacecontent#Type-enum&quot;&gt;QPlaceContent::Type&lt;/a&gt;</source>
          <target state="translated">anular QPlace :: insertContent ( &lt;a href=&quot;qplacecontent#Type-enum&quot;&gt;QPlaceContent :: Tipo&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8aaf4072f932e5cb4fb2b9059c4265bd0adf205e" translate="yes" xml:space="preserve">
          <source>void QPlace::removeContactDetails(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPlace :: removeContactDetails (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="b7233ec2e7b9a6752eda5669c9c0484e2d041b5e" translate="yes" xml:space="preserve">
          <source>void QPlace::removeExtendedAttribute(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">QPlace vac&amp;iacute;o :: removeExtendedAttribute (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="414225c0230c9d515a10c29b1c68b0d625ec7c43" translate="yes" xml:space="preserve">
          <source>void QPlace::setAttribution(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPlace :: setAttribution (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="03af936e9508ec7b52639d01f6801bab6d7399d5" translate="yes" xml:space="preserve">
          <source>void QPlace::setCategories(const &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;&lt;a href=&quot;qplacecategory&quot;&gt;QPlaceCategory&lt;/a&gt;&amp;gt; &amp;amp;</source>
          <target state="translated">void QPlace :: setCategories (const &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; &amp;lt; &lt;a href=&quot;qplacecategory&quot;&gt;QPlaceCategory&lt;/a&gt; &amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="6b6fe42cb13c64c973e969fc4091815b01fe607a" translate="yes" xml:space="preserve">
          <source>void QPlace::setCategory(const &lt;a href=&quot;qplacecategory&quot;&gt;QPlaceCategory&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPlace :: setCategory (const &lt;a href=&quot;qplacecategory&quot;&gt;QPlaceCategory&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="490fd028b2ae50c30243f064777df88bdb8d36ba" translate="yes" xml:space="preserve">
          <source>void QPlace::setContactDetails(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPlace :: setContactDetails (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="7a9a968c619acef6ac6706c11fca31f3ed50e241" translate="yes" xml:space="preserve">
          <source>void QPlace::setContent(&lt;a href=&quot;qplacecontent#Type-enum&quot;&gt;QPlaceContent::Type&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QPlace :: setContent ( &lt;a href=&quot;qplacecontent#Type-enum&quot;&gt;QPlaceContent :: Tipo&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="86ab165bb297c5a8ae1cd7f4cbdc416fd45f1857" translate="yes" xml:space="preserve">
          <source>void QPlace::setDetailsFetched(bool</source>
          <target state="translated">void QPlace::setDetailsFetched(bool</target>
        </trans-unit>
        <trans-unit id="66f0a403c502ac3c7bed88e07bc8dcd7d83cb5f9" translate="yes" xml:space="preserve">
          <source>void QPlace::setExtendedAttribute(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">QPlace vac&amp;iacute;o :: setExtendedAttribute (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="70ebc7f10311ef0ec844890992f20e46d27baae6" translate="yes" xml:space="preserve">
          <source>void QPlace::setIcon(const &lt;a href=&quot;qplaceicon&quot;&gt;QPlaceIcon&lt;/a&gt; &amp;amp;</source>
          <target state="translated">anular QPlace :: setIcon (const &lt;a href=&quot;qplaceicon&quot;&gt;QPlaceIcon&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="eae0320f3e3cb31ff5e0a73f2ef130759f9217b6" translate="yes" xml:space="preserve">
          <source>void QPlace::setLocation(const &lt;a href=&quot;qgeolocation&quot;&gt;QGeoLocation&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPlace :: setLocation (const &lt;a href=&quot;qgeolocation&quot;&gt;QGeoLocation&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="f4922885ddfee1b3621582d03240cb78ac9bbaad" translate="yes" xml:space="preserve">
          <source>void QPlace::setName(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPlace :: setName (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="3509ee6f6e40108e08e7047e05ab8c52db68fc02" translate="yes" xml:space="preserve">
          <source>void QPlace::setPlaceId(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPlace :: setPlaceId (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="7f5849b84bf63527b7955c5f03f0581abfbf8097" translate="yes" xml:space="preserve">
          <source>void QPlace::setRatings(const &lt;a href=&quot;qplaceratings&quot;&gt;QPlaceRatings&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPlace :: setRatings (const &lt;a href=&quot;qplaceratings&quot;&gt;QPlaceRatings&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="906e16a6eb5399f8b3fe01d14c6486cb02181ebd" translate="yes" xml:space="preserve">
          <source>void QPlace::setSupplier(const &lt;a href=&quot;qplacesupplier&quot;&gt;QPlaceSupplier&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPlace :: setSupplier (const &lt;a href=&quot;qplacesupplier&quot;&gt;QPlaceSupplier&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="bcf9216c85269021b248626ee0bc3281ae2625c5" translate="yes" xml:space="preserve">
          <source>void QPlace::setTotalContentCount(&lt;a href=&quot;qplacecontent#Type-enum&quot;&gt;QPlaceContent::Type&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QPlace :: setTotalContentCount ( &lt;a href=&quot;qplacecontent#Type-enum&quot;&gt;QPlaceContent :: Tipo&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cb03ce3a5097b10989d757e66fe9b841381e3262" translate="yes" xml:space="preserve">
          <source>void QPlace::setVisibility(&lt;a href=&quot;qlocation#Visibility-enum&quot;&gt;QLocation::Visibility&lt;/a&gt;</source>
          <target state="translated">void QPlace :: setVisibility ( &lt;a href=&quot;qlocation#Visibility-enum&quot;&gt;QLocation :: Visibility&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2d260cdb12516f4049487815343be48837b54101" translate="yes" xml:space="preserve">
          <source>void QPlaceAttribute::setLabel(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPlaceAttribute :: setLabel (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="c134262aea7ea48de757c6b6ae3bcb3c40008c92" translate="yes" xml:space="preserve">
          <source>void QPlaceAttribute::setText(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPlaceAttribute :: setText (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="dddee958316b59174f7cf256790ce828cfd02e54" translate="yes" xml:space="preserve">
          <source>void QPlaceCategory::setCategoryId(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPlaceCategory :: setCategoryId (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="2e8f9b9e7f4b1ba9d7f5b926fa0c687890e9a645" translate="yes" xml:space="preserve">
          <source>void QPlaceCategory::setIcon(const &lt;a href=&quot;qplaceicon&quot;&gt;QPlaceIcon&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPlaceCategory :: setIcon (const &lt;a href=&quot;qplaceicon&quot;&gt;QPlaceIcon&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="a02933c65fca2f161a04dba4139cfadf83ace8ee" translate="yes" xml:space="preserve">
          <source>void QPlaceCategory::setName(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPlaceCategory :: setName (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="e677655c7dbc6f1e7e6828dc097550b42e135ba1" translate="yes" xml:space="preserve">
          <source>void QPlaceCategory::setVisibility(&lt;a href=&quot;qlocation#Visibility-enum&quot;&gt;QLocation::Visibility&lt;/a&gt;</source>
          <target state="translated">void QPlaceCategory :: setVisibility ( &lt;a href=&quot;qlocation#Visibility-enum&quot;&gt;QLocation :: Visibility&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3ef94392e6856cb471ab68787d5053b78776136d" translate="yes" xml:space="preserve">
          <source>void QPlaceContactDetail::clear()</source>
          <target state="translated">anular QPlaceContactDetail::clear()</target>
        </trans-unit>
        <trans-unit id="b90f03657c11674806e7a22fd6a77d8fc144af31" translate="yes" xml:space="preserve">
          <source>void QPlaceContactDetail::setLabel(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPlaceContactDetail :: setLabel (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="33289d79bb71542696eed01bc09f7fa4e429f9b8" translate="yes" xml:space="preserve">
          <source>void QPlaceContactDetail::setValue(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPlaceContactDetail :: setValue (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="840d3c54301bd4529cb35e90db0f2b3a06fbc988" translate="yes" xml:space="preserve">
          <source>void QPlaceContent::setAttribution(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPlaceContent :: setAttribution (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="8b7e36527efaeae2ac5d26aabed9a71b6571ac35" translate="yes" xml:space="preserve">
          <source>void QPlaceContent::setSupplier(const &lt;a href=&quot;qplacesupplier&quot;&gt;QPlaceSupplier&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPlaceContent :: setSupplier (const &lt;a href=&quot;qplacesupplier&quot;&gt;QPlaceSupplier&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="c583212033e79bfb65d7f20ef889c1838c8a01eb" translate="yes" xml:space="preserve">
          <source>void QPlaceContent::setUser(const &lt;a href=&quot;qplaceuser&quot;&gt;QPlaceUser&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPlaceContent :: setUser (const &lt;a href=&quot;qplaceuser&quot;&gt;QPlaceUser&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="8b47e7b2a811a936c23430cd000c40780163b012" translate="yes" xml:space="preserve">
          <source>void QPlaceContentRequest::clear()</source>
          <target state="translated">anular QPlaceContentRequest::clear()</target>
        </trans-unit>
        <trans-unit id="e55fee3f4ba6ceb5d68256918f2acfb1e95b2a55" translate="yes" xml:space="preserve">
          <source>void QPlaceContentRequest::setContentContext(const &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPlaceContentRequest :: setContentContext (const &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="489740e375913f10544a887cdda30c16580a9d3a" translate="yes" xml:space="preserve">
          <source>void QPlaceContentRequest::setContentType(&lt;a href=&quot;qplacecontent#Type-enum&quot;&gt;QPlaceContent::Type&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QPlaceContentRequest :: setContentType ( &lt;a href=&quot;qplacecontent#Type-enum&quot;&gt;QPlaceContent :: Tipo&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="15603e419cdc169de4845ebe54094835befbe845" translate="yes" xml:space="preserve">
          <source>void QPlaceContentRequest::setLimit(int</source>
          <target state="translated">void QPlaceContentRequest::setLimit(int</target>
        </trans-unit>
        <trans-unit id="1c8e1b7e3222b1df0e0f32846785bf75365aac42" translate="yes" xml:space="preserve">
          <source>void QPlaceContentRequest::setPlaceId(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPlaceContentRequest :: setPlaceId (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="0c1a7c575d3a1715fdf06a2d151bd2636c5d28e1" translate="yes" xml:space="preserve">
          <source>void QPlaceEditorial::setLanguage(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPlaceEditorial :: setLanguage (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="2d12c702302d616851848b3a29b044fb3378f4fa" translate="yes" xml:space="preserve">
          <source>void QPlaceEditorial::setText(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPlaceEditorial :: setText (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="2c21c7f9c3d63c845a4532b92656455501bd767c" translate="yes" xml:space="preserve">
          <source>void QPlaceEditorial::setTitle(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPlaceEditorial :: setTitle (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="a47b1c18e7d576541d80c79e14f2116914fbc0e5" translate="yes" xml:space="preserve">
          <source>void QPlaceIcon::setManager(&lt;a href=&quot;qplacemanager&quot;&gt;QPlaceManager&lt;/a&gt; *</source>
          <target state="translated">anular QPlaceIcon :: setManager ( &lt;a href=&quot;qplacemanager&quot;&gt;QPlaceManager&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="ee2550890595baf893738bc54fb5cd84c17df2da" translate="yes" xml:space="preserve">
          <source>void QPlaceIcon::setParameters(const &lt;a href=&quot;qvariant#QVariantMap-typedef&quot;&gt;QVariantMap&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPlaceIcon :: setParameters (const &lt;a href=&quot;qvariant#QVariantMap-typedef&quot;&gt;QVariantMap&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="fec2173dbd339b4f2184c82e35c51326d140dfa5" translate="yes" xml:space="preserve">
          <source>void QPlaceImage::setImageId(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPlaceImage :: setImageId (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="5acdcb55ca414b1b1e2d0e092185e2e61b3fa219" translate="yes" xml:space="preserve">
          <source>void QPlaceImage::setMimeType(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPlaceImage :: setMimeType (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="4a9a5e4f8a70a7097dc5f74aca7269f3cf74cbc7" translate="yes" xml:space="preserve">
          <source>void QPlaceImage::setUrl(const &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPlaceImage :: setUrl (const &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="52e84c8b6a93939212fff4cbe024c5a506979911" translate="yes" xml:space="preserve">
          <source>void QPlaceManager::setLocale(const &lt;a href=&quot;qlocale&quot;&gt;QLocale&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPlaceManager :: setLocale (const &lt;a href=&quot;qlocale&quot;&gt;QLocale&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="1862f6fc7d9a77b724aade54e6e36aa5adffa2e3" translate="yes" xml:space="preserve">
          <source>void QPlaceManager::setLocales(const &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;&lt;a href=&quot;qlocale&quot;&gt;QLocale&lt;/a&gt;&amp;gt; &amp;amp;</source>
          <target state="translated">anular QPlaceManager :: setLocales (const &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; &amp;lt; &lt;a href=&quot;qlocale&quot;&gt;QLocale&lt;/a&gt; &amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="ddedd7fcb48b58f809d06071a1c23413e7b02c58" translate="yes" xml:space="preserve">
          <source>void QPlaceMatchRequest::clear()</source>
          <target state="translated">anular QPlaceMatchRequest::clear()</target>
        </trans-unit>
        <trans-unit id="844d1bb9c0dde00081ad3aee3ac7b05db09d7c8a" translate="yes" xml:space="preserve">
          <source>void QPlaceMatchRequest::setParameters(const &lt;a href=&quot;qvariant#QVariantMap-typedef&quot;&gt;QVariantMap&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPlaceMatchRequest :: setParameters (const &lt;a href=&quot;qvariant#QVariantMap-typedef&quot;&gt;QVariantMap&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="381826ab7d4082fb4864550ea56ec60664a29978" translate="yes" xml:space="preserve">
          <source>void QPlaceMatchRequest::setPlaces(const &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;&lt;a href=&quot;qplace&quot;&gt;QPlace&lt;/a&gt;&amp;gt;</source>
          <target state="translated">anular QPlaceMatchRequest :: setPlaces (const &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; &amp;lt; &lt;a href=&quot;qplace&quot;&gt;QPlace&lt;/a&gt; &amp;gt;</target>
        </trans-unit>
        <trans-unit id="aa19000c7d90f0fef07ec7fd97f0c4631182bbc3" translate="yes" xml:space="preserve">
          <source>void QPlaceMatchRequest::setResults(const &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;&lt;a href=&quot;qplacesearchresult&quot;&gt;QPlaceSearchResult&lt;/a&gt;&amp;gt; &amp;amp;</source>
          <target state="translated">void QPlaceMatchRequest :: setResults (const &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; &amp;lt; &lt;a href=&quot;qplacesearchresult&quot;&gt;QPlaceSearchResult&lt;/a&gt; &amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="4ff00aa9426ba12eb40d65e2dc9912c70b16c3d9" translate="yes" xml:space="preserve">
          <source>void QPlaceProposedSearchResult::setSearchRequest(const &lt;a href=&quot;qplacesearchrequest&quot;&gt;QPlaceSearchRequest&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPlaceProposedSearchResult :: setSearchRequest (const &lt;a href=&quot;qplacesearchrequest&quot;&gt;QPlaceSearchRequest&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="88cf9267a6467159b629f5893150625469697acd" translate="yes" xml:space="preserve">
          <source>void QPlaceRatings::setAverage(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">anular QPlaceRatings :: setAverage ( &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="706735f19ea2c3230f70b562c1f911a0ad4db3fb" translate="yes" xml:space="preserve">
          <source>void QPlaceRatings::setAverage(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62dcc2fbdc6d75ab0181309ed891d706909b569e" translate="yes" xml:space="preserve">
          <source>void QPlaceRatings::setCount(int</source>
          <target state="translated">anular QPlaceRatings::setCount(int</target>
        </trans-unit>
        <trans-unit id="93abde38ddc563a3737153fff548ad30ae18f062" translate="yes" xml:space="preserve">
          <source>void QPlaceRatings::setMaximum(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">anular QPlaceRatings :: setMaximum ( &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b5469f1e020005ddc43f0e2424647602271a424a" translate="yes" xml:space="preserve">
          <source>void QPlaceRatings::setMaximum(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0f2d5a27f8c3399f7c45e5a03cc45f94f1039fa" translate="yes" xml:space="preserve">
          <source>void QPlaceResult::setDistance(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">anular QPlaceResult :: setDistance ( &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e81c4a55441cb869920c7da6b924c0b6e0b005f3" translate="yes" xml:space="preserve">
          <source>void QPlaceResult::setDistance(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30c3e0baa94258a436cf5ca8fec5d9b5a0a957e3" translate="yes" xml:space="preserve">
          <source>void QPlaceResult::setPlace(const &lt;a href=&quot;qplace&quot;&gt;QPlace&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPlaceResult :: setPlace (const &lt;a href=&quot;qplace&quot;&gt;QPlace&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="c3f2005be235316c555d9e53f7edec73f5c9a37e" translate="yes" xml:space="preserve">
          <source>void QPlaceResult::setSponsored(bool</source>
          <target state="translated">anular QPlaceResultado::setPatrocinado(bool</target>
        </trans-unit>
        <trans-unit id="76e9c3ef54e180c2f23fdc29170968dda1b1e99e" translate="yes" xml:space="preserve">
          <source>void QPlaceReview::setDateTime(const &lt;a href=&quot;qdatetime&quot;&gt;QDateTime&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPlaceReview :: setDateTime (const &lt;a href=&quot;qdatetime&quot;&gt;QDateTime&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="44d19edc6fa5a9bf7521793727ec9d54d81341bf" translate="yes" xml:space="preserve">
          <source>void QPlaceReview::setLanguage(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPlaceReview :: setLanguage (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="d47b9670f3493cb348b23ef9d3f57f33b0582458" translate="yes" xml:space="preserve">
          <source>void QPlaceReview::setRating(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QPlaceReview :: setRating ( &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="945a870af535be017aa2483a690c74b84f4c4aa7" translate="yes" xml:space="preserve">
          <source>void QPlaceReview::setRating(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10758c2e8c2380562af58b2f9495d837db0f5ae8" translate="yes" xml:space="preserve">
          <source>void QPlaceReview::setReviewId(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPlaceReview :: setReviewId (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="e4d89e82848c3aeb5b7928e2115a8c874199ef30" translate="yes" xml:space="preserve">
          <source>void QPlaceReview::setText(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPlaceReview :: setText (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="ac3bc1367436bf7804e336c99df6645e06bcc235" translate="yes" xml:space="preserve">
          <source>void QPlaceReview::setTitle(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPlaceReview :: setTitle (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="9bd790957882ed49081d9b764d8d93195d78ce04" translate="yes" xml:space="preserve">
          <source>void QPlaceSearchRequest::clear()</source>
          <target state="translated">anular QPlaceSearchRequest::clear()</target>
        </trans-unit>
        <trans-unit id="8631f7c7932557047b1fef4df9bda019345ae0ee" translate="yes" xml:space="preserve">
          <source>void QPlaceSearchRequest::setCategories(const &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;&lt;a href=&quot;qplacecategory&quot;&gt;QPlaceCategory&lt;/a&gt;&amp;gt; &amp;amp;</source>
          <target state="translated">void QPlaceSearchRequest :: setCategories (const &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; &amp;lt; &lt;a href=&quot;qplacecategory&quot;&gt;QPlaceCategory&lt;/a&gt; &amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="fef22bfd897639e6aeca98724c933ec2484dcbae" translate="yes" xml:space="preserve">
          <source>void QPlaceSearchRequest::setCategory(const &lt;a href=&quot;qplacecategory&quot;&gt;QPlaceCategory&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPlaceSearchRequest :: setCategory (const &lt;a href=&quot;qplacecategory&quot;&gt;QPlaceCategory&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="bc35add6ad095706534824c97f58348db21f285d" translate="yes" xml:space="preserve">
          <source>void QPlaceSearchRequest::setLimit(int</source>
          <target state="translated">void QPlaceSearchRequest::setLimit(int</target>
        </trans-unit>
        <trans-unit id="c869816182ae71a4e4455f2aac43ed294e422f29" translate="yes" xml:space="preserve">
          <source>void QPlaceSearchRequest::setRecommendationId(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPlaceSearchRequest :: setRecommendationId (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="dc171d429ef99a9ec9f5a39661f232546e81faca" translate="yes" xml:space="preserve">
          <source>void QPlaceSearchRequest::setRelevanceHint(&lt;a href=&quot;qplacesearchrequest#RelevanceHint-enum&quot;&gt;QPlaceSearchRequest::RelevanceHint&lt;/a&gt;</source>
          <target state="translated">void QPlaceSearchRequest :: setRelevanceHint ( &lt;a href=&quot;qplacesearchrequest#RelevanceHint-enum&quot;&gt;QPlaceSearchRequest :: RelevanceHint&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="50056e2e20f2e13dc46ed9b447bb5ce390ab40a3" translate="yes" xml:space="preserve">
          <source>void QPlaceSearchRequest::setSearchArea(const &lt;a href=&quot;qgeoshape&quot;&gt;QGeoShape&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPlaceSearchRequest :: setSearchArea (const &lt;a href=&quot;qgeoshape&quot;&gt;QGeoShape&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="6e0ec7b7675e426c030100ff974b892f4e23e14b" translate="yes" xml:space="preserve">
          <source>void QPlaceSearchRequest::setSearchContext(const &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPlaceSearchRequest :: setSearchContext (const &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="90eb6398ef8bf67a8e631f1d6faa01804d9f5b4a" translate="yes" xml:space="preserve">
          <source>void QPlaceSearchRequest::setSearchTerm(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPlaceSearchRequest :: setSearchTerm (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="c718f7ad85441ece867a6efb7d07ffb1fffb8dd6" translate="yes" xml:space="preserve">
          <source>void QPlaceSearchRequest::setVisibilityScope(&lt;a href=&quot;qlocation#Visibility-enum&quot;&gt;QLocation::VisibilityScope&lt;/a&gt;</source>
          <target state="translated">void QPlaceSearchRequest :: setVisibilityScope ( &lt;a href=&quot;qlocation#Visibility-enum&quot;&gt;QLocation :: VisibilityScope&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0c04dc5e43a0da82c99cd5a18e77033a2e1d1134" translate="yes" xml:space="preserve">
          <source>void QPlaceSearchResult::setIcon(const &lt;a href=&quot;qplaceicon&quot;&gt;QPlaceIcon&lt;/a&gt; &amp;amp;</source>
          <target state="translated">anular QPlaceSearchResult :: setIcon (const &lt;a href=&quot;qplaceicon&quot;&gt;QPlaceIcon&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="acf53ed6a9587d44d97feb94151c00ba7e902e76" translate="yes" xml:space="preserve">
          <source>void QPlaceSearchResult::setTitle(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPlaceSearchResult :: setTitle (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="81cbea529ffc791d48dff5a647910c35a4243b9a" translate="yes" xml:space="preserve">
          <source>void QPlaceSupplier::setIcon(const &lt;a href=&quot;qplaceicon&quot;&gt;QPlaceIcon&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPlaceSupplier :: setIcon (const &lt;a href=&quot;qplaceicon&quot;&gt;QPlaceIcon&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="d312f7fcd39ad605c07e203ce356c31cb96d48ad" translate="yes" xml:space="preserve">
          <source>void QPlaceSupplier::setName(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPlaceSupplier :: setName (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="f426ada799c198a7b1ad16cf4f8299b4eaa53918" translate="yes" xml:space="preserve">
          <source>void QPlaceSupplier::setSupplierId(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPlaceSupplier :: setSupplierId (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="4ac56b81cee01d84c3b1f43c827087ac3de22d6f" translate="yes" xml:space="preserve">
          <source>void QPlaceSupplier::setUrl(const &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPlaceSupplier :: setUrl (const &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="f3509087067f67e10c1cd4fdb08de453fe7f2a1b" translate="yes" xml:space="preserve">
          <source>void QPlaceUser::setName(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPlaceUser :: setName (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="f4f32dd093271d69f7251fc0ef6969b2be4c5ffe" translate="yes" xml:space="preserve">
          <source>void QPlaceUser::setUserId(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPlaceUser :: setUserId (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="215d6ecd52dcc7a56e7ef5aef5bd4801eaa4879d" translate="yes" xml:space="preserve">
          <source>void QPlainTextDocumentLayout::ensureBlockLayout(const &lt;a href=&quot;qtextblock&quot;&gt;QTextBlock&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPlainTextDocumentLayout :: asegurarBlockLayout (const &lt;a href=&quot;qtextblock&quot;&gt;QTextBlock&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="2b05d35785c6a57925aa42f5c00f9d3f6f6bed00" translate="yes" xml:space="preserve">
          <source>void QPlainTextDocumentLayout::requestUpdate()</source>
          <target state="translated">anular QPlainTextDocumentLayout::requestUpdate()</target>
        </trans-unit>
        <trans-unit id="54ea7f237c6884e56e4c5f46e005556d85807d2c" translate="yes" xml:space="preserve">
          <source>void QPlainTextEdit::ensureCursorVisible()</source>
          <target state="translated">anular QPlainTextEdit::ensureCursorVisible()</target>
        </trans-unit>
        <trans-unit id="57bf7be1be5df6905ba0d185ecb26f3364842691" translate="yes" xml:space="preserve">
          <source>void QPlainTextEdit::mergeCurrentCharFormat(const &lt;a href=&quot;qtextcharformat&quot;&gt;QTextCharFormat&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPlainTextEdit :: mergeCurrentCharFormat (const &lt;a href=&quot;qtextcharformat&quot;&gt;QTextCharFormat&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="29ba1f71d9eff11d30513b9d093a50c354a768ab" translate="yes" xml:space="preserve">
          <source>void QPlainTextEdit::moveCursor(&lt;a href=&quot;qtextcursor#MoveOperation-enum&quot;&gt;QTextCursor::MoveOperation&lt;/a&gt;</source>
          <target state="translated">void QPlainTextEdit :: moveCursor ( &lt;a href=&quot;qtextcursor#MoveOperation-enum&quot;&gt;QTextCursor :: MoveOperation&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c3a8eabb25e90259ac7f3ad35131ec02b75975b8" translate="yes" xml:space="preserve">
          <source>void QPlainTextEdit::print(&lt;a href=&quot;qpagedpaintdevice&quot;&gt;QPagedPaintDevice&lt;/a&gt; *</source>
          <target state="translated">void QPlainTextEdit :: print ( &lt;a href=&quot;qpagedpaintdevice&quot;&gt;QPagedPaintDevice&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="89d83ac73c2431a0307507bed4d5e147e6c2d550" translate="yes" xml:space="preserve">
          <source>void QPlainTextEdit::setCurrentCharFormat(const &lt;a href=&quot;qtextcharformat&quot;&gt;QTextCharFormat&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPlainTextEdit :: setCurrentCharFormat (const &lt;a href=&quot;qtextcharformat&quot;&gt;QTextCharFormat&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="7e79e8d8966070d13a045dc3049b32a543fbac84" translate="yes" xml:space="preserve">
          <source>void QPlainTextEdit::setDocument(&lt;a href=&quot;qtextdocument&quot;&gt;QTextDocument&lt;/a&gt; *</source>
          <target state="translated">void QPlainTextEdit :: setDocument ( &lt;a href=&quot;qtextdocument&quot;&gt;QTextDocument&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="95a7937588b2c100ac8236f4b283c22f7c734cf8" translate="yes" xml:space="preserve">
          <source>void QPlainTextEdit::setExtraSelections(const &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;&lt;a href=&quot;qtextedit-extraselection&quot;&gt;QTextEdit::ExtraSelection&lt;/a&gt;&amp;gt; &amp;amp;</source>
          <target state="translated">void QPlainTextEdit :: setExtraSelections (const &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; &amp;lt; &lt;a href=&quot;qtextedit-extraselection&quot;&gt;QTextEdit :: ExtraSelection&lt;/a&gt; &amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="10dc50594fafad306a0315e4167d9e3bb359a24a" translate="yes" xml:space="preserve">
          <source>void QPlainTextEdit::setTextCursor(const &lt;a href=&quot;qtextcursor&quot;&gt;QTextCursor&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPlainTextEdit :: setTextCursor (const &lt;a href=&quot;qtextcursor&quot;&gt;QTextCursor&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="8be4b70e473371c94f42273d08d14a22725e51a2" translate="yes" xml:space="preserve">
          <source>void QPlaneGeometry::updateIndices()</source>
          <target state="translated">void QPlaneGeometry::updateIndices()</target>
        </trans-unit>
        <trans-unit id="a30d318bc6eb46faae999f345b6372d0202ac316" translate="yes" xml:space="preserve">
          <source>void QPlaneGeometry::updateVertices()</source>
          <target state="translated">void QPlaneGeometry::updateVertices()</target>
        </trans-unit>
        <trans-unit id="2f87c391b3e4da00e92c2886036a12d0d0e256b3" translate="yes" xml:space="preserve">
          <source>void QPluginLoader::qRegisterStaticPluginFunction(&lt;a href=&quot;qstaticplugin&quot;&gt;QStaticPlugin&lt;/a&gt;</source>
          <target state="translated">anular QPluginLoader :: qRegisterStaticPluginFunction ( &lt;a href=&quot;qstaticplugin&quot;&gt;QStaticPlugin&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="adc9fc7c93bf9be4e740d1b8651241f245840542" translate="yes" xml:space="preserve">
          <source>void QPoint::setX(int</source>
          <target state="translated">void QPoint::setX(int</target>
        </trans-unit>
        <trans-unit id="46cd7b1c707736c5d389c4e7be2e239e64e33208" translate="yes" xml:space="preserve">
          <source>void QPoint::setY(int</source>
          <target state="translated">void QPoint::setY(int</target>
        </trans-unit>
        <trans-unit id="8c4b5bae5b55127f11cd7e551f5897ac117eebb4" translate="yes" xml:space="preserve">
          <source>void QPointF::setX(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QPointF :: setX ( &lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9b7319bc239666ad6583a61eb19b77ca1b649b85" translate="yes" xml:space="preserve">
          <source>void QPointF::setY(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QPointF :: setY ( &lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1559457b39b756289e7bef89309c91f7dcf25a6a" translate="yes" xml:space="preserve">
          <source>void QPointer::clear()</source>
          <target state="translated">anular el QPointer::clear()</target>
        </trans-unit>
        <trans-unit id="a38cdd5d6cadede514ecdcc47fe737d85d474a81" translate="yes" xml:space="preserve">
          <source>void QPointer::swap(&lt;a href=&quot;qpointer#QPointer&quot;&gt;QPointer&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="translated">void QPointer :: swap ( &lt;a href=&quot;qpointer#QPointer&quot;&gt;QPointer&lt;/a&gt; &amp;lt;T&amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="824957dfdded167477b00ddcfcbf9f627c7a8e3b" translate="yes" xml:space="preserve">
          <source>void QPolarChart::addAxis(&lt;a href=&quot;qabstractaxis&quot;&gt;QAbstractAxis&lt;/a&gt; *</source>
          <target state="translated">void QPolarChart :: addAxis ( &lt;a href=&quot;qabstractaxis&quot;&gt;QAbstractAxis&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="80735292a4cf9c6dd5c415dd3dc0b5acfb22cee5" translate="yes" xml:space="preserve">
          <source>void QPolygon::point(int</source>
          <target state="translated">Vacío QPolygon::point(int</target>
        </trans-unit>
        <trans-unit id="ad25107e812a8330564a8624f5d15dc33da7b971" translate="yes" xml:space="preserve">
          <source>void QPolygon::putPoints(int</source>
          <target state="translated">anular QPolygon::putPoints(int</target>
        </trans-unit>
        <trans-unit id="40e37d11c54cbd24efc95d7c75dfe4cfd2a47605" translate="yes" xml:space="preserve">
          <source>void QPolygon::setPoint(int</source>
          <target state="translated">anular QPolygon::setPoint(int</target>
        </trans-unit>
        <trans-unit id="fd983dbbbf297944e9e5ec4bbac842f92ac7365c" translate="yes" xml:space="preserve">
          <source>void QPolygon::setPoints(int</source>
          <target state="translated">anular QPolygon::setPoints(int</target>
        </trans-unit>
        <trans-unit id="e567892211f21ca7b4075e3338725fa9e671d850" translate="yes" xml:space="preserve">
          <source>void QPolygon::swap(&lt;a href=&quot;qpolygon#QPolygon&quot;&gt;QPolygon&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPolygon :: swap ( &lt;a href=&quot;qpolygon#QPolygon&quot;&gt;QPolygon&lt;/a&gt; y</target>
        </trans-unit>
        <trans-unit id="4d7036ef19443b58a8f645e57f5ebb1009afbbea" translate="yes" xml:space="preserve">
          <source>void QPolygon::translate(const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPolygon :: translate (const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="93109099c9db50580f77d0f5090c871fc604a3ed" translate="yes" xml:space="preserve">
          <source>void QPolygon::translate(int</source>
          <target state="translated">anular QPolygon::translate(int</target>
        </trans-unit>
        <trans-unit id="5352179f564cb95ddf9d669484e5ab7fe4c27969" translate="yes" xml:space="preserve">
          <source>void QPolygonF::swap(&lt;a href=&quot;qpolygonf#QPolygonF&quot;&gt;QPolygonF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPolygonF :: swap ( &lt;a href=&quot;qpolygonf#QPolygonF&quot;&gt;QPolygonF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="e7c4c321430a3972509da0cc48f2f885f18b3332" translate="yes" xml:space="preserve">
          <source>void QPolygonF::translate(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">void QPolygonF :: translate ( &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2724a7161add63b4daac81c6dabca47bf0df8847" translate="yes" xml:space="preserve">
          <source>void QPolygonF::translate(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f72075418ed00e11a41aecd6a6e4fdde2fd38787" translate="yes" xml:space="preserve">
          <source>void QPolygonF::translate(const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPolygonF :: translate (const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="32df1052fd8298ffa27ade79cf4ce183720fdc55" translate="yes" xml:space="preserve">
          <source>void QPressureReading::setPressure(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QPressureReading :: setPressure ( &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="89dca691d864731c8deddd52a388c7c7b1bb3467" translate="yes" xml:space="preserve">
          <source>void QPressureReading::setPressure(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce571b45bfedc392f04147b408d83e02f0a8b6b9" translate="yes" xml:space="preserve">
          <source>void QPressureReading::setTemperature(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QPressureReading :: setTemperature ( &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="def84f52fa51a1250f54f6979cc1463fb3fbee49" translate="yes" xml:space="preserve">
          <source>void QPressureReading::setTemperature(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b0f82002d555bc79b14605116fc3fc8cec4fc31" translate="yes" xml:space="preserve">
          <source>void QPrintDialog::open(&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="translated">void QPrintDialog :: open ( &lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="d116dbbf956c0a732feec1d78a10bba589c7a52a" translate="yes" xml:space="preserve">
          <source>void QPrintDialog::setOption(&lt;a href=&quot;qabstractprintdialog#PrintDialogOption-enum&quot;&gt;QAbstractPrintDialog::PrintDialogOption&lt;/a&gt;</source>
          <target state="translated">void QPrintDialog :: setOption ( &lt;a href=&quot;qabstractprintdialog#PrintDialogOption-enum&quot;&gt;QAbstractPrintDialog :: PrintDialogOption&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c253ad3c2d5a767b2a3c4a4d93d62dd9a8b2bea5" translate="yes" xml:space="preserve">
          <source>void QPrintPreviewDialog::open(&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="translated">void QPrintPreviewDialog :: open ( &lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="ed066c4fe80fe3081517e6b61b68738bfeba3f15" translate="yes" xml:space="preserve">
          <source>void QPrinter::setCollateCopies(bool</source>
          <target state="translated">void QPrinter::setCollateCopies(bool</target>
        </trans-unit>
        <trans-unit id="c9ba3c20d51eb984d13efac0fdbd337d557dc69d" translate="yes" xml:space="preserve">
          <source>void QPrinter::setColorMode(&lt;a href=&quot;qprinter#ColorMode-enum&quot;&gt;QPrinter::ColorMode&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QPrinter :: setColorMode ( &lt;a href=&quot;qprinter#ColorMode-enum&quot;&gt;QPrinter :: ColorMode&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="747dd29c7e00aae97c264f604b43f84592174ef2" translate="yes" xml:space="preserve">
          <source>void QPrinter::setCopyCount(int</source>
          <target state="translated">anular QPrinter::setCopyCount(int</target>
        </trans-unit>
        <trans-unit id="66fb6eac7b1b32650df89622b4e864c25d9714cf" translate="yes" xml:space="preserve">
          <source>void QPrinter::setCreator(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPrinter :: setCreator (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="05ffc7ac4e3f999eae054da427425faa83b89c5e" translate="yes" xml:space="preserve">
          <source>void QPrinter::setDocName(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPrinter :: setDocName (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="1d90d348952d394d0ba4c1a1d675d8a6fc7643be" translate="yes" xml:space="preserve">
          <source>void QPrinter::setDuplex(&lt;a href=&quot;qprinter#DuplexMode-enum&quot;&gt;QPrinter::DuplexMode&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QPrinter :: setDuplex ( &lt;a href=&quot;qprinter#DuplexMode-enum&quot;&gt;QPrinter :: DuplexMode&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="54d0e38db5b229df51e132624c28fde349f608d7" translate="yes" xml:space="preserve">
          <source>void QPrinter::setFontEmbeddingEnabled(bool</source>
          <target state="translated">void QPrinter::setFontEmbeddingEnabled(bool</target>
        </trans-unit>
        <trans-unit id="e734abfb0946a75e16f5f82fdf80031571597102" translate="yes" xml:space="preserve">
          <source>void QPrinter::setFromTo(int</source>
          <target state="translated">anular QPrinter::setFromTo(int</target>
        </trans-unit>
        <trans-unit id="a5ed3dee0ee730546b4f093a9f71172bf3a3e19e" translate="yes" xml:space="preserve">
          <source>void QPrinter::setFullPage(bool</source>
          <target state="translated">anular QPrinter::setFullPage(bool</target>
        </trans-unit>
        <trans-unit id="1ad1fb7b6c073eaf8d8e72aa9a37fc088f56f4e3" translate="yes" xml:space="preserve">
          <source>void QPrinter::setOutputFileName(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPrinter :: setOutputFileName (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="d0440a3731251ca2cadb5373f0184f626119d3c9" translate="yes" xml:space="preserve">
          <source>void QPrinter::setOutputFormat(&lt;a href=&quot;qprinter#OutputFormat-enum&quot;&gt;QPrinter::OutputFormat&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QPrinter :: setOutputFormat ( &lt;a href=&quot;qprinter#OutputFormat-enum&quot;&gt;QPrinter :: OutputFormat&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="04c7778b60645d61af597459380dba100851fc59" translate="yes" xml:space="preserve">
          <source>void QPrinter::setPageOrder(&lt;a href=&quot;qprinter#PageOrder-enum&quot;&gt;QPrinter::PageOrder&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QPrinter :: setPageOrder ( &lt;a href=&quot;qprinter#PageOrder-enum&quot;&gt;QPrinter :: PageOrder&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="86dfcd8a831429e4dafbe33b5fd2be5d5328b5f4" translate="yes" xml:space="preserve">
          <source>void QPrinter::setPaperSource(&lt;a href=&quot;qprinter#PaperSource-enum&quot;&gt;QPrinter::PaperSource&lt;/a&gt;</source>
          <target state="translated">anular QPrinter :: setPaperSource ( &lt;a href=&quot;qprinter#PaperSource-enum&quot;&gt;QPrinter :: PaperSource&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="982c9858b7508c0e5e5fb452e74d1f883c675a52" translate="yes" xml:space="preserve">
          <source>void QPrinter::setPdfVersion(&lt;a href=&quot;qpagedpaintdevice#PdfVersion-enum&quot;&gt;QPagedPaintDevice::PdfVersion&lt;/a&gt;</source>
          <target state="translated">anular QPrinter :: setPdfVersion ( &lt;a href=&quot;qpagedpaintdevice#PdfVersion-enum&quot;&gt;QPagedPaintDevice :: PdfVersion&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c93135d808f0ee03249f6729d0f5db5c1064bf6b" translate="yes" xml:space="preserve">
          <source>void QPrinter::setPrintProgram(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPrinter :: setPrintProgram (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="66e57ee047069a7fc526b7af5bed4515d514c1c1" translate="yes" xml:space="preserve">
          <source>void QPrinter::setPrintRange(&lt;a href=&quot;qprinter#PrintRange-enum&quot;&gt;QPrinter::PrintRange&lt;/a&gt;</source>
          <target state="translated">anular QPrinter :: setPrintRange ( &lt;a href=&quot;qprinter#PrintRange-enum&quot;&gt;QPrinter :: PrintRange&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="72a07e5ead0006b98b1410b3f01b7d8513893b66" translate="yes" xml:space="preserve">
          <source>void QPrinter::setPrinterName(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPrinter :: setPrinterName (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="c12a9fda5a186da2dde48452c68b17a211eaf80b" translate="yes" xml:space="preserve">
          <source>void QPrinter::setPrinterSelectionOption(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPrinter :: setPrinterSelectionOption (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="057e86aee87f39e764fbd8e3d010b1a55e229268" translate="yes" xml:space="preserve">
          <source>void QPrinter::setResolution(int</source>
          <target state="translated">anular QPrinter::setResolution(int</target>
        </trans-unit>
        <trans-unit id="75ba262741d2bcd863666a5cd2e56afe7ae09bf6" translate="yes" xml:space="preserve">
          <source>void QProcess::closeReadChannel(&lt;a href=&quot;qprocess#ProcessChannel-enum&quot;&gt;QProcess::ProcessChannel&lt;/a&gt;</source>
          <target state="translated">anular QProcess :: closeReadChannel ( &lt;a href=&quot;qprocess#ProcessChannel-enum&quot;&gt;QProcess :: ProcessChannel&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b54cc0bc6a9c6abc9ec2988904832ecc386e27f7" translate="yes" xml:space="preserve">
          <source>void QProcess::closeWriteChannel()</source>
          <target state="translated">anular QProcess::closeWriteChannel()</target>
        </trans-unit>
        <trans-unit id="379475a2e0790a52892f9613ef4dd50e589e4f1e" translate="yes" xml:space="preserve">
          <source>void QProcess::setArguments(const &lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QProcess :: setArguments (const &lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="2a1f7e7eb1dce38fdf999b9029be93a7ccda7952" translate="yes" xml:space="preserve">
          <source>void QProcess::setCreateProcessArgumentsModifier(&lt;a href=&quot;qprocess#CreateProcessArgumentModifier-typedef&quot;&gt;QProcess::CreateProcessArgumentModifier&lt;/a&gt;</source>
          <target state="translated">void QProcess :: setCreateProcessArgumentsModifier ( &lt;a href=&quot;qprocess#CreateProcessArgumentModifier-typedef&quot;&gt;QProcess :: CreateProcessArgumentModifier&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="51517a78967e6d0ff37fbcfc4f9d1a8be96b9a8e" translate="yes" xml:space="preserve">
          <source>void QProcess::setInputChannelMode(&lt;a href=&quot;qprocess#InputChannelMode-enum&quot;&gt;QProcess::InputChannelMode&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QProcess :: setInputChannelMode ( &lt;a href=&quot;qprocess#InputChannelMode-enum&quot;&gt;QProcess :: InputChannelMode&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="94a83b03a3ae4d9006f7c18a6639eaf43a250544" translate="yes" xml:space="preserve">
          <source>void QProcess::setNativeArguments(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QProcess :: setNativeArguments (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="15b12950ef630de869efce62a06aef4d77746bfa" translate="yes" xml:space="preserve">
          <source>void QProcess::setProcessChannelMode(&lt;a href=&quot;qprocess#ProcessChannelMode-enum&quot;&gt;QProcess::ProcessChannelMode&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QProcess :: setProcessChannelMode ( &lt;a href=&quot;qprocess#ProcessChannelMode-enum&quot;&gt;QProcess :: ProcessChannelMode&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="98019fe124b6be596bbf0ce0f981c70dc60560c3" translate="yes" xml:space="preserve">
          <source>void QProcess::setProcessEnvironment(const &lt;a href=&quot;qprocessenvironment&quot;&gt;QProcessEnvironment&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QProcess :: setProcessEnvironment (const &lt;a href=&quot;qprocessenvironment&quot;&gt;QProcessEnvironment&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="5a6e4c5be793effd7facfead1f2bce8c5d6933b4" translate="yes" xml:space="preserve">
          <source>void QProcess::setProgram(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QProcess :: setProgram (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="665879aa894ed00a4468f81d8c74fba2b73450a3" translate="yes" xml:space="preserve">
          <source>void QProcess::setReadChannel(&lt;a href=&quot;qprocess#ProcessChannel-enum&quot;&gt;QProcess::ProcessChannel&lt;/a&gt;</source>
          <target state="translated">anular QProcess :: setReadChannel ( &lt;a href=&quot;qprocess#ProcessChannel-enum&quot;&gt;QProcess :: ProcessChannel&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="736f3921d0f297fd1df8689e96e4054c5f198b11" translate="yes" xml:space="preserve">
          <source>void QProcess::setStandardErrorFile(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QProcess :: setStandardErrorFile (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="760de5e0ee7355a252a5424ab3065c474eccbaf0" translate="yes" xml:space="preserve">
          <source>void QProcess::setStandardInputFile(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">QProcess vac&amp;iacute;o :: setStandardInputFile (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="fe2671690127ef7e31e5782db6b3f04a5922ecf2" translate="yes" xml:space="preserve">
          <source>void QProcess::setStandardOutputFile(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">QProcess vac&amp;iacute;o :: setStandardOutputFile (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="2f3cac25bd516444ad156a9e10c68baa0d8c75ef" translate="yes" xml:space="preserve">
          <source>void QProcess::setStandardOutputProcess(&lt;a href=&quot;qprocess#QProcess&quot;&gt;QProcess&lt;/a&gt; *</source>
          <target state="translated">void QProcess :: setStandardOutputProcess ( &lt;a href=&quot;qprocess#QProcess&quot;&gt;QProcess&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="ba69f402d52715f850ea09d0e0e2683626912f45" translate="yes" xml:space="preserve">
          <source>void QProcess::setWorkingDirectory(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QProcess :: setWorkingDirectory (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="196773d9f41db61526aaf4cf357bfe2846b24c9f" translate="yes" xml:space="preserve">
          <source>void QProcess::start(&lt;a href=&quot;qiodevice#OpenModeFlag-enum&quot;&gt;QIODevice::OpenMode&lt;/a&gt;</source>
          <target state="translated">void QProcess :: start ( &lt;a href=&quot;qiodevice#OpenModeFlag-enum&quot;&gt;QIODevice :: OpenMode&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9c49e57380dcbdc99e92b0898f90297db16722ad" translate="yes" xml:space="preserve">
          <source>void QProcess::start(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QProcess :: start (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="3b0c237970e5c05da730ecfbc76a3660852a2965" translate="yes" xml:space="preserve">
          <source>void QProcessEnvironment::clear()</source>
          <target state="translated">void QProcessEnvironment::clear()</target>
        </trans-unit>
        <trans-unit id="c69e874d9b054e37e7ed03b5a48ff374942832a3" translate="yes" xml:space="preserve">
          <source>void QProcessEnvironment::insert(const &lt;a href=&quot;qprocessenvironment#QProcessEnvironment&quot;&gt;QProcessEnvironment&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QProcessEnvironment :: insert (const &lt;a href=&quot;qprocessenvironment#QProcessEnvironment&quot;&gt;QProcessEnvironment&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="721653cafc370d969be0e383402e6ccec2235054" translate="yes" xml:space="preserve">
          <source>void QProcessEnvironment::insert(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QProcessEnvironment :: insert (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="dc98cb5e99b01e4167eab0b663699cc2dc93b684" translate="yes" xml:space="preserve">
          <source>void QProcessEnvironment::remove(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QProcessEnvironment :: remove (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="578503323d160497f52f61a84e01f068b4e8ae66" translate="yes" xml:space="preserve">
          <source>void QProcessEnvironment::swap(&lt;a href=&quot;qprocessenvironment#QProcessEnvironment&quot;&gt;QProcessEnvironment&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QProcessEnvironment :: swap ( &lt;a href=&quot;qprocessenvironment#QProcessEnvironment&quot;&gt;QProcessEnvironment&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="72b1d79715216a4d473fe6bafa5d9b5ddf58a0eb" translate="yes" xml:space="preserve">
          <source>void QProgressDialog::open(&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="translated">void QProgressDialog :: open ( &lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="90a4395183fb2787341d3f5c77e1a5979f62a376" translate="yes" xml:space="preserve">
          <source>void QProgressDialog::setBar(&lt;a href=&quot;qprogressbar&quot;&gt;QProgressBar&lt;/a&gt; *</source>
          <target state="translated">anular QProgressDialog :: setBar ( &lt;a href=&quot;qprogressbar&quot;&gt;QProgressBar&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="7aaee2c094755ddd9a0adfd7082bd66dc894ff38" translate="yes" xml:space="preserve">
          <source>void QProgressDialog::setCancelButton(&lt;a href=&quot;qpushbutton&quot;&gt;QPushButton&lt;/a&gt; *</source>
          <target state="translated">anular QProgressDialog :: setCancelButton ( &lt;a href=&quot;qpushbutton&quot;&gt;QPushButton&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="b91c5788be2ab6587955b5d7c6160d7ee34b7311" translate="yes" xml:space="preserve">
          <source>void QProgressDialog::setLabel(&lt;a href=&quot;qlabel&quot;&gt;QLabel&lt;/a&gt; *</source>
          <target state="translated">anular QProgressDialog :: setLabel ( &lt;a href=&quot;qlabel&quot;&gt;QLabel&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="4ef8c2ebe70a2e1dbae7b6eac1c043734a2030c6" translate="yes" xml:space="preserve">
          <source>void QPropertyUpdatedChange::setValue(const &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPropertyUpdatedChange :: setValue (const &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="d61b4f8de2a97a5f908618db79331d0d4d7746fe" translate="yes" xml:space="preserve">
          <source>void QPropertyValueAddedChange::setAddedValue(const &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPropertyValueAddedChange :: setAddedValue (const &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="305e91f0583a4607e8ca3230e425e96adcb043bb" translate="yes" xml:space="preserve">
          <source>void QPropertyValueRemovedChange::setRemovedValue(const &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QPropertyValueRemovedChange :: setRemovedValue (const &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="38a792fd13fcdd7df95c525cce91aa067700e6ef" translate="yes" xml:space="preserve">
          <source>void QProximityReading::setClose(bool</source>
          <target state="translated">void QProximidadLectura::setCerrar(bool</target>
        </trans-unit>
        <trans-unit id="5954985352bc8427547d506a6f9bcb757e292db3" translate="yes" xml:space="preserve">
          <source>void QProxyStyle::setBaseStyle(QStyle *</source>
          <target state="translated">anular QProxyStyle::setBaseStyle(QStyle *</target>
        </trans-unit>
        <trans-unit id="52f61c67f2fd97dd44b6e351218f00d1f5afb9a6" translate="yes" xml:space="preserve">
          <source>void QPushButton::setMenu(&lt;a href=&quot;qmenu&quot;&gt;QMenu&lt;/a&gt; *</source>
          <target state="translated">void QPushButton :: setMenu ( &lt;a href=&quot;qmenu&quot;&gt;QMenu&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="44787c0e77c6dec832530716f4ab9058d5e9c79a" translate="yes" xml:space="preserve">
          <source>void QQmlAspectEngine::setSource(const &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QQmlAspectEngine :: setSource (const &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="d62cacacbe8d048dbae87ca1297eb14140262296" translate="yes" xml:space="preserve">
          <source>void QQmlComponent::create(&lt;a href=&quot;qqmlincubator&quot;&gt;QQmlIncubator&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QQmlComponent :: create ( &lt;a href=&quot;qqmlincubator&quot;&gt;QQmlIncubator&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="e3e6b7cd0c7701226fe0953e83e42cf0e51b2994" translate="yes" xml:space="preserve">
          <source>void QQmlComponent::setInitialProperties(&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="517e4512731ed690afc9fad1e476a3b3757aaf4f" translate="yes" xml:space="preserve">
          <source>void QQmlContext::setBaseUrl(const &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QQmlContext :: setBaseUrl (const &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="b79ac4433c9864e31e657a7b7a16d85beb59442e" translate="yes" xml:space="preserve">
          <source>void QQmlContext::setContextObject(&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="translated">void QQmlContext :: setContextObject ( &lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="d7ef25bcb9fa491e5ffe17ab42ffa56923287d3e" translate="yes" xml:space="preserve">
          <source>void QQmlContext::setContextProperties(const &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;&lt;a href=&quot;qqmlcontext-propertypair&quot;&gt;QQmlContext::PropertyPair&lt;/a&gt;&amp;gt; &amp;amp;</source>
          <target state="translated">void QQmlContext :: setContextProperties (const &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt; &amp;lt; &lt;a href=&quot;qqmlcontext-propertypair&quot;&gt;QQmlContext :: PropertyPair&lt;/a&gt; &amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="10a659906881157e432a6a6cb60ee2ba7230ea3b" translate="yes" xml:space="preserve">
          <source>void QQmlContext::setContextProperty(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QQmlContext :: setContextProperty (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="d665d7f0c04884ae59536858b0b56cfe0bec5f0a" translate="yes" xml:space="preserve">
          <source>void QQmlEngine::addImageProvider(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QQmlEngine :: addImageProvider (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="0658db6baa97177f9b99def44f2a389cb55e9da5" translate="yes" xml:space="preserve">
          <source>void QQmlEngine::addImportPath(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QQmlEngine :: addImportPath (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="3092b3e1d9c3b504e5fd3c20de444f4b329f8308" translate="yes" xml:space="preserve">
          <source>void QQmlEngine::addPluginPath(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QQmlEngine :: addPluginPath (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="d6cb1483cbcb83c7938343cb736d97a2e885bf51" translate="yes" xml:space="preserve">
          <source>void QQmlEngine::clearComponentCache()</source>
          <target state="translated">void QQmlEngine::clearComponentCache()</target>
        </trans-unit>
        <trans-unit id="04fd6b7d84a979b043aed9dc3f625c86169f994b" translate="yes" xml:space="preserve">
          <source>void QQmlEngine::qmlClearTypeRegistrations()</source>
          <target state="translated">void QQmlEngine::qmlClearTypeRegistrations()</target>
        </trans-unit>
        <trans-unit id="14bbceebb77ac721bcb66f7d123d5bc31599e657" translate="yes" xml:space="preserve">
          <source>void QQmlEngine::qmlRegisterModule(const char *</source>
          <target state="translated">void QQmlEngine::qmlRegisterModule(const char *</target>
        </trans-unit>
        <trans-unit id="9e06c017b5c5bb9f35b76c75bed6b5c7ace187e6" translate="yes" xml:space="preserve">
          <source>void QQmlEngine::removeImageProvider(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QQmlEngine :: removeImageProvider (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="ef6c5a6dd8735da274206363721848085518b156" translate="yes" xml:space="preserve">
          <source>void QQmlEngine::setBaseUrl(const &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QQmlEngine :: setBaseUrl (const &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="73ff716acd2df7126c30d1ee93a06978911b9749" translate="yes" xml:space="preserve">
          <source>void QQmlEngine::setImportPathList(const &lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QQmlEngine :: setImportPathList (const &lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="cc0b19820243ff4451404b8370d43b66a2c06734" translate="yes" xml:space="preserve">
          <source>void QQmlEngine::setIncubationController(&lt;a href=&quot;qqmlincubationcontroller&quot;&gt;QQmlIncubationController&lt;/a&gt; *</source>
          <target state="translated">vac&amp;iacute;o QQmlEngine :: setIncubationController ( &lt;a href=&quot;qqmlincubationcontroller&quot;&gt;QQmlIncubationController&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="33e489323506d13bd694fabcb65b36700dcb3371" translate="yes" xml:space="preserve">
          <source>void QQmlEngine::setNetworkAccessManagerFactory(&lt;a href=&quot;qqmlnetworkaccessmanagerfactory&quot;&gt;QQmlNetworkAccessManagerFactory&lt;/a&gt; *</source>
          <target state="translated">vac&amp;iacute;o QQmlEngine :: setNetworkAccessManagerFactory ( &lt;a href=&quot;qqmlnetworkaccessmanagerfactory&quot;&gt;QQmlNetworkAccessManagerFactory&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="2fd3262a91441cf40e822b779d67aec95140a3e2" translate="yes" xml:space="preserve">
          <source>void QQmlEngine::setOutputWarningsToStandardError(bool</source>
          <target state="translated">void QQmlEngine::setOutputWarningsToStandardError(bool</target>
        </trans-unit>
        <trans-unit id="e9325a05ceaf499e7397afd9262ddec053ec4494" translate="yes" xml:space="preserve">
          <source>void QQmlEngine::setPluginPathList(const &lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QQmlEngine :: setPluginPathList (const &lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="6ba0886ed7c087462ea6eca7978e8c15dd379916" translate="yes" xml:space="preserve">
          <source>void QQmlEngine::trimComponentCache()</source>
          <target state="translated">void QQmlEngine::trimComponentCache()</target>
        </trans-unit>
        <trans-unit id="290fa49fb880b355b5adde019f2e56382c37fa4f" translate="yes" xml:space="preserve">
          <source>void QQmlError::setColumn(int</source>
          <target state="translated">void QQmlError::setColumn(int</target>
        </trans-unit>
        <trans-unit id="4f6dbacb292ec5f0b80b68162a5e7334996498bf" translate="yes" xml:space="preserve">
          <source>void QQmlError::setDescription(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QQmlError :: setDescription (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="a7bd75067c076692b4b5b61539750c7d56e6f1e7" translate="yes" xml:space="preserve">
          <source>void QQmlError::setLine(int</source>
          <target state="translated">void QQmlError::setLine(int</target>
        </trans-unit>
        <trans-unit id="76a69f670a868e21cc44fea7fa27ddb1cd8e654e" translate="yes" xml:space="preserve">
          <source>void QQmlError::setMessageType(&lt;a href=&quot;#QtMsgType-enum&quot;&gt;QtMsgType&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QQmlError :: setMessageType ( &lt;a href=&quot;#QtMsgType-enum&quot;&gt;QtMsgType&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bda4add06bc3debeb64b47bf9d3be50da501d4c7" translate="yes" xml:space="preserve">
          <source>void QQmlError::setMessageType(&lt;a href=&quot;qtglobal#QtMsgType-enum&quot;&gt;QtMsgType&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="772cb877e99410d1ae86dd49646d408cc2c3f862" translate="yes" xml:space="preserve">
          <source>void QQmlError::setObject(&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="translated">void QQmlError :: setObject ( &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="9c7304f1b6946da8066113d7949ed3c3c19d5995" translate="yes" xml:space="preserve">
          <source>void QQmlError::setUrl(const &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QQmlError :: setUrl (const &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="78912eedc82bfaeab995cd494df0afdffa23c035" translate="yes" xml:space="preserve">
          <source>void QQmlExpression::clearError()</source>
          <target state="translated">void QQmlExpression::clearError()</target>
        </trans-unit>
        <trans-unit id="bf54f65e9ed79ff82869a22ddba170d77ea31f93" translate="yes" xml:space="preserve">
          <source>void QQmlExpression::setExpression(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QQmlExpression :: setExpression (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="b40000bd15201f6f1d73a2426d6f070db0555242" translate="yes" xml:space="preserve">
          <source>void QQmlExpression::setNotifyOnValueChanged(bool</source>
          <target state="translated">void QQmlExpression::setNotifyOnValueChanged(bool</target>
        </trans-unit>
        <trans-unit id="1a627cdec5b27e5bfd24da382c7e351e30666409" translate="yes" xml:space="preserve">
          <source>void QQmlExpression::setSourceLocation(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QQmlExpression :: setSourceLocation (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="5984a3e1e97357dfa7661c3fa54e883101ac298c" translate="yes" xml:space="preserve">
          <source>void QQmlFileSelector::setExtraSelectors(&lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QQmlFileSelector :: setExtraSelectors ( &lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="23b050fe0eaf511497620b5e62c8a908fcbdecb2" translate="yes" xml:space="preserve">
          <source>void QQmlFileSelector::setExtraSelectors(const &lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QQmlFileSelector :: setExtraSelectors (const &lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="6ed1768a207901bf749613c2a8e63de9f4385fed" translate="yes" xml:space="preserve">
          <source>void QQmlFileSelector::setSelector(&lt;a href=&quot;qfileselector&quot;&gt;QFileSelector&lt;/a&gt; *</source>
          <target state="translated">vac&amp;iacute;o QQmlFileSelector :: setSelector ( &lt;a href=&quot;qfileselector&quot;&gt;QFileSelector&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="d8f6f1084626d1e12b65f1d6f97c3a13a6c510e3" translate="yes" xml:space="preserve">
          <source>void QQmlIncubationController::incubateFor(int</source>
          <target state="translated">void QQmlIncubationController::incubateFor(int</target>
        </trans-unit>
        <trans-unit id="ffdf308f9e88bd612e96abf78b70a5e1b24d00ad" translate="yes" xml:space="preserve">
          <source>void QQmlIncubationController::incubateWhile(std::atomic&amp;lt;bool&amp;gt; *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="840e97ec07f98deeeec098729592699c887be464" translate="yes" xml:space="preserve">
          <source>void QQmlIncubationController::incubateWhile(volatilebool *</source>
          <target state="translated">void QQmlIncubationController::incubateWhile(volatilebool *</target>
        </trans-unit>
        <trans-unit id="bbb8ca8b291ba36cfc80064e0c1647647ba194ff" translate="yes" xml:space="preserve">
          <source>void QQmlIncubator::clear()</source>
          <target state="translated">Vacío QQmlIncubadora::claro()</target>
        </trans-unit>
        <trans-unit id="b113692f28846e06daf4997a94768e477f9f4eef" translate="yes" xml:space="preserve">
          <source>void QQmlIncubator::forceCompletion()</source>
          <target state="translated">Anular la incubadora QQml::forceCompletion()</target>
        </trans-unit>
        <trans-unit id="380bc838d1670b2257cbbdad14da8eba96b27e9d" translate="yes" xml:space="preserve">
          <source>void QQmlIncubator::setInitialProperties(const &lt;a href=&quot;qvariant#QVariantMap-typedef&quot;&gt;QVariantMap&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff74d4b455dee10c5baca926d463466277bee8bd" translate="yes" xml:space="preserve">
          <source>void QQmlNdefRecord::setRecord(const &lt;a href=&quot;qndefrecord&quot;&gt;QNdefRecord&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QQmlNdefRecord :: setRecord (const &lt;a href=&quot;qndefrecord&quot;&gt;QNdefRecord&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="09381e9e6dca0eb7da704dbc8917bd4d3a4971d3" translate="yes" xml:space="preserve">
          <source>void QQmlNdefRecord::setType(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QQmlNdefRecord :: setType (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="fe0496d62afe41bff143605b73aa0b2004b6f628" translate="yes" xml:space="preserve">
          <source>void QQmlNdefRecord::setTypeNameFormat(&lt;a href=&quot;qqmlndefrecord#TypeNameFormat-enum&quot;&gt;QQmlNdefRecord::TypeNameFormat&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QQmlNdefRecord :: setTypeNameFormat ( &lt;a href=&quot;qqmlndefrecord#TypeNameFormat-enum&quot;&gt;QQmlNdefRecord :: TypeNameFormat&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2593f63512e55d10ca438a9d0d47aed51dfc51a5" translate="yes" xml:space="preserve">
          <source>void QQmlPropertyMap::clear(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QQmlPropertyMap :: clear (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="472e3057ab8912810b92686e9a6fd1f739009c9a" translate="yes" xml:space="preserve">
          <source>void QQmlPropertyMap::insert(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QQmlPropertyMap :: insert (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="cc38811852d9e811ae06ca362a9530be31182def" translate="yes" xml:space="preserve">
          <source>void QQuaternion::getAxes(&lt;a href=&quot;qvector3d&quot;&gt;QVector3D&lt;/a&gt; *</source>
          <target state="translated">vac&amp;iacute;o QQuaternion :: getAxes ( &lt;a href=&quot;qvector3d&quot;&gt;QVector3D&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="6be02ff7a02558a84a7c0057e57936f90b260d13" translate="yes" xml:space="preserve">
          <source>void QQuaternion::getAxisAndAngle(&lt;a href=&quot;qvector3d&quot;&gt;QVector3D&lt;/a&gt; *</source>
          <target state="translated">vac&amp;iacute;o QQuaternion :: getAxisAndAngle ( &lt;a href=&quot;qvector3d&quot;&gt;QVector3D&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="aef32d0d819661f78c29a1111217f7341886db18" translate="yes" xml:space="preserve">
          <source>void QQuaternion::getAxisAndAngle(float *</source>
          <target state="translated">anular QQuaternion::getAxisAndAngle(float *</target>
        </trans-unit>
        <trans-unit id="68112731f8506644158d6dfba4f56daa39b79a0b" translate="yes" xml:space="preserve">
          <source>void QQuaternion::getEulerAngles(float *</source>
          <target state="translated">anular QQuaternion::getEulerAngles(float *</target>
        </trans-unit>
        <trans-unit id="f64a173ba7ce977e971d0fb0974fd84201ebc593" translate="yes" xml:space="preserve">
          <source>void QQuaternion::normalize()</source>
          <target state="translated">anular QQuaternion::normalizar()</target>
        </trans-unit>
        <trans-unit id="87ff1b460953fe74b2df4bbe82e2793fa397cb64" translate="yes" xml:space="preserve">
          <source>void QQuaternion::setScalar(float</source>
          <target state="translated">anular QQuaternion::setScalar(float)</target>
        </trans-unit>
        <trans-unit id="6c1a0d5ca61b61ce27d44d2dc295724d03fee830" translate="yes" xml:space="preserve">
          <source>void QQuaternion::setVector(const &lt;a href=&quot;qvector3d&quot;&gt;QVector3D&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QQuaternion :: setVector (const &lt;a href=&quot;qvector3d&quot;&gt;QVector3D&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="9255c4a376f9752622f9b00a94c88d0a38846448" translate="yes" xml:space="preserve">
          <source>void QQuaternion::setVector(float</source>
          <target state="translated">anular QQuaternion::setVector(flotación)</target>
        </trans-unit>
        <trans-unit id="19552c63588ab97e03d56fec138d740b5475285f" translate="yes" xml:space="preserve">
          <source>void QQuaternion::setX(float</source>
          <target state="translated">void QQuaternion::setX(flotador</target>
        </trans-unit>
        <trans-unit id="0ec0375aa1761509105b961c7e71c656e0e6fe0d" translate="yes" xml:space="preserve">
          <source>void QQuaternion::setY(float</source>
          <target state="translated">Vacío QQuaternion::setY(flotación)</target>
        </trans-unit>
        <trans-unit id="be32c9af9f0cb7469c67f779f14770410a45dfc1" translate="yes" xml:space="preserve">
          <source>void QQuaternion::setZ(float</source>
          <target state="translated">anular QQuaternion::setZ(flotador</target>
        </trans-unit>
        <trans-unit id="d8d273674780fa014e826a1e64e10d2890cc66b3" translate="yes" xml:space="preserve">
          <source>void QQueue::enqueue(const T &amp;amp;</source>
          <target state="translated">void QQueue :: enqueue (const T &amp;amp;</target>
        </trans-unit>
        <trans-unit id="407408df14c776c33b82b5fb36596a7c55e2bc3e" translate="yes" xml:space="preserve">
          <source>void QQueue::swap(&lt;a href=&quot;qqueue&quot;&gt;QQueue&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="translated">anular QQueue :: swap ( &lt;a href=&quot;qqueue&quot;&gt;QQueue&lt;/a&gt; &amp;lt;T&amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="0352cf01a863948e3afbe731aec864f70efd5398" translate="yes" xml:space="preserve">
          <source>void QQuick3DGeometry::addAttribute(Attribute::Semantic</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b09c88149aac520b92d056a5a29d9931696d2175" translate="yes" xml:space="preserve">
          <source>void QQuick3DGeometry::addAttribute(const QQuick3DGeometry::Attribute &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bbc5796d969b4c1d4999aab9b7f096dc501ce61" translate="yes" xml:space="preserve">
          <source>void QQuick3DGeometry::clear()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e0473ddf4218bb943df7c9d9de0aa97f01b5dcc" translate="yes" xml:space="preserve">
          <source>void QQuick3DGeometry::setBounds(const &lt;a href=&quot;qvector3d&quot;&gt;QVector3D&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e22922f1dd0f3bf37eed45bca2a6f6a78eef7ff4" translate="yes" xml:space="preserve">
          <source>void QQuick3DGeometry::setIndexData(const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68ff6897c87bb72bd1bdc015e316124bfa7830af" translate="yes" xml:space="preserve">
          <source>void QQuick3DGeometry::setPrimitiveType(QQuick3DGeometry::PrimitiveType</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b77bd360e89a9da9f0d92b67c9490723e6c0e872" translate="yes" xml:space="preserve">
          <source>void QQuick3DGeometry::setStride(int</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef53f9185d42f077928d1b00b96b51dccda8e455" translate="yes" xml:space="preserve">
          <source>void QQuick3DGeometry::setVertexData(const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a4c37d630d106135bf24d372a7fd3243c15c97c" translate="yes" xml:space="preserve">
          <source>void QQuickItem::forceActiveFocus()</source>
          <target state="translated">void QQuickItem::forceActiveFocus()</target>
        </trans-unit>
        <trans-unit id="654340ec06f2848d0c94e7943abe5946e0f12c5c" translate="yes" xml:space="preserve">
          <source>void QQuickItem::forceActiveFocus(&lt;a href=&quot;qt#FocusReason-enum&quot;&gt;Qt::FocusReason&lt;/a&gt;</source>
          <target state="translated">anular QQuickItem :: forceActiveFocus ( &lt;a href=&quot;qt#FocusReason-enum&quot;&gt;Qt :: FocusReason&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a5b74d0354c1522eaebb17e4b250ca685c52a183" translate="yes" xml:space="preserve">
          <source>void QQuickItem::grabMouse()</source>
          <target state="translated">anular QQuickItem::grabMouse()</target>
        </trans-unit>
        <trans-unit id="1d6bcd1f02ebf08eea962cda5978057d3b2ce937" translate="yes" xml:space="preserve">
          <source>void QQuickItem::grabTouchPoints(const &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;int&amp;gt; &amp;amp;</source>
          <target state="translated">void QQuickItem :: grabTouchPoints (const &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt; &amp;lt;int&amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="0a0e3a86633ee3261fe1a97f6f9021f9eae92f21" translate="yes" xml:space="preserve">
          <source>void QQuickItem::polish()</source>
          <target state="translated">anular QQuickItem::polish()</target>
        </trans-unit>
        <trans-unit id="7a4b40b04398fa86609db275a88657a1ba588418" translate="yes" xml:space="preserve">
          <source>void QQuickItem::setAcceptHoverEvents(bool</source>
          <target state="translated">anular QQuickItem::setAcceptHoverEvents(bool</target>
        </trans-unit>
        <trans-unit id="ab8031ee7ea97d9f04390c58e7aed84117bf6c58" translate="yes" xml:space="preserve">
          <source>void QQuickItem::setAcceptTouchEvents(bool</source>
          <target state="translated">anular QQuickItem::setAcceptTouchEvents(bool</target>
        </trans-unit>
        <trans-unit id="39202587a9c1832f26fae6545126cd860e3b53f7" translate="yes" xml:space="preserve">
          <source>void QQuickItem::setAcceptedMouseButtons(&lt;a href=&quot;qt#MouseButton-enum&quot;&gt;Qt::MouseButtons&lt;/a&gt;</source>
          <target state="translated">void QQuickItem :: setAcceptedMouseButtons ( &lt;a href=&quot;qt#MouseButton-enum&quot;&gt;Qt :: MouseButtons&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="52c4f84f07d012322d1d3af388862abe7a9c22da" translate="yes" xml:space="preserve">
          <source>void QQuickItem::setCursor(const &lt;a href=&quot;qcursor&quot;&gt;QCursor&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QQuickItem :: setCursor (const &lt;a href=&quot;qcursor&quot;&gt;QCursor&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="f0a4b8132be8517383cc3be182eec66f819641b8" translate="yes" xml:space="preserve">
          <source>void QQuickItem::setFiltersChildMouseEvents(bool</source>
          <target state="translated">void QQuickItem::setFiltrosRatónNiñosEventos(bool</target>
        </trans-unit>
        <trans-unit id="9dd4460048ede3c3f97b577b184723eebd970074" translate="yes" xml:space="preserve">
          <source>void QQuickItem::setFlag(&lt;a href=&quot;qquickitem#Flag-enum&quot;&gt;QQuickItem::Flag&lt;/a&gt;</source>
          <target state="translated">void QQuickItem :: setFlag ( &lt;a href=&quot;qquickitem#Flag-enum&quot;&gt;QQuickItem :: Flag&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="62d66d550a96f9911af4d24e30908a29f4741c66" translate="yes" xml:space="preserve">
          <source>void QQuickItem::setFlags(&lt;a href=&quot;qquickitem#Flag-enum&quot;&gt;QQuickItem::Flags&lt;/a&gt;</source>
          <target state="translated">void QQuickItem :: setFlags ( &lt;a href=&quot;qquickitem#Flag-enum&quot;&gt;QQuickItem :: Flags&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4f71d300a5a5ccb82ae1a6bbb869e90d9c23b53e" translate="yes" xml:space="preserve">
          <source>void QQuickItem::setKeepMouseGrab(bool</source>
          <target state="translated">anular QQuickItem::setKeepMouseGrab(bool</target>
        </trans-unit>
        <trans-unit id="ccc593a2fc2fab3f5ade09cf6e483c35fbe0fe0d" translate="yes" xml:space="preserve">
          <source>void QQuickItem::setKeepTouchGrab(bool</source>
          <target state="translated">anular QQuickItem::setKeepTouchGrab(bool</target>
        </trans-unit>
        <trans-unit id="22a49d90f2230aee3935d770bba36b120a860d19" translate="yes" xml:space="preserve">
          <source>void QQuickItem::setSize(const &lt;a href=&quot;qsizef&quot;&gt;QSizeF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QQuickItem :: setSize (const &lt;a href=&quot;qsizef&quot;&gt;QSizeF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="d0b25ec68a0dc026049f13fd40482badee90e387" translate="yes" xml:space="preserve">
          <source>void QQuickItem::stackAfter(const &lt;a href=&quot;qquickitem#QQuickItem&quot;&gt;QQuickItem&lt;/a&gt; *</source>
          <target state="translated">void QQuickItem :: stackAfter (const &lt;a href=&quot;qquickitem#QQuickItem&quot;&gt;QQuickItem&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="3861bd38a3f31ce46e714935d20b86ac804d0f26" translate="yes" xml:space="preserve">
          <source>void QQuickItem::stackBefore(const &lt;a href=&quot;qquickitem#QQuickItem&quot;&gt;QQuickItem&lt;/a&gt; *</source>
          <target state="translated">void QQuickItem :: stackBefore (const &lt;a href=&quot;qquickitem#QQuickItem&quot;&gt;QQuickItem&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="15c74641ccddec6663fa4dbfeab19083bbb7d08a" translate="yes" xml:space="preserve">
          <source>void QQuickItem::ungrabMouse()</source>
          <target state="translated">anular QQuickItem::ungrabMouse()</target>
        </trans-unit>
        <trans-unit id="9787204e9f3aaee9d39b378c060bdf18d8d94447" translate="yes" xml:space="preserve">
          <source>void QQuickItem::ungrabTouchPoints()</source>
          <target state="translated">anular QQuickItem::ungrabTouchPoints()</target>
        </trans-unit>
        <trans-unit id="639a011d35981920489d49b8f8b7bdc7f433a2db" translate="yes" xml:space="preserve">
          <source>void QQuickItem::unsetCursor()</source>
          <target state="translated">anular QQuickItem::unsetCursor()</target>
        </trans-unit>
        <trans-unit id="b260ba4ce7a92843c69f4b279600e944aa803ad6" translate="yes" xml:space="preserve">
          <source>void QQuickPaintedItem::setAntialiasing(bool</source>
          <target state="translated">void QQuickPaintedItem::setAntialiasing(bool</target>
        </trans-unit>
        <trans-unit id="435b1b178643792cc39d30b82adb957a98f9674e" translate="yes" xml:space="preserve">
          <source>void QQuickPaintedItem::setMipmap(bool</source>
          <target state="translated">void QQuickPaintedItem::setMipmap(bool</target>
        </trans-unit>
        <trans-unit id="0a850f99c1986684dade27a0c185df0c6d83548c" translate="yes" xml:space="preserve">
          <source>void QQuickPaintedItem::setOpaquePainting(bool</source>
          <target state="translated">void QQuickPaintedItem::setOpaquePainting(bool</target>
        </trans-unit>
        <trans-unit id="e8919a1a5a332e000efabf3dd720094818179e94" translate="yes" xml:space="preserve">
          <source>void QQuickPaintedItem::setPerformanceHint(&lt;a href=&quot;qquickpainteditem#PerformanceHint-enum&quot;&gt;QQuickPaintedItem::PerformanceHint&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QQuickPaintedItem :: setPerformanceHint ( &lt;a href=&quot;qquickpainteditem#PerformanceHint-enum&quot;&gt;QQuickPaintedItem :: PerformanceHint&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8f19e6fc6aab2a8235b5faecd0774485f7d7d6fa" translate="yes" xml:space="preserve">
          <source>void QQuickPaintedItem::setPerformanceHints(&lt;a href=&quot;qquickpainteditem#PerformanceHint-enum&quot;&gt;QQuickPaintedItem::PerformanceHints&lt;/a&gt;</source>
          <target state="translated">void QQuickPaintedItem :: setPerformanceHints ( &lt;a href=&quot;qquickpainteditem#PerformanceHint-enum&quot;&gt;QQuickPaintedItem :: PerformanceHints&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d90eef31a848e7f30de16e60c725cc8a5f1f1e43" translate="yes" xml:space="preserve">
          <source>void QQuickPaintedItem::update(const &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QQuickPaintedItem :: update (const &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="a56fd477bafd9e7e71b3632b03c9c641e8d7015e" translate="yes" xml:space="preserve">
          <source>void QQuickRenderControl::initialize(&lt;a href=&quot;qopenglcontext&quot;&gt;QOpenGLContext&lt;/a&gt; *</source>
          <target state="translated">void QQuickRenderControl :: initialize ( &lt;a href=&quot;qopenglcontext&quot;&gt;QOpenGLContext&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="8a4e0bcc59a5f5346bf0b46d9c9f03090cff5c1b" translate="yes" xml:space="preserve">
          <source>void QQuickRenderControl::invalidate()</source>
          <target state="translated">anular QQuickRenderControl::invalidar()</target>
        </trans-unit>
        <trans-unit id="97b5b6bf6afab0b8dde96f3d3173e4dc5d914819" translate="yes" xml:space="preserve">
          <source>void QQuickRenderControl::polishItems()</source>
          <target state="translated">anular QQuickRenderControl::polishItems()</target>
        </trans-unit>
        <trans-unit id="9034c74443831aee19ceb45f667c71ccb5662ec7" translate="yes" xml:space="preserve">
          <source>void QQuickRenderControl::prepareThread(&lt;a href=&quot;qthread&quot;&gt;QThread&lt;/a&gt; *</source>
          <target state="translated">anular QQuickRenderControl :: prepareThread ( &lt;a href=&quot;qthread&quot;&gt;QThread&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="260bbb5b94e8e2e1d199f5e3f6e80f92c0caf4f4" translate="yes" xml:space="preserve">
          <source>void QQuickRenderControl::render()</source>
          <target state="translated">anular QQuickRenderControl::render()</target>
        </trans-unit>
        <trans-unit id="9d55f97d2b81c35741957ada2f978419568376da" translate="yes" xml:space="preserve">
          <source>void QQuickWebEngineProfile::clearHttpCache()</source>
          <target state="translated">anular el perfil del motor QQuickWeb::clearHttpCache()</target>
        </trans-unit>
        <trans-unit id="7b6fa5eb1bb87dd764a69ab1608936c3b435335d" translate="yes" xml:space="preserve">
          <source>void QQuickWebEngineProfile::installUrlSchemeHandler(const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QQuickWebEngineProfile :: installUrlSchemeHandler (const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="213798ed168ea1712761b6cd114e923fb3af7632" translate="yes" xml:space="preserve">
          <source>void QQuickWebEngineProfile::removeAllUrlSchemeHandlers()</source>
          <target state="translated">anular el perfil de QQuickWebEngine::removeAllUrlSchemeHandlers()</target>
        </trans-unit>
        <trans-unit id="16d4721165018ceb02aa8bf704b02ffb896adad8" translate="yes" xml:space="preserve">
          <source>void QQuickWebEngineProfile::removeUrlScheme(const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QQuickWebEngineProfile :: removeUrlScheme (const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="87b8138094c8eafbe7b84709e2358eaec9d522fe" translate="yes" xml:space="preserve">
          <source>void QQuickWebEngineProfile::removeUrlSchemeHandler(&lt;a href=&quot;qwebengineurlschemehandler&quot;&gt;QWebEngineUrlSchemeHandler&lt;/a&gt; *</source>
          <target state="translated">void QQuickWebEngineProfile :: removeUrlSchemeHandler ( &lt;a href=&quot;qwebengineurlschemehandler&quot;&gt;QWebEngineUrlSchemeHandler&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="04d20ac56c1584bc3b81be5ce79fdcf4a449b516" translate="yes" xml:space="preserve">
          <source>void QQuickWebEngineProfile::setUrlRequestInterceptor(&lt;a href=&quot;qwebengineurlrequestinterceptor&quot;&gt;QWebEngineUrlRequestInterceptor&lt;/a&gt; *</source>
          <target state="translated">anular QQuickWebEngineProfile :: setUrlRequestInterceptor ( &lt;a href=&quot;qwebengineurlrequestinterceptor&quot;&gt;QWebEngineUrlRequestInterceptor&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="b6193f7f801b0b342ba299aea97a0406440402aa" translate="yes" xml:space="preserve">
          <source>void QQuickWidget::setClearColor(const &lt;a href=&quot;qcolor&quot;&gt;QColor&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QQuickWidget :: setClearColor (const &lt;a href=&quot;qcolor&quot;&gt;QColor&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="3b57f4203796280096d4483bd0759ab7a7d653e5" translate="yes" xml:space="preserve">
          <source>void QQuickWidget::setFormat(const &lt;a href=&quot;qsurfaceformat&quot;&gt;QSurfaceFormat&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QQuickWidget :: setFormat (const &lt;a href=&quot;qsurfaceformat&quot;&gt;QSurfaceFormat&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="3e4ba5c8b41480dd55676371a7ea10cda5e8f57e" translate="yes" xml:space="preserve">
          <source>void QQuickWindow::beginExternalCommands()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7868177490faef35e75131629c4646b78db90c4" translate="yes" xml:space="preserve">
          <source>void QQuickWindow::endExternalCommands()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04d1cafd61a64de1fb9737c1e41af59a67359449" translate="yes" xml:space="preserve">
          <source>void QQuickWindow::resetOpenGLState()</source>
          <target state="translated">anular QQuickWindow::resetOpenGLState()</target>
        </trans-unit>
        <trans-unit id="7557a945c9c35ee39157e8a6656839a07cfdd84d" translate="yes" xml:space="preserve">
          <source>void QQuickWindow::scheduleRenderJob(&lt;a href=&quot;qrunnable&quot;&gt;QRunnable&lt;/a&gt; *</source>
          <target state="translated">void QQuickWindow :: scheduleRenderJob ( &lt;a href=&quot;qrunnable&quot;&gt;QRunnable&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="b2b54e9fc0258bcb25918723f4feb4d04de168b0" translate="yes" xml:space="preserve">
          <source>void QQuickWindow::setClearBeforeRendering(bool</source>
          <target state="translated">anular QQuickWindow::setClearBeforeRendering(bool</target>
        </trans-unit>
        <trans-unit id="b34f28619de5fab618132a6cee188814f45b3725" translate="yes" xml:space="preserve">
          <source>void QQuickWindow::setPersistentOpenGLContext(bool</source>
          <target state="translated">void QQuickWindow::setPersistentOpenGLContext(bool</target>
        </trans-unit>
        <trans-unit id="a2ae523b9d045783cf43f40d668ac31b51c8dafe" translate="yes" xml:space="preserve">
          <source>void QQuickWindow::setPersistentSceneGraph(bool</source>
          <target state="translated">void QQuickWindow::setPersistentSceneGraph(bool</target>
        </trans-unit>
        <trans-unit id="4c48f5ac41df042156552cec1eec7112b17b3b55" translate="yes" xml:space="preserve">
          <source>void QQuickWindow::setRenderTarget(&lt;a href=&quot;#uint-typedef&quot;&gt;uint&lt;/a&gt;</source>
          <target state="translated">void QQuickWindow :: setRenderTarget ( &lt;a href=&quot;#uint-typedef&quot;&gt;uint&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fed16f75f068dbcfb4ec370212200ec9cfa9c590" translate="yes" xml:space="preserve">
          <source>void QQuickWindow::setRenderTarget(&lt;a href=&quot;qopenglframebufferobject&quot;&gt;QOpenGLFramebufferObject&lt;/a&gt; *</source>
          <target state="translated">void QQuickWindow :: setRenderTarget ( &lt;a href=&quot;qopenglframebufferobject&quot;&gt;QOpenGLFramebufferObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="089e567824f1bd57fa27bcf5c5774cb8c577ee49" translate="yes" xml:space="preserve">
          <source>void QQuickWindow::setRenderTarget(&lt;a href=&quot;qtglobal#uint-typedef&quot;&gt;uint&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4665629a5f6f284bd84c3b6da57506bb69cb5f37" translate="yes" xml:space="preserve">
          <source>void QRadialGradient::setCenter(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QRadialGradient :: setCenter ( &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="56b107a23ca9c2583c1d3a99f0911b2a133c7a75" translate="yes" xml:space="preserve">
          <source>void QRadialGradient::setCenter(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ad98ffcebd9ed5f674a3f27e74b91ad1c81e135" translate="yes" xml:space="preserve">
          <source>void QRadialGradient::setCenter(const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QRadialGradient :: setCenter (const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="a4abd902a71cba87f113e6fdca60752bee16d1c8" translate="yes" xml:space="preserve">
          <source>void QRadialGradient::setCenterRadius(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QRadialGradient :: setCenterRadius ( &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f9323b48e8cd46b974cada7b2ebf20de761b9da5" translate="yes" xml:space="preserve">
          <source>void QRadialGradient::setCenterRadius(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33b8586df01ab6533ab92ec20f5f0611a85efd4a" translate="yes" xml:space="preserve">
          <source>void QRadialGradient::setFocalPoint(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QRadialGradient :: setFocalPoint ( &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fd85a97d49ce4f25e15c9dd6646cee94cfb39c9d" translate="yes" xml:space="preserve">
          <source>void QRadialGradient::setFocalPoint(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="628dd1cd7239f151f89ccc039c5681af5dc4eb67" translate="yes" xml:space="preserve">
          <source>void QRadialGradient::setFocalPoint(const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QRadialGradient :: setFocalPoint (const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="7d7ab6c26165f9f0aa0ce306e530fe1efbd48e9b" translate="yes" xml:space="preserve">
          <source>void QRadialGradient::setFocalRadius(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QRadialGradient :: setFocalRadius ( &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="610f050225ee2084f0ae27d68884cd840570b95a" translate="yes" xml:space="preserve">
          <source>void QRadialGradient::setFocalRadius(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92ab7543adaa656b79d5c5e2bb0ab7d720748acb" translate="yes" xml:space="preserve">
          <source>void QRadialGradient::setRadius(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QRadialGradient :: setRadius ( &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="259770c9dbffb3edded038e0c2c238e31bcceaa2" translate="yes" xml:space="preserve">
          <source>void QRadialGradient::setRadius(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8f212b081d9108ec11d8aa978488876be7599e7" translate="yes" xml:space="preserve">
          <source>void QRandomGenerator::discard(unsignedlonglong</source>
          <target state="translated">nulo QRandomGenerator::descartar(sin firmar)</target>
        </trans-unit>
        <trans-unit id="67f0588021089de8450eec3d267a6b9d80c5c78e" translate="yes" xml:space="preserve">
          <source>void QRandomGenerator::fillRange(UInt (&amp;amp;)[N]</source>
          <target state="translated">void QRandomGenerator :: fillRange (UInt (&amp;amp;) [N]</target>
        </trans-unit>
        <trans-unit id="58e4f5526b245e071a48e7ee974d5b291110c7d3" translate="yes" xml:space="preserve">
          <source>void QRandomGenerator::fillRange(UInt *</source>
          <target state="translated">void QRandomGenerator::fillRange(UInt *</target>
        </trans-unit>
        <trans-unit id="8ec719aa9afde3ee5b1905c0734682b3d69b9cd7" translate="yes" xml:space="preserve">
          <source>void QRandomGenerator::generate(ForwardIterator</source>
          <target state="translated">void QRandomGenerator::generate(ForwardIterator</target>
        </trans-unit>
        <trans-unit id="e04ccb932b141623ab95bb7c53d48dd585c95b04" translate="yes" xml:space="preserve">
          <source>void QRandomGenerator::seed(&lt;a href=&quot;qtglobal#quint32-typedef&quot;&gt;quint32&lt;/a&gt;</source>
          <target state="translated">void QRandomGenerator :: semilla ( &lt;a href=&quot;qtglobal#quint32-typedef&quot;&gt;quint32&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="04087e7e2e18e2f6601e8a6780d40926601ae28d" translate="yes" xml:space="preserve">
          <source>void QRandomGenerator::seed(std::seed_seq &amp;amp;</source>
          <target state="translated">void QRandomGenerator :: seed (std :: seed_seq &amp;amp;</target>
        </trans-unit>
        <trans-unit id="da7f5c62d0d53e4c160aaa13cf21cbd2c8333b17" translate="yes" xml:space="preserve">
          <source>void QRawFont::loadFromData(const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QRawFont :: loadFromData (const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="0bb00b81c75eecc3bd511df2132f72d39cd8dfe4" translate="yes" xml:space="preserve">
          <source>void QRawFont::loadFromFile(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QRawFont :: loadFromFile (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="860dac4ef478c6a2e2691693ef70001a967e991a" translate="yes" xml:space="preserve">
          <source>void QRawFont::setPixelSize(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QRawFont :: setPixelSize ( &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f6a4fdd1c134294263e19a43cb48f9eb0b1108df" translate="yes" xml:space="preserve">
          <source>void QRawFont::setPixelSize(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e0d276f0b79bd87cc6078495ddf9974be2b392c" translate="yes" xml:space="preserve">
          <source>void QRawFont::swap(&lt;a href=&quot;qrawfont#QRawFont&quot;&gt;QRawFont&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QRawFont :: swap ( &lt;a href=&quot;qrawfont#QRawFont&quot;&gt;QRawFont&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="81879f9632694865ec218b0997b43ad127a6c9e0" translate="yes" xml:space="preserve">
          <source>void QReadLocker::relock()</source>
          <target state="translated">anular QReadLocker::relock()</target>
        </trans-unit>
        <trans-unit id="1fe727f2d9b4a35a673ede7c53e9c561e6251f55" translate="yes" xml:space="preserve">
          <source>void QReadLocker::unlock()</source>
          <target state="translated">anular QReadLocker::desbloquear()</target>
        </trans-unit>
        <trans-unit id="fbc037c20f35f9c6ef6c40c42d2ba4b5edca58cf" translate="yes" xml:space="preserve">
          <source>void QReadWriteLock::lockForRead()</source>
          <target state="translated">anular QReadWriteLock::lockForRead()</target>
        </trans-unit>
        <trans-unit id="74f1a497e9468d1142ddfb9902dcf6cdc2b65503" translate="yes" xml:space="preserve">
          <source>void QReadWriteLock::lockForWrite()</source>
          <target state="translated">anular QReadWriteLock::lockForWrite()</target>
        </trans-unit>
        <trans-unit id="d8f9c653b3a232c4e559191aa3452ed97e54d5ff" translate="yes" xml:space="preserve">
          <source>void QReadWriteLock::unlock()</source>
          <target state="translated">anular QReadWriteLock::desbloquear()</target>
        </trans-unit>
        <trans-unit id="700237ab7fdd3602317b1e1570094938d64a2740" translate="yes" xml:space="preserve">
          <source>void QRect::adjust(int</source>
          <target state="translated">anular QRect::adjust(int</target>
        </trans-unit>
        <trans-unit id="247ee592ab716bd05696d07d990abbfa6169d975" translate="yes" xml:space="preserve">
          <source>void QRect::getCoords(int *</source>
          <target state="translated">anular QRect::getCoords(int *</target>
        </trans-unit>
        <trans-unit id="8784f3b7bc3b871851b0388adb5c40505d2d4a06" translate="yes" xml:space="preserve">
          <source>void QRect::getRect(int *</source>
          <target state="translated">anular QRect::getRect(int *</target>
        </trans-unit>
        <trans-unit id="f7220f2ebbd3f3d7a3241802f3ce59006a9566d8" translate="yes" xml:space="preserve">
          <source>void QRect::moveBottom(int</source>
          <target state="translated">void QRect::moveBottom(int</target>
        </trans-unit>
        <trans-unit id="3b75c5a234a149d96d466300c67655986ab7419a" translate="yes" xml:space="preserve">
          <source>void QRect::moveBottomLeft(const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QRect :: moveBottomLeft (const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="73ff1567c32d0d2b00d437e1e16decb72c5f2aad" translate="yes" xml:space="preserve">
          <source>void QRect::moveBottomRight(const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QRect :: moveBottomRight (const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="e059c8cf30ebe2df085872b498f33b69b58fc0ff" translate="yes" xml:space="preserve">
          <source>void QRect::moveCenter(const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QRect :: moveCenter (const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="0952f331cfac429d32011c1e7b1c9ddbb6544562" translate="yes" xml:space="preserve">
          <source>void QRect::moveLeft(int</source>
          <target state="translated">void QRect::moveLeft(int</target>
        </trans-unit>
        <trans-unit id="8114146021f9241e932de74d2b0e6a78e509fc64" translate="yes" xml:space="preserve">
          <source>void QRect::moveRight(int</source>
          <target state="translated">anular QRect::moveRight(int</target>
        </trans-unit>
        <trans-unit id="9f994710f6fb1aa271bb6f47d84f48a4757adc9a" translate="yes" xml:space="preserve">
          <source>void QRect::moveTo(const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QRect :: moveTo (const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="e28ff5085059826b99d3791e513bc1d866c6863a" translate="yes" xml:space="preserve">
          <source>void QRect::moveTo(int</source>
          <target state="translated">anular QRect::moveTo(int</target>
        </trans-unit>
        <trans-unit id="9a2ff8102b96aec1a583344e94457e50b175ea4e" translate="yes" xml:space="preserve">
          <source>void QRect::moveTop(int</source>
          <target state="translated">void QRect::moveTop(int</target>
        </trans-unit>
        <trans-unit id="ade7e7270b36774f90d08e20137658651de1cc1d" translate="yes" xml:space="preserve">
          <source>void QRect::moveTopLeft(const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QRect :: moveTopLeft (const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="2d5426742561eba8116d88cc4318166de64bb64b" translate="yes" xml:space="preserve">
          <source>void QRect::moveTopRight(const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QRect :: moveTopRight (const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="1cbabab9644e0059297c2d2ae94d477a5e7e43e3" translate="yes" xml:space="preserve">
          <source>void QRect::setBottom(int</source>
          <target state="translated">void QRect::setBottom(int</target>
        </trans-unit>
        <trans-unit id="fc94e0e1c00955703222c2c3053d6138bb1de034" translate="yes" xml:space="preserve">
          <source>void QRect::setBottomLeft(const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QRect :: setBottomLeft (const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="ab5bf484aaab2e5d1ddf32631dc9d710a0b92b6f" translate="yes" xml:space="preserve">
          <source>void QRect::setBottomRight(const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QRect :: setBottomRight (const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="743ea84cf16e291fa3437a1c3c1632ed86f65a72" translate="yes" xml:space="preserve">
          <source>void QRect::setCoords(int</source>
          <target state="translated">anular QRect::setCoords(int</target>
        </trans-unit>
        <trans-unit id="35b115c8165aaf1e87ba97e4bbd313ba1e48f900" translate="yes" xml:space="preserve">
          <source>void QRect::setHeight(int</source>
          <target state="translated">void QRect::setHeight(int</target>
        </trans-unit>
        <trans-unit id="d71384f2a5b4208d7c38001a4d6f09e5ec59b759" translate="yes" xml:space="preserve">
          <source>void QRect::setLeft(int</source>
          <target state="translated">void QRect::setLeft(int</target>
        </trans-unit>
        <trans-unit id="6247747d1e9b152d813cc4815d44927ac98ce0ea" translate="yes" xml:space="preserve">
          <source>void QRect::setRect(int</source>
          <target state="translated">anular QRect::setRect(int</target>
        </trans-unit>
        <trans-unit id="ee8680a4132d26501e07904f3590dca251322002" translate="yes" xml:space="preserve">
          <source>void QRect::setRight(int</source>
          <target state="translated">anular QRect::setRight(int</target>
        </trans-unit>
        <trans-unit id="e61e13d502ae498236f93a183c2bfb4af06b9098" translate="yes" xml:space="preserve">
          <source>void QRect::setSize(const &lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QRect :: setSize (const &lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="134a89ccf965c6c0c982b6db67898a990a89a536" translate="yes" xml:space="preserve">
          <source>void QRect::setTop(int</source>
          <target state="translated">void QRect::setTop(int</target>
        </trans-unit>
        <trans-unit id="d76bb5563cc781ecc49f7e3e5c836baba95041e5" translate="yes" xml:space="preserve">
          <source>void QRect::setTopLeft(const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QRect :: setTopLeft (const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="bc4d6c5e8faf5ca74ace58a7906b8a2a958373d2" translate="yes" xml:space="preserve">
          <source>void QRect::setTopRight(const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QRect :: setTopRight (const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="57484870c8f8b40bb0b024a61c2a94b76924d070" translate="yes" xml:space="preserve">
          <source>void QRect::setWidth(int</source>
          <target state="translated">void QRect::setWidth(int</target>
        </trans-unit>
        <trans-unit id="78f452586330e9ac8a7f1b9640e4eb97c406c36c" translate="yes" xml:space="preserve">
          <source>void QRect::setX(int</source>
          <target state="translated">anular QRect::setX(int</target>
        </trans-unit>
        <trans-unit id="dd4365ecba81d661ce8de6665e28d2a5e1e8f763" translate="yes" xml:space="preserve">
          <source>void QRect::setY(int</source>
          <target state="translated">nulo QRect::setY(int</target>
        </trans-unit>
        <trans-unit id="a743876c5a32869ead664c94866ac346c6ba8b53" translate="yes" xml:space="preserve">
          <source>void QRect::translate(const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QRect :: translate (const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="eb2346e0b305e081832ac58c069d6bfefda389a9" translate="yes" xml:space="preserve">
          <source>void QRect::translate(int</source>
          <target state="translated">void QRect::translate(int</target>
        </trans-unit>
        <trans-unit id="d1e8e53e25db64af8017a0d1c076f6fcedda28cb" translate="yes" xml:space="preserve">
          <source>void QRectF::adjust(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QRectF :: ajustar ( &lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="543989855c9c29f55255998e680b2a16e9c2c5f0" translate="yes" xml:space="preserve">
          <source>void QRectF::getCoords(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt; *</source>
          <target state="translated">vac&amp;iacute;o QRectF :: getCoords ( &lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="efb66048830232786af7922478085d413c6e213e" translate="yes" xml:space="preserve">
          <source>void QRectF::getRect(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt; *</source>
          <target state="translated">vac&amp;iacute;o QRectF :: getRect ( &lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="a0e694a1f8dff7415b7925cf567e8ea91ae7362e" translate="yes" xml:space="preserve">
          <source>void QRectF::moveBottom(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QRectF :: moveBottom ( &lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="34853ad8af103be969d7f5647a477153c72069bb" translate="yes" xml:space="preserve">
          <source>void QRectF::moveBottomLeft(const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QRectF :: moveBottomLeft (const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="5ff127999dcd30308c7eddb573a7c22ab14b8a8c" translate="yes" xml:space="preserve">
          <source>void QRectF::moveBottomRight(const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QRectF :: moveBottomRight (const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="65a3177752bbe82475c80c0698fbeaafef3402f2" translate="yes" xml:space="preserve">
          <source>void QRectF::moveCenter(const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QRectF :: moveCenter (const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="13f7c004a51707d7fcfc7b1ad7709cf9acf06779" translate="yes" xml:space="preserve">
          <source>void QRectF::moveLeft(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">void QRectF :: moveLeft ( &lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fc3554f6dd0ecf4447915d2d5bdd362a2df21f60" translate="yes" xml:space="preserve">
          <source>void QRectF::moveRight(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QRectF :: moveRight ( &lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c67bf8043b1b417505456018133da8b96e895c1e" translate="yes" xml:space="preserve">
          <source>void QRectF::moveTo(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QRectF :: moveTo ( &lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5f7e85877777801fa3dafa09bbd7b07a83643daf" translate="yes" xml:space="preserve">
          <source>void QRectF::moveTo(const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QRectF :: moveTo (const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="50a1e31bd7a515033af09f482f86654f045ebac7" translate="yes" xml:space="preserve">
          <source>void QRectF::moveTop(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QRectF :: moveTop ( &lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9f06121f41d867ff9c087cc2da457c628930748d" translate="yes" xml:space="preserve">
          <source>void QRectF::moveTopLeft(const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QRectF :: moveTopLeft (const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="98a43cce6d609aea4e768d0fcffb189cbf9cfc81" translate="yes" xml:space="preserve">
          <source>void QRectF::moveTopRight(const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QRectF :: moveTopRight (const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="715e437c2806f0c541d32ac9cdf261a5212b9a64" translate="yes" xml:space="preserve">
          <source>void QRectF::setBottom(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QRectF :: setBottom ( &lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1acb2b6bca0ead70b52bb9ab766ca6b01fafb9c9" translate="yes" xml:space="preserve">
          <source>void QRectF::setBottomLeft(const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QRectF :: setBottomLeft (const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="f066010e6e010a0030677158cdca168ca9e98d5e" translate="yes" xml:space="preserve">
          <source>void QRectF::setBottomRight(const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QRectF :: setBottomRight (const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="ff9adac60d1a8dae20fec5ec662ae44ddc6b281d" translate="yes" xml:space="preserve">
          <source>void QRectF::setCoords(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QRectF :: setCoords ( &lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7b463f549e07b00b6296277ef35edb508732ef16" translate="yes" xml:space="preserve">
          <source>void QRectF::setHeight(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QRectF :: setHeight ( &lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c25167f73451da6716138ed2effbfad37facd5c0" translate="yes" xml:space="preserve">
          <source>void QRectF::setLeft(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QRectF :: setLeft ( &lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7fd161bb70e356f69d17f958cd9960f4c2dcc70c" translate="yes" xml:space="preserve">
          <source>void QRectF::setRect(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QRectF :: setRect ( &lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2fc0ec95b039d354d07da0d6908c50e364f857ba" translate="yes" xml:space="preserve">
          <source>void QRectF::setRight(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QRectF :: setRight ( &lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ff4ce430fd6ed3498b3aa6119148ee898c099974" translate="yes" xml:space="preserve">
          <source>void QRectF::setSize(const &lt;a href=&quot;qsizef&quot;&gt;QSizeF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QRectF :: setSize (const &lt;a href=&quot;qsizef&quot;&gt;QSizeF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="2dd0ae9684f9f98e8b04100b67c54b6aad5eeec8" translate="yes" xml:space="preserve">
          <source>void QRectF::setTop(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">vac&amp;iacute;o QRectF :: setTop ( &lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fcf6522bfe60a80843ba9809847510368f8e03ce" translate="yes" xml:space="preserve">
          <source>void QRectF::setTopLeft(const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">void QRectF :: setTopLeft (const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
