<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="qt">
    <body>
      <group id="qt">
        <trans-unit id="16f690736fbd4bce1a47901fecb7ae3a979eec1b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qundostack&quot;&gt;QUndoStack&lt;/a&gt; provides convenient undo and redo &lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; objects, which can be inserted into a menu or a toolbar. When commands are undone or redone, &lt;a href=&quot;qundostack&quot;&gt;QUndoStack&lt;/a&gt; updates the text properties of these actions to reflect what change they will trigger. The actions are also disabled when no command is available for undo or redo. These actions are returned by &lt;a href=&quot;qundostack#createUndoAction&quot;&gt;QUndoStack::createUndoAction&lt;/a&gt;() and &lt;a href=&quot;qundostack#createRedoAction&quot;&gt;QUndoStack::createRedoAction&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75dbe80efb3e4713b008432c27687639b51f429d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qundostack&quot;&gt;QUndoStack&lt;/a&gt; provides support for undo and redo actions, command compression, command macros, and supports the concept of a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="976d36022776c8033514bf177fce09f499f1b34d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qundostack&quot;&gt;QUndoStack&lt;/a&gt; supports the concept of a clean state. When the document is saved to disk, the stack can be marked as clean using &lt;a href=&quot;qundostack#setClean&quot;&gt;setClean&lt;/a&gt;(). Whenever the stack returns to this state through undoing and redoing commands, it emits the signal &lt;a href=&quot;qundostack#cleanChanged&quot;&gt;cleanChanged&lt;/a&gt;(). This signal is also emitted when the stack leaves the clean state. This signal is usually used to enable and disable the save actions in the application, and to update the document's title to reflect that it contains unsaved changes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e38b53319260dac78d046bbe80d72546d7e32a9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qundostack&quot;&gt;QUndoStack&lt;/a&gt; will only try to merge two commands if they have the same id, and the id is not -1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b1462a1b83ab7af8577599d76bbca40b33ccb94" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qundostack#canUndo&quot;&gt;canUndo&lt;/a&gt;() and &lt;a href=&quot;qundostack#canRedo&quot;&gt;canRedo&lt;/a&gt;() return false,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbe91528fd679d4867ca126473ebbdb21eaf3d7e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qundostack#indexChanged&quot;&gt;indexChanged&lt;/a&gt;() and &lt;a href=&quot;qundostack#cleanChanged&quot;&gt;cleanChanged&lt;/a&gt;() are not emitted,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6df7a0ed0218d456e98421a27c3ea851a201f686" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qundostack#push&quot;&gt;QUndoStack::push&lt;/a&gt;() will only try to merge two commands if they have the same ID, and the ID is not -1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bee860c7e907038582cb1cfe3ad92d38fe37cff2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qundoview&quot;&gt;QUndoView&lt;/a&gt; is a &lt;a href=&quot;qlistview&quot;&gt;QListView&lt;/a&gt; which displays the list of commands pushed on an undo stack. The most recently executed command is always selected. Selecting a different command results in a call to &lt;a href=&quot;qundostack#setIndex&quot;&gt;QUndoStack::setIndex&lt;/a&gt;(), rolling the state of the document backwards or forward to the new command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b725e75521bb0630dd09aa8fc03da4b1378aa6b3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qundoview&quot;&gt;QUndoView&lt;/a&gt; is a widget which shows the contents of an undo stack. Clicking on a command in the view rolls the document's state backwards or forwards to that command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2469179126adbe08c4a1e078141e21b2a9e8f2bf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; FilterRequest::firstPartyUrl</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="991632568b1ed77d420e280df3bc5e50cba76431" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; FilterRequest::origin</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca71e336609fe9dd8712770a7e8b58bd0e89a727" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; QAbstractOAuth::authorizationUrl() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b7ecf84e2aacad863825da9744c11dbf77eca65" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; QCborValue::toUrl(const &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47f76efc38f368a744882a4475da35b0895187f5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; QFileDialog::directoryUrl() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bd235573de5809aa154052500bb8c58ded901ce" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; QFileOpenEvent::url() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d89a20528a26d5e1b3a1207780139e7ca7e93485" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; QFileSelector::select(const &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="beb670bd6d7971ad26d0645a6dc203e2079f3393" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; QHelpContentItem::url() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63bad50fdae578515bd0b014f9ef021261b2a52c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; QHelpEngineCore::findFile(const &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e57a1e01eca2287f98931d8309c29406e03c16bc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; QHelpSearchResult::url() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="664550f69cb51096b79839ca323ade9a9696c9b2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; QHelpSearchResultWidget::linkAt(const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd19f95ee6b54e840080156b03309ed5365c91fc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; QMediaContent::canonicalUrl() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d8f4be786fbb9cb3a59cedd96cf2baba8340d66" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; QMediaResource::url() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28b3b6e583ba66bc7e5aad442dc94b09e540c157" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; QNdefNfcSmartPosterRecord::uri() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80c1bfa41e0c685b604a041e98e6aff305a4a3f3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; QNdefNfcUriRecord::uri() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80407880ca288009daf0db6157af153ea3dacbe7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; QNetworkCacheMetaData::url() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb048c35c2d66e8add99c88bede52e41ff63b696" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; QNetworkProxyQuery::url() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1906b7ce1fbfe3960ea3f719b71b8b92ac8457d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; QNetworkReply::url() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5a07075aa2bcc3f9ed318fd8e6667b0116d1985" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; QNetworkRequest::url() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b9f706e3a7b4d8e0565c20cecb0a45e08be7181" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; QOAuth1::temporaryCredentialsUrl() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53a3e60fb97d10e449d52ec184971df4314e1557" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; QOAuth1::tokenCredentialsUrl() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0a187c6df2670863cec8bd3f1191be064c07fa0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; QOAuth1Signature::url() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b18654ac1f18edafac93b757ec758d3fd9b66af5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; QOAuth2AuthorizationCodeFlow::accessTokenUrl() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa7fd22b529722e66d2b488be50fc8b32c354ddf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; QPlace::primaryWebsite() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="307741d1aef0b1b4218b96faaf79174c7cc8709e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; QPlaceIcon::url(const &lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d0ade68ae4d1247da29cf3d8a378e1e6429bfc7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; QPlaceImage::url() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cf392f6b4e6f4b9aaf6c9b8ae535e69582be853" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; QPlaceManagerEngine::constructIconUrl(const &lt;a href=&quot;qplaceicon&quot;&gt;QPlaceIcon&lt;/a&gt; &amp;amp;icon, const &lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; &amp;amp;size)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="180cd82a093648430c3186108c7e37e9eaba44f6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; QPlaceSupplier::url() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f0ae9d45bb3688933c0acd85dd7b31a09ecdfe0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; QQmlContext::baseUrl() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9405746a6314fc35817b5f8e307d27cb81fb1532" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; QQmlContext::resolvedUrl(const &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78b5f8f60b0069f8ae1e679b7a3afdb656aad8ab" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; QQmlEngine::baseUrl() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f97bde5c832d7e71b75314a22e107ba02d815e29" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; QQmlError::url() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b43041eb3a8fa95038b3f4bd42507e6c58db7a57" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; QQmlExtensionPlugin::baseUrl() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cd62a15c9e20c975964d6344a5cdcd730206e5a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; QQuickView::source() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bc272882ae2b970156d68461739ccbc9ab281dd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; QQuickWidget::source() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab30283f03cd9aae3e62075e1018192cc577b045" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; QSoundEffect::source() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2794bcbb81d59f9d93ca9d761b500fad820c6673" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; QSourceLocation::uri() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f33ef16002d3cdb7952892cf161d2fb7bdab6bcf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; QTextBrowser::historyUrl(int</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a013f274333c6595d683b334df744a30bdc8205e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; QTextureImage::source() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7694d74234aa6e660c4e2b784b032275fa043834" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; QVariant::toUrl() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce3b9e8d692f787755de666c1fbd3881dbb08a86" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; QWebEngineCertificateError::url() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b7d4d5386d033f59d17bdaed8d1a4092cbee65a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; QWebEngineClientCertificateSelection::host() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06a03f40658b21b1e4431b78c7d99f50891105ec" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; QWebEngineContextMenuData::linkUrl() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0485ed17c4fd4a0237cd9e72285d5dd8bcf40f8e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; QWebEngineContextMenuData::mediaUrl() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98006c5e288be44f9ec7c7089c3efd2a260a35e8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; QWebEngineDownloadItem::url() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2798c4c3bb89fe5681a756c6fdd6b6f87e4fffc7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; QWebEngineHistoryItem::iconUrl() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c25ae1a8ee4433f56205ef42a3ea8f886c643c6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; QWebEngineHistoryItem::originalUrl() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db7b85ed1eee69241042a88b5c170230e7251843" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; QWebEngineHistoryItem::url() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a79548a2cc1ccebd84043ce49a63f4aba2a20c52" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; QWebEngineHttpRequest::url() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f2ba5686567ad6baf9cfce2a646afcd969c473a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; QWebEngineUrlRequestInfo::firstPartyUrl() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3dc3dbbebbed3e9bbd23d2f01268bed406a3b68" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; QWebEngineUrlRequestInfo::requestUrl() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cdb6ea2f509165d9a58829cccdbbb01190b49f7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; QWebEngineUrlRequestJob::initiator() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed39687d818f6cc959231fca85b44e373a46f8a4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; QWebEngineUrlRequestJob::requestUrl() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6795da5f551e3d35c6965bd55871003bf1f51435" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; QWebSocket::requestUrl() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08f52746252b7e5e2be079adde4b5e7f06a0c0ab" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; QWebSocketServer::serverUrl() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4053cf2441bb9cafa02a72d5e6f64c635e67486c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; QXmlSchema::documentUri() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bad0b036d87e4a2cab055d10f3f06751aa7e6c99" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; conforms to the URI specification from &lt;a href=&quot;http://www.rfc-editor.org/rfc/rfc3986.txt&quot;&gt;RFC 3986&lt;/a&gt; (Uniform Resource Identifier: Generic Syntax), and includes scheme extensions from &lt;a href=&quot;http://www.rfc-editor.org/rfc/rfc1738.txt&quot;&gt;RFC 1738&lt;/a&gt; (Uniform Resource Locators). Case folding rules in &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; conform to &lt;a href=&quot;http://www.rfc-editor.org/rfc/rfc3491.txt&quot;&gt;RFC 3491&lt;/a&gt; (Nameprep: A Stringprep Profile for Internationalized Domain Names (IDN)). It is also compatible with the &lt;a href=&quot;http://freedesktop.org/wiki/Specifications/file-uri-spec/&quot;&gt;file URI specification&lt;/a&gt; from freedesktop.org, provided that the locale encodes file names using UTF-8 (required by IDN).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de919bf05c478b8b9838c1ed9cce1b3a66a6baac" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; is capable of detecting many errors in URLs while parsing it or when components of the URL are set with individual setter methods (like &lt;a href=&quot;qurl#setScheme&quot;&gt;setScheme&lt;/a&gt;(), &lt;a href=&quot;qurl#setHost&quot;&gt;setHost&lt;/a&gt;() or &lt;a href=&quot;qurl#setPath&quot;&gt;setPath&lt;/a&gt;()). If the parsing or setter function is successful, any previously recorded error conditions will be discarded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e0e681abcfb73c920022cbf7490b16e77dd6d44" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; is capable of recording only one error condition. If more than one error is found, it is undefined which error is reported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e6340fa866e359bcb194221d47ecee47acfaed8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; only checks for conformance with the URL specification. It does not try to verify that high-level protocol URLs are in the format they are expected to be by handlers elsewhere. For example, the following URIs are all considered valid by &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt;, even if they do not make sense when used:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24da65c34630215cca5e944af4635339f0d4ff75" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; url{&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;(&quot;ws://server:port&quot;)};</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30a28da5efc6bcfeb734df45af41d2c24f124e55" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; will interpret the URL component in the fully-decoded form, where percent characters stand for themselves, not as the beginning of a percent-encoded sequence. This mode is only valid for the setters setting components of a URL; it is not permitted in the &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; constructor, in &lt;a href=&quot;qurl#fromEncoded&quot;&gt;fromEncoded&lt;/a&gt;() or in &lt;a href=&quot;qurl#setUrl&quot;&gt;setUrl&lt;/a&gt;(). For more information on this mode, see the documentation for &lt;a href=&quot;qurl#ComponentFormattingOption-enum&quot;&gt;QUrl::FullyDecoded&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ced1aad44ba252e36fafd49ffc21dabcc2686909" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; will try to correct some common errors in URLs. This mode is useful for parsing URLs coming from sources not known to be strictly standards-conforming.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e034f3090d9bee825dbf12c855acdfc2f6b88ea6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt;(&quot;local:service&quot;)</source>
          <target state="translated">&lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt;(&quot;local:service&quot;)</target>
        </trans-unit>
        <trans-unit id="446d60c62439bb257fb850e08ee4e0511c9d9811" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt;(&quot;tcp://192.168.1.1:9999&quot;)</source>
          <target state="translated">&lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt;(&quot;tcp://192.168.1.1:9999&quot;)</target>
        </trans-unit>
        <trans-unit id="4fa65745d002b15b2a5ca4016d181807242d2ce1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt;: a URL or URI</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c34b08dfdb8387e664fbaa667965cc91dbddbcd7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qurl#ParsingMode-enum&quot;&gt;QUrl::DecodedMode&lt;/a&gt; should be used when setting the fragment from a data source which is not a URL or with a fragment obtained by calling &lt;a href=&quot;qurl#fragment&quot;&gt;fragment&lt;/a&gt;() with the &lt;a href=&quot;qurl#ComponentFormattingOption-enum&quot;&gt;QUrl::FullyDecoded&lt;/a&gt; formatting option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3448710db4b25b14bfb5da6e11c687302693d352" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qurl#ParsingMode-enum&quot;&gt;QUrl::DecodedMode&lt;/a&gt; should be used when setting the password from a data source which is not a URL, such as a password dialog shown to the user or with a password obtained by calling &lt;a href=&quot;qurl#password&quot;&gt;password&lt;/a&gt;() with the &lt;a href=&quot;qurl#ComponentFormattingOption-enum&quot;&gt;QUrl::FullyDecoded&lt;/a&gt; formatting option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be58da6620f8792ebd8413bd7f2220120c3c2df4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qurl#ParsingMode-enum&quot;&gt;QUrl::DecodedMode&lt;/a&gt; should be used when setting the path from a data source which is not a URL, such as a dialog shown to the user or with a path obtained by calling &lt;a href=&quot;qurl#path&quot;&gt;path&lt;/a&gt;() with the &lt;a href=&quot;qurl#ComponentFormattingOption-enum&quot;&gt;QUrl::FullyDecoded&lt;/a&gt; formatting option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="384c532b5abd94a7ba1c11ac2b46f0da1f8049ad" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qurl#ParsingMode-enum&quot;&gt;QUrl::DecodedMode&lt;/a&gt; should be used when setting the user name from a data source which is not a URL, such as a password dialog shown to the user or with a user name obtained by calling &lt;a href=&quot;qurl#userName&quot;&gt;userName&lt;/a&gt;() with the &lt;a href=&quot;qurl#ComponentFormattingOption-enum&quot;&gt;QUrl::FullyDecoded&lt;/a&gt; formatting option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1a1ac306d8dfdc5e1aa1cc91c155bde892f4076" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qurl#QUrl&quot;&gt;QUrl&lt;/a&gt; &amp;amp;QUrl::operator=(&lt;a href=&quot;qurl#QUrl&quot;&gt;QUrl&lt;/a&gt; &amp;amp;&amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f0ae0a61aad6685a94863e0da53bda8adcccd88" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qurl#QUrl&quot;&gt;QUrl&lt;/a&gt; &amp;amp;QUrl::operator=(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ce3ac59befd33c54a5c8d246c5c3ab458e5190c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qurl#QUrl&quot;&gt;QUrl&lt;/a&gt; &amp;amp;QUrl::operator=(const &lt;a href=&quot;qurl#QUrl&quot;&gt;QUrl&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6051510b05d215cdc5f7718bb2c0a3aa371414b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qurl#QUrl&quot;&gt;QUrl&lt;/a&gt; QUrl::adjusted(&lt;a href=&quot;qurl#UrlFormattingOption-enum&quot;&gt;QUrl::FormattingOptions&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d4b57e161a7431e6574fca314b6ce12b8756938" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qurl#QUrl&quot;&gt;QUrl&lt;/a&gt; QUrl::resolved(const &lt;a href=&quot;qurl#QUrl&quot;&gt;QUrl&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fe339699ad48ff1c4e2875d106c7f954b2d9baf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qurl#fromLocalFile&quot;&gt;fromLocalFile&lt;/a&gt;() constructs a &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; by parsing a local file path. &lt;a href=&quot;qurl#toLocalFile&quot;&gt;toLocalFile&lt;/a&gt;() converts a URL to a local file path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="357a74d3305cb81f1ab7989fa0c60b70d5d84106" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qurlquery&quot;&gt;QUrlQuery&lt;/a&gt; object, including the query delimiters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4445f8ce515766a062884f7ed9fd41a159fe377" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qurlquery#QUrlQuery&quot;&gt;QUrlQuery&lt;/a&gt; &amp;amp;QUrlQuery::operator=(&lt;a href=&quot;qurlquery#QUrlQuery&quot;&gt;QUrlQuery&lt;/a&gt; &amp;amp;&amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60e5147d2218d02568775e0030b33e5f135a10e2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qurlquery#QUrlQuery&quot;&gt;QUrlQuery&lt;/a&gt; &amp;amp;QUrlQuery::operator=(const &lt;a href=&quot;qurlquery#QUrlQuery&quot;&gt;QUrlQuery&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1631f2859ed6088628b25ed932c72086b98ed506" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;quuid&quot;&gt;QUuid&lt;/a&gt; QCborValue::toUuid(const &lt;a href=&quot;quuid&quot;&gt;QUuid&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5750894e824965813015f15da1ce4976e47c8ce" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;quuid&quot;&gt;QUuid&lt;/a&gt; QVariant::toUuid() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcd0c561964f7ec6494b9dcbf7d06a43f172b340" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;quuid&quot;&gt;QUuid&lt;/a&gt; and is lexicographically</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a37d5a30f3cb1d5b4dd2be26c1383f783cbef056" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;quuid&quot;&gt;QUuid&lt;/a&gt; are different; otherwise returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c428c4e6008448f4f3d1ece858276900ca92685" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;quuid&quot;&gt;QUuid&lt;/a&gt; are identical; otherwise returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb65786638810f7982f08f2dde32744a31e2a54d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;quuid&quot;&gt;QUuid&lt;/a&gt; has a different variant field, the return value is determined by comparing the two &lt;a href=&quot;quuid#Variant-enum&quot;&gt;variants&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="851ff0a1fef73c403fc53692d93fb6bb6264b154" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;quuid&quot;&gt;QUuid&lt;/a&gt;. If the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eaad4f25e45bfde4029466912b661a4fbe4eeb7a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;quuid&quot;&gt;QUuid&lt;/a&gt;: a UUID</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15df829a6baedd1686a55f64ac83804fdb9d8521" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;quuid#Variant-enum&quot;&gt;QUuid::Variant&lt;/a&gt; QUuid::variant() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b9d9a9cd1572d9c5783f7be54a5d45aa7d6b9db" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;quuid#Version-enum&quot;&gt;QUuid::Version&lt;/a&gt; QUuid::version() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="926b1fb9fb5a28c36fe766391c6e35bf4a2a02d3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvalidator&quot;&gt;QValidator&lt;/a&gt; is typically used with &lt;a href=&quot;qlineedit&quot;&gt;QLineEdit&lt;/a&gt;, &lt;a href=&quot;qspinbox&quot;&gt;QSpinBox&lt;/a&gt; and &lt;a href=&quot;qcombobox&quot;&gt;QComboBox&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1888a72d0faa97143f4a1bd1e59dd7dc78cd0c5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvalidator#fixup&quot;&gt;fixup&lt;/a&gt;() is provided for validators that can repair some user errors. The default implementation does nothing. &lt;a href=&quot;qlineedit&quot;&gt;QLineEdit&lt;/a&gt;, for example, will call &lt;a href=&quot;qvalidator#fixup&quot;&gt;fixup&lt;/a&gt;() if the user presses Enter (or Return) and the content is not currently valid. This allows the &lt;a href=&quot;qvalidator#fixup&quot;&gt;fixup&lt;/a&gt;() function the opportunity of performing some magic to make an &lt;a href=&quot;qvalidator#State-enum&quot;&gt;Invalid&lt;/a&gt; string &lt;a href=&quot;qvalidator#State-enum&quot;&gt;Acceptable&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e748c6d44896d5a9c4c25c0c4cb505999801fce" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvalidator#validate&quot;&gt;validate&lt;/a&gt;() must be implemented by every subclass. It returns &lt;a href=&quot;qvalidator#State-enum&quot;&gt;Invalid&lt;/a&gt;, &lt;a href=&quot;qvalidator#State-enum&quot;&gt;Intermediate&lt;/a&gt; or &lt;a href=&quot;qvalidator#State-enum&quot;&gt;Acceptable&lt;/a&gt; depending on whether its argument is valid (for the subclass's definition of valid).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="079a987b563576f8e35e338f1003d6ae79a60269" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvalue3daxis&quot;&gt;QValue3DAxis&lt;/a&gt; *Q3DScatter::axisZ() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ebef1e50e4ccdd2120110917a9438b61264596d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; &amp;amp;QQmlPropertyMap::operator[](const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01c508c29d47b495f51900412798019f0c7f2559" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; Object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="342f8ad921775395dccbb706a1b1b3eb16c7e185" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QAbstractTexture::handle() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46c8f5181ed95339d3f0a7a9477b90f44c17154f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QAccessibleValueChangeEvent::value() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60f9705b95370a022b886d522168c9e9d53e8420" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QAction::data() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2e228ef9653a5c3f0728d807afb9b6113d837fa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QAndroidIntent::extraVariant(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16f9cb1ae13a30418761a1359417e09c20437fdb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QAndroidParcel::readVariant() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5e7efd93f420e9adaf8e5c6ddc624227867d2b8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QAspectEngine::executeCommand(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b9f8bfa70176ee266a7c408da0cc17806ec4c10" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QAssociativeIterable::value(const &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f59d3d70f298b559dfc3d3e552bf9a7c033d8abe" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QAudioEncoderSettings::encodingOption(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94ae4a6b86dd07326fd1c3cb444be63e65ae55a7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QAuthenticator::option(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b00d165571ae80a7e5da4adcd4bc12466fa40b7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QAxBase::asVariant() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27a4a66e693985d9711cfa3e4c1ea707f7db5886" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QAxBase::dynamicCall(const char *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8b922532cfd8c946fab5b1bcb54a89c448c48a9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QAxScript::call(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b790a4b2b63d784c75aa82125f326df25ae6a68c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QAxScriptManager::call(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33038075ee0c5dde265fb6c07b4c473c6e88342b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QBitmap::operator QVariant() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fee94441c2fc9c3bcb80a3c628b61b856af93623" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QBluetoothServiceInfo::attribute(&lt;a href=&quot;#quint16-typedef&quot;&gt;quint16&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed56960b4b4c6e4f76c85a01ea672432faa282e3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QBluetoothTransferRequest::attribute(&lt;a href=&quot;qbluetoothtransferrequest#Attribute-enum&quot;&gt;QBluetoothTransferRequest::Attribute&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39ec8680c84f0eec72a78891b62e948e1f74b78f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QBrush::operator QVariant() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="816b7b6e6ba87f44902946251ac75358cc3b7f87" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QCanBusDevice::configurationParameter(int</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d65b585ad4fe70f463a6c088ac17253afe30113" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QCborValue::toVariant() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="056ce3561be6d52f5ec73806be8ecef501c67420" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QColor::operator QVariant() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c499f9fa5971d46c3b1e4fb40d8bc07d3504427" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QComboBox::itemData(int</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d4e167330034969b3f825b5d0821b78338af6c4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QCursor::operator QVariant() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8142ba295bcc90d702571a0504630dc71a8dd51" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QDBusArgument::asVariant() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e11f0a959f8ef344e0f28f4c21680ae3c923d75c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QDBusPendingReply::argumentAt(int</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1639610c5a3a81ec763924b4c333c6d12ef85429" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QDBusVariant::variant() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e55a7c91a6c83046ef47b29f0068cd58222b68b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QDynamicPropertyUpdatedChange::value() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18edf97e9cf206bc5db1188f66e6ba8450d8a103" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QFileSystemModel::myComputer(int</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a017adb970d282598d90274232cefbe740fc182" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QFont::operator QVariant() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5f3538c0341741dd1527f3f9b66e07917c4db4e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QGraphicsItem::data(int</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aed05e518158fd74e535d53034dbdcf5df0b7afc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QHelpEngineCore::customValue(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0552641d4feb15efc5597ae46b1734c6c2ad737e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QIcon::operator QVariant() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00b8c4deb1049427c2f58540d4a5b6ff24f224bf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QImage::operator QVariant() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d2fb40d971ff682f3f88fe586174631cafa7377" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QImageEncoderSettings::encodingOption(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65e11b7366377472c425dc700e87620a361b7e4b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QInputMethodQueryEvent::value(&lt;a href=&quot;qt#InputMethodQuery-enum&quot;&gt;Qt::InputMethodQuery&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19076d173ae8cd853555ea01c4af41ce26423c16" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QJSValue::toVariant() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35e050fb1aae06d712b1e55dcd42c7a56459072c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QJsonDocument::toVariant() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76206a7ee0ad56e8a25a1896dc7e196d0fee8ef3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QJsonValue::toVariant() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17f0d02e739bafb1cf2083d551c2b67524215c52" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QKeySequence::operator QVariant() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a036cb6452bf1eb1ae79f4d744b903838625ec23" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QMatrix4x4::operator QVariant() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75dd319bdb638611ab6c10fe2fc5da5dc9e52693" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QMatrix::operator QVariant() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="503ab007542e360262d0caad16899a8855e009ec" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QMediaObject::metaData(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70df342f8e5ff36c6f99741546cd2d3158e87f78" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QMediaRecorder::metaData(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afe4e920d92dbb07e0ee035ce51f962efd8ca387" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QMetaProperty::read(const &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c00d3449900db2fdfa94012b1a2d87818c27efd5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QMetaProperty::readOnGadget(const void *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a94baec39835ba96f7d0a61734e56eaa2e1e827c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QMimeData::colorData() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="255e8e98d67f103c6ab719d81b00315b989cd503" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QMimeData::imageData() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f69855a7944831a44386f448ac3b68d3ea59eb2a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QModbusDevice::connectionParameter(int</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf39d5aab82f4b7feb8058d286ecabd0f382e97a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QModelIndex::data(int</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d284141ab7c89192b3e49eb7a4d116ebd8e01e08" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QNearFieldTarget::requestResponse(const QNearFieldTarget::RequestId &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7546a7dea94cdbeecebcf800c0e18dcf37855150" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QNetworkProxy::header(&lt;a href=&quot;qnetworkrequest#KnownHeaders-enum&quot;&gt;QNetworkRequest::KnownHeaders&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a67f6c35b6973429a76cece103f3fc3dab82bb14" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QNetworkReply::attribute(&lt;a href=&quot;qnetworkrequest#Attribute-enum&quot;&gt;QNetworkRequest::Attribute&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83108ebce114fd05af59aad85819214cbb8f994c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QNetworkReply::header(&lt;a href=&quot;qnetworkrequest#KnownHeaders-enum&quot;&gt;QNetworkRequest::KnownHeaders&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f65d7ee6b50598200c80020cf2c668fba622243" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QNetworkRequest::attribute(&lt;a href=&quot;qnetworkrequest#Attribute-enum&quot;&gt;QNetworkRequest::Attribute&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a3081a074db3cb12b11ed87084592c1a86fbf65" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QNetworkRequest::header(&lt;a href=&quot;qnetworkrequest#KnownHeaders-enum&quot;&gt;QNetworkRequest::KnownHeaders&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="441a83d4930843f52e6b16190190e665bbd26c4a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QNetworkSession::sessionProperty(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03de96c7ef3ce8ed197af0aaa06ebe388904a0a6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QNodeCommand::data() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ce9e5a6dfc1b80faf0d618c9396a1db33c578f5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QOAuth1Signature::take(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75796581320c8725c59f78bbdbccce8abb1d6ddf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QOAuth1Signature::value(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f185a74b59e1c65823b379fac1ee14928cf04578" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QObject::property(const char *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e1af5f337146a768a1f7eb60145286346481463" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QOpenGLContext::nativeHandle() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cb9f9c7076d65db14ed820cd79f6010f315920a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QPalette::operator QVariant() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4196ce2446bee88b392ae1d1a29b9e2fcca912a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QPen::operator QVariant() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1355794eac7e7af41f7ab76ba8638d3d81afc68" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QPersistentModelIndex::data(int</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88df909f2b06a2e06c4b3a614fd0eb3abfa1c69f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QPixmap::operator QVariant() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c3ad7720cc192ad37d8580cf9a98756aeba3478" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QPlaceContentRequest::contentContext() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="137bac1e0eb37f9c180ed44fc597f6e1457a0628" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QPlaceSearchRequest::searchContext() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4422c982a44abfee89fa2b7e230a4a7e87c18b0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QPolygon::operator QVariant() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d1784ad44c70979614ff3d1d3a2f298ea772aa9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QPolygonF::operator QVariant() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a7e896147ff0ccc0bca87461f815e0ac4fb97e5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QPropertyUpdatedChange::value() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="044d8e5c8e502111eba210c514738fb54586c1d7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QPropertyValueAddedChange::addedValue() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04924dc0f064e6cb53b6c024c1b1eded801a2b05" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QPropertyValueRemovedChange::removedValue() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65c2feca3c36956a1aac839a18d4225f0c549c48" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QQmlContext::contextProperty(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db8c12c7aa77752c811337bbd221354aa12948a8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QQmlExpression::evaluate(bool *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a59062e87998ab9a541006ac82e7f040c30883aa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QQmlProperty::read() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4a230b696918120ab1758c7f20dd069679003ea" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QQmlPropertyMap::operator[](const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be0e28f599388125fa99a63ca0ba3da9700abda2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QQmlPropertyMap::value(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db51312fca1511997403d4649799d5a35cf67423" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QQuaternion::operator QVariant() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5af5ef3467a73dde22bae6fc3699d51c7f331479" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QRegion::operator QVariant() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c553d3756d1db2ef29e6e530ffa319aed44f0722" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QScrollerProperties::scrollMetric(&lt;a href=&quot;qscrollerproperties#ScrollMetric-enum&quot;&gt;QScrollerProperties::ScrollMetric&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="817278977914f5f3465b16242480e78e27409379" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QScxmlEvent::data() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="918c0c24fd95dc3c60bf037f072bbbe590020f3b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QSensorReading::value(int</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d5976210e7228e5c554e6a45edf8325ed3b5f83" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QSequentialIterable::at(int</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="603ad50733c51c205b992205b33af637ac48678f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QSettings::value(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8304c54e9ea8a53ab30e44884e8717722a68a5ce" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QSizePolicy::operator QVariant() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fb801c264d01b87a6f837031e4744a0494fa8fc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QSqlField::defaultValue() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27d9ec2bcc5bc98e3c7e6cbc7d841ba45ed91ae4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QSqlField::value() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="833d40ae33353e007f2c4b9e8b921cb9bdfdc5a2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QSqlQuery::boundValue(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86b6689909b94b919acf223323f5f3c64caf844c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QSqlQuery::boundValue(int</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9aabd7dd18fdcf912c6de8d8ab24a243aab6ff1b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QSqlQuery::lastInsertId() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff65c0f74f418ab44e6b7b4d2e3b98d01adbea4f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QSqlQuery::value(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f12cf6e8c31dfa98a3ef40fbcad6e447d67c3d56" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QSqlQuery::value(int</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbd2c2575be6b3a8262b77d16d4edbc9714ad570" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QSqlRecord::value(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="364c1f3e123d60c6cac13ad5bd64d09e78e16956" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QSqlRecord::value(int</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed26450feadc5fcf8acb11d2cfc01960fbe2ff47" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QSslCertificateExtension::value() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e84938d0572df0174e355e51e2b01e74862f8001" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QStyleHintReturnVariant::variant</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65942d519ed0611c6b2886597bcada5bd327c6eb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QTabBar::tabData(int</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91f88a4f6fa80ed8177b7fca369402a506fa66e3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QTextCharFormat::fontFamilies() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55fcb16fb67df62e2aecee3d0ca54105590f0d7f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QTextCharFormat::fontStyleName() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cd444aafd225293a00bee04de571d4aa2b1a472" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QTextDocument::resource(int</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37cefff5d486aa1275526826e5c3e39dd80fcfea" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QTextFormat::operator QVariant() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="074122122dde3312d7f9d159e683cc19abbba435" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QTextFormat::property(int</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92581277b7127c38fbf65fa4b3d202c89579909b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QTextLength::operator QVariant() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e7b478e6909823a59729f963dc465f3ed9fa723" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QTransform::operator QVariant() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94b58c0be1e00c4eb93255c132f11b30bb81ffb0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QVariantAnimation::keyValueAt(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9be145ccc1de3ed740f37d7cf538270de973fc9a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QVector2D::operator QVariant() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52eab62f6b34445b1e16eca81a2733d4a552c307" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QVector3D::operator QVariant() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2406a42e3e8949ae52930a5a8ad36e920b1022f2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QVector4D::operator QVariant() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef3d7806738119c2133d57411a7460d570514200" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QVideoEncoderSettings::encodingOption(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="644a68e3a323387833eedd46e0961935e4ea42d3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QVideoFrame::handle() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41b56e25d972a27548ff74a18d6e2c70a397a026" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QVideoFrame::metaData(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab3e87645e83d200ef6406cb783f461f36d11136" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QVideoSurfaceFormat::property(const char *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02feeb701ac36923de80a69f9d2a48267a547a80" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QWizard::field(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9029b5cb962a9fd7e32ef46801b9d9b5f2aa8671" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QXmlItem::toAtomicValue() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2894ce7f6274482765f4fcda6b305eb53a81955a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; also supports the notion of null values, where you can have a defined type with no value set. However, note that &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; types can only be cast when they have had a value set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ac14543c1dd491d8f7d5b10ff4420c15e665deb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; can be extended to support other types than those mentioned in the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qvariant-obsolete.html#Type-enum&quot;&gt;Type&lt;/a&gt; enum. See &lt;a href=&quot;custom-types#&quot;&gt;Creating Custom Qt Types&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5f4e5455e4c370a043d7100a8331678a4143ef0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4633166c392cc5d15c440ae149caa6cc5cd3b0d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; type returned</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ca40029def4c08eb2f67a2ff8269203faa7b97a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; uses the equality operator of the &lt;a href=&quot;qvariant#type&quot;&gt;type&lt;/a&gt;() it contains to check for equality. &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; will try to &lt;a href=&quot;qvariant#convert&quot;&gt;convert&lt;/a&gt;()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d16e76d52cfedaf645933fa4b25580c94f8112ac" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt;&amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt;&amp;amp;</target>
        </trans-unit>
        <trans-unit id="992d147e2b860d1e1ee793a8f9b42724965b7761" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant#QVariant&quot;&gt;QVariant&lt;/a&gt; &amp;amp;QVariant::operator=(&lt;a href=&quot;qvariant#QVariant&quot;&gt;QVariant&lt;/a&gt; &amp;amp;&amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c93b31c3b95704c62355e6d24aa5602648668cc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant#QVariant&quot;&gt;QVariant&lt;/a&gt; &amp;amp;QVariant::operator=(const &lt;a href=&quot;qvariant#QVariant&quot;&gt;QVariant&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4577272d3126430aa18daba517a55c221bd7206" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant#QVariantHash-typedef&quot;&gt;QVariantHash&lt;/a&gt; QAuthenticator::options() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d28431b7c53247dc98cc90ce106062380c7413ec" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant#QVariantHash-typedef&quot;&gt;QVariantHash&lt;/a&gt; QCborMap::toVariantHash() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a51f235c8c8ad5a62f5eb58c5f1edba3d536bf6d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant#QVariantHash-typedef&quot;&gt;QVariantHash&lt;/a&gt; QJsonObject::toVariantHash() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b8886f543c6ccdfef3c282a4e820f47b5f3b0c2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant#QVariantList-typedef&quot;&gt;QVariantList&lt;/a&gt; (same as &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt;&amp;gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3646322678ce71ace9e874257c600e9b7579b2f4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant#QVariantList-typedef&quot;&gt;QVariantList&lt;/a&gt; QCborArray::toVariantList() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60a8fd3de09277eacf07c60b3f3f959c4b020430" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant#QVariantList-typedef&quot;&gt;QVariantList&lt;/a&gt; QJsonArray::toVariantList() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1728aa8db0bd27c828d379d05f979c13e1011e5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant#QVariantList-typedef&quot;&gt;QVariantList&lt;/a&gt; QVirtualKeyboardTrace::channelData(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5061d3ffb1641969bd177177b1ef5d37b239724" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant#QVariantList-typedef&quot;&gt;QVariantList&lt;/a&gt; QVirtualKeyboardTrace::points(int</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d84459ec76d96e02c5b09eba49ced8fe84b6ba1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant#QVariantMap-typedef&quot;&gt;QVariantMap&lt;/a&gt; QAbstractOAuth::extraTokens() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cc220821c75ac239daa8fa5a95f6ba3774a66c4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant#QVariantMap-typedef&quot;&gt;QVariantMap&lt;/a&gt; QAudioEncoderSettings::encodingOptions() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cb7ee91ec62ab1eff0177cc250573f2073d4b51" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant#QVariantMap-typedef&quot;&gt;QVariantMap&lt;/a&gt; QCborMap::toVariantMap() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="348e621c213e4d5e69a5a099adf18631e0e14291" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant#QVariantMap-typedef&quot;&gt;QVariantMap&lt;/a&gt; QGeoAreaMonitorInfo::notificationParameters() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bff0dd8bd9151afe6bef2e8c592250d2bb6a1a3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant#QVariantMap-typedef&quot;&gt;QVariantMap&lt;/a&gt; QGeoLocation::extendedAttributes() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6366748edcf0122e2dd119975f4d630b1564119b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant#QVariantMap-typedef&quot;&gt;QVariantMap&lt;/a&gt; QGeoManeuver::extendedAttributes() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f17dc369ca6ce97b94e8234e652a122bcaac70f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant#QVariantMap-typedef&quot;&gt;QVariantMap&lt;/a&gt; QGeoRoute::extendedAttributes() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53c8550ce67a90ff99bf8ce43e956336b8f17c27" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant#QVariantMap-typedef&quot;&gt;QVariantMap&lt;/a&gt; QGeoRouteRequest::extraParameters() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49a9c654f00ba8d09341ff389a17b5dc788b59f7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant#QVariantMap-typedef&quot;&gt;QVariantMap&lt;/a&gt; QImageEncoderSettings::encodingOptions() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74aa83a49ef42a3960c75d8bab87c72306739d4f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant#QVariantMap-typedef&quot;&gt;QVariantMap&lt;/a&gt; QJsonObject::toVariantMap() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1f7c2de948a761d6a25bf13524c52c9ee944570" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant#QVariantMap-typedef&quot;&gt;QVariantMap&lt;/a&gt; QOAuth1Signature::parameters() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b9c63d9014d6b53553cacfd39c319550700f165" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant#QVariantMap-typedef&quot;&gt;QVariantMap&lt;/a&gt; QPlaceIcon::parameters() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5eba78889febc076de5f7bb9079e9a44ad4d48be" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant#QVariantMap-typedef&quot;&gt;QVariantMap&lt;/a&gt; QPlaceMatchRequest::parameters() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56b25e76d5d6d8fc6c67df9e65c5b76fd5d4aff1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant#QVariantMap-typedef&quot;&gt;QVariantMap&lt;/a&gt; QVideoEncoderSettings::encodingOptions() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ed40da8cbd750e8af450b521b9d478d6211afce" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariant#QVariantMap-typedef&quot;&gt;QVariantMap&lt;/a&gt; QVideoFrame::availableMetaData() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ac0cf4d77b0926186da680909a7c7c8a63bf82b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariantanimation&quot;&gt;QVariantAnimation&lt;/a&gt; calls the virtual &lt;a href=&quot;qvariantanimation#updateCurrentValue&quot;&gt;updateCurrentValue&lt;/a&gt;() function when the current value changes. This is particularly useful for subclasses that need to track updates. For example, &lt;a href=&quot;qpropertyanimation&quot;&gt;QPropertyAnimation&lt;/a&gt; uses this function to animate Qt &lt;a href=&quot;properties#&quot;&gt;properties&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f21f6f09e6d0e0432f685efb2460f9dd6d411a76" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariantanimation&quot;&gt;QVariantAnimation&lt;/a&gt; emits this signal whenever the current</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9509daa4651667b2933139c15353d9c3b1c5ab12" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariantanimation&quot;&gt;QVariantAnimation&lt;/a&gt; will use the &lt;a href=&quot;qeasingcurve#valueForProgress&quot;&gt;QEasingCurve::valueForProgress&lt;/a&gt;() to transform the &quot;normalized progress&quot; (&lt;a href=&quot;qabstractanimation#currentTime-prop&quot;&gt;currentTime&lt;/a&gt; / &lt;a href=&quot;qabstractanimation#totalDuration&quot;&gt;totalDuration&lt;/a&gt;) of the animation into the effective progress actually used by the animation. It is this effective progress that will be the progress when &lt;a href=&quot;qvariantanimation#interpolated&quot;&gt;interpolated&lt;/a&gt;() is called. Also, the steps in the &lt;a href=&quot;qvariantanimation#keyValues&quot;&gt;keyValues&lt;/a&gt; are referring to this effective progress.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="675826fb1cfc63be0f9d14dc9e577dd9e3033c8c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvariantanimation#KeyValues-typedef&quot;&gt;QVariantAnimation::KeyValues&lt;/a&gt; QVariantAnimation::keyValues() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="259bdacf85f181d0ae44adeb392316b94ee9390f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvarlengtharray&quot;&gt;QVarLengthArray&lt;/a&gt; doesn't initialize the memory if the value is a basic type. (&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt; always does.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a5b39a745f851049f22bb52806e7a38c703f7a2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvarlengtharray&quot;&gt;QVarLengthArray&lt;/a&gt; is an attempt to work around this gap in the C++ language. It allocates a certain number of elements on the stack, and if you resize the array to a larger size, it automatically uses the heap instead. Stack allocation has the advantage that it is much faster than heap allocation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="598e69e36dc7a13533f1a3eb288961807355129a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvarlengtharray&quot;&gt;QVarLengthArray&lt;/a&gt;&amp;lt;T, Prealloc&amp;gt; provides a low-level variable-length array. It can be used instead of &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt; in places where speed is particularly important.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c251a12feb3b9d38be4125ce760784cb58e66743" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvarlengtharray&quot;&gt;QVarLengthArray&lt;/a&gt;'s API is much more low-level and it lacks some of &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;'s functionality.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f25e1a83fbe4f13cac5d63ded12e590f6da1a4f5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvarlengtharray&quot;&gt;QVarLengthArray&lt;/a&gt;'s value type must be an &lt;a href=&quot;containers#assignable-data-type&quot;&gt;assignable data type&lt;/a&gt;. This covers most data types that are commonly used, but the compiler won't let you, for example, store a &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; as a value; instead, store a &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; *.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2d67421b054a51a55d92c264d241d57b3ecdc45" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvarlengtharray&quot;&gt;QVarLengthArray&lt;/a&gt;, like &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;, provides a resizable array data structure. The main differences between the two classes are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b25db0a76c30acc9ea5fb4880f27d75fa47b997b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvarlengtharray#QVarLengthArray&quot;&gt;QVarLengthArray&lt;/a&gt;&amp;lt;T, Prealloc&amp;gt; &amp;amp;QVarLengthArray::operator&amp;lt;&amp;lt;(T &amp;amp;&amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03f223f4134667dab4a4487f8422665a5d036172" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvarlengtharray#QVarLengthArray&quot;&gt;QVarLengthArray&lt;/a&gt;&amp;lt;T, Prealloc&amp;gt; &amp;amp;QVarLengthArray::operator&amp;lt;&amp;lt;(const T &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4c02dd57e2ea17b3845b9ef9e02439837925064" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvarlengtharray#QVarLengthArray&quot;&gt;QVarLengthArray&lt;/a&gt;&amp;lt;T, Prealloc&amp;gt; &amp;amp;QVarLengthArray::operator+=(T &amp;amp;&amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="162d3c94f77cbfa5c4069a9e206898048d611e13" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvarlengtharray#QVarLengthArray&quot;&gt;QVarLengthArray&lt;/a&gt;&amp;lt;T, Prealloc&amp;gt; &amp;amp;QVarLengthArray::operator+=(const T &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="499b4008e87387c72e2f94b96b79b4c978c7b72e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvarlengtharray#QVarLengthArray&quot;&gt;QVarLengthArray&lt;/a&gt;&amp;lt;T, Prealloc&amp;gt; &amp;amp;QVarLengthArray::operator=(const &lt;a href=&quot;qvarlengtharray#QVarLengthArray&quot;&gt;QVarLengthArray&lt;/a&gt;&amp;lt;T, Prealloc&amp;gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99ebc31c65292e4e210ed12e5bb9524300db0bd1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvarlengtharray#QVarLengthArray&quot;&gt;QVarLengthArray&lt;/a&gt;&amp;lt;T, Prealloc&amp;gt; &amp;amp;QVarLengthArray::operator=(std::initializer_list&amp;lt;T&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98394f18cb20dda7127946e72b7bea8729cb25fd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvarlengtharray#const_iterator-typedef&quot;&gt;QVarLengthArray::const_iterator&lt;/a&gt; QVarLengthArray::begin() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a87d28c1dd99a7d8bd71514fb2cd2aa2ef3fc2ba" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvarlengtharray#const_iterator-typedef&quot;&gt;QVarLengthArray::const_iterator&lt;/a&gt; QVarLengthArray::cbegin() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa307e8d6b5f388230644b9d406ab9b6ef554e8b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvarlengtharray#const_iterator-typedef&quot;&gt;QVarLengthArray::const_iterator&lt;/a&gt; QVarLengthArray::cend() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="676e1aae7c69329f58a4baf35f7149adca0d7983" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvarlengtharray#const_iterator-typedef&quot;&gt;QVarLengthArray::const_iterator&lt;/a&gt; QVarLengthArray::constBegin() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="966057951f7ba2e037ae8969f237d85574322fd2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvarlengtharray#const_iterator-typedef&quot;&gt;QVarLengthArray::const_iterator&lt;/a&gt; QVarLengthArray::constEnd() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="297d07a7ec650a41f8cbcc5deb67b16442b015bb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvarlengtharray#const_iterator-typedef&quot;&gt;QVarLengthArray::const_iterator&lt;/a&gt; QVarLengthArray::end() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e4b47a6b08557e8d09f2cde063fd9ee2d915864" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvarlengtharray#const_reverse_iterator-typedef&quot;&gt;QVarLengthArray::const_reverse_iterator&lt;/a&gt; QVarLengthArray::crbegin() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c09117656a6ec1c6d1a325f72851466354792ef0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvarlengtharray#const_reverse_iterator-typedef&quot;&gt;QVarLengthArray::const_reverse_iterator&lt;/a&gt; QVarLengthArray::crend() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26344f44d5c0b73a1a2f2cee55e1223e5f08a512" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvarlengtharray#const_reverse_iterator-typedef&quot;&gt;QVarLengthArray::const_reverse_iterator&lt;/a&gt; QVarLengthArray::rbegin() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c311064b54e8f8cb3b4ca7097b1edbac1fb2fa71" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvarlengtharray#const_reverse_iterator-typedef&quot;&gt;QVarLengthArray::const_reverse_iterator&lt;/a&gt; QVarLengthArray::rend() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aac7b92c45e5741d5c8332ed816cf8542c40948b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvarlengtharray#iterator-typedef&quot;&gt;QVarLengthArray::iterator&lt;/a&gt; QVarLengthArray::begin()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6ea5246df1011d5cbe30bff037d05fa2a18935a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvarlengtharray#iterator-typedef&quot;&gt;QVarLengthArray::iterator&lt;/a&gt; QVarLengthArray::end()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0baf133a59dc0bcaef5f65a5f925d3e382623d42" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvarlengtharray#iterator-typedef&quot;&gt;QVarLengthArray::iterator&lt;/a&gt; QVarLengthArray::erase(&lt;a href=&quot;qvarlengtharray#const_iterator-typedef&quot;&gt;QVarLengthArray::const_iterator&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="065657e20602bbbeef5777f36f90b1f0280436d7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvarlengtharray#iterator-typedef&quot;&gt;QVarLengthArray::iterator&lt;/a&gt; QVarLengthArray::insert(&lt;a href=&quot;qvarlengtharray#const_iterator-typedef&quot;&gt;QVarLengthArray::const_iterator&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e14328f9be554dd0160466e9024a7c3680859ff" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvarlengtharray#reverse_iterator-typedef&quot;&gt;QVarLengthArray::reverse_iterator&lt;/a&gt; QVarLengthArray::rbegin()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6e57d86bade603a197ab9dbfc7f91399a627043" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvarlengtharray#reverse_iterator-typedef&quot;&gt;QVarLengthArray::reverse_iterator&lt;/a&gt; QVarLengthArray::rend()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c124046e4c8a66d74ed64cf71f9ba7cadadb989" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt; does</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a86146b74e511983b11109c3855ee913816bce3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt; has both &lt;a href=&quot;containers#java-style-iterators&quot;&gt;Java-style iterators&lt;/a&gt; and &lt;a href=&quot;containers#stl-style-iterators&quot;&gt;STL-style iterators&lt;/a&gt;. The Java-style iterators are more high-level and easier to use than the STL-style iterators; on the other hand, they are slightly less efficient.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8e8eabacdb16d098a1f6d090ac94ddd55c3b99d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt; provides both &lt;a href=&quot;containers#stl-style-iterators&quot;&gt;STL-style iterators&lt;/a&gt; and &lt;a href=&quot;containers#java-style-iterators&quot;&gt;Java-style iterators&lt;/a&gt;. The STL-style const iterator is simply a typedef for &quot;const T *&quot; (pointer to const T).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f19d1d97b02791ebd5b84d0d17c9a2c0df007b25" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt; provides both &lt;a href=&quot;containers#stl-style-iterators&quot;&gt;STL-style iterators&lt;/a&gt; and &lt;a href=&quot;containers#java-style-iterators&quot;&gt;Java-style iterators&lt;/a&gt;. The STL-style non-const iterator is simply a typedef for &quot;T *&quot; (pointer to T).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a078ab9d2125fcf780c32dad58cd6c3abc3007be" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt; provides these basic functions to add, move, and remove items: &lt;a href=&quot;qvector#insert&quot;&gt;insert&lt;/a&gt;(), &lt;a href=&quot;qvector#replace&quot;&gt;replace&lt;/a&gt;(), &lt;a href=&quot;qvector#remove&quot;&gt;remove&lt;/a&gt;(), &lt;a href=&quot;qvector#prepend&quot;&gt;prepend&lt;/a&gt;(), &lt;a href=&quot;qvector#append&quot;&gt;append&lt;/a&gt;(). With the exception of &lt;a href=&quot;qvector#append&quot;&gt;append&lt;/a&gt;() and &lt;a href=&quot;qvector#replace&quot;&gt;replace&lt;/a&gt;(), these functions can be slow (&lt;a href=&quot;containers#linear-time&quot;&gt;linear time&lt;/a&gt;) for large vectors, because they require moving many items in the vector by one position in memory. If you want a container class that provides fast insertion/removal in the middle, use &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; or &lt;a href=&quot;qlinkedlist&quot;&gt;QLinkedList&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8265c1a4de94bdaa2a47e5c52ae34527f3a2414c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt; should be your default first choice. &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;T&amp;gt; will usually give better performance than &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;T&amp;gt;, because &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;T&amp;gt; always stores its items sequentially in memory, where &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;T&amp;gt; will allocate its items on the heap unless &lt;code&gt;sizeof(T) &amp;lt;= sizeof(void*)&lt;/code&gt; and T has been declared to be either a &lt;code&gt;Q_MOVABLE_TYPE&lt;/code&gt; or a &lt;code&gt;Q_PRIMITIVE_TYPE&lt;/code&gt; using &lt;a href=&quot;qtglobal#Q_DECLARE_TYPEINFO&quot;&gt;Q_DECLARE_TYPEINFO&lt;/a&gt;. See the Pros and Cons of Using QList for an explanation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e56f664b605ba6f414187591cfb562280662471" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt; stores its items in a vector (array). Typically, vectors are created with an initial size. For example, the following code constructs a &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt; with 200 elements:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ff2897af7764006fb0403f78054cd8630323f5f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt; uses 0-based indexes, just like C++ arrays. To access the item at a particular index position, you can use operator[](). On non-const vectors, operator[]() returns a reference to the item that can be used on the left side of an assignment:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dfef0cfc8dbf99a283abd3d2059f7d8827ecb08" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt; uses &lt;a href=&quot;implicit-sharing#&quot;&gt;implicit sharing&lt;/a&gt; as a memory optimization. &lt;a href=&quot;qvarlengtharray&quot;&gt;QVarLengthArray&lt;/a&gt; doesn't provide that feature; however, it usually produces slightly better performance due to reduced overhead, especially in tight loops.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a44c540fc094e11b63d45d3380988c72715790e7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;&amp;gt; QPainterPathStroker::dashPattern() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c0c52867757e72d277e964e82d971c30f3fedad" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;&amp;gt; QPen::dashPattern() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a334fa0526d76de9e35d79c4baaf3d9790ef3bc8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;&lt;a href=&quot;#quint16-typedef&quot;&gt;quint16&lt;/a&gt;&amp;gt; QBluetoothDeviceInfo::manufacturerIds() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d17578b545d90a5f64566a059bd3c7695f050684" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;&lt;a href=&quot;#quint16-typedef&quot;&gt;quint16&lt;/a&gt;&amp;gt; QModbusDataUnit::values() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71f6a933a0ba88519ec55dc4a0fe76275936750f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;&lt;a href=&quot;#quint32-typedef&quot;&gt;quint32&lt;/a&gt;&amp;gt; QRawFont::glyphIndexesForString(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8a97069cc5ea64a026312501a6b8dadb654a6f5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;&lt;a href=&quot;#uchar-typedef&quot;&gt;uchar&lt;/a&gt;&amp;gt; *QCustom3DVolume::createTextureData(const &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;&lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; *&amp;gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc9a1ad0d2d6a3740d7d0b9e1514f973cb114c3b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;&lt;a href=&quot;qabstracttextdocumentlayout-selection&quot;&gt;QAbstractTextDocumentLayout::Selection&lt;/a&gt;&amp;gt; PaintContext::selections</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a861749ab46254e998569f275f8657f14b5d90a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt;&amp;gt; QWebEngineHttpRequest::headers() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17034b7cfaa5fcbc928e7b03c0e1a1e5dd1bb50a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;&lt;a href=&quot;qcanbusframe&quot;&gt;QCanBusFrame&lt;/a&gt;&amp;gt; QCanBusDevice::readAllFrames()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="112afee8566f6a9e7cb2a438e5ff7020fec838a4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;&lt;a href=&quot;qcborvalue&quot;&gt;QCborValue&lt;/a&gt;&amp;gt; QCborMap::keys() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7bbc0da22ef7ea9fe5cd5a876c30237b61b1a83" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;&lt;a href=&quot;qcolor#QRgb-typedef&quot;&gt;QRgb&lt;/a&gt;&amp;gt; QImage::colorTable() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aeecbca6414f044d6ba0c4d74ff130267e5ae050" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;&lt;a href=&quot;qhelpsearchresult&quot;&gt;QHelpSearchResult&lt;/a&gt;&amp;gt; QHelpSearchEngine::searchResults(int</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4cd5d563c32a6f9201b089d8bcdc92a607f95ca" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;&lt;a href=&quot;qhstspolicy&quot;&gt;QHstsPolicy&lt;/a&gt;&amp;gt; QNetworkAccessManager::strictTransportSecurityHosts() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6cab5994df5c72b6cba7b316c11d68a76c4288c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;&lt;a href=&quot;qlocale&quot;&gt;QLocale&lt;/a&gt;&amp;gt; QTextToSpeech::availableLocales() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19a397272f63ab6ec04fc0dc9f3cd59848acc4a9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;&lt;a href=&quot;qocspresponse&quot;&gt;QOcspResponse&lt;/a&gt;&amp;gt; QSslSocket::ocspResponses() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b1d56cba13f47f9478ec7c44f2a7b5323eabd3e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt;&amp;gt; QEasingCurve::toCubicSpline() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3191fe541cdf3587856df4152fac9130f342a736" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt;&amp;gt; QRawFont::advancesForGlyphIndexes(const &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;&lt;a href=&quot;#quint32-typedef&quot;&gt;quint32&lt;/a&gt;&amp;gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="146daa6aa45971f135b5f40b4c2445762197f608" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt;&amp;gt; QXYSeries::pointsVector() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd5d7a2738ff587e08ef5b3780e401f0750d10e8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt;&amp;gt; TouchPoint::rawScreenPositions() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27bd27e00913d1268c3ef534cd44d11850757b4b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;&lt;a href=&quot;qscxmlerror&quot;&gt;QScxmlError&lt;/a&gt;&amp;gt; QScxmlCompiler::errors() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b3fb1d885b4d36ef4a3f2d9867a02ec61648373" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt;&amp;gt; QOpenGLFramebufferObject::sizes() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7778214883f83f218b4180faf0e0c73e76d0261b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;&lt;a href=&quot;qsslcertificate&quot;&gt;QSslCertificate&lt;/a&gt;&amp;gt; QWebEngineClientCertificateSelection::certificates() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc28a76e4bd09f6cf5fe01b53b214d93d4d89100" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;&lt;a href=&quot;qsslcertificate&quot;&gt;QSslCertificate&lt;/a&gt;&amp;gt; QWebEngineClientCertificateStore::certificates() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b6a9732236e84d18e7a914db7324ba5cb8c6bb5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;&lt;a href=&quot;qsslellipticcurve&quot;&gt;QSslEllipticCurve&lt;/a&gt;&amp;gt; QSslConfiguration::ellipticCurves() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08e97ba3ab655224e773dd5f0b0cbd42427a73fe" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;&lt;a href=&quot;qsslerror&quot;&gt;QSslError&lt;/a&gt;&amp;gt; QDtls::peerVerificationErrors() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00daee547b3ef46eefd911d79bb3d7d2d12793a0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;&amp;gt;</source>
          <target state="translated">&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="97f6dad44fe7dadf4103348235bd4eb7d8a5fbbd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;&lt;a href=&quot;qstringref&quot;&gt;QStringRef&lt;/a&gt;&amp;gt; QString::splitRef(&lt;a href=&quot;qchar&quot;&gt;QChar&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9090121b91d5e486b25636458eac1529c4dd2db4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;&lt;a href=&quot;qstringref&quot;&gt;QStringRef&lt;/a&gt;&amp;gt; QString::splitRef(const &lt;a href=&quot;qregexp&quot;&gt;QRegExp&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5486c5bf3371eacde12d0328c8f68ac5e1ec86bf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;&lt;a href=&quot;qstringref&quot;&gt;QStringRef&lt;/a&gt;&amp;gt; QString::splitRef(const &lt;a href=&quot;qregularexpression&quot;&gt;QRegularExpression&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8a9ef16d6cf594b2658a52080724700a7f82e0e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;&lt;a href=&quot;qstringref&quot;&gt;QStringRef&lt;/a&gt;&amp;gt; QString::splitRef(const &lt;a href=&quot;qstring#QString&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cefb35ab63259b92bb07b5051406a3af711b4214" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;&lt;a href=&quot;qstringref#QStringRef&quot;&gt;QStringRef&lt;/a&gt;&amp;gt; QStringRef::split(&lt;a href=&quot;qchar&quot;&gt;QChar&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ab8207c23e20b78f6a1d6070caba725c740ac69" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;&lt;a href=&quot;qstringref#QStringRef&quot;&gt;QStringRef&lt;/a&gt;&amp;gt; QStringRef::split(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed9bbbad286f83624ebb1320346dce8f49b85fad" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;&lt;a href=&quot;qt3danimation-qabstractanimation&quot;&gt;Qt3DAnimation::QAbstractAnimation&lt;/a&gt; *&amp;gt; QAnimationGroup::animationList()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75d796805464dcd33abbd0da25f1430800d78b87" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;&lt;a href=&quot;qt3danimation-qanimationgroup&quot;&gt;Qt3DAnimation::QAnimationGroup&lt;/a&gt; *&amp;gt; QAnimationController::animationGroupList()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6861a9cbd24c07cfe7401fbad1b61232bf13a6cd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;&lt;a href=&quot;qt3danimation-qmorphtarget&quot;&gt;Qt3DAnimation::QMorphTarget&lt;/a&gt; *&amp;gt; QMorphingAnimation::morphTargetList()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d067d4a7e497a07d6724e5d68b467f364284a3dd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;&lt;a href=&quot;qt3danimation-qmorphtarget&quot;&gt;Qt3DAnimation::QMorphTarget&lt;/a&gt; *&amp;gt; QVertexBlendAnimation::morphTargetList()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="745b9885d093fb38260df8d9380b8493d8a05b05" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;&lt;a href=&quot;qt3dcore-qabstractaspect&quot;&gt;Qt3DCore::QAbstractAspect&lt;/a&gt; *&amp;gt; QAspectEngine::aspects() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="194d22f6957225ad426f0b06669a47b209bb27d9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;&lt;a href=&quot;qt3dcore-qentity&quot;&gt;Qt3DCore::QEntity&lt;/a&gt; *&amp;gt; QComponent::entities() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50a7e453dfacccab64324e687de861a78dbe0569" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;&lt;a href=&quot;qt3dcore-qentity&quot;&gt;Qt3DCore::QEntity&lt;/a&gt; *&amp;gt; QScene2D::entities()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="433316a3de13934e33e98eb2464b68d133193d2c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;&lt;a href=&quot;qt3dcore-qjoint&quot;&gt;Qt3DCore::QJoint&lt;/a&gt; *&amp;gt; QJoint::childJoints() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd98cb7501e9d8b320770641734813f530089431" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;&lt;a href=&quot;qt3dcore-qtransform&quot;&gt;Qt3DCore::QTransform&lt;/a&gt; *&amp;gt; QKeyframeAnimation::keyframeList() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de6791c71b8e6c6b8b1f595dc4a1a8d12829bf40" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;&lt;a href=&quot;qt3dinput-qabstractactioninput&quot;&gt;Qt3DInput::QAbstractActionInput&lt;/a&gt; *&amp;gt; QAction::inputs() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1439bfa742b501bc71ef2ca328c65be1a2f15f1f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;&lt;a href=&quot;qt3dinput-qabstractactioninput&quot;&gt;Qt3DInput::QAbstractActionInput&lt;/a&gt; *&amp;gt; QInputChord::chords() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93842c98b7885ef10050496a74665b1275917e2c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;&lt;a href=&quot;qt3dinput-qabstractactioninput&quot;&gt;Qt3DInput::QAbstractActionInput&lt;/a&gt; *&amp;gt; QInputSequence::sequences() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09947b360d4f295b46af84b7f4ecf78127ff0e39" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;&lt;a href=&quot;qt3dinput-qabstractaxisinput&quot;&gt;Qt3DInput::QAbstractAxisInput&lt;/a&gt; *&amp;gt; QAxis::inputs() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07e9602fc645f339c14165570972a7b9c60d0847" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;&lt;a href=&quot;qt3dinput-qaction&quot;&gt;Qt3DInput::QAction&lt;/a&gt; *&amp;gt; QLogicalDevice::actions() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9351a925de0c08cc9f8731fa245e256bf3941ce0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;&lt;a href=&quot;qt3dinput-qaxis&quot;&gt;Qt3DInput::QAxis&lt;/a&gt; *&amp;gt; QLogicalDevice::axes() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5375542a325b43148c59ca6b342048802a4197e3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;&lt;a href=&quot;qt3dinput-qaxissetting&quot;&gt;Qt3DInput::QAxisSetting&lt;/a&gt; *&amp;gt; QAbstractPhysicalDevice::axisSettings() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0428dadddf54398ef248388984ce25bfe2a3499a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;&lt;a href=&quot;qt3drender-qabstracttextureimage&quot;&gt;Qt3DRender::QAbstractTextureImage&lt;/a&gt; *&amp;gt; QAbstractTexture::textureImages() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87e8f825f6dc7b74069ae14c6b1d1f258a276c8b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;&lt;a href=&quot;qt3drender-qattribute&quot;&gt;Qt3DRender::QAttribute&lt;/a&gt; *&amp;gt; QGeometry::attributes() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b501951f377eb9e32b14d575d07a1230199e31e4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;&lt;a href=&quot;qt3drender-qattribute&quot;&gt;Qt3DRender::QAttribute&lt;/a&gt; *&amp;gt; QMorphTarget::attributeList() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92ff3d25351a8914b32c44b3f3205fbd0c031edb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;&lt;a href=&quot;qt3drender-qfilterkey&quot;&gt;Qt3DRender::QFilterKey&lt;/a&gt; *&amp;gt; QRenderPass::filterKeys() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80a750064c82decef0a09a539c36a246295d2718" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;&lt;a href=&quot;qt3drender-qfilterkey&quot;&gt;Qt3DRender::QFilterKey&lt;/a&gt; *&amp;gt; QRenderPassFilter::matchAny() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44f4ffce66b62db53818208fb72765511ce845d7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;&lt;a href=&quot;qt3drender-qfilterkey&quot;&gt;Qt3DRender::QFilterKey&lt;/a&gt; *&amp;gt; QTechnique::filterKeys() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e4fc8e2e02be71b8edd193b1ec4d92d195cac57" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;&lt;a href=&quot;qt3drender-qfilterkey&quot;&gt;Qt3DRender::QFilterKey&lt;/a&gt; *&amp;gt; QTechniqueFilter::matchAll() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0aad7b692c10a479cc7fb0d1d6332f06ebfc47e6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;&lt;a href=&quot;qt3drender-qlayer&quot;&gt;Qt3DRender::QLayer&lt;/a&gt; *&amp;gt; QAbstractRayCaster::layers() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00a0e7facb4c6d580ad63733a62802daed332438" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;&lt;a href=&quot;qt3drender-qlayer&quot;&gt;Qt3DRender::QLayer&lt;/a&gt; *&amp;gt; QLayerFilter::layers() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2de10f421f527b8231a2ad699171cded75ece321" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;&lt;a href=&quot;qt3drender-qparameter&quot;&gt;Qt3DRender::QParameter&lt;/a&gt; *&amp;gt; QEffect::parameters() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="759b2dc5e787ba3d407c1da12e1990da57ac2908" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;&lt;a href=&quot;qt3drender-qparameter&quot;&gt;Qt3DRender::QParameter&lt;/a&gt; *&amp;gt; QMaterial::parameters() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="018862ae1e43b17f696689b772fd8518ff1c81e9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;&lt;a href=&quot;qt3drender-qparameter&quot;&gt;Qt3DRender::QParameter&lt;/a&gt; *&amp;gt; QRenderPass::parameters() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c82caf05bb2890aeaaa77e8476767b69740899ff" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;&lt;a href=&quot;qt3drender-qparameter&quot;&gt;Qt3DRender::QParameter&lt;/a&gt; *&amp;gt; QRenderPassFilter::parameters() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c9e77ea3d26f75d9b563a06ebee0f19cad3a2ef" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;&lt;a href=&quot;qt3drender-qparameter&quot;&gt;Qt3DRender::QParameter&lt;/a&gt; *&amp;gt; QTechnique::parameters() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e95f297b996d018ae539aa9fd0921d9726383a3b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;&lt;a href=&quot;qt3drender-qparameter&quot;&gt;Qt3DRender::QParameter&lt;/a&gt; *&amp;gt; QTechniqueFilter::parameters() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a36c47305122760ef76a02b2e7506b2a6e7372a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;&lt;a href=&quot;qt3drender-qrenderpass&quot;&gt;Qt3DRender::QRenderPass&lt;/a&gt; *&amp;gt; QTechnique::renderPasses() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29bc5d89f4b1565c0178012adc268fafea776727" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;&lt;a href=&quot;qt3drender-qrenderstate&quot;&gt;Qt3DRender::QRenderState&lt;/a&gt; *&amp;gt; QRenderPass::renderStates() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c82f40a0e725d5afe44910c8ac42e4fb031db77" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;&lt;a href=&quot;qt3drender-qrenderstate&quot;&gt;Qt3DRender::QRenderState&lt;/a&gt; *&amp;gt; QRenderStateSet::renderStates() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67ed4e36cdb0fa1b362695532d153e8ce1a058a8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;&lt;a href=&quot;qt3drender-qrendertargetoutput&quot;&gt;Qt3DRender::QRenderTargetOutput&lt;/a&gt; *&amp;gt; QRenderTarget::outputs() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e95fc4800425f7a7b2a24eb4c9dc07d9071d135f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;&lt;a href=&quot;qt3drender-qrendertargetoutput#AttachmentPoint-enum&quot;&gt;QRenderTargetOutput::AttachmentPoint&lt;/a&gt;&amp;gt; QRenderTargetSelector::outputs() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd647fc21d9d68be6a5b551873970462e35fbffa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;&lt;a href=&quot;qt3drender-qsortpolicy#SortType-enum&quot;&gt;Qt3DRender::QSortPolicy::SortType&lt;/a&gt;&amp;gt; QSortPolicy::sortTypes() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b712b9377417a590ba52a6b23e59d8053c94d03" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;&lt;a href=&quot;qt3drender-qtechnique&quot;&gt;Qt3DRender::QTechnique&lt;/a&gt; *&amp;gt; QEffect::techniques() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b62ae2f6b9492561a8ef29e5e285be65accf6e3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;&lt;a href=&quot;qt3drender-qtextureimagedatagenerator#QTextureImageDataPtr-typedef&quot;&gt;Qt3DRender::QTextureImageDataPtr&lt;/a&gt;&amp;gt; QTextureData::imageData() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f14f6399092d2a14d61e8b246c1e6500366dd59" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;&lt;a href=&quot;qtextformat&quot;&gt;QTextFormat&lt;/a&gt;&amp;gt; QTextDocument::allFormats() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d87d1e0134bd06aa3333bcd86cdc1d0a088f2dff" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;&lt;a href=&quot;qtextlayout-formatrange&quot;&gt;QTextLayout::FormatRange&lt;/a&gt;&amp;gt; QTextBlock::textFormats() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26baaef657cd4fab15935a3c7c0d8ad9acbf05c8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;&lt;a href=&quot;qtextlayout-formatrange&quot;&gt;QTextLayout::FormatRange&lt;/a&gt;&amp;gt; QTextLayout::formats() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7006d9b6e6f31ad6135b31cf326abe7968864cc4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;&lt;a href=&quot;qtextlength&quot;&gt;QTextLength&lt;/a&gt;&amp;gt; QTextFormat::lengthVectorProperty(int</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02b2f750d4f8711890003d41d3846c87023af39c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;&lt;a href=&quot;qtextlength&quot;&gt;QTextLength&lt;/a&gt;&amp;gt; QTextTableFormat::columnWidthConstraints() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="984dd9db65554c7b5aba6b70d64622f780a76716" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;&lt;a href=&quot;qtglobal#uint-typedef&quot;&gt;uint&lt;/a&gt;&amp;gt; QString::toUcs4() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7404d6ad9c0939890ca7036bbb214f26e1047a3f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;&lt;a href=&quot;qtglobal#uint-typedef&quot;&gt;uint&lt;/a&gt;&amp;gt; QStringRef::toUcs4() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd2ff4007cc3662a296f38e920effb2cf4695254" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;&lt;a href=&quot;qtglobal#uint-typedef&quot;&gt;uint&lt;/a&gt;&amp;gt; QStringView::toUcs4() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c78ae5cdc604712b189928679c35300edb908e96" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;&lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt;&amp;gt;</source>
          <target state="translated">&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;&lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="9fc590de7f21796220fbc3d391c8c8747acc55f0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;&lt;a href=&quot;qvoice&quot;&gt;QVoice&lt;/a&gt;&amp;gt; QTextToSpeech::availableVoices() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dc2c4eaeeca457b3f6412f06411543e42df2e26" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;&lt;a href=&quot;qweakpointer&quot;&gt;QWeakPointer&lt;/a&gt;&amp;lt;&lt;a href=&quot;qt3dcore-qaspectjob&quot;&gt;Qt3DCore::QAspectJob&lt;/a&gt;&amp;gt; &amp;gt; QAspectJob::dependencies() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adb9d7c1e22375882b1df2c76b5b137dd4821ba5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;GLuint&amp;gt; QOpenGLFramebufferObject::textures() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="268bb7a57962f224def65534c9667870c4fadea9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;GLuint&amp;gt; QOpenGLTimeMonitor::objectIds() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bde6c8bfb3088a1b793ccef4240a77fe072b987" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;GLuint64&amp;gt; QOpenGLTimeMonitor::waitForIntervals() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0371e975a0d13c7bb7c4778f691169287b78cba" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;GLuint64&amp;gt; QOpenGLTimeMonitor::waitForSamples() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="471ebc765cc8a472fea63367b73bdfefd4287db2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;Qt3DCore::QNodeIdTypePair&amp;gt; QNodeDestroyedChange::subtreeIdsAndTypes() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d20c89a96cf505ea01df468102e23f81d7935e38" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;T&amp;gt;</source>
          <target state="translated">&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;T&amp;gt;</target>
        </trans-unit>
        <trans-unit id="7b5f6b7f3100357ddf946f604c84ee090bfca834" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;T&amp;gt; QList::toVector() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd65a554dcca72f14c0607aebe2005a8ba20ff05" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;T&amp;gt; also uses that algorithm for data types that can be moved around in memory using &lt;code&gt;memcpy()&lt;/code&gt; (including the basic C++ types, the pointer types, and Qt's &lt;a href=&quot;implicit-sharing#&quot;&gt;shared classes&lt;/a&gt;) but uses a different algorithm for data types that can only be moved by calling the copy constructor and a destructor. Since the cost of reallocating is higher in that case, &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;T&amp;gt; reduces the number of reallocations by always doubling the memory when running out of space.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adf8921194eefe3a209e4757aa8b30cf30783854" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;T&amp;gt; is one of Qt's generic &lt;a href=&quot;containers#&quot;&gt;container classes&lt;/a&gt;. It stores its items in adjacent memory locations and provides fast index-based access.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58943be7bfc5b6281ce23a1740af6ddb3c0cb39e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;T&amp;gt;, &lt;a href=&quot;qstack&quot;&gt;QStack&lt;/a&gt;&amp;lt;T&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="779e6a41b301a01ad94a68fd97cab519ef605d02" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;T&amp;gt;, &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;, and &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; store their items contiguously in memory; &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;T&amp;gt; maintains an array of pointers to the items it stores to provide fast index-based access (unless T is a pointer type or a basic type of the size of a pointer, in which case the value itself is stored in the array); &lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt;&amp;lt;Key, T&amp;gt; keeps a hash table whose size is proportional to the number of items in the hash. To avoid reallocating the data every single time an item is added at the end of the container, these classes typically allocate more memory than necessary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="103237c8874545cee969299421790904cd5ed6eb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;T&amp;gt;::const_iterator</source>
          <target state="translated">&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;T&amp;gt;::const_iterator</target>
        </trans-unit>
        <trans-unit id="8c9bb5e0cc4dab98861cd2b4ce37391ed6839a75" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;T&amp;gt;::iterator</source>
          <target state="translated">&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;T&amp;gt;::iterator</target>
        </trans-unit>
        <trans-unit id="541739245206d4fe3987cf6194cc536c396829e8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;bool&amp;gt;</source>
          <target state="translated">&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;bool&amp;gt;</target>
        </trans-unit>
        <trans-unit id="b8cfe63509d71cfae8f15b6f282fb1e77e028471" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;float&amp;gt; QMorphingAnimation::getWeights(int</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfd1bd342322af16792baefdf34720857e19cca2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;float&amp;gt; QOpenGLShaderProgram::defaultInnerTessellationLevels() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87fd5a9a0c6d310b4961dd5b33a19e58e6698985" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;float&amp;gt; QOpenGLShaderProgram::defaultOuterTessellationLevels() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4837efaa346b6fe280579fbc4777120e3882ef4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;int&amp;gt;</source>
          <target state="translated">&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;int&amp;gt;</target>
        </trans-unit>
        <trans-unit id="63c1ec8da6026e3a1f2153d7b3b082d903954cfc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;int&amp;gt; QAxisSetting::axes() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5a1fd4cbacff56414b19803ffc3973cf1f845e1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;int&amp;gt; QCanBusDevice::configurationKeys() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04886e9892c9fc39d53a9689a7b2e976ce8fb558" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;int&amp;gt; QVersionNumber::segments() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d9a08007bec754b25fb14f65913d004fea93433" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;int&amp;gt; QVulkanWindow::supportedSampleCounts()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb352985aa2480fd94d020da62dc70a7c7244029" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;qreal&amp;gt;</source>
          <target state="translated">&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;qreal&amp;gt;</target>
        </trans-unit>
        <trans-unit id="e0f9af5d1f3b7a8e8cf7626755eb4f5eebfeede4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;'s value type must be an &lt;a href=&quot;containers#assignable-data-type&quot;&gt;assignable data type&lt;/a&gt;. This covers most data types that are commonly used, but the compiler won't let you, for example, store a &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; as a value; instead, store a &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; *. A few functions have additional requirements; for example, &lt;a href=&quot;qvector#indexOf&quot;&gt;indexOf&lt;/a&gt;() and &lt;a href=&quot;qvector#lastIndexOf&quot;&gt;lastIndexOf&lt;/a&gt;() expect the value type to support &lt;code&gt;operator==()&lt;/code&gt;. These requirements are documented on a per-function basis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b79555c229442b9af9880c4b5a9290cc30ee034b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector#QVector&quot;&gt;QVector&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;QVector::fill(const T &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6c24c5e6c7d1836b30bc3685db753266ff9ae0d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector#QVector&quot;&gt;QVector&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;QVector::operator&amp;lt;&amp;lt;(T &amp;amp;&amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fdc7272f7371718c0f478366e09876b227539ef" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector#QVector&quot;&gt;QVector&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;QVector::operator&amp;lt;&amp;lt;(const &lt;a href=&quot;qvector#QVector&quot;&gt;QVector&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee3e76a3648650811392986bc7529359e0bdde47" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector#QVector&quot;&gt;QVector&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;QVector::operator&amp;lt;&amp;lt;(const T &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b675e75be5b0df76900babca421ee368198074f8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector#QVector&quot;&gt;QVector&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;QVector::operator+=(T &amp;amp;&amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fe94d909d1d39decf4db80dc2106a61cef4a42b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector#QVector&quot;&gt;QVector&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;QVector::operator+=(const &lt;a href=&quot;qvector#QVector&quot;&gt;QVector&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6fe47fab91dc7cf9fde0f1d81ec2cb95514dd48" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector#QVector&quot;&gt;QVector&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;QVector::operator+=(const T &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3c0c0801d04490040155fc019723e673decd5f3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector#QVector&quot;&gt;QVector&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;QVector::operator=(&lt;a href=&quot;qvector#QVector&quot;&gt;QVector&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;&amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0aa911d8c5962c119b93dc074e35d69cc3621e00" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector#QVector&quot;&gt;QVector&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;QVector::operator=(const &lt;a href=&quot;qvector#QVector&quot;&gt;QVector&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a5b6cf1320211811f681d3f8e5c905302b11597" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector#QVector&quot;&gt;QVector&lt;/a&gt;&amp;lt;T&amp;gt; QVector::mid(int</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f86661f8d634e0995748e03e86a727d466071b6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector#QVector&quot;&gt;QVector&lt;/a&gt;&amp;lt;T&amp;gt; QVector::operator+(const &lt;a href=&quot;qvector#QVector&quot;&gt;QVector&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4c282c5fbc12521751a76aaf841748f0a7ae80a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector#at&quot;&gt;at&lt;/a&gt;() can be faster than operator[](), because it never causes a &lt;a href=&quot;implicit-sharing#deep-copy&quot;&gt;deep copy&lt;/a&gt; to occur.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d07e478653e0f66186fdbb816ad5d814bfe57ca4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector#const_iterator-typedef&quot;&gt;QVector::const_iterator&lt;/a&gt; QVector::begin() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ddba9bca33d685e9f8ac0a3c0f6bdf74e04fec5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector#const_iterator-typedef&quot;&gt;QVector::const_iterator&lt;/a&gt; QVector::cbegin() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f58539728ab08e22cc5be7ee050915ef4faa8b93" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector#const_iterator-typedef&quot;&gt;QVector::const_iterator&lt;/a&gt; QVector::cend() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="506ece2967232aba744b6979acc4d88cfae9fa1c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector#const_iterator-typedef&quot;&gt;QVector::const_iterator&lt;/a&gt; QVector::constBegin() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0846b966b3e1e97868d220e222a152bda2dc697b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector#const_iterator-typedef&quot;&gt;QVector::const_iterator&lt;/a&gt; QVector::constEnd() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3b26708244666bad8ed702b3618ccb466298bb4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector#const_iterator-typedef&quot;&gt;QVector::const_iterator&lt;/a&gt; QVector::end() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8bb691bcbd629e3738e30e684fcaa099c1298c4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector#const_reference-typedef&quot;&gt;QVector::const_reference&lt;/a&gt; QVector::back() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7eea24c7270c5a3787c497b602d2e34acfd598d3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector#const_reference-typedef&quot;&gt;QVector::const_reference&lt;/a&gt; QVector::front() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c566c79979c49cafc860ecf5e1bf02e7978624e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector#const_reverse_iterator-typedef&quot;&gt;QVector::const_reverse_iterator&lt;/a&gt; QVector::crbegin() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4101b44133794ff1cdc5418d0f5c20f37124a44c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector#const_reverse_iterator-typedef&quot;&gt;QVector::const_reverse_iterator&lt;/a&gt; QVector::crend() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="779399409cc8c7b5049ef5d0868bbf748523cc21" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector#const_reverse_iterator-typedef&quot;&gt;QVector::const_reverse_iterator&lt;/a&gt; QVector::rbegin() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cffc55191e5d7af1928ed1bc27fac310a28de539" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector#const_reverse_iterator-typedef&quot;&gt;QVector::const_reverse_iterator&lt;/a&gt; QVector::rend() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb72c97b85a9556544a1b14b03014696c39ebfcd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector#iterator-typedefx&quot;&gt;QVector::iterator&lt;/a&gt; QVector::begin()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="918503850f9f5b5a339b42ee9b98946804001969" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector#iterator-typedefx&quot;&gt;QVector::iterator&lt;/a&gt; QVector::end()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72951888e6249749af9d5fdeea11d037feeeca96" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector#iterator-typedefx&quot;&gt;QVector::iterator&lt;/a&gt; QVector::erase(&lt;a href=&quot;qvector#iterator-typedefx&quot;&gt;QVector::iterator&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cbb7fe8dd5037a280a4ae6e7b03b010e8d186a3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector#iterator-typedefx&quot;&gt;QVector::iterator&lt;/a&gt; QVector::insert(&lt;a href=&quot;qvector#iterator-typedefx&quot;&gt;QVector::iterator&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5536e587174166054bb7e38203ef25d90f15a1e3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector#reference-typedef&quot;&gt;QVector::reference&lt;/a&gt; QVector::back()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a05d7329d7041f5d7fa666196ded20d8c5c3887" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector#reverse_iterator-typedef&quot;&gt;QVector::reverse_iterator&lt;/a&gt; QVector::rbegin()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36b9a50e46af2b821c5abcbc4d3882dd401beec8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector#reverse_iterator-typedef&quot;&gt;QVector::reverse_iterator&lt;/a&gt; QVector::rend()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d72300828fd55533320155c857436e31c4468f5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector2d&quot;&gt;QVector2D&lt;/a&gt; QVector3D::toVector2D() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aac77303248f140b676e3e600312677c1bcf5425" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector2d&quot;&gt;QVector2D&lt;/a&gt; QVector4D::toVector2D() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67e59338e1f2d60054187bb6c5b2cf24ab52c03b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector2d&quot;&gt;QVector2D&lt;/a&gt; QVector4D::toVector2DAffine() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c90fecef59648f516cae25c413b693d3b6a378b1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector2d&quot;&gt;QVector2D&lt;/a&gt; TouchPoint::velocity() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbf55ad0e5a52e52a80dee60059b0651ee066720" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector2d&quot;&gt;QVector2D&lt;/a&gt;, &lt;a href=&quot;qvector3d&quot;&gt;QVector3D&lt;/a&gt;, &lt;a href=&quot;qvector4d&quot;&gt;QVector4D&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c1c73f8b96d52c70c0aae0b2415c4307d59b53a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector2d#QVector2D&quot;&gt;QVector2D&lt;/a&gt; &amp;amp;QVector2D::operator*=(const &lt;a href=&quot;qvector2d#QVector2D&quot;&gt;QVector2D&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22e942cfc12019cd92c2f6a8185b5afe05e02521" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector2d#QVector2D&quot;&gt;QVector2D&lt;/a&gt; &amp;amp;QVector2D::operator*=(float</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4409a8aa8513767d5ff3df35bd1781ff43cafa75" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector2d#QVector2D&quot;&gt;QVector2D&lt;/a&gt; &amp;amp;QVector2D::operator+=(const &lt;a href=&quot;qvector2d#QVector2D&quot;&gt;QVector2D&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbe42f7f3e31d902bbdbdd6842f3ac42ab33cb73" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector2d#QVector2D&quot;&gt;QVector2D&lt;/a&gt; &amp;amp;QVector2D::operator-=(const &lt;a href=&quot;qvector2d#QVector2D&quot;&gt;QVector2D&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7a44055425845944c3fe520a79383a014b0d994" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector2d#QVector2D&quot;&gt;QVector2D&lt;/a&gt; &amp;amp;QVector2D::operator/=(const &lt;a href=&quot;qvector2d#QVector2D&quot;&gt;QVector2D&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cda7ebf348bee56900da06f4ea2b0c40dbac1a6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector2d#QVector2D&quot;&gt;QVector2D&lt;/a&gt; &amp;amp;QVector2D::operator/=(float</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a8944b516ce1a5729dfbfe001cf2f5ba8661abe" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector2d#QVector2D&quot;&gt;QVector2D&lt;/a&gt; QVector2D::normalized() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b67a1084c8fb823afb71627ccc99abc96bce0ef" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector3d&quot;&gt;QVector3D&lt;/a&gt; -&amp;gt; vec3</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aaeb64683d6eb580db34c010af9d2f51aeb8444b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector3d&quot;&gt;QVector3D&lt;/a&gt; QMatrix4x4::map(const &lt;a href=&quot;qvector3d&quot;&gt;QVector3D&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d0d439b391f428e8f63b875cb185fa8edab9379" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector3d&quot;&gt;QVector3D&lt;/a&gt; QMatrix4x4::mapVector(const &lt;a href=&quot;qvector3d&quot;&gt;QVector3D&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06fe29b9d53682dc018460e8b628f22cfbbd4d27" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector3d&quot;&gt;QVector3D&lt;/a&gt; QMatrix4x4::operator*(const &lt;a href=&quot;qmatrix4x4#QMatrix4x4&quot;&gt;QMatrix4x4&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb0d8c69056613c687c8846ca5d25628048335a4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector3d&quot;&gt;QVector3D&lt;/a&gt; QMatrix4x4::operator*(const &lt;a href=&quot;qvector3d&quot;&gt;QVector3D&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eca95901fd3cdb4788934beaf94f3f1277732ca8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector3d&quot;&gt;QVector3D&lt;/a&gt; QPickEvent::localIntersection() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de9a1f327167a8aedc84cf18f78878f685ff497b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector3d&quot;&gt;QVector3D&lt;/a&gt; QPickEvent::worldIntersection() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7cf74e840a5d94d011a80383b389d28dd46ff47" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector3d&quot;&gt;QVector3D&lt;/a&gt; QPickTriangleEvent::uvw() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2daf552bb12dfa724a25e1c56b4de541b401e644" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector3d&quot;&gt;QVector3D&lt;/a&gt; QQuaternion::operator*(const &lt;a href=&quot;qquaternion#QQuaternion&quot;&gt;QQuaternion&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fdd7851b568a70c8b5c1ec5bd702eb7169c3d69" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector3d&quot;&gt;QVector3D&lt;/a&gt; QQuaternion::rotatedVector(const &lt;a href=&quot;qvector3d&quot;&gt;QVector3D&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="969340c289c18b15e17087100d80b9887848d730" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector3d&quot;&gt;QVector3D&lt;/a&gt; QQuaternion::toEulerAngles() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32329757fea2ca451706d68262d2d623ff0b51c3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector3d&quot;&gt;QVector3D&lt;/a&gt; QQuaternion::vector() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4903a9fd9a34ac7fa77f6385a040e4bcfdf67d3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector3d&quot;&gt;QVector3D&lt;/a&gt; QRayCasterHit::localIntersection() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="789c1e7534f577da37aa2a62589da96ffc34deba" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector3d&quot;&gt;QVector3D&lt;/a&gt; QRayCasterHit::worldIntersection() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06f688f103453fd9ac5b618be429ad406e81a6bb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector3d&quot;&gt;QVector3D&lt;/a&gt; QScatterDataItem::position() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95cacecbe032f31c8ef3785b2ba8561497af0d1d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector3d&quot;&gt;QVector3D&lt;/a&gt; QSurfaceDataItem::position() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a83d841967bfba5d22da4313b9fd23cd31ae12ed" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector3d&quot;&gt;QVector3D&lt;/a&gt; QVector2D::toVector3D() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ede485b3a575d058bc0289613fc1da0bba0d0316" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector3d&quot;&gt;QVector3D&lt;/a&gt; QVector4D::toVector3D() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4ceeb2a06286fa9f4aa31c3f5368c0fde6538f7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector3d&quot;&gt;QVector3D&lt;/a&gt; QVector4D::toVector3DAffine() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e5a0e70bbef32bde5b64eea0a0814c1633746c2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector3d#QVector3D&quot;&gt;QVector3D&lt;/a&gt; &amp;amp;QVector3D::operator*=(const &lt;a href=&quot;qvector3d#QVector3D&quot;&gt;QVector3D&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03b24c01759dc82e1871a21861e6810b483f6b2f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector3d#QVector3D&quot;&gt;QVector3D&lt;/a&gt; &amp;amp;QVector3D::operator*=(float</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="991fa4250a0b5ec747a3d2de13a83d9edb50472e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector3d#QVector3D&quot;&gt;QVector3D&lt;/a&gt; &amp;amp;QVector3D::operator+=(const &lt;a href=&quot;qvector3d#QVector3D&quot;&gt;QVector3D&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5646043d15805075af794d696b44e8fbb6211637" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector3d#QVector3D&quot;&gt;QVector3D&lt;/a&gt; &amp;amp;QVector3D::operator-=(const &lt;a href=&quot;qvector3d#QVector3D&quot;&gt;QVector3D&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4b8927bd9643ecf144c40182034d16626cb1c35" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector3d#QVector3D&quot;&gt;QVector3D&lt;/a&gt; &amp;amp;QVector3D::operator/=(const &lt;a href=&quot;qvector3d#QVector3D&quot;&gt;QVector3D&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3435f9cb6e140a3bbb3c3805c9f30e24caecdaf3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector3d#QVector3D&quot;&gt;QVector3D&lt;/a&gt; &amp;amp;QVector3D::operator/=(float</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8886984702491698ba281aa157b9d01bb50d24c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector3d#QVector3D&quot;&gt;QVector3D&lt;/a&gt; QVector3D::normalized() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13b8bcac93e89cd1a9d27f88cfc23afd136e4192" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector3d#QVector3D&quot;&gt;QVector3D&lt;/a&gt; QVector3D::project(const &lt;a href=&quot;qmatrix4x4&quot;&gt;QMatrix4x4&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f95a6357efc01638bacd435dc5551a6847dae8e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector3d#QVector3D&quot;&gt;QVector3D&lt;/a&gt; QVector3D::unproject(const &lt;a href=&quot;qmatrix4x4&quot;&gt;QMatrix4x4&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c6771dea4f800ff4a68c9d011c99c41a4747bd8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector4d&quot;&gt;QVector4D&lt;/a&gt; -&amp;gt; vec4</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e113ccf299f54463b34fd4bb20b6f65c1aa87313" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector4d&quot;&gt;QVector4D&lt;/a&gt; QMatrix4x4::column(int</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c6afb19882d61c9cf97cd0a889de3751381954b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector4d&quot;&gt;QVector4D&lt;/a&gt; QMatrix4x4::map(const &lt;a href=&quot;qvector4d&quot;&gt;QVector4D&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2b69e7e95a8c541130980279a1bfb4fd1291fdd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector4d&quot;&gt;QVector4D&lt;/a&gt; QMatrix4x4::operator*(const &lt;a href=&quot;qmatrix4x4#QMatrix4x4&quot;&gt;QMatrix4x4&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="538c9dcddea3ac5459c85868777c3263bd3ae7d8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector4d&quot;&gt;QVector4D&lt;/a&gt; QMatrix4x4::operator*(const &lt;a href=&quot;qvector4d&quot;&gt;QVector4D&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f6f6a2aa5a65f28d55afb7e559eecafbc44345f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector4d&quot;&gt;QVector4D&lt;/a&gt; QMatrix4x4::row(int</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9866ec312b5d9638bdc4a160ca86e60ea36c9fc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector4d&quot;&gt;QVector4D&lt;/a&gt; QQuaternion::toVector4D() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33d7b4d7cd909072a919a65e166030e795964ed2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector4d&quot;&gt;QVector4D&lt;/a&gt; QVector2D::toVector4D() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1928b1b1bb29a71fd71084463af23113ce08358" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector4d&quot;&gt;QVector4D&lt;/a&gt; QVector3D::toVector4D() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b17770adfad9dc0d612f79b7d25d7f9df1941fa1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector4d#QVector4D&quot;&gt;QVector4D&lt;/a&gt; &amp;amp;QVector4D::operator*=(const &lt;a href=&quot;qvector4d#QVector4D&quot;&gt;QVector4D&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06972d2195b5adfbb7fa62eb0048edd049b0699f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector4d#QVector4D&quot;&gt;QVector4D&lt;/a&gt; &amp;amp;QVector4D::operator*=(float</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f487189c587cb0947ecef4c714a79916a249af7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector4d#QVector4D&quot;&gt;QVector4D&lt;/a&gt; &amp;amp;QVector4D::operator+=(const &lt;a href=&quot;qvector4d#QVector4D&quot;&gt;QVector4D&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c3e317dd697c892e259146542595d6fe64af415" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector4d#QVector4D&quot;&gt;QVector4D&lt;/a&gt; &amp;amp;QVector4D::operator-=(const &lt;a href=&quot;qvector4d#QVector4D&quot;&gt;QVector4D&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8f67b806cfcc5fc5a37ce08f8d1d47afaa49fc6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector4d#QVector4D&quot;&gt;QVector4D&lt;/a&gt; &amp;amp;QVector4D::operator/=(const &lt;a href=&quot;qvector4d#QVector4D&quot;&gt;QVector4D&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5ce5d3ac48d8c32299e46c5c624fc3154d5aeb4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector4d#QVector4D&quot;&gt;QVector4D&lt;/a&gt; &amp;amp;QVector4D::operator/=(float</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4632446d48a95821f7d59b8233cd082e1033a6ce" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvector4d#QVector4D&quot;&gt;QVector4D&lt;/a&gt; QVector4D::normalized() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="364b8548ff3e35400f1f8c4c3b460d8d6e746788" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvectoriterator&quot;&gt;QVectorIterator&lt;/a&gt;&amp;lt;T&amp;gt;</source>
          <target state="translated">&lt;a href=&quot;qvectoriterator&quot;&gt;QVectorIterator&lt;/a&gt;&amp;lt;T&amp;gt;</target>
        </trans-unit>
        <trans-unit id="517cdceda2ac65940dc9125d9b457e647e338c35" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvectoriterator&quot;&gt;QVectorIterator&lt;/a&gt;&amp;lt;T&amp;gt; allows you to iterate over a &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;T&amp;gt; (or a &lt;a href=&quot;qstack&quot;&gt;QStack&lt;/a&gt;&amp;lt;T&amp;gt;). If you want to modify the vector as you iterate over it, use &lt;a href=&quot;qmutablevectoriterator&quot;&gt;QMutableVectorIterator&lt;/a&gt;&amp;lt;T&amp;gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a72bb54c5b3cd8bc7a60432119222e3d2ea05160" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvectoriterator#QVectorIterator&quot;&gt;QVectorIterator&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;QVectorIterator::operator=(const &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c0668e0e0ed9ecacb4be5b72975ccb6ed335751" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qversionnumber&quot;&gt;QVersionNumber&lt;/a&gt; QCompressedHelpInfo::version() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4174609ad29e26adf4312bd74293ef59d03f74ca" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qversionnumber&quot;&gt;QVersionNumber&lt;/a&gt; QVersionNumber::commonPrefix(const &lt;a href=&quot;qversionnumber&quot;&gt;QVersionNumber&lt;/a&gt; &amp;amp;v1, const &lt;a href=&quot;qversionnumber&quot;&gt;QVersionNumber&lt;/a&gt; &amp;amp;v2)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a5e3dc62cffecb078505785a2c71bc225880ef2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qversionnumber&quot;&gt;QVersionNumber&lt;/a&gt; QVulkanInstance::apiVersion() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b8030225b2d82f39064522d96dbf7103804297b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qversionnumber&quot;&gt;QVersionNumber&lt;/a&gt; QVulkanLayer::specVersion</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ae6dcad8d2002588075a618b458afbd0ffe39a0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qversionnumber#QVersionNumber&quot;&gt;QVersionNumber&lt;/a&gt; QVersionNumber::normalized() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a83f32263ae9f6be084b550877f3c2b3adc9078c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvideoencodersettings&quot;&gt;QVideoEncoderSettings&lt;/a&gt; QMediaRecorder::videoSettings() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bd4f961a34d5319bca3cd5ee66bb0370e7efa9c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvideoencodersettings#QVideoEncoderSettings&quot;&gt;QVideoEncoderSettings&lt;/a&gt; &amp;amp;QVideoEncoderSettings::operator=(const &lt;a href=&quot;qvideoencodersettings#QVideoEncoderSettings&quot;&gt;QVideoEncoderSettings&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19dc41d7dbc49cdb37c734f92636eb24fb5321d0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvideoframe&quot;&gt;QVideoFrame&lt;/a&gt; calls QAbstractVideoBuffer::release when the buffer is not used any more and can be destroyed or returned to the buffer pool.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96303fefb106eeaf97df667fc7fdc60648bc05ef" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvideoframe#FieldType-enum&quot;&gt;QVideoFrame::FieldType&lt;/a&gt; QVideoFrame::fieldType() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bedf6e253a4c45a58d44702a97dc8b60e857ba3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvideoframe#PixelFormat-enum&quot;&gt;QVideoFrame::PixelFormat&lt;/a&gt; QCameraImageCapture::bufferFormat() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07f9b230f41be32d6d56cd09d549395b3837526c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvideoframe#PixelFormat-enum&quot;&gt;QVideoFrame::PixelFormat&lt;/a&gt; QCameraViewfinderSettings::pixelFormat() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="314280d31cc8c0ce94a448c7054e20636bb408cc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvideoframe#PixelFormat-enum&quot;&gt;QVideoFrame::PixelFormat&lt;/a&gt; QVideoFrame::pixelFormat() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad5883c9e9758c449cbc45431959b99de4191ed4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvideoframe#PixelFormat-enum&quot;&gt;QVideoFrame::PixelFormat&lt;/a&gt; QVideoSurfaceFormat::pixelFormat() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12a7b921cbd18f2083699ff8ab1e6012b73f3ec6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvideoframe#QVideoFrame&quot;&gt;QVideoFrame&lt;/a&gt; &amp;amp;QVideoFrame::operator=(const &lt;a href=&quot;qvideoframe#QVideoFrame&quot;&gt;QVideoFrame&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0ec2a620f6180bd54b73bf74ec8f4cf8825c3c6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvideoprobe&quot;&gt;QVideoProbe&lt;/a&gt; is the client facing class for probing video - this class is implemented by media backends to provide this functionality.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="104de6d93afcfd912c5a201ba336b125058a9843" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvideorenderercontrol&quot;&gt;QVideoRendererControl&lt;/a&gt; is one of a number of possible video output controls.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21537b1e0e3326908cbd10eaba57d045c9361daf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvideosurfaceformat&quot;&gt;QVideoSurfaceFormat&lt;/a&gt; QAbstractVideoSurface::surfaceFormat() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7150b5e49fdbbd6bbe5a90a743fa2cdd6c1c4170" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvideosurfaceformat#Direction-enum&quot;&gt;QVideoSurfaceFormat::Direction&lt;/a&gt; QVideoSurfaceFormat::scanLineDirection() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="702db524e6abdada9cb92ce26f2af38a0ed6a97e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvideosurfaceformat#QVideoSurfaceFormat&quot;&gt;QVideoSurfaceFormat&lt;/a&gt; &amp;amp;QVideoSurfaceFormat::operator=(const &lt;a href=&quot;qvideosurfaceformat#QVideoSurfaceFormat&quot;&gt;QVideoSurfaceFormat&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="175e21c114c565b49578a8489347c5eb62f2da4d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvideosurfaceformat#YCbCrColorSpace-enum&quot;&gt;QVideoSurfaceFormat::YCbCrColorSpace&lt;/a&gt; QVideoSurfaceFormat::yCbCrColorSpace() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0e7675bec3f30c308a80d48f93614b6c52de835" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvideowidget&quot;&gt;QVideoWidget&lt;/a&gt; can be used with &lt;a href=&quot;qmediaplayer&quot;&gt;QMediaPlayer&lt;/a&gt; for video rendering and &lt;a href=&quot;qmediaplaylist&quot;&gt;QMediaPlaylist&lt;/a&gt; for accessing playlist functionality.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7a565fac139c21be93bf31bbd8f4e908f41239d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvideowidgetcontrol&quot;&gt;QVideoWidgetControl&lt;/a&gt; is one of number of possible video output controls.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e07377b203eaa0a1d14c6635a571e1c24dc3a0fb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvideowindowcontrol&quot;&gt;QVideoWindowControl&lt;/a&gt; is one of a number of possible video output controls.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59ef3a6ff72428368c6feb452060d39b764e5d5c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvirtualkeyboardabstractinputmethod&quot;&gt;QVirtualKeyboardAbstractInputMethod&lt;/a&gt; *QVirtualKeyboardInputEngine::inputMethod() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47cc51146585cf68cec35058d79ab2836526f98e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvirtualkeyboardabstractinputmethod&quot;&gt;QVirtualKeyboardAbstractInputMethod&lt;/a&gt;: a base type for C++-based input methods. The input method usually handles key events, but can also handle mouse and touch input events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f89da39f3eb72578588070df0ed318c29640bf2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvirtualkeyboardextensionplugin&quot;&gt;QVirtualKeyboardExtensionPlugin&lt;/a&gt;: a plugin interface for virtual keyboard extensions that provide additional functionality.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38ee5d4b20c373b94bc732dd3ba59fdf8322c5d0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvirtualkeyboardinputcontext&quot;&gt;QVirtualKeyboardInputContext&lt;/a&gt; *QVirtualKeyboardAbstractInputMethod::inputContext() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="570f7e827b1dffbb43a27f33c47dff6821d0c89b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvirtualkeyboardinputcontext&quot;&gt;QVirtualKeyboardInputContext&lt;/a&gt; *QVirtualKeyboardInputEngine::inputContext() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ba2c825fe143e5c1f9594f9d8ff181a75922435" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvirtualkeyboardinputcontext&quot;&gt;QVirtualKeyboardInputContext&lt;/a&gt;: provides contextual information for the virtual keyboard and other input components. Acts as an interface to the underlying text input component.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07b38e034eafbddcca9daca5238ef40b4ffe9766" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvirtualkeyboardinputengine&quot;&gt;QVirtualKeyboardInputEngine&lt;/a&gt; *QVirtualKeyboardAbstractInputMethod::inputEngine() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dbfdfa98e87029e6dde3f32c22315326ff67d2d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvirtualkeyboardinputengine&quot;&gt;QVirtualKeyboardInputEngine&lt;/a&gt;: exposes an API to integrate user input events (key presses, etc.) and acts as a host for input methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9b2a08dec02b3da30f20bebc06704861428c299" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvirtualkeyboardtrace&quot;&gt;QVirtualKeyboardTrace&lt;/a&gt; *QVirtualKeyboardInputEngine::traceBegin(int</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="740481c35540afe31bdf3098049df9d32e162af4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvirtualkeyboardtrace&quot;&gt;QVirtualKeyboardTrace&lt;/a&gt; objects are owned by their creator, which is the input method in normal case. This means the objects are constructed in the &lt;a href=&quot;qml-qtquick-virtualkeyboard-inputmethod#traceBegin-method&quot;&gt;InputMethod.traceBegin()&lt;/a&gt; (QML) method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="463673d88692ba3de82a5ac1f20d3e85fc585277" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvoice#Age-enum&quot;&gt;QVoice::Age&lt;/a&gt; QVoice::age() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="023cb4ade3e399753c15adf667f20dbac24a2265" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvoice#Gender-enum&quot;&gt;QVoice::Gender&lt;/a&gt; QVoice::gender() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b701a5cbe5de89bd1a2bc30ea5909ba3f8f3349" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvulkandevicefunctions&quot;&gt;QVulkanDeviceFunctions&lt;/a&gt; *QVulkanInstance::deviceFunctions(int</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93cce5a9442238ceb1d9d8ef0aba1f653c1b37df" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvulkanfunctions&quot;&gt;QVulkanFunctions&lt;/a&gt; *QVulkanInstance::functions() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3479b630343751a3271c7c9a4d91607179220e1b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvulkaninfovector&quot;&gt;QVulkanInfoVector&lt;/a&gt;&amp;lt;&lt;a href=&quot;qvulkanextension&quot;&gt;QVulkanExtension&lt;/a&gt;&amp;gt; QVulkanInstance::supportedExtensions()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="945f04ebc7c5b9c0c3d6ab8e52fb8e1843ecb842" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvulkaninfovector&quot;&gt;QVulkanInfoVector&lt;/a&gt;&amp;lt;&lt;a href=&quot;qvulkanextension&quot;&gt;QVulkanExtension&lt;/a&gt;&amp;gt; QVulkanWindow::supportedDeviceExtensions()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22e220ca60a23eec6fb2e65445c6b659906b58a0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvulkaninfovector&quot;&gt;QVulkanInfoVector&lt;/a&gt;&amp;lt;&lt;a href=&quot;qvulkanlayer&quot;&gt;QVulkanLayer&lt;/a&gt;&amp;gt; QVulkanInstance::supportedLayers()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c36b97f04e96b901bcd3cd95a5018661fa4f99c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvulkaninstance&quot;&gt;QVulkanInstance&lt;/a&gt; *QWindow::vulkanInstance() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2434cdb73d9a94b431ec5d946dea7cf638dcb5d8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvulkaninstance&quot;&gt;QVulkanInstance&lt;/a&gt; automatically enables the minimum set of extensions it needs on the newly created instance. In practice this means the &lt;code&gt;VK_KHR_*_surface&lt;/code&gt; family of extensions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd77e3f7b929c0ba6b27377ebb7df1854e166600" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvulkaninstance#Flag-enum&quot;&gt;QVulkanInstance::Flags&lt;/a&gt; QVulkanInstance::flags() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="095d4c353d5c1bbc5afb7fc6cebbbb8398c27685" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvulkanwindow&quot;&gt;QVulkanWindow&lt;/a&gt; can be embedded into &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt;-based user interfaces via &lt;a href=&quot;qwidget#createWindowContainer&quot;&gt;QWidget::createWindowContainer&lt;/a&gt;(). This approach has a number of limitations, however. Make sure to study the &lt;a href=&quot;qwidget#createWindowContainer&quot;&gt;documentation&lt;/a&gt; first.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="267fc20647b6a034d8340e46a1117630a444e938" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvulkanwindow&quot;&gt;QVulkanWindow&lt;/a&gt; is a Vulkan-capable &lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt; that manages a Vulkan device, a graphics queue, a command pool and buffer, a depth-stencil image and a double-buffered FIFO swapchain, while taking care of correct behavior when it comes to events like resize, special situations like not having a device queue supporting both graphics and presentation, device lost scenarios, and additional functionality like reading the rendered content back. Conceptually it is the counterpart of &lt;a href=&quot;qopenglwindow&quot;&gt;QOpenGLWindow&lt;/a&gt; in the Vulkan world.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29a8f3e72498c9bf3e52d9ddee5f3af8841ad13f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvulkanwindow&quot;&gt;QVulkanWindow&lt;/a&gt; takes care of waiting for the device to become idle before and after invoking this function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f61938b53b0ebb4e5bd3f67537eb292cd919b9eb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qvulkanwindow#Flag-enum&quot;&gt;QVulkanWindow::Flags&lt;/a&gt; QVulkanWindow::flags() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="448447dfbd0a86bc71d186779bea52fa1ee1b1ac" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwaitcondition&quot;&gt;QWaitCondition&lt;/a&gt; allows a thread to tell other threads that some sort of condition has been met. One or many threads can block waiting for a &lt;a href=&quot;qwaitcondition&quot;&gt;QWaitCondition&lt;/a&gt; to set a condition with &lt;a href=&quot;qwaitcondition#wakeOne&quot;&gt;wakeOne&lt;/a&gt;() or &lt;a href=&quot;qwaitcondition#wakeAll&quot;&gt;wakeAll&lt;/a&gt;(). Use &lt;a href=&quot;qwaitcondition#wakeOne&quot;&gt;wakeOne&lt;/a&gt;() to wake one randomly selected thread or &lt;a href=&quot;qwaitcondition#wakeAll&quot;&gt;wakeAll&lt;/a&gt;() to wake them all.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c5675a28a9100e3e620bf7590537037019a8676" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwaitcondition&quot;&gt;QWaitCondition&lt;/a&gt; synchronizes threads not by enforcing mutual exclusion but by providing a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="421834d794d71395fcba461eb6f59fde3f5aa0b8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwaylandbufferref#QWaylandBufferRef&quot;&gt;QWaylandBufferRef&lt;/a&gt; &amp;amp;QWaylandBufferRef::operator=(const &lt;a href=&quot;qwaylandbufferref#QWaylandBufferRef&quot;&gt;QWaylandBufferRef&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="222884bffa264f5333a7ac815e83462da805a958" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwaylandclient&quot;&gt;QWaylandClient&lt;/a&gt; *QWaylandKeyboard::focusClient() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2549b4c58fbf08723b9d03b85fb0b1899f413b39" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwaylandcompositor&quot;&gt;QWaylandCompositor&lt;/a&gt; *QWaylandKeyboard::compositor() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ea188862d1977ad2b34236266798a1b155960b6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwaylandcompositor&quot;&gt;QWaylandCompositor&lt;/a&gt; *QWaylandOutput::compositor() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0414d48cdba4115e55ebf251132784161b2db387" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwaylandcompositor&quot;&gt;QWaylandCompositor&lt;/a&gt; *QWaylandPointer::compositor() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d072c0f48b0358eafc1a777c9f46a2843336f99" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwaylandcompositor&quot;&gt;QWaylandCompositor&lt;/a&gt; *QWaylandSeat::compositor() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e789062651007455b10962ad262873783ce3e816" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwaylandcompositor&quot;&gt;QWaylandCompositor&lt;/a&gt; *QWaylandSurface::compositor() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21d5555e2e529ec7aa1e5158b1bedf0bd687c7cd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwaylandcompositor&quot;&gt;QWaylandCompositor&lt;/a&gt; *QWaylandTouch::compositor() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70200f3a2da2e1c66b95fc5d8f945c7d01602604" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwaylandiviapplication&quot;&gt;QWaylandIviApplication&lt;/a&gt; corresponds to the Wayland &lt;code&gt;ivi_application&lt;/code&gt; interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0557c7fbc606763b3879a7af6fac597dc5eacee5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwaylandkeyboard&quot;&gt;QWaylandKeyboard&lt;/a&gt; *QWaylandSeat::keyboard() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e583a23d0ce469b48cc0e864d0d35fbb23bdf16" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwaylandoutput&quot;&gt;QWaylandOutput&lt;/a&gt; *QWaylandCompositor::outputFor(&lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt; *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="765c8f54e1da06437de903cf26cc4dc4a6912699" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwaylandoutput&quot;&gt;QWaylandOutput&lt;/a&gt; *QWaylandPointer::output() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29cb958b922f1c2a5ba18992d56d34fde0c2427a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwaylandoutputmode&quot;&gt;QWaylandOutputMode&lt;/a&gt; QWaylandOutput::currentMode() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc9eae14d754bbceef6150d395080e4f2fc003f6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwaylandoutputmode&quot;&gt;QWaylandOutputMode&lt;/a&gt; holds the resolution and refresh rate of an output. Resolution is expressed in pixels and refresh rate is measured in mHz.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b857aa9a9389aabbf473f43582b8690e0649e5c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwaylandpointer&quot;&gt;QWaylandPointer&lt;/a&gt; *QWaylandSeat::pointer() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="909f6ea14aa52e79e4c770427c5dce8e5e5f0358" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwaylandseat&quot;&gt;QWaylandSeat&lt;/a&gt; *QWaylandKeyboard::seat() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0e43b955df921fc3f267176f3f3fdf075b3b21f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwaylandseat&quot;&gt;QWaylandSeat&lt;/a&gt; *QWaylandPointer::seat() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e662f72e0e64150fc46cc71e0f329a1f9ee5617" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwaylandseat&quot;&gt;QWaylandSeat&lt;/a&gt; *QWaylandTouch::seat() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3211455369b74947b2eb4303c46c4942c250bda0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwaylandseat#CapabilityFlag-enum&quot;&gt;QWaylandSeat::CapabilityFlags&lt;/a&gt; QWaylandSeat::capabilities() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e522a4b8cd5d83e5ac9801671327d93e4d401252" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwaylandsurface&quot;&gt;QWaylandSurface&lt;/a&gt; *QWaylandKeyboard::focus() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="256fe80c04900f52c62dd377b35bf0efeaa54f01" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwaylandsurface&quot;&gt;QWaylandSurface&lt;/a&gt; *QWaylandSeat::keyboardFocus() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c7a21834bc1d9016ad2a2fbecd6474a54501dc1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwaylandsurface&quot;&gt;QWaylandSurface&lt;/a&gt; *QWaylandSurfaceGrabber::surface() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a44bf2da82557bc61ee8061a457a3c1012db29e6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwaylandsurface#Origin-enum&quot;&gt;QWaylandSurface::Origin&lt;/a&gt; QWaylandBufferRef::origin() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7a8002530f29f07dfba743a36bda2a7456a8ee0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwaylandtouch&quot;&gt;QWaylandTouch&lt;/a&gt; *QWaylandSeat::touch() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a33c507ba53f5ac7fc17a24d13e3405fe8c0074" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwaylandview&quot;&gt;QWaylandView&lt;/a&gt; *QWaylandPointer::mouseFocus() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e98e7fd10f121c91bc48d7c82c4e9233137ba7e7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwaylandview&quot;&gt;QWaylandView&lt;/a&gt; *QWaylandQuickItem::view() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d96a2de2764e4a7ed586054dd246cc884f9c5c6c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwaylandview&quot;&gt;QWaylandView&lt;/a&gt; *QWaylandSeat::mouseFocus() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="404a7d7041d2b58e7c4180d7baa2f5929ebd63db" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwaylandview&quot;&gt;QWaylandView&lt;/a&gt; *QWaylandSurface::primaryView() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8f20b26b1aac78b00021dcaab0c2c1301f53451" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwaylandviewporter&quot;&gt;QWaylandViewporter&lt;/a&gt; corresponds to the Wayland interface, &lt;code&gt;wp_viewporter&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a98828a331c741472b673060f60f1b62dce51b6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwaylandwlscaler&quot;&gt;QWaylandWlScaler&lt;/a&gt; corresponds to the Wayland interface, &lt;code&gt;wl_scaler&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a851f382d8faf35e56996bdb8b22ad22e493b980" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwaylandxdgdecorationmanagerv1&quot;&gt;QWaylandXdgDecorationManagerV1&lt;/a&gt; corresponds to the Wayland interface, &lt;code&gt;zxdg_decoration_manager_v1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4532f3e983af2fa27fa2884292b5c2cc6efd1c3c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwaylandxdgshell&quot;&gt;QWaylandXdgShell&lt;/a&gt; corresponds to the Wayland interface, &lt;code&gt;xdg_shell&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a029d55030f68cf9bd38f7093edcc8bb4d37126" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwaylandxdgshellv5&quot;&gt;QWaylandXdgShellV5&lt;/a&gt; corresponds to the Wayland interface &lt;code&gt;xdg_shell&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e75a702c2aa80075940ffab3b856d1cc953cdb1e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwaylandxdgshellv6&quot;&gt;QWaylandXdgShellV6&lt;/a&gt; corresponds to the Wayland interface, &lt;code&gt;zxdg_shell_v6&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9ebc4fb2b7d080061c7cf68d75652321a38a6f3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qweakpointer&quot;&gt;QWeakPointer&lt;/a&gt; also provides the &lt;a href=&quot;qweakpointer#data&quot;&gt;QWeakPointer::data&lt;/a&gt;() method that returns the tracked pointer without ensuring that it remains valid. This function is provided if you can guarantee by external means that the object will not get deleted (or if you only need the pointer value) and the cost of creating a &lt;a href=&quot;qsharedpointer&quot;&gt;QSharedPointer&lt;/a&gt; using &lt;a href=&quot;qweakpointer#toStrongRef&quot;&gt;toStrongRef&lt;/a&gt;() is too high.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cc51eeb1d7aa913a967bb663dffbf0666a44d9c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qweakpointer&quot;&gt;QWeakPointer&lt;/a&gt; objects can only be created by assignment from a &lt;a href=&quot;qsharedpointer&quot;&gt;QSharedPointer&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71a7f22b6815ecc49d7ae39d78b079b93cca1605" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qweakpointer&quot;&gt;QWeakPointer&lt;/a&gt;&amp;lt;T&amp;gt; QSharedPointer::toWeakRef() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e25e3395de1440fa94d0c65007b47d6f7e5382fd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qweakpointer#QWeakPointer&quot;&gt;QWeakPointer&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;QWeakPointer::operator=(const &lt;a href=&quot;qsharedpointer&quot;&gt;QSharedPointer&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfa5ab01921eca2437cc35356b9fae781bb6d83f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qweakpointer#QWeakPointer&quot;&gt;QWeakPointer&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;QWeakPointer::operator=(const &lt;a href=&quot;qweakpointer#QWeakPointer&quot;&gt;QWeakPointer&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8af87e7025389e63cb73cbdd5961ac5aa53b7383" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qweakpointer#QWeakPointer&quot;&gt;QWeakPointer&lt;/a&gt;&amp;lt;X&amp;gt; QWeakPointer::qWeakPointerCast(const &lt;a href=&quot;qweakpointer#QWeakPointer&quot;&gt;QWeakPointer&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fb2bd74f69fb7b912fa1bb62183baf9ca48fb76" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwebchannel&quot;&gt;QWebChannel&lt;/a&gt; *QWebEnginePage::webChannel() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e36f4f17f72b8c6a922acaf77a3738c1dc9824ef" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwebenginecertificateerror#Error-enum&quot;&gt;QWebEngineCertificateError::Error&lt;/a&gt; QWebEngineCertificateError::error() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bebc1747dc0033c764e070e6bdb9d39e3ab09f2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwebengineclientcertificatestore&quot;&gt;QWebEngineClientCertificateStore&lt;/a&gt; *QQuickWebEngineProfile::clientCertificateStore()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef09e5939699d116e9cc902d37e5eaca5cb46b08" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwebengineclientcertificatestore&quot;&gt;QWebEngineClientCertificateStore&lt;/a&gt; *QWebEngineProfile::clientCertificateStore()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bd2e566c33bcaedce782f7ada90035eb775b903" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwebenginecontextmenudata&quot;&gt;QWebEngineContextMenuData&lt;/a&gt; is returned by &lt;a href=&quot;qwebenginepage#contextMenuData&quot;&gt;QWebEnginePage::contextMenuData&lt;/a&gt;() after a context menu event, and contains information about where the context menu event took place. This is also in the context in which any context specific &lt;a href=&quot;qwebenginepage#WebAction-enum&quot;&gt;QWebEnginePage::WebAction&lt;/a&gt; will be performed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76eaebd8ac8e288152a57ddf8ca77cdcac4a9096" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwebenginecontextmenudata#EditFlag-enum&quot;&gt;QWebEngineContextMenuData::EditFlags&lt;/a&gt; QWebEngineContextMenuData::editFlags() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3df2a8c609af376f0cd5860cdade914159692f9a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwebenginecontextmenudata#MediaFlag-enum&quot;&gt;QWebEngineContextMenuData::MediaFlags&lt;/a&gt; QWebEngineContextMenuData::mediaFlags() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4011d321f04267fe4e012731a7524c8227fe529" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwebenginecontextmenudata#MediaType-enum&quot;&gt;QWebEngineContextMenuData::MediaType&lt;/a&gt; QWebEngineContextMenuData::mediaType() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b71230e34001c75f75f7b390616a51eb4850a12c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwebenginecontextmenudata#QWebEngineContextMenuData&quot;&gt;QWebEngineContextMenuData&lt;/a&gt; &amp;amp;QWebEngineContextMenuData::operator=(const &lt;a href=&quot;qwebenginecontextmenudata#QWebEngineContextMenuData&quot;&gt;QWebEngineContextMenuData&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb3db2f02601d7b7c4829cc49b079c2a7fa589f6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwebenginecookiestore&quot;&gt;QWebEngineCookieStore&lt;/a&gt; *QQuickWebEngineProfile::cookieStore() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dd9f15c896db363ec2e36cc8519006af48de840" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwebenginecookiestore&quot;&gt;QWebEngineCookieStore&lt;/a&gt; *QWebEngineProfile::cookieStore()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cece90ef589fd1b9733f49185a865d594810840" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwebenginedownloaditem&quot;&gt;QWebEngineDownloadItem&lt;/a&gt; models a download throughout its life cycle, starting with a pending download request and finishing with a completed download. It can be used, for example, to get information about new downloads, to monitor progress, and to pause, resume, and cancel downloads.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0287b7eb69373fc805d4b2d667b8ddfee776bcce" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwebenginedownloaditem#DownloadInterruptReason-enum&quot;&gt;QWebEngineDownloadItem::DownloadInterruptReason&lt;/a&gt; QWebEngineDownloadItem::interruptReason() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1b66346be219504802a876f45d3f8f714b1aee8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwebenginedownloaditem#DownloadState-enum&quot;&gt;QWebEngineDownloadItem::DownloadState&lt;/a&gt; QWebEngineDownloadItem::state() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="332e7c60bfc492a1887791578d73c58ea8da290c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwebenginedownloaditem#SavePageFormat-enum&quot;&gt;QWebEngineDownloadItem::SavePageFormat&lt;/a&gt; QWebEngineDownloadItem::savePageFormat() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0155934b849aee2d2267ea2b2d7a875fd551d24" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwebenginehistory&quot;&gt;QWebEngineHistory&lt;/a&gt; *QWebEnginePage::history() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4690da8e74dd1b2483c92d1e826739b642dc0d11" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwebenginehistory&quot;&gt;QWebEngineHistory&lt;/a&gt; *QWebEngineView::history() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faf7f5942a7aac83c4ae730fb1bc1ac747210008" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwebenginehistory&quot;&gt;QWebEngineHistory&lt;/a&gt;'s state can be saved to a &lt;a href=&quot;qdatastream&quot;&gt;QDataStream&lt;/a&gt; using the &amp;gt;&amp;gt; operator and loaded by using the &amp;lt;&amp;lt; operator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03fd4a415c90bcfc0867b8b9449e537c0a7a22e6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwebenginehistoryitem&quot;&gt;QWebEngineHistoryItem&lt;/a&gt; QWebEngineHistory::backItem() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd5d233ebf4a46aff3151204be7f9bee1f9a732f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwebenginehistoryitem&quot;&gt;QWebEngineHistoryItem&lt;/a&gt; QWebEngineHistory::currentItem() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="053ed5a223c921774799f94740197dcfaa293450" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwebenginehistoryitem&quot;&gt;QWebEngineHistoryItem&lt;/a&gt; QWebEngineHistory::forwardItem() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a63d41866f6896581aa888c5435c5956b0cd4255" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwebenginehistoryitem&quot;&gt;QWebEngineHistoryItem&lt;/a&gt; QWebEngineHistory::itemAt(int</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b784f27d2aaae88887bfbf5cbe8d9118108b4c1b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwebenginehistoryitem#QWebEngineHistoryItem&quot;&gt;QWebEngineHistoryItem&lt;/a&gt; &amp;amp;QWebEngineHistoryItem::operator=(const &lt;a href=&quot;qwebenginehistoryitem#QWebEngineHistoryItem&quot;&gt;QWebEngineHistoryItem&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a5e4d7a70e88f453c2bb5df908b5d462fc10091" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwebenginehttprequest&quot;&gt;QWebEngineHttpRequest&lt;/a&gt; represents an HTTP request in the &lt;a href=&quot;qml-qtwebengine-webengine&quot;&gt;WebEngine&lt;/a&gt; networking stack. It holds the information necessary to send a request over the network. It contains a URL and some ancillary information that can be used to modify the request. Both &lt;a href=&quot;qwebenginepage#load&quot;&gt;QWebEnginePage::load&lt;/a&gt;() and &lt;a href=&quot;qwebengineview#load&quot;&gt;QWebEngineView::load&lt;/a&gt;() accept a &lt;a href=&quot;qwebenginehttprequest&quot;&gt;QWebEngineHttpRequest&lt;/a&gt; as a parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9206362d863741e90de4c9ca07f52f6ba5525ec" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwebenginehttprequest#Method-enum&quot;&gt;QWebEngineHttpRequest::Method&lt;/a&gt; QWebEngineHttpRequest::method() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe7a4bb695d6b08d717e7e6008be7f877998f628" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwebenginehttprequest#QWebEngineHttpRequest&quot;&gt;QWebEngineHttpRequest&lt;/a&gt; &amp;amp;QWebEngineHttpRequest::operator=(const &lt;a href=&quot;qwebenginehttprequest#QWebEngineHttpRequest&quot;&gt;QWebEngineHttpRequest&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72ac625f0931d8545a66b83db4d1bef4a64d6de0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwebenginepage&quot;&gt;QWebEnginePage&lt;/a&gt; *QWebEngineDownloadItem::page() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d164b96f9a89c1b253dab9632173057ed9659e3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwebenginepage&quot;&gt;QWebEnginePage&lt;/a&gt; *QWebEngineView::page() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5196380008ba91ec33e33c7fabce861bccf337dc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwebenginepage&quot;&gt;QWebEnginePage&lt;/a&gt; also takes care of implementing the action, so that upon triggering the corresponding action is performed on the page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fd3bbc56a7263e66a42f169dcd7c290dc129e2f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwebenginepage&quot;&gt;QWebEnginePage&lt;/a&gt;'s API is very similar to &lt;a href=&quot;qwebengineview&quot;&gt;QWebEngineView&lt;/a&gt;, as you are still provided with common functions like &lt;a href=&quot;qwebenginepage#action&quot;&gt;action&lt;/a&gt;() (known as &lt;a href=&quot;qwebengineview#pageAction&quot;&gt;pageAction&lt;/a&gt;() in &lt;a href=&quot;qwebengineview&quot;&gt;QWebEngineView&lt;/a&gt;), &lt;a href=&quot;qwebenginepage#triggerAction&quot;&gt;triggerAction&lt;/a&gt;(), and &lt;a href=&quot;qwebenginepage#findText&quot;&gt;findText&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7129da9e66c36b115104c9e0d8449454ab8f437" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwebenginepage#QWebEnginePage&quot;&gt;QWebEnginePage&lt;/a&gt; *QWebEnginePage::devToolsPage() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc2c2c0ec246c230e63188107f91de95cf72a581" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwebenginepage#QWebEnginePage&quot;&gt;QWebEnginePage&lt;/a&gt; *QWebEnginePage::inspectedPage() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a2e50133180936d2f7f79ed81dde63413ffd6cd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwebengineprofile&quot;&gt;QWebEngineProfile&lt;/a&gt; *QWebEnginePage::profile() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aaced075edd43e347c4f6be221d5b0551dea5f5a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwebengineprofile#HttpCacheType-enum&quot;&gt;QWebEngineProfile::HttpCacheType&lt;/a&gt; QWebEngineProfile::httpCacheType() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54aacec797f9c8323df9536fc011b9d324a239eb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwebengineprofile#PersistentCookiesPolicy-enum&quot;&gt;QWebEngineProfile::PersistentCookiesPolicy&lt;/a&gt; QWebEngineProfile::persistentCookiesPolicy() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba2b65b9cd8384e222015add4616d234072f0422" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwebenginescript&quot;&gt;QWebEngineScript&lt;/a&gt; QWebEngineScriptCollection::findScript(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="543f0da3ecfda6bf30b99946835bf22106fd4520" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwebenginescript&quot;&gt;QWebEngineScript&lt;/a&gt; enables the programmatic injection of so called</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9da5cff10350d84ed48bb88d8439ac3f9370238" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwebenginescript#InjectionPoint-enum&quot;&gt;QWebEngineScript::InjectionPoint&lt;/a&gt; QWebEngineScript::injectionPoint() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b4d7c42ca2aecbacf711d4818f04c2cafa7494f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwebenginescript#QWebEngineScript&quot;&gt;QWebEngineScript&lt;/a&gt; &amp;amp;QWebEngineScript::operator=(const &lt;a href=&quot;qwebenginescript#QWebEngineScript&quot;&gt;QWebEngineScript&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="684680caefb2a4805e90befed8b9efd7c61f3ada" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwebenginescriptcollection&quot;&gt;QWebEngineScriptCollection&lt;/a&gt; &amp;amp;QWebEnginePage::scripts()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b3cea4d850a75b36514ec93a91d89f34d6e6a98" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwebenginescriptcollection&quot;&gt;QWebEngineScriptCollection&lt;/a&gt; *QWebEngineProfile::scripts() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db70211598b86bdc300a2deac4dd26cd350674d3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwebenginescriptcollection&quot;&gt;QWebEngineScriptCollection&lt;/a&gt; manages a set of user scripts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ff857b12db8758d4457693e0399b95f59731f49" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwebenginesettings&quot;&gt;QWebEngineSettings&lt;/a&gt; *QWebEnginePage::settings() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdbea63d4042bd53821a67b265f3af4a9aa3a4e7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwebenginesettings&quot;&gt;QWebEngineSettings&lt;/a&gt; *QWebEngineProfile::settings() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b9148923fdcc20c9d441c9d1a8bb751cf3264d7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwebenginesettings&quot;&gt;QWebEngineSettings&lt;/a&gt; *QWebEngineView::settings() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ef934c3b03752dd02da01fab6ce8df4f394ae44" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwebenginesettings&quot;&gt;QWebEngineSettings&lt;/a&gt; allows configuration of browser properties, such as font sizes and families, the location of a custom style sheet, and generic attributes, such as JavaScript support. Individual attributes are set using the &lt;a href=&quot;qwebenginesettings#setAttribute&quot;&gt;setAttribute&lt;/a&gt;() function. The &lt;a href=&quot;qwebenginesettings#WebAttribute-enum&quot;&gt;WebAttribute&lt;/a&gt; enum further describes each attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3570fe84e7f408433484dc73b1e55f768b913a42" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwebenginesettings#UnknownUrlSchemePolicy-enum&quot;&gt;QWebEngineSettings::UnknownUrlSchemePolicy&lt;/a&gt; QWebEngineSettings::unknownUrlSchemePolicy() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88ef2d1e39ab76a8c90e06dc6d87e381d666e1dd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwebengineurlrequestinfo#NavigationType-enum&quot;&gt;QWebEngineUrlRequestInfo::NavigationType&lt;/a&gt; QWebEngineUrlRequestInfo::navigationType() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42b78cd137770983a3a17a8f6db0bc24b5058175" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwebengineurlrequestinfo#ResourceType-enum&quot;&gt;QWebEngineUrlRequestInfo::ResourceType&lt;/a&gt; QWebEngineUrlRequestInfo::resourceType() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2557302190be5539cb8b1fd10e8cfe84ae86897c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwebengineurlscheme#Flag-enum&quot;&gt;QWebEngineUrlScheme::Flags&lt;/a&gt; QWebEngineUrlScheme::flags() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b6f27f44ee29c0e00b7887073fd9decc81e97ed" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwebengineurlscheme#QWebEngineUrlScheme&quot;&gt;QWebEngineUrlScheme&lt;/a&gt; &amp;amp;QWebEngineUrlScheme::operator=(&lt;a href=&quot;qwebengineurlscheme#QWebEngineUrlScheme&quot;&gt;QWebEngineUrlScheme&lt;/a&gt; &amp;amp;&amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78c7606b60e8416a142a85937509dae9bd033c63" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwebengineurlscheme#QWebEngineUrlScheme&quot;&gt;QWebEngineUrlScheme&lt;/a&gt; &amp;amp;QWebEngineUrlScheme::operator=(const &lt;a href=&quot;qwebengineurlscheme#QWebEngineUrlScheme&quot;&gt;QWebEngineUrlScheme&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f07aae7fefcd3b62f25bc3b84ab4c95fc6542568" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwebengineurlscheme#Syntax-enum&quot;&gt;QWebEngineUrlScheme::Syntax&lt;/a&gt; QWebEngineUrlScheme::syntax() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ced25c6ffd873b03edb3e0d8bb7e4ae0eb85eba" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwebsocket&quot;&gt;QWebSocket&lt;/a&gt; currently does not support WebSocket Extensions and WebSocket Subprotocols.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="453c83121c2ca5b58ba1172eff1c54273c5b79f8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwebsocket&quot;&gt;QWebSocket&lt;/a&gt; emits this signal after the SSL handshake to indicate that one or more errors have occurred while establishing the identity of the peer. The errors are usually an indication that &lt;a href=&quot;qwebsocket&quot;&gt;QWebSocket&lt;/a&gt; is unable to securely identify the peer. Unless any action is taken, the connection will be dropped after this signal has been emitted. If you want to continue connecting despite the errors that have occurred, you must call &lt;a href=&quot;qwebsocket#ignoreSslErrors&quot;&gt;QWebSocket::ignoreSslErrors&lt;/a&gt;() from inside a slot connected to this signal. If you need to access the error list at a later point, you can call sslErrors() (without arguments).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bc41714139acfd1395346955f5d52d36f4fae52" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwebsocket&quot;&gt;QWebSocket&lt;/a&gt; only supports version 13 of the WebSocket protocol, as outlined in &lt;a href=&quot;http://tools.ietf.org/html/rfc6455#&quot;&gt;RFC 6455&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28fd93ad4417f6371c1aa7045e08a3bdca38d78e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwebsocket&quot;&gt;QWebSocket&lt;/a&gt; socket;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c10f6fe5833cbf5d8f2507ba4c11737b861ecb7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwebsocketcorsauthenticator#QWebSocketCorsAuthenticator&quot;&gt;QWebSocketCorsAuthenticator&lt;/a&gt; &amp;amp;QWebSocketCorsAuthenticator::operator=(&lt;a href=&quot;qwebsocketcorsauthenticator#QWebSocketCorsAuthenticator&quot;&gt;QWebSocketCorsAuthenticator&lt;/a&gt; &amp;amp;&amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f749598fc27c500b2b5f03f6ec41cad3e90bfa20" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwebsocketcorsauthenticator#QWebSocketCorsAuthenticator&quot;&gt;QWebSocketCorsAuthenticator&lt;/a&gt; &amp;amp;QWebSocketCorsAuthenticator::operator=(const &lt;a href=&quot;qwebsocketcorsauthenticator#QWebSocketCorsAuthenticator&quot;&gt;QWebSocketCorsAuthenticator&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f35feb47a410c41e0e0a1316a078d69f352572c3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwebsocketprotocol#CloseCode-enum&quot;&gt;QWebSocketProtocol::CloseCode&lt;/a&gt; QWebSocket::closeCode() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d9283abf19e1ac092c6040ebbd025ddbeba03d2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwebsocketprotocol#CloseCode-enum&quot;&gt;QWebSocketProtocol::CloseCode&lt;/a&gt; QWebSocketServer::error() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91a86cc46b749cd16342e11f4518272d43030fd7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwebsocketprotocol#Version-enum&quot;&gt;QWebSocketProtocol::Version&lt;/a&gt; QWebSocket::version() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f70b761e90bfe3e2af241f2cd0b38575b5035c71" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwebsocketserver&quot;&gt;QWebSocketServer&lt;/a&gt; can emit this signal several times during the SSL handshake, before encryption has been established, to indicate that an error has occurred while establishing the identity of the peer. The</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77be215bd9d21b9e5b04ebb9f3a653a9ad2634c0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwebsocketserver&quot;&gt;QWebSocketServer&lt;/a&gt; currently does not support WebSocket Extensions and WebSocket Subprotocols.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e37e6d6fec4c7100f9bcbbb75e365eade61090d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwebsocketserver&quot;&gt;QWebSocketServer&lt;/a&gt; emits this signal after the SSL handshake to indicate that one or more errors have occurred while establishing the identity of the peer. The errors are usually an indication that &lt;a href=&quot;qwebsocketserver&quot;&gt;QWebSocketServer&lt;/a&gt; is unable to securely identify the peer. Unless any action is taken, the connection will be dropped after this signal has been emitted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b51acf7f8ff047a823bc4d2055dd3f62ec26acf0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwebsocketserver&quot;&gt;QWebSocketServer&lt;/a&gt; emits this signal when it negotiates a PSK ciphersuite, and therefore a PSK authentication is then required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="672567d333e0a94ef0dcdc392c89adf9481574c9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwebsocketserver&quot;&gt;QWebSocketServer&lt;/a&gt; only supports version 13 of the WebSocket protocol, as outlined in &lt;a href=&quot;http://tools.ietf.org/html/rfc6455#&quot;&gt;RFC 6455&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a7c5b5661b02df7b17a91dbc733c88675795771" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwebsocketserver&quot;&gt;QWebSocketServer&lt;/a&gt; will emit the &lt;a href=&quot;qwebsocketserver#error&quot;&gt;error&lt;/a&gt;() signal with the &lt;a href=&quot;qwebsocketprotocol#CloseCode-enum&quot;&gt;QWebSocketProtocol::CloseCodeAbnormalDisconnection&lt;/a&gt; close code when the maximum of connections has been reached. The WebSocket handshake will fail and the socket will be closed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72c9fc9d53460e54f4f0c4684d273b2ac9a6e606" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwebsocketserver#SslMode-enum&quot;&gt;QWebSocketServer::SslMode&lt;/a&gt; QWebSocketServer::secureMode() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="947c7295df6e1a16820f6b88a8cff5535e572d4e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwglnativecontext&quot;&gt;QWGLNativeContext&lt;/a&gt; is a value class that can be passed to &lt;a href=&quot;qopenglcontext#setNativeHandle&quot;&gt;QOpenGLContext::setNativeHandle&lt;/a&gt;(). When creating a &lt;a href=&quot;qopenglcontext&quot;&gt;QOpenGLContext&lt;/a&gt; with the native handle set, no new context will get created. Instead, the provided handles are used, without taking ownership. This allows wrapping a context created by an external framework or rendering engine. The typical usage will be similar to the following snippet:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5a9639f227db4a83d4175ef60d71a52f8b86289" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwhatsthis&quot;&gt;QWhatsThis&lt;/a&gt; provides a single window with an explanatory text that pops up when the user asks &quot;What's This?&quot;. The default way for users to ask the question is to move the focus to the relevant widget and press Shift+F1. The help text appears immediately; it goes away as soon as the user does something else. (Note that if there is a shortcut for Shift+F1, this mechanism will not work.) Some dialogs provide a &quot;?&quot; button that users can click to enter &quot;What's This?&quot; mode; they then click the relevant widget to pop up the &quot;What's This?&quot; window. It is also possible to provide a a menu option or toolbar button to switch into &quot;What's This?&quot; mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8da72fbc76537f1f98085cce779298c36551bb7a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwheelevent&quot;&gt;QWheelEvent&lt;/a&gt;s received by a &lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView&lt;/a&gt; are translated into QGraphicsSceneWheelEvents; it translates the &lt;a href=&quot;qwheelevent#globalPos&quot;&gt;QWheelEvent::globalPos&lt;/a&gt;() into item, scene, and screen coordinates (&lt;a href=&quot;qgraphicsscenewheelevent#pos&quot;&gt;pos&lt;/a&gt;(), &lt;a href=&quot;qgraphicsscenewheelevent#scenePos&quot;&gt;scenePos&lt;/a&gt;(), and &lt;a href=&quot;qgraphicsscenewheelevent#screenPos&quot;&gt;screenPos&lt;/a&gt;()).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="807bb2d189fa61768c4da02e69c5f35e0f646f31" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; *QAction::parentWidget() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a42dd96189f5a9d50b0ab70fdc84a67bfbf4ca38" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; *QCompleter::widget() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="979ad4e256e2c1959cb37c3311dc8462cee7732c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; *QDataWidgetMapper::mappedWidgetAt(int</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7576c598f52b9ff05132290416f71a26af100e0d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; *QDesignerFormEditorInterface::topLevel() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fff036e2d931c713cb7e292480440f3dfde2b3c7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; *QFormLayout::labelForField(&lt;a href=&quot;qlayout#QLayout&quot;&gt;QLayout&lt;/a&gt; *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f18d8034d9148e4c8efa859c0e118163c9d17c3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; *QFormLayout::labelForField(&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e70058f90f579753692ad1fd382e77f79778b6bb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; *QGestureEvent::widget() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a687457a16a30ee854c0d34c99f7f393634d4179" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; *QGraphicsProxyWidget::widget() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="766a4679bff4fd2b57bf0bba4e63161785d0e6e8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; *QGraphicsSceneDragDropEvent::source() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d0392a374645207502bab02d39a693d8283b54b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; *QGraphicsSceneEvent::widget() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73fc571c6e62b9988749de3d0abafbf222ea03ff" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; *QLayout::menuBar() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15c6b2d30b519113f1432430d7e6a100e1c5dfe0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; *QLayout::parentWidget() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f651c5503c7dc66e54013616b9ce8aa6ad04f4f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; *QShortcut::parentWidget() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="614f845ec1b8c62ab3a3b91923f6586486d2ace9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; *QStackedLayout::currentWidget() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba24005c2945c5eaaf3c0bb74f126c23e9ec0b98" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; *QStackedLayout::widget(int</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2f3b4b777eb0b279d8e103864a6b81b9cd08130" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; *QUiLoader::load(&lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt; *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c72ddf1d08a0887933ea58208f86e3f2a6252b6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; *QWebEnginePage::view() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d3e0dabfe068cb1bf247c846a1c29f51e84a099" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; *QWidgetAction::defaultWidget() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc60f0c3f3d01b72035099682cc6b09afa0033db" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; *QWidgetAction::requestWidget(&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01fc61c46f94a2157f0ad0448cf66fe1c9f570c0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; and &lt;a href=&quot;qaxbase&quot;&gt;QAxBase&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5626be2c909c01ce5268c3940ec7bbcc57ed4029" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; and &lt;a href=&quot;qmediabindableinterface&quot;&gt;QMediaBindableInterface&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bde507b2bf2699c8b9a768db99e23be003e81b6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; and &lt;code&gt;Ui::CalculatorForm&lt;/code&gt;, as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09e0e6bc071bcd897111dbc0d5dad5d1e189d9c1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; calls this function after it has been fully constructed but before it is shown the very first time. You can call this function if you want to ensure that the widget is polished before doing an operation, e.g., the correct font size might be needed in the widget's &lt;a href=&quot;qwidget#sizeHint-prop&quot;&gt;sizeHint&lt;/a&gt;() reimplementation. Note that this function</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc605cfd84f81474c805fc6f161b553109732797" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; has many member functions, but some of them have little direct functionality; for example, &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; has a font property, but never uses this itself. There are many subclasses which provide real functionality, such as &lt;a href=&quot;qlabel&quot;&gt;QLabel&lt;/a&gt;, &lt;a href=&quot;qpushbutton&quot;&gt;QPushButton&lt;/a&gt;, &lt;a href=&quot;qlistwidget&quot;&gt;QListWidget&lt;/a&gt;, and &lt;a href=&quot;qtabwidget&quot;&gt;QTabWidget&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14e818dfda0377fc8fcfb93b83d6b73350c25242" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; is hidden by default until you call &lt;a href=&quot;qgraphicsitem#show&quot;&gt;show&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d020a260bc486cea629496ade1414afcb1091a8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; propagates explicit font properties from parent to child. If you change a specific property on a font and assign that font to a widget, that property will propagate to all the widget's children, overriding any system defaults for that property. Note that fonts by default don't propagate to windows (see &lt;a href=&quot;qwidget#isWindow&quot;&gt;isWindow&lt;/a&gt;()) unless the &lt;a href=&quot;qt#WidgetAttribute-enum&quot;&gt;Qt::WA_WindowPropagation&lt;/a&gt; attribute is enabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8de24508f9e3adb1dc114a0ac085822b60f6eb16" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; propagates explicit palette roles from parent to child. If you assign a brush or color to a specific role on a palette and assign that palette to a widget, that role will propagate to all the widget's children, overriding any system defaults for that role. Note that palettes by default don't propagate to windows (see &lt;a href=&quot;qwidget#isWindow&quot;&gt;isWindow&lt;/a&gt;()) unless the &lt;a href=&quot;qt#WidgetAttribute-enum&quot;&gt;Qt::WA_WindowPropagation&lt;/a&gt; attribute is enabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ee9b76def115221d2a373da4dbd444fd9ba5675" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; provides several functions that deal with a widget's geometry. Some of these functions operate on the pure client area (i.e. the window excluding the window frame), others include the window frame. The differentiation is done in a way that covers the most common usage transparently.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c4b042581ba23fabe1400483acb3088be829ab4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; state</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56dfd2404b7bd99f40292d6edaff84ffd6effa0a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; takes ownership of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75af9b99dc236fdc9d99749e255b64a6bb60e343" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; uses integer geometry (&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt;, &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69bf1853131a269fcb2cab20d1178bdd69dd23d0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt;'s font propagation is similar to its palette propagation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68551fb98c6edd9a2c1c8e592019317ef34c614a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt;'s palette propagation is similar to its font propagation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1121fd8c30791ecbc1b03bb5937f28af073763a0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt;, the fundamental class of the Qt Widgets module, extends the parent-child relationship. A child normally also becomes a child widget, i.e. it is displayed in its parent's coordinate system and is graphically clipped by its parent's boundaries. For example, when the application deletes a message box after it has been closed, the message box's buttons and label are also deleted, just as we'd want, because the buttons and label are children of the message box.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3aa6603705cd3feb17ba4429c9b7d6607c16c1e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwidget#QWidget&quot;&gt;QWidget&lt;/a&gt; *QAbstractItemView::indexWidget(const &lt;a href=&quot;qmodelindex&quot;&gt;QModelIndex&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bed8b46651f0fefd33642d8aaf8c47b77d6bd1fe" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwidget#QWidget&quot;&gt;QWidget&lt;/a&gt; *QAbstractScrollArea::cornerWidget() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7a9b5c62f6f24636942012313d8943859947e6a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwidget#QWidget&quot;&gt;QWidget&lt;/a&gt; *QAbstractScrollArea::viewport() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d904a0b668cef6db0c5e3fb68aa9a5017dbf06d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwidget#QWidget&quot;&gt;QWidget&lt;/a&gt; *QColumnView::previewWidget() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="145ab387738d0c1b03deeff3b184a6603901b962" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwidget#QWidget&quot;&gt;QWidget&lt;/a&gt; *QDockWidget::titleBarWidget() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58a1bf95542b947b27858511a298303a64316e3d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwidget#QWidget&quot;&gt;QWidget&lt;/a&gt; *QDockWidget::widget() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="951e677a1d66c0fc709f0a9974dd8c25fff03792" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwidget#QWidget&quot;&gt;QWidget&lt;/a&gt; *QFocusFrame::widget() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba909914ae75e451ec23db795ca419b01f33e28e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwidget#QWidget&quot;&gt;QWidget&lt;/a&gt; *QLabel::buddy() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea5c7e1e8626930669200a76ef617d0d61668498" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwidget#QWidget&quot;&gt;QWidget&lt;/a&gt; *QListWidget::itemWidget(&lt;a href=&quot;qlistwidgetitem&quot;&gt;QListWidgetItem&lt;/a&gt; *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31bfd93923eb38771395f7cc73b7e8b8e028346c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwidget#QWidget&quot;&gt;QWidget&lt;/a&gt; *QMainWindow::centralWidget() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e098bf6c7c3d9bbe443a39361cd1abc07e84d47a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwidget#QWidget&quot;&gt;QWidget&lt;/a&gt; *QMainWindow::menuWidget() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b94a3443a7b0af9fdea26ddc11a35c131832043" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwidget#QWidget&quot;&gt;QWidget&lt;/a&gt; *QMainWindow::takeCentralWidget()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fba598aacbb5ee95618a1def6928d4f8f1d70f0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwidget#QWidget&quot;&gt;QWidget&lt;/a&gt; *QMdiSubWindow::widget() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e566b8e495a3b3696e7634ca1447e853809af70" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwidget#QWidget&quot;&gt;QWidget&lt;/a&gt; *QMenuBar::cornerWidget(&lt;a href=&quot;qt#Corner-enum&quot;&gt;Qt::Corner&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd3a63e2c25f1b8e2c02886ab3d701184b161d6d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwidget#QWidget&quot;&gt;QWidget&lt;/a&gt; *QScrollArea::takeWidget()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0315bfa965617f9bf9d0057b2923fa43a0a0d12e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwidget#QWidget&quot;&gt;QWidget&lt;/a&gt; *QScrollArea::widget() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a646e2d36ce2b255545a734a4a4818bae7f0bd4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwidget#QWidget&quot;&gt;QWidget&lt;/a&gt; *QSplitter::replaceWidget(int</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6276974dc9333e5955b0d009ba58b9ebb9975de1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwidget#QWidget&quot;&gt;QWidget&lt;/a&gt; *QSplitter::widget(int</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ae458aeb84eb1575fcb156075aad406beab1e2a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwidget#QWidget&quot;&gt;QWidget&lt;/a&gt; *QStackedWidget::currentWidget() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5eec759c11fd1b15bee5b2c2362b314422633e6f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwidget#QWidget&quot;&gt;QWidget&lt;/a&gt; *QStackedWidget::widget(int</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e8f78993d57a7cd7f02e8327d98f7dffd3094ca" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwidget#QWidget&quot;&gt;QWidget&lt;/a&gt; *QTabBar::tabButton(int</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53003fab0f6ca302dbb146dc0631e25daabed4f0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwidget#QWidget&quot;&gt;QWidget&lt;/a&gt; *QTabWidget::cornerWidget(&lt;a href=&quot;qt#Corner-enum&quot;&gt;Qt::Corner&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="245d9a0f867c2b6e6dc2fb3212a0390777e72441" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwidget#QWidget&quot;&gt;QWidget&lt;/a&gt; *QTabWidget::currentWidget() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="596a56b831b43a12d3f9260a500b6f7f97370420" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwidget#QWidget&quot;&gt;QWidget&lt;/a&gt; *QTabWidget::widget(int</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="956bcbecd78fb922f909ed849df6d7844c05df8b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwidget#QWidget&quot;&gt;QWidget&lt;/a&gt; *QTableWidget::cellWidget(int</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fde13ca2bdfc5c804cda987bc0d900c9b5046444" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwidget#QWidget&quot;&gt;QWidget&lt;/a&gt; *QToolBar::widgetForAction(&lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="419faec22047d88adbcad7d4428c4ad0f7d40daa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwidget#QWidget&quot;&gt;QWidget&lt;/a&gt; *QToolBox::currentWidget() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ef00676fd82f4657dd99acfcb0d21313b751d7c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwidget#QWidget&quot;&gt;QWidget&lt;/a&gt; *QToolBox::widget(int</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcfd678d2594fc1255381f0cc4c87c14866cf99c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwidget#QWidget&quot;&gt;QWidget&lt;/a&gt; *QTreeWidget::itemWidget(&lt;a href=&quot;qtreewidgetitem&quot;&gt;QTreeWidgetItem&lt;/a&gt; *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="232e0f9dd977253e5ad8c7c499d79d36e8f22f55" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwidget#QWidget&quot;&gt;QWidget&lt;/a&gt; *QWidget::childAt(const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1bcd0e94d2df533521bdc84aa17c341097b05cc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwidget#QWidget&quot;&gt;QWidget&lt;/a&gt; *QWidget::childAt(int</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a87fc623a5dc2b57062c125e95a63ac2e69f932" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwidget#QWidget&quot;&gt;QWidget&lt;/a&gt; *QWidget::focusProxy() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="839080d532a859245e0dd0f7f4c1e0de8301c60f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwidget#QWidget&quot;&gt;QWidget&lt;/a&gt; *QWidget::focusWidget() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98ab22cc4651fcf3d87ca2d4c40748331e6a745f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwidget#QWidget&quot;&gt;QWidget&lt;/a&gt; *QWidget::nativeParentWidget() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba1da3ed13b79f53b2a541223fe52e33ee4c77b4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwidget#QWidget&quot;&gt;QWidget&lt;/a&gt; *QWidget::nextInFocusChain() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71e278dcf5fdef54e12a7efd6dff2f146bc30405" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwidget#QWidget&quot;&gt;QWidget&lt;/a&gt; *QWidget::parentWidget() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c656e7f24606ed30073bb6145cdc8e8e6970cc65" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwidget#QWidget&quot;&gt;QWidget&lt;/a&gt; *QWidget::previousInFocusChain() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d872b3e7ef73f747e38a1f043cbd40e7ef884199" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwidget#QWidget&quot;&gt;QWidget&lt;/a&gt; *QWidget::window() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01ed8ce8134d74931c31a68e0595b9db57ed8b30" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwidget#QWidget&quot;&gt;QWidget&lt;/a&gt; *QWizard::sideWidget() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b379d37db5c476a81eda589d8dbf19b603b688ca" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwidget#closeEvent&quot;&gt;closeEvent&lt;/a&gt;() is called when the user closes the widget (or when &lt;a href=&quot;qwidget#close&quot;&gt;close&lt;/a&gt;() is called).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d642641ba82817617017c0f81afc45d4cabb9664" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwidget#contextMenuPolicy-prop&quot;&gt;contextMenuPolicy&lt;/a&gt;, &lt;a href=&quot;qwidget#contextMenuEvent&quot;&gt;contextMenuEvent&lt;/a&gt;(), &lt;a href=&quot;qwidget#customContextMenuRequested&quot;&gt;customContextMenuRequested&lt;/a&gt;(), &lt;a href=&quot;qwidget#actions&quot;&gt;actions&lt;/a&gt;()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71c4f22232e4713ff390a9f41058a35aabc823c6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwidget#enabled-prop&quot;&gt;isEnabled&lt;/a&gt;() indicates whether the button can be pressed by the user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f58ccaac0027bac7599b72f276d455c95d96d5d3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwidget#enterEvent&quot;&gt;enterEvent&lt;/a&gt;() is called when the mouse enters the widget's screen space. (This excludes screen space owned by any of the widget's children.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31c76fe9443dc1e7f78da17614b02446d579895a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwidget#event&quot;&gt;event&lt;/a&gt;(), &lt;a href=&quot;qwidget#mousePressEvent&quot;&gt;mousePressEvent&lt;/a&gt;(), &lt;a href=&quot;qwidget#mouseReleaseEvent&quot;&gt;mouseReleaseEvent&lt;/a&gt;(), &lt;a href=&quot;qwidget#mouseDoubleClickEvent&quot;&gt;mouseDoubleClickEvent&lt;/a&gt;(), &lt;a href=&quot;qwidget#mouseMoveEvent&quot;&gt;mouseMoveEvent&lt;/a&gt;(), &lt;a href=&quot;qwidget#keyPressEvent&quot;&gt;keyPressEvent&lt;/a&gt;(), &lt;a href=&quot;qwidget#keyReleaseEvent&quot;&gt;keyReleaseEvent&lt;/a&gt;(), &lt;a href=&quot;qwidget#focusInEvent&quot;&gt;focusInEvent&lt;/a&gt;(), &lt;a href=&quot;qwidget#focusOutEvent&quot;&gt;focusOutEvent&lt;/a&gt;(), &lt;a href=&quot;qwidget#wheelEvent&quot;&gt;wheelEvent&lt;/a&gt;(), &lt;a href=&quot;qwidget#enterEvent&quot;&gt;enterEvent&lt;/a&gt;(), &lt;a href=&quot;qwidget#leaveEvent&quot;&gt;leaveEvent&lt;/a&gt;(), &lt;a href=&quot;qwidget#paintEvent&quot;&gt;paintEvent&lt;/a&gt;(), &lt;a href=&quot;qwidget#moveEvent&quot;&gt;moveEvent&lt;/a&gt;(), &lt;a href=&quot;qwidget#resizeEvent&quot;&gt;resizeEvent&lt;/a&gt;(), &lt;a href=&quot;qwidget#closeEvent&quot;&gt;closeEvent&lt;/a&gt;(), &lt;a href=&quot;qwidget#dragEnterEvent&quot;&gt;dragEnterEvent&lt;/a&gt;(), &lt;a href=&quot;qwidget#dragMoveEvent&quot;&gt;dragMoveEvent&lt;/a&gt;(), &lt;a href=&quot;qwidget#dragLeaveEvent&quot;&gt;dragLeaveEvent&lt;/a&gt;(), &lt;a href=&quot;qwidget#dropEvent&quot;&gt;dropEvent&lt;/a&gt;(), &lt;a href=&quot;qobject#childEvent&quot;&gt;childEvent&lt;/a&gt;(), &lt;a href=&quot;qwidget#showEvent&quot;&gt;showEvent&lt;/a&gt;(), &lt;a href=&quot;qwidget#hideEvent&quot;&gt;hideEvent&lt;/a&gt;(), &lt;a href=&quot;qobject#customEvent&quot;&gt;customEvent&lt;/a&gt;(). &lt;a href=&quot;qwidget#changeEvent&quot;&gt;changeEvent&lt;/a&gt;(),</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41db9c22b31572e115721ed475c1a2e6a0896051" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwidget#focus-prop&quot;&gt;focus&lt;/a&gt;, &lt;a href=&quot;qwidget#focusPolicy-prop&quot;&gt;focusPolicy&lt;/a&gt;, &lt;a href=&quot;qwidget#setFocus-1&quot;&gt;setFocus&lt;/a&gt;(), &lt;a href=&quot;qwidget#clearFocus&quot;&gt;clearFocus&lt;/a&gt;(), &lt;a href=&quot;qwidget#setTabOrder&quot;&gt;setTabOrder&lt;/a&gt;(), &lt;a href=&quot;qwidget#setFocusProxy&quot;&gt;setFocusProxy&lt;/a&gt;(), &lt;a href=&quot;qwidget#focusNextChild&quot;&gt;focusNextChild&lt;/a&gt;(), &lt;a href=&quot;qwidget#focusPreviousChild&quot;&gt;focusPreviousChild&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8801d07f28890bbc9a081a980f8a7a4fcd48b666" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwidget#focusInEvent&quot;&gt;focusInEvent&lt;/a&gt;() is called when the widget gains keyboard focus (assuming you have called &lt;a href=&quot;qwidget#focusPolicy-prop&quot;&gt;setFocusPolicy&lt;/a&gt;()). Well-behaved widgets indicate that they own the keyboard focus in a clear but discreet way.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df82f2211270157f3bf6bfa0790636dad1cc1177" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwidget#focusOutEvent&quot;&gt;focusOutEvent&lt;/a&gt;() is called when the widget loses keyboard focus.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d949ac4d419f5a77b6120b1b62ffdd658db6febd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwidget#fontInfo&quot;&gt;QWidget::fontInfo&lt;/a&gt;() returns the font info for a widget's font. This is equivalent to calling &lt;a href=&quot;qfontinfo&quot;&gt;QFontInfo&lt;/a&gt;(widget-&amp;gt;&lt;a href=&quot;stylesheet-reference#font&quot;&gt;font&lt;/a&gt;()). If the widget's font is changed later, the font info object is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2245f06f20add60f4be81d7a5a165f689ea19568" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwidget#fontMetrics&quot;&gt;QWidget::fontMetrics&lt;/a&gt;() returns the font metrics for a widget's font. This is equivalent to &lt;a href=&quot;qfontmetrics&quot;&gt;QFontMetrics&lt;/a&gt;(widget-&amp;gt;&lt;a href=&quot;stylesheet-reference#font&quot;&gt;font&lt;/a&gt;()). If the widget's font is changed later, the font metrics object is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4718121c8cb0de504c05b298ce6f9aba2ae4725f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwidget#getContentsMargins&quot;&gt;QWidget::getContentsMargins&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qwidget#getContentsMargins&quot;&gt;QWidget::getContentsMargins&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="b37f8a7e3a590e3f7aee5fd95ed5627354fe5953" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwidget#grabMouse&quot;&gt;grabMouse&lt;/a&gt;(), &lt;a href=&quot;qwidget#releaseMouse&quot;&gt;releaseMouse&lt;/a&gt;(), &lt;a href=&quot;qwidget#grabKeyboard&quot;&gt;grabKeyboard&lt;/a&gt;(), &lt;a href=&quot;qwidget#releaseKeyboard&quot;&gt;releaseKeyboard&lt;/a&gt;(), &lt;a href=&quot;qwidget#mouseGrabber&quot;&gt;mouseGrabber&lt;/a&gt;(), &lt;a href=&quot;qwidget#keyboardGrabber&quot;&gt;keyboardGrabber&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99ce6b45870a8e8471f3e8f20150c2ee928382b0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwidget#hide&quot;&gt;hide&lt;/a&gt;() or &lt;a href=&quot;qwidget#visible-prop&quot;&gt;setVisible&lt;/a&gt;(false) was called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="941e47a2d5473f38e13c745d7a942a44765a376a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwidget#keyPressEvent&quot;&gt;keyPressEvent&lt;/a&gt;() is called whenever a key is pressed, and again when a key has been held down long enough for it to auto-repeat. The &lt;b&gt;Tab&lt;/b&gt; and &lt;b&gt;Shift+Tab&lt;/b&gt; keys are only passed to the widget if they are not used by the focus-change mechanisms. To force those keys to be processed by your widget, you must reimplement &lt;a href=&quot;qwidget#event&quot;&gt;QWidget::event&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b284e1eb8ce5b2eefeb511b8253dfe86e991a6fe" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwidget#keyReleaseEvent&quot;&gt;keyReleaseEvent&lt;/a&gt;() is called whenever a key is released and while it is held down (if the key is auto-repeating). In that case, the widget will receive a pair of key release and key press event for every repeat. The &lt;b&gt;Tab&lt;/b&gt; and &lt;b&gt;Shift+Tab&lt;/b&gt; keys are only passed to the widget if they are not used by the focus-change mechanisms. To force those keys to be processed by your widget, you must reimplement &lt;a href=&quot;qwidget#event&quot;&gt;QWidget::event&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="841ea1e2c3eb9e368bd47a8b2a281e2a1723baa8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwidget#leaveEvent&quot;&gt;leaveEvent&lt;/a&gt;() is called when the mouse leaves the widget's screen space. If the mouse enters a child widget it will not cause a &lt;a href=&quot;qwidget#leaveEvent&quot;&gt;leaveEvent&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77634ef79546390fe9a8214a2847ff7b4d11abff" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwidget#mouseDoubleClickEvent&quot;&gt;mouseDoubleClickEvent&lt;/a&gt;() is called when the user double-clicks in the widget. If the user double-clicks, the widget receives a mouse press event, a mouse release event, (a mouse click event,) a second mouse press, this event and finally a second mouse release event. (Some mouse move events may also be received if the mouse is not held steady during this operation.) It is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="193bbe49dbeae181190847a0bf035d13fbfe6d8c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwidget#mouseMoveEvent&quot;&gt;mouseMoveEvent&lt;/a&gt;() is called whenever the mouse moves while a mouse button is held down. This can be useful during drag and drop operations. If you call &lt;a href=&quot;qwidget#mouseTracking-prop&quot;&gt;setMouseTracking&lt;/a&gt;(true), you get mouse move events even when no buttons are held down. (See also the &lt;a href=&quot;graphicsview#drag-and-drop&quot;&gt;Drag and Drop&lt;/a&gt; guide.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39fb2a36d995eb2c5ed2d3f959e042d3c1c43a08" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwidget#mousePressEvent&quot;&gt;mousePressEvent&lt;/a&gt;() is called when a mouse button is pressed while the mouse cursor is inside the widget, or when the widget has grabbed the mouse using &lt;a href=&quot;qwidget#grabMouse&quot;&gt;grabMouse&lt;/a&gt;(). Pressing the mouse without releasing it is effectively the same as calling &lt;a href=&quot;qwidget#grabMouse&quot;&gt;grabMouse&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="861553027f0f57bd34a4f808fb30d0474d0e6526" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwidget#mouseReleaseEvent&quot;&gt;mouseReleaseEvent&lt;/a&gt;() is called when a mouse button is released. A widget receives mouse release events when it has received the corresponding mouse press event. This means that if the user presses the mouse inside</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da7d935857bfdfca22bd22f639749c6088128e81" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwidget#moveEvent&quot;&gt;moveEvent&lt;/a&gt;() is called when the widget has been moved relative to its parent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="662978dbb16369107e12e96ce243eea2a0935206" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwidget#paintEvent&quot;&gt;paintEvent&lt;/a&gt;() is called whenever the widget needs to be repainted. Every widget displaying custom content must implement it. Painting using a &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; can only take place in a &lt;a href=&quot;qwidget#paintEvent&quot;&gt;paintEvent&lt;/a&gt;() or a function called by a &lt;a href=&quot;qwidget#paintEvent&quot;&gt;paintEvent&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5357193e59c5e24d547e09435e6949194a685b7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwidget#parentWidget&quot;&gt;parentWidget&lt;/a&gt;(), &lt;a href=&quot;qwidget#window&quot;&gt;window&lt;/a&gt;(), &lt;a href=&quot;qwidget#setParent&quot;&gt;setParent&lt;/a&gt;(), &lt;a href=&quot;qwidget#winId&quot;&gt;winId&lt;/a&gt;(), &lt;a href=&quot;qwidget#find&quot;&gt;find&lt;/a&gt;(), &lt;a href=&quot;qwidget#metric&quot;&gt;metric&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8be384796a75d9cf6564988545c832ed6a733140" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwidget#pos-prop&quot;&gt;pos&lt;/a&gt;, &lt;a href=&quot;qwidget#x-prop&quot;&gt;x&lt;/a&gt;(), &lt;a href=&quot;qwidget#y-prop&quot;&gt;y&lt;/a&gt;(), &lt;a href=&quot;qwidget#rect-prop&quot;&gt;rect&lt;/a&gt;, &lt;a href=&quot;qwidget#size-prop&quot;&gt;size&lt;/a&gt;, &lt;a href=&quot;qwidget#width-prop&quot;&gt;width&lt;/a&gt;(), &lt;a href=&quot;qwidget#height-prop&quot;&gt;height&lt;/a&gt;(), &lt;a href=&quot;qwidget#pos-prop&quot;&gt;move&lt;/a&gt;(), &lt;a href=&quot;qwidget#size-prop&quot;&gt;resize&lt;/a&gt;(), &lt;a href=&quot;qwidget#sizePolicy-prop&quot;&gt;sizePolicy&lt;/a&gt;, &lt;a href=&quot;qwidget#sizeHint-prop&quot;&gt;sizeHint&lt;/a&gt;(), &lt;a href=&quot;qwidget#minimumSizeHint-prop&quot;&gt;minimumSizeHint&lt;/a&gt;(), &lt;a href=&quot;qwidget#updateGeometry&quot;&gt;updateGeometry&lt;/a&gt;(), &lt;a href=&quot;qwidget#layout&quot;&gt;layout&lt;/a&gt;(), &lt;a href=&quot;qwidget#frameGeometry-prop&quot;&gt;frameGeometry&lt;/a&gt;, &lt;a href=&quot;qwidget#geometry-prop&quot;&gt;geometry&lt;/a&gt;, &lt;a href=&quot;qwidget#childrenRect-prop&quot;&gt;childrenRect&lt;/a&gt;, &lt;a href=&quot;qwidget#childrenRegion-prop&quot;&gt;childrenRegion&lt;/a&gt;, &lt;a href=&quot;qwidget#adjustSize&quot;&gt;adjustSize&lt;/a&gt;(), &lt;a href=&quot;qwidget#mapFromGlobal&quot;&gt;mapFromGlobal&lt;/a&gt;(), &lt;a href=&quot;qwidget#mapToGlobal&quot;&gt;mapToGlobal&lt;/a&gt;(), &lt;a href=&quot;qwidget#mapFromParent&quot;&gt;mapFromParent&lt;/a&gt;(), &lt;a href=&quot;qwidget#mapToParent&quot;&gt;mapToParent&lt;/a&gt;(), &lt;a href=&quot;qwidget#maximumSize-prop&quot;&gt;maximumSize&lt;/a&gt;, &lt;a href=&quot;qwidget#minimumSize-prop&quot;&gt;minimumSize&lt;/a&gt;, &lt;a href=&quot;qwidget#sizeIncrement-prop&quot;&gt;sizeIncrement&lt;/a&gt;, &lt;a href=&quot;qwidget#baseSize-prop&quot;&gt;baseSize&lt;/a&gt;, &lt;a href=&quot;qwidget#setFixedSize&quot;&gt;setFixedSize&lt;/a&gt;()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fdd9a6f55bd2782d9cf1f085ec6a4bb31a1be96" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwidget#repaint&quot;&gt;repaint&lt;/a&gt;() or &lt;a href=&quot;qwidget#update&quot;&gt;update&lt;/a&gt;() was invoked,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ecc17ed2cf56d6e72764667d7a6e247a9379416" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwidget#resizeEvent&quot;&gt;resizeEvent&lt;/a&gt;() is called when the widget has been resized.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c0c8728c6f759e9fe752398faa9518b691714e1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwidget#setFocus-1&quot;&gt;setFocus&lt;/a&gt;() gives focus to a widget regardless of its focus policy, but does not clear any keyboard grab (see &lt;a href=&quot;qwidget#grabKeyboard&quot;&gt;grabKeyboard&lt;/a&gt;()).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ffa66dbb88d4581eab8c0bc338f8c12d77fe76a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwidget#show&quot;&gt;show&lt;/a&gt;(), &lt;a href=&quot;qwidget#hide&quot;&gt;hide&lt;/a&gt;(), &lt;a href=&quot;qwidget#raise&quot;&gt;raise&lt;/a&gt;(), &lt;a href=&quot;qwidget#lower&quot;&gt;lower&lt;/a&gt;(), &lt;a href=&quot;qwidget#close&quot;&gt;close&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e41ea311153f3cd40f467fa1c426eab1401d81ad" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwidget#sizeHint-prop&quot;&gt;QWidget::sizeHint&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qwidget#sizeHint-prop&quot;&gt;QWidget::sizeHint&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="366785b6eaf1d8112b16e142ddfdcd0782d666c3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwidget#style&quot;&gt;style&lt;/a&gt;(), &lt;a href=&quot;qwidget#setStyle&quot;&gt;setStyle&lt;/a&gt;(), &lt;a href=&quot;stylesheet#&quot;&gt;styleSheet&lt;/a&gt;, &lt;a href=&quot;qwidget#cursor-prop&quot;&gt;cursor&lt;/a&gt;, &lt;a href=&quot;stylesheet-reference#font&quot;&gt;font&lt;/a&gt;, &lt;a href=&quot;qwidget#palette-prop&quot;&gt;palette&lt;/a&gt;, &lt;a href=&quot;qwidget#backgroundRole&quot;&gt;backgroundRole&lt;/a&gt;(), &lt;a href=&quot;qwidget#setBackgroundRole&quot;&gt;setBackgroundRole&lt;/a&gt;(), &lt;a href=&quot;qwidget#fontInfo&quot;&gt;fontInfo&lt;/a&gt;(), &lt;a href=&quot;qwidget#fontMetrics&quot;&gt;fontMetrics&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca5d2d7de7fd7f9d58c553a21eada3d14fdf29f5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwidget#toolTip-prop&quot;&gt;setToolTip&lt;/a&gt;(), &lt;a href=&quot;qwidget#whatsThis-prop&quot;&gt;setWhatsThis&lt;/a&gt;()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35bdf4c8c8de7bd6178268822c12db590df2699b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwidget#update&quot;&gt;update&lt;/a&gt;(), &lt;a href=&quot;qwidget#repaint&quot;&gt;repaint&lt;/a&gt;(), &lt;a href=&quot;qwidget#scroll&quot;&gt;scroll&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8c0c84eab5aa87eddc6e20cae51060aeb51ddd1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwidget#visible-prop&quot;&gt;visible&lt;/a&gt;, &lt;a href=&quot;qwidget#isVisibleTo&quot;&gt;isVisibleTo&lt;/a&gt;(), &lt;a href=&quot;qwidget#enabled-prop&quot;&gt;enabled&lt;/a&gt;, &lt;a href=&quot;qwidget#isEnabledTo&quot;&gt;isEnabledTo&lt;/a&gt;(), &lt;a href=&quot;qwidget#modal-prop&quot;&gt;modal&lt;/a&gt;, &lt;a href=&quot;qwidget#isWindow&quot;&gt;isWindow&lt;/a&gt;(), &lt;a href=&quot;qwidget#mouseTracking-prop&quot;&gt;mouseTracking&lt;/a&gt;, &lt;a href=&quot;qwidget#updatesEnabled-prop&quot;&gt;updatesEnabled&lt;/a&gt;, &lt;a href=&quot;qwidget#visibleRegion&quot;&gt;visibleRegion&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9afcbb00f8b63ff3ff5617277102cfa911cc360" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwidget#wheelEvent&quot;&gt;wheelEvent&lt;/a&gt;() is called whenever the user turns the mouse wheel while the widget has the focus.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0239dc4945928dba4cc0e05f63f82e4c9fd39fe" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwidget#windowModified-prop&quot;&gt;windowModified&lt;/a&gt;, &lt;a href=&quot;qwidget#windowTitle-prop&quot;&gt;windowTitle&lt;/a&gt;, &lt;a href=&quot;qwidget#windowIcon-prop&quot;&gt;windowIcon&lt;/a&gt;, &lt;a href=&quot;qwidget#isActiveWindow-prop&quot;&gt;isActiveWindow&lt;/a&gt;, &lt;a href=&quot;qwidget#activateWindow&quot;&gt;activateWindow&lt;/a&gt;(), &lt;a href=&quot;qwidget#minimized-prop&quot;&gt;minimized&lt;/a&gt;, &lt;a href=&quot;qwidget#showMinimized&quot;&gt;showMinimized&lt;/a&gt;(), &lt;a href=&quot;qwidget#maximized-prop&quot;&gt;maximized&lt;/a&gt;, &lt;a href=&quot;qwidget#showMaximized&quot;&gt;showMaximized&lt;/a&gt;(), &lt;a href=&quot;qwidget#fullScreen-prop&quot;&gt;fullScreen&lt;/a&gt;, &lt;a href=&quot;qwidget#showFullScreen&quot;&gt;showFullScreen&lt;/a&gt;(), &lt;a href=&quot;qwidget#showNormal&quot;&gt;showNormal&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9d49d56168dcebc2de913f370a990c7fa499560" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt; *QBackingStore::window() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="949f1c2d5157ac6a725f15f50e2030a2ebc3f791" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt; *QTouchEvent::window() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b58e12948a19b00f3bc0124362720b604955fc3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt; *QWidget::windowHandle() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b182d2211c2b792966d3e24d89e2f76f2eace179" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt; and &lt;a href=&quot;https://doc.qt.io/qt-5.13/qopenglfunctions.html&quot;&gt;QOpenGLFunctions&lt;/a&gt; (protected)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f9b1a35d43ed89195f3cc2186d61b1c6b030ec1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt; and &lt;a href=&quot;qpaintdevice&quot;&gt;QPaintDevice&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef75b0f700314e202088b6d3b65be001b8c04e4e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt; has &lt;a href=&quot;qwindow#contentOrientation-prop&quot;&gt;reportContentOrientationChange&lt;/a&gt;() that can be used to specify the layout of the window contents in relation to the screen. The content orientation is simply a hint to the windowing system about which orientation the window contents are in. It's useful when you wish to keep the same window size, but rotate the contents instead, especially when doing rotation animations between different orientations. The windowing system might use this value to determine the layout of system popups or dialogs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="171bcb08e16776a51051610133c700fa9e860f16" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt; supports rendering using OpenGL and OpenGL ES, depending on what the platform supports. OpenGL rendering is enabled by setting the &lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt;'s surface type to &lt;a href=&quot;qsurface#SurfaceType-enum&quot;&gt;QSurface::OpenGLSurface&lt;/a&gt;, choosing the format attributes with &lt;a href=&quot;qsurfaceformat&quot;&gt;QSurfaceFormat&lt;/a&gt;, and then creating a &lt;a href=&quot;qopenglcontext&quot;&gt;QOpenGLContext&lt;/a&gt; to manage the native OpenGL context. In addition, Qt has &lt;a href=&quot;qopenglpaintdevice&quot;&gt;QOpenGLPaintDevice&lt;/a&gt;, which enables the use of OpenGL accelerated &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; rendering, as well as convenience classes that simplify the writing of OpenGL code and hides the complexities of extension handling and the differences between OpenGL ES 2 and desktop OpenGL. The convenience classes include &lt;a href=&quot;https://doc.qt.io/qt-5.13/qopenglfunctions.html&quot;&gt;QOpenGLFunctions&lt;/a&gt; that lets an application use all the OpenGL ES 2 functions on desktop OpenGL without having to manually resolve the OpenGL function pointers, thus allowing cross-platform development of applications targeting mobile or embedded devices, and some classes that wrap native OpenGL functionality in a simpler Qt API:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cd0ee495d266b2e8cc3e465c0f5b1f9b477e2d4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwindow#QWindow&quot;&gt;QWindow&lt;/a&gt; *QWindow::parent() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82191e8c88dcd68b4e650265f6bca34e0301968f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwindow#QWindow&quot;&gt;QWindow&lt;/a&gt; *QWindow::parent(&lt;a href=&quot;qwindow#AncestorMode-enum&quot;&gt;QWindow::AncestorMode&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f77c18a443b6b340b3ef3413ece3a1683d12f16" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwindow#Visibility-enum&quot;&gt;QWindow::Visibility&lt;/a&gt; queried through &lt;a href=&quot;qwindow#visibility-prop&quot;&gt;visibility&lt;/a&gt;() is a convenience API combining the functions of visible() and &lt;a href=&quot;qwindow#windowStates&quot;&gt;windowStates&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="581d9c3810cac2b46a6154085d1b6d10297aadfc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwineventnotifier&quot;&gt;QWinEventNotifier&lt;/a&gt; calls this method in it's constructor and there should never be a need to call this method directly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72d11907522d8f54f88a314b8225fa29f5d7b9b8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwineventnotifier&quot;&gt;QWinEventNotifier&lt;/a&gt; calls this method in it's destructor and there should never be a need to call this method directly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81d06e70ada9bd97eeefe8806d99eccf31989452" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwinjumplistcategory&quot;&gt;QWinJumpListCategory&lt;/a&gt; *QWinJumpList::addCategory(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce3c80e0f54c4a45a2e98c8751254b5b030ff930" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwinjumplistcategory&quot;&gt;QWinJumpListCategory&lt;/a&gt; *QWinJumpList::frequent() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d53ce2319643e3ba09c8c489cdebb14f277fcb9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwinjumplistcategory&quot;&gt;QWinJumpListCategory&lt;/a&gt; *QWinJumpList::recent() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73c9152e6b6743a965c5f9f1fa04abd5220a8251" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwinjumplistcategory&quot;&gt;QWinJumpListCategory&lt;/a&gt; *QWinJumpList::tasks() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c89bc5fc68a66ac171f11a0994f6b309085a561b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwinjumplistcategory#Type-enum&quot;&gt;QWinJumpListCategory::Type&lt;/a&gt; QWinJumpListCategory::type() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae5dedd128559a3a4759b7cf37cc93e11fcc0282" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwinjumplistitem&quot;&gt;QWinJumpListItem&lt;/a&gt; *QWinJumpListCategory::addDestination(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="001d40a36ae51f9bfddf3cac459d3c252f816db0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwinjumplistitem&quot;&gt;QWinJumpListItem&lt;/a&gt; *QWinJumpListCategory::addLink(const &lt;a href=&quot;qicon&quot;&gt;QIcon&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebbae64d6a033f94958dab6adc031978d775da63" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwinjumplistitem&quot;&gt;QWinJumpListItem&lt;/a&gt; *QWinJumpListCategory::addLink(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69769296baa630c03d0775f234ace85bbb08a889" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwinjumplistitem&quot;&gt;QWinJumpListItem&lt;/a&gt; *QWinJumpListCategory::addSeparator()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5adb03cf1f90d75c27e50f7cca35c19ecdce9fa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwinjumplistitem#Type-enum&quot;&gt;QWinJumpListItem::Type&lt;/a&gt; QWinJumpListItem::type() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12eaf76eab5ef1d01eba350545a613f4adc50c66" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwizard&quot;&gt;QWizard&lt;/a&gt; inherits &lt;a href=&quot;qdialog&quot;&gt;QDialog&lt;/a&gt; and represents a wizard. Each page is a &lt;a href=&quot;qwizardpage&quot;&gt;QWizardPage&lt;/a&gt; (a &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; subclass). To create your own wizards, you can use these classes directly, or you can subclass them for more control.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e2bd5bf0d6fef459f515b3fbbb2d21f3f7e2c53" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwizard&quot;&gt;QWizard&lt;/a&gt; knows the most common Qt widgets. For these (or their subclasses), you don't need to specify a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab3512c4dab37fb2d8d57e3965b786716fd05698" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwizard&quot;&gt;QWizard&lt;/a&gt; represents a wizard. Each page is a &lt;a href=&quot;qwizardpage&quot;&gt;QWizardPage&lt;/a&gt;. When you create your own wizards, you can use &lt;a href=&quot;qwizardpage&quot;&gt;QWizardPage&lt;/a&gt; directly, or you can subclass it for more control.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c393ac7e56556bfc4f4eb5f264c0cd4efb76e20" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwizard&quot;&gt;QWizard&lt;/a&gt; supports four wizard looks:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec0b408d7198423ff35274a012842fadf8cc81b8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwizard&quot;&gt;QWizard&lt;/a&gt;'s mandatory field mechanism is provided for convenience. A more powerful (but also more cumbersome) alternative is to reimplement &lt;a href=&quot;qwizardpage#isComplete&quot;&gt;QWizardPage::isComplete&lt;/a&gt;() and to emit the &lt;a href=&quot;qwizardpage#completeChanged&quot;&gt;QWizardPage::completeChanged&lt;/a&gt;() signal whenever the page becomes complete or incomplete.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="560543003aca613d6c53906497211dae9baa3a0d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwizard&quot;&gt;QWizard&lt;/a&gt;'s mandatory field mechanism is provided for convenience. It can be bypassed by reimplementing &lt;a href=&quot;qwizardpage#isComplete&quot;&gt;QWizardPage::isComplete&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="615e73056577d3b4f9c29c3f2e44b28272a517f1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwizard#WizardPixmap-enum&quot;&gt;BackgroundPixmap&lt;/a&gt; (used by &lt;a href=&quot;qwizard#WizardStyle-enum&quot;&gt;MacStyle&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae67bd3d44148a8a735f231be79e79434a3bb110" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwizard#WizardPixmap-enum&quot;&gt;BannerPixmap&lt;/a&gt; (used by &lt;a href=&quot;qwizard#WizardStyle-enum&quot;&gt;ModernStyle&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88969a3aa08af39409fa8b4dbd358299d5400615" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwizard#WizardPixmap-enum&quot;&gt;LogoPixmap&lt;/a&gt; (used by &lt;a href=&quot;qwizard#WizardStyle-enum&quot;&gt;ClassicStyle&lt;/a&gt; and &lt;a href=&quot;qwizard#WizardStyle-enum&quot;&gt;ModernStyle&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f460c9c5bcbcc927d050eaef81f2551250c01246" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwizard#WizardPixmap-enum&quot;&gt;WatermarkPixmap&lt;/a&gt; (used by &lt;a href=&quot;qwizard#WizardStyle-enum&quot;&gt;ClassicStyle&lt;/a&gt; and &lt;a href=&quot;qwizard#WizardStyle-enum&quot;&gt;ModernStyle&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55baad0ec81decd4863c47ba18081cfbc3d45f32" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwizardpage&quot;&gt;QWizardPage&lt;/a&gt; *QWizard::currentPage() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e80e4b0bbf0cfed7887598de9d2186a7bbdf3be9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwizardpage&quot;&gt;QWizardPage&lt;/a&gt; *QWizard::page(int</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d670ba1a7d8bd71ae7e94c4fad10edc8bf428ddf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwizardpage#cleanupPage&quot;&gt;cleanupPage&lt;/a&gt;() is called to reset the page's contents when the user clicks the wizard's &lt;b&gt;Back&lt;/b&gt; button.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="452ec9ebb1c465e8e8e73f9b7e4b56cd361df18d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwizardpage#initializePage&quot;&gt;initializePage&lt;/a&gt;() is called to initialize the page's contents when the user clicks the wizard's &lt;b&gt;Next&lt;/b&gt; button. If you want to derive the page's default from what the user entered on previous pages, this is the function to reimplement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2039744a46e41b1a6a9b5ff6f75d08d7a0384684" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwizardpage#isComplete&quot;&gt;isComplete&lt;/a&gt;() is called to determine whether the &lt;b&gt;Next&lt;/b&gt; and/or &lt;b&gt;Finish&lt;/b&gt; button should be enabled or disabled. If you reimplement &lt;a href=&quot;qwizardpage#isComplete&quot;&gt;isComplete&lt;/a&gt;(), also make sure that &lt;a href=&quot;qwizardpage#completeChanged&quot;&gt;completeChanged&lt;/a&gt;() is emitted whenever the complete state changes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8497445ae68118f641c60bd36219af670aecade9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwizardpage#nextId&quot;&gt;nextId&lt;/a&gt;() returns the ID of the next page. It is useful when &lt;a href=&quot;qwizard#creating-non-linear-wizards&quot;&gt;creating non-linear wizards&lt;/a&gt;, which allow different traversal paths based on the information provided by the user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e912c5e99d72677d5bef6b7457010ecdbb24742" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qwizardpage#validatePage&quot;&gt;validatePage&lt;/a&gt;() validates the page when the user clicks &lt;b&gt;Next&lt;/b&gt; or &lt;b&gt;Finish&lt;/b&gt;. It is often used to show an error message if the user has entered incomplete or invalid information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6acf72135e786265d73b525fdb270f03cd95dfc8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qx11info#peekEventQueue&quot;&gt;QX11Info::peekEventQueue&lt;/a&gt;() can optimize the peeking algorithm by skipping events that it already has seen in earlier calls to &lt;a href=&quot;qx11info#peekEventQueue&quot;&gt;peekEventQueue&lt;/a&gt;(). When control returns to the main event loop, which causes the buffered native event queue to be flushed to Qt's event queue, the cached indices are marked invalid and will be reset on the next access. The same is true if the program explicitly flushes the buffered native event queue by &lt;a href=&quot;qcoreapplication#processEvents&quot;&gt;QCoreApplication::processEvents&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d9672cca726cfd6d2e05bc734e3c4ffce81224e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qxmlcontenthandler&quot;&gt;QXmlContentHandler&lt;/a&gt;, &lt;a href=&quot;qxmlerrorhandler&quot;&gt;QXmlErrorHandler&lt;/a&gt;, &lt;a href=&quot;qxmldtdhandler&quot;&gt;QXmlDTDHandler&lt;/a&gt;, &lt;a href=&quot;qxmlentityresolver&quot;&gt;QXmlEntityResolver&lt;/a&gt;, &lt;a href=&quot;qxmllexicalhandler&quot;&gt;QXmlLexicalHandler&lt;/a&gt;, and &lt;a href=&quot;qxmldeclhandler&quot;&gt;QXmlDeclHandler&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdf4776ace2e03d108d4dae16ea31655f9e71bcb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qxmlcontenthandler#startPrefixMapping&quot;&gt;QXmlContentHandler::startPrefixMapping&lt;/a&gt;() and &lt;a href=&quot;qxmlcontenthandler#endPrefixMapping&quot;&gt;QXmlContentHandler::endPrefixMapping&lt;/a&gt;() are called by the reader.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf4da53bb3eefd8849d403051e159edee155d8d7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qxmlformatter&quot;&gt;QXmlFormatter&lt;/a&gt; is a subclass of &lt;a href=&quot;qxmlserializer&quot;&gt;QXmlSerializer&lt;/a&gt; that formats the XML output to make it easier for humans to read.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d597f656ac051bbb9d80ed677180ddaccd5bffb7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qxmlformatter&quot;&gt;QXmlFormatter&lt;/a&gt; outputs this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1604d02f24560e85b9153955b992670884fac10f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qxmlitem&quot;&gt;QXmlItem&lt;/a&gt; QXmlResultItems::current() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db7f15c4ff38ebbf470c9d8af438d109ba119545" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qxmlitem&quot;&gt;QXmlItem&lt;/a&gt; QXmlResultItems::next()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcfbb18c793bdca5ee040a78a91cbf91ef39e633" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qxmlitem&quot;&gt;QXmlItem&lt;/a&gt; is the class that represents these &lt;a href=&quot;xmlprocessing#&quot;&gt;XQuery&lt;/a&gt; items in the Qt XML Patterns API. A non-null instance of &lt;a href=&quot;qxmlitem&quot;&gt;QXmlItem&lt;/a&gt; is either a node or an atomic value. Calling &lt;a href=&quot;qxmlitem#isNode&quot;&gt;isNode&lt;/a&gt;() or &lt;a href=&quot;qxmlitem#isAtomicValue&quot;&gt;isAtomicValue&lt;/a&gt;() tells you which it is. Atomic values are represented elsewhere in the Qt API as instances of &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt;, and an instance of &lt;a href=&quot;qxmlitem&quot;&gt;QXmlItem&lt;/a&gt; that represents an atomic value can be converted to a &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; by calling &lt;a href=&quot;qxmlitem#toAtomicValue&quot;&gt;toAtomicValue&lt;/a&gt;(). A &lt;a href=&quot;qxmlitem&quot;&gt;QXmlItem&lt;/a&gt; that wraps a node is represented elsewhere as an instance of &lt;a href=&quot;qxmlnodemodelindex&quot;&gt;QXmlNodeModelIndex&lt;/a&gt;. A node &lt;a href=&quot;qxmlitem&quot;&gt;QXmlItem&lt;/a&gt; can be converted to a &lt;a href=&quot;qxmlnodemodelindex&quot;&gt;QXmlNodeModelIndex&lt;/a&gt; by calling &lt;a href=&quot;qxmlitem#toNodeModelIndex&quot;&gt;toNodeModelIndex&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4f3ec074803bbf0d5d679fde954520c1ecdab8d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qxmlitem#QXmlItem&quot;&gt;QXmlItem&lt;/a&gt; &amp;amp;QXmlItem::operator=(const &lt;a href=&quot;qxmlitem#QXmlItem&quot;&gt;QXmlItem&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fae555f43a0406841cba0c3c0233f07ac4cb7614" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qxmlname&quot;&gt;QXmlName&lt;/a&gt; (see &lt;a href=&quot;#handling-qxmlnames&quot;&gt;Handling QXmlNames&lt;/a&gt; below)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14422ac04aed99afdeb7501134b51ae82105f7e5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qxmlname&quot;&gt;QXmlName&lt;/a&gt; QXmlQuery::initialTemplateName() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4a95aee416588ef7eff47a2862cf5f137cd0ca2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qxmlname&quot;&gt;QXmlName&lt;/a&gt; represents what is sometimes called an</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89eb2f736a99b699b48f197e924c2c402fa4d754" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qxmlname#QXmlName&quot;&gt;QXmlName&lt;/a&gt; &amp;amp;QXmlName::operator=(const &lt;a href=&quot;qxmlname#QXmlName&quot;&gt;QXmlName&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="801aac9e142616d3abaa2d74088cbc18b9f16e57" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qxmlnamepool&quot;&gt;QXmlNamePool&lt;/a&gt; &amp;amp;QSimpleXmlNodeModel::namePool() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba9e452f96d898a7cd85e638107c27b9ed1a19a0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qxmlnamepool&quot;&gt;QXmlNamePool&lt;/a&gt; QXmlQuery::namePool() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b97151c37f0f453fa3dd880eb3ee18ac3f1921d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qxmlnamepool&quot;&gt;QXmlNamePool&lt;/a&gt; QXmlSchema::namePool() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="121130e93512a263d631e249bbe456ba7f759c24" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qxmlnamepool&quot;&gt;QXmlNamePool&lt;/a&gt; QXmlSchemaValidator::namePool() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4403d84539defdb5e3ffa74194b3d613ce2cbdc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qxmlnamepool&quot;&gt;QXmlNamePool&lt;/a&gt; is used to optimize operations on instances of &lt;a href=&quot;qxmlname&quot;&gt;QXmlName&lt;/a&gt;. An instance of &lt;a href=&quot;qxmlname&quot;&gt;QXmlName&lt;/a&gt; represents an XML name in a way that allows the XML name to be compared and passed around efficiently. The efficiency is achieved by storing the strings comprising the XML names in an instance of &lt;a href=&quot;qxmlnamepool&quot;&gt;QXmlNamePool&lt;/a&gt;, where they are mapped to binary identifiers, which are then packed into a key which is stored in the &lt;a href=&quot;qxmlname&quot;&gt;QXmlName&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="281409dca42cb575437f31ea300c0b8779f3fe0c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qxmlnamepool#QXmlNamePool&quot;&gt;QXmlNamePool&lt;/a&gt; &amp;amp;QXmlNamePool::operator=(const &lt;a href=&quot;qxmlnamepool#QXmlNamePool&quot;&gt;QXmlNamePool&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="597196ba037b95ed4bbfeaada92b8672a9835aa4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qxmlnodemodelindex&quot;&gt;QXmlNodeModelIndex&lt;/a&gt; QXmlItem::toNodeModelIndex() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="900750081b9186f2901d2b2dc1a43f3b226c9e60" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qxmlnodemodelindex&quot;&gt;QXmlNodeModelIndex&lt;/a&gt; and &lt;a href=&quot;qabstractxmlnodemodel&quot;&gt;QAbstractXmlNodeModel&lt;/a&gt; follow the same design pattern used for &lt;a href=&quot;qmodelindex&quot;&gt;QModelIndex&lt;/a&gt; and &lt;a href=&quot;qabstractitemmodel&quot;&gt;QAbstractItemModel&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee5768ce93d1f2b847d0477c6cf5d1228b4fb0da" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qxmlnodemodelindex&quot;&gt;QXmlNodeModelIndex&lt;/a&gt; doesn't impose any restrictions on the &lt;code&gt;data&lt;/code&gt; value an &lt;a href=&quot;qxmlnodemodelindex&quot;&gt;QXmlNodeModelIndex&lt;/a&gt; should contain. The meaning of the data left to the associated &lt;a href=&quot;qabstractxmlnodemodel&quot;&gt;node model&lt;/a&gt;. Because &lt;a href=&quot;qxmlnodemodelindex&quot;&gt;QXmlNodeModelIndex&lt;/a&gt; depends on a particular subclass of &lt;a href=&quot;qabstractxmlnodemodel&quot;&gt;QAbstractXmlNodeModel&lt;/a&gt; for its existence, the only way you can create an instance of &lt;a href=&quot;qxmlnodemodelindex&quot;&gt;QXmlNodeModelIndex&lt;/a&gt; is by asking the node model to create one for you with &lt;a href=&quot;qabstractxmlnodemodel#createIndex&quot;&gt;QAbstractXmlNodeModel::createIndex&lt;/a&gt;(). Since that function is protected, it is usually a good idea to write a public function that creates a &lt;a href=&quot;qxmlnodemodelindex&quot;&gt;QXmlNodeModelIndex&lt;/a&gt; from arguments that are appropriate for your particular node model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8dcfcd93baa9bdde2c15cd377911273d3f5b702" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qxmlnodemodelindex&quot;&gt;QXmlNodeModelIndex&lt;/a&gt; is an index into an &lt;a href=&quot;qabstractxmlnodemodel&quot;&gt;XML node model&lt;/a&gt;. It contains:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3140c5d16a69192bb78f7ef0a667c08d3593275" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qxmlquery&quot;&gt;QXmlQuery&lt;/a&gt; does not take ownership of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="993e7f4bac58815904f4e494e9cf0a353129e220" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qxmlquery&quot;&gt;QXmlQuery&lt;/a&gt; is reentrant but not thread-safe. It is safe to use the QxmlQuery copy constructor to create a copy of a query and run the same query multiple times. Behind the scenes, &lt;a href=&quot;qxmlquery&quot;&gt;QXmlQuery&lt;/a&gt; will reuse resources such as opened files and compiled queries to the extent possible. But it is not safe to use the same instance of &lt;a href=&quot;qxmlquery&quot;&gt;QXmlQuery&lt;/a&gt; in multiple threads.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88bd6b9f1f4786e0e7c73eee30c163d6efdd4306" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qxmlquery#QXmlQuery&quot;&gt;QXmlQuery&lt;/a&gt; &amp;amp;QXmlQuery::operator=(const &lt;a href=&quot;qxmlquery#QXmlQuery&quot;&gt;QXmlQuery&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e52b8fca01669e069d24b87cbbd05aa6222e8bad" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qxmlquery#QueryLanguage-enum&quot;&gt;QXmlQuery::QueryLanguage&lt;/a&gt; QXmlQuery::queryLanguage() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="056d50300f75d105790dc4f683501f32061b5d31" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qxmlquery#evaluateTo&quot;&gt;evaluateTo&lt;/a&gt;(&lt;a href=&quot;qabstractxmlreceiver&quot;&gt;QAbstractXmlReceiver&lt;/a&gt; *) is called with a pointer to an XML &lt;a href=&quot;qabstractxmlreceiver&quot;&gt;receiver&lt;/a&gt;, which receives the query results as a sequence of callbacks. The receiver callback class is like the callback class used for translating the output of a SAX parser. &lt;a href=&quot;qxmlserializer&quot;&gt;QXmlSerializer&lt;/a&gt;, for example, is a receiver callback class for translating the sequence of callbacks for output as unformatted XML text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1700502bb988d1b66db809798bcbab63d8f40e86" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qxmlquery#evaluateTo&quot;&gt;evaluateTo&lt;/a&gt;(&lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt; *) is like &lt;a href=&quot;qxmlquery#evaluateTo&quot;&gt;evaluateTo&lt;/a&gt;(&lt;a href=&quot;qxmlresultitems&quot;&gt;QXmlResultItems&lt;/a&gt; *), but the query must evaluate to a sequence of strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f070629140e11348dd2ac79223cc97f5e093aac9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qxmlquery#evaluateTo&quot;&gt;evaluateTo&lt;/a&gt;(&lt;a href=&quot;qxmlresultitems&quot;&gt;QXmlResultItems&lt;/a&gt; *) is called with a pointer to an iterator for an empty sequence of query &lt;a href=&quot;qxmlresultitems&quot;&gt;result items&lt;/a&gt;. The Java-like iterator allows the query results to be accessed sequentially.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2649b9ffe98533d7398ad95b2ded2927fa68be77" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qxmlquery#setQuery&quot;&gt;setQuery&lt;/a&gt;() when using XSLT.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8b45ecc22ff697ed27a5fc682da1e8199f5ce76" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qxmlresultitems&quot;&gt;QXmlResultItems&lt;/a&gt; can be thought of as an &quot;iterator&quot; that traverses the sequence of query results once, in the forward direction. Each call to &lt;a href=&quot;qxmlresultitems#next&quot;&gt;next&lt;/a&gt;() advances the iterator to the next &lt;a href=&quot;qxmlitem&quot;&gt;QXmlItem&lt;/a&gt; in the sequence and returns it, and &lt;a href=&quot;qxmlresultitems#current&quot;&gt;current&lt;/a&gt;() always returns the &lt;a href=&quot;qxmlitem&quot;&gt;QXmlItem&lt;/a&gt; that &lt;a href=&quot;qxmlresultitems#next&quot;&gt;next&lt;/a&gt;() returned the last time it was called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0551826603c17f9753ff079d954d6169095b492c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qxmlresultitems&quot;&gt;QXmlResultItems&lt;/a&gt; presents the evaluation of an associated query as a sequence of &lt;a href=&quot;qxmlitem&quot;&gt;QXmlItems&lt;/a&gt;. The sequence is traversed by repeatedly calling &lt;a href=&quot;qxmlresultitems#next&quot;&gt;next&lt;/a&gt;(), which actually produces the sequence by lazy evaluation of the query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce717d012c9255a7dc135bded8e38fd5f3c6d738" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qxmlresultitems#hasError&quot;&gt;QXmlResultItems::hasError&lt;/a&gt;() will return &lt;code&gt;true&lt;/code&gt;, or &lt;a href=&quot;qxmlquery#evaluateTo&quot;&gt;evaluateTo&lt;/a&gt;() will return &lt;code&gt;false&lt;/code&gt;;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="184b73ebcb89fbe5f30b732cfe575eaeec00575c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qxmlschema&quot;&gt;QXmlSchema&lt;/a&gt; QXmlSchemaValidator::schema() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f96d277c3c4b89263c98ec72a4c03c366d2df273" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qxmlschema#QXmlSchema&quot;&gt;QXmlSchema&lt;/a&gt; &amp;amp;QXmlSchema::operator=(const &lt;a href=&quot;qxmlschema#QXmlSchema&quot;&gt;QXmlSchema&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18c676c2ce751a25a19d5662d5b3f32104a951dd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qxmlserializer&quot;&gt;QXmlSerializer&lt;/a&gt; is used to write the output to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bdd732e1fb9d6d6963c1f626b4c80c103587841" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qxmlserializer&quot;&gt;QXmlSerializer&lt;/a&gt; outputs XML without adding unnecessary whitespace. In particular, it does not add</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f1638feb0221de1dfccca5434d03abf2a5ad374" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qxmlserializer&quot;&gt;QXmlSerializer&lt;/a&gt; translates an &lt;a href=&quot;qabstractxmlreceiver#xquery-sequence&quot;&gt;XQuery sequence&lt;/a&gt;, usually the output of an &lt;a href=&quot;qxmlquery&quot;&gt;QXmlQuery&lt;/a&gt;, into XML. Consider the example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ac20b1becd39cc23e8d5b25467e7faa97514c61" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qxmlserializer&quot;&gt;QXmlSerializer&lt;/a&gt; will:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dfb9a25791968e90dd7b72a8585811e0c719c4a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qxmlsimplereader&quot;&gt;QXmlSimpleReader&lt;/a&gt; implements the following behavior:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="333e4b0fdbc3a38ce73fd7564b8a96960db07906" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qxmlsimplereader&quot;&gt;QXmlSimpleReader&lt;/a&gt; is not reentrant. If you want to use the class in threaded code, lock the code using &lt;a href=&quot;qxmlsimplereader&quot;&gt;QXmlSimpleReader&lt;/a&gt; with a locking mechanism, such as a &lt;a href=&quot;qmutex&quot;&gt;QMutex&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de6f8604bb2a3b1d47a4f5f51b0dcb2df6f6d285" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qxmlsimplereader&quot;&gt;QXmlSimpleReader&lt;/a&gt; is not validating, so it does not support</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d579cebfc72036f76e5419538f5ede28e9cc0710" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qxmlstreamattribute#QXmlStreamAttribute&quot;&gt;QXmlStreamAttribute&lt;/a&gt; &amp;amp;QXmlStreamAttribute::operator=(const &lt;a href=&quot;qxmlstreamattribute#QXmlStreamAttribute&quot;&gt;QXmlStreamAttribute&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85b98a668697a4557783d58d765c9609a6d18edf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qxmlstreamattributes&quot;&gt;QXmlStreamAttributes&lt;/a&gt; QXmlStreamReader::attributes() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bdc4d0aafe284864fbcd1230e96b823e4280113" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qxmlstreamentitydeclaration#QXmlStreamEntityDeclaration&quot;&gt;QXmlStreamEntityDeclaration&lt;/a&gt; &amp;amp;QXmlStreamEntityDeclaration::operator=(const &lt;a href=&quot;qxmlstreamentitydeclaration#QXmlStreamEntityDeclaration&quot;&gt;QXmlStreamEntityDeclaration&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53f4197afdd81fa2b9ff625493d6477125f1ad8d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qxmlstreamentitydeclaration#QXmlStreamEntityDeclarations-typedef&quot;&gt;QXmlStreamEntityDeclarations&lt;/a&gt; QXmlStreamReader::entityDeclarations() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b38aadfe2b312e9712168233a8c2f1ba7158fcbe" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qxmlstreamentityresolver&quot;&gt;QXmlStreamEntityResolver&lt;/a&gt; *QXmlStreamReader::entityResolver() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d5ba948ecea250a2349ce13eff1eec13b970953" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qxmlstreamnamespacedeclaration#QXmlStreamNamespaceDeclaration&quot;&gt;QXmlStreamNamespaceDeclaration&lt;/a&gt; &amp;amp;QXmlStreamNamespaceDeclaration::operator=(const &lt;a href=&quot;qxmlstreamnamespacedeclaration#QXmlStreamNamespaceDeclaration&quot;&gt;QXmlStreamNamespaceDeclaration&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02f8ab912b263f4bb3e99d714c9d702fbb2dbad3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qxmlstreamnamespacedeclaration#QXmlStreamNamespaceDeclarations-typedef&quot;&gt;QXmlStreamNamespaceDeclarations&lt;/a&gt; QXmlStreamReader::namespaceDeclarations() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6051c2e0d5ff92e3d2c36d61e522fab522a9c39" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qxmlstreamnotationdeclaration#QXmlStreamNotationDeclaration&quot;&gt;QXmlStreamNotationDeclaration&lt;/a&gt; &amp;amp;QXmlStreamNotationDeclaration::operator=(const &lt;a href=&quot;qxmlstreamnotationdeclaration#QXmlStreamNotationDeclaration&quot;&gt;QXmlStreamNotationDeclaration&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c10cabddfde186b5cd9b62d024b1e57160f5818" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qxmlstreamnotationdeclaration#QXmlStreamNotationDeclarations-typedef&quot;&gt;QXmlStreamNotationDeclarations&lt;/a&gt; QXmlStreamReader::notationDeclarations() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="520dc9ba6442af922c167707cbb0610f8784400b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qxmlstreamreader&quot;&gt;QXmlStreamReader&lt;/a&gt; is a faster and more convenient replacement for Qt's own SAX parser (see &lt;a href=&quot;qxmlsimplereader&quot;&gt;QXmlSimpleReader&lt;/a&gt;). In some cases it might also be a faster and more convenient alternative for use in applications that would otherwise use a DOM tree (see &lt;a href=&quot;qdomdocument&quot;&gt;QDomDocument&lt;/a&gt;). &lt;a href=&quot;qxmlstreamreader&quot;&gt;QXmlStreamReader&lt;/a&gt; reads data either from a &lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt; (see &lt;a href=&quot;qxmlstreamreader#setDevice&quot;&gt;setDevice&lt;/a&gt;()), or from a raw &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; (see &lt;a href=&quot;qxmlstreamreader#addData&quot;&gt;addData&lt;/a&gt;()).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49e2e658c7c833a098dddc63dc9641cc6955ba6c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qxmlstreamreader&quot;&gt;QXmlStreamReader&lt;/a&gt; is a well-formed XML 1.0 parser that does</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cd9902c2079382b3ab33f8d476c40648e6c011d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qxmlstreamreader&quot;&gt;QXmlStreamReader&lt;/a&gt; is a well-formed XML 1.0 parser that excludes external parsed entities. Hence, data provided by the stream reader adheres to the W3C's criteria for well-formed XML, as long as no error occurs. Otherwise, functions such as &lt;a href=&quot;qxmlstreamreader#atEnd&quot;&gt;atEnd()&lt;/a&gt;, &lt;a href=&quot;qxmlstreamreader#error&quot;&gt;error()&lt;/a&gt; and &lt;a href=&quot;qxmlstreamreader#hasError&quot;&gt;hasError()&lt;/a&gt; can be used to check and view the errors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe5f60407a78b894a2995839e4ee19e9068babe8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qxmlstreamreader&quot;&gt;QXmlStreamReader&lt;/a&gt; is an incremental parser. It can handle the case where the document can't be parsed all at once because it arrives in chunks (e.g. from multiple files, or over a network connection). When the reader runs out of data before the complete document has been parsed, it reports a &lt;a href=&quot;qxmlstreamreader#Error-enum&quot;&gt;PrematureEndOfDocumentError&lt;/a&gt;. When more data arrives, either because of a call to &lt;a href=&quot;qxmlstreamreader#addData&quot;&gt;addData&lt;/a&gt;() or because more data is available through the network &lt;a href=&quot;qxmlstreamreader#device&quot;&gt;device&lt;/a&gt;(), the reader recovers from the &lt;a href=&quot;qxmlstreamreader#Error-enum&quot;&gt;PrematureEndOfDocumentError&lt;/a&gt; error and continues parsing the new data with the next call to &lt;a href=&quot;qxmlstreamreader#readNext&quot;&gt;readNext&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf790e225701e7816e3a82f8d436e03ab29e91e0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qxmlstreamreader&quot;&gt;QXmlStreamReader&lt;/a&gt; is memory-conservative by design, since it doesn't store the entire XML document tree in memory, but only the current token at the time it is reported. In addition, &lt;a href=&quot;qxmlstreamreader&quot;&gt;QXmlStreamReader&lt;/a&gt; avoids the many small string allocations that it normally takes to map an XML document to a convenient and Qt-ish API. It does this by reporting all string data as &lt;a href=&quot;qstringref&quot;&gt;QStringRef&lt;/a&gt; rather than real &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; objects. &lt;a href=&quot;qstringref&quot;&gt;QStringRef&lt;/a&gt; is a thin wrapper around &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; substrings that provides a subset of the &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; API without the memory allocation and reference-counting overhead. Calling &lt;a href=&quot;qstringref#toString&quot;&gt;toString()&lt;/a&gt; on any of those objects returns an equivalent real &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40c91d93bf1efc73d7a76c1407c087a3d1586cc4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qxmlstreamreader#Error-enum&quot;&gt;QXmlStreamReader::Error&lt;/a&gt; QXmlStreamReader::error() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b9fec371d9447bde9393251ba06df19c5c91698" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qxmlstreamreader#TokenType-enum&quot;&gt;QXmlStreamReader::TokenType&lt;/a&gt; QXmlStreamReader::readNext()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="050b088694eb8a9d07ecc811bfb5c12456b7a182" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qxmlstreamreader#TokenType-enum&quot;&gt;QXmlStreamReader::TokenType&lt;/a&gt; QXmlStreamReader::tokenType() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13ea8581e95dcfdb6f942f238e66d98f7d1cc4e9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qxmlstreamwriter&quot;&gt;QXmlStreamWriter&lt;/a&gt; is the counterpart to &lt;a href=&quot;qxmlstreamreader&quot;&gt;QXmlStreamReader&lt;/a&gt; for writing XML. Like its related class, it operates on a &lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt; specified with &lt;a href=&quot;qxmlstreamwriter#setDevice&quot;&gt;setDevice&lt;/a&gt;(). The API is simple and straightforward: for every XML token or event you want to write, the writer provides a specialized function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d2e68776a28bdcc695569dd7dd90e5b58331cb3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qxmlstreamwriter&quot;&gt;QXmlStreamWriter&lt;/a&gt; takes care of prefixing namespaces, all you have to do is specify the &lt;code&gt;namespaceUri&lt;/code&gt; when writing elements or attributes. If you must conform to certain prefixes, you can force the writer to use them by declaring the namespaces manually with either &lt;a href=&quot;qxmlstreamwriter#writeNamespace&quot;&gt;writeNamespace&lt;/a&gt;() or &lt;a href=&quot;qxmlstreamwriter#writeDefaultNamespace&quot;&gt;writeDefaultNamespace&lt;/a&gt;(). Alternatively, you can bypass the stream writer's namespace support and use overloaded methods that take a qualified name instead. The namespace</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e0ce61e44ad6fb0df9d7e733209c9890dd41bd0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qxyseries&quot;&gt;QXYSeries&lt;/a&gt; supports the following format tags:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9986ebfe2306b617d70baee496ad1be9260939a0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;richtext-advanced-processing#&quot;&gt;Advanced Rich Text Processing&lt;/a&gt; examines advanced rich text editing tasks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d71b83fa145876507a7ba55adf8e24b206218f1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;richtext-common-tasks#&quot;&gt;Common Rich Text Editing Tasks&lt;/a&gt; examines some common tasks that involve reading or manipulating rich text documents.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e3d044f4dffcfd580ea3f243b69590d1754adff" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;richtext-cursor#&quot;&gt;The QTextCursor Interface&lt;/a&gt; explains how rich text documents can be edited using the cursor-based interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dd3524dda1f8c90059b0f1eff7757d56e5a536a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;richtext-html-subset#&quot;&gt;Supported HTML Subset&lt;/a&gt; lists the HTML tags supported by &lt;a href=&quot;qtextdocument&quot;&gt;QTextDocument&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d42962e06adb25cc3b025f0838e59c0d557da9b7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;richtext-layouts#&quot;&gt;Document Layouts&lt;/a&gt; briefly explains the role of document layouts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="051de8f8cd719365c8d1c7bc3907a8f822bc01cd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;richtext-structure#&quot;&gt;Rich Text Document Structure&lt;/a&gt; outlines the different kinds of elements in a &lt;a href=&quot;qtextdocument&quot;&gt;QTextDocument&lt;/a&gt;, and describes how they are arranged in a document structure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6203b1d33f9e1daa0ee0c8a87b0709a9a705b49e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;signalsandslots#signals&quot;&gt;Signal&lt;/a&gt; methods are created by using the SIGNAL keyword in the rep file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2a2b6dddd7c0b21f790e2c0327001de6c22de47" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;signalsandslots#slots&quot;&gt;Slot&lt;/a&gt; methods are created by using the SLOT keyword in the rep file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f60b1319ea5a0cc3060af854894f616128a634f3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ssl#&quot;&gt;Secure Sockets Layer (SSL) Classes&lt;/a&gt; - Classes for secure communication over network sockets</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74a50ab14b4204b1d4e2006ae1fe02cbec369195" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;style-reference#&quot;&gt;Styles&lt;/a&gt; draw on behalf of widgets and encapsulate the look and feel of a GUI. Qt's built-in widgets use the &lt;a href=&quot;qstyle&quot;&gt;QStyle&lt;/a&gt; class to perform nearly all of their drawing, ensuring that they look exactly like the equivalent native widgets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9beab39b7c3dee59d7687cb19f8e8f4d5e0e1482" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;stylesheet#&quot;&gt;Qt Style Sheets&lt;/a&gt; are a powerful mechanism that allows you to customize the appearance of widgets, in addition to what is already possible by subclassing &lt;a href=&quot;qstyle&quot;&gt;QStyle&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f3bd106a0fc1e80a64821cfba42818f1cdc1234" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;stylesheet-reference#alignment&quot;&gt;alignment&lt;/a&gt;: The alignment of the text in the &lt;a href=&quot;qabstractspinbox&quot;&gt;QAbstractSpinBox&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b2df6654b3fd69765d9b0d66c19fe2dbfddf16a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;supported-platforms#winrt&quot;&gt;WinRT&lt;/a&gt; - Not supported</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54a49a75d8759a32df07e5ab926f92122c79ef9c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;supported-platforms#winrt&quot;&gt;WinRT&lt;/a&gt; - Not supported yet</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b65594417114f1e9d5ce4fb4be1860d2962d7f4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;supported-platforms#winrt&quot;&gt;WinRT&lt;/a&gt; applications are UI applications by nature. This implies that console type applications will have a window created internally, which is always visible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d2c5038dfc4361e5cc75eade07a80312665c24b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;supported-platforms#winrt&quot;&gt;WinRT&lt;/a&gt; applications must be packaged (including all dependencies) and installed or registered with the application service in order to be launched. &lt;a href=&quot;#winrtrunner&quot;&gt;The WinRT Runner Tool&lt;/a&gt; can be used to launch these applications from the command line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09dae864eaf235f87c4423518bf5d8372e84cfb5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;svgrendering#&quot;&gt;Rendering SVG Files&lt;/a&gt; contains information about how to render SVG files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c261895fbcd32ac83843e3974c6b0cbbfd61b83" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;uic&quot;&gt;uic&lt;/a&gt; generates code that invokes this function to enable auto-connection to be performed between widgets on forms created with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e3c621a9e2edcf90bac86287a2a774a10841897" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;unicode&quot;&gt;Unicode&lt;/a&gt; is an international standard that supports most of the writing systems in use today. It is a superset of US-ASCII (ANSI X3.4-1986) and Latin-1 (ISO 8859-1), and all the US-ASCII/Latin-1 characters are available at the same code positions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57747e07ca57bbf38710d9865e75402e3d70bc8a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;webgl#&quot;&gt;WebGL&lt;/a&gt; support for Qt Quick applications</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6acf01b519763447f5a92fe2c81e3681d75172c6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;xmlprocessing#&quot;&gt;XQuery&lt;/a&gt; - general overviews of &lt;a href=&quot;xmlprocessing#&quot;&gt;XQuery&lt;/a&gt; and XSchema</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd6a8041e24e318dfa742e27596d37d8cf4bb02e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;xmlprocessing#&quot;&gt;XQuery&lt;/a&gt; 1.0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a1920b7f3f34f3345b622a16a65bb4098c33d63" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;xmlprocessing#&quot;&gt;XQuery&lt;/a&gt; also has atomic values. An atomic value is a value in the value space of one of the built-in datatypes in the &lt;a href=&quot;http://www.w3.org/TR/xmlschema-2&quot;&gt;XML Schema language&lt;/a&gt;. These</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b06ddbcd522259ec7ecd7546f506a5e3f8990fc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;xmlprocessing#&quot;&gt;XQuery&lt;/a&gt; is a language for querying XML data or non-XML data that can be modeled as XML. &lt;a href=&quot;xmlprocessing#&quot;&gt;XQuery&lt;/a&gt; is specified by the &lt;a href=&quot;http://www.w3.org&quot;&gt;W3C&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c3075020b32a52a17e698a0f3a18cf160f6baf5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;xquery-introduction#&quot;&gt;A Short Path to XQuery&lt;/a&gt; - an introduction to the &lt;a href=&quot;xmlprocessing#&quot;&gt;XQuery&lt;/a&gt; language.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2fe9b471f2f10ef0a61cca18bd4984137a40ee9" translate="yes" xml:space="preserve">
          <source>&lt;a name=&quot;Getting%20started&quot;&gt; &lt;h2&gt;Getting Started&lt;/h2&gt; &lt;/a&gt; This is the first subsection. &lt;a name=&quot;Hello%20Qt&quot;&gt; &lt;h3&gt;Hello Qt&lt;/h3&gt; &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73f96e4b7499f738086ab009564691dea632cdd6" translate="yes" xml:space="preserve">
          <source>&lt;b&gt; &lt;a href=&quot;qml-qtgraphicaleffects-conicalgradient#horizontalOffset-prop&quot;&gt;horizontalOffset&lt;/a&gt;: -50 &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c534fa94b3c8f706fa466b8492b4ba061f1bb565" translate="yes" xml:space="preserve">
          <source>&lt;b&gt; &lt;a href=&quot;qml-qtgraphicaleffects-conicalgradient#horizontalOffset-prop&quot;&gt;horizontalOffset&lt;/a&gt;: 0 &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37a1348158af2d4ae5be05e5d3d08ed579899c41" translate="yes" xml:space="preserve">
          <source>&lt;b&gt; &lt;a href=&quot;qml-qtgraphicaleffects-conicalgradient#horizontalOffset-prop&quot;&gt;horizontalOffset&lt;/a&gt;: 50 &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b60095dd4856f1029d9b2289d8bb597839ea53e7" translate="yes" xml:space="preserve">
          <source>&lt;b&gt; &lt;a href=&quot;qml-qtgraphicaleffects-dropshadow#horizontalOffset-prop&quot;&gt;horizontalOffset&lt;/a&gt;: -20 &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cd2d18b8c386e2e79a9fe76a2656351509b61f6" translate="yes" xml:space="preserve">
          <source>&lt;b&gt; &lt;a href=&quot;qml-qtgraphicaleffects-dropshadow#horizontalOffset-prop&quot;&gt;horizontalOffset&lt;/a&gt;: 0 &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13095348a1878ac9d8efa4dfc087c33a80d19325" translate="yes" xml:space="preserve">
          <source>&lt;b&gt; &lt;a href=&quot;qml-qtgraphicaleffects-dropshadow#horizontalOffset-prop&quot;&gt;horizontalOffset&lt;/a&gt;: 20 &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a114d14f9c8a16b9be4db8ad25df5819fcd5da40" translate="yes" xml:space="preserve">
          <source>&lt;b&gt; &lt;a href=&quot;qml-qtgraphicaleffects-innershadow#horizontalOffset-prop&quot;&gt;horizontalOffset&lt;/a&gt;: -20 &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d971f13d13a0e6f55c78e2d37b787a97f1e52209" translate="yes" xml:space="preserve">
          <source>&lt;b&gt; &lt;a href=&quot;qml-qtgraphicaleffects-innershadow#horizontalOffset-prop&quot;&gt;horizontalOffset&lt;/a&gt;: 0 &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="808dcd84c5602851a37fdb29598e20eb53fb14f0" translate="yes" xml:space="preserve">
          <source>&lt;b&gt; &lt;a href=&quot;qml-qtgraphicaleffects-innershadow#horizontalOffset-prop&quot;&gt;horizontalOffset&lt;/a&gt;: 20 &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="430375b565aa5e52d1979ace33be84e460d09463" translate="yes" xml:space="preserve">
          <source>&lt;b&gt; &lt;a href=&quot;qml-qtgraphicaleffects-radialblur#horizontalOffset-prop&quot;&gt;horizontalOffset&lt;/a&gt;: -75.0 &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5d1751d8879789b816b4a3f4492c7c35995522a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt; &lt;a href=&quot;qml-qtgraphicaleffects-radialblur#horizontalOffset-prop&quot;&gt;horizontalOffset&lt;/a&gt;: 0.0 &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb8800571fc082e3be09ef4933aeffff7333a0a3" translate="yes" xml:space="preserve">
          <source>&lt;b&gt; &lt;a href=&quot;qml-qtgraphicaleffects-radialblur#horizontalOffset-prop&quot;&gt;horizontalOffset&lt;/a&gt;: 75.0 &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0571c0526e0a434ba24b81301581b961c35f4158" translate="yes" xml:space="preserve">
          <source>&lt;b&gt; &lt;a href=&quot;qml-qtgraphicaleffects-radialgradient#horizontalOffset-prop&quot;&gt;horizontalOffset&lt;/a&gt;: -150 &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d5da5aaf6cbddcb4716d77ce6d1cc77d6b00790" translate="yes" xml:space="preserve">
          <source>&lt;b&gt; &lt;a href=&quot;qml-qtgraphicaleffects-radialgradient#horizontalOffset-prop&quot;&gt;horizontalOffset&lt;/a&gt;: 0 &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e79ab51b4ab3a5adf65273533a2da07a80479b2" translate="yes" xml:space="preserve">
          <source>&lt;b&gt; &lt;a href=&quot;qml-qtgraphicaleffects-radialgradient#horizontalOffset-prop&quot;&gt;horizontalOffset&lt;/a&gt;: 150 &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c632e87bdec3b9589728749baf11bccbe5f7436b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt; &lt;a href=&quot;qml-qtgraphicaleffects-radialgradient#horizontalRadius-prop&quot;&gt;horizontalRadius&lt;/a&gt;: 100 &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5176b827ff58e070ee7f6173b7ba8056963bcaac" translate="yes" xml:space="preserve">
          <source>&lt;b&gt; &lt;a href=&quot;qml-qtgraphicaleffects-radialgradient#horizontalRadius-prop&quot;&gt;horizontalRadius&lt;/a&gt;: 300 &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0661dc1487678bc8e6084b6201abbabe24745a57" translate="yes" xml:space="preserve">
          <source>&lt;b&gt; &lt;a href=&quot;qml-qtgraphicaleffects-zoomblur#horizontalOffset-prop&quot;&gt;horizontalOffset&lt;/a&gt;: -100.0 &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccc8f81054bc3f56c38a30bb8abf6a2dee7a9bef" translate="yes" xml:space="preserve">
          <source>&lt;b&gt; &lt;a href=&quot;qml-qtgraphicaleffects-zoomblur#horizontalOffset-prop&quot;&gt;horizontalOffset&lt;/a&gt;: 0.0 &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fa3607966ca210a0798fe87fa6fb7600425b75d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt; &lt;a href=&quot;qml-qtgraphicaleffects-zoomblur#horizontalOffset-prop&quot;&gt;horizontalOffset&lt;/a&gt;: 100.0 &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39b03289f1a07cc54c508c5176cd5ec44f4e1d92" translate="yes" xml:space="preserve">
          <source>&lt;b&gt; The property only has an effect on platforms that use software input panels.&lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99e9b8064ed267ca5e91c7cc590853dea55a24c8" translate="yes" xml:space="preserve">
          <source>&lt;b&gt; angle: 0 &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="920ef8dafb41176b95b5133214b145989e491fe0" translate="yes" xml:space="preserve">
          <source>&lt;b&gt; angle: 0.0 &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19e51987580b8c2f4a82f78327549ba4c9c4def1" translate="yes" xml:space="preserve">
          <source>&lt;b&gt; angle: 15.0 &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93349b57710beb897952202445362e0bb3ac1b31" translate="yes" xml:space="preserve">
          <source>&lt;b&gt; angle: 185 &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21f385f72c8e70bd9a8ac87fc096e9d5e6799e28" translate="yes" xml:space="preserve">
          <source>&lt;b&gt; angle: 30.0 &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a713b244a2c9782d0da913680e1a27b33f63f608" translate="yes" xml:space="preserve">
          <source>&lt;b&gt; angle: 45 &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b27c6ebc29bcbf6f26ccc1460d41cce32d8faf3b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt; angle: 45.0 &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bec1ce1af795531c7a6acd5ff5553e2ce2bc1b9" translate="yes" xml:space="preserve">
          <source>&lt;b&gt; angle: 90 &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3424e67155c2c869b99ce225d868481d5fca7bd0" translate="yes" xml:space="preserve">
          <source>&lt;b&gt; angle: 90.0 &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="946c5ae33c63e4fbe4b3c4d91cc6629b75f02fbe" translate="yes" xml:space="preserve">
          <source>&lt;b&gt; brightness: -0.25 &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="010b10c4da60171a5927a1bc1fc241412f293e3e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt; brightness: 0 &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1da63b17ab4913fc14f38b4d2ce42b470f12cd13" translate="yes" xml:space="preserve">
          <source>&lt;b&gt; brightness: 0.5 &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a5485df79b088c6a8ca6be019277629f4420710" translate="yes" xml:space="preserve">
          <source>&lt;b&gt; color: #000000 &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="feab320e92d50c77c5f4904bca2c4e823d102de9" translate="yes" xml:space="preserve">
          <source>&lt;b&gt; color: #0000ff &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7058b7ff7dfdddc536900ce5f9f09afd2e7561da" translate="yes" xml:space="preserve">
          <source>&lt;b&gt; color: #00ff00 &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f651515b92f0a6fb2b619b035c45ba2c17c35f7" translate="yes" xml:space="preserve">
          <source>&lt;b&gt; color: #5555ff &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd1428abfd6accf79e380b968f1df023c5a33e39" translate="yes" xml:space="preserve">
          <source>&lt;b&gt; color: #55ff55 &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8848c1e12fbc923c1f73d07d81f885f0499f4637" translate="yes" xml:space="preserve">
          <source>&lt;b&gt; color: #800000ff &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a7300b75dc81b6093a32070cbfd0b5aa25b2c53" translate="yes" xml:space="preserve">
          <source>&lt;b&gt; color: #8000ff00 &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e52f2556e346258ac28724672cd314f60426ed20" translate="yes" xml:space="preserve">
          <source>&lt;b&gt; color: #80ff0000 &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac1895688aeb097609dafc1cdc82c55020562782" translate="yes" xml:space="preserve">
          <source>&lt;b&gt; color: #aa000000 &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6da4432e712311f9d0788dbb7ee543a06f8a384e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt; color: #aa00ff00 &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0391c60ed7bb8d102c56130d47de68b596cf4b11" translate="yes" xml:space="preserve">
          <source>&lt;b&gt; color: #ff0000 &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b83416ef616f33e468def77d9a8213554d29a4df" translate="yes" xml:space="preserve">
          <source>&lt;b&gt; color: #ffffff &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d408c81b412469b3c75ec4f88a2441912d483be" translate="yes" xml:space="preserve">
          <source>&lt;b&gt; contrast: -0.5 &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab017cf93653ca59d7b76d47e6e7d23ce2df3301" translate="yes" xml:space="preserve">
          <source>&lt;b&gt; contrast: 0 &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b938a2ead1d7743a50a0c5f87bcabb94d8734cd1" translate="yes" xml:space="preserve">
          <source>&lt;b&gt; contrast: 0.5 &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a8376faa55185254712e9b0132d8a75a9dd422d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt; cornerRadius: 0 &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="488d1277a347b896be452c113c7c38111a98ed94" translate="yes" xml:space="preserve">
          <source>&lt;b&gt; cornerRadius: 25 &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e553f4e297db37580599e840d8e60872e0f4472" translate="yes" xml:space="preserve">
          <source>&lt;b&gt; cornerRadius: 50 &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e75a95a540a1086ab38e09cdf1d72f479c1ab5e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt; desaturation: 0.0 &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cec4120520ea0cff22fda9ad0dfa631e15310c0" translate="yes" xml:space="preserve">
          <source>&lt;b&gt; desaturation: 0.5 &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6bf19ee8cb581a5132cc3138c6b4e72240ee179" translate="yes" xml:space="preserve">
          <source>&lt;b&gt; desaturation: 1.0 &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="254ac9df59988c04d63c9c8936dc1cb61df98565" translate="yes" xml:space="preserve">
          <source>&lt;b&gt; deviation: 1 &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3707735e05f856f953b4553762bf720db4a5eb3b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt; deviation: 2 &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5332565cb3668b5ca4a653079804bcc7a3f53e3" translate="yes" xml:space="preserve">
          <source>&lt;b&gt; deviation: 4 &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f114abe74c76d4d1c75819c872298e785b2cf7f3" translate="yes" xml:space="preserve">
          <source>&lt;b&gt; displacement: -0.2 &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83ff4887e4b89753d653bb3822b5674e50e358d7" translate="yes" xml:space="preserve">
          <source>&lt;b&gt; displacement: 0.0 &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bfe4e306aef82310512087d2e511ede9173e0d4" translate="yes" xml:space="preserve">
          <source>&lt;b&gt; displacement: 0.2 &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4306cce3507618e578b08b8c38afb49da58cfffc" translate="yes" xml:space="preserve">
          <source>&lt;b&gt; end: Qt.point(150, 150) &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="623709c4f495bef2e688b888784e7701b76e9d5a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt; end: Qt.point(300, 0) &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d413104da802cdb318585374b36a29dcfcea529" translate="yes" xml:space="preserve">
          <source>&lt;b&gt; end: Qt.point(300, 300) &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8be82f7b5db90ae2e17ff76dcb0b7c7beac0153" translate="yes" xml:space="preserve">
          <source>&lt;b&gt; fast: false &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b51a71a826a674ba6b23f8caae6d91babcda6c84" translate="yes" xml:space="preserve">
          <source>&lt;b&gt; fast: true &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f270b4d0b8745c6848db29300e611fbd0ca6573a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt; gamma: 0.5 &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a052529f65ea66fd9bc5b47ddbebef73212a26dc" translate="yes" xml:space="preserve">
          <source>&lt;b&gt; gamma: 1.0 &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c646533d0d61d74197499115ac1a989bc8a1165" translate="yes" xml:space="preserve">
          <source>&lt;b&gt; gamma: 2.0 &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77db8b3c84dafd5f2255e3ba35bb2f8c0f67ea6a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt; gamma: Qt.vector3d(1.0, 0.1, 4.0) &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8d2f18afc979db72aa03a89d4c5f9420d95e316" translate="yes" xml:space="preserve">
          <source>&lt;b&gt; gamma: Qt.vector3d(1.0, 0.4, 2.0) &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1675b7a6792b81a3017a91295d24b91d0401e62c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt; gamma: Qt.vector3d(1.0, 1.0, 1.0) &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c4761eae9b6601702071dc0014befe4238754ab" translate="yes" xml:space="preserve">
          <source>&lt;b&gt; glowRadius: 10 &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f33ec0a60032b3bde6d2d289b726784957e87f0c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt; glowRadius: 20 &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec0913c9095ac53c9d622e15acecf9edde75f709" translate="yes" xml:space="preserve">
          <source>&lt;b&gt; glowRadius: 40 &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="120cf8a13379f8b033dd36c5b801b6cdfd6923f9" translate="yes" xml:space="preserve">
          <source>&lt;b&gt; horizontalOffset: -100.0 &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29bda514df6e6d853c2d8181e73afbc02782d5e9" translate="yes" xml:space="preserve">
          <source>&lt;b&gt; horizontalOffset: -150 &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="363c413b27dc7c762c10b90f9b79fa779178fcee" translate="yes" xml:space="preserve">
          <source>&lt;b&gt; horizontalOffset: -20 &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7de18e94544340c7a9df00d9a4acec1c8f94d684" translate="yes" xml:space="preserve">
          <source>&lt;b&gt; horizontalOffset: -50 &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc7f3f817e35e34ce2c49a02c3d59f0e52e7ab62" translate="yes" xml:space="preserve">
          <source>&lt;b&gt; horizontalOffset: -75.0 &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04bbe58f3cdc4c0ffa96b6963ff06bbfe263a835" translate="yes" xml:space="preserve">
          <source>&lt;b&gt; horizontalOffset: 0 &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1c5239851f42c8639852615a0ab13cbbcbdc85d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt; horizontalOffset: 0.0 &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c9e20e4d9f57035cc15f9ca732b5bf9d8582f23" translate="yes" xml:space="preserve">
          <source>&lt;b&gt; horizontalOffset: 100.0 &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb26f08facb9b755722a5f6c282436da9204c07a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt; horizontalOffset: 150 &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73ff35cee944ec0834563051c93759b1c0e3a0fb" translate="yes" xml:space="preserve">
          <source>&lt;b&gt; horizontalOffset: 20 &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dc50634b21b52284c9aa0b0979f125dd2a0695e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt; horizontalOffset: 50 &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4975629ca5f0d34c8f7ad2bf204a51f964d31320" translate="yes" xml:space="preserve">
          <source>&lt;b&gt; horizontalOffset: 75.0 &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f15387d568346909ba435054afb156ec50953b83" translate="yes" xml:space="preserve">
          <source>&lt;b&gt; horizontalRadius: 100 &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a972be0612cf1bf893ff86e160b4699fe9d631c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt; horizontalRadius: 300 &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f7bb167ee2c566ae177f0dcf5b55dcf914de128" translate="yes" xml:space="preserve">
          <source>&lt;b&gt; hue: -0.3 &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d60b593882066ba21acebe30efbeb89fc1fe76d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt; hue: 0.0 &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6194f7800ac46fb992f91b0d7f6bc0b2c5d7d770" translate="yes" xml:space="preserve">
          <source>&lt;b&gt; hue: 0.2 &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68c9e35d4a7c99d48ef2d1d2af3ac46528812cfe" translate="yes" xml:space="preserve">
          <source>&lt;b&gt; hue: 0.3 &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e78d2eb3d06f4a37c108664d24adc56601170c31" translate="yes" xml:space="preserve">
          <source>&lt;b&gt; hue: 0.5 &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7f92313b1a6960630959105a29a62dedc672d2e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt; hue: 0.8 &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed86d6f9b64abc429a85aca3ba77625c3bc27ed3" translate="yes" xml:space="preserve">
          <source>&lt;b&gt; length: 0.0 &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5219f3b7f335c3364616ddf1df378953afc2044" translate="yes" xml:space="preserve">
          <source>&lt;b&gt; length: 32.0 &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fff254d84874ee4147dd7e7d8b2f2a23f39f51d6" translate="yes" xml:space="preserve">
          <source>&lt;b&gt; length: 48.0 &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="482f2568f8744237527f13a38dffa28c06f07af3" translate="yes" xml:space="preserve">
          <source>&lt;b&gt; lightness: -0.5 &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fe04b0c9a46e9a71600a8c5dbeb13244b7b4f0d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt; lightness: -0.75 &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65c1d3df942daf11c886837fbf4e4b39dd749796" translate="yes" xml:space="preserve">
          <source>&lt;b&gt; lightness: 0 &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b3ff60f6920616363d8ac8dd867c1a14c6d1855" translate="yes" xml:space="preserve">
          <source>&lt;b&gt; lightness: 0.0 &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c89550bf3f63b6a8c497acf7409f0eb6fb2f3df" translate="yes" xml:space="preserve">
          <source>&lt;b&gt; lightness: 0.5 &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb078a028ff7ca1733c032c9ae5fb5248edafb05" translate="yes" xml:space="preserve">
          <source>&lt;b&gt; lightness: 0.75 &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b1e87c9af49ad937aaacfcd466ea5552e55cf1f" translate="yes" xml:space="preserve">
          <source>&lt;b&gt; loops: 20 &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aab8bdf9c8804852aa53cbc5bce095fa74e7bfa0" translate="yes" xml:space="preserve">
          <source>&lt;b&gt; loops: 4 &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="273cfb7efdc98caa8d0c05588ea5b4a043c6bc4e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt; loops: 70 &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bf389283209ea398b97e41f9881e1333c461d93" translate="yes" xml:space="preserve">
          <source>&lt;b&gt; maximumInput: #FFFFFF30 &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f6e8f5446d97890477c30ad94da73dc8c3bb6bb" translate="yes" xml:space="preserve">
          <source>&lt;b&gt; maximumInput: #FFFFFF80 &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c279d0279093317857618610ace49cd19761d0d3" translate="yes" xml:space="preserve">
          <source>&lt;b&gt; maximumInput: #FFFFFFFF &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98f4a96bb333519c684d3bccc2c0b8bf9403d090" translate="yes" xml:space="preserve">
          <source>&lt;b&gt; maximumOutput: #FFFFFF30 &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c5627092c97a0e1781daab2879fa213afa04019" translate="yes" xml:space="preserve">
          <source>&lt;b&gt; maximumOutput: #FFFFFF80 &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e42469d64494c73b025d6035ee02c5df3f095728" translate="yes" xml:space="preserve">
          <source>&lt;b&gt; maximumOutput: #FFFFFFFF &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0892fcca31843334b825853ab41c23ea4cc86da6" translate="yes" xml:space="preserve">
          <source>&lt;b&gt; minimumInput: #00000000 &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9aaac3d0eacdbdad48624cb6ba1db33a6c8afe8" translate="yes" xml:space="preserve">
          <source>&lt;b&gt; minimumInput: #00000040 &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fca5327647f5c4ead6adbcd31bc8809a58602ca" translate="yes" xml:space="preserve">
          <source>&lt;b&gt; minimumInput: #00000070 &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54eb17ca147f1204f51ca388ae1ba548af639f1b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt; minimumOutput: #00000000 &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dced8df30ae8d1a4bffb96b6a79514979609f2ba" translate="yes" xml:space="preserve">
          <source>&lt;b&gt; minimumOutput: #00000070 &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="413f2efe8aa489ebae613214888ef18bdcba9061" translate="yes" xml:space="preserve">
          <source>&lt;b&gt; minimumOutput: #000000A0 &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
