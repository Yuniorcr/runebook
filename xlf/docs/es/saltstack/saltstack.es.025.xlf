<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="saltstack">
    <body>
      <group id="saltstack">
        <trans-unit id="78d3d8899357cb735d24b578768774a2e1cf3d8a" translate="yes" xml:space="preserve">
          <source>Output the data in lines, very nice for running commands</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d5dec1171686f119aba5432dfd1d8e7008d0a42" translate="yes" xml:space="preserve">
          <source>Output the given args and kwargs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abad85cbac1fecc4ad3cef3e9ee5bc7cf1be7d8b" translate="yes" xml:space="preserve">
          <source>Output the payload being posted to the log file in debug mode</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3c8c95c5e534bcd2ea0034a0d83177efa6923f4" translate="yes" xml:space="preserve">
          <source>Output:</source>
          <target state="translated">Output:</target>
        </trans-unit>
        <trans-unit id="6da0dc290ae42a7cac5864180d4db894e8575a96" translate="yes" xml:space="preserve">
          <source>Outputs an ordered dict if applicable (default: True)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d6d74a4dfc464ab8d13649c0fa0e030d1bb3bb6" translate="yes" xml:space="preserve">
          <source>Outputter for displaying results of state runs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc289c04b949ac0f07b5308bda219cfc57b0e216" translate="yes" xml:space="preserve">
          <source>Overall process</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dd8f9ae745d6e9c0dda1de93807cbf4ec3d3cfd" translate="yes" xml:space="preserve">
          <source>Override GNUPG Home directory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc153a6727af4bf7d705592a80d077be905decee" translate="yes" xml:space="preserve">
          <source>Override Salt's &lt;a href=&quot;https://docs.saltstack.com/en/latest/ref/configuration/master.html#std:conf_master-renderer&quot;&gt;&lt;code&gt;default global renderer&lt;/code&gt;&lt;/a&gt; for the &lt;code&gt;file_tree&lt;/code&gt; pillar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0f9e3fe45fa3d9ab8405ce2f78f824abe000130" translate="yes" xml:space="preserve">
          <source>Override individual returner configuration items</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe43e9eae5b0c7ea27d53f7f3747535e8165ba37" translate="yes" xml:space="preserve">
          <source>Override the delimiter used to separate nested levels of a data structure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="868e9df01bed91162d024b6815648df11515deac" translate="yes" xml:space="preserve">
          <source>Override the refspec(s) configured for the remote with this argument. Multiple refspecs can be passed, comma-separated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fc23e2ad122b0e60fb6a72b593455e657a374e9" translate="yes" xml:space="preserve">
          <source>Override these in the minion config</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08d07d1587adadd2c916d674babfdaf27ed326b2" translate="yes" xml:space="preserve">
          <source>Overrides default context variables passed to the template</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f2e2fcd50f0248a16cd812a1b59b3b6a8978e2b" translate="yes" xml:space="preserve">
          <source>Overrides default context variables passed to the template.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bfc43683c2019e39e154112ec9030fbade7be08" translate="yes" xml:space="preserve">
          <source>Overrides keystone tenant_update form api V2. For keystone api V3 only.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69298368942a9580b0fc26cdef8f12560b82aa27" translate="yes" xml:space="preserve">
          <source>Overrides the &lt;a href=&quot;https://docs.saltstack.com/en/latest/ref/configuration/minion.html#std:conf_minion-multiprocessing&quot;&gt;&lt;code&gt;multiprocessing&lt;/code&gt;&lt;/a&gt; option, per proxy minion. The &lt;code&gt;multiprocessing&lt;/code&gt; option must be turned off for SSH-based proxies. However, some NAPALM drivers (e.g. Arista, NX-OS) are not SSH-based. As multiple proxy minions may share the same configuration file, this option permits the configuration of the &lt;code&gt;multiprocessing&lt;/code&gt; option more specifically, for some proxy minions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39c6fa25b1264db2c2623385defdd3613dab27c3" translate="yes" xml:space="preserve">
          <source>Overrides the default backup mode for all replaced files. See &lt;a href=&quot;https://docs.saltstack.com/en/latest/ref/states/backup_mode.html#file-state-backups&quot;&gt;backup_mode documentation&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a144e01c3dd4c370ddc7b95a81aacb1ca181b435" translate="yes" xml:space="preserve">
          <source>Overrides the default backup mode for the user's crontab.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42333f4f32ee0baddf80e4324cacd4519f037ef5" translate="yes" xml:space="preserve">
          <source>Overrides the default backup mode for this specific file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fa2b49ff8d0b3da775610580f9628e5ba994ff4" translate="yes" xml:space="preserve">
          <source>Overrides the default backup mode for this specific file. See &lt;a href=&quot;https://docs.saltstack.com/en/latest/ref/states/backup_mode.html#file-state-backups&quot;&gt;backup_mode documentation&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="680fb89c983eea9af4d38a544adb5ce6b5bf6e05" translate="yes" xml:space="preserve">
          <source>Overriding the alarm values on the resource:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1f4c5cd6d52db0bca356ce1a6c17266551764ec" translate="yes" xml:space="preserve">
          <source>Overriding the attribute values on the resource:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e90b65d5aa986fe0cf6336a6b87374569988407" translate="yes" xml:space="preserve">
          <source>Overture 1400, 2200, 5000, 5100, 6000</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e30076e2257e2f0d279b17faed57a267cb6649d" translate="yes" xml:space="preserve">
          <source>Overwrite an existing private key if the provided passphrase cannot decrypt it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a58e709665c7b1f1da31ca84a931465980534f0" translate="yes" xml:space="preserve">
          <source>Overwrite existing target</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5035a08141fb29bda7b763c5ab3cd51072543f75" translate="yes" xml:space="preserve">
          <source>Overwrite the stage variables for the given restApiId and stage name with the given variables, variables must be in the form of a dictionary. Overwrite will always remove all the existing stage variables associated with the given restApiId and stage name, follow by the adding of all the variables specified in the variables dictionary</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3fb68812e95c61efdc71fd98986869992b48982" translate="yes" xml:space="preserve">
          <source>Owner is set for the key that contains the value/data pair. You cannot set ownership on value/data pairs themselves.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebdfb714d8720a1610ee57320122ba14016a9123" translate="yes" xml:space="preserve">
          <source>Owner of file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14efa486dc7fdd54c2d1467a5596ffba374c7880" translate="yes" xml:space="preserve">
          <source>PAM authentication will not work for the &lt;code&gt;root&lt;/code&gt; user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5760a6d70fbadb01a16ae0662cd1a61427f0ed84" translate="yes" xml:space="preserve">
          <source>PCS is installed, pcs service is started and the password for the hacluster user is set and known.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2b13af3ab8486798c0f766b44a88bbe4fd9b142" translate="yes" xml:space="preserve">
          <source>PEF Alerting Enable/Disable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2079e77022f7b37cc5350601f539f14b607a643" translate="yes" xml:space="preserve">
          <source>PEM string input to be written out.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a49915307f2eaa838f091a9c86fdd57bdea2f92" translate="yes" xml:space="preserve">
          <source>PID of process to kill.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e88ca6fd10e6f1f1eedfac1bb200af990eadd8b8" translate="yes" xml:space="preserve">
          <source>PID of process to query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4c9e76c8e1f9084945e371096e99441b7a727ee" translate="yes" xml:space="preserve">
          <source>PKI Client Module (Windows 8+ / Windows Server 2012+)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b62c3c8e2cf801545cc6237be3b9dcb026f1aab" translate="yes" xml:space="preserve">
          <source>PLEASE NOTE: This module is currently in early development, and considered to be experimental and unstable. It is not recommended for production use. Unless you are actively developing code in this module, you should use the OpenStack module instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="765c46d83cee9db0eb50de314f4278452d59853b" translate="yes" xml:space="preserve">
          <source>PSGet</source>
          <target state="translated">PSGet</target>
        </trans-unit>
        <trans-unit id="74cc7ff7cdba9f8f6b690dcb9cbb7bfdf38a7dd2" translate="yes" xml:space="preserve">
          <source>Pablo Su&amp;aacute;rez Hern&amp;aacute;ndez &amp;lt;&lt;a href=&quot;mailto:psuarezhernandez%40suse.de&quot;&gt;psuarezhernandez@suse.de&lt;/a&gt;&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f248dfd9b91656b3380a6970410d1d322638b3c6" translate="yes" xml:space="preserve">
          <source>Pack up a directory structure, into a specific format</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7f6716f36d5cca283ce4d7fb7a483df0268a16b" translate="yes" xml:space="preserve">
          <source>Package group to install. To install more than one group, either use a comma-separated list or pass the value as a python list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cdad8a50c61271917c896240d2685cdbd12c0d0" translate="yes" xml:space="preserve">
          <source>Package helper functions using &lt;code&gt;salt.modules.pkg&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95f5f918744b33741a5d66ba45ad55eb07fa879d" translate="yes" xml:space="preserve">
          <source>Package management operations specific to APT- and DEB-based systems</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21789c1c72f775ab0fca21311ddfc79de48e9439" translate="yes" xml:space="preserve">
          <source>Package names are currently case-sensitive. If the minion is using a package manager which is not case-sensitive (such as &lt;a href=&quot;../../modules/all/salt.modules.pkgng#module-salt.modules.pkgng&quot;&gt;&lt;code&gt;pkgng&lt;/code&gt;&lt;/a&gt;), then this state will fail if the proper case is not used. This will be addressed in a future release of Salt.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b0ef4fed22d08661a5cb79cf20b5aa796314f29" translate="yes" xml:space="preserve">
          <source>Package purges are not supported by opkg, this function is identical to &lt;a href=&quot;#salt.modules.opkg.remove&quot;&gt;&lt;code&gt;pkg.remove&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33c4cfb166f5e709e916f0944bfde5c6bda659b1" translate="yes" xml:space="preserve">
          <source>Package purges are not supported by yum, this function is identical to &lt;a href=&quot;#salt.modules.yumpkg.remove&quot;&gt;&lt;code&gt;pkg.remove&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5c5617f8f56701940906fb32c2d1d851f8e3062" translate="yes" xml:space="preserve">
          <source>Package purges are not supported, this function is identical to &lt;code&gt;remove()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee231bbfebba8b66870df6c47859b8c3194e2425" translate="yes" xml:space="preserve">
          <source>Package support for AIX</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ff8fae75a6a77c93affc52fc60d5df09faf5b38" translate="yes" xml:space="preserve">
          <source>Package support for OpenBSD</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c53c20b63f2f15db7231daa43e27c7041717dca9" translate="yes" xml:space="preserve">
          <source>Package support for Solaris</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8aa3cdf5a607cd4c57e05eb90a102dd90b758ac0" translate="yes" xml:space="preserve">
          <source>Package support for XBPS package manager (used by VoidLinux)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd00d300b827817c17352dac1a97e3adb0dd3ae5" translate="yes" xml:space="preserve">
          <source>Package support for openSUSE via the zypper package manager</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbd2f8161c0770ae4ccf1d9693c685006c1787c0" translate="yes" xml:space="preserve">
          <source>Package support for pkgin based systems, inspired from freebsdpkg module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40aa8af09cb946d7e8119dd0121c11e020778afb" translate="yes" xml:space="preserve">
          <source>Package support for the REST example</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bdc77a960f0864256f95b48159b337e3ee12677" translate="yes" xml:space="preserve">
          <source>Package support for the dummy proxy used by the test suite</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90a026e19a433e049ad7027f8677ebb30900ce4f" translate="yes" xml:space="preserve">
          <source>Package.</source>
          <target state="translated">Package.</target>
        </trans-unit>
        <trans-unit id="43c8e5ac126789aaf49a267030d7e01f85400c1d" translate="yes" xml:space="preserve">
          <source>Packages installed or available, along with their attributes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26bf8ea5db7b32b7e57134f8b7ec502b8e3971e7" translate="yes" xml:space="preserve">
          <source>Packages required to ensure that the named package is built can be hosted on either the salt master server or on an HTTP or FTP server. Both HTTPS and HTTP are supported as well as downloading directly from Amazon S3 compatible URLs with both pre-configured and automatic IAM credentials</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09436c14d0040b766e24a409149ee5405fe029b9" translate="yes" xml:space="preserve">
          <source>Packages that have been uninstalled</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="605c99cf56ee5ef0490c95ec15fc1edd61ddff4f" translate="yes" xml:space="preserve">
          <source>Packages that would normally be installed by the package group (&quot;default&quot; packages), which should not be installed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="058248103f59781a2f5538393fe5df265e368180" translate="yes" xml:space="preserve">
          <source>Packages that would normally be installed by the package group (&quot;default&quot; packages), which should not be installed. Can be passed either as a comma-separated list or a python list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d8f2e7b891cd1708a5025d9df5e521d03453f8d" translate="yes" xml:space="preserve">
          <source>Packages which are included in a group, which would not normally be installed by a &lt;code&gt;yum groupinstall&lt;/code&gt; (&quot;optional&quot; packages). Note that this will not enforce group membership; if you include packages which are not members of the specified groups, they will still be installed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5277b8600b8feac1544bc62ef71e67aafcaa3ef5" translate="yes" xml:space="preserve">
          <source>Packages which are included in a group, which would not normally be installed by a &lt;code&gt;yum groupinstall&lt;/code&gt; (&quot;optional&quot; packages). Note that this will not enforce group membership; if you include packages which are not members of the specified groups, they will still be installed. Can be passed either as a comma-separated list or a python list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="499eebcbb956b002407b50a26d6305a2cfd38af1" translate="yes" xml:space="preserve">
          <source>Packaging type (jar,war,ear,etc)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1414481327e79e7584f1ba850d0c52ddfc229f28" translate="yes" xml:space="preserve">
          <source>Page :1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f3a8086904e4ae9231416bb34c4ace67f640c9e" translate="yes" xml:space="preserve">
          <source>Page ID. Can also be specified in the config file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2932622f5d4cf6c4310d8548b0b8139e518defd" translate="yes" xml:space="preserve">
          <source>Page number to return</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4b1e8e9a5975f52b8a7e8e6e629c9fdd7a7ae8d" translate="yes" xml:space="preserve">
          <source>PageSize :20</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79e029925d8f9fc4fc3a900d31cb13fe0a2530fe" translate="yes" xml:space="preserve">
          <source>Pair the bluetooth adapter with a device</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91db08ad6ef2e5d3943286761683e5d5985aa4bf" translate="yes" xml:space="preserve">
          <source>Palo Alto devices allow for access to the XML API with a generated 'API key'_ instead of username and password.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4617c6eb1581f69b66b15f8a19fec62dd8b4b9a7" translate="yes" xml:space="preserve">
          <source>Palo Alto devices running different versions will have different supported features and different command structures. In order to account for this, the proxy module can be leveraged to check if the panos device is at a specific revision level.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d26446a5d8ed1fe28cb116bcafae21d30b874ff" translate="yes" xml:space="preserve">
          <source>PaloAlto PA-2000, PA-3000, Virtualized Firewalls</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7950547051cb45634a4840e77551e8d03cc96ea3" translate="yes" xml:space="preserve">
          <source>Panorama Pass-Through (API Key)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34893d704d3aa385981e191f97c962c11db9e5d1" translate="yes" xml:space="preserve">
          <source>Panorama Pass-Through (Password)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afc129571bf06499cb7e3b0ffe14106bdb906a2f" translate="yes" xml:space="preserve">
          <source>Parallel</source>
          <target state="translated">Parallel</target>
        </trans-unit>
        <trans-unit id="93e0b1f1ee0d213afcaeb53121a691f0460f9492" translate="yes" xml:space="preserve">
          <source>Parallels Cloud Module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0ab392dc0d96815d13c9336b44b807511d2f601" translate="yes" xml:space="preserve">
          <source>Param:</source>
          <target state="translated">Param:</target>
        </trans-unit>
        <trans-unit id="f699f295e5ae4ac633cfa18437fed38d028b3fdb" translate="yes" xml:space="preserve">
          <source>Parameter</source>
          <target state="translated">Parameter</target>
        </trans-unit>
        <trans-unit id="954b4168c76a0cdbc241a047fb873023ecaea5da" translate="yes" xml:space="preserve">
          <source>Parameter dict used to create the stack</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="439474a107e32f484736a3e8d9324a5fe83095e4" translate="yes" xml:space="preserve">
          <source>Parameter dict used to update the stack</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea69cceafe4a3e5bf0c86ca6c008780ae3010588" translate="yes" xml:space="preserve">
          <source>Parameter group description.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7fb4ac98f42b68e7e1ed92ac80f21b7b0e4d9cf" translate="yes" xml:space="preserve">
          <source>Parameter objects to use. Will override objects read from pillars.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f0028eb865010467a04bafb10b396368f63e025" translate="yes" xml:space="preserve">
          <source>Parameter values to use. Will override values read from pillars.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ca99b8c9b5881fb8ac1a65d619880306f5481aa" translate="yes" xml:space="preserve">
          <source>Parameters for this function should be set by the state being triggered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcbb5c787a9b5f28f6ae2c3773ccf0b25420f12e" translate="yes" xml:space="preserve">
          <source>Parameters for this function should be set by the watching service. (i.e. &lt;code&gt;service.running&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c6dc69a263bf1267e8db3304b6a3c7a6c3f80b9" translate="yes" xml:space="preserve">
          <source>Parameters of freebsd-update command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cb7e1d23266993a2bc2a4c0d44670ffb70c9595" translate="yes" xml:space="preserve">
          <source>Parameters set in a profile can be overridden by passing additional arguments to this function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81b5d68bbbd640fe505934b6ddc714176b791159" translate="yes" xml:space="preserve">
          <source>Parameters set in a profile can be overridden by passing additional container creation arguments (such as the ones passed to &lt;a href=&quot;#salt.modules.lxc.create&quot;&gt;&lt;code&gt;lxc.create&lt;/code&gt;&lt;/a&gt;) to this function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="381c775599d6e4185d4410725809e360928357cd" translate="yes" xml:space="preserve">
          <source>Parameters:</source>
          <target state="translated">Parameters:</target>
        </trans-unit>
        <trans-unit id="0e49301ad107c637cefaff75bd7da1f2e052bbae" translate="yes" xml:space="preserve">
          <source>Params are case sensitive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df6a5bf694ef2e1cf021a853dc7a3db88e190c10" translate="yes" xml:space="preserve">
          <source>Params are the same as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3a57adb59081de5f05ef55126705058cb7c75a9" translate="yes" xml:space="preserve">
          <source>Params structure with values converted to string for further comparison purposes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ea58cf734b1e922cadead6f5b1482bc77521214" translate="yes" xml:space="preserve">
          <source>Params that are different from existing object. Result extended by object ID can be passed directly to Zabbix API update method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9458bbf121592cdb74ddf126e7a4ee116b4e17a7" translate="yes" xml:space="preserve">
          <source>Parar str stdin:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff4bfd0b5a4415e19901807bfa2d4f002a425072" translate="yes" xml:space="preserve">
          <source>Parent path to create</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe04389d7c9fb98272b4341dc6de087004017479" translate="yes" xml:space="preserve">
          <source>Parse /etc/hosts file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="606276a236fc53d86fec140ad57cba975d1fed34" translate="yes" xml:space="preserve">
          <source>Parse GRUB conf file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f865ede5f5aa8b3ffcf2ab817b0ca6663e03f623" translate="yes" xml:space="preserve">
          <source>Parse a string or file through Salt's renderer system</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcb8726917555e3b4b4e570d4115351a518619b5" translate="yes" xml:space="preserve">
          <source>Parse config.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45613f9f6f653eb58acf248c246d2cd16bd29bda" translate="yes" xml:space="preserve">
          <source>Parse configuration from the device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b2525490b97723bc9967a989b441a817bd2ad25" translate="yes" xml:space="preserve">
          <source>Parse state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38ed72f415a8838b45995fc16bd288c230fc4ea2" translate="yes" xml:space="preserve">
          <source>Parse the resolver configuration file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="702021c50e5fcad7acb869441eb8d5150345881d" translate="yes" xml:space="preserve">
          <source>Parse the return data and return metrics to Librato.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa6f3fb0a98639b9e95f7e3562f2d064c0fdfcdc" translate="yes" xml:space="preserve">
          <source>Parse through the children of all parent lines matching &lt;code&gt;parent_regex&lt;/code&gt;, and return a list of child objects, which matched the &lt;code&gt;child_regex&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26820b8cc008be5b84b909556605abc0e068219e" translate="yes" xml:space="preserve">
          <source>Parse varstack data and return the result</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9c851d916a90ab76977ee8268e64364ce0e5f14" translate="yes" xml:space="preserve">
          <source>Parses RPM metadata and returns a dictionary of information about the package (name, version, etc.).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62bd0540bc6dc9b6eb1290d9d05872ef71a91c9e" translate="yes" xml:space="preserve">
          <source>Parses a zone file. Can be passed raw zone data on the API level.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="406c962a7742efee7cb66f71d5c21a076c70f0c9" translate="yes" xml:space="preserve">
          <source>Parses lines from the SSH config to create roster targets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ab69baa2fd84cdc358d6830ebf37069adfc83b8" translate="yes" xml:space="preserve">
          <source>Parses roster entries out of Host directives from SSH config</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d57a3b6a4ed70aa00e4d5e2a44961f07f33b463" translate="yes" xml:space="preserve">
          <source>Parses the CSR. Returns a dictionary of result values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7118f1d3f9d5f6252c81fa106a09a343a10e339" translate="yes" xml:space="preserve">
          <source>Parses the input to pkg.install and returns back the package(s) to be installed. Returns a list of packages, as well as a string noting whether the packages are to come from a repository or a binary package.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="168d4733237d0299dd88d7d210e95aefc1da50b4" translate="yes" xml:space="preserve">
          <source>Particular repository to look for snapshots</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7cd56f2a2a3f47830760edfb89946eb7b9e2cd1" translate="yes" xml:space="preserve">
          <source>Pass</source>
          <target state="translated">Pass</target>
        </trans-unit>
        <trans-unit id="13b4d869d656c507b0519bacff48bd733e9b0cba" translate="yes" xml:space="preserve">
          <source>Pass -f so that the cache is always refreshed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec7f488101eca3152277b1441ab35dfd50958e16" translate="yes" xml:space="preserve">
          <source>Pass &lt;code&gt;queue=true&lt;/code&gt; through to the state function</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60bb56012b422bfe29e75cdeb3b68be12e451ccb" translate="yes" xml:space="preserve">
          <source>Pass &lt;code&gt;test=true&lt;/code&gt; or &lt;code&gt;test=false&lt;/code&gt; through to the state function. This can be used to overide a test mode set in the minion's config file. If left as the default of None and the 'test' mode is supplied on the command line, that value is passed instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f28f4cf244ea2fcd1e575ba4c0ab5ca925ccb36f" translate="yes" xml:space="preserve">
          <source>Pass Renderer for Salt</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="348b3fae21fd2d0f074f18290d46aeb37a3c05b1" translate="yes" xml:space="preserve">
          <source>Pass a specific pillar environment from which to compile pillar data. If not specified, then the minion's &lt;a href=&quot;https://docs.saltstack.com/en/latest/ref/configuration/minion.html#std:conf_minion-pillarenv&quot;&gt;&lt;code&gt;pillarenv&lt;/code&gt;&lt;/a&gt; option is not used, and if that also is not specified then all configured pillar environments will be merged into a single pillar dictionary and returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4228e65a71962ccc1bd8ff7dbb4cd949144f182" translate="yes" xml:space="preserve">
          <source>Pass additional options to rsync, should be included as a list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="373000d3038ebd79c95583513a43b7f44e502d87" translate="yes" xml:space="preserve">
          <source>Pass any additional arguments to gzip</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a42d7828874db83c1671d769dab73d950781f2a" translate="yes" xml:space="preserve">
          <source>Pass any arguments needed to execute the function</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba6c48f1286fce5ba3de3590803d2239d43dabd2" translate="yes" xml:space="preserve">
          <source>Pass in a CIDR range to filter minions by IP address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fd6eb06bddc88de07c7b7674840006a9cf68709" translate="yes" xml:space="preserve">
          <source>Pass in a configuration value that should be preceded by the module name and a dot, this will return a list of all read key/value pairs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="261972543461ea3dfb22b9df049c267b552cee63" translate="yes" xml:space="preserve">
          <source>Pass in a function name to discover what provider is being used</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e897d47cc6b7a92f73856e174db0c5a063663d03" translate="yes" xml:space="preserve">
          <source>Pass in a generic option and receive the value that will be assigned</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95c023dd557aacd650910c2d89d709e72c738818" translate="yes" xml:space="preserve">
          <source>Pass in the mnt dict returned from nbd_mount to unmount and disconnect the image from nbd. If all of the partitions are unmounted return an empty dict, otherwise return a dict containing the still mounted partitions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="148e05711985356b4f748f695de02085546bf5ae" translate="yes" xml:space="preserve">
          <source>Pass in the nbd connection device location, mount all partitions and return a dict of mount points</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58c4d252ae724e825f5f38792c959a84d6f9a68a" translate="yes" xml:space="preserve">
          <source>Pass in the number of minions to allow for failure before setting the result of the execution to False</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1761f50fb8dd7fb411d5f4d76b9fc5e45c27c11" translate="yes" xml:space="preserve">
          <source>Pass in two strings, the first naming the executable language, aka - python2, python3, ruby, perl, lua, etc. the second string containing the code you wish to execute. All cmd artifacts (stdout, stderr, retcode, pid) will be returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa01fdf807c0c51a98196fadc24fa4620d9b761f" translate="yes" xml:space="preserve">
          <source>Pass in two strings, the first naming the executable language, aka - python2, python3, ruby, perl, lua, etc. the second string containing the code you wish to execute. The stdout will be returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9981a9a567989b76a845f84c2766d966c074c92" translate="yes" xml:space="preserve">
          <source>Pass options to modify rpm verify behavior using the &lt;code&gt;verify_options&lt;/code&gt; keyword argument</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a57ba120caab750a903aa88b85f664e1b6441fd6" translate="yes" xml:space="preserve">
          <source>Pass removables=False to avoid deleting cdrom and floppy images. To avoid disruption, the default but dangerous value is True. This will be changed to the safer False default value in Sodium.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="650eca60b245de69e9861ba93b063b61e4fbc49e" translate="yes" xml:space="preserve">
          <source>Pass the &lt;code&gt;pillar&lt;/code&gt; kwarg through to the state function</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c81ac7292123c70488544691cd3aa41b09758713" translate="yes" xml:space="preserve">
          <source>Pass this argument as a comma-separated list (or Python list) of arguments, and translation for each passed argument name will be skipped. Alternatively, pass &lt;code&gt;True&lt;/code&gt; and &lt;em&gt;all&lt;/em&gt; translation will be skipped.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc0bf353d2c45efb37472cf2d0041d319277da28" translate="yes" xml:space="preserve">
          <source>Pass through options to serializer. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a570dfdfd1c035a26c728ccce560656b8caff694" translate="yes" xml:space="preserve">
          <source>Passes &lt;code&gt;--force-yes&lt;/code&gt; to the apt-get command. Don't use this unless you know what you're doing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6da2d610c8ea31b3aaa760f32c7ff3a6bb1eee5e" translate="yes" xml:space="preserve">
          <source>Passes through all the parameters described in the &lt;a href=&quot;#salt.utils.http.query&quot;&gt;&lt;code&gt;utils.http.query function&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be8ddcebb86441d386d8c90e0f19fb717c7a3331" translate="yes" xml:space="preserve">
          <source>Passes through all the parameters described in the &lt;a href=&quot;../../modules/all/salt.modules.http#salt.utils.http.query&quot;&gt;&lt;code&gt;utils.http.query function&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cef6dcec7c8bdb26cb488e188f848e3e590be0e" translate="yes" xml:space="preserve">
          <source>Passing '-a' as name is deprecated and will be removed in Sodium.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aacc2de8df12d7a5521578830df9d25940932d81" translate="yes" xml:space="preserve">
          <source>Passing options from the command line:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcc0d8722e62d670035ae2da29627c1a0a8be1a0" translate="yes" xml:space="preserve">
          <source>Passphrase for encrypting the private key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7ea61acb7537be080a411c6fdd89ab5d6990171" translate="yes" xml:space="preserve">
          <source>Passphrase for encryting the private key</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82e332db3e7630c512f3132f39d1586aeb3a0024" translate="yes" xml:space="preserve">
          <source>Passphrase to decrypt the private key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bffd7804ae47e51161a079596d69e47aa8b9dee1" translate="yes" xml:space="preserve">
          <source>Passphrase to the signing_pub_key if it is an encrypted private key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c959bbcd1e15779ff4f0036ec69865918f1ae157" translate="yes" xml:space="preserve">
          <source>Passphrase used to decrypt the signing_private_key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="067f6899905edb04ffd1ca1193249cb9918aa9b8" translate="yes" xml:space="preserve">
          <source>Passthrough argument given to pyvenv if True</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf83e9e3b232fa92f2443343326c22820d4ff9a9" translate="yes" xml:space="preserve">
          <source>Passthrough argument given to virtualenv</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="721c479098d049ed094909b994e83fd88a158e43" translate="yes" xml:space="preserve">
          <source>Passthrough argument given to virtualenv if True</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a763e5ed35511769d4970f4d9152a732538a384" translate="yes" xml:space="preserve">
          <source>Passthrough argument given to virtualenv if not None</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79089ccefd744abe439846b161b1d2cacf91afd8" translate="yes" xml:space="preserve">
          <source>Passthrough argument given to virtualenv or pyvenv</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bffc1b9d68374efc599c476c7c08bd253044100" translate="yes" xml:space="preserve">
          <source>Passthrough the return from the dracr module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7159a0caff2104b8fdafd1b487c1551129e8fcfc" translate="yes" xml:space="preserve">
          <source>Password constraints:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="453963481e507aa2b996db0f09ed6d68a8c22d0f" translate="yes" xml:space="preserve">
          <source>Password for optional username. If omitted, PsExec will prompt for one to be entered for each host.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfdc090c10e6643da3f60777f1d560c809771269" translate="yes" xml:space="preserve">
          <source>Password for the admin user specified by the &lt;code&gt;user&lt;/code&gt; parameter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c4f36f5739edd7bb9330208ada651f401a3c7c6" translate="yes" xml:space="preserve">
          <source>Password for the admin user specified with the &lt;code&gt;user&lt;/code&gt; parameter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2df1b934674e0eebdc936b342d88b117ac443ccd" translate="yes" xml:space="preserve">
          <source>Password for the chassis. Note: If this password is set for the chassis, the current implementation of this state will set this password both on the chassis and the iDrac passwords on any configured blades. If the password for the blades should be distinct, they should be set separately with the blade_idrac function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="449a1ed15dea77d6564f8be17a13b0e163307653" translate="yes" xml:space="preserve">
          <source>Password for the new user to create</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4b10a16e1e67595313ccdebfd13aca9b8ce45bd" translate="yes" xml:space="preserve">
          <source>Password of the new user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef01c4a9104a423bd78ab3d840ebc46d3896e6e9" translate="yes" xml:space="preserve">
          <source>Password of the user</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="475464a3da8410ca6b97ad9fc973b6e5686eb634" translate="yes" xml:space="preserve">
          <source>Password of the user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cc63d6ebf10a7e1a4bde43a491a72472e37f3ca" translate="yes" xml:space="preserve">
          <source>Password refresh flag</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcd1b8585ccff42b50ffdf7c995b27e3ce08f88e" translate="yes" xml:space="preserve">
          <source>Password to authenticate (Default: None)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fba06c7333df3f076542d31bb0258760877b7e91" translate="yes" xml:space="preserve">
          <source>Password to connect with.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f1a0d8c1454397d85db0e79745ce7edd9b8586f" translate="yes" xml:space="preserve">
          <source>Password to set for the specified user(s)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d20b79c1891c0222e59adaf54d3be66ac33101b0" translate="yes" xml:space="preserve">
          <source>Password to use with password protected zip files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cd29462753dba3db60646b3b866018ad0e3faf1" translate="yes" xml:space="preserve">
          <source>Paste it into a new file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0c9795911a1b7bacd63a9e94f86cabe070acc7e" translate="yes" xml:space="preserve">
          <source>Path of rar file to be created</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b30a1778036ab000e4c1fd0380859b44802ac2d" translate="yes" xml:space="preserve">
          <source>Path of the file on the container's filesystem</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bd1c1c89efd7072a9476c9a5b8e3e84f31a52ec" translate="yes" xml:space="preserve">
          <source>Path of the file to be written.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da58e1c660dfd10a959742e09cadb68ef58d5817" translate="yes" xml:space="preserve">
          <source>Path of the file to write the pem out to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf81647c5629c6142f045f6a7ee8ca0e6a169782" translate="yes" xml:space="preserve">
          <source>Path of the folder where the image files are located for vmware/esx hypervisors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6225c3e1fd4d873a5e1cbe3ac750c5f91cc4657" translate="yes" xml:space="preserve">
          <source>Path of zip file to be created</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="477b217c0430b8262fe20602a099cf1d5993d7e7" translate="yes" xml:space="preserve">
          <source>Path of zip file to be unpacked</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3229d2e93b13598586ad2c516596e6281f9a72b" translate="yes" xml:space="preserve">
          <source>Path style can be enabled:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63ee1aa7af8349deda8c66b8ebdd7152c34785e6" translate="yes" xml:space="preserve">
          <source>Path to Certificate Signing Request file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10be2adcb5ca8b9cec18519dac36c972847e1743" translate="yes" xml:space="preserve">
          <source>Path to a UNIX socket for access. Overrides</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3542f08bffeed018e55ad32c8bdd5d5f20fcebf4" translate="yes" xml:space="preserve">
          <source>Path to a disk image to use as the first disk (Default: &lt;code&gt;None&lt;/code&gt;). Deprecated in favor of the &lt;code&gt;disks&lt;/code&gt; parameter. To set (or change) the image of a disk, add the following to the disks definitions:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b373770e890cc5d5513e8e2eee1805d558bc3491" translate="yes" xml:space="preserve">
          <source>Path to a file local to the minion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e3321879a18f20c4fb1a0398a020a7c75243492" translate="yes" xml:space="preserve">
          <source>Path to a file to write HTTP access logs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f12a66dfb92c7c0f92f12e54b5a9470cad9ad0df" translate="yes" xml:space="preserve">
          <source>Path to a file to write HTTP error logs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3afdeaa1f6d179ec6f8975cd6fe8b283e3ea8279" translate="yes" xml:space="preserve">
          <source>Path to a kernel or BIOS image to load.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40789d2afb45042341baf45a31f5bc992d07be83" translate="yes" xml:space="preserve">
          <source>Path to a pip requirements file. If the path begins with &lt;code&gt;salt://&lt;/code&gt; the file will be transferred from the master file server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49aa58fcfddbed01a52f2d57da61095127f6c4f8" translate="yes" xml:space="preserve">
          <source>Path to a pip requirements file. If the path begins with salt:// the file will be transferred from the master file server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67b09d4f509fed4402dc1371c5148b12d58f6f37" translate="yes" xml:space="preserve">
          <source>Path to a private key to use for ssh URLs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="025177d8eac7ae694cbf3ca9d72de76f7a1b4cfb" translate="yes" xml:space="preserve">
          <source>Path to a private key to use for ssh URLs. Salt will not attempt to use passphrase-protected keys unless invoked from the minion using &lt;code&gt;salt-call&lt;/code&gt;, to prevent blocking waiting for user input. Key can also be specified as a SaltStack file server URL, eg. &lt;code&gt;salt://location/identity_file&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="333c7a3f5da68ba9cc7abe98a74ad0fb8e420257" translate="yes" xml:space="preserve">
          <source>Path to a private key to use for ssh URLs. This can be either a single string, or a list of strings. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87bbb873c9a70584f659d362161bc4cdb58314d9" translate="yes" xml:space="preserve">
          <source>Path to a private key to use for ssh URLs. Works the same way as in &lt;a href=&quot;#salt.states.git.latest&quot;&gt;&lt;code&gt;git.latest&lt;/code&gt;&lt;/a&gt;, see that state's documentation for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0e07a1b8a89af3ea4935a747c821f811bbcf827" translate="yes" xml:space="preserve">
          <source>Path to a single disk to use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4c2a0f053f67c3c71be70c3caf4f556b95ef752" translate="yes" xml:space="preserve">
          <source>Path to check</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2318ba2f2136247af142a22bbd4a9ff5672ee41b" translate="yes" xml:space="preserve">
          <source>Path to directory on the Minion containing a Dockerfile</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b1f93edb02601a45441878f6c6b7ab91234d872" translate="yes" xml:space="preserve">
          <source>Path to docker tar archive. Path can be a file on the Minion, or the URL of a file on the Salt fileserver (i.e. &lt;code&gt;salt://path/to/docker/saved/image.tar&lt;/code&gt;). To load a file from a saltenv other than &lt;code&gt;base&lt;/code&gt; (e.g. &lt;code&gt;dev&lt;/code&gt;), pass it at the end of the URL (ex. &lt;code&gt;salt://path/to/rootfs/tarball.tar.xz?saltenv=dev&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a87c4fd3c0da26dc5bb209976fa2b0d2a6c33a65" translate="yes" xml:space="preserve">
          <source>Path to exclusion file. Default is /etc/eclean/distfiles.exclude This is the same default eclean-dist uses. Use None if this file exists and you want to ignore.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4446c70111e0cda0580170f7bc99988f68fb7b7d" translate="yes" xml:space="preserve">
          <source>Path to exclusion file. Default is /etc/eclean/packages.exclude This is the same default eclean-pkg uses. Use None if this file exists and you want to ignore.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a3f53af15d7f868a878f0549181cd8780d3c2fd" translate="yes" xml:space="preserve">
          <source>Path to file destination</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa661a7d01e067391fcd3511ed0bf35df7f87b16" translate="yes" xml:space="preserve">
          <source>Path to file with module to install</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91e3bb73f408a18693d172c5de116aa91e4e01e6" translate="yes" xml:space="preserve">
          <source>Path to htpasswd file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80be2055d2193dd491f8e9ba2cdfdf317c00a7f3" translate="yes" xml:space="preserve">
          <source>Path to pip (or to a virtualenv). This can be used to specify the path to the pip to use when more than one Python release is installed (e.g. &lt;code&gt;/usr/bin/pip-2.7&lt;/code&gt; or &lt;code&gt;/usr/bin/pip-2.6&lt;/code&gt;. If a directory path is specified, it is assumed to be a virtualenv.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d192f9e7b2d08a4c6bbe6840bf04c0b1a389adf" translate="yes" xml:space="preserve">
          <source>Path to requirements</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34db07a5a5e279ae3bc8b8df1d44515004bfe9bf" translate="yes" xml:space="preserve">
          <source>Path to requirements file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1bf84ae837d0ea6e6ed2f5c9a72d6a8e8945d84" translate="yes" xml:space="preserve">
          <source>Path to retrieve from remote host. Since this is evaluated by scp on the remote host, shell wildcards and environment variables may be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d7ac812dacd426f711d5f0f9283dc05de8d9ed5" translate="yes" xml:space="preserve">
          <source>Path to the CSR</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f56840319a2986c81558a9d89ca2400fe8946447" translate="yes" xml:space="preserve">
          <source>Path to the TICK script for the task. Can be a salt:// source.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdc4216558ad37c6d06670f6af1e8b93a8bbe689" translate="yes" xml:space="preserve">
          <source>Path to the cert file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="081f9b599c58875a7c2da0086725690b7e948b5b" translate="yes" xml:space="preserve">
          <source>Path to the certificate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="561fb7d4495d192d7e6dab825d4b99213cf43235" translate="yes" xml:space="preserve">
          <source>Path to the config file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18e3273dc63258dbb93e918884c819552a64b51a" translate="yes" xml:space="preserve">
          <source>Path to the configuration file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73f22e083e4ea4a36fa04521dc31378e0e95e5d5" translate="yes" xml:space="preserve">
          <source>Path to the directory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3a1d0625f6de24893b2afcb8c078869992d6b39" translate="yes" xml:space="preserve">
          <source>Path to the file containing the desired configuration. This can be specified using the absolute path to the file, or using one of the following URL schemes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16a46500a10661d59979bbc3bb1bf4c723ee8b45" translate="yes" xml:space="preserve">
          <source>Path to the file to be searched</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60b6f81ff5483a5a865cf22b3f96e1ae1580d348" translate="yes" xml:space="preserve">
          <source>Path to the file where the diff (difference in old configuration and the committed configuration) will be stored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef212ffabf94405c856b81dbe0efe18951b677e4" translate="yes" xml:space="preserve">
          <source>Path to the file where the diff (difference in old configuration and the committed configuration) will be stored. Note that the file will be stored on the proxy minion. To push the files to the master use &lt;a href=&quot;salt.modules.cp#salt.modules.cp.push&quot;&gt;&lt;code&gt;cp.push&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1cca27bed3cbda6d9b34435b3968fa98490ec75" translate="yes" xml:space="preserve">
          <source>Path to the file. Can either be an absolute path to a file on the minion, or a salt fileserver URL (e.g. &lt;code&gt;salt://path/to/file.rpm&lt;/code&gt;). If a salt fileserver URL is passed, the file will be cached to the minion so that it can be examined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="306e7d3f77adefe5b4aac9a1568c2fd3ea1758f3" translate="yes" xml:space="preserve">
          <source>Path to the folder or name of the pool where disks should be created. (Default: depends on hypervisor)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4aba7331b4b5319a348cd07e6161dc3ad02f8819" translate="yes" xml:space="preserve">
          <source>Path to the htpasswd file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b168f2dddf9df0e2823d4d1cc36d96b27c7c0baa" translate="yes" xml:space="preserve">
          <source>Path to the image to use for the disk. If no image is provided, an empty disk will be created (Default: &lt;code&gt;None&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac2b1e68cb254ddd9b535138e26ad7350f285c1a" translate="yes" xml:space="preserve">
          <source>Path to the new worktree. Can be either absolute, or relative to &lt;code&gt;cwd&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00cdc31b7ce3eee84e558aeb394c8e23aeb9aabd" translate="yes" xml:space="preserve">
          <source>Path to the private key</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1c998d62102a651effe675a4f4b43a823789436" translate="yes" xml:space="preserve">
          <source>Path to the related subvolume.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1572d4d88d925ba5ace92fcf9965f44a49cdc78c" translate="yes" xml:space="preserve">
          <source>Path to the script. Can be a local path on the Minion or a remote file from the Salt fileserver.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87d409325020e56739d28cdd38eecd763df8b1a8" translate="yes" xml:space="preserve">
          <source>Path to the virtualenv</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c636272cd5f3c21daf526f55ca82b03ddb92f08f" translate="yes" xml:space="preserve">
          <source>Path to the virtualenv.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cda2dfd5f1849c2a23da034d6158fb92be1df94" translate="yes" xml:space="preserve">
          <source>Path to the working directory where</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6eb86873250a3a0a391053190cb215c05baf83c9" translate="yes" xml:space="preserve">
          <source>Path to the worktree to be removed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea939942cc750a1cf7a9f0f5aba2e8d18a7bad09" translate="yes" xml:space="preserve">
          <source>Path to write the certificate to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc96cd76196e82e61810d8aa40064a3d7cb51144" translate="yes" xml:space="preserve">
          <source>Path to write the crl to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc6fc792f73480a820133343a84202836f3395dd" translate="yes" xml:space="preserve">
          <source>Path where the configuration/template file is present. If the file has a &lt;code&gt;*.conf&lt;/code&gt; extension, the content is treated as text format. If the file has a &lt;code&gt;*.xml&lt;/code&gt; extension, the content is treated as XML format. If the file has a &lt;code&gt;*.set&lt;/code&gt; extension, the content is treated as Junos OS &lt;code&gt;set&lt;/code&gt; commands</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f27dd067c33e6aa067a6aaac3bf9b15d2623c696" translate="yes" xml:space="preserve">
          <source>Path where the configuration/template file is present. If the file has a &lt;code&gt;*.conf&lt;/code&gt; extension, the content is treated as text format. If the file has a &lt;code&gt;*.xml&lt;/code&gt; extension, the content is treated as XML format. If the file has a &lt;code&gt;*.set&lt;/code&gt; extension, the content is treated as Junos OS &lt;code&gt;set&lt;/code&gt; commands.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="612b1616113546a394fed064761badfcf57069fb" translate="yes" xml:space="preserve">
          <source>Path where the configuration/template file is present. If the file has a &lt;code&gt;.conf&lt;/code&gt; extension, the content is treated as text format. If the file has a &lt;code&gt;.xml&lt;/code&gt; extension, the content is treated as XML format. If the file has a &lt;code&gt;.set&lt;/code&gt; extension, the content is treated as Junos OS &lt;code&gt;set&lt;/code&gt; commands.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a955fc5b8cefcc7e6253303ab21b276ee7e660ed" translate="yes" xml:space="preserve">
          <source>Path where the docker-compose file is stored on the server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b88d895d29fea9e2269677dd5c109296fd0299da" translate="yes" xml:space="preserve">
          <source>Path where the docker-compose file will be stored on the server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99b0a33a29d386a9aa340ab88c777964b529dca7" translate="yes" xml:space="preserve">
          <source>Path where the image file is present on the proxy minion</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3843fc0dbd21c22fd13750877c895c71a51c274" translate="yes" xml:space="preserve">
          <source>Path/URL of archive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef3ba8cd777338d990278211e5efcaeb19877b04" translate="yes" xml:space="preserve">
          <source>Pattern to match. For example: &lt;code&gt;test&lt;/code&gt;, or &lt;code&gt;a[0-5]&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39cb7b7818f51f7bfe6ca70d920e573074e9f12d" translate="yes" xml:space="preserve">
          <source>Pattern to search for in the process list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf14089178d693128af007b139681c7b64c341fd" translate="yes" xml:space="preserve">
          <source>Pattern to terminate reading of channel.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="137f8cb0bb971a7acc872540dab1b0f0d36201b6" translate="yes" xml:space="preserve">
          <source>Pause (vagrant suspend) the named VM.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b36e3d4a768c7a54daf3f965e069a83ec5a16253" translate="yes" xml:space="preserve">
          <source>Pause a vm</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d35d75e29c6b6791b1b69553506e6c9a413b0e82" translate="yes" xml:space="preserve">
          <source>Pause is only available on recent versions of ZFS.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f102667a52d823f4d03948a3e6d56d47af1efd10" translate="yes" xml:space="preserve">
          <source>Pause running containers in the docker-compose file, service_names is a python list, if omitted pause all containers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23c2c565e7b2efea7f7849aa7b8eca9f2774b6db" translate="yes" xml:space="preserve">
          <source>Pause the named VM</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3468f425feb4cbb550a52b44109825e1880b1015" translate="yes" xml:space="preserve">
          <source>Pause the named vm</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c98a0fcd40ef5feebfbdc9346879afbd6aa30387" translate="yes" xml:space="preserve">
          <source>Pauses a container</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aff6d4c0f228bc46a5bbcd9f3c7470baaf69e9b0" translate="yes" xml:space="preserve">
          <source>Pay attention to the order of your dict!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0cacb6ee4beb5d0284359768de1378cfd8ad1a5" translate="yes" xml:space="preserve">
          <source>Payload file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f716379f069cb9752a81076448cff4e621ff90b" translate="yes" xml:space="preserve">
          <source>PeeringDB Module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77925cf580c6eea2c475b6a4027160c0a980a370" translate="yes" xml:space="preserve">
          <source>Pepa</source>
          <target state="translated">Pepa</target>
        </trans-unit>
        <trans-unit id="6d395cc55fb54c2e996efa9c2da9786b71d3df0f" translate="yes" xml:space="preserve">
          <source>Pepa can also be used in Master-less SaltStack setup.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="499635352239c9937d2f395a996e0bfe28788f15" translate="yes" xml:space="preserve">
          <source>Per call connection setup</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9c8704abbab32485603f7dd6a8e3bb0e35a34d2" translate="yes" xml:space="preserve">
          <source>Per-message Authentication</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43fa771bc78f0ffd07cca7d495cc9f39b19bdf97" translate="yes" xml:space="preserve">
          <source>Per-remote configuration parameters are supported (similar to &lt;a href=&quot;https://docs.saltstack.com/en/latest/topics/tutorials/gitfs.html#gitfs-per-remote-config&quot;&gt;gitfs&lt;/a&gt;), and global versions of the git_pillar configuration parameters can also be set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b76a3d122f59c4ac0821b3a613333160d7199168" translate="yes" xml:space="preserve">
          <source>Percentage swap size (can't be 100%)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b04cdeada380d6aa7455d0d8f2921d43e9ac1df3" translate="yes" xml:space="preserve">
          <source>Perform a calculation on the &lt;code&gt;num&lt;/code&gt; most recent values. Requires a list. Valid values for &lt;code&gt;oper&lt;/code&gt; are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0c6900191848856ed5a144462723ece46243b08" translate="yes" xml:space="preserve">
          <source>Perform a commit check on the configuration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="debb74c1454796c7e4a1f1396b7073d3ff86fe82" translate="yes" xml:space="preserve">
          <source>Perform a commit check on the configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67c369c89871ffce3d3556c4ae9805eb5f04f1c8" translate="yes" xml:space="preserve">
          <source>Perform a full stop/start of a service by passing &lt;code&gt;--full-restart&lt;/code&gt;. This option is ignored if &lt;code&gt;reload&lt;/code&gt; is set and is supported by only a few &lt;a href=&quot;../../modules/all/salt.modules.service#module-salt.modules.service&quot;&gt;&lt;code&gt;service modules&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d936889650a193110b46631c3e7ca7b317d597f7" translate="yes" xml:space="preserve">
          <source>Perform a one-time generation of a hash and write it to sdb. If that value has already been set return the value instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51690600cc2bfcc05b7cb542892e3322d63a4a6b" translate="yes" xml:space="preserve">
          <source>Perform a one-time generation of a hash and write it to the local grains. If that grain has already been set return the value instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5f3b9e2f60d3bbe47356cde43508b29331d5f38" translate="yes" xml:space="preserve">
          <source>Perform a pull on the given repository</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="266ef8c797760a454a1237db7ecb5fdeee0bd899" translate="yes" xml:space="preserve">
          <source>Perform a query directly against the Azure REST API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44f4d3152a00b2657b2b54f49a8b9f4f368310e5" translate="yes" xml:space="preserve">
          <source>Perform a route lookup within active route table (fib).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4662c7b3052ceca92c28e302bce0c4de66d570af" translate="yes" xml:space="preserve">
          <source>Perform a select query on Xen VM instances</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a8f599047f4298e1bbddc3f119a178a1cd39876" translate="yes" xml:space="preserve">
          <source>Perform a statvfs call against the filesystem that the file resides on</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e51bc2872d790d78406cddeb89a6b35cff2a6a20" translate="yes" xml:space="preserve">
          <source>Perform a system dist-upgrade. Default: False</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68db46f1e6d2738aa1820d12841d2f505854d4e3" translate="yes" xml:space="preserve">
          <source>Perform a trial run with no changes made. Is the same as doing test=True</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19a13ad630f3c1716103ba5dcf66b75374201b82" translate="yes" xml:space="preserve">
          <source>Perform an HTTP query and statefully return the result</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e16a39400f1bcc6a2f409969701a6343a1bc2b2" translate="yes" xml:space="preserve">
          <source>Perform any needed setup.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="517278153a46ec3389b1e231ad8c2308398cbef7" translate="yes" xml:space="preserve">
          <source>Perform case-sensitive search.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="126990a59d9a6864c36f0aa5be0ec5875a452e87" translate="yes" xml:space="preserve">
          <source>Perform data formatting to be used as pillar data and merge it with the current pillar data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8577c37f4099e2a41c6aa25b14fe11efb855116" translate="yes" xml:space="preserve">
          <source>Perform pull from the repository different from .hg/hgrc:[paths]:default</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3d7f99f8083f2941e3a87226dbf176fa593e40c" translate="yes" xml:space="preserve">
          <source>Perform signature or checksum verification on the container. See the &lt;code&gt;machinectl(1)&lt;/code&gt; man page (section titled &quot;Image Transfer Commands&quot;) for more information on requirements for image verification. To perform signature verification, use &lt;code&gt;verify=signature&lt;/code&gt;. For checksum verification, use &lt;code&gt;verify=checksum&lt;/code&gt;. By default, no verification will be performed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0eea988ed50b37bb2b8f6afe9a8f9828319b1f13" translate="yes" xml:space="preserve">
          <source>Perform the action in the specified chroot (ignored if &lt;code&gt;jail&lt;/code&gt; is specified)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8139115a6c8078b7d6f584e1bf7f8821dedf4641" translate="yes" xml:space="preserve">
          <source>Perform the action in the specified jail</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="845a1924e3419e59a514d2531dd380cfd98c4d27" translate="yes" xml:space="preserve">
          <source>Perform the action in the specified root (ignored if &lt;code&gt;jail&lt;/code&gt; is specified)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c47305e15f06f676d7505273beb00a3bc1e936d0" translate="yes" xml:space="preserve">
          <source>Perform the check in the specified chroot (ignored if &lt;code&gt;jail&lt;/code&gt; is specified)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09148c26f90ac4c0db9a46c015f949e07c3619ab" translate="yes" xml:space="preserve">
          <source>Perform the check in the specified jail</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="234233c7027689c44f1d58c2ff1d0789b8a75a7b" translate="yes" xml:space="preserve">
          <source>Perform the check in the specified root (ignored if &lt;code&gt;jail&lt;/code&gt; is specified)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c4b4a2b53cb0e460fa46d4a67dfe6513bd628c1" translate="yes" xml:space="preserve">
          <source>Perform the sanity check in the specified chroot (ignored if &lt;code&gt;jail&lt;/code&gt; is specified)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="573e184549317bfa05a8e4bf1613d4009e9da9c9" translate="yes" xml:space="preserve">
          <source>Perform the sanity check in the specified jail</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd260f4ab37372935de25f2c61cf0addd9a15289" translate="yes" xml:space="preserve">
          <source>Perform the sanity check in the specified root (ignored if &lt;code&gt;jail&lt;/code&gt; is specified)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f92929669b24f97f79301702712f311ce1370fe8" translate="yes" xml:space="preserve">
          <source>Perform the search using the &lt;code&gt;pkg.conf(5)&lt;/code&gt; from the specified chroot (ignored if &lt;code&gt;jail&lt;/code&gt; is specified)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ade232eb59305f4bc8ee08efead64f3ff0a7a52" translate="yes" xml:space="preserve">
          <source>Perform the search using the &lt;code&gt;pkg.conf(5)&lt;/code&gt; from the specified jail</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c479eb58b587c7e50a885ea0accdff38f369e96" translate="yes" xml:space="preserve">
          <source>Perform the search using the &lt;code&gt;pkg.conf(5)&lt;/code&gt; from the specified root (ignored if &lt;code&gt;jail&lt;/code&gt; is specified)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9ffb7bfb45adb2d04ed55a081d92564fc9d0e58" translate="yes" xml:space="preserve">
          <source>Performance Expectations and Recommended Usage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5bf988524f255bdafd8ff52234755363637de92" translate="yes" xml:space="preserve">
          <source>Performance Tuning</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33b22c2f56c4ecebc62bed53411e14c86bbae2b2" translate="yes" xml:space="preserve">
          <source>Performs a &lt;code&gt;docker login&lt;/code&gt; to authenticate to one or more configured repositories. See the documentation at the top of this page to configure authentication credentials.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="930143815601ed263ead83bf22da99dd9d68c3d9" translate="yes" xml:space="preserve">
          <source>Performs a DNS lookup with dig</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3aca50a7ffd0766a184f788f958838c3a6d7faf4" translate="yes" xml:space="preserve">
          <source>Performs a file lookup. Valid options (and their defaults) are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abebed815acade024a5ba4453cef9fc55ace28bc" translate="yes" xml:space="preserve">
          <source>Performs a ping to a host</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dc34baaa39795da70374f154c25c47fea23c81d" translate="yes" xml:space="preserve">
          <source>Performs a reset (reboot) operation on the managed server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4aab8bcdb3c606161f48abdf55f7189d344159dd" translate="yes" xml:space="preserve">
          <source>Performs a traceroute to a 3rd party host</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87db41499b9527a4f96a6f8eef2294c84a9dbb5e" translate="yes" xml:space="preserve">
          <source>Performs an ICMP ping to a host</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a82d8010b6e4938da7f03ed18a6e83e76c0c9d29" translate="yes" xml:space="preserve">
          <source>Performs set math using Jinja filters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22046f83428c88d7cfe727a55f83133e07b678e7" translate="yes" xml:space="preserve">
          <source>Performs the same functionality as &lt;code&gt;rm&lt;/code&gt; but only if a watch requisite is &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bd500d4a4179937e16a85dcbc7c29e9634b6a23" translate="yes" xml:space="preserve">
          <source>Performs the same functionality as &lt;code&gt;set&lt;/code&gt; but only if a watch requisite is &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b7ce2c32e74f0a3736183c26a9b158ac6659c4f" translate="yes" xml:space="preserve">
          <source>Permanently delete a disk snapshot.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60274e928055dc4f7706f29f67ae55fd3515a7c3" translate="yes" xml:space="preserve">
          <source>Permanently delete a firewall rule.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1e2b40284ed2de4131ec6a6ee4cdfef86b19332" translate="yes" xml:space="preserve">
          <source>Permanently delete a health check.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8724fd23710a4879e618ecea4c82beaf6f8bc90e" translate="yes" xml:space="preserve">
          <source>Permanently delete a load-balancer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0effd586f23a3fab1e9eeb1804fbab087e4563bc" translate="yes" xml:space="preserve">
          <source>Permanently delete a network.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56d198086fad1f85e95cd3adbccef22c329abd1b" translate="yes" xml:space="preserve">
          <source>Permanently delete a persistent disk.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a18ec460d68533f2dabaf8e5d19595ddc3eff365" translate="yes" xml:space="preserve">
          <source>Permanently delete a static address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c042d3ec9960bc9e38bf6eb782baa636d1932d9" translate="yes" xml:space="preserve">
          <source>Permanently replace current run list with specified items</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d06d55570938d12f87db3bf2b48caa9de22d9c67" translate="yes" xml:space="preserve">
          <source>Permissions</source>
          <target state="translated">Permissions</target>
        </trans-unit>
        <trans-unit id="238fac989280b95bb0d87bc936b10d01f2848e16" translate="yes" xml:space="preserve">
          <source>Permissions are set for the key that contains the value/data pair. You cannot set permissions on value/data pairs themselves.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66987cb8634838b2d4e6abc7d9663caabec4f880" translate="yes" xml:space="preserve">
          <source>Permissions definition</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d74f46aca8efe77004199560a134310b6285b0c" translate="yes" xml:space="preserve">
          <source>Permissions of file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0460572b5ce297f474b22487cef03c362dd7ed7f" translate="yes" xml:space="preserve">
          <source>Perms are reset for the key that contains the value/data pair. You cannot set permissions on value/data pairs themselves.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f04d8fa4c931ce226c31d44d6377494055801afc" translate="yes" xml:space="preserve">
          <source>Peter Baumgartner &amp;lt;&lt;a href=&quot;mailto:pete%40lincolnloop.com&quot;&gt;pete@lincolnloop.com&lt;/a&gt;&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fb723aaf1351d39ef9c45a7d16046fd4a3b6561" translate="yes" xml:space="preserve">
          <source>Philips HUE lamps module for proxy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d22bf84b49ea6f39df2e3349fc6df8eb39e075d" translate="yes" xml:space="preserve">
          <source>Physical Memory Array</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1d065f5db32460d621c1463ca90eab52c4c3544" translate="yes" xml:space="preserve">
          <source>Physical location of your cluster placement group created in Amazon EC2. Once set this can not be updated (Amazon restriction).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f7bbd9159827eabb2e30cf6fa9e8c136f44af50" translate="yes" xml:space="preserve">
          <source>Pillar</source>
          <target state="translated">Pillar</target>
        </trans-unit>
        <trans-unit id="836f0509ac804d435d1dc724a0f5704ad9a929de" translate="yes" xml:space="preserve">
          <source>Pillar Example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3c1d0ce9b8277c3fea15c3dad0bbb31222eeee7" translate="yes" xml:space="preserve">
          <source>Pillar data from vCenter or an ESXi host</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ffb10068327ee515ba6c725c9b036668db06598" translate="yes" xml:space="preserve">
          <source>Pillar example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bab4fb5bcb781314232e1d6527041fd706d758ef" translate="yes" xml:space="preserve">
          <source>Pillar files can include protected data that the salt master decrypts:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a140baa6140b6ca2d0e413bb1408665557958e40" translate="yes" xml:space="preserve">
          <source>Pillar key to return data into</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5ffb44016ed4e2308eb13cc12268f8cea1f7c31" translate="yes" xml:space="preserve">
          <source>Pillar needs something like:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f34908a1aa1f1edd8718a6e4c395f228e22c12b" translate="yes" xml:space="preserve">
          <source>Pillar, grain, mine &amp;amp; config data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77738186310c8cccda0a47eda1cc07ca96996799" translate="yes" xml:space="preserve">
          <source>PillarStack configuration files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4d3811c2206d8f653594869857518baf9ef770b" translate="yes" xml:space="preserve">
          <source>PillarStack is already bundled with Salt since 2016.3.0 version so there is nothing to install from version 2016.3.0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e02d85bf30cb09d5a95d91ab8619e7c55b4dc8b" translate="yes" xml:space="preserve">
          <source>Pillars to use to configure DataPipeline backups</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dca17b49cb2da1a7093e796b605e72f4fe11445e" translate="yes" xml:space="preserve">
          <source>Ping the device on the other end of the connection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9a5ed2d4d3591ddc0e35060cc9028959e5b133a" translate="yes" xml:space="preserve">
          <source>Ping the lamps by issuing a short inversion blink to all available devices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82ecc5da45a80f6c9821edcf3a1337b1a1b53058" translate="yes" xml:space="preserve">
          <source>Ping the lamps.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15afd7d15a465d845a986f8f2006086458a5fbe3" translate="yes" xml:space="preserve">
          <source>Ping the server, returns False on connection errors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78c52ddd6b51b12cf3a5f34aa092cad25ac08dd7" translate="yes" xml:space="preserve">
          <source>Ping? Pong!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbd54891ce176cb6a0585675d9ed8567a45834ec" translate="yes" xml:space="preserve">
          <source>Pipeline definition as specified in &lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/master/pipeline.html&quot;&gt;https://www.elastic.co/guide/en/elasticsearch/reference/master/pipeline.html&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="732b51df97c89cd6d2c2c602d7accf22ab893678" translate="yes" xml:space="preserve">
          <source>Pipeline id</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d9a14835e07a986fee49080c2979364c1615d70" translate="yes" xml:space="preserve">
          <source>Pipeline objects to use. Will override objects read from pillars.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0158de94b6390420d6d2779566b8d10825ec7b29" translate="yes" xml:space="preserve">
          <source>Pkgutil support for Solaris</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="930df79cd78fa2186e7564ec6aa658de1e1d6e30" translate="yes" xml:space="preserve">
          <source>Place a copy of the XenAPI.py in the Python site-packages folder.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee4a7512eefe92787af12c6bd27dca299813f49e" translate="yes" xml:space="preserve">
          <source>Place the content at the beginning of the file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="558a7e52cb725139bacf6cc9bd187f0e267754be" translate="yes" xml:space="preserve">
          <source>Place the content at the end of the file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f01f3095e11556cd819f700e89818d54fc8ed18" translate="yes" xml:space="preserve">
          <source>Placement dictionary of the virtual machine, host or cluster</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42db8305fbcf6e8d4f1ff7375d75d0f13f9f2df4" translate="yes" xml:space="preserve">
          <source>Placement information of the virtual machine</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98bd21efc3ffd4f9cbc9c2b499e6ed6609b081c4" translate="yes" xml:space="preserve">
          <source>Placing the template under &lt;code&gt;/etc/salt/states/templates/example.jinja&lt;/code&gt;, it can be used as &lt;code&gt;salt://templates/example.jinja&lt;/code&gt;. Alternatively, for local files, the user can specify the absolute path. If remotely, the source can be retrieved via &lt;code&gt;http&lt;/code&gt;, &lt;code&gt;https&lt;/code&gt; or &lt;code&gt;ftp&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6d8695c42362af082c08f270e44e01c8ad7c52c" translate="yes" xml:space="preserve">
          <source>Plaintext password to be hashed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d125bd4e19268d6ab4d5d5da9769117233ee857a" translate="yes" xml:space="preserve">
          <source>Playbook return</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d1cc0216ee8fcb16fae587ed222478e3074a0f6" translate="yes" xml:space="preserve">
          <source>Please note that for error response handling, the swagger file must have an error response model with the following schema. The lambda functions should throw exceptions for any non successful responses. An optional pattern field can be specified in errorMessage field to aid the response mapping from Lambda to the proper error return status codes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07d4393b7cdcb7d8eaa7058a2e2a114b2da42869" translate="yes" xml:space="preserve">
          <source>Please note that some init systems can remove the pid file if the service registers as crashed. One such example is nginx on CentOS 7, where the service unit removes the pid file when the service shuts down (IE: the pid file is observed as removed when kill -9 is sent to the nginx master process). The 'uncleanshutdown' option might not be of much use there, unless the unit file is modified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f62f71fc50a7cf4f01e3777ea58cb9cda1c0152" translate="yes" xml:space="preserve">
          <source>Please note that the name of the lambda function to be integrated will be derived via the provided lambda_funcname_format parameters:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c7565e7acb7a748f7991e52ba4a700dd7290313" translate="yes" xml:space="preserve">
          <source>Please note that the success or failure of the state is not affected by whether a state change occurred nor the stateful argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f399d2d953c4a3eab445e7a48f7e2316fa28b7bb" translate="yes" xml:space="preserve">
          <source>Please note that this does not necessarily resolve all (non-package) dependencies for a file; but it does help.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e2b41b169ee7f2aaf8f7de73446fff50c9b13dd" translate="yes" xml:space="preserve">
          <source>Please note that this function &lt;em&gt;MUST&lt;/em&gt; be run as root, as images that are created make files belonging to root.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb26b93e14ff1e1562508a05696659313ed6d7ac" translate="yes" xml:space="preserve">
          <source>Please note: The functions in here are Debian-specific. Placing them in this separate file will allow them to load only on Debian-based systems, while still loading under the &lt;code&gt;apache&lt;/code&gt; namespace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1f6495e9b7f9861f6e2f2ab3efd28d70ffff852" translate="yes" xml:space="preserve">
          <source>Please note: The functions in here are SUSE-specific. Placing them in this separate file will allow them to load only on SUSE systems, while still loading under the &lt;code&gt;apache&lt;/code&gt; namespace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66f2f5de77afe0344bf3bec2e4c3e7f81aa758d0" translate="yes" xml:space="preserve">
          <source>Please read &lt;a href=&quot;https://docs.saltstack.com/en/latest/topics/cloud/lxc.html#config-lxc&quot;&gt;core config documentation&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b3014b45c7cb683cd9f55ae0d9228e4480c6861" translate="yes" xml:space="preserve">
          <source>Please read the note for &lt;code&gt;get_pixels&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6f58a0230d2f6674f56aa899c1e9d7bb3298aa5" translate="yes" xml:space="preserve">
          <source>Please refer to the OpenBSD &lt;a href=&quot;https://man.openbsd.org/pfctl#T&quot;&gt;pfctl(8)&lt;/a&gt; documentation for a detailed explanation of each command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68e49d1e2eedc69158506ed47cb69b013d21bc2c" translate="yes" xml:space="preserve">
          <source>Please remember that &lt;code&gt;netmiko&lt;/code&gt; does not have any rollback safeguards and any configuration change will be directly loaded into the running config if the platform doesn't have the concept of &lt;code&gt;candidate&lt;/code&gt; config.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72f4874aa09b3baea187a59fb467a922ac5821ac" translate="yes" xml:space="preserve">
          <source>Please review the earlier example for the usage. The only substituable keys in the funcname format are {stage}, {api}, {resource}, {method}. Any other keys or positional subsitution parameters will be flagged as an invalid input.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f80cecce3af0cb9a64ee4c41c78ae4649056f217" translate="yes" xml:space="preserve">
          <source>Please see documentation of &lt;a href=&quot;../../modules/all/salt.modules.elasticsearch#module-salt.modules.elasticsearch&quot;&gt;&lt;code&gt;elasticsearch execution module&lt;/code&gt;&lt;/a&gt; for a valid connection configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9eb29f2ece3d237198ac07a2998ba99600fe469" translate="yes" xml:space="preserve">
          <source>Please see the &lt;a href=&quot;https://www.vmware.com/products/vsphere/compare&quot;&gt;vSphere Comparison&lt;/a&gt; page for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d5b8955be72d491d9eddc619d509194a295b2c4" translate="yes" xml:space="preserve">
          <source>Please set &lt;code&gt;reload_modules: True&lt;/code&gt; to have the salt minion import this module after installation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="008f7b656447c66b211e9a16329338a24203fcb8" translate="yes" xml:space="preserve">
          <source>Please use now:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6107ab4366c42586fddb4b7e2890cb7776de84d" translate="yes" xml:space="preserve">
          <source>Please use pkg.latest_version as pkg.available_version is being deprecated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac69494a36c3ac0107eae0155aeb489e4437bbdb" translate="yes" xml:space="preserve">
          <source>Please wait five to ten minutes after generating the key before testing so that the API key will be updated on all the YubiCloud servers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00e0209c865ddb303c4a149505d94a98ae3d9e58" translate="yes" xml:space="preserve">
          <source>Point chef-client at local repository if True</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3a180dd83a4a077eb8f4ea6d0362e432b546f73" translate="yes" xml:space="preserve">
          <source>Point release of installer to download. Defaults to the most recent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9521bd57de7fe6b1b8d714d236d855fe9cff52f1" translate="yes" xml:space="preserve">
          <source>Points to module source file, used only when install is True</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b4754d850e95fd52fe13451a4ec834cbc451bd7" translate="yes" xml:space="preserve">
          <source>Policies contained in the &quot;Windows Settings&quot; section of the &lt;code&gt;gpedit.msc&lt;/code&gt; GUI are statically defined in this module. Each policy is configured for the section (Machine/User) in the module's _policy_info class. The &lt;code&gt;_policy_info&lt;/code&gt; class contains a &quot;policies&quot; dict on how the module will configure the policy, where the policy resides in the GUI (for display purposes), data validation data, data transformation data, etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="335b2ed7f590a02af7b060d2a2a0e8cd61641824" translate="yes" xml:space="preserve">
          <source>Policies that are assigned to minions when requesting a token. These can either be static, eg saltstack/minions, or templated, eg &lt;code&gt;saltstack/minion/{minion}&lt;/code&gt;. &lt;code&gt;{minion}&lt;/code&gt; is shorthand for grains[id]. Grains are also available, for example like this: &lt;code&gt;my-policies/{grains[os]}&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb9cf1418089b3356038fdd24fcbdc9d1a7c42a5" translate="yes" xml:space="preserve">
          <source>Policy</source>
          <target state="translated">Policy</target>
        </trans-unit>
        <trans-unit id="101bf6eafe3861dc3e3f766c7bbd18129f089d86" translate="yes" xml:space="preserve">
          <source>Policy name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="547c646fde1b5d5e256ba06bae2fe1eb4905a4ae" translate="yes" xml:space="preserve">
          <source>Policy names can be specified in a number of ways based on the type of policy:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cbad8820cbca90a7e1eb8ab6b08ddccf3e1c9af" translate="yes" xml:space="preserve">
          <source>Policy on the bucket</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e2eb717c61bd1c3b30a40af498d6eeb3fbe6fba" translate="yes" xml:space="preserve">
          <source>Poll (in sec.) and report events until stack complete</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f3b9d200c3fd3e10fb6ac52af9e954e0501b62c" translate="yes" xml:space="preserve">
          <source>Poll and report events until stack complete</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13bd3d6a18b125e1c08db8779b468f77db508edd" translate="yes" xml:space="preserve">
          <source>Poll(in sec.) and report events until stack complete</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f65e3555b90751214a27abb33becde9fa5bd8d47" translate="yes" xml:space="preserve">
          <source>Pop (return &amp;amp; delete) a value from the minion datastore</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b6de1a87d6c2f964c8449013f579439482ec22a" translate="yes" xml:space="preserve">
          <source>Pop items off a queue and create an event on the Salt event bus to be processed by a Reactor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed70643d596c314520a4f7e7b219f342f0972acd" translate="yes" xml:space="preserve">
          <source>Pop one or more or all items from a queue</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97fe805f0baa2feb19d386937c50df17e9127ab1" translate="yes" xml:space="preserve">
          <source>Pop one or more or all items from the queue return them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b007f2845acb8912a83d337a968c9b7b1f545236" translate="yes" xml:space="preserve">
          <source>Populates grains which describe whether a server has a default gateway configured or not. Uses</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe035157cda20b361ce30613e29b5d6f1a46b5fc" translate="yes" xml:space="preserve">
          <source>Port</source>
          <target state="translated">Port</target>
        </trans-unit>
        <trans-unit id="eea0d8a3b316047eb765c9d9a41912c452897133" translate="yes" xml:space="preserve">
          <source>Port Connector</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d59730db2c213d7f64500c5f351093b3d8c6b13" translate="yes" xml:space="preserve">
          <source>Port bindings can also include ranges:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bed6bd450b12d713fb760c7c0d8decf42044d066" translate="yes" xml:space="preserve">
          <source>Port information</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08dd9e79a8e634d584380107fadcd8bb5b1aa83e" translate="yes" xml:space="preserve">
          <source>Port of the sentinel to check for the master</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d15158cf30eb80d65c999184f887082203e87d7f" translate="yes" xml:space="preserve">
          <source>Port to check</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ef82b1c2f30542e668d26f38b4d93e2b14bcd2e" translate="yes" xml:space="preserve">
          <source>Port to export the graphics on for &lt;code&gt;vnc&lt;/code&gt;, &lt;code&gt;spice&lt;/code&gt; and &lt;code&gt;rdp&lt;/code&gt; types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76b917d11a3c5a84e40910f90c3087027d22634e" translate="yes" xml:space="preserve">
          <source>Port to export the graphics over a secured connection for &lt;code&gt;spice&lt;/code&gt; type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79e5028f1bea75c564add793ff3f17b948d4150d" translate="yes" xml:space="preserve">
          <source>Port to which the MDS will listen</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1de966b786b99b1068bda657c9e683260da37eb2" translate="yes" xml:space="preserve">
          <source>Port used for authentication.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8fc4dbc14cc4576ef737e32b3ce1ddffeefec9f" translate="yes" xml:space="preserve">
          <source>Port's interface's optional parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="570c9ff1b2a184f1836c1bb6870c7aa39550204e" translate="yes" xml:space="preserve">
          <source>Portable Battery</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a12887ddadbb6ffa787c11421d1c968d97d8082" translate="yes" xml:space="preserve">
          <source>Portage does not have a purge, this function calls remove followed by depclean to emulate a purge process</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7496e7e3c85bff692edec059f1e5c69902d30f7c" translate="yes" xml:space="preserve">
          <source>Portage has a function to remove unused dependencies. If a package is provided, it will only removed the package if no other package depends on it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3803fab8e7e0be5981236a693ddeab4471b03a07" translate="yes" xml:space="preserve">
          <source>Position where the directory should be placed in the PATH. This is 0-indexed, so 0 means to prepend at the very start of the PATH.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a9116936b988e6c387fd20ce081ce9a039f1b63" translate="yes" xml:space="preserve">
          <source>PositiveSSL</source>
          <target state="translated">PositiveSSL</target>
        </trans-unit>
        <trans-unit id="7d23334b08c30c892817281212fc32360d930b82" translate="yes" xml:space="preserve">
          <source>PositiveSSL Multi Domain</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65f9f2d65c6166efe947089edae5535d105b779b" translate="yes" xml:space="preserve">
          <source>PositiveSSL Multi-Domain</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="852187f1ab333e0ac17cc1ecee0abaa5e19047b1" translate="yes" xml:space="preserve">
          <source>PositiveSSL Wildcard</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16da41b1104013ae7c50fe41b838dfc57b386d1e" translate="yes" xml:space="preserve">
          <source>Possible key/value pairings for the dicts in the value:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea5f99da9637623d114b9e44404d06a9d7a40559" translate="yes" xml:space="preserve">
          <source>Possible keyword arguments:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1da82b8ed912a307928b2d2d44fe3cc3c7ca52c9" translate="yes" xml:space="preserve">
          <source>Possible values are 'master' or 'slave'</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2ef221e3193ecc713338eb88d02a0cab9694e2a" translate="yes" xml:space="preserve">
          <source>Possible values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bab6cb7fe3a5ce73d7577495f024287b87f6df7b" translate="yes" xml:space="preserve">
          <source>Post an event to the Datadog stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cf3a4aac22fb5661ad4ebed38040ea2b339f5b2" translate="yes" xml:space="preserve">
          <source>Post data to OpsGenie. It's designed for Salt's Event Reactor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d1f5dd25aaed3733a09495c568be942a8f1a34a" translate="yes" xml:space="preserve">
          <source>Postgres database host, if different from config or default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a11cf95e9515898f62085389b1a60683b225047d" translate="yes" xml:space="preserve">
          <source>Postgres database port, if different from config or default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5103380c177d595f151b4500cfc00430194f48c6" translate="yes" xml:space="preserve">
          <source>Postgres database username, if different from config or default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8901f3e8060eafc99a478bbcd12af0dd4a4a7c6" translate="yes" xml:space="preserve">
          <source>Postgres user's password, if any password, for a specified db_user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="491c609e2d5cdd88963ace21b713687a4e80191c" translate="yes" xml:space="preserve">
          <source>Postpone a job in the minion's schedule</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a19bcb7c72bb21fcc4dd764ac23556e14dab14a" translate="yes" xml:space="preserve">
          <source>Power Supply</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33ce15b7aa54cd7e3c335c178694ab6258769630" translate="yes" xml:space="preserve">
          <source>Power a bluetooth device on or off</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="111a80f9e66d8ce7c52b1a3fa61a60e0fcbd3a7e" translate="yes" xml:space="preserve">
          <source>Power cycling the server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3164135f3bc9ce963fb5a532eac5b249d5ff5c44" translate="yes" xml:space="preserve">
          <source>Power off (stop) a virtual machine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c52bf8f8696ede53917eb230402cbb4228fad80" translate="yes" xml:space="preserve">
          <source>Power off a running system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05421aa815fb4082ea5bc59de58b2ca2c998e416" translate="yes" xml:space="preserve">
          <source>Power off a virtual machine and deallocate compute resources.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bcb5bca81a723cbc61384ef536a61ba98f264e0" translate="yes" xml:space="preserve">
          <source>Power on (start) a virtual machine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33b6ea9d4f0fc3e0a1023584ba92f09b33adb93c" translate="yes" xml:space="preserve">
          <source>Power server off</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c61b3685205ad8c7b2e530295c50ea840c50c4f8" translate="yes" xml:space="preserve">
          <source>Power server on</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c34f11767e3344552d1ea1633a63119f696d0a7" translate="yes" xml:space="preserve">
          <source>PowerShell</source>
          <target state="translated">PowerShell</target>
        </trans-unit>
        <trans-unit id="5cf176e304378dc02f185bc12f009d67e1b8927d" translate="yes" xml:space="preserve">
          <source>PowerShell 4</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4520569e8b6c96d96aec7f597f383abb036809ac" translate="yes" xml:space="preserve">
          <source>PowerShell 5.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb14eb313b3f5399f9ce2142689ffe5571476d4a" translate="yes" xml:space="preserve">
          <source>PowerShell module &lt;code&gt;ServerManager&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e9232e6af50d6051779916f735bc04d707c6156" translate="yes" xml:space="preserve">
          <source>Poweroff a running system</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9a8e75123c51dd6865d82168767c33e6e7d663f" translate="yes" xml:space="preserve">
          <source>Powerpath configuration support</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8005c8d57d827c07bef074d906b240e49770e82f" translate="yes" xml:space="preserve">
          <source>Powers down the managed server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c19e059f93d546fdacd0bf0fef29e6abf7d8df0" translate="yes" xml:space="preserve">
          <source>Powers off a virtual machine specified by it's name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b22805eeedb9a04506a578dd6891f20e7a66613f" translate="yes" xml:space="preserve">
          <source>Powers on a virtual machine specified by it's name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6f0496f8dddca04b01dc0fb2d43194cf06faa35" translate="yes" xml:space="preserve">
          <source>Powers up the managed server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df7b06dc8bd00e6a670e38204d67f4cc0fc9d331" translate="yes" xml:space="preserve">
          <source>Prefer wheel archives (requires pip &amp;gt;= 1.4).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b9318efb050406ddcecddc31c55ac0eca395e82" translate="yes" xml:space="preserve">
          <source>Prefer wheel archives (requires pip&amp;gt;=1.4)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4494042af6cf9bfef94764ad83953fd1c583df44" translate="yes" xml:space="preserve">
          <source>PreferredAvailabilityZone</source>
          <target state="translated">PreferredAvailabilityZone</target>
        </trans-unit>
        <trans-unit id="7b177bd234b5be0df89e3835c882840c8eace948" translate="yes" xml:space="preserve">
          <source>PreferredAvailabilityZones</source>
          <target state="translated">PreferredAvailabilityZones</target>
        </trans-unit>
        <trans-unit id="9c27f9b8884fc4fb3633ebb11d80803987eed1f1" translate="yes" xml:space="preserve">
          <source>PreferredCacheClusterAZs</source>
          <target state="translated">PreferredCacheClusterAZs</target>
        </trans-unit>
        <trans-unit id="ea8e219205f28ed7a6eebbe52947bc22514c6ac6" translate="yes" xml:space="preserve">
          <source>PreferredMaintenanceWindow</source>
          <target state="translated">PreferredMaintenanceWindow</target>
        </trans-unit>
        <trans-unit id="7218e6fcf37f7396bf698b927891875ae99b1bad" translate="yes" xml:space="preserve">
          <source>Prefix for the log file name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5d15512fca125fbe5df8b8fb1d1e1352e6daaf6" translate="yes" xml:space="preserve">
          <source>Prefix the state UID (e.g. file_|-yum_configured_|-/etc/yum.conf_|-managed) with a zero-padded version of the '__run_num__' value to allow for easier sorting. Also store the state function (i.e. file.managed) into a new key '_func'. Change the index to be '&amp;lt;index&amp;gt;-ordered' (e.g. salt-state_apply-ordered).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbb8908b7cf3df9fda5b41b0893b13eda771d6f1" translate="yes" xml:space="preserve">
          <source>Prefixes any state id (declaration or reference) that starts with a dot (&lt;code&gt;.&lt;/code&gt;) to avoid duplicated state ids when the salt file is included by other salt files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="515a3dd5329e8a8230e1802faf498fff94dac8ff" translate="yes" xml:space="preserve">
          <source>PremiumSSL</source>
          <target state="translated">PremiumSSL</target>
        </trans-unit>
        <trans-unit id="2f8ce05521451076e040e644cff8eebb11f5b6ff" translate="yes" xml:space="preserve">
          <source>PremiumSSL Wildcard</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9ff37c124315572b3e5c3dd418fac432b8abf42" translate="yes" xml:space="preserve">
          <source>Prepare accumulator which can be used in template in file.managed state. Accumulator dictionary becomes available in template. It can also be used in file.blockreplace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="506c60305a461fbe1ef1937c936b42daf3f7ea68" translate="yes" xml:space="preserve">
          <source>Prepare an OSD</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26d9a5f9538d599e244dedf1f307fb2ec628be12" translate="yes" xml:space="preserve">
          <source>Prepare rows content to be displayed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88cf4879f24cd239f4b79c896093051b02389695" translate="yes" xml:space="preserve">
          <source>Prepare the bootstrap script, but don't run it. Default: false</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19586a9cbbe6bfebd62912fe1e5892c75f7bd959" translate="yes" xml:space="preserve">
          <source>Prepares a zone for running applications.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="421d493a0a9fa726bd28abc31745a2329deb045f" translate="yes" xml:space="preserve">
          <source>Prepares row content and displays.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="297ba58cb76fcfb806a237fa1b06c95b9a50fb70" translate="yes" xml:space="preserve">
          <source>Prepend &amp;lt;prefix&amp;gt;/ to every filename in the archive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="500c60d8d61cb5b325e72d26955cdedf01e081e9" translate="yes" xml:space="preserve">
          <source>Prepend &lt;code&gt;&amp;lt;prefix&amp;gt;&lt;/code&gt; to every filename in the archive. If unspecified, the name of the directory at the top level of the repository will be used as the prefix (e.g. if &lt;code&gt;cwd&lt;/code&gt; is set to &lt;code&gt;/foo/bar/baz&lt;/code&gt;, the prefix will be &lt;code&gt;baz&lt;/code&gt;, and the resulting archive will contain a top-level directory by that name).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0a09dccb6b66897aa8d116a16afa6927f109771" translate="yes" xml:space="preserve">
          <source>Prepend text to the beginning of a file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eed036e414a34a0c245858652e6d88f14c3faefb" translate="yes" xml:space="preserve">
          <source>Prerequisites</source>
          <target state="translated">Prerequisites</target>
        </trans-unit>
        <trans-unit id="396097fef039aa4722526bf810cf352022c5b8b3" translate="yes" xml:space="preserve">
          <source>Present the login interface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73615c4022c1240d6174be6e3a312bd7d35b1087" translate="yes" xml:space="preserve">
          <source>Preserve &lt;code&gt;mtime&lt;/code&gt; and &lt;code&gt;atime&lt;/code&gt; of transferred files and directories.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24bdd3dfee3d85c7871348e5008f2a0a10247ede" translate="yes" xml:space="preserve">
          <source>Preserve the end-of-file newline in files. Defaults to &lt;code&gt;False&lt;/code&gt;. This option may either be a boolean or a list of file globs (as defined by the &lt;a href=&quot;https://docs.python.org/library/fnmatch.html&quot;&gt;Python fnmatch package&lt;/a&gt;) for which end-of-file newlines are to be kept.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cda69cb79490bb81944717d2fa6644f7d6618cb8" translate="yes" xml:space="preserve">
          <source>Preserve the inode of the file, so that any hard links continue to share the inode with the original filename. This works by &lt;em&gt;copying&lt;/em&gt; the file, reading from the copy, and writing to the file at the original inode. If &lt;code&gt;False&lt;/code&gt;, the file will be &lt;em&gt;moved&lt;/em&gt; rather than copied, and a new file will be written to a new inode, but using the original filename. Hard links will then share an inode with the backup, instead (if using &lt;code&gt;backup&lt;/code&gt; to create a backup copy).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bc8cb3afba5aff267b0f515f0d1d98eff3b5cac" translate="yes" xml:space="preserve">
          <source>Prevent other users from changing configuration until the lock is released.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94224cdb6ce5f1d4ce054d671904c21e79995024" translate="yes" xml:space="preserve">
          <source>Prevents IAM users from setting a new password after their password has expired.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="498d76f5d5f15a20f21cd844f506b2f17161ee86" translate="yes" xml:space="preserve">
          <source>PrimaryClusterId</source>
          <target state="translated">PrimaryClusterId</target>
        </trans-unit>
        <trans-unit id="00ccc3656b2352ca0f51a3865bfb693ce54fda1a" translate="yes" xml:space="preserve">
          <source>Prime Network Registrar, Quantum, StarOS, UCS ManagWSA</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5c0e9e72ba52efd2f0d345d41e58ceb93f3df83" translate="yes" xml:space="preserve">
          <source>Print 'foo' and return 'bar'</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a123c4f07eece2b34035eb279fc029257bee60b2" translate="yes" xml:space="preserve">
          <source>Print FQDNs used in rules and their IPs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="865d59d2474d65144b455559a95352a3d7dfe2b2" translate="yes" xml:space="preserve">
          <source>Print a list of all minions that are NOT up according to Salt's presence detection (no commands will be sent to minions)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14241cca9e944de8be4b184c1096ad3d1e825dab" translate="yes" xml:space="preserve">
          <source>Print a list of all minions that are NOT up according to Salt's presence detection (no commands will be sent)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4e60f6a7d5c076866812b206ddebb9edfabd2a8" translate="yes" xml:space="preserve">
          <source>Print a list of all minions that are up according to Salt's presence detection (no commands will be sent to minions)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="581b343991baa4d0bfa55e673db11423cd34691b" translate="yes" xml:space="preserve">
          <source>Print a list of all of the minions that are up</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a0f9bde0b900556bc474eb959a60d0022bfff60" translate="yes" xml:space="preserve">
          <source>Print a list of all the down or unresponsive salt minions Optionally remove keys of down minions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8576c0d79673b6816277828f53ece6128b55af11" translate="yes" xml:space="preserve">
          <source>Print a specific job's detail given by it's jid, including the return data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce6bd30f4c2b92c08498fc23b701d4f3e34d9fcf" translate="yes" xml:space="preserve">
          <source>Print default zone for connections and interfaces</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a9b4656e344106aae9dc63da04724fca50a6780" translate="yes" xml:space="preserve">
          <source>Print event return data to the terminal to verify functionality</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4701c8bdac148cfba7b8cb525075696ba5e14d8b" translate="yes" xml:space="preserve">
          <source>Print out YAML using the block mode</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f893e298b446d7f4b26040a180bf430ce3f67bd" translate="yes" xml:space="preserve">
          <source>Print out the data passed into the function &lt;code&gt;**kwargs&lt;/code&gt;, this is used to both test the publication data and cli kwarg passing, but also to display the information available within the publication data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fa6a74b989b1de03ed9a08f1e851fc32a47bad8" translate="yes" xml:space="preserve">
          <source>Print out the data passed into the function &lt;code&gt;*args&lt;/code&gt; and &lt;code&gt;`kwargs&lt;/code&gt;, this is used to both test the publication data and cli argument passing, but also to display the information available within the publication data. Returns {&quot;args&quot;: args, &quot;kwargs&quot;: kwargs}.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0e5a14ee71e05ff23df57888113eca977fb99a2" translate="yes" xml:space="preserve">
          <source>Print out the data passed into the function &lt;code&gt;*args&lt;/code&gt; and &lt;code&gt;`kwargs&lt;/code&gt;, this is used to both test the publication data and cli argument passing, but also to display the information available within the publication data. Returns {&quot;args&quot;: repr(args), &quot;kwargs&quot;: repr(kwargs)}.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75bd7587f9e4521643ca97416bfef49331aa4e1f" translate="yes" xml:space="preserve">
          <source>Print out the types of the args and kwargs. This is used to test the types of the args and kwargs passed down to the minion</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abf64c80ffce37933f92e0bfa144f0b26ba4316d" translate="yes" xml:space="preserve">
          <source>Print out the version of gem</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97b07151837426c0a0f9e10fc9e653ef02fb6a2f" translate="yes" xml:space="preserve">
          <source>Print out via pretty print</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6c9acb4d24ca3c49efc9349729a7e41ec8c5845" translate="yes" xml:space="preserve">
          <source>Print predefined icmptypes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bea1c21813b76615bc7c72786530a3a70147e7a5" translate="yes" xml:space="preserve">
          <source>Print predefined services</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81c878ae1e50a3e288453fd8daf7f23c534be4f6" translate="yes" xml:space="preserve">
          <source>Print predefined zones</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20de703403ce027acde2a22d0eb80062bd43c95f" translate="yes" xml:space="preserve">
          <source>Print the at(1) script that will run for the passed job id. This is mostly for debugging so the output will just be text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e863e921bf36bb0d7c315d652351b306383f3f4f" translate="yes" xml:space="preserve">
          <source>Print the estate manor lane stack stats</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="839244ddd51f68986c1bf7a331d9f0509ae4eb8f" translate="yes" xml:space="preserve">
          <source>Print the estate road stack stats</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccac4d38c5c304acacfec7e95bb204001888125b" translate="yes" xml:space="preserve">
          <source>Print the output data in JSON</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d965e4f18373cc2ba9271154a9b14c61fe1746d6" translate="yes" xml:space="preserve">
          <source>Print the return data to the terminal to verify functionality</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4223c0b2f49872beacf7b97b0ef49890d8e5cd6" translate="yes" xml:space="preserve">
          <source>Print the stack stats</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a72144445f41e155d27263037a2d61493e2b9f7" translate="yes" xml:space="preserve">
          <source>Print the status of all known salt minions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b93aede5241b0a7474bbe734debeff9a2cd67e79" translate="yes" xml:space="preserve">
          <source>Prints out the full command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f64830f39754a918217147537ae57e333aaefd27" translate="yes" xml:space="preserve">
          <source>Prints partition information of given &amp;lt;device&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2305dc240223a21d01b2886057b2b4c711041b12" translate="yes" xml:space="preserve">
          <source>Prints the system ID for the partition. Some typical values are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41a928e64154680db42bcdf2ee18c58369c3b122" translate="yes" xml:space="preserve">
          <source>Prints user information details. Defaults to &lt;code&gt;False&lt;/code&gt;. If the user is already in the organization and user_details is set to False, the get_user function returns &lt;code&gt;True&lt;/code&gt;. If the user is not already present in the organization, user details will be printed by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1c4375c27d3f03eca28e27f0a1eba45305e66d6" translate="yes" xml:space="preserve">
          <source>Prior to the 2017.7.0 release, remotes would be evaluated in a non-deterministic order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c186d6cc27153e61fc3f5adb544e6cb6aa18e1a0" translate="yes" xml:space="preserve">
          <source>Priority (defaults to 0)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="015e2a7d4abc027fb7668557173d94a856591b22" translate="yes" xml:space="preserve">
          <source>Private SSH key on the minion server for authentication (ssh://)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb5b1a53f4bdbdab500b3f6438028384b0a68360" translate="yes" xml:space="preserve">
          <source>PrivateZone</source>
          <target state="translated">PrivateZone</target>
        </trans-unit>
        <trans-unit id="404eaf1c2a7273ce415f270af0dd4c4b32f43539" translate="yes" xml:space="preserve">
          <source>Privilege to grant. Can be one of 'read', 'write' or 'all'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36453d94c51ecb3b76091332e019b383fb6d91f5" translate="yes" xml:space="preserve">
          <source>Privileges can be set on the following database object types:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f5a86d996fe41cd28ad8ea8df3b57c8d1e99153" translate="yes" xml:space="preserve">
          <source>Process Management</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0df11831aac1997b8c2c5554bf908ca5139de13b" translate="yes" xml:space="preserve">
          <source>Process SSE events directly as they arrive and don't wait for any other process to &quot;complete&quot; first (like an ajax request).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2cf5c57bcc6dda306de9d298fe3984d9b67e478" translate="yes" xml:space="preserve">
          <source>Process command output through TextFSM template (default: &lt;code&gt;False&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2a6bc82b5a7f5d3e1b76607797e13cb7d5e963f" translate="yes" xml:space="preserve">
          <source>Process queued runners</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15b80380121350249455a2a6306f926072d03e9a" translate="yes" xml:space="preserve">
          <source>Process the return from Salt</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e63451d3cf90040c075dc1fe95aa1f7d7528c37f" translate="yes" xml:space="preserve">
          <source>Processing</source>
          <target state="translated">Processing</target>
        </trans-unit>
        <trans-unit id="b74d0d4bb546c66fff9ea6bb459c135aaf940616" translate="yes" xml:space="preserve">
          <source>Processor</source>
          <target state="translated">Processor</target>
        </trans-unit>
        <trans-unit id="63c0fe8e4bb2402bd0b0308f7bd3f9944fd2fadd" translate="yes" xml:space="preserve">
          <source>Product name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbe3c318acf019b15cccd250be81b92a5b3ff9f6" translate="yes" xml:space="preserve">
          <source>Profile name (JBoss domain mode only)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86dadbec4e3735e92807405a441893836e2e7427" translate="yes" xml:space="preserve">
          <source>Profile to build on</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80caa4281314ad1f1ce1d3548d9516fd7c4b2bae" translate="yes" xml:space="preserve">
          <source>Profile to use</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd09562855eec4f38fc7fe2df7082d5d92990204" translate="yes" xml:space="preserve">
          <source>Profile to use in container cloning (see &lt;a href=&quot;#salt.modules.lxc.get_container_profile&quot;&gt;&lt;code&gt;lxc.get_container_profile&lt;/code&gt;&lt;/a&gt;). Values in a profile will be overridden by the &lt;strong&gt;Container Cloning Arguments&lt;/strong&gt; listed below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c65a7161c2445c85dee2b47b956fd58f7690411" translate="yes" xml:space="preserve">
          <source>Profile to use in container creation (see &lt;a href=&quot;#salt.modules.lxc.get_container_profile&quot;&gt;&lt;code&gt;lxc.get_container_profile&lt;/code&gt;&lt;/a&gt;). Values in a profile will be overridden by the &lt;strong&gt;Container Creation Arguments&lt;/strong&gt; listed below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d260279ab1cbba6af38204f4fbe9eb91af59b81" translate="yes" xml:space="preserve">
          <source>Profile to use in container creation (see the &lt;a href=&quot;https://docs.saltstack.com/en/latest/topics/tutorials/lxc.html#tutorial-lxc-profiles-container&quot;&gt;LXC Tutorial&lt;/a&gt; for more information). Values in a profile will be overridden by the parameters listed below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="697b3d539c87621f8973919e3b7d1a150a01a7f0" translate="yes" xml:space="preserve">
          <source>Profiles can be defined in the minion or master config files, or in pillar or grains, and are loaded using &lt;a href=&quot;salt.modules.config#salt.modules.config.get&quot;&gt;&lt;code&gt;config.get&lt;/code&gt;&lt;/a&gt;. The key under which LXC profiles must be configured is &lt;code&gt;lxc.container_profile.profile_name&lt;/code&gt;. An example container profile would be as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38e20a2fa328e26c101ba8d36a1e00802dda6712" translate="yes" xml:space="preserve">
          <source>Profiles can be defined in the minion or master config files, or in pillar or grains, and are loaded using &lt;a href=&quot;salt.modules.config#salt.modules.config.get&quot;&gt;&lt;code&gt;config.get&lt;/code&gt;&lt;/a&gt;. The key under which LXC profiles must be configured is &lt;code&gt;lxc.network_profile&lt;/code&gt;. An example network profile would be as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c0eaa3f7e3354e057799eb72bfe5b3b8384da45" translate="yes" xml:space="preserve">
          <source>Profiles can get pretty complicated in terms of the amount of possible config options. Use the following shorthand to create complex arguments such as lists, dictionaries, and lists of dictionaries. An option is also provided to pass raw json as well.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="155bb0dcab56ab6ea4960fb29a40e78b97827229" translate="yes" xml:space="preserve">
          <source>ProfitBricks Cloud Module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1d241858799498aabb5e38317b054ede8a643f3" translate="yes" xml:space="preserve">
          <source>Promotes a clone file system to no longer be dependent on its &quot;origin&quot; snapshot.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52f9ccf8353396ea705b8a48c847f63a312b141e" translate="yes" xml:space="preserve">
          <source>Propagate exceptions from celery task, see celery AsyncResult.get documentation, Default: True</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dae9c6e0a5bf8a7414af8ee44b364a3ca6fc773e" translate="yes" xml:space="preserve">
          <source>Properly rename a node. Pass in the new name as &quot;new name&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26c47be036292d836b5af277dbd9ee9ffc0fa6cf" translate="yes" xml:space="preserve">
          <source>Properties and resource will not be removed when they are absent from the state!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72d5d235152a53796a466b1f79777a8fc7305205" translate="yes" xml:space="preserve">
          <source>Properties do not get cloned, if you specify the properties in the state file they will be applied on a subsequent run.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="900d40464595f0e701136e8435456d8e94e0af10" translate="yes" xml:space="preserve">
          <source>Properties of CPUs for freshly created machines</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59004658efaa859d0fc090baf2d6cc9de9c8a5dd" translate="yes" xml:space="preserve">
          <source>Property name to match the minion id against. Defaults to &lt;code&gt;name&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a782385b23e838cf853d2ee8b34d824871aa8a9" translate="yes" xml:space="preserve">
          <source>Protect all versions of installed packages. Only meaningful if used with destructive=True</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="646a44073d64e0e9cb0addb65a47c214fab14156" translate="yes" xml:space="preserve">
          <source>Protect fetch-restricted files. Only meaningful if used with destructive=True</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7b3e365f469229453d9b6d2d0b76c7f85ac271d" translate="yes" xml:space="preserve">
          <source>Protection Grop already exists</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="339bca0bec12af7df1bb281df69c7e841fbd2476" translate="yes" xml:space="preserve">
          <source>Protection Group in a deleted state</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb639b1cdcf6448dde4cf13a4f0ef135f8e7b508" translate="yes" xml:space="preserve">
          <source>Protection group does not exist</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="302b5428aca5715eecf27ce90b010a38fc59fc8b" translate="yes" xml:space="preserve">
          <source>Protocol to use: 'http' or 'https'. If not specified, derives the host base from the provider configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="609aa88319d19c26dd390f077c953fc93c5d0868" translate="yes" xml:space="preserve">
          <source>Provide a comment for the commit</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="644c4ee33d80e2124f23dfaa7dfb34c2269ff55c" translate="yes" xml:space="preserve">
          <source>Provide a comment for the commit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b07b796e85454603df6c23c1cfa5eb01c3d7e48" translate="yes" xml:space="preserve">
          <source>Provide a comment to the commit</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="766561cf1c41ec2d64f05aee89db7f5dec16c4f5" translate="yes" xml:space="preserve">
          <source>Provide a comment to the commit. (default = None)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="696198a5fb44527f6d4c09a14202c85d5fd3e53e" translate="yes" xml:space="preserve">
          <source>Provide a dict of the connected interfaces and their hw addresses (Mac Address)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbba052bcd669228ee546ea3d4677171a5c5c1fe" translate="yes" xml:space="preserve">
          <source>Provide a dict of the connected interfaces and their ip addresses The addresses will be passed as a list for each interface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="769cd47507941147e74232b961c17aeb9182a4a1" translate="yes" xml:space="preserve">
          <source>Provide a dict of the connected interfaces and their ip4 addresses The addresses will be passed as a list for each interface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8166285c5a71ed607a1a4901a581a68357d097fb" translate="yes" xml:space="preserve">
          <source>Provide a dict of the connected interfaces and their ip6 addresses The addresses will be passed as a list for each interface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82901f23bff50f9c726079cfa43b2a0712601d39" translate="yes" xml:space="preserve">
          <source>Provide a different path and directory name inside the master's minion files cachedir</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a7bf45313611f1aa1b90a0be28e7e161f78e597" translate="yes" xml:space="preserve">
          <source>Provide a different path inside the master's minion files cachedir</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="919045eff96605d1094e9985d1dc67188180ac69" translate="yes" xml:space="preserve">
          <source>Provide a list of events to be stored in carbon</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0faaadc947b5a879dce9362129c4864df578a6ba" translate="yes" xml:space="preserve">
          <source>Provide a path to an alternate CA bundle</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b379ae2353f8d03b7efcc90a3fa26508ef6f94e" translate="yes" xml:space="preserve">
          <source>Provide authentication using Django Web Framework</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e01a590098ddefdbbdef9b42ffe37a141b41bd02" translate="yes" xml:space="preserve">
          <source>Provide authentication using MySQL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="465b19eb2b71bad00bdb4a08fe04519ab366878d" translate="yes" xml:space="preserve">
          <source>Provide authentication using OpenStack Keystone</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1121470bb148575ce184c7d47ed2dd9cc4d15eed" translate="yes" xml:space="preserve">
          <source>Provide authentication using YubiKey.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca56dd6641bd38e73fcb5dd3d051d9172a46dbcb" translate="yes" xml:space="preserve">
          <source>Provide authentication using a REST call</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1c53ba16fb388bb307cadb78fc2cbf8a8e8714c" translate="yes" xml:space="preserve">
          <source>Provide authentication using configured shared secret</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0497f41f3c330a2f92a30eee51fede592f1dc642" translate="yes" xml:space="preserve">
          <source>Provide authentication using local files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2594e4f24e44596f548fc312a322e02d8322335" translate="yes" xml:space="preserve">
          <source>Provide authentication using simple LDAP binds</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b2b46a6f0a76a066508242868b811a91fa5ec3e" translate="yes" xml:space="preserve">
          <source>Provide information if the path is mounted</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa4c4b28cf9b3fa9729cada695078a2b00acf6bb" translate="yes" xml:space="preserve">
          <source>Provide password for chocolatey sources that need authentication credentials.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69a57f65fe3076aca198d87047ff52557805e187" translate="yes" xml:space="preserve">
          <source>Provide test case states that enable easy testing of things to do with state calls, e.g. running, calling, logging, output filtering etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75a1dc69406c5161aedf0e112b21436301536c36" translate="yes" xml:space="preserve">
          <source>Provide the machine-id for machine/virtualization combination</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be7969e2ee593fb8179c1242dc50f8a3d8a647a0" translate="yes" xml:space="preserve">
          <source>Provide the number of items in a queue</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da7b59f23e4ed2fceceb6abbb72ed11d09cc89ea" translate="yes" xml:space="preserve">
          <source>Provide the path to a debconf answers file, processed before installation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8e80d0a77b2dedcbf2afc5cf6e96df7e7529108" translate="yes" xml:space="preserve">
          <source>Provide the service module for system supervisord or supervisord in a virtualenv</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="102dde341709cba1055245743c320d09fbad31bb" translate="yes" xml:space="preserve">
          <source>Provide the service module for the dummy proxy used in integration tests</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="713ca3eb3a130458a078b00f2f72cd75745a1d25" translate="yes" xml:space="preserve">
          <source>Provide the service module for the proxy-minion REST sample</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8536f51f34be7c6b4a945ee0dc882ee19f4ccb57" translate="yes" xml:space="preserve">
          <source>Provide the service module for the proxy-minion SSH sample .. versionadded:: 2015.8.2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46f74ab41ec6df90117dbc940004427081d97adb" translate="yes" xml:space="preserve">
          <source>Provide time in minutes for commit confirmation. If this option is specified, the commit will be rolled back in the given time unless the commit is confirmed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2cc3815ac83b8c53cc1bc0e95aaeb74dddaacbc" translate="yes" xml:space="preserve">
          <source>Provide time in minutes for commit confirmation. If this option is specified, the commit will be rolled back in the specified amount of time unless the commit is confirmed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4934347bed847f10bc5e3f83d78f79c0bae17feb" translate="yes" xml:space="preserve">
          <source>Provide username for chocolatey sources that need authentication credentials.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1861435eb04025c775501f993e025da01690ea9e" translate="yes" xml:space="preserve">
          <source>Provide visual feedback on stdout, dots while key is generated. Default is True.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5df0894f8a50af1deff81cbad33b8f260d45f88" translate="yes" xml:space="preserve">
          <source>Provide visual feedback on stdout. Default True</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ceee3f3615a2bbe4ce0ac5a269a311e4821daf4" translate="yes" xml:space="preserve">
          <source>Provider</source>
          <target state="translated">Provider</target>
        </trans-unit>
        <trans-unit id="c4d4ebfdd03b691f619d61cbe366c6ce68fc905a" translate="yes" xml:space="preserve">
          <source>Provides</source>
          <target state="translated">Provides</target>
        </trans-unit>
        <trans-unit id="2ebeafde1be810e80d09959ecb14f4cd80208fb3" translate="yes" xml:space="preserve">
          <source>Provides access to randomness generators.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5885c4d58485bf661ee52e13d84df366782899d" translate="yes" xml:space="preserve">
          <source>Provides an authenticate function that will allow the caller to authenticate a user against the Pluggable Authentication Modules (PAM) on the system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="119363505cafdbc07c018036f34acaf80c8e2c4f" translate="yes" xml:space="preserve">
          <source>Provides an authenticate function that will allow the caller to authenticate a user via their public cert against a pre-defined Certificate Authority.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dc751182eceed676ead2122cbf26f7698809fc9" translate="yes" xml:space="preserve">
          <source>Provides an integer based on the FQDN of a machine. Useful as server-id in MySQL replication or anywhere else you'll need an ID like this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90d2cecdf387e94df27c364dd4abe831b693bec4" translate="yes" xml:space="preserve">
          <source>Provides an interface to basic ZNC functionality</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75bb981999e4a98d91608120d3cb18b70e9b500c" translate="yes" xml:space="preserve">
          <source>Provides details regarding the BGP sessions configured on the network device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dccca8ecf6af489dd8888cdb737c8300e190008" translate="yes" xml:space="preserve">
          <source>Provides file.managed-like functionality (templating, etc.) for a pre-made crontab file, to be assigned to a given user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df61fdf6ab7a5d25751490fa5c41cf899f6837af" translate="yes" xml:space="preserve">
          <source>Provides information about a shell or script languages which often use &lt;code&gt;#!&lt;/code&gt;. The values returned are dependent on the shell or scripting languages all return the &lt;code&gt;installed&lt;/code&gt;, &lt;code&gt;path&lt;/code&gt;, &lt;code&gt;version&lt;/code&gt;, &lt;code&gt;version_raw&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bb00a36eb15db5814c4d317f18b0dc4ab7624fd" translate="yes" xml:space="preserve">
          <source>Provides the BGP configuration on the device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fd58a2226d750a7cac0d2a0b79aa43260c29a75" translate="yes" xml:space="preserve">
          <source>Provides the current requested boot device. Be aware that not all IPMI devices support this. Even in BMCs that claim to, occasionally the BIOS or UEFI fail to honor it. This is usually only applicable to the next reboot.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cc5447319a76ce13d77e4b94bc343ac4089e4ac" translate="yes" xml:space="preserve">
          <source>Provides the minion with the name of its master. This is useful in states to target other services running on the master.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55af3f19fb0506b02554d26cd719df6fd262f09e" translate="yes" xml:space="preserve">
          <source>Provides the results of the measurements of the RPM/SLA probes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4512d1f63e4a585d388911fec2774cd4c74f83f9" translate="yes" xml:space="preserve">
          <source>Provides the service module for systemd</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4954f87b2dc4f23a807edd06d3f05047b1093cb" translate="yes" xml:space="preserve">
          <source>Provides virtual</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ba78c265e81dc802c79645b453889e14fbd2808" translate="yes" xml:space="preserve">
          <source>Provision a single machine</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="684e5c9339d6aa80387b83296faf7d2e1ed19068" translate="yes" xml:space="preserve">
          <source>Provision a single machine, adding its keys to the salt master</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4355a5e14f5c3447d0b188da3e7fb1aaf7ad366a" translate="yes" xml:space="preserve">
          <source>Proxmox Cloud Module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="777fb4f1593b78641b07edd585520c16f04e5969" translate="yes" xml:space="preserve">
          <source>Proxy Minion for Cisco NX OS Switches</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5496622bb8ba628eb20622bc4d1d368d4a4096cb" translate="yes" xml:space="preserve">
          <source>Proxy Minion interface module for managing (practically) any network device with Cisco Network Services Orchestrator (Cisco NSO). Cisco NSO uses a series of remote polling agents, APIs and SSH commands to fetch network configuration and represent it in a data model. PyNSO, the Python module used by this proxy minion does the task of converting native Python dictionaries into NETCONF/YANG syntax that the REST API for Cisco NSO can then use to set the configuration of the target network device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3fb5c9825246162299dfa693d9af5696c8919f0" translate="yes" xml:space="preserve">
          <source>Proxy Minion interface module for managing Cisco Integrated Management Controller devices</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b541e6bb635368af9b5aa5f6320019e58a250fbb" translate="yes" xml:space="preserve">
          <source>Proxy Minion interface module for managing Palo Alto firewall devices</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a696a9027a33ca0da527b250feaded7acc054e1" translate="yes" xml:space="preserve">
          <source>Proxy Minion interface module for managing VMware ESXi hosts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68609843f2fe20177ac531e30c5b235361106156" translate="yes" xml:space="preserve">
          <source>Proxy Minion to manage Cisco Nexus Switches (NX-OS) over the NX-API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ea68d4daee90905cf0a4cb0221f1b07f7dbda96" translate="yes" xml:space="preserve">
          <source>Proxy Minions generally establish a connection with the remote network device at the time of the Minion startup and that connection is going to be used forever.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3faca084e459200ac644e4d5364b06b961336252" translate="yes" xml:space="preserve">
          <source>Proxy Pillar Example</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23024e264c7987f9e1e414dff9c0bda414d03696" translate="yes" xml:space="preserve">
          <source>Proxy address which is passed to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e659338d5d859e96738b7f584ba05dd213a09ef0" translate="yes" xml:space="preserve">
          <source>Proxy minion for managing a Chronos cluster.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f21e13a2ec03d983ae4353f35a5b900ad24d4df" translate="yes" xml:space="preserve">
          <source>Proxy minion for managing a Marathon cluster.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34901757dcef209d308f364c760220b6e092e58c" translate="yes" xml:space="preserve">
          <source>Proxy minion for managing network devices via &lt;a href=&quot;https://napalm-automation.net/&quot;&gt;NAPALM&lt;/a&gt; library.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2580ed089e62ba0be87d39ac1a60614bcafb5e4a" translate="yes" xml:space="preserve">
          <source>Proxy minion interface module for managing Dell FX2 chassis (Dell Chassis Management Controller version 1.2 and above, iDRAC8 version 2.00 and above)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b5e195c9dbe6f064b5feb8bcb8291cddaaa4255" translate="yes" xml:space="preserve">
          <source>Proxy minions get their configuration from Salt's Pillar. Every proxy must have a stanza in Pillar and a reference in the Pillar top-file that matches the ID.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfd2e27cac4b59e839abf4e903af19f30dc902b2" translate="yes" xml:space="preserve">
          <source>Proxy minions get their configuration from Salt's Pillar. Every proxy must have a stanza in Pillar and a reference in the Pillar top-file that matches the ID. At a minimum for communication with the ESXi host, the pillar should look like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72c7a4966d95c14189a90b2a676ae8c8cdd6c5f5" translate="yes" xml:space="preserve">
          <source>Proxy minions get their configuration from Salt's Pillar. Every proxy must have a stanza in Pillar and a reference in the Pillar top-file that matches the ID. At a minimum for communication with the NSO host, the pillar should look like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ef8101ce6f7e5d373d23d12af1735fcfc1fea74" translate="yes" xml:space="preserve">
          <source>Proxy minions get their configuration from Salt's Pillar. Every proxy must have a stanza in Pillar and a reference in the Pillar top-file that matches the ID. There are four connection options available for the panos proxy module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ed95957c18084190f9286b57b8b44e2945e4671" translate="yes" xml:space="preserve">
          <source>Proxy minions get their configuration from Salt's Pillar. Every proxy must have a stanza in Pillar, and a reference in the Pillar topfile that matches the ID. At a minimum for communication with the chassis the pillar should look like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07c7512253a5737a965c488af4ebddb49ddbf917" translate="yes" xml:space="preserve">
          <source>Proxy module for managing Arista switches via the eAPI using the &lt;a href=&quot;http://pyeapi.readthedocs.io/en/master/index.html&quot;&gt;pyeapi&lt;/a&gt; library.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3917030561422a028d98e1dfeabb0f32bfdc7658" translate="yes" xml:space="preserve">
          <source>Proxy module for managing Cisco Nexus switches via the NX-API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2df4f4d4310a081ea2338dc320da54ebd12d0510" translate="yes" xml:space="preserve">
          <source>Proxy module for managing network devices via &lt;a href=&quot;https://github.com/ktbyers/netmiko&quot;&gt;Netmiko&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23388044000a2b30b8156d503dfca13d18939eb0" translate="yes" xml:space="preserve">
          <source>Proxy pillar file example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce8534089b0a7cea0b1d1fbd0cfb37d37a53339f" translate="yes" xml:space="preserve">
          <source>Prune Docker's various subsystems</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3c6243e8c60e4d41ce0dfceff61bf96fd46d043" translate="yes" xml:space="preserve">
          <source>Prunes the dump session identified by the given session id.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9828e859a4ac7899d5f82a23a3e4579a9bcee21b" translate="yes" xml:space="preserve">
          <source>Ptype:</source>
          <target state="translated">Ptype:</target>
        </trans-unit>
        <trans-unit id="8e2cca8c1e41006b2a4b9ade5c7a261f6ebf8f5c" translate="yes" xml:space="preserve">
          <source>Public SSH key to added to the authorized_keys file on the ESXi host. You can use &lt;code&gt;ssh_key&lt;/code&gt; or &lt;code&gt;ssh_key_file&lt;/code&gt;, but not both.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="960f8529e81fded7d53c070ae9f433199e508335" translate="yes" xml:space="preserve">
          <source>Publications need to be enabled on the Salt master and the minion needs to have permission to publish the command. The Salt master will also prevent a recursive publication loop, this means that a minion cannot command another minion to command another minion as that would create an infinite command loop.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a1b3c0c4538d3a2422273bdb244e95758c45156" translate="yes" xml:space="preserve">
          <source>Publish a command from a minion to a target</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62006af89a26adc74830903cdbb83e729eefa3a5" translate="yes" xml:space="preserve">
          <source>Publish a command from the minion out to other minions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5def93a3949110002748b2251a7ccc7220b199a0" translate="yes" xml:space="preserve">
          <source>Publish all ports to the host</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5219eb9a71725226a521fd825d0931243ad5a33d" translate="yes" xml:space="preserve">
          <source>Pull</source>
          <target state="translated">Pull</target>
        </trans-unit>
        <trans-unit id="db5a042a0f59f1b0ab966e36b77d281d90634f8e" translate="yes" xml:space="preserve">
          <source>Pull any pending messages from the message_generator, sending each one to either the event bus, the command_async or both, depending on the values of fire_all and command</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efcbf0bc802fd84be2d277e72393747f9c1c8032" translate="yes" xml:space="preserve">
          <source>Pull down a remote gzipped tarball of recipes and untar it to the cookbook cache</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="243c1d15f4cdd95e4383af9946c7c16edfb48468" translate="yes" xml:space="preserve">
          <source>Pull image for containers in the docker-compose file, service_names is a python list, if omitted pull all images</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c434258ddf96867957a511fcf87ab722d754f1ef" translate="yes" xml:space="preserve">
          <source>Pull sdb values from a YAML file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bd206deca89b2904d5d11b34f5366c7a839c479" translate="yes" xml:space="preserve">
          <source>Pulls a string from redis and deserializes it from json. Deserialized dictionary data loaded directly into top level if pillar_key is not set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52fabbfed473f4916b1bcccf4017708bcd1b0c25" translate="yes" xml:space="preserve">
          <source>Pulls an image from a Docker registry</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="757333d76ae9fcc4b4e0b9a494d555062588ca9c" translate="yes" xml:space="preserve">
          <source>Pulsecom SuperG</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fd56572111620ea201aafff27f5759f945d3ff6" translate="yes" xml:space="preserve">
          <source>Pure python state renderer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a41898b6308d7d17ef96b66c01bb1f67d34cf5e8" translate="yes" xml:space="preserve">
          <source>Purge all the jobs currently scheduled on the minion</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79dae28655d353173d7e86ad84a1086aca016cd2" translate="yes" xml:space="preserve">
          <source>Purge the database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbe0189c1de95f7de2f3b9defc2fa9345f0e27a0" translate="yes" xml:space="preserve">
          <source>Purge the named container and delete its minion key if present. WARNING: Destroys all data associated with the container.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18bf0bc68c2f670d151f3fe1d3f8c9a52cac0139" translate="yes" xml:space="preserve">
          <source>Purge the varnish cache</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0f73c5c97bf12a8191bba675926d001e7f65b95" translate="yes" xml:space="preserve">
          <source>Purge whole database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f7f57b519fc9bc5683b4808641d3b33f53b6f9d" translate="yes" xml:space="preserve">
          <source>Push</source>
          <target state="translated">Push</target>
        </trans-unit>
        <trans-unit id="a256a72e4af7102b55d39e8f7659b0094cdc7f46" translate="yes" xml:space="preserve">
          <source>Push a CIB-file as the new CIB to the cluster</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2133ac923cdaa4410ae942317c2f4838295d98d9" translate="yes" xml:space="preserve">
          <source>Push a directory from the minion up to the master, the files will be saved to the salt master in the master's minion files cachedir (defaults to &lt;code&gt;/var/cache/salt/master/minions/minion-id/files&lt;/code&gt;). It also has a glob for matching specific files using globbing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ebbab2711bb3bd418f561ca2c71d806a41d30ea" translate="yes" xml:space="preserve">
          <source>Push a file from the minion up to the master, the file will be saved to the salt master in the master's minion files cachedir (defaults to &lt;code&gt;/var/cache/salt/master/minions/minion-id/files&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="733637fe5272fb4c863581a5403e149310d89016" translate="yes" xml:space="preserve">
          <source>PushOver settings may also be configured as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d47dc7de16e703a019e6d6d61331a4ea2dfaa8b" translate="yes" xml:space="preserve">
          <source>Pushes an image to a Docker registry. See the documentation at top of this page to configure authentication credentials.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6be0ec48d3fe0eef9f9d393158789fc507677308" translate="yes" xml:space="preserve">
          <source>Pushing a text note.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3da8ef03b667382b68c839c6114d7d83f893f71d" translate="yes" xml:space="preserve">
          <source>Put message(s) on hold from the mail queue</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a09d2c1d6a9d0e7c9cf66dec75e3fd575d38a730" translate="yes" xml:space="preserve">
          <source>Put metadata</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bff10e78917af4693355a4ab74fa75f9f2ed213" translate="yes" xml:space="preserve">
          <source>Put together all of the information necessary to request an instance on EC2, and then fire off the request the instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff9baa1937e59322cd9c9a664e2ea65d9e026c39" translate="yes" xml:space="preserve">
          <source>Put together all of the information necessary to request an instance through Novaclient and then fire off the request the instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81f8c251c7c86e0139a92cc7f63d93bf5df8d762" translate="yes" xml:space="preserve">
          <source>Put values into Consul</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="978a5a0632c286ce8f9da76d28159c25a10b806b" translate="yes" xml:space="preserve">
          <source>PyCrypto</source>
          <target state="translated">PyCrypto</target>
        </trans-unit>
        <trans-unit id="2fbeee0ff81b54bc3a3513c70136068be8618a61" translate="yes" xml:space="preserve">
          <source>PyGithub python module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f3e8fd7247ec70ef9ecb113b25e887052668db8" translate="yes" xml:space="preserve">
          <source>PyNSO</source>
          <target state="translated">PyNSO</target>
        </trans-unit>
        <trans-unit id="cf57a224c6a437a05e26e47b413e3fc1b6668649" translate="yes" xml:space="preserve">
          <source>PyNSO can be installed via pip:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea01479d9f7e56177eb828bb389e62b66f311b94" translate="yes" xml:space="preserve">
          <source>PyOpenSSL Python module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b8ce5ea67e938d83366bec177929d2eabfbb7a8" translate="yes" xml:space="preserve">
          <source>PyOpenSSL Python module (0.10 or later, 0.14 or later for X509 extension support)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4452386b1430e41b7c4d52b72af74e7103a64c4e" translate="yes" xml:space="preserve">
          <source>PyVmomi can be installed via pip:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c831cbe9143e30fa8947e3e96879ac2002bc384" translate="yes" xml:space="preserve">
          <source>Pyobjects provides shortcut functions for calling &lt;code&gt;pillar.get&lt;/code&gt;, &lt;code&gt;grains.get&lt;/code&gt;, &lt;code&gt;mine.get&lt;/code&gt; &amp;amp; &lt;code&gt;config.get&lt;/code&gt; on the &lt;code&gt;__salt__&lt;/code&gt; object. This helps maintain the readability of your state files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="549dd1b1b21ceaca598463fdf7f75cf87271b81e" translate="yes" xml:space="preserve">
          <source>Pyobjects takes care of creating an object for each of the available states on the minion. Each state is represented by an object that is the CamelCase version of its name (i.e. &lt;code&gt;File&lt;/code&gt;, &lt;code&gt;Service&lt;/code&gt;, &lt;code&gt;User&lt;/code&gt;, etc), and these objects expose all of their available state functions (i.e. &lt;code&gt;File.managed&lt;/code&gt;, &lt;code&gt;Service.running&lt;/code&gt;, etc).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3ac8ce947b50e3f5f54b7912f20902f4301b402" translate="yes" xml:space="preserve">
          <source>Pyrax Cloud Module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae1d138fe6af89f5b081cf1038a1956e468608a0" translate="yes" xml:space="preserve">
          <source>Python SQLCipher support is provided by the pysqlcipher Python package. You need this module installed to query Pillar data from a SQLCipher database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e3275c35e54e1ee802778fedf67bc492ac3b766" translate="yes" xml:space="preserve">
          <source>Python True or False to enable or disable coredumps.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fc2c8180a2b04eede4bc3cbd00a9081ba293a56" translate="yes" xml:space="preserve">
          <source>Python dictionaries are, of course, simply key-value pairs. Users from other languages may recognize this data type as hashes or associative arrays.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14a67cae2ca721c91bef1fdb6d37ab53b7d44820" translate="yes" xml:space="preserve">
          <source>Python executable used to build the virtualenv</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1223affbaa359e3a85bc943602ef4b0b7323ad7a" translate="yes" xml:space="preserve">
          <source>Python glob module &amp;lt;https://docs.python.org/2/library/glob.html&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43d7d1cd657dff76831ad6c98d70f60600d0a8b4" translate="yes" xml:space="preserve">
          <source>Python module pyghmi. You can install pyghmi using pip:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41c579b1065ddc55315abcc4355368f7535c1e59" translate="yes" xml:space="preserve">
          <source>Python pretty-print (pprint)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dff2749208efa30d5d0644e65f2de95e85e8d1b6" translate="yes" xml:space="preserve">
          <source>Python renderer that includes a Pythonic Object based interface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87123595e43a3759c6ce8f745cb42dbf13bd5482" translate="yes" xml:space="preserve">
          <source>Python: &lt;a href=&quot;https://github.com/saltstack/pepper&quot;&gt;https://github.com/saltstack/pepper&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf9bec43ffe77578c41a8dd734a71a0d6993e970" translate="yes" xml:space="preserve">
          <source>Qemu Command Wrapper</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a526116036ccd688773efaccbe776dacf92e7fac" translate="yes" xml:space="preserve">
          <source>Qemu-img Command Wrapper</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="473dfcd58c0557e3eab5d5927afe9f4492562910" translate="yes" xml:space="preserve">
          <source>QingCloud Cloud Module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb40150fd1e88e1023cee77e2a9fe2baf22bffe5" translate="yes" xml:space="preserve">
          <source>Quagga Routing Software</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71c55517a04f686262fef4e498b957981a5d7cfd" translate="yes" xml:space="preserve">
          <source>Queries and converts the virtual machine properties to the available format from the schema. If the objects attribute is True the config objects will have extra properties, like 'object' which will include the vim.vm.device.VirtualDevice, this is necessary for deletion and update actions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59e6ff5398509f82b23aeba9b44b9f1a1cea1f85" translate="yes" xml:space="preserve">
          <source>Queries the specified network device for associated driver information</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="855c585913eb3e0687dbe24cdf49b82c4e23b906" translate="yes" xml:space="preserve">
          <source>Queries the specified network device for coalescing information</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f07ac54bc1316b28a5f71ae027b2e9e04fc669a2" translate="yes" xml:space="preserve">
          <source>Queries the specified network device for rx/tx ring parameter information</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a19ca204f475f6472b5b448087e876f773f2236" translate="yes" xml:space="preserve">
          <source>Queries the specified network device for the state of protocol offload and other features</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eefbdb7fea8722bced2493de5d879ba6622d5706" translate="yes" xml:space="preserve">
          <source>Queries the virtual machine config file and returns vim.host.DatastoreBrowser.SearchResults object on success None on failure</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="909abb2b3d32a7a471d4314bad178bcacddc2fb4" translate="yes" xml:space="preserve">
          <source>Query &lt;strong&gt;reclass&lt;/strong&gt; for the top data (states of the minions).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3b51332f2ec335ac9b14f5bfc255d920ee6de44" translate="yes" xml:space="preserve">
          <source>Query &lt;strong&gt;varstack&lt;/strong&gt; for the top data (states of the minions).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02982ab07b982130f35e084b5c71273abd5a4ec0" translate="yes" xml:space="preserve">
          <source>Query DNS for information about a domain or ip address</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e54a5ff599a1fe3cc13496e43ed20ed64b4e37a9" translate="yes" xml:space="preserve">
          <source>Query LDAP, retrieve list of minion_ids from an OU or other search. For each minion_id returned from the LDAP search, copy the perms matchers into the auth dictionary :param auth_list: :param opts: __opts__ for when __opts__ is not injected :return: Modified auth list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43397b9cea919f131ee307ac0148d05e2ef359d1" translate="yes" xml:space="preserve">
          <source>Query NetBox API for minion data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd1ac0e6c5653c36804d1af8919e02115642c6f8" translate="yes" xml:space="preserve">
          <source>Query Parameters:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14163b6a7eeaed38daa87a0d7768dfc385ff60c7" translate="yes" xml:space="preserve">
          <source>Query a resource until a successful response, and decode the return data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88b25a1919d244c74de3cabfc54d6dde9b47f657" translate="yes" xml:space="preserve">
          <source>Query a resource, and decode the return data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fee46def1e465ac1b5acb23ca9eb092739a50383" translate="yes" xml:space="preserve">
          <source>Query a type of record for one or more items. Requires a valid query string. See &lt;a href=&quot;https://rally1.rallydev.com/slm/doc/webservice/introduction.jsp&quot;&gt;https://rally1.rallydev.com/slm/doc/webservice/introduction.jsp&lt;/a&gt; for information on query syntax.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d09b96850a622322ea33126d443e3158e60d87f" translate="yes" xml:space="preserve">
          <source>Query an instance upon creation from the EC2 API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a4bd6c22d067b476dfb70a1cf525826dfd801ad" translate="yes" xml:space="preserve">
          <source>Query an instance upon creation from the Joyent API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ad5e8e4f6fd43a4902398eb5daf0fa23df2873a" translate="yes" xml:space="preserve">
          <source>Query and modify an LDAP database (alternative interface)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93d1cac67f4c44cb869cf0fe71e22ee28eb7f9be" translate="yes" xml:space="preserve">
          <source>Query consul for all keys/values within base path</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c64c123247626d9cac70871da28058b5022ed41b" translate="yes" xml:space="preserve">
          <source>Query format_events:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87f6a225b2d8c1bf4cd50a26990c899e68486176" translate="yes" xml:space="preserve">
          <source>Query range</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fefe60a3d25f6a2cca7a2734655df9f256b26d8f" translate="yes" xml:space="preserve">
          <source>Query the master to generate fresh pillar data on the fly, specifically from the requested pillar environment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4595ae5afb97a0fbba25e940373ecae2465c8c90" translate="yes" xml:space="preserve">
          <source>Query the node for specific information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f883d2344e41476541bdb0aeb061d4835c563dbd" translate="yes" xml:space="preserve">
          <source>Query the package database those packages which are locked against reinstallation, modification or deletion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99f0eb993f5bf5117494b9fc285615be8185964d" translate="yes" xml:space="preserve">
          <source>Query the package database to determine if the named package is locked against reinstallation, modification or deletion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="404428e90ff0b2a797fb13d235d9ae76b1fe3f3f" translate="yes" xml:space="preserve">
          <source>Query the salt event bus via the jobs runner. jobs.list_job will show a job in progress, jobs.lookup_jid will return a job that has completed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d31f1fa4ed7d33962aeef1589c5dbe526938c4b3" translate="yes" xml:space="preserve">
          <source>Query the system. This class is actually puts all Salt features together, so there would be no need to pick it from various places.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43fc411f98c0f6932db0f1c95644389942a6fa45" translate="yes" xml:space="preserve">
          <source>Query the virtual machines. When called without options all hosts are detected and a full query is returned. A single host can be passed in to specify an individual host to query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b033d34972f3a8e5f5c83b570ba5d89b4252d4b2" translate="yes" xml:space="preserve">
          <source>Query to be executed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5ec6ad3c8286440d4024a6512fe8bd6684c4365" translate="yes" xml:space="preserve">
          <source>Query whether a VM exists</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9188f206f3530a50e2d4d275ad585d2a8ba7cb14" translate="yes" xml:space="preserve">
          <source>Querying data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d325fcd919384f395c02751e03d2cd0288b98cca" translate="yes" xml:space="preserve">
          <source>Queue</source>
          <target state="translated">Queue</target>
        </trans-unit>
        <trans-unit id="2df3d8f739ebe7157b7b8a18eddf0f0337b7e5b2" translate="yes" xml:space="preserve">
          <source>Queue a set of instances to be provisioned later. Expects a list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a599877d75384ddc0bb59dc0c1c7235d591a9a2" translate="yes" xml:space="preserve">
          <source>Queued</source>
          <target state="translated">Queued</target>
        </trans-unit>
        <trans-unit id="a3dbdf450b7410281b9c706fff227e32ce30262b" translate="yes" xml:space="preserve">
          <source>Queued runners</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="595574b67956abb4d2265919bf013f02b84b03f8" translate="yes" xml:space="preserve">
          <source>QuickSSL Premium</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79b233343f98c250b95a5e41c73cf737505af9fc" translate="yes" xml:space="preserve">
          <source>Quiet mode. Show less output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="628ea85e9401da38e9d551779026c14495c8a21f" translate="yes" xml:space="preserve">
          <source>Quiet output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a880251ddc7258013998e37b5831fbc902e8a1e" translate="yes" xml:space="preserve">
          <source>Quorum state</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e50863db7ff1c92605072883d1b4c6da17719dd8" translate="yes" xml:space="preserve">
          <source>Quota information</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e25e4d5d4ac4c578f8be2f9101e7b2e9068face4" translate="yes" xml:space="preserve">
          <source>Quotas information</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4730753022e62db3135b00e0df88859d25187e8" translate="yes" xml:space="preserve">
          <source>REFERENCES</source>
          <target state="translated">REFERENCES</target>
        </trans-unit>
        <trans-unit id="ee8f454bfe6b988a8e65a9182e91ef0983dd0001" translate="yes" xml:space="preserve">
          <source>REG_BINARY</source>
          <target state="translated">REG_BINARY</target>
        </trans-unit>
        <trans-unit id="eb1883371f1791bd57ab097aa7fab48b5d0616f0" translate="yes" xml:space="preserve">
          <source>REG_BINARY: Binary data (str in Py2, bytes in Py3)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2675ee8dab234bdb9875e901caebea2e7e8c9672" translate="yes" xml:space="preserve">
          <source>REG_DWORD</source>
          <target state="translated">REG_DWORD</target>
        </trans-unit>
        <trans-unit id="eb7a05504d8091af0afe1d54018f6712962e5600" translate="yes" xml:space="preserve">
          <source>REG_DWORD: int</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e797f89cd2668bfe271108f2975e0316f7f7dd8" translate="yes" xml:space="preserve">
          <source>REG_EXPAND_SZ</source>
          <target state="translated">REG_EXPAND_SZ</target>
        </trans-unit>
        <trans-unit id="dae323418bef0a794c3e8434f4b1f53dd2d1357d" translate="yes" xml:space="preserve">
          <source>REG_EXPAND_SZ: str</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7b128f5ebdee92d91256bf1366ff6e67d684543" translate="yes" xml:space="preserve">
          <source>REG_MULTI_SZ</source>
          <target state="translated">REG_MULTI_SZ</target>
        </trans-unit>
        <trans-unit id="d0e664e6fd84c27a2897130b3174d2a95c322cc4" translate="yes" xml:space="preserve">
          <source>REG_MULTI_SZ: list of str</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da4e3532a53f26301bf299dac9a281f9d2ff102d" translate="yes" xml:space="preserve">
          <source>REG_QWORD</source>
          <target state="translated">REG_QWORD</target>
        </trans-unit>
        <trans-unit id="e9dd7fe9144fe33e487e53ea9b50e9415df4822a" translate="yes" xml:space="preserve">
          <source>REG_QWORD: int</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3786a74787f736e3b6f7c3e7e399d4f384e3b290" translate="yes" xml:space="preserve">
          <source>REG_SZ (Default)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d53ec79475a703c3bcaa29c8d232bc5b898ad78e" translate="yes" xml:space="preserve">
          <source>REG_SZ: str</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4053ce5405904c9bf5b1766589091850ae97f9cd" translate="yes" xml:space="preserve">
          <source>REMOTE_CONS_PRIV Enables the user to access the Remote Console functionality.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="093fb27fa4e9ef0463367f56925bd69833cb8133" translate="yes" xml:space="preserve">
          <source>RESET_SERVER_PRIV Enables the user to remotely manipulate the server power setting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d352d2c86344d820da29c11dfb7a1642dd39aee9" translate="yes" xml:space="preserve">
          <source>REST URI Reference</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe6657f37579136b2d4e114d6855b30e39fcaed1" translate="yes" xml:space="preserve">
          <source>REST auth can be defined like any other eauth module:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e596e3bfbc55823a7dfdae5467c406d7482c3c36" translate="yes" xml:space="preserve">
          <source>REST authentication</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="366ec5209c4e9819a651f01b703503f37344d91a" translate="yes" xml:space="preserve">
          <source>RPM Package builder system</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cdfce3be9b861456f0e6d6756ff0a703c9ed5af" translate="yes" xml:space="preserve">
          <source>RTHDVCPL</source>
          <target state="translated">RTHDVCPL</target>
        </trans-unit>
        <trans-unit id="59e2e9f825521f3ea5ca1761848aa2dcc2e132f6" translate="yes" xml:space="preserve">
          <source>Radek Rada &amp;lt;&lt;a href=&quot;mailto:radek.rada%40gmail.com&quot;&gt;radek.rada@gmail.com&lt;/a&gt;&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdec217147e86ecb64437119c4c497b1174a2afc" translate="yes" xml:space="preserve">
          <source>Raise an exception</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88b58368d8045e8c2242682af6ac2b1c0d6a15f5" translate="yes" xml:space="preserve">
          <source>Raise an exception. Built-in exceptions and those in &lt;code&gt;salt.exceptions&lt;/code&gt; can be raised by this test function. If no matching exception is found, then no exception will be raised and this function will return &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7e6db81b0e3a4208c607d47874c98ca7f34f630" translate="yes" xml:space="preserve">
          <source>Raise timeout exception if waiting for task result times out. Default: False</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc43fb1ba88bfd1438fa499a24d0037ab4b428c6" translate="yes" xml:space="preserve">
          <source>Raised when a global secondary index cannot be updated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87c3af3b19bdcc5f81dae27164d6912d1b295444" translate="yes" xml:space="preserve">
          <source>Raises IndexError if a user can't be looked up from all_slack_users</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50891abb55a95d22663e19648f01606605bffc53" translate="yes" xml:space="preserve">
          <source>Raises ValueError if a value doesn't work out, and TypeError if this isn't a message type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="016f655c96e9c9b6ed047efae98f1621832bc5da" translate="yes" xml:space="preserve">
          <source>Raises an error if &lt;code&gt;dedicated_backing_disk&lt;/code&gt; is &lt;code&gt;True&lt;/code&gt; and partitions already exist on the backing disk</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0eb5268f437200e3ca42ec2d178bdfb80e8e252" translate="yes" xml:space="preserve">
          <source>Raises:</source>
          <target state="translated">Raises:</target>
        </trans-unit>
        <trans-unit id="a73399cbaa9870d6287bc32db1a7286282b4ae3a" translate="yes" xml:space="preserve">
          <source>RapidSSL</source>
          <target state="translated">RapidSSL</target>
        </trans-unit>
        <trans-unit id="e1885291629089ca14f69a0c791b03a436f67a44" translate="yes" xml:space="preserve">
          <source>RapidSSL Wildcard</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="937d55d331ab20d3a2df6f87828b8d0f621732f7" translate="yes" xml:space="preserve">
          <source>Rather basic....</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fbd76324f45efb899c0c37ed01ab6588511161c" translate="yes" xml:space="preserve">
          <source>Raw output example (useful when the output is reused in other states/execution modules):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="283b3c95da2b3b86f3cf3b25c0d6102961c5766e" translate="yes" xml:space="preserve">
          <source>Raw text example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59f8cb8f41bc64b016a01dc1de8e30165cb2b94c" translate="yes" xml:space="preserve">
          <source>Raymond Kuiper &amp;lt;&lt;a href=&quot;mailto:qix%40the-wired.net&quot;&gt;qix@the-wired.net&lt;/a&gt;&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="255b9c2842bb9139771a3d7cd0b5cabeabc61de3" translate="yes" xml:space="preserve">
          <source>React by calling asynchronous runners</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f83c273113686f5f94f3f26c484fcfbcbd96e42d" translate="yes" xml:space="preserve">
          <source>Reactor example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d51d83b473341f7431452bfef2cdee0388f11c4d" translate="yes" xml:space="preserve">
          <source>Read Only (Read-only):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82f08cd830b6e8510200db0e44e841d83677a2e3" translate="yes" xml:space="preserve">
          <source>Read Only Editor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf6932e3895ded9238b1b8901c9323a0bcd4fb04" translate="yes" xml:space="preserve">
          <source>Read Pillar data from a mongodb collection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd95ead3b2c1a0bbecbda01b966cbe0c74a5c9a2" translate="yes" xml:space="preserve">
          <source>Read Traffic Server configuration variable definitions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96d06aef50477234b48fac958d4c9a7cf1cc2734" translate="yes" xml:space="preserve">
          <source>Read Traffic Server one or more metrics.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f4d5b7be1c74d425a9dd842e7c478e596f7df16" translate="yes" xml:space="preserve">
          <source>Read a CSV into Pillar</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7dff4a77bd5cfb6a44f283c46c4c14d2df25829" translate="yes" xml:space="preserve">
          <source>Read a file from the file system and return as a base64 encoded string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb1e1eccb4e188fea5fd3cb040c3dd539069190d" translate="yes" xml:space="preserve">
          <source>Read daemon-access password from the file (path)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5423e30915c4589b4acee21374c5e862b1a50205" translate="yes" xml:space="preserve">
          <source>Read datasource properties in the running jboss instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5415e984f6b28e7997b219f8aeca36f8af7e0c56" translate="yes" xml:space="preserve">
          <source>Read exclude patterns from the file (path)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a50a9ff00ab2f915ad86dbffade3913633bba5a" translate="yes" xml:space="preserve">
          <source>Read from SysFS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8007f475cd7579bfb8edf2052d58436189e76c09" translate="yes" xml:space="preserve">
          <source>Read in an Ansible inventory file or script</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="688901cdbf81a165ce22b147ab05aedcc1cfec95" translate="yes" xml:space="preserve">
          <source>Read in an LXC configuration file. By default returns a simple, unsorted dict, but can also return a more detailed structure including blank lines and comments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0187d8e614158597e494e8802aa86be8475a358a" translate="yes" xml:space="preserve">
          <source>Read in files from the file_root and save files to the file root</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99a1a265064dfcdb376536162ed3ac03e9b72648" translate="yes" xml:space="preserve">
          <source>Read in the dict structure generated by the salt key API methods and print the structure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e733f64a9baf5cd090caec5a7a97eff6886bdbb" translate="yes" xml:space="preserve">
          <source>Read in the generated libvirt keys</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="decec93f0bf9a55baa22157eb0d711ed97f6f575" translate="yes" xml:space="preserve">
          <source>Read in the roster from a flat file using the renderer system</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="350df0207249b752c5616e248fb8e170be9bda6e" translate="yes" xml:space="preserve">
          <source>Read jndi binding in the running jboss instance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc8bfd289eb706d0285bdde7c96c7cc209e205a3" translate="yes" xml:space="preserve">
          <source>Read lm-sensors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c537285668225601633c6fd5b0fa9c8689ab212d" translate="yes" xml:space="preserve">
          <source>Read out BCache SuperBlock</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec2400a8c4c87857cd65d939824101c984bf71e3" translate="yes" xml:space="preserve">
          <source>Read pillar data from Cobbler via its API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05da5d908f081d233e7f2fe216bb00a8e83a3573" translate="yes" xml:space="preserve">
          <source>Read pillar data from Confidant via its API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51acf1564c5bdf345286e7da6d754d71cfb6c40e" translate="yes" xml:space="preserve">
          <source>Read pillar data from Foreman via its API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="634673bfb336b0f64dd09a1b15910a829a652524" translate="yes" xml:space="preserve">
          <source>Read pillar data from HTTP response.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="763865f5ed58b0acb03e3ba09db42efcfec7aa2e" translate="yes" xml:space="preserve">
          <source>Read pillar data from a Redis backend</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afe87aae9e86c051959760e86a589b0ecc475051" translate="yes" xml:space="preserve">
          <source>Read the config file and return the config options for a given process</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0d0265980ed13497d2b73ba7f9d853a51ae01b1" translate="yes" xml:space="preserve">
          <source>Read the configuration commands from a file. The file can equally be a template that can be rendered using the engine of choice (see &lt;code&gt;template_engine&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6755ef1bdfad4a7ff2c20ef82c6df911e983b541" translate="yes" xml:space="preserve">
          <source>Read the contents of a text file, if the file is binary then</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6e6313e9a7919345be1d818d2413053cec292ec" translate="yes" xml:space="preserve">
          <source>Read the given attributes on the given file/directory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6bfc497e4677369715eac0dc0b705cc7eb346ea" translate="yes" xml:space="preserve">
          <source>Read the last btmp file and return information on the failed logins</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8a83cb52de5ec8582490bf4537c10aa7caf858b" translate="yes" xml:space="preserve">
          <source>Read the last wtmp file and return information on the logins</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90d8670ecf232fc47e98895a31c27bdfe2e76ff1" translate="yes" xml:space="preserve">
          <source>Read the log file and return match whole string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7f4d613570cd43ca78103b68d734b1acd73007b" translate="yes" xml:space="preserve">
          <source>Read the method signatures in the client documentation linked above, but hopefully an example will help illustrate the concept. This example causes Salt to execute two functions -- the &lt;a href=&quot;../../modules/all/salt.modules.test#salt.modules.test.arg&quot;&gt;&lt;code&gt;test.arg execution function&lt;/code&gt;&lt;/a&gt; using &lt;code&gt;LocalClient&lt;/code&gt; and the &lt;a href=&quot;../../runners/all/salt.runners.test#salt.runners.test.arg&quot;&gt;&lt;code&gt;test.arg
runner function&lt;/code&gt;&lt;/a&gt; using &lt;code&gt;RunnerClient&lt;/code&gt;; note the different structure for each command. The results for both are combined and returned as one response.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02798d57e4be74b70470536940bd07da856839ea" translate="yes" xml:space="preserve">
          <source>Read tops data from a mongodb collection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ce3c3497b8a657afcb80f751a6f67119d0847f2" translate="yes" xml:space="preserve">
          <source>Read tops data from a reclass database</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f7bb51871d47a95897144a7fa8cce6ec16dbdaf" translate="yes" xml:space="preserve">
          <source>Read-ahead buffer size</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67c0fe2454c5552fc6893db4250341db11fe4dcb" translate="yes" xml:space="preserve">
          <source>Read/Write multiple returners</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6918383eccee7014f788f84358b960fb12ee99a2" translate="yes" xml:space="preserve">
          <source>Reads a registry value entry or the default value for a key. To read the default value, don't pass &lt;code&gt;vname&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24aed6db8497fd469a68200074349411055787a1" translate="yes" xml:space="preserve">
          <source>Reads archive created by pkg backup -d and recreates the database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20c7c5522fc28c5817550dd82bc3272eb6a991c7" translate="yes" xml:space="preserve">
          <source>Ready</source>
          <target state="translated">Ready</target>
        </trans-unit>
        <trans-unit id="6ba54c69931701175a92567e5d6ec7640ade1f27" translate="yes" xml:space="preserve">
          <source>Reapplies the previous configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4208c94451e6e24ff4dc33ff5c88a4eae46a2d22" translate="yes" xml:space="preserve">
          <source>Reboot a VM.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83df5c152e46c09956290de8184e1f165559f08c" translate="yes" xml:space="preserve">
          <source>Reboot a VM. (vagrant reload)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd72c6316621b642a497459741a125216bf94199" translate="yes" xml:space="preserve">
          <source>Reboot a container.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2269fb51cdc5a1c70c6bd5ecd434d44fb871f055" translate="yes" xml:space="preserve">
          <source>Reboot a domain via ACPI request</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2110a1666a0ff84f768295c159cf5b3fe7c5e925" translate="yes" xml:space="preserve">
          <source>Reboot a droplet in DigitalOcean.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd6a49a8ed0c29cde143eff937e418d91ec032f1" translate="yes" xml:space="preserve">
          <source>Reboot a linode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb8b93beb5bce8ad3ede702b99405c2cf1fe144a" translate="yes" xml:space="preserve">
          <source>Reboot a machine by name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d11ffe9078f383ea790e0cc6afd3f145bcf13156" translate="yes" xml:space="preserve">
          <source>Reboot a node</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92eb754c3a2079ba22056da40597d0aeb3b2f9c6" translate="yes" xml:space="preserve">
          <source>Reboot a node in the cloud</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3b1a5822779ef0871ceae5a4b29240571df09d9" translate="yes" xml:space="preserve">
          <source>Reboot a node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79847a3312b051336cef9bb0f075a02048ecf47f" translate="yes" xml:space="preserve">
          <source>Reboot a running system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9daf3035017de5242d394675e69f82a880ebd11d" translate="yes" xml:space="preserve">
          <source>Reboot a saltify minion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0627c05298d565454683ac1d8b292e12be72fb9c" translate="yes" xml:space="preserve">
          <source>Reboot a server using the Dell DRAC</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51997acd4920a3d346831e3e9323aed75c744b54" translate="yes" xml:space="preserve">
          <source>Reboot a single VM</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74dd81fa97a96ae772ad9e97781f386d73052a2d" translate="yes" xml:space="preserve">
          <source>Reboot a vagrant minion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91e375f834b18586d4fb38ff7d8379ff4ebede09" translate="yes" xml:space="preserve">
          <source>Reboot a vm</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c9af2ee640c6737ddc0878317b4204d886ee3f6" translate="yes" xml:space="preserve">
          <source>Reboot an instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0ef5286c822943120032ef27aa54a59bc741f77" translate="yes" xml:space="preserve">
          <source>Reboot one or more vms</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfdedb5a8e136cfa154eee0a600725a02cec6d20" translate="yes" xml:space="preserve">
          <source>Reboot the computer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="482339a1408bf1ed77fdbe6b204aaa1d030992fe" translate="yes" xml:space="preserve">
          <source>Reboot the container by sending a SIGINT to its init process. Equivalent to running &lt;code&gt;machinectl reboot&lt;/code&gt; on the named container.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f2041076db0a7af7c9937a595127a502d05d32d" translate="yes" xml:space="preserve">
          <source>Reboot the specified host system in this VMware environment</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aaa117e9dabed7e4c5b28d8b57d2f8a3a7609bd2" translate="yes" xml:space="preserve">
          <source>Reboot the system</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f69f2f14951df99b6f531115622dc01bc37e8e1" translate="yes" xml:space="preserve">
          <source>Reboots VMs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="267165884334ffba6634b0275fe0b5e8ef0e47e0" translate="yes" xml:space="preserve">
          <source>Reboots a running, paused, or stopped VM (or VMs). (Runs &lt;code&gt;vagrant reload&lt;/code&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6133927dc14a8595ac7ca916cf53f9730524f452" translate="yes" xml:space="preserve">
          <source>Receive a vm from a directory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a09f09f27e99f9c68c46b8efb20be690f7ebb31" translate="yes" xml:space="preserve">
          <source>Receive information about a specific backend.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17cc506eca1511b2148164d83c844df946f862e4" translate="yes" xml:space="preserve">
          <source>Receive key(s) from keyserver and add them to keychain</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea7bfcc3928cade13d4eeb7b867b6b76adfbfa15" translate="yes" xml:space="preserve">
          <source>Receive one or more messages from a queue in a region</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be8ce2f44fb8eeec24a97808a3e3f39a1d50b491" translate="yes" xml:space="preserve">
          <source>Recognizes the special state function, &lt;code&gt;stateconf.set&lt;/code&gt;, that configures a default list of named arguments usable within the template context of the salt file. Example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dbd85ad82970d4645a381cb5cc9e135e8b19156" translate="yes" xml:space="preserve">
          <source>Recommend using Sealedbox because the one way encryption permits developers to encrypt data for source control but not decrypt. Sealedbox only has one key that is for both encryption and decryption.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0ab866839bfc6c400f688c2959f406785ad320d" translate="yes" xml:space="preserve">
          <source>Recommended Updates:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3bae95be75014a152a47a3c2546de11f11f3b79" translate="yes" xml:space="preserve">
          <source>Recompute sizes and checksums of installed packages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c32dccbfbf2e894b92b393e702ad83d86b4a3402" translate="yes" xml:space="preserve">
          <source>Reconfigure a container.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccc28aaeabdfd734763147b9feb519fb75526bba" translate="yes" xml:space="preserve">
          <source>Reconnect the NAPALM proxy when the connection is dropped by the network device. The connection can be forced to be restarted using the &lt;code&gt;force&lt;/code&gt; argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b118f8c45c16a0ad5ce66f9399d26d8d0280022" translate="yes" xml:space="preserve">
          <source>Records are separated by blank lines; the &lt;code&gt;data:&lt;/code&gt; and &lt;code&gt;tag:&lt;/code&gt; prefixes will need to be removed manually before attempting to unserialize the JSON.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1280e5d5110f7848167df6d473b3bfb737273c7" translate="yes" xml:space="preserve">
          <source>Recover all the given workers in the specific load balancer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90adbe524c54f8cd3a8704808323f5bb80ceda9c" translate="yes" xml:space="preserve">
          <source>Recover all the workers in the modjk load balancer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d0ace26ad2d6e11e6eba4b3ee7202926b45dec2" translate="yes" xml:space="preserve">
          <source>Recurse owner change to all relations in the database</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b9b83a858d00784951fd0c46c15c1037cfe8a21" translate="yes" xml:space="preserve">
          <source>Recurse through a set of dependencies reported by &lt;code&gt;ldd&lt;/code&gt;, to find associated dependencies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf376d10a63c32934d28bb7761d8c0a04510d30e" translate="yes" xml:space="preserve">
          <source>Recurse through a subdirectory on the master and copy said subdirectory over to the specified path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2636cbc558f9f2075d24d7c1cd9f924e4be5a990" translate="yes" xml:space="preserve">
          <source>Recurse through etcd and return all values. Returns None on failure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cffbe9982cdbedd40cee0494c2f3d4f172b3a83b" translate="yes" xml:space="preserve">
          <source>Recursive directory management can also be set via the &lt;code&gt;recurse&lt;/code&gt; function. Recursive directory management allows for a directory on the salt master to be recursively copied down to the minion. This is a great tool for deploying large code and configuration systems. A state using &lt;code&gt;recurse&lt;/code&gt; would look something like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1e7a85fcf58ee75d39f42cf46f7b2c56f5f1e5d" translate="yes" xml:space="preserve">
          <source>Recursive version of the default dict.update</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d496912c8a5aa226306357d2042086f482e774f4" translate="yes" xml:space="preserve">
          <source>Recursively apply SELinux policies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57c08e2f1530358fbb4169585013234c8c46cbd8" translate="yes" xml:space="preserve">
          <source>Recursively calculate disk usage of path and return it in bytes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c3b817d6acebeb96e6ff93055d133ef07f02abf" translate="yes" xml:space="preserve">
          <source>Recursively destroy and delete a virtual machine, pass True for dir's to also delete the directories containing the virtual machine disk images - USE WITH EXTREME CAUTION!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7ab7414313e4768217207bab439dc05b589d67a" translate="yes" xml:space="preserve">
          <source>Recursively display nested data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a288076396d6498c70d447f688caffb84734cffc" translate="yes" xml:space="preserve">
          <source>Recursively iterate down through data structures to determine output</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eed65e6854f451f71822fdbdb86c05ad2fb75817" translate="yes" xml:space="preserve">
          <source>Recursively remove a package and all dependencies which were installed with it, this will call a &lt;code&gt;pacman -Rsc&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90e55876cbf896226a30c674b53a2546a30f0b23" translate="yes" xml:space="preserve">
          <source>Recursively remove a package and all dependencies which were installed with it, this will call a &lt;code&gt;zypper -n remove -u&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cccd17363d212be5424f8fe32659a506761ad87" translate="yes" xml:space="preserve">
          <source>Recursively removes the worktree located at &lt;code&gt;cwd&lt;/code&gt;, returning &lt;code&gt;True&lt;/code&gt; if successful. This function will attempt to determine if &lt;code&gt;cwd&lt;/code&gt; is actually a worktree by invoking &lt;a href=&quot;#salt.modules.git.is_worktree&quot;&gt;&lt;code&gt;git.is_worktree&lt;/code&gt;&lt;/a&gt;. If the path does not correspond to a worktree, then an error will be raised and no action will be taken.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9f27b303ca19ecf4253feb4bea09662af17afcc" translate="yes" xml:space="preserve">
          <source>Recursively watch files in the directory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86b9710a04e2fa09a88ad151c2643a8e434dbf57" translate="yes" xml:space="preserve">
          <source>RedHat-based distros and derivatives using &lt;code&gt;service(8)&lt;/code&gt; and &lt;code&gt;chkconfig(8)&lt;/code&gt;. Supports both pure sysvinit and mixed sysvinit/upstart systems.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7e72b1517fddf7c6e1cc801168573df0bdcf6d5" translate="yes" xml:space="preserve">
          <source>RedHat-based distros and derivatives using &lt;code&gt;yum(8)&lt;/code&gt; or &lt;code&gt;dnf(8)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f18bbd1a07c2e06f2b2263666d2f842cae3561e" translate="yes" xml:space="preserve">
          <source>RedHat-based distros and derivatives using &lt;code&gt;yum&lt;/code&gt; or &lt;code&gt;dnf&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dcddd57af29b3cee661fe0cdbedcf921faae403" translate="yes" xml:space="preserve">
          <source>RedHat-based systems (RHEL, CentOS, Scientific, etc.) have been supported since version 2014.1.0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36c37dad2915d1769f2ae03509d0ffdf0419cbd7" translate="yes" xml:space="preserve">
          <source>Redeploy a virtual machine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24071b57a13027c01339027dcccb98218f052a8f" translate="yes" xml:space="preserve">
          <source>Redis</source>
          <target state="translated">Redis</target>
        </trans-unit>
        <trans-unit id="bca1a01eb9a500072609a230db0fbaf4e2c32c19" translate="yes" xml:space="preserve">
          <source>Redis (cluster mode disabled): T1 and T2 node types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd96814115ee3e1617430a3b5c6809f37a62436f" translate="yes" xml:space="preserve">
          <source>Redis (cluster mode enabled): T2 node types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="851d864453fab3b6a1992c363322d59b23682eb5" translate="yes" xml:space="preserve">
          <source>Redis Append-only files (AOF) functionality is not supported for T1 or T2 instances.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8ccff923396110ae04d894582db11794777740e" translate="yes" xml:space="preserve">
          <source>Redis Cluster Mode Options:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c646074ef60009d38f93391c14b82b6e4612a687" translate="yes" xml:space="preserve">
          <source>Redis SDB module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4f9d311c600fee9850738a2936e4c108a34dd59" translate="yes" xml:space="preserve">
          <source>Redis backup/restore is not supported for Redis (cluster mode disabled) T1 and T2 instances. Backup/restore is supported on Redis (cluster mode enabled) T2 instances.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22f74ce1fc41d98906dc8f940c4d325803a05b71" translate="yes" xml:space="preserve">
          <source>Redis connection password.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84707702981fb63c42a604797a2ebce87a397bcb" translate="yes" xml:space="preserve">
          <source>Redis key to manage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29fd36981ad3ce54cba93de9c231ff267c2874fd" translate="yes" xml:space="preserve">
          <source>Redis plugin for the Salt caching subsystem.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e014759b33b4c831020c26a2d1d4553bc2d05393" translate="yes" xml:space="preserve">
          <source>Redis versions earlier than 2.8.6.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49fe2f1275c31f73d22933eac267be00a0600175" translate="yes" xml:space="preserve">
          <source>Reencrypt encrypted data with a new master key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="076d78e6893bdfd4dcfecb2da26767870db47f53" translate="yes" xml:space="preserve">
          <source>Ref: &lt;a href=&quot;https://github.com/saltstack/salt/issues/43479&quot;&gt;Mattermost runner failing to retrieve config values due to unavailable config runner #43479&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2a23d3ef6589f0dec68acb5bb42a0bfd4bfc15b" translate="yes" xml:space="preserve">
          <source>Refer to &lt;a href=&quot;../../proxy/all/salt.proxy.junos#module-salt.proxy.junos&quot;&gt;&lt;code&gt;junos&lt;/code&gt;&lt;/a&gt; for information on connecting to junos proxy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db1c784524e1b54011a95823026161f7c8517fe0" translate="yes" xml:space="preserve">
          <source>Reference</source>
          <target state="translated">Reference</target>
        </trans-unit>
        <trans-unit id="c075d0ab6f7f486bc7273b25eb7600d0d22d649d" translate="yes" xml:space="preserve">
          <source>Reference: &lt;a href=&quot;http://www.rabbitmq.com/ha.html&quot;&gt;http://www.rabbitmq.com/ha.html&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d1e4e7d27b519b1da3d7266c9c87d7861741080" translate="yes" xml:space="preserve">
          <source>References:</source>
          <target state="translated">References:</target>
        </trans-unit>
        <trans-unit id="2d9aadcbb3200ac187df336a275926d4faa892fd" translate="yes" xml:space="preserve">
          <source>Reformat the returned data from joyent, determine public/private IPs and strip out fields if necessary to provide either full or brief content.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecc598241ca69414f9e01eba8c0c3b0a020cb969" translate="yes" xml:space="preserve">
          <source>Refresh &amp;amp; resolve dns names in trust rules CLI Example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="346e20af66215155c80ce6cba821ee354a80f995" translate="yes" xml:space="preserve">
          <source>Refresh PACKAGESITE contents</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bc1d435a01c70bd77bfa9812ed3126b3e3afd50" translate="yes" xml:space="preserve">
          <source>Refresh a defined libvirt storage pool.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="013391aed092b7e7399f8a805a6cfd4fcb14529d" translate="yes" xml:space="preserve">
          <source>Refresh a disabled repo using this option</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6898c41573abfac6e2c94e182f7cb672eb13f73b" translate="yes" xml:space="preserve">
          <source>Refresh just the specified repo</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df4ae2ce6e55d4ba02c65d5edf682d299f855eae" translate="yes" xml:space="preserve">
          <source>Refresh package metadata. Default &lt;code&gt;False&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27376c66fd5b08792aff17d80e812a3fff670272" translate="yes" xml:space="preserve">
          <source>Refresh the grains</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9670cd98ff70b39c24fad7a2ee4784ac35b8e944" translate="yes" xml:space="preserve">
          <source>Refresh the grains from the proxied device</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d48ccab701aa69cc5dd25cf7d99502b1db94b0e" translate="yes" xml:space="preserve">
          <source>Refresh the grains from the proxy device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22cd6476eafdc4caebdfaa4b725e474316e49dab" translate="yes" xml:space="preserve">
          <source>Refresh the grains.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a81a5e7d107827bb2dfa19c408f139f1905b683" translate="yes" xml:space="preserve">
          <source>Refresh the minion's grains without syncing custom grains modules from &lt;code&gt;salt://_grains&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="304a99b1befd680c47ec3707fd8e45d9186b1f7d" translate="yes" xml:space="preserve">
          <source>Refresh the pkg database within the specified chroot (ignored if &lt;code&gt;jail&lt;/code&gt; is specified)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8667b6675a227ab820d0eb6ae2b5518e9de9e94" translate="yes" xml:space="preserve">
          <source>Refresh the pkg database within the specified jail</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15ee91095c024324445ee6115968c18878d790f5" translate="yes" xml:space="preserve">
          <source>Refresh the pkg database within the specified root (ignored if &lt;code&gt;jail&lt;/code&gt; is specified)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ed8810abaf879efd5c2d92e00c5e14b854bed9d" translate="yes" xml:space="preserve">
          <source>Refresh the windows environment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1505116ee0039d2a58c034817ffc503b040027dd" translate="yes" xml:space="preserve">
          <source>Refresh the winrepo.p file of the repository (salt-run winrepo.genrepo)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a485c5f17df84fd11fa511199602b362f2b6c0c9" translate="yes" xml:space="preserve">
          <source>Regardless of which of the above map files is used, it can be accessed from any other sls file by calling this function. The following is a usage example in Jinja:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2226d7ecc10f60457328117be4a4ce2051ae5b8a" translate="yes" xml:space="preserve">
          <source>Regenerate storage account keys. Requires a key_type (&quot;primary&quot; or &quot;secondary&quot;) to be specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3056b4cad525a01e13d683a1d7511df1432f053d" translate="yes" xml:space="preserve">
          <source>Regex indicating the values to unset for the matching key(s)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ab72861c27612f2beb5e7e963710b218a8a41b2" translate="yes" xml:space="preserve">
          <source>Regex on which key names will be matched</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f217179940c6d89f5cb2c7002a58d91ab7286c1" translate="yes" xml:space="preserve">
          <source>Region</source>
          <target state="translated">Region</target>
        </trans-unit>
        <trans-unit id="0f5b266559f45e74feed6cdd5928b4f0c21f2731" translate="yes" xml:space="preserve">
          <source>Region endpoint to connect to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e179f3a33ec532cdb819a6cbf4f285cf392dd55" translate="yes" xml:space="preserve">
          <source>Region endpoint to connect to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="482ba1532a65ce34752dbe5780e85bf539f89634" translate="yes" xml:space="preserve">
          <source>Region to connect to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edf725179c06ad61b419b7fbfb4b10ed939dc49b" translate="yes" xml:space="preserve">
          <source>Region to connect to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42874e0af80ed00488229d1c78b640bd8381d506" translate="yes" xml:space="preserve">
          <source>Region to create the SQS queue in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35b83bfb096270ed876753819118193efa65b5f5" translate="yes" xml:space="preserve">
          <source>Region to create the queue</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87f59c3976c86c320105cac9ce7610cc204bfb32" translate="yes" xml:space="preserve">
          <source>Region to list SQS queues for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37b3b2e2a3cb4290f6c93afa90dbda038c78a0cf" translate="yes" xml:space="preserve">
          <source>Region to remove the queue from</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a76913071805b143db1d6e949a73f1d75920216" translate="yes" xml:space="preserve">
          <source>Region where SQS queues exists</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b341709945dd8e9f0cbdc100edae79a2bd399d05" translate="yes" xml:space="preserve">
          <source>Register a PSGet repository on the local machine</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17de24e9cbb416d87581dfd49b0160a599cae041" translate="yes" xml:space="preserve">
          <source>Register a VM</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d919772778e18e536775848553bfd2c251b3233c" translate="yes" xml:space="preserve">
          <source>Register a new user account</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="550c23c7d18afa2a25f1ebc42f8b688dcaa9fa4a" translate="yes" xml:space="preserve">
          <source>Register instances with an ELB. Instances is either a string instance id or a list of string instance id's.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57bb02ebcea1c996f92aeff47e85a08ce2f14454" translate="yes" xml:space="preserve">
          <source>Register targets to a target froup of an ALB. &lt;code&gt;targets&lt;/code&gt; is either a instance id string or a list of instance id's.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f2b3aae18cb67bb8e04e9e985a381c76648cf11" translate="yes" xml:space="preserve">
          <source>Registers a new node, service, or check</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b26d143fc08f5d2d287b30a564d3003fc8743544" translate="yes" xml:space="preserve">
          <source>Registers a virtual machine to the inventory with the given vmx file. Returns comments and change list</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a287f5e25ef2dfe0e6abbc23cd57966ae9dd7b4d" translate="yes" xml:space="preserve">
          <source>Registry permissions are specified using the &lt;code&gt;perms&lt;/code&gt; key. You can specify a single basic permission or a list of advanced perms. The following are valid perms:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8cde2b6eed483ff75e76b456e9a1154d29892d2" translate="yes" xml:space="preserve">
          <source>Regular expression or an exact case-sensitive fragment of the string. This option is only used when either the &lt;code&gt;ensure&lt;/code&gt; or &lt;code&gt;insert&lt;/code&gt; mode is defined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffa51737fea4eb118d42c0836b494c10dde17467" translate="yes" xml:space="preserve">
          <source>Regular expression pattern to use for determining end of output. If left blank will default to being based on router prompt.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74c14ac632754d7b115af8ad63e65fdbe95aa75f" translate="yes" xml:space="preserve">
          <source>Regular expression that matches exactly one key, used to delete a single value from a multivar. Ignored if &lt;code&gt;all&lt;/code&gt; is set to &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59b6f18eb4c24ac0c7cf2842fe4f73276c7264d0" translate="yes" xml:space="preserve">
          <source>Regular expression used to match the package name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e7f47e4cca2b6c4ae52fa44b9e22608f0278f2f" translate="yes" xml:space="preserve">
          <source>Regular expressions can be used as mount points.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04eb05e04a6f91ef753f9d30758315882178045f" translate="yes" xml:space="preserve">
          <source>Regular files can be enforced with the &lt;a href=&quot;#salt.states.file.managed&quot;&gt;&lt;code&gt;file.managed&lt;/code&gt;&lt;/a&gt; state. This state downloads files from the salt master and places them on the target system. Managed files can be rendered as a jinja, mako, or wempy template, adding a dynamic component to file management. An example of &lt;a href=&quot;#salt.states.file.managed&quot;&gt;&lt;code&gt;file.managed&lt;/code&gt;&lt;/a&gt; which makes use of the jinja templating system would look like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4796659273eded62db84ea49e5f40a7d9d2dff2d" translate="yes" xml:space="preserve">
          <source>Rehash the active configuration state from config file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a6415d418ba480047c68333adbafc4c6584f385" translate="yes" xml:space="preserve">
          <source>Reinstall a ruby implementation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ff1fe4b34c26898ca65c574464ff5f0c4d9134b" translate="yes" xml:space="preserve">
          <source>Reissues a purchased SSL certificate. Returns a dictionary of result values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcac2ecc4147b1258488422df98b55188a653057" translate="yes" xml:space="preserve">
          <source>Reject keys based on a dict of keys. Returns a dictionary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb339405d4ee6472c22bfc7ba0d9bb28a246bdf1" translate="yes" xml:space="preserve">
          <source>Reject keys based on a glob match. Returns a dictionary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="584f4fa6dd9e2bcf001f53ef8595a28edc39daf7" translate="yes" xml:space="preserve">
          <source>Related docs could be found in the &lt;a href=&quot;http://python-etcd.readthedocs.io/en/latest/&quot;&gt;python-etcd documentation&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d043e26f29eb90a50bd16872034dcefc02c31e6" translate="yes" xml:space="preserve">
          <source>Related docs could be found in the &lt;a href=&quot;http://python-mysql.readthedocs.io/en/latest/&quot;&gt;python-mysql documentation&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="020e60fb4017fea393acc3dfea2d3879ac08910f" translate="yes" xml:space="preserve">
          <source>Related docs could be found in the &lt;a href=&quot;https://python-consul.readthedocs.io/en/latest/#consul&quot;&gt;python-consul documentation&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d9466ae3d14fe9ff527d2b4e2839ea8e3fa4692" translate="yes" xml:space="preserve">
          <source>Release config lock previously held.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56e29db0a401d203934e186212a8712f2f4801d1" translate="yes" xml:space="preserve">
          <source>Release repository in artifactory to retrieve artifact from, for example: libs-releases</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57efb6544ef4e0d5a0a1a70808f8c2ebdbb12ba0" translate="yes" xml:space="preserve">
          <source>Releases a virtual network lease that was previously on hold.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff474d6b3e841ec91d6d693abc749513ac872a4c" translate="yes" xml:space="preserve">
          <source>Releases prior to 2016.11.0 must also include the hash type, like in the below example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63d6b482c996db2ef767185c72d742575aafba66" translate="yes" xml:space="preserve">
          <source>Reload CSF after changing the testing status. Default false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f05b0771f2588afad392098b2d8c9d5a7f6d6c69" translate="yes" xml:space="preserve">
          <source>Reload config and add/remove/update as necessary</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ace04d3ab963f0c3636b881c89bca48bd8902ae" translate="yes" xml:space="preserve">
          <source>Reload monit configuration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d83450fa5ccc5cedcc5fe37c5fd26a1bde19f88" translate="yes" xml:space="preserve">
          <source>Reload running jboss instance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="347269e1ebb1d7e828a1e4af093716879ab0e7ab" translate="yes" xml:space="preserve">
          <source>Reload saved scheduled jobs on the minion</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60554a48d6563d06b8665f7dabb88ed621ebf108" translate="yes" xml:space="preserve">
          <source>Reload service</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de606f73626fad6213b476f1940ee87651d9a552" translate="yes" xml:space="preserve">
          <source>Reload the csf service after applying this rule. Default false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45685f15cf472f27fc1a7d9ab91007809897d77d" translate="yes" xml:space="preserve">
          <source>Reload the daemon's configuration files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cde8dc4c5ddaa6d5b576d7076944f794a45bd853" translate="yes" xml:space="preserve">
          <source>Reload the facts dictionary from the device. Usually only needed if, the device configuration is changed by some other actor. This function will also refresh the facts stored in the salt grains.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="661b55f21bf2b225d607701e1ff7402d8d2e820e" translate="yes" xml:space="preserve">
          <source>Reload the firewall rules, which makes the permanent configuration the new runtime configuration without losing state information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="236b7580529e55dde6ac8968e873a3a066d00f57" translate="yes" xml:space="preserve">
          <source>Reload the named service</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a428218ac4b8dfa2d9e71fe72358cec549bbac3" translate="yes" xml:space="preserve">
          <source>Reload the named service.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03fd13a2c636f27e51ef92d0b0284f6da911df33" translate="yes" xml:space="preserve">
          <source>Reload the specified service with systemd</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ce0e46018a4dbe97165fee96fde4e02daf99550" translate="yes" xml:space="preserve">
          <source>Reload the syslog service so it will pick up any changes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20640c3bdbd2db42cfbe3dfe5b484d1669d3412e" translate="yes" xml:space="preserve">
          <source>Reload the webapp</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="575fc269810add9305b99140a71593ad678dddee" translate="yes" xml:space="preserve">
          <source>Reloads configuration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6017c9318a03596f5a36b36eca199a951cefb7ab" translate="yes" xml:space="preserve">
          <source>Reloads configuration of jboss server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="511fc2c5b4b5ab8ccaf8fda5fbea3683defefd92" translate="yes" xml:space="preserve">
          <source>Reloads syslog-ng.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7d6ef10013bb88d3b94dd0b15250beca551d8e6" translate="yes" xml:space="preserve">
          <source>Reloads syslog-ng. This function is intended to be used from states.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a025180bb151c1a1143bb3724c28d3728538d408" translate="yes" xml:space="preserve">
          <source>Reloads systemctl, an action needed whenever unit files are updated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00f1ebdfe3f6ceb978e6650f0aa02f5054292c77" translate="yes" xml:space="preserve">
          <source>Remark on the cibname variable used in the examples:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04fd367e1a14fd69906971d54dda7bea3e217915" translate="yes" xml:space="preserve">
          <source>Remember that the above applies only when not running in a &lt;code&gt;netmiko&lt;/code&gt; Proxy Minion. If you want to use the &lt;code&gt;&amp;lt;salt.proxy.netmiko_px&amp;gt;&lt;/code&gt;, please follow the documentation notes for a proper setup.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da8cb72b6b33eb40c289a30303a5dd48be986d28" translate="yes" xml:space="preserve">
          <source>Remember that the above applies only when not running in a &lt;code&gt;nxos_api&lt;/code&gt; Proxy Minion. If you want to use the &lt;a href=&quot;../../proxy/all/salt.proxy.nxos_api#module-salt.proxy.nxos_api&quot;&gt;&lt;code&gt;nxos_api Proxy&lt;/code&gt;&lt;/a&gt;, please follow the documentation notes for a proper setup.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cb9b592c10eed87ab3d237da2ff2265395de1a1" translate="yes" xml:space="preserve">
          <source>Remember that the above applies only when not running in a &lt;code&gt;pyeapi&lt;/code&gt; Proxy Minion. If you want to use the &lt;a href=&quot;../../proxy/all/salt.proxy.arista_pyeapi#module-salt.proxy.arista_pyeapi&quot;&gt;&lt;code&gt;pyeapi Proxy&lt;/code&gt;&lt;/a&gt;, please follow the documentation notes for a proper setup.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6e0f0c35a17afbb14bdd28934fa0882ddbd0875" translate="yes" xml:space="preserve">
          <source>Remember that the state cache is completely disabled by default, this execution only applies if cache=True is used in states</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8517e7802e81f98aba1696e6aa29c17aef9817f5" translate="yes" xml:space="preserve">
          <source>Remember to double-indent the options, due to &lt;a href=&quot;https://docs.saltstack.com/en/latest/topics/troubleshooting/yaml_idiosyncrasies.html#nested-dict-indentation&quot;&gt;how PyYAML works&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9761701697bb7e5b2d37b43ce167adbb73261667" translate="yes" xml:space="preserve">
          <source>Remote Port Description</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9bfa62cead59a0f540215bd7b482f69883eb455" translate="yes" xml:space="preserve">
          <source>Remote Port ID</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f88ce7bc6c4cce0dd5b5eedb4d3d007b0aa4ec5" translate="yes" xml:space="preserve">
          <source>Remote System Description</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad5dca327cf09f2b22b9a1c960f929e3c1aa0db3" translate="yes" xml:space="preserve">
          <source>Remote System Name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="620b113bca963ca420b7e5f6febc22bf7c5f1304" translate="yes" xml:space="preserve">
          <source>Remote URL to set</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a6f5f75060e8a475b298d227748cc878005e9e2" translate="yes" xml:space="preserve">
          <source>Remote branch to check out. If unspecified, the default branch (i.e. the one to the remote HEAD points) will be checked out.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4aef4d13736e51a5a6a0e4497852dd41b89c29e7" translate="yes" xml:space="preserve">
          <source>Remote package support using &lt;code&gt;pkg_add(1)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="787d4ac1ef74286bb35d44e6e86431741c6957ba" translate="yes" xml:space="preserve">
          <source>RemoteConnect: When a user connects via Remote Desktop</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="726bd0e71a29588b26fc7060c6188058afed0459" translate="yes" xml:space="preserve">
          <source>RemoteDisconnect: When a user disconnects via Remote Desktop</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e200a49b01842977d6016fd2d06071b61977cf3d" translate="yes" xml:space="preserve">
          <source>Remove GPG keys from the specified user's keychain</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc5df66bffdda74c49a539621f21f0bb8bc9c450" translate="yes" xml:space="preserve">
          <source>Remove Port Forwarding.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2184a605cd0ecdbdcbb90df29577dc4ee31ce08a" translate="yes" xml:space="preserve">
          <source>Remove SELinux module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2672e93a7d48c0b1959fe153e8bbf8f32a051198" translate="yes" xml:space="preserve">
          <source>Remove Swarm Service</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f65e1f433712045dcd65ecf731f32b4f2f8570e" translate="yes" xml:space="preserve">
          <source>Remove VirtualBox Guest Additions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5aee5c598970220dff4c5f6c03e51a8b306f9185" translate="yes" xml:space="preserve">
          <source>Remove a &quot;package&quot; on the REST server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74ea0ccca90c44b9a81a1dea7f654c996dfc175a" translate="yes" xml:space="preserve">
          <source>Remove a &quot;package&quot; on the ssh server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36660cae1ada83667d4ceca8d91a36ea43b6ea2d" translate="yes" xml:space="preserve">
          <source>Remove a Github repository.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d1c8bffc528c35a59290ee00a4d64b0eaab5067" translate="yes" xml:space="preserve">
          <source>Remove a Github user by name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf3a4153fda75260e9de6377f6ae5ee1612f61f3" translate="yes" xml:space="preserve">
          <source>Remove a MongoDB database</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="018ca2b6e20a3175388ca45b39241cbc6a1d6d11" translate="yes" xml:space="preserve">
          <source>Remove a MongoDB user</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25be1ecd7f35a31aa34e44358d0755b3b1d02d0a" translate="yes" xml:space="preserve">
          <source>Remove a Powershell DSC module from the system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b817bbb306e26001345ec2de9ea27fdabef334eb" translate="yes" xml:space="preserve">
          <source>Remove a bundle ID or command as being allowed to use assistive access.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f7c79a4363577d3e03266a8b98c25a8287b3a20" translate="yes" xml:space="preserve">
          <source>Remove a certificate from an IIS Web Binding.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1347ff99f7501d48eaa3a508fbde4676d195a67e" translate="yes" xml:space="preserve">
          <source>Remove a certificate from an IIS binding.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a668f1ee202ef6a33ee75ebf0fb5ab65bc1960b8" translate="yes" xml:space="preserve">
          <source>Remove a certificate in the given store</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17ba6db61d586c078e88a09603564de665a4e65a" translate="yes" xml:space="preserve">
          <source>Remove a cluster admin or a database user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b269825e6ecb873315ada7aa2dbebe2500abfdd8" translate="yes" xml:space="preserve">
          <source>Remove a cluster on a Postgres server. By default it doesn't try to stop the cluster.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11a6961d00f8efc488275e07a12245ef9b62115a" translate="yes" xml:space="preserve">
          <source>Remove a cron job for a specified user. If any of the day/time params are specified, the job will only be removed if the specified params match.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65cea2e3dd21e840ebc434e5a2d9637e9be3ccfe" translate="yes" xml:space="preserve">
          <source>Remove a database</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9477a152f82159773469b7d6935164cafff5be06" translate="yes" xml:space="preserve">
          <source>Remove a database role.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b82dc30131745db94c18d34859598d8a607c865" translate="yes" xml:space="preserve">
          <source>Remove a defined libvirt storage pool. The pool needs to be stopped before calling.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20760a02dc1a5093c678c6225bf3384346ff7524" translate="yes" xml:space="preserve">
          <source>Remove a defined virtual network. This does not stop the virtual network.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8113fdd95b6ff89bfe48f0552b3229e0407d3e5" translate="yes" xml:space="preserve">
          <source>Remove a defined vm, this does not purge the virtual machine image, and this only works if the vm is powered down</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3626855bf9d1e1686737b13180448c28132124e9" translate="yes" xml:space="preserve">
          <source>Remove a entry or entries from a chain</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4131a6e3fd342fad67da47ec4e17f2d42316a42e" translate="yes" xml:space="preserve">
          <source>Remove a gem source.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15151ee3527fc21029f40d80b3dca22cf6dbeb78" translate="yes" xml:space="preserve">
          <source>Remove a github team.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="191522efe65b49fc5caafcb98a75619ffc1d735a" translate="yes" xml:space="preserve">
          <source>Remove a given existing Logical Volume from a named existing volume group</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a98bbe9ab082b6915448251add1625a18a7f3ad" translate="yes" xml:space="preserve">
          <source>Remove a given existing logical volume from a named existing volume group</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac3a3d2819c81c382db4b95490e466fc2f20b973" translate="yes" xml:space="preserve">
          <source>Remove a grain completely from the grain system, this will remove the grain key and value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7916f8141446d65251cb885fcc5dd30a7e15cb42" translate="yes" xml:space="preserve">
          <source>Remove a host and/or volume from a hostgroup on a Pure Storage FlashArray.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="693e5d8305457f13ea20a244c0f42557a3eb565e" translate="yes" xml:space="preserve">
          <source>Remove a host entry from the hosts file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49ffe12611cb558eb3030b4a797c414a48a1f949" translate="yes" xml:space="preserve">
          <source>Remove a host from the /etc/hosts file. If doing so will leave a line containing only an IP address, then the line will be deleted. This function will leave comments and blank lines intact.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecba5764416194500ffd1ac74021bed1dd59c5c8" translate="yes" xml:space="preserve">
          <source>Remove a hostgroup, host or volume from a protection group on a Pure Storage FlashArray.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bda936f51c33d2922f7d8c10b758726a87252f56" translate="yes" xml:space="preserve">
          <source>Remove a incron job for a specified user. If any of the day/time params are specified, the job will only be removed if the specified params match.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01359c9e28a7f3d7f4e23d2c876f4e24087728e4" translate="yes" xml:space="preserve">
          <source>Remove a job from queue</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="459e484ab906af1dcf3f8e6ab52817eaac34f595" translate="yes" xml:space="preserve">
          <source>Remove a key/value pair from a section in an ini file. Returns the value of the removed key, or &lt;code&gt;None&lt;/code&gt; if nothing was removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="117fe0882b0bd870ad212f319a61e548c62079fa" translate="yes" xml:space="preserve">
          <source>Remove a license</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95eea83d57c8fe83935fe50d2b8686d28c840ae4" translate="yes" xml:space="preserve">
          <source>Remove a log from the logadm configuration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d25ea0bda3345393d2e0a891bfdc39d15e6be59c" translate="yes" xml:space="preserve">
          <source>Remove a mds</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="827cb4b65f258c7213d28c01a12177694e71ce91" translate="yes" xml:space="preserve">
          <source>Remove a network</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f896222c9f30eee9367bd107b577a9aeacdb3225" translate="yes" xml:space="preserve">
          <source>Remove a node from Vultr</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4288667b57126ca5140eed7237b6a68a8ba0f7c2" translate="yes" xml:space="preserve">
          <source>Remove a node from a swarm and the target needs to be a swarm manager</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3364bcd0044a5ad847a8239135c38e6e0f88692" translate="yes" xml:space="preserve">
          <source>Remove a package and all its dependencies which are not in use by other packages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60320f2a701046c0272deedba89e913c8799b224" translate="yes" xml:space="preserve">
          <source>Remove a package and extra configuration files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3289190c9979f42f5cb112ea8c1f37b74fc75f7" translate="yes" xml:space="preserve">
          <source>Remove a package from the database and system</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d36a3be757dce47c4bdccbfa0fff1ef15b9d2f1" translate="yes" xml:space="preserve">
          <source>Remove a pause from a jid, allowing it to continue</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83973dda5f21089b874b6b3abb6d63c50950fd6c" translate="yes" xml:space="preserve">
          <source>Remove a pause from a jid, allowing it to continue. If the state_id is not specified then the a general pause will be resumed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c002a4b35b313f80b5e21500bdfc79e6688b3ec" translate="yes" xml:space="preserve">
          <source>Remove a permission from a lambda function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50b7601f9f2caec03845916be4865fdf0555fba0" translate="yes" xml:space="preserve">
          <source>Remove a physical device being used as an LVM physical volume</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0256261ba72603bfda4cf3ea6848aa512d57e93e" translate="yes" xml:space="preserve">
          <source>Remove a port from the specified service.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f576e39855bad1acc158f9969f22d70d5feba45" translate="yes" xml:space="preserve">
          <source>Remove a protocol from the specified service.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d878d5bdea669a9d4f456917c7ac727ec98bf10f" translate="yes" xml:space="preserve">
          <source>Remove a repo key using &lt;code&gt;apt-key del&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54a3d69e74041044bbf338b753c7f155cdc6ba5d" translate="yes" xml:space="preserve">
          <source>Remove a resource</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db6bed0718149f77b08419c07a3a2c873cbea101" translate="yes" xml:space="preserve">
          <source>Remove a rgw</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b116a77c07565d805c749b0ef6554862f38e154" translate="yes" xml:space="preserve">
          <source>Remove a rule from an existing security group.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3e9f99886bd6b97363ceadf7d14fc816320a3b3" translate="yes" xml:space="preserve">
          <source>Remove a rule from the csf denied hosts See &lt;code&gt;_access_rule()&lt;/code&gt;. 1- Deny an IP: CLI Example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c23d88b67c88dbe8b70a2ca7ace313a47065247" translate="yes" xml:space="preserve">
          <source>Remove a section in an ini file. Returns the removed section as dictionary, or &lt;code&gt;None&lt;/code&gt; if nothing was removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07101869495dff2cbad7bc95356fca679f36a60f" translate="yes" xml:space="preserve">
          <source>Remove a server:port member from a servicegroup</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4c68dfd7e44366cfa24ef86cb872349b52ed282" translate="yes" xml:space="preserve">
          <source>Remove a service from zone. This option can be specified multiple times. If zone is omitted, default zone will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5533b53d2184746c1cc34e91d7ed5bc0271a6e5f" translate="yes" xml:space="preserve">
          <source>Remove a single package with pkg_delete</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
