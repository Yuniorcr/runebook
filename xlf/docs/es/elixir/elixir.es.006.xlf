<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="elixir">
    <body>
      <group id="elixir">
        <trans-unit id="f248a387f0f37e77ff666c2a85a59f7074c24d85" translate="yes" xml:space="preserve">
          <source>Currently &lt;code&gt;@deprecated&lt;/code&gt; only supports functions and macros. However you can use the &lt;code&gt;:deprecated&lt;/code&gt; key in the annotation metadata to annotate the docs of modules, types and callbacks too.</source>
          <target state="translated">Actualmente &lt;code&gt;@deprecated&lt;/code&gt; solo admite funciones y macros. Sin embargo, puede usar la clave &lt;code&gt;:deprecated&lt;/code&gt; en los metadatos de anotaci&amp;oacute;n para anotar los documentos de m&amp;oacute;dulos, tipos y devoluciones de llamada tambi&amp;eacute;n.</target>
        </trans-unit>
        <trans-unit id="51f90102aa9d37408ac2a331660c80b3de845ceb" translate="yes" xml:space="preserve">
          <source>Currently it defines types and the minimal implementation for a calendar behaviour in Elixir. The goal of the Calendar features in Elixir is to provide a base for interoperability instead of full-featured datetime API.</source>
          <target state="translated">Actualmente define los tipos y la implementación mínima para un comportamiento de calendario en el Elixir.El objetivo de las características del calendario en Elixir es proporcionar una base para la interoperabilidad en lugar de una API de fecha y hora con todas las características.</target>
        </trans-unit>
        <trans-unit id="58e947fb9b58beb32c0020272eaa3d95ced9ee44" translate="yes" xml:space="preserve">
          <source>Currently the only accepted PID is &lt;code&gt;self()&lt;/code&gt;.</source>
          <target state="translated">Actualmente, el &amp;uacute;nico PID aceptado es &lt;code&gt;self()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="63f26076c7ac35014e638bc9d9a7df511fa73b4d" translate="yes" xml:space="preserve">
          <source>Currently we have two tests tagged with &lt;code&gt;@tag :distributed&lt;/code&gt;. The &amp;ldquo;server interaction&amp;rdquo; test in &lt;code&gt;KVServerTest&lt;/code&gt;, and the &amp;ldquo;route requests across nodes&amp;rdquo; in &lt;code&gt;KV.RouterTest&lt;/code&gt;. Both tests are failing since they require a routing table, which is currently empty.</source>
          <target state="translated">Actualmente tenemos dos pruebas etiquetadas con &lt;code&gt;@tag :distributed&lt;/code&gt; . La prueba de &quot;interacci&amp;oacute;n del servidor&quot; en &lt;code&gt;KVServerTest&lt;/code&gt; y las &quot;solicitudes de ruta a trav&amp;eacute;s de nodos&quot; en &lt;code&gt;KV.RouterTest&lt;/code&gt; . Ambas pruebas fallan ya que requieren una tabla de enrutamiento, que actualmente est&amp;aacute; vac&amp;iacute;a.</target>
        </trans-unit>
        <trans-unit id="fb478f5ec7bb7da049009c9e3df88349c2f53b74" translate="yes" xml:space="preserve">
          <source>Currently, there is no official way to cross-compile a release from one target triple to another, due to the complexities involved in the process.</source>
          <target state="translated">En la actualidad,no existe una forma oficial de hacer una compilación cruzada de una liberación de un triple objetivo a otro,debido a las complejidades que conlleva el proceso.</target>
        </trans-unit>
        <trans-unit id="5bdaaebe2bbb603df00e4573b0900ccd99aa7d09" translate="yes" xml:space="preserve">
          <source>Custom Sigils</source>
          <target state="translated">Sigilos personalizados</target>
        </trans-unit>
        <trans-unit id="d797cab8a29cd6c10dc9372d1ab9213b989caf7f" translate="yes" xml:space="preserve">
          <source>Custom and overridden operators</source>
          <target state="translated">Operadores personalizados y anulados</target>
        </trans-unit>
        <trans-unit id="00146f5b748062fe67c9600ecfcdf444284e0bcf" translate="yes" xml:space="preserve">
          <source>Custom attributes</source>
          <target state="translated">Atributos personalizados</target>
        </trans-unit>
        <trans-unit id="e3fd71a31afaaf057b0fedc28ba72336f1780a64" translate="yes" xml:space="preserve">
          <source>Custom backends</source>
          <target state="translated">Backends personalizados</target>
        </trans-unit>
        <trans-unit id="abe70270d1f6e2920fe2d28c23289b5295fb962a" translate="yes" xml:space="preserve">
          <source>Custom configuration</source>
          <target state="translated">Configuración personalizada</target>
        </trans-unit>
        <trans-unit id="170bc5dc5f750c41d4def27ed27eed6bf3c468fb" translate="yes" xml:space="preserve">
          <source>Custom editors are supported by using the &lt;code&gt;__FILE__&lt;/code&gt; and &lt;code&gt;__LINE__&lt;/code&gt; notations, for example:</source>
          <target state="translated">Los editores personalizados son compatibles con el uso de las &lt;code&gt;__FILE__&lt;/code&gt; y &lt;code&gt;__LINE__&lt;/code&gt; , por ejemplo:</target>
        </trans-unit>
        <trans-unit id="642fb7c499e4524f98e2922e90ae2a2b071cfd52" translate="yes" xml:space="preserve">
          <source>Custom formatting</source>
          <target state="translated">Formato personalizado</target>
        </trans-unit>
        <trans-unit id="cfa121c3915c8b4ef6e8270f4ee6bf76b09bdab9" translate="yes" xml:space="preserve">
          <source>Custom patterns and guards expressions</source>
          <target state="translated">Patrones personalizados y expresiones de guardias</target>
        </trans-unit>
        <trans-unit id="8eb31d3e78f5111c059041eed039c75877655487" translate="yes" xml:space="preserve">
          <source>Custom sigils</source>
          <target state="translated">Sigilos personalizados</target>
        </trans-unit>
        <trans-unit id="39876974b7f78aa10c505abd0ccf4a46df612fca" translate="yes" xml:space="preserve">
          <source>Custom types defined through &lt;code&gt;@type&lt;/code&gt; are exported and are available outside the module they&amp;rsquo;re defined in:</source>
          <target state="translated">Los tipos personalizados definidos a trav&amp;eacute;s de &lt;code&gt;@type&lt;/code&gt; se exportan y est&amp;aacute;n disponibles fuera del m&amp;oacute;dulo en el que est&amp;aacute;n definidos:</target>
        </trans-unit>
        <trans-unit id="b447a4b2b4a5635d3f0dd6f81cbcc0d90e8e4a6d" translate="yes" xml:space="preserve">
          <source>Custom types defined through &lt;code&gt;@type&lt;/code&gt; are exported and available outside the module they&amp;rsquo;re defined in:</source>
          <target state="translated">Los tipos personalizados definidos a trav&amp;eacute;s de &lt;code&gt;@type&lt;/code&gt; se exportan y est&amp;aacute;n disponibles fuera del m&amp;oacute;dulo en el que est&amp;aacute;n definidos:</target>
        </trans-unit>
        <trans-unit id="d7f0ac9e007291a6ccc21d036f4711505ad9d0b1" translate="yes" xml:space="preserve">
          <source>Customization</source>
          <target state="translated">Customization</target>
        </trans-unit>
        <trans-unit id="a43ab69a51d511753170a537818f222e76faeaa7" translate="yes" xml:space="preserve">
          <source>Customization and configuration summary</source>
          <target state="translated">Resumen de personalización y configuración</target>
        </trans-unit>
        <trans-unit id="8b25d03b9dabe02b1fafe8ede605cce72a76c6c5" translate="yes" xml:space="preserve">
          <source>Customization per environment can be done by accessing &lt;a href=&quot;https://hexdocs.pm/mix/Mix.html#env/0&quot;&gt;the &lt;code&gt;Mix.env&lt;/code&gt; function&lt;/a&gt; in your &lt;code&gt;mix.exs&lt;/code&gt; file, which returns the current environment as an atom. That&amp;rsquo;s what we have used in the &lt;code&gt;:start_permanent&lt;/code&gt; options:</source>
          <target state="translated">La personalizaci&amp;oacute;n por entorno se puede realizar accediendo a &lt;a href=&quot;https://hexdocs.pm/mix/Mix.html#env/0&quot;&gt;la funci&amp;oacute;n &lt;code&gt;Mix.env&lt;/code&gt; &lt;/a&gt; en su archivo &lt;code&gt;mix.exs&lt;/code&gt; , que devuelve el entorno actual como un &amp;aacute;tomo. Eso es lo que hemos usado en las opciones: &lt;code&gt;:start_permanent&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="50c9e8d5fc98727b4bbc93cf5d64a68db647f04f" translate="yes" xml:space="preserve">
          <source>D</source>
          <target state="translated">D</target>
        </trans-unit>
        <trans-unit id="6908397a2d8b0784b2ec70f0d5374964dc182a77" translate="yes" xml:space="preserve">
          <source>Daemon mode (Unix-like)</source>
          <target state="translated">Modo demonio (similar a Unix)</target>
        </trans-unit>
        <trans-unit id="303c85db56e6f90f1fcaafbed47e91067f22fbe9" translate="yes" xml:space="preserve">
          <source>Data structures</source>
          <target state="translated">Estructuras de datos</target>
        </trans-unit>
        <trans-unit id="696ae3d17016ea7046f1ce357ae0b1f6103499a3" translate="yes" xml:space="preserve">
          <source>Data structures such as lists, tuples, and binaries are marked respectively by the delimiters &lt;code&gt;[...]&lt;/code&gt;, &lt;code&gt;{...}&lt;/code&gt;, and &lt;code&gt;&amp;lt;&amp;lt;...&amp;gt;&amp;gt;&lt;/code&gt;. Each element is separated by comma. A trailing comma is also allowed, such as in &lt;code&gt;[1, 2, 3,]&lt;/code&gt;.</source>
          <target state="translated">Las estructuras de datos como listas, tuplas y binarios est&amp;aacute;n marcadas respectivamente por los delimitadores &lt;code&gt;[...]&lt;/code&gt; , &lt;code&gt;{...}&lt;/code&gt; y &lt;code&gt;&amp;lt;&amp;lt;...&amp;gt;&amp;gt;&lt;/code&gt; . Cada elemento est&amp;aacute; separado por comas. Tambi&amp;eacute;n se permite una coma al final, como en &lt;code&gt;[1, 2, 3,]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b6be514c02654c4ded06230fc9559da237b0aa77" translate="yes" xml:space="preserve">
          <source>Data types</source>
          <target state="translated">Tipos de datos</target>
        </trans-unit>
        <trans-unit id="eb9a4bc1c0c153e4e4b042a79113b815b7e3021d" translate="yes" xml:space="preserve">
          <source>Date</source>
          <target state="translated">Date</target>
        </trans-unit>
        <trans-unit id="904c0db9491168bf7b0f96a8127a1e2e956e54ec" translate="yes" xml:space="preserve">
          <source>Date.Range</source>
          <target state="translated">Date.Range</target>
        </trans-unit>
        <trans-unit id="f1e5baf5ecc3589631088c40cbdd43061976ed8f" translate="yes" xml:space="preserve">
          <source>DateTime</source>
          <target state="translated">DateTime</target>
        </trans-unit>
        <trans-unit id="067497ecd979a531adeb039b5c57048e6702a8f2" translate="yes" xml:space="preserve">
          <source>Day of the month</source>
          <target state="translated">Día del mes</target>
        </trans-unit>
        <trans-unit id="a2dfedeffd1ead187411349e305b1fe627303452" translate="yes" xml:space="preserve">
          <source>Day of the week</source>
          <target state="translated">Día de la semana</target>
        </trans-unit>
        <trans-unit id="7c9881c0cb27c6197626d060644aab99eb05aa54" translate="yes" xml:space="preserve">
          <source>Day of the year</source>
          <target state="translated">Día del año</target>
        </trans-unit>
        <trans-unit id="d0c32ae37c8ec0c5b70c6fbada27ade3b4484def" translate="yes" xml:space="preserve">
          <source>Debug options supported by the &lt;code&gt;start*&lt;/code&gt; functions</source>
          <target state="translated">Opciones de depuraci&amp;oacute;n compatibles con las funciones de &lt;code&gt;start*&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3dea78e2b42ff6c53cdfe32a0caf66a693083f61" translate="yes" xml:space="preserve">
          <source>Debugger</source>
          <target state="translated">Debugger</target>
        </trans-unit>
        <trans-unit id="895b27c88016513d278a0ce3dc0663fae3829d58" translate="yes" xml:space="preserve">
          <source>Debugging</source>
          <target state="translated">Debugging</target>
        </trans-unit>
        <trans-unit id="4dbfbf2c1ca5c9cbf7ff86eebf9f1e60dfaae3c2" translate="yes" xml:space="preserve">
          <source>Debugging with the :sys module</source>
          <target state="translated">Depuración con el módulo :sys</target>
        </trans-unit>
        <trans-unit id="49bac63211bb6e767f6bd201454a7033e302753a" translate="yes" xml:space="preserve">
          <source>Decodes &lt;code&gt;string&lt;/code&gt; as &quot;x-www-form-urlencoded&quot;.</source>
          <target state="translated">Decodifica la &lt;code&gt;string&lt;/code&gt; como &quot;x-www-form-urlencoded&quot;.</target>
        </trans-unit>
        <trans-unit id="f7d7142bd19e1c0ea0198316fec06393f6cb0ea2" translate="yes" xml:space="preserve">
          <source>Decodes a base 16 encoded string into a binary string.</source>
          <target state="translated">Decodifica una cadena codificada en base 16 en una cadena binaria.</target>
        </trans-unit>
        <trans-unit id="fb034015ded81968d20fd5f7e210338ebd758879" translate="yes" xml:space="preserve">
          <source>Decodes a base 32 encoded string into a binary string.</source>
          <target state="translated">Decodifica una cadena codificada de base 32 en una cadena binaria.</target>
        </trans-unit>
        <trans-unit id="885c7e9658ad97e9a9af45bd4781416e206a6334" translate="yes" xml:space="preserve">
          <source>Decodes a base 32 encoded string with extended hexadecimal alphabet into a binary string.</source>
          <target state="translated">Decodifica una cadena codificada de base 32 con alfabeto hexadecimal extendido en una cadena binaria.</target>
        </trans-unit>
        <trans-unit id="4b608e75a46b84e1feb5de2f9f73f4f8523e9f1d" translate="yes" xml:space="preserve">
          <source>Decodes a base 64 encoded string into a binary string.</source>
          <target state="translated">Decodifica una cadena codificada en base 64 en una cadena binaria.</target>
        </trans-unit>
        <trans-unit id="b945eb1852da433ae69fcf285b6a56aed338e16f" translate="yes" xml:space="preserve">
          <source>Decodes a base 64 encoded string with URL and filename safe alphabet into a binary string.</source>
          <target state="translated">Decodifica una cadena codificada en base 64 con URL y alfabeto seguro del nombre de archivo en una cadena binaria.</target>
        </trans-unit>
        <trans-unit id="12cd61b38813ead53840f88994a5a092cca61e7f" translate="yes" xml:space="preserve">
          <source>Decodes a query string into a map.</source>
          <target state="translated">Decodifica una cadena de consulta en un mapa.</target>
        </trans-unit>
        <trans-unit id="624612278a208a23a0e8ccd36697aaa475bd3192" translate="yes" xml:space="preserve">
          <source>Decomposes a local or remote call into its remote part (when provided), function name and argument list.</source>
          <target state="translated">Descompone una llamada local o remota en su parte remota (cuando se proporciona),nombre de la función y lista de argumentos.</target>
        </trans-unit>
        <trans-unit id="7151035c3114809bda0193c2a85fa1a470935213" translate="yes" xml:space="preserve">
          <source>Default Unit</source>
          <target state="translated">Unidad por defecto</target>
        </trans-unit>
        <trans-unit id="6bcca2541d3f4eb99df509a0ef05a98d2f536b6d" translate="yes" xml:space="preserve">
          <source>Default arguments</source>
          <target state="translated">Argumentos por defecto</target>
        </trans-unit>
        <trans-unit id="6593ff7fb992a5e5072fa654c1b194d94010d120" translate="yes" xml:space="preserve">
          <source>Default background color.</source>
          <target state="translated">Color de fondo predeterminado.</target>
        </trans-unit>
        <trans-unit id="6e98c72a394abdbcd4b12051bb239d5b6259e9ce" translate="yes" xml:space="preserve">
          <source>Default text color.</source>
          <target state="translated">Color de texto por defecto.</target>
        </trans-unit>
        <trans-unit id="89487e7c33b83cf47b069ff9b1fec8587ba1c7a6" translate="yes" xml:space="preserve">
          <source>Default translation for Erlang log messages.</source>
          <target state="translated">Traducción por defecto para los mensajes de registro de Erlang.</target>
        </trans-unit>
        <trans-unit id="e19bd89011e61a7bb0e77dd718395ff863fa6b57" translate="yes" xml:space="preserve">
          <source>Default values and required keys</source>
          <target state="translated">Valores por defecto y claves requeridas</target>
        </trans-unit>
        <trans-unit id="0b6846959c6ecef6294ea2738ab118ae06eb0104" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;true&lt;/code&gt; for Elixir projects, &lt;code&gt;false&lt;/code&gt; for Erlang projects.</source>
          <target state="translated">El valor predeterminado es &lt;code&gt;true&lt;/code&gt; para los proyectos de Elixir, &lt;code&gt;false&lt;/code&gt; para los proyectos de Erlang.</target>
        </trans-unit>
        <trans-unit id="86bc280a68c01f58573355e9cc73f727e31ec7ae" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;true&lt;/code&gt; for Elixir projects, &lt;code&gt;false&lt;/code&gt; for Erlang projects. Note: if you set this to &lt;code&gt;false&lt;/code&gt; for an Elixir project, you will have to add paths to Elixir's &lt;code&gt;ebin&lt;/code&gt; directories to &lt;code&gt;ERL_LIBS&lt;/code&gt; environment variable when running the resulting escript, in order for the code loader to be able to find &lt;code&gt;:elixir&lt;/code&gt; application and its children applications (if they are used).</source>
          <target state="translated">El valor predeterminado es &lt;code&gt;true&lt;/code&gt; para los proyectos de Elixir, &lt;code&gt;false&lt;/code&gt; para los proyectos de Erlang. Nota: si establece esto en &lt;code&gt;false&lt;/code&gt; para un proyecto Elixir, tendr&amp;aacute; que agregar rutas a los directorios &lt;code&gt;ebin&lt;/code&gt; de Elixir a la variable de entorno &lt;code&gt;ERL_LIBS&lt;/code&gt; cuando ejecute el escript resultante, para que el cargador de c&amp;oacute;digo pueda encontrar &lt;code&gt;:elixir&lt;/code&gt; aplicaci&amp;oacute;n elixir y sus hijos aplicaciones (si se utilizan).</target>
        </trans-unit>
        <trans-unit id="9d8d69c2362401ce4e3ef9f4dba08bffc1bb4866" translate="yes" xml:space="preserve">
          <source>Define a function from a string (&lt;a href=&quot;#function_from_string/5&quot;&gt;&lt;code&gt;function_from_string/5&lt;/code&gt;&lt;/a&gt;) or a file (&lt;a href=&quot;#function_from_file/5&quot;&gt;&lt;code&gt;function_from_file/5&lt;/code&gt;&lt;/a&gt;). This allows you to embed the template as a function inside a module which will then be compiled. This is the preferred API if you have access to the template at compilation time.</source>
          <target state="translated">Defina una funci&amp;oacute;n a partir de una cadena ( &lt;a href=&quot;#function_from_string/5&quot;&gt; &lt;code&gt;function_from_string/5&lt;/code&gt; &lt;/a&gt; ) o un archivo ( &lt;a href=&quot;#function_from_file/5&quot;&gt; &lt;code&gt;function_from_file/5&lt;/code&gt; &lt;/a&gt; ). Esto le permite incrustar la plantilla como una funci&amp;oacute;n dentro de un m&amp;oacute;dulo que luego se compilar&amp;aacute;. Esta es la API preferida si tiene acceso a la plantilla en el momento de la compilaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="d3da7d067c0e2af23683cd3618963a0c016ef27c" translate="yes" xml:space="preserve">
          <source>Define a function from a string (&lt;code&gt;function_from_string&lt;/code&gt;) or a file (&lt;code&gt;function_from_file&lt;/code&gt;). This allows you to embed the template as a function inside a module which will then be compiled. This is the preferred API if you have access to the template at compilation time.</source>
          <target state="translated">Defina una funci&amp;oacute;n a partir de una cadena ( &lt;code&gt;function_from_string&lt;/code&gt; ) o un archivo ( &lt;code&gt;function_from_file&lt;/code&gt; ). Esto le permite incrustar la plantilla como una funci&amp;oacute;n dentro de un m&amp;oacute;dulo que luego se compilar&amp;aacute;. Esta es la API preferida si tiene acceso a la plantilla en el momento de la compilaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="02454c3ef87373b5da454ba33a54d81ec93d84e1" translate="yes" xml:space="preserve">
          <source>Define the &lt;code&gt;@shortdoc&lt;/code&gt; attribute if you wish to make the task publicly visible on &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Help.html&quot;&gt;&lt;code&gt;mix help&lt;/code&gt;&lt;/a&gt;. Omit this attribute if you do not want your task to be listed via &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Help.html&quot;&gt;&lt;code&gt;mix help&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Defina el atributo &lt;code&gt;@shortdoc&lt;/code&gt; si desea que la tarea sea visible p&amp;uacute;blicamente en la &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Help.html&quot;&gt; &lt;code&gt;mix help&lt;/code&gt; &lt;/a&gt; . Omita este atributo si no desea que su tarea se incluya en la &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Help.html&quot;&gt; &lt;code&gt;mix help&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7af570fa4ced5be1c1e832e70770e29cb3378f42" translate="yes" xml:space="preserve">
          <source>Define the function explicitly (v1.0)</source>
          <target state="translated">Definir la función explícitamente (v1.0)</target>
        </trans-unit>
        <trans-unit id="bc125b89387e69b38c0b71432e6451758cd10e9b" translate="yes" xml:space="preserve">
          <source>Define the rollover moment for the given calendar.</source>
          <target state="translated">Definir el momento de vuelco para el calendario dado.</target>
        </trans-unit>
        <trans-unit id="cdc8ce38051bdb795b598be018ffa7c0e1241cd3" translate="yes" xml:space="preserve">
          <source>Defined as</source>
          <target state="translated">Definido como</target>
        </trans-unit>
        <trans-unit id="0e6d691613c83b20a4bdec6dda26151ba97d0294" translate="yes" xml:space="preserve">
          <source>Defines &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Mix.Shell&lt;/code&gt;&lt;/a&gt; contract.</source>
          <target state="translated">Define el contrato &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;Mix.Shell&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2c159947b8552c14519d220c3a6ddfaa0e00eeec" translate="yes" xml:space="preserve">
          <source>Defines ExUnit callbacks.</source>
          <target state="translated">Define las devoluciones de llamada de la Unidad de Salida.</target>
        </trans-unit>
        <trans-unit id="3fba28715c151409c38236ee7000eb4ed16c82f1" translate="yes" xml:space="preserve">
          <source>Defines a &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;File.Stream&lt;/code&gt;&lt;/a&gt; struct returned by &lt;a href=&quot;file#stream!/3&quot;&gt;&lt;code&gt;File.stream!/3&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Define una estructura &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;File.Stream&lt;/code&gt; &lt;/a&gt; devuelta por &lt;a href=&quot;file#stream!/3&quot;&gt; &lt;code&gt;File.stream!/3&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="83a9409d00bd2dad95a1afabb5663ee3e1f46569" translate="yes" xml:space="preserve">
          <source>Defines a &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;File.Stream&lt;/code&gt;&lt;/a&gt; struct returned by &lt;a href=&quot;https://hexdocs.pm/elixir/File.html#stream!/3&quot;&gt;&lt;code&gt;File.stream!/3&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Define una estructura &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;File.Stream&lt;/code&gt; &lt;/a&gt; devuelta por &lt;a href=&quot;https://hexdocs.pm/elixir/File.html#stream!/3&quot;&gt; &lt;code&gt;File.stream!/3&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="718b6b621786a1acc4c26d42dbc485e26faf7eec" translate="yes" xml:space="preserve">
          <source>Defines a callback that runs once the test exits.</source>
          <target state="translated">Define una llamada que se ejecuta una vez que la prueba sale.</target>
        </trans-unit>
        <trans-unit id="9200a3742bfb9e88c562c9f6f3ed2f69e18c6f67" translate="yes" xml:space="preserve">
          <source>Defines a callback to be run before all tests in a case.</source>
          <target state="translated">Define una llamada para ser ejecutada antes de todas las pruebas en un caso.</target>
        </trans-unit>
        <trans-unit id="4b6166591f75c5a4bf0202583ee95cba035668e8" translate="yes" xml:space="preserve">
          <source>Defines a callback to be run before each test in a case.</source>
          <target state="translated">Define una llamada para ser ejecutada antes de cada prueba en un caso.</target>
        </trans-unit>
        <trans-unit id="d5bc2aab7b6f9616afc524a405cb7757608452d9" translate="yes" xml:space="preserve">
          <source>Defines a function callback according to the given type specification.</source>
          <target state="translated">Define una llamada de función según la especificación de tipo dada.</target>
        </trans-unit>
        <trans-unit id="c5db38a50b427e41d0ad25365053a42c56f8a1f7" translate="yes" xml:space="preserve">
          <source>Defines a function that delegates to another module.</source>
          <target state="translated">Define una función que delega en otro módulo.</target>
        </trans-unit>
        <trans-unit id="307e106c43982d5b12630cb72b848406b819c6c6" translate="yes" xml:space="preserve">
          <source>Defines a function with the given name and body.</source>
          <target state="translated">Define una función con el nombre y el cuerpo.</target>
        </trans-unit>
        <trans-unit id="f063e0d1325de98da63498e5fe376536a4c88d2c" translate="yes" xml:space="preserve">
          <source>Defines a macro callback according to the given type specification.</source>
          <target state="translated">Define una macrollamada de acuerdo con la especificación de tipo dada.</target>
        </trans-unit>
        <trans-unit id="d1bdce6fb82524ea6dca239a6d1b4282ce120736" translate="yes" xml:space="preserve">
          <source>Defines a macro with the given name and body.</source>
          <target state="translated">Define una macro con el nombre y el cuerpo.</target>
        </trans-unit>
        <trans-unit id="45436ad823527d91893ee57c61d5208fd54f8f28" translate="yes" xml:space="preserve">
          <source>Defines a module given by name with the given contents.</source>
          <target state="translated">Define un módulo dado por el nombre con el contenido dado.</target>
        </trans-unit>
        <trans-unit id="2b7b7c71d4c9f86dc9189095ea6eb365a7951119" translate="yes" xml:space="preserve">
          <source>Defines a module template to be used throughout your test suite.</source>
          <target state="translated">Define una plantilla de módulos que se utilizará en todo el conjunto de pruebas.</target>
        </trans-unit>
        <trans-unit id="cf550b43951705ff60d293e8451b26e72a1b3d68" translate="yes" xml:space="preserve">
          <source>Defines a new bitstring.</source>
          <target state="translated">Define una nueva cadena de bits.</target>
        </trans-unit>
        <trans-unit id="5e5448d0355663eca910a26c7f674b96bdfb1318" translate="yes" xml:space="preserve">
          <source>Defines a not implemented test with a string.</source>
          <target state="translated">Define una prueba no implementada con una cuerda.</target>
        </trans-unit>
        <trans-unit id="3c2d3289caf113cf07d04f07d984ecc30b13bea4" translate="yes" xml:space="preserve">
          <source>Defines a private function with the given name and body.</source>
          <target state="translated">Define una función privada con el nombre y el cuerpo.</target>
        </trans-unit>
        <trans-unit id="08a09270f00cde41495279c24131c417ef5be1db" translate="yes" xml:space="preserve">
          <source>Defines a private macro with the given name and body.</source>
          <target state="translated">Define una macro privada con el nombre y el cuerpo.</target>
        </trans-unit>
        <trans-unit id="234e236e77f17928fa5de859398ddc5049a5ff60" translate="yes" xml:space="preserve">
          <source>Defines a protocol.</source>
          <target state="translated">Define un protocolo.</target>
        </trans-unit>
        <trans-unit id="49de89ada1df4216656fd082e602510e9a3bfba6" translate="yes" xml:space="preserve">
          <source>Defines a public function with the given name and body.</source>
          <target state="translated">Define una función pública con el nombre y el cuerpo.</target>
        </trans-unit>
        <trans-unit id="eb0c62dc473198ec220624054b59c8e5facbee00" translate="yes" xml:space="preserve">
          <source>Defines a public macro with the given name and body.</source>
          <target state="translated">Define una macro pública con el nombre y el cuerpo.</target>
        </trans-unit>
        <trans-unit id="cf0422852f7761d300210619550ed122f7749dee" translate="yes" xml:space="preserve">
          <source>Defines a range.</source>
          <target state="translated">Define un rango.</target>
        </trans-unit>
        <trans-unit id="84d0bf0e5d21a052c34ad1cf8cc4fd2c0b2d922d" translate="yes" xml:space="preserve">
          <source>Defines a remote call, a call to an anonymous function, or an alias.</source>
          <target state="translated">Define una llamada remota,una llamada a una función anónima o un alias.</target>
        </trans-unit>
        <trans-unit id="148ce01689924171178db559eb8519855c18cbf6" translate="yes" xml:space="preserve">
          <source>Defines a set of macros to create, access, and pattern match on a record.</source>
          <target state="translated">Define un conjunto de macros para crear,acceder y hacer coincidir los patrones en un registro.</target>
        </trans-unit>
        <trans-unit id="d43aa789386d3da190d548740ece58b49c1b5c28" translate="yes" xml:space="preserve">
          <source>Defines a struct.</source>
          <target state="translated">Define una estructura.</target>
        </trans-unit>
        <trans-unit id="e8fc9a0e945bdfdd9fe422d72e6867459e1dd52d" translate="yes" xml:space="preserve">
          <source>Defines a test with &lt;code&gt;message&lt;/code&gt;.</source>
          <target state="translated">Define una prueba con &lt;code&gt;message&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6ff008b3bfc5f520079685bb6518c7f8c263c332" translate="yes" xml:space="preserve">
          <source>Defines a test with a string.</source>
          <target state="translated">Define una prueba con una cuerda.</target>
        </trans-unit>
        <trans-unit id="e440b3cbec6e05424773317aba5a8cdb773dabba" translate="yes" xml:space="preserve">
          <source>Defines an &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;IO.Stream&lt;/code&gt;&lt;/a&gt; struct returned by &lt;a href=&quot;https://hexdocs.pm/elixir/IO.html#stream/2&quot;&gt;&lt;code&gt;IO.stream/2&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://hexdocs.pm/elixir/IO.html#binstream/2&quot;&gt;&lt;code&gt;IO.binstream/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Define una estructura &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;IO.Stream&lt;/code&gt; &lt;/a&gt; devuelta por &lt;a href=&quot;https://hexdocs.pm/elixir/IO.html#stream/2&quot;&gt; &lt;code&gt;IO.stream/2&lt;/code&gt; &lt;/a&gt; y &lt;a href=&quot;https://hexdocs.pm/elixir/IO.html#binstream/2&quot;&gt; &lt;code&gt;IO.binstream/2&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="81a4f177d77d4b3501935507c322bb13c914958e" translate="yes" xml:space="preserve">
          <source>Defines an &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;IO.Stream&lt;/code&gt;&lt;/a&gt; struct returned by &lt;a href=&quot;io#stream/2&quot;&gt;&lt;code&gt;IO.stream/2&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;io#binstream/2&quot;&gt;&lt;code&gt;IO.binstream/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Define una estructura &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;IO.Stream&lt;/code&gt; &lt;/a&gt; devuelta por &lt;a href=&quot;io#stream/2&quot;&gt; &lt;code&gt;IO.stream/2&lt;/code&gt; &lt;/a&gt; y &lt;a href=&quot;io#binstream/2&quot;&gt; &lt;code&gt;IO.binstream/2&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="61d9e7c667e3e371baebf26eb4a1e174baee751d" translate="yes" xml:space="preserve">
          <source>Defines an anonymous function.</source>
          <target state="translated">Define una función anónima.</target>
        </trans-unit>
        <trans-unit id="1f336908a8420d524aec43e1dfa0a8c9f56be6ac" translate="yes" xml:space="preserve">
          <source>Defines an exception.</source>
          <target state="translated">Define una excepción.</target>
        </trans-unit>
        <trans-unit id="47c4eab1a12c9a4e9e5bfc15095c4f5f1e7f8420" translate="yes" xml:space="preserve">
          <source>Defines an implementation for the given protocol.</source>
          <target state="translated">Define una implementación para el protocolo dado.</target>
        </trans-unit>
        <trans-unit id="7574e6578cdcbcf5986b0221d662d60206450586" translate="yes" xml:space="preserve">
          <source>Defines and manipulates Mix projects.</source>
          <target state="translated">Define y manipula los proyectos de Mix.</target>
        </trans-unit>
        <trans-unit id="c87324807b8cf7ca458804ea8ef4c07d69ba7fe6" translate="yes" xml:space="preserve">
          <source>Defines options for module compilation. This is used to configure both Elixir and Erlang compilers, as any other compilation pass added by external tools. For example:</source>
          <target state="translated">Define las opciones para la compilación de módulos.Se utiliza para configurar tanto los compiladores de Elixir como los de Erlang,como cualquier otro pase de compilación añadido por herramientas externas.Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="51d68b5790fad1de6d84cef24485698c5aa44718" translate="yes" xml:space="preserve">
          <source>Defines the given &lt;code&gt;module&lt;/code&gt; as a supervisor which will be started with the given arguments.</source>
          <target state="translated">Define el &lt;code&gt;module&lt;/code&gt; dado como supervisor que se iniciar&amp;aacute; con los argumentos dados.</target>
        </trans-unit>
        <trans-unit id="a74b181531a071dccf103975ef9b5f457594135a" translate="yes" xml:space="preserve">
          <source>Defines the given &lt;code&gt;module&lt;/code&gt; as a worker which will be started with the given arguments.</source>
          <target state="translated">Define el &lt;code&gt;module&lt;/code&gt; dado como un trabajador que se iniciar&amp;aacute; con los argumentos dados.</target>
        </trans-unit>
        <trans-unit id="5ba739f06f65411df500be4fe361a087cd34108a" translate="yes" xml:space="preserve">
          <source>Defines the options used by the &lt;a href=&quot;https://hexdocs.pm/elixir/Inspect.html&quot;&gt;&lt;code&gt;Inspect&lt;/code&gt;&lt;/a&gt; protocol.</source>
          <target state="translated">Define las opciones que utiliza el protocolo de &lt;a href=&quot;https://hexdocs.pm/elixir/Inspect.html&quot;&gt; &lt;code&gt;Inspect&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1e7e7a56a0498c33eb4666ce267e88fdd0443785" translate="yes" xml:space="preserve">
          <source>Defines the options used by the &lt;a href=&quot;inspect&quot;&gt;&lt;code&gt;Inspect&lt;/code&gt;&lt;/a&gt; protocol.</source>
          <target state="translated">Define las opciones utilizadas por el protocolo de &lt;a href=&quot;inspect&quot;&gt; &lt;code&gt;Inspect&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="706e656786be6150857ba9d00e3f4736e1b09e1e" translate="yes" xml:space="preserve">
          <source>Defines the release structure and convenience for assembling releases.</source>
          <target state="translated">Define la estructura de la liberación y la conveniencia de ensamblar las liberaciones.</target>
        </trans-unit>
        <trans-unit id="f752321778df74391c3378581723efb4dca5e78b" translate="yes" xml:space="preserve">
          <source>Defines warnings to request or suppress when using a version of &lt;code&gt;:dialyzer&lt;/code&gt; that supports module attributes.</source>
          <target state="translated">Define advertencias para solicitar o suprimir cuando se usa una versi&amp;oacute;n de &lt;code&gt;:dialyzer&lt;/code&gt; que admita atributos de m&amp;oacute;dulo.</target>
        </trans-unit>
        <trans-unit id="99cdfc3cbea74f1f4372e3c3f255ee42a2f77809" translate="yes" xml:space="preserve">
          <source>Defining a protocol automatically defines a type named &lt;code&gt;t&lt;/code&gt;, which can be used as follows:</source>
          <target state="translated">La definici&amp;oacute;n de un protocolo define autom&amp;aacute;ticamente un tipo llamado &lt;code&gt;t&lt;/code&gt; , que se puede utilizar de la siguiente manera:</target>
        </trans-unit>
        <trans-unit id="eed610b2a524f1fea8a5a11a6b90ab2b660a40c7" translate="yes" xml:space="preserve">
          <source>Defining a specification</source>
          <target state="translated">Definir una especificación</target>
        </trans-unit>
        <trans-unit id="375bfa92ccfe2bd509e0a5a5c9ecb19ed5761bbc" translate="yes" xml:space="preserve">
          <source>Defining behaviours</source>
          <target state="translated">Definir los comportamientos</target>
        </trans-unit>
        <trans-unit id="1ea27e7345dd55520e1c3fd955a1961190ab35d0" translate="yes" xml:space="preserve">
          <source>Defining custom guard expressions</source>
          <target state="translated">Definiendo expresiones de guardia personalizadas</target>
        </trans-unit>
        <trans-unit id="67ee31ce55d3432708e003e7896d5c65897de368" translate="yes" xml:space="preserve">
          <source>Defining custom operators</source>
          <target state="translated">Definición de los operadores personalizados</target>
        </trans-unit>
        <trans-unit id="88f1538130a6f0b0a36142a4e1e014b6b0b27ac0" translate="yes" xml:space="preserve">
          <source>Defining custom types</source>
          <target state="translated">Definición de tipos personalizados</target>
        </trans-unit>
        <trans-unit id="fbb6738813740f5989865f0caccc2aedd14ecd4c" translate="yes" xml:space="preserve">
          <source>Defining custom types can help communicate the intention of your code and increase its readability. Custom types can be defined within modules via the &lt;code&gt;@type&lt;/code&gt; attribute.</source>
          <target state="translated">La definici&amp;oacute;n de tipos personalizados puede ayudar a comunicar la intenci&amp;oacute;n de su c&amp;oacute;digo y aumentar su legibilidad. Los tipos personalizados se pueden definir dentro de los m&amp;oacute;dulos mediante el atributo &lt;code&gt;@type&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="da279c1a631ba36a0429ee2b6ef866ee7c040663" translate="yes" xml:space="preserve">
          <source>Defining extracted records with anonymous functions in the values</source>
          <target state="translated">Definir los registros extraídos con funciones anónimas en los valores</target>
        </trans-unit>
        <trans-unit id="d271da3ed06fd6bd866bb6e79184abd537c3512e" translate="yes" xml:space="preserve">
          <source>Defining function specs this way works, but it quickly becomes annoying since we&amp;rsquo;re repeating the type &lt;code&gt;{number, String.t}&lt;/code&gt; over and over. We can use the &lt;code&gt;@type&lt;/code&gt; directive in order to declare our own custom type.</source>
          <target state="translated">Definir especificaciones de funci&amp;oacute;n de esta manera funciona, pero r&amp;aacute;pidamente se vuelve molesto ya que estamos repitiendo el tipo &lt;code&gt;{number, String.t}&lt;/code&gt; una y otra vez. Podemos usar la directiva &lt;code&gt;@type&lt;/code&gt; para declarar nuestro propio tipo personalizado.</target>
        </trans-unit>
        <trans-unit id="0b772a8609651705eb8dde2b64b91c2000ee893a" translate="yes" xml:space="preserve">
          <source>Defining function specs this way works, but we end up repeating the type &lt;code&gt;{number, String.t}&lt;/code&gt; over and over. We can use the &lt;code&gt;@type&lt;/code&gt; attribute to declare our own custom type and cut down on the repetition.</source>
          <target state="translated">Definir especificaciones de funci&amp;oacute;n de esta manera funciona, pero terminamos repitiendo el tipo &lt;code&gt;{number, String.t}&lt;/code&gt; una y otra vez. Podemos usar el atributo &lt;code&gt;@type&lt;/code&gt; para declarar nuestro propio tipo personalizado y reducir la repetici&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="9fec1dfeb38c397bddde90cce354ec968be3e685" translate="yes" xml:space="preserve">
          <source>Defining structs</source>
          <target state="translated">Definiendo las estructuras</target>
        </trans-unit>
        <trans-unit id="ac3516b411710c30e4cd006454c7f1994a4da34a" translate="yes" xml:space="preserve">
          <source>Delegation only works with functions; delegating macros is not supported.</source>
          <target state="translated">La delegación sólo funciona con funciones;no se admite la delegación de macros.</target>
        </trans-unit>
        <trans-unit id="e726a77011c0fe0cd388991d477e194ae9fd7af2" translate="yes" xml:space="preserve">
          <source>Deletes &lt;code&gt;value&lt;/code&gt; from &lt;code&gt;map_set&lt;/code&gt;.</source>
          <target state="translated">Elimina &lt;code&gt;value&lt;/code&gt; de &lt;code&gt;map_set&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7197d992ec2d7887544bc401d08055b1f065eeeb" translate="yes" xml:space="preserve">
          <source>Deletes a path from the Erlang VM code path list. This is the list of directories the Erlang VM uses for finding module code.</source>
          <target state="translated">Borra una ruta de la lista de rutas de código VM de Erlang.Esta es la lista de directorios que el VM Erlang utiliza para encontrar el código del módulo.</target>
        </trans-unit>
        <trans-unit id="23800ac90aacec2911367a4560daa8ed5fec9cb1" translate="yes" xml:space="preserve">
          <source>Deletes an environment variable.</source>
          <target state="translated">Elimina una variable de entorno.</target>
        </trans-unit>
        <trans-unit id="28cada09dd4174a63836f40b25ecf14ff7e1c534" translate="yes" xml:space="preserve">
          <source>Deletes generated application files.</source>
          <target state="translated">Elimina los archivos de aplicación generados.</target>
        </trans-unit>
        <trans-unit id="e6a3899638112ac7460e060d887ef65128ba4bb0" translate="yes" xml:space="preserve">
          <source>Deletes logging level for all modules to primary level</source>
          <target state="translated">Elimina el nivel de registro de todos los módulos hasta el nivel primario</target>
        </trans-unit>
        <trans-unit id="e51596caccd970cb4a08314add121664dd042408" translate="yes" xml:space="preserve">
          <source>Deletes logging level for given module to primary level.</source>
          <target state="translated">Elimina el nivel de registro de un módulo determinado hasta el nivel primario.</target>
        </trans-unit>
        <trans-unit id="666b6e6f3ed57f226d5de485fc7c0243f6bedb5a" translate="yes" xml:space="preserve">
          <source>Deletes registry metadata for the given &lt;code&gt;key&lt;/code&gt; in &lt;code&gt;registry&lt;/code&gt;.</source>
          <target state="translated">Elimina los metadatos del registro para la &lt;code&gt;key&lt;/code&gt; dada en el &lt;code&gt;registry&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6511b55cc1b351a9cd395e58f52ffa508ee0de39" translate="yes" xml:space="preserve">
          <source>Deletes the &lt;code&gt;key&lt;/code&gt; from the given &lt;code&gt;app&lt;/code&gt; environment.</source>
          <target state="translated">Elimina la &lt;code&gt;key&lt;/code&gt; del entorno de &lt;code&gt;app&lt;/code&gt; dado .</target>
        </trans-unit>
        <trans-unit id="cda458e47c2adb906a94c0b5117cdc3d628bc0de" translate="yes" xml:space="preserve">
          <source>Deletes the child specification identified by &lt;code&gt;child_id&lt;/code&gt;.</source>
          <target state="translated">Elimina la especificaci&amp;oacute;n ni&amp;ntilde;o identificado por &lt;code&gt;child_id&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="06519f5a98d8a9576fa45c95f0c76ae133cbfd51" translate="yes" xml:space="preserve">
          <source>Deletes the element at the given &lt;code&gt;index&lt;/code&gt; from &lt;code&gt;tuple&lt;/code&gt;. Raises an &lt;a href=&quot;argumenterror&quot;&gt;&lt;code&gt;ArgumentError&lt;/code&gt;&lt;/a&gt; if &lt;code&gt;index&lt;/code&gt; is negative or greater than or equal to the length of &lt;code&gt;tuple&lt;/code&gt;. Index is zero-based.</source>
          <target state="translated">Elimina el elemento en el &lt;code&gt;index&lt;/code&gt; dado de la &lt;code&gt;tuple&lt;/code&gt; . Genera un &lt;a href=&quot;argumenterror&quot;&gt; &lt;code&gt;ArgumentError&lt;/code&gt; &lt;/a&gt; si el &lt;code&gt;index&lt;/code&gt; es negativo o mayor o igual que la longitud de la &lt;code&gt;tuple&lt;/code&gt; . El &amp;iacute;ndice est&amp;aacute; basado en cero.</target>
        </trans-unit>
        <trans-unit id="fd3c9b264d49ac26b30c967deba1cf019e912877" translate="yes" xml:space="preserve">
          <source>Deletes the element at the given &lt;code&gt;index&lt;/code&gt; from &lt;code&gt;tuple&lt;/code&gt;. Raises an &lt;a href=&quot;https://hexdocs.pm/elixir/ArgumentError.html&quot;&gt;&lt;code&gt;ArgumentError&lt;/code&gt;&lt;/a&gt; if &lt;code&gt;index&lt;/code&gt; is negative or greater than or equal to the length of &lt;code&gt;tuple&lt;/code&gt;. Index is zero-based.</source>
          <target state="translated">Elimina el elemento en el &lt;code&gt;index&lt;/code&gt; dado de la &lt;code&gt;tuple&lt;/code&gt; . Genera un &lt;a href=&quot;https://hexdocs.pm/elixir/ArgumentError.html&quot;&gt; &lt;code&gt;ArgumentError&lt;/code&gt; &lt;/a&gt; si el &lt;code&gt;index&lt;/code&gt; es negativo o mayor o igual que la longitud de la &lt;code&gt;tuple&lt;/code&gt; . El &amp;iacute;ndice est&amp;aacute; basado en cero.</target>
        </trans-unit>
        <trans-unit id="768479db33c4ea83d038f3e75c0b46d08cfff3a1" translate="yes" xml:space="preserve">
          <source>Deletes the entries in the keyword list for a &lt;code&gt;key&lt;/code&gt; with &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="translated">Elimina las entradas de la lista de palabras clave para una &lt;code&gt;key&lt;/code&gt; con &lt;code&gt;value&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="30f8ea2c4a41f9ff990549664a0c3e8cc979a2f3" translate="yes" xml:space="preserve">
          <source>Deletes the entries in the keyword list for a specific &lt;code&gt;key&lt;/code&gt;.</source>
          <target state="translated">Elimina las entradas de la lista de palabras clave para una &lt;code&gt;key&lt;/code&gt; espec&amp;iacute;fica .</target>
        </trans-unit>
        <trans-unit id="e356fc985f5b4c45501dcdd4bf05b2d169dc820a" translate="yes" xml:space="preserve">
          <source>Deletes the entry in &lt;code&gt;map&lt;/code&gt; for a specific &lt;code&gt;key&lt;/code&gt;.</source>
          <target state="translated">Elimina la entrada en el &lt;code&gt;map&lt;/code&gt; a para una &lt;code&gt;key&lt;/code&gt; espec&amp;iacute;fica .</target>
        </trans-unit>
        <trans-unit id="84bf7f6c44bf7d1a25fea2eb0b485822b94e4057" translate="yes" xml:space="preserve">
          <source>Deletes the first entry in the keyword list for a specific &lt;code&gt;key&lt;/code&gt;.</source>
          <target state="translated">Elimina la primera entrada de la lista de palabras clave para una &lt;code&gt;key&lt;/code&gt; espec&amp;iacute;fica .</target>
        </trans-unit>
        <trans-unit id="f8205134472497de5f123b07ed4ca04623561776" translate="yes" xml:space="preserve">
          <source>Deletes the given &lt;code&gt;element&lt;/code&gt; from the &lt;code&gt;list&lt;/code&gt;. Returns a new list without the element.</source>
          <target state="translated">Elimina el &lt;code&gt;element&lt;/code&gt; o dado de la &lt;code&gt;list&lt;/code&gt; a . Devuelve una nueva lista sin el elemento.</target>
        </trans-unit>
        <trans-unit id="6931640e5585d21423be80c31e8281e15f83ebe2" translate="yes" xml:space="preserve">
          <source>Deletes the given &lt;code&gt;key&lt;/code&gt; from the process dictionary.</source>
          <target state="translated">Elimina la &lt;code&gt;key&lt;/code&gt; dada del diccionario de procesos.</target>
        </trans-unit>
        <trans-unit id="96c74c6ec914e8875fe5447015216dd83996fdd6" translate="yes" xml:space="preserve">
          <source>Deletes the given dependencies' files, including build artifacts and fetched sources.</source>
          <target state="translated">Borra los archivos de las dependencias dadas,incluyendo los artefactos de construcción y las fuentes buscadas.</target>
        </trans-unit>
        <trans-unit id="241d39fd9168ac37f5f1398b699e96cae08161ab" translate="yes" xml:space="preserve">
          <source>Deletes the module attribute that matches the given key.</source>
          <target state="translated">Elimina el atributo del módulo que coincide con la clave dada.</target>
        </trans-unit>
        <trans-unit id="a7699468279a4b12f6e55a5ad1b8c725c2c3ca8c" translate="yes" xml:space="preserve">
          <source>Demonitors the monitor identified by the given &lt;code&gt;reference&lt;/code&gt;.</source>
          <target state="translated">Demonitoriza el monitor identificado por la &lt;code&gt;reference&lt;/code&gt; dada .</target>
        </trans-unit>
        <trans-unit id="0562f32dc56f5c702810cbe010068ddd38dbd69a" translate="yes" xml:space="preserve">
          <source>Dependencies</source>
          <target state="translated">Dependencies</target>
        </trans-unit>
        <trans-unit id="ca0bdefd221fdbfd10bc0f3013fa9c019ef6808e" translate="yes" xml:space="preserve">
          <source>Dependencies and umbrella projects</source>
          <target state="translated">Dependencias y proyectos paraguas</target>
        </trans-unit>
        <trans-unit id="a491fbe030b9498ae78cd8f4bbd75506aa4b23b5" translate="yes" xml:space="preserve">
          <source>Dependencies are loaded again, now with an updated env environment</source>
          <target state="translated">Las dependencias se cargan de nuevo,ahora con un entorno env actualizado</target>
        </trans-unit>
        <trans-unit id="0aeab4e8a30c470967346544f8d2eeabc88b3b63" translate="yes" xml:space="preserve">
          <source>Dependencies between applications in an umbrella project must still be explicitly defined and Mix makes it easy to do so. Open up &lt;code&gt;apps/kv_server/mix.exs&lt;/code&gt; and change the &lt;code&gt;deps/0&lt;/code&gt; function to the following:</source>
          <target state="translated">Las dependencias entre aplicaciones en un proyecto general a&amp;uacute;n deben definirse expl&amp;iacute;citamente y Mix facilita hacerlo. Abra &lt;code&gt;apps/kv_server/mix.exs&lt;/code&gt; y cambie la funci&amp;oacute;n &lt;code&gt;deps/0&lt;/code&gt; a lo siguiente:</target>
        </trans-unit>
        <trans-unit id="20c4e61613e0bb2759ad45cedce4f0b014181be0" translate="yes" xml:space="preserve">
          <source>Dependencies must be specified in the &lt;code&gt;mix.exs&lt;/code&gt; file in one of the following formats:</source>
          <target state="translated">Las dependencias deben especificarse en el archivo &lt;code&gt;mix.exs&lt;/code&gt; en uno de los siguientes formatos:</target>
        </trans-unit>
        <trans-unit id="fc73fac5fc75582095a6f843e32787bf5448edd3" translate="yes" xml:space="preserve">
          <source>Dependencies types</source>
          <target state="translated">Tipos de dependencia</target>
        </trans-unit>
        <trans-unit id="1313d46d93e4456c33c34bdf877a2b31296e6f6b" translate="yes" xml:space="preserve">
          <source>Dependencies within an umbrella project</source>
          <target state="translated">Dependencias dentro de un proyecto global</target>
        </trans-unit>
        <trans-unit id="2ae4f4df59c1f88916b85e951202eefbff4c7b68" translate="yes" xml:space="preserve">
          <source>Dependency definition options</source>
          <target state="translated">Opciones de definición de dependencia</target>
        </trans-unit>
        <trans-unit id="8ef7583b0e7ed117ec9a27cd09f5e8d10632bf4f" translate="yes" xml:space="preserve">
          <source>Depending on the accumulator value, the result returned by &lt;a href=&quot;#reduce/3&quot;&gt;&lt;code&gt;Enumerable.reduce/3&lt;/code&gt;&lt;/a&gt; will change. Please check the &lt;a href=&quot;#t:result/0&quot;&gt;&lt;code&gt;result/0&lt;/code&gt;&lt;/a&gt; type documentation for more information.</source>
          <target state="translated">Dependiendo del valor del acumulador, el resultado devuelto por &lt;a href=&quot;#reduce/3&quot;&gt; &lt;code&gt;Enumerable.reduce/3&lt;/code&gt; &lt;/a&gt; cambiar&amp;aacute;. Consulte la documentaci&amp;oacute;n de tipo &lt;a href=&quot;#t:result/0&quot;&gt; &lt;code&gt;result/0&lt;/code&gt; &lt;/a&gt; para obtener m&amp;aacute;s informaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="ac1bc59655cdca7840ee9bf9d55721f13ebb7a55" translate="yes" xml:space="preserve">
          <source>Depending on the accumulator value, the result returned by &lt;a href=&quot;enumerable#reduce/3&quot;&gt;&lt;code&gt;Enumerable.reduce/3&lt;/code&gt;&lt;/a&gt; will change. Please check the &lt;a href=&quot;#t:result/0&quot;&gt;&lt;code&gt;result/0&lt;/code&gt;&lt;/a&gt; type documentation for more information.</source>
          <target state="translated">Dependiendo del valor del acumulador, el resultado devuelto por &lt;a href=&quot;enumerable#reduce/3&quot;&gt; &lt;code&gt;Enumerable.reduce/3&lt;/code&gt; &lt;/a&gt; cambiar&amp;aacute;. Consulte la documentaci&amp;oacute;n de tipo &lt;a href=&quot;#t:result/0&quot;&gt; &lt;code&gt;result/0&lt;/code&gt; &lt;/a&gt; para obtener m&amp;aacute;s informaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="8d458ed0bd596292bbe634a9b96cac2cab2e4961" translate="yes" xml:space="preserve">
          <source>Deployments</source>
          <target state="translated">Deployments</target>
        </trans-unit>
        <trans-unit id="4962f760a0cc6ed936dcedffadba8733dd81e124" translate="yes" xml:space="preserve">
          <source>Deploys a given module's BEAM code to a list of nodes.</source>
          <target state="translated">Despliega el código BEAM de un módulo dado en una lista de nodos.</target>
        </trans-unit>
        <trans-unit id="f6ef72731d9f2999dced5cdda829d282f60229ed" translate="yes" xml:space="preserve">
          <source>Deprecated feature</source>
          <target state="translated">Característica desaprobada</target>
        </trans-unit>
        <trans-unit id="e5135ac9aa0f3adf0ead688638a7cada98f65645" translate="yes" xml:space="preserve">
          <source>Deprecated function to retrieve old documentation format.</source>
          <target state="translated">Función obsoleta para recuperar el formato de documentación antiguo.</target>
        </trans-unit>
        <trans-unit id="355cf2e1caeb8e5de974f3e0ee6f449e9a16967c" translate="yes" xml:space="preserve">
          <source>Deprecated mechanism to retrieve the last exception stacktrace.</source>
          <target state="translated">Mecanismo desaprobado para recuperar el último rastro de la pila de excepción.</target>
        </trans-unit>
        <trans-unit id="34730e9bbd5c0ba7b7655973316eed44e39da85f" translate="yes" xml:space="preserve">
          <source>Deprecations</source>
          <target state="translated">Deprecations</target>
        </trans-unit>
        <trans-unit id="8189415262d9b40fadd78cc759dd14fdb9868384" translate="yes" xml:space="preserve">
          <source>Deps task</source>
          <target state="translated">Tarea de Deps.</target>
        </trans-unit>
        <trans-unit id="1751cb6240f8427862c44d9fda1a1acebc588f2b" translate="yes" xml:space="preserve">
          <source>Derives the &lt;code&gt;protocol&lt;/code&gt; for &lt;code&gt;module&lt;/code&gt; with the given options.</source>
          <target state="translated">Deriva el &lt;code&gt;protocol&lt;/code&gt; o para el &lt;code&gt;module&lt;/code&gt; con las opciones dadas.</target>
        </trans-unit>
        <trans-unit id="b1f507cfab066377ebfd776c06ce8c6ae1d1dfae" translate="yes" xml:space="preserve">
          <source>Deriving</source>
          <target state="translated">Deriving</target>
        </trans-unit>
        <trans-unit id="469b2320b22b8de425b1224d561debab3b7e4eec" translate="yes" xml:space="preserve">
          <source>Describes tests together.</source>
          <target state="translated">Describe las pruebas juntas.</target>
        </trans-unit>
        <trans-unit id="55f8ebc805e65b5b71ddafdae390e3be2bcd69af" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">Description</target>
        </trans-unit>
        <trans-unit id="373b67a9ef6e15b48984d2e64ecfb18feb928f40" translate="yes" xml:space="preserve">
          <source>Design principles</source>
          <target state="translated">Principios de diseño</target>
        </trans-unit>
        <trans-unit id="9c5959e7ab4938c2e1595e724f3e5f686f3d536b" translate="yes" xml:space="preserve">
          <source>Destructures two lists, assigning each term in the right one to the matching term in the left one.</source>
          <target state="translated">Desestructura dos listas,asignando cada término de la derecha al término correspondiente de la izquierda.</target>
        </trans-unit>
        <trans-unit id="55519a961a5691717096efcabf1914eee5dab5a5" translate="yes" xml:space="preserve">
          <source>Determines if &lt;code&gt;integer&lt;/code&gt; is odd.</source>
          <target state="translated">Determina si el &lt;code&gt;integer&lt;/code&gt; es impar.</target>
        </trans-unit>
        <trans-unit id="026e5ca0dfda1ad25fabda732fd35af3e32e25b5" translate="yes" xml:space="preserve">
          <source>Determines if an &lt;code&gt;integer&lt;/code&gt; is even.</source>
          <target state="translated">Determina si un &lt;code&gt;integer&lt;/code&gt; es par.</target>
        </trans-unit>
        <trans-unit id="ada7ef5eac5cda7b071d8c84d536d21adaaabe11" translate="yes" xml:space="preserve">
          <source>Determines if the &lt;code&gt;enumerable&lt;/code&gt; is empty.</source>
          <target state="translated">Determina si el &lt;code&gt;enumerable&lt;/code&gt; est&amp;aacute; vac&amp;iacute;o.</target>
        </trans-unit>
        <trans-unit id="240590c512304822fc6f9051f63c5097957b51d1" translate="yes" xml:space="preserve">
          <source>Determines if the date given is valid according to the proleptic Gregorian calendar.</source>
          <target state="translated">Determina si la fecha dada es válida según el calendario gregoriano proléptico.</target>
        </trans-unit>
        <trans-unit id="76efef7f9a49f47616dc673a59a2c3e837af4cb0" translate="yes" xml:space="preserve">
          <source>Determines whether a given file path (supplied to ExUnit/Mix as arguments on the command line) includes a line number filter, and if so returns the appropriate ExUnit configuration options.</source>
          <target state="translated">Determina si una ruta de archivo determinada (suministrada a ExUnit/Mix como argumentos en la línea de comandos)incluye un filtro de número de línea y,en caso afirmativo,devuelve las opciones de configuración apropiadas de ExUnit.</target>
        </trans-unit>
        <trans-unit id="8ecb9b726f00ef60a6a7e35454782b134568f041" translate="yes" xml:space="preserve">
          <source>Developers can also use &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Release.html&quot;&gt;&lt;code&gt;mix release&lt;/code&gt;&lt;/a&gt; to build &lt;strong&gt;releases&lt;/strong&gt;. Releases are able to package all of your source code as well as the Erlang VM into a single directory. Releases also give you explicit control over how each application is started and in which order. They also provide a more streamlined mechanism for starting and stopping systems, debugging, logging, as well as system monitoring.</source>
          <target state="translated">Los desarrolladores tambi&amp;eacute;n pueden utilizar &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Release.html&quot;&gt; &lt;code&gt;mix release&lt;/code&gt; &lt;/a&gt; para crear &lt;strong&gt;versiones&lt;/strong&gt; . Las versiones pueden empaquetar todo su c&amp;oacute;digo fuente, as&amp;iacute; como la m&amp;aacute;quina virtual Erlang, en un solo directorio. Las versiones tambi&amp;eacute;n le brindan un control expl&amp;iacute;cito sobre c&amp;oacute;mo se inicia cada aplicaci&amp;oacute;n y en qu&amp;eacute; orden. Tambi&amp;eacute;n proporcionan un mecanismo m&amp;aacute;s optimizado para iniciar y detener sistemas, depurar, registrar y monitorear el sistema.</target>
        </trans-unit>
        <trans-unit id="b906ed370d76a314f78611272f97a7c5324fbfb8" translate="yes" xml:space="preserve">
          <source>Developers can also use tools like &lt;a href=&quot;https://github.com/bitwalker/distillery&quot;&gt;Distillery&lt;/a&gt; that build &lt;strong&gt;releases&lt;/strong&gt;. Releases are able to package all of your source code as well as the Erlang VM into a single directory. Releases also give you explicit control over how each application is started and in which order. They also provide a more streamlined mechanism for starting and stopping systems, debugging, logging, as well as system monitoring.</source>
          <target state="translated">Los desarrolladores tambi&amp;eacute;n pueden usar herramientas como &lt;a href=&quot;https://github.com/bitwalker/distillery&quot;&gt;Distillery&lt;/a&gt; que crean &lt;strong&gt;lanzamientos&lt;/strong&gt; . Las versiones pueden empaquetar todo su c&amp;oacute;digo fuente, as&amp;iacute; como la m&amp;aacute;quina virtual Erlang, en un solo directorio. Las versiones tambi&amp;eacute;n le brindan un control expl&amp;iacute;cito sobre c&amp;oacute;mo se inicia cada aplicaci&amp;oacute;n y en qu&amp;eacute; orden. Tambi&amp;eacute;n proporcionan un mecanismo m&amp;aacute;s optimizado para iniciar y detener sistemas, depurar, registrar y monitorear el sistema.</target>
        </trans-unit>
        <trans-unit id="17f25608342d4ab77bb1907f884cfe439bc54de0" translate="yes" xml:space="preserve">
          <source>Developers may also implement their own backends, an option that is explored in more detail below.</source>
          <target state="translated">Los desarrolladores también pueden implementar sus propios backends,una opción que se explora con más detalle a continuación.</target>
        </trans-unit>
        <trans-unit id="0f26c5755a434f3e16da5992d7fb7b82ce5cc7eb" translate="yes" xml:space="preserve">
          <source>Developers may also use umbrella projects to break large business domains apart. The caution here is to make sure the domains don&amp;rsquo;t depend on each other (also known as cyclic dependencies). If you run into such situations, it means those applications are not as isolated from each other as you originally thought, and you have architectural and design issues to solve.</source>
          <target state="translated">Los desarrolladores tambi&amp;eacute;n pueden utilizar proyectos generales para separar los dominios de las grandes empresas. La precauci&amp;oacute;n aqu&amp;iacute; es asegurarse de que los dominios no dependan entre s&amp;iacute; (tambi&amp;eacute;n conocidas como dependencias c&amp;iacute;clicas). Si se encuentra con tales situaciones, significa que esas aplicaciones no est&amp;aacute;n tan aisladas entre s&amp;iacute; como pensaba originalmente, y tiene problemas de arquitectura y dise&amp;ntilde;o que resolver.</target>
        </trans-unit>
        <trans-unit id="f8e1b365eba8e74b8bfe96cbfcdf64fb1b529aa8" translate="yes" xml:space="preserve">
          <source>Developers may want to customize the VM flags and environment variables given when the release starts. This is typically done by customizing two files inside your release: &lt;code&gt;releases/RELEASE_VSN/vm.args&lt;/code&gt; and &lt;code&gt;releases/RELEASE_VSN/env.sh&lt;/code&gt; (or &lt;code&gt;env.bat&lt;/code&gt; on Windows).</source>
          <target state="translated">Es posible que los desarrolladores quieran personalizar los indicadores de VM y las variables de entorno que se proporcionan cuando comienza el lanzamiento. Por lo general, esto se hace personalizando dos archivos dentro de su lanzamiento: &lt;code&gt;releases/RELEASE_VSN/vm.args&lt;/code&gt; y &lt;code&gt;releases/RELEASE_VSN/env.sh&lt;/code&gt; (o &lt;code&gt;env.bat&lt;/code&gt; en Windows).</target>
        </trans-unit>
        <trans-unit id="b4df092ce16103b5263190978f954da4abebc038" translate="yes" xml:space="preserve">
          <source>Developers should avoid creating the &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;DateTime&lt;/code&gt;&lt;/a&gt; struct directly and instead rely on the functions provided by this module as well as the ones in third-party calendar libraries.</source>
          <target state="translated">Los desarrolladores deben evitar crear la estructura &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;DateTime&lt;/code&gt; &lt;/a&gt; directamente y, en cambio, confiar en las funciones proporcionadas por este m&amp;oacute;dulo, as&amp;iacute; como en las bibliotecas de calendario de terceros.</target>
        </trans-unit>
        <trans-unit id="9399f0af7289ccae2bbfba26b54d6beaa45eceaa" translate="yes" xml:space="preserve">
          <source>Developers should avoid creating the Date structs directly and instead rely on the functions provided by this module as well as the ones in third-party calendar libraries.</source>
          <target state="translated">Los desarrolladores deben evitar crear las estructuras de fecha directamente y,en su lugar,confiar en las funciones que proporciona este módulo,así como en las de las bibliotecas de calendarios de terceros.</target>
        </trans-unit>
        <trans-unit id="372765583e2c62003b134d7cd14c816d752b1af8" translate="yes" xml:space="preserve">
          <source>Developers should avoid creating the NaiveDateTime structs directly and instead, rely on the functions provided by this module as well as the ones in third-party calendar libraries.</source>
          <target state="translated">Los desarrolladores deben evitar crear las estructuras de NaiveDateTime directamente y,en su lugar,confiar en las funciones que proporciona este módulo,así como en las de las bibliotecas de calendarios de terceros.</target>
        </trans-unit>
        <trans-unit id="055215a2dc231830ec70e2ea3ed245f009feefc1" translate="yes" xml:space="preserve">
          <source>Developers should avoid creating the Time structs directly and instead rely on the functions provided by this module as well as the ones in third-party calendar libraries.</source>
          <target state="translated">Los desarrolladores deben evitar crear las Estructuras de tiempo directamente y,en su lugar,confiar en las funciones que proporciona este módulo,así como en las de las bibliotecas de calendarios de terceros.</target>
        </trans-unit>
        <trans-unit id="9189bcb16b1c4a850379e209c0a8399dce99e6b1" translate="yes" xml:space="preserve">
          <source>Developers typically interact with the application environment and its callback module. Therefore those will be the topics we will cover first before jumping into details about the application resource file and life-cycle.</source>
          <target state="translated">Los desarrolladores suelen interactuar con el entorno de la aplicación y su módulo de devolución de llamada.Por lo tanto,esos serán los temas que cubriremos primero antes de entrar en detalles sobre el archivo de recursos de la aplicación y su ciclo de vida.</target>
        </trans-unit>
        <trans-unit id="99b414f7b11d4d2f5dc034b2a293c66c101f5ce2" translate="yes" xml:space="preserve">
          <source>Developers typically invoke &lt;a href=&quot;#init/1&quot;&gt;&lt;code&gt;DynamicSupervisor.init/1&lt;/code&gt;&lt;/a&gt; at the end of their init callback to return the proper supervision flags.</source>
          <target state="translated">Los desarrolladores suelen invocar &lt;a href=&quot;#init/1&quot;&gt; &lt;code&gt;DynamicSupervisor.init/1&lt;/code&gt; &lt;/a&gt; al final de su devoluci&amp;oacute;n de llamada de inicio para devolver los indicadores de supervisi&amp;oacute;n adecuados.</target>
        </trans-unit>
        <trans-unit id="49670694b8769b5d39822cc3c17e46c76506631f" translate="yes" xml:space="preserve">
          <source>Developers typically invoke &lt;a href=&quot;#init/2&quot;&gt;&lt;code&gt;Supervisor.init/2&lt;/code&gt;&lt;/a&gt; at the end of their init callback to return the proper supervision flags.</source>
          <target state="translated">Los desarrolladores suelen invocar &lt;a href=&quot;#init/2&quot;&gt; &lt;code&gt;Supervisor.init/2&lt;/code&gt; &lt;/a&gt; al final de su devoluci&amp;oacute;n de llamada de inicio para devolver los indicadores de supervisi&amp;oacute;n adecuados.</target>
        </trans-unit>
        <trans-unit id="a0f9f33bf587fbe7754189054b93906eb196c38a" translate="yes" xml:space="preserve">
          <source>Developers typically invoke &lt;a href=&quot;dynamicsupervisor#init/1&quot;&gt;&lt;code&gt;DynamicSupervisor.init/1&lt;/code&gt;&lt;/a&gt; at the end of their init callback to return the proper supervision flags.</source>
          <target state="translated">Los desarrolladores suelen invocar &lt;a href=&quot;dynamicsupervisor#init/1&quot;&gt; &lt;code&gt;DynamicSupervisor.init/1&lt;/code&gt; &lt;/a&gt; al final de su devoluci&amp;oacute;n de llamada de inicio para devolver los indicadores de supervisi&amp;oacute;n adecuados.</target>
        </trans-unit>
        <trans-unit id="c23ae07b94722ec4976e1fcb3346ba8a18a11515" translate="yes" xml:space="preserve">
          <source>Developers typically invoke &lt;a href=&quot;supervisor#init/2&quot;&gt;&lt;code&gt;Supervisor.init/2&lt;/code&gt;&lt;/a&gt; at the end of their init callback to return the proper supervision flags.</source>
          <target state="translated">Los desarrolladores suelen invocar &lt;a href=&quot;supervisor#init/2&quot;&gt; &lt;code&gt;Supervisor.init/2&lt;/code&gt; &lt;/a&gt; al final de su devoluci&amp;oacute;n de llamada de inicio para devolver los indicadores de supervisi&amp;oacute;n adecuados.</target>
        </trans-unit>
        <trans-unit id="c943b3eb860130726114a82a12d17559028bcef9" translate="yes" xml:space="preserve">
          <source>Developing in Elixir does not make your code free of race conditions. However, Elixir&amp;rsquo;s abstractions where nothing is shared by default make it easier to spot a race condition&amp;rsquo;s root cause.</source>
          <target state="translated">Desarrollar en Elixir no hace que su c&amp;oacute;digo est&amp;eacute; libre de condiciones de carrera. Sin embargo, las abstracciones de Elixir, en las que no se comparte nada de forma predeterminada, facilitan la detecci&amp;oacute;n de la causa ra&amp;iacute;z de una condici&amp;oacute;n de carrera.</target>
        </trans-unit>
        <trans-unit id="4c17aadf5117487aab7bc50cbf056caf3977cc31" translate="yes" xml:space="preserve">
          <source>Development</source>
          <target state="translated">Development</target>
        </trans-unit>
        <trans-unit id="6b689de83c32738e6559500bab1e32306f72a975" translate="yes" xml:space="preserve">
          <source>Diagnostic information such as a warning or compilation error.</source>
          <target state="translated">Información de diagnóstico como una advertencia o un error de compilación.</target>
        </trans-unit>
        <trans-unit id="3550a4a38c380e14df95457cd13d6dabbd0c0b20" translate="yes" xml:space="preserve">
          <source>Dict</source>
          <target state="translated">Dict</target>
        </trans-unit>
        <trans-unit id="28a9d7ddb98e082ecef8831bdb74b74701f20d77" translate="yes" xml:space="preserve">
          <source>Differences from &lt;code&gt;defmodule&lt;/code&gt;</source>
          <target state="translated">Diferencias con &lt;code&gt;defmodule&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="951f149c561762e46794ae9088e9246ba02fb48d" translate="yes" xml:space="preserve">
          <source>Differences to &lt;a href=&quot;#count/1&quot;&gt;&lt;code&gt;count/1&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">Diferencias para &lt;a href=&quot;#count/1&quot;&gt; &lt;code&gt;count/1&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5d20542733f8e0c7eb21a37d3a9649be5cfd67f9" translate="yes" xml:space="preserve">
          <source>Directory separators must always be written as &lt;code&gt;/&lt;/code&gt;, even on Windows. You may call &lt;a href=&quot;#expand/1&quot;&gt;&lt;code&gt;Path.expand/1&lt;/code&gt;&lt;/a&gt; to normalize the path before invoking this function.</source>
          <target state="translated">Los separadores de directorio siempre deben escribirse como &lt;code&gt;/&lt;/code&gt; , incluso en Windows. Puede llamar a &lt;a href=&quot;#expand/1&quot;&gt; &lt;code&gt;Path.expand/1&lt;/code&gt; &lt;/a&gt; para normalizar la ruta antes de invocar esta funci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="7664bc212e56811cb62a63d951c16c5ee311e137" translate="yes" xml:space="preserve">
          <source>Directory separators must always be written as &lt;code&gt;/&lt;/code&gt;, even on Windows. You may call &lt;a href=&quot;path#expand/1&quot;&gt;&lt;code&gt;Path.expand/1&lt;/code&gt;&lt;/a&gt; to normalize the path before invoking this function.</source>
          <target state="translated">Los separadores de directorio siempre deben escribirse como &lt;code&gt;/&lt;/code&gt; , incluso en Windows. Puede llamar a &lt;a href=&quot;path#expand/1&quot;&gt; &lt;code&gt;Path.expand/1&lt;/code&gt; &lt;/a&gt; para normalizar la ruta antes de invocar esta funci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="07461fdd8bbd77721cfe447edf9e4bd20cbd0023" translate="yes" xml:space="preserve">
          <source>Directory structure</source>
          <target state="translated">Estructura del directorio</target>
        </trans-unit>
        <trans-unit id="5095c2a8d43020f623949798775e0dea6df3427e" translate="yes" xml:space="preserve">
          <source>Disables logging for the current process.</source>
          <target state="translated">Desactiva el registro del proceso actual.</target>
        </trans-unit>
        <trans-unit id="3243542aa799d7700902fa9d17f21c898a51bd23" translate="yes" xml:space="preserve">
          <source>Dispatching happens in the process that calls &lt;a href=&quot;#dispatch/3&quot;&gt;&lt;code&gt;dispatch/3&lt;/code&gt;&lt;/a&gt; either serially or concurrently in case of multiple partitions (via spawned tasks). The registered processes are not involved in dispatching unless involving them is done explicitly (for example, by sending them a message in the callback).</source>
          <target state="translated">El env&amp;iacute;o ocurre en el proceso que llama a &lt;a href=&quot;#dispatch/3&quot;&gt; &lt;code&gt;dispatch/3&lt;/code&gt; &lt;/a&gt; ya sea en serie o al mismo tiempo en caso de m&amp;uacute;ltiples particiones (a trav&amp;eacute;s de tareas generadas). Los procesos registrados no est&amp;aacute;n involucrados en el despacho a menos que involucrarlos se haga expl&amp;iacute;citamente (por ejemplo, envi&amp;aacute;ndoles un mensaje en la devoluci&amp;oacute;n de llamada).</target>
        </trans-unit>
        <trans-unit id="129dd56090745e370bed845813615f5c08f21b2a" translate="yes" xml:space="preserve">
          <source>Distributed tasks</source>
          <target state="translated">Tareas distribuidas</target>
        </trans-unit>
        <trans-unit id="aef0124ef44afd7de1feb0a9b09b0c6ee2798fe2" translate="yes" xml:space="preserve">
          <source>Distributed tasks and tags</source>
          <target state="translated">Tareas y etiquetas distribuidas</target>
        </trans-unit>
        <trans-unit id="b4c7a18ac5c24ec1029c892a8a7fb3fbcc59af1d" translate="yes" xml:space="preserve">
          <source>Distributed tasks are exactly the same as supervised tasks. The only difference is that we pass the node name when spawning the task on the supervisor. Open up &lt;code&gt;lib/kv/supervisor.ex&lt;/code&gt; from the &lt;code&gt;:kv&lt;/code&gt; application. Let&amp;rsquo;s add a task supervisor as the last child of the tree:</source>
          <target state="translated">Las tareas distribuidas son exactamente las mismas que las tareas supervisadas. La &amp;uacute;nica diferencia es que pasamos el nombre del nodo al generar la tarea en el supervisor. Abra &lt;code&gt;lib/kv/supervisor.ex&lt;/code&gt; desde la aplicaci&amp;oacute;n &lt;code&gt;:kv&lt;/code&gt; . Agreguemos un supervisor de tareas como el &amp;uacute;ltimo hijo del &amp;aacute;rbol:</target>
        </trans-unit>
        <trans-unit id="98348afa0d882c80ed7d05917265b30ff93c136a" translate="yes" xml:space="preserve">
          <source>Divides a string into parts based on a pattern.</source>
          <target state="translated">Divide una cadena en partes basadas en un patrón.</target>
        </trans-unit>
        <trans-unit id="4f19d3c5ba97dc473a0dd975ca453b2aa1eeca76" translate="yes" xml:space="preserve">
          <source>Divides a string into substrings at each Unicode whitespace occurrence with leading and trailing whitespace ignored. Groups of whitespace are treated as a single occurrence. Divisions do not occur on non-breaking whitespace.</source>
          <target state="translated">Divide una cadena en subcadenas en cada ocurrencia de espacio blanco de Unicode,ignorando los espacios blancos anteriores y posteriores.Los grupos de espacios en blanco se tratan como una sola ocurrencia.Las divisiones no ocurren en los espacios en blanco que no se rompen.</target>
        </trans-unit>
        <trans-unit id="d81ee0347de2d9ae77f2a442736c72a2f69253b7" translate="yes" xml:space="preserve">
          <source>Do not call this function at the tail of another function. Due to tail call optimization, a stacktrace entry would not be added and the stacktrace would be incorrectly trimmed. Therefore make sure at least one expression (or an atom such as &lt;code&gt;:ok&lt;/code&gt;) follows the &lt;a href=&quot;#warn/1&quot;&gt;&lt;code&gt;IO.warn/1&lt;/code&gt;&lt;/a&gt; call.</source>
          <target state="translated">No llame a esta funci&amp;oacute;n al final de otra funci&amp;oacute;n. Debido a la optimizaci&amp;oacute;n de la llamada de cola, no se agregar&amp;iacute;a una entrada de seguimiento de pila y el seguimiento de pila se recortar&amp;iacute;a incorrectamente. Por lo tanto, aseg&amp;uacute;rese de que al menos una expresi&amp;oacute;n (o un &amp;aacute;tomo como &lt;code&gt;:ok&lt;/code&gt; ) siga a la llamada &lt;a href=&quot;#warn/1&quot;&gt; &lt;code&gt;IO.warn/1&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6e4d17c0fddf7977be47a1ef9b14e7b1d0cef265" translate="yes" xml:space="preserve">
          <source>Do not rely on the particular format returned by the &lt;code&gt;format*&lt;/code&gt; functions in this module. They may be changed in future releases in order to better suit Elixir's tool chain. In other words, by using the functions in this module it is guaranteed you will format exceptions as in the current Elixir version being used.</source>
          <target state="translated">No conf&amp;iacute;e en el formato particular devuelto por las funciones de &lt;code&gt;format*&lt;/code&gt; en este m&amp;oacute;dulo. Es posible que se modifiquen en versiones futuras para adaptarse mejor a la cadena de herramientas de Elixir. En otras palabras, al usar las funciones de este m&amp;oacute;dulo, se garantiza que formatear&amp;aacute; las excepciones como en la versi&amp;oacute;n actual de Elixir que se est&amp;aacute; utilizando.</target>
        </trans-unit>
        <trans-unit id="7ed32458ab08d1762c48c121c3b7d606e8351db4" translate="yes" xml:space="preserve">
          <source>Do not rely on them as they may change or be fully removed in future versions of the language. They are often used by &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.SpecialForms.html#quote/2&quot;&gt;&lt;code&gt;quote/2&lt;/code&gt;&lt;/a&gt; and the compiler to provide features like hygiene, better error messages, and so forth.</source>
          <target state="translated">No conf&amp;iacute;e en ellos, ya que pueden cambiar o eliminarse por completo en futuras versiones del idioma. A menudo los usa &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.SpecialForms.html#quote/2&quot;&gt; &lt;code&gt;quote/2&lt;/code&gt; &lt;/a&gt; y el compilador para proporcionar caracter&amp;iacute;sticas como higiene, mejores mensajes de error, etc.</target>
        </trans-unit>
        <trans-unit id="cc7bc96b42e95f7c693c3ce91032568e412218c3" translate="yes" xml:space="preserve">
          <source>Do not use &lt;a href=&quot;#config/0&quot;&gt;&lt;code&gt;Mix.Project.config/0&lt;/code&gt;&lt;/a&gt; to find the runtime configuration. Use it only to configure aspects of your project (like compilation directories) and not your application runtime.</source>
          <target state="translated">No use &lt;a href=&quot;#config/0&quot;&gt; &lt;code&gt;Mix.Project.config/0&lt;/code&gt; &lt;/a&gt; para encontrar la configuraci&amp;oacute;n del tiempo de ejecuci&amp;oacute;n. &amp;Uacute;selo solo para configurar aspectos de su proyecto (como directorios de compilaci&amp;oacute;n) y no el tiempo de ejecuci&amp;oacute;n de su aplicaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="9f4fd1f0a9baed4ec08ef8c1f9bda3731a7c9d57" translate="yes" xml:space="preserve">
          <source>Do not use &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#%3C/2&quot;&gt;&lt;code&gt;&amp;lt;/2&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#%3C=/2&quot;&gt;&lt;code&gt;&amp;lt;=/2&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#%3E/2&quot;&gt;&lt;code&gt;&amp;gt;/2&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#%3E=/2&quot;&gt;&lt;code&gt;&amp;gt;=/2&lt;/code&gt;&lt;/a&gt; and friends when sorting structs. That's because the built-in operators above perform structural comparison and not a semantic one. Imagine we sort the following list of dates:</source>
          <target state="translated">No use &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#%3C/2&quot;&gt; &lt;code&gt;&amp;lt;/2&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#%3C=/2&quot;&gt; &lt;code&gt;&amp;lt;=/2&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#%3E/2&quot;&gt; &lt;code&gt;&amp;gt;/2&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#%3E=/2&quot;&gt; &lt;code&gt;&amp;gt;=/2&lt;/code&gt; &lt;/a&gt; y amigos al ordenar estructuras. Eso es porque los operadores integrados anteriores realizan una comparaci&amp;oacute;n estructural y no sem&amp;aacute;ntica. Imagina que ordenamos la siguiente lista de fechas:</target>
        </trans-unit>
        <trans-unit id="5be89a1272cff39c64911be3f9a33057d2a2263c" translate="yes" xml:space="preserve">
          <source>Do not use &lt;a href=&quot;mix.project#config/0&quot;&gt;&lt;code&gt;Mix.Project.config/0&lt;/code&gt;&lt;/a&gt; to find the runtime configuration. Use it only to configure aspects of your project (like compilation directories) and not your application runtime.</source>
          <target state="translated">No use &lt;a href=&quot;mix.project#config/0&quot;&gt; &lt;code&gt;Mix.Project.config/0&lt;/code&gt; &lt;/a&gt; para encontrar la configuraci&amp;oacute;n del tiempo de ejecuci&amp;oacute;n. &amp;Uacute;selo solo para configurar aspectos de su proyecto (como directorios de compilaci&amp;oacute;n) y no el tiempo de ejecuci&amp;oacute;n de su aplicaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="a8d3dcf5e3a5a8a9d6963913c532d9b07e33dbf9" translate="yes" xml:space="preserve">
          <source>Do not use special match variables &lt;code&gt;:&quot;$_&quot;&lt;/code&gt; and &lt;code&gt;:&quot;$$&quot;&lt;/code&gt;, because they might not work as expected.</source>
          <target state="translated">No utilice variables de coincidencia especiales &lt;code&gt;:&quot;$_&quot;&lt;/code&gt; y &lt;code&gt;:&quot;$$&quot;&lt;/code&gt; , porque es posible que no funcionen como se esperaba.</target>
        </trans-unit>
        <trans-unit id="9078c7f338a72de9ec9a277913417c733a31c6ad" translate="yes" xml:space="preserve">
          <source>Do not use this function to generate a sequence of numbers. If blocking the caller process is not necessary, use &lt;code&gt;Stream.iterate(0, &amp;amp; &amp;amp;1 + 1)&lt;/code&gt; instead.</source>
          <target state="translated">No utilice esta funci&amp;oacute;n para generar una secuencia de n&amp;uacute;meros. Si no es necesario bloquear el proceso de la persona que llama, use &lt;code&gt;Stream.iterate(0, &amp;amp; &amp;amp;1 + 1)&lt;/code&gt; lugar.</target>
        </trans-unit>
        <trans-unit id="3c967365f49cb78e9480b70b6bc54898d3348c0d" translate="yes" xml:space="preserve">
          <source>Doctest will looking for a line starting with &lt;code&gt;** (&lt;/code&gt; and it will parse it accordingly to extract the exception name and message. The exception parser will consider all following lines part of the exception message until there is an empty line or there is a new expression prefixed with &lt;code&gt;iex&amp;gt;&lt;/code&gt;. Therefore, it is possible to match on multiline messages as long as there are no empty lines on the message itself.</source>
          <target state="translated">Doctest buscar&amp;aacute; una l&amp;iacute;nea que comience con &lt;code&gt;** (&lt;/code&gt; y la analizar&amp;aacute; en consecuencia para extraer el nombre y el mensaje de la excepci&amp;oacute;n. El analizador de excepciones considerar&amp;aacute; todas las l&amp;iacute;neas siguientes como parte del mensaje de excepci&amp;oacute;n hasta que haya una l&amp;iacute;nea vac&amp;iacute;a o una nueva expresi&amp;oacute;n con el prefijo &lt;code&gt;iex&amp;gt;&lt;/code&gt; . Por lo tanto, es posible hacer coincidencias en mensajes de varias l&amp;iacute;neas siempre que no haya l&amp;iacute;neas vac&amp;iacute;as en el mensaje en s&amp;iacute;.</target>
        </trans-unit>
        <trans-unit id="5e01c221d853296d84e769113c74b2df4ca129d1" translate="yes" xml:space="preserve">
          <source>Doctests</source>
          <target state="translated">Doctests</target>
        </trans-unit>
        <trans-unit id="54cc8e778254d8263003ab87576a482705e9e652" translate="yes" xml:space="preserve">
          <source>Doctests allow us to generate tests from code examples found in &lt;code&gt;@moduledoc&lt;/code&gt; and &lt;code&gt;@doc&lt;/code&gt; attributes. To do this, invoke the &lt;a href=&quot;#doctest/1&quot;&gt;&lt;code&gt;doctest/1&lt;/code&gt;&lt;/a&gt; macro from within your test case and ensure your code examples are written according to the syntax and guidelines below.</source>
          <target state="translated">Doctests nos permite generar pruebas a partir de ejemplos de c&amp;oacute;digo que se encuentran en los atributos &lt;code&gt;@moduledoc&lt;/code&gt; y &lt;code&gt;@doc&lt;/code&gt; . Para hacer esto, invoque la macro &lt;a href=&quot;#doctest/1&quot;&gt; &lt;code&gt;doctest/1&lt;/code&gt; &lt;/a&gt; desde su caso de prueba y aseg&amp;uacute;rese de que sus ejemplos de c&amp;oacute;digo est&amp;eacute;n escritos de acuerdo con la sintaxis y las pautas a continuaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="fd6f84b7484c0cf7709bebbb23583c23abf1b083" translate="yes" xml:space="preserve">
          <source>Doctests are specified by an indentation of four spaces followed by the &lt;code&gt;iex&amp;gt;&lt;/code&gt; prompt in a documentation string. If a command spans multiple lines, you can use &lt;code&gt;...&amp;gt;&lt;/code&gt;, as in IEx. The expected result should start at the next line after &lt;code&gt;iex&amp;gt;&lt;/code&gt; or &lt;code&gt;...&amp;gt;&lt;/code&gt; line(s) and is terminated either by a newline or a new &lt;code&gt;iex&amp;gt;&lt;/code&gt; prefix.</source>
          <target state="translated">Las pruebas de documento se especifican con una sangr&amp;iacute;a de cuatro espacios seguidos del indicador &lt;code&gt;iex&amp;gt;&lt;/code&gt; en una cadena de documentaci&amp;oacute;n. Si un comando abarca varias l&amp;iacute;neas, puede usar &lt;code&gt;...&amp;gt;&lt;/code&gt; , como en IEx. El resultado esperado debe comenzar en la siguiente l&amp;iacute;nea despu&amp;eacute;s de &lt;code&gt;iex&amp;gt;&lt;/code&gt; o &lt;code&gt;...&amp;gt;&lt;/code&gt; l&amp;iacute;nea (s) y termina con una nueva l&amp;iacute;nea o un nuevo prefijo &lt;code&gt;iex&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="acfc0021db2710ad6e5c5976444819b508e6a8e7" translate="yes" xml:space="preserve">
          <source>Doctests, patterns and with</source>
          <target state="translated">Pruebas documentales,patrones y con</target>
        </trans-unit>
        <trans-unit id="9e9cf3221a30246219863f1d2366e36cb580debc" translate="yes" xml:space="preserve">
          <source>Documentation</source>
          <target state="translated">Documentation</target>
        </trans-unit>
        <trans-unit id="dbeb3b73b289a45968e86a1c4e28757eddbb7b21" translate="yes" xml:space="preserve">
          <source>Documentation != Code comments</source>
          <target state="translated">Documentación !=Comentarios del código</target>
        </trans-unit>
        <trans-unit id="dc66ec30a9e7992a7f99224cd60ef6a9e6f7c515" translate="yes" xml:space="preserve">
          <source>Documentation in Elixir is usually attached to module attributes. Let's see an example:</source>
          <target state="translated">La documentación en Elixir suele estar adjunta a los atributos del módulo.Veamos un ejemplo:</target>
        </trans-unit>
        <trans-unit id="d46677a0ad1e404b917f0ea8b3b31b80c34ffa5f" translate="yes" xml:space="preserve">
          <source>Documentation metadata</source>
          <target state="translated">Metadatos de documentación</target>
        </trans-unit>
        <trans-unit id="fcb85c951e6d656fcd603d110a64fcd8866200d9" translate="yes" xml:space="preserve">
          <source>Documents in a group are attempted to be rendered together to the best of the renderer ability.</source>
          <target state="translated">Se intenta que los documentos de un grupo se presenten juntos de la mejor manera posible.</target>
        </trans-unit>
        <trans-unit id="e86919b582b64b77ec53c038e64ee362a74d9398" translate="yes" xml:space="preserve">
          <source>Does not include fractional seconds.</source>
          <target state="translated">No incluye los segundos fraccionarios.</target>
        </trans-unit>
        <trans-unit id="7bd6d91ba0fc6656f3596671325c2a8e0bccb23f" translate="yes" xml:space="preserve">
          <source>Does not load any of the implementations.</source>
          <target state="translated">No carga ninguna de las implementaciones.</target>
        </trans-unit>
        <trans-unit id="e1c5568ff1b2696956a80de3fbdad95c454b1c9a" translate="yes" xml:space="preserve">
          <source>Does not load any of the protocols.</source>
          <target state="translated">No carga ninguno de los protocolos.</target>
        </trans-unit>
        <trans-unit id="c263be485f93e4de275853028d24c5388efd78f6" translate="yes" xml:space="preserve">
          <source>Doing 0.1 * 0.1 should return 0.01, but because 0.1 is actually 0.1000000014, the result is 0.010000000000000002, and because this is not the closest representable number to 0.01, you'll get the wrong result for this operation</source>
          <target state="translated">Haciendo 0,1*0,1 debería devolver 0,01,pero como 0,1 es en realidad 0,1000000014,el resultado es 0,010000000000000002,y como este no es el número representable más cercano a 0,01,obtendrá el resultado equivocado para esta operación.</target>
        </trans-unit>
        <trans-unit id="576aa93d193455e3276b07f4cd2af71d8167c617" translate="yes" xml:space="preserve">
          <source>Doing it in reverse order will raise a syntax error:</source>
          <target state="translated">Si se hace en orden inverso,se producirá un error de sintaxis:</target>
        </trans-unit>
        <trans-unit id="a56ad56b6280b6eca6747cdcbe707267d3443caf" translate="yes" xml:space="preserve">
          <source>Domain-specific languages</source>
          <target state="translated">Lenguajes de dominio específico</target>
        </trans-unit>
        <trans-unit id="e6ab4e40cdc60406c301246d5709b2813b1c0221" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t drink the kool aid</source>
          <target state="translated">No bebas el kool aid</target>
        </trans-unit>
        <trans-unit id="bfd4ab20e5eed869032f79c7d0b2472213257269" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t forget that you can also check the &lt;a href=&quot;https://github.com/elixir-lang/elixir&quot;&gt;source code of Elixir itself&lt;/a&gt;, which is mostly written in Elixir (mainly the &lt;code&gt;lib&lt;/code&gt; directory), or &lt;a href=&quot;https://elixir-lang.org/docs.html&quot;&gt;explore Elixir&amp;rsquo;s documentation&lt;/a&gt;.</source>
          <target state="translated">No olvide que tambi&amp;eacute;n puede consultar el &lt;a href=&quot;https://github.com/elixir-lang/elixir&quot;&gt;c&amp;oacute;digo fuente de Elixir&lt;/a&gt; , que est&amp;aacute; escrito principalmente en Elixir (principalmente el directorio &lt;code&gt;lib&lt;/code&gt; ), o &lt;a href=&quot;https://elixir-lang.org/docs.html&quot;&gt;explorar la documentaci&amp;oacute;n de Elixir&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5db8bef0a01561d7d57f3c78471d1ef61330dd5e" translate="yes" xml:space="preserve">
          <source>Dot operator. Defines a remote call, a call to an anonymous function, or an alias.</source>
          <target state="translated">Operador de puntos.Define una llamada remota,una llamada a una función anónima o un alias.</target>
        </trans-unit>
        <trans-unit id="8e3dff4b81533f75ceec6a97ebb6191aa309061e" translate="yes" xml:space="preserve">
          <source>Drops elements at the beginning of the &lt;code&gt;enumerable&lt;/code&gt; while &lt;code&gt;fun&lt;/code&gt; returns a truthy value.</source>
          <target state="translated">Elimina elementos al comienzo del &lt;code&gt;enumerable&lt;/code&gt; mientras que &lt;code&gt;fun&lt;/code&gt; devuelve un valor verdadero.</target>
        </trans-unit>
        <trans-unit id="594f287d9f0bd3fb9ea891584418c737436dd38e" translate="yes" xml:space="preserve">
          <source>Drops the &lt;code&gt;amount&lt;/code&gt; of elements from the &lt;code&gt;enumerable&lt;/code&gt;.</source>
          <target state="translated">Elimina la &lt;code&gt;amount&lt;/code&gt; de elementos del &lt;code&gt;enumerable&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ab32b2e5c71cd1c17d36b26a0d25edc63a27b074" translate="yes" xml:space="preserve">
          <source>Drops the given &lt;code&gt;keys&lt;/code&gt; from &lt;code&gt;map&lt;/code&gt;.</source>
          <target state="translated">Suelta las &lt;code&gt;keys&lt;/code&gt; dadas del &lt;code&gt;map&lt;/code&gt; a .</target>
        </trans-unit>
        <trans-unit id="cdb8b8343fe7d1adbf36b056e528d2571ea6a12c" translate="yes" xml:space="preserve">
          <source>Drops the given keys from the keyword list.</source>
          <target state="translated">Suelta las teclas dadas de la lista de palabras clave.</target>
        </trans-unit>
        <trans-unit id="69c0475e80c404bbdc2d49a7a643fb10c6ace760" translate="yes" xml:space="preserve">
          <source>Due to immutability, loops in Elixir (as in any functional programming language) are written differently from imperative languages. For example, in an imperative language like C, one would write:</source>
          <target state="translated">Debido a la inmutabilidad,los bucles en Elixir (como en cualquier lenguaje de programación funcional)se escriben de forma diferente a los lenguajes imperativos.Por ejemplo,en un lenguaje imperativo como el C,se escribiría:</target>
        </trans-unit>
        <trans-unit id="5cf07ff6fe7f2d796d09183c5eda29bcd66f1127" translate="yes" xml:space="preserve">
          <source>Due to their cons cell based representation, prepending an element to a list is always fast (constant time), while appending becomes slower as the list grows in size (linear time):</source>
          <target state="translated">Debido a su representación basada en las células cons,la preparación de un elemento para una lista es siempre rápida (tiempo constante),mientras que la adición se hace más lenta a medida que la lista crece en tamaño (tiempo lineal):</target>
        </trans-unit>
        <trans-unit id="4f1ef09b3bb7845a809a8a0e2e38529155ed603e" translate="yes" xml:space="preserve">
          <source>Due to their laziness, streams are useful when working with large (or even infinite) collections. When chaining many operations with &lt;a href=&quot;enum&quot;&gt;&lt;code&gt;Enum&lt;/code&gt;&lt;/a&gt;, intermediate lists are created, while &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Stream&lt;/code&gt;&lt;/a&gt; creates a recipe of computations that are executed at a later moment. Let's see another example:</source>
          <target state="translated">Debido a su pereza, las transmisiones son &amp;uacute;tiles cuando se trabaja con colecciones grandes (o incluso infinitas). Al encadenar muchas operaciones con &lt;a href=&quot;enum&quot;&gt; &lt;code&gt;Enum&lt;/code&gt; &lt;/a&gt; , se crean listas intermedias, mientras que &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;Stream&lt;/code&gt; &lt;/a&gt; crea una receta de c&amp;aacute;lculos que se ejecutan en un momento posterior. Veamos otro ejemplo:</target>
        </trans-unit>
        <trans-unit id="bb320794ee00a758f7983100b77521dd3b189d58" translate="yes" xml:space="preserve">
          <source>Due to their laziness, streams are useful when working with large (or even infinite) collections. When chaining many operations with &lt;a href=&quot;https://hexdocs.pm/elixir/Enum.html&quot;&gt;&lt;code&gt;Enum&lt;/code&gt;&lt;/a&gt;, intermediate lists are created, while &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Stream&lt;/code&gt;&lt;/a&gt; creates a recipe of computations that are executed at a later moment. Let's see another example:</source>
          <target state="translated">Debido a su pereza, las transmisiones son &amp;uacute;tiles cuando se trabaja con colecciones grandes (o incluso infinitas). Al encadenar muchas operaciones con &lt;a href=&quot;https://hexdocs.pm/elixir/Enum.html&quot;&gt; &lt;code&gt;Enum&lt;/code&gt; &lt;/a&gt; , se crean listas intermedias, mientras que &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;Stream&lt;/code&gt; &lt;/a&gt; crea una receta de c&amp;aacute;lculos que se ejecutan en un momento posterior. Veamos otro ejemplo:</target>
        </trans-unit>
        <trans-unit id="1d4a3188c65902a880f35052cd6e431c13b80b5a" translate="yes" xml:space="preserve">
          <source>Due to this property, Elixir relies on functions starting with underscore to attach compile-time metadata to modules. Such functions are most often in the &lt;code&gt;__foo__&lt;/code&gt; format. For example, every module in Elixir has an &lt;a href=&quot;https://hexdocs.pm/elixir/Module.html#c:__info__/1&quot;&gt;&lt;code&gt;__info__/1&lt;/code&gt;&lt;/a&gt; function:</source>
          <target state="translated">Debido a esta propiedad, Elixir se basa en funciones que comienzan con un gui&amp;oacute;n bajo para adjuntar metadatos en tiempo de compilaci&amp;oacute;n a los m&amp;oacute;dulos. Estas funciones suelen estar en formato &lt;code&gt;__foo__&lt;/code&gt; . Por ejemplo, cada m&amp;oacute;dulo en Elixir tiene una funci&amp;oacute;n &lt;a href=&quot;https://hexdocs.pm/elixir/Module.html#c:__info__/1&quot;&gt; &lt;code&gt;__info__/1&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="9895fb241f7b45a9dc3e35cea835d242910bcea5" translate="yes" xml:space="preserve">
          <source>Due to this property, Elixir relies on functions starting with underscore to attach compile-time metadata to modules. Such functions are most often in the &lt;code&gt;__foo__&lt;/code&gt; format. For example, every module in Elixir has an &lt;a href=&quot;module#c:__info__/1&quot;&gt;&lt;code&gt;__info__/1&lt;/code&gt;&lt;/a&gt; function:</source>
          <target state="translated">Debido a esta propiedad, Elixir se basa en funciones que comienzan con un gui&amp;oacute;n bajo para adjuntar metadatos en tiempo de compilaci&amp;oacute;n a los m&amp;oacute;dulos. Estas funciones suelen estar en formato &lt;code&gt;__foo__&lt;/code&gt; . Por ejemplo, cada m&amp;oacute;dulo en Elixir tiene una funci&amp;oacute;n &lt;a href=&quot;module#c:__info__/1&quot;&gt; &lt;code&gt;__info__/1&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="e98f40360712c64e6a04a39d7c38770f1fe9b496" translate="yes" xml:space="preserve">
          <source>Duplicate keys and ordering</source>
          <target state="translated">Duplicar las llaves y ordenar</target>
        </trans-unit>
        <trans-unit id="7d17d072820769c205a9be99134b8181cc1f8d63" translate="yes" xml:space="preserve">
          <source>Duplicated entries are removed, the latest one prevails. Unlike &lt;code&gt;Enum.into(enumerable, [])&lt;/code&gt;, &lt;code&gt;Keyword.new(enumerable)&lt;/code&gt; guarantees the keys are unique.</source>
          <target state="translated">Se eliminan las entradas duplicadas, prevalece la &amp;uacute;ltima. A diferencia de &lt;code&gt;Enum.into(enumerable, [])&lt;/code&gt; , &lt;code&gt;Keyword.new(enumerable)&lt;/code&gt; garantiza que las claves son &amp;uacute;nicas.</target>
        </trans-unit>
        <trans-unit id="076f63ae0f418e3862988b172f7c4cc5852450a8" translate="yes" xml:space="preserve">
          <source>Duplicated entries are removed, the latest one prevails. Unlike &lt;code&gt;Enum.into(enumerable, [], fun)&lt;/code&gt;, &lt;code&gt;Keyword.new(enumerable, fun)&lt;/code&gt; guarantees the keys are unique.</source>
          <target state="translated">Se eliminan las entradas duplicadas, prevalece la &amp;uacute;ltima. A diferencia de &lt;code&gt;Enum.into(enumerable, [], fun)&lt;/code&gt; , &lt;code&gt;Keyword.new(enumerable, fun)&lt;/code&gt; garantiza que las claves son &amp;uacute;nicas.</target>
        </trans-unit>
        <trans-unit id="64aa4fe0da505292ed7a57df0b239e0d4183ccec" translate="yes" xml:space="preserve">
          <source>Duplicated keys appear duplicated in the final list of keys.</source>
          <target state="translated">Las llaves duplicadas aparecen duplicadas en la lista final de llaves.</target>
        </trans-unit>
        <trans-unit id="efdd2fd6681b594f9b79a82e9b5aa48b4fbf5e9b" translate="yes" xml:space="preserve">
          <source>Duplicated keys are not removed.</source>
          <target state="translated">Las llaves duplicadas no se eliminan.</target>
        </trans-unit>
        <trans-unit id="ac53e68a8e0e729bf98aeec7ce7b6340de177d35" translate="yes" xml:space="preserve">
          <source>Duplicated keys are preserved in the new keyword list.</source>
          <target state="translated">Las llaves duplicadas se conservan en la nueva lista de palabras clave.</target>
        </trans-unit>
        <trans-unit id="b3b6f1eeffe99ed90517ec6eae526962d142636d" translate="yes" xml:space="preserve">
          <source>Duplicated keys are removed; the latest one prevails.</source>
          <target state="translated">Las llaves duplicadas se eliminan;la última prevalece.</target>
        </trans-unit>
        <trans-unit id="9ba8d07a9bc46aeb1c779fab12a8b4dd715ff170" translate="yes" xml:space="preserve">
          <source>Duplicates the given element &lt;code&gt;n&lt;/code&gt; times in a list.</source>
          <target state="translated">Duplica el elemento dado &lt;code&gt;n&lt;/code&gt; veces en una lista.</target>
        </trans-unit>
        <trans-unit id="612d35050e691a1a2b9f22fe6b8f2fde9cb8f9d1" translate="yes" xml:space="preserve">
          <source>Dynamic dispatch</source>
          <target state="translated">Despacho dinámico</target>
        </trans-unit>
        <trans-unit id="edd7dafc098b4b13db6ad466bd4e821198c0337f" translate="yes" xml:space="preserve">
          <source>Dynamic names</source>
          <target state="translated">Nombres dinámicos</target>
        </trans-unit>
        <trans-unit id="46d2782a295d697a8b9e27c2d91c25f66bfd854d" translate="yes" xml:space="preserve">
          <source>Dynamic supervisors</source>
          <target state="translated">Supervisores dinámicos</target>
        </trans-unit>
        <trans-unit id="3aa9130077fcc44c7eb24ab3a909359998b572f0" translate="yes" xml:space="preserve">
          <source>DynamicSupervisor</source>
          <target state="translated">DynamicSupervisor</target>
        </trans-unit>
        <trans-unit id="4981d257018e7d749e02934b79c0b6bdb94f8f95" translate="yes" xml:space="preserve">
          <source>DynamicSupervisor &lt;small&gt;behaviour&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;Comportamiento de&lt;/small&gt; DynamicSupervisor&lt;small&gt;&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="7ba279830cac8f3b7ac440b34f16c258d525250e" translate="yes" xml:space="preserve">
          <source>Dynamically adds a child specification to &lt;code&gt;supervisor&lt;/code&gt; and starts that child.</source>
          <target state="translated">Agrega din&amp;aacute;micamente una especificaci&amp;oacute;n de ni&amp;ntilde;o al &lt;code&gt;supervisor&lt;/code&gt; e inicia ese ni&amp;ntilde;o.</target>
        </trans-unit>
        <trans-unit id="887cf55c60fc1c9af6689bd5e2a2c3b3766133c3" translate="yes" xml:space="preserve">
          <source>Dynamically supervised tasks</source>
          <target state="translated">Tareas dinámicas supervisadas</target>
        </trans-unit>
        <trans-unit id="e0184adedf913b076626646d3f52c3b49c39ad6d" translate="yes" xml:space="preserve">
          <source>E</source>
          <target state="translated">E</target>
        </trans-unit>
        <trans-unit id="5b16ec2483e166fe049f665c022763eabe66f30f" translate="yes" xml:space="preserve">
          <source>EEx</source>
          <target state="translated">EEx</target>
        </trans-unit>
        <trans-unit id="af3993684170f3f24c787f9d7ffb881775da9c68" translate="yes" xml:space="preserve">
          <source>EEx has the concept of engines which allows you to modify or transform the code extracted from the given string or file.</source>
          <target state="translated">EEx tiene el concepto de motores que le permite modificar o transformar el código extraído de la cadena o archivo dado.</target>
        </trans-unit>
        <trans-unit id="818fc332cfd248836c5442317677dfe04bdbbd73" translate="yes" xml:space="preserve">
          <source>EEx stands for Embedded Elixir. It allows you to embed Elixir code inside a string in a robust way.</source>
          <target state="translated">EEx significa Elixir Embebido.Permite incrustar el código de Elixir dentro de una cadena de forma robusta.</target>
        </trans-unit>
        <trans-unit id="22a24f67ecb347cc9015ff6237454fdbf0669653" translate="yes" xml:space="preserve">
          <source>EEx.Engine &lt;small&gt;behaviour&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;Comportamiento&lt;/small&gt; EEx.Engine&lt;small&gt;&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="eebf2acaee05e7c09c816457012d68bbfc96c6f3" translate="yes" xml:space="preserve">
          <source>EEx.SmartEngine</source>
          <target state="translated">EEx.SmartEngine</target>
        </trans-unit>
        <trans-unit id="674e9c18d21c34b87c83982cf9afa4d95159a4be" translate="yes" xml:space="preserve">
          <source>EEx.SyntaxError</source>
          <target state="translated">EEx.SyntaxError</target>
        </trans-unit>
        <trans-unit id="49bba56082c8e3c9fff304ab7864ed3cb3a25fb5" translate="yes" xml:space="preserve">
          <source>EEx.SyntaxError &lt;small&gt;exception&lt;/small&gt;</source>
          <target state="translated">EEx.SyntaxError &lt;small&gt;excepci&amp;oacute;n&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="98d18c239604c617df6f8788536838fd25d8c03d" translate="yes" xml:space="preserve">
          <source>EEx: &lt;code&gt;&amp;lt;%=&lt;/code&gt; in middle and end expressions</source>
          <target state="translated">EEx: &lt;code&gt;&amp;lt;%=&lt;/code&gt; en expresiones intermedias y finales</target>
        </trans-unit>
        <trans-unit id="1b4d835a11a6493d1e10defe1536a05fda39d532" translate="yes" xml:space="preserve">
          <source>ELixir tracks three types of dependencies between modules: compile, exports, and runtime. If a module has a compile time dependency on another module, the caller module has to be recompiled whenever the callee changes. Compile-time dependencies are typically added when using macros or when invoking functions in the module body (outside of functions).</source>
          <target state="translated">ELixir rastrea tres tipos de dependencias entre los módulos:compilación,exportación y tiempo de ejecución.Si un módulo tiene una dependencia de tiempo de compilación con otro módulo,el módulo llamante debe ser recompilado cada vez que cambie el callee.Las dependencias en tiempo de compilación suelen añadirse cuando se utilizan macros o cuando se invocan funciones en el cuerpo del módulo (fuera de las funciones).</target>
        </trans-unit>
        <trans-unit id="7eceb14d6ed554f3e39c3487db659c8d63e28acd" translate="yes" xml:space="preserve">
          <source>ETS</source>
          <target state="translated">ETS</target>
        </trans-unit>
        <trans-unit id="1500176ef8cc8bfbbaf08eb4c1316bcf890f3395" translate="yes" xml:space="preserve">
          <source>ETS (Erlang Term Storage)</source>
          <target state="translated">ETS (Almacenamiento a Término de Erlang)</target>
        </trans-unit>
        <trans-unit id="4f5a2cc3fa91eb59c67ada064593bcea69c5e3b4" translate="yes" xml:space="preserve">
          <source>ETS allows us to store any Elixir term in an in-memory table. Working with ETS tables is done via &lt;a href=&quot;http://www.erlang.org/doc/man/ets.html&quot;&gt;Erlang&amp;rsquo;s &lt;code&gt;:ets&lt;/code&gt; module&lt;/a&gt;:</source>
          <target state="translated">ETS nos permite almacenar cualquier t&amp;eacute;rmino de Elixir en una tabla en memoria. Trabajar con tablas ETS se realiza a trav&amp;eacute;s &lt;a href=&quot;http://www.erlang.org/doc/man/ets.html&quot;&gt;del m&amp;oacute;dulo &lt;code&gt;:ets&lt;/code&gt; &lt;/a&gt; : ets de Erlang :</target>
        </trans-unit>
        <trans-unit id="8e8dd8378100a7f6cf535d73f581bb5835a296a0" translate="yes" xml:space="preserve">
          <source>ETS as a cache</source>
          <target state="translated">El ETS como un caché</target>
        </trans-unit>
        <trans-unit id="0c6b672feadc74b2fa303a786fd5682cec52505f" translate="yes" xml:space="preserve">
          <source>ETS lets you create a table containing tuples. By default, ETS tables are protected, which means only the owner process may write to the table but any other process can read. ETS has some functionality to allow a table to be used as a simple database, a key-value store or as a cache mechanism.</source>
          <target state="translated">El ETS le permite crear una tabla que contiene tuplas.Por defecto,las tablas del ETS están protegidas,lo que significa que sólo el proceso propietario puede escribir en la tabla pero cualquier otro proceso puede leer.ETS tiene algunas funcionalidades para permitir que una tabla sea utilizada como una simple base de datos,un almacén de llaves-valor o como un mecanismo de caché.</target>
        </trans-unit>
        <trans-unit id="52adb6284390fce5741221672f061e71df403d05" translate="yes" xml:space="preserve">
          <source>ETS tables can also be named, allowing us to access them by a given name:</source>
          <target state="translated">Las tablas del ETS también pueden ser nombradas,permitiéndonos acceder a ellas con un nombre determinado:</target>
        </trans-unit>
        <trans-unit id="362cea4d522d64f424e9ad3e438c8000b26fb5c9" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;enumerable&lt;/code&gt; element is passed as argument to the given function &lt;code&gt;fun&lt;/code&gt; and processed by its own task. The tasks will be linked to the current process, similarly to &lt;a href=&quot;#async/1&quot;&gt;&lt;code&gt;async/1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Cada &lt;code&gt;enumerable&lt;/code&gt; s elemento se pasa como argumento a la funci&amp;oacute;n dada &lt;code&gt;fun&lt;/code&gt; y procesado por su propia tarea. Las tareas estar&amp;aacute;n vinculadas al proceso actual, de manera similar a &lt;a href=&quot;#async/1&quot;&gt; &lt;code&gt;async/1&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c70223b508f5fb20c656733438516d9c4a38e207" translate="yes" xml:space="preserve">
          <source>Each application has an environment that stores the application&amp;rsquo;s specific configuration by key. For example, we could store the routing table in the &lt;code&gt;:kv&lt;/code&gt; application environment, giving it a default value and allowing other applications to change the table as needed.</source>
          <target state="translated">Cada aplicaci&amp;oacute;n tiene un entorno que almacena la configuraci&amp;oacute;n espec&amp;iacute;fica de la aplicaci&amp;oacute;n por clave. Por ejemplo, podr&amp;iacute;amos almacenar la tabla de enrutamiento en el entorno de la aplicaci&amp;oacute;n &lt;code&gt;:kv&lt;/code&gt; , d&amp;aacute;ndole un valor predeterminado y permitiendo que otras aplicaciones cambien la tabla seg&amp;uacute;n sea necesario.</target>
        </trans-unit>
        <trans-unit id="3405035bc16c9169ba3e4eb3a0b15b99fd33b0e0" translate="yes" xml:space="preserve">
          <source>Each application has its own environment. The environment is a keyword list that maps atoms to terms. Note that this environment is unrelated to the operating system environment.</source>
          <target state="translated">Cada aplicación tiene su propio entorno.El entorno es una lista de palabras clave que mapea los átomos con términos.Tenga en cuenta que este entorno no está relacionado con el entorno del sistema operativo.</target>
        </trans-unit>
        <trans-unit id="30b77596010e1d94e168b64218473fa0c4476548" translate="yes" xml:space="preserve">
          <source>Each application in our system can be started and stopped. The rules for starting and stopping an application are also defined in the &lt;code&gt;.app&lt;/code&gt; file. When we invoke &lt;code&gt;iex -S mix&lt;/code&gt;, Mix compiles our application and then starts it.</source>
          <target state="translated">Cada aplicaci&amp;oacute;n de nuestro sistema se puede iniciar y detener. Las reglas para iniciar y detener una aplicaci&amp;oacute;n tambi&amp;eacute;n se definen en el archivo &lt;code&gt;.app&lt;/code&gt; . Cuando invocamos &lt;code&gt;iex -S mix&lt;/code&gt; , Mix compila nuestra aplicaci&amp;oacute;n y luego la inicia.</target>
        </trans-unit>
        <trans-unit id="6ee7cee4e35c13e97e0b113c7ad93de2b2e9f9ff" translate="yes" xml:space="preserve">
          <source>Each element in &lt;code&gt;enumerable&lt;/code&gt; is passed as argument to the given function &lt;code&gt;fun&lt;/code&gt; and processed by its own task. The tasks will be spawned under the given &lt;code&gt;supervisor&lt;/code&gt; and linked to the current process, similarly to &lt;a href=&quot;#async/2&quot;&gt;&lt;code&gt;async/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Cada elemento en &lt;code&gt;enumerable&lt;/code&gt; se pasa como argumento a la funci&amp;oacute;n dada &lt;code&gt;fun&lt;/code&gt; y se procesa por su propia tarea. Las tareas se generar&amp;aacute;n bajo el &lt;code&gt;supervisor&lt;/code&gt; dado y se vincular&amp;aacute;n al proceso actual, de manera similar a &lt;a href=&quot;#async/2&quot;&gt; &lt;code&gt;async/2&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0bff2b054449ef93f88ae378fceaa7c3773b512d" translate="yes" xml:space="preserve">
          <source>Each element in &lt;code&gt;enumerable&lt;/code&gt; is passed as argument to the given function &lt;code&gt;fun&lt;/code&gt; and processed by its own task. The tasks will be spawned under the given &lt;code&gt;supervisor&lt;/code&gt; and will not be linked to the current process, similarly to &lt;a href=&quot;#async_nolink/2&quot;&gt;&lt;code&gt;async_nolink/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Cada elemento en &lt;code&gt;enumerable&lt;/code&gt; se pasa como argumento a la funci&amp;oacute;n dada &lt;code&gt;fun&lt;/code&gt; y se procesa por su propia tarea. Las tareas se generar&amp;aacute;n bajo el &lt;code&gt;supervisor&lt;/code&gt; dado y no estar&amp;aacute;n vinculadas al proceso actual, de manera similar a &lt;a href=&quot;#async_nolink/2&quot;&gt; &lt;code&gt;async_nolink/2&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f8ff31374c6e0e1792073cfd7bf59921a2ee8196" translate="yes" xml:space="preserve">
          <source>Each element in &lt;code&gt;enumerable&lt;/code&gt; will be prepended to the given &lt;code&gt;args&lt;/code&gt; and processed by its own task. The tasks will be spawned under the given &lt;code&gt;supervisor&lt;/code&gt; and will not be linked to the current process, similarly to &lt;a href=&quot;#async_nolink/4&quot;&gt;&lt;code&gt;async_nolink/4&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Cada elemento en &lt;code&gt;enumerable&lt;/code&gt; ser&amp;aacute; antepuesto a los &lt;code&gt;args&lt;/code&gt; dados y procesado por su propia tarea. Las tareas se generar&amp;aacute;n bajo el &lt;code&gt;supervisor&lt;/code&gt; dado y no estar&amp;aacute;n vinculadas al proceso actual, de manera similar a &lt;a href=&quot;#async_nolink/4&quot;&gt; &lt;code&gt;async_nolink/4&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3e074b39ec3a1ed372a909c0a3201829b19421e8" translate="yes" xml:space="preserve">
          <source>Each element of &lt;code&gt;enumerable&lt;/code&gt; will be prepended to the given &lt;code&gt;args&lt;/code&gt; and processed by its own task. The tasks will be linked to an intermediate process that is then linked to the current process. This means a failure in a task terminates the current process and a failure in the current process terminates all tasks.</source>
          <target state="translated">Cada elemento de &lt;code&gt;enumerable&lt;/code&gt; ser&amp;aacute; antepuesto a los &lt;code&gt;args&lt;/code&gt; dados y procesado por su propia tarea. Las tareas estar&amp;aacute;n vinculadas a un proceso intermedio que luego se vincula al proceso actual. Esto significa que una falla en una tarea termina el proceso actual y una falla en el proceso actual termina todas las tareas.</target>
        </trans-unit>
        <trans-unit id="ea81b39bec07b5eca51e7cb8e73b08cc88b185e5" translate="yes" xml:space="preserve">
          <source>Each element will be prepended to the given &lt;code&gt;args&lt;/code&gt; and processed by its own task. The tasks will be spawned under the given &lt;code&gt;supervisor&lt;/code&gt; and linked to the current process, similarly to &lt;a href=&quot;#async/4&quot;&gt;&lt;code&gt;async/4&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Cada elemento ser&amp;aacute; antepuesto a los &lt;code&gt;args&lt;/code&gt; dados y procesado por su propia tarea. Las tareas se generar&amp;aacute;n bajo el &lt;code&gt;supervisor&lt;/code&gt; dado y se vincular&amp;aacute;n al proceso actual, de manera similar a &lt;a href=&quot;#async/4&quot;&gt; &lt;code&gt;async/4&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d6a3bdb3211b725603f1e420065f9f512a455e5f" translate="yes" xml:space="preserve">
          <source>Each entry in the registry is associated to the process that has registered the key. If the process crashes, the keys associated to that process are automatically removed. All key comparisons in the registry are done using the match operation (&lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#===/2&quot;&gt;&lt;code&gt;===/2&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">Cada entrada del registro est&amp;aacute; asociada al proceso que ha registrado la clave. Si el proceso falla, las claves asociadas a ese proceso se eliminan autom&amp;aacute;ticamente. Todas las comparaciones de claves en el registro se realizan mediante la operaci&amp;oacute;n de coincidencia ( &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#===/2&quot;&gt; &lt;code&gt;===/2&lt;/code&gt; &lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="77459e85ee4402d66fd92ef0b7844cafe8faeccd" translate="yes" xml:space="preserve">
          <source>Each entry in the registry is associated to the process that has registered the key. If the process crashes, the keys associated to that process are automatically removed. All key comparisons in the registry are done using the match operation (&lt;a href=&quot;kernel#===/2&quot;&gt;&lt;code&gt;===/2&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">Cada entrada del registro est&amp;aacute; asociada al proceso que ha registrado la clave. Si el proceso falla, las claves asociadas a ese proceso se eliminan autom&amp;aacute;ticamente. Todas las comparaciones de claves en el registro se realizan mediante la operaci&amp;oacute;n de coincidencia ( &lt;a href=&quot;kernel#===/2&quot;&gt; &lt;code&gt;===/2&lt;/code&gt; &lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="f51dcc2b38618bcc3fe87f6cb31bfc9d58a91577" translate="yes" xml:space="preserve">
          <source>Each item in the list is a map with the following keys:</source>
          <target state="translated">Cada elemento de la lista es un mapa con las siguientes claves:</target>
        </trans-unit>
        <trans-unit id="532f0099dc0a59c8142722d964bd46289ef70cfc" translate="yes" xml:space="preserve">
          <source>Each key-value pair in the map is converted to a two-element tuple &lt;code&gt;{key, value}&lt;/code&gt; in the resulting list.</source>
          <target state="translated">Cada par clave-valor del mapa se convierte en una tupla &lt;code&gt;{key, value}&lt;/code&gt; dos elementos en la lista resultante.</target>
        </trans-unit>
        <trans-unit id="4934170f741619738531430df9405d17c3b39b24" translate="yes" xml:space="preserve">
          <source>Each module can be decorated with one or more attributes. The following ones are currently defined by Elixir:</source>
          <target state="translated">Cada módulo puede ser decorado con uno o más atributos.Los siguientes están actualmente definidos por Elixir:</target>
        </trans-unit>
        <trans-unit id="9ac8e172618067a3e6bc12be54b49bfe15535ac3" translate="yes" xml:space="preserve">
          <source>Each module gets an &lt;code&gt;__info__/1&lt;/code&gt; function when it's compiled. The function takes one of the following items:</source>
          <target state="translated">Cada m&amp;oacute;dulo obtiene una funci&amp;oacute;n &lt;code&gt;__info__/1&lt;/code&gt; cuando se compila. La funci&amp;oacute;n toma uno de los siguientes elementos:</target>
        </trans-unit>
        <trans-unit id="e4ebc93808a7013b1682e04607e3d5c0727d33dc" translate="yes" xml:space="preserve">
          <source>Each number given to a binary is meant to represent a byte and therefore must go up to 255. Binaries allow modifiers to be given to store numbers bigger than 255 or to convert a code point to its UTF-8 representation:</source>
          <target state="translated">Cada número dado a un binario se supone que representa un byte y por lo tanto debe subir a 255.Los binarios permiten dar modificadores para almacenar números mayores de 255 o para convertir un punto de código a su representación UTF-8:</target>
        </trans-unit>
        <trans-unit id="86d9329e1ed2a43e214726a374900569c7bc6fae" translate="yes" xml:space="preserve">
          <source>Each process started with the application must be listed as a child under the &lt;a href=&quot;https://hexdocs.pm/elixir/Supervisor.html&quot;&gt;&lt;code&gt;Supervisor&lt;/code&gt;&lt;/a&gt; above. We call those &quot;static processes&quot; because they are known upfront. For handling dynamic processes, such as the ones started during requests and other user inputs, look at the &lt;a href=&quot;https://hexdocs.pm/elixir/DynamicSupervisor.html&quot;&gt;&lt;code&gt;DynamicSupervisor&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">Cada proceso iniciado con la solicitud debe figurar como un ni&amp;ntilde;o en el &lt;a href=&quot;https://hexdocs.pm/elixir/Supervisor.html&quot;&gt; &lt;code&gt;Supervisor&lt;/code&gt; &lt;/a&gt; anterior. Llamamos a esos &quot;procesos est&amp;aacute;ticos&quot; porque se conocen desde el principio. Para manejar procesos din&amp;aacute;micos, como los que se inician durante las solicitudes y otras entradas del usuario, consulte el m&amp;oacute;dulo &lt;a href=&quot;https://hexdocs.pm/elixir/DynamicSupervisor.html&quot;&gt; &lt;code&gt;DynamicSupervisor&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="372725c1f82abeb98e09b054fcea454db1d9af25" translate="yes" xml:space="preserve">
          <source>Each process started with the application must be listed as a child under the &lt;a href=&quot;supervisor&quot;&gt;&lt;code&gt;Supervisor&lt;/code&gt;&lt;/a&gt; above. We call those &quot;static processes&quot; because they are known upfront. For handling dynamic processes, such as the ones started during requests and other user inputs, look at the &lt;a href=&quot;dynamicsupervisor&quot;&gt;&lt;code&gt;DynamicSupervisor&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">Cada proceso iniciado con la solicitud debe figurar como un ni&amp;ntilde;o en el &lt;a href=&quot;supervisor&quot;&gt; &lt;code&gt;Supervisor&lt;/code&gt; &lt;/a&gt; anterior. A esos los llamamos &quot;procesos est&amp;aacute;ticos&quot; porque se conocen desde el principio. Para manejar procesos din&amp;aacute;micos, como los que se inician durante las solicitudes y otras entradas del usuario, consulte el m&amp;oacute;dulo &lt;a href=&quot;dynamicsupervisor&quot;&gt; &lt;code&gt;DynamicSupervisor&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b076bdb70baef474140c948c212f1de89050946f" translate="yes" xml:space="preserve">
          <source>Each registered SCM will be asked if they consume this dependency, receiving &lt;code&gt;[github: &quot;foo/bar&quot;]&lt;/code&gt; as argument. Since this option makes sense for the Git SCM, it will return an update list of options while other SCMs would simply return &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">A cada SCM registrado se le preguntar&amp;aacute; si consume esta dependencia, recibiendo &lt;code&gt;[github: &quot;foo/bar&quot;]&lt;/code&gt; como argumento. Dado que esta opci&amp;oacute;n tiene sentido para Git SCM, devolver&amp;aacute; una lista actualizada de opciones mientras que otros SCM simplemente devolver&amp;aacute;n &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0c52364e96da340fb31c3249f2e8693baeb5686f" translate="yes" xml:space="preserve">
          <source>Each task has its own options and sometimes specific configuration to be defined in the &lt;code&gt;project/0&lt;/code&gt; function. You can use &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Help.html&quot;&gt;&lt;code&gt;mix help&lt;/code&gt;&lt;/a&gt; to list all available tasks and &lt;code&gt;mix help NAME&lt;/code&gt; to show help for a particular task.</source>
          <target state="translated">Cada tarea tiene sus propias opciones y, a veces, una configuraci&amp;oacute;n espec&amp;iacute;fica a definir en la funci&amp;oacute;n &lt;code&gt;project/0&lt;/code&gt; . Puede usar la &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Help.html&quot;&gt; &lt;code&gt;mix help&lt;/code&gt; &lt;/a&gt; para enumerar todas las tareas disponibles y la &lt;code&gt;mix help NAME&lt;/code&gt; para mostrar la ayuda para una tarea en particular.</target>
        </trans-unit>
        <trans-unit id="a1a597396bbd78d869061e9cc988eca475a9257e" translate="yes" xml:space="preserve">
          <source>Each task has its own options and sometimes specific configuration to be defined in the &lt;code&gt;project/0&lt;/code&gt; function. You can use &lt;a href=&quot;mix.tasks.help&quot;&gt;&lt;code&gt;mix help&lt;/code&gt;&lt;/a&gt; to list all available tasks and &lt;code&gt;mix help NAME&lt;/code&gt; to show help for a particular task.</source>
          <target state="translated">Cada tarea tiene sus propias opciones y, a veces, una configuraci&amp;oacute;n espec&amp;iacute;fica que se definir&amp;aacute; en la funci&amp;oacute;n &lt;code&gt;project/0&lt;/code&gt; . Puede usar la &lt;a href=&quot;mix.tasks.help&quot;&gt; &lt;code&gt;mix help&lt;/code&gt; &lt;/a&gt; para enumerar todas las tareas disponibles y la &lt;code&gt;mix help NAME&lt;/code&gt; para mostrar la ayuda para una tarea en particular.</target>
        </trans-unit>
        <trans-unit id="bcac1b6f9d120c9722086c7e508489b0226da684" translate="yes" xml:space="preserve">
          <source>Each variable is identified by a tuple of two elements, where the first element is the variable name as an atom and the second element is its context, which may be an atom or an integer.</source>
          <target state="translated">Cada variable se identifica por una tupla de dos elementos,donde el primer elemento es el nombre de la variable como un átomo y el segundo elemento es su contexto,que puede ser un átomo o un entero.</target>
        </trans-unit>
        <trans-unit id="68310c7d97bd5e9d47967e9e9edcb285e94d70ff" translate="yes" xml:space="preserve">
          <source>Eager to learn more? Keep reading!</source>
          <target state="translated">¿Ansioso de aprender más? ¡Sigue leyendo!</target>
        </trans-unit>
        <trans-unit id="773015863b8b24712e29c53fe98994b9728f6381" translate="yes" xml:space="preserve">
          <source>Eager vs Lazy</source>
          <target state="translated">Ansioso vs.Perezoso</target>
        </trans-unit>
        <trans-unit id="28ac06af2cb7839cf14f9821c41dfad421032a0a" translate="yes" xml:space="preserve">
          <source>Echo server</source>
          <target state="translated">Servidor de eco</target>
        </trans-unit>
        <trans-unit id="eeccb169551120a3e6a633e63e844185e028c154" translate="yes" xml:space="preserve">
          <source>Edit the file at &lt;code&gt;lib/kv/registry.ex&lt;/code&gt;, filling in the blanks for the client API:</source>
          <target state="translated">Edite el archivo en &lt;code&gt;lib/kv/registry.ex&lt;/code&gt; , llenando los espacios en blanco para la API del cliente:</target>
        </trans-unit>
        <trans-unit id="ddd5726bf13c26ce5252aef42e6ba8f0c851bd53" translate="yes" xml:space="preserve">
          <source>Elements are compared using &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#===/2&quot;&gt;&lt;code&gt;===/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Los elementos se comparan usando &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#===/2&quot;&gt; &lt;code&gt;===/2&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="25857c2157bff6e7a9f798c89b04873173125f2d" translate="yes" xml:space="preserve">
          <source>Elements are compared using &lt;a href=&quot;kernel#===/2&quot;&gt;&lt;code&gt;===/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Los elementos se comparan usando &lt;a href=&quot;kernel#===/2&quot;&gt; &lt;code&gt;===/2&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b1bc7fb1f226e6f6f3ef7ee47c49d49289229118" translate="yes" xml:space="preserve">
          <source>Elements are only emitted when &lt;code&gt;fun&lt;/code&gt; returns a new value or the &lt;code&gt;enum&lt;/code&gt; finishes.</source>
          <target state="translated">Los elementos solo se emiten cuando &lt;code&gt;fun&lt;/code&gt; devuelve un nuevo valor o finaliza la &lt;code&gt;enum&lt;/code&gt; eraci&amp;oacute;n .</target>
        </trans-unit>
        <trans-unit id="a38ddcfce78b5b0835df229de1f7e325877919bd" translate="yes" xml:space="preserve">
          <source>Elements can be inserted using &lt;a href=&quot;#put/2&quot;&gt;&lt;code&gt;MapSet.put/2&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">Los elementos se pueden insertar usando &lt;a href=&quot;#put/2&quot;&gt; &lt;code&gt;MapSet.put/2&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="9167aadfec3df02db420d4d2b50af0ffd51604f5" translate="yes" xml:space="preserve">
          <source>Elements in a set don't have to be of the same type and they can be populated from an &lt;a href=&quot;https://hexdocs.pm/elixir/Enumerable.html#t:t/0&quot;&gt;enumerable&lt;/a&gt; using &lt;a href=&quot;#new/1&quot;&gt;&lt;code&gt;MapSet.new/1&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">Los elementos de un conjunto no tienen que ser del mismo tipo y se pueden completar desde un &lt;a href=&quot;https://hexdocs.pm/elixir/Enumerable.html#t:t/0&quot;&gt;enumerable&lt;/a&gt; usando &lt;a href=&quot;#new/1&quot;&gt; &lt;code&gt;MapSet.new/1&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="c0c7bf14304705b88f3bf9ecdfcf919293c76e53" translate="yes" xml:space="preserve">
          <source>Elixir</source>
          <target state="translated">Elixir</target>
        </trans-unit>
        <trans-unit id="e5c4daa79e73a93f8dc527746d72ef1e1f99e8dd" translate="yes" xml:space="preserve">
          <source>Elixir 1.5.0 onwards</source>
          <target state="translated">Elixir 1.5.0 en adelante</target>
        </trans-unit>
        <trans-unit id="67dd209de0ff8f0eac333c13b028cb684c348812" translate="yes" xml:space="preserve">
          <source>Elixir 1.9.0 onwards</source>
          <target state="translated">Elixir 1.9.0 en adelante</target>
        </trans-unit>
        <trans-unit id="bff9443fa7cf4ae0bab8d5c8f1f4dab57c2d5acf" translate="yes" xml:space="preserve">
          <source>Elixir Forum</source>
          <target state="translated">Foro de Elixir</target>
        </trans-unit>
        <trans-unit id="de61752fa33c065b078b47c60fdefbfedf94b579" translate="yes" xml:space="preserve">
          <source>Elixir allows developers to attach arbitrary metadata to the documentation. This is done by passing a keyword list to the relevant attribute (such as &lt;code&gt;@moduledoc&lt;/code&gt;, &lt;code&gt;@typedoc&lt;/code&gt;, and &lt;code&gt;@doc&lt;/code&gt;). A commonly used metadata is &lt;code&gt;:since&lt;/code&gt;, which annotates in which version that particular module, function, type, or callback was added, as shown in the example above.</source>
          <target state="translated">Elixir permite a los desarrolladores adjuntar metadatos arbitrarios a la documentaci&amp;oacute;n. Esto se hace pasando una lista de palabras clave al atributo relevante (como &lt;code&gt;@moduledoc&lt;/code&gt; , &lt;code&gt;@typedoc&lt;/code&gt; y &lt;code&gt;@doc&lt;/code&gt; ). Un metadato de uso com&amp;uacute;n es &lt;code&gt;:since&lt;/code&gt; , que indica en qu&amp;eacute; versi&amp;oacute;n se agreg&amp;oacute; ese m&amp;oacute;dulo, funci&amp;oacute;n, tipo o devoluci&amp;oacute;n de llamada en particular, como se muestra en el ejemplo anterior.</target>
        </trans-unit>
        <trans-unit id="3c0ee4efd422df64d926e1699ce27c5bdf0b25e6" translate="yes" xml:space="preserve">
          <source>Elixir allows integers to contain &lt;code&gt;_&lt;/code&gt; to separate digits and provides conveniences to represent integers in other bases:</source>
          <target state="translated">Elixir permite que los n&amp;uacute;meros enteros contengan &lt;code&gt;_&lt;/code&gt; para separar d&amp;iacute;gitos y proporciona conveniencia para representar n&amp;uacute;meros enteros en otras bases:</target>
        </trans-unit>
        <trans-unit id="f75c26877ef871217ff6769618e4b459e83b4aa9" translate="yes" xml:space="preserve">
          <source>Elixir allows us to derive a protocol implementation based on the &lt;code&gt;Any&lt;/code&gt; implementation. Let&amp;rsquo;s first implement &lt;code&gt;Any&lt;/code&gt; as follows:</source>
          <target state="translated">Elixir nos permite derivar una implementaci&amp;oacute;n de protocolo basada en la implementaci&amp;oacute;n &lt;code&gt;Any&lt;/code&gt; . Primero implementemos &lt;code&gt;Any&lt;/code&gt; de la siguiente manera:</target>
        </trans-unit>
        <trans-unit id="83c382416abbdb750f7a0b52274c72d3eeffa512" translate="yes" xml:space="preserve">
          <source>Elixir allows variables to be rebound via static single assignment:</source>
          <target state="translated">El Elixir permite que las variables reboten a través de una única asignación estática:</target>
        </trans-unit>
        <trans-unit id="0e0d77b67e657e2b9066c1ff6972927494c31617" translate="yes" xml:space="preserve">
          <source>Elixir allows you to skip the leading &lt;code&gt;:&lt;/code&gt; for the atoms &lt;code&gt;false&lt;/code&gt;, &lt;code&gt;true&lt;/code&gt; and &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">Elixir te permite saltarte lo principal &lt;code&gt;:&lt;/code&gt; para los &amp;aacute;tomos &lt;code&gt;false&lt;/code&gt; , &lt;code&gt;true&lt;/code&gt; y &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="413742c1494e68731a98eab50395aa0ab07b3d83" translate="yes" xml:space="preserve">
          <source>Elixir allows you to skip the leading &lt;code&gt;:&lt;/code&gt; for the atoms &lt;code&gt;false&lt;/code&gt;, &lt;code&gt;true&lt;/code&gt;, and &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">Elixir le permite omitir el encabezado &lt;code&gt;:&lt;/code&gt; para los &amp;aacute;tomos &lt;code&gt;false&lt;/code&gt; , &lt;code&gt;true&lt;/code&gt; y &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="39ff842a6a4a3cf98a11fae4fd4498e3695c470e" translate="yes" xml:space="preserve">
          <source>Elixir already provides mechanisms to write your everyday code in a simple and readable fashion by using its data structures and functions. Macros should only be used as a last resort. Remember that &lt;strong&gt;explicit is better than implicit&lt;/strong&gt;. &lt;strong&gt;Clear code is better than concise code.&lt;/strong&gt;</source>
          <target state="translated">Elixir ya proporciona mecanismos para escribir su c&amp;oacute;digo diario de una manera simple y legible utilizando sus estructuras de datos y funciones. Las macros solo deben usarse como &amp;uacute;ltimo recurso. Recuerde que &lt;strong&gt;expl&amp;iacute;cito es mejor que impl&amp;iacute;cito&lt;/strong&gt; . &lt;strong&gt;El c&amp;oacute;digo claro es mejor que el c&amp;oacute;digo conciso.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c3c84bd869e800cf00a0f15faeb1fec6f09ff020" translate="yes" xml:space="preserve">
          <source>Elixir already provides mechanisms to write your everyday code in a simple and readable fashion by using its data structures and functions. Macros should only be used as a last resort. Remember that &lt;strong&gt;explicit is better than implicit&lt;/strong&gt;. &lt;strong&gt;Clear code is better than concise code&lt;/strong&gt;.</source>
          <target state="translated">Elixir ya proporciona mecanismos para escribir su c&amp;oacute;digo diario de una manera simple y legible utilizando sus estructuras de datos y funciones. Las macros solo deben usarse como &amp;uacute;ltimo recurso. Recuerde que &lt;strong&gt;expl&amp;iacute;cito es mejor que impl&amp;iacute;cito&lt;/strong&gt; . &lt;strong&gt;El c&amp;oacute;digo claro es mejor que el c&amp;oacute;digo conciso&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="04d508ddfa3159bfde64248d0cbc115d950cb551" translate="yes" xml:space="preserve">
          <source>Elixir also accepts by default the segment to be a literal string or a literal charlist, which are by default expanded to integers:</source>
          <target state="translated">Elixir también acepta por defecto que el segmento sea una cadena literal o una lista de caracteres literales,que por defecto se amplían a números enteros:</target>
        </trans-unit>
        <trans-unit id="738cbc7a97733fcad20b5d4c9dce828da97453d5" translate="yes" xml:space="preserve">
          <source>Elixir also allows developers to enforce certain keys must always be given when building the struct:</source>
          <target state="translated">Elixir también permite a los desarrolladores hacer cumplir ciertas claves que siempre se deben dar al construir la estructura:</target>
        </trans-unit>
        <trans-unit id="b2aeb44fb689a73ee1106300bdf2d7f03241fd14" translate="yes" xml:space="preserve">
          <source>Elixir also contains an &lt;a href=&quot;#ensure_compiled/1&quot;&gt;&lt;code&gt;ensure_compiled/1&lt;/code&gt;&lt;/a&gt; function that is a superset of &lt;a href=&quot;#ensure_loaded/1&quot;&gt;&lt;code&gt;ensure_loaded/1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Elixir tambi&amp;eacute;n contiene una funci&amp;oacute;n &lt;a href=&quot;#ensure_compiled/1&quot;&gt; &lt;code&gt;ensure_compiled/1&lt;/code&gt; &lt;/a&gt; que es un superconjunto de &lt;a href=&quot;#ensure_loaded/1&quot;&gt; &lt;code&gt;ensure_loaded/1&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1ca22ed394bb9b18d990dbe14484b3d50b19e9ce" translate="yes" xml:space="preserve">
          <source>Elixir also has special forms that are always imported and cannot be skipped. These are described in &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.SpecialForms.html&quot;&gt;&lt;code&gt;Kernel.SpecialForms&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Elixir tambi&amp;eacute;n tiene formas especiales que siempre se importan y no se pueden omitir. Estos se describen en &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.SpecialForms.html&quot;&gt; &lt;code&gt;Kernel.SpecialForms&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9bac89af66dd6a427b4aa3efe3deb03cf5a1fe14" translate="yes" xml:space="preserve">
          <source>Elixir also has special forms that are always imported and cannot be skipped. These are described in &lt;a href=&quot;kernel.specialforms&quot;&gt;&lt;code&gt;Kernel.SpecialForms&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Elixir tambi&amp;eacute;n tiene formas especiales que siempre se importan y no se pueden omitir. Estos se describen en &lt;a href=&quot;kernel.specialforms&quot;&gt; &lt;code&gt;Kernel.SpecialForms&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d27fae45dd0d77eb7585ffc475445da313d3682e" translate="yes" xml:space="preserve">
          <source>Elixir also includes five special forms that follow the double underscore format: &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.SpecialForms.html#__CALLER__/0&quot;&gt;&lt;code&gt;__CALLER__/0&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.SpecialForms.html#__DIR__/0&quot;&gt;&lt;code&gt;__DIR__/0&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.SpecialForms.html#__ENV__/0&quot;&gt;&lt;code&gt;__ENV__/0&lt;/code&gt;&lt;/a&gt;and &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.SpecialForms.html#__MODULE__/0&quot;&gt;&lt;code&gt;__MODULE__/0&lt;/code&gt;&lt;/a&gt; retrieve compile-time information about the current environment, while &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.SpecialForms.html#__STACKTRACE__/0&quot;&gt;&lt;code&gt;__STACKTRACE__/0&lt;/code&gt;&lt;/a&gt; retrieves the stacktrace for the current exception.</source>
          <target state="translated">Elixir tambi&amp;eacute;n incluye cinco formas especiales que siguen el formato de doble subrayado: &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.SpecialForms.html#__CALLER__/0&quot;&gt; &lt;code&gt;__CALLER__/0&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.SpecialForms.html#__DIR__/0&quot;&gt; &lt;code&gt;__DIR__/0&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.SpecialForms.html#__ENV__/0&quot;&gt; &lt;code&gt;__ENV__/0&lt;/code&gt; &lt;/a&gt; y &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.SpecialForms.html#__MODULE__/0&quot;&gt; &lt;code&gt;__MODULE__/0&lt;/code&gt; &lt;/a&gt; recuperan informaci&amp;oacute;n en tiempo de compilaci&amp;oacute;n sobre el entorno actual, mientras que &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.SpecialForms.html#__STACKTRACE__/0&quot;&gt; &lt;code&gt;__STACKTRACE__/0&lt;/code&gt; &lt;/a&gt; recupera el stacktrace para la excepci&amp;oacute;n actual.</target>
        </trans-unit>
        <trans-unit id="f6faa91bfb900d671613a6ab47e73da0ae09fa34" translate="yes" xml:space="preserve">
          <source>Elixir also includes five special forms that follow the double underscore format: &lt;a href=&quot;kernel.specialforms#__CALLER__/0&quot;&gt;&lt;code&gt;__CALLER__/0&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;kernel.specialforms#__DIR__/0&quot;&gt;&lt;code&gt;__DIR__/0&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;kernel.specialforms#__ENV__/0&quot;&gt;&lt;code&gt;__ENV__/0&lt;/code&gt;&lt;/a&gt;and &lt;a href=&quot;kernel.specialforms#__MODULE__/0&quot;&gt;&lt;code&gt;__MODULE__/0&lt;/code&gt;&lt;/a&gt; retrieve compile-time information about the current environment, while &lt;a href=&quot;kernel.specialforms#__STACKTRACE__/0&quot;&gt;&lt;code&gt;__STACKTRACE__/0&lt;/code&gt;&lt;/a&gt; retrieves the stacktrace for the current exception.</source>
          <target state="translated">Elixir tambi&amp;eacute;n incluye cinco formas especiales que siguen el formato de doble subrayado: &lt;a href=&quot;kernel.specialforms#__CALLER__/0&quot;&gt; &lt;code&gt;__CALLER__/0&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;kernel.specialforms#__DIR__/0&quot;&gt; &lt;code&gt;__DIR__/0&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;kernel.specialforms#__ENV__/0&quot;&gt; &lt;code&gt;__ENV__/0&lt;/code&gt; &lt;/a&gt; y &lt;a href=&quot;kernel.specialforms#__MODULE__/0&quot;&gt; &lt;code&gt;__MODULE__/0&lt;/code&gt; &lt;/a&gt; recuperan informaci&amp;oacute;n en tiempo de compilaci&amp;oacute;n sobre el entorno actual, mientras que &lt;a href=&quot;kernel.specialforms#__STACKTRACE__/0&quot;&gt; &lt;code&gt;__STACKTRACE__/0&lt;/code&gt; &lt;/a&gt; recupera el seguimiento de pila para la excepci&amp;oacute;n actual.</target>
        </trans-unit>
        <trans-unit id="243375bae75a446726d90d677eb7c983b489e516" translate="yes" xml:space="preserve">
          <source>Elixir also leverages pattern matching and guards in function clauses to provide clear error messages in case invalid arguments are given.</source>
          <target state="translated">Elixir también aprovecha la coincidencia de patrones y guarda en cláusulas de función para proporcionar mensajes de error claros en caso de que se den argumentos inválidos.</target>
        </trans-unit>
        <trans-unit id="e898bf471d8f0d3097ac913073c090b0a995d7eb" translate="yes" xml:space="preserve">
          <source>Elixir also provides &lt;code&gt;++&lt;/code&gt; and &lt;code&gt;--&lt;/code&gt; to manipulate lists:</source>
          <target state="translated">Elixir tambi&amp;eacute;n proporciona &lt;code&gt;++&lt;/code&gt; y &lt;code&gt;--&lt;/code&gt; para manipular listas:</target>
        </trans-unit>
        <trans-unit id="ac31c787a75befbe1897dbbb6fdd942221f00c86" translate="yes" xml:space="preserve">
          <source>Elixir also provides &lt;code&gt;==&lt;/code&gt;, &lt;code&gt;!=&lt;/code&gt;, &lt;code&gt;===&lt;/code&gt;, &lt;code&gt;!==&lt;/code&gt;, &lt;code&gt;&amp;lt;=&lt;/code&gt;, &lt;code&gt;&amp;gt;=&lt;/code&gt;, &lt;code&gt;&amp;lt;&lt;/code&gt; and &lt;code&gt;&amp;gt;&lt;/code&gt; as comparison operators:</source>
          <target state="translated">Elixir tambi&amp;eacute;n proporciona &lt;code&gt;==&lt;/code&gt; , &lt;code&gt;!=&lt;/code&gt; , &lt;code&gt;===&lt;/code&gt; , &lt;code&gt;!==&lt;/code&gt; , &lt;code&gt;&amp;lt;=&lt;/code&gt; , &lt;code&gt;&amp;gt;=&lt;/code&gt; , &lt;code&gt;&amp;lt;&lt;/code&gt; Y &lt;code&gt;&amp;gt;&lt;/code&gt; como operadores de comparaci&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="969c208849fcc11446141a26b255b57b75a2b0ba" translate="yes" xml:space="preserve">
          <source>Elixir also provides &lt;code&gt;Port&lt;/code&gt;, &lt;code&gt;Reference&lt;/code&gt;, and &lt;code&gt;PID&lt;/code&gt; as data types (usually used in process communication), and we will take a quick look at them when talking about processes. For now, let&amp;rsquo;s take a look at some of the basic operators that go with our basic types.</source>
          <target state="translated">Elixir tambi&amp;eacute;n proporciona &lt;code&gt;Port&lt;/code&gt; , &lt;code&gt;Reference&lt;/code&gt; y &lt;code&gt;PID&lt;/code&gt; como tipos de datos (generalmente utilizados en la comunicaci&amp;oacute;n de procesos), y los veremos r&amp;aacute;pidamente cuando hablemos de procesos. Por ahora, echemos un vistazo a algunos de los operadores b&amp;aacute;sicos que van con nuestros tipos b&amp;aacute;sicos.</target>
        </trans-unit>
        <trans-unit id="dd8a8082108a2f1897c7e7583cc32113fdc162fe" translate="yes" xml:space="preserve">
          <source>Elixir also provides anonymous functions. Anonymous functions allow us to store and pass executable code around as if it was an integer or a string. They are delimited by the keywords &lt;code&gt;fn&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt;:</source>
          <target state="translated">Elixir tambi&amp;eacute;n proporciona funciones an&amp;oacute;nimas. Las funciones an&amp;oacute;nimas nos permiten almacenar y pasar c&amp;oacute;digo ejecutable como si fuera un entero o una cadena. Est&amp;aacute;n delimitados por las palabras clave &lt;code&gt;fn&lt;/code&gt; y &lt;code&gt;end&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="f6f4bfc221320e14428c9be4379f06c74f568d51" translate="yes" xml:space="preserve">
          <source>Elixir also provides other data types that are built on top of the types listed above. Some of them are:</source>
          <target state="translated">Elixir también proporciona otros tipos de datos que se construyen sobre los tipos mencionados anteriormente.Algunos de ellos son:</target>
        </trans-unit>
        <trans-unit id="9cf0686be60034d3cedafe5362a85407c3741f2a" translate="yes" xml:space="preserve">
          <source>Elixir also provides ranges:</source>
          <target state="translated">El elixir también proporciona rangos:</target>
        </trans-unit>
        <trans-unit id="5fcce84b0f48ff34d06fe32176864fe647eb61ef" translate="yes" xml:space="preserve">
          <source>Elixir also provides three boolean operators: &lt;code&gt;or&lt;/code&gt;, &lt;code&gt;and&lt;/code&gt; and &lt;code&gt;not&lt;/code&gt;. These operators are strict in the sense that they expect something that evaluates to a boolean (&lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;) as their first argument:</source>
          <target state="translated">Elixir tambi&amp;eacute;n proporciona tres operadores booleanos: &lt;code&gt;or&lt;/code&gt; , &lt;code&gt;and&lt;/code&gt; and &lt;code&gt;not&lt;/code&gt; . Estos operadores son estrictos en el sentido de que esperan algo que se eval&amp;uacute;e como un booleano ( &lt;code&gt;true&lt;/code&gt; o &lt;code&gt;false&lt;/code&gt; ) como su primer argumento:</target>
        </trans-unit>
        <trans-unit id="8d3fab2e2b3e4ed4bda1748059118a3b75cf1e13" translate="yes" xml:space="preserve">
          <source>Elixir also supports &lt;code&gt;left not in right&lt;/code&gt;, which evaluates to &lt;code&gt;not(left in right)&lt;/code&gt;:</source>
          <target state="translated">Elixir tambi&amp;eacute;n admite &lt;code&gt;left not in right&lt;/code&gt; , que se eval&amp;uacute;a como &lt;code&gt;not(left in right)&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="5a36737e425de601f0dbbe73bf7e68eed9cd0ed3" translate="yes" xml:space="preserve">
          <source>Elixir also supports Unicode in identifiers since Elixir v1.5, as defined in the &lt;a href=&quot;https://unicode.org/reports/tr31/&quot;&gt;Unicode Annex #31&lt;/a&gt;. The focus of this document is to describe how Elixir implements the requirements outlined in the Unicode Annex. These requirements are referred to as R1, R6 and so on.</source>
          <target state="translated">Elixir tambi&amp;eacute;n admite Unicode en identificadores desde Elixir v1.5, como se define en el &lt;a href=&quot;https://unicode.org/reports/tr31/&quot;&gt;Anexo # 31 de Unicode&lt;/a&gt; . El enfoque de este documento es describir c&amp;oacute;mo Elixir implementa los requisitos descritos en el Anexo Unicode. Estos requisitos se denominan R1, R6, etc.</target>
        </trans-unit>
        <trans-unit id="831831bd1adbcc4e3da08a8f57e2923a4e93799a" translate="yes" xml:space="preserve">
          <source>Elixir also supports a syntax where if the last argument of a call is a keyword list then the square brackets can be skipped. This means that the following:</source>
          <target state="translated">Elixir también soporta una sintaxis en la que si el último argumento de una llamada es una lista de palabras clave,entonces se pueden saltar los corchetes.Esto significa que lo siguiente:</target>
        </trans-unit>
        <trans-unit id="e5d64f0301ab6ac559b63f1c82cbf0dfd37dce82" translate="yes" xml:space="preserve">
          <source>Elixir also supports formatting Erlang reports using Elixir syntax. This can be controlled with two configurations:</source>
          <target state="translated">Elixir también admite el formato de los informes Erlang utilizando la sintaxis de Elixir.Esto puede ser controlado con dos configuraciones:</target>
        </trans-unit>
        <trans-unit id="51de5cd58455d962f06640f299cca5e324e9a622" translate="yes" xml:space="preserve">
          <source>Elixir also supports private macros via &lt;code&gt;defmacrop&lt;/code&gt;. As private functions, these macros are only available inside the module that defines them, and only at compilation time.</source>
          <target state="translated">Elixir tambi&amp;eacute;n admite macros privadas a trav&amp;eacute;s de &lt;code&gt;defmacrop&lt;/code&gt; . Como funciones privadas, estas macros solo est&amp;aacute;n disponibles dentro del m&amp;oacute;dulo que las define, y solo en tiempo de compilaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="f11824c210053777bec7ddf3a89c32be210d45f2" translate="yes" xml:space="preserve">
          <source>Elixir also supports shortcut notations for entering binary, octal, and hexadecimal numbers:</source>
          <target state="translated">El Elixir también soporta notaciones de atajos para introducir números binarios,octales y hexadecimales:</target>
        </trans-unit>
        <trans-unit id="6b48fb3c07925bbce80ec4c8c677ff0705ab892b" translate="yes" xml:space="preserve">
          <source>Elixir also supports string interpolation:</source>
          <target state="translated">El elixir también soporta la interpolación de las cuerdas:</target>
        </trans-unit>
        <trans-unit id="f27c2220090ae1ef4a23c356a5a485deee8ca35d" translate="yes" xml:space="preserve">
          <source>Elixir applies bug fixes only to the latest minor branch. Security patches are available for the last 5 minor branches:</source>
          <target state="translated">Elixir aplica correcciones de errores sólo a la última rama menor.Los parches de seguridad están disponibles para las últimas 5 ramas menores:</target>
        </trans-unit>
        <trans-unit id="cda5c07ad4a993425301fa7396f1616f92211ddb" translate="yes" xml:space="preserve">
          <source>Elixir backends can be configured directly under the &lt;code&gt;:logger&lt;/code&gt; application in your &lt;code&gt;config/config.exs&lt;/code&gt;:</source>
          <target state="translated">Los backends de Elixir se pueden configurar directamente bajo la aplicaci&amp;oacute;n &lt;code&gt;:logger&lt;/code&gt; en su &lt;code&gt;config/config.exs&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="e561bb8baee392958755d80698909955398d5251" translate="yes" xml:space="preserve">
          <source>Elixir backends run in a separate process which comes with overload protection. However, because this process is a single GenEvent, any long running action should be avoided, as it can lead to bottlenecks in the system</source>
          <target state="translated">Los backends de los elixires se ejecutan en un proceso separado que viene con protección contra sobrecargas.Sin embargo,debido a que este proceso es un único GenEvent,cualquier acción de larga duración debe ser evitada,ya que puede conducir a cuellos de botella en el sistema</target>
        </trans-unit>
        <trans-unit id="1480fcb21427da507d41fe00e9730d3102cc1601" translate="yes" xml:space="preserve">
          <source>Elixir brings the concept of module attributes from Erlang. For example:</source>
          <target state="translated">Elixir trae el concepto de los atributos de los módulos de Erlang.Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="f52903a1f8e7fe32784dca96bfb06586e6419189" translate="yes" xml:space="preserve">
          <source>Elixir build information.</source>
          <target state="translated">La información de la construcción del elixir.</target>
        </trans-unit>
        <trans-unit id="b2a6e08225deb1351d7c526d4a6fc2d20b9e7df8" translate="yes" xml:space="preserve">
          <source>Elixir comes with a notation for declaring types and specifications. Elixir is a dynamically typed language, and as such, type specifications are never used by the compiler to optimize or modify code. Still, using type specifications is useful because:</source>
          <target state="translated">El Elixir viene con una anotación para declarar los tipos y especificaciones.Elixir es un lenguaje escrito dinámicamente,y como tal,las especificaciones de tipo nunca son utilizadas por el compilador para optimizar o modificar el código.Aún así,el uso de especificaciones de tipo es útil porque:</target>
        </trans-unit>
        <trans-unit id="93e98cb33410c274eb01c0b51b9f879f209f597d" translate="yes" xml:space="preserve">
          <source>Elixir converts switches to underscored atoms, so &lt;code&gt;--source-path&lt;/code&gt; becomes &lt;code&gt;:source_path&lt;/code&gt;. This is done to better suit Elixir conventions. However, this means that switches can't contain underscores and switches that do contain underscores are always returned in the list of invalid switches.</source>
          <target state="translated">Elixir convierte los conmutadores en &amp;aacute;tomos subrayados, por lo que &lt;code&gt;--source-path&lt;/code&gt; se convierte en &lt;code&gt;:source_path&lt;/code&gt; . Esto se hace para adaptarse mejor a las convenciones de Elixir. Sin embargo, esto significa que los modificadores no pueden contener guiones bajos y los que s&amp;iacute; contienen guiones bajos siempre se devuelven en la lista de modificadores no v&amp;aacute;lidos.</target>
        </trans-unit>
        <trans-unit id="0c34f7340cb61df5785bd5c3a3996417777eeba7" translate="yes" xml:space="preserve">
          <source>Elixir custom backends</source>
          <target state="translated">Los respaldos personalizados de los elixires</target>
        </trans-unit>
        <trans-unit id="515cdde695b80400042e85d03697fe8c3de3f321" translate="yes" xml:space="preserve">
          <source>Elixir deprecations happen in 3 steps:</source>
          <target state="translated">La depreciación del elixir se produce en tres pasos:</target>
        </trans-unit>
        <trans-unit id="408fc2d27b6f9604c990c32c8ff3bc032eba3849" translate="yes" xml:space="preserve">
          <source>Elixir developers must use &lt;code&gt;snake_case&lt;/code&gt; when defining variables, function names, module attributes, and the like:</source>
          <target state="translated">Los desarrolladores de Elixir deben usar &lt;code&gt;snake_case&lt;/code&gt; al definir variables, nombres de funciones, atributos de m&amp;oacute;dulos y similares:</target>
        </trans-unit>
        <trans-unit id="7ea52283db054d97df43a259e29d9ebc73278a8f" translate="yes" xml:space="preserve">
          <source>Elixir developers must use &lt;code&gt;snake_case&lt;/code&gt; when defining variables, function names, module attributes, etc.:</source>
          <target state="translated">Los desarrolladores de Elixir deben usar &lt;code&gt;snake_case&lt;/code&gt; al definir variables, nombres de funciones, atributos de m&amp;oacute;dulos, etc.</target>
        </trans-unit>
        <trans-unit id="3fdde18bd0e2fa1e6f5b249dcbd96934a496c8e2" translate="yes" xml:space="preserve">
          <source>Elixir developers often use module attributes when they wish to make a value more visible or reusable:</source>
          <target state="translated">Los desarrolladores de Elixir suelen utilizar atributos de módulos cuando desean que un valor sea más visible o reutilizable:</target>
        </trans-unit>
        <trans-unit id="67460a48d2b2975fa71d28207c9deda3618cb78d" translate="yes" xml:space="preserve">
          <source>Elixir developers typically prefer to use the &lt;code&gt;map.field&lt;/code&gt; syntax and pattern matching instead of the functions in the &lt;code&gt;Map&lt;/code&gt; module when working with maps because they lead to an assertive style of programming. &lt;a href=&quot;http://blog.plataformatec.com.br/2014/09/writing-assertive-code-with-elixir/&quot;&gt;This blog post&lt;/a&gt; provides insight and examples on how you get more concise and faster software by writing assertive code in Elixir.</source>
          <target state="translated">Los desarrolladores de Elixir normalmente prefieren usar la sintaxis &lt;code&gt;map.field&lt;/code&gt; y la coincidencia de patrones en lugar de las funciones del m&amp;oacute;dulo &lt;code&gt;Map&lt;/code&gt; cuando trabajan con mapas porque conducen a un estilo de programaci&amp;oacute;n asertivo. &lt;a href=&quot;http://blog.plataformatec.com.br/2014/09/writing-assertive-code-with-elixir/&quot;&gt;Esta publicaci&amp;oacute;n de blog&lt;/a&gt; proporciona informaci&amp;oacute;n y ejemplos sobre c&amp;oacute;mo obtener software m&amp;aacute;s conciso y r&amp;aacute;pido escribiendo c&amp;oacute;digo asertivo en Elixir.</target>
        </trans-unit>
        <trans-unit id="a06f21bbf8d0fbad80b3654800782c5ec40cbcc7" translate="yes" xml:space="preserve">
          <source>Elixir developers typically prefer to use the &lt;code&gt;map.field&lt;/code&gt; syntax and pattern matching instead of the functions in the &lt;code&gt;Map&lt;/code&gt; module when working with maps because they lead to an assertive style of programming. &lt;a href=&quot;https://dashbit.co/blog/writing-assertive-code-with-elixir&quot;&gt;This blog post by Jos&amp;eacute; Valim&lt;/a&gt; provides insight and examples on how you get more concise and faster software by writing assertive code in Elixir.</source>
          <target state="translated">Los desarrolladores de Elixir normalmente prefieren usar la sintaxis &lt;code&gt;map.field&lt;/code&gt; y la coincidencia de patrones en lugar de las funciones del m&amp;oacute;dulo &lt;code&gt;Map&lt;/code&gt; cuando trabajan con mapas porque conducen a un estilo de programaci&amp;oacute;n asertivo. &lt;a href=&quot;https://dashbit.co/blog/writing-assertive-code-with-elixir&quot;&gt;Esta publicaci&amp;oacute;n de blog de Jos&amp;eacute; Valim&lt;/a&gt; proporciona informaci&amp;oacute;n y ejemplos sobre c&amp;oacute;mo obtener software m&amp;aacute;s conciso y r&amp;aacute;pido escribiendo c&amp;oacute;digo asertivo en Elixir.</target>
        </trans-unit>
        <trans-unit id="c6ccd31147a48e978a78387a61b5eaefec5c15c1" translate="yes" xml:space="preserve">
          <source>Elixir developers will often use module attributes as constants:</source>
          <target state="translated">Los desarrolladores de Elixir suelen utilizar los atributos de los módulos como constantes:</target>
        </trans-unit>
        <trans-unit id="7edf337af4809fac0491b9f969182b600dc4a216" translate="yes" xml:space="preserve">
          <source>Elixir discourages the use of the &lt;code&gt;string()&lt;/code&gt; type. The &lt;code&gt;string()&lt;/code&gt; type refers to Erlang strings, which are known as &quot;charlists&quot; in Elixir. They do not refer to Elixir strings, which are UTF-8 encoded binaries. To avoid confusion, if you attempt to use the type &lt;code&gt;string()&lt;/code&gt;, Elixir will emit a warning. You should use &lt;code&gt;charlist()&lt;/code&gt;, &lt;code&gt;nonempty_charlist()&lt;/code&gt;, &lt;code&gt;binary()&lt;/code&gt; or &lt;code&gt;String.t()&lt;/code&gt; accordingly, or any of the several literal representations for these types.</source>
          <target state="translated">Elixir desaconseja el uso del tipo &lt;code&gt;string()&lt;/code&gt; . El tipo &lt;code&gt;string()&lt;/code&gt; refiere a cadenas de Erlang, que se conocen como &quot;charlists&quot; en Elixir. No se refieren a cadenas de Elixir, que son binarios codificados en UTF-8. Para evitar confusiones, si intenta utilizar el tipo &lt;code&gt;string()&lt;/code&gt; , Elixir emitir&amp;aacute; una advertencia. Debe usar &lt;code&gt;charlist()&lt;/code&gt; , &lt;code&gt;nonempty_charlist()&lt;/code&gt; , &lt;code&gt;binary()&lt;/code&gt; o &lt;code&gt;String.t()&lt;/code&gt; consecuencia, o cualquiera de las varias representaciones literales para estos tipos.</target>
        </trans-unit>
        <trans-unit id="d6df36f3b70e0d4fb5ddb48d10dbf25423b1cc5a" translate="yes" xml:space="preserve">
          <source>Elixir documentation also includes supporting documents under the &quot;Pages&quot; section. Those are:</source>
          <target state="translated">La documentación de Elixir también incluye documentos de apoyo en la sección &quot;Páginas&quot;.Esos son:</target>
        </trans-unit>
        <trans-unit id="dfbdabad266a6ed24abe7282e3054447cc34c95a" translate="yes" xml:space="preserve">
          <source>Elixir documentation is written using Markdown. There are plenty of guides on Markdown online, we recommend the ones available at GitHub as a getting started point:</source>
          <target state="translated">La documentación del elixir se escribe usando Markdown.Hay muchas guías sobre Markdown en la red,recomendamos las disponibles en GitHub como punto de partida:</target>
        </trans-unit>
        <trans-unit id="b8ad464d7c3f98c28d6c1301d748b4474f625349" translate="yes" xml:space="preserve">
          <source>Elixir does not allow the use of ZWJ or ZWNJ in identifiers and therefore does not implement R1a. R1b is guaranteed for backwards compatibility purposes.</source>
          <target state="translated">Elixir no permite el uso de ZWJ o ZWNJ en los identificadores y por lo tanto no implementa la R1a.R1b está garantizado para fines de compatibilidad con el pasado.</target>
        </trans-unit>
        <trans-unit id="d746cd61df3db6f2fe47fafb3741869cc1431ba6" translate="yes" xml:space="preserve">
          <source>Elixir does not contain a function similar to &lt;code&gt;printf&lt;/code&gt; found in C and other languages. Luckily, the Erlang standard library functions &lt;code&gt;:io.format/2&lt;/code&gt; and &lt;code&gt;:io_lib.format/2&lt;/code&gt; may be used. The first formats to terminal output, while the second formats to an iolist. The format specifiers differ from &lt;code&gt;printf&lt;/code&gt;, &lt;a href=&quot;http://erlang.org/doc/man/io.html#format-1&quot;&gt;refer to the Erlang documentation for details&lt;/a&gt;.</source>
          <target state="translated">Elixir no contiene una funci&amp;oacute;n similar a &lt;code&gt;printf&lt;/code&gt; que se encuentra en C y otros lenguajes. Afortunadamente, se pueden utilizar las funciones de biblioteca est&amp;aacute;ndar de Erlang &lt;code&gt;:io.format/2&lt;/code&gt; y &lt;code&gt;:io_lib.format/2&lt;/code&gt; . El primer formato a la salida del terminal, mientras que el segundo formatea a una iolist. Los especificadores de formato difieren de &lt;code&gt;printf&lt;/code&gt; , &lt;a href=&quot;http://erlang.org/doc/man/io.html#format-1&quot;&gt;consulte la documentaci&amp;oacute;n de Erlang para obtener m&amp;aacute;s detalles&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="979dd9d85c61d8b521a5dc2ef6b2263883c16c08" translate="yes" xml:space="preserve">
          <source>Elixir has a handful of reserved attributes. Here are a few of them, the most commonly used ones:</source>
          <target state="translated">El elixir tiene un puñado de atributos reservados.Aquí hay algunos de ellos,los más utilizados:</target>
        </trans-unit>
        <trans-unit id="da143eaa5f18150282df48049071c1cc1a0e242a" translate="yes" xml:space="preserve">
          <source>Elixir has functions, like &lt;a href=&quot;#and/2&quot;&gt;&lt;code&gt;and/2&lt;/code&gt;&lt;/a&gt;, that &lt;em&gt;only&lt;/em&gt; work with booleans, but also functions that work with these truthy/falsy values, like &lt;a href=&quot;#&amp;amp;&amp;amp;/2&quot;&gt;&lt;code&gt;&amp;amp;&amp;amp;/2&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#!/1&quot;&gt;&lt;code&gt;!/1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Elixir tiene funciones, como &lt;a href=&quot;#and/2&quot;&gt; &lt;code&gt;and/2&lt;/code&gt; &lt;/a&gt; , que &lt;em&gt;solo&lt;/em&gt; funcionan con valores booleanos, pero tambi&amp;eacute;n funciones que funcionan con estos valores de verdad / falsedad, como &lt;a href=&quot;#&amp;amp;&amp;amp;/2&quot;&gt; &lt;code&gt;&amp;amp;&amp;amp;/2&lt;/code&gt; &lt;/a&gt; y &lt;a href=&quot;#!/1&quot;&gt; &lt;code&gt;!/1&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="88f2b25faa45986049480c976c00dd5855a6e36c" translate="yes" xml:space="preserve">
          <source>Elixir has three error mechanisms: errors, throws, and exits. In this chapter, we will explore each of them and include remarks about when each should be used.</source>
          <target state="translated">El Elixir tiene tres mecanismos de error:errores,lanzamientos y salidas.En este capítulo,exploraremos cada uno de ellos e incluiremos observaciones sobre cuándo debe utilizarse cada uno.</target>
        </trans-unit>
        <trans-unit id="0713d95ea58614452d3bd4a78be0cb70359f5d00" translate="yes" xml:space="preserve">
          <source>Elixir has three options for endianness: &lt;code&gt;big&lt;/code&gt;, &lt;code&gt;little&lt;/code&gt;, and &lt;code&gt;native&lt;/code&gt;. The default is &lt;code&gt;big&lt;/code&gt;:</source>
          <target state="translated">Elixir tiene tres opciones de endianidad: &lt;code&gt;big&lt;/code&gt; , &lt;code&gt;little&lt;/code&gt; y &lt;code&gt;native&lt;/code&gt; . El valor predeterminado es &lt;code&gt;big&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="fe30cf194fcc420b9fc8698a6260db192b62dfe9" translate="yes" xml:space="preserve">
          <source>Elixir has two syntaxes for function calls. With parens and no parens. By default, Elixir will add parens to all calls except for:</source>
          <target state="translated">El elixir tiene dos sintaxis para las llamadas de función.Con parens y sin parens.Por defecto,Elixir agregará parens a todas las llamadas excepto a la de:</target>
        </trans-unit>
        <trans-unit id="9c36cafc5f1778cc6d258e84e87e60d138fd12a4" translate="yes" xml:space="preserve">
          <source>Elixir is a dynamically typed language, so all types in Elixir are checked at runtime. Nonetheless, Elixir comes with &lt;strong&gt;typespecs&lt;/strong&gt;, which are a notation used for:</source>
          <target state="translated">Elixir es un lenguaje escrito din&amp;aacute;micamente, por lo que todos los tipos en Elixir se verifican en tiempo de ejecuci&amp;oacute;n. No obstante, Elixir viene con &lt;strong&gt;typepecs&lt;/strong&gt; , que es una notaci&amp;oacute;n utilizada para:</target>
        </trans-unit>
        <trans-unit id="5ea9e99a9db02305c5b70e98171ae53976e93c92" translate="yes" xml:space="preserve">
          <source>Elixir is a dynamically typed language, so all types in Elixir are inferred by the runtime. Nonetheless, Elixir comes with &lt;strong&gt;typespecs&lt;/strong&gt;, which are a notation used for:</source>
          <target state="translated">Elixir es un lenguaje escrito din&amp;aacute;micamente, por lo que todos los tipos en Elixir son inferidos por el tiempo de ejecuci&amp;oacute;n. No obstante, Elixir viene con &lt;strong&gt;typepecs&lt;/strong&gt; , que es una notaci&amp;oacute;n utilizada para:</target>
        </trans-unit>
        <trans-unit id="e56a48282c5929f27448e4f74f02e189acbe3204" translate="yes" xml:space="preserve">
          <source>Elixir is an extensible and very customizable programming language thanks to its meta-programming support. Most meta-programming in Elixir is done through macros, which are very useful in several situations, especially for writing DSLs. We have written a short guide that explains the basic mechanisms behind macros, shows how to write macros, and how to use macros to create DSLs:</source>
          <target state="translated">Elixir es un lenguaje de programación extensible y muy personalizable gracias a su soporte de meta-programación.La mayor parte de la meta-programación en Elixir se hace a través de macros,que son muy útiles en varias situaciones,especialmente para escribir DSLs.Hemos escrito una breve guía que explica los mecanismos básicos detrás de las macros,muestra cómo escribir macros,y cómo usar las macros para crear DSLs:</target>
        </trans-unit>
        <trans-unit id="63771eaf5ff6c9a6bd6258b28e240e5f31e971be" translate="yes" xml:space="preserve">
          <source>Elixir is an immutable language where nothing is shared by default. If we want to share information, which can be read and modified from multiple places, we have two main options in Elixir:</source>
          <target state="translated">El Elixir es un lenguaje inmutable donde nada se comparte por defecto.Si queremos compartir información,que puede ser leída y modificada desde múltiples lugares,tenemos dos opciones principales en Elixir:</target>
        </trans-unit>
        <trans-unit id="52c491dbf300477fadaef34d4fecd5fbbc6358fa" translate="yes" xml:space="preserve">
          <source>Elixir is capable of parsing a predefined set of operators; this means that it's not possible to define new operators (like one could do in Haskell, for example). However, not all operators that Elixir can parse are &lt;em&gt;used&lt;/em&gt; by Elixir: for example, &lt;code&gt;+&lt;/code&gt; and &lt;code&gt;||&lt;/code&gt; are used by Elixir for addition and boolean &lt;em&gt;or&lt;/em&gt;, but &lt;code&gt;&amp;lt;~&amp;gt;&lt;/code&gt; is not used (but valid).</source>
          <target state="translated">Elixir es capaz de analizar un conjunto predefinido de operadores; esto significa que no es posible definir nuevos operadores (como se podr&amp;iacute;a hacer en Haskell, por ejemplo). Sin embargo, no todos los operadores que Elixir puede analizar son &lt;em&gt;utilizados&lt;/em&gt; por Elixir: por ejemplo, &lt;code&gt;+&lt;/code&gt; y &lt;code&gt;||&lt;/code&gt; son usados ​​por Elixir para sumar y booleano &lt;em&gt;o&lt;/em&gt; , pero &lt;code&gt;&amp;lt;~&amp;gt;&lt;/code&gt; no se usa (pero es v&amp;aacute;lido).</target>
        </trans-unit>
        <trans-unit id="119a6b69354b723a3119d7eb9b274e46b1a606de" translate="yes" xml:space="preserve">
          <source>Elixir is currently at major version v1. A new backwards compatible minor release happens every 6 months. Patch releases are not scheduled and are made whenever there are bug fixes or security patches.</source>
          <target state="translated">Elixir está actualmente en la versión mayor v1.Cada 6 meses se produce una nueva versión menor compatible con la anterior.Los parches no están programados y se hacen siempre que hay correcciones de errores o parches de seguridad.</target>
        </trans-unit>
        <trans-unit id="5569a08dfbe33692762e6efedcb5c7ea0454136a" translate="yes" xml:space="preserve">
          <source>Elixir is smart enough to delay the resolution to the latest possible moment. So, if you call &lt;code&gt;length([1, 2, 3])&lt;/code&gt; inside quote, but no &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#length/1&quot;&gt;&lt;code&gt;length/1&lt;/code&gt;&lt;/a&gt; function is available, it is then expanded in the caller:</source>
          <target state="translated">Elixir es lo suficientemente inteligente como para retrasar la resoluci&amp;oacute;n hasta el &amp;uacute;ltimo momento posible. Por lo tanto, si llama a &lt;code&gt;length([1, 2, 3])&lt;/code&gt; dentro de la comilla, pero no hay &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#length/1&quot;&gt; &lt;code&gt;length/1&lt;/code&gt; &lt;/a&gt; funci&amp;oacute;n length / 1 disponible, entonces se expande en el llamador:</target>
        </trans-unit>
        <trans-unit id="92e6a9f7e2024169f36143b3110efa2bf4ec167a" translate="yes" xml:space="preserve">
          <source>Elixir is smart enough to delay the resolution to the latest possible moment. So, if you call &lt;code&gt;length([1, 2, 3])&lt;/code&gt; inside quote, but no &lt;a href=&quot;kernel#length/1&quot;&gt;&lt;code&gt;length/1&lt;/code&gt;&lt;/a&gt; function is available, it is then expanded in the caller:</source>
          <target state="translated">Elixir es lo suficientemente inteligente como para retrasar la resoluci&amp;oacute;n hasta el &amp;uacute;ltimo momento posible. Por lo tanto, si llama a &lt;code&gt;length([1, 2, 3])&lt;/code&gt; dentro de la cita, pero no hay &lt;a href=&quot;kernel#length/1&quot;&gt; &lt;code&gt;length/1&lt;/code&gt; &lt;/a&gt; funci&amp;oacute;n length / 1 disponible, entonces se expande en el llamador:</target>
        </trans-unit>
        <trans-unit id="94be6db8aa623aad96175d2a4f009eb3d49d1f72" translate="yes" xml:space="preserve">
          <source>Elixir is smart enough to recompile only files that have changed and their dependencies. This means if &lt;code&gt;lib/a.ex&lt;/code&gt; is invoking a function defined over &lt;code&gt;lib/b.ex&lt;/code&gt;, whenever &lt;code&gt;lib/b.ex&lt;/code&gt; changes, &lt;code&gt;lib/a.ex&lt;/code&gt; is also recompiled.</source>
          <target state="translated">Elixir es lo suficientemente inteligente como para volver a compilar solo los archivos que han cambiado y sus dependencias. Esto significa que si &lt;code&gt;lib/a.ex&lt;/code&gt; est&amp;aacute; invocando una funci&amp;oacute;n definida sobre &lt;code&gt;lib/b.ex&lt;/code&gt; , siempre que &lt;code&gt;lib/b.ex&lt;/code&gt; cambie, &lt;code&gt;lib/a.ex&lt;/code&gt; tambi&amp;eacute;n se recompila.</target>
        </trans-unit>
        <trans-unit id="a352a9b0a3e5c7519c223a1075bc3428e61e0561" translate="yes" xml:space="preserve">
          <source>Elixir is versioned according to a vMAJOR.MINOR.PATCH schema.</source>
          <target state="translated">El elixir está versionado según un esquema vMAJOR.MINOR.PATCH.</target>
        </trans-unit>
        <trans-unit id="d990d24327822ea7a421e913e80e0202d0dfa1bb" translate="yes" xml:space="preserve">
          <source>Elixir macros have late resolution. This guarantees that a variable defined inside a quote won&amp;rsquo;t conflict with a variable defined in the context where that macro is expanded. For example:</source>
          <target state="translated">Las macros de Elixir tienen resoluci&amp;oacute;n tard&amp;iacute;a. Esto garantiza que una variable definida dentro de una cita no entrar&amp;aacute; en conflicto con una variable definida en el contexto donde se expande esa macro. Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="6c0929a451e1f448275dcbe066bf77535364105c" translate="yes" xml:space="preserve">
          <source>Elixir minor and patch releases are backwards compatible: well-defined behaviours and documented APIs in a given version will continue working on future versions.</source>
          <target state="translated">Las versiones menores de Elixir y los parches son compatibles con las versiones anteriores:los comportamientos bien definidos y las API documentadas en una versión determinada seguirán funcionando en las versiones futuras.</target>
        </trans-unit>
        <trans-unit id="f4a72643c7a8a6ed5341995de6e14044af2a034d" translate="yes" xml:space="preserve">
          <source>Elixir module names can be dynamically generated. This is very useful when working with macros. For instance, one could write:</source>
          <target state="translated">Los nombres de los módulos del Elixir pueden ser generados dinámicamente.Esto es muy útil cuando se trabaja con macros.Por ejemplo,se podría escribir:</target>
        </trans-unit>
        <trans-unit id="3135e8d914a8aafb03877d33ea9a4b0de24e09f7" translate="yes" xml:space="preserve">
          <source>Elixir offers several sigils to deal with various flavors of times and dates.</source>
          <target state="translated">El elixir ofrece varios sigilos para tratar con varios sabores de horas y fechas.</target>
        </trans-unit>
        <trans-unit id="e063af00bef300726332e4ffbf98de73c83bdc5a" translate="yes" xml:space="preserve">
          <source>Elixir on Discord</source>
          <target state="translated">Elixir en la discordia</target>
        </trans-unit>
        <trans-unit id="005e7c25a3d3787c9fd9aad492021fe09a8bd012" translate="yes" xml:space="preserve">
          <source>Elixir on Slack</source>
          <target state="translated">Elixir en la holgura</target>
        </trans-unit>
        <trans-unit id="6ec353d0b43e8fcc2bae198d8d18d71fc59a96c0" translate="yes" xml:space="preserve">
          <source>Elixir programs should prefer to validate data as close to the end user as possible, so the errors are easy to locate and fix. This practice also saves you from writing defensive code in the internals of the library.</source>
          <target state="translated">Los programas de Elixir deben preferir validar los datos lo más cerca posible del usuario final,para que los errores sean fáciles de localizar y corregir.Esta práctica también le evita escribir código defensivo en el interior de la biblioteca.</target>
        </trans-unit>
        <trans-unit id="34badf132890db803056b8a329274a11ed6c00d4" translate="yes" xml:space="preserve">
          <source>Elixir projects are usually organized into three directories:</source>
          <target state="translated">Los proyectos de elixires suelen estar organizados en tres directorios:</target>
        </trans-unit>
        <trans-unit id="bd498b5c0b475852faf005a008b3295d3968391d" translate="yes" xml:space="preserve">
          <source>Elixir promotes the use of Markdown with heredocs to write readable documentation. Heredocs are multi-line strings, they start and end with triple double-quotes, keeping the formatting of the inner text. We can access the documentation of any compiled module directly from IEx:</source>
          <target state="translated">El elixir promueve el uso de Markdown con los heredocs para escribir documentación legible.Los heredocs son cadenas de varias líneas,comienzan y terminan con dobles comillas triples,manteniendo el formato del texto interno.Podemos acceder a la documentación de cualquier módulo compilado directamente desde IEx:</target>
        </trans-unit>
        <trans-unit id="8cd089c42b27bd178061d32f4f832a4a6ee4ad2d" translate="yes" xml:space="preserve">
          <source>Elixir provides Perl-compatible regular expressions (regexes), as implemented by the &lt;a href=&quot;http://www.pcre.org/&quot;&gt;PCRE&lt;/a&gt; library. Regexes also support modifiers. For example, the &lt;code&gt;i&lt;/code&gt; modifier makes a regular expression case insensitive:</source>
          <target state="translated">Elixir proporciona expresiones regulares (regexes) compatibles con Perl, tal como las implementa la biblioteca &lt;a href=&quot;http://www.pcre.org/&quot;&gt;PCRE&lt;/a&gt; . Las expresiones regulares tambi&amp;eacute;n admiten modificadores. Por ejemplo, el modificador &lt;code&gt;i&lt;/code&gt; hace que una expresi&amp;oacute;n regular no distinga entre may&amp;uacute;sculas y min&amp;uacute;sculas:</target>
        </trans-unit>
        <trans-unit id="ea04f299ea8e7d138416f7682d04dace2f8332f3" translate="yes" xml:space="preserve">
          <source>Elixir provides a bunch of predicate functions to check for a value type. For example, the &lt;code&gt;is_boolean/1&lt;/code&gt; function can be used to check if a value is a boolean or not:</source>
          <target state="translated">Elixir proporciona un mont&amp;oacute;n de funciones de predicado para verificar un tipo de valor. Por ejemplo, la funci&amp;oacute;n &lt;code&gt;is_boolean/1&lt;/code&gt; se puede usar para verificar si un valor es booleano o no:</target>
        </trans-unit>
        <trans-unit id="f9d0324f32083b4357effd55af42179e669e80ba" translate="yes" xml:space="preserve">
          <source>Elixir provides a special and more concise syntax for keyword lists that looks like this:</source>
          <target state="translated">Elixir proporciona una sintaxis especial y más concisa para las listas de palabras clave que tiene este aspecto:</target>
        </trans-unit>
        <trans-unit id="3fb7d8bf0ef1942795033493f666d84321055fe3" translate="yes" xml:space="preserve">
          <source>Elixir provides excellent interoperability with Erlang libraries. In fact, Elixir discourages simply wrapping Erlang libraries in favor of directly interfacing with Erlang code. In this section, we will present some of the most common and useful Erlang functionality that is not found in Elixir.</source>
          <target state="translated">Elixir proporciona una excelente interoperabilidad con las bibliotecas de Erlang.De hecho,Elixir desaconseja simplemente envolver las bibliotecas de Erlang en favor de la interfaz directa con el código de Erlang.En esta sección,presentaremos algunas de las funcionalidades de Erlang más comunes y útiles que no se encuentran en Elixir.</target>
        </trans-unit>
        <trans-unit id="b3b982e7fff9bd521206b036c548d296e906492a" translate="yes" xml:space="preserve">
          <source>Elixir provides macros as a mechanism for meta-programming (writing code that generates code). Macros are expanded at compile time.</source>
          <target state="translated">Elixir proporciona macros como un mecanismo para la meta-programación (escribir código que genera código).Las macros se expanden en tiempo de compilación.</target>
        </trans-unit>
        <trans-unit id="449df725d4d68a46665d86a115b480918573511c" translate="yes" xml:space="preserve">
          <source>Elixir provides many &lt;a href=&quot;https://hexdocs.pm/elixir/typespecs.html#built-in-types&quot;&gt;built-in types&lt;/a&gt;, such as &lt;code&gt;integer&lt;/code&gt; or &lt;code&gt;pid&lt;/code&gt;, that can be used to document function signatures. For example, the &lt;code&gt;round/1&lt;/code&gt; function, which rounds a number to its nearest integer. As you can see &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#round/1&quot;&gt;in its documentation&lt;/a&gt;, &lt;code&gt;round/1&lt;/code&gt;&amp;rsquo;s typed signature is written as:</source>
          <target state="translated">Elixir proporciona muchos &lt;a href=&quot;https://hexdocs.pm/elixir/typespecs.html#built-in-types&quot;&gt;tipos integrados&lt;/a&gt; , como &lt;code&gt;integer&lt;/code&gt; o &lt;code&gt;pid&lt;/code&gt; , que se pueden usar para documentar firmas de funciones. Por ejemplo, la funci&amp;oacute;n &lt;code&gt;round/1&lt;/code&gt; , que redondea un n&amp;uacute;mero a su entero m&amp;aacute;s cercano. Como puede ver &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#round/1&quot;&gt;en su documentaci&amp;oacute;n&lt;/a&gt; , la firma mecanografiada de &lt;code&gt;round/1&lt;/code&gt; est&amp;aacute; escrita como:</target>
        </trans-unit>
        <trans-unit id="2c38afe5476b8521de1ce73619db182fce82f5c4" translate="yes" xml:space="preserve">
          <source>Elixir provides many conveniences for working with ports and some drawbacks. We will explore those below.</source>
          <target state="translated">El elixir proporciona muchas comodidades para trabajar con los puertos y algunos inconvenientes.Exploraremos los siguientes.</target>
        </trans-unit>
        <trans-unit id="86797814ddc42c874f88a51b77e92d177f55b7bc" translate="yes" xml:space="preserve">
          <source>Elixir provides optional parentheses for non-qualified and qualified calls.</source>
          <target state="translated">Elixir proporciona paréntesis opcionales para las llamadas no calificadas y calificadas.</target>
        </trans-unit>
        <trans-unit id="1d9a8b35858a0497976075a187083dacc1314354" translate="yes" xml:space="preserve">
          <source>Elixir provides pattern matching, which allows us to assert on the shape or extract values from data-structures. Patterns are often augmented with guards, which give developers the ability to perform more complex checks, albeit limited.</source>
          <target state="translated">Elixir proporciona una coincidencia de patrones,que nos permite afirmar en la forma o extraer valores de las estructuras de datos.Los patrones a menudo se aumentan con guardias,que dan a los desarrolladores la capacidad de realizar comprobaciones más complejas,aunque limitadas.</target>
        </trans-unit>
        <trans-unit id="ab1e334b03a647f5918bb69c761fab411cd3e870" translate="yes" xml:space="preserve">
          <source>Elixir provides similar mechanisms for imports and aliases too. This guarantees that a macro will behave as specified by its source module rather than conflicting with the target module where the macro is expanded. Hygiene can be bypassed under specific situations by using macros like &lt;code&gt;var!/2&lt;/code&gt; and &lt;code&gt;alias!/1&lt;/code&gt;, although one must be careful when using those as they directly change the user environment.</source>
          <target state="translated">Elixir tambi&amp;eacute;n proporciona mecanismos similares para importaciones y alias. Esto garantiza que una macro se comportar&amp;aacute; seg&amp;uacute;n lo especificado por su m&amp;oacute;dulo de origen en lugar de entrar en conflicto con el m&amp;oacute;dulo de destino donde se expande la macro. La higiene se puede evitar en situaciones espec&amp;iacute;ficas mediante el uso de macros como &lt;code&gt;var!/2&lt;/code&gt; y &lt;code&gt;alias!/1&lt;/code&gt; , aunque se debe tener cuidado al usarlos, ya que cambian directamente el entorno del usuario.</target>
        </trans-unit>
        <trans-unit id="7ee83992e184ceb0497492aa46813f6e12944aa3" translate="yes" xml:space="preserve">
          <source>Elixir provides the concept of enumerables and &lt;a href=&quot;https://hexdocs.pm/elixir/Enum.html&quot;&gt;the &lt;code&gt;Enum&lt;/code&gt; module&lt;/a&gt; to work with them. We have already learned two enumerables: lists and maps.</source>
          <target state="translated">Elixir proporciona el concepto de enumerables y &lt;a href=&quot;https://hexdocs.pm/elixir/Enum.html&quot;&gt;el m&amp;oacute;dulo &lt;code&gt;Enum&lt;/code&gt; &lt;/a&gt; para trabajar con ellos. Ya hemos aprendido dos enumerables: listas y mapas.</target>
        </trans-unit>
        <trans-unit id="56408c183550d2230f17bffa1fd59dd5a2aa2dd3" translate="yes" xml:space="preserve">
          <source>Elixir provides the following built-in comparison operators (all of which can be used in guards):</source>
          <target state="translated">Elixir proporciona los siguientes operadores de comparación incorporados (todos los cuales pueden ser utilizados en los guardias):</target>
        </trans-unit>
        <trans-unit id="c38b66bd0f1f07df9af68419dad5d7545d3eb5b0" translate="yes" xml:space="preserve">
          <source>Elixir provides the following built-in comparison operators:</source>
          <target state="translated">Elixir proporciona los siguientes operadores de comparación incorporados:</target>
        </trans-unit>
        <trans-unit id="a073541c1c4061c5b62e401a691e0182a896f380" translate="yes" xml:space="preserve">
          <source>Elixir provides the following built-in operators that are defined as functions that can be overridden:</source>
          <target state="translated">Elixir proporciona los siguientes operadores incorporados que se definen como funciones que pueden ser anuladas:</target>
        </trans-unit>
        <trans-unit id="ac046d5521e866f330d69759ab8c6306ded55946" translate="yes" xml:space="preserve">
          <source>Elixir quote/unquote mechanisms provide a functionality called unquote fragments. Unquote fragments provide an easy way to generate functions on the fly. Consider this example:</source>
          <target state="translated">Los mecanismos de cita/no cita de los elixires proporcionan una funcionalidad llamada fragmentos de no cita.Los fragmentos de des-cotización proporcionan una forma fácil de generar funciones sobre la marcha.Considere este ejemplo:</target>
        </trans-unit>
        <trans-unit id="8d30f35ec7987f572743e95ef255bb1ce5bee72e" translate="yes" xml:space="preserve">
          <source>Elixir relies on underscores in different situations.</source>
          <target state="translated">El elixir se basa en subrayados en diferentes situaciones.</target>
        </trans-unit>
        <trans-unit id="ecffee7d986ded673e3f20c49d26acf93d1febaf" translate="yes" xml:space="preserve">
          <source>Elixir represents &lt;code&gt;Foo.Bar&lt;/code&gt; as &lt;code&gt;__aliases__&lt;/code&gt; so calls can be unambiguously identified by the operator &lt;code&gt;:.&lt;/code&gt;. For example:</source>
          <target state="translated">Elixir representa &lt;code&gt;Foo.Bar&lt;/code&gt; como &lt;code&gt;__aliases__&lt;/code&gt; para que el operador pueda identificar sin ambig&amp;uuml;edades las llamadas &lt;code&gt;:.&lt;/code&gt; . Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="e6bdbab87b861494b0b9df9b50e56bb5cc5d2563" translate="yes" xml:space="preserve">
          <source>Elixir requires all atoms and variables to be in NFC form. Any other form will fail with a relevant error message. Quoted-atoms and strings can, however, be in any form and are not verified by the parser.</source>
          <target state="translated">El elixir requiere que todos los átomos y variables estén en forma de NFC.Cualquier otra forma fallará con un mensaje de error relevante.Sin embargo,los átomos y las cadenas pueden estar en cualquier forma y no son verificados por el analizador.</target>
        </trans-unit>
        <trans-unit id="edacc18f14ad696b0fd9cee85daa785d105406a3" translate="yes" xml:space="preserve">
          <source>Elixir reserves the following module names: &lt;code&gt;Elixir&lt;/code&gt;, &lt;code&gt;Any&lt;/code&gt;, &lt;code&gt;BitString&lt;/code&gt;, &lt;code&gt;PID&lt;/code&gt;, and &lt;code&gt;Reference&lt;/code&gt;.</source>
          <target state="translated">Elixir reserva los siguientes nombres de m&amp;oacute;dulo: &lt;code&gt;Elixir&lt;/code&gt; , &lt;code&gt;Any&lt;/code&gt; , &lt;code&gt;BitString&lt;/code&gt; , &lt;code&gt;PID&lt;/code&gt; y &lt;code&gt;Reference&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6a2a631e623ec7dcc0aeb7c643dc24be890d814b" translate="yes" xml:space="preserve">
          <source>Elixir runs on the Erlang Virtual Machine and, sooner or later, an Elixir developer will want to interface with existing Erlang libraries. Here&amp;rsquo;s a list of online resources that cover Erlang&amp;rsquo;s fundamentals and its more advanced features:</source>
          <target state="translated">Elixir se ejecuta en la m&amp;aacute;quina virtual de Erlang y, tarde o temprano, un desarrollador de Elixir querr&amp;aacute; interactuar con las bibliotecas de Erlang existentes. Aqu&amp;iacute; hay una lista de recursos en l&amp;iacute;nea que cubren los fundamentos de Erlang y sus caracter&amp;iacute;sticas m&amp;aacute;s avanzadas:</target>
        </trans-unit>
        <trans-unit id="4a5fefa1f8798cec1647f9fe4a71993a0c63afa5" translate="yes" xml:space="preserve">
          <source>Elixir sees the right-hand side is a function call and pipes to it. This means that, if you want to pipe to an anonymous or captured function, it must also be explicitly called.</source>
          <target state="translated">Elixir ve que el lado derecho es una llamada a la función y la canaliza.Esto significa que,si se quiere canalizar a una función anónima o capturada,también debe ser llamada explícitamente.</target>
        </trans-unit>
        <trans-unit id="a8974a1be92f4c12c0a0c52c8b32e2ca1e35088a" translate="yes" xml:space="preserve">
          <source>Elixir ships with facilities to connect nodes and exchange information between them. In fact, we use the same concepts of processes, message passing and receiving messages when working in a distributed environment because Elixir processes are &lt;em&gt;location transparent&lt;/em&gt;. This means that when sending a message, it doesn&amp;rsquo;t matter if the recipient process is on the same node or on another node, the</source>
          <target state="translated">Elixir se env&amp;iacute;a con instalaciones para conectar nodos e intercambiar informaci&amp;oacute;n entre ellos. De hecho, utilizamos los mismos conceptos de procesos, transmisi&amp;oacute;n de mensajes y recepci&amp;oacute;n de mensajes cuando trabajamos en un entorno distribuido porque los procesos de Elixir son &lt;em&gt;transparentes en cuanto a ubicaci&amp;oacute;n&lt;/em&gt; . Esto significa que al enviar un mensaje, no importa si el proceso del destinatario est&amp;aacute; en el mismo nodo o en otro nodo, el</target>
        </trans-unit>
        <trans-unit id="5c11d827abbb7cde35b0a581d6299d5d74cd7a62" translate="yes" xml:space="preserve">
          <source>Elixir ships with some built-in protocols. In previous chapters, we have discussed the &lt;code&gt;Enum&lt;/code&gt; module which provides many functions that work with any data structure that implements the &lt;code&gt;Enumerable&lt;/code&gt; protocol:</source>
          <target state="translated">Elixir se env&amp;iacute;a con algunos protocolos integrados. En cap&amp;iacute;tulos anteriores, hemos discutido el m&amp;oacute;dulo &lt;code&gt;Enum&lt;/code&gt; que proporciona muchas funciones que funcionan con cualquier estructura de datos que implemente el protocolo &lt;code&gt;Enumerable&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="dd2cbcbe1872ea6a04fdc11aaa0e830351ff7c7a" translate="yes" xml:space="preserve">
          <source>Elixir spawned a process on another node and returned its pid. The code then executed on the other node where the &lt;code&gt;Hello.world/0&lt;/code&gt; function exists and invoked that function. Note that the result of &amp;ldquo;hello world&amp;rdquo; was printed on the current node &lt;code&gt;bar&lt;/code&gt; and not on &lt;code&gt;foo&lt;/code&gt;. In other words, the message to be printed was sent back from &lt;code&gt;foo&lt;/code&gt; to &lt;code&gt;bar&lt;/code&gt;. This happens because the process spawned on the other node (&lt;code&gt;foo&lt;/code&gt;) knows all of the output should be sent back to the original node!</source>
          <target state="translated">Elixir gener&amp;oacute; un proceso en otro nodo y devolvi&amp;oacute; su pid. Luego, el c&amp;oacute;digo se ejecut&amp;oacute; en el otro nodo donde existe la funci&amp;oacute;n &lt;code&gt;Hello.world/0&lt;/code&gt; e invoc&amp;oacute; esa funci&amp;oacute;n. Tenga en cuenta que el resultado de &quot;hola mundo&quot; se imprimi&amp;oacute; en la &lt;code&gt;bar&lt;/code&gt; ra de nodos actual y no en &lt;code&gt;foo&lt;/code&gt; . En otras palabras, el mensaje a imprimir se envi&amp;oacute; de regreso de &lt;code&gt;foo&lt;/code&gt; a &lt;code&gt;bar&lt;/code&gt; . Esto sucede porque el proceso generado en el otro nodo ( &lt;code&gt;foo&lt;/code&gt; ) sabe que toda la salida debe enviarse de vuelta al nodo original.</target>
        </trans-unit>
        <trans-unit id="8d3a064f8543389f89760aca91a7bf4bd3fe1730" translate="yes" xml:space="preserve">
          <source>Elixir spawned a process on another node and returned its pid. The code then executed on the other node where the &lt;code&gt;Hello.world/0&lt;/code&gt; function exists and invoked that function. Note that the result of &amp;ldquo;hello world&amp;rdquo; was printed on the current node &lt;code&gt;bar&lt;/code&gt; and not on &lt;code&gt;foo&lt;/code&gt;. In other words, the message to be printed was sent back from &lt;code&gt;foo&lt;/code&gt; to &lt;code&gt;bar&lt;/code&gt;. This happens because the process spawned on the other node (&lt;code&gt;foo&lt;/code&gt;) still has the group leader of the current node (&lt;code&gt;bar&lt;/code&gt;). We have briefly talked about group leaders in the &lt;a href=&quot;../io-and-the-file-system#processes-and-group-leaders&quot;&gt;IO chapter&lt;/a&gt;.</source>
          <target state="translated">Elixir gener&amp;oacute; un proceso en otro nodo y devolvi&amp;oacute; su pid. Luego, el c&amp;oacute;digo se ejecut&amp;oacute; en el otro nodo donde existe la funci&amp;oacute;n &lt;code&gt;Hello.world/0&lt;/code&gt; e invoc&amp;oacute; esa funci&amp;oacute;n. Tenga en cuenta que el resultado de &quot;hola mundo&quot; se imprimi&amp;oacute; en la &lt;code&gt;bar&lt;/code&gt; ra de nodos actual y no en &lt;code&gt;foo&lt;/code&gt; . En otras palabras, el mensaje a imprimir se envi&amp;oacute; de regreso de &lt;code&gt;foo&lt;/code&gt; a &lt;code&gt;bar&lt;/code&gt; . Esto sucede porque el proceso generado en el otro nodo ( &lt;code&gt;foo&lt;/code&gt; ) todav&amp;iacute;a tiene el l&amp;iacute;der de grupo del nodo actual ( &lt;code&gt;bar&lt;/code&gt; ra ). Hemos hablado brevemente sobre los l&amp;iacute;deres de grupo en el &lt;a href=&quot;../io-and-the-file-system#processes-and-group-leaders&quot;&gt;cap&amp;iacute;tulo IO&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cdde1bffc734f7ff0a1635ad03d752544e76408f" translate="yes" xml:space="preserve">
          <source>Elixir stores documentation inside pre-defined chunks in the bytecode. It can be accessed from Elixir by using the &lt;a href=&quot;code#fetch_docs/1&quot;&gt;&lt;code&gt;Code.fetch_docs/1&lt;/code&gt;&lt;/a&gt; function. This also means documentation is only accessed when required and not when modules are loaded by the Virtual Machine. The only downside is that modules defined in-memory, like the ones defined in IEx, cannot have their documentation accessed as they do not have their bytecode written to disk.</source>
          <target state="translated">Elixir almacena documentaci&amp;oacute;n dentro de fragmentos predefinidos en el c&amp;oacute;digo de bytes. Se puede acceder desde Elixir utilizando la funci&amp;oacute;n &lt;a href=&quot;code#fetch_docs/1&quot;&gt; &lt;code&gt;Code.fetch_docs/1&lt;/code&gt; &lt;/a&gt; . Esto tambi&amp;eacute;n significa que solo se accede a la documentaci&amp;oacute;n cuando se requiere y no cuando los m&amp;oacute;dulos son cargados por la M&amp;aacute;quina Virtual. El &amp;uacute;nico inconveniente es que los m&amp;oacute;dulos definidos en memoria, como los definidos en IEx, no pueden tener acceso a su documentaci&amp;oacute;n ya que no tienen su c&amp;oacute;digo de bytes escrito en el disco.</target>
        </trans-unit>
        <trans-unit id="73308596a035e74f58128367e181ad0b11e8c767" translate="yes" xml:space="preserve">
          <source>Elixir stores documentation inside pre-defined chunks in the bytecode. It can be accessed from Elixir by using the &lt;a href=&quot;https://hexdocs.pm/elixir/Code.html#fetch_docs/1&quot;&gt;&lt;code&gt;Code.fetch_docs/1&lt;/code&gt;&lt;/a&gt; function. This also means documentation is only accessed when required and not when modules are loaded by the Virtual Machine. The only downside is that modules defined in-memory, like the ones defined in IEx, cannot have their documentation accessed as they do not have their bytecode written to disk.</source>
          <target state="translated">Elixir almacena documentaci&amp;oacute;n dentro de fragmentos predefinidos en el c&amp;oacute;digo de bytes. Se puede acceder desde Elixir utilizando la funci&amp;oacute;n &lt;a href=&quot;https://hexdocs.pm/elixir/Code.html#fetch_docs/1&quot;&gt; &lt;code&gt;Code.fetch_docs/1&lt;/code&gt; &lt;/a&gt; . Esto tambi&amp;eacute;n significa que solo se accede a la documentaci&amp;oacute;n cuando es necesario y no cuando la m&amp;aacute;quina virtual carga los m&amp;oacute;dulos. El &amp;uacute;nico inconveniente es que los m&amp;oacute;dulos definidos en memoria, como los definidos en IEx, no pueden tener acceso a su documentaci&amp;oacute;n ya que no tienen su c&amp;oacute;digo de bytes escrito en el disco.</target>
        </trans-unit>
        <trans-unit id="ba4784f8c761fcb64ca50be28ca3ee0726dd1e34" translate="yes" xml:space="preserve">
          <source>Elixir supports &lt;code&gt;true&lt;/code&gt; and &lt;code&gt;false&lt;/code&gt; as booleans:</source>
          <target state="translated">Elixir admite &lt;code&gt;true&lt;/code&gt; y &lt;code&gt;false&lt;/code&gt; como valores booleanos:</target>
        </trans-unit>
        <trans-unit id="c1fca4af1967c47f797a528ad384a0b6142eeed4" translate="yes" xml:space="preserve">
          <source>Elixir supports Unicode throughout the language.</source>
          <target state="translated">Elixir soporta Unicode en todo el idioma.</target>
        </trans-unit>
        <trans-unit id="6e32af56db37e615dec6eaffbd92d992d378d08f" translate="yes" xml:space="preserve">
          <source>Elixir supports compilation tracers, which allows modules to observe constructs handled by the Elixir compiler when compiling files. A tracer is a module that implements the &lt;code&gt;trace/2&lt;/code&gt; function. The function receives the event name as first argument and &lt;a href=&quot;https://hexdocs.pm/elixir/Macro.Env.html&quot;&gt;&lt;code&gt;Macro.Env&lt;/code&gt;&lt;/a&gt; as second and it must return &lt;code&gt;:ok&lt;/code&gt;. It is very important for a tracer to do as little work as possible synchronously and dispatch the bulk of the work to a separate process. &lt;strong&gt;Slow tracers will slow down compilation&lt;/strong&gt;.</source>
          <target state="translated">Elixir admite rastreadores de compilaci&amp;oacute;n, lo que permite a los m&amp;oacute;dulos observar las construcciones manejadas por el compilador Elixir al compilar archivos. Un trazador es un m&amp;oacute;dulo que implementa la funci&amp;oacute;n &lt;code&gt;trace/2&lt;/code&gt; . La funci&amp;oacute;n recibe el nombre del evento como primer argumento y &lt;a href=&quot;https://hexdocs.pm/elixir/Macro.Env.html&quot;&gt; &lt;code&gt;Macro.Env&lt;/code&gt; &lt;/a&gt; como segundo y debe devolver &lt;code&gt;:ok&lt;/code&gt; . Es muy importante que un rastreador haga la menor cantidad de trabajo posible sincr&amp;oacute;nicamente y env&amp;iacute;e la mayor parte del trabajo a un proceso separado. &lt;strong&gt;Los trazadores lentos ralentizar&amp;aacute;n la compilaci&amp;oacute;n&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="649a2834ec800cb52f399145f24bccb3f23afbc9" translate="yes" xml:space="preserve">
          <source>Elixir supports compound types as well. For example, a list of integers has type &lt;code&gt;[integer]&lt;/code&gt;, or maps that define keys and types (see the example below).</source>
          <target state="translated">Elixir tambi&amp;eacute;n admite tipos de compuestos. Por ejemplo, una lista de n&amp;uacute;meros enteros tiene el tipo &lt;code&gt;[integer]&lt;/code&gt; , o mapas que definen claves y tipos (vea el ejemplo a continuaci&amp;oacute;n).</target>
        </trans-unit>
        <trans-unit id="1f173b2bc2f5965b36c7172e06c818c7bd04ae05" translate="yes" xml:space="preserve">
          <source>Elixir supports compound types as well. For example, a list of integers has type &lt;code&gt;[integer]&lt;/code&gt;. You can see all the built-in types provided by Elixir &lt;a href=&quot;https://hexdocs.pm/elixir/typespecs.html&quot;&gt;in the typespecs docs&lt;/a&gt;.</source>
          <target state="translated">Elixir tambi&amp;eacute;n admite tipos de compuestos. Por ejemplo, una lista de n&amp;uacute;meros enteros tiene el tipo &lt;code&gt;[integer]&lt;/code&gt; . Puede ver todos los tipos integrados proporcionados por Elixir &lt;a href=&quot;https://hexdocs.pm/elixir/typespecs.html&quot;&gt;en los documentos de typespecs&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="96cc8eea24e4342cdb1b99a08ca9183edff74d45" translate="yes" xml:space="preserve">
          <source>Elixir supports conversions from charlists which contains any Unicode code point.</source>
          <target state="translated">Elixir soporta conversiones de listas de caracteres que contienen cualquier punto de código Unicode.</target>
        </trans-unit>
        <trans-unit id="c47342d7972fff0f119dd077cbc8a84f69c35e4d" translate="yes" xml:space="preserve">
          <source>Elixir supports only code points &lt;code&gt;\t&lt;/code&gt; (0009), &lt;code&gt;\n&lt;/code&gt; (000A), &lt;code&gt;\r&lt;/code&gt; (000D) and &lt;code&gt;\s&lt;/code&gt; (0020) as whitespace and therefore does not follow requirement R3. R3 requires a wider variety of whitespace and syntax characters to be supported.</source>
          <target state="translated">Elixir solo admite puntos de c&amp;oacute;digo &lt;code&gt;\t&lt;/code&gt; (0009), &lt;code&gt;\n&lt;/code&gt; (000A), &lt;code&gt;\r&lt;/code&gt; (000D) y &lt;code&gt;\s&lt;/code&gt; (0020) como espacios en blanco y, por lo tanto, no sigue el requisito R3. R3 requiere una variedad m&amp;aacute;s amplia de espacios en blanco y caracteres de sintaxis para ser compatible.</target>
        </trans-unit>
        <trans-unit id="01176f0775592b687fb8331c0702b3ffd6028d87" translate="yes" xml:space="preserve">
          <source>Elixir supports some sigil variants to deal with escaping characters and interpolation. In particular, uppercase letters sigils do not perform interpolation nor escaping. For example, although both &lt;code&gt;~s&lt;/code&gt; and &lt;code&gt;~S&lt;/code&gt; will return strings, the former allows escape codes and interpolation while the latter does not:</source>
          <target state="translated">Elixir admite algunas variantes de sigilo para lidiar con personajes que escapan y la interpolaci&amp;oacute;n. En particular, los sigilos de letras may&amp;uacute;sculas no realizan interpolaci&amp;oacute;n ni escape. Por ejemplo, aunque los dos &lt;code&gt;~s&lt;/code&gt; y &lt;code&gt;~S&lt;/code&gt; volver&amp;aacute;n cuerdas, el primero permite c&amp;oacute;digos de escape y la interpolaci&amp;oacute;n, mientras que el segundo no:</target>
        </trans-unit>
        <trans-unit id="310bbc013224b7904b922e667f4bf7001bdc5fa3" translate="yes" xml:space="preserve">
          <source>Elixir syntax was designed to have a straightforward conversion to an abstract syntax tree (AST). Elixir's AST is a regular Elixir data structure composed of the following elements:</source>
          <target state="translated">La sintaxis del elixir fue diseñada para tener una conversión directa a un árbol de sintaxis abstracta (AST).El AST de Elixir es una estructura regular de datos de Elixir compuesta por los siguientes elementos:</target>
        </trans-unit>
        <trans-unit id="ff71b1cca0c9586eb958681a7c3aaf58f79bc884" translate="yes" xml:space="preserve">
          <source>Elixir syntax was designed to have a straightforward conversion to an abstract syntax tree (AST). This means the Elixir syntax is mostly uniform with a handful of &quot;syntax sugar&quot; constructs to reduce the noise in common Elixir idioms.</source>
          <target state="translated">La sintaxis del elixir fue diseñada para tener una conversión directa a un árbol de sintaxis abstracta (AST).Esto significa que la sintaxis del Elixir es mayormente uniforme con un puñado de construcciones de &quot;azúcar de sintaxis&quot; para reducir el ruido en los modismos comunes del Elixir.</target>
        </trans-unit>
        <trans-unit id="ce4861615a3c3b43c097938810a51ecb7a613f3a" translate="yes" xml:space="preserve">
          <source>Elixir treats documentation and code comments as different concepts. Documentation is an explicit contract between you and users of your Application Programming Interface (API), be them third-party developers, co-workers, or your future self. Modules and functions must always be documented if they are part of your API.</source>
          <target state="translated">Elixir trata la documentación y los comentarios del código como conceptos diferentes.La documentación es un contrato explícito entre usted y los usuarios de su interfaz de programación de aplicaciones (API),ya sean desarrolladores de terceros,compañeros de trabajo o su futuro yo.Los módulos y funciones siempre deben estar documentados si forman parte de su API.</target>
        </trans-unit>
        <trans-unit id="94ab78733fcffaa0c8d9d75151f47ea7434ea05a" translate="yes" xml:space="preserve">
          <source>Elixir treats documentation as a first-class citizen. This means documentation should be easy to write and easy to read. In this document you will learn how to write documentation in Elixir, covering constructs like module attributes, style practices and doctests.</source>
          <target state="translated">Elixir trata la documentación como un ciudadano de primera clase.Esto significa que la documentación debe ser fácil de escribir y fácil de leer.En este documento aprenderá a escribir documentación en Elixir,cubriendo construcciones como los atributos de los módulos,prácticas de estilo y pruebas documentales.</target>
        </trans-unit>
        <trans-unit id="3977a0d710ac9b9b84f6c1288fefa9a0d84df520" translate="yes" xml:space="preserve">
          <source>Elixir uses UTF-8 to encode its strings, which means that code points are encoded as a series of 8-bit bytes. UTF-8 is a &lt;strong&gt;variable width&lt;/strong&gt; character encoding that uses one to four bytes to store each code point; it is capable of encoding all valid Unicode code points.</source>
          <target state="translated">Elixir usa UTF-8 para codificar sus cadenas, lo que significa que los puntos de c&amp;oacute;digo se codifican como una serie de bytes de 8 bits. UTF-8 es una codificaci&amp;oacute;n de caracteres de &lt;strong&gt;ancho variable&lt;/strong&gt; que utiliza de uno a cuatro bytes para almacenar cada punto de c&amp;oacute;digo; es capaz de codificar todos los puntos de c&amp;oacute;digo Unicode v&amp;aacute;lidos.</target>
        </trans-unit>
        <trans-unit id="c067ad566a52ceb3738f6cd14c05e81b89ddb512" translate="yes" xml:space="preserve">
          <source>Elixir uses curly brackets to define tuples. Like lists, tuples can hold any value:</source>
          <target state="translated">El Elixir usa paréntesis rizados para definir las tuplas.Al igual que las listas,las tuplas pueden tener cualquier valor:</target>
        </trans-unit>
        <trans-unit id="b7437bc89e4d7cd42e4777ca92ac246386afa15d" translate="yes" xml:space="preserve">
          <source>Elixir uses single quotes to define charlists:</source>
          <target state="translated">Elixir utiliza comillas simples para definir las listas de clasificación:</target>
        </trans-unit>
        <trans-unit id="0a0c9ca226ff9075b8b4027dc040b09a7fc4c136" translate="yes" xml:space="preserve">
          <source>Elixir uses square brackets to specify a list of values. Values can be of any type:</source>
          <target state="translated">Elixir utiliza corchetes para especificar una lista de valores.Los valores pueden ser de cualquier tipo:</target>
        </trans-unit>
        <trans-unit id="1ca97f233cf2ddf0b1c0bf0e2277569cae997e55" translate="yes" xml:space="preserve">
          <source>Elixir v1.7 adopts &lt;a href=&quot;http://erlang.org/eep/eeps/eep-0048.html&quot;&gt;EEP 48&lt;/a&gt; which is a new documentation format meant to be shared across all BEAM languages. The old format, used by &lt;a href=&quot;#get_docs/2&quot;&gt;&lt;code&gt;Code.get_docs/2&lt;/code&gt;&lt;/a&gt;, is no longer available, and therefore this function always returns &lt;code&gt;nil&lt;/code&gt;. Use &lt;a href=&quot;#fetch_docs/1&quot;&gt;&lt;code&gt;Code.fetch_docs/1&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">Elixir v1.7 adopta &lt;a href=&quot;http://erlang.org/eep/eeps/eep-0048.html&quot;&gt;EEP 48,&lt;/a&gt; que es un nuevo formato de documentaci&amp;oacute;n destinado a ser compartido en todos los lenguajes BEAM. El formato anterior, utilizado por &lt;a href=&quot;#get_docs/2&quot;&gt; &lt;code&gt;Code.get_docs/2&lt;/code&gt; &lt;/a&gt; , ya no est&amp;aacute; disponible y, por lo tanto, esta funci&amp;oacute;n siempre devuelve &lt;code&gt;nil&lt;/code&gt; . En su lugar, utilice &lt;a href=&quot;#fetch_docs/1&quot;&gt; &lt;code&gt;Code.fetch_docs/1&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7410ee1b8baed2ca63c0da7fbd59f8909583c454" translate="yes" xml:space="preserve">
          <source>Elixir v1.7 adopts &lt;a href=&quot;http://erlang.org/eep/eeps/eep-0048.html&quot;&gt;EEP 48&lt;/a&gt; which is a new documentation format meant to be shared across all BEAM languages. The old format, used by &lt;a href=&quot;code#get_docs/2&quot;&gt;&lt;code&gt;Code.get_docs/2&lt;/code&gt;&lt;/a&gt;, is no longer available, and therefore this function always returns &lt;code&gt;nil&lt;/code&gt;. Use &lt;a href=&quot;code#fetch_docs/1&quot;&gt;&lt;code&gt;Code.fetch_docs/1&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">Elixir v1.7 adopta &lt;a href=&quot;http://erlang.org/eep/eeps/eep-0048.html&quot;&gt;EEP 48,&lt;/a&gt; que es un nuevo formato de documentaci&amp;oacute;n destinado a ser compartido en todos los lenguajes BEAM. El formato anterior, utilizado por &lt;a href=&quot;code#get_docs/2&quot;&gt; &lt;code&gt;Code.get_docs/2&lt;/code&gt; &lt;/a&gt; , ya no est&amp;aacute; disponible y, por lo tanto, esta funci&amp;oacute;n siempre devuelve &lt;code&gt;nil&lt;/code&gt; . En su lugar, utilice &lt;a href=&quot;code#fetch_docs/1&quot;&gt; &lt;code&gt;Code.fetch_docs/1&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e2c8e7ddf395da597d9d7092789c372c5e9cb894" translate="yes" xml:space="preserve">
          <source>Elixir version</source>
          <target state="translated">Versión del elixir</target>
        </trans-unit>
        <trans-unit id="3ef1a22d73c732ddfb0e37deb22c5920363b7ef9" translate="yes" xml:space="preserve">
          <source>Elixir version information.</source>
          <target state="translated">Información de la versión del elixir.</target>
        </trans-unit>
        <trans-unit id="2d1a3e13eeda4320739159e4214187b33436ad5e" translate="yes" xml:space="preserve">
          <source>Elixir will accept any module name as long as the expression passed as the first argument to &lt;a href=&quot;#defmodule/2&quot;&gt;&lt;code&gt;defmodule/2&lt;/code&gt;&lt;/a&gt; evaluates to an atom. Note that, when a dynamic name is used, Elixir won't nest the name under the current module nor automatically set up an alias.</source>
          <target state="translated">Elixir aceptar&amp;aacute; cualquier nombre de m&amp;oacute;dulo siempre que la expresi&amp;oacute;n pasada como primer argumento a &lt;a href=&quot;#defmodule/2&quot;&gt; &lt;code&gt;defmodule/2&lt;/code&gt; se&lt;/a&gt; eval&amp;uacute;e como un &amp;aacute;tomo. Tenga en cuenta que, cuando se usa un nombre din&amp;aacute;mico, Elixir no anida el nombre en el m&amp;oacute;dulo actual ni configura autom&amp;aacute;ticamente un alias.</target>
        </trans-unit>
        <trans-unit id="0c3a96ef15c7b10a131a32d7fe611882ee9f141c" translate="yes" xml:space="preserve">
          <source>Elixir will automatically wrap the function body in a &lt;code&gt;try&lt;/code&gt; whenever one of &lt;code&gt;after&lt;/code&gt;, &lt;code&gt;rescue&lt;/code&gt; or &lt;code&gt;catch&lt;/code&gt; is specified.</source>
          <target state="translated">Elixir envolver&amp;aacute; autom&amp;aacute;ticamente el cuerpo de la funci&amp;oacute;n en un &lt;code&gt;try&lt;/code&gt; cada vez que se especifique uno de &lt;code&gt;after&lt;/code&gt; , &lt;code&gt;rescue&lt;/code&gt; o &lt;code&gt;catch&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a85970e0faad243447c5114389dcdeb0a39d337f" translate="yes" xml:space="preserve">
          <source>Elixir&amp;rsquo;s processes should not be confused with operating system processes. Processes in Elixir are extremely lightweight in terms of memory and CPU (even compared to threads as used in many other programming languages). Because of this, it is not uncommon to have tens or even hundreds of thousands of processes running simultaneously.</source>
          <target state="translated">Los procesos de Elixir no deben confundirse con los procesos del sistema operativo. Los procesos en Elixir son extremadamente livianos en t&amp;eacute;rminos de memoria y CPU (incluso en comparaci&amp;oacute;n con los subprocesos que se usan en muchos otros lenguajes de programaci&amp;oacute;n). Debido a esto, no es raro tener decenas o incluso cientos de miles de procesos ejecut&amp;aacute;ndose simult&amp;aacute;neamente.</target>
        </trans-unit>
        <trans-unit id="74afface970af5cae73731659047f9af84feb478" translate="yes" xml:space="preserve">
          <source>Elixir's AST (Abstract Syntax Tree)</source>
          <target state="translated">AST del Elixir (Árbol de Sintaxis Abstracto)</target>
        </trans-unit>
        <trans-unit id="ce6d269d872319624d23c6d1f8a1436923e77f5d" translate="yes" xml:space="preserve">
          <source>Elixir's interactive shell.</source>
          <target state="translated">La cáscara interactiva del Elixir.</target>
        </trans-unit>
        <trans-unit id="b500d25431abdc8af2398b8e041e9fe8f8aee8f4" translate="yes" xml:space="preserve">
          <source>Elixir's standard library contains a few frequently used behaviours such as &lt;a href=&quot;genserver&quot;&gt;&lt;code&gt;GenServer&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;supervisor&quot;&gt;&lt;code&gt;Supervisor&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;application&quot;&gt;&lt;code&gt;Application&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">La biblioteca est&amp;aacute;ndar de Elixir contiene algunos comportamientos de uso frecuente, como &lt;a href=&quot;genserver&quot;&gt; &lt;code&gt;GenServer&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;supervisor&quot;&gt; &lt;code&gt;Supervisor&lt;/code&gt; &lt;/a&gt; y &lt;a href=&quot;application&quot;&gt; &lt;code&gt;Application&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9b38f6b406adad2c4ad9a3c750691827797402b8" translate="yes" xml:space="preserve">
          <source>Elixir's standard library contains a few frequently used behaviours such as &lt;a href=&quot;https://hexdocs.pm/elixir/GenServer.html&quot;&gt;&lt;code&gt;GenServer&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://hexdocs.pm/elixir/Supervisor.html&quot;&gt;&lt;code&gt;Supervisor&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;https://hexdocs.pm/elixir/Application.html&quot;&gt;&lt;code&gt;Application&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">La biblioteca est&amp;aacute;ndar de Elixir contiene algunos comportamientos de uso frecuente, como &lt;a href=&quot;https://hexdocs.pm/elixir/GenServer.html&quot;&gt; &lt;code&gt;GenServer&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;https://hexdocs.pm/elixir/Supervisor.html&quot;&gt; &lt;code&gt;Supervisor&lt;/code&gt; &lt;/a&gt; y &lt;a href=&quot;https://hexdocs.pm/elixir/Application.html&quot;&gt; &lt;code&gt;Application&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a9c075ef1bb96e78c3aeb788db6fdaa2ad6900d8" translate="yes" xml:space="preserve">
          <source>Else</source>
          <target state="translated">Else</target>
        </trans-unit>
        <trans-unit id="a956e2fd0a59819b9e171fd2f4db600228e545a0" translate="yes" xml:space="preserve">
          <source>Embeds a template given by &lt;code&gt;contents&lt;/code&gt; into the current module.</source>
          <target state="translated">Inserta una plantilla dada por los &lt;code&gt;contents&lt;/code&gt; en el m&amp;oacute;dulo actual.</target>
        </trans-unit>
        <trans-unit id="e3fd52b24df6fd39026fb28f8524cf6ca06d78cf" translate="yes" xml:space="preserve">
          <source>Embeds a text given by &lt;code&gt;contents&lt;/code&gt; into the current module.</source>
          <target state="translated">Incrusta un texto proporcionado por los &lt;code&gt;contents&lt;/code&gt; en el m&amp;oacute;dulo actual.</target>
        </trans-unit>
        <trans-unit id="5b3a40099a2074128eab39c61a99ee9cc8c97d42" translate="yes" xml:space="preserve">
          <source>Emits a sequence of values for the given accumulator.</source>
          <target state="translated">Emite una secuencia de valores para el acumulador dado.</target>
        </trans-unit>
        <trans-unit id="13f5c3f168a677e832d55a71220e8084e5ebb435" translate="yes" xml:space="preserve">
          <source>Emits a sequence of values for the given resource.</source>
          <target state="translated">Emite una secuencia de valores para el recurso dado.</target>
        </trans-unit>
        <trans-unit id="ee36a1b257d40c27de1319e9f52bd4df213a780a" translate="yes" xml:space="preserve">
          <source>Emits a sequence of values, starting with &lt;code&gt;start_value&lt;/code&gt;. Successive values are generated by calling &lt;code&gt;next_fun&lt;/code&gt; on the previous value.</source>
          <target state="translated">Emite una secuencia de valores, comenzando con &lt;code&gt;start_value&lt;/code&gt; . Los valores sucesivos se generan llamando a &lt;code&gt;next_fun&lt;/code&gt; en el valor anterior.</target>
        </trans-unit>
        <trans-unit id="c167634bd4b2e54cc64b0ca7da7acd698bd3f926" translate="yes" xml:space="preserve">
          <source>Empty list elements are discarded.</source>
          <target state="translated">Los elementos de la lista vacía son descartados.</target>
        </trans-unit>
        <trans-unit id="2965dae66a63ca2f32957370b2d3c71d31f0404a" translate="yes" xml:space="preserve">
          <source>Empty list elements from &lt;code&gt;list&lt;/code&gt; are discarded, but not the ones from &lt;code&gt;tail&lt;/code&gt;.</source>
          <target state="translated">Los elementos de &lt;code&gt;list&lt;/code&gt; a vac&amp;iacute;os de la lista se descartan, pero no los de &lt;code&gt;tail&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e62ffd3f17608b67830975574d7151f053f3b91e" translate="yes" xml:space="preserve">
          <source>Empty strings are only removed from the result if the &lt;code&gt;:trim&lt;/code&gt; option is set to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">Las cadenas vac&amp;iacute;as solo se eliminan del resultado si la opci&amp;oacute;n &lt;code&gt;:trim&lt;/code&gt; se establece en &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="55e69718479729085dd821e5465e25f44c0324fa" translate="yes" xml:space="preserve">
          <source>Enables logging for the current process.</source>
          <target state="translated">Permite el registro del proceso actual.</target>
        </trans-unit>
        <trans-unit id="e2d19b78121686bc349ccaa09a8452830a7f9140" translate="yes" xml:space="preserve">
          <source>Encircled.</source>
          <target state="translated">Encircled.</target>
        </trans-unit>
        <trans-unit id="c616c5fe7020dabc2f93906e0a5f2e05bdc7d8a9" translate="yes" xml:space="preserve">
          <source>Encodes &lt;code&gt;string&lt;/code&gt; as &quot;x-www-form-urlencoded&quot;.</source>
          <target state="translated">Codifica la &lt;code&gt;string&lt;/code&gt; como &quot;x-www-form-urlencoded&quot;.</target>
        </trans-unit>
        <trans-unit id="89ea780eda521b71e81ed735656c9b61d9499afc" translate="yes" xml:space="preserve">
          <source>Encodes a binary string into a base 16 encoded string.</source>
          <target state="translated">Codifica una cadena binaria en una cadena codificada de base 16.</target>
        </trans-unit>
        <trans-unit id="b7e8311ecf9de60bb4c8128af17fdd4f6e19c5bd" translate="yes" xml:space="preserve">
          <source>Encodes a binary string into a base 32 encoded string with an extended hexadecimal alphabet.</source>
          <target state="translated">Codifica una cadena binaria en una cadena de base 32 codificada con un alfabeto hexadecimal extendido.</target>
        </trans-unit>
        <trans-unit id="36e80d95ff066a33ec7f84aa78c9dbee7b1c006d" translate="yes" xml:space="preserve">
          <source>Encodes a binary string into a base 32 encoded string.</source>
          <target state="translated">Codifica una cadena binaria en una cadena codificada de base 32.</target>
        </trans-unit>
        <trans-unit id="02f9836e91d8d8f20631bf25f980c01911623202" translate="yes" xml:space="preserve">
          <source>Encodes a binary string into a base 64 encoded string with URL and filename safe alphabet.</source>
          <target state="translated">Codifica una cadena binaria en una cadena codificada en base 64 con URL y alfabeto seguro de nombre de archivo.</target>
        </trans-unit>
        <trans-unit id="598559f4be54955449341d6458c6b1bc5c089d2a" translate="yes" xml:space="preserve">
          <source>Encodes a binary string into a base 64 encoded string.</source>
          <target state="translated">Codifica una cadena binaria en una cadena codificada de base 64.</target>
        </trans-unit>
        <trans-unit id="669885d2c33e97774bece663078c5982ab0c0947" translate="yes" xml:space="preserve">
          <source>Encodes an enumerable into a query string.</source>
          <target state="translated">Codifica un enumerable en una cadena de consulta.</target>
        </trans-unit>
        <trans-unit id="5821fec7ee87050117e2081a31b307f34868a8ad" translate="yes" xml:space="preserve">
          <source>Encoding</source>
          <target state="translated">Encoding</target>
        </trans-unit>
        <trans-unit id="322c5d3730703ae50125a473e7a7c3d0e9ef2301" translate="yes" xml:space="preserve">
          <source>Endianness</source>
          <target state="translated">Endianness</target>
        </trans-unit>
        <trans-unit id="2ea89f176d80e61e2fa991e7665230fc139bc40d" translate="yes" xml:space="preserve">
          <source>Enforcing keys</source>
          <target state="translated">Hacer cumplir las claves</target>
        </trans-unit>
        <trans-unit id="c1f65ddb75ed7d97e701168af35171410be8f9e7" translate="yes" xml:space="preserve">
          <source>Engine</source>
          <target state="translated">Engine</target>
        </trans-unit>
        <trans-unit id="428bd921a8f300c3b20c8266821204a755c68434" translate="yes" xml:space="preserve">
          <source>Ensures the given &lt;code&gt;app&lt;/code&gt; and its applications are started.</source>
          <target state="translated">Asegura que la &lt;code&gt;app&lt;/code&gt; dada y sus aplicaciones se inicien.</target>
        </trans-unit>
        <trans-unit id="555514beae7482d6d57cd04de49cfc7d3710c06c" translate="yes" xml:space="preserve">
          <source>Ensures the given &lt;code&gt;app&lt;/code&gt; is loaded.</source>
          <target state="translated">Asegura que la &lt;code&gt;app&lt;/code&gt; dada est&amp;eacute; cargada.</target>
        </trans-unit>
        <trans-unit id="5fb7dedc1a9428584a4069438797a9ae78f66928" translate="yes" xml:space="preserve">
          <source>Ensures the given &lt;code&gt;app&lt;/code&gt; is started.</source>
          <target state="translated">Asegura que se inicie la &lt;code&gt;app&lt;/code&gt; dada .</target>
        </trans-unit>
        <trans-unit id="23ee0124a924556d787c30d38fea8fafda3318c2" translate="yes" xml:space="preserve">
          <source>Ensures the given module is compiled and loaded.</source>
          <target state="translated">Asegura que el módulo dado sea compilado y cargado.</target>
        </trans-unit>
        <trans-unit id="c639ba03accf3baf6f605c3c0a367752ac1ba4b8" translate="yes" xml:space="preserve">
          <source>Ensures the given module is loaded.</source>
          <target state="translated">Asegura que el módulo dado se cargue.</target>
        </trans-unit>
        <trans-unit id="02d3338a85e66444166e14ec820ab3f756bc5765" translate="yes" xml:space="preserve">
          <source>Ensures the project structure for the given project exists.</source>
          <target state="translated">Garantiza la existencia de la estructura del proyecto en cuestión.</target>
        </trans-unit>
        <trans-unit id="dd06dfc909fbc0c4ad3d2dc1fed376ba517fa970" translate="yes" xml:space="preserve">
          <source>Entries with duplicated keys end up in the same keyword list.</source>
          <target state="translated">Las entradas con claves duplicadas terminan en la misma lista de palabras clave.</target>
        </trans-unit>
        <trans-unit id="20588ae8e5c269292d35f9dfffa8f2eb3fd3c259" translate="yes" xml:space="preserve">
          <source>Enum</source>
          <target state="translated">Enum</target>
        </trans-unit>
        <trans-unit id="44a9d3cb7758b69424c29688d3733784f2d7beb8" translate="yes" xml:space="preserve">
          <source>Enum.EmptyError</source>
          <target state="translated">Enum.EmptyError</target>
        </trans-unit>
        <trans-unit id="203f8ecd57ba73b4d911d61ce2b2e0bbecd88546" translate="yes" xml:space="preserve">
          <source>Enum.EmptyError &lt;small&gt;exception&lt;/small&gt;</source>
          <target state="translated">Enum.EmptyError &lt;small&gt;excepci&amp;oacute;n&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="92ff846ccb27bb1237f0fe73dffd1111a34febfd" translate="yes" xml:space="preserve">
          <source>Enum.OutOfBoundsError</source>
          <target state="translated">Enum.OutOfBoundsError</target>
        </trans-unit>
        <trans-unit id="64fce429b4436d311f9ed265caf9dbd13748ca8e" translate="yes" xml:space="preserve">
          <source>Enum.OutOfBoundsError &lt;small&gt;exception&lt;/small&gt;</source>
          <target state="translated">Enum.OutOfBoundsError &lt;small&gt;excepci&amp;oacute;n&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="83df7a7ef8fa21dd3116045758d3e9407ca3149d" translate="yes" xml:space="preserve">
          <source>Enumerable</source>
          <target state="translated">Enumerable</target>
        </trans-unit>
        <trans-unit id="a8bd4b8016c41ed593121704b28a0f638927292f" translate="yes" xml:space="preserve">
          <source>Enumerable &lt;small&gt;protocol&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;Protocolo&lt;/small&gt; enumerable&lt;small&gt;&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="d949b006b0cb6700716702ddad84d81584b294d8" translate="yes" xml:space="preserve">
          <source>Enumerable keys in &lt;a href=&quot;https://hexdocs.pm/elixir/Map.html#drop/2&quot;&gt;&lt;code&gt;Map.drop/2&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://hexdocs.pm/elixir/Map.html#split/2&quot;&gt;&lt;code&gt;Map.split/2&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;https://hexdocs.pm/elixir/Map.html#take/2&quot;&gt;&lt;code&gt;Map.take/2&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">Numerosas claves en &lt;a href=&quot;https://hexdocs.pm/elixir/Map.html#drop/2&quot;&gt; &lt;code&gt;Map.drop/2&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;https://hexdocs.pm/elixir/Map.html#split/2&quot;&gt; &lt;code&gt;Map.split/2&lt;/code&gt; &lt;/a&gt; y &lt;a href=&quot;https://hexdocs.pm/elixir/Map.html#take/2&quot;&gt; &lt;code&gt;Map.take/2&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f5c0dbf914d64832e2d144e52e6254adb376dd46" translate="yes" xml:space="preserve">
          <source>Enumerable keys in &lt;a href=&quot;map#drop/2&quot;&gt;&lt;code&gt;Map.drop/2&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;map#split/2&quot;&gt;&lt;code&gt;Map.split/2&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;map#take/2&quot;&gt;&lt;code&gt;Map.take/2&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">Numerosas claves en &lt;a href=&quot;map#drop/2&quot;&gt; &lt;code&gt;Map.drop/2&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;map#split/2&quot;&gt; &lt;code&gt;Map.split/2&lt;/code&gt; &lt;/a&gt; y &lt;a href=&quot;map#take/2&quot;&gt; &lt;code&gt;Map.take/2&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="140efbf707d0a7d6c39e74eac70140aecd0e5c56" translate="yes" xml:space="preserve">
          <source>Enumerable protocol used by &lt;a href=&quot;enum&quot;&gt;&lt;code&gt;Enum&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;stream&quot;&gt;&lt;code&gt;Stream&lt;/code&gt;&lt;/a&gt; modules.</source>
          <target state="translated">Enumerable protocolo utilizado por los m&amp;oacute;dulos &lt;a href=&quot;enum&quot;&gt; &lt;code&gt;Enum&lt;/code&gt; &lt;/a&gt; y &lt;a href=&quot;stream&quot;&gt; &lt;code&gt;Stream&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a08785570fea867f5f88ca2ee2af7ae3e1313ca0" translate="yes" xml:space="preserve">
          <source>Enumerable protocol used by &lt;a href=&quot;https://hexdocs.pm/elixir/Enum.html&quot;&gt;&lt;code&gt;Enum&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://hexdocs.pm/elixir/Stream.html&quot;&gt;&lt;code&gt;Stream&lt;/code&gt;&lt;/a&gt; modules.</source>
          <target state="translated">Enumerable protocolo utilizado por los m&amp;oacute;dulos &lt;a href=&quot;https://hexdocs.pm/elixir/Enum.html&quot;&gt; &lt;code&gt;Enum&lt;/code&gt; &lt;/a&gt; y &lt;a href=&quot;https://hexdocs.pm/elixir/Stream.html&quot;&gt; &lt;code&gt;Stream&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d50ecedb47e87b1d9271881d5fe0a9349ed165af" translate="yes" xml:space="preserve">
          <source>Enumerable.acc (0)</source>
          <target state="translated">Enumerable.acc (0)</target>
        </trans-unit>
        <trans-unit id="165c38b0e896ed9f5159922dce36f171ef2320bb" translate="yes" xml:space="preserve">
          <source>Enumerable.continuation (0)</source>
          <target state="translated">Enumerable.continuación (0)</target>
        </trans-unit>
        <trans-unit id="ba612d94bc0277c74713f344be3f6d833e339b91" translate="yes" xml:space="preserve">
          <source>Enumerable.count (1)</source>
          <target state="translated">Enumerable.cuenta (1)</target>
        </trans-unit>
        <trans-unit id="c8a16ef4893a246c5d44ffbd9b826395af284553" translate="yes" xml:space="preserve">
          <source>Enumerable.member? (2)</source>
          <target state="translated">¿Enumerable.miembro? (2)</target>
        </trans-unit>
        <trans-unit id="a9bae250bd6ab01ed637153931cbca7969a9d2fd" translate="yes" xml:space="preserve">
          <source>Enumerable.reduce (3)</source>
          <target state="translated">Enumerable.reducir (3)</target>
        </trans-unit>
        <trans-unit id="ee6aa06bf997d33de46b0f36134133d251942cde" translate="yes" xml:space="preserve">
          <source>Enumerable.reducer (0)</source>
          <target state="translated">Enumerable.reductor (0)</target>
        </trans-unit>
        <trans-unit id="642806a29777279924e9371db22138badd652470" translate="yes" xml:space="preserve">
          <source>Enumerable.result (0)</source>
          <target state="translated">Enumerable.resultado (0)</target>
        </trans-unit>
        <trans-unit id="67feaa35a2d44a604538ef39106d006cede14270" translate="yes" xml:space="preserve">
          <source>Enumerable.slice (1)</source>
          <target state="translated">Enumerable.rebanada (1)</target>
        </trans-unit>
        <trans-unit id="976e95d4d549c47ec6aacfa3aeb87430d06ae485" translate="yes" xml:space="preserve">
          <source>Enumerable.slicing_fun (0)</source>
          <target state="translated">Enumerable.slicing_fun (0)</target>
        </trans-unit>
        <trans-unit id="8099438503374b0f111ad8c4312c5674efd4704f" translate="yes" xml:space="preserve">
          <source>Enumerable.t (0)</source>
          <target state="translated">Enumerable.t (0)</target>
        </trans-unit>
        <trans-unit id="7d2e28d9448f286359bfee7b46440bedbb9fdf58" translate="yes" xml:space="preserve">
          <source>Enumerables</source>
          <target state="translated">Enumerables</target>
        </trans-unit>
        <trans-unit id="1dc0acb1a8bb4c81550d3ac71c2122f2718c66f7" translate="yes" xml:space="preserve">
          <source>Enumerables and Streams</source>
          <target state="translated">Enumerables y Corrientes</target>
        </trans-unit>
        <trans-unit id="30d600c6cc439356af01777f989e3d24add2e962" translate="yes" xml:space="preserve">
          <source>Enumerates the &lt;code&gt;enumerable&lt;/code&gt;, by removing the elements for which function &lt;code&gt;fun&lt;/code&gt; returned duplicate elements.</source>
          <target state="translated">Enumera el &lt;code&gt;enumerable&lt;/code&gt; , eliminando los elementos para los que la funci&amp;oacute;n &lt;code&gt;fun&lt;/code&gt; devolvi&amp;oacute; elementos duplicados.</target>
        </trans-unit>
        <trans-unit id="0710d3c7a9e2c2a7ab19f785bc7e4ac156c8c8ae" translate="yes" xml:space="preserve">
          <source>Enumerates the &lt;code&gt;enumerable&lt;/code&gt;, removing all duplicated elements.</source>
          <target state="translated">Enumera el &lt;code&gt;enumerable&lt;/code&gt; , eliminando todos los elementos duplicados.</target>
        </trans-unit>
        <trans-unit id="d63d851ffe5d4b54e805b90b32ec2610b7cdc775" translate="yes" xml:space="preserve">
          <source>Enumerates the &lt;code&gt;enumerable&lt;/code&gt;, returning a list where all consecutive duplicated elements are collapsed to a single element.</source>
          <target state="translated">Enumera el &lt;code&gt;enumerable&lt;/code&gt; , devolviendo una lista donde todos los elementos duplicados consecutivos se contraen en un solo elemento.</target>
        </trans-unit>
        <trans-unit id="1173b2e11bd16e5dc36c119a4b84f02be11626b5" translate="yes" xml:space="preserve">
          <source>Environment variables</source>
          <target state="translated">Las variables de entorno</target>
        </trans-unit>
        <trans-unit id="e22b06d69ee07489bc27f1054e5551d2fb3ffec1" translate="yes" xml:space="preserve">
          <source>Environment variables that are not meant to hold a value (and act basically as flags) should be set to either &lt;code&gt;1&lt;/code&gt; or &lt;code&gt;true&lt;/code&gt;, for example:</source>
          <target state="translated">Las variables de entorno que no est&amp;aacute;n destinadas a contener un valor (y actuar b&amp;aacute;sicamente como indicadores) deben establecerse en &lt;code&gt;1&lt;/code&gt; o &lt;code&gt;true&lt;/code&gt; , por ejemplo:</target>
        </trans-unit>
        <trans-unit id="017b53c42e43b39e1f5aabf6f7280c2f777243a2" translate="yes" xml:space="preserve">
          <source>Environments</source>
          <target state="translated">Environments</target>
        </trans-unit>
        <trans-unit id="8263704ec4e031f9cd98ed43d056f7db9e2fa14d" translate="yes" xml:space="preserve">
          <source>Equal to operator. Returns &lt;code&gt;true&lt;/code&gt; if the two terms are equal.</source>
          <target state="translated">Igual al operador. Devuelve &lt;code&gt;true&lt;/code&gt; si los dos t&amp;eacute;rminos son iguales.</target>
        </trans-unit>
        <trans-unit id="5d9ca98304ae0b29eb5edae09971f0cda610aca2" translate="yes" xml:space="preserve">
          <source>Erlang Term Storage</source>
          <target state="translated">Almacenamiento a término de Erlang</target>
        </trans-unit>
        <trans-unit id="873eaae56cb75c28c82e887676a81c9c926d3d76" translate="yes" xml:space="preserve">
          <source>Erlang VM process identifier.</source>
          <target state="translated">Identificador de proceso Erlang VM.</target>
        </trans-unit>
        <trans-unit id="0f56eeaacbf7d4f4fe215cd958650ad712192183" translate="yes" xml:space="preserve">
          <source>Erlang and Elixir also have the idea of &lt;a href=&quot;#t:chardata/0&quot;&gt;&lt;code&gt;chardata/0&lt;/code&gt;&lt;/a&gt;. Chardata is very similar to IO data: the only difference is that integers in IO data represent bytes while integers in chardata represent Unicode code points. Bytes (&lt;a href=&quot;https://hexdocs.pm/elixir/typespecs.html#built-in-types&quot;&gt;&lt;code&gt;byte/0&lt;/code&gt;&lt;/a&gt;) are integers in the &lt;code&gt;0..255&lt;/code&gt; range, while Unicode code points (&lt;a href=&quot;https://hexdocs.pm/elixir/typespecs.html#built-in-types&quot;&gt;&lt;code&gt;char/0&lt;/code&gt;&lt;/a&gt;) are integers in the range &lt;code&gt;0..0x10FFFF&lt;/code&gt;. The &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt; module provides the &lt;a href=&quot;#chardata_to_string/1&quot;&gt;&lt;code&gt;chardata_to_string/1&lt;/code&gt;&lt;/a&gt; function for chardata as the &quot;counter-part&quot; of the &lt;a href=&quot;#iodata_to_binary/1&quot;&gt;&lt;code&gt;iodata_to_binary/1&lt;/code&gt;&lt;/a&gt; function for IO data.</source>
          <target state="translated">Erlang y Elixir tambi&amp;eacute;n tienen la idea de &lt;a href=&quot;#t:chardata/0&quot;&gt; &lt;code&gt;chardata/0&lt;/code&gt; &lt;/a&gt; . Chardata es muy similar a los datos IO: la &amp;uacute;nica diferencia es que los enteros en los datos IO representan bytes, mientras que los enteros en chardata representan puntos de c&amp;oacute;digo Unicode. Los bytes ( &lt;a href=&quot;https://hexdocs.pm/elixir/typespecs.html#built-in-types&quot;&gt; &lt;code&gt;byte/0&lt;/code&gt; &lt;/a&gt; ) son n&amp;uacute;meros enteros en el rango &lt;code&gt;0..255&lt;/code&gt; , mientras que los puntos de c&amp;oacute;digo Unicode ( &lt;a href=&quot;https://hexdocs.pm/elixir/typespecs.html#built-in-types&quot;&gt; &lt;code&gt;char/0&lt;/code&gt; &lt;/a&gt; ) son n&amp;uacute;meros enteros en el rango &lt;code&gt;0..0x10FFFF&lt;/code&gt; . El m&amp;oacute;dulo &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;IO&lt;/code&gt; &lt;/a&gt; proporciona la funci&amp;oacute;n &lt;a href=&quot;#chardata_to_string/1&quot;&gt; &lt;code&gt;chardata_to_string/1&lt;/code&gt; &lt;/a&gt; para chardata como la &quot;contraparte&quot; de la funci&amp;oacute;n &lt;a href=&quot;#iodata_to_binary/1&quot;&gt; &lt;code&gt;iodata_to_binary/1&lt;/code&gt; &lt;/a&gt; para datos IO.</target>
        </trans-unit>
        <trans-unit id="5d81fb4bfd2d9c41c1a7ce9b604e0403471792c0" translate="yes" xml:space="preserve">
          <source>Erlang and Elixir also have the idea of &lt;a href=&quot;#t:chardata/0&quot;&gt;&lt;code&gt;chardata/0&lt;/code&gt;&lt;/a&gt;. Chardata is very similar to IO data: the only difference is that integers in IO data represent bytes while integers in chardata represent Unicode codepoints. Bytes (&lt;a href=&quot;typespecs#built-in-types&quot;&gt;&lt;code&gt;byte/0&lt;/code&gt;&lt;/a&gt;) are integers in the &lt;code&gt;0..255&lt;/code&gt; range, while Unicode codepoints (&lt;a href=&quot;typespecs#built-in-types&quot;&gt;&lt;code&gt;char/0&lt;/code&gt;&lt;/a&gt;) are integers in the range &lt;code&gt;0..0x10FFFF&lt;/code&gt;. The &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt; module provides the &lt;a href=&quot;#chardata_to_string/1&quot;&gt;&lt;code&gt;chardata_to_string/1&lt;/code&gt;&lt;/a&gt; function for chardata as the &quot;counter-part&quot; of the &lt;a href=&quot;#iodata_to_binary/1&quot;&gt;&lt;code&gt;iodata_to_binary/1&lt;/code&gt;&lt;/a&gt; function for IO data.</source>
          <target state="translated">Erlang y Elixir tambi&amp;eacute;n tienen la idea de &lt;a href=&quot;#t:chardata/0&quot;&gt; &lt;code&gt;chardata/0&lt;/code&gt; &lt;/a&gt; . Chardata es muy similar a los datos IO: la &amp;uacute;nica diferencia es que los enteros en los datos IO representan bytes, mientras que los enteros en chardata representan puntos de c&amp;oacute;digo Unicode. Los bytes ( &lt;a href=&quot;typespecs#built-in-types&quot;&gt; &lt;code&gt;byte/0&lt;/code&gt; &lt;/a&gt; ) son n&amp;uacute;meros enteros en el rango &lt;code&gt;0..255&lt;/code&gt; , mientras que los puntos de c&amp;oacute;digo Unicode ( &lt;a href=&quot;typespecs#built-in-types&quot;&gt; &lt;code&gt;char/0&lt;/code&gt; &lt;/a&gt; ) son n&amp;uacute;meros enteros en el rango &lt;code&gt;0..0x10FFFF&lt;/code&gt; . El m&amp;oacute;dulo &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;IO&lt;/code&gt; &lt;/a&gt; proporciona la funci&amp;oacute;n &lt;a href=&quot;#chardata_to_string/1&quot;&gt; &lt;code&gt;chardata_to_string/1&lt;/code&gt; &lt;/a&gt; para chardata como la &quot;contraparte&quot; de la funci&amp;oacute;n &lt;a href=&quot;#iodata_to_binary/1&quot;&gt; &lt;code&gt;iodata_to_binary/1&lt;/code&gt; &lt;/a&gt; para datos IO.</target>
        </trans-unit>
        <trans-unit id="257cd41d0a52105a1f464fecff0c7474573eaa0b" translate="yes" xml:space="preserve">
          <source>Erlang and Elixir are sometimes known for the capability of upgrading a node that is running in production without shutting down that node. However, this feature is not supported out of the box by Elixir releases.</source>
          <target state="translated">Erlang y Elixir son a veces conocidos por la capacidad de mejorar un nodo que está funcionando en producción sin cerrar ese nodo.Sin embargo,esta característica no está soportada por los lanzamientos de Elixir.</target>
        </trans-unit>
        <trans-unit id="2ad841c6351d40f6ce14b1c3365f66f45cf90f9a" translate="yes" xml:space="preserve">
          <source>Erlang configuration - options that handle integration with Erlang's logging facilities</source>
          <target state="translated">Configuración de Erlang-opciones que manejan la integración con las instalaciones de registro de Erlang</target>
        </trans-unit>
        <trans-unit id="dcdbc42e4590fc1cd5b2780008879d7043463df9" translate="yes" xml:space="preserve">
          <source>Erlang errors</source>
          <target state="translated">Obtención de errores</target>
        </trans-unit>
        <trans-unit id="afd9042ead7605c46c0058e1b4e52ac063ec4da4" translate="yes" xml:space="preserve">
          <source>Erlang errors are transformed into Elixir ones when rescuing:</source>
          <target state="translated">Los errores de Erlang se transforman en los de Elixir al rescatar:</target>
        </trans-unit>
        <trans-unit id="ef09a5110ea182804c30762b32ada9f7c5b439dd" translate="yes" xml:space="preserve">
          <source>Erlang handlers run in the same process as the process logging the message/event. This gives developers more flexibility but they should avoid performing any long running action in such handlers, as it may slow down the action being executed considerably. At the moment, there is no built-in overload protection for Erlang handlers, so it is your responsibility to implement it</source>
          <target state="translated">Los manejadores de Erlang funcionan en el mismo proceso que el proceso de registro del mensaje/evento.Esto da a los desarrolladores más flexibilidad,pero deben evitar realizar cualquier acción de larga duración en esos manejadores,ya que puede ralentizar considerablemente la acción que se está ejecutando.Por el momento,no hay una protección contra sobrecargas incorporada para los manejadores Erlang,por lo que es su responsabilidad implementarla</target>
        </trans-unit>
        <trans-unit id="80e47b987c75aeed2cf56f80f3a45202d7a9cade" translate="yes" xml:space="preserve">
          <source>Erlang has two modes to load code: interactive and embedded.</source>
          <target state="translated">Erlang tiene dos modos de cargar el código:interactivo e incrustado.</target>
        </trans-unit>
        <trans-unit id="c4aea0a9415c252cca77b12b8e68bf25c0600b44" translate="yes" xml:space="preserve">
          <source>Erlang libraries</source>
          <target state="translated">Bibliotecas de Erlang</target>
        </trans-unit>
        <trans-unit id="947adf59db0f5074b68cab24e83d10f84084f65d" translate="yes" xml:space="preserve">
          <source>Erlang projects</source>
          <target state="translated">Proyectos Erlang</target>
        </trans-unit>
        <trans-unit id="353a427c9c3948990fb1397e32a17449450dd341" translate="yes" xml:space="preserve">
          <source>Erlang&amp;rsquo;s official website has a short &lt;a href=&quot;http://www.erlang.org/course/concurrent_programming.html&quot;&gt;tutorial&lt;/a&gt; with pictures that briefly describe Erlang&amp;rsquo;s primitives for concurrent programming.</source>
          <target state="translated">El sitio web oficial de Erlang tiene un breve &lt;a href=&quot;http://www.erlang.org/course/concurrent_programming.html&quot;&gt;tutorial&lt;/a&gt; con im&amp;aacute;genes que describen brevemente las primitivas de Erlang para la programaci&amp;oacute;n concurrente.</target>
        </trans-unit>
        <trans-unit id="2924249c9d3eeb99cc39153818164a0a08c129f2" translate="yes" xml:space="preserve">
          <source>Erlang&amp;rsquo;s official website has a short &lt;a href=&quot;https://www.erlang.org/course&quot;&gt;tutorial&lt;/a&gt;. There is chapter with pictures briefly describing Erlang&amp;rsquo;s primitives for &lt;a href=&quot;https://www.erlang.org/course/concurrent_programming.html&quot;&gt;concurrent programming&lt;/a&gt;.</source>
          <target state="translated">El sitio web oficial de Erlang tiene un breve &lt;a href=&quot;https://www.erlang.org/course&quot;&gt;tutorial&lt;/a&gt; . Hay un cap&amp;iacute;tulo con im&amp;aacute;genes que describen brevemente las primitivas de Erlang para &lt;a href=&quot;https://www.erlang.org/course/concurrent_programming.html&quot;&gt;la programaci&amp;oacute;n concurrente&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="64b602b5d1c8c7cedbd11a4c46c7bec0f2ef6328" translate="yes" xml:space="preserve">
          <source>Erlang/OTP 19 onwards</source>
          <target state="translated">Erlang/OTP 19 en adelante</target>
        </trans-unit>
        <trans-unit id="9f3b0640f155508325d5fd627bb055c21f7b1145" translate="yes" xml:space="preserve">
          <source>Erlang/OTP 20 onwards</source>
          <target state="translated">Erlang/OTP 20 en adelante</target>
        </trans-unit>
        <trans-unit id="3c959257e030332549e20072b5db96d3e0320669" translate="yes" xml:space="preserve">
          <source>Erlang/OTP handlers</source>
          <target state="translated">Manejadores de Erlang/OTP</target>
        </trans-unit>
        <trans-unit id="e3d3ba354eaa3fdf7c394b986d2d13ceb0a09b7f" translate="yes" xml:space="preserve">
          <source>Erlang/OTP handlers must be listed under your own application:</source>
          <target state="translated">Los manipuladores de Erlang/OTP deben figurar en su propia solicitud:</target>
        </trans-unit>
        <trans-unit id="e20c6b34c6701bebbb6bc88a9d6f49d957b3f1ee" translate="yes" xml:space="preserve">
          <source>Erlang/OTP integration</source>
          <target state="translated">Integración Erlang/OTP</target>
        </trans-unit>
        <trans-unit id="0240f7d16642d7d18aa4135e9508d4430ca6ed28" translate="yes" xml:space="preserve">
          <source>Erlang/OTP versioning is independent from the versioning of Elixir. Each version of Elixir supports a specific range of Erlang/OTP versions. The compatibility table is shown below.</source>
          <target state="translated">El versionado de Erlang/OTP es independiente del versionado de Elixir.Cada versión de Elixir admite una gama específica de versiones Erlang/OTP.La tabla de compatibilidad se muestra a continuación.</target>
        </trans-unit>
        <trans-unit id="95b539190ee1df5b25c9d30c7a60632c2c6242b6" translate="yes" xml:space="preserve">
          <source>ErlangError</source>
          <target state="translated">ErlangError</target>
        </trans-unit>
        <trans-unit id="eb887d05f639b63c61d49ed79af8fbf4426605b6" translate="yes" xml:space="preserve">
          <source>ErlangError &lt;small&gt;exception&lt;/small&gt;</source>
          <target state="translated">ErlangError &lt;small&gt;excepci&amp;oacute;n&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="73631d7f0356fdbdeaa36f8e5dbad89c6aa15dc4" translate="yes" xml:space="preserve">
          <source>Error handling</source>
          <target state="translated">Manejo de errores...</target>
        </trans-unit>
        <trans-unit id="6a37b79ee438a25b4b00f639862f12f01079bb8d" translate="yes" xml:space="preserve">
          <source>Error logger configuration</source>
          <target state="translated">Configuración del registrador de errores</target>
        </trans-unit>
        <trans-unit id="9497fa3a6a15769b096afdea76d16a9bb93c4394" translate="yes" xml:space="preserve">
          <source>Error reasons</source>
          <target state="translated">Razones de error</target>
        </trans-unit>
        <trans-unit id="805e86a8cbf628e38e4c45612c005a504009e79a" translate="yes" xml:space="preserve">
          <source>Errors</source>
          <target state="translated">Errors</target>
        </trans-unit>
        <trans-unit id="e4b51562d8691be50e95ec4d102a96ec94cfc7fc" translate="yes" xml:space="preserve">
          <source>Errors (or &lt;em&gt;exceptions&lt;/em&gt;) are used when exceptional things happen in the code. A sample error can be retrieved by trying to add a number into an atom:</source>
          <target state="translated">Los errores (o &lt;em&gt;excepciones&lt;/em&gt; ) se utilizan cuando suceden cosas excepcionales en el c&amp;oacute;digo. Se puede recuperar un error de muestra al intentar agregar un n&amp;uacute;mero en un &amp;aacute;tomo:</target>
        </trans-unit>
        <trans-unit id="1e769d29496e91df4803194e858296cef49f583c" translate="yes" xml:space="preserve">
          <source>Errors can be &lt;strong&gt;rescued&lt;/strong&gt; using the &lt;code&gt;try/rescue&lt;/code&gt; construct:</source>
          <target state="translated">Los errores se pueden &lt;strong&gt;rescatar&lt;/strong&gt; utilizando la construcci&amp;oacute;n &lt;code&gt;try/rescue&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="ace44333765fe041260545be00bfe6b34903e900" translate="yes" xml:space="preserve">
          <source>Errors in guards</source>
          <target state="translated">Errores en los guardias</target>
        </trans-unit>
        <trans-unit id="6d7f25adbd68385b52715a0e769e2e3468d082ed" translate="yes" xml:space="preserve">
          <source>Escape characters</source>
          <target state="translated">Los personajes de la fuga</target>
        </trans-unit>
        <trans-unit id="7cf06e4f5765ec1423667355b26bedd03532387d" translate="yes" xml:space="preserve">
          <source>Escapes a string to be literally matched in a regex.</source>
          <target state="translated">Escapa de una cuerda para ser literalmente emparejado en un regex.</target>
        </trans-unit>
        <trans-unit id="2779ea444cb47200f1b0085d04662b33c09fc23f" translate="yes" xml:space="preserve">
          <source>Escaping</source>
          <target state="translated">Escaping</target>
        </trans-unit>
        <trans-unit id="7e30234707fb1dda8ea3159dd78fbf5f465fb228" translate="yes" xml:space="preserve">
          <source>Escripts are installed at &lt;code&gt;~/.mix/escripts&lt;/code&gt;. Add that path to your &lt;code&gt;PATH&lt;/code&gt; environment variable to be able to run installed escripts from any directory.</source>
          <target state="translated">Los escripts se instalan en &lt;code&gt;~/.mix/escripts&lt;/code&gt; . Agregue esa ruta a su &lt;code&gt;PATH&lt;/code&gt; entorno PATH para poder ejecutar los scripts instalados desde cualquier directorio.</target>
        </trans-unit>
        <trans-unit id="cfc5f1f3afc3241e14ccf2fda82512fad9553a23" translate="yes" xml:space="preserve">
          <source>Escripts should be used as a mechanism to share scripts between developers and not as a deployment mechanism. For running live systems, consider using &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Run.html&quot;&gt;&lt;code&gt;mix run&lt;/code&gt;&lt;/a&gt; or building releases. See the &lt;a href=&quot;https://hexdocs.pm/elixir/Application.html&quot;&gt;&lt;code&gt;Application&lt;/code&gt;&lt;/a&gt; module for more information on systems life-cycles.</source>
          <target state="translated">Los escripts deben usarse como un mecanismo para compartir scripts entre desarrolladores y no como un mecanismo de implementaci&amp;oacute;n. Para ejecutar sistemas en vivo, considere usar versiones &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Run.html&quot;&gt; &lt;code&gt;mix run&lt;/code&gt; &lt;/a&gt; o de compilaci&amp;oacute;n. Consulte el m&amp;oacute;dulo &lt;a href=&quot;https://hexdocs.pm/elixir/Application.html&quot;&gt; &lt;code&gt;Application&lt;/code&gt; &lt;/a&gt; para obtener m&amp;aacute;s informaci&amp;oacute;n sobre los ciclos de vida de los sistemas.</target>
        </trans-unit>
        <trans-unit id="ef08760354a34230fab73487dfba3c92eef3db07" translate="yes" xml:space="preserve">
          <source>Escripts should be used as a mechanism to share scripts between developers and not as a deployment mechanism. For running live systems, consider using &lt;a href=&quot;mix.tasks.run&quot;&gt;&lt;code&gt;mix run&lt;/code&gt;&lt;/a&gt; or building releases. See the &lt;a href=&quot;https://hexdocs.pm/elixir/Application.html&quot;&gt;&lt;code&gt;Application&lt;/code&gt;&lt;/a&gt; module for more information on systems life-cycles.</source>
          <target state="translated">Los escripts deben usarse como un mecanismo para compartir scripts entre desarrolladores y no como un mecanismo de implementaci&amp;oacute;n. Para ejecutar sistemas en vivo, considere usar versiones &lt;a href=&quot;mix.tasks.run&quot;&gt; &lt;code&gt;mix run&lt;/code&gt; &lt;/a&gt; o de compilaci&amp;oacute;n. Consulte el m&amp;oacute;dulo &lt;a href=&quot;https://hexdocs.pm/elixir/Application.html&quot;&gt; &lt;code&gt;Application&lt;/code&gt; &lt;/a&gt; para obtener m&amp;aacute;s informaci&amp;oacute;n sobre los ciclos de vida de los sistemas.</target>
        </trans-unit>
        <trans-unit id="9a5a63b505c94b9715c6cb22738effadf43970a2" translate="yes" xml:space="preserve">
          <source>Establishes a connection to &lt;code&gt;node&lt;/code&gt;.</source>
          <target state="translated">Establece una conexi&amp;oacute;n con el &lt;code&gt;node&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5197d13a701e91968e7385a64eaafa020ebb9b3e" translate="yes" xml:space="preserve">
          <source>Evals the given file.</source>
          <target state="translated">Evita el archivo dado.</target>
        </trans-unit>
        <trans-unit id="a80e33a10ee3ca88cd7700527b66fae439803baa" translate="yes" xml:space="preserve">
          <source>Evaluate a string (&lt;a href=&quot;#eval_string/3&quot;&gt;&lt;code&gt;eval_string/3&lt;/code&gt;&lt;/a&gt;) or a file (&lt;a href=&quot;#eval_file/3&quot;&gt;&lt;code&gt;eval_file/3&lt;/code&gt;&lt;/a&gt;) directly. This is the simplest API to use but also the slowest, since the code is evaluated and not compiled before.</source>
          <target state="translated">Eval&amp;uacute;e una cadena ( &lt;a href=&quot;#eval_string/3&quot;&gt; &lt;code&gt;eval_string/3&lt;/code&gt; &lt;/a&gt; ) o un archivo ( &lt;a href=&quot;#eval_file/3&quot;&gt; &lt;code&gt;eval_file/3&lt;/code&gt; &lt;/a&gt; ) directamente. Esta es la API m&amp;aacute;s simple de usar pero tambi&amp;eacute;n la m&amp;aacute;s lenta, ya que el c&amp;oacute;digo se eval&amp;uacute;a y no se compila antes.</target>
        </trans-unit>
        <trans-unit id="c61e6ac1811baae3135839c7b54f099f020838b7" translate="yes" xml:space="preserve">
          <source>Evaluate a string (&lt;code&gt;eval_string&lt;/code&gt;) or a file (&lt;code&gt;eval_file&lt;/code&gt;) directly. This is the simplest API to use but also the slowest, since the code is evaluated and not compiled before.</source>
          <target state="translated">Eval&amp;uacute;e una cadena ( &lt;code&gt;eval_string&lt;/code&gt; ) o un archivo ( &lt;code&gt;eval_file&lt;/code&gt; ) directamente. Esta es la API m&amp;aacute;s simple de usar pero tambi&amp;eacute;n la m&amp;aacute;s lenta, ya que el c&amp;oacute;digo se eval&amp;uacute;a y no se compila antes.</target>
        </trans-unit>
        <trans-unit id="b6b73d4e37c0e2fc6bcd10607ad1cdb1b13313ab" translate="yes" xml:space="preserve">
          <source>Evaluates &lt;code&gt;fun&lt;/code&gt; and puts the result under &lt;code&gt;key&lt;/code&gt; in &lt;code&gt;map&lt;/code&gt; unless &lt;code&gt;key&lt;/code&gt; is already present.</source>
          <target state="translated">Eval&amp;uacute;a la &lt;code&gt;fun&lt;/code&gt; y pone el resultado debajo de la &lt;code&gt;key&lt;/code&gt; en el &lt;code&gt;map&lt;/code&gt; a a menos que la &lt;code&gt;key&lt;/code&gt; ya est&amp;eacute; presente.</target>
        </trans-unit>
        <trans-unit id="47fea9e50d94c5ba5334f9182ab4da272971ff69" translate="yes" xml:space="preserve">
          <source>Evaluates &lt;code&gt;fun&lt;/code&gt; and puts the result under &lt;code&gt;key&lt;/code&gt; in keyword list unless &lt;code&gt;key&lt;/code&gt; is already present.</source>
          <target state="translated">Eval&amp;uacute;a la &lt;code&gt;fun&lt;/code&gt; y coloca el resultado debajo de la &lt;code&gt;key&lt;/code&gt; en la lista de palabras &lt;code&gt;key&lt;/code&gt; menos que la clave ya est&amp;eacute; presente.</target>
        </trans-unit>
        <trans-unit id="378c49e24c10c27a713c2ca33d351716056ef24a" translate="yes" xml:space="preserve">
          <source>Evaluates and copy templates at &lt;code&gt;source&lt;/code&gt; to &lt;code&gt;target&lt;/code&gt;.</source>
          <target state="translated">Eval&amp;uacute;a y copia plantillas desde el &lt;code&gt;source&lt;/code&gt; al &lt;code&gt;target&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="40a2755ea234063a3a9b34d6399df316742199aa" translate="yes" xml:space="preserve">
          <source>Evaluates the &lt;code&gt;include&lt;/code&gt; and &lt;code&gt;exclude&lt;/code&gt; filters against the given &lt;code&gt;tags&lt;/code&gt; to determine if tests should be skipped or excluded.</source>
          <target state="translated">Eval&amp;uacute;a los filtros de &lt;code&gt;include&lt;/code&gt; y &lt;code&gt;exclude&lt;/code&gt; respecto a las &lt;code&gt;tags&lt;/code&gt; dadas para determinar si las pruebas deben omitirse o excluirse.</target>
        </trans-unit>
        <trans-unit id="a872b79753ae8c15cc036688d28a6487ac1713c4" translate="yes" xml:space="preserve">
          <source>Evaluates the configuration &lt;code&gt;contents&lt;/code&gt; for the given &lt;code&gt;file&lt;/code&gt;.</source>
          <target state="translated">Eval&amp;uacute;a el &lt;code&gt;contents&lt;/code&gt; de la configuraci&amp;oacute;n para el &lt;code&gt;file&lt;/code&gt; dado .</target>
        </trans-unit>
        <trans-unit id="6d2ad4fd562a8770695759664566e68c79e896d7" translate="yes" xml:space="preserve">
          <source>Evaluates the contents given by &lt;code&gt;string&lt;/code&gt;.</source>
          <target state="translated">Eval&amp;uacute;a los contenidos dados por &lt;code&gt;string&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3f66e28bdcb030fa5267d28739b480d4ccf00895" translate="yes" xml:space="preserve">
          <source>Evaluates the expression corresponding to the first clause that evaluates to a truthy value.</source>
          <target state="translated">Evalúa la expresión correspondiente a la primera cláusula que evalúa a un valor de verdad.</target>
        </trans-unit>
        <trans-unit id="1ba5f7241081077b03b80183e469003ca9d8656f" translate="yes" xml:space="preserve">
          <source>Evaluates the given configuration file.</source>
          <target state="translated">Evalúa el archivo de configuración dado.</target>
        </trans-unit>
        <trans-unit id="f9da9d74593adcfa13d94962a59c2dd76ee78247" translate="yes" xml:space="preserve">
          <source>Evaluates the given expressions and handles any error, exit, or throw that may have happened.</source>
          <target state="translated">Evalúa las expresiones dadas y maneja cualquier error,salida o lanzamiento que pueda haber ocurrido.</target>
        </trans-unit>
        <trans-unit id="8c971533ea3061f79d23aaa5efa90e539f841e09" translate="yes" xml:space="preserve">
          <source>Evaluates the quoted contents in the given module's context.</source>
          <target state="translated">Evalúa los contenidos citados en el contexto del módulo dado.</target>
        </trans-unit>
        <trans-unit id="faed542c6d7a022474593aebff34b62313141b57" translate="yes" xml:space="preserve">
          <source>Evaluates the quoted contents.</source>
          <target state="translated">Evalúa los contenidos citados.</target>
        </trans-unit>
        <trans-unit id="211455d468ff468d1666caa77c6ea4a591130f77" translate="yes" xml:space="preserve">
          <source>Evaluating configuration</source>
          <target state="translated">Evaluando la configuración</target>
        </trans-unit>
        <trans-unit id="af2f0cacf83a79f7f113163a613ddccc7608558d" translate="yes" xml:space="preserve">
          <source>Even a map is represented as a call to &lt;code&gt;%{}&lt;/code&gt;:</source>
          <target state="translated">Incluso un mapa se representa como una llamada a &lt;code&gt;%{}&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="9379ba740718a45c562052c55dae060f6e11aa7a" translate="yes" xml:space="preserve">
          <source>Even if the timer had expired and the message was sent, this function does not tell you if the timeout message has arrived at its destination yet.</source>
          <target state="translated">Aunque el temporizador haya expirado y el mensaje haya sido enviado,esta función no le dice si el mensaje de tiempo muerto ya ha llegado a su destino.</target>
        </trans-unit>
        <trans-unit id="27ed9c8d1ab5b1899cff5f812cb51b56f1af0736" translate="yes" xml:space="preserve">
          <source>Even if we have type-specific functions for getting the size built into Elixir (such as &lt;code&gt;tuple_size/1&lt;/code&gt;), we could implement a generic &lt;code&gt;Size&lt;/code&gt; protocol that all data structures for which size is pre-computed would implement.</source>
          <target state="translated">Incluso si tenemos funciones espec&amp;iacute;ficas de tipo para obtener el tama&amp;ntilde;o integrado en Elixir (como &lt;code&gt;tuple_size/1&lt;/code&gt; ), podr&amp;iacute;amos implementar un protocolo de &lt;code&gt;Size&lt;/code&gt; gen&amp;eacute;rico que implementar&amp;iacute;an todas las estructuras de datos para las que el tama&amp;ntilde;o est&amp;aacute; precalculado .</target>
        </trans-unit>
        <trans-unit id="9d8348e73cb5ab059583fd7f108ed8a332dfe09b" translate="yes" xml:space="preserve">
          <source>Even though Elixir attempts its best to provide a safe environment for macros, the major responsibility of writing clean code with macros falls on developers. Macros are harder to write than ordinary Elixir functions and it&amp;rsquo;s considered to be bad style to use them when they&amp;rsquo;re not necessary. So write macros responsibly.</source>
          <target state="translated">Aunque Elixir hace todo lo posible para proporcionar un entorno seguro para las macros, la principal responsabilidad de escribir c&amp;oacute;digo limpio con macros recae en los desarrolladores. Las macros son m&amp;aacute;s dif&amp;iacute;ciles de escribir que las funciones ordinarias de Elixir y se considera de mal estilo usarlas cuando no son necesarias. As&amp;iacute; que escribe macros de forma responsable.</target>
        </trans-unit>
        <trans-unit id="52a8ac08291fe93f3d696a3c45b1d1387494b7dc" translate="yes" xml:space="preserve">
          <source>Even though Elixir attempts its best to provide a safe environment for macros, the major responsibility of writing clean code with macros falls on developers. Macros are harder to write than ordinary Elixir functions and it's considered to be bad style to use them when they're not necessary. So write macros responsibly.</source>
          <target state="translated">Aunque Elixir hace todo lo posible por proporcionar un entorno seguro para las macros,la mayor responsabilidad de escribir código limpio con macros recae en los desarrolladores.Los macros son más difíciles de escribir que las funciones ordinarias de Elixir y se considera un mal estilo usarlos cuando no son necesarios.Así que escribe macros responsablemente.</target>
        </trans-unit>
        <trans-unit id="b287135931c568aaa11f51a4123249a43f85f9eb" translate="yes" xml:space="preserve">
          <source>Even though lists preserve the user ordering, the functions in &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Keyword&lt;/code&gt;&lt;/a&gt; do not guarantee any ordering. For example, if you invoke &lt;code&gt;Keyword.put(opts, new_key, new_value)&lt;/code&gt;, there is no guarantee to where &lt;code&gt;new_key&lt;/code&gt; will be added (to the front, to the end, or anywhere else).</source>
          <target state="translated">Aunque las listas conservan el orden del usuario, las funciones en &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;Keyword&lt;/code&gt; &lt;/a&gt; no garantizan ning&amp;uacute;n orden. Por ejemplo, si invoca &lt;code&gt;Keyword.put(opts, new_key, new_value)&lt;/code&gt; , no hay garant&amp;iacute;a de d&amp;oacute;nde se &lt;code&gt;new_key&lt;/code&gt; (al principio, al final o en cualquier otro lugar).</target>
        </trans-unit>
        <trans-unit id="028b9d4259c03a084cc43fe3d1014cc325f783d4" translate="yes" xml:space="preserve">
          <source>Even though the directory is empty and there is no &lt;code&gt;.app&lt;/code&gt; file it is considered the application directory based on the name &quot;foo/ebin&quot;. The name may contain a dash &lt;code&gt;-&lt;/code&gt; which is considered to be the app version and it is removed for the lookup purposes:</source>
          <target state="translated">Aunque el directorio est&amp;aacute; vac&amp;iacute;o y no hay ning&amp;uacute;n archivo &lt;code&gt;.app&lt;/code&gt; , se considera el directorio de la aplicaci&amp;oacute;n seg&amp;uacute;n el nombre &quot;foo / ebin&quot;. El nombre puede contener un gui&amp;oacute;n &lt;code&gt;-&lt;/code&gt; que se considera la versi&amp;oacute;n de la aplicaci&amp;oacute;n y se elimina para fines de b&amp;uacute;squeda:</target>
        </trans-unit>
        <trans-unit id="c198b47773d307f8ee645f6d155cb12a7d81efef" translate="yes" xml:space="preserve">
          <source>Even though the head of the list is not &lt;code&gt;nil&lt;/code&gt;, the first clause for &lt;code&gt;not_nil_head?/1&lt;/code&gt; fails because the expression does not evaluate to &lt;code&gt;true&lt;/code&gt;, but to &lt;code&gt;&quot;some_value&quot;&lt;/code&gt;, therefore triggering the second clause which returns &lt;code&gt;false&lt;/code&gt;. To make the guard behave correctly, you must ensure that the guard evaluates to &lt;code&gt;true&lt;/code&gt;, like so:</source>
          <target state="translated">Aunque el encabezado de la lista no es &lt;code&gt;nil&lt;/code&gt; , la primera cl&amp;aacute;usula para &lt;code&gt;not_nil_head?/1&lt;/code&gt; falla porque la expresi&amp;oacute;n no se eval&amp;uacute;a como &lt;code&gt;true&lt;/code&gt; , sino como &lt;code&gt;&quot;some_value&quot;&lt;/code&gt; , por lo que activa la segunda cl&amp;aacute;usula que devuelve &lt;code&gt;false&lt;/code&gt; . Para que el guardia se comporte correctamente, debe asegurarse de que el guardia se eval&amp;uacute;e como &lt;code&gt;true&lt;/code&gt; , as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="0521395297ab7a58030d272e2c72be5c8cdef7df" translate="yes" xml:space="preserve">
          <source>Even though the match works, &lt;code&gt;assert&lt;/code&gt; still expects a truth value. In such cases, simply use &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#==/2&quot;&gt;&lt;code&gt;Kernel.==/2&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#match?/2&quot;&gt;&lt;code&gt;Kernel.match?/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Aunque la coincidencia funciona, &lt;code&gt;assert&lt;/code&gt; todav&amp;iacute;a espera un valor de verdad. En tales casos, simplemente use &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#==/2&quot;&gt; &lt;code&gt;Kernel.==/2&lt;/code&gt; &lt;/a&gt; o &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#match?/2&quot;&gt; &lt;code&gt;Kernel.match?/2&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e115b0b23e56d703ace76f71257a63ef9824a34f" translate="yes" xml:space="preserve">
          <source>Even though the representation changed, the raw data does remain a list of numbers, which can be handled as such:</source>
          <target state="translated">Aunque la representación cambió,los datos en bruto siguen siendo una lista de números,que pueden manejarse como tales:</target>
        </trans-unit>
        <trans-unit id="84e3c9de2ccf9da0f358458d3784bc3f849f3c2c" translate="yes" xml:space="preserve">
          <source>Even though we haven't specified &lt;code&gt;--debug&lt;/code&gt; in the list of switches, it is part of the returned options. This would also work:</source>
          <target state="translated">Aunque no hemos especificado &lt;code&gt;--debug&lt;/code&gt; en la lista de modificadores, es parte de las opciones devueltas. Esto tambi&amp;eacute;n funcionar&amp;iacute;a:</target>
        </trans-unit>
        <trans-unit id="7cb4e4b7449c91102c58fcbb978127750613197b" translate="yes" xml:space="preserve">
          <source>Even with such guarantees, the developer plays a big role when writing macros responsibly. If you are confident you need to resort to macros, remember that macros are not your API. Keep your macro definitions short, including their quoted contents. For example, instead of writing a macro like this:</source>
          <target state="translated">Incluso con tales garantías,el desarrollador juega un gran papel al escribir macros de forma responsable.Si estás seguro de que necesitas recurrir a las macros,recuerda que las macros no son tu API.Mantén tus definiciones de macros cortas,incluyendo sus contenidos citados.Por ejemplo,en lugar de escribir una macro como esta:</target>
        </trans-unit>
        <trans-unit id="f153167a1bbb1f584f7f422c6cb126c95946d20e" translate="yes" xml:space="preserve">
          <source>Every describe block receives a name which is used as prefix for upcoming tests. Inside a block, &lt;a href=&quot;exunit.callbacks#setup/1&quot;&gt;&lt;code&gt;ExUnit.Callbacks.setup/1&lt;/code&gt;&lt;/a&gt; may be invoked and it will define a setup callback to run only for the current block. The describe name is also added as a tag, allowing developers to run tests for specific blocks.</source>
          <target state="translated">Cada bloque de descripci&amp;oacute;n recibe un nombre que se utiliza como prefijo para las pr&amp;oacute;ximas pruebas. Dentro de un bloque, se puede invocar &lt;a href=&quot;exunit.callbacks#setup/1&quot;&gt; &lt;code&gt;ExUnit.Callbacks.setup/1&lt;/code&gt; &lt;/a&gt; y definir&amp;aacute; una devoluci&amp;oacute;n de llamada de configuraci&amp;oacute;n para que se ejecute solo para el bloque actual. El nombre de descripci&amp;oacute;n tambi&amp;eacute;n se agrega como una etiqueta, lo que permite a los desarrolladores ejecutar pruebas para bloques espec&amp;iacute;ficos.</target>
        </trans-unit>
        <trans-unit id="a46c9a7fca545c132d8df109dd8dcaca95a3c354" translate="yes" xml:space="preserve">
          <source>Every describe block receives a name which is used as prefix for upcoming tests. Inside a block, &lt;a href=&quot;https://hexdocs.pm/ex_unit/ExUnit.Callbacks.html#setup/1&quot;&gt;&lt;code&gt;ExUnit.Callbacks.setup/1&lt;/code&gt;&lt;/a&gt; may be invoked and it will define a setup callback to run only for the current block. The describe name is also added as a tag, allowing developers to run tests for specific blocks.</source>
          <target state="translated">Cada bloque de descripci&amp;oacute;n recibe un nombre que se utiliza como prefijo para las pr&amp;oacute;ximas pruebas. Dentro de un bloque, &lt;a href=&quot;https://hexdocs.pm/ex_unit/ExUnit.Callbacks.html#setup/1&quot;&gt; &lt;code&gt;ExUnit.Callbacks.setup/1&lt;/code&gt; &lt;/a&gt; se puede invocar y definir&amp;aacute; una devoluci&amp;oacute;n de llamada de configuraci&amp;oacute;n para que se ejecute solo para el bloque actual. El nombre de descripci&amp;oacute;n tambi&amp;eacute;n se agrega como una etiqueta, lo que permite a los desarrolladores ejecutar pruebas para bloques espec&amp;iacute;ficos.</target>
        </trans-unit>
        <trans-unit id="6ef3d6f408824f6647a6e0d3de1a30549693b5c2" translate="yes" xml:space="preserve">
          <source>Every function clause dispatches the appropriate command to the &lt;code&gt;KV.Registry&lt;/code&gt; server that we registered during the &lt;code&gt;:kv&lt;/code&gt; application startup. Since our &lt;code&gt;:kv_server&lt;/code&gt; depends on the &lt;code&gt;:kv&lt;/code&gt; application, it is completely fine to depend on the services it provides.</source>
          <target state="translated">Cada cl&amp;aacute;usula de funci&amp;oacute;n env&amp;iacute;a el comando apropiado al servidor &lt;code&gt;KV.Registry&lt;/code&gt; que registramos durante el inicio de la aplicaci&amp;oacute;n &lt;code&gt;:kv&lt;/code&gt; . Dado que nuestro &lt;code&gt;:kv_server&lt;/code&gt; depende de la aplicaci&amp;oacute;n &lt;code&gt;:kv&lt;/code&gt; , est&amp;aacute; completamente bien depender de los servicios que proporciona.</target>
        </trans-unit>
        <trans-unit id="40baf8ceb490ed83843fc93e589192534f9511aa" translate="yes" xml:space="preserve">
          <source>Every new test starts on a new line, with an &lt;code&gt;iex&amp;gt;&lt;/code&gt; prefix. Multiline expressions can be used by prefixing subsequent lines with either &lt;code&gt;...&amp;gt;&lt;/code&gt; (recommended) or &lt;code&gt;iex&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">Cada nueva prueba comienza en una nueva l&amp;iacute;nea, con un prefijo &lt;code&gt;iex&amp;gt;&lt;/code&gt; . Las expresiones de varias l&amp;iacute;neas se pueden utilizar anteponiendo las l&amp;iacute;neas siguientes con &lt;code&gt;...&amp;gt;&lt;/code&gt; (recomendado) o &lt;code&gt;iex&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="76e353e9635feb9762b1896c7c1b95987d4b25d4" translate="yes" xml:space="preserve">
          <source>Every project has a &lt;code&gt;mix.exs&lt;/code&gt; file, with instructions on how to build, compile, run tests, and so on. Libraries commonly have a &lt;code&gt;lib&lt;/code&gt; directory, which includes Elixir source code, and a &lt;code&gt;test&lt;/code&gt; directory. A &lt;code&gt;src&lt;/code&gt; directory may also exist for Erlang sources.</source>
          <target state="translated">Cada proyecto tiene un archivo &lt;code&gt;mix.exs&lt;/code&gt; , con instrucciones sobre c&amp;oacute;mo construir, compilar, ejecutar pruebas, etc. Las bibliotecas suelen tener un directorio &lt;code&gt;lib&lt;/code&gt; , que incluye el c&amp;oacute;digo fuente de Elixir y un directorio de &lt;code&gt;test&lt;/code&gt; . Tambi&amp;eacute;n puede existir un directorio &lt;code&gt;src&lt;/code&gt; para las fuentes de Erlang.</target>
        </trans-unit>
        <trans-unit id="02a22b2e5fd456a7ae0a76d486db20f724d54096" translate="yes" xml:space="preserve">
          <source>Every release contains an environment file, named &lt;code&gt;env.sh&lt;/code&gt; on Unix-like systems and &lt;code&gt;env.bat&lt;/code&gt; on Windows machines, that executes before the Elixir system starts. In this file, you can execute any OS-level code, such as invoke other applications, set environment variables and so on. Some of those environment variables can even configure how the release itself runs.</source>
          <target state="translated">Cada versi&amp;oacute;n contiene un archivo de entorno, llamado &lt;code&gt;env.sh&lt;/code&gt; en sistemas similares a Unix y &lt;code&gt;env.bat&lt;/code&gt; en m&amp;aacute;quinas Windows, que se ejecuta antes de que se inicie el sistema Elixir. En este archivo, puede ejecutar cualquier c&amp;oacute;digo de nivel de sistema operativo, como invocar otras aplicaciones, establecer variables de entorno, etc. Algunas de esas variables de entorno pueden incluso configurar c&amp;oacute;mo se ejecuta la versi&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="b3ec0c5ca215e236f63402da7cfee38e03a48ba1" translate="yes" xml:space="preserve">
          <source>Every time a file is opened, Elixir spawns a new process. Writing to a file is equivalent to sending messages to the process that writes to the file descriptor.</source>
          <target state="translated">Cada vez que se abre un archivo,Elixir genera un nuevo proceso.Escribir en un archivo equivale a enviar mensajes al proceso que escribe en el descriptor del archivo.</target>
        </trans-unit>
        <trans-unit id="d10c5b0b93979a90184cbb51fe0a0e036d577833" translate="yes" xml:space="preserve">
          <source>Every time an attribute is read inside a function, a snapshot of its current value is taken. In other words, the value is read at compilation time and not at runtime. As we are going to see, this also makes attributes useful as storage during module compilation.</source>
          <target state="translated">Cada vez que se lee un atributo dentro de una función,se toma una instantánea de su valor actual.En otras palabras,el valor se lee en tiempo de compilación y no en tiempo de ejecución.Como veremos,esto también hace que los atributos sean útiles como almacenamiento durante la compilación del módulo.</target>
        </trans-unit>
        <trans-unit id="8195a151075d5ab9fbd9a600b260682c39388d0f" translate="yes" xml:space="preserve">
          <source>Every time an attribute is read inside a function, a snapshot of its current value is taken. In other words, the value is read at compilation time and not at runtime. As we are going to see, this also makes attributes useful to be used as storage during module compilation.</source>
          <target state="translated">Cada vez que se lee un atributo dentro de una función,se toma una instantánea de su valor actual.En otras palabras,el valor se lee en tiempo de compilación y no en tiempo de ejecución.Como veremos,esto también hace que los atributos sean útiles para ser utilizados como almacenamiento durante la compilación del módulo.</target>
        </trans-unit>
        <trans-unit id="78b99dda1ab8cad5aa5dc088e4709cd8ffa9a689" translate="yes" xml:space="preserve">
          <source>Every time we need to look up a bucket, we need to send a message to the registry. In case our registry is being accessed concurrently by multiple processes, the registry may become a bottleneck!</source>
          <target state="translated">Cada vez que necesitamos buscar un cubo,tenemos que enviar un mensaje al registro.En caso de que nuestro registro sea accedido simultáneamente por múltiples procesos,el registro puede convertirse en un cuello de botella!</target>
        </trans-unit>
        <trans-unit id="62cee6babe5c5a8fa4e03c567fac109731766e5f" translate="yes" xml:space="preserve">
          <source>Every time you add a new child to a supervisor, it is important to evaluate if the supervisor strategy is correct as well as the order of child processes. In this case, we are using &lt;code&gt;:one_for_one&lt;/code&gt; and the &lt;code&gt;KV.Registry&lt;/code&gt; is started before &lt;code&gt;KV.BucketSupervisor&lt;/code&gt;.</source>
          <target state="translated">Cada vez que agrega un nuevo ni&amp;ntilde;o a un supervisor, es importante evaluar si la estrategia del supervisor es correcta, as&amp;iacute; como el orden de los procesos secundarios. En este caso, estamos usando &lt;code&gt;:one_for_one&lt;/code&gt; y el &lt;code&gt;KV.Registry&lt;/code&gt; se inicia antes que &lt;code&gt;KV.BucketSupervisor&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b446cdb18e309af06e8229f9b0fda9244ac6da3e" translate="yes" xml:space="preserve">
          <source>Every time you concatenate binaries or use interpolation (&lt;code&gt;#{}&lt;/code&gt;) you are making copies of those binaries. However, in many cases you don't need the complete binary while you create it, but only at the end to print it out or send it somewhere. In such cases, you can construct the binary by creating IO data:</source>
          <target state="translated">Cada vez que concatenas binarios o usas interpolaci&amp;oacute;n ( &lt;code&gt;#{}&lt;/code&gt; ) est&amp;aacute;s haciendo copias de esos binarios. Sin embargo, en muchos casos no necesita el binario completo mientras lo crea, sino solo al final para imprimirlo o enviarlo a alg&amp;uacute;n lugar. En tales casos, puede construir el binario creando datos IO:</target>
        </trans-unit>
        <trans-unit id="ed798ff113b14474967cd268a8bbd91a2314f668" translate="yes" xml:space="preserve">
          <source>Every time you do a &lt;a href=&quot;#call/3&quot;&gt;&lt;code&gt;GenServer.call/3&lt;/code&gt;&lt;/a&gt;, the client will send a message that must be handled by the &lt;a href=&quot;#c:handle_call/3&quot;&gt;&lt;code&gt;handle_call/3&lt;/code&gt;&lt;/a&gt; callback in the GenServer. A &lt;a href=&quot;#cast/2&quot;&gt;&lt;code&gt;cast/2&lt;/code&gt;&lt;/a&gt; message must be handled by &lt;a href=&quot;#c:handle_cast/2&quot;&gt;&lt;code&gt;handle_cast/2&lt;/code&gt;&lt;/a&gt;. There are 7 possible callbacks to be implemented when you use a &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;GenServer&lt;/code&gt;&lt;/a&gt;. The only required callback is &lt;a href=&quot;#c:init/1&quot;&gt;&lt;code&gt;init/1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Cada vez que haga un &lt;a href=&quot;#call/3&quot;&gt; &lt;code&gt;GenServer.call/3&lt;/code&gt; &lt;/a&gt; , el cliente enviar&amp;aacute; un mensaje que debe ser manejado por la devoluci&amp;oacute;n &lt;a href=&quot;#c:handle_call/3&quot;&gt; &lt;code&gt;handle_call/3&lt;/code&gt; &lt;/a&gt; llamada handle_call / 3 en el GenServer. Un mensaje de &lt;a href=&quot;#cast/2&quot;&gt; &lt;code&gt;cast/2&lt;/code&gt; &lt;/a&gt; debe ser manejado por &lt;a href=&quot;#c:handle_cast/2&quot;&gt; &lt;code&gt;handle_cast/2&lt;/code&gt; &lt;/a&gt; . Hay 7 devoluciones de llamada posibles para implementar cuando utiliza un &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;GenServer&lt;/code&gt; &lt;/a&gt; . La &amp;uacute;nica devoluci&amp;oacute;n de llamada requerida es &lt;a href=&quot;#c:init/1&quot;&gt; &lt;code&gt;init/1&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="962675beca29d3a850376db901731b3eb3593d3c" translate="yes" xml:space="preserve">
          <source>Every time you do a &lt;a href=&quot;genserver#call/3&quot;&gt;&lt;code&gt;GenServer.call/3&lt;/code&gt;&lt;/a&gt;, the client will send a message that must be handled by the &lt;a href=&quot;#c:handle_call/3&quot;&gt;&lt;code&gt;handle_call/3&lt;/code&gt;&lt;/a&gt; callback in the GenServer. A &lt;a href=&quot;#cast/2&quot;&gt;&lt;code&gt;cast/2&lt;/code&gt;&lt;/a&gt; message must be handled by &lt;a href=&quot;#c:handle_cast/2&quot;&gt;&lt;code&gt;handle_cast/2&lt;/code&gt;&lt;/a&gt;. There are 7 possible callbacks to be implemented when you use a &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;GenServer&lt;/code&gt;&lt;/a&gt;. The only required callback is &lt;a href=&quot;#c:init/1&quot;&gt;&lt;code&gt;init/1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Cada vez que haga un &lt;a href=&quot;genserver#call/3&quot;&gt; &lt;code&gt;GenServer.call/3&lt;/code&gt; &lt;/a&gt; , el cliente enviar&amp;aacute; un mensaje que debe ser manejado por la devoluci&amp;oacute;n &lt;a href=&quot;#c:handle_call/3&quot;&gt; &lt;code&gt;handle_call/3&lt;/code&gt; &lt;/a&gt; llamada handle_call / 3 en el GenServer. Un mensaje de &lt;a href=&quot;#cast/2&quot;&gt; &lt;code&gt;cast/2&lt;/code&gt; &lt;/a&gt; debe ser manejado por &lt;a href=&quot;#c:handle_cast/2&quot;&gt; &lt;code&gt;handle_cast/2&lt;/code&gt; &lt;/a&gt; . Hay 7 devoluciones de llamada posibles para implementar cuando usa un &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;GenServer&lt;/code&gt; &lt;/a&gt; . La &amp;uacute;nica devoluci&amp;oacute;n de llamada requerida es &lt;a href=&quot;#c:init/1&quot;&gt; &lt;code&gt;init/1&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3205df423b3d81a662d949f234ea958bc947b117" translate="yes" xml:space="preserve">
          <source>Every value in the map is a string, and these are:</source>
          <target state="translated">Cada valor en el mapa es una cadena,y estos son:</target>
        </trans-unit>
        <trans-unit id="bd021f13376bc32f27e40804859460a61c19bc80" translate="yes" xml:space="preserve">
          <source>Everything that is inside the function we passed to the agent happens in the agent process. In this case, since the agent process is the one receiving and responding to our messages, we say the agent process is the server. Everything outside the function is happening in the client.</source>
          <target state="translated">Todo lo que está dentro de la función que le pasamos al agente ocurre en el proceso del agente.En este caso,ya que el proceso del agente es el que recibe y responde a nuestros mensajes,decimos que el proceso del agente es el servidor.Todo lo que está fuera de la función ocurre en el cliente.</target>
        </trans-unit>
        <trans-unit id="1cf46969c22298bcd54d98e6e2c526dc85b4471b" translate="yes" xml:space="preserve">
          <source>Everything we have done so far could have been implemented with an &lt;code&gt;Agent&lt;/code&gt;. In this section, we will see one of many things that we can achieve with a GenServer that is not possible with an Agent.</source>
          <target state="translated">Todo lo que hemos hecho hasta ahora podr&amp;iacute;a haberse implementado con un &lt;code&gt;Agent&lt;/code&gt; . En esta secci&amp;oacute;n, veremos una de las muchas cosas que podemos lograr con un GenServer que no es posible con un Agente.</target>
        </trans-unit>
        <trans-unit id="76820f41cc3743792e89eb2f8f24b62c9538f00b" translate="yes" xml:space="preserve">
          <source>ExUnit</source>
          <target state="translated">ExUnit</target>
        </trans-unit>
        <trans-unit id="5c93a2b236252a89748bc06f469e33d5dc2f6a4b" translate="yes" xml:space="preserve">
          <source>ExUnit automatically creates a temporary directory for tests tagged with &lt;code&gt;:tmp_dir&lt;/code&gt; and puts the path to that directory into the test context. The directory is removed before being created to ensure we start with a blank slate.</source>
          <target state="translated">ExUnit crea autom&amp;aacute;ticamente un directorio temporal para las pruebas etiquetadas con &lt;code&gt;:tmp_dir&lt;/code&gt; y coloca la ruta a ese directorio en el contexto de la prueba. El directorio se elimina antes de crearse para asegurar que empecemos con una pizarra en blanco.</target>
        </trans-unit>
        <trans-unit id="b0bdc79e9fc2af1de5a45467b3f1630138afbfe1" translate="yes" xml:space="preserve">
          <source>ExUnit can optionally suppress printing of log messages that are generated during a test. Log messages generated while running a test are captured and only if the test fails are they printed to aid with debugging.</source>
          <target state="translated">ExUnit puede opcionalmente suprimir la impresión de los mensajes de registro que se generan durante una prueba.Los mensajes de registro generados durante la ejecución de una prueba son capturados y sólo si la prueba falla se imprimen para ayudar a la depuración.</target>
        </trans-unit>
        <trans-unit id="c48c9be568f6b4c0f2e197839d3d8f36c2515f00" translate="yes" xml:space="preserve">
          <source>ExUnit provides tags and filtering functionality that allow developers to select which tests to run. The most common functionality is to exclude some particular tests from running by default in your test helper file:</source>
          <target state="translated">ExUnit proporciona etiquetas y funcionalidad de filtrado que permiten a los desarrolladores seleccionar qué pruebas ejecutar.La funcionalidad más común es excluir algunas pruebas particulares de la ejecución por defecto en su archivo de ayuda de pruebas:</target>
        </trans-unit>
        <trans-unit id="745dfe2a60f037338c2fefadc9162188f364f731" translate="yes" xml:space="preserve">
          <source>ExUnit supports the following options:</source>
          <target state="translated">ExUnit admite las siguientes opciones:</target>
        </trans-unit>
        <trans-unit id="2a6345907bef5ae0698454dc9d06ee0ed677f2c2" translate="yes" xml:space="preserve">
          <source>ExUnit.AssertionError</source>
          <target state="translated">ExUnit.AssertionError</target>
        </trans-unit>
        <trans-unit id="7bca0a1e09b5a1e6a12113e9ce6109c131e65f8d" translate="yes" xml:space="preserve">
          <source>ExUnit.AssertionError &lt;small&gt;exception&lt;/small&gt;</source>
          <target state="translated">ExUnit.AssertionError &lt;small&gt;excepci&amp;oacute;n&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="f25c6298726d908d1e5e794bcc788478aa5fad10" translate="yes" xml:space="preserve">
          <source>ExUnit.Assertions</source>
          <target state="translated">ExUnit.Assertions</target>
        </trans-unit>
        <trans-unit id="57cef9f68db32989085431b21b29a52b82750643" translate="yes" xml:space="preserve">
          <source>ExUnit.Callbacks</source>
          <target state="translated">ExUnit.Callbacks</target>
        </trans-unit>
        <trans-unit id="b3d66fa6516f4ac426d6095179546b33f36c0614" translate="yes" xml:space="preserve">
          <source>ExUnit.CaptureIO</source>
          <target state="translated">ExUnit.CaptureIO</target>
        </trans-unit>
        <trans-unit id="2ad208584040b9fe065269a5120b26089443ba8f" translate="yes" xml:space="preserve">
          <source>ExUnit.CaptureLog</source>
          <target state="translated">ExUnit.CaptureLog</target>
        </trans-unit>
        <trans-unit id="b2783ae3bb7e24c853deac54a917d583149053c2" translate="yes" xml:space="preserve">
          <source>ExUnit.Case</source>
          <target state="translated">ExUnit.Case</target>
        </trans-unit>
        <trans-unit id="987b4f38599b32760dd676508e3a70f39b41abee" translate="yes" xml:space="preserve">
          <source>ExUnit.CaseTemplate</source>
          <target state="translated">ExUnit.CaseTemplate</target>
        </trans-unit>
        <trans-unit id="53d1f918a06cc534372a86260796a2d4c309360f" translate="yes" xml:space="preserve">
          <source>ExUnit.DocTest</source>
          <target state="translated">ExUnit.DocTest</target>
        </trans-unit>
        <trans-unit id="d9999b4f8af1e866e1f0ea61762d5c1cc8ad2341" translate="yes" xml:space="preserve">
          <source>ExUnit.DocTest.Error</source>
          <target state="translated">ExUnit.DocTest.Error</target>
        </trans-unit>
        <trans-unit id="67f2a3042727823ccf7dbd9817c09cbbb8efa9a4" translate="yes" xml:space="preserve">
          <source>ExUnit.DocTest.Error &lt;small&gt;exception&lt;/small&gt;</source>
          <target state="translated">ExUnit.DocTest.Error &lt;small&gt;excepci&amp;oacute;n&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="704ab5cbebf8d2029c97c7f45718c1bb4afd3696" translate="yes" xml:space="preserve">
          <source>ExUnit.DuplicateDescribeError</source>
          <target state="translated">ExUnit.DuplicateDescribeError</target>
        </trans-unit>
        <trans-unit id="aa1d2c3323c831aec609875e9f0efa265c871e03" translate="yes" xml:space="preserve">
          <source>ExUnit.DuplicateDescribeError &lt;small&gt;exception&lt;/small&gt;</source>
          <target state="translated">ExUnit.DuplicateDescribeError &lt;small&gt;excepci&amp;oacute;n&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="1405ead3862a5cfca420a49f538bc241594f997e" translate="yes" xml:space="preserve">
          <source>ExUnit.DuplicateTestError</source>
          <target state="translated">ExUnit.DuplicateTestError</target>
        </trans-unit>
        <trans-unit id="2a268d99fb56998619707be3b9214a541f86d7ab" translate="yes" xml:space="preserve">
          <source>ExUnit.DuplicateTestError &lt;small&gt;exception&lt;/small&gt;</source>
          <target state="translated">ExUnit.DuplicateTestError &lt;small&gt;excepci&amp;oacute;n&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="d7bd9d677f0a9c6dc45310d081af8fcc4ca6e2ec" translate="yes" xml:space="preserve">
          <source>ExUnit.Filters</source>
          <target state="translated">ExUnit.Filters</target>
        </trans-unit>
        <trans-unit id="f8206f0d81a07fa8af2ac0840c2bae2ed2f08165" translate="yes" xml:space="preserve">
          <source>ExUnit.Formatter</source>
          <target state="translated">ExUnit.Formatter</target>
        </trans-unit>
        <trans-unit id="229fc09a3b8e6efa5ac9d2ca8a11a9f502333ec1" translate="yes" xml:space="preserve">
          <source>ExUnit.MultiError</source>
          <target state="translated">ExUnit.MultiError</target>
        </trans-unit>
        <trans-unit id="735227bd3ecbb542e7953b335de901a172e5d02e" translate="yes" xml:space="preserve">
          <source>ExUnit.MultiError &lt;small&gt;exception&lt;/small&gt;</source>
          <target state="translated">ExUnit.MultiError &lt;small&gt;excepci&amp;oacute;n&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="c5c72bd93dc7e3f0a7d2fffbd54cf9bb0f675038" translate="yes" xml:space="preserve">
          <source>ExUnit.Test</source>
          <target state="translated">ExUnit.Test</target>
        </trans-unit>
        <trans-unit id="97bb13a74b9a963a04a1d616ace7b7ad0af2e626" translate="yes" xml:space="preserve">
          <source>ExUnit.TestModule</source>
          <target state="translated">ExUnit.TestModule</target>
        </trans-unit>
        <trans-unit id="f755d37b9e89df3ed4f26779dc2f46df095cbb0b" translate="yes" xml:space="preserve">
          <source>ExUnit.TimeoutError</source>
          <target state="translated">ExUnit.TimeoutError</target>
        </trans-unit>
        <trans-unit id="0eb19ea70731acc4546a8736af6c56cc94e70fc3" translate="yes" xml:space="preserve">
          <source>ExUnit.TimeoutError &lt;small&gt;exception&lt;/small&gt;</source>
          <target state="translated">ExUnit.TimeoutError &lt;small&gt;excepci&amp;oacute;n&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="0f01ed56a1e32a05e5ef96e4d779f34784af9a96" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Example</target>
        </trans-unit>
        <trans-unit id="2e4ccc244461fd2a12825ef96a60da2329e2ce3c" translate="yes" xml:space="preserve">
          <source>Example output:</source>
          <target state="translated">Ejemplo de salida:</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="d26b3d4470724ac05d7c9da540813fd9a38a03b8" translate="yes" xml:space="preserve">
          <source>Example: aggregating coverage reports from all umbrella children</source>
          <target state="translated">Ejemplo:agregando los informes de cobertura de todos los niños de la familia</target>
        </trans-unit>
        <trans-unit id="c74c91815529047b04fef7063d238333584897a5" translate="yes" xml:space="preserve">
          <source>Example: aggregating partitioned runs</source>
          <target state="translated">Ejemplo:agregación de ejecuciones divididas</target>
        </trans-unit>
        <trans-unit id="eb01bf04c9a0e8a71c45816513df424f1c7ffedb" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">Examples</target>
        </trans-unit>
        <trans-unit id="25122b962e79de0ee8a27ce3b5647bd4c01ca409" translate="yes" xml:space="preserve">
          <source>Examples (in ISO)</source>
          <target state="translated">Ejemplos (en ISO)</target>
        </trans-unit>
        <trans-unit id="0d3f1fb4ead37a9ebada8ba4792a85c60fc239e8" translate="yes" xml:space="preserve">
          <source>Examples: &lt;a href=&quot;https://hexdocs.pm/elixir/Integer.html#is_even/1&quot;&gt;&lt;code&gt;Integer.is_even/1&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#is_list/1&quot;&gt;&lt;code&gt;Kernel.is_list/1&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">Ejemplos: &lt;a href=&quot;https://hexdocs.pm/elixir/Integer.html#is_even/1&quot;&gt; &lt;code&gt;Integer.is_even/1&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#is_list/1&quot;&gt; &lt;code&gt;Kernel.is_list/1&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="36164a25cdcc73cd1cf8d728f5b2f50878a4ec40" translate="yes" xml:space="preserve">
          <source>Examples: &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#length/1&quot;&gt;&lt;code&gt;Kernel.length/1&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://hexdocs.pm/elixir/String.html#length/1&quot;&gt;&lt;code&gt;String.length/1&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">Ejemplos: &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#length/1&quot;&gt; &lt;code&gt;Kernel.length/1&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;https://hexdocs.pm/elixir/String.html#length/1&quot;&gt; &lt;code&gt;String.length/1&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8c5fda773f78bb26a8e1303d5c85d69d871488af" translate="yes" xml:space="preserve">
          <source>Examples: &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#map_size/1&quot;&gt;&lt;code&gt;Kernel.map_size/1&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#tuple_size/1&quot;&gt;&lt;code&gt;Kernel.tuple_size/1&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">Ejemplos: &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#map_size/1&quot;&gt; &lt;code&gt;Kernel.map_size/1&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#tuple_size/1&quot;&gt; &lt;code&gt;Kernel.tuple_size/1&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ad9928fd1db4bd5dbdaaf41bf03f0e344ec8d2e7" translate="yes" xml:space="preserve">
          <source>Examples: &lt;a href=&quot;https://hexdocs.pm/elixir/Keyword.html#keyword?/1&quot;&gt;&lt;code&gt;Keyword.keyword?/1&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://hexdocs.pm/mix/Mix.html#debug?/0&quot;&gt;&lt;code&gt;Mix.debug?/0&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://hexdocs.pm/elixir/String.html#contains?/2&quot;&gt;&lt;code&gt;String.contains?/2&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">Ejemplos: &lt;a href=&quot;https://hexdocs.pm/elixir/Keyword.html#keyword?/1&quot;&gt; &lt;code&gt;Keyword.keyword?/1&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;https://hexdocs.pm/mix/Mix.html#debug?/0&quot;&gt; &lt;code&gt;Mix.debug?/0&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;https://hexdocs.pm/elixir/String.html#contains?/2&quot;&gt; &lt;code&gt;String.contains?/2&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b67cde3e2893f45e1d2342cc89a6c494050168c1" translate="yes" xml:space="preserve">
          <source>Examples: &lt;a href=&quot;integer#is_even/1&quot;&gt;&lt;code&gt;Integer.is_even/1&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;kernel#is_list/1&quot;&gt;&lt;code&gt;Kernel.is_list/1&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">Ejemplos: &lt;a href=&quot;integer#is_even/1&quot;&gt; &lt;code&gt;Integer.is_even/1&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;kernel#is_list/1&quot;&gt; &lt;code&gt;Kernel.is_list/1&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fba0066e54914f2c201f52bafe91a91ee882db71" translate="yes" xml:space="preserve">
          <source>Examples: &lt;a href=&quot;kernel#length/1&quot;&gt;&lt;code&gt;Kernel.length/1&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;string#length/1&quot;&gt;&lt;code&gt;String.length/1&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">Ejemplos: &lt;a href=&quot;kernel#length/1&quot;&gt; &lt;code&gt;Kernel.length/1&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;string#length/1&quot;&gt; &lt;code&gt;String.length/1&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="59e48be0f15bfe533102ec4eff7ccf70153ea050" translate="yes" xml:space="preserve">
          <source>Examples: &lt;a href=&quot;kernel#map_size/1&quot;&gt;&lt;code&gt;Kernel.map_size/1&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;kernel#tuple_size/1&quot;&gt;&lt;code&gt;Kernel.tuple_size/1&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">Ejemplos: &lt;a href=&quot;kernel#map_size/1&quot;&gt; &lt;code&gt;Kernel.map_size/1&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;kernel#tuple_size/1&quot;&gt; &lt;code&gt;Kernel.tuple_size/1&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8894d30453776d313609dc175c436a396fe228a1" translate="yes" xml:space="preserve">
          <source>Examples: &lt;a href=&quot;keyword#keyword?/1&quot;&gt;&lt;code&gt;Keyword.keyword?/1&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://hexdocs.pm/mix/Mix.html#debug?/0&quot;&gt;&lt;code&gt;Mix.debug?/0&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;string#contains?/2&quot;&gt;&lt;code&gt;String.contains?/2&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">Ejemplos: &lt;a href=&quot;keyword#keyword?/1&quot;&gt; &lt;code&gt;Keyword.keyword?/1&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;https://hexdocs.pm/mix/Mix.html#debug?/0&quot;&gt; &lt;code&gt;Mix.debug?/0&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;string#contains?/2&quot;&gt; &lt;code&gt;String.contains?/2&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="80519cae3a2fe4f658e3d881595a3f1c8312fcf3" translate="yes" xml:space="preserve">
          <source>Excellent!</source>
          <target state="translated">Excellent!</target>
        </trans-unit>
        <trans-unit id="60ec7b5f4ed1c9f91fe92c8f85e12cb5b5d0e653" translate="yes" xml:space="preserve">
          <source>Excellent! A release was assembled in &lt;code&gt;_build/prod/rel/foo&lt;/code&gt;. Inside the release, there will be a &lt;code&gt;bin/foo&lt;/code&gt; file which is the entry point to your system. It supports multiple commands, such as:</source>
          <target state="translated">&amp;iexcl;Excelente! Se ensambl&amp;oacute; una versi&amp;oacute;n en &lt;code&gt;_build/prod/rel/foo&lt;/code&gt; . Dentro de la versi&amp;oacute;n, habr&amp;aacute; un archivo &lt;code&gt;bin/foo&lt;/code&gt; que es el punto de entrada a su sistema. Admite m&amp;uacute;ltiples comandos, como:</target>
        </trans-unit>
        <trans-unit id="20049bc069b0a04404c23d571b5e0b56f0660c02" translate="yes" xml:space="preserve">
          <source>Exception</source>
          <target state="translated">Exception</target>
        </trans-unit>
        <trans-unit id="44e97cbdae038c2c5424f2954134819fe68f1b89" translate="yes" xml:space="preserve">
          <source>Exception &lt;small&gt;behaviour&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;Comportamiento de&lt;/small&gt; excepci&amp;oacute;n&lt;small&gt;&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="cd3dfbe79fda3a9d92de67b1bd4f1dc9f60ab723" translate="yes" xml:space="preserve">
          <source>Exceptions</source>
          <target state="translated">Exceptions</target>
        </trans-unit>
        <trans-unit id="3d517d7c8883cc469bb6f0690fb53e26f6870d0a" translate="yes" xml:space="preserve">
          <source>Exceptions are structs backed by a module that implements the &lt;a href=&quot;exception&quot;&gt;&lt;code&gt;Exception&lt;/code&gt;&lt;/a&gt; behaviour. The &lt;a href=&quot;exception&quot;&gt;&lt;code&gt;Exception&lt;/code&gt;&lt;/a&gt; behaviour requires two functions to be implemented:</source>
          <target state="translated">Las excepciones son estructuras respaldadas por un m&amp;oacute;dulo que implementa el comportamiento de &lt;a href=&quot;exception&quot;&gt; &lt;code&gt;Exception&lt;/code&gt; &lt;/a&gt; . El comportamiento de &lt;a href=&quot;exception&quot;&gt; &lt;code&gt;Exception&lt;/code&gt; &lt;/a&gt; requiere la implementaci&amp;oacute;n de dos funciones:</target>
        </trans-unit>
        <trans-unit id="8e51b2994e896de8ce300f36d4a22aa73a3be30a" translate="yes" xml:space="preserve">
          <source>Exceptions are structs backed by a module that implements the &lt;a href=&quot;https://hexdocs.pm/elixir/Exception.html&quot;&gt;&lt;code&gt;Exception&lt;/code&gt;&lt;/a&gt; behaviour. The &lt;a href=&quot;https://hexdocs.pm/elixir/Exception.html&quot;&gt;&lt;code&gt;Exception&lt;/code&gt;&lt;/a&gt; behaviour requires two functions to be implemented:</source>
          <target state="translated">Las excepciones son estructuras respaldadas por un m&amp;oacute;dulo que implementa el comportamiento de &lt;a href=&quot;https://hexdocs.pm/elixir/Exception.html&quot;&gt; &lt;code&gt;Exception&lt;/code&gt; &lt;/a&gt; . El comportamiento de &lt;a href=&quot;https://hexdocs.pm/elixir/Exception.html&quot;&gt; &lt;code&gt;Exception&lt;/code&gt; &lt;/a&gt; requiere la implementaci&amp;oacute;n de dos funciones:</target>
        </trans-unit>
        <trans-unit id="f5f7c811b0be5635dd0fe494c23bb6038a54a491" translate="yes" xml:space="preserve">
          <source>Exceptions in the &lt;code&gt;else&lt;/code&gt; block are not caught. If no pattern inside the &lt;code&gt;else&lt;/code&gt; block matches, an exception will be raised; this exception is not caught by the current &lt;code&gt;try/catch/rescue/after&lt;/code&gt; block.</source>
          <target state="translated">Las excepciones en el bloque &lt;code&gt;else&lt;/code&gt; no se detectan. Si ning&amp;uacute;n patr&amp;oacute;n dentro del bloque &lt;code&gt;else&lt;/code&gt; coincide, se generar&amp;aacute; una excepci&amp;oacute;n; esta excepci&amp;oacute;n no es detectada por el bloque &lt;code&gt;try/catch/rescue/after&lt;/code&gt; actual .</target>
        </trans-unit>
        <trans-unit id="ea74b62ed292a57db053839d4dd2cfb1e0f29152" translate="yes" xml:space="preserve">
          <source>Excluded (via :exclude filters)</source>
          <target state="translated">Excluido (mediante :filtros de exclusión)</target>
        </trans-unit>
        <trans-unit id="3341b34959d98dd397fee5b24380ce422a7f718a" translate="yes" xml:space="preserve">
          <source>Executes the given &lt;code&gt;command&lt;/code&gt; as a shell command and invokes the &lt;code&gt;callback&lt;/code&gt; for the streamed response.</source>
          <target state="translated">Ejecuta el &lt;code&gt;command&lt;/code&gt; dado como un comando de shell e invoca la &lt;code&gt;callback&lt;/code&gt; de llamada para la respuesta transmitida.</target>
        </trans-unit>
        <trans-unit id="70a317365d7713ea507b0cb5d939c290a69f7da8" translate="yes" xml:space="preserve">
          <source>Executes the given &lt;code&gt;command&lt;/code&gt; with &lt;code&gt;args&lt;/code&gt;.</source>
          <target state="translated">Ejecuta el &lt;code&gt;command&lt;/code&gt; dado con &lt;code&gt;args&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8de8bb94364b91423f5a970361d0ca351b0ec3d4" translate="yes" xml:space="preserve">
          <source>Executes the given command and forwards its messages to the current process.</source>
          <target state="translated">Ejecuta la orden dada y envía sus mensajes al proceso actual.</target>
        </trans-unit>
        <trans-unit id="c1372af04a9efd8163a10572859082b925f8dafa" translate="yes" xml:space="preserve">
          <source>Executes the given command and prints its output to stdout as it comes.</source>
          <target state="translated">Ejecuta el comando dado e imprime su salida a stdout tal como viene.</target>
        </trans-unit>
        <trans-unit id="a75d5012d51d09974229d69b19fd7d7622bdc109" translate="yes" xml:space="preserve">
          <source>Executes the given command and returns its exit status.</source>
          <target state="translated">Ejecuta la orden dada y devuelve su estado de salida.</target>
        </trans-unit>
        <trans-unit id="7c07c6d426de3d265c77a3c160b7a3bafe862b2c" translate="yes" xml:space="preserve">
          <source>Executes the given command quietly without outputting anything.</source>
          <target state="translated">Ejecuta la orden dada en silencio sin emitir nada.</target>
        </trans-unit>
        <trans-unit id="4004d7a200a9edc8cf038043abae23d5809c733f" translate="yes" xml:space="preserve">
          <source>Executes the given command.</source>
          <target state="translated">Ejecuta la orden dada.</target>
        </trans-unit>
        <trans-unit id="55f164b4c64455051e302faf23d4842520137933" translate="yes" xml:space="preserve">
          <source>Executes the given function for each element.</source>
          <target state="translated">Ejecuta la función dada para cada elemento.</target>
        </trans-unit>
        <trans-unit id="b5ce416e76da997843fde479e97ac42967b3d692" translate="yes" xml:space="preserve">
          <source>Executes the tasks separated by comma.</source>
          <target state="translated">Ejecuta las tareas separadas por una coma.</target>
        </trans-unit>
        <trans-unit id="7ac90140fbd596d3f7878d936c650ac9466a6ee5" translate="yes" xml:space="preserve">
          <source>Exit reasons and restarts</source>
          <target state="translated">Razones de salida y reinicio</target>
        </trans-unit>
        <trans-unit id="53b33039635fa494645e1b43b50ac67531129d6a" translate="yes" xml:space="preserve">
          <source>Exiting the shell</source>
          <target state="translated">Salir del cascarón</target>
        </trans-unit>
        <trans-unit id="f45e71feb97fe698bfbbe5199dddf26ea61ae573" translate="yes" xml:space="preserve">
          <source>Exiting with any other reason is considered abnormal and treated as a crash. This means the default supervisor behaviour kicks in, error reports are emitted, and so forth.</source>
          <target state="translated">Salir con cualquier otra razón se considera anormal y se trata como un choque.Esto significa que el comportamiento del supervisor por defecto se activa,se emiten informes de error,y así sucesivamente.</target>
        </trans-unit>
        <trans-unit id="31a12820b55617ff15b68585a3da10bfbeb53dca" translate="yes" xml:space="preserve">
          <source>Exiting with any other reason is considered abnormal and treated as a crash. This means the default supervisor behaviour kicks in, error reports are emitted, etc.</source>
          <target state="translated">Salir con cualquier otra razón se considera anormal y se trata como un choque.Esto significa que el comportamiento del supervisor por defecto se activa,se emiten informes de error,etc.</target>
        </trans-unit>
        <trans-unit id="d71626cd31b069ac3980d7ed6a6abb80f71225a3" translate="yes" xml:space="preserve">
          <source>Exits</source>
          <target state="translated">Exits</target>
        </trans-unit>
        <trans-unit id="7977d0a8642620960ce842afec7459a90da93ce6" translate="yes" xml:space="preserve">
          <source>Exits are used by the OTP to determine if a process exited abnormally or not. The following exits are considered &quot;normal&quot;:</source>
          <target state="translated">Las salidas son utilizadas por la OTP para determinar si un proceso ha salido anormalmente o no.Las siguientes salidas se consideran &quot;normales&quot;:</target>
        </trans-unit>
        <trans-unit id="d2a34bd07d0e86299a6bc287e4921ca1aef50681" translate="yes" xml:space="preserve">
          <source>Expands the path relative to the path given as the second argument expanding any &lt;code&gt;.&lt;/code&gt; and &lt;code&gt;..&lt;/code&gt; characters.</source>
          <target state="translated">Expande la ruta relativa a la ruta dada como segundo argumento expandiendo cualquiera &lt;code&gt;.&lt;/code&gt; y &lt;code&gt;..&lt;/code&gt; personajes.</target>
        </trans-unit>
        <trans-unit id="56faca74d01072fe618cfc8860e3704b0f548536" translate="yes" xml:space="preserve">
          <source>Expands the struct given by &lt;code&gt;module&lt;/code&gt; in the given &lt;code&gt;env&lt;/code&gt;.</source>
          <target state="translated">Expande la estructura dada por el &lt;code&gt;module&lt;/code&gt; en el &lt;code&gt;env&lt;/code&gt; dado .</target>
        </trans-unit>
        <trans-unit id="a58d845ac21beded647c9679bfd179b6ae8af84c" translate="yes" xml:space="preserve">
          <source>Expands to something akin to:</source>
          <target state="translated">Se expande a algo parecido:</target>
        </trans-unit>
        <trans-unit id="4ae47f3ad3318c24412abe41c786c7c08970f0f5" translate="yes" xml:space="preserve">
          <source>Expects all values to be integers. Returns &lt;code&gt;date&lt;/code&gt; if each entry fits its appropriate range, raises if the date is invalid.</source>
          <target state="translated">Espera que todos los valores sean n&amp;uacute;meros enteros. Devuelve la &lt;code&gt;date&lt;/code&gt; si cada entrada se ajusta a su rango apropiado, aumenta si la fecha no es v&amp;aacute;lida.</target>
        </trans-unit>
        <trans-unit id="13b37db6b572edb898a47a3bd0fb0e8a7a11988b" translate="yes" xml:space="preserve">
          <source>Expects all values to be integers. Returns &lt;code&gt;naive_datetime&lt;/code&gt; if each entry fits its appropriate range, raises if time or date is invalid.</source>
          <target state="translated">Espera que todos los valores sean n&amp;uacute;meros enteros. Devuelve &lt;code&gt;naive_datetime&lt;/code&gt; si cada entrada se ajusta a su rango apropiado, aumenta si la hora o la fecha no son v&amp;aacute;lidas.</target>
        </trans-unit>
        <trans-unit id="bcd459526f4b99811c8fbb63304ea87ace873e34" translate="yes" xml:space="preserve">
          <source>Expects all values to be integers. Returns &lt;code&gt;time&lt;/code&gt; if each entry fits its appropriate range, raises if the time is invalid.</source>
          <target state="translated">Espera que todos los valores sean n&amp;uacute;meros enteros. Devuelve el &lt;code&gt;time&lt;/code&gt; si cada entrada se ajusta a su rango apropiado, aumenta si el tiempo no es v&amp;aacute;lido.</target>
        </trans-unit>
        <trans-unit id="91a8dae3c7e0a7461d109ccac314fd3b05583329" translate="yes" xml:space="preserve">
          <source>Expects all values to be integers. Returns &lt;code&gt;{:ok, date}&lt;/code&gt; if each entry fits its appropriate range, returns &lt;code&gt;{:error, reason}&lt;/code&gt; otherwise.</source>
          <target state="translated">Espera que todos los valores sean n&amp;uacute;meros enteros. Devuelve &lt;code&gt;{:ok, date}&lt;/code&gt; si cada entrada se ajusta a su rango apropiado, devuelve &lt;code&gt;{:error, reason}&lt;/code&gt; caso contrario.</target>
        </trans-unit>
        <trans-unit id="36147c4004a324e8f3e4b2ea0f84715a379f133f" translate="yes" xml:space="preserve">
          <source>Expects all values to be integers. Returns &lt;code&gt;{:ok, naive_datetime}&lt;/code&gt; if each entry fits its appropriate range, returns &lt;code&gt;{:error, reason}&lt;/code&gt; otherwise.</source>
          <target state="translated">Espera que todos los valores sean n&amp;uacute;meros enteros. Devuelve &lt;code&gt;{:ok, naive_datetime}&lt;/code&gt; si cada entrada se ajusta a su rango apropiado, devuelve &lt;code&gt;{:error, reason}&lt;/code&gt; contrario.</target>
        </trans-unit>
        <trans-unit id="b1f148de03b18e5985298d31921d5f1111620987" translate="yes" xml:space="preserve">
          <source>Expects all values to be integers. Returns &lt;code&gt;{:ok, time}&lt;/code&gt; if each entry fits its appropriate range, returns &lt;code&gt;{:error, reason}&lt;/code&gt; otherwise.</source>
          <target state="translated">Espera que todos los valores sean n&amp;uacute;meros enteros. Devuelve &lt;code&gt;{:ok, time}&lt;/code&gt; si cada entrada se ajusta a su rango apropiado, devuelve &lt;code&gt;{:error, reason}&lt;/code&gt; contrario.</target>
        </trans-unit>
        <trans-unit id="1387b27163a391ef8f7a170807b6e12dfd7c742a" translate="yes" xml:space="preserve">
          <source>Expects the same command line options as &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Compile.html&quot;&gt;&lt;code&gt;mix compile&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Espera las mismas opciones de l&amp;iacute;nea de comando que la &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Compile.html&quot;&gt; &lt;code&gt;mix compile&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6d58782f27892aec9906a2b37b517051b421e83e" translate="yes" xml:space="preserve">
          <source>Expects the same command line options as &lt;a href=&quot;mix.tasks.compile&quot;&gt;&lt;code&gt;mix compile&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Espera las mismas opciones de l&amp;iacute;nea de comandos que la &lt;a href=&quot;mix.tasks.compile&quot;&gt; &lt;code&gt;mix compile&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8185e179a98e4c14d7d2dc6601e54859946ed332" translate="yes" xml:space="preserve">
          <source>Explicit derivations can now be called via &lt;code&gt;__deriving__&lt;/code&gt;:</source>
          <target state="translated">Las derivaciones expl&amp;iacute;citas ahora se pueden llamar a trav&amp;eacute;s de &lt;code&gt;__deriving__&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="1af430d5daa7566a82be8754e90eab91a53418f6" translate="yes" xml:space="preserve">
          <source>Explicitly convert to string with &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#to_string/1&quot;&gt;&lt;code&gt;to_string/1&lt;/code&gt;&lt;/a&gt; (v1.0)</source>
          <target state="translated">Convertir expl&amp;iacute;citamente a una cadena con &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#to_string/1&quot;&gt; &lt;code&gt;to_string/1&lt;/code&gt; &lt;/a&gt; (v1.0)</target>
        </trans-unit>
        <trans-unit id="a311e0f546569e17c6cb9a033783cc3c973c3f50" translate="yes" xml:space="preserve">
          <source>Exploring</source>
          <target state="translated">Exploring</target>
        </trans-unit>
        <trans-unit id="17144cbaf80b5556f57bcc08120468f882fb7da0" translate="yes" xml:space="preserve">
          <source>Exports dependencies are compile time dependencies on the module API, namely structs and its public definitions. For example, if you import a module but only use its functions, it is an export dependency. If you use a struct, it is an export dependency too. Export dependencies are only recompiled if the module API changes. Note, however, that compile time dependencies have higher precedence than exports. Therefore if you import a module and use its macros, it is a compile time dependency.</source>
          <target state="translated">Las dependencias de exportación son dependencias temporales compiladas en el módulo API,a saber,las estructuras y sus definiciones públicas.Por ejemplo,si se importa un módulo pero sólo se utilizan sus funciones,se trata de una dependencia de exportación.Si utiliza una estructura,también es una dependencia de exportación.Las dependencias de exportación sólo se recompilan si la API del módulo cambia.Tenga en cuenta,sin embargo,que las dependencias de tiempo de compilación tienen mayor prioridad que las exportaciones.Por lo tanto,si importa un módulo y utiliza sus macros,es una dependencia de tiempo de compilación.</target>
        </trans-unit>
        <trans-unit id="ae5fccd8dcd8fc317f8edfc8259af86cd2967a29" translate="yes" xml:space="preserve">
          <source>Expressions</source>
          <target state="translated">Expressions</target>
        </trans-unit>
        <trans-unit id="bd636ca0127e991954457d5520bc826a5790bde1" translate="yes" xml:space="preserve">
          <source>Expressions in IEx</source>
          <target state="translated">Expresiones en IEx</target>
        </trans-unit>
        <trans-unit id="ee1891c8d113531de2d0f468e0034dd1a97f49a7" translate="yes" xml:space="preserve">
          <source>Expressions on multiple lines are also supported:</source>
          <target state="translated">También se admiten expresiones en múltiples líneas:</target>
        </trans-unit>
        <trans-unit id="96e930ee8659a5428bf86a0d55155d9541ab8120" translate="yes" xml:space="preserve">
          <source>Extension point for precompiling dependencies.</source>
          <target state="translated">Punto de extensión para precompilar las dependencias.</target>
        </trans-unit>
        <trans-unit id="8fdb5d77c0ea69e962db331c0331d4ccd1f6e481" translate="yes" xml:space="preserve">
          <source>External dependencies</source>
          <target state="translated">External dependencies</target>
        </trans-unit>
        <trans-unit id="ecfbef1298f91628d1f080163cdf6946c9def817" translate="yes" xml:space="preserve">
          <source>External dependencies are the ones not tied to your business domain. For example, if you need an HTTP API for your distributed KV application, you can use the &lt;a href=&quot;https://github.com/elixir-lang/plug&quot;&gt;Plug&lt;/a&gt; project as an external dependency.</source>
          <target state="translated">Las dependencias externas son las que no est&amp;aacute;n vinculadas a su dominio empresarial. Por ejemplo, si necesita una API HTTP para su aplicaci&amp;oacute;n KV distribuida, puede usar el proyecto &lt;a href=&quot;https://github.com/elixir-lang/plug&quot;&gt;Plug&lt;/a&gt; como una dependencia externa.</target>
        </trans-unit>
        <trans-unit id="c150e0ee17017b4793bcf0b0cc69d4046c404195" translate="yes" xml:space="preserve">
          <source>Extract test cases from the documentation.</source>
          <target state="translated">Extraiga los casos de prueba de la documentación.</target>
        </trans-unit>
        <trans-unit id="95e8ae6e88b22e27a03f7d64d058e8d835494561" translate="yes" xml:space="preserve">
          <source>Extracts all protocols from the given paths.</source>
          <target state="translated">Extrae todos los protocolos de los caminos dados.</target>
        </trans-unit>
        <trans-unit id="6672f515f4795b7a00946cd73a72fe3b0d731698" translate="yes" xml:space="preserve">
          <source>Extracts all records information from an Erlang file.</source>
          <target state="translated">Extrae toda la información de los registros de un archivo Erlang.</target>
        </trans-unit>
        <trans-unit id="0aa4ae6318b818f36730be7bf017b931ef4ea73b" translate="yes" xml:space="preserve">
          <source>Extracts all types implemented for the given protocol from the given paths.</source>
          <target state="translated">Extrae de los caminos dados todos los tipos implementados para el protocolo dado.</target>
        </trans-unit>
        <trans-unit id="fe0c75ba33dd78a4066417d5f149fc1b26fb8202" translate="yes" xml:space="preserve">
          <source>Extracts record information from an Erlang file.</source>
          <target state="translated">Extrae la información del registro de un archivo Erlang.</target>
        </trans-unit>
        <trans-unit id="574d59827e0eb28bc33410c7d28d8d1801cae6ee" translate="yes" xml:space="preserve">
          <source>Extracts the part of the binary starting at &lt;code&gt;start&lt;/code&gt; with length &lt;code&gt;length&lt;/code&gt;. Binaries are zero-indexed.</source>
          <target state="translated">Extrae la parte del binario que comienza en el &lt;code&gt;start&lt;/code&gt; con la longitud de la &lt;code&gt;length&lt;/code&gt; . Los binarios est&amp;aacute;n indexados a cero.</target>
        </trans-unit>
        <trans-unit id="e69f20e9f683920d3fb4329abd951e878b1f9372" translate="yes" xml:space="preserve">
          <source>F</source>
          <target state="translated">F</target>
        </trans-unit>
        <trans-unit id="09fef5d8d9a3c86b2523fef60d512606e7fe0003" translate="yes" xml:space="preserve">
          <source>Failed</source>
          <target state="translated">Failed</target>
        </trans-unit>
        <trans-unit id="96fff357d65451f89027b22467cd65b418ae720a" translate="yes" xml:space="preserve">
          <source>Failing guards</source>
          <target state="translated">Los guardias que fallan</target>
        </trans-unit>
        <trans-unit id="1652d7e1326512444d5398f784563f91db27adf9" translate="yes" xml:space="preserve">
          <source>Failing to specify the size for the non-last causes compilation to fail:</source>
          <target state="translated">Si no se especifica el tamaño del no-último,la compilación falla:</target>
        </trans-unit>
        <trans-unit id="a8f785f9330c1e75e28a2a7140d3aec99d182b95" translate="yes" xml:space="preserve">
          <source>Fails with &lt;a href=&quot;argumenterror&quot;&gt;&lt;code&gt;ArgumentError&lt;/code&gt;&lt;/a&gt; if the name is not registered to any PID or port.</source>
          <target state="translated">Falla con &lt;a href=&quot;argumenterror&quot;&gt; &lt;code&gt;ArgumentError&lt;/code&gt; &lt;/a&gt; si el nombre no est&amp;aacute; registrado en ning&amp;uacute;n PID o puerto.</target>
        </trans-unit>
        <trans-unit id="0ccdf9c4d16331f9f9a7885177207e85c8dc38a3" translate="yes" xml:space="preserve">
          <source>Fails with &lt;a href=&quot;https://hexdocs.pm/elixir/ArgumentError.html&quot;&gt;&lt;code&gt;ArgumentError&lt;/code&gt;&lt;/a&gt; if the name is not registered to any PID or port.</source>
          <target state="translated">Falla con &lt;a href=&quot;https://hexdocs.pm/elixir/ArgumentError.html&quot;&gt; &lt;code&gt;ArgumentError&lt;/code&gt; &lt;/a&gt; si el nombre no est&amp;aacute; registrado en ning&amp;uacute;n PID o puerto.</target>
        </trans-unit>
        <trans-unit id="a6d0b09e283994372eb19fd9e9acdd66b7d8a5ff" translate="yes" xml:space="preserve">
          <source>Fails with a message.</source>
          <target state="translated">Falla con un mensaje.</target>
        </trans-unit>
        <trans-unit id="d98c0b711b96d90c648aa1ba79214b16cf3c847f" translate="yes" xml:space="preserve">
          <source>Faint (decreased intensity). Not widely supported.</source>
          <target state="translated">Desmayarse (disminución de la intensidad).No se apoya ampliamente.</target>
        </trans-unit>
        <trans-unit id="80eafe8c844b802892eae9dec9a932d3aae704a2" translate="yes" xml:space="preserve">
          <source>Fallback to &lt;code&gt;Any&lt;/code&gt;</source>
          <target state="translated">Volver a &lt;code&gt;Any&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e83224357f427a57043b90f12511c5e7c2761fe6" translate="yes" xml:space="preserve">
          <source>Falsy values (of which there are exactly two):</source>
          <target state="translated">Valores falsos (de los cuales hay exactamente dos):</target>
        </trans-unit>
        <trans-unit id="84961cf65129825950c4fb505dbebfa0af3c33d5" translate="yes" xml:space="preserve">
          <source>Feel free to go ahead and do the changes above and write some unit tests. The idea is that your tests will start an instance of the &lt;code&gt;KV.Registry&lt;/code&gt; and pass it as an argument to &lt;code&gt;run/2&lt;/code&gt; instead of relying on the global &lt;code&gt;KV.Registry&lt;/code&gt;. This has the advantage of keeping our tests asynchronous as there is no shared state.</source>
          <target state="translated">Si&amp;eacute;ntase libre de seguir adelante y hacer los cambios anteriores y escribir algunas pruebas unitarias. La idea es que sus pruebas inicien una instancia del &lt;code&gt;KV.Registry&lt;/code&gt; y la pasen como argumento para &lt;code&gt;run/2&lt;/code&gt; lugar de depender del &lt;code&gt;KV.Registry&lt;/code&gt; global . Esto tiene la ventaja de mantener nuestras pruebas asincr&amp;oacute;nicas ya que no hay un estado compartido.</target>
        </trans-unit>
        <trans-unit id="4e9eab4f18f16e5a9faaa07931254d91146148ac" translate="yes" xml:space="preserve">
          <source>Fetches a copy of &lt;code&gt;rebar&lt;/code&gt; or &lt;code&gt;rebar3&lt;/code&gt; from the given path or URL.</source>
          <target state="translated">Obtiene una copia de &lt;code&gt;rebar&lt;/code&gt; o &lt;code&gt;rebar3&lt;/code&gt; de la ruta o URL dada.</target>
        </trans-unit>
        <trans-unit id="6ce2d20bef71f0063b999c8745340e3f56b5a4aa" translate="yes" xml:space="preserve">
          <source>Fetches the test supervisor for the current test.</source>
          <target state="translated">Busca al supervisor de pruebas para la prueba actual.</target>
        </trans-unit>
        <trans-unit id="c0e97bf839fe5fe85207b4a9d492c885c7fec652" translate="yes" xml:space="preserve">
          <source>Fetches the value for a specific &lt;code&gt;key&lt;/code&gt; and returns it in a tuple.</source>
          <target state="translated">Obtiene el valor de una &lt;code&gt;key&lt;/code&gt; espec&amp;iacute;fica y lo devuelve en una tupla.</target>
        </trans-unit>
        <trans-unit id="e51d5ee9800fb6a00e8f93feaec0009d2b77b447" translate="yes" xml:space="preserve">
          <source>Fetches the value for a specific &lt;code&gt;key&lt;/code&gt; in the given &lt;code&gt;map&lt;/code&gt;, erroring out if &lt;code&gt;map&lt;/code&gt; doesn't contain &lt;code&gt;key&lt;/code&gt;.</source>
          <target state="translated">Obtiene el valor de una &lt;code&gt;key&lt;/code&gt; espec&amp;iacute;fica en el &lt;code&gt;map&lt;/code&gt; a dado , y muestra un error si el &lt;code&gt;map&lt;/code&gt; a no contiene la &lt;code&gt;key&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a43e0afb7d744e48d3c341e4b08f1f780c55b575" translate="yes" xml:space="preserve">
          <source>Fetches the value for a specific &lt;code&gt;key&lt;/code&gt; in the given &lt;code&gt;map&lt;/code&gt;.</source>
          <target state="translated">Obtiene el valor de una &lt;code&gt;key&lt;/code&gt; espec&amp;iacute;fica en el &lt;code&gt;map&lt;/code&gt; a dado .</target>
        </trans-unit>
        <trans-unit id="e32be0757ce9c975d2425bacc76ae29c90d94cf3" translate="yes" xml:space="preserve">
          <source>Fetches the value for specific &lt;code&gt;key&lt;/code&gt;.</source>
          <target state="translated">Obtiene el valor de una &lt;code&gt;key&lt;/code&gt; espec&amp;iacute;fica .</target>
        </trans-unit>
        <trans-unit id="f5f8f513b41db299570bc23df8a5cd56d7a7348b" translate="yes" xml:space="preserve">
          <source>Fetches the value for the given key in a container (a map, keyword list, or struct that implements the &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Access&lt;/code&gt;&lt;/a&gt; behaviour).</source>
          <target state="translated">Obtiene el valor de la clave dada en un contenedor (un mapa, lista de palabras clave o estructura que implementa el comportamiento de &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;Access&lt;/code&gt; &lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="2c3cafa4db3f3e1e51b3dff4303502dbe42b7a89" translate="yes" xml:space="preserve">
          <source>File</source>
          <target state="translated">File</target>
        </trans-unit>
        <trans-unit id="31798ce3f2f936a238f0a2c5ab7cdb503c7ea839" translate="yes" xml:space="preserve">
          <source>File permissions are specified by adding together the following octal modes:</source>
          <target state="translated">Los permisos de archivo se especifican sumando los siguientes modos octales:</target>
        </trans-unit>
        <trans-unit id="e9762f0351951cf7ed47c0893d9de2c36796a05d" translate="yes" xml:space="preserve">
          <source>File.CopyError</source>
          <target state="translated">File.CopyError</target>
        </trans-unit>
        <trans-unit id="7b57f930765dd268a9cde88eaefc8e395b0beb29" translate="yes" xml:space="preserve">
          <source>File.CopyError &lt;small&gt;exception&lt;/small&gt;</source>
          <target state="translated">File.CopyError &lt;small&gt;excepci&amp;oacute;n&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="27e1fc83e1258e80dfd4127d0a4ce93324162992" translate="yes" xml:space="preserve">
          <source>File.Error</source>
          <target state="translated">File.Error</target>
        </trans-unit>
        <trans-unit id="8354290eb6b6ea2cbcbaa3bd4c48c21f5649591a" translate="yes" xml:space="preserve">
          <source>File.Error &lt;small&gt;exception&lt;/small&gt;</source>
          <target state="translated">File.Error &lt;small&gt;excepci&amp;oacute;n&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="5561cc6859be7830bb0219495771f2109757df2e" translate="yes" xml:space="preserve">
          <source>File.LinkError</source>
          <target state="translated">File.LinkError</target>
        </trans-unit>
        <trans-unit id="ff963e9e333fceee8593af446c12736218860d8a" translate="yes" xml:space="preserve">
          <source>File.LinkError &lt;small&gt;exception&lt;/small&gt;</source>
          <target state="translated">File.LinkError &lt;small&gt;excepci&amp;oacute;n&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="34595af71c483f8de72a2abf0c30fcef3475a04a" translate="yes" xml:space="preserve">
          <source>File.RenameError</source>
          <target state="translated">File.RenameError</target>
        </trans-unit>
        <trans-unit id="918afebd70d1938336f0bcc22b61603501a5ef93" translate="yes" xml:space="preserve">
          <source>File.RenameError &lt;small&gt;exception&lt;/small&gt;</source>
          <target state="translated">File.RenameError &lt;small&gt;excepci&amp;oacute;n&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="26a6590f983813e802ea4c694400ea32fe379883" translate="yes" xml:space="preserve">
          <source>File.Stat</source>
          <target state="translated">File.Stat</target>
        </trans-unit>
        <trans-unit id="665c1dadb9609c9481c5f8ebc57dca4f06031e23" translate="yes" xml:space="preserve">
          <source>File.Stream</source>
          <target state="translated">File.Stream</target>
        </trans-unit>
        <trans-unit id="96e578211aa295317cf257310712fa28ccd8f6c6" translate="yes" xml:space="preserve">
          <source>Filters</source>
          <target state="translated">Filters</target>
        </trans-unit>
        <trans-unit id="e4b01a2510691aed09a9f3e1dbbc4fcd455e3aee" translate="yes" xml:space="preserve">
          <source>Filters can also be given:</source>
          <target state="translated">También se pueden dar filtros:</target>
        </trans-unit>
        <trans-unit id="2503811e18a88c94424e3c46d73925ff58ba8899" translate="yes" xml:space="preserve">
          <source>Filters can either be a regular expression or any data structure that implements the &lt;a href=&quot;https://hexdocs.pm/elixir/String.Chars.html&quot;&gt;&lt;code&gt;String.Chars&lt;/code&gt;&lt;/a&gt; protocol, which is invoked before comparing the filter with the &lt;code&gt;:tag&lt;/code&gt; value.</source>
          <target state="translated">Los filtros pueden ser una expresi&amp;oacute;n regular o cualquier estructura de datos que implemente el protocolo &lt;a href=&quot;https://hexdocs.pm/elixir/String.Chars.html&quot;&gt; &lt;code&gt;String.Chars&lt;/code&gt; &lt;/a&gt; , que se invoca antes de comparar el filtro con el valor de la &lt;code&gt;:tag&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8e53af0e96b0cc30e1acdc06f0e1e173375388aa" translate="yes" xml:space="preserve">
          <source>Filters the &lt;code&gt;enumerable&lt;/code&gt;, i.e. returns only those elements for which &lt;code&gt;fun&lt;/code&gt; returns a truthy value.</source>
          <target state="translated">Filtra lo &lt;code&gt;enumerable&lt;/code&gt; , es decir, devuelve solo aquellos elementos para los que &lt;code&gt;fun&lt;/code&gt; devuelve un valor verdadero.</target>
        </trans-unit>
        <trans-unit id="38e91ba97986e6ce700c58bdd7ad300d67734ab8" translate="yes" xml:space="preserve">
          <source>Final note</source>
          <target state="translated">Nota final</target>
        </trans-unit>
        <trans-unit id="35edd1c925c63232dc7f42b120954fad87230406" translate="yes" xml:space="preserve">
          <source>Finally note all protocols are compiled with &lt;code&gt;debug_info&lt;/code&gt; set to &lt;code&gt;true&lt;/code&gt;, regardless of the option set by &lt;code&gt;elixirc&lt;/code&gt; compiler. The debug info is used for consolidation and it may be removed after consolidation.</source>
          <target state="translated">Por &amp;uacute;ltimo, tenga en cuenta que todos los protocolos se compilan con &lt;code&gt;debug_info&lt;/code&gt; establecido en &lt;code&gt;true&lt;/code&gt; , independientemente de la opci&amp;oacute;n establecida por el compilador &lt;code&gt;elixirc&lt;/code&gt; . La informaci&amp;oacute;n de depuraci&amp;oacute;n se utiliza para la consolidaci&amp;oacute;n y se puede eliminar despu&amp;eacute;s de la consolidaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="04fdf1c25fdd5f8a57c6967c66cfb3a7de5f847e" translate="yes" xml:space="preserve">
          <source>Finally, &lt;code&gt;setup_all&lt;/code&gt; callbacks run in a separate process per module, while all &lt;code&gt;setup&lt;/code&gt; callbacks run in the same process as the test itself. &lt;a href=&quot;#on_exit/2&quot;&gt;&lt;code&gt;on_exit/2&lt;/code&gt;&lt;/a&gt; callbacks always run in a separate process, as implied by their name. The test process always exits with reason &lt;code&gt;:shutdown&lt;/code&gt;, which means any process linked to the test process will also exit, although asynchronously. Therefore it is preferred to use &lt;a href=&quot;#start_supervised/2&quot;&gt;&lt;code&gt;start_supervised/2&lt;/code&gt;&lt;/a&gt; to guarantee synchronous termination.</source>
          <target state="translated">Finalmente, &lt;code&gt;setup_all&lt;/code&gt; callbacks se ejecutan en un proceso separado por m&amp;oacute;dulo, mientras que todos &lt;code&gt;setup&lt;/code&gt; callbacks de configuraci&amp;oacute;n se ejecutan en el mismo proceso que la prueba en s&amp;iacute;. &lt;a href=&quot;#on_exit/2&quot;&gt; &lt;code&gt;on_exit/2&lt;/code&gt; &lt;/a&gt; devoluciones de llamada on_exit / 2 siempre se ejecutan en un proceso separado, como lo implica su nombre. El proceso de prueba siempre sale con motivo &lt;code&gt;:shutdown&lt;/code&gt; , lo que significa que cualquier proceso vinculado al proceso de prueba tambi&amp;eacute;n saldr&amp;aacute;, aunque de forma as&amp;iacute;ncrona. Por lo tanto, se prefiere utilizar &lt;a href=&quot;#start_supervised/2&quot;&gt; &lt;code&gt;start_supervised/2&lt;/code&gt; &lt;/a&gt; para garantizar la terminaci&amp;oacute;n s&amp;iacute;ncrona.</target>
        </trans-unit>
        <trans-unit id="4a48b23e11b49db2f57e13074e7a2452579f61b9" translate="yes" xml:space="preserve">
          <source>Finally, Elixir has a construct called aliases which we will explore later. Aliases start in upper case and are also atoms:</source>
          <target state="translated">Finalmente,Elixir tiene una construcción llamada alias que exploraremos más adelante.Los alias comienzan en mayúsculas y también son átomos:</target>
        </trans-unit>
        <trans-unit id="f1f7036035e55443b9fb00eab5b0f156761b7796" translate="yes" xml:space="preserve">
          <source>Finally, Elixir provides tools such as escripts and archives, which are different mechanisms for packaging your application. Those are typically used when tools must be shared between developers and not as deployment options. See &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Archive.Build.html&quot;&gt;&lt;code&gt;mix help archive.build&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Escript.Build.html&quot;&gt;&lt;code&gt;mix help escript.build&lt;/code&gt;&lt;/a&gt; for more detail.</source>
          <target state="translated">Finalmente, Elixir proporciona herramientas como escripts y archivos, que son diferentes mecanismos para empaquetar su aplicaci&amp;oacute;n. Por lo general, se utilizan cuando las herramientas deben compartirse entre desarrolladores y no como opciones de implementaci&amp;oacute;n. Consulte &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Archive.Build.html&quot;&gt; &lt;code&gt;mix help archive.build&lt;/code&gt; &lt;/a&gt; y &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Escript.Build.html&quot;&gt; &lt;code&gt;mix help escript.build&lt;/code&gt; &lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="51f5f67bdc287fa28acb4c9223c262389c58e3ea" translate="yes" xml:space="preserve">
          <source>Finally, aliases can also be used to augment existing tasks. Let's suppose you want to augment &lt;a href=&quot;mix.tasks.clean&quot;&gt;&lt;code&gt;mix clean&lt;/code&gt;&lt;/a&gt; to clean another directory Mix does not know about:</source>
          <target state="translated">Por &amp;uacute;ltimo, los alias tambi&amp;eacute;n se pueden utilizar para aumentar las tareas existentes. Supongamos que desea aumentar la &lt;a href=&quot;mix.tasks.clean&quot;&gt; &lt;code&gt;mix clean&lt;/code&gt; &lt;/a&gt; para limpiar otro directorio que Mix no conoce:</target>
        </trans-unit>
        <trans-unit id="191e1198a5b11d86c8e069a1379cf393ac7fbbc2" translate="yes" xml:space="preserve">
          <source>Finally, anonymous functions are also closures and as such they can access variables that are in scope when the function is defined. Let&amp;rsquo;s define a new anonymous function that uses the &lt;code&gt;add&lt;/code&gt; anonymous function we have previously defined:</source>
          <target state="translated">Finalmente, las funciones an&amp;oacute;nimas tambi&amp;eacute;n son cierres y, como tales, pueden acceder a variables que est&amp;aacute;n dentro del alcance cuando se define la funci&amp;oacute;n. Definamos una nueva funci&amp;oacute;n an&amp;oacute;nima que use la funci&amp;oacute;n &lt;code&gt;add&lt;/code&gt; an&amp;oacute;nima que hemos definido previamente:</target>
        </trans-unit>
        <trans-unit id="1877a861abfea57d3175dd4ec2545e64bd06b283" translate="yes" xml:space="preserve">
          <source>Finally, as discussed in the &lt;a href=&quot;https://hexdocs.pm/ex_unit/ExUnit.Case.html&quot;&gt;&lt;code&gt;ExUnit.Case&lt;/code&gt;&lt;/a&gt; documentation, remember that the initial context metadata can also be set via &lt;code&gt;@tag&lt;/code&gt;s, which can then be accessed in the &lt;code&gt;setup&lt;/code&gt; block:</source>
          <target state="translated">Finalmente, como se explica en la documentaci&amp;oacute;n de &lt;a href=&quot;https://hexdocs.pm/ex_unit/ExUnit.Case.html&quot;&gt; &lt;code&gt;ExUnit.Case&lt;/code&gt; &lt;/a&gt; , recuerde que los metadatos del contexto inicial tambi&amp;eacute;n se pueden configurar a trav&amp;eacute;s de &lt;code&gt;@tag&lt;/code&gt; s, a los que luego se puede acceder en el bloque de &lt;code&gt;setup&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="4f8f9ee80a4128eebbd8b8d0785f0bf4b51354e3" translate="yes" xml:space="preserve">
          <source>Finally, attributes can also be read inside functions:</source>
          <target state="translated">Finalmente,los atributos también pueden ser leídos dentro de las funciones:</target>
        </trans-unit>
        <trans-unit id="668fb656f73feadaab2b70bd66310c5a6a4ae07c" translate="yes" xml:space="preserve">
          <source>Finally, beware of redundant code comments, such as the ones describing the exact same that the code does:</source>
          <target state="translated">Por último,tenga cuidado con los comentarios redundantes del código,como los que describen exactamente lo mismo que el código:</target>
        </trans-unit>
        <trans-unit id="7b06c2901c51b502cac134085935b1c4ea9f9da4" translate="yes" xml:space="preserve">
          <source>Finally, check &lt;a href=&quot;https://hexdocs.pm/elixir/Task.Supervisor.html&quot;&gt;&lt;code&gt;Task.Supervisor&lt;/code&gt;&lt;/a&gt; for other supported operations.</source>
          <target state="translated">Finalmente, verifique &lt;a href=&quot;https://hexdocs.pm/elixir/Task.Supervisor.html&quot;&gt; &lt;code&gt;Task.Supervisor&lt;/code&gt; &lt;/a&gt; para otras operaciones compatibles.</target>
        </trans-unit>
        <trans-unit id="1083a91a64ef83410037ffb35fd49e9fb40c270f" translate="yes" xml:space="preserve">
          <source>Finally, check &lt;a href=&quot;task.supervisor&quot;&gt;&lt;code&gt;Task.Supervisor&lt;/code&gt;&lt;/a&gt; for other supported operations.</source>
          <target state="translated">Finalmente, verifique &lt;a href=&quot;task.supervisor&quot;&gt; &lt;code&gt;Task.Supervisor&lt;/code&gt; &lt;/a&gt; para otras operaciones compatibles.</target>
        </trans-unit>
        <trans-unit id="f726a5d73225d60359e8c4f7a62c08247c5e3152" translate="yes" xml:space="preserve">
          <source>Finally, copy the &lt;code&gt;kv&lt;/code&gt; application we have built so far to the &lt;code&gt;apps&lt;/code&gt; directory in our new umbrella project. The final directory structure should match the structure we mentioned earlier:</source>
          <target state="translated">Finalmente, copie la aplicaci&amp;oacute;n &lt;code&gt;kv&lt;/code&gt; que hemos creado hasta ahora en el directorio de &lt;code&gt;apps&lt;/code&gt; de nuestro nuevo proyecto general. La estructura de directorio final debe coincidir con la estructura que mencionamos anteriormente:</target>
        </trans-unit>
        <trans-unit id="fab90ae3564b828d174f4a1339c23b2f23ef10c1" translate="yes" xml:space="preserve">
          <source>Finally, developers should also avoid defining functions inside the &lt;code&gt;__using__/1&lt;/code&gt; callback, unless those functions are the default implementation of a previously defined &lt;code&gt;@callback&lt;/code&gt; or are functions meant to be overridden (see &lt;a href=&quot;#defoverridable/1&quot;&gt;&lt;code&gt;defoverridable/1&lt;/code&gt;&lt;/a&gt;). Even in these cases, defining functions should be seen as a &quot;last resort&quot;.</source>
          <target state="translated">Por &amp;uacute;ltimo, los desarrolladores tambi&amp;eacute;n deben evitar definir funciones dentro de la devoluci&amp;oacute;n &lt;code&gt;__using__/1&lt;/code&gt; llamada __usando __ / 1 , a menos que esas funciones sean la implementaci&amp;oacute;n predeterminada de una &lt;code&gt;@callback&lt;/code&gt; definida previamente o sean funciones que se deben anular (ver &lt;a href=&quot;#defoverridable/1&quot;&gt; &lt;code&gt;defoverridable/1&lt;/code&gt; &lt;/a&gt; ). Incluso en estos casos, la definici&amp;oacute;n de funciones debe considerarse un &quot;&amp;uacute;ltimo recurso&quot;.</target>
        </trans-unit>
        <trans-unit id="0a5904f73dbbcd0930c32f8ef2421f6ebf86cef4" translate="yes" xml:space="preserve">
          <source>Finally, different from the other callbacks, we have defined a &amp;ldquo;catch-all&amp;rdquo; clause for &lt;code&gt;handle_info/2&lt;/code&gt; that discards any unknown message. To understand why, let&amp;rsquo;s move on to the next section.</source>
          <target state="translated">Finalmente, a diferencia de las otras devoluciones de llamada, hemos definido una cl&amp;aacute;usula &quot;catch-all&quot; para &lt;code&gt;handle_info/2&lt;/code&gt; que descarta cualquier mensaje desconocido. Para entender por qu&amp;eacute;, pasemos a la siguiente secci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="2dca70c0e3d6a9acaabab7bc96177fe2d9c44844" translate="yes" xml:space="preserve">
          <source>Finally, do not use this function on IO devices in Unicode mode as it will return the wrong result.</source>
          <target state="translated">Por último,no utilice esta función en dispositivos IO en modo Unicode ya que devolverá un resultado erróneo.</target>
        </trans-unit>
        <trans-unit id="5d1ed29b60633fb5430adba7b8757ea6539225e2" translate="yes" xml:space="preserve">
          <source>Finally, if you don't want to raise on empty enumerables, you can pass the empty fallback:</source>
          <target state="translated">Por último,si no quieres aumentar los números vacíos,puedes pasar el vacío:</target>
        </trans-unit>
        <trans-unit id="8e8ca83f100555992c56e00e0551b89ee834e2cb" translate="yes" xml:space="preserve">
          <source>Finally, in order for runtime configuration to work properly (as well as any other &quot;Config provider&quot; as defined next), it needs to be able to persist the newly computed configuration to disk. The computed config file will be written to &quot;tmp&quot; directory inside the release every time the system boots. You can configure the &quot;tmp&quot; directory by setting the &lt;code&gt;RELEASE_TMP&lt;/code&gt; environment variable, either explicitly or inside your &lt;code&gt;releases/RELEASE_VSN/env.sh&lt;/code&gt; (or &lt;code&gt;env.bat&lt;/code&gt; on Windows).</source>
          <target state="translated">Por &amp;uacute;ltimo, para que la configuraci&amp;oacute;n en tiempo de ejecuci&amp;oacute;n funcione correctamente (as&amp;iacute; como cualquier otro &quot;proveedor de configuraci&amp;oacute;n&quot; como se define a continuaci&amp;oacute;n), debe poder conservar la configuraci&amp;oacute;n reci&amp;eacute;n calculada en el disco. El archivo de configuraci&amp;oacute;n calculado se escribir&amp;aacute; en el directorio &quot;tmp&quot; dentro de la versi&amp;oacute;n cada vez que se inicie el sistema. Puede configurar el directorio &quot;tmp&quot; configurando la variable de entorno &lt;code&gt;RELEASE_TMP&lt;/code&gt; , ya sea expl&amp;iacute;citamente o dentro de sus &lt;code&gt;releases/RELEASE_VSN/env.sh&lt;/code&gt; (o &lt;code&gt;env.bat&lt;/code&gt; en Windows).</target>
        </trans-unit>
        <trans-unit id="b0a0fcc78d43cdb2d5efe08a2aa140520d91d3bf" translate="yes" xml:space="preserve">
          <source>Finally, it also documents two special forms, &lt;a href=&quot;#__block__/1&quot;&gt;&lt;code&gt;__block__/1&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#__aliases__/1&quot;&gt;&lt;code&gt;__aliases__/1&lt;/code&gt;&lt;/a&gt;, which are not intended to be called directly by the developer but they appear in quoted contents since they are essential in Elixir's constructs.</source>
          <target state="translated">Finalmente, tambi&amp;eacute;n documenta dos formas especiales, &lt;a href=&quot;#__block__/1&quot;&gt; &lt;code&gt;__block__/1&lt;/code&gt; &lt;/a&gt; y &lt;a href=&quot;#__aliases__/1&quot;&gt; &lt;code&gt;__aliases__/1&lt;/code&gt; &lt;/a&gt; , que no pretenden ser llamadas directamente por el desarrollador pero que aparecen en contenidos citados ya que son esenciales en las construcciones de Elixir.</target>
        </trans-unit>
        <trans-unit id="f74f8991d0d3c9a479fe59d35b99b4abf4e6cf52" translate="yes" xml:space="preserve">
          <source>Finally, it's advised to profile your program with the &lt;code&gt;prod&lt;/code&gt; environment, since this should provide more realistic insights into bottlenecks.</source>
          <target state="translated">Finalmente, se recomienda perfilar su programa con el entorno de &lt;code&gt;prod&lt;/code&gt; ucci&amp;oacute;n , ya que esto deber&amp;iacute;a proporcionar informaci&amp;oacute;n m&amp;aacute;s realista sobre los cuellos de botella.</target>
        </trans-unit>
        <trans-unit id="e7d511ddfbac4fd8a034329e957061520ac4e991" translate="yes" xml:space="preserve">
          <source>Finally, keep in mind it is not required for you to assemble the release from the umbrella root. You can also assemble the release from each child application individually. Doing it from the root, however, allows you to include two applications that do not depend on each other as part of the same release.</source>
          <target state="translated">Por último,ten en cuenta que no es necesario que montes la liberación de la raíz del paraguas.También puede armar la liberación de cada aplicación infantil individualmente.Sin embargo,hacerlo desde la raíz le permite incluir dos aplicaciones que no dependen una de la otra como parte de la misma versión.</target>
        </trans-unit>
        <trans-unit id="04258f441df3a0685acf7dc84f54350179d26c35" translate="yes" xml:space="preserve">
          <source>Finally, keep in mind that applications in an umbrella project all share the same configurations and dependencies. If two applications in your umbrella need to configure the same dependency in drastically different ways or even use different versions, you have probably outgrown the benefits brought by umbrellas. Remember you can break the umbrella and still leverage the benefits behind &amp;ldquo;mono-repos&amp;rdquo;.</source>
          <target state="translated">Por &amp;uacute;ltimo, tenga en cuenta que todas las aplicaciones de un proyecto general comparten las mismas configuraciones y dependencias. Si dos aplicaciones en su paraguas necesitan configurar la misma dependencia de formas dr&amp;aacute;sticamente diferentes o incluso usar versiones diferentes, probablemente haya superado los beneficios que traen los paraguas. Recuerde que puede romper el paraguas y a&amp;uacute;n aprovechar los beneficios detr&amp;aacute;s de los &amp;ldquo;mono-repositorios&amp;rdquo;.</target>
        </trans-unit>
        <trans-unit id="b17d2e9b41800db01905629d7c64202ebf54e9fc" translate="yes" xml:space="preserve">
          <source>Finally, keep in mind that variable assignments inside the comprehension, be it in generators, filters or inside the block, are not reflected outside of the comprehension.</source>
          <target state="translated">Por último,tenga en cuenta que las asignaciones variables dentro de la comprensión,ya sea en los generadores,los filtros o dentro del bloque,no se reflejan fuera de la comprensión.</target>
        </trans-unit>
        <trans-unit id="7b0dc026cfea9e2e7b1becee88cabf1eed936967" translate="yes" xml:space="preserve">
          <source>Finally, note &lt;code&gt;cond&lt;/code&gt; considers any value besides &lt;code&gt;nil&lt;/code&gt; and &lt;code&gt;false&lt;/code&gt; to be true:</source>
          <target state="translated">Finalmente, note &lt;code&gt;cond&lt;/code&gt; considera que cualquier valor adem&amp;aacute;s de &lt;code&gt;nil&lt;/code&gt; y &lt;code&gt;false&lt;/code&gt; es verdadero:</target>
        </trans-unit>
        <trans-unit id="1e8a25344ef8715d7cecfc3690b780ce1c60f07c" translate="yes" xml:space="preserve">
          <source>Finally, note all protocols are compiled with &lt;code&gt;debug_info&lt;/code&gt; set to &lt;code&gt;true&lt;/code&gt;, regardless of the option set by the &lt;code&gt;elixirc&lt;/code&gt; compiler. The debug info is used for consolidation and it is removed after consolidation unless globally set.</source>
          <target state="translated">Finalmente, tenga en cuenta que todos los protocolos se compilan con &lt;code&gt;debug_info&lt;/code&gt; establecido en &lt;code&gt;true&lt;/code&gt; , independientemente de la opci&amp;oacute;n establecida por el compilador &lt;code&gt;elixirc&lt;/code&gt; . La informaci&amp;oacute;n de depuraci&amp;oacute;n se utiliza para la consolidaci&amp;oacute;n y se elimina despu&amp;eacute;s de la consolidaci&amp;oacute;n, a menos que se establezca globalmente.</target>
        </trans-unit>
        <trans-unit id="7a86bfddfc1fd1f3cd3bcab92a5988d59aa4d019" translate="yes" xml:space="preserve">
          <source>Finally, note it is also possible to simply pass the &lt;code&gt;Stack&lt;/code&gt; module as a child:</source>
          <target state="translated">Finalmente, tenga en cuenta que tambi&amp;eacute;n es posible simplemente pasar el m&amp;oacute;dulo &lt;code&gt;Stack&lt;/code&gt; como un ni&amp;ntilde;o:</target>
        </trans-unit>
        <trans-unit id="b5e8ec2ca3602b6bc2810511f915ff11214b601b" translate="yes" xml:space="preserve">
          <source>Finally, note map keys in patterns must always be literals or previously bound variables matched with the pin operator.</source>
          <target state="translated">Por último,las claves de los mapas de notas en los patrones siempre deben ser literales o variables previamente encuadradas que coincidan con el operador del pin.</target>
        </trans-unit>
        <trans-unit id="ddefd09be238de8fef0e43712279c903c785e333" translate="yes" xml:space="preserve">
          <source>Finally, note strings themselves are valid algebra documents that keep their formatting when pretty printed. This means your &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Inspect&lt;/code&gt;&lt;/a&gt; implementation may simply return a string, although that will devoid it of any pretty-printing.</source>
          <target state="translated">Por &amp;uacute;ltimo, las cadenas de notas en s&amp;iacute; mismas son documentos de &amp;aacute;lgebra v&amp;aacute;lidos que mantienen su formato cuando est&amp;aacute;n impresos. Esto significa que su implementaci&amp;oacute;n de &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;Inspect&lt;/code&gt; &lt;/a&gt; puede simplemente devolver una cadena, aunque eso la despojar&amp;aacute; de cualquier impresi&amp;oacute;n bonita.</target>
        </trans-unit>
        <trans-unit id="7e168ab8bcfeb48be21d768c678e77ae94e3845d" translate="yes" xml:space="preserve">
          <source>Finally, note that attributes can also be read inside functions:</source>
          <target state="translated">Por último,observe que los atributos también pueden ser leídos dentro de las funciones:</target>
        </trans-unit>
        <trans-unit id="525d826b02e67b29a0d7a1fb2bd96144f8ca9ed8" translate="yes" xml:space="preserve">
          <source>Finally, note the coverage itself is not measured across the projects themselves. For example, if project B depends on A, and if there is code in A that is only executed from project B, those lines will not be marked as covered, which is important, as those projects should be developed and tested in isolation.</source>
          <target state="translated">Por último,nótese que la cobertura en sí misma no se mide a través de los propios proyectos.Por ejemplo,si el proyecto B depende de A,y si hay código en A que sólo se ejecuta a partir del proyecto B,esas líneas no se marcarán como cubiertas,lo que es importante,ya que esos proyectos deben desarrollarse y probarse de forma aislada.</target>
        </trans-unit>
        <trans-unit id="d4f7dd24a40c84b2db68e974eaff07a24dba709d" translate="yes" xml:space="preserve">
          <source>Finally, note the functions in the &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Enum&lt;/code&gt;&lt;/a&gt; module are eager: they will traverse the enumerable as soon as they are invoked. This is particularly dangerous when working with infinite enumerables. In such cases, you should use the &lt;a href=&quot;https://hexdocs.pm/elixir/Stream.html&quot;&gt;&lt;code&gt;Stream&lt;/code&gt;&lt;/a&gt; module, which allows you to lazily express computations, without traversing collections, and work with possibly infinite collections. See the &lt;a href=&quot;https://hexdocs.pm/elixir/Stream.html&quot;&gt;&lt;code&gt;Stream&lt;/code&gt;&lt;/a&gt; module for examples and documentation.</source>
          <target state="translated">Finalmente, tenga en cuenta que las funciones en el m&amp;oacute;dulo &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;Enum&lt;/code&gt; &lt;/a&gt; est&amp;aacute;n ansiosas: atravesar&amp;aacute;n el enumerable tan pronto como se invoquen. Esto es particularmente peligroso cuando se trabaja con infinitos enumerables. En tales casos, debe usar el m&amp;oacute;dulo &lt;a href=&quot;https://hexdocs.pm/elixir/Stream.html&quot;&gt; &lt;code&gt;Stream&lt;/code&gt; &lt;/a&gt; , que le permite expresar c&amp;aacute;lculos de manera perezosa, sin atravesar colecciones, y trabajar con colecciones posiblemente infinitas. Consulte el m&amp;oacute;dulo &lt;a href=&quot;https://hexdocs.pm/elixir/Stream.html&quot;&gt; &lt;code&gt;Stream&lt;/code&gt; &lt;/a&gt; para obtener ejemplos y documentaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="60bc3c90be2296af6dc74f8ac6ed31dee639afd7" translate="yes" xml:space="preserve">
          <source>Finally, note the functions in the &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Enum&lt;/code&gt;&lt;/a&gt; module are eager: they will traverse the enumerable as soon as they are invoked. This is particularly dangerous when working with infinite enumerables. In such cases, you should use the &lt;a href=&quot;stream&quot;&gt;&lt;code&gt;Stream&lt;/code&gt;&lt;/a&gt; module, which allows you to lazily express computations, without traversing collections, and work with possibly infinite collections. See the &lt;a href=&quot;stream&quot;&gt;&lt;code&gt;Stream&lt;/code&gt;&lt;/a&gt; module for examples and documentation.</source>
          <target state="translated">Finalmente, tenga en cuenta que las funciones en el m&amp;oacute;dulo &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;Enum&lt;/code&gt; &lt;/a&gt; est&amp;aacute;n ansiosas: atravesar&amp;aacute;n el enumerable tan pronto como se invoquen. Esto es particularmente peligroso cuando se trabaja con infinitos enumerables. En tales casos, debe usar el m&amp;oacute;dulo &lt;a href=&quot;stream&quot;&gt; &lt;code&gt;Stream&lt;/code&gt; &lt;/a&gt; , que le permite expresar c&amp;aacute;lculos de manera perezosa, sin atravesar colecciones, y trabajar con colecciones posiblemente infinitas. Consulte el m&amp;oacute;dulo &lt;a href=&quot;stream&quot;&gt; &lt;code&gt;Stream&lt;/code&gt; &lt;/a&gt; para obtener ejemplos y documentaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="12f0160206d216529166c8634dc691e626760b5b" translate="yes" xml:space="preserve">
          <source>Finally, notice that attributes can also be read inside functions:</source>
          <target state="translated">Por último,noten que los atributos también pueden ser leídos dentro de las funciones:</target>
        </trans-unit>
        <trans-unit id="989e69e0609a31b9b4fe9f32b562a703b9696c7b" translate="yes" xml:space="preserve">
          <source>Finally, remember that strings in Elixir are UTF-8 encoded binaries. This means that, similar to charlists, prefix matches on strings are also possible with the binary concatenation operator (&lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#%3C%3E/2&quot;&gt;&lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt;&lt;/a&gt;):</source>
          <target state="translated">Finalmente, recuerde que las cadenas en Elixir son binarios codificados en UTF-8. Esto significa que, de forma similar a las listas de caracteres, las coincidencias de prefijos en cadenas tambi&amp;eacute;n son posibles con el operador de concatenaci&amp;oacute;n binario ( &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#%3C%3E/2&quot;&gt; &lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; &lt;/a&gt; ):</target>
        </trans-unit>
        <trans-unit id="232829bb783ca862d2a7fbdd06c1982a8e6d4a55" translate="yes" xml:space="preserve">
          <source>Finally, remember you can also get a mini-overview of the runtime info by calling &lt;code&gt;runtime_info/0&lt;/code&gt; directly in IEx.</source>
          <target state="translated">Por &amp;uacute;ltimo, recuerde que tambi&amp;eacute;n puede obtener una peque&amp;ntilde;a descripci&amp;oacute;n general de la informaci&amp;oacute;n del tiempo de ejecuci&amp;oacute;n llamando a &lt;code&gt;runtime_info/0&lt;/code&gt; directamente en IEx.</target>
        </trans-unit>
        <trans-unit id="3d4e093b24b7868fdbb88889dcf9d11e7ebbe5c8" translate="yes" xml:space="preserve">
          <source>Finally, the line &lt;code&gt;import_config &quot;#{Mix.env()}.exs&quot;&lt;/code&gt; will import other config files, based on the current Mix environment, such as &lt;code&gt;config/dev.exs&lt;/code&gt; and &lt;code&gt;config/test.exs&lt;/code&gt;.</source>
          <target state="translated">Finalmente, la l&amp;iacute;nea &lt;code&gt;import_config &quot;#{Mix.env()}.exs&quot;&lt;/code&gt; importar&amp;aacute; otros archivos de configuraci&amp;oacute;n, basados ​​en el entorno Mix actual, como &lt;code&gt;config/dev.exs&lt;/code&gt; y &lt;code&gt;config/test.exs&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b6807f6f10cbe61d66aff585c4548460bfb9b94d" translate="yes" xml:space="preserve">
          <source>Finally, the line &lt;code&gt;import_config &quot;#{config_env()}.exs&quot;&lt;/code&gt; will import other config files based on the current configuration environment, such as &lt;code&gt;config/dev.exs&lt;/code&gt; and &lt;code&gt;config/test.exs&lt;/code&gt;.</source>
          <target state="translated">Finalmente, la l&amp;iacute;nea &lt;code&gt;import_config &quot;#{config_env()}.exs&quot;&lt;/code&gt; importar&amp;aacute; otros archivos de configuraci&amp;oacute;n basados ​​en el entorno de configuraci&amp;oacute;n actual, como &lt;code&gt;config/dev.exs&lt;/code&gt; y &lt;code&gt;config/test.exs&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="321ba25e566c212d784496c47ffc76a0ad896628" translate="yes" xml:space="preserve">
          <source>Finally, the stacktrace relates to the failure itself, giving information about the test and often the place the failure was generated from within the source files.</source>
          <target state="translated">Por último,el stacktrace se relaciona con el fallo en sí,dando información sobre la prueba y a menudo sobre el lugar en que se generó el fallo dentro de los archivos de origen.</target>
        </trans-unit>
        <trans-unit id="924ac30e08d7b545eac852afc656f22c82661634" translate="yes" xml:space="preserve">
          <source>Finally, these operators appear in the precedence table above but are only meaningful within certain constructs:</source>
          <target state="translated">Finalmente,estos operadores aparecen en la tabla de precedencia anterior pero sólo son significativos dentro de ciertas construcciones:</target>
        </trans-unit>
        <trans-unit id="3f56c580dd08d36a6b47e54333acfe9e1d8d30e4" translate="yes" xml:space="preserve">
          <source>Finally, this module also contains Elixir related functions, a bit tied to Elixir formatting, such as &lt;a href=&quot;#to_doc/2&quot;&gt;&lt;code&gt;to_doc/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Finalmente, este m&amp;oacute;dulo tambi&amp;eacute;n contiene funciones relacionadas con Elixir, un poco ligadas al formato de Elixir, como &lt;a href=&quot;#to_doc/2&quot;&gt; &lt;code&gt;to_doc/2&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9005decc18b830a894ffeaad85db25d6cd8463cf" translate="yes" xml:space="preserve">
          <source>Finally, to convert a String into a list of integer code points, known as &quot;charlists&quot; in Elixir, you can call &lt;code&gt;String.to_charlist&lt;/code&gt;:</source>
          <target state="translated">Finalmente, para convertir un String en una lista de puntos de c&amp;oacute;digo enteros, conocidos como &quot;charlists&quot; en Elixir, puede llamar a &lt;code&gt;String.to_charlist&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="29c7d0203ff19b759dff9a8dcf709329c059ef93" translate="yes" xml:space="preserve">
          <source>Finally, you may have observed that each doctest corresponds to a different test in our suite, which now reports a total of 7 doctests. That is because ExUnit considers the following to define two different doctests:</source>
          <target state="translated">Finalmente,puede haber observado que cada doctest corresponde a una prueba diferente en nuestra suite,que ahora reporta un total de 7 doctests.Esto se debe a que ExUnit considera lo siguiente para definir dos doctests diferentes:</target>
        </trans-unit>
        <trans-unit id="82318fe7e7a021f4fa35e9409276a28582c98da1" translate="yes" xml:space="preserve">
          <source>Find more about the pipe operator &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#%7C%3E/2&quot;&gt;by reading its documentation&lt;/a&gt;.</source>
          <target state="translated">Obtenga m&amp;aacute;s informaci&amp;oacute;n sobre el operador de tuber&amp;iacute;a &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#%7C%3E/2&quot;&gt;leyendo su documentaci&amp;oacute;n&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d473a61a8edc12c54afe46832414dc97879d0388" translate="yes" xml:space="preserve">
          <source>Finds a template path for the release.</source>
          <target state="translated">Encuentra una ruta de plantilla para el lanzamiento.</target>
        </trans-unit>
        <trans-unit id="e44a6c20b46b4eb7ebeba1748cd0e7795b1fd20f" translate="yes" xml:space="preserve">
          <source>Finds the &lt;code&gt;{pid, value}&lt;/code&gt; pair for the given &lt;code&gt;key&lt;/code&gt; in &lt;code&gt;registry&lt;/code&gt; in no particular order.</source>
          <target state="translated">Encuentra el par &lt;code&gt;{pid, value}&lt;/code&gt; para la &lt;code&gt;key&lt;/code&gt; dada en el &lt;code&gt;registry&lt;/code&gt; sin ning&amp;uacute;n orden en particular.</target>
        </trans-unit>
        <trans-unit id="d980122971e9d4fe80a33e7b799338a83929abd3" translate="yes" xml:space="preserve">
          <source>Finds the element at the given &lt;code&gt;index&lt;/code&gt; (zero-based).</source>
          <target state="translated">Encuentra el elemento en el &lt;code&gt;index&lt;/code&gt; dado (basado en cero).</target>
        </trans-unit>
        <trans-unit id="fdbbbf2a367be4fcd9eca718811c5a61aea8c66b" translate="yes" xml:space="preserve">
          <source>First of all, since we generated this project inside &lt;code&gt;kv_umbrella/apps&lt;/code&gt;, Mix automatically detected the umbrella structure and added four lines to the project definition:</source>
          <target state="translated">En primer lugar, dado que generamos este proyecto dentro de &lt;code&gt;kv_umbrella/apps&lt;/code&gt; , Mix detect&amp;oacute; autom&amp;aacute;ticamente la estructura del paraguas y agreg&amp;oacute; cuatro l&amp;iacute;neas a la definici&amp;oacute;n del proyecto:</target>
        </trans-unit>
        <trans-unit id="21e0a6d768daca714108b3a36ec6e2151c3c1139" translate="yes" xml:space="preserve">
          <source>First this task guarantees that all dependencies are in place and that the current project has been compiled. Then the current application is started as a temporary application, unless &lt;code&gt;:start_permanent&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt; in your project configuration or the &lt;code&gt;--permanent&lt;/code&gt; option is given, then it's started as permanent, which guarantees the node will shut down if the application crashes permanently.</source>
          <target state="translated">Primero, esta tarea garantiza que todas las dependencias est&amp;aacute;n en su lugar y que el proyecto actual ha sido compilado. Luego, la aplicaci&amp;oacute;n actual se inicia como una aplicaci&amp;oacute;n temporal, a menos que &lt;code&gt;:start_permanent&lt;/code&gt; se establezca en &lt;code&gt;true&lt;/code&gt; en la configuraci&amp;oacute;n de su proyecto o se proporcione la opci&amp;oacute;n &lt;code&gt;--permanent&lt;/code&gt; , luego se inicia como permanente, lo que garantiza que el nodo se cerrar&amp;aacute; si la aplicaci&amp;oacute;n falla permanentemente.</target>
        </trans-unit>
        <trans-unit id="0b225f4fd1da05fdbc3ee99a9f166606b1d95c47" translate="yes" xml:space="preserve">
          <source>First, if the routing tables are the opposite of each other, such as &lt;code&gt;[{?a..?m, :&quot;foo@computer-name&quot;}, {?n..?z, :&quot;bar@computer-name&quot;}]&lt;/code&gt; in one node and &lt;code&gt;[{?a..?m, :&quot;bar@computer-name&quot;}, {?n..?z, :&quot;foo@computer-name&quot;}]&lt;/code&gt; in the other, you can have a routing request that will run recursively in the cluster infinitely. This can be tackled at the application level by making sure you pass a list of seen nodes when we route, such as &lt;code&gt;KV.Router.route(bucket, mod, fun, args, seen_nodes)&lt;/code&gt;. Then by checking if the node being dispatched to was already visited, we can avoid the cycle. Implementing and testing this functionality will be left as an exercise.</source>
          <target state="translated">Primero, si las tablas de enrutamiento son opuestas entre s&amp;iacute;, como &lt;code&gt;[{?a..?m, :&quot;foo@computer-name&quot;}, {?n..?z, :&quot;bar@computer-name&quot;}]&lt;/code&gt; en un nodo y &lt;code&gt;[{?a..?m, :&quot;bar@computer-name&quot;}, {?n..?z, :&quot;foo@computer-name&quot;}]&lt;/code&gt; en el otro, puedes tener una solicitud de enrutamiento que se ejecutar&amp;aacute; de forma recursiva en el cl&amp;uacute;ster de forma infinita. Esto se puede abordar a nivel de aplicaci&amp;oacute;n asegur&amp;aacute;ndose de pasar una lista de nodos vistos cuando &lt;code&gt;KV.Router.route(bucket, mod, fun, args, seen_nodes)&lt;/code&gt; , como KV.Router.route (bucket, mod, fun, args, seen_nodes) . Luego, al verificar si el nodo al que se env&amp;iacute;a ya se visit&amp;oacute;, podemos evitar el ciclo. La implementaci&amp;oacute;n y prueba de esta funcionalidad se dejar&amp;aacute; como un ejercicio.</target>
        </trans-unit>
        <trans-unit id="fe6a7fa579eecc0b0104d2aa94bc63bd9d9aa9d6" translate="yes" xml:space="preserve">
          <source>First, the &lt;code&gt;request&lt;/code&gt; is sent to every node in &lt;code&gt;nodes&lt;/code&gt;; then, the caller waits for the replies. This function returns a two-element tuple &lt;code&gt;{replies, bad_nodes}&lt;/code&gt; where:</source>
          <target state="translated">Primero, la &lt;code&gt;request&lt;/code&gt; se env&amp;iacute;a a todos los nodos de los &lt;code&gt;nodes&lt;/code&gt; ; luego, la persona que llama espera las respuestas. Esta funci&amp;oacute;n devuelve una tupla de dos elementos &lt;code&gt;{replies, bad_nodes}&lt;/code&gt; donde:</target>
        </trans-unit>
        <trans-unit id="60398b803dd263be0dc63a6c96308aea282994d5" translate="yes" xml:space="preserve">
          <source>First, the formatter never changes the semantics of the code by default. This means the input AST and the output AST are equivalent. Optional behaviour, such as &lt;code&gt;:rename_deprecated_at&lt;/code&gt;, is allowed to break this guarantee.</source>
          <target state="translated">Primero, el formateador nunca cambia la sem&amp;aacute;ntica del c&amp;oacute;digo por defecto. Esto significa que la entrada AST y la salida AST son equivalentes. Se permite el comportamiento opcional, como &lt;code&gt;:rename_deprecated_at&lt;/code&gt; , para romper esta garant&amp;iacute;a.</target>
        </trans-unit>
        <trans-unit id="761d6955efc7722bb7c5e17c7ad9ae6eee0e3a82" translate="yes" xml:space="preserve">
          <source>Flattens the given &lt;code&gt;list&lt;/code&gt; of nested lists.</source>
          <target state="translated">Aplana la &lt;code&gt;list&lt;/code&gt; a dada de listas anidadas.</target>
        </trans-unit>
        <trans-unit id="384278e07033851614565e0c9f8e0ea314279560" translate="yes" xml:space="preserve">
          <source>Flattens the given &lt;code&gt;list&lt;/code&gt; of nested lists. The list &lt;code&gt;tail&lt;/code&gt; will be added at the end of the flattened list.</source>
          <target state="translated">Aplana la &lt;code&gt;list&lt;/code&gt; a dada de listas anidadas. La &lt;code&gt;tail&lt;/code&gt; lista se agregar&amp;aacute; al final de la lista aplanada.</target>
        </trans-unit>
        <trans-unit id="64435fd82de7b1d614dfb9844848a48b14c6cd2c" translate="yes" xml:space="preserve">
          <source>Float</source>
          <target state="translated">Float</target>
        </trans-unit>
        <trans-unit id="e0ed30f7614c69e32cbce2c9fd0bd8fcaa7586e6" translate="yes" xml:space="preserve">
          <source>Float numbers require a dot followed by at least one digit and also support &lt;code&gt;e&lt;/code&gt; for scientific notation:</source>
          <target state="translated">Los n&amp;uacute;meros flotantes requieren un punto seguido de al menos un d&amp;iacute;gito y tambi&amp;eacute;n admiten &lt;code&gt;e&lt;/code&gt; para notaci&amp;oacute;n cient&amp;iacute;fica:</target>
        </trans-unit>
        <trans-unit id="a4495969af61f575a24ee4711fa76dfaafb26d0e" translate="yes" xml:space="preserve">
          <source>Floats in Elixir are 64-bit double precision.</source>
          <target state="translated">Los flotadores en el Elixir son de doble precisión de 64 bits.</target>
        </trans-unit>
        <trans-unit id="9ee393efb1b19d0c371e21c8a5d6360e13a111b0" translate="yes" xml:space="preserve">
          <source>Flushes all &lt;code&gt;:mix_shell&lt;/code&gt; and &lt;code&gt;:mix_shell_input&lt;/code&gt; messages from the current process.</source>
          <target state="translated">Vac&amp;iacute;a todos los &lt;code&gt;:mix_shell&lt;/code&gt; y &lt;code&gt;:mix_shell_input&lt;/code&gt; del proceso actual.</target>
        </trans-unit>
        <trans-unit id="1f37e32316ff57285093c07bcc6fa68a47a4a700" translate="yes" xml:space="preserve">
          <source>Flushes the logger.</source>
          <target state="translated">Tira al leñador.</target>
        </trans-unit>
        <trans-unit id="d44af71a2582a2b67261bbce0307838133bc552a" translate="yes" xml:space="preserve">
          <source>Flushes the output buffer and returns its current contents.</source>
          <target state="translated">Limpia el buffer de salida y devuelve su contenido actual.</target>
        </trans-unit>
        <trans-unit id="1fd9c42d3180adcefdbd370b8adb9856f5a36877" translate="yes" xml:space="preserve">
          <source>Folds (reduces) the given list from the left with a function. Requires an accumulator.</source>
          <target state="translated">Dobla (reduce)la lista dada desde la izquierda con una función.Requiere un acumulador.</target>
        </trans-unit>
        <trans-unit id="569c663a35f673e18e4fd8649f95dd98dfc6e9c3" translate="yes" xml:space="preserve">
          <source>Folds (reduces) the given list from the right with a function. Requires an accumulator.</source>
          <target state="translated">Dobla (reduce)la lista dada de la derecha con una función.Requiere un acumulador.</target>
        </trans-unit>
        <trans-unit id="2fa0635488dcee65136d608f773cf5f9ef5e7acf" translate="yes" xml:space="preserve">
          <source>Folds a list of documents into a document using the given folder function.</source>
          <target state="translated">Dobla una lista de documentos en un documento utilizando la función de carpeta determinada.</target>
        </trans-unit>
        <trans-unit id="708d44cdbbf26cc5087abdc9244c378da50e27f8" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;call/2&lt;/code&gt; requests, we implement a &lt;code&gt;handle_call/3&lt;/code&gt; callback that receives the &lt;code&gt;request&lt;/code&gt;, the process from which we received the request (&lt;code&gt;_from&lt;/code&gt;), and the current server state (&lt;code&gt;names&lt;/code&gt;). The &lt;code&gt;handle_call/3&lt;/code&gt; callback returns a tuple in the format &lt;code&gt;{:reply, reply, new_state}&lt;/code&gt;. The first element of the tuple, &lt;code&gt;:reply&lt;/code&gt;, indicates that the server should send a reply back to the client. The second element, &lt;code&gt;reply&lt;/code&gt;, is what will be sent to the client while the third, &lt;code&gt;new_state&lt;/code&gt; is the new server state.</source>
          <target state="translated">Para las solicitudes &lt;code&gt;call/2&lt;/code&gt; , implementamos una devoluci&amp;oacute;n &lt;code&gt;handle_call/3&lt;/code&gt; llamada handle_call / 3 que recibe la &lt;code&gt;request&lt;/code&gt; , el proceso desde el cual recibimos la solicitud ( &lt;code&gt;_from&lt;/code&gt; ) y el estado actual del servidor ( &lt;code&gt;names&lt;/code&gt; ). La devoluci&amp;oacute;n &lt;code&gt;handle_call/3&lt;/code&gt; llamada handle_call / 3 devuelve una tupla con el formato &lt;code&gt;{:reply, reply, new_state}&lt;/code&gt; . El primer elemento de la tupla,: &lt;code&gt;:reply&lt;/code&gt; , indica que el servidor debe enviar una respuesta al cliente. El segundo elemento, &lt;code&gt;reply&lt;/code&gt; , es lo que se enviar&amp;aacute; al cliente, mientras que el tercero, &lt;code&gt;new_state&lt;/code&gt; es el nuevo estado del servidor.</target>
        </trans-unit>
        <trans-unit id="85fe9a9b5eab6f7837fd7ce17f20db0e36c96d5e" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;cast/2&lt;/code&gt; requests, we implement a &lt;code&gt;handle_cast/2&lt;/code&gt; callback that receives the &lt;code&gt;request&lt;/code&gt; and the current server state (&lt;code&gt;names&lt;/code&gt;). The &lt;code&gt;handle_cast/2&lt;/code&gt; callback returns a tuple in the format &lt;code&gt;{:noreply, new_state}&lt;/code&gt;. Note that in a real application we would have probably implemented the callback for &lt;code&gt;:create&lt;/code&gt; with a synchronous call instead of an asynchronous cast. We are doing it this way to illustrate how to implement a cast callback.</source>
          <target state="translated">Para las solicitudes de &lt;code&gt;cast/2&lt;/code&gt; , implementamos una devoluci&amp;oacute;n &lt;code&gt;handle_cast/2&lt;/code&gt; llamada handle_cast / 2 que recibe la &lt;code&gt;request&lt;/code&gt; y el estado actual del servidor ( &lt;code&gt;names&lt;/code&gt; ). La devoluci&amp;oacute;n &lt;code&gt;handle_cast/2&lt;/code&gt; llamada handle_cast / 2 devuelve una tupla con el formato &lt;code&gt;{:noreply, new_state}&lt;/code&gt; . Tenga en cuenta que en una aplicaci&amp;oacute;n real probablemente habr&amp;iacute;amos implementado la devoluci&amp;oacute;n de llamada para &lt;code&gt;:create&lt;/code&gt; con una llamada sincr&amp;oacute;nica en lugar de una transmisi&amp;oacute;n asincr&amp;oacute;nica. Lo estamos haciendo de esta manera para ilustrar c&amp;oacute;mo implementar una devoluci&amp;oacute;n de llamada de conversi&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="3c507ce5e858adfd9920b90e4c749fbfaa148e35" translate="yes" xml:space="preserve">
          <source>For a complete list of options, see &lt;a href=&quot;http://www.erlang.org/doc/man/compile.html#file-2&quot;&gt;&lt;code&gt;:compile.file/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Para obtener una lista completa de opciones, consulte &lt;a href=&quot;http://www.erlang.org/doc/man/compile.html#file-2&quot;&gt; &lt;code&gt;:compile.file/2&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9b0f265cab36385ed743f3055c68d076ae6c612a" translate="yes" xml:space="preserve">
          <source>For a complete list of options, see &lt;a href=&quot;http://www.erlang.org/doc/man/compile.html#file-2&quot;&gt;&lt;code&gt;:compile.file/2&lt;/code&gt;&lt;/a&gt;. The option &lt;code&gt;:debug_info&lt;/code&gt; is always added to the end of it. You can disable that using:</source>
          <target state="translated">Para obtener una lista completa de opciones, consulte &lt;a href=&quot;http://www.erlang.org/doc/man/compile.html#file-2&quot;&gt; &lt;code&gt;:compile.file/2&lt;/code&gt; &lt;/a&gt; . La opci&amp;oacute;n &lt;code&gt;:debug_info&lt;/code&gt; siempre se agrega al final. Puede deshabilitar eso usando:</target>
        </trans-unit>
        <trans-unit id="40b1a5cb3bd304af286350dbfa2dd4e5a7bde159" translate="yes" xml:space="preserve">
          <source>For a complete list of options, see &lt;a href=&quot;http://www.erlang.org/doc/man/leex.html#file-2&quot;&gt;&lt;code&gt;:leex.file/2&lt;/code&gt;&lt;/a&gt;. Note that the &lt;code&gt;:report&lt;/code&gt;, &lt;code&gt;:return_errors&lt;/code&gt;, and &lt;code&gt;:return_warnings&lt;/code&gt; options are overridden by this compiler, thus setting them has no effect.</source>
          <target state="translated">Para obtener una lista completa de opciones, consulte &lt;a href=&quot;http://www.erlang.org/doc/man/leex.html#file-2&quot;&gt; &lt;code&gt;:leex.file/2&lt;/code&gt; &lt;/a&gt; . Tenga en cuenta que el &lt;code&gt;:report&lt;/code&gt; , &lt;code&gt;:return_errors&lt;/code&gt; , y &lt;code&gt;:return_warnings&lt;/code&gt; opciones son anulados por este compilador, estableciendo as&amp;iacute; ellos no tiene ning&amp;uacute;n efecto.</target>
        </trans-unit>
        <trans-unit id="3e1748b035236f7578aca77841e51909dcda09f3" translate="yes" xml:space="preserve">
          <source>For a complete list of options, see &lt;a href=&quot;http://www.erlang.org/doc/man/yecc.html#file-1&quot;&gt;&lt;code&gt;:yecc.file/1&lt;/code&gt;&lt;/a&gt;. Note that the &lt;code&gt;:report&lt;/code&gt;, &lt;code&gt;:return_errors&lt;/code&gt;, and &lt;code&gt;:return_warnings&lt;/code&gt; options are overridden by this compiler, thus setting them has no effect.</source>
          <target state="translated">Para obtener una lista completa de opciones, consulte &lt;a href=&quot;http://www.erlang.org/doc/man/yecc.html#file-1&quot;&gt; &lt;code&gt;:yecc.file/1&lt;/code&gt; &lt;/a&gt; . Tenga en cuenta que el &lt;code&gt;:report&lt;/code&gt; , &lt;code&gt;:return_errors&lt;/code&gt; , y &lt;code&gt;:return_warnings&lt;/code&gt; opciones son anulados por este compilador, estableciendo as&amp;iacute; ellos no tiene ning&amp;uacute;n efecto.</target>
        </trans-unit>
        <trans-unit id="cbadcbaa533f681fcd43632a6b2da738e09b45d0" translate="yes" xml:space="preserve">
          <source>For a description of all options, see &lt;a href=&quot;#put_compiler_option/2&quot;&gt;&lt;code&gt;put_compiler_option/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Para obtener una descripci&amp;oacute;n de todas las opciones, consulte &lt;a href=&quot;#put_compiler_option/2&quot;&gt; &lt;code&gt;put_compiler_option/2&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5de5c09f365a342ca1f4adef5fcae8f98c944b89" translate="yes" xml:space="preserve">
          <source>For a detailed explanation it's worth reading the analysis in &lt;a href=&quot;http://www.erlang.org/doc/man/fprof.html#analysis&quot;&gt;Erlang/OTP documentation for fprof&lt;/a&gt;.</source>
          <target state="translated">Para obtener una explicaci&amp;oacute;n detallada, vale la pena leer el an&amp;aacute;lisis en la &lt;a href=&quot;http://www.erlang.org/doc/man/fprof.html#analysis&quot;&gt;documentaci&amp;oacute;n de Erlang / OTP para fprof&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b520e99e07d5ece73b44be8ccfff4f1b35fe3ab3" translate="yes" xml:space="preserve">
          <source>For a machine with 8 cores, the above will process 16 items instead of 10. The reason is that &lt;a href=&quot;#async_stream/5&quot;&gt;&lt;code&gt;async_stream/5&lt;/code&gt;&lt;/a&gt; always have 8 elements processing at once. So by the time &lt;a href=&quot;https://hexdocs.pm/elixir/Enum.html&quot;&gt;&lt;code&gt;Enum&lt;/code&gt;&lt;/a&gt; says it got all elements it needed, there are still 6 elements left to be processed.</source>
          <target state="translated">Para una m&amp;aacute;quina con 8 n&amp;uacute;cleos, lo anterior procesar&amp;aacute; 16 elementos en lugar de 10. La raz&amp;oacute;n es que &lt;a href=&quot;#async_stream/5&quot;&gt; &lt;code&gt;async_stream/5&lt;/code&gt; &lt;/a&gt; siempre tiene 8 elementos procesados ​​a la vez. Entonces, para cuando &lt;a href=&quot;https://hexdocs.pm/elixir/Enum.html&quot;&gt; &lt;code&gt;Enum&lt;/code&gt; &lt;/a&gt; dice que obtuvo todos los elementos que necesitaba, todav&amp;iacute;a quedan 6 elementos por procesar.</target>
        </trans-unit>
        <trans-unit id="455bca35994e1d4d5c63a42b082bcc28685c8fab" translate="yes" xml:space="preserve">
          <source>For a more complete rundown on the VM support for different times, see the &lt;a href=&quot;http://www.erlang.org/doc/apps/erts/time_correction.html&quot;&gt;chapter on time and time correction&lt;/a&gt; in the Erlang docs.</source>
          <target state="translated">Para obtener un resumen m&amp;aacute;s completo del soporte de VM para diferentes momentos, consulte el &lt;a href=&quot;http://www.erlang.org/doc/apps/erts/time_correction.html&quot;&gt;cap&amp;iacute;tulo sobre tiempo y correcci&amp;oacute;n de tiempo&lt;/a&gt; en los documentos de Erlang.</target>
        </trans-unit>
        <trans-unit id="2ad3bd05a62d0ba912c71da5b141b89b54b65bc7" translate="yes" xml:space="preserve">
          <source>For a more complete understanding of the exit reasons and their impact, see the &quot;Exit reasons and restarts&quot; section.</source>
          <target state="translated">Para una comprensión más completa de las razones de la salida y su impacto,véase la sección &quot;Razones de la salida y los reinicios&quot;.</target>
        </trans-unit>
        <trans-unit id="28d7d5e1dc06aba969a0b236e650a8f1ae4054d6" translate="yes" xml:space="preserve">
          <source>For a more in-depth explanation, please read the &quot;Shutdown values (:shutdown)&quot; section in the &lt;a href=&quot;https://hexdocs.pm/elixir/Supervisor.html&quot;&gt;&lt;code&gt;Supervisor&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">Para obtener una explicaci&amp;oacute;n m&amp;aacute;s detallada, lea la secci&amp;oacute;n &quot;Valores de apagado (: apagado)&quot; en el m&amp;oacute;dulo &lt;a href=&quot;https://hexdocs.pm/elixir/Supervisor.html&quot;&gt; &lt;code&gt;Supervisor&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="282328027889720b4154eca4c4806b544bc3a754" translate="yes" xml:space="preserve">
          <source>For a more in-depth explanation, please read the &quot;Shutdown values (:shutdown)&quot; section in the &lt;a href=&quot;supervisor&quot;&gt;&lt;code&gt;Supervisor&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">Para obtener una explicaci&amp;oacute;n m&amp;aacute;s detallada, lea la secci&amp;oacute;n &quot;Valores de apagado (: apagado)&quot; en el m&amp;oacute;dulo &lt;a href=&quot;supervisor&quot;&gt; &lt;code&gt;Supervisor&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="37b344bcdc0c7b8779f65785a14e8c7aa3e5ded0" translate="yes" xml:space="preserve">
          <source>For accessing atom keys, one may also &lt;code&gt;map.key&lt;/code&gt;. Note that while &lt;code&gt;map[key]&lt;/code&gt; will return &lt;code&gt;nil&lt;/code&gt; if &lt;code&gt;map&lt;/code&gt; doesn't contain &lt;code&gt;key&lt;/code&gt;, &lt;code&gt;map.key&lt;/code&gt; will raise if &lt;code&gt;map&lt;/code&gt; doesn't contain the key &lt;code&gt;:key&lt;/code&gt;.</source>
          <target state="translated">Para acceder a las claves atom, tambi&amp;eacute;n se puede &lt;code&gt;map.key&lt;/code&gt; . Tenga en cuenta que mientras &lt;code&gt;map[key]&lt;/code&gt; devolver&amp;aacute; &lt;code&gt;nil&lt;/code&gt; si el &lt;code&gt;map&lt;/code&gt; a no contiene la &lt;code&gt;key&lt;/code&gt; , &lt;code&gt;map.key&lt;/code&gt; aumentar&amp;aacute; si el &lt;code&gt;map&lt;/code&gt; a no contiene la clave &lt;code&gt;:key&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="57b9d70004f10cc3b53d8d1fb3e515752a611d21" translate="yes" xml:space="preserve">
          <source>For all other time zones, it returns &lt;code&gt;{:error, :utc_only_time_zone_database}&lt;/code&gt;.</source>
          <target state="translated">Para todas las dem&amp;aacute;s zonas horarias, devuelve &lt;code&gt;{:error, :utc_only_time_zone_database}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f912dfac4d0836d413b5ac057a2a5efa533103ff" translate="yes" xml:space="preserve">
          <source>For all remaining scenarios, libraries should not force their users to use the application environment for configuration. If the user of a library believes that certain parameter should be configured globally, then they can wrap the library functionality with their own application environment configuration.</source>
          <target state="translated">En todos los demás escenarios,las bibliotecas no deberían obligar a sus usuarios a utilizar el entorno de la aplicación para la configuración.Si el usuario de una biblioteca cree que ciertos parámetros deben ser configurados globalmente,entonces puede envolver la funcionalidad de la biblioteca con su propia configuración del entorno de aplicación.</target>
        </trans-unit>
        <trans-unit id="5c0878fd6cedf49cadfbc1ce37dc2efcc64e9280" translate="yes" xml:space="preserve">
          <source>For anonymous functions, there is also information about any of the atoms &lt;code&gt;:index&lt;/code&gt;, &lt;code&gt;:new_index&lt;/code&gt;, &lt;code&gt;:new_uniq&lt;/code&gt;, &lt;code&gt;:uniq&lt;/code&gt;, and &lt;code&gt;:pid&lt;/code&gt;. For a named function, the value of any of these items is always the atom &lt;code&gt;:undefined&lt;/code&gt;.</source>
          <target state="translated">Para funciones an&amp;oacute;nimas, tambi&amp;eacute;n hay informaci&amp;oacute;n sobre cualquiera de los &amp;aacute;tomos &lt;code&gt;:index&lt;/code&gt; , &lt;code&gt;:new_index&lt;/code&gt; , &lt;code&gt;:new_uniq&lt;/code&gt; , &lt;code&gt;:uniq&lt;/code&gt; , y &lt;code&gt;:pid&lt;/code&gt; . Para una funci&amp;oacute;n con nombre, el valor de cualquiera de estos elementos es siempre el &amp;aacute;tomo &lt;code&gt;:undefined&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4b4ad9d30cceadfeb05cba1ddc74ec23c371587e" translate="yes" xml:space="preserve">
          <source>For any function, the information asked for can be any of the atoms &lt;code&gt;:module&lt;/code&gt;, &lt;code&gt;:name&lt;/code&gt;, &lt;code&gt;:arity&lt;/code&gt;, &lt;code&gt;:env&lt;/code&gt;, or &lt;code&gt;:type&lt;/code&gt;.</source>
          <target state="translated">Para cualquier funci&amp;oacute;n, la informaci&amp;oacute;n solicitada puede ser cualquiera de los &amp;aacute;tomos &lt;code&gt;:module&lt;/code&gt; , &lt;code&gt;:name&lt;/code&gt; , &lt;code&gt;:arity&lt;/code&gt; , &lt;code&gt;:env&lt;/code&gt; , o &lt;code&gt;:type&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="19051a75616b4ec98796f8226da734aa9dd4e72d" translate="yes" xml:space="preserve">
          <source>For binaries, the default is the size of the binary. Only the last binary in a match can use the default size. All others must have their size specified explicitly, even if the match is unambiguous. For example:</source>
          <target state="translated">Para los binarios,el valor por defecto es el tamaño del binario.Sólo el último binario de un partido puede usar el tamaño por defecto.Todos los demás deben tener su tamaño especificado explícitamente,incluso si la coincidencia es inequívoca.Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="b53d094e78539531bab25286f248fcbe76cc3712" translate="yes" xml:space="preserve">
          <source>For cases like the one above, &lt;a href=&quot;https://hexdocs.pm/elixir/Task.html#async/1&quot;&gt;&lt;code&gt;Task.async/1&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://hexdocs.pm/elixir/Task.html#await/2&quot;&gt;&lt;code&gt;Task.await/2&lt;/code&gt;&lt;/a&gt; are preferred.</source>
          <target state="translated">Para casos como el anterior, se &lt;a href=&quot;https://hexdocs.pm/elixir/Task.html#async/1&quot;&gt; &lt;code&gt;Task.async/1&lt;/code&gt; &lt;/a&gt; y &lt;a href=&quot;https://hexdocs.pm/elixir/Task.html#await/2&quot;&gt; &lt;code&gt;Task.await/2&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="bee446e092800012625413c21226bed4c6f88b01" translate="yes" xml:space="preserve">
          <source>For cases like the one above, &lt;a href=&quot;task#async/1&quot;&gt;&lt;code&gt;Task.async/1&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;task#await/2&quot;&gt;&lt;code&gt;Task.await/2&lt;/code&gt;&lt;/a&gt; are preferred.</source>
          <target state="translated">Para casos como el anterior, se &lt;a href=&quot;task#async/1&quot;&gt; &lt;code&gt;Task.async/1&lt;/code&gt; &lt;/a&gt; y &lt;a href=&quot;task#await/2&quot;&gt; &lt;code&gt;Task.await/2&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4bcf46e59d6f52359a868d6e88a0b7c5725001a1" translate="yes" xml:space="preserve">
          <source>For companies and teams, we recommend developers to run &lt;code&gt;mix format --check-formatted&lt;/code&gt; on their continuous integration servers, ensuring all current and future code follows the standard.</source>
          <target state="translated">Para las empresas y los equipos, recomendamos a los desarrolladores que ejecuten un &lt;code&gt;mix format --check-formatted&lt;/code&gt; en sus servidores de integraci&amp;oacute;n continua, asegurando que todo el c&amp;oacute;digo actual y futuro siga el est&amp;aacute;ndar.</target>
        </trans-unit>
        <trans-unit id="57326dd8df98d78d81aebf773cf3bf48a345cefe" translate="yes" xml:space="preserve">
          <source>For compiling many files concurrently, see &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.ParallelCompiler.html#compile/2&quot;&gt;&lt;code&gt;Kernel.ParallelCompiler.compile/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Para compilar muchos archivos al mismo tiempo, consulte &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.ParallelCompiler.html#compile/2&quot;&gt; &lt;code&gt;Kernel.ParallelCompiler.compile/2&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5b735130a48640def7fafe41aafe71355bd32d99" translate="yes" xml:space="preserve">
          <source>For compiling many files concurrently, see &lt;a href=&quot;kernel.parallelcompiler#compile/2&quot;&gt;&lt;code&gt;Kernel.ParallelCompiler.compile/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Para compilar muchos archivos al mismo tiempo, consulte &lt;a href=&quot;kernel.parallelcompiler#compile/2&quot;&gt; &lt;code&gt;Kernel.ParallelCompiler.compile/2&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="22400dc268fe8a7d24bf1a85c2d093a54cf84f6d" translate="yes" xml:space="preserve">
          <source>For convenience, consider adding &lt;code&gt;~/.mix/escripts&lt;/code&gt; directory to your &lt;code&gt;PATH&lt;/code&gt; environment variable. For more information, check the wikipedia article on PATH: &lt;a href=&quot;https://en.wikipedia.org/wiki/PATH_(variable)&quot;&gt;https://en.wikipedia.org/wiki/PATH_(variable)&lt;/a&gt;</source>
          <target state="translated">Para mayor comodidad, considere agregar el directorio &lt;code&gt;~/.mix/escripts&lt;/code&gt; a su &lt;code&gt;PATH&lt;/code&gt; entorno PATH . Para obtener m&amp;aacute;s informaci&amp;oacute;n, consulte el art&amp;iacute;culo de wikipedia sobre PATH: &lt;a href=&quot;https://en.wikipedia.org/wiki/PATH_(variable)&quot;&gt;https://en.wikipedia.org/wiki/PATH_(variable)&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dfd371e570b65e572a1bfac8fa45fb1789e4dcde" translate="yes" xml:space="preserve">
          <source>For convenience, you can pass &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.SpecialForms.html#__ENV__/0&quot;&gt;&lt;code&gt;__ENV__/0&lt;/code&gt;&lt;/a&gt; as the &lt;code&gt;opts&lt;/code&gt; argument and all imports, requires and aliases defined in the current environment will be automatically carried over:</source>
          <target state="translated">Para mayor comodidad, puede pasar &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.SpecialForms.html#__ENV__/0&quot;&gt; &lt;code&gt;__ENV__/0&lt;/code&gt; &lt;/a&gt; como el &lt;code&gt;opts&lt;/code&gt; argumentos y todas las importaciones, y requiere alias definidos en el entorno actual se llevar&amp;aacute;n autom&amp;aacute;ticamente a trav&amp;eacute;s de:</target>
        </trans-unit>
        <trans-unit id="d8d23e5be0a4ca18d043f1de42dd2f9c986db30d" translate="yes" xml:space="preserve">
          <source>For convenience, you can pass &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.SpecialForms.html#__ENV__/0&quot;&gt;&lt;code&gt;__ENV__/0&lt;/code&gt;&lt;/a&gt; as the &lt;code&gt;opts&lt;/code&gt; argument and all options will be automatically extracted from the current environment:</source>
          <target state="translated">Para mayor comodidad, puede pasar &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.SpecialForms.html#__ENV__/0&quot;&gt; &lt;code&gt;__ENV__/0&lt;/code&gt; &lt;/a&gt; como el &lt;code&gt;opts&lt;/code&gt; argumento y todas las opciones se extraer&amp;aacute;n autom&amp;aacute;ticamente desde el entorno actual:</target>
        </trans-unit>
        <trans-unit id="fc1c26fa0cb08e8439005305225bde72db303603" translate="yes" xml:space="preserve">
          <source>For convenience, you can pass &lt;a href=&quot;kernel.specialforms#__ENV__/0&quot;&gt;&lt;code&gt;__ENV__/0&lt;/code&gt;&lt;/a&gt; as the &lt;code&gt;opts&lt;/code&gt; argument and all imports, requires and aliases defined in the current environment will be automatically carried over:</source>
          <target state="translated">Para mayor comodidad, puede pasar &lt;a href=&quot;kernel.specialforms#__ENV__/0&quot;&gt; &lt;code&gt;__ENV__/0&lt;/code&gt; &lt;/a&gt; como el &lt;code&gt;opts&lt;/code&gt; argumentos y todas las importaciones, y requiere alias definidos en el entorno actual se llevar&amp;aacute;n autom&amp;aacute;ticamente a trav&amp;eacute;s de:</target>
        </trans-unit>
        <trans-unit id="98082b67d38ae575b213c7f51ae3f6f67492121c" translate="yes" xml:space="preserve">
          <source>For convenience, you can pass &lt;a href=&quot;kernel.specialforms#__ENV__/0&quot;&gt;&lt;code&gt;__ENV__/0&lt;/code&gt;&lt;/a&gt; as the &lt;code&gt;opts&lt;/code&gt; argument and all options will be automatically extracted from the current environment:</source>
          <target state="translated">Para mayor comodidad, puede pasar &lt;a href=&quot;kernel.specialforms#__ENV__/0&quot;&gt; &lt;code&gt;__ENV__/0&lt;/code&gt; &lt;/a&gt; como el &lt;code&gt;opts&lt;/code&gt; argumento y todas las opciones se extraer&amp;aacute;n autom&amp;aacute;ticamente desde el entorno actual:</target>
        </trans-unit>
        <trans-unit id="44989465a60239ad9d5198d147baa434ebc38464" translate="yes" xml:space="preserve">
          <source>For convenience, you can pass any &lt;a href=&quot;https://hexdocs.pm/elixir/Macro.Env.html&quot;&gt;&lt;code&gt;Macro.Env&lt;/code&gt;&lt;/a&gt; struct, such as &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.SpecialForms.html#__ENV__/0&quot;&gt;&lt;code&gt;__ENV__/0&lt;/code&gt;&lt;/a&gt;, as the first argument or as options. Both the module and all options will be automatically extracted from the environment:</source>
          <target state="translated">Para mayor comodidad, puede pasar cualquier estructura &lt;a href=&quot;https://hexdocs.pm/elixir/Macro.Env.html&quot;&gt; &lt;code&gt;Macro.Env&lt;/code&gt; &lt;/a&gt; , como &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.SpecialForms.html#__ENV__/0&quot;&gt; &lt;code&gt;__ENV__/0&lt;/code&gt; &lt;/a&gt; , como primer argumento o como opciones. Tanto el m&amp;oacute;dulo como todas las opciones se extraer&amp;aacute;n autom&amp;aacute;ticamente del entorno:</target>
        </trans-unit>
        <trans-unit id="54af569b6a029610c5091d98fd6f8fdc1073fe13" translate="yes" xml:space="preserve">
          <source>For convenience, you can pass any &lt;a href=&quot;macro.env&quot;&gt;&lt;code&gt;Macro.Env&lt;/code&gt;&lt;/a&gt; struct, such as &lt;a href=&quot;kernel.specialforms#__ENV__/0&quot;&gt;&lt;code&gt;__ENV__/0&lt;/code&gt;&lt;/a&gt;, as the first argument or as options. Both the module and all options will be automatically extracted from the environment:</source>
          <target state="translated">Para mayor comodidad, puede pasar cualquier estructura &lt;a href=&quot;macro.env&quot;&gt; &lt;code&gt;Macro.Env&lt;/code&gt; &lt;/a&gt; , como &lt;a href=&quot;kernel.specialforms#__ENV__/0&quot;&gt; &lt;code&gt;__ENV__/0&lt;/code&gt; &lt;/a&gt; , como primer argumento o como opciones. Tanto el m&amp;oacute;dulo como todas las opciones se extraer&amp;aacute;n autom&amp;aacute;ticamente del entorno:</target>
        </trans-unit>
        <trans-unit id="74cba56f60db3c6914d9e9b93e9bb138f70a33f1" translate="yes" xml:space="preserve">
          <source>For converting a binary to a different encoding and for Unicode normalization mechanisms, see Erlang's &lt;code&gt;:unicode&lt;/code&gt; module.</source>
          <target state="translated">Para convertir un binario a una codificaci&amp;oacute;n diferente y para los mecanismos de normalizaci&amp;oacute;n Unicode, consulte el m&amp;oacute;dulo &lt;code&gt;:unicode&lt;/code&gt; Erlang .</target>
        </trans-unit>
        <trans-unit id="6add89b99abcbf70ca9badb7516b8595c553f524" translate="yes" xml:space="preserve">
          <source>For debugging complex systems, jumping at the code is not enough. It is necessary to have an understanding of the whole virtual machine, processes, applications, as well as set up tracing mechanisms. Luckily this can be achieved in Erlang with &lt;code&gt;:observer&lt;/code&gt;. In your application:</source>
          <target state="translated">Para depurar sistemas complejos, saltar al c&amp;oacute;digo no es suficiente. Es necesario comprender toda la m&amp;aacute;quina virtual, los procesos y las aplicaciones, as&amp;iacute; como configurar los mecanismos de seguimiento. Afortunadamente, esto se puede lograr en Erlang con &lt;code&gt;:observer&lt;/code&gt; . En su aplicaci&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="5a06afd6a1e3c7ee6cdc0611f593f11b1bb1243b" translate="yes" xml:space="preserve">
          <source>For defining your own guards, Elixir even provides conveniences in &lt;code&gt;defguard&lt;/code&gt; and &lt;code&gt;defguardp&lt;/code&gt;. Let's look at a quick case study: we want to check whether an argument is an even or an odd integer. With pattern matching this is impossible because there is an infinite number of integers, and therefore we can't pattern match on every single one of them. Therefore we must use guards. We will just focus on checking for even numbers since checking for the odd ones is almost identical.</source>
          <target state="translated">Para definir tus propios guardias, Elixir incluso brinda comodidades para &lt;code&gt;defguard&lt;/code&gt; y &lt;code&gt;defguardp&lt;/code&gt; . Veamos un caso de estudio r&amp;aacute;pido: queremos comprobar si un argumento es un n&amp;uacute;mero entero par o impar. Con la coincidencia de patrones, esto es imposible porque hay un n&amp;uacute;mero infinito de enteros y, por lo tanto, no podemos realizar una coincidencia de patrones en cada uno de ellos. Por eso debemos usar guardias. Solo nos enfocaremos en verificar los n&amp;uacute;meros pares, ya que verificar los impares es casi id&amp;eacute;ntico.</target>
        </trans-unit>
        <trans-unit id="cb347f81732d219e27a511b076553d17de737f2a" translate="yes" xml:space="preserve">
          <source>For detailed documentation, see the &lt;a href=&quot;typespecs&quot;&gt;typespec documentation&lt;/a&gt;.</source>
          <target state="translated">Para obtener documentaci&amp;oacute;n detallada, consulte la &lt;a href=&quot;typespecs&quot;&gt;documentaci&amp;oacute;n de typepec&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c3a098e863f08842ff154a18684a91f2e51c3a25" translate="yes" xml:space="preserve">
          <source>For detailed documentation, see the &lt;a href=&quot;typespecs#behaviours&quot;&gt;behaviour typespec documentation&lt;/a&gt;.</source>
          <target state="translated">Para obtener documentaci&amp;oacute;n detallada, consulte la &lt;a href=&quot;typespecs#behaviours&quot;&gt;documentaci&amp;oacute;n de la especificaci&amp;oacute;n de tipos de comportamiento&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="312205920e8b42c10300fdc1c0d355fb769ce4d0" translate="yes" xml:space="preserve">
          <source>For details about code points and graphemes, see the &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; module documentation.</source>
          <target state="translated">Para obtener detalles sobre los puntos de c&amp;oacute;digo y los grafemas, consulte la documentaci&amp;oacute;n del m&amp;oacute;dulo &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0f4a8cd91cf5db5cd126fba13df45a267644abde" translate="yes" xml:space="preserve">
          <source>For duplicate registries:</source>
          <target state="translated">Para los registros duplicados:</target>
        </trans-unit>
        <trans-unit id="72d0f0434fbcec9eb207f396a9fc529d7587b375" translate="yes" xml:space="preserve">
          <source>For dynamically logging messages, see &lt;a href=&quot;#bare_log/3&quot;&gt;&lt;code&gt;bare_log/3&lt;/code&gt;&lt;/a&gt;. But note that &lt;a href=&quot;#bare_log/3&quot;&gt;&lt;code&gt;bare_log/3&lt;/code&gt;&lt;/a&gt; always evaluates its arguments (unless the argument is an anonymous function).</source>
          <target state="translated">Para registrar mensajes de forma din&amp;aacute;mica, consulte &lt;a href=&quot;#bare_log/3&quot;&gt; &lt;code&gt;bare_log/3&lt;/code&gt; &lt;/a&gt; . Pero tenga en cuenta que &lt;a href=&quot;#bare_log/3&quot;&gt; &lt;code&gt;bare_log/3&lt;/code&gt; &lt;/a&gt; siempre eval&amp;uacute;a sus argumentos (a menos que el argumento sea una funci&amp;oacute;n an&amp;oacute;nima).</target>
        </trans-unit>
        <trans-unit id="1a7f7d68ad358e0a245cd7d3ae221748af013919" translate="yes" xml:space="preserve">
          <source>For each failure, ExUnit prints a detailed report, containing the test name with the test case, the code that failed and the values for the left side and right side (rhs) of the &lt;code&gt;==&lt;/code&gt; operator.</source>
          <target state="translated">Para cada falla, ExUnit imprime un informe detallado, que contiene el nombre de la prueba con el caso de prueba, el c&amp;oacute;digo que fall&amp;oacute; y los valores para el lado izquierdo y derecho (rhs) del operador &lt;code&gt;==&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9e3caa2dc1d9000c1cebb47a719b8e0066b5bd2d" translate="yes" xml:space="preserve">
          <source>For each protocol in the &lt;code&gt;@derive&lt;/code&gt; list, Elixir will assert the protocol has been implemented for &lt;code&gt;Any&lt;/code&gt;. If the &lt;code&gt;Any&lt;/code&gt; implementation defines a &lt;code&gt;__deriving__/3&lt;/code&gt; callback, the callback will be invoked and it should define the implementation module. Otherwise an implementation that simply points to the &lt;code&gt;Any&lt;/code&gt; implementation is automatically derived. For more information on the &lt;code&gt;__deriving__/3&lt;/code&gt; callback, see &lt;a href=&quot;https://hexdocs.pm/elixir/Protocol.html#derive/3&quot;&gt;&lt;code&gt;Protocol.derive/3&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Para cada protocolo en la lista &lt;code&gt;@derive&lt;/code&gt; , Elixir afirmar&amp;aacute; que el protocolo se ha implementado para &lt;code&gt;Any&lt;/code&gt; . Si la implementaci&amp;oacute;n &lt;code&gt;Any&lt;/code&gt; define una devoluci&amp;oacute;n &lt;code&gt;__deriving__/3&lt;/code&gt; llamada __deriving __ / 3 , la devoluci&amp;oacute;n de llamada ser&amp;aacute; invocada y deber&amp;iacute;a definir el m&amp;oacute;dulo de implementaci&amp;oacute;n. De lo contrario, una implementaci&amp;oacute;n que simplemente apunta a la implementaci&amp;oacute;n &lt;code&gt;Any&lt;/code&gt; se deriva autom&amp;aacute;ticamente. Para obtener m&amp;aacute;s informaci&amp;oacute;n sobre la devoluci&amp;oacute;n &lt;code&gt;__deriving__/3&lt;/code&gt; llamada __deriving __ / 3 , consulte &lt;a href=&quot;https://hexdocs.pm/elixir/Protocol.html#derive/3&quot;&gt; &lt;code&gt;Protocol.derive/3&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e0fb1546f77232688d241d37ca1d325018f6f776" translate="yes" xml:space="preserve">
          <source>For each protocol in the &lt;code&gt;@derive&lt;/code&gt; list, Elixir will assert the protocol has been implemented for &lt;code&gt;Any&lt;/code&gt;. If the &lt;code&gt;Any&lt;/code&gt; implementation defines a &lt;code&gt;__deriving__/3&lt;/code&gt; callback, the callback will be invoked and it should define the implementation module. Otherwise an implementation that simply points to the &lt;code&gt;Any&lt;/code&gt; implementation is automatically derived. For more information on the &lt;code&gt;__deriving__/3&lt;/code&gt; callback, see &lt;a href=&quot;protocol#derive/3&quot;&gt;&lt;code&gt;Protocol.derive/3&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Para cada protocolo en la lista &lt;code&gt;@derive&lt;/code&gt; , Elixir afirmar&amp;aacute; que el protocolo se ha implementado para &lt;code&gt;Any&lt;/code&gt; . Si la implementaci&amp;oacute;n &lt;code&gt;Any&lt;/code&gt; define una devoluci&amp;oacute;n &lt;code&gt;__deriving__/3&lt;/code&gt; llamada __deriving __ / 3 , la devoluci&amp;oacute;n de llamada ser&amp;aacute; invocada y deber&amp;iacute;a definir el m&amp;oacute;dulo de implementaci&amp;oacute;n. De lo contrario, una implementaci&amp;oacute;n que simplemente apunta a la implementaci&amp;oacute;n &lt;code&gt;Any&lt;/code&gt; se deriva autom&amp;aacute;ticamente. Para obtener m&amp;aacute;s informaci&amp;oacute;n sobre la devoluci&amp;oacute;n &lt;code&gt;__deriving__/3&lt;/code&gt; llamada __deriving __ / 3 , consulte &lt;a href=&quot;protocol#derive/3&quot;&gt; &lt;code&gt;Protocol.derive/3&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="25c946451972c973e2251bc9392dd413447e547a" translate="yes" xml:space="preserve">
          <source>For example, &lt;a href=&quot;#length/1&quot;&gt;&lt;code&gt;String.length/1&lt;/code&gt;&lt;/a&gt; will take longer as the input grows. On the other hand, &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#byte_size/1&quot;&gt;&lt;code&gt;Kernel.byte_size/1&lt;/code&gt;&lt;/a&gt; always runs in constant time (i.e. regardless of the input size).</source>
          <target state="translated">Por ejemplo, &lt;a href=&quot;#length/1&quot;&gt; &lt;code&gt;String.length/1&lt;/code&gt; &lt;/a&gt; tardar&amp;aacute; m&amp;aacute;s a medida que crece la entrada. Por otro lado, &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#byte_size/1&quot;&gt; &lt;code&gt;Kernel.byte_size/1&lt;/code&gt; &lt;/a&gt; siempre se ejecuta en tiempo constante (es decir, independientemente del tama&amp;ntilde;o de entrada).</target>
        </trans-unit>
        <trans-unit id="1ce575e007b24aad8c7c6a66939213cc21ace30a" translate="yes" xml:space="preserve">
          <source>For example, &lt;a href=&quot;https://github.com/elixir-lang/ecto&quot;&gt;the Ecto library&lt;/a&gt; makes use of these features to provide an elegant DSL for writing database queries:</source>
          <target state="translated">Por ejemplo, &lt;a href=&quot;https://github.com/elixir-lang/ecto&quot;&gt;la biblioteca Ecto&lt;/a&gt; hace uso de estas caracter&amp;iacute;sticas para proporcionar un DSL elegante para escribir consultas de bases de datos:</target>
        </trans-unit>
        <trans-unit id="72de0d4d0cc3d700aee14fc5035d60936c6b125d" translate="yes" xml:space="preserve">
          <source>For example, &lt;a href=&quot;keyword#get/3&quot;&gt;&lt;code&gt;Keyword.get/3&lt;/code&gt;&lt;/a&gt; will get the first entry matching the given key, regardless if duplicated entries exist. Similarly, &lt;a href=&quot;keyword#put/3&quot;&gt;&lt;code&gt;Keyword.put/3&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;keyword#delete/3&quot;&gt;&lt;code&gt;Keyword.delete/3&lt;/code&gt;&lt;/a&gt; ensure all duplicated entries for a given key are removed when invoked. Note that operations that require keys to be found in the keyword list (like &lt;a href=&quot;keyword#get/3&quot;&gt;&lt;code&gt;Keyword.get/3&lt;/code&gt;&lt;/a&gt;) need to traverse the list in order to find keys, so these operations may be slower than their map counterparts.</source>
          <target state="translated">Por ejemplo, &lt;a href=&quot;keyword#get/3&quot;&gt; &lt;code&gt;Keyword.get/3&lt;/code&gt; &lt;/a&gt; obtendr&amp;aacute; la primera entrada que coincida con la clave dada, independientemente de si existen entradas duplicadas. De manera similar, &lt;a href=&quot;keyword#put/3&quot;&gt; &lt;code&gt;Keyword.put/3&lt;/code&gt; &lt;/a&gt; y &lt;a href=&quot;keyword#delete/3&quot;&gt; &lt;code&gt;Keyword.delete/3&lt;/code&gt; &lt;/a&gt; garantizan que todas las entradas duplicadas para una clave determinada se eliminen cuando se invocan. Tenga en cuenta que las operaciones que requieren que las claves se encuentren en la lista de palabras clave (como &lt;a href=&quot;keyword#get/3&quot;&gt; &lt;code&gt;Keyword.get/3&lt;/code&gt; &lt;/a&gt; ) necesitan recorrer la lista para encontrar claves, por lo que estas operaciones pueden ser m&amp;aacute;s lentas que sus contrapartes del mapa.</target>
        </trans-unit>
        <trans-unit id="0e6838c5c681ffb29b6c7310ee5d238a1c820319" translate="yes" xml:space="preserve">
          <source>For example, &lt;a href=&quot;string#length/1&quot;&gt;&lt;code&gt;String.length/1&lt;/code&gt;&lt;/a&gt; will take longer as the input grows. On the other hand, &lt;a href=&quot;kernel#byte_size/1&quot;&gt;&lt;code&gt;Kernel.byte_size/1&lt;/code&gt;&lt;/a&gt; always runs in constant time (i.e. regardless of the input size).</source>
          <target state="translated">Por ejemplo, &lt;a href=&quot;string#length/1&quot;&gt; &lt;code&gt;String.length/1&lt;/code&gt; &lt;/a&gt; tardar&amp;aacute; m&amp;aacute;s a medida que crece la entrada. Por otro lado, &lt;a href=&quot;kernel#byte_size/1&quot;&gt; &lt;code&gt;Kernel.byte_size/1&lt;/code&gt; &lt;/a&gt; siempre se ejecuta en tiempo constante (es decir, independientemente del tama&amp;ntilde;o de entrada).</target>
        </trans-unit>
        <trans-unit id="26266e605a5c6ee91c1509624141ef8292746ecc" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;:info&lt;/code&gt; takes precedence over &lt;code&gt;:debug&lt;/code&gt;. If your log level is set to &lt;code&gt;:info&lt;/code&gt; then all &lt;code&gt;:info&lt;/code&gt;, &lt;code&gt;:notice&lt;/code&gt; and above will be passed to backends. If your log level is set to &lt;code&gt;:alert&lt;/code&gt;, only &lt;code&gt;:alert&lt;/code&gt; and &lt;code&gt;:emergency&lt;/code&gt; will be printed.</source>
          <target state="translated">Por ejemplo &lt;code&gt;:info&lt;/code&gt; tiene prioridad sobre &lt;code&gt;:debug&lt;/code&gt; . Si su nivel de registro se establece en &lt;code&gt;:info&lt;/code&gt; rmaci&amp;oacute;n entonces todo &lt;code&gt;:info&lt;/code&gt; rmaci&amp;oacute;n , &lt;code&gt;:notice&lt;/code&gt; y por encima se pasa al backend. Si su nivel de registro est&amp;aacute; configurado en &lt;code&gt;:alert&lt;/code&gt; a , solo se imprimir&amp;aacute;n &lt;code&gt;:alert&lt;/code&gt; a y &lt;code&gt;:emergency&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c8c117e3a1a342b1f8160acdddadbc25ed7792af" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;:info&lt;/code&gt; takes precedence over &lt;code&gt;:debug&lt;/code&gt;. If your log level is set to &lt;code&gt;:info&lt;/code&gt;, &lt;code&gt;:info&lt;/code&gt;, &lt;code&gt;:warn&lt;/code&gt;, and &lt;code&gt;:error&lt;/code&gt; will be printed to the console. If your log level is set to &lt;code&gt;:warn&lt;/code&gt;, only &lt;code&gt;:warn&lt;/code&gt; and &lt;code&gt;:error&lt;/code&gt; will be printed.</source>
          <target state="translated">Por ejemplo &lt;code&gt;:info&lt;/code&gt; tiene prioridad sobre &lt;code&gt;:debug&lt;/code&gt; . Si su nivel de registro se establece en &lt;code&gt;:info&lt;/code&gt; rmaci&amp;oacute;n , &lt;code&gt;:info&lt;/code&gt; , &lt;code&gt;:warn&lt;/code&gt; , y &lt;code&gt;:error&lt;/code&gt; ser&amp;aacute; impreso en la consola. Si su nivel de registro est&amp;aacute; configurado en &lt;code&gt;:warn&lt;/code&gt; , solo se imprimir&amp;aacute;n &lt;code&gt;:warn&lt;/code&gt; y &lt;code&gt;:error&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="852751a1fe78b13274da6029c51675b7e90dcb56" translate="yes" xml:space="preserve">
          <source>For example, Nerves uses this function to force all dependencies to be reloaded after it updates the system environment. It goes roughly like this:</source>
          <target state="translated">Por ejemplo,Nerves utiliza esta función para forzar a que todas las dependencias se recarguen después de actualizar el entorno del sistema.Es más o menos así:</target>
        </trans-unit>
        <trans-unit id="4af1c4caff42157f9481064fecc0d437c1cbd415" translate="yes" xml:space="preserve">
          <source>For example, a bitstring generator can be used with the &lt;code&gt;:into&lt;/code&gt; option in order to easily remove all spaces in a string:</source>
          <target state="translated">Por ejemplo, se puede usar un generador de cadenas de bits con la opci&amp;oacute;n &lt;code&gt;:into&lt;/code&gt; para eliminar f&amp;aacute;cilmente todos los espacios en una cadena:</target>
        </trans-unit>
        <trans-unit id="e07fb9806a4d8ebf20cacc02e52f4a77448a86cc" translate="yes" xml:space="preserve">
          <source>For example, a value that is not meant to be used must be assigned to &lt;code&gt;_&lt;/code&gt; or to a variable starting with underscore:</source>
          <target state="translated">Por ejemplo, un valor que no est&amp;aacute; destinado a usarse debe asignarse a &lt;code&gt;_&lt;/code&gt; oa una variable que comience con un gui&amp;oacute;n bajo:</target>
        </trans-unit>
        <trans-unit id="4d8801f0d497391a5a53cac45037cd40a678af92" translate="yes" xml:space="preserve">
          <source>For example, although the code point &quot;&amp;eacute;&quot; is a single character, its underlying representation uses two bytes:</source>
          <target state="translated">Por ejemplo, aunque el punto de c&amp;oacute;digo &quot;&amp;eacute;&quot; es un solo car&amp;aacute;cter, su representaci&amp;oacute;n subyacente utiliza dos bytes:</target>
        </trans-unit>
        <trans-unit id="fc12bb8ea1c91096d68d9eef9815101e3f31bcef" translate="yes" xml:space="preserve">
          <source>For example, consider you have a project called &lt;code&gt;my_app&lt;/code&gt; that depends on another one called &lt;code&gt;my_dep&lt;/code&gt;. &lt;code&gt;my_dep&lt;/code&gt; wants to export some configuration, so &lt;code&gt;my_dep/.formatter.exs&lt;/code&gt; would look like this:</source>
          <target state="translated">Por ejemplo, considere que tiene un proyecto llamado &lt;code&gt;my_app&lt;/code&gt; que depende de otro llamado &lt;code&gt;my_dep&lt;/code&gt; . &lt;code&gt;my_dep&lt;/code&gt; quiere exportar alguna configuraci&amp;oacute;n, por lo que &lt;code&gt;my_dep/.formatter.exs&lt;/code&gt; se ver&amp;iacute;a as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="bafc7c87cc4324b3f378e1b55b1f860c335be286" translate="yes" xml:space="preserve">
          <source>For example, for the &lt;a href=&quot;enumerable&quot;&gt;&lt;code&gt;Enumerable&lt;/code&gt;&lt;/a&gt; protocol we have:</source>
          <target state="translated">Por ejemplo, para el protocolo &lt;a href=&quot;enumerable&quot;&gt; &lt;code&gt;Enumerable&lt;/code&gt; &lt;/a&gt; tenemos:</target>
        </trans-unit>
        <trans-unit id="d0a61e8f663dab72d666aa99d7d8392df6e2866f" translate="yes" xml:space="preserve">
          <source>For example, for the &lt;a href=&quot;https://hexdocs.pm/elixir/Enumerable.html&quot;&gt;&lt;code&gt;Enumerable&lt;/code&gt;&lt;/a&gt; protocol we have:</source>
          <target state="translated">Por ejemplo, para el protocolo &lt;a href=&quot;https://hexdocs.pm/elixir/Enumerable.html&quot;&gt; &lt;code&gt;Enumerable&lt;/code&gt; &lt;/a&gt; tenemos:</target>
        </trans-unit>
        <trans-unit id="10d10d9aafa7b7150f21f408c108aefffcb399e3" translate="yes" xml:space="preserve">
          <source>For example, for the &lt;code&gt;MyBehaviour&lt;/code&gt; module defined in &quot;Optional callbacks&quot; above:</source>
          <target state="translated">Por ejemplo, para el m&amp;oacute;dulo &lt;code&gt;MyBehaviour&lt;/code&gt; definido en &quot; Callbacks opcionales&quot; arriba:</target>
        </trans-unit>
        <trans-unit id="8cdbd82ecc31ecfa904887629dd77138df5f318e" translate="yes" xml:space="preserve">
          <source>For example, if the &lt;code&gt;args&lt;/code&gt; in the above &lt;code&gt;echo&lt;/code&gt; task were inspected, you might see something like this:</source>
          <target state="translated">Por ejemplo, si se inspeccionaron los &lt;code&gt;args&lt;/code&gt; de la tarea de &lt;code&gt;echo&lt;/code&gt; anterior , es posible que vea algo como esto:</target>
        </trans-unit>
        <trans-unit id="8306be9b21cc2aa72f1fd185081e1e544776e5ce" translate="yes" xml:space="preserve">
          <source>For example, if we want to use the &lt;code&gt;duplicate/2&lt;/code&gt; function from the &lt;code&gt;List&lt;/code&gt; module several times, we can import it:</source>
          <target state="translated">Por ejemplo, si queremos usar la funci&amp;oacute;n &lt;code&gt;duplicate/2&lt;/code&gt; del m&amp;oacute;dulo &lt;code&gt;List&lt;/code&gt; a varias veces, podemos importarla:</target>
        </trans-unit>
        <trans-unit id="9f456eb16f2bcd93d7684bd1cc3f45a1a1b9a12d" translate="yes" xml:space="preserve">
          <source>For example, if you are waiting for a process to perform some action, it is better to communicate the progress of such action with messages.</source>
          <target state="translated">Por ejemplo,si se está esperando un proceso para realizar alguna acción,es mejor comunicar el progreso de dicha acción con mensajes.</target>
        </trans-unit>
        <trans-unit id="dcc71fade44be2f0b07fe15278a544d60b766461" translate="yes" xml:space="preserve">
          <source>For example, if you expect the target system to have a config file in an absolute path, you can configure your &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Release.html&quot;&gt;&lt;code&gt;mix release&lt;/code&gt;&lt;/a&gt; as:</source>
          <target state="translated">Por ejemplo, si espera que el sistema de destino tenga un archivo de configuraci&amp;oacute;n en una ruta absoluta, puede configurar su &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Release.html&quot;&gt; &lt;code&gt;mix release&lt;/code&gt; &lt;/a&gt; como:</target>
        </trans-unit>
        <trans-unit id="d7c6d734ff451f6956c6aacbeccd9d4fdd938f74" translate="yes" xml:space="preserve">
          <source>For example, if you have a release named &lt;code&gt;demo&lt;/code&gt;, you can install the service and then start it from the release root as follows:</source>
          <target state="translated">Por ejemplo, si tiene una versi&amp;oacute;n llamada &lt;code&gt;demo&lt;/code&gt; , puede instalar el servicio y luego iniciarlo desde la ra&amp;iacute;z de la versi&amp;oacute;n de la siguiente manera:</target>
        </trans-unit>
        <trans-unit id="3fcebcea9fb6c7cf3c366b1c527f43067e4ff086" translate="yes" xml:space="preserve">
          <source>For example, if you push the &lt;code&gt;kv&lt;/code&gt; project to a Git repository, you&amp;rsquo;ll need to list it in your deps code in order to use it:</source>
          <target state="translated">Por ejemplo, si &lt;code&gt;kv&lt;/code&gt; proyecto kv a un repositorio de Git, deber&amp;aacute; incluirlo en el c&amp;oacute;digo de su departamento para poder usarlo:</target>
        </trans-unit>
        <trans-unit id="f3f65aca3ddc3c99d917b0c1b11f664e45fbabf4" translate="yes" xml:space="preserve">
          <source>For example, imagine a function that checks that the head of a list is not &lt;code&gt;nil&lt;/code&gt;:</source>
          <target state="translated">Por ejemplo, imagine una funci&amp;oacute;n que compruebe que el encabezado de una lista no sea &lt;code&gt;nil&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="aa3f335cc98a4af2b77268595737e5b7b1ed0489" translate="yes" xml:space="preserve">
          <source>For example, imagine that you have a binary with letters where you want to count how many times each lowercase letter happens, ignoring all uppercase ones. For instance, for the string &lt;code&gt;&quot;AbCabCABc&quot;&lt;/code&gt;, we want to return the map &lt;code&gt;%{&quot;a&quot; =&amp;gt; 1, &quot;b&quot; =&amp;gt; 2, &quot;c&quot; =&amp;gt; 1}&lt;/code&gt;.</source>
          <target state="translated">Por ejemplo, imagina que tienes un binario con letras donde quieres contar cu&amp;aacute;ntas veces ocurre cada letra min&amp;uacute;scula, ignorando todas las may&amp;uacute;sculas. Por ejemplo, para la cadena &lt;code&gt;&quot;AbCabCABc&quot;&lt;/code&gt; , queremos devolver el mapa &lt;code&gt;%{&quot;a&quot; =&amp;gt; 1, &quot;b&quot; =&amp;gt; 2, &quot;c&quot; =&amp;gt; 1}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c8f71ae8328569a71678b0be29a48fd915491141" translate="yes" xml:space="preserve">
          <source>For example, imagine the following configuration:</source>
          <target state="translated">Por ejemplo,imagina la siguiente configuración:</target>
        </trans-unit>
        <trans-unit id="92738f48db6bf8520616d3f910c86cb70b6a91a2" translate="yes" xml:space="preserve">
          <source>For example, imagine we want to implement a Validator module which provides a data validation domain-specific language. We could implement it using data structures, functions or macros. Let&amp;rsquo;s see what those different DSLs would look like:</source>
          <target state="translated">Por ejemplo, imagine que queremos implementar un m&amp;oacute;dulo Validator que proporciona un lenguaje espec&amp;iacute;fico de dominio de validaci&amp;oacute;n de datos. Podr&amp;iacute;amos implementarlo usando estructuras de datos, funciones o macros. Veamos c&amp;oacute;mo se ver&amp;iacute;an esos diferentes DSL:</target>
        </trans-unit>
        <trans-unit id="2ea959d5faa9cf257e82d7007ec084b4f335c593" translate="yes" xml:space="preserve">
          <source>For example, imagine you have a variable &lt;code&gt;number&lt;/code&gt; which contains the number you want to inject inside a quoted expression.</source>
          <target state="translated">Por ejemplo, imagina que tienes un &lt;code&gt;number&lt;/code&gt; variable que contiene el n&amp;uacute;mero que deseas inyectar dentro de una expresi&amp;oacute;n entre comillas.</target>
        </trans-unit>
        <trans-unit id="a2be4f8e8e8f8a802e09e5114bdae52f10f3c768" translate="yes" xml:space="preserve">
          <source>For example, imagine you have an API that receives a filename as a binary. At some point you will want to write to this file. You could have a function like this:</source>
          <target state="translated">Por ejemplo,imagina que tienes una API que recibe un nombre de archivo como binario.En algún momento querrás escribir en este archivo.Podrías tener una función como esta:</target>
        </trans-unit>
        <trans-unit id="36f70d74391e0cf5d436981e9565a03fd1f683a6" translate="yes" xml:space="preserve">
          <source>For example, imagine you need to load some configuration from a JSON file and load that into the system. Said configuration provider would look like:</source>
          <target state="translated">Por ejemplo,imagina que necesitas cargar alguna configuración de un archivo JSON y cargarla en el sistema.Dicho proveedor de configuración se vería como:</target>
        </trans-unit>
        <trans-unit id="e595982d4d16b2fed73877c7eb51c758ba09c9f8" translate="yes" xml:space="preserve">
          <source>For example, imagine your computer, router, printer, or whatever device is not working properly. How do you often fix it? By restarting it. Once we restart the device, we reset the device back to its initial state, which is well-tested and guaranteed to work. In Elixir, we apply this same approach to software: whenever a process crashes, we start a new process to perform the same job as the crashed process.</source>
          <target state="translated">Por ejemplo,imagina que tu ordenador,router,impresora o cualquier otro dispositivo no funciona correctamente.¿Cómo lo arreglas a menudo? Reiniciándolo.Una vez que reiniciamos el dispositivo,lo volvemos a poner en su estado inicial,que está bien probado y garantizado para funcionar.En Elixir,aplicamos este mismo enfoque al software:cada vez que un proceso se bloquea,iniciamos un nuevo proceso para realizar el mismo trabajo que el proceso que se ha bloqueado.</target>
        </trans-unit>
        <trans-unit id="700e114b8e70a0f80ebb6154d773287b9067f337" translate="yes" xml:space="preserve">
          <source>For example, imagine your computer, router, printer, or whatever device is not working properly. How often do you fix it by restarting it? Once we restart the device, we reset the device back to its initial state, which is well-tested and guaranteed to work. In Elixir, we apply this same approach to software: whenever a process crashes, we start a new process to perform the same job as the crashed process.</source>
          <target state="translated">Por ejemplo,imagina que tu ordenador,router,impresora o cualquier otro dispositivo no funciona correctamente.¿Con qué frecuencia lo arreglas reiniciándolo? Una vez que reiniciamos el dispositivo,lo volvemos a poner en su estado inicial,que está bien probado y garantizado para funcionar.En Elixir,aplicamos este mismo enfoque al software:cada vez que un proceso se bloquea,iniciamos un nuevo proceso para realizar el mismo trabajo que el proceso que se ha bloqueado.</target>
        </trans-unit>
        <trans-unit id="f3cd6f9b58acaa3e0524e83ef7217c631726de0e" translate="yes" xml:space="preserve">
          <source>For example, in &lt;code&gt;case&lt;/code&gt; and &lt;code&gt;cond&lt;/code&gt;:</source>
          <target state="translated">Por ejemplo, en &lt;code&gt;case&lt;/code&gt; y &lt;code&gt;cond&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="5132419edebfb5538ebf32de072ef747449be00a" translate="yes" xml:space="preserve">
          <source>For example, in order to write test cases using the &lt;a href=&quot;https://hexdocs.pm/ex_unit/ExUnit.html&quot;&gt;&lt;code&gt;ExUnit&lt;/code&gt;&lt;/a&gt; framework provided with Elixir, a developer should &lt;code&gt;use&lt;/code&gt; the &lt;a href=&quot;https://hexdocs.pm/ex_unit/ExUnit.Case.html&quot;&gt;&lt;code&gt;ExUnit.Case&lt;/code&gt;&lt;/a&gt; module:</source>
          <target state="translated">Por ejemplo, para escribir casos de prueba usando el marco &lt;a href=&quot;https://hexdocs.pm/ex_unit/ExUnit.html&quot;&gt; &lt;code&gt;ExUnit&lt;/code&gt; &lt;/a&gt; provisto con Elixir, un desarrollador debe &lt;code&gt;use&lt;/code&gt; el m&amp;oacute;dulo &lt;a href=&quot;https://hexdocs.pm/ex_unit/ExUnit.Case.html&quot;&gt; &lt;code&gt;ExUnit.Case&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="d7d72e926d93f3ca1c487388374604ee39ad35ad" translate="yes" xml:space="preserve">
          <source>For example, in order to write tests using the ExUnit framework, a developer should use the &lt;code&gt;ExUnit.Case&lt;/code&gt; module:</source>
          <target state="translated">Por ejemplo, para escribir pruebas usando el marco ExUnit, un desarrollador debe usar el m&amp;oacute;dulo &lt;code&gt;ExUnit.Case&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="3a8a1f3ca0f4f6e6f52cd5c38c70ee3321a7257d" translate="yes" xml:space="preserve">
          <source>For example, setting the mode &lt;code&gt;0o755&lt;/code&gt; gives it write, read and execute permission to the owner and both read and execute permission to group and others.</source>
          <target state="translated">Por ejemplo, configurar el modo &lt;code&gt;0o755&lt;/code&gt; le da permiso de escritura, lectura y ejecuci&amp;oacute;n al propietario y permiso de lectura y ejecuci&amp;oacute;n al grupo y a otros.</target>
        </trans-unit>
        <trans-unit id="aa476bb5aa4307e87b6892c3eef680e2a1027574" translate="yes" xml:space="preserve">
          <source>For example, someone using your application can override its &lt;code&gt;:redis_host&lt;/code&gt; environment variable as follows:</source>
          <target state="translated">Por ejemplo, alguien que use su aplicaci&amp;oacute;n puede anular su variable de entorno &lt;code&gt;:redis_host&lt;/code&gt; de la siguiente manera:</target>
        </trans-unit>
        <trans-unit id="c1f9245784df422bc589c02556ded2ebe4df04fc" translate="yes" xml:space="preserve">
          <source>For example, take a group document represented as &lt;code&gt;[1, 2, 3]&lt;/code&gt; where the space after every comma is a break. When the document above does not fit a single line, all breaks are enabled, causing the document to be rendered as:</source>
          <target state="translated">Por ejemplo, tome un documento de grupo representado como &lt;code&gt;[1, 2, 3]&lt;/code&gt; donde el espacio despu&amp;eacute;s de cada coma es un salto. Cuando el documento anterior no se ajusta a una sola l&amp;iacute;nea, se habilitan todos los saltos, lo que hace que el documento se represente como:</target>
        </trans-unit>
        <trans-unit id="5d84b09dd24eed2b37c8292a1e28d040806e59c5" translate="yes" xml:space="preserve">
          <source>For example, take the following &lt;code&gt;.iex.exs&lt;/code&gt; file:</source>
          <target state="translated">Por ejemplo, tome el siguiente archivo &lt;code&gt;.iex.exs&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="4d2ade3e7c04be9a767d2179941a1c0d02c356f6" translate="yes" xml:space="preserve">
          <source>For example, the &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#tuple_size/1&quot;&gt;&lt;code&gt;tuple_size/1&lt;/code&gt;&lt;/a&gt; function only works with tuples. If we use it with anything else, an argument error is raised:</source>
          <target state="translated">Por ejemplo, la funci&amp;oacute;n &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#tuple_size/1&quot;&gt; &lt;code&gt;tuple_size/1&lt;/code&gt; &lt;/a&gt; solo funciona con tuplas. Si lo usamos con cualquier otra cosa, se genera un error de argumento:</target>
        </trans-unit>
        <trans-unit id="f77c979642e1a9533effb1fde71896e71b2b1b38" translate="yes" xml:space="preserve">
          <source>For example, the &lt;a href=&quot;https://hexdocs.pm/elixir/Record.html&quot;&gt;&lt;code&gt;Record&lt;/code&gt;&lt;/a&gt; module in Elixir provides a series of macros to be used in patterns and guards that allows tuples to have named fields during compilation.</source>
          <target state="translated">Por ejemplo, el m&amp;oacute;dulo &lt;a href=&quot;https://hexdocs.pm/elixir/Record.html&quot;&gt; &lt;code&gt;Record&lt;/code&gt; &lt;/a&gt; en Elixir proporciona una serie de macros para usar en patrones y guardias que permiten que las tuplas tengan campos con nombre durante la compilaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="dabd9937e48a29e73846df5608de823548c08b1e" translate="yes" xml:space="preserve">
          <source>For example, the code point &quot;&amp;eacute;&quot; is two bytes:</source>
          <target state="translated">Por ejemplo, el punto de c&amp;oacute;digo &quot;&amp;eacute;&quot; tiene dos bytes:</target>
        </trans-unit>
        <trans-unit id="d6d855b74f3622b261e79dba8a4c6c84fa6807d2" translate="yes" xml:space="preserve">
          <source>For example, the decimal number &lt;code&gt;3&lt;/code&gt; when represented with 4 bits in base 2 would be &lt;code&gt;0011&lt;/code&gt;, which is equivalent to the values &lt;code&gt;0&lt;/code&gt;, &lt;code&gt;0&lt;/code&gt;, &lt;code&gt;1&lt;/code&gt;, &lt;code&gt;1&lt;/code&gt;, each stored using 1 bit:</source>
          <target state="translated">Por ejemplo, el n&amp;uacute;mero decimal &lt;code&gt;3&lt;/code&gt; cuando se representa con 4 bits en base 2 ser&amp;iacute;a &lt;code&gt;0011&lt;/code&gt; , que es equivalente a los valores &lt;code&gt;0&lt;/code&gt; , &lt;code&gt;0&lt;/code&gt; , &lt;code&gt;1&lt;/code&gt; , &lt;code&gt;1&lt;/code&gt; , cada uno almacenado usando 1 bit:</target>
        </trans-unit>
        <trans-unit id="d5c30e8005c0c98d6e53ce8dd367db66742e7504" translate="yes" xml:space="preserve">
          <source>For example, the following agent implements a counter:</source>
          <target state="translated">Por ejemplo,el siguiente agente implementa un contador:</target>
        </trans-unit>
        <trans-unit id="f261112170af791387e9b66db2c2a75a6ec23785" translate="yes" xml:space="preserve">
          <source>For example, the following is a keyword list:</source>
          <target state="translated">Por ejemplo,la siguiente es una lista de palabras clave:</target>
        </trans-unit>
        <trans-unit id="3df9b543906bfd5595a0cacf49aeb1e63c393e38" translate="yes" xml:space="preserve">
          <source>For example, the module implementing the &lt;a href=&quot;https://hexdocs.pm/elixir/Enumerable.html&quot;&gt;&lt;code&gt;Enumerable&lt;/code&gt;&lt;/a&gt; protocol for lists is &lt;a href=&quot;https://hexdocs.pm/elixir/Enumerable.List.html&quot;&gt;&lt;code&gt;Enumerable.List&lt;/code&gt;&lt;/a&gt;. Therefore, we can invoke &lt;code&gt;__impl__/1&lt;/code&gt; on this module:</source>
          <target state="translated">Por ejemplo, el m&amp;oacute;dulo que implementa el protocolo &lt;a href=&quot;https://hexdocs.pm/elixir/Enumerable.html&quot;&gt; &lt;code&gt;Enumerable&lt;/code&gt; &lt;/a&gt; para listas es &lt;a href=&quot;https://hexdocs.pm/elixir/Enumerable.List.html&quot;&gt; &lt;code&gt;Enumerable.List&lt;/code&gt; &lt;/a&gt; . Por lo tanto, podemos invocar &lt;code&gt;__impl__/1&lt;/code&gt; en este m&amp;oacute;dulo:</target>
        </trans-unit>
        <trans-unit id="b821bcc62d19a98d61faaca345d43a31156e0565" translate="yes" xml:space="preserve">
          <source>For example, the numbers 0.1 and 0.01 are two of them, what means the result of squaring 0.1 does not give 0.01 neither the closest representable. Here is what happens in this case:</source>
          <target state="translated">Por ejemplo,los números 0.1 y 0.01 son dos de ellos,lo que significa que el resultado de la cuadratura de 0.1 no da 0.01 ni el representable más cercano.Esto es lo que sucede en este caso:</target>
        </trans-unit>
        <trans-unit id="3780e894751fdee43da26866cc6af18a271859a8" translate="yes" xml:space="preserve">
          <source>For example, to add multiple backends to your application, modify your configuration:</source>
          <target state="translated">Por ejemplo,para añadir varios backends a su aplicación,modifique su configuración:</target>
        </trans-unit>
        <trans-unit id="4009f5a45e54514dcb5423e242c0ca43c71a40ed" translate="yes" xml:space="preserve">
          <source>For example, to configure &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Logger&lt;/code&gt;&lt;/a&gt; to redirect all Erlang messages using a &lt;code&gt;config/config.exs&lt;/code&gt; file:</source>
          <target state="translated">Por ejemplo, para configurar &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;Logger&lt;/code&gt; &lt;/a&gt; para redirigir todos los mensajes de Erlang usando un archivo &lt;code&gt;config/config.exs&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="97810dcc8560ef61b772f3bdcad87ca93ff037d4" translate="yes" xml:space="preserve">
          <source>For example, to configure the &lt;code&gt;:backends&lt;/code&gt; and purge all calls that happen at compile time with level lower than &lt;code&gt;:info&lt;/code&gt; in a &lt;code&gt;config/config.exs&lt;/code&gt; file:</source>
          <target state="translated">Por ejemplo, para configurar &lt;code&gt;:backends&lt;/code&gt; y purgar todas las llamadas que ocurren en tiempo de compilaci&amp;oacute;n con un nivel inferior a &lt;code&gt;:info&lt;/code&gt; en un archivo &lt;code&gt;config/config.exs&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="21a8e2abf86d2318a5a86e1829eeef5e5857c798" translate="yes" xml:space="preserve">
          <source>For example, to configure the &lt;code&gt;:level&lt;/code&gt; and &lt;code&gt;:truncate&lt;/code&gt; options in a &lt;code&gt;config/config.exs&lt;/code&gt; file:</source>
          <target state="translated">Por ejemplo, para configurar las opciones &lt;code&gt;:level&lt;/code&gt; y &lt;code&gt;:truncate&lt;/code&gt; en un archivo &lt;code&gt;config/config.exs&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="a0b9557028bd4e04dc9baddf4fcbc9b36f7fb55a" translate="yes" xml:space="preserve">
          <source>For example, to configure the &lt;code&gt;erlc_options&lt;/code&gt; for your Erlang project you may run:</source>
          <target state="translated">Por ejemplo, para configurar &lt;code&gt;erlc_options&lt;/code&gt; para su proyecto Erlang, puede ejecutar:</target>
        </trans-unit>
        <trans-unit id="76a5d4e647864137abb48e20144e766fb0c89015" translate="yes" xml:space="preserve">
          <source>For example, to disable color, one may use the configuration:</source>
          <target state="translated">Por ejemplo,para desactivar el color,se puede usar la configuración:</target>
        </trans-unit>
        <trans-unit id="a765ecc41513328acb3598f8f52b46ee7deada9a" translate="yes" xml:space="preserve">
          <source>For example, to lookup a server process, monitor it and send a cast to it:</source>
          <target state="translated">Por ejemplo,para buscar un proceso del servidor,supervisarlo y enviarle un reparto:</target>
        </trans-unit>
        <trans-unit id="cabc9384ea2bf9af1b99579a392dfd97e82162f8" translate="yes" xml:space="preserve">
          <source>For example, to split a test suite into 4 partitions and run them, you would use the following commands:</source>
          <target state="translated">Por ejemplo,para dividir un paquete de pruebas en 4 particiones y ejecutarlas,se utilizarían los siguientes comandos:</target>
        </trans-unit>
        <trans-unit id="49838731982f45b819651e28face607e270a0d83" translate="yes" xml:space="preserve">
          <source>For example, to update a map inside another map:</source>
          <target state="translated">Por ejemplo,para actualizar un mapa dentro de otro mapa:</target>
        </trans-unit>
        <trans-unit id="f8d6f1962522c5a74c0c716a39923ef1c094d4d7" translate="yes" xml:space="preserve">
          <source>For example, to write test cases using the &lt;a href=&quot;https://hexdocs.pm/ex_unit/ExUnit.html&quot;&gt;&lt;code&gt;ExUnit&lt;/code&gt;&lt;/a&gt; framework provided with Elixir, a developer should &lt;code&gt;use&lt;/code&gt; the &lt;a href=&quot;https://hexdocs.pm/ex_unit/ExUnit.Case.html&quot;&gt;&lt;code&gt;ExUnit.Case&lt;/code&gt;&lt;/a&gt; module:</source>
          <target state="translated">Por ejemplo, para escribir casos de prueba usando el marco &lt;a href=&quot;https://hexdocs.pm/ex_unit/ExUnit.html&quot;&gt; &lt;code&gt;ExUnit&lt;/code&gt; &lt;/a&gt; provisto con Elixir, un desarrollador debe &lt;code&gt;use&lt;/code&gt; el m&amp;oacute;dulo &lt;a href=&quot;https://hexdocs.pm/ex_unit/ExUnit.Case.html&quot;&gt; &lt;code&gt;ExUnit.Case&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="16fe3a971c511fed7157a7e0a03e09bb51dcfcf2" translate="yes" xml:space="preserve">
          <source>For example, we can configure IEx default prompt to another value. Just open &lt;code&gt;config/config.exs&lt;/code&gt; and add the following to the end:</source>
          <target state="translated">Por ejemplo, podemos configurar el indicador predeterminado de IEx en otro valor. Simplemente abra &lt;code&gt;config/config.exs&lt;/code&gt; y agregue lo siguiente al final:</target>
        </trans-unit>
        <trans-unit id="3ad4f120b95aba025295d32b32cd84c67c8c60d6" translate="yes" xml:space="preserve">
          <source>For example, we can configure IEx default prompt to another value. Let&amp;rsquo;s create the &lt;code&gt;config/config.exs&lt;/code&gt; file with the following content:</source>
          <target state="translated">Por ejemplo, podemos configurar el indicador predeterminado de IEx en otro valor. Vamos a crear la &lt;code&gt;config/config.exs&lt;/code&gt; archivo con el siguiente contenido:</target>
        </trans-unit>
        <trans-unit id="65ea0a674f1ce41ff4c22e2d07ee72ff95421ac9" translate="yes" xml:space="preserve">
          <source>For example, we can map a list of integers into their squared values:</source>
          <target state="translated">Por ejemplo,podemos mapear una lista de números enteros en sus valores cuadrados:</target>
        </trans-unit>
        <trans-unit id="ecebd23ebfe4f1d1acd8ff8a2d9a8722555dc40b" translate="yes" xml:space="preserve">
          <source>For example, we can use bitstring generators with the &lt;code&gt;:into&lt;/code&gt; option to easily remove all spaces in a string:</source>
          <target state="translated">Por ejemplo, podemos usar generadores de cadenas de bits con la opci&amp;oacute;n &lt;code&gt;:into&lt;/code&gt; para eliminar f&amp;aacute;cilmente todos los espacios en una cadena:</target>
        </trans-unit>
        <trans-unit id="825bc9fd2268ad4ced535baaab0a761647bf3261" translate="yes" xml:space="preserve">
          <source>For example, we could implement &lt;a href=&quot;#map/2&quot;&gt;&lt;code&gt;map/2&lt;/code&gt;&lt;/a&gt; in terms of &lt;a href=&quot;#reduce/3&quot;&gt;&lt;code&gt;reduce/3&lt;/code&gt;&lt;/a&gt; as follows:</source>
          <target state="translated">Por ejemplo, podr&amp;iacute;amos implementar &lt;a href=&quot;#map/2&quot;&gt; &lt;code&gt;map/2&lt;/code&gt; &lt;/a&gt; en t&amp;eacute;rminos de &lt;a href=&quot;#reduce/3&quot;&gt; &lt;code&gt;reduce/3&lt;/code&gt; de la&lt;/a&gt; siguiente manera:</target>
        </trans-unit>
        <trans-unit id="678b43ac2ccf82f31c5e6153c0e2834d16a5b6ca" translate="yes" xml:space="preserve">
          <source>For example, we could start and register our &lt;code&gt;Stack&lt;/code&gt; server locally as follows:</source>
          <target state="translated">Por ejemplo, podr&amp;iacute;amos iniciar y registrar nuestro servidor &lt;code&gt;Stack&lt;/code&gt; localmente de la siguiente manera:</target>
        </trans-unit>
        <trans-unit id="9a4ed3f8957553e26e0d94986089ddb6888e33a8" translate="yes" xml:space="preserve">
          <source>For example, we have used 4 counting functions so far: &lt;code&gt;byte_size/1&lt;/code&gt; (for the number of bytes in a string), &lt;code&gt;tuple_size/1&lt;/code&gt; (for tuple size), &lt;code&gt;length/1&lt;/code&gt; (for list length) and &lt;code&gt;String.length/1&lt;/code&gt; (for the number of graphemes in a string). We use &lt;code&gt;byte_size&lt;/code&gt; to get the number of bytes in a string &amp;ndash; a cheap operation. Retrieving the number of Unicode characters, on the other hand, uses &lt;code&gt;String.length&lt;/code&gt;, and may be expensive as it relies on a traversal of the entire string.</source>
          <target state="translated">Por ejemplo, hemos utilizado 4 funciones de conteo hasta ahora: &lt;code&gt;byte_size/1&lt;/code&gt; (para el n&amp;uacute;mero de bytes en una cadena), &lt;code&gt;tuple_size/1&lt;/code&gt; (para el tama&amp;ntilde;o de la tupla), &lt;code&gt;length/1&lt;/code&gt; (para la longitud de la lista) y &lt;code&gt;String.length/1&lt;/code&gt; ( para el n&amp;uacute;mero de grafemas en una cadena). Usamos &lt;code&gt;byte_size&lt;/code&gt; para obtener la cantidad de bytes en una cadena, una operaci&amp;oacute;n econ&amp;oacute;mica. Recuperar el n&amp;uacute;mero de caracteres Unicode, por otro lado, usa &lt;code&gt;String.length&lt;/code&gt; y puede ser costoso ya que se basa en un recorrido de toda la cadena.</target>
        </trans-unit>
        <trans-unit id="a856e5ee06c9349ef31043c8ece70cd8e13f1483" translate="yes" xml:space="preserve">
          <source>For example, we have used 4 counting functions so far: &lt;code&gt;byte_size/1&lt;/code&gt; (for the number of bytes in a string), &lt;code&gt;tuple_size/1&lt;/code&gt; (for tuple size), &lt;code&gt;length/1&lt;/code&gt; (for list length) and &lt;code&gt;String.length/1&lt;/code&gt; (for the number of graphemes in a string). We use &lt;code&gt;byte_size&lt;/code&gt; to get the number of bytes in a string &amp;ndash; a cheap operation. Retrieving the number of Unicode graphemes, on the other hand, uses &lt;code&gt;String.length&lt;/code&gt;, and may be expensive as it relies on a traversal of the entire string.</source>
          <target state="translated">Por ejemplo, hemos utilizado 4 funciones de conteo hasta ahora: &lt;code&gt;byte_size/1&lt;/code&gt; (para el n&amp;uacute;mero de bytes en una cadena), &lt;code&gt;tuple_size/1&lt;/code&gt; (para el tama&amp;ntilde;o de la tupla), &lt;code&gt;length/1&lt;/code&gt; (para la longitud de la lista) y &lt;code&gt;String.length/1&lt;/code&gt; ( para el n&amp;uacute;mero de grafemas en una cadena). Usamos &lt;code&gt;byte_size&lt;/code&gt; para obtener el n&amp;uacute;mero de bytes en una cadena, una operaci&amp;oacute;n econ&amp;oacute;mica. Recuperar el n&amp;uacute;mero de grafemas Unicode, por otro lado, usa &lt;code&gt;String.length&lt;/code&gt; , y puede ser costoso ya que se basa en un recorrido de toda la cadena.</target>
        </trans-unit>
        <trans-unit id="8e82002b46a7bc98e04a53b8f0787d96d507b69d" translate="yes" xml:space="preserve">
          <source>For example, we recommend developers to always start tasks under a supervisor. This provides more visibility and allows you to control how those tasks are terminated when a node shuts down. That might look something like &lt;code&gt;Task.Supervisor.start_child(MySupervisor, task_specification)&lt;/code&gt;. This means that, although your code is the one who invokes the task, the actual ancestor of the task is the supervisor, as the supervisor is the one effectively starting it.</source>
          <target state="translated">Por ejemplo, recomendamos a los desarrolladores que siempre inicien tareas bajo la supervisi&amp;oacute;n de un supervisor. Esto proporciona m&amp;aacute;s visibilidad y le permite controlar c&amp;oacute;mo se terminan esas tareas cuando se apaga un nodo. Eso podr&amp;iacute;a parecerse a &lt;code&gt;Task.Supervisor.start_child(MySupervisor, task_specification)&lt;/code&gt; . Esto significa que, aunque su c&amp;oacute;digo es el que invoca la tarea, el antepasado real de la tarea es el supervisor, ya que el supervisor es quien efectivamente la inicia.</target>
        </trans-unit>
        <trans-unit id="0dcb9a644dbae1acdb996808b23645d55e2f6941" translate="yes" xml:space="preserve">
          <source>For example, when daylight saving changes are applied by a region, the clock typically moves forward or backward by one hour. This means certain datetimes never occur or may occur more than once. Since &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;NaiveDateTime&lt;/code&gt;&lt;/a&gt; is not validated against a time zone, such errors would go unnoticed.</source>
          <target state="translated">Por ejemplo, cuando una regi&amp;oacute;n aplica los cambios de horario de verano, el reloj normalmente avanza o retrocede una hora. Esto significa que ciertas fechas y horas nunca ocurren o pueden ocurrir m&amp;aacute;s de una vez. Dado que &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;NaiveDateTime&lt;/code&gt; &lt;/a&gt; no se valida con una zona horaria, estos errores pasar&amp;iacute;an desapercibidos.</target>
        </trans-unit>
        <trans-unit id="0134d97aaa5f44efc896482193ec373596c0207e" translate="yes" xml:space="preserve">
          <source>For example, you could specify a &lt;code&gt;URI.Parser&lt;/code&gt; behaviour as follows:</source>
          <target state="translated">Por ejemplo, puede especificar un comportamiento &lt;code&gt;URI.Parser&lt;/code&gt; de la siguiente manera:</target>
        </trans-unit>
        <trans-unit id="80c725586e4c191211220e82dbb160afa5b6efb9" translate="yes" xml:space="preserve">
          <source>For example, you might wish to include a custom &lt;code&gt;:error_code&lt;/code&gt; metadata in your logs:</source>
          <target state="translated">Por ejemplo, es posible que desee incluir un metadato personalizado &lt;code&gt;:error_code&lt;/code&gt; en sus registros:</target>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="4e3a66cb565ce65f19a6ff578510f5919a4c4a12" translate="yes" xml:space="preserve">
          <source>For examples on how to use the &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Collectable&lt;/code&gt;&lt;/a&gt; protocol and &lt;a href=&quot;#into/1&quot;&gt;&lt;code&gt;into/1&lt;/code&gt;&lt;/a&gt; see the module documentation.</source>
          <target state="translated">Para obtener ejemplos sobre c&amp;oacute;mo utilizar el protocolo &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;Collectable&lt;/code&gt; &lt;/a&gt; y &lt;a href=&quot;#into/1&quot;&gt; &lt;code&gt;into/1&lt;/code&gt; &lt;/a&gt; consulte la documentaci&amp;oacute;n del m&amp;oacute;dulo.</target>
        </trans-unit>
        <trans-unit id="e4c21cf1cac5889764a4444020c6074013f406cd" translate="yes" xml:space="preserve">
          <source>For floats, it is 64. For floats, &lt;code&gt;size * unit&lt;/code&gt; must result in 32 or 64, corresponding to &lt;a href=&quot;https://en.wikipedia.org/wiki/IEEE_floating_point&quot;&gt;IEEE 754&lt;/a&gt; binary32 and binary64, respectively.</source>
          <target state="translated">Para flotantes, es 64. Para flotantes, la &lt;code&gt;size * unit&lt;/code&gt; debe resultar en 32 o 64, correspondiente a &lt;a href=&quot;https://en.wikipedia.org/wiki/IEEE_floating_point&quot;&gt;IEEE 754&lt;/a&gt; binary32 y binary64, respectivamente.</target>
        </trans-unit>
        <trans-unit id="e0863812afa8bda24138da4ec3b1ecff0d4ecc46" translate="yes" xml:space="preserve">
          <source>For fun, let's define a simple module in this shell too:</source>
          <target state="translated">Para divertirnos,definamos un módulo simple en este armazón también:</target>
        </trans-unit>
        <trans-unit id="979ac34509c51f5dab54e261eec8b56be64ab620" translate="yes" xml:space="preserve">
          <source>For further details on applications please check the documentation of the &lt;a href=&quot;http://www.erlang.org/doc/man/application.html&quot;&gt;&lt;code&gt;application&lt;/code&gt;&lt;/a&gt; Erlang module, and the &lt;a href=&quot;http://www.erlang.org/doc/design_principles/applications.html&quot;&gt;Applications&lt;/a&gt; section of the &lt;a href=&quot;http://erlang.org/doc/design_principles/users_guide.html&quot;&gt;OTP Design Principles User's Guide&lt;/a&gt;.</source>
          <target state="translated">Para obtener m&amp;aacute;s detalles sobre las aplicaciones, consulte la documentaci&amp;oacute;n del m&amp;oacute;dulo Erlang de la &lt;a href=&quot;http://www.erlang.org/doc/man/application.html&quot;&gt; &lt;code&gt;application&lt;/code&gt; &lt;/a&gt; y la secci&amp;oacute;n &lt;a href=&quot;http://www.erlang.org/doc/design_principles/applications.html&quot;&gt;Aplicaciones&lt;/a&gt; de la &lt;a href=&quot;http://erlang.org/doc/design_principles/users_guide.html&quot;&gt;Gu&amp;iacute;a del usuario de los principios de dise&amp;ntilde;o de OTP&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f91858e05de05b595ba22a40c6d98a7a27a8e926" translate="yes" xml:space="preserve">
          <source>For grouping tests together, see &lt;a href=&quot;#describe/2&quot;&gt;&lt;code&gt;describe/2&lt;/code&gt;&lt;/a&gt; in this module.</source>
          <target state="translated">Para agrupar las pruebas, consulte &lt;a href=&quot;#describe/2&quot;&gt; &lt;code&gt;describe/2&lt;/code&gt; &lt;/a&gt; en este m&amp;oacute;dulo.</target>
        </trans-unit>
        <trans-unit id="77ab7e6ee8d58a006653e5dfc1bb9f58088937ba" translate="yes" xml:space="preserve">
          <source>For instance one period could be the summer of 2018 in &quot;Europe/London&quot; where summer time / daylight saving time is in effect and lasts from spring to autumn. At autumn the &lt;code&gt;std_offset&lt;/code&gt; changes along with the &lt;code&gt;zone_abbr&lt;/code&gt; so a different period is needed during winter.</source>
          <target state="translated">Por ejemplo, un per&amp;iacute;odo podr&amp;iacute;a ser el verano de 2018 en &quot;Europa / Londres&quot;, donde el horario de verano / horario de verano est&amp;aacute; en vigor y dura desde la primavera hasta el oto&amp;ntilde;o. En oto&amp;ntilde;o, &lt;code&gt;std_offset&lt;/code&gt; cambia junto con &lt;code&gt;zone_abbr&lt;/code&gt; , por lo que se necesita un per&amp;iacute;odo diferente durante el invierno.</target>
        </trans-unit>
        <trans-unit id="e51496febe42a068541cd5f1776cfef4dbdc9e31" translate="yes" xml:space="preserve">
          <source>For instance, given a user map with the &lt;code&gt;:name&lt;/code&gt; and &lt;code&gt;:languages&lt;/code&gt; keys, here is how to deeply traverse the map and convert all language names to uppercase:</source>
          <target state="translated">Por ejemplo, dado un mapa de usuario con las teclas &lt;code&gt;:name&lt;/code&gt; y &lt;code&gt;:languages&lt;/code&gt; , aqu&amp;iacute; se explica c&amp;oacute;mo recorrer profundamente el mapa y convertir todos los nombres de los idiomas a may&amp;uacute;sculas:</target>
        </trans-unit>
        <trans-unit id="0fa8784dfc2e01f4f7777294a47b6dd71b0ca392" translate="yes" xml:space="preserve">
          <source>For instance, releases run using short-names (&lt;code&gt;--sname&lt;/code&gt;). However, if you want to actually run a distributed key-value store in production, you will need multiple nodes and start the release with the &lt;code&gt;--name&lt;/code&gt; option. We can achieve this by setting the &lt;code&gt;RELEASE_DISTRIBUTION&lt;/code&gt; environment variable inside the &lt;code&gt;env.sh&lt;/code&gt; and &lt;code&gt;env.bat&lt;/code&gt; files. Mix already has a template for said files which we can customize, so let&amp;rsquo;s ask Mix to copy them to our application:</source>
          <target state="translated">Por ejemplo, las versiones se ejecutan con nombres cortos ( &lt;code&gt;--sname&lt;/code&gt; ). Sin embargo, si realmente desea ejecutar un almac&amp;eacute;n de clave-valor distribuido en producci&amp;oacute;n, necesitar&amp;aacute; varios nodos y comenzar&amp;aacute; el lanzamiento con la opci&amp;oacute;n &lt;code&gt;--name&lt;/code&gt; . Podemos lograr esto configurando la variable de entorno &lt;code&gt;RELEASE_DISTRIBUTION&lt;/code&gt; dentro de los archivos &lt;code&gt;env.sh&lt;/code&gt; y &lt;code&gt;env.bat&lt;/code&gt; . Mix ya tiene una plantilla para dichos archivos que podemos personalizar, as&amp;iacute; que pidamos a Mix que los copie a nuestra aplicaci&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="098abe87bcf54674f294a660fdeca753e3973228" translate="yes" xml:space="preserve">
          <source>For instance, we can create a file called &lt;code&gt;math.exs&lt;/code&gt;:</source>
          <target state="translated">Por ejemplo, podemos crear un archivo llamado &lt;code&gt;math.exs&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="915841eb2ae9437182185facdb407e9c03dade23" translate="yes" xml:space="preserve">
          <source>For intensive workloads, the registry may also be partitioned (by specifying the &lt;code&gt;:partitions&lt;/code&gt; option). If partitioning is required then a good default is to set the number of partitions to the number of schedulers available:</source>
          <target state="translated">Para cargas de trabajo intensivas, el registro tambi&amp;eacute;n se puede particionar (especificando la opci&amp;oacute;n &lt;code&gt;:partitions&lt;/code&gt; ). Si se requiere particionamiento, entonces un buen valor predeterminado es establecer el n&amp;uacute;mero de particiones al n&amp;uacute;mero de programadores disponibles:</target>
        </trans-unit>
        <trans-unit id="0be2313f13029f16466fa64d8d779bb84d194911" translate="yes" xml:space="preserve">
          <source>For maps, the first tuple element must be a &lt;code&gt;{key, value}&lt;/code&gt; tuple.</source>
          <target state="translated">Para mapas, el primer elemento de tupla debe ser una tupla &lt;code&gt;{key, value}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9ef87b3ee1067750a0799faa766ca960ddec15e8" translate="yes" xml:space="preserve">
          <source>For maps, the function expects a key-value tuple.</source>
          <target state="translated">Para los mapas,la función espera una tupla de valor clave.</target>
        </trans-unit>
        <trans-unit id="2006fc3ed297a859555ea878c9cf50cc043d6a81" translate="yes" xml:space="preserve">
          <source>For monitoring status changes of all nodes, see &lt;a href=&quot;http://www.erlang.org/doc/man/net_kernel.html#monitor_nodes-2&quot;&gt;&lt;code&gt;:net_kernel.monitor_nodes/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Para monitorear los cambios de estado de todos los nodos, consulte &lt;a href=&quot;http://www.erlang.org/doc/man/net_kernel.html#monitor_nodes-2&quot;&gt; &lt;code&gt;:net_kernel.monitor_nodes/2&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f65055eecdf00696b65a9b430fcafe6f22952a12" translate="yes" xml:space="preserve">
          <source>For monitoring status changes of all nodes, see &lt;a href=&quot;http://www.erlang.org/doc/man/net_kernel.html#monitor_nodes-3&quot;&gt;&lt;code&gt;:net_kernel.monitor_nodes/3&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Para monitorear los cambios de estado de todos los nodos, consulte &lt;a href=&quot;http://www.erlang.org/doc/man/net_kernel.html#monitor_nodes-3&quot;&gt; &lt;code&gt;:net_kernel.monitor_nodes/3&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6a50d8c364812d16e018ab6d0f72a5d0030e8481" translate="yes" xml:space="preserve">
          <source>For more advanced options available when defining custom attributes, see &lt;a href=&quot;#register_attribute/3&quot;&gt;&lt;code&gt;register_attribute/3&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Para obtener opciones m&amp;aacute;s avanzadas disponibles al definir atributos personalizados, consulte &lt;a href=&quot;#register_attribute/3&quot;&gt; &lt;code&gt;register_attribute/3&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="095613a0c71daec41f22ebf762f9ec5144c17212" translate="yes" xml:space="preserve">
          <source>For more details, see &lt;a href=&quot;http://www.erlang.org/doc/man/file.html#read_link-1&quot;&gt;&lt;code&gt;:file.read_link/1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Para obtener m&amp;aacute;s detalles, consulte &lt;a href=&quot;http://www.erlang.org/doc/man/file.html#read_link-1&quot;&gt; &lt;code&gt;:file.read_link/1&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c85e5081a17eac440f3c5a413306106ced5d9c19" translate="yes" xml:space="preserve">
          <source>For more details, see &lt;a href=&quot;http://www.erlang.org/doc/man/file.html#read_link_info-2&quot;&gt;&lt;code&gt;:file.read_link_info/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Para obtener m&amp;aacute;s detalles, consulte &lt;a href=&quot;http://www.erlang.org/doc/man/file.html#read_link_info-2&quot;&gt; &lt;code&gt;:file.read_link_info/2&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="40801b427f30e76ede611926a90606441dd86a7c" translate="yes" xml:space="preserve">
          <source>For more in-depth information, please read the &quot;Charlists&quot; section in the &lt;a href=&quot;https://hexdocs.pm/elixir/List.html&quot;&gt;&lt;code&gt;List&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">Para obtener informaci&amp;oacute;n m&amp;aacute;s detallada, lea la secci&amp;oacute;n &quot;Charlists&quot; en el m&amp;oacute;dulo &lt;a href=&quot;https://hexdocs.pm/elixir/List.html&quot;&gt; &lt;code&gt;List&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c734b39d3add7d597fc3e2a0a8f87e008c1a861a" translate="yes" xml:space="preserve">
          <source>For more in-depth information, please read the &quot;Charlists&quot; section in the &lt;a href=&quot;list&quot;&gt;&lt;code&gt;List&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">Para obtener informaci&amp;oacute;n m&amp;aacute;s detallada, lea la secci&amp;oacute;n &quot;Charlists&quot; en el m&amp;oacute;dulo &lt;a href=&quot;list&quot;&gt; &lt;code&gt;List&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="95147adb3177256a490cdad3827bcc51779e68e4" translate="yes" xml:space="preserve">
          <source>For more information about IO data, see the &lt;a href=&quot;#module-io-data&quot;&gt;&quot;IO data&quot;&lt;/a&gt; section in the module documentation.</source>
          <target state="translated">Para obtener m&amp;aacute;s informaci&amp;oacute;n sobre los datos IO, consulte la secci&amp;oacute;n &lt;a href=&quot;#module-io-data&quot;&gt;&quot;Datos IO&quot;&lt;/a&gt; en la documentaci&amp;oacute;n del m&amp;oacute;dulo.</target>
        </trans-unit>
        <trans-unit id="1c3a9dad7c543d1c63c29b6ca8ca500c85b4a2b7" translate="yes" xml:space="preserve">
          <source>For more information about chardata, see the &lt;a href=&quot;#module-chardata&quot;&gt;&quot;Chardata&quot;&lt;/a&gt; section in the module documentation.</source>
          <target state="translated">Para obtener m&amp;aacute;s informaci&amp;oacute;n sobre chardata, consulte la secci&amp;oacute;n &lt;a href=&quot;#module-chardata&quot;&gt;&quot;Chardata&quot;&lt;/a&gt; en la documentaci&amp;oacute;n del m&amp;oacute;dulo.</target>
        </trans-unit>
        <trans-unit id="0541321f88f511fe94f622a2cb19777c006436cc" translate="yes" xml:space="preserve">
          <source>For more information about structs, please check &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.SpecialForms.html#%25/2&quot;&gt;&lt;code&gt;Kernel.SpecialForms.%/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Para obtener m&amp;aacute;s informaci&amp;oacute;n sobre estructuras, consulte &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.SpecialForms.html#%25/2&quot;&gt; &lt;code&gt;Kernel.SpecialForms.%/2&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="edd1a5e1d2ce7f216383d5f43648eb3d76f38089" translate="yes" xml:space="preserve">
          <source>For more information about structs, please check &lt;a href=&quot;kernel.specialforms#%2525/2&quot;&gt;&lt;code&gt;Kernel.SpecialForms.%/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Para obtener m&amp;aacute;s informaci&amp;oacute;n sobre estructuras, consulte &lt;a href=&quot;kernel.specialforms#%2525/2&quot;&gt; &lt;code&gt;Kernel.SpecialForms.%/2&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="59d3cf884555506ee92cff193a1929009e874d1e" translate="yes" xml:space="preserve">
          <source>For more information about task aliasing, take a look at the &quot;Aliasing&quot; section in the docs for &lt;a href=&quot;mix&quot;&gt;&lt;code&gt;Mix&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Para obtener m&amp;aacute;s informaci&amp;oacute;n acerca de la creaci&amp;oacute;n de alias de tareas, consulte la secci&amp;oacute;n &quot;Aliasing&quot; en los documentos de &lt;a href=&quot;mix&quot;&gt; &lt;code&gt;Mix&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="78f8e40c63b458c9fad682e6d3b6666a0f62cf7b" translate="yes" xml:space="preserve">
          <source>For more information about task aliasing, take a look at the &lt;a href=&quot;https://hexdocs.pm/mix/Mix.html#module-aliases&quot;&gt;&quot;Aliases&quot;&lt;/a&gt; section in the docs for &lt;a href=&quot;https://hexdocs.pm/mix/Mix.html&quot;&gt;&lt;code&gt;Mix&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Para obtener m&amp;aacute;s informaci&amp;oacute;n sobre la creaci&amp;oacute;n de alias de tareas, consulte la secci&amp;oacute;n &lt;a href=&quot;https://hexdocs.pm/mix/Mix.html#module-aliases&quot;&gt;&quot;Alias&quot;&lt;/a&gt; en los documentos de &lt;a href=&quot;https://hexdocs.pm/mix/Mix.html&quot;&gt; &lt;code&gt;Mix&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="da00729bbfd1619462b29a7b8fa0dab41f7868c6" translate="yes" xml:space="preserve">
          <source>For more information and the list of options, see &lt;a href=&quot;http://www.erlang.org/doc/man/erlang.html#open_port-2&quot;&gt;&lt;code&gt;:erlang.open_port/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Para obtener m&amp;aacute;s informaci&amp;oacute;n y la lista de opciones, consulte &lt;a href=&quot;http://www.erlang.org/doc/man/erlang.html#open_port-2&quot;&gt; &lt;code&gt;:erlang.open_port/2&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cc7ee954ed549f3663bd8fb004277a09d86223c0" translate="yes" xml:space="preserve">
          <source>For more information and to open any module or function, see &lt;a href=&quot;#open/1&quot;&gt;&lt;code&gt;open/1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Para obtener m&amp;aacute;s informaci&amp;oacute;n y abrir cualquier m&amp;oacute;dulo o funci&amp;oacute;n, consulte &lt;a href=&quot;#open/1&quot;&gt; &lt;code&gt;open/1&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d0b21c46bc07a705dfc9fb743eebf812b0cdc892" translate="yes" xml:space="preserve">
          <source>For more information on code paths, check the &lt;a href=&quot;code&quot;&gt;&lt;code&gt;Code&lt;/code&gt;&lt;/a&gt; module in Elixir and also Erlang's &lt;a href=&quot;http://www.erlang.org/doc/man/code.html&quot;&gt;&lt;code&gt;:code&lt;/code&gt; module&lt;/a&gt;.</source>
          <target state="translated">Para obtener m&amp;aacute;s informaci&amp;oacute;n sobre las rutas de c&amp;oacute;digo, consulte el m&amp;oacute;dulo de &lt;a href=&quot;code&quot;&gt; &lt;code&gt;Code&lt;/code&gt; &lt;/a&gt; en Elixir y tambi&amp;eacute;n el &lt;a href=&quot;http://www.erlang.org/doc/man/code.html&quot;&gt;m&amp;oacute;dulo de &lt;/a&gt; &lt;code&gt;:code&lt;/code&gt; Erlang .</target>
        </trans-unit>
        <trans-unit id="9bd54480aa692a8df8b981b72aa444502ecc46ce" translate="yes" xml:space="preserve">
          <source>For more information on code paths, check the &lt;a href=&quot;https://hexdocs.pm/elixir/Code.html&quot;&gt;&lt;code&gt;Code&lt;/code&gt;&lt;/a&gt; module in Elixir and also Erlang's &lt;a href=&quot;http://www.erlang.org/doc/man/code.html&quot;&gt;&lt;code&gt;:code&lt;/code&gt; module&lt;/a&gt;.</source>
          <target state="translated">Para obtener m&amp;aacute;s informaci&amp;oacute;n sobre las rutas de c&amp;oacute;digo, consulte el m&amp;oacute;dulo de &lt;a href=&quot;https://hexdocs.pm/elixir/Code.html&quot;&gt; &lt;code&gt;Code&lt;/code&gt; &lt;/a&gt; en Elixir y tambi&amp;eacute;n el &lt;a href=&quot;http://www.erlang.org/doc/man/code.html&quot;&gt;m&amp;oacute;dulo de &lt;/a&gt; &lt;code&gt;:code&lt;/code&gt; Erlang .</target>
        </trans-unit>
        <trans-unit id="6bd6c86df060a9a0da50c17d815720a12995dd04" translate="yes" xml:space="preserve">
          <source>For more information on each of the possible returned values, see &lt;a href=&quot;#info/1&quot;&gt;&lt;code&gt;info/1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Para obtener m&amp;aacute;s informaci&amp;oacute;n sobre cada uno de los posibles valores devueltos, consulte &lt;a href=&quot;#info/1&quot;&gt; &lt;code&gt;info/1&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8a372c9bd101c94685e235eb649743902f58f48c" translate="yes" xml:space="preserve">
          <source>For more information on how the break is inserted, see &lt;a href=&quot;#break/1&quot;&gt;&lt;code&gt;break/1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Para obtener m&amp;aacute;s informaci&amp;oacute;n sobre c&amp;oacute;mo se inserta la ruptura, consulte &lt;a href=&quot;#break/1&quot;&gt; &lt;code&gt;break/1&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="65a28bc1907c5e0ff21b3bd1d4bbcdfcc5c5acaf" translate="yes" xml:space="preserve">
          <source>For more information on running your project, see the official &lt;a href=&quot;https://elixir-lang.org/getting-started/mix-otp/introduction-to-mix.html&quot;&gt;Mix &amp;amp; OTP guide&lt;/a&gt; or &lt;a href=&quot;https://hexdocs.pm/mix/Mix.html&quot;&gt;Mix documentation&lt;/a&gt;.</source>
          <target state="translated">Para obtener m&amp;aacute;s informaci&amp;oacute;n sobre c&amp;oacute;mo ejecutar su proyecto, consulte la &lt;a href=&quot;https://elixir-lang.org/getting-started/mix-otp/introduction-to-mix.html&quot;&gt;gu&amp;iacute;a&lt;/a&gt; oficial de Mix &amp;amp; OTP o la &lt;a href=&quot;https://hexdocs.pm/mix/Mix.html&quot;&gt;documentaci&amp;oacute;n de Mix&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="eff11d18fedd9846c96b5c225d02a932e7b86b50" translate="yes" xml:space="preserve">
          <source>For more information read the &lt;a href=&quot;https://en.wikipedia.org/wiki/ASCII#Character_groups&quot;&gt;Character groups&lt;/a&gt; section in the Wikipedia article of the &lt;a href=&quot;https://en.wikipedia.org/wiki/ASCII&quot;&gt;ASCII&lt;/a&gt; standard.</source>
          <target state="translated">Para obtener m&amp;aacute;s informaci&amp;oacute;n, lea la secci&amp;oacute;n &lt;a href=&quot;https://en.wikipedia.org/wiki/ASCII#Character_groups&quot;&gt;Grupos de caracteres&lt;/a&gt; en el art&amp;iacute;culo de Wikipedia del est&amp;aacute;ndar &lt;a href=&quot;https://en.wikipedia.org/wiki/ASCII&quot;&gt;ASCII&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5b003e6f0d5f3ad23f1b90e810d0b8f11ff3028f" translate="yes" xml:space="preserve">
          <source>For more information, check &lt;a href=&quot;https://hexdocs.pm/eex/EEx.SmartEngine.html&quot;&gt;&lt;code&gt;EEx.SmartEngine&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Para obtener m&amp;aacute;s informaci&amp;oacute;n, consulte &lt;a href=&quot;https://hexdocs.pm/eex/EEx.SmartEngine.html&quot;&gt; &lt;code&gt;EEx.SmartEngine&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c1311002c3a957f544a2fb2f22b854fa11815412" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;http://www.erlang.org/doc/man/erlang.html#disconnect_node-1&quot;&gt;&lt;code&gt;:erlang.disconnect_node/1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Para obtener m&amp;aacute;s informaci&amp;oacute;n, consulte &lt;a href=&quot;http://www.erlang.org/doc/man/erlang.html#disconnect_node-1&quot;&gt; &lt;code&gt;:erlang.disconnect_node/1&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0cd3be4a21a8ffdb5484f382332800faea93a58f" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;http://www.erlang.org/doc/man/erlang.html#halt-1&quot;&gt;&lt;code&gt;:erlang.halt/1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Para obtener m&amp;aacute;s informaci&amp;oacute;n, consulte &lt;a href=&quot;http://www.erlang.org/doc/man/erlang.html#halt-1&quot;&gt; &lt;code&gt;:erlang.halt/1&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="48be8c3bec9fc07a6ce3cee60d8a8e670e70ad06" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;http://www.erlang.org/doc/man/erlang.html#monitor_node-2&quot;&gt;&lt;code&gt;:erlang.monitor_node/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Para obtener m&amp;aacute;s informaci&amp;oacute;n, consulte &lt;a href=&quot;http://www.erlang.org/doc/man/erlang.html#monitor_node-2&quot;&gt; &lt;code&gt;:erlang.monitor_node/2&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cb3eefbbccd2c205683a61d85dab5af738a1f1d7" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;http://www.erlang.org/doc/man/erlang.html#monitor_node-3&quot;&gt;&lt;code&gt;:erlang.monitor_node/3&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Para obtener m&amp;aacute;s informaci&amp;oacute;n, consulte &lt;a href=&quot;http://www.erlang.org/doc/man/erlang.html#monitor_node-3&quot;&gt; &lt;code&gt;:erlang.monitor_node/3&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7c9d37564a53538860067ee2ce72a5278d51bbde" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;http://www.erlang.org/doc/man/erlang.html#nodes-1&quot;&gt;&lt;code&gt;:erlang.nodes/1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Para obtener m&amp;aacute;s informaci&amp;oacute;n, consulte &lt;a href=&quot;http://www.erlang.org/doc/man/erlang.html#nodes-1&quot;&gt; &lt;code&gt;:erlang.nodes/1&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2eb045622e309576ede0093587a78e27c6a80e60" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;http://www.erlang.org/doc/man/erlang.html#port_close-1&quot;&gt;&lt;code&gt;:erlang.port_close/1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Para obtener m&amp;aacute;s informaci&amp;oacute;n, consulte &lt;a href=&quot;http://www.erlang.org/doc/man/erlang.html#port_close-1&quot;&gt; &lt;code&gt;:erlang.port_close/1&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="74569ddc9dafdb010b29df91efd894806768f74c" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;http://www.erlang.org/doc/man/erlang.html#port_command-2&quot;&gt;&lt;code&gt;:erlang.port_command/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Para obtener m&amp;aacute;s informaci&amp;oacute;n, consulte &lt;a href=&quot;http://www.erlang.org/doc/man/erlang.html#port_command-2&quot;&gt; &lt;code&gt;:erlang.port_command/2&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="db0e4c8249cd1b3c3788a38e7bf3c3b9d4b6ceab" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;http://www.erlang.org/doc/man/erlang.html#port_connect-2&quot;&gt;&lt;code&gt;:erlang.port_connect/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Para obtener m&amp;aacute;s informaci&amp;oacute;n, consulte &lt;a href=&quot;http://www.erlang.org/doc/man/erlang.html#port_connect-2&quot;&gt; &lt;code&gt;:erlang.port_connect/2&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3ce86a1871484a9008f73d0c702d7521b667af6c" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;http://www.erlang.org/doc/man/erlang.html#port_info-1&quot;&gt;&lt;code&gt;:erlang.port_info/1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Para obtener m&amp;aacute;s informaci&amp;oacute;n, consulte &lt;a href=&quot;http://www.erlang.org/doc/man/erlang.html#port_info-1&quot;&gt; &lt;code&gt;:erlang.port_info/1&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="80edbd442183f322a586734d8b1f7c8a23af48b7" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;http://www.erlang.org/doc/man/erlang.html#port_info-2&quot;&gt;&lt;code&gt;:erlang.port_info/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Para obtener m&amp;aacute;s informaci&amp;oacute;n, consulte &lt;a href=&quot;http://www.erlang.org/doc/man/erlang.html#port_info-2&quot;&gt; &lt;code&gt;:erlang.port_info/2&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="82424b64f3a822c3b698f3418f074d1a59050668" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;http://www.erlang.org/doc/man/net_kernel.html#connect_node-1&quot;&gt;&lt;code&gt;:net_kernel.connect_node/1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Para obtener m&amp;aacute;s informaci&amp;oacute;n, consulte &lt;a href=&quot;http://www.erlang.org/doc/man/net_kernel.html#connect_node-1&quot;&gt; &lt;code&gt;:net_kernel.connect_node/1&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ef58581a2fb238d3165babba36ae1b31c20add22" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;http://www.erlang.org/doc/man/os.html#getpid-0&quot;&gt;&lt;code&gt;:os.getpid/0&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Para obtener m&amp;aacute;s informaci&amp;oacute;n, consulte &lt;a href=&quot;http://www.erlang.org/doc/man/os.html#getpid-0&quot;&gt; &lt;code&gt;:os.getpid/0&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ed8b5928b9cd599d88e9ffccabb9856023defc53" translate="yes" xml:space="preserve">
          <source>For more information, see the &lt;a href=&quot;https://hexdocs.pm/elixir/Supervisor.html&quot;&gt;&lt;code&gt;Supervisor&lt;/code&gt;&lt;/a&gt; module, the &lt;a href=&quot;https://hexdocs.pm/elixir/Supervisor.html#child_spec/2&quot;&gt;&lt;code&gt;Supervisor.child_spec/2&lt;/code&gt;&lt;/a&gt; function and the &lt;a href=&quot;https://hexdocs.pm/elixir/Supervisor.html#t:child_spec/0&quot;&gt;&lt;code&gt;Supervisor.child_spec/0&lt;/code&gt;&lt;/a&gt; type.</source>
          <target state="translated">Para obtener m&amp;aacute;s informaci&amp;oacute;n, consulte el m&amp;oacute;dulo &lt;a href=&quot;https://hexdocs.pm/elixir/Supervisor.html&quot;&gt; &lt;code&gt;Supervisor&lt;/code&gt; &lt;/a&gt; , la funci&amp;oacute;n &lt;a href=&quot;https://hexdocs.pm/elixir/Supervisor.html#child_spec/2&quot;&gt; &lt;code&gt;Supervisor.child_spec/2&lt;/code&gt; &lt;/a&gt; y el tipo &lt;a href=&quot;https://hexdocs.pm/elixir/Supervisor.html#t:child_spec/0&quot;&gt; &lt;code&gt;Supervisor.child_spec/0&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9ba2f8e0812ba8129e28893614e39bd76a33546b" translate="yes" xml:space="preserve">
          <source>For more information, see the &lt;a href=&quot;supervisor&quot;&gt;&lt;code&gt;Supervisor&lt;/code&gt;&lt;/a&gt; module, the &lt;a href=&quot;supervisor#child_spec/2&quot;&gt;&lt;code&gt;Supervisor.child_spec/2&lt;/code&gt;&lt;/a&gt; function and the &lt;a href=&quot;supervisor#t:child_spec/0&quot;&gt;&lt;code&gt;Supervisor.child_spec/0&lt;/code&gt;&lt;/a&gt; type.</source>
          <target state="translated">Para obtener m&amp;aacute;s informaci&amp;oacute;n, consulte el m&amp;oacute;dulo &lt;a href=&quot;supervisor&quot;&gt; &lt;code&gt;Supervisor&lt;/code&gt; &lt;/a&gt; , la funci&amp;oacute;n &lt;a href=&quot;supervisor#child_spec/2&quot;&gt; &lt;code&gt;Supervisor.child_spec/2&lt;/code&gt; &lt;/a&gt; y el tipo &lt;a href=&quot;supervisor#t:child_spec/0&quot;&gt; &lt;code&gt;Supervisor.child_spec/0&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1c2459bba39c2a32218e800abed73a1b40251809" translate="yes" xml:space="preserve">
          <source>For more information, see the &lt;code&gt;git config&lt;/code&gt; documentation: &lt;a href=&quot;https://git-scm.com/docs/git-config#git-config-urlltbasegtinsteadOf&quot;&gt;https://git-scm.com/docs/git-config#git-config-urlltbasegtinsteadOf&lt;/a&gt;</source>
          <target state="translated">Para obtener m&amp;aacute;s informaci&amp;oacute;n, consulte la documentaci&amp;oacute;n de &lt;code&gt;git config&lt;/code&gt; : &lt;a href=&quot;https://git-scm.com/docs/git-config#git-config-urlltbasegtinsteadOf&quot;&gt;https://git-scm.com/docs/git-config#git-config-urlltbasegtinsteadOf&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3d95ccf97994d2d052649c07b5320d1f38bf9f6a" translate="yes" xml:space="preserve">
          <source>For more information, see the &lt;code&gt;git config&lt;/code&gt; documentation: https://git-scm.com/docs/git-config#git-config-urlltbasegtinsteadOf</source>
          <target state="translated">Para obtener m&amp;aacute;s informaci&amp;oacute;n, consulte la documentaci&amp;oacute;n de &lt;code&gt;git config&lt;/code&gt; : https://git-scm.com/docs/git-config#git-config-urlltbasegtinsteadOf</target>
        </trans-unit>
        <trans-unit id="72d636c495936af4b6f2d13c4ec5f6492712b56a" translate="yes" xml:space="preserve">
          <source>For more options, keep an eye on the documentation for single Mix tasks; good examples are the &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Compile.html&quot;&gt;&lt;code&gt;Mix.Tasks.Compile&lt;/code&gt;&lt;/a&gt; task and all the specific compiler tasks (such as &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Compile.Elixir.html&quot;&gt;&lt;code&gt;Mix.Tasks.Compile.Elixir&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Compile.Erlang.html&quot;&gt;&lt;code&gt;Mix.Tasks.Compile.Erlang&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">Para obtener m&amp;aacute;s opciones, est&amp;eacute; atento a la documentaci&amp;oacute;n de las tareas Mixtas individuales; buenos ejemplos son la tarea &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Compile.html&quot;&gt; &lt;code&gt;Mix.Tasks.Compile&lt;/code&gt; &lt;/a&gt; y todas las tareas espec&amp;iacute;ficas del compilador (como &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Compile.Elixir.html&quot;&gt; &lt;code&gt;Mix.Tasks.Compile.Elixir&lt;/code&gt; &lt;/a&gt; o &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Compile.Erlang.html&quot;&gt; &lt;code&gt;Mix.Tasks.Compile.Erlang&lt;/code&gt; &lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="1db1a5e08950211f4efaa987901db5f4cb9b8017" translate="yes" xml:space="preserve">
          <source>For more options, keep an eye on the documentation for single Mix tasks; good examples are the &lt;a href=&quot;mix.tasks.compile&quot;&gt;&lt;code&gt;Mix.Tasks.Compile&lt;/code&gt;&lt;/a&gt; task and all the specific compiler tasks (such as &lt;a href=&quot;mix.tasks.compile.elixir&quot;&gt;&lt;code&gt;Mix.Tasks.Compile.Elixir&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;mix.tasks.compile.erlang&quot;&gt;&lt;code&gt;Mix.Tasks.Compile.Erlang&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">Para obtener m&amp;aacute;s opciones, est&amp;eacute; atento a la documentaci&amp;oacute;n de las tareas Mixtas individuales; buenos ejemplos son la tarea &lt;a href=&quot;mix.tasks.compile&quot;&gt; &lt;code&gt;Mix.Tasks.Compile&lt;/code&gt; &lt;/a&gt; y todas las tareas espec&amp;iacute;ficas del compilador (como &lt;a href=&quot;mix.tasks.compile.elixir&quot;&gt; &lt;code&gt;Mix.Tasks.Compile.Elixir&lt;/code&gt; &lt;/a&gt; o &lt;a href=&quot;mix.tasks.compile.erlang&quot;&gt; &lt;code&gt;Mix.Tasks.Compile.Erlang&lt;/code&gt; &lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="ab9291211cba201b17b9f64f55072345afbd7fc8" translate="yes" xml:space="preserve">
          <source>For most cases, use &lt;a href=&quot;https://hexdocs.pm/elixir/DateTime.html#now/2&quot;&gt;&lt;code&gt;DateTime.now/2&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://hexdocs.pm/elixir/DateTime.html#utc_now/1&quot;&gt;&lt;code&gt;DateTime.utc_now/1&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">En la mayor&amp;iacute;a de los casos, utilice &lt;a href=&quot;https://hexdocs.pm/elixir/DateTime.html#now/2&quot;&gt; &lt;code&gt;DateTime.now/2&lt;/code&gt; &lt;/a&gt; o &lt;a href=&quot;https://hexdocs.pm/elixir/DateTime.html#utc_now/1&quot;&gt; &lt;code&gt;DateTime.utc_now/1&lt;/code&gt; en su&lt;/a&gt; lugar.</target>
        </trans-unit>
        <trans-unit id="df72e64eacb9e3850dc8419637a02be86b270033" translate="yes" xml:space="preserve">
          <source>For now, let&amp;rsquo;s move on and explore the world of I/O in Elixir.</source>
          <target state="translated">Por ahora, sigamos adelante y exploremos el mundo de E / S en Elixir.</target>
        </trans-unit>
        <trans-unit id="9d92d262d1937649c7dcc6aa1826ed7218a816df" translate="yes" xml:space="preserve">
          <source>For now, let&amp;rsquo;s start by running &lt;code&gt;iex&lt;/code&gt; (or &lt;code&gt;iex.bat&lt;/code&gt; if you are on Windows PowerShell, where &lt;code&gt;iex&lt;/code&gt; is a PowerShell command) which stands for Interactive Elixir. In interactive mode, we can type any Elixir expression and get its result. Let&amp;rsquo;s warm up with some basic expressions.</source>
          <target state="translated">Por ahora, comencemos ejecutando &lt;code&gt;iex&lt;/code&gt; (o &lt;code&gt;iex.bat&lt;/code&gt; si est&amp;aacute; en Windows PowerShell, donde &lt;code&gt;iex&lt;/code&gt; es un comando de PowerShell) que significa Interactive Elixir. En modo interactivo, podemos escribir cualquier expresi&amp;oacute;n de Elixir y obtener su resultado. Calentar con algunas expresiones b&amp;aacute;sicas.</target>
        </trans-unit>
        <trans-unit id="f53fcbcb4286cbc82f5367680ea1d01a64e91602" translate="yes" xml:space="preserve">
          <source>For now, let&amp;rsquo;s start by running &lt;code&gt;iex&lt;/code&gt; (or &lt;code&gt;iex.bat&lt;/code&gt; if you are on Windows) which stands for Interactive Elixir. In interactive mode, we can type any Elixir expression and get its result. Let&amp;rsquo;s warm up with some basic expressions.</source>
          <target state="translated">Por ahora, comencemos ejecutando &lt;code&gt;iex&lt;/code&gt; (o &lt;code&gt;iex.bat&lt;/code&gt; si est&amp;aacute; en Windows) que significa Interactive Elixir. En modo interactivo, podemos escribir cualquier expresi&amp;oacute;n de Elixir y obtener su resultado. Calentamos con algunas expresiones b&amp;aacute;sicas.</target>
        </trans-unit>
        <trans-unit id="8f7af079e462a2a151d8084f9a25584ba5fdb2e5" translate="yes" xml:space="preserve">
          <source>For now, let&amp;rsquo;s write some tests to guarantee our GenServer works as expected.</source>
          <target state="translated">Por ahora, escribamos algunas pruebas para garantizar que nuestro GenServer funcione como se esperaba.</target>
        </trans-unit>
        <trans-unit id="148e18f793d17b1f034ccd4f65b51bd7c72b46fe" translate="yes" xml:space="preserve">
          <source>For now, there is a more important bug we need to fix: what happens if our TCP acceptor crashes? Since there is no supervision, the server dies and we won&amp;rsquo;t be able to serve more requests, because it won&amp;rsquo;t be restarted. That&amp;rsquo;s why we must move our server to a supervision tree.</source>
          <target state="translated">Por ahora, hay un error m&amp;aacute;s importante que debemos corregir: &amp;iquest;qu&amp;eacute; sucede si nuestro aceptador de TCP falla? Como no hay supervisi&amp;oacute;n, el servidor muere y no podremos atender m&amp;aacute;s solicitudes porque no se reiniciar&amp;aacute;. Por eso debemos mover nuestro servidor a un &amp;aacute;rbol de supervisi&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="87f6316211bcc19e1a9eaf598a9dc404f5c35c3f" translate="yes" xml:space="preserve">
          <source>For now, we don&amp;rsquo;t have a mechanism to run tests, but we know that a function named &amp;ldquo;test hello&amp;rdquo; was defined behind the scenes. When we invoke it, it should fail:</source>
          <target state="translated">Por ahora, no tenemos un mecanismo para ejecutar pruebas, pero sabemos que una funci&amp;oacute;n llamada &quot;prueba hola&quot; se defini&amp;oacute; detr&amp;aacute;s de escena. Cuando lo invocamos, deber&amp;iacute;a fallar:</target>
        </trans-unit>
        <trans-unit id="c1b2f8891476cbc97734acacb2637f18c16dc0b0" translate="yes" xml:space="preserve">
          <source>For now, we will write only the server callbacks for our bucket registering logic, without providing a proper API, which we will do later.</source>
          <target state="translated">Por ahora,escribiremos sólo las devoluciones de llamada del servidor para nuestra lógica de registro del cubo,sin proporcionar una API adecuada,lo que haremos más tarde.</target>
        </trans-unit>
        <trans-unit id="dc972a5ae988c88cbdf8abf55ced2fc62781c361" translate="yes" xml:space="preserve">
          <source>For other nodes in the network, this is the same as the node going down. Only possible when the node was started with &lt;a href=&quot;#start/3&quot;&gt;&lt;code&gt;Node.start/3&lt;/code&gt;&lt;/a&gt;, otherwise returns &lt;code&gt;{:error, :not_allowed}&lt;/code&gt;. Returns &lt;code&gt;{:error, :not_found}&lt;/code&gt; if the local node is not alive.</source>
          <target state="translated">Para otros nodos de la red, esto es lo mismo que el nodo que est&amp;aacute; cayendo. Solo es posible cuando el nodo se inici&amp;oacute; con &lt;a href=&quot;#start/3&quot;&gt; &lt;code&gt;Node.start/3&lt;/code&gt; &lt;/a&gt; ; de lo contrario, devuelve &lt;code&gt;{:error, :not_allowed}&lt;/code&gt; . Devuelve &lt;code&gt;{:error, :not_found}&lt;/code&gt; si el nodo local no est&amp;aacute; vivo.</target>
        </trans-unit>
        <trans-unit id="cdf1e2badff2fb623eee0d15afc921e9e14a706d" translate="yes" xml:space="preserve">
          <source>For other nodes in the network, this is the same as the node going down. Only possible when the node was started with &lt;a href=&quot;node#start/3&quot;&gt;&lt;code&gt;Node.start/3&lt;/code&gt;&lt;/a&gt;, otherwise returns &lt;code&gt;{:error, :not_allowed}&lt;/code&gt;. Returns &lt;code&gt;{:error, :not_found}&lt;/code&gt; if the local node is not alive.</source>
          <target state="translated">Para otros nodos en la red, esto es lo mismo que el nodo que se cae. Solo es posible cuando el nodo se inici&amp;oacute; con &lt;a href=&quot;node#start/3&quot;&gt; &lt;code&gt;Node.start/3&lt;/code&gt; &lt;/a&gt; ; de lo contrario, devuelve &lt;code&gt;{:error, :not_allowed}&lt;/code&gt; . Devuelve &lt;code&gt;{:error, :not_found}&lt;/code&gt; si el nodo local no est&amp;aacute; vivo.</target>
        </trans-unit>
        <trans-unit id="6dc55533805b090f117cb41ae2a4faf8a8f47746" translate="yes" xml:space="preserve">
          <source>For our routing layer, we are going to use tasks, but feel free to explore the other alternatives too.</source>
          <target state="translated">Para nuestra capa de enrutamiento,vamos a utilizar tareas,pero siéntase libre de explorar las otras alternativas también.</target>
        </trans-unit>
        <trans-unit id="40e9bcfd5323b3ba76bb77edb0dbd378b076a7c8" translate="yes" xml:space="preserve">
          <source>For qualified calls, Elixir also allows the function name to be written between double- or single-quotes, allowing calls such as &lt;code&gt;Math.&quot;++add++&quot;(1, 2)&lt;/code&gt;. Operators can be used as qualified calls without a need for quote, such as &lt;code&gt;Kernel.+(1, 2)&lt;/code&gt;.</source>
          <target state="translated">Para llamadas calificadas, Elixir tambi&amp;eacute;n permite que el nombre de la funci&amp;oacute;n se escriba entre comillas simples o dobles, permitiendo llamadas como &lt;code&gt;Math.&quot;++add++&quot;(1, 2)&lt;/code&gt; . Los operadores se pueden utilizar como llamadas calificadas sin necesidad de cotizaci&amp;oacute;n, como &lt;code&gt;Kernel.+(1, 2)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="42f87f4978894da77ca58ac8711d1cc43114d9dc" translate="yes" xml:space="preserve">
          <source>For reference information about operators (and ordering), check the &lt;a href=&quot;https://hexdocs.pm/elixir/operators.html&quot;&gt;reference page on operators&lt;/a&gt;.</source>
          <target state="translated">Para obtener informaci&amp;oacute;n de referencia sobre operadores (y pedidos), consulte la &lt;a href=&quot;https://hexdocs.pm/elixir/operators.html&quot;&gt;p&amp;aacute;gina de referencia sobre operadores&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="45c16b662757456a064165b8b1b3ab76da91cf9d" translate="yes" xml:space="preserve">
          <source>For runtime configuration, you can use the &lt;code&gt;config/runtime.exs&lt;/code&gt; file. It is executed right before applications start in both Mix and releases (assembled with &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Release.html&quot;&gt;&lt;code&gt;mix release&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">Para la configuraci&amp;oacute;n del tiempo de ejecuci&amp;oacute;n, puede utilizar el archivo &lt;code&gt;config/runtime.exs&lt;/code&gt; . Se ejecuta justo antes de que las aplicaciones comiencen tanto en Mix como en versiones (ensambladas con &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Release.html&quot;&gt; &lt;code&gt;mix release&lt;/code&gt; &lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="cf040e76c44787262309528d14284c46bf630986" translate="yes" xml:space="preserve">
          <source>For selecting a maximum value out of two consider using &lt;a href=&quot;kernel#max/2&quot;&gt;&lt;code&gt;Kernel.max/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Para seleccionar un valor m&amp;aacute;ximo de dos, considere usar &lt;a href=&quot;kernel#max/2&quot;&gt; &lt;code&gt;Kernel.max/2&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1562be9dbea9e9ca6fb9c201080d343b056ee54f" translate="yes" xml:space="preserve">
          <source>For selecting a minimal value out of two consider using &lt;a href=&quot;kernel#min/2&quot;&gt;&lt;code&gt;Kernel.min/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Para seleccionar un valor m&amp;iacute;nimo de dos, considere usar &lt;a href=&quot;kernel#min/2&quot;&gt; &lt;code&gt;Kernel.min/2&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a4f8060b8066310c46625a879a6c7a04a6546c32" translate="yes" xml:space="preserve">
          <source>For simplicity, we will define a routing table that always points to the current node. That&amp;rsquo;s the table we will use for development and most of our tests. Back in &lt;code&gt;config/config.exs&lt;/code&gt;, add this line:</source>
          <target state="translated">Para simplificar, definiremos una tabla de enrutamiento que siempre apunte al nodo actual. Esa es la tabla que usaremos para el desarrollo y la mayor&amp;iacute;a de nuestras pruebas. De vuelta en &lt;code&gt;config/config.exs&lt;/code&gt; , agregue esta l&amp;iacute;nea:</target>
        </trans-unit>
        <trans-unit id="57260814a626a0bc7ec7efb7558c4019fed8ea33" translate="yes" xml:space="preserve">
          <source>For such cases, there is a special break-trigger (&lt;code&gt;#iex:break&lt;/code&gt;) that when encountered on a line by itself will force the shell to break out of any pending expression and return to its normal state:</source>
          <target state="translated">Para tales casos, hay un disparador de ruptura especial ( &lt;code&gt;#iex:break&lt;/code&gt; ) que cuando se encuentra en una l&amp;iacute;nea por s&amp;iacute; solo, forzar&amp;aacute; al shell a salir de cualquier expresi&amp;oacute;n pendiente y volver a su estado normal:</target>
        </trans-unit>
        <trans-unit id="b2bcf831b712f7880bfa8b2d774584d0dac9e8fa" translate="yes" xml:space="preserve">
          <source>For such, you can explicitly pass the current module scope as argument:</source>
          <target state="translated">Para ello,puede pasar explícitamente el alcance del módulo actual como argumento:</target>
        </trans-unit>
        <trans-unit id="f5574a61794819cd12b11f08763b8c0faad5bbf7" translate="yes" xml:space="preserve">
          <source>For the actual date, time and datetime structures, see &lt;a href=&quot;date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;time&quot;&gt;&lt;code&gt;Time&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;naivedatetime&quot;&gt;&lt;code&gt;NaiveDateTime&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;datetime&quot;&gt;&lt;code&gt;DateTime&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Para conocer las estructuras de fecha, hora y fecha y hora reales, consulte &lt;a href=&quot;date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;time&quot;&gt; &lt;code&gt;Time&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;naivedatetime&quot;&gt; &lt;code&gt;NaiveDateTime&lt;/code&gt; &lt;/a&gt; y &lt;a href=&quot;datetime&quot;&gt; &lt;code&gt;DateTime&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b01361fded820f92aa3d34dea84f82e83756a312" translate="yes" xml:space="preserve">
          <source>For the actual date, time and datetime structures, see &lt;a href=&quot;https://hexdocs.pm/elixir/Date.html&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://hexdocs.pm/elixir/Time.html&quot;&gt;&lt;code&gt;Time&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://hexdocs.pm/elixir/NaiveDateTime.html&quot;&gt;&lt;code&gt;NaiveDateTime&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://hexdocs.pm/elixir/DateTime.html&quot;&gt;&lt;code&gt;DateTime&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Para conocer las estructuras de fecha, hora y fecha y hora reales, consulte &lt;a href=&quot;https://hexdocs.pm/elixir/Date.html&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;https://hexdocs.pm/elixir/Time.html&quot;&gt; &lt;code&gt;Time&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;https://hexdocs.pm/elixir/NaiveDateTime.html&quot;&gt; &lt;code&gt;NaiveDateTime&lt;/code&gt; &lt;/a&gt; y &lt;a href=&quot;https://hexdocs.pm/elixir/DateTime.html&quot;&gt; &lt;code&gt;DateTime&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="dd4507d56d8ae26835032192a96f8f942cf347e1" translate="yes" xml:space="preserve">
          <source>For the cases where you do expect a file to exist (and the lack of that file is truly an &lt;em&gt;error&lt;/em&gt;) you may use &lt;code&gt;File.read!/1&lt;/code&gt;:</source>
          <target state="translated">Para los casos en los que espera que exista un archivo (y la falta de ese archivo es realmente un &lt;em&gt;error&lt;/em&gt; ) puede usar &lt;code&gt;File.read!/1&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="feff331a64ed11f441e7848a674afa89ee8071f6" translate="yes" xml:space="preserve">
          <source>For the list of available options, see &lt;a href=&quot;http://www.erlang.org/doc/man/erlang.html#spawn-2&quot;&gt;&lt;code&gt;:erlang.spawn/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Para ver la lista de opciones disponibles, consulte &lt;a href=&quot;http://www.erlang.org/doc/man/erlang.html#spawn-2&quot;&gt; &lt;code&gt;:erlang.spawn/2&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6639a98f71e3255b9d9416659477b36d9f9e63f9" translate="yes" xml:space="preserve">
          <source>For the list of available options, see &lt;a href=&quot;http://www.erlang.org/doc/man/erlang.html#spawn-4&quot;&gt;&lt;code&gt;:erlang.spawn/4&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Para ver la lista de opciones disponibles, consulte &lt;a href=&quot;http://www.erlang.org/doc/man/erlang.html#spawn-4&quot;&gt; &lt;code&gt;:erlang.spawn/4&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d102dfda15fab2a12aecfca86ecdab6b9328f4c7" translate="yes" xml:space="preserve">
          <source>For the list of available options, see &lt;a href=&quot;http://www.erlang.org/doc/man/erlang.html#spawn-5&quot;&gt;&lt;code&gt;:erlang.spawn/5&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Para ver la lista de opciones disponibles, consulte &lt;a href=&quot;http://www.erlang.org/doc/man/erlang.html#spawn-5&quot;&gt; &lt;code&gt;:erlang.spawn/5&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="147c5308097c95403b6c3b710471092817aba390" translate="yes" xml:space="preserve">
          <source>For the list of available options, see &lt;a href=&quot;http://www.erlang.org/doc/man/erlang.html#spawn_opt-3&quot;&gt;&lt;code&gt;:erlang.spawn_opt/3&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Para obtener la lista de opciones disponibles, consulte &lt;a href=&quot;http://www.erlang.org/doc/man/erlang.html#spawn_opt-3&quot;&gt; &lt;code&gt;:erlang.spawn_opt/3&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ad4e9a7fc7900bbb60654000287c4ad75fc0eadd" translate="yes" xml:space="preserve">
          <source>For the list of supported warnings, see &lt;a href=&quot;http://www.erlang.org/doc/man/dialyzer.html&quot;&gt;&lt;code&gt;:dialyzer&lt;/code&gt; module&lt;/a&gt;.</source>
          <target state="translated">Para obtener la lista de advertencias admitidas, consulte &lt;a href=&quot;http://www.erlang.org/doc/man/dialyzer.html&quot;&gt; &lt;code&gt;:dialyzer&lt;/code&gt; m&amp;oacute;dulo dializador&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a293fce2f70fe18d9d7bb3411509a1883ca74c72" translate="yes" xml:space="preserve">
          <source>For this chapter, we will be using files instead of running code samples in IEx. That&amp;rsquo;s because the code samples will span multiple lines of code and typing them all in IEx can be counter-productive. You should be able to run the code samples by saving them into a &lt;code&gt;macros.exs&lt;/code&gt; file and running it with &lt;code&gt;elixir macros.exs&lt;/code&gt; or &lt;code&gt;iex macros.exs&lt;/code&gt;.</source>
          <target state="translated">Para este cap&amp;iacute;tulo, utilizaremos archivos en lugar de ejecutar ejemplos de c&amp;oacute;digo en IEx. Esto se debe a que las muestras de c&amp;oacute;digo abarcar&amp;aacute;n varias l&amp;iacute;neas de c&amp;oacute;digo y escribirlas todas en IEx puede ser contraproducente. Deber&amp;iacute;a poder ejecutar los ejemplos de c&amp;oacute;digo guard&amp;aacute;ndolos en un archivo &lt;code&gt;macros.exs&lt;/code&gt; y ejecut&amp;aacute;ndolo con &lt;code&gt;elixir macros.exs&lt;/code&gt; o &lt;code&gt;iex macros.exs&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="467f37cafc343b5dd34e43c5cc0cac653196e6ee" translate="yes" xml:space="preserve">
          <source>For this reason, &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;mix test&lt;/code&gt;&lt;/a&gt; supports partitioning the test files across different Elixir instances. This is done by setting the &lt;code&gt;--partitions&lt;/code&gt; option to an integer, with the number of partitions, and setting the &lt;code&gt;MIX_TEST_PARTITION&lt;/code&gt; environment variable to control which test partition that particular instance is running. This can also be useful if you want to distribute testing across multiple machines.</source>
          <target state="translated">Por esta raz&amp;oacute;n, la &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;mix test&lt;/code&gt; &lt;/a&gt; admite la partici&amp;oacute;n de los archivos de prueba en diferentes instancias de Elixir. Esto se hace configurando la opci&amp;oacute;n &lt;code&gt;--partitions&lt;/code&gt; en un n&amp;uacute;mero entero, con el n&amp;uacute;mero de particiones, y configurando la variable de entorno &lt;code&gt;MIX_TEST_PARTITION&lt;/code&gt; para controlar qu&amp;eacute; partici&amp;oacute;n de prueba est&amp;aacute; ejecutando esa instancia en particular. Esto tambi&amp;eacute;n puede resultar &amp;uacute;til si desea distribuir las pruebas en varias m&amp;aacute;quinas.</target>
        </trans-unit>
        <trans-unit id="945a8597b683042909912d13ab0af0f05f4a1912" translate="yes" xml:space="preserve">
          <source>For this reason, Mix also provides an &lt;code&gt;--only&lt;/code&gt; option that excludes all tests and includes only the given ones:</source>
          <target state="translated">Por esta raz&amp;oacute;n, Mix tambi&amp;eacute;n proporciona una opci&amp;oacute;n &lt;code&gt;--only&lt;/code&gt; que excluye todas las pruebas e incluye solo las dadas:</target>
        </trans-unit>
        <trans-unit id="5942291bf8303552448ccf23f92c1cc85a264e74" translate="yes" xml:space="preserve">
          <source>For this reason, Mix supports &amp;ldquo;umbrella projects&amp;rdquo;. Umbrella projects are used to build applications that run together in a single repository. That is exactly the style we are going to explore in the next sections.</source>
          <target state="translated">Por esta raz&amp;oacute;n, Mix apoya los &amp;ldquo;proyectos generales&amp;rdquo;. Los proyectos Umbrella se utilizan para crear aplicaciones que se ejecutan juntas en un solo repositorio. Ese es exactamente el estilo que vamos a explorar en las siguientes secciones.</target>
        </trans-unit>
        <trans-unit id="c1c939e13c6bbd8a4d4a1a8b54e616c8009ed164" translate="yes" xml:space="preserve">
          <source>For this reason, most structs provide a &quot;compare&quot; function, such as &lt;a href=&quot;https://hexdocs.pm/elixir/Date.html#compare/2&quot;&gt;&lt;code&gt;Date.compare/2&lt;/code&gt;&lt;/a&gt;, which receives two structs and returns &lt;code&gt;:lt&lt;/code&gt; (less-than), &lt;code&gt;:eq&lt;/code&gt; (equal to), and &lt;code&gt;:gt&lt;/code&gt; (greater-than). If you pass a module as the sorting function, Elixir will automatically use the &lt;code&gt;compare/2&lt;/code&gt; function of said module:</source>
          <target state="translated">Por este motivo, la mayor&amp;iacute;a de las estructuras proporcionan una funci&amp;oacute;n de &quot;comparaci&amp;oacute;n&quot;, como &lt;a href=&quot;https://hexdocs.pm/elixir/Date.html#compare/2&quot;&gt; &lt;code&gt;Date.compare/2&lt;/code&gt; &lt;/a&gt; , que recibe dos estructuras y devuelve &lt;code&gt;:lt&lt;/code&gt; (menor que) ,: &lt;code&gt;:eq&lt;/code&gt; (igual a) y &lt;code&gt;:gt&lt;/code&gt; (mayor que) . Si pasa un m&amp;oacute;dulo como funci&amp;oacute;n de clasificaci&amp;oacute;n, Elixir usar&amp;aacute; autom&amp;aacute;ticamente la funci&amp;oacute;n &lt;code&gt;compare/2&lt;/code&gt; de dicho m&amp;oacute;dulo:</target>
        </trans-unit>
        <trans-unit id="db439eca1a575baf9e479914a743abe4e55ae0ad" translate="yes" xml:space="preserve">
          <source>For this reason, the task touches your &lt;code&gt;:compile_path&lt;/code&gt; directory and sets the modification time to the current time and date at the end of each compilation. You can force compilation regardless of modification times by passing the &lt;code&gt;--force&lt;/code&gt; option.</source>
          <target state="translated">Por esta raz&amp;oacute;n, la tarea toca su directorio &lt;code&gt;:compile_path&lt;/code&gt; y establece la hora de modificaci&amp;oacute;n a la fecha y hora actual al final de cada compilaci&amp;oacute;n. Puede forzar la compilaci&amp;oacute;n independientemente de los tiempos de modificaci&amp;oacute;n pasando la opci&amp;oacute;n &lt;code&gt;--force&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="32446efaffd01773633a5c5b128367d85e1cc28b" translate="yes" xml:space="preserve">
          <source>For those reasons, reading the application environment at runtime should be the first choice. However, if you really have to read the application environment during compilation, we recommend you to use &lt;a href=&quot;#compile_env/3&quot;&gt;&lt;code&gt;compile_env/3&lt;/code&gt;&lt;/a&gt; instead:</source>
          <target state="translated">Por esas razones, leer el entorno de la aplicaci&amp;oacute;n en tiempo de ejecuci&amp;oacute;n deber&amp;iacute;a ser la primera opci&amp;oacute;n. Sin embargo, si realmente tiene que leer el entorno de la aplicaci&amp;oacute;n durante la compilaci&amp;oacute;n, le recomendamos que utilice &lt;a href=&quot;#compile_env/3&quot;&gt; &lt;code&gt;compile_env/3&lt;/code&gt; en su&lt;/a&gt; lugar:</target>
        </trans-unit>
        <trans-unit id="c4c8e038c25d83bf6d852a971892fb340f9e2eff" translate="yes" xml:space="preserve">
          <source>For those who enjoy breakpoints but are rather interested in a visual debugger, Erlang/OTP ships with a graphical debugger conveniently named &lt;code&gt;:debugger&lt;/code&gt;. Let&amp;rsquo;s define a module in a file named &lt;code&gt;example.ex&lt;/code&gt;:</source>
          <target state="translated">Para aquellos que disfrutan de los puntos de interrupci&amp;oacute;n pero est&amp;aacute;n m&amp;aacute;s interesados ​​en un depurador visual, Erlang / OTP viene con un depurador gr&amp;aacute;fico convenientemente llamado &lt;code&gt;:debugger&lt;/code&gt; . Definamos un m&amp;oacute;dulo en un archivo llamado &lt;code&gt;example.ex&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="cfae34045d5d895009311d2a2a010463848d8c45" translate="yes" xml:space="preserve">
          <source>For those who enjoy breakpoints but are rather interested in a visual debugger, Erlang/OTP ships with a graphical debugger conveniently named &lt;code&gt;:debugger&lt;/code&gt;. Let&amp;rsquo;s define a module:</source>
          <target state="translated">Para aquellos que disfrutan de los puntos de interrupci&amp;oacute;n pero est&amp;aacute;n m&amp;aacute;s interesados ​​en un depurador visual, Erlang / OTP viene con un depurador gr&amp;aacute;fico convenientemente llamado &lt;code&gt;:debugger&lt;/code&gt; . Definamos un m&amp;oacute;dulo:</target>
        </trans-unit>
        <trans-unit id="bc2d3f32f1c4138eee3831b35b324f9d5504e4b5" translate="yes" xml:space="preserve">
          <source>For unique registries it can be used to conditionally unregister a key on the basis of whether or not it matches a particular value.</source>
          <target state="translated">En el caso de los registros únicos,puede utilizarse para desregistrar condicionalmente una clave en función de si coincide o no con un valor determinado.</target>
        </trans-unit>
        <trans-unit id="14cd0b7637eff1b0c6bd870cfbdfa9301754b7b7" translate="yes" xml:space="preserve">
          <source>For unique registries, a single partition lookup is necessary. For duplicate registries, all partitions must be looked up.</source>
          <target state="translated">Para los registros únicos,es necesaria una búsqueda de una sola partición.Para los registros duplicados,todas las particiones deben ser buscadas.</target>
        </trans-unit>
        <trans-unit id="a33570d2441921e7831b3c41af0473896917c621" translate="yes" xml:space="preserve">
          <source>For unique registries:</source>
          <target state="translated">Para los registros únicos:</target>
        </trans-unit>
        <trans-unit id="a494479b1595316138e63803f01b27c1d049ecb0" translate="yes" xml:space="preserve">
          <source>For variables, any identifier starting with an underscore should indicate an unused variable. For example:</source>
          <target state="translated">En el caso de las variables,cualquier identificador que comience con un guión bajo debe indicar una variable no utilizada.Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="c93842334df0e58537ff9e4564650c5a06d71f1b" translate="yes" xml:space="preserve">
          <source>Forces the current group to be unfit.</source>
          <target state="translated">Obliga al grupo actual a no ser apto.</target>
        </trans-unit>
        <trans-unit id="c5bf5789dde7373724874c65a12c156bc9c3ab1f" translate="yes" xml:space="preserve">
          <source>Forces the disconnection of a node.</source>
          <target state="translated">Fuerza la desconexión de un nodo.</target>
        </trans-unit>
        <trans-unit id="815a28d19a43ab21cf99300b9b2fd43fa459fe43" translate="yes" xml:space="preserve">
          <source>Forces the path to be a relative path.</source>
          <target state="translated">Obliga a que el camino sea un camino relativo.</target>
        </trans-unit>
        <trans-unit id="0a683f099c5cd32d972be2f3a92f5a845ceb5fd5" translate="yes" xml:space="preserve">
          <source>Foreword</source>
          <target state="translated">Foreword</target>
        </trans-unit>
        <trans-unit id="041a5dec481d6bf0724caeaa84bc135d7d9062d4" translate="yes" xml:space="preserve">
          <source>Format</source>
          <target state="translated">Format</target>
        </trans-unit>
        <trans-unit id="5c35ec0ad733522cc571cfec85232066d155794d" translate="yes" xml:space="preserve">
          <source>Formats a chardata-like argument by converting named ANSI sequences into actual ANSI codes.</source>
          <target state="translated">Formatea un argumento de tipo chardata convirtiendo secuencias ANSI nombradas en códigos ANSI reales.</target>
        </trans-unit>
        <trans-unit id="2207193e5d684c4dc9f415ae14757dea81eca345" translate="yes" xml:space="preserve">
          <source>Formats a file.</source>
          <target state="translated">Formatea un archivo.</target>
        </trans-unit>
        <trans-unit id="cafa245a564712637537f38b69c740ea4dde1a5f" translate="yes" xml:space="preserve">
          <source>Formats a given document for a given width.</source>
          <target state="translated">Formatea un documento determinado para un ancho determinado.</target>
        </trans-unit>
        <trans-unit id="8dfa3afe7b66a75ca4db90cdffb1c56ec5f2cef4" translate="yes" xml:space="preserve">
          <source>Formats an exit. It returns a string.</source>
          <target state="translated">Formatea una salida.Devuelve una cadena.</target>
        </trans-unit>
        <trans-unit id="6efb90c18f18ca530ad6f75b186ea9a0dab0abb7" translate="yes" xml:space="preserve">
          <source>Formats and truncates messages on the client to avoid clogging &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Logger&lt;/code&gt;&lt;/a&gt; backends.</source>
          <target state="translated">Formatea y trunca los mensajes en el cliente para evitar obstruir los backends de &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;Logger&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="56622496774bb19434d2ebee47141c996a87f22d" translate="yes" xml:space="preserve">
          <source>Formats date as chardata.</source>
          <target state="translated">Los formatos de fecha como chardata.</target>
        </trans-unit>
        <trans-unit id="027d7a70820717a59658836a98131d6522ec7975" translate="yes" xml:space="preserve">
          <source>Formats filters used to constrain cases to be run.</source>
          <target state="translated">Los filtros de formato utilizados para restringir los casos a ser ejecutados.</target>
        </trans-unit>
        <trans-unit id="8c5df1d8fe3d3f335538a7bdda896042d42452a8" translate="yes" xml:space="preserve">
          <source>Formats received datetime into a string.</source>
          <target state="translated">Los formatos recibieron la hora de la fecha en una cadena.</target>
        </trans-unit>
        <trans-unit id="aa53a753f568d1640d41923f79bf478cc8554997" translate="yes" xml:space="preserve">
          <source>Formats the error reason returned by &lt;a href=&quot;#start/2&quot;&gt;&lt;code&gt;start/2&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#ensure_started/2&quot;&gt;&lt;code&gt;ensure_started/2&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#stop/1&quot;&gt;&lt;code&gt;stop/1&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#load/1&quot;&gt;&lt;code&gt;load/1&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#unload/1&quot;&gt;&lt;code&gt;unload/1&lt;/code&gt;&lt;/a&gt;, returns a string.</source>
          <target state="translated">Formatea el motivo del error devuelto por &lt;a href=&quot;#start/2&quot;&gt; &lt;code&gt;start/2&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#ensure_started/2&quot;&gt; &lt;code&gt;ensure_started/2&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#stop/1&quot;&gt; &lt;code&gt;stop/1&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#load/1&quot;&gt; &lt;code&gt;load/1&lt;/code&gt; &lt;/a&gt; y &lt;a href=&quot;#unload/1&quot;&gt; &lt;code&gt;unload/1&lt;/code&gt; &lt;/a&gt; , devuelve una cadena.</target>
        </trans-unit>
        <trans-unit id="e18bb89882580c7f86301b123f406d45a0f80a81" translate="yes" xml:space="preserve">
          <source>Formats the given &lt;code&gt;file&lt;/code&gt; and &lt;code&gt;line&lt;/code&gt; as shown in stacktraces.</source>
          <target state="translated">Formatea el &lt;code&gt;file&lt;/code&gt; y la &lt;code&gt;line&lt;/code&gt; dados como se muestra en stacktraces.</target>
        </trans-unit>
        <trans-unit id="7f7ec50c392208c557864813c0cfdc9b2645d9c5" translate="yes" xml:space="preserve">
          <source>Formats the given &lt;code&gt;file&lt;/code&gt; and &lt;code&gt;line&lt;/code&gt; as shown in stacktraces. If any of the values are &lt;code&gt;nil&lt;/code&gt;, they are omitted.</source>
          <target state="translated">Formatea el &lt;code&gt;file&lt;/code&gt; y la &lt;code&gt;line&lt;/code&gt; dados como se muestra en stacktraces. Si alguno de los valores es &lt;code&gt;nil&lt;/code&gt; , se omite.</target>
        </trans-unit>
        <trans-unit id="aa90b5e3e8aaedcbfa1f49413d30ef681c6976ab" translate="yes" xml:space="preserve">
          <source>Formats the given &lt;code&gt;file&lt;/code&gt;, &lt;code&gt;line&lt;/code&gt;, and &lt;code&gt;column&lt;/code&gt; as shown in stacktraces.</source>
          <target state="translated">Formatea el &lt;code&gt;file&lt;/code&gt; , la &lt;code&gt;line&lt;/code&gt; y la &lt;code&gt;column&lt;/code&gt; a dados como se muestra en stacktraces.</target>
        </trans-unit>
        <trans-unit id="43daea1857449413e5d2961950390283bfbd89a9" translate="yes" xml:space="preserve">
          <source>Formats the given code &lt;code&gt;string&lt;/code&gt;.</source>
          <target state="translated">Formatea la &lt;code&gt;string&lt;/code&gt; c&amp;oacute;digo dada .</target>
        </trans-unit>
        <trans-unit id="4e9ff0af2c46ca0408f0eb37c63e3365599d3452" translate="yes" xml:space="preserve">
          <source>Formats the given files and patterns.</source>
          <target state="translated">Formatea los archivos y patrones dados.</target>
        </trans-unit>
        <trans-unit id="60cbeba6574b12f984495c88bbbacdd53f31a94a" translate="yes" xml:space="preserve">
          <source>Formats the location for &lt;a href=&quot;#whereami/3&quot;&gt;&lt;code&gt;whereami/3&lt;/code&gt;&lt;/a&gt; prying.</source>
          <target state="translated">&lt;a href=&quot;#whereami/3&quot;&gt; &lt;code&gt;whereami/3&lt;/code&gt; &lt;/a&gt; la ubicaci&amp;oacute;n para la curiosidad whereami / 3 .</target>
        </trans-unit>
        <trans-unit id="095114a79701908ee2dfdcd7beb556b92bb7fa82" translate="yes" xml:space="preserve">
          <source>Formats the stacktrace.</source>
          <target state="translated">Formatea el stacktrace.</target>
        </trans-unit>
        <trans-unit id="bc17a3e28e6db9da82c06d3e64dd8f9133ab1362" translate="yes" xml:space="preserve">
          <source>Formats time as chardata.</source>
          <target state="translated">Formatea el tiempo como chardata.</target>
        </trans-unit>
        <trans-unit id="5fe0bd39dac4ab949c5775de27530dde1ae6b8b7" translate="yes" xml:space="preserve">
          <source>Formats time taken running the test suite.</source>
          <target state="translated">Formatos de tiempo de ejecución de la suite de pruebas.</target>
        </trans-unit>
        <trans-unit id="15bac6318ac5108c02b6ce4ab557e2ea1f9cdf7e" translate="yes" xml:space="preserve">
          <source>Formatted text output</source>
          <target state="translated">Salida de texto formateado</target>
        </trans-unit>
        <trans-unit id="c66bee8a4119b5327ef887f4d0279de0d7aa74f7" translate="yes" xml:space="preserve">
          <source>Formatters are &lt;a href=&quot;https://hexdocs.pm/elixir/GenServer.html&quot;&gt;&lt;code&gt;GenServer&lt;/code&gt;&lt;/a&gt;s specified during ExUnit configuration that receive a series of events as casts.</source>
          <target state="translated">Los formateadores son &lt;a href=&quot;https://hexdocs.pm/elixir/GenServer.html&quot;&gt; &lt;code&gt;GenServer&lt;/code&gt; &lt;/a&gt; especificados durante la configuraci&amp;oacute;n de ExUnit que reciben una serie de eventos como conversiones.</target>
        </trans-unit>
        <trans-unit id="c4eab01558e7f8dfc62c9bd7e738281bda6c0c43" translate="yes" xml:space="preserve">
          <source>Formatting options</source>
          <target state="translated">Opciones de formato</target>
        </trans-unit>
        <trans-unit id="d313dfa968201dd94ad67d87fc3344bb38c0890c" translate="yes" xml:space="preserve">
          <source>Formatting syntax</source>
          <target state="translated">Sintaxis de formato</target>
        </trans-unit>
        <trans-unit id="4bec9575721b2739ed1e7c56eb6c8471084fcbcf" translate="yes" xml:space="preserve">
          <source>Forms</source>
          <target state="translated">Forms</target>
        </trans-unit>
        <trans-unit id="8b2cd2532672c31ff20ceae8b0d526cd937086f0" translate="yes" xml:space="preserve">
          <source>Forwards the error to the current process.</source>
          <target state="translated">Reenvía el error al proceso actual.</target>
        </trans-unit>
        <trans-unit id="9fdf06a3445d03e7647fe9c67a18a17eb8735986" translate="yes" xml:space="preserve">
          <source>Forwards the message to the current process.</source>
          <target state="translated">Reenvía el mensaje al proceso actual.</target>
        </trans-unit>
        <trans-unit id="39a119adde6f197e8aa3e8c2dbd49285e486f01b" translate="yes" xml:space="preserve">
          <source>Fractional second precision stays the same in a similar way to &lt;a href=&quot;https://hexdocs.pm/elixir/NaiveDateTime.html#add/2&quot;&gt;&lt;code&gt;NaiveDateTime.add/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">La precisi&amp;oacute;n de una fracci&amp;oacute;n de segundo permanece igual de manera similar a &lt;a href=&quot;https://hexdocs.pm/elixir/NaiveDateTime.html#add/2&quot;&gt; &lt;code&gt;NaiveDateTime.add/2&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="addaa186164be6af6cfe3af8285a06cb4198e95d" translate="yes" xml:space="preserve">
          <source>Fractional second precision stays the same in a similar way to &lt;a href=&quot;naivedatetime#add/2&quot;&gt;&lt;code&gt;NaiveDateTime.add/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">La precisi&amp;oacute;n de una fracci&amp;oacute;n de segundo permanece igual de manera similar a &lt;a href=&quot;naivedatetime#add/2&quot;&gt; &lt;code&gt;NaiveDateTime.add/2&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4802179f7c5db9ab1d4360e530bc8c507bf436cc" translate="yes" xml:space="preserve">
          <source>Framed.</source>
          <target state="translated">Framed.</target>
        </trans-unit>
        <trans-unit id="61df51b01c40ba0a9247aa6363331261830b3b95" translate="yes" xml:space="preserve">
          <source>From Elixir v1.10, Elixir's Logger is fully integrated with Erlang's logger. They share the same &lt;a href=&quot;#level/0&quot;&gt;&lt;code&gt;Logger.level/0&lt;/code&gt;&lt;/a&gt;, any metadata set with &lt;a href=&quot;#metadata/1&quot;&gt;&lt;code&gt;Logger.metadata/1&lt;/code&gt;&lt;/a&gt; applies to both, and so on.</source>
          <target state="translated">Desde Elixir v1.10, Elixir's Logger est&amp;aacute; completamente integrado con el logger de Erlang. Comparten el mismo &lt;a href=&quot;#level/0&quot;&gt; &lt;code&gt;Logger.level/0&lt;/code&gt; &lt;/a&gt; , cualquier conjunto de metadatos con &lt;a href=&quot;#metadata/1&quot;&gt; &lt;code&gt;Logger.metadata/1&lt;/code&gt; se&lt;/a&gt; aplica a ambos, y as&amp;iacute; sucesivamente.</target>
        </trans-unit>
        <trans-unit id="37cd4097eb3a24362095532952b9b30616bd33e9" translate="yes" xml:space="preserve">
          <source>From Elixir v1.2, it is possible to alias, import or require multiple modules at once. This is particularly useful once we start nesting modules, which is very common when building Elixir applications. For example, imagine you have an application where all modules are nested under &lt;code&gt;MyApp&lt;/code&gt;, you can alias the modules &lt;code&gt;MyApp.Foo&lt;/code&gt;, &lt;code&gt;MyApp.Bar&lt;/code&gt; and &lt;code&gt;MyApp.Baz&lt;/code&gt; at once as follows:</source>
          <target state="translated">Desde Elixir v1.2, es posible crear un alias, importar o requerir varios m&amp;oacute;dulos a la vez. Esto es particularmente &amp;uacute;til una vez que comenzamos a anidar m&amp;oacute;dulos, lo cual es muy com&amp;uacute;n al construir aplicaciones Elixir. Por ejemplo, imagine que tiene una aplicaci&amp;oacute;n donde todos los m&amp;oacute;dulos est&amp;aacute;n anidados en &lt;code&gt;MyApp&lt;/code&gt; , puede alias de los m&amp;oacute;dulos &lt;code&gt;MyApp.Foo&lt;/code&gt; , &lt;code&gt;MyApp.Bar&lt;/code&gt; y &lt;code&gt;MyApp.Baz&lt;/code&gt; a la vez de la siguiente manera:</target>
        </trans-unit>
        <trans-unit id="5f129d8dac3eb2b485d35cfaa8fcb065c8677f2f" translate="yes" xml:space="preserve">
          <source>From Elixir v1.2, protocol consolidation happens automatically for all projects. We will build our own project in the &lt;strong&gt;&lt;em&gt;Mix and OTP guide&lt;/em&gt;&lt;/strong&gt;.</source>
          <target state="translated">Desde Elixir v1.2, la consolidaci&amp;oacute;n del protocolo ocurre autom&amp;aacute;ticamente para todos los proyectos. Construiremos nuestro propio proyecto en la &lt;strong&gt;&lt;em&gt;gu&amp;iacute;a Mix and OTP&lt;/em&gt;&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="a9cab3793941ece60ffc8a0b775c34f6a348677a" translate="yes" xml:space="preserve">
          <source>From Erlang/OTP 21, &lt;code&gt;:handle_sasl_reports&lt;/code&gt; only has an effect if &lt;code&gt;:handle_otp_reports&lt;/code&gt; is true.</source>
          <target state="translated">De Erlang / OTP 21 &lt;code&gt;:handle_sasl_reports&lt;/code&gt; solo tiene efecto si &lt;code&gt;:handle_otp_reports&lt;/code&gt; es verdadero.</target>
        </trans-unit>
        <trans-unit id="1b5ac9d2f1ffaa0f16939a6691b3606f6f5495e8" translate="yes" xml:space="preserve">
          <source>From inside &lt;code&gt;bar@computer-name&lt;/code&gt;, we can now spawn a task directly on the other node via the supervisor:</source>
          <target state="translated">Desde dentro de la &lt;code&gt;bar@computer-name&lt;/code&gt; , ahora podemos generar una tarea directamente en el otro nodo a trav&amp;eacute;s del supervisor:</target>
        </trans-unit>
        <trans-unit id="cee07fcd21c8e4081421ab00fc5d8c03d08b554f" translate="yes" xml:space="preserve">
          <source>From now on, ExUnit will not run any test that has the &lt;code&gt;:external&lt;/code&gt; option set to &lt;code&gt;true&lt;/code&gt;. This behaviour can be reversed with the &lt;code&gt;:include&lt;/code&gt; option which is usually passed through the command line:</source>
          <target state="translated">A partir de ahora, ExUnit no ejecutar&amp;aacute; ninguna prueba que tenga la opci&amp;oacute;n &lt;code&gt;:external&lt;/code&gt; establecida en &lt;code&gt;true&lt;/code&gt; . Este comportamiento se puede revertir con la opci&amp;oacute;n &lt;code&gt;:include&lt;/code&gt; , que generalmente se pasa a trav&amp;eacute;s de la l&amp;iacute;nea de comando:</target>
        </trans-unit>
        <trans-unit id="3c26276a10f65beef569c18570dfcc2f42f56636" translate="yes" xml:space="preserve">
          <source>From now on, we will be using the term &quot;event handler&quot; to refer to your custom backend, as we head into implementation details.</source>
          <target state="translated">A partir de ahora,usaremos el término &quot;manejador de eventos&quot; para referirnos a su backend personalizado,mientras nos adentramos en los detalles de la implementación.</target>
        </trans-unit>
        <trans-unit id="938617f06857d43f6a085cfd6bce09c1655cac4a" translate="yes" xml:space="preserve">
          <source>From our quick exploration, we could conclude that we should use &lt;code&gt;Node.spawn_link/2&lt;/code&gt; to spawn processes on a remote node every time we need to do a distributed computation. However, we have learned throughout this guide that spawning processes outside of supervision trees should be avoided if possible, so we need to look for other options.</source>
          <target state="translated">De nuestra exploraci&amp;oacute;n r&amp;aacute;pida, podr&amp;iacute;amos concluir que deber&amp;iacute;amos usar &lt;code&gt;Node.spawn_link/2&lt;/code&gt; para generar procesos en un nodo remoto cada vez que necesitemos hacer un c&amp;aacute;lculo distribuido. Sin embargo, hemos aprendido a lo largo de esta gu&amp;iacute;a que los procesos de desove fuera de los &amp;aacute;rboles de supervisi&amp;oacute;n deben evitarse si es posible, por lo que debemos buscar otras opciones.</target>
        </trans-unit>
        <trans-unit id="4db16168eb1bd7c62518bc09890c1b7ba6baa6ce" translate="yes" xml:space="preserve">
          <source>From the printed information, we can see far fewer files are generated. The generated &lt;code&gt;mix.exs&lt;/code&gt; file is different too. Let&amp;rsquo;s take a look (comments have been removed):</source>
          <target state="translated">A partir de la informaci&amp;oacute;n impresa, podemos ver que se generan muchos menos archivos. El archivo &lt;code&gt;mix.exs&lt;/code&gt; generado tambi&amp;eacute;n es diferente. Echemos un vistazo (los comentarios se han eliminado):</target>
        </trans-unit>
        <trans-unit id="d86c7074fa10260d3d9ae0cadb6b7bff099b2b69" translate="yes" xml:space="preserve">
          <source>Full month name</source>
          <target state="translated">Nombre del mes completo</target>
        </trans-unit>
        <trans-unit id="2298064d1fda3e808dc04798e3aef0bd717a3cbf" translate="yes" xml:space="preserve">
          <source>Full name of day</source>
          <target state="translated">Nombre completo del día</target>
        </trans-unit>
        <trans-unit id="f1e410ad1472b42cb42cc98962428637290b6706" translate="yes" xml:space="preserve">
          <source>Function</source>
          <target state="translated">Function</target>
        </trans-unit>
        <trans-unit id="8e40024a6b83dbe7056d1e4a40db12942b440d4e" translate="yes" xml:space="preserve">
          <source>Function Arguments</source>
          <target state="translated">Argumentos de la función</target>
        </trans-unit>
        <trans-unit id="bc1254dc5150511a2a061bfd2a8e778f130ed9a6" translate="yes" xml:space="preserve">
          <source>Function and variable names</source>
          <target state="translated">Nombres de funciones y variables</target>
        </trans-unit>
        <trans-unit id="83ade9ad4e94b4c5006286b88e8447b8a91c444a" translate="yes" xml:space="preserve">
          <source>Function and variable names have the following syntax: A &lt;em&gt;lowercase ASCII letter&lt;/em&gt; or an &lt;em&gt;underscore&lt;/em&gt;, followed by any number of &lt;em&gt;lowercase or uppercase ASCII letters&lt;/em&gt;, &lt;em&gt;numbers&lt;/em&gt;, or &lt;em&gt;underscores&lt;/em&gt;. Optionally they can end in either an &lt;em&gt;exclamation mark&lt;/em&gt; or a &lt;em&gt;question mark&lt;/em&gt;.</source>
          <target state="translated">Los nombres de funciones y variables tienen la siguiente sintaxis: Una &lt;em&gt;letra ASCII en min&amp;uacute;scula&lt;/em&gt; o un &lt;em&gt;gui&amp;oacute;n bajo&lt;/em&gt; , seguido de cualquier n&amp;uacute;mero de &lt;em&gt;letras ASCII en min&amp;uacute;sculas o may&amp;uacute;sculas&lt;/em&gt; , &lt;em&gt;n&amp;uacute;meros&lt;/em&gt; o &lt;em&gt;guiones bajos&lt;/em&gt; . Opcionalmente, pueden terminar con un &lt;em&gt;signo de exclamaci&amp;oacute;n&lt;/em&gt; o un &lt;em&gt;signo de interrogaci&amp;oacute;n&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="317d75f3496ca96594673f20ba1da34b938abdcd" translate="yes" xml:space="preserve">
          <source>Function bodies support &lt;code&gt;rescue&lt;/code&gt;, &lt;code&gt;catch&lt;/code&gt;, &lt;code&gt;after&lt;/code&gt;, and &lt;code&gt;else&lt;/code&gt; as &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.SpecialForms.html#try/1&quot;&gt;&lt;code&gt;Kernel.SpecialForms.try/1&lt;/code&gt;&lt;/a&gt; does (known as &quot;implicit try&quot;). For example, the following two functions are equivalent:</source>
          <target state="translated">Los cuerpos de funci&amp;oacute;n admiten &lt;code&gt;rescue&lt;/code&gt; , &lt;code&gt;catch&lt;/code&gt; , &lt;code&gt;after&lt;/code&gt; y &lt;code&gt;else&lt;/code&gt; como lo hace &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.SpecialForms.html#try/1&quot;&gt; &lt;code&gt;Kernel.SpecialForms.try/1&lt;/code&gt; &lt;/a&gt; (conocido como &quot;intento impl&amp;iacute;cito&quot;). Por ejemplo, las siguientes dos funciones son equivalentes:</target>
        </trans-unit>
        <trans-unit id="23cced316c3006e2ae03dfcedc7e3c98513a344d" translate="yes" xml:space="preserve">
          <source>Function bodies support &lt;code&gt;rescue&lt;/code&gt;, &lt;code&gt;catch&lt;/code&gt;, &lt;code&gt;after&lt;/code&gt;, and &lt;code&gt;else&lt;/code&gt; as &lt;a href=&quot;kernel.specialforms#try/1&quot;&gt;&lt;code&gt;Kernel.SpecialForms.try/1&lt;/code&gt;&lt;/a&gt; does. For example, the following two functions are equivalent:</source>
          <target state="translated">Los cuerpos de funci&amp;oacute;n admiten &lt;code&gt;rescue&lt;/code&gt; , &lt;code&gt;catch&lt;/code&gt; , &lt;code&gt;after&lt;/code&gt; y &lt;code&gt;else&lt;/code&gt; como lo hace &lt;a href=&quot;kernel.specialforms#try/1&quot;&gt; &lt;code&gt;Kernel.SpecialForms.try/1&lt;/code&gt; &lt;/a&gt; . Por ejemplo, las siguientes dos funciones son equivalentes:</target>
        </trans-unit>
        <trans-unit id="a06abcd236c2b1c30e0ad208ebb8f15fa6b429ec" translate="yes" xml:space="preserve">
          <source>Function capturing</source>
          <target state="translated">Función de captura</target>
        </trans-unit>
        <trans-unit id="f1329761aa64d73b0a0135229f12fe0d0ace1793" translate="yes" xml:space="preserve">
          <source>Function declarations also support guards and multiple clauses. If a function has several clauses, Elixir will try each clause until it finds one that matches. Here is an implementation of a function that checks if the given number is zero or not:</source>
          <target state="translated">Las declaraciones de función también apoyan a los guardias y a las cláusulas múltiples.Si una función tiene varias cláusulas,Elixir probará cada cláusula hasta encontrar una que coincida.He aquí una implementación de una función que comprueba si el número dado es cero o no:</target>
        </trans-unit>
        <trans-unit id="2a8ac45592076c6753dc5eab45709c494a73fe32" translate="yes" xml:space="preserve">
          <source>Function names may also start with an underscore. Such functions are never imported by default:</source>
          <target state="translated">Los nombres de las funciones también pueden comenzar con un guión bajo.Estas funciones nunca se importan por defecto:</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
