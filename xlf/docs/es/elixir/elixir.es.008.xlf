<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="elixir">
    <body>
      <group id="elixir">
        <trans-unit id="7ee68d6d5538c71b755e522365fc502dbb4b5228" translate="yes" xml:space="preserve">
          <source>In summary, documentation is a contract with users of your API, who may not necessarily have access to the source code; whereas code comments are for those who interact directly with the source. You can learn and express different guarantees about your software by separating those two concepts.</source>
          <target state="translated">En resumen,la documentación es un contrato con los usuarios de su API,que no necesariamente tienen acceso al código fuente;mientras que los comentarios del código son para aquellos que interactúan directamente con la fuente.Puede aprender y expresar diferentes garantías sobre su software separando esos dos conceptos.</target>
        </trans-unit>
        <trans-unit id="88056ec75ab5d6672e9f690c2cbe9609ac25a458" translate="yes" xml:space="preserve">
          <source>In the &quot;Mix.Task&quot; section, we have defined a task that would be available to everyone using our project as a dependency. What if we wanted the task to only be available for our project? Just define an alias:</source>
          <target state="translated">En la sección &quot;Mix.Task&quot;,hemos definido una tarea que estaría disponible para todo el mundo utilizando nuestro proyecto como una dependencia.¿Y si quisiéramos que la tarea sólo estuviera disponible para nuestro proyecto? Sólo hay que definir un alias:</target>
        </trans-unit>
        <trans-unit id="ff37981f126b5bf2fa55d0c06620d51ba16e7f55" translate="yes" xml:space="preserve">
          <source>In the &lt;a href=&quot;agent&quot;&gt;previous chapter&lt;/a&gt;, we used agents to represent our buckets. In the &lt;a href=&quot;introduction-to-mix&quot;&gt;introduction to mix&lt;/a&gt;, we specified we would like to name each bucket so we can do the following:</source>
          <target state="translated">En el &lt;a href=&quot;agent&quot;&gt;cap&amp;iacute;tulo anterior&lt;/a&gt; , usamos agentes para representar nuestros dep&amp;oacute;sitos. En la &lt;a href=&quot;introduction-to-mix&quot;&gt;introducci&amp;oacute;n a la mezcla&lt;/a&gt; , especificamos que nos gustar&amp;iacute;a nombrar cada dep&amp;oacute;sito para poder hacer lo siguiente:</target>
        </trans-unit>
        <trans-unit id="3b5fc14f69e9c66ff005f61efabe92506fc54ff9" translate="yes" xml:space="preserve">
          <source>In the &lt;a href=&quot;basic-types&quot;&gt;previous chapter&lt;/a&gt;, we saw Elixir provides &lt;code&gt;+&lt;/code&gt;, &lt;code&gt;-&lt;/code&gt;, &lt;code&gt;*&lt;/code&gt;, &lt;code&gt;/&lt;/code&gt; as arithmetic operators, plus the functions &lt;code&gt;div/2&lt;/code&gt; and &lt;code&gt;rem/2&lt;/code&gt; for integer division and remainder.</source>
          <target state="translated">En el &lt;a href=&quot;basic-types&quot;&gt;cap&amp;iacute;tulo anterior&lt;/a&gt; , vimos que Elixir proporciona &lt;code&gt;+&lt;/code&gt; , &lt;code&gt;-&lt;/code&gt; , &lt;code&gt;*&lt;/code&gt; , &lt;code&gt;/&lt;/code&gt; como operadores aritm&amp;eacute;ticos, m&amp;aacute;s las funciones &lt;code&gt;div/2&lt;/code&gt; y &lt;code&gt;rem/2&lt;/code&gt; para la divisi&amp;oacute;n de enteros y el resto.</target>
        </trans-unit>
        <trans-unit id="f26102656dadf27f08b5ecc06639ee0453b4518a" translate="yes" xml:space="preserve">
          <source>In the &lt;a href=&quot;structs&quot;&gt;previous chapter&lt;/a&gt;, we have learned that although structs are maps, they do not share protocol implementations with maps. For example, &lt;a href=&quot;https://hexdocs.pm/elixir/MapSet.html&quot;&gt;&lt;code&gt;MapSet&lt;/code&gt;&lt;/a&gt;s (sets based on maps) are implemented as structs. Let&amp;rsquo;s try to use the &lt;code&gt;Size&lt;/code&gt; protocol with a &lt;code&gt;MapSet&lt;/code&gt;:</source>
          <target state="translated">En el &lt;a href=&quot;structs&quot;&gt;cap&amp;iacute;tulo anterior&lt;/a&gt; , hemos aprendido que aunque las estructuras son mapas, no comparten implementaciones de protocolo con mapas. Por ejemplo, &lt;a href=&quot;https://hexdocs.pm/elixir/MapSet.html&quot;&gt; &lt;code&gt;MapSet&lt;/code&gt; &lt;/a&gt; s (conjuntos basados ​​en mapas) se implementan como estructuras. Intentemos usar el protocolo &lt;code&gt;Size&lt;/code&gt; con un &lt;code&gt;MapSet&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="53173cc148f94bd7e146b01b777ce24e106147bb" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;__using__/1&lt;/code&gt; implementation, we will initialize a module attribute named &lt;code&gt;@tests&lt;/code&gt; to an empty list, then store the name of each defined test in this attribute so the tests can be invoked from the &lt;code&gt;run&lt;/code&gt; function.</source>
          <target state="translated">En la &lt;code&gt;__using__/1&lt;/code&gt; , inicializaremos un atributo de m&amp;oacute;dulo llamado &lt;code&gt;@tests&lt;/code&gt; en una lista vac&amp;iacute;a, luego almacenaremos el nombre de cada prueba definida en este atributo para que las pruebas se puedan invocar desde la funci&amp;oacute;n de &lt;code&gt;run&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b21c1f93db813518da68dd14fe39d40364740d5a" translate="yes" xml:space="preserve">
          <source>In the Applications tab, you will see all applications currently running in your system alongside their supervision tree. You can select the &lt;code&gt;kv&lt;/code&gt; application to explore it further:</source>
          <target state="translated">En la pesta&amp;ntilde;a Aplicaciones, ver&amp;aacute; todas las aplicaciones que se est&amp;aacute;n ejecutando actualmente en su sistema junto con su &amp;aacute;rbol de supervisi&amp;oacute;n. Puede seleccionar la aplicaci&amp;oacute;n &lt;code&gt;kv&lt;/code&gt; para explorarla m&amp;aacute;s a fondo:</target>
        </trans-unit>
        <trans-unit id="bde538c8f6213c2789f457ce470a93e8d2f207d9" translate="yes" xml:space="preserve">
          <source>In the above, process termination refers to unsuccessful termination, which is determined by the &lt;code&gt;:restart&lt;/code&gt; option.</source>
          <target state="translated">En lo anterior, la terminaci&amp;oacute;n del proceso se refiere a la terminaci&amp;oacute;n fallida, que est&amp;aacute; determinada por la opci&amp;oacute;n &lt;code&gt;:restart&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7821fdeb2e1e82ffc7914547f20081eb14c31b6f" translate="yes" xml:space="preserve">
          <source>In the case a value is stored multiple times in the keyword list, later occurrences are removed.</source>
          <target state="translated">En el caso de que un valor se almacene varias veces en la lista de palabras clave,se eliminan las ocurrencias posteriores.</target>
        </trans-unit>
        <trans-unit id="de44ed6132703d951e8099501d3dde1a95e8c6be" translate="yes" xml:space="preserve">
          <source>In the case of calls to anonymous functions, the inner tuple with the dot special form has only one argument, reflecting the fact that the operator is unary:</source>
          <target state="translated">En el caso de las llamadas a funciones anónimas,la tupla interior con la forma especial de punto tiene un solo argumento,que refleja el hecho de que el operador es unario:</target>
        </trans-unit>
        <trans-unit id="0c98e9cf9dcf59ac9fca17a0c41969297e7c44d2" translate="yes" xml:space="preserve">
          <source>In the case of the event &lt;code&gt;:flush&lt;/code&gt; handlers should flush any pending data. This event is triggered by &lt;a href=&quot;#flush/0&quot;&gt;&lt;code&gt;Logger.flush/0&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">En el caso del evento &lt;code&gt;:flush&lt;/code&gt; manejadores flush deben eliminar cualquier dato pendiente. Este evento lo activa &lt;a href=&quot;#flush/0&quot;&gt; &lt;code&gt;Logger.flush/0&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="bee66e2e0ed3861603c7e12d98d2bb864e0a4a57" translate="yes" xml:space="preserve">
          <source>In the case of the event &lt;code&gt;:flush&lt;/code&gt; handlers should flush any pending data. This event is triggered by &lt;a href=&quot;#flush/0&quot;&gt;&lt;code&gt;flush/0&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">En el caso del evento &lt;code&gt;:flush&lt;/code&gt; controladores de descarga deben eliminar cualquier dato pendiente. Este evento es provocado por &lt;a href=&quot;#flush/0&quot;&gt; &lt;code&gt;flush/0&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a7d253a49741f6c380664521d0e7ead5dde4a470" translate="yes" xml:space="preserve">
          <source>In the code above, we have a process, which we call &amp;ldquo;the client&amp;rdquo; sending a request to an agent, &amp;ldquo;the server&amp;rdquo;. The request contains an anonymous function, which must be executed by the server.</source>
          <target state="translated">En el c&amp;oacute;digo anterior, tenemos un proceso, al que llamamos &quot;el cliente&quot; que env&amp;iacute;a una solicitud a un agente, &quot;el servidor&quot;. La solicitud contiene una funci&amp;oacute;n an&amp;oacute;nima, que debe ser ejecutada por el servidor.</target>
        </trans-unit>
        <trans-unit id="2ea691104e7ec52f4ddc63f9f0cace981d953b17" translate="yes" xml:space="preserve">
          <source>In the environment you can access the current filename, line numbers, set up aliases, the current function and others.</source>
          <target state="translated">En el entorno se puede acceder al nombre de archivo actual,a los números de línea,a la configuración de alias,a la función actual y a otros.</target>
        </trans-unit>
        <trans-unit id="e0731e3b2d6896ada3ab5956119cf51186ed0825" translate="yes" xml:space="preserve">
          <source>In the environment you can access the filename, line numbers, set up aliases, the function and others.</source>
          <target state="translated">En el entorno se puede acceder al nombre del archivo,los números de línea,establecer alias,la función y otros.</target>
        </trans-unit>
        <trans-unit id="608b24d6e5e5edc7ece0be6b5cce2c71fcef971e" translate="yes" xml:space="preserve">
          <source>In the example above we have created the alias &lt;code&gt;some_alias&lt;/code&gt; that will run the task &lt;code&gt;mix hex.info&lt;/code&gt;, then &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Run.html&quot;&gt;&lt;code&gt;mix run&lt;/code&gt;&lt;/a&gt; to run an Elixir script, then &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Cmd.html&quot;&gt;&lt;code&gt;mix cmd&lt;/code&gt;&lt;/a&gt; to execute a command line shell script. This shows how powerful aliases mixed with Mix tasks can be.</source>
          <target state="translated">En el ejemplo anterior, hemos creado el alias &lt;code&gt;some_alias&lt;/code&gt; que ejecutar&amp;aacute; la &lt;code&gt;mix hex.info&lt;/code&gt; tareas hex.info , luego &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Run.html&quot;&gt; &lt;code&gt;mix run&lt;/code&gt; &lt;/a&gt; para ejecutar un script Elixir, luego &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Cmd.html&quot;&gt; &lt;code&gt;mix cmd&lt;/code&gt; &lt;/a&gt; para ejecutar un script de shell de l&amp;iacute;nea de comandos. Esto muestra lo poderosos que pueden ser los alias mezclados con tareas Mix.</target>
        </trans-unit>
        <trans-unit id="2913df470cab8312823dbbd9aad2e70e4f9242e6" translate="yes" xml:space="preserve">
          <source>In the example above we have created the alias &lt;code&gt;some_alias&lt;/code&gt; that will run the task &lt;code&gt;mix hex.info&lt;/code&gt;, then &lt;a href=&quot;mix.tasks.run&quot;&gt;&lt;code&gt;mix run&lt;/code&gt;&lt;/a&gt; to run an Elixir script, then &lt;a href=&quot;mix.tasks.cmd&quot;&gt;&lt;code&gt;mix cmd&lt;/code&gt;&lt;/a&gt; to execute a command line shell script. This shows how powerful aliases mixed with Mix tasks can be.</source>
          <target state="translated">En el ejemplo anterior, hemos creado el alias &lt;code&gt;some_alias&lt;/code&gt; que ejecutar&amp;aacute; la &lt;code&gt;mix hex.info&lt;/code&gt; tareas hex.info , luego la &lt;a href=&quot;mix.tasks.run&quot;&gt; &lt;code&gt;mix run&lt;/code&gt; &lt;/a&gt; para ejecutar un script Elixir, luego &lt;a href=&quot;mix.tasks.cmd&quot;&gt; &lt;code&gt;mix cmd&lt;/code&gt; &lt;/a&gt; para ejecutar un script de shell de l&amp;iacute;nea de comandos. Esto muestra lo poderosos que pueden ser los alias mezclados con tareas Mix.</target>
        </trans-unit>
        <trans-unit id="8a1ba160e9b96d6822e0f9cf64aea8a58c334907" translate="yes" xml:space="preserve">
          <source>In the example above, &lt;a href=&quot;#max/1&quot;&gt;&lt;code&gt;max/1&lt;/code&gt;&lt;/a&gt; returned March 31st instead of April 1st because the structural comparison compares the day before the year. This can be addressed by using &lt;a href=&quot;#max_by/3&quot;&gt;&lt;code&gt;max_by/3&lt;/code&gt;&lt;/a&gt; and by relying on structures where the most significant digits come first. In this particular case, we can use &lt;a href=&quot;date#to_erl/1&quot;&gt;&lt;code&gt;Date.to_erl/1&lt;/code&gt;&lt;/a&gt; to get a tuple representation with year, month and day fields:</source>
          <target state="translated">En el ejemplo anterior, &lt;a href=&quot;#max/1&quot;&gt; &lt;code&gt;max/1&lt;/code&gt; &lt;/a&gt; devolvi&amp;oacute; el 31 de marzo en lugar del 1 de abril porque la comparaci&amp;oacute;n estructural compara el d&amp;iacute;a anterior al a&amp;ntilde;o. Esto se puede solucionar usando &lt;a href=&quot;#max_by/3&quot;&gt; &lt;code&gt;max_by/3&lt;/code&gt; &lt;/a&gt; y confiando en estructuras donde los d&amp;iacute;gitos m&amp;aacute;s significativos vienen primero. En este caso particular, podemos usar &lt;a href=&quot;date#to_erl/1&quot;&gt; &lt;code&gt;Date.to_erl/1&lt;/code&gt; &lt;/a&gt; para obtener una representaci&amp;oacute;n de tupla con campos de a&amp;ntilde;o, mes y d&amp;iacute;a:</target>
        </trans-unit>
        <trans-unit id="d50a70865839f28bf705bef682c6bf3df4c9c940" translate="yes" xml:space="preserve">
          <source>In the example above, &lt;a href=&quot;#max/2&quot;&gt;&lt;code&gt;max/2&lt;/code&gt;&lt;/a&gt; returned March 31st instead of April 1st because the structural comparison compares the day before the year. For this reason, most structs provide a &quot;compare&quot; function, such as &lt;a href=&quot;https://hexdocs.pm/elixir/Date.html#compare/2&quot;&gt;&lt;code&gt;Date.compare/2&lt;/code&gt;&lt;/a&gt;, which receives two structs and returns &lt;code&gt;:lt&lt;/code&gt; (less-than), &lt;code&gt;:eq&lt;/code&gt; (equal to), and &lt;code&gt;:gt&lt;/code&gt; (greater-than). If you pass a module as the sorting function, Elixir will automatically use the &lt;code&gt;compare/2&lt;/code&gt; function of said module:</source>
          <target state="translated">En el ejemplo anterior, &lt;a href=&quot;#max/2&quot;&gt; &lt;code&gt;max/2&lt;/code&gt; &lt;/a&gt; devolvi&amp;oacute; el 31 de marzo en lugar del 1 de abril porque la comparaci&amp;oacute;n estructural compara el d&amp;iacute;a anterior al a&amp;ntilde;o. Por este motivo, la mayor&amp;iacute;a de las estructuras proporcionan una funci&amp;oacute;n de &quot;comparaci&amp;oacute;n&quot;, como &lt;a href=&quot;https://hexdocs.pm/elixir/Date.html#compare/2&quot;&gt; &lt;code&gt;Date.compare/2&lt;/code&gt; &lt;/a&gt; , que recibe dos estructuras y devuelve &lt;code&gt;:lt&lt;/code&gt; (menor que) ,: &lt;code&gt;:eq&lt;/code&gt; (igual a) y &lt;code&gt;:gt&lt;/code&gt; (mayor que) . Si pasa un m&amp;oacute;dulo como funci&amp;oacute;n de clasificaci&amp;oacute;n, Elixir usar&amp;aacute; autom&amp;aacute;ticamente la funci&amp;oacute;n &lt;code&gt;compare/2&lt;/code&gt; de dicho m&amp;oacute;dulo:</target>
        </trans-unit>
        <trans-unit id="00b3dfc102ba0bf3e9031dc021dd5e02de63d0cd" translate="yes" xml:space="preserve">
          <source>In the example above, &lt;a href=&quot;#max/2&quot;&gt;&lt;code&gt;max/2&lt;/code&gt;&lt;/a&gt; returned March 31st instead of April 1st because the structural comparison compares the day before the year. In such cases it is common for modules to provide functions such as &lt;a href=&quot;date#compare/2&quot;&gt;&lt;code&gt;Date.compare/2&lt;/code&gt;&lt;/a&gt; that perform semantic comparison.</source>
          <target state="translated">En el ejemplo anterior, &lt;a href=&quot;#max/2&quot;&gt; &lt;code&gt;max/2&lt;/code&gt; &lt;/a&gt; devolvi&amp;oacute; el 31 de marzo en lugar del 1 de abril porque la comparaci&amp;oacute;n estructural compara el d&amp;iacute;a anterior al a&amp;ntilde;o. En tales casos, es com&amp;uacute;n que los m&amp;oacute;dulos proporcionen funciones como &lt;a href=&quot;date#compare/2&quot;&gt; &lt;code&gt;Date.compare/2&lt;/code&gt; &lt;/a&gt; que realizan una comparaci&amp;oacute;n sem&amp;aacute;ntica.</target>
        </trans-unit>
        <trans-unit id="27e3001adb27cd38424db873e11a855a0fabd25e" translate="yes" xml:space="preserve">
          <source>In the example above, &lt;a href=&quot;#max/2&quot;&gt;&lt;code&gt;max/2&lt;/code&gt;&lt;/a&gt; returned March 31st instead of April 1st because the structural comparison compares the day before the year. In such cases it is common for modules to provide functions such as &lt;a href=&quot;https://hexdocs.pm/elixir/Date.html#compare/2&quot;&gt;&lt;code&gt;Date.compare/2&lt;/code&gt;&lt;/a&gt; that perform semantic comparison.</source>
          <target state="translated">En el ejemplo anterior, &lt;a href=&quot;#max/2&quot;&gt; &lt;code&gt;max/2&lt;/code&gt; &lt;/a&gt; devolvi&amp;oacute; el 31 de marzo en lugar del 1 de abril porque la comparaci&amp;oacute;n estructural compara el d&amp;iacute;a anterior al a&amp;ntilde;o. En tales casos, es com&amp;uacute;n que los m&amp;oacute;dulos proporcionen funciones como &lt;a href=&quot;https://hexdocs.pm/elixir/Date.html#compare/2&quot;&gt; &lt;code&gt;Date.compare/2&lt;/code&gt; &lt;/a&gt; que realizan una comparaci&amp;oacute;n sem&amp;aacute;ntica.</target>
        </trans-unit>
        <trans-unit id="7872f4b6748675f8cea9f2aac1d82fd307d18a15" translate="yes" xml:space="preserve">
          <source>In the example above, &lt;a href=&quot;#min/1&quot;&gt;&lt;code&gt;min/1&lt;/code&gt;&lt;/a&gt; returned April 1st instead of March 31st because the structural comparison compares the day before the year. This can be addressed by using &lt;a href=&quot;#min_by/3&quot;&gt;&lt;code&gt;min_by/3&lt;/code&gt;&lt;/a&gt; and by relying on structures where the most significant digits come first. In this particular case, we can use &lt;a href=&quot;date#to_erl/1&quot;&gt;&lt;code&gt;Date.to_erl/1&lt;/code&gt;&lt;/a&gt; to get a tuple representation with year, month and day fields:</source>
          <target state="translated">En el ejemplo anterior, &lt;a href=&quot;#min/1&quot;&gt; &lt;code&gt;min/1&lt;/code&gt; &lt;/a&gt; devolvi&amp;oacute; el 1 de abril en lugar del 31 de marzo porque la comparaci&amp;oacute;n estructural compara el d&amp;iacute;a anterior al a&amp;ntilde;o. Esto se puede solucionar usando &lt;a href=&quot;#min_by/3&quot;&gt; &lt;code&gt;min_by/3&lt;/code&gt; &lt;/a&gt; y confiando en estructuras donde los d&amp;iacute;gitos m&amp;aacute;s significativos vienen primero. En este caso particular, podemos usar &lt;a href=&quot;date#to_erl/1&quot;&gt; &lt;code&gt;Date.to_erl/1&lt;/code&gt; &lt;/a&gt; para obtener una representaci&amp;oacute;n de tupla con campos de a&amp;ntilde;o, mes y d&amp;iacute;a:</target>
        </trans-unit>
        <trans-unit id="b47db09b5466e9e31fe82800684896500461db1f" translate="yes" xml:space="preserve">
          <source>In the example above, &lt;a href=&quot;#min/2&quot;&gt;&lt;code&gt;min/2&lt;/code&gt;&lt;/a&gt; returned April 1st instead of March 31st because the structural comparison compares the day before the year. For this reason, most structs provide a &quot;compare&quot; function, such as &lt;a href=&quot;https://hexdocs.pm/elixir/Date.html#compare/2&quot;&gt;&lt;code&gt;Date.compare/2&lt;/code&gt;&lt;/a&gt;, which receives two structs and returns &lt;code&gt;:lt&lt;/code&gt; (less-than), &lt;code&gt;:eq&lt;/code&gt; (equal to), and &lt;code&gt;:gt&lt;/code&gt; (greater-than). If you pass a module as the sorting function, Elixir will automatically use the &lt;code&gt;compare/2&lt;/code&gt; function of said module:</source>
          <target state="translated">En el ejemplo anterior, &lt;a href=&quot;#min/2&quot;&gt; &lt;code&gt;min/2&lt;/code&gt; &lt;/a&gt; devolvi&amp;oacute; el 1 de abril en lugar del 31 de marzo porque la comparaci&amp;oacute;n estructural compara el d&amp;iacute;a anterior al a&amp;ntilde;o. Por este motivo, la mayor&amp;iacute;a de las estructuras proporcionan una funci&amp;oacute;n de &quot;comparaci&amp;oacute;n&quot;, como &lt;a href=&quot;https://hexdocs.pm/elixir/Date.html#compare/2&quot;&gt; &lt;code&gt;Date.compare/2&lt;/code&gt; &lt;/a&gt; , que recibe dos estructuras y devuelve &lt;code&gt;:lt&lt;/code&gt; (menor que) ,: &lt;code&gt;:eq&lt;/code&gt; (igual a) y &lt;code&gt;:gt&lt;/code&gt; (mayor que) . Si pasa un m&amp;oacute;dulo como funci&amp;oacute;n de clasificaci&amp;oacute;n, Elixir usar&amp;aacute; autom&amp;aacute;ticamente la funci&amp;oacute;n &lt;code&gt;compare/2&lt;/code&gt; de dicho m&amp;oacute;dulo:</target>
        </trans-unit>
        <trans-unit id="0cf57110afa2caf6b8fbffc8cc551e293da6c450" translate="yes" xml:space="preserve">
          <source>In the example above, &lt;a href=&quot;#min/2&quot;&gt;&lt;code&gt;min/2&lt;/code&gt;&lt;/a&gt; returned April 1st instead of March 31st because the structural comparison compares the day before the year. In such cases it is common for modules to provide functions such as &lt;a href=&quot;date#compare/2&quot;&gt;&lt;code&gt;Date.compare/2&lt;/code&gt;&lt;/a&gt; that perform semantic comparison.</source>
          <target state="translated">En el ejemplo anterior, &lt;a href=&quot;#min/2&quot;&gt; &lt;code&gt;min/2&lt;/code&gt; &lt;/a&gt; devolvi&amp;oacute; el 1 de abril en lugar del 31 de marzo porque la comparaci&amp;oacute;n estructural compara el d&amp;iacute;a anterior al a&amp;ntilde;o. En tales casos, es com&amp;uacute;n que los m&amp;oacute;dulos proporcionen funciones como &lt;a href=&quot;date#compare/2&quot;&gt; &lt;code&gt;Date.compare/2&lt;/code&gt; &lt;/a&gt; que realizan una comparaci&amp;oacute;n sem&amp;aacute;ntica.</target>
        </trans-unit>
        <trans-unit id="6741cfc7caed86bbef15f21d887f8bb7d9a69a68" translate="yes" xml:space="preserve">
          <source>In the example above, &lt;a href=&quot;#min/2&quot;&gt;&lt;code&gt;min/2&lt;/code&gt;&lt;/a&gt; returned April 1st instead of March 31st because the structural comparison compares the day before the year. In such cases it is common for modules to provide functions such as &lt;a href=&quot;https://hexdocs.pm/elixir/Date.html#compare/2&quot;&gt;&lt;code&gt;Date.compare/2&lt;/code&gt;&lt;/a&gt; that perform semantic comparison.</source>
          <target state="translated">En el ejemplo anterior, &lt;a href=&quot;#min/2&quot;&gt; &lt;code&gt;min/2&lt;/code&gt; &lt;/a&gt; devolvi&amp;oacute; el 1 de abril en lugar del 31 de marzo porque la comparaci&amp;oacute;n estructural compara el d&amp;iacute;a anterior al a&amp;ntilde;o. En tales casos, es com&amp;uacute;n que los m&amp;oacute;dulos proporcionen funciones como &lt;a href=&quot;https://hexdocs.pm/elixir/Date.html#compare/2&quot;&gt; &lt;code&gt;Date.compare/2&lt;/code&gt; &lt;/a&gt; que realizan una comparaci&amp;oacute;n sem&amp;aacute;ntica.</target>
        </trans-unit>
        <trans-unit id="baf0386ec100f9836f02578a5562d4a28953ca57" translate="yes" xml:space="preserve">
          <source>In the example above, &lt;a href=&quot;#reduce/3&quot;&gt;&lt;code&gt;Enum.reduce/3&lt;/code&gt;&lt;/a&gt; accumulates the result of each call to &lt;code&gt;fun&lt;/code&gt; into a list in reverse order, which is correctly ordered at the end by calling &lt;a href=&quot;#reverse/1&quot;&gt;&lt;code&gt;Enum.reverse/1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">En el ejemplo anterior, &lt;a href=&quot;#reduce/3&quot;&gt; &lt;code&gt;Enum.reduce/3&lt;/code&gt; &lt;/a&gt; acumula el resultado de cada llamada a &lt;code&gt;fun&lt;/code&gt; en una lista en orden inverso, que se ordena correctamente al final llamando a &lt;a href=&quot;#reverse/1&quot;&gt; &lt;code&gt;Enum.reverse/1&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b3ad3c30dbfab7415bf70f15c8e5b3a581930bcb" translate="yes" xml:space="preserve">
          <source>In the example above, &lt;a href=&quot;enum#reduce/3&quot;&gt;&lt;code&gt;Enum.reduce/3&lt;/code&gt;&lt;/a&gt; accumulates the result of each call to &lt;code&gt;fun&lt;/code&gt; into a list in reverse order, which is correctly ordered at the end by calling &lt;a href=&quot;enum#reverse/1&quot;&gt;&lt;code&gt;Enum.reverse/1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">En el ejemplo anterior, &lt;a href=&quot;enum#reduce/3&quot;&gt; &lt;code&gt;Enum.reduce/3&lt;/code&gt; &lt;/a&gt; acumula el resultado de cada llamada a &lt;code&gt;fun&lt;/code&gt; en una lista en orden inverso, que se ordena correctamente al final llamando a &lt;a href=&quot;enum#reverse/1&quot;&gt; &lt;code&gt;Enum.reverse/1&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6ab2fe333dba7cd1bd613d8d2e21311292cba7df" translate="yes" xml:space="preserve">
          <source>In the example above, &lt;code&gt;1..100_000 |&amp;gt; Stream.map(&amp;amp;(&amp;amp;1 * 3))&lt;/code&gt; returns a data type, an actual stream, that represents the &lt;code&gt;map&lt;/code&gt; computation over the range &lt;code&gt;1..100_000&lt;/code&gt;:</source>
          <target state="translated">En el ejemplo anterior, &lt;code&gt;1..100_000 |&amp;gt; Stream.map(&amp;amp;(&amp;amp;1 * 3))&lt;/code&gt; devuelve un tipo de datos, un flujo real, que representa el c&amp;aacute;lculo del &lt;code&gt;map&lt;/code&gt; a en el rango &lt;code&gt;1..100_000&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="05fc4140bc39b53558f26707ec168a4d86893856" translate="yes" xml:space="preserve">
          <source>In the example above, &lt;code&gt;ExUnit&lt;/code&gt; stores the value of &lt;code&gt;async: true&lt;/code&gt; in a module attribute to change how the module is compiled. Tags are also defined as &lt;code&gt;accumulate: true&lt;/code&gt; attributes, and they store tags that can be used to setup and filter tests. For example, you can avoid running external tests on your machine because they are slow and dependent on other services, while they can still be enabled in your build system.</source>
          <target state="translated">En el ejemplo anterior, &lt;code&gt;ExUnit&lt;/code&gt; almacena el valor de &lt;code&gt;async: true&lt;/code&gt; en un atributo de m&amp;oacute;dulo para cambiar la forma en que se compila el m&amp;oacute;dulo. Las etiquetas tambi&amp;eacute;n se definen como atributos &lt;code&gt;accumulate: true&lt;/code&gt; , y almacenan etiquetas que se pueden usar para configurar y filtrar pruebas. Por ejemplo, puede evitar ejecutar pruebas externas en su m&amp;aacute;quina porque son lentas y dependen de otros servicios, mientras que a&amp;uacute;n pueden habilitarse en su sistema de compilaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="d7c845572f115897b2ebea0f8fac31816b299fd4" translate="yes" xml:space="preserve">
          <source>In the example above, &lt;code&gt;a&lt;/code&gt; returns 10 even if the macro is apparently setting it to 1 because variables defined in the macro do not affect the context the macro is executed in. If you want to set or get a variable in the caller's context, you can do it with the help of the &lt;code&gt;var!&lt;/code&gt; macro:</source>
          <target state="translated">En el ejemplo anterior, &lt;code&gt;a&lt;/code&gt; devuelve 10 incluso si la macro aparentemente lo establece en 1 porque las variables definidas en la macro no afectan el contexto en el que se ejecuta la macro. Si desea establecer u obtener una variable en el contexto de la persona que llama, puede hacerlo con la ayuda de &lt;code&gt;var!&lt;/code&gt; macro:</target>
        </trans-unit>
        <trans-unit id="7a7545c257a489979c415df1e9f0cbb1c93d77bd" translate="yes" xml:space="preserve">
          <source>In the example above, &lt;code&gt;bar&lt;/code&gt; will be returned if &lt;code&gt;foo&lt;/code&gt; evaluates to a truthy value (neither &lt;code&gt;false&lt;/code&gt; nor &lt;code&gt;nil&lt;/code&gt;). Otherwise, &lt;code&gt;nil&lt;/code&gt; will be returned.</source>
          <target state="translated">En el ejemplo anterior, se devolver&amp;aacute; &lt;code&gt;bar&lt;/code&gt; si &lt;code&gt;foo&lt;/code&gt; se eval&amp;uacute;a como un valor verdadero (ni &lt;code&gt;false&lt;/code&gt; ni &lt;code&gt;nil&lt;/code&gt; ). De lo contrario, no se devolver&amp;aacute; &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7eacffd5adbf5fd949bb658e0457a877aa95d246" translate="yes" xml:space="preserve">
          <source>In the example above, &lt;code&gt;value&lt;/code&gt; is going to be &lt;code&gt;7&lt;/code&gt; or &lt;code&gt;13&lt;/code&gt; depending on the value of &lt;code&gt;lucky?&lt;/code&gt;. In case &lt;code&gt;value&lt;/code&gt; has no previous value before case, clauses that do not explicitly bind a value have the variable bound to &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">En el ejemplo anterior, &amp;iquest;el &lt;code&gt;value&lt;/code&gt; ser&amp;aacute; &lt;code&gt;7&lt;/code&gt; o &lt;code&gt;13&lt;/code&gt; dependiendo del valor de &lt;code&gt;lucky?&lt;/code&gt; . En caso de que el &lt;code&gt;value&lt;/code&gt; no tenga un valor previo antes del caso, las cl&amp;aacute;usulas que no vinculan expl&amp;iacute;citamente un valor tienen la variable vinculada a &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="29dddd8ca2fe8a806f189d92127cef817ecb30da" translate="yes" xml:space="preserve">
          <source>In the example above, &lt;code&gt;value&lt;/code&gt; is going to be &lt;code&gt;7&lt;/code&gt; regardless of the value of &lt;code&gt;lucky?&lt;/code&gt;. The variable &lt;code&gt;value&lt;/code&gt; bound in the clause and the variable &lt;code&gt;value&lt;/code&gt; bound in the outer context are two entirely separate variables.</source>
          <target state="translated">En el ejemplo anterior, &amp;iquest;el &lt;code&gt;value&lt;/code&gt; ser&amp;aacute; &lt;code&gt;7&lt;/code&gt; independientemente del valor de &lt;code&gt;lucky?&lt;/code&gt; . El &lt;code&gt;value&lt;/code&gt; variable vinculado en la cl&amp;aacute;usula y el &lt;code&gt;value&lt;/code&gt; la variable vinculado en el contexto externo son dos variables completamente separadas.</target>
        </trans-unit>
        <trans-unit id="72cbf21e3fa3d74880817514a949e8994722f839" translate="yes" xml:space="preserve">
          <source>In the example above, &lt;code&gt;x&lt;/code&gt; cannot be accessed since it was defined inside the &lt;code&gt;try&lt;/code&gt; clause. A common practice to address this issue is to return the variables defined inside &lt;code&gt;try&lt;/code&gt;:</source>
          <target state="translated">En el ejemplo anterior, no se puede acceder a &lt;code&gt;x&lt;/code&gt; ya que se defini&amp;oacute; dentro de la cl&amp;aacute;usula &lt;code&gt;try&lt;/code&gt; . Una pr&amp;aacute;ctica com&amp;uacute;n para abordar este problema es devolver las variables definidas dentro de &lt;code&gt;try&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="6f83ecedbf7273a5aa4b952ec92a7a095991da80" translate="yes" xml:space="preserve">
          <source>In the example above, &lt;code&gt;x&lt;/code&gt; starts without a value and has &lt;code&gt;1&lt;/code&gt; assigned to it. Then, we compare the value of &lt;code&gt;x&lt;/code&gt; to the literal &lt;code&gt;1&lt;/code&gt;, which succeeds as they are both &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">En el ejemplo anterior, &lt;code&gt;x&lt;/code&gt; comienza sin un valor y tiene &lt;code&gt;1&lt;/code&gt; asignado. Luego, comparamos el valor de &lt;code&gt;x&lt;/code&gt; con el literal &lt;code&gt;1&lt;/code&gt; , que tiene &amp;eacute;xito ya que ambos son &lt;code&gt;1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3bed3d677daa97ab1f5b51e489879c2e74facf10" translate="yes" xml:space="preserve">
          <source>In the example above, a &lt;code&gt;sum/2&lt;/code&gt; function is defined; this function receives two arguments and returns their sum.</source>
          <target state="translated">En el ejemplo anterior, se define una funci&amp;oacute;n &lt;code&gt;sum/2&lt;/code&gt; ; esta funci&amp;oacute;n recibe dos argumentos y devuelve su suma.</target>
        </trans-unit>
        <trans-unit id="9fb262ec317cb005dd946c4cd7d04d84b1f69668" translate="yes" xml:space="preserve">
          <source>In the example above, a set of macros named &lt;code&gt;user&lt;/code&gt; but with different arities will be defined to manipulate the underlying record.</source>
          <target state="translated">En el ejemplo anterior, se definir&amp;aacute; un conjunto de macros denominado &lt;code&gt;user&lt;/code&gt; pero con diferentes aridades para manipular el registro subyacente.</target>
        </trans-unit>
        <trans-unit id="0c0f218463838143ec4982ca79e4ec70bc05323d" translate="yes" xml:space="preserve">
          <source>In the example above, a supervisor was started by passing the supervision structure to &lt;a href=&quot;#start_link/2&quot;&gt;&lt;code&gt;start_link/2&lt;/code&gt;&lt;/a&gt;. However, supervisors can also be created by explicitly defining a supervision module:</source>
          <target state="translated">En el ejemplo anterior, se inici&amp;oacute; un supervisor pasando la estructura de supervisi&amp;oacute;n a &lt;a href=&quot;#start_link/2&quot;&gt; &lt;code&gt;start_link/2&lt;/code&gt; &lt;/a&gt; . Sin embargo, tambi&amp;eacute;n se pueden crear supervisores definiendo expl&amp;iacute;citamente un m&amp;oacute;dulo de supervisi&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="442ca993474ce04915ab444e69370d1fd701d187" translate="yes" xml:space="preserve">
          <source>In the example above, as we mapped over the range, the elements being enumerated were created one by one, during enumeration. The &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Stream&lt;/code&gt;&lt;/a&gt; module allows us to map the range, without triggering its enumeration:</source>
          <target state="translated">En el ejemplo anterior, a medida que mapeamos el rango, los elementos enumerados se crearon uno por uno, durante la enumeraci&amp;oacute;n. El m&amp;oacute;dulo &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;Stream&lt;/code&gt; &lt;/a&gt; nos permite mapear el rango, sin activar su enumeraci&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="73b31064dddafd7aceb7c6dd33acb2dfd723e612" translate="yes" xml:space="preserve">
          <source>In the example above, by using &lt;code&gt;TestCase&lt;/code&gt;, we can write tests using the &lt;code&gt;test&lt;/code&gt; macro, which defines a function named &lt;code&gt;run&lt;/code&gt; to automatically run all tests for us. Our prototype will rely on the match operator (&lt;code&gt;=&lt;/code&gt;) as a mechanism to do assertions.</source>
          <target state="translated">En el ejemplo anterior, al usar &lt;code&gt;TestCase&lt;/code&gt; , podemos escribir pruebas usando la macro de &lt;code&gt;test&lt;/code&gt; , que define una funci&amp;oacute;n llamada &lt;code&gt;run&lt;/code&gt; para ejecutar autom&amp;aacute;ticamente todas las pruebas por nosotros. Nuestro prototipo se basar&amp;aacute; en el operador de coincidencia ( &lt;code&gt;=&lt;/code&gt; ) como mecanismo para hacer afirmaciones.</target>
        </trans-unit>
        <trans-unit id="f3bbbdd7b6d7f4d0dd2d5c03396c880a058ec265" translate="yes" xml:space="preserve">
          <source>In the example above, even though the macro injects &lt;code&gt;a = 1&lt;/code&gt;, it does not affect the variable &lt;code&gt;a&lt;/code&gt; defined by the &lt;code&gt;go&lt;/code&gt; function. If a macro wants to explicitly affect the context, it can use &lt;code&gt;var!&lt;/code&gt;:</source>
          <target state="translated">En el ejemplo anterior, aunque la macro inyecta &lt;code&gt;a = 1&lt;/code&gt; , no afecta la variable &lt;code&gt;a&lt;/code&gt; definida por la funci&amp;oacute;n &lt;code&gt;go&lt;/code&gt; . Si una macro quiere afectar expl&amp;iacute;citamente el contexto, puede usar &lt;code&gt;var!&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="df21e3e8f902f80311e9ed366624d965e22d8f36" translate="yes" xml:space="preserve">
          <source>In the example above, even though the right list has more entries than the left one, destructuring works fine. If the right list is smaller, the remaining elements are simply set to &lt;code&gt;nil&lt;/code&gt;:</source>
          <target state="translated">En el ejemplo anterior, aunque la lista de la derecha tiene m&amp;aacute;s entradas que la de la izquierda, la desestructuraci&amp;oacute;n funciona bien. Si la lista de la derecha es m&amp;aacute;s peque&amp;ntilde;a, los elementos restantes simplemente se establecen en &lt;code&gt;nil&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="ad9447b0ab139bf0ce77de940f7116ad1118f9e7" translate="yes" xml:space="preserve">
          <source>In the example above, pattern matching works because underneath structs are bare maps with a fixed set of fields. As maps, structs store a &amp;ldquo;special&amp;rdquo; field named &lt;code&gt;__struct__&lt;/code&gt; that holds the name of the struct:</source>
          <target state="translated">En el ejemplo anterior, la coincidencia de patrones funciona porque debajo de las estructuras hay mapas desnudos con un conjunto fijo de campos. Como mapas, las estructuras almacenan un campo &quot;especial&quot; llamado &lt;code&gt;__struct__&lt;/code&gt; que contiene el nombre de la estructura:</target>
        </trans-unit>
        <trans-unit id="dae57a394eb52ab25120ea39543d455089abff36" translate="yes" xml:space="preserve">
          <source>In the example above, since we are invoking &lt;code&gt;alias&lt;/code&gt; inside the function &lt;code&gt;plus/2&lt;/code&gt;, the alias will be valid only inside the function &lt;code&gt;plus/2&lt;/code&gt;. &lt;code&gt;minus/2&lt;/code&gt; won&amp;rsquo;t be affected at all.</source>
          <target state="translated">En el ejemplo anterior, dado que estamos invocando un &lt;code&gt;alias&lt;/code&gt; dentro de la funci&amp;oacute;n &lt;code&gt;plus/2&lt;/code&gt; , el alias ser&amp;aacute; v&amp;aacute;lido solo dentro de la funci&amp;oacute;n &lt;code&gt;plus/2&lt;/code&gt; . &lt;code&gt;minus/2&lt;/code&gt; no se ver&amp;aacute; afectado en absoluto.</target>
        </trans-unit>
        <trans-unit id="062b7f604b56dd870819716494d195af709ce6fe" translate="yes" xml:space="preserve">
          <source>In the example above, the &lt;code&gt;|&amp;gt;&lt;/code&gt; pipe is the right-most pipe; &lt;code&gt;arg1&lt;/code&gt; is the AST for &lt;code&gt;100 |&amp;gt; div(5)&lt;/code&gt;, and &lt;code&gt;arg2&lt;/code&gt; is the AST for &lt;code&gt;div(2)&lt;/code&gt;.</source>
          <target state="translated">En el ejemplo anterior, la tuber&amp;iacute;a &lt;code&gt;|&amp;gt;&lt;/code&gt; es la tuber&amp;iacute;a m&amp;aacute;s a la derecha; &lt;code&gt;arg1&lt;/code&gt; es el AST para &lt;code&gt;100 |&amp;gt; div(5)&lt;/code&gt; y &lt;code&gt;arg2&lt;/code&gt; es el AST para &lt;code&gt;div(2)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3764d5750387486a4a8182c32859bf0c44e3a53a" translate="yes" xml:space="preserve">
          <source>In the example above, the imported &lt;code&gt;List.duplicate/2&lt;/code&gt; is only visible within that specific function. &lt;code&gt;duplicate/2&lt;/code&gt; won&amp;rsquo;t be available in any other function in that module (or any other module for that matter).</source>
          <target state="translated">En el ejemplo anterior, el &lt;code&gt;List.duplicate/2&lt;/code&gt; importado solo es visible dentro de esa funci&amp;oacute;n espec&amp;iacute;fica. &lt;code&gt;duplicate/2&lt;/code&gt; no estar&amp;aacute; disponible en ninguna otra funci&amp;oacute;n de ese m&amp;oacute;dulo (o cualquier otro m&amp;oacute;dulo para el caso).</target>
        </trans-unit>
        <trans-unit id="a9ba96d97b36e1f6537a9985e8f45706e25424fa" translate="yes" xml:space="preserve">
          <source>In the example above, the linked process died by sending an &lt;code&gt;exit&lt;/code&gt; signal with a value of 1. The Elixir shell automatically handles those messages and prints them to the terminal.</source>
          <target state="translated">En el ejemplo anterior, el proceso vinculado muri&amp;oacute; al enviar una se&amp;ntilde;al de &lt;code&gt;exit&lt;/code&gt; con un valor de 1. El shell Elixir maneja autom&amp;aacute;ticamente esos mensajes y los imprime en la terminal.</target>
        </trans-unit>
        <trans-unit id="4c70f5b2fc854619c8625c6a22c3a81ffb99e2fe" translate="yes" xml:space="preserve">
          <source>In the example above, the list &lt;code&gt;[1, [2], 3]&lt;/code&gt; is passed as the first argument to the &lt;a href=&quot;https://hexdocs.pm/elixir/List.html#flatten/1&quot;&gt;&lt;code&gt;List.flatten/1&lt;/code&gt;&lt;/a&gt; function, then the flattened list is passed as the first argument to the &lt;a href=&quot;https://hexdocs.pm/elixir/Enum.html#map/2&quot;&gt;&lt;code&gt;Enum.map/2&lt;/code&gt;&lt;/a&gt; function which doubles each element of the list.</source>
          <target state="translated">En el ejemplo anterior, la lista &lt;code&gt;[1, [2], 3]&lt;/code&gt; se pasa como primer argumento a la funci&amp;oacute;n &lt;a href=&quot;https://hexdocs.pm/elixir/List.html#flatten/1&quot;&gt; &lt;code&gt;List.flatten/1&lt;/code&gt; &lt;/a&gt; , luego la lista plana se pasa como primer argumento a la funci&amp;oacute;n &lt;a href=&quot;https://hexdocs.pm/elixir/Enum.html#map/2&quot;&gt; &lt;code&gt;Enum.map/2&lt;/code&gt; &lt;/a&gt; que duplica cada elemento de la lista.</target>
        </trans-unit>
        <trans-unit id="df1a4779609dfb3efd8db910186e109c073a0338" translate="yes" xml:space="preserve">
          <source>In the example above, the list &lt;code&gt;[1, [2], 3]&lt;/code&gt; is passed as the first argument to the &lt;a href=&quot;list#flatten/1&quot;&gt;&lt;code&gt;List.flatten/1&lt;/code&gt;&lt;/a&gt; function, then the flattened list is passed as the first argument to the &lt;a href=&quot;enum#map/2&quot;&gt;&lt;code&gt;Enum.map/2&lt;/code&gt;&lt;/a&gt; function which doubles each element of the list.</source>
          <target state="translated">En el ejemplo anterior, la lista &lt;code&gt;[1, [2], 3]&lt;/code&gt; se pasa como primer argumento a la funci&amp;oacute;n &lt;a href=&quot;list#flatten/1&quot;&gt; &lt;code&gt;List.flatten/1&lt;/code&gt; &lt;/a&gt; , luego la lista aplanada se pasa como primer argumento a la funci&amp;oacute;n &lt;a href=&quot;enum#map/2&quot;&gt; &lt;code&gt;Enum.map/2&lt;/code&gt; &lt;/a&gt; que duplica cada elemento de la lista.</target>
        </trans-unit>
        <trans-unit id="30a372309337ceccb6cd8c47007e31bef89794f8" translate="yes" xml:space="preserve">
          <source>In the example above, the shell will be expecting more input until it finds the closing quote. Sometimes it is not obvious which character the shell is expecting, and the user may find themselves trapped in the state of incomplete expression with no ability to terminate it other than by exiting the shell.</source>
          <target state="translated">En el ejemplo anterior,la cáscara estará esperando más información hasta que encuentre la cotización final.A veces no es obvio qué personaje está esperando la cáscara,y el usuario puede encontrarse atrapado en el estado de expresión incompleta sin capacidad de terminarlo más que saliendo de la cáscara.</target>
        </trans-unit>
        <trans-unit id="2c1055e1dbf2125278d879200ab263f9e383b43c" translate="yes" xml:space="preserve">
          <source>In the example above, this happens:</source>
          <target state="translated">En el ejemplo anterior,esto sucede:</target>
        </trans-unit>
        <trans-unit id="c8625f3069f10910c0e9de120b21d6981d601654" translate="yes" xml:space="preserve">
          <source>In the example above, two modules - &lt;code&gt;Foo&lt;/code&gt; and &lt;code&gt;Foo.Bar&lt;/code&gt; - are created. When nesting, Elixir automatically creates an alias to the inner module, allowing the second module &lt;code&gt;Foo.Bar&lt;/code&gt; to be accessed as &lt;code&gt;Bar&lt;/code&gt; in the same lexical scope where it's defined (the &lt;code&gt;Foo&lt;/code&gt; module). This only happens if the nested module is defined via an alias.</source>
          <target state="translated">En el ejemplo anterior, se crean dos m&amp;oacute;dulos, &lt;code&gt;Foo&lt;/code&gt; y &lt;code&gt;Foo.Bar&lt;/code&gt; . Al anidar, Elixir crea autom&amp;aacute;ticamente un alias para el m&amp;oacute;dulo interno, lo que permite &lt;code&gt;Foo.Bar&lt;/code&gt; al segundo m&amp;oacute;dulo Foo.Bar como &lt;code&gt;Bar&lt;/code&gt; en el mismo &amp;aacute;mbito l&amp;eacute;xico donde est&amp;aacute; definido (el m&amp;oacute;dulo &lt;code&gt;Foo&lt;/code&gt; ). Esto solo ocurre si el m&amp;oacute;dulo anidado se define mediante un alias.</target>
        </trans-unit>
        <trans-unit id="cee742c4ffa43a93d2e20f415d5f42aefbd9bd95" translate="yes" xml:space="preserve">
          <source>In the example above, we are explicitly setting the version attribute for that module. &lt;code&gt;@vsn&lt;/code&gt; is used by the code reloading mechanism in the Erlang</source>
          <target state="translated">En el ejemplo anterior, establecemos expl&amp;iacute;citamente el atributo de versi&amp;oacute;n para ese m&amp;oacute;dulo. &lt;code&gt;@vsn&lt;/code&gt; es utilizado por el mecanismo de recarga de c&amp;oacute;digo en Erlang</target>
        </trans-unit>
        <trans-unit id="a373d89a73cb82089c1340de9b4a2f42e3a9dea1" translate="yes" xml:space="preserve">
          <source>In the example above, we are mutating both the array and the variable &lt;code&gt;i&lt;/code&gt;. However, data structures in Elixir are immutable. For this reason, functional languages rely on recursion: a function is called recursively until a condition is reached that stops the recursive action from continuing. No data is mutated in this process. Consider the example below that prints a string an arbitrary number of times:</source>
          <target state="translated">En el ejemplo anterior, estamos mutando tanto la matriz como la variable &lt;code&gt;i&lt;/code&gt; . Sin embargo, las estructuras de datos en Elixir son inmutables. Por esta raz&amp;oacute;n, los lenguajes funcionales se basan en la recursividad: una funci&amp;oacute;n se llama de forma recursiva hasta que se alcanza una condici&amp;oacute;n que impide que la acci&amp;oacute;n recursiva contin&amp;uacute;e. No se modifican datos en este proceso. Considere el siguiente ejemplo que imprime una cadena una cantidad arbitraria de veces:</target>
        </trans-unit>
        <trans-unit id="021f23fc44f1b5057c72ccb35305764a702bc70f" translate="yes" xml:space="preserve">
          <source>In the example above, we are mutating both the array and the variable &lt;code&gt;i&lt;/code&gt;. Mutating is not possible in Elixir. Instead, functional languages rely on recursion: a function is called recursively until a condition is reached that stops the recursive action from continuing. No data is mutated in this process. Consider the example below that prints a string an arbitrary number of times:</source>
          <target state="translated">En el ejemplo anterior, estamos mutando tanto la matriz como la variable &lt;code&gt;i&lt;/code&gt; . La mutaci&amp;oacute;n no es posible en Elixir. En cambio, los lenguajes funcionales se basan en la recursividad: una funci&amp;oacute;n se llama de forma recursiva hasta que se alcanza una condici&amp;oacute;n que impide que la acci&amp;oacute;n recursiva contin&amp;uacute;e. No se modifican datos en este proceso. Considere el siguiente ejemplo que imprime una cadena una cantidad arbitraria de veces:</target>
        </trans-unit>
        <trans-unit id="d5006566e063521dde7ab998be88e6cd1a64640e" translate="yes" xml:space="preserve">
          <source>In the example above, we can access the value &lt;code&gt;foo&lt;/code&gt; under the binding &lt;code&gt;assigns&lt;/code&gt; using &lt;code&gt;@foo&lt;/code&gt;. This is useful because a template, after being compiled, can receive different assigns and would not require recompilation for each variable set.</source>
          <target state="translated">En el ejemplo anterior, podemos acceder al valor &lt;code&gt;foo&lt;/code&gt; bajo el enlace &lt;code&gt;assigns&lt;/code&gt; usando &lt;code&gt;@foo&lt;/code&gt; . Esto es &amp;uacute;til porque una plantilla, despu&amp;eacute;s de ser compilada, puede recibir diferentes asignaciones y no requerir&amp;iacute;a recompilaci&amp;oacute;n para cada conjunto de variables.</target>
        </trans-unit>
        <trans-unit id="67d3a850b4e721008a9a33c249f890ed36ddb4d7" translate="yes" xml:space="preserve">
          <source>In the example above, we captured &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#is_atom/1&quot;&gt;&lt;code&gt;Kernel.is_atom/1&lt;/code&gt;&lt;/a&gt; as an anonymous function and then invoked it.</source>
          <target state="translated">En el ejemplo anterior, &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#is_atom/1&quot;&gt; &lt;code&gt;Kernel.is_atom/1&lt;/code&gt; &lt;/a&gt; como una funci&amp;oacute;n an&amp;oacute;nima y luego la invocamos.</target>
        </trans-unit>
        <trans-unit id="5661752d4cc9fd9fdd4a2d139f2888ecb877cbf6" translate="yes" xml:space="preserve">
          <source>In the example above, we captured &lt;a href=&quot;kernel#is_atom/1&quot;&gt;&lt;code&gt;Kernel.is_atom/1&lt;/code&gt;&lt;/a&gt; as an anonymous function and then invoked it.</source>
          <target state="translated">En el ejemplo anterior, &lt;a href=&quot;kernel#is_atom/1&quot;&gt; &lt;code&gt;Kernel.is_atom/1&lt;/code&gt; &lt;/a&gt; como una funci&amp;oacute;n an&amp;oacute;nima y luego la invocamos.</target>
        </trans-unit>
        <trans-unit id="ca7f8c9d2062b97da89273704dad9ed0703a8452" translate="yes" xml:space="preserve">
          <source>In the example above, we create tasks that sleep from 1 up to 10 seconds and return the number of seconds they slept for. If you execute the code all at once, you should see 1 up to 5 printed, as those were the tasks that have replied in the given time. All other tasks will have been shut down using the &lt;a href=&quot;#shutdown/2&quot;&gt;&lt;code&gt;Task.shutdown/2&lt;/code&gt;&lt;/a&gt; call.</source>
          <target state="translated">En el ejemplo anterior, creamos tareas que duermen desde 1 hasta 10 segundos y devuelven la cantidad de segundos durante los que durmieron. Si ejecuta el c&amp;oacute;digo todo a la vez, deber&amp;iacute;a ver 1 hasta 5 impresos, ya que esas fueron las tareas que han respondido en el tiempo dado. Todas las dem&amp;aacute;s tareas se habr&amp;aacute;n cerrado mediante la llamada &lt;a href=&quot;#shutdown/2&quot;&gt; &lt;code&gt;Task.shutdown/2&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e3bbf3a8f78417d03c53c8a99adeb57f91aa4785" translate="yes" xml:space="preserve">
          <source>In the example above, we create tasks that sleep from 1 up to 10 seconds and return the number of seconds they slept for. If you execute the code all at once, you should see 1 up to 5 printed, as those were the tasks that have replied in the given time. All other tasks will have been shut down using the &lt;a href=&quot;task#shutdown/2&quot;&gt;&lt;code&gt;Task.shutdown/2&lt;/code&gt;&lt;/a&gt; call.</source>
          <target state="translated">En el ejemplo anterior, creamos tareas que duermen desde 1 hasta 10 segundos y devuelven la cantidad de segundos que durmieron. Si ejecuta el c&amp;oacute;digo todo a la vez, deber&amp;iacute;a ver 1 hasta 5 impresos, ya que esas fueron las tareas que han respondido en el tiempo dado. Todas las dem&amp;aacute;s tareas se habr&amp;aacute;n cerrado mediante la llamada &lt;a href=&quot;task#shutdown/2&quot;&gt; &lt;code&gt;Task.shutdown/2&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="43dbb6ffa3efa205c169cb0eb943acb32507c0e1" translate="yes" xml:space="preserve">
          <source>In the example above, we defined an anonymous function that receives two arguments, &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;, and returns the result of &lt;code&gt;a + b&lt;/code&gt;. The arguments are always on the left-hand side of &lt;code&gt;-&amp;gt;&lt;/code&gt; and the code to be executed on the right-hand side. The anonymous function is stored in the variable &lt;code&gt;add&lt;/code&gt;.</source>
          <target state="translated">En el ejemplo anterior, definimos una funci&amp;oacute;n an&amp;oacute;nima que recibe dos argumentos, &lt;code&gt;a&lt;/code&gt; y &lt;code&gt;b&lt;/code&gt; , y devuelve el resultado de &lt;code&gt;a + b&lt;/code&gt; . Los argumentos est&amp;aacute;n siempre en el lado izquierdo de &lt;code&gt;-&amp;gt;&lt;/code&gt; y el c&amp;oacute;digo a ejecutar en el lado derecho. La funci&amp;oacute;n an&amp;oacute;nima se almacena en la variable &lt;code&gt;add&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5b2957729dcc7602ce0c24fbab3553e81f82dbdc" translate="yes" xml:space="preserve">
          <source>In the example above, we defined specs for workers and supervisors. These specs (both for workers as well as supervisors) accept the following options:</source>
          <target state="translated">En el ejemplo anterior,definimos las especificaciones para los trabajadores y los supervisores.Estas especificaciones (tanto para los trabajadores como para los supervisores)aceptan las siguientes opciones:</target>
        </trans-unit>
        <trans-unit id="5e6b4da92c054f57ac5d7ebeeafc523687c5adff" translate="yes" xml:space="preserve">
          <source>In the example above, we have created a new port that executes the program &lt;code&gt;cat&lt;/code&gt;. &lt;code&gt;cat&lt;/code&gt; is a program available on UNIX systems that receives data from multiple inputs and concatenates them in the output.</source>
          <target state="translated">En el ejemplo anterior, hemos creado un nuevo puerto que ejecuta el programa &lt;code&gt;cat&lt;/code&gt; . &lt;code&gt;cat&lt;/code&gt; es un programa disponible en sistemas UNIX que recibe datos de m&amp;uacute;ltiples entradas y los concatena en la salida.</target>
        </trans-unit>
        <trans-unit id="156803f5c97e61fd27214bc1371c5ad133572347" translate="yes" xml:space="preserve">
          <source>In the example above, we have created a new port that executes the program &lt;code&gt;cat&lt;/code&gt;. &lt;code&gt;cat&lt;/code&gt; is a program available on Unix-like operating systems that receives data from multiple inputs and concatenates them in the output.</source>
          <target state="translated">En el ejemplo anterior, hemos creado un nuevo puerto que ejecuta el programa &lt;code&gt;cat&lt;/code&gt; . &lt;code&gt;cat&lt;/code&gt; es un programa disponible en sistemas operativos similares a Unix que recibe datos de m&amp;uacute;ltiples entradas y los concatena en la salida.</target>
        </trans-unit>
        <trans-unit id="b0e39547d1868b820dfb08e74cce03806dbaf13c" translate="yes" xml:space="preserve">
          <source>In the example above, we have defined a tag called &lt;code&gt;:cd&lt;/code&gt; that is read in the setup callback to configure the working directory the test is going to run on.</source>
          <target state="translated">En el ejemplo anterior, hemos definido una etiqueta llamada &lt;code&gt;:cd&lt;/code&gt; que se lee en la devoluci&amp;oacute;n de llamada de configuraci&amp;oacute;n para configurar el directorio de trabajo en el que se ejecutar&amp;aacute; la prueba.</target>
        </trans-unit>
        <trans-unit id="0fd333e5963bb492deae7a782ebcecbae48824d5" translate="yes" xml:space="preserve">
          <source>In the example above, we have defined an alias named &lt;code&gt;mix all&lt;/code&gt;, that prints &quot;Hello world&quot;, then fetches dependencies specific to the current environment, and compiles the project.</source>
          <target state="translated">En el ejemplo anterior, hemos definido un alias llamado &lt;code&gt;mix all&lt;/code&gt; , que imprime &quot;Hola mundo&quot;, luego busca las dependencias espec&amp;iacute;ficas del entorno actual y compila el proyecto.</target>
        </trans-unit>
        <trans-unit id="660bac6b0180ebfa96d383b78487f5cdbac50030" translate="yes" xml:space="preserve">
          <source>In the example above, we have defined two aliases. One is &lt;code&gt;mix c&lt;/code&gt; which is a shortcut for &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Compile.html&quot;&gt;&lt;code&gt;mix compile&lt;/code&gt;&lt;/a&gt;. The other is named &lt;code&gt;mix hello&lt;/code&gt;, which is the equivalent to the &lt;code&gt;Mix.Tasks.Hello&lt;/code&gt; we have defined in the &quot;Mix.Task&quot; section.</source>
          <target state="translated">En el ejemplo anterior, hemos definido dos alias. Uno es &lt;code&gt;mix c&lt;/code&gt; , que es un atajo para la &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Compile.html&quot;&gt; &lt;code&gt;mix compile&lt;/code&gt; &lt;/a&gt; . El otro se llama &lt;code&gt;mix hello&lt;/code&gt; , que es el equivalente al &lt;code&gt;Mix.Tasks.Hello&lt;/code&gt; que hemos definido en la secci&amp;oacute;n &quot;Mix.Task&quot;.</target>
        </trans-unit>
        <trans-unit id="b55e3dbdcda3974f9c85104c4aab9938de0f3064" translate="yes" xml:space="preserve">
          <source>In the example above, we have defined two aliases. One is &lt;code&gt;mix c&lt;/code&gt; which is a shortcut for &lt;a href=&quot;mix.tasks.compile&quot;&gt;&lt;code&gt;mix compile&lt;/code&gt;&lt;/a&gt;. The other is named &lt;code&gt;mix hello&lt;/code&gt;, which is the equivalent to the &lt;code&gt;Mix.Tasks.Hello&lt;/code&gt; we have defined in the &quot;Mix.Task&quot; section.</source>
          <target state="translated">En el ejemplo anterior, hemos definido dos alias. Uno es &lt;code&gt;mix c&lt;/code&gt; , que es un atajo para la &lt;a href=&quot;mix.tasks.compile&quot;&gt; &lt;code&gt;mix compile&lt;/code&gt; &lt;/a&gt; . El otro se llama &lt;code&gt;mix hello&lt;/code&gt; , que es el equivalente al &lt;code&gt;Mix.Tasks.Hello&lt;/code&gt; que hemos definido en la secci&amp;oacute;n &quot;Mix.Task&quot;.</target>
        </trans-unit>
        <trans-unit id="61eada0cb9cbd1b50540cd6782b9dfeead876351" translate="yes" xml:space="preserve">
          <source>In the example above, we have generated the functions &lt;code&gt;foo/0&lt;/code&gt; and &lt;code&gt;bar/0&lt;/code&gt; dynamically. Now, imagine that we want to convert this functionality into a macro:</source>
          <target state="translated">En el ejemplo anterior, hemos generado las funciones &lt;code&gt;foo/0&lt;/code&gt; y &lt;code&gt;bar/0&lt;/code&gt; din&amp;aacute;micamente. Ahora imagina que queremos convertir esta funcionalidad en una macro:</target>
        </trans-unit>
        <trans-unit id="eb997411d2a35ea49834890c6520f8f8d681bd86" translate="yes" xml:space="preserve">
          <source>In the example above, we have set up &lt;code&gt;MyKeyword&lt;/code&gt; to be aliased as &lt;a href=&quot;https://hexdocs.pm/elixir/Keyword.html&quot;&gt;&lt;code&gt;Keyword&lt;/code&gt;&lt;/a&gt;. So now, any reference to &lt;a href=&quot;https://hexdocs.pm/elixir/Keyword.html&quot;&gt;&lt;code&gt;Keyword&lt;/code&gt;&lt;/a&gt; will be automatically replaced by &lt;code&gt;MyKeyword&lt;/code&gt;.</source>
          <target state="translated">En el ejemplo anterior, hemos configurado &lt;code&gt;MyKeyword&lt;/code&gt; para que tenga un alias como &lt;a href=&quot;https://hexdocs.pm/elixir/Keyword.html&quot;&gt; &lt;code&gt;Keyword&lt;/code&gt; &lt;/a&gt; . Entonces, ahora, cualquier referencia a &lt;a href=&quot;https://hexdocs.pm/elixir/Keyword.html&quot;&gt; &lt;code&gt;Keyword&lt;/code&gt; &lt;/a&gt; ser&amp;aacute; reemplazada autom&amp;aacute;ticamente por &lt;code&gt;MyKeyword&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5c4c73a0b16c4020cd89858453c999ce24f50d3b" translate="yes" xml:space="preserve">
          <source>In the example above, we have set up &lt;code&gt;MyKeyword&lt;/code&gt; to be aliased as &lt;a href=&quot;keyword&quot;&gt;&lt;code&gt;Keyword&lt;/code&gt;&lt;/a&gt;. So now, any reference to &lt;a href=&quot;keyword&quot;&gt;&lt;code&gt;Keyword&lt;/code&gt;&lt;/a&gt; will be automatically replaced by &lt;code&gt;MyKeyword&lt;/code&gt;.</source>
          <target state="translated">En el ejemplo anterior, hemos configurado &lt;code&gt;MyKeyword&lt;/code&gt; para que tenga un alias como &lt;a href=&quot;keyword&quot;&gt; &lt;code&gt;Keyword&lt;/code&gt; &lt;/a&gt; . Entonces, ahora, cualquier referencia a &lt;a href=&quot;keyword&quot;&gt; &lt;code&gt;Keyword&lt;/code&gt; &lt;/a&gt; ser&amp;aacute; reemplazada autom&amp;aacute;ticamente por &lt;code&gt;MyKeyword&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="053a645de735a836658d24ec36de529750445dbd" translate="yes" xml:space="preserve">
          <source>In the example above, we have used the &lt;code&gt;plug/1&lt;/code&gt; macro to connect functions that will be invoked when there is a web request. Internally, every time you call &lt;code&gt;plug/1&lt;/code&gt;, the Plug library stores the given argument in a &lt;code&gt;@plugs&lt;/code&gt; attribute. Just before the module is compiled, Plug runs a callback that defines a function (&lt;code&gt;call/2&lt;/code&gt;) which handles HTTP requests. This function will run all plugs inside &lt;code&gt;@plugs&lt;/code&gt; in order.</source>
          <target state="translated">En el ejemplo anterior, hemos utilizado la macro &lt;code&gt;plug/1&lt;/code&gt; para conectar funciones que se invocar&amp;aacute;n cuando haya una solicitud web. Internamente, cada vez que llama a &lt;code&gt;plug/1&lt;/code&gt; , la biblioteca de Plug almacena el argumento dado en un atributo &lt;code&gt;@plugs&lt;/code&gt; . Justo antes de que se compile el m&amp;oacute;dulo, Plug ejecuta una devoluci&amp;oacute;n de llamada que define una funci&amp;oacute;n ( &lt;code&gt;call/2&lt;/code&gt; ) que maneja las solicitudes HTTP. Esta funci&amp;oacute;n ejecutar&amp;aacute; todos los enchufes dentro de &lt;code&gt;@plugs&lt;/code&gt; en orden.</target>
        </trans-unit>
        <trans-unit id="245b9813cb08572f08e7ce35fd5f72dcd40372ab" translate="yes" xml:space="preserve">
          <source>In the example above, we imported macros from &lt;code&gt;MyMacros&lt;/code&gt;, replacing the original &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#if/2&quot;&gt;&lt;code&gt;if/2&lt;/code&gt;&lt;/a&gt; implementation by our own within that specific function. All other functions in that module will still be able to use the original one.</source>
          <target state="translated">En el ejemplo anterior, &lt;code&gt;MyMacros&lt;/code&gt; macros de MyMacros , reemplazando la implementaci&amp;oacute;n original de &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#if/2&quot;&gt; &lt;code&gt;if/2&lt;/code&gt; &lt;/a&gt; por la nuestra dentro de esa funci&amp;oacute;n espec&amp;iacute;fica. Todas las dem&amp;aacute;s funciones de ese m&amp;oacute;dulo a&amp;uacute;n podr&amp;aacute;n utilizar la original.</target>
        </trans-unit>
        <trans-unit id="d04cc9035f609252303b7cf3699ee2289f736ec0" translate="yes" xml:space="preserve">
          <source>In the example above, we imported macros from &lt;code&gt;MyMacros&lt;/code&gt;, replacing the original &lt;a href=&quot;kernel#if/2&quot;&gt;&lt;code&gt;if/2&lt;/code&gt;&lt;/a&gt; implementation by our own within that specific function. All other functions in that module will still be able to use the original one.</source>
          <target state="translated">En el ejemplo anterior, &lt;code&gt;MyMacros&lt;/code&gt; macros de MyMacros , reemplazando la implementaci&amp;oacute;n original de &lt;a href=&quot;kernel#if/2&quot;&gt; &lt;code&gt;if/2&lt;/code&gt; &lt;/a&gt; por la nuestra dentro de esa funci&amp;oacute;n espec&amp;iacute;fica. Todas las dem&amp;aacute;s funciones de ese m&amp;oacute;dulo a&amp;uacute;n podr&amp;aacute;n utilizar la original.</target>
        </trans-unit>
        <trans-unit id="143be83aa54f7c530d19333f4615426ffc2f8abd" translate="yes" xml:space="preserve">
          <source>In the example above, we match &lt;code&gt;thing&lt;/code&gt; against each clause &quot;head&quot; and execute the clause &quot;body&quot; corresponding to the first clause that matches.</source>
          <target state="translated">En el ejemplo anterior, emparejamos &lt;code&gt;thing&lt;/code&gt; con cada cl&amp;aacute;usula &quot;head&quot; y ejecutamos la cl&amp;aacute;usula &quot;body&quot; correspondiente a la primera cl&amp;aacute;usula que coincide.</target>
        </trans-unit>
        <trans-unit id="6b838b0193a4108fff85d3563dd635cc22b74b28" translate="yes" xml:space="preserve">
          <source>In the example above, we pass a string with &lt;code&gt;\n&lt;/code&gt; escaped and return a version with it unescaped.</source>
          <target state="translated">En el ejemplo anterior, pasamos una cadena con &lt;code&gt;\n&lt;/code&gt; escapado y devolvemos una versi&amp;oacute;n sin escapado.</target>
        </trans-unit>
        <trans-unit id="d7a1701f06e939aba29cc4e178e9955eb9fec15b" translate="yes" xml:space="preserve">
          <source>In the example above, we prefixed the function names with the command name used to execute them, but that is entirely optional.</source>
          <target state="translated">En el ejemplo anterior,hemos antepuesto a los nombres de las funciones el nombre del comando utilizado para ejecutarlas,pero eso es totalmente opcional.</target>
        </trans-unit>
        <trans-unit id="e34b35a1a0f6a7ae64d902f20f6d3b6957890f8c" translate="yes" xml:space="preserve">
          <source>In the example above, we show how guards can be used in function clauses. There are several constructs that allow guards; for example:</source>
          <target state="translated">En el ejemplo anterior,mostramos cómo se pueden utilizar los guardias en las cláusulas de función.Hay varias construcciones que permiten los guardias;por ejemplo:</target>
        </trans-unit>
        <trans-unit id="e73b208830253cfcccda8b595f6a7fc37ec019c4" translate="yes" xml:space="preserve">
          <source>In the example below we register the current process and ask for the number of keys in the registry:</source>
          <target state="translated">En el ejemplo que se presenta a continuación se registra el proceso actual y se pide el número de claves en el registro:</target>
        </trans-unit>
        <trans-unit id="600451af2621db08950612f2b8a384ceb1caba3b" translate="yes" xml:space="preserve">
          <source>In the example below we register the current process and look it up both from itself and other processes:</source>
          <target state="translated">En el ejemplo siguiente registramos el proceso actual y lo buscamos tanto en sí mismo como en otros procesos:</target>
        </trans-unit>
        <trans-unit id="798fe8739fe086fd76b2f2f854df6fe2d36c1741" translate="yes" xml:space="preserve">
          <source>In the example below we register the current process under the same key in a duplicate registry but with different values:</source>
          <target state="translated">En el ejemplo que figura a continuación se registra el proceso actual bajo la misma clave en un registro duplicado pero con valores diferentes:</target>
        </trans-unit>
        <trans-unit id="78080544e53670fa0133b74d89a92858bb262655" translate="yes" xml:space="preserve">
          <source>In the example below, we have a macro that generates a module with a function named &lt;code&gt;name_length&lt;/code&gt; that returns the length of the module name. The value of this function will be calculated at compilation time and not at runtime.</source>
          <target state="translated">En el siguiente ejemplo, tenemos una macro que genera un m&amp;oacute;dulo con una funci&amp;oacute;n llamada &lt;code&gt;name_length&lt;/code&gt; que devuelve la longitud del nombre del m&amp;oacute;dulo. El valor de esta funci&amp;oacute;n se calcular&amp;aacute; en tiempo de compilaci&amp;oacute;n y no en tiempo de ejecuci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="f8f1d08583916da8a72b67e1316644cdd98dc53a" translate="yes" xml:space="preserve">
          <source>In the example below, we pass a directory to where the &lt;a href=&quot;#c/2&quot;&gt;&lt;code&gt;c/2&lt;/code&gt;&lt;/a&gt; function will write the compiled &lt;code&gt;.beam&lt;/code&gt; files to. This directory is typically named &quot;ebin&quot; in Erlang/Elixir systems:</source>
          <target state="translated">En el siguiente ejemplo, pasamos un directorio donde la funci&amp;oacute;n &lt;a href=&quot;#c/2&quot;&gt; &lt;code&gt;c/2&lt;/code&gt; &lt;/a&gt; escribir&amp;aacute; los archivos &lt;code&gt;.beam&lt;/code&gt; compilados . Este directorio normalmente se denomina &quot;ebin&quot; en los sistemas Erlang / Elixir:</target>
        </trans-unit>
        <trans-unit id="15375188c3b299d4050635b90946ba7afce11069" translate="yes" xml:space="preserve">
          <source>In the example below, we use a function to get all the maps inside a list:</source>
          <target state="translated">En el siguiente ejemplo,utilizamos una función para obtener todos los mapas dentro de una lista:</target>
        </trans-unit>
        <trans-unit id="7b9f19cdead9cbae542d5210ec70e748cea04410" translate="yes" xml:space="preserve">
          <source>In the examples above, all the comprehensions returned lists as their result. However, the result of a comprehension can be inserted into different data structures by passing the &lt;code&gt;:into&lt;/code&gt; option to the comprehension.</source>
          <target state="translated">En los ejemplos anteriores, todas las comprensiones devolvieron listas como resultado. Sin embargo, el resultado de una comprensi&amp;oacute;n se puede insertar en diferentes estructuras de datos pasando la opci&amp;oacute;n &lt;code&gt;:into&lt;/code&gt; a la comprensi&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="e7b33831c78babc5b4b6a0cc0e2347ac123865c0" translate="yes" xml:space="preserve">
          <source>In the examples above, the result returned by the comprehension was always a list. The returned result can be configured by passing an &lt;code&gt;:into&lt;/code&gt; option, that accepts any structure as long as it implements the &lt;a href=&quot;collectable&quot;&gt;&lt;code&gt;Collectable&lt;/code&gt;&lt;/a&gt; protocol.</source>
          <target state="translated">En los ejemplos anteriores, el resultado devuelto por la comprensi&amp;oacute;n siempre fue una lista. El resultado devuelto se puede configurar pasando una opci&amp;oacute;n &lt;code&gt;:into&lt;/code&gt; , que acepta cualquier estructura siempre que implemente el protocolo &lt;a href=&quot;collectable&quot;&gt; &lt;code&gt;Collectable&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="73e547c48fc4efe942c1938b956ce334b82c040a" translate="yes" xml:space="preserve">
          <source>In the examples above, the result returned by the comprehension was always a list. The returned result can be configured by passing an &lt;code&gt;:into&lt;/code&gt; option, that accepts any structure as long as it implements the &lt;a href=&quot;https://hexdocs.pm/elixir/Collectable.html&quot;&gt;&lt;code&gt;Collectable&lt;/code&gt;&lt;/a&gt; protocol.</source>
          <target state="translated">En los ejemplos anteriores, el resultado devuelto por la comprensi&amp;oacute;n siempre fue una lista. El resultado devuelto se puede configurar pasando una opci&amp;oacute;n &lt;code&gt;:into&lt;/code&gt; , que acepta cualquier estructura siempre que implemente el protocolo &lt;a href=&quot;https://hexdocs.pm/elixir/Collectable.html&quot;&gt; &lt;code&gt;Collectable&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="dec1f7ea6cca2c448adce8e9cc2f35e0ad761d20" translate="yes" xml:space="preserve">
          <source>In the examples above, we have used the match operator (&lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.SpecialForms.html#=/2&quot;&gt;&lt;code&gt;=&lt;/code&gt;&lt;/a&gt;) and function clauses to showcase patterns and guards respectively. Here is the list of the built-in constructs in Elixir that support patterns and guards.</source>
          <target state="translated">En los ejemplos anteriores, hemos utilizado el operador de coincidencia ( &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.SpecialForms.html#=/2&quot;&gt; &lt;code&gt;=&lt;/code&gt; &lt;/a&gt; ) y las cl&amp;aacute;usulas de funci&amp;oacute;n para mostrar patrones y protecciones respectivamente. Aqu&amp;iacute; est&amp;aacute; la lista de las construcciones integradas en Elixir que admiten patrones y guardias.</target>
        </trans-unit>
        <trans-unit id="d0daacadfe9f7077fb5dcbe6bf521a065a6a635d" translate="yes" xml:space="preserve">
          <source>In the expression above, &lt;code&gt;n &amp;lt;- [1, 2, 3, 4]&lt;/code&gt; is the &lt;strong&gt;generator&lt;/strong&gt;. It is literally generating values to be used in the comprehension. Any enumerable can be passed on the right-hand side of the generator expression:</source>
          <target state="translated">En la expresi&amp;oacute;n anterior, &lt;code&gt;n &amp;lt;- [1, 2, 3, 4]&lt;/code&gt; es el &lt;strong&gt;generador&lt;/strong&gt; . Literalmente est&amp;aacute; generando valores para ser utilizados en la comprensi&amp;oacute;n. Cualquier enumerable se puede pasar en el lado derecho de la expresi&amp;oacute;n del generador:</target>
        </trans-unit>
        <trans-unit id="5f3acf5fd7cb6799236adf41693aa239ed339ba4" translate="yes" xml:space="preserve">
          <source>In the first example the accent is before the vowel, so it is considered two graphemes. However, when you reverse it once, you have the vowel followed by the accent, which becomes one grapheme. Reversing it again will keep it as one single grapheme.</source>
          <target state="translated">En el primer ejemplo el acento está antes de la vocal,por lo que se considera dos grafismos.Sin embargo,cuando lo inviertes una vez,tienes la vocal seguida del acento,que se convierte en un solo grafema.Al invertirla de nuevo se mantiene como un solo grafema.</target>
        </trans-unit>
        <trans-unit id="81851c5f2cda0fa01d07a6553b4cc2343064b54a" translate="yes" xml:space="preserve">
          <source>In the first scenario, a lock is received in &lt;code&gt;opts&lt;/code&gt; and the repository must be updated to the lock. In the second, no lock is given and the repository can be updated freely.</source>
          <target state="translated">En el primer escenario, se recibe un candado en &lt;code&gt;opts&lt;/code&gt; y el repositorio debe actualizarse al candado. En el segundo, no se otorga ning&amp;uacute;n bloqueo y el repositorio se puede actualizar libremente.</target>
        </trans-unit>
        <trans-unit id="edabe1bf622029e68e1aff637ff6cf8ec47fb508" translate="yes" xml:space="preserve">
          <source>In the following sections, our examples are going to get longer in size, and it can be tricky to type them all in the shell. It&amp;rsquo;s about time for us to learn how to compile Elixir code and also how to run Elixir scripts.</source>
          <target state="translated">En las siguientes secciones, nuestros ejemplos aumentar&amp;aacute;n de tama&amp;ntilde;o y puede ser complicado escribirlos todos en el shell. Es hora de que aprendamos a compilar c&amp;oacute;digo Elixir y tambi&amp;eacute;n a ejecutar scripts Elixir.</target>
        </trans-unit>
        <trans-unit id="ea21b7568312a339bf9ae152813dc701fedd0816" translate="yes" xml:space="preserve">
          <source>In the next chapter, we are going to discuss pattern matching through the use of &lt;code&gt;=&lt;/code&gt;, the match operator.</source>
          <target state="translated">En el pr&amp;oacute;ximo cap&amp;iacute;tulo, discutiremos la coincidencia de patrones mediante el uso de &lt;code&gt;=&lt;/code&gt; , el operador de coincidencia.</target>
        </trans-unit>
        <trans-unit id="d8135bc13d648cc8121bc02383bb281b2bb322ce" translate="yes" xml:space="preserve">
          <source>In the next chapter, we will explore GenServers, where the segregation between clients and servers is made more apparent.</source>
          <target state="translated">En el próximo capítulo,exploraremos los GenServers,donde la segregación entre clientes y servidores se hace más evidente.</target>
        </trans-unit>
        <trans-unit id="71fe1559a8acce4f8cb459f05a93f2c23c27af01" translate="yes" xml:space="preserve">
          <source>In the next chapter, we will start parsing the client requests and sending responses, finishing our server.</source>
          <target state="translated">En el próximo capítulo,comenzaremos a analizar las solicitudes de los clientes y a enviar respuestas,terminando nuestro servidor.</target>
        </trans-unit>
        <trans-unit id="97a27cfc769eb0315701a749f650534e93e63132" translate="yes" xml:space="preserve">
          <source>In the next chapters, we&amp;rsquo;ll explore structs and protocols before moving to exception handling and other constructs like sigils and comprehensions.</source>
          <target state="translated">En los pr&amp;oacute;ximos cap&amp;iacute;tulos, exploraremos estructuras y protocolos antes de pasar al manejo de excepciones y otras construcciones como sigilos y comprensiones.</target>
        </trans-unit>
        <trans-unit id="83c96bdabbdcc08e2e498fa4f73aafa1f188be21" translate="yes" xml:space="preserve">
          <source>In the previous chapter about &lt;code&gt;GenServer&lt;/code&gt;, we implemented &lt;code&gt;KV.Registry&lt;/code&gt; to manage buckets. At some point, we started monitoring buckets so we were able to take action whenever a &lt;code&gt;KV.Bucket&lt;/code&gt; crashed. Although the change was relatively small, it introduced a question which is frequently asked by Elixir developers: what happens when something fails?</source>
          <target state="translated">En el cap&amp;iacute;tulo anterior sobre &lt;code&gt;GenServer&lt;/code&gt; , implementamos &lt;code&gt;KV.Registry&lt;/code&gt; para administrar cubos. En alg&amp;uacute;n momento, comenzamos a monitorear los dep&amp;oacute;sitos para poder tomar medidas cada vez que un &lt;code&gt;KV.Bucket&lt;/code&gt; fallaba . Aunque el cambio fue relativamente peque&amp;ntilde;o, introdujo una pregunta que los desarrolladores de Elixir hacen con frecuencia: &amp;iquest;qu&amp;eacute; sucede cuando algo falla?</target>
        </trans-unit>
        <trans-unit id="7c0c1e10201013cbed4ae2f15c5fb7856de2269f" translate="yes" xml:space="preserve">
          <source>In the previous chapters, we have always started processes directly. For example, we would call &lt;code&gt;KV.Registry.start_link([])&lt;/code&gt;, which would return &lt;code&gt;{:ok, pid}&lt;/code&gt;, and that would allow us to interact with the registry via its &lt;code&gt;pid&lt;/code&gt;. Now that processes are started by the supervisor, we have to directly ask the supervisor who its children are, and fetch the pid from the returned list of children. In practice, doing so every time would be very expensive. To address this, we often give names to processes, allowing them to be uniquely identified in a single machine from anywhere in our code.</source>
          <target state="translated">En los cap&amp;iacute;tulos anteriores, siempre hemos iniciado procesos directamente. Por ejemplo, llamar&amp;iacute;amos &lt;code&gt;KV.Registry.start_link([])&lt;/code&gt; , que devolver&amp;iacute;a &lt;code&gt;{:ok, pid}&lt;/code&gt; , y eso nos permitir&amp;iacute;a interactuar con el registro a trav&amp;eacute;s de su &lt;code&gt;pid&lt;/code&gt; . Ahora que el supervisor inicia los procesos, tenemos que preguntarle directamente al supervisor qui&amp;eacute;nes son sus hijos y buscar el pid de la lista de hijos devueltos. En la pr&amp;aacute;ctica, hacerlo siempre resultar&amp;iacute;a muy caro. Para abordar esto, a menudo damos nombres a los procesos, lo que les permite ser identificados de forma &amp;uacute;nica en una sola m&amp;aacute;quina desde cualquier lugar de nuestro c&amp;oacute;digo.</target>
        </trans-unit>
        <trans-unit id="d89af771bb31edf816f69ac576dd476d68e9b7c3" translate="yes" xml:space="preserve">
          <source>In the previous example, we read the application environment at runtime:</source>
          <target state="translated">En el ejemplo anterior,leímos el entorno de la aplicación en tiempo de ejecución:</target>
        </trans-unit>
        <trans-unit id="023e1eab071b1e9447d8611d553a6798a82a86d3" translate="yes" xml:space="preserve">
          <source>In the previous example, we were not interested in associating a value to the process:</source>
          <target state="translated">En el ejemplo anterior,no nos interesaba asociar un valor al proceso:</target>
        </trans-unit>
        <trans-unit id="59cfb6ab9287629bc99d4335b390c03667b20499" translate="yes" xml:space="preserve">
          <source>In the returned result, keys are variable names and values are the corresponding variable values.</source>
          <target state="translated">En el resultado devuelto,las claves son los nombres de las variables y los valores son los valores de las variables correspondientes.</target>
        </trans-unit>
        <trans-unit id="de1b308ba8fcb658982badee13287d07ac9706b3" translate="yes" xml:space="preserve">
          <source>In the second line of the failure, right below the test name, there is the location where the test was defined. If you copy the test location in full, including the file and line number, and append it to &lt;code&gt;mix test&lt;/code&gt;, Mix will load and run just that particular test:</source>
          <target state="translated">En la segunda l&amp;iacute;nea de la falla, justo debajo del nombre de la prueba, se encuentra la ubicaci&amp;oacute;n donde se defini&amp;oacute; la prueba. Si copia la ubicaci&amp;oacute;n de la prueba en su totalidad, incluido el archivo y el n&amp;uacute;mero de l&amp;iacute;nea, y la agrega a la &lt;code&gt;mix test&lt;/code&gt; , Mix cargar&amp;aacute; y ejecutar&amp;aacute; solo esa prueba en particular:</target>
        </trans-unit>
        <trans-unit id="f677b0be0ad961b242015e2787d48da5351af3eb" translate="yes" xml:space="preserve">
          <source>In the sections above, we have configured an application in the &lt;code&gt;application/0&lt;/code&gt; section of the &lt;code&gt;mix.exs&lt;/code&gt; file. Ultimately, Mix will use this configuration to create an &lt;a href=&quot;http://erlang.org/doc/man/app.html&quot;&gt;&lt;em&gt;application resource file&lt;/em&gt;&lt;/a&gt;, which is a file called &lt;code&gt;APP_NAME.app&lt;/code&gt;. For example, the application resource file of the OTP application &lt;code&gt;ex_unit&lt;/code&gt; is called &lt;code&gt;ex_unit.app&lt;/code&gt;.</source>
          <target state="translated">En las secciones anteriores, hemos configurado una aplicaci&amp;oacute;n en la secci&amp;oacute;n &lt;code&gt;application/0&lt;/code&gt; del archivo &lt;code&gt;mix.exs&lt;/code&gt; . Finalmente, Mix usar&amp;aacute; esta configuraci&amp;oacute;n para crear un &lt;a href=&quot;http://erlang.org/doc/man/app.html&quot;&gt;&lt;em&gt;archivo de recursos de la aplicaci&amp;oacute;n&lt;/em&gt;&lt;/a&gt; , que es un archivo llamado &lt;code&gt;APP_NAME.app&lt;/code&gt; . Por ejemplo, el archivo de recursos de la aplicaci&amp;oacute;n &lt;code&gt;ex_unit&lt;/code&gt; de la aplicaci&amp;oacute;n OTP se llama &lt;code&gt;ex_unit.app&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="56699ac32b40ebbed14cd456a076f153ca769c75" translate="yes" xml:space="preserve">
          <source>In the session above we interacted with the &amp;ldquo;shopping&amp;rdquo; bucket.</source>
          <target state="translated">En la sesi&amp;oacute;n anterior, interactuamos con el cubo de &quot;compras&quot;.</target>
        </trans-unit>
        <trans-unit id="99f7aeec7f3d83fb7c14ef77613795b1757f5d28" translate="yes" xml:space="preserve">
          <source>In this case, the answer is yes: if the acceptor crashes, there is no need to crash the existing connections. On the other hand, if the task supervisor crashes, there is no need to crash the acceptor too.</source>
          <target state="translated">En este caso,la respuesta es sí:si el aceptador se estrella,no hay necesidad de romper las conexiones existentes.Por otro lado,si el supervisor de la tarea se bloquea,no hay necesidad de bloquear el aceptador también.</target>
        </trans-unit>
        <trans-unit id="c5b73c40f211641ff7fce3baa3df52cd94ce14cd" translate="yes" xml:space="preserve">
          <source>In this case, there is no module, so we picked the name &lt;code&gt;KV.BucketSupervisor&lt;/code&gt;. It could have been any other name. We also chose the &lt;code&gt;:one_for_one&lt;/code&gt; strategy, which is currently the only available strategy for dynamic supervisors.</source>
          <target state="translated">En este caso, no hay ning&amp;uacute;n m&amp;oacute;dulo, as&amp;iacute; que elegimos el nombre &lt;code&gt;KV.BucketSupervisor&lt;/code&gt; . Podr&amp;iacute;a haber sido cualquier otro nombre. Tambi&amp;eacute;n elegimos la estrategia &lt;code&gt;:one_for_one&lt;/code&gt; , que actualmente es la &amp;uacute;nica estrategia disponible para supervisores din&amp;aacute;micos.</target>
        </trans-unit>
        <trans-unit id="69b79e652a12895505240a6d60f23b561b08605d" translate="yes" xml:space="preserve">
          <source>In this case, we are importing only the function &lt;code&gt;duplicate&lt;/code&gt; (with arity 2) from &lt;code&gt;List&lt;/code&gt;. Although &lt;code&gt;:only&lt;/code&gt; is optional, its usage is recommended in order to avoid importing all the functions of a given module inside the namespace. &lt;code&gt;:except&lt;/code&gt; could also be given as an option in order to import everything in a module &lt;em&gt;except&lt;/em&gt; a list of functions.</source>
          <target state="translated">En este caso, estamos importando solo la funci&amp;oacute;n &lt;code&gt;duplicate&lt;/code&gt; (con arity 2) de &lt;code&gt;List&lt;/code&gt; . Aunque &lt;code&gt;:only&lt;/code&gt; es opcional, se recomienda su uso para evitar importar todas las funciones de un m&amp;oacute;dulo dado dentro del espacio de nombres. &lt;code&gt;:except&lt;/code&gt; tambi&amp;eacute;n se puede dar como una opci&amp;oacute;n para importar todo en un m&amp;oacute;dulo &lt;em&gt;excepto&lt;/em&gt; una lista de funciones.</target>
        </trans-unit>
        <trans-unit id="98ecd27c52ed18c7b95002136d1b65249ac3fde1" translate="yes" xml:space="preserve">
          <source>In this chapter we will learn more about Elixir basic types: integers, floats, booleans, atoms, strings, lists and tuples. Some basic types are:</source>
          <target state="translated">En este capítulo aprenderemos más sobre los tipos básicos de Elixir:enteros,flotadores,booleanos,átomos,cuerdas,listas y tuplas.Algunos tipos básicos son:</target>
        </trans-unit>
        <trans-unit id="95bc41f24cd4a15d49d6be30cfe2c21aeb083956" translate="yes" xml:space="preserve">
          <source>In this chapter, we are going to explore sigils, which are one of the mechanisms provided by the language for working with textual representations. Sigils start with the tilde (&lt;code&gt;~&lt;/code&gt;) character which is followed by a letter (which identifies the sigil) and then a delimiter; optionally, modifiers can be added after the final delimiter.</source>
          <target state="translated">En este cap&amp;iacute;tulo, vamos a explorar los sigilos, que son uno de los mecanismos que proporciona el lenguaje para trabajar con representaciones textuales. Los sigilos comienzan con el car&amp;aacute;cter tilde ( &lt;code&gt;~&lt;/code&gt; ) seguido de una letra (que identifica al sigilo) y luego un delimitador; opcionalmente, se pueden agregar modificadores despu&amp;eacute;s del delimitador final.</target>
        </trans-unit>
        <trans-unit id="8ac2c0d2324769d5f24fd923ab3874ad8881b99a" translate="yes" xml:space="preserve">
          <source>In this chapter, we are going to learn how to use &lt;a href=&quot;http://www.erlang.org/doc/man/gen_tcp.html&quot;&gt;Erlang&amp;rsquo;s &lt;code&gt;:gen_tcp&lt;/code&gt; module&lt;/a&gt; to serve requests. This provides a great opportunity to explore Elixir&amp;rsquo;s &lt;code&gt;Task&lt;/code&gt; module. In future chapters, we will expand our server so it can actually serve the commands.</source>
          <target state="translated">En este cap&amp;iacute;tulo, aprenderemos c&amp;oacute;mo usar &lt;a href=&quot;http://www.erlang.org/doc/man/gen_tcp.html&quot;&gt;el m&amp;oacute;dulo &lt;code&gt;:gen_tcp&lt;/code&gt; de Erlang&lt;/a&gt; para atender solicitudes. Esto brinda una gran oportunidad para explorar el m&amp;oacute;dulo de &lt;code&gt;Task&lt;/code&gt; de Elixir . En cap&amp;iacute;tulos futuros, ampliaremos nuestro servidor para que realmente pueda servir los comandos.</target>
        </trans-unit>
        <trans-unit id="3790f5eba5f0f0e875bea6125a8a5886ab46f334" translate="yes" xml:space="preserve">
          <source>In this chapter, we have learned more about Mix dependencies and umbrella projects. While we may run &lt;code&gt;kv&lt;/code&gt; without a server, our &lt;code&gt;kv_server&lt;/code&gt; depends directly on &lt;code&gt;kv&lt;/code&gt;. By breaking them into separate applications, we gain more control in how they are developed and tested.</source>
          <target state="translated">En este cap&amp;iacute;tulo, hemos aprendido m&amp;aacute;s sobre las dependencias de Mix y los proyectos generales. Si bien podemos ejecutar &lt;code&gt;kv&lt;/code&gt; sin un servidor, nuestro &lt;code&gt;kv_server&lt;/code&gt; depende directamente de &lt;code&gt;kv&lt;/code&gt; . Al dividirlos en aplicaciones independientes, obtenemos m&amp;aacute;s control sobre c&amp;oacute;mo se desarrollan y prueban.</target>
        </trans-unit>
        <trans-unit id="77b3cbb396af520fe87eb129b43b21e8d9c63f1e" translate="yes" xml:space="preserve">
          <source>In this chapter, we will create our first project using Mix and explore different features in</source>
          <target state="translated">En este capítulo,crearemos nuestro primer proyecto usando Mix y exploraremos diferentes características en</target>
        </trans-unit>
        <trans-unit id="9c4b6a4ca897d48c33e42fad527b3db14a79b9ad" translate="yes" xml:space="preserve">
          <source>In this chapter, we will discuss how to manage dependencies in Mix.</source>
          <target state="translated">En este capítulo,discutiremos cómo manejar las dependencias en Mix.</target>
        </trans-unit>
        <trans-unit id="1d38e5f6537d823a5c3903caf420e15d1b2908d8" translate="yes" xml:space="preserve">
          <source>In this chapter, we will gain clarity on what exactly binaries are, how they relate to strings, and what single-quoted values, &lt;code&gt;'like this'&lt;/code&gt;, mean in Elixir. Although strings are one of the most common data types in computer languages, they are subtly complex and are often misunderstood. To understand strings in Elixir, we have to educate ourselves about &lt;a href=&quot;https://en.wikipedia.org/wiki/Unicode&quot;&gt;Unicode&lt;/a&gt; and character encodings, specifically the &lt;a href=&quot;https://en.wikipedia.org/wiki/UTF-8&quot;&gt;UTF-8&lt;/a&gt; encoding.</source>
          <target state="translated">En este cap&amp;iacute;tulo, obtendremos claridad sobre qu&amp;eacute; son exactamente los binarios, c&amp;oacute;mo se relacionan con las cadenas y qu&amp;eacute; significan los valores entre comillas simples, &lt;code&gt;'like this'&lt;/code&gt; , en Elixir. Aunque las cadenas son uno de los tipos de datos m&amp;aacute;s comunes en los lenguajes inform&amp;aacute;ticos, son sutilmente complejas y, a menudo, se malinterpretan. Para comprender las cadenas en Elixir, tenemos que educarnos sobre &lt;a href=&quot;https://en.wikipedia.org/wiki/Unicode&quot;&gt;Unicode&lt;/a&gt; y las codificaciones de caracteres, espec&amp;iacute;ficamente la &lt;a href=&quot;https://en.wikipedia.org/wiki/UTF-8&quot;&gt;codificaci&amp;oacute;n UTF-8&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d4cdb3f68133770a5d693d42e9c4f0a6b1d29ed8" translate="yes" xml:space="preserve">
          <source>In this chapter, we will go back to the &lt;code&gt;:kv&lt;/code&gt; application and add a routing layer that will allow us to distribute requests between nodes based on the bucket name.</source>
          <target state="translated">En este cap&amp;iacute;tulo, regresaremos a la aplicaci&amp;oacute;n &lt;code&gt;:kv&lt;/code&gt; y agregaremos una capa de enrutamiento que nos permitir&amp;aacute; distribuir solicitudes entre nodos seg&amp;uacute;n el nombre del dep&amp;oacute;sito.</target>
        </trans-unit>
        <trans-unit id="06e8c486e5a64f168562aa1973836cfefc091cf1" translate="yes" xml:space="preserve">
          <source>In this chapter, we will implement the code that parses the commands we described in the first chapter:</source>
          <target state="translated">En este capítulo,implementaremos el código que analiza los comandos que describimos en el primer capítulo:</target>
        </trans-unit>
        <trans-unit id="c851aca018e560f965209935144975cb8ea448f3" translate="yes" xml:space="preserve">
          <source>In this chapter, we will learn about ETS (Erlang Term Storage) and how to use it as a cache mechanism.</source>
          <target state="translated">En este capítulo,aprenderemos sobre el ETS (Almacenamiento a Término de Erlang)y cómo usarlo como mecanismo de caché.</target>
        </trans-unit>
        <trans-unit id="49223bed7f677bd886d57a37c64f3ed6e0f504be" translate="yes" xml:space="preserve">
          <source>In this chapter, we will learn about the &lt;code&gt;case&lt;/code&gt;, &lt;code&gt;cond&lt;/code&gt;, and &lt;code&gt;if&lt;/code&gt; control flow structures.</source>
          <target state="translated">En este cap&amp;iacute;tulo, aprenderemos sobre las estructuras de flujo de control &lt;code&gt;case&lt;/code&gt; , &lt;code&gt;cond&lt;/code&gt; y &lt;code&gt;if&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1590a3a3e635043fe94ad7ec0fb7a6fa472857ed" translate="yes" xml:space="preserve">
          <source>In this chapter, we will learn about the basic constructs for spawning new processes, as well as sending and receiving messages between processes.</source>
          <target state="translated">En este capítulo,aprenderemos acerca de las construcciones básicas para generar nuevos procesos,así como el envío y la recepción de mensajes entre procesos.</target>
        </trans-unit>
        <trans-unit id="7f5c0837809d0d37d72c00bc93c0560646fc3127" translate="yes" xml:space="preserve">
          <source>In this chapter, we will learn how to keep and share state between multiple entities. If you have previous programming experience, you may think of globally shared variables, but the model we will learn here is quite different. The next chapters will generalize the concepts introduced here.</source>
          <target state="translated">En este capítulo,aprenderemos cómo mantener y compartir el estado entre múltiples entidades.Si tienes experiencia previa en programación,puedes pensar en variables compartidas globalmente,pero el modelo que aprenderemos aquí es bastante diferente.Los próximos capítulos generalizarán los conceptos introducidos aquí.</target>
        </trans-unit>
        <trans-unit id="dc7ec789bc29ccf1df57435cd9cab759827e4cca" translate="yes" xml:space="preserve">
          <source>In this chapter, we will learn how to put those concepts into practice by supervising the &lt;code&gt;KV.Registry&lt;/code&gt; process. After all, if something goes wrong with the registry, the whole registry is lost and no bucket could ever be found! To address this, we will define a &lt;code&gt;KV.Supervisor&lt;/code&gt; module that guarantees that our &lt;code&gt;KV.Registry&lt;/code&gt; is up and running at any given moment.</source>
          <target state="translated">En este cap&amp;iacute;tulo, aprenderemos c&amp;oacute;mo poner en pr&amp;aacute;ctica esos conceptos supervisando el proceso de &lt;code&gt;KV.Registry&lt;/code&gt; . Despu&amp;eacute;s de todo, si algo sale mal con el registro, &amp;iexcl;todo el registro se perder&amp;aacute; y no se podr&amp;aacute; encontrar ning&amp;uacute;n dep&amp;oacute;sito! Para abordar esto, definiremos un m&amp;oacute;dulo &lt;code&gt;KV.Supervisor&lt;/code&gt; que garantice que nuestro &lt;code&gt;KV.Registry&lt;/code&gt; est&amp;aacute; en funcionamiento en cualquier momento.</target>
        </trans-unit>
        <trans-unit id="f4e872a924d2554a59dc215ca3cc9595e893d535" translate="yes" xml:space="preserve">
          <source>In this chapter, we will show how the &lt;code&gt;=&lt;/code&gt; operator in Elixir is actually a match operator and how to use it to pattern match inside data structures. Finally, we will learn about the pin operator &lt;code&gt;^&lt;/code&gt; used to access previously bound values.</source>
          <target state="translated">En este cap&amp;iacute;tulo, mostraremos c&amp;oacute;mo el operador &lt;code&gt;=&lt;/code&gt; en Elixir es en realidad un operador de coincidencia y c&amp;oacute;mo usarlo para patrones de coincidencia dentro de estructuras de datos. Finalmente, aprenderemos sobre el operador pin &lt;code&gt;^&lt;/code&gt; usado para acceder a valores previamente ligados.</target>
        </trans-unit>
        <trans-unit id="31213f804ca1ba2bcaeea192ccfad5a4a66aadab" translate="yes" xml:space="preserve">
          <source>In this chapter, we will understand what binaries are, how they associate with strings, and what a single-quoted value, &lt;code&gt;'like this'&lt;/code&gt;, means in Elixir.</source>
          <target state="translated">En este cap&amp;iacute;tulo, entenderemos qu&amp;eacute; son los binarios, c&amp;oacute;mo se asocian con las cadenas y qu&amp;eacute; significa un valor entre comillas simples, &lt;code&gt;'like this'&lt;/code&gt; , en Elixir.</target>
        </trans-unit>
        <trans-unit id="f80acbf2877628032b5dc355543214de25ec8ae5" translate="yes" xml:space="preserve">
          <source>In this example above, we have used &lt;code&gt;.&lt;/code&gt; to invoke &lt;code&gt;downcase&lt;/code&gt; in the &lt;a href=&quot;https://hexdocs.pm/elixir/String.html&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; module, passing &lt;code&gt;&quot;FOO&quot;&lt;/code&gt; as argument.</source>
          <target state="translated">En este ejemplo anterior, hemos utilizado &lt;code&gt;.&lt;/code&gt; para invocar &lt;code&gt;downcase&lt;/code&gt; en el m&amp;oacute;dulo &lt;a href=&quot;https://hexdocs.pm/elixir/String.html&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; , pasando &lt;code&gt;&quot;FOO&quot;&lt;/code&gt; como argumento.</target>
        </trans-unit>
        <trans-unit id="cab0abe1635159a22d386896876d7d1271b3ac90" translate="yes" xml:space="preserve">
          <source>In this example above, we have used &lt;code&gt;.&lt;/code&gt; to invoke &lt;code&gt;downcase&lt;/code&gt; in the &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; module, passing &lt;code&gt;&quot;FOO&quot;&lt;/code&gt; as argument.</source>
          <target state="translated">En este ejemplo anterior, hemos utilizado &lt;code&gt;.&lt;/code&gt; para invocar &lt;code&gt;downcase&lt;/code&gt; en el m&amp;oacute;dulo &lt;a href=&quot;string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; , pasando &lt;code&gt;&quot;FOO&quot;&lt;/code&gt; como argumento.</target>
        </trans-unit>
        <trans-unit id="c10b9029231d6bc54c409155c2532fc1a938191b" translate="yes" xml:space="preserve">
          <source>In this example, &lt;a href=&quot;https://hexdocs.pm/ex_unit/ExUnit.Case.html#__using__/1&quot;&gt;&lt;code&gt;ExUnit.Case.__using__/1&lt;/code&gt;&lt;/a&gt; is called with the keyword list &lt;code&gt;[async: true]&lt;/code&gt; as its argument; &lt;a href=&quot;#use/2&quot;&gt;&lt;code&gt;use/2&lt;/code&gt;&lt;/a&gt; translates to:</source>
          <target state="translated">En este ejemplo, &lt;a href=&quot;https://hexdocs.pm/ex_unit/ExUnit.Case.html#__using__/1&quot;&gt; &lt;code&gt;ExUnit.Case.__using__/1&lt;/code&gt; &lt;/a&gt; se llama con la lista de palabras clave &lt;code&gt;[async: true]&lt;/code&gt; como argumento; &lt;a href=&quot;#use/2&quot;&gt; &lt;code&gt;use/2&lt;/code&gt; se&lt;/a&gt; traduce en:</target>
        </trans-unit>
        <trans-unit id="f2fc4f7ce9494d0ca1b19525b3d662418384d95e" translate="yes" xml:space="preserve">
          <source>In this example, Elixir will call the &lt;code&gt;__using__/1&lt;/code&gt; macro in the &lt;a href=&quot;https://hexdocs.pm/ex_unit/ExUnit.Case.html&quot;&gt;&lt;code&gt;ExUnit.Case&lt;/code&gt;&lt;/a&gt; module with the keyword list &lt;code&gt;[async: true]&lt;/code&gt; as its argument.</source>
          <target state="translated">En este ejemplo, Elixir llamar&amp;aacute; a la &lt;code&gt;__using__/1&lt;/code&gt; en el m&amp;oacute;dulo &lt;a href=&quot;https://hexdocs.pm/ex_unit/ExUnit.Case.html&quot;&gt; &lt;code&gt;ExUnit.Case&lt;/code&gt; &lt;/a&gt; con la lista de palabras clave &lt;code&gt;[async: true]&lt;/code&gt; como argumento.</target>
        </trans-unit>
        <trans-unit id="626c073c42c41fdffe192fe74593219354688844" translate="yes" xml:space="preserve">
          <source>In this example, the order that the application callbacks are called in is:</source>
          <target state="translated">En este ejemplo,el orden en que se llaman las llamadas de la aplicación es:</target>
        </trans-unit>
        <trans-unit id="9b0189dd5873fd5c12528d067cb5fcd86bb62926" translate="yes" xml:space="preserve">
          <source>In this example, we will also set the number of partitions to the number of schedulers online, which will make the registry more performant on highly concurrent environments:</source>
          <target state="translated">En este ejemplo,también estableceremos el número de particiones al número de programadores en línea,lo que hará que el registro sea más eficiente en entornos altamente concurrentes:</target>
        </trans-unit>
        <trans-unit id="bf3e2a2aeea0818b1b9eedf9fbfeaab414232e77" translate="yes" xml:space="preserve">
          <source>In this function, creating the email address will copy the &lt;code&gt;username&lt;/code&gt; and &lt;code&gt;domain&lt;/code&gt; binaries. Now imagine you want to use the resulting email inside another binary:</source>
          <target state="translated">En esta funci&amp;oacute;n, la creaci&amp;oacute;n de la direcci&amp;oacute;n de correo electr&amp;oacute;nico copiar&amp;aacute; el &lt;code&gt;username&lt;/code&gt; y &lt;code&gt;domain&lt;/code&gt; archivos binarios del dominio . Ahora imagina que quieres usar el correo electr&amp;oacute;nico resultante dentro de otro binario:</target>
        </trans-unit>
        <trans-unit id="ddbd4da73762eca8a66a74cb6eb4786c527ab302" translate="yes" xml:space="preserve">
          <source>In this guide, we will learn how to build a complete Elixir application, with its own supervision tree, configuration, tests and more.</source>
          <target state="translated">En esta guía,aprenderemos a construir una aplicación completa de Elixir,con su propio árbol de supervisión,configuración,pruebas y más.</target>
        </trans-unit>
        <trans-unit id="09acda557e592790e954bfce0950e7ceb658a690" translate="yes" xml:space="preserve">
          <source>In this introduction, we have laid the groundwork to finally write our first macro, so let&amp;rsquo;s move to the next chapter.</source>
          <target state="translated">En esta introducci&amp;oacute;n, hemos sentado las bases para escribir finalmente nuestra primera macro, as&amp;iacute; que pasemos al siguiente cap&amp;iacute;tulo.</target>
        </trans-unit>
        <trans-unit id="c76b277befaa00029a051ea468b00e6a56d4277a" translate="yes" xml:space="preserve">
          <source>In this last chapter, we will make the routing table for our distributed key-value store configurable, and then finally package the software for production.</source>
          <target state="translated">En este último capítulo,haremos configurable la tabla de rutas para nuestro almacén de valor clave distribuido,y finalmente empaquetaremos el software para su producción.</target>
        </trans-unit>
        <trans-unit id="5f9c06a521bbdcc292934d8151f4d75a668e854f" translate="yes" xml:space="preserve">
          <source>In this menu, developers are able to start new shells and alternate between them. Let's give it a try:</source>
          <target state="translated">En este menú,los desarrolladores pueden iniciar nuevos shells y alternar entre ellos.Vamos a intentarlo:</target>
        </trans-unit>
        <trans-unit id="469f4d72bd11aaf469d5b151d58b6e80c06007ce" translate="yes" xml:space="preserve">
          <source>In this section we document common anti-patterns to avoid when writing libraries.</source>
          <target state="translated">En esta sección documentamos los antipatrones comunes que se deben evitar al escribir las bibliotecas.</target>
        </trans-unit>
        <trans-unit id="eebb3e9870cca1a5d4d8634270c5f11116a4eca3" translate="yes" xml:space="preserve">
          <source>In this section, we will implement the parsing functionality, document it and make sure our documentation is up to date with doctests. This helps us provide documentation with accurate code samples.</source>
          <target state="translated">En esta sección,implementaremos la funcionalidad de análisis sintáctico,lo documentaremos y nos aseguraremos de que nuestra documentación esté al día con las pruebas documentales.Esto nos ayuda a proporcionar documentación con muestras de código precisas.</target>
        </trans-unit>
        <trans-unit id="06285168ac2e5f025d4d90f97df36744161f8367" translate="yes" xml:space="preserve">
          <source>In this setup, Elixir will escape the following: &lt;code&gt;\0&lt;/code&gt;, &lt;code&gt;\a&lt;/code&gt;, &lt;code&gt;\b&lt;/code&gt;, &lt;code&gt;\d&lt;/code&gt;, &lt;code&gt;\e&lt;/code&gt;, &lt;code&gt;\f&lt;/code&gt;, &lt;code&gt;\n&lt;/code&gt;, &lt;code&gt;\r&lt;/code&gt;, &lt;code&gt;\s&lt;/code&gt;, &lt;code&gt;\t&lt;/code&gt; and &lt;code&gt;\v&lt;/code&gt;. Bytes can be given as hexadecimals via &lt;code&gt;\xNN&lt;/code&gt; and Unicode code points as &lt;code&gt;\uNNNN&lt;/code&gt; escapes.</source>
          <target state="translated">En esta configuraci&amp;oacute;n, Elixir escapar&amp;aacute; de lo siguiente: &lt;code&gt;\0&lt;/code&gt; , &lt;code&gt;\a&lt;/code&gt; , &lt;code&gt;\b&lt;/code&gt; , &lt;code&gt;\d&lt;/code&gt; , &lt;code&gt;\e&lt;/code&gt; , &lt;code&gt;\f&lt;/code&gt; , &lt;code&gt;\n&lt;/code&gt; , &lt;code&gt;\r&lt;/code&gt; , &lt;code&gt;\s&lt;/code&gt; , &lt;code&gt;\t&lt;/code&gt; y &lt;code&gt;\v&lt;/code&gt; . Los bytes se pueden dar como hexadecimales a trav&amp;eacute;s de &lt;code&gt;\xNN&lt;/code&gt; y puntos de c&amp;oacute;digo Unicode como &lt;code&gt;\uNNNN&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a8dd5e09e7dc956434b7d83de8c59a3badda6a30" translate="yes" xml:space="preserve">
          <source>In this tutorial, we are going to teach you about Elixir fundamentals - the language syntax, how to define modules, how to manipulate the characteristics of common data structures, and more. This chapter will focus on ensuring that Elixir is installed and that you can successfully run Elixir&amp;rsquo;s Interactive Shell, called IEx.</source>
          <target state="translated">En este tutorial, le ense&amp;ntilde;aremos los fundamentos de Elixir: la sintaxis del lenguaje, c&amp;oacute;mo definir m&amp;oacute;dulos, c&amp;oacute;mo manipular las caracter&amp;iacute;sticas de estructuras de datos comunes y m&amp;aacute;s. Este cap&amp;iacute;tulo se centrar&amp;aacute; en garantizar que Elixir est&amp;eacute; instalado y que pueda ejecutar correctamente el Shell interactivo de Elixir, llamado IEx.</target>
        </trans-unit>
        <trans-unit id="e88b9f3b5b9f4ee90610e431c8c812f026786e56" translate="yes" xml:space="preserve">
          <source>In your app's logger configuration, you would need to include the &lt;code&gt;:error_code&lt;/code&gt; key and you would need to include &lt;code&gt;$metadata&lt;/code&gt; as part of your log format template:</source>
          <target state="translated">En la configuraci&amp;oacute;n del registrador de su aplicaci&amp;oacute;n, necesitar&amp;iacute;a incluir la clave &lt;code&gt;:error_code&lt;/code&gt; y necesitar&amp;iacute;a incluir &lt;code&gt;$metadata&lt;/code&gt; como parte de su plantilla de formato de registro:</target>
        </trans-unit>
        <trans-unit id="793085c85e85a2ff028456a29daed3461d17ddd7" translate="yes" xml:space="preserve">
          <source>In your supervisor tree, you would write:</source>
          <target state="translated">En tu árbol de supervisor,escribirías:</target>
        </trans-unit>
        <trans-unit id="83526b8b240a9db63b8d55e8fb00ed7f5d21007b" translate="yes" xml:space="preserve">
          <source>In-memory reloading</source>
          <target state="translated">Recarga de la memoria</target>
        </trans-unit>
        <trans-unit id="d704ee1641420e0d4b1d894e7413ca3a127523fd" translate="yes" xml:space="preserve">
          <source>Indexes are normalized, meaning that negative indexes will be counted from the end (for example, &lt;code&gt;-1&lt;/code&gt; means the last element of the &lt;code&gt;enumerable&lt;/code&gt;).</source>
          <target state="translated">Los &amp;iacute;ndices est&amp;aacute;n normalizados, lo que significa que los &amp;iacute;ndices negativos se contar&amp;aacute;n desde el final (por ejemplo, &lt;code&gt;-1&lt;/code&gt; significa el &amp;uacute;ltimo elemento del &lt;code&gt;enumerable&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="326e3957dade8d1a772302e6b546ac73cdbf4311" translate="yes" xml:space="preserve">
          <source>Indicates if the current task is recursing.</source>
          <target state="translated">Indica si la tarea actual se repite.</target>
        </trans-unit>
        <trans-unit id="cc7fb80993cfbaec0cc1b10ecafb323d9e5355f1" translate="yes" xml:space="preserve">
          <source>Indicates no meaningful value for a field.</source>
          <target state="translated">No indica ningún valor significativo para un campo.</target>
        </trans-unit>
        <trans-unit id="f2a5522bf941f8a31cb4a9be81260d9ace1f85be" translate="yes" xml:space="preserve">
          <source>Infix operator; calculates the bitwise AND of its arguments.</source>
          <target state="translated">Operador Infix;calcula el AND de sus argumentos.</target>
        </trans-unit>
        <trans-unit id="e2dd1c549a548d8e01a78692703764dc3748f955" translate="yes" xml:space="preserve">
          <source>Infix operator; calculates the bitwise OR of its arguments.</source>
          <target state="translated">Operador Infix;calcula el OR de sus argumentos.</target>
        </trans-unit>
        <trans-unit id="9f117367d5e095016d1671e5594b015b66cce626" translate="yes" xml:space="preserve">
          <source>Infix operator; calculates the bitwise XOR of its arguments.</source>
          <target state="translated">Operador Infix;calcula el XOR de sus argumentos.</target>
        </trans-unit>
        <trans-unit id="a6c9f00063f505c603b4195c6e85acdf426886dc" translate="yes" xml:space="preserve">
          <source>Infix operator; calculates the result of an arithmetic left bitshift.</source>
          <target state="translated">Operador de Infix;calcula el resultado de un desplazamiento de bits izquierdo aritmético.</target>
        </trans-unit>
        <trans-unit id="39d1b96bbfeb4f731610e743c469a2a9cffcbf06" translate="yes" xml:space="preserve">
          <source>Infix operator; calculates the result of an arithmetic right bitshift.</source>
          <target state="translated">Operador de Infix;calcula el resultado de un desplazamiento de bits derecho aritmético.</target>
        </trans-unit>
        <trans-unit id="edfb572bfe264c3828dc3338e200d7d692f743a8" translate="yes" xml:space="preserve">
          <source>Initialization, shutdown and restart logic (as seen in supervisors)</source>
          <target state="translated">Lógica de inicialización,apagado y reinicio (como se ve en los supervisores)</target>
        </trans-unit>
        <trans-unit id="db2dd11fcae49760a96da6470cc842932b211ef8" translate="yes" xml:space="preserve">
          <source>Injects the contents of the file at &lt;code&gt;path&lt;/code&gt; as if it was typed into the shell.</source>
          <target state="translated">Inyecta el contenido del archivo en la &lt;code&gt;path&lt;/code&gt; como si estuviera escrito en el shell.</target>
        </trans-unit>
        <trans-unit id="cdae762bf8cb5cd492029bc8d296aa3edef79fb0" translate="yes" xml:space="preserve">
          <source>Injects the stream values into the given collectable as a side-effect.</source>
          <target state="translated">Inyecta los valores de la corriente en el coleccionable dado como un efecto secundario.</target>
        </trans-unit>
        <trans-unit id="dc55e2c53e188d355acce4a5c45f90740eaed542" translate="yes" xml:space="preserve">
          <source>Inlined by the compiler.</source>
          <target state="translated">En línea con el compilador.</target>
        </trans-unit>
        <trans-unit id="d1a321cfbe47a9364ab51334333242edcba4e12d" translate="yes" xml:space="preserve">
          <source>Inlining</source>
          <target state="translated">Inlining</target>
        </trans-unit>
        <trans-unit id="60256592be0f79d02de4ff02fdbe0edd9f4a9db3" translate="yes" xml:space="preserve">
          <source>Input will be consumed until Enter is pressed.</source>
          <target state="translated">La entrada se consumirá hasta que se presione Enter.</target>
        </trans-unit>
        <trans-unit id="15148f3718aedfec6834b4f2c01d66f0986c9e24" translate="yes" xml:space="preserve">
          <source>Insert these changes in your code and now you may start your application using the following command &lt;code&gt;PORT=4321 mix run --no-halt&lt;/code&gt;, notice how we are passing the port as a variable, but still defaults to 4040 if none is given.</source>
          <target state="translated">Inserte estos cambios en su c&amp;oacute;digo y ahora puede iniciar su aplicaci&amp;oacute;n usando el siguiente comando &lt;code&gt;PORT=4321 mix run --no-halt&lt;/code&gt; , observe c&amp;oacute;mo estamos pasando el puerto como una variable, pero a&amp;uacute;n as&amp;iacute;, el valor predeterminado es 4040 si no se proporciona ninguno.</target>
        </trans-unit>
        <trans-unit id="477a1b44713d7d2cea8e0f490e55ba9af37236ea" translate="yes" xml:space="preserve">
          <source>Inserts &lt;code&gt;value&lt;/code&gt; into &lt;code&gt;map_set&lt;/code&gt; if &lt;code&gt;map_set&lt;/code&gt; doesn't already contain it.</source>
          <target state="translated">Inserta un &lt;code&gt;value&lt;/code&gt; en &lt;code&gt;map_set&lt;/code&gt; si &lt;code&gt;map_set&lt;/code&gt; a&amp;uacute;n no lo contiene.</target>
        </trans-unit>
        <trans-unit id="1e63d377cb4e0957757e5467d8c996119f6f2f02" translate="yes" xml:space="preserve">
          <source>Inserts &lt;code&gt;value&lt;/code&gt; into &lt;code&gt;tuple&lt;/code&gt; at the given &lt;code&gt;index&lt;/code&gt;. Raises an &lt;a href=&quot;argumenterror&quot;&gt;&lt;code&gt;ArgumentError&lt;/code&gt;&lt;/a&gt; if &lt;code&gt;index&lt;/code&gt; is negative or greater than the length of &lt;code&gt;tuple&lt;/code&gt;. Index is zero-based.</source>
          <target state="translated">Inserta un &lt;code&gt;value&lt;/code&gt; en la &lt;code&gt;tuple&lt;/code&gt; en el &lt;code&gt;index&lt;/code&gt; dado . Genera un &lt;a href=&quot;argumenterror&quot;&gt; &lt;code&gt;ArgumentError&lt;/code&gt; &lt;/a&gt; si el &lt;code&gt;index&lt;/code&gt; es negativo o mayor que la longitud de la &lt;code&gt;tuple&lt;/code&gt; . El &amp;iacute;ndice est&amp;aacute; basado en cero.</target>
        </trans-unit>
        <trans-unit id="1f08770187662583a163ac728c2c3de32f5a374d" translate="yes" xml:space="preserve">
          <source>Inserts &lt;code&gt;value&lt;/code&gt; into &lt;code&gt;tuple&lt;/code&gt; at the given &lt;code&gt;index&lt;/code&gt;. Raises an &lt;a href=&quot;https://hexdocs.pm/elixir/ArgumentError.html&quot;&gt;&lt;code&gt;ArgumentError&lt;/code&gt;&lt;/a&gt; if &lt;code&gt;index&lt;/code&gt; is negative or greater than the length of &lt;code&gt;tuple&lt;/code&gt;. Index is zero-based.</source>
          <target state="translated">Inserta un &lt;code&gt;value&lt;/code&gt; en la &lt;code&gt;tuple&lt;/code&gt; en el &lt;code&gt;index&lt;/code&gt; dado . Genera un &lt;a href=&quot;https://hexdocs.pm/elixir/ArgumentError.html&quot;&gt; &lt;code&gt;ArgumentError&lt;/code&gt; &lt;/a&gt; si el &lt;code&gt;index&lt;/code&gt; es negativo o mayor que la longitud de la &lt;code&gt;tuple&lt;/code&gt; . El &amp;iacute;ndice est&amp;aacute; basado en cero.</target>
        </trans-unit>
        <trans-unit id="afa4ba1a8961d06fdaefcb0b7808a06ce72411d7" translate="yes" xml:space="preserve">
          <source>Inserts a mandatory linebreak between two documents.</source>
          <target state="translated">Inserta un salto de línea obligatorio entre dos documentos.</target>
        </trans-unit>
        <trans-unit id="ee42585ac2116aa5e9e194a89ae83cd36cb233ed" translate="yes" xml:space="preserve">
          <source>Inserts a mandatory single space between two documents.</source>
          <target state="translated">Inserta un espacio único obligatorio entre dos documentos.</target>
        </trans-unit>
        <trans-unit id="58646ce229b992058a739db41cd5c12f2f3030cf" translate="yes" xml:space="preserve">
          <source>Inserts an element at the end of a tuple.</source>
          <target state="translated">Inserta un elemento al final de una tupla.</target>
        </trans-unit>
        <trans-unit id="aefced5d83d6f9626d89c8b81563a063596124ad" translate="yes" xml:space="preserve">
          <source>Inserts an element into a tuple.</source>
          <target state="translated">Inserta un elemento en una tupla.</target>
        </trans-unit>
        <trans-unit id="82491edefb5fd8fccc5cef67dd8728cddce98356" translate="yes" xml:space="preserve">
          <source>Inserts the given &lt;code&gt;enumerable&lt;/code&gt; into a &lt;code&gt;collectable&lt;/code&gt; according to the transformation function.</source>
          <target state="translated">Inserta el &lt;code&gt;enumerable&lt;/code&gt; dado en un &lt;code&gt;collectable&lt;/code&gt; acuerdo con la funci&amp;oacute;n de transformaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="58e9b11975e38f1615e69956c4ba72b1614985c8" translate="yes" xml:space="preserve">
          <source>Inserts the given &lt;code&gt;enumerable&lt;/code&gt; into a &lt;code&gt;collectable&lt;/code&gt;.</source>
          <target state="translated">Inserta el &lt;code&gt;enumerable&lt;/code&gt; dado en un &lt;code&gt;collectable&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="40d18588e5bd7683cf2537e97eac6badfff84230" translate="yes" xml:space="preserve">
          <source>Inside &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#defimpl/2&quot;&gt;&lt;code&gt;defimpl/2&lt;/code&gt;&lt;/a&gt;, you can use &lt;code&gt;@protocol&lt;/code&gt; to access the protocol being implemented and &lt;code&gt;@for&lt;/code&gt; to access the module it is being defined for.</source>
          <target state="translated">Dentro de &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#defimpl/2&quot;&gt; &lt;code&gt;defimpl/2&lt;/code&gt; &lt;/a&gt; , puede usar &lt;code&gt;@protocol&lt;/code&gt; para acceder al protocolo que se est&amp;aacute; implementando y &lt;code&gt;@for&lt;/code&gt; para acceder al m&amp;oacute;dulo para el que se est&amp;aacute; definiendo.</target>
        </trans-unit>
        <trans-unit id="4dc843d3a107d849e18140a0726786e2d0083112" translate="yes" xml:space="preserve">
          <source>Inside &lt;a href=&quot;kernel#defimpl/2&quot;&gt;&lt;code&gt;defimpl/2&lt;/code&gt;&lt;/a&gt;, you can use &lt;code&gt;@protocol&lt;/code&gt; to access the protocol being implemented and &lt;code&gt;@for&lt;/code&gt; to access the module it is being defined for.</source>
          <target state="translated">Dentro de &lt;a href=&quot;kernel#defimpl/2&quot;&gt; &lt;code&gt;defimpl/2&lt;/code&gt; &lt;/a&gt; , puede usar &lt;code&gt;@protocol&lt;/code&gt; para acceder al protocolo que se est&amp;aacute; implementando y &lt;code&gt;@for&lt;/code&gt; para acceder al m&amp;oacute;dulo para el que se est&amp;aacute; definiendo.</target>
        </trans-unit>
        <trans-unit id="9a72c5141d8fa1919f077425c1ba8fcc0bb6e0f3" translate="yes" xml:space="preserve">
          <source>Inside &lt;code&gt;do&lt;/code&gt;/&lt;code&gt;end&lt;/code&gt; blocks you may introduce other keywords, such as &lt;code&gt;else&lt;/code&gt; used in the &lt;code&gt;if&lt;/code&gt; above. The supported keywords between &lt;code&gt;do&lt;/code&gt;/&lt;code&gt;end&lt;/code&gt; are static and are:</source>
          <target state="translated">Dentro de los bloques &lt;code&gt;do&lt;/code&gt; / &lt;code&gt;end&lt;/code&gt; , puede introducir otras palabras clave, como las &lt;code&gt;else&lt;/code&gt; utilizadas en el &lt;code&gt;if&lt;/code&gt; anterior. Las palabras clave admitidas entre &lt;code&gt;do&lt;/code&gt; / &lt;code&gt;end&lt;/code&gt; son est&amp;aacute;ticas y son:</target>
        </trans-unit>
        <trans-unit id="7b06fc5ccdbbb6e1341b5ead9ee2126b0e7d8721" translate="yes" xml:space="preserve">
          <source>Inside IEx, hitting &lt;code&gt;Ctrl+C&lt;/code&gt; will open up the &lt;code&gt;BREAK&lt;/code&gt; menu. In this menu you can quit the shell, see process and ETS tables information and much more.</source>
          <target state="translated">Dentro de IEx, &lt;code&gt;Ctrl+C&lt;/code&gt; abrir&amp;aacute; el men&amp;uacute; &lt;code&gt;BREAK&lt;/code&gt; . En este men&amp;uacute; puede salir del shell, ver informaci&amp;oacute;n sobre procesos y tablas ETS y mucho m&amp;aacute;s.</target>
        </trans-unit>
        <trans-unit id="03f0e4a7260af9ca9a8463a85cd7efbea72439fd" translate="yes" xml:space="preserve">
          <source>Inside a module, we can define functions with &lt;code&gt;def/2&lt;/code&gt; and private functions with &lt;code&gt;defp/2&lt;/code&gt;. A function defined with &lt;code&gt;def/2&lt;/code&gt; can be invoked from other modules while a private function can only be invoked locally.</source>
          <target state="translated">Dentro de un m&amp;oacute;dulo, podemos definir funciones con &lt;code&gt;def/2&lt;/code&gt; y funciones privadas con &lt;code&gt;defp/2&lt;/code&gt; . Una funci&amp;oacute;n definida con &lt;code&gt;def/2&lt;/code&gt; puede invocarse desde otros m&amp;oacute;dulos mientras que una funci&amp;oacute;n privada solo puede invocarse localmente.</target>
        </trans-unit>
        <trans-unit id="1b5876476355703f4f43fdf75b583d0b33e50128" translate="yes" xml:space="preserve">
          <source>Inside umbrellas:</source>
          <target state="translated">Dentro de los paraguas:</target>
        </trans-unit>
        <trans-unit id="113a1b9884a89043121b7d7c5d9c0a394636f751" translate="yes" xml:space="preserve">
          <source>Inside your umbrella, you can define multiple releases:</source>
          <target state="translated">Dentro de tu paraguas,puedes definir múltiples liberaciones:</target>
        </trans-unit>
        <trans-unit id="ff7d1285dd1427c76ab7acf44b71a8c8783f99ac" translate="yes" xml:space="preserve">
          <source>Insignificant digits in numbers are kept as is. The formatter however always inserts underscores for decimal numbers with more than 5 digits and converts hexadecimal digits to uppercase</source>
          <target state="translated">Los dígitos insignificantes de los números se mantienen tal cual.El formateador,sin embargo,siempre inserta subrayados para los números decimales con más de 5 dígitos y convierte los dígitos hexadecimales a mayúsculas</target>
        </trans-unit>
        <trans-unit id="18ca87afec4298d9de864e32b4eeb6a31786e496" translate="yes" xml:space="preserve">
          <source>Inspect</source>
          <target state="translated">Inspect</target>
        </trans-unit>
        <trans-unit id="8414c282c4799a38a5a542eddf3fbf5bc932cf21" translate="yes" xml:space="preserve">
          <source>Inspect &lt;small&gt;protocol&lt;/small&gt;</source>
          <target state="translated">Inspeccione el &lt;small&gt;protocolo&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="8fa2cc0c476786708af2220b5a7c37218a295c0e" translate="yes" xml:space="preserve">
          <source>Inspect.Algebra</source>
          <target state="translated">Inspect.Algebra</target>
        </trans-unit>
        <trans-unit id="cac9e750c4626e97af4bfdac5963505168c991af" translate="yes" xml:space="preserve">
          <source>Inspect.Error</source>
          <target state="translated">Inspect.Error</target>
        </trans-unit>
        <trans-unit id="2f7084207f03105946937040d7f1a8666466847e" translate="yes" xml:space="preserve">
          <source>Inspect.Error &lt;small&gt;exception&lt;/small&gt;</source>
          <target state="translated">Inspeccionar &lt;small&gt;Excepci&amp;oacute;n de&lt;/small&gt; error&lt;small&gt;&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="c1eea5039122d61678f099bc1095c3d343dfa88b" translate="yes" xml:space="preserve">
          <source>Inspect.Opts</source>
          <target state="translated">Inspect.Opts</target>
        </trans-unit>
        <trans-unit id="76857fe76fdec2188870db7ef8e5489c2f660af9" translate="yes" xml:space="preserve">
          <source>Inspect.inspect (2)</source>
          <target state="translated">Inspeccionar.inspeccionar (2)</target>
        </trans-unit>
        <trans-unit id="11718aedd18c27cc6d385458412c98fc95530888" translate="yes" xml:space="preserve">
          <source>Inspect.t (0)</source>
          <target state="translated">Inspect.t (0)</target>
        </trans-unit>
        <trans-unit id="728cbccfe7f399bad0002a59ae5fe929d7156d22" translate="yes" xml:space="preserve">
          <source>Inspecting behaviours</source>
          <target state="translated">Inspeccionando los comportamientos</target>
        </trans-unit>
        <trans-unit id="4b093666bfbe436abd6e75ff4060483a6eed400e" translate="yes" xml:space="preserve">
          <source>Inspects &lt;code&gt;item&lt;/code&gt; according to the given options using the IO &lt;code&gt;device&lt;/code&gt;.</source>
          <target state="translated">Inspecciona el &lt;code&gt;item&lt;/code&gt; acuerdo con las opciones dadas usando el &lt;code&gt;device&lt;/code&gt; IO .</target>
        </trans-unit>
        <trans-unit id="c5a3a1e7021ff3bf12f0c5dee5b6d4b45795751a" translate="yes" xml:space="preserve">
          <source>Inspects and writes the given &lt;code&gt;item&lt;/code&gt; to the device.</source>
          <target state="translated">Inspecciona y escribe el &lt;code&gt;item&lt;/code&gt; dado en el dispositivo.</target>
        </trans-unit>
        <trans-unit id="bf74027804ecc526da780a7ae1724e9dedba411f" translate="yes" xml:space="preserve">
          <source>Inspects the given argument according to the &lt;a href=&quot;https://hexdocs.pm/elixir/Inspect.html&quot;&gt;&lt;code&gt;Inspect&lt;/code&gt;&lt;/a&gt; protocol. The second argument is a keyword list with options to control inspection.</source>
          <target state="translated">Inspecciona el argumento dado de acuerdo con el protocolo de &lt;a href=&quot;https://hexdocs.pm/elixir/Inspect.html&quot;&gt; &lt;code&gt;Inspect&lt;/code&gt; &lt;/a&gt; . El segundo argumento es una lista de palabras clave con opciones para controlar la inspecci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="e7503cce5b05ca6c10725fe1362e1e1fb0df01fb" translate="yes" xml:space="preserve">
          <source>Inspects the given argument according to the &lt;a href=&quot;inspect&quot;&gt;&lt;code&gt;Inspect&lt;/code&gt;&lt;/a&gt; protocol. The second argument is a keyword list with options to control inspection.</source>
          <target state="translated">Inspecciona el argumento dado de acuerdo con el protocolo de &lt;a href=&quot;inspect&quot;&gt; &lt;code&gt;Inspect&lt;/code&gt; &lt;/a&gt; . El segundo argumento es una lista de palabras clave con opciones para controlar la inspecci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">Installation</target>
        </trans-unit>
        <trans-unit id="410e2de2d51ba0a8c2653a12efa8b959eb14239c" translate="yes" xml:space="preserve">
          <source>Installing external dependencies is simple. Most commonly, we use the &lt;a href=&quot;https://hex.pm&quot;&gt;Hex Package Manager&lt;/a&gt;, by listing the dependency inside the deps function in our &lt;code&gt;mix.exs&lt;/code&gt; file:</source>
          <target state="translated">La instalaci&amp;oacute;n de dependencias externas es sencilla. Por lo general, usamos &lt;a href=&quot;https://hex.pm&quot;&gt;Hex Package Manager&lt;/a&gt; , enumerando la dependencia dentro de la funci&amp;oacute;n deps en nuestro archivo &lt;code&gt;mix.exs&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="8ba9749301614c940b015d94dafda1de33dee733" translate="yes" xml:space="preserve">
          <source>Installs Hex locally.</source>
          <target state="translated">Instala Hex localmente.</target>
        </trans-unit>
        <trans-unit id="fe27c68af6ef5819f7f323521831724db906052b" translate="yes" xml:space="preserve">
          <source>Installs an archive locally.</source>
          <target state="translated">Instala un archivo localmente.</target>
        </trans-unit>
        <trans-unit id="ac37dc92363c2e268a61314e8483b955fcaa10e1" translate="yes" xml:space="preserve">
          <source>Installs an escript locally.</source>
          <target state="translated">Instala un guión localmente.</target>
        </trans-unit>
        <trans-unit id="5fc6648d32dcda7f8258be9d7bfe7a810c641ff1" translate="yes" xml:space="preserve">
          <source>Instead &lt;strong&gt;do&lt;/strong&gt;:</source>
          <target state="translated">En su lugar, &lt;strong&gt;haz&lt;/strong&gt; :</target>
        </trans-unit>
        <trans-unit id="70e1c1220b6164c7f3f3c7f9ac3d512f4ed39191" translate="yes" xml:space="preserve">
          <source>Instead of &lt;code&gt;MyModule.__behaviour__(:callbacks)&lt;/code&gt;, &lt;code&gt;MyModule.behaviour_info(:callbacks)&lt;/code&gt; can be used.</source>
          <target state="translated">En lugar del &lt;code&gt;MyModule.__behaviour__(:callbacks)&lt;/code&gt; de MyModule .__ __ (: callbacks) , se puede utilizar &lt;code&gt;MyModule.behaviour_info(:callbacks)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a1b879c3f25c9b1c9960a54e86cb4fc16cf79dfc" translate="yes" xml:space="preserve">
          <source>Instead of &lt;code&gt;spawn/1&lt;/code&gt; and &lt;code&gt;spawn_link/1&lt;/code&gt;, we use &lt;code&gt;Task.start/1&lt;/code&gt; and &lt;code&gt;Task.start_link/1&lt;/code&gt; which return &lt;code&gt;{:ok, pid}&lt;/code&gt; rather than just the PID. This is what enables tasks to be used in supervision trees. Furthermore, &lt;code&gt;Task&lt;/code&gt; provides convenience functions, like &lt;code&gt;Task.async/1&lt;/code&gt; and &lt;code&gt;Task.await/1&lt;/code&gt;, and functionality to ease distribution.</source>
          <target state="translated">En lugar de &lt;code&gt;spawn/1&lt;/code&gt; y &lt;code&gt;spawn_link/1&lt;/code&gt; , usamos &lt;code&gt;Task.start/1&lt;/code&gt; y &lt;code&gt;Task.start_link/1&lt;/code&gt; que devuelven &lt;code&gt;{:ok, pid}&lt;/code&gt; lugar de solo el PID. Esto es lo que permite utilizar tareas en &amp;aacute;rboles de supervisi&amp;oacute;n. Adem&amp;aacute;s, &lt;code&gt;Task&lt;/code&gt; proporciona funciones de conveniencia, como &lt;code&gt;Task.async/1&lt;/code&gt; y &lt;code&gt;Task.await/1&lt;/code&gt; , y funcionalidad para facilitar la distribuci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="2b04d71a821407f326a765c34eafcb3d188ed9ec" translate="yes" xml:space="preserve">
          <source>Instead of abusing the built-in name facility, we will create our own &lt;em&gt;process registry&lt;/em&gt; that associates the bucket name to the bucket process.</source>
          <target state="translated">En lugar de abusar de la funci&amp;oacute;n de nombre incorporada, crearemos nuestro propio &lt;em&gt;registro de procesos&lt;/em&gt; que asocia el nombre del dep&amp;oacute;sito al proceso del dep&amp;oacute;sito.</target>
        </trans-unit>
        <trans-unit id="46ebdd1c0d8185516f828a303e26f55b8135c53d" translate="yes" xml:space="preserve">
          <source>Instead of asking &amp;ldquo;how to do X in Elixir&amp;rdquo;, ask &amp;ldquo;how to solve Y in Elixir&amp;rdquo;. In other words, don&amp;rsquo;t ask how to implement a particular solution, instead describe the problem at hand. Stating the problem gives more context and less bias for a correct answer.</source>
          <target state="translated">En lugar de preguntar &quot;c&amp;oacute;mo hacer X en Elixir&quot;, pregunte &quot;c&amp;oacute;mo resolver Y en Elixir&quot;. En otras palabras, no pregunte c&amp;oacute;mo implementar una soluci&amp;oacute;n en particular, en su lugar describa el problema en cuesti&amp;oacute;n. Declarar el problema da m&amp;aacute;s contexto y menos sesgo para una respuesta correcta.</target>
        </trans-unit>
        <trans-unit id="657f86bb1607bd9dc12a6834cf040e983fea5025" translate="yes" xml:space="preserve">
          <source>Instead of generating intermediate lists, streams build a series of computations that are invoked only when we pass the underlying stream to the &lt;code&gt;Enum&lt;/code&gt; module. Streams are useful when working with large, &lt;em&gt;possibly infinite&lt;/em&gt;, collections.</source>
          <target state="translated">En lugar de generar listas intermedias, los flujos crean una serie de c&amp;aacute;lculos que se invocan solo cuando pasamos el flujo subyacente al m&amp;oacute;dulo &lt;code&gt;Enum&lt;/code&gt; . Los flujos son &amp;uacute;tiles cuando se trabaja con colecciones grandes, &lt;em&gt;posiblemente infinitas&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="cbcbdeb5ce82b55a1db6bc95122644a2da9c98f8" translate="yes" xml:space="preserve">
          <source>Instead of sharing protocol implementation with maps, structs require their own protocol implementation. Since a &lt;code&gt;MapSet&lt;/code&gt; has its size precomputed and accessible through &lt;code&gt;MapSet.size/1&lt;/code&gt;, we can define a &lt;code&gt;Size&lt;/code&gt; implementation for it:</source>
          <target state="translated">En lugar de compartir la implementaci&amp;oacute;n del protocolo con mapas, las estructuras requieren su propia implementaci&amp;oacute;n del protocolo. Dado que un &lt;code&gt;MapSet&lt;/code&gt; tiene su tama&amp;ntilde;o precalculado y accesible a trav&amp;eacute;s de &lt;code&gt;MapSet.size/1&lt;/code&gt; , podemos definir una implementaci&amp;oacute;n de &lt;code&gt;Size&lt;/code&gt; para &amp;eacute;l:</target>
        </trans-unit>
        <trans-unit id="b1cda74ad7f0576bffdba14e7c0e5fbf0bd02a81" translate="yes" xml:space="preserve">
          <source>Instead, you can store the value of the &lt;code&gt;try&lt;/code&gt; expression:</source>
          <target state="translated">En su lugar, puede almacenar el valor de la expresi&amp;oacute;n de &lt;code&gt;try&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="9edcffff4461c9083fbff857f8dcee0f0769cbd4" translate="yes" xml:space="preserve">
          <source>Integer</source>
          <target state="translated">Integer</target>
        </trans-unit>
        <trans-unit id="e340bf5c2746e3a29b7ae3f2341d749b9a8e7f42" translate="yes" xml:space="preserve">
          <source>Integer code points</source>
          <target state="translated">Puntos de código entero</target>
        </trans-unit>
        <trans-unit id="6329201f484f49f6ec697e329c43d6e6707a772f" translate="yes" xml:space="preserve">
          <source>Integer that represents the day of the week, where 1 is Monday and 7 is Sunday.</source>
          <target state="translated">Un número entero que representa el día de la semana,donde 1 es lunes y 7 es domingo.</target>
        </trans-unit>
        <trans-unit id="03c914e9cf272bd181f63f8ca95aa4134406a908" translate="yes" xml:space="preserve">
          <source>Integers (&lt;code&gt;1234&lt;/code&gt;) and floats (&lt;code&gt;123.4&lt;/code&gt;) in Elixir are represented as a sequence of digits that may be separated by underscore for readability purposes, such as &lt;code&gt;1_000_000&lt;/code&gt;. Integers never contain a dot (&lt;code&gt;.&lt;/code&gt;) in their representation. Floats contain a dot and at least one other digit after the dot. Floats also support the scientific notation, such as &lt;code&gt;123.4e10&lt;/code&gt; or &lt;code&gt;123.4E10&lt;/code&gt;.</source>
          <target state="translated">Los n&amp;uacute;meros enteros ( &lt;code&gt;1234&lt;/code&gt; ) y flotantes ( &lt;code&gt;123.4&lt;/code&gt; ) en Elixir se representan como una secuencia de d&amp;iacute;gitos que pueden estar separados por un gui&amp;oacute;n bajo para &lt;code&gt;1_000_000&lt;/code&gt; lectura, como 1_000_000 . Los enteros nunca contienen un punto ( &lt;code&gt;.&lt;/code&gt; ) En su representaci&amp;oacute;n. Los flotadores contienen un punto y al menos otro d&amp;iacute;gito despu&amp;eacute;s del punto. Los flotantes tambi&amp;eacute;n admiten la notaci&amp;oacute;n cient&amp;iacute;fica, como &lt;code&gt;123.4e10&lt;/code&gt; o &lt;code&gt;123.4E10&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2b69f8490219ca339df3ffe0a24133cf0845a779" translate="yes" xml:space="preserve">
          <source>Integers can be &lt;code&gt;signed&lt;/code&gt; or &lt;code&gt;unsigned&lt;/code&gt;, defaulting to &lt;code&gt;unsigned&lt;/code&gt;.</source>
          <target state="translated">Los n&amp;uacute;meros enteros pueden estar &lt;code&gt;signed&lt;/code&gt; o &lt;code&gt;unsigned&lt;/code&gt; , por defecto &lt;code&gt;unsigned&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d2871c600eee20d37fb547e17a478f66ee810c41" translate="yes" xml:space="preserve">
          <source>Integers in other bases and Unicode code points</source>
          <target state="translated">Números enteros en otras bases y puntos de código Unicode</target>
        </trans-unit>
        <trans-unit id="cca6e2eff6c59ea0c8e68e40ac9ddccb40190ce0" translate="yes" xml:space="preserve">
          <source>Integrates with Erlang's &lt;a href=&quot;http://erlang.org/doc/man/logger.html&quot;&gt;&lt;code&gt;:logger&lt;/code&gt;&lt;/a&gt; to convert terms to Elixir syntax.</source>
          <target state="translated">Se integra con Erlang's &lt;a href=&quot;http://erlang.org/doc/man/logger.html&quot;&gt; &lt;code&gt;:logger&lt;/code&gt; &lt;/a&gt; para convertir t&amp;eacute;rminos a la sintaxis Elixir.</target>
        </trans-unit>
        <trans-unit id="67bd439657ec8c91af9cab8e9c61775e95c7d415" translate="yes" xml:space="preserve">
          <source>Integration with Mix</source>
          <target state="translated">Integración con Mix</target>
        </trans-unit>
        <trans-unit id="8c7b691a3d33f4bf5d25d380d9c0cebf6d69f172" translate="yes" xml:space="preserve">
          <source>Integration with OS level tracers, such as &lt;a href=&quot;http://erlang.org/doc/apps/runtime_tools/LTTng.html&quot;&gt;Linux Trace Toolkit,&lt;/a&gt;&lt;a href=&quot;http://erlang.org/doc/apps/runtime_tools/DTRACE.html&quot;&gt;DTRACE,&lt;/a&gt; and &lt;a href=&quot;http://erlang.org/doc/apps/runtime_tools/SYSTEMTAP.html&quot;&gt;SystemTap&lt;/a&gt;</source>
          <target state="translated">Integraci&amp;oacute;n con &lt;a href=&quot;http://erlang.org/doc/apps/runtime_tools/LTTng.html&quot;&gt;rastreadores de&lt;/a&gt; nivel de sistema operativo, como Linux Trace Toolkit, &lt;a href=&quot;http://erlang.org/doc/apps/runtime_tools/DTRACE.html&quot;&gt;DTRACE&lt;/a&gt; y &lt;a href=&quot;http://erlang.org/doc/apps/runtime_tools/SYSTEMTAP.html&quot;&gt;SystemTap&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0d798c0b1cd4a6d135dc1e4671cde5f33dab863b" translate="yes" xml:space="preserve">
          <source>Interactive mode</source>
          <target state="translated">Modo interactivo</target>
        </trans-unit>
        <trans-unit id="f4f8ff7b4770e825fb6a5a6969991c0326746be8" translate="yes" xml:space="preserve">
          <source>Internal and external functions</source>
          <target state="translated">Funciones internas y externas</target>
        </trans-unit>
        <trans-unit id="6815f4d63967846048009b2275fddb5992a2ae7f" translate="yes" xml:space="preserve">
          <source>Internal dependencies</source>
          <target state="translated">Internal dependencies</target>
        </trans-unit>
        <trans-unit id="fd76d47a90f8cc879523d078abeee342549c2a2c" translate="yes" xml:space="preserve">
          <source>Internal dependencies are the ones that are specific to your project. They usually don&amp;rsquo;t make sense outside the scope of your project/company/organization. Most of the time, you want to keep them private, whether due to technical, economic or business reasons.</source>
          <target state="translated">Las dependencias internas son las espec&amp;iacute;ficas de su proyecto. Por lo general, no tienen sentido fuera del alcance de su proyecto / empresa / organizaci&amp;oacute;n. La mayor&amp;iacute;a de las veces, desea mantenerlos privados, ya sea por razones t&amp;eacute;cnicas, econ&amp;oacute;micas o comerciales.</target>
        </trans-unit>
        <trans-unit id="6edc5ae2d27d92f734915c3bcae38bfcff562e82" translate="yes" xml:space="preserve">
          <source>Internal special form for block expressions.</source>
          <target state="translated">Forma interna especial para expresiones de bloque.</target>
        </trans-unit>
        <trans-unit id="7b9df6e3733e8709e741819162ae8b21c5560f05" translate="yes" xml:space="preserve">
          <source>Internal special form to hold aliases information.</source>
          <target state="translated">Forma interna especial para guardar la información de los alias.</target>
        </trans-unit>
        <trans-unit id="7ea238b82c732c14af0d56ae146c57de7821e30a" translate="yes" xml:space="preserve">
          <source>Internally, &lt;a href=&quot;enum#map/2&quot;&gt;&lt;code&gt;Enum.map/2&lt;/code&gt;&lt;/a&gt; is implemented as follows:</source>
          <target state="translated">Internamente, &lt;a href=&quot;enum#map/2&quot;&gt; &lt;code&gt;Enum.map/2&lt;/code&gt; &lt;/a&gt; se implementa de la siguiente manera:</target>
        </trans-unit>
        <trans-unit id="d4d06a23df2e5f8415d5588be7a06fbd36f8ee7c" translate="yes" xml:space="preserve">
          <source>Internally, &lt;a href=&quot;https://hexdocs.pm/elixir/Enum.html#map/2&quot;&gt;&lt;code&gt;Enum.map/2&lt;/code&gt;&lt;/a&gt; is implemented as follows:</source>
          <target state="translated">Internamente, &lt;a href=&quot;https://hexdocs.pm/elixir/Enum.html#map/2&quot;&gt; &lt;code&gt;Enum.map/2&lt;/code&gt; &lt;/a&gt; se implementa de la siguiente manera:</target>
        </trans-unit>
        <trans-unit id="444e75baf2b8d0e94b94fc3e049285ea03c10723" translate="yes" xml:space="preserve">
          <source>Internally, this function uses a &lt;a href=&quot;https://hexdocs.pm/elixir/Port.html&quot;&gt;&lt;code&gt;Port&lt;/code&gt;&lt;/a&gt; for interacting with the outside world. However, if you plan to run a long-running program, ports guarantee stdin/stdout devices will be closed but it does not automatically terminate the program. The documentation for the &lt;a href=&quot;https://hexdocs.pm/elixir/Port.html&quot;&gt;&lt;code&gt;Port&lt;/code&gt;&lt;/a&gt; module describes this problem and possible solutions under the &quot;Zombie processes&quot; section.</source>
          <target state="translated">Internamente, esta funci&amp;oacute;n usa un &lt;a href=&quot;https://hexdocs.pm/elixir/Port.html&quot;&gt; &lt;code&gt;Port&lt;/code&gt; &lt;/a&gt; para interactuar con el mundo exterior. Sin embargo, si planea ejecutar un programa de larga duraci&amp;oacute;n, los puertos garantizan que los dispositivos stdin / stdout se cerrar&amp;aacute;n, pero no terminan autom&amp;aacute;ticamente el programa. La documentaci&amp;oacute;n del m&amp;oacute;dulo &lt;a href=&quot;https://hexdocs.pm/elixir/Port.html&quot;&gt; &lt;code&gt;Port&lt;/code&gt; &lt;/a&gt; describe este problema y las posibles soluciones en la secci&amp;oacute;n &quot;Procesos zombis&quot;.</target>
        </trans-unit>
        <trans-unit id="827c1e94219dfeaae7b53280233314ac83030abd" translate="yes" xml:space="preserve">
          <source>Internally, this function uses a &lt;a href=&quot;port&quot;&gt;&lt;code&gt;Port&lt;/code&gt;&lt;/a&gt; for interacting with the outside world. However, if you plan to run a long-running program, ports guarantee stdin/stdout devices will be closed but it does not automatically terminate the program. The documentation for the &lt;a href=&quot;port&quot;&gt;&lt;code&gt;Port&lt;/code&gt;&lt;/a&gt; module describes this problem and possible solutions under the &quot;Zombie processes&quot; section.</source>
          <target state="translated">Internamente, esta funci&amp;oacute;n usa un &lt;a href=&quot;port&quot;&gt; &lt;code&gt;Port&lt;/code&gt; &lt;/a&gt; para interactuar con el mundo exterior. Sin embargo, si planea ejecutar un programa de larga ejecuci&amp;oacute;n, los puertos garantizan que los dispositivos stdin / stdout se cerrar&amp;aacute;n, pero no terminan autom&amp;aacute;ticamente el programa. La documentaci&amp;oacute;n del m&amp;oacute;dulo &lt;a href=&quot;port&quot;&gt; &lt;code&gt;Port&lt;/code&gt; &lt;/a&gt; describe este problema y las posibles soluciones en la secci&amp;oacute;n &quot;Procesos zombis&quot;.</target>
        </trans-unit>
        <trans-unit id="6a9858c9bf3149456595f98943cf88e41039822e" translate="yes" xml:space="preserve">
          <source>Interpolation</source>
          <target state="translated">Interpolation</target>
        </trans-unit>
        <trans-unit id="77ae57c279c9e2ef961ac607460659eac146477d" translate="yes" xml:space="preserve">
          <source>Interpolation and escaping in sigils</source>
          <target state="translated">Interpolación y fuga en sigilo</target>
        </trans-unit>
        <trans-unit id="d142f547e062671930a17d6dfc85716aa23453f5" translate="yes" xml:space="preserve">
          <source>Interpolation and escaping in string sigils</source>
          <target state="translated">Interpolación y fuga en los sigilos de la cuerda</target>
        </trans-unit>
        <trans-unit id="5064a21ec7e025e2514366b24e54341fcd2022ec" translate="yes" xml:space="preserve">
          <source>Interpreting integers as codepoints may lead to some surprising behavior. For example, if you are storing a list of integers that happen to range between 0 and 127, by default IEx will interpret this as a charlist and it will display the corresponding ASCII characters.</source>
          <target state="translated">Interpretar los números enteros como puntos de código puede llevar a un comportamiento sorprendente.Por ejemplo,si estás almacenando una lista de números enteros que se encuentran entre 0 y 127,por defecto IEx la interpretará como una lista de caracteres y mostrará los correspondientes caracteres ASCII.</target>
        </trans-unit>
        <trans-unit id="f901cbbe7edd4e8b636ff99e09fd9aa3ab5b6c2c" translate="yes" xml:space="preserve">
          <source>Intersperses &lt;code&gt;element&lt;/code&gt; between each element of the enumeration.</source>
          <target state="translated">Intercala un &lt;code&gt;element&lt;/code&gt; o entre cada elemento de la enumeraci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="2473e96bc614a911821242119918a241a41836d6" translate="yes" xml:space="preserve">
          <source>Introduction</source>
          <target state="translated">Introduction</target>
        </trans-unit>
        <trans-unit id="3ad9a82c5e5ec7f5cdb591679187a3a184cc6e2c" translate="yes" xml:space="preserve">
          <source>Introduction to Mix</source>
          <target state="translated">Introducción a la mezcla</target>
        </trans-unit>
        <trans-unit id="556666f2a50884d36f095e81af9943cd94538e19" translate="yes" xml:space="preserve">
          <source>Invalid (when setup_all fails)</source>
          <target state="translated">Inválido (cuando setup_all falla)</target>
        </trans-unit>
        <trans-unit id="44c16916fee38218c7470ca5f830ff4fbd096ffc" translate="yes" xml:space="preserve">
          <source>Invalid Unicode codepoints are skipped and the remaining of the string is converted. If you want the algorithm to stop and return on invalid codepoint, use &lt;a href=&quot;http://www.erlang.org/doc/man/unicode.html#characters_to_nfd_binary-1&quot;&gt;&lt;code&gt;:unicode.characters_to_nfd_binary/1&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;http://www.erlang.org/doc/man/unicode.html#characters_to_nfc_binary-1&quot;&gt;&lt;code&gt;:unicode.characters_to_nfc_binary/1&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;http://www.erlang.org/doc/man/unicode.html#characters_to_nfkd_binary-1&quot;&gt;&lt;code&gt;:unicode.characters_to_nfkd_binary/1&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;http://www.erlang.org/doc/man/unicode.html#characters_to_nfkc_binary-1&quot;&gt;&lt;code&gt;:unicode.characters_to_nfkc_binary/1&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">Los puntos de c&amp;oacute;digo Unicode no v&amp;aacute;lidos se omiten y el resto de la cadena se convierte. Si desea que el algoritmo de parada y retorno de punto de c&amp;oacute;digo no v&amp;aacute;lido, el uso &lt;a href=&quot;http://www.erlang.org/doc/man/unicode.html#characters_to_nfd_binary-1&quot;&gt; &lt;code&gt;:unicode.characters_to_nfd_binary/1&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;http://www.erlang.org/doc/man/unicode.html#characters_to_nfc_binary-1&quot;&gt; &lt;code&gt;:unicode.characters_to_nfc_binary/1&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;http://www.erlang.org/doc/man/unicode.html#characters_to_nfkd_binary-1&quot;&gt; &lt;code&gt;:unicode.characters_to_nfkd_binary/1&lt;/code&gt; &lt;/a&gt; , y &lt;a href=&quot;http://www.erlang.org/doc/man/unicode.html#characters_to_nfkc_binary-1&quot;&gt; &lt;code&gt;:unicode.characters_to_nfkc_binary/1&lt;/code&gt; &lt;/a&gt; en su lugar.</target>
        </trans-unit>
        <trans-unit id="979685031faaab9869c01a670026bc6edde40c74" translate="yes" xml:space="preserve">
          <source>Invoke the required callback &lt;a href=&quot;#c:stop/1&quot;&gt;&lt;code&gt;stop/1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Invoque la &lt;a href=&quot;#c:stop/1&quot;&gt; &lt;code&gt;stop/1&lt;/code&gt; &lt;/a&gt; devoluci&amp;oacute;n de llamada requerida / 1 .</target>
        </trans-unit>
        <trans-unit id="9c2fcbf3d8569fd3d11cfd7171a8054a4d1a7f48" translate="yes" xml:space="preserve">
          <source>Invoked at the beginning of every nesting.</source>
          <target state="translated">Invocado al principio de cada anidación.</target>
        </trans-unit>
        <trans-unit id="3131af8070d80cb4438964eca7dde39215d4a38c" translate="yes" xml:space="preserve">
          <source>Invoked in order to access the value stored under &lt;code&gt;key&lt;/code&gt; in the given term &lt;code&gt;term&lt;/code&gt;.</source>
          <target state="translated">Se invoca con el fin de acceder al valor almacenado bajo &lt;code&gt;key&lt;/code&gt; en el plazo determinado &lt;code&gt;term&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b22a1f1a89dd3f3bab30cb805e59f8edfe29b611" translate="yes" xml:space="preserve">
          <source>Invoked in order to access the value under &lt;code&gt;key&lt;/code&gt; and update it at the same time.</source>
          <target state="translated">Se invoca para acceder al valor de la &lt;code&gt;key&lt;/code&gt; y actualizarlo al mismo tiempo.</target>
        </trans-unit>
        <trans-unit id="f708aba5828f8cac72cfe36605553c37461c0165" translate="yes" xml:space="preserve">
          <source>Invoked in some cases to retrieve a formatted version of the &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;GenServer&lt;/code&gt;&lt;/a&gt; status.</source>
          <target state="translated">Se invoca en algunos casos para recuperar una versi&amp;oacute;n formateada del estado de &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;GenServer&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="47f17640bca3b36f9d932ef8aed6fea2692e715d" translate="yes" xml:space="preserve">
          <source>Invoked to &quot;pop&quot; the value under &lt;code&gt;key&lt;/code&gt; out of the given data structure.</source>
          <target state="translated">Se invoca para &quot; sacar &quot; el valor debajo de la &lt;code&gt;key&lt;/code&gt; de la estructura de datos dada.</target>
        </trans-unit>
        <trans-unit id="8ffa339626f86dfddb50d2f5a5ebf28a3fe4886f" translate="yes" xml:space="preserve">
          <source>Invoked to change the state of the &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;GenServer&lt;/code&gt;&lt;/a&gt; when a different version of a module is loaded (hot code swapping) and the state's term structure should be changed.</source>
          <target state="translated">Se invoca para cambiar el estado del &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;GenServer&lt;/code&gt; &lt;/a&gt; cuando se carga una versi&amp;oacute;n diferente de un m&amp;oacute;dulo (intercambio de c&amp;oacute;digo activo) y se debe cambiar la estructura de t&amp;eacute;rminos del estado.</target>
        </trans-unit>
        <trans-unit id="7fd464e0a7bfe3444479112d481808fd4426398a" translate="yes" xml:space="preserve">
          <source>Invoked to handle &lt;code&gt;continue&lt;/code&gt; instructions.</source>
          <target state="translated">Se invoca para manejar instrucciones de &lt;code&gt;continue&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="823c64bbe586eac0f81ae84a9ece9107aadfc7b3" translate="yes" xml:space="preserve">
          <source>Invoked to handle all other messages.</source>
          <target state="translated">Invitado a manejar todos los demás mensajes.</target>
        </trans-unit>
        <trans-unit id="251e86e0358f8330275ee3b3f133b8139914e86a" translate="yes" xml:space="preserve">
          <source>Invoked to handle asynchronous &lt;a href=&quot;#cast/2&quot;&gt;&lt;code&gt;cast/2&lt;/code&gt;&lt;/a&gt; messages.</source>
          <target state="translated">Se invoca para manejar mensajes de conversi&amp;oacute;n &lt;a href=&quot;#cast/2&quot;&gt; &lt;code&gt;cast/2&lt;/code&gt; &lt;/a&gt; asincr&amp;oacute;nicos .</target>
        </trans-unit>
        <trans-unit id="490b6e99cd71fc7e4dff011cebfd6c5bbbf5b87c" translate="yes" xml:space="preserve">
          <source>Invoked to handle synchronous &lt;a href=&quot;#call/3&quot;&gt;&lt;code&gt;call/3&lt;/code&gt;&lt;/a&gt; messages. &lt;a href=&quot;#call/3&quot;&gt;&lt;code&gt;call/3&lt;/code&gt;&lt;/a&gt; will block until a reply is received (unless the call times out or nodes are disconnected).</source>
          <target state="translated">Se invoca para manejar &lt;a href=&quot;#call/3&quot;&gt; &lt;code&gt;call/3&lt;/code&gt; &lt;/a&gt; s&amp;iacute;ncronas / 3 mensajes. &lt;a href=&quot;#call/3&quot;&gt; &lt;code&gt;call/3&lt;/code&gt; &lt;/a&gt; se bloquear&amp;aacute; hasta que se reciba una respuesta (a menos que la llamada se agote o los nodos est&amp;eacute;n desconectados).</target>
        </trans-unit>
        <trans-unit id="971fbd6b9ae7269a95c5e43e7e31db62769d21ec" translate="yes" xml:space="preserve">
          <source>Invoked when initializing a config provider.</source>
          <target state="translated">Invocado al inicializar un proveedor de configuración.</target>
        </trans-unit>
        <trans-unit id="618d0cf7ef6acc312a2d60fcc796f79659809cb5" translate="yes" xml:space="preserve">
          <source>Invoked when the server is about to exit. It should do any cleanup required.</source>
          <target state="translated">Invocado cuando el servidor está a punto de salir.Debería hacer cualquier limpieza necesaria.</target>
        </trans-unit>
        <trans-unit id="7d36bf5909d0181e92966ebf880c59e2f526bd11" translate="yes" xml:space="preserve">
          <source>Invoked when the server is started. &lt;a href=&quot;#start_link/3&quot;&gt;&lt;code&gt;start_link/3&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#start/3&quot;&gt;&lt;code&gt;start/3&lt;/code&gt;&lt;/a&gt; will block until it returns.</source>
          <target state="translated">Se invoca cuando se inicia el servidor. &lt;a href=&quot;#start_link/3&quot;&gt; &lt;code&gt;start_link/3&lt;/code&gt; &lt;/a&gt; o &lt;a href=&quot;#start/3&quot;&gt; &lt;code&gt;start/3&lt;/code&gt; &lt;/a&gt; se bloquear&amp;aacute;n hasta que regrese.</target>
        </trans-unit>
        <trans-unit id="dc23160ff26718d1a90643ca2158ff18ecfa2d78" translate="yes" xml:space="preserve">
          <source>Invokes &lt;code&gt;fun&lt;/code&gt; for each element in the &lt;code&gt;enumerable&lt;/code&gt; with the accumulator.</source>
          <target state="translated">Invoca &lt;code&gt;fun&lt;/code&gt; para cada elemento del &lt;code&gt;enumerable&lt;/code&gt; con el acumulador.</target>
        </trans-unit>
        <trans-unit id="3e3f9c65eaf0d3e4e4ac9e30375324284bc3c5a7" translate="yes" xml:space="preserve">
          <source>Invokes at the end of a nesting.</source>
          <target state="translated">Invoca al final de un nido.</target>
        </trans-unit>
        <trans-unit id="d9056f0569ac34dc376baf3f7e7aa026280e9f07" translate="yes" xml:space="preserve">
          <source>Invokes the callback with all entries under &lt;code&gt;key&lt;/code&gt; in each partition for the given &lt;code&gt;registry&lt;/code&gt;.</source>
          <target state="translated">Invoca la devoluci&amp;oacute;n de llamada con todas las entradas bajo la &lt;code&gt;key&lt;/code&gt; en cada partici&amp;oacute;n para el &lt;code&gt;registry&lt;/code&gt; dado .</target>
        </trans-unit>
        <trans-unit id="66ee7c7e2a41aa50f02ea0f66057171a17276f9a" translate="yes" xml:space="preserve">
          <source>Invokes the given &lt;code&gt;fun&lt;/code&gt; for each element in the &lt;code&gt;enumerable&lt;/code&gt;.</source>
          <target state="translated">Invoca la &lt;code&gt;fun&lt;/code&gt; dada para cada elemento del &lt;code&gt;enumerable&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c515146dfdcfd5de926f55b367fb13cb7ae87958" translate="yes" xml:space="preserve">
          <source>Invokes the given anonymous function &lt;code&gt;fun&lt;/code&gt; with the list of arguments &lt;code&gt;args&lt;/code&gt;.</source>
          <target state="translated">Invoca la funci&amp;oacute;n an&amp;oacute;nima dada &lt;code&gt;fun&lt;/code&gt; con la lista de argumentos &lt;code&gt;args&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2aa0eb875a1a8fbbb92dc87b00ef479f56d53d97" translate="yes" xml:space="preserve">
          <source>Invokes the given function from &lt;code&gt;module&lt;/code&gt; with the list of arguments &lt;code&gt;args&lt;/code&gt;.</source>
          <target state="translated">Invoca la funci&amp;oacute;n dada del &lt;code&gt;module&lt;/code&gt; con la lista de argumentos &lt;code&gt;args&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5649c0331fbb3552ad202de096382bf84abd3b21" translate="yes" xml:space="preserve">
          <source>Invokes the given function to each element in the &lt;code&gt;enumerable&lt;/code&gt; to reduce it to a single element, while keeping an accumulator.</source>
          <target state="translated">Invoca la funci&amp;oacute;n dada a cada elemento en el &lt;code&gt;enumerable&lt;/code&gt; para reducirlo a un solo elemento, mientras mantiene un acumulador.</target>
        </trans-unit>
        <trans-unit id="1dc0b084acbb8122b7369800b4f64ab048152c7c" translate="yes" xml:space="preserve">
          <source>Invoking &lt;code&gt;mix&lt;/code&gt; is the same as &lt;code&gt;mix run&lt;/code&gt;. Therefore, if you want to pass a flag to &lt;code&gt;mix&lt;/code&gt; or &lt;code&gt;iex -S mix&lt;/code&gt;, we just need to add the task name and the desired flags. For example, run &lt;code&gt;iex -S mix run --no-start&lt;/code&gt;:</source>
          <target state="translated">Invocar &lt;code&gt;mix&lt;/code&gt; es lo mismo que &lt;code&gt;mix run&lt;/code&gt; . Por lo tanto, si desea pasar una bandera para &lt;code&gt;mix&lt;/code&gt; o &lt;code&gt;iex -S mix&lt;/code&gt; , solo necesitamos agregar el nombre de la tarea y las banderas deseadas. Por ejemplo, ejecute &lt;code&gt;iex -S mix run --no-start&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="e66a67e4e899cac7ac07ae70b407650c10def5dc" translate="yes" xml:space="preserve">
          <source>Invoking this function when the distribution has already been started, either via the command line interface or dynamically, will return an error.</source>
          <target state="translated">Invocar esta función cuando la distribución ya se ha iniciado,ya sea a través de la interfaz de la línea de comandos o dinámicamente,devolverá un error.</target>
        </trans-unit>
        <trans-unit id="b0eda3fd7457c0fb4308b75d0bf6df3d4719aced" translate="yes" xml:space="preserve">
          <source>Is equivalent to:</source>
          <target state="translated">Es equivalente a:</target>
        </trans-unit>
        <trans-unit id="a559a239bb82de0629bcb6a428aeb5fd89db0826" translate="yes" xml:space="preserve">
          <source>Is the same as:</source>
          <target state="translated">Es lo mismo que:</target>
        </trans-unit>
        <trans-unit id="b48400f8fe9d35749daa7cbd1527dc39de359530" translate="yes" xml:space="preserve">
          <source>It MUST &lt;code&gt;import Config&lt;/code&gt; at the top instead of the deprecated &lt;code&gt;use Mix.Config&lt;/code&gt;</source>
          <target state="translated">DEBE &lt;code&gt;import Config&lt;/code&gt; en la parte superior en lugar del &lt;code&gt;use Mix.Config&lt;/code&gt; obsoleto Mix.Config</target>
        </trans-unit>
        <trans-unit id="a3354e4898e62c5bb42e290c77847d16af508d4f" translate="yes" xml:space="preserve">
          <source>It MUST NOT access &lt;a href=&quot;https://hexdocs.pm/mix/Mix.html&quot;&gt;&lt;code&gt;Mix&lt;/code&gt;&lt;/a&gt; in any way, as &lt;a href=&quot;https://hexdocs.pm/mix/Mix.html&quot;&gt;&lt;code&gt;Mix&lt;/code&gt;&lt;/a&gt; is a build tool and it is not available inside releases</source>
          <target state="translated">NO DEBE acceder a &lt;a href=&quot;https://hexdocs.pm/mix/Mix.html&quot;&gt; &lt;code&gt;Mix&lt;/code&gt; &lt;/a&gt; de ninguna manera, ya que &lt;a href=&quot;https://hexdocs.pm/mix/Mix.html&quot;&gt; &lt;code&gt;Mix&lt;/code&gt; &lt;/a&gt; es una herramienta de construcci&amp;oacute;n y no est&amp;aacute; disponible dentro de las versiones.</target>
        </trans-unit>
        <trans-unit id="7e1d9cf438c969dee7915e9b562a69ea08c11e60" translate="yes" xml:space="preserve">
          <source>It MUST NOT import any other configuration file via &lt;code&gt;import_config&lt;/code&gt;</source>
          <target state="translated">NO DEBE importar ning&amp;uacute;n otro archivo de configuraci&amp;oacute;n a trav&amp;eacute;s de &lt;code&gt;import_config&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c5705683fdebc9e7c3a2a72f5f351756cecd2661" translate="yes" xml:space="preserve">
          <source>It accepts a list of &lt;code&gt;imported_paths&lt;/code&gt; that should raise if attempted to be imported again (to avoid recursive imports).</source>
          <target state="translated">Acepta una lista de &lt;code&gt;imported_paths&lt;/code&gt; que deber&amp;iacute;an aparecer si se intenta importar de nuevo (para evitar importaciones recursivas).</target>
        </trans-unit>
        <trans-unit id="8b02345541bef5990635992a1f66fbd5e80cdc19" translate="yes" xml:space="preserve">
          <source>It accepts a set of &lt;code&gt;options&lt;/code&gt; to configure &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;ExUnit&lt;/code&gt;&lt;/a&gt; (the same ones accepted by &lt;a href=&quot;#configure/1&quot;&gt;&lt;code&gt;configure/1&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">Acepta un conjunto de &lt;code&gt;options&lt;/code&gt; para configurar &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;ExUnit&lt;/code&gt; &lt;/a&gt; (las mismas aceptadas por &lt;a href=&quot;#configure/1&quot;&gt; &lt;code&gt;configure/1&lt;/code&gt; &lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="9c6bdae26359278127b2679c1e0f6e34574670e1" translate="yes" xml:space="preserve">
          <source>It accepts the same options as &lt;a href=&quot;#parse/2&quot;&gt;&lt;code&gt;parse/2&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#parse_head/2&quot;&gt;&lt;code&gt;parse_head/2&lt;/code&gt;&lt;/a&gt; as both functions are built on top of this function. This function may return:</source>
          <target state="translated">Acepta las mismas opciones que &lt;a href=&quot;#parse/2&quot;&gt; &lt;code&gt;parse/2&lt;/code&gt; &lt;/a&gt; y &lt;a href=&quot;#parse_head/2&quot;&gt; &lt;code&gt;parse_head/2&lt;/code&gt; &lt;/a&gt; ya que ambas funciones est&amp;aacute;n construidas sobre esta funci&amp;oacute;n. Esta funci&amp;oacute;n puede devolver:</target>
        </trans-unit>
        <trans-unit id="52c79809b7aa93e13235dedf1c047e396021dbc2" translate="yes" xml:space="preserve">
          <source>It accepts the struct module or a struct itself and simply removes the &lt;code&gt;__struct__&lt;/code&gt; field from the given struct or from a new struct generated from the given module.</source>
          <target state="translated">Acepta el m&amp;oacute;dulo de estructura o una estructura en s&amp;iacute; y simplemente elimina el campo &lt;code&gt;__struct__&lt;/code&gt; de la estructura dada o de una nueva estructura generada a partir del m&amp;oacute;dulo dado.</target>
        </trans-unit>
        <trans-unit id="9db7ae3984a1b1beb1ad6d9414dcb836e49e4a46" translate="yes" xml:space="preserve">
          <source>It allows a developer to dynamically add, delete and register attributes, attach documentation and so forth.</source>
          <target state="translated">Permite al desarrollador añadir,eliminar y registrar atributos de forma dinámica,adjuntar documentación,etc.</target>
        </trans-unit>
        <trans-unit id="2ac59abc929bedbd71d6ab74f36247bff27a3d81" translate="yes" xml:space="preserve">
          <source>It allows developers to lookup one or more processes with a given key. If the registry has &lt;code&gt;:unique&lt;/code&gt; keys, a key points to 0 or 1 process. If the registry allows &lt;code&gt;:duplicate&lt;/code&gt; keys, a single key may point to any number of processes. In both cases, different keys could identify the same process.</source>
          <target state="translated">Permite a los desarrolladores buscar uno o m&amp;aacute;s procesos con una clave determinada. Si el registro tiene &lt;code&gt;:unique&lt;/code&gt; claves &amp;uacute;nicas , una clave apunta a 0 o 1 proceso. Si el registro permite &lt;code&gt;:duplicate&lt;/code&gt; claves duplicadas , una sola clave puede apuntar a cualquier n&amp;uacute;mero de procesos. En ambos casos, diferentes claves podr&amp;iacute;an identificar el mismo proceso.</target>
        </trans-unit>
        <trans-unit id="5e72ef20465fc62c76630754f83ef1dcdcf00df1" translate="yes" xml:space="preserve">
          <source>It allows developers to lookup one or more processes with a given key. If the registry has &lt;code&gt;:unique&lt;/code&gt; keys, a key points to 0 or 1 processes. If the registry allows &lt;code&gt;:duplicate&lt;/code&gt; keys, a single key may point to any number of processes. In both cases, different keys could identify the same process.</source>
          <target state="translated">Permite a los desarrolladores buscar uno o m&amp;aacute;s procesos con una clave determinada. Si el registro tiene &lt;code&gt;:unique&lt;/code&gt; claves &amp;uacute;nicas , una clave apunta a 0 o 1 procesos. Si el registro permite &lt;code&gt;:duplicate&lt;/code&gt; claves duplicadas , una sola clave puede apuntar a cualquier n&amp;uacute;mero de procesos. En ambos casos, diferentes claves podr&amp;iacute;an identificar el mismo proceso.</target>
        </trans-unit>
        <trans-unit id="4a71454b932a3e5f1fc7b4c0e7b18e42341a6164" translate="yes" xml:space="preserve">
          <source>It also accepts extra options, for the list of available options check &lt;a href=&quot;http://www.erlang.org/doc/man/erlang.html#spawn_opt-4&quot;&gt;&lt;code&gt;:erlang.spawn_opt/4&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Tambi&amp;eacute;n acepta opciones adicionales, para ver la lista de opciones disponibles, verifique &lt;a href=&quot;http://www.erlang.org/doc/man/erlang.html#spawn_opt-4&quot;&gt; &lt;code&gt;:erlang.spawn_opt/4&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1fbb9737feae3b4fd98e6dc6a9178278f7164fb2" translate="yes" xml:space="preserve">
          <source>It also accepts functions in the format &lt;code&gt;function/arity&lt;/code&gt; and &lt;code&gt;module.function/arity&lt;/code&gt;, for example:</source>
          <target state="translated">Tambi&amp;eacute;n acepta funciones en el formato &lt;code&gt;function/arity&lt;/code&gt; &lt;code&gt;module.function/arity&lt;/code&gt; y module.function / arity , por ejemplo:</target>
        </trans-unit>
        <trans-unit id="99ac564cc223e5941d854a27c61609f6da592403" translate="yes" xml:space="preserve">
          <source>It also accepts single module argument to list all available behaviour callbacks.</source>
          <target state="translated">También acepta el argumento de módulo único para enumerar todas las llamadas de comportamiento disponibles.</target>
        </trans-unit>
        <trans-unit id="c75c3d13969e4bc5682206b7605cdbcb131cac76" translate="yes" xml:space="preserve">
          <source>It also checks the inbox for an input message matching:</source>
          <target state="translated">También revisa la bandeja de entrada para ver si hay un mensaje de entrada que coincida:</target>
        </trans-unit>
        <trans-unit id="d684369d14eb5a8f47ce27babf1c852d61fa5f18" translate="yes" xml:space="preserve">
          <source>It also works with operators and other constructs (try &lt;code&gt;h +/2&lt;/code&gt;). Invoking &lt;code&gt;h&lt;/code&gt; without arguments displays the documentation for &lt;code&gt;IEx.Helpers&lt;/code&gt;, which is where &lt;code&gt;h&lt;/code&gt; and other functionality is defined.</source>
          <target state="translated">Tambi&amp;eacute;n funciona con operadores y otras construcciones (pruebe con &lt;code&gt;h +/2&lt;/code&gt; ). Invocar &lt;code&gt;h&lt;/code&gt; sin argumentos muestra la documentaci&amp;oacute;n de &lt;code&gt;IEx.Helpers&lt;/code&gt; , que es donde se definen &lt;code&gt;h&lt;/code&gt; y otras funciones.</target>
        </trans-unit>
        <trans-unit id="66bb36cef2226ba0f885d74efad89fc9715f130c" translate="yes" xml:space="preserve">
          <source>It always returns &lt;code&gt;:ok&lt;/code&gt;. Raises an error for invalid options.</source>
          <target state="translated">Siempre vuelve &lt;code&gt;:ok&lt;/code&gt; . Genera un error por opciones no v&amp;aacute;lidas.</target>
        </trans-unit>
        <trans-unit id="5c52aede24529ec1285e253d78f2de5411948ef5" translate="yes" xml:space="preserve">
          <source>It assumes the application exists in the release.</source>
          <target state="translated">Supone que la aplicación existe en el comunicado.</target>
        </trans-unit>
        <trans-unit id="a500beab3e68eedeee4019c52133aa404957a732" translate="yes" xml:space="preserve">
          <source>It can be a regular file, directory, socket, symbolic link, named pipe, or device file. Returns &lt;code&gt;false&lt;/code&gt; for symbolic links pointing to non-existing targets.</source>
          <target state="translated">Puede ser un archivo normal, directorio, conector, enlace simb&amp;oacute;lico, canalizaci&amp;oacute;n con nombre o archivo de dispositivo. Devuelve &lt;code&gt;false&lt;/code&gt; para enlaces simb&amp;oacute;licos que apuntan a objetivos no existentes.</target>
        </trans-unit>
        <trans-unit id="c22cd573aa0e917048596a531fe8bd4df0ba66d2" translate="yes" xml:space="preserve">
          <source>It can be upgraded to the DynamicSupervisor like this:</source>
          <target state="translated">Se puede actualizar al DynamicSupervisor de esta manera:</target>
        </trans-unit>
        <trans-unit id="7d4ae51a95fbbfa60a796e3589c4762cdf4df826" translate="yes" xml:space="preserve">
          <source>It can be used in your &lt;code&gt;mix.exs&lt;/code&gt; to prepend or append new compilers to Mix:</source>
          <target state="translated">Puede usarse en su &lt;code&gt;mix.exs&lt;/code&gt; para anteponer o agregar nuevos compiladores a Mix:</target>
        </trans-unit>
        <trans-unit id="28b1a3769a282dd753685d31c1db0ca20ed8c01c" translate="yes" xml:space="preserve">
          <source>It contains the following fields:</source>
          <target state="translated">Contiene los siguientes campos:</target>
        </trans-unit>
        <trans-unit id="af1426f38289e13f36126375da54309f97a70a12" translate="yes" xml:space="preserve">
          <source>It contains these fields:</source>
          <target state="translated">Contiene estos campos:</target>
        </trans-unit>
        <trans-unit id="113d9a8235b2ac8f428decf342fbd7858aa4973c" translate="yes" xml:space="preserve">
          <source>It could also be corrected by using multiple guards, so that if an exception causes one guard to fail, the next one is evaluated.</source>
          <target state="translated">También podría corregirse utilizando múltiples guardias,de modo que si una excepción hace que una guardia falle,se evalúe la siguiente.</target>
        </trans-unit>
        <trans-unit id="d0ae36b9918c76d1dbdaba834a0193896ca365cc" translate="yes" xml:space="preserve">
          <source>It defaults to safely download a Rebar copy from Hex's CDN. However, a URL can be given as argument, usually for an existing local copy of Rebar:</source>
          <target state="translated">Por defecto,se descarga de forma segura una copia de Rebar del CDN de Hex.Sin embargo,se puede dar una URL como argumento,generalmente para una copia local existente de Rebar:</target>
        </trans-unit>
        <trans-unit id="1987bff89f1c6703dd2895ae7707929f8d89192f" translate="yes" xml:space="preserve">
          <source>It depends. It is ok to rely on shared state as long as we depend only on a non-shared partition of this state. Although multiple registries may start buckets on the shared bucket supervisor, those buckets and registries are isolated from each other. We would only run into concurrency issues if we used a function like &lt;code&gt;Supervisor.count_children(KV.BucketSupervisor)&lt;/code&gt; which would count all buckets from all registries, potentially giving different results when tests run concurrently.</source>
          <target state="translated">Depende. Est&amp;aacute; bien confiar en el estado compartido siempre que dependamos solo de una partici&amp;oacute;n no compartida de este estado. Aunque varios registros pueden iniciar dep&amp;oacute;sitos en el supervisor de dep&amp;oacute;sito compartido, esos dep&amp;oacute;sitos y registros est&amp;aacute;n aislados entre s&amp;iacute;. Solo nos encontrar&amp;iacute;amos con problemas de concurrencia si &lt;code&gt;Supervisor.count_children(KV.BucketSupervisor)&lt;/code&gt; una funci&amp;oacute;n como Supervisor.count_children (KV.BucketSupervisor) que contar&amp;iacute;a todos los dep&amp;oacute;sitos de todos los registros, lo que podr&amp;iacute;a dar resultados diferentes cuando las pruebas se ejecutan al mismo tiempo.</target>
        </trans-unit>
        <trans-unit id="4a261e69bb9abf1be6a9e6bf29d1f5c299e998d0" translate="yes" xml:space="preserve">
          <source>It differs in that the test suite will fail if no tests are executed when the &lt;code&gt;--only&lt;/code&gt; option is used.</source>
          <target state="translated">Se diferencia en que el conjunto de pruebas fallar&amp;aacute; si no se ejecutan pruebas cuando se &lt;code&gt;--only&lt;/code&gt; opci&amp;oacute;n --only .</target>
        </trans-unit>
        <trans-unit id="bebaceae48e94abb745e77cdc9d79c5704717c94" translate="yes" xml:space="preserve">
          <source>It doesn&amp;rsquo;t seem to work at all. That&amp;rsquo;s because we are serving requests in the same process that are accepting connections. When one client is connected, we can&amp;rsquo;t accept another client.</source>
          <target state="translated">No parece funcionar en absoluto. Eso es porque estamos atendiendo solicitudes en el mismo proceso que aceptamos conexiones. Cuando un cliente est&amp;aacute; conectado, no podemos aceptar otro cliente.</target>
        </trans-unit>
        <trans-unit id="18c00afbabba2721adf88ec3c29e863b42471b6a" translate="yes" xml:space="preserve">
          <source>It enables pretty printing by default with width of 80 characters. The width can be changed by explicitly passing the &lt;code&gt;:width&lt;/code&gt; option.</source>
          <target state="translated">Permite una impresi&amp;oacute;n bonita por defecto con un ancho de 80 caracteres. El ancho se puede cambiar pasando expl&amp;iacute;citamente la opci&amp;oacute;n &lt;code&gt;:width&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="38c802c651048f44f24f8b3150960035a31699cb" translate="yes" xml:space="preserve">
          <source>It exists for convenience purposes. For example, you could invoke it inside your &lt;code&gt;mix.exs&lt;/code&gt; to read some external data you decided to move to a configuration file:</source>
          <target state="translated">Existe por conveniencia. Por ejemplo, puede invocarlo dentro de su &lt;code&gt;mix.exs&lt;/code&gt; para leer algunos datos externos que decidi&amp;oacute; mover a un archivo de configuraci&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="cfbe9f805346901fb7658c3a10caf05daf303078" translate="yes" xml:space="preserve">
          <source>It expects a &lt;code&gt;radius&lt;/code&gt; which chooses how many lines before and after the current line we should print. By default the &lt;code&gt;radius&lt;/code&gt; is of two lines:</source>
          <target state="translated">Espera un &lt;code&gt;radius&lt;/code&gt; que elija cu&amp;aacute;ntas l&amp;iacute;neas antes y despu&amp;eacute;s de la l&amp;iacute;nea actual debemos imprimir. Por defecto, el &lt;code&gt;radius&lt;/code&gt; es de dos l&amp;iacute;neas:</target>
        </trans-unit>
        <trans-unit id="e8f41592949431573d9fa16ad07b816bc20d280c" translate="yes" xml:space="preserve">
          <source>It expects a child specification or a module, similar to the ones given to &lt;a href=&quot;https://hexdocs.pm/elixir/Supervisor.html#start_link/2&quot;&gt;&lt;code&gt;Supervisor.start_link/2&lt;/code&gt;&lt;/a&gt;. For example, if your application starts a supervision tree by running:</source>
          <target state="translated">Espera una especificaci&amp;oacute;n secundaria o un m&amp;oacute;dulo, similar a los dados a &lt;a href=&quot;https://hexdocs.pm/elixir/Supervisor.html#start_link/2&quot;&gt; &lt;code&gt;Supervisor.start_link/2&lt;/code&gt; &lt;/a&gt; . Por ejemplo, si su aplicaci&amp;oacute;n inicia un &amp;aacute;rbol de supervisi&amp;oacute;n ejecutando:</target>
        </trans-unit>
        <trans-unit id="88606c2938fbdad4196a7b400eb0db21cee6ea05" translate="yes" xml:space="preserve">
          <source>It expects a list of files to compile and an optional path to write the compiled code to. By default files are in-memory compiled. To write compiled files to the current directory, an empty string can be given.</source>
          <target state="translated">Espera una lista de archivos para compilar y una ruta opcional para escribir el código compilado.Por defecto,los archivos se compilan en memoria.Para escribir los archivos compilados en el directorio actual,se puede dar una cadena vacía.</target>
        </trans-unit>
        <trans-unit id="6adc6a5d8736969f9827e5e4d2dbab0ae103ab01" translate="yes" xml:space="preserve">
          <source>It expects a time zone to put the &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;DateTime&lt;/code&gt;&lt;/a&gt; in. If the time zone is not passed it will default to &lt;code&gt;&quot;Etc/UTC&quot;&lt;/code&gt;, which always succeeds. Otherwise, the &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;DateTime&lt;/code&gt;&lt;/a&gt; is checked against the time zone database given as &lt;code&gt;time_zone_database&lt;/code&gt;. See the &quot;Time zone database&quot; section in the module documentation.</source>
          <target state="translated">Se espera que una zona horaria para poner el &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;DateTime&lt;/code&gt; &lt;/a&gt; . Si la zona horaria no se pasa por defecto lo &lt;code&gt;&quot;Etc/UTC&quot;&lt;/code&gt; , que siempre tiene &amp;eacute;xito. De lo contrario, el &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;DateTime&lt;/code&gt; &lt;/a&gt; se compara con la base de datos de zona horaria dada como &lt;code&gt;time_zone_database&lt;/code&gt; . Consulte la secci&amp;oacute;n &quot;Base de datos de zonas horarias&quot; en la documentaci&amp;oacute;n del m&amp;oacute;dulo.</target>
        </trans-unit>
        <trans-unit id="8a2620b634b0dd22db12b71fb16f9100f9f18265" translate="yes" xml:space="preserve">
          <source>It expects a time zone to put the &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;DateTime&lt;/code&gt;&lt;/a&gt; in. If the time zone is not passed it will default to &lt;code&gt;&quot;Etc/UTC&quot;&lt;/code&gt;, which always succeeds. Otherwise, the DateTime is checked against the time zone database given as &lt;code&gt;time_zone_database&lt;/code&gt;. See the &quot;Time zone database&quot; section in the module documentation.</source>
          <target state="translated">Se espera que una zona horaria para poner el &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;DateTime&lt;/code&gt; &lt;/a&gt; . Si la zona horaria no se pasa por defecto lo &lt;code&gt;&quot;Etc/UTC&quot;&lt;/code&gt; , que siempre tiene &amp;eacute;xito. De lo contrario, la fecha y hora se compara con la base de datos de la zona horaria proporcionada como &lt;code&gt;time_zone_database&lt;/code&gt; . Consulte la secci&amp;oacute;n &quot;Base de datos de zonas horarias&quot; en la documentaci&amp;oacute;n del m&amp;oacute;dulo.</target>
        </trans-unit>
        <trans-unit id="546a02d155d91f970f8b486494def9374e27bedc" translate="yes" xml:space="preserve">
          <source>It expects a time zone to put the &lt;a href=&quot;https://hexdocs.pm/elixir/NaiveDateTime.html&quot;&gt;&lt;code&gt;NaiveDateTime&lt;/code&gt;&lt;/a&gt; in. If the time zone is &quot;Etc/UTC&quot;, it always succeeds. Otherwise, the NaiveDateTime is checked against the time zone database given as &lt;code&gt;time_zone_database&lt;/code&gt;. See the &quot;Time zone database&quot; section in the module documentation.</source>
          <target state="translated">Espera una zona horaria para poner &lt;a href=&quot;https://hexdocs.pm/elixir/NaiveDateTime.html&quot;&gt; &lt;code&gt;NaiveDateTime&lt;/code&gt; &lt;/a&gt; . Si la zona horaria es &quot;Etc / UTC&quot;, siempre tiene &amp;eacute;xito. De lo contrario, NaiveDateTime se compara con la base de datos de la zona horaria proporcionada como &lt;code&gt;time_zone_database&lt;/code&gt; . Consulte la secci&amp;oacute;n &quot;Base de datos de zonas horarias&quot; en la documentaci&amp;oacute;n del m&amp;oacute;dulo.</target>
        </trans-unit>
        <trans-unit id="f95cc29acd1a8f43652435b365857f4644147164" translate="yes" xml:space="preserve">
          <source>It expects a time zone to put the &lt;a href=&quot;naivedatetime&quot;&gt;&lt;code&gt;NaiveDateTime&lt;/code&gt;&lt;/a&gt; in. If the time zone is &quot;Etc/UTC&quot;, it always succeeds. Otherwise, the NaiveDateTime is checked against the time zone database given as &lt;code&gt;time_zone_database&lt;/code&gt;. See the &quot;Time zone database&quot; section in the module documentation.</source>
          <target state="translated">Espera una zona horaria para poner el &lt;a href=&quot;naivedatetime&quot;&gt; &lt;code&gt;NaiveDateTime&lt;/code&gt; &lt;/a&gt; . Si la zona horaria es &quot;Etc / UTC&quot;, siempre tiene &amp;eacute;xito. De lo contrario, NaiveDateTime se compara con la base de datos de la zona horaria proporcionada como &lt;code&gt;time_zone_database&lt;/code&gt; . Consulte la secci&amp;oacute;n &quot;Base de datos de zonas horarias&quot; en la documentaci&amp;oacute;n del m&amp;oacute;dulo.</target>
        </trans-unit>
        <trans-unit id="1a16340d7de1aebc03edf6573a0e15525a829528" translate="yes" xml:space="preserve">
          <source>It expects a time zone to put the NaiveDateTime in. If the time zone is &quot;Etc/UTC&quot;, it always succeeds. Otherwise, the NaiveDateTime is checked against the time zone database given as &lt;code&gt;time_zone_database&lt;/code&gt;. See the &quot;Time zone database&quot; section in the module documentation.</source>
          <target state="translated">Espera una zona horaria para poner el NaiveDateTime. Si la zona horaria es &quot;Etc / UTC&quot;, siempre tiene &amp;eacute;xito. De lo contrario, NaiveDateTime se compara con la base de datos de la zona horaria proporcionada como &lt;code&gt;time_zone_database&lt;/code&gt; . Consulte la secci&amp;oacute;n &quot;Base de datos de zonas horarias&quot; en la documentaci&amp;oacute;n del m&amp;oacute;dulo.</target>
        </trans-unit>
        <trans-unit id="c6e8dcd4689f9bb5cfe59fd80447b6dfb675bc3e" translate="yes" xml:space="preserve">
          <source>It expects an accumulator and a function that receives each enumerable element, and must return a tuple containing a new enumerable (often a list) with the new accumulator or a tuple with &lt;code&gt;:halt&lt;/code&gt; as first element and the accumulator as second.</source>
          <target state="translated">Espera un acumulador y una funci&amp;oacute;n que recibe cada elemento enumerable, y debe devolver una tupla que contenga un nuevo enumerable (a menudo una lista) con el nuevo acumulador o una tupla con &lt;code&gt;:halt&lt;/code&gt; como primer elemento y el acumulador como segundo.</target>
        </trans-unit>
        <trans-unit id="ae9f951251e613dc3b8cb49889447942b487f90f" translate="yes" xml:space="preserve">
          <source>It expects an accumulator and a function that receives each stream element and an accumulator, and must return a tuple containing a new stream (often a list) with the new accumulator or a tuple with &lt;code&gt;:halt&lt;/code&gt; as first element and the accumulator as second.</source>
          <target state="translated">Espera un acumulador y una funci&amp;oacute;n que reciba cada elemento de flujo y un acumulador, y debe devolver una tupla que contenga un flujo nuevo (a menudo una lista) con el nuevo acumulador o una tupla con &lt;code&gt;:halt&lt;/code&gt; como primer elemento y el acumulador como segundo.</target>
        </trans-unit>
        <trans-unit id="cccf2ce5212dd9d14c0a4002d35324d8f82c2fda" translate="yes" xml:space="preserve">
          <source>It expects an accumulator and a function that receives each stream element and an accumulator. It must return a tuple, where the first element is a new stream (often a list) or the atom &lt;code&gt;:halt&lt;/code&gt;, and the second element is the accumulator to be used by the next element, if any, in both cases.</source>
          <target state="translated">Espera un acumulador y una funci&amp;oacute;n que recibe cada elemento de flujo y un acumulador. Debe devolver una tupla, donde el primer elemento es una nueva secuencia (a menudo una lista) o el &amp;aacute;tomo &lt;code&gt;:halt&lt;/code&gt; , y el segundo elemento es el acumulador que utilizar&amp;aacute; el siguiente elemento, si lo hay, en ambos casos.</target>
        </trans-unit>
        <trans-unit id="cdb9574f709769eda3fcd701f6835100d09de7b2" translate="yes" xml:space="preserve">
          <source>It happens we can also use this same syntax for updating the value:</source>
          <target state="translated">Sucede que también podemos usar esta misma sintaxis para actualizar el valor:</target>
        </trans-unit>
        <trans-unit id="7d301b15b4e45486cec4db8315f250c006b60e6f" translate="yes" xml:space="preserve">
          <source>It has to be replaced by:</source>
          <target state="translated">Tiene que ser reemplazado por:</target>
        </trans-unit>
        <trans-unit id="272be857efb69d0027fa3d247e076f214cedbf37" translate="yes" xml:space="preserve">
          <source>It includes assigns (like &lt;code&gt;@foo&lt;/code&gt;) and possibly other conveniences in the future.</source>
          <target state="translated">Incluye &lt;code&gt;@foo&lt;/code&gt; (como @foo ) y posiblemente otras comodidades en el futuro.</target>
        </trans-unit>
        <trans-unit id="6566504417caf3c9fcfa6f04770ab2069caa71e8" translate="yes" xml:space="preserve">
          <source>It includes many features:</source>
          <target state="translated">Incluye muchas características:</target>
        </trans-unit>
        <trans-unit id="71b759b7ba0ceba9436adc2e4d919d9a0599963f" translate="yes" xml:space="preserve">
          <source>It is advised to pass to &lt;a href=&quot;#to_argv/2&quot;&gt;&lt;code&gt;to_argv/2&lt;/code&gt;&lt;/a&gt; the same set of &lt;code&gt;options&lt;/code&gt; given to &lt;a href=&quot;#parse/2&quot;&gt;&lt;code&gt;parse/2&lt;/code&gt;&lt;/a&gt;. Some switches can only be reconstructed correctly with the &lt;code&gt;:switches&lt;/code&gt; information in hand.</source>
          <target state="translated">Se recomienda pasar a &lt;a href=&quot;#to_argv/2&quot;&gt; &lt;code&gt;to_argv/2&lt;/code&gt; &lt;/a&gt; el mismo conjunto de &lt;code&gt;options&lt;/code&gt; dadas a &lt;a href=&quot;#parse/2&quot;&gt; &lt;code&gt;parse/2&lt;/code&gt; &lt;/a&gt; . Algunos conmutadores solo se pueden reconstruir correctamente con la informaci&amp;oacute;n de &lt;code&gt;:switches&lt;/code&gt; en la mano.</target>
        </trans-unit>
        <trans-unit id="7eb61a3d0a7df51c644f050632b4aa72ddabe51e" translate="yes" xml:space="preserve">
          <source>It is also common to define your setup as a series of functions, which are put together by calling &lt;code&gt;setup&lt;/code&gt; or &lt;code&gt;setup_all&lt;/code&gt; with a list of atoms. Each of these functions receive the context and can return any of the values allowed in &lt;code&gt;setup&lt;/code&gt; blocks:</source>
          <target state="translated">Tambi&amp;eacute;n es com&amp;uacute;n definir su configuraci&amp;oacute;n como una serie de funciones, que se combinan llamando a &lt;code&gt;setup&lt;/code&gt; o &lt;code&gt;setup_all&lt;/code&gt; con una lista de &amp;aacute;tomos. Cada una de estas funciones recibe el contexto y puede devolver cualquiera de los valores permitidos en &lt;code&gt;setup&lt;/code&gt; bloques de configuraci&amp;oacute;n :</target>
        </trans-unit>
        <trans-unit id="c0856684d2283019235a3b8fb6bf7df63dcb5c31" translate="yes" xml:space="preserve">
          <source>It is also possible to capture public module functions and pass them around as if they were anonymous functions by using the capture operator &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.SpecialForms.html#&amp;amp;/1&quot;&gt;&lt;code&gt;Kernel.SpecialForms.&amp;amp;/1&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">Tambi&amp;eacute;n es posible capturar funciones p&amp;uacute;blicas del m&amp;oacute;dulo y pasarlas como si fueran funciones an&amp;oacute;nimas usando el operador de captura &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.SpecialForms.html#&amp;amp;/1&quot;&gt; &lt;code&gt;Kernel.SpecialForms.&amp;amp;/1&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="56aeb1cfede9d1959649b5d6d4fd4f20a2043a1a" translate="yes" xml:space="preserve">
          <source>It is also possible to format code across the whole project by passing a list of patterns and files to &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;mix format&lt;/code&gt;&lt;/a&gt;, as shown at the top of this task documentation. This list can also be set in the &lt;code&gt;.formatter.exs&lt;/code&gt; file under the &lt;code&gt;:inputs&lt;/code&gt; key.</source>
          <target state="translated">Tambi&amp;eacute;n es posible formatear el c&amp;oacute;digo en todo el proyecto pasando una lista de patrones y archivos para &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;mix format&lt;/code&gt; &lt;/a&gt; , como se muestra en la parte superior de la documentaci&amp;oacute;n de esta tarea. Esta lista tambi&amp;eacute;n se puede establecer en el archivo &lt;code&gt;.formatter.exs&lt;/code&gt; bajo la tecla &lt;code&gt;:inputs&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5ec9133e5ffa0e2eb38967925bbcd3b498316545" translate="yes" xml:space="preserve">
          <source>It is also possible to put an element at a particular index in a tuple with &lt;code&gt;put_elem/3&lt;/code&gt;:</source>
          <target state="translated">Tambi&amp;eacute;n es posible poner un elemento en un &amp;iacute;ndice particular en una tupla con &lt;code&gt;put_elem/3&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="68a13c5162ca9952e7df7f252e41c665b4a6ce1a" translate="yes" xml:space="preserve">
          <source>It is also possible to register the &lt;code&gt;pid&lt;/code&gt;, giving it a name, and allowing everyone that knows the name to send it messages:</source>
          <target state="translated">Tambi&amp;eacute;n es posible registrar el &lt;code&gt;pid&lt;/code&gt; , d&amp;aacute;ndole un nombre y permitiendo que todos los que conocen el nombre le env&amp;iacute;en mensajes:</target>
        </trans-unit>
        <trans-unit id="a136eb79bc8a61b01254d5faf81fdf246125d6a9" translate="yes" xml:space="preserve">
          <source>It is also possible to spawn a task under a supervisor. The &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Task&lt;/code&gt;&lt;/a&gt; module implements the &lt;a href=&quot;#child_spec/1&quot;&gt;&lt;code&gt;child_spec/1&lt;/code&gt;&lt;/a&gt; function, which allows it to be started directly under a supervisor by passing a tuple with a function to run:</source>
          <target state="translated">Tambi&amp;eacute;n es posible generar una tarea bajo la supervisi&amp;oacute;n de un supervisor. El m&amp;oacute;dulo de &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;Task&lt;/code&gt; &lt;/a&gt; implementa la funci&amp;oacute;n &lt;a href=&quot;#child_spec/1&quot;&gt; &lt;code&gt;child_spec/1&lt;/code&gt; &lt;/a&gt; , que permite que se inicie directamente bajo un supervisor pasando una tupla con una funci&amp;oacute;n para ejecutar:</target>
        </trans-unit>
        <trans-unit id="d56d59c22a31d0146ae9749c3030a51ef3731009" translate="yes" xml:space="preserve">
          <source>It is also used between &lt;code&gt;fn/end&lt;/code&gt; for building anonymous functions:</source>
          <target state="translated">Tambi&amp;eacute;n se usa entre &lt;code&gt;fn/end&lt;/code&gt; para construir funciones an&amp;oacute;nimas:</target>
        </trans-unit>
        <trans-unit id="56e71075219fd34ef819cdd9dc47abc0939b0f36" translate="yes" xml:space="preserve">
          <source>It is also very common to use &lt;code&gt;IO.inspect/2&lt;/code&gt; with &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#binding/0&quot;&gt;&lt;code&gt;binding()&lt;/code&gt;&lt;/a&gt;, which returns all variable names and their values:</source>
          <target state="translated">Tambi&amp;eacute;n es muy com&amp;uacute;n usar &lt;code&gt;IO.inspect/2&lt;/code&gt; con &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#binding/0&quot;&gt; &lt;code&gt;binding()&lt;/code&gt; &lt;/a&gt; , que devuelve todos los nombres de variables y sus valores:</target>
        </trans-unit>
        <trans-unit id="d30bf8f40195feb2fe708ceb6f9af150955200b6" translate="yes" xml:space="preserve">
          <source>It is an integer from 1 to 366.</source>
          <target state="translated">Es un número entero de 1 a 366.</target>
        </trans-unit>
        <trans-unit id="32489e7a3e2d6e237839e846a2d9f094cd20f95c" translate="yes" xml:space="preserve">
          <source>It is an integer from 1 to 4.</source>
          <target state="translated">Es un número entero de 1 a 4.</target>
        </trans-unit>
        <trans-unit id="aef7af646cd422fb9f21670a1cedef851042bc5d" translate="yes" xml:space="preserve">
          <source>It is an integer from 1 to 7, where 1 is Monday and 7 is Sunday.</source>
          <target state="translated">Es un número entero de 1 a 7,donde 1 es lunes y 7 es domingo.</target>
        </trans-unit>
        <trans-unit id="9d6b7aa9053923985210f1530605583decd65914" translate="yes" xml:space="preserve">
          <source>It is an integer from 1 to 7, where 1 is the given &lt;code&gt;starting_on&lt;/code&gt; weekday. For example, if &lt;code&gt;starting_on&lt;/code&gt; is set to &lt;code&gt;:monday&lt;/code&gt;, then 1 is Monday and 7 is Sunday.</source>
          <target state="translated">Es un n&amp;uacute;mero entero de 1 a 7, donde 1 es el d&amp;iacute;a de la semana de &lt;code&gt;starting_on&lt;/code&gt; dado . Por ejemplo, si &lt;code&gt;starting_on&lt;/code&gt; se establece en &lt;code&gt;:monday&lt;/code&gt; , entonces 1 es lunes y 7 es domingo.</target>
        </trans-unit>
        <trans-unit id="e3505fd23f7d466c912f750fe33536eb913541ef" translate="yes" xml:space="preserve">
          <source>It is available only in the &lt;code&gt;catch&lt;/code&gt; and &lt;code&gt;rescue&lt;/code&gt; clauses of &lt;a href=&quot;#try/1&quot;&gt;&lt;code&gt;try/1&lt;/code&gt;&lt;/a&gt; expressions.</source>
          <target state="translated">Solo est&amp;aacute; disponible en las cl&amp;aacute;usulas de &lt;code&gt;catch&lt;/code&gt; y &lt;code&gt;rescue&lt;/code&gt; de las expresiones &lt;a href=&quot;#try/1&quot;&gt; &lt;code&gt;try/1&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="80946675cc21f317c9b0ef6e5905961ee735ea93" translate="yes" xml:space="preserve">
          <source>It is exactly this supervision system that makes constructs like &lt;code&gt;try/catch&lt;/code&gt; and &lt;code&gt;try/rescue&lt;/code&gt; so uncommon in Elixir. Instead of rescuing an error, we&amp;rsquo;d rather &amp;ldquo;fail fast&amp;rdquo; since the supervision tree will guarantee our application will go back to a known initial state after the error.</source>
          <target state="translated">Es exactamente este sistema de supervisi&amp;oacute;n lo que hace que construcciones como &lt;code&gt;try/catch&lt;/code&gt; y &lt;code&gt;try/rescue&lt;/code&gt; sean tan poco comunes en Elixir. En lugar de rescatar un error, preferimos &quot;fallar r&amp;aacute;pido&quot; ya que el &amp;aacute;rbol de supervisi&amp;oacute;n garantizar&amp;aacute; que nuestra aplicaci&amp;oacute;n vuelva a un estado inicial conocido despu&amp;eacute;s del error.</target>
        </trans-unit>
        <trans-unit id="d207929393d3a65f7ffe43fdfee93a560fcbb309" translate="yes" xml:space="preserve">
          <source>It is extremely important that &lt;strong&gt;the formatting function does not fail&lt;/strong&gt;, as it will bring that particular logger instance down, causing your system to temporarily lose messages. If necessary, wrap the function in a &lt;code&gt;rescue&lt;/code&gt; and log a default message instead:</source>
          <target state="translated">Es extremadamente importante que &lt;strong&gt;la funci&amp;oacute;n de formateo no falle&lt;/strong&gt; , ya que desactivar&amp;aacute; esa instancia particular del registrador, causando que su sistema pierda mensajes temporalmente. Si es necesario, envuelva la funci&amp;oacute;n en un &lt;code&gt;rescue&lt;/code&gt; y registre un mensaje predeterminado en su lugar:</target>
        </trans-unit>
        <trans-unit id="94832ece51ae5f1825006490cfa48c6fe6830752" translate="yes" xml:space="preserve">
          <source>It is important that a macro is defined before its usage. Failing to define a macro before its invocation will raise an error at runtime, since the macro won&amp;rsquo;t be expanded and will be translated to a function call:</source>
          <target state="translated">Es importante que una macro se defina antes de su uso. No definir una macro antes de su invocaci&amp;oacute;n generar&amp;aacute; un error en tiempo de ejecuci&amp;oacute;n, ya que la macro no se expandir&amp;aacute; y se traducir&amp;aacute; a una llamada de funci&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="0771070acf565ebd4c40d426b39c1e6523d52f21" translate="yes" xml:space="preserve">
          <source>It is important that you choose an editor command that does not block nor that attempts to run an editor directly in the terminal. Command-line based editors likely need extra configuration so they open up the given file and line in a separate window.</source>
          <target state="translated">Es importante que elijas un comando de edición que no bloquee ni intente ejecutar un editor directamente en la terminal.Los editores basados en la línea de comandos probablemente necesitan una configuración extra para que abran el archivo y la línea dados en una ventana separada.</target>
        </trans-unit>
        <trans-unit id="b481005fe84ee670ac7d11f9a15a1a80d4c1bd8f" translate="yes" xml:space="preserve">
          <source>It is important to bear in mind that variables defined inside &lt;code&gt;try/catch/rescue/after&lt;/code&gt; blocks do not leak to the outer context. This is because the &lt;code&gt;try&lt;/code&gt; block may fail and as such the variables may never be bound in the first place. In other words, this code is invalid:</source>
          <target state="translated">Es importante tener en cuenta que las variables definidas dentro de los bloques &lt;code&gt;try/catch/rescue/after&lt;/code&gt; no se filtran al contexto externo. Esto se debe a que el bloque &lt;code&gt;try&lt;/code&gt; puede fallar y, como tal, es posible que las variables nunca est&amp;eacute;n vinculadas en primer lugar. En otras palabras, este c&amp;oacute;digo no es v&amp;aacute;lido:</target>
        </trans-unit>
        <trans-unit id="d6056e64535d65b5186c963f7472dd3b3997efc0" translate="yes" xml:space="preserve">
          <source>It is important to consider the limitations of distributed agents. Agents provide two APIs, one that works with anonymous functions and another that expects an explicit module, function, and arguments.</source>
          <target state="translated">Es importante considerar las limitaciones de los agentes distribuidos.Los agentes proporcionan dos API,uno que trabaja con funciones anónimas y otro que espera un módulo,una función y argumentos explícitos.</target>
        </trans-unit>
        <trans-unit id="f355f25591ea852cf993c5e79bb23c864b9b3d30" translate="yes" xml:space="preserve">
          <source>It is important to highlight that step 2 is a blocking one. Termination of a supervisor triggers a recursive chain of children terminations, therefore orderly shutting down all descendant processes. The &lt;a href=&quot;#c:stop/1&quot;&gt;&lt;code&gt;stop/1&lt;/code&gt;&lt;/a&gt; callback is invoked only after termination of the whole supervision tree.</source>
          <target state="translated">Es importante resaltar que el paso 2 es de bloqueo. La terminaci&amp;oacute;n de un supervisor desencadena una cadena recursiva de terminaciones de hijos, por lo que se apagan ordenadamente todos los procesos descendientes. La devoluci&amp;oacute;n &lt;a href=&quot;#c:stop/1&quot;&gt; &lt;code&gt;stop/1&lt;/code&gt; &lt;/a&gt; llamada stop / 1 se invoca solo despu&amp;eacute;s de la terminaci&amp;oacute;n de todo el &amp;aacute;rbol de supervisi&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="a5cda11adf3996ed10a3333a6901fb7bf070783d" translate="yes" xml:space="preserve">
          <source>It is important to note a couple of things:</source>
          <target state="translated">Es importante tener en cuenta un par de cosas:</target>
        </trans-unit>
        <trans-unit id="3bb3eb88d00232d84e73101145b87680a8e850e6" translate="yes" xml:space="preserve">
          <source>It is important to note that &lt;a href=&quot;#import/2&quot;&gt;&lt;code&gt;import/2&lt;/code&gt;&lt;/a&gt; is lexical. This means you can import specific macros inside specific functions:</source>
          <target state="translated">Es importante notar que &lt;a href=&quot;#import/2&quot;&gt; &lt;code&gt;import/2&lt;/code&gt; &lt;/a&gt; es l&amp;eacute;xico. Esto significa que puede importar macros espec&amp;iacute;ficas dentro de funciones espec&amp;iacute;ficas:</target>
        </trans-unit>
        <trans-unit id="c367faed115a28802b3ecac8ce4c9b1b9a88de2a" translate="yes" xml:space="preserve">
          <source>It is important to note that a name without &lt;code&gt;!&lt;/code&gt; does not mean a function will never raise. For example, even &lt;a href=&quot;file#read/1&quot;&gt;&lt;code&gt;File.read/1&lt;/code&gt;&lt;/a&gt; can fail in case of bad arguments:</source>
          <target state="translated">Es importante se&amp;ntilde;alar que un nombre sin &lt;code&gt;!&lt;/code&gt; no significa que una funci&amp;oacute;n nunca subir&amp;aacute;. Por ejemplo, incluso &lt;a href=&quot;file#read/1&quot;&gt; &lt;code&gt;File.read/1&lt;/code&gt; &lt;/a&gt; puede fallar en caso de malos argumentos:</target>
        </trans-unit>
        <trans-unit id="aa95687972f4da1c12036d1d732365101465e0f4" translate="yes" xml:space="preserve">
          <source>It is important to note that a name without &lt;code&gt;!&lt;/code&gt; does not mean a function will never raise. For example, even &lt;a href=&quot;https://hexdocs.pm/elixir/File.html#read/1&quot;&gt;&lt;code&gt;File.read/1&lt;/code&gt;&lt;/a&gt; can fail in case of bad arguments:</source>
          <target state="translated">Es importante tener en cuenta que un nombre sin &lt;code&gt;!&lt;/code&gt; no significa que una funci&amp;oacute;n nunca subir&amp;aacute;. Por ejemplo, incluso &lt;a href=&quot;https://hexdocs.pm/elixir/File.html#read/1&quot;&gt; &lt;code&gt;File.read/1&lt;/code&gt; &lt;/a&gt; puede fallar en caso de malos argumentos:</target>
        </trans-unit>
        <trans-unit id="0c642ed82cafd6a24d5b1cc716988f94df5a4508" translate="yes" xml:space="preserve">
          <source>It is important to note that reading an attribute takes a snapshot of its current value. In other words, the value is read at compilation time and not at runtime. Check the &lt;a href=&quot;https://hexdocs.pm/elixir/Module.html&quot;&gt;&lt;code&gt;Module&lt;/code&gt;&lt;/a&gt; module for other functions to manipulate module attributes.</source>
          <target state="translated">Es importante tener en cuenta que la lectura de un atributo toma una instant&amp;aacute;nea de su valor actual. En otras palabras, el valor se lee en tiempo de compilaci&amp;oacute;n y no en tiempo de ejecuci&amp;oacute;n. Compruebe el &lt;a href=&quot;https://hexdocs.pm/elixir/Module.html&quot;&gt; &lt;code&gt;Module&lt;/code&gt; &lt;/a&gt; M&amp;oacute;dulo para otras funciones para manipular los atributos del m&amp;oacute;dulo.</target>
        </trans-unit>
        <trans-unit id="64d0775b812a63ae04cc72818c998dd0360e82ac" translate="yes" xml:space="preserve">
          <source>It is important to note that reading an attribute takes a snapshot of its current value. In other words, the value is read at compilation time and not at runtime. Check the &lt;a href=&quot;module&quot;&gt;&lt;code&gt;Module&lt;/code&gt;&lt;/a&gt; module for other functions to manipulate module attributes.</source>
          <target state="translated">Es importante tener en cuenta que la lectura de un atributo toma una instant&amp;aacute;nea de su valor actual. En otras palabras, el valor se lee en tiempo de compilaci&amp;oacute;n y no en tiempo de ejecuci&amp;oacute;n. Compruebe el &lt;a href=&quot;module&quot;&gt; &lt;code&gt;Module&lt;/code&gt; &lt;/a&gt; M&amp;oacute;dulo para otras funciones para manipular los atributos del m&amp;oacute;dulo.</target>
        </trans-unit>
        <trans-unit id="a19241f2445b2abd37c68c335fe23ae6dbe32fe5" translate="yes" xml:space="preserve">
          <source>It is important to notice that &lt;a href=&quot;#import/2&quot;&gt;&lt;code&gt;import/2&lt;/code&gt;&lt;/a&gt; is lexical. This means you can import specific macros inside specific functions:</source>
          <target state="translated">Es importante notar que &lt;a href=&quot;#import/2&quot;&gt; &lt;code&gt;import/2&lt;/code&gt; &lt;/a&gt; es l&amp;eacute;xico. Esto significa que puede importar macros espec&amp;iacute;ficas dentro de funciones espec&amp;iacute;ficas:</target>
        </trans-unit>
        <trans-unit id="74faff03e6fb39084e8fdee360d2d52a55c9644f" translate="yes" xml:space="preserve">
          <source>It is not recommended to &lt;code&gt;await&lt;/code&gt; a long-running task inside an OTP behaviour such as &lt;a href=&quot;genserver&quot;&gt;&lt;code&gt;GenServer&lt;/code&gt;&lt;/a&gt;. Instead, you should match on the message coming from a task inside your &lt;a href=&quot;genserver#c:handle_info/2&quot;&gt;&lt;code&gt;GenServer.handle_info/2&lt;/code&gt;&lt;/a&gt; callback. For more information on the format of the message, see the documentation for &lt;a href=&quot;#async/1&quot;&gt;&lt;code&gt;async/1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">No se recomienda &lt;code&gt;await&lt;/code&gt; una tarea de larga duraci&amp;oacute;n dentro de un comportamiento de OTP como &lt;a href=&quot;genserver&quot;&gt; &lt;code&gt;GenServer&lt;/code&gt; &lt;/a&gt; . En su lugar, debe coincidir con el mensaje que proviene de una tarea dentro de su devoluci&amp;oacute;n &lt;a href=&quot;genserver#c:handle_info/2&quot;&gt; &lt;code&gt;GenServer.handle_info/2&lt;/code&gt; &lt;/a&gt; llamada GenServer.handle_info / 2 . Para obtener m&amp;aacute;s informaci&amp;oacute;n sobre el formato del mensaje, consulte la documentaci&amp;oacute;n de &lt;a href=&quot;#async/1&quot;&gt; &lt;code&gt;async/1&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a27744ee2d67c05a1fd73d07307738a8c486c4d3" translate="yes" xml:space="preserve">
          <source>It is not recommended to &lt;code&gt;await&lt;/code&gt; a long-running task inside an OTP behaviour such as &lt;a href=&quot;https://hexdocs.pm/elixir/GenServer.html&quot;&gt;&lt;code&gt;GenServer&lt;/code&gt;&lt;/a&gt;. Instead, you should match on the message coming from a task inside your &lt;a href=&quot;https://hexdocs.pm/elixir/GenServer.html#c:handle_info/2&quot;&gt;&lt;code&gt;GenServer.handle_info/2&lt;/code&gt;&lt;/a&gt; callback. For more information on the format of the message, see the documentation for &lt;a href=&quot;#async/1&quot;&gt;&lt;code&gt;async/1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">No se recomienda &lt;code&gt;await&lt;/code&gt; una tarea de larga duraci&amp;oacute;n dentro de un comportamiento de OTP como &lt;a href=&quot;https://hexdocs.pm/elixir/GenServer.html&quot;&gt; &lt;code&gt;GenServer&lt;/code&gt; &lt;/a&gt; . En su lugar, debe coincidir con el mensaje que proviene de una tarea dentro de su devoluci&amp;oacute;n &lt;a href=&quot;https://hexdocs.pm/elixir/GenServer.html#c:handle_info/2&quot;&gt; &lt;code&gt;GenServer.handle_info/2&lt;/code&gt; &lt;/a&gt; llamada GenServer.handle_info / 2 . Para obtener m&amp;aacute;s informaci&amp;oacute;n sobre el formato del mensaje, consulte la documentaci&amp;oacute;n de &lt;a href=&quot;#async/1&quot;&gt; &lt;code&gt;async/1&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f4e76fae45b6859058ea6f91264d2611d753a491" translate="yes" xml:space="preserve">
          <source>It is not recommended to &lt;code&gt;await&lt;/code&gt; long-running tasks inside an OTP behaviour such as &lt;a href=&quot;https://hexdocs.pm/elixir/GenServer.html&quot;&gt;&lt;code&gt;GenServer&lt;/code&gt;&lt;/a&gt;. See &lt;a href=&quot;#await/2&quot;&gt;&lt;code&gt;await/2&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">No se recomienda &lt;code&gt;await&lt;/code&gt; tareas de larga duraci&amp;oacute;n dentro de un comportamiento de OTP como &lt;a href=&quot;https://hexdocs.pm/elixir/GenServer.html&quot;&gt; &lt;code&gt;GenServer&lt;/code&gt; &lt;/a&gt; . Consulte &lt;a href=&quot;#await/2&quot;&gt; &lt;code&gt;await/2&lt;/code&gt; &lt;/a&gt; para obtener m&amp;aacute;s informaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="8f8ca3b4e0816d59dc7e2cc08d33fe47c5a02853" translate="yes" xml:space="preserve">
          <source>It is not required to call this function when terminating the caller, unless exiting with reason &lt;code&gt;:normal&lt;/code&gt; or if the task is trapping exits. If the caller is exiting with a reason other than &lt;code&gt;:normal&lt;/code&gt; and the task is not trapping exits, the caller's exit signal will stop the task. The caller can exit with reason &lt;code&gt;:shutdown&lt;/code&gt; to shut down all of its linked processes, including tasks, that are not trapping exits without generating any log messages.</source>
          <target state="translated">No es necesario llamar a esta funci&amp;oacute;n al finalizar la llamada, a menos que se salga con un motivo &lt;code&gt;:normal&lt;/code&gt; o si la tarea est&amp;aacute; atrapando salidas. Si la persona que llama est&amp;aacute; saliendo por una raz&amp;oacute;n diferente a &lt;code&gt;:normal&lt;/code&gt; y la tarea no est&amp;aacute; atrapando salidas, la se&amp;ntilde;al de salida de la persona que llama detendr&amp;aacute; la tarea. La persona que llama puede salir con motivo &lt;code&gt;:shutdown&lt;/code&gt; para cerrar todos sus procesos vinculados, incluidas las tareas, que no est&amp;aacute;n capturando salidas sin generar ning&amp;uacute;n mensaje de registro.</target>
        </trans-unit>
        <trans-unit id="8334dc9705c04a7a750a85ba594ba8cd9d9eec49" translate="yes" xml:space="preserve">
          <source>It is possible to add one or more steps before and after the release is assembled. This can be done with the &lt;code&gt;:steps&lt;/code&gt; option:</source>
          <target state="translated">Es posible agregar uno o m&amp;aacute;s pasos antes y despu&amp;eacute;s de ensamblar el lanzamiento. Esto se puede hacer con la opci&amp;oacute;n: &lt;code&gt;:steps&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="d286fc13ee24e748fd4ca773cb4fabc977988588" translate="yes" xml:space="preserve">
          <source>It is possible to configure the level to capture with &lt;code&gt;:level&lt;/code&gt;, which will set the capturing level for the duration of the capture, for instance, if the log level is set to :error any message with the lower level will be ignored. The default level is &lt;code&gt;nil&lt;/code&gt;, which will capture all messages. The behaviour is undetermined if async tests change Logger level.</source>
          <target state="translated">Es posible configurar el nivel para capturar con &lt;code&gt;:level&lt;/code&gt; , que establecer&amp;aacute; el nivel de captura durante la duraci&amp;oacute;n de la captura, por ejemplo, si el nivel de registro se establece en: error, cualquier mensaje con el nivel inferior ser&amp;aacute; ignorado. El nivel predeterminado es &lt;code&gt;nil&lt;/code&gt; , que capturar&amp;aacute; todos los mensajes. El comportamiento es indeterminado si las pruebas as&amp;iacute;ncronas cambian el nivel del registrador.</target>
        </trans-unit>
        <trans-unit id="67f36f6c8c75697bc200a5a574eb5412409dbdaf" translate="yes" xml:space="preserve">
          <source>It is possible to get shell history by passing some options that enable it in the VM. This can be done on a per-need basis when starting IEx:</source>
          <target state="translated">Es posible obtener el historial de la concha pasando algunas opciones que lo habilitan en el VM.Esto se puede hacer según las necesidades al iniciar el IEx:</target>
        </trans-unit>
        <trans-unit id="69aceb3d7f53fc191d1a69a74161461cd8fbf145" translate="yes" xml:space="preserve">
          <source>It is possible to implement protocols for all Elixir types:</source>
          <target state="translated">Es posible implementar protocolos para todos los tipos de Elixir:</target>
        </trans-unit>
        <trans-unit id="54b8401178da67a2e8ae820b1821bcca42b37a5a" translate="yes" xml:space="preserve">
          <source>It is possible to load another file by supplying the &lt;code&gt;--dot-iex&lt;/code&gt; option to IEx. See &lt;code&gt;iex --help&lt;/code&gt;.</source>
          <target state="translated">Es posible cargar otro archivo proporcionando la opci&amp;oacute;n &lt;code&gt;--dot-iex&lt;/code&gt; a IEx. Consulte &lt;code&gt;iex --help&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4658430a105177a520b05efa9b8a1f1f62f88a4e" translate="yes" xml:space="preserve">
          <source>It is received by formatters and contains the following fields:</source>
          <target state="translated">Se recibe por medio de formateadores y contiene los siguientes campos:</target>
        </trans-unit>
        <trans-unit id="02b1294519dc996fe92a26357c7d5248dd2135f9" translate="yes" xml:space="preserve">
          <source>It is recommended for this function to be invoked in your application's start callback in case you want to register new URIs.</source>
          <target state="translated">Se recomienda invocar esta función en la llamada de inicio de su aplicación en caso de que desee registrar nuevas URI.</target>
        </trans-unit>
        <trans-unit id="5e8259dbbda9694f8ea6053003d2b8b79b9d00cb" translate="yes" xml:space="preserve">
          <source>It is recommended that backends support at least the following configuration options:</source>
          <target state="translated">Se recomienda que los backends soporten al menos las siguientes opciones de configuración:</target>
        </trans-unit>
        <trans-unit id="01b6fa79cb9bec0bdf62d160c7cca8aebb12f76e" translate="yes" xml:space="preserve">
          <source>It is recommended that handlers ignore messages where the group leader is in a different node than the one where the handler is installed. For example:</source>
          <target state="translated">Se recomienda que los manejadores ignoren los mensajes en los que el líder del grupo se encuentra en un nodo diferente al que está instalado el manejador.Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="f259c2cd34cad051f58a609a1b449871f089e4f6" translate="yes" xml:space="preserve">
          <source>It is recommended to define types for structs. By convention such type is called &lt;code&gt;t&lt;/code&gt;. To define a struct inside a type, the struct literal syntax is used:</source>
          <target state="translated">Se recomienda definir tipos para estructuras. Por convenci&amp;oacute;n, este tipo se llama &lt;code&gt;t&lt;/code&gt; . Para definir una estructura dentro de un tipo, se usa la sintaxis literal de estructura:</target>
        </trans-unit>
        <trans-unit id="2d5fa416a3649615d6c6d6b9cb2027f26118c8ff" translate="yes" xml:space="preserve">
          <source>It is recommended to only use the struct syntax when defining the struct's type. When referring to another struct it's better to use &lt;code&gt;User.t&lt;/code&gt; instead of &lt;code&gt;%User{}&lt;/code&gt;.</source>
          <target state="translated">Se recomienda usar solo la sintaxis de la estructura al definir el tipo de la estructura. Cuando se hace referencia a otra estructura, es mejor usar &lt;code&gt;User.t&lt;/code&gt; en lugar de &lt;code&gt;%User{}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d5056e9d07d3e016975093e74ccd6e13e0e051a1" translate="yes" xml:space="preserve">
          <source>It is seen on &lt;code&gt;case&lt;/code&gt; and &lt;code&gt;cond&lt;/code&gt; constructs between &lt;code&gt;do&lt;/code&gt;/&lt;code&gt;end&lt;/code&gt;:</source>
          <target state="translated">Se ve en las construcciones &lt;code&gt;case&lt;/code&gt; y &lt;code&gt;cond&lt;/code&gt; entre &lt;code&gt;do&lt;/code&gt; / &lt;code&gt;end&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="a5a7029e719605ca3d075a3021c347e0da442f5a" translate="yes" xml:space="preserve">
          <source>It is the VM view of the &lt;a href=&quot;#os_time/0&quot;&gt;&lt;code&gt;os_time/0&lt;/code&gt;&lt;/a&gt;. They may not match in case of time warps although the VM works towards aligning them. This time is not monotonic.</source>
          <target state="translated">Es la vista de VM de &lt;a href=&quot;#os_time/0&quot;&gt; &lt;code&gt;os_time/0&lt;/code&gt; &lt;/a&gt; . Es posible que no coincidan en caso de deformaciones en el tiempo, aunque la m&amp;aacute;quina virtual trabaja para alinearlos. Esta vez no es mon&amp;oacute;tona.</target>
        </trans-unit>
        <trans-unit id="788b993466f063f33f672e4a2e86998a7111a391" translate="yes" xml:space="preserve">
          <source>It is useful for performing work after initialization or for splitting the work in a callback in multiple steps, updating the process state along the way.</source>
          <target state="translated">Es útil para realizar el trabajo después de la inicialización o para dividir el trabajo en una llamada de retorno en múltiples pasos,actualizando el estado del proceso a lo largo del camino.</target>
        </trans-unit>
        <trans-unit id="bb15e04c4610818bfc29250241bbd9f9e91a6db6" translate="yes" xml:space="preserve">
          <source>It is usually compiled to an atom:</source>
          <target state="translated">Normalmente se compila en un átomo:</target>
        </trans-unit>
        <trans-unit id="8399d5e7ea32483e0653c8979fe14b6e85b08287" translate="yes" xml:space="preserve">
          <source>It is worth mentioning that some tasks, such as in the case of the &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Format.html&quot;&gt;&lt;code&gt;mix format&lt;/code&gt;&lt;/a&gt; command in the example above, can accept multiple files so it could be rewritten as:</source>
          <target state="translated">Vale la pena mencionar que algunas tareas, como en el caso del comando &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Format.html&quot;&gt; &lt;code&gt;mix format&lt;/code&gt; &lt;/a&gt; en el ejemplo anterior, pueden aceptar m&amp;uacute;ltiples archivos, por lo que podr&amp;iacute;an reescribirse como:</target>
        </trans-unit>
        <trans-unit id="609d6804675f59ef88a96987b74ba4711ad19be8" translate="yes" xml:space="preserve">
          <source>It is worth mentioning that some tasks, such as in the case of the &lt;code&gt;format&lt;/code&gt; command in the example above, can accept multiple files so it could be rewritten as:</source>
          <target state="translated">Vale la pena mencionar que algunas tareas, como en el caso del comando de &lt;code&gt;format&lt;/code&gt; o en el ejemplo anterior, pueden aceptar varios archivos, por lo que podr&amp;iacute;an reescribirse como:</target>
        </trans-unit>
        <trans-unit id="581eca3344ca4bb0aa530a5501c01bfdeab48bb0" translate="yes" xml:space="preserve">
          <source>It is worth noting that an IO stream has side effects and every time you go over the stream you may get different results.</source>
          <target state="translated">Cabe señalar que un flujo IO tiene efectos secundarios y cada vez que se pasa por encima del flujo se pueden obtener resultados diferentes.</target>
        </trans-unit>
        <trans-unit id="d5d4db08190e3953685aadfa886d49cc802cec92" translate="yes" xml:space="preserve">
          <source>It is, however, possible to customize the operating system exit signal by invoking:</source>
          <target state="translated">Sin embargo,es posible personalizar la señal de salida del sistema operativo invocando:</target>
        </trans-unit>
        <trans-unit id="b7d48f671c8d7393dad3a546a97b3ca8d3a912b7" translate="yes" xml:space="preserve">
          <source>It mainly consists of:</source>
          <target state="translated">Consiste principalmente en:</target>
        </trans-unit>
        <trans-unit id="1e0c789d57c1d4d0b775a90fcdfa554caa5f5673" translate="yes" xml:space="preserve">
          <source>It may also be used in bit strings to specify the type of a given bit segment:</source>
          <target state="translated">También puede utilizarse en cadenas de bits para especificar el tipo de un segmento de bits determinado:</target>
        </trans-unit>
        <trans-unit id="a3af067d0b325c04e2171267019d9beee23844b2" translate="yes" xml:space="preserve">
          <source>It may be &lt;em&gt;done&lt;/em&gt; when the enumeration is finished by reaching its end, or &lt;em&gt;halted&lt;/em&gt;/&lt;em&gt;suspended&lt;/em&gt; when the enumeration was halted or suspended by the &lt;a href=&quot;#t:reducer/0&quot;&gt;&lt;code&gt;reducer/0&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">Se puede &lt;em&gt;hacer&lt;/em&gt; cuando la enumeraci&amp;oacute;n termina al llegar a su fin, o se puede &lt;em&gt;detener&lt;/em&gt; / &lt;em&gt;suspender&lt;/em&gt; cuando la enumeraci&amp;oacute;n fue detenida o suspendida por la funci&amp;oacute;n &lt;a href=&quot;#t:reducer/0&quot;&gt; &lt;code&gt;reducer/0&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0d98718d8646c579d0371793bd45e746bde50bf4" translate="yes" xml:space="preserve">
          <source>It may raise an exception if an alias or a task can't be found or the task is invalid. Check &lt;a href=&quot;#get!/1&quot;&gt;&lt;code&gt;get!/1&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">Puede generar una excepci&amp;oacute;n si no se puede encontrar un alias o una tarea o si la tarea no es v&amp;aacute;lida. Consulte &lt;a href=&quot;#get!/1&quot;&gt; &lt;code&gt;get!/1&lt;/code&gt; &lt;/a&gt; para obtener m&amp;aacute;s informaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="29d3bbbc7e626b9af27ea95ab16c0ff3bafa7043" translate="yes" xml:space="preserve">
          <source>It may return:</source>
          <target state="translated">Puede que vuelva:</target>
        </trans-unit>
        <trans-unit id="96e34b31aa2d5f1e971f892ae829e91c39507ae8" translate="yes" xml:space="preserve">
          <source>It merely logged an error but the parent process is still running. That&amp;rsquo;s because processes are isolated. If we want the failure in one process to propagate to another one, we should link them. This can be done with &lt;code&gt;spawn_link/1&lt;/code&gt;:</source>
          <target state="translated">Simplemente registr&amp;oacute; un error, pero el proceso principal a&amp;uacute;n se est&amp;aacute; ejecutando. Eso es porque los procesos est&amp;aacute;n aislados. Si queremos que la falla en un proceso se propague a otro, debemos vincularlos. Esto se puede hacer con &lt;code&gt;spawn_link/1&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="a7645b02092dd9c481669b06461dd8a3b1f2ddfe" translate="yes" xml:space="preserve">
          <source>It must be a tagged tuple with one of the following &quot;tags&quot;:</source>
          <target state="translated">Debe ser una tupla etiquetada con una de las siguientes &quot;etiquetas&quot;:</target>
        </trans-unit>
        <trans-unit id="30bfead53f6532d0dcb4d8f1a07f530eb7b28e4c" translate="yes" xml:space="preserve">
          <source>It must be added to &lt;a href=&quot;#t:utc_offset/0&quot;&gt;&lt;code&gt;utc_offset/0&lt;/code&gt;&lt;/a&gt; to get the total offset from UTC used for &quot;wall time&quot;.</source>
          <target state="translated">Debe agregarse a &lt;a href=&quot;#t:utc_offset/0&quot;&gt; &lt;code&gt;utc_offset/0&lt;/code&gt; &lt;/a&gt; para obtener el desplazamiento total de UTC utilizado para el &quot;tiempo de pared&quot;.</target>
        </trans-unit>
        <trans-unit id="9191e1a92c69837df58d349dc309a932384aa7e6" translate="yes" xml:space="preserve">
          <source>It must return Elixir's quoted expressions for the nesting.</source>
          <target state="translated">Debe devolver las expresiones citadas de Elixir para el nido.</target>
        </trans-unit>
        <trans-unit id="712b77376d5995f0d379321d9075dffa76132d6d" translate="yes" xml:space="preserve">
          <source>It must return Elixir's quoted expressions for the template.</source>
          <target state="translated">Debe devolver las expresiones citadas de Elixir para la plantilla.</target>
        </trans-unit>
        <trans-unit id="38cc5837d518a2974bbdd3756a4a52b60b4904d1" translate="yes" xml:space="preserve">
          <source>It must return a new state that is used only inside the nesting. Once the nesting terminates, the current &lt;code&gt;state&lt;/code&gt; is resumed.</source>
          <target state="translated">Debe devolver un nuevo estado que se use solo dentro del anidamiento. Una vez que termina el anidamiento, se reanuda el &lt;code&gt;state&lt;/code&gt; actual .</target>
        </trans-unit>
        <trans-unit id="c9f2946629b87a86268abeeb2d37b8eeaaa2dbc9" translate="yes" xml:space="preserve">
          <source>It must return the current lock.</source>
          <target state="translated">Debe devolver el bloqueo actual.</target>
        </trans-unit>
        <trans-unit id="0854aef4598e67609aceb61dad3e1730bf8b1dd1" translate="yes" xml:space="preserve">
          <source>It must return the initial state.</source>
          <target state="translated">Debe devolver el estado inicial.</target>
        </trans-unit>
        <trans-unit id="e3fb70c8558503fe57ada3a7512d669bb23cc15f" translate="yes" xml:space="preserve">
          <source>It must return the updated state.</source>
          <target state="translated">Debe devolver el estado actualizado.</target>
        </trans-unit>
        <trans-unit id="168abfa6eb1b0dfa8208332679693b0f2aede472" translate="yes" xml:space="preserve">
          <source>It performs Normalization Form Canonical Decomposition (NFD) on the strings before comparing them. This function is equivalent to:</source>
          <target state="translated">Realiza la Normalización de la Forma de Descomposición Canónica (NFD)en las cuerdas antes de compararlas.Esta función es equivalente a:</target>
        </trans-unit>
        <trans-unit id="00eb69ecf576738c75d84548dd92cdb318ece3aa" translate="yes" xml:space="preserve">
          <source>It raises &lt;a href=&quot;argumenterror&quot;&gt;&lt;code&gt;ArgumentError&lt;/code&gt;&lt;/a&gt; if &lt;code&gt;pid&lt;/code&gt; is not a local process.</source>
          <target state="translated">Genera &lt;a href=&quot;argumenterror&quot;&gt; &lt;code&gt;ArgumentError&lt;/code&gt; &lt;/a&gt; si &lt;code&gt;pid&lt;/code&gt; no es un proceso local.</target>
        </trans-unit>
        <trans-unit id="7e7523b5dc45d67bb8b9c0de3919b26ce0d37a20" translate="yes" xml:space="preserve">
          <source>It raises &lt;a href=&quot;argumenterror&quot;&gt;&lt;code&gt;ArgumentError&lt;/code&gt;&lt;/a&gt; when index is negative or it is out of range of the tuple elements.</source>
          <target state="translated">Genera &lt;a href=&quot;argumenterror&quot;&gt; &lt;code&gt;ArgumentError&lt;/code&gt; &lt;/a&gt; cuando el &amp;iacute;ndice es negativo o est&amp;aacute; fuera del rango de los elementos de la tupla.</target>
        </trans-unit>
        <trans-unit id="76fb97ed0a7148c60ad0f98f15c424a1449add5a" translate="yes" xml:space="preserve">
          <source>It raises &lt;a href=&quot;https://hexdocs.pm/elixir/ArgumentError.html&quot;&gt;&lt;code&gt;ArgumentError&lt;/code&gt;&lt;/a&gt; if &lt;code&gt;pid&lt;/code&gt; is not a local process.</source>
          <target state="translated">Genera &lt;a href=&quot;https://hexdocs.pm/elixir/ArgumentError.html&quot;&gt; &lt;code&gt;ArgumentError&lt;/code&gt; &lt;/a&gt; si &lt;code&gt;pid&lt;/code&gt; no es un proceso local.</target>
        </trans-unit>
        <trans-unit id="51c53ba47f1eded5769c444b1e03509454cd6f04" translate="yes" xml:space="preserve">
          <source>It raises &lt;a href=&quot;https://hexdocs.pm/elixir/ArgumentError.html&quot;&gt;&lt;code&gt;ArgumentError&lt;/code&gt;&lt;/a&gt; when index is negative or it is out of range of the tuple elements.</source>
          <target state="translated">Genera &lt;a href=&quot;https://hexdocs.pm/elixir/ArgumentError.html&quot;&gt; &lt;code&gt;ArgumentError&lt;/code&gt; &lt;/a&gt; cuando el &amp;iacute;ndice es negativo o est&amp;aacute; fuera del rango de los elementos de la tupla.</target>
        </trans-unit>
        <trans-unit id="edab83575d7f73053cab67ad9c4668e68f7c32f0" translate="yes" xml:space="preserve">
          <source>It raises &lt;a href=&quot;https://hexdocs.pm/elixir/BadMapError.html&quot;&gt;&lt;code&gt;BadMapError&lt;/code&gt;&lt;/a&gt; if the first element is not a map.</source>
          <target state="translated">Plantea &lt;a href=&quot;https://hexdocs.pm/elixir/BadMapError.html&quot;&gt; &lt;code&gt;BadMapError&lt;/code&gt; &lt;/a&gt; si el primer elemento no es un mapa.</target>
        </trans-unit>
        <trans-unit id="a7db82325b8b2d3d85d652577eadfac10c4e6cc9" translate="yes" xml:space="preserve">
          <source>It raises at compile time if the definition uses expressions that aren't allowed in guards, and otherwise creates a macro that can be used both inside or outside guards.</source>
          <target state="translated">Aumenta en el momento de la compilación si la definición utiliza expresiones que no están permitidas en los guardias,y de otra manera crea una macro que puede ser utilizada tanto en el interior como en el exterior de los guardias.</target>
        </trans-unit>
        <trans-unit id="1064c23cd1e6b9f641867dd10b3bf5061844678b" translate="yes" xml:space="preserve">
          <source>It raises at compile time if the definition uses expressions that aren't allowed in guards, and otherwise creates a private macro that can be used both inside or outside guards in the current module.</source>
          <target state="translated">Aumenta en el momento de la compilación si la definición utiliza expresiones que no están permitidas en los guardias,y de lo contrario crea una macro privada que puede ser utilizada tanto dentro como fuera de los guardias en el módulo actual.</target>
        </trans-unit>
        <trans-unit id="dd862729751c13eb6c25128449accf571b5c5e26" translate="yes" xml:space="preserve">
          <source>It receives a path to the boot file, without extension, such as &lt;code&gt;releases/0.1.0/start&lt;/code&gt; and this command will write &lt;code&gt;start.rel&lt;/code&gt;, &lt;code&gt;start.boot&lt;/code&gt;, and &lt;code&gt;start.script&lt;/code&gt; to the given path, returning &lt;code&gt;{:ok, rel_path}&lt;/code&gt; or &lt;code&gt;{:error, message}&lt;/code&gt;.</source>
          <target state="translated">Recibe una ruta al archivo de arranque, sin extensi&amp;oacute;n, como &lt;code&gt;releases/0.1.0/start&lt;/code&gt; y este comando escribir&amp;aacute; &lt;code&gt;start.rel&lt;/code&gt; , &lt;code&gt;start.boot&lt;/code&gt; y &lt;code&gt;start.script&lt;/code&gt; en la ruta dada, devolviendo &lt;code&gt;{:ok, rel_path}&lt;/code&gt; o &lt;code&gt;{:error, message}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="68ba5419581bb056603e98e4fbe37e8377520d3d" translate="yes" xml:space="preserve">
          <source>It receives the &lt;code&gt;file&lt;/code&gt;, &lt;code&gt;line&lt;/code&gt; and the snippet &lt;code&gt;radius&lt;/code&gt; and returns &lt;code&gt;{:ok, lines}&lt;/code&gt;, where lines is a list of chardata containing each formatted line, or &lt;code&gt;:error&lt;/code&gt;.</source>
          <target state="translated">Recibe el &lt;code&gt;file&lt;/code&gt; , la &lt;code&gt;line&lt;/code&gt; y el &lt;code&gt;radius&lt;/code&gt; del fragmento y devuelve &lt;code&gt;{:ok, lines}&lt;/code&gt; , donde l&amp;iacute;neas es una lista de chardata que contiene cada l&amp;iacute;nea formateada, o &lt;code&gt;:error&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b4865031f19e0226674ccac4c00c4c4f11e96290" translate="yes" xml:space="preserve">
          <source>It receives the current &lt;code&gt;config&lt;/code&gt; and the &lt;code&gt;state&lt;/code&gt; returned by &lt;a href=&quot;#c:init/1&quot;&gt;&lt;code&gt;init/1&lt;/code&gt;&lt;/a&gt;. Then you typically read the extra configuration from an external source and merge it into the received &lt;code&gt;config&lt;/code&gt;. Merging should be done with &lt;a href=&quot;config.reader#merge/2&quot;&gt;&lt;code&gt;Config.Reader.merge/2&lt;/code&gt;&lt;/a&gt;, as it performs deep merge. It should return the updated config.</source>
          <target state="translated">Recibe la &lt;code&gt;config&lt;/code&gt; uraci&amp;oacute;n actual y el &lt;code&gt;state&lt;/code&gt; devuelto por &lt;a href=&quot;#c:init/1&quot;&gt; &lt;code&gt;init/1&lt;/code&gt; &lt;/a&gt; . Luego, normalmente lee la configuraci&amp;oacute;n adicional de una fuente externa y la combina con la &lt;code&gt;config&lt;/code&gt; uraci&amp;oacute;n recibida . La fusi&amp;oacute;n debe realizarse con &lt;a href=&quot;config.reader#merge/2&quot;&gt; &lt;code&gt;Config.Reader.merge/2&lt;/code&gt; &lt;/a&gt; , ya que realiza una fusi&amp;oacute;n profunda. Deber&amp;iacute;a devolver la configuraci&amp;oacute;n actualizada.</target>
        </trans-unit>
        <trans-unit id="45b33d74133687a9a3b23bdb8a29834a7bdc904c" translate="yes" xml:space="preserve">
          <source>It receives the current &lt;code&gt;config&lt;/code&gt; and the &lt;code&gt;state&lt;/code&gt; returned by &lt;a href=&quot;#c:init/1&quot;&gt;&lt;code&gt;init/1&lt;/code&gt;&lt;/a&gt;. Then you typically read the extra configuration from an external source and merge it into the received &lt;code&gt;config&lt;/code&gt;. Merging should be done with &lt;a href=&quot;https://hexdocs.pm/elixir/Config.Reader.html#merge/2&quot;&gt;&lt;code&gt;Config.Reader.merge/2&lt;/code&gt;&lt;/a&gt;, as it performs deep merge. It should return the updated config.</source>
          <target state="translated">Recibe la &lt;code&gt;config&lt;/code&gt; uraci&amp;oacute;n actual y el &lt;code&gt;state&lt;/code&gt; devuelto por &lt;a href=&quot;#c:init/1&quot;&gt; &lt;code&gt;init/1&lt;/code&gt; &lt;/a&gt; . Luego, normalmente lee la configuraci&amp;oacute;n adicional de una fuente externa y la combina con la &lt;code&gt;config&lt;/code&gt; uraci&amp;oacute;n recibida . La fusi&amp;oacute;n debe realizarse con &lt;a href=&quot;https://hexdocs.pm/elixir/Config.Reader.html#merge/2&quot;&gt; &lt;code&gt;Config.Reader.merge/2&lt;/code&gt; &lt;/a&gt; , ya que realiza una fusi&amp;oacute;n profunda. Deber&amp;iacute;a devolver la configuraci&amp;oacute;n actualizada.</target>
        </trans-unit>
        <trans-unit id="7ff8300751e75adc2c83e12f280310fb0e3959a9" translate="yes" xml:space="preserve">
          <source>It receives the same options as &lt;a href=&quot;#put_env/4&quot;&gt;&lt;code&gt;put_env/4&lt;/code&gt;&lt;/a&gt;. Returns &lt;code&gt;:ok&lt;/code&gt;.</source>
          <target state="translated">Recibe las mismas opciones que &lt;a href=&quot;#put_env/4&quot;&gt; &lt;code&gt;put_env/4&lt;/code&gt; &lt;/a&gt; . Devoluciones &lt;code&gt;:ok&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="59be0f6a9003a8021cb33c59b00cb9642811fc44" translate="yes" xml:space="preserve">
          <source>It receives the time spent running the tests and optionally the time spent loading the test suite.</source>
          <target state="translated">Recibe el tiempo empleado en la realización de las pruebas y opcionalmente el tiempo empleado en la carga del conjunto de pruebas.</target>
        </trans-unit>
        <trans-unit id="63a1b1ead1b4654ed54aa371a1a054c21e1c05bd" translate="yes" xml:space="preserve">
          <source>It relies on &lt;a href=&quot;#format_banner/3&quot;&gt;&lt;code&gt;format_banner/3&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#format_stacktrace/1&quot;&gt;&lt;code&gt;format_stacktrace/1&lt;/code&gt;&lt;/a&gt; to generate the final format.</source>
          <target state="translated">Se basa en &lt;a href=&quot;#format_banner/3&quot;&gt; &lt;code&gt;format_banner/3&lt;/code&gt; &lt;/a&gt; y &lt;a href=&quot;#format_stacktrace/1&quot;&gt; &lt;code&gt;format_stacktrace/1&lt;/code&gt; &lt;/a&gt; para generar el formato final.</target>
        </trans-unit>
        <trans-unit id="ff0e052a45a87445bf1db1b18304c3b0b5b06885" translate="yes" xml:space="preserve">
          <source>It represents time as a fraction of a day (starting from midnight). &lt;code&gt;parts_in_day&lt;/code&gt; specifies how much of the day is already passed, while &lt;code&gt;parts_per_day&lt;/code&gt; signifies how many parts there fit in a day.</source>
          <target state="translated">Representa el tiempo como una fracci&amp;oacute;n de un d&amp;iacute;a (a partir de la medianoche). &lt;code&gt;parts_in_day&lt;/code&gt; especifica cu&amp;aacute;nto del d&amp;iacute;a ya ha pasado, mientras que &lt;code&gt;parts_per_day&lt;/code&gt; significa cu&amp;aacute;ntas partes caben en un d&amp;iacute;a.</target>
        </trans-unit>
        <trans-unit id="1b4a09c3103a4b1384852ae0065066d0ba0ed3ed" translate="yes" xml:space="preserve">
          <source>It requires an &lt;code&gt;env&lt;/code&gt; to be given to make the expansion of the guards.</source>
          <target state="translated">Requiere que se d&amp;eacute; un &lt;code&gt;env&lt;/code&gt; para hacer la expansi&amp;oacute;n de los guardias.</target>
        </trans-unit>
        <trans-unit id="ef0b176f883854b3bc16cf9fece54e5b9b4e4c75" translate="yes" xml:space="preserve">
          <source>It returns &lt;code&gt;:ok&lt;/code&gt; if it succeeds.</source>
          <target state="translated">Devuelve &lt;code&gt;:ok&lt;/code&gt; si tiene &amp;eacute;xito.</target>
        </trans-unit>
        <trans-unit id="b4dd7376af1ba434a4580bda89ca9e2039d7b5af" translate="yes" xml:space="preserve">
          <source>It returns &lt;code&gt;:ok&lt;/code&gt; if the agent terminates with the given reason. If the agent terminates with another reason, the call will exit.</source>
          <target state="translated">Devuelve &lt;code&gt;:ok&lt;/code&gt; si el agente termina con el motivo dado. Si el agente termina por otro motivo, la llamada saldr&amp;aacute;.</target>
        </trans-unit>
        <trans-unit id="fa25fad557d19ecb8fc577a65e74f7d1d95fee17" translate="yes" xml:space="preserve">
          <source>It returns &lt;code&gt;:ok&lt;/code&gt; if the expression is valid. Otherwise it returns a tuple in the form of &lt;code&gt;{:error, remainder}&lt;/code&gt; where &lt;code&gt;remainder&lt;/code&gt; is the invalid part of the quoted expression.</source>
          <target state="translated">Devuelve &lt;code&gt;:ok&lt;/code&gt; si la expresi&amp;oacute;n es v&amp;aacute;lida. De lo contrario, devuelve una tupla en forma de &lt;code&gt;{:error, remainder}&lt;/code&gt; donde &lt;code&gt;remainder&lt;/code&gt; es la parte no v&amp;aacute;lida de la expresi&amp;oacute;n entre comillas.</target>
        </trans-unit>
        <trans-unit id="1aa27a7fb3f7df06a7eb5b40933d88237c6da58a" translate="yes" xml:space="preserve">
          <source>It returns &lt;code&gt;:ok&lt;/code&gt; if the supervisor terminates with the given reason. If it terminates with another reason, the call exits.</source>
          <target state="translated">Devuelve &lt;code&gt;:ok&lt;/code&gt; si el supervisor termina con el motivo dado. Si termina por otro motivo, la llamada finaliza.</target>
        </trans-unit>
        <trans-unit id="20439119e73e5c84c38c2e670d5943fecce5bbc5" translate="yes" xml:space="preserve">
          <source>It returns &lt;code&gt;:ok&lt;/code&gt; if there is a supervised process with such &lt;code&gt;id&lt;/code&gt;, &lt;code&gt;{:error, :not_found}&lt;/code&gt; otherwise.</source>
          <target state="translated">Devuelve &lt;code&gt;:ok&lt;/code&gt; si hay un proceso supervisado con dicha &lt;code&gt;id&lt;/code&gt; entificaci&amp;oacute;n , &lt;code&gt;{:error, :not_found}&lt;/code&gt; caso contrario.</target>
        </trans-unit>
        <trans-unit id="c6ba3f217ed1eba268a6fdafd4321bb54d3750b6" translate="yes" xml:space="preserve">
          <source>It returns &lt;code&gt;[]&lt;/code&gt; if &lt;code&gt;amount&lt;/code&gt; is &lt;code&gt;0&lt;/code&gt; or if &lt;code&gt;start_index&lt;/code&gt; is out of bounds.</source>
          <target state="translated">Devuelve &lt;code&gt;[]&lt;/code&gt; si la &lt;code&gt;amount&lt;/code&gt; es &lt;code&gt;0&lt;/code&gt; o si &lt;code&gt;start_index&lt;/code&gt; est&amp;aacute; fuera de los l&amp;iacute;mites.</target>
        </trans-unit>
        <trans-unit id="a24863390fa39668ae8776992d58e83d80073d64" translate="yes" xml:space="preserve">
          <source>It returns &lt;code&gt;{:ok, modules, warnings}&lt;/code&gt; or &lt;code&gt;{:error, errors, warnings}&lt;/code&gt;.</source>
          <target state="translated">Devuelve &lt;code&gt;{:ok, modules, warnings}&lt;/code&gt; o &lt;code&gt;{:error, errors, warnings}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="15cf8a959344bff62a34e05c441e26b91698feeb" translate="yes" xml:space="preserve">
          <source>It returns &lt;code&gt;{:ok, number_of_modules_purged}&lt;/code&gt;.</source>
          <target state="translated">Devuelve &lt;code&gt;{:ok, number_of_modules_purged}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="115a450f9d17534c1b57fc590c68a557bb8594c5" translate="yes" xml:space="preserve">
          <source>It returns &lt;code&gt;{:ok, regex}&lt;/code&gt; in case of success, &lt;code&gt;{:error, reason}&lt;/code&gt; otherwise.</source>
          <target state="translated">Devuelve &lt;code&gt;{:ok, regex}&lt;/code&gt; en caso de &amp;eacute;xito, &lt;code&gt;{:error, reason}&lt;/code&gt; caso contrario.</target>
        </trans-unit>
        <trans-unit id="de65d4d5bdecdb8de8753805e8f5f01ea831d124" translate="yes" xml:space="preserve">
          <source>It returns a charlist as if it was a single quoted string, unescaping characters and replacing interpolations.</source>
          <target state="translated">Devuelve una lista de caracteres como si se tratara de una sola cadena citada,sin escapar de los caracteres y reemplazando las interpolaciones.</target>
        </trans-unit>
        <trans-unit id="a009c09b517ab0e5d3d4c4e196c2ea69f3fa9d2a" translate="yes" xml:space="preserve">
          <source>It returns a charlist without interpolations and without escape characters, except for the escaping of the closing sigil character itself.</source>
          <target state="translated">Devuelve un charlist sin interpolaciones y sin caracteres de fuga,excepto por la fuga del propio carácter del sigilo de cierre.</target>
        </trans-unit>
        <trans-unit id="a66f3b8a76faa873e28dfa79a7a12532886cbb5f" translate="yes" xml:space="preserve">
          <source>It returns a list of &quot;words&quot; split by whitespace without escaping nor interpreting interpolations.</source>
          <target state="translated">Devuelve una lista de &quot;palabras&quot; divididas por espacios en blanco sin escapar ni interpretar las interpolaciones.</target>
        </trans-unit>
        <trans-unit id="282736101413fcdaca5aa663365cdb6c77665dfd" translate="yes" xml:space="preserve">
          <source>It returns a list of &quot;words&quot; split by whitespace without interpolations and without escape characters, except for the escaping of the closing sigil character itself.</source>
          <target state="translated">Devuelve una lista de &quot;palabras&quot; divididas por espacios en blanco sin interpolaciones y sin caracteres de escape,excepto el escape del propio carácter del sigilo de cierre.</target>
        </trans-unit>
        <trans-unit id="11c767a0c0e8da6110101dac7c301abe9c23f7ad" translate="yes" xml:space="preserve">
          <source>It returns a list of &quot;words&quot; split by whitespace. Character unescaping and interpolation happens for each word.</source>
          <target state="translated">Devuelve una lista de &quot;palabras&quot; divididas por espacios en blanco.El carácter no se escapa y la interpolación ocurre para cada palabra.</target>
        </trans-unit>
        <trans-unit id="e5072f624143fef2c9ac9a882f637a2b3946d312" translate="yes" xml:space="preserve">
          <source>It returns a list with all defined functions and macros, public and private, in the shape of &lt;code&gt;[{name, arity}, ...]&lt;/code&gt;.</source>
          <target state="translated">Devuelve una lista con todas las funciones y macros definidas, p&amp;uacute;blicas y privadas, en forma de &lt;code&gt;[{name, arity}, ...]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="12058e15be1548c9678ae57e51b9c05668dbfa6c" translate="yes" xml:space="preserve">
          <source>It returns a regular expression pattern without escaping nor interpreting interpolations.</source>
          <target state="translated">Devuelve un patrón de expresión regular sin escapar ni interpretar las interpolaciones.</target>
        </trans-unit>
        <trans-unit id="15ffdd78fcfc5d45572c98d243590020d3b93dea" translate="yes" xml:space="preserve">
          <source>It returns a regular expression pattern without interpolations and without escape characters. Note it still supports escape of Regex tokens (such as escaping &lt;code&gt;+&lt;/code&gt; or &lt;code&gt;?&lt;/code&gt;) and it also requires you to escape the closing sigil character itself if it appears on the Regex.</source>
          <target state="translated">Devuelve un patr&amp;oacute;n de expresi&amp;oacute;n regular sin interpolaciones y sin caracteres de escape. Tenga en cuenta que todav&amp;iacute;a admite el escape de los tokens Regex (como escapar &lt;code&gt;+&lt;/code&gt; o &lt;code&gt;?&lt;/code&gt; ) Y tambi&amp;eacute;n requiere que escape del car&amp;aacute;cter del sello de cierre si aparece en el Regex.</target>
        </trans-unit>
        <trans-unit id="c2339efe4030b11d97d29c7a067b3b9900e5b1d8" translate="yes" xml:space="preserve">
          <source>It returns a regular expression pattern, unescaping characters and replacing interpolations.</source>
          <target state="translated">Devuelve un patrón de expresión regular,sin escapar de los caracteres y reemplazando las interpolaciones.</target>
        </trans-unit>
        <trans-unit id="2eefd18752fd7d7d11850a6f38a6e135cd46467d" translate="yes" xml:space="preserve">
          <source>It returns a string as if it was a double quoted string, unescaping characters and replacing interpolations.</source>
          <target state="translated">Devuelve una cadena como si fuera una cadena doblemente citada,sin escapar de los caracteres y reemplazando las interpolaciones.</target>
        </trans-unit>
        <trans-unit id="a90d4a90b12398793185e7dc61f47bfd041a9450" translate="yes" xml:space="preserve">
          <source>It returns a string without interpolations and without escape characters, except for the escaping of the closing sigil character itself.</source>
          <target state="translated">Devuelve una cadena sin interpolaciones y sin caracteres de fuga,excepto por la fuga del propio carácter del sigilo de cierre.</target>
        </trans-unit>
        <trans-unit id="1309542e01ede5ca574094267b91e1297dcf83b5" translate="yes" xml:space="preserve">
          <source>It returns a three-element tuple with the form &lt;code&gt;{parsed, args, invalid}&lt;/code&gt;, where:</source>
          <target state="translated">Devuelve una tupla de tres elementos con la forma &lt;code&gt;{parsed, args, invalid}&lt;/code&gt; , donde:</target>
        </trans-unit>
        <trans-unit id="5d3aa2fe3892cfc7dc8712478400dbcd79a2ad47" translate="yes" xml:space="preserve">
          <source>It returns a tuple of shape &lt;code&gt;{:module, module, binary, term}&lt;/code&gt; where &lt;code&gt;module&lt;/code&gt; is the module name, &lt;code&gt;binary&lt;/code&gt; is the module byte code and &lt;code&gt;term&lt;/code&gt; is the result of the last expression in &lt;code&gt;quoted&lt;/code&gt;.</source>
          <target state="translated">Devuelve una tupla de forma &lt;code&gt;{:module, module, binary, term}&lt;/code&gt; donde &lt;code&gt;module&lt;/code&gt; es el nombre del m&amp;oacute;dulo, &lt;code&gt;binary&lt;/code&gt; es el c&amp;oacute;digo de byte del m&amp;oacute;dulo y &lt;code&gt;term&lt;/code&gt; es el resultado de la &amp;uacute;ltima expresi&amp;oacute;n entre &lt;code&gt;quoted&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ad0c31c6f4bb3fda034b624191c0766e4bec1f10" translate="yes" xml:space="preserve">
          <source>It returns a tuple of shape &lt;code&gt;{:module, module, binary, term}&lt;/code&gt; where &lt;code&gt;module&lt;/code&gt; is the module name, &lt;code&gt;binary&lt;/code&gt; is the module bytecode and &lt;code&gt;term&lt;/code&gt; is the result of the last expression in &lt;code&gt;quoted&lt;/code&gt;.</source>
          <target state="translated">Devuelve una tupla de forma &lt;code&gt;{:module, module, binary, term}&lt;/code&gt; donde &lt;code&gt;module&lt;/code&gt; es el nombre del m&amp;oacute;dulo, &lt;code&gt;binary&lt;/code&gt; es el bytecode del m&amp;oacute;dulo y &lt;code&gt;term&lt;/code&gt; es el resultado de la &amp;uacute;ltima expresi&amp;oacute;n entre &lt;code&gt;quoted&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3f7bd0c8a3a6137c5122d78d75fdfc59b0d95055" translate="yes" xml:space="preserve">
          <source>It returns a tuple where the first element is a list of values for &lt;code&gt;key&lt;/code&gt; and the second element is a keyword list with all entries associated with &lt;code&gt;key&lt;/code&gt; removed. If the &lt;code&gt;key&lt;/code&gt; is not present in the keyword list, &lt;code&gt;{[], keyword_list}&lt;/code&gt; is returned.</source>
          <target state="translated">Devuelve una tupla donde el primer elemento es una lista de valores para la &lt;code&gt;key&lt;/code&gt; y el segundo elemento es una lista de palabras clave con todas las entradas asociadas con la &lt;code&gt;key&lt;/code&gt; eliminada. Si la &lt;code&gt;key&lt;/code&gt; no est&amp;aacute; presente en la lista de palabras clave, se devuelve &lt;code&gt;{[], keyword_list}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="105ded5280b2ff4b7ca0620f752d88bc06179945" translate="yes" xml:space="preserve">
          <source>It returns a tuple where the first element is the first value for &lt;code&gt;key&lt;/code&gt; and the second element is a keyword list with all entries associated with &lt;code&gt;key&lt;/code&gt; removed. If the &lt;code&gt;key&lt;/code&gt; is not present in the keyword list, &lt;code&gt;{default, keyword_list}&lt;/code&gt; is returned.</source>
          <target state="translated">Devuelve una tupla donde el primer elemento es el primer valor de la &lt;code&gt;key&lt;/code&gt; y el segundo elemento es una lista de palabras clave con todas las entradas asociadas con la &lt;code&gt;key&lt;/code&gt; eliminada. Si la &lt;code&gt;key&lt;/code&gt; no est&amp;aacute; presente en la lista de palabras clave &lt;code&gt;{default, keyword_list}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="60c44e4aa381e2f2476e80a74b5488ef1fbe7e6d" translate="yes" xml:space="preserve">
          <source>It returns a tuple with the configuration and the imported paths.</source>
          <target state="translated">Devuelve una tupla con la configuración y las rutas importadas.</target>
        </trans-unit>
        <trans-unit id="1c6d5c298bfea7e740d50d208c24e0a7cb35ea15" translate="yes" xml:space="preserve">
          <source>It returns a two-element tuple with two lists of elements. The element that triggered the split is part of the second list.</source>
          <target state="translated">Devuelve una tupla de dos elementos con dos listas de elementos.El elemento que desencadenó la división es parte de la segunda lista.</target>
        </trans-unit>
        <trans-unit id="3fdf4c8d7953d6b126d5564a13f2c8bce040ab31" translate="yes" xml:space="preserve">
          <source>It returns the &lt;code&gt;mix.exs&lt;/code&gt; file, the lock manifest, and all config files in the &lt;code&gt;config&lt;/code&gt; directory that do not start with a leading period (for example, &lt;code&gt;.my_config.exs&lt;/code&gt;).</source>
          <target state="translated">Devuelve el archivo &lt;code&gt;mix.exs&lt;/code&gt; , el manifiesto de bloqueo y todos los archivos de configuraci&amp;oacute;n en el directorio de &lt;code&gt;config&lt;/code&gt; uraci&amp;oacute;n que no comienzan con un punto inicial (por ejemplo, &lt;code&gt;.my_config.exs&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="ae16c311c39efb30b710f0d18b8495dac13e0f28" translate="yes" xml:space="preserve">
          <source>It returns the ast if it succeeds, raises an exception otherwise. The exception is a &lt;a href=&quot;https://hexdocs.pm/elixir/TokenMissingError.html&quot;&gt;&lt;code&gt;TokenMissingError&lt;/code&gt;&lt;/a&gt; in case a token is missing (usually because the expression is incomplete), &lt;a href=&quot;https://hexdocs.pm/elixir/SyntaxError.html&quot;&gt;&lt;code&gt;SyntaxError&lt;/code&gt;&lt;/a&gt; otherwise.</source>
          <target state="translated">Devuelve el ast si tiene &amp;eacute;xito, genera una excepci&amp;oacute;n en caso contrario. La excepci&amp;oacute;n es un &lt;a href=&quot;https://hexdocs.pm/elixir/TokenMissingError.html&quot;&gt; &lt;code&gt;TokenMissingError&lt;/code&gt; &lt;/a&gt; en caso de que falte un token (generalmente porque la expresi&amp;oacute;n est&amp;aacute; incompleta), &lt;a href=&quot;https://hexdocs.pm/elixir/SyntaxError.html&quot;&gt; &lt;code&gt;SyntaxError&lt;/code&gt; en&lt;/a&gt; caso contrario.</target>
        </trans-unit>
        <trans-unit id="fe0d0c5e22a39b889893a15373fe9daae0aa2349" translate="yes" xml:space="preserve">
          <source>It returns the ast if it succeeds, raises an exception otherwise. The exception is a &lt;a href=&quot;tokenmissingerror&quot;&gt;&lt;code&gt;TokenMissingError&lt;/code&gt;&lt;/a&gt; in case a token is missing (usually because the expression is incomplete), &lt;a href=&quot;syntaxerror&quot;&gt;&lt;code&gt;SyntaxError&lt;/code&gt;&lt;/a&gt; otherwise.</source>
          <target state="translated">Devuelve el ast si tiene &amp;eacute;xito, genera una excepci&amp;oacute;n en caso contrario. La excepci&amp;oacute;n es un &lt;a href=&quot;tokenmissingerror&quot;&gt; &lt;code&gt;TokenMissingError&lt;/code&gt; &lt;/a&gt; en caso de que falte un token (generalmente porque la expresi&amp;oacute;n est&amp;aacute; incompleta), &lt;a href=&quot;syntaxerror&quot;&gt; &lt;code&gt;SyntaxError&lt;/code&gt; en&lt;/a&gt; caso contrario.</target>
        </trans-unit>
        <trans-unit id="0ddb2097e9b6c67aac6845519cb92def4ddcd595" translate="yes" xml:space="preserve">
          <source>It returns the deleted attribute value (or &lt;code&gt;nil&lt;/code&gt; if nothing was set).</source>
          <target state="translated">Devuelve el valor del atributo eliminado (o &lt;code&gt;nil&lt;/code&gt; si no se estableci&amp;oacute; nada).</target>
        </trans-unit>
        <trans-unit id="02c714a4ea003b7686a6af1daae5b12a336be932" translate="yes" xml:space="preserve">
          <source>It returns the names of the compiled modules.</source>
          <target state="translated">Devuelve los nombres de los módulos compilados.</target>
        </trans-unit>
        <trans-unit id="ae123871707a2b6de82ed2c56ead673cc4cadc39" translate="yes" xml:space="preserve">
          <source>It returns the new map of compiler options.</source>
          <target state="translated">Devuelve el nuevo mapa de opciones del compilador.</target>
        </trans-unit>
        <trans-unit id="766f8a3783379e82be75e43a3208cd1da372d673" translate="yes" xml:space="preserve">
          <source>It returns the number of Gregorian days between the dates. Only &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; structs that follow the same or compatible calendars can be compared this way. If two calendars are not compatible, it will raise.</source>
          <target state="translated">Devuelve el n&amp;uacute;mero de d&amp;iacute;as gregorianos entre las fechas. Solo las estructuras de &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; que siguen el mismo calendario o calendarios compatibles se pueden comparar de esta manera. Si dos calendarios no son compatibles, aumentar&amp;aacute;.</target>
        </trans-unit>
        <trans-unit id="b6852c5d07c3b9783a2c197a51ccbe9ab48fc88a" translate="yes" xml:space="preserve">
          <source>It returns the same as the built-in &lt;code&gt;node()&lt;/code&gt;.</source>
          <target state="translated">Devuelve lo mismo que el &lt;code&gt;node()&lt;/code&gt; integrado () .</target>
        </trans-unit>
        <trans-unit id="d85ecab1cba97830aafe60c7db9bcdf6c281beb4" translate="yes" xml:space="preserve">
          <source>It returns the term stored in the documentation chunk in the format defined by &lt;a href=&quot;http://erlang.org/eep/eeps/eep-0048.html&quot;&gt;EEP 48&lt;/a&gt; or &lt;code&gt;{:error, reason}&lt;/code&gt; if the chunk is not available.</source>
          <target state="translated">Devuelve el t&amp;eacute;rmino almacenado en el fragmento de documentaci&amp;oacute;n en el formato definido por &lt;a href=&quot;http://erlang.org/eep/eeps/eep-0048.html&quot;&gt;EEP 48&lt;/a&gt; o &lt;code&gt;{:error, reason}&lt;/code&gt; si el fragmento no est&amp;aacute; disponible.</target>
        </trans-unit>
        <trans-unit id="3386214fb50a8516bbdf778fc1cd94340c90a3d8" translate="yes" xml:space="preserve">
          <source>It returns the updated version of the protocol bytecode. If the first element of the tuple is &lt;code&gt;:ok&lt;/code&gt;, it means the protocol was consolidated.</source>
          <target state="translated">Devuelve la versi&amp;oacute;n actualizada del bytecode del protocolo. Si el primer elemento de la tupla es &lt;code&gt;:ok&lt;/code&gt; , significa que el protocolo se consolid&amp;oacute;.</target>
        </trans-unit>
        <trans-unit id="c027793c4fcbf7f7be6aed911c23cf2d476fffe0" translate="yes" xml:space="preserve">
          <source>It returns:</source>
          <target state="translated">Vuelve:</target>
        </trans-unit>
        <trans-unit id="7e69f73c47c2d4297cd900ce85c28a9c948c1b19" translate="yes" xml:space="preserve">
          <source>It seems we are ready to go! We will use the interactive shell quite a lot in the next chapters to get a bit more familiar with the language constructs and basic types, starting in the next chapter.</source>
          <target state="translated">¡Parece que estamos listos para irnos! Utilizaremos bastante la concha interactiva en los próximos capítulos para familiarizarnos un poco más con las construcciones del lenguaje y los tipos básicos,a partir del próximo capítulo.</target>
        </trans-unit>
        <trans-unit id="5f614aba654107e82be85c23faa333a8020b0a23" translate="yes" xml:space="preserve">
          <source>It should return &lt;code&gt;{:ok, boolean}&lt;/code&gt; if you can check the membership of a given element in the &lt;code&gt;enumerable&lt;/code&gt; with &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#===/2&quot;&gt;&lt;code&gt;===/2&lt;/code&gt;&lt;/a&gt; without traversing the whole enumerable.</source>
          <target state="translated">Deber&amp;iacute;a devolver &lt;code&gt;{:ok, boolean}&lt;/code&gt; si puede verificar la pertenencia de un elemento dado en el &lt;code&gt;enumerable&lt;/code&gt; con &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#===/2&quot;&gt; &lt;code&gt;===/2&lt;/code&gt; &lt;/a&gt; sin recorrer todo el enumerable.</target>
        </trans-unit>
        <trans-unit id="7b61a10d3b18f5d9c1eaf6bc0cc59326c9f15aec" translate="yes" xml:space="preserve">
          <source>It should return &lt;code&gt;{:ok, boolean}&lt;/code&gt; if you can check the membership of a given element in the &lt;code&gt;enumerable&lt;/code&gt; with &lt;a href=&quot;kernel#===/2&quot;&gt;&lt;code&gt;===/2&lt;/code&gt;&lt;/a&gt; without traversing the whole enumerable.</source>
          <target state="translated">Deber&amp;iacute;a devolver &lt;code&gt;{:ok, boolean}&lt;/code&gt; si puede comprobar la pertenencia de un elemento dado en el &lt;code&gt;enumerable&lt;/code&gt; con &lt;a href=&quot;kernel#===/2&quot;&gt; &lt;code&gt;===/2&lt;/code&gt; &lt;/a&gt; sin recorrer todo el enumerable.</target>
        </trans-unit>
        <trans-unit id="4eda1ce345c7961b8d8eaacacd3842665d668e46" translate="yes" xml:space="preserve">
          <source>It should return &lt;code&gt;{:ok, count}&lt;/code&gt; if you can count the number of elements in the &lt;code&gt;enumerable&lt;/code&gt;.</source>
          <target state="translated">Deber&amp;iacute;a devolver &lt;code&gt;{:ok, count}&lt;/code&gt; si puede contar el n&amp;uacute;mero de elementos en el &lt;code&gt;enumerable&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b69c5b898ed0b1df84697cb05eb4de3925bc611c" translate="yes" xml:space="preserve">
          <source>It should return &lt;code&gt;{:ok, size, slicing_fun}&lt;/code&gt; if the &lt;code&gt;enumerable&lt;/code&gt; has a known bound and can access a position in the &lt;code&gt;enumerable&lt;/code&gt; without traversing all previous elements.</source>
          <target state="translated">Deber&amp;iacute;a devolver &lt;code&gt;{:ok, size, slicing_fun}&lt;/code&gt; si el &lt;code&gt;enumerable&lt;/code&gt; tiene un l&amp;iacute;mite conocido y puede acceder a una posici&amp;oacute;n en el &lt;code&gt;enumerable&lt;/code&gt; sin atravesar todos los elementos anteriores.</target>
        </trans-unit>
        <trans-unit id="c6ec473d814fbb944cadb6ef7ecbd0b54ffb7903" translate="yes" xml:space="preserve">
          <source>It simply prints messages to stdio and stderr.</source>
          <target state="translated">Simplemente imprime mensajes a stdio y stderr.</target>
        </trans-unit>
        <trans-unit id="c2bf5d9b723f91bde75bc41d3f4bce002f449711" translate="yes" xml:space="preserve">
          <source>It simply returns a charlist without escaping characters and without interpolations.</source>
          <target state="translated">Simplemente devuelve una lista de caracteres sin escapatoria y sin interpolaciones.</target>
        </trans-unit>
        <trans-unit id="c84e40ba905fa3630ef387da0561b471023546c1" translate="yes" xml:space="preserve">
          <source>It simply returns a string without escaping characters and without interpolations.</source>
          <target state="translated">Simplemente devuelve una cadena sin caracteres de escape y sin interpolaciones.</target>
        </trans-unit>
        <trans-unit id="6ac5bb057ce19bda73528c6e24000df9f4d91f41" translate="yes" xml:space="preserve">
          <source>It simply runs the compilers registered in your project and returns a tuple with the compilation status and a list of diagnostics.</source>
          <target state="translated">Simplemente ejecuta los compiladores registrados en su proyecto y devuelve una tupla con el estado de la compilación y una lista de diagnósticos.</target>
        </trans-unit>
        <trans-unit id="16d9b6683d66aba15c717ff1071205cd0f26c442" translate="yes" xml:space="preserve">
          <source>It supports the following options:</source>
          <target state="translated">Apoya las siguientes opciones:</target>
        </trans-unit>
        <trans-unit id="a2e490ec4460253855b541489b49bac1f8ad8cbb" translate="yes" xml:space="preserve">
          <source>It takes an &lt;code&gt;enumerable&lt;/code&gt; with elements being two-element tuples and returns a tuple with two lists, each of which is formed by the first and second element of each tuple, respectively.</source>
          <target state="translated">Toma un &lt;code&gt;enumerable&lt;/code&gt; con elementos que son tuplas de dos elementos y devuelve una tupla con dos listas, cada una de las cuales est&amp;aacute; formada por el primer y segundo elemento de cada tupla, respectivamente.</target>
        </trans-unit>
        <trans-unit id="65267298def1e5c3f27ba97cc79959f0ec4e9b43" translate="yes" xml:space="preserve">
          <source>It takes the &lt;code&gt;kind&lt;/code&gt; spilled by &lt;code&gt;catch&lt;/code&gt; as an argument and normalizes only &lt;code&gt;:error&lt;/code&gt;, returning the untouched payload for others.</source>
          <target state="translated">Toma el &lt;code&gt;kind&lt;/code&gt; derramado por &lt;code&gt;catch&lt;/code&gt; como argumento y se normaliza solo &lt;code&gt;:error&lt;/code&gt; , devolviendo la carga &amp;uacute;til intacta para otros.</target>
        </trans-unit>
        <trans-unit id="017d4c0f52ec05a16013c629cf13480b366963be" translate="yes" xml:space="preserve">
          <source>It uses &lt;a href=&quot;mix.tasks.xref&quot;&gt;&lt;code&gt;mix xref&lt;/code&gt;&lt;/a&gt; to check if any remote call does not exist or is deprecated, and emits warnings in such cases. This task does not show deprecated local calls (a call to a deprecated function or macro in the same module) nor calls to deprecated functionality in Elixir itself.</source>
          <target state="translated">Utiliza &lt;a href=&quot;mix.tasks.xref&quot;&gt; &lt;code&gt;mix xref&lt;/code&gt; &lt;/a&gt; para verificar si alguna llamada remota no existe o est&amp;aacute; en desuso, y emite advertencias en tales casos. Esta tarea no muestra llamadas locales obsoletas (una llamada a una funci&amp;oacute;n o macro obsoleta en el mismo m&amp;oacute;dulo) ni llamadas a funciones obsoletas en Elixir.</target>
        </trans-unit>
        <trans-unit id="3f274a1513094f60249f099c239e9ebf65b2ef59" translate="yes" xml:space="preserve">
          <source>It uses the following release options to customize its behaviour:</source>
          <target state="translated">Utiliza las siguientes opciones de lanzamiento para personalizar su comportamiento:</target>
        </trans-unit>
        <trans-unit id="14a6eb5a7e6cf2ff92914f35b6fcd693c9459181" translate="yes" xml:space="preserve">
          <source>It uses the given &lt;code&gt;left&lt;/code&gt; and &lt;code&gt;right&lt;/code&gt; documents as surrounding and the separator document &lt;code&gt;separator&lt;/code&gt; to separate items in &lt;code&gt;docs&lt;/code&gt;. If all entries in the collection are simple documents (texts or strings), then this function attempts to put as much as possible on the same line. If they are not simple, only one entry is shown per line if they do not fit.</source>
          <target state="translated">Utiliza los documentos de &lt;code&gt;left&lt;/code&gt; y &lt;code&gt;right&lt;/code&gt; dados como entorno y el separador de documentos &lt;code&gt;separator&lt;/code&gt; para separar elementos en &lt;code&gt;docs&lt;/code&gt; . Si todas las entradas de la colecci&amp;oacute;n son documentos simples (textos o cadenas), esta funci&amp;oacute;n intenta poner tanto como sea posible en la misma l&amp;iacute;nea. Si no son simples, solo se muestra una entrada por l&amp;iacute;nea si no encajan.</target>
        </trans-unit>
        <trans-unit id="359c8a3a80dc42f4d09ef45dc62e03c2a4526a01" translate="yes" xml:space="preserve">
          <source>It uses the shortest representation according to algorithm described in &quot;Printing Floating-Point Numbers Quickly and Accurately&quot; in Proceedings of the SIGPLAN '96 Conference on Programming Language Design and Implementation.</source>
          <target state="translated">Utiliza la representación más corta según el algoritmo descrito en &quot;Printing Floating-Point Numbers Quickly and Accurately&quot; en las Actas de la Conferencia SIGPLAN '96 sobre Diseño e Implementación de Lenguajes de Programación.</target>
        </trans-unit>
        <trans-unit id="8c45e1d7dd527f5dc5b63b0e91b53d37c7df9f32" translate="yes" xml:space="preserve">
          <source>It will also append an &lt;a href=&quot;#reset/0&quot;&gt;&lt;code&gt;IO.ANSI.reset/0&lt;/code&gt;&lt;/a&gt; to the chardata when a conversion is performed. If you don't want this behaviour, use &lt;a href=&quot;#format_fragment/2&quot;&gt;&lt;code&gt;format_fragment/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Tambi&amp;eacute;n agregar&amp;aacute; un &lt;a href=&quot;#reset/0&quot;&gt; &lt;code&gt;IO.ANSI.reset/0&lt;/code&gt; &lt;/a&gt; al chardata cuando se realice una conversi&amp;oacute;n. Si no desea este comportamiento, use &lt;a href=&quot;#format_fragment/2&quot;&gt; &lt;code&gt;format_fragment/2&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="226d68525abc4cd650686c46c4c3000914e7ba94" translate="yes" xml:space="preserve">
          <source>It will also append an &lt;a href=&quot;io.ansi#reset/0&quot;&gt;&lt;code&gt;IO.ANSI.reset/0&lt;/code&gt;&lt;/a&gt; to the chardata when a conversion is performed. If you don't want this behaviour, use &lt;a href=&quot;#format_fragment/2&quot;&gt;&lt;code&gt;format_fragment/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Tambi&amp;eacute;n agregar&amp;aacute; un &lt;a href=&quot;io.ansi#reset/0&quot;&gt; &lt;code&gt;IO.ANSI.reset/0&lt;/code&gt; &lt;/a&gt; al chardata cuando se realice una conversi&amp;oacute;n. Si no desea este comportamiento, use &lt;a href=&quot;#format_fragment/2&quot;&gt; &lt;code&gt;format_fragment/2&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3d625ecd25a91e55e3a68933b351320ae362d970" translate="yes" xml:space="preserve">
          <source>It will also unload all &lt;code&gt;:included_applications&lt;/code&gt;. Note that the function does not purge the application modules.</source>
          <target state="translated">Tambi&amp;eacute;n se descargar&amp;aacute; todo &lt;code&gt;:included_applications&lt;/code&gt; . Tenga en cuenta que la funci&amp;oacute;n no purga los m&amp;oacute;dulos de la aplicaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="8f9afeda7f3ae15ea1269533344b9ee72aa71396" translate="yes" xml:space="preserve">
          <source>It will define a private function with the &lt;code&gt;name&lt;/code&gt; followed by &lt;code&gt;_template&lt;/code&gt; that expects assigns as arguments.</source>
          <target state="translated">&lt;code&gt;_template&lt;/code&gt; una funci&amp;oacute;n privada con el &lt;code&gt;name&lt;/code&gt; seguido de _template que espera asignaciones como argumentos.</target>
        </trans-unit>
        <trans-unit id="b14179a0fb239e1b0a7f866572618fb6a7e039c8" translate="yes" xml:space="preserve">
          <source>It will define a private function with the &lt;code&gt;name&lt;/code&gt; followed by &lt;code&gt;_text&lt;/code&gt; that expects no arguments.</source>
          <target state="translated">&lt;code&gt;_text&lt;/code&gt; una funci&amp;oacute;n privada con el &lt;code&gt;name&lt;/code&gt; seguido de _text que no espera argumentos.</target>
        </trans-unit>
        <trans-unit id="84aa5327df0b5a9bb286871a09b1bb5335320dee" translate="yes" xml:space="preserve">
          <source>It will raise &lt;a href=&quot;compileerror&quot;&gt;&lt;code&gt;CompileError&lt;/code&gt;&lt;/a&gt; if the struct is not available.</source>
          <target state="translated">Se levantar&amp;aacute; &lt;a href=&quot;compileerror&quot;&gt; &lt;code&gt;CompileError&lt;/code&gt; &lt;/a&gt; si la estructura no est&amp;aacute; disponible.</target>
        </trans-unit>
        <trans-unit id="9fe073227420180d1f3a4b21845f2700d1e729eb" translate="yes" xml:space="preserve">
          <source>It will raise &lt;a href=&quot;https://hexdocs.pm/elixir/CompileError.html&quot;&gt;&lt;code&gt;CompileError&lt;/code&gt;&lt;/a&gt; if the struct is not available.</source>
          <target state="translated">Se levantar&amp;aacute; &lt;a href=&quot;https://hexdocs.pm/elixir/CompileError.html&quot;&gt; &lt;code&gt;CompileError&lt;/code&gt; &lt;/a&gt; si la estructura no est&amp;aacute; disponible.</target>
        </trans-unit>
        <trans-unit id="7a06e9516c751736de535751e4a5286672c93ce3" translate="yes" xml:space="preserve">
          <source>It will return the integer with the given unit, according to &lt;a href=&quot;https://hexdocs.pm/elixir/System.html#convert_time_unit/3&quot;&gt;&lt;code&gt;System.convert_time_unit/3&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Devolver&amp;aacute; el entero con la unidad dada, de acuerdo con &lt;a href=&quot;https://hexdocs.pm/elixir/System.html#convert_time_unit/3&quot;&gt; &lt;code&gt;System.convert_time_unit/3&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4e6ad31346e231231ef72c5f43225ffd3c66f70d" translate="yes" xml:space="preserve">
          <source>It will return the integer with the given unit, according to &lt;a href=&quot;system#convert_time_unit/3&quot;&gt;&lt;code&gt;System.convert_time_unit/3&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Devolver&amp;aacute; el entero con la unidad dada, de acuerdo con &lt;a href=&quot;system#convert_time_unit/3&quot;&gt; &lt;code&gt;System.convert_time_unit/3&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a600be691bf00b4e32fb62041ceec8dd63d79b4c" translate="yes" xml:space="preserve">
          <source>It works with improper lists.</source>
          <target state="translated">Funciona con listas impropias.</target>
        </trans-unit>
        <trans-unit id="56c7bd1e0de49688ba67dc0411a013f58a48e6b1" translate="yes" xml:space="preserve">
          <source>It would be repetitive to write every time we need this check. Instead you can use &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#defguard/1&quot;&gt;&lt;code&gt;defguard/1&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#defguardp/1&quot;&gt;&lt;code&gt;defguardp/1&lt;/code&gt;&lt;/a&gt; to create guard macros. Here's an example how:</source>
          <target state="translated">Ser&amp;iacute;a repetitivo escribir cada vez que necesitemos este cheque. En su lugar, puede utilizar &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#defguard/1&quot;&gt; &lt;code&gt;defguard/1&lt;/code&gt; &lt;/a&gt; y &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#defguardp/1&quot;&gt; &lt;code&gt;defguardp/1&lt;/code&gt; &lt;/a&gt; para crear macros de protecci&amp;oacute;n. He aqu&amp;iacute; un ejemplo de c&amp;oacute;mo:</target>
        </trans-unit>
        <trans-unit id="6681def299dea9fa997a7ef9b6707d61767cc884" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s possible to implement protocols for all Elixir data types:</source>
          <target state="translated">Es posible implementar protocolos para todos los tipos de datos de Elixir:</target>
        </trans-unit>
        <trans-unit id="999db6f61bff83218a31d16026d001272eea2261" translate="yes" xml:space="preserve">
          <source>It's also possible to pass a block to the &lt;a href=&quot;#if/2&quot;&gt;&lt;code&gt;if/2&lt;/code&gt;&lt;/a&gt; macro. The first example above would be translated to:</source>
          <target state="translated">Tambi&amp;eacute;n es posible pasar un bloque a la macro &lt;a href=&quot;#if/2&quot;&gt; &lt;code&gt;if/2&lt;/code&gt; &lt;/a&gt; . El primer ejemplo anterior se traducir&amp;iacute;a a:</target>
        </trans-unit>
        <trans-unit id="d7133394c8c36d8e6246933599c2f2817f5680a9" translate="yes" xml:space="preserve">
          <source>It's important to note that it returns the given &lt;code&gt;item&lt;/code&gt; unchanged. This makes it possible to &quot;spy&quot; on values by inserting an &lt;a href=&quot;#inspect/2&quot;&gt;&lt;code&gt;IO.inspect/2&lt;/code&gt;&lt;/a&gt; call almost anywhere in your code, for example, in the middle of a pipeline.</source>
          <target state="translated">Es importante tener en cuenta que devuelve el &lt;code&gt;item&lt;/code&gt; dado sin cambios. Esto hace posible &quot;espiar&quot; valores insertando una llamada &lt;a href=&quot;#inspect/2&quot;&gt; &lt;code&gt;IO.inspect/2&lt;/code&gt; en&lt;/a&gt; casi cualquier lugar de su c&amp;oacute;digo, por ejemplo, en medio de una canalizaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="cd7290dd76f46aa64bdbf468714a16cc5352938b" translate="yes" xml:space="preserve">
          <source>It's important to note that it returns the given &lt;code&gt;item&lt;/code&gt; unchanged. This makes it possible to &quot;spy&quot; on values by inserting an &lt;a href=&quot;io#inspect/2&quot;&gt;&lt;code&gt;IO.inspect/2&lt;/code&gt;&lt;/a&gt; call almost anywhere in your code, for example, in the middle of a pipeline.</source>
          <target state="translated">Es importante tener en cuenta que devuelve el &lt;code&gt;item&lt;/code&gt; dado sin cambios. Esto hace posible &quot;espiar&quot; valores insertando una llamada &lt;a href=&quot;io#inspect/2&quot;&gt; &lt;code&gt;IO.inspect/2&lt;/code&gt; &lt;/a&gt; casi en cualquier lugar de su c&amp;oacute;digo, por ejemplo, en medio de una canalizaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="92b1830c83da0ae2da9d26b113dc7191ad06496e" translate="yes" xml:space="preserve">
          <source>It's just like &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Shell.IO.html&quot;&gt;&lt;code&gt;Mix.Shell.IO&lt;/code&gt;&lt;/a&gt;, but prints far less.</source>
          <target state="translated">Es como &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Shell.IO.html&quot;&gt; &lt;code&gt;Mix.Shell.IO&lt;/code&gt; &lt;/a&gt; , pero imprime mucho menos.</target>
        </trans-unit>
        <trans-unit id="55e677bb7fe63cf491955ddb64be33b944554c67" translate="yes" xml:space="preserve">
          <source>It's often useful to have the AST for such a pipeline as a list of function applications. This function does exactly that:</source>
          <target state="translated">A menudo es útil tener la AST para tal tubería como una lista de aplicaciones de funciones.Esta función hace exactamente eso:</target>
        </trans-unit>
        <trans-unit id="b81b47272fec763e900d18ba6a1da4a3098cd954" translate="yes" xml:space="preserve">
          <source>Italic: on. Not widely supported. Sometimes treated as inverse.</source>
          <target state="translated">Cursiva:encendido.No tiene mucho apoyo.A veces se trata como algo inverso.</target>
        </trans-unit>
        <trans-unit id="0418eaaa46e9aed5bab2054a496fec5d581658a8" translate="yes" xml:space="preserve">
          <source>Iterates over the &lt;code&gt;enumerable&lt;/code&gt; and invokes &lt;code&gt;fun&lt;/code&gt; on each element. When an invocation of &lt;code&gt;fun&lt;/code&gt; returns a falsy value (&lt;code&gt;false&lt;/code&gt; or &lt;code&gt;nil&lt;/code&gt;) iteration stops immediately and &lt;code&gt;false&lt;/code&gt; is returned. In all other cases &lt;code&gt;true&lt;/code&gt; is returned.</source>
          <target state="translated">Itera sobre lo &lt;code&gt;enumerable&lt;/code&gt; e invoca la &lt;code&gt;fun&lt;/code&gt; en cada elemento. Cuando una invocaci&amp;oacute;n de &lt;code&gt;fun&lt;/code&gt; devuelve un valor &lt;code&gt;false&lt;/code&gt; ( falso o &lt;code&gt;nil&lt;/code&gt; ), la iteraci&amp;oacute;n se detiene inmediatamente y se devuelve &lt;code&gt;false&lt;/code&gt; . En todos los dem&amp;aacute;s casos, se devuelve &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c421120e85b180763b71f08518f3f5d485454d1b" translate="yes" xml:space="preserve">
          <source>Iterates over the &lt;code&gt;enumerable&lt;/code&gt; and invokes &lt;code&gt;fun&lt;/code&gt; on each element. When an invocation of &lt;code&gt;fun&lt;/code&gt; returns a truthy value (neither &lt;code&gt;false&lt;/code&gt; nor &lt;code&gt;nil&lt;/code&gt;) iteration stops immediately and &lt;code&gt;true&lt;/code&gt; is returned. In all other cases &lt;code&gt;false&lt;/code&gt; is returned.</source>
          <target state="translated">Itera sobre lo &lt;code&gt;enumerable&lt;/code&gt; e invoca la &lt;code&gt;fun&lt;/code&gt; en cada elemento. Cuando una invocaci&amp;oacute;n de &lt;code&gt;fun&lt;/code&gt; devuelve un valor verdadero (ni &lt;code&gt;false&lt;/code&gt; ni &lt;code&gt;nil&lt;/code&gt; ), la iteraci&amp;oacute;n se detiene inmediatamente y se devuelve &lt;code&gt;true&lt;/code&gt; . En todos los dem&amp;aacute;s casos, se devuelve &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1bd3db045f018e16696466f5acea3521773d3a53" translate="yes" xml:space="preserve">
          <source>Its fields are:</source>
          <target state="translated">Sus campos son:</target>
        </trans-unit>
        <trans-unit id="58668e7669fd564d99db5d581fcdb6a5618440b5" translate="yes" xml:space="preserve">
          <source>J</source>
          <target state="translated">J</target>
        </trans-unit>
        <trans-unit id="efed3690ea2243f5f1ac77cbb0987e5335440258" translate="yes" xml:space="preserve">
          <source>Jan</source>
          <target state="translated">Jan</target>
        </trans-unit>
        <trans-unit id="7a22d73d336abd6281d4dd71080220a230cb79de" translate="yes" xml:space="preserve">
          <source>January</source>
          <target state="translated">January</target>
        </trans-unit>
        <trans-unit id="2e084df8c1f3d9f015ea6c2b99c3b679805e965a" translate="yes" xml:space="preserve">
          <source>Joins a list of paths.</source>
          <target state="translated">Se une a una lista de caminos.</target>
        </trans-unit>
        <trans-unit id="515c03874ab491d886e1d1d7b31a372bcd15aaca" translate="yes" xml:space="preserve">
          <source>Joins the given &lt;code&gt;enumerable&lt;/code&gt; into a binary using &lt;code&gt;joiner&lt;/code&gt; as a separator.</source>
          <target state="translated">Une el &lt;code&gt;enumerable&lt;/code&gt; dado en un binario usando un &lt;code&gt;joiner&lt;/code&gt; como separador.</target>
        </trans-unit>
        <trans-unit id="d5f55ddf6fc97ad5dc177a84ea138ceb1275620d" translate="yes" xml:space="preserve">
          <source>Joins the given &lt;code&gt;enumerable&lt;/code&gt; into a string using &lt;code&gt;joiner&lt;/code&gt; as a separator.</source>
          <target state="translated">Une el &lt;code&gt;enumerable&lt;/code&gt; dado en una cadena usando un &lt;code&gt;joiner&lt;/code&gt; como separador.</target>
        </trans-unit>
        <trans-unit id="f5648a991099408fa47ca83f65efd1693d2a9815" translate="yes" xml:space="preserve">
          <source>Joins two paths.</source>
          <target state="translated">Une dos caminos.</target>
        </trans-unit>
        <trans-unit id="48d488d22b9c11a34b40d4f43a44d7ca15f5548d" translate="yes" xml:space="preserve">
          <source>Just like &lt;a href=&quot;#runtime_info/0&quot;&gt;&lt;code&gt;runtime_info/0&lt;/code&gt;&lt;/a&gt;, except accepts topic or a list of topics. E.g. topic &lt;code&gt;:applications&lt;/code&gt; will list the applications loaded.</source>
          <target state="translated">Al igual que &lt;a href=&quot;#runtime_info/0&quot;&gt; &lt;code&gt;runtime_info/0&lt;/code&gt; &lt;/a&gt; , excepto que acepta un tema o una lista de temas. Por ejemplo, tema &lt;code&gt;:applications&lt;/code&gt; enumerar&amp;aacute; las aplicaciones cargadas.</target>
        </trans-unit>
        <trans-unit id="8adcf69a0184ea8241a6a5279c84b711dfcc1fd2" translate="yes" xml:space="preserve">
          <source>Just like &lt;a href=&quot;#runtime_info/0&quot;&gt;&lt;code&gt;runtime_info/0&lt;/code&gt;&lt;/a&gt;, except accepts topic or a list of topics. For example, topic &lt;code&gt;:applications&lt;/code&gt; will list the applications loaded.</source>
          <target state="translated">Al igual que &lt;a href=&quot;#runtime_info/0&quot;&gt; &lt;code&gt;runtime_info/0&lt;/code&gt; &lt;/a&gt; , excepto que acepta un tema o una lista de temas. Por ejemplo, tema &lt;code&gt;:applications&lt;/code&gt; enumerar&amp;aacute; las aplicaciones cargadas.</target>
        </trans-unit>
        <trans-unit id="a7ee38bb7be4fc44198cb2685d9601dcf2b9f569" translate="yes" xml:space="preserve">
          <source>K</source>
          <target state="translated">K</target>
        </trans-unit>
        <trans-unit id="e51db24d55d9857675a12f93a5ceb2ca695225d3" translate="yes" xml:space="preserve">
          <source>Keep in mind &lt;code&gt;@enforce_keys&lt;/code&gt; is a simple compile-time guarantee to aid developers when building structs. It is not enforced on updates and it does not provide any sort of value-validation.</source>
          <target state="translated">Tenga en cuenta que &lt;code&gt;@enforce_keys&lt;/code&gt; es una garant&amp;iacute;a simple en tiempo de compilaci&amp;oacute;n para ayudar a los desarrolladores a crear estructuras. No se aplica en las actualizaciones y no proporciona ning&amp;uacute;n tipo de validaci&amp;oacute;n de valor.</target>
        </trans-unit>
        <trans-unit id="47ce96738f59dcbe1277607a7b62401517ee71a9" translate="yes" xml:space="preserve">
          <source>Keep in mind errors in guards do not leak but simply make the guard fail:</source>
          <target state="translated">Tenga en cuenta que los errores en los guardias no se filtran,sino que simplemente hacen que el guardia falle:</target>
        </trans-unit>
        <trans-unit id="019b3d215759f9f759de0ba07f898008173c2b71" translate="yes" xml:space="preserve">
          <source>Keep in mind reversing the same string twice does not necessarily yield the original string:</source>
          <target state="translated">Tenga en cuenta que invertir la misma cuerda dos veces no necesariamente produce la cuerda original:</target>
        </trans-unit>
        <trans-unit id="11a21ef1004b00088384d2386c08e0ddfc5a422c" translate="yes" xml:space="preserve">
          <source>Keep in mind single-quoted and double-quoted representations are not equivalent in Elixir as they are represented by different types:</source>
          <target state="translated">Tenga en cuenta que las representaciones de cita simple y de cita doble no son equivalentes en el Elixir ya que están representadas por diferentes tipos:</target>
        </trans-unit>
        <trans-unit id="26f5b5d2244e5042fbdc36e2b692a508ea25622f" translate="yes" xml:space="preserve">
          <source>Keep in mind that &lt;a href=&quot;#pry/0&quot;&gt;&lt;code&gt;IEx.pry/0&lt;/code&gt;&lt;/a&gt; runs in the caller process, blocking the caller during the evaluation cycle. The caller process can be freed by calling &lt;a href=&quot;https://hexdocs.pm/iex/IEx.Helpers.html#respawn/0&quot;&gt;&lt;code&gt;respawn/0&lt;/code&gt;&lt;/a&gt;, which starts a new IEx evaluation cycle, letting this one go:</source>
          <target state="translated">Tenga en cuenta que &lt;a href=&quot;#pry/0&quot;&gt; &lt;code&gt;IEx.pry/0&lt;/code&gt; se&lt;/a&gt; ejecuta en el proceso de llamada, bloqueando a la persona que llama durante el ciclo de evaluaci&amp;oacute;n. El proceso de la persona que llama se puede liberar llamando a &lt;a href=&quot;https://hexdocs.pm/iex/IEx.Helpers.html#respawn/0&quot;&gt; &lt;code&gt;respawn/0&lt;/code&gt; &lt;/a&gt; , que inicia un nuevo ciclo de evaluaci&amp;oacute;n de IEx, dejando pasar este:</target>
        </trans-unit>
        <trans-unit id="31048d175f380df1b961d6b1c2e7ff99e30846d1" translate="yes" xml:space="preserve">
          <source>Keep in mind that &lt;a href=&quot;iex#pry/0&quot;&gt;&lt;code&gt;IEx.pry/0&lt;/code&gt;&lt;/a&gt; runs in the caller process, blocking the caller during the evaluation cycle. The caller process can be freed by calling &lt;a href=&quot;iex.helpers#respawn/0&quot;&gt;&lt;code&gt;respawn/0&lt;/code&gt;&lt;/a&gt;, which starts a new IEx evaluation cycle, letting this one go:</source>
          <target state="translated">Tenga en cuenta que &lt;a href=&quot;iex#pry/0&quot;&gt; &lt;code&gt;IEx.pry/0&lt;/code&gt; se&lt;/a&gt; ejecuta en el proceso de llamada, bloqueando a la persona que llama durante el ciclo de evaluaci&amp;oacute;n. El proceso de la persona que llama se puede liberar llamando a &lt;a href=&quot;iex.helpers#respawn/0&quot;&gt; &lt;code&gt;respawn/0&lt;/code&gt; &lt;/a&gt; , que inicia un nuevo ciclo de evaluaci&amp;oacute;n de IEx, dejando pasar este:</target>
        </trans-unit>
        <trans-unit id="17dab74a9a2d31002a8d8b98ab8f2a1e7c69175a" translate="yes" xml:space="preserve">
          <source>Keep in mind that &lt;code&gt;assert&lt;/code&gt; does not change its semantics based on the expression. In other words, the expression is still required to return a truthy value. For example, the following will fail:</source>
          <target state="translated">Tenga en cuenta que &lt;code&gt;assert&lt;/code&gt; no cambia su sem&amp;aacute;ntica seg&amp;uacute;n la expresi&amp;oacute;n. En otras palabras, la expresi&amp;oacute;n a&amp;uacute;n es necesaria para devolver un valor de verdad. Por ejemplo, lo siguiente fallar&amp;aacute;:</target>
        </trans-unit>
        <trans-unit id="bb7a4e2f437f89496ebbe986e5235a9983fd7b7c" translate="yes" xml:space="preserve">
          <source>Keep in mind that &lt;code&gt;filter&lt;/code&gt; is not capable of filtering and transforming an element at the same time. If you would like to do so, consider using &lt;a href=&quot;#flat_map/2&quot;&gt;&lt;code&gt;flat_map/2&lt;/code&gt;&lt;/a&gt;. For example, if you want to convert all strings that represent an integer and discard the invalid one in one pass:</source>
          <target state="translated">Tenga en cuenta que el &lt;code&gt;filter&lt;/code&gt; no es capaz de filtrar y transformar un elemento al mismo tiempo. Si desea hacerlo, considere usar &lt;a href=&quot;#flat_map/2&quot;&gt; &lt;code&gt;flat_map/2&lt;/code&gt; &lt;/a&gt; . Por ejemplo, si desea convertir todas las cadenas que representan un n&amp;uacute;mero entero y descartar la no v&amp;aacute;lida en una sola pasada:</target>
        </trans-unit>
        <trans-unit id="efcc18a9b0bcb482431019e0321fb20f799d7ca1" translate="yes" xml:space="preserve">
          <source>Keep in mind that &lt;code&gt;refute&lt;/code&gt; does not change the semantics of the given expression. In other words, the following will fail:</source>
          <target state="translated">Tenga en cuenta que &lt;code&gt;refute&lt;/code&gt; no cambia la sem&amp;aacute;ntica de la expresi&amp;oacute;n dada. En otras palabras, lo siguiente fallar&amp;aacute;:</target>
        </trans-unit>
        <trans-unit id="2711b72cad7dcad995d5896fe00c416e309a1ef1" translate="yes" xml:space="preserve">
          <source>Keep in mind that all tests are included by default, so unless they are excluded first, the &lt;code&gt;include&lt;/code&gt; option has no effect.</source>
          <target state="translated">Tenga en cuenta que todas las pruebas se incluyen de forma predeterminada, por lo que, a menos que se excluyan primero, la opci&amp;oacute;n de &lt;code&gt;include&lt;/code&gt; no tiene ning&amp;uacute;n efecto.</target>
        </trans-unit>
        <trans-unit id="681ff07e085798bf6140c0e48749d06c2f822db5" translate="yes" xml:space="preserve">
          <source>Keep in mind that you can always invoke the help task to list all available tasks:</source>
          <target state="translated">Tenga en cuenta que siempre puede invocar la tarea de ayuda para enumerar todas las tareas disponibles:</target>
        </trans-unit>
        <trans-unit id="725b47d6b2cb8b5dc76a5170928fd278550f1b34" translate="yes" xml:space="preserve">
          <source>Keep in mind that, by convention, whenever the inspected value starts with &lt;code&gt;#&lt;/code&gt;, it is representing a data structure in non-valid Elixir syntax. This means the inspect protocol is not reversible as information may be lost along the way:</source>
          <target state="translated">Tenga en cuenta que, por convenci&amp;oacute;n, siempre que el valor inspeccionado comience con &lt;code&gt;#&lt;/code&gt; , representa una estructura de datos en una sintaxis de Elixir no v&amp;aacute;lida. Esto significa que el protocolo de inspecci&amp;oacute;n no es reversible ya que la informaci&amp;oacute;n se puede perder en el camino:</target>
        </trans-unit>
        <trans-unit id="b83288ec921378850bb3f1fa7bae00089f1eb1e1" translate="yes" xml:space="preserve">
          <source>Keep in mind that, in order to know if an element is unique or not, this function needs to store all unique values emitted by the stream. Therefore, if the stream is infinite, the number of elements stored will grow infinitely, never being garbage-collected.</source>
          <target state="translated">Tenga en cuenta que,para saber si un elemento es único o no,esta función necesita almacenar todos los valores únicos emitidos por la corriente.Por lo tanto,si la corriente es infinita,el número de elementos almacenados crecerá infinitamente,sin ser nunca recogidos por la basura.</target>
        </trans-unit>
        <trans-unit id="84d731972e42a11f20590eec71a88a83f6bff7df" translate="yes" xml:space="preserve">
          <source>Keep in mind that, regardless of how the task created with &lt;code&gt;async_nolink&lt;/code&gt; terminates, the caller's process will always receive a &lt;code&gt;:DOWN&lt;/code&gt; message with the same &lt;code&gt;ref&lt;/code&gt; value that is held by the task struct. If the task terminates normally, the reason in the &lt;code&gt;:DOWN&lt;/code&gt; message will be &lt;code&gt;:normal&lt;/code&gt;.</source>
          <target state="translated">Tenga en cuenta que, independientemente de c&amp;oacute;mo &lt;code&gt;async_nolink&lt;/code&gt; la tarea creada con async_nolink , el proceso de la persona que llama siempre recibir&amp;aacute; un mensaje &lt;code&gt;:DOWN&lt;/code&gt; con el mismo valor de &lt;code&gt;ref&lt;/code&gt; erencia que tiene la estructura de la tarea. Si la tarea termina normalmente, el motivo en el mensaje &lt;code&gt;:DOWN&lt;/code&gt; ser&amp;aacute; &lt;code&gt;:normal&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="43e72793cf5cb6c7b1a0ca2e28a8c6ee6025d9c8" translate="yes" xml:space="preserve">
          <source>Keep in mind the &lt;a href=&quot;#open/0&quot;&gt;&lt;code&gt;open/0&lt;/code&gt;&lt;/a&gt; location may not exist when prying precompiled source code, such as Elixir itself.</source>
          <target state="translated">Tenga en cuenta que la ubicaci&amp;oacute;n &lt;a href=&quot;#open/0&quot;&gt; &lt;code&gt;open/0&lt;/code&gt; &lt;/a&gt; puede no existir al hacer palanca en el c&amp;oacute;digo fuente precompilado, como el propio Elixir.</target>
        </trans-unit>
        <trans-unit id="860e4edfbd6c5d2c7567e3d117fbea1f6f0c0f3d" translate="yes" xml:space="preserve">
          <source>Keep in mind the &lt;a href=&quot;#whereami/1&quot;&gt;&lt;code&gt;whereami/1&lt;/code&gt;&lt;/a&gt; location may not exist when prying precompiled source code, such as Elixir itself.</source>
          <target state="translated">Tenga en cuenta que la ubicaci&amp;oacute;n &lt;a href=&quot;#whereami/1&quot;&gt; &lt;code&gt;whereami/1&lt;/code&gt; &lt;/a&gt; puede no existir al buscar c&amp;oacute;digo fuente precompilado, como el propio Elixir.</target>
        </trans-unit>
        <trans-unit id="5cf33f85cbcbea5e44750e3785093cd27fc2107f" translate="yes" xml:space="preserve">
          <source>Keep in mind the location may not exist when opening precompiled source code.</source>
          <target state="translated">Tenga en cuenta que la ubicación puede no existir al abrir el código fuente precompilado.</target>
        </trans-unit>
        <trans-unit id="9d158165f2fc0a37c72c714056603422cfd15842" translate="yes" xml:space="preserve">
          <source>Keep in mind this issue also shows up when performing &quot;rolling upgrades&quot; with agents. By rolling upgrades we mean the following situation: you wish to deploy a new version of your software by &lt;em&gt;shutting down&lt;/em&gt; some of your nodes and replacing them with nodes running a new version of the software. In this setup, part of your environment will have one version of a given module and the other part another version (the newer one) of the same module.</source>
          <target state="translated">Tenga en cuenta que este problema tambi&amp;eacute;n aparece al realizar &quot;actualizaciones continuas&quot; con los agentes. Por actualizaciones continuas nos referimos a la siguiente situaci&amp;oacute;n: desea implementar una nueva versi&amp;oacute;n de su software &lt;em&gt;cerrando&lt;/em&gt; algunos de sus nodos y reemplaz&amp;aacute;ndolos con nodos que ejecutan una nueva versi&amp;oacute;n del software. En esta configuraci&amp;oacute;n, parte de su entorno tendr&amp;aacute; una versi&amp;oacute;n de un m&amp;oacute;dulo dado y la otra parte otra versi&amp;oacute;n (la m&amp;aacute;s nueva) del mismo m&amp;oacute;dulo.</target>
        </trans-unit>
        <trans-unit id="f0156c07b778f553fcac957532e2ebb3cd9d736c" translate="yes" xml:space="preserve">
          <source>Keep the first paragraph of the documentation concise and simple, typically one-line. Tools like &lt;a href=&quot;https://github.com/elixir-lang/ex_doc/&quot;&gt;ExDoc&lt;/a&gt; use the first line to generate a summary.</source>
          <target state="translated">Mantenga el primer p&amp;aacute;rrafo de la documentaci&amp;oacute;n conciso y simple, generalmente de una l&amp;iacute;nea. Herramientas como &lt;a href=&quot;https://github.com/elixir-lang/ex_doc/&quot;&gt;ExDoc&lt;/a&gt; usan la primera l&amp;iacute;nea para generar un resumen.</target>
        </trans-unit>
        <trans-unit id="b89ed6c1e4d3aad0e25530664c1434bb7a8e1390" translate="yes" xml:space="preserve">
          <source>Keeping user's formatting</source>
          <target state="translated">Mantener el formato del usuario</target>
        </trans-unit>
        <trans-unit id="74808d3df030e992e7b9444241625147986487c1" translate="yes" xml:space="preserve">
          <source>Kernel</source>
          <target state="translated">Kernel</target>
        </trans-unit>
        <trans-unit id="b4d54f6ec686d8eb5175caf8d65ba08cfce6e603" translate="yes" xml:space="preserve">
          <source>Kernel functions</source>
          <target state="translated">Funciones del núcleo</target>
        </trans-unit>
        <trans-unit id="aeaeca0ac29205e969d2b8226d57305ccdd9354c" translate="yes" xml:space="preserve">
          <source>Kernel.ParallelCompiler</source>
          <target state="translated">Kernel.ParallelCompiler</target>
        </trans-unit>
        <trans-unit id="397b329c326c86881a0889837339130cb1378ece" translate="yes" xml:space="preserve">
          <source>Kernel.SpecialForms</source>
          <target state="translated">Kernel.SpecialForms</target>
        </trans-unit>
        <trans-unit id="c8ca7c123549a6d988a750c2deb07a14cc7d13fe" translate="yes" xml:space="preserve">
          <source>Key and value in each tuple will be binaries and will be percent-unescaped.</source>
          <target state="translated">La clave y el valor de cada tupla serán binarios y serán porcentuales.</target>
        </trans-unit>
        <trans-unit id="fa0ccdd4ef791d750570b7806e67eebc94ec0038" translate="yes" xml:space="preserve">
          <source>Key-based access to data structures.</source>
          <target state="translated">Acceso basado en claves a las estructuras de datos.</target>
        </trans-unit>
        <trans-unit id="156eb45dfef4d621a4d1c63e18132edae922c7ad" translate="yes" xml:space="preserve">
          <source>Key-value pairs in a map do not follow any order (that's why the printed map in the example above has a different order than the map that was created).</source>
          <target state="translated">Los pares de valores clave de un mapa no siguen ningún orden (por eso el mapa impreso en el ejemplo anterior tiene un orden diferente al del mapa que se creó).</target>
        </trans-unit>
        <trans-unit id="74018238351de8a4b5f41ef51f98e3f2c94d5837" translate="yes" xml:space="preserve">
          <source>KeyError</source>
          <target state="translated">KeyError</target>
        </trans-unit>
        <trans-unit id="15dcfdc21056a09847eba4ff304e968ed3eb85e6" translate="yes" xml:space="preserve">
          <source>KeyError &lt;small&gt;exception&lt;/small&gt;</source>
          <target state="translated">KeyError &lt;small&gt;excepci&amp;oacute;n&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="8ac2c89719f9c04525d63e66e24d2789f2aee53c" translate="yes" xml:space="preserve">
          <source>Keys and values can be any term that implements the &lt;a href=&quot;https://hexdocs.pm/elixir/String.Chars.html&quot;&gt;&lt;code&gt;String.Chars&lt;/code&gt;&lt;/a&gt; protocol with the exception of lists, which are explicitly forbidden.</source>
          <target state="translated">Las claves y los valores pueden ser cualquier t&amp;eacute;rmino que implemente el protocolo &lt;a href=&quot;https://hexdocs.pm/elixir/String.Chars.html&quot;&gt; &lt;code&gt;String.Chars&lt;/code&gt; &lt;/a&gt; con la excepci&amp;oacute;n de las listas, que est&amp;aacute;n expl&amp;iacute;citamente prohibidas.</target>
        </trans-unit>
        <trans-unit id="9feb5a2ad29c5ac9a472aae0705f0b36f56f288c" translate="yes" xml:space="preserve">
          <source>Keys and values can be any term that implements the &lt;a href=&quot;string.chars&quot;&gt;&lt;code&gt;String.Chars&lt;/code&gt;&lt;/a&gt; protocol with the exception of lists, which are explicitly forbidden.</source>
          <target state="translated">Las claves y los valores pueden ser cualquier t&amp;eacute;rmino que implemente el protocolo &lt;a href=&quot;string.chars&quot;&gt; &lt;code&gt;String.Chars&lt;/code&gt; &lt;/a&gt; con la excepci&amp;oacute;n de las listas, que est&amp;aacute;n expl&amp;iacute;citamente prohibidas.</target>
        </trans-unit>
        <trans-unit id="c871f27e8a5b87eb6c4a04f8a42a4f6e2ea2d87a" translate="yes" xml:space="preserve">
          <source>Keys are ordered, as specified by the developer.</source>
          <target state="translated">Las llaves se ordenan,según lo especificado por el desarrollador.</target>
        </trans-unit>
        <trans-unit id="405b7423934af77dcf3ba5a20687064207764857" translate="yes" xml:space="preserve">
          <source>Keys can be given more than once.</source>
          <target state="translated">Las llaves se pueden dar más de una vez.</target>
        </trans-unit>
        <trans-unit id="c61607fe5f12600b764431ebe5f8131aa4311b82" translate="yes" xml:space="preserve">
          <source>Keys for which there are no entries in &lt;code&gt;map&lt;/code&gt; are ignored.</source>
          <target state="translated">Se ignoran las claves para las que no hay entradas en el &lt;code&gt;map&lt;/code&gt; a .</target>
        </trans-unit>
        <trans-unit id="4694e757bfed2949bf57d46a766c250bec95d827" translate="yes" xml:space="preserve">
          <source>Keys for which there are no entries in the keyword list are ignored.</source>
          <target state="translated">Las claves para las que no hay entradas en la lista de palabras clave son ignoradas.</target>
        </trans-unit>
        <trans-unit id="9070f3bb1af9cd3030e97dc551b3b692914950e9" translate="yes" xml:space="preserve">
          <source>Keys in maps can be accessed through some of the functions in this module (such as &lt;a href=&quot;#get/3&quot;&gt;&lt;code&gt;Map.get/3&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#fetch/2&quot;&gt;&lt;code&gt;Map.fetch/2&lt;/code&gt;&lt;/a&gt;) or through the &lt;code&gt;map[]&lt;/code&gt; syntax provided by the &lt;a href=&quot;https://hexdocs.pm/elixir/Access.html&quot;&gt;&lt;code&gt;Access&lt;/code&gt;&lt;/a&gt; module:</source>
          <target state="translated">Se puede acceder a las claves de los mapas a trav&amp;eacute;s de algunas de las funciones de este m&amp;oacute;dulo (como &lt;a href=&quot;#get/3&quot;&gt; &lt;code&gt;Map.get/3&lt;/code&gt; &lt;/a&gt; o &lt;a href=&quot;#fetch/2&quot;&gt; &lt;code&gt;Map.fetch/2&lt;/code&gt; &lt;/a&gt; ) o mediante la sintaxis &lt;code&gt;map[]&lt;/code&gt; proporcionada por el m&amp;oacute;dulo &lt;a href=&quot;https://hexdocs.pm/elixir/Access.html&quot;&gt; &lt;code&gt;Access&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="5718a5ffdcdd81ef356ce973873d2a2560146789" translate="yes" xml:space="preserve">
          <source>Keys in maps can be accessed through some of the functions in this module (such as &lt;a href=&quot;map#get/3&quot;&gt;&lt;code&gt;Map.get/3&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;map#fetch/2&quot;&gt;&lt;code&gt;Map.fetch/2&lt;/code&gt;&lt;/a&gt;) or through the &lt;code&gt;map[]&lt;/code&gt; syntax provided by the &lt;a href=&quot;access&quot;&gt;&lt;code&gt;Access&lt;/code&gt;&lt;/a&gt; module:</source>
          <target state="translated">Se puede acceder a las claves de los mapas a trav&amp;eacute;s de algunas de las funciones de este m&amp;oacute;dulo (como &lt;a href=&quot;map#get/3&quot;&gt; &lt;code&gt;Map.get/3&lt;/code&gt; &lt;/a&gt; o &lt;a href=&quot;map#fetch/2&quot;&gt; &lt;code&gt;Map.fetch/2&lt;/code&gt; &lt;/a&gt; ) o mediante la sintaxis &lt;code&gt;map[]&lt;/code&gt; proporcionada por el m&amp;oacute;dulo &lt;a href=&quot;access&quot;&gt; &lt;code&gt;Access&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="b26620768b7c3d13232d03fbd0fd86edae1e9816" translate="yes" xml:space="preserve">
          <source>Keys in the &lt;a href=&quot;enumerable&quot;&gt;&lt;code&gt;Enumerable&lt;/code&gt;&lt;/a&gt; that don't exist in the struct are automatically discarded. Note that keys must be atoms, as only atoms are allowed when defining a struct.</source>
          <target state="translated">Las claves de &lt;a href=&quot;enumerable&quot;&gt; &lt;code&gt;Enumerable&lt;/code&gt; &lt;/a&gt; que no existen en la estructura se descartan autom&amp;aacute;ticamente. Tenga en cuenta que las claves deben ser &amp;aacute;tomos, ya que solo se permiten &amp;aacute;tomos al definir una estructura.</target>
        </trans-unit>
        <trans-unit id="c2baa536dd3a58a170c5f916697821f33d1d1197" translate="yes" xml:space="preserve">
          <source>Keys in the &lt;a href=&quot;https://hexdocs.pm/elixir/Enumerable.html&quot;&gt;&lt;code&gt;Enumerable&lt;/code&gt;&lt;/a&gt; that don't exist in the struct are automatically discarded. Note that keys must be atoms, as only atoms are allowed when defining a struct. If keys in the &lt;a href=&quot;https://hexdocs.pm/elixir/Enumerable.html&quot;&gt;&lt;code&gt;Enumerable&lt;/code&gt;&lt;/a&gt; are duplicated, the last entry will be taken (same behaviour as &lt;a href=&quot;https://hexdocs.pm/elixir/Map.html#new/1&quot;&gt;&lt;code&gt;Map.new/1&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">Las claves de &lt;a href=&quot;https://hexdocs.pm/elixir/Enumerable.html&quot;&gt; &lt;code&gt;Enumerable&lt;/code&gt; &lt;/a&gt; que no existen en la estructura se descartan autom&amp;aacute;ticamente. Tenga en cuenta que las claves deben ser &amp;aacute;tomos, ya que solo se permiten &amp;aacute;tomos al definir una estructura. Si las claves en el &lt;a href=&quot;https://hexdocs.pm/elixir/Enumerable.html&quot;&gt; &lt;code&gt;Enumerable&lt;/code&gt; &lt;/a&gt; est&amp;aacute;n duplicadas, se tomar&amp;aacute; la &amp;uacute;ltima entrada (mismo comportamiento que &lt;a href=&quot;https://hexdocs.pm/elixir/Map.html#new/1&quot;&gt; &lt;code&gt;Map.new/1&lt;/code&gt; &lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="36720d74567b83e682047245f1678cc00bda2c58" translate="yes" xml:space="preserve">
          <source>Keys must be atoms.</source>
          <target state="translated">Las claves deben ser los átomos.</target>
        </trans-unit>
        <trans-unit id="e9113610f402cf2ff1bf899fb9498e85baba2c5a" translate="yes" xml:space="preserve">
          <source>Keys must be atoms. Keys with &lt;code&gt;nil&lt;/code&gt; value are discarded, boolean values are converted to &lt;code&gt;--key&lt;/code&gt; or &lt;code&gt;--no-key&lt;/code&gt; (if the value is &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;, respectively), and all other values are converted using &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#to_string/1&quot;&gt;&lt;code&gt;Kernel.to_string/1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Las claves deben ser &amp;aacute;tomos. Las claves con valor &lt;code&gt;nil&lt;/code&gt; se descartan, los valores booleanos se convierten en &lt;code&gt;--key&lt;/code&gt; o &lt;code&gt;--no-key&lt;/code&gt; (si el valor es &lt;code&gt;true&lt;/code&gt; o &lt;code&gt;false&lt;/code&gt; , respectivamente) y todos los dem&amp;aacute;s valores se convierten usando &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#to_string/1&quot;&gt; &lt;code&gt;Kernel.to_string/1&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b946356405330b9605587c00c959f1283c7ebe0c" translate="yes" xml:space="preserve">
          <source>Keys must be atoms. Keys with &lt;code&gt;nil&lt;/code&gt; value are discarded, boolean values are converted to &lt;code&gt;--key&lt;/code&gt; or &lt;code&gt;--no-key&lt;/code&gt; (if the value is &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;, respectively), and all other values are converted using &lt;a href=&quot;kernel#to_string/1&quot;&gt;&lt;code&gt;Kernel.to_string/1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Las claves deben ser &amp;aacute;tomos. Las claves con valor &lt;code&gt;nil&lt;/code&gt; se descartan, los valores booleanos se convierten en &lt;code&gt;--key&lt;/code&gt; o &lt;code&gt;--no-key&lt;/code&gt; (si el valor es &lt;code&gt;true&lt;/code&gt; o &lt;code&gt;false&lt;/code&gt; , respectivamente) y todos los dem&amp;aacute;s valores se convierten usando &lt;a href=&quot;kernel#to_string/1&quot;&gt; &lt;code&gt;Kernel.to_string/1&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a3926e039fd753c472f6e172496fda0574369261" translate="yes" xml:space="preserve">
          <source>Keyword</source>
          <target state="translated">Keyword</target>
        </trans-unit>
        <trans-unit id="7c134e1191dc5c44edbda73b442ec456eb6a71ed" translate="yes" xml:space="preserve">
          <source>Keyword lists</source>
          <target state="translated">Listas de palabras clave</target>
        </trans-unit>
        <trans-unit id="018e651a39aa7ad2ac64ac5eb40095fd4e7a830c" translate="yes" xml:space="preserve">
          <source>Keyword lists and maps</source>
          <target state="translated">Listas de palabras clave y mapas</target>
        </trans-unit>
        <trans-unit id="392d9a31ec7b8f0bdc87d00f031b9e9bb8a73cb6" translate="yes" xml:space="preserve">
          <source>Keyword lists are always deep merged.</source>
          <target state="translated">Las listas de palabras clave siempre están profundamente fusionadas.</target>
        </trans-unit>
        <trans-unit id="4a8ca5bd3ccea7e0c7d15c67c55d6d098576d862" translate="yes" xml:space="preserve">
          <source>Keyword lists are always deep-merged.</source>
          <target state="translated">Las listas de palabras clave siempre están muy fusionadas.</target>
        </trans-unit>
        <trans-unit id="ac0300b9a6363d2ecf2708a6271a27720466a909" translate="yes" xml:space="preserve">
          <source>Keyword lists are important because they have three special characteristics:</source>
          <target state="translated">Las listas de palabras clave son importantes porque tienen tres características especiales:</target>
        </trans-unit>
        <trans-unit id="f46ce1d1d7d871768a2c62a23f7074163ee126aa" translate="yes" xml:space="preserve">
          <source>Keyword lists play an important role in the language and are quite common in many functions and macros. We will explore them a bit more in a future chapter. Now it is time to talk about &amp;ldquo;Binaries, strings, and char lists&amp;rdquo;.</source>
          <target state="translated">Las listas de palabras clave juegan un papel importante en el lenguaje y son bastante comunes en muchas funciones y macros. Los exploraremos un poco m&amp;aacute;s en un cap&amp;iacute;tulo futuro. Ahora es el momento de hablar sobre &quot;Binarios, cadenas y listas de caracteres&quot;.</target>
        </trans-unit>
        <trans-unit id="f530db58b3e5088dc7412c6d2298ba3f8456bdeb" translate="yes" xml:space="preserve">
          <source>Keywords</source>
          <target state="translated">Keywords</target>
        </trans-unit>
        <trans-unit id="e5689d3967f1a5dbb297e088da0c45eb1176eca9" translate="yes" xml:space="preserve">
          <source>Keywords are mostly used to work with optional values.</source>
          <target state="translated">Las palabras clave se usan principalmente para trabajar con valores opcionales.</target>
        </trans-unit>
        <trans-unit id="1ceb47d1e9d15d89ef0224d7d1b562dcf30b3896" translate="yes" xml:space="preserve">
          <source>Keywords as last arguments</source>
          <target state="translated">Palabras clave como últimos argumentos</target>
        </trans-unit>
        <trans-unit id="c9a539f3ad19c8470b65f3028d300a7bb73e217a" translate="yes" xml:space="preserve">
          <source>Keywords in Elixir are a list of tuples of two elements where the first element is an atom. Using the base constructs, they would be represented as:</source>
          <target state="translated">Las palabras clave en el Elixir son una lista de tuplas de dos elementos donde el primer elemento es un átomo.Usando las construcciones de base,se representarían como:</target>
        </trans-unit>
        <trans-unit id="b05203cf89b60eb36609a1a8b7f3cafe0927486a" translate="yes" xml:space="preserve">
          <source>Known issues</source>
          <target state="translated">Problemas conocidos</target>
        </trans-unit>
        <trans-unit id="c2843be90e040c2ace2b060340b9db40c6dbf4a3" translate="yes" xml:space="preserve">
          <source>Known tags</source>
          <target state="translated">Etiquetas conocidas</target>
        </trans-unit>
        <trans-unit id="d160e0986aca4714714a16f29ec605af90be704d" translate="yes" xml:space="preserve">
          <source>L</source>
          <target state="translated">L</target>
        </trans-unit>
        <trans-unit id="9e805fe1256b3cb3351f4f100e6b23dfaed4c00e" translate="yes" xml:space="preserve">
          <source>Last time we fixed the race condition by replacing the asynchronous operation, a &lt;code&gt;cast&lt;/code&gt;, by a &lt;code&gt;call&lt;/code&gt;, which is synchronous. Unfortunately, the &lt;code&gt;handle_info/2&lt;/code&gt; callback we are using to receive the &lt;code&gt;:DOWN&lt;/code&gt; message and delete the entry from the ETS table does not have a synchronous equivalent. This time, we need to find a way to guarantee the registry has processed the &lt;code&gt;:DOWN&lt;/code&gt; notification sent when the bucket process terminated.</source>
          <target state="translated">La &amp;uacute;ltima vez arreglamos la condici&amp;oacute;n de carrera reemplazando la operaci&amp;oacute;n asincr&amp;oacute;nica, una &lt;code&gt;cast&lt;/code&gt; , por una &lt;code&gt;call&lt;/code&gt; , que es sincr&amp;oacute;nica. Desafortunadamente, la devoluci&amp;oacute;n &lt;code&gt;handle_info/2&lt;/code&gt; llamada handle_info / 2 que estamos usando para recibir el mensaje &lt;code&gt;:DOWN&lt;/code&gt; y eliminar la entrada de la tabla ETS no tiene un equivalente s&amp;iacute;ncrono. Esta vez, necesitamos encontrar una manera de garantizar que el registro haya procesado la notificaci&amp;oacute;n &lt;code&gt;:DOWN&lt;/code&gt; enviada cuando finaliz&amp;oacute; el proceso de dep&amp;oacute;sito.</target>
        </trans-unit>
        <trans-unit id="75acd19542cbb9fa88cdabbe078724acb812d8b1" translate="yes" xml:space="preserve">
          <source>Later on we will learn how to compile Elixir code (in &lt;a href=&quot;modules-and-functions&quot;&gt;Chapter 8&lt;/a&gt;) and how to use the Mix build tool (in the &lt;a href=&quot;mix-otp/introduction-to-mix&quot;&gt;Mix &amp;amp; OTP guide&lt;/a&gt;). For now, let&amp;rsquo;s move on to &lt;a href=&quot;basic-types&quot;&gt;Chapter 2&lt;/a&gt;.</source>
          <target state="translated">M&amp;aacute;s adelante, aprenderemos c&amp;oacute;mo compilar c&amp;oacute;digo Elixir (en el &lt;a href=&quot;modules-and-functions&quot;&gt;Cap&amp;iacute;tulo 8&lt;/a&gt; ) y c&amp;oacute;mo usar la herramienta de construcci&amp;oacute;n Mix (en la &lt;a href=&quot;mix-otp/introduction-to-mix&quot;&gt;gu&amp;iacute;a Mix &amp;amp; OTP&lt;/a&gt; ). Por ahora, pasemos al &lt;a href=&quot;basic-types&quot;&gt;Cap&amp;iacute;tulo 2&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="dec3727f52253a21a625cc6c295ee24dda78903b" translate="yes" xml:space="preserve">
          <source>Lazily drops elements of the enumerable while the given function returns a truthy value.</source>
          <target state="translated">Perezosamente deja caer elementos de lo enumerable mientras que la función dada devuelve un valor de verdad.</target>
        </trans-unit>
        <trans-unit id="ee9b58962b88fa77ea098c1b0d427e9f46c19021" translate="yes" xml:space="preserve">
          <source>Lazily drops the next &lt;code&gt;n&lt;/code&gt; elements from the enumerable.</source>
          <target state="translated">Suelta perezosamente los siguientes &lt;code&gt;n&lt;/code&gt; elementos del enumerable.</target>
        </trans-unit>
        <trans-unit id="69ade1dc23ccb5f3b64347640778d1f4fe8c44ae" translate="yes" xml:space="preserve">
          <source>Lazily intersperses &lt;code&gt;intersperse_element&lt;/code&gt; between each element of the enumeration.</source>
          <target state="translated">Perezosamente intercala &lt;code&gt;intersperse_element&lt;/code&gt; entre cada elemento de la enumeraci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="fb2c9b6a976811f032d7cbfe8165bb5865150558" translate="yes" xml:space="preserve">
          <source>Lazily returns and removes all values associated with &lt;code&gt;key&lt;/code&gt; in the keyword list.</source>
          <target state="translated">Devuelve perezosamente y elimina todos los valores asociados con la &lt;code&gt;key&lt;/code&gt; en la lista de palabras clave.</target>
        </trans-unit>
        <trans-unit id="b61c3c17ee3d10d7647d9803c70ba26ee27244c1" translate="yes" xml:space="preserve">
          <source>Lazily returns and removes the value associated with &lt;code&gt;key&lt;/code&gt; in &lt;code&gt;map&lt;/code&gt;.</source>
          <target state="translated">Vuelve perezosamente y elimina el valor asociado con la &lt;code&gt;key&lt;/code&gt; en el &lt;code&gt;map&lt;/code&gt; a .</target>
        </trans-unit>
        <trans-unit id="0e92baedbf908cf61336dc397f7fe80981871f17" translate="yes" xml:space="preserve">
          <source>Lazily takes elements of the enumerable while the given function returns a truthy value.</source>
          <target state="translated">Perezosamente toma elementos de lo enumerable mientras que la función dada devuelve un valor de verdad.</target>
        </trans-unit>
        <trans-unit id="450194d4d3b114b2c73dd825ab3cd48712daf267" translate="yes" xml:space="preserve">
          <source>Lazily takes the next &lt;code&gt;count&lt;/code&gt; elements from the enumerable and stops enumeration.</source>
          <target state="translated">Perezosamente toma los siguientes elementos de &lt;code&gt;count&lt;/code&gt; del enumerable y detiene la enumeraci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="9fa3a1af379a945e27159d6cbd53b6758da22a91" translate="yes" xml:space="preserve">
          <source>Leap seconds are not taken into account.</source>
          <target state="translated">Los segundos bisiestos no se tienen en cuenta.</target>
        </trans-unit>
        <trans-unit id="824d76b124e6289f372e2ff6bcba91e8939343bd" translate="yes" xml:space="preserve">
          <source>Learn more</source>
          <target state="translated">Aprende más.</target>
        </trans-unit>
        <trans-unit id="34ce14772451e311453b61a1ddb8221e562b888f" translate="yes" xml:space="preserve">
          <source>Left to right</source>
          <target state="translated">De izquierda a derecha</target>
        </trans-unit>
        <trans-unit id="efe84e15d94659b1eca2695c2253c5d3775e58ca" translate="yes" xml:space="preserve">
          <source>Left to right arrow</source>
          <target state="translated">Flecha de izquierda a derecha</target>
        </trans-unit>
        <trans-unit id="1401741d3c80953c9e3f5d95f783a5ec74cfbaff" translate="yes" xml:space="preserve">
          <source>Less-than operator.</source>
          <target state="translated">Menos que un operador.</target>
        </trans-unit>
        <trans-unit id="25e1e02fa6fbaded2f6f1e2459649cc19db9b44a" translate="yes" xml:space="preserve">
          <source>Less-than or equal to operator.</source>
          <target state="translated">Menos que o igual al operador.</target>
        </trans-unit>
        <trans-unit id="e68d562699894469c473720b475220fbf042128a" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s also add a test to &lt;code&gt;test/kv/bucket_test.exs&lt;/code&gt; that guarantees the bucket is temporary:</source>
          <target state="translated">&lt;code&gt;test/kv/bucket_test.exs&lt;/code&gt; tambi&amp;eacute;n una prueba a test / kv / bucket_test.exs que garantiza que el dep&amp;oacute;sito es temporal:</target>
        </trans-unit>
        <trans-unit id="404b4b3a784b443893ff8bf31f1dd037577b8b2e" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s break that code apart a bit:</source>
          <target state="translated">Dividamos un poco ese c&amp;oacute;digo:</target>
        </trans-unit>
        <trans-unit id="4729229379e49f59080304c7286d1586582b445a" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s change &lt;code&gt;start/2&lt;/code&gt; once again, to add a supervisor to our tree:</source>
          <target state="translated">Cambiemos &lt;code&gt;start/2&lt;/code&gt; una vez m&amp;aacute;s, para agregar un supervisor a nuestro &amp;aacute;rbol:</target>
        </trans-unit>
        <trans-unit id="1a65af3d4df3dd7789d08b039fbd9ffd187026b1" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s change the &lt;code&gt;KV.Registry&lt;/code&gt; to use ETS tables. The first change is to modify our registry to require a name argument, we will use it to name the ETS table and the registry process itself. ETS names and process names are stored in different locations, so there is no chance of conflicts.</source>
          <target state="translated">Cambiemos el &lt;code&gt;KV.Registry&lt;/code&gt; para usar tablas ETS. El primer cambio es modificar nuestro registro para requerir un argumento de nombre, lo usaremos para nombrar la tabla ETS y el proceso de registro en s&amp;iacute;. Los nombres de ETS y los nombres de procesos se almacenan en diferentes ubicaciones, por lo que no hay posibilidad de conflictos.</target>
        </trans-unit>
        <trans-unit id="9e05a0ba8c59d0c8c376685e9addab95d169eccc" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s check each case, one by one.</source>
          <target state="translated">Revisemos cada caso, uno por uno.</target>
        </trans-unit>
        <trans-unit id="c27f60b2e4915c4a82ea29d51d011f01772e3dd9" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s create a new Mix project. We are going to creatively name it &lt;code&gt;kv_umbrella&lt;/code&gt;, and this new project will have both the existing &lt;code&gt;kv&lt;/code&gt; application and the new &lt;code&gt;kv_server&lt;/code&gt; application inside. The directory structure will look like this:</source>
          <target state="translated">Creemos un nuevo proyecto Mix. Vamos a &lt;code&gt;kv_umbrella&lt;/code&gt; creativa kv_umbrella , y este nuevo proyecto tendr&amp;aacute; tanto la aplicaci&amp;oacute;n &lt;code&gt;kv&lt;/code&gt; existente como la nueva aplicaci&amp;oacute;n &lt;code&gt;kv_server&lt;/code&gt; dentro. La estructura del directorio se ver&amp;aacute; as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="b9686ac5cd9d110e2280341ca7651f1e7a2c3a8f" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s create our command parser at &lt;code&gt;lib/kv_server/command.ex&lt;/code&gt; and start with the doctest:</source>
          <target state="translated">&lt;code&gt;lib/kv_server/command.ex&lt;/code&gt; nuestro analizador de comandos en lib / kv_server / command.ex y comencemos con el doctest:</target>
        </trans-unit>
        <trans-unit id="57da67e011a89dbbfb6c22ba016b496c2bf15d61" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s create our first project by invoking &lt;code&gt;mix new&lt;/code&gt; from the command line. We&amp;rsquo;ll pass the project name as the argument (&lt;code&gt;kv&lt;/code&gt;, in this case), and tell Mix that our main module should be the all-uppercase &lt;code&gt;KV&lt;/code&gt;, instead of the default, which would have been &lt;code&gt;Kv&lt;/code&gt;:</source>
          <target state="translated">Creemos nuestro primer proyecto invocando &lt;code&gt;mix new&lt;/code&gt; desde la l&amp;iacute;nea de comando. Pasaremos el nombre del proyecto como argumento ( &lt;code&gt;kv&lt;/code&gt; , en este caso) y le diremos a Mix que nuestro m&amp;oacute;dulo principal deber&amp;iacute;a ser &lt;code&gt;KV&lt;/code&gt; en may&amp;uacute;sculas , en lugar del predeterminado, que habr&amp;iacute;a sido &lt;code&gt;Kv&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="44ccaac6800d7e69a627f543507cef6aaa36f75a" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s define a module named &lt;code&gt;Hello&lt;/code&gt; in this shell:</source>
          <target state="translated">Definamos un m&amp;oacute;dulo llamado &lt;code&gt;Hello&lt;/code&gt; en este shell:</target>
        </trans-unit>
        <trans-unit id="c3e19d4b698bea8666353bff2803ed53fb2593f3" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s do so by creating a &amp;ldquo;bogus&amp;rdquo; bucket, which is a synchronous request, after &lt;code&gt;Agent.stop/2&lt;/code&gt; in both &amp;ldquo;remove&amp;rdquo; tests at &lt;code&gt;test/kv/registry_test.exs&lt;/code&gt;:</source>
          <target state="translated">Hag&amp;aacute;moslo creando un dep&amp;oacute;sito &quot;falso&quot;, que es una solicitud s&amp;iacute;ncrona, despu&amp;eacute;s de &lt;code&gt;Agent.stop/2&lt;/code&gt; en ambas pruebas de &quot;eliminaci&amp;oacute;n&quot; en &lt;code&gt;test/kv/registry_test.exs&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="78d3183a361ff888bc82b3eb6a4eacbf2fa2a5c0" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s do so by creating a &amp;ldquo;bogus&amp;rdquo; bucket, which is a synchronous request, after &lt;code&gt;Agent.stop/2&lt;/code&gt; in both tests:</source>
          <target state="translated">Hag&amp;aacute;moslo creando un dep&amp;oacute;sito &quot;falso&quot;, que es una solicitud sincr&amp;oacute;nica, despu&amp;eacute;s de &lt;code&gt;Agent.stop/2&lt;/code&gt; en ambas pruebas:</target>
        </trans-unit>
        <trans-unit id="52cc88c9ff893fa670f476f83f7e11b188b0c8fb" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s do this.</source>
          <target state="translated">Hag&amp;aacute;moslo.</target>
        </trans-unit>
        <trans-unit id="87f2c21bc94f91beaecdd70cb4c1e04e5acba348" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s first play with monitors by starting a new console with &lt;code&gt;iex -S mix&lt;/code&gt;:</source>
          <target state="translated">Primero juguemos con monitores iniciando una nueva consola con &lt;code&gt;iex -S mix&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="3cfccd6e33d5a510641ee1fe031db4c15efbf06a" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s get started!</source>
          <target state="translated">&amp;iexcl;Empecemos!</target>
        </trans-unit>
        <trans-unit id="66bbb9d93128da50d0a5fd0f342b723836429324" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s give it a try by running &lt;code&gt;iex kv.exs&lt;/code&gt;:</source>
          <target state="translated">Intent&amp;eacute;moslo ejecutando &lt;code&gt;iex kv.exs&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="5839691ae3f96ef964d421fd3acb9f807e8f4ab6" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s give it a try. Open up &lt;code&gt;lib/kv_server/application.ex&lt;/code&gt;, and let&amp;rsquo;s change the supervisor in the &lt;code&gt;start/2&lt;/code&gt; function to the following:</source>
          <target state="translated">Hagamos un intento. Abra &lt;code&gt;lib/kv_server/application.ex&lt;/code&gt; , y cambiemos el supervisor en la funci&amp;oacute;n &lt;code&gt;start/2&lt;/code&gt; a lo siguiente:</target>
        </trans-unit>
        <trans-unit id="baa34105a5b53a50e8c2b4ac1b991daa285cda4f" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s give the updated supervisor a try inside &lt;code&gt;iex -S mix&lt;/code&gt;:</source>
          <target state="translated">Probemos el supervisor actualizado dentro de &lt;code&gt;iex -S mix&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="56cfa20ba11b54abba073399ca2cc31a1beb82f3" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s go back to the &lt;code&gt;Math&lt;/code&gt; module defined in the previous chapters, add some documentation and save it to the &lt;code&gt;math.ex&lt;/code&gt; file:</source>
          <target state="translated">Regresemos al m&amp;oacute;dulo de &lt;code&gt;Math&lt;/code&gt; definido en los cap&amp;iacute;tulos anteriores, agreguemos documentaci&amp;oacute;n y gu&amp;aacute;rdelo en el archivo &lt;code&gt;math.ex&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="3e193874a827cfe3989b47093b1f35bf1d889de9" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s implement the integration test in &lt;code&gt;test/kv_server_test.exs&lt;/code&gt; as shown below:</source>
          <target state="translated">Implementemos la prueba de integraci&amp;oacute;n en &lt;code&gt;test/kv_server_test.exs&lt;/code&gt; como se muestra a continuaci&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="f3d61bf295e16bbbb18d9e86a778638333f98c0d" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s implement those steps. Move to the &lt;code&gt;apps/kv_server&lt;/code&gt; application, open up &lt;code&gt;lib/kv_server.ex&lt;/code&gt;, and add the following functions:</source>
          <target state="translated">Implementemos esos pasos. Vaya a la &lt;code&gt;apps/kv_server&lt;/code&gt; , abra &lt;code&gt;lib/kv_server.ex&lt;/code&gt; y agregue las siguientes funciones:</target>
        </trans-unit>
        <trans-unit id="39e760533fa67c3a16cee4f61982aced80e52f83" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s learn how to do that.</source>
          <target state="translated">Aprendamos a hacer eso.</target>
        </trans-unit>
        <trans-unit id="95fbfcaeec6c28ee848bbee5b849155b25cee14c" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s look at another example to understand how to define more complex types. Say we have a &lt;code&gt;LousyCalculator&lt;/code&gt; module, which performs the usual arithmetic operations (sum, product, and so on) but, instead of returning numbers, it returns tuples with the result of an operation as the first element and a random remark as the second element.</source>
          <target state="translated">Veamos otro ejemplo para entender c&amp;oacute;mo definir tipos m&amp;aacute;s complejos. Digamos que tenemos un m&amp;oacute;dulo &lt;code&gt;LousyCalculator&lt;/code&gt; , que realiza las operaciones aritm&amp;eacute;ticas habituales (suma, producto, etc.) pero, en lugar de devolver n&amp;uacute;meros, devuelve tuplas con el resultado de una operaci&amp;oacute;n como primer elemento y un comentario aleatorio como segundo elemento. .</target>
        </trans-unit>
        <trans-unit id="cf8ebea7b04a470e898c361b3c01206eb4a8342a" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s make another example using streams. Since the &lt;code&gt;IO&lt;/code&gt; module provides streams (that are both &lt;code&gt;Enumerable&lt;/code&gt;s and &lt;code&gt;Collectable&lt;/code&gt;s), an echo terminal that echoes back the upcased version of whatever is typed can be implemented using comprehensions:</source>
          <target state="translated">Hagamos otro ejemplo usando streams. Dado que el m&amp;oacute;dulo &lt;code&gt;IO&lt;/code&gt; proporciona flujos (que son tanto &lt;code&gt;Enumerable&lt;/code&gt; s como &lt;code&gt;Collectable&lt;/code&gt; ), se puede implementar un terminal de eco que repita la versi&amp;oacute;n mejorada de lo que se escriba mediante comprensiones:</target>
        </trans-unit>
        <trans-unit id="ed8179b6236a6127fea762c1dc4859e7ff9ad41e" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s move inside the apps directory and start building &lt;code&gt;kv_server&lt;/code&gt;. This time, we are going to pass the &lt;code&gt;--sup&lt;/code&gt; flag, which will tell Mix to generate a supervision tree automatically for us, instead of building one manually as we did in previous chapters:</source>
          <target state="translated">Vayamos dentro del directorio de aplicaciones y comencemos a construir &lt;code&gt;kv_server&lt;/code&gt; . Esta vez, vamos a pasar la bandera &lt;code&gt;--sup&lt;/code&gt; , que le dir&amp;aacute; a Mix que genere un &amp;aacute;rbol de supervisi&amp;oacute;n autom&amp;aacute;ticamente para nosotros, en lugar de construir uno manualmente como hicimos en cap&amp;iacute;tulos anteriores:</target>
        </trans-unit>
        <trans-unit id="9abc4b0404a0faf043a413238fb9c0b85596b7d3" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s move to the next chapter. We will finally make our system distributed by adding a bucket routing mechanism. We will use this opportunity to also improve our testing chops.</source>
          <target state="translated">Pasemos al siguiente cap&amp;iacute;tulo. Finalmente haremos que nuestro sistema sea distribuido agregando un mecanismo de enrutamiento de cubos. Aprovecharemos esta oportunidad para mejorar tambi&amp;eacute;n nuestras habilidades de prueba.</target>
        </trans-unit>
        <trans-unit id="678e1823b091b3645ecead3457dcbde5e2e4d606" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s now define a release for &lt;code&gt;:bar&lt;/code&gt;. One first step could be to define a release exactly like &lt;code&gt;foo&lt;/code&gt; inside &lt;code&gt;mix.exs&lt;/code&gt;. Additionally we will set the &lt;code&gt;cookie&lt;/code&gt; option on both releases to &lt;code&gt;weknoweachother&lt;/code&gt; in order for them to allow connections from each other. See the &lt;a href=&quot;http://erlang.org/doc/reference_manual/distributed.html&quot;&gt;Distributed Erlang Documentation&lt;/a&gt; for further information on this topic:</source>
          <target state="translated">Definamos ahora una versi&amp;oacute;n para &lt;code&gt;:bar&lt;/code&gt; . Un primer paso podr&amp;iacute;a ser definir una versi&amp;oacute;n exactamente como &lt;code&gt;foo&lt;/code&gt; dentro de &lt;code&gt;mix.exs&lt;/code&gt; . Adem&amp;aacute;s, configuraremos la opci&amp;oacute;n de &lt;code&gt;cookie&lt;/code&gt; s en ambas versiones para que &lt;code&gt;weknoweachother&lt;/code&gt; a la otra para que permitan conexiones entre s&amp;iacute;. Consulte la &lt;a href=&quot;http://erlang.org/doc/reference_manual/distributed.html&quot;&gt;documentaci&amp;oacute;n distribuida de Erlang&lt;/a&gt; para obtener m&amp;aacute;s informaci&amp;oacute;n sobre este tema:</target>
        </trans-unit>
        <trans-unit id="907c5a40686f1ad77133ab1fb7ed4fb9044e980b" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s now define a release for &lt;code&gt;:bar&lt;/code&gt;. One first step could be to define a release exactly like &lt;code&gt;foo&lt;/code&gt; inside &lt;code&gt;mix.exs&lt;/code&gt;:</source>
          <target state="translated">Definamos ahora una versi&amp;oacute;n para &lt;code&gt;:bar&lt;/code&gt; . Un primer paso podr&amp;iacute;a ser definir un lanzamiento exactamente como &lt;code&gt;foo&lt;/code&gt; dentro de &lt;code&gt;mix.exs&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="5a2917bda9d2d2ade9ad2c9418f4b2b9f81e1083" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s now see how we can use the power of recursion to sum a list of numbers:</source>
          <target state="translated">Veamos ahora c&amp;oacute;mo podemos usar el poder de la recursividad para sumar una lista de n&amp;uacute;meros:</target>
        </trans-unit>
        <trans-unit id="df2a11fdb0c0854864b329de4b39854b42d8a291" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s put it all together and send messages between processes:</source>
          <target state="translated">Juntemos todo y enviemos mensajes entre procesos:</target>
        </trans-unit>
        <trans-unit id="2fe45cc7fb55e4c742c4dc05c2cb987f67c6d233" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s recap what is happening. Whenever we invoke &lt;code&gt;iex -S mix&lt;/code&gt;, it automatically starts our application by calling &lt;code&gt;Application.start(:kv)&lt;/code&gt;, which then invokes the application callback. The application callback job is to start a &lt;strong&gt;supervision tree&lt;/strong&gt;. Right now, we only have a single supervisor, but sometimes a supervisor is also supervised, giving it a shape of a tree. So far, our supervisor has a single child, a &lt;code&gt;KV.Registry&lt;/code&gt;, which is started with name &lt;code&gt;KV.Registry&lt;/code&gt;.</source>
          <target state="translated">Recapitulemos lo que est&amp;aacute; sucediendo. Siempre que invocamos &lt;code&gt;iex -S mix&lt;/code&gt; , autom&amp;aacute;ticamente inicia nuestra aplicaci&amp;oacute;n llamando a &lt;code&gt;Application.start(:kv)&lt;/code&gt; , que luego invoca la devoluci&amp;oacute;n de llamada de la aplicaci&amp;oacute;n. El trabajo de devoluci&amp;oacute;n de llamada de la aplicaci&amp;oacute;n es iniciar un &lt;strong&gt;&amp;aacute;rbol de supervisi&amp;oacute;n&lt;/strong&gt; . En este momento, solo tenemos un supervisor, pero a veces tambi&amp;eacute;n se supervisa un supervisor, d&amp;aacute;ndole forma de &amp;aacute;rbol. Hasta ahora, nuestro supervisor tiene un solo hijo, un &lt;code&gt;KV.Registry&lt;/code&gt; , que se inicia con el nombre &lt;code&gt;KV.Registry&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="36a4ac644ae7aee151cedc8249d95bbb7eb1151f" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s recap what is happening. Whenever we invoke &lt;code&gt;iex -S mix&lt;/code&gt;, it automatically starts our application by calling &lt;code&gt;Application.start(:kv)&lt;/code&gt;, which then invokes the application callback. The application callback&amp;rsquo;s job is to start a &lt;strong&gt;supervision tree&lt;/strong&gt;. Right now, we only have a single supervisor, but sometimes a supervisor is also supervised, giving it a shape of a tree. So far, our supervisor has a single child, a &lt;code&gt;KV.Registry&lt;/code&gt;, which is started with name &lt;code&gt;KV.Registry&lt;/code&gt;.</source>
          <target state="translated">Recapitulemos lo que est&amp;aacute; sucediendo. Siempre que invocamos &lt;code&gt;iex -S mix&lt;/code&gt; , autom&amp;aacute;ticamente inicia nuestra aplicaci&amp;oacute;n llamando a &lt;code&gt;Application.start(:kv)&lt;/code&gt; , que luego invoca la devoluci&amp;oacute;n de llamada de la aplicaci&amp;oacute;n. El trabajo de la devoluci&amp;oacute;n de llamada de la aplicaci&amp;oacute;n es iniciar un &lt;strong&gt;&amp;aacute;rbol de supervisi&amp;oacute;n&lt;/strong&gt; . En este momento, solo tenemos un supervisor, pero a veces tambi&amp;eacute;n se supervisa un supervisor, d&amp;aacute;ndole forma de &amp;aacute;rbol. Hasta ahora, nuestro supervisor tiene un solo hijo, un &lt;code&gt;KV.Registry&lt;/code&gt; , que comienza con el nombre &lt;code&gt;KV.Registry&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="325ed6370b4676504d3b00af4ba0fd26fde98423" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s reimplement the server callbacks to fix the bug and make the test pass. First, we will modify the GenServer state to two dictionaries: one that contains &lt;code&gt;name -&amp;gt; pid&lt;/code&gt; and another that holds &lt;code&gt;ref -&amp;gt; name&lt;/code&gt;. Then we need to monitor the buckets on &lt;code&gt;handle_cast/2&lt;/code&gt; as well as implement a &lt;code&gt;handle_info/2&lt;/code&gt; callback to handle the monitoring messages. The full server callbacks implementation is shown below:</source>
          <target state="translated">Reimplementemos las devoluciones de llamada del servidor para corregir el error y hacer que la prueba pase. Primero, modificaremos el estado de GenServer a dos diccionarios: uno que contiene &lt;code&gt;name -&amp;gt; pid&lt;/code&gt; y otro que contiene &lt;code&gt;ref -&amp;gt; name&lt;/code&gt; . Luego, necesitamos monitorear los &lt;code&gt;handle_cast/2&lt;/code&gt; en handle_cast / 2 , as&amp;iacute; como implementar una devoluci&amp;oacute;n &lt;code&gt;handle_info/2&lt;/code&gt; llamada handle_info / 2 para manejar los mensajes de monitoreo. La implementaci&amp;oacute;n completa de devoluciones de llamada del servidor se muestra a continuaci&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="5859e594dd7ff75c74328e1ec62ef118e79b5173" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s rewrite the test case to use callbacks:</source>
          <target state="translated">Reescribamos el caso de prueba para usar devoluciones de llamada:</target>
        </trans-unit>
        <trans-unit id="7af0235d132a57562aba639e633d1cb04c26a76e" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s run the tests once again. This time though, we will pass the &lt;code&gt;--trace&lt;/code&gt; option:</source>
          <target state="translated">Ejecutemos las pruebas una vez m&amp;aacute;s. Esta vez, sin embargo, pasaremos la opci&amp;oacute;n &lt;code&gt;--trace&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="2aced57d244d27459d17d10f2ab48937597ad351" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s see in more detail what happens when you request &lt;code&gt;IO.write(pid, binary)&lt;/code&gt;. The &lt;code&gt;IO&lt;/code&gt; module sends a message to the process identified by &lt;code&gt;pid&lt;/code&gt; with the desired operation. A small ad-hoc process can help us see it:</source>
          <target state="translated">Veamos con m&amp;aacute;s detalle qu&amp;eacute; sucede cuando solicita &lt;code&gt;IO.write(pid, binary)&lt;/code&gt; . El m&amp;oacute;dulo &lt;code&gt;IO&lt;/code&gt; env&amp;iacute;a un mensaje al proceso identificado por &lt;code&gt;pid&lt;/code&gt; con la operaci&amp;oacute;n deseada. Un peque&amp;ntilde;o proceso ad-hoc puede ayudarnos a verlo:</target>
        </trans-unit>
        <trans-unit id="67af3c48055ca2b3c2d9f546637c104f51f74e74" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s see this in practice. Start a console with &lt;code&gt;iex -S mix&lt;/code&gt; and try:</source>
          <target state="translated">Veamos esto en la pr&amp;aacute;ctica. Inicie una consola con &lt;code&gt;iex -S mix&lt;/code&gt; e intente:</target>
        </trans-unit>
        <trans-unit id="7dee2fe998155b6e01d27bc48c7887e983907b48" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s slightly change our children definition (in &lt;code&gt;KV.Supervisor.init/1&lt;/code&gt;) to be a list of tuples instead of a list of atoms:</source>
          <target state="translated">Cambiemos ligeramente nuestra definici&amp;oacute;n de hijos (en &lt;code&gt;KV.Supervisor.init/1&lt;/code&gt; ) para que sea una lista de tuplas en lugar de una lista de &amp;aacute;tomos:</target>
        </trans-unit>
        <trans-unit id="1bd92f7c84f63683d6101c71449ed203a7800ec9" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s start &lt;code&gt;iex&lt;/code&gt; with the module above:</source>
          <target state="translated">Comencemos &lt;code&gt;iex&lt;/code&gt; con el m&amp;oacute;dulo anterior:</target>
        </trans-unit>
        <trans-unit id="9d1661fc8a81e848a401464f1c2a605c5da459d3" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s start a new project using &lt;code&gt;mix new&lt;/code&gt;. This new project will be named &lt;code&gt;kv_umbrella&lt;/code&gt; and we need to pass the &lt;code&gt;--umbrella&lt;/code&gt; option when creating it. Do not create this new project inside the existing &lt;code&gt;kv&lt;/code&gt; project!</source>
          <target state="translated">Comencemos un nuevo proyecto usando &lt;code&gt;mix new&lt;/code&gt; . Este nuevo proyecto se llamar&amp;aacute; &lt;code&gt;kv_umbrella&lt;/code&gt; y necesitamos pasar la opci&amp;oacute;n &lt;code&gt;--umbrella&lt;/code&gt; al crearlo. &amp;iexcl;No cree este nuevo proyecto dentro del proyecto &lt;code&gt;kv&lt;/code&gt; existente !</target>
        </trans-unit>
        <trans-unit id="9f966b08bc66cb4042c8b3f3f1b9e2153b0cd851" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s start by creating a module that defines and imports the &lt;code&gt;test&lt;/code&gt; macro when used:</source>
          <target state="translated">Comencemos por crear un m&amp;oacute;dulo que defina e importe la macro de &lt;code&gt;test&lt;/code&gt; cuando se use:</target>
        </trans-unit>
        <trans-unit id="a0fddb1a8907c2cf50e04a25da3983ae6441dda6" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s start with a test that describes how we want the registry to behave if a bucket stops or crashes:</source>
          <target state="translated">Comencemos con una prueba que describe c&amp;oacute;mo queremos que se comporte el registro si un dep&amp;oacute;sito se detiene o falla:</target>
        </trans-unit>
        <trans-unit id="1fa11d581397d95e04f2020a68e066fb3e60d04a" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s take a brief look at those generated files.</source>
          <target state="translated">Echemos un vistazo breve a esos archivos generados.</target>
        </trans-unit>
        <trans-unit id="4fd5f73d356b99a110fa9e76edf1bdd8cb9fd455" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s take a deeper look at &lt;code&gt;Enumerable&lt;/code&gt; and, while we&amp;rsquo;re at it, its lazy counterpart, &lt;code&gt;Stream&lt;/code&gt;.</source>
          <target state="translated">Echemos un vistazo m&amp;aacute;s profundo a &lt;code&gt;Enumerable&lt;/code&gt; y, ya que estamos en ello, su contraparte perezosa, &lt;code&gt;Stream&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="04e68357588d11fea0410465b619814c2039a742" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s take a deeper look at &lt;code&gt;Enumerable&lt;/code&gt;s and, while we&amp;rsquo;re at it, their lazy counterpart, &lt;code&gt;Stream&lt;/code&gt;s.</source>
          <target state="translated">Echemos un vistazo m&amp;aacute;s profundo a &lt;code&gt;Enumerable&lt;/code&gt; s sy, ya que estamos en eso, su contraparte perezosa, &lt;code&gt;Stream&lt;/code&gt; s.</target>
        </trans-unit>
        <trans-unit id="91b289146778a1a9ac545041f63405e023909059" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s take the supervior for a spin:</source>
          <target state="translated">Echemos un vistazo al supervior:</target>
        </trans-unit>
        <trans-unit id="753880cccfa8315b0ba2213f8e81608e972f525e" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s take the supervisor for a spin:</source>
          <target state="translated">Demos una vuelta al supervisor:</target>
        </trans-unit>
        <trans-unit id="3b01013918cb505bb54dd81a9af06894999c0120" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s write a test to verify our router works. Create a file named &lt;code&gt;test/kv/router_test.exs&lt;/code&gt; containing:</source>
          <target state="translated">Escribamos una prueba para verificar que nuestro enrutador funciona. Cree un archivo llamado &lt;code&gt;test/kv/router_test.exs&lt;/code&gt; que contenga:</target>
        </trans-unit>
        <trans-unit id="fa012006b966bf0a6eab57a8968215cebf134379" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s write some code!</source>
          <target state="translated">&amp;iexcl;Escribamos un c&amp;oacute;digo!</target>
        </trans-unit>
        <trans-unit id="c67023947ca555b00e6d88ffa6d4701c0c3be370" translate="yes" xml:space="preserve">
          <source>Let's build a stream and then enumerate it:</source>
          <target state="translated">Construyamos un arroyo y luego lo enumeremos:</target>
        </trans-unit>
        <trans-unit id="af13b7ca9a49d1b748a7f4486807d45530939bbd" translate="yes" xml:space="preserve">
          <source>Let's create a document by concatenating two strings with a break between them:</source>
          <target state="translated">Vamos a crear un documento concatenando dos cuerdas con una ruptura entre ellas:</target>
        </trans-unit>
        <trans-unit id="5d78dfa30452eb74635f4fb43b15b17251e16913" translate="yes" xml:space="preserve">
          <source>Let's explore the basic functions from the &lt;a href=&quot;http://www.erlang.org/doc/man/sys.html&quot;&gt;&lt;code&gt;:sys&lt;/code&gt; module&lt;/a&gt; used for debugging:</source>
          <target state="translated">Exploremos las funciones b&amp;aacute;sicas del &lt;a href=&quot;http://www.erlang.org/doc/man/sys.html&quot;&gt;m&amp;oacute;dulo &lt;/a&gt; &lt;code&gt;:sys&lt;/code&gt; que se utiliza para depurar:</target>
        </trans-unit>
        <trans-unit id="688ee6c95315db8b18bfec15fee2dfd168073eec" translate="yes" xml:space="preserve">
          <source>Let's fix our macro:</source>
          <target state="translated">Arreglemos nuestra macro:</target>
        </trans-unit>
        <trans-unit id="d7fff4c2e7484327d49d843539125f18766ef59b" translate="yes" xml:space="preserve">
          <source>Let's give it a try. First start a new shell:</source>
          <target state="translated">Vamos a intentarlo.Primero empieza un nuevo cascarón:</target>
        </trans-unit>
        <trans-unit id="385a594a813b358193b288faec070338a76a46ba" translate="yes" xml:space="preserve">
          <source>Let's look at a quick case study: we want to check that a function argument is an even or odd integer. With pattern matching, this is impossible to do since there are infinite integers, and thus we can't pattern match on the single even/odd numbers. Let's focus on checking for even numbers since checking for odd ones is almost identical.</source>
          <target state="translated">Veamos un rápido caso de estudio:queremos comprobar que un argumento de función es un entero par o impar.Con la coincidencia de patrones,esto es imposible de hacer ya que hay infinitos números enteros,y por lo tanto no podemos hacer coincidencia de patrones en los números pares/impares.Centrémonos en comprobar los números pares ya que comprobar los impares es casi idéntico.</target>
        </trans-unit>
        <trans-unit id="af9fd18fc73d83d65ff9f7021afd43158fe10001" translate="yes" xml:space="preserve">
          <source>Let's see a simple example that shows the difference between functions and macros:</source>
          <target state="translated">Veamos un ejemplo sencillo que muestra la diferencia entre funciones y macros:</target>
        </trans-unit>
        <trans-unit id="f17d3ddea9ff5b443102e2f1aa7d529504a09b53" translate="yes" xml:space="preserve">
          <source>Let's see a simple example. Imagine that you implement a library that breaks a string in two parts based on the first occurrence of the dash &lt;code&gt;-&lt;/code&gt; character:</source>
          <target state="translated">Veamos un ejemplo sencillo. Imag&amp;iacute;nese que implemente una biblioteca que rompe una cadena en dos partes sobre la base de la primera aparici&amp;oacute;n del tablero &lt;code&gt;-&lt;/code&gt; personaje:</target>
        </trans-unit>
        <trans-unit id="4c56c3643f8f926eb1db1e031cb602d1e685c584" translate="yes" xml:space="preserve">
          <source>Let's see an example &lt;code&gt;MyApp.application/0&lt;/code&gt; function:</source>
          <target state="translated">Veamos un ejemplo de funci&amp;oacute;n &lt;code&gt;MyApp.application/0&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="a086f0aa8dc3f13f368da5ddef024d84bd14e45f" translate="yes" xml:space="preserve">
          <source>Let's see an example of a guard used in a function clause:</source>
          <target state="translated">Veamos un ejemplo de un guardia usado en una cláusula de función:</target>
        </trans-unit>
        <trans-unit id="eb3e603df7a85750e6414b0eb382239bbf870bfb" translate="yes" xml:space="preserve">
          <source>Let's see an example.</source>
          <target state="translated">Veamos un ejemplo.</target>
        </trans-unit>
        <trans-unit id="2bb9a3671c7cc45e630956b53927eeec08220af2" translate="yes" xml:space="preserve">
          <source>Let's see how we could use those functions for debugging the stack server we defined earlier.</source>
          <target state="translated">Veamos cómo podríamos usar esas funciones para depurar el servidor de pila que definimos antes.</target>
        </trans-unit>
        <trans-unit id="9944bcda5d8aef46440ac764e0d71869f8b3eb89" translate="yes" xml:space="preserve">
          <source>Let's see some examples. The code below:</source>
          <target state="translated">Veamos algunos ejemplos.El código de abajo:</target>
        </trans-unit>
        <trans-unit id="9a9747f9ce9d128c721ed4b062d8c863cdde1877" translate="yes" xml:space="preserve">
          <source>Let's start with a code example and then explore the available callbacks. Imagine we want a GenServer that works like a stack, allowing us to push and pop elements:</source>
          <target state="translated">Empecemos con un ejemplo de código y luego exploremos las llamadas disponibles.Imagina que queremos un GenServer que funcione como una pila,permitiéndonos empujar y hacer estallar elementos:</target>
        </trans-unit>
        <trans-unit id="45a0d37d2635e9d8af766d2643fce24860a449d3" translate="yes" xml:space="preserve">
          <source>Let's start with an example:</source>
          <target state="translated">Empecemos con un ejemplo:</target>
        </trans-unit>
        <trans-unit id="c1e622e103cbf1ed1953980d1ec1467158ec5553" translate="yes" xml:space="preserve">
          <source>Let's suppose you created your own &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#if/2&quot;&gt;&lt;code&gt;if/2&lt;/code&gt;&lt;/a&gt; implementation in the module &lt;code&gt;MyMacros&lt;/code&gt;. If you want to invoke it, you need to first explicitly require the &lt;code&gt;MyMacros&lt;/code&gt;:</source>
          <target state="translated">Supongamos que cre&amp;oacute; su propia implementaci&amp;oacute;n &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#if/2&quot;&gt; &lt;code&gt;if/2&lt;/code&gt; &lt;/a&gt; en el m&amp;oacute;dulo &lt;code&gt;MyMacros&lt;/code&gt; . Si desea invocarlo, primero debe &lt;code&gt;MyMacros&lt;/code&gt; expl&amp;iacute;citamente MyMacros :</target>
        </trans-unit>
        <trans-unit id="c498b7be97563d9e009446e491717478748954ec" translate="yes" xml:space="preserve">
          <source>Let's suppose you created your own &lt;a href=&quot;kernel#if/2&quot;&gt;&lt;code&gt;if/2&lt;/code&gt;&lt;/a&gt; implementation in the module &lt;code&gt;MyMacros&lt;/code&gt;. If you want to invoke it, you need to first explicitly require the &lt;code&gt;MyMacros&lt;/code&gt;:</source>
          <target state="translated">Supongamos que cre&amp;oacute; su propia implementaci&amp;oacute;n &lt;a href=&quot;kernel#if/2&quot;&gt; &lt;code&gt;if/2&lt;/code&gt; &lt;/a&gt; en el m&amp;oacute;dulo &lt;code&gt;MyMacros&lt;/code&gt; . Si desea invocarlo, primero debe &lt;code&gt;MyMacros&lt;/code&gt; expl&amp;iacute;citamente MyMacros :</target>
        </trans-unit>
        <trans-unit id="1a0f18507825fffb50cb06a0af30333ce99e8402" translate="yes" xml:space="preserve">
          <source>Let's suppose you want to investigate what is happening with some particular function. By invoking &lt;a href=&quot;#pry/0&quot;&gt;&lt;code&gt;IEx.pry/0&lt;/code&gt;&lt;/a&gt; from the function, IEx will allow you to access its binding (variables), verify its lexical information and access the process information. Let's see an example:</source>
          <target state="translated">Supongamos que desea investigar qu&amp;eacute; est&amp;aacute; sucediendo con alguna funci&amp;oacute;n en particular. Al invocar &lt;a href=&quot;#pry/0&quot;&gt; &lt;code&gt;IEx.pry/0&lt;/code&gt; &lt;/a&gt; desde la funci&amp;oacute;n, IEx le permitir&amp;aacute; acceder a su enlace (variables), verificar su informaci&amp;oacute;n l&amp;eacute;xica y acceder a la informaci&amp;oacute;n del proceso. Veamos un ejemplo:</target>
        </trans-unit>
        <trans-unit id="167e9ac5d10b20cb0dda56b181fe66788b49d6e5" translate="yes" xml:space="preserve">
          <source>Let's suppose you want to investigate what is happening with some particular function. By invoking &lt;a href=&quot;iex#pry/0&quot;&gt;&lt;code&gt;IEx.pry/0&lt;/code&gt;&lt;/a&gt; from the function, IEx will allow you to access its binding (variables), verify its lexical information and access the process information. Let's see an example:</source>
          <target state="translated">Supongamos que desea investigar qu&amp;eacute; est&amp;aacute; sucediendo con alguna funci&amp;oacute;n en particular. Al invocar &lt;a href=&quot;iex#pry/0&quot;&gt; &lt;code&gt;IEx.pry/0&lt;/code&gt; &lt;/a&gt; desde la funci&amp;oacute;n, IEx le permitir&amp;aacute; acceder a su enlace (variables), verificar su informaci&amp;oacute;n l&amp;eacute;xica y acceder a la informaci&amp;oacute;n del proceso. Veamos un ejemplo:</target>
        </trans-unit>
        <trans-unit id="810f288f1e4fdf45c23a3b902942dd7960a5c22f" translate="yes" xml:space="preserve">
          <source>Let's understand what the &lt;code&gt;:shutdown&lt;/code&gt; and &lt;code&gt;:restart&lt;/code&gt; options control.</source>
          <target state="translated">Entendamos qu&amp;eacute; controlan las opciones &lt;code&gt;:shutdown&lt;/code&gt; y &lt;code&gt;:restart&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ed47f098118b3a4908065115144a054c9afe75d6" translate="yes" xml:space="preserve">
          <source>Levels</source>
          <target state="translated">Levels</target>
        </trans-unit>
        <trans-unit id="5ff76884a1b9f933647dc46c0efb08cd23ce4c72" translate="yes" xml:space="preserve">
          <source>Lexical scope</source>
          <target state="translated">Alcance léxico</target>
        </trans-unit>
        <trans-unit id="b8100f5ba8bd048a7cf11d116fbbd73130c3c6f5" translate="yes" xml:space="preserve">
          <source>Library</source>
          <target state="translated">Library</target>
        </trans-unit>
        <trans-unit id="b7e01bf49268dbb685a7684daf71674fc58c2f88" translate="yes" xml:space="preserve">
          <source>Library Guidelines</source>
          <target state="translated">Directrices de la biblioteca</target>
        </trans-unit>
        <trans-unit id="ec793eb7fd1d6c9106d97e622f4fcbf89e666960" translate="yes" xml:space="preserve">
          <source>Licensed under the Apache License, Version 2.0.</source>
          <target state="translated">Licenciado bajo la licencia de Apache,versión 2.0.</target>
        </trans-unit>
        <trans-unit id="8c32d4b808a84de40c883809049bbfd2ca84a901" translate="yes" xml:space="preserve">
          <source>Like with &lt;a href=&quot;enum&quot;&gt;&lt;code&gt;Enum&lt;/code&gt;&lt;/a&gt;, the functions in this module work in linear time. This means that, the time it takes to perform an operation grows at the same rate as the length of the list. This is expected on operations such as &lt;a href=&quot;stream#map/2&quot;&gt;&lt;code&gt;Stream.map/2&lt;/code&gt;&lt;/a&gt;. After all, if we want to traverse every element on a stream, the longer the stream, the more elements we need to traverse, and the longer it will take.</source>
          <target state="translated">Al igual que con &lt;a href=&quot;enum&quot;&gt; &lt;code&gt;Enum&lt;/code&gt; &lt;/a&gt; , las funciones de este m&amp;oacute;dulo funcionan en tiempo lineal. Esto significa que el tiempo que lleva realizar una operaci&amp;oacute;n crece al mismo ritmo que la longitud de la lista. Esto se espera en operaciones como &lt;a href=&quot;stream#map/2&quot;&gt; &lt;code&gt;Stream.map/2&lt;/code&gt; &lt;/a&gt; . Despu&amp;eacute;s de todo, si queremos atravesar todos los elementos de una secuencia, cuanto m&amp;aacute;s larga sea la secuencia, m&amp;aacute;s elementos tendremos que atravesar y m&amp;aacute;s tiempo llevar&amp;aacute;.</target>
        </trans-unit>
        <trans-unit id="9a69b557caf2f4f9ed4d8f872b75f17d33faa2d9" translate="yes" xml:space="preserve">
          <source>Like with &lt;a href=&quot;https://hexdocs.pm/elixir/Enum.html&quot;&gt;&lt;code&gt;Enum&lt;/code&gt;&lt;/a&gt;, the functions in this module work in linear time. This means that, the time it takes to perform an operation grows at the same rate as the length of the list. This is expected on operations such as &lt;a href=&quot;#map/2&quot;&gt;&lt;code&gt;Stream.map/2&lt;/code&gt;&lt;/a&gt;. After all, if we want to traverse every element on a stream, the longer the stream, the more elements we need to traverse, and the longer it will take.</source>
          <target state="translated">Al igual que con &lt;a href=&quot;https://hexdocs.pm/elixir/Enum.html&quot;&gt; &lt;code&gt;Enum&lt;/code&gt; &lt;/a&gt; , las funciones de este m&amp;oacute;dulo funcionan en tiempo lineal. Esto significa que, el tiempo que se tarda en realizar una operaci&amp;oacute;n crece al mismo ritmo que la longitud de la lista. Esto se espera en operaciones como &lt;a href=&quot;#map/2&quot;&gt; &lt;code&gt;Stream.map/2&lt;/code&gt; &lt;/a&gt; . Despu&amp;eacute;s de todo, si queremos atravesar todos los elementos de una secuencia, cuanto m&amp;aacute;s larga sea la secuencia, m&amp;aacute;s elementos tendremos que atravesar y m&amp;aacute;s tiempo llevar&amp;aacute;.</target>
        </trans-unit>
        <trans-unit id="e959a6b5621b2dae8ab30d3d3f44c9b21fd9caf5" translate="yes" xml:space="preserve">
          <source>Limit for when a certain time zone period begins or ends.</source>
          <target state="translated">Límite para cuando comienza o termina un determinado período de zona horaria.</target>
        </trans-unit>
        <trans-unit id="447809eeca7d1b001940f2b5c2552166d7274fa3" translate="yes" xml:space="preserve">
          <source>Line &lt;code&gt;0&lt;/code&gt; and column &lt;code&gt;0&lt;/code&gt; would mean the top left corner.</source>
          <target state="translated">La l&amp;iacute;nea &lt;code&gt;0&lt;/code&gt; y la columna &lt;code&gt;0&lt;/code&gt; significar&amp;iacute;an la esquina superior izquierda.</target>
        </trans-unit>
        <trans-unit id="f75f7d7f1f9d02250730e14081c315ebe6091bed" translate="yes" xml:space="preserve">
          <source>Line numbers are one-based, and column numbers in a range are zero-based and refer to the cursor position at the start of the character at that index. For example, to indicate that a diagnostic applies to the first &lt;code&gt;n&lt;/code&gt; characters of the first line, the range would be &lt;code&gt;{1, 0, 1, n}&lt;/code&gt;.</source>
          <target state="translated">Los n&amp;uacute;meros de l&amp;iacute;nea se basan en uno y los n&amp;uacute;meros de columna en un rango se basan en cero y se refieren a la posici&amp;oacute;n del cursor al comienzo del car&amp;aacute;cter en ese &amp;iacute;ndice. Por ejemplo, para indicar que un diagn&amp;oacute;stico se aplica a los primeros &lt;code&gt;n&lt;/code&gt; caracteres de la primera l&amp;iacute;nea, el rango ser&amp;iacute;a &lt;code&gt;{1, 0, 1, n}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="88d6c7e0d9491c204ea28cf1ccec11cd1021b58d" translate="yes" xml:space="preserve">
          <source>Linked lists hold zero, one, or more elements in the chosen order.</source>
          <target state="translated">Las listas enlazadas contienen cero,uno o más elementos en el orden elegido.</target>
        </trans-unit>
        <trans-unit id="a5f54e0f2d31735fc8356d4c643062d7468cc599" translate="yes" xml:space="preserve">
          <source>Linking</source>
          <target state="translated">Linking</target>
        </trans-unit>
        <trans-unit id="fce9e7983aa4d178575a43583fbc0a75230dea86" translate="yes" xml:space="preserve">
          <source>Linking can also be done manually by calling &lt;code&gt;Process.link/1&lt;/code&gt;. We recommend that you take a look at &lt;a href=&quot;https://hexdocs.pm/elixir/Process.html&quot;&gt;the &lt;code&gt;Process&lt;/code&gt; module&lt;/a&gt; for other functionality provided by processes.</source>
          <target state="translated">La vinculaci&amp;oacute;n tambi&amp;eacute;n se puede realizar manualmente llamando a &lt;code&gt;Process.link/1&lt;/code&gt; . Le recomendamos que eche un vistazo a &lt;a href=&quot;https://hexdocs.pm/elixir/Process.html&quot;&gt;la &lt;code&gt;Process&lt;/code&gt; m&amp;oacute;dulo&lt;/a&gt; para otra funcionalidad proporcionada por procesos.</target>
        </trans-unit>
        <trans-unit id="014bcd654c60d5250fad2123b073b9c0ac3340f6" translate="yes" xml:space="preserve">
          <source>Links</source>
          <target state="translated">Links</target>
        </trans-unit>
        <trans-unit id="5bf3859293f6be21536ffe679146ee6401148648" translate="yes" xml:space="preserve">
          <source>Links are bi-directional. If you link two processes and one of them crashes, the other side will crash too (unless it is trapping exits). A monitor is uni-directional: only the monitoring process will receive notifications about the monitored one. In other words: use links when you want linked crashes, and monitors when you just want to be informed of crashes, exits, and so on.</source>
          <target state="translated">Los enlaces son bidireccionales.Si enlazas dos procesos y uno de ellos se bloquea,el otro lado también se bloqueará (a menos que esté atrapando salidas).Un monitor es unidireccional:sólo el proceso de monitorización recibirá notificaciones sobre el monitorizado.En otras palabras:usa los enlaces cuando quieras colapsos vinculados,y los monitores cuando quieras ser informado de colapsos,salidas,etc.</target>
        </trans-unit>
        <trans-unit id="b3e008dc1478680d69d7d944ea5e97681e447863" translate="yes" xml:space="preserve">
          <source>Links are bidirectional, which implies that a crash in a bucket will crash the registry. Although we now have the supervisor, which guarantees the registry will be back up and running, crashing the registry still means we lose all data associating bucket names to their respective processes.</source>
          <target state="translated">Los enlaces son bidireccionales,lo que implica que un choque en un cubo hará que el registro se caiga.Aunque ahora tenemos el supervisor,que garantiza que el registro estará de nuevo en funcionamiento,estrellar el registro todavía significa que perdemos todos los datos que asocian los nombres de los cubos a sus respectivos procesos.</target>
        </trans-unit>
        <trans-unit id="010816f5d4211c808577da6a4d3fff9e452bea0e" translate="yes" xml:space="preserve">
          <source>Links are bidirectional. Linked processes can be unlinked by using &lt;a href=&quot;#unlink/1&quot;&gt;&lt;code&gt;unlink/1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Los enlaces son bidireccionales. Los procesos vinculados se pueden desvincular mediante &lt;a href=&quot;#unlink/1&quot;&gt; &lt;code&gt;unlink/1&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a1fffaaafb7cc996685bceb829c053cc4f7de43d" translate="yes" xml:space="preserve">
          <source>List</source>
          <target state="translated">List</target>
        </trans-unit>
        <trans-unit id="d8c15547c73710a89415334a00b0ee5a2c8790ae" translate="yes" xml:space="preserve">
          <source>List concatenation operator. Concatenates a proper list and a term, returning a list.</source>
          <target state="translated">Lista de operadores de concatenación.Concatena una lista propia y un término,devolviendo una lista.</target>
        </trans-unit>
        <trans-unit id="5ea588245c39a0237a816a5a4b5f30b996ac4e47" translate="yes" xml:space="preserve">
          <source>List of allowed expressions</source>
          <target state="translated">Lista de expresiones permitidas</target>
        </trans-unit>
        <trans-unit id="3bc1afebc9f88b8646bec755bebbd01b76058e82" translate="yes" xml:space="preserve">
          <source>List of allowed functions and operators</source>
          <target state="translated">Lista de funciones y operadores permitidos</target>
        </trans-unit>
        <trans-unit id="e6fd9a7c630dc04fe44f8eceb64283a7b0d97ed2" translate="yes" xml:space="preserve">
          <source>List of supported keys in the keyword list:</source>
          <target state="translated">Lista de claves soportadas en la lista de palabras clave:</target>
        </trans-unit>
        <trans-unit id="0b38e76a685c2b2df84a12add2cb4a8302d42bac" translate="yes" xml:space="preserve">
          <source>List operators never modify the existing list. Concatenating to or removing elements from a list returns a new list. We say that Elixir data structures are &lt;em&gt;immutable&lt;/em&gt;. One advantage of immutability is that it leads to clearer code. You can freely pass the data around with the guarantee no one will mutate it in memory - only transform it.</source>
          <target state="translated">Los operadores de lista nunca modifican la lista existente. Concatenar o eliminar elementos de una lista devuelve una nueva lista. Decimos que las estructuras de datos de Elixir son &lt;em&gt;inmutables&lt;/em&gt; . Una ventaja de la inmutabilidad es que conduce a un c&amp;oacute;digo m&amp;aacute;s claro. Puede transmitir libremente los datos con la garant&amp;iacute;a de que nadie los mutar&amp;aacute; en la memoria, solo los transformar&amp;aacute;.</target>
        </trans-unit>
        <trans-unit id="ad56da9a17e3e3df18feffc154b101554e4c5019" translate="yes" xml:space="preserve">
          <source>List subtraction operator. Removes the first occurrence of an element on the left list for each element on the right.</source>
          <target state="translated">Operador de sustracción de lista.Elimina la primera ocurrencia de un elemento de la lista de la izquierda por cada elemento de la derecha.</target>
        </trans-unit>
        <trans-unit id="b2eb00e5233b62475b0dc3d5e4e0b3fba8fb4994" translate="yes" xml:space="preserve">
          <source>List.Chars</source>
          <target state="translated">List.Chars</target>
        </trans-unit>
        <trans-unit id="9f9dce20c46fcd1c1728dc56a20927edd518996b" translate="yes" xml:space="preserve">
          <source>List.Chars &lt;small&gt;protocol&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;Protocolo&lt;/small&gt; List.Chars&lt;small&gt;&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="d03be4130ee5ad90ce04ed9ec5d74c5566fe35d8" translate="yes" xml:space="preserve">
          <source>List.Chars.t (0)</source>
          <target state="translated">Lista.Chars.t (0)</target>
        </trans-unit>
        <trans-unit id="360565f0168323951cb15fd7ca1982778f9a1e7d" translate="yes" xml:space="preserve">
          <source>List.Chars.to_charlist (1)</source>
          <target state="translated">Lista.de.caracteres.a_lista.de.caracteres (1)</target>
        </trans-unit>
        <trans-unit id="f37415d7b26ed53d3baccb63f14d10f67a7f2022" translate="yes" xml:space="preserve">
          <source>Listens to a port until the port is available and it gets hold of the socket</source>
          <target state="translated">Escucha un puerto hasta que el puerto está disponible y se agarra al enchufe</target>
        </trans-unit>
        <trans-unit id="57c9502a7d7d48fd4a86b45fefb2b163491c3ae1" translate="yes" xml:space="preserve">
          <source>Lists</source>
          <target state="translated">Lists</target>
        </trans-unit>
        <trans-unit id="30045b3ebb820da7e212b26c8d486fa6438d1b21" translate="yes" xml:space="preserve">
          <source>Lists all dependencies and their status.</source>
          <target state="translated">Enumera todas las dependencias y su situación.</target>
        </trans-unit>
        <trans-unit id="d0400b695b82b7f117940b8b0f5038dea1a03963" translate="yes" xml:space="preserve">
          <source>Lists all installed archives.</source>
          <target state="translated">Enumera todos los archivos instalados.</target>
        </trans-unit>
        <trans-unit id="ab1fcad81755990415fb928f4bb6482b9fa8177c" translate="yes" xml:space="preserve">
          <source>Lists all installed escripts.</source>
          <target state="translated">Enumera todos los guiones instalados.</target>
        </trans-unit>
        <trans-unit id="576be6f9e3cd2119a02b300937f31a0bfa25055f" translate="yes" xml:space="preserve">
          <source>Lists all required files.</source>
          <target state="translated">Enumera todos los archivos necesarios.</target>
        </trans-unit>
        <trans-unit id="e5fcc5c6ccb03f1f5363ab1add506f548d93b038" translate="yes" xml:space="preserve">
          <source>Lists all tasks and aliases or prints the documentation for a given task or alias.</source>
          <target state="translated">Enumera todas las tareas y alias o imprime la documentación de una determinada tarea o alias.</target>
        </trans-unit>
        <trans-unit id="4b514bc4e3164c52bfb95195bf0bb5ba74e08baf" translate="yes" xml:space="preserve">
          <source>Lists also implement the &lt;a href=&quot;https://hexdocs.pm/elixir/Enumerable.html&quot;&gt;&lt;code&gt;Enumerable&lt;/code&gt;&lt;/a&gt; protocol, so many functions to work with lists are found in the &lt;a href=&quot;https://hexdocs.pm/elixir/Enum.html&quot;&gt;&lt;code&gt;Enum&lt;/code&gt;&lt;/a&gt; module. Additionally, the following functions and operators for lists are found in &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html&quot;&gt;&lt;code&gt;Kernel&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">Las listas tambi&amp;eacute;n implementan el protocolo &lt;a href=&quot;https://hexdocs.pm/elixir/Enumerable.html&quot;&gt; &lt;code&gt;Enumerable&lt;/code&gt; &lt;/a&gt; , por lo que muchas funciones para trabajar con listas se encuentran en el m&amp;oacute;dulo &lt;a href=&quot;https://hexdocs.pm/elixir/Enum.html&quot;&gt; &lt;code&gt;Enum&lt;/code&gt; &lt;/a&gt; . Adem&amp;aacute;s, las siguientes funciones y operadores para listas se encuentran en &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html&quot;&gt; &lt;code&gt;Kernel&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="afec6cb6a10a87d6a4707e28871420191c221295" translate="yes" xml:space="preserve">
          <source>Lists are compared element by element.</source>
          <target state="translated">Las listas se comparan elemento por elemento.</target>
        </trans-unit>
        <trans-unit id="ab57d49cbf8304700835035bc3343277d30e43d1" translate="yes" xml:space="preserve">
          <source>Lists are stored in memory as linked lists, meaning that each element in a list holds its value and points to the following element until the end of the list is reached. This means accessing the length of a list is a linear operation: we need to traverse the whole list in order to figure out its size.</source>
          <target state="translated">Las listas se almacenan en la memoria como listas vinculadas,lo que significa que cada elemento de una lista mantiene su valor y apunta al elemento siguiente hasta que se alcanza el final de la lista.Esto significa que el acceso a la longitud de una lista es una operación lineal:tenemos que recorrer toda la lista para averiguar su tamaño.</target>
        </trans-unit>
        <trans-unit id="c01ea530434a00d0b1bc3bdc3aad101f3c850abd" translate="yes" xml:space="preserve">
          <source>Lists command line arguments.</source>
          <target state="translated">Enumera los argumentos de la línea de mando.</target>
        </trans-unit>
        <trans-unit id="347e071fbc04592a3c2f0d22435ec182a39831ba" translate="yes" xml:space="preserve">
          <source>Lists in Elixir are effectively linked lists, which means they are internally represented in pairs containing the head and the tail of a list:</source>
          <target state="translated">Las listas del elixir son listas efectivamente vinculadas,lo que significa que están representadas internamente en pares que contienen la cabeza y la cola de una lista:</target>
        </trans-unit>
        <trans-unit id="1298ac093986653b2f114a6ee0f3b99d3384eec7" translate="yes" xml:space="preserve">
          <source>Lists in Elixir are specified between square brackets:</source>
          <target state="translated">Las listas en el Elixir se especifican entre corchetes:</target>
        </trans-unit>
        <trans-unit id="8b24ff6edd5f61dd85578b462cfb5ccb5e1d7ec5" translate="yes" xml:space="preserve">
          <source>Lists local tasks.</source>
          <target state="translated">Enumera las tareas locales.</target>
        </trans-unit>
        <trans-unit id="de7c16fdcb7dbcdae885c936e8e70fdad2dfea81" translate="yes" xml:space="preserve">
          <source>Lists manifest files for the compiler.</source>
          <target state="translated">Lista de archivos de manifiesto para el compilador.</target>
        </trans-unit>
        <trans-unit id="d0f09ee3032c9247a8875448970636dcb5d79ece" translate="yes" xml:space="preserve">
          <source>Lists may appear in patterns using the square brackets syntax (&lt;code&gt;[]&lt;/code&gt;). A list in a pattern will match only lists of the same size, where each individual list element must also match:</source>
          <target state="translated">Las listas pueden aparecer en patrones utilizando la sintaxis de corchetes ( &lt;code&gt;[]&lt;/code&gt; ). Una lista en un patr&amp;oacute;n coincidir&amp;aacute; solo con listas del mismo tama&amp;ntilde;o, donde cada elemento individual de la lista tambi&amp;eacute;n debe coincidir:</target>
        </trans-unit>
        <trans-unit id="bca74458ce5102822957d2008558c1693dad3f4a" translate="yes" xml:space="preserve">
          <source>Lists or tuples?</source>
          <target state="translated">¿Listas o tuplas?</target>
        </trans-unit>
        <trans-unit id="c6c37e3f50d97e7e2b3eda7fd75f9f8b70fa1609" translate="yes" xml:space="preserve">
          <source>Lists, tuples and binaries</source>
          <target state="translated">Listas,tuplas y binarios</target>
        </trans-unit>
        <trans-unit id="d8107e4dcdc428ba751fa94c9e388d0ea60cfc3c" translate="yes" xml:space="preserve">
          <source>Lists, tuples, bitstrings, maps, structs and function calls will be broken into multiple lines if they are followed by a newline in the opening bracket and preceded by a new line in the closing bracket</source>
          <target state="translated">Las listas,tuplas,cadenas de bits,mapas,estructuras y llamadas a funciones se dividirán en múltiples líneas si van seguidas de una nueva línea en el paréntesis de apertura y precedidas de una nueva línea en el paréntesis de cierre</target>
        </trans-unit>
        <trans-unit id="5d726676b1647ae189afafe7c0135c21ac5baa4c" translate="yes" xml:space="preserve">
          <source>Literal &quot;%&quot; character</source>
          <target state="translated">Carácter literal de &quot;%&quot;.</target>
        </trans-unit>
        <trans-unit id="c7ba7dcf662374aafe652b03d75cb8f6024519d9" translate="yes" xml:space="preserve">
          <source>Literals</source>
          <target state="translated">Literals</target>
        </trans-unit>
        <trans-unit id="7513abc36384d31942a5cf7f931786fd04bb1c73" translate="yes" xml:space="preserve">
          <source>Literals (numbers and atoms)</source>
          <target state="translated">Literales (números y átomos)</target>
        </trans-unit>
        <trans-unit id="91cb6ed4366e6af4c20b2f0bc91cc0d0ee8e284b" translate="yes" xml:space="preserve">
          <source>Loading an application &lt;em&gt;does not&lt;/em&gt; load its modules.</source>
          <target state="translated">La carga de una aplicaci&amp;oacute;n &lt;em&gt;no&lt;/em&gt; carga sus m&amp;oacute;dulos.</target>
        </trans-unit>
        <trans-unit id="d0935c21f18347f738724d92e6a79d6627db8bae" translate="yes" xml:space="preserve">
          <source>Loading applications</source>
          <target state="translated">Cargando aplicaciones</target>
        </trans-unit>
        <trans-unit id="c59cbcfe056227b16292e8dcaf0f66d26224a608" translate="yes" xml:space="preserve">
          <source>Loading the application does not start it nor load its modules, but it does load its environment.</source>
          <target state="translated">Cargar la aplicación no la inicia ni carga sus módulos,pero sí carga su entorno.</target>
        </trans-unit>
        <trans-unit id="44008e484aac635c82b9da39454ca6c5bef5b635" translate="yes" xml:space="preserve">
          <source>Loads all tasks in all code paths.</source>
          <target state="translated">Carga todas las tareas en todas las rutas de código.</target>
        </trans-unit>
        <trans-unit id="1dbb1340da45613eb5e47a83d481795deec9b49b" translate="yes" xml:space="preserve">
          <source>Loads all tasks in the given &lt;code&gt;paths&lt;/code&gt;.</source>
          <target state="translated">Carga todas las tareas en las &lt;code&gt;paths&lt;/code&gt; dadas .</target>
        </trans-unit>
        <trans-unit id="1b73d169b01f0a9c5dd68ce5c80ad0b78253a148" translate="yes" xml:space="preserve">
          <source>Loads and configures all registered apps.</source>
          <target state="translated">Carga y configura todas las aplicaciones registradas.</target>
        </trans-unit>
        <trans-unit id="6a92b205586e28caa29fbe576471eda29c1f626c" translate="yes" xml:space="preserve">
          <source>Loads and persists the given configuration.</source>
          <target state="translated">Carga y persiste la configuración dada.</target>
        </trans-unit>
        <trans-unit id="d2d1c8786ab6d688901e2d0162afd3bc568f68c4" translate="yes" xml:space="preserve">
          <source>Loads configuration (typically during system boot).</source>
          <target state="translated">Carga la configuración (típicamente durante el arranque del sistema).</target>
        </trans-unit>
        <trans-unit id="0685e493c999d9e080786726a9b793b9cc769fbe" translate="yes" xml:space="preserve">
          <source>Loads the application and its dependencies paths.</source>
          <target state="translated">Carga las rutas de la aplicación y sus dependencias.</target>
        </trans-unit>
        <trans-unit id="d450693304ac525200ed85aa5542f49d5d24954d" translate="yes" xml:space="preserve">
          <source>Loads the given &lt;code&gt;app&lt;/code&gt;.</source>
          <target state="translated">Carga la &lt;code&gt;app&lt;/code&gt; dada .</target>
        </trans-unit>
        <trans-unit id="4fd578a7e27c9f4784b221dfd1d03ff6846abec8" translate="yes" xml:space="preserve">
          <source>Loads the given module's BEAM code (and ensures any previous old version was properly purged before).</source>
          <target state="translated">Carga el código BEAM del módulo dado (y se asegura de que cualquier versión antigua anterior haya sido purgada correctamente antes).</target>
        </trans-unit>
        <trans-unit id="9e384585def890d25c96b1f4a34ccaee1ed94be4" translate="yes" xml:space="preserve">
          <source>Local dependencies (i.e. non-fetchable ones) are automatically recompiled every time the parent project is compiled.</source>
          <target state="translated">Las dependencias locales (es decir,las que no se pueden obtener)se recomponen automáticamente cada vez que se compila el proyecto padre.</target>
        </trans-unit>
        <trans-unit id="e7dac36771b4d5bc036c611c2f7df6898fe52037" translate="yes" xml:space="preserve">
          <source>Local or imported functions, like &lt;code&gt;is_function/1&lt;/code&gt;, can be captured without the module:</source>
          <target state="translated">Las funciones locales o importadas, como &lt;code&gt;is_function/1&lt;/code&gt; , se pueden capturar sin el m&amp;oacute;dulo:</target>
        </trans-unit>
        <trans-unit id="432e91b2470debe1e676502753dc671697ff7218" translate="yes" xml:space="preserve">
          <source>Locates an executable on the system.</source>
          <target state="translated">Localiza un ejecutable en el sistema.</target>
        </trans-unit>
        <trans-unit id="e8a78f610457f7b34429c88bd804c091eff64c5b" translate="yes" xml:space="preserve">
          <source>Log Capture</source>
          <target state="translated">Captura del registro</target>
        </trans-unit>
        <trans-unit id="8432c24573f3f89fad60802fe8eddf1da6315768" translate="yes" xml:space="preserve">
          <source>Logger</source>
          <target state="translated">Logger</target>
        </trans-unit>
        <trans-unit id="e437244b86e77b12e48c1b63d73645f8df74961f" translate="yes" xml:space="preserve">
          <source>Logger allows developers to rewrite log messages provided by OTP applications into a format more compatible with Elixir log messages by providing a translator.</source>
          <target state="translated">El registrador permite a los desarrolladores reescribir los mensajes de registro proporcionados por las aplicaciones OTP en un formato más compatible con los mensajes de registro de Elixir proporcionando un traductor.</target>
        </trans-unit>
        <trans-unit id="36bf6b0f69a87a997107e50234a8ec7d11ea5aa8" translate="yes" xml:space="preserve">
          <source>Logger also allows log commands to be removed altogether via the &lt;code&gt;:compile_time_purge_matching&lt;/code&gt; option (see below).</source>
          <target state="translated">Logger tambi&amp;eacute;n permite eliminar los comandos de registro a trav&amp;eacute;s de la opci&amp;oacute;n &lt;code&gt;:compile_time_purge_matching&lt;/code&gt; (ver m&amp;aacute;s abajo).</target>
        </trans-unit>
        <trans-unit id="8a326883d3565753f9205b6be5a10ab0cd08e9df" translate="yes" xml:space="preserve">
          <source>Logger.Formatter</source>
          <target state="translated">Logger.Formatter</target>
        </trans-unit>
        <trans-unit id="c6794a4db89c0fa5b4754efb325fa721edd588e7" translate="yes" xml:space="preserve">
          <source>Logger.Translator</source>
          <target state="translated">Logger.Translator</target>
        </trans-unit>
        <trans-unit id="ca109e8fe3eb4c16a27a7e4635e900addd5e8cb0" translate="yes" xml:space="preserve">
          <source>Logging a message (string or iodata):</source>
          <target state="translated">Registrando un mensaje (cadena o yodato):</target>
        </trans-unit>
        <trans-unit id="4791cfde57458131db6ad4f6f84effd24dfd10fe" translate="yes" xml:space="preserve">
          <source>Logging is useful for tracking when an event of interest happens in your system. For example, it may be helpful to log whenever a user is deleted.</source>
          <target state="translated">El registro es útil para rastrear cuando un evento de interés ocurre en su sistema.Por ejemplo,puede ser útil registrar cada vez que se elimina un usuario.</target>
        </trans-unit>
        <trans-unit id="1deadf9242ff4446fca380a5ed4fc63d13e68620" translate="yes" xml:space="preserve">
          <source>Logs a alert message.</source>
          <target state="translated">Registra un mensaje de alerta.</target>
        </trans-unit>
        <trans-unit id="77f07031049dd01cb883823bd003f010766fb98e" translate="yes" xml:space="preserve">
          <source>Logs a critical message.</source>
          <target state="translated">Registra un mensaje crítico.</target>
        </trans-unit>
        <trans-unit id="d82e7897f57da03eff4b9dc774004c8bcf4326e9" translate="yes" xml:space="preserve">
          <source>Logs a debug message.</source>
          <target state="translated">Registra un mensaje de depuración.</target>
        </trans-unit>
        <trans-unit id="ec3ae95bdedeebd38a4944614cd25bc06633c042" translate="yes" xml:space="preserve">
          <source>Logs a emergency message.</source>
          <target state="translated">Registra un mensaje de emergencia.</target>
        </trans-unit>
        <trans-unit id="fa35a8e5fcaecac8caac4e767a74fc390a160600" translate="yes" xml:space="preserve">
          <source>Logs a error message.</source>
          <target state="translated">Registra un mensaje de error.</target>
        </trans-unit>
        <trans-unit id="7c874de52b4d39e2e1de53a70efcaf18caaa4708" translate="yes" xml:space="preserve">
          <source>Logs a info message.</source>
          <target state="translated">Registra el mensaje de información.</target>
        </trans-unit>
        <trans-unit id="b4f850d54fddb163d71bfcfbc339485cc6394592" translate="yes" xml:space="preserve">
          <source>Logs a message dynamically.</source>
          <target state="translated">Registra un mensaje de forma dinámica.</target>
        </trans-unit>
        <trans-unit id="06c091f6fe5aa4035d2433eb7a7a7cc257fb6374" translate="yes" xml:space="preserve">
          <source>Logs a message with the given &lt;code&gt;level&lt;/code&gt;.</source>
          <target state="translated">Registra un mensaje con el &lt;code&gt;level&lt;/code&gt; dado .</target>
        </trans-unit>
        <trans-unit id="420c25c0985bad40d128abfb9b86ebd0f486c510" translate="yes" xml:space="preserve">
          <source>Logs a notice message.</source>
          <target state="translated">Registra un mensaje de aviso.</target>
        </trans-unit>
        <trans-unit id="f285f97af4e85c90120c456b1bce9cedc8d1aeef" translate="yes" xml:space="preserve">
          <source>Logs a warning message.</source>
          <target state="translated">Registra un mensaje de advertencia.</target>
        </trans-unit>
        <trans-unit id="a25a9314514d900aacc22fbb93de516450433e79" translate="yes" xml:space="preserve">
          <source>Logs an error message.</source>
          <target state="translated">Registra un mensaje de error.</target>
        </trans-unit>
        <trans-unit id="162237ff6bb976909c470a90784d4d60906673ae" translate="yes" xml:space="preserve">
          <source>Logs an info message.</source>
          <target state="translated">Registra un mensaje de información.</target>
        </trans-unit>
        <trans-unit id="72bca69a37a582766cb9db5733429c69102e1391" translate="yes" xml:space="preserve">
          <source>Looking up, dispatching and registering are efficient and immediate at the cost of delayed unsubscription. For example, if a process crashes, its keys are automatically removed from the registry but the change may not propagate immediately. This means certain operations may return processes that are already dead. When such may happen, it will be explicitly stated in the function documentation.</source>
          <target state="translated">La búsqueda,el envío y el registro son eficientes e inmediatos,a costa de la cancelación tardía de la suscripción.Por ejemplo,si un proceso se bloquea,sus claves se eliminan automáticamente del registro pero el cambio puede no propagarse inmediatamente.Esto significa que ciertas operaciones pueden devolver procesos que ya están muertos.Cuando esto ocurra,se indicará explícitamente en la documentación de la función.</target>
        </trans-unit>
        <trans-unit id="a76b17c2d110d14324113df51e0e794c11ea854e" translate="yes" xml:space="preserve">
          <source>Loops through recursion</source>
          <target state="translated">Bucles a través de la recursividad</target>
        </trans-unit>
        <trans-unit id="ce14143dfcbe7563bba16cee9e6c1288ad57742d" translate="yes" xml:space="preserve">
          <source>Low-level function that parses one option.</source>
          <target state="translated">Función de bajo nivel que analiza una opción.</target>
        </trans-unit>
        <trans-unit id="87c8129c4541d2520131c98fdc81bf241066a22c" translate="yes" xml:space="preserve">
          <source>Luckily for us, &lt;code&gt;use GenServer&lt;/code&gt; already defines a &lt;code&gt;Stack.child_spec/1&lt;/code&gt; exactly like above. If you need to customize the &lt;a href=&quot;genserver&quot;&gt;&lt;code&gt;GenServer&lt;/code&gt;&lt;/a&gt;, you can pass the options directly to &lt;code&gt;use GenServer&lt;/code&gt;:</source>
          <target state="translated">Afortunadamente para nosotros, el &lt;code&gt;use GenServer&lt;/code&gt; ya define un &lt;code&gt;Stack.child_spec/1&lt;/code&gt; exactamente como arriba. Si necesita personalizar &lt;a href=&quot;genserver&quot;&gt; &lt;code&gt;GenServer&lt;/code&gt; &lt;/a&gt; , puede pasar las opciones directamente para &lt;code&gt;use GenServer&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="e8fb2a57a7b8ddbc8b24f39765395e01d2d1bdb2" translate="yes" xml:space="preserve">
          <source>Luckily for us, &lt;code&gt;use GenServer&lt;/code&gt; already defines a &lt;code&gt;Stack.child_spec/1&lt;/code&gt; exactly like above. If you need to customize the &lt;a href=&quot;https://hexdocs.pm/elixir/GenServer.html&quot;&gt;&lt;code&gt;GenServer&lt;/code&gt;&lt;/a&gt;, you can pass the options directly to &lt;code&gt;use GenServer&lt;/code&gt;:</source>
          <target state="translated">Afortunadamente para nosotros, el &lt;code&gt;use GenServer&lt;/code&gt; ya define un &lt;code&gt;Stack.child_spec/1&lt;/code&gt; exactamente como el anterior. Si necesita personalizar &lt;a href=&quot;https://hexdocs.pm/elixir/GenServer.html&quot;&gt; &lt;code&gt;GenServer&lt;/code&gt; &lt;/a&gt; , puede pasar las opciones directamente para &lt;code&gt;use GenServer&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="86ad4dfa78b62650b87ab367b0252fd1102bb2f8" translate="yes" xml:space="preserve">
          <source>Luckily, Elixir comes with the ability to package all of the code we have written so far into a single directory, that also includes Elixir and the Erlang Virtual Machine, that has a simple entry point and supports custom configuration. This feature is called releases and it provides many other benefits, which we will see next.</source>
          <target state="translated">Por suerte,Elixir tiene la capacidad de empaquetar todo el código que hemos escrito hasta ahora en un solo directorio,que también incluye Elixir y la Máquina Virtual Erlang,que tiene un simple punto de entrada y admite una configuración personalizada.Esta característica se denomina &quot;releases&quot; y proporciona muchos otros beneficios,que veremos a continuación.</target>
        </trans-unit>
        <trans-unit id="101e18c9daa819a9267241f7255d5c640b1be10f" translate="yes" xml:space="preserve">
          <source>Luckily, ExUnit ships with a facility to tag tests, allowing us to run specific callbacks or even filter tests altogether based on those tags. We have already used the &lt;code&gt;:capture_log&lt;/code&gt; tag in the previous chapter, which has its semantics specified by ExUnit itself.</source>
          <target state="translated">Afortunadamente, ExUnit se env&amp;iacute;a con una funci&amp;oacute;n para etiquetar pruebas, lo que nos permite ejecutar devoluciones de llamada espec&amp;iacute;ficas o incluso filtrar pruebas basadas en esas etiquetas. Ya hemos utilizado la etiqueta &lt;code&gt;:capture_log&lt;/code&gt; en el cap&amp;iacute;tulo anterior, que tiene su sem&amp;aacute;ntica especificada por la propia ExUnit.</target>
        </trans-unit>
        <trans-unit id="f6e05c123ace841510b2c0f0d5c37124c1c1ac0a" translate="yes" xml:space="preserve">
          <source>Luckily, comprehensions also support the &lt;code&gt;:reduce&lt;/code&gt; option, which would allow us to fuse both steps above into a single step:</source>
          <target state="translated">Afortunadamente, las comprensiones tambi&amp;eacute;n admiten la opci&amp;oacute;n &lt;code&gt;:reduce&lt;/code&gt; , que nos permitir&amp;iacute;a fusionar los dos pasos anteriores en un solo paso:</target>
        </trans-unit>
        <trans-unit id="9bf35e953e645f158229003437875eb9a242b162" translate="yes" xml:space="preserve">
          <source>Luckily, releases also provide runtime configuration, which we will see next.</source>
          <target state="translated">Por suerte,los lanzamientos también proporcionan una configuración de tiempo de ejecución,que veremos a continuación.</target>
        </trans-unit>
        <trans-unit id="6a0e82f7ee7ffbbb6bfa830a8dab2a14c17f4f0b" translate="yes" xml:space="preserve">
          <source>Luckily, since the server is being supervised by a supervisor, the supervisor will automatically start a new one, with the initial stack of &lt;code&gt;[:hello]&lt;/code&gt;:</source>
          <target state="translated">Afortunadamente, dado que el servidor est&amp;aacute; siendo supervisado por un supervisor, el supervisor iniciar&amp;aacute; autom&amp;aacute;ticamente uno nuevo, con la pila inicial de &lt;code&gt;[:hello]&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="c63ae6dd4fc9f9dda66970e827d13f7c73fe841c" translate="yes" xml:space="preserve">
          <source>M</source>
          <target state="translated">M</target>
        </trans-unit>
        <trans-unit id="660bf78961f4ec6bd8bd8b37a3b0b2769db2b14a" translate="yes" xml:space="preserve">
          <source>Macro</source>
          <target state="translated">Macro</target>
        </trans-unit>
        <trans-unit id="da945cd7b80c7fc643a9901f3920877667af55e2" translate="yes" xml:space="preserve">
          <source>Macro hygiene</source>
          <target state="translated">Macro higiene</target>
        </trans-unit>
        <trans-unit id="5233ccb9ab0c07b3e0b3cdc52940cec0284d06af" translate="yes" xml:space="preserve">
          <source>Macro-based shortcut for &lt;a href=&quot;#break!/4&quot;&gt;&lt;code&gt;IEx.break!/4&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Atajo basado en &lt;a href=&quot;#break!/4&quot;&gt; &lt;code&gt;IEx.break!/4&lt;/code&gt; &lt;/a&gt; para IEx.break! / 4 .</target>
        </trans-unit>
        <trans-unit id="d968e46fbcd656cb5ecfaafa8dee8956d86aa485" translate="yes" xml:space="preserve">
          <source>Macro-based shortcut for &lt;a href=&quot;https://hexdocs.pm/iex/IEx.html#break!/4&quot;&gt;&lt;code&gt;IEx.break!/4&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Atajo basado en &lt;a href=&quot;https://hexdocs.pm/iex/IEx.html#break!/4&quot;&gt; &lt;code&gt;IEx.break!/4&lt;/code&gt; &lt;/a&gt; para IEx.break! / 4 .</target>
        </trans-unit>
        <trans-unit id="7bc6dcd111ca7252229f4855c8539442f853483e" translate="yes" xml:space="preserve">
          <source>Macro-based shortcut for &lt;a href=&quot;iex#break!/4&quot;&gt;&lt;code&gt;IEx.break!/4&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Atajo basado en &lt;a href=&quot;iex#break!/4&quot;&gt; &lt;code&gt;IEx.break!/4&lt;/code&gt; &lt;/a&gt; para IEx.break! / 4 .</target>
        </trans-unit>
        <trans-unit id="56c6a3e6a300260cc21833777ce7d3713e7a1c93" translate="yes" xml:space="preserve">
          <source>Macro.Env</source>
          <target state="translated">Macro.Env</target>
        </trans-unit>
        <trans-unit id="899bd694d29ace1be956ab35177075021977560b" translate="yes" xml:space="preserve">
          <source>Macros</source>
          <target state="translated">Macros</target>
        </trans-unit>
        <trans-unit id="2deb7bcc40200f28604560fb6b4cce5afe26789d" translate="yes" xml:space="preserve">
          <source>Macros (local or remote)</source>
          <target state="translated">Macros (locales o remotas)</target>
        </trans-unit>
        <trans-unit id="17db1c00f2577b6b0146445c282a04ec08ca8847" translate="yes" xml:space="preserve">
          <source>Macros are a powerful construct and Elixir provides many mechanisms to ensure they are used responsibly.</source>
          <target state="translated">Los macros son una construcción poderosa y el Elixir provee muchos mecanismos para asegurar que sean usados responsablemente.</target>
        </trans-unit>
        <trans-unit id="ef424c7d55cc728523759a674154684c4f327b7f" translate="yes" xml:space="preserve">
          <source>Macros are also commonly used to implement custom sigils. To create a custom sigil, define a function with the name &lt;code&gt;sigil_{identifier}&lt;/code&gt; that takes two arguments. The first argument will be the string, the second will be a charlist containing any modifiers. If the sigil is lower case (such as &lt;code&gt;sigil_x&lt;/code&gt;) then the string argument will allow interpolation. If the sigil is upper case (such as &lt;code&gt;sigil_X&lt;/code&gt;) then the string will not be interpolated.</source>
          <target state="translated">Las macros tambi&amp;eacute;n se utilizan com&amp;uacute;nmente para implementar sigilos personalizados. Para crear un sigilo personalizado, defina una funci&amp;oacute;n con el nombre &lt;code&gt;sigil_{identifier}&lt;/code&gt; que tome dos argumentos. El primer argumento ser&amp;aacute; la cadena, el segundo ser&amp;aacute; una lista de caracteres que contiene los modificadores. Si el sigilo est&amp;aacute; en min&amp;uacute;sculas (como &lt;code&gt;sigil_x&lt;/code&gt; ), el argumento de cadena permitir&amp;aacute; la interpolaci&amp;oacute;n. Si el sigilo est&amp;aacute; en may&amp;uacute;sculas (como &lt;code&gt;sigil_X&lt;/code&gt; ), la cadena no se interpolar&amp;aacute;.</target>
        </trans-unit>
        <trans-unit id="27ec1b0b3e3d4a112e7fe3bb95a5cd9f904ce5fc" translate="yes" xml:space="preserve">
          <source>Macros are compile-time constructs that are invoked with Elixir's AST as input and a superset of Elixir's AST as output.</source>
          <target state="translated">Las macros son construcciones en tiempo de compilación que se invocan con la AST de Elixir como entrada y un superconjunto de la AST de Elixir como salida.</target>
        </trans-unit>
        <trans-unit id="00166ad41fa2f0b9c76fb59ee48021936b95d500" translate="yes" xml:space="preserve">
          <source>Macros are explicit: it is impossible to run a macro without explicitly invoking it. For example, some languages allow developers to completely rewrite functions behind the scenes, often via parse transforms or via some reflection mechanisms. In Elixir, a macro must be explicitly invoked in the caller during compilation time.</source>
          <target state="translated">Las macros son explícitas:es imposible ejecutar una macro sin invocarla explícitamente.Por ejemplo,algunos lenguajes permiten a los desarrolladores reescribir completamente las funciones entre bastidores,a menudo mediante transformaciones de parse o mediante algunos mecanismos de reflexión.En Elixir,una macro debe ser explícitamente invocada en el llamador durante el tiempo de compilación.</target>
        </trans-unit>
        <trans-unit id="e631dd92a600a70cff32b8106215cf69b67f9804" translate="yes" xml:space="preserve">
          <source>Macros are hygienic: by default, variables defined inside a macro are not going to affect the user code. Furthermore, function calls and aliases available in the macro context are not going to leak into the user context.</source>
          <target state="translated">Las macros son higiénicas:por defecto,las variables definidas dentro de una macro no van a afectar al código de usuario.Además,las llamadas a funciones y los alias disponibles en el contexto de la macro no van a filtrarse en el contexto del usuario.</target>
        </trans-unit>
        <trans-unit id="7c5ff8a95ca37f321e50193978d8305c5ccd794f" translate="yes" xml:space="preserve">
          <source>Macros are lexical: it is impossible to inject code or macros globally. In order to use a macro, you need to explicitly &lt;code&gt;require&lt;/code&gt; or &lt;code&gt;import&lt;/code&gt; the module that defines the macro.</source>
          <target state="translated">Las macros son l&amp;eacute;xicas: es imposible inyectar c&amp;oacute;digo o macros globalmente. Para utilizar una macro, es necesario expl&amp;iacute;citamente &lt;code&gt;require&lt;/code&gt; o &lt;code&gt;import&lt;/code&gt; ar el m&amp;oacute;dulo que define la macro.</target>
        </trans-unit>
        <trans-unit id="78cdc77e6f4d92297e11673135be19d518a8e9cb" translate="yes" xml:space="preserve">
          <source>Macros cannot be overridden as functions and vice-versa.</source>
          <target state="translated">Las macros no pueden ser anuladas como funciones y viceversa.</target>
        </trans-unit>
        <trans-unit id="c199f825b0b9d3f3318f2eda4ea955409324187c" translate="yes" xml:space="preserve">
          <source>Macros constructed out of any combination of the above guards are also valid guards - for example, &lt;a href=&quot;https://hexdocs.pm/elixir/Integer.html#is_even/1&quot;&gt;&lt;code&gt;Integer.is_even/1&lt;/code&gt;&lt;/a&gt;. For more information, see the &quot;Defining custom guard expressions&quot; section shown below.</source>
          <target state="translated">Las macros creadas a partir de cualquier combinaci&amp;oacute;n de los protectores anteriores tambi&amp;eacute;n son protectores v&amp;aacute;lidos, por ejemplo, &lt;a href=&quot;https://hexdocs.pm/elixir/Integer.html#is_even/1&quot;&gt; &lt;code&gt;Integer.is_even/1&lt;/code&gt; &lt;/a&gt; . Para obtener m&amp;aacute;s informaci&amp;oacute;n, consulte la secci&amp;oacute;n &quot;Definici&amp;oacute;n de expresiones de protecci&amp;oacute;n personalizadas&quot; que se muestra a continuaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="46e2c2440131ab61167e8cad993833b1e1b2ca92" translate="yes" xml:space="preserve">
          <source>Macros constructed out of any combination of the above guards are also valid guards - for example, &lt;a href=&quot;integer#is_even/1&quot;&gt;&lt;code&gt;Integer.is_even/1&lt;/code&gt;&lt;/a&gt;. For more information, see the &quot;Defining custom guard expressions&quot; section shown below.</source>
          <target state="translated">Las macros creadas a partir de cualquier combinaci&amp;oacute;n de los protectores anteriores tambi&amp;eacute;n son protectores v&amp;aacute;lidos, por ejemplo, &lt;a href=&quot;integer#is_even/1&quot;&gt; &lt;code&gt;Integer.is_even/1&lt;/code&gt; &lt;/a&gt; . Para obtener m&amp;aacute;s informaci&amp;oacute;n, consulte la secci&amp;oacute;n &quot;Definici&amp;oacute;n de expresiones de protecci&amp;oacute;n personalizadas&quot; que se muestra a continuaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="b376d89a5de38d7ee4620680cefcbdb63a1fa6c3" translate="yes" xml:space="preserve">
          <source>Macros in Elixir are defined via &lt;code&gt;defmacro/2&lt;/code&gt;.</source>
          <target state="translated">Las macros en Elixir se definen mediante &lt;code&gt;defmacro/2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8b493bc2b5a09e10063b11f52cb46148a75373e5" translate="yes" xml:space="preserve">
          <source>Macros must be defined before its usage.</source>
          <target state="translated">Las macros deben ser definidas antes de su uso.</target>
        </trans-unit>
        <trans-unit id="f3a7dd931c836a0537e89bdd7c632c8f1674beb8" translate="yes" xml:space="preserve">
          <source>Macros receive quoted expressions and must return quoted expressions. However, sometimes during the execution of a macro, you may need to work with values and making a distinction between values and quoted expressions will be required.</source>
          <target state="translated">Las macros reciben expresiones citadas y deben devolverlas.Sin embargo,a veces durante la ejecución de una macro,puede ser necesario trabajar con valores y se requerirá hacer una distinción entre los valores y las expresiones citadas.</target>
        </trans-unit>
        <trans-unit id="1b8816a712333def9173d859165b24e9a1e3080d" translate="yes" xml:space="preserve">
          <source>Macros&amp;rsquo; language is clear: many languages provide syntax shortcuts for &lt;code&gt;quote&lt;/code&gt; and &lt;code&gt;unquote&lt;/code&gt;. In Elixir, we preferred to have them explicitly spelled out, in order to clearly delimit the boundaries of a macro definition and its quoted expressions.</source>
          <target state="translated">El lenguaje de las macros es claro: muchos lenguajes proporcionan atajos de sintaxis para &lt;code&gt;quote&lt;/code&gt; y &lt;code&gt;unquote&lt;/code&gt; . En Elixir, preferimos tenerlos deletreados expl&amp;iacute;citamente, para delimitar claramente los l&amp;iacute;mites de una macrodefinici&amp;oacute;n y sus expresiones citadas.</target>
        </trans-unit>
        <trans-unit id="38c7f5915403fb594e00a22038d846f701385048" translate="yes" xml:space="preserve">
          <source>Makes a synchronous call to the &lt;code&gt;server&lt;/code&gt; and waits for its reply.</source>
          <target state="translated">Realiza una llamada sincr&amp;oacute;nica al &lt;code&gt;server&lt;/code&gt; y espera su respuesta.</target>
        </trans-unit>
        <trans-unit id="d01394a676b90ea711ca71b9dfa799f50b31e6c1" translate="yes" xml:space="preserve">
          <source>Makes boot scripts.</source>
          <target state="translated">Hace guiones de arranque.</target>
        </trans-unit>
        <trans-unit id="63d944684b8d8c1cbe7b41a5decc0950233badf7" translate="yes" xml:space="preserve">
          <source>Makes the &lt;code&gt;sys.config&lt;/code&gt; structure.</source>
          <target state="translated">Hace que el &lt;code&gt;sys.config&lt;/code&gt; estructura.</target>
        </trans-unit>
        <trans-unit id="d5ca136246f74496fc6eddff8b632654647bdfab" translate="yes" xml:space="preserve">
          <source>Makes the given functions in &lt;code&gt;module&lt;/code&gt; overridable.</source>
          <target state="translated">Hace que las funciones dadas en el &lt;code&gt;module&lt;/code&gt; reemplazables.</target>
        </trans-unit>
        <trans-unit id="1d1d2f57486d38837141355b4d2874a9bddc93c3" translate="yes" xml:space="preserve">
          <source>Makes the given functions in the current module overridable.</source>
          <target state="translated">Hace que las funciones dadas en el módulo actual sean anulables.</target>
        </trans-unit>
        <trans-unit id="f520067303f9e8a9444961effdfbec09ca46a18f" translate="yes" xml:space="preserve">
          <source>Makes the start_erl.data file with the ERTS version and release versions.</source>
          <target state="translated">Hace el archivo start_erl.data con la versión ERTS y las versiones de lanzamiento.</target>
        </trans-unit>
        <trans-unit id="dc0be1241754d06d600f6c1517dbc4ddf83878d3" translate="yes" xml:space="preserve">
          <source>Management scripts. Releases come with scripts to start, restart, connect to the running system remotely, execute RPC calls, run as daemon, run as a Windows service, and more.</source>
          <target state="translated">Guiones de gestión.Las versiones vienen con scripts para iniciar,reiniciar,conectarse al sistema en ejecución de forma remota,ejecutar llamadas RPC,ejecutarse como demonio,ejecutarse como un servicio de Windows y más.</target>
        </trans-unit>
        <trans-unit id="7fddc4eb9e8f75d21673b2839ad36111f23d7c3e" translate="yes" xml:space="preserve">
          <source>Manually implementing protocols for all types can quickly become repetitive and tedious. In such cases, Elixir provides two options: we can explicitly derive the protocol implementation for our types or automatically implement the protocol for all types. In both cases, we need to implement the protocol for &lt;code&gt;Any&lt;/code&gt;.</source>
          <target state="translated">La implementaci&amp;oacute;n manual de protocolos para todos los tipos puede volverse r&amp;aacute;pidamente repetitiva y tediosa. En tales casos, Elixir ofrece dos opciones: podemos derivar expl&amp;iacute;citamente la implementaci&amp;oacute;n del protocolo para nuestros tipos o implementar autom&amp;aacute;ticamente el protocolo para todos los tipos. En ambos casos, necesitamos implementar el protocolo para &lt;code&gt;Any&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d459cd939d93634c990e044cf24d22485f3ceefe" translate="yes" xml:space="preserve">
          <source>Manually it can be started as:</source>
          <target state="translated">Manualmente se puede empezar como:</target>
        </trans-unit>
        <trans-unit id="c0e455aaea813fc20786176867857a89ebbb1b93" translate="yes" xml:space="preserve">
          <source>Many functions come in pairs, such as &lt;a href=&quot;file#read/1&quot;&gt;&lt;code&gt;File.read/1&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;file#read!/1&quot;&gt;&lt;code&gt;File.read!/1&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;file#read/1&quot;&gt;&lt;code&gt;File.read/1&lt;/code&gt;&lt;/a&gt; will return a success or failure tuple, whereas &lt;a href=&quot;file#read!/1&quot;&gt;&lt;code&gt;File.read!/1&lt;/code&gt;&lt;/a&gt; will return a plain value or else raise an exception:</source>
          <target state="translated">Muchas funciones vienen en pares, como &lt;a href=&quot;file#read/1&quot;&gt; &lt;code&gt;File.read/1&lt;/code&gt; &lt;/a&gt; y &lt;a href=&quot;file#read!/1&quot;&gt; &lt;code&gt;File.read!/1&lt;/code&gt; &lt;/a&gt; . &lt;a href=&quot;file#read/1&quot;&gt; &lt;code&gt;File.read/1&lt;/code&gt; &lt;/a&gt; devolver&amp;aacute; una tupla de &amp;eacute;xito o error, mientras que &lt;a href=&quot;file#read!/1&quot;&gt; &lt;code&gt;File.read!/1&lt;/code&gt; &lt;/a&gt; devolver&amp;aacute; un valor simple o generar&amp;aacute; una excepci&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="260e168370d5fc4a6827bad1c03fb6fbeedd23a4" translate="yes" xml:space="preserve">
          <source>Many functions come in pairs, such as &lt;a href=&quot;https://hexdocs.pm/elixir/File.html#read/1&quot;&gt;&lt;code&gt;File.read/1&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://hexdocs.pm/elixir/File.html#read!/1&quot;&gt;&lt;code&gt;File.read!/1&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;https://hexdocs.pm/elixir/File.html#read/1&quot;&gt;&lt;code&gt;File.read/1&lt;/code&gt;&lt;/a&gt; will return a success or failure tuple, whereas &lt;a href=&quot;https://hexdocs.pm/elixir/File.html#read!/1&quot;&gt;&lt;code&gt;File.read!/1&lt;/code&gt;&lt;/a&gt; will return a plain value or else raise an exception:</source>
          <target state="translated">Muchas funciones vienen en pares, como &lt;a href=&quot;https://hexdocs.pm/elixir/File.html#read/1&quot;&gt; &lt;code&gt;File.read/1&lt;/code&gt; &lt;/a&gt; y &lt;a href=&quot;https://hexdocs.pm/elixir/File.html#read!/1&quot;&gt; &lt;code&gt;File.read!/1&lt;/code&gt; &lt;/a&gt; . &lt;a href=&quot;https://hexdocs.pm/elixir/File.html#read/1&quot;&gt; &lt;code&gt;File.read/1&lt;/code&gt; &lt;/a&gt; devolver&amp;aacute; una tupla de &amp;eacute;xito o error, mientras que &lt;a href=&quot;https://hexdocs.pm/elixir/File.html#read!/1&quot;&gt; &lt;code&gt;File.read!/1&lt;/code&gt; &lt;/a&gt; devolver&amp;aacute; un valor simple o generar&amp;aacute; una excepci&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="df33d2958d307f1a594471fa7f01b0b82a2cb968" translate="yes" xml:space="preserve">
          <source>Many functions for maps, which implement the &lt;a href=&quot;enumerable&quot;&gt;&lt;code&gt;Enumerable&lt;/code&gt;&lt;/a&gt; protocol, are found in the &lt;a href=&quot;enum&quot;&gt;&lt;code&gt;Enum&lt;/code&gt;&lt;/a&gt; module. Additionally, the following functions for maps are found in &lt;a href=&quot;kernel&quot;&gt;&lt;code&gt;Kernel&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">Muchas funciones para mapas, que implementan el protocolo &lt;a href=&quot;enumerable&quot;&gt; &lt;code&gt;Enumerable&lt;/code&gt; &lt;/a&gt; , se encuentran en el m&amp;oacute;dulo &lt;a href=&quot;enum&quot;&gt; &lt;code&gt;Enum&lt;/code&gt; &lt;/a&gt; . Adem&amp;aacute;s, las siguientes funciones para mapas se encuentran en &lt;a href=&quot;kernel&quot;&gt; &lt;code&gt;Kernel&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="27ff6822734db6cb62b200fe4ffc5f764d2dde53" translate="yes" xml:space="preserve">
          <source>Many functions in the &lt;a href=&quot;datetime&quot;&gt;&lt;code&gt;DateTime&lt;/code&gt;&lt;/a&gt; module require a time zone database. By default, it uses the default time zone database returned by &lt;a href=&quot;calendar#get_time_zone_database/0&quot;&gt;&lt;code&gt;Calendar.get_time_zone_database/0&lt;/code&gt;&lt;/a&gt;, which defaults to &lt;a href=&quot;calendar.utconlytimezonedatabase&quot;&gt;&lt;code&gt;Calendar.UTCOnlyTimeZoneDatabase&lt;/code&gt;&lt;/a&gt; which only handles &quot;Etc/UTC&quot; datetimes and returns &lt;code&gt;{:error, :utc_only_time_zone_database}&lt;/code&gt; for any other time zone.</source>
          <target state="translated">Muchas funciones del m&amp;oacute;dulo &lt;a href=&quot;datetime&quot;&gt; &lt;code&gt;DateTime&lt;/code&gt; &lt;/a&gt; requieren una base de datos de zona horaria. De forma predeterminada, utiliza la base de datos de zona horaria predeterminada devuelta por &lt;a href=&quot;calendar#get_time_zone_database/0&quot;&gt; &lt;code&gt;Calendar.get_time_zone_database/0&lt;/code&gt; &lt;/a&gt; , que por defecto es &lt;a href=&quot;calendar.utconlytimezonedatabase&quot;&gt; &lt;code&gt;Calendar.UTCOnlyTimeZoneDatabase&lt;/code&gt; &lt;/a&gt; que solo maneja las fechas y horas &quot;Etc / UTC&quot; y devuelve &lt;code&gt;{:error, :utc_only_time_zone_database}&lt;/code&gt; para cualquier otra zona horaria.</target>
        </trans-unit>
        <trans-unit id="ad947ef91255ef33c3330d92501cc4ddd6db30bf" translate="yes" xml:space="preserve">
          <source>Many functions in the &lt;a href=&quot;https://hexdocs.pm/elixir/DateTime.html&quot;&gt;&lt;code&gt;DateTime&lt;/code&gt;&lt;/a&gt; module require a time zone database. By default, it uses the default time zone database returned by &lt;a href=&quot;#get_time_zone_database/0&quot;&gt;&lt;code&gt;Calendar.get_time_zone_database/0&lt;/code&gt;&lt;/a&gt;, which defaults to &lt;a href=&quot;https://hexdocs.pm/elixir/Calendar.UTCOnlyTimeZoneDatabase.html&quot;&gt;&lt;code&gt;Calendar.UTCOnlyTimeZoneDatabase&lt;/code&gt;&lt;/a&gt; which only handles &quot;Etc/UTC&quot; datetimes and returns &lt;code&gt;{:error, :utc_only_time_zone_database}&lt;/code&gt; for any other time zone.</source>
          <target state="translated">Muchas funciones del m&amp;oacute;dulo &lt;a href=&quot;https://hexdocs.pm/elixir/DateTime.html&quot;&gt; &lt;code&gt;DateTime&lt;/code&gt; &lt;/a&gt; requieren una base de datos de zona horaria. De forma predeterminada, utiliza la base de datos de zona horaria predeterminada devuelta por &lt;a href=&quot;#get_time_zone_database/0&quot;&gt; &lt;code&gt;Calendar.get_time_zone_database/0&lt;/code&gt; &lt;/a&gt; , que por defecto es &lt;a href=&quot;https://hexdocs.pm/elixir/Calendar.UTCOnlyTimeZoneDatabase.html&quot;&gt; &lt;code&gt;Calendar.UTCOnlyTimeZoneDatabase&lt;/code&gt; &lt;/a&gt; que solo maneja las fechas y horas &quot;Etc / UTC&quot; y devuelve &lt;code&gt;{:error, :utc_only_time_zone_database}&lt;/code&gt; para cualquier otra zona horaria.</target>
        </trans-unit>
        <trans-unit id="4225573b276c588447af042b7625b6428887292b" translate="yes" xml:space="preserve">
          <source>Many functions in the &lt;code&gt;Stream&lt;/code&gt; module accept any enumerable as an argument and return a stream as a result. It also provides functions for creating streams. For example, &lt;code&gt;Stream.cycle/1&lt;/code&gt; can be used to create a stream that cycles a given enumerable infinitely. Be careful to not call a function like &lt;code&gt;Enum.map/2&lt;/code&gt; on such streams, as they would cycle forever:</source>
          <target state="translated">Muchas funciones del m&amp;oacute;dulo &lt;code&gt;Stream&lt;/code&gt; aceptan cualquier enumerable como argumento y devuelven un stream como resultado. Tambi&amp;eacute;n proporciona funciones para crear flujos. Por ejemplo, &lt;code&gt;Stream.cycle/1&lt;/code&gt; se puede usar para crear un flujo que cicla un enumerable dado infinitamente. Tenga cuidado de no llamar a una funci&amp;oacute;n como &lt;code&gt;Enum.map/2&lt;/code&gt; en tales transmisiones, ya que circular&amp;iacute;an para siempre:</target>
        </trans-unit>
        <trans-unit id="76056aa626b027c1c23fdbd95796d51843ce0c06" translate="yes" xml:space="preserve">
          <source>Many functions in the standard library follow the pattern of having a counterpart that raises an exception instead of returning tuples to match against. The convention is to create a function (&lt;code&gt;foo&lt;/code&gt;) which returns &lt;code&gt;{:ok, result}&lt;/code&gt; or &lt;code&gt;{:error, reason}&lt;/code&gt; tuples and another function (&lt;code&gt;foo!&lt;/code&gt;, same name but with a trailing &lt;code&gt;!&lt;/code&gt;) that takes the same arguments as &lt;code&gt;foo&lt;/code&gt; but which raises an exception if there&amp;rsquo;s an error. &lt;code&gt;foo!&lt;/code&gt; should return the result (not wrapped in a tuple) if everything goes fine. The &lt;a href=&quot;https://hexdocs.pm/elixir/File.html&quot;&gt;&lt;code&gt;File&lt;/code&gt; module&lt;/a&gt; is a good example of this convention.</source>
          <target state="translated">Muchas funciones de la biblioteca est&amp;aacute;ndar siguen el patr&amp;oacute;n de tener una contraparte que genera una excepci&amp;oacute;n en lugar de devolver tuplas para hacer coincidir. La convenci&amp;oacute;n es crear una funci&amp;oacute;n ( &lt;code&gt;foo&lt;/code&gt; ) que devuelve &lt;code&gt;{:ok, result}&lt;/code&gt; o &lt;code&gt;{:error, reason}&lt;/code&gt; tuplas y otra funci&amp;oacute;n ( &lt;code&gt;foo!&lt;/code&gt; mismo nombre pero con un final &lt;code&gt;!&lt;/code&gt; ) Que toma los mismos argumentos que &lt;code&gt;foo&lt;/code&gt; pero que genera una excepci&amp;oacute;n si hay un error. &lt;code&gt;foo!&lt;/code&gt; deber&amp;iacute;a devolver el resultado (no envuelto en una tupla) si todo va bien. El &lt;a href=&quot;https://hexdocs.pm/elixir/File.html&quot;&gt;m&amp;oacute;dulo &lt;/a&gt; &lt;code&gt;File&lt;/code&gt; es un buen ejemplo de esta convenci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="3703d2917265895ef0ac89964db0000551fe6a21" translate="yes" xml:space="preserve">
          <source>Many functions in this module expect an IO device as an argument. An IO device must be a PID or an atom representing a process. For convenience, Elixir provides &lt;code&gt;:stdio&lt;/code&gt; and &lt;code&gt;:stderr&lt;/code&gt; as shortcuts to Erlang's &lt;code&gt;:standard_io&lt;/code&gt; and &lt;code&gt;:standard_error&lt;/code&gt;.</source>
          <target state="translated">Muchas funciones de este m&amp;oacute;dulo esperan un dispositivo IO como argumento. Un dispositivo IO debe ser un PID o un &amp;aacute;tomo que represente un proceso. Para mayor comodidad, Elixir proporciona &lt;code&gt;:stdio&lt;/code&gt; y &lt;code&gt;:stderr&lt;/code&gt; como accesos directos a Erlang's &lt;code&gt;:standard_io&lt;/code&gt; y &lt;code&gt;:standard_error&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9f2d10ee74f910ee80e0d898322396bd24b9b002" translate="yes" xml:space="preserve">
          <source>Many functions in this module handle what to capture in a regex match via the &lt;code&gt;:capture&lt;/code&gt; option. The supported values are:</source>
          <target state="translated">Muchas funciones de este m&amp;oacute;dulo manejan qu&amp;eacute; capturar en una coincidencia de expresiones regulares a trav&amp;eacute;s de la opci&amp;oacute;n &lt;code&gt;:capture&lt;/code&gt; . Los valores admitidos son:</target>
        </trans-unit>
        <trans-unit id="d206ef06c5b999d69bec023c3ecff2ae2d89ff16" translate="yes" xml:space="preserve">
          <source>Many functions in this module require a time zone database. By default, it uses the default time zone database returned by &lt;a href=&quot;calendar#get_time_zone_database/0&quot;&gt;&lt;code&gt;Calendar.get_time_zone_database/0&lt;/code&gt;&lt;/a&gt;, which defaults to &lt;a href=&quot;calendar.utconlytimezonedatabase&quot;&gt;&lt;code&gt;Calendar.UTCOnlyTimeZoneDatabase&lt;/code&gt;&lt;/a&gt; which only handles &quot;Etc/UTC&quot; datetimes and returns &lt;code&gt;{:error, :utc_only_time_zone_database}&lt;/code&gt; for any other time zone.</source>
          <target state="translated">Muchas funciones de este m&amp;oacute;dulo requieren una base de datos de zona horaria. De forma predeterminada, utiliza la base de datos de zona horaria predeterminada devuelta por &lt;a href=&quot;calendar#get_time_zone_database/0&quot;&gt; &lt;code&gt;Calendar.get_time_zone_database/0&lt;/code&gt; &lt;/a&gt; , que por defecto es &lt;a href=&quot;calendar.utconlytimezonedatabase&quot;&gt; &lt;code&gt;Calendar.UTCOnlyTimeZoneDatabase&lt;/code&gt; &lt;/a&gt; que solo maneja las fechas y horas &quot;Etc / UTC&quot; y devuelve &lt;code&gt;{:error, :utc_only_time_zone_database}&lt;/code&gt; para cualquier otra zona horaria.</target>
        </trans-unit>
        <trans-unit id="d4dd6fb3c009dd1400eb7be40f23b4fda3b4e022" translate="yes" xml:space="preserve">
          <source>Many functions in this module require a time zone database. By default, it uses the default time zone database returned by &lt;a href=&quot;https://hexdocs.pm/elixir/Calendar.html#get_time_zone_database/0&quot;&gt;&lt;code&gt;Calendar.get_time_zone_database/0&lt;/code&gt;&lt;/a&gt;, which defaults to &lt;a href=&quot;https://hexdocs.pm/elixir/Calendar.UTCOnlyTimeZoneDatabase.html&quot;&gt;&lt;code&gt;Calendar.UTCOnlyTimeZoneDatabase&lt;/code&gt;&lt;/a&gt; which only handles &quot;Etc/UTC&quot; datetimes and returns &lt;code&gt;{:error, :utc_only_time_zone_database}&lt;/code&gt; for any other time zone.</source>
          <target state="translated">Muchas funciones de este m&amp;oacute;dulo requieren una base de datos de zona horaria. De forma predeterminada, utiliza la base de datos de zona horaria predeterminada devuelta por &lt;a href=&quot;https://hexdocs.pm/elixir/Calendar.html#get_time_zone_database/0&quot;&gt; &lt;code&gt;Calendar.get_time_zone_database/0&lt;/code&gt; &lt;/a&gt; , que por defecto es &lt;a href=&quot;https://hexdocs.pm/elixir/Calendar.UTCOnlyTimeZoneDatabase.html&quot;&gt; &lt;code&gt;Calendar.UTCOnlyTimeZoneDatabase&lt;/code&gt; &lt;/a&gt; que solo maneja las fechas y horas &quot;Etc / UTC&quot; y devuelve &lt;code&gt;{:error, :utc_only_time_zone_database}&lt;/code&gt; para cualquier otra zona horaria.</target>
        </trans-unit>
        <trans-unit id="0260e8c22bbeb10fe3ca38f76f4ac2485f643f27" translate="yes" xml:space="preserve">
          <source>Many functions in this module work with patterns. For example, &lt;a href=&quot;#split/3&quot;&gt;&lt;code&gt;String.split/3&lt;/code&gt;&lt;/a&gt; can split a string into multiple strings given a pattern. This pattern can be a string, a list of strings or a compiled pattern:</source>
          <target state="translated">Muchas funciones de este m&amp;oacute;dulo funcionan con patrones. Por ejemplo, &lt;a href=&quot;#split/3&quot;&gt; &lt;code&gt;String.split/3&lt;/code&gt; &lt;/a&gt; puede dividir una cadena en varias cadenas dado un patr&amp;oacute;n. Este patr&amp;oacute;n puede ser una cadena, una lista de cadenas o un patr&amp;oacute;n compilado:</target>
        </trans-unit>
        <trans-unit id="94392a82be4b05528cead70b8bc5d289f9e18ce9" translate="yes" xml:space="preserve">
          <source>Many functions in this module work with patterns. For example, &lt;a href=&quot;string#split/2&quot;&gt;&lt;code&gt;String.split/2&lt;/code&gt;&lt;/a&gt; can split a string into multiple strings given a pattern. This pattern can be a string, a list of strings or a compiled pattern:</source>
          <target state="translated">Muchas funciones de este m&amp;oacute;dulo funcionan con patrones. Por ejemplo, &lt;a href=&quot;string#split/2&quot;&gt; &lt;code&gt;String.split/2&lt;/code&gt; &lt;/a&gt; puede dividir una cadena en varias cadenas dado un patr&amp;oacute;n. Este patr&amp;oacute;n puede ser una cadena, una lista de cadenas o un patr&amp;oacute;n compilado:</target>
        </trans-unit>
        <trans-unit id="90b7eedb69a34d71ed449486b5fd918febba2efc" translate="yes" xml:space="preserve">
          <source>Many modules share the same public API. Take a look at &lt;a href=&quot;https://github.com/elixir-lang/plug&quot;&gt;Plug&lt;/a&gt;, which, as its description states, is a &lt;strong&gt;specification&lt;/strong&gt; for composable modules in web applications. Each &lt;em&gt;plug&lt;/em&gt; is a module which &lt;strong&gt;has to&lt;/strong&gt; implement at least two public functions: &lt;code&gt;init/1&lt;/code&gt; and &lt;code&gt;call/2&lt;/code&gt;.</source>
          <target state="translated">Muchos m&amp;oacute;dulos comparten la misma API p&amp;uacute;blica. Eche un vistazo a &lt;a href=&quot;https://github.com/elixir-lang/plug&quot;&gt;Plug&lt;/a&gt; , que, como indica su descripci&amp;oacute;n, es una &lt;strong&gt;especificaci&amp;oacute;n&lt;/strong&gt; para m&amp;oacute;dulos componibles en aplicaciones web. Cada &lt;em&gt;conector&lt;/em&gt; es un m&amp;oacute;dulo que &lt;strong&gt;tiene que&lt;/strong&gt; implementar al menos dos funciones p&amp;uacute;blicas: &lt;code&gt;init/1&lt;/code&gt; y &lt;code&gt;call/2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9bad4be1f2158b40250d3557f87cd91435ba7e8c" translate="yes" xml:space="preserve">
          <source>Many of the functions defined in the &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Access&lt;/code&gt;&lt;/a&gt; module internally call this function. This function is also used when the square-brackets access syntax (&lt;code&gt;structure[key]&lt;/code&gt;) is used: the &lt;a href=&quot;#fetch/2&quot;&gt;&lt;code&gt;fetch/2&lt;/code&gt;&lt;/a&gt; callback implemented by the module that defines the &lt;code&gt;structure&lt;/code&gt; struct is invoked and if it returns &lt;code&gt;{:ok, value}&lt;/code&gt; then &lt;code&gt;value&lt;/code&gt; is returned, or if it returns &lt;code&gt;:error&lt;/code&gt; then &lt;code&gt;nil&lt;/code&gt; is returned.</source>
          <target state="translated">Muchas de las funciones definidas en el m&amp;oacute;dulo de &lt;a href=&quot;#content&quot;&gt; &lt;code&gt;Access&lt;/code&gt; &lt;/a&gt; llaman internamente a esta funci&amp;oacute;n. Esta funci&amp;oacute;n tambi&amp;eacute;n se usa cuando se usa la sintaxis de acceso de corchetes ( &lt;code&gt;structure[key]&lt;/code&gt; ): se invoca la devoluci&amp;oacute;n &lt;a href=&quot;#fetch/2&quot;&gt; &lt;code&gt;fetch/2&lt;/code&gt; &lt;/a&gt; llamada fetch / 2 implementada por el m&amp;oacute;dulo que define la &lt;code&gt;structure&lt;/code&gt; struct y si devuelve &lt;code&gt;{:ok, value}&lt;/code&gt; entonces el &lt;code&gt;value&lt;/code&gt; es regres&amp;oacute;, o si reaparece &lt;code&gt;:error&lt;/code&gt; entonces &lt;code&gt;nil&lt;/code&gt; se devuelve.</target>
        </trans-unit>
        <trans-unit id="4c4ca56f0d69fbdc55846e32a022e68f99af15e8" translate="yes" xml:space="preserve">
          <source>Many of the functions in the &lt;code&gt;Macro&lt;/code&gt; module expect an environment. You can read more about these functions in &lt;a href=&quot;https://hexdocs.pm/elixir/Macro.html&quot;&gt;the docs for the &lt;code&gt;Macro&lt;/code&gt; module&lt;/a&gt; and learn more about the compilation environment in the &lt;a href=&quot;https://hexdocs.pm/elixir/Macro.Env.html&quot;&gt;docs for &lt;code&gt;Macro.Env&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Muchas de las funciones del m&amp;oacute;dulo &lt;code&gt;Macro&lt;/code&gt; esperan un entorno. Puede leer m&amp;aacute;s sobre estas funciones en &lt;a href=&quot;https://hexdocs.pm/elixir/Macro.html&quot;&gt;los documentos del m&amp;oacute;dulo &lt;code&gt;Macro&lt;/code&gt; &lt;/a&gt; y obtener m&amp;aacute;s informaci&amp;oacute;n sobre el entorno de compilaci&amp;oacute;n en los &lt;a href=&quot;https://hexdocs.pm/elixir/Macro.Env.html&quot;&gt;documentos de &lt;code&gt;Macro.Env&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4faffc8eead5983ad100523dbff786e387103bd2" translate="yes" xml:space="preserve">
          <source>Many of the functions provided for lists, which implement the &lt;a href=&quot;enumerable&quot;&gt;&lt;code&gt;Enumerable&lt;/code&gt;&lt;/a&gt; protocol, are found in the &lt;a href=&quot;enum&quot;&gt;&lt;code&gt;Enum&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">Muchas de las funciones proporcionadas para las listas, que implementan el protocolo &lt;a href=&quot;enumerable&quot;&gt; &lt;code&gt;Enumerable&lt;/code&gt; &lt;/a&gt; , se encuentran en el m&amp;oacute;dulo &lt;a href=&quot;enum&quot;&gt; &lt;code&gt;Enum&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="fa5e426d610f0d4aaac317eed422e316664919b2" translate="yes" xml:space="preserve">
          <source>Many of those can be used in guards; consult the &lt;a href=&quot;patterns-and-guards#list-of-allowed-functions-and-operators&quot;&gt;list of allowed guard functions and operators&lt;/a&gt;.</source>
          <target state="translated">Muchos de ellos se pueden usar en guardias; consulte la &lt;a href=&quot;patterns-and-guards#list-of-allowed-functions-and-operators&quot;&gt;lista de funciones y operadores de guardia permitidos&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="be6b19c2b27acff99f70a4437bfc926f0a1ca658" translate="yes" xml:space="preserve">
          <source>Many options can be given by using &lt;code&gt;-&lt;/code&gt; as separator. Order is arbitrary, so the following are all equivalent:</source>
          <target state="translated">Se pueden dar muchas opciones usando &lt;code&gt;-&lt;/code&gt; como separador. El orden es arbitrario, por lo que los siguientes son todos equivalentes:</target>
        </trans-unit>
        <trans-unit id="330c1202fe630194f41c59eea84f6ea0bc1f1fd0" translate="yes" xml:space="preserve">
          <source>Many times, inspecting a structure can be implemented in function of existing entities. For example, here is &lt;a href=&quot;https://hexdocs.pm/elixir/MapSet.html&quot;&gt;&lt;code&gt;MapSet&lt;/code&gt;&lt;/a&gt;'s &lt;a href=&quot;#inspect/2&quot;&gt;&lt;code&gt;inspect/2&lt;/code&gt;&lt;/a&gt; implementation:</source>
          <target state="translated">Muchas veces, la inspecci&amp;oacute;n de una estructura se puede implementar en funci&amp;oacute;n de las entidades existentes. Por ejemplo, aqu&amp;iacute; es &lt;a href=&quot;https://hexdocs.pm/elixir/MapSet.html&quot;&gt; &lt;code&gt;MapSet&lt;/code&gt; &lt;/a&gt; s' &lt;a href=&quot;#inspect/2&quot;&gt; &lt;code&gt;inspect/2&lt;/code&gt; &lt;/a&gt; aplicaci&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="76b2e23669853bc8630b7ea68a605ae31ce73aeb" translate="yes" xml:space="preserve">
          <source>Many times, inspecting a structure can be implemented in function of existing entities. For example, here is &lt;a href=&quot;mapset&quot;&gt;&lt;code&gt;MapSet&lt;/code&gt;&lt;/a&gt;'s &lt;a href=&quot;#inspect/2&quot;&gt;&lt;code&gt;inspect/2&lt;/code&gt;&lt;/a&gt; implementation:</source>
          <target state="translated">Muchas veces, la inspecci&amp;oacute;n de una estructura se puede implementar en funci&amp;oacute;n de las entidades existentes. Por ejemplo, aqu&amp;iacute; es &lt;a href=&quot;mapset&quot;&gt; &lt;code&gt;MapSet&lt;/code&gt; &lt;/a&gt; s' &lt;a href=&quot;#inspect/2&quot;&gt; &lt;code&gt;inspect/2&lt;/code&gt; &lt;/a&gt; aplicaci&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="ab478f3efc840eebab919dff1b9512286f70c10c" translate="yes" xml:space="preserve">
          <source>Map</source>
          <target state="translated">Map</target>
        </trans-unit>
        <trans-unit id="c31339a8063fd1ca05b6a5ed0e592c82381795d2" translate="yes" xml:space="preserve">
          <source>Map/dictionary as 2nd argument in &lt;a href=&quot;enum#group_by/3&quot;&gt;&lt;code&gt;Enum.group_by/3&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">Mapa / diccionario como segundo argumento en &lt;a href=&quot;enum#group_by/3&quot;&gt; &lt;code&gt;Enum.group_by/3&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ea310bdd1d4cb6664bd2860f16abce50b8e7ac8b" translate="yes" xml:space="preserve">
          <source>Map/dictionary as 2nd argument in &lt;a href=&quot;https://hexdocs.pm/elixir/Enum.html#group_by/3&quot;&gt;&lt;code&gt;Enum.group_by/3&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">Mapa / diccionario como segundo argumento en &lt;a href=&quot;https://hexdocs.pm/elixir/Enum.html#group_by/3&quot;&gt; &lt;code&gt;Enum.group_by/3&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6f349d9040ff8d6dc02443f2129355396470884e" translate="yes" xml:space="preserve">
          <source>MapSet</source>
          <target state="translated">MapSet</target>
        </trans-unit>
        <trans-unit id="80071cd75107cd5c4afdb2571725ea6733631038" translate="yes" xml:space="preserve">
          <source>Maps</source>
          <target state="translated">Maps</target>
        </trans-unit>
        <trans-unit id="faaabe818891c225544bd509dabd125356710ead" translate="yes" xml:space="preserve">
          <source>Maps allow any value as a key.</source>
          <target state="translated">Los mapas permiten cualquier valor como llave.</target>
        </trans-unit>
        <trans-unit id="7dc037a00a16f714fab195785c4e6e9d7695f9d0" translate="yes" xml:space="preserve">
          <source>Maps also implement the &lt;a href=&quot;https://hexdocs.pm/elixir/Enumerable.html&quot;&gt;&lt;code&gt;Enumerable&lt;/code&gt;&lt;/a&gt; protocol, so many functions to work with maps are found in the &lt;a href=&quot;https://hexdocs.pm/elixir/Enum.html&quot;&gt;&lt;code&gt;Enum&lt;/code&gt;&lt;/a&gt; module. Additionally, the following functions for maps are found in &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html&quot;&gt;&lt;code&gt;Kernel&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">Los mapas tambi&amp;eacute;n implementan el protocolo &lt;a href=&quot;https://hexdocs.pm/elixir/Enumerable.html&quot;&gt; &lt;code&gt;Enumerable&lt;/code&gt; &lt;/a&gt; , por lo que muchas funciones para trabajar con mapas se encuentran en el m&amp;oacute;dulo &lt;a href=&quot;https://hexdocs.pm/elixir/Enum.html&quot;&gt; &lt;code&gt;Enum&lt;/code&gt; &lt;/a&gt; . Adem&amp;aacute;s, las siguientes funciones para mapas se encuentran en &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html&quot;&gt; &lt;code&gt;Kernel&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="d7aa9999474ccd32fc79bec268d52ee73d62bb49" translate="yes" xml:space="preserve">
          <source>Maps also support a specific update syntax to update the value stored under &lt;em&gt;existing&lt;/em&gt; atom keys:</source>
          <target state="translated">Los mapas tambi&amp;eacute;n admiten una sintaxis de actualizaci&amp;oacute;n espec&amp;iacute;fica para actualizar el valor almacenado en &lt;em&gt;las&lt;/em&gt; claves de &amp;aacute;tomo &lt;em&gt;existentes&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="4f807f1c0861c6353d131aaf6d1b3433f38ae0fe" translate="yes" xml:space="preserve">
          <source>Maps and intersperses the given enumerable in one pass.</source>
          <target state="translated">Mapas e intercala el enumerable dado en una sola pasada.</target>
        </trans-unit>
        <trans-unit id="23b5fbc085bbfa528c48b36100e97092a1cc1ad4" translate="yes" xml:space="preserve">
          <source>Maps and joins the given &lt;code&gt;enumerable&lt;/code&gt; in one pass.</source>
          <target state="translated">Mapea y une el &lt;code&gt;enumerable&lt;/code&gt; dado en una sola pasada.</target>
        </trans-unit>
        <trans-unit id="5099fc13865ed694619ef238561f1ff1eb21e4ca" translate="yes" xml:space="preserve">
          <source>Maps and keyword lists</source>
          <target state="translated">Mapas y listas de palabras clave</target>
        </trans-unit>
        <trans-unit id="382a893f2fca3eb55b96aa13fc13acceacd045d1" translate="yes" xml:space="preserve">
          <source>Maps and reduces an &lt;code&gt;enumerable&lt;/code&gt;, flattening the given results (only one level deep).</source>
          <target state="translated">Mapea y reduce un &lt;code&gt;enumerable&lt;/code&gt; , aplanando los resultados dados (solo un nivel de profundidad).</target>
        </trans-unit>
        <trans-unit id="f6cdae6c2a90bda1af5114211ccb41e8558a58da" translate="yes" xml:space="preserve">
          <source>Maps are compared by size, then by keys in ascending term order, then by values in key order. In the specific case of maps' key ordering, integers are always considered to be less than floats.</source>
          <target state="translated">Los mapas se comparan por tamaño,luego por claves en orden ascendente de término,luego por valores en orden de clave.En el caso específico del orden de las claves de los mapas,los números enteros siempre se consideran inferiores a los flotantes.</target>
        </trans-unit>
        <trans-unit id="8c98c45a1d23b0146ef1d00e97519c4b3c41bb31" translate="yes" xml:space="preserve">
          <source>Maps are the &quot;go to&quot; key-value data structure in Elixir.</source>
          <target state="translated">Los mapas son la estructura de datos de valor clave en Elixir.</target>
        </trans-unit>
        <trans-unit id="2c58aeb4eaddeb4b19dfc3e5c22984c273b6c491" translate="yes" xml:space="preserve">
          <source>Maps are the &quot;go to&quot; key-value data structure in Elixir. Maps can be created with the &lt;code&gt;%{}&lt;/code&gt; syntax, and key-value pairs can be expressed as &lt;code&gt;key =&amp;gt; value&lt;/code&gt;:</source>
          <target state="translated">Los mapas son la estructura de datos de clave-valor &quot;ir a&quot; en Elixir. Los mapas se pueden crear con la sintaxis &lt;code&gt;%{}&lt;/code&gt; y los pares clave-valor se pueden expresar como &lt;code&gt;key =&amp;gt; value&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="70c51c829f32f40117be9c91f009f5fddc39b569" translate="yes" xml:space="preserve">
          <source>Maps can be created with the &lt;code&gt;%{}&lt;/code&gt; syntax, and key-value pairs can be expressed as &lt;code&gt;key =&amp;gt; value&lt;/code&gt;:</source>
          <target state="translated">Los mapas se pueden crear con la sintaxis &lt;code&gt;%{}&lt;/code&gt; y los pares clave-valor se pueden expresar como &lt;code&gt;key =&amp;gt; value&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="c8f244270ac78647558651f3076ad4902cf12b49" translate="yes" xml:space="preserve">
          <source>Maps can be pattern matched on. When a map is on the left-hand side of a pattern match, it will match if the map on the right-hand side contains the keys on the left-hand side and their values match the ones on the left-hand side. This means that an empty map matches every map.</source>
          <target state="translated">Los mapas pueden ser comparados con los patrones.Cuando un mapa está en el lado izquierdo de un patrón de coincidencia,coincidirá si el mapa del lado derecho contiene las claves del lado izquierdo y sus valores coinciden con los del lado izquierdo.Esto significa que un mapa vacío coincide con todos los mapas.</target>
        </trans-unit>
        <trans-unit id="2f34883281b6a723f6b44b386e5d7882db692c68" translate="yes" xml:space="preserve">
          <source>Maps do not impose any restriction on the key type: anything can be a key in a map. As a key-value structure, maps do not allow duplicated keys. Keys are compared using the exact-equality operator (&lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#===/2&quot;&gt;&lt;code&gt;===/2&lt;/code&gt;&lt;/a&gt;). If colliding keys are defined in a map literal, the last one prevails.</source>
          <target state="translated">Los mapas no imponen ninguna restricci&amp;oacute;n sobre el tipo de clave: cualquier cosa puede ser una clave en un mapa. Como estructura de clave-valor, los mapas no permiten claves duplicadas. Las claves se comparan utilizando el operador de igualdad exacta ( &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#===/2&quot;&gt; &lt;code&gt;===/2&lt;/code&gt; &lt;/a&gt; ). Si las claves de colisi&amp;oacute;n se definen en un literal de mapa, prevalece la &amp;uacute;ltima.</target>
        </trans-unit>
        <trans-unit id="4bdce2ba7f6c277727a64d1e4440d7e5012f407e" translate="yes" xml:space="preserve">
          <source>Maps do not impose any restriction on the key type: anything can be a key in a map. As a key-value structure, maps do not allow duplicated keys. Keys are compared using the exact-equality operator (&lt;a href=&quot;kernel#===/2&quot;&gt;&lt;code&gt;===/2&lt;/code&gt;&lt;/a&gt;). If colliding keys are defined in a map literal, the last one prevails.</source>
          <target state="translated">Los mapas no imponen ninguna restricci&amp;oacute;n sobre el tipo de clave: cualquier cosa puede ser una clave en un mapa. Como estructura de clave-valor, los mapas no permiten claves duplicadas. Las claves se comparan utilizando el operador de igualdad exacta ( &lt;a href=&quot;kernel#===/2&quot;&gt; &lt;code&gt;===/2&lt;/code&gt; &lt;/a&gt; ). Si las claves en colisi&amp;oacute;n se definen en un mapa literal, prevalecer&amp;aacute; la &amp;uacute;ltima.</target>
        </trans-unit>
        <trans-unit id="bd2672e5330a5447b3c12c9d7516bbd11a97aa64" translate="yes" xml:space="preserve">
          <source>Maps have the following syntax for updating a key&amp;rsquo;s value:</source>
          <target state="translated">Los mapas tienen la siguiente sintaxis para actualizar el valor de una clave:</target>
        </trans-unit>
        <trans-unit id="df4d74f64dad54de9172b6ef5d50d38fbf79035b" translate="yes" xml:space="preserve">
          <source>Maps may appear in patterns using the percentage sign followed by the curly brackets syntax (&lt;code&gt;%{}&lt;/code&gt;). Opposite to lists and tuples, maps perform a subset match. This means a map pattern will match any other map that has at least all of the keys in the pattern.</source>
          <target state="translated">Los mapas pueden aparecer en patrones utilizando el signo de porcentaje seguido de la sintaxis de llaves ( &lt;code&gt;%{}&lt;/code&gt; ). Frente a las listas y tuplas, los mapas realizan una coincidencia de subconjuntos. Esto significa que un patr&amp;oacute;n de mapa coincidir&amp;aacute; con cualquier otro mapa que tenga al menos todas las claves en el patr&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="b18104f0603d252465f48bc07dbe82afd8a5d572" translate="yes" xml:space="preserve">
          <source>Maps the given &lt;code&gt;fun&lt;/code&gt; over &lt;code&gt;enumerable&lt;/code&gt; and flattens the result.</source>
          <target state="translated">Mapea la &lt;code&gt;fun&lt;/code&gt; dada sobre &lt;code&gt;enumerable&lt;/code&gt; y aplana el resultado.</target>
        </trans-unit>
        <trans-unit id="5204e90c54387d7f6b5371b939a57cc337fb682b" translate="yes" xml:space="preserve">
          <source>Maps use the &lt;code&gt;%{...}&lt;/code&gt; notation and each key-value is given by pairs marked with &lt;code&gt;=&amp;gt;&lt;/code&gt;, such as &lt;code&gt;%{&quot;hello&quot; =&amp;gt; 1, 2 =&amp;gt; &quot;world&quot;}&lt;/code&gt;.</source>
          <target state="translated">Los mapas usan la notaci&amp;oacute;n &lt;code&gt;%{...}&lt;/code&gt; y cada valor-clave viene dado por pares marcados con &lt;code&gt;=&amp;gt;&lt;/code&gt; , como &lt;code&gt;%{&quot;hello&quot; =&amp;gt; 1, 2 =&amp;gt; &quot;world&quot;}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5b30399c385e93b1607671f629e3c17811777473" translate="yes" xml:space="preserve">
          <source>Maps&amp;rsquo; keys do not follow any ordering.</source>
          <target state="translated">Las claves de Maps no siguen ning&amp;uacute;n orden.</target>
        </trans-unit>
        <trans-unit id="23e67fceae0d77dd571dd25695fc0499faf1bb77" translate="yes" xml:space="preserve">
          <source>Markdown</source>
          <target state="translated">Markdown</target>
        </trans-unit>
        <trans-unit id="ec2d3f7496eeae736a17fb6cfbbc3d6cec0ede8f" translate="yes" xml:space="preserve">
          <source>Markdown uses backticks (&lt;code&gt;`&lt;/code&gt;) to quote code. Elixir builds on top of that to automatically generate links when module or function names are referenced. For this reason, always use full module names. If you have a module called &lt;code&gt;MyApp.Hello&lt;/code&gt;, always reference it as &lt;code&gt;`MyApp.Hello`&lt;/code&gt; and never as &lt;code&gt;`Hello`&lt;/code&gt;.</source>
          <target state="translated">Markdown usa comillas invertidas ( &lt;code&gt;`&lt;/code&gt; ) para citar el c&amp;oacute;digo. Elixir se basa en eso para generar enlaces autom&amp;aacute;ticamente cuando se hace referencia a los nombres de m&amp;oacute;dulos o funciones. Por este motivo, utilice siempre los nombres completos de los m&amp;oacute;dulos. Si tiene un m&amp;oacute;dulo llamado &lt;code&gt;MyApp.Hello&lt;/code&gt; , siempre haga referencia a &amp;eacute;l como &lt;code&gt;`MyApp.Hello`&lt;/code&gt; y nunca &lt;code&gt;`Hello`&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="217f8bccae9fba9687ba7ff03998f906b2857c1d" translate="yes" xml:space="preserve">
          <source>Markers &lt;code&gt;&quot;/&quot;&lt;/code&gt; and &lt;code&gt;&quot;|&quot;&lt;/code&gt; are only for use in custom EEx engines and are not implemented by default. Using them without an appropriate implementation raises &lt;a href=&quot;eex.syntaxerror&quot;&gt;&lt;code&gt;EEx.SyntaxError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Marcadores &lt;code&gt;&quot;/&quot;&lt;/code&gt; y &lt;code&gt;&quot;|&quot;&lt;/code&gt; solo se utilizan en motores EEx personalizados y no se implementan de forma predeterminada. &lt;a href=&quot;eex.syntaxerror&quot;&gt; &lt;code&gt;EEx.SyntaxError&lt;/code&gt; &lt;/a&gt; sin una implementaci&amp;oacute;n adecuada genera EEx.SyntaxError .</target>
        </trans-unit>
        <trans-unit id="afbf70382126809dcc83d5a0baa9b100761627b8" translate="yes" xml:space="preserve">
          <source>Markers &lt;code&gt;&quot;/&quot;&lt;/code&gt; and &lt;code&gt;&quot;|&quot;&lt;/code&gt; are only for use in custom EEx engines and are not implemented by default. Using them without an appropriate implementation raises &lt;a href=&quot;https://hexdocs.pm/eex/EEx.SyntaxError.html&quot;&gt;&lt;code&gt;EEx.SyntaxError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Marcadores &lt;code&gt;&quot;/&quot;&lt;/code&gt; y &lt;code&gt;&quot;|&quot;&lt;/code&gt; solo se utilizan en motores EEx personalizados y no se implementan de forma predeterminada. &lt;a href=&quot;https://hexdocs.pm/eex/EEx.SyntaxError.html&quot;&gt; &lt;code&gt;EEx.SyntaxError&lt;/code&gt; &lt;/a&gt; sin una implementaci&amp;oacute;n adecuada genera EEx.SyntaxError .</target>
        </trans-unit>
        <trans-unit id="caae004dd7762602ee13f32c3606f690c674cc52" translate="yes" xml:space="preserve">
          <source>Marks if the system should halt or not at the end of ARGV processing.</source>
          <target state="translated">Marca si el sistema debe detenerse o no al final del procesamiento del ARGV.</target>
        </trans-unit>
        <trans-unit id="daa3ede97b95d72b81888db9393f9e1bcea3ccac" translate="yes" xml:space="preserve">
          <source>Marks that the given variable should not be hygienized.</source>
          <target state="translated">Marca que la variable dada no debe ser higienizada.</target>
        </trans-unit>
        <trans-unit id="e8df966767fbd3a383c53216799beb4b4564cb74" translate="yes" xml:space="preserve">
          <source>Mastering Markdown</source>
          <target state="translated">Dominio de la marcación</target>
        </trans-unit>
        <trans-unit id="85919633d0c1a681dd648ed32addd8fdbee372f3" translate="yes" xml:space="preserve">
          <source>Match operator. Matches the value on the right against the pattern on the left.</source>
          <target state="translated">Operador del partido.Compara el valor de la derecha con el patrón de la izquierda.</target>
        </trans-unit>
        <trans-unit id="158acb8638a5ae524e2b6bf247590e2b87f6ec4d" translate="yes" xml:space="preserve">
          <source>MatchError</source>
          <target state="translated">MatchError</target>
        </trans-unit>
        <trans-unit id="96751a5eacdf747401e9907e7e83faf6f1a03e3b" translate="yes" xml:space="preserve">
          <source>MatchError &lt;small&gt;exception&lt;/small&gt;</source>
          <target state="translated">MatchError &lt;small&gt;excepci&amp;oacute;n&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="ee2dbd5d6d82d0833069b07e7dd2848d3bf4d83a" translate="yes" xml:space="preserve">
          <source>Matches</source>
          <target state="translated">Matches</target>
        </trans-unit>
        <trans-unit id="2d84b42f8474be5f06fc1fe6eb6ae40c8a64822a" translate="yes" xml:space="preserve">
          <source>Matches on or builds a struct.</source>
          <target state="translated">Coincide con o construye una estructura.</target>
        </trans-unit>
        <trans-unit id="d1c12ec871d541a72434054efa8076c09aed8fb5" translate="yes" xml:space="preserve">
          <source>Matches the given expression against the given clauses.</source>
          <target state="translated">Coincide la expresión dada con las cláusulas dadas.</target>
        </trans-unit>
        <trans-unit id="8b76a5c96001ffefea3cc84097a4d45e79f04e10" translate="yes" xml:space="preserve">
          <source>Matches the term on the &lt;code&gt;left&lt;/code&gt; against the regular expression or string on the &lt;code&gt;right&lt;/code&gt;.</source>
          <target state="translated">Hace coincidir el t&amp;eacute;rmino de la &lt;code&gt;left&lt;/code&gt; con la expresi&amp;oacute;n regular o cadena de la &lt;code&gt;right&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="213cb6a13e45b535bfa6e1acc183ec880d53557f" translate="yes" xml:space="preserve">
          <source>Matches the value on the right against the pattern on the left.</source>
          <target state="translated">Coincide el valor de la derecha con el patrón de la izquierda.</target>
        </trans-unit>
        <trans-unit id="e5c433e838d8cf469d6f4b86a0a4976ce8db4a93" translate="yes" xml:space="preserve">
          <source>Matching &lt;code&gt;x&lt;/code&gt; against 2 would raise:</source>
          <target state="translated">Emparejar &lt;code&gt;x&lt;/code&gt; contra 2 aumentar&amp;iacute;a:</target>
        </trans-unit>
        <trans-unit id="b35bb5e881268b8de9b651fa2e51e3623ab167b7" translate="yes" xml:space="preserve">
          <source>Mechanism for handling behaviours.</source>
          <target state="translated">Mecanismo de manejo de los comportamientos.</target>
        </trans-unit>
        <trans-unit id="b873cd45985fe1c621dd194bc36973e23339f383" translate="yes" xml:space="preserve">
          <source>Membership is tested with the match (&lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#===/2&quot;&gt;&lt;code&gt;===/2&lt;/code&gt;&lt;/a&gt;) operator.</source>
          <target state="translated">La membres&amp;iacute;a se prueba con el operador de coincidencia ( &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#===/2&quot;&gt; &lt;code&gt;===/2&lt;/code&gt; &lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="0f436c24ccfa651b93064f0d2e54084d164dc06e" translate="yes" xml:space="preserve">
          <source>Membership is tested with the match (&lt;a href=&quot;kernel#===/2&quot;&gt;&lt;code&gt;===/2&lt;/code&gt;&lt;/a&gt;) operator.</source>
          <target state="translated">La membres&amp;iacute;a se prueba con el operador de coincidencia ( &lt;a href=&quot;kernel#===/2&quot;&gt; &lt;code&gt;===/2&lt;/code&gt; &lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="9184827d2046a26e76cbe3bdb691f2ddb10c2fb1" translate="yes" xml:space="preserve">
          <source>Membership operator. Checks if the element on the left-hand side is a member of the collection on the right-hand side.</source>
          <target state="translated">Operador de membresía.Comprueba si el elemento de la izquierda es un miembro de la colección de la derecha.</target>
        </trans-unit>
        <trans-unit id="d89ba7d209c7ddc88fd31bf2598cbf585fb0aa81" translate="yes" xml:space="preserve">
          <source>Merges two URIs.</source>
          <target state="translated">Fusiona dos URIs.</target>
        </trans-unit>
        <trans-unit id="4069e43ecbf8943679ac63e2d6e02de8e6a7137b" translate="yes" xml:space="preserve">
          <source>Merges two configurations.</source>
          <target state="translated">Fusiona dos configuraciones.</target>
        </trans-unit>
        <trans-unit id="a9fa5b094d178e27f7bd2a2b568ea8b694678d55" translate="yes" xml:space="preserve">
          <source>Merges two keyword lists into one.</source>
          <target state="translated">Fusiona dos listas de palabras clave en una.</target>
        </trans-unit>
        <trans-unit id="acf0cf4f2e4c966874470b9f049a43c211b544d9" translate="yes" xml:space="preserve">
          <source>Merges two maps into one, resolving conflicts through the given &lt;code&gt;fun&lt;/code&gt;.</source>
          <target state="translated">Fusiona dos mapas en uno, resolviendo conflictos a trav&amp;eacute;s de la &lt;code&gt;fun&lt;/code&gt; dada .</target>
        </trans-unit>
        <trans-unit id="472d94b64a8f716f1678ee270e1d1c87f01b9840" translate="yes" xml:space="preserve">
          <source>Merges two maps into one.</source>
          <target state="translated">Fusiona dos mapas en uno.</target>
        </trans-unit>
        <trans-unit id="243261baef2add3b3b97656268303e291d4fa8b4" translate="yes" xml:space="preserve">
          <source>Message and function APIs</source>
          <target state="translated">Mensaje y función API</target>
        </trans-unit>
        <trans-unit id="62a587d636afdda61a08b5027d8d771633fc5216" translate="yes" xml:space="preserve">
          <source>Message format</source>
          <target state="translated">Formato del mensaje</target>
        </trans-unit>
        <trans-unit id="7d9a0f1c2be58d1d8ee9acd43a53bc9fde228a1e" translate="yes" xml:space="preserve">
          <source>Meta-programming</source>
          <target state="translated">Meta-programming</target>
        </trans-unit>
        <trans-unit id="9ce697e52d7e466c89411bf1535cdf6ff43e22f1" translate="yes" xml:space="preserve">
          <source>Meta-programming guide</source>
          <target state="translated">Guía de meta-programación</target>
        </trans-unit>
        <trans-unit id="fa22e0676cd79851be85b6434a7e6e08111fa009" translate="yes" xml:space="preserve">
          <source>Meta-programming in Elixir</source>
          <target state="translated">Meta-programación en el Elixir</target>
        </trans-unit>
        <trans-unit id="251edc0eb5a820646bda4e103f0f007fd55321f3" translate="yes" xml:space="preserve">
          <source>Metadata</source>
          <target state="translated">Metadata</target>
        </trans-unit>
        <trans-unit id="7f0cf2cb1796c66f262f9ca3a16a007623f8614c" translate="yes" xml:space="preserve">
          <source>Metadata can have any key. Documentation tools often use metadata to provide more data to readers and to enrich the user experience.</source>
          <target state="translated">Los metadatos pueden tener cualquier clave.Los instrumentos de documentación suelen utilizar metadatos para proporcionar más datos a los lectores y enriquecer la experiencia del usuario.</target>
        </trans-unit>
        <trans-unit id="2d84d1f82b3284c403ade0a511b9ae944c022317" translate="yes" xml:space="preserve">
          <source>Metadata to be sent to the logger can be read and written with the &lt;a href=&quot;https://hexdocs.pm/logger/Logger.html#metadata/0&quot;&gt;&lt;code&gt;Logger.metadata/0&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://hexdocs.pm/logger/Logger.html#metadata/1&quot;&gt;&lt;code&gt;Logger.metadata/1&lt;/code&gt;&lt;/a&gt; functions. For example, you can set &lt;code&gt;Logger.metadata([user_id: 13])&lt;/code&gt; to add user_id metadata to the current process. The user can configure the backend to choose which metadata it wants to print and it will replace the &lt;code&gt;$metadata&lt;/code&gt; value.</source>
          <target state="translated">Los metadatos que se enviar&amp;aacute;n al registrador se pueden leer y escribir con las &lt;a href=&quot;https://hexdocs.pm/logger/Logger.html#metadata/0&quot;&gt; &lt;code&gt;Logger.metadata/0&lt;/code&gt; &lt;/a&gt; y &lt;a href=&quot;https://hexdocs.pm/logger/Logger.html#metadata/1&quot;&gt; &lt;code&gt;Logger.metadata/1&lt;/code&gt; &lt;/a&gt; . Por ejemplo, puede configurar &lt;code&gt;Logger.metadata([user_id: 13])&lt;/code&gt; para agregar metadatos de user_id al proceso actual. El usuario puede configurar el backend para elegir qu&amp;eacute; metadatos desea imprimir y reemplazar&amp;aacute; el valor de &lt;code&gt;$metadata&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ae75c0cef5625d04c957fd4d6945de2e3cb52281" translate="yes" xml:space="preserve">
          <source>Metadata to be sent to the logger can be read and written with the &lt;a href=&quot;logger#metadata/0&quot;&gt;&lt;code&gt;Logger.metadata/0&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;logger#metadata/1&quot;&gt;&lt;code&gt;Logger.metadata/1&lt;/code&gt;&lt;/a&gt; functions. For example, you can set &lt;code&gt;Logger.metadata([user_id: 13])&lt;/code&gt; to add user_id metadata to the current process. The user can configure the backend to choose which metadata it wants to print and it will replace the &lt;code&gt;$metadata&lt;/code&gt; value.</source>
          <target state="translated">Los metadatos que se enviar&amp;aacute;n al registrador se pueden leer y escribir con las &lt;a href=&quot;logger#metadata/0&quot;&gt; &lt;code&gt;Logger.metadata/0&lt;/code&gt; &lt;/a&gt; y &lt;a href=&quot;logger#metadata/1&quot;&gt; &lt;code&gt;Logger.metadata/1&lt;/code&gt; &lt;/a&gt; . Por ejemplo, puede configurar &lt;code&gt;Logger.metadata([user_id: 13])&lt;/code&gt; para agregar metadatos de user_id al proceso actual. El usuario puede configurar el backend para elegir qu&amp;eacute; metadatos desea imprimir y reemplazar&amp;aacute; el valor de &lt;code&gt;$metadata&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d6e66778ed96781c28086fcc3541fc2af93e8299" translate="yes" xml:space="preserve">
          <source>Microseconds &lt;em&gt;(does not support width and padding modifiers)&lt;/em&gt;</source>
          <target state="translated">Microsegundos &lt;em&gt;(no admite modificadores de ancho y relleno)&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="996eccb481568235d0a028deddc16efa49e5113a" translate="yes" xml:space="preserve">
          <source>Microseconds can also be given with a precision, which must be an integer between 0 and 6.</source>
          <target state="translated">Los microsegundos también se pueden dar con una precisión,que debe ser un número entero entre 0 y 6.</target>
        </trans-unit>
        <trans-unit id="dfde79a8eeb31b646662fce17bc79e76db2d4ad1" translate="yes" xml:space="preserve">
          <source>Microseconds with stored precision.</source>
          <target state="translated">Microsegundos con precisión almacenada.</target>
        </trans-unit>
        <trans-unit id="ae8f2632075078189571124ccbd2fa14d6202a8b" translate="yes" xml:space="preserve">
          <source>Migrating from &lt;code&gt;use Mix.Config&lt;/code&gt;</source>
          <target state="translated">Migraci&amp;oacute;n desde el &lt;code&gt;use Mix.Config&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7e092faa3e25342ecf5028acae902f24fdcd4cfc" translate="yes" xml:space="preserve">
          <source>Migrating from Supervisor's :simple_one_for_one</source>
          <target state="translated">Migrar desde el Supervisor :simple_uno_por_uno</target>
        </trans-unit>
        <trans-unit id="c1335d3e7a03c5a9cce93a720fba00fd5265fb99" translate="yes" xml:space="preserve">
          <source>Minute</source>
          <target state="translated">Minute</target>
        </trans-unit>
        <trans-unit id="c92a133e8e92ffcf0c9578a6d4506ea98170ba24" translate="yes" xml:space="preserve">
          <source>Mirrors</source>
          <target state="translated">Mirrors</target>
        </trans-unit>
        <trans-unit id="119fff5ad66da150ab8b91c4f195f7205786f58d" translate="yes" xml:space="preserve">
          <source>Missing parent directories are created. Returns &lt;code&gt;:ok&lt;/code&gt; if successful, or &lt;code&gt;{:error, reason}&lt;/code&gt; if an error occurs.</source>
          <target state="translated">Se crean directorios principales que faltan. Devuelve &lt;code&gt;:ok&lt;/code&gt; si tiene &amp;eacute;xito, o &lt;code&gt;{:error, reason}&lt;/code&gt; si ocurre un error.</target>
        </trans-unit>
        <trans-unit id="9e60798bf941d9439890dc6ea1e2b3874b037fa8" translate="yes" xml:space="preserve">
          <source>Missing parent directories are not created. Returns &lt;code&gt;:ok&lt;/code&gt; if successful, or &lt;code&gt;{:error, reason}&lt;/code&gt; if an error occurs.</source>
          <target state="translated">Los directorios principales que faltan no se crean. Devuelve &lt;code&gt;:ok&lt;/code&gt; si tiene &amp;eacute;xito, o &lt;code&gt;{:error, reason}&lt;/code&gt; si ocurre un error.</target>
        </trans-unit>
        <trans-unit id="fd7391b6720b809c7c41ed50cf63fdc87dac6b9d" translate="yes" xml:space="preserve">
          <source>Mix</source>
          <target state="translated">Mix</target>
        </trans-unit>
        <trans-unit id="8a48b8da8f54401b98b40a13634225508f5d8cd7" translate="yes" xml:space="preserve">
          <source>Mix Tasks</source>
          <target state="translated">Mezclar tareas</target>
        </trans-unit>
        <trans-unit id="adf80b3737e1d992babad11068b089417997b0c6" translate="yes" xml:space="preserve">
          <source>Mix also falls back to the &lt;code&gt;XDG_DATA_HOME&lt;/code&gt; and &lt;code&gt;XDG_CONFIG_HOME&lt;/code&gt; environment variables when storing its contents and configuration.</source>
          <target state="translated">Mix tambi&amp;eacute;n &lt;code&gt;XDG_CONFIG_HOME&lt;/code&gt; las variables de entorno &lt;code&gt;XDG_DATA_HOME&lt;/code&gt; y XDG_CONFIG_HOME al almacenar su contenido y configuraci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="fad17235fd472ad3a611eb5939096f52cba44598" translate="yes" xml:space="preserve">
          <source>Mix also generated a file named &lt;code&gt;test/test_helper.exs&lt;/code&gt; which is responsible for setting up the test framework:</source>
          <target state="translated">Mix tambi&amp;eacute;n gener&amp;oacute; un archivo llamado &lt;code&gt;test/test_helper.exs&lt;/code&gt; que es responsable de configurar el marco de prueba:</target>
        </trans-unit>
        <trans-unit id="d5f417a1b2c5b2cf642913e1126e746153ac794c" translate="yes" xml:space="preserve">
          <source>Mix also generated the appropriate structure for running our project tests. Mix projects usually follow the convention of having a &lt;code&gt;&amp;lt;filename&amp;gt;_test.exs&lt;/code&gt; file in the &lt;code&gt;test&lt;/code&gt; directory for each file in the &lt;code&gt;lib&lt;/code&gt; directory. For this reason, we can already find a &lt;code&gt;test/kv_test.exs&lt;/code&gt; corresponding to our &lt;code&gt;lib/kv.ex&lt;/code&gt; file. It doesn&amp;rsquo;t do much at this point:</source>
          <target state="translated">Mix tambi&amp;eacute;n gener&amp;oacute; la estructura adecuada para ejecutar las pruebas de nuestro proyecto. Los proyectos &lt;code&gt;&amp;lt;filename&amp;gt;_test.exs&lt;/code&gt; generalmente siguen la convenci&amp;oacute;n de tener un archivo &amp;lt;nombre de archivo&amp;gt; _test.exs en el directorio de &lt;code&gt;test&lt;/code&gt; para cada archivo en el directorio &lt;code&gt;lib&lt;/code&gt; . Por esta raz&amp;oacute;n, ya podemos encontrar una &lt;code&gt;test/kv_test.exs&lt;/code&gt; correspondiente a nuestro archivo &lt;code&gt;lib/kv.ex&lt;/code&gt; .No hace mucho en este punto:</target>
        </trans-unit>
        <trans-unit id="e787071e1565ddba8a2e537f8771328f0ffb3a18" translate="yes" xml:space="preserve">
          <source>Mix also generates a file at &lt;code&gt;lib/kv.ex&lt;/code&gt; with a module containing exactly one function, called &lt;code&gt;hello&lt;/code&gt;:</source>
          <target state="translated">Mix tambi&amp;eacute;n genera un archivo en &lt;code&gt;lib/kv.ex&lt;/code&gt; con un m&amp;oacute;dulo que contiene exactamente una funci&amp;oacute;n, llamada &lt;code&gt;hello&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="71bacf97d94e38a4255175d63dd82250400f8cac" translate="yes" xml:space="preserve">
          <source>Mix also manages your dependencies and integrates nicely with the &lt;a href=&quot;https://hex.pm&quot;&gt;Hex package manager&lt;/a&gt;.</source>
          <target state="translated">Mix tambi&amp;eacute;n administra sus dependencias y se integra muy bien con el &lt;a href=&quot;https://hex.pm&quot;&gt;administrador de paquetes Hex&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="02fd3a28a69477778e8b16f7b3cce09332f74ae5" translate="yes" xml:space="preserve">
          <source>Mix also supports Git and path dependencies:</source>
          <target state="translated">Mix también apoya las dependencias de Git y path:</target>
        </trans-unit>
        <trans-unit id="04bb9bcfa3927d3cae40daaaa838d4ef230a39cd" translate="yes" xml:space="preserve">
          <source>Mix and OTP</source>
          <target state="translated">Mezcla y OTP</target>
        </trans-unit>
        <trans-unit id="d25cf695ebdb9d0aee542ce2f227391b7ee2bf55" translate="yes" xml:space="preserve">
          <source>Mix and OTP guide</source>
          <target state="translated">Guía de mezcla y OTP</target>
        </trans-unit>
        <trans-unit id="5fa528ba639f2c7c836de5f176cd81f9105e7965" translate="yes" xml:space="preserve">
          <source>Mix by default ships with a public key but new ones can be added on demand.</source>
          <target state="translated">Mezclar por defecto las naves con una clave pública,pero se pueden añadir nuevas a petición.</target>
        </trans-unit>
        <trans-unit id="3c49eb51ca3d0ac562423c46ed5a59028d459767" translate="yes" xml:space="preserve">
          <source>Mix can be used to manage Erlang projects that don't have any Elixir code. To ensure Mix tasks work correctly for an Erlang project, &lt;code&gt;language: :erlang&lt;/code&gt; has to be part of the configuration returned by &lt;code&gt;project/0&lt;/code&gt;. This setting also makes sure Elixir is not added as a dependency to the generated &lt;code&gt;.app&lt;/code&gt; file or to the escript generated with &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Escript.Build.html&quot;&gt;&lt;code&gt;mix escript.build&lt;/code&gt;&lt;/a&gt;, and so on.</source>
          <target state="translated">Mix se puede usar para administrar proyectos de Erlang que no tienen ning&amp;uacute;n c&amp;oacute;digo Elixir. Para garantizar que las tareas de Mix funcionen correctamente para un proyecto de Erlang, &lt;code&gt;language: :erlang&lt;/code&gt; tiene que ser parte de la configuraci&amp;oacute;n devuelta por &lt;code&gt;project/0&lt;/code&gt; . Esta configuraci&amp;oacute;n tambi&amp;eacute;n asegura que Elixir no se agregue como una dependencia al archivo &lt;code&gt;.app&lt;/code&gt; generado o al escript generado con &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Escript.Build.html&quot;&gt; &lt;code&gt;mix escript.build&lt;/code&gt; &lt;/a&gt; , y as&amp;iacute; sucesivamente.</target>
        </trans-unit>
        <trans-unit id="a2a56ce9bc8efd270013eaafce32886b18ad521f" translate="yes" xml:space="preserve">
          <source>Mix can be used to manage Erlang projects that don't have any Elixir code. To ensure Mix tasks work correctly for an Erlang project, &lt;code&gt;language: :erlang&lt;/code&gt; has to be part of the configuration returned by &lt;code&gt;project/0&lt;/code&gt;. This setting also makes sure Elixir is not added as a dependency to the generated &lt;code&gt;.app&lt;/code&gt; file or to the escript generated with &lt;a href=&quot;mix.tasks.escript.build&quot;&gt;&lt;code&gt;mix escript.build&lt;/code&gt;&lt;/a&gt;, and so on.</source>
          <target state="translated">Mix se puede usar para administrar proyectos de Erlang que no tienen ning&amp;uacute;n c&amp;oacute;digo Elixir. Para garantizar que las tareas de Mix funcionen correctamente para un proyecto de Erlang, &lt;code&gt;language: :erlang&lt;/code&gt; debe ser parte de la configuraci&amp;oacute;n devuelta por &lt;code&gt;project/0&lt;/code&gt; . Esta configuraci&amp;oacute;n tambi&amp;eacute;n asegura que Elixir no se agregue como una dependencia al archivo &lt;code&gt;.app&lt;/code&gt; generado o al escript generado con &lt;a href=&quot;mix.tasks.escript.build&quot;&gt; &lt;code&gt;mix escript.build&lt;/code&gt; &lt;/a&gt; , y as&amp;iacute; sucesivamente.</target>
        </trans-unit>
        <trans-unit id="2cdb0b1920ef5553ebcd1f21161694f9fc79e940" translate="yes" xml:space="preserve">
          <source>Mix is a build tool and, as such, it is not expected to be available in production. Therefore, it is recommended to access &lt;code&gt;Mix.env&lt;/code&gt; only in configuration files and inside &lt;code&gt;mix.exs&lt;/code&gt;, never in your application code (&lt;code&gt;lib&lt;/code&gt;).</source>
          <target state="translated">Mix es una herramienta de construcci&amp;oacute;n y, como tal, no se espera que est&amp;eacute; disponible en producci&amp;oacute;n. Por lo tanto, se recomienda acceder a &lt;code&gt;Mix.env&lt;/code&gt; solo en los archivos de configuraci&amp;oacute;n y dentro de &lt;code&gt;mix.exs&lt;/code&gt; , nunca en el c&amp;oacute;digo de su aplicaci&amp;oacute;n ( &lt;code&gt;lib&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="c6da9856af4245149570c16ec4188fc5d3115e0f" translate="yes" xml:space="preserve">
          <source>Mix is a build tool that provides tasks for creating, compiling, and testing Elixir projects, managing its dependencies, and more.</source>
          <target state="translated">Mix es una herramienta de construcción que proporciona tareas para crear,compilar y probar proyectos de Elixir,gestionar sus dependencias y más.</target>
        </trans-unit>
        <trans-unit id="a0df83a511be738d9e0de24c58fdbe9cd553aa72" translate="yes" xml:space="preserve">
          <source>Mix is the project management and build tool for Elixir. Invoking &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Test.html&quot;&gt;&lt;code&gt;mix test&lt;/code&gt;&lt;/a&gt; from the command line will run the tests in each file matching the pattern &lt;code&gt;*_test.exs&lt;/code&gt; found in the &lt;code&gt;test&lt;/code&gt; directory of your project.</source>
          <target state="translated">Mix es la herramienta de construcci&amp;oacute;n y gesti&amp;oacute;n de proyectos para Elixir. Al invocar la &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Test.html&quot;&gt; &lt;code&gt;mix test&lt;/code&gt; &lt;/a&gt; desde la l&amp;iacute;nea de comandos, se ejecutar&amp;aacute;n las pruebas en cada archivo que coincida con el patr&amp;oacute;n &lt;code&gt;*_test.exs&lt;/code&gt; que se encuentra en el directorio de &lt;code&gt;test&lt;/code&gt; de su proyecto.</target>
        </trans-unit>
        <trans-unit id="6efd811f3c57b4beedb58b4c74d9cfc0e7bd84d8" translate="yes" xml:space="preserve">
          <source>Mix makes a distinction between projects and applications. Based on the contents of our &lt;code&gt;mix.exs&lt;/code&gt; file, we would say we have a Mix project that defines the &lt;code&gt;:kv&lt;/code&gt; application. As we will see in later chapters, there are projects that don&amp;rsquo;t define any application.</source>
          <target state="translated">Mix distingue entre proyectos y aplicaciones. Seg&amp;uacute;n el contenido de nuestro archivo &lt;code&gt;mix.exs&lt;/code&gt; , dir&amp;iacute;amos que tenemos un proyecto Mix que define la aplicaci&amp;oacute;n &lt;code&gt;:kv&lt;/code&gt; . Como veremos en cap&amp;iacute;tulos posteriores, hay proyectos que no definen ninguna aplicaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="be2005a661cc869ecef72b52d2f918c6a1c2bad6" translate="yes" xml:space="preserve">
          <source>Mix projects can specify required archives using the &lt;code&gt;:archives&lt;/code&gt; option:</source>
          <target state="translated">Los proyectos mixtos pueden especificar los archivos necesarios mediante la opci&amp;oacute;n: &lt;code&gt;:archives&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="648fcb70fef0f7b235a3a4efb99b43d14093584b" translate="yes" xml:space="preserve">
          <source>Mix provides many tasks for working with dependencies, which can be seen in &lt;code&gt;mix help&lt;/code&gt;:</source>
          <target state="translated">Mix proporciona muchas tareas para trabajar con dependencias, que se pueden ver en la &lt;code&gt;mix help&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="6ad0076d881adfffd287f386c898dd8d3dfe63d9" translate="yes" xml:space="preserve">
          <source>Mix provides the concept of &amp;ldquo;environments&amp;rdquo;. They allow a developer to customize compilation and other options for specific scenarios. By default, Mix understands three environments:</source>
          <target state="translated">Mix proporciona el concepto de &quot;entornos&quot;. Permiten al desarrollador personalizar la compilaci&amp;oacute;n y otras opciones para escenarios espec&amp;iacute;ficos. De forma predeterminada, Mix comprende tres entornos:</target>
        </trans-unit>
        <trans-unit id="d0eb4f5b6efc2f498d0a43bf2cce656e8deeb64f" translate="yes" xml:space="preserve">
          <source>Mix responds to the following variables:</source>
          <target state="translated">Mix responde a las siguientes variables:</target>
        </trans-unit>
        <trans-unit id="9083e0d8be0e72f0bd60c89828382861a3d53dd0" translate="yes" xml:space="preserve">
          <source>Mix shell that uses the current process mailbox for communication.</source>
          <target state="translated">Un shell mixto que utiliza el buzón del proceso actual para la comunicación.</target>
        </trans-unit>
        <trans-unit id="ad263de6a1ec790ca04b9e1c0d40a550701c6fa7" translate="yes" xml:space="preserve">
          <source>Mix ships with many tasks under the &lt;code&gt;profile&lt;/code&gt; namespace, such as &lt;code&gt;cprof&lt;/code&gt; and &lt;code&gt;fprof&lt;/code&gt;</source>
          <target state="translated">Mezcle los barcos con muchas tareas en el espacio de nombres del &lt;code&gt;profile&lt;/code&gt; , como &lt;code&gt;cprof&lt;/code&gt; y &lt;code&gt;fprof&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="34cf07547ba5e61214e86cb3580e3d48c9fa65b9" translate="yes" xml:space="preserve">
          <source>Mix supports different environments. Environments allow developers to prepare and organize their project specifically for different scenarios. By default, Mix provides three environments:</source>
          <target state="translated">Mix apoya diferentes ambientes.Los entornos permiten a los desarrolladores preparar y organizar su proyecto específicamente para diferentes escenarios.Por defecto,Mix proporciona tres entornos:</target>
        </trans-unit>
        <trans-unit id="83b58a0b5c1a90355989a0e6c6c83aa3b187f7ca" translate="yes" xml:space="preserve">
          <source>Mix tasks are designed to run only once. This prevents the same task to be executed multiple times. For example, if there are several tasks depending on &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Compile.html&quot;&gt;&lt;code&gt;mix compile&lt;/code&gt;&lt;/a&gt;, the code will be compiled once. Tasks can be executed again if they are explicitly reenabled using &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Task.html#reenable/1&quot;&gt;&lt;code&gt;Mix.Task.reenable/1&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">Las tareas mixtas est&amp;aacute;n dise&amp;ntilde;adas para ejecutarse solo una vez. Esto evita que la misma tarea se ejecute varias veces. Por ejemplo, si hay varias tareas dependiendo de la &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Compile.html&quot;&gt; &lt;code&gt;mix compile&lt;/code&gt; &lt;/a&gt; , el c&amp;oacute;digo se compilar&amp;aacute; una vez. Las tareas se pueden ejecutar de nuevo si se vuelven a habilitar expl&amp;iacute;citamente con &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Task.html#reenable/1&quot;&gt; &lt;code&gt;Mix.Task.reenable/1&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="e1d70ab3fabbbe21fc38f850f28d9a31374f92fc" translate="yes" xml:space="preserve">
          <source>Mix tasks are designed to run only once. This prevents the same task to be executed multiple times. For example, if there are several tasks depending on &lt;a href=&quot;mix.tasks.compile&quot;&gt;&lt;code&gt;mix compile&lt;/code&gt;&lt;/a&gt;, the code will be compiled once. Tasks can be executed again if they are explicitly reenabled using &lt;a href=&quot;mix.task#reenable/1&quot;&gt;&lt;code&gt;Mix.Task.reenable/1&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">Las tareas mixtas est&amp;aacute;n dise&amp;ntilde;adas para ejecutarse solo una vez. Esto evita que la misma tarea se ejecute varias veces. Por ejemplo, si hay varias tareas que dependen de la &lt;a href=&quot;mix.tasks.compile&quot;&gt; &lt;code&gt;mix compile&lt;/code&gt; &lt;/a&gt; , el c&amp;oacute;digo se compilar&amp;aacute; una vez. Las tareas se pueden ejecutar de nuevo si se vuelven a habilitar expl&amp;iacute;citamente con &lt;a href=&quot;mix.task#reenable/1&quot;&gt; &lt;code&gt;Mix.Task.reenable/1&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="afb48dfad219bb575ed5a6a2a2d6171fe59e0c43" translate="yes" xml:space="preserve">
          <source>Mix will create a directory named &lt;code&gt;kv&lt;/code&gt; with a few files in it:</source>
          <target state="translated">Mix crear&amp;aacute; un directorio llamado &lt;code&gt;kv&lt;/code&gt; con algunos archivos en &amp;eacute;l:</target>
        </trans-unit>
        <trans-unit id="8fa02d3dbeffdcfedef855ce25999f5c0e80ec49" translate="yes" xml:space="preserve">
          <source>Mix will default to the &lt;code&gt;:dev&lt;/code&gt; environment, except for the &lt;code&gt;test&lt;/code&gt; task that will default to the &lt;code&gt;:test&lt;/code&gt; environment. The environment can be changed via the &lt;code&gt;MIX_ENV&lt;/code&gt; environment variable:</source>
          <target state="translated">Mix se establecer&amp;aacute; de forma predeterminada en el entorno &lt;code&gt;:dev&lt;/code&gt; , a excepci&amp;oacute;n de la tarea de &lt;code&gt;test&lt;/code&gt; que se establecer&amp;aacute; de forma predeterminada en el entorno &lt;code&gt;:test&lt;/code&gt; . El entorno se puede cambiar mediante la variable de entorno &lt;code&gt;MIX_ENV&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="399305e4f380845bf197d5745b3fee53dc94ea53" translate="yes" xml:space="preserve">
          <source>Mix will load the &lt;code&gt;test_helper.exs&lt;/code&gt; file before executing the tests. It is not necessary to &lt;code&gt;require&lt;/code&gt; the &lt;code&gt;test_helper.exs&lt;/code&gt; file in your test files. See &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Test.html&quot;&gt;&lt;code&gt;Mix.Tasks.Test&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">Mix cargar&amp;aacute; el archivo &lt;code&gt;test_helper.exs&lt;/code&gt; antes de ejecutar las pruebas. No es necesario &lt;code&gt;require&lt;/code&gt; el archivo &lt;code&gt;test_helper.exs&lt;/code&gt; en sus archivos de prueba. Consulte &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Test.html&quot;&gt; &lt;code&gt;Mix.Tasks.Test&lt;/code&gt; &lt;/a&gt; para obtener m&amp;aacute;s informaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="ee77903e91bd71aaf1d44a1d48282536084b696b" translate="yes" xml:space="preserve">
          <source>Mix.Config</source>
          <target state="translated">Mix.Config</target>
        </trans-unit>
        <trans-unit id="e7628834f3db8ecf170e414a049c01be9012e895" translate="yes" xml:space="preserve">
          <source>Mix.ElixirVersionError</source>
          <target state="translated">Mix.ElixirVersionError</target>
        </trans-unit>
        <trans-unit id="5d3ee672a247963bfe70c641177c1ba0a41ff083" translate="yes" xml:space="preserve">
          <source>Mix.ElixirVersionError &lt;small&gt;exception&lt;/small&gt;</source>
          <target state="translated">Mix.ElixirVersionError &lt;small&gt;excepci&amp;oacute;n&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="ba0c0d562a5605e3a981b412bfebf8f39b9cb8cd" translate="yes" xml:space="preserve">
          <source>Mix.Error</source>
          <target state="translated">Mix.Error</target>
        </trans-unit>
        <trans-unit id="2f66ee90982acc2333482e324e66f83680cb1f82" translate="yes" xml:space="preserve">
          <source>Mix.Error &lt;small&gt;exception&lt;/small&gt;</source>
          <target state="translated">Mix.Error &lt;small&gt;excepci&amp;oacute;n&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="b88ebcf3bbdbb70cb1e50aee5837165ee0fe04e4" translate="yes" xml:space="preserve">
          <source>Mix.Generator</source>
          <target state="translated">Mix.Generator</target>
        </trans-unit>
        <trans-unit id="677bfdd437f39d48687e8e09deb896bdab1ffcab" translate="yes" xml:space="preserve">
          <source>Mix.InvalidTaskError</source>
          <target state="translated">Mix.InvalidTaskError</target>
        </trans-unit>
        <trans-unit id="73acde233ddd7f978233bc0c9c03ffcb591e4127" translate="yes" xml:space="preserve">
          <source>Mix.InvalidTaskError &lt;small&gt;exception&lt;/small&gt;</source>
          <target state="translated">Mix.InvalidTaskError &lt;small&gt;excepci&amp;oacute;n&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="5656de2d70dc1fd33545f113c9c31f4468c93c9f" translate="yes" xml:space="preserve">
          <source>Mix.NoProjectError</source>
          <target state="translated">Mix.NoProjectError</target>
        </trans-unit>
        <trans-unit id="a3cd7de13e58b68149c17286a492f048bc5a4f9f" translate="yes" xml:space="preserve">
          <source>Mix.NoProjectError &lt;small&gt;exception&lt;/small&gt;</source>
          <target state="translated">Mix.NoProjectError &lt;small&gt;excepci&amp;oacute;n&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="2296b8a4da20e50fc86db62a76ae3a0f21236d09" translate="yes" xml:space="preserve">
          <source>Mix.NoTaskError</source>
          <target state="translated">Mix.NoTaskError</target>
        </trans-unit>
        <trans-unit id="4758003c8f1681557fd809da1ff272c0a4bdc616" translate="yes" xml:space="preserve">
          <source>Mix.NoTaskError &lt;small&gt;exception&lt;/small&gt;</source>
          <target state="translated">Mix.NoTaskError &lt;small&gt;excepci&amp;oacute;n&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="f736ae59e13a4e4114e4af3bf6ddc51b25a5bb36" translate="yes" xml:space="preserve">
          <source>Mix.Project</source>
          <target state="translated">Mix.Project</target>
        </trans-unit>
        <trans-unit id="b27a97deee7753ee8eb8c3806c9cd74d0bb623c8" translate="yes" xml:space="preserve">
          <source>Mix.Release</source>
          <target state="translated">Mix.Release</target>
        </trans-unit>
        <trans-unit id="7bf1594ecaa648fd474444d9f33117c28b7ba143" translate="yes" xml:space="preserve">
          <source>Mix.SCM</source>
          <target state="translated">Mix.SCM</target>
        </trans-unit>
        <trans-unit id="12559e0f7b32d5fd2155ad9ecec382ea1f9fb246" translate="yes" xml:space="preserve">
          <source>Mix.SCM &lt;small&gt;behaviour&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;Comportamiento&lt;/small&gt; Mix.SCM&lt;small&gt;&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="147dd88a75a0c786898d12b4f3b2f0d6509bdbbe" translate="yes" xml:space="preserve">
          <source>Mix.Shell</source>
          <target state="translated">Mix.Shell</target>
        </trans-unit>
        <trans-unit id="db6ddc34f19b653dd6682b35bc47a0feda16df77" translate="yes" xml:space="preserve">
          <source>Mix.Shell &lt;small&gt;behaviour&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;Comportamiento&lt;/small&gt; Mix.Shell&lt;small&gt;&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="467f63e6768ca92e850a24bb5559e6ceb3ff2d65" translate="yes" xml:space="preserve">
          <source>Mix.Shell.IO</source>
          <target state="translated">Mix.Shell.IO</target>
        </trans-unit>
        <trans-unit id="ae6604b3cc7069b10edb34181cf30fa1c7e69549" translate="yes" xml:space="preserve">
          <source>Mix.Shell.Process</source>
          <target state="translated">Mix.Shell.Process</target>
        </trans-unit>
        <trans-unit id="c13560925a5e68a093665c40b5877151b400f1d5" translate="yes" xml:space="preserve">
          <source>Mix.Shell.Quiet</source>
          <target state="translated">Mix.Shell.Quiet</target>
        </trans-unit>
        <trans-unit id="d04ad970550a78d0484fc6fba35ca08880a1b57f" translate="yes" xml:space="preserve">
          <source>Mix.Task</source>
          <target state="translated">Mix.Task</target>
        </trans-unit>
        <trans-unit id="426aac8f0abf87df945411bf3866831ccdd5ee99" translate="yes" xml:space="preserve">
          <source>Mix.Task &lt;small&gt;behaviour&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;Comportamiento de&lt;/small&gt; Mix.Task&lt;small&gt;&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="6f91ff2c65c62a79e11d8c360e69332bd77495df" translate="yes" xml:space="preserve">
          <source>Mix.Task.Compiler</source>
          <target state="translated">Mix.Task.Compiler</target>
        </trans-unit>
        <trans-unit id="53feeecd2c589ebee644042d57a6c38decab8485" translate="yes" xml:space="preserve">
          <source>Mix.Task.Compiler &lt;small&gt;behaviour&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;Comportamiento de&lt;/small&gt; Mix.Task.Compiler&lt;small&gt;&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="d2bcc64e4a2da01e6d8df9586fbe7326fe6c2619" translate="yes" xml:space="preserve">
          <source>Mix.Task.Compiler.Diagnostic</source>
          <target state="translated">Mix.Task.Compiler.Diagnostic</target>
        </trans-unit>
        <trans-unit id="f260e757cec75096bc3eefbfb1c4a14720832017" translate="yes" xml:space="preserve">
          <source>Modifier</source>
          <target state="translated">Modifier</target>
        </trans-unit>
        <trans-unit id="3a7ea294bf33134dce4b142b8b7182de29b978b2" translate="yes" xml:space="preserve">
          <source>Modifiers</source>
          <target state="translated">Modifiers</target>
        </trans-unit>
        <trans-unit id="63368ee0cfe73d65555cc05d160f4780d59c63dd" translate="yes" xml:space="preserve">
          <source>Modifies command line arguments.</source>
          <target state="translated">Modifica los argumentos de la línea de mando.</target>
        </trans-unit>
        <trans-unit id="b8ff02892916ff59f7fbd4e617fccd01f6bca576" translate="yes" xml:space="preserve">
          <source>Module</source>
          <target state="translated">Module</target>
        </trans-unit>
        <trans-unit id="9297e283a310f6ab7d943b5269f1a79016e762cb" translate="yes" xml:space="preserve">
          <source>Module &lt;small&gt;behaviour&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;Comportamiento del&lt;/small&gt; m&amp;oacute;dulo&lt;small&gt;&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="9c3f2aba6913de8da00faed8e2df2428bb1257b7" translate="yes" xml:space="preserve">
          <source>Module Attributes</source>
          <target state="translated">Atributos del módulo</target>
        </trans-unit>
        <trans-unit id="974d46d1f85954ab50d762a7e03d4820f241857f" translate="yes" xml:space="preserve">
          <source>Module and describe tags</source>
          <target state="translated">Modificar y describir las etiquetas</target>
        </trans-unit>
        <trans-unit id="ff725127805595b93c72cd98d8e8f3dbd5984820" translate="yes" xml:space="preserve">
          <source>Module attribute unary operator. Reads and writes attributes in the current module.</source>
          <target state="translated">Atributo del módulo operador unario.Lee y escribe atributos en el módulo actual.</target>
        </trans-unit>
        <trans-unit id="330765efeb90ac3d911657d7500e925bd8f2537b" translate="yes" xml:space="preserve">
          <source>Module attributes</source>
          <target state="translated">Atributos del módulo</target>
        </trans-unit>
        <trans-unit id="611dbb58b63e5a3205266276e6a852dcaa7a3969" translate="yes" xml:space="preserve">
          <source>Module attributes in Elixir serve three purposes:</source>
          <target state="translated">Los atributos del módulo en Elixir sirven para tres propósitos:</target>
        </trans-unit>
        <trans-unit id="e1e3ec1d59bfdc3e7d0eaa73499821e62209421e" translate="yes" xml:space="preserve">
          <source>Module attributes reader (&lt;code&gt;@foo&lt;/code&gt;)</source>
          <target state="translated">Lector de atributos del m&amp;oacute;dulo ( &lt;code&gt;@foo&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="ddfcf23684bdb5ef441d59b66364129fcb4f0309" translate="yes" xml:space="preserve">
          <source>Module nesting</source>
          <target state="translated">El anidamiento de los módulos</target>
        </trans-unit>
        <trans-unit id="40144123a36c18a55943d34cbb9a342139e699ec" translate="yes" xml:space="preserve">
          <source>Module to work with, define, and import records.</source>
          <target state="translated">Módulo para trabajar,definir e importar registros.</target>
        </trans-unit>
        <trans-unit id="cc1693df58c9640eee91eb5bd91f74e7ad932311" translate="yes" xml:space="preserve">
          <source>Module-based supervisors</source>
          <target state="translated">Los supervisores de los módulos</target>
        </trans-unit>
        <trans-unit id="82bcbad43b8fe828d8612d7cf59577c71448624a" translate="yes" xml:space="preserve">
          <source>Module.Types.Error</source>
          <target state="translated">Module.Types.Error</target>
        </trans-unit>
        <trans-unit id="2835d1253cc2dd6d4f2059714db091dee1de72c4" translate="yes" xml:space="preserve">
          <source>Module.Types.Error &lt;small&gt;exception&lt;/small&gt;</source>
          <target state="translated">Module.Types.Error &lt;small&gt;excepci&amp;oacute;n&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="04e9462c0ff02bb9032b92abd45881a3c7e15fb7" translate="yes" xml:space="preserve">
          <source>Modules</source>
          <target state="translated">Modules</target>
        </trans-unit>
        <trans-unit id="f355677d6ea7dd474a7c5dc3db11334d6f6003dc" translate="yes" xml:space="preserve">
          <source>Modules adopting the &lt;code&gt;Parser&lt;/code&gt; behaviour will have to implement all the functions defined with the &lt;code&gt;@callback&lt;/code&gt; attribute. As you can see, &lt;code&gt;@callback&lt;/code&gt; expects a function name but also a function specification like the ones used with the &lt;code&gt;@spec&lt;/code&gt; attribute we saw above. Also note that the &lt;code&gt;term&lt;/code&gt; type is used to represent the parsed value. In Elixir, the &lt;code&gt;term&lt;/code&gt; type is a shortcut to represent any type.</source>
          <target state="translated">Los m&amp;oacute;dulos que adopten el comportamiento del &lt;code&gt;Parser&lt;/code&gt; deber&amp;aacute;n implementar todas las funciones definidas con el atributo &lt;code&gt;@callback&lt;/code&gt; . Como puede ver, &lt;code&gt;@callback&lt;/code&gt; espera un nombre de funci&amp;oacute;n, pero tambi&amp;eacute;n una especificaci&amp;oacute;n de funci&amp;oacute;n como las que se usan con el atributo &lt;code&gt;@spec&lt;/code&gt; que vimos anteriormente. Tambi&amp;eacute;n tenga en cuenta que el &lt;code&gt;term&lt;/code&gt; tipo se utiliza para representar el valor analizado. En Elixir, el &lt;code&gt;term&lt;/code&gt; tipo es un atajo para representar cualquier tipo.</target>
        </trans-unit>
        <trans-unit id="2f22992ace2b7b2537bcbf08c8e4ceeca5300f8f" translate="yes" xml:space="preserve">
          <source>Modules adopting the &lt;code&gt;Parser&lt;/code&gt; behaviour will have to implement all the functions defined with the &lt;code&gt;@callback&lt;/code&gt; directive. As you can see, &lt;code&gt;@callback&lt;/code&gt; expects a function name but also a function specification like the ones used with the &lt;code&gt;@spec&lt;/code&gt; directive we saw above. Also note that the &lt;code&gt;term&lt;/code&gt; type is used to represent the parsed value. In Elixir, the &lt;code&gt;term&lt;/code&gt; type is a shortcut to represent any type.</source>
          <target state="translated">Los m&amp;oacute;dulos que adopten el comportamiento del &lt;code&gt;Parser&lt;/code&gt; deber&amp;aacute;n implementar todas las funciones definidas con la directiva &lt;code&gt;@callback&lt;/code&gt; . Como puede ver, &lt;code&gt;@callback&lt;/code&gt; espera un nombre de funci&amp;oacute;n, pero tambi&amp;eacute;n una especificaci&amp;oacute;n de funci&amp;oacute;n como las que se usan con la directiva &lt;code&gt;@spec&lt;/code&gt; que vimos anteriormente. Tambi&amp;eacute;n tenga en cuenta que el &lt;code&gt;term&lt;/code&gt; tipo se utiliza para representar el valor analizado. En Elixir, el &lt;code&gt;term&lt;/code&gt; tipo es un atajo para representar cualquier tipo.</target>
        </trans-unit>
        <trans-unit id="dbf8ec2a137ea97fd047b1bf5fb0e081373aaeef" translate="yes" xml:space="preserve">
          <source>Modules and functions</source>
          <target state="translated">Módulos y funciones</target>
        </trans-unit>
        <trans-unit id="f95593466c9236f423e2ca78c791a9ed452a97e0" translate="yes" xml:space="preserve">
          <source>Modules compiled with HiPE would not call this hook.</source>
          <target state="translated">Los módulos compilados con HiPE no llamarían a esto gancho.</target>
        </trans-unit>
        <trans-unit id="5f7948a408bbeb081e3bf4398d0a06535fe04fa6" translate="yes" xml:space="preserve">
          <source>Modules that are not yet loaded won't show up. Check &lt;a href=&quot;#load_all/0&quot;&gt;&lt;code&gt;load_all/0&lt;/code&gt;&lt;/a&gt; if you want to preload all tasks.</source>
          <target state="translated">Los m&amp;oacute;dulos que a&amp;uacute;n no est&amp;aacute;n cargados no aparecer&amp;aacute;n. Marque &lt;a href=&quot;#load_all/0&quot;&gt; &lt;code&gt;load_all/0&lt;/code&gt; &lt;/a&gt; si desea precargar todas las tareas.</target>
        </trans-unit>
        <trans-unit id="bda622c46b037f80824387d421dc386c6556e7d2" translate="yes" xml:space="preserve">
          <source>Modules that interface with the underlying system, such as:</source>
          <target state="translated">Módulos que se interconectan con el sistema subyacente,como:</target>
        </trans-unit>
        <trans-unit id="24b2a0993d0cfa93c44282d6bba72bcf58b300d6" translate="yes" xml:space="preserve">
          <source>Mon</source>
          <target state="translated">Mon</target>
        </trans-unit>
        <trans-unit id="932eeb1076c85e522f02e15441fa371e3fd000ac" translate="yes" xml:space="preserve">
          <source>Monday</source>
          <target state="translated">Monday</target>
        </trans-unit>
        <trans-unit id="49fb186a5c3efc09ccd0d283216aa3aefc8c1db1" translate="yes" xml:space="preserve">
          <source>Monitors or links?</source>
          <target state="translated">¿Monitores o enlaces?</target>
        </trans-unit>
        <trans-unit id="b5af02a7afd8f398df475e389f375296b40fcadb" translate="yes" xml:space="preserve">
          <source>Monitors the status of the node.</source>
          <target state="translated">Monitorea el estado del nodo.</target>
        </trans-unit>
        <trans-unit id="082bc378cd60e17a38d99898b21955299c5b60c8" translate="yes" xml:space="preserve">
          <source>Month</source>
          <target state="translated">Month</target>
        </trans-unit>
        <trans-unit id="531f01d1f3ee72b3521ad6573e9645c241df955d" translate="yes" xml:space="preserve">
          <source>More detailed information is returned if you provide the &lt;code&gt;--callers&lt;/code&gt; and &lt;code&gt;--details&lt;/code&gt; options.</source>
          <target state="translated">Se devuelve informaci&amp;oacute;n m&amp;aacute;s detallada si proporciona las opciones &lt;code&gt;--callers&lt;/code&gt; y &lt;code&gt;--details&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="679fb30706daaf38b9e2ca52a7581c5f7429d440" translate="yes" xml:space="preserve">
          <source>More examples of paired functions: &lt;a href=&quot;base#decode16/2&quot;&gt;&lt;code&gt;Base.decode16/2&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;base#decode16!/2&quot;&gt;&lt;code&gt;Base.decode16!/2&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;file#cwd/0&quot;&gt;&lt;code&gt;File.cwd/0&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;file#cwd!/0&quot;&gt;&lt;code&gt;File.cwd!/0&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">M&amp;aacute;s ejemplos de funciones emparejadas: &lt;a href=&quot;base#decode16/2&quot;&gt; &lt;code&gt;Base.decode16/2&lt;/code&gt; &lt;/a&gt; y &lt;a href=&quot;base#decode16!/2&quot;&gt; &lt;code&gt;Base.decode16!/2&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;file#cwd/0&quot;&gt; &lt;code&gt;File.cwd/0&lt;/code&gt; &lt;/a&gt; y &lt;a href=&quot;file#cwd!/0&quot;&gt; &lt;code&gt;File.cwd!/0&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a76b5d6cb0550f163be45d1ffe3dd80feed4cca5" translate="yes" xml:space="preserve">
          <source>More examples of paired functions: &lt;a href=&quot;https://hexdocs.pm/elixir/Base.html#decode16/2&quot;&gt;&lt;code&gt;Base.decode16/2&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://hexdocs.pm/elixir/Base.html#decode16!/2&quot;&gt;&lt;code&gt;Base.decode16!/2&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://hexdocs.pm/elixir/File.html#cwd/0&quot;&gt;&lt;code&gt;File.cwd/0&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://hexdocs.pm/elixir/File.html#cwd!/0&quot;&gt;&lt;code&gt;File.cwd!/0&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">M&amp;aacute;s ejemplos de funciones emparejadas: &lt;a href=&quot;https://hexdocs.pm/elixir/Base.html#decode16/2&quot;&gt; &lt;code&gt;Base.decode16/2&lt;/code&gt; &lt;/a&gt; y &lt;a href=&quot;https://hexdocs.pm/elixir/Base.html#decode16!/2&quot;&gt; &lt;code&gt;Base.decode16!/2&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;https://hexdocs.pm/elixir/File.html#cwd/0&quot;&gt; &lt;code&gt;File.cwd/0&lt;/code&gt; &lt;/a&gt; y &lt;a href=&quot;https://hexdocs.pm/elixir/File.html#cwd!/0&quot;&gt; &lt;code&gt;File.cwd!/0&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b89d915a104252705d1f85ce849ed077d1dac0ac" translate="yes" xml:space="preserve">
          <source>More information about graphemes can be found in the &lt;a href=&quot;https://www.unicode.org/reports/tr29/&quot;&gt;Unicode Standard Annex #29&lt;/a&gt;. The current Elixir version implements Extended Grapheme Cluster algorithm.</source>
          <target state="translated">Puede encontrar m&amp;aacute;s informaci&amp;oacute;n sobre los grafemas en el &lt;a href=&quot;https://www.unicode.org/reports/tr29/&quot;&gt;Anexo # 29 del est&amp;aacute;ndar Unicode&lt;/a&gt; . La versi&amp;oacute;n actual de Elixir implementa el algoritmo Extended Grapheme Cluster.</target>
        </trans-unit>
        <trans-unit id="088ca4e64f0525b9190a46a6e7d28dc2bb334d89" translate="yes" xml:space="preserve">
          <source>More information about the tuple data type and about functions to manipulate tuples can be found in the &lt;a href=&quot;https://hexdocs.pm/elixir/Tuple.html&quot;&gt;&lt;code&gt;Tuple&lt;/code&gt;&lt;/a&gt; module; some functions for working with tuples are also available in &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html&quot;&gt;&lt;code&gt;Kernel&lt;/code&gt;&lt;/a&gt; (such as &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#elem/2&quot;&gt;&lt;code&gt;Kernel.elem/2&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#tuple_size/1&quot;&gt;&lt;code&gt;Kernel.tuple_size/1&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">Puede encontrar m&amp;aacute;s informaci&amp;oacute;n sobre el tipo de datos de tupla y sobre las funciones para manipular tuplas en el m&amp;oacute;dulo &lt;a href=&quot;https://hexdocs.pm/elixir/Tuple.html&quot;&gt; &lt;code&gt;Tuple&lt;/code&gt; &lt;/a&gt; ; Algunas funciones para trabajar con tuplas tambi&amp;eacute;n est&amp;aacute;n disponibles en &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html&quot;&gt; &lt;code&gt;Kernel&lt;/code&gt; &lt;/a&gt; (como &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#elem/2&quot;&gt; &lt;code&gt;Kernel.elem/2&lt;/code&gt; &lt;/a&gt; o &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#tuple_size/1&quot;&gt; &lt;code&gt;Kernel.tuple_size/1&lt;/code&gt; &lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="a5e8684b13528d21f979a1818ef3d359d73c9599" translate="yes" xml:space="preserve">
          <source>More information about the tuple data type and about functions to manipulate tuples can be found in the &lt;a href=&quot;tuple&quot;&gt;&lt;code&gt;Tuple&lt;/code&gt;&lt;/a&gt; module; some functions for working with tuples are also available in &lt;a href=&quot;kernel&quot;&gt;&lt;code&gt;Kernel&lt;/code&gt;&lt;/a&gt; (such as &lt;a href=&quot;kernel#elem/2&quot;&gt;&lt;code&gt;Kernel.elem/2&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;kernel#tuple_size/1&quot;&gt;&lt;code&gt;Kernel.tuple_size/1&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">Puede encontrar m&amp;aacute;s informaci&amp;oacute;n sobre el tipo de datos de tupla y sobre las funciones para manipular tuplas en el m&amp;oacute;dulo &lt;a href=&quot;tuple&quot;&gt; &lt;code&gt;Tuple&lt;/code&gt; &lt;/a&gt; ; Algunas funciones para trabajar con tuplas tambi&amp;eacute;n est&amp;aacute;n disponibles en &lt;a href=&quot;kernel&quot;&gt; &lt;code&gt;Kernel&lt;/code&gt; &lt;/a&gt; (como &lt;a href=&quot;kernel#elem/2&quot;&gt; &lt;code&gt;Kernel.elem/2&lt;/code&gt; &lt;/a&gt; o &lt;a href=&quot;kernel#tuple_size/1&quot;&gt; &lt;code&gt;Kernel.tuple_size/1&lt;/code&gt; &lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="430a22fd9616cca59513735ab6a5d8e059b24d05" translate="yes" xml:space="preserve">
          <source>More information on date times can be found in the &lt;a href=&quot;datetime&quot;&gt;&lt;code&gt;DateTime&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">Puede encontrar m&amp;aacute;s informaci&amp;oacute;n sobre las fechas y horas en el m&amp;oacute;dulo &lt;a href=&quot;datetime&quot;&gt; &lt;code&gt;DateTime&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e04894dfd3a6bb66a7491537a157990555658def" translate="yes" xml:space="preserve">
          <source>More information on date times can be found in the &lt;a href=&quot;https://hexdocs.pm/elixir/DateTime.html&quot;&gt;&lt;code&gt;DateTime&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">Puede encontrar m&amp;aacute;s informaci&amp;oacute;n sobre las fechas y horas en el m&amp;oacute;dulo &lt;a href=&quot;https://hexdocs.pm/elixir/DateTime.html&quot;&gt; &lt;code&gt;DateTime&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a10a384a2270f2efaa542fb180ccc3a8a8fab8a8" translate="yes" xml:space="preserve">
          <source>More information on dates can be found in the &lt;a href=&quot;date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">Puede encontrar m&amp;aacute;s informaci&amp;oacute;n sobre las fechas en el m&amp;oacute;dulo &lt;a href=&quot;date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ad7f92deccb05da471db41290bd58b1c393e4789" translate="yes" xml:space="preserve">
          <source>More information on dates can be found in the &lt;a href=&quot;https://hexdocs.pm/elixir/Date.html&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">Puede encontrar m&amp;aacute;s informaci&amp;oacute;n sobre las fechas en el m&amp;oacute;dulo &lt;a href=&quot;https://hexdocs.pm/elixir/Date.html&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="45f71097bb0f5266ed4f78a2e99026509e61b3b6" translate="yes" xml:space="preserve">
          <source>More information on naive date times can be found in the &lt;a href=&quot;https://hexdocs.pm/elixir/NaiveDateTime.html&quot;&gt;&lt;code&gt;NaiveDateTime&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">Se puede encontrar m&amp;aacute;s informaci&amp;oacute;n sobre fechas ingenuas en el m&amp;oacute;dulo &lt;a href=&quot;https://hexdocs.pm/elixir/NaiveDateTime.html&quot;&gt; &lt;code&gt;NaiveDateTime&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1d09563b1d7bf20501a96abf9b569ef7f610dceb" translate="yes" xml:space="preserve">
          <source>More information on naive date times can be found in the &lt;a href=&quot;naivedatetime&quot;&gt;&lt;code&gt;NaiveDateTime&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">Se puede encontrar m&amp;aacute;s informaci&amp;oacute;n sobre fechas ingenuas en el m&amp;oacute;dulo &lt;a href=&quot;naivedatetime&quot;&gt; &lt;code&gt;NaiveDateTime&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="fade606b3bd42ef1829481b3da2ebb0df791e41d" translate="yes" xml:space="preserve">
          <source>More information on regexes can be found in the &lt;a href=&quot;https://hexdocs.pm/elixir/Regex.html&quot;&gt;&lt;code&gt;Regex&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">Se puede encontrar m&amp;aacute;s informaci&amp;oacute;n sobre las expresiones regulares en el m&amp;oacute;dulo &lt;a href=&quot;https://hexdocs.pm/elixir/Regex.html&quot;&gt; &lt;code&gt;Regex&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c85521cfa0af914c1bfcc721a8420c6e8c54e6ca" translate="yes" xml:space="preserve">
          <source>More information on regexes can be found in the &lt;a href=&quot;regex&quot;&gt;&lt;code&gt;Regex&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">Puede encontrar m&amp;aacute;s informaci&amp;oacute;n sobre las expresiones regulares en el m&amp;oacute;dulo &lt;a href=&quot;regex&quot;&gt; &lt;code&gt;Regex&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d0e509c546dcb0afd4dc86df671153581bf407f3" translate="yes" xml:space="preserve">
          <source>More information on regular expressions can be found in the &lt;a href=&quot;https://hexdocs.pm/elixir/Regex.html&quot;&gt;&lt;code&gt;Regex&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">Puede encontrar m&amp;aacute;s informaci&amp;oacute;n sobre expresiones regulares en el m&amp;oacute;dulo &lt;a href=&quot;https://hexdocs.pm/elixir/Regex.html&quot;&gt; &lt;code&gt;Regex&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="943682535e16011c70352d95eb0b5a94fc51f1ec" translate="yes" xml:space="preserve">
          <source>More information on regular expressions can be found in the &lt;a href=&quot;regex&quot;&gt;&lt;code&gt;Regex&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">Puede encontrar m&amp;aacute;s informaci&amp;oacute;n sobre expresiones regulares en el m&amp;oacute;dulo &lt;a href=&quot;regex&quot;&gt; &lt;code&gt;Regex&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="57430af0cc488dc7ee178424fa4b1f09dd9b2473" translate="yes" xml:space="preserve">
          <source>More information on times can be found in the &lt;a href=&quot;https://hexdocs.pm/elixir/Time.html&quot;&gt;&lt;code&gt;Time&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">Se puede encontrar m&amp;aacute;s informaci&amp;oacute;n sobre horarios en el m&amp;oacute;dulo &lt;a href=&quot;https://hexdocs.pm/elixir/Time.html&quot;&gt; &lt;code&gt;Time&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="74e1febe16a203d4cc3b9b43ca22bede1863da17" translate="yes" xml:space="preserve">
          <source>More information on times can be found in the &lt;a href=&quot;time&quot;&gt;&lt;code&gt;Time&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">Se puede encontrar m&amp;aacute;s informaci&amp;oacute;n sobre horarios en el m&amp;oacute;dulo &lt;a href=&quot;time&quot;&gt; &lt;code&gt;Time&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="47345d51b5c718e5874fcd01549e8be7ce1a8743" translate="yes" xml:space="preserve">
          <source>More interestingly, we can match on specific values. The example below asserts that the left side will only match the right side when the right side is a tuple that starts with the atom &lt;code&gt;:ok&lt;/code&gt;:</source>
          <target state="translated">M&amp;aacute;s interesante a&amp;uacute;n, podemos hacer coincidir valores espec&amp;iacute;ficos. El siguiente ejemplo afirma que el lado izquierdo solo coincidir&amp;aacute; con el lado derecho cuando el lado derecho sea una tupla que comience con el &amp;aacute;tomo &lt;code&gt;:ok&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="708db7ea87e7a72eeea9cb0dbb3ddbd4f2c25b4b" translate="yes" xml:space="preserve">
          <source>More options are available; for the comprehensive list of available options check &lt;a href=&quot;http://www.erlang.org/doc/man/erlang.html#spawn_opt-4&quot;&gt;&lt;code&gt;:erlang.spawn_opt/4&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Hay m&amp;aacute;s opciones disponibles; para obtener la lista completa de opciones disponibles, consulte &lt;a href=&quot;http://www.erlang.org/doc/man/erlang.html#spawn_opt-4&quot;&gt; &lt;code&gt;:erlang.spawn_opt/4&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0761006711d858b0c2a58d2cbd1afefe913dcc42" translate="yes" xml:space="preserve">
          <source>Moreover, even when trapping exits, calling &lt;code&gt;await&lt;/code&gt; will still exit if the task has terminated without sending its result back.</source>
          <target state="translated">Adem&amp;aacute;s, incluso cuando se capturan salidas, la llamada a &lt;code&gt;await&lt;/code&gt; seguir&amp;aacute; saliendo si la tarea ha terminado sin devolver el resultado.</target>
        </trans-unit>
        <trans-unit id="7a438f48c599e07f621f37d7528ee6f6b3ed9813" translate="yes" xml:space="preserve">
          <source>Most Elixir code has a straight-forward translation to its underlying quoted expression. We recommend you try out different code samples and see what the results are. For example, what does &lt;code&gt;String.upcase(&quot;foo&quot;)&lt;/code&gt; expand to? We have also learned that &lt;code&gt;if(true, do: :this, else: :that)&lt;/code&gt; is the same as &lt;code&gt;if true do :this else :that end&lt;/code&gt;. How does this affirmation hold with quoted expressions?</source>
          <target state="translated">La mayor parte del c&amp;oacute;digo de Elixir tiene una traducci&amp;oacute;n directa a su expresi&amp;oacute;n citada subyacente. Le recomendamos que pruebe diferentes ejemplos de c&amp;oacute;digo y vea cu&amp;aacute;les son los resultados. Por ejemplo, &amp;iquest;a qu&amp;eacute; se &lt;code&gt;String.upcase(&quot;foo&quot;)&lt;/code&gt; ? Tambi&amp;eacute;n hemos aprendido que &lt;code&gt;if(true, do: :this, else: :that)&lt;/code&gt; es lo mismo que &lt;code&gt;if true do :this else :that end&lt;/code&gt; . &amp;iquest;C&amp;oacute;mo se mantiene esta afirmaci&amp;oacute;n con las expresiones entre comillas?</target>
        </trans-unit>
        <trans-unit id="7ef32c667bd728bf6d46696a457f5ed0e7db5896" translate="yes" xml:space="preserve">
          <source>Most commonly, this module is used to define your own configuration:</source>
          <target state="translated">Lo más común es que este módulo se utilice para definir su propia configuración:</target>
        </trans-unit>
        <trans-unit id="0687907a8d3988b5e082480eea48abedcef483ec" translate="yes" xml:space="preserve">
          <source>Most editors provide built-in integration with the formatter, allowing a file to be formatted on save or via a chosen keybinding. If you are learning Elixir, editor integration gives you useful and quick feedback when learning the Elixir syntax.</source>
          <target state="translated">La mayoría de los editores proporcionan una integración incorporada con el formateador,lo que permite que un archivo sea formateado al guardarlo o a través de una conexión de teclado elegida.Si está aprendiendo a usar Elixir,la integración con el editor le ofrece una retroalimentación útil y rápida al aprender la sintaxis de Elixir.</target>
        </trans-unit>
        <trans-unit id="024156cd258aa614f1a1e84226c2405ec889367a" translate="yes" xml:space="preserve">
          <source>Most of the functions in this module return &lt;code&gt;:ok&lt;/code&gt; or &lt;code&gt;{:ok, result}&lt;/code&gt; in case of success, &lt;code&gt;{:error, reason}&lt;/code&gt; otherwise. Those functions also have a variant that ends with &lt;code&gt;!&lt;/code&gt; which returns the result (instead of the &lt;code&gt;{:ok, result}&lt;/code&gt; tuple) in case of success or raises an exception in case it fails. For example:</source>
          <target state="translated">La mayor&amp;iacute;a de las funciones de este m&amp;oacute;dulo devuelven &lt;code&gt;:ok&lt;/code&gt; o &lt;code&gt;{:ok, result}&lt;/code&gt; en caso de &amp;eacute;xito, &lt;code&gt;{:error, reason}&lt;/code&gt; caso contrario. Esas funciones tambi&amp;eacute;n tienen una variante que termina en &lt;code&gt;!&lt;/code&gt; que devuelve el resultado (en lugar de la tupla &lt;code&gt;{:ok, result}&lt;/code&gt; ) en caso de &amp;eacute;xito o genera una excepci&amp;oacute;n en caso de que falle. Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="fe4747de8e4154287a567beb557c39a3a7ea6b63" translate="yes" xml:space="preserve">
          <source>Most of the functions in this module work in linear time. This means that, that the time it takes to perform an operation grows at the same rate as the length of the list. For example &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#length/1&quot;&gt;&lt;code&gt;length/1&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#last/1&quot;&gt;&lt;code&gt;last/1&lt;/code&gt;&lt;/a&gt; will run in linear time because they need to iterate through every element of the list, but &lt;a href=&quot;#first/1&quot;&gt;&lt;code&gt;first/1&lt;/code&gt;&lt;/a&gt; will run in constant time because it only needs the first element.</source>
          <target state="translated">La mayor&amp;iacute;a de las funciones de este m&amp;oacute;dulo funcionan en tiempo lineal. Esto significa que el tiempo que lleva realizar una operaci&amp;oacute;n crece al mismo ritmo que la longitud de la lista. Por ejemplo, &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.html#length/1&quot;&gt; &lt;code&gt;length/1&lt;/code&gt; &lt;/a&gt; y &lt;a href=&quot;#last/1&quot;&gt; &lt;code&gt;last/1&lt;/code&gt; &lt;/a&gt; se ejecutar&amp;aacute;n en tiempo lineal porque necesitan iterar a trav&amp;eacute;s de cada elemento de la lista, pero &lt;a href=&quot;#first/1&quot;&gt; &lt;code&gt;first/1&lt;/code&gt; &lt;/a&gt; se ejecutar&amp;aacute; en tiempo constante porque solo necesita el primer elemento.</target>
        </trans-unit>
        <trans-unit id="dbffd668417f19cdbcd33d0162e5263a21e09ebf" translate="yes" xml:space="preserve">
          <source>Most of the functions in this module work in linear time. This means that, that the time it takes to perform an operation grows at the same rate as the length of the list. For example &lt;a href=&quot;kernel#length/1&quot;&gt;&lt;code&gt;length/1&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#last/1&quot;&gt;&lt;code&gt;last/1&lt;/code&gt;&lt;/a&gt; will run in linear time because they need to iterate through every element of the list, but &lt;a href=&quot;#first/1&quot;&gt;&lt;code&gt;first/1&lt;/code&gt;&lt;/a&gt; will run in constant time because it only needs the first element.</source>
          <target state="translated">La mayor&amp;iacute;a de las funciones de este m&amp;oacute;dulo funcionan en tiempo lineal. Esto significa que el tiempo que lleva realizar una operaci&amp;oacute;n crece al mismo ritmo que la longitud de la lista. Por ejemplo, &lt;a href=&quot;kernel#length/1&quot;&gt; &lt;code&gt;length/1&lt;/code&gt; &lt;/a&gt; y &lt;a href=&quot;#last/1&quot;&gt; &lt;code&gt;last/1&lt;/code&gt; &lt;/a&gt; se ejecutar&amp;aacute;n en tiempo lineal porque necesitan iterar a trav&amp;eacute;s de cada elemento de la lista, pero &lt;a href=&quot;#first/1&quot;&gt; &lt;code&gt;first/1&lt;/code&gt; &lt;/a&gt; se ejecutar&amp;aacute; en tiempo constante porque solo necesita el primer elemento.</target>
        </trans-unit>
        <trans-unit id="ce9701b5552f6ac3d94cc4ca928ec6d05512ce0a" translate="yes" xml:space="preserve">
          <source>Most of the functions in this module work in linear time. This means that, the time it takes to perform an operation grows at the same rate as the length of the list.</source>
          <target state="translated">La mayoría de las funciones de este módulo funcionan en tiempo lineal.Esto significa que,el tiempo que se tarda en realizar una operación crece a la misma velocidad que la longitud de la lista.</target>
        </trans-unit>
        <trans-unit id="3fd0b4b5634fc00fd0cd07602c5fab763e2a315d" translate="yes" xml:space="preserve">
          <source>Most of the inlined functions can be seen in effect when capturing the function:</source>
          <target state="translated">La mayoría de las funciones en línea pueden verse en efecto al capturar la función:</target>
        </trans-unit>
        <trans-unit id="650e20466b330f46fc9cd6f719b3f04d44e3661d" translate="yes" xml:space="preserve">
          <source>Most of the operations in &lt;a href=&quot;enum&quot;&gt;&lt;code&gt;Enum&lt;/code&gt;&lt;/a&gt; are implemented in terms of reduce. This function should apply the given &lt;a href=&quot;#t:reducer/0&quot;&gt;&lt;code&gt;reducer/0&lt;/code&gt;&lt;/a&gt; function to each element in the &lt;code&gt;enumerable&lt;/code&gt; and proceed as expected by the returned accumulator.</source>
          <target state="translated">La mayor&amp;iacute;a de las operaciones en &lt;a href=&quot;enum&quot;&gt; &lt;code&gt;Enum&lt;/code&gt; &lt;/a&gt; se implementan en t&amp;eacute;rminos de reduce. Esta funci&amp;oacute;n debe aplicar la funci&amp;oacute;n &lt;a href=&quot;#t:reducer/0&quot;&gt; &lt;code&gt;reducer/0&lt;/code&gt; &lt;/a&gt; dada a cada elemento en el &lt;code&gt;enumerable&lt;/code&gt; y proceder seg&amp;uacute;n lo esperado por el acumulador devuelto.</target>
        </trans-unit>
        <trans-unit id="2bbbf699ba5529e80a9e0479fc3b9c7618a46171" translate="yes" xml:space="preserve">
          <source>Most of the operations in &lt;a href=&quot;https://hexdocs.pm/elixir/Enum.html&quot;&gt;&lt;code&gt;Enum&lt;/code&gt;&lt;/a&gt; are implemented in terms of reduce. This function should apply the given &lt;a href=&quot;#t:reducer/0&quot;&gt;&lt;code&gt;reducer/0&lt;/code&gt;&lt;/a&gt; function to each element in the &lt;code&gt;enumerable&lt;/code&gt; and proceed as expected by the returned accumulator.</source>
          <target state="translated">La mayor&amp;iacute;a de las operaciones en &lt;a href=&quot;https://hexdocs.pm/elixir/Enum.html&quot;&gt; &lt;code&gt;Enum&lt;/code&gt; &lt;/a&gt; se implementan en t&amp;eacute;rminos de reduce. Esta funci&amp;oacute;n debe aplicar la funci&amp;oacute;n &lt;a href=&quot;#t:reducer/0&quot;&gt; &lt;code&gt;reducer/0&lt;/code&gt; &lt;/a&gt; dada a cada elemento en el &lt;code&gt;enumerable&lt;/code&gt; y proceder como lo espera el acumulador devuelto.</target>
        </trans-unit>
        <trans-unit id="24b137a5b6dba3724d546a7b4386d3d0c4f7db88" translate="yes" xml:space="preserve">
          <source>Most of the time it is convenient to write modules into files so they can be compiled and reused. Let&amp;rsquo;s assume we have a file named &lt;code&gt;math.ex&lt;/code&gt; with the following contents:</source>
          <target state="translated">La mayor&amp;iacute;a de las veces es conveniente escribir m&amp;oacute;dulos en archivos para que puedan compilarse y reutilizarse. Supongamos que tenemos un archivo llamado &lt;code&gt;math.ex&lt;/code&gt; con el siguiente contenido:</target>
        </trans-unit>
        <trans-unit id="629b5f27dd5283caadd5c5cbf0f295755b9869cd" translate="yes" xml:space="preserve">
          <source>Most of the time there is one, and just one, valid datetime for a certain date and time in a certain time zone.</source>
          <target state="translated">La mayoría de las veces hay una,y sólo una,hora-fecha válida para una determinada fecha y hora en un determinado huso horario.</target>
        </trans-unit>
        <trans-unit id="91857fb8fa18b4cfe30782a8862e99da6ebb9879" translate="yes" xml:space="preserve">
          <source>Most of the time, Elixir is going to guide you to do the right thing. For example, there is an &lt;code&gt;elem/2&lt;/code&gt; function to access a tuple item but there is no built-in equivalent for lists:</source>
          <target state="translated">La mayor&amp;iacute;a de las veces, Elixir te guiar&amp;aacute; para hacer lo correcto. Por ejemplo, hay una funci&amp;oacute;n &lt;code&gt;elem/2&lt;/code&gt; para acceder a un elemento de tupla, pero no hay un equivalente integrado para las listas:</target>
        </trans-unit>
        <trans-unit id="cca16065899804f7768a7a1720aa616e84369d6b" translate="yes" xml:space="preserve">
          <source>Move the undocumented function to a module with &lt;code&gt;@moduledoc false&lt;/code&gt;, like &lt;code&gt;MyApp.Hidden&lt;/code&gt;, ensuring the function won't be accidentally exposed or imported. Remember you can use &lt;code&gt;@moduledoc false&lt;/code&gt; to hide a whole module and still document each function with &lt;code&gt;@doc&lt;/code&gt;. Tools will still ignore the module.</source>
          <target state="translated">Mueva la funci&amp;oacute;n no documentada a un m&amp;oacute;dulo con &lt;code&gt;@moduledoc false&lt;/code&gt; , como &lt;code&gt;MyApp.Hidden&lt;/code&gt; , asegurando que la funci&amp;oacute;n no se expondr&amp;aacute; o importar&amp;aacute; accidentalmente. Recuerde que puede usar &lt;code&gt;@moduledoc false&lt;/code&gt; para ocultar un m&amp;oacute;dulo completo y a&amp;uacute;n as&amp;iacute; documentar cada funci&amp;oacute;n con &lt;code&gt;@doc&lt;/code&gt; . Las herramientas seguir&amp;aacute;n ignorando el m&amp;oacute;dulo.</target>
        </trans-unit>
        <trans-unit id="8ba586c26244aa844e20201d605ef816e569e0c3" translate="yes" xml:space="preserve">
          <source>Much better! &lt;code&gt;with&lt;/code&gt; will retrieve the value returned by the right-side of &lt;code&gt;&amp;lt;-&lt;/code&gt; and match it against the pattern on the left side. If the value matches the pattern, &lt;code&gt;with&lt;/code&gt; moves on to the next expression. In case there is no match, the non-matching value is returned.</source>
          <target state="translated">&amp;iexcl;Mucho mejor! &lt;code&gt;with&lt;/code&gt; recuperar&amp;aacute; el valor devuelto por el lado derecho de &lt;code&gt;&amp;lt;-&lt;/code&gt; y lo comparar&amp;aacute; con el patr&amp;oacute;n del lado izquierdo. Si el valor coincide con el patr&amp;oacute;n, &lt;code&gt;with&lt;/code&gt; pasa a la siguiente expresi&amp;oacute;n. En caso de que no haya coincidencia, se devuelve el valor no coincidente.</target>
        </trans-unit>
        <trans-unit id="aca1d8661416c63356922cc0e796c657256bdbf6" translate="yes" xml:space="preserve">
          <source>Multi alias/import/require/use</source>
          <target state="translated">Multi alias/importación/requisito/uso</target>
        </trans-unit>
        <trans-unit id="56c84318ece5d60a2edc2a745e9430721117f115" translate="yes" xml:space="preserve">
          <source>Multi-letter aliases in &lt;a href=&quot;https://hexdocs.pm/elixir/OptionParser.html&quot;&gt;&lt;code&gt;OptionParser&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">Alias ​​de varias letras en &lt;a href=&quot;https://hexdocs.pm/elixir/OptionParser.html&quot;&gt; &lt;code&gt;OptionParser&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="600851f745d8c6c136c80bb6740770dde7f94908" translate="yes" xml:space="preserve">
          <source>Multi-letter aliases in &lt;a href=&quot;optionparser&quot;&gt;&lt;code&gt;OptionParser&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">Alias ​​de varias letras en &lt;a href=&quot;optionparser&quot;&gt; &lt;code&gt;OptionParser&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cd897f3df67fae1b86657cd6f5002662e25d4a84" translate="yes" xml:space="preserve">
          <source>Multi-line charlists are written with three single-quotes (&lt;code&gt;'''&lt;/code&gt;), the same way multi-line strings are.</source>
          <target state="translated">Las listas de caracteres de varias l&amp;iacute;neas se escriben con tres comillas simples ( &lt;code&gt;'''&lt;/code&gt; ), de la misma manera que las cadenas de varias l&amp;iacute;neas.</target>
        </trans-unit>
        <trans-unit id="7c20d594d29120427ee2ec63c03ac466e7b133f7" translate="yes" xml:space="preserve">
          <source>Multi-line lists, maps, tuples, and the like</source>
          <target state="translated">Listas de varias líneas,mapas,tuplas y similares</target>
        </trans-unit>
        <trans-unit id="971b1abcdb78d0f06496a5acd8f26ed4ec25bf2b" translate="yes" xml:space="preserve">
          <source>Multi-line lists, maps, tuples, etc.</source>
          <target state="translated">Listas de varias líneas,mapas,tuplas,etc.</target>
        </trans-unit>
        <trans-unit id="387558e9801635e36ced6d8f96c29ddee6395ce1" translate="yes" xml:space="preserve">
          <source>Multi-line strings in Elixir are written with three double-quotes, and can have unescaped quotes within them. The resulting string will end with a newline. The indentation of the last &lt;code&gt;&quot;&quot;&quot;&lt;/code&gt; is used to strip indentation from the inner string. For example:</source>
          <target state="translated">Las cadenas de varias l&amp;iacute;neas en Elixir se escriben con tres comillas dobles y pueden tener comillas sin escape dentro de ellas. La cadena resultante terminar&amp;aacute; con una nueva l&amp;iacute;nea. La sangr&amp;iacute;a de la &amp;uacute;ltima &lt;code&gt;&quot;&quot;&quot;&lt;/code&gt; se utiliza para quitar la sangr&amp;iacute;a de la cadena interior. Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="f3b47d6814f63cc5e3bd080a55da0c264aee3d21" translate="yes" xml:space="preserve">
          <source>Multiple code points that may be perceived as a single character by readers</source>
          <target state="translated">Múltiples puntos de código que pueden ser percibidos como un solo carácter por los lectores</target>
        </trans-unit>
        <trans-unit id="4f0084cccc0c20805d1c2152e4b316e391ff55d4" translate="yes" xml:space="preserve">
          <source>Multiple elements may prefix the &lt;code&gt;| tail&lt;/code&gt; construct:</source>
          <target state="translated">Varios elementos pueden anteponer el &lt;code&gt;| tail&lt;/code&gt; construcci&amp;oacute;n de cola :</target>
        </trans-unit>
        <trans-unit id="6d1f745a36808f93bd028263c26703cfbaed268c" translate="yes" xml:space="preserve">
          <source>Multiple generators can also be used to calculate the cartesian product of two lists:</source>
          <target state="translated">También se pueden utilizar múltiples generadores para calcular el producto cartesiano de dos listas:</target>
        </trans-unit>
        <trans-unit id="7fd421a1aa76b2a83bd80d007c37c141c303064d" translate="yes" xml:space="preserve">
          <source>Multiple guards in the same clause</source>
          <target state="translated">Múltiples guardias en la misma cláusula</target>
        </trans-unit>
        <trans-unit id="c528525d61b06dbc869c01826c97062225a9a675" translate="yes" xml:space="preserve">
          <source>Multiple implementations</source>
          <target state="translated">Múltiples implementaciones</target>
        </trans-unit>
        <trans-unit id="ff8681bd747154b9388af5f672277e70fb2f689c" translate="yes" xml:space="preserve">
          <source>Multiple instances of the same backend can be specified by adding tuples in the format &lt;code&gt;{BackendModuleName, :backend_name}&lt;/code&gt;:</source>
          <target state="translated">Se pueden especificar varias instancias del mismo backend agregando tuplas en el formato &lt;code&gt;{BackendModuleName, :backend_name}&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="f43d8ba152323821f27a132f7581f8caab516e47" translate="yes" xml:space="preserve">
          <source>Multiple releases. You can assemble different releases with different configuration per application or even with different applications altogether.</source>
          <target state="translated">Múltiples liberaciones.Puedes ensamblar diferentes versiones con diferente configuración por aplicación o incluso con diferentes aplicaciones en conjunto.</target>
        </trans-unit>
        <trans-unit id="7568f33631ddb2754ee748a9c6bc2f4f8eceabd0" translate="yes" xml:space="preserve">
          <source>Multiple results can be checked within the same test:</source>
          <target state="translated">Se pueden comprobar múltiples resultados dentro de la misma prueba:</target>
        </trans-unit>
        <trans-unit id="8f4cf21f4344405e752af495c43a5b7beb80cfa4" translate="yes" xml:space="preserve">
          <source>Multiple uses of &lt;code&gt;@compile&lt;/code&gt; will accumulate instead of overriding previous ones. See the &quot;Compile options&quot; section below.</source>
          <target state="translated">Se acumular&amp;aacute;n m&amp;uacute;ltiples usos de &lt;code&gt;@compile&lt;/code&gt; en lugar de anular los anteriores. Consulte la secci&amp;oacute;n &quot;Opciones de compilaci&amp;oacute;n&quot; a continuaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="cbd5985b43b284860bef16f48015f61c53879304" translate="yes" xml:space="preserve">
          <source>Multiple uses of &lt;code&gt;@dialyzer&lt;/code&gt; will accumulate instead of overriding previous ones.</source>
          <target state="translated">Se acumular&amp;aacute;n m&amp;uacute;ltiples usos de &lt;code&gt;@dialyzer&lt;/code&gt; en lugar de anular los anteriores.</target>
        </trans-unit>
        <trans-unit id="b5df1b82e3f5abfb84a6922491ed88fb7f160033" translate="yes" xml:space="preserve">
          <source>Mutable state and access to shared resources (such as ETS, files, and others)</source>
          <target state="translated">Estado mutable y acceso a recursos compartidos (como ETS,archivos y otros)</target>
        </trans-unit>
        <trans-unit id="4bc08a47511c7c5ad4c0a467eaca187d877e8749" translate="yes" xml:space="preserve">
          <source>Mutable state and access to shared resources (such as ETS, files, etc.)</source>
          <target state="translated">Estado mutable y acceso a recursos compartidos (como ETS,archivos,etc.)</target>
        </trans-unit>
        <trans-unit id="74c5ad44b6579fcbcf0c6ec60e160908d2a983ce" translate="yes" xml:space="preserve">
          <source>My computer is named &lt;code&gt;jv&lt;/code&gt;, so I see &lt;code&gt;foo@jv&lt;/code&gt; in the example above, but you will get a different result. We will use &lt;code&gt;foo@computer-name&lt;/code&gt; in the following examples and you should update them accordingly when trying out the code.</source>
          <target state="translated">Mi computadora se llama &lt;code&gt;jv&lt;/code&gt; , as&amp;iacute; que veo &lt;code&gt;foo@jv&lt;/code&gt; en el ejemplo anterior, pero obtendr&amp;aacute; un resultado diferente. Usaremos &lt;code&gt;foo@computer-name&lt;/code&gt; en los siguientes ejemplos y deber&amp;iacute;a actualizarlos en consecuencia cuando pruebe el c&amp;oacute;digo.</target>
        </trans-unit>
        <trans-unit id="a50f07a710ba62544947bf23759e42c6e82ff7d6" translate="yes" xml:space="preserve">
          <source>My particular telnet client can be exited by typing &lt;code&gt;ctrl + ]&lt;/code&gt;, typing &lt;code&gt;quit&lt;/code&gt;, and pressing &lt;code&gt;&amp;lt;Enter&amp;gt;&lt;/code&gt;, but your client may require different steps.</source>
          <target state="translated">Se puede salir de mi cliente telnet particular escribiendo &lt;code&gt;ctrl + ]&lt;/code&gt; , escribiendo &lt;code&gt;quit&lt;/code&gt; y presionando &lt;code&gt;&amp;lt;Enter&amp;gt;&lt;/code&gt; , pero su cliente puede requerir pasos diferentes.</target>
        </trans-unit>
        <trans-unit id="b51a60734da64be0e618bacbea2865a8a7dcd669" translate="yes" xml:space="preserve">
          <source>N</source>
          <target state="translated">N</target>
        </trans-unit>
        <trans-unit id="b897ebc1430a2e4abc81cf0b2714edf134f99207" translate="yes" xml:space="preserve">
          <source>NaiveDateTime</source>
          <target state="translated">NaiveDateTime</target>
        </trans-unit>
        <trans-unit id="d49675d6a7db398730976978d05575d69c0eb3c3" translate="yes" xml:space="preserve">
          <source>Name registration</source>
          <target state="translated">Registro del nombre</target>
        </trans-unit>
        <trans-unit id="368a0ab278773b445741a837271772d0936779aa" translate="yes" xml:space="preserve">
          <source>Named functions</source>
          <target state="translated">Funciones nombradas</target>
        </trans-unit>
        <trans-unit id="b7cb86483160ed9ca9d1ab540d3476197e0162c0" translate="yes" xml:space="preserve">
          <source>Named functions in Elixir also support default arguments:</source>
          <target state="translated">Las funciones nombradas en Elixir también soportan argumentos por defecto:</target>
        </trans-unit>
        <trans-unit id="8b4617b659a51d0b5756991a46730570511eef04" translate="yes" xml:space="preserve">
          <source>Naming</source>
          <target state="translated">Naming</target>
        </trans-unit>
        <trans-unit id="8af56df8a9cb35f56b67edd6d269d4e86defc0d0" translate="yes" xml:space="preserve">
          <source>Naming Conventions</source>
          <target state="translated">Convenciones de nombres</target>
        </trans-unit>
        <trans-unit id="7c7072ebdd4d3d7903620768f687a8dfdcc8ce66" translate="yes" xml:space="preserve">
          <source>Naming processes</source>
          <target state="translated">Procesos de nombramiento</target>
        </trans-unit>
        <trans-unit id="2dafad67b671623ab79a27e34be51e846c44fb41" translate="yes" xml:space="preserve">
          <source>Negation switches</source>
          <target state="translated">Los interruptores de negación</target>
        </trans-unit>
        <trans-unit id="69411c8fc84402fa538d77b5600d2c036cb1597e" translate="yes" xml:space="preserve">
          <source>Negative Unix times are supported up to -377705116800 seconds:</source>
          <target state="translated">Se admiten tiempos Unix negativos hasta -377705116800 segundos:</target>
        </trans-unit>
        <trans-unit id="6cf669c72f3ca4537fedf1a696188ac323c60bad" translate="yes" xml:space="preserve">
          <source>Negative Unix times are supported, up to -62167219200 seconds, which is equivalent to &quot;0000-01-01T00:00:00Z&quot; or 0 Gregorian seconds.</source>
          <target state="translated">Se soportan tiempos Unix negativos,hasta -62167219200 segundos,lo que equivale a &quot;0000-01-01T00:00:00Z&quot; o 0 segundos gregorianos.</target>
        </trans-unit>
        <trans-unit id="a20bdc82e5703dd99f69be3ffeaf120ee97f50f4" translate="yes" xml:space="preserve">
          <source>Negative indices indicate an offset from the end of the &lt;code&gt;list&lt;/code&gt;. If &lt;code&gt;index&lt;/code&gt; is out of bounds, the original &lt;code&gt;list&lt;/code&gt; is returned.</source>
          <target state="translated">Los &amp;iacute;ndices negativos indican un desplazamiento desde el final de la &lt;code&gt;list&lt;/code&gt; a . Si el &lt;code&gt;index&lt;/code&gt; est&amp;aacute; fuera de los l&amp;iacute;mites, se devuelve la &lt;code&gt;list&lt;/code&gt; a original .</target>
        </trans-unit>
        <trans-unit id="4450fa2237a90a818e8d5b18c9055436f51758cb" translate="yes" xml:space="preserve">
          <source>Nerves fetches all dependencies and looks for the system specific deps</source>
          <target state="translated">Los nervios buscan todas las dependencias y buscan las dependencias específicas del sistema.</target>
        </trans-unit>
        <trans-unit id="0a5394a4bdb01b4c672f5bf8a58f03c03a747671" translate="yes" xml:space="preserve">
          <source>Nerves then clears the cache, forcing dependencies to be loaded again</source>
          <target state="translated">Los nervios entonces despejan el caché,obligando a las dependencias a ser cargadas de nuevo</target>
        </trans-unit>
        <trans-unit id="02f8888aa8ebd456306e0978a35197f74b636d4e" translate="yes" xml:space="preserve">
          <source>Nested data structures</source>
          <target state="translated">Estructuras de datos anidados</target>
        </trans-unit>
        <trans-unit id="f06563daf6842a8e082fd4615e320fc869bb69d9" translate="yes" xml:space="preserve">
          <source>Nesting</source>
          <target state="translated">Nesting</target>
        </trans-unit>
        <trans-unit id="230c22b07521849e4e1eb0ed24d083dc0b4e9329" translate="yes" xml:space="preserve">
          <source>Nesting a module inside another module affects the name of the nested module:</source>
          <target state="translated">Anidar un módulo dentro de otro módulo afecta al nombre del módulo anidado:</target>
        </trans-unit>
        <trans-unit id="a0587b966ad1346723038626d25a39c4caf0fcf4" translate="yes" xml:space="preserve">
          <source>Nests the given document at the given &lt;code&gt;level&lt;/code&gt;.</source>
          <target state="translated">Anida el documento dado en el &lt;code&gt;level&lt;/code&gt; dado .</target>
        </trans-unit>
        <trans-unit id="66de056dde6e1fb5274c22b3b843bcd5283eddba" translate="yes" xml:space="preserve">
          <source>New events may be added at any time in the future, therefore it is advised for the &lt;code&gt;trace/2&lt;/code&gt; function to have a &quot;catch-all&quot; clause.</source>
          <target state="translated">Se pueden agregar nuevos eventos en cualquier momento en el futuro, por lo que se recomienda que la funci&amp;oacute;n &lt;code&gt;trace/2&lt;/code&gt; tenga una cl&amp;aacute;usula &quot;catch-all&quot;.</target>
        </trans-unit>
        <trans-unit id="ac15dcab98b84e881f95ff7f13b6c27d1103008b" translate="yes" xml:space="preserve">
          <source>New releases are announced in the read-only &lt;a href=&quot;https://groups.google.com/group/elixir-lang-ann&quot;&gt;announcements mailing list&lt;/a&gt;. All security releases &lt;a href=&quot;https://groups.google.com/forum/#!searchin/elixir-lang-ann/%255Bsecurity%255D%257Csort:date&quot;&gt;will be tagged with &lt;code&gt;[security]&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Los nuevos lanzamientos se anuncian en la &lt;a href=&quot;https://groups.google.com/group/elixir-lang-ann&quot;&gt;lista de correo de anuncios de&lt;/a&gt; solo lectura . Todas las versiones de seguridad &lt;a href=&quot;https://groups.google.com/forum/#!searchin/elixir-lang-ann/%255Bsecurity%255D%257Csort:date&quot;&gt;se etiquetar&amp;aacute;n con &lt;code&gt;[security]&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a4091960ca8d66c5badd353d052ed80265508fa3" translate="yes" xml:space="preserve">
          <source>New releases are announced in the read-only &lt;a href=&quot;https://groups.google.com/group/elixir-lang-ann&quot;&gt;announcements mailing list&lt;/a&gt;. All security releases &lt;a href=&quot;https://groups.google.com/forum/#!searchin/elixir-lang-ann/%5Bsecurity%5D%7Csort:date&quot;&gt;will be tagged with &lt;code&gt;[security]&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Los nuevos lanzamientos se anuncian en la &lt;a href=&quot;https://groups.google.com/group/elixir-lang-ann&quot;&gt;lista de correo de anuncios de&lt;/a&gt; solo lectura . Todas las versiones de seguridad &lt;a href=&quot;https://groups.google.com/forum/#!searchin/elixir-lang-ann/%5Bsecurity%5D%7Csort:date&quot;&gt;se etiquetar&amp;aacute;n con &lt;code&gt;[security]&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="09050a709859e9c045fb8157c8d7649b286d2c98" translate="yes" xml:space="preserve">
          <source>Newlines before certain operators (such as the pipeline operators) and before other operators (such as comparison operators)</source>
          <target state="translated">Nuevas líneas antes de ciertos operadores (como los operadores de oleoductos y gasoductos)y antes de otros operadores (como los operadores de comparación)</target>
        </trans-unit>
        <trans-unit id="6de3ffff606ff25e1f43c0e5340bf371120e5de6" translate="yes" xml:space="preserve">
          <source>Newlines inside blocks are kept as in the input except for:</source>
          <target state="translated">Las nuevas líneas dentro de los bloques se mantienen como en la entrada,excepto por..:</target>
        </trans-unit>
        <trans-unit id="0c7d720a2e040b46c0d03386d11f05cbd66532dd" translate="yes" xml:space="preserve">
          <source>Newlines inside blocks are kept as in the input except for: 1) expressions that take multiple lines will always have an empty line before and after and 2) empty lines are always squeezed together into a single empty line</source>
          <target state="translated">Las nuevas líneas dentro de los bloques se mantienen como en la entrada,excepto por..:1)las expresiones que toman múltiples líneas siempre tendrán una línea vacía antes y después y 2)las líneas vacías siempre se comprimen juntas en una sola línea vacía</target>
        </trans-unit>
        <trans-unit id="11fc14203dd0f4441645a9c34d5dd022905f56e4" translate="yes" xml:space="preserve">
          <source>Next steps</source>
          <target state="translated">Los siguientes pasos</target>
        </trans-unit>
        <trans-unit id="750891f84c6b7eeddc41453bbdd8ec1255f11a42" translate="yes" xml:space="preserve">
          <source>Next, let&amp;rsquo;s discuss external and internal dependencies and how Mix helps us manage large codebases.</source>
          <target state="translated">A continuaci&amp;oacute;n, analicemos las dependencias externas e internas y c&amp;oacute;mo Mix nos ayuda a administrar grandes bases de c&amp;oacute;digo.</target>
        </trans-unit>
        <trans-unit id="ec26ea6bcbb7c9f81e3f941cb690507a65daec00" translate="yes" xml:space="preserve">
          <source>Next, we&amp;rsquo;ll look at a feature central to Elixir, Processes, which allows us to write concurrent, parallel and distributed programs in an easy and understandable way.</source>
          <target state="translated">A continuaci&amp;oacute;n, veremos una caracter&amp;iacute;stica central de Elixir, Procesos, que nos permite escribir programas concurrentes, paralelos y distribuidos de una manera f&amp;aacute;cil y comprensible.</target>
        </trans-unit>
        <trans-unit id="41cb14263e20c4624e46c802b32ac0cf7c57a851" translate="yes" xml:space="preserve">
          <source>No computation will be done until we call one of the &lt;a href=&quot;enum&quot;&gt;&lt;code&gt;Enum&lt;/code&gt;&lt;/a&gt; functions or &lt;a href=&quot;#run/1&quot;&gt;&lt;code&gt;run/1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">No se realizar&amp;aacute; ning&amp;uacute;n c&amp;aacute;lculo hasta que llamemos a una de las funciones &lt;a href=&quot;enum&quot;&gt; &lt;code&gt;Enum&lt;/code&gt; &lt;/a&gt; o &lt;a href=&quot;#run/1&quot;&gt; &lt;code&gt;run/1&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ac00c06be47df8189da7f703834d94ee1ef7d289" translate="yes" xml:space="preserve">
          <source>No computation will be done until we call one of the &lt;a href=&quot;https://hexdocs.pm/elixir/Enum.html&quot;&gt;&lt;code&gt;Enum&lt;/code&gt;&lt;/a&gt; functions or &lt;a href=&quot;#run/1&quot;&gt;&lt;code&gt;run/1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">No se realizar&amp;aacute; ning&amp;uacute;n c&amp;aacute;lculo hasta que llamemos a una de las funciones &lt;a href=&quot;https://hexdocs.pm/elixir/Enum.html&quot;&gt; &lt;code&gt;Enum&lt;/code&gt; &lt;/a&gt; o &lt;a href=&quot;#run/1&quot;&gt; &lt;code&gt;run/1&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="260f7a8cd4f6938b3cc185a619847cb83d670219" translate="yes" xml:space="preserve">
          <source>Node</source>
          <target state="translated">Node</target>
        </trans-unit>
        <trans-unit id="696cc484902450dc478328260fab02dcefae6c92" translate="yes" xml:space="preserve">
          <source>Non-map as 2nd argument in &lt;a href=&quot;https://hexdocs.pm/elixir/URI.html#decode_query/2&quot;&gt;&lt;code&gt;URI.decode_query/2&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">No mapa como segundo argumento en &lt;a href=&quot;https://hexdocs.pm/elixir/URI.html#decode_query/2&quot;&gt; &lt;code&gt;URI.decode_query/2&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b6e83d3c9cef0e0783f020702595feef71f3f20e" translate="yes" xml:space="preserve">
          <source>Non-map as 2nd argument in &lt;a href=&quot;uri#decode_query/2&quot;&gt;&lt;code&gt;URI.decode_query/2&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">No mapa como segundo argumento en &lt;a href=&quot;uri#decode_query/2&quot;&gt; &lt;code&gt;URI.decode_query/2&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="071e8151474691189ee1733bdecf01a3f3e2cb81" translate="yes" xml:space="preserve">
          <source>Non-qualified calls (local calls)</source>
          <target state="translated">Llamadas no cualificadas (llamadas locales)</target>
        </trans-unit>
        <trans-unit id="53cb3754c560024cfd1bcc5260b860f30909000c" translate="yes" xml:space="preserve">
          <source>Non-qualified calls, such as &lt;code&gt;add(1, 2)&lt;/code&gt;, must start with an underscore or a Unicode letter that is not in uppercase or titlecase. The call may continue using a sequence of Unicode letters, numbers, and underscore. Calls may end in &lt;code&gt;?&lt;/code&gt; or &lt;code&gt;!&lt;/code&gt;. See &lt;a href=&quot;unicode-syntax&quot;&gt;Unicode Syntax&lt;/a&gt; for a formal specification.</source>
          <target state="translated">Las llamadas no calificadas, como &lt;code&gt;add(1, 2)&lt;/code&gt; , deben comenzar con un gui&amp;oacute;n bajo o una letra Unicode que no est&amp;eacute; en may&amp;uacute;sculas o en el t&amp;iacute;tulo. La llamada puede continuar usando una secuencia de letras, n&amp;uacute;meros y guiones bajos Unicode. Las llamadas pueden terminar en &lt;code&gt;?&lt;/code&gt; o &lt;code&gt;!&lt;/code&gt; . Consulte &lt;a href=&quot;unicode-syntax&quot;&gt;Sintaxis Unicode&lt;/a&gt; para obtener una especificaci&amp;oacute;n formal.</target>
        </trans-unit>
        <trans-unit id="b40e406bdf08c15d5973db15d0796f73afa2bc3f" translate="yes" xml:space="preserve">
          <source>Normal color or intensity.</source>
          <target state="translated">Color o intensidad normal.</target>
        </trans-unit>
        <trans-unit id="485af32f6fc1eec7f09815a3b0ede51b1a6f1fe7" translate="yes" xml:space="preserve">
          <source>Normalization forms &lt;code&gt;:nfkc&lt;/code&gt; and &lt;code&gt;:nfkd&lt;/code&gt; should not be blindly applied to arbitrary text. Because they erase many formatting distinctions, they will prevent round-trip conversion to and from many legacy character sets.</source>
          <target state="translated">Formas de normalizaci&amp;oacute;n &lt;code&gt;:nfkc&lt;/code&gt; y &lt;code&gt;:nfkd&lt;/code&gt; no deben aplicarse ciegamente a texto arbitrario. Debido a que borran muchas distinciones de formato, evitar&amp;aacute;n la conversi&amp;oacute;n de ida y vuelta hacia y desde muchos conjuntos de caracteres heredados.</target>
        </trans-unit>
        <trans-unit id="522111b8eee38d26714335d6779562bdf0c0d1fc" translate="yes" xml:space="preserve">
          <source>Normalizes &lt;code&gt;include&lt;/code&gt; and &lt;code&gt;exclude&lt;/code&gt; filters to remove duplicates and keep precedence.</source>
          <target state="translated">Normaliza los filtros de &lt;code&gt;include&lt;/code&gt; y &lt;code&gt;exclude&lt;/code&gt; para eliminar duplicados y mantener la prioridad.</target>
        </trans-unit>
        <trans-unit id="16efb8f5278c1947b297b82bf3c74d4bdac2d0d7" translate="yes" xml:space="preserve">
          <source>Normalizes an exception, converting Erlang exceptions to Elixir exceptions.</source>
          <target state="translated">Normaliza una excepción,convirtiendo las excepciones de Erlang en excepciones de Elixir.</target>
        </trans-unit>
        <trans-unit id="ca65eca931881f00085a8c21384007ac72711fde" translate="yes" xml:space="preserve">
          <source>Normalizes and formats any throw/error/exit.</source>
          <target state="translated">Normaliza y da formato a cualquier lanzamiento/error/salida.</target>
        </trans-unit>
        <trans-unit id="d040545513c396d6f00a60b9e02e4a5efcfb1b55" translate="yes" xml:space="preserve">
          <source>Normalizes and formats throw/errors/exits and stacktraces.</source>
          <target state="translated">Normaliza y formatea tiros/errores/salidas y rastros de pila.</target>
        </trans-unit>
        <trans-unit id="b4a7a922ef3ff8bef51868270a40e0256a78a3f8" translate="yes" xml:space="preserve">
          <source>Normally, repeating a module attribute will cause its value to be reassigned, but there are circumstances where you may want to &lt;a href=&quot;https://hexdocs.pm/elixir/Module.html#register_attribute/3&quot;&gt;configure the module attribute&lt;/a&gt; so that its values are accumulated:</source>
          <target state="translated">Normalmente, repetir un atributo de m&amp;oacute;dulo har&amp;aacute; que se reasigne su valor, pero hay circunstancias en las que es posible que desee &lt;a href=&quot;https://hexdocs.pm/elixir/Module.html#register_attribute/3&quot;&gt;configurar el atributo de m&amp;oacute;dulo&lt;/a&gt; para que sus valores se acumulen:</target>
        </trans-unit>
        <trans-unit id="343f0ad200dae1f7321bdbca2861d3e1cec1c9d9" translate="yes" xml:space="preserve">
          <source>Not all expressions are allowed in guard clauses, but only a handful of them. This is a deliberate choice. This way, Elixir (and Erlang) can make sure that nothing bad happens while executing guards and no mutations happen anywhere. It also allows the compiler to optimize the code related to guards efficiently.</source>
          <target state="translated">No todas las expresiones están permitidas en las cláusulas de guardia,pero sólo un puñado de ellas.Esta es una elección deliberada.De esta manera,Elixir (y Erlang)pueden asegurarse de que no pase nada malo mientras ejecutan las guardias y que no ocurran mutaciones en ningún lugar.También permite al compilador optimizar el código relacionado con los guardias de manera eficiente.</target>
        </trans-unit>
        <trans-unit id="63cc6d4577351584189eae49ee593bacbcaa1a41" translate="yes" xml:space="preserve">
          <source>Not allowed in guard clauses.</source>
          <target state="translated">No está permitido en las cláusulas de la guardia.</target>
        </trans-unit>
        <trans-unit id="7bbb840640c8ed788ab616e2c3f9edd23f97d87a" translate="yes" xml:space="preserve">
          <source>Not equal to operator.</source>
          <target state="translated">No es igual al operador.</target>
        </trans-unit>
        <trans-unit id="4f4ee146dc15494c81d4bd8a2a2759820080e7c5" translate="yes" xml:space="preserve">
          <source>Not framed or encircled.</source>
          <target state="translated">No está enmarcado ni rodeado.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
