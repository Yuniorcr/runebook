<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="eslint">
    <body>
      <group id="eslint">
        <trans-unit id="242eeccd5d52147ec1754c157acf9d8bc93f2a94" translate="yes" xml:space="preserve">
          <source>FunctionExpression</source>
          <target state="translated">FunctionExpression</target>
        </trans-unit>
        <trans-unit id="7b9979eefc37fbcb68120aa159c368948bb1d7b5" translate="yes" xml:space="preserve">
          <source>Functions Explained</source>
          <target state="translated">Explicación de las funciones</target>
        </trans-unit>
        <trans-unit id="9d73f5d6d7a1f0213edd697639ee44d40a45e487" translate="yes" xml:space="preserve">
          <source>Functions declared inside of other functions should be declared immediately after the &lt;code&gt;var&lt;/code&gt; statement.</source>
          <target state="translated">Las funciones declaradas dentro de otras funciones deben declararse inmediatamente despu&amp;eacute;s de la instrucci&amp;oacute;n &lt;code&gt;var&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c4bcc58afe5ae87087e01c52a23f4ed7d3ef4f59" translate="yes" xml:space="preserve">
          <source>Functions should be declared before they are used. When a function is not a method (not attached to an object) it should be defined using function declaration format (not function expression format nor using the &lt;code&gt;Function&lt;/code&gt; constructor). There should be no space between the function name and the opening parentheses. There should be one space between the closing parentheses and the right brace. The right brace should be on the same line as the &lt;code&gt;function&lt;/code&gt; keyword. There should be no space after the opening parentheses or before the closing parentheses. Named arguments should have a space after the comma but not before it. The function body should be indented one level.</source>
          <target state="translated">Las funciones deben declararse antes de su uso. Cuando una funci&amp;oacute;n no es un m&amp;eacute;todo (no est&amp;aacute; adjunta a un objeto), debe definirse usando el formato de declaraci&amp;oacute;n de funci&amp;oacute;n (no el formato de expresi&amp;oacute;n de funci&amp;oacute;n ni el constructor de &lt;code&gt;Function&lt;/code&gt; ). No debe haber espacio entre el nombre de la funci&amp;oacute;n y el par&amp;eacute;ntesis de apertura. Debe haber un espacio entre el par&amp;eacute;ntesis de cierre y la llave derecha. La llave derecha debe estar en la misma l&amp;iacute;nea que la palabra clave de la &lt;code&gt;function&lt;/code&gt; . No debe haber ning&amp;uacute;n espacio despu&amp;eacute;s del par&amp;eacute;ntesis de apertura o antes del par&amp;eacute;ntesis de cierre. Los argumentos con nombre deben tener un espacio despu&amp;eacute;s de la coma, pero no antes. El cuerpo de la funci&amp;oacute;n debe tener una sangr&amp;iacute;a de un nivel.</target>
        </trans-unit>
        <trans-unit id="bde886e46a60602d71e6fb5101b6d6dffe1e77d5" translate="yes" xml:space="preserve">
          <source>Functions that take numerous parameters can be difficult to read and write because it requires the memorization of what each parameter is, its type, and the order they should appear in. As a result, many coders adhere to a convention that caps the number of parameters a function can take.</source>
          <target state="translated">Las funciones que toman numerosos parámetros pueden ser difíciles de leer y escribir porque requiere la memorización de lo que es cada parámetro,su tipo y el orden en que deben aparecer.Como resultado,muchos codificadores se adhieren a una convención que limita el número de parámetros que una función puede tomar.</target>
        </trans-unit>
        <trans-unit id="bafd4b54282745a2bed1442852b73f4b3189a77a" translate="yes" xml:space="preserve">
          <source>Further Reading</source>
          <target state="translated">Más lecturas</target>
        </trans-unit>
        <trans-unit id="e25c1e95ea5591c995c9c1f25b2d912e486761e8" translate="yes" xml:space="preserve">
          <source>Further Reading: https://estools.github.io/escope/</source>
          <target state="translated">Lecturas adicionales:https://estools.github.io/escope/</target>
        </trans-unit>
        <trans-unit id="0e44c8b638baa470dbb5f127964c092cc77ea465" translate="yes" xml:space="preserve">
          <source>Further reading</source>
          <target state="translated">Más lecturas</target>
        </trans-unit>
        <trans-unit id="ba2bb5be981e93482d382868040766613c7b17db" translate="yes" xml:space="preserve">
          <source>Further, ES6 modules mandate that &lt;code&gt;import&lt;/code&gt; and &lt;code&gt;export&lt;/code&gt; statements can only occur in the top level of the module's body.</source>
          <target state="translated">Adem&amp;aacute;s, los m&amp;oacute;dulos ES6 exigen que &lt;code&gt;export&lt;/code&gt; declaraciones de &lt;code&gt;import&lt;/code&gt; aci&amp;oacute;n y exportaci&amp;oacute;n solo puedan ocurrir en el nivel superior del cuerpo del m&amp;oacute;dulo.</target>
        </trans-unit>
        <trans-unit id="7815e5645af9df96e892739a3b0f31714ebc82b7" translate="yes" xml:space="preserve">
          <source>Further, in &lt;code&gt;&quot;always&quot;&lt;/code&gt; mode, a second object option is available that contains a single boolean &lt;code&gt;allowNewlines&lt;/code&gt; property.</source>
          <target state="translated">Adem&amp;aacute;s, en el modo &lt;code&gt;&quot;always&quot;&lt;/code&gt; , hay disponible una segunda opci&amp;oacute;n de objeto que contiene una &amp;uacute;nica propiedad booleana &lt;code&gt;allowNewlines&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="81de065a8861790d26820fc5d06589b48f235e3e" translate="yes" xml:space="preserve">
          <source>Generally, semicolons are at the end of lines. However, in semicolon-less style, semicolons are at the beginning of lines. This rule enforces that semicolons are at the configured location.</source>
          <target state="translated">Generalmente,los punto y coma están al final de las líneas.Sin embargo,en el estilo sin punto y coma,los puntos y comas están al principio de las líneas.Esta regla hace que los puntos y comas estén en la ubicación configurada.</target>
        </trans-unit>
        <trans-unit id="3e79ba65138b641bbe407622f3e91f8a8f78035c" translate="yes" xml:space="preserve">
          <source>Generates &lt;code&gt;build/eslint.js&lt;/code&gt; for use in a browser</source>
          <target state="translated">Genera &lt;code&gt;build/eslint.js&lt;/code&gt; para usar en un navegador</target>
        </trans-unit>
        <trans-unit id="fcc5b2914a7a2ea251adb77c39978894c31abd89" translate="yes" xml:space="preserve">
          <source>Generates &lt;code&gt;build/eslint.js&lt;/code&gt;, a version of ESLint for use in the browser</source>
          <target state="translated">Genera &lt;code&gt;build/eslint.js&lt;/code&gt; , una versi&amp;oacute;n de ESLint para usar en el navegador</target>
        </trans-unit>
        <trans-unit id="5945bd3c8bc550a8cf2401193804d1c9e6d113b1" translate="yes" xml:space="preserve">
          <source>Generates JSDoc documentation and places it into &lt;code&gt;/jsdoc&lt;/code&gt;.</source>
          <target state="translated">Genera documentaci&amp;oacute;n JSDoc y la coloca en &lt;code&gt;/jsdoc&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="310727bd5d081f34063cbab1b776498ff1099367" translate="yes" xml:space="preserve">
          <source>Generators are a new type of function in ECMAScript 6 that can return multiple values over time. These special functions are indicated by placing an &lt;code&gt;*&lt;/code&gt; after the &lt;code&gt;function&lt;/code&gt; keyword.</source>
          <target state="translated">Los generadores son un nuevo tipo de funci&amp;oacute;n en ECMAScript 6 que puede devolver m&amp;uacute;ltiples valores a lo largo del tiempo. Estas funciones especiales se indican colocando un &lt;code&gt;*&lt;/code&gt; despu&amp;eacute;s de la palabra clave de &lt;code&gt;function&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="93c139a6ce34105689c947640356617403f86eb6" translate="yes" xml:space="preserve">
          <source>Get familiar with the &lt;a href=&quot;user-guide/command-line-interface&quot;&gt;command line options&lt;/a&gt;.</source>
          <target state="translated">Familiar&amp;iacute;zate con las &lt;a href=&quot;user-guide/command-line-interface&quot;&gt;opciones de la l&amp;iacute;nea de comandos&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="010b85ad56b34c34c7c2a3b2436c740e30428ed5" translate="yes" xml:space="preserve">
          <source>Getting Started</source>
          <target state="translated">Empezando</target>
        </trans-unit>
        <trans-unit id="58b550930ff9fffb167adfd8ee39a843e9586962" translate="yes" xml:space="preserve">
          <source>Getting Started with ESLint</source>
          <target state="translated">Empezando con ESLint</target>
        </trans-unit>
        <trans-unit id="7ca8756b353c0b76dc6de040bd89171962896459" translate="yes" xml:space="preserve">
          <source>Getting the Source</source>
          <target state="translated">Obtener la fuente</target>
        </trans-unit>
        <trans-unit id="128c6bb7b6bf78e6850bf53726f5a89cab72531b" translate="yes" xml:space="preserve">
          <source>Git Precommit Hook</source>
          <target state="translated">Git Precommit Hook</target>
        </trans-unit>
        <trans-unit id="21ff9395b1860dfd1b610dd7f96c9e872d886945" translate="yes" xml:space="preserve">
          <source>Git pre-commit hook that only lints staged changes</source>
          <target state="translated">Git pre-compromiso de gancho que sólo pelusas cambios de escenario</target>
        </trans-unit>
        <trans-unit id="e617e36bd8412176fc0cb1c38dd248de4b431c36" translate="yes" xml:space="preserve">
          <source>Glob pattern overrides have higher precedence than the regular configuration in the same config file. Multiple overrides within the same config are applied in order. That is, the last override block in a config file always has the highest precedence.</source>
          <target state="translated">Las anulaciones de patrones globales tienen mayor precedencia que la configuración regular en el mismo archivo de configuración.Las múltiples anulaciones dentro de la misma configuración se aplican en orden.Es decir,el último bloque de anulación en un archivo de configuración siempre tiene la mayor precedencia.</target>
        </trans-unit>
        <trans-unit id="0823f01a9e70f704b93047e4e7ec9b65dc5acd57" translate="yes" xml:space="preserve">
          <source>Global variable leaks</source>
          <target state="translated">Fugas variables globales</target>
        </trans-unit>
        <trans-unit id="1e8bf2817d0e3606a6573ec6b33c08545db542a1" translate="yes" xml:space="preserve">
          <source>Global variable leaks.</source>
          <target state="translated">Fugas variables globales.</target>
        </trans-unit>
        <trans-unit id="bdf50a7101b173e7ff27359f55926a9df8d5a3fd" translate="yes" xml:space="preserve">
          <source>Global variables created from a script can produce name collisions with global variables created from another script, which will usually lead to runtime errors or unexpected behavior.</source>
          <target state="translated">Las variables globales creadas a partir de un guión pueden producir colisiones de nombres con variables globales creadas a partir de otro guión,lo que normalmente provocará errores en tiempo de ejecución o un comportamiento inesperado.</target>
        </trans-unit>
        <trans-unit id="b1d22fa6d5fe08a0428bd868deefa69f7b4dad4c" translate="yes" xml:space="preserve">
          <source>Globals can be disabled with the string &lt;code&gt;&quot;off&quot;&lt;/code&gt;. For example, in an environment where most ES2015 globals are available but &lt;code&gt;Promise&lt;/code&gt; is unavailable, you might use this config:</source>
          <target state="translated">Los globales se pueden desactivar con la cadena &lt;code&gt;&quot;off&quot;&lt;/code&gt; . Por ejemplo, en un entorno donde la mayor&amp;iacute;a de los globales de ES2015 est&amp;aacute;n disponibles pero &lt;code&gt;Promise&lt;/code&gt; no est&amp;aacute; disponible, puede usar esta configuraci&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="2a6694355730f716bd8bc02fad0f77e6032920b3" translate="yes" xml:space="preserve">
          <source>Globs are matched using &lt;a href=&quot;https://github.com/kaelzhang/node-ignore&quot;&gt;node-ignore&lt;/a&gt;, so a number of features are available:</source>
          <target state="translated">Los globos se combinan con el &lt;a href=&quot;https://github.com/kaelzhang/node-ignore&quot;&gt;nodo ignorar&lt;/a&gt; , por lo que hay varias funciones disponibles:</target>
        </trans-unit>
        <trans-unit id="411dfa3491e742f169a9eabf19310458112cfe76" translate="yes" xml:space="preserve">
          <source>Go to &lt;a href=&quot;https://github.com/eslint/eslint&quot;&gt;https://github.com/eslint/eslint&lt;/a&gt; and click the &quot;Fork&quot; button. Follow the &lt;a href=&quot;https://help.github.com/articles/fork-a-repo&quot;&gt;GitHub documentation&lt;/a&gt; for forking and cloning.</source>
          <target state="translated">Vaya a &lt;a href=&quot;https://github.com/eslint/eslint&quot;&gt;https://github.com/eslint/eslint&lt;/a&gt; y haga clic en el bot&amp;oacute;n &quot;Bifurcaci&amp;oacute;n&quot;. Siga la &lt;a href=&quot;https://help.github.com/articles/fork-a-repo&quot;&gt;documentaci&amp;oacute;n de GitHub&lt;/a&gt; para bifurcar y clonar.</target>
        </trans-unit>
        <trans-unit id="a6617e667de9f88741fd1a7ebaf6f0e23cfbaa38" translate="yes" xml:space="preserve">
          <source>Go to &lt;a href=&quot;https://nodejs.org/&quot;&gt;https://nodejs.org/&lt;/a&gt; to download and install the latest stable version for your operating system.</source>
          <target state="translated">Vaya a &lt;a href=&quot;https://nodejs.org/&quot;&gt;https://nodejs.org/&lt;/a&gt; para descargar e instalar la &amp;uacute;ltima versi&amp;oacute;n estable para su sistema operativo.</target>
        </trans-unit>
        <trans-unit id="6ea7f828f26d9fceea4f4d6bd87992131e20906f" translate="yes" xml:space="preserve">
          <source>Grunt: &lt;a href=&quot;https://www.npmjs.com/package/grunt-eslint&quot;&gt;grunt-eslint&lt;/a&gt;</source>
          <target state="translated">Grunt: &lt;a href=&quot;https://www.npmjs.com/package/grunt-eslint&quot;&gt;gru&amp;ntilde;ido-eslint&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bf073fae640ded81eeb7a4cee70faff4a623c16c" translate="yes" xml:space="preserve">
          <source>Guide</source>
          <target state="translated">Guide</target>
        </trans-unit>
        <trans-unit id="54000f7505185b081957bfac1390caa5502c47df" translate="yes" xml:space="preserve">
          <source>Gulp: &lt;a href=&quot;https://www.npmjs.com/package/gulp-eslint&quot;&gt;gulp-eslint&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://www.npmjs.com/package/gulp-eslint&quot;&gt;Trago&lt;/a&gt; : trago-eslint</target>
        </trans-unit>
        <trans-unit id="4a3cb3ca162fa44c4df1b6111753f586c63126fb" translate="yes" xml:space="preserve">
          <source>Handling warnings</source>
          <target state="translated">Manejar las advertencias</target>
        </trans-unit>
        <trans-unit id="400e3ff42bde508534f29f8b35fbfc07bca3a323" translate="yes" xml:space="preserve">
          <source>Have an ESLint team member champion inclusion of the rule</source>
          <target state="translated">Tener un miembro del equipo de ESLint campeón de la inclusión de la regla</target>
        </trans-unit>
        <trans-unit id="a198a8011dce88c0fa8a772a88db629e2b707836" translate="yes" xml:space="preserve">
          <source>Have an ESLint team member champion the change</source>
          <target state="translated">Hacer que un miembro del equipo de ESLint defienda el cambio</target>
        </trans-unit>
        <trans-unit id="2331ba67e2d2702911301630fcf52e4c0d23abea" translate="yes" xml:space="preserve">
          <source>Have some extra time and want to contribute? This section talks about the process of working on issues.</source>
          <target state="translated">¿Tiene algo de tiempo extra y quiere contribuir? Esta sección habla sobre el proceso de trabajo en los temas.</target>
        </trans-unit>
        <trans-unit id="0a4d55a8d778e5022fab701977c5d840bbc486d0" translate="yes" xml:space="preserve">
          <source>Hello World</source>
          <target state="translated">Hola Mundo</target>
        </trans-unit>
        <trans-unit id="4698476cc278899c186f08ba38fc540c030e5af5" translate="yes" xml:space="preserve">
          <source>Here are a few common examples using the ES5 syntax:</source>
          <target state="translated">Aquí hay algunos ejemplos comunes usando la sintaxis del ES5:</target>
        </trans-unit>
        <trans-unit id="50fcab2478cdd473bf8ef09108774e65b13bfec6" translate="yes" xml:space="preserve">
          <source>Here are methods for the &lt;a href=&quot;../rules/array-callback-return&quot;&gt;array-callback-return&lt;/a&gt; rule:</source>
          <target state="translated">Estos son los m&amp;eacute;todos para la regla de &lt;a href=&quot;../rules/array-callback-return&quot;&gt;devoluci&amp;oacute;n de llamada de matriz&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="0931022beea83b3afc095873234631b7243eeca4" translate="yes" xml:space="preserve">
          <source>Here are some examples:</source>
          <target state="translated">Aquí hay algunos ejemplos:</target>
        </trans-unit>
        <trans-unit id="8107635e978f92c38dfc42f4127b75fb737c33b8" translate="yes" xml:space="preserve">
          <source>Here are some good commit message summary examples:</source>
          <target state="translated">Aquí hay algunos buenos ejemplos de resumen de mensajes de compromiso:</target>
        </trans-unit>
        <trans-unit id="93db38995286d4c911c64ebca2e9ba323edd87ae" translate="yes" xml:space="preserve">
          <source>Here are the supported object options:</source>
          <target state="translated">Aquí están las opciones de objetos soportados:</target>
        </trans-unit>
        <trans-unit id="6bd072abb5800aca18a1177a3f0b3a9572a87781" translate="yes" xml:space="preserve">
          <source>Here is an example configuration:</source>
          <target state="translated">Aquí hay un ejemplo de configuración:</target>
        </trans-unit>
        <trans-unit id="e674c22be7c4bf1ffea002950ce480358ab828e8" translate="yes" xml:space="preserve">
          <source>Here is an example of a generator function:</source>
          <target state="translated">He aquí un ejemplo de la función de un generador:</target>
        </trans-unit>
        <trans-unit id="e49700a85e99598dc36d99df820a3fccd24ff705" translate="yes" xml:space="preserve">
          <source>Here is the basic format of the source file for a rule:</source>
          <target state="translated">Aquí está el formato básico del archivo fuente de una regla:</target>
        </trans-unit>
        <trans-unit id="dd8677592fa5ec27c36b1f8455fb17aa39ea36fe" translate="yes" xml:space="preserve">
          <source>Here's a configuration file with the closest equivalent of the old defaults:</source>
          <target state="translated">Aquí hay un archivo de configuración con el equivalente más cercano a los antiguos valores por defecto:</target>
        </trans-unit>
        <trans-unit id="8f2b2a6785fe7221113d612b4694f75cc5b860c2" translate="yes" xml:space="preserve">
          <source>Here's an example &lt;code&gt;.eslintrc.json&lt;/code&gt; file:</source>
          <target state="translated">Aqu&amp;iacute; hay un ejemplo de archivo &lt;code&gt;.eslintrc.json&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="3caaee4438077ccfc367e54ba130583f7f5793e1" translate="yes" xml:space="preserve">
          <source>Here's an example where the usage of &lt;code&gt;=&amp;gt;&lt;/code&gt; could be confusing:</source>
          <target state="translated">Aqu&amp;iacute; hay un ejemplo en el que el uso de &lt;code&gt;=&amp;gt;&lt;/code&gt; podr&amp;iacute;a resultar confuso:</target>
        </trans-unit>
        <trans-unit id="69579a1902b896558c6c5e0da078f9c102327c17" translate="yes" xml:space="preserve">
          <source>Here's an example where the usage of &lt;code&gt;=&amp;gt;&lt;/code&gt; is most likely a typo:</source>
          <target state="translated">A continuaci&amp;oacute;n, se muestra un ejemplo en el que el uso de &lt;code&gt;=&amp;gt;&lt;/code&gt; es probablemente un error tipogr&amp;aacute;fico:</target>
        </trans-unit>
        <trans-unit id="91cf4ec4989adf874c24a01d0a7887526b72a403" translate="yes" xml:space="preserve">
          <source>Here's what the &lt;code&gt;data&lt;/code&gt; object would look like if one rule, &lt;code&gt;no-extra-semi&lt;/code&gt;, had been run:</source>
          <target state="translated">As&amp;iacute; es como se ver&amp;iacute;a el objeto de &lt;code&gt;data&lt;/code&gt; si se hubiera ejecutado una regla, &lt;code&gt;no-extra-semi&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="c8381d2b32745ce22d2b437f812f233f5b2f2c31" translate="yes" xml:space="preserve">
          <source>Here's what the schema from above looks like when properly converted:</source>
          <target state="translated">Así es como se ve el esquema desde arriba cuando se convierte adecuadamente:</target>
        </trans-unit>
        <trans-unit id="75ae80968a1517575f98728b476cb5292150f02e" translate="yes" xml:space="preserve">
          <source>Here, the &lt;code&gt;fix()&lt;/code&gt; function is used to insert a semicolon after the node. Note that a fix is not immediately applied, and may not be applied at all if there are conflicts with other fixes. After applying fixes, ESLint will run all of the enabled rules again on the fixed code, potentially applying more fixes. This process will repeat up to 10 times, or until no more fixable problems are found. Afterwards, any remaining problems will be reported as usual.</source>
          <target state="translated">Aqu&amp;iacute;, la funci&amp;oacute;n &lt;code&gt;fix()&lt;/code&gt; se usa para insertar un punto y coma despu&amp;eacute;s del nodo. Tenga en cuenta que una correcci&amp;oacute;n no se aplica de inmediato y es posible que no se aplique en absoluto si hay conflictos con otras correcciones. Despu&amp;eacute;s de aplicar las correcciones, ESLint volver&amp;aacute; a ejecutar todas las reglas habilitadas en el c&amp;oacute;digo fijo, lo que podr&amp;iacute;a aplicar m&amp;aacute;s correcciones. Este proceso se repetir&amp;aacute; hasta 10 veces o hasta que no se encuentren m&amp;aacute;s problemas solucionables. Posteriormente, cualquier problema restante se informar&amp;aacute; como de costumbre.</target>
        </trans-unit>
        <trans-unit id="8fbec61ce977dd79baacea5273b4c4549f2f0f9a" translate="yes" xml:space="preserve">
          <source>Here, the &lt;code&gt;fix()&lt;/code&gt; function is used to insert a semicolon after the node. Note that the fix is not immediately applied and may not be applied at all if there are conflicts with other fixes. If the fix cannot be applied, then the problem message is reported as usual; if the fix can be applied, then the problem message is not reported.</source>
          <target state="translated">Aqu&amp;iacute;, la funci&amp;oacute;n &lt;code&gt;fix()&lt;/code&gt; se usa para insertar un punto y coma despu&amp;eacute;s del nodo. Tenga en cuenta que la correcci&amp;oacute;n no se aplica de inmediato y es posible que no se aplique en absoluto si hay conflictos con otras correcciones. Si no se puede aplicar la soluci&amp;oacute;n, el mensaje de problema se informa como de costumbre; si se puede aplicar la soluci&amp;oacute;n, el mensaje de problema no se informa.</target>
        </trans-unit>
        <trans-unit id="ff8b740232342a63ba2626bdfd5772e2040ddc24" translate="yes" xml:space="preserve">
          <source>How ESLint Finds Personal Configuration File</source>
          <target state="translated">Cómo ESLint encuentra el archivo de configuración personal</target>
        </trans-unit>
        <trans-unit id="5f9f0fbf29f7b501c030758c0c08e3456ab16379" translate="yes" xml:space="preserve">
          <source>How Personal Configuration File Behaves</source>
          <target state="translated">Cómo se comporta el archivo de configuración personal</target>
        </trans-unit>
        <trans-unit id="baf60d8659418f3ae6c463f7ba4d66b67aa7ea0a" translate="yes" xml:space="preserve">
          <source>How evil is eval</source>
          <target state="translated">¿Cómo se evalúa el mal</target>
        </trans-unit>
        <trans-unit id="1dd6a17cb4033f4f74df1bb6912b8a28a8074084" translate="yes" xml:space="preserve">
          <source>How it works</source>
          <target state="translated">Cómo funciona</target>
        </trans-unit>
        <trans-unit id="1327d170552189b8d51b2d02b266287ad708c180" translate="yes" xml:space="preserve">
          <source>How to store Node.js deployment settings/configuration files? - Stack Overflow</source>
          <target state="translated">¿Cómo almacenar los archivos de configuración de despliegue/configuración de Node.js?-Desbordamiento de la pila</target>
        </trans-unit>
        <trans-unit id="61690269fd440a22ff0ab6115f326e176ab7f24d" translate="yes" xml:space="preserve">
          <source>However, if you want to enforce the style of spacing between the &lt;code&gt;function&lt;/code&gt; keyword and the following opening parenthesis, please refer to &lt;a href=&quot;space-before-function-paren&quot;&gt;space-before-function-paren&lt;/a&gt;.</source>
          <target state="translated">Sin embargo, si desea aplicar el estilo de espaciado entre la palabra clave de &lt;code&gt;function&lt;/code&gt; y el siguiente par&amp;eacute;ntesis de apertura, consulte &lt;a href=&quot;space-before-function-paren&quot;&gt;espacio antes de la funci&amp;oacute;n paren&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1d1d23a4e252168ddaf82392ba6af06eb923611d" translate="yes" xml:space="preserve">
          <source>However, if you're using Node.js, you may want to turn strict mode on globally. Files are typically not concatenated together in Node.js projects and therefore the risk of applying strict mode accidentally is minimal. Further, since every file in Node.js has its own scope, global strict mode only effects the single file in which it is placed.</source>
          <target state="translated">Sin embargo,si está usando Node.js,puede que quiera activar el modo estricto globalmente.Los archivos no suelen estar concatenados en los proyectos de Node.js y,por lo tanto,el riesgo de aplicar el modo estricto accidentalmente es mínimo.Además,dado que cada archivo en Node.js tiene su propio alcance,el modo estricto global sólo afecta al único archivo en el que está colocado.</target>
        </trans-unit>
        <trans-unit id="128ecc4491bd188d93624c174fbe6b646868393b" translate="yes" xml:space="preserve">
          <source>However, the ASI mechanism can sometimes be tricky to people who are using semicolons. For example, consider this code:</source>
          <target state="translated">Sin embargo,el mecanismo de ASI puede ser a veces difícil para las personas que usan punto y coma.Por ejemplo,considere este código:</target>
        </trans-unit>
        <trans-unit id="c379491a9b3c4a1a9218e57f12d3d5a77f41c184" translate="yes" xml:space="preserve">
          <source>However, there are a few problems with this. First, you can't be sure what type of system the script is running on. Node.js can be run on any computer, including Windows, which uses a different path separator. It's very easy, therefore, to create an invalid path using string concatenation and assuming Unix-style separators. There's also the possibility of having double separators, or otherwise ending up with an invalid path.</source>
          <target state="translated">Sin embargo,hay algunos problemas con esto.Primero,no puedes estar seguro de en qué tipo de sistema se está ejecutando el guión.Node.js puede ejecutarse en cualquier ordenador,incluyendo Windows,que utiliza un separador de rutas diferente.Es muy fácil,por lo tanto,crear una ruta inválida usando la concatenación de cadenas y asumiendo separadores de estilo Unix.También existe la posibilidad de tener separadores dobles,o de otra manera terminar con una ruta inválida.</target>
        </trans-unit>
        <trans-unit id="eeb456769869329e0928feb28b4a92121639f6d0" translate="yes" xml:space="preserve">
          <source>However, this is no different from using the more concise object literal syntax:</source>
          <target state="translated">Sin embargo,esto no es diferente de usar la sintaxis literal de objetos más concisa:</target>
        </trans-unit>
        <trans-unit id="0691cb4a13c783b84fc4fabc7b11778ad1cb0a36" translate="yes" xml:space="preserve">
          <source>However, to simplify schema creation, rules may also export an array of schemas for each optional positional argument, and ESLint will automatically validate the required error level first. For example, the &lt;code&gt;yoda&lt;/code&gt; rule accepts a primary mode argument, as well as an extra options object with named properties.</source>
          <target state="translated">Sin embargo, para simplificar la creaci&amp;oacute;n de esquemas, las reglas tambi&amp;eacute;n pueden exportar una matriz de esquemas para cada argumento posicional opcional, y ESLint validar&amp;aacute; autom&amp;aacute;ticamente el nivel de error requerido primero. Por ejemplo, la regla &lt;code&gt;yoda&lt;/code&gt; acepta un argumento de modo primario, as&amp;iacute; como un objeto de opciones extra con propiedades nombradas.</target>
        </trans-unit>
        <trans-unit id="c30ae13ab8f250b713026f3fce02de7c62dc87d4" translate="yes" xml:space="preserve">
          <source>However, when declared in the top-level of a browser script these variables are not 'script-scoped'. They are actually created in the global scope and could produce name collisions with &lt;code&gt;var&lt;/code&gt;, &lt;code&gt;const&lt;/code&gt; and &lt;code&gt;let&lt;/code&gt; variables and &lt;code&gt;function&lt;/code&gt; and &lt;code&gt;class&lt;/code&gt; declarations from other scripts. This does not apply to ES and CommonJS modules.</source>
          <target state="translated">Sin embargo, cuando se declaran en el nivel superior de una secuencia de comandos del navegador, estas variables no tienen &quot;&amp;aacute;mbito de secuencia de comandos&quot;. En realidad, se crean en el &amp;aacute;mbito global y podr&amp;iacute;an producir colisiones de nombres con variables &lt;code&gt;var&lt;/code&gt; , &lt;code&gt;const&lt;/code&gt; y &lt;code&gt;let&lt;/code&gt; y declaraciones de &lt;code&gt;function&lt;/code&gt; y &lt;code&gt;class&lt;/code&gt; de otros scripts. Esto no se aplica a los m&amp;oacute;dulos ES y CommonJS.</target>
        </trans-unit>
        <trans-unit id="c427752105bd33ab8292fe22f39c248a208b872f" translate="yes" xml:space="preserve">
          <source>However, with appropriate new lines, it becomes easy to read and understand. Look at the same code written below with line breaks after each call.</source>
          <target state="translated">Sin embargo,con las nuevas líneas apropiadas,se vuelve fácil de leer y entender.Mira el mismo código escrito abajo con saltos de línea después de cada llamada.</target>
        </trans-unit>
        <trans-unit id="ddc6b64c7c2b6bc0e7723c5590c9bcaba38b512d" translate="yes" xml:space="preserve">
          <source>However, you might not want to manually add &lt;code&gt;eslint-disable-next-line&lt;/code&gt; or &lt;code&gt;eslint-disable-line&lt;/code&gt;. You can achieve the effect of only receiving errors for console calls with the &lt;code&gt;no-restricted-syntax&lt;/code&gt; rule:</source>
          <target state="translated">Sin embargo, es posible que no desee agregar manualmente &lt;code&gt;eslint-disable-next-line&lt;/code&gt; o &lt;code&gt;eslint-disable-line&lt;/code&gt; . Puede lograr el efecto de recibir solo errores para las llamadas de consola con la regla de &lt;code&gt;no-restricted-syntax&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="84bf4d2e563fecd62c000173949d1bd469a0d041" translate="yes" xml:space="preserve">
          <source>I hope to deprecate &lt;code&gt;functionExpressionScope&lt;/code&gt; field as replacing by &lt;code&gt;scope.type === &quot;function-expression-name&quot;&lt;/code&gt;.</source>
          <target state="translated">Espero desaprobar el campo &lt;code&gt;functionExpressionScope&lt;/code&gt; como reemplazado por &lt;code&gt;scope.type === &quot;function-expression-name&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3a588183ac256de41f63b2fdfbfde1275ea31a40" translate="yes" xml:space="preserve">
          <source>I hope to deprecate &lt;code&gt;identifiers&lt;/code&gt; field as replacing by &lt;code&gt;defs[].name&lt;/code&gt; field.</source>
          <target state="translated">Espero desaprobar el campo de &lt;code&gt;identifiers&lt;/code&gt; reemplaz&amp;aacute;ndolo por &lt;code&gt;defs[].name&lt;/code&gt; field.</target>
        </trans-unit>
        <trans-unit id="1c0d841662dae605665760989b60b4cb4244744f" translate="yes" xml:space="preserve">
          <source>I hope to rename &lt;code&gt;set&lt;/code&gt; field or replace by a method.</source>
          <target state="translated">Espero cambiar el nombre del campo &lt;code&gt;set&lt;/code&gt; o reemplazarlo por un m&amp;eacute;todo.</target>
        </trans-unit>
        <trans-unit id="7b889fd29b2848edc4e5927706ca2407a685ae99" translate="yes" xml:space="preserve">
          <source>IIFEs</source>
          <target state="translated">IIFEs</target>
        </trans-unit>
        <trans-unit id="1425a804470d990c0638321f27625d9932279335" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&quot;always&quot;&lt;/code&gt; then the &lt;code&gt;//&lt;/code&gt; or &lt;code&gt;/*&lt;/code&gt; must be followed by at least one whitespace.</source>
          <target state="translated">Si es &lt;code&gt;&quot;always&quot;&lt;/code&gt; entonces &lt;code&gt;//&lt;/code&gt; o &lt;code&gt;/*&lt;/code&gt; debe ir seguido de al menos un espacio en blanco.</target>
        </trans-unit>
        <trans-unit id="94911ace78ebe05995938d04eaeb09f0e2b08447" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&quot;balanced&quot;: false&lt;/code&gt; then balanced whitespace is not enforced.</source>
          <target state="translated">Si &lt;code&gt;&quot;balanced&quot;: false&lt;/code&gt; , el espacio en blanco balanceado no se aplica.</target>
        </trans-unit>
        <trans-unit id="df6236bfac26b8bc9b50004728602cf54088348b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&quot;balanced&quot;: true&lt;/code&gt; and &lt;code&gt;&quot;always&quot;&lt;/code&gt; then the &lt;code&gt;/*&lt;/code&gt; must be followed by at least one whitespace, and the &lt;code&gt;*/&lt;/code&gt; must be preceded by at least one whitespace.</source>
          <target state="translated">Si &lt;code&gt;&quot;balanced&quot;: true&lt;/code&gt; y &lt;code&gt;&quot;always&quot;&lt;/code&gt; entonces &lt;code&gt;/*&lt;/code&gt; debe ir seguido de al menos un espacio en blanco, y &lt;code&gt;*/&lt;/code&gt; debe ir precedido de al menos un espacio en blanco.</target>
        </trans-unit>
        <trans-unit id="65b29e4c4508e7a3b1dcca425ea25f5d0a6019fe" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&quot;balanced&quot;: true&lt;/code&gt; and &lt;code&gt;&quot;never&quot;&lt;/code&gt; then there should be no whitespace following &lt;code&gt;/*&lt;/code&gt; or preceding &lt;code&gt;*/&lt;/code&gt;.</source>
          <target state="translated">Si &lt;code&gt;&quot;balanced&quot;: true&lt;/code&gt; y &lt;code&gt;&quot;never&quot;&lt;/code&gt; entonces no deber&amp;iacute;a haber espacios en blanco despu&amp;eacute;s de &lt;code&gt;/*&lt;/code&gt; o antes de &lt;code&gt;*/&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a1bd5cf86f2f0cd115eb5d6412df3814063f3fe2" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&quot;never&quot;&lt;/code&gt; then there should be no whitespace following.</source>
          <target state="translated">Si es &lt;code&gt;&quot;never&quot;&lt;/code&gt; entonces no debe haber espacios en blanco a continuaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="af559ebac1d09db39ca603a5249c7f829d0aab9d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;.eslintrc.*&lt;/code&gt; and/or &lt;code&gt;package.json&lt;/code&gt; files are also used for configuration (i.e., &lt;code&gt;--no-eslintrc&lt;/code&gt; was not specified), the configurations will be merged. Options from this configuration file have precedence over the options from &lt;code&gt;.eslintrc.*&lt;/code&gt; and &lt;code&gt;package.json&lt;/code&gt; files.</source>
          <target state="translated">Si los &lt;code&gt;.eslintrc.*&lt;/code&gt; Y / o &lt;code&gt;package.json&lt;/code&gt; tambi&amp;eacute;n se utilizan para la configuraci&amp;oacute;n (es decir, no se especific&amp;oacute; &lt;code&gt;--no-eslintrc&lt;/code&gt; ), las configuraciones se fusionar&amp;aacute;n. Las opciones de este archivo de configuraci&amp;oacute;n tienen prioridad sobre las opciones de los &lt;code&gt;.eslintrc.*&lt;/code&gt; Y &lt;code&gt;package.json&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7a9f1ee9e49e65873a251fff85f77d43eab66dac" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;RuleTester.describe&lt;/code&gt; and &lt;code&gt;RuleTester.it&lt;/code&gt; have been set to function values, &lt;code&gt;RuleTester&lt;/code&gt; will use &lt;code&gt;RuleTester.describe&lt;/code&gt; and &lt;code&gt;RuleTester.it&lt;/code&gt; to run tests. You can use this to customize the behavior of &lt;code&gt;RuleTester&lt;/code&gt; to match a test framework that you're using.</source>
          <target state="translated">Si &lt;code&gt;RuleTester.describe&lt;/code&gt; y &lt;code&gt;RuleTester.it&lt;/code&gt; se han establecido en valores de funci&amp;oacute;n, &lt;code&gt;RuleTester&lt;/code&gt; utilizar&amp;aacute; &lt;code&gt;RuleTester.describe&lt;/code&gt; y &lt;code&gt;RuleTester.it&lt;/code&gt; para ejecutar pruebas. Puede usar esto para personalizar el comportamiento de &lt;code&gt;RuleTester&lt;/code&gt; para que coincida con un marco de prueba que est&amp;eacute; usando.</target>
        </trans-unit>
        <trans-unit id="ec01bb29e273ee321f9993370bc52ce9eab5a01b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;align&lt;/code&gt; is defined as an object, but not all of the parameters are provided, undefined parameters will default to the following:</source>
          <target state="translated">Si &lt;code&gt;align&lt;/code&gt; se define como un objeto, pero no se proporcionan todos los par&amp;aacute;metros, los par&amp;aacute;metros no definidos ser&amp;aacute;n los siguientes por defecto:</target>
        </trans-unit>
        <trans-unit id="7468df61e4cc7cbe78e75b5258128550f1d95105" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;eslint&lt;/code&gt; could find configuration files in the project, &lt;code&gt;eslint&lt;/code&gt; ignores &lt;code&gt;~/.eslintrc.*&lt;/code&gt; file even if it's in an ancestor directory of the project directory.</source>
          <target state="translated">Si &lt;code&gt;eslint&lt;/code&gt; puede encontrar archivos de configuraci&amp;oacute;n en el proyecto, &lt;code&gt;eslint&lt;/code&gt; ignora el archivo &lt;code&gt;~/.eslintrc.*&lt;/code&gt; Incluso si est&amp;aacute; en un directorio ancestro del directorio del proyecto.</target>
        </trans-unit>
        <trans-unit id="c910d7177c7be80d23035d833053528e65fae9b5" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;eslint&lt;/code&gt; could not find any configuration file in the project, &lt;code&gt;eslint&lt;/code&gt; loads &lt;code&gt;~/.eslintrc.*&lt;/code&gt; file.</source>
          <target state="translated">Si &lt;code&gt;eslint&lt;/code&gt; no pudo encontrar ning&amp;uacute;n archivo de configuraci&amp;oacute;n en el proyecto, &lt;code&gt;eslint&lt;/code&gt; carga el archivo &lt;code&gt;~/.eslintrc.*&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f571fae99406f632111fb82aa898e2ca4b333877" translate="yes" xml:space="preserve">
          <source>If ESLint can't find a configuration, then it will throw an error and ask you to provide one.</source>
          <target state="translated">Si ESLint no puede encontrar una configuración,entonces arrojará un error y le pedirá que le proporcione una.</target>
        </trans-unit>
        <trans-unit id="6f1aa46516ae8fbeb1465af094f22ef03395bdcb" translate="yes" xml:space="preserve">
          <source>If ESLint parses code in strict mode, the parser (instead of this rule) reports the error.</source>
          <target state="translated">Si ESLint analiza el código en modo estricto,el analizador (en lugar de esta regla)informa el error.</target>
        </trans-unit>
        <trans-unit id="36700c2c10655c29379465dfe1fd6e89caba46f9" translate="yes" xml:space="preserve">
          <source>If Statements</source>
          <target state="translated">Si las declaraciones</target>
        </trans-unit>
        <trans-unit id="28c62b22bf0008ec1a25ee68e5e4cab444e0ca67" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;catch&lt;/code&gt; clause in a &lt;code&gt;try&lt;/code&gt; statement accidentally (or purposely) assigns another value to the exception parameter, it impossible to refer to the error from that point on. Since there is no &lt;code&gt;arguments&lt;/code&gt; object to offer alternative access to this data, assignment of the parameter is absolutely destructive.</source>
          <target state="translated">Si una cl&amp;aacute;usula &lt;code&gt;catch&lt;/code&gt; en una declaraci&amp;oacute;n &lt;code&gt;try&lt;/code&gt; asigna accidentalmente (o intencionalmente) otro valor al par&amp;aacute;metro de excepci&amp;oacute;n, es imposible hacer referencia al error a partir de ese momento. Dado que no hay ning&amp;uacute;n objeto de &lt;code&gt;arguments&lt;/code&gt; que ofrezca un acceso alternativo a estos datos, la asignaci&amp;oacute;n del par&amp;aacute;metro es absolutamente destructiva.</target>
        </trans-unit>
        <trans-unit id="ec2084855440431416b29d5a35071c33fe850853" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;switch&lt;/code&gt; doesn't have a &lt;code&gt;default&lt;/code&gt; case, then it should be indicated with a comment.</source>
          <target state="translated">Si un &lt;code&gt;switch&lt;/code&gt; no tiene un caso &lt;code&gt;default&lt;/code&gt; , debe indicarse con un comentario.</target>
        </trans-unit>
        <trans-unit id="68b79dad32e10651fe6aed17316501637283b2e3" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;switch&lt;/code&gt; statement has duplicate test expressions in &lt;code&gt;case&lt;/code&gt; clauses, it is likely that a programmer copied a &lt;code&gt;case&lt;/code&gt; clause but forgot to change the test expression.</source>
          <target state="translated">Si una sentencia de &lt;code&gt;switch&lt;/code&gt; tiene expresiones de prueba duplicadas en cl&amp;aacute;usulas de &lt;code&gt;case&lt;/code&gt; , es probable que un programador haya copiado una cl&amp;aacute;usula de &lt;code&gt;case&lt;/code&gt; pero olvid&amp;oacute; cambiar la expresi&amp;oacute;n de prueba.</target>
        </trans-unit>
        <trans-unit id="da3285cd66acdef654458171d8d844b63892f8e4" translate="yes" xml:space="preserve">
          <source>If a Promise executor function is using &lt;code&gt;await&lt;/code&gt;, this is usually a sign that it is not actually necessary to use the &lt;code&gt;new Promise&lt;/code&gt; constructor, or the scope of the &lt;code&gt;new Promise&lt;/code&gt; constructor can be reduced.</source>
          <target state="translated">Si una funci&amp;oacute;n ejecutora de Promise est&amp;aacute; usando &lt;code&gt;await&lt;/code&gt; , esto suele ser una se&amp;ntilde;al de que no es realmente necesario usar el &lt;code&gt;new Promise&lt;/code&gt; constructor de Promise , o el alcance del &lt;code&gt;new Promise&lt;/code&gt; constructor de Promise puede reducirse.</target>
        </trans-unit>
        <trans-unit id="2a8d6853f7a44d1ae90dbb34ebf7a13d629e57a6" translate="yes" xml:space="preserve">
          <source>If a class method does not use &lt;code&gt;this&lt;/code&gt;, it can &lt;em&gt;sometimes&lt;/em&gt; be made into a static function. If you do convert the method into a static function, instances of the class that call that particular method have to be converted to a static call as well (&lt;code&gt;MyClass.callStaticMethod()&lt;/code&gt;)</source>
          <target state="translated">Si un m&amp;eacute;todo de clase no usa &lt;code&gt;this&lt;/code&gt; , a &lt;em&gt;veces se&lt;/em&gt; puede convertir en una funci&amp;oacute;n est&amp;aacute;tica. Si convierte el m&amp;eacute;todo en una funci&amp;oacute;n est&amp;aacute;tica, las instancias de la clase que llaman a ese m&amp;eacute;todo en particular tambi&amp;eacute;n deben convertirse en una llamada est&amp;aacute;tica ( &lt;code&gt;MyClass.callStaticMethod()&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="f9adcd77d4fef720476018d5517c24d272a09b5e" translate="yes" xml:space="preserve">
          <source>If a custom message is specified with the &lt;code&gt;message&lt;/code&gt; property, ESLint will use that message when reporting occurrences of the syntax specified in the &lt;code&gt;selector&lt;/code&gt; property.</source>
          <target state="translated">Si se especifica un mensaje personalizado con la propiedad del &lt;code&gt;message&lt;/code&gt; , ESLint usar&amp;aacute; ese mensaje al informar sobre ocurrencias de la sintaxis especificada en la propiedad del &lt;code&gt;selector&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d79ab9e420559d08edcc7d09e6db99ddf957f261" translate="yes" xml:space="preserve">
          <source>If a directory is specified, a cache file will be created inside the specified folder. The name of the file will be based on the hash of the current working directory (CWD). e.g.: &lt;code&gt;.cache_hashOfCWD&lt;/code&gt;</source>
          <target state="translated">Si se especifica un directorio, se crear&amp;aacute; un archivo de cach&amp;eacute; dentro de la carpeta especificada. El nombre del archivo se basar&amp;aacute; en el hash del directorio de trabajo actual (CWD). por ejemplo: &lt;code&gt;.cache_hashOfCWD&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="013f35aac0d5daf915b473bc276e6dac035af41c" translate="yes" xml:space="preserve">
          <source>If a filename in the optional second parameter matches a file that is configured to be ignored, then this function returns no errors or warnings. The method includes an additional optional boolean third parameter. When &lt;code&gt;true&lt;/code&gt;, a resolved file name that is ignored will return a warning.</source>
          <target state="translated">Si un nombre de archivo en el segundo par&amp;aacute;metro opcional coincide con un archivo que est&amp;aacute; configurado para ser ignorado, esta funci&amp;oacute;n no devuelve errores ni advertencias. El m&amp;eacute;todo incluye un tercer par&amp;aacute;metro booleano opcional adicional. Cuando es &lt;code&gt;true&lt;/code&gt; , un nombre de archivo resuelto que se ignora devolver&amp;aacute; una advertencia.</target>
        </trans-unit>
        <trans-unit id="d76f9a27f5a237607b9a23b2fbc50e0d167e5729" translate="yes" xml:space="preserve">
          <source>If a loop contains no nested loops or switches, labeling the loop is unnecessary.</source>
          <target state="translated">Si un bucle no contiene bucles anidados o interruptores,no es necesario etiquetar el bucle.</target>
        </trans-unit>
        <trans-unit id="ffa52261da0cd7a502d7bf4801fc10335e0f7e30" translate="yes" xml:space="preserve">
          <source>If a processor name starts with &lt;code&gt;.&lt;/code&gt;, ESLint handles the processor as a &lt;strong&gt;file extension-named processor&lt;/strong&gt; especially and applies the processor to the kind of files automatically. People don't need to specify the file extension-named processors in their config files.</source>
          <target state="translated">Si el nombre de un procesador comienza con &lt;code&gt;.&lt;/code&gt; , ESLint maneja el procesador especialmente como un &lt;strong&gt;procesador con nombre de extensi&amp;oacute;n de archivo&lt;/strong&gt; y aplica el procesador al tipo de archivos autom&amp;aacute;ticamente. Las personas no necesitan especificar los procesadores con nombre de extensi&amp;oacute;n de archivo en sus archivos de configuraci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="e5fad7687981070af33a1b73460dae7788d4aabc" translate="yes" xml:space="preserve">
          <source>If a reference is inside of a binary expression or a ternary expression, this rule checks the result of the expression instead. If a reference is inside of a dynamic expression (e.g. &lt;code&gt;CallExpression&lt;/code&gt;, &lt;code&gt;YieldExpression&lt;/code&gt;, ...), this rule ignores it.</source>
          <target state="translated">Si una referencia est&amp;aacute; dentro de una expresi&amp;oacute;n binaria o ternaria, esta regla verifica el resultado de la expresi&amp;oacute;n. Si una referencia se encuentra dentro de una expresi&amp;oacute;n din&amp;aacute;mica (por ejemplo &lt;code&gt;CallExpression&lt;/code&gt; , &lt;code&gt;YieldExpression&lt;/code&gt; , ...), esta regla se ignora.</target>
        </trans-unit>
        <trans-unit id="1e1270048dc46eb08c8bcfe13b7604338d3a96bc" translate="yes" xml:space="preserve">
          <source>If a rule has additional options, you can specify them using array literal syntax, such as:</source>
          <target state="translated">Si una regla tiene opciones adicionales,puede especificarlas utilizando la sintaxis literal de la matriz,como por ejemplo:</target>
        </trans-unit>
        <trans-unit id="ed092715e7af9dc686e6a209cce5db829a9d7eae" translate="yes" xml:space="preserve">
          <source>If a string is provided as an error instead of an object, the string is used to assert the &lt;code&gt;message&lt;/code&gt; of the error.</source>
          <target state="translated">Si se proporciona una cadena como un error en lugar de un objeto, la cadena se utiliza para afirmar el &lt;code&gt;message&lt;/code&gt; del error.</target>
        </trans-unit>
        <trans-unit id="f9d78cfc776b15554fbf39fc84e184e687deb527" translate="yes" xml:space="preserve">
          <source>If a valid test case only uses the &lt;code&gt;code&lt;/code&gt; property, it can optionally be provided as a string containing the code, rather than an object with a &lt;code&gt;code&lt;/code&gt; key.</source>
          <target state="translated">Si un caso de prueba v&amp;aacute;lido solo usa la propiedad del &lt;code&gt;code&lt;/code&gt; , opcionalmente se puede proporcionar como una cadena que contiene el c&amp;oacute;digo, en lugar de un objeto con una clave de &lt;code&gt;code&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ce06671cc1c5422162e0dbee1e02e62dbe4151bb" translate="yes" xml:space="preserve">
          <source>If a variable is initialized or assigned the value &lt;code&gt;this&lt;/code&gt;, the name of the variable &lt;em&gt;must&lt;/em&gt; be a designated alias.</source>
          <target state="translated">Si se inicializa una variable o se le asigna el valor &lt;code&gt;this&lt;/code&gt; , el nombre de la variable &lt;em&gt;debe&lt;/em&gt; ser un alias designado.</target>
        </trans-unit>
        <trans-unit id="83ba7ea230d056612009b4845562832e2c193c78" translate="yes" xml:space="preserve">
          <source>If a variable is never reassigned, using the &lt;code&gt;const&lt;/code&gt; declaration is better.</source>
          <target state="translated">Si una variable nunca se reasigna, es mejor usar la declaraci&amp;oacute;n &lt;code&gt;const&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="05279982445e35103bd42dc84f0c8fa4bc99dcf3" translate="yes" xml:space="preserve">
          <source>If a variable with a designated name is declared, it &lt;em&gt;must&lt;/em&gt; be either initialized (in the declaration) or assigned (in the same scope as the declaration) the value &lt;code&gt;this&lt;/code&gt;.</source>
          <target state="translated">Si se declara una variable con un nombre designado, se &lt;em&gt;debe&lt;/em&gt; inicializar (en la declaraci&amp;oacute;n) o asignar (en el mismo &amp;aacute;mbito que la declaraci&amp;oacute;n) el valor &lt;code&gt;this&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4c391588a627bffc4f9b2fa0a7ad1a3f187fc0a5" translate="yes" xml:space="preserve">
          <source>If an &lt;code&gt;.eslintignore&lt;/code&gt; file is not found and an alternate file is not specified, ESLint will look in package.json for an &lt;code&gt;eslintIgnore&lt;/code&gt; key to check for files to ignore.</source>
          <target state="translated">Si un &lt;code&gt;.eslintignore&lt;/code&gt; no se encuentra archivo y un archivo alternativo no se especifica, se ver&amp;aacute; en ESLint package.json para una &lt;code&gt;eslintIgnore&lt;/code&gt; clave para comprobar si hay archivos de ignorar.</target>
        </trans-unit>
        <trans-unit id="31e630605fbaa69cd7c9106660d700ae7cc8e034" translate="yes" xml:space="preserve">
          <source>If an &lt;code&gt;if&lt;/code&gt; block contains a &lt;code&gt;return&lt;/code&gt; statement, the &lt;code&gt;else&lt;/code&gt; block becomes unnecessary. Its contents can be placed outside of the block.</source>
          <target state="translated">Si un bloque &lt;code&gt;if&lt;/code&gt; contiene una declaraci&amp;oacute;n de &lt;code&gt;return&lt;/code&gt; , el bloque &lt;code&gt;else&lt;/code&gt; se vuelve innecesario. Su contenido se puede colocar fuera del bloque.</target>
        </trans-unit>
        <trans-unit id="060bb33758f5003d2495b8e6017c8aabee9fd6f6" translate="yes" xml:space="preserve">
          <source>If an &lt;code&gt;if&lt;/code&gt; statement is the only statement in the &lt;code&gt;else&lt;/code&gt; block, it is often clearer to use an &lt;code&gt;else if&lt;/code&gt; form.</source>
          <target state="translated">Si una instrucci&amp;oacute;n &lt;code&gt;if&lt;/code&gt; es la &amp;uacute;nica instrucci&amp;oacute;n en el bloque &lt;code&gt;else&lt;/code&gt; , a menudo es m&amp;aacute;s claro usar una forma &lt;code&gt;else if&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="108772879dc734697fb9e3f2633d5a6195dc2277" translate="yes" xml:space="preserve">
          <source>If an async executor function throws an error, the error will be lost and won't cause the newly-constructed &lt;code&gt;Promise&lt;/code&gt; to reject. This could make it difficult to debug and handle some errors.</source>
          <target state="translated">Si una funci&amp;oacute;n ejecutora as&amp;iacute;ncrona arroja un error, el error se perder&amp;aacute; y no provocar&amp;aacute; el rechazo de la &lt;code&gt;Promise&lt;/code&gt; reci&amp;eacute;n construida . Esto podr&amp;iacute;a dificultar la depuraci&amp;oacute;n y el manejo de algunos errores.</target>
        </trans-unit>
        <trans-unit id="731f187649e609b76cb19e1a10d708cfa4f42b24" translate="yes" xml:space="preserve">
          <source>If an integration has dependencies on ESLint and a set of plugins, and the tool invokes ESLint on behalf of the user with a preset configuration, the tool should set &lt;code&gt;--resolve-plugins-relative-to&lt;/code&gt; to the top-level directory of the tool.</source>
          <target state="translated">Si una integraci&amp;oacute;n tiene dependencias de ESLint y un conjunto de complementos, y la herramienta invoca a ESLint en nombre del usuario con una configuraci&amp;oacute;n preestablecida, la herramienta debe establecer &lt;code&gt;--resolve-plugins-relative-to&lt;/code&gt; en el directorio de nivel superior de la herramienta. .</target>
        </trans-unit>
        <trans-unit id="430cfbaad19dd61f95f6a025f052c0903d62611a" translate="yes" xml:space="preserve">
          <source>If an issue has already been claimed by someone, please be respectful of that person's desire to complete the work and don't work on it unless you verify that they are no longer interested.</source>
          <target state="translated">Si alguien ya ha reclamado un tema,por favor,sea respetuoso con el deseo de esa persona de completar el trabajo y no trabaje en él a menos que verifique que ya no está interesado.</target>
        </trans-unit>
        <trans-unit id="ff0ee57a0b710f6259eb08de6ae0349bb2ee8fc7" translate="yes" xml:space="preserve">
          <source>If another developer attempts to add &lt;code&gt;baz();&lt;/code&gt; to the &lt;code&gt;if&lt;/code&gt; statement, they might mistakenly change the code to</source>
          <target state="translated">Si otro desarrollador intenta agregar &lt;code&gt;baz();&lt;/code&gt; a la declaraci&amp;oacute;n &lt;code&gt;if&lt;/code&gt; , podr&amp;iacute;an cambiar por error el c&amp;oacute;digo a</target>
        </trans-unit>
        <trans-unit id="d490c46886da3eef22da5146c1cd9f085497227a" translate="yes" xml:space="preserve">
          <source>If any code paths in a function return a value explicitly but some code path do not return a value explicitly, it might be a typing mistake, especially in a large function. In the following example:</source>
          <target state="translated">Si cualquier ruta de código en una función devuelve un valor explícitamente pero alguna ruta de código no devuelve un valor explícitamente,podría ser un error de escritura,especialmente en una función grande.En el siguiente ejemplo:</target>
        </trans-unit>
        <trans-unit id="c724ecc343a6b714b13c8432f177e2988958c487" translate="yes" xml:space="preserve">
          <source>If comments are inconsistent because they are not updated when function definitions are modified, then readers might become confused.</source>
          <target state="translated">Si los comentarios son incoherentes porque no se actualizan cuando se modifican las definiciones de las funciones,los lectores podrían confundirse.</target>
        </trans-unit>
        <trans-unit id="98fcb5379ef45039a8d0d4e959eef97582a2d85a" translate="yes" xml:space="preserve">
          <source>If comments are invalid because of typing mistakes, then documentation will be incomplete.</source>
          <target state="translated">Si los comentarios no son válidos debido a errores de mecanografía,la documentación estará incompleta.</target>
        </trans-unit>
        <trans-unit id="cbb41ffface398ef2232aa13a97c60ff349b62b2" translate="yes" xml:space="preserve">
          <source>If don't want to enforce consistent linebreaks inside function parentheses, do not turn on this rule.</source>
          <target state="translated">Si no quiere hacer cumplir los saltos de línea consistentes dentro de los paréntesis de la función,no active esta regla.</target>
        </trans-unit>
        <trans-unit id="e46b2ee896050d579bb14e7a488a09fdee949b37" translate="yes" xml:space="preserve">
          <source>If explicit declaration of global variables is not to your taste.</source>
          <target state="translated">Si la declaración explícita de las variables globales no es de su agrado.</target>
        </trans-unit>
        <trans-unit id="8f73860fe183fb4ea93cd5ae590599a3b93a4551" translate="yes" xml:space="preserve">
          <source>If it is &lt;code&gt;&quot;always&quot;&lt;/code&gt;, then the literal value must always come first.</source>
          <target state="translated">Si es &lt;code&gt;&quot;always&quot;&lt;/code&gt; , entonces el valor literal siempre debe ir primero.</target>
        </trans-unit>
        <trans-unit id="9a5cddf7639a3dd0ad1b5edfefda8e16074b2b70" translate="yes" xml:space="preserve">
          <source>If it is &lt;code&gt;&quot;object&quot;&lt;/code&gt; (default), the dot in a member expression should be on the same line as the object portion.</source>
          <target state="translated">Si es &lt;code&gt;&quot;object&quot;&lt;/code&gt; (predeterminado), el punto en una expresi&amp;oacute;n miembro debe estar en la misma l&amp;iacute;nea que la parte del objeto.</target>
        </trans-unit>
        <trans-unit id="03af9596ea8057aa7372bb310711b2afc56fd99c" translate="yes" xml:space="preserve">
          <source>If it is &lt;code&gt;&quot;property&quot;&lt;/code&gt;, the dot in a member expression should be on the same line as the property portion.</source>
          <target state="translated">Si es &lt;code&gt;&quot;property&quot;&lt;/code&gt; , el punto en una expresi&amp;oacute;n miembro debe estar en la misma l&amp;iacute;nea que la parte de la propiedad.</target>
        </trans-unit>
        <trans-unit id="bbd5ac5250ad5ecc9dc78acbb61a5f71c2252cd3" translate="yes" xml:space="preserve">
          <source>If it is the default &lt;code&gt;&quot;never&quot;&lt;/code&gt;, then comparisons must never be Yoda conditions.</source>
          <target state="translated">Si es el &lt;code&gt;&quot;never&quot;&lt;/code&gt; predeterminado , las comparaciones nunca deben ser condiciones de Yoda.</target>
        </trans-unit>
        <trans-unit id="bc9f5a48306289fb13de2cacc02542cd88ed1536" translate="yes" xml:space="preserve">
          <source>If more than one parameter has the same name in a function definition, the last occurrence &quot;shadows&quot; the preceding occurrences. A duplicated name might be a typing error.</source>
          <target state="translated">Si más de un parámetro tiene el mismo nombre en la definición de una función,la última ocurrencia &quot;sombrea&quot; las ocurrencias precedentes.Un nombre duplicado puede ser un error de mecanografía.</target>
        </trans-unit>
        <trans-unit id="26b2099ade2be35a89641a96b838792d35446840" translate="yes" xml:space="preserve">
          <source>If multiple selectors have equal specificity, their listeners will be called in alphabetical order for that node.</source>
          <target state="translated">Si varios selectores tienen igual especificidad,sus oyentes serán llamados en orden alfabético para ese nodo.</target>
        </trans-unit>
        <trans-unit id="cb4224d9d3359902074aad85bbe517c47fc6fe85" translate="yes" xml:space="preserve">
          <source>If one of those occurs in an innocent-looking statement such as &lt;code&gt;a == b&lt;/code&gt; the actual problem is very difficult to spot.</source>
          <target state="translated">Si uno de esos ocurre en una declaraci&amp;oacute;n de apariencia inocente como &lt;code&gt;a == b&lt;/code&gt; el problema real es muy dif&amp;iacute;cil de detectar.</target>
        </trans-unit>
        <trans-unit id="71c77efc2dce3b6c849c7d1edf87a9fd15fcf2ac" translate="yes" xml:space="preserve">
          <source>If re-exporting from an imported module, you should add the imports to the &lt;code&gt;import&lt;/code&gt;-statement, and export that directly, not use &lt;code&gt;export ... from&lt;/code&gt;.</source>
          <target state="translated">Si reexporta desde un m&amp;oacute;dulo importado, debe agregar las importaciones a la declaraci&amp;oacute;n de &lt;code&gt;import&lt;/code&gt; aci&amp;oacute;n y exportarlo directamente, no usar &lt;code&gt;export ... from&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0eb3e53516bf8f022c5a2446e35a316afcbffebd" translate="yes" xml:space="preserve">
          <source>If that sounds like you, then continue reading to get started.</source>
          <target state="translated">Si eso suena como tú,entonces continúa leyendo para empezar.</target>
        </trans-unit>
        <trans-unit id="2d461afe2572662db02026a93f2f9778445ac9b5" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;&quot;always&quot;&lt;/code&gt; option is used, this rule requires that files always begin with the Unicode BOM character U+FEFF. If &lt;code&gt;&quot;never&quot;&lt;/code&gt; is used, files must never begin with U+FEFF.</source>
          <target state="translated">Si se usa la opci&amp;oacute;n &lt;code&gt;&quot;always&quot;&lt;/code&gt; , esta regla requiere que los archivos siempre comiencen con el car&amp;aacute;cter de BOM Unicode U + FEFF. Si se usa &lt;code&gt;&quot;never&quot;&lt;/code&gt; , los archivos nunca deben comenzar con U + FEFF.</target>
        </trans-unit>
        <trans-unit id="a004223cf87eacec3bf8edcbe4617e861ea2175b" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;&quot;exceptRange&quot;&lt;/code&gt; property is &lt;code&gt;true&lt;/code&gt;, the rule &lt;em&gt;allows&lt;/em&gt; yoda conditions in range comparisons which are wrapped directly in parentheses, including the parentheses of an &lt;code&gt;if&lt;/code&gt; or &lt;code&gt;while&lt;/code&gt; condition. The default value is &lt;code&gt;false&lt;/code&gt;. A &lt;em&gt;range&lt;/em&gt; comparison tests whether a variable is inside or outside the range between two literal values.</source>
          <target state="translated">Si la propiedad &lt;code&gt;&quot;exceptRange&quot;&lt;/code&gt; es &lt;code&gt;true&lt;/code&gt; , la regla &lt;em&gt;permite&lt;/em&gt; condiciones de yoda en comparaciones de rango que se envuelven directamente entre par&amp;eacute;ntesis, incluidos los par&amp;eacute;ntesis de una condici&amp;oacute;n &lt;code&gt;if&lt;/code&gt; o &lt;code&gt;while&lt;/code&gt; . El valor predeterminado es &lt;code&gt;false&lt;/code&gt; . Una comparaci&amp;oacute;n de &lt;em&gt;rango&lt;/em&gt; prueba si una variable est&amp;aacute; dentro o fuera del rango entre dos valores literales.</target>
        </trans-unit>
        <trans-unit id="80ccea46ead798cf9822ef53909d165d6457d6b8" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;&quot;onlyEquality&quot;&lt;/code&gt; property is &lt;code&gt;true&lt;/code&gt;, the rule reports yoda conditions &lt;em&gt;only&lt;/em&gt; for the equality operators &lt;code&gt;==&lt;/code&gt; and &lt;code&gt;===&lt;/code&gt;. The default value is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">Si la propiedad &lt;code&gt;&quot;onlyEquality&quot;&lt;/code&gt; es &lt;code&gt;true&lt;/code&gt; , la regla informa las condiciones de yoda &lt;em&gt;solo&lt;/em&gt; para los operadores de igualdad &lt;code&gt;==&lt;/code&gt; y &lt;code&gt;===&lt;/code&gt; . El valor predeterminado es &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="861981c1e841a3a76ef0b71345e0aaaf9b6bfd8b" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;ignoreConsecutiveComments&lt;/code&gt; option is set to &lt;code&gt;true&lt;/code&gt;, then comments which otherwise violate the rule will not be reported as long as they immediately follow another comment. This can be applied more than once.</source>
          <target state="translated">Si la opci&amp;oacute;n &lt;code&gt;ignoreConsecutiveComments&lt;/code&gt; se establece en &lt;code&gt;true&lt;/code&gt; , los comentarios que de otro modo violen la regla no se informar&amp;aacute;n siempre que sigan inmediatamente a otro comentario. Esto se puede aplicar m&amp;aacute;s de una vez.</target>
        </trans-unit>
        <trans-unit id="bffdbe44f305944bc7109716f9cf52ec0cf80daa" translate="yes" xml:space="preserve">
          <source>If the arrow function is intentional, it should be wrapped in parens to remove ambiguity.</source>
          <target state="translated">Si la función de la flecha es intencional,debe ser envuelta en parens para eliminar la ambigüedad.</target>
        </trans-unit>
        <trans-unit id="55317abcd7e2aa335fbbbc7490e278d824a2e6b4" translate="yes" xml:space="preserve">
          <source>If the class/attribute/pseudo-class count is tied, the selector that contains more node type selectors has higher specificity.</source>
          <target state="translated">Si el recuento de clases/atributos/seudoclases está empatado,el selector que contiene más selectores de tipo de nodo tiene mayor especificidad.</target>
        </trans-unit>
        <trans-unit id="286888e55b37d67f478b26da19d04cf8b3fa7cba" translate="yes" xml:space="preserve">
          <source>If the configured name of the error variable begins with a &lt;code&gt;^&lt;/code&gt; it is considered to be a regexp pattern.</source>
          <target state="translated">Si el nombre configurado de la variable de error comienza con &lt;code&gt;^&lt;/code&gt; , se considera un patr&amp;oacute;n de expresi&amp;oacute;n regular.</target>
        </trans-unit>
        <trans-unit id="c8424c3fa05ae2557114fbb7afae75511fc54e4f" translate="yes" xml:space="preserve">
          <source>If the example plugin above were called &lt;code&gt;eslint-plugin-myPlugin&lt;/code&gt;, the &lt;code&gt;myConfig&lt;/code&gt; and &lt;code&gt;myOtherConfig&lt;/code&gt; configurations would then be usable by extending off of &lt;code&gt;&quot;plugin:myPlugin/myConfig&quot;&lt;/code&gt; and &lt;code&gt;&quot;plugin:myPlugin/myOtherConfig&quot;&lt;/code&gt;, respectively.</source>
          <target state="translated">Si el complemento de ejemplo anterior se llamara &lt;code&gt;eslint-plugin-myPlugin&lt;/code&gt; , las configuraciones &lt;code&gt;myConfig&lt;/code&gt; y &lt;code&gt;myOtherConfig&lt;/code&gt; ser&amp;iacute;an utilizables extendi&amp;eacute;ndose fuera de &lt;code&gt;&quot;plugin:myPlugin/myConfig&quot;&lt;/code&gt; y &lt;code&gt;&quot;plugin:myPlugin/myOtherConfig&quot;&lt;/code&gt; , respectivamente.</target>
        </trans-unit>
        <trans-unit id="6755e05b62b74cc3c5aaf2f93b2be523dafe3b38" translate="yes" xml:space="preserve">
          <source>If the expression sequence is explicitly wrapped in parentheses.</source>
          <target state="translated">Si la secuencia de expresión está explícitamente envuelta en paréntesis.</target>
        </trans-unit>
        <trans-unit id="4979b6e8f108fec6d6947fcf358fcb9a4ebe8f29" translate="yes" xml:space="preserve">
          <source>If the node is a &lt;code&gt;CatchClause&lt;/code&gt;, the variable for the exception is returned.</source>
          <target state="translated">Si el nodo es una &lt;code&gt;CatchClause&lt;/code&gt; , se devuelve la variable de la excepci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="0bedf0818cdf99f778f0aba476971b9012249054" translate="yes" xml:space="preserve">
          <source>If the node is a &lt;code&gt;ClassDeclaration&lt;/code&gt; or a &lt;code&gt;ClassExpression&lt;/code&gt;, the variable for the class name is returned.</source>
          <target state="translated">Si el nodo es &lt;code&gt;ClassDeclaration&lt;/code&gt; o &lt;code&gt;ClassExpression&lt;/code&gt; , se devuelve la variable para el nombre de la clase.</target>
        </trans-unit>
        <trans-unit id="bb5dcd249f6b5101ffc512ce04d850df7301f340" translate="yes" xml:space="preserve">
          <source>If the node is a &lt;code&gt;FunctionDeclaration&lt;/code&gt; or &lt;code&gt;FunctionExpression&lt;/code&gt;, the variable for the function name is returned, in addition to variables for the function parameters.</source>
          <target state="translated">Si el nodo es una &lt;code&gt;FunctionDeclaration&lt;/code&gt; o &lt;code&gt;FunctionExpression&lt;/code&gt; , se devuelve la variable para el nombre de la funci&amp;oacute;n, adem&amp;aacute;s de las variables para los par&amp;aacute;metros de la funci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="0239c6eab481baf7e5cd73e1d8be32515edd4e81" translate="yes" xml:space="preserve">
          <source>If the node is a &lt;code&gt;VariableDeclaration&lt;/code&gt;, all variables declared in the declaration are returned.</source>
          <target state="translated">Si el nodo es un &lt;code&gt;VariableDeclaration&lt;/code&gt; , se devuelven todas las variables declaradas en la declaraci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="61a88a7314032c642bfc5f80310b4c5fc44211ab" translate="yes" xml:space="preserve">
          <source>If the node is a &lt;code&gt;VariableDeclarator&lt;/code&gt;, all variables declared in the declarator are returned.</source>
          <target state="translated">Si el nodo es un &lt;code&gt;VariableDeclarator&lt;/code&gt; , se devuelven todas las variables declaradas en el declarador.</target>
        </trans-unit>
        <trans-unit id="a53e1a5bf877ea2bcfd787625d054a10533b30c2" translate="yes" xml:space="preserve">
          <source>If the node is an &lt;code&gt;ArrowFunctionExpression&lt;/code&gt;, variables for the parameters are returned.</source>
          <target state="translated">Si el nodo es una &lt;code&gt;ArrowFunctionExpression&lt;/code&gt; , se devuelven variables para los par&amp;aacute;metros.</target>
        </trans-unit>
        <trans-unit id="9f838ab4ac526271081c23b394b697a09e426e0d" translate="yes" xml:space="preserve">
          <source>If the node is an &lt;code&gt;ImportDeclaration&lt;/code&gt;, variables for all of its specifiers are returned.</source>
          <target state="translated">Si el nodo es una &lt;code&gt;ImportDeclaration&lt;/code&gt; , se devuelven las variables para todos sus especificadores.</target>
        </trans-unit>
        <trans-unit id="e6c21b10c9edae6498937fd2f3d4185500c8f7f7" translate="yes" xml:space="preserve">
          <source>If the node is an &lt;code&gt;ImportSpecifier&lt;/code&gt;, &lt;code&gt;ImportDefaultSpecifier&lt;/code&gt;, or &lt;code&gt;ImportNamespaceSpecifier&lt;/code&gt;, the declared variable is returned.</source>
          <target state="translated">Si el nodo es un &lt;code&gt;ImportSpecifier&lt;/code&gt; , &lt;code&gt;ImportDefaultSpecifier&lt;/code&gt; o &lt;code&gt;ImportNamespaceSpecifier&lt;/code&gt; , se devuelve la variable declarada.</target>
        </trans-unit>
        <trans-unit id="77e6d0663a5dc9ddfb5ba721ad2cac984752b5a7" translate="yes" xml:space="preserve">
          <source>If the object name is omitted, the property is disallowed for all objects:</source>
          <target state="translated">Si se omite el nombre del objeto,la propiedad se anula para todos los objetos:</target>
        </trans-unit>
        <trans-unit id="3d87c6b6c0dd2f2805118449f8bde287740cd978" translate="yes" xml:space="preserve">
          <source>If the operation ends with a parsing error, you will get a single message for this file, with &lt;code&gt;fatal: true&lt;/code&gt; added as an extra property.</source>
          <target state="translated">Si la operaci&amp;oacute;n termina con un error de an&amp;aacute;lisis, obtendr&amp;aacute; un solo mensaje para este archivo, con &lt;code&gt;fatal: true&lt;/code&gt; agregado como una propiedad adicional.</target>
        </trans-unit>
        <trans-unit id="7fe396c3c6bb93306ee96c0f7cebd18cb04f122d" translate="yes" xml:space="preserve">
          <source>If the option is &lt;code&gt;&quot;^(err|error|anySpecificError)$&quot;&lt;/code&gt;, the rule reports unhandled errors where the parameter name can be &lt;code&gt;err&lt;/code&gt;, &lt;code&gt;error&lt;/code&gt; or &lt;code&gt;anySpecificError&lt;/code&gt;.</source>
          <target state="translated">Si la opci&amp;oacute;n es &lt;code&gt;&quot;^(err|error|anySpecificError)$&quot;&lt;/code&gt; , la regla informa errores no manejados donde el nombre del par&amp;aacute;metro puede ser &lt;code&gt;err&lt;/code&gt; , &lt;code&gt;error&lt;/code&gt; o &lt;code&gt;anySpecificError&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="eb07ab30e4a55a6eddf8ef9a05a2f85cf2a6aee9" translate="yes" xml:space="preserve">
          <source>If the option is &lt;code&gt;&quot;^.*(e|E)rr&quot;&lt;/code&gt;, the rule reports unhandled errors where the parameter name matches any string that contains &lt;code&gt;err&lt;/code&gt; or &lt;code&gt;Err&lt;/code&gt; (for example, &lt;code&gt;err&lt;/code&gt;, &lt;code&gt;error&lt;/code&gt;, &lt;code&gt;anyError&lt;/code&gt;, &lt;code&gt;some_err&lt;/code&gt; will match).</source>
          <target state="translated">Si la opci&amp;oacute;n es &lt;code&gt;&quot;^.*(e|E)rr&quot;&lt;/code&gt; , la regla informa errores no manejados donde el nombre del par&amp;aacute;metro coincide con cualquier cadena que contenga &lt;code&gt;err&lt;/code&gt; o &lt;code&gt;Err&lt;/code&gt; (por ejemplo, &lt;code&gt;err&lt;/code&gt; , &lt;code&gt;error&lt;/code&gt; , &lt;code&gt;anyError&lt;/code&gt; , &lt;code&gt;some_err&lt;/code&gt; coincidir&amp;aacute;).</target>
        </trans-unit>
        <trans-unit id="93cc7488fa78f99eb5cf4d9c302285ca9b4f9441" translate="yes" xml:space="preserve">
          <source>If the option is &lt;code&gt;&quot;^.+Error$&quot;&lt;/code&gt;, the rule reports unhandled errors where the parameter name ends with &lt;code&gt;Error&lt;/code&gt; (for example, &lt;code&gt;connectionError&lt;/code&gt; or &lt;code&gt;validationError&lt;/code&gt; will match).</source>
          <target state="translated">Si la opci&amp;oacute;n es &lt;code&gt;&quot;^.+Error$&quot;&lt;/code&gt; , la regla informa errores no manejados donde el nombre del par&amp;aacute;metro termina con &lt;code&gt;Error&lt;/code&gt; (por ejemplo, &lt;code&gt;connectionError&lt;/code&gt; o &lt;code&gt;validationError&lt;/code&gt; coincidir&amp;aacute;n).</target>
        </trans-unit>
        <trans-unit id="0e771886c3456f585fd28d2511e4e816e918a626" translate="yes" xml:space="preserve">
          <source>If the property name is omitted, accessing any property of the given object is disallowed:</source>
          <target state="translated">Si se omite el nombre de la propiedad,no se permite el acceso a ninguna propiedad del objeto dado:</target>
        </trans-unit>
        <trans-unit id="936496d696830abf713f57ff4dffcd113c791136" translate="yes" xml:space="preserve">
          <source>If the rule is defined within a plugin, you have to prefix the rule ID with the plugin name and a &lt;code&gt;/&lt;/code&gt;.</source>
          <target state="translated">Si la regla se define dentro de un complemento, debe anteponer el ID de la regla con el nombre del complemento y una &lt;code&gt;/&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0d16d54aa0743d9f97198f4deb3a1dda76f546b0" translate="yes" xml:space="preserve">
          <source>If the third argument is a string, it is interpreted as the &lt;code&gt;filename&lt;/code&gt;.</source>
          <target state="translated">Si el tercer argumento es una cadena, se interpreta como el &lt;code&gt;filename&lt;/code&gt; del archivo .</target>
        </trans-unit>
        <trans-unit id="0a70cbab282fd2c607dbd174889be8db4131e9e9" translate="yes" xml:space="preserve">
          <source>If the value is a function, it should wrap under the property name and should have a blank line both before and after the function.</source>
          <target state="translated">Si el valor es una función,debe envolverse bajo el nombre de la propiedad y debe tener una línea en blanco tanto antes como después de la función.</target>
        </trans-unit>
        <trans-unit id="b9e58d27ec1d6a8f2b83ea052b21d0675aebbb38" translate="yes" xml:space="preserve">
          <source>If the variable is intended to be local to the script, wrap the code with a block or with an immediately-invoked function expression (IIFE).</source>
          <target state="translated">Si se pretende que la variable sea local al guión,envuelva el código con un bloque o con una expresión de función inmediatamente invocada (IIFE).</target>
        </trans-unit>
        <trans-unit id="73767ddbd81d9dbe02ce6fed5e6251914cb03d71" translate="yes" xml:space="preserve">
          <source>If there are any failing tests, update your code until all tests pass.</source>
          <target state="translated">Si hay alguna prueba que falla,actualiza tu código hasta que todas las pruebas pasen.</target>
        </trans-unit>
        <trans-unit id="4e39a9fb9ba324c2286fd879d0e7ba5569d5dacc" translate="yes" xml:space="preserve">
          <source>If there are declarations of the same name in class members, the last declaration overwrites other declarations silently. It can cause unexpected behaviors.</source>
          <target state="translated">Si hay declaraciones del mismo nombre en los miembros de la clase,la última declaración sobrescribe otras declaraciones en silencio.Puede causar comportamientos inesperados.</target>
        </trans-unit>
        <trans-unit id="0c7f9187cd1de032df79c7af025cf136787d74ca" translate="yes" xml:space="preserve">
          <source>If there are multiple configuration files in the same directory, ESLint will only use one. The priority order is:</source>
          <target state="translated">Si hay varios archivos de configuración en el mismo directorio,ESLint sólo usará uno.El orden de prioridad es:</target>
        </trans-unit>
        <trans-unit id="8647b942abc0b85c8f1bf2d86a64b8b3d027f285" translate="yes" xml:space="preserve">
          <source>If there is an &lt;code&gt;.eslintrc&lt;/code&gt; and a &lt;code&gt;package.json&lt;/code&gt; file found in the same directory, &lt;code&gt;.eslintrc&lt;/code&gt; will take a priority and &lt;code&gt;package.json&lt;/code&gt; file will not be used.</source>
          <target state="translated">Si hay un &lt;code&gt;.eslintrc&lt;/code&gt; y un archivo &lt;code&gt;package.json&lt;/code&gt; en el mismo directorio, &lt;code&gt;.eslintrc&lt;/code&gt; tendr&amp;aacute; prioridad y el archivo &lt;code&gt;package.json&lt;/code&gt; no se utilizar&amp;aacute;.</target>
        </trans-unit>
        <trans-unit id="df824358feaeb45f56e93593d0d239d836cdfe4c" translate="yes" xml:space="preserve">
          <source>If there is not &lt;code&gt;catch&lt;/code&gt; block, &lt;code&gt;finally&lt;/code&gt; block has two current segments. At this time, &lt;code&gt;CodePath.currentSegments.length&lt;/code&gt; is &lt;code&gt;2&lt;/code&gt;. One is the normal path, and another is the leaving path (&lt;code&gt;throw&lt;/code&gt; or &lt;code&gt;return&lt;/code&gt;).</source>
          <target state="translated">Si no hay un bloque de &lt;code&gt;catch&lt;/code&gt; , &lt;code&gt;finally&lt;/code&gt; bloque tiene dos segmentos actuales. En este momento, &lt;code&gt;CodePath.currentSegments.length&lt;/code&gt; es &lt;code&gt;2&lt;/code&gt; . Uno es el camino normal y otro es el camino de salida ( &lt;code&gt;throw&lt;/code&gt; o &lt;code&gt;return&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="1757e08f8b71310c2a4c59f6dc50ed8f567f5460" translate="yes" xml:space="preserve">
          <source>If this rule is invoked with the command-line &lt;code&gt;--fix&lt;/code&gt; option, object literals that violate the rule are generally modified to comply with it. The modification in each case is to move a property specification to the next line whenever there is part or all of a previous property specification on the same line. For example,</source>
          <target state="translated">Si esta regla se invoca con la opci&amp;oacute;n &lt;code&gt;--fix&lt;/code&gt; de la l&amp;iacute;nea de comandos , los objetos literales que violan la regla generalmente se modifican para cumplir con ella. La modificaci&amp;oacute;n en cada caso es mover una especificaci&amp;oacute;n de propiedad a la siguiente l&amp;iacute;nea siempre que haya parte o la totalidad de una especificaci&amp;oacute;n de propiedad anterior en la misma l&amp;iacute;nea. Por ejemplo,</target>
        </trans-unit>
        <trans-unit id="850d3ffd2fa1ce88bcaebffd3ad35b0697ab6bcb" translate="yes" xml:space="preserve">
          <source>If two or more selectors match the same node, their listeners will be called in order of increasing specificity. The specificity of an AST selector is similar to the specificity of a CSS selector:</source>
          <target state="translated">Si dos o más selectores coinciden con el mismo nodo,se llamará a sus oyentes en orden de creciente especificidad.La especificidad de un selector AST es similar a la especificidad de un selector CSS:</target>
        </trans-unit>
        <trans-unit id="99630c41d6f205e5e12d2bda184454445047c226" translate="yes" xml:space="preserve">
          <source>If we ask you to make code changes, there's no need to close the pull request and create a new one. Just go back to the branch on your fork and make your changes. Then, when you're ready, you can add your changes into the branch:</source>
          <target state="translated">Si le pedimos que haga cambios en el código,no hay necesidad de cerrar la solicitud de extracción y crear una nueva.Sólo regresa a la rama de tu tenedor y haz tus cambios.Entonces,cuando estés listo,puedes añadir tus cambios en la rama:</target>
        </trans-unit>
        <trans-unit id="de0e0d7c63f3124bf206c35deec0d0869a1131e5" translate="yes" xml:space="preserve">
          <source>If you already have some text to lint, then you can use the &lt;code&gt;executeOnText()&lt;/code&gt; method to lint that text. The linter will assume that the text is a file in the current working directory, and so will still obey any &lt;code&gt;.eslintrc&lt;/code&gt; and &lt;code&gt;.eslintignore&lt;/code&gt; files that may be present. Here's an example:</source>
          <target state="translated">Si ya tiene algo de texto para lint, entonces puede usar el m&amp;eacute;todo &lt;code&gt;executeOnText()&lt;/code&gt; para lint ese texto. El linter asumir&amp;aacute; que el texto es un archivo en el directorio de trabajo actual, por lo que seguir&amp;aacute; obedeciendo a cualquier &lt;code&gt;.eslintrc&lt;/code&gt; y &lt;code&gt;.eslintignore&lt;/code&gt; que pueda estar presente. He aqu&amp;iacute; un ejemplo:</target>
        </trans-unit>
        <trans-unit id="1fbb74a49f2eaba94e280fd44611bcca515833b5" translate="yes" xml:space="preserve">
          <source>If you are not concerned about unnecessary calls to &lt;code&gt;bind()&lt;/code&gt;, you can safely disable this rule.</source>
          <target state="translated">Si no le preocupan las llamadas innecesarias a &lt;code&gt;bind()&lt;/code&gt; , puede desactivar esta regla de forma segura.</target>
        </trans-unit>
        <trans-unit id="e8ddab54be7073b7379d9641b3883acaaac2a010" translate="yes" xml:space="preserve">
          <source>If you are targeting ECMAScript 2017 and/or older environments, you can disable this rule, because this ECMAScript feature is only supported in ECMAScript 2018 and/or newer environments.</source>
          <target state="translated">Si tiene como objetivo ECMAScript 2017 y/o entornos más antiguos,puede desactivar esta regla,ya que esta característica de ECMAScript sólo se admite en ECMAScript 2018 y/o entornos más nuevos.</target>
        </trans-unit>
        <trans-unit id="5e889a6e2c510adf6f330ae77fbde14de46dd853" translate="yes" xml:space="preserve">
          <source>If you are throwing an error inside of an asynchronous function for this purpose, then you may want to disable this rule.</source>
          <target state="translated">Si está lanzando un error dentro de una función asíncrona para este propósito,entonces puede que quiera deshabilitar esta regla.</target>
        </trans-unit>
        <trans-unit id="0727bfa2099c5dff84bb32defc46aff16b4cd440" translate="yes" xml:space="preserve">
          <source>If you are trying to override one of the native objects.</source>
          <target state="translated">Si está tratando de anular uno de los objetos nativos.</target>
        </trans-unit>
        <trans-unit id="b2612b9f29d0ec472086dc1da9d121df79cb8ca9" translate="yes" xml:space="preserve">
          <source>If you are unable to push because some references are old, do a forced push instead:</source>
          <target state="translated">Si no puedes empujar porque algunas referencias son viejas,haz un empujón forzado en su lugar:</target>
        </trans-unit>
        <trans-unit id="0b370077857ae1599795ffaa3d65cdbadb983377" translate="yes" xml:space="preserve">
          <source>If you are using &lt;code&gt;process.exit()&lt;/code&gt; only for specifying the exit code, you can set &lt;a href=&quot;https://nodejs.org/api/process.html#process_process_exitcode&quot;&gt;&lt;code&gt;process.exitCode&lt;/code&gt;&lt;/a&gt; (introduced in Node.js 0.11.8) instead.</source>
          <target state="translated">Si est&amp;aacute; utilizando &lt;code&gt;process.exit()&lt;/code&gt; solo para especificar el c&amp;oacute;digo de salida, puede establecer &lt;a href=&quot;https://nodejs.org/api/process.html#process_process_exitcode&quot;&gt; &lt;code&gt;process.exitCode&lt;/code&gt; &lt;/a&gt; (introducido en Node.js 0.11.8) en su lugar.</target>
        </trans-unit>
        <trans-unit id="794c9e1eab3bee427778ec5f6492eee54355c471" translate="yes" xml:space="preserve">
          <source>If you are using a custom implementation of &lt;code&gt;require&lt;/code&gt; and your code will never be used in projects where a standard &lt;code&gt;require&lt;/code&gt; (CommonJS, Node.js, AMD) is expected, you can safely turn this rule off.</source>
          <target state="translated">Si est&amp;aacute; utilizando una implementaci&amp;oacute;n personalizada de &lt;code&gt;require&lt;/code&gt; y su c&amp;oacute;digo nunca se usar&amp;aacute; en proyectos donde se espera un &lt;code&gt;require&lt;/code&gt; est&amp;aacute;ndar (CommonJS, Node.js, AMD), puede desactivar esta regla de manera segura.</target>
        </trans-unit>
        <trans-unit id="a095c50390bcd7a4a098485b2044aec9520f886d" translate="yes" xml:space="preserve">
          <source>If you are using an ECMAScript 3 JavaScript engine (such as IE8) and you want to use a keyword (such as &lt;code&gt;if&lt;/code&gt;) as a property name. This restriction was removed in ECMAScript 5.</source>
          <target state="translated">Si est&amp;aacute; utilizando un motor de JavaScript ECMAScript 3 (como IE8) y desea utilizar una palabra clave (como &lt;code&gt;if&lt;/code&gt; ) como nombre de propiedad. Esta restricci&amp;oacute;n se elimin&amp;oacute; en ECMAScript 5.</target>
        </trans-unit>
        <trans-unit id="e79b6d39ed61231d71b33b4d264895e5f11a3a24" translate="yes" xml:space="preserve">
          <source>If you are using one configuration file and want ESLint to ignore any &lt;code&gt;.eslintrc.*&lt;/code&gt; files, make sure to use &lt;code&gt;--no-eslintrc&lt;/code&gt; along with the &lt;code&gt;-c&lt;/code&gt; flag.</source>
          <target state="translated">Si est&amp;aacute; utilizando un archivo de configuraci&amp;oacute;n y desea que ESLint ignore cualquier &lt;code&gt;.eslintrc.*&lt;/code&gt; , Aseg&amp;uacute;rese de usar &lt;code&gt;--no-eslintrc&lt;/code&gt; junto con la marca &lt;code&gt;-c&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dc0228170d5897f66f6c2892c04523f20899b905" translate="yes" xml:space="preserve">
          <source>If you are working with ES6 modules:</source>
          <target state="translated">Si estás trabajando con los módulos ES6:</target>
        </trans-unit>
        <trans-unit id="7fd01c75198649e058b17377a36d78a054ffe274" translate="yes" xml:space="preserve">
          <source>If you aren't concerned about having different line comment styles, then you can turn off this rule.</source>
          <target state="translated">Si no te preocupa tener diferentes estilos de comentarios de línea,puedes desactivar esta regla.</target>
        </trans-unit>
        <trans-unit id="b93d0dcfda167424e32f450a26f03cf14dedb911" translate="yes" xml:space="preserve">
          <source>If you aren't concerned about having different line endings within your code, then you can safely turn this rule off.</source>
          <target state="translated">Si no te preocupa tener diferentes terminaciones de línea dentro de tu código,entonces puedes desactivar esta regla con seguridad.</target>
        </trans-unit>
        <trans-unit id="ca485d61ff911bfd152fcdab49dac4ba14922646" translate="yes" xml:space="preserve">
          <source>If you aren't concerned about misinterpreting floating decimal point values, then you can safely turn this rule off.</source>
          <target state="translated">Si no te preocupa malinterpretar los valores de punto decimal flotante,entonces puedes desactivar esta regla con seguridad.</target>
        </trans-unit>
        <trans-unit id="90285ec365861710d4fa6c81c812503ce64d8cd4" translate="yes" xml:space="preserve">
          <source>If you aren't going to use the default parser of ESLint, this section explains about using custom parsers.</source>
          <target state="translated">Si no vas a usar el analizador predeterminado de ESLint,esta sección explica cómo usar analizadores personalizados.</target>
        </trans-unit>
        <trans-unit id="f36c167b80c0da8a28ee63a69b56b94547879c0c" translate="yes" xml:space="preserve">
          <source>If you aren't using JSDoc, then you can safely turn this rule off.</source>
          <target state="translated">Si no estás usando el JSDoc,entonces puedes desactivar esta regla de forma segura.</target>
        </trans-unit>
        <trans-unit id="6f3b62d423b673891d6d79bb7f1574b983499ef7" translate="yes" xml:space="preserve">
          <source>If you can't determine an appropriate complexity limit for your code, then it's best to disable this rule.</source>
          <target state="translated">Si no puede determinar un límite de complejidad apropiado para su código,entonces es mejor deshabilitar esta regla.</target>
        </trans-unit>
        <trans-unit id="48d343ff8f2275b0ea325fc0a64c31bd1fb7cd98" translate="yes" xml:space="preserve">
          <source>If you configure ESLint to automatically enable new rules when you upgrade, ESLint can report new problems when there are no changes to source code, therefore any newer minor version of ESLint can behave as if it has breaking changes.</source>
          <target state="translated">Si se configura ESLint para habilitar automáticamente las nuevas reglas cuando se actualiza,ESLint puede reportar nuevos problemas cuando no hay cambios en el código fuente,por lo tanto cualquier nueva versión menor de ESLint puede comportarse como si tuviera cambios de última hora.</target>
        </trans-unit>
        <trans-unit id="404fcfa2ef5c1f362f2be3f12cef0103e708a9b8" translate="yes" xml:space="preserve">
          <source>If you decide that you wish to use whitespace other than tabs and spaces outside of strings in your application.</source>
          <target state="translated">Si decide que desea utilizar espacios en blanco que no sean pestañas y espacios fuera de las cadenas en su aplicación.</target>
        </trans-unit>
        <trans-unit id="e2f36f9a48b18ab417c90448e3760f46ecb246c5" translate="yes" xml:space="preserve">
          <source>If you depend on fall through behavior and want access to bindings introduced in the case block.</source>
          <target state="translated">Si dependes del comportamiento de caída y quieres acceder a las fijaciones introducidas en el bloque del caso.</target>
        </trans-unit>
        <trans-unit id="7a38e6f565ac0f063fab2adb4a1dcf52e65781dc" translate="yes" xml:space="preserve">
          <source>If you do not care about extra blank lines, turn this off.</source>
          <target state="translated">Si no te importan las líneas en blanco adicionales,apaga esto.</target>
        </trans-unit>
        <trans-unit id="7bfcf2e27f8485a989b5dfd1cc941c1c7279f4bf" translate="yes" xml:space="preserve">
          <source>If you do not need consistency in your string styles, you can safely disable this rule.</source>
          <target state="translated">Si no necesitas consistencia en tus estilos de cuerdas,puedes desactivar esta regla con seguridad.</target>
        </trans-unit>
        <trans-unit id="392f8a1f4fba093842c4607835e8cfd25a31c650" translate="yes" xml:space="preserve">
          <source>If you do not need to support IE 8 and earlier, you should turn this rule off.</source>
          <target state="translated">Si no necesitas soportar el IE 8 y anteriores,deberías desactivar esta regla.</target>
        </trans-unit>
        <trans-unit id="9d547b86ad688b98a0c6659d848158e9b5dabb04" translate="yes" xml:space="preserve">
          <source>If you do not require JSDoc for your functions, then you can leave this rule off.</source>
          <target state="translated">Si no necesitas JSDoc para tus funciones,entonces puedes dejar esta regla fuera.</target>
        </trans-unit>
        <trans-unit id="c9d550da8d530ae5bf38a38f34d4a343d1cbae42" translate="yes" xml:space="preserve">
          <source>If you do not want ignored file warnings output to the console, you can omit the third argument or pass &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">Si no desea que se generen advertencias de archivo ignoradas en la consola, puede omitir el tercer argumento o pasar &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2628614f8cc596f13fac5b621f18df2aeb5bc2ff" translate="yes" xml:space="preserve">
          <source>If you do not want to enforce semicolon usage (or omission) in any particular way, then you can turn this rule off.</source>
          <target state="translated">Si no quieres hacer cumplir el uso del punto y coma (o la omisión)de ninguna manera en particular,entonces puedes desactivar esta regla.</target>
        </trans-unit>
        <trans-unit id="1e0473345a5bb57f1c01e60cdf29fe464c00a72c" translate="yes" xml:space="preserve">
          <source>If you do not wish to enforce consistency on keyword spacing.</source>
          <target state="translated">Si no desea imponer coherencia en el espaciado de las palabras clave.</target>
        </trans-unit>
        <trans-unit id="ec438abebebab23efa3997bca0496ca41fc86dd6" translate="yes" xml:space="preserve">
          <source>If you don't care about disallowing redundant return statements, you can turn off this rule.</source>
          <target state="translated">Si no te importa rechazar las declaraciones de retorno redundantes,puedes desactivar esta regla.</target>
        </trans-unit>
        <trans-unit id="377445f5eeba500665b9afe31fabf0a6ca7e60ea" translate="yes" xml:space="preserve">
          <source>If you don't care if property names are consistently wrapped in quotes or not, and you don't target legacy ES3 environments, turn this rule off.</source>
          <target state="translated">Si no te importa que los nombres de las propiedades estén siempre entre comillas o no,y no te diriges a los entornos ES3 heredados,apaga esta regla.</target>
        </trans-unit>
        <trans-unit id="fbb1b5f010231afcab8c832ef9f8d843a9047947" translate="yes" xml:space="preserve">
          <source>If you don't have any object/property combinations to restrict, you should not use this rule.</source>
          <target state="translated">Si no tiene ninguna combinación de objeto/propiedad que restringir,no debe usar esta regla.</target>
        </trans-unit>
        <trans-unit id="c5f3d9d25eecc50921d17e2d250b565540102e1d" translate="yes" xml:space="preserve">
          <source>If you don't use Node.js, or you still need to support versions of Node.js that lack methods like &lt;code&gt;Buffer.from&lt;/code&gt;, then you should not enable this rule.</source>
          <target state="translated">Si no usa Node.js, o a&amp;uacute;n necesita admitir versiones de Node.js que carecen de m&amp;eacute;todos como &lt;code&gt;Buffer.from&lt;/code&gt; , entonces no debe habilitar esta regla.</target>
        </trans-unit>
        <trans-unit id="28fe184ed022eb7ed86a6fdb953113737c1230b4" translate="yes" xml:space="preserve">
          <source>If you don't use async or generator functions, you don't need to enable this rule.</source>
          <target state="translated">Si no usas las funciones de asíncrono o generador,no necesitas habilitar esta regla.</target>
        </trans-unit>
        <trans-unit id="8e8976ae986f3df4acec0327270b71cfedc18f22" translate="yes" xml:space="preserve">
          <source>If you don't want to be notified about empty functions, then it's safe to disable this rule.</source>
          <target state="translated">Si no quieres que te notifiquen las funciones vacías,entonces es seguro desactivar esta regla.</target>
        </trans-unit>
        <trans-unit id="035b02b7f62b6cf56e490c776d78cfc18884a2f6" translate="yes" xml:space="preserve">
          <source>If you don't want to be notified about invalid/missing &lt;code&gt;super()&lt;/code&gt; callings in constructors, you can safely disable this rule.</source>
          <target state="translated">Si no desea que se le notifique sobre llamadas &lt;code&gt;super()&lt;/code&gt; inv&amp;aacute;lidas / faltantes en los constructores, puede deshabilitar esta regla de manera segura.</target>
        </trans-unit>
        <trans-unit id="3cdcf809d4b2ba636118edcb3c72c778c76b8ef9" translate="yes" xml:space="preserve">
          <source>If you don't want to be notified about mixed operators, then it's safe to disable this rule.</source>
          <target state="translated">Si no quiere que se le notifique sobre los operadores mixtos,entonces es seguro desactivar esta regla.</target>
        </trans-unit>
        <trans-unit id="b34060b6575a25206fbe68c5a7727598b25882e3" translate="yes" xml:space="preserve">
          <source>If you don't want to be notified about modifying imported bindings, you can disable this rule.</source>
          <target state="translated">Si no desea que se le notifique la modificación de las encuadernaciones importadas,puede desactivar esta regla.</target>
        </trans-unit>
        <trans-unit id="05cd0829efd0f529155675a47415f71b807b23e6" translate="yes" xml:space="preserve">
          <source>If you don't want to be notified about modifying variables of class declarations, you can safely disable this rule.</source>
          <target state="translated">Si no quiere que se le notifique sobre la modificación de las variables de las declaraciones de clase,puede desactivar esta regla de forma segura.</target>
        </trans-unit>
        <trans-unit id="b676a87bc4231e95cfd51afd88cbeab37557db5d" translate="yes" xml:space="preserve">
          <source>If you don't want to be notified about modifying variables that are declared using &lt;code&gt;const&lt;/code&gt; keyword, you can safely disable this rule.</source>
          <target state="translated">Si no desea que se le notifique sobre la modificaci&amp;oacute;n de variables declaradas mediante la palabra clave &lt;code&gt;const&lt;/code&gt; , puede desactivar esta regla de forma segura.</target>
        </trans-unit>
        <trans-unit id="57556711aa41b9d323be8427c2ecdd4bff4b57ef" translate="yes" xml:space="preserve">
          <source>If you don't want to be notified about shorter notations for the type conversion, you can safely disable this rule.</source>
          <target state="translated">Si no desea que se le notifique acerca de las anotaciones más cortas para la conversión de tipos,puede desactivar esta regla de forma segura.</target>
        </trans-unit>
        <trans-unit id="4d0dc600bd88206c2efee7216202f42acce935e8" translate="yes" xml:space="preserve">
          <source>If you don't want to be notified about spacing style inside of blocks, you can safely disable this rule.</source>
          <target state="translated">Si no quieres ser notificado sobre el estilo de espaciado dentro de los bloques,puedes desactivar esta regla de forma segura.</target>
        </trans-unit>
        <trans-unit id="08b5bb845c2f283fd9522751ebbc0160e430a28d" translate="yes" xml:space="preserve">
          <source>If you don't want to be notified about unnecessary &lt;code&gt;.call()&lt;/code&gt; and &lt;code&gt;.apply()&lt;/code&gt;, you can safely disable this rule.</source>
          <target state="translated">Si no desea que se le notifique sobre &lt;code&gt;.call()&lt;/code&gt; y &lt;code&gt;.apply()&lt;/code&gt; innecesarios , puede desactivar esta regla de forma segura.</target>
        </trans-unit>
        <trans-unit id="ac9f79445e9a598b886c416fdf23687b7ac40682" translate="yes" xml:space="preserve">
          <source>If you don't want to be notified about unnecessary catch clauses, you can safely disable this rule.</source>
          <target state="translated">Si no quiere que se le notifique sobre cláusulas de captura innecesarias,puede desactivar esta regla de forma segura.</target>
        </trans-unit>
        <trans-unit id="d1af85e373e8151e1abe933aa39f83e1d3e16b9c" translate="yes" xml:space="preserve">
          <source>If you don't want to be notified about unnecessary computed property keys, you can safely disable this rule.</source>
          <target state="translated">Si no quiere que se le notifique sobre llaves de propiedad computarizadas innecesarias,puede desactivar esta regla con seguridad.</target>
        </trans-unit>
        <trans-unit id="e855a5d5cb2ae2ff25109bb9e22035ab28a628e6" translate="yes" xml:space="preserve">
          <source>If you don't want to be notified about unnecessary constructors, you can safely disable this rule.</source>
          <target state="translated">Si no quiere que se le notifique sobre constructores innecesarios,puede desactivar esta regla de forma segura.</target>
        </trans-unit>
        <trans-unit id="938ce66a3470c3b9f0b562fcf30a08bd7f6898be" translate="yes" xml:space="preserve">
          <source>If you don't want to be notified about unnecessary escapes, you can safely disable this rule.</source>
          <target state="translated">Si no quiere que se le notifique sobre escapes innecesarios,puede desactivar esta regla de forma segura.</target>
        </trans-unit>
        <trans-unit id="1b06ab9aed5b29d9c1a958df26fdcb70958c47f8" translate="yes" xml:space="preserve">
          <source>If you don't want to be notified about unnecessary string concatenation, you can safely disable this rule.</source>
          <target state="translated">Si no quiere que se le notifique sobre la concatenación innecesaria de cadenas,puede desactivar esta regla de forma segura.</target>
        </trans-unit>
        <trans-unit id="6d677c6d2346e3a005d4cdd590600c4532148540" translate="yes" xml:space="preserve">
          <source>If you don't want to be notified about unused labels, then it's safe to disable this rule.</source>
          <target state="translated">Si no quiere que se le notifique sobre las etiquetas no utilizadas,entonces es seguro desactivar esta regla.</target>
        </trans-unit>
        <trans-unit id="05e4276980e348df485708112eedf0b691b13051" translate="yes" xml:space="preserve">
          <source>If you don't want to be notified about unused variables or function arguments, you can safely turn this rule off.</source>
          <target state="translated">Si no quieres que te notifiquen las variables no utilizadas o los argumentos de las funciones,puedes desactivar esta regla de forma segura.</target>
        </trans-unit>
        <trans-unit id="58889c4cfc98cc39318dd6b4c202708b2134c213" translate="yes" xml:space="preserve">
          <source>If you don't want to be notified about usage of &lt;code&gt;this&lt;/code&gt; keyword outside of classes or class-like objects, you can safely disable this rule.</source>
          <target state="translated">Si no desea que se le notifique sobre el uso de &lt;code&gt;this&lt;/code&gt; palabra clave fuera de clases u objetos de tipo clase, puede deshabilitar esta regla de manera segura.</target>
        </trans-unit>
        <trans-unit id="34f8ec01867de0ac8cf9a52dab4bc974350b262a" translate="yes" xml:space="preserve">
          <source>If you don't want to be notified about usage of labels, then it's safe to disable this rule.</source>
          <target state="translated">Si no quieres ser notificado sobre el uso de las etiquetas,entonces es seguro desactivar esta regla.</target>
        </trans-unit>
        <trans-unit id="c3c8da72d7ad33b084fed89dc9957cbb66fc2e56" translate="yes" xml:space="preserve">
          <source>If you don't want to be notified about usage of spacing between tag functions and their template literals, then it's safe to disable this rule.</source>
          <target state="translated">Si no quieres ser notificado sobre el uso del espacio entre las funciones de la etiqueta y sus literales de la plantilla,entonces es seguro desactivar esta regla.</target>
        </trans-unit>
        <trans-unit id="69856ad30b7df75041b8701dce21332166566dbf" translate="yes" xml:space="preserve">
          <source>If you don't want to be notified about usage of spacing inside of template strings, then it's safe to disable this rule.</source>
          <target state="translated">Si no quieres ser notificado sobre el uso del espacio dentro de las cadenas de la plantilla,entonces es seguro desactivar esta regla.</target>
        </trans-unit>
        <trans-unit id="3a49a93c91c935fd9301abeba634853b470cfac9" translate="yes" xml:space="preserve">
          <source>If you don't want to be notified about using &lt;code&gt;this&lt;/code&gt;/&lt;code&gt;super&lt;/code&gt; before &lt;code&gt;super()&lt;/code&gt; in constructors, you can safely disable this rule.</source>
          <target state="translated">Si no desea que se le notifique sobre el uso de &lt;code&gt;this&lt;/code&gt; / &lt;code&gt;super&lt;/code&gt; antes de &lt;code&gt;super()&lt;/code&gt; en los constructores, puede desactivar esta regla de forma segura.</target>
        </trans-unit>
        <trans-unit id="90eb0f399adda799268d0bf35448574d276ef357" translate="yes" xml:space="preserve">
          <source>If you don't want to be notified about variables that are never reassigned after initial assignment, you can safely disable this rule.</source>
          <target state="translated">Si no quiere que se le notifiquen las variables que nunca se reasignan después de la asignación inicial,puede desactivar esta regla de forma segura.</target>
        </trans-unit>
        <trans-unit id="93ee117c17516d2c719e0db6ab55eccac5d6aa9c" translate="yes" xml:space="preserve">
          <source>If you don't want to check and disallow multiple spaces, then you should turn this rule off.</source>
          <target state="translated">Si no quieres comprobar y desautorizar múltiples espacios,entonces deberías desactivar esta regla.</target>
        </trans-unit>
        <trans-unit id="0d0224d3ec9408d92b6667d3c8ffeab802c5eee2" translate="yes" xml:space="preserve">
          <source>If you don't want to convert your JSCS configuration directly into an ESLint configuration, then you can use ESLint's built-in wizard to get you started. Just run:</source>
          <target state="translated">Si no quieres convertir tu configuración de JSCS directamente en una configuración de ESLint,entonces puedes usar el asistente incorporado de ESLint para empezar.Sólo tienes que ejecutarlo:</target>
        </trans-unit>
        <trans-unit id="dd03ca6e3947a66ea53baf8ac86171507a2394fc" translate="yes" xml:space="preserve">
          <source>If you don't want to enforce a &lt;code&gt;default&lt;/code&gt; case for &lt;code&gt;switch&lt;/code&gt; statements, you can safely disable this rule.</source>
          <target state="translated">Si no desea aplicar un caso &lt;code&gt;default&lt;/code&gt; para las declaraciones de &lt;code&gt;switch&lt;/code&gt; , puede deshabilitar esta regla de manera segura.</target>
        </trans-unit>
        <trans-unit id="aababb9275bb8cf111ca9e21208a1cb5e64bd8e0" translate="yes" xml:space="preserve">
          <source>If you don't want to enforce a particular brace style, don't enable this rule.</source>
          <target state="translated">Si no quieres hacer cumplir un estilo de ortodoncia en particular,no habilites esta regla.</target>
        </trans-unit>
        <trans-unit id="4f9124dfb72433852245c700fe867a59eddb7e22" translate="yes" xml:space="preserve">
          <source>If you don't want to enforce a particular style for multiline comments, you can disable the rule.</source>
          <target state="translated">Si no quieres imponer un estilo particular para los comentarios multilínea,puedes desactivar la regla.</target>
        </trans-unit>
        <trans-unit id="eb3d2c7d722dea39207f449727021bfd08dd6671" translate="yes" xml:space="preserve">
          <source>If you don't want to enforce a style for using equality operators, then it's safe to disable this rule.</source>
          <target state="translated">Si no quieres imponer un estilo para usar los operadores de igualdad,entonces es seguro desactivar esta regla.</target>
        </trans-unit>
        <trans-unit id="881783518287437ee5c4be83087dc074c16404b7" translate="yes" xml:space="preserve">
          <source>If you don't want to enforce any particular naming convention for all identifiers, or your naming convention is too complex to be enforced by configuring this rule, then you should not enable this rule.</source>
          <target state="translated">Si no quiere hacer cumplir ninguna convención de nombres en particular para todos los identificadores,o su convención de nombres es demasiado compleja para hacerla cumplir configurando esta regla,entonces no debe habilitar esta regla.</target>
        </trans-unit>
        <trans-unit id="03c547bbe71dd30e4b389d995a733cefd95fe62d" translate="yes" xml:space="preserve">
          <source>If you don't want to enforce consistency on keyword spacing, then it's safe to disable this rule.</source>
          <target state="translated">Si no quieres hacer que haya coherencia en el espaciado de las palabras clave,entonces es seguro desactivar esta regla.</target>
        </trans-unit>
        <trans-unit id="ba05107ad0aa4784160535c5a83cf1838bb66020" translate="yes" xml:space="preserve">
          <source>If you don't want to enforce consistent line breaks inside braces, then it's safe to disable this rule.</source>
          <target state="translated">Si no quieres hacer cumplir las roturas de línea consistentes dentro de las abrazaderas,entonces es seguro deshabilitar esta regla.</target>
        </trans-unit>
        <trans-unit id="fab6d15b9e92cdd55e80d0de68464eedc16c6a43" translate="yes" xml:space="preserve">
          <source>If you don't want to enforce either presence or omission of the &lt;code&gt;10&lt;/code&gt; radix value you can turn this rule off.</source>
          <target state="translated">Si no desea imponer la presencia u omisi&amp;oacute;n del valor de &lt;code&gt;10&lt;/code&gt; radix, puede desactivar esta regla.</target>
        </trans-unit>
        <trans-unit id="e804e65f30ad2295d3ca3750dd67b83793cbfc1a" translate="yes" xml:space="preserve">
          <source>If you don't want to enforce empty lines between class members, you can disable this rule.</source>
          <target state="translated">Si no quiere hacer cumplir las líneas vacías entre los miembros de la clase,puede desactivar esta regla.</target>
        </trans-unit>
        <trans-unit id="89d6cebc65b3f88d81c83eeb9c12b94536bc421c" translate="yes" xml:space="preserve">
          <source>If you don't want to enforce line breaks after opening and before closing array brackets, don't enable this rule.</source>
          <target state="translated">Si no quieres imponer cortes de línea después de abrir y antes de cerrar los soportes de la matriz,no habilites esta regla.</target>
        </trans-unit>
        <trans-unit id="28fb13c709b5f77912ad0d548d670040e0b12839" translate="yes" xml:space="preserve">
          <source>If you don't want to enforce line breaks between arguments, don't enable this rule.</source>
          <target state="translated">Si no quiere imponer saltos de línea entre los argumentos,no habilite esta regla.</target>
        </trans-unit>
        <trans-unit id="4533fe95406ecc1ea725791c70efca418fe966b8" translate="yes" xml:space="preserve">
          <source>If you don't want to enforce linebreaks between array elements, don't enable this rule.</source>
          <target state="translated">Si no quieres reforzar los saltos de línea entre los elementos de la matriz,no habilites esta regla.</target>
        </trans-unit>
        <trans-unit id="bd6ed68cf488b02540f00ff06a41e1354a2bf35b" translate="yes" xml:space="preserve">
          <source>If you don't want to enforce that each &lt;code&gt;case&lt;/code&gt; statement should end with a &lt;code&gt;throw&lt;/code&gt;, &lt;code&gt;return&lt;/code&gt;, &lt;code&gt;break&lt;/code&gt;, or comment, then you can safely turn this rule off.</source>
          <target state="translated">Si no desea exigir que cada declaraci&amp;oacute;n de &lt;code&gt;case&lt;/code&gt; deba terminar con un &lt;code&gt;throw&lt;/code&gt; , &lt;code&gt;return&lt;/code&gt; , &lt;code&gt;break&lt;/code&gt; o comentario, puede desactivar esta regla con seguridad.</target>
        </trans-unit>
        <trans-unit id="4c4ada68371f02ae755b6c46bc3ff8872f96d881" translate="yes" xml:space="preserve">
          <source>If you don't want to notified about references inside of loop conditions, then it's safe to disable this rule.</source>
          <target state="translated">Si no quiere que se le notifiquen las referencias dentro de las condiciones del bucle,entonces es seguro desactivar esta regla.</target>
        </trans-unit>
        <trans-unit id="55804cfbbeb711790995c168e8efbacb6de0c91a" translate="yes" xml:space="preserve">
          <source>If you don't want to notify about properties' order, then it's safe to disable this rule.</source>
          <target state="translated">Si no quieres notificar sobre el orden de las propiedades,entonces es seguro desactivar esta regla.</target>
        </trans-unit>
        <trans-unit id="0c9a9ac4de306fc8ecda601da045432c3691af97" translate="yes" xml:space="preserve">
          <source>If you don't want to notify about self assignments, then it's safe to disable this rule.</source>
          <target state="translated">Si no quieres notificar sobre las auto-asignaciones,entonces es seguro desactivar esta regla.</target>
        </trans-unit>
        <trans-unit id="44d06f76b9a9450bdb8b56c5dfe1046944fc23a9" translate="yes" xml:space="preserve">
          <source>If you don't want to notify generator functions that have no &lt;code&gt;yield&lt;/code&gt; expression, then it's safe to disable this rule.</source>
          <target state="translated">Si no desea notificar las funciones del generador que no tienen expresi&amp;oacute;n de &lt;code&gt;yield&lt;/code&gt; , entonces es seguro deshabilitar esta regla.</target>
        </trans-unit>
        <trans-unit id="7cbf12fa597c277297c8058f6568bf93b2611aa3" translate="yes" xml:space="preserve">
          <source>If you don't want to notify regular expressions with no &lt;code&gt;u&lt;/code&gt; flag, then it's safe to disable this rule.</source>
          <target state="translated">Si no desea notificar expresiones regulares sin bandera &lt;code&gt;u&lt;/code&gt; , entonces es seguro deshabilitar esta regla.</target>
        </trans-unit>
        <trans-unit id="debec24cd2ab68499573ae20752142917a1aaa28" translate="yes" xml:space="preserve">
          <source>If you don't want to notify spacing around colons of switch statements, then it's safe to disable this rule.</source>
          <target state="translated">Si no quieres notificar al espacio alrededor de los dos puntos de las declaraciones de cambio,entonces es seguro desactivar esta regla.</target>
        </trans-unit>
        <trans-unit id="48c5ed2023dc8f69088270df9de52f3c95dffc50" translate="yes" xml:space="preserve">
          <source>If you don't want to notify the location of semicolons, then it's safe to disable this rule.</source>
          <target state="translated">Si no quieres notificar la ubicación de los punto y coma,entonces es seguro desactivar esta regla.</target>
        </trans-unit>
        <trans-unit id="b1086b581d410ccfff2d69ce1d4a0f1ce3883ef4" translate="yes" xml:space="preserve">
          <source>If you don't want to notify unsafe logical negations, then it's safe to disable this rule.</source>
          <target state="translated">Si no quieres notificar las negaciones lógicas inseguras,entonces es seguro desactivar esta regla.</target>
        </trans-unit>
        <trans-unit id="092de94e02976f91598695c0b62fe884df6462d5" translate="yes" xml:space="preserve">
          <source>If you don't want to notify warnings about linebreaks, then it's safe to disable this rule.</source>
          <target state="translated">Si no quieres notificar las advertencias sobre roturas de línea,entonces es seguro desactivar esta regla.</target>
        </trans-unit>
        <trans-unit id="f7d7ceec15dd410c793e8ea6857bb2384373256d" translate="yes" xml:space="preserve">
          <source>If you don't want to restrict your code from using any JavaScript features or syntax, you should not use this rule.</source>
          <target state="translated">Si no quieres restringir tu código para que no utilice ninguna característica o sintaxis de JavaScript,no debes usar esta regla.</target>
        </trans-unit>
        <trans-unit id="727de670c07aa6ddaad290b7f9c4933857178381" translate="yes" xml:space="preserve">
          <source>If you don't want to warn about usage of &lt;code&gt;return&lt;/code&gt; statement in callbacks of array's methods, then it's safe to disable this rule.</source>
          <target state="translated">Si no desea advertir sobre el uso de la declaraci&amp;oacute;n de &lt;code&gt;return&lt;/code&gt; en las devoluciones de llamada de los m&amp;eacute;todos de la matriz, entonces es seguro deshabilitar esta regla.</target>
        </trans-unit>
        <trans-unit id="cd5b557f539ab445a2f764b39d2f629358eb8508" translate="yes" xml:space="preserve">
          <source>If you find the custom formatter pattern doesn't provide enough options for the way you'd like to format ESLint results, the best option is to use ESLint's built-in &lt;a href=&quot;../user-guide/formatters/index&quot;&gt;JSON formatter&lt;/a&gt; and pipe the output to a second program. For example:</source>
          <target state="translated">Si encuentra que el patr&amp;oacute;n de formateador personalizado no proporciona suficientes opciones para la forma en que le gustar&amp;iacute;a formatear los resultados de ESLint, la mejor opci&amp;oacute;n es usar el &lt;a href=&quot;../user-guide/formatters/index&quot;&gt;formateador JSON&lt;/a&gt; incorporado de ESLint y canalizar la salida a un segundo programa. Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="118095cb4d7d2586daf3a9c4aeedb6269df5ca60" translate="yes" xml:space="preserve">
          <source>If you find you can't finish the work, then simply add a comment letting people know, for example:</source>
          <target state="translated">Si no puedes terminar el trabajo,simplemente añade un comentario para que la gente lo sepa,por ejemplo:</target>
        </trans-unit>
        <trans-unit id="e102d884d27cd6a22fd9e584af0049437ee110e4" translate="yes" xml:space="preserve">
          <source>If you have a custom rule, you should make sure it handles empty files appropriately. (In most cases, no changes should be necessary.)</source>
          <target state="translated">Si tiene una regla personalizada,debe asegurarse de que maneje adecuadamente los archivos vacíos.(En la mayoría de los casos,no debería ser necesario hacer cambios).</target>
        </trans-unit>
        <trans-unit id="b921db934ffd761c043389137ead53e58a1b0bf5" translate="yes" xml:space="preserve">
          <source>If you have a large code base that was not developed with a policy to not use such warning terms, you might get hundreds of warnings / errors which might be counter-productive if you can't fix all of them (e.g. if you don't get the time to do it) as you might overlook other warnings / errors or get used to many of them and don't pay attention on it anymore.</source>
          <target state="translated">Si tienes una gran base de código que no ha sido desarrollada con una política de no usar tales términos de advertencia,podrías recibir cientos de advertencias/errores que podrían ser contraproducentes si no puedes corregirlos todos (por ejemplo,si no tienes tiempo para hacerlo)ya que podrías pasar por alto otras advertencias/errores o acostumbrarte a muchos de ellos y no prestar más atención.</target>
        </trans-unit>
        <trans-unit id="73368d2dd1104f63622c3ee28dbef44e3e0176d9" translate="yes" xml:space="preserve">
          <source>If you have a module that must be initialized with information that comes from the file-system or if a module is only used in very rare situations and will cause significant overhead to load it may make sense to disable the rule. If you need to &lt;code&gt;require()&lt;/code&gt; an optional dependency inside of a &lt;code&gt;try&lt;/code&gt;/&lt;code&gt;catch&lt;/code&gt;, you can disable this rule for just that dependency using the &lt;code&gt;// eslint-disable-line global-require&lt;/code&gt; comment.</source>
          <target state="translated">Si tiene un m&amp;oacute;dulo que debe inicializarse con informaci&amp;oacute;n que proviene del sistema de archivos o si un m&amp;oacute;dulo solo se usa en situaciones muy raras y causar&amp;aacute; una sobrecarga significativa para cargar, puede tener sentido deshabilitar la regla. Si necesita &lt;code&gt;require()&lt;/code&gt; una dependencia opcional dentro de un &lt;code&gt;try&lt;/code&gt; / &lt;code&gt;catch&lt;/code&gt; , puede deshabilitar esta regla solo para esa dependencia usando el &lt;code&gt;// eslint-disable-line global-require&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="78b63fe9c75180f7eae12563749a18484f524c7f" translate="yes" xml:space="preserve">
          <source>If you have a plugin with rules and you are using RuleTester, then you also need to update the options you pass for rules that use &lt;code&gt;ecmaFeatures&lt;/code&gt;. For example:</source>
          <target state="translated">Si tiene un complemento con reglas y est&amp;aacute; usando RuleTester, entonces tambi&amp;eacute;n necesita actualizar las opciones que pasa para las reglas que usan &lt;code&gt;ecmaFeatures&lt;/code&gt; . Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="1adc550e08a101ef27b397d37ebb50513d8babdd" translate="yes" xml:space="preserve">
          <source>If you have another convention for property spacing that might not be consistent with the available options, or if you want to permit multiple styles concurrently you can safely disable this rule.</source>
          <target state="translated">Si tiene otra convención para el espaciamiento de propiedades que podría no ser consistente con las opciones disponibles,o si quiere permitir múltiples estilos simultáneamente puede desactivar esta regla con seguridad.</target>
        </trans-unit>
        <trans-unit id="a15b4bf698befd94c9c28f3b561bee7f0f9d2d1a" translate="yes" xml:space="preserve">
          <source>If you have conflicting rules or when you are fine with chained calls on one line, you can safely turn this rule off.</source>
          <target state="translated">Si tienes reglas contradictorias o cuando estás bien con llamadas encadenadas en una línea,puedes desactivar esta regla con seguridad.</target>
        </trans-unit>
        <trans-unit id="9bf354fdcd95932555803b6fe121c6b5650ca543" translate="yes" xml:space="preserve">
          <source>If you have conventions that don't require an uppercase letter for constructors, or don't require capitalized functions be only used as constructors, turn this rule off.</source>
          <target state="translated">Si tienes convenciones que no requieren una letra mayúscula para los constructores,o no requieren que las funciones en mayúscula se usen sólo como constructores,desactiva esta regla.</target>
        </trans-unit>
        <trans-unit id="439a3304ad5df05ab1c795bee9cad7c9396aac67" translate="yes" xml:space="preserve">
          <source>If you have established a standard where having tabs is fine, then you can disable this rule.</source>
          <target state="translated">Si ha establecido un estándar en el que tener pestañas está bien,entonces puede desactivar esta regla.</target>
        </trans-unit>
        <trans-unit id="188988ea697a9b957d25b534719239d8a1857409" translate="yes" xml:space="preserve">
          <source>If you have established coding standards using a different naming convention (separating words with underscores), turn this rule off.</source>
          <target state="translated">Si ha establecido normas de codificación utilizando una convención de nomenclatura diferente (separando las palabras con guiones bajos),desactive esta regla.</target>
        </trans-unit>
        <trans-unit id="526f59648be01853bcfaff830a60f08fcb2ba9a0" translate="yes" xml:space="preserve">
          <source>If you have multiple &lt;code&gt;.jscsrc.json&lt;/code&gt; files, you can pass them all and Polyjuice will combine them into one &lt;code&gt;.eslintrc.json&lt;/code&gt; file:</source>
          <target state="translated">Si tiene varios archivos &lt;code&gt;.jscsrc.json&lt;/code&gt; , puede pasarlos todos y Polyjuice los combinar&amp;aacute; en un archivo &lt;code&gt;.eslintrc.json&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="ac994ca847831c1c302f8b42ca3c3efee45e3720" translate="yes" xml:space="preserve">
          <source>If you have no strict conventions about when to use block statements and when not to, you can safely disable this rule.</source>
          <target state="translated">Si no tiene convenciones estrictas sobre cuándo usar declaraciones de bloqueo y cuándo no,puede desactivar esta regla con seguridad.</target>
        </trans-unit>
        <trans-unit id="70f93035ea1b2e22270015dfd6ae4ecd60d85f61" translate="yes" xml:space="preserve">
          <source>If you intend to create a global &lt;code&gt;const&lt;/code&gt; or &lt;code&gt;let&lt;/code&gt; variable or a global &lt;code&gt;class&lt;/code&gt; declaration, to be used from other scripts, be aware that there are certain differences when compared to the traditional methods, which are &lt;code&gt;var&lt;/code&gt; declarations and assigning to a property of the global &lt;code&gt;window&lt;/code&gt; object:</source>
          <target state="translated">Si tiene la intenci&amp;oacute;n de crear una &lt;code&gt;const&lt;/code&gt; global o &lt;code&gt;let&lt;/code&gt; variable o una declaraci&amp;oacute;n de &lt;code&gt;class&lt;/code&gt; global , para ser utilizada desde otros scripts, tenga en cuenta que existen ciertas diferencias en comparaci&amp;oacute;n con los m&amp;eacute;todos tradicionales, que son declaraciones &lt;code&gt;var&lt;/code&gt; y asignaci&amp;oacute;n a una propiedad del global objeto de &lt;code&gt;window&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="cc1252817e8c5df5df09e177c1f59eb843a08370" translate="yes" xml:space="preserve">
          <source>If you intentionally use &lt;code&gt;with&lt;/code&gt; statements then you can disable this rule.</source>
          <target state="translated">Si usa intencionalmente &lt;code&gt;with&lt;/code&gt; declaraciones, puede deshabilitar esta regla.</target>
        </trans-unit>
        <trans-unit id="a5a54e590a75faa65b0ed8e0ad0659925f1afaec" translate="yes" xml:space="preserve">
          <source>If you intentionally use empty block statements then you can disable this rule.</source>
          <target state="translated">Si utiliza intencionadamente declaraciones de bloque vacío,puede desactivar esta regla.</target>
        </trans-unit>
        <trans-unit id="d3b9a44ddb5f057d0633a491bcff3b454a13ca25" translate="yes" xml:space="preserve">
          <source>If you intentionally use extra semicolons then you can disable this rule.</source>
          <target state="translated">Si intencionadamente usas punto y coma extra,entonces puedes deshabilitar esta regla.</target>
        </trans-unit>
        <trans-unit id="ed58b7a43c9e311ce8e3580896560e95ee0a6c3d" translate="yes" xml:space="preserve">
          <source>If you intentionally use the &lt;code&gt;void&lt;/code&gt; operator then you can disable this rule.</source>
          <target state="translated">Si usa intencionalmente el operador &lt;code&gt;void&lt;/code&gt; , puede deshabilitar esta regla.</target>
        </trans-unit>
        <trans-unit id="29ecbabab88c404ca5af384d017cf9ea2b3f4919" translate="yes" xml:space="preserve">
          <source>If you maintain a plugin and provide installation instructions, you should ensure that the installation instructions are up to date with the &lt;a href=&quot;#package-loading-simplification&quot;&gt;user-facing changes to how plugins are loaded&lt;/a&gt;. In particular, if your plugin was generated with the &lt;a href=&quot;https://github.com/eslint/generator-eslint&quot;&gt;&lt;code&gt;generator-eslint&lt;/code&gt;&lt;/a&gt; package, it likely contains outdated instructions for how to use the plugin with global ESLint installations.</source>
          <target state="translated">Si mantiene un complemento y proporciona instrucciones de instalaci&amp;oacute;n, debe asegurarse de que las instrucciones de instalaci&amp;oacute;n est&amp;eacute;n actualizadas con los &lt;a href=&quot;#package-loading-simplification&quot;&gt;cambios de cara&lt;/a&gt; al usuario sobre c&amp;oacute;mo se cargan los complementos . En particular, si su complemento se gener&amp;oacute; con el paquete &lt;a href=&quot;https://github.com/eslint/generator-eslint&quot;&gt; &lt;code&gt;generator-eslint&lt;/code&gt; &lt;/a&gt; , es probable que contenga instrucciones desactualizadas sobre c&amp;oacute;mo usar el complemento con instalaciones globales de ESLint.</target>
        </trans-unit>
        <trans-unit id="382050530e90f989fc4392b588fcc385aace40bb" translate="yes" xml:space="preserve">
          <source>If you make a &lt;code&gt;fix()&lt;/code&gt; function which returns multiple &lt;code&gt;fixing&lt;/code&gt; objects, those &lt;code&gt;fixing&lt;/code&gt; objects must not be overlapped.</source>
          <target state="translated">Si crea una funci&amp;oacute;n &lt;code&gt;fix()&lt;/code&gt; que devuelve varios objetos de &lt;code&gt;fixing&lt;/code&gt; , esos objetos de &lt;code&gt;fixing&lt;/code&gt; no deben superponerse.</target>
        </trans-unit>
        <trans-unit id="30d314fb125cae0253768be98db5440a6591c835" translate="yes" xml:space="preserve">
          <source>If you need to access comments for a specific node you can use &lt;code&gt;sourceCode.getComments(node)&lt;/code&gt;:</source>
          <target state="translated">Si necesita acceder a los comentarios de un nodo espec&amp;iacute;fico, puede usar &lt;code&gt;sourceCode.getComments(node)&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="5bded78921bf41e6e0100847f8e36439af0a827a" translate="yes" xml:space="preserve">
          <source>If you need to capture nested context, &lt;code&gt;consistent-this&lt;/code&gt; is going to be problematic. Code of that nature is usually difficult to read and maintain and you should consider refactoring it.</source>
          <target state="translated">Si necesita capturar un contexto anidado, &lt;code&gt;consistent-this&lt;/code&gt; ser&amp;aacute; problem&amp;aacute;tico. El c&amp;oacute;digo de esa naturaleza suele ser dif&amp;iacute;cil de leer y mantener y deber&amp;iacute;a considerar refactorizarlo.</target>
        </trans-unit>
        <trans-unit id="382e78ca57fb3d4eb43f4468524bc11d77683bdd" translate="yes" xml:space="preserve">
          <source>If you need to make multiple configs that can extend from each other and live in different directories, you can create a single shareable config that handles this scenario.</source>
          <target state="translated">Si necesita hacer múltiples configuraciones que pueden extenderse entre sí y vivir en diferentes directorios,puede crear una única configuración compartida que maneje este escenario.</target>
        </trans-unit>
        <trans-unit id="5812603008a46c3486b5e671b8f0edc57df6edd6" translate="yes" xml:space="preserve">
          <source>If you need to use control character pattern matching, then you should turn this rule off.</source>
          <target state="translated">Si necesitas usar el control de coincidencia de patrones de caracteres,entonces deberías desactivar esta regla.</target>
        </trans-unit>
        <trans-unit id="02d1a6666bd32062a9544a0211172b4e0690165a" translate="yes" xml:space="preserve">
          <source>If you need to use labeled statements everywhere, then you can safely disable this rule.</source>
          <target state="translated">Si necesita usar declaraciones etiquetadas en todas partes,entonces puede desactivar esta regla con seguridad.</target>
        </trans-unit>
        <trans-unit id="660081d33ba72f5ae35d8f8429fbf0433e7b68be" translate="yes" xml:space="preserve">
          <source>If you prefer to use &lt;code&gt;process.env&lt;/code&gt; throughout your project to retrieve values from environment variables, then you can safely disable this rule.</source>
          <target state="translated">Si prefiere utilizar &lt;code&gt;process.env&lt;/code&gt; en todo su proyecto para recuperar valores de las variables de entorno, puede desactivar esta regla de forma segura.</target>
        </trans-unit>
        <trans-unit id="0d0340890e7d3e636e8f793bfb600313cb993e9d" translate="yes" xml:space="preserve">
          <source>If you simply want to create a local copy of the source to play with, you can clone the main repository using this command:</source>
          <target state="translated">Si simplemente quieres crear una copia local de la fuente para jugar,puedes clonar el repositorio principal usando este comando:</target>
        </trans-unit>
        <trans-unit id="b54b0379c44ec2d18f671613df2ac7b3fa322827" translate="yes" xml:space="preserve">
          <source>If you think you've found a bug in ESLint, please &lt;a href=&quot;https://github.com/eslint/eslint/issues/new&quot;&gt;create a new issue&lt;/a&gt; or a &lt;a href=&quot;pull-requests&quot;&gt;pull request&lt;/a&gt; on GitHub.</source>
          <target state="translated">Si cree que ha encontrado un error en ESLint, &lt;a href=&quot;https://github.com/eslint/eslint/issues/new&quot;&gt;cree un nuevo problema&lt;/a&gt; o una &lt;a href=&quot;pull-requests&quot;&gt;solicitud de extracci&amp;oacute;n&lt;/a&gt; en GitHub.</target>
        </trans-unit>
        <trans-unit id="38f228e5fd212b5545994a73a849c889d4d81493" translate="yes" xml:space="preserve">
          <source>If you use a boilerplate generator that relies on this behavior (e.g. to generate a script that runs &lt;code&gt;eslint tests/&lt;/code&gt; in a new project before any test files are actually present), you can work around this issue by adding a dummy file that matches the given pattern (e.g. an empty &lt;code&gt;tests/index.js&lt;/code&gt; file).</source>
          <target state="translated">Si utiliza un generador repetitivo que se basa en este comportamiento (por ejemplo, para generar un script que ejecute &lt;code&gt;eslint tests/&lt;/code&gt; en un nuevo proyecto antes de que los archivos de prueba est&amp;eacute;n realmente presentes), puede solucionar este problema agregando un archivo ficticio que coincida con el dado. patr&amp;oacute;n (por ejemplo, un archivo &lt;code&gt;tests/index.js&lt;/code&gt; vac&amp;iacute;o ).</target>
        </trans-unit>
        <trans-unit id="7d3465c7ac30a9cf24afa4cba7d6d7a58b08270c" translate="yes" xml:space="preserve">
          <source>If you use a config file located outside of a local project (with the &lt;code&gt;--config&lt;/code&gt; flag), consider installing the plugins as dependencies of that config file, and setting the &lt;a href=&quot;command-line-interface#--resolve-plugins-relative-to&quot;&gt;&lt;code&gt;--resolve-plugins-relative-to&lt;/code&gt;&lt;/a&gt; flag to the location of the config file.</source>
          <target state="translated">Si usa un archivo de configuraci&amp;oacute;n ubicado fuera de un proyecto local (con la &lt;code&gt;--config&lt;/code&gt; ), considere instalar los complementos como dependencias de ese archivo de configuraci&amp;oacute;n y establecer la &lt;a href=&quot;command-line-interface#--resolve-plugins-relative-to&quot;&gt; &lt;code&gt;--resolve-plugins-relative-to&lt;/code&gt; &lt;/a&gt; en la ubicaci&amp;oacute;n de la archivo de configuraci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="ef38f0f26aedebc08c900f2170004ffdde1f5fb9" translate="yes" xml:space="preserve">
          <source>If you use a pattern such as &lt;a href=&quot;https://github.com/umdjs/umd&quot;&gt;UMD&lt;/a&gt; where the &lt;code&gt;require&lt;/code&gt;d modules are not loaded in variable declarations, this rule will obviously do nothing for you.</source>
          <target state="translated">Si usa un patr&amp;oacute;n como &lt;a href=&quot;https://github.com/umdjs/umd&quot;&gt;UMD&lt;/a&gt; donde los m&amp;oacute;dulos &lt;code&gt;require&lt;/code&gt; d no est&amp;aacute;n cargados en declaraciones de variables, esta regla obviamente no har&amp;aacute; nada por usted.</target>
        </trans-unit>
        <trans-unit id="0e5b9656ad64e63d8b3fd891ddf70408bf2754ad" translate="yes" xml:space="preserve">
          <source>If you use some UTF-16 or UTF-32 files and you want to allow a file to optionally begin with a Unicode BOM, you should turn this rule off.</source>
          <target state="translated">Si utiliza algunos archivos UTF-16 o UTF-32 y quiere permitir que un archivo empiece opcionalmente con una lista de materiales Unicode,debería desactivar esta regla.</target>
        </trans-unit>
        <trans-unit id="0326d8c204460011dd4d50e18688b63f04393c0a" translate="yes" xml:space="preserve">
          <source>If you want to allow &lt;code&gt;setTimeout()&lt;/code&gt; and &lt;code&gt;setInterval()&lt;/code&gt; with string arguments, then you can safely disable this rule.</source>
          <target state="translated">Si desea permitir &lt;code&gt;setTimeout()&lt;/code&gt; y &lt;code&gt;setInterval()&lt;/code&gt; con argumentos de cadena, puede deshabilitar esta regla de manera segura.</target>
        </trans-unit>
        <trans-unit id="cdc7c63ca6c90a4fc825f096a878d02d0077a0af" translate="yes" xml:space="preserve">
          <source>If you want to allow additional constructor flags for any reason, you can specify them using an &lt;code&gt;allowConstructorFlags&lt;/code&gt; option in &lt;code&gt;.eslintrc&lt;/code&gt;. These flags will then be ignored by the rule regardless of the &lt;code&gt;ecmaVersion&lt;/code&gt; setting.</source>
          <target state="translated">Si desea permitir &lt;code&gt;allowConstructorFlags&lt;/code&gt; constructor adicionales por cualquier motivo, puede especificarlas usando una opci&amp;oacute;n &lt;code&gt;.eslintrc&lt;/code&gt; en .eslintrc . La regla ignorar&amp;aacute; estos indicadores independientemente de la configuraci&amp;oacute;n de &lt;code&gt;ecmaVersion&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="025c660770aa315e6d8b4dbc5d92f3800b8c5d91" translate="yes" xml:space="preserve">
          <source>If you want to allow assignment to function parameters, then you can safely disable this rule.</source>
          <target state="translated">Si quiere permitir la asignación de parámetros de función,entonces puede desactivar esta regla con seguridad.</target>
        </trans-unit>
        <trans-unit id="01c2aaebaf24fdde52a8a21733c045787756506c" translate="yes" xml:space="preserve">
          <source>If you want to allow control flow operations in &lt;code&gt;finally&lt;/code&gt; blocks, you can turn this rule off.</source>
          <target state="translated">Si desea permitir las operaciones de flujo de control en bloques &lt;code&gt;finally&lt;/code&gt; , puede desactivar esta regla.</target>
        </trans-unit>
        <trans-unit id="6ce4198863586a404bf23ac360d7a26607f63a6c" translate="yes" xml:space="preserve">
          <source>If you want to allow dangling underscores in identifiers, then you can safely turn this rule off.</source>
          <target state="translated">Si quieres permitir subrayados colgantes en los identificadores,entonces puedes desactivar esta regla con seguridad.</target>
        </trans-unit>
        <trans-unit id="77ec3c669980b1ce6e74d2cc3cca9be9749234bd" translate="yes" xml:space="preserve">
          <source>If you want to allow developers to each decide how they want to write functions on their own, then you can disable this rule.</source>
          <target state="translated">Si quiere permitir que los desarrolladores decidan cada uno cómo quieren escribir las funciones por su cuenta,entonces puede desactivar esta regla.</target>
        </trans-unit>
        <trans-unit id="a99420336119594b2985f957e70afd067dc5c412" translate="yes" xml:space="preserve">
          <source>If you want to allow functions to have different &lt;code&gt;return&lt;/code&gt; behavior depending on code branching, then it is safe to disable this rule.</source>
          <target state="translated">Si desea permitir que las funciones tengan un comportamiento de &lt;code&gt;return&lt;/code&gt; diferente seg&amp;uacute;n la ramificaci&amp;oacute;n del c&amp;oacute;digo, entonces es seguro deshabilitar esta regla.</target>
        </trans-unit>
        <trans-unit id="06d8a61f2b762c90cf475f1c301e8c19a2803657" translate="yes" xml:space="preserve">
          <source>If you want to allow multiple spaces in a regular expression, then you can safely turn this rule off.</source>
          <target state="translated">Si quieres permitir múltiples espacios en una expresión regular,entonces puedes desactivar esta regla con seguridad.</target>
        </trans-unit>
        <trans-unit id="168b692048b6b1f7a247321b869174d92d311217" translate="yes" xml:space="preserve">
          <source>If you want to allow string concatenation of path names.</source>
          <target state="translated">Si quieres permitir la concatenación de cadenas de nombres de rutas.</target>
        </trans-unit>
        <trans-unit id="c2b47982ee8ecdbe90dcd79199ede4d5a1a2501a" translate="yes" xml:space="preserve">
          <source>If you want to allow synchronous operations in your script, do not enable this rule.</source>
          <target state="translated">Si quiere permitir operaciones sincrónicas en su script,no habilite esta regla.</target>
        </trans-unit>
        <trans-unit id="157d97e1222d6e6c5c3036eddedf2544c220e1e7" translate="yes" xml:space="preserve">
          <source>If you want to allow the use of &lt;code&gt;undefined&lt;/code&gt; in your code, then you can safely turn this rule off.</source>
          <target state="translated">Si desea permitir el uso de &lt;code&gt;undefined&lt;/code&gt; en su c&amp;oacute;digo, puede desactivar esta regla de manera segura.</target>
        </trans-unit>
        <trans-unit id="5593620bae839c590950598c5628a7cf2b50ce4f" translate="yes" xml:space="preserve">
          <source>If you want to allow the use of assignment operators in a &lt;code&gt;return&lt;/code&gt; statement, then you can safely disable this rule.</source>
          <target state="translated">Si desea permitir el uso de operadores de asignaci&amp;oacute;n en una declaraci&amp;oacute;n de &lt;code&gt;return&lt;/code&gt; , puede desactivar esta regla de manera segura.</target>
        </trans-unit>
        <trans-unit id="b91748df59dc1d210ee220fffd1795446709f9c9" translate="yes" xml:space="preserve">
          <source>If you want to allow the use of primitive wrapper objects, then you can safely disable this rule.</source>
          <target state="translated">Si quiere permitir el uso de objetos de envoltura primitivos,entonces puede desactivar esta regla de forma segura.</target>
        </trans-unit>
        <trans-unit id="117c72dd490ac86d6418992cd2bdcb271c9762cc" translate="yes" xml:space="preserve">
          <source>If you want to allow use of &lt;code&gt;parseInt()&lt;/code&gt; or &lt;code&gt;Number.parseInt()&lt;/code&gt; for binary, octal, or hexadecimal integers, or if you are not using ES6 (because binary and octal literals are not supported in ES5 and below), you may wish to disable this rule.</source>
          <target state="translated">Si desea permitir el uso de &lt;code&gt;parseInt()&lt;/code&gt; o &lt;code&gt;Number.parseInt()&lt;/code&gt; para enteros binarios, octales o hexadecimales, o si no est&amp;aacute; utilizando ES6 (porque los literales binarios y octales no son compatibles con ES5 y versiones anteriores), puede que desee para deshabilitar esta regla.</target>
        </trans-unit>
        <trans-unit id="a7a2d8bc617fb6a973e4a757758c6ff305221634" translate="yes" xml:space="preserve">
          <source>If you want to be able to access array indices or object properties directly, you can either configure the rule to your tastes or disable the rule entirely.</source>
          <target state="translated">Si desea poder acceder directamente a los índices de la matriz o a las propiedades de los objetos,puede configurar la regla a su gusto o desactivarla por completo.</target>
        </trans-unit>
        <trans-unit id="e945829b731e7b76322bd039aebed22d8e0288ab" translate="yes" xml:space="preserve">
          <source>If you want to contribute to an ESLint repo, please use a GitHub pull request. This is the fastest way for us to evaluate your code and to merge it into the code base. Please don't file an issue with snippets of code. Doing so means that we need to manually merge the changes in and update any appropriate tests. That decreases the likelihood that your code is going to get included in a timely manner. Please use pull requests.</source>
          <target state="translated">Si quieres contribuir a un repositorio de ESLint,por favor usa una solicitud de GitHub pull.Esta es la forma más rápida para nosotros de evaluar tu código y fusionarlo con el código base.Por favor,no presente un problema con los fragmentos de código.Hacerlo significa que tenemos que fusionar manualmente los cambios y actualizar las pruebas apropiadas.Eso disminuye la probabilidad de que su código se incluya de manera oportuna.Por favor,utilice las solicitudes de extracción.</target>
        </trans-unit>
        <trans-unit id="b1bc3e203f722d1ec9693455df83c11f36ba7aae" translate="yes" xml:space="preserve">
          <source>If you want to fix code from &lt;code&gt;stdin&lt;/code&gt; or otherwise want to get the fixes without actually writing them to the file, use the &lt;a href=&quot;#--fix-dry-run&quot;&gt;&lt;code&gt;--fix-dry-run&lt;/code&gt;&lt;/a&gt; option.</source>
          <target state="translated">Si desea corregir el c&amp;oacute;digo de &lt;code&gt;stdin&lt;/code&gt; o desea obtener las correcciones sin escribirlas en el archivo, use la &lt;a href=&quot;#--fix-dry-run&quot;&gt; &lt;code&gt;--fix-dry-run&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d433926704a4ac51dbe6e1a80f5afe0f9cbc20ed" translate="yes" xml:space="preserve">
          <source>If you want to implement a breaking change or a change to the core, ensure there's an issue that describes what you're doing and the issue has been accepted. You can create a new issue or just indicate you're &lt;a href=&quot;working-on-issues&quot;&gt;working on an existing issue&lt;/a&gt;. Bug fixes, documentation changes, and other pull requests do not require an issue.</source>
          <target state="translated">Si desea implementar un cambio importante o un cambio en el n&amp;uacute;cleo, aseg&amp;uacute;rese de que haya un problema que describa lo que est&amp;aacute; haciendo y que el problema haya sido aceptado. Puede crear un nuevo problema o simplemente indicar que est&amp;aacute; &lt;a href=&quot;working-on-issues&quot;&gt;trabajando en un problema existente&lt;/a&gt; . Las correcciones de errores, los cambios en la documentaci&amp;oacute;n y otras solicitudes de extracci&amp;oacute;n no requieren ning&amp;uacute;n problema.</target>
        </trans-unit>
        <trans-unit id="dbaf3fa15fdca101b1059dd87a531855c8a22f9b" translate="yes" xml:space="preserve">
          <source>If you want to learn more about destructuring, check out the links below:</source>
          <target state="translated">Si quiere saber más sobre la desestructuración,consulte los siguientes enlaces:</target>
        </trans-unit>
        <trans-unit id="01bdb16b7d4784e8c75c4b849aaf2b1888300119" translate="yes" xml:space="preserve">
          <source>If you want to learn more about tagged template literals, check out the links below:</source>
          <target state="translated">Si quieres saber más sobre los literales de las plantillas etiquetadas,echa un vistazo a los siguientes enlaces:</target>
        </trans-unit>
        <trans-unit id="1bfb10754401295a1a5e4ea43c2fe0a3b67db675" translate="yes" xml:space="preserve">
          <source>If you want to lint one or more files, use the &lt;code&gt;executeOnFiles()&lt;/code&gt; method. This method accepts a single argument, which is an array of files and/or directories to traverse for files. You can pass the same values as you would using the ESLint command line interface, such as &lt;code&gt;&quot;.&quot;&lt;/code&gt; to search all JavaScript files in the current directory. Here's an example:</source>
          <target state="translated">Si desea filtrar uno o m&amp;aacute;s archivos, use el m&amp;eacute;todo &lt;code&gt;executeOnFiles()&lt;/code&gt; . Este m&amp;eacute;todo acepta un solo argumento, que es una matriz de archivos y / o directorios para buscar archivos. Puede pasar los mismos valores que utilizar&amp;iacute;a con la interfaz de l&amp;iacute;nea de comandos de ESLint, como &lt;code&gt;&quot;.&quot;&lt;/code&gt; para buscar todos los archivos JavaScript en el directorio actual. He aqu&amp;iacute; un ejemplo:</target>
        </trans-unit>
        <trans-unit id="8ae0efa7cc8d38a3e330a4407faa82ae491a0ad3" translate="yes" xml:space="preserve">
          <source>If you want to propose a new rule, please see how to &lt;a href=&quot;pull-requests&quot;&gt;create a pull request&lt;/a&gt; or submit an issue by filling out a &lt;a href=&quot;https://github.com/eslint/eslint/issues/new?template=NEW_RULE.md&quot;&gt;new rule template&lt;/a&gt;.</source>
          <target state="translated">Si desea proponer una nueva regla, consulte c&amp;oacute;mo &lt;a href=&quot;pull-requests&quot;&gt;crear una solicitud de extracci&amp;oacute;n&lt;/a&gt; o enviar un problema completando una &lt;a href=&quot;https://github.com/eslint/eslint/issues/new?template=NEW_RULE.md&quot;&gt;nueva plantilla de regla&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="fc20c08d174f1ad50d824f0e45cd254992c6ae16" translate="yes" xml:space="preserve">
          <source>If you want to quickly run just one test, you can do so by running Mocha directly and passing in the filename. For example:</source>
          <target state="translated">Si quieres hacer rápidamente una sola prueba,puedes hacerlo ejecutando directamente a Mocha y pasando el nombre del archivo.Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="16da35b5af438aa046c923e0c90a12cc343ac898" translate="yes" xml:space="preserve">
          <source>If you want to retrieve a configuration object for a given file, use the &lt;code&gt;getConfigForFile()&lt;/code&gt; method. This method accepts one argument, a file path, and returns an object represented the calculated configuration of the file. Here's an example:</source>
          <target state="translated">Si desea recuperar un objeto de configuraci&amp;oacute;n para un archivo determinado, use el m&amp;eacute;todo &lt;code&gt;getConfigForFile()&lt;/code&gt; . Este m&amp;eacute;todo acepta un argumento, una ruta de archivo y devuelve un objeto que representa la configuraci&amp;oacute;n calculada del archivo. He aqu&amp;iacute; un ejemplo:</target>
        </trans-unit>
        <trans-unit id="7bbedf7b05174e3221ac6559667171bdc4900f74" translate="yes" xml:space="preserve">
          <source>If you want to use &lt;code&gt;await&lt;/code&gt; to denote a value that is a thenable, even when it is not necessary; or if you do not want the performance benefit of avoiding &lt;code&gt;return await&lt;/code&gt;, you can turn off this rule.</source>
          <target state="translated">Si desea utilizar &lt;code&gt;await&lt;/code&gt; para denotar un valor que es thenable, incluso cuando no es necesario; o si no desea el beneficio de rendimiento de evitar la &lt;code&gt;return await&lt;/code&gt; , puede desactivar esta regla.</target>
        </trans-unit>
        <trans-unit id="7ebf4e944a61bef47f4a2f25c9dfb29556f044f3" translate="yes" xml:space="preserve">
          <source>If you want to use Reflect methods, but keep using the &lt;code&gt;delete&lt;/code&gt; keyword, then your config would look like &lt;code&gt;prefer-reflect: [2, { &quot;exceptions&quot;: [&quot;delete&quot;] }]&lt;/code&gt;.</source>
          <target state="translated">Si desea utilizar los m&amp;eacute;todos Reflect, pero sigue usando la palabra clave &lt;code&gt;delete&lt;/code&gt; , entonces su configuraci&amp;oacute;n se ver&amp;iacute;a como &lt;code&gt;prefer-reflect: [2, { &quot;exceptions&quot;: [&quot;delete&quot;] }]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5dcbce8e16ab14d37edc537499d4673be2756e1d" translate="yes" xml:space="preserve">
          <source>If you want to use an environment from a plugin, be sure to specify the plugin name in the &lt;code&gt;plugins&lt;/code&gt; array and then use the unprefixed plugin name, followed by a slash, followed by the environment name. For example:</source>
          <target state="translated">Si desea utilizar un entorno de un complemento, aseg&amp;uacute;rese de especificar el nombre del complemento en la matriz de &lt;code&gt;plugins&lt;/code&gt; y luego use el nombre del complemento sin prefijo, seguido de una barra inclinada, seguido del nombre del entorno. Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="eb8a205efd9c67c4073b9416e356ad4478147a46" translate="yes" xml:space="preserve">
          <source>If you want to use sparse arrays, then it is safe to disable this rule.</source>
          <target state="translated">Si quieres usar conjuntos dispersos,entonces es seguro desactivar esta regla.</target>
        </trans-unit>
        <trans-unit id="32718e9e480985cfed80435e0fad5f99885ad95f" translate="yes" xml:space="preserve">
          <source>If you want to use your own parser and provide additional capabilities for your rules, you can specify your own custom parser. If a &lt;code&gt;parseForESLint&lt;/code&gt; method is exposed on the parser, this method will be used to parse the code. Otherwise, the &lt;code&gt;parse&lt;/code&gt; method will be used. Both methods should take in the source code as the first argument, and an optional configuration object as the second argument (provided as &lt;code&gt;parserOptions&lt;/code&gt; in a config file). The &lt;code&gt;parse&lt;/code&gt; method should simply return the AST. The &lt;code&gt;parseForESLint&lt;/code&gt; method should return an object that contains the required property &lt;code&gt;ast&lt;/code&gt; and optional properties &lt;code&gt;services&lt;/code&gt;, &lt;code&gt;scopeManager&lt;/code&gt;, and &lt;code&gt;visitorKeys&lt;/code&gt;.</source>
          <target state="translated">Si desea utilizar su propio analizador y proporcionar capacidades adicionales para sus reglas, puede especificar su propio analizador personalizado. Si se expone un m&amp;eacute;todo &lt;code&gt;parseForESLint&lt;/code&gt; en el analizador, este m&amp;eacute;todo se utilizar&amp;aacute; para analizar el c&amp;oacute;digo. De lo contrario, se utilizar&amp;aacute; el m&amp;eacute;todo de &lt;code&gt;parse&lt;/code&gt; . Ambos m&amp;eacute;todos deben tomar el c&amp;oacute;digo fuente como primer argumento y un objeto de configuraci&amp;oacute;n opcional como segundo argumento (proporcionado como &lt;code&gt;parserOptions&lt;/code&gt; en un archivo de configuraci&amp;oacute;n). El m&amp;eacute;todo de &lt;code&gt;parse&lt;/code&gt; deber&amp;iacute;a simplemente devolver el AST. El m&amp;eacute;todo &lt;code&gt;parseForESLint&lt;/code&gt; debe devolver un objeto que contenga la propiedad requerida &lt;code&gt;ast&lt;/code&gt; y las propiedades opcionales &lt;code&gt;services&lt;/code&gt; , &lt;code&gt;scopeManager&lt;/code&gt; y &lt;code&gt;visitorKeys&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3230232a97c3d21775cfc1d1507fc08955ed3b0e" translate="yes" xml:space="preserve">
          <source>If you were to remove the initialization, then the behavior of the loop changes:</source>
          <target state="translated">Si se quita la inicialización,entonces el comportamiento del bucle cambia:</target>
        </trans-unit>
        <trans-unit id="d93b953074e456b439293bef97d4d869490dadb5" translate="yes" xml:space="preserve">
          <source>If you were using &lt;code&gt;ecmaFeatures.modules&lt;/code&gt; to enable ES6 module support like this:</source>
          <target state="translated">Si estaba utilizando &lt;code&gt;ecmaFeatures.modules&lt;/code&gt; para habilitar la compatibilidad con el m&amp;oacute;dulo ES6 de esta manera:</target>
        </trans-unit>
        <trans-unit id="36c05b83cad0c60a876dbe4551ddc2004b01bce0" translate="yes" xml:space="preserve">
          <source>If you were using a prior version of ESLint, you can get help with the transition by reading:</source>
          <target state="translated">Si usaste una versión anterior de ESLint,puedes obtener ayuda con la transición leyendo:</target>
        </trans-unit>
        <trans-unit id="62e887c8ffaf679225cbfb62fab07d5987855b22" translate="yes" xml:space="preserve">
          <source>If you wish to allow the use of the &lt;code&gt;Object&lt;/code&gt; constructor, you can safely turn this rule off.</source>
          <target state="translated">Si desea permitir el uso del constructor de &lt;code&gt;Object&lt;/code&gt; , puede desactivar esta regla de forma segura.</target>
        </trans-unit>
        <trans-unit id="4845e6a9b32a2c3cb12af3f332e0e771dafb2f16" translate="yes" xml:space="preserve">
          <source>If you wish to have a different configuration for line comments and block comments, you can do so by using two different object configurations (note that the capitalization option will be enforced consistently for line and block comments):</source>
          <target state="translated">Si desea tener una configuración diferente para los comentarios de línea y los comentarios de bloque,puede hacerlo utilizando dos configuraciones de objeto diferentes (tenga en cuenta que la opción de mayúsculas se aplicará de forma coherente para los comentarios de línea y los comentarios de bloque):</target>
        </trans-unit>
        <trans-unit id="3b305d34beab965b8e6902b4057eb1ea1186cc8f" translate="yes" xml:space="preserve">
          <source>If you'd like ESLint to attempt to fix the problem you're reporting, you can do so by specifying the &lt;code&gt;fix&lt;/code&gt; function when using &lt;code&gt;context.report()&lt;/code&gt;. The &lt;code&gt;fix&lt;/code&gt; function receives a single argument, a &lt;code&gt;fixer&lt;/code&gt; object, that you can use to apply a fix. For example:</source>
          <target state="translated">Si desea que ESLint intente solucionar el problema que est&amp;aacute; informando, puede hacerlo especificando la funci&amp;oacute;n de &lt;code&gt;fix&lt;/code&gt; cuando utilice &lt;code&gt;context.report()&lt;/code&gt; . La &lt;code&gt;fix&lt;/code&gt; funci&amp;oacute;n recibe un &amp;uacute;nico argumento, un &lt;code&gt;fixer&lt;/code&gt; objeto, que puede utilizar para aplicar una soluci&amp;oacute;n. Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="e2de9e1d21deb952d591059d9bfac04bff3045b4" translate="yes" xml:space="preserve">
          <source>If you'd like to request a change other than a bug fix or new rule, this section explains that process.</source>
          <target state="translated">Si desea solicitar un cambio que no sea la corrección de un error o una nueva regla,esta sección explica ese proceso.</target>
        </trans-unit>
        <trans-unit id="9dbf97a89558daba71eceae42ebb78166efcb253" translate="yes" xml:space="preserve">
          <source>If you'd like to request a change to ESLint, please &lt;a href=&quot;https://github.com/eslint/eslint/issues/new?template=CHANGE.md&quot;&gt;create a new issue&lt;/a&gt; on GitHub. Be sure to include the following information:</source>
          <target state="translated">Si desea solicitar un cambio en ESLint, &lt;a href=&quot;https://github.com/eslint/eslint/issues/new?template=CHANGE.md&quot;&gt;cree un nuevo problema&lt;/a&gt; en GitHub. Aseg&amp;uacute;rese de incluir la siguiente informaci&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="a2ff681ef1e1294a4a8430977faeb8b6585b95bd" translate="yes" xml:space="preserve">
          <source>If you'd like to work on a pull request and you've never submitted code before, follow these steps:</source>
          <target state="translated">Si quieres trabajar en una solicitud de extracción y nunca has presentado un código antes,sigue estos pasos:</target>
        </trans-unit>
        <trans-unit id="1fc6d5511f027154cd7d3325f533abfe108333a7" translate="yes" xml:space="preserve">
          <source>If you'd prefer to use a different file than the &lt;code&gt;.eslintignore&lt;/code&gt; in the current working directory, you can specify it on the command line using the &lt;code&gt;--ignore-path&lt;/code&gt; option. For example, you can use &lt;code&gt;.jshintignore&lt;/code&gt; file because it has the same format:</source>
          <target state="translated">Si prefiere usar un archivo diferente al &lt;code&gt;.eslintignore&lt;/code&gt; en el directorio de trabajo actual, puede especificarlo en la l&amp;iacute;nea de comando usando la opci&amp;oacute;n &lt;code&gt;--ignore-path&lt;/code&gt; . Por ejemplo, puede usar el archivo &lt;code&gt;.jshintignore&lt;/code&gt; porque tiene el mismo formato:</target>
        </trans-unit>
        <trans-unit id="d8bb46085e72a67007bd541cac129fad559af636" translate="yes" xml:space="preserve">
          <source>If you're going to work on an issue, please add a comment to that issue saying so and indicating when you think you will complete it. It will help us to avoid duplication of effort. Some examples of good comments are:</source>
          <target state="translated">Si va a trabajar en un tema,por favor,añada un comentario a ese tema diciéndolo e indicando cuando cree que lo completará.Nos ayudará a evitar la duplicación de esfuerzos.Algunos ejemplos de buenos comentarios son:</target>
        </trans-unit>
        <trans-unit id="529fb9f8074c731a55ea46317378ab6ce2fa6379" translate="yes" xml:space="preserve">
          <source>If you're interested in writing a tool that uses ESLint, then you can use the Node.js API to get programmatic access to functionality.</source>
          <target state="translated">Si estás interesado en escribir una herramienta que use ESLint,entonces puedes usar el API de Node.js para obtener acceso programático a la funcionalidad.</target>
        </trans-unit>
        <trans-unit id="492482d9566e53632c85e7788842a3f9c1aceabf" translate="yes" xml:space="preserve">
          <source>If you're not concerned about consistent locations of implicitly returned arrow function expressions, you should not turn on this rule.</source>
          <target state="translated">Si no le preocupan las ubicaciones consistentes de las expresiones de las funciones de las flechas implícitas,no debe activar esta regla.</target>
        </trans-unit>
        <trans-unit id="403e57af13573e69ccf33af74594bbecf97b2c8e" translate="yes" xml:space="preserve">
          <source>If you're not concerned about consistent locations of single-line statements, you should not turn on this rule. You can also disable this rule if you're using the &lt;code&gt;&quot;all&quot;&lt;/code&gt; option for the &lt;a href=&quot;curly&quot;&gt;&lt;code&gt;curly&lt;/code&gt;&lt;/a&gt; rule, because this will disallow single-line statements entirely.</source>
          <target state="translated">Si no le preocupan las ubicaciones consistentes de las declaraciones de una sola l&amp;iacute;nea, no debe activar esta regla. Tambi&amp;eacute;n puede deshabilitar esta regla si est&amp;aacute; usando la opci&amp;oacute;n &lt;code&gt;&quot;all&quot;&lt;/code&gt; para la regla &lt;a href=&quot;curly&quot;&gt; &lt;code&gt;curly&lt;/code&gt; &lt;/a&gt; , porque esto no permitir&amp;aacute; las declaraciones de una sola l&amp;iacute;nea por completo.</target>
        </trans-unit>
        <trans-unit id="1d9f59855a50da748bf20de2e170697ffbe4d25d" translate="yes" xml:space="preserve">
          <source>If you're not sure which config file needs to be updated, it may be useful to run ESLint v5 and look at what config file is mentioned in the deprecation warning.</source>
          <target state="translated">Si no está seguro de qué archivo de configuración necesita ser actualizado,puede ser útil ejecutar ESLint v5 y mirar qué archivo de configuración se menciona en la advertencia de deprecación.</target>
        </trans-unit>
        <trans-unit id="e7c33db323d7ae05a4a777eaa7e0692355dceeee" translate="yes" xml:space="preserve">
          <source>If you're not using &lt;code&gt;ecmaFeatures&lt;/code&gt; in your configuration or your custom/plugin rules and tests, then no change is needed.</source>
          <target state="translated">Si no est&amp;aacute; utilizando &lt;code&gt;ecmaFeatures&lt;/code&gt; en su configuraci&amp;oacute;n o sus reglas y pruebas personalizadas / de complementos, no es necesario ning&amp;uacute;n cambio.</target>
        </trans-unit>
        <trans-unit id="0e5d630cd8e1ad7d04f0f3ebb887b02dbcbde5a8" translate="yes" xml:space="preserve">
          <source>If you're planning on contributing to ESLint, then it's a good idea to fork the repository. You can find instructions for forking a repository at &lt;a href=&quot;https://help.github.com/articles/fork-a-repo/&quot;&gt;https://help.github.com/articles/fork-a-repo/&lt;/a&gt;. After forking the ESLint repository, you'll want to create a local copy of your fork.</source>
          <target state="translated">Si planea contribuir a ESLint, entonces es una buena idea bifurcar el repositorio. Puede encontrar instrucciones para bifurcar un repositorio en &lt;a href=&quot;https://help.github.com/articles/fork-a-repo/&quot;&gt;https://help.github.com/articles/fork-a-repo/&lt;/a&gt; . Despu&amp;eacute;s de bifurcar el repositorio de ESLint, querr&amp;aacute; crear una copia local de su bifurcaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="04c7fb910e2d3f13bf107bc9b013fc5fc7904efc" translate="yes" xml:space="preserve">
          <source>If you're requesting a change to a rule, it's helpful to include this information as well:</source>
          <target state="translated">Si está solicitando un cambio en una regla,es útil incluir también esta información:</target>
        </trans-unit>
        <trans-unit id="44e50b47a18d3a7403129f958f989d1c21f74408" translate="yes" xml:space="preserve">
          <source>If you're using &lt;code&gt;context.ecmaFeatures.modules&lt;/code&gt;, rewrite to check that the &lt;code&gt;sourceType&lt;/code&gt; property of the Program node is &lt;code&gt;&quot;module&quot;&lt;/code&gt;.</source>
          <target state="translated">Si est&amp;aacute; utilizando &lt;code&gt;context.ecmaFeatures.modules&lt;/code&gt; , &lt;code&gt;sourceType&lt;/code&gt; a escribir para comprobar que la propiedad sourceType del nodo Program es &lt;code&gt;&quot;module&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1fc559da69650e0770bde8a012bac60b284aed63" translate="yes" xml:space="preserve">
          <source>If you're using Node.js, however, &lt;code&gt;console&lt;/code&gt; is used to output information to the user and so is not strictly used for debugging purposes. If you are developing for Node.js then you most likely do not want this rule enabled.</source>
          <target state="translated">Sin embargo, si est&amp;aacute; usando Node.js, la &lt;code&gt;console&lt;/code&gt; se usa para enviar informaci&amp;oacute;n al usuario y, por lo tanto, no se usa estrictamente con fines de depuraci&amp;oacute;n. Si est&amp;aacute; desarrollando para Node.js, lo m&amp;aacute;s probable es que no desee que esta regla est&amp;eacute; habilitada.</target>
        </trans-unit>
        <trans-unit id="6679e6e261401ed39ebd01362b8293e4ddca112e" translate="yes" xml:space="preserve">
          <source>If you're using a non-ES6 feature flag such as &lt;code&gt;context.ecmaFeatures.jsx&lt;/code&gt;, rewrite to check for &lt;code&gt;context.parserOptions.ecmaFeatures.jsx&lt;/code&gt;.</source>
          <target state="translated">Si est&amp;aacute; utilizando un indicador de funci&amp;oacute;n que no es de ES6, como &lt;code&gt;context.ecmaFeatures.jsx&lt;/code&gt; , vuelva a escribir para verificar &lt;code&gt;context.parserOptions.ecmaFeatures.jsx&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a85d177b329bc6c730f23ff598ce3a4fb75b095d" translate="yes" xml:space="preserve">
          <source>If you're using an ES6 feature flag such as &lt;code&gt;context.ecmaFeatures.blockBindings&lt;/code&gt;, rewrite to check for &lt;code&gt;context.parserOptions.ecmaVersion &amp;gt; 5&lt;/code&gt;.</source>
          <target state="translated">Si est&amp;aacute; utilizando un indicador de funci&amp;oacute;n de ES6 como &lt;code&gt;context.ecmaFeatures.blockBindings&lt;/code&gt; , vuelva a escribir para verificar &lt;code&gt;context.parserOptions.ecmaVersion &amp;gt; 5&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0ff71978601ec2bbe9e3d1868a2d18412ce28bed" translate="yes" xml:space="preserve">
          <source>If you're using any non-ES6 flags in &lt;code&gt;ecmaFeatures&lt;/code&gt;, you need to move those inside of &lt;code&gt;parserOptions&lt;/code&gt;. For instance:</source>
          <target state="translated">Si est&amp;aacute; utilizando indicadores que no sean de ES6 en &lt;code&gt;ecmaFeatures&lt;/code&gt; , debe moverlos dentro de &lt;code&gt;parserOptions&lt;/code&gt; . Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="5d5c9fc44eb094ac8f2b18978cbf3f0acccc994b" translate="yes" xml:space="preserve">
          <source>If you're using any of these flags, such as:</source>
          <target state="translated">Si estás usando alguna de estas banderas,como por ejemplo:</target>
        </trans-unit>
        <trans-unit id="6495d2f4fd019907eeb203fca9c3e68a5e7680ab" translate="yes" xml:space="preserve">
          <source>If you're using custom non-error values as Promise rejection reasons, you can turn off this rule.</source>
          <target state="translated">Si usas valores personalizados no erróneos como razones de rechazo de la Promesa,puedes desactivar esta regla.</target>
        </trans-unit>
        <trans-unit id="b3dda6a82a85489dc460700036c64d7e04f74905" translate="yes" xml:space="preserve">
          <source>If you're using such an initialization inside of a loop, then you should disable this rule.</source>
          <target state="translated">Si está usando tal inicialización dentro de un bucle,entonces debería desactivar esta regla.</target>
        </trans-unit>
        <trans-unit id="de18cfd7f994a6a4746d6a5b6b988915f27f6978" translate="yes" xml:space="preserve">
          <source>If you're writing custom ESLint rules, you might be interested in using selectors to examine specific parts of the AST. If you're configuring ESLint for your codebase, you might be interested in restricting particular syntax patterns with selectors.</source>
          <target state="translated">Si estás escribiendo reglas personalizadas de ESLint,puede que te interese usar selectores para examinar partes específicas de la AST.Si estás configurando ESLint para tu base de código,podrías estar interesado en restringir patrones de sintaxis particulares con selectores.</target>
        </trans-unit>
        <trans-unit id="c96442ea1831fcb8ddebf6e89b51db125d24c596" translate="yes" xml:space="preserve">
          <source>If your code is only going to be executed in an ECMAScript 5 or higher environment, then you can safely leave this rule off.</source>
          <target state="translated">Si tu código sólo va a ser ejecutado en un entorno ECMAScript 5 o superior,entonces puedes dejar esta regla fuera de forma segura.</target>
        </trans-unit>
        <trans-unit id="7c1a1996cd5371119325ca66866f4edcd3530231" translate="yes" xml:space="preserve">
          <source>If your code is out-of-date, we might ask you to rebase. That means we want you to apply your changes on top of the latest upstream code. Make sure you have set up a &lt;a href=&quot;../development-environment&quot;&gt;development environment&lt;/a&gt; and then you can rebase using these commands:</source>
          <target state="translated">Si su c&amp;oacute;digo no est&amp;aacute; actualizado, es posible que le pidamos que lo modifique. Eso significa que queremos que aplique sus cambios sobre el &amp;uacute;ltimo c&amp;oacute;digo upstream. Aseg&amp;uacute;rese de haber configurado un &lt;a href=&quot;../development-environment&quot;&gt;entorno de desarrollo&lt;/a&gt; y luego puede volver a basar usando estos comandos:</target>
        </trans-unit>
        <trans-unit id="51a50954cfa8c4532d799e153f3402761f00daa2" translate="yes" xml:space="preserve">
          <source>If your code is still very much in development and don't want to worry about stripping &lt;code&gt;debugger&lt;/code&gt; statements, then turn this rule off. You'll generally want to turn it back on when testing code prior to deployment.</source>
          <target state="translated">Si su c&amp;oacute;digo a&amp;uacute;n est&amp;aacute; en desarrollo y no quiere preocuparse por &lt;code&gt;debugger&lt;/code&gt; declaraciones del depurador , desactive esta regla. Por lo general, querr&amp;aacute; volver a activarlo cuando pruebe el c&amp;oacute;digo antes de la implementaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="83a5396f7b29a4f6527d5a1931cc0bcb3428da62" translate="yes" xml:space="preserve">
          <source>If your code will not be run in IE8 or below (a Node.js application, for example) and you'd prefer to allow trailing commas, turn this rule off.</source>
          <target state="translated">Si tu código no se ejecutará en IE8 o inferior (una aplicación Node.js,por ejemplo)y prefieres permitir las comillas,desactiva esta regla.</target>
        </trans-unit>
        <trans-unit id="f8f29c811490e5458b9805b99b4ea539001d53d1" translate="yes" xml:space="preserve">
          <source>If your codebase doesn't support async function syntax, there's no need to enable this rule.</source>
          <target state="translated">Si tu base de código no soporta la sintaxis de la función de sincronización,no hay necesidad de habilitar esta regla.</target>
        </trans-unit>
        <trans-unit id="a162368aefa62116f17df2fd8bc935578feec8ea" translate="yes" xml:space="preserve">
          <source>If your commit message is in the incorrect format, you'll be asked to update it. You can do so via:</source>
          <target state="translated">Si el mensaje de confirmación tiene un formato incorrecto,se le pedirá que lo actualice.Puedes hacerlo a través de:</target>
        </trans-unit>
        <trans-unit id="ab5ccc8af6f48197d32df8b7d3e12fe2a0141524" translate="yes" xml:space="preserve">
          <source>If your configuration extends all core rules: after you upgrade to a newer major or minor version of ESLint, review the reported problems before you use the &lt;code&gt;--fix&lt;/code&gt; option on the &lt;a href=&quot;command-line-interface#fix&quot;&gt;command line&lt;/a&gt;, so you know if a new fixable rule will make changes to the code.</source>
          <target state="translated">Si su configuraci&amp;oacute;n ampl&amp;iacute;a todas las reglas b&amp;aacute;sicas: despu&amp;eacute;s de actualizar a una versi&amp;oacute;n principal o secundaria m&amp;aacute;s nueva de ESLint, revise los problemas informados antes de usar la opci&amp;oacute;n &lt;code&gt;--fix&lt;/code&gt; en la &lt;a href=&quot;command-line-interface#fix&quot;&gt;l&amp;iacute;nea de comando&lt;/a&gt; , para saber si una nueva regla reparable har&amp;aacute; cambios en el c&amp;oacute;digo.</target>
        </trans-unit>
        <trans-unit id="2559a41e901cadba989bfeffd57f3935b353bcb1" translate="yes" xml:space="preserve">
          <source>If your configuration extends the recommended rules: after you upgrade to a newer major version of ESLint, review the reported problems before you use the &lt;code&gt;--fix&lt;/code&gt; option on the &lt;a href=&quot;command-line-interface#fix&quot;&gt;command line&lt;/a&gt;, so you know if a new fixable recommended rule will make changes to the code.</source>
          <target state="translated">Si su configuraci&amp;oacute;n extiende las reglas recomendadas: despu&amp;eacute;s de actualizar a una versi&amp;oacute;n principal m&amp;aacute;s reciente de ESLint, revise los problemas informados antes de usar la opci&amp;oacute;n &lt;code&gt;--fix&lt;/code&gt; en la &lt;a href=&quot;command-line-interface#fix&quot;&gt;l&amp;iacute;nea de comando&lt;/a&gt; , para saber si una nueva regla recomendada reparable har&amp;aacute; cambios en el c&amp;oacute;digo.</target>
        </trans-unit>
        <trans-unit id="39f85b8e11f0a7287198c3637add2aa74d65ec3a" translate="yes" xml:space="preserve">
          <source>If your project will not be following a consistent comma-spacing pattern, turn this rule off.</source>
          <target state="translated">Si su proyecto no sigue un patrón consistente de espaciamiento de comas,apague esta regla.</target>
        </trans-unit>
        <trans-unit id="b2741db66d6831acaf061c23673437b93b79e590" translate="yes" xml:space="preserve">
          <source>If your project will not be using ES5 property getters you do not need this rule.</source>
          <target state="translated">Si su proyecto no va a utilizar los captadores de propiedades ES5 no necesita esta regla.</target>
        </trans-unit>
        <trans-unit id="bab195dfe6cfd05f543eca0ef2bf531274ab3593" translate="yes" xml:space="preserve">
          <source>If your project will not be using a common operator line break style, turn this rule off.</source>
          <target state="translated">Si su proyecto no va a utilizar un estilo común de salto de línea del operador,desactive esta regla.</target>
        </trans-unit>
        <trans-unit id="2945d370984bd3d31485c9bde06fc75b8ba6634f" translate="yes" xml:space="preserve">
          <source>If your project will not be using generators or you are not concerned with spacing consistency, you do not need this rule.</source>
          <target state="translated">Si su proyecto no usará generadores o no le preocupa la consistencia del espaciado,no necesita esta regla.</target>
        </trans-unit>
        <trans-unit id="b5ba84c31d79b821b596dda291e464837704ee5d" translate="yes" xml:space="preserve">
          <source>If your project will not be using generators you do not need this rule.</source>
          <target state="translated">Si su proyecto no va a utilizar generadores no necesita esta regla.</target>
        </trans-unit>
        <trans-unit id="3b403b66e02ddb4237f2f89a2eff187617c1cbaf" translate="yes" xml:space="preserve">
          <source>If your rule is disallowing something, prefix it with &lt;code&gt;no-&lt;/code&gt; such as &lt;code&gt;no-eval&lt;/code&gt; for disallowing &lt;code&gt;eval()&lt;/code&gt; and &lt;code&gt;no-debugger&lt;/code&gt; for disallowing &lt;code&gt;debugger&lt;/code&gt;.</source>
          <target state="translated">Si su regla no permite algo, antep&amp;oacute;ngalo con &lt;code&gt;no-&lt;/code&gt; , como &lt;code&gt;no-eval&lt;/code&gt; para no permitir &lt;code&gt;eval()&lt;/code&gt; y &lt;code&gt;no-debugger&lt;/code&gt; para no permitir el &lt;code&gt;debugger&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2824b845991c6bbe7e78b00c6a0fb1a3e916869b" translate="yes" xml:space="preserve">
          <source>If your rule is enforcing the inclusion of something, use a short name without a special prefix.</source>
          <target state="translated">Si su regla es hacer cumplir la inclusión de algo,use un nombre corto sin un prefijo especial.</target>
        </trans-unit>
        <trans-unit id="2011f28355e4125316a3bdd688cb7db66dd75549" translate="yes" xml:space="preserve">
          <source>If your rule needs to get the actual JavaScript source to work with, then use the &lt;code&gt;sourceCode.getText()&lt;/code&gt; method. This method works as follows:</source>
          <target state="translated">Si su regla necesita obtener la fuente de JavaScript real para trabajar, utilice el m&amp;eacute;todo &lt;code&gt;sourceCode.getText()&lt;/code&gt; . Este m&amp;eacute;todo funciona de la siguiente manera:</target>
        </trans-unit>
        <trans-unit id="e1ebf009df56e29e74f07a68f239e17913f4a1d3" translate="yes" xml:space="preserve">
          <source>If your shareable config depends on a plugin, you should also specify it as a &lt;code&gt;peerDependency&lt;/code&gt; (plugins will be loaded relative to the end user's project, so the end user is required to install the plugins they need). However, if your shareable config depends on a third-party parser or another shareable config, you can specify these packages as &lt;code&gt;dependencies&lt;/code&gt;.</source>
          <target state="translated">Si su configuraci&amp;oacute;n para compartir depende de un complemento, tambi&amp;eacute;n debe especificarlo como &lt;code&gt;peerDependency&lt;/code&gt; (los complementos se cargar&amp;aacute;n en relaci&amp;oacute;n con el proyecto del usuario final, por lo que el usuario final debe instalar los complementos que necesita). Sin embargo, si su configuraci&amp;oacute;n para compartir depende de un analizador de terceros u otra configuraci&amp;oacute;n para compartir, puede especificar estos paquetes como &lt;code&gt;dependencies&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1856f3abeff9591a2a7d76238103bbed25f63cd8" translate="yes" xml:space="preserve">
          <source>If/else statements</source>
          <target state="translated">Declaraciones de &quot;si&quot; o &quot;no&quot;.</target>
        </trans-unit>
        <trans-unit id="88efdf7b0a638bc58f75e1b4e8e0f081ca07ff33" translate="yes" xml:space="preserve">
          <source>Ignore patterns behave according to the &lt;code&gt;.gitignore&lt;/code&gt;&lt;a href=&quot;https://git-scm.com/docs/gitignore&quot;&gt;specification&lt;/a&gt;.</source>
          <target state="translated">Ignorar patrones se comportan de acuerdo con la &lt;a href=&quot;https://git-scm.com/docs/gitignore&quot;&gt;especificaci&amp;oacute;n &lt;/a&gt; &lt;code&gt;.gitignore&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e0c0968ebdf38ddfdbaec683b916b61dcb603c54" translate="yes" xml:space="preserve">
          <source>Ignored File Warnings</source>
          <target state="translated">Advertencias de archivo ignoradas</target>
        </trans-unit>
        <trans-unit id="d261e62109255eb2c88ce241ececcda865af665d" translate="yes" xml:space="preserve">
          <source>Ignores the member sorting within a &lt;code&gt;multiple&lt;/code&gt; member import declaration.</source>
          <target state="translated">Ignora la clasificaci&amp;oacute;n de miembros dentro de una declaraci&amp;oacute;n de importaci&amp;oacute;n de &lt;code&gt;multiple&lt;/code&gt; miembros.</target>
        </trans-unit>
        <trans-unit id="97f2ea65d88865525c32c1dc0fdaabf6454b7ce5" translate="yes" xml:space="preserve">
          <source>Ignores the sorting of import declaration statements.</source>
          <target state="translated">Ignora la clasificación de las declaraciones de importación.</target>
        </trans-unit>
        <trans-unit id="fc6c2032aae29f2bf4cdf1ecb565f44e6c98df5a" translate="yes" xml:space="preserve">
          <source>Ignoring Files and Directories</source>
          <target state="translated">Ignorar los archivos y directorios</target>
        </trans-unit>
        <trans-unit id="87a5b84b90eaf9c6a4ea4cf7776f8cdbe987e92e" translate="yes" xml:space="preserve">
          <source>Ignoring files</source>
          <target state="translated">Ignorar los archivos</target>
        </trans-unit>
        <trans-unit id="c58183c9a7f3073a5d043430bb488897214cfb72" translate="yes" xml:space="preserve">
          <source>Ignoring files from linting</source>
          <target state="translated">Ignorar los archivos de las pelusas</target>
        </trans-unit>
        <trans-unit id="1c756c5607fbc3a3e749301ea2e32381c2238f06" translate="yes" xml:space="preserve">
          <source>Immediately-Invoked Function Expression (IIFE)</source>
          <target state="translated">Expresión de la función inmediatamente invocada (IIFE)</target>
        </trans-unit>
        <trans-unit id="8670c08fed9affa1bdffc5de7ab5b3464ea35b75" translate="yes" xml:space="preserve">
          <source>Immediately-invoked functions should surround the entire function call with parentheses.</source>
          <target state="translated">Las funciones inmediatamente invocadas deben rodear toda la llamada de función con paréntesis.</target>
        </trans-unit>
        <trans-unit id="04ab9b79c8691d1b53dc55cdbba436a62027f12a" translate="yes" xml:space="preserve">
          <source>Implementation is Your Responsibility</source>
          <target state="translated">La implementación es su responsabilidad</target>
        </trans-unit>
        <trans-unit id="1de41e87576d1cd7f3d74b3b5efff943cda9a84d" translate="yes" xml:space="preserve">
          <source>Import Sorting (sort-imports)</source>
          <target state="translated">Clasificación de las importaciones (clasificación de las importaciones)</target>
        </trans-unit>
        <trans-unit id="e0559377cfba6b8aed12863122b1b2dcc118cb64" translate="yes" xml:space="preserve">
          <source>ImportDeclaration</source>
          <target state="translated">ImportDeclaration</target>
        </trans-unit>
        <trans-unit id="e23adeb5c008391316e0c7840edb5f056d234e51" translate="yes" xml:space="preserve">
          <source>ImportDeclaration and ExportDeclaration</source>
          <target state="translated">Declaración de Importación y ExportaciónDeclaración</target>
        </trans-unit>
        <trans-unit id="512f7b91ec0d8627411f038f8a785a9f4f839ad5" translate="yes" xml:space="preserve">
          <source>Imports are an ES6/ES2015 standard for making the functionality of other modules available in your current module. In CommonJS this is implemented through the &lt;code&gt;require()&lt;/code&gt; call which makes this ESLint rule roughly equivalent to its CommonJS counterpart &lt;code&gt;no-restricted-modules&lt;/code&gt;.</source>
          <target state="translated">Las importaciones son un est&amp;aacute;ndar ES6 / ES2015 para hacer que la funcionalidad de otros m&amp;oacute;dulos est&amp;eacute; disponible en su m&amp;oacute;dulo actual. En CommonJS esto se implementa a trav&amp;eacute;s de la llamada &lt;code&gt;require()&lt;/code&gt; que hace que esta regla de ESLint sea aproximadamente equivalente a su contraparte de CommonJS &lt;code&gt;no-restricted-modules&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="18df2daa90a7f6f769b0f156d9d53dd73803f193" translate="yes" xml:space="preserve">
          <source>In 0.x, the &lt;code&gt;cli&lt;/code&gt; object was exported for use by external tools. It was later deprecated in favor of &lt;code&gt;CLIEngine&lt;/code&gt;. In v1.0.0, we are no longer exporting &lt;code&gt;cli&lt;/code&gt; as it should not be used by external tools. This will break existing tools that make use of it.</source>
          <target state="translated">En 0.x, el objeto &lt;code&gt;cli&lt;/code&gt; se export&amp;oacute; para su uso por herramientas externas. M&amp;aacute;s tarde fue desaprobado a favor de &lt;code&gt;CLIEngine&lt;/code&gt; . En v1.0.0, ya no exportamos &lt;code&gt;cli&lt;/code&gt; , ya que no deber&amp;iacute;a ser utilizado por herramientas externas. Esto romper&amp;aacute; las herramientas existentes que lo utilizan.</target>
        </trans-unit>
        <trans-unit id="5898b7f28a0e71c9b161ddb4ca225bd973b5e97c" translate="yes" xml:space="preserve">
          <source>In 2.0.0, &lt;code&gt;window&lt;/code&gt; is no longer located in &lt;code&gt;Scope#through&lt;/code&gt; because we have added back the correct declaration. That means you can reference the &lt;code&gt;window&lt;/code&gt; object (or any other global object) directly. So the previous example would change to this:</source>
          <target state="translated">En 2.0.0, la &lt;code&gt;window&lt;/code&gt; ya no se encuentra en &lt;code&gt;Scope#through&lt;/code&gt; porque hemos agregado la declaraci&amp;oacute;n correcta. Eso significa que puede hacer referencia al objeto de la &lt;code&gt;window&lt;/code&gt; (o cualquier otro objeto global) directamente. Entonces el ejemplo anterior cambiar&amp;iacute;a a esto:</target>
        </trans-unit>
        <trans-unit id="05d96a1c4cc6fce528d734e47e75612567aa64df" translate="yes" xml:space="preserve">
          <source>In 2.0.0, the following 11 rules were added to &lt;code&gt;&quot;eslint:recommended&quot;&lt;/code&gt;.</source>
          <target state="translated">En 2.0.0, se agregaron las siguientes 11 reglas a &lt;code&gt;&quot;eslint:recommended&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c17a66e49943e18d906b5c12b9a5610dc4ab2300" translate="yes" xml:space="preserve">
          <source>In 3.0.0, the following rules were added to &lt;code&gt;&quot;eslint:recommended&quot;&lt;/code&gt;:</source>
          <target state="translated">En 3.0.0, se agregaron las siguientes reglas a &lt;code&gt;&quot;eslint:recommended&quot;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="d9538a421f15d2f2ded0595be1de71484d2215ae" translate="yes" xml:space="preserve">
          <source>In 3.x, there was a bug where references to scoped NPM packages as plugins in config files could omit the scope. For example, in 3.x the following config was legal:</source>
          <target state="translated">En 3.x,hubo un error en el que las referencias a los paquetes NPM de alcance como plugins en los archivos de configuración podían omitir el alcance.Por ejemplo,en 3.x la siguiente configuración era legal:</target>
        </trans-unit>
        <trans-unit id="4a1986599cc9b6d638b666c0d5c5c84604abcd28" translate="yes" xml:space="preserve">
          <source>In 4.0, shebang comments are treated as comment tokens of type &lt;code&gt;Shebang&lt;/code&gt; and will be returned by any &lt;code&gt;SourceCode&lt;/code&gt; method that returns comments. The goal of this change is to make working with shebang comments more consistent with how other tokens are handled.</source>
          <target state="translated">En 4.0, los comentarios shebang se tratan como tokens de comentario de tipo &lt;code&gt;Shebang&lt;/code&gt; y ser&amp;aacute;n devueltos por cualquier m&amp;eacute;todo &lt;code&gt;SourceCode&lt;/code&gt; que devuelva comentarios. El objetivo de este cambio es hacer que trabajar con los comentarios de shebang sea m&amp;aacute;s coherente con la forma en que se manejan otros tokens.</target>
        </trans-unit>
        <trans-unit id="16bc04c506c5ab833d227d4d6e4907ae0bdb1f50" translate="yes" xml:space="preserve">
          <source>In 4.0, we have moved away from the concept of comment attachment and have moved all comment handling logic into ESLint itself. This should make it easier to develop custom parsers, but it also means that AST nodes will no longer have &lt;code&gt;leadingComments&lt;/code&gt; and &lt;code&gt;trailingComments&lt;/code&gt; properties. Conceptually, rule authors can now think of comments in the context of tokens rather than AST nodes.</source>
          <target state="translated">En 4.0, nos hemos alejado del concepto de adjuntar comentarios y hemos trasladado toda la l&amp;oacute;gica de manejo de comentarios a ESLint. Esto deber&amp;iacute;a facilitar el desarrollo de analizadores personalizados, pero tambi&amp;eacute;n significa que los nodos AST ya no tendr&amp;aacute;n las propiedades &lt;code&gt;leadingComments&lt;/code&gt; y &lt;code&gt;trailingComments&lt;/code&gt; . Conceptualmente, los autores de reglas ahora pueden pensar en comentarios en el contexto de tokens en lugar de nodos AST.</target>
        </trans-unit>
        <trans-unit id="00f714d17f0050b761984997f366964ef0c19b70" translate="yes" xml:space="preserve">
          <source>In 4.0.0, the &lt;code&gt;indent&lt;/code&gt; rule has been rewritten. The new version of the rule will report some indentation errors that the old version of the rule did not catch. Additionally, the indentation of &lt;code&gt;MemberExpression&lt;/code&gt; nodes, function parameters, and function arguments will now be checked by default (it was previously ignored by default for backwards compatibility).</source>
          <target state="translated">En 4.0.0, la regla de &lt;code&gt;indent&lt;/code&gt; se ha reescrito. La nueva versi&amp;oacute;n de la regla informar&amp;aacute; algunos errores de sangr&amp;iacute;a que la versi&amp;oacute;n anterior de la regla no detect&amp;oacute;. Adem&amp;aacute;s, la sangr&amp;iacute;a de los nodos de &lt;code&gt;MemberExpression&lt;/code&gt; , los par&amp;aacute;metros de funci&amp;oacute;n y los argumentos de funci&amp;oacute;n ahora se comprobar&amp;aacute;n de forma predeterminada (anteriormente se ignoraba de forma predeterminada por compatibilidad con versiones anteriores).</target>
        </trans-unit>
        <trans-unit id="520e73186dae0d7b16f745db5f763187ed794910" translate="yes" xml:space="preserve">
          <source>In &lt;strong&gt;ECMAScript&lt;/strong&gt; modules, which always have strict mode semantics, the directives are unnecessary.</source>
          <target state="translated">En los m&amp;oacute;dulos &lt;strong&gt;ECMAScript&lt;/strong&gt; , que siempre tienen una sem&amp;aacute;ntica de modo estricta, las directivas son innecesarias.</target>
        </trans-unit>
        <trans-unit id="65d11792aba2f3af0b5566f3cb910f10a5d5d222" translate="yes" xml:space="preserve">
          <source>In April 2016, we &lt;a href=&quot;https://eslint.org/blog/2016/04/welcoming-jscs-to-eslint&quot;&gt;announced&lt;/a&gt; that the JSCS project was shutting down and the JSCS team would be joining the ESLint team. This guide is intended to help those who are using JSCS to migrate their settings and projects to use ESLint. We've tried to automate as much of the conversion as possible, but there are some manual changes that are needed.</source>
          <target state="translated">En abril de 2016, &lt;a href=&quot;https://eslint.org/blog/2016/04/welcoming-jscs-to-eslint&quot;&gt;anunciamos&lt;/a&gt; que el proyecto JSCS se cerrar&amp;iacute;a y que el equipo JSCS se unir&amp;iacute;a al equipo de ESLint. Esta gu&amp;iacute;a est&amp;aacute; destinada a ayudar a quienes usan JSCS a migrar sus configuraciones y proyectos para usar ESLint. Hemos intentado automatizar la mayor parte de la conversi&amp;oacute;n posible, pero se necesitan algunos cambios manuales.</target>
        </trans-unit>
        <trans-unit id="b23708a1c68d550b884d817586351e04c0ec1e6b" translate="yes" xml:space="preserve">
          <source>In ECMAScript 5.1, &lt;code&gt;Object.create&lt;/code&gt; was added, which enables the creation of objects with a specified &lt;code&gt;[[Prototype]]&lt;/code&gt;. &lt;code&gt;Object.create(null)&lt;/code&gt; is a common pattern used to create objects that will be used as a Map. This can lead to errors when it is assumed that objects will have properties from &lt;code&gt;Object.prototype&lt;/code&gt;. This rule prevents calling some &lt;code&gt;Object.prototype&lt;/code&gt; methods directly from an object.</source>
          <target state="translated">En ECMAScript 5.1, se agreg&amp;oacute; &lt;code&gt;Object.create&lt;/code&gt; , que permite la creaci&amp;oacute;n de objetos con un &lt;code&gt;[[Prototype]]&lt;/code&gt; espec&amp;iacute;fico . &lt;code&gt;Object.create(null)&lt;/code&gt; es un patr&amp;oacute;n com&amp;uacute;n que se utiliza para crear objetos que se utilizar&amp;aacute;n como mapa. Esto puede provocar errores cuando se asume que los objetos tendr&amp;aacute;n propiedades de &lt;code&gt;Object.prototype&lt;/code&gt; . Esta regla evita llamar a algunos m&amp;eacute;todos &lt;code&gt;Object.prototype&lt;/code&gt; directamente desde un objeto.</target>
        </trans-unit>
        <trans-unit id="425012cd9483a50d08725272bb44280b01fa5c2b" translate="yes" xml:space="preserve">
          <source>In ES2015 (ES6) or later, if you don't want to be notified about &lt;code&gt;Function.prototype.apply()&lt;/code&gt; callings, you can safely disable this rule.</source>
          <target state="translated">En ES2015 (ES6) o posterior, si no desea que se le notifique sobre las llamadas de &lt;code&gt;Function.prototype.apply()&lt;/code&gt; , puede desactivar esta regla de manera segura.</target>
        </trans-unit>
        <trans-unit id="7288feb7f3cbe9e2c5aa84dc1b8995f09043f354" translate="yes" xml:space="preserve">
          <source>In ES2015 (ES6) or later, if you don't want to be notified about &lt;code&gt;arguments&lt;/code&gt; variables, then it's safe to disable this rule.</source>
          <target state="translated">En ES2015 (ES6) o posterior, si no desea que se le notifique acerca de las variables de &lt;code&gt;arguments&lt;/code&gt; , es seguro deshabilitar esta regla.</target>
        </trans-unit>
        <trans-unit id="c6e27cc5398617c234e14f6fdd9c136c292789aa" translate="yes" xml:space="preserve">
          <source>In ES2015 (ES6) or later, if you don't want to be notified about duplicate names in class members, you can safely disable this rule.</source>
          <target state="translated">En ES2015 (ES6)o más tarde,si no quieres ser notificado sobre los nombres duplicados en los miembros de la clase,puedes desactivar esta regla de forma segura.</target>
        </trans-unit>
        <trans-unit id="1b0ab634b81ee05b23f8702255df744fed8eb12f" translate="yes" xml:space="preserve">
          <source>In ES2015 (ES6) or later, if you don't want to be notified about places where Reflect could be used, you can safely disable this rule.</source>
          <target state="translated">En ES2015 (ES6)o más tarde,si no quiere que se le notifique sobre los lugares donde se puede usar el Reflect,puede desactivar esta regla de forma segura.</target>
        </trans-unit>
        <trans-unit id="d2eb7a2147b19e9a68b53dd99798118a281e8775" translate="yes" xml:space="preserve">
          <source>In ES2015 (ES6) or later, if you don't want to be notified about string concatenation, you can safely disable this rule.</source>
          <target state="translated">En ES2015 (ES6)o más tarde,si no quieres ser notificado sobre la concatenación de cadenas,puedes desactivar esta regla de forma segura.</target>
        </trans-unit>
        <trans-unit id="79284304dcf5a3c4453db8bcc5a3d21330ba7616" translate="yes" xml:space="preserve">
          <source>In ES2015 (ES6), we can use template literals instead of string concatenation.</source>
          <target state="translated">En ES2015 (ES6),podemos usar literales de plantilla en lugar de la concatenación de cadenas.</target>
        </trans-unit>
        <trans-unit id="c45a211d3e50a5f07def68689fe81ce6f3396159" translate="yes" xml:space="preserve">
          <source>In ES2015, one can use spread syntax to call variadic functions.</source>
          <target state="translated">En ES2015,se puede usar la sintaxis spread para llamar a las funciones variadas.</target>
        </trans-unit>
        <trans-unit id="76009c166d3d239347600943770e4ce17bd2a6bd" translate="yes" xml:space="preserve">
          <source>In ES6+ environments that allow the use of function expressions when describing callbacks or function arguments.</source>
          <target state="translated">En entornos ES6+que permiten el uso de expresiones de función cuando se describen devoluciones de llamada o argumentos de función.</target>
        </trans-unit>
        <trans-unit id="d6e9567bb6bc4821161b78d2c46b2c8ee02a2b83" translate="yes" xml:space="preserve">
          <source>In ES6, block-level bindings (&lt;code&gt;let&lt;/code&gt; and &lt;code&gt;const&lt;/code&gt;) introduce a &quot;temporal dead zone&quot; where a &lt;code&gt;ReferenceError&lt;/code&gt; will be thrown with any attempt to access the variable before its declaration.</source>
          <target state="translated">En ES6, las vinculaciones a nivel de bloque ( &lt;code&gt;let&lt;/code&gt; y &lt;code&gt;const&lt;/code&gt; ) introducen una &quot;zona muerta temporal&quot; donde se lanzar&amp;aacute; un &lt;code&gt;ReferenceError&lt;/code&gt; con cualquier intento de acceder a la variable antes de su declaraci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="3c283b77541c32dd8ff6097bc78fb8ab4c5daff4" translate="yes" xml:space="preserve">
          <source>In ES6, code blocks may create a new scope if a block-level binding (&lt;code&gt;let&lt;/code&gt; and &lt;code&gt;const&lt;/code&gt;), a class declaration or a function declaration (in strict mode) are present. A block is not considered redundant in these cases.</source>
          <target state="translated">En ES6, los bloques de c&amp;oacute;digo pueden crear un nuevo alcance si est&amp;aacute;n presentes un enlace a nivel de bloque ( &lt;code&gt;let&lt;/code&gt; y &lt;code&gt;const&lt;/code&gt; ), una declaraci&amp;oacute;n de clase o una declaraci&amp;oacute;n de funci&amp;oacute;n (en modo estricto). Un bloque no se considera redundante en estos casos.</target>
        </trans-unit>
        <trans-unit id="e5f75e3e4423421f164920649e64e4ef38d574fa" translate="yes" xml:space="preserve">
          <source>In ESLint v5, an unsuccessful linting run due to a fatal error will result in an exit code of 2, rather than 1.</source>
          <target state="translated">En ESLint v5,una corrida de pelusa sin éxito debido a un error fatal resultará en un código de salida de 2,en lugar de 1.</target>
        </trans-unit>
        <trans-unit id="eea08ca030095038bf25a737549a277fbe3aba08" translate="yes" xml:space="preserve">
          <source>In ESLint v5, reporting a problem without providing a message always results in an error.</source>
          <target state="translated">En ESLint v5,informar de un problema sin proporcionar un mensaje siempre da lugar a un error.</target>
        </trans-unit>
        <trans-unit id="14faa4b6b34ee8eda4c12e45811ba40e9496a537" translate="yes" xml:space="preserve">
          <source>In ESLint v5, the &lt;code&gt;context.getScope()&lt;/code&gt; method has the same behavior regardless of &lt;code&gt;parserOptions.ecmaVersion&lt;/code&gt; and returns the proper scope. See &lt;a href=&quot;../developer-guide/working-with-rules#contextgetscope&quot;&gt;the documentation&lt;/a&gt; for more details on which scopes are returned.</source>
          <target state="translated">En ESLint v5, el m&amp;eacute;todo &lt;code&gt;context.getScope()&lt;/code&gt; tiene el mismo comportamiento independientemente de &lt;code&gt;parserOptions.ecmaVersion&lt;/code&gt; y devuelve el alcance adecuado. Consulte &lt;a href=&quot;../developer-guide/working-with-rules#contextgetscope&quot;&gt;la documentaci&amp;oacute;n&lt;/a&gt; para obtener m&amp;aacute;s detalles sobre qu&amp;eacute; &amp;aacute;mbitos se devuelven.</target>
        </trans-unit>
        <trans-unit id="bb1ef5c27afbdde2e7a8e173d72c21f7e3ae1a66" translate="yes" xml:space="preserve">
          <source>In ESLint v5, the &lt;code&gt;parent&lt;/code&gt; property is set on all AST nodes before any rules have access to the AST. This makes it easier to write some rules, because the &lt;code&gt;parent&lt;/code&gt; property is always available rather than being mutated behind the scenes. However, as a side-effect of having &lt;code&gt;parent&lt;/code&gt; properties, the AST object has a circular structure the first time a rule sees it (previously, it only had a circular structure after the first rule listeners were called). As a result, a custom rule that enumerates all properties of a node in order to traverse the AST might now loop forever or run out of memory if it does not check for cycles properly.</source>
          <target state="translated">En ESLint v5, la propiedad &lt;code&gt;parent&lt;/code&gt; se establece en todos los nodos AST antes de que cualquier regla tenga acceso al AST. Esto hace que sea m&amp;aacute;s f&amp;aacute;cil escribir algunas reglas, porque la propiedad &lt;code&gt;parent&lt;/code&gt; siempre est&amp;aacute; disponible en lugar de mutar detr&amp;aacute;s de escena. Sin embargo, como efecto secundario de tener propiedades &lt;code&gt;parent&lt;/code&gt; , el objeto AST tiene una estructura circular la primera vez que lo ve una regla (anteriormente, solo ten&amp;iacute;a una estructura circular despu&amp;eacute;s de que se llamaran los primeros oyentes de reglas). Como resultado, una regla personalizada que enumera todas las propiedades de un nodo con el fin de atravesar el AST ahora podr&amp;iacute;a hacer un ciclo indefinido o quedarse sin memoria si no verifica los ciclos correctamente.</target>
        </trans-unit>
        <trans-unit id="02e6562154408a0cd95ff399370b02dae59011b9" translate="yes" xml:space="preserve">
          <source>In ESLint v5, the default parser will now always give the &lt;code&gt;...data&lt;/code&gt; AST node the &lt;code&gt;RestElement&lt;/code&gt; type, even if the (now deprecated) &lt;a href=&quot;#experimental-object-rest-spread&quot;&gt;&lt;code&gt;experimentalObjectRestSpread&lt;/code&gt;&lt;/a&gt; option is enabled. This makes the AST compliant with the current ESTree spec.</source>
          <target state="translated">En ESLint v5, el analizador predeterminado ahora siempre le dar&amp;aacute; al nodo &lt;code&gt;...data&lt;/code&gt; AST el tipo &lt;code&gt;RestElement&lt;/code&gt; , incluso si la opci&amp;oacute;n &lt;a href=&quot;#experimental-object-rest-spread&quot;&gt; &lt;code&gt;experimentalObjectRestSpread&lt;/code&gt; &lt;/a&gt; (ahora en desuso) est&amp;aacute; habilitada. Esto hace que el AST sea compatible con la especificaci&amp;oacute;n ESTree actual.</target>
        </trans-unit>
        <trans-unit id="31a881cb748835a072bf8830b1288b7196f3ecf5" translate="yes" xml:space="preserve">
          <source>In ESLint v5, the default parser will now always give the &lt;code&gt;...data&lt;/code&gt; AST node the &lt;code&gt;SpreadElement&lt;/code&gt; type, even if the (now deprecated) &lt;a href=&quot;#experimental-object-rest-spread&quot;&gt;&lt;code&gt;experimentalObjectRestSpread&lt;/code&gt;&lt;/a&gt; option is enabled. This makes the AST compliant with the current ESTree spec.</source>
          <target state="translated">En ESLint v5, el analizador predeterminado ahora siempre le dar&amp;aacute; al nodo &lt;code&gt;...data&lt;/code&gt; AST el tipo &lt;code&gt;SpreadElement&lt;/code&gt; , incluso si la opci&amp;oacute;n &lt;a href=&quot;#experimental-object-rest-spread&quot;&gt; &lt;code&gt;experimentalObjectRestSpread&lt;/code&gt; &lt;/a&gt; (ahora en desuso) est&amp;aacute; habilitada. Esto hace que el AST sea compatible con la especificaci&amp;oacute;n ESTree actual.</target>
        </trans-unit>
        <trans-unit id="d4431524bfd5c4f07af8235581cb94fca4ff8732" translate="yes" xml:space="preserve">
          <source>In ESLint v6, &lt;code&gt;Linter&lt;/code&gt; will no longer perform any filesystem operations, including loading parsers.</source>
          <target state="translated">En ESLint v6, &lt;code&gt;Linter&lt;/code&gt; ya no realizar&amp;aacute; ninguna operaci&amp;oacute;n del sistema de archivos, incluida la carga de analizadores.</target>
        </trans-unit>
        <trans-unit id="bf67a660608cd3e1668cf8ebedf7ff745592d095" translate="yes" xml:space="preserve">
          <source>In ESLint v6.0.0, a parent config always has precedence over extended configs, even with &lt;code&gt;overrides&lt;/code&gt; blocks.</source>
          <target state="translated">En ESLint v6.0.0, una configuraci&amp;oacute;n principal siempre tiene prioridad sobre las configuraciones extendidas, incluso con bloques de &lt;code&gt;overrides&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c8abbd9afcc5de245675ea3f2aa4947437c8ef25" translate="yes" xml:space="preserve">
          <source>In ESLint, there's a similar option when you use &lt;code&gt;--init&lt;/code&gt;. Just select &quot;Inspect your JavaScript file(s)&quot;:</source>
          <target state="translated">En ESLint, hay una opci&amp;oacute;n similar cuando usa &lt;code&gt;--init&lt;/code&gt; . Simplemente seleccione &quot;Inspeccionar su (s) archivo (s) JavaScript&quot;:</target>
        </trans-unit>
        <trans-unit id="5b59c31296d60785bf4dae3841ef03bc4bd1dfda" translate="yes" xml:space="preserve">
          <source>In ESLint, you can also pipe in code, but you need to use the &lt;code&gt;--stdin&lt;/code&gt; flag:</source>
          <target state="translated">En ESLint, tambi&amp;eacute;n puede canalizar el c&amp;oacute;digo, pero debe usar la &lt;code&gt;--stdin&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="acd5139582c073618b8ef6f0a7ca63779857d618" translate="yes" xml:space="preserve">
          <source>In IE 8 and earlier, the catch clause parameter can overwrite the value of a variable in the outer scope, if that variable has the same name as the catch clause parameter.</source>
          <target state="translated">En IE 8 y anteriores,el parámetro de la cláusula de captura puede sobrescribir el valor de una variable del ámbito exterior,si esa variable tiene el mismo nombre que el parámetro de la cláusula de captura.</target>
        </trans-unit>
        <trans-unit id="2adf1aee416a521238a7c811bd9bd2ecf5e14167" translate="yes" xml:space="preserve">
          <source>In JSCS, you can pipe code in like this:</source>
          <target state="translated">En la JSCS,puedes introducir el código así:</target>
        </trans-unit>
        <trans-unit id="3703d4c15bc56ac828c52126bdc5c7540593b23a" translate="yes" xml:space="preserve">
          <source>In JSON:</source>
          <target state="translated">En JSON:</target>
        </trans-unit>
        <trans-unit id="a82e67122ca4aaac99057c3557502dcfc9509e84" translate="yes" xml:space="preserve">
          <source>In JavaScript that is designed to be executed in the browser, it's considered a best practice to avoid using methods on &lt;code&gt;console&lt;/code&gt;. Such messages are considered to be for debugging purposes and therefore not suitable to ship to the client. In general, calls using &lt;code&gt;console&lt;/code&gt; should be stripped before being pushed to production.</source>
          <target state="translated">En JavaScript que est&amp;aacute; dise&amp;ntilde;ado para ejecutarse en el navegador, se considera una pr&amp;aacute;ctica recomendada evitar el uso de m&amp;eacute;todos en la &lt;code&gt;console&lt;/code&gt; . Dichos mensajes se consideran para fines de depuraci&amp;oacute;n y, por lo tanto, no son adecuados para enviarlos al cliente. En general, las llamadas que usan la &lt;code&gt;console&lt;/code&gt; deben eliminarse antes de pasar a producci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="e26a4ff80b5f3f66c04e4918b45e8756a1c26153" translate="yes" xml:space="preserve">
          <source>In JavaScript, &lt;code&gt;NaN&lt;/code&gt; is a special value of the &lt;code&gt;Number&lt;/code&gt; type. It's used to represent any of the &quot;not-a-number&quot; values represented by the double-precision 64-bit format as specified by the IEEE Standard for Binary Floating-Point Arithmetic.</source>
          <target state="translated">En JavaScript, &lt;code&gt;NaN&lt;/code&gt; es un valor especial del tipo &lt;code&gt;Number&lt;/code&gt; . Se utiliza para representar cualquiera de los valores &quot;que no son un n&amp;uacute;mero&quot; representados por el formato de 64 bits de doble precisi&amp;oacute;n, seg&amp;uacute;n lo especificado por el est&amp;aacute;ndar IEEE para aritm&amp;eacute;tica binaria de coma flotante.</target>
        </trans-unit>
        <trans-unit id="9bd2fc151901451626280161ac11b4b93b4b50fd" translate="yes" xml:space="preserve">
          <source>In JavaScript, a variable that is declared and not initialized to any value automatically gets the value of &lt;code&gt;undefined&lt;/code&gt;. For example:</source>
          <target state="translated">En JavaScript, una variable que se declara y no se inicializa con ning&amp;uacute;n valor obtiene autom&amp;aacute;ticamente el valor de &lt;code&gt;undefined&lt;/code&gt; . Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="b60aba9b6eda269c9c92c576d2d7b17436dc1a04" translate="yes" xml:space="preserve">
          <source>In JavaScript, it's possible to redeclare the same variable name using &lt;code&gt;var&lt;/code&gt;. This can lead to confusion as to where the variable is actually declared and initialized.</source>
          <target state="translated">En JavaScript, es posible volver a declarar el mismo nombre de variable usando &lt;code&gt;var&lt;/code&gt; . Esto puede generar confusi&amp;oacute;n en cuanto a d&amp;oacute;nde se declara e inicializa realmente la variable.</target>
        </trans-unit>
        <trans-unit id="ae3ae9da35b031e6fe272d750d08d43b247a9241" translate="yes" xml:space="preserve">
          <source>In JavaScript, one can access properties using the dot notation (&lt;code&gt;foo.bar&lt;/code&gt;) or square-bracket notation (&lt;code&gt;foo[&quot;bar&quot;]&lt;/code&gt;). However, the dot notation is often preferred because it is easier to read, less verbose, and works better with aggressive JavaScript minimizers.</source>
          <target state="translated">En JavaScript, uno puede acceder a las propiedades usando la notaci&amp;oacute;n de puntos ( &lt;code&gt;foo.bar&lt;/code&gt; ) o la notaci&amp;oacute;n de corchetes ( &lt;code&gt;foo[&quot;bar&quot;]&lt;/code&gt; ). Sin embargo, a menudo se prefiere la notaci&amp;oacute;n de puntos porque es m&amp;aacute;s f&amp;aacute;cil de leer, menos detallada y funciona mejor con minimizadores de JavaScript agresivos.</target>
        </trans-unit>
        <trans-unit id="79c19c72e76be7de1e81564fdd907fa54ae18eb9" translate="yes" xml:space="preserve">
          <source>In JavaScript, prior to ES6, a function declaration is only allowed in the first level of a program or the body of another function, though parsers sometimes &lt;a href=&quot;https://code.google.com/p/esprima/issues/detail?id=422&quot;&gt;erroneously accept them elsewhere&lt;/a&gt;. This only applies to function declarations; named or anonymous function expressions can occur anywhere an expression is permitted.</source>
          <target state="translated">En JavaScript, antes de ES6, una declaraci&amp;oacute;n de funci&amp;oacute;n solo se permite en el primer nivel de un programa o en el cuerpo de otra funci&amp;oacute;n, aunque los analizadores a veces las &lt;a href=&quot;https://code.google.com/p/esprima/issues/detail?id=422&quot;&gt;aceptan err&amp;oacute;neamente en otros lugares&lt;/a&gt; . Esto solo se aplica a las declaraciones de funciones; Las expresiones de funci&amp;oacute;n nombradas o an&amp;oacute;nimas pueden ocurrir en cualquier lugar donde se permita una expresi&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="803af5f5d14791d201ae8d61d435f1c64184268e" translate="yes" xml:space="preserve">
          <source>In JavaScript, prior to ES6, standalone code blocks delimited by curly braces do not create a new scope and have no use. For example, these curly braces do nothing to &lt;code&gt;foo&lt;/code&gt;:</source>
          <target state="translated">En JavaScript, antes de ES6, los bloques de c&amp;oacute;digo independientes delimitados por llaves no crean un nuevo alcance y no tienen uso. Por ejemplo, estas llaves no hacen nada para &lt;code&gt;foo&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="c8e0cb0f20079a63c0ebee7c35d2763450e0da3b" translate="yes" xml:space="preserve">
          <source>In JavaScript, prior to ES6, variable and function declarations are hoisted to the top of a scope, so it's possible to use identifiers before their formal declarations in code. This can be confusing and some believe it is best to always declare variables and functions before using them.</source>
          <target state="translated">En JavaScript,antes del ES6,las declaraciones de variables y funciones se elevan a la parte superior de un ámbito,por lo que es posible utilizar identificadores antes de sus declaraciones formales en código.Esto puede ser confuso y algunos creen que es mejor declarar siempre las variables y funciones antes de usarlas.</target>
        </trans-unit>
        <trans-unit id="1823798885782ba7322754df0cb99b7b3ed765ea" translate="yes" xml:space="preserve">
          <source>In JavaScript, returning a value in the constructor of a class may be a mistake. Forbidding this pattern prevents mistakes resulting from unfamiliarity with the language or a copy-paste error.</source>
          <target state="translated">En JavaScript,devolver un valor en el constructor de una clase puede ser un error.Prohibir este patrón evita los errores que resultan de la falta de familiaridad con el lenguaje o un error de copiar y pegar.</target>
        </trans-unit>
        <trans-unit id="d5dbdb528c78d6964e655c920b5562c6ac7357b6" translate="yes" xml:space="preserve">
          <source>In JavaScript, there are a lot of different ways to convert value types. Some of them might be hard to read and understand.</source>
          <target state="translated">En JavaScript,hay muchas maneras diferentes de convertir los tipos de valores.Algunas de ellas pueden ser difíciles de leer y entender.</target>
        </trans-unit>
        <trans-unit id="5f85fcb870ec98a4b8e042f1f4f7d1ee7d391150" translate="yes" xml:space="preserve">
          <source>In JavaScript, variables can be assigned during declaration, or at any point afterwards using an assignment statement. For example, in the following code, &lt;code&gt;foo&lt;/code&gt; is initialized during declaration, while &lt;code&gt;bar&lt;/code&gt; is initialized later.</source>
          <target state="translated">En JavaScript, las variables se pueden asignar durante la declaraci&amp;oacute;n o en cualquier momento posterior mediante una declaraci&amp;oacute;n de asignaci&amp;oacute;n. Por ejemplo, en el siguiente c&amp;oacute;digo, &lt;code&gt;foo&lt;/code&gt; se inicializa durante la declaraci&amp;oacute;n, mientras que &lt;code&gt;bar&lt;/code&gt; se inicializa m&amp;aacute;s tarde.</target>
        </trans-unit>
        <trans-unit id="f2431e0c54f3ccddb9b8b55c40ef110d03001a01" translate="yes" xml:space="preserve">
          <source>In JavaScript, you can extend any object, including builtin or &quot;native&quot; objects. Sometimes people change the behavior of these native objects in ways that break the assumptions made about them in other parts of the code.</source>
          <target state="translated">En JavaScript,puede extender cualquier objeto,incluyendo los objetos incorporados o &quot;nativos&quot;.A veces la gente cambia el comportamiento de estos objetos nativos de manera que se rompen las suposiciones hechas sobre ellos en otras partes del código.</target>
        </trans-unit>
        <trans-unit id="5e343893daa54be7d2e9b003885e6efda1094561" translate="yes" xml:space="preserve">
          <source>In Node.js, a common pattern for dealing with asynchronous behavior is called the callback pattern. This pattern expects an &lt;code&gt;Error&lt;/code&gt; object or &lt;code&gt;null&lt;/code&gt; as the first argument of the callback. Forgetting to handle these errors can lead to some really strange behavior in your application.</source>
          <target state="translated">En Node.js, un patr&amp;oacute;n com&amp;uacute;n para tratar el comportamiento asincr&amp;oacute;nico se llama patr&amp;oacute;n de devoluci&amp;oacute;n de llamada. Este patr&amp;oacute;n espera un objeto &lt;code&gt;Error&lt;/code&gt; o &lt;code&gt;null&lt;/code&gt; como primer argumento de la devoluci&amp;oacute;n de llamada. Olvidar manejar estos errores puede llevar a un comportamiento realmente extra&amp;ntilde;o en su aplicaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="54e83e14b97a21dfc3164689e39c9953204a0216" translate="yes" xml:space="preserve">
          <source>In Node.js, module dependencies are included using the &lt;code&gt;require()&lt;/code&gt; function, such as:</source>
          <target state="translated">En Node.js, las dependencias del m&amp;oacute;dulo se incluyen mediante la funci&amp;oacute;n &lt;code&gt;require()&lt;/code&gt; , como:</target>
        </trans-unit>
        <trans-unit id="eec858697f015c807640f5be285c6675cc7d8cf3" translate="yes" xml:space="preserve">
          <source>In Node.js, most I/O is done through asynchronous methods. However, there are often synchronous versions of the asynchronous methods. For example, &lt;code&gt;fs.exists()&lt;/code&gt; and &lt;code&gt;fs.existsSync()&lt;/code&gt;. In some contexts, using synchronous operations is okay (if, as with ESLint, you are writing a command line utility). However, in other contexts the use of synchronous operations is considered a bad practice that should be avoided. For example, if you are running a high-travel web server on Node.js, you should consider carefully if you want to allow any synchronous operations that could lock up the server.</source>
          <target state="translated">En Node.js, la mayor&amp;iacute;a de las E / S se realizan a trav&amp;eacute;s de m&amp;eacute;todos asincr&amp;oacute;nicos. Sin embargo, a menudo existen versiones sincr&amp;oacute;nicas de los m&amp;eacute;todos asincr&amp;oacute;nicos. Por ejemplo, &lt;code&gt;fs.exists()&lt;/code&gt; y &lt;code&gt;fs.existsSync()&lt;/code&gt; . En algunos contextos, est&amp;aacute; bien usar operaciones s&amp;iacute;ncronas (si, como con ESLint, est&amp;aacute; escribiendo una utilidad de l&amp;iacute;nea de comandos). Sin embargo, en otros contextos, el uso de operaciones s&amp;iacute;ncronas se considera una mala pr&amp;aacute;ctica que debe evitarse. Por ejemplo, si est&amp;aacute; ejecutando un servidor web de alto recorrido en Node.js, debe considerar cuidadosamente si desea permitir cualquier operaci&amp;oacute;n sincr&amp;oacute;nica que pueda bloquear el servidor.</target>
        </trans-unit>
        <trans-unit id="8fb05857d9c01ca30417b8554d82f2317ca35e6b" translate="yes" xml:space="preserve">
          <source>In Node.js, the &lt;code&gt;__dirname&lt;/code&gt; and &lt;code&gt;__filename&lt;/code&gt; global variables contain the directory path and the file path of the currently executing script file, respectively. Sometimes, developers try to use these variables to create paths to other files, such as:</source>
          <target state="translated">En Node.js, las variables globales &lt;code&gt;__dirname&lt;/code&gt; y &lt;code&gt;__filename&lt;/code&gt; contienen la ruta del directorio y la ruta del archivo del script que se est&amp;aacute; ejecutando actualmente, respectivamente. A veces, los desarrolladores intentan usar estas variables para crear rutas a otros archivos, como:</target>
        </trans-unit>
        <trans-unit id="986462bdb57daa520d17d6d171bfef6c12a9e4c1" translate="yes" xml:space="preserve">
          <source>In Node.js, the behavior of the &lt;code&gt;Buffer&lt;/code&gt; constructor is different depending on the type of its argument. Passing an argument from user input to &lt;code&gt;Buffer()&lt;/code&gt; without validating its type can lead to security vulnerabilities such as remote memory disclosure and denial of service. As a result, the &lt;code&gt;Buffer&lt;/code&gt; constructor has been deprecated and should not be used. Use the producer methods &lt;code&gt;Buffer.from&lt;/code&gt;, &lt;code&gt;Buffer.alloc&lt;/code&gt;, and &lt;code&gt;Buffer.allocUnsafe&lt;/code&gt; instead.</source>
          <target state="translated">En Node.js, el comportamiento del constructor &lt;code&gt;Buffer&lt;/code&gt; es diferente seg&amp;uacute;n el tipo de argumento. Pasar un argumento de la entrada del usuario a &lt;code&gt;Buffer()&lt;/code&gt; sin validar su tipo puede conducir a vulnerabilidades de seguridad como la divulgaci&amp;oacute;n de memoria remota y la denegaci&amp;oacute;n de servicio. Como resultado, el constructor &lt;code&gt;Buffer&lt;/code&gt; ha quedado obsoleto y no deber&amp;iacute;a utilizarse. En su lugar, utilice los m&amp;eacute;todos de productor &lt;code&gt;Buffer.from&lt;/code&gt; , &lt;code&gt;Buffer.alloc&lt;/code&gt; y &lt;code&gt;Buffer.allocUnsafe&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="01b5e11bafdf37ab445e4c84a4053b58bfebcbed" translate="yes" xml:space="preserve">
          <source>In a codebase that has both strict and non-strict code, either turn this rule off, or &lt;a href=&quot;../user-guide/configuring&quot;&gt;selectively disable it&lt;/a&gt; where necessary. For example, functions referencing &lt;code&gt;arguments.callee&lt;/code&gt; are invalid in strict mode. A &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Strict_mode/Transitioning_to_strict_mode#Differences_from_non-strict_to_strict&quot;&gt;full list of strict mode differences&lt;/a&gt; is available on MDN.</source>
          <target state="translated">En una base de c&amp;oacute;digo que tenga tanto c&amp;oacute;digo estricto como no estricto, desactive esta regla o &lt;a href=&quot;../user-guide/configuring&quot;&gt;desact&amp;iacute;vela selectivamente&lt;/a&gt; cuando sea necesario. Por ejemplo, las funciones que hacen referencia a &lt;code&gt;arguments.callee&lt;/code&gt; no son v&amp;aacute;lidas en modo estricto. Una &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Strict_mode/Transitioning_to_strict_mode#Differences_from_non-strict_to_strict&quot;&gt;lista completa de diferencias estrictas de modo&lt;/a&gt; est&amp;aacute; disponible en MDN.</target>
        </trans-unit>
        <trans-unit id="10ce8149f3ae92cb0fb6941142cf5493644f910b" translate="yes" xml:space="preserve">
          <source>In a custom rule or plugin, you can omit &lt;code&gt;docs&lt;/code&gt; or include any properties that you need in it.</source>
          <target state="translated">En una regla o complemento personalizado, puede omitir &lt;code&gt;docs&lt;/code&gt; o incluir las propiedades que necesite en &amp;eacute;l.</target>
        </trans-unit>
        <trans-unit id="72c9201ea52e4b148492fb5b692b369da55a6f80" translate="yes" xml:space="preserve">
          <source>In addition to any patterns in a &lt;code&gt;.eslintignore&lt;/code&gt; file, ESLint always ignores files in &lt;code&gt;/node_modules/*&lt;/code&gt; and &lt;code&gt;/bower_components/*&lt;/code&gt;.</source>
          <target state="translated">Adem&amp;aacute;s de cualquier patr&amp;oacute;n en un archivo &lt;code&gt;.eslintignore&lt;/code&gt; , ESLint siempre ignora los archivos en &lt;code&gt;/node_modules/*&lt;/code&gt; y &lt;code&gt;/bower_components/*&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fc12ca84af3f6382d0762d431b9d50690920ac41" translate="yes" xml:space="preserve">
          <source>In addition to non-ES6 environments, existing JavaScript projects that are beginning to introduce ES6 into their codebase may not want to apply this rule if the cost of migrating from &lt;code&gt;var&lt;/code&gt; to &lt;code&gt;let&lt;/code&gt; is too costly.</source>
          <target state="translated">Adem&amp;aacute;s de los entornos que no son de ES6, es posible que los proyectos de JavaScript existentes que est&amp;aacute;n comenzando a introducir ES6 en su base de c&amp;oacute;digo no quieran aplicar esta regla si el costo de migrar de &lt;code&gt;var&lt;/code&gt; a &lt;code&gt;let&lt;/code&gt; es demasiado costoso.</target>
        </trans-unit>
        <trans-unit id="c1150e19bd11cdc7072eeae11448462abf32644f" translate="yes" xml:space="preserve">
          <source>In addition to the above, there is currently a proposal to add object rest and spread properties to the spec. They can be used as follows:</source>
          <target state="translated">Además de lo anterior,actualmente existe una propuesta para añadir las propiedades de reposo de objetos y de dispersión a la especificación.Pueden utilizarse de la siguiente manera:</target>
        </trans-unit>
        <trans-unit id="252f70da347da561455e66862058935add889d81" translate="yes" xml:space="preserve">
          <source>In addition to the properties above, invalid test cases can also have the following properties:</source>
          <target state="translated">Además de las propiedades mencionadas,los casos de prueba no válidos también pueden tener las siguientes propiedades:</target>
        </trans-unit>
        <trans-unit id="1712f8c3199dccd12aeedb6949eed21b105861f8" translate="yes" xml:space="preserve">
          <source>In case of &lt;code&gt;&quot;always&quot;&lt;/code&gt; option, set an exception to &lt;code&gt;false&lt;/code&gt; to enable it:</source>
          <target state="translated">En el caso de la opci&amp;oacute;n &lt;code&gt;&quot;always&quot;&lt;/code&gt; , establezca una excepci&amp;oacute;n en &lt;code&gt;false&lt;/code&gt; para habilitarla:</target>
        </trans-unit>
        <trans-unit id="7e2e3e9f152c06b2ea5727f6f3c6e80f43018dd6" translate="yes" xml:space="preserve">
          <source>In case of &lt;code&gt;&quot;never&quot;&lt;/code&gt; option, set an exception to &lt;code&gt;true&lt;/code&gt; to enable it:</source>
          <target state="translated">En el caso de la opci&amp;oacute;n &lt;code&gt;&quot;never&quot;&lt;/code&gt; , establezca una excepci&amp;oacute;n en &lt;code&gt;true&lt;/code&gt; para habilitarla:</target>
        </trans-unit>
        <trans-unit id="92c16a623230638ab21900e3843f89d1124021ce" translate="yes" xml:space="preserve">
          <source>In conditional statements, it is very easy to mistype a comparison operator (such as &lt;code&gt;==&lt;/code&gt;) as an assignment operator (such as &lt;code&gt;=&lt;/code&gt;). For example:</source>
          <target state="translated">En declaraciones condicionales, es muy f&amp;aacute;cil escribir mal un operador de comparaci&amp;oacute;n (como &lt;code&gt;==&lt;/code&gt; ) como operador de asignaci&amp;oacute;n (como &lt;code&gt;=&lt;/code&gt; ). Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="1fb410a3ea7892596a7988ae7c901cf7e2882ac6" translate="yes" xml:space="preserve">
          <source>In contexts such as an &lt;code&gt;if&lt;/code&gt; statement's test where the result of the expression will already be coerced to a Boolean, casting to a Boolean via double negation (&lt;code&gt;!!&lt;/code&gt;) or a &lt;code&gt;Boolean&lt;/code&gt; call is unnecessary. For example, these &lt;code&gt;if&lt;/code&gt; statements are equivalent:</source>
          <target state="translated">En contextos como la prueba de una instrucci&amp;oacute;n &lt;code&gt;if&lt;/code&gt; , donde el resultado de la expresi&amp;oacute;n ya se convertir&amp;aacute; en un booleano, no es necesario convertirlo en un booleano mediante una doble negaci&amp;oacute;n ( &lt;code&gt;!!&lt;/code&gt; ) o una llamada &lt;code&gt;Boolean&lt;/code&gt; . Por ejemplo, estas declaraciones &lt;code&gt;if&lt;/code&gt; son equivalentes:</target>
        </trans-unit>
        <trans-unit id="c8599f68059b0b2f8fbd7472705607eace6b16b0" translate="yes" xml:space="preserve">
          <source>In each case, the settings in the configuration file override default settings.</source>
          <target state="translated">En cada caso,los ajustes del archivo de configuración anulan los ajustes predeterminados.</target>
        </trans-unit>
        <trans-unit id="649357e05b50e25c812fc667d0a51838efee7ebc" translate="yes" xml:space="preserve">
          <source>In each of the following examples, the &lt;code&gt;&quot;always&quot;&lt;/code&gt; option is assumed.</source>
          <target state="translated">En cada uno de los siguientes ejemplos, se asume la opci&amp;oacute;n &lt;code&gt;&quot;always&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a9ab58973a1b0451e64158fd130c4275226ff167" translate="yes" xml:space="preserve">
          <source>In environments outside of CommonJS or ECMAScript modules, you may use &lt;code&gt;var&lt;/code&gt; to create a global variable that may be used by other scripts. You can use the &lt;code&gt;/* exported variableName */&lt;/code&gt; comment block to indicate that this variable is being exported and therefore should not be considered unused.</source>
          <target state="translated">En entornos fuera de los m&amp;oacute;dulos CommonJS o ECMAScript, puede utilizar &lt;code&gt;var&lt;/code&gt; para crear una variable global que puedan utilizar otros scripts. Puede usar el bloque de comentario &lt;code&gt;/* exported variableName */&lt;/code&gt; para indicar que esta variable se est&amp;aacute; exportando y, por lo tanto, no debe considerarse no utilizada.</target>
        </trans-unit>
        <trans-unit id="f39532fe56426ff07a71783a151b540911e49b3c" translate="yes" xml:space="preserve">
          <source>In environments that have not yet adopted ES6 language features (ES3/5).</source>
          <target state="translated">En los entornos que aún no han adoptado las características del lenguaje ES6 (ES3/5).</target>
        </trans-unit>
        <trans-unit id="1a2489feba41fd4a92ae4a53d0b6dbcbf4bb794f" translate="yes" xml:space="preserve">
          <source>In general, ESLint core rules must be:</source>
          <target state="translated">En general,las reglas básicas de ESLint deben ser:</target>
        </trans-unit>
        <trans-unit id="730c374622cf98488a7fb84f8403c25862d877fe" translate="yes" xml:space="preserve">
          <source>In general, no comment style is any more or less valid than any others, but many developers would agree that a consistent style can improve a project's maintainability.</source>
          <target state="translated">En general,el estilo de no comentarios es más o menos válido que cualquier otro,pero muchos desarrolladores estarían de acuerdo en que un estilo consistente puede mejorar la mantenibilidad de un proyecto.</target>
        </trans-unit>
        <trans-unit id="f2dd07b1a4b0ae05f069e2c86041c05b70c13a77" translate="yes" xml:space="preserve">
          <source>In many cases the iterations of a loop are not actually independent of each-other. For example, the output of one iteration might be used as the input to another. Or, loops may be used to retry asynchronous operations that were unsuccessful. Or, loops may be used to prevent your code from sending an excessive amount of requests in parallel. In such cases it makes sense to use &lt;code&gt;await&lt;/code&gt; within a loop and it is recommended to disable the rule via a standard ESLint disable comment.</source>
          <target state="translated">En muchos casos, las iteraciones de un bucle no son realmente independientes entre s&amp;iacute;. Por ejemplo, la salida de una iteraci&amp;oacute;n podr&amp;iacute;a usarse como entrada a otra. O bien, los bucles se pueden utilizar para reintentar operaciones asincr&amp;oacute;nicas que no tuvieron &amp;eacute;xito. O pueden usarse bucles para evitar que su c&amp;oacute;digo env&amp;iacute;e una cantidad excesiva de solicitudes en paralelo. En tales casos, tiene sentido usar &lt;code&gt;await&lt;/code&gt; dentro de un bucle y se recomienda desactivar la regla a trav&amp;eacute;s de un comentario de desactivaci&amp;oacute;n est&amp;aacute;ndar de ESLint.</target>
        </trans-unit>
        <trans-unit id="3e48107c6c8896cdcfc7e1315abb4322178c42a2" translate="yes" xml:space="preserve">
          <source>In many cases, it doesn't matter if you choose to use an identifier instead of a string or vice-versa. Even so, you might decide to enforce a consistent style in your code.</source>
          <target state="translated">En muchos casos,no importa si se elige utilizar un identificador en lugar de una cadena o viceversa.Aún así,puede que decidas aplicar un estilo consistente en tu código.</target>
        </trans-unit>
        <trans-unit id="a474ea154ff40cc0c6e94f8cbfb8cf71fd96857f" translate="yes" xml:space="preserve">
          <source>In many cases, the empty object pattern is a mistake where the author intended to use a default value instead, such as:</source>
          <target state="translated">En muchos casos,el patrón de objetos vacíos es un error en el que el autor pretendía utilizar un valor por defecto en su lugar,como por ejemplo</target>
        </trans-unit>
        <trans-unit id="f25b07254468f73077ad50b101b6ec3bb43ecd81" translate="yes" xml:space="preserve">
          <source>In more advanced cases where you really need to use the &lt;code&gt;Function&lt;/code&gt; constructor.</source>
          <target state="translated">En casos m&amp;aacute;s avanzados donde realmente necesita usar el constructor de &lt;code&gt;Function&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0f1a46503feb2a904ba1391691b0681df116ea85" translate="yes" xml:space="preserve">
          <source>In object literal shorthand methods, spacing before the &lt;code&gt;*&lt;/code&gt; is not checked, as they lack a &lt;code&gt;function&lt;/code&gt; keyword.</source>
          <target state="translated">En los m&amp;eacute;todos abreviados de objetos literales, el espacio antes del &lt;code&gt;*&lt;/code&gt; no est&amp;aacute; marcado, ya que carecen de una palabra clave de &lt;code&gt;function&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a8a619c7a6f45b45f93088c9ff495f0ed8669f1a" translate="yes" xml:space="preserve">
          <source>In order for a rule change to be accepted into ESLint, it must:</source>
          <target state="translated">Para que un cambio de reglas sea aceptado en ESLint,debe:</target>
        </trans-unit>
        <trans-unit id="528b4219cc85dfb751a7dfd6e0385ac32c86b7cb" translate="yes" xml:space="preserve">
          <source>In order for a rule to be accepted in the ESLint core, it must:</source>
          <target state="translated">Para que una regla sea aceptada en el núcleo de ESLint,debe:</target>
        </trans-unit>
        <trans-unit id="1076911d7bc31ae6a22b80533fa7746bb73a1110" translate="yes" xml:space="preserve">
          <source>In order to avoid any confusion as to how to create the correct path, Node.js provides the &lt;code&gt;path&lt;/code&gt; module. This module uses system-specific information to always return the correct value. So you can rewrite the previous example as:</source>
          <target state="translated">Para evitar cualquier confusi&amp;oacute;n sobre c&amp;oacute;mo crear la ruta correcta, Node.js proporciona el m&amp;oacute;dulo de &lt;code&gt;path&lt;/code&gt; . Este m&amp;oacute;dulo utiliza informaci&amp;oacute;n espec&amp;iacute;fica del sistema para devolver siempre el valor correcto. Entonces puedes reescribir el ejemplo anterior como:</target>
        </trans-unit>
        <trans-unit id="30dfaba2b526c5b26fe5ba2b4d9ad078d60be29f" translate="yes" xml:space="preserve">
          <source>In order to get the same functionality in ESLint, you would first need to install the &lt;code&gt;eslint-config-airbnb&lt;/code&gt; shareable config package:</source>
          <target state="translated">Para obtener la misma funcionalidad en ESLint, primero debe instalar el &lt;code&gt;eslint-config-airbnb&lt;/code&gt; compartible eslint-config-airbnb :</target>
        </trans-unit>
        <trans-unit id="da327dc7b8895d9c2a799fa276a2c344a1fa9ef6" translate="yes" xml:space="preserve">
          <source>In order to make your plugin available to the community you have to publish it on npm.</source>
          <target state="translated">Para que tu plugin esté disponible para la comunidad tienes que publicarlo en npm.</target>
        </trans-unit>
        <trans-unit id="f53a0ee7361f805bc70b82dd2bf7fd681d44bfa2" translate="yes" xml:space="preserve">
          <source>In order to provide suggestions, use the &lt;code&gt;suggest&lt;/code&gt; key in the report argument with an array of suggestion objects. The suggestion objects represent individual suggestions that could be applied and require either a &lt;code&gt;desc&lt;/code&gt; key string that describes what applying the suggestion would do or a &lt;code&gt;messageId&lt;/code&gt; key (see &lt;a href=&quot;#suggestion-messageids&quot;&gt;below&lt;/a&gt;), and a &lt;code&gt;fix&lt;/code&gt; key that is a function defining the suggestion result. This &lt;code&gt;fix&lt;/code&gt; function follows the same API as regular fixes (described above in &lt;a href=&quot;#applying-fixes&quot;&gt;applying fixes&lt;/a&gt;).</source>
          <target state="translated">Para proporcionar sugerencias, utilice la clave de &lt;code&gt;suggest&lt;/code&gt; en el argumento del informe con una serie de objetos de sugerencia. Los objetos de sugerencia representan sugerencias individuales que podr&amp;iacute;an aplicarse y requieren una cadena de clave &lt;code&gt;desc&lt;/code&gt; que describa lo que har&amp;iacute;a la aplicaci&amp;oacute;n de la sugerencia o una clave &lt;code&gt;messageId&lt;/code&gt; (ver m&amp;aacute;s &lt;a href=&quot;#suggestion-messageids&quot;&gt;abajo&lt;/a&gt; ), y una clave de &lt;code&gt;fix&lt;/code&gt; que es una funci&amp;oacute;n que define el resultado de la sugerencia. Esta funci&amp;oacute;n de &lt;code&gt;fix&lt;/code&gt; sigue la misma API que las correcciones normales (descritas anteriormente en la &lt;a href=&quot;#applying-fixes&quot;&gt;aplicaci&amp;oacute;n de correcciones&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="c914896e68d128ecab267923570754040656a4ad" translate="yes" xml:space="preserve">
          <source>In order to submit code or documentation to an ESLint project, you will need to electronically sign our &lt;a href=&quot;https://cla.js.foundation/eslint/eslint&quot;&gt;Contributor License Agreement&lt;/a&gt;. The CLA is you giving us permission to use your contribution.</source>
          <target state="translated">Para enviar c&amp;oacute;digo o documentaci&amp;oacute;n a un proyecto de ESLint, deber&amp;aacute; firmar electr&amp;oacute;nicamente nuestro &lt;a href=&quot;https://cla.js.foundation/eslint/eslint&quot;&gt;Acuerdo de licencia de colaborador&lt;/a&gt; . El CLA nos da permiso para usar su contribuci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="ab1eb2b457b3afd52e3fa40c61b2b91f8e61a0a6" translate="yes" xml:space="preserve">
          <source>In order to use a local file as a custom formatter, you must begin the filename with a dot (such as &lt;code&gt;./my-awesome-formatter.js&lt;/code&gt; or &lt;code&gt;../formatters/my-awesome-formatter.js&lt;/code&gt;).</source>
          <target state="translated">Para utilizar un archivo local como formateador personalizado, debe comenzar el nombre del archivo con un punto (como &lt;code&gt;./my-awesome-formatter.js&lt;/code&gt; o &lt;code&gt;../formatters/my-awesome-formatter.js&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="fe1c5d3210fe6c242e0968d6574611b5ef639ec0" translate="yes" xml:space="preserve">
          <source>In order to work with ESLint as a developer, it's recommended that:</source>
          <target state="translated">Para trabajar con ESLint como desarrollador,se recomienda que:</target>
        </trans-unit>
        <trans-unit id="da54d53c92208bf53d5c67c558cd27c2431dde1d" translate="yes" xml:space="preserve">
          <source>In other words, if a property has a getter and a setter, the setter should be defined right after the getter, or vice versa.</source>
          <target state="translated">En otras palabras,si una propiedad tiene un &quot;getter&quot; y un &quot;setter&quot;,el &quot;setter&quot; debe ser definido justo después del &quot;getter&quot;,o viceversa.</target>
        </trans-unit>
        <trans-unit id="7bfb1d001512e3bd279cdd5b491a8cafde9ef9eb" translate="yes" xml:space="preserve">
          <source>In other words, it was possible to reference a rule from a scoped plugin (such as &lt;code&gt;foo/some-rule&lt;/code&gt;) without explicitly stating the &lt;code&gt;@my-organization&lt;/code&gt; scope. This was a bug because it could lead to ambiguous rule references if there was also an unscoped plugin called &lt;code&gt;eslint-plugin-foo&lt;/code&gt; loaded at the same time.</source>
          <target state="translated">En otras palabras, era posible hacer referencia a una regla desde un complemento de &amp;aacute;mbito (como &lt;code&gt;foo/some-rule&lt;/code&gt; ) sin indicar expl&amp;iacute;citamente el &amp;aacute;mbito de &lt;code&gt;@my-organization&lt;/code&gt; . Esto fue un error porque podr&amp;iacute;a llevar a referencias de reglas ambiguas si tambi&amp;eacute;n hab&amp;iacute;a un complemento sin &amp;aacute;mbito llamado &lt;code&gt;eslint-plugin-foo&lt;/code&gt; cargado al mismo tiempo.</target>
        </trans-unit>
        <trans-unit id="2469f7b6a21432ad41d271440c98cea16a70b72b" translate="yes" xml:space="preserve">
          <source>In rare cases (if you were relying on the previous behavior where &lt;code&gt;eslint:recommended&lt;/code&gt; disables core rules), you might need to disable additional rules to restore the previous behavior.</source>
          <target state="translated">En casos excepcionales (si confiaba en el comportamiento anterior en el que &lt;code&gt;eslint:recommended&lt;/code&gt; deshabilita las reglas b&amp;aacute;sicas), es posible que deba deshabilitar reglas adicionales para restaurar el comportamiento anterior.</target>
        </trans-unit>
        <trans-unit id="62940093175d70030e07910796a72fc9b37a5914" translate="yes" xml:space="preserve">
          <source>In rare cases where you really need identical test conditions in the same chain, which necessarily means that the expressions in the chain are causing and relying on side effects, you will have to turn this rule off.</source>
          <target state="translated">En los raros casos en los que realmente se necesitan condiciones de prueba idénticas en la misma cadena,lo que necesariamente significa que las expresiones en la cadena están causando y dependen de los efectos secundarios,tendrá que desactivar esta regla.</target>
        </trans-unit>
        <trans-unit id="79ead7da48164fbb99604c5811336f071bb53e52" translate="yes" xml:space="preserve">
          <source>In some cases fixes aren't appropriate to be automatically applied, for example, if a fix potentially changes functionality or if there are multiple valid ways to fix a rule depending on the implementation intent (see the best practices for &lt;a href=&quot;#applying-fixes&quot;&gt;applying fixes&lt;/a&gt; listed above). In these cases, there is an alternative &lt;code&gt;suggest&lt;/code&gt; option on &lt;code&gt;context.report()&lt;/code&gt; that allows other tools, such as editors, to expose helpers for users to manually apply a suggestion.</source>
          <target state="translated">En algunos casos, las correcciones no son apropiadas para aplicarse autom&amp;aacute;ticamente, por ejemplo, si una correcci&amp;oacute;n potencialmente cambia la funcionalidad o si hay varias formas v&amp;aacute;lidas de corregir una regla seg&amp;uacute;n la intenci&amp;oacute;n de implementaci&amp;oacute;n (consulte las mejores pr&amp;aacute;cticas para &lt;a href=&quot;#applying-fixes&quot;&gt;aplicar las correcciones&lt;/a&gt; enumeradas anteriormente). En estos casos, existe una opci&amp;oacute;n de &lt;code&gt;suggest&lt;/code&gt; alternativa en &lt;code&gt;context.report()&lt;/code&gt; que permite que otras herramientas, como los editores, expongan ayudantes para que los usuarios apliquen manualmente una sugerencia.</target>
        </trans-unit>
        <trans-unit id="22ed0b0513e44ddddd0487035021c4a4d3ab12ff" translate="yes" xml:space="preserve">
          <source>In some cases, rule schemas can use the &lt;code&gt;default&lt;/code&gt; keyword to automatically specify default values for rule options. However, the &lt;code&gt;default&lt;/code&gt; keyword is only effective in certain schema locations, and is ignored elsewhere, which creates a risk of bugs if a rule incorrectly expects a default value to be provided as a rule option. In ESLint v6.0.0, &lt;code&gt;RuleTester&lt;/code&gt; will raise an error if a rule has an invalid &lt;code&gt;default&lt;/code&gt; keyword in its schema.</source>
          <target state="translated">En algunos casos, los esquemas de reglas pueden usar la palabra clave &lt;code&gt;default&lt;/code&gt; para especificar autom&amp;aacute;ticamente valores predeterminados para las opciones de reglas. Sin embargo, el &lt;code&gt;default&lt;/code&gt; de palabras clave s&amp;oacute;lo es eficaz en ciertos lugares de esquema, y se ignora en otros lugares, lo que crea un riesgo de errores si una regla espera incorrectamente un valor predeterminado que se proporciona como una opci&amp;oacute;n de autonom&amp;iacute;a. En ESLint v6.0.0, &lt;code&gt;RuleTester&lt;/code&gt; generar&amp;aacute; un error si una regla tiene una palabra clave &lt;code&gt;default&lt;/code&gt; no v&amp;aacute;lida en su esquema.</target>
        </trans-unit>
        <trans-unit id="586438146f6109615a34b9a900fa8fbf8761e69b" translate="yes" xml:space="preserve">
          <source>In that case the expected syntax would have been:</source>
          <target state="translated">En ese caso la sintaxis esperada habría sido:</target>
        </trans-unit>
        <trans-unit id="34e220746b67d0d1a6860ca7f5580ed5292abe0f" translate="yes" xml:space="preserve">
          <source>In the &lt;strong&gt;CommonJS&lt;/strong&gt; module system, a hidden function wraps each module and limits the scope of a &quot;global&quot; strict mode directive.</source>
          <target state="translated">En el sistema de m&amp;oacute;dulos &lt;strong&gt;CommonJS&lt;/strong&gt; , una funci&amp;oacute;n oculta envuelve cada m&amp;oacute;dulo y limita el alcance de una directiva de modo estricto &quot;global&quot;.</target>
        </trans-unit>
        <trans-unit id="2af7474f5034d2a87e6bb76f217e0214d6566d39" translate="yes" xml:space="preserve">
          <source>In the Node.js community it is often customary to separate initializations with calls to &lt;code&gt;require&lt;/code&gt; modules from other variable declarations, sometimes also grouping them by the type of module. This rule helps you enforce this convention.</source>
          <target state="translated">En la comunidad de Node.js, a menudo se acostumbra separar las inicializaciones con llamadas para &lt;code&gt;require&lt;/code&gt; m&amp;oacute;dulos de otras declaraciones de variables, a veces tambi&amp;eacute;n agrup&amp;aacute;ndolas por el tipo de m&amp;oacute;dulo. Esta regla le ayuda a hacer cumplir esta convenci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="f25f337dc8aa34dae55d66f05c1bb5c8ed5144c6" translate="yes" xml:space="preserve">
          <source>In the above example, &lt;code&gt;baz()&lt;/code&gt; can never execute. Obviously, &lt;code&gt;baz()&lt;/code&gt; could be executed only when &lt;code&gt;b&lt;/code&gt; evaluates to &lt;code&gt;true&lt;/code&gt;, but in that case &lt;code&gt;bar()&lt;/code&gt; would be executed instead, since it's earlier in the chain.</source>
          <target state="translated">En el ejemplo anterior, &lt;code&gt;baz()&lt;/code&gt; nunca se puede ejecutar. Obviamente, &lt;code&gt;baz()&lt;/code&gt; podr&amp;iacute;a ejecutarse solo cuando &lt;code&gt;b&lt;/code&gt; se eval&amp;uacute;e como &lt;code&gt;true&lt;/code&gt; , pero en ese caso se ejecutar&amp;iacute;a &lt;code&gt;bar()&lt;/code&gt; su lugar, ya que es anterior en la cadena.</target>
        </trans-unit>
        <trans-unit id="4dc0e08c3b19b46bd79d160c044fb63b2212f50f" translate="yes" xml:space="preserve">
          <source>In the above example, the regular expression literal is easier to read and reason about. Also, it's a common mistake to omit the extra &lt;code&gt;\&lt;/code&gt; in the string literal, which would produce a completely different regular expression:</source>
          <target state="translated">En el ejemplo anterior, el literal de expresi&amp;oacute;n regular es m&amp;aacute;s f&amp;aacute;cil de leer y razonar. Adem&amp;aacute;s, es un error com&amp;uacute;n omitir el &lt;code&gt;\&lt;/code&gt; adicional en el literal de cadena, lo que producir&amp;iacute;a una expresi&amp;oacute;n regular completamente diferente:</target>
        </trans-unit>
        <trans-unit id="805fa113fe73a36f3075118dbb4cbf1f7f0e4911" translate="yes" xml:space="preserve">
          <source>In the case of a CommonJS module, if your code is in strict mode or you don't want this rule to warn you about undeclared variables, and you also don't want this rule to warn you about the read-only globals, you can disable this rule.</source>
          <target state="translated">En el caso de un módulo CommonJS,si tu código está en modo estricto o no quieres que esta regla te advierta sobre las variables no declaradas,y tampoco quieres que esta regla te advierta sobre las globales de sólo lectura,puedes desactivar esta regla.</target>
        </trans-unit>
        <trans-unit id="2333879fe578127fd545ac29675c84de972fc829" translate="yes" xml:space="preserve">
          <source>In the case of a browser script, if you want to be able to explicitly declare variables and functions in the global scope, and your code is in strict mode or you don't want this rule to warn you about undeclared variables, and you also don't want this rule to warn you about read-only globals, you can disable this rule.</source>
          <target state="translated">En el caso de un script de navegador,si quieres ser capaz de declarar explícitamente las variables y funciones en el ámbito global,y tu código está en modo estricto o no quieres que esta regla te advierta sobre las variables no declaradas,y tampoco quieres que esta regla te advierta sobre los globales de sólo lectura,puedes desactivar esta regla.</target>
        </trans-unit>
        <trans-unit id="73ff69869ee358fb751b07d6f10bc627b10fdf31" translate="yes" xml:space="preserve">
          <source>In the case of an ES module, if you don't want this rule to warn you about the read-only globals you can disable this rule.</source>
          <target state="translated">En el caso de un módulo ES,si no quieres que esta regla te advierta sobre los globos de sólo lectura puedes desactivarla.</target>
        </trans-unit>
        <trans-unit id="bf0cf62f8e2a7187fa75b64fd67d8b2165c79bd0" translate="yes" xml:space="preserve">
          <source>In the constructor of derived classes, if &lt;code&gt;this&lt;/code&gt;/&lt;code&gt;super&lt;/code&gt; are used before &lt;code&gt;super()&lt;/code&gt; calls, it raises a reference error.</source>
          <target state="translated">En el constructor de clases derivadas, si &lt;code&gt;this&lt;/code&gt; / &lt;code&gt;super&lt;/code&gt; se usa antes de &lt;code&gt;super()&lt;/code&gt; llamadas a super () , genera un error de referencia.</target>
        </trans-unit>
        <trans-unit id="3ff70ad8a5f97d1019f5ec2166872e8af868b385" translate="yes" xml:space="preserve">
          <source>In the debate over ASI, there are generally two schools of thought. The first is that we should treat ASI as if it didn't exist and always include semicolons manually. The rationale is that it's easier to always include semicolons than to try to remember when they are or are not required, and thus decreases the possibility of introducing an error.</source>
          <target state="translated">En el debate sobre la ASI,generalmente hay dos escuelas de pensamiento.La primera es que debemos tratar a la ASI como si no existiera y siempre incluir los punto y coma manualmente.La razón es que es más fácil incluir siempre punto y coma que tratar de recordar cuando son o no requeridos,y así disminuye la posibilidad de introducir un error.</target>
        </trans-unit>
        <trans-unit id="484a62f26f2c619574ceb1e6c457d31625392327" translate="yes" xml:space="preserve">
          <source>In the example above, the &lt;code&gt;sayHi&lt;/code&gt; method doesn't use &lt;code&gt;this&lt;/code&gt;, so we can make it a static method:</source>
          <target state="translated">En el ejemplo anterior, el m&amp;eacute;todo &lt;code&gt;sayHi&lt;/code&gt; no usa &lt;code&gt;this&lt;/code&gt; , por lo que podemos convertirlo en un m&amp;eacute;todo est&amp;aacute;tico:</target>
        </trans-unit>
        <trans-unit id="c2cd47d59330aa36977aa9998d327bbf8acb99ff" translate="yes" xml:space="preserve">
          <source>In the example configuration above, the top level &quot;before&quot; and &quot;after&quot; options define the default behavior of the rule, while the &quot;anonymous&quot; and &quot;method&quot; options override the default behavior. Overrides can be either an object with &quot;before&quot; and &quot;after&quot;, or a shorthand string as above.</source>
          <target state="translated">En la configuración de ejemplo anterior,las opciones de nivel superior &quot;antes&quot; y &quot;después&quot; definen el comportamiento predeterminado de la regla,mientras que las opciones &quot;anónimo&quot; y &quot;método&quot; anulan el comportamiento predeterminado.Las anulaciones pueden ser un objeto con &quot;antes&quot; y &quot;después&quot;,o una cadena abreviada como la anterior.</target>
        </trans-unit>
        <trans-unit id="97328f04f5b1cf5749587791362446a7fb8f3c20" translate="yes" xml:space="preserve">
          <source>In the exceptions where a newline does &lt;strong&gt;not&lt;/strong&gt; end a statement, a typing mistake to omit a semicolon causes two unrelated consecutive lines to be interpreted as one expression. Especially for a coding style without semicolons, readers might overlook the mistake. Although syntactically correct, the code might throw exceptions when it is executed.</source>
          <target state="translated">En las excepciones en las que una nueva l&amp;iacute;nea &lt;strong&gt;no&lt;/strong&gt; finaliza una declaraci&amp;oacute;n, un error de escritura para omitir un punto y coma hace que dos l&amp;iacute;neas consecutivas no relacionadas se interpreten como una expresi&amp;oacute;n. Especialmente para un estilo de codificaci&amp;oacute;n sin punto y coma, los lectores pueden pasar por alto el error. Aunque es sint&amp;aacute;cticamente correcto, el c&amp;oacute;digo puede generar excepciones cuando se ejecuta.</target>
        </trans-unit>
        <trans-unit id="6aff87de13f5ffd8d68a4105042048c5b3c19ed4" translate="yes" xml:space="preserve">
          <source>In the following example the &lt;code&gt;module&lt;/code&gt; import on line 1 is repeated on line 3. These can be combined to make the list of imports more succinct.</source>
          <target state="translated">En el siguiente ejemplo, la importaci&amp;oacute;n del &lt;code&gt;module&lt;/code&gt; en la l&amp;iacute;nea 1 se repite en la l&amp;iacute;nea 3. Estos se pueden combinar para hacer la lista de importaciones m&amp;aacute;s sucinta.</target>
        </trans-unit>
        <trans-unit id="e223ddd8853ea414a7d8a8c3771424ff2c613622" translate="yes" xml:space="preserve">
          <source>In the initial list of problems, the &lt;code&gt;fix&lt;/code&gt; property will refer to a fix in the processed JavaScript. The &lt;code&gt;postprocess&lt;/code&gt; method should transform the object to refer to a fix in the original, unprocessed file.</source>
          <target state="translated">En la lista inicial de problemas, la propiedad de &lt;code&gt;fix&lt;/code&gt; se referir&amp;aacute; a una correcci&amp;oacute;n en el JavaScript procesado. El m&amp;eacute;todo de &lt;code&gt;postprocess&lt;/code&gt; debe transformar el objeto para que haga referencia a una correcci&amp;oacute;n en el archivo original sin procesar.</target>
        </trans-unit>
        <trans-unit id="cdeeb4e7b1833bacebcb592d32546b7b7787fbed" translate="yes" xml:space="preserve">
          <source>In the initialization or update portions of a &lt;code&gt;for&lt;/code&gt; statement.</source>
          <target state="translated">En las partes de inicializaci&amp;oacute;n o actualizaci&amp;oacute;n de una instrucci&amp;oacute;n &lt;code&gt;for&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3a3d2790bd2dc958072534cbc721ebee4aafd235" translate="yes" xml:space="preserve">
          <source>In the last example the &lt;code&gt;await&lt;/code&gt; is necessary to be able to catch errors thrown from &lt;code&gt;bar()&lt;/code&gt;.</source>
          <target state="translated">En el &amp;uacute;ltimo ejemplo, la &lt;code&gt;await&lt;/code&gt; es necesaria para poder detectar errores lanzados desde &lt;code&gt;bar()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c8992ad5fc6c79ca648b7546f8d54a92a932529c" translate="yes" xml:space="preserve">
          <source>In the last file, you'll once again see that to properly resolve your config, you'll need include the full package path.</source>
          <target state="translated">En el último archivo,verás una vez más que para resolver correctamente tu configuración,necesitarás incluir la ruta completa del paquete.</target>
        </trans-unit>
        <trans-unit id="06a65141438f1465b9453edef91ccf38f50b2a41" translate="yes" xml:space="preserve">
          <source>In the preceding example, the error level is assumed to be the first argument. It is followed by the first optional argument, a string which may be either &lt;code&gt;&quot;always&quot;&lt;/code&gt; or &lt;code&gt;&quot;never&quot;&lt;/code&gt;. The final optional argument is an object, which may have a Boolean property named &lt;code&gt;exceptRange&lt;/code&gt;.</source>
          <target state="translated">En el ejemplo anterior, se supone que el nivel de error es el primer argumento. Le sigue el primer argumento opcional, una cadena que puede ser &lt;code&gt;&quot;always&quot;&lt;/code&gt; o &lt;code&gt;&quot;never&quot;&lt;/code&gt; . El argumento opcional final es un objeto, que puede tener una propiedad booleana denominada &lt;code&gt;exceptRange&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9ae7da0834ca34159e742b20fb358094baed4a0e" translate="yes" xml:space="preserve">
          <source>In the same way, if there is a &lt;code&gt;package.json&lt;/code&gt; file in the root directory with an &lt;code&gt;eslintConfig&lt;/code&gt; field, the configuration it describes will apply to all subdirectories beneath it, but the configuration described by the &lt;code&gt;.eslintrc&lt;/code&gt; file in the tests directory will override it where there are conflicting specifications.</source>
          <target state="translated">De la misma manera, si hay un archivo &lt;code&gt;package.json&lt;/code&gt; en el directorio ra&amp;iacute;z con un campo &lt;code&gt;eslintConfig&lt;/code&gt; , la configuraci&amp;oacute;n que describe se aplicar&amp;aacute; a todos los subdirectorios debajo de &amp;eacute;l, pero la configuraci&amp;oacute;n descrita por el archivo &lt;code&gt;.eslintrc&lt;/code&gt; en el directorio de pruebas lo anular&amp;aacute;. donde hay especificaciones en conflicto.</target>
        </trans-unit>
        <trans-unit id="d895f26e01a339a58df0b6097b997dc2676f5f9b" translate="yes" xml:space="preserve">
          <source>In these configuration files, the rule &lt;code&gt;plugin1/rule1&lt;/code&gt; comes from the plugin named &lt;code&gt;plugin1&lt;/code&gt;. You can also use this format with configuration comments, such as:</source>
          <target state="translated">En estos archivos de configuraci&amp;oacute;n, la regla &lt;code&gt;plugin1/rule1&lt;/code&gt; proviene del complemento llamado &lt;code&gt;plugin1&lt;/code&gt; . Tambi&amp;eacute;n puede utilizar este formato con comentarios de configuraci&amp;oacute;n, como:</target>
        </trans-unit>
        <trans-unit id="36d6699bd7eef806ecf2d6c599b776a76340f808" translate="yes" xml:space="preserve">
          <source>In this case, &lt;code&gt;doSomething()&lt;/code&gt; is undefined at the time of invocation and so causes a runtime error.</source>
          <target state="translated">En este caso, &lt;code&gt;doSomething()&lt;/code&gt; no est&amp;aacute; definido en el momento de la invocaci&amp;oacute;n y, por lo tanto, provoca un error de tiempo de ejecuci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="5a85d7db6d4b6df41b744c0747f7ca33c597e8b6" translate="yes" xml:space="preserve">
          <source>In this case, each function created within the loop returns a different number as expected.</source>
          <target state="translated">En este caso,cada función creada dentro del bucle devuelve un número diferente como se esperaba.</target>
        </trans-unit>
        <trans-unit id="356abc620d37a1abfd58a799df08e6a2a04736c0" translate="yes" xml:space="preserve">
          <source>In this case, probably removing &lt;code&gt;OUTER_LOOP:&lt;/code&gt; had been forgotten. Such labels take up space in the code and can lead to confusion by readers.</source>
          <target state="translated">En este caso, probablemente se hab&amp;iacute;a olvidado la eliminaci&amp;oacute;n de &lt;code&gt;OUTER_LOOP:&lt;/code&gt; . Estas etiquetas ocupan espacio en el c&amp;oacute;digo y pueden generar confusi&amp;oacute;n en los lectores.</target>
        </trans-unit>
        <trans-unit id="c39bb2ffd2c62e6c7064f4d5e0435501709e632d" translate="yes" xml:space="preserve">
          <source>In this case, spacing will be disallowed after a &lt;code&gt;new&lt;/code&gt; operator and required before/after a &lt;code&gt;++&lt;/code&gt; operator.</source>
          <target state="translated">En este caso, el espaciado no se permitir&amp;aacute; despu&amp;eacute;s de un &lt;code&gt;new&lt;/code&gt; operador y se requerir&amp;aacute; antes / despu&amp;eacute;s de un operador &lt;code&gt;++&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7d4495221d480b471dcc1896dd624d6c593b570c" translate="yes" xml:space="preserve">
          <source>In this case, the &lt;code&gt;fail()&lt;/code&gt; function throws an error that is intended to be caught by the &lt;code&gt;catch()&lt;/code&gt; handler assigned later. Converting the &lt;code&gt;fail()&lt;/code&gt; function into a synchronous function would require the call to &lt;code&gt;fail()&lt;/code&gt; to be refactored to use a &lt;code&gt;try-catch&lt;/code&gt; statement instead of a promise.</source>
          <target state="translated">En este caso, la funci&amp;oacute;n &lt;code&gt;fail()&lt;/code&gt; arroja un error que est&amp;aacute; destinado a ser detectado por el controlador &lt;code&gt;catch()&lt;/code&gt; asignado m&amp;aacute;s tarde. Convertir la funci&amp;oacute;n &lt;code&gt;fail()&lt;/code&gt; en una funci&amp;oacute;n s&amp;iacute;ncrona requerir&amp;iacute;a que la llamada a &lt;code&gt;fail()&lt;/code&gt; sea ​​refactorizada para usar una declaraci&amp;oacute;n &lt;code&gt;try-catch&lt;/code&gt; en lugar de una promesa.</target>
        </trans-unit>
        <trans-unit id="c0334129e557cb71f1101529b6b21d138390105a" translate="yes" xml:space="preserve">
          <source>In this case, the &lt;code&gt;var x&lt;/code&gt; is hoisted out of the loop, effectively creating:</source>
          <target state="translated">En este caso, la &lt;code&gt;var x&lt;/code&gt; se saca del bucle, creando efectivamente:</target>
        </trans-unit>
        <trans-unit id="81b4bbb5892a95679c7e65b779450b662ceded28" translate="yes" xml:space="preserve">
          <source>In this case, the created object is thrown away because its reference isn't stored anywhere, and in many cases, this means that the constructor should be replaced with a function that doesn't require &lt;code&gt;new&lt;/code&gt; to be used.</source>
          <target state="translated">En este caso, el objeto creado se desecha porque su referencia no est&amp;aacute; almacenada en ning&amp;uacute;n lugar y, en muchos casos, esto significa que el constructor debe reemplazarse con una funci&amp;oacute;n que no requiere que se use una &lt;code&gt;new&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0131376096f23dfc4bd77b3459401e2d691c79dd" translate="yes" xml:space="preserve">
          <source>In this case, the message is specific to the variable being used and the AST node type is &lt;code&gt;Identifier&lt;/code&gt;.</source>
          <target state="translated">En este caso, el mensaje es espec&amp;iacute;fico de la variable que se est&amp;aacute; utilizando y el tipo de nodo AST es &lt;code&gt;Identifier&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="aad77b7ee8cfa194f8d3ef8768c4c03df4c2b476" translate="yes" xml:space="preserve">
          <source>In this case, the variable &lt;code&gt;a&lt;/code&gt; inside of &lt;code&gt;b()&lt;/code&gt; is shadowing the variable &lt;code&gt;a&lt;/code&gt; in the global scope. This can cause confusion while reading the code and it's impossible to access the global variable.</source>
          <target state="translated">En este caso, la variable &lt;code&gt;a&lt;/code&gt; dentro de &lt;code&gt;b()&lt;/code&gt; est&amp;aacute; sombreando la variable &lt;code&gt;a&lt;/code&gt; en el &amp;aacute;mbito global. Esto puede causar confusi&amp;oacute;n al leer el c&amp;oacute;digo y es imposible acceder a la variable global.</target>
        </trans-unit>
        <trans-unit id="399b857b733880f93edced40099e5c214d78fa49" translate="yes" xml:space="preserve">
          <source>In this case, you would expect each function created within the loop to return a different number. In reality, each function returns 10, because that was the last value of &lt;code&gt;i&lt;/code&gt; in the scope.</source>
          <target state="translated">En este caso, esperar&amp;iacute;a que cada funci&amp;oacute;n creada dentro del ciclo devuelva un n&amp;uacute;mero diferente. En realidad, cada funci&amp;oacute;n devuelve 10, porque ese fue el &amp;uacute;ltimo valor de &lt;code&gt;i&lt;/code&gt; en el alcance.</target>
        </trans-unit>
        <trans-unit id="89db72e5b125a2136f5700b9df46d59dfd325de2" translate="yes" xml:space="preserve">
          <source>In this code, &lt;code&gt;enum&lt;/code&gt; is used as an object key and will throw an error in an ECMAScript 3 environment (such as Internet Explorer 8).</source>
          <target state="translated">En este c&amp;oacute;digo, &lt;code&gt;enum&lt;/code&gt; se usa como clave de objeto y arrojar&amp;aacute; un error en un entorno ECMAScript 3 (como Internet Explorer 8).</target>
        </trans-unit>
        <trans-unit id="7b3f3ffb93c91f659a612089534865f9263e81d0" translate="yes" xml:space="preserve">
          <source>In this code, no new variables are created because &lt;code&gt;a&lt;/code&gt; is just a location helper while the &lt;code&gt;{}&lt;/code&gt; is expected to contain the variables to create, such as:</source>
          <target state="translated">En este c&amp;oacute;digo, no se crean nuevas variables porque &lt;code&gt;a&lt;/code&gt; es solo un ayudante de ubicaci&amp;oacute;n, mientras que se espera que &lt;code&gt;{}&lt;/code&gt; contenga las variables para crear, como:</target>
        </trans-unit>
        <trans-unit id="99609a5bff02d4c73d9df2f874ef482759db0b7c" translate="yes" xml:space="preserve">
          <source>In this code, the reference to &lt;code&gt;this&lt;/code&gt; has been removed but &lt;code&gt;bind()&lt;/code&gt; is still used. In this case, the &lt;code&gt;bind()&lt;/code&gt; is unnecessary overhead (and a performance hit) and can be safely removed.</source>
          <target state="translated">En este c&amp;oacute;digo, la referencia a &lt;code&gt;this&lt;/code&gt; se ha eliminado, pero a&amp;uacute;n se usa &lt;code&gt;bind()&lt;/code&gt; . En este caso, &lt;code&gt;bind()&lt;/code&gt; es una sobrecarga innecesaria (y un impacto de rendimiento) y se puede eliminar de forma segura.</target>
        </trans-unit>
        <trans-unit id="df86629a847fb7ed6459c203d8878e66d97590a4" translate="yes" xml:space="preserve">
          <source>In this document, the first four types are summed up under the term &lt;em&gt;require declaration&lt;/em&gt;.</source>
          <target state="translated">En este documento, los primeros cuatro tipos se resumen bajo el t&amp;eacute;rmino &lt;em&gt;requieren declaraci&amp;oacute;n&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="c640e601c90d57c39ee9be82c0f12dec43d6aa1a" translate="yes" xml:space="preserve">
          <source>In this example, &lt;a href=&quot;../rules/eqeqeq&quot;&gt;&lt;code&gt;eqeqeq&lt;/code&gt;&lt;/a&gt; is turned off and &lt;a href=&quot;../rules/curly&quot;&gt;&lt;code&gt;curly&lt;/code&gt;&lt;/a&gt; is turned on as an error. You can also use the numeric equivalent for the rule severity:</source>
          <target state="translated">En este ejemplo, &lt;a href=&quot;../rules/eqeqeq&quot;&gt; &lt;code&gt;eqeqeq&lt;/code&gt; &lt;/a&gt; est&amp;aacute; desactivado y &lt;a href=&quot;../rules/curly&quot;&gt; &lt;code&gt;curly&lt;/code&gt; &lt;/a&gt; est&amp;aacute; activado como error. Tambi&amp;eacute;n puede usar el equivalente num&amp;eacute;rico para la severidad de la regla:</target>
        </trans-unit>
        <trans-unit id="c58957ba7e167fed9c432e37bda0f2aa517e44f7" translate="yes" xml:space="preserve">
          <source>In this example, a new &lt;code&gt;CLIEngine&lt;/code&gt; instance is created that extends a configuration called &lt;code&gt;&quot;eslint-config-shared&quot;&lt;/code&gt;, a setting named &lt;code&gt;&quot;sharedData&quot;&lt;/code&gt; and two environments (&lt;code&gt;&quot;browser&quot;&lt;/code&gt; and &lt;code&gt;&quot;mocha&quot;&lt;/code&gt;) are defined, loading of &lt;code&gt;.eslintrc&lt;/code&gt; and &lt;code&gt;package.json&lt;/code&gt; files are disabled, and the &lt;code&gt;semi&lt;/code&gt; rule enabled as an error. You can then call methods on &lt;code&gt;cli&lt;/code&gt; and these options will be used to perform the correct action.</source>
          <target state="translated">En este ejemplo, se crea una nueva instancia de &lt;code&gt;CLIEngine&lt;/code&gt; que extiende una configuraci&amp;oacute;n llamada &lt;code&gt;&quot;eslint-config-shared&quot;&lt;/code&gt; , una configuraci&amp;oacute;n llamada &lt;code&gt;&quot;sharedData&quot;&lt;/code&gt; y se definen dos entornos ( &lt;code&gt;&quot;browser&quot;&lt;/code&gt; y &lt;code&gt;&quot;mocha&quot;&lt;/code&gt; ), cargando &lt;code&gt;.eslintrc&lt;/code&gt; y &lt;code&gt;package.json&lt;/code&gt; archivos .json est&amp;aacute;n deshabilitados y la regla &lt;code&gt;semi&lt;/code&gt; habilitada como un error. Luego puede llamar a m&amp;eacute;todos en &lt;code&gt;cli&lt;/code&gt; y estas opciones se usar&amp;aacute;n para realizar la acci&amp;oacute;n correcta.</target>
        </trans-unit>
        <trans-unit id="e04d10297a79bb36c8285674c21e09aa283053e2" translate="yes" xml:space="preserve">
          <source>In this example, a semicolon will not be inserted after the first line, causing a run-time error (because an empty object is called as if it's a function). The &lt;a href=&quot;no-unexpected-multiline&quot;&gt;no-unexpected-multiline&lt;/a&gt; rule can protect your code from such cases.</source>
          <target state="translated">En este ejemplo, no se insertar&amp;aacute; un punto y coma despu&amp;eacute;s de la primera l&amp;iacute;nea, lo que provocar&amp;aacute; un error en tiempo de ejecuci&amp;oacute;n (porque se llama a un objeto vac&amp;iacute;o como si fuera una funci&amp;oacute;n). La regla &lt;a href=&quot;no-unexpected-multiline&quot;&gt;multil&amp;iacute;nea no inesperada&lt;/a&gt; puede proteger su c&amp;oacute;digo de tales casos.</target>
        </trans-unit>
        <trans-unit id="cfd38ba50d65586ae33ba8981419872a1566d701" translate="yes" xml:space="preserve">
          <source>In this example, if &lt;code&gt;foo&lt;/code&gt; is &lt;code&gt;1&lt;/code&gt;, then execution will flow through both cases, as the first falls through to the second. You can prevent this by using &lt;code&gt;break&lt;/code&gt;, as in this example:</source>
          <target state="translated">En este ejemplo, si &lt;code&gt;foo&lt;/code&gt; es &lt;code&gt;1&lt;/code&gt; , la ejecuci&amp;oacute;n fluir&amp;aacute; a trav&amp;eacute;s de ambos casos, ya que el primero pasa al segundo. Puede evitar esto usando &lt;code&gt;break&lt;/code&gt; , como en este ejemplo:</target>
        </trans-unit>
        <trans-unit id="7d644af3174c7141490f9748832a9b77f491be79" translate="yes" xml:space="preserve">
          <source>In this example, rules run on &lt;code&gt;linter1&lt;/code&gt; will get &lt;code&gt;path/to/project&lt;/code&gt; when calling &lt;code&gt;context.getCwd()&lt;/code&gt;. Those run on &lt;code&gt;linter2&lt;/code&gt; will get &lt;code&gt;process.cwd()&lt;/code&gt; if the global &lt;code&gt;process&lt;/code&gt; object is defined or &lt;code&gt;undefined&lt;/code&gt; otherwise (e.g. on the browser https://eslint.org/demo).</source>
          <target state="translated">En este ejemplo, las reglas que se ejecutan en &lt;code&gt;linter1&lt;/code&gt; obtendr&amp;aacute;n la &lt;code&gt;path/to/project&lt;/code&gt; al llamar a &lt;code&gt;context.getCwd()&lt;/code&gt; . Aquellos que se ejecutan en &lt;code&gt;linter2&lt;/code&gt; obtendr&amp;aacute;n &lt;code&gt;process.cwd()&lt;/code&gt; si el objeto de &lt;code&gt;process&lt;/code&gt; global est&amp;aacute; definido o &lt;code&gt;undefined&lt;/code&gt; otra manera (por ejemplo, en el navegador https://eslint.org/demo).</target>
        </trans-unit>
        <trans-unit id="779b188cd469ad108c26dd64160ac911811d7073" translate="yes" xml:space="preserve">
          <source>In this example, the &lt;code&gt;colors&lt;/code&gt; array has a &lt;code&gt;length&lt;/code&gt; of 3. But did the developer intend for there to be an empty spot in the middle of the array? Or is it a typo?</source>
          <target state="translated">En este ejemplo, la matriz de &lt;code&gt;colors&lt;/code&gt; tiene una &lt;code&gt;length&lt;/code&gt; de 3. &amp;iquest;Pero pretend&amp;iacute;a el desarrollador que hubiera un lugar vac&amp;iacute;o en el medio de la matriz? &amp;iquest;O es un error tipogr&amp;aacute;fico?</target>
        </trans-unit>
        <trans-unit id="5386dba46b991972060bd7c9e14da379324e4d9b" translate="yes" xml:space="preserve">
          <source>In this example, the &lt;code&gt;your-program-that-reads-json&lt;/code&gt; program can accept the raw JSON of ESLint results and process it before outputting its own format of the results. You can pass as many command line arguments to that program as are necessary to customize the output.</source>
          <target state="translated">En este ejemplo, el &lt;code&gt;your-program-that-reads-json&lt;/code&gt; puede aceptar el JSON sin procesar de los resultados de ESLint y procesarlo antes de generar su propio formato de resultados. Puede pasar tantos argumentos de l&amp;iacute;nea de comando a ese programa como sea necesario para personalizar la salida.</target>
        </trans-unit>
        <trans-unit id="1fe1ba8b07ed67f5a9ede5eb35c07a25b1b5f527" translate="yes" xml:space="preserve">
          <source>In this example, there is no confusion as to the expected behavior. It is clear that the first case is meant to fall through to the second case.</source>
          <target state="translated">En este ejemplo,no hay confusión en cuanto al comportamiento esperado.Está claro que el primer caso está destinado a caer en el segundo caso.</target>
        </trans-unit>
        <trans-unit id="7e7ef8fabcff41fe8f6f4df0b1edfce0bf6562b5" translate="yes" xml:space="preserve">
          <source>In this regular expression, it's very hard to tell how many spaces are intended to be matched. It's better to use only one space and then specify how many spaces are expected, such as:</source>
          <target state="translated">En esta expresión regular,es muy difícil decir cuántos espacios se pretenden emparejar.Es mejor usar un solo espacio y luego especificar cuántos espacios se esperan,como:</target>
        </trans-unit>
        <trans-unit id="4a189fd8ceca6899851eb5f5658a2bf4f6b54ef4" translate="yes" xml:space="preserve">
          <source>In this way, you can look for patterns in the JavaScript text itself when the AST isn't providing the appropriate data (such as location of commas, semicolons, parentheses, etc.).</source>
          <target state="translated">De esta manera,puedes buscar patrones en el propio texto de JavaScript cuando la AST no está proporcionando los datos apropiados (como la ubicación de comas,punto y coma,paréntesis,etc.).</target>
        </trans-unit>
        <trans-unit id="d5c0141841620af4d1a195b336ad8e436213bec6" translate="yes" xml:space="preserve">
          <source>In this way, you can retrieve the text and AST used for the last run of &lt;code&gt;linter.verify()&lt;/code&gt;.</source>
          <target state="translated">De esta forma, puede recuperar el texto y AST utilizados para la &amp;uacute;ltima ejecuci&amp;oacute;n de &lt;code&gt;linter.verify()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9f93ca71277a0502e3ed4131457bb0945a787ed0" translate="yes" xml:space="preserve">
          <source>In your &lt;code&gt;.eslintrc.json&lt;/code&gt;:</source>
          <target state="translated">En su &lt;code&gt;.eslintrc.json&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="009b0850360ef7549f9650d1923055c3693ba1c5" translate="yes" xml:space="preserve">
          <source>In your &lt;code&gt;index.js&lt;/code&gt; you can do something like this:</source>
          <target state="translated">En su &lt;code&gt;index.js&lt;/code&gt; puede hacer algo como esto:</target>
        </trans-unit>
        <trans-unit id="032a16fac15a2c35de7010f198a6616b53ea5447" translate="yes" xml:space="preserve">
          <source>Include a Plugin</source>
          <target state="translated">Incluye un plugin</target>
        </trans-unit>
        <trans-unit id="11727c01a1f0f864099d5b7d0794777c1a808dbc" translate="yes" xml:space="preserve">
          <source>Inconsistent array literals</source>
          <target state="translated">Literales inconsistentes de la matriz</target>
        </trans-unit>
        <trans-unit id="ca0226a65c54af3be6e8d1317608eb74c1af4347" translate="yes" xml:space="preserve">
          <source>Indent of 2 spaces with &lt;code&gt;MemberExpression&lt;/code&gt; set to &lt;code&gt;0&lt;/code&gt; will indent the multi-line property chains with 0 spaces.</source>
          <target state="translated">La sangr&amp;iacute;a de 2 espacios con &lt;code&gt;MemberExpression&lt;/code&gt; establecido en &lt;code&gt;0&lt;/code&gt; sangrar&amp;aacute; las cadenas de propiedades de varias l&amp;iacute;neas con 0 espacios.</target>
        </trans-unit>
        <trans-unit id="7291c3e61a93ea88556a7189c20daea3b648aec5" translate="yes" xml:space="preserve">
          <source>Indent of 2 spaces with &lt;code&gt;MemberExpression&lt;/code&gt; set to &lt;code&gt;1&lt;/code&gt; will indent the multi-line property chains with 2 spaces.</source>
          <target state="translated">La sangr&amp;iacute;a de 2 espacios con &lt;code&gt;MemberExpression&lt;/code&gt; establecido en &lt;code&gt;1&lt;/code&gt; sangrar&amp;aacute; las cadenas de propiedades de varias l&amp;iacute;neas con 2 espacios.</target>
        </trans-unit>
        <trans-unit id="6bc91230783ec5f7e7d075a1b0c3b0e709d44eaa" translate="yes" xml:space="preserve">
          <source>Indent of 2 spaces with &lt;code&gt;MemberExpression&lt;/code&gt; set to &lt;code&gt;2&lt;/code&gt; will indent the multi-line property chains with 4 spaces.</source>
          <target state="translated">La sangr&amp;iacute;a de 2 espacios con &lt;code&gt;MemberExpression&lt;/code&gt; establecido en &lt;code&gt;2&lt;/code&gt; sangrar&amp;aacute; las cadenas de propiedades de varias l&amp;iacute;neas con 4 espacios.</target>
        </trans-unit>
        <trans-unit id="4aa45cb0a17e641de36c01adbba849efeb37b109" translate="yes" xml:space="preserve">
          <source>Indent of 2 spaces with &lt;code&gt;SwitchCase&lt;/code&gt; set to &lt;code&gt;0&lt;/code&gt; will not indent &lt;code&gt;case&lt;/code&gt; clauses with respect to &lt;code&gt;switch&lt;/code&gt; statements.</source>
          <target state="translated">La sangr&amp;iacute;a de 2 espacios con &lt;code&gt;SwitchCase&lt;/code&gt; establecido en &lt;code&gt;0&lt;/code&gt; no sangrar&amp;aacute; las cl&amp;aacute;usulas de &lt;code&gt;case&lt;/code&gt; con respecto a las declaraciones de &lt;code&gt;switch&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f4f2a16a4131df3f89017d70bbb1ece160f90c7c" translate="yes" xml:space="preserve">
          <source>Indent of 2 spaces with &lt;code&gt;SwitchCase&lt;/code&gt; set to &lt;code&gt;1&lt;/code&gt; will indent &lt;code&gt;case&lt;/code&gt; clauses with 2 spaces with respect to &lt;code&gt;switch&lt;/code&gt; statements.</source>
          <target state="translated">Gui&amp;oacute;n 2 espacios con &lt;code&gt;SwitchCase&lt;/code&gt; conjunto a &lt;code&gt;1&lt;/code&gt; indentar&amp;aacute; &lt;code&gt;case&lt;/code&gt; cl&amp;aacute;usulas con 2 espacios con respecto al &lt;code&gt;switch&lt;/code&gt; declaraciones.</target>
        </trans-unit>
        <trans-unit id="fa3ef7698444ec15ef47c06f1146395abe21723b" translate="yes" xml:space="preserve">
          <source>Indent of 2 spaces with &lt;code&gt;SwitchCase&lt;/code&gt; set to &lt;code&gt;2&lt;/code&gt; will indent &lt;code&gt;case&lt;/code&gt; clauses with 4 spaces with respect to &lt;code&gt;switch&lt;/code&gt; statements.</source>
          <target state="translated">Gui&amp;oacute;n 2 espacios con &lt;code&gt;SwitchCase&lt;/code&gt; conjunto a &lt;code&gt;2&lt;/code&gt; indentar&amp;aacute; &lt;code&gt;case&lt;/code&gt; cl&amp;aacute;usulas con 4 espacios con respecto al &lt;code&gt;switch&lt;/code&gt; declaraciones.</target>
        </trans-unit>
        <trans-unit id="04b9c9c421c16f0b5f05a25e69465b0bc0f1be79" translate="yes" xml:space="preserve">
          <source>Indent of 2 spaces with &lt;code&gt;VariableDeclarator&lt;/code&gt; set to &lt;code&gt;2&lt;/code&gt; will indent the multi-line variable declarations with 4 spaces.</source>
          <target state="translated">La sangr&amp;iacute;a de 2 espacios con &lt;code&gt;VariableDeclarator&lt;/code&gt; establecido en &lt;code&gt;2&lt;/code&gt; sangrar&amp;aacute; las declaraciones de variables de varias l&amp;iacute;neas con 4 espacios.</target>
        </trans-unit>
        <trans-unit id="0c8ebca7ea1eadf77aa1539aee5992376aa42b9a" translate="yes" xml:space="preserve">
          <source>Indent of 2 spaces with &lt;code&gt;VariableDeclarator&lt;/code&gt; set to &lt;code&gt;{&quot;var&quot;: 2, &quot;let&quot;: 2, &quot;const&quot;: 3}&lt;/code&gt; will indent the multi-line variable declarations with 4 spaces for &lt;code&gt;var&lt;/code&gt; and &lt;code&gt;let&lt;/code&gt;, 6 spaces for &lt;code&gt;const&lt;/code&gt; statements.</source>
          <target state="translated">Sangr&amp;iacute;a de 2 espacios con &lt;code&gt;VariableDeclarator&lt;/code&gt; establecido en &lt;code&gt;{&quot;var&quot;: 2, &quot;let&quot;: 2, &quot;const&quot;: 3}&lt;/code&gt; sangrar&amp;aacute; las declaraciones de variables multil&amp;iacute;nea con 4 espacios para &lt;code&gt;var&lt;/code&gt; y &lt;code&gt;let&lt;/code&gt; , 6 espacios para declaraciones &lt;code&gt;const&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="37da0f8ed8adb3a9ae9717323caef07582ce3615" translate="yes" xml:space="preserve">
          <source>Indent of 4 spaces with &lt;code&gt;MemberExpression&lt;/code&gt; set to &lt;code&gt;0&lt;/code&gt; will indent the multi-line property chains with 0 spaces.</source>
          <target state="translated">La sangr&amp;iacute;a de 4 espacios con &lt;code&gt;MemberExpression&lt;/code&gt; establecido en &lt;code&gt;0&lt;/code&gt; sangrar&amp;aacute; las cadenas de propiedades de varias l&amp;iacute;neas con 0 espacios.</target>
        </trans-unit>
        <trans-unit id="81800a33fcf8d34618c84a566cae8af76effa434" translate="yes" xml:space="preserve">
          <source>Indent of 4 spaces with &lt;code&gt;MemberExpression&lt;/code&gt; set to &lt;code&gt;1&lt;/code&gt; will indent the multi-line property chains with 4 spaces.</source>
          <target state="translated">La sangr&amp;iacute;a de 4 espacios con &lt;code&gt;MemberExpression&lt;/code&gt; establecida en &lt;code&gt;1&lt;/code&gt; sangrar&amp;aacute; las cadenas de propiedades de varias l&amp;iacute;neas con 4 espacios.</target>
        </trans-unit>
        <trans-unit id="0adfe437bd53df09a8a1d1b8b57ebaa2b74de516" translate="yes" xml:space="preserve">
          <source>Indent of 4 spaces with &lt;code&gt;MemberExpression&lt;/code&gt; set to &lt;code&gt;2&lt;/code&gt; will indent the multi-line property chains with 8 spaces.</source>
          <target state="translated">La sangr&amp;iacute;a de 4 espacios con &lt;code&gt;MemberExpression&lt;/code&gt; establecido en &lt;code&gt;2&lt;/code&gt; sangrar&amp;aacute; las cadenas de propiedades de varias l&amp;iacute;neas con 8 espacios.</target>
        </trans-unit>
        <trans-unit id="c377f9f2c9baba9b61174102349a3cff039f772b" translate="yes" xml:space="preserve">
          <source>Indent of 4 spaces with &lt;code&gt;VariableDeclarator&lt;/code&gt; set to &lt;code&gt;2&lt;/code&gt; will indent the multi-line variable declarations with 8 spaces.</source>
          <target state="translated">La sangr&amp;iacute;a de 4 espacios con &lt;code&gt;VariableDeclarator&lt;/code&gt; establecida en &lt;code&gt;2&lt;/code&gt; sangrar&amp;aacute; las declaraciones de variables de varias l&amp;iacute;neas con 8 espacios.</target>
        </trans-unit>
        <trans-unit id="249477091acfdfe0764a4626099be04431debedd" translate="yes" xml:space="preserve">
          <source>Indent of tab with &lt;code&gt;SwitchCase&lt;/code&gt; set to &lt;code&gt;2&lt;/code&gt; will indent &lt;code&gt;case&lt;/code&gt; clauses with 2 tabs with respect to &lt;code&gt;switch&lt;/code&gt; statements.</source>
          <target state="translated">Gui&amp;oacute;n de la pesta&amp;ntilde;a con &lt;code&gt;SwitchCase&lt;/code&gt; conjunto a &lt;code&gt;2&lt;/code&gt; indentar&amp;aacute; &lt;code&gt;case&lt;/code&gt; cl&amp;aacute;usulas con 2 pesta&amp;ntilde;as con respecto al &lt;code&gt;switch&lt;/code&gt; declaraciones.</target>
        </trans-unit>
        <trans-unit id="f517b0d431fab414c01fa41d1cb1ba6e2c691bfe" translate="yes" xml:space="preserve">
          <source>Indent of tab with &lt;code&gt;VariableDeclarator&lt;/code&gt; set to &lt;code&gt;2&lt;/code&gt; will indent the multi-line variable declarations with 2 tabs.</source>
          <target state="translated">La sangr&amp;iacute;a de la pesta&amp;ntilde;a con &lt;code&gt;VariableDeclarator&lt;/code&gt; establecida en &lt;code&gt;2&lt;/code&gt; sangrar&amp;aacute; las declaraciones de variables de varias l&amp;iacute;neas con 2 pesta&amp;ntilde;as.</target>
        </trans-unit>
        <trans-unit id="be85770cb5a76a0818b1bf2921835273683eab9e" translate="yes" xml:space="preserve">
          <source>Indent style</source>
          <target state="translated">Estilo indio</target>
        </trans-unit>
        <trans-unit id="c9ec7fcf0ce1c005cbdd2ae9ab39e1773e6bf368" translate="yes" xml:space="preserve">
          <source>Indentation</source>
          <target state="translated">Indentation</target>
        </trans-unit>
        <trans-unit id="e6261109da4902b33b9cd6b6a6e13950c7b2f265" translate="yes" xml:space="preserve">
          <source>Individual rules are the most specialized part of the ESLint architecture. Rules can do very little, they are simply a set of instructions executed against an AST that is provided. They do get some context information passed in, but the primary responsibility of a rule is to inspect the AST and report warnings.</source>
          <target state="translated">Las reglas individuales son la parte más especializada de la arquitectura de ESLint.Las reglas pueden hacer muy poco,son simplemente un conjunto de instrucciones ejecutadas contra un AST que se proporciona.Consiguen que se pase alguna información de contexto,pero la responsabilidad principal de una regla es inspeccionar la AST y reportar las advertencias.</target>
        </trans-unit>
        <trans-unit id="a85c159fc06136af3a0e6f3ef7f7b357155918ae" translate="yes" xml:space="preserve">
          <source>Infix notation is considered to be more readable and thus more preferable than the function notation.</source>
          <target state="translated">La notación Infix se considera más legible y,por lo tanto,más preferible que la notación de función.</target>
        </trans-unit>
        <trans-unit id="171e49fd6eadd04f3820993c4be21fe5a1b35166" translate="yes" xml:space="preserve">
          <source>Inline configuration</source>
          <target state="translated">Configuración en línea</target>
        </trans-unit>
        <trans-unit id="d2fd04fd84101709fd89ec790e1371ff8b9ef63c" translate="yes" xml:space="preserve">
          <source>Inline configuration comments</source>
          <target state="translated">Comentarios de configuración en línea</target>
        </trans-unit>
        <trans-unit id="9585f00332de4d4f8c32369ef56719ceb72cd815" translate="yes" xml:space="preserve">
          <source>Inside an &lt;code&gt;async function&lt;/code&gt;, &lt;code&gt;return await&lt;/code&gt; is seldom useful. Since the return value of an &lt;code&gt;async function&lt;/code&gt; is always wrapped in &lt;code&gt;Promise.resolve&lt;/code&gt;, &lt;code&gt;return await&lt;/code&gt; doesn&amp;rsquo;t actually do anything except add extra time before the overarching Promise resolves or rejects. The only valid exception is if &lt;code&gt;return await&lt;/code&gt; is used in a try/catch statement to catch errors from another Promise-based function.</source>
          <target state="translated">Dentro de una &lt;code&gt;async function&lt;/code&gt; , &lt;code&gt;return await&lt;/code&gt; rara vez es &amp;uacute;til. Dado que el valor de retorno de una &lt;code&gt;async function&lt;/code&gt; siempre est&amp;aacute; envuelto en &lt;code&gt;Promise.resolve&lt;/code&gt; , &lt;code&gt;return await&lt;/code&gt; await en realidad no hace nada excepto agregar tiempo adicional antes de que la Promise general se resuelva o rechace. La &amp;uacute;nica excepci&amp;oacute;n v&amp;aacute;lida es si se usa &lt;code&gt;return await&lt;/code&gt; en una declaraci&amp;oacute;n try / catch para detectar errores de otra funci&amp;oacute;n basada en Promise.</target>
        </trans-unit>
        <trans-unit id="eb0de3cbdd2ccc580ba1ed8ca26a4b30319c1d03" translate="yes" xml:space="preserve">
          <source>Inside your &lt;code&gt;/lib/ci.js&lt;/code&gt; you have</source>
          <target state="translated">Dentro de su &lt;code&gt;/lib/ci.js&lt;/code&gt; tiene</target>
        </trans-unit>
        <trans-unit id="97641fdd5c503b70c8becbd4ce8f7e9e8d44e3c6" translate="yes" xml:space="preserve">
          <source>Inside your &lt;code&gt;/lib/ci/common.js&lt;/code&gt;</source>
          <target state="translated">Dentro de su &lt;code&gt;/lib/ci/common.js&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="79793a6b410e0433146645ca2357b284caa999c3" translate="yes" xml:space="preserve">
          <source>Inspect the AST for specific patterns</source>
          <target state="translated">Inspeccione la AST para ver si hay patrones específicos</target>
        </trans-unit>
        <trans-unit id="aa191a92122db1dd534e01a6f8db776a244a258a" translate="yes" xml:space="preserve">
          <source>Inspecting JavaScript code strings</source>
          <target state="translated">Inspeccionando las cadenas de código JavaScript</target>
        </trans-unit>
        <trans-unit id="c606fdbf6de357bfc1116bac2ce0d38a13ee0476" translate="yes" xml:space="preserve">
          <source>Installation and Usage</source>
          <target state="translated">Instalación y uso</target>
        </trans-unit>
        <trans-unit id="e15807031e6ce06bd523ee795f410f6739658f43" translate="yes" xml:space="preserve">
          <source>Instances where an arrow function would not produce identical results will be ignored.</source>
          <target state="translated">Se ignorarán los casos en que una función de flecha no produzca resultados idénticos.</target>
        </trans-unit>
        <trans-unit id="cd015dcfc5986643aac68a740707e55386dfe2e8" translate="yes" xml:space="preserve">
          <source>Instead of those, you can comply with the rule by writing</source>
          <target state="translated">En lugar de eso,puedes cumplir con la regla escribiendo</target>
        </trans-unit>
        <trans-unit id="6029437e076bc4c6afdd7d074c7461678e957ef0" translate="yes" xml:space="preserve">
          <source>Instead of typing out messages in both the &lt;code&gt;context.report()&lt;/code&gt; call and your tests, you can use &lt;code&gt;messageId&lt;/code&gt;s instead.</source>
          <target state="translated">En lugar de escribir mensajes tanto en la llamada &lt;code&gt;context.report()&lt;/code&gt; como en sus pruebas, puede usar &lt;code&gt;messageId&lt;/code&gt; s en su lugar.</target>
        </trans-unit>
        <trans-unit id="ad4af54fe31ce812575acd3bb59ea228cff9bbd9" translate="yes" xml:space="preserve">
          <source>Instead of using a &lt;code&gt;desc&lt;/code&gt; key for suggestions a &lt;code&gt;messageId&lt;/code&gt; can be used instead. This works the same way as &lt;code&gt;messageId&lt;/code&gt;s for the overall error (see &lt;a href=&quot;#messageIds&quot;&gt;messageIds&lt;/a&gt;). Here is an example of how to use it in a rule:</source>
          <target state="translated">En lugar de usar una clave &lt;code&gt;desc&lt;/code&gt; para sugerencias, se puede usar un &lt;code&gt;messageId&lt;/code&gt; . Esto funciona de la misma manera que &lt;code&gt;messageId&lt;/code&gt; s para el error general (ver &lt;a href=&quot;#messageIds&quot;&gt;messageIds&lt;/a&gt; ). A continuaci&amp;oacute;n, se muestra un ejemplo de c&amp;oacute;mo usarlo en una regla:</target>
        </trans-unit>
        <trans-unit id="a7881cac6e64abca5eafd172df6eb31fe0b84c88" translate="yes" xml:space="preserve">
          <source>Integrations</source>
          <target state="translated">Integrations</target>
        </trans-unit>
        <trans-unit id="7ce82ae5f06c2403a942ea5944563684a05c2677" translate="yes" xml:space="preserve">
          <source>IntelliJ IDEA, RubyMine, WebStorm, PhpStorm, PyCharm, AppCode, Android Studio, 0xDBE: &lt;a href=&quot;https://plugins.jetbrains.com/plugin/7494-eslint&quot;&gt;ESLint Plugin&lt;/a&gt;</source>
          <target state="translated">IntelliJ IDEA, RubyMine, WebStorm, PhpStorm, PyCharm, AppCode, Android Studio, 0xDBE: &lt;a href=&quot;https://plugins.jetbrains.com/plugin/7494-eslint&quot;&gt;complemento de ESLint&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0dcaca927eb571b52afe4df5a018ef73e1f47fd6" translate="yes" xml:space="preserve">
          <source>Inter-property Delimiters</source>
          <target state="translated">Delimitadores interpropiedades</target>
        </trans-unit>
        <trans-unit id="d2e6be9cff98375cf9b71efc8412555587e67bf3" translate="yes" xml:space="preserve">
          <source>Internally, the list of core modules is retrieved via &lt;code&gt;require(&quot;repl&quot;)._builtinLibs&lt;/code&gt;. If you use different versions of Node.js for ESLint and your application, the list of core modules for each version may be different. The above mentioned &lt;code&gt;_builtinLibs&lt;/code&gt; property became available in 0.8, for earlier versions a hardcoded list of module names is used as a fallback. If your version of Node.js is older than 0.6 that list may be inaccurate.</source>
          <target state="translated">Internamente, la lista de m&amp;oacute;dulos principales se recupera a trav&amp;eacute;s de &lt;code&gt;require(&quot;repl&quot;)._builtinLibs&lt;/code&gt; . Si usa diferentes versiones de Node.js para ESLint y su aplicaci&amp;oacute;n, la lista de m&amp;oacute;dulos principales para cada versi&amp;oacute;n puede ser diferente. La propiedad &lt;code&gt;_builtinLibs&lt;/code&gt; mencionada anteriormente estuvo disponible en 0.8, para versiones anteriores se usa una lista codificada de nombres de m&amp;oacute;dulos como respaldo. Si su versi&amp;oacute;n de Node.js es anterior a 0.6, esa lista puede ser inexacta.</target>
        </trans-unit>
        <trans-unit id="a353823bf4679ac9a97ecdcdda169f480ccc4e6b" translate="yes" xml:space="preserve">
          <source>Interpreting command line arguments</source>
          <target state="translated">Interpretar los argumentos de la línea de mando</target>
        </trans-unit>
        <trans-unit id="44cd6f5293258a62e092650968ebc166ee72f7e8" translate="yes" xml:space="preserve">
          <source>Introduced in ES2016, the infix exponentiation operator &lt;code&gt;**&lt;/code&gt; is an alternative for the standard &lt;code&gt;Math.pow&lt;/code&gt; function.</source>
          <target state="translated">Introducido en ES2016, el operador de exponenciaci&amp;oacute;n infijo &lt;code&gt;**&lt;/code&gt; es una alternativa para la funci&amp;oacute;n &lt;code&gt;Math.pow&lt;/code&gt; est&amp;aacute;ndar .</target>
        </trans-unit>
        <trans-unit id="306481a508a9005a041e40b4b6b65eb7b3a5810a" translate="yes" xml:space="preserve">
          <source>Introduced in ES2018, object spread is a declarative alternative which may perform better than the more dynamic, imperative &lt;code&gt;Object.assign&lt;/code&gt;.</source>
          <target state="translated">Introducido en ES2018, objeto propagaci&amp;oacute;n es una alternativa declarativa que puede funcionar mejor que el m&amp;aacute;s din&amp;aacute;mico, imprescindible &lt;code&gt;Object.assign&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="98ba7cd71bb7b6ecec8a3a9d63e39097f51862b5" translate="yes" xml:space="preserve">
          <source>Invalid Code</source>
          <target state="translated">Código inválido</target>
        </trans-unit>
        <trans-unit id="815945ae0fe3963181a2bfa1fb673d90efae01ff" translate="yes" xml:space="preserve">
          <source>Invalid or irregular whitespace causes issues with ECMAScript 5 parsers and also makes code harder to debug in a similar nature to mixed tabs and spaces.</source>
          <target state="translated">Los espacios en blanco inválidos o irregulares causan problemas con los analizadores de ECMAScript 5 y también hacen que el código sea más difícil de depurar de forma similar a los espacios y pestañas mixtos.</target>
        </trans-unit>
        <trans-unit id="d5b11134917a485155a6f88cb85472d4bfbf86f8" translate="yes" xml:space="preserve">
          <source>Is NOT a valid character within JSON which would cause parse errors</source>
          <target state="translated">NO es un personaje válido dentro de JSON,lo que causaría errores de análisis.</target>
        </trans-unit>
        <trans-unit id="60cf4231de6804a719f7211d9a553afb7accfba5" translate="yes" xml:space="preserve">
          <source>Is NOT considered a separator for tokens and is often parsed as an &lt;code&gt;Unexpected token ILLEGAL&lt;/code&gt;</source>
          <target state="translated">NO se considera un separador de tokens y a menudo se analiza como un &lt;code&gt;Unexpected token ILLEGAL&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="957302f33f2dc5759ecc018bc572081e80d88860" translate="yes" xml:space="preserve">
          <source>Is NOT shown in modern browsers making code repository software expected to resolve the visualization</source>
          <target state="translated">NO se muestra en los navegadores modernos haciendo que el software de repositorio de código se espera que resuelva la visualización</target>
        </trans-unit>
        <trans-unit id="dc9cf4d64ebc62cf137d309a08c91bfd3d80092e" translate="yes" xml:space="preserve">
          <source>Is this issue available for me to work on? If you have little or no experience contributing to ESLint, the &lt;a href=&quot;https://github.com/eslint/eslint/labels/good%20first%20issue&quot;&gt;&lt;code&gt;good first issue&lt;/code&gt;&lt;/a&gt; label marks appropriate issues. Otherwise, the &lt;a href=&quot;https://github.com/eslint/eslint/labels/help%20wanted&quot;&gt;&lt;code&gt;help wanted&lt;/code&gt;&lt;/a&gt; label is an invitation to work on the issue. If you have more experience, you can try working on other issues labeled &lt;a href=&quot;https://github.com/eslint/eslint/labels/accepted&quot;&gt;&lt;code&gt;accepted&lt;/code&gt;&lt;/a&gt;. Conversely, issues not yet ready to work on are labeled &lt;code&gt;triage&lt;/code&gt;, &lt;code&gt;evaluating&lt;/code&gt;, and/or &lt;code&gt;needs bikeshedding&lt;/code&gt;, and issues that cannot currently be worked on because of something else, such as a bug in a dependency, are labeled &lt;code&gt;blocked&lt;/code&gt;.</source>
          <target state="translated">&amp;iquest;Puedo trabajar en este problema? Si tiene poca o ninguna experiencia contribuyendo a ESLint, la &lt;a href=&quot;https://github.com/eslint/eslint/labels/good%20first%20issue&quot;&gt; &lt;code&gt;good first issue&lt;/code&gt; &lt;/a&gt; etiqueta de primer n&amp;uacute;mero marca los problemas apropiados. De lo contrario, la etiqueta de se necesita &lt;a href=&quot;https://github.com/eslint/eslint/labels/help%20wanted&quot;&gt; &lt;code&gt;help wanted&lt;/code&gt; &lt;/a&gt; es una invitaci&amp;oacute;n a trabajar en el tema. Si tiene m&amp;aacute;s experiencia, puede intentar trabajar en otros problemas etiquetados como &lt;a href=&quot;https://github.com/eslint/eslint/labels/accepted&quot;&gt; &lt;code&gt;accepted&lt;/code&gt; &lt;/a&gt; . Por el contrario, los problemas que a&amp;uacute;n no est&amp;aacute;n listos para trabajar se etiquetan como &lt;code&gt;triage&lt;/code&gt; , &lt;code&gt;evaluating&lt;/code&gt; y / o &lt;code&gt;needs bikeshedding&lt;/code&gt; , y los problemas en los que actualmente no se puede trabajar debido a otra cosa, como un error en una dependencia, se etiquetan como &lt;code&gt;blocked&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8d7a2b9ab5c52c5baa98c0142e1ecf88e976d9a7" translate="yes" xml:space="preserve">
          <source>Issue 5848: Exponentiation operator ** has different results for numbers and variables from 50 upwards</source>
          <target state="translated">Número 5848:El operador de Exponenciación **tiene resultados diferentes para los números y variables de 50 en adelante</target>
        </trans-unit>
        <trans-unit id="37728d8bc7a4f09a840422afa258e772e00bb890" translate="yes" xml:space="preserve">
          <source>Issue Labels</source>
          <target state="translated">Etiquetas de emisión</target>
        </trans-unit>
        <trans-unit id="be652d16de194c250a891ad0f6808f168955fcd0" translate="yes" xml:space="preserve">
          <source>It can also take an object with lists of &lt;code&gt;paths&lt;/code&gt; and gitignore-style &lt;code&gt;patterns&lt;/code&gt; strings.</source>
          <target state="translated">Tambi&amp;eacute;n puede tomar un objeto con listas de &lt;code&gt;paths&lt;/code&gt; y cadenas de &lt;code&gt;patterns&lt;/code&gt; estilo gitignore .</target>
        </trans-unit>
        <trans-unit id="2924f65b6a87a4bd47f6db0bc1044df77741aec9" translate="yes" xml:space="preserve">
          <source>It creates the paths from &lt;code&gt;try&lt;/code&gt; block to &lt;code&gt;catch&lt;/code&gt; block at:</source>
          <target state="translated">Crea las rutas desde el bloque &lt;code&gt;try&lt;/code&gt; hasta el bloque &lt;code&gt;catch&lt;/code&gt; en:</target>
        </trans-unit>
        <trans-unit id="fdb515fbd413583a1777a93401fe6bf040d961f9" translate="yes" xml:space="preserve">
          <source>It creates two code paths.</source>
          <target state="translated">Crea dos rutas de código.</target>
        </trans-unit>
        <trans-unit id="e0d45deb43503113017a4d4ddd12a12a01bba178" translate="yes" xml:space="preserve">
          <source>It either requires or disallows spaces between the brackets and the values inside of them. This rule does not apply to brackets that are separated from the adjacent value by a newline.</source>
          <target state="translated">Requiere o no espacios entre los paréntesis y los valores dentro de ellos.Esta regla no se aplica a los paréntesis que están separados del valor adyacente por una nueva línea.</target>
        </trans-unit>
        <trans-unit id="1437185c6ef9d0863b444bd8bb4f3398c15e78df" translate="yes" xml:space="preserve">
          <source>It has two settings:</source>
          <target state="translated">Tiene dos configuraciones:</target>
        </trans-unit>
        <trans-unit id="8eac4161f004a7becbe3061ce8c3b4bd97a4b319" translate="yes" xml:space="preserve">
          <source>It is a &lt;code&gt;for()&lt;/code&gt;, &lt;code&gt;while()&lt;/code&gt;, &lt;code&gt;do&lt;/code&gt;, &lt;code&gt;if()&lt;/code&gt;, or &lt;code&gt;else&lt;/code&gt;, and there is no &lt;code&gt;{&lt;/code&gt;</source>
          <target state="translated">Es un &lt;code&gt;for()&lt;/code&gt; , &lt;code&gt;while()&lt;/code&gt; , &lt;code&gt;do&lt;/code&gt; , &lt;code&gt;if()&lt;/code&gt; o &lt;code&gt;else&lt;/code&gt; , y no hay &lt;code&gt;{&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f04b31fe116a81aee3104f1518870b3f9f257e4d" translate="yes" xml:space="preserve">
          <source>It is also possible to install ESLint globally rather than locally (using &lt;code&gt;npm install eslint --global&lt;/code&gt;). However, this is not recommended, and any plugins or shareable configs that you use must be installed locally in either case.</source>
          <target state="translated">Tambi&amp;eacute;n es posible instalar ESLint globalmente en lugar de localmente (usando &lt;code&gt;npm install eslint --global&lt;/code&gt; ). Sin embargo, esto no se recomienda, y cualquier complemento o configuraci&amp;oacute;n para compartir que use debe instalarse localmente en cualquier caso.</target>
        </trans-unit>
        <trans-unit id="60d8bb2666fcd22fb48ff106ea15d22786cda53c" translate="yes" xml:space="preserve">
          <source>It is called (&lt;code&gt;foo()&lt;/code&gt;) or constructed (&lt;code&gt;new foo()&lt;/code&gt;)</source>
          <target state="translated">Se llama ( &lt;code&gt;foo()&lt;/code&gt; ) o se construye ( &lt;code&gt;new foo()&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="d50a64c3ddd7bf38274c6a5f24e1b180a437f3ae" translate="yes" xml:space="preserve">
          <source>It is considered good practice to only &lt;code&gt;throw&lt;/code&gt; the &lt;code&gt;Error&lt;/code&gt; object itself or an object using the &lt;code&gt;Error&lt;/code&gt; object as base objects for user-defined exceptions. The fundamental benefit of &lt;code&gt;Error&lt;/code&gt; objects is that they automatically keep track of where they were built and originated.</source>
          <target state="translated">Se considera una buena pr&amp;aacute;ctica &lt;code&gt;throw&lt;/code&gt; solo el objeto &lt;code&gt;Error&lt;/code&gt; en s&amp;iacute; o un objeto que utilice el objeto &lt;code&gt;Error&lt;/code&gt; como objetos base para las excepciones definidas por el usuario. El beneficio fundamental de los objetos &lt;code&gt;Error&lt;/code&gt; es que realizan un seguimiento autom&amp;aacute;tico de d&amp;oacute;nde se crearon y se originaron.</target>
        </trans-unit>
        <trans-unit id="be5f31a9c2ec8133c8f35672e41c04c2511eb6b8" translate="yes" xml:space="preserve">
          <source>It is considered good practice to only pass instances of the built-in &lt;code&gt;Error&lt;/code&gt; object to the &lt;code&gt;reject()&lt;/code&gt; function for user-defined errors in Promises. &lt;code&gt;Error&lt;/code&gt; objects automatically store a stack trace, which can be used to debug an error by determining where it came from. If a Promise is rejected with a non-&lt;code&gt;Error&lt;/code&gt; value, it can be difficult to determine where the rejection occurred.</source>
          <target state="translated">Se considera una buena pr&amp;aacute;ctica pasar solo instancias del objeto &lt;code&gt;Error&lt;/code&gt; incorporado a la funci&amp;oacute;n de &lt;code&gt;reject()&lt;/code&gt; para errores definidos por el usuario en Promises. &lt;code&gt;Error&lt;/code&gt; objetos de error almacenan autom&amp;aacute;ticamente un seguimiento de la pila, que se puede utilizar para depurar un error determinando de d&amp;oacute;nde proviene. Si se rechaza una Promesa con un valor que no es de &lt;code&gt;Error&lt;/code&gt; , puede ser dif&amp;iacute;cil determinar d&amp;oacute;nde ocurri&amp;oacute; el rechazo.</target>
        </trans-unit>
        <trans-unit id="a4efad34ec75493b8be888ef3c0c9c3a3be295e6" translate="yes" xml:space="preserve">
          <source>It is considered good practice to use the type-safe equality operators &lt;code&gt;===&lt;/code&gt; and &lt;code&gt;!==&lt;/code&gt; instead of their regular counterparts &lt;code&gt;==&lt;/code&gt; and &lt;code&gt;!=&lt;/code&gt;.</source>
          <target state="translated">Se considera una buena pr&amp;aacute;ctica utilizar los operadores de igualdad de tipo seguro &lt;code&gt;===&lt;/code&gt; y &lt;code&gt;!==&lt;/code&gt; lugar de sus equivalentes habituales &lt;code&gt;==&lt;/code&gt; y &lt;code&gt;!=&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2db77118d25a6696528bec7e8025641d13ef6524" translate="yes" xml:space="preserve">
          <source>It is difficult to tell the intent of the &lt;code&gt;return&lt;/code&gt; statement here. It's possible that the function is meant to return the result of &lt;code&gt;bar + 2&lt;/code&gt;, but then why is it assigning to &lt;code&gt;foo&lt;/code&gt;? It's also possible that the intent was to use a comparison operator such as &lt;code&gt;==&lt;/code&gt; and that this code is an error.</source>
          <target state="translated">Es dif&amp;iacute;cil decir aqu&amp;iacute; la intenci&amp;oacute;n de la declaraci&amp;oacute;n de &lt;code&gt;return&lt;/code&gt; . Es posible que la funci&amp;oacute;n est&amp;eacute; destinada a devolver el resultado de la &lt;code&gt;bar + 2&lt;/code&gt; , pero &amp;iquest;por qu&amp;eacute; se asigna a &lt;code&gt;foo&lt;/code&gt; ? Tambi&amp;eacute;n es posible que la intenci&amp;oacute;n fuera utilizar un operador de comparaci&amp;oacute;n como &lt;code&gt;==&lt;/code&gt; y que este c&amp;oacute;digo sea un error.</target>
        </trans-unit>
        <trans-unit id="2bfab86bd0d58f0b204ea60ad86d6c48fe5638be" translate="yes" xml:space="preserve">
          <source>It is never permissible to omit the braces in any part of an &lt;code&gt;if&lt;/code&gt; statement.</source>
          <target state="translated">Nunca est&amp;aacute; permitido omitir las llaves en ninguna parte de una declaraci&amp;oacute;n &lt;code&gt;if&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0d610283fcff3de92ca8a3e960496ebdd493acd5" translate="yes" xml:space="preserve">
          <source>It is often necessary to capture the current execution context in order to make it available subsequently. A prominent example of this are jQuery callbacks:</source>
          <target state="translated">A menudo es necesario captar el contexto de ejecución actual para poder disponer de él posteriormente.Un ejemplo destacado de esto son las llamadas de jQuery:</target>
        </trans-unit>
        <trans-unit id="dfc9afbf00569a0e87286216aa95f76c773a479c" translate="yes" xml:space="preserve">
          <source>It is passed into a function as an argument (&lt;code&gt;doSomething(foo)&lt;/code&gt;)</source>
          <target state="translated">Se pasa a una funci&amp;oacute;n como argumento (hacer algo &lt;code&gt;doSomething(foo)&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="dfa2013456253628c34682b02d1086b4f4ef7bcc" translate="yes" xml:space="preserve">
          <source>It is read (&lt;code&gt;var bar = foo&lt;/code&gt;)</source>
          <target state="translated">Se lee ( &lt;code&gt;var bar = foo&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="0a1cbdcc89556b2945c916ade57ddabf664e1243" translate="yes" xml:space="preserve">
          <source>It is read inside of a function that is passed to another function (&lt;code&gt;doSomething(function() { foo(); })&lt;/code&gt;)</source>
          <target state="translated">Se lee dentro de una funci&amp;oacute;n que se pasa a otra funci&amp;oacute;n ( &lt;code&gt;doSomething(function() { foo(); })&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="cbbe54b3892924943f5cfe9bf7ffc5f5c0209850" translate="yes" xml:space="preserve">
          <source>It is the best practice to avoid 'polluting' the global scope with variables that are intended to be local to the script.</source>
          <target state="translated">La mejor práctica es evitar &quot;contaminar&quot; el ámbito global con variables que pretenden ser locales al guión.</target>
        </trans-unit>
        <trans-unit id="d55327c58055d26684cdaa59dbf53b5743e7d61a" translate="yes" xml:space="preserve">
          <source>It may facilitate identifying symbols when one is observed during debugging.</source>
          <target state="translated">Puede facilitar la identificación de los símbolos cuando se observa uno durante la depuración.</target>
        </trans-unit>
        <trans-unit id="114d866dd6678baad5a769edfd94f8aa8e3b81d5" translate="yes" xml:space="preserve">
          <source>It must be a Node module loadable from the config file where it appears. Usually, this means you should install the parser package separately using npm.</source>
          <target state="translated">Debe ser un módulo de nodos que se pueda cargar desde el archivo de configuración donde aparece.Normalmente,esto significa que debes instalar el paquete parser por separado usando npm.</target>
        </trans-unit>
        <trans-unit id="41cebf36bc0a3258b56f36013f221f214f448509" translate="yes" xml:space="preserve">
          <source>It must conform to the &lt;a href=&quot;../developer-guide/working-with-plugins#working-with-custom-parsers&quot;&gt;parser interface&lt;/a&gt;.</source>
          <target state="translated">Debe ajustarse a la &lt;a href=&quot;../developer-guide/working-with-plugins#working-with-custom-parsers&quot;&gt;interfaz del analizador&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cf3f5af0d35e26dd178828257b423e55cf86a169" translate="yes" xml:space="preserve">
          <source>It will not catch blacklisted identifiers that are:</source>
          <target state="translated">No atrapará los identificadores de la lista negra que sí lo están:</target>
        </trans-unit>
        <trans-unit id="f5d0d8c3a73df7cb32016f4fcb17e2f5afe0755f" translate="yes" xml:space="preserve">
          <source>It's a common mistake in JavaScript to create an object with just a setter for a property but never have a corresponding getter defined for it. Without a getter, you cannot read the property, so it ends up not being used.</source>
          <target state="translated">Es un error común en JavaScript crear un objeto con sólo un setter para una propiedad pero nunca tener un getter correspondiente definido para ella.Sin un getter,no se puede leer la propiedad,por lo que termina no siendo utilizada.</target>
        </trans-unit>
        <trans-unit id="9bc2aa041aeca24b1e83bce8e14db39165127131" translate="yes" xml:space="preserve">
          <source>It's a common mistake in JavaScript to use a conditional expression to select between two Boolean values instead of using ! to convert the test to a Boolean. Here are some examples:</source>
          <target state="translated">Es un error común en JavaScript utilizar una expresión condicional para seleccionar entre dos valores booleanos en lugar de usar ! para convertir la prueba en una booleana.Aquí hay algunos ejemplos:</target>
        </trans-unit>
        <trans-unit id="1540ef4737be0d6ff417a0782976005f83977b1f" translate="yes" xml:space="preserve">
          <source>It's also possible to manually create a new wrapper instance:</source>
          <target state="translated">También es posible crear manualmente una nueva instancia de envoltura:</target>
        </trans-unit>
        <trans-unit id="db4f5e50534780f1446698505a2d5bbe87d770d4" translate="yes" xml:space="preserve">
          <source>It's considered a best practice to avoid initializing variables to &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">Se considera una buena pr&amp;aacute;ctica evitar inicializar variables en &lt;code&gt;undefined&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3b947e8368ebaac8be7eb45d05db7c278b4d8d20" translate="yes" xml:space="preserve">
          <source>It's considered a good practice to avoid using &lt;code&gt;eval()&lt;/code&gt; in JavaScript. There are security and performance implications involved with doing so, which is why many linters (including ESLint) recommend disallowing &lt;code&gt;eval()&lt;/code&gt;. However, there are some other ways to pass a string and have it interpreted as JavaScript code that have similar concerns.</source>
          <target state="translated">Se considera una buena pr&amp;aacute;ctica evitar el uso de &lt;code&gt;eval()&lt;/code&gt; en JavaScript. Esto implica implicaciones de seguridad y rendimiento, por lo que muchos usuarios (incluido ESLint) recomiendan no permitir &lt;code&gt;eval()&lt;/code&gt; . Sin embargo, hay otras formas de pasar una cadena e interpretarla como c&amp;oacute;digo JavaScript que tienen preocupaciones similares.</target>
        </trans-unit>
        <trans-unit id="918a92ed2fd168a3c3cdb4b8edf6fc35db93de45" translate="yes" xml:space="preserve">
          <source>It's hard to tell, but there are two spaces between &lt;code&gt;foo&lt;/code&gt; and &lt;code&gt;===&lt;/code&gt;. Multiple spaces such as this are generally frowned upon in favor of single spaces:</source>
          <target state="translated">Es dif&amp;iacute;cil de decir, pero hay dos espacios entre &lt;code&gt;foo&lt;/code&gt; y &lt;code&gt;===&lt;/code&gt; . Los espacios m&amp;uacute;ltiples como este generalmente est&amp;aacute;n mal vistos a favor de los espacios &amp;uacute;nicos:</target>
        </trans-unit>
        <trans-unit id="b430d90d24691524aa348af6d5cc4d1cefef18fc" translate="yes" xml:space="preserve">
          <source>It's less common to use &lt;code&gt;new&lt;/code&gt; and not store the result, such as:</source>
          <target state="translated">Es menos com&amp;uacute;n usar &lt;code&gt;new&lt;/code&gt; y no almacenar el resultado, como:</target>
        </trans-unit>
        <trans-unit id="d714e9087d5b54ecca2b51569eb95d74ddf8334f" translate="yes" xml:space="preserve">
          <source>It's possible to create functions in JavaScript using the &lt;code&gt;Function&lt;/code&gt; constructor, such as:</source>
          <target state="translated">Es posible crear funciones en JavaScript usando el constructor de &lt;code&gt;Function&lt;/code&gt; , como:</target>
        </trans-unit>
        <trans-unit id="ee85d43b1ef036dbda6ac1ecca68ca0ebe5218b1" translate="yes" xml:space="preserve">
          <source>It's possible to create multiline strings in JavaScript by using a slash before a newline, such as:</source>
          <target state="translated">Es posible crear cadenas multilínea en JavaScript usando una barra antes de una nueva línea,como por ejemplo:</target>
        </trans-unit>
        <trans-unit id="eef00365692deaf723e678d24f89a72996bca75d" translate="yes" xml:space="preserve">
          <source>It's possible to have a class method which doesn't use &lt;code&gt;this&lt;/code&gt;, such as:</source>
          <target state="translated">Es posible tener un m&amp;eacute;todo de clase que no use &lt;code&gt;this&lt;/code&gt; , como:</target>
        </trans-unit>
        <trans-unit id="338c73acf937231c9f586f241d1a166618a1a2de" translate="yes" xml:space="preserve">
          <source>It's possible to share multiple configs in the same npm package. You can specify a default config for the package by following the directions in the first section. You can specify additional configs by simply adding a new file to your npm package and then referencing it from your ESLint config.</source>
          <target state="translated">Es posible compartir múltiples configuraciones en el mismo paquete npm.Puedes especificar una configuración predeterminada para el paquete siguiendo las instrucciones de la primera sección.Puede especificar configuraciones adicionales simplemente añadiendo un nuevo archivo a su paquete npm y luego haciendo referencia a él desde su configuración de ESLint.</target>
        </trans-unit>
        <trans-unit id="232ff89a49d744909e74bfbe6f3a0152ca2f07e5" translate="yes" xml:space="preserve">
          <source>It's therefore unnecessary to initialize a variable to &lt;code&gt;undefined&lt;/code&gt;, such as:</source>
          <target state="translated">Por lo tanto, no es necesario inicializar una variable a &lt;code&gt;undefined&lt;/code&gt; , como:</target>
        </trans-unit>
        <trans-unit id="6700e2ff03beeb48145f7ff39dce207f42ed620a" translate="yes" xml:space="preserve">
          <source>It's unnecessary to concatenate two strings together, such as:</source>
          <target state="translated">No es necesario concatenar dos cuerdas juntas,como por ejemplo:</target>
        </trans-unit>
        <trans-unit id="bcf1e0519c1e3f74f5179a17cad7d7e59f2d0a7d" translate="yes" xml:space="preserve">
          <source>It's unnecessary to use computed properties with literals such as:</source>
          <target state="translated">Es innecesario usar propiedades computarizadas con literales como:</target>
        </trans-unit>
        <trans-unit id="56d6447c476a3f8a52dcf546edf453aff97884dd" translate="yes" xml:space="preserve">
          <source>It's up to the plugin to decide if it needs to return just one part, or multiple pieces. For example in the case of processing &lt;code&gt;.html&lt;/code&gt; files, you might want to return just one item in the array by combining all scripts, but for &lt;code&gt;.md&lt;/code&gt; file where each JavaScript block might be independent, you can return multiple items.</source>
          <target state="translated">Depende del complemento decidir si necesita devolver solo una parte o varias partes. Por ejemplo, en el caso de procesar archivos &lt;code&gt;.html&lt;/code&gt; , es posible que desee devolver solo un elemento de la matriz combinando todos los scripts, pero para el archivo &lt;code&gt;.md&lt;/code&gt; donde cada bloque de JavaScript puede ser independiente, puede devolver varios elementos.</target>
        </trans-unit>
        <trans-unit id="6560f835b7a7d5870e94eb9b41e3fcd77d90d7e8" translate="yes" xml:space="preserve">
          <source>JSCS allows you to specify a configuration file to use on the command line using either &lt;code&gt;--config&lt;/code&gt; or &lt;code&gt;-c&lt;/code&gt;, such as:</source>
          <target state="translated">JSCS le permite especificar un archivo de configuraci&amp;oacute;n para usar en la l&amp;iacute;nea de comando usando &lt;code&gt;--config&lt;/code&gt; o &lt;code&gt;-c&lt;/code&gt; , como:</target>
        </trans-unit>
        <trans-unit id="ad2824b434b68a13856ffaff984918c67213b72f" translate="yes" xml:space="preserve">
          <source>JSCS uses the &lt;code&gt;--fix&lt;/code&gt; option to apply automatic fixes to code:</source>
          <target state="translated">JSCS usa la opci&amp;oacute;n &lt;code&gt;--fix&lt;/code&gt; para aplicar arreglos autom&amp;aacute;ticos al c&amp;oacute;digo:</target>
        </trans-unit>
        <trans-unit id="7e6a7de74786bb8a06e6cd1f198e6bb251b32a02" translate="yes" xml:space="preserve">
          <source>JSCS: &lt;a href=&quot;https://jscs-dev.github.io/rule/requireNewlineBeforeSingleStatementsInIf&quot;&gt;requireNewlineBeforeSingleStatementsInIf&lt;/a&gt;</source>
          <target state="translated">JSCS: &lt;a href=&quot;https://jscs-dev.github.io/rule/requireNewlineBeforeSingleStatementsInIf&quot;&gt;requireNewlineBeforeSingleStatementsInIf&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="eb066eaad6fec2a6a994996f176b5cede7d0c117" translate="yes" xml:space="preserve">
          <source>JSDoc</source>
          <target state="translated">JSDoc</target>
        </trans-unit>
        <trans-unit id="03371684afaf55d8f3d68e5dc095125a09ff3cd3" translate="yes" xml:space="preserve">
          <source>JSON whitespace issues</source>
          <target state="translated">JSON asuntos del espacio blanco</target>
        </trans-unit>
        <trans-unit id="ae37798c9273d9a9a11bbfcf191ad17fc943238e" translate="yes" xml:space="preserve">
          <source>JSX attribute values can contain string literals, which are delimited with single or double quotes.</source>
          <target state="translated">Los valores de atributo JSX pueden contener literales de cadena,que se delimitan con comillas simples o dobles.</target>
        </trans-unit>
        <trans-unit id="8cb39ed38ed1f1854a0f052be116e2d4d4ed3892" translate="yes" xml:space="preserve">
          <source>JSX exception</source>
          <target state="translated">Excepción JSX</target>
        </trans-unit>
        <trans-unit id="3755f3f206953314cab133719791d70c7c568127" translate="yes" xml:space="preserve">
          <source>Jasmine</source>
          <target state="translated">Jasmine</target>
        </trans-unit>
        <trans-unit id="aeb477733ef3bd24e40cc3ef2f023ec0e75bb981" translate="yes" xml:space="preserve">
          <source>JavaScript Scoping and Hoisting</source>
          <target state="translated">JavaScript Scoping and Hoisting</target>
        </trans-unit>
        <trans-unit id="35fd2acb7480cdbfc20e463c2d778164a28c3af8" translate="yes" xml:space="preserve">
          <source>JavaScript Semicolon Insertion</source>
          <target state="translated">JavaScript Inserción de punto y coma</target>
        </trans-unit>
        <trans-unit id="a1533b7dece4ef1e890cbfd9e9b05d2df5893150" translate="yes" xml:space="preserve">
          <source>JavaScript allows for placing unnecessary spaces between an expression and the closing semicolon.</source>
          <target state="translated">JavaScript permite colocar espacios innecesarios entre una expresión y el punto y coma de cierre.</target>
        </trans-unit>
        <trans-unit id="fb3776e4f2a012989a09983f23fbfa42da091730" translate="yes" xml:space="preserve">
          <source>JavaScript allows operands of ternary expressions to be separated by newlines, which can improve the readability of your program.</source>
          <target state="translated">JavaScript permite que los operandos de las expresiones ternarias sean separados por nuevas líneas,lo que puede mejorar la legibilidad de su programa.</target>
        </trans-unit>
        <trans-unit id="70238e7446b2c14f3c63ee52342d01ab306e0ac0" translate="yes" xml:space="preserve">
          <source>JavaScript allows the omission of curly braces when a block contains only one statement. However, it is considered by many to be best practice to &lt;em&gt;never&lt;/em&gt; omit curly braces around blocks, even when they are optional, because it can lead to bugs and reduces code clarity. So the following:</source>
          <target state="translated">JavaScript permite la omisi&amp;oacute;n de llaves cuando un bloque contiene solo una declaraci&amp;oacute;n. Sin embargo, muchos consideran que es una buena pr&amp;aacute;ctica &lt;em&gt;no&lt;/em&gt; omitir &lt;em&gt;nunca las&lt;/em&gt; llaves alrededor de los bloques, incluso cuando son opcionales, ya que puede provocar errores y reducir la claridad del c&amp;oacute;digo. Entonces lo siguiente:</target>
        </trans-unit>
        <trans-unit id="874615b72be77374791ea953ea46256b48a8b2d9" translate="yes" xml:space="preserve">
          <source>JavaScript allows the omission of parentheses when invoking a function via the &lt;code&gt;new&lt;/code&gt; keyword and the constructor has no arguments. However, some coders believe that omitting the parentheses is inconsistent with the rest of the language and thus makes code less clear.</source>
          <target state="translated">JavaScript permite la omisi&amp;oacute;n de par&amp;eacute;ntesis cuando se invoca una funci&amp;oacute;n mediante la &lt;code&gt;new&lt;/code&gt; palabra clave y el constructor no tiene argumentos. Sin embargo, algunos programadores creen que omitir los par&amp;eacute;ntesis es inconsistente con el resto del lenguaje y, por lo tanto, hace que el c&amp;oacute;digo sea menos claro.</target>
        </trans-unit>
        <trans-unit id="1b3cd75cba9ae18b5f809b6e802a6ac27d7d0cb6" translate="yes" xml:space="preserve">
          <source>JavaScript allows whitespace between objects and their properties. However, inconsistent spacing can make code harder to read and can lead to errors.</source>
          <target state="translated">JavaScript permite espacios en blanco entre los objetos y sus propiedades.Sin embargo,un espaciado inconsistente puede hacer que el código sea más difícil de leer y puede conducir a errores.</target>
        </trans-unit>
        <trans-unit id="3dc87ecb051dcb25ce39847b91018535b39fdc05" translate="yes" xml:space="preserve">
          <source>JavaScript allows you to define strings in one of three ways: double quotes, single quotes, and backticks (as of ECMAScript 6). For example:</source>
          <target state="translated">JavaScript permite definir cadenas de una de las tres maneras:comillas dobles,comillas simples y retroceso (a partir de ECMAScript 6).Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="d5c94ad5d9baaf1eef18b221f414ea08803b2b2b" translate="yes" xml:space="preserve">
          <source>JavaScript allows you to place newlines before or after a dot in a member expression.</source>
          <target state="translated">JavaScript permite colocar nuevas líneas antes o después de un punto en una expresión de miembro.</target>
        </trans-unit>
        <trans-unit id="ff9324f42b811ab6297f7a807c024f230020aaf3" translate="yes" xml:space="preserve">
          <source>JavaScript allows you to place unnecessary spaces before or after a semicolon.</source>
          <target state="translated">JavaScript le permite colocar espacios innecesarios antes o después de un punto y coma.</target>
        </trans-unit>
        <trans-unit id="2cecfbaf09bf74a3e6308e2394b0e0e42e4f3694" translate="yes" xml:space="preserve">
          <source>JavaScript environments contain a number of built-in global variables, such as &lt;code&gt;window&lt;/code&gt; in browsers and &lt;code&gt;process&lt;/code&gt; in Node.js. In almost all cases, you don't want to assign a value to these global variables as doing so could result in losing access to important functionality. For example, you probably don't want to do this in browser code:</source>
          <target state="translated">Los entornos de JavaScript contienen una serie de variables globales integradas, como la &lt;code&gt;window&lt;/code&gt; en los navegadores y el &lt;code&gt;process&lt;/code&gt; en Node.js. En casi todos los casos, no desea asignar un valor a estas variables globales, ya que al hacerlo podr&amp;iacute;a perder el acceso a funciones importantes. Por ejemplo, probablemente no quieras hacer esto en el c&amp;oacute;digo del navegador:</target>
        </trans-unit>
        <trans-unit id="2bf5eedeafd607eaa45b9a97d92f8d8ae4ea268f" translate="yes" xml:space="preserve">
          <source>JavaScript functions can be written as a FunctionDeclaration &lt;code&gt;function foo() { ... }&lt;/code&gt; or as a FunctionExpression &lt;code&gt;var foo = function() { ... };&lt;/code&gt;. While a JavaScript interpreter might tolerate it, overwriting/reassigning a function written as a FunctionDeclaration is often indicative of a mistake or issue.</source>
          <target state="translated">Las funciones de JavaScript se pueden escribir como una &lt;code&gt;function foo() { ... }&lt;/code&gt; FunctionDeclaration foo () {...} o como una FunctionExpression &lt;code&gt;var foo = function() { ... };&lt;/code&gt; . Si bien un int&amp;eacute;rprete de JavaScript puede tolerarlo, sobrescribir / reasignar una funci&amp;oacute;n escrita como FunctionDeclaration a menudo es indicativo de un error o problema.</target>
        </trans-unit>
        <trans-unit id="46aa43f956749763c4c77aef295237374a62c29e" translate="yes" xml:space="preserve">
          <source>JavaScript has a lot of language features, and not everyone likes all of them. As a result, some projects choose to disallow the use of certain language features altogether. For instance, you might decide to disallow the use of &lt;code&gt;try-catch&lt;/code&gt; or &lt;code&gt;class&lt;/code&gt;, or you might decide to disallow the use of the &lt;code&gt;in&lt;/code&gt; operator.</source>
          <target state="translated">JavaScript tiene muchas caracter&amp;iacute;sticas de lenguaje y no a todos les gustan todas. Como resultado, algunos proyectos optan por no permitir el uso de ciertas funciones del lenguaje por completo. Por ejemplo, puede decidir no permitir el uso de &lt;code&gt;try-catch&lt;/code&gt; o &lt;code&gt;class&lt;/code&gt; , o puede decidir no permitir el uso del operador &lt;code&gt;in&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4b4a005b83e68cac28ad34d043efe8c63977c815" translate="yes" xml:space="preserve">
          <source>JavaScript is unique amongst the C-like languages in that it doesn't require semicolons at the end of each statement. In many cases, the JavaScript engine can determine that a semicolon should be in a certain spot and will automatically add it. This feature is known as &lt;strong&gt;automatic semicolon insertion (ASI)&lt;/strong&gt; and is considered one of the more controversial features of JavaScript. For example, the following lines are both valid:</source>
          <target state="translated">JavaScript es &amp;uacute;nico entre los lenguajes similares a C en el sentido de que no requiere punto y coma al final de cada declaraci&amp;oacute;n. En muchos casos, el motor de JavaScript puede determinar que un punto y coma debe estar en un lugar determinado y lo agregar&amp;aacute; autom&amp;aacute;ticamente. Esta caracter&amp;iacute;stica se conoce como &lt;strong&gt;inserci&amp;oacute;n autom&amp;aacute;tica de punto y coma (ASI)&lt;/strong&gt; y se considera una de las caracter&amp;iacute;sticas m&amp;aacute;s controvertidas de JavaScript. Por ejemplo, las siguientes l&amp;iacute;neas son v&amp;aacute;lidas:</target>
        </trans-unit>
        <trans-unit id="ec241f3f76e7823d627bd4584bd71234938ed3c6" translate="yes" xml:space="preserve">
          <source>JavaScript provides shorthand operators that combine variable assignment and some simple mathematical operations. For example, &lt;code&gt;x = x + 4&lt;/code&gt; can be shortened to &lt;code&gt;x += 4&lt;/code&gt;. The supported shorthand forms are as follows:</source>
          <target state="translated">JavaScript proporciona operadores abreviados que combinan la asignaci&amp;oacute;n de variables y algunas operaciones matem&amp;aacute;ticas simples. Por ejemplo, &lt;code&gt;x = x + 4&lt;/code&gt; se puede acortar &lt;code&gt;x += 4&lt;/code&gt; . Las formas abreviadas admitidas son las siguientes:</target>
        </trans-unit>
        <trans-unit id="47c3f29689bdd2ef62ccda2e081bc789ad36a502" translate="yes" xml:space="preserve">
          <source>JavaScript suspends the control flow statements of &lt;code&gt;try&lt;/code&gt; and &lt;code&gt;catch&lt;/code&gt; blocks until the execution of &lt;code&gt;finally&lt;/code&gt; block finishes. So, when &lt;code&gt;return&lt;/code&gt;, &lt;code&gt;throw&lt;/code&gt;, &lt;code&gt;break&lt;/code&gt;, or &lt;code&gt;continue&lt;/code&gt; is used in &lt;code&gt;finally&lt;/code&gt;, control flow statements inside &lt;code&gt;try&lt;/code&gt; and &lt;code&gt;catch&lt;/code&gt; are overwritten, which is considered as unexpected behavior. Such as:</source>
          <target state="translated">JavaScript suspende el estado de flujos de control de &lt;code&gt;try&lt;/code&gt; y &lt;code&gt;catch&lt;/code&gt; cuadras hasta la ejecuci&amp;oacute;n de &lt;code&gt;finally&lt;/code&gt; acabados de bloque. Por lo tanto, cuando se usa &lt;code&gt;return&lt;/code&gt; , &lt;code&gt;throw&lt;/code&gt; , &lt;code&gt;break&lt;/code&gt; o &lt;code&gt;continue&lt;/code&gt; &lt;code&gt;finally&lt;/code&gt; , las instrucciones de flujo de control dentro de &lt;code&gt;try&lt;/code&gt; y &lt;code&gt;catch&lt;/code&gt; se sobrescriben, lo que se considera un comportamiento inesperado. Como:</target>
        </trans-unit>
        <trans-unit id="0bed567369bc5dad154764ff85e0f62d5a508f04" translate="yes" xml:space="preserve">
          <source>JavaScript's &lt;code&gt;alert&lt;/code&gt;, &lt;code&gt;confirm&lt;/code&gt;, and &lt;code&gt;prompt&lt;/code&gt; functions are widely considered to be obtrusive as UI elements and should be replaced by a more appropriate custom UI implementation. Furthermore, &lt;code&gt;alert&lt;/code&gt; is often used while debugging code, which should be removed before deployment to production.</source>
          <target state="translated">Las funciones de &lt;code&gt;alert&lt;/code&gt; a , &lt;code&gt;confirm&lt;/code&gt; aci&amp;oacute;n y &lt;code&gt;prompt&lt;/code&gt; JavaScript se consideran en general intrusivas como elementos de la interfaz de usuario y deben reemplazarse por una implementaci&amp;oacute;n de interfaz de usuario personalizada m&amp;aacute;s apropiada. Adem&amp;aacute;s, la &lt;code&gt;alert&lt;/code&gt; a se usa a menudo durante la depuraci&amp;oacute;n del c&amp;oacute;digo, que debe eliminarse antes de la implementaci&amp;oacute;n en producci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="bb36d203e1e163e1a6bae5dfbd3a4757283a3d47" translate="yes" xml:space="preserve">
          <source>JavaScript's &lt;code&gt;eval()&lt;/code&gt; function is potentially dangerous and is often misused. Using &lt;code&gt;eval()&lt;/code&gt; on untrusted code can open a program up to several different injection attacks. The use of &lt;code&gt;eval()&lt;/code&gt; in most contexts can be substituted for a better, alternative approach to a problem.</source>
          <target state="translated">La funci&amp;oacute;n &lt;code&gt;eval()&lt;/code&gt; JavaScript es potencialmente peligrosa y a menudo se usa incorrectamente. El uso de &lt;code&gt;eval()&lt;/code&gt; en c&amp;oacute;digo no confiable puede abrir un programa hasta varios ataques de inyecci&amp;oacute;n diferentes. El uso de &lt;code&gt;eval()&lt;/code&gt; en la mayor&amp;iacute;a de contextos se puede sustituir por un enfoque alternativo mejor para un problema.</target>
        </trans-unit>
        <trans-unit id="ff0382e972b4c38f7e98ab4c1c45d9893b525347" translate="yes" xml:space="preserve">
          <source>JavaScript: Don&amp;rsquo;t Reassign Your Function Arguments</source>
          <target state="translated">JavaScript: no reasigne sus argumentos de funci&amp;oacute;n</target>
        </trans-unit>
        <trans-unit id="1ca76be7b84d714e17e61b65c84bec4810f63dd5" translate="yes" xml:space="preserve">
          <source>Javascript</source>
          <target state="translated">Javascript</target>
        </trans-unit>
        <trans-unit id="de938f1548a4251b63d23119145ba2c835fe9fb6" translate="yes" xml:space="preserve">
          <source>Just as developers might type &lt;code&gt;-a + b&lt;/code&gt; when they mean &lt;code&gt;-(a + b)&lt;/code&gt; for the negative of a sum, they might type &lt;code&gt;!key in object&lt;/code&gt; by mistake when they almost certainly mean &lt;code&gt;!(key in object)&lt;/code&gt; to test that a key is not in an object.</source>
          <target state="translated">As&amp;iacute; como los desarrolladores pueden escribir &lt;code&gt;-a + b&lt;/code&gt; cuando quieren decir &lt;code&gt;-(a + b)&lt;/code&gt; para el negativo de una suma, podr&amp;iacute;an escribir &lt;code&gt;!key in object&lt;/code&gt; por error cuando es casi seguro que quieren decir &lt;code&gt;!(key in object)&lt;/code&gt; para probar que una clave no est&amp;aacute; en un objeto.</target>
        </trans-unit>
        <trans-unit id="000a2d9b669cfca9b9c610b40fd644d3f5bb04e7" translate="yes" xml:space="preserve">
          <source>Just as developers might type &lt;code&gt;-a + b&lt;/code&gt; when they mean &lt;code&gt;-(a + b)&lt;/code&gt; for the negative of a sum, they might type &lt;code&gt;!key in object&lt;/code&gt; by mistake when they almost certainly mean &lt;code&gt;!(key in object)&lt;/code&gt; to test that a key is not in an object. &lt;code&gt;!obj instanceof Ctor&lt;/code&gt; is similar.</source>
          <target state="translated">As&amp;iacute; como los desarrolladores pueden escribir &lt;code&gt;-a + b&lt;/code&gt; cuando quieren decir &lt;code&gt;-(a + b)&lt;/code&gt; para el negativo de una suma, podr&amp;iacute;an escribir &lt;code&gt;!key in object&lt;/code&gt; por error cuando es casi seguro que quieren decir &lt;code&gt;!(key in object)&lt;/code&gt; para probar que una clave no est&amp;aacute; en un objeto. &lt;code&gt;!obj instanceof Ctor&lt;/code&gt; es similar.</target>
        </trans-unit>
        <trans-unit id="e7c5d4963c2bb1e89fc55db41dc9f08d57c55c03" translate="yes" xml:space="preserve">
          <source>Keep in mind that comments are technically not a part of the AST and are only attached to it on demand, i.e. when you call &lt;code&gt;getComments()&lt;/code&gt;.</source>
          <target state="translated">Tenga en cuenta que los comentarios t&amp;eacute;cnicamente no forman parte del AST y solo se adjuntan a &amp;eacute;l bajo demanda, es decir, cuando llama a &lt;code&gt;getComments()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c0cf9d5c180dc8564a0d7f4b2a8b48a106463c1f" translate="yes" xml:space="preserve">
          <source>Keep in mind that the results of this method are calculated on demand.</source>
          <target state="translated">Tengan en cuenta que los resultados de este método se calculan sobre la base de la demanda.</target>
        </trans-unit>
        <trans-unit id="9bd26d701e8f6ce99367d708dc895d0600bdb131" translate="yes" xml:space="preserve">
          <source>Keep in mind that we have over 200 rules, and that is daunting both for end users and the ESLint team (who has to maintain them). As such, any new rules must be deemed of high importance to be considered for inclusion in ESLint.</source>
          <target state="translated">Tengan en cuenta que tenemos más de 200 reglas,y eso es desalentador tanto para los usuarios finales como para el equipo de ESLint (que tiene que mantenerlas).Por lo tanto,cualquier nueva regla debe ser considerada de alta importancia para ser considerada para su inclusión en ESLint.</target>
        </trans-unit>
        <trans-unit id="fa5d51b19a07be0d8f7c43f2a968f97c27a9cb40" translate="yes" xml:space="preserve">
          <source>Keep your rule names as short as possible, use abbreviations where appropriate, and no more than four words.</source>
          <target state="translated">Mantenga los nombres de las reglas tan cortos como sea posible,use abreviaturas cuando sea apropiado,y no más de cuatro palabras.</target>
        </trans-unit>
        <trans-unit id="0f1567b40d5b2ede1e1ea5371f1e60b1c78c78b4" translate="yes" xml:space="preserve">
          <source>Keeping to one of these styles across a project's codebase can help with maintaining code consistency.</source>
          <target state="translated">Mantener uno de estos estilos en la base de código de un proyecto puede ayudar a mantener la consistencia del código.</target>
        </trans-unit>
        <trans-unit id="ede3a17a01c5c55ed695487d421a99c9eb323e43" translate="yes" xml:space="preserve">
          <source>Keywords are syntax elements of JavaScript, such as &lt;code&gt;function&lt;/code&gt; and &lt;code&gt;if&lt;/code&gt;. These identifiers have special meaning to the language and so often appear in a different color in code editors. As an important part of the language, style guides often refer to the spacing that should be used around keywords. For example, you might have a style guide that says keywords should be always be preceded by spaces, which would mean &lt;code&gt;if-else&lt;/code&gt; statements must look like this:</source>
          <target state="translated">Las palabras clave son elementos de sintaxis de JavaScript, como &lt;code&gt;function&lt;/code&gt; y &lt;code&gt;if&lt;/code&gt; . Estos identificadores tienen un significado especial para el idioma y con frecuencia aparecen en un color diferente en los editores de c&amp;oacute;digo. Como una parte importante del lenguaje, las gu&amp;iacute;as de estilo a menudo se refieren al espacio que se debe usar alrededor de las palabras clave. Por ejemplo, puede tener una gu&amp;iacute;a de estilo que diga que las palabras clave siempre deben ir precedidas de espacios, lo que significar&amp;iacute;a &lt;code&gt;if-else&lt;/code&gt; declaraciones if-else deben verse as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="04fdc186fe5b056bf0b371917035f93e70f4315f" translate="yes" xml:space="preserve">
          <source>Keywords are syntax elements of JavaScript, such as &lt;code&gt;try&lt;/code&gt; and &lt;code&gt;if&lt;/code&gt;. These keywords have special meaning to the language and so often appear in a different color in code editors. As an important part of the language, style guides often refer to the spacing that should be used around keywords. For example, you might have a style guide that says keywords should be always surrounded by spaces, which would mean &lt;code&gt;if-else&lt;/code&gt; statements must look like this:</source>
          <target state="translated">Las palabras clave son elementos de sintaxis de JavaScript, como &lt;code&gt;try&lt;/code&gt; y &lt;code&gt;if&lt;/code&gt; . Estas palabras clave tienen un significado especial para el idioma y con frecuencia aparecen en un color diferente en los editores de c&amp;oacute;digo. Como una parte importante del lenguaje, las gu&amp;iacute;as de estilo a menudo se refieren al espacio que se debe usar alrededor de las palabras clave. Por ejemplo, puede tener una gu&amp;iacute;a de estilo que diga que las palabras clave siempre deben estar rodeadas de espacios, lo que significar&amp;iacute;a &lt;code&gt;if-else&lt;/code&gt; declaraciones if-else deben verse as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="616ae0e516f073c066a59a8a38d5b52110f5407c" translate="yes" xml:space="preserve">
          <source>Known Limitations</source>
          <target state="translated">Limitaciones conocidas</target>
        </trans-unit>
        <trans-unit id="aefb9f3a1db6e7c07463bd61307df961e5c58166" translate="yes" xml:space="preserve">
          <source>Known issues these spaces cause:</source>
          <target state="translated">Problemas conocidos que causan estos espacios:</target>
        </trans-unit>
        <trans-unit id="a5a5fafee83492d8b176cbbdd5bb0860a6fdbf28" translate="yes" xml:space="preserve">
          <source>Known limitations:</source>
          <target state="translated">Limitaciones conocidas:</target>
        </trans-unit>
        <trans-unit id="2e1b2523d4a68ad42a3b6d5503d6d80ddf3b1ade" translate="yes" xml:space="preserve">
          <source>Labeled statements are only used in conjunction with labeled break and continue statements. ECMAScript has no goto statement.</source>
          <target state="translated">Las declaraciones etiquetadas sólo se utilizan junto con las declaraciones etiquetadas de ruptura y continuación.ECMAScript no tiene ninguna declaración &quot;goto&quot;.</target>
        </trans-unit>
        <trans-unit id="f4101de43a6ddffb71075f1f736064d12f1f6f81" translate="yes" xml:space="preserve">
          <source>Labeled statements in JavaScript are used in conjunction with &lt;code&gt;break&lt;/code&gt; and &lt;code&gt;continue&lt;/code&gt; to control flow around multiple loops. For example:</source>
          <target state="translated">Las declaraciones etiquetadas en JavaScript se utilizan junto con &lt;code&gt;break&lt;/code&gt; y &lt;code&gt;continue&lt;/code&gt; controlando el flujo alrededor de m&amp;uacute;ltiples bucles. Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="578dee19c6502f01a038eb78b3e49185c558cf41" translate="yes" xml:space="preserve">
          <source>Labels that are declared and not used anywhere in the code are most likely an error due to incomplete refactoring.</source>
          <target state="translated">Las etiquetas que se declaran y no se usan en ninguna parte del código son muy probablemente un error debido a una refactorización incompleta.</target>
        </trans-unit>
        <trans-unit id="b541cfe1ccb84d2c69d0625a99389540b77207ad" translate="yes" xml:space="preserve">
          <source>Language Options</source>
          <target state="translated">Opciones de idioma</target>
        </trans-unit>
        <trans-unit id="c83f2b161b8660b0f54cc1c267ca1f4032a63ad5" translate="yes" xml:space="preserve">
          <source>Large - Runs ESLint on JSHint</source>
          <target state="translated">Large-Ejecuta ESLint en JSHint</target>
        </trans-unit>
        <trans-unit id="6237b22967da3f057cb71015bdcdfde4226ee27a" translate="yes" xml:space="preserve">
          <source>Last, it advances to the end.</source>
          <target state="translated">Por último,avanza hasta el final.</target>
        </trans-unit>
        <trans-unit id="9791177c6b357c99f38a6978d495bcc8f01ed2dd" translate="yes" xml:space="preserve">
          <source>Learn about &lt;a href=&quot;user-guide/configuring&quot;&gt;advanced configuration&lt;/a&gt; of ESLint.</source>
          <target state="translated">Obtenga m&amp;aacute;s informaci&amp;oacute;n sobre &lt;a href=&quot;user-guide/configuring&quot;&gt;la configuraci&amp;oacute;n avanzada&lt;/a&gt; de ESLint.</target>
        </trans-unit>
        <trans-unit id="cbbe2fab2ebf18de7304c94a0bc02843f5d36771" translate="yes" xml:space="preserve">
          <source>Less clear:</source>
          <target state="translated">Menos claro:</target>
        </trans-unit>
        <trans-unit id="976713d5799583acf6a0e5a8fbc1bb4180537050" translate="yes" xml:space="preserve">
          <source>Let's fix Node.js Buffer API</source>
          <target state="translated">Arreglemos el Buffer API de Node.js</target>
        </trans-unit>
        <trans-unit id="b837d744af533d631032679a5d43e88b68690a08" translate="yes" xml:space="preserve">
          <source>Let's look at the following perfectly valid (but single line) code.</source>
          <target state="translated">Veamos el siguiente código perfectamente válido (pero de una sola línea).</target>
        </trans-unit>
        <trans-unit id="230759061d18d6dc57a7ec18ba52827940445025" translate="yes" xml:space="preserve">
          <source>Level of indentation denotes the multiple of the indent specified. Example:</source>
          <target state="translated">El nivel de sangría denota el múltiplo de la sangría especificada.Ejemplo:</target>
        </trans-unit>
        <trans-unit id="abe24f73a4adf73f80d772b8c813e00b0527dce6" translate="yes" xml:space="preserve">
          <source>Lexical declarations &lt;code&gt;const&lt;/code&gt; and &lt;code&gt;let&lt;/code&gt;, as well as &lt;code&gt;class&lt;/code&gt; declarations, create variables that are block-scoped.</source>
          <target state="translated">Las declaraciones l&amp;eacute;xicas &lt;code&gt;const&lt;/code&gt; y &lt;code&gt;let&lt;/code&gt; , as&amp;iacute; como &lt;code&gt;class&lt;/code&gt; declaraciones de clase , crean variables que tienen un alcance de bloque.</target>
        </trans-unit>
        <trans-unit id="283e35c5290c66cc5d747cb923851a3eaf110a70" translate="yes" xml:space="preserve">
          <source>Lexically declared variables are shadowing properties of the global object, which might produce errors if a consuming script is using both the variable and the property.</source>
          <target state="translated">Las variables declaradas léxicamente son propiedades de sombra del objeto global,que pueden producir errores si un guión de consumo utiliza tanto la variable como la propiedad.</target>
        </trans-unit>
        <trans-unit id="2804cac1a3610e9d560401096d1b0ec1d1c27ea1" translate="yes" xml:space="preserve">
          <source>Lexically declared variables can produce a permanent Temporal Dead Zone (TDZ) if the initialization throws an exception. Even the &lt;code&gt;typeof&lt;/code&gt; check is not safe from TDZ reference exceptions.</source>
          <target state="translated">Las variables declaradas l&amp;eacute;xicamente pueden producir una Zona muerta temporal (TDZ) permanente si la inicializaci&amp;oacute;n arroja una excepci&amp;oacute;n. Incluso el &lt;code&gt;typeof&lt;/code&gt; de verificaci&amp;oacute;n no est&amp;aacute; a salvo de las excepciones de referencia TDZ.</target>
        </trans-unit>
        <trans-unit id="f225bdc0c179471d37c539bc0687e6c4f1ede246" translate="yes" xml:space="preserve">
          <source>Lexically declared variables cannot be conditionally created. A script cannot check for the existence of a variable and then create a new one. &lt;code&gt;var&lt;/code&gt; variables are also always created, but redeclarations do not cause runtime exceptions.</source>
          <target state="translated">Las variables declaradas l&amp;eacute;xicamente no se pueden crear condicionalmente. Un script no puede verificar la existencia de una variable y luego crear una nueva. &lt;code&gt;var&lt;/code&gt; variables var tambi&amp;eacute;n se crean siempre, pero las redeclaraciones no provocan excepciones en tiempo de ejecuci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="e80a36f53dbe317f96ffd3bade7375caa2f65f51" translate="yes" xml:space="preserve">
          <source>Lexically declared variables do not create properties on the global object, which is what a consuming script might expect.</source>
          <target state="translated">Las variables declaradas léxicamente no crean propiedades en el objeto global,que es lo que un guión de consumo podría esperar.</target>
        </trans-unit>
        <trans-unit id="58fd3b1b83cc7fc933d72fe934bdb6e534441281" translate="yes" xml:space="preserve">
          <source>Licensed under the MIT License.</source>
          <target state="translated">Con licencia del MIT.</target>
        </trans-unit>
        <trans-unit id="576a19e712655d862677383bbd691c58cb28af93" translate="yes" xml:space="preserve">
          <source>Limit Cyclomatic Complexity (complexity)</source>
          <target state="translated">Limitar la Complejidad Ciclomática (complejidad)</target>
        </trans-unit>
        <trans-unit id="8063848dd725bd56f98d4d78213b9bcdc4a7dc13" translate="yes" xml:space="preserve">
          <source>Line Separator</source>
          <target state="translated">Separador de líneas</target>
        </trans-unit>
        <trans-unit id="f92175557e0de68fd93e204cef5f084870a15ddc" translate="yes" xml:space="preserve">
          <source>Line comments can be positioned above or beside code. This rule helps teams maintain a consistent style.</source>
          <target state="translated">Los comentarios de línea pueden colocarse encima o al lado del código.Esta regla ayuda a los equipos a mantener un estilo consistente.</target>
        </trans-unit>
        <trans-unit id="a034b76db3a8cd859ca69ba997a2e5b89502c859" translate="yes" xml:space="preserve">
          <source>Lines beginning with &lt;code&gt;#&lt;/code&gt; are treated as comments and do not affect ignore patterns.</source>
          <target state="translated">Las l&amp;iacute;neas que comienzan con &lt;code&gt;#&lt;/code&gt; se tratan como comentarios y no afectan a los patrones de ignorar.</target>
        </trans-unit>
        <trans-unit id="1e1103eb32ea263486103b072ab0cb94ee3e35e9" translate="yes" xml:space="preserve">
          <source>Lines preceded by &lt;code&gt;!&lt;/code&gt; are negated patterns that re-include a pattern that was ignored by an earlier pattern.</source>
          <target state="translated">L&amp;iacute;neas precedidas por &lt;code&gt;!&lt;/code&gt; son patrones negados que vuelven a incluir un patr&amp;oacute;n que fue ignorado por un patr&amp;oacute;n anterior.</target>
        </trans-unit>
        <trans-unit id="b4e10ddd90309b99f26fe4ef3e11b979bcef032a" translate="yes" xml:space="preserve">
          <source>Linter</source>
          <target state="translated">Linter</target>
        </trans-unit>
        <trans-unit id="bd52ff0399c852f8ad0d3b77ab2cbeba60a0d700" translate="yes" xml:space="preserve">
          <source>Linter#defineParser</source>
          <target state="translated">Linter#defineParser</target>
        </trans-unit>
        <trans-unit id="b3ec5ecd25a2470772a54fc04ae781a897dc4ac5" translate="yes" xml:space="preserve">
          <source>Linter#defineRule</source>
          <target state="translated">Linter#defineRule</target>
        </trans-unit>
        <trans-unit id="ab2d970ff5589fa92fce8827e35e3cb27afbb239" translate="yes" xml:space="preserve">
          <source>Linter#defineRules</source>
          <target state="translated">Linter#defineRules</target>
        </trans-unit>
        <trans-unit id="c4067e92f7ce3c6ae4a3d5aee194da0f0c54b6d7" translate="yes" xml:space="preserve">
          <source>Linter#getRules</source>
          <target state="translated">Linter#getRules</target>
        </trans-unit>
        <trans-unit id="aaff2261febbb9366e58763b28e5e7c542a2f676" translate="yes" xml:space="preserve">
          <source>Linter#verify</source>
          <target state="translated">Linter#verify</target>
        </trans-unit>
        <trans-unit id="2e5cf5d2293ba06968be45b3f4addc313adecbc1" translate="yes" xml:space="preserve">
          <source>Linter#verifyAndFix()</source>
          <target state="translated">Linter#verifyAndFix()</target>
        </trans-unit>
        <trans-unit id="cec5cfe559583c5da1e9000641be0f2df5c73dd3" translate="yes" xml:space="preserve">
          <source>Linter#version/Linter.version</source>
          <target state="translated">Linter#version/Linter.version</target>
        </trans-unit>
        <trans-unit id="6f0e0a2d089a5b32424b770572c725a6c435e42f" translate="yes" xml:space="preserve">
          <source>Linting completed successfully, but there are some linting errors</source>
          <target state="translated">La pelusa se completó con éxito,pero hay algunos errores de pelusa</target>
        </trans-unit>
        <trans-unit id="97c9a7f39e6010cad2bf31168096d66c5530b646" translate="yes" xml:space="preserve">
          <source>Linting message objects have a deprecated &lt;code&gt;source&lt;/code&gt; property. This property &lt;strong&gt;will be removed&lt;/strong&gt; from linting messages in an upcoming breaking release. If you depend on this property, you should now use the &lt;code&gt;SourceCode&lt;/code&gt; instance provided by the linter.</source>
          <target state="translated">Los objetos de mensaje de linting tienen una propiedad &lt;code&gt;source&lt;/code&gt; desuso . Esta propiedad &lt;strong&gt;se eliminar&amp;aacute;&lt;/strong&gt; de los mensajes con pelusa en una pr&amp;oacute;xima versi&amp;oacute;n de &amp;uacute;ltima hora. Si depende de esta propiedad, ahora debe usar la instancia de &lt;code&gt;SourceCode&lt;/code&gt; proporcionada por linter.</target>
        </trans-unit>
        <trans-unit id="c1213d86c311a55a32e3f6456710a05c9c2fe6f4" translate="yes" xml:space="preserve">
          <source>Linting nonexistent files from the command line is now a fatal error</source>
          <target state="translated">Desprender archivos inexistentes de la línea de comandos es ahora un error fatal.</target>
        </trans-unit>
        <trans-unit id="a144df07dbce74479e8b92fdbe30e5e2b955fdd1" translate="yes" xml:space="preserve">
          <source>Linting was unsuccessful due to a fatal error (e.g. an invalid config file)</source>
          <target state="translated">La impresión no tuvo éxito debido a un error fatal (por ejemplo,un archivo de configuración inválido)</target>
        </trans-unit>
        <trans-unit id="7c38fe4b5e5c8c9cd3ce408dd2302ed5b7c90528" translate="yes" xml:space="preserve">
          <source>Lints all JavaScript (including tests) and JSON</source>
          <target state="translated">Pinta todo el JavaScript (incluyendo las pruebas)y JSON</target>
        </trans-unit>
        <trans-unit id="9859b39a8931642fd476002b377a57cd6f6500db" translate="yes" xml:space="preserve">
          <source>Listening for selectors in rules</source>
          <target state="translated">Escuchar a los selectores en las reglas</target>
        </trans-unit>
        <trans-unit id="32758c6a32e39c1401c20a7c7526852af5d1a0a6" translate="yes" xml:space="preserve">
          <source>Loads a plugin from configuration object with specified name. Name can include plugin prefix (&quot;eslint-plugin-&quot;)</source>
          <target state="translated">Carga un plugin de un objeto de configuración con un nombre especificado.El nombre puede incluir el prefijo del plugin (&quot;eslint-plugin-&quot;)</target>
        </trans-unit>
        <trans-unit id="a89b90142250f6a97e005e05eeb2bc4cbcdeb3e4" translate="yes" xml:space="preserve">
          <source>Local Config File Resolution</source>
          <target state="translated">Resolución del archivo de configuración local</target>
        </trans-unit>
        <trans-unit id="bf880468615d510777cab4ad8eddc24def271ed4" translate="yes" xml:space="preserve">
          <source>Logical Operators: &lt;code&gt;&quot;&amp;amp;&amp;amp;&quot;&lt;/code&gt;, &lt;code&gt;&quot;||&quot;&lt;/code&gt;</source>
          <target state="translated">Operadores l&amp;oacute;gicos: &lt;code&gt;&quot;&amp;amp;&amp;amp;&quot;&lt;/code&gt; , &lt;code&gt;&quot;||&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c3afad3c0cae14119bc8f48a27e6623f7df048b3" translate="yes" xml:space="preserve">
          <source>Looping over objects with a &lt;code&gt;for in&lt;/code&gt; loop will include properties that are inherited through the prototype chain. This behavior can lead to unexpected items in your for loop.</source>
          <target state="translated">Hacer un bucle sobre objetos con un bucle &lt;code&gt;for in&lt;/code&gt; incluir&amp;aacute; propiedades que se heredan a trav&amp;eacute;s de la cadena de prototipos. Este comportamiento puede dar lugar a elementos inesperados en su bucle for.</target>
        </trans-unit>
        <trans-unit id="c7cc822b9501098075842137a86406605e675538" translate="yes" xml:space="preserve">
          <source>MDN - Iterators and Generators</source>
          <target state="translated">MDN-Iteradores y Generadores</target>
        </trans-unit>
        <trans-unit id="85f054c946360a1bdde533b30957e8ab936b4d2f" translate="yes" xml:space="preserve">
          <source>MDN Arithmetic Operators - Exponentiation</source>
          <target state="translated">Operadores Aritméticos MDN-Exponenciación</target>
        </trans-unit>
        <trans-unit id="3e90f0d78176e3c84b42ca0c6d98e231385391cf" translate="yes" xml:space="preserve">
          <source>MDN setter</source>
          <target state="translated">El setter de MDN</target>
        </trans-unit>
        <trans-unit id="a2193d22aa101ed468111273da4fc9a8ff26cb08" translate="yes" xml:space="preserve">
          <source>MDN: &lt;code&gt;typeof&lt;/code&gt; documentation</source>
          <target state="translated">MDN: &lt;code&gt;typeof&lt;/code&gt; documentaci&amp;oacute;n</target>
        </trans-unit>
        <trans-unit id="94dc241af5d9eb0a680088ee20211bc0c0311d3c" translate="yes" xml:space="preserve">
          <source>MDN: Functions getter</source>
          <target state="translated">MDN:Funciones obtenidas</target>
        </trans-unit>
        <trans-unit id="afae02907d2f28836e8ebcf79b528469165b5953" translate="yes" xml:space="preserve">
          <source>MDN: Operator Precedence</source>
          <target state="translated">MDN:Operator Precedence</target>
        </trans-unit>
        <trans-unit id="40980a42cc4812dad76a30f975d0ecb98f42a1d9" translate="yes" xml:space="preserve">
          <source>MDN: RegExp Constructor</source>
          <target state="translated">MDN:Constructor de RegExp</target>
        </trans-unit>
        <trans-unit id="b2777e08fa18d849dfd73d3f3047a7b8ba8d3042" translate="yes" xml:space="preserve">
          <source>MDN: Regular Expressions</source>
          <target state="translated">MDN:Expresiones regulares</target>
        </trans-unit>
        <trans-unit id="09d82cc59ea6b15487145efc5860cbacae4c5187" translate="yes" xml:space="preserve">
          <source>Make ESLint even better by &lt;a href=&quot;developer-guide/contributing/index&quot;&gt;contributing&lt;/a&gt;.</source>
          <target state="translated">Haz que ESLint sea a&amp;uacute;n mejor &lt;a href=&quot;developer-guide/contributing/index&quot;&gt;contribuyendo&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="08102ad0462aa310615f1de442b43a80696f3f09" translate="yes" xml:space="preserve">
          <source>Make fixes as small as possible. Fixes that are unnecessarily large could conflict with other fixes, and prevent them from being applied.</source>
          <target state="translated">Haz los arreglos tan pequeños como sea posible.Los arreglos que son innecesariamente grandes podrían entrar en conflicto con otros arreglos,e impedir que se apliquen.</target>
        </trans-unit>
        <trans-unit id="49ba3a90310eda05b6222d40e80f85b80ab264cc" translate="yes" xml:space="preserve">
          <source>Make fixes that are as small as possible. Anything more than a single character is risky and could prevent other, simpler fixes from being made.</source>
          <target state="translated">Haz arreglos que sean lo más pequeños posible.Cualquier cosa más que un solo personaje es arriesgado y podría impedir que se hagan otras correcciones más simples.</target>
        </trans-unit>
        <trans-unit id="003acc6ee30f8dfe6d64cbf566782eadf992c2a5" translate="yes" xml:space="preserve">
          <source>Make frequent use of comments to aid others in understanding your code. Use comments when:</source>
          <target state="translated">Haga uso frecuente de los comentarios para ayudar a otros a entender su código.Use los comentarios cuando:</target>
        </trans-unit>
        <trans-unit id="48605054d2a26e6ebeb6461152bd41032c424c7e" translate="yes" xml:space="preserve">
          <source>Make separate pull requests for unrelated changes. Large pull requests with multiple unrelated changes may be closed without merging.</source>
          <target state="translated">Haga solicitudes de extracción por separado para cambios no relacionados.Las grandes solicitudes de extracción con múltiples cambios no relacionados pueden cerrarse sin fusionarse.</target>
        </trans-unit>
        <trans-unit id="66052a8bb781ea4c3486f29d92fd4d76dd3b173b" translate="yes" xml:space="preserve">
          <source>Make sure your commit is formatted correctly.</source>
          <target state="translated">Asegúrate de que tu confirmación esté formateada correctamente.</target>
        </trans-unit>
        <trans-unit id="2294106611bb7be36ee5d5d272a03c7e228c69ec" translate="yes" xml:space="preserve">
          <source>Make the changes to the code and tests, following the &lt;a href=&quot;../code-conventions&quot;&gt;code conventions&lt;/a&gt; as you go. Once you have finished, commit the changes to your branch:</source>
          <target state="translated">Realice los cambios en el c&amp;oacute;digo y las pruebas, siguiendo las &lt;a href=&quot;../code-conventions&quot;&gt;convenciones&lt;/a&gt; del c&amp;oacute;digo sobre la marcha. Una vez que haya terminado, confirme los cambios en su rama:</target>
        </trans-unit>
        <trans-unit id="4b6914f73852714eeda13d3e462e3d5fdef8f379" translate="yes" xml:space="preserve">
          <source>Make your changes</source>
          <target state="translated">Haga sus cambios</target>
        </trans-unit>
        <trans-unit id="bae6e15f8b41918cf92f172d566b4d738bc07054" translate="yes" xml:space="preserve">
          <source>Managing the execution environment for &lt;code&gt;Linter&lt;/code&gt;</source>
          <target state="translated">Gesti&amp;oacute;n del entorno de ejecuci&amp;oacute;n de &lt;code&gt;Linter&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d0373508bebe8dbaeab01855b2503dec101737d8" translate="yes" xml:space="preserve">
          <source>Many JavaScript libraries use the callback pattern to manage asynchronous operations. A program of any complexity will most likely need to manage several asynchronous operations at various levels of concurrency. A common pitfall that is easy to fall into is nesting callbacks, which makes code more difficult to read the deeper the callbacks are nested.</source>
          <target state="translated">Muchas bibliotecas de JavaScript utilizan el patrón de llamada para gestionar las operaciones asincrónicas.Un programa de cualquier complejidad probablemente necesitará manejar varias operaciones asincrónicas en varios niveles de concurrencia.Un error común en el que es fácil caer es el anidamiento de las llamadas de retorno,lo que hace que el código sea más difícil de leer cuanto más profundamente se aniden las llamadas de retorno.</target>
        </trans-unit>
        <trans-unit id="f31b27c63c34d0475df6058a328447b442261068" translate="yes" xml:space="preserve">
          <source>Many codebases require strings to be defined in a consistent manner.</source>
          <target state="translated">Muchas bases de código requieren que las cadenas se definan de manera coherente.</target>
        </trans-unit>
        <trans-unit id="3f3335e45cb0fe011f2c670521d47c996929538a" translate="yes" xml:space="preserve">
          <source>Many developers consider code difficult to read if blocks are nested beyond a certain depth.</source>
          <target state="translated">Muchos desarrolladores consideran que el código es difícil de leer si los bloques están anidados más allá de cierta profundidad.</target>
        </trans-unit>
        <trans-unit id="ec6dcf6f91e26c974d5a7820b7cb35c058c70329" translate="yes" xml:space="preserve">
          <source>Many people enjoy a terser code style and don't mind comments bumping up against code. If you fall into that category this rule is not for you.</source>
          <target state="translated">Mucha gente disfruta de un estilo de código terser y no le importa que los comentarios choquen con el código.Si caes en esa categoría,esta regla no es para ti.</target>
        </trans-unit>
        <trans-unit id="30142d0203615d41e1641b80d943d73cc5ab1f7d" translate="yes" xml:space="preserve">
          <source>Many style guides require a particular style for comments that span multiple lines. For example, some style guides prefer the use of a single block comment for multiline comments, whereas other style guides prefer consecutive line comments.</source>
          <target state="translated">Muchas guías de estilo requieren un estilo particular para los comentarios que abarcan varias líneas.Por ejemplo,algunas guías de estilo prefieren el uso de un comentario de un solo bloque para los comentarios de varias líneas,mientras que otras guías de estilo prefieren comentarios de líneas consecutivas.</target>
        </trans-unit>
        <trans-unit id="1b81db8af58d6a82844c2a7f8a0fb423a248acad" translate="yes" xml:space="preserve">
          <source>Many style guides require empty lines before or after comments. The primary goal of these rules is to make the comments easier to read and improve readability of the code.</source>
          <target state="translated">Muchas guías de estilo requieren líneas vacías antes o después de los comentarios.El objetivo principal de estas reglas es facilitar la lectura de los comentarios y mejorar la legibilidad del código.</target>
        </trans-unit>
        <trans-unit id="65510d0ed7112a32a93fbfa0f852ca9727017a1d" translate="yes" xml:space="preserve">
          <source>Many style guides require or disallow newlines inside of function parentheses.</source>
          <target state="translated">Muchas guías de estilo requieren o no permiten nuevas líneas dentro de los paréntesis de la función.</target>
        </trans-unit>
        <trans-unit id="0ed12807412804e8c761c63c5aafe1b92dde8f29" translate="yes" xml:space="preserve">
          <source>Many users found this behavior confusing, because if they made a typo in a filename, ESLint would appear to lint that file successfully while actually not linting anything.</source>
          <target state="translated">Muchos usuarios encontraron este comportamiento confuso,porque si hacían una errata en un nombre de archivo,ESLint parecería pelar ese archivo con éxito mientras que en realidad no pelaba nada.</target>
        </trans-unit>
        <trans-unit id="75eae4786a36e18e4c433733218135d176e49561" translate="yes" xml:space="preserve">
          <source>Many versioning systems (like git and subversion) can automatically ensure the correct ending. However to cover all contingencies, you can activate this rule.</source>
          <target state="translated">Muchos sistemas de versiones (como git y subversión)pueden asegurar automáticamente el final correcto.Sin embargo,para cubrir todas las contingencias,puedes activar esta regla.</target>
        </trans-unit>
        <trans-unit id="d43df01241be64a2f04e14f16ff54fa881de6350" translate="yes" xml:space="preserve">
          <source>Medium - Runs ESLint on jQuery</source>
          <target state="translated">Medium-Ejecuta ESLint en jQuery</target>
        </trans-unit>
        <trans-unit id="08da200116809cb87f9df70d5b14e0b115e836c5" translate="yes" xml:space="preserve">
          <source>MemberExpression</source>
          <target state="translated">MemberExpression</target>
        </trans-unit>
        <trans-unit id="7e4ac6803c9159c694f63d089cb06b2519c16aba" translate="yes" xml:space="preserve">
          <source>Methods</source>
          <target state="translated">Methods</target>
        </trans-unit>
        <trans-unit id="78327bd6b1c4878fa59ed96c8e3108c92ded9378" translate="yes" xml:space="preserve">
          <source>Migrating</source>
          <target state="translated">Migrating</target>
        </trans-unit>
        <trans-unit id="f19f19cf7d792e42d3a20e6c6066ddb485e88b86" translate="yes" xml:space="preserve">
          <source>Migrating from JSCS</source>
          <target state="translated">Migrando de la JSCS</target>
        </trans-unit>
        <trans-unit id="f4cc004b36f93dc98ec6cb8cdd988862d89b0841" translate="yes" xml:space="preserve">
          <source>Migrating to v1.0.0</source>
          <target state="translated">Migrando a la v1.0.0</target>
        </trans-unit>
        <trans-unit id="207ad564379ab84e0bd1d9f94528cf475fccedfe" translate="yes" xml:space="preserve">
          <source>Migrating to v2.0.0</source>
          <target state="translated">Migrando a la v2.0.0</target>
        </trans-unit>
        <trans-unit id="6996ff0c977043ad7b164e529401b9633d67d887" translate="yes" xml:space="preserve">
          <source>Migrating to v3.0.0</source>
          <target state="translated">Migrando a la v3.0.0</target>
        </trans-unit>
        <trans-unit id="b7e113904f56ea23562186c3f481bcb45dd5dd88" translate="yes" xml:space="preserve">
          <source>Migrating to v4.0.0</source>
          <target state="translated">Migrando a v4.0.0</target>
        </trans-unit>
        <trans-unit id="3a672cb43559c6811fe6c8d12f1ff180dd8516ab" translate="yes" xml:space="preserve">
          <source>Migrating to v5.0.0</source>
          <target state="translated">Migrando a la v5.0.0</target>
        </trans-unit>
        <trans-unit id="519f16166bf3e002d2ccde6246ebacf01cc0a2bb" translate="yes" xml:space="preserve">
          <source>Migrating to v6.0.0</source>
          <target state="translated">Migrando a la v6.0.0</target>
        </trans-unit>
        <trans-unit id="528b503f97c282e46488116b7644afc7003a7185" translate="yes" xml:space="preserve">
          <source>Mimosa: &lt;a href=&quot;https://www.npmjs.com/package/mimosa-eslint&quot;&gt;mimosa-eslint&lt;/a&gt;</source>
          <target state="translated">Mimosa: &lt;a href=&quot;https://www.npmjs.com/package/mimosa-eslint&quot;&gt;mimosa-eslint&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5f2cbd107037ed23248e5058a7a64cd6bae05468" translate="yes" xml:space="preserve">
          <source>Miscellaneous</source>
          <target state="translated">Miscellaneous</target>
        </trans-unit>
        <trans-unit id="99c887ad129c82e774781a1e88541c3f8352bfe0" translate="yes" xml:space="preserve">
          <source>Mocha.js: &lt;a href=&quot;https://www.npmjs.com/package/mocha-eslint&quot;&gt;mocha-eslint&lt;/a&gt;</source>
          <target state="translated">Mocha.js: &lt;a href=&quot;https://www.npmjs.com/package/mocha-eslint&quot;&gt;mocha-eslint&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7d7a3d6a2ddcd05134bdb5c8786e8cf510ba6fd1" translate="yes" xml:space="preserve">
          <source>Modern terminals like &lt;a href=&quot;https://www.iterm2.com/&quot;&gt;iTerm2&lt;/a&gt; or &lt;a href=&quot;http://guake-project.org/&quot;&gt;Guake&lt;/a&gt; expect a specific results format to automatically open filenames when they are clicked. Most terminals support this format for that purpose:</source>
          <target state="translated">Los terminales modernos como &lt;a href=&quot;https://www.iterm2.com/&quot;&gt;iTerm2&lt;/a&gt; o &lt;a href=&quot;http://guake-project.org/&quot;&gt;Guake&lt;/a&gt; esperan que un formato de resultados espec&amp;iacute;fico abra autom&amp;aacute;ticamente los nombres de archivo cuando se hace clic en ellos. La mayor&amp;iacute;a de terminales admiten este formato para ese prop&amp;oacute;sito:</target>
        </trans-unit>
        <trans-unit id="3846ef909df0be6113f867ef70064e247aabbd00" translate="yes" xml:space="preserve">
          <source>Monitor the status of the Travis CI build for your pull request. If it fails, please investigate why. We cannot merge pull requests that fail Travis for any reason.</source>
          <target state="translated">Monitoriza el estado de la construcción del CI de Travis para tu solicitud de extracción.Si falla,por favor,investiga por qué.No podemos fusionar las solicitudes de extracción que le fallan a Travis por cualquier razón.</target>
        </trans-unit>
        <trans-unit id="0dc20fad549e82acb25baf9beda60f2ad6f4782b" translate="yes" xml:space="preserve">
          <source>More Control on Unit Testing</source>
          <target state="translated">Más control sobre las pruebas de la unidad</target>
        </trans-unit>
        <trans-unit id="8985cd96f1b823aecfe823a7ea114c4ab4c77f3f" translate="yes" xml:space="preserve">
          <source>More about Complexity in JavaScript</source>
          <target state="translated">Más sobre la complejidad en JavaScript</target>
        </trans-unit>
        <trans-unit id="cf861d594fba09fdccc03924cfd4dbfa37e34457" translate="yes" xml:space="preserve">
          <source>More clear:</source>
          <target state="translated">Más claro:</target>
        </trans-unit>
        <trans-unit id="f9a9f89b9373f2be282736f322c949e24ac40fdf" translate="yes" xml:space="preserve">
          <source>More on ES6 arrow functions</source>
          <target state="translated">Más sobre las funciones de las flechas del ES6</target>
        </trans-unit>
        <trans-unit id="b4a364a72443f90f75eadeb97e6069788cc6ba06" translate="yes" xml:space="preserve">
          <source>More report messages now have full location ranges</source>
          <target state="translated">Más mensajes de informe ahora tienen rangos de ubicación completos</target>
        </trans-unit>
        <trans-unit id="6e669deb33d5dab4d7c948c39f7c25a8a1410c31" translate="yes" xml:space="preserve">
          <source>Most code conventions require either tabs or spaces be used for indentation. As such, it's usually an error if a single line of code is indented with both tabs and spaces.</source>
          <target state="translated">La mayoría de las convenciones de códigos requieren que se usen tabulaciones o espacios para la indentación.Por lo tanto,suele ser un error si una sola línea de código se indentifica con tabuladores y espacios.</target>
        </trans-unit>
        <trans-unit id="cda170b39a2aee0a27ca48dc565c4de1f9771f33" translate="yes" xml:space="preserve">
          <source>Most of the installers come with &lt;a href=&quot;https://www.npmjs.com/&quot;&gt;npm&lt;/a&gt; already installed, but if for some reason it doesn't work on your system, you can install it manually using the instructions on the site.</source>
          <target state="translated">La mayor&amp;iacute;a de los instaladores vienen con &lt;a href=&quot;https://www.npmjs.com/&quot;&gt;npm&lt;/a&gt; ya instalado, pero si por alguna raz&amp;oacute;n no funciona en su sistema, puede instalarlo manualmente siguiendo las instrucciones del sitio.</target>
        </trans-unit>
        <trans-unit id="c0c042b4288a4f46ee5fbcb5a35c3c86ee3a0aa9" translate="yes" xml:space="preserve">
          <source>Most parts of ESLint have unit tests associated with them. Unit tests are written using &lt;a href=&quot;https://mochajs.org/&quot;&gt;Mocha&lt;/a&gt; and are required when making contributions to ESLint. You'll find all of the unit tests in the &lt;code&gt;tests&lt;/code&gt; directory.</source>
          <target state="translated">La mayor&amp;iacute;a de las partes de ESLint tienen pruebas unitarias asociadas. Las pruebas unitarias se escriben con &lt;a href=&quot;https://mochajs.org/&quot;&gt;Mocha&lt;/a&gt; y son obligatorias al realizar contribuciones a ESLint. Encontrar&amp;aacute;s todas las pruebas unitarias en el directorio de &lt;code&gt;tests&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fde66fa86f8517d887e54616bf1fb31656fc7f81" translate="yes" xml:space="preserve">
          <source>Motivations</source>
          <target state="translated">Motivations</target>
        </trans-unit>
        <trans-unit id="cd847d892e51c9af96a07d5f1327caaaa74f5961" translate="yes" xml:space="preserve">
          <source>Mozilla Developer Network</source>
          <target state="translated">Red de desarrolladores de Mozilla</target>
        </trans-unit>
        <trans-unit id="1717de09461ac8ad667382f9284cc154ed5fcf13" translate="yes" xml:space="preserve">
          <source>Multi-Line Comments</source>
          <target state="translated">Comentarios multilínea</target>
        </trans-unit>
        <trans-unit id="50ffbaa596feb6c3fce6a0ab79b26de80c0fc9ad" translate="yes" xml:space="preserve">
          <source>Multi-line &lt;code&gt;eslint-disable-line&lt;/code&gt; directives are now reported as problems</source>
          <target state="translated">Las directivas &lt;code&gt;eslint-disable-line&lt;/code&gt; de varias l&amp;iacute;neas ahora se informan como problemas</target>
        </trans-unit>
        <trans-unit id="ebd80a2db4954a31bc8bbc5ce38618ea3077ca04" translate="yes" xml:space="preserve">
          <source>Multi-line comments should be used to document code that requires more explanation. Each multi-line comment should have at least three lines:</source>
          <target state="translated">Los comentarios de varias líneas deben utilizarse para documentar el código que requiere más explicación.Cada comentario de varias líneas debe tener al menos tres líneas:</target>
        </trans-unit>
        <trans-unit id="b97cd68ceb9fb3aefd437fb8bac6c169f39dc7ef" translate="yes" xml:space="preserve">
          <source>Multiline Properties</source>
          <target state="translated">Propiedades de las multilíneas</target>
        </trans-unit>
        <trans-unit id="25384bc20fcb587fe7b1a27bd9646bb5677ec5ce" translate="yes" xml:space="preserve">
          <source>Multiple glob patterns can be provided within a single override block. A file must match at least one of the supplied patterns for the configuration to apply.</source>
          <target state="translated">Se pueden proporcionar múltiples patrones de globos dentro de un solo bloque de anulación.Un archivo debe coincidir con al menos uno de los patrones suministrados para que se aplique la configuración.</target>
        </trans-unit>
        <trans-unit id="75af35131e430e8f953818ff04be0c62dc2c9f54" translate="yes" xml:space="preserve">
          <source>Multiple object/property values can be disallowed, and you can specify an optional message:</source>
          <target state="translated">Se pueden desautorizar múltiples valores de objetos/propiedades,y se puede especificar un mensaje opcional:</target>
        </trans-unit>
        <trans-unit id="ce6c9b518828a9995fa8b5eaa2bb15a280c804ca" translate="yes" xml:space="preserve">
          <source>Multiple properties with the same key in object literals can cause unexpected behavior in your application.</source>
          <target state="translated">Múltiples propiedades con la misma clave en los literales de los objetos pueden causar un comportamiento inesperado en su aplicación.</target>
        </trans-unit>
        <trans-unit id="2ea30e5e8aba10118d84047ac8d06b2fb97d351e" translate="yes" xml:space="preserve">
          <source>Multiple spaces in a row that are not used for indentation are typically mistakes. For example:</source>
          <target state="translated">Múltiples espacios en una fila que no se usan para la indentación son típicamente errores.Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="fe7b50504e864db175792f08ac3122cab2513fc4" translate="yes" xml:space="preserve">
          <source>Multiple var statements in JavaScript, not superfluous</source>
          <target state="translated">Múltiples declaraciones var en JavaScript,no superfluas</target>
        </trans-unit>
        <trans-unit id="8b4617b659a51d0b5756991a46730570511eef04" translate="yes" xml:space="preserve">
          <source>Naming</source>
          <target state="translated">Naming</target>
        </trans-unit>
        <trans-unit id="45b150c33703661a4e069fa3f97c482cd27685ef" translate="yes" xml:space="preserve">
          <source>Naming Convention</source>
          <target state="translated">Convención sobre la denominación</target>
        </trans-unit>
        <trans-unit id="4a1334b26c176a4a0cf6f3310906a31587677f7c" translate="yes" xml:space="preserve">
          <source>Naming things consistently in a project is an often underestimated aspect of code creation. When done correctly, it can save your team hours of unnecessary head scratching and misdirections. This rule allows you to precisely define and enforce the variables and function names on your team should use. No more limiting yourself to camelCase, snake_case, PascalCase or oHungarianNotation. Id-match has all your needs covered!</source>
          <target state="translated">Nombrar las cosas de forma consistente en un proyecto es un aspecto a menudo subestimado de la creación de código.Cuando se hace correctamente,puede ahorrarle a su equipo horas de innecesarios arañazos en la cabeza y direcciones erróneas.Esta regla te permite definir con precisión y hacer cumplir las variables y los nombres de las funciones que tu equipo debe utilizar.Ya no te limitarás a CamelCase,Snake_case,PascalCase o oHungarianNotation.¡Id-match tiene todas sus necesidades cubiertas!</target>
        </trans-unit>
        <trans-unit id="f9c51726a21f2c071e2eaecdc1f58e85c2e063e9" translate="yes" xml:space="preserve">
          <source>Negated conditions are more difficult to understand. Code can be made more readable by inverting the condition instead.</source>
          <target state="translated">Las condiciones negadas son más difíciles de entender.El código puede hacerse más legible invirtiendo la condición en su lugar.</target>
        </trans-unit>
        <trans-unit id="e4be93dc7bf3a2d0c376b542c46f2be17b015f34" translate="yes" xml:space="preserve">
          <source>Nested &lt;code&gt;overrides&lt;/code&gt; setting will be applied only if the glob patterns of both of the parent config and the child config matched. This is the same when the extended configs have &lt;code&gt;overrides&lt;/code&gt; setting.</source>
          <target state="translated">La configuraci&amp;oacute;n de &lt;code&gt;overrides&lt;/code&gt; anidadas se aplicar&amp;aacute; solo si los patrones globales de la configuraci&amp;oacute;n principal y la secundaria coinciden. Esto es lo mismo cuando las configuraciones extendidas tienen una configuraci&amp;oacute;n de &lt;code&gt;overrides&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bba2cf8efb9ea175365987d5e97406eab0eb07ac" translate="yes" xml:space="preserve">
          <source>Nested long method chains like the below example are often broken onto separate lines for readability:</source>
          <target state="translated">Las largas cadenas de métodos anidados como el ejemplo que se muestra a continuación se suelen dividir en líneas separadas para facilitar la lectura:</target>
        </trans-unit>
        <trans-unit id="0f7143e0984fd302373a44b923b04ef166d1d6d4" translate="yes" xml:space="preserve">
          <source>Nesting ternary expressions can make code more difficult to understand.</source>
          <target state="translated">Anidar expresiones ternarias puede hacer que el código sea más difícil de entender.</target>
        </trans-unit>
        <trans-unit id="e868c2d163da18b704134c91dfe580b7476d872b" translate="yes" xml:space="preserve">
          <source>Never use &lt;code&gt;eval()&lt;/code&gt;.</source>
          <target state="translated">Nunca use &lt;code&gt;eval()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="17303bc383f07ad6ca5f1e713ad09a8e4c5aceb1" translate="yes" xml:space="preserve">
          <source>Never use the &lt;code&gt;with&lt;/code&gt; statement. This statement isn't available in strict mode and likely won't be available in future ECMAScript editions.</source>
          <target state="translated">Nunca use la declaraci&amp;oacute;n &lt;code&gt;with&lt;/code&gt; . Esta declaraci&amp;oacute;n no est&amp;aacute; disponible en modo estricto y probablemente no estar&amp;aacute; disponible en futuras ediciones de ECMAScript.</target>
        </trans-unit>
        <trans-unit id="ccd1fb39539ac8b89e4d82497beb7205dfc545dc" translate="yes" xml:space="preserve">
          <source>Never use the primitive wrapper types, such as &lt;code&gt;String&lt;/code&gt;, to create new objects.</source>
          <target state="translated">Nunca use los tipos de envoltura primitivos, como &lt;code&gt;String&lt;/code&gt; , para crear nuevos objetos.</target>
        </trans-unit>
        <trans-unit id="b8fd74418c174fa1a6547580b4f9d50c65e103b2" translate="yes" xml:space="preserve">
          <source>Never use the special value &lt;code&gt;undefined&lt;/code&gt;. To see if a variable has been defined, use the &lt;code&gt;typeof&lt;/code&gt; operator:</source>
          <target state="translated">Nunca use el valor especial &lt;code&gt;undefined&lt;/code&gt; . Para ver si se ha definido una variable, use el operador &lt;code&gt;typeof&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="e29869dc1c4b4ed49384ced7f3787145a78ff2a6" translate="yes" xml:space="preserve">
          <source>Never.</source>
          <target state="translated">Never.</target>
        </trans-unit>
        <trans-unit id="c7c2bffc4ed85d835ff90e67b6700b9717359c25" translate="yes" xml:space="preserve">
          <source>New Rules</source>
          <target state="translated">Nuevas reglas</target>
        </trans-unit>
        <trans-unit id="b90e91c1c9b0532e10c8d94b3242c03a7c521d78" translate="yes" xml:space="preserve">
          <source>New Rules in &lt;code&gt;&quot;eslint:recommended&quot;&lt;/code&gt;</source>
          <target state="translated">Nuevas reglas en &lt;code&gt;&quot;eslint:recommended&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="098b5a1915693dd6ff64ee239f651997dde49e83" translate="yes" xml:space="preserve">
          <source>New rules have been added to &lt;code&gt;eslint:recommended&lt;/code&gt;</source>
          <target state="translated">Se han agregado nuevas reglas a &lt;code&gt;eslint:recommended&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3f170caead65df254d786032a409a6f6d204bca6" translate="yes" xml:space="preserve">
          <source>Next Steps</source>
          <target state="translated">Próximos pasos</target>
        </trans-unit>
        <trans-unit id="f76dd91a3359617271ed7ffd8b7df9bbc0c954e1" translate="yes" xml:space="preserve">
          <source>Next, push your changes to your clone:</source>
          <target state="translated">A continuación,empuja tus cambios a tu clon:</target>
        </trans-unit>
        <trans-unit id="432bb6269b57474b24c9803b75937c68ef4b90c5" translate="yes" xml:space="preserve">
          <source>No Longer Exporting cli</source>
          <target state="translated">Ya no se exportan cli</target>
        </trans-unit>
        <trans-unit id="6fe37c89ea3654de81c59847379a8780e76d887e" translate="yes" xml:space="preserve">
          <source>No one will blame you for backing out of an issue if you are unable to complete it. We just want to keep the process moving along as efficiently as possible.</source>
          <target state="translated">Nadie te culpará por retirarte de un tema si no eres capaz de completarlo.Sólo queremos que el proceso siga adelante de la manera más eficiente posible.</target>
        </trans-unit>
        <trans-unit id="015936150c4240bf1685a0beae94734e5c0fd2e7" translate="yes" xml:space="preserve">
          <source>No rules are enabled by default. The &lt;code&gt;&quot;extends&quot;: &quot;eslint:recommended&quot;&lt;/code&gt; property in a &lt;a href=&quot;../user-guide/configuring#extending-configuration-files&quot;&gt;configuration file&lt;/a&gt; enables rules that report common problems, which have a check mark  below.</source>
          <target state="translated">No hay reglas habilitadas de forma predeterminada. La propiedad &lt;code&gt;&quot;extends&quot;: &quot;eslint:recommended&quot;&lt;/code&gt; en un &lt;a href=&quot;../user-guide/configuring#extending-configuration-files&quot;&gt;archivo de configuraci&amp;oacute;n&lt;/a&gt; habilita reglas que informan problemas comunes, que tienen una marca de verificaci&amp;oacute;n debajo.</target>
        </trans-unit>
        <trans-unit id="43b56bdc9a2f449dd95a29cc4403aabc8d987dfc" translate="yes" xml:space="preserve">
          <source>Node.JS</source>
          <target state="translated">Node.JS</target>
        </trans-unit>
        <trans-unit id="10b3493287f831e81a438811a1ffba01f8cec4b7" translate="yes" xml:space="preserve">
          <source>Node.js</source>
          <target state="translated">Node.js</target>
        </trans-unit>
        <trans-unit id="7c492f9c09c9ff17a16de6ed9c821ef76255da51" translate="yes" xml:space="preserve">
          <source>Node.js 10 (10.13.0 and above)</source>
          <target state="translated">Nodo.js 10 (10.13.0 y más)</target>
        </trans-unit>
        <trans-unit id="90d89d5227cc3415b0eef08538029343dc658ba6" translate="yes" xml:space="preserve">
          <source>Node.js 4 is no longer supported</source>
          <target state="translated">Node.js 4 ya no está soportado</target>
        </trans-unit>
        <trans-unit id="5a40f605ee0fd0ee1b8acb34f313bb0a19612661" translate="yes" xml:space="preserve">
          <source>Node.js 6 (6.14.0 and above)</source>
          <target state="translated">Nodo.js 6 (6.14.0 y más)</target>
        </trans-unit>
        <trans-unit id="e90914a7b373d6529d8a016e66f5135b658d37af" translate="yes" xml:space="preserve">
          <source>Node.js 6 is no longer supported</source>
          <target state="translated">Node.js 6 ya no está soportado</target>
        </trans-unit>
        <trans-unit id="2ceb71f6fc886f72cd41914593a377d2331bca2a" translate="yes" xml:space="preserve">
          <source>Node.js 8 (8.10.0 and above)</source>
          <target state="translated">Nodo.js 8 (8.10.0 y más)</target>
        </trans-unit>
        <trans-unit id="8b8214b8e226c143da7ac208d7ccfff6ed28e492" translate="yes" xml:space="preserve">
          <source>Node.js API</source>
          <target state="translated">Node.js API</target>
        </trans-unit>
        <trans-unit id="04fbd93b23e439f6b5bdb44a7ebe23e14c1d9127" translate="yes" xml:space="preserve">
          <source>Node.js and CommonJS</source>
          <target state="translated">Node.js y CommonJS</target>
        </trans-unit>
        <trans-unit id="e3f2bdd6d137ca1e9a98351c023627cbde0cec9c" translate="yes" xml:space="preserve">
          <source>Nodejitsu: What are the error conventions?</source>
          <target state="translated">Nodejitsu:¿Cuáles son las convenciones de error?</target>
        </trans-unit>
        <trans-unit id="40b5e952bb48a49486eed3f9c7473ff77e065932" translate="yes" xml:space="preserve">
          <source>Normally, if ESLint runs and finds no errors (only warnings), it will exit with a success exit status. However, if &lt;code&gt;--max-warnings&lt;/code&gt; is specified and the total warning count is greater than the specified threshold, ESLint will exit with an error status. Specifying a threshold of &lt;code&gt;-1&lt;/code&gt; or omitting this option will prevent this behavior.</source>
          <target state="translated">Normalmente, si ESLint se ejecuta y no encuentra errores (solo advertencias), saldr&amp;aacute; con un estado de salida exitoso. Sin embargo, si se especifica &lt;code&gt;--max-warnings&lt;/code&gt; y el recuento total de advertencias es mayor que el umbral especificado, ESLint saldr&amp;aacute; con un estado de error. Especificar un umbral de &lt;code&gt;-1&lt;/code&gt; u omitir esta opci&amp;oacute;n evitar&amp;aacute; este comportamiento.</target>
        </trans-unit>
        <trans-unit id="b25fdf6d849a83c39bb3f295e2b8c788a05b6b0d" translate="yes" xml:space="preserve">
          <source>Not be library-specific.</source>
          <target state="translated">No ser específico de la biblioteca.</target>
        </trans-unit>
        <trans-unit id="35e36fc0294abf8492a00a6146dff86e708f4159" translate="yes" xml:space="preserve">
          <source>Not be the opposite of an existing rule.</source>
          <target state="translated">No ser lo contrario de una regla existente.</target>
        </trans-unit>
        <trans-unit id="fad574db66b94391e41eddfcd296f39d4f94404a" translate="yes" xml:space="preserve">
          <source>Not overlap with an existing rule.</source>
          <target state="translated">No se superponen con una regla existente.</target>
        </trans-unit>
        <trans-unit id="9029138548f2a9fdd23c03ef55efcf761ab4cfd0" translate="yes" xml:space="preserve">
          <source>Not specifying this rule is equivalent of assigning it to &lt;code&gt;none&lt;/code&gt;.</source>
          <target state="translated">No especificar esta regla equivale a asignarla a &lt;code&gt;none&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4861a0142b65983913e9d41b8290eade0ea43067" translate="yes" xml:space="preserve">
          <source>Notations</source>
          <target state="translated">Notations</target>
        </trans-unit>
        <trans-unit id="9b7b918044536aa7a7deb04ec10c32265cca907c" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;&quot;always&quot;&lt;/code&gt; has a special case where &lt;code&gt;{}&lt;/code&gt; and &lt;code&gt;[]&lt;/code&gt; are not considered problems.</source>
          <target state="translated">Tenga en cuenta que &lt;code&gt;&quot;always&quot;&lt;/code&gt; tiene un caso especial en el que &lt;code&gt;{}&lt;/code&gt; y &lt;code&gt;[]&lt;/code&gt; no se consideran problemas.</target>
        </trans-unit>
        <trans-unit id="b8542e39cfc8468ccf1b75f31ccc5f6beca12d4a" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;/* exported */&lt;/code&gt; has no effect for any of the following:</source>
          <target state="translated">Tenga en cuenta que &lt;code&gt;/* exported */&lt;/code&gt; no tiene ning&amp;uacute;n efecto en ninguno de los siguientes casos:</target>
        </trans-unit>
        <trans-unit id="aca84c496113223feba48b89954e9ed6a64416c1" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;defaultAssignment: false&lt;/code&gt; still allows expressions of the form &lt;code&gt;x ? expr : x&lt;/code&gt; (where the identifier is on the right hand side of the ternary).</source>
          <target state="translated">Tenga en cuenta que &lt;code&gt;defaultAssignment: false&lt;/code&gt; a&amp;uacute;n permite expresiones de la forma &lt;code&gt;x ? expr : x&lt;/code&gt; (donde el identificador est&amp;aacute; en el lado derecho del ternario).</target>
        </trans-unit>
        <trans-unit id="9b7f17dafb1fc2ac631526c6b46f9a1d8ffa8e3b" translate="yes" xml:space="preserve">
          <source>Note that at least one of &lt;code&gt;node&lt;/code&gt; or &lt;code&gt;loc&lt;/code&gt; is required.</source>
          <target state="translated">Tenga en cuenta que se requiere al menos uno de &lt;code&gt;node&lt;/code&gt; o &lt;code&gt;loc&lt;/code&gt; omotora .</target>
        </trans-unit>
        <trans-unit id="3f74885501a3e7134a66bf3df8110995866d5416" translate="yes" xml:space="preserve">
          <source>Note that configuration comments and comments which start with URLs are never reported.</source>
          <target state="translated">Tenga en cuenta que los comentarios de configuración y los comentarios que comienzan con URL nunca se reportan.</target>
        </trans-unit>
        <trans-unit id="c2f78d136a146a36971c9e8628e71d64cc1bd5ef" translate="yes" xml:space="preserve">
          <source>Note that even with these compatibilities, there are no guarantees that an external parser will work correctly with ESLint and ESLint will not fix bugs related to incompatibilities with other parsers.</source>
          <target state="translated">Tenga en cuenta que incluso con estas compatibilidades,no hay garantías de que un analizador externo funcione correctamente con ESLint y ESLint no arreglará los errores relacionados con las incompatibilidades con otros analizadores.</target>
        </trans-unit>
        <trans-unit id="bfc76a3bf8f752b8b71cfd21bce6317dc0eb6d26" translate="yes" xml:space="preserve">
          <source>Note that every &lt;code&gt;getter&lt;/code&gt; is expected to return a value.</source>
          <target state="translated">Tenga en cuenta que se espera que cada &lt;code&gt;getter&lt;/code&gt; devuelva un valor.</target>
        </trans-unit>
        <trans-unit id="973ad8dc3ee2a30a3d4c6e8e9554560da150053f" translate="yes" xml:space="preserve">
          <source>Note that leading and trailing whitespace is optional in message parameters.</source>
          <target state="translated">Tenga en cuenta que el espacio en blanco anterior y posterior es opcional en los parámetros de los mensajes.</target>
        </trans-unit>
        <trans-unit id="8c038f50e970ff4a6c263baef88671b9b6797c2c" translate="yes" xml:space="preserve">
          <source>Note that one or more string expression statements (with or without semi-colons) will only be considered as unused if they are not in the beginning of a script, module, or function (alone and uninterrupted by other statements). Otherwise, they will be treated as part of a &quot;directive prologue&quot;, a section potentially usable by JavaScript engines. This includes &quot;strict mode&quot; directives.</source>
          <target state="translated">Obsérvese que una o más declaraciones de expresión de cadena (con o sin punto y coma)sólo se considerarán como no utilizadas si no están en el comienzo de un guión,módulo o función (solas e ininterrumpidas por otras declaraciones).En caso contrario,se tratarán como parte de un &quot;prólogo de la directiva&quot;,una sección potencialmente utilizable por los motores de JavaScript.Esto incluye las directivas de &quot;modo estricto&quot;.</target>
        </trans-unit>
        <trans-unit id="14eabcc20ca1ae6d595dd0146dacc275446c2785" translate="yes" xml:space="preserve">
          <source>Note that operator &lt;code&gt;+&lt;/code&gt; in &lt;code&gt;allow&lt;/code&gt; list would allow &lt;code&gt;+foo&lt;/code&gt; (number coercion) as well as &lt;code&gt;&quot;&quot; + foo&lt;/code&gt; (string coercion).</source>
          <target state="translated">Tenga en cuenta que el operador &lt;code&gt;+&lt;/code&gt; en &lt;code&gt;allow&lt;/code&gt; la lista permitir&amp;iacute;a &lt;code&gt;+foo&lt;/code&gt; (n&amp;uacute;mero coerci&amp;oacute;n), as&amp;iacute; como &lt;code&gt;&quot;&quot; + foo&lt;/code&gt; (coacci&amp;oacute;n cadena).</target>
        </trans-unit>
        <trans-unit id="a2ea103023fbbea878ee580810efa43b1ce5e514" translate="yes" xml:space="preserve">
          <source>Note that simply checking &lt;code&gt;foo.hasOwnProperty(key)&lt;/code&gt; is likely to cause an error in some cases; see &lt;a href=&quot;no-prototype-builtins&quot;&gt;no-prototype-builtins&lt;/a&gt;.</source>
          <target state="translated">Tenga en cuenta que el simple hecho de comprobar &lt;code&gt;foo.hasOwnProperty(key)&lt;/code&gt; puede provocar un error en algunos casos; ver &lt;a href=&quot;no-prototype-builtins&quot;&gt;no-prototipos-incorporados&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="da8f31abf81fd1530a65a1c89cbaf28a84d87fe4" translate="yes" xml:space="preserve">
          <source>Note that the following words are always ignored by this rule: &lt;code&gt;[&quot;jscs&quot;, &quot;jshint&quot;, &quot;eslint&quot;, &quot;istanbul&quot;, &quot;global&quot;, &quot;globals&quot;, &quot;exported&quot;]&lt;/code&gt;.</source>
          <target state="translated">Tenga en cuenta que esta regla siempre ignora las siguientes palabras: &lt;code&gt;[&quot;jscs&quot;, &quot;jshint&quot;, &quot;eslint&quot;, &quot;istanbul&quot;, &quot;global&quot;, &quot;globals&quot;, &quot;exported&quot;]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="92871ffd4aceb2bd3a9e8edec06e56e2e05d821f" translate="yes" xml:space="preserve">
          <source>Note that the last &lt;code&gt;case&lt;/code&gt; statement in these examples does not cause a warning because there is nothing to fall through into.</source>
          <target state="translated">Tenga en cuenta que la &amp;uacute;ltima declaraci&amp;oacute;n de &lt;code&gt;case&lt;/code&gt; en estos ejemplos no genera una advertencia porque no hay nada en lo que caer.</target>
        </trans-unit>
        <trans-unit id="9fe60f0778016b7de275c5c3433b4ff7fcd68bdb" translate="yes" xml:space="preserve">
          <source>Note that the patterns considered problems are &lt;strong&gt;not&lt;/strong&gt; flagged by the &lt;a href=&quot;semi&quot;&gt;semi&lt;/a&gt; rule.</source>
          <target state="translated">Tenga en cuenta que los patrones considerados problemas &lt;strong&gt;no&lt;/strong&gt; est&amp;aacute;n marcados por la regla &lt;a href=&quot;semi&quot;&gt;semi&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="649f078207c83d3aa9f8117c4caa24a177fa6e14" translate="yes" xml:space="preserve">
          <source>Note that this also affects the &lt;a href=&quot;../developer-guide/nodejs-api#cliengineexecuteonfiles&quot;&gt;&lt;code&gt;CLIEngine.executeOnFiles()&lt;/code&gt;&lt;/a&gt; API.</source>
          <target state="translated">Tenga en cuenta que esto tambi&amp;eacute;n afecta a la API &lt;a href=&quot;../developer-guide/nodejs-api#cliengineexecuteonfiles&quot;&gt; &lt;code&gt;CLIEngine.executeOnFiles()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4e1fc0ebbd12c442e0e5e74e0e029ef6f09efa61" translate="yes" xml:space="preserve">
          <source>Note that this also enables parsing for other features from ES2018, such as &lt;a href=&quot;https://github.com/tc39/proposal-async-iteration&quot;&gt;async iteration&lt;/a&gt;. When using ESLint v5 with the default parser, it is no longer possible to toggle syntax support for object rest/spread independently of other features.</source>
          <target state="translated">Tenga en cuenta que esto tambi&amp;eacute;n permite analizar otras caracter&amp;iacute;sticas de ES2018, como la &lt;a href=&quot;https://github.com/tc39/proposal-async-iteration&quot;&gt;iteraci&amp;oacute;n as&amp;iacute;ncrona&lt;/a&gt; . Cuando se usa ESLint v5 con el analizador predeterminado, ya no es posible alternar el soporte de sintaxis para el reposo / propagaci&amp;oacute;n de objetos independientemente de otras caracter&amp;iacute;sticas.</target>
        </trans-unit>
        <trans-unit id="82d62f793b20020481672da21ac064b568a683e5" translate="yes" xml:space="preserve">
          <source>Note that this rule does not disallow assignments to read-only global variables. See &lt;a href=&quot;no-global-assign&quot;&gt;no-global-assign&lt;/a&gt; if you also want to disallow those assignments.</source>
          <target state="translated">Tenga en cuenta que esta regla no rechaza las asignaciones a variables globales de solo lectura. Consulte &lt;a href=&quot;no-global-assign&quot;&gt;no-global-assign&lt;/a&gt; si tambi&amp;eacute;n desea rechazar esas asignaciones.</target>
        </trans-unit>
        <trans-unit id="a5a9767c41439a621031ba6529109fef573ecf23" translate="yes" xml:space="preserve">
          <source>Note that this rule does not enforce the usage of single-line statements in general. If you would like to disallow single-line statements, use the &lt;a href=&quot;curly&quot;&gt;&lt;code&gt;curly&lt;/code&gt;&lt;/a&gt; rule instead.</source>
          <target state="translated">Tenga en cuenta que esta regla no impone el uso de declaraciones de una sola l&amp;iacute;nea en general. Si desea rechazar las declaraciones de una sola l&amp;iacute;nea, use la regla &lt;a href=&quot;curly&quot;&gt; &lt;code&gt;curly&lt;/code&gt; en su&lt;/a&gt; lugar.</target>
        </trans-unit>
        <trans-unit id="d826b4d17235a608a3c9cd20c92fa11e3d5d2e94" translate="yes" xml:space="preserve">
          <source>Note that this rule only enforces spacing within parentheses; it does not check spacing within curly or square brackets, but will enforce or disallow spacing of those brackets if and only if they are adjacent to an opening or closing parenthesis.</source>
          <target state="translated">Obsérvese que esta regla sólo hace cumplir el espaciamiento entre paréntesis;no comprueba el espaciamiento entre paréntesis rizados o cuadrados,pero hará cumplir o no el espaciamiento de esos paréntesis si y sólo si están adyacentes a un paréntesis de apertura o cierre.</target>
        </trans-unit>
        <trans-unit id="347d91e7a5b838e6bcb85cf66bf52f2d967e3ca1" translate="yes" xml:space="preserve">
          <source>Note that when using the &lt;code&gt;node&lt;/code&gt; or &lt;code&gt;commonjs&lt;/code&gt; environments (or &lt;code&gt;ecmaFeatures.globalReturn&lt;/code&gt;, if using the default parser), the top scope of a program is not actually the global scope, but rather a &quot;module&quot; scope. When this is the case, declaring a variable named after a builtin global is not a redeclaration, but rather a shadowing of the global variable. In that case, the &lt;a href=&quot;no-shadow&quot;&gt;&lt;code&gt;no-shadow&lt;/code&gt;&lt;/a&gt; rule with the &lt;code&gt;&quot;builtinGlobals&quot;&lt;/code&gt; option should be used.</source>
          <target state="translated">Tenga en cuenta que al usar los entornos de &lt;code&gt;node&lt;/code&gt; o &lt;code&gt;commonjs&lt;/code&gt; (o &lt;code&gt;ecmaFeatures.globalReturn&lt;/code&gt; , si usa el analizador predeterminado), el alcance superior de un programa no es en realidad el alcance global, sino m&amp;aacute;s bien el alcance de un &quot;m&amp;oacute;dulo&quot;. Cuando este es el caso, declarar una variable con el nombre de un global incorporado no es una redeclaraci&amp;oacute;n, sino m&amp;aacute;s bien un sombreado de la variable global. En ese caso, se debe utilizar la regla de &lt;a href=&quot;no-shadow&quot;&gt; &lt;code&gt;no-shadow&lt;/code&gt; &lt;/a&gt; con la opci&amp;oacute;n &lt;code&gt;&quot;builtinGlobals&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1125aced35499b31bb41c702c9945c7bd12e9b07" translate="yes" xml:space="preserve">
          <source>Note that you can leave off the &lt;code&gt;.js&lt;/code&gt; from the filename. In this way, you can add as many additional configs to your package as you'd like.</source>
          <target state="translated">Tenga en cuenta que puede &lt;code&gt;.js&lt;/code&gt; el .js del nombre del archivo. De esta manera, puede agregar tantas configuraciones adicionales a su paquete como desee.</target>
        </trans-unit>
        <trans-unit id="76aa0f033fd5d1d41d32bcaf6fd648d73e33b956" translate="yes" xml:space="preserve">
          <source>Note that, as with core rules and plugin rules, you still need to enable the rules in configuration or via the &lt;code&gt;--rule&lt;/code&gt; CLI option in order to actually run those rules during linting. Specifying a rules directory with &lt;code&gt;--rulesdir&lt;/code&gt; does not automatically enable the rules within that directory.</source>
          <target state="translated">Tenga en cuenta que, al igual que con las reglas b&amp;aacute;sicas y las reglas de los complementos, a&amp;uacute;n debe habilitar las reglas en la configuraci&amp;oacute;n o mediante la opci&amp;oacute;n &lt;code&gt;--rule&lt;/code&gt; CLI para ejecutar esas reglas durante la aplicaci&amp;oacute;n. Especificar un directorio de reglas con &lt;code&gt;--rulesdir&lt;/code&gt; no habilita autom&amp;aacute;ticamente las reglas dentro de ese directorio.</target>
        </trans-unit>
        <trans-unit id="e9b6296c44a9bc30cef358e801b33c46b39d24f5" translate="yes" xml:space="preserve">
          <source>Note the use of a semicolon as the final part of this statement. There should be a space before and after the &lt;code&gt;while&lt;/code&gt; keyword.</source>
          <target state="translated">Tenga en cuenta el uso de un punto y coma como la parte final de esta declaraci&amp;oacute;n. Debe haber un espacio antes y despu&amp;eacute;s de la palabra clave &lt;code&gt;while&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cc6c88398cdded8def6acc02b6ff7133a562ee36" translate="yes" xml:space="preserve">
          <source>Note when using a custom parser, the &lt;code&gt;parserOptions&lt;/code&gt; configuration property is still required for ESLint to work properly with features not in ECMAScript 5 by default. Parsers are all passed &lt;code&gt;parserOptions&lt;/code&gt; and may or may not use them to determine which features to enable.</source>
          <target state="translated">Tenga en cuenta que cuando se usa un analizador personalizado, la propiedad de configuraci&amp;oacute;n &lt;code&gt;parserOptions&lt;/code&gt; sigue siendo necesaria para que ESLint funcione correctamente con funciones que no est&amp;aacute;n en ECMAScript 5 de forma predeterminada. Los analizadores son todos pasados &lt;code&gt;parserOptions&lt;/code&gt; y pueden o no usarlos para determinar qu&amp;eacute; caracter&amp;iacute;sticas habilitar.</target>
        </trans-unit>
        <trans-unit id="50c39afa03191645dbc4d28c7d2359af7e538e42" translate="yes" xml:space="preserve">
          <source>Note: Currently &lt;code&gt;CLIEngine&lt;/code&gt; does not validate options passed to it, but may start doing so in the future.</source>
          <target state="translated">Nota: Actualmente &lt;code&gt;CLIEngine&lt;/code&gt; no valida las opciones que se le pasan, pero puede comenzar a hacerlo en el futuro.</target>
        </trans-unit>
        <trans-unit id="984b1133cbe92feba750f10ab3475f0c23c1b51a" translate="yes" xml:space="preserve">
          <source>Note: For a rule preventing deletion of variables, see &lt;a href=&quot;no-delete-var&quot;&gt;no-delete-var instead&lt;/a&gt;</source>
          <target state="translated">Nota: Para una regla que evita la eliminaci&amp;oacute;n de variables, consulte &lt;a href=&quot;no-delete-var&quot;&gt;no-delete-var en su lugar&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d25aa0b7adae8f5ed33576b5806bc8d4bbf49549" translate="yes" xml:space="preserve">
          <source>Note: Formatting for Terminals</source>
          <target state="translated">Nota:Formato para las terminales</target>
        </trans-unit>
        <trans-unit id="094162498ea0d1d13c56050f15e2107cd8551770" translate="yes" xml:space="preserve">
          <source>Note: Suggestions will be applied as a stand-alone change, without triggering multipass fixes. Each suggestion should focus on a singular change in the code and should not try to conform to user defined styles. For example, if a suggestion is adding a new statement into the codebase, it should not try to match correct indentation, or confirm to user preferences on presence/absence of semicolumns. All of those things can be corrected by multipass autofix when the user triggers it.</source>
          <target state="translated">Nota:Las sugerencias se aplicarán como un cambio independiente,sin activar las correcciones multipaso.Cada sugerencia debe centrarse en un cambio singular del código y no debe tratar de ajustarse a los estilos definidos por el usuario.Por ejemplo,si una sugerencia consiste en añadir una nueva declaración a la base de código,no debe tratar de ajustarse a la indentación correcta,ni confirmar las preferencias del usuario en cuanto a la presencia/ausencia de semicolumnas.Todas esas cosas pueden ser corregidas por el autofijo multipaso cuando el usuario lo activa.</target>
        </trans-unit>
        <trans-unit id="7a96d12cefbf530755a3476759379971f31c30b2" translate="yes" xml:space="preserve">
          <source>Note: This API is deprecated as of 4.0.0.</source>
          <target state="translated">Nota:Este API está desactualizado a partir del 4.0.0.</target>
        </trans-unit>
        <trans-unit id="24de5bcbd5c3607fa22b1b0d298fae9fdf45a3ea" translate="yes" xml:space="preserve">
          <source>Now here are ES6 equivalents:</source>
          <target state="translated">Aquí hay equivalentes al ES6:</target>
        </trans-unit>
        <trans-unit id="87fe1cc3d574f9be3c85d698f90d866c75ac44a8" translate="yes" xml:space="preserve">
          <source>Now inside your &lt;code&gt;/lib/ci/backend.js&lt;/code&gt;</source>
          <target state="translated">Ahora dentro de su &lt;code&gt;/lib/ci/backend.js&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="35e2195ff597916ba2ef234cdbb68bdf57b69342" translate="yes" xml:space="preserve">
          <source>Now inside your package you have &lt;code&gt;/lib/defaults.js&lt;/code&gt;, which contains:</source>
          <target state="translated">Ahora dentro de su paquete tiene &lt;code&gt;/lib/defaults.js&lt;/code&gt; , que contiene:</target>
        </trans-unit>
        <trans-unit id="4137e109ac15d620738ab61f944d78dc01861a63" translate="yes" xml:space="preserve">
          <source>Now it is very clear that three spaces are expected to be matched.</source>
          <target state="translated">Ahora está muy claro que se espera que tres espacios coincidan.</target>
        </trans-unit>
        <trans-unit id="5bca21c074e0d721a5fd90d89b255318c8ce0216" translate="yes" xml:space="preserve">
          <source>Now when you run &lt;code&gt;eslint&lt;/code&gt;, it will be running your local copy and showing your changes.</source>
          <target state="translated">Ahora, cuando ejecute &lt;code&gt;eslint&lt;/code&gt; , ejecutar&amp;aacute; su copia local y mostrar&amp;aacute; sus cambios.</target>
        </trans-unit>
        <trans-unit id="57c585f4798ef4591adf413472a8e4f97e198bfd" translate="yes" xml:space="preserve">
          <source>Now you're ready to send the pull request. Go to your ESLint fork and then follow the &lt;a href=&quot;https://help.github.com/articles/creating-a-pull-request&quot;&gt;GitHub documentation&lt;/a&gt; on how to send a pull request.</source>
          <target state="translated">Ahora est&amp;aacute; listo para enviar la solicitud de extracci&amp;oacute;n. Vaya a su bifurcaci&amp;oacute;n de ESLint y luego siga la &lt;a href=&quot;https://help.github.com/articles/creating-a-pull-request&quot;&gt;documentaci&amp;oacute;n de GitHub&lt;/a&gt; sobre c&amp;oacute;mo enviar una solicitud de extracci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="20482a66574043c6f07e88950af557ca9ba4cb34" translate="yes" xml:space="preserve">
          <source>Now, consider the following group configuration: &lt;code&gt;{&quot;groups&quot;: [[&quot;&amp;amp;&quot;, &quot;|&quot;, &quot;^&quot;, &quot;~&quot;, &quot;&amp;lt;&amp;lt;&quot;, &quot;&amp;gt;&amp;gt;&quot;, &quot;&amp;gt;&amp;gt;&amp;gt;&quot;], [&quot;&amp;amp;&amp;amp;&quot;, &quot;||&quot;]]}&lt;/code&gt;. There are 2 groups specified in this configuration: bitwise operators and logical operators. This rule checks if the operators belong to the same group only. In this case, this rule checks if bitwise operators and logical operators are mixed, but ignores all other operators.</source>
          <target state="translated">Ahora, considere la siguiente configuraci&amp;oacute;n de grupo: &lt;code&gt;{&quot;groups&quot;: [[&quot;&amp;amp;&quot;, &quot;|&quot;, &quot;^&quot;, &quot;~&quot;, &quot;&amp;lt;&amp;lt;&quot;, &quot;&amp;gt;&amp;gt;&quot;, &quot;&amp;gt;&amp;gt;&amp;gt;&quot;], [&quot;&amp;amp;&amp;amp;&quot;, &quot;||&quot;]]}&lt;/code&gt; . Hay 2 grupos especificados en esta configuraci&amp;oacute;n: operadores bit a bit y operadores l&amp;oacute;gicos. Esta regla comprueba si los operadores pertenecen &amp;uacute;nicamente al mismo grupo. En este caso, esta regla verifica si los operadores bit a bit y los operadores l&amp;oacute;gicos est&amp;aacute;n mezclados, pero ignora todos los dem&amp;aacute;s operadores.</target>
        </trans-unit>
        <trans-unit id="b4992572eba9e898e29cdb06f84784a8f96e8a75" translate="yes" xml:space="preserve">
          <source>Now, the remote &lt;code&gt;upstream&lt;/code&gt; points to the upstream source.</source>
          <target state="translated">Ahora, el &lt;code&gt;upstream&lt;/code&gt; remoto apunta a la fuente upstream.</target>
        </trans-unit>
        <trans-unit id="8dad4f5a3bcf9c3bffdb2bf8a3903f51188938d6" translate="yes" xml:space="preserve">
          <source>Now, those variables and references have correct values in these properties.</source>
          <target state="translated">Ahora,esas variables y referencias tienen valores correctos en estas propiedades.</target>
        </trans-unit>
        <trans-unit id="b69cceaa39cc9827d135c31a0a311643f64c4242" translate="yes" xml:space="preserve">
          <source>Numbers should be written as decimal integers, e-notation integers, hexadecimal integers or floating-point decimals with at least one digit before and one digit after the decimal point. Never use octal literals.</source>
          <target state="translated">Los números deben escribirse como enteros decimales,enteros con anotación electrónica,enteros hexadecimales o decimales con punto flotante con al menos un dígito antes y un dígito después del punto decimal.Nunca se deben utilizar literales octales.</target>
        </trans-unit>
        <trans-unit id="afb8e044bcdc5720b645f5bad798ce2422b144b7" translate="yes" xml:space="preserve">
          <source>Object Getters</source>
          <target state="translated">Los buscadores de objetos</target>
        </trans-unit>
        <trans-unit id="bff5a67a67ce40c0fd925410f2eb22f8e622ed24" translate="yes" xml:space="preserve">
          <source>Object Literals</source>
          <target state="translated">Literales de objetos</target>
        </trans-unit>
        <trans-unit id="8c039bd2c30b64d60bbf9c614cffee3af09daea6" translate="yes" xml:space="preserve">
          <source>Object Rest/Spread Properties for ECMAScript</source>
          <target state="translated">Propiedades de reposo/extensión de objetos para ECMAScript</target>
        </trans-unit>
        <trans-unit id="5b78ac9af4a56a7e0611f75dde6336ad4efc93cf" translate="yes" xml:space="preserve">
          <source>Object Setters</source>
          <target state="translated">Los colocadores de objetos...</target>
        </trans-unit>
        <trans-unit id="4671b195767e872ed26e93314009bf9a02b4925b" translate="yes" xml:space="preserve">
          <source>Object initializer - MDN</source>
          <target state="translated">Inicializador de objetos-MDN</target>
        </trans-unit>
        <trans-unit id="ffa631f7811b9675c18511c35ebd3c5888d3c693" translate="yes" xml:space="preserve">
          <source>Object literal property names can be defined in two ways: using literals or using strings. For example, these two objects are equivalent:</source>
          <target state="translated">Los nombres de las propiedades literales de los objetos pueden definirse de dos maneras:usando literales o usando cadenas.Por ejemplo,estos dos objetos son equivalentes:</target>
        </trans-unit>
        <trans-unit id="01a531c72bfc336c6dd4074ad4379fdce5371193" translate="yes" xml:space="preserve">
          <source>Object literals should have the following format:</source>
          <target state="translated">Los literales de los objetos deben tener el siguiente formato:</target>
        </trans-unit>
        <trans-unit id="593c1a9b247ae9203d0656b7697e245c92cca212" translate="yes" xml:space="preserve">
          <source>Object literals.</source>
          <target state="translated">Literales de objetos.</target>
        </trans-unit>
        <trans-unit id="d0906ffdbaac63ebcdad566357ec1fa32b660ce9" translate="yes" xml:space="preserve">
          <source>Object option (when &lt;code&gt;&quot;always&quot;&lt;/code&gt;):</source>
          <target state="translated">Opci&amp;oacute;n de objeto (cuando &lt;code&gt;&quot;always&quot;&lt;/code&gt; ):</target>
        </trans-unit>
        <trans-unit id="ac9c86f6b8a7b6cb8ef56a7d1efe7d9ef0bb7e18" translate="yes" xml:space="preserve">
          <source>Object option (when &lt;code&gt;&quot;never&quot;&lt;/code&gt;):</source>
          <target state="translated">Opci&amp;oacute;n de objeto (cuando &lt;code&gt;&quot;never&quot;&lt;/code&gt; ):</target>
        </trans-unit>
        <trans-unit id="f8eb5265b464019bacbbf51d8d1ff30364921024" translate="yes" xml:space="preserve">
          <source>Object option:</source>
          <target state="translated">Opción de objeto:</target>
        </trans-unit>
        <trans-unit id="149ecb5e6d435ef3f0c0b95567c172606e31d857" translate="yes" xml:space="preserve">
          <source>Object properties follow the same naming conventions as variables. Object methods follow the same naming conventions as functions. If a property or method is meant to be private, then it should be prefixed with an underscore character.</source>
          <target state="translated">Las propiedades de los objetos siguen las mismas convenciones de denominación que las variables.Los métodos de los objetos siguen las mismas convenciones de denominación que las funciones.Si una propiedad o método está destinado a ser privado,entonces debe ser precedido por un carácter de subrayado.</target>
        </trans-unit>
        <trans-unit id="07cc26cad16fa208535abacfadeea81f2c8f08d7" translate="yes" xml:space="preserve">
          <source>Object properties for variants of the &lt;code&gt;&quot;as-needed&quot;&lt;/code&gt; option:</source>
          <target state="translated">Propiedades de objeto para variantes de la opci&amp;oacute;n &lt;code&gt;&quot;as-needed&quot;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="c4dfaa986b5d14c627c83c972171a7941c5b7be6" translate="yes" xml:space="preserve">
          <source>Object rest/spread is now an official part of the JavaScript language, so our support for it is no longer experimental. In both ESLint v4 and ESLint v5, object rest/spread can now be enabled with the &lt;code&gt;&quot;ecmaVersion&quot;: 2018&lt;/code&gt; option:</source>
          <target state="translated">Object rest / spread ahora es una parte oficial del lenguaje JavaScript, por lo que nuestro soporte ya no es experimental. Tanto en ESLint v4 como en ESLint v5, el reposo / propagaci&amp;oacute;n de objetos ahora se puede habilitar con la &lt;code&gt;&quot;ecmaVersion&quot;: 2018&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="11a92c8196539fdab3857b1551dea0f331c775a8" translate="yes" xml:space="preserve">
          <source>Object.getPrototypeOf</source>
          <target state="translated">Object.getPrototypeOf</target>
        </trans-unit>
        <trans-unit id="fa8ae9f7df131e038e636e584d189c8515f58a8c" translate="yes" xml:space="preserve">
          <source>ObjectExpression</source>
          <target state="translated">ObjectExpression</target>
        </trans-unit>
        <trans-unit id="793061db282a75e8ed5dcc678e2f977602f536e5" translate="yes" xml:space="preserve">
          <source>ObjectExpression and ObjectPattern</source>
          <target state="translated">ObjectExpression y ObjectPattern</target>
        </trans-unit>
        <trans-unit id="72a83add2c5ede877c10d23f302d3e17accbadab" translate="yes" xml:space="preserve">
          <source>Objects</source>
          <target state="translated">Objects</target>
        </trans-unit>
        <trans-unit id="79c19740aba487d5c36feef2d71ebeab770748e7" translate="yes" xml:space="preserve">
          <source>Occasionally, a core ESLint rule needs to be changed. This is not necessarily a bug, but rather, an enhancement that makes a rule more configurable. In those situations, we will consider making changes to rules.</source>
          <target state="translated">Ocasionalmente,una regla básica de ESLint debe ser cambiada.Esto no es necesariamente un error,sino más bien una mejora que hace que una regla sea más configurable.En esas situaciones,consideraremos hacer cambios a las reglas.</target>
        </trans-unit>
        <trans-unit id="503c1e8b34ff2b306e45ab8d949857759bce53e9" translate="yes" xml:space="preserve">
          <source>Octal literals are numerals that begin with a leading zero, such as:</source>
          <target state="translated">Los literales octales son números que comienzan con un cero inicial,como:</target>
        </trans-unit>
        <trans-unit id="5270a8f48af0485d13759bcff94f40182ae7fbe6" translate="yes" xml:space="preserve">
          <source>Of course, you could also have a style guide that disallows spaces around keywords.</source>
          <target state="translated">Por supuesto,también podrías tener una guía de estilo que no permita espacios alrededor de las palabras clave.</target>
        </trans-unit>
        <trans-unit id="1125ca598816239bf6b761a79b64ee161ec9a9d7" translate="yes" xml:space="preserve">
          <source>Of course, you could also have a style guide that disallows spaces before keywords.</source>
          <target state="translated">Por supuesto,también podrías tener una guía de estilo que no permita espacios antes de las palabras clave.</target>
        </trans-unit>
        <trans-unit id="c141537fefa1f7236bb95371a0c1823cf3d5a82a" translate="yes" xml:space="preserve">
          <source>Of particular note is that like &lt;code&gt;.gitignore&lt;/code&gt; files, all paths used as patterns for both &lt;code&gt;.eslintignore&lt;/code&gt; and &lt;code&gt;--ignore-pattern&lt;/code&gt; must use forward slashes as their path separators.</source>
          <target state="translated">Es de destacar que, al igual que los archivos &lt;code&gt;.gitignore&lt;/code&gt; , todas las rutas utilizadas como patrones tanto para &lt;code&gt;.eslintignore&lt;/code&gt; como para &lt;code&gt;--ignore-pattern&lt;/code&gt; deben usar barras inclinadas como separadores de ruta.</target>
        </trans-unit>
        <trans-unit id="051c540be9962a7623f661578a805c175aaad210" translate="yes" xml:space="preserve">
          <source>On a separate line, describing the code beneath it.</source>
          <target state="translated">En una línea separada,describiendo el código que hay debajo.</target>
        </trans-unit>
        <trans-unit id="41a98baf04faa90e085c1d5b39d3f2303b09a371" translate="yes" xml:space="preserve">
          <source>On multiple lines, to comment out sections of code.</source>
          <target state="translated">En múltiples líneas,para comentar secciones del código.</target>
        </trans-unit>
        <trans-unit id="dd6bc408351897c37ede1ee1ad09032dd8381b52" translate="yes" xml:space="preserve">
          <source>On the first line, the JavaScript engine will automatically insert a semicolon, so this is not considered a syntax error. The JavaScript engine still knows how to interpret the line and knows that the line end indicates the end of the statement.</source>
          <target state="translated">En la primera línea,el motor de JavaScript insertará automáticamente un punto y coma,por lo que no se considera un error de sintaxis.El motor de JavaScript todavía sabe cómo interpretar la línea y sabe que el final de la línea indica el final de la declaración.</target>
        </trans-unit>
        <trans-unit id="be62b8888255b7d5db97a2146275b0a473a3cd7f" translate="yes" xml:space="preserve">
          <source>On the other hand, if the code is targeting only ES5-compliant environments passing the radix &lt;code&gt;10&lt;/code&gt; may be redundant. In such a case you might want to disallow using such a radix.</source>
          <target state="translated">Por otro lado, si el c&amp;oacute;digo est&amp;aacute; dirigido solo a entornos que cumplen con ES5, pasar el radix &lt;code&gt;10&lt;/code&gt; puede ser redundante. En tal caso, es posible que desee no permitir el uso de dicha base.</target>
        </trans-unit>
        <trans-unit id="54325008781cc6962735603ca0f94ac6486bda16" translate="yes" xml:space="preserve">
          <source>On the other side of the argument are those who say that since semicolons are inserted automatically, they are optional and do not need to be inserted manually. However, the ASI mechanism can also be tricky to people who don't use semicolons. For example, consider this code:</source>
          <target state="translated">En el otro lado del argumento están los que dicen que como los punto y coma se insertan automáticamente,son opcionales y no es necesario insertarlos manualmente.Sin embargo,el mecanismo de ASI también puede ser complicado para las personas que no usan punto y coma.Por ejemplo,considere este código:</target>
        </trans-unit>
        <trans-unit id="96134602d9113347d1bc859098545b8dd3e69676" translate="yes" xml:space="preserve">
          <source>Once again, the intent here is to show that the developer intended for there to be no default behavior.</source>
          <target state="translated">Una vez más,la intención aquí es mostrar que el desarrollador pretendía que no hubiera un comportamiento predeterminado.</target>
        </trans-unit>
        <trans-unit id="c1de3fc4cbdd3e50999095504fb8e328eb84c3d2" translate="yes" xml:space="preserve">
          <source>Once npm is installed, run the following</source>
          <target state="translated">Una vez instalado el npm,ejecute lo siguiente</target>
        </trans-unit>
        <trans-unit id="c04fc496076254cace10e1520cd55bfc500cbbe1" translate="yes" xml:space="preserve">
          <source>Once the AST is available, &lt;code&gt;estraverse&lt;/code&gt; is used to traverse the AST from top to bottom. At each node, the &lt;code&gt;Linter&lt;/code&gt; object emits an event that has the same name as the node type (i.e., &quot;Identifier&quot;, &quot;WithStatement&quot;, etc.). On the way back up the subtree, an event is emitted with the AST type name and suffixed with &quot;:exit&quot;, such as &quot;Identifier:exit&quot; - this allows rules to take action both on the way down and on the way up in the traversal. Each event is emitted with the appropriate AST node available.</source>
          <target state="translated">Una vez que el AST est&amp;aacute; disponible, &lt;code&gt;estraverse&lt;/code&gt; se utiliza para atravesar el AST de arriba a abajo. En cada nodo, el objeto &lt;code&gt;Linter&lt;/code&gt; emite un evento que tiene el mismo nombre que el tipo de nodo (es decir, &quot;Identificador&quot;, &quot;WithStatement&quot;, etc.). En el camino de regreso al sub&amp;aacute;rbol, se emite un evento con el nombre del tipo AST y el sufijo &quot;: salida&quot;, como &quot;Identificador: salida&quot; - esto permite que las reglas act&amp;uacute;en tanto en el camino hacia abajo como hacia arriba en el recorrido. Cada evento se emite con el nodo AST apropiado disponible.</target>
        </trans-unit>
        <trans-unit id="64e40e04906a03b72ac5f6ed6329c5032886299c" translate="yes" xml:space="preserve">
          <source>Once you get a report object, it's up to you to determine how to output the results. Fixes will not be automatically applied to the files, even if you set &lt;code&gt;fix: true&lt;/code&gt; when constructing the &lt;code&gt;CLIEngine&lt;/code&gt; instance. To apply fixes to the files, call &lt;a href=&quot;#cliengineoutputfixes&quot;&gt;&lt;code&gt;outputFixes&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Una vez que obtenga un objeto de informe, depende de usted determinar c&amp;oacute;mo generar los resultados. Las correcciones no se aplicar&amp;aacute;n autom&amp;aacute;ticamente a los archivos, incluso si establece &lt;code&gt;fix: true&lt;/code&gt; al construir la instancia de &lt;code&gt;CLIEngine&lt;/code&gt; . Para aplicar arreglos a los archivos, llame a &lt;a href=&quot;#cliengineoutputfixes&quot;&gt; &lt;code&gt;outputFixes&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b58e4b61287e965d92e76370ea203cbb83aba778" translate="yes" xml:space="preserve">
          <source>Once you have a local copy and have Node.JS and npm installed, you'll need to install the ESLint dependencies:</source>
          <target state="translated">Una vez que tengas una copia local y tengas instalado Node.JS y npm,necesitarás instalar las dependencias de ESLint:</target>
        </trans-unit>
        <trans-unit id="e7288581c9fd0f9fb86a36a0098329661fafddf0" translate="yes" xml:space="preserve">
          <source>Once you have an instance of &lt;code&gt;SourceCode&lt;/code&gt;, you can use the methods on it to work with the code:</source>
          <target state="translated">Una vez que tenga una instancia de &lt;code&gt;SourceCode&lt;/code&gt; , puede usar los m&amp;eacute;todos en ella para trabajar con el c&amp;oacute;digo:</target>
        </trans-unit>
        <trans-unit id="c35dc0ae3fcf2f907c56b8a61b2d1c1013797195" translate="yes" xml:space="preserve">
          <source>Once you have the configuration information, you can pass it into the &lt;code&gt;linter&lt;/code&gt; object:</source>
          <target state="translated">Una vez que tenga la informaci&amp;oacute;n de configuraci&amp;oacute;n, puede pasarla al objeto &lt;code&gt;linter&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="b5819a1bbc0e4af2eebf7583e7e5176671549350" translate="yes" xml:space="preserve">
          <source>Once you have your development environment installed, you can make and submit changes to the ESLint source files. Doing this successfully requires careful adherence to our &lt;a href=&quot;contributing/pull-requests&quot;&gt;pull-request submission workflow&lt;/a&gt;.</source>
          <target state="translated">Una vez que haya instalado su entorno de desarrollo, puede realizar y enviar cambios a los archivos fuente de ESLint. Hacer esto con &amp;eacute;xito requiere un cuidadoso cumplimiento de nuestro &lt;a href=&quot;contributing/pull-requests&quot;&gt;flujo de trabajo de env&amp;iacute;o de solicitudes de extracci&amp;oacute;n&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="df1fc06bd4ba0916a355e415a08d9ac385fc744f" translate="yes" xml:space="preserve">
          <source>Once you've cloned the repository, run &lt;code&gt;npm install&lt;/code&gt; to get all the necessary dependencies:</source>
          <target state="translated">Una vez que haya clonado el repositorio, ejecute &lt;code&gt;npm install&lt;/code&gt; para obtener todas las dependencias necesarias:</target>
        </trans-unit>
        <trans-unit id="a952bd0499233ed62352245dbdd816bb714cb93a" translate="yes" xml:space="preserve">
          <source>Once you've got ESLint running, you'll probably want to adjust the configuration to better suit your project. This section explains all the different ways you can configure ESLint.</source>
          <target state="translated">Una vez que tengas ESLint funcionando,probablemente querrás ajustar la configuración para que se adapte mejor a tu proyecto.Esta sección explica todas las diferentes maneras en que puedes configurar ESLint.</target>
        </trans-unit>
        <trans-unit id="80320c8df4e958c73560fc248b42aa546a052559" translate="yes" xml:space="preserve">
          <source>Once you've made changes that you want to share with the community, the next step is to submit those changes back via a pull request.</source>
          <target state="translated">Una vez que has hecho los cambios que quieres compartir con la comunidad,el siguiente paso es enviar esos cambios de nuevo a través de una solicitud de extracción.</target>
        </trans-unit>
        <trans-unit id="73e73f412681c6b3c636b32c5dd0a954ee56c9f0" translate="yes" xml:space="preserve">
          <source>Once your pull request is sent, it's time for the team to review it. As such, please make sure to:</source>
          <target state="translated">Una vez que su solicitud de extracción sea enviada,es hora de que el equipo la revise.Como tal,por favor asegúrese de hacerlo:</target>
        </trans-unit>
        <trans-unit id="461bb8bc5f902440c44a097ed81d4ff591b9129d" translate="yes" xml:space="preserve">
          <source>Once your shareable config is ready, you can &lt;a href=&quot;https://docs.npmjs.com/getting-started/publishing-npm-packages&quot;&gt;publish to npm&lt;/a&gt; to share with others. We recommend using the &lt;code&gt;eslint&lt;/code&gt; and &lt;code&gt;eslintconfig&lt;/code&gt; keywords so others can easily find your module.</source>
          <target state="translated">Una vez que su configuraci&amp;oacute;n para compartir est&amp;eacute; lista, puede &lt;a href=&quot;https://docs.npmjs.com/getting-started/publishing-npm-packages&quot;&gt;publicarla en npm&lt;/a&gt; para compartirla con otros. Recomendamos utilizar las palabras clave &lt;code&gt;eslint&lt;/code&gt; y &lt;code&gt;eslintconfig&lt;/code&gt; para que otros puedan encontrar f&amp;aacute;cilmente su m&amp;oacute;dulo.</target>
        </trans-unit>
        <trans-unit id="968cb18b99b4f357f4169659789d6d35558a5b6b" translate="yes" xml:space="preserve">
          <source>One blank line should always be used in the following circumstances:</source>
          <target state="translated">Siempre se debe utilizar una línea en blanco en las siguientes circunstancias:</target>
        </trans-unit>
        <trans-unit id="6e05f3f48106cca4c55183384c239e9f6781eecf" translate="yes" xml:space="preserve">
          <source>One common variant of one true brace style is called Stroustrup, in which the &lt;code&gt;else&lt;/code&gt; statements in an &lt;code&gt;if-else&lt;/code&gt; construct, as well as &lt;code&gt;catch&lt;/code&gt; and &lt;code&gt;finally&lt;/code&gt;, must be on its own line after the preceding closing brace. For example:</source>
          <target state="translated">Una variante com&amp;uacute;n de un estilo de llave verdadero se llama Stroustrup, en la que las declaraciones &lt;code&gt;else&lt;/code&gt; en una construcci&amp;oacute;n &lt;code&gt;if-else&lt;/code&gt; , as&amp;iacute; como &lt;code&gt;catch&lt;/code&gt; y &lt;code&gt;finally&lt;/code&gt; , deben estar en su propia l&amp;iacute;nea despu&amp;eacute;s de la llave de cierre anterior. Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="074902a0b6265654f7818885f2c699f282da2808" translate="yes" xml:space="preserve">
          <source>One key is &lt;code&gt;VariableDeclarator&lt;/code&gt; and the other is &lt;code&gt;AssignmentExpression&lt;/code&gt;, which can be used to control the destructuring requirement for each of those types independently. Each property accepts an object that accepts two properties, &lt;code&gt;array&lt;/code&gt; and &lt;code&gt;object&lt;/code&gt;, which can be used to control the destructuring requirement for each of &lt;code&gt;array&lt;/code&gt; and &lt;code&gt;object&lt;/code&gt; independently for variable declarations and assignment expressions. By default, &lt;code&gt;array&lt;/code&gt; and &lt;code&gt;object&lt;/code&gt; are set to true for both &lt;code&gt;VariableDeclarator&lt;/code&gt; and &lt;code&gt;AssignmentExpression&lt;/code&gt;.</source>
          <target state="translated">Una clave es &lt;code&gt;VariableDeclarator&lt;/code&gt; y la otra es &lt;code&gt;AssignmentExpression&lt;/code&gt; , que se puede utilizar para controlar el requisito de desestructuraci&amp;oacute;n para cada uno de esos tipos de forma independiente. Cada propiedad acepta un objeto que acepta dos propiedades, &lt;code&gt;array&lt;/code&gt; y &lt;code&gt;object&lt;/code&gt; , que se pueden usar para controlar el requisito de desestructuraci&amp;oacute;n para cada &lt;code&gt;array&lt;/code&gt; y &lt;code&gt;object&lt;/code&gt; independiente para declaraciones de variables y expresiones de asignaci&amp;oacute;n. De forma predeterminada, la &lt;code&gt;array&lt;/code&gt; y el &lt;code&gt;object&lt;/code&gt; se establecen en verdadero para &lt;code&gt;VariableDeclarator&lt;/code&gt; y &lt;code&gt;AssignmentExpression&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7b40cc8090e56f00ece04fc448cb76c1a5545421" translate="yes" xml:space="preserve">
          <source>One of benefits of this option is that it prevents the incorrect use of arrow functions in conditionals:</source>
          <target state="translated">Una de las ventajas de esta opción es que evita el uso incorrecto de las funciones de flecha en los condicionales:</target>
        </trans-unit>
        <trans-unit id="93a084e0710ce98d42a3b6895d5f4238168d8a76" translate="yes" xml:space="preserve">
          <source>One of the great things about open source projects is that anyone can contribute in any number of meaningful ways. ESLint couldn't exist without the help of the many contributors it's had since the project began, and we want you to feel like you can contribute and make a difference as well.</source>
          <target state="translated">Una de las grandes cosas de los proyectos de código abierto es que cualquiera puede contribuir en cualquier número de formas significativas.ESLint no podría existir sin la ayuda de los muchos contribuyentes que ha tenido desde que el proyecto comenzó,y queremos que sientas que puedes contribuir y hacer una diferencia también.</target>
        </trans-unit>
        <trans-unit id="8fe321b030cabb7b6a56d2b3c7ba46379fd8d541" translate="yes" xml:space="preserve">
          <source>One of the interesting, and sometimes confusing, aspects of JavaScript is that assignment can happen at almost any point. Because of this, an errant equals sign can end up causing assignment when the true intent was to do a comparison. This is especially true when using a &lt;code&gt;return&lt;/code&gt; statement. For example:</source>
          <target state="translated">Uno de los aspectos interesantes, ya veces confusos, de JavaScript es que la asignaci&amp;oacute;n puede ocurrir en casi cualquier momento. Debido a esto, un signo igual errante puede terminar causando una asignaci&amp;oacute;n cuando la verdadera intenci&amp;oacute;n era hacer una comparaci&amp;oacute;n. Esto es especialmente cierto cuando se usa una declaraci&amp;oacute;n de &lt;code&gt;return&lt;/code&gt; . Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="dc2c724cf22353a00eb4d8e0b5ec68baf78eb5ec" translate="yes" xml:space="preserve">
          <source>One of the justifications for using Comma First style is that it can help track missing and trailing commas. These are problematic because missing commas in variable declarations can lead to the leakage of global variables and trailing commas can lead to errors in older versions of IE.</source>
          <target state="translated">Una de las justificaciones para usar el estilo de Coma Primero es que puede ayudar a rastrear las comas perdidas y las que quedan.Esto es problemático porque las comas perdidas en las declaraciones de las variables pueden llevar a la fuga de variables globales y las comas finales pueden llevar a errores en las versiones antiguas de IE.</target>
        </trans-unit>
        <trans-unit id="43739dc5f4290e33b069d3cbfc858a0190a0b218" translate="yes" xml:space="preserve">
          <source>One way to fix this issue would be to ensure that &lt;code&gt;totalLength&lt;/code&gt; is read at the same time as it's updated, like this:</source>
          <target state="translated">Una forma de solucionar este problema ser&amp;iacute;a asegurarse de que &lt;code&gt;totalLength&lt;/code&gt; se lea al mismo tiempo que se actualiza, as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="82d457ac979b2d749bfa1fff14b37ecb16e90d1f" translate="yes" xml:space="preserve">
          <source>Only &lt;code&gt;return&lt;/code&gt; without a value is allowed, as it's a control flow statement.</source>
          <target state="translated">Solo se permite la &lt;code&gt;return&lt;/code&gt; sin un valor, ya que es una declaraci&amp;oacute;n de flujo de control.</target>
        </trans-unit>
        <trans-unit id="865b1b6e5f709be37accdd161c63ae845508b783" translate="yes" xml:space="preserve">
          <source>Only make one fix per message. This is enforced because you must return the result of the fixer operation from &lt;code&gt;fix()&lt;/code&gt;.</source>
          <target state="translated">Solo haga una correcci&amp;oacute;n por mensaje. Esto se aplica porque debe devolver el resultado de la operaci&amp;oacute;n del reparador de &lt;code&gt;fix()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="651a50a7f66b3213d4ddbca3f4a04a538e94dae9" translate="yes" xml:space="preserve">
          <source>Only the &lt;code&gt;Property&lt;/code&gt; node type is ignored by default, because for the &lt;a href=&quot;key-spacing&quot;&gt;key-spacing&lt;/a&gt; rule some alignment options require multiple spaces in properties of object literals.</source>
          <target state="translated">Solo el tipo de nodo &lt;code&gt;Property&lt;/code&gt; se ignora de forma predeterminada, porque para la regla de &lt;a href=&quot;key-spacing&quot;&gt;espaciado de teclas,&lt;/a&gt; algunas opciones de alineaci&amp;oacute;n requieren varios espacios en las propiedades de los objetos literales.</target>
        </trans-unit>
        <trans-unit id="29e0482fd1761fdd60ab2cbaa6f30278bf01c57e" translate="yes" xml:space="preserve">
          <source>Open up developer tools</source>
          <target state="translated">Abrir las herramientas de desarrollo</target>
        </trans-unit>
        <trans-unit id="528fa3274e8f2faac58c536989703b2a7691898b" translate="yes" xml:space="preserve">
          <source>Operator Spacing</source>
          <target state="translated">Espacio para el operador</target>
        </trans-unit>
        <trans-unit id="f31ac1bc0518dff16e20d2bee973046b839b0d11" translate="yes" xml:space="preserve">
          <source>Operators with two operands must be preceded and followed by a single space to make the expression clear. Operators include assignments and logical operators.</source>
          <target state="translated">Los operadores con dos operandos deben ser precedidos y seguidos por un solo espacio para que la expresión sea clara.Los operadores incluyen asignaciones y operadores lógicos.</target>
        </trans-unit>
        <trans-unit id="5cf9f8318f166d81f0832974953640e35cb76c75" translate="yes" xml:space="preserve">
          <source>Opponents of Yoda conditions point out that tooling has made us better programmers because tools will catch the mistaken use of &lt;code&gt;=&lt;/code&gt; instead of &lt;code&gt;==&lt;/code&gt; (ESLint will catch this for you). Therefore, they argue, the utility of the pattern doesn't outweigh the readability hit the code takes while using Yoda conditions.</source>
          <target state="translated">Quienes se oponen a las condiciones de Yoda se&amp;ntilde;alan que las herramientas nos han convertido en mejores programadores porque las herramientas detectar&amp;aacute;n el uso err&amp;oacute;neo de &lt;code&gt;=&lt;/code&gt; en lugar de &lt;code&gt;==&lt;/code&gt; (ESLint detectar&amp;aacute; esto por usted). Por lo tanto, argumentan, la utilidad del patr&amp;oacute;n no supera la legibilidad que toma el c&amp;oacute;digo al usar las condiciones de Yoda.</target>
        </trans-unit>
        <trans-unit id="cc2f1a7f94147f105a8901b8c9bb3f24406fa1ff" translate="yes" xml:space="preserve">
          <source>Optional Exception</source>
          <target state="translated">Excepción opcional</target>
        </trans-unit>
        <trans-unit id="4f2085951383e2cdbc090c9683b06731c8ef7ac4" translate="yes" xml:space="preserve">
          <source>Optionally, this rule can also enforce consistent order (&lt;code&gt;getBeforeSet&lt;/code&gt; or &lt;code&gt;setBeforeGet&lt;/code&gt;).</source>
          <target state="translated">Opcionalmente, esta regla tambi&amp;eacute;n puede imponer un orden coherente ( &lt;code&gt;getBeforeSet&lt;/code&gt; o &lt;code&gt;setBeforeGet&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="3f583032cbdd550a2873302394f975358318e3c2" translate="yes" xml:space="preserve">
          <source>Optionally, you may specify a &lt;code&gt;max&lt;/code&gt; object property:</source>
          <target state="translated">Opcionalmente, puede especificar una propiedad de objeto &lt;code&gt;max&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="6bf5da9c080bee3a8142586c412aa39971137eee" translate="yes" xml:space="preserve">
          <source>Options</source>
          <target state="translated">Options</target>
        </trans-unit>
        <trans-unit id="babf5970a0d99737bb086b6569f51b231437e499" translate="yes" xml:space="preserve">
          <source>Options Schemas</source>
          <target state="translated">Esquemas de opciones</target>
        </trans-unit>
        <trans-unit id="125e188e5c535aba49305bcd42d96422853718e3" translate="yes" xml:space="preserve">
          <source>Options that accept array values can be specified by repeating the option or with a comma-delimited list (other than &lt;code&gt;--ignore-pattern&lt;/code&gt; which does not allow the second style).</source>
          <target state="translated">Las opciones que aceptan valores de matriz se pueden especificar repitiendo la opci&amp;oacute;n o con una lista delimitada por comas (que no sea &lt;code&gt;--ignore-pattern&lt;/code&gt; , que no permite el segundo estilo).</target>
        </trans-unit>
        <trans-unit id="cc6d4354c518051842952b8b24cff75c301ac9bd" translate="yes" xml:space="preserve">
          <source>Or an object option (Requires line breaks if any of properties is satisfied. Otherwise, disallows line breaks):</source>
          <target state="translated">O una opción de objeto (Requiere saltos de línea si alguna de las propiedades se satisface.De lo contrario,no se permiten los saltos de línea):</target>
        </trans-unit>
        <trans-unit id="48fb5dcfee6b391a00a0d645f582f3d72542e395" translate="yes" xml:space="preserve">
          <source>Or an object option:</source>
          <target state="translated">O una opción de objeto:</target>
        </trans-unit>
        <trans-unit id="8e04bc60d27598107203a60a335ed572e88264d3" translate="yes" xml:space="preserve">
          <source>Or for non-iterable 'array-like' objects:</source>
          <target state="translated">O para los objetos no literarios de tipo &quot;array&quot;:</target>
        </trans-unit>
        <trans-unit id="8b117f5f38fcd06ba55849762c28b3c6a4df0d38" translate="yes" xml:space="preserve">
          <source>Or for tabbed indentation:</source>
          <target state="translated">O para la hendidura con lengüetas:</target>
        </trans-unit>
        <trans-unit id="534b36ed6d3baf1cd0fb88cab59bd33364f67414" translate="yes" xml:space="preserve">
          <source>Or in a &lt;code&gt;package.json&lt;/code&gt; file</source>
          <target state="translated">O en un archivo &lt;code&gt;package.json&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="983504f1db047b4a14f090593364eea27f5c86b0" translate="yes" xml:space="preserve">
          <source>Or you can enforce that calls to &lt;code&gt;setTimeout&lt;/code&gt; always have two arguments:</source>
          <target state="translated">O puede exigir que las llamadas a &lt;code&gt;setTimeout&lt;/code&gt; siempre tengan dos argumentos:</target>
        </trans-unit>
        <trans-unit id="2349626c15ba88b850dda985180df347efff61da" translate="yes" xml:space="preserve">
          <source>Originally, &lt;code&gt;Variable&lt;/code&gt; objects and &lt;code&gt;Reference&lt;/code&gt; objects refer each other:</source>
          <target state="translated">Originalmente, los objetos &lt;code&gt;Variable&lt;/code&gt; y los objetos de &lt;code&gt;Reference&lt;/code&gt; se refieren entre s&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="0c7f2d70c0ac6c087885c2e18648286544190997" translate="yes" xml:space="preserve">
          <source>Other Integration Lists</source>
          <target state="translated">Otras listas de integración</target>
        </trans-unit>
        <trans-unit id="121423f7955be6f99034dbe35e9109d534d3bb31" translate="yes" xml:space="preserve">
          <source>Other code conventions allow you to skip the &lt;code&gt;default&lt;/code&gt; case so long as there is a comment indicating the omission is intentional, such as:</source>
          <target state="translated">Otras convenciones de c&amp;oacute;digo le permiten omitir el caso &lt;code&gt;default&lt;/code&gt; siempre que haya un comentario que indique que la omisi&amp;oacute;n es intencional, como:</target>
        </trans-unit>
        <trans-unit id="c413664d095ba6eda32b2e5180bd3f63ad775b0e" translate="yes" xml:space="preserve">
          <source>Others prefer to declare one var per line.</source>
          <target state="translated">Otros prefieren declarar una varilla por línea.</target>
        </trans-unit>
        <trans-unit id="777e3867f41cdcbbc95d8a27831735e4439631d1" translate="yes" xml:space="preserve">
          <source>Otherwise are considered problems.</source>
          <target state="translated">De lo contrario,se consideran problemas.</target>
        </trans-unit>
        <trans-unit id="8f226c4b9fa003489fea8332ce25c85c4ade2f50" translate="yes" xml:space="preserve">
          <source>Otherwise the &lt;code&gt;&quot;safe&quot;&lt;/code&gt; option corresponds to the &lt;code&gt;&quot;function&quot;&lt;/code&gt; option. Note that if &lt;code&gt;&quot;globalReturn&quot;: false&lt;/code&gt; is explicitly specified in the configuration, the &lt;code&gt;&quot;safe&quot;&lt;/code&gt; option will correspond to the &lt;code&gt;&quot;function&quot;&lt;/code&gt; option regardless of the specified environment.</source>
          <target state="translated">De lo contrario, la opci&amp;oacute;n &lt;code&gt;&quot;safe&quot;&lt;/code&gt; corresponde a la opci&amp;oacute;n &lt;code&gt;&quot;function&quot;&lt;/code&gt; . Tenga en cuenta que si &lt;code&gt;&quot;globalReturn&quot;: false&lt;/code&gt; se especifica expl&amp;iacute;citamente en la configuraci&amp;oacute;n, la opci&amp;oacute;n &lt;code&gt;&quot;safe&quot;&lt;/code&gt; corresponder&amp;aacute; a la opci&amp;oacute;n &lt;code&gt;&quot;function&quot;&lt;/code&gt; independientemente del entorno especificado.</target>
        </trans-unit>
        <trans-unit id="0b2741d82e791a60bad1a8621fcdbf97b20d60b3" translate="yes" xml:space="preserve">
          <source>Otherwise, &lt;code&gt;RuleTester#run&lt;/code&gt; will simply execute all of the tests in sequence, and will throw an error if one of them fails. This means you can simply execute a test file that calls &lt;code&gt;RuleTester.run&lt;/code&gt; using &lt;code&gt;node&lt;/code&gt;, without needing a testing framework.</source>
          <target state="translated">De lo contrario, &lt;code&gt;RuleTester#run&lt;/code&gt; simplemente ejecutar&amp;aacute; todas las pruebas en secuencia y arrojar&amp;aacute; un error si una de ellas falla. Esto significa que puede simplemente ejecutar un archivo de prueba que llame a &lt;code&gt;RuleTester.run&lt;/code&gt; usando &lt;code&gt;node&lt;/code&gt; , sin necesidad de un marco de prueba.</target>
        </trans-unit>
        <trans-unit id="da453deb49d685f98fdc9eee6730a3db89861b4f" translate="yes" xml:space="preserve">
          <source>Otherwise, if &lt;code&gt;describe&lt;/code&gt; and &lt;code&gt;it&lt;/code&gt; are present as globals, &lt;code&gt;RuleTester&lt;/code&gt; will use &lt;code&gt;global.describe&lt;/code&gt; and &lt;code&gt;global.it&lt;/code&gt; to run tests. This allows &lt;code&gt;RuleTester&lt;/code&gt; to work when using frameworks like &lt;a href=&quot;https://mochajs.org/&quot;&gt;Mocha&lt;/a&gt; without any additional configuration.</source>
          <target state="translated">De lo contrario, si &lt;code&gt;describe&lt;/code&gt; y &lt;code&gt;it&lt;/code&gt; est&amp;aacute;n presentes como globales, &lt;code&gt;RuleTester&lt;/code&gt; utilizar&amp;aacute; &lt;code&gt;global.describe&lt;/code&gt; y &lt;code&gt;global.it&lt;/code&gt; para ejecutar las pruebas. Esto permite que &lt;code&gt;RuleTester&lt;/code&gt; funcione cuando se utilizan marcos como &lt;a href=&quot;https://mochajs.org/&quot;&gt;Mocha&lt;/a&gt; sin ninguna configuraci&amp;oacute;n adicional.</target>
        </trans-unit>
        <trans-unit id="f111dde36a2183fb8b31d84bb35478c7ad28ae40" translate="yes" xml:space="preserve">
          <source>Otherwise, if the node does not declare any variables, an empty array is returned.</source>
          <target state="translated">De lo contrario,si el nodo no declara ninguna variable,se devuelve una matriz vacía.</target>
        </trans-unit>
        <trans-unit id="112f84fde1efd0a6b137f4ef4aeed3c549b08bd5" translate="yes" xml:space="preserve">
          <source>Our commit message format is as follows:</source>
          <target state="translated">El formato de nuestro mensaje de confirmación es el siguiente:</target>
        </trans-unit>
        <trans-unit id="874ef7e39663f7db82348ed922daa965002f8637" translate="yes" xml:space="preserve">
          <source>Our public &lt;a href=&quot;https://github.com/eslint/eslint/issues&quot;&gt;issues tracker&lt;/a&gt; lists all of the things we plan on doing as well as suggestions from the community. Before starting to work on an issue, be sure you read through the rest of this page.</source>
          <target state="translated">Nuestro &lt;a href=&quot;https://github.com/eslint/eslint/issues&quot;&gt;rastreador de problemas&lt;/a&gt; p&amp;uacute;blicos enumera todas las cosas que planeamos hacer, as&amp;iacute; como las sugerencias de la comunidad. Antes de comenzar a trabajar en un problema, aseg&amp;uacute;rese de leer el resto de esta p&amp;aacute;gina.</target>
        </trans-unit>
        <trans-unit id="4bed336194a9a5c86b6a734f03b3570d2aae1a68" translate="yes" xml:space="preserve">
          <source>Output</source>
          <target state="translated">Output</target>
        </trans-unit>
        <trans-unit id="50d578ebf4e00d8649eb4f95a59bf792edcd3b16" translate="yes" xml:space="preserve">
          <source>Output Examples</source>
          <target state="translated">Ejemplos de salida</target>
        </trans-unit>
        <trans-unit id="f721699fc008a02ac10d406435648374991b8df2" translate="yes" xml:space="preserve">
          <source>Output object from this method:</source>
          <target state="translated">Objeto de salida de este método:</target>
        </trans-unit>
        <trans-unit id="2ae3c877f13160bf4fb915afd2aa35c94e464b88" translate="yes" xml:space="preserve">
          <source>Output to the console</source>
          <target state="translated">Salida a la consola</target>
        </trans-unit>
        <trans-unit id="afb6b4b6cae2618f58f61a3533c0fccfc233090f" translate="yes" xml:space="preserve">
          <source>Outputting to the console</source>
          <target state="translated">La salida a la consola</target>
        </trans-unit>
        <trans-unit id="afdf6e15c0ce33e13907329dd18f3fa61951053c" translate="yes" xml:space="preserve">
          <source>Outputting to the filesystem</source>
          <target state="translated">La salida al sistema de archivos</target>
        </trans-unit>
        <trans-unit id="744acdca9924738f6ba20a057659f4dab8956cfb" translate="yes" xml:space="preserve">
          <source>Over the past several releases, we have been deprecating rules and introducing new rules to take their place. The following is a list of the removed rules and their replacements:</source>
          <target state="translated">En los últimos lanzamientos,hemos estado desaprobando las reglas e introduciendo nuevas reglas para tomar su lugar.La siguiente es una lista de las reglas eliminadas y sus reemplazos:</target>
        </trans-unit>
        <trans-unit id="f15e25b67d56c0b50f6e65a89912cb8c44445c60" translate="yes" xml:space="preserve">
          <source>Overall Performance</source>
          <target state="translated">Rendimiento general</target>
        </trans-unit>
        <trans-unit id="bed3eb091eb6a1e8a3c68cc9f2b8cad9f0ea7e35" translate="yes" xml:space="preserve">
          <source>Override blocks can also specify patterns to exclude from matches. If a file matches any of the excluded patterns, the configuration won't apply.</source>
          <target state="translated">Los bloques de anulación también pueden especificar patrones para excluir de las coincidencias.Si un archivo coincide con alguno de los patrones excluidos,la configuración no se aplicará.</target>
        </trans-unit>
        <trans-unit id="d65d233ad72a12dd5f816f689346ed699f068f74" translate="yes" xml:space="preserve">
          <source>Overrides in a config file can now match dotfiles</source>
          <target state="translated">Las anulaciones en un archivo de configuración pueden ahora coincidir con los archivos de puntos</target>
        </trans-unit>
        <trans-unit id="c7279b45cea6645bd003b55c34e4e0b68128806b" translate="yes" xml:space="preserve">
          <source>Overrides in an extended config file can now be overridden by a parent config file</source>
          <target state="translated">Las anulaciones en un archivo de configuración extendido pueden ahora ser anuladas por un archivo de configuración padre</target>
        </trans-unit>
        <trans-unit id="84e380bd7906ce369799455bb337baa4a7e912c3" translate="yes" xml:space="preserve">
          <source>Packaging the Custom Formatter</source>
          <target state="translated">Empaquetando el Formato Personalizado</target>
        </trans-unit>
        <trans-unit id="0a0e056314281df7ebe5bff4801d78e2bcb2e0da" translate="yes" xml:space="preserve">
          <source>Parentheses Spacing</source>
          <target state="translated">Espaciado entre paréntesis</target>
        </trans-unit>
        <trans-unit id="8b047ea57f8d4953d13e87c42cd0dfbacf8b9d4e" translate="yes" xml:space="preserve">
          <source>Passing Arguments to Formatters</source>
          <target state="translated">Pasar los argumentos a los formatos</target>
        </trans-unit>
        <trans-unit id="bbad3fbb9280e935e855b557b50f0feb18c726b1" translate="yes" xml:space="preserve">
          <source>Passing the callback by reference</source>
          <target state="translated">Pasando la llamada por referencia</target>
        </trans-unit>
        <trans-unit id="866764460d5b328ce01c5d25fea87d4f72c58d7e" translate="yes" xml:space="preserve">
          <source>Path to the cache file. If none specified &lt;code&gt;.eslintcache&lt;/code&gt; will be used. The file will be created in the directory where the &lt;code&gt;eslint&lt;/code&gt; command is executed. &lt;strong&gt;Deprecated&lt;/strong&gt;: Use &lt;code&gt;--cache-location&lt;/code&gt; instead.</source>
          <target state="translated">Ruta al archivo de cach&amp;eacute;. Si no se especifica ninguno , se utilizar&amp;aacute; &lt;code&gt;.eslintcache&lt;/code&gt; . El archivo se crear&amp;aacute; en el directorio donde se &lt;code&gt;eslint&lt;/code&gt; comando eslint . &lt;strong&gt;En desuso&lt;/strong&gt; : use &lt;code&gt;--cache-location&lt;/code&gt; en su lugar.</target>
        </trans-unit>
        <trans-unit id="1a4f2472b12ffd8aaa283f1912f4a749bb112a9e" translate="yes" xml:space="preserve">
          <source>Path to the cache location. Can be a file or a directory. If no location is specified, &lt;code&gt;.eslintcache&lt;/code&gt; will be used. In that case, the file will be created in the directory where the &lt;code&gt;eslint&lt;/code&gt; command is executed.</source>
          <target state="translated">Ruta a la ubicaci&amp;oacute;n de la cach&amp;eacute;. Puede ser un archivo o un directorio. Si no se especifica ninguna ubicaci&amp;oacute;n, se utilizar&amp;aacute; &lt;code&gt;.eslintcache&lt;/code&gt; . En ese caso, el archivo se crear&amp;aacute; en el directorio donde se &lt;code&gt;eslint&lt;/code&gt; comando eslint .</target>
        </trans-unit>
        <trans-unit id="9cf1a4ce359a6f23066671fb0ce9dcb0cf168d6e" translate="yes" xml:space="preserve">
          <source>Paths are relative to &lt;code&gt;.eslintignore&lt;/code&gt; location or the current working directory. This is also true of paths passed in via the &lt;code&gt;--ignore-pattern&lt;/code&gt;&lt;a href=&quot;command-line-interface#--ignore-pattern&quot;&gt;command&lt;/a&gt;.</source>
          <target state="translated">Las rutas son relativas a la ubicaci&amp;oacute;n &lt;code&gt;.eslintignore&lt;/code&gt; o al directorio de trabajo actual. Esto tambi&amp;eacute;n es cierto para las rutas que se pasan a trav&amp;eacute;s del &lt;a href=&quot;command-line-interface#--ignore-pattern&quot;&gt;comando &lt;/a&gt; &lt;code&gt;--ignore-pattern&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0493aae6aa03f23cee93bbaad9b496620e893832" translate="yes" xml:space="preserve">
          <source>Peer Dependency</source>
          <target state="translated">Dependencia de los compañeros</target>
        </trans-unit>
        <trans-unit id="d4a170a4c994882082963476d79b1a77b04c7ae7" translate="yes" xml:space="preserve">
          <source>Per-rule Performance</source>
          <target state="translated">Rendimiento por regla</target>
        </trans-unit>
        <trans-unit id="ed363adcc6ae50f9e2d44c956c484ce493017156" translate="yes" xml:space="preserve">
          <source>Perform any asynchronous operations</source>
          <target state="translated">Realizar cualquier operación asíncrona</target>
        </trans-unit>
        <trans-unit id="9b69332b09b8aef3669c8068b4744d1b0de90bdd" translate="yes" xml:space="preserve">
          <source>Performance Testing</source>
          <target state="translated">Pruebas de rendimiento</target>
        </trans-unit>
        <trans-unit id="be4da6f0c7a2438c9087ddd0f224ce1c2084f2f0" translate="yes" xml:space="preserve">
          <source>Performing an operation on each element of an iterable is a common task. However, performing an &lt;code&gt;await&lt;/code&gt; as part of each operation is an indication that the program is not taking full advantage of the parallelization benefits of &lt;code&gt;async&lt;/code&gt;/&lt;code&gt;await&lt;/code&gt;.</source>
          <target state="translated">Realizar una operaci&amp;oacute;n en cada elemento de un iterable es una tarea com&amp;uacute;n. Sin embargo, realizar una &lt;code&gt;await&lt;/code&gt; como parte de cada operaci&amp;oacute;n es una indicaci&amp;oacute;n de que el programa no est&amp;aacute; aprovechando al m&amp;aacute;ximo los beneficios de la paralelizaci&amp;oacute;n de &lt;code&gt;async&lt;/code&gt; / &lt;code&gt;await&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="95901ce3386d6d8922a77162d48436823c7874d9" translate="yes" xml:space="preserve">
          <source>Personal Configuration File (deprecated)</source>
          <target state="translated">Fichero de configuración personal (obsoleto)</target>
        </trans-unit>
        <trans-unit id="df4e75f6b932e3d5f6b66dcca11234789a64b98d" translate="yes" xml:space="preserve">
          <source>Piping Code Into ESLint</source>
          <target state="translated">El código de la tubería en ESLint</target>
        </trans-unit>
        <trans-unit id="06f50881a755583b161af4399bd829f0111ebe4f" translate="yes" xml:space="preserve">
          <source>Place all of your runtime rules in the same directory (e.g., &lt;code&gt;eslint_rules&lt;/code&gt;).</source>
          <target state="translated">Coloque todas sus reglas de tiempo de ejecuci&amp;oacute;n en el mismo directorio (por ejemplo, &lt;code&gt;eslint_rules&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="31ccc366a57c10600d02a87ddb1627ad8fcf83e4" translate="yes" xml:space="preserve">
          <source>Place all of your runtime rules in the same directory (i.e., &lt;code&gt;eslint_rules&lt;/code&gt;).</source>
          <target state="translated">Coloque todas sus reglas de tiempo de ejecuci&amp;oacute;n en el mismo directorio (es decir, &lt;code&gt;eslint_rules&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="92009e0d6a0520471a107f4e981c2e736fb0840b" translate="yes" xml:space="preserve">
          <source>Placeholders in suggestion messages</source>
          <target state="translated">Marcadores de posición en los mensajes de sugerencia</target>
        </trans-unit>
        <trans-unit id="e51396525bede24fbfd195365328421b2712f903" translate="yes" xml:space="preserve">
          <source>Please include as much detail as possible to help us properly address your issue. If we need to triage issues and constantly ask people for more detail, that's time taken away from actually fixing issues. Help us be as efficient as possible by including a lot of detail in your issues.</source>
          <target state="translated">Por favor,incluya tantos detalles como sea posible para ayudarnos a abordar adecuadamente su problema.Si tenemos que clasificar los problemas y pedir constantemente a la gente más detalles,eso es tiempo perdido para arreglar los problemas.Ayúdenos a ser tan eficientes como sea posible incluyendo muchos detalles en sus asuntos.</target>
        </trans-unit>
        <trans-unit id="cd6cb4e45c0a145bc991dcd0e8f4ab88f39165d4" translate="yes" xml:space="preserve">
          <source>Please note that supporting JSX syntax is not the same as supporting React. React applies specific semantics to JSX syntax that ESLint doesn't recognize. We recommend using &lt;a href=&quot;https://github.com/yannickcr/eslint-plugin-react&quot;&gt;eslint-plugin-react&lt;/a&gt; if you are using React and want React semantics. By the same token, supporting ES6 syntax is not the same as supporting new ES6 globals (e.g., new types such as &lt;code&gt;Set&lt;/code&gt;). For ES6 syntax, use &lt;code&gt;{ &quot;parserOptions&quot;: { &quot;ecmaVersion&quot;: 6 } }&lt;/code&gt;; for new ES6 global variables, use &lt;code&gt;{ &quot;env&quot;: { &quot;es6&quot;: true } }&lt;/code&gt;. &lt;code&gt;{ &quot;env&quot;: { &quot;es6&quot;: true } }&lt;/code&gt; enables ES6 syntax automatically, but &lt;code&gt;{ &quot;parserOptions&quot;: { &quot;ecmaVersion&quot;: 6 } }&lt;/code&gt; does not enable ES6 globals automatically. Parser options are set in your &lt;code&gt;.eslintrc.*&lt;/code&gt; file by using the &lt;code&gt;parserOptions&lt;/code&gt; property. The available options are:</source>
          <target state="translated">Tenga en cuenta que admitir la sintaxis JSX no es lo mismo que admitir React. React aplica sem&amp;aacute;ntica espec&amp;iacute;fica a la sintaxis JSX que ESLint no reconoce. Recomendamos usar &lt;a href=&quot;https://github.com/yannickcr/eslint-plugin-react&quot;&gt;eslint-plugin-react&lt;/a&gt; si est&amp;aacute; usando React y desea la sem&amp;aacute;ntica de React. Del mismo modo, admitir la sintaxis de ES6 no es lo mismo que admitir nuevos globales de ES6 (por ejemplo, nuevos tipos como &lt;code&gt;Set&lt;/code&gt; ). Para la sintaxis de ES6, use &lt;code&gt;{ &quot;parserOptions&quot;: { &quot;ecmaVersion&quot;: 6 } }&lt;/code&gt; ; para las nuevas variables globales de ES6, use &lt;code&gt;{ &quot;env&quot;: { &quot;es6&quot;: true } }&lt;/code&gt; . &lt;code&gt;{ &quot;env&quot;: { &quot;es6&quot;: true } }&lt;/code&gt; habilita la sintaxis de ES6 autom&amp;aacute;ticamente, pero &lt;code&gt;{ &quot;parserOptions&quot;: { &quot;ecmaVersion&quot;: 6 } }&lt;/code&gt; no habilita los globales de ES6 autom&amp;aacute;ticamente.Las opciones del analizador se establecen en su &lt;code&gt;.eslintrc.*&lt;/code&gt; archivo utilizando la propiedad &lt;code&gt;parserOptions&lt;/code&gt; . Las opciones disponibles son:</target>
        </trans-unit>
        <trans-unit id="caa1e575508ae90c0c1f3ba9cbc5f1d6c3021954" translate="yes" xml:space="preserve">
          <source>Please note that the following methods have been deprecated and will be removed in a future version of ESLint:</source>
          <target state="translated">Por favor,tenga en cuenta que los siguientes métodos han sido desaprobados y serán eliminados en una futura versión de ESLint:</target>
        </trans-unit>
        <trans-unit id="32dcca51ba22590cfb1a0282165e0b20b80790ba" translate="yes" xml:space="preserve">
          <source>Please note that this option applies only to identifiers inside destructuring patterns. It doesn't additionally allow any particular use of the created variables later in the code apart from the use that is already allowed by default or by other options.</source>
          <target state="translated">Tenga en cuenta que esta opción se aplica sólo a los identificadores dentro de los patrones de desestructuración.No permite además ningún uso particular de las variables creadas más adelante en el código,aparte del uso que ya está permitido por defecto o por otras opciones.</target>
        </trans-unit>
        <trans-unit id="2d2fdf1d62a3776fdec8b729a28be6e793bf8d2a" translate="yes" xml:space="preserve">
          <source>Please note that this rule does not compare conditions from the chain with conditions inside statements, and will not warn in the cases such as follows:</source>
          <target state="translated">Tenga en cuenta que esta regla no compara las condiciones de la cadena con las condiciones dentro de las declaraciones,y no advertirá en los casos como el siguiente:</target>
        </trans-unit>
        <trans-unit id="970fbd12b618363bade0db3e52057a632da36216" translate="yes" xml:space="preserve">
          <source>Please note that when passing a glob as a parameter, it will be expanded by your shell. The results of the expansion can vary depending on your shell, and its configuration. If you want to use node &lt;code&gt;glob&lt;/code&gt; syntax, you have to quote your parameter (using double quotes if you need it to run in Windows), as follows:</source>
          <target state="translated">Tenga en cuenta que al pasar un glob como par&amp;aacute;metro, su shell lo expandir&amp;aacute;. Los resultados de la expansi&amp;oacute;n pueden variar seg&amp;uacute;n su shell y su configuraci&amp;oacute;n. Si desea usar la sintaxis &lt;code&gt;glob&lt;/code&gt; al de nodo , debe citar su par&amp;aacute;metro (usando comillas dobles si necesita que se ejecute en Windows), de la siguiente manera:</target>
        </trans-unit>
        <trans-unit id="7e110a34a2db33270f753e46f8b7ab8a3821147b" translate="yes" xml:space="preserve">
          <source>Please note that you can either use the top-level options or the grouped options (&lt;code&gt;singleLine&lt;/code&gt; and &lt;code&gt;multiLine&lt;/code&gt;) but not both.</source>
          <target state="translated">Tenga en cuenta que puede utilizar las opciones de nivel superior o las opciones agrupadas ( &lt;code&gt;singleLine&lt;/code&gt; y &lt;code&gt;multiLine&lt;/code&gt; ) pero no ambas.</target>
        </trans-unit>
        <trans-unit id="a115fb1f05052d949674b5ad9f4dd54cca5e205b" translate="yes" xml:space="preserve">
          <source>Please note that you have to provide &lt;code&gt;data&lt;/code&gt; on the suggestion's object. Suggestion messages cannot use properties from the overall error's &lt;code&gt;data&lt;/code&gt;.</source>
          <target state="translated">Tenga en cuenta que debe proporcionar &lt;code&gt;data&lt;/code&gt; sobre el objeto de la sugerencia. Los mensajes de sugerencia no pueden usar propiedades de los &lt;code&gt;data&lt;/code&gt; del error general .</target>
        </trans-unit>
        <trans-unit id="8131e2054fa3d6ce5d0136ddb8d6ac107226cb3a" translate="yes" xml:space="preserve">
          <source>Please read the user guide's section on &lt;a href=&quot;../user-guide/configuring#specifying-parser-options&quot;&gt;configuring parser options&lt;/a&gt; to learn more.</source>
          <target state="translated">Lea la secci&amp;oacute;n de la gu&amp;iacute;a del usuario sobre la &lt;a href=&quot;../user-guide/configuring#specifying-parser-options&quot;&gt;configuraci&amp;oacute;n de las opciones del analizador&lt;/a&gt; para obtener m&amp;aacute;s informaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="4e9e14b73e813f94faf81a7bf4b8e790aeed433c" translate="yes" xml:space="preserve">
          <source>Please see &lt;code&gt;.gitignore&lt;/code&gt;'s specification for further examples of valid syntax.</source>
          <target state="translated">Consulte la especificaci&amp;oacute;n de &lt;code&gt;.gitignore&lt;/code&gt; para obtener m&amp;aacute;s ejemplos de sintaxis v&amp;aacute;lida.</target>
        </trans-unit>
        <trans-unit id="910be8bbebe15605e3211e93adb45fe019aed843" translate="yes" xml:space="preserve">
          <source>Please see the &lt;a href=&quot;https://github.com/eslint/generator-eslint&quot;&gt;generator documentation&lt;/a&gt; for instructions on how to use it.</source>
          <target state="translated">Consulte la &lt;a href=&quot;https://github.com/eslint/generator-eslint&quot;&gt;documentaci&amp;oacute;n&lt;/a&gt; del generador para obtener instrucciones sobre c&amp;oacute;mo utilizarlo.</target>
        </trans-unit>
        <trans-unit id="2c576146a981b5faae12b330f7bab5f655d4de92" translate="yes" xml:space="preserve">
          <source>Plugin authors may need to update installation instructions</source>
          <target state="translated">Los autores de los plugins pueden necesitar actualizar las instrucciones de instalación</target>
        </trans-unit>
        <trans-unit id="e3b560171bc6f34e81c89e0ab2f15568841517f3" translate="yes" xml:space="preserve">
          <source>Plugin environments can define the following objects:</source>
          <target state="translated">Los entornos de los plugins pueden definir los siguientes objetos:</target>
        </trans-unit>
        <trans-unit id="0fbbbaf384cbc0ee72d4f8c606fcf5d504bca04e" translate="yes" xml:space="preserve">
          <source>Plugins No Longer Have Default Configurations</source>
          <target state="translated">Los plugins ya no tienen configuraciones por defecto</target>
        </trans-unit>
        <trans-unit id="7b2f2b7399c496bf73ff7e69192e8907b6ce6f81" translate="yes" xml:space="preserve">
          <source>Plugins and shareable configs are no longer affected by ESLint's location</source>
          <target state="translated">Los plugins y las configuraciones compartidas ya no se ven afectados por la ubicación de ESLint.</target>
        </trans-unit>
        <trans-unit id="ee9003d71c823216744370af56f21413e11f9752" translate="yes" xml:space="preserve">
          <source>Plugins can expose additional environments for use in ESLint. To do so, the plugin must export an &lt;code&gt;environments&lt;/code&gt; object. The keys of the &lt;code&gt;environments&lt;/code&gt; object are the names of the different environments provided and the values are the environment settings. For example:</source>
          <target state="translated">Los complementos pueden exponer entornos adicionales para su uso en ESLint. Para hacerlo, el complemento debe exportar un objeto de &lt;code&gt;environments&lt;/code&gt; . Las claves del objeto de &lt;code&gt;environments&lt;/code&gt; son los nombres de los diferentes entornos proporcionados y los valores son la configuraci&amp;oacute;n del entorno. Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="dec281e97d018cacc13382cfc427e305389a0405" translate="yes" xml:space="preserve">
          <source>Plugins can expose additional rules for use in ESLint. To do so, the plugin must export a &lt;code&gt;rules&lt;/code&gt; object containing a key-value mapping of rule ID to rule. The rule ID does not have to follow any naming convention (so it can just be &lt;code&gt;dollar-sign&lt;/code&gt;, for instance).</source>
          <target state="translated">Los complementos pueden exponer reglas adicionales para su uso en ESLint. Para hacerlo, el complemento debe exportar un objeto de &lt;code&gt;rules&lt;/code&gt; que contenga una asignaci&amp;oacute;n de valor-clave de ID de regla a regla. El ID de la regla no tiene que seguir ninguna convenci&amp;oacute;n de nomenclatura (por lo que puede ser solo el &lt;code&gt;dollar-sign&lt;/code&gt; , por ejemplo).</target>
        </trans-unit>
        <trans-unit id="b69b69c3f7bf908cf04b17050967f012181e0472" translate="yes" xml:space="preserve">
          <source>Plugins in scoped packages are now resolvable in configs</source>
          <target state="translated">Los plugins en los paquetes de alcance son ahora resolubles en las configuraciones</target>
        </trans-unit>
        <trans-unit id="f9ec5b88d6b7fe33abdb0cd312d875b7aee0a01e" translate="yes" xml:space="preserve">
          <source>Plugins may provide processors. Processors can extract JavaScript code from another kind of files, then lets ESLint lint the JavaScript code. Or processors can convert JavaScript code in preprocessing for some purpose.</source>
          <target state="translated">Los plugins pueden proporcionar procesadores.Los procesadores pueden extraer el código JavaScript de otro tipo de archivos,luego deja que ESLint pele el código JavaScript.O los procesadores pueden convertir el código JavaScript en preprocesamiento para algún propósito.</target>
        </trans-unit>
        <trans-unit id="04de60818b1275febaa49d420056bd8ab7e76e8e" translate="yes" xml:space="preserve">
          <source>Polyjuice works with JSON configuration files, so if you're using a JavaScript or YAML JSCS configuration file, you should first convert it into a JSON configuration file.</source>
          <target state="translated">Polyjuice funciona con los archivos de configuración JSON,por lo que si utiliza un archivo de configuración JavaScript o YAML JSCS,primero debe convertirlo en un archivo de configuración JSON.</target>
        </trans-unit>
        <trans-unit id="4db8807336771db69984fb33e2ecb89b2b778d76" translate="yes" xml:space="preserve">
          <source>Possible Errors</source>
          <target state="translated">Posibles errores</target>
        </trans-unit>
        <trans-unit id="51e379f50f0321cddf83015a5392ece47d742feb" translate="yes" xml:space="preserve">
          <source>Prefer destructuring from arrays and objects (prefer-destructuring)</source>
          <target state="translated">Preferir la desestructuración de los conjuntos y objetos (preferir-destruir)</target>
        </trans-unit>
        <trans-unit id="c228b3216b65c6046a15d3f0b6ae1deea05d3ecb" translate="yes" xml:space="preserve">
          <source>Prefer use of an object spread over &lt;code&gt;Object.assign&lt;/code&gt; (prefer-object-spread)</source>
          <target state="translated">Prefiere el uso de un objeto distribuido sobre &lt;code&gt;Object.assign&lt;/code&gt; (prefer-object-spread)</target>
        </trans-unit>
        <trans-unit id="82062f1465f3be0589e9c94efa76e989985103e4" translate="yes" xml:space="preserve">
          <source>Prerequisites: &lt;a href=&quot;https://nodejs.org/en/&quot;&gt;Node.js&lt;/a&gt; (&lt;code&gt;^8.10.0&lt;/code&gt;, &lt;code&gt;^10.13.0&lt;/code&gt;, or &lt;code&gt;&amp;gt;=11.10.1&lt;/code&gt;) built with SSL support. (If you are using an official Node.js distribution, SSL is always built in.)</source>
          <target state="translated">Requisitos previos: &lt;a href=&quot;https://nodejs.org/en/&quot;&gt;Node.js&lt;/a&gt; ( &lt;code&gt;^8.10.0&lt;/code&gt; , &lt;code&gt;^10.13.0&lt;/code&gt; o &lt;code&gt;&amp;gt;=11.10.1&lt;/code&gt; ) construido con soporte SSL. (Si est&amp;aacute; utilizando una distribuci&amp;oacute;n oficial de Node.js, SSL siempre est&amp;aacute; integrado).</target>
        </trans-unit>
        <trans-unit id="2a14e1b8f5938872ffc8263a306ac7453d0b08cd" translate="yes" xml:space="preserve">
          <source>Previous versions of ESLint silently ignored any nonexistent files and globs provided on the command line:</source>
          <target state="translated">Las versiones anteriores de ESLint ignoraban silenciosamente cualquier archivo inexistente y los globs proporcionados en la línea de comando:</target>
        </trans-unit>
        <trans-unit id="861eb458285d7d2f2e5428c183895fe75d599908" translate="yes" xml:space="preserve">
          <source>Previously, &lt;code&gt;RuleTester&lt;/code&gt; used loose equality when making some of its assertions. For example, if a rule produced the string &lt;code&gt;&quot;7&quot;&lt;/code&gt; as a result of autofixing, &lt;code&gt;RuleTester&lt;/code&gt; would allow the number &lt;code&gt;7&lt;/code&gt; in an &lt;code&gt;output&lt;/code&gt; assertion, rather than the string &lt;code&gt;&quot;7&quot;&lt;/code&gt;. In ESLint v5, comparisons from &lt;code&gt;RuleTester&lt;/code&gt; use strict equality, so an assertion like this will no longer pass.</source>
          <target state="translated">Anteriormente, &lt;code&gt;RuleTester&lt;/code&gt; usaba la igualdad flexible al hacer algunas de sus afirmaciones. Por ejemplo, si una regla produce la cadena &lt;code&gt;&quot;7&quot;&lt;/code&gt; como resultado de la correcci&amp;oacute;n autom&amp;aacute;tica, &lt;code&gt;RuleTester&lt;/code&gt; permitir&amp;iacute;a el n&amp;uacute;mero &lt;code&gt;7&lt;/code&gt; en una aserci&amp;oacute;n de &lt;code&gt;output&lt;/code&gt; , en lugar de la cadena &lt;code&gt;&quot;7&quot;&lt;/code&gt; . En ESLint v5, las comparaciones de &lt;code&gt;RuleTester&lt;/code&gt; usan igualdad estricta, por lo que una afirmaci&amp;oacute;n como esta ya no pasar&amp;aacute;.</target>
        </trans-unit>
        <trans-unit id="3f50639030ce290e0b2d963a0feb9b72be44a4b6" translate="yes" xml:space="preserve">
          <source>Previously, ESLint loaded plugins relative to the location of the ESLint package itself. As a result, we suggested that users with global ESLint installations should also install plugins globally, and users with local ESLint installations should install plugins locally. However, due to a design bug, this strategy caused ESLint to randomly fail to load plugins and shareable configs under certain circumstances, particularly when using package management tools like &lt;a href=&quot;https://github.com/lerna/lerna&quot;&gt;&lt;code&gt;lerna&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://yarnpkg.com/lang/en/docs/pnp/&quot;&gt;Yarn Plug n' Play&lt;/a&gt;.</source>
          <target state="translated">Anteriormente, ESLint cargaba complementos en relaci&amp;oacute;n con la ubicaci&amp;oacute;n del paquete ESLint en s&amp;iacute;. Como resultado, sugerimos que los usuarios con instalaciones globales de ESLint tambi&amp;eacute;n deber&amp;iacute;an instalar complementos globalmente, y los usuarios con instalaciones locales de ESLint deber&amp;iacute;an instalar complementos localmente. Sin embargo, debido a un error de dise&amp;ntilde;o, esta estrategia hizo que ESLint fallara aleatoriamente al cargar complementos y configuraciones compartibles bajo ciertas circunstancias, particularmente cuando se usan herramientas de administraci&amp;oacute;n de paquetes como &lt;a href=&quot;https://github.com/lerna/lerna&quot;&gt; &lt;code&gt;lerna&lt;/code&gt; &lt;/a&gt; y &lt;a href=&quot;https://yarnpkg.com/lang/en/docs/pnp/&quot;&gt;Yarn Plug n 'Play&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e5a31efe99bb4ae0265c26c456f8708e8b3abad7" translate="yes" xml:space="preserve">
          <source>Previously, ESLint would add an &lt;code&gt;eslintExplicitGlobalComment&lt;/code&gt; property to &lt;code&gt;Variable&lt;/code&gt; objects in scope analysis to indicate that a variable was introduced as a result of a &lt;code&gt;/* global */&lt;/code&gt; comment. This property was undocumented, and the ESLint team was unable to find any usage of the property outside of ESLint core. The property has been removed in ESLint v6, and replaced with the &lt;code&gt;eslintExplicitGlobalComments&lt;/code&gt; property, which can contain a list of all &lt;code&gt;/* global */&lt;/code&gt; comments if a variable was declared with more than one of them.</source>
          <target state="translated">Anteriormente, ESLint agregar&amp;iacute;a una propiedad &lt;code&gt;eslintExplicitGlobalComment&lt;/code&gt; a los objetos &lt;code&gt;Variable&lt;/code&gt; en el an&amp;aacute;lisis de alcance para indicar que se introdujo una variable como resultado de un comentario &lt;code&gt;/* global */&lt;/code&gt; . Esta propiedad no estaba documentada y el equipo de ESLint no pudo encontrar ning&amp;uacute;n uso de la propiedad fuera del n&amp;uacute;cleo de ESLint. La propiedad se elimin&amp;oacute; en ESLint v6 y se reemplaz&amp;oacute; con la propiedad &lt;code&gt;eslintExplicitGlobalComments&lt;/code&gt; , que puede contener una lista de todos &lt;code&gt;/* global */&lt;/code&gt; comentarios / * globales * / si una variable se declar&amp;oacute; con m&amp;aacute;s de uno de ellos.</target>
        </trans-unit>
        <trans-unit id="a1d351994dd8ff11b19e958c9018b81f03cb97ca" translate="yes" xml:space="preserve">
          <source>Previously, ESLint would ignore these malformed directive comments. ESLint v5 will report an error when it sees a problem like this, so that the issue can be more easily corrected.</source>
          <target state="translated">Anteriormente,ESLint ignoraba estos comentarios de directivas malformadas.ESLint v5 reportará un error cuando vea un problema como este,para que el problema pueda ser corregido más fácilmente.</target>
        </trans-unit>
        <trans-unit id="d6b010cfb49c2bd7324d04fb33de705502ddf710" translate="yes" xml:space="preserve">
          <source>Previously, ESLint would set the &lt;code&gt;parent&lt;/code&gt; property on each AST node immediately before running rule listeners for that node. This caused some confusion for rule authors, because the &lt;code&gt;parent&lt;/code&gt; property would not initially be present on any nodes, and it was sometimes necessary to complicate the structure of a rule to ensure that the &lt;code&gt;parent&lt;/code&gt; property of a given node would be available when needed.</source>
          <target state="translated">Anteriormente, ESLint establecer&amp;iacute;a la propiedad &lt;code&gt;parent&lt;/code&gt; en cada nodo AST inmediatamente antes de ejecutar escuchas de reglas para ese nodo. Esto caus&amp;oacute; cierta confusi&amp;oacute;n a los autores de reglas, porque la propiedad &lt;code&gt;parent&lt;/code&gt; no estar&amp;iacute;a inicialmente presente en ning&amp;uacute;n nodo y, a veces, era necesario complicar la estructura de una regla para garantizar que la propiedad &lt;code&gt;parent&lt;/code&gt; de un nodo dado estuviera disponible cuando fuera necesario.</target>
        </trans-unit>
        <trans-unit id="2efde3c7b07c84bb2b96e4b7cf3ee1a328ba78ff" translate="yes" xml:space="preserve">
          <source>Previously, it was possible for rules to report AST nodes without providing a report message. This was not intended behavior, and as a result the default formatter would crash if a rule omitted a message. However, it was possible to avoid a crash when using a non-default formatter, such as &lt;code&gt;json&lt;/code&gt;.</source>
          <target state="translated">Anteriormente, era posible que las reglas informaran sobre los nodos AST sin proporcionar un mensaje de informe. Este no era un comportamiento previsto y, como resultado, el formateador predeterminado se bloqueaba si una regla omit&amp;iacute;a un mensaje. Sin embargo, fue posible evitar un bloqueo al usar un formateador no predeterminado, como &lt;code&gt;json&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="665203081aa657ef14f3fd259bc736ff48eade7a" translate="yes" xml:space="preserve">
          <source>Previously, rule context objects had an undocumented &lt;code&gt;_linter&lt;/code&gt; property, which was used internally within ESLint to process reports from rules. Some rules used this property to achieve functionality that was not intended to be possible for rules. For example, several plugins used the &lt;code&gt;_linter&lt;/code&gt; property in a rule to monitor reports from other rules, for the purpose of checking for unused &lt;code&gt;/* eslint-disable */&lt;/code&gt; directive comments. Although this functionality was useful for users, it could also cause stability problems for projects using ESLint. For example, an upgrade to a rule in one plugin could unexpectedly cause a rule in another plugin to start reporting errors.</source>
          <target state="translated">Anteriormente, los objetos de contexto de reglas ten&amp;iacute;an una propiedad &lt;code&gt;_linter&lt;/code&gt; no documentada , que se usaba internamente dentro de ESLint para procesar informes de reglas. Algunas reglas utilizaron esta propiedad para lograr una funcionalidad que no estaba prevista para las reglas. Por ejemplo, varios complementos usaron la propiedad &lt;code&gt;_linter&lt;/code&gt; en una regla para monitorear informes de otras reglas, con el fin de verificar los comentarios de la directiva &lt;code&gt;/* eslint-disable */&lt;/code&gt; no utilizados . Aunque esta funcionalidad fue &amp;uacute;til para los usuarios, tambi&amp;eacute;n podr&amp;iacute;a causar problemas de estabilidad para proyectos que usan ESLint. Por ejemplo, una actualizaci&amp;oacute;n a una regla en un complemento podr&amp;iacute;a causar inesperadamente que una regla en otro complemento comience a informar errores.</target>
        </trans-unit>
        <trans-unit id="7ad7f54686fbe669487e9816787f55d0683c5950" translate="yes" xml:space="preserve">
          <source>Previously, the &lt;a href=&quot;../rules/comma-dangle&quot;&gt;&lt;code&gt;comma-dangle&lt;/code&gt;&lt;/a&gt; rule would ignore trailing function arguments and parameters, unless explicitly configured to check for function commas. In ESLint v6, function commas are treated the same way as other types of trailing commas.</source>
          <target state="translated">Anteriormente, la regla de &lt;a href=&quot;../rules/comma-dangle&quot;&gt; &lt;code&gt;comma-dangle&lt;/code&gt; &lt;/a&gt; ignorar&amp;iacute;a los argumentos y par&amp;aacute;metros de las funciones finales, a menos que se configurara expl&amp;iacute;citamente para buscar comas de funci&amp;oacute;n. En ESLint v6, las comas de funci&amp;oacute;n se tratan de la misma manera que otros tipos de comas finales.</target>
        </trans-unit>
        <trans-unit id="bb4d9004d86d873bce13da59ea0da1efcb652b6e" translate="yes" xml:space="preserve">
          <source>Previously, the &lt;a href=&quot;../rules/indent&quot;&gt;&lt;code&gt;indent&lt;/code&gt;&lt;/a&gt; rule was fairly lenient about checking indentation; there were many code patterns where indentation was not validated by the rule. This caused confusion for users, because they were accidentally writing code with incorrect indentation, and they expected ESLint to catch the issues.</source>
          <target state="translated">Anteriormente, la regla de &lt;a href=&quot;../rules/indent&quot;&gt; &lt;code&gt;indent&lt;/code&gt; &lt;/a&gt; era bastante indulgente sobre la comprobaci&amp;oacute;n de la sangr&amp;iacute;a; hab&amp;iacute;a muchos patrones de c&amp;oacute;digo en los que la regla no validaba la sangr&amp;iacute;a. Esto caus&amp;oacute; confusi&amp;oacute;n a los usuarios, porque accidentalmente estaban escribiendo c&amp;oacute;digo con sangr&amp;iacute;a incorrecta y esperaban que ESLint detectara los problemas.</target>
        </trans-unit>
        <trans-unit id="cac4dad357054ea6ee0c7634c9a4e7c59614fbef" translate="yes" xml:space="preserve">
          <source>Previously, the &lt;code&gt;context.getScope()&lt;/code&gt; method changed its behavior based on the &lt;code&gt;parserOptions.ecmaVersion&lt;/code&gt; property. However, this could cause confusing behavior when using a parser that doesn't respond to the &lt;code&gt;ecmaVersion&lt;/code&gt; option, such as &lt;code&gt;babel-eslint&lt;/code&gt;.</source>
          <target state="translated">Anteriormente, el m&amp;eacute;todo &lt;code&gt;context.getScope()&lt;/code&gt; cambiaba su comportamiento seg&amp;uacute;n la propiedad &lt;code&gt;parserOptions.ecmaVersion&lt;/code&gt; . Sin embargo, esto podr&amp;iacute;a causar un comportamiento confuso al usar un analizador que no responde a la opci&amp;oacute;n &lt;code&gt;ecmaVersion&lt;/code&gt; , como &lt;code&gt;babel-eslint&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="40450d3f81bf0c288fef5278f775f18d1a6902ca" translate="yes" xml:space="preserve">
          <source>Previously, the &lt;code&gt;linter.verify()&lt;/code&gt; API accepted a &lt;code&gt;global&lt;/code&gt; config option, which was a synonym for the documented &lt;code&gt;globals&lt;/code&gt; property. The &lt;code&gt;global&lt;/code&gt; option was never documented or officially supported, and did not work in config files. It has been removed in 4.0.</source>
          <target state="translated">Anteriormente, el &lt;code&gt;linter.verify()&lt;/code&gt; API acept&amp;oacute; un &lt;code&gt;global&lt;/code&gt; opci&amp;oacute;n de configuraci&amp;oacute;n, que era un sin&amp;oacute;nimo de la documentada &lt;code&gt;globals&lt;/code&gt; propiedad. La opci&amp;oacute;n &lt;code&gt;global&lt;/code&gt; nunca se document&amp;oacute; ni se admiti&amp;oacute; oficialmente, y no funcion&amp;oacute; en los archivos de configuraci&amp;oacute;n. Ha sido eliminado en 4.0.</target>
        </trans-unit>
        <trans-unit id="759b8740ec08f1087d9d1461adf3e37a3bf5b531" translate="yes" xml:space="preserve">
          <source>Previously, when configuring a set of global variables with an object, it was possible to use anything as the values of the object. An unknown value would be treated the same as &lt;code&gt;&quot;writable&quot;&lt;/code&gt;.</source>
          <target state="translated">Anteriormente, al configurar un conjunto de variables globales con un objeto, era posible utilizar cualquier cosa como los valores del objeto. Un valor desconocido se tratar&amp;iacute;a de la misma forma que &lt;code&gt;&quot;writable&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d7b32ac883bfc23aab343c6372688bec1c7d6449" translate="yes" xml:space="preserve">
          <source>Previously, when linting code with a parser that had not been previously defined, the &lt;code&gt;Linter&lt;/code&gt; API would attempt to load the parser from the filesystem. However, this behavior was confusing because &lt;code&gt;Linter&lt;/code&gt; never access the filesystem in any other cases, and it was difficult to ensure that the correct parser would be found when loading the parser from the filesystem.</source>
          <target state="translated">Anteriormente, al enlazar c&amp;oacute;digo con un analizador que no se hab&amp;iacute;a definido previamente, la API de &lt;code&gt;Linter&lt;/code&gt; intentar&amp;iacute;a cargar el analizador desde el sistema de archivos. Sin embargo, este comportamiento era confuso porque &lt;code&gt;Linter&lt;/code&gt; nunca accede al sistema de archivos en ning&amp;uacute;n otro caso, y era dif&amp;iacute;cil asegurarse de que se encontrar&amp;iacute;a el analizador correcto al cargar el analizador desde el sistema de archivos.</target>
        </trans-unit>
        <trans-unit id="8a3ba3b815ccf0fde610368afb8b3a032a9740a4" translate="yes" xml:space="preserve">
          <source>Previously, when parsing JS code like &lt;code&gt;const foo = {...data}&lt;/code&gt; with the &lt;code&gt;experimentalObjectRestSpread&lt;/code&gt; option enabled, the default parser would generate an &lt;code&gt;ExperimentalSpreadProperty&lt;/code&gt; node type for the &lt;code&gt;...data&lt;/code&gt; spread element.</source>
          <target state="translated">Anteriormente, al analizar c&amp;oacute;digo JS como &lt;code&gt;const foo = {...data}&lt;/code&gt; con la opci&amp;oacute;n &lt;code&gt;experimentalObjectRestSpread&lt;/code&gt; habilitada, el analizador predeterminado generaba un tipo de nodo &lt;code&gt;ExperimentalSpreadProperty&lt;/code&gt; para el elemento &lt;code&gt;...data&lt;/code&gt; spread.</target>
        </trans-unit>
        <trans-unit id="3572fe8f9bf308c3f1c32a5c5c8ecf7ade2e2992" translate="yes" xml:space="preserve">
          <source>Previously, when parsing JS code like &lt;code&gt;const {foo, ...rest} = data&lt;/code&gt; with the &lt;code&gt;experimentalObjectRestSpread&lt;/code&gt; option enabled, the default parser would generate an &lt;code&gt;ExperimentalRestProperty&lt;/code&gt; node type for the &lt;code&gt;...data&lt;/code&gt; rest element.</source>
          <target state="translated">Anteriormente, al analizar c&amp;oacute;digo JS como &lt;code&gt;const {foo, ...rest} = data&lt;/code&gt; con la opci&amp;oacute;n &lt;code&gt;experimentalObjectRestSpread&lt;/code&gt; habilitada, el analizador predeterminado generaba un tipo de nodo &lt;code&gt;ExperimentalRestProperty&lt;/code&gt; para el elemento &lt;code&gt;...data&lt;/code&gt; rest.</target>
        </trans-unit>
        <trans-unit id="ac97c7d1bc4493830e4f2c35fbc7b98e9d1581e8" translate="yes" xml:space="preserve">
          <source>Previously, when using the default parser it was possible to use the &lt;code&gt;experimentalObjectRestSpread&lt;/code&gt; option to enable support for &lt;a href=&quot;https://developers.google.com/web/updates/2017/06/object-rest-spread&quot;&gt;rest/spread properties&lt;/a&gt;, as follows:</source>
          <target state="translated">Anteriormente, cuando se usaba el analizador predeterminado, era posible usar la opci&amp;oacute;n &lt;code&gt;experimentalObjectRestSpread&lt;/code&gt; para habilitar la compatibilidad con las &lt;a href=&quot;https://developers.google.com/web/updates/2017/06/object-rest-spread&quot;&gt;propiedades rest / spread&lt;/a&gt; , de la siguiente manera:</target>
        </trans-unit>
        <trans-unit id="393a7447e4d30c62abea4ddc9f0d3dfc3e208e74" translate="yes" xml:space="preserve">
          <source>Previously, when using the default parser, a config could use the &lt;code&gt;experimentalObjectRestSpread&lt;/code&gt; option to enable parsing support for object rest/spread properties:</source>
          <target state="translated">Anteriormente, cuando se usaba el analizador predeterminado, una configuraci&amp;oacute;n pod&amp;iacute;a usar la opci&amp;oacute;n &lt;code&gt;experimentalObjectRestSpread&lt;/code&gt; para habilitar el soporte de an&amp;aacute;lisis para las propiedades de descanso / propagaci&amp;oacute;n de objetos:</target>
        </trans-unit>
        <trans-unit id="6c1fec0a04a3eab043ee811142120d57785cfef0" translate="yes" xml:space="preserve">
          <source>Primitive Literals</source>
          <target state="translated">Literatura primitiva</target>
        </trans-unit>
        <trans-unit id="8c8f400f7e3e42d398c134471b34479ab1e3ff12" translate="yes" xml:space="preserve">
          <source>Prior to 2.0.0, if a directory contained both an &lt;code&gt;.eslintrc&lt;/code&gt; file and a &lt;code&gt;package.json&lt;/code&gt; file with ESLint configuration information, the settings from the two files would be merged together. In 2.0.0, only the settings from the &lt;code&gt;.eslintrc.*&lt;/code&gt; file are used and the ones in &lt;code&gt;package.json&lt;/code&gt; are ignored when both are present. Otherwise, &lt;code&gt;package.json&lt;/code&gt; can still be used with ESLint configuration, but only if no other &lt;code&gt;.eslintrc.*&lt;/code&gt; files are present.</source>
          <target state="translated">Antes de 2.0.0, si un directorio conten&amp;iacute;a un archivo &lt;code&gt;.eslintrc&lt;/code&gt; y un archivo &lt;code&gt;package.json&lt;/code&gt; con informaci&amp;oacute;n de configuraci&amp;oacute;n de ESLint, las configuraciones de los dos archivos se fusionar&amp;iacute;an. En 2.0.0, solo se utilizan las configuraciones del archivo &lt;code&gt;.eslintrc.*&lt;/code&gt; Y las de &lt;code&gt;package.json&lt;/code&gt; se ignoran cuando ambos est&amp;aacute;n presentes. De lo contrario, &lt;code&gt;package.json&lt;/code&gt; a&amp;uacute;n se puede usar con la configuraci&amp;oacute;n de ESLint, pero solo si no hay otros archivos &lt;code&gt;.eslintrc.*&lt;/code&gt; Presentes.</target>
        </trans-unit>
        <trans-unit id="bacbbe4722ec9b78f85bdddd7ed97a705ae7d9fe" translate="yes" xml:space="preserve">
          <source>Prior to 2.0.0, new global variables that were standardized as part of ES6 such as &lt;code&gt;Promise&lt;/code&gt;, &lt;code&gt;Map&lt;/code&gt;, &lt;code&gt;Set&lt;/code&gt;, and &lt;code&gt;Symbol&lt;/code&gt; were included in the built-in global environment. This could lead to potential issues when, for example, &lt;code&gt;no-undef&lt;/code&gt; permitted use of the &lt;code&gt;Promise&lt;/code&gt; constructor even in ES5 code where promises are unavailable. In 2.0.0, the built-in environment only includes the standard ES5 global variables, and the new ES6 global variables have been moved to the &lt;code&gt;es6&lt;/code&gt; environment.</source>
          <target state="translated">Antes de 2.0.0, las nuevas variables globales que se estandarizaron como parte de ES6, como &lt;code&gt;Promise&lt;/code&gt; , &lt;code&gt;Map&lt;/code&gt; a , &lt;code&gt;Set&lt;/code&gt; y &lt;code&gt;Symbol&lt;/code&gt; se incluyeron en el entorno global integrado. Esto podr&amp;iacute;a generar problemas potenciales cuando, por ejemplo, &lt;code&gt;no-undef&lt;/code&gt; permite el uso no indefinido del constructor &lt;code&gt;Promise&lt;/code&gt; incluso en el c&amp;oacute;digo ES5 donde las promesas no est&amp;aacute;n disponibles. En 2.0.0, el entorno integrado solo incluye las variables globales est&amp;aacute;ndar de ES5, y las nuevas variables globales de ES6 se han trasladado al entorno &lt;code&gt;es6&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ea53a76cd88b434dcfaff09ec72ada7ae7831a08" translate="yes" xml:space="preserve">
          <source>Prior to 2.0.0, the way to enable language options was by using &lt;code&gt;ecmaFeatures&lt;/code&gt; in your configuration. In 2.0.0:</source>
          <target state="translated">Antes de 2.0.0, la forma de habilitar las opciones de idioma era utilizando &lt;code&gt;ecmaFeatures&lt;/code&gt; en su configuraci&amp;oacute;n. En 2.0.0:</target>
        </trans-unit>
        <trans-unit id="6b9f0362f6ea97fabedbee28f3e42f7c63d479c2" translate="yes" xml:space="preserve">
          <source>Prior to 4.0, ESLint required parsers to implement comment attachment, a process where AST nodes would gain additional properties corresponding to their leading and trailing comments in the source file. This made it difficult for users to develop custom parsers, because they would have to replicate the confusing comment attachment semantics required by ESLint.</source>
          <target state="translated">Antes de la versión 4.0,ESLint requería que los analizadores implementaran el adjunto de comentarios,un proceso en el que los nodos AST obtenían propiedades adicionales correspondientes a sus comentarios principales y secundarios en el archivo de origen.Esto dificultaba a los usuarios el desarrollo de analizadores personalizados,porque tendrían que replicar la confusa semántica de los comentarios adjuntos requerida por ESLint.</target>
        </trans-unit>
        <trans-unit id="5e3d392b20fe6d9664c81b4a65c6b601daf8e9bf" translate="yes" xml:space="preserve">
          <source>Prior to 4.0, shebang comments in a source file would not appear in the output of &lt;code&gt;sourceCode.getAllComments()&lt;/code&gt; or &lt;code&gt;sourceCode.getComments()&lt;/code&gt;, but they would appear in the output of &lt;code&gt;sourceCode.getTokenOrCommentBefore&lt;/code&gt; as line comments. This inconsistency led to some confusion for rule developers.</source>
          <target state="translated">Antes de 4.0, los comentarios shebang en un archivo fuente no aparecer&amp;iacute;an en la salida de &lt;code&gt;sourceCode.getAllComments()&lt;/code&gt; o &lt;code&gt;sourceCode.getComments()&lt;/code&gt; , pero aparecer&amp;iacute;an en la salida de &lt;code&gt;sourceCode.getTokenOrCommentBefore&lt;/code&gt; como comentarios de l&amp;iacute;nea. Esta inconsistencia gener&amp;oacute; cierta confusi&amp;oacute;n para los desarrolladores de reglas.</target>
        </trans-unit>
        <trans-unit id="b3be15561d5151f64c56456dc30fa7cef13a71e7" translate="yes" xml:space="preserve">
          <source>Prior to v0.16.0 this rule also enforced that there was only a single line at the end of the file. If you still want this behavior, consider enabling &lt;a href=&quot;no-multiple-empty-lines&quot;&gt;no-multiple-empty-lines&lt;/a&gt; with &lt;code&gt;maxEOF&lt;/code&gt; and/or &lt;a href=&quot;no-trailing-spaces&quot;&gt;no-trailing-spaces&lt;/a&gt;.</source>
          <target state="translated">Antes de la versi&amp;oacute;n 0.16.0, esta regla tambi&amp;eacute;n impon&amp;iacute;a que solo hubiera una l&amp;iacute;nea al final del archivo. Si a&amp;uacute;n desea este comportamiento, considere la posibilidad de habilitar &lt;a href=&quot;no-multiple-empty-lines&quot;&gt;no-multiple-empty-lines&lt;/a&gt; con &lt;code&gt;maxEOF&lt;/code&gt; y / o &lt;a href=&quot;no-trailing-spaces&quot;&gt;sin trailing-spaces&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="af52f1493bafbe39bd3dae2bc861bf916727dd6e" translate="yes" xml:space="preserve">
          <source>Prior to v2.0.0, plugins could specify a &lt;code&gt;rulesConfig&lt;/code&gt; for the plugin. The &lt;code&gt;rulesConfig&lt;/code&gt; would automatically be applied whenever someone uses the plugin, which is the opposite of what ESLint does in every other situation (where nothing is on by default). To bring plugins behavior in line, we have removed support for &lt;code&gt;rulesConfig&lt;/code&gt; in plugins.</source>
          <target state="translated">Antes de la versi&amp;oacute;n 2.0.0, los complementos pod&amp;iacute;an especificar un &lt;code&gt;rulesConfig&lt;/code&gt; para el complemento. El &lt;code&gt;rulesConfig&lt;/code&gt; se aplicar&amp;iacute;a autom&amp;aacute;ticamente cada vez que alguien usa el complemento, que es lo opuesto a lo que hace ESLint en cualquier otra situaci&amp;oacute;n (donde no hay nada activado por defecto). Para alinear el comportamiento de los complementos, hemos eliminado la compatibilidad con &lt;code&gt;rulesConfig&lt;/code&gt; en los complementos.</target>
        </trans-unit>
        <trans-unit id="692a54c10f74d805a38453bd22bb1d25068c3ba0" translate="yes" xml:space="preserve">
          <source>Processors in Plugins</source>
          <target state="translated">Procesadores en Plugins</target>
        </trans-unit>
        <trans-unit id="ee555673e8664c98d4ada2d762c610f965ba2a31" translate="yes" xml:space="preserve">
          <source>Processors may make named code blocks such as &lt;code&gt;0.js&lt;/code&gt; and &lt;code&gt;1.js&lt;/code&gt;. ESLint handles such a named code block as a child file of the original file. You can specify additional configurations for named code blocks in the &lt;code&gt;overrides&lt;/code&gt; section of the config. For example, the following disables &lt;code&gt;strict&lt;/code&gt; rule for the named code blocks which end with &lt;code&gt;.js&lt;/code&gt; in markdown files.</source>
          <target state="translated">Los procesadores pueden dar a los bloques de c&amp;oacute;digo llamado como &lt;code&gt;0.js&lt;/code&gt; y &lt;code&gt;1.js&lt;/code&gt; . ESLint maneja un bloque de c&amp;oacute;digo con nombre como un archivo secundario del archivo original. Puede especificar configuraciones adicionales para bloques de c&amp;oacute;digo con nombre en la secci&amp;oacute;n de &lt;code&gt;overrides&lt;/code&gt; de config. Por ejemplo, lo siguiente deshabilita &lt;code&gt;strict&lt;/code&gt; regla estricta para los bloques de c&amp;oacute;digo con nombre que terminan con &lt;code&gt;.js&lt;/code&gt; en archivos de rebajas.</target>
        </trans-unit>
        <trans-unit id="f32c5098fb499f12ad76958c7a61d5b8091f9763" translate="yes" xml:space="preserve">
          <source>Program is expressed with several code paths. A code path is expressed with objects of two kinds: &lt;code&gt;CodePath&lt;/code&gt; and &lt;code&gt;CodePathSegment&lt;/code&gt;.</source>
          <target state="translated">El programa se expresa con varias rutas de c&amp;oacute;digo. Una ruta de c&amp;oacute;digo se expresa con objetos de dos tipos: &lt;code&gt;CodePath&lt;/code&gt; y &lt;code&gt;CodePathSegment&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="42fa885d13da97a910ec7164bf19b94acb08d0f0" translate="yes" xml:space="preserve">
          <source>Programming language style guides are important for the long-term maintainability of software. This guide is based on the &lt;a href=&quot;https://java.sun.com/docs/codeconv/&quot;&gt;Code Conventions for the Java Programming Language&lt;/a&gt; and &lt;a href=&quot;http://javascript.crockford.com/code.html&quot;&gt;Douglas Crockford's Code Conventions for the JavaScript Programming Language&lt;/a&gt;. Modifications have been made due to my personal experience and preferences.</source>
          <target state="translated">Las gu&amp;iacute;as de estilo del lenguaje de programaci&amp;oacute;n son importantes para el mantenimiento a largo plazo del software. Esta gu&amp;iacute;a se basa en las &lt;a href=&quot;https://java.sun.com/docs/codeconv/&quot;&gt;convenciones de c&amp;oacute;digo para el lenguaje de programaci&amp;oacute;n Java&lt;/a&gt; y &lt;a href=&quot;http://javascript.crockford.com/code.html&quot;&gt;las convenciones de c&amp;oacute;digo de Douglas Crockford para el lenguaje de programaci&amp;oacute;n JavaScript&lt;/a&gt; . Se han realizado modificaciones debido a mi experiencia y preferencias personales.</target>
        </trans-unit>
        <trans-unit id="43f3ace69f2fe7131543d9052cb08b303ff904e4" translate="yes" xml:space="preserve">
          <source>Project-level configuration:</source>
          <target state="translated">Configuración a nivel de proyecto:</target>
        </trans-unit>
        <trans-unit id="33fb62ee4504c98b469fcbf6c4712f39685712fe" translate="yes" xml:space="preserve">
          <source>Property descriptors in &lt;code&gt;Object.create&lt;/code&gt;, &lt;code&gt;Object.defineProperty&lt;/code&gt;, &lt;code&gt;Object.defineProperties&lt;/code&gt;, and &lt;code&gt;Reflect.defineProperty&lt;/code&gt; methods of the global objects.</source>
          <target state="translated">Descriptores de propiedad en los &lt;code&gt;Object.create&lt;/code&gt; , &lt;code&gt;Object.defineProperty&lt;/code&gt; , &lt;code&gt;Object.defineProperties&lt;/code&gt; y &lt;code&gt;Reflect.defineProperty&lt;/code&gt; de los objetos globales.</target>
        </trans-unit>
        <trans-unit id="b5e66a1596415565d4a94aaddcf8bb5751542451" translate="yes" xml:space="preserve">
          <source>Proponents of Yoda conditions highlight that it is impossible to mistakenly use &lt;code&gt;=&lt;/code&gt; instead of &lt;code&gt;==&lt;/code&gt; because you cannot assign to a literal value. Doing so will cause a syntax error and you will be informed of the mistake early on. This practice was therefore very common in early programming where tools were not yet available.</source>
          <target state="translated">Los defensores de las condiciones de Yoda destacan que es imposible usar err&amp;oacute;neamente &lt;code&gt;=&lt;/code&gt; en lugar de &lt;code&gt;==&lt;/code&gt; porque no se puede asignar a un valor literal. Si lo hace, se producir&amp;aacute; un error de sintaxis y se le informar&amp;aacute; del error desde el principio. Por lo tanto, esta pr&amp;aacute;ctica era muy com&amp;uacute;n en la programaci&amp;oacute;n inicial donde las herramientas a&amp;uacute;n no estaban disponibles.</target>
        </trans-unit>
        <trans-unit id="d36f5aee868ae6db86c6284531cdd8f72d77db1c" translate="yes" xml:space="preserve">
          <source>Proposing a &lt;a href=&quot;new-rules&quot;&gt;New Rule&lt;/a&gt;</source>
          <target state="translated">Proponer una &lt;a href=&quot;new-rules&quot;&gt;nueva regla&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ecaeee3736f17c6a22f424961f98b463abcd212d" translate="yes" xml:space="preserve">
          <source>Proposing a &lt;a href=&quot;rule-changes&quot;&gt;Rule Change&lt;/a&gt;</source>
          <target state="translated">Proponer un &lt;a href=&quot;rule-changes&quot;&gt;cambio de regla&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8fde9b438a1e10afec4812ddd08e7722642dc36e" translate="yes" xml:space="preserve">
          <source>Proposing a Rule</source>
          <target state="translated">Proponiendo una regla</target>
        </trans-unit>
        <trans-unit id="341849141f80cca77602012c6f342ce4742319fd" translate="yes" xml:space="preserve">
          <source>Proposing a Rule Change</source>
          <target state="translated">Proponiendo un cambio de reglas</target>
        </trans-unit>
        <trans-unit id="86ee7e213745f3cf674455c23534700070da7b53" translate="yes" xml:space="preserve">
          <source>Provide as many unit tests as possible. Your pull request will never be turned down for having too many tests submitted with it!</source>
          <target state="translated">Proporcione tantas pruebas de unidad como sea posible.¡Su solicitud de extracción nunca será rechazada por tener demasiadas pruebas presentadas con ella!</target>
        </trans-unit>
        <trans-unit id="4ffdc87852320c6294c2b02843d1425e91d10cfc" translate="yes" xml:space="preserve">
          <source>Providing Suggestions</source>
          <target state="translated">Ofrecer sugerencias</target>
        </trans-unit>
        <trans-unit id="5591bbc620225df439fe2bdef9369c8238d4af8c" translate="yes" xml:space="preserve">
          <source>Publishing a Shareable Config</source>
          <target state="translated">Publicar una configuración compartida</target>
        </trans-unit>
        <trans-unit id="30ab8d084e2209d47a1dc198c8de1e251f390a94" translate="yes" xml:space="preserve">
          <source>Pull Requests</source>
          <target state="translated">Solicitudes de extracción</target>
        </trans-unit>
        <trans-unit id="8317963e9e1ff1e717106bf4888341b278d74c92" translate="yes" xml:space="preserve">
          <source>Push your changes</source>
          <target state="translated">Presiona tus cambios</target>
        </trans-unit>
        <trans-unit id="8c720088282bb804281d4141100281d68e2719bb" translate="yes" xml:space="preserve">
          <source>Putting default parameter at last allows function calls to omit optional tail arguments.</source>
          <target state="translated">Poner el parámetro por defecto al fin permite que las llamadas a la función omitan los argumentos de cola opcionales.</target>
        </trans-unit>
        <trans-unit id="289df8885d703027d487fef77d56fc52e316d891" translate="yes" xml:space="preserve">
          <source>Rather than creating separate rules for every language feature you want to turn off, this rule allows you to configure the syntax elements you want to restrict use of. These elements are represented by their &lt;a href=&quot;https://github.com/estree/estree&quot;&gt;ESTree&lt;/a&gt; node types. For example, a function declaration is represented by &lt;code&gt;FunctionDeclaration&lt;/code&gt; and the &lt;code&gt;with&lt;/code&gt; statement is represented by &lt;code&gt;WithStatement&lt;/code&gt;. You may find the full list of AST node names you can use &lt;a href=&quot;https://github.com/eslint/espree/blob/master/lib/ast-node-types.js&quot;&gt;on GitHub&lt;/a&gt; and use &lt;a href=&quot;https://astexplorer.net/&quot;&gt;AST Explorer&lt;/a&gt; with the espree parser to see what type of nodes your code consists of.</source>
          <target state="translated">En lugar de crear reglas independientes para cada funci&amp;oacute;n del idioma que desee desactivar, esta regla le permite configurar los elementos de sintaxis que desea restringir el uso. Estos elementos est&amp;aacute;n representados por sus tipos de nodos &lt;a href=&quot;https://github.com/estree/estree&quot;&gt;ESTree&lt;/a&gt; . Por ejemplo, una declaraci&amp;oacute;n de funci&amp;oacute;n est&amp;aacute; representada por &lt;code&gt;FunctionDeclaration&lt;/code&gt; y la declaraci&amp;oacute;n &lt;code&gt;with&lt;/code&gt; est&amp;aacute; representada por &lt;code&gt;WithStatement&lt;/code&gt; . Puede encontrar la lista completa de nombres de nodos AST que puede usar &lt;a href=&quot;https://github.com/eslint/espree/blob/master/lib/ast-node-types.js&quot;&gt;en GitHub&lt;/a&gt; y usar &lt;a href=&quot;https://astexplorer.net/&quot;&gt;AST Explorer&lt;/a&gt; con el analizador espree para ver en qu&amp;eacute; tipo de nodos consiste su c&amp;oacute;digo.</target>
        </trans-unit>
        <trans-unit id="4d1f996aa17807ebebdb5143b01f86f170d5bea6" translate="yes" xml:space="preserve">
          <source>React</source>
          <target state="translated">React</target>
        </trans-unit>
        <trans-unit id="8bf3ca1af55a4ac765bcc067d56c1abf4201ae04" translate="yes" xml:space="preserve">
          <source>Read the &lt;a href=&quot;https://js.foundation/community/code-of-conduct&quot;&gt;Code of Conduct&lt;/a&gt;</source>
          <target state="translated">Leer el &lt;a href=&quot;https://js.foundation/community/code-of-conduct&quot;&gt;c&amp;oacute;digo de conducta&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3c28870b2e40bf75ddc825d7f6ccf7aef23e7e4b" translate="yes" xml:space="preserve">
          <source>Read-only global variables</source>
          <target state="translated">Variables globales de sólo lectura</target>
        </trans-unit>
        <trans-unit id="f7f699bcbeea4f59d35cf84d686c1fe9d26c6cd2" translate="yes" xml:space="preserve">
          <source>Reading configuration information from config files (including &lt;code&gt;.eslintrc&lt;/code&gt; and &lt;code&gt;package.json&lt;/code&gt;)</source>
          <target state="translated">Leer informaci&amp;oacute;n de configuraci&amp;oacute;n de archivos de configuraci&amp;oacute;n (incluidos &lt;code&gt;.eslintrc&lt;/code&gt; y &lt;code&gt;package.json&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="c503dd1f9c9f723f78d9b1e948ede74c06ed1112" translate="yes" xml:space="preserve">
          <source>Reading from the file system</source>
          <target state="translated">Leyendo desde el sistema de archivos</target>
        </trans-unit>
        <trans-unit id="256ac291cd34fa721dc7063e9c7a456d831fad1e" translate="yes" xml:space="preserve">
          <source>Rebase onto upstream</source>
          <target state="translated">Rebase en la corriente ascendente</target>
        </trans-unit>
        <trans-unit id="3636419e1cfae4b85f914484288a2e7b2429d45d" translate="yes" xml:space="preserve">
          <source>Rebasing</source>
          <target state="translated">Rebasing</target>
        </trans-unit>
        <trans-unit id="15bc3424085a46a8b413590042e27673eda36b4b" translate="yes" xml:space="preserve">
          <source>Recommended keywords:</source>
          <target state="translated">Palabras clave recomendadas:</target>
        </trans-unit>
        <trans-unit id="8532988ca58a814f1543477fc268a1acefe668d0" translate="yes" xml:space="preserve">
          <source>Redeclarations of read-only global variables and assignments to read-only global variables.</source>
          <target state="translated">Redeclaraciones de variables globales de sólo lectura y asignaciones a variables globales de sólo lectura.</target>
        </trans-unit>
        <trans-unit id="4462d29bec3d07aaf9a71ae4d7273bee7d450028" translate="yes" xml:space="preserve">
          <source>Reference Information</source>
          <target state="translated">Información de referencia</target>
        </trans-unit>
        <trans-unit id="df9e76446650cac75008b6bf87079e749a453bdb" translate="yes" xml:space="preserve">
          <source>Reference interface</source>
          <target state="translated">Interfaz de referencia</target>
        </trans-unit>
        <trans-unit id="53c2a1c2bb6e1d4d8148660156aec1a0a17d24a8" translate="yes" xml:space="preserve">
          <source>ReferenceError: assignment to undeclared variable</source>
          <target state="translated">ReferenceError:asignación a la variable no declarada</target>
        </trans-unit>
        <trans-unit id="eb264a799738b600bd47d5135f4fc05dfcd5b1d5" translate="yes" xml:space="preserve">
          <source>References to scoped plugins in config files are now required to include the scope</source>
          <target state="translated">Las referencias a los plugins de alcance en los archivos de configuración son ahora necesarias para incluir el alcance</target>
        </trans-unit>
        <trans-unit id="e4409d5bd36638733bfa9227649affbe8de8da69" translate="yes" xml:space="preserve">
          <source>Reflect.apply</source>
          <target state="translated">Reflect.apply</target>
        </trans-unit>
        <trans-unit id="f2f9fd068e4242fbb4c065fab823928d6658dcc6" translate="yes" xml:space="preserve">
          <source>Reflect.defineProperty</source>
          <target state="translated">Reflect.defineProperty</target>
        </trans-unit>
        <trans-unit id="d9c40e72ed42277e621938140990fecec31860d2" translate="yes" xml:space="preserve">
          <source>Reflect.deleteProperty</source>
          <target state="translated">Reflect.deleteProperty</target>
        </trans-unit>
        <trans-unit id="dca299dec7c4b27406c99a9db8613312969fc8ef" translate="yes" xml:space="preserve">
          <source>Reflect.getOwnPropertyDescriptor</source>
          <target state="translated">Reflect.getOwnPropertyDescriptor</target>
        </trans-unit>
        <trans-unit id="9e55b43471522e73de67aec1ebffc5cdb9fa1436" translate="yes" xml:space="preserve">
          <source>Reflect.getOwnPropertyNames</source>
          <target state="translated">Reflect.getOwnPropertyNames</target>
        </trans-unit>
        <trans-unit id="c4ccc5cd40402aca6f2327273b607a16273c4cf3" translate="yes" xml:space="preserve">
          <source>Reflect.getPrototypeOf</source>
          <target state="translated">Reflect.getPrototypeOf</target>
        </trans-unit>
        <trans-unit id="67b946573d9e6181078c2c26d4ca78a319f779cb" translate="yes" xml:space="preserve">
          <source>Reflect.isExtensible</source>
          <target state="translated">Reflect.isExtensible</target>
        </trans-unit>
        <trans-unit id="9578443035eb8705bd126e9acab6f34b58453535" translate="yes" xml:space="preserve">
          <source>Reflect.preventExtensions</source>
          <target state="translated">Reflect.preventExtensions</target>
        </trans-unit>
        <trans-unit id="a5a0796157a708b39407cdcc3b1149e74aa1ba55" translate="yes" xml:space="preserve">
          <source>Reflect.setPrototypeOf</source>
          <target state="translated">Reflect.setPrototypeOf</target>
        </trans-unit>
        <trans-unit id="5a1a35c83df714211f74bb546dc5facc26363344" translate="yes" xml:space="preserve">
          <source>RegExp &lt;code&gt;u&lt;/code&gt; flag has two effects:</source>
          <target state="translated">La bandera de RegExp &lt;code&gt;u&lt;/code&gt; tiene dos efectos:</target>
        </trans-unit>
        <trans-unit id="bc019f867ae1e63caad1e171c9ac68f393022fd6" translate="yes" xml:space="preserve">
          <source>RegExp literals such as &lt;code&gt;(/abc/).test(var)&lt;/code&gt; to avoid conflicts with the &lt;a href=&quot;wrap-regex&quot;&gt;wrap-regex&lt;/a&gt; rule</source>
          <target state="translated">RegExp literales como &lt;code&gt;(/abc/).test(var)&lt;/code&gt; para evitar conflictos con la regla &lt;a href=&quot;wrap-regex&quot;&gt;wrap-regex&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7114653a737d7346ec01e388401a05144edff375" translate="yes" xml:space="preserve">
          <source>Regular expression literals, e.g., &lt;code&gt;/abc/u&lt;/code&gt;.</source>
          <target state="translated">Literales de expresi&amp;oacute;n regular, por ejemplo, &lt;code&gt;/abc/u&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a0ccd845025a375ba8f53989cf7554162e8cbfee" translate="yes" xml:space="preserve">
          <source>Regular expressions can be very complex and difficult to understand, which is why it's important to keep them as simple as possible in order to avoid mistakes. One of the more error-prone things you can do with a regular expression is to use more than one space, such as:</source>
          <target state="translated">Las expresiones regulares pueden ser muy complejas y difíciles de entender,por lo que es importante mantenerlas lo más simples posible para evitar errores.Una de las cosas más propensas a errores que se pueden hacer con una expresión regular es utilizar más de un espacio,como:</target>
        </trans-unit>
        <trans-unit id="73df01ef95fe676ecd6771adb485003ded6e2733" translate="yes" xml:space="preserve">
          <source>Related Rules</source>
          <target state="translated">Reglas relacionadas</target>
        </trans-unit>
        <trans-unit id="33749d1fd374471a64ca2130b8acf29edc1c7f83" translate="yes" xml:space="preserve">
          <source>Related rules</source>
          <target state="translated">Reglas relacionadas</target>
        </trans-unit>
        <trans-unit id="c8ca31e64125f97916f5430dc1a846a8fb66cb93" translate="yes" xml:space="preserve">
          <source>Relational Operators: &lt;code&gt;&quot;in&quot;&lt;/code&gt;, &lt;code&gt;&quot;instanceof&quot;&lt;/code&gt;</source>
          <target state="translated">Operadores relacionales: &lt;code&gt;&quot;in&quot;&lt;/code&gt; , &lt;code&gt;&quot;instanceof&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9e4f647ac04e2d41dbb5b8e09ff6b1cdb35b950d" translate="yes" xml:space="preserve">
          <source>Relative glob patterns</source>
          <target state="translated">Patrones globales relativos</target>
        </trans-unit>
        <trans-unit id="e67d73e5c8870b0aee2e6a5b9e1177d2a9866243" translate="yes" xml:space="preserve">
          <source>Remember that ESLint is completely pluggable, which means you can create your own rules and distribute them using plugins. We did this on purpose because we don't want to be the gatekeepers for all possible rules. Even if we don't accept a rule into the core, that doesn't mean you can't have the exact rule that you want. See the &lt;a href=&quot;../working-with-rules&quot;&gt;working with rules&lt;/a&gt; and &lt;a href=&quot;../working-with-plugins&quot;&gt;working with plugins&lt;/a&gt; documentation for more information.</source>
          <target state="translated">Recuerde que ESLint es completamente conectable, lo que significa que puede crear sus propias reglas y distribuirlas mediante complementos. Hicimos esto a prop&amp;oacute;sito porque no queremos ser los guardianes de todas las reglas posibles. Incluso si no aceptamos una regla en el n&amp;uacute;cleo, eso no significa que no pueda tener la regla exacta que desea. Consulte la documentaci&amp;oacute;n de &lt;a href=&quot;../working-with-rules&quot;&gt;trabajo con reglas&lt;/a&gt; y &lt;a href=&quot;../working-with-plugins&quot;&gt;trabajo con complementos&lt;/a&gt; para obtener m&amp;aacute;s informaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="960f6a4b27df973ccb71be9fd4f6a93b7639f03e" translate="yes" xml:space="preserve">
          <source>Remove the severity from the schema</source>
          <target state="translated">Eliminar la severidad del esquema</target>
        </trans-unit>
        <trans-unit id="b5e77c5c02a90c01b16fea8f21a1083425ebe0e0" translate="yes" xml:space="preserve">
          <source>Removed</source>
          <target state="translated">Removed</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
