<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="git">
    <body>
      <group id="git">
        <trans-unit id="23b7a95dc6b5470754cb8fce020cce7d3aab1ac0" translate="yes" xml:space="preserve">
          <source>Due to the non-quarantine nature of the &lt;code&gt;fetch.fsckObjects&lt;/code&gt; implementation it cannot be relied upon to leave the object store clean like &lt;code&gt;receive.fsckObjects&lt;/code&gt; can.</source>
          <target state="translated">Debido a la naturaleza no cuarentenaria de la &lt;code&gt;fetch.fsckObjects&lt;/code&gt; aplicaci&amp;oacute;n no puede ser invocada para dejar el almac&amp;eacute;n de objetos limpios como &lt;code&gt;receive.fsckObjects&lt;/code&gt; pueda.</target>
        </trans-unit>
        <trans-unit id="68e19d88dc6eefe7753376e94bb2d970e8771158" translate="yes" xml:space="preserve">
          <source>Dumps the internal marks table to &amp;lt;file&amp;gt; when complete. Marks are written one per line as &lt;code&gt;:markid SHA-1&lt;/code&gt;. Frontends can use this file to validate imports after they have been completed, or to save the marks table across incremental runs. As &amp;lt;file&amp;gt; is only opened and truncated at checkpoint (or completion) the same path can also be safely given to --import-marks.</source>
          <target state="translated">Vuelca la tabla de marcas internas en &amp;lt;archivo&amp;gt; cuando se completa. Las marcas se escriben una por l&amp;iacute;nea como &lt;code&gt;:markid SHA-1&lt;/code&gt; . Los frontends pueden usar este archivo para validar las importaciones despu&amp;eacute;s de que se hayan completado o para guardar la tabla de marcas en ejecuciones incrementales. Como &amp;lt;file&amp;gt; solo se abre y se trunca en el punto de control (o finalizaci&amp;oacute;n), la misma ruta tambi&amp;eacute;n se puede asignar con seguridad a --import-marks.</target>
        </trans-unit>
        <trans-unit id="d5f9d9df34707e95a5d4be8e3705f8049d385295" translate="yes" xml:space="preserve">
          <source>Dumps the internal marks table to &amp;lt;file&amp;gt; when complete. Marks are written one per line as &lt;code&gt;:markid SHA-1&lt;/code&gt;. Only marks for revisions are dumped; marks for blobs are ignored. Backends can use this file to validate imports after they have been completed, or to save the marks table across incremental runs. As &amp;lt;file&amp;gt; is only opened and truncated at completion, the same path can also be safely given to --import-marks. The file will not be written if no new object has been marked/exported.</source>
          <target state="translated">Vuelca la tabla de marcas internas en &amp;lt;archivo&amp;gt; cuando se completa. Las marcas se escriben una por l&amp;iacute;nea como &lt;code&gt;:markid SHA-1&lt;/code&gt; . Solo se descartan las marcas por revisiones; las marcas para manchas se ignoran. Los backends pueden usar este archivo para validar las importaciones despu&amp;eacute;s de que se hayan completado o para guardar la tabla de marcas en ejecuciones incrementales. Como &amp;lt;file&amp;gt; solo se abre y se trunca al finalizar, la misma ruta tambi&amp;eacute;n se puede asignar con seguridad a --import-marks. El archivo no se escribir&amp;aacute; si no se ha marcado / exportado ning&amp;uacute;n objeto nuevo.</target>
        </trans-unit>
        <trans-unit id="aec3ad9b971b7ff8255345b154c94258f560f0d2" translate="yes" xml:space="preserve">
          <source>During a merge, the working tree files are updated to reflect the result of the merge. Among the changes made to the common ancestor&amp;rsquo;s version, non-overlapping ones (that is, you changed an area of the file while the other side left that area intact, or vice versa) are incorporated in the final result verbatim. When both sides made changes to the same area, however, Git cannot randomly pick one side over the other, and asks you to resolve it by leaving what both sides did to that area.</source>
          <target state="translated">Durante una fusi&amp;oacute;n, los archivos del &amp;aacute;rbol de trabajo se actualizan para reflejar el resultado de la fusi&amp;oacute;n. Entre los cambios realizados en la versi&amp;oacute;n del antepasado com&amp;uacute;n, los que no se superponen (es decir, cambi&amp;oacute; un &amp;aacute;rea del archivo mientras que el otro lado dej&amp;oacute; esa &amp;aacute;rea intacta, o viceversa) se incorporan en el resultado final textualmente. Sin embargo, cuando ambos lados hicieron cambios en la misma &amp;aacute;rea, Git no puede elegir al azar un lado sobre el otro, y le pide que lo resuelva dejando lo que ambos lados hicieron en esa &amp;aacute;rea.</target>
        </trans-unit>
        <trans-unit id="d0b0f9a14f12b4d06a31ddb153754d3c653f1bb2" translate="yes" xml:space="preserve">
          <source>During fsck git may find issues with legacy data which wouldn&amp;rsquo;t be generated by current versions of git, and which wouldn&amp;rsquo;t be sent over the wire if &lt;code&gt;transfer.fsckObjects&lt;/code&gt; was set. This feature is intended to support working with legacy repositories containing such data.</source>
          <target state="translated">Durante fsck, git puede encontrar problemas con los datos heredados que no ser&amp;iacute;an generados por las versiones actuales de git, y que no se enviar&amp;iacute;an por cable si &lt;code&gt;transfer.fsckObjects&lt;/code&gt; estuviera configurado. Esta funci&amp;oacute;n est&amp;aacute; destinada a admitir el trabajo con repositorios heredados que contienen dichos datos.</target>
        </trans-unit>
        <trans-unit id="0eedfc5c015b233e6082e4e46ded41bc5da25b25" translate="yes" xml:space="preserve">
          <source>During the merge, the index holds three versions of each file. Each of these three &quot;file stages&quot; represents a different version of the file:</source>
          <target state="translated">Durante la fusión,el índice contiene tres versiones de cada archivo.Cada una de estas tres &quot;etapas del archivo&quot; representa una versión diferente del archivo:</target>
        </trans-unit>
        <trans-unit id="338f11841fc746012903e84c16b88356c6508da5" translate="yes" xml:space="preserve">
          <source>During the normal execution of several Git commands, call-outs are made to optional scripts that allow a developer to add functionality or checking. Typically, the hooks allow for a command to be pre-verified and potentially aborted, and allow for a post-notification after the operation is done. The hook scripts are found in the &lt;code&gt;$GIT_DIR/hooks/&lt;/code&gt; directory, and are enabled by simply removing the &lt;code&gt;.sample&lt;/code&gt; suffix from the filename. In earlier versions of Git you had to make them executable.</source>
          <target state="translated">Durante la ejecuci&amp;oacute;n normal de varios comandos de Git, se realizan llamadas a scripts opcionales que permiten al desarrollador agregar funcionalidad o verificaci&amp;oacute;n. Por lo general, los ganchos permiten que un comando sea verificado previamente y potencialmente abortado, y permiten una notificaci&amp;oacute;n posterior despu&amp;eacute;s de que se realiza la operaci&amp;oacute;n. Los scripts de gancho se encuentran en el &lt;code&gt;$GIT_DIR/hooks/&lt;/code&gt; y se habilitan simplemente eliminando el sufijo &lt;code&gt;.sample&lt;/code&gt; del nombre del archivo. En versiones anteriores de Git, ten&amp;iacute;as que hacerlas ejecutables.</target>
        </trans-unit>
        <trans-unit id="0c9afe2970bcd3db38ea14d913886ce00bad52d6" translate="yes" xml:space="preserve">
          <source>E.g, &lt;code&gt;format:&quot;The author of %h was %an, %ar%nThe title was &amp;gt;&amp;gt;%s&amp;lt;&amp;lt;%n&quot;&lt;/code&gt; would show something like this:</source>
          <target state="translated">Por ejemplo, el &lt;code&gt;format:&quot;The author of %h was %an, %ar%nThe title was &amp;gt;&amp;gt;%s&amp;lt;&amp;lt;%n&quot;&lt;/code&gt; mostrar&amp;iacute;a algo como esto:</target>
        </trans-unit>
        <trans-unit id="f48496348ce670a87dfe7a89fce6efc7850de45b" translate="yes" xml:space="preserve">
          <source>EVENT Format</source>
          <target state="translated">Formato del evento</target>
        </trans-unit>
        <trans-unit id="6c7b6f5f1d21b52d57339a7396d0f52ff8e6b468" translate="yes" xml:space="preserve">
          <source>Each &quot;index&quot; entry has two bits worth of &quot;stage&quot; state. stage 0 is the normal one, and is the only one you&amp;rsquo;d see in any kind of normal use.</source>
          <target state="translated">Cada entrada de &quot;&amp;iacute;ndice&quot; tiene dos bits de estado de &quot;etapa&quot;. La etapa 0 es la normal y es la &amp;uacute;nica que ver&amp;iacute;a en cualquier tipo de uso normal.</target>
        </trans-unit>
        <trans-unit id="81f54a7f6a9b658757fad1b0dd5d1a9971c93ea4" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;%feature&lt;/code&gt; hash element is a hash reference and has the following structure:</source>
          <target state="translated">Cada elemento hash &lt;code&gt;%feature&lt;/code&gt; es una referencia hash y tiene la siguiente estructura:</target>
        </trans-unit>
        <trans-unit id="b26592933b83f1f492565be647afc2706b49b317" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;-p&lt;/code&gt; indicates the id of a parent commit object.</source>
          <target state="translated">Cada &lt;code&gt;-p&lt;/code&gt; indica la identificaci&amp;oacute;n de un objeto de confirmaci&amp;oacute;n principal.</target>
        </trans-unit>
        <trans-unit id="e2a09fd45cc17448d565b97a290193dc0600d3ce" translate="yes" xml:space="preserve">
          <source>Each action is implemented as a subroutine, and must be present in %actions hash. Some actions are disabled by default, and must be turned on via feature mechanism. For example to enable &lt;code&gt;blame&lt;/code&gt; view add the following to gitweb configuration file:</source>
          <target state="translated">Cada acci&amp;oacute;n se implementa como una subrutina y debe estar presente en% actions hash. Algunas acciones est&amp;aacute;n deshabilitadas de forma predeterminada y deben activarse mediante el mecanismo de funciones. Por ejemplo, para habilitar la vista de &lt;code&gt;blame&lt;/code&gt; , agregue lo siguiente al archivo de configuraci&amp;oacute;n de gitweb:</target>
        </trans-unit>
        <trans-unit id="4a431caa46e2fb6d34e98615d6339148b9977f86" translate="yes" xml:space="preserve">
          <source>Each attribute can be in one of these states for a given path:</source>
          <target state="translated">Cada atributo puede estar en uno de estos estados para un camino determinado:</target>
        </trans-unit>
        <trans-unit id="80fa6b90c4af909cefe5f1fba5144ae109300923" translate="yes" xml:space="preserve">
          <source>Each blame entry always starts with a line of:</source>
          <target state="translated">Cada entrada de culpa siempre comienza con una línea de:</target>
        </trans-unit>
        <trans-unit id="2235e2f29b242d64317e253060371b53dfcfe3a6" translate="yes" xml:space="preserve">
          <source>Each command for the &lt;code&gt;proc-receive&lt;/code&gt; hook may point to a pseudo-reference and always has a zero-old as its old-oid, while the &lt;code&gt;proc-receive&lt;/code&gt; hook may update an alternate reference and the alternate reference may exist already with a non-zero old-oid. For this case, this hook will use &quot;option&quot; directives to report extended attributes for the reference given by the leading &quot;ok&quot; directive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="890525cbde82d7616c57fdec079512ee27038efd" translate="yes" xml:space="preserve">
          <source>Each commit imported by &lt;code&gt;git p4&lt;/code&gt; has a line at the end of the log message indicating the p4 depot location and change number. This line is used by later &lt;code&gt;git p4 sync&lt;/code&gt; operations to know which p4 changes are new.</source>
          <target state="translated">Cada confirmaci&amp;oacute;n importada por &lt;code&gt;git p4&lt;/code&gt; tiene una l&amp;iacute;nea al final del mensaje de registro que indica la ubicaci&amp;oacute;n del dep&amp;oacute;sito p4 y el n&amp;uacute;mero de cambio. Esta l&amp;iacute;nea es utilizada por operaciones de &lt;code&gt;git p4 sync&lt;/code&gt; posteriores para saber qu&amp;eacute; cambios de p4 son nuevos.</target>
        </trans-unit>
        <trans-unit id="0d7aba1c95771e1fa299e8f177a2cb8fdb72c0d3" translate="yes" xml:space="preserve">
          <source>Each event is a JSON-object containing multiple key/value pairs written as a single line and followed by a LF.</source>
          <target state="translated">Cada evento es un objeto JSON que contiene múltiples pares clave/valor escritos en una sola línea y seguidos por un LF.</target>
        </trans-unit>
        <trans-unit id="93024a055d9225f66feed1627e9698b1aeced23b" translate="yes" xml:space="preserve">
          <source>Each group of changes (called a &quot;hunk&quot;) in the textual diff output is prefixed with a line of the form:</source>
          <target state="translated">Cada grupo de cambios (llamado &quot;hunk&quot;)en la salida del diff textual se prefija con una línea de la forma:</target>
        </trans-unit>
        <trans-unit id="227cc42fafaaa73089d47f3a2585fc225301de56" translate="yes" xml:space="preserve">
          <source>Each helper is specified by a single string in the configuration variable &lt;code&gt;credential.helper&lt;/code&gt; (and others, see &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;). The string is transformed by Git into a command to be executed using these rules:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82afba91b0fbc1511d9d66475a7a1226634e3792" translate="yes" xml:space="preserve">
          <source>Each instruction has variable length. Instruction type is determined by the seventh bit of the first octet. The following diagrams follow the convention in RFC 1951 (Deflate compressed data format).</source>
          <target state="translated">Cada instrucción tiene una longitud variable.El tipo de instrucción está determinado por el séptimo bit del primer octeto.Los siguientes diagramas siguen la convención del RFC 1951 (Deflate compressed data format).</target>
        </trans-unit>
        <trans-unit id="e70c1e613f5f534aeea8db8eaf0d4059228f6833" translate="yes" xml:space="preserve">
          <source>Each line in &lt;code&gt;gitattributes&lt;/code&gt; file is of form:</source>
          <target state="translated">Cada l&amp;iacute;nea en el archivo &lt;code&gt;gitattributes&lt;/code&gt; tiene la forma:</target>
        </trans-unit>
        <trans-unit id="1c072d6c2cdd76489a2967b2e7ee81381c672ff3" translate="yes" xml:space="preserve">
          <source>Each line in a &lt;code&gt;gitignore&lt;/code&gt; file specifies a pattern. When deciding whether to ignore a path, Git normally checks &lt;code&gt;gitignore&lt;/code&gt; patterns from multiple sources, with the following order of precedence, from highest to lowest (within one level of precedence, the last matching pattern decides the outcome):</source>
          <target state="translated">Cada l&amp;iacute;nea de un archivo &lt;code&gt;gitignore&lt;/code&gt; especifica un patr&amp;oacute;n. Al decidir si ignorar una ruta, Git normalmente verifica los patrones de &lt;code&gt;gitignore&lt;/code&gt; de m&amp;uacute;ltiples fuentes, con el siguiente orden de precedencia, de mayor a menor (dentro de un nivel de precedencia, el &amp;uacute;ltimo patr&amp;oacute;n coincidente decide el resultado):</target>
        </trans-unit>
        <trans-unit id="d043aa624315c625b39f19b7c5a71a08d0fbefd2" translate="yes" xml:space="preserve">
          <source>Each line of options has this format:</source>
          <target state="translated">Cada línea de opciones tiene este formato:</target>
        </trans-unit>
        <trans-unit id="ce263659ab1a0135f8fda2a68c8ecc96cb2e4b52" translate="yes" xml:space="preserve">
          <source>Each line of the &lt;code&gt;git ls-files --unmerged&lt;/code&gt; output begins with the blob mode bits, blob SHA-1, 'stage number', and the filename. The 'stage number' is Git&amp;rsquo;s way to say which tree it came from: stage 1 corresponds to the &lt;code&gt;$orig&lt;/code&gt; tree, stage 2 to the &lt;code&gt;HEAD&lt;/code&gt; tree, and stage 3 to the &lt;code&gt;$target&lt;/code&gt; tree.</source>
          <target state="translated">Cada l&amp;iacute;nea de la salida &lt;code&gt;git ls-files --unmerged&lt;/code&gt; comienza con los bits del modo blob, blob SHA-1, 'n&amp;uacute;mero de etapa' y el nombre del archivo. El 'n&amp;uacute;mero de etapa' es la forma que tiene Git de decir de qu&amp;eacute; &amp;aacute;rbol proviene: la etapa 1 corresponde al &amp;aacute;rbol &lt;code&gt;$orig&lt;/code&gt; , la etapa 2 al &amp;aacute;rbol &lt;code&gt;HEAD&lt;/code&gt; y la etapa 3 al &amp;aacute;rbol &lt;code&gt;$target&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a2e72e23a1ee3c2cf405696e86ad1ef3c4d6f422" translate="yes" xml:space="preserve">
          <source>Each line of the &lt;code&gt;git ls-files --unmerged&lt;/code&gt; output begins with the blob mode bits, blob SHA-1, &lt;code&gt;stage number&lt;/code&gt;, and the filename. The &lt;code&gt;stage number&lt;/code&gt; is Git&amp;rsquo;s way to say which tree it came from: stage 1 corresponds to the &lt;code&gt;$orig&lt;/code&gt; tree, stage 2 to the &lt;code&gt;HEAD&lt;/code&gt; tree, and stage 3 to the &lt;code&gt;$target&lt;/code&gt; tree.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac1b4287ed9a44af81d40c798f15ea7666d1fc7e" translate="yes" xml:space="preserve">
          <source>Each linked working tree has a private sub-directory in the repository&amp;rsquo;s $GIT_DIR/worktrees directory. The private sub-directory&amp;rsquo;s name is usually the base name of the linked working tree&amp;rsquo;s path, possibly appended with a number to make it unique. For example, when &lt;code&gt;$GIT_DIR=/path/main/.git&lt;/code&gt; the command &lt;code&gt;git worktree add /path/other/test-next next&lt;/code&gt; creates the linked working tree in &lt;code&gt;/path/other/test-next&lt;/code&gt; and also creates a &lt;code&gt;$GIT_DIR/worktrees/test-next&lt;/code&gt; directory (or &lt;code&gt;$GIT_DIR/worktrees/test-next1&lt;/code&gt; if &lt;code&gt;test-next&lt;/code&gt; is already taken).</source>
          <target state="translated">Cada &amp;aacute;rbol de trabajo vinculado tiene un subdirectorio privado en el directorio $ GIT_DIR / worktrees del repositorio. El nombre del subdirectorio privado suele ser el nombre base de la ruta del &amp;aacute;rbol de trabajo vinculado, posiblemente agregado con un n&amp;uacute;mero para hacerlo &amp;uacute;nico. Por ejemplo, cuando &lt;code&gt;$GIT_DIR=/path/main/.git&lt;/code&gt; el comando &lt;code&gt;git worktree add /path/other/test-next next&lt;/code&gt; crea el &amp;aacute;rbol de trabajo vinculado en &lt;code&gt;/path/other/test-next&lt;/code&gt; y tambi&amp;eacute;n crea un &lt;code&gt;$GIT_DIR/worktrees/test-next&lt;/code&gt; directorio (o &lt;code&gt;$GIT_DIR/worktrees/test-next1&lt;/code&gt; si &lt;code&gt;test-next&lt;/code&gt; ya est&amp;aacute; tomado).</target>
        </trans-unit>
        <trans-unit id="08c05bcbce27635e929ab0aeef0154946c733deb" translate="yes" xml:space="preserve">
          <source>Each linked working tree has a private sub-directory in the repository&amp;rsquo;s &lt;code&gt;$GIT_DIR/worktrees&lt;/code&gt; directory. The private sub-directory&amp;rsquo;s name is usually the base name of the linked working tree&amp;rsquo;s path, possibly appended with a number to make it unique. For example, when &lt;code&gt;$GIT_DIR=/path/main/.git&lt;/code&gt; the command &lt;code&gt;git worktree add /path/other/test-next next&lt;/code&gt; creates the linked working tree in &lt;code&gt;/path/other/test-next&lt;/code&gt; and also creates a &lt;code&gt;$GIT_DIR/worktrees/test-next&lt;/code&gt; directory (or &lt;code&gt;$GIT_DIR/worktrees/test-next1&lt;/code&gt; if &lt;code&gt;test-next&lt;/code&gt; is already taken).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e13434b85bdba9c36937ef9acd2f33c427adfe8" translate="yes" xml:space="preserve">
          <source>Each of the attribute requirements for the path takes one of these forms:</source>
          <target state="translated">Cada uno de los requisitos de atributos para el camino toma una de estas formas:</target>
        </trans-unit>
        <trans-unit id="58398b8104bc9622bb9865f6e7c9793546a9471d" translate="yes" xml:space="preserve">
          <source>Each of the four branches is usually a direct descendant of the one above it.</source>
          <target state="translated">Cada una de las cuatro ramas suele ser un descendiente directo de la anterior.</target>
        </trans-unit>
        <trans-unit id="dfc2dc1cc1f2e4f6e3d7ce6e6191c01415d0880b" translate="yes" xml:space="preserve">
          <source>Each of these options must appear first on the command line.</source>
          <target state="translated">Cada una de estas opciones debe aparecer primero en la línea de comando.</target>
        </trans-unit>
        <trans-unit id="79d9036a8f3f011f6caea432d8fa6198deb15d8c" translate="yes" xml:space="preserve">
          <source>Each other line contains a single pattern.</source>
          <target state="translated">Cada línea contiene un único patrón.</target>
        </trans-unit>
        <trans-unit id="36e6db0cb81d09d2c644d8a7c4b702648cc38f78" translate="yes" xml:space="preserve">
          <source>Each patch can be applied in order.</source>
          <target state="translated">Cada parche puede aplicarse en orden.</target>
        </trans-unit>
        <trans-unit id="6d39c2ae5926cd9b5a6631ab32e0430d3e598f09" translate="yes" xml:space="preserve">
          <source>Each patch includes a single logical change, together with a message explaining the change.</source>
          <target state="translated">Cada parche incluye un único cambio lógico,junto con un mensaje que explica el cambio.</target>
        </trans-unit>
        <trans-unit id="493d693b4f2b5ea37d0460dc9ff9f76e6d401041" translate="yes" xml:space="preserve">
          <source>Each pattern pair consists of the source side (before the colon) and the destination side (after the colon). The ref to be pushed is determined by finding a match that matches the source side, and where it is pushed is determined by using the destination side.</source>
          <target state="translated">Cada par de patrones consiste en el lado de la fuente (antes del colon)y el lado del destino (después del colon).El árbitro que se va a empujar se determina encontrando una coincidencia que coincida con el lado de origen,y donde se empuja se determina utilizando el lado de destino.</target>
        </trans-unit>
        <trans-unit id="b313cea753099ce8f3968fb8a5c9e65e86c611ac" translate="yes" xml:space="preserve">
          <source>Each pattern pair consists of the source side (before the colon) and the destination side (after the colon). The ref to be pushed is determined by finding a match that matches the source side, and where it is pushed is determined by using the destination side. The rules used to match a ref are the same rules used by &lt;code&gt;git rev-parse&lt;/code&gt; to resolve a symbolic ref name. See &lt;a href=&quot;git-rev-parse&quot;&gt;git-rev-parse[1]&lt;/a&gt;.</source>
          <target state="translated">Cada par de patrones consta del lado de origen (antes de los dos puntos) y del lado de destino (despu&amp;eacute;s de los dos puntos). La referencia que se empujar&amp;aacute; se determina al encontrar una coincidencia que coincida con el lado de origen, y d&amp;oacute;nde se empuja se determina utilizando el lado de destino. Las reglas utilizadas para hacer coincidir una referencia son las mismas que utiliza &lt;code&gt;git rev-parse&lt;/code&gt; para resolver un nombre de referencia simb&amp;oacute;lico. Consulte &lt;a href=&quot;git-rev-parse&quot;&gt;git-rev-parse [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b2aa7f4f33bfb7b26b4af691cb7e2c6d52612b8b" translate="yes" xml:space="preserve">
          <source>Each remote helper is expected to support only a subset of commands. The operations a helper supports are declared to Git in the response to the &lt;code&gt;capabilities&lt;/code&gt; command (see COMMANDS, below).</source>
          <target state="translated">Se espera que cada asistente remoto admita solo un subconjunto de comandos. Las operaciones que admite un ayudante se declaran en Git en respuesta al comando de &lt;code&gt;capabilities&lt;/code&gt; (ver COMANDOS, m&amp;aacute;s abajo).</target>
        </trans-unit>
        <trans-unit id="640db855296fc622a8934e713d8f1835acdff3f5" translate="yes" xml:space="preserve">
          <source>Each time a new shared index file is created, the old shared index files are deleted if their modification time is older than what is specified by the splitIndex.sharedIndexExpire config variable (see &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;).</source>
          <target state="translated">Cada vez que se crea un nuevo archivo de &amp;iacute;ndice compartido, los archivos de &amp;iacute;ndice compartidos antiguos se eliminan si su tiempo de modificaci&amp;oacute;n es anterior al especificado por la variable de configuraci&amp;oacute;n splitIndex.sharedIndexExpire (consulte &lt;a href=&quot;git-config&quot;&gt;git-config [1]&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="6b67247d73793e579b74a9b09ccf935b5a398f89" translate="yes" xml:space="preserve">
          <source>Each time a superproject update moves a populated submodule (e.g. when switching between commits before and after the move) a stale submodule checkout will remain in the old location and an empty directory will appear in the new location. To populate the submodule again in the new location the user will have to run &quot;git submodule update&quot; afterwards. Removing the old directory is only safe when it uses a gitfile, as otherwise the history of the submodule will be deleted too. Both steps will be obsolete when recursive submodule update has been implemented.</source>
          <target state="translated">Cada vez que una actualización de superproyecto mueve un submódulo poblado (por ejemplo,cuando se cambia entre confirmaciones antes y después del movimiento),la salida de un submódulo rancio permanecerá en la ubicación anterior y aparecerá un directorio vacío en la nueva ubicación.Para volver a poblar el submódulo en la nueva ubicación,el usuario tendrá que ejecutar &quot;git submodule update&quot; después.La eliminación del directorio antiguo sólo es segura cuando se usa un archivo git,ya que de lo contrario la historia del submódulo también se borrará.Ambos pasos quedarán obsoletos cuando se haya implementado la actualización recursiva de submódulos.</target>
        </trans-unit>
        <trans-unit id="70398d4e57fc6de31488380bf7caac1138d58530" translate="yes" xml:space="preserve">
          <source>Each time a superproject update removes a populated submodule (e.g. when switching between commits before and after the removal) a stale submodule checkout will remain in the old location. Removing the old directory is only safe when it uses a gitfile, as otherwise the history of the submodule will be deleted too. This step will be obsolete when recursive submodule update has been implemented.</source>
          <target state="translated">Cada vez que una actualización de superproyecto elimina un submódulo poblado (por ejemplo,al cambiar entre confirmaciones antes y después de la eliminación),la salida de un submódulo obsoleto permanecerá en la ubicación anterior.La eliminación del directorio antiguo sólo es segura cuando se utiliza un archivo git,ya que de lo contrario también se borrará el historial del submódulo.Este paso será obsoleto cuando se haya implementado la actualización recursiva de submódulos.</target>
        </trans-unit>
        <trans-unit id="49035126eea24f612f322a34d235d8eeac55e17a" translate="yes" xml:space="preserve">
          <source>Each time you resolve the conflicts in a file and update the index:</source>
          <target state="translated">Cada vez que resuelves los conflictos en un archivo y actualizas el índice:</target>
        </trans-unit>
        <trans-unit id="91df855bba63011edb2c56419d0fb8efa1e50e11" translate="yes" xml:space="preserve">
          <source>Earlier we said that trivial merges are done inside &lt;code&gt;git read-tree -m&lt;/code&gt;. For example, if the file did not change from &lt;code&gt;$orig&lt;/code&gt; to &lt;code&gt;HEAD&lt;/code&gt; or &lt;code&gt;$target&lt;/code&gt;, or if the file changed from &lt;code&gt;$orig&lt;/code&gt; to &lt;code&gt;HEAD&lt;/code&gt; and &lt;code&gt;$orig&lt;/code&gt; to &lt;code&gt;$target&lt;/code&gt; the same way, obviously the final outcome is what is in &lt;code&gt;HEAD&lt;/code&gt;. What the above example shows is that file &lt;code&gt;hello.c&lt;/code&gt; was changed from &lt;code&gt;$orig&lt;/code&gt; to &lt;code&gt;HEAD&lt;/code&gt; and &lt;code&gt;$orig&lt;/code&gt; to &lt;code&gt;$target&lt;/code&gt; in a different way. You could resolve this by running your favorite 3-way merge program, e.g. &lt;code&gt;diff3&lt;/code&gt;, &lt;code&gt;merge&lt;/code&gt;, or Git&amp;rsquo;s own merge-file, on the blob objects from these three stages yourself, like this:</source>
          <target state="translated">Anteriormente dijimos que las fusiones triviales se realizan dentro de &lt;code&gt;git read-tree -m&lt;/code&gt; . Por ejemplo, si el archivo no cambi&amp;oacute; de &lt;code&gt;$orig&lt;/code&gt; a &lt;code&gt;HEAD&lt;/code&gt; o &lt;code&gt;$target&lt;/code&gt; , o si el archivo cambi&amp;oacute; de &lt;code&gt;$orig&lt;/code&gt; a &lt;code&gt;HEAD&lt;/code&gt; y &lt;code&gt;$orig&lt;/code&gt; a &lt;code&gt;$target&lt;/code&gt; la misma manera, obviamente el resultado final es lo que est&amp;aacute; en &lt;code&gt;HEAD&lt;/code&gt; . Lo que muestra el ejemplo anterior es que el archivo &lt;code&gt;hello.c&lt;/code&gt; se cambi&amp;oacute; de &lt;code&gt;$orig&lt;/code&gt; a &lt;code&gt;HEAD&lt;/code&gt; y &lt;code&gt;$orig&lt;/code&gt; a &lt;code&gt;$target&lt;/code&gt; de una manera diferente. Puede resolver esto ejecutando su programa de combinaci&amp;oacute;n de 3 v&amp;iacute;as favorito, por ejemplo, &lt;code&gt;diff3&lt;/code&gt; , &lt;code&gt;merge&lt;/code&gt; , o el propio archivo de combinaci&amp;oacute;n de Git, en los objetos blob de estas tres etapas, as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="cf0ee6adeaeadff98f7e216b0d8eb81b31226098" translate="yes" xml:space="preserve">
          <source>Earlier, we saw that one file under &lt;code&gt;.git/objects/??/&lt;/code&gt; directory is stored for each Git object you create. This representation is efficient to create atomically and safely, but not so convenient to transport over the network. Since Git objects are immutable once they are created, there is a way to optimize the storage by &quot;packing them together&quot;. The command</source>
          <target state="translated">Anteriormente, vimos que un archivo en el &lt;code&gt;.git/objects/??/&lt;/code&gt; se almacena para cada objeto Git que crea. Esta representaci&amp;oacute;n es eficiente para crear de forma at&amp;oacute;mica y segura, pero no tan conveniente para transportar a trav&amp;eacute;s de la red. Dado que los objetos de Git son inmutables una vez que se crean, hay una manera de optimizar el almacenamiento al &quot;empaquetarlos juntos&quot;. El comando</target>
        </trans-unit>
        <trans-unit id="b4c8a83331a00582f4030fa5296077717cda7730" translate="yes" xml:space="preserve">
          <source>Ease of use. It is often much simpler to write a binary to text transformation than it is to perform your own diff. In many cases, existing programs can be used as textconv filters (e.g., exif, odt2txt).</source>
          <target state="translated">Facilidad de uso.A menudo es mucho más simple escribir una transformación de binario a texto que realizar tu propio diff.En muchos casos,los programas existentes pueden ser usados como filtros de texto-conv (por ejemplo,exif,odt2txt).</target>
        </trans-unit>
        <trans-unit id="b4d52eb229c8c557c44ab0035085b989953060f9" translate="yes" xml:space="preserve">
          <source>Easily extendable as capabilities are moved into their own section of the protocol, no longer being hidden behind a NUL byte and limited by the size of a pkt-line</source>
          <target state="translated">Fácilmente ampliable a medida que las capacidades se trasladan a su propia sección del protocolo,ya no se esconden detrás de un byte NUL y están limitadas por el tamaño de una línea pkt-.</target>
        </trans-unit>
        <trans-unit id="c0ecd6c3f25fc4cb4d76566a21fece2ca48f95ab" translate="yes" xml:space="preserve">
          <source>Easy case: The changes are literally the same.</source>
          <target state="translated">Un caso fácil:Los cambios son literalmente los mismos.</target>
        </trans-unit>
        <trans-unit id="d4f35a5d52e75e1ab425158dcb45339db600d3f4" translate="yes" xml:space="preserve">
          <source>Eclipse 3.0, 3.1.2 on MacOSX (see Eclipse CVS Client Notes)</source>
          <target state="translated">Eclipse 3.0,3.1.2 en MacOSX (ver Eclipse CVS Client Notes)</target>
        </trans-unit>
        <trans-unit id="f5e176bd2c2df731632b9ca0ee7983e84b3d8517" translate="yes" xml:space="preserve">
          <source>Eclipse cvs client notes</source>
          <target state="translated">Notas del cliente de Eclipse cvs</target>
        </trans-unit>
        <trans-unit id="ea0675157801730c96e515d20a6ad02ac765e6d4" translate="yes" xml:space="preserve">
          <source>Edit an object&amp;rsquo;s content interactively. The existing content for &amp;lt;object&amp;gt; is pretty-printed into a temporary file, an editor is launched on the file, and the result is parsed to create a new object of the same type as &amp;lt;object&amp;gt;. A replacement ref is then created to replace &amp;lt;object&amp;gt; with the newly created object. See &lt;a href=&quot;git-var&quot;&gt;git-var[1]&lt;/a&gt; for details about how the editor will be chosen.</source>
          <target state="translated">Edite el contenido de un objeto de forma interactiva. El contenido existente para &amp;lt;objeto&amp;gt; se imprime en un archivo temporal, se inicia un editor en el archivo y el resultado se analiza para crear un nuevo objeto del mismo tipo que &amp;lt;objeto&amp;gt;. Luego se crea una referencia de reemplazo para reemplazar &amp;lt;object&amp;gt; con el objeto reci&amp;eacute;n creado. Consulte &lt;a href=&quot;git-var&quot;&gt;git-var [1]&lt;/a&gt; para obtener detalles sobre c&amp;oacute;mo se elegir&amp;aacute; el editor.</target>
        </trans-unit>
        <trans-unit id="0f76fc2a41a48ffbf729f7fe389bfe3f0b08de68" translate="yes" xml:space="preserve">
          <source>Edit the commit message before committing to SVN. This is off by default for objects that are commits, and forced on when committing tree objects.</source>
          <target state="translated">Edita el mensaje de confirmación antes de confirmar el SVN.Esto está desactivado por defecto para los objetos que se confirman,y forzado cuando se confirman los objetos del árbol.</target>
        </trans-unit>
        <trans-unit id="c92b0955a7a67e8bc1f5f7afd177ec4ed55d0e4c" translate="yes" xml:space="preserve">
          <source>Edit the files in place.</source>
          <target state="translated">Edita los archivos en su lugar.</target>
        </trans-unit>
        <trans-unit id="b87cea5cffa31e45fd50bcd7540894242796f029" translate="yes" xml:space="preserve">
          <source>Edit the notes for a given object (defaults to HEAD).</source>
          <target state="translated">Editar las notas de un objeto dado (por defecto a CABEZA).</target>
        </trans-unit>
        <trans-unit id="81933d4e997d5f22262236af308c480381855b0f" translate="yes" xml:space="preserve">
          <source>Edit the todo list during an interactive rebase.</source>
          <target state="translated">Edite la lista de todo durante una base de datos interactiva.</target>
        </trans-unit>
        <trans-unit id="f392476dbdf7968fc4726a7173f15cf238dddd46" translate="yes" xml:space="preserve">
          <source>Editing patches</source>
          <target state="translated">Editar parches</target>
        </trans-unit>
        <trans-unit id="8f25a859269ca51039632dd6bba28fb061cfb8d4" translate="yes" xml:space="preserve">
          <source>Effects</source>
          <target state="translated">Effects</target>
        </trans-unit>
        <trans-unit id="7002bc1d2bcb94f212817ade973f1baffe1d4266" translate="yes" xml:space="preserve">
          <source>Either a &lt;a href=&quot;#def_working_tree&quot;&gt;working tree&lt;/a&gt;, or a &lt;a href=&quot;#def_tree_object&quot;&gt;tree object&lt;/a&gt; together with the dependent &lt;a href=&quot;#def_blob_object&quot;&gt;blob&lt;/a&gt; and tree objects (i.e. a stored representation of a working tree).</source>
          <target state="translated">Puede ser un &lt;a href=&quot;#def_working_tree&quot;&gt;&amp;aacute;rbol de trabajo&lt;/a&gt; o un &lt;a href=&quot;#def_tree_object&quot;&gt;objeto de &amp;aacute;rbol&lt;/a&gt; junto con el &lt;a href=&quot;#def_blob_object&quot;&gt;blob&lt;/a&gt; dependiente y los objetos de &amp;aacute;rbol (es decir, una representaci&amp;oacute;n almacenada de un &amp;aacute;rbol de trabajo).</target>
        </trans-unit>
        <trans-unit id="bc0851580574fafe647ac3b5e7bd049ba47eee8d" translate="yes" xml:space="preserve">
          <source>Either the hash or the filename under [URL]/refs/ to pull.</source>
          <target state="translated">O bien el hash o el nombre de archivo bajo [URL]/refs/para tirar.</target>
        </trans-unit>
        <trans-unit id="3c055884457fa0453683ceee26bbe41d08beb912" translate="yes" xml:space="preserve">
          <source>Either way, if you have a string of untestable commits, it might happen that the regression you are looking for has been introduced by one of these untestable commits. In this case it&amp;rsquo;s not possible to tell for sure which commit introduced the regression.</source>
          <target state="translated">De cualquier manera, si tiene una cadena de confirmaciones no comprobables, puede suceder que la regresi&amp;oacute;n que est&amp;aacute; buscando haya sido introducida por una de estas confirmaciones no comprobables. En este caso, no es posible saber con certeza qu&amp;eacute; confirmaci&amp;oacute;n introdujo la regresi&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="84add5b2952787581cb9a8851eef63d1ec75d22b" translate="yes" xml:space="preserve">
          <source>Email</source>
          <target state="translated">Email</target>
        </trans-unit>
        <trans-unit id="727400f70d8ff4dd021cd3b46cd8407431accd18" translate="yes" xml:space="preserve">
          <source>Empty commits</source>
          <target state="translated">El vacío se compromete</target>
        </trans-unit>
        <trans-unit id="64c856db8d7087653e88ddbd52d985c5029c26f3" translate="yes" xml:space="preserve">
          <source>Empty context lines that do not have &lt;code&gt;any&lt;/code&gt; whitespace.</source>
          <target state="translated">L&amp;iacute;neas de contexto vac&amp;iacute;as que no tienen &lt;code&gt;any&lt;/code&gt; espacio en blanco.</target>
        </trans-unit>
        <trans-unit id="bc35de4b332414e34ea66c4e2722d1b3c677ee26" translate="yes" xml:space="preserve">
          <source>Enable &quot;sparse checkout&quot; feature. See &lt;a href=&quot;git-sparse-checkout&quot;&gt;git-sparse-checkout[1]&lt;/a&gt; for more information.</source>
          <target state="translated">Habilite la funci&amp;oacute;n de &quot;pago disperso&quot;. Consulte &lt;a href=&quot;git-sparse-checkout&quot;&gt;git-sparse-checkout [1]&lt;/a&gt; para obtener m&amp;aacute;s informaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="b1506b425dd0a659b4e3f7dbaad1db76c1920ca2" translate="yes" xml:space="preserve">
          <source>Enable (1) or disable (0) debug output. If enabled, SMTP commands and replies will be printed. Useful to debug TLS connection and authentication problems.</source>
          <target state="translated">Activar (1)o desactivar (0)la salida de depuración.Si se habilita,se imprimirán los comandos SMTP y las respuestas.Es útil para depurar problemas de conexión y autenticación de TLS.</target>
        </trans-unit>
        <trans-unit id="5ca5f9ffb4eef636571b0732ca8e82f4b117bf57" translate="yes" xml:space="preserve">
          <source>Enable Git&amp;rsquo;s password prompt for the SSL certificate. Otherwise OpenSSL will prompt the user, possibly many times, if the certificate or private key is encrypted. Can be overridden by the &lt;code&gt;GIT_SSL_CERT_PASSWORD_PROTECTED&lt;/code&gt; environment variable.</source>
          <target state="translated">Habilite la solicitud de contrase&amp;ntilde;a de Git para el certificado SSL. De lo contrario, OpenSSL preguntar&amp;aacute; al usuario, posiblemente muchas veces, si el certificado o la clave privada est&amp;aacute;n cifrados. Puede ser anulado por la variable de entorno &lt;code&gt;GIT_SSL_CERT_PASSWORD_PROTECTED&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="22af37288ef16d6e96158d900edae0bae2453223" translate="yes" xml:space="preserve">
          <source>Enable Git&amp;rsquo;s password prompt for the proxy SSL certificate. Otherwise OpenSSL will prompt the user, possibly many times, if the certificate or private key is encrypted. Can be overriden by the &lt;code&gt;GIT_PROXY_SSL_CERT_PASSWORD_PROTECTED&lt;/code&gt; environment variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="202cfbf6c643ccf61c3e6855fb4942a959d7c88c" translate="yes" xml:space="preserve">
          <source>Enable and configure &quot;patches&quot; view, which displays list of commits in email (plain text) output format; see also &lt;a href=&quot;git-format-patch&quot;&gt;git-format-patch[1]&lt;/a&gt;. The value is the maximum number of patches in a patchset generated in &quot;patches&quot; view. Set the &lt;code&gt;default&lt;/code&gt; field to a list containing single item of or to an empty list to disable patch view, or to a list containing a single negative number to remove any limit. Default value is 16.</source>
          <target state="translated">Habilite y configure la vista &quot;parches&quot;, que muestra la lista de confirmaciones en formato de salida de correo electr&amp;oacute;nico (texto sin formato); ver tambi&amp;eacute;n &lt;a href=&quot;git-format-patch&quot;&gt;git-format-patch [1]&lt;/a&gt; . El valor es el n&amp;uacute;mero m&amp;aacute;ximo de parches en un conjunto de parches generado en la vista &quot;parches&quot;. Establezca el campo &lt;code&gt;default&lt;/code&gt; en una lista que contenga un solo elemento de o en una lista vac&amp;iacute;a para deshabilitar la vista de parche, o en una lista que contenga un solo n&amp;uacute;mero negativo para eliminar cualquier l&amp;iacute;mite. El valor predeterminado es 16.</target>
        </trans-unit>
        <trans-unit id="3ec940cc58a7e0a3ca8323d3832e04ecb527aead" translate="yes" xml:space="preserve">
          <source>Enable and configure the &quot;snapshot&quot; action, which allows user to download a compressed archive of any tree or commit, as produced by &lt;a href=&quot;git-archive&quot;&gt;git-archive[1]&lt;/a&gt; and possibly additionally compressed. This can potentially generate high traffic if you have large project.</source>
          <target state="translated">Habilite y configure la acci&amp;oacute;n &quot;instant&amp;aacute;nea&quot;, que permite al usuario descargar un archivo comprimido de cualquier &amp;aacute;rbol o confirmaci&amp;oacute;n, como lo produce &lt;a href=&quot;git-archive&quot;&gt;git-archive [1]&lt;/a&gt; y posiblemente comprimido adicionalmente. Potencialmente, esto puede generar mucho tr&amp;aacute;fico si tiene un proyecto grande.</target>
        </trans-unit>
        <trans-unit id="875ff7ca114490b100a4ae7597d23eb505e57466" translate="yes" xml:space="preserve">
          <source>Enable and configure the ability to change a common time zone for dates in gitweb output via JavaScript. Dates in gitweb output include authordate and committerdate in &quot;commit&quot;, &quot;commitdiff&quot; and &quot;log&quot; views, and taggerdate in &quot;tag&quot; view. Enabled by default.</source>
          <target state="translated">Habilitar y configurar la capacidad de cambiar una zona horaria común para las fechas en la salida de gitweb a través de JavaScript.Las fechas en la salida de gitweb incluyen authordate y committerdate en las vistas &quot;commit&quot;,&quot;commitdiff&quot; y &quot;log&quot;,y taggerdate en la vista &quot;tag&quot;.Habilitado por defecto.</target>
        </trans-unit>
        <trans-unit id="e1b8a656580e419265edb3d93e7fbf612f88122b" translate="yes" xml:space="preserve">
          <source>Enable config options that are new to Git, and are being considered for future defaults. Config settings included here may be added or removed with each release, including minor version updates. These settings may have unintended interactions since they are so new. Please enable this setting if you are interested in providing feedback on experimental features. The new default values are:</source>
          <target state="translated">Habilitar las opciones de configuración que son nuevas para Git,y que están siendo consideradas para futuros incumplimientos.Las opciones de configuración incluidas aquí pueden ser añadidas o eliminadas con cada lanzamiento,incluyendo actualizaciones menores de las versiones.Estos ajustes pueden tener interacciones no deseadas ya que son tan nuevos.Por favor,habilita esta configuración si estás interesado en proporcionar información sobre las características experimentales.Los nuevos valores predeterminados son:</target>
        </trans-unit>
        <trans-unit id="8740fb3b16d2502b6a07330a252227f128574417" translate="yes" xml:space="preserve">
          <source>Enable config options that optimize for repos with many files in the working directory. With many files, commands such as &lt;code&gt;git status&lt;/code&gt; and &lt;code&gt;git checkout&lt;/code&gt; may be slow and these new defaults improve performance:</source>
          <target state="translated">Habilite las opciones de configuraci&amp;oacute;n que optimizan para repositorios con muchos archivos en el directorio de trabajo. Con muchos archivos, los comandos como &lt;code&gt;git status&lt;/code&gt; y &lt;code&gt;git checkout&lt;/code&gt; pueden ser lentos y estos nuevos valores predeterminados mejoran el rendimiento:</target>
        </trans-unit>
        <trans-unit id="b62688a948f16b8896e24589781ecaee64693ffd" translate="yes" xml:space="preserve">
          <source>Enable displaying how much time and how many Git commands it took to generate and display each page in the page footer (at the bottom of page). For example the footer might contain: &quot;This page took 6.53325 seconds and 13 Git commands to generate.&quot; Disabled by default.</source>
          <target state="translated">Permite mostrar cuánto tiempo y cuántos comandos de Git se necesitaron para generar y mostrar cada página en el pie de página (en la parte inferior de la página).Por ejemplo,el pie de página podría contener:&quot;Esta página tardó 6,53325 segundos y 13 comandos Git en generarse&quot;.Desactivado por defecto.</target>
        </trans-unit>
        <trans-unit id="c9bd131fb11e7d8a575c789c619c56115c835cfc" translate="yes" xml:space="preserve">
          <source>Enable displaying remote heads (remote-tracking branches) in the &quot;heads&quot; list. In most cases the list of remote-tracking branches is an unnecessary internal private detail, and this feature is therefore disabled by default. &lt;a href=&quot;git-instaweb&quot;&gt;git-instaweb[1]&lt;/a&gt;, which is usually used to browse local repositories, enables and uses this feature.</source>
          <target state="translated">Habilite la visualizaci&amp;oacute;n de cabezas remotas (ramas de seguimiento remoto) en la lista de &quot;cabezas&quot;. En la mayor&amp;iacute;a de los casos, la lista de sucursales de seguimiento remoto es un detalle privado interno innecesario y, por lo tanto, esta funci&amp;oacute;n est&amp;aacute; desactivada de forma predeterminada. &lt;a href=&quot;git-instaweb&quot;&gt;git-instaweb [1]&lt;/a&gt; , que generalmente se usa para explorar repositorios locales, habilita y usa esta caracter&amp;iacute;stica.</target>
        </trans-unit>
        <trans-unit id="39da6c4d119e094eeb647ff45a2f63bf34d04c9c" translate="yes" xml:space="preserve">
          <source>Enable grep search, which lists the files in currently selected tree (directory) containing the given string; see &lt;a href=&quot;git-grep&quot;&gt;git-grep[1]&lt;/a&gt;. This can be potentially CPU-intensive, of course. Enabled by default.</source>
          <target state="translated">Habilite la b&amp;uacute;squeda grep, que enumera los archivos en el &amp;aacute;rbol (directorio) actualmente seleccionado que contiene la cadena dada; ver &lt;a href=&quot;git-grep&quot;&gt;git-grep [1]&lt;/a&gt; . Esto puede ser potencialmente intensivo en la CPU, por supuesto. Habilitado por defecto.</target>
        </trans-unit>
        <trans-unit id="393e4a210cdfd96d50c3abf9958899d9c77b22c9" translate="yes" xml:space="preserve">
          <source>Enable more strict checking, namely to catch a file mode recorded with g+w bit set, which was created by older versions of Git. Existing repositories, including the Linux kernel, Git itself, and sparse repository have old objects that triggers this check, but it is recommended to check new projects with this flag.</source>
          <target state="translated">Habilitar un control más estricto,es decir,capturar un modo de archivo grabado con el conjunto de bits g+w,que fue creado por versiones anteriores de Git.Los repositorios existentes,incluyendo el núcleo de Linux,el propio Git,y el repositorio disperso tienen objetos antiguos que activan esta comprobación,pero se recomienda comprobar los nuevos proyectos con esta marca.</target>
        </trans-unit>
        <trans-unit id="8081f1426d8047f2f5c9039fb2b3187c4aed51ad" translate="yes" xml:space="preserve">
          <source>Enable multipart/mixed attachments as the default for &lt;code&gt;format-patch&lt;/code&gt;. The value can also be a double quoted string which will enable attachments as the default and set the value as the boundary. See the --attach option in &lt;a href=&quot;git-format-patch&quot;&gt;git-format-patch[1]&lt;/a&gt;.</source>
          <target state="translated">Habilite los archivos adjuntos de varias partes / mixtos como predeterminado para &lt;code&gt;format-patch&lt;/code&gt; . El valor tambi&amp;eacute;n puede ser una cadena entre comillas dobles que habilitar&amp;aacute; los archivos adjuntos como predeterminado y establecer&amp;aacute; el valor como l&amp;iacute;mite. Vea la opci&amp;oacute;n --attach en &lt;a href=&quot;git-format-patch&quot;&gt;git-format-patch [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d973b021f64131371542864785f310ed020b9e66" translate="yes" xml:space="preserve">
          <source>Enable or disable files system monitor feature. These options take effect whatever the value of the &lt;code&gt;core.fsmonitor&lt;/code&gt; configuration variable (see &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;). But a warning is emitted when the change goes against the configured value, as the configured value will take effect next time the index is read and this will remove the intended effect of the option.</source>
          <target state="translated">Activa o desactiva la funci&amp;oacute;n de monitorizaci&amp;oacute;n del sistema de archivos. Estas opciones tienen efecto cualquiera que sea el valor de la variable de configuraci&amp;oacute;n &lt;code&gt;core.fsmonitor&lt;/code&gt; (ver &lt;a href=&quot;git-config&quot;&gt;git-config [1]&lt;/a&gt; ). Pero se emite una advertencia cuando el cambio va en contra del valor configurado, ya que el valor configurado entrar&amp;aacute; en vigencia la pr&amp;oacute;xima vez que se lea el &amp;iacute;ndice y esto eliminar&amp;aacute; el efecto deseado de la opci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="d83423bb73684fa975c3f77aeba009920792cf88" translate="yes" xml:space="preserve">
          <source>Enable or disable split index mode. If split-index mode is already enabled and &lt;code&gt;--split-index&lt;/code&gt; is given again, all changes in $GIT_DIR/index are pushed back to the shared index file.</source>
          <target state="translated">Activa o desactiva el modo de &amp;iacute;ndice dividido. Si el modo de &amp;iacute;ndice dividido ya est&amp;aacute; habilitado y se &lt;code&gt;--split-index&lt;/code&gt; , todos los cambios en $ GIT_DIR / index se devuelven al archivo de &amp;iacute;ndice compartido.</target>
        </trans-unit>
        <trans-unit id="f8b0173e3fdc03c4e03595346f1584e741b798c1" translate="yes" xml:space="preserve">
          <source>Enable or disable untracked cache feature. Please use &lt;code&gt;--test-untracked-cache&lt;/code&gt; before enabling it.</source>
          <target state="translated">Habilita o deshabilita la funci&amp;oacute;n de cach&amp;eacute; sin seguimiento. Utilice &lt;code&gt;--test-untracked-cache&lt;/code&gt; antes de habilitarlo.</target>
        </trans-unit>
        <trans-unit id="5d058dbf876c4efd16b9ed5eae486a10be79bb86" translate="yes" xml:space="preserve">
          <source>Enable parallel index preload for operations like &lt;code&gt;git diff&lt;/code&gt;</source>
          <target state="translated">Habilite la precarga de &amp;iacute;ndice paralelo para operaciones como &lt;code&gt;git diff&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1aa8a755e195170094ad7c0108b7874b637b96b6" translate="yes" xml:space="preserve">
          <source>Enable showing size of blobs (ordinary files) in a &quot;tree&quot; view, in a separate column, similar to what &lt;code&gt;ls -l&lt;/code&gt; does; see description of &lt;code&gt;-l&lt;/code&gt; option in &lt;a href=&quot;git-ls-tree&quot;&gt;git-ls-tree[1]&lt;/a&gt; manpage. This costs a bit of I/O. Enabled by default.</source>
          <target state="translated">Habilite mostrar el tama&amp;ntilde;o de blobs (archivos ordinarios) en una vista de &quot;&amp;aacute;rbol&quot;, en una columna separada, similar a lo que hace &lt;code&gt;ls -l&lt;/code&gt; ; consulte la descripci&amp;oacute;n de la opci&amp;oacute;n &lt;code&gt;-l&lt;/code&gt; en la p&amp;aacute;gina de &lt;a href=&quot;git-ls-tree&quot;&gt;manual de git-ls-tree [1]&lt;/a&gt; . Esto cuesta un poco de E / S. Habilitado por defecto.</target>
        </trans-unit>
        <trans-unit id="72fa50bb7bb0362a9a5efa2aa6f34941c4906089" translate="yes" xml:space="preserve">
          <source>Enable stricter reference checking by requiring an exact ref path. Aside from returning an error code of 1, it will also print an error message if &lt;code&gt;--quiet&lt;/code&gt; was not specified.</source>
          <target state="translated">Habilite una verificaci&amp;oacute;n de referencia m&amp;aacute;s estricta al requerir una ruta de referencia exacta. Adem&amp;aacute;s de devolver un c&amp;oacute;digo de error de 1, tambi&amp;eacute;n imprimir&amp;aacute; un mensaje de error si no se especific&amp;oacute; &lt;code&gt;--quiet&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="48730f76cba5f67862630837d3f93d8ce9288066" translate="yes" xml:space="preserve">
          <source>Enable text search, which will list the commits which match author, committer or commit text to a given string; see the description of &lt;code&gt;--author&lt;/code&gt;, &lt;code&gt;--committer&lt;/code&gt; and &lt;code&gt;--grep&lt;/code&gt; options in &lt;a href=&quot;git-log&quot;&gt;git-log[1]&lt;/a&gt; manpage. Enabled by default.</source>
          <target state="translated">Habilite la b&amp;uacute;squeda de texto, que enumerar&amp;aacute; las confirmaciones que coinciden con el autor, el confirmador o el texto de confirmaci&amp;oacute;n con una cadena determinada; consulte la descripci&amp;oacute;n de las &lt;code&gt;--author&lt;/code&gt; , &lt;code&gt;--committer&lt;/code&gt; y &lt;code&gt;--grep&lt;/code&gt; en la p&amp;aacute;gina de manual de &lt;a href=&quot;git-log&quot;&gt;git-log [1]&lt;/a&gt; . Habilitado por defecto.</target>
        </trans-unit>
        <trans-unit id="5bf942f17a0adbd66d5dff03794ede7ed6ce3a03" translate="yes" xml:space="preserve">
          <source>Enable the &quot;blame&quot; and &quot;blame_incremental&quot; blob views, showing for each line the last commit that modified it; see &lt;a href=&quot;git-blame&quot;&gt;git-blame[1]&lt;/a&gt;. This can be very CPU-intensive and is therefore disabled by default.</source>
          <target state="translated">Habilite las vistas de blob &quot;blame&quot; y &quot;blame_incremental&quot;, mostrando para cada l&amp;iacute;nea la &amp;uacute;ltima confirmaci&amp;oacute;n que la modific&amp;oacute;; ver &lt;a href=&quot;git-blame&quot;&gt;git-blame [1]&lt;/a&gt; . Esto puede consumir mucha CPU y, por lo tanto, est&amp;aacute; deshabilitado de forma predeterminada.</target>
        </trans-unit>
        <trans-unit id="d7fc03efc211d064bf3be01f125339a0be59fcba" translate="yes" xml:space="preserve">
          <source>Enable the &lt;code&gt;core.sparseCheckout&lt;/code&gt; setting. If the sparse-checkout file does not exist, then populate it with patterns that match every file in the root directory and no other directories, then will remove all directories tracked by Git. Add patterns to the sparse-checkout file to repopulate the working directory.</source>
          <target state="translated">Habilite la configuraci&amp;oacute;n &lt;code&gt;core.sparseCheckout&lt;/code&gt; . Si el archivo de pago disperso no existe, compl&amp;eacute;telo con patrones que coincidan con cada archivo en el directorio ra&amp;iacute;z y ning&amp;uacute;n otro directorio, luego eliminar&amp;aacute; todos los directorios rastreados por Git. Agregue patrones al archivo de pago disperso para volver a llenar el directorio de trabajo.</target>
        </trans-unit>
        <trans-unit id="388296e4f7d314018094f8c18fc5c6de39a494b4" translate="yes" xml:space="preserve">
          <source>Enable the heuristic that shifts diff hunk boundaries to make patches easier to read. This is the default.</source>
          <target state="translated">Habilitar la heurística que cambia los límites de los trozos para que los parches sean más fáciles de leer.Este es el valor por defecto.</target>
        </trans-unit>
        <trans-unit id="01f1f887420f77509dbb30a6ca88007ca92eded6" translate="yes" xml:space="preserve">
          <source>Enable the reflog. Updates to a ref &amp;lt;ref&amp;gt; is logged to the file &quot;&lt;code&gt;$GIT_DIR/logs/&amp;lt;ref&amp;gt;&lt;/code&gt;&quot;, by appending the new and old SHA-1, the date/time and the reason of the update, but only when the file exists. If this configuration variable is set to &lt;code&gt;true&lt;/code&gt;, missing &quot;&lt;code&gt;$GIT_DIR/logs/&amp;lt;ref&amp;gt;&lt;/code&gt;&quot; file is automatically created for branch heads (i.e. under &lt;code&gt;refs/heads/&lt;/code&gt;), remote refs (i.e. under &lt;code&gt;refs/remotes/&lt;/code&gt;), note refs (i.e. under &lt;code&gt;refs/notes/&lt;/code&gt;), and the symbolic ref &lt;code&gt;HEAD&lt;/code&gt;. If it is set to &lt;code&gt;always&lt;/code&gt;, then a missing reflog is automatically created for any ref under &lt;code&gt;refs/&lt;/code&gt;.</source>
          <target state="translated">Habilite el reflog. Las actualizaciones a una ref &amp;lt;ref&amp;gt; se registran en el archivo &quot; &lt;code&gt;$GIT_DIR/logs/&amp;lt;ref&amp;gt;&lt;/code&gt; &quot;, agregando el SHA-1 nuevo y antiguo, la fecha / hora y el motivo de la actualizaci&amp;oacute;n, pero solo cuando el archivo existe . Si esta variable de configuraci&amp;oacute;n se establece en &lt;code&gt;true&lt;/code&gt; , el &lt;code&gt;$GIT_DIR/logs/&amp;lt;ref&amp;gt;&lt;/code&gt; &quot; $ GIT_DIR / logs / &amp;lt;ref&amp;gt; &quot; faltante se crea autom&amp;aacute;ticamente para los cabezales de rama (es decir, bajo &lt;code&gt;refs/heads/&lt;/code&gt; ), refs remotos (es decir, bajo &lt;code&gt;refs/remotes/&lt;/code&gt; ), note refs ( es decir, bajo &lt;code&gt;refs/notes/&lt;/code&gt; ) y la referencia simb&amp;oacute;lica &lt;code&gt;HEAD&lt;/code&gt; . Si se establece en &lt;code&gt;always&lt;/code&gt; , se crea autom&amp;aacute;ticamente un reflog faltante para cualquier referencia bajo &lt;code&gt;refs/&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b50a25e099857665aa0b9ce95777350330756bcc" translate="yes" xml:space="preserve">
          <source>Enable the so called pickaxe search, which will list the commits that introduced or removed a given string in a file. This can be practical and quite faster alternative to &quot;blame&quot; action, but it is still potentially CPU-intensive. Enabled by default.</source>
          <target state="translated">Habilitar la llamada búsqueda de pico,que listará las confirmaciones que introdujeron o eliminaron una determinada cadena en un archivo.Esto puede ser una alternativa práctica y bastante más rápida a la acción de &quot;culpar&quot;,pero sigue siendo potencialmente intensiva en cuanto a la CPU.Habilitado por defecto.</target>
        </trans-unit>
        <trans-unit id="e8928096a1d83fe75290fee4b17a3faa5d2c2864" translate="yes" xml:space="preserve">
          <source>Enable the specified feature. This requires that fast-import supports the specified feature, and aborts if it does not.</source>
          <target state="translated">Habilitar la característica especificada.Esto requiere que la importación rápida soporte la característica especificada,y abortar si no lo hace.</target>
        </trans-unit>
        <trans-unit id="cb33ed4fbb60981dda9e34bad99e8fe5205271b1" translate="yes" xml:space="preserve">
          <source>Enable/disable the service site-wide per default. Note that a service disabled site-wide can still be enabled per repository if it is marked overridable and the repository enables the service with a configuration item.</source>
          <target state="translated">Habilitar/deshabilitar el servicio de todo el sitio por defecto.Tenga en cuenta que un servicio desactivado site-wide puede seguir habilitándose por repositorio si está marcado como anulable y el repositorio habilita el servicio con un elemento de configuración.</target>
        </trans-unit>
        <trans-unit id="35a563959614f6c71c72cc0395ec6a9ebde3235d" translate="yes" xml:space="preserve">
          <source>Enables (or disables) progress messages displayed by the transport helper during a command.</source>
          <target state="translated">Activa (o desactiva)los mensajes de progreso mostrados por el ayudante de transporte durante una orden.</target>
        </trans-unit>
        <trans-unit id="c889da55fe7b392cff2ceaa7f38c976ee6969838" translate="yes" xml:space="preserve">
          <source>Enables a curl full trace dump of all incoming and outgoing data, including descriptive information, of the git transport protocol. This is similar to doing curl &lt;code&gt;--trace-ascii&lt;/code&gt; on the command line. See &lt;code&gt;GIT_TRACE&lt;/code&gt; for available trace output options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55ef71c7bfb2fa4d7687d0c6a055c6d9acec70dd" translate="yes" xml:space="preserve">
          <source>Enables a curl full trace dump of all incoming and outgoing data, including descriptive information, of the git transport protocol. This is similar to doing curl &lt;code&gt;--trace-ascii&lt;/code&gt; on the command line. This option overrides setting the &lt;code&gt;GIT_CURL_VERBOSE&lt;/code&gt; environment variable. See &lt;code&gt;GIT_TRACE&lt;/code&gt; for available trace output options.</source>
          <target state="translated">Habilita un volcado de seguimiento completo curl de todos los datos entrantes y salientes, incluida la informaci&amp;oacute;n descriptiva, del protocolo de transporte git. Esto es similar a hacer curl &lt;code&gt;--trace-ascii&lt;/code&gt; en la l&amp;iacute;nea de comando. Esta opci&amp;oacute;n anula la configuraci&amp;oacute;n de la variable de entorno &lt;code&gt;GIT_CURL_VERBOSE&lt;/code&gt; . Consulte &lt;code&gt;GIT_TRACE&lt;/code&gt; para conocer las opciones de salida de seguimiento disponibles.</target>
        </trans-unit>
        <trans-unit id="6691f775d187ea6f64d054b6823e9e86f9c085bf" translate="yes" xml:space="preserve">
          <source>Enables general trace messages, e.g. alias expansion, built-in command execution and external command execution.</source>
          <target state="translated">Permite mensajes de rastreo generales,por ejemplo,expansión de alias,ejecución de comandos incorporados y ejecución de comandos externos.</target>
        </trans-unit>
        <trans-unit id="e48905b14288617c8ceaa87834665d923c04c051" translate="yes" xml:space="preserve">
          <source>Enables more detailed trace messages from the &quot;trace2&quot; library. Output from &lt;code&gt;GIT_TRACE2&lt;/code&gt; is a simple text-based format for human readability.</source>
          <target state="translated">Habilita mensajes de seguimiento m&amp;aacute;s detallados de la biblioteca &quot;trace2&quot;. La salida de &lt;code&gt;GIT_TRACE2&lt;/code&gt; es un formato simple basado en texto para legibilidad humana.</target>
        </trans-unit>
        <trans-unit id="660988c86be3da054f2d2df3321eefbdd55b0999" translate="yes" xml:space="preserve">
          <source>Enables performance related trace messages, e.g. total execution time of each Git command. See &lt;code&gt;GIT_TRACE&lt;/code&gt; for available trace output options.</source>
          <target state="translated">Habilita los mensajes de seguimiento relacionados con el rendimiento, por ejemplo, el tiempo total de ejecuci&amp;oacute;n de cada comando de Git. Consulte &lt;code&gt;GIT_TRACE&lt;/code&gt; para conocer las opciones de salida de seguimiento disponibles.</target>
        </trans-unit>
        <trans-unit id="dc7b8ed816ac9633bd1375cea1e49bf11b8f4cfe" translate="yes" xml:space="preserve">
          <source>Enables the &quot;cone mode&quot; of the sparse checkout feature. When the sparse-checkout file contains a limited set of patterns, then this mode provides significant performance advantages. See &lt;a href=&quot;git-sparse-checkout&quot;&gt;git-sparse-checkout[1]&lt;/a&gt; for more information.</source>
          <target state="translated">Habilita el &quot;modo cono&quot; de la funci&amp;oacute;n de pago disperso. Cuando el archivo de pago disperso contiene un conjunto limitado de patrones, este modo proporciona importantes ventajas de rendimiento. Consulte &lt;a href=&quot;git-sparse-checkout&quot;&gt;git-sparse-checkout [1]&lt;/a&gt; para obtener m&amp;aacute;s informaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="69a28feccce4c72bcadfb900d39f7f184847d39a" translate="yes" xml:space="preserve">
          <source>Enables trace messages for all accesses to any packs. For each access, the pack file name and an offset in the pack is recorded. This may be helpful for troubleshooting some pack-related performance problems. See &lt;code&gt;GIT_TRACE&lt;/code&gt; for available trace output options.</source>
          <target state="translated">Habilita los mensajes de seguimiento para todos los accesos a cualquier paquete. Para cada acceso, se registra el nombre del archivo del paquete y una compensaci&amp;oacute;n en el paquete. Esto puede resultar &amp;uacute;til para solucionar algunos problemas de rendimiento relacionados con el paquete. Consulte &lt;code&gt;GIT_TRACE&lt;/code&gt; para conocer las opciones de salida de seguimiento disponibles.</target>
        </trans-unit>
        <trans-unit id="facc11ad57d6672e51f919b154eb028564e3944e" translate="yes" xml:space="preserve">
          <source>Enables trace messages for all packets coming in or out of a given program. This can help with debugging object negotiation or other protocol issues. Tracing is turned off at a packet starting with &quot;PACK&quot; (but see &lt;code&gt;GIT_TRACE_PACKFILE&lt;/code&gt; below). See &lt;code&gt;GIT_TRACE&lt;/code&gt; for available trace output options.</source>
          <target state="translated">Habilita los mensajes de rastreo para todos los paquetes que entran o salen de un programa determinado. Esto puede ayudar a depurar la negociaci&amp;oacute;n de objetos u otros problemas de protocolo. El rastreo se desactiva en un paquete que comienza con &quot;PACK&quot; (pero consulte &lt;code&gt;GIT_TRACE_PACKFILE&lt;/code&gt; a continuaci&amp;oacute;n). Consulte &lt;code&gt;GIT_TRACE&lt;/code&gt; para conocer las opciones de salida de seguimiento disponibles.</target>
        </trans-unit>
        <trans-unit id="edb9b39606e0f9447b27a5131ddede4062e0f50d" translate="yes" xml:space="preserve">
          <source>Enables trace messages for operations on the ref database. See &lt;code&gt;GIT_TRACE&lt;/code&gt; for available trace output options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a96e0b90f936140e14c4f59157281584502b280" translate="yes" xml:space="preserve">
          <source>Enables trace messages for the filesystem monitor extension. See &lt;code&gt;GIT_TRACE&lt;/code&gt; for available trace output options.</source>
          <target state="translated">Habilita los mensajes de seguimiento para la extensi&amp;oacute;n del monitor del sistema de archivos. Consulte &lt;code&gt;GIT_TRACE&lt;/code&gt; para conocer las opciones de salida de seguimiento disponibles.</target>
        </trans-unit>
        <trans-unit id="226b098ac2b03df2efedb4d6f3177d8a53d1323d" translate="yes" xml:space="preserve">
          <source>Enables trace messages printing the .git, working tree and current working directory after Git has completed its setup phase. See &lt;code&gt;GIT_TRACE&lt;/code&gt; for available trace output options.</source>
          <target state="translated">Permite que los mensajes de seguimiento impriman el .git, el &amp;aacute;rbol de trabajo y el directorio de trabajo actual despu&amp;eacute;s de que Git haya completado su fase de configuraci&amp;oacute;n. Consulte &lt;code&gt;GIT_TRACE&lt;/code&gt; para conocer las opciones de salida de seguimiento disponibles.</target>
        </trans-unit>
        <trans-unit id="0876ec8b14060e46110f6e776b65e26631e1613f" translate="yes" xml:space="preserve">
          <source>Enables trace messages that can help debugging fetching / cloning of shallow repositories. See &lt;code&gt;GIT_TRACE&lt;/code&gt; for available trace output options.</source>
          <target state="translated">Habilita mensajes de seguimiento que pueden ayudar a depurar la recuperaci&amp;oacute;n / clonaci&amp;oacute;n de repositorios poco profundos. Consulte &lt;code&gt;GIT_TRACE&lt;/code&gt; para conocer las opciones de salida de seguimiento disponibles.</target>
        </trans-unit>
        <trans-unit id="d9d84b12f1c34508f5365e4fa51faae6983f4d76" translate="yes" xml:space="preserve">
          <source>Enables tracing of packfiles sent or received by a given program. Unlike other trace output, this trace is verbatim: no headers, and no quoting of binary data. You almost certainly want to direct into a file (e.g., &lt;code&gt;GIT_TRACE_PACKFILE=/tmp/my.pack&lt;/code&gt;) rather than displaying it on the terminal or mixing it with other trace output.</source>
          <target state="translated">Habilita el seguimiento de los archivos de paquetes enviados o recibidos por un programa determinado. A diferencia de otros resultados de seguimiento, este seguimiento es literal: sin encabezados y sin citas de datos binarios. Es casi seguro que desee dirigirlo a un archivo (por ejemplo, &lt;code&gt;GIT_TRACE_PACKFILE=/tmp/my.pack&lt;/code&gt; ) en lugar de mostrarlo en la terminal o mezclarlo con otra salida de seguimiento.</target>
        </trans-unit>
        <trans-unit id="e7a1430764d62a995667824305a6bb53b99cb2fa" translate="yes" xml:space="preserve">
          <source>Enabling a Target</source>
          <target state="translated">Habilitar un objetivo</target>
        </trans-unit>
        <trans-unit id="619b6ac53993b275b163fbd1d47132e1851812f0" translate="yes" xml:space="preserve">
          <source>Encode email headers that have non-ASCII characters with &quot;Q-encoding&quot; (described in RFC 2047) for email transmission. Defaults to true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aae00f8479c80f28e526371cda478b9f2e76f78a" translate="yes" xml:space="preserve">
          <source>Encode email headers that have non-ASCII characters with &quot;Q-encoding&quot; (described in RFC 2047), instead of outputting the headers verbatim. Defaults to the value of the &lt;code&gt;format.encodeEmailHeaders&lt;/code&gt; configuration variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ff218bfdfe647deb6f8afd9e1fb8602500fad3a" translate="yes" xml:space="preserve">
          <source>Encoding to use when displaying logs. (See &lt;code&gt;Discussion&lt;/code&gt; above.) Defaults to the value of &lt;code&gt;i18n.commitEncoding&lt;/code&gt; if set, and UTF-8 otherwise.</source>
          <target state="translated">Codificaci&amp;oacute;n para usar al mostrar registros. (Consulte la &lt;code&gt;Discussion&lt;/code&gt; anterior). &lt;code&gt;i18n.commitEncoding&lt;/code&gt; valor predeterminado el valor de i18n.commitEncoding si se establece, y UTF-8 en caso contrario.</target>
        </trans-unit>
        <trans-unit id="89269a8275f94980b4ffe877e221e0d466987782" translate="yes" xml:space="preserve">
          <source>End-of-line conversion</source>
          <target state="translated">Conversión de final de línea</target>
        </trans-unit>
        <trans-unit id="ab7c0d7ed2b514b7971808ab6a9cdbd8fa7e7be5" translate="yes" xml:space="preserve">
          <source>Enhanced option parser</source>
          <target state="translated">Parser de opción mejorada</target>
        </trans-unit>
        <trans-unit id="d48b2fd91c06d512d371b7025cd11deeb23b34ad" translate="yes" xml:space="preserve">
          <source>Ensure at least &amp;lt;n&amp;gt; lines of surrounding context match before and after each change. When fewer lines of surrounding context exist they all must match. By default no context is ever ignored.</source>
          <target state="translated">Aseg&amp;uacute;rese de que al menos &amp;lt;n&amp;gt; l&amp;iacute;neas del contexto circundante coincidan antes y despu&amp;eacute;s de cada cambio. Cuando existen menos l&amp;iacute;neas de contexto circundante, todas deben coincidir. Por defecto, nunca se ignora ning&amp;uacute;n contexto.</target>
        </trans-unit>
        <trans-unit id="40fd8773c6f206a9063f0067c04f352f2f44d8bc" translate="yes" xml:space="preserve">
          <source>Ensure at least &amp;lt;n&amp;gt; lines of surrounding context match before and after each change. When fewer lines of surrounding context exist they all must match. By default no context is ever ignored. Implies --apply.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6825ec27b2b654ed999d31628f8e31396467a23b" translate="yes" xml:space="preserve">
          <source>Ensure mod_cgi, mod_alias, and mod_env are enabled, set GIT_PROJECT_ROOT (or DocumentRoot) appropriately, and create a ScriptAlias to the CGI:</source>
          <target state="translated">Asegúrate de que mod_cgi,mod_alias y mod_env estén activados,establece GIT_PROJECT_ROOT (o DocumentRoot)apropiadamente,y crea un ScriptAlias al CGI:</target>
        </trans-unit>
        <trans-unit id="136727d71b4774df6f61241cd1f96329e996c416" translate="yes" xml:space="preserve">
          <source>Ensure that &lt;code&gt;mod_cgi&lt;/code&gt;, &lt;code&gt;mod_alias&lt;/code&gt;, &lt;code&gt;mod_auth&lt;/code&gt;, &lt;code&gt;mod_setenv&lt;/code&gt; are loaded, then set &lt;code&gt;GIT_PROJECT_ROOT&lt;/code&gt; appropriately and redirect all requests to the CGI:</source>
          <target state="translated">Aseg&amp;uacute;rese de que &lt;code&gt;mod_cgi&lt;/code&gt; , &lt;code&gt;mod_alias&lt;/code&gt; , &lt;code&gt;mod_auth&lt;/code&gt; , &lt;code&gt;mod_setenv&lt;/code&gt; est&amp;eacute;n cargados, luego configure &lt;code&gt;GIT_PROJECT_ROOT&lt;/code&gt; apropiadamente y redirija todas las solicitudes al CGI:</target>
        </trans-unit>
        <trans-unit id="05b99bf62f144f697a8ee2786cac4dbb9ea1f0fb" translate="yes" xml:space="preserve">
          <source>Ensures that a reference name is well formed</source>
          <target state="translated">Asegura que un nombre de referencia esté bien formado</target>
        </trans-unit>
        <trans-unit id="ced8b1d7750a47c0481b135a1b95578c79b545a4" translate="yes" xml:space="preserve">
          <source>Ensuring good performance</source>
          <target state="translated">Asegurando un buen rendimiento</target>
        </trans-unit>
        <trans-unit id="bbdd824923a22a7ee366da56344be9b791387ca5" translate="yes" xml:space="preserve">
          <source>Ensuring reliability</source>
          <target state="translated">Asegurando la fiabilidad</target>
        </trans-unit>
        <trans-unit id="35254b488f033ee2fce6cea7c360bd0f51157448" translate="yes" xml:space="preserve">
          <source>Enter &lt;code&gt;git name-rev&lt;/code&gt;:</source>
          <target state="translated">Ingrese &lt;code&gt;git name-rev&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="35cd2b0a8df7f89252ec5f994efe80c34ae3bb81" translate="yes" xml:space="preserve">
          <source>Entries that begin with &lt;code&gt;&quot;&lt;/code&gt; (double-quote) will be interpreted as C-style quoted paths, removing leading and trailing double-quotes and respecting backslash escapes. E.g., the value &lt;code&gt;&quot;path-with-\&quot;-and-:-in-it&quot;:vanilla-path&lt;/code&gt; has two paths: &lt;code&gt;path-with-&quot;-and-:-in-it&lt;/code&gt; and &lt;code&gt;vanilla-path&lt;/code&gt;.</source>
          <target state="translated">Las entradas que comienzan con &lt;code&gt;&quot;&lt;/code&gt; (comillas dobles) se interpretar&amp;aacute;n como rutas entre comillas de estilo C, eliminando las comillas dobles iniciales y finales y respetando los escapes de barra invertida. Por ejemplo, el valor &lt;code&gt;&quot;path-with-\&quot;-and-:-in-it&quot;:vanilla-path&lt;/code&gt; tiene dos rutas: &lt;code&gt;path-with-&quot;-and-:-in-it&lt;/code&gt; y &lt;code&gt;vanilla-path&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d443a1185575c125d61e0af393b044d7b06ef572" translate="yes" xml:space="preserve">
          <source>Environment</source>
          <target state="translated">Environment</target>
        </trans-unit>
        <trans-unit id="8403ba2a4a5aa9baffc30d3d46a39f555141e42f" translate="yes" xml:space="preserve">
          <source>Environment and configuration variables</source>
          <target state="translated">Variables de entorno y configuración</target>
        </trans-unit>
        <trans-unit id="1173b2e11bd16e5dc36c119a4b84f02be11626b5" translate="yes" xml:space="preserve">
          <source>Environment variables</source>
          <target state="translated">Las variables de entorno</target>
        </trans-unit>
        <trans-unit id="2e9c1d645028b692809462da156b1ceab497759c" translate="yes" xml:space="preserve">
          <source>Environment variables passed to command</source>
          <target state="translated">Las variables de entorno pasaron al comando</target>
        </trans-unit>
        <trans-unit id="0939f663868ba2e69e812a3d630f787f9c5cfc8e" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&amp;lt;rev&amp;gt;^&amp;lt;n&amp;gt;..&amp;lt;rev&amp;gt;&lt;/code&gt;, with &lt;code&gt;&amp;lt;n&amp;gt;&lt;/code&gt; = 1 if not given.</source>
          <target state="translated">Equivalente a &lt;code&gt;&amp;lt;rev&amp;gt;^&amp;lt;n&amp;gt;..&amp;lt;rev&amp;gt;&lt;/code&gt; , con &lt;code&gt;&amp;lt;n&amp;gt;&lt;/code&gt; = 1 si no se proporciona.</target>
        </trans-unit>
        <trans-unit id="0c3185db11169cc7a29ed7dd80f79aa18ce0f759" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;--word-diff=color&lt;/code&gt; plus (if a regex was specified) &lt;code&gt;--word-diff-regex=&amp;lt;regex&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">Equivalente a &lt;code&gt;--word-diff=color&lt;/code&gt; plus (si se especific&amp;oacute; una expresi&amp;oacute;n regular) &lt;code&gt;--word-diff-regex=&amp;lt;regex&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fce804cbafec5e50fdfe3953fee8d48f776185de" translate="yes" xml:space="preserve">
          <source>Equivalent to passing &lt;code&gt;&amp;lt;base&amp;gt;..&amp;lt;rev1&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;base&amp;gt;..&amp;lt;rev2&amp;gt;&lt;/code&gt;. Note that &lt;code&gt;&amp;lt;base&amp;gt;&lt;/code&gt; does not need to be the exact branch point of the branches. Example: after rebasing a branch &lt;code&gt;my-topic&lt;/code&gt;, &lt;code&gt;git range-diff my-topic@{u} my-topic@{1} my-topic&lt;/code&gt; would show the differences introduced by the rebase.</source>
          <target state="translated">Equivalente a pasar &lt;code&gt;&amp;lt;base&amp;gt;..&amp;lt;rev1&amp;gt;&lt;/code&gt; y &lt;code&gt;&amp;lt;base&amp;gt;..&amp;lt;rev2&amp;gt;&lt;/code&gt; . Tenga en cuenta que &lt;code&gt;&amp;lt;base&amp;gt;&lt;/code&gt; no necesita ser el punto de ramificaci&amp;oacute;n exacto de las ramificaciones. Ejemplo: despu&amp;eacute;s de reajustar una rama &lt;code&gt;my-topic&lt;/code&gt; , &lt;code&gt;git range-diff my-topic@{u} my-topic@{1} my-topic&lt;/code&gt; mostrar&amp;iacute;a las diferencias introducidas por la rebase.</target>
        </trans-unit>
        <trans-unit id="fee223c131ae45dd7f0054cc61edf8587521b104" translate="yes" xml:space="preserve">
          <source>Equivalent to passing &lt;code&gt;&amp;lt;rev2&amp;gt;..&amp;lt;rev1&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;rev1&amp;gt;..&amp;lt;rev2&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">Equivalente a pasar &lt;code&gt;&amp;lt;rev2&amp;gt;..&amp;lt;rev1&amp;gt;&lt;/code&gt; y &lt;code&gt;&amp;lt;rev1&amp;gt;..&amp;lt;rev2&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d9b3a0b879a412ed7b377d180ca1727a3b8f2d6d" translate="yes" xml:space="preserve">
          <source>Error out if the stream ends without a &lt;code&gt;done&lt;/code&gt; command. Without this feature, errors causing the frontend to end abruptly at a convenient point in the stream can go undetected. This may occur, for example, if an import front end dies in mid-operation without emitting SIGTERM or SIGKILL at its subordinate git fast-import instance.</source>
          <target state="translated">Error si la secuencia finaliza sin un comando &lt;code&gt;done&lt;/code&gt; . Sin esta funci&amp;oacute;n, los errores que hacen que la interfaz finalice abruptamente en un punto conveniente de la transmisi&amp;oacute;n pueden pasar desapercibidos. Esto puede ocurrir, por ejemplo, si una interfaz de importaci&amp;oacute;n muere en medio de la operaci&amp;oacute;n sin emitir SIGTERM o SIGKILL en su instancia subordinada de importaci&amp;oacute;n r&amp;aacute;pida de git.</target>
        </trans-unit>
        <trans-unit id="137e434092ea32c83e7a34f0c9bc0aa62d172e84" translate="yes" xml:space="preserve">
          <source>Especially useful for interoperability with a foreign versioning system.</source>
          <target state="translated">Especialmente útil para la interoperabilidad con un sistema de versiones extranjeras.</target>
        </trans-unit>
        <trans-unit id="058d99599bd9d3348c2826266e98651571ad20e7" translate="yes" xml:space="preserve">
          <source>Evaluates an arbitrary shell command in each checked out submodule. The command has access to the variables $name, $sm_path, $displaypath, $sha1 and $toplevel: $name is the name of the relevant submodule section in &lt;code&gt;.gitmodules&lt;/code&gt;, $sm_path is the path of the submodule as recorded in the immediate superproject, $displaypath contains the relative path from the current working directory to the submodules root directory, $sha1 is the commit as recorded in the immediate superproject, and $toplevel is the absolute path to the top-level of the immediate superproject. Note that to avoid conflicts with &lt;code&gt;$PATH&lt;/code&gt; on Windows, the &lt;code&gt;$path&lt;/code&gt; variable is now a deprecated synonym of &lt;code&gt;$sm_path&lt;/code&gt; variable. Any submodules defined in the superproject but not checked out are ignored by this command. Unless given &lt;code&gt;--quiet&lt;/code&gt;, foreach prints the name of each submodule before evaluating the command. If &lt;code&gt;--recursive&lt;/code&gt; is given, submodules are traversed recursively (i.e. the given shell command is evaluated in nested submodules as well). A non-zero return from the command in any submodule causes the processing to terminate. This can be overridden by adding &lt;code&gt;|| :&lt;/code&gt; to the end of the command.</source>
          <target state="translated">Eval&amp;uacute;a un comando de shell arbitrario en cada subm&amp;oacute;dulo extra&amp;iacute;do. El comando tiene acceso a las variables $ name, $ sm_path, $ displaypath, $ sha1 y $ toplevel: $ name es el nombre de la secci&amp;oacute;n del subm&amp;oacute;dulo relevante en &lt;code&gt;.gitmodules&lt;/code&gt; , $ sm_path es la ruta del subm&amp;oacute;dulo como se registra en el superproyecto inmediato , $ displaypath contiene la ruta relativa desde el directorio de trabajo actual al directorio ra&amp;iacute;z de los subm&amp;oacute;dulos, $ sha1 es la confirmaci&amp;oacute;n registrada en el superproyecto inmediato, y $ toplevel es la ruta absoluta al nivel superior del superproyecto inmediato. Tenga en cuenta que para evitar conflictos con &lt;code&gt;$PATH&lt;/code&gt; en Windows, la variable &lt;code&gt;$path&lt;/code&gt; ahora es un sin&amp;oacute;nimo obsoleto de &lt;code&gt;$sm_path&lt;/code&gt; variable. Este comando ignora todos los subm&amp;oacute;dulos definidos en el superproyecto pero no extra&amp;iacute;dos. A menos que se indique &lt;code&gt;--quiet&lt;/code&gt; , foreach imprime el nombre de cada subm&amp;oacute;dulo antes de evaluar el comando. Si se proporciona &lt;code&gt;--recursive&lt;/code&gt; , los subm&amp;oacute;dulos se recorren de forma recursiva (es decir, el comando de shell dado se eval&amp;uacute;a tambi&amp;eacute;n en subm&amp;oacute;dulos anidados). Un retorno distinto de cero del comando en cualquier subm&amp;oacute;dulo hace que finalice el procesamiento. Esto se puede anular agregando &lt;code&gt;|| :&lt;/code&gt; al final del comando.</target>
        </trans-unit>
        <trans-unit id="3346640c72369c22dbe8ece1ce186df75f62b7da" translate="yes" xml:space="preserve">
          <source>Even if you don&amp;rsquo;t need to edit files but only want to e.g. rename or remove some and thus can avoid checking out each file (i.e. you can use --index-filter), you still are passing shell snippets for your filters. This means that for every commit, you have to have a prepared git repo where those filters can be run. That&amp;rsquo;s a significant setup.</source>
          <target state="translated">Incluso si no necesita editar archivos, pero solo desea, por ejemplo, cambiar el nombre o eliminar algunos y as&amp;iacute; puede evitar verificar cada archivo (es decir, puede usar --index-filter), todav&amp;iacute;a est&amp;aacute; pasando fragmentos de shell para sus filtros. Esto significa que para cada confirmaci&amp;oacute;n, debe tener un repositorio de git preparado donde se puedan ejecutar esos filtros. Esa es una configuraci&amp;oacute;n significativa.</target>
        </trans-unit>
        <trans-unit id="5eb6ad0af0ebc64a82d836be8d647670a50936f8" translate="yes" xml:space="preserve">
          <source>Even if you hide refs, a client may still be able to steal the target objects via the techniques described in the &quot;SECURITY&quot; section of the &lt;a href=&quot;gitnamespaces&quot;&gt;gitnamespaces[7]&lt;/a&gt; man page; it&amp;rsquo;s best to keep private data in a separate repository.</source>
          <target state="translated">Incluso si oculta las referencias, un cliente a&amp;uacute;n puede robar los objetos de destino mediante las t&amp;eacute;cnicas descritas en la secci&amp;oacute;n &quot;SEGURIDAD&quot; de la p&amp;aacute;gina de &lt;a href=&quot;gitnamespaces&quot;&gt;manual&lt;/a&gt; de gitnamespaces [7] ; es mejor mantener los datos privados en un repositorio separado.</target>
        </trans-unit>
        <trans-unit id="631b3a432b8ec594fabc393b96af10483ed3b9bf" translate="yes" xml:space="preserve">
          <source>Even if you may have local modifications in your working tree, you can safely say &lt;code&gt;git pull&lt;/code&gt; when you know that the change in the other branch does not overlap with them.</source>
          <target state="translated">Incluso si puede tener modificaciones locales en su &amp;aacute;rbol de trabajo, puede decir con seguridad &lt;code&gt;git pull&lt;/code&gt; cuando sepa que el cambio en la otra rama no se superpone con ellos.</target>
        </trans-unit>
        <trans-unit id="e9dc426299074d12c83589e674bb08692f265116" translate="yes" xml:space="preserve">
          <source>Even when version sort is used in &lt;a href=&quot;git-tag&quot;&gt;git-tag[1]&lt;/a&gt;, tagnames with the same base version but different suffixes are still sorted lexicographically, resulting e.g. in prerelease tags appearing after the main release (e.g. &quot;1.0-rc1&quot; after &quot;1.0&quot;). This variable can be specified to determine the sorting order of tags with different suffixes.</source>
          <target state="translated">Incluso cuando se usa el ordenamiento de la versi&amp;oacute;n en &lt;a href=&quot;git-tag&quot;&gt;git-tag [1]&lt;/a&gt; , los nombres de etiquetas con la misma versi&amp;oacute;n base pero diferentes sufijos a&amp;uacute;n se ordenan lexicogr&amp;aacute;ficamente, lo que da como resultado, por ejemplo, que aparezcan etiquetas preliminares despu&amp;eacute;s de la versi&amp;oacute;n principal (por ejemplo, &quot;1.0-rc1&quot; despu&amp;eacute;s de &quot;1.0&quot;) . Esta variable se puede especificar para determinar el orden de clasificaci&amp;oacute;n de las etiquetas con diferentes sufijos.</target>
        </trans-unit>
        <trans-unit id="9e079d1f744d65307fba536fb55c673ed5690ed3" translate="yes" xml:space="preserve">
          <source>Event-Specific Key/Value Pairs</source>
          <target state="translated">Pares clave/valor específicos del evento</target>
        </trans-unit>
        <trans-unit id="574b5ade849d92dcfbdbf5ca26c3f1b37761f49f" translate="yes" xml:space="preserve">
          <source>Events are written as lines of the form:</source>
          <target state="translated">Los eventos se escriben como líneas de la forma:</target>
        </trans-unit>
        <trans-unit id="af0aec79a3d13a4c4b91dbf7a8bc02d48eb692d6" translate="yes" xml:space="preserve">
          <source>Eventually the conclusion started with:</source>
          <target state="translated">Finalmente la conclusión comenzó con:</target>
        </trans-unit>
        <trans-unit id="e1529d50cc2b2be76fa87bc3d3169dd428571183" translate="yes" xml:space="preserve">
          <source>Eventually there will be no more revisions left to inspect, and the command will print out a description of the first bad commit. The reference &lt;code&gt;refs/bisect/bad&lt;/code&gt; will be left pointing at that commit.</source>
          <target state="translated">Eventualmente, no quedar&amp;aacute;n m&amp;aacute;s revisiones por inspeccionar, y el comando imprimir&amp;aacute; una descripci&amp;oacute;n de la primera confirmaci&amp;oacute;n incorrecta. La referencia &lt;code&gt;refs/bisect/bad&lt;/code&gt; se dejar&amp;aacute; apuntando a esa confirmaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="33494a61e10c94c6a655dac5cf7ce556eb778f1d" translate="yes" xml:space="preserve">
          <source>Every change in the history of a project is represented by a commit. The &lt;a href=&quot;git-show&quot;&gt;git-show[1]&lt;/a&gt; command shows the most recent commit on the current branch:</source>
          <target state="translated">Cada cambio en la historia de un proyecto est&amp;aacute; representado por un compromiso. El comando &lt;a href=&quot;git-show&quot;&gt;git-show [1]&lt;/a&gt; muestra la confirmaci&amp;oacute;n m&amp;aacute;s reciente en la rama actual:</target>
        </trans-unit>
        <trans-unit id="c0294fb403c28f35bf86f99624f936e70c163f9d" translate="yes" xml:space="preserve">
          <source>Every commit (except the very first commit in a project) also has a parent commit which shows what happened before this commit. Following the chain of parents will eventually take you back to the beginning of the project.</source>
          <target state="translated">Cada commit (excepto el primer commit de un proyecto)también tiene un commit padre que muestra lo que pasó antes de este commit.Seguir la cadena de padres eventualmente te llevará de vuelta al principio del proyecto.</target>
        </trans-unit>
        <trans-unit id="2fd9540af511da41e4e859d7e772df1cd2e0716c" translate="yes" xml:space="preserve">
          <source>Every commit has a 40-hexdigit id, sometimes called the &quot;object name&quot; or the &quot;SHA-1 id&quot;, shown on the first line of the &lt;code&gt;git show&lt;/code&gt; output. You can usually refer to a commit by a shorter name, such as a tag or a branch name, but this longer name can also be useful. Most importantly, it is a globally unique name for this commit: so if you tell somebody else the object name (for example in email), then you are guaranteed that name will refer to the same commit in their repository that it does in yours (assuming their repository has that commit at all). Since the object name is computed as a hash over the contents of the commit, you are guaranteed that the commit can never change without its name also changing.</source>
          <target state="translated">Cada confirmaci&amp;oacute;n tiene una identificaci&amp;oacute;n de 40 d&amp;iacute;gitos hex, a veces llamada &quot;nombre de objeto&quot; o &quot;identificaci&amp;oacute;n SHA-1&quot;, que se muestra en la primera l&amp;iacute;nea de la salida de &lt;code&gt;git show&lt;/code&gt; . Por lo general, puede hacer referencia a una confirmaci&amp;oacute;n con un nombre m&amp;aacute;s corto, como una etiqueta o un nombre de rama, pero este nombre m&amp;aacute;s largo tambi&amp;eacute;n puede ser &amp;uacute;til. Lo m&amp;aacute;s importante es que es un nombre globalmente &amp;uacute;nico para esta confirmaci&amp;oacute;n: por lo que si le dice a otra persona el nombre del objeto (por ejemplo, en el correo electr&amp;oacute;nico), tiene la garant&amp;iacute;a de que ese nombre se referir&amp;aacute; a la misma confirmaci&amp;oacute;n en su repositorio que en el suyo ( asumiendo que su repositorio tiene ese compromiso). Dado que el nombre del objeto se calcula como un hash sobre el contenido de la confirmaci&amp;oacute;n, se le garantiza que la confirmaci&amp;oacute;n nunca puede cambiar sin que su nombre tambi&amp;eacute;n cambie.</target>
        </trans-unit>
        <trans-unit id="2c58cc3c4a4eeeefba12cfd52db7d6b22833ae51" translate="yes" xml:space="preserve">
          <source>Every commit usually has one &quot;parent&quot; commit which points to the previous state of the project:</source>
          <target state="translated">Cada compromiso suele tener un compromiso &quot;padre&quot; que apunta al estado previo del proyecto:</target>
        </trans-unit>
        <trans-unit id="1a873d3296fdc5740fd2d57065300557ff50e9de" translate="yes" xml:space="preserve">
          <source>Every git repository is marked with a numeric version in the &lt;code&gt;core.repositoryformatversion&lt;/code&gt; key of its &lt;code&gt;config&lt;/code&gt; file. This version specifies the rules for operating on the on-disk repository data. An implementation of git which does not understand a particular version advertised by an on-disk repository MUST NOT operate on that repository; doing so risks not only producing wrong results, but actually losing data.</source>
          <target state="translated">Cada repositorio de git est&amp;aacute; marcado con una versi&amp;oacute;n num&amp;eacute;rica en la clave &lt;code&gt;core.repositoryformatversion&lt;/code&gt; de su archivo de &lt;code&gt;config&lt;/code&gt; uraci&amp;oacute;n . Esta versi&amp;oacute;n especifica las reglas para operar en los datos del repositorio en disco. Una implementaci&amp;oacute;n de git que no comprende una versi&amp;oacute;n en particular anunciada por un repositorio en disco NO DEBE operar en ese repositorio; al hacerlo, se corre el riesgo no solo de producir resultados incorrectos, sino tambi&amp;eacute;n de perder datos.</target>
        </trans-unit>
        <trans-unit id="62d7b4b8755b9c58dc64c45f9e43e9a1848ebae6" translate="yes" xml:space="preserve">
          <source>Every helper must support the &quot;capabilities&quot; command, which Git uses to determine what other commands the helper will accept. Those other commands can be used to discover and update remote refs, transport objects between the object database and the remote repository, and update the local object store.</source>
          <target state="translated">Cada ayudante debe apoyar el comando &quot;capacidades&quot;,que Git utiliza para determinar qué otros comandos aceptará el ayudante.Esos otros comandos pueden utilizarse para descubrir y actualizar refs remotos,transportar objetos entre la base de datos de objetos y el repositorio remoto,y actualizar el almacén de objetos local.</target>
        </trans-unit>
        <trans-unit id="a5adcecab706a9dd84c1d3eebe8cd1a4069a04b5" translate="yes" xml:space="preserve">
          <source>Every non-overlapping match of the &amp;lt;regex&amp;gt; is considered a word. Anything between these matches is considered whitespace and ignored(!) for the purposes of finding differences. You may want to append &lt;code&gt;|[^[:space:]]&lt;/code&gt; to your regular expression to make sure that it matches all non-whitespace characters. A match that contains a newline is silently truncated(!) at the newline.</source>
          <target state="translated">Cada coincidencia no superpuesta de &amp;lt;regex&amp;gt; se considera una palabra. Cualquier cosa entre estas coincidencias se considera un espacio en blanco y se ignora (!) A los efectos de encontrar diferencias. Es posible que desee agregar &lt;code&gt;|[^[:space:]]&lt;/code&gt; a su expresi&amp;oacute;n regular para asegurarse de que coincida con todos los caracteres que no son espacios en blanco. Una coincidencia que contiene una nueva l&amp;iacute;nea se trunca silenciosamente (!) En la nueva l&amp;iacute;nea.</target>
        </trans-unit>
        <trans-unit id="ca9e8deab33d39332d7b528ab194c9573c58ac97" translate="yes" xml:space="preserve">
          <source>Every notes change creates a new commit at the specified notes ref. You can therefore inspect the history of the notes by invoking, e.g., &lt;code&gt;git log -p notes/commits&lt;/code&gt;. Currently the commit message only records which operation triggered the update, and the commit authorship is determined according to the usual rules (see &lt;a href=&quot;git-commit&quot;&gt;git-commit[1]&lt;/a&gt;). These details may change in the future.</source>
          <target state="translated">Cada cambio de notas crea una nueva confirmaci&amp;oacute;n en la referencia de notas especificada. Por lo tanto, puede inspeccionar el historial de las notas invocando, por ejemplo, &lt;code&gt;git log -p notes/commits&lt;/code&gt; . Actualmente, el mensaje de confirmaci&amp;oacute;n solo registra qu&amp;eacute; operaci&amp;oacute;n desencaden&amp;oacute; la actualizaci&amp;oacute;n, y la autor&amp;iacute;a de la confirmaci&amp;oacute;n se determina de acuerdo con las reglas habituales (ver &lt;a href=&quot;git-commit&quot;&gt;git-commit [1]&lt;/a&gt; ). Estos detalles pueden cambiar en el futuro.</target>
        </trans-unit>
        <trans-unit id="5bfad9a034d5ed29730f0b4fba66efb6b1249b9d" translate="yes" xml:space="preserve">
          <source>Every once in a while have your frontend emit a &lt;code&gt;progress&lt;/code&gt; message to fast-import. The contents of the messages are entirely free-form, so one suggestion would be to output the current month and year each time the current commit date moves into the next month. Your users will feel better knowing how much of the data stream has been processed.</source>
          <target state="translated">De vez en cuando, haga que su interfaz emita un mensaje de &lt;code&gt;progress&lt;/code&gt; para importar r&amp;aacute;pidamente. El contenido de los mensajes es completamente de forma libre, por lo que una sugerencia ser&amp;iacute;a generar el mes y el a&amp;ntilde;o actuales cada vez que la fecha de confirmaci&amp;oacute;n actual se mueva al mes siguiente. Sus usuarios se sentir&amp;aacute;n mejor al saber qu&amp;eacute; parte del flujo de datos se ha procesado.</target>
        </trans-unit>
        <trans-unit id="cda48ad1074123130b527f02f3f1db8c4fd5c129" translate="yes" xml:space="preserve">
          <source>Every once in a while, &lt;code&gt;git repack&lt;/code&gt; the public repository. Go back to step 5. and continue working.</source>
          <target state="translated">De vez en cuando, &lt;code&gt;git repack&lt;/code&gt; el repositorio p&amp;uacute;blico. Vuelva al paso 5. y contin&amp;uacute;e trabajando.</target>
        </trans-unit>
        <trans-unit id="0196a37f323e9613bd5e5c6dc6db74a2907c6a83" translate="yes" xml:space="preserve">
          <source>Every time a client connects, first run an external command specified by the &amp;lt;path&amp;gt; with service name (e.g. &quot;upload-pack&quot;), path to the repository, hostname (%H), canonical hostname (%CH), IP address (%IP), and TCP port (%P) as its command-line arguments. The external command can decide to decline the service by exiting with a non-zero status (or to allow it by exiting with a zero status). It can also look at the $REMOTE_ADDR and &lt;code&gt;$REMOTE_PORT&lt;/code&gt; environment variables to learn about the requestor when making this decision.</source>
          <target state="translated">Cada vez que un cliente se conecta, primero ejecute un comando externo especificado por &amp;lt;ruta&amp;gt; con el nombre del servicio (por ejemplo, &quot;upload-pack&quot;), la ruta al repositorio, el nombre de host (% H), el nombre de host can&amp;oacute;nico (% CH), la direcci&amp;oacute;n IP ( % IP) y el puerto TCP (% P) como argumentos de la l&amp;iacute;nea de comandos. El comando externo puede decidir rechazar el servicio saliendo con un estado distinto de cero (o permitirlo saliendo con un estado cero). Tambi&amp;eacute;n puede mirar las variables de entorno $ REMOTE_ADDR y &lt;code&gt;$REMOTE_PORT&lt;/code&gt; para conocer al solicitante al tomar esta decisi&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="ed1e82e85b3b43f7a452c7545f1946734ba8fe78" translate="yes" xml:space="preserve">
          <source>Everyday Git</source>
          <target state="translated">Todos los días Git</target>
        </trans-unit>
        <trans-unit id="30edee05f0b86fdef0d1b80bced0b054568a2749" translate="yes" xml:space="preserve">
          <source>Everyday Git With 20 Commands Or So</source>
          <target state="translated">Todos los días con 20 comandos más o menos</target>
        </trans-unit>
        <trans-unit id="0043a64d3fef8a7a23f6cd840b45f8af10f67f75" translate="yes" xml:space="preserve">
          <source>Exact byte count format</source>
          <target state="translated">Formato de recuento de bytes exacto</target>
        </trans-unit>
        <trans-unit id="6e07117d26445f4c876a2dd689294f11cef857f4" translate="yes" xml:space="preserve">
          <source>Examining an old version without creating a new branch</source>
          <target state="translated">Examinar una versión antigua sin crear una nueva rama</target>
        </trans-unit>
        <trans-unit id="d496fa33f8661db7b0850d74bbd80c109526f113" translate="yes" xml:space="preserve">
          <source>Examining branches from a remote repository</source>
          <target state="translated">Examinar las ramas de un repositorio remoto</target>
        </trans-unit>
        <trans-unit id="bb504595062729729e7244c3229ce860c38e6b76" translate="yes" xml:space="preserve">
          <source>Examining dangling objects</source>
          <target state="translated">Examinar los objetos colgantes</target>
        </trans-unit>
        <trans-unit id="9cb0f2fbccfd2e1df3b3fea66d90520dda3d9cf1" translate="yes" xml:space="preserve">
          <source>Examining the data</source>
          <target state="translated">Examinar los datos</target>
        </trans-unit>
        <trans-unit id="0f01ed56a1e32a05e5ef96e4d779f34784af9a96" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Example</target>
        </trans-unit>
        <trans-unit id="cfd85acb33cc1367c953b61c1f0a7ad60c2565a2" translate="yes" xml:space="preserve">
          <source>Example 1: Your history contains commits by two authors, Jane and Joe, whose names appear in the repository under several forms:</source>
          <target state="translated">Ejemplo 1:Su historia contiene confirmaciones de dos autores,Jane y Joe,cuyos nombres aparecen en el repositorio bajo varias formas:</target>
        </trans-unit>
        <trans-unit id="aa58f391e50840be9e94b87f72faa5f731cb5766" translate="yes" xml:space="preserve">
          <source>Example 2: Your repository contains commits from the following authors:</source>
          <target state="translated">Ejemplo 2:Su repositorio contiene confirmaciones de los siguientes autores:</target>
        </trans-unit>
        <trans-unit id="8a76cea78511b0d3032b5011d701b256e4fa824c" translate="yes" xml:space="preserve">
          <source>Example contents:</source>
          <target state="translated">Ejemplo de contenido:</target>
        </trans-unit>
        <trans-unit id="ee2fa80210fe959342ddb79b523484b1b7a07d33" translate="yes" xml:space="preserve">
          <source>Example to exclude everything except a specific directory &lt;code&gt;foo/bar&lt;/code&gt; (note the &lt;code&gt;/*&lt;/code&gt; - without the slash, the wildcard would also exclude everything within &lt;code&gt;foo/bar&lt;/code&gt;):</source>
          <target state="translated">Ejemplo para excluir todo excepto un directorio espec&amp;iacute;fico &lt;code&gt;foo/bar&lt;/code&gt; (tenga en cuenta el &lt;code&gt;/*&lt;/code&gt; - sin la barra inclinada, el comod&amp;iacute;n tambi&amp;eacute;n excluir&amp;iacute;a todo lo que est&amp;eacute; dentro de &lt;code&gt;foo/bar&lt;/code&gt; ):</target>
        </trans-unit>
        <trans-unit id="59e08af9047abc909e804faec8919301def86320" translate="yes" xml:space="preserve">
          <source>Example trace2 api usage</source>
          <target state="translated">Ejemplo de uso de la API de Trace2</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="523ae6b1873ceced0f776c362dc256ed64902255" translate="yes" xml:space="preserve">
          <source>Example: If you know that there was some test case for &lt;code&gt;git bundle&lt;/code&gt;, but do not remember where it was (yes, you &lt;code&gt;could&lt;/code&gt;&lt;code&gt;git grep bundle t/&lt;/code&gt;, but that does not illustrate the point!):</source>
          <target state="translated">Ejemplo: si sabe que hubo alg&amp;uacute;n caso de prueba para &lt;code&gt;git bundle&lt;/code&gt; , pero no recuerda d&amp;oacute;nde estaba (s&amp;iacute;, &lt;code&gt;could&lt;/code&gt; &lt;code&gt;git grep bundle t/&lt;/code&gt; , &amp;iexcl;pero eso no ilustra el punto!):</target>
        </trans-unit>
        <trans-unit id="14e4d3109673cecf5094a599bce7b8cb418a458c" translate="yes" xml:space="preserve">
          <source>Example: Let commits &lt;code&gt;1--2&lt;/code&gt; be the first iteration of a patch series and &lt;code&gt;A--C&lt;/code&gt; the second iteration. Let&amp;rsquo;s assume that &lt;code&gt;A&lt;/code&gt; is a cherry-pick of &lt;code&gt;2,&lt;/code&gt; and &lt;code&gt;C&lt;/code&gt; is a cherry-pick of &lt;code&gt;1&lt;/code&gt; but with a small modification (say, a fixed typo). Visualize the commits as a bipartite graph:</source>
          <target state="translated">Ejemplo: &lt;code&gt;1--2&lt;/code&gt; que las confirmaciones 1--2 sean la primera iteraci&amp;oacute;n de una serie de parches y &lt;code&gt;A--C&lt;/code&gt; la segunda iteraci&amp;oacute;n. Supongamos que &lt;code&gt;A&lt;/code&gt; es una selecci&amp;oacute;n de &lt;code&gt;2,&lt;/code&gt; y &lt;code&gt;C&lt;/code&gt; es una selecci&amp;oacute;n de &lt;code&gt;1&lt;/code&gt; , pero con una peque&amp;ntilde;a modificaci&amp;oacute;n (digamos, un error tipogr&amp;aacute;fico fijo). Visualice las confirmaciones como un gr&amp;aacute;fico bipartito:</target>
        </trans-unit>
        <trans-unit id="d3bad2d15f343f55dc9f681daca1b6f3326d18b3" translate="yes" xml:space="preserve">
          <source>Example: The following will count changed files, while ignoring directories with less than 10% of the total amount of changed files, and accumulating child directory counts in the parent directories: &lt;code&gt;--dirstat=files,10,cumulative&lt;/code&gt;.</source>
          <target state="translated">Ejemplo: lo siguiente contar&amp;aacute; los archivos modificados, ignorando los directorios con menos del 10% de la cantidad total de archivos modificados y acumulando recuentos de directorios secundarios en los directorios principales: &lt;code&gt;--dirstat=files,10,cumulative&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e5998a18b5c87282a79f47b763c8725aa5e8349e" translate="yes" xml:space="preserve">
          <source>Example: The following will count changed files, while ignoring directories with less than 10% of the total amount of changed files, and accumulating child directory counts in the parent directories: &lt;code&gt;files,10,cumulative&lt;/code&gt;.</source>
          <target state="translated">Ejemplo: lo siguiente contar&amp;aacute; los archivos modificados, ignorando los directorios con menos del 10% de la cantidad total de archivos modificados y acumulando recuentos de directorios secundarios en los directorios principales: &lt;code&gt;files,10,cumulative&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f7fe9add2c66b1dd7342bec4baea68d566885937" translate="yes" xml:space="preserve">
          <source>Example: let&amp;rsquo;s say I had renamed &lt;code&gt;commit.c&lt;/code&gt; to &lt;code&gt;git-commit.c&lt;/code&gt;, and I had done an &lt;code&gt;update-index&lt;/code&gt; to make that effective in the index file. &lt;code&gt;git diff-files&lt;/code&gt; wouldn&amp;rsquo;t show anything at all, since the index file matches my working directory. But doing a &lt;code&gt;git diff-index&lt;/code&gt; does:</source>
          <target state="translated">Ejemplo: digamos que hab&amp;iacute;a cambiado el nombre de &lt;code&gt;commit.c&lt;/code&gt; a &lt;code&gt;git-commit.c&lt;/code&gt; , y hab&amp;iacute;a hecho un &lt;code&gt;update-index&lt;/code&gt; para que eso fuera efectivo en el archivo de &amp;iacute;ndice. &lt;code&gt;git diff-files&lt;/code&gt; no mostrar&amp;iacute;a nada en absoluto, ya que el archivo de &amp;iacute;ndice coincide con mi directorio de trabajo. Pero hacer un &lt;code&gt;git diff-index&lt;/code&gt; s&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="eb01bf04c9a0e8a71c45816513df424f1c7ffedb" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">Examples</target>
        </trans-unit>
        <trans-unit id="22540b4db15515332cef1b1a56998eebfeba111a" translate="yes" xml:space="preserve">
          <source>Examples for &lt;code&gt;-c&lt;/code&gt; and &lt;code&gt;--cc&lt;/code&gt; without &lt;code&gt;--combined-all-paths&lt;/code&gt;:</source>
          <target state="translated">Ejemplos de &lt;code&gt;-c&lt;/code&gt; y &lt;code&gt;--cc&lt;/code&gt; sin &lt;code&gt;--combined-all-paths&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="6ba2b2f11f2e1285e022c78a54e28e01334ece54" translate="yes" xml:space="preserve">
          <source>Examples when &lt;code&gt;--combined-all-paths&lt;/code&gt; added to either &lt;code&gt;-c&lt;/code&gt; or &lt;code&gt;--cc&lt;/code&gt;:</source>
          <target state="translated">Ejemplos cuando se &lt;code&gt;--combined-all-paths&lt;/code&gt; a &lt;code&gt;-c&lt;/code&gt; o &lt;code&gt;--cc&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="b280d2c89a83a2bacb63527574e5853bea86f936" translate="yes" xml:space="preserve">
          <source>Examples.</source>
          <target state="translated">Examples.</target>
        </trans-unit>
        <trans-unit id="fb3447b632f6a431215776dcf254a01001a40c4f" translate="yes" xml:space="preserve">
          <source>Examples:</source>
          <target state="translated">Examples:</target>
        </trans-unit>
        <trans-unit id="24d0d5f830ca936a2b1158c4418847e58a17c132" translate="yes" xml:space="preserve">
          <source>Except for the &lt;code&gt;simple&lt;/code&gt; variant, command-line parameters are likely to change as git gains new features.</source>
          <target state="translated">Excepto por la variante &lt;code&gt;simple&lt;/code&gt; , es probable que los par&amp;aacute;metros de la l&amp;iacute;nea de comandos cambien a medida que git obtenga nuevas funciones.</target>
        </trans-unit>
        <trans-unit id="16cb9d6dc5634fc561d2d614f979976dfee73770" translate="yes" xml:space="preserve">
          <source>Except in a fast-forward merge (see above), the branches to be merged must be tied together by a merge commit that has both of them as its parents.</source>
          <target state="translated">Excepto en una fusión rápida (ver más arriba),las ramas a fusionar deben estar unidas por un compromiso de fusión que tenga a ambos como padres.</target>
        </trans-unit>
        <trans-unit id="262c2a4eb81a10a2c9efd3343c2ae85fe92bbd6e" translate="yes" xml:space="preserve">
          <source>Exclude commits that are reachable from &amp;lt;rev&amp;gt; (i.e. &amp;lt;rev&amp;gt; and its ancestors).</source>
          <target state="translated">Excluya las confirmaciones a las que se puede acceder desde &amp;lt;rev&amp;gt; (es decir, &amp;lt;rev&amp;gt; y sus ancestros).</target>
        </trans-unit>
        <trans-unit id="f270c263f13543cd4c2b3020f92a691a85883aa7" translate="yes" xml:space="preserve">
          <source>Exclude patterns</source>
          <target state="translated">Excluir patrones</target>
        </trans-unit>
        <trans-unit id="87263b3bb52abcdab4a719253ddba1eca4b803f6" translate="yes" xml:space="preserve">
          <source>Exclude selected depot paths when cloning or syncing.</source>
          <target state="translated">Excluir las rutas de depósito seleccionadas al clonar o sincronizar.</target>
        </trans-unit>
        <trans-unit id="80be5859c8610b0a7e5a0e2227ba09cb8e75bd2e" translate="yes" xml:space="preserve">
          <source>Exclude the given pack from repacking. This is the equivalent of having &lt;code&gt;.keep&lt;/code&gt; file on the pack. &lt;code&gt;&amp;lt;pack-name&amp;gt;&lt;/code&gt; is the pack file name without leading directory (e.g. &lt;code&gt;pack-123.pack&lt;/code&gt;). The option could be specified multiple times to keep multiple packs.</source>
          <target state="translated">Excluya el paquete proporcionado del reembalaje. Esto es equivalente a tener &lt;code&gt;.keep&lt;/code&gt; archivo .keep en el paquete. &lt;code&gt;&amp;lt;pack-name&amp;gt;&lt;/code&gt; es el nombre del archivo del paquete sin el directorio principal (por ejemplo, &lt;code&gt;pack-123.pack&lt;/code&gt; ). La opci&amp;oacute;n se puede especificar varias veces para mantener varios paquetes.</target>
        </trans-unit>
        <trans-unit id="c21ad96ce2991b5c76c93826f8c1c709d756ef00" translate="yes" xml:space="preserve">
          <source>Exclude the specified patterns from the log decorations. This is similar to the &lt;code&gt;--decorate-refs-exclude&lt;/code&gt; command-line option, but the config option can be overridden by the &lt;code&gt;--decorate-refs&lt;/code&gt; option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f719c666cee23f0f1f956fb1a3762ec3484afe81" translate="yes" xml:space="preserve">
          <source>Existing trailers are extracted from the input message by looking for a group of one or more lines that (i) is all trailers, or (ii) contains at least one Git-generated or user-configured trailer and consists of at least 25% trailers. The group must be preceded by one or more empty (or whitespace-only) lines. The group must either be at the end of the message or be the last non-whitespace lines before a line that starts with &lt;code&gt;---&lt;/code&gt; (followed by a space or the end of the line). Such three minus signs start the patch part of the message. See also &lt;code&gt;--no-divider&lt;/code&gt; below.</source>
          <target state="translated">Los tr&amp;aacute;ilers existentes se extraen del mensaje de entrada buscando un grupo de una o m&amp;aacute;s l&amp;iacute;neas que (i) son todos los tr&amp;aacute;ileres, o (ii) contiene al menos un tr&amp;aacute;iler generado por Git o configurado por el usuario y consta de al menos un 25% de tr&amp;aacute;ilers . El grupo debe estar precedido por una o m&amp;aacute;s l&amp;iacute;neas vac&amp;iacute;as (o solo espacios en blanco). El grupo debe estar al final del mensaje o ser las &amp;uacute;ltimas l&amp;iacute;neas sin espacios en blanco antes de una l&amp;iacute;nea que comienza con &lt;code&gt;---&lt;/code&gt; (seguida de un espacio o el final de la l&amp;iacute;nea). Estos tres signos negativos inician la parte del parche del mensaje. Consulte tambi&amp;eacute;n &lt;code&gt;--no-divider&lt;/code&gt; a continuaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="d3460174eb1c6ec5b3dd3ca9e87848d068de28a1" translate="yes" xml:space="preserve">
          <source>Exit code between 128 and 255 are special to &quot;git bisect run&quot;. They make it stop immediately the bisection process. This is useful for example if the command passed takes too long to complete, because you can kill it with a signal and it will stop the bisection process.</source>
          <target state="translated">Los códigos de salida entre 128 y 255 son especiales para &quot;git bisect run&quot;.Hacen que se detenga inmediatamente el proceso de bisección.Esto es útil,por ejemplo,si el comando pasado tarda demasiado en completarse,porque puedes matarlo con una señal y detendrá el proceso de bisección.</target>
        </trans-unit>
        <trans-unit id="1de8b457f24c5f9f27dc6145c115a0b05b79738e" translate="yes" xml:space="preserve">
          <source>Exit difftool if the invoked diff tool returns a non-zero exit status.</source>
          <target state="translated">Salir de la herramienta de diferencias si la herramienta de diferencias invocada devuelve un estado de salida distinto de cero.</target>
        </trans-unit>
        <trans-unit id="105ec316e78b2e21f4200658aebb690c6bfce1c8" translate="yes" xml:space="preserve">
          <source>Exit status</source>
          <target state="translated">Estado de salida</target>
        </trans-unit>
        <trans-unit id="3a152e1aa09a1f7c436eafcd44ff191b58dde03b" translate="yes" xml:space="preserve">
          <source>Exit with a zero status even if no files matched.</source>
          <target state="translated">Salir con un estado de cero aunque no haya archivos que coincidan.</target>
        </trans-unit>
        <trans-unit id="f661c1461c19e28f4ca3bd981e37f108a510e5f9" translate="yes" xml:space="preserve">
          <source>Exit with status &quot;2&quot; when no matching refs are found in the remote repository. Usually the command exits with status &quot;0&quot; to indicate it successfully talked with the remote repository, whether it found any matching refs.</source>
          <target state="translated">Salir con estado &quot;2&quot; cuando no se encuentren árbitros que coincidan en el depósito remoto.Normalmente el comando sale con estado &quot;0&quot; para indicar que habló con éxito con el repositorio remoto,si encontró algún refs que coincida.</target>
        </trans-unit>
        <trans-unit id="a5a799b0a561590f135d49ee5ebae00be685efb3" translate="yes" xml:space="preserve">
          <source>Exit with zero status if &amp;lt;object&amp;gt; exists and is a valid object. If &amp;lt;object&amp;gt; is of an invalid format exit with non-zero and emits an error on stderr.</source>
          <target state="translated">Salir con estado cero si &amp;lt;objeto&amp;gt; existe y es un objeto v&amp;aacute;lido. Si &amp;lt;object&amp;gt; tiene un formato no v&amp;aacute;lido, salga con un valor distinto de cero y emite un error en stderr.</target>
        </trans-unit>
        <trans-unit id="a4fd2157951095e7b5d26b7c3906810fced8fee9" translate="yes" xml:space="preserve">
          <source>Expand the URL of the given remote repository taking into account any &quot;url.&amp;lt;base&amp;gt;.insteadOf&quot; config setting (See &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;) and exit without talking to the remote.</source>
          <target state="translated">Expanda la URL del repositorio remoto dado teniendo en cuenta cualquier configuraci&amp;oacute;n de configuraci&amp;oacute;n &quot;url. &amp;lt;base&amp;gt; .insteadOf&quot; (Ver &lt;a href=&quot;git-config&quot;&gt;git-config [1]&lt;/a&gt; ) y salga sin hablar con el control remoto.</target>
        </trans-unit>
        <trans-unit id="82a1b2399131b1d56f52c1e5725ea0754c8c3b25" translate="yes" xml:space="preserve">
          <source>Experimental. If set, clients will attempt to communicate with a server using the specified protocol version. If unset, no attempt will be made by the client to communicate using a particular protocol version, this results in protocol version 0 being used. Supported versions:</source>
          <target state="translated">Experimental.Si está configurado,los clientes intentarán comunicarse con un servidor utilizando la versión de protocolo especificada.Si se desajusta,el cliente no intentará comunicarse usando una versión de protocolo particular,lo que resultará en la utilización de la versión 0 del protocolo.Versiones soportadas:</target>
        </trans-unit>
        <trans-unit id="374e58867af910990ca1f09ab8f9576e68a9b14e" translate="yes" xml:space="preserve">
          <source>Experimental; for internal use only. Can attempt to connect to a remote server for communication using git&amp;rsquo;s wire-protocol version 2. See the documentation for the stateless-connect command for more information.</source>
          <target state="translated">Experimental; S&amp;oacute;lo para uso interno. Puede intentar conectarse a un servidor remoto para la comunicaci&amp;oacute;n utilizando la versi&amp;oacute;n 2 del protocolo de cable de git. Consulte la documentaci&amp;oacute;n del comando stateless-connect para obtener m&amp;aacute;s informaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="a6c1ea190613127e3c33180eee19de027a289612" translate="yes" xml:space="preserve">
          <source>Experimental; for internal use only. Connects to the given remote service for communication using git&amp;rsquo;s wire-protocol version 2. Valid replies to this command are empty line (connection established), &lt;code&gt;fallback&lt;/code&gt; (no smart transport support, fall back to dumb transports) and just exiting with error message printed (can&amp;rsquo;t connect, don&amp;rsquo;t bother trying to fall back). After line feed terminating the positive (empty) response, the output of the service starts. Messages (both request and response) must consist of zero or more PKT-LINEs, terminating in a flush packet. Response messages will then have a response end packet after the flush packet to indicate the end of a response. The client must not expect the server to store any state in between request-response pairs. After the connection ends, the remote helper exits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ed48ec751df29bb5c7b56db740a48bfdffd6f47" translate="yes" xml:space="preserve">
          <source>Experimental; for internal use only. Connects to the given remote service for communication using git&amp;rsquo;s wire-protocol version 2. Valid replies to this command are empty line (connection established), &lt;code&gt;fallback&lt;/code&gt; (no smart transport support, fall back to dumb transports) and just exiting with error message printed (can&amp;rsquo;t connect, don&amp;rsquo;t bother trying to fall back). After line feed terminating the positive (empty) response, the output of the service starts. Messages (both request and response) must consist of zero or more PKT-LINEs, terminating in a flush packet. The client must not expect the server to store any state in between request-response pairs. After the connection ends, the remote helper exits.</source>
          <target state="translated">Experimental; S&amp;oacute;lo para uso interno. Se conecta al servicio remoto determinado para la comunicaci&amp;oacute;n utilizando la versi&amp;oacute;n de alambre protocolo 2. respuestas v&amp;aacute;lidas de Git a este comando son l&amp;iacute;nea vac&amp;iacute;a (conexi&amp;oacute;n establecida), &lt;code&gt;fallback&lt;/code&gt; (sin apoyo de transporte inteligente, caen de nuevo a los transportes mudas) y acaba de salir con el mensaje de error impreso ( no se puede conectar, no se moleste en intentar retroceder). Despu&amp;eacute;s de que el avance de l&amp;iacute;nea termine la respuesta positiva (vac&amp;iacute;a), se inicia la salida del servicio. Los mensajes (tanto de solicitud como de respuesta) deben constar de cero o m&amp;aacute;s PKT-LINE, que terminen en un paquete de descarga. El cliente no debe esperar que el servidor almacene ning&amp;uacute;n estado entre los pares de solicitud y respuesta. Una vez finalizada la conexi&amp;oacute;n, sale el asistente remoto.</target>
        </trans-unit>
        <trans-unit id="e024c1b1cf5dfc23f1661897286cc082f5684cef" translate="yes" xml:space="preserve">
          <source>Expire all reflogs with &lt;code&gt;git reflog expire --expire=now --all&lt;/code&gt;.</source>
          <target state="translated">Expire todos los reflogs con &lt;code&gt;git reflog expire --expire=now --all&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4f38f9dff86033ea204fa903651e0d6603ef28dd" translate="yes" xml:space="preserve">
          <source>Explicitly allow or ban the object filter corresponding to &lt;code&gt;&amp;lt;filter&amp;gt;&lt;/code&gt;, where &lt;code&gt;&amp;lt;filter&amp;gt;&lt;/code&gt; may be one of: &lt;code&gt;blob:none&lt;/code&gt;, &lt;code&gt;blob:limit&lt;/code&gt;, &lt;code&gt;tree&lt;/code&gt;, &lt;code&gt;sparse:oid&lt;/code&gt;, or &lt;code&gt;combine&lt;/code&gt;. If using combined filters, both &lt;code&gt;combine&lt;/code&gt; and all of the nested filter kinds must be allowed. Defaults to &lt;code&gt;uploadpackfilter.allow&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee5da57f58adf9c1ddf8dd03613cf7957a586adf" translate="yes" xml:space="preserve">
          <source>Exploring git history</source>
          <target state="translated">Explorando la historia del git</target>
        </trans-unit>
        <trans-unit id="89032b84259ca753da6ee3335cc874eda5aea88c" translate="yes" xml:space="preserve">
          <source>Exploring history</source>
          <target state="translated">Explorando la historia</target>
        </trans-unit>
        <trans-unit id="9594b6cd33e22cedcea0b51e30d878456e8b0103" translate="yes" xml:space="preserve">
          <source>Export Git tags to p4 labels, as per --export-labels.</source>
          <target state="translated">Exporta las etiquetas Git a las etiquetas p4,como en las etiquetas de exportación.</target>
        </trans-unit>
        <trans-unit id="1d5637309048195a7021fdbec654e04c3399ceec" translate="yes" xml:space="preserve">
          <source>Export a single commit to a CVS checkout</source>
          <target state="translated">Exportar un único compromiso a una caja de CVS</target>
        </trans-unit>
        <trans-unit id="3b1e75b4d51f1271061fcd403a0829e4ee2dbe12" translate="yes" xml:space="preserve">
          <source>Export files with a prefix</source>
          <target state="translated">Exportar archivos con un prefijo</target>
        </trans-unit>
        <trans-unit id="265e5cf875ec82b17c2d01a82792a32a43a95b55" translate="yes" xml:space="preserve">
          <source>Export tags from Git as p4 labels. Tags found in Git are applied to the perforce working directory.</source>
          <target state="translated">Exportar las etiquetas de Git como etiquetas p4.Las etiquetas que se encuentran en Git se aplican al directorio de trabajo forzoso.</target>
        </trans-unit>
        <trans-unit id="e1e5965077094d7c4756e516413e72a854f313c9" translate="yes" xml:space="preserve">
          <source>Exporting a Git repository via the Git protocol</source>
          <target state="translated">Exportar un repositorio Git a través del protocolo Git</target>
        </trans-unit>
        <trans-unit id="70581f8681dac905a7c1fddd025df98d77759bfd" translate="yes" xml:space="preserve">
          <source>Exporting a git repository via HTTP</source>
          <target state="translated">Exportar un repositorio git a través de HTTP</target>
        </trans-unit>
        <trans-unit id="7d0c2b669436b3c66b28c30bf0f8b2f1227f2bfb" translate="yes" xml:space="preserve">
          <source>Exports a commit from Git to a CVS checkout, making it easier to merge patches from a Git repository into a CVS repository.</source>
          <target state="translated">Exporta un commit de Git a un checkout CVS,facilitando la fusión de parches de un repositorio Git en un repositorio CVS.</target>
        </trans-unit>
        <trans-unit id="91d81689bc4c223caafef827873bd7159612ae71" translate="yes" xml:space="preserve">
          <source>External Systems</source>
          <target state="translated">Sistemas externos</target>
        </trans-unit>
        <trans-unit id="fa9abe3df3ff3676c618be0248e4529ceae9c936" translate="yes" xml:space="preserve">
          <source>External data format</source>
          <target state="translated">Formato de datos externos</target>
        </trans-unit>
        <trans-unit id="0b01e11ac46c849a71c428abcd94e12009d5387f" translate="yes" xml:space="preserve">
          <source>Extract all commits that lead to &lt;code&gt;origin&lt;/code&gt; since the inception of the project:</source>
          <target state="translated">Extraiga todas las confirmaciones que conducen al &lt;code&gt;origin&lt;/code&gt; desde el inicio del proyecto:</target>
        </trans-unit>
        <trans-unit id="86dd39e46e8ada53c01392c7b98857ff781b5490" translate="yes" xml:space="preserve">
          <source>Extract all commits which are in the current branch but not in the origin branch:</source>
          <target state="translated">Extraer todas las confirmaciones que están en la rama actual pero no en la rama de origen:</target>
        </trans-unit>
        <trans-unit id="293a4ac8183e30cb22a3c912e62cea8f83a17a45" translate="yes" xml:space="preserve">
          <source>Extract commit ID from an archive created using git-archive</source>
          <target state="translated">Extraer el commit ID de un archivo creado con git-archive</target>
        </trans-unit>
        <trans-unit id="e52c75685be818f69a594f72535500e2b5f0de7d" translate="yes" xml:space="preserve">
          <source>Extract commits between revisions R1 and R2, and apply them on top of the current branch using &lt;code&gt;git am&lt;/code&gt; to cherry-pick them:</source>
          <target state="translated">Extraiga las confirmaciones entre las revisiones R1 y R2, y apl&amp;iacute;quelas en la parte superior de la rama actual usando &lt;code&gt;git am&lt;/code&gt; para seleccionarlas:</target>
        </trans-unit>
        <trans-unit id="a8d5387dbff833fee6e262477f3c484440daa076" translate="yes" xml:space="preserve">
          <source>Extract the last commit as a patch, and add a &lt;code&gt;Cc&lt;/code&gt; and a &lt;code&gt;Reviewed-by&lt;/code&gt; trailer to it:</source>
          <target state="translated">Extraiga la &amp;uacute;ltima confirmaci&amp;oacute;n como parche y agregue un &lt;code&gt;Cc&lt;/code&gt; y un avance &lt;code&gt;Reviewed-by&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="d9851ec1c9a62576efac72204eb04797ad73e77a" translate="yes" xml:space="preserve">
          <source>Extract three topmost commits from the current branch and format them as e-mailable patches:</source>
          <target state="translated">Extraer tres compromisos máximos de la rama actual y formatearlos como parches para enviar por correo electrónico:</target>
        </trans-unit>
        <trans-unit id="849870ce78e05c63608a62580dff149aaa2767a8" translate="yes" xml:space="preserve">
          <source>Extracted diagnostics</source>
          <target state="translated">Diagnósticos extraídos</target>
        </trans-unit>
        <trans-unit id="fd728d82ed551d8e8658407681eee58615e4b172" translate="yes" xml:space="preserve">
          <source>Extracts patch and authorship from a single e-mail message</source>
          <target state="translated">Extrae el parche y la autoría de un solo mensaje de correo electrónico</target>
        </trans-unit>
        <trans-unit id="77dbd3520a3a25fa2f64b3a79e8cdd2c5b438dfc" translate="yes" xml:space="preserve">
          <source>False by default.</source>
          <target state="translated">Falso por defecto.</target>
        </trans-unit>
        <trans-unit id="8f5880afd2dba5ba402b936eb6b908e040c6c17a" translate="yes" xml:space="preserve">
          <source>Fast-forward merge</source>
          <target state="translated">Fusión rápida</target>
        </trans-unit>
        <trans-unit id="235360a9581b02e6b66f950074d19d23f01883c5" translate="yes" xml:space="preserve">
          <source>Fast-forward merges</source>
          <target state="translated">Se fusiona rápidamente</target>
        </trans-unit>
        <trans-unit id="4b4c24663902945e814f463b99629f081662828a" translate="yes" xml:space="preserve">
          <source>Features in &lt;code&gt;%feature&lt;/code&gt;</source>
          <target state="translated">Funciones en &lt;code&gt;%feature&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ac7a3c81a6bcc5d5ecdbb8a42e39a3cabf204420" translate="yes" xml:space="preserve">
          <source>Fetch &amp;lt;n&amp;gt; log entries per request when scanning Subversion history. The default is 100. For very large Subversion repositories, larger values may be needed for &lt;code&gt;clone&lt;/code&gt;/&lt;code&gt;fetch&lt;/code&gt; to complete in reasonable time. But overly large values may lead to higher memory usage and request timeouts.</source>
          <target state="translated">Obtenga &amp;lt;n&amp;gt; entradas de registro por solicitud al escanear el historial de Subversion. El valor predeterminado es 100. Para repositorios de Subversion muy grandes, es posible que se necesiten valores m&amp;aacute;s grandes para que la &lt;code&gt;clone&lt;/code&gt; / &lt;code&gt;fetch&lt;/code&gt; complete en un tiempo razonable. Pero los valores demasiado grandes pueden conducir a un mayor uso de memoria y solicitar tiempos de espera.</target>
        </trans-unit>
        <trans-unit id="5fa9cbd39c84571e7bd481863d7516ff6663aa26" translate="yes" xml:space="preserve">
          <source>Fetch a &quot;thin&quot; pack, which records objects in deltified form based on objects not included in the pack to reduce network traffic.</source>
          <target state="translated">Busca un paquete &quot;delgado&quot;,que registra los objetos en forma delicada basándose en los objetos no incluidos en el paquete para reducir el tráfico de la red.</target>
        </trans-unit>
        <trans-unit id="bfa61173eb5ea4c62442430cdd5a0f9a2ccdc304" translate="yes" xml:space="preserve">
          <source>Fetch a branch from a different repository, and give it a new name in your repository:</source>
          <target state="translated">Busca una rama de otro repositorio y dale un nuevo nombre en tu repositorio:</target>
        </trans-unit>
        <trans-unit id="5f0a6423762963194f97ca1e3c9e8131a33fa3bd" translate="yes" xml:space="preserve">
          <source>Fetch a branch in a different Git repository, then merge into the current branch:</source>
          <target state="translated">Busca una rama en un repositorio Git diferente,y luego fúndete en la rama actual:</target>
        </trans-unit>
        <trans-unit id="4b2c92720b4e036e2e3a513a4ac4888b092fd45b" translate="yes" xml:space="preserve">
          <source>Fetch all remote refs.</source>
          <target state="translated">Trae a todos los árbitros remotos.</target>
        </trans-unit>
        <trans-unit id="fc6f62670a87982450c7fd1465c966b498d51b73" translate="yes" xml:space="preserve">
          <source>Fetch all remotes.</source>
          <target state="translated">Trae todos los mandos.</target>
        </trans-unit>
        <trans-unit id="7176a82579f2b775ede7e6b5698f625105e5e80d" translate="yes" xml:space="preserve">
          <source>Fetch all tags from the remote (i.e., fetch remote tags &lt;code&gt;refs/tags/*&lt;/code&gt; into local tags with the same name), in addition to whatever else would otherwise be fetched. Using this option alone does not subject tags to pruning, even if --prune is used (though tags may be pruned anyway if they are also the destination of an explicit refspec; see &lt;code&gt;--prune&lt;/code&gt;).</source>
          <target state="translated">Obtenga todas las etiquetas del control remoto (es decir, obtenga etiquetas remotas &lt;code&gt;refs/tags/*&lt;/code&gt; en etiquetas locales con el mismo nombre), adem&amp;aacute;s de cualquier otra cosa que de otro modo se obtendr&amp;iacute;a. El uso de esta opci&amp;oacute;n por s&amp;iacute; sola no somete las etiquetas a la poda, incluso si se usa --prune (aunque las etiquetas pueden podarse de todos modos si tambi&amp;eacute;n son el destino de una especificaci&amp;oacute;n de referencia expl&amp;iacute;cita; consulte &lt;code&gt;--prune&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="24eb114caf72bd86613f02567ef244ced32c67f3" translate="yes" xml:space="preserve">
          <source>Fetch branches and/or tags (collectively, &quot;refs&quot;) from one or more other repositories, along with the objects necessary to complete their histories. Remote-tracking branches are updated (see the description of &amp;lt;refspec&amp;gt; below for ways to control this behavior).</source>
          <target state="translated">Busque ramas y / o etiquetas (colectivamente, &quot;referencias&quot;) de uno o m&amp;aacute;s repositorios, junto con los objetos necesarios para completar sus historiales. Las ramas de seguimiento remoto se actualizan (consulte la descripci&amp;oacute;n de &amp;lt;refspec&amp;gt; a continuaci&amp;oacute;n para conocer las formas de controlar este comportamiento).</target>
        </trans-unit>
        <trans-unit id="31082e75ce46d9d1d50a3e2e4d3442657ed8677f" translate="yes" xml:space="preserve">
          <source>Fetch from and integrate with another repository or a local branch</source>
          <target state="translated">Obtener e integrar con otro depósito o una sucursal local</target>
        </trans-unit>
        <trans-unit id="31bd9486b123aa2097f6934aa8fc09cb0582f241" translate="yes" xml:space="preserve">
          <source>Fetch master, using file descriptor #17 to communicate with git-upload-pack.</source>
          <target state="translated">Busca al maestro,usando el descriptor de archivos #17 para comunicarse con git-upload-pack.</target>
        </trans-unit>
        <trans-unit id="c7b7a55dc86420061c3ee2c8e313312034e265da" translate="yes" xml:space="preserve">
          <source>Fetch only from the SVN parent of the current HEAD.</source>
          <target state="translated">Busca sólo en el padre SVN del actual HEAD.</target>
        </trans-unit>
        <trans-unit id="ab869fa62e8a09f8f5c922fc9c36375323cdbbc8" translate="yes" xml:space="preserve">
          <source>Fetch unfetched revisions from the Subversion remote we are tracking. The name of the [svn-remote &quot;&amp;hellip;​&quot;] section in the $GIT_DIR/config file may be specified as an optional command-line argument.</source>
          <target state="translated">Obtenga las revisiones no obtenidas del control remoto de Subversion que estamos rastreando. El nombre de la secci&amp;oacute;n [svn-remote &quot;&amp;hellip;&quot;] en el archivo $ GIT_DIR / config puede especificarse como un argumento de l&amp;iacute;nea de comandos opcional.</target>
        </trans-unit>
        <trans-unit id="280e77f3e0aa84ca742f26ca190cb5692edeefd2" translate="yes" xml:space="preserve">
          <source>Fetch updates for remotes or remote groups in the repository as defined by &lt;code&gt;remotes.&amp;lt;group&amp;gt;&lt;/code&gt;. If neither group nor remote is specified on the command line, the configuration parameter remotes.default will be used; if remotes.default is not defined, all remotes which do not have the configuration parameter &lt;code&gt;remote.&amp;lt;name&amp;gt;.skipDefaultUpdate&lt;/code&gt; set to true will be updated. (See &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15a003694d110886a95c99728ccaa08a956586a4" translate="yes" xml:space="preserve">
          <source>Fetch updates for remotes or remote groups in the repository as defined by remotes.&amp;lt;group&amp;gt;. If neither group nor remote is specified on the command line, the configuration parameter remotes.default will be used; if remotes.default is not defined, all remotes which do not have the configuration parameter remote.&amp;lt;name&amp;gt;.skipDefaultUpdate set to true will be updated. (See &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;).</source>
          <target state="translated">Obtenga actualizaciones para controles remotos o grupos remotos en el repositorio seg&amp;uacute;n lo definido por remotos. &amp;lt;group&amp;gt;. Si no se especifica ni grupo ni remoto en la l&amp;iacute;nea de comando, se utilizar&amp;aacute; el par&amp;aacute;metro de configuraci&amp;oacute;n remotes.default; si remotes.default no est&amp;aacute; definido, se actualizar&amp;aacute;n todos los controles remotos que no tengan el par&amp;aacute;metro de configuraci&amp;oacute;n remote. &amp;lt;nombre&amp;gt; .skipDefaultUpdate establecido en true. (Ver &lt;a href=&quot;git-config&quot;&gt;git-config [1]&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="82e98a6b98be0542f3ca46bd6c66454d11bde6bb" translate="yes" xml:space="preserve">
          <source>Fetches the given object, writing the necessary objects to the database. Fetch commands are sent in a batch, one per line, terminated with a blank line. Outputs a single blank line when all fetch commands in the same batch are complete. Only objects which were reported in the output of &lt;code&gt;list&lt;/code&gt; with a sha1 may be fetched this way.</source>
          <target state="translated">Obtiene el objeto dado, escribiendo los objetos necesarios en la base de datos. Los comandos de recuperaci&amp;oacute;n se env&amp;iacute;an por lotes, uno por l&amp;iacute;nea, terminados con una l&amp;iacute;nea en blanco. Muestra una sola l&amp;iacute;nea en blanco cuando todos los comandos de recuperaci&amp;oacute;n del mismo lote est&amp;aacute;n completos. Solo los objetos que se informaron en la salida de la &lt;code&gt;list&lt;/code&gt; a con un sha1 se pueden recuperar de esta manera.</target>
        </trans-unit>
        <trans-unit id="5e512ef616863b90580db01bc69e67097028beb3" translate="yes" xml:space="preserve">
          <source>Fetching a &lt;a href=&quot;#def_branch&quot;&gt;branch&lt;/a&gt; means to get the branch&amp;rsquo;s &lt;a href=&quot;#def_head_ref&quot;&gt;head ref&lt;/a&gt; from a remote &lt;a href=&quot;#def_repository&quot;&gt;repository&lt;/a&gt;, to find out which objects are missing from the local &lt;a href=&quot;#def_object_database&quot;&gt;object database&lt;/a&gt;, and to get them, too. See also &lt;a href=&quot;git-fetch&quot;&gt;git-fetch[1]&lt;/a&gt;.</source>
          <target state="translated">Obtener una &lt;a href=&quot;#def_branch&quot;&gt;rama&lt;/a&gt; significa obtener la &lt;a href=&quot;#def_head_ref&quot;&gt;referencia principal de&lt;/a&gt; la rama de un &lt;a href=&quot;#def_repository&quot;&gt;repositorio&lt;/a&gt; remoto , descubrir qu&amp;eacute; objetos faltan en la &lt;a href=&quot;#def_object_database&quot;&gt;base de datos de objetos&lt;/a&gt; local y obtenerlos tambi&amp;eacute;n. Consulte tambi&amp;eacute;n &lt;a href=&quot;git-fetch&quot;&gt;git-fetch [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ca528f4260a5f0ff38dd8302ddb33ede05c8ee7e" translate="yes" xml:space="preserve">
          <source>Fetching branches from other repositories</source>
          <target state="translated">Recoger ramas de otros depósitos</target>
        </trans-unit>
        <trans-unit id="38fdecc5037849cb76e9ff10175400ab8d8520f4" translate="yes" xml:space="preserve">
          <source>Fetching from a remote repository is done by, unsurprisingly, &lt;code&gt;git fetch&lt;/code&gt;:</source>
          <target state="translated">La obtenci&amp;oacute;n de un repositorio remoto se realiza, como era de esperar, &lt;code&gt;git fetch&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="66837c163f00048d36bcb5882cef29f3589ed957" translate="yes" xml:space="preserve">
          <source>Fetching individual branches</source>
          <target state="translated">Buscar ramas individuales...</target>
        </trans-unit>
        <trans-unit id="95fb769cdd33ccd5fcde15b12c59c0228df81279" translate="yes" xml:space="preserve">
          <source>Field names</source>
          <target state="translated">Nombres de los campos</target>
        </trans-unit>
        <trans-unit id="7d4e1fd5661dae539542971bb6b2fc728d599c94" translate="yes" xml:space="preserve">
          <source>Fields that have name-email-date tuple as its value (&lt;code&gt;author&lt;/code&gt;, &lt;code&gt;committer&lt;/code&gt;, and &lt;code&gt;tagger&lt;/code&gt;) can be suffixed with &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;email&lt;/code&gt;, and &lt;code&gt;date&lt;/code&gt; to extract the named component.</source>
          <target state="translated">Los campos que tienen nombre, correo electr&amp;oacute;nico, fecha de tupla como su valor ( &lt;code&gt;author&lt;/code&gt; , &lt;code&gt;committer&lt;/code&gt; , y &lt;code&gt;tagger&lt;/code&gt; ) puede ser el sufijo &lt;code&gt;name&lt;/code&gt; , &lt;code&gt;email&lt;/code&gt; y &lt;code&gt;date&lt;/code&gt; para extraer el componente llamado.</target>
        </trans-unit>
        <trans-unit id="f890c334357c63fe5c4a4300d447bac89c08dc17" translate="yes" xml:space="preserve">
          <source>Fields that have name-email-date tuple as its value (&lt;code&gt;author&lt;/code&gt;, &lt;code&gt;committer&lt;/code&gt;, and &lt;code&gt;tagger&lt;/code&gt;) can be suffixed with &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;email&lt;/code&gt;, and &lt;code&gt;date&lt;/code&gt; to extract the named component. For email fields (&lt;code&gt;authoremail&lt;/code&gt;, &lt;code&gt;committeremail&lt;/code&gt; and &lt;code&gt;taggeremail&lt;/code&gt;), &lt;code&gt;:trim&lt;/code&gt; can be appended to get the email without angle brackets, and &lt;code&gt;:localpart&lt;/code&gt; to get the part before the &lt;code&gt;@&lt;/code&gt; symbol out of the trimmed email.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed2ff2065be5f4efd23916d9b5c024804bb05ec6" translate="yes" xml:space="preserve">
          <source>Fields use modified URI encoding, defined in RFC 3986, section 2.1 (Percent-Encoding), or rather &quot;Query string encoding&quot; (see &lt;a href=&quot;https://en.wikipedia.org/wiki/Query_string#URL_encoding&quot;&gt;https://en.wikipedia.org/wiki/Query_string#URL_encoding&lt;/a&gt;), the difference being that SP (&quot; &quot;) can be encoded as &quot;+&quot; (and therefore &quot;+&quot; has to be also percent-encoded).</source>
          <target state="translated">Los campos utilizan codificaci&amp;oacute;n URI modificada, definida en RFC 3986, secci&amp;oacute;n 2.1 (Codificaci&amp;oacute;n porcentual), o m&amp;aacute;s bien &quot;Codificaci&amp;oacute;n de cadena de consulta&quot; (consulte &lt;a href=&quot;https://en.wikipedia.org/wiki/Query_string#URL_encoding&quot;&gt;https://en.wikipedia.org/wiki/Query_string#URL_encoding&lt;/a&gt; ), con la diferencia de que SP (&quot;&quot;) se puede codificar como &quot;+&quot; (y, por lo tanto, &quot;+&quot; tambi&amp;eacute;n tiene que estar codificado en porcentaje).</target>
        </trans-unit>
        <trans-unit id="ff9cc1a6f5bb5a91d014bd56871d8a7e6dedf925" translate="yes" xml:space="preserve">
          <source>Fighting regressions overview</source>
          <target state="translated">Visión general de la lucha contra las regresiones</target>
        </trans-unit>
        <trans-unit id="dc286ffc3d263eab0659e5254ed6cbdfe1ed4661" translate="yes" xml:space="preserve">
          <source>Figuring out why this works is left as an exercise to the (advanced) student. The &lt;a href=&quot;git-log&quot;&gt;git-log[1]&lt;/a&gt;, &lt;a href=&quot;git-diff-tree&quot;&gt;git-diff-tree[1]&lt;/a&gt;, and &lt;a href=&quot;git-hash-object&quot;&gt;git-hash-object[1]&lt;/a&gt; man pages may prove helpful.</source>
          <target state="translated">Averiguar por qu&amp;eacute; esto funciona se deja como un ejercicio para el estudiante (avanzado). Las p&amp;aacute;ginas de manual &lt;a href=&quot;git-log&quot;&gt;git-log [1]&lt;/a&gt; , &lt;a href=&quot;git-diff-tree&quot;&gt;git-diff-tree [1]&lt;/a&gt; y &lt;a href=&quot;git-hash-object&quot;&gt;git-hash-object [1]&lt;/a&gt; pueden resultar &amp;uacute;tiles.</target>
        </trans-unit>
        <trans-unit id="39b2ed94cef5d6961eea0620d66a925578f2f283" translate="yes" xml:space="preserve">
          <source>File containing the SSL certificate when fetching or pushing over HTTPS. Can be overridden by the &lt;code&gt;GIT_SSL_CERT&lt;/code&gt; environment variable.</source>
          <target state="translated">Archivo que contiene el certificado SSL al obtener o enviar HTTPS. Puede ser anulado por la variable de entorno &lt;code&gt;GIT_SSL_CERT&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e3b34071a7a6143f1cfbfe18d8122a378b6725a7" translate="yes" xml:space="preserve">
          <source>File containing the SSL private key when fetching or pushing over HTTPS. Can be overridden by the &lt;code&gt;GIT_SSL_KEY&lt;/code&gt; environment variable.</source>
          <target state="translated">Archivo que contiene la clave privada SSL al obtener o enviar HTTPS. Puede ser anulado por la variable de entorno &lt;code&gt;GIT_SSL_KEY&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a25f7e6a9a15db1a7bb16a1513a308705fbf008c" translate="yes" xml:space="preserve">
          <source>File containing the certificates to verify the peer with when fetching or pushing over HTTPS. Can be overridden by the &lt;code&gt;GIT_SSL_CAINFO&lt;/code&gt; environment variable.</source>
          <target state="translated">Archivo que contiene los certificados para verificar el par al obtener o enviar HTTPS. Puede ser reemplazado por la variable de entorno &lt;code&gt;GIT_SSL_CAINFO&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="51de61b9fb1649e39093ab80c2a7df2f9e16643a" translate="yes" xml:space="preserve">
          <source>File globbing matches across directory boundaries. Thus, given two directories &lt;code&gt;d&lt;/code&gt; and &lt;code&gt;d2&lt;/code&gt;, there is a difference between using &lt;code&gt;git rm 'd*'&lt;/code&gt; and &lt;code&gt;git rm 'd/*'&lt;/code&gt;, as the former will also remove all of directory &lt;code&gt;d2&lt;/code&gt;.</source>
          <target state="translated">Coincidencias de globalizaci&amp;oacute;n de archivos a trav&amp;eacute;s de los l&amp;iacute;mites del directorio. Por lo tanto, dados dos directorios &lt;code&gt;d&lt;/code&gt; y &lt;code&gt;d2&lt;/code&gt; , hay una diferencia entre usar &lt;code&gt;git rm 'd*'&lt;/code&gt; y &lt;code&gt;git rm 'd/*'&lt;/code&gt; , ya que el primero tambi&amp;eacute;n eliminar&amp;aacute; todo el directorio &lt;code&gt;d2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="46bdca067f191e47ac236c4a9946147313edeadf" translate="yes" xml:space="preserve">
          <source>File inclusion (&lt;code&gt;:include: /path/name&lt;/code&gt;) is not supported.</source>
          <target state="translated">No se admite la inclusi&amp;oacute;n de archivos ( &lt;code&gt;:include: /path/name&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="0052ebd08e3dda2e68d8ee7b082b7c890d6ddeef" translate="yes" xml:space="preserve">
          <source>File indicating how to order files within a diff. See the &lt;code&gt;-O&lt;/code&gt; option to &lt;a href=&quot;git-diff&quot;&gt;git-diff[1]&lt;/a&gt; for details. If &lt;code&gt;diff.orderFile&lt;/code&gt; is a relative pathname, it is treated as relative to the top of the working tree.</source>
          <target state="translated">Archivo que indica c&amp;oacute;mo ordenar archivos dentro de una diferencia. Consulte la opci&amp;oacute;n &lt;code&gt;-O&lt;/code&gt; de &lt;a href=&quot;git-diff&quot;&gt;git-diff [1]&lt;/a&gt; para obtener m&amp;aacute;s detalles. Si &lt;code&gt;diff.orderFile&lt;/code&gt; es un nombre de ruta relativo, se trata como relativo a la parte superior del &amp;aacute;rbol de trabajo.</target>
        </trans-unit>
        <trans-unit id="f2b61a4d1705fa3305542b48c5c1ffd38b30200f" translate="yes" xml:space="preserve">
          <source>File modes are printed as 6-digit octal numbers including the file type and file permission bits.</source>
          <target state="translated">Los modos de archivo se imprimen como números octales de 6 dígitos,incluyendo el tipo de archivo y los bits de permiso de archivo.</target>
        </trans-unit>
        <trans-unit id="cd4c7b960aaa326dfff2bf746e515a16b2b5bd4d" translate="yes" xml:space="preserve">
          <source>File system monitor</source>
          <target state="translated">Monitor del sistema de archivos</target>
        </trans-unit>
        <trans-unit id="dab1e8f60ab6cd6f09a76739b1f40f880fb79310" translate="yes" xml:space="preserve">
          <source>File to use for (filename extension based) guessing of MIME types before trying &lt;code&gt;/etc/mime.types&lt;/code&gt;. &lt;strong&gt;NOTE&lt;/strong&gt; that this path, if relative, is taken as relative to the current Git repository, not to CGI script. If unset, only &lt;code&gt;/etc/mime.types&lt;/code&gt; is used (if present on filesystem). If no mimetypes file is found, mimetype guessing based on extension of file is disabled. Unset by default.</source>
          <target state="translated">Archivo que se utilizar&amp;aacute; para adivinar (basado en la extensi&amp;oacute;n del nombre de archivo) los tipos MIME antes de probar &lt;code&gt;/etc/mime.types&lt;/code&gt; . &lt;strong&gt;TENGA EN CUENTA&lt;/strong&gt; que esta ruta, si es relativa, se toma como relativa al repositorio actual de Git, no al script CGI. Si no est&amp;aacute; configurado, solo se usa &lt;code&gt;/etc/mime.types&lt;/code&gt; (si est&amp;aacute; presente en el sistema de archivos). Si no se encuentra ning&amp;uacute;n archivo mimetypes, la adivinaci&amp;oacute;n de mimetypes basada en la extensi&amp;oacute;n del archivo est&amp;aacute; desactivada. Desarmado por defecto.</target>
        </trans-unit>
        <trans-unit id="f045415cfa170f304a990874fe0966e6d4eacafb" translate="yes" xml:space="preserve">
          <source>File with repository URL (used for clone and fetch), one per line. Displayed in the project summary page. You can use multiple-valued &lt;code&gt;gitweb.url&lt;/code&gt; repository configuration variable for that, but the file takes precedence.</source>
          <target state="translated">Archivo con URL de repositorio (utilizado para clonar y recuperar), uno por l&amp;iacute;nea. Se muestra en la p&amp;aacute;gina de resumen del proyecto. Puede usar la variable de configuraci&amp;oacute;n del repositorio &lt;code&gt;gitweb.url&lt;/code&gt; de varios valores para eso, pero el archivo tiene prioridad.</target>
        </trans-unit>
        <trans-unit id="f73380191ad1f1caa70019147dbb81cb74dd0fbd" translate="yes" xml:space="preserve">
          <source>File/directory structure</source>
          <target state="translated">Estructura de archivos/directorios</target>
        </trans-unit>
        <trans-unit id="ee97d026e695edaa3af17191656d312a0a7a2ccb" translate="yes" xml:space="preserve">
          <source>Filenames with spaces are often mishandled by shell snippets since they cause problems for shell pipelines. Not everyone is familiar with find -print0, xargs -0, git-ls-files -z, etc. Even people who are familiar with these may assume such flags are not relevant because someone else renamed any such files in their repo back before the person doing the filtering joined the project. And often, even those familiar with handling arguments with spaces may not do so just because they aren&amp;rsquo;t in the mindset of thinking about everything that could possibly go wrong.</source>
          <target state="translated">Los nombres de archivo con espacios a menudo son mal manejados por fragmentos de shell, ya que causan problemas a las canalizaciones de shell. No todo el mundo est&amp;aacute; familiarizado con find -print0, xargs -0, git-ls-files -z, etc. Incluso las personas que est&amp;aacute;n familiarizadas con estos pueden suponer que dichos indicadores no son relevantes porque alguien m&amp;aacute;s cambi&amp;oacute; el nombre de dichos archivos en su repositorio antes de la la persona que realiza el filtrado se uni&amp;oacute; al proyecto. Y a menudo, incluso aquellos que est&amp;aacute;n familiarizados con el manejo de argumentos con espacios pueden no hacerlo solo porque no est&amp;aacute;n en la mentalidad de pensar en todo lo que podr&amp;iacute;a salir mal.</target>
        </trans-unit>
        <trans-unit id="6ce6c512ea433a7fc5c8841628e7696cd0ff7f2b" translate="yes" xml:space="preserve">
          <source>Files</source>
          <target state="translated">Files</target>
        </trans-unit>
        <trans-unit id="669b1abdd74168ff79423d155c9ddb7e43a80b6e" translate="yes" xml:space="preserve">
          <source>Files (and pointers to subtrees) within active trees require 52 or 64 bytes (32/64 bit platforms) per entry. To conserve space, file and tree names are pooled in a common string table, allowing the filename &amp;ldquo;Makefile&amp;rdquo; to use just 16 bytes (after including the string header overhead) no matter how many times it occurs within the project.</source>
          <target state="translated">Los archivos (y los apuntadores a los sub&amp;aacute;rboles) dentro de los &amp;aacute;rboles activos requieren 52 o 64 bytes (plataformas de 32/64 bits) por entrada. Para ahorrar espacio, los nombres de archivos y &amp;aacute;rboles se agrupan en una tabla de cadenas com&amp;uacute;n, lo que permite que el nombre de archivo &amp;ldquo;Makefile&amp;rdquo; utilice solo 16 bytes (despu&amp;eacute;s de incluir la sobrecarga del encabezado de la cadena) sin importar cu&amp;aacute;ntas veces ocurra dentro del proyecto.</target>
        </trans-unit>
        <trans-unit id="94bbb76c1352043c45a00df324ef04fea70e6730" translate="yes" xml:space="preserve">
          <source>Files and directories in the template directory whose name do not start with a dot will be copied to the &lt;code&gt;$GIT_DIR&lt;/code&gt; after it is created.</source>
          <target state="translated">Los archivos y directorios del directorio de plantillas cuyo nombre no comience con un punto se copiar&amp;aacute;n en &lt;code&gt;$GIT_DIR&lt;/code&gt; despu&amp;eacute;s de su creaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="d1270c9a81ec2853fddc0c884f8ccb1e8a45b97e" translate="yes" xml:space="preserve">
          <source>Files and directories with the attribute &lt;code&gt;export-ignore&lt;/code&gt; won&amp;rsquo;t be added to archive files.</source>
          <target state="translated">Los archivos y directorios con el atributo &lt;code&gt;export-ignore&lt;/code&gt; no se agregar&amp;aacute;n a los archivos de almacenamiento.</target>
        </trans-unit>
        <trans-unit id="e3974c4c3ce398cf177c9471660017bb110038df" translate="yes" xml:space="preserve">
          <source>Files and directories with the attribute export-ignore won&amp;rsquo;t be added to archive files. See &lt;a href=&quot;gitattributes&quot;&gt;gitattributes[5]&lt;/a&gt; for details.</source>
          <target state="translated">Los archivos y directorios con el atributo export-ignore no se agregar&amp;aacute;n a los archivos de almacenamiento. Consulte &lt;a href=&quot;gitattributes&quot;&gt;gitattributes [5]&lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="a7b0ec5c5be81a4a3b161d0317a98cc9a7a62cb3" translate="yes" xml:space="preserve">
          <source>Files larger than this size are stored deflated, without attempting delta compression. Storing large files without delta compression avoids excessive memory usage, at the slight expense of increased disk usage. Additionally files larger than this size are always treated as binary.</source>
          <target state="translated">Los archivos más grandes que este tamaño se almacenan desinflados,sin intentar la compresión delta.Almacenar archivos grandes sin compresión delta evita el uso excesivo de la memoria,a costa de un ligero aumento del uso del disco.Además,los archivos más grandes que este tamaño siempre se tratan como binarios.</target>
        </trans-unit>
        <trans-unit id="b57b0d88e9fd775cd564cc119a3989093d68ff8d" translate="yes" xml:space="preserve">
          <source>Files to act on. Note that files beginning with &lt;code&gt;.&lt;/code&gt; are discarded. This includes &lt;code&gt;./file&lt;/code&gt; and &lt;code&gt;dir/./file&lt;/code&gt;. If you don&amp;rsquo;t want this, then use cleaner names. The same applies to directories ending &lt;code&gt;/&lt;/code&gt; and paths with &lt;code&gt;//&lt;/code&gt;</source>
          <target state="translated">Archivos sobre los que actuar. Tenga en cuenta que los archivos que comienzan con &lt;code&gt;.&lt;/code&gt; se descartan. Esto incluye &lt;code&gt;./file&lt;/code&gt; y &lt;code&gt;dir/./file&lt;/code&gt; . Si no quiere esto, utilice nombres m&amp;aacute;s limpios. Lo mismo se aplica a los directorios que terminan en &lt;code&gt;/&lt;/code&gt; y las rutas con &lt;code&gt;//&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a229bb6156d5f90b453ca5e0ca33977f1a3e6a8a" translate="yes" xml:space="preserve">
          <source>Files to add content from. Fileglobs (e.g. &lt;code&gt;*.c&lt;/code&gt;) can be given to add all matching files. Also a leading directory name (e.g. &lt;code&gt;dir&lt;/code&gt; to add &lt;code&gt;dir/file1&lt;/code&gt; and &lt;code&gt;dir/file2&lt;/code&gt;) can be given to update the index to match the current state of the directory as a whole (e.g. specifying &lt;code&gt;dir&lt;/code&gt; will record not just a file &lt;code&gt;dir/file1&lt;/code&gt; modified in the working tree, a file &lt;code&gt;dir/file2&lt;/code&gt; added to the working tree, but also a file &lt;code&gt;dir/file3&lt;/code&gt; removed from the working tree). Note that older versions of Git used to ignore removed files; use &lt;code&gt;--no-all&lt;/code&gt; option if you want to add modified or new files but ignore removed ones.</source>
          <target state="translated">Archivos para agregar contenido. Se pueden proporcionar Fileglobs (por ejemplo, &lt;code&gt;*.c&lt;/code&gt; ) para agregar todos los archivos coincidentes. Tambi&amp;eacute;n se puede dar un nombre de directorio principal (por ejemplo, &lt;code&gt;dir&lt;/code&gt; para agregar &lt;code&gt;dir/file1&lt;/code&gt; y &lt;code&gt;dir/file2&lt;/code&gt; ) para actualizar el &amp;iacute;ndice para que coincida con el estado actual del directorio como un todo (por ejemplo, al especificar &lt;code&gt;dir&lt;/code&gt; no solo se registrar&amp;aacute; un archivo &lt;code&gt;dir/file1&lt;/code&gt; modificado en el &amp;aacute;rbol de trabajo, un archivo &lt;code&gt;dir/file2&lt;/code&gt; agregado al &amp;aacute;rbol de trabajo, pero tambi&amp;eacute;n un archivo &lt;code&gt;dir/file3&lt;/code&gt; eliminado del &amp;aacute;rbol de trabajo). Tenga en cuenta que las versiones anteriores de Git sol&amp;iacute;an ignorar los archivos eliminados; use la &lt;code&gt;--no-all&lt;/code&gt; si desea agregar archivos nuevos o modificados, pero ignore los eliminados.</target>
        </trans-unit>
        <trans-unit id="965ffdf35ae99a80180c99419426ec2062c992e9" translate="yes" xml:space="preserve">
          <source>Files to remove. A leading directory name (e.g. &lt;code&gt;dir&lt;/code&gt; to remove &lt;code&gt;dir/file1&lt;/code&gt; and &lt;code&gt;dir/file2&lt;/code&gt;) can be given to remove all files in the directory, and recursively all sub-directories, but this requires the &lt;code&gt;-r&lt;/code&gt; option to be explicitly given.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fcfbd1668d25020111102295bf825ad36cd4ad7" translate="yes" xml:space="preserve">
          <source>Files to remove. Fileglobs (e.g. &lt;code&gt;*.c&lt;/code&gt;) can be given to remove all matching files. If you want Git to expand file glob characters, you may need to shell-escape them. A leading directory name (e.g. &lt;code&gt;dir&lt;/code&gt; to remove &lt;code&gt;dir/file1&lt;/code&gt; and &lt;code&gt;dir/file2&lt;/code&gt;) can be given to remove all files in the directory, and recursively all sub-directories, but this requires the &lt;code&gt;-r&lt;/code&gt; option to be explicitly given.</source>
          <target state="translated">Archivos para eliminar. Se pueden proporcionar Fileglobs (por ejemplo, &lt;code&gt;*.c&lt;/code&gt; ) para eliminar todos los archivos coincidentes. Si desea que Git expanda los caracteres globales del archivo, es posible que deba escapar de ellos. Se puede dar un nombre de directorio principal (por ejemplo, &lt;code&gt;dir&lt;/code&gt; para eliminar &lt;code&gt;dir/file1&lt;/code&gt; y &lt;code&gt;dir/file2&lt;/code&gt; ) para eliminar todos los archivos del directorio y, de forma recursiva, todos los subdirectorios, pero esto requiere que se proporcione expl&amp;iacute;citamente la opci&amp;oacute;n &lt;code&gt;-r&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d69266d087a66debaeaa16301b1f83a323ef3a05" translate="yes" xml:space="preserve">
          <source>Files to show. If no files are given all files which match the other specified criteria are shown.</source>
          <target state="translated">Archivos para mostrar.Si no se da ningún archivo,se muestran todos los archivos que coinciden con los otros criterios especificados.</target>
        </trans-unit>
        <trans-unit id="94b61f142196a44a91e5065c7d0adcb5cad7dae3" translate="yes" xml:space="preserve">
          <source>Files with conflicts are marked specially in the index, so until you resolve the problem and update the index, &lt;a href=&quot;git-commit&quot;&gt;git-commit[1]&lt;/a&gt; will fail:</source>
          <target state="translated">Los archivos con conflictos se marcan especialmente en el &amp;iacute;ndice, por lo que hasta que resuelva el problema y actualice el &amp;iacute;ndice, &lt;a href=&quot;git-commit&quot;&gt;git-commit [1]&lt;/a&gt; fallar&amp;aacute;:</target>
        </trans-unit>
        <trans-unit id="96e578211aa295317cf257310712fa28ccd8f6c6" translate="yes" xml:space="preserve">
          <source>Filters</source>
          <target state="translated">Filters</target>
        </trans-unit>
        <trans-unit id="1cf100e1097311bd9759a52dc063dba54a0c3fc0" translate="yes" xml:space="preserve">
          <source>Finalize an in-progress &lt;code&gt;git notes merge&lt;/code&gt;. Use this option when you have resolved the conflicts that &lt;code&gt;git notes merge&lt;/code&gt; stored in .git/NOTES_MERGE_WORKTREE. This amends the partial merge commit created by &lt;code&gt;git notes merge&lt;/code&gt; (stored in .git/NOTES_MERGE_PARTIAL) by adding the notes in .git/NOTES_MERGE_WORKTREE. The notes ref stored in the .git/NOTES_MERGE_REF symref is updated to the resulting commit.</source>
          <target state="translated">Finalizar una &lt;code&gt;git notes merge&lt;/code&gt; en curso . Utilice esta opci&amp;oacute;n cuando haya resuelto los conflictos de &lt;code&gt;git notes merge&lt;/code&gt; almacenados en .git / NOTES_MERGE_WORKTREE. Esto modifica la confirmaci&amp;oacute;n de fusi&amp;oacute;n parcial creada por la &lt;code&gt;git notes merge&lt;/code&gt; (almacenada en .git / NOTES_MERGE_PARTIAL) agregando las notas en .git / NOTES_MERGE_WORKTREE. La referencia de notas almacenada en el .git / NOTES_MERGE_REF symref se actualiza a la confirmaci&amp;oacute;n resultante.</target>
        </trans-unit>
        <trans-unit id="9eb00b677ea152c9f2f0f234add05ac350dd5a77" translate="yes" xml:space="preserve">
          <source>Finally it examines &lt;code&gt;$GIT_DIR/info/attributes&lt;/code&gt;. This file is used to override the in-tree settings. The first line is a match, and &lt;code&gt;foo&lt;/code&gt; is set, &lt;code&gt;bar&lt;/code&gt; is reverted to unspecified state, and &lt;code&gt;baz&lt;/code&gt; is unset.</source>
          <target state="translated">Finalmente, examina &lt;code&gt;$GIT_DIR/info/attributes&lt;/code&gt; . Este archivo se utiliza para anular la configuraci&amp;oacute;n del &amp;aacute;rbol. La primera l&amp;iacute;nea es una coincidencia, y &lt;code&gt;foo&lt;/code&gt; est&amp;aacute; configurado, &lt;code&gt;bar&lt;/code&gt; se revierte a un estado no especificado y &lt;code&gt;baz&lt;/code&gt; no est&amp;aacute; configurado.</target>
        </trans-unit>
        <trans-unit id="331d183abb3e32c5b94fe163358b0bd60def41df" translate="yes" xml:space="preserve">
          <source>Finally, if &lt;code&gt;--expire-time=&amp;lt;datetime&amp;gt;&lt;/code&gt; is not specified, let &lt;code&gt;datetime&lt;/code&gt; be the current time. After writing the split commit-graph, delete all unused commit-graph whose modified times are older than &lt;code&gt;datetime&lt;/code&gt;.</source>
          <target state="translated">Finalmente, si no se especifica &lt;code&gt;--expire-time=&amp;lt;datetime&amp;gt;&lt;/code&gt; , deje que &lt;code&gt;datetime&lt;/code&gt; sea ​​la hora actual. Despu&amp;eacute;s de escribir el gr&amp;aacute;fico de compromiso dividido, elimine todos los gr&amp;aacute;ficos de compromiso no utilizados cuyos tiempos modificados sean anteriores a &lt;code&gt;datetime&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="43d1a6457be0c846de5bf38ab3298d9d3628832d" translate="yes" xml:space="preserve">
          <source>Finally, it is possible to specify an arbitrary perl subroutine that will be called for each repository to determine if it can be exported. The subroutine receives an absolute path to the project (repository) as its only parameter (i.e. &quot;$projectroot/$project&quot;).</source>
          <target state="translated">Por último,es posible especificar una subrutina perl arbitraria que se llamará para cada depósito para determinar si puede ser exportada.La subrutina recibe una ruta absoluta al proyecto (repositorio)como único parámetro (es decir,&quot;$projectroot/$project&quot;).</target>
        </trans-unit>
        <trans-unit id="24d1078763f97a2ccc23634e9fb57ca6945117cd" translate="yes" xml:space="preserve">
          <source>Finally, it&amp;rsquo;s worth looking at the effect of &lt;code&gt;git add&lt;/code&gt; on the index file:</source>
          <target state="translated">Finalmente, vale la pena observar el efecto de &lt;code&gt;git add&lt;/code&gt; en el archivo de &amp;iacute;ndice:</target>
        </trans-unit>
        <trans-unit id="8264955cf61255273040b40a18d8fbbb22fa2f72" translate="yes" xml:space="preserve">
          <source>Finally, most commands that take filenames will optionally allow you to precede any filename by a commit, to specify a particular version of the file:</source>
          <target state="translated">Por último,la mayoría de los comandos que toman nombres de archivos le permitirán,opcionalmente,preceder cualquier nombre de archivo por una confirmación,para especificar una versión particular del archivo:</target>
        </trans-unit>
        <trans-unit id="6c56e02ffa0dc0d04395282d17622dfa271e848b" translate="yes" xml:space="preserve">
          <source>Finally, runs of whitespace are normalized to a single ASCII space character.</source>
          <target state="translated">Finalmente,los recorridos de los espacios en blanco se normalizan a un solo carácter espacial ASCII.</target>
        </trans-unit>
        <trans-unit id="f254df0ed5803ab0d672797542ab7bd433761746" translate="yes" xml:space="preserve">
          <source>Finally, see &lt;a href=&quot;#todo&quot;&gt;Notes and todo list for this manual&lt;/a&gt; for ways that you can help make this manual more complete.</source>
          <target state="translated">Por &amp;uacute;ltimo, consulte las &lt;a href=&quot;#todo&quot;&gt;Notas y la lista de tareas pendientes de este manual&lt;/a&gt; para conocer las formas en las que puede ayudar a que este manual sea m&amp;aacute;s completo.</target>
        </trans-unit>
        <trans-unit id="0f28877b4b3e20afaa3344b89d8d8e7dd3cc9a77" translate="yes" xml:space="preserve">
          <source>Finally, the list of matching commits is shown in the order of the second commit range, with unmatched commits being inserted just after all of their ancestors have been shown.</source>
          <target state="translated">Por último,la lista de confirmaciones coincidentes se muestra en el orden del segundo rango de confirmaciones,y las confirmaciones no coincidentes se insertan justo después de que se hayan mostrado todos sus ancestros.</target>
        </trans-unit>
        <trans-unit id="9a3fea8b3f0925da6c2b86381c6c149ac6f29683" translate="yes" xml:space="preserve">
          <source>Finally, there are a few odds and ends which are not purely moving from one representation to the other:</source>
          <target state="translated">Por último,hay algunas probabilidades y extremos que no se mueven puramente de una representación a la otra:</target>
        </trans-unit>
        <trans-unit id="3fe4e962ec8320ef45c1375652f3937a50d04ca2" translate="yes" xml:space="preserve">
          <source>Finally, there is a fifth simplification mode available:</source>
          <target state="translated">Finalmente,hay un quinto modo de simplificación disponible:</target>
        </trans-unit>
        <trans-unit id="be9a3fea0f82381aa185e3a3e7bc70453cddfef1" translate="yes" xml:space="preserve">
          <source>Finally, these options can be combined with a layout option (defaults to &lt;code&gt;nodense&lt;/code&gt;):</source>
          <target state="translated">Finalmente, estas opciones se pueden combinar con una opci&amp;oacute;n de dise&amp;ntilde;o (por defecto es &lt;code&gt;nodense&lt;/code&gt; ):</target>
        </trans-unit>
        <trans-unit id="20a1c9ffc616ee01b8dce65bdb93f7148cbfeb85" translate="yes" xml:space="preserve">
          <source>Find a helper.</source>
          <target state="translated">Encuentra un ayudante.</target>
        </trans-unit>
        <trans-unit id="30d88faf5655c44ff9e677fe0e00c8e9ca77aa3d" translate="yes" xml:space="preserve">
          <source>Find a ref that matches &lt;code&gt;experimental&lt;/code&gt; in the &lt;code&gt;origin&lt;/code&gt; repository (e.g. &lt;code&gt;refs/heads/experimental&lt;/code&gt;), and delete it.</source>
          <target state="translated">Busque una referencia que coincida con &lt;code&gt;experimental&lt;/code&gt; en el repositorio de &lt;code&gt;origin&lt;/code&gt; (por ejemplo, &lt;code&gt;refs/heads/experimental&lt;/code&gt; ) y elim&amp;iacute;nela.</target>
        </trans-unit>
        <trans-unit id="ef251b247769ae2bcbe4a6086b08e0deff95b9d6" translate="yes" xml:space="preserve">
          <source>Find a ref that matches &lt;code&gt;master&lt;/code&gt; in the source repository (most likely, it would find &lt;code&gt;refs/heads/master&lt;/code&gt;), and update the same ref (e.g. &lt;code&gt;refs/heads/master&lt;/code&gt;) in &lt;code&gt;origin&lt;/code&gt; repository with it. If &lt;code&gt;master&lt;/code&gt; did not exist remotely, it would be created.</source>
          <target state="translated">Encuentre una referencia que coincida con &lt;code&gt;master&lt;/code&gt; en el repositorio de origen (lo m&amp;aacute;s probable es que encuentre &lt;code&gt;refs/heads/master&lt;/code&gt; ) y actualice la misma referencia (por ejemplo, &lt;code&gt;refs/heads/master&lt;/code&gt; ) en el repositorio de &lt;code&gt;origin&lt;/code&gt; con ella. Si el &lt;code&gt;master&lt;/code&gt; no existiera de forma remota, se crear&amp;iacute;a.</target>
        </trans-unit>
        <trans-unit id="ccef9d1bcc3ad53f8d4e9015291e141315fc185c" translate="yes" xml:space="preserve">
          <source>Find as good common ancestors as possible for a merge</source>
          <target state="translated">Encontrar los mejores antepasados comunes posibles para una fusión</target>
        </trans-unit>
        <trans-unit id="d3f173da3a7dce0bd9994325b78952d16aab8240" translate="yes" xml:space="preserve">
          <source>Find commits yet to be applied to upstream</source>
          <target state="translated">Encontrar compromisos que aún no se han aplicado a las aguas arriba</target>
        </trans-unit>
        <trans-unit id="f766cd71208fbf6c57bd1c63b40f06ddd3b5b9dc" translate="yes" xml:space="preserve">
          <source>Find first tagged version including a given fix</source>
          <target state="translated">Encuentra la primera versión etiquetada que incluye un arreglo determinado</target>
        </trans-unit>
        <trans-unit id="df9e9c717faf5fac976a38f227398efdc30aeda9" translate="yes" xml:space="preserve">
          <source>Find redundant pack files</source>
          <target state="translated">Encontrar archivos de paquetes redundantes</target>
        </trans-unit>
        <trans-unit id="44f9539ac1c361035e9a88da329c269fe8a0f4cb" translate="yes" xml:space="preserve">
          <source>Find symbolic names for given revs</source>
          <target state="translated">Encuentra nombres simbólicos para determinadas revoluciones</target>
        </trans-unit>
        <trans-unit id="f381cb9cf3280c2142361c5998997b7124410055" translate="yes" xml:space="preserve">
          <source>Find the color configured for &lt;code&gt;name&lt;/code&gt; (e.g. &lt;code&gt;color.diff.new&lt;/code&gt;) and output it as the ANSI color escape sequence to the standard output. The optional &lt;code&gt;default&lt;/code&gt; parameter is used instead, if there is no color configured for &lt;code&gt;name&lt;/code&gt;.</source>
          <target state="translated">Busque el color configurado para el &lt;code&gt;name&lt;/code&gt; (por ejemplo, &lt;code&gt;color.diff.new&lt;/code&gt; ) y env&amp;iacute;elo como secuencia de escape de color ANSI a la salida est&amp;aacute;ndar. En su lugar, se utiliza el par&amp;aacute;metro &lt;code&gt;default&lt;/code&gt; opcional , si no hay ning&amp;uacute;n color configurado para el &lt;code&gt;name&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="40d2e7dbd88f8b4a905f40b739ac46054d6c280f" translate="yes" xml:space="preserve">
          <source>Find the color setting for &lt;code&gt;name&lt;/code&gt; (e.g. &lt;code&gt;color.diff&lt;/code&gt;) and output &quot;true&quot; or &quot;false&quot;. &lt;code&gt;stdout-is-tty&lt;/code&gt; should be either &quot;true&quot; or &quot;false&quot;, and is taken into account when configuration says &quot;auto&quot;. If &lt;code&gt;stdout-is-tty&lt;/code&gt; is missing, then checks the standard output of the command itself, and exits with status 0 if color is to be used, or exits with status 1 otherwise. When the color setting for &lt;code&gt;name&lt;/code&gt; is undefined, the command uses &lt;code&gt;color.ui&lt;/code&gt; as fallback.</source>
          <target state="translated">Busque la configuraci&amp;oacute;n de color para el &lt;code&gt;name&lt;/code&gt; (por ejemplo, &lt;code&gt;color.diff&lt;/code&gt; ) y escriba &quot;verdadero&quot; o &quot;falso&quot;. &lt;code&gt;stdout-is-tty&lt;/code&gt; debe ser &quot;verdadero&quot; o &quot;falso&quot;, y se tiene en cuenta cuando la configuraci&amp;oacute;n dice &quot;auto&quot;. Si falta &lt;code&gt;stdout-is-tty&lt;/code&gt; , comprueba la salida est&amp;aacute;ndar del comando en s&amp;iacute; y sale con el estado 0 si se va a utilizar color, o sale con el estado 1 en caso contrario. Cuando la configuraci&amp;oacute;n de color para el &lt;code&gt;name&lt;/code&gt; no est&amp;aacute; definida, el comando usa &lt;code&gt;color.ui&lt;/code&gt; como respaldo .</target>
        </trans-unit>
        <trans-unit id="df59454620e80f086423090568733ac46b2847e0" translate="yes" xml:space="preserve">
          <source>Find the point at which a branch (or any history that leads to &amp;lt;commit&amp;gt;) forked from another branch (or any reference) &amp;lt;ref&amp;gt;. This does not just look for the common ancestor of the two commits, but also takes into account the reflog of &amp;lt;ref&amp;gt; to see if the history leading to &amp;lt;commit&amp;gt; forked from an earlier incarnation of the branch &amp;lt;ref&amp;gt; (see discussion on this mode below).</source>
          <target state="translated">Encuentre el punto en el que una rama (o cualquier historial que lleve a &amp;lt;commit&amp;gt;) se bifurc&amp;oacute; desde otra rama (o cualquier referencia) &amp;lt;ref&amp;gt;. Esto no solo busca el ancestro com&amp;uacute;n de las dos confirmaciones, sino que tambi&amp;eacute;n tiene en cuenta el reflog de &amp;lt;ref&amp;gt; para ver si el historial que lleva a &amp;lt;commit&amp;gt; se bifurc&amp;oacute; a partir de una encarnaci&amp;oacute;n anterior de la rama &amp;lt;ref&amp;gt; (ver discusi&amp;oacute;n en este modo a continuaci&amp;oacute;n).</target>
        </trans-unit>
        <trans-unit id="9da189d134fc7190f0c6c1f5c3193ab5948bf13c" translate="yes" xml:space="preserve">
          <source>Finding commits referencing a file with given content</source>
          <target state="translated">Encontrar confirmaciones que hacen referencia a un archivo con un contenido determinado</target>
        </trans-unit>
        <trans-unit id="e333b71e49766be9f1d76f262411fa340daf0c70" translate="yes" xml:space="preserve">
          <source>Finding commits which commit messages matches given search term.</source>
          <target state="translated">Encontrar compromisos que coincidan con el término de búsqueda.</target>
        </trans-unit>
        <trans-unit id="1eaaf96aa600c577b3f3a9747228f1b65b0ceefc" translate="yes" xml:space="preserve">
          <source>Finding files</source>
          <target state="translated">Encontrar archivos</target>
        </trans-unit>
        <trans-unit id="2fc00785f4570abeeda498c54f0284462aed8b44" translate="yes" xml:space="preserve">
          <source>Finding performance regressions</source>
          <target state="translated">Encontrar las regresiones de rendimiento</target>
        </trans-unit>
        <trans-unit id="bc2b131e580f41edfbbcd8f6c9c60a09f1a25b76" translate="yes" xml:space="preserve">
          <source>Finds symbolic names suitable for human digestion for revisions given in any format parsable by &lt;code&gt;git rev-parse&lt;/code&gt;.</source>
          <target state="translated">Encuentra nombres simb&amp;oacute;licos adecuados para la digesti&amp;oacute;n humana para revisiones dadas en cualquier formato analizable por &lt;code&gt;git rev-parse&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7d4b2472daa261c193507bf4d856ace529dabcc6" translate="yes" xml:space="preserve">
          <source>First let&amp;rsquo;s assume your &lt;code&gt;topic&lt;/code&gt; is based on branch &lt;code&gt;next&lt;/code&gt;. For example, a feature developed in &lt;code&gt;topic&lt;/code&gt; depends on some functionality which is found in &lt;code&gt;next&lt;/code&gt;.</source>
          <target state="translated">Primero supongamos que su &lt;code&gt;topic&lt;/code&gt; se basa en la rama &lt;code&gt;next&lt;/code&gt; . Por ejemplo, una caracter&amp;iacute;stica desarrollada en el &lt;code&gt;topic&lt;/code&gt; depende de alguna funcionalidad que se encuentra en el &lt;code&gt;next&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ed8007e4d48fad1e0a696af768b6078f3fa95c0a" translate="yes" xml:space="preserve">
          <source>First let&amp;rsquo;s define &quot;best bisection point&quot;. We will say that a commit X is a best bisection point or a best bisection commit if knowing its state (&quot;good&quot; or &quot;bad&quot;) gives as much information as possible whether the state of the commit happens to be &quot;good&quot; or &quot;bad&quot;.</source>
          <target state="translated">Primero definamos &quot;el mejor punto de bisecci&amp;oacute;n&quot;. Diremos que un compromiso X es un mejor punto de bisecci&amp;oacute;n o un mejor compromiso de bisecci&amp;oacute;n si conocer su estado (&quot;bueno&quot; o &quot;malo&quot;) proporciona la mayor cantidad de informaci&amp;oacute;n posible si el estado del compromiso es &quot;bueno&quot; o &quot; malo&quot;.</target>
        </trans-unit>
        <trans-unit id="ee7f8a8fdabeacb4105bb68c4dfba6a20cea041f" translate="yes" xml:space="preserve">
          <source>First merges by themselves can introduce some regressions even when the merge needs no source code conflict resolution. This is because a semantic change can happen in one branch while the other branch is not aware of it.</source>
          <target state="translated">Las primeras fusiones por sí mismas pueden introducir algunas regresiones incluso cuando la fusión no necesita una resolución de conflictos en el código fuente.Esto se debe a que un cambio semántico puede ocurrir en una rama mientras que la otra rama no es consciente de ello.</target>
        </trans-unit>
        <trans-unit id="05a55fcafe087cbd44c02228e1ac75a34a01c1f1" translate="yes" xml:space="preserve">
          <source>First, build a history graph in the same way that &lt;code&gt;--full-history&lt;/code&gt; with parent rewriting does (see above).</source>
          <target state="translated">Primero, construya un gr&amp;aacute;fico de historial de la misma manera que lo hace &lt;code&gt;--full-history&lt;/code&gt; con reescritura de los padres (ver arriba).</target>
        </trans-unit>
        <trans-unit id="08310df25f406cc10b8d6127f9ec844567b780fb" translate="yes" xml:space="preserve">
          <source>First, if you wish to continue to release maintenance fixes for the feature release made before the recent one, then you must create another branch to track commits for that previous release.</source>
          <target state="translated">Primero,si desea continuar publicando correcciones de mantenimiento para la versión de la función realizada antes de la reciente,entonces debe crear otra rama para rastrear las confirmaciones de esa versión anterior.</target>
        </trans-unit>
        <trans-unit id="3f7b81f4c441b31ef96f877571ae9e6d0b762fd6" translate="yes" xml:space="preserve">
          <source>First, in .gitattributes, you would assign the &lt;code&gt;diff&lt;/code&gt; attribute for paths.</source>
          <target state="translated">Primero, en .gitattributes, asignar&amp;iacute;a el atributo &lt;code&gt;diff&lt;/code&gt; para las rutas.</target>
        </trans-unit>
        <trans-unit id="b3f5f5cacf6c72eb426cf54eb30cee145c3bf1f2" translate="yes" xml:space="preserve">
          <source>First, install version 2.1 or higher of cvsps from &lt;a href=&quot;https://github.com/andreyvit/cvsps&quot;&gt;https://github.com/andreyvit/cvsps&lt;/a&gt; and make sure it is in your path. Then cd to a checked out CVS working directory of the project you are interested in and run &lt;a href=&quot;git-cvsimport&quot;&gt;git-cvsimport[1]&lt;/a&gt;:</source>
          <target state="translated">Primero, instale la versi&amp;oacute;n 2.1 o superior de cvsps desde &lt;a href=&quot;https://github.com/andreyvit/cvsps&quot;&gt;https://github.com/andreyvit/cvsps&lt;/a&gt; y aseg&amp;uacute;rese de que est&amp;eacute; en su camino. Luego, acceda a un directorio de trabajo CVS extra&amp;iacute;do del proyecto que le interesa y ejecute &lt;a href=&quot;git-cvsimport&quot;&gt;git-cvsimport [1]&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="576e890855dbcdc8bc3ac7fde0afbe81b0fdd016" translate="yes" xml:space="preserve">
          <source>First, note that you can get documentation for a command such as &lt;code&gt;git log --graph&lt;/code&gt; with:</source>
          <target state="translated">Primero, tenga en cuenta que puede obtener documentaci&amp;oacute;n para un comando como &lt;code&gt;git log --graph&lt;/code&gt; con:</target>
        </trans-unit>
        <trans-unit id="9a679f4d1f2379fb3e8b418dd1cdea69390f805f" translate="yes" xml:space="preserve">
          <source>First, reset the history back one commit so that we remove the original commit, but leave the working tree with all the changes. The -N ensures that any new files added with &lt;code&gt;HEAD&lt;/code&gt; are still marked so that &lt;code&gt;git add -p&lt;/code&gt; will find them.</source>
          <target state="translated">Primero, reinicie el historial una vez m&amp;aacute;s para eliminar la confirmaci&amp;oacute;n original, pero dejemos el &amp;aacute;rbol de trabajo con todos los cambios. La -N asegura que cualquier archivo nuevo agregado con &lt;code&gt;HEAD&lt;/code&gt; todav&amp;iacute;a est&amp;eacute; marcado para que &lt;code&gt;git add -p&lt;/code&gt; los encuentre.</target>
        </trans-unit>
        <trans-unit id="eac258ebc7c4ff84505375d195a1e24d04961706" translate="yes" xml:space="preserve">
          <source>First, use &lt;a href=&quot;git-format-patch&quot;&gt;git-format-patch[1]&lt;/a&gt;; for example:</source>
          <target state="translated">Primero, use &lt;a href=&quot;git-format-patch&quot;&gt;git-format-patch [1]&lt;/a&gt; ; por ejemplo:</target>
        </trans-unit>
        <trans-unit id="af62e3f15d84326a813952b253791dac4ec57aaa" translate="yes" xml:space="preserve">
          <source>First, you need to create an empty repository on the remote machine that will house your public repository. This empty repository will be populated and be kept up to date by pushing into it later. Obviously, this repository creation needs to be done only once.</source>
          <target state="translated">Primero,necesitas crear un repositorio vacío en la máquina remota que albergará tu repositorio público.Este repositorio vacío se llenará y se mantendrá al día empujando en él más tarde.Obviamente,la creación de este repositorio necesita hacerse sólo una vez.</target>
        </trans-unit>
        <trans-unit id="52835c0708aa62a7396cacc7dfc2df24ce8a002c" translate="yes" xml:space="preserve">
          <source>Fix a &quot;thin&quot; pack produced by &lt;code&gt;git pack-objects --thin&lt;/code&gt; (see &lt;a href=&quot;git-pack-objects&quot;&gt;git-pack-objects[1]&lt;/a&gt; for details) by adding the excluded objects the deltified objects are based on to the pack. This option only makes sense in conjunction with --stdin.</source>
          <target state="translated">Arregle un paquete &quot;delgado&quot; producido por &lt;code&gt;git pack-objects --thin&lt;/code&gt; (vea &lt;a href=&quot;git-pack-objects&quot;&gt;git-pack-objects [1]&lt;/a&gt; para m&amp;aacute;s detalles) agregando los objetos excluidos en los que se basan los objetos deltificados al paquete. Esta opci&amp;oacute;n solo tiene sentido junto con --stdin.</target>
        </trans-unit>
        <trans-unit id="6bef9039e49cd5a1bb992311087de16992b814ac" translate="yes" xml:space="preserve">
          <source>Fix the ignore-paths or SVN permissions problem that caused &quot;r2&quot; to be incomplete in the first place. Then:</source>
          <target state="translated">Arreglar el problema de los caminos de la ignorancia o los permisos del SVN que causaron que &quot;r2&quot; estuviera incompleto en primer lugar.Luego..:</target>
        </trans-unit>
        <trans-unit id="bf5e51b162922584144bf607debb47b58ed7a8df" translate="yes" xml:space="preserve">
          <source>Fixing a mistake by rewriting history</source>
          <target state="translated">Arreglar un error reescribiendo la historia</target>
        </trans-unit>
        <trans-unit id="afb2d222f3591d3622f9d0c44f698fe7e6dc0a83" translate="yes" xml:space="preserve">
          <source>Fixing a mistake with a new commit</source>
          <target state="translated">Arreglar un error con un nuevo compromiso</target>
        </trans-unit>
        <trans-unit id="c169f9b52cd517560d8a456346335c3aedbfac2b" translate="yes" xml:space="preserve">
          <source>Fixing mistakes</source>
          <target state="translated">Arreglar los errores</target>
        </trans-unit>
        <trans-unit id="de18d069db0d9d56daecfccdb3a27275518bc1f7" translate="yes" xml:space="preserve">
          <source>Flags and parameters to be parsed.</source>
          <target state="translated">Banderas y parámetros a analizar.</target>
        </trans-unit>
        <trans-unit id="8a2fcacfdef0a8b1fd083381230b0ac0cbbdea61" translate="yes" xml:space="preserve">
          <source>Follow merge ancestry and attempt to import trees that have been merged from. Specify a depth greater than 1 if patch logs have been pruned.</source>
          <target state="translated">Sigue la ascendencia de la fusión e intenta importar los árboles que se han fusionado.Especifique una profundidad mayor a 1 si los troncos del parche han sido podados.</target>
        </trans-unit>
        <trans-unit id="fc08e4a2c4c96e25ad3223cdd944785cb30a915c" translate="yes" xml:space="preserve">
          <source>Follow only the first parent commit upon seeing a merge commit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f48973c6479f97ed9cbdd1aa747abb3d724dfc88" translate="yes" xml:space="preserve">
          <source>Follow only the first parent commit upon seeing a merge commit. This is useful when you wish to not match tags on branches merged in the history of the target commit.</source>
          <target state="translated">Sólo sigue al primer padre que se compromete al ver una fusión comprometerse.Esto es útil cuando se desea que no coincidan las etiquetas de las ramas fusionadas en el historial de la confirmación del objetivo.</target>
        </trans-unit>
        <trans-unit id="37deb1921d5628bb8484cd98e5d1812d850199d4" translate="yes" xml:space="preserve">
          <source>Follow only the first parent commit upon seeing a merge commit. This option can be used to determine when a line was introduced to a particular integration branch, rather than when it was introduced to the history overall.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="592429d37f44072b1083ee8b6715edf266446955" translate="yes" xml:space="preserve">
          <source>Follow only the first parent commit upon seeing a merge commit. This option can give a better overview when viewing the evolution of a particular topic branch, because merges into a topic branch tend to be only about adjusting to updated upstream from time to time, and this option allows you to ignore the individual commits brought in to your history by such a merge.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d67b9781a4352de8f66549a8b248fd66aceb7858" translate="yes" xml:space="preserve">
          <source>Follow only the first parent commit upon seeing a merge commit. This option can give a better overview when viewing the evolution of a particular topic branch, because merges into a topic branch tend to be only about adjusting to updated upstream from time to time, and this option allows you to ignore the individual commits brought in to your history by such a merge. Cannot be combined with --bisect.</source>
          <target state="translated">Sólo sigue al primer padre que se compromete al ver una fusión comprometerse.Esta opción puede dar una mejor visión general cuando se ve la evolución de una rama temática en particular,porque las fusiones en una rama temática tienden a ser sólo sobre el ajuste a las actualizaciones en sentido ascendente de vez en cuando,y esta opción le permite ignorar las confirmaciones individuales traídas a su historia por tal fusión.No se puede combinar con --bisección.</target>
        </trans-unit>
        <trans-unit id="1b82a1274463e2bfba901905e39b02d331c44520" translate="yes" xml:space="preserve">
          <source>Following general best practices</source>
          <target state="translated">Siguiendo las mejores prácticas generales</target>
        </trans-unit>
        <trans-unit id="788b60e8a3fa302c96ca5000ec7c36053afb1c38" translate="yes" xml:space="preserve">
          <source>Following the headers, a series of lines are printed for tracked entries. One of three different line formats may be used to describe an entry depending on the type of change. Tracked entries are printed in an undefined order; parsers should allow for a mixture of the 3 line types in any order.</source>
          <target state="translated">Después de los encabezados,se imprimen una serie de líneas para las entradas rastreadas.Se puede utilizar uno de los tres formatos de línea diferentes para describir una entrada dependiendo del tipo de cambio.Las entradas rastreadas se imprimen en un orden indefinido;los analizadores deben permitir una mezcla de los 3 tipos de línea en cualquier orden.</target>
        </trans-unit>
        <trans-unit id="0af351e25b3235e5cb0b144d879a5948cd0b6627" translate="yes" xml:space="preserve">
          <source>Following the tracked entries (and if requested), a series of lines will be printed for untracked and then ignored items found in the worktree.</source>
          <target state="translated">Tras las entradas rastreadas (y si se solicita),se imprimirá una serie de líneas para los elementos no rastreados y luego ignorados que se encuentren en el árbol de trabajo.</target>
        </trans-unit>
        <trans-unit id="18388d4087a6542b5572bea29a06b35e2aae5326" translate="yes" xml:space="preserve">
          <source>Following these N lines, one-line log for each commit is displayed, indented N places. If a commit is on the I-th branch, the I-th indentation character shows a &lt;code&gt;+&lt;/code&gt; sign; otherwise it shows a space. Merge commits are denoted by a &lt;code&gt;-&lt;/code&gt; sign. Each commit shows a short name that can be used as an extended SHA-1 to name that commit.</source>
          <target state="translated">Siguiendo estas N l&amp;iacute;neas, se muestra el registro de una l&amp;iacute;nea para cada confirmaci&amp;oacute;n, N lugares con sangr&amp;iacute;a. Si una confirmaci&amp;oacute;n est&amp;aacute; en la I-&amp;eacute;sima rama, el car&amp;aacute;cter de sangr&amp;iacute;a I-&amp;eacute;sima muestra un signo &lt;code&gt;+&lt;/code&gt; ; de lo contrario, muestra un espacio. Las confirmaciones de fusi&amp;oacute;n se indican con un signo &lt;code&gt;-&lt;/code&gt; . Cada confirmaci&amp;oacute;n muestra un nombre corto que se puede usar como un SHA-1 extendido para nombrar esa confirmaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="348633bb6883a2c8b3944ebb9c0c3986369c6bb3" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;-c&lt;/code&gt; and &lt;code&gt;--cc&lt;/code&gt;, only the destination or final path is shown even if the file was renamed on any side of history. With &lt;code&gt;--combined-all-paths&lt;/code&gt;, the name of the path in each parent is shown followed by the name of the path in the merge commit.</source>
          <target state="translated">Para &lt;code&gt;-c&lt;/code&gt; y &lt;code&gt;--cc&lt;/code&gt; , s&amp;oacute;lo se muestra el destino o ruta final incluso si el archivo fue renombrado en cualquier lado de la historia. Con &lt;code&gt;--combined-all-paths&lt;/code&gt; , se muestra el nombre de la ruta en cada padre seguido del nombre de la ruta en la confirmaci&amp;oacute;n de fusi&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="299f58cbaec7164b54b0f4129532e8b5c1642be3" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;branch&lt;/code&gt; and &lt;code&gt;tag&lt;/code&gt;, display the urls that will be used for copying when creating the branch or tag.</source>
          <target state="translated">Para la &lt;code&gt;branch&lt;/code&gt; y la &lt;code&gt;tag&lt;/code&gt; , muestre las URL que se utilizar&amp;aacute;n para copiar al crear la rama o la etiqueta.</target>
        </trans-unit>
        <trans-unit id="007222e8d7dfa1e11f08c139bdea5864653b03fb" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;dcommit&lt;/code&gt;, print out the series of Git arguments that would show which diffs would be committed to SVN.</source>
          <target state="translated">Para &lt;code&gt;dcommit&lt;/code&gt; , imprima la serie de argumentos de Git que mostrar&amp;iacute;an qu&amp;eacute; diferencias se confirmar&amp;iacute;an en SVN.</target>
        </trans-unit>
        <trans-unit id="7661574c1331f1ffadb88e65b09fb7bbb3d5b369" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;rebase&lt;/code&gt;, display the local branch associated with the upstream svn repository associated with the current branch and the URL of svn repository that will be fetched from.</source>
          <target state="translated">Para &lt;code&gt;rebase&lt;/code&gt; , muestre la rama local asociada con el repositorio svn ascendente asociado con la rama actual y la URL del repositorio svn del que se obtendr&amp;aacute;.</target>
        </trans-unit>
        <trans-unit id="8054fb75013a9d33733a54185710f048c11e6754" translate="yes" xml:space="preserve">
          <source>For Git developers, &lt;a href=&quot;gitcore-tutorial&quot;&gt;gitcore-tutorial[7]&lt;/a&gt; goes into detail on the lower-level Git mechanisms involved in, for example, creating a new commit.</source>
          <target state="translated">Para los desarrolladores de Git, &lt;a href=&quot;gitcore-tutorial&quot;&gt;gitcore-tutorial [7]&lt;/a&gt; detalla los mecanismos de Git de nivel inferior involucrados, por ejemplo, en la creaci&amp;oacute;n de una nueva confirmaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="9c7a8b6d1a7a0700f3cd22ce6172861bfe044c11" translate="yes" xml:space="preserve">
          <source>For SSH clients that will make commits, make sure their server-side .ssh/environment files (or .bashrc, etc., according to their specific shell) export appropriate values for GIT_AUTHOR_NAME, GIT_AUTHOR_EMAIL, GIT_COMMITTER_NAME, and GIT_COMMITTER_EMAIL. For SSH clients whose login shell is bash, .bashrc may be a reasonable alternative.</source>
          <target state="translated">Para los clientes SSH que harán confirmaciones,asegúrate de que sus archivos .ssh/ambiente del lado del servidor (o .bashrc,etc.,de acuerdo con su shell específico)exporten los valores apropiados para GIT_NOMBRE_DE_AUTOR,GIT_NOMBRE_DE_AUTOR,GIT_NOMBRE_DE_COMITÉRIO,y GIT_NOMBRE_DE_COMITÉRIO.Para los clientes SSH cuyo login shell es bash,.bashrc puede ser una alternativa razonable.</target>
        </trans-unit>
        <trans-unit id="e127a96a43fc87667b0c86a8698d094b3fabedbe" translate="yes" xml:space="preserve">
          <source>For URLs in &lt;code&gt;https://weak.example.com&lt;/code&gt;, &lt;code&gt;http.sslVerify&lt;/code&gt; is set to false, while it is set to &lt;code&gt;true&lt;/code&gt; for all others:</source>
          <target state="translated">Para las URL en &lt;code&gt;https://weak.example.com&lt;/code&gt; , &lt;code&gt;http.sslVerify&lt;/code&gt; se establece en falso, mientras que se establece en &lt;code&gt;true&lt;/code&gt; para todos los dem&amp;aacute;s:</target>
        </trans-unit>
        <trans-unit id="701bbbb19204ae1c36fbfa4b6462dff9d4624e60" translate="yes" xml:space="preserve">
          <source>For a &lt;code&gt;get&lt;/code&gt; operation, the helper should produce a list of attributes on stdout in the same format (see &lt;a href=&quot;git-credential&quot;&gt;git-credential[1]&lt;/a&gt; for common attributes). A helper is free to produce a subset, or even no values at all if it has nothing useful to provide. Any provided attributes will overwrite those already known about by Git&amp;rsquo;s credential subsystem.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef97080144d6e0b76f4c32d65bbd8d420f1d9d3f" translate="yes" xml:space="preserve">
          <source>For a &lt;code&gt;store&lt;/code&gt; or &lt;code&gt;erase&lt;/code&gt; operation, the helper&amp;rsquo;s output is ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51c95f036bd90f837a4d78c935d1c885601df8ec" translate="yes" xml:space="preserve">
          <source>For a custom merge command, specify whether the exit code of the merge command can be used to determine whether the merge was successful. If this is not set to true then the merge target file timestamp is checked and the merge assumed to have been successful if the file has been updated, otherwise the user is prompted to indicate the success of the merge.</source>
          <target state="translated">En el caso de un comando de fusión personalizado,especifique si el código de salida del comando de fusión puede utilizarse para determinar si la fusión se ha realizado con éxito.Si no se establece como verdadero,se comprueba la marca de tiempo del archivo de destino de la fusión y se supone que la fusión se ha realizado con éxito si el archivo se ha actualizado;de lo contrario,se pide al usuario que indique el éxito de la fusión.</target>
        </trans-unit>
        <trans-unit id="832a920de5e5a1607e20fda89c6b16105d6a3d66" translate="yes" xml:space="preserve">
          <source>For a description of which objects are considered for pruning, see &lt;code&gt;git fsck&lt;/code&gt;'s --unreachable option.</source>
          <target state="translated">Para obtener una descripci&amp;oacute;n de los objetos que se consideran para podar, consulte la opci&amp;oacute;n --unreachable de &lt;code&gt;git fsck&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7772aa877c345ccdb695091fd19f024126a4a0b8" translate="yes" xml:space="preserve">
          <source>For a detailed description of &lt;code&gt;&amp;lt;commit-ish&amp;gt;&lt;/code&gt; see above under &lt;code&gt;from&lt;/code&gt;.</source>
          <target state="translated">Para obtener una descripci&amp;oacute;n detallada de &lt;code&gt;&amp;lt;commit-ish&amp;gt;&lt;/code&gt; , consulte m&amp;aacute;s arriba debajo &lt;code&gt;from&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="97b7c41fd980027cd240574fa45f8b9cf3a30c50" translate="yes" xml:space="preserve">
          <source>For a detailed description of &lt;code&gt;&amp;lt;ref&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;commit-ish&amp;gt;&lt;/code&gt; see above under &lt;code&gt;commit&lt;/code&gt; and &lt;code&gt;from&lt;/code&gt;.</source>
          <target state="translated">Para obtener una descripci&amp;oacute;n detallada de &lt;code&gt;&amp;lt;ref&amp;gt;&lt;/code&gt; y &lt;code&gt;&amp;lt;commit-ish&amp;gt;&lt;/code&gt; , consulte m&amp;aacute;s arriba en &lt;code&gt;commit&lt;/code&gt; y &lt;code&gt;from&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c4f4b9fba6569cfb2eebe32e9b505f5e163da8ae" translate="yes" xml:space="preserve">
          <source>For a failed update, more details are given:</source>
          <target state="translated">Para una actualización fallida,se dan más detalles:</target>
        </trans-unit>
        <trans-unit id="243468740a36ab67df241df82903537b2a102239" translate="yes" xml:space="preserve">
          <source>For a more complete list of ways to spell &amp;lt;commit&amp;gt;, see &quot;SPECIFYING REVISIONS&quot; section in &lt;a href=&quot;gitrevisions&quot;&gt;gitrevisions[7]&lt;/a&gt;. However, &quot;diff&quot; is about comparing two &lt;code&gt;endpoints&lt;/code&gt;, not ranges, and the range notations (&quot;&amp;lt;commit&amp;gt;..&amp;lt;commit&amp;gt;&quot; and &quot;&amp;lt;commit&amp;gt;...&amp;lt;commit&amp;gt;&quot;) do not mean a range as defined in the &quot;SPECIFYING RANGES&quot; section in &lt;a href=&quot;gitrevisions&quot;&gt;gitrevisions[7]&lt;/a&gt;.</source>
          <target state="translated">Para obtener una lista m&amp;aacute;s completa de formas de escribir &amp;lt;commit&amp;gt;, consulte la secci&amp;oacute;n &quot;ESPECIFICAR REVISIONES&quot; en &lt;a href=&quot;gitrevisions&quot;&gt;gitrevisions [7]&lt;/a&gt; . Sin embargo, &quot;diff&quot; se trata de comparar dos &lt;code&gt;endpoints&lt;/code&gt; , no rangos, y las notaciones de rango (&quot;&amp;lt;commit&amp;gt; .. &amp;lt;commit&amp;gt;&quot; y &quot;&amp;lt;commit&amp;gt; ... &amp;lt;commit&amp;gt;&quot;) no significan un rango como se define en la secci&amp;oacute;n &quot;ESPECIFICAR RANGOS&quot; en &lt;a href=&quot;gitrevisions&quot;&gt;gitrevisions [7]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="aef391cab8f8e654bd28a4ebab3ff359b2dd758d" translate="yes" xml:space="preserve">
          <source>For a more complete list of ways to spell object names, see &quot;SPECIFYING REVISIONS&quot; section in &lt;a href=&quot;gitrevisions&quot;&gt;gitrevisions[7]&lt;/a&gt;.</source>
          <target state="translated">Para obtener una lista m&amp;aacute;s completa de formas de deletrear nombres de objetos, consulte la secci&amp;oacute;n &quot;ESPECIFICAR REVISIONES&quot; en &lt;a href=&quot;gitrevisions&quot;&gt;gitrevisions [7]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ffb03e9988d5aab6ca13a5c4410e25c3bc4d2c1f" translate="yes" xml:space="preserve">
          <source>For a more detailed discussion of the procedure and additional tips, see the &quot;INTERACTIVE MODE&quot; section of &lt;a href=&quot;git-rebase&quot;&gt;git-rebase[1]&lt;/a&gt;.</source>
          <target state="translated">Para una discusi&amp;oacute;n m&amp;aacute;s detallada del procedimiento y consejos adicionales, vea la secci&amp;oacute;n &quot;MODO INTERACTIVO&quot; de &lt;a href=&quot;git-rebase&quot;&gt;git-rebase [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="21840545ec0ef1fb11dadc3e0bd425ddda71d447" translate="yes" xml:space="preserve">
          <source>For a path that is unmerged, &lt;code&gt;GIT_EXTERNAL_DIFF&lt;/code&gt; is called with 1 parameter, &amp;lt;path&amp;gt;.</source>
          <target state="translated">Para una ruta que no est&amp;aacute; fusionada, se llama a &lt;code&gt;GIT_EXTERNAL_DIFF&lt;/code&gt; con 1 par&amp;aacute;metro, &amp;lt;ruta&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="bf84b30d98b0b2aee4084cebd6a510d7735317e2" translate="yes" xml:space="preserve">
          <source>For a regular file &lt;code&gt;f&lt;/code&gt;, &lt;code&gt;echo HEAD:f | git cat-file --batch&lt;/code&gt; would print</source>
          <target state="translated">Para un archivo normal &lt;code&gt;f&lt;/code&gt; , &lt;code&gt;echo HEAD:f | git cat-file --batch&lt;/code&gt; se imprimir&amp;iacute;a</target>
        </trans-unit>
        <trans-unit id="3d0f9234523f6052cd5829e5dd1cdac95a9b09fd" translate="yes" xml:space="preserve">
          <source>For a simple local test, you can use &lt;a href=&quot;git-remote-ext&quot;&gt;git-remote-ext[1]&lt;/a&gt;:</source>
          <target state="translated">Para una prueba local simple, puede usar &lt;a href=&quot;git-remote-ext&quot;&gt;git-remote-ext [1]&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="428bfb3c06af83865df8238da30e9618f9cb0a09" translate="yes" xml:space="preserve">
          <source>For a successfully fetched ref, the summary shows the old and new values of the ref in a form suitable for using as an argument to &lt;code&gt;git log&lt;/code&gt; (this is &lt;code&gt;&amp;lt;old&amp;gt;..&amp;lt;new&amp;gt;&lt;/code&gt; in most cases, and &lt;code&gt;&amp;lt;old&amp;gt;...&amp;lt;new&amp;gt;&lt;/code&gt; for forced non-fast-forward updates).</source>
          <target state="translated">Para una referencia obtenida con &amp;eacute;xito, el resumen muestra los valores antiguos y nuevos de la referencia en una forma adecuada para usar como argumento para &lt;code&gt;git log&lt;/code&gt; (esto es &lt;code&gt;&amp;lt;old&amp;gt;..&amp;lt;new&amp;gt;&lt;/code&gt; en la mayor&amp;iacute;a de los casos, y &lt;code&gt;&amp;lt;old&amp;gt;...&amp;lt;new&amp;gt;&lt;/code&gt; para actualizaciones forzadas sin avance r&amp;aacute;pido).</target>
        </trans-unit>
        <trans-unit id="95550d69988e7a758b9c94b13942bde9ad57e2ef" translate="yes" xml:space="preserve">
          <source>For a successfully pushed ref, the summary shows the old and new values of the ref in a form suitable for using as an argument to &lt;code&gt;git log&lt;/code&gt; (this is &lt;code&gt;&amp;lt;old&amp;gt;..&amp;lt;new&amp;gt;&lt;/code&gt; in most cases, and &lt;code&gt;&amp;lt;old&amp;gt;...&amp;lt;new&amp;gt;&lt;/code&gt; for forced non-fast-forward updates).</source>
          <target state="translated">Para una referencia enviada con &amp;eacute;xito, el resumen muestra los valores antiguos y nuevos de la referencia en una forma adecuada para usar como argumento para &lt;code&gt;git log&lt;/code&gt; (esto es &lt;code&gt;&amp;lt;old&amp;gt;..&amp;lt;new&amp;gt;&lt;/code&gt; en la mayor&amp;iacute;a de los casos, y &lt;code&gt;&amp;lt;old&amp;gt;...&amp;lt;new&amp;gt;&lt;/code&gt; para actualizaciones forzadas sin avance r&amp;aacute;pido).</target>
        </trans-unit>
        <trans-unit id="d2bfe73291a6ef412f90bf2eac1210664a9553b3" translate="yes" xml:space="preserve">
          <source>For all objects, the following names can be used:</source>
          <target state="translated">Para todos los objetos,se pueden utilizar los siguientes nombres:</target>
        </trans-unit>
        <trans-unit id="96992b112d12dd337ecf884c867dcddc44e026cf" translate="yes" xml:space="preserve">
          <source>For all options that output values and/or keys, always end values with the null character (instead of a newline). Use newline instead as a delimiter between key and value. This allows for secure parsing of the output without getting confused e.g. by values that contain line breaks.</source>
          <target state="translated">Para todas las opciones que emiten valores y/o claves,siempre terminan los valores con el carácter nulo (en lugar de una nueva línea).Utilice la nueva línea en su lugar como delimitador entre la clave y el valor.Esto permite un análisis sintáctico seguro de la salida sin confundirse,por ejemplo,con valores que contienen saltos de línea.</target>
        </trans-unit>
        <trans-unit id="8ac2c111de5df363fa2f5b2b630af5f75a90bcb1" translate="yes" xml:space="preserve">
          <source>For an unmerged path, instead of recording a single mode/SHA-1 pair, the index records up to three such pairs; one from tree O in stage 1, A in stage 2, and B in stage 3. This information can be used by the user (or the porcelain) to see what should eventually be recorded at the path. (see &lt;a href=&quot;git-read-tree&quot;&gt;git-read-tree[1]&lt;/a&gt; for more information on state)</source>
          <target state="translated">Para una ruta no fusionada, en lugar de registrar un solo par de modo / SHA-1, el &amp;iacute;ndice registra hasta tres de esos pares; uno del &amp;aacute;rbol O en la etapa 1, A en la etapa 2 y B en la etapa 3. Esta informaci&amp;oacute;n puede ser utilizada por el usuario (o la porcelana) para ver lo que finalmente deber&amp;iacute;a registrarse en el camino. (consulte &lt;a href=&quot;git-read-tree&quot;&gt;git-read-tree [1]&lt;/a&gt; para obtener m&amp;aacute;s informaci&amp;oacute;n sobre el estado)</target>
        </trans-unit>
        <trans-unit id="43b2d74a2014d25aa6c53b32650e8baad61de67e" translate="yes" xml:space="preserve">
          <source>For any commit graph, you can see the number associated with each commit using &quot;git rev-list --bisect-all&quot;.</source>
          <target state="translated">Para cualquier gráfico de confirmación,puedes ver el número asociado a cada confirmación usando &quot;git rev-list --bisect-all&quot;.</target>
        </trans-unit>
        <trans-unit id="672441c22b399b226ed91a2cbed5740025f9d076" translate="yes" xml:space="preserve">
          <source>For any remote-tracking branch &lt;code&gt;%(upstream)&lt;/code&gt;, &lt;code&gt;%(upstream:remotename)&lt;/code&gt; and &lt;code&gt;%(upstream:remoteref)&lt;/code&gt; refer to the name of the remote and the name of the tracked remote ref, respectively. In other words, the remote-tracking branch can be updated explicitly and individually by using the refspec &lt;code&gt;%(upstream:remoteref):%(upstream)&lt;/code&gt; to fetch from &lt;code&gt;%(upstream:remotename)&lt;/code&gt;.</source>
          <target state="translated">Para cualquier rama de seguimiento remoto &lt;code&gt;%(upstream)&lt;/code&gt; , &lt;code&gt;%(upstream:remotename)&lt;/code&gt; y &lt;code&gt;%(upstream:remoteref)&lt;/code&gt; refieren al nombre del remoto y al nombre de la referencia remota rastreada, respectivamente. En otras palabras, la rama de seguimiento remoto se puede actualizar de forma expl&amp;iacute;cita e individual mediante el uso de refspec &lt;code&gt;%(upstream:remoteref):%(upstream)&lt;/code&gt; para recuperar &lt;code&gt;%(upstream:remotename)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="242026e8d7d0593118b4fae738fc0c3f1a90be23" translate="yes" xml:space="preserve">
          <source>For atomicity, &lt;code&gt;git apply&lt;/code&gt; by default fails the whole patch and does not touch the working tree when some of the hunks do not apply. This option makes it apply the parts of the patch that are applicable, and leave the rejected hunks in corresponding *.rej files.</source>
          <target state="translated">Para la atomicidad, &lt;code&gt;git apply&lt;/code&gt; de forma predeterminada falla en todo el parche y no toca el &amp;aacute;rbol de trabajo cuando algunos de los bloques no se aplican. Esta opci&amp;oacute;n hace que aplique las partes del parche que sean aplicables y deje los trozos rechazados en los archivos * .rej correspondientes.</target>
        </trans-unit>
        <trans-unit id="8d098e130baba0ccc99da718229f5fc6bc213a77" translate="yes" xml:space="preserve">
          <source>For backwards compatibility, the &lt;code&gt;crlf&lt;/code&gt; attribute is interpreted as follows:</source>
          <target state="translated">Para compatibilidad con versiones anteriores, el atributo &lt;code&gt;crlf&lt;/code&gt; se interpreta de la siguiente manera:</target>
        </trans-unit>
        <trans-unit id="816a47e0ab5f0e7c8c410570167eb66d775695ae" translate="yes" xml:space="preserve">
          <source>For best consistency with &lt;code&gt;cvs&lt;/code&gt;, it is probably best to override the defaults by setting &lt;code&gt;gitcvs.usecrlfattr&lt;/code&gt; to true, and &lt;code&gt;gitcvs.allBinary&lt;/code&gt; to &quot;guess&quot;.</source>
          <target state="translated">Para lograr la mejor coherencia con &lt;code&gt;cvs&lt;/code&gt; , probablemente sea mejor anular los valores predeterminados estableciendo &lt;code&gt;gitcvs.usecrlfattr&lt;/code&gt; en verdadero y &lt;code&gt;gitcvs.allBinary&lt;/code&gt; en &quot;adivinar&quot;.</target>
        </trans-unit>
        <trans-unit id="bad93aa83b2df49f46d609a291da6014ee26a719" translate="yes" xml:space="preserve">
          <source>For best results, &lt;code&gt;clean&lt;/code&gt; should not alter its output further if it is run twice (&quot;clean&amp;rarr;clean&quot; should be equivalent to &quot;clean&quot;), and multiple &lt;code&gt;smudge&lt;/code&gt; commands should not alter &lt;code&gt;clean&lt;/code&gt;'s output (&quot;smudge&amp;rarr;smudge&amp;rarr;clean&quot; should be equivalent to &quot;clean&quot;). See the section on merging below.</source>
          <target state="translated">Para obtener los mejores resultados, &lt;code&gt;clean&lt;/code&gt; no deber&amp;iacute;a alterar m&amp;aacute;s su salida si se ejecuta dos veces (&quot;limpiar &amp;rarr; limpiar&quot; deber&amp;iacute;a ser equivalente a &quot;limpiar&quot;), y varios comandos de &lt;code&gt;smudge&lt;/code&gt; no deber&amp;iacute;an alterar la salida de &lt;code&gt;clean&lt;/code&gt; (&quot;manchar &amp;rarr; manchar &amp;rarr; limpiar&quot; debe ser equivalente a &quot;limpio&quot;). Consulte la secci&amp;oacute;n sobre fusi&amp;oacute;n a continuaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="8d3928084bacb031775f5d7bad0ceaa321b4778c" translate="yes" xml:space="preserve">
          <source>For blobs and trees, you can&amp;rsquo;t do the same, but you can still examine them. You can just do</source>
          <target state="translated">Para blobs y &amp;aacute;rboles, no puede hacer lo mismo, pero a&amp;uacute;n puede examinarlos. Tu puedes simplemente hacer</target>
        </trans-unit>
        <trans-unit id="d0eec01499f14d036682e7faa93df840595c4ccf" translate="yes" xml:space="preserve">
          <source>For commit and tag objects, the special &lt;code&gt;creatordate&lt;/code&gt; and &lt;code&gt;creator&lt;/code&gt; fields will correspond to the appropriate date or name-email-date tuple from the &lt;code&gt;committer&lt;/code&gt; or &lt;code&gt;tagger&lt;/code&gt; fields depending on the object type. These are intended for working on a mix of annotated and lightweight tags.</source>
          <target state="translated">Para los objetos de confirmaci&amp;oacute;n y etiqueta, los &lt;code&gt;creatordate&lt;/code&gt; especiales de &lt;code&gt;creator&lt;/code&gt; y creador corresponder&amp;aacute;n a la fecha apropiada o la tupla de nombre-correo electr&amp;oacute;nico-fecha de los campos de &lt;code&gt;committer&lt;/code&gt; o &lt;code&gt;tagger&lt;/code&gt; , seg&amp;uacute;n el tipo de objeto. Est&amp;aacute;n pensados ​​para trabajar en una combinaci&amp;oacute;n de etiquetas ligeras y anotadas.</target>
        </trans-unit>
        <trans-unit id="f1ce66454707d43159aa08f01addd1a2cbbd5b3f" translate="yes" xml:space="preserve">
          <source>For commits it shows the log message and textual diff. It also presents the merge commit in a special format as produced by &lt;code&gt;git diff-tree --cc&lt;/code&gt;.</source>
          <target state="translated">Para confirmaciones, muestra el mensaje de registro y la diferencia textual. Tambi&amp;eacute;n presenta la confirmaci&amp;oacute;n de fusi&amp;oacute;n en un formato especial producido por &lt;code&gt;git diff-tree --cc&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="65305ecf02c6387d8a2b51f2d0ea21b43d00656b" translate="yes" xml:space="preserve">
          <source>For commits which do not start empty but become empty after rebasing, see the --empty flag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5788d84088826961fe0565ab052c9c41c47117d5" translate="yes" xml:space="preserve">
          <source>For commits, you can just use:</source>
          <target state="translated">Para los compromisos,puedes usar:</target>
        </trans-unit>
        <trans-unit id="600c796c6fdee3517d0340d7c98d0e629e148085" translate="yes" xml:space="preserve">
          <source>For conflicting paths, the index file records up to three versions, as described in the &quot;TRUE MERGE&quot; section of &lt;a href=&quot;git-merge&quot;&gt;git-merge[1]&lt;/a&gt;. The working tree files will include a description of the conflict bracketed by the usual conflict markers &lt;code&gt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&lt;/code&gt; and &lt;code&gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">Para rutas conflictivas, el archivo de &amp;iacute;ndice registra hasta tres versiones, como se describe en la secci&amp;oacute;n &quot;TRUE MERGE&quot; de &lt;a href=&quot;git-merge&quot;&gt;git-merge [1]&lt;/a&gt; . Los archivos del &amp;aacute;rbol de trabajo incluir&amp;aacute;n una descripci&amp;oacute;n del conflicto entre corchetes por los marcadores de conflicto habituales &lt;code&gt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&lt;/code&gt; y &lt;code&gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="35aa73e9eb71becc5a3756c0cf556cc7d0b77d41" translate="yes" xml:space="preserve">
          <source>For conflicting paths, the index file records up to three versions: stage 1 stores the version from the common ancestor, stage 2 from &lt;code&gt;HEAD&lt;/code&gt;, and stage 3 from &lt;code&gt;MERGE_HEAD&lt;/code&gt; (you can inspect the stages with &lt;code&gt;git ls-files -u&lt;/code&gt;). The working tree files contain the result of the &quot;merge&quot; program; i.e. 3-way merge results with familiar conflict markers &lt;code&gt;&amp;lt;&amp;lt;&amp;lt;&lt;/code&gt;&lt;code&gt;===&lt;/code&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">Para las rutas en conflicto, el archivo de &amp;iacute;ndice registra hasta tres versiones: la etapa 1 almacena la versi&amp;oacute;n del ancestro com&amp;uacute;n, la etapa 2 de &lt;code&gt;HEAD&lt;/code&gt; y la etapa 3 de &lt;code&gt;MERGE_HEAD&lt;/code&gt; (puede inspeccionar las etapas con &lt;code&gt;git ls-files -u&lt;/code&gt; ). Los archivos del &amp;aacute;rbol de trabajo contienen el resultado del programa &quot;fusionar&quot;; es decir, resultados de fusi&amp;oacute;n de 3 v&amp;iacute;as con marcadores de conflicto familiares &lt;code&gt;&amp;lt;&amp;lt;&amp;lt;&lt;/code&gt; &lt;code&gt;===&lt;/code&gt; &lt;code&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7a860b5275da5a9c9fab93cf772cd75bc2e0f4eb" translate="yes" xml:space="preserve">
          <source>For consistency, we also try such a trick if &lt;code&gt;man.konqueror.path&lt;/code&gt; is set to something like &lt;code&gt;A_PATH_TO/konqueror&lt;/code&gt;. That means we will try to launch &lt;code&gt;A_PATH_TO/kfmclient&lt;/code&gt; instead.</source>
          <target state="translated">Para &lt;code&gt;man.konqueror.path&lt;/code&gt; coherencia, tambi&amp;eacute;n probamos este truco si man.konqueror.path est&amp;aacute; configurado en algo como &lt;code&gt;A_PATH_TO/konqueror&lt;/code&gt; . Eso significa que intentaremos &lt;code&gt;A_PATH_TO/kfmclient&lt;/code&gt; en su lugar.</target>
        </trans-unit>
        <trans-unit id="303c07dbeb4d9b201e995967f10cae861d7b985d" translate="yes" xml:space="preserve">
          <source>For convenience, this data is saved to &lt;code&gt;$GIT_DIR/cvs-authors&lt;/code&gt; each time the &lt;code&gt;-A&lt;/code&gt; option is provided and read from that same file each time &lt;code&gt;git cvsimport&lt;/code&gt; is run.</source>
          <target state="translated">Para mayor comodidad, estos datos se guardan en &lt;code&gt;$GIT_DIR/cvs-authors&lt;/code&gt; cada vez que se proporciona la opci&amp;oacute;n &lt;code&gt;-A&lt;/code&gt; y se leen desde ese mismo archivo cada vez que se ejecuta &lt;code&gt;git cvsimport&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bc9270ed7ea5a3e841c3245ec308c8ddd86f1b91" translate="yes" xml:space="preserve">
          <source>For credential lookups, the files are read in the order given above, with the first matching credential found taking precedence over credentials found in files further down the list.</source>
          <target state="translated">Para la búsqueda de credenciales,los archivos se leen en el orden indicado anteriormente,y la primera credencial coincidente encontrada tiene prioridad sobre las credenciales encontradas en los archivos más abajo en la lista.</target>
        </trans-unit>
        <trans-unit id="78e4826a9de5d7b3349b3c973d4bc09ea13a37ed" translate="yes" xml:space="preserve">
          <source>For each &amp;ldquo;Name &amp;lt;user@host&amp;gt;&amp;rdquo; or &amp;ldquo;&amp;lt;user@host&amp;gt;&amp;rdquo; from the command-line or standard input (when using &lt;code&gt;--stdin&lt;/code&gt;), look up the person&amp;rsquo;s canonical name and email address (see &quot;Mapping Authors&quot; below). If found, print them; otherwise print the input as-is.</source>
          <target state="translated">Para cada &quot;Nombre &amp;lt;usuario @ host&amp;gt;&quot; o &quot;&amp;lt;usuario @ host&amp;gt;&quot; de la l&amp;iacute;nea de comandos o entrada est&amp;aacute;ndar (cuando se usa &lt;code&gt;--stdin&lt;/code&gt; ), busque el nombre can&amp;oacute;nico y la direcci&amp;oacute;n de correo electr&amp;oacute;nico de la persona (consulte &quot;Asignaci&amp;oacute;n de autores&quot; a continuaci&amp;oacute;n ). Si los encuentra, impr&amp;iacute;malos; de lo contrario, imprima la entrada tal cual.</target>
        </trans-unit>
        <trans-unit id="317daaebd1883bdffebfa8e7b1777b5a4f83c1ca" translate="yes" xml:space="preserve">
          <source>For each &amp;lt;pathspec&amp;gt; given on command line, descend at most &amp;lt;depth&amp;gt; levels of directories. A value of -1 means no limit. This option is ignored if &amp;lt;pathspec&amp;gt; contains active wildcards. In other words if &quot;a*&quot; matches a directory named &quot;a*&quot;, &quot;*&quot; is matched literally so --max-depth is still effective.</source>
          <target state="translated">Para cada &amp;lt;pathspec&amp;gt; dado en la l&amp;iacute;nea de comando, descienda como m&amp;aacute;ximo &amp;lt;depth&amp;gt; niveles de directorios. Un valor de -1 significa que no hay l&amp;iacute;mite. Esta opci&amp;oacute;n se ignora si &amp;lt;pathspec&amp;gt; contiene comodines activos. En otras palabras, si &quot;a *&quot; coincide con un directorio llamado &quot;a *&quot;, &quot;*&quot; se corresponde literalmente, por lo que --max-depth sigue siendo efectivo.</target>
        </trans-unit>
        <trans-unit id="5e28a0aae950ca165e06c71e20e1b405d570f17a" translate="yes" xml:space="preserve">
          <source>For each URI the server sends, it sends a hash of the pack&amp;rsquo;s contents (as output by git index-pack) followed by the URI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cf7cc0cba8ed8b7ebafa73d62528bdea5d7f903" translate="yes" xml:space="preserve">
          <source>For each commit a separate file is created in the current directory.</source>
          <target state="translated">Para cada confirmación se crea un archivo separado en el directorio actual.</target>
        </trans-unit>
        <trans-unit id="6e5eb78674e89f34ddd48ded79bd04ac86b27923" translate="yes" xml:space="preserve">
          <source>For each commit, show a summary of changes using the raw diff format. See the &quot;RAW OUTPUT FORMAT&quot; section of &lt;a href=&quot;git-diff&quot;&gt;git-diff[1]&lt;/a&gt;. This is different from showing the log itself in raw format, which you can achieve with &lt;code&gt;--format=raw&lt;/code&gt;.</source>
          <target state="translated">Para cada confirmaci&amp;oacute;n, muestre un resumen de los cambios utilizando el formato de diferencias sin formato. Consulta la secci&amp;oacute;n &quot;FORMATO DE SALIDA RAW&quot; de &lt;a href=&quot;git-diff&quot;&gt;git-diff [1]&lt;/a&gt; . Esto es diferente de mostrar el registro en formato sin procesar, que puede lograr con &lt;code&gt;--format=raw&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="334d2ef126bc398bc9fdce4f33bf828f0bbaab0d" translate="yes" xml:space="preserve">
          <source>For each commit-ish supplied, &lt;code&gt;git describe&lt;/code&gt; will first look for a tag which tags exactly that commit. Annotated tags will always be preferred over lightweight tags, and tags with newer dates will always be preferred over tags with older dates. If an exact match is found, its name will be output and searching will stop.</source>
          <target state="translated">Para cada confirmaci&amp;oacute;n proporcionada, &lt;code&gt;git describe&lt;/code&gt; primero buscar&amp;aacute; una etiqueta que etiquete exactamente esa confirmaci&amp;oacute;n. Las etiquetas con anotaciones siempre ser&amp;aacute;n preferibles a las etiquetas ligeras, y las etiquetas con fechas m&amp;aacute;s recientes siempre ser&amp;aacute;n preferidas a las etiquetas con fechas m&amp;aacute;s antiguas. Si se encuentra una coincidencia exacta, se mostrar&amp;aacute; su nombre y la b&amp;uacute;squeda se detendr&amp;aacute;.</target>
        </trans-unit>
        <trans-unit id="499cd7809be15aac9ff7cdcafa51d0930d0f78d9" translate="yes" xml:space="preserve">
          <source>For each contact, a single line is output, terminated by a newline. If the name is provided or known to the &lt;code&gt;mailmap&lt;/code&gt;, &amp;ldquo;Name &amp;lt;user@host&amp;gt;&amp;rdquo; is printed; otherwise only &amp;ldquo;&amp;lt;user@host&amp;gt;&amp;rdquo; is printed.</source>
          <target state="translated">Para cada contacto, se emite una sola l&amp;iacute;nea, terminada por una nueva l&amp;iacute;nea. Si el nombre es proporcionado o conocido por el &lt;code&gt;mailmap&lt;/code&gt; , se imprime &amp;ldquo;Nombre &amp;lt;usuario @ host&amp;gt;&amp;rdquo;; de lo contrario, s&amp;oacute;lo se imprime &amp;ldquo;&amp;lt;usuario @ host&amp;gt;&amp;rdquo;.</target>
        </trans-unit>
        <trans-unit id="0e11740c89977d85e4dd98daa923a91e3f5130da" translate="yes" xml:space="preserve">
          <source>For each patch the code attempts to extract the author from the patch description. If that fails it falls back to the author specified with --author. If the --author flag was not given the patch description is displayed and the user is asked to interactively enter the author of the patch.</source>
          <target state="translated">Para cada parche el código intenta extraer el autor de la descripción del parche.Si eso falla,recae en el autor especificado con --author.Si no se le dio el indicador --author,se muestra la descripción del parche y se le pide al usuario que introduzca interactivamente el autor del parche.</target>
        </trans-unit>
        <trans-unit id="5681283d451e4fc4fc0ca3089786f576c8a1186d" translate="yes" xml:space="preserve">
          <source>For each path &lt;code&gt;GIT_EXTERNAL_DIFF&lt;/code&gt; is called, two environment variables, &lt;code&gt;GIT_DIFF_PATH_COUNTER&lt;/code&gt; and &lt;code&gt;GIT_DIFF_PATH_TOTAL&lt;/code&gt; are set.</source>
          <target state="translated">Para cada ruta que se llama a &lt;code&gt;GIT_EXTERNAL_DIFF&lt;/code&gt; , se establecen dos variables de entorno, &lt;code&gt;GIT_DIFF_PATH_COUNTER&lt;/code&gt; y &lt;code&gt;GIT_DIFF_PATH_TOTAL&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="17e261e522ccbc792cc7bd181c9a0bd755a56975" translate="yes" xml:space="preserve">
          <source>For each pathname given via the command-line or from a file via &lt;code&gt;--stdin&lt;/code&gt;, check whether the file is excluded by .gitignore (or other input files to the exclude mechanism) and output the path if it is excluded.</source>
          <target state="translated">Para cada nombre de ruta dado a trav&amp;eacute;s de la l&amp;iacute;nea de comandos o de un archivo a trav&amp;eacute;s de &lt;code&gt;--stdin&lt;/code&gt; , verifique si el archivo est&amp;aacute; excluido por .gitignore (u otros archivos de entrada al mecanismo de exclusi&amp;oacute;n) y env&amp;iacute;e la ruta si est&amp;aacute; excluido.</target>
        </trans-unit>
        <trans-unit id="3b2b4e958456928c896ce5a2236319df3a467837" translate="yes" xml:space="preserve">
          <source>For each reference update that was added to the transaction, the hook receives on standard input a line of the format:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7b8eb760e478aaaedca171d489f16e4864063c9" translate="yes" xml:space="preserve">
          <source>For each repo that you want accessible from CVS you need to edit config in the repo and add the following section.</source>
          <target state="translated">Para cada repositorio al que quieras acceder desde el CVS debes editar la configuración en el repositorio y añadir la siguiente sección.</target>
        </trans-unit>
        <trans-unit id="4a6b07eab1d3f6d06954967f77b7754d8ea06736" translate="yes" xml:space="preserve">
          <source>For every branch that is up to date or successfully pushed, add upstream (tracking) reference, used by argument-less &lt;a href=&quot;git-pull&quot;&gt;git-pull[1]&lt;/a&gt; and other commands. For more information, see &lt;code&gt;branch.&amp;lt;name&amp;gt;.merge&lt;/code&gt; in &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;.</source>
          <target state="translated">Para cada rama que est&amp;eacute; actualizada o enviada con &amp;eacute;xito, agregue una referencia ascendente (seguimiento), utilizada por &lt;a href=&quot;git-pull&quot;&gt;git-pull [1] sin&lt;/a&gt; argumentos y otros comandos. Para obtener m&amp;aacute;s informaci&amp;oacute;n, consulte &lt;code&gt;branch.&amp;lt;name&amp;gt;.merge&lt;/code&gt; en &lt;a href=&quot;git-config&quot;&gt;git-config [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="288f34b4fe961722eeaf789d738c3abe79ce0128" translate="yes" xml:space="preserve">
          <source>For every pathname, this command will list if each attribute is &lt;code&gt;unspecified&lt;/code&gt;, &lt;code&gt;set&lt;/code&gt;, or &lt;code&gt;unset&lt;/code&gt; as a gitattribute on that pathname.</source>
          <target state="translated">Para cada nombre de ruta, este comando indicar&amp;aacute; si cada atributo &lt;code&gt;unspecified&lt;/code&gt; est&amp;aacute; especificado , &lt;code&gt;set&lt;/code&gt; o no &lt;code&gt;unset&lt;/code&gt; como atributo gitat en ese nombre de ruta.</target>
        </trans-unit>
        <trans-unit id="dc3c09a115b4ee611eb7505826a4fa0c2a8495d8" translate="yes" xml:space="preserve">
          <source>For example</source>
          <target state="translated">Por ejemplo</target>
        </trans-unit>
        <trans-unit id="b8684a0f4f3937af285df51bf478195b9b43d0d0" translate="yes" xml:space="preserve">
          <source>For example &lt;a href=&quot;git-daemon&quot;&gt;git-daemon[1]&lt;/a&gt; by default (unless &lt;code&gt;--export-all&lt;/code&gt; option is used) allows pulling only for those repositories that have &lt;code&gt;git-daemon-export-ok&lt;/code&gt; file. Adding</source>
          <target state="translated">Por ejemplo, &lt;a href=&quot;git-daemon&quot;&gt;git-daemon [1]&lt;/a&gt; por defecto (a menos que se &lt;code&gt;--export-all&lt;/code&gt; opci&amp;oacute;n --export-all ) permite extraer solo aquellos repositorios que tienen el archivo &lt;code&gt;git-daemon-export-ok&lt;/code&gt; . A&amp;ntilde;adiendo</target>
        </trans-unit>
        <trans-unit id="46e0aea8ec6e607a64677afaf2a0016d08ab966a" translate="yes" xml:space="preserve">
          <source>For example David Miller wrote &lt;a href=&quot;#6&quot;&gt;[6]&lt;/a&gt;:</source>
          <target state="translated">Por ejemplo, David Miller escribi&amp;oacute; &lt;a href=&quot;#6&quot;&gt;[6]&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="0e389491903e64c421beccd08371ba327e60cc0c" translate="yes" xml:space="preserve">
          <source>For example an effect from the submodule&amp;rsquo;s &lt;code&gt;.gitignore&lt;/code&gt; file would be observed when you run &lt;code&gt;git status --ignore-submodules=none&lt;/code&gt; in the superproject. This collects information from the submodule&amp;rsquo;s working directory by running &lt;code&gt;status&lt;/code&gt; in the submodule while paying attention to the &lt;code&gt;.gitignore&lt;/code&gt; file of the submodule.</source>
          <target state="translated">Por ejemplo , se observar&amp;iacute;a un efecto del archivo &lt;code&gt;.gitignore&lt;/code&gt; del subm&amp;oacute;dulo cuando ejecuta &lt;code&gt;git status --ignore-submodules=none&lt;/code&gt; en el superproyecto. Esto recopila informaci&amp;oacute;n del directorio de trabajo del subm&amp;oacute;dulo ejecutando el &lt;code&gt;status&lt;/code&gt; en el subm&amp;oacute;dulo mientras presta atenci&amp;oacute;n al archivo &lt;code&gt;.gitignore&lt;/code&gt; del subm&amp;oacute;dulo.</target>
        </trans-unit>
        <trans-unit id="56e9b1c030d9ba0ed8f301bc4d928b5ec348ecfb" translate="yes" xml:space="preserve">
          <source>For example if commit &lt;code&gt;foo&lt;/code&gt; has been replaced by commit &lt;code&gt;bar&lt;/code&gt;:</source>
          <target state="translated">Por ejemplo, si commit &lt;code&gt;foo&lt;/code&gt; ha sido reemplazado por commit &lt;code&gt;bar&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="fc4ffa566856e8487717cc75478e8ddebf738773" translate="yes" xml:space="preserve">
          <source>For example if repositories you are hosting use &quot;phtml&quot; extension for PHP files, and you want to have correct syntax-highlighting for those files, you can add the following to gitweb configuration:</source>
          <target state="translated">Por ejemplo,si los repositorios que estás alojando usan la extensión &quot;phtml&quot; para los archivos de PHP,y quieres tener la sintaxis correcta para esos archivos,puedes añadir lo siguiente a la configuración de gitweb:</target>
        </trans-unit>
        <trans-unit id="5154cf5119ca3a0384ad194cc198ec59c07c7ac1" translate="yes" xml:space="preserve">
          <source>For example if we start with a graph like this:</source>
          <target state="translated">Por ejemplo,si empezamos con un gráfico como este:</target>
        </trans-unit>
        <trans-unit id="011e69a8d88e3f2ecd0b2c97750e695437a8b7be" translate="yes" xml:space="preserve">
          <source>For example one branch can change the semantic of a function while the other branch add more calls to the same function.</source>
          <target state="translated">Por ejemplo,una rama puede cambiar la semántica de una función mientras que la otra rama añade más llamadas a la misma función.</target>
        </trans-unit>
        <trans-unit id="948250d1153d7a9c5c187de68da76cbf9fe7a0b6" translate="yes" xml:space="preserve">
          <source>For example since all normal branches are stored under &lt;code&gt;refs/heads/&lt;/code&gt; name the tag fixup branch &lt;code&gt;TAG_FIXUP&lt;/code&gt;. This way it is impossible for the fixup branch used by the importer to have namespace conflicts with real branches imported from the source (the name &lt;code&gt;TAG_FIXUP&lt;/code&gt; is not &lt;code&gt;refs/heads/TAG_FIXUP&lt;/code&gt;).</source>
          <target state="translated">Por ejemplo, dado que todas las ramas normales se almacenan bajo &lt;code&gt;refs/heads/&lt;/code&gt; name, la rama de &lt;code&gt;TAG_FIXUP&lt;/code&gt; etiquetas TAG_FIXUP . De esta manera, es imposible que la rama de reparaci&amp;oacute;n utilizada por el importador tenga conflictos de espacio de nombres con ramas reales importadas de la fuente (el nombre &lt;code&gt;TAG_FIXUP&lt;/code&gt; no es refs &lt;code&gt;refs/heads/TAG_FIXUP&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="4be01aa529e151bdbbe73a5ece143631e964e4ac" translate="yes" xml:space="preserve">
          <source>For example some test suites could be run automatically at night with some unusual (or even random) configurations. And if a regression is found by a test suite, then &quot;git bisect&quot; can be automatically launched, and its result can be emailed to the author of the first bad commit found by &quot;git bisect&quot;, and perhaps other people too. And a new entry in the bug tracking system could be automatically created too.</source>
          <target state="translated">Por ejemplo,algunas suites de prueba podrían funcionar automáticamente por la noche con algunas configuraciones inusuales (o incluso aleatorias).Y si se encuentra una regresión en un conjunto de pruebas,entonces &quot;git bisect&quot; puede ser lanzado automáticamente,y su resultado puede ser enviado por correo electrónico al autor del primer mal commit encontrado por &quot;git bisect&quot;,y quizás a otras personas también.Y una nueva entrada en el sistema de seguimiento de errores podría ser creada automáticamente también.</target>
        </trans-unit>
        <trans-unit id="8bbfe98ebcd584e72bba80caca0bbe3de761fb8b" translate="yes" xml:space="preserve">
          <source>For example using:</source>
          <target state="translated">Por ejemplo,usando:</target>
        </trans-unit>
        <trans-unit id="b2715e2afcd57211e00aecf4fa8f8efd172203eb" translate="yes" xml:space="preserve">
          <source>For example with the following graph where H is the &quot;bad&quot; commit and A and D are some parents of some &quot;good&quot; commits:</source>
          <target state="translated">Por ejemplo,con el siguiente gráfico en el que H es el compromiso &quot;malo&quot; y A y D son algunos padres de algunos compromisos &quot;buenos&quot;:</target>
        </trans-unit>
        <trans-unit id="6db6725e9e7d5c088630e348048d1e73fc7657d3" translate="yes" xml:space="preserve">
          <source>For example,</source>
          <target state="translated">Por ejemplo,</target>
        </trans-unit>
        <trans-unit id="33f7a1b1f9148ad49a81c77432db9d624e3ed14b" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;--batch&lt;/code&gt; without a custom format would produce:</source>
          <target state="translated">Por ejemplo, &lt;code&gt;--batch&lt;/code&gt; sin un formato personalizado producir&amp;iacute;a:</target>
        </trans-unit>
        <trans-unit id="f103141294055917b49b4ff3b11f28f0e7b09a93" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;--cherry-pick --right-only A...B&lt;/code&gt; omits those commits from &lt;code&gt;B&lt;/code&gt; which are in &lt;code&gt;A&lt;/code&gt; or are patch-equivalent to a commit in &lt;code&gt;A&lt;/code&gt;. In other words, this lists the &lt;code&gt;+&lt;/code&gt; commits from &lt;code&gt;git cherry A B&lt;/code&gt;. More precisely, &lt;code&gt;--cherry-pick --right-only --no-merges&lt;/code&gt; gives the exact list.</source>
          <target state="translated">Por ejemplo, &lt;code&gt;--cherry-pick --right-only A...B&lt;/code&gt; omite esas confirmaciones de &lt;code&gt;B&lt;/code&gt; que est&amp;aacute;n en &lt;code&gt;A&lt;/code&gt; o son parches equivalente a un cometen en &lt;code&gt;A&lt;/code&gt; . En otras palabras, esto enumera las confirmaciones &lt;code&gt;+&lt;/code&gt; de &lt;code&gt;git cherry A B&lt;/code&gt; . M&amp;aacute;s precisamente, &lt;code&gt;--cherry-pick --right-only --no-merges&lt;/code&gt; da la lista exacta.</target>
        </trans-unit>
        <trans-unit id="f8a58c9ab1aebec2fe76ee8cb4f7dc47b3afba08" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;--word-diff-regex=.&lt;/code&gt; will treat each character as a word and, correspondingly, show differences character by character.</source>
          <target state="translated">Por ejemplo, &lt;code&gt;--word-diff-regex=.&lt;/code&gt; tratar&amp;aacute; cada car&amp;aacute;cter como una palabra y, en consecuencia, mostrar&amp;aacute; las diferencias car&amp;aacute;cter por car&amp;aacute;cter.</target>
        </trans-unit>
        <trans-unit id="9497e805114a62dd0cfbb0fd446cb80188b76834" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;git bisect reset bisect/bad&lt;/code&gt; will check out the first bad revision, while &lt;code&gt;git bisect reset HEAD&lt;/code&gt; will leave you on the current bisection commit and avoid switching commits at all.</source>
          <target state="translated">Por ejemplo, &lt;code&gt;git bisect reset bisect/bad&lt;/code&gt; comprobar&amp;aacute; la primera revisi&amp;oacute;n incorrecta, mientras que &lt;code&gt;git bisect reset HEAD&lt;/code&gt; lo dejar&amp;aacute; en la confirmaci&amp;oacute;n de bisecci&amp;oacute;n actual y evitar&amp;aacute; cambiar las confirmaciones en absoluto.</target>
        </trans-unit>
        <trans-unit id="fe1483bfc3665f725dee6688f5887a817d1f226c" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;main-worktree/HEAD&lt;/code&gt; or &lt;code&gt;main-worktree/refs/bisect/good&lt;/code&gt; resolve to the same value as the main working tree&amp;rsquo;s &lt;code&gt;HEAD&lt;/code&gt; and &lt;code&gt;refs/bisect/good&lt;/code&gt; respectively. Similarly, &lt;code&gt;worktrees/foo/HEAD&lt;/code&gt; or &lt;code&gt;worktrees/bar/refs/bisect/bad&lt;/code&gt; are the same as &lt;code&gt;$GIT_COMMON_DIR/worktrees/foo/HEAD&lt;/code&gt; and &lt;code&gt;$GIT_COMMON_DIR/worktrees/bar/refs/bisect/bad&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="138442d2b65de29c2047a8caafb4d9bebbf214b3" translate="yes" xml:space="preserve">
          <source>For example, Documentation/*.jpg will match all .jpg files in the Documentation subtree, including Documentation/chapter_1/figure_1.jpg.</source>
          <target state="translated">Por ejemplo,Documentation/*.jpg coincidirá con todos los archivos .jpg del subárbol Documentation,incluyendo Documentation/chapter_1/figure_1.jpg.</target>
        </trans-unit>
        <trans-unit id="0d743ee5b8f526c69043aec1a6e6a8e47be44f66" translate="yes" xml:space="preserve">
          <source>For example, Microsoft Visual Studio resources files (&lt;code&gt;*.rc&lt;/code&gt;) or PowerShell script files (&lt;code&gt;*.ps1&lt;/code&gt;) are sometimes encoded in UTF-16. If you declare &lt;code&gt;*.ps1&lt;/code&gt; as files as UTF-16 and you add &lt;code&gt;foo.ps1&lt;/code&gt; with a &lt;code&gt;working-tree-encoding&lt;/code&gt; enabled Git client, then &lt;code&gt;foo.ps1&lt;/code&gt; will be stored as UTF-8 internally. A client without &lt;code&gt;working-tree-encoding&lt;/code&gt; support will checkout &lt;code&gt;foo.ps1&lt;/code&gt; as UTF-8 encoded file. This will typically cause trouble for the users of this file.</source>
          <target state="translated">Por ejemplo, los archivos de recursos de Microsoft Visual Studio ( &lt;code&gt;*.rc&lt;/code&gt; ) o los archivos de script de PowerShell ( &lt;code&gt;*.ps1&lt;/code&gt; ) a veces se codifican en UTF-16. Si declara &lt;code&gt;*.ps1&lt;/code&gt; como archivos como UTF-16 y agrega &lt;code&gt;foo.ps1&lt;/code&gt; con un cliente Git habilitado para &lt;code&gt;working-tree-encoding&lt;/code&gt; , entonces &lt;code&gt;foo.ps1&lt;/code&gt; se almacenar&amp;aacute; como UTF-8 internamente. Un cliente sin soporte de &lt;code&gt;working-tree-encoding&lt;/code&gt; buscar&amp;aacute; &lt;code&gt;foo.ps1&lt;/code&gt; como archivo codificado en UTF-8. Por lo general, esto causar&amp;aacute; problemas a los usuarios de este archivo.</target>
        </trans-unit>
        <trans-unit id="1ed869792207741cfe6bed98106c7b8b8a3d4f0d" translate="yes" xml:space="preserve">
          <source>For example, a patch that talks about updating &lt;code&gt;a/git-gui.sh&lt;/code&gt; to &lt;code&gt;b/git-gui.sh&lt;/code&gt; can be applied to the file in the working tree &lt;code&gt;modules/git-gui/git-gui.sh&lt;/code&gt; by running &lt;code&gt;git apply --directory=modules/git-gui&lt;/code&gt;.</source>
          <target state="translated">Por ejemplo, un parche que habla sobre la actualizaci&amp;oacute;n de &lt;code&gt;a/git-gui.sh&lt;/code&gt; a &lt;code&gt;b/git-gui.sh&lt;/code&gt; se puede aplicar al archivo en el &amp;aacute;rbol de trabajo &lt;code&gt;modules/git-gui/git-gui.sh&lt;/code&gt; ejecutando &lt;code&gt;git apply --directory=modules/git-gui&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ce77d8f6da94ff85eab04ae4cdac09d8840be36a" translate="yes" xml:space="preserve">
          <source>For example, a pattern &lt;code&gt;doc/frotz/&lt;/code&gt; matches &lt;code&gt;doc/frotz&lt;/code&gt; directory, but not &lt;code&gt;a/doc/frotz&lt;/code&gt; directory; however &lt;code&gt;frotz/&lt;/code&gt; matches &lt;code&gt;frotz&lt;/code&gt; and &lt;code&gt;a/frotz&lt;/code&gt; that is a directory (all paths are relative from the &lt;code&gt;.gitignore&lt;/code&gt; file).</source>
          <target state="translated">Por ejemplo, un patr&amp;oacute;n &lt;code&gt;doc/frotz/&lt;/code&gt; coincide con el directorio &lt;code&gt;doc/frotz&lt;/code&gt; , pero no con el directorio &lt;code&gt;a/doc/frotz&lt;/code&gt; ; sin embargo &lt;code&gt;frotz/&lt;/code&gt; coincide con &lt;code&gt;frotz&lt;/code&gt; y &lt;code&gt;a/frotz&lt;/code&gt; que es un directorio (todas las rutas son relativas al archivo &lt;code&gt;.gitignore&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="67b1d0bce407e8b4870f6f6a95250837544f5b7b" translate="yes" xml:space="preserve">
          <source>For example, an attempt to rearrange</source>
          <target state="translated">Por ejemplo,un intento de reorganizar</target>
        </trans-unit>
        <trans-unit id="5bf319ce2803b376c46250398e2ab2c650bad072" translate="yes" xml:space="preserve">
          <source>For example, at the time this page was written, the &lt;a href=&quot;http://repo.or.cz&quot;&gt;http://repo.or.cz&lt;/a&gt; Git hosting site set it to the following to enable graphical log (using the third party tool &lt;strong&gt;git-browser&lt;/strong&gt;):</source>
          <target state="translated">Por ejemplo, en el momento en que se escribi&amp;oacute; esta p&amp;aacute;gina, el sitio de alojamiento de Git &lt;a href=&quot;http://repo.or.cz&quot;&gt;http://repo.or.cz lo&lt;/a&gt; configur&amp;oacute; en lo siguiente para habilitar el registro gr&amp;aacute;fico (utilizando la herramienta de terceros &lt;strong&gt;git-browser&lt;/strong&gt; ):</target>
        </trans-unit>
        <trans-unit id="ff9841351106eb72affbaa34cd9000cbe695e6c0" translate="yes" xml:space="preserve">
          <source>For example, consider a git repository containing:</source>
          <target state="translated">Por ejemplo,consideremos un depósito de git que contenga:</target>
        </trans-unit>
        <trans-unit id="aa3e19341d33b69e0c7637f09cb4c872d477e052" translate="yes" xml:space="preserve">
          <source>For example, for the above graph, a command like:</source>
          <target state="translated">Por ejemplo,para el gráfico anterior,un comando como:</target>
        </trans-unit>
        <trans-unit id="e5fffc70646f6a27f7f67e5894c9b6fc5ccd683b" translate="yes" xml:space="preserve">
          <source>For example, if &lt;code&gt;$projectroot&lt;/code&gt; is set to &quot;/srv/git&quot; by putting the following in gitweb config file:</source>
          <target state="translated">Por ejemplo, si &lt;code&gt;$projectroot&lt;/code&gt; se establece en &quot;/ srv / git&quot; poniendo lo siguiente en el archivo de configuraci&amp;oacute;n de gitweb:</target>
        </trans-unit>
        <trans-unit id="852dc3836c1061d866e063a7498878f33ef3ce12" translate="yes" xml:space="preserve">
          <source>For example, if the P4 repository structure is:</source>
          <target state="translated">Por ejemplo,si la estructura del depósito P4 es:</target>
        </trans-unit>
        <trans-unit id="36dce8b0d031af7904e6cd8255529f9ec8396929" translate="yes" xml:space="preserve">
          <source>For example, if the file you want to change is some sort of config file, the repository can include a sample config file that can then be copied into the ignored name and modified. The repository can even include a script to treat the sample file as a template, modifying and copying it automatically.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4035b3eacf18f396eb5e00ae6815d18cf72feae5" translate="yes" xml:space="preserve">
          <source>For example, if the value for this option is &quot;%=$&quot;, then only lines using the format &lt;code&gt;&amp;lt;token&amp;gt;&amp;lt;sep&amp;gt;&amp;lt;value&amp;gt;&lt;/code&gt; with &amp;lt;sep&amp;gt; containing &lt;code&gt;%&lt;/code&gt;, &lt;code&gt;=&lt;/code&gt; or &lt;code&gt;$&lt;/code&gt; and then spaces will be considered trailers. And &lt;code&gt;%&lt;/code&gt; will be the default separator used, so by default trailers will appear like: &lt;code&gt;&amp;lt;token&amp;gt;% &amp;lt;value&amp;gt;&lt;/code&gt; (one percent sign and one space will appear between the token and the value).</source>
          <target state="translated">Por ejemplo, si el valor de esta opci&amp;oacute;n es &quot;% = $&quot;, solo las l&amp;iacute;neas que usen el formato &lt;code&gt;&amp;lt;token&amp;gt;&amp;lt;sep&amp;gt;&amp;lt;value&amp;gt;&lt;/code&gt; con &amp;lt;sep&amp;gt; conteniendo &lt;code&gt;%&lt;/code&gt; , &lt;code&gt;=&lt;/code&gt; o &lt;code&gt;$&lt;/code&gt; y luego los espacios se considerar&amp;aacute;n avances. Y &lt;code&gt;%&lt;/code&gt; ser&amp;aacute; el separador predeterminado utilizado, por lo que, de forma predeterminada, los avances aparecer&amp;aacute;n como: &lt;code&gt;&amp;lt;token&amp;gt;% &amp;lt;value&amp;gt;&lt;/code&gt; (aparecer&amp;aacute; un signo de porcentaje y un espacio entre el token y el valor).</target>
        </trans-unit>
        <trans-unit id="534223d4530dd35132999074203db95c4ecee123" translate="yes" xml:space="preserve">
          <source>For example, if this variable is set to &quot;refs/for&quot;, pushing to reference such as &quot;refs/for/master&quot; will not create or update a reference named &quot;refs/for/master&quot;, but may create or update a pull request directly by running the hook &quot;proc-receive&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5103535d9f29750b8c9135f826c57c311f8eeae1" translate="yes" xml:space="preserve">
          <source>For example, if we want a password for &lt;code&gt;https://example.com/foo.git&lt;/code&gt;, we might generate the following credential description (don&amp;rsquo;t forget the blank line at the end; it tells &lt;code&gt;git credential&lt;/code&gt; that the application finished feeding all the information it has):</source>
          <target state="translated">Por ejemplo, si queremos una contrase&amp;ntilde;a para &lt;code&gt;https://example.com/foo.git&lt;/code&gt; , podr&amp;iacute;amos generar la siguiente descripci&amp;oacute;n de la credencial (no olvide la l&amp;iacute;nea en blanco al final; le dice a &lt;code&gt;git credential&lt;/code&gt; que la aplicaci&amp;oacute;n termin&amp;oacute; de alimentar a todos la informaci&amp;oacute;n que tiene):</target>
        </trans-unit>
        <trans-unit id="bb2f882b3f8efdae1333b719a705576641ca3f31" translate="yes" xml:space="preserve">
          <source>For example, if you are looking for a commit that introduced a performance regression, you might use</source>
          <target state="translated">Por ejemplo,si está buscando un compromiso que introdujo una regresión de rendimiento,podría usar</target>
        </trans-unit>
        <trans-unit id="68d306989ac898943c9324c1636692924527fd1d" translate="yes" xml:space="preserve">
          <source>For example, if you have this topology:</source>
          <target state="translated">Por ejemplo,si tienes esta topología:</target>
        </trans-unit>
        <trans-unit id="a61cdb8cd8334eeef24d9dfefb310bcbd689195c" translate="yes" xml:space="preserve">
          <source>For example, if you have two branches, &lt;code&gt;A&lt;/code&gt; and &lt;code&gt;B&lt;/code&gt;, a usual way to list all commits on only one side of them is with &lt;code&gt;--left-right&lt;/code&gt; (see the example below in the description of the &lt;code&gt;--left-right&lt;/code&gt; option). However, it shows the commits that were cherry-picked from the other branch (for example, &amp;ldquo;3rd on b&amp;rdquo; may be cherry-picked from branch A). With this option, such pairs of commits are excluded from the output.</source>
          <target state="translated">Por ejemplo, si tiene dos ramas, &lt;code&gt;A&lt;/code&gt; y &lt;code&gt;B&lt;/code&gt; , una forma habitual de enumerar todas las confirmaciones en un solo lado de ellas es con &lt;code&gt;--left-right&lt;/code&gt; (vea el ejemplo a continuaci&amp;oacute;n en la descripci&amp;oacute;n de la opci&amp;oacute;n &lt;code&gt;--left-right&lt;/code&gt; ) . Sin embargo, muestra las confirmaciones que fueron seleccionadas de la otra rama (por ejemplo, &quot;3rd on b&quot; puede ser seleccionada de la rama A). Con esta opci&amp;oacute;n, estos pares de confirmaciones se excluyen de la salida.</target>
        </trans-unit>
        <trans-unit id="fe897c525854ed4ff520e569183f4547ca07cbf6" translate="yes" xml:space="preserve">
          <source>For example, if you use mod_perl to run the script, and have dumb HTTP protocol authentication configured for your repositories, you can use the following hook to allow access only if the user is authorized to read the files:</source>
          <target state="translated">Por ejemplo,si utiliza mod_perl para ejecutar el script,y tiene configurada la autenticación del protocolo HTTP tonto para sus repositorios,puede utilizar el siguiente gancho para permitir el acceso sólo si el usuario está autorizado a leer los archivos:</target>
        </trans-unit>
        <trans-unit id="86c7872b373de97c557b525ebe5143ba729f1f41" translate="yes" xml:space="preserve">
          <source>For example, if you want to reorder the last 5 commits, such that what was HEAD~4 becomes the new HEAD. To achieve that, you would call &lt;code&gt;git rebase&lt;/code&gt; like this:</source>
          <target state="translated">Por ejemplo, si desea reordenar las &amp;uacute;ltimas 5 confirmaciones, de modo que lo que era HEAD ~ 4 se convierta en el nuevo HEAD. Para lograr eso, llamar&amp;iacute;as a &lt;code&gt;git rebase&lt;/code&gt; as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="3cb17626983b1627f4a677c41e03478d83711c28" translate="yes" xml:space="preserve">
          <source>For example, imagine you store the refs for each fork in &lt;code&gt;refs/virtual/ID&lt;/code&gt;, where &lt;code&gt;ID&lt;/code&gt; is a numeric identifier. You might then configure:</source>
          <target state="translated">Por ejemplo, imagine que almacena las referencias para cada bifurcaci&amp;oacute;n en &lt;code&gt;refs/virtual/ID&lt;/code&gt; , donde &lt;code&gt;ID&lt;/code&gt; es un identificador num&amp;eacute;rico. A continuaci&amp;oacute;n, puede configurar:</target>
        </trans-unit>
        <trans-unit id="30bbf60289c9238f0d33e5175010f4e252c9853c" translate="yes" xml:space="preserve">
          <source>For example, in .gitattributes, you would assign the &lt;code&gt;filter&lt;/code&gt; attribute for paths.</source>
          <target state="translated">Por ejemplo, en .gitattributes, asignar&amp;iacute;a el atributo de &lt;code&gt;filter&lt;/code&gt; para las rutas.</target>
        </trans-unit>
        <trans-unit id="c7b53804fabf5a8d611f469400f3d23e0cdaf582" translate="yes" xml:space="preserve">
          <source>For example, in a commit history like this:</source>
          <target state="translated">Por ejemplo,en una historia de compromiso como esta:</target>
        </trans-unit>
        <trans-unit id="806ca5f41259915dee6774976f8cdf13ec61deac" translate="yes" xml:space="preserve">
          <source>For example, let&amp;rsquo;s say that you have worked on your working directory, updated some files in the index and are ready to commit. You want to see exactly &lt;strong&gt;what&lt;/strong&gt; you are going to commit, without having to write a new tree object and compare it that way, and to do that, you just do</source>
          <target state="translated">Por ejemplo, digamos que ha trabajado en su directorio de trabajo, actualiz&amp;oacute; algunos archivos en el &amp;iacute;ndice y est&amp;aacute; listo para confirmar. Desea ver exactamente &lt;strong&gt;lo&lt;/strong&gt; que va a comprometer, sin tener que escribir un nuevo objeto de &amp;aacute;rbol y compararlo de esa manera, y para hacer eso, simplemente haga</target>
        </trans-unit>
        <trans-unit id="476c3fc4a50784809d3ca0defbcdf28a5bcb4395" translate="yes" xml:space="preserve">
          <source>For example, main-worktree/HEAD or main-worktree/refs/bisect/good resolve to the same value as the main working tree&amp;rsquo;s HEAD and refs/bisect/good respectively. Similarly, worktrees/foo/HEAD or worktrees/bar/refs/bisect/bad are the same as GIT_COMMON_DIR/worktrees/foo/HEAD and GIT_COMMON_DIR/worktrees/bar/refs/bisect/bad.</source>
          <target state="translated">Por ejemplo, main-worktree / HEAD o main-worktree / refs / bisect / good resuelven al mismo valor que HEAD y refs / bisect / good del &amp;aacute;rbol de trabajo principal respectivamente. De manera similar, worktrees / foo / HEAD o worktrees / bar / refs / bisect / bad son los mismos que GIT_COMMON_DIR / worktrees / foo / HEAD y GIT_COMMON_DIR / worktrees / bar / refs / bisect / bad.</target>
        </trans-unit>
        <trans-unit id="266db89f5ed370855ec231f0d9586be36c8c2a06" translate="yes" xml:space="preserve">
          <source>For example, running &lt;a href=&quot;git-commit&quot;&gt;git-commit[1]&lt;/a&gt; generates this tree object from the index, stores it in the object database, and uses it as the tree object associated with the new commit.</source>
          <target state="translated">Por ejemplo, ejecutar &lt;a href=&quot;git-commit&quot;&gt;git-commit [1]&lt;/a&gt; genera este objeto de &amp;aacute;rbol a partir del &amp;iacute;ndice, lo almacena en la base de datos de objetos y lo usa como el objeto de &amp;aacute;rbol asociado con la nueva confirmaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="9241280c5dcf375f9e4ee8c8496a1f68f481ea18" translate="yes" xml:space="preserve">
          <source>For example, starting with this index:</source>
          <target state="translated">Por ejemplo,empezando con este índice:</target>
        </trans-unit>
        <trans-unit id="37236815fc65047678c9d53df59b5a94b9133df3" translate="yes" xml:space="preserve">
          <source>For example, the following fetch command spawned ssh, index-pack, rev-list, and gc. This example also shows that fetch took 5.199 seconds and of that 4.932 was in ssh.</source>
          <target state="translated">Por ejemplo,el siguiente comando fetch generó ssh,index-pack,rev-list y gc.Este ejemplo también muestra que fetch tardó 5.199 segundos y de ellos 4.932 fueron en ssh.</target>
        </trans-unit>
        <trans-unit id="675eb647719ee2ad2bd9af2ee96b8f7029195efd" translate="yes" xml:space="preserve">
          <source>For example, the following setting produces a breadcrumb trail like &quot;home / dev / projects / &amp;hellip;​&quot; where &quot;projects&quot; is the home link.</source>
          <target state="translated">Por ejemplo, la siguiente configuraci&amp;oacute;n produce una ruta de navegaci&amp;oacute;n como &quot;inicio / dev / proyectos /&amp;hellip;&quot; donde &quot;proyectos&quot; es el enlace de inicio.</target>
        </trans-unit>
        <trans-unit id="f229d0901b53da5a8037ba5b963ab5e1b0a84fc7" translate="yes" xml:space="preserve">
          <source>For example, the hook can simply run &lt;code&gt;git read-tree -u -m HEAD &quot;$1&quot;&lt;/code&gt; in order to emulate &lt;code&gt;git fetch&lt;/code&gt; that is run in the reverse direction with &lt;code&gt;git push&lt;/code&gt;, as the two-tree form of &lt;code&gt;git read-tree -u -m&lt;/code&gt; is essentially the same as &lt;code&gt;git switch&lt;/code&gt; or &lt;code&gt;git checkout&lt;/code&gt; that switches branches while keeping the local changes in the working tree that do not interfere with the difference between the branches.</source>
          <target state="translated">Por ejemplo, el gancho puede simplemente ejecutar &lt;code&gt;git read-tree -u -m HEAD &quot;$1&quot;&lt;/code&gt; para emular &lt;code&gt;git fetch&lt;/code&gt; que se ejecuta en la direcci&amp;oacute;n inversa con &lt;code&gt;git push&lt;/code&gt; , como la forma de dos &amp;aacute;rboles de &lt;code&gt;git read-tree -u -m&lt;/code&gt; es esencialmente lo mismo que &lt;code&gt;git switch&lt;/code&gt; o &lt;code&gt;git checkout&lt;/code&gt; que cambia de rama mientras mantiene los cambios locales en el &amp;aacute;rbol de trabajo que no interfieren con la diferencia entre las ramas.</target>
        </trans-unit>
        <trans-unit id="2232af53268b39393df426da2516589a0d0a00e9" translate="yes" xml:space="preserve">
          <source>For example, the multithreaded preload-index code can be instrumented with a region around the thread pool and then per-thread start and exit events within the threadproc.</source>
          <target state="translated">Por ejemplo,el código del índice de precarga multihilo puede ser instrumentado con una región alrededor del conjunto de hilos y luego eventos de inicio y salida por hilo dentro del threadproc.</target>
        </trans-unit>
        <trans-unit id="c6165309453e90635fafde69fa6a0dbf363059c7" translate="yes" xml:space="preserve">
          <source>For example, there can be a &quot;main&quot; branch, and a &quot;dev&quot; branch that was forked of the main branch at a commit named &quot;D&quot; like this:</source>
          <target state="translated">Por ejemplo,puede haber una rama &quot;principal&quot; y una rama &quot;dev&quot; que se bifurcó de la rama principal en un compromiso llamado &quot;D&quot; como este:</target>
        </trans-unit>
        <trans-unit id="fc0695ddae75754b17aaf6b6d741676357b02fb6" translate="yes" xml:space="preserve">
          <source>For example, this configuration:</source>
          <target state="translated">Por ejemplo,esta configuración:</target>
        </trans-unit>
        <trans-unit id="03526c1b7e3b294cd55189c8a4305129233dcf64" translate="yes" xml:space="preserve">
          <source>For example, this line in &lt;code&gt;.gitattributes&lt;/code&gt; can be used to tell the merge machinery to leave much longer (instead of the usual 7-character-long) conflict markers when merging the file &lt;code&gt;Documentation/git-merge.txt&lt;/code&gt; results in a conflict.</source>
          <target state="translated">Por ejemplo, esta l&amp;iacute;nea en &lt;code&gt;.gitattributes&lt;/code&gt; se puede usar para decirle a la maquinaria de combinaci&amp;oacute;n que deje marcadores de conflicto mucho m&amp;aacute;s largos (en lugar de los habituales 7 caracteres de longitud) cuando la combinaci&amp;oacute;n del archivo &lt;code&gt;Documentation/git-merge.txt&lt;/code&gt; da como resultado un conflicto.</target>
        </trans-unit>
        <trans-unit id="0b89cc0f3038d951dcea25e6121459d7deb13668" translate="yes" xml:space="preserve">
          <source>For example, to default to pushing only the current branch to &lt;code&gt;origin&lt;/code&gt; use &lt;code&gt;git config remote.origin.push HEAD&lt;/code&gt;. Any valid &amp;lt;refspec&amp;gt; (like the ones in the examples below) can be configured as the default for &lt;code&gt;git push origin&lt;/code&gt;.</source>
          <target state="translated">Por ejemplo, para &lt;code&gt;git config remote.origin.push HEAD&lt;/code&gt; forma predeterminada solo la rama actual al &lt;code&gt;origin&lt;/code&gt; use git config remote.origin.push HEAD . Cualquier &amp;lt;refspec&amp;gt; v&amp;aacute;lido (como los de los ejemplos a continuaci&amp;oacute;n) se puede configurar como predeterminado para &lt;code&gt;git push origin&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="119ea88469245e9be5ce50fb433af7f4a91870c1" translate="yes" xml:space="preserve">
          <source>For example, to show the diff of the exif information of a file instead of the binary information (assuming you have the exif tool installed), add the following section to your &lt;code&gt;$GIT_DIR/config&lt;/code&gt; file (or &lt;code&gt;$HOME/.gitconfig&lt;/code&gt; file):</source>
          <target state="translated">Por ejemplo, para mostrar la diferencia de la informaci&amp;oacute;n exif de un archivo en lugar de la informaci&amp;oacute;n binaria (suponiendo que tenga instalada la herramienta exif), agregue la siguiente secci&amp;oacute;n a su &lt;code&gt;$GIT_DIR/config&lt;/code&gt; (o archivo &lt;code&gt;$HOME/.gitconfig&lt;/code&gt; ):</target>
        </trans-unit>
        <trans-unit id="0cf3c72a4130dae24f8e93d376c795356d04a806" translate="yes" xml:space="preserve">
          <source>For example, with this topology:</source>
          <target state="translated">Por ejemplo,con esta topología:</target>
        </trans-unit>
        <trans-unit id="9026d38d92fad70bfcca633c7e54419876aa74d7" translate="yes" xml:space="preserve">
          <source>For example, with this:</source>
          <target state="translated">Por ejemplo,con esto:</target>
        </trans-unit>
        <trans-unit id="94a38b75a57da5e0f9eccf5408c94c3056500ecd" translate="yes" xml:space="preserve">
          <source>For example, you can choose a single person to maintain the project&amp;rsquo;s primary public repository. Other developers then clone this repository and each work in their own clone. When they have a series of changes that they&amp;rsquo;re happy with, they ask the maintainer to pull from the branch containing the changes. The maintainer reviews their changes and pulls them into the primary repository, which other developers pull from as necessary to stay coordinated. The Linux kernel and other projects use variants of this model.</source>
          <target state="translated">Por ejemplo, puede elegir a una sola persona para mantener el repositorio p&amp;uacute;blico principal del proyecto. Luego, otros desarrolladores clonan este repositorio y cada uno trabaja en su propio clon. Cuando tienen una serie de cambios con los que est&amp;aacute;n contentos, le piden al mantenedor que los extraiga de la rama que contiene los cambios. El mantenedor revisa sus cambios y los lleva al repositorio principal, del que otros desarrolladores extraen seg&amp;uacute;n sea necesario para mantenerse coordinados. El kernel de Linux y otros proyectos utilizan variantes de este modelo.</target>
        </trans-unit>
        <trans-unit id="0740e14a7a7f21956f0379ce28c5b2be003ef53b" translate="yes" xml:space="preserve">
          <source>For example, you&amp;rsquo;d want to do this after doing a &lt;code&gt;git read-tree&lt;/code&gt;, to link up the stat index details with the proper files.</source>
          <target state="translated">Por ejemplo, querr&amp;aacute; hacer esto despu&amp;eacute;s de hacer un &lt;code&gt;git read-tree&lt;/code&gt; , para vincular los detalles del &amp;iacute;ndice de estad&amp;iacute;sticas con los archivos adecuados.</target>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="0af803cded757214a9f60d6e61360566eb8261f1" translate="yes" xml:space="preserve">
          <source>For git&amp;rsquo;s pre-defined color slots, the attributes are meant to be reset at the beginning of each item in the colored output. So setting &lt;code&gt;color.decorate.branch&lt;/code&gt; to &lt;code&gt;black&lt;/code&gt; will paint that branch name in a plain &lt;code&gt;black&lt;/code&gt;, even if the previous thing on the same output line (e.g. opening parenthesis before the list of branch names in &lt;code&gt;log --decorate&lt;/code&gt; output) is set to be painted with &lt;code&gt;bold&lt;/code&gt; or some other attribute. However, custom log formats may do more complicated and layered coloring, and the negated forms may be useful there.</source>
          <target state="translated">Para las ranuras de color predefinidas de git, los atributos deben restablecerse al comienzo de cada elemento en la salida coloreada. Por lo tanto, configurar &lt;code&gt;color.decorate.branch&lt;/code&gt; en &lt;code&gt;black&lt;/code&gt; pintar&amp;aacute; el nombre de la rama en un &lt;code&gt;black&lt;/code&gt; simple , incluso si lo anterior en la misma l&amp;iacute;nea de salida (por ejemplo, abrir par&amp;eacute;ntesis antes de la lista de nombres de rama en el &lt;code&gt;log --decorate&lt;/code&gt; output) est&amp;aacute; configurado para ser pintado con &lt;code&gt;bold&lt;/code&gt; o alg&amp;uacute;n otro atributo. Sin embargo, los formatos de registro personalizados pueden tener colores m&amp;aacute;s complicados y en capas, y las formas negadas pueden ser &amp;uacute;tiles all&amp;iacute;.</target>
        </trans-unit>
        <trans-unit id="e39902dddf1a6f048d53b1c87575ee4b12254521" translate="yes" xml:space="preserve">
          <source>For hints on submission using the IMAP interface, see the EXAMPLE section of &lt;a href=&quot;git-imap-send&quot;&gt;git-imap-send[1]&lt;/a&gt;.</source>
          <target state="translated">Para obtener sugerencias sobre el env&amp;iacute;o mediante la interfaz IMAP, consulte la secci&amp;oacute;n EJEMPLO de &lt;a href=&quot;git-imap-send&quot;&gt;git-imap-send [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="30ba9877f29cd2e9b6e46df54ef9603700cf47bd" translate="yes" xml:space="preserve">
          <source>For hints on using &lt;code&gt;git send-email&lt;/code&gt; to send your patches through the GMail SMTP server, see the EXAMPLE section of &lt;a href=&quot;git-send-email&quot;&gt;git-send-email[1]&lt;/a&gt;.</source>
          <target state="translated">Para obtener sugerencias sobre el uso de &lt;code&gt;git send-email&lt;/code&gt; para enviar sus parches a trav&amp;eacute;s del servidor SMTP de GMail, consulte la secci&amp;oacute;n EJEMPLO de &lt;a href=&quot;git-send-email&quot;&gt;git-send-email [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="98a5ba2755b886f28a6b38a3063fb22b4953fd08" translate="yes" xml:space="preserve">
          <source>For instance, if the command &lt;code&gt;git push origin master:foreign&lt;/code&gt; were run the hook would receive a line like the following:</source>
          <target state="translated">Por ejemplo, si se ejecuta el comando &lt;code&gt;git push origin master:foreign&lt;/code&gt; , el gancho recibir&amp;aacute; una l&amp;iacute;nea como la siguiente:</target>
        </trans-unit>
        <trans-unit id="b7654d69e08e0a1f9383662a9764223dc833d854" translate="yes" xml:space="preserve">
          <source>For instance, if the main working tree (or bare repository) is moved, linked working trees will be unable to locate it. Running &lt;code&gt;repair&lt;/code&gt; in the main working tree will reestablish the connection from linked working trees back to the main working tree.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0da88c77b6050a1f8498227b0e9ea61aad1dd42" translate="yes" xml:space="preserve">
          <source>For instance, if you configured the &lt;code&gt;diff.algorithm&lt;/code&gt; variable to a non-default value and want to use the default one, then you have to use &lt;code&gt;--diff-algorithm=default&lt;/code&gt; option.</source>
          <target state="translated">Por ejemplo, si configur&amp;oacute; la variable &lt;code&gt;diff.algorithm&lt;/code&gt; en un valor no predeterminado y desea usar el predeterminado, entonces debe usar la &lt;code&gt;--diff-algorithm=default&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c03b6c2e674301ea043615909864bcef9fc3a8b4" translate="yes" xml:space="preserve">
          <source>For instance, imagine we are accessing &lt;code&gt;https://example.com/foo.git&lt;/code&gt;. When Git looks into a config file to see if a section matches this context, it will consider the two a match if the context is a more-specific subset of the pattern in the config file. For example, if you have this in your config file:</source>
          <target state="translated">Por ejemplo, imagina que accedemos a &lt;code&gt;https://example.com/foo.git&lt;/code&gt; . Cuando Git busca en un archivo de configuraci&amp;oacute;n para ver si una secci&amp;oacute;n coincide con este contexto, considerar&amp;aacute; que los dos coinciden si el contexto es un subconjunto m&amp;aacute;s espec&amp;iacute;fico del patr&amp;oacute;n en el archivo de configuraci&amp;oacute;n. Por ejemplo, si tiene esto en su archivo de configuraci&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="160dca6e4172cec7a014617ee2140fea1d612055" translate="yes" xml:space="preserve">
          <source>For internal use only. Used in handshaking the wire protocol. Contains a colon &lt;code&gt;:&lt;/code&gt; separated list of keys with optional values &lt;code&gt;key[=value]&lt;/code&gt;. Presence of unknown keys and values must be ignored.</source>
          <target state="translated">S&amp;oacute;lo para uso interno. Se utiliza en el protocolo de enlace por cable. Contiene dos puntos &lt;code&gt;:&lt;/code&gt; lista separada de claves con valores opcionales &lt;code&gt;key[=value]&lt;/code&gt; . Debe ignorarse la presencia de claves y valores desconocidos.</target>
        </trans-unit>
        <trans-unit id="7c3c8218b8f3420e2d309aa9107b8abd4e99e346" translate="yes" xml:space="preserve">
          <source>For local repositories, also supported by Git natively, the following syntaxes may be used:</source>
          <target state="translated">Para los depósitos locales,también apoyados por Git de forma nativa,se pueden utilizar las siguientes sintaxis:</target>
        </trans-unit>
        <trans-unit id="cc185d3a233093301eeacaae1d44792c3563d415" translate="yes" xml:space="preserve">
          <source>For more detailed explanation on these common options, see also &lt;a href=&quot;gitdiffcore&quot;&gt;gitdiffcore[7]&lt;/a&gt;.</source>
          <target state="translated">Para una explicaci&amp;oacute;n m&amp;aacute;s detallada sobre estas opciones comunes, vea tambi&amp;eacute;n &lt;a href=&quot;gitdiffcore&quot;&gt;gitdiffcore [7]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cfb518a2bdb468f6a1698c12278a7c2890c2e01b" translate="yes" xml:space="preserve">
          <source>For more details about the &amp;lt;pathspec&amp;gt; syntax, see the &lt;code&gt;pathspec&lt;/code&gt; entry in &lt;a href=&quot;gitglossary&quot;&gt;gitglossary[7]&lt;/a&gt;.</source>
          <target state="translated">Para m&amp;aacute;s detalles sobre la &amp;lt;pathspec&amp;gt; sintaxis, consulte la &lt;code&gt;pathspec&lt;/code&gt; entrada en &lt;a href=&quot;gitglossary&quot;&gt;gitglossary [7]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f0360b14fd2012ea432fadffcf3782c95bbb3d96" translate="yes" xml:space="preserve">
          <source>For more details, see the &lt;code&gt;pathspec&lt;/code&gt; entry in &lt;a href=&quot;gitglossary&quot;&gt;gitglossary[7]&lt;/a&gt;.</source>
          <target state="translated">Para m&amp;aacute;s detalles, ver el &lt;code&gt;pathspec&lt;/code&gt; entrada en &lt;a href=&quot;gitglossary&quot;&gt;gitglossary [7]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="dee223e709585f8622ae3db9c408c2275df286e3" translate="yes" xml:space="preserve">
          <source>For more information about submodules, see &lt;a href=&quot;gitsubmodules&quot;&gt;gitsubmodules[7]&lt;/a&gt;.</source>
          <target state="translated">Para obtener m&amp;aacute;s informaci&amp;oacute;n sobre los subm&amp;oacute;dulos, consulte &lt;a href=&quot;gitsubmodules&quot;&gt;gitsubmodules [7]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cf4d0c9e8fd0a561af6eb800b4aa95d1953e08dc" translate="yes" xml:space="preserve">
          <source>For non-linear topology, such as</source>
          <target state="translated">Para la topología no lineal,como</target>
        </trans-unit>
        <trans-unit id="6869cf2d54fdd333756ee082074da9e8aa4cabf1" translate="yes" xml:space="preserve">
          <source>For now, the paranoid need to find some way to emulate the quarantine environment if they&amp;rsquo;d like the same protection as &quot;push&quot;. E.g. in the case of an internal mirror do the mirroring in two steps, one to fetch the untrusted objects, and then do a second &quot;push&quot; (which will use the quarantine) to another internal repo, and have internal clients consume this pushed-to repository, or embargo internal fetches and only allow them once a full &quot;fsck&quot; has run (and no new fetches have happened in the meantime).</source>
          <target state="translated">Por ahora, los paranoicos necesitan encontrar alguna forma de emular el entorno de cuarentena si desean la misma protecci&amp;oacute;n que &quot;push&quot;. Por ejemplo, en el caso de un espejo interno, haga el reflejo en dos pasos, uno para buscar los objetos que no son de confianza, y luego haga un segundo &quot;empuje&quot; (que usar&amp;aacute; la cuarentena) a otro repositorio interno, y haga que los clientes internos consuman este empuje- al repositorio, o embargar las recuperaciones internas y solo permitirlas una vez que se haya ejecutado un &quot;fsck&quot; completo (y mientras tanto no se hayan realizado nuevas recuperaciones).</target>
        </trans-unit>
        <trans-unit id="133fa5a74f060c815b7406a1ab993c4e06ad0024" translate="yes" xml:space="preserve">
          <source>For open source projects it can be a good way to get more useful contributions from end users, and to introduce them to QA and development activities.</source>
          <target state="translated">En el caso de los proyectos de código abierto,puede ser una buena manera de obtener contribuciones más útiles de los usuarios finales e introducirlos en las actividades de control de calidad y desarrollo.</target>
        </trans-unit>
        <trans-unit id="dd41930f44da136ca06d3f66916ab11faa591b27" translate="yes" xml:space="preserve">
          <source>For our first example, we&amp;rsquo;re going to start a totally new repository from scratch, with no pre-existing files, and we&amp;rsquo;ll call it &lt;code&gt;git-tutorial&lt;/code&gt;. To start up, create a subdirectory for it, change into that subdirectory, and initialize the Git infrastructure with &lt;code&gt;git init&lt;/code&gt;:</source>
          <target state="translated">Para nuestro primer ejemplo, vamos a iniciar un repositorio totalmente nuevo desde cero, sin archivos preexistentes, y lo llamaremos &lt;code&gt;git-tutorial&lt;/code&gt; . Para comenzar, cree un subdirectorio para &amp;eacute;l, c&amp;aacute;mbielo a ese subdirectorio e inicialice la infraestructura de Git con &lt;code&gt;git init&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="5307fd3985478faa6faac86f16463cb9c367c366" translate="yes" xml:space="preserve">
          <source>For paths with merge conflicts, &lt;code&gt;X&lt;/code&gt; and &lt;code&gt;Y&lt;/code&gt; show the modification states of each side of the merge. For paths that do not have merge conflicts, &lt;code&gt;X&lt;/code&gt; shows the status of the index, and &lt;code&gt;Y&lt;/code&gt; shows the status of the work tree. For untracked paths, &lt;code&gt;XY&lt;/code&gt; are &lt;code&gt;??&lt;/code&gt;. Other status codes can be interpreted as follows:</source>
          <target state="translated">Para las rutas con conflictos de fusi&amp;oacute;n, &lt;code&gt;X&lt;/code&gt; e &lt;code&gt;Y&lt;/code&gt; muestran los estados de modificaci&amp;oacute;n de cada lado de la fusi&amp;oacute;n. Para las rutas que no tienen conflictos de fusi&amp;oacute;n, &lt;code&gt;X&lt;/code&gt; muestra el estado del &amp;iacute;ndice e &lt;code&gt;Y&lt;/code&gt; muestra el estado del &amp;aacute;rbol de trabajo. Para caminos sin seguimiento, &lt;code&gt;XY&lt;/code&gt; son &lt;code&gt;??&lt;/code&gt; . Otros c&amp;oacute;digos de estado se pueden interpretar de la siguiente manera:</target>
        </trans-unit>
        <trans-unit id="7032989b4e615b54922dcaa29834b5d11069ae03" translate="yes" xml:space="preserve">
          <source>For people who do parsing: to make it more robust, just ignore any lines between the first and last one (&quot;&amp;lt;sha1&amp;gt;&quot; and &quot;filename&quot; lines) where you do not recognize the tag words (or care about that particular one) at the beginning of the &quot;extended information&quot; lines. That way, if there is ever added information (like the commit encoding or extended commit commentary), a blame viewer will not care.</source>
          <target state="translated">Para las personas que hacen an&amp;aacute;lisis: para hacerlo m&amp;aacute;s s&amp;oacute;lido, simplemente ignore las l&amp;iacute;neas entre la primera y la &amp;uacute;ltima (l&amp;iacute;neas &quot;&amp;lt;sha1&amp;gt;&quot; y &quot;nombre de archivo&quot;) en las que no reconozca las palabras de la etiqueta (o le importe esa en particular) al principio de las l&amp;iacute;neas de &quot;informaci&amp;oacute;n ampliada&quot;. De esa manera, si alguna vez se agrega informaci&amp;oacute;n (como la codificaci&amp;oacute;n de confirmaci&amp;oacute;n o el comentario de confirmaci&amp;oacute;n extendido), al espectador culpable no le importar&amp;aacute;.</target>
        </trans-unit>
        <trans-unit id="d3a8933e3664a281a0f1007219c1a5fb906f5b9c" translate="yes" xml:space="preserve">
          <source>For performance reasons, by default, &lt;code&gt;-C&lt;/code&gt; option finds copies only if the original file of the copy was modified in the same changeset. This flag makes the command inspect unmodified files as candidates for the source of copy. This is a very expensive operation for large projects, so use it with caution. Giving more than one &lt;code&gt;-C&lt;/code&gt; option has the same effect.</source>
          <target state="translated">Por motivos de rendimiento, de forma predeterminada, la opci&amp;oacute;n &lt;code&gt;-C&lt;/code&gt; busca copias solo si el archivo original de la copia se modific&amp;oacute; en el mismo conjunto de cambios. Este indicador hace que el comando inspeccione los archivos no modificados como candidatos para la fuente de copia. Esta es una operaci&amp;oacute;n muy costosa para proyectos grandes, as&amp;iacute; que &amp;uacute;sela con precauci&amp;oacute;n. Dar m&amp;aacute;s de una opci&amp;oacute;n &lt;code&gt;-C&lt;/code&gt; tiene el mismo efecto.</target>
        </trans-unit>
        <trans-unit id="9b9345e0345532d160619f268731569cef16617e" translate="yes" xml:space="preserve">
          <source>For plain blobs, it shows the plain contents.</source>
          <target state="translated">Para las manchas simples,muestra el contenido simple.</target>
        </trans-unit>
        <trans-unit id="9e1c4f262d546f1a8d01796c1dc838262d4af7ed" translate="yes" xml:space="preserve">
          <source>For precedence rules within and between exclude sources, see &lt;a href=&quot;gitignore&quot;&gt;gitignore[5]&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e52f5f667fd4d7c4b839fc8977488698f28dddb" translate="yes" xml:space="preserve">
          <source>For projects with few developers, or for synchronizing a few private repositories, this may be all you need.</source>
          <target state="translated">Para proyectos con pocos desarrolladores,o para sincronizar algunos repositorios privados,esto puede ser todo lo que necesita.</target>
        </trans-unit>
        <trans-unit id="0fbf0a1225d8cd0da43e8dc6b186868e699b6219" translate="yes" xml:space="preserve">
          <source>For quickly making a snapshot, you can omit &quot;push&quot;. In this mode, non-option arguments are not allowed to prevent a misspelled subcommand from making an unwanted stash entry. The two exceptions to this are &lt;code&gt;stash -p&lt;/code&gt; which acts as alias for &lt;code&gt;stash push -p&lt;/code&gt; and pathspec elements, which are allowed after a double hyphen &lt;code&gt;--&lt;/code&gt; for disambiguation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="513a986f0bbc369f77d7fc94a6a47375b99e8d89" translate="yes" xml:space="preserve">
          <source>For quickly making a snapshot, you can omit &quot;push&quot;. In this mode, non-option arguments are not allowed to prevent a misspelled subcommand from making an unwanted stash entry. The two exceptions to this are &lt;code&gt;stash -p&lt;/code&gt; which acts as alias for &lt;code&gt;stash push -p&lt;/code&gt; and pathspecs, which are allowed after a double hyphen &lt;code&gt;--&lt;/code&gt; for disambiguation.</source>
          <target state="translated">Para hacer una instant&amp;aacute;nea r&amp;aacute;pidamente, puede omitir &quot;empujar&quot;. En este modo, los argumentos que no son de opci&amp;oacute;n no est&amp;aacute;n permitidos para evitar que un subcomando mal escrito haga una entrada oculta no deseada. Las dos excepciones a esto son &lt;code&gt;stash -p&lt;/code&gt; , que act&amp;uacute;a como alias para &lt;code&gt;stash push -p&lt;/code&gt; , ypathspecs, que se permiten despu&amp;eacute;s de un gui&amp;oacute;n doble &lt;code&gt;--&lt;/code&gt; para la desambiguaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="10b29e2b2e8e16a8f0d937588e990a303d5a39cb" translate="yes" xml:space="preserve">
          <source>For reading options: read only from global &lt;code&gt;~/.gitconfig&lt;/code&gt; and from &lt;code&gt;$XDG_CONFIG_HOME/git/config&lt;/code&gt; rather than from all available files.</source>
          <target state="translated">Para opciones de lectura: lea solo de global &lt;code&gt;~/.gitconfig&lt;/code&gt; y de &lt;code&gt;$XDG_CONFIG_HOME/git/config&lt;/code&gt; lugar de todos los archivos disponibles.</target>
        </trans-unit>
        <trans-unit id="f670c3a49f96ee071030446b2338be3d3b61c282" translate="yes" xml:space="preserve">
          <source>For reading options: read only from system-wide &lt;code&gt;$(prefix)/etc/gitconfig&lt;/code&gt; rather than from all available files.</source>
          <target state="translated">Para opciones de lectura: lea solo desde &lt;code&gt;$(prefix)/etc/gitconfig&lt;/code&gt; de todo el sistema en lugar de todos los archivos disponibles.</target>
        </trans-unit>
        <trans-unit id="1a0b8cd1ef1778fc9e72b8ac1ede20b2c02305dd" translate="yes" xml:space="preserve">
          <source>For reading options: read only from the repository &lt;code&gt;.git/config&lt;/code&gt; rather than from all available files.</source>
          <target state="translated">Para opciones de lectura: lea solo del repositorio &lt;code&gt;.git/config&lt;/code&gt; en lugar de todos los archivos disponibles.</target>
        </trans-unit>
        <trans-unit id="52ad1818a91b579273748ec3f745c2ea8925da11" translate="yes" xml:space="preserve">
          <source>For remote helpers that implement &lt;code&gt;import&lt;/code&gt; or &lt;code&gt;export&lt;/code&gt;, this capability allows the refs to be constrained to a private namespace, instead of writing to refs/heads or refs/remotes directly. It is recommended that all importers providing the &lt;code&gt;import&lt;/code&gt; capability use this. It&amp;rsquo;s mandatory for &lt;code&gt;export&lt;/code&gt;.</source>
          <target state="translated">Para los ayudantes remotos que implementan la &lt;code&gt;import&lt;/code&gt; aci&amp;oacute;n o &lt;code&gt;export&lt;/code&gt; aci&amp;oacute;n , esta capacidad permite que las referencias se limiten a un espacio de nombres privado, en lugar de escribir en referencias / cabezas o referencias / remotas directamente. Se recomienda que todos los importadores que ofrecen la capacidad de &lt;code&gt;import&lt;/code&gt; aci&amp;oacute;n lo utilicen. Es obligatorio para la &lt;code&gt;export&lt;/code&gt; aci&amp;oacute;n .</target>
        </trans-unit>
        <trans-unit id="443450d98036603164f83ff3df4c2bf679d11741" translate="yes" xml:space="preserve">
          <source>For remotes that require curl (http, https and ftp), the URL to the proxy to use for that remote. Set to the empty string to disable proxying for that remote.</source>
          <target state="translated">Para los mandos que requieren rizo (http,https y ftp),la URL del proxy a utilizar para ese mando.Configura la cadena vacía para desactivar el proxy para ese control remoto.</target>
        </trans-unit>
        <trans-unit id="8af93420a9afb3e813edb57f9ce58a35a5de2989" translate="yes" xml:space="preserve">
          <source>For remotes that require curl (http, https and ftp), the method to use for authenticating against the proxy in use (probably set in &lt;code&gt;remote.&amp;lt;name&amp;gt;.proxy&lt;/code&gt;). See &lt;code&gt;http.proxyAuthMethod&lt;/code&gt;.</source>
          <target state="translated">Para los controles remotos que requieren curl (http, https y ftp), el m&amp;eacute;todo a usar para autenticarse contra el proxy en uso (probablemente configurado en &lt;code&gt;remote.&amp;lt;name&amp;gt;.proxy&lt;/code&gt; ). Consulte &lt;code&gt;http.proxyAuthMethod&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ff12c5f69e6a4dbe2b8b7bc739ac234198e179f4" translate="yes" xml:space="preserve">
          <source>For scripting, you can ask it to be quiet with the &quot;--quiet&quot; flag, which allows you to do things like</source>
          <target state="translated">Para el guión,puedes pedirle que sea silencioso con la bandera &quot;--quiet&quot;,que te permite hacer cosas como</target>
        </trans-unit>
        <trans-unit id="6ad68ca568ca7f00dfca41d4efe640136cb611e6" translate="yes" xml:space="preserve">
          <source>For some frontends, though, it is useful to be able to read back data from the current repository as it is being updated (for example when the source material describes objects in terms of patches to be applied to previously imported objects). This can be accomplished by connecting the frontend and fast-import via bidirectional pipes:</source>
          <target state="translated">Sin embargo,para algunos frontales es útil poder leer los datos del repositorio actual a medida que se actualiza (por ejemplo,cuando el material de origen describe los objetos en términos de parches que se aplicarán a los objetos importados anteriormente).Esto puede lograrse conectando el frontend y la importación rápida mediante tuberías bidireccionales:</target>
        </trans-unit>
        <trans-unit id="b5ea8ea5b2c1cd3e6d47c32a09c62d3c70b6ee6f" translate="yes" xml:space="preserve">
          <source>For some interesting examples of Git use, see the &lt;a href=&quot;howto-index&quot;&gt;howtos&lt;/a&gt;.</source>
          <target state="translated">Para ver algunos ejemplos interesantes del uso de Git, consulte los &lt;a href=&quot;howto-index&quot;&gt;howtos&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="fd917a632df420113bd1fa62c1a75d6d0838fcf8" translate="yes" xml:space="preserve">
          <source>For sorting purposes, fields with numeric values sort in numeric order (&lt;code&gt;objectsize&lt;/code&gt;, &lt;code&gt;authordate&lt;/code&gt;, &lt;code&gt;committerdate&lt;/code&gt;, &lt;code&gt;creatordate&lt;/code&gt;, &lt;code&gt;taggerdate&lt;/code&gt;). All other fields are used to sort in their byte-value order.</source>
          <target state="translated">Para fines de clasificaci&amp;oacute;n, campos con valores num&amp;eacute;ricos ordenar en orden num&amp;eacute;rico ( &lt;code&gt;objectsize&lt;/code&gt; , &lt;code&gt;authordate&lt;/code&gt; , &lt;code&gt;committerdate&lt;/code&gt; , &lt;code&gt;creatordate&lt;/code&gt; , &lt;code&gt;taggerdate&lt;/code&gt; ). Todos los dem&amp;aacute;s campos se utilizan para ordenar en su orden de valor de bytes.</target>
        </trans-unit>
        <trans-unit id="032b282727ffc0c1c45df3e884598bae17ea6ac4" translate="yes" xml:space="preserve">
          <source>For specifying settings like &lt;code&gt;verbosity&lt;/code&gt; (how much output to write to stderr) and &lt;code&gt;depth&lt;/code&gt; (how much history is wanted in the case of a shallow clone) that affect how other commands are carried out.</source>
          <target state="translated">Para especificar configuraciones como &lt;code&gt;verbosity&lt;/code&gt; (cu&amp;aacute;nta salida escribir en stderr) y &lt;code&gt;depth&lt;/code&gt; (cu&amp;aacute;nto historial se desea en el caso de un clon superficial) que afectan la forma en que se ejecutan otros comandos.</target>
        </trans-unit>
        <trans-unit id="c02205be8f69628f646f89a0276ec82187cc890c" translate="yes" xml:space="preserve">
          <source>For submodules, this setting can be overridden using the &lt;code&gt;submodule.fetchJobs&lt;/code&gt; config setting.</source>
          <target state="translated">Para los subm&amp;oacute;dulos, esta configuraci&amp;oacute;n se puede anular usando la configuraci&amp;oacute;n de configuraci&amp;oacute;n &lt;code&gt;submodule.fetchJobs&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c4b69b6e908fa58f8bfb0090b464d01ba7afd33a" translate="yes" xml:space="preserve">
          <source>For such a test, you need to merge master and topic somehow. One way to do it is to pull master into the topic branch:</source>
          <target state="translated">Para tal prueba,necesitas fusionar el maestro y el tema de alguna manera.Una forma de hacerlo es llevar al maestro a la rama del tema:</target>
        </trans-unit>
        <trans-unit id="e3a970f50f86b7e372ecc38ba0a4b965f601d385" translate="yes" xml:space="preserve">
          <source>For tags, it shows the tag message and the referenced objects.</source>
          <target state="translated">Para las etiquetas,muestra el mensaje de la etiqueta y los objetos referidos.</target>
        </trans-unit>
        <trans-unit id="e66e4764a23ddc1ac17a40208b614c40e3d1e8cd" translate="yes" xml:space="preserve">
          <source>For the &lt;code&gt;squash&lt;/code&gt; and &lt;code&gt;fixup&lt;/code&gt; operation, all commits that were squashed are listed as being rewritten to the squashed commit. This means that there will be several lines sharing the same &lt;code&gt;new-sha1&lt;/code&gt;.</source>
          <target state="translated">Para la &lt;code&gt;squash&lt;/code&gt; y la &lt;code&gt;fixup&lt;/code&gt; operaci&amp;oacute;n, todos los env&amp;iacute;os que fueron aplastados se enumeran como siendo reescrito para el aplastado comprometerse. Esto significa que habr&amp;aacute; varias l&amp;iacute;neas compartiendo el mismo &lt;code&gt;new-sha1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0288085d533925ac75b1f295d9e834640d8fad16" translate="yes" xml:space="preserve">
          <source>For the complete list of paths which Git checks for references, and the order it uses to decide which to choose when there are multiple references with the same shorthand name, see the &quot;SPECIFYING REVISIONS&quot; section of &lt;a href=&quot;gitrevisions&quot;&gt;gitrevisions[7]&lt;/a&gt;.</source>
          <target state="translated">Para obtener la lista completa de rutas que Git busca referencias, y el orden que usa para decidir cu&amp;aacute;l elegir cuando hay m&amp;uacute;ltiples referencias con el mismo nombre abreviado, consulte la secci&amp;oacute;n &quot;ESPECIFICAR REVISIONES&quot; de &lt;a href=&quot;gitrevisions&quot;&gt;gitrevisions [7]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="44d025151b0ff5e996c1070f067a89933eee64e1" translate="yes" xml:space="preserve">
          <source>For the initial import, &lt;code&gt;git archimport&lt;/code&gt; expects to find itself in an empty directory. To follow the development of a project that uses Arch, rerun &lt;code&gt;git archimport&lt;/code&gt; with the same parameters as the initial import to perform incremental imports.</source>
          <target state="translated">Para la importaci&amp;oacute;n inicial, &lt;code&gt;git archimport&lt;/code&gt; espera encontrarse en un directorio vac&amp;iacute;o. Para seguir el desarrollo de un proyecto que usa Arch, vuelva a ejecutar &lt;code&gt;git archimport&lt;/code&gt; con los mismos par&amp;aacute;metros que la importaci&amp;oacute;n inicial para realizar importaciones incrementales.</target>
        </trans-unit>
        <trans-unit id="c91c81358174e9b87a92bafd019b5720cbf2a8d2" translate="yes" xml:space="preserve">
          <source>For the purpose of breaking a filepair, diffcore-break examines the extent of changes between the contents of the files before and after modification (i.e. the contents that have &quot;bcd1234&amp;hellip;​&quot; and &quot;0123456&amp;hellip;​&quot; as their SHA-1 content ID, in the above example). The amount of deletion of original contents and insertion of new material are added together, and if it exceeds the &quot;break score&quot;, the filepair is broken into two. The break score defaults to 50% of the size of the smaller of the original and the result (i.e. if the edit shrinks the file, the size of the result is used; if the edit lengthens the file, the size of the original is used), and can be customized by giving a number after &quot;-B&quot; option (e.g. &quot;-B75&quot; to tell it to use 75%).</source>
          <target state="translated">Con el fin de romper un par de archivos, diffcore-break examina el alcance de los cambios entre el contenido de los archivos antes y despu&amp;eacute;s de la modificaci&amp;oacute;n (es decir, el contenido que tiene &quot;bcd1234 ...&quot; y &quot;0123456 ...&quot; como su ID de contenido SHA-1 , en el ejemplo anterior). La cantidad de eliminaci&amp;oacute;n del contenido original y la inserci&amp;oacute;n de material nuevo se suman, y si excede la &quot;puntuaci&amp;oacute;n de ruptura&quot;, el par de archivos se divide en dos. La puntuaci&amp;oacute;n de ruptura se establece de forma predeterminada en el 50% del tama&amp;ntilde;o del original m&amp;aacute;s peque&amp;ntilde;o y del resultado (es decir, si la edici&amp;oacute;n reduce el tama&amp;ntilde;o del archivo, se usa el tama&amp;ntilde;o del resultado; si la edici&amp;oacute;n alarga el archivo, se usa el tama&amp;ntilde;o del original ), y se puede personalizar dando un n&amp;uacute;mero despu&amp;eacute;s de la opci&amp;oacute;n &quot;-B&quot; (por ejemplo, &quot;-B75&quot; para indicarle que use 75%).</target>
        </trans-unit>
        <trans-unit id="62f1a958bc660b7d22544723f673271098befa81" translate="yes" xml:space="preserve">
          <source>For the purpose of merging broken filepairs back, it uses a different &quot;extent of changes&quot; computation from the ones used by diffcore-break and diffcore-rename. It counts only the deletion from the original, and does not count insertion. If you removed only 10 lines from a 100-line document, even if you added 910 new lines to make a new 1000-line document, you did not do a complete rewrite. diffcore-break breaks such a case in order to help diffcore-rename to consider such filepairs as candidate of rename/copy detection, but if filepairs broken that way were not matched with other filepairs to create rename/copy, then this transformation merges them back into the original &quot;modification&quot;.</source>
          <target state="translated">Con el fin de volver a fusionar los pares de archivos rotos,utiliza un cálculo de &quot;extensión de los cambios&quot; diferente de los utilizados por la ruptura de los difusores y el renombramiento de los difusores.Sólo cuenta la eliminación del original,y no cuenta la inserción.Si eliminó sólo 10 líneas de un documento de 100 líneas,incluso si añadió 910 líneas nuevas para hacer un nuevo documento de 1000 líneas,no hizo una reescritura completa.diffcore-break rompe este caso para ayudar a diffcore-rename a considerar estos pares de ficheros como candidatos a la detección de renombre/copia,pero si los pares de ficheros rotos de esta manera no se emparejaron con otros pares de ficheros para crear renombre/copia,entonces esta transformación los fusiona de nuevo en la &quot;modificación&quot; original.</target>
        </trans-unit>
        <trans-unit id="6ab2225889ebaecccd59bff89db6e9b9331d68f2" translate="yes" xml:space="preserve">
          <source>For the sake of clarity, let&amp;rsquo;s stay with &lt;code&gt;git cat-file&lt;/code&gt;, because it</source>
          <target state="translated">En aras de la claridad, sigamos con &lt;code&gt;git cat-file&lt;/code&gt; , porque</target>
        </trans-unit>
        <trans-unit id="3256aa918e5b4c1710b691c8cd23b5d5181ec72c" translate="yes" xml:space="preserve">
          <source>For the sake of simplicity and interoperating with Subversion, it is recommended that all &lt;code&gt;git svn&lt;/code&gt; users clone, fetch and dcommit directly from the SVN server, and avoid all &lt;code&gt;git clone&lt;/code&gt;/&lt;code&gt;pull&lt;/code&gt;/&lt;code&gt;merge&lt;/code&gt;/&lt;code&gt;push&lt;/code&gt; operations between Git repositories and branches. The recommended method of exchanging code between Git branches and users is &lt;code&gt;git format-patch&lt;/code&gt; and &lt;code&gt;git am&lt;/code&gt;, or just 'dcommit&amp;rsquo;ing to the SVN repository.</source>
          <target state="translated">En aras de la simplicidad y la interoperaci&amp;oacute;n con Subversion, se recomienda que todos los usuarios de &lt;code&gt;git svn&lt;/code&gt; clonen, obtengan y dcommit directamente desde el servidor SVN, y eviten todas las operaciones de &lt;code&gt;git clone&lt;/code&gt; / &lt;code&gt;pull&lt;/code&gt; / &lt;code&gt;merge&lt;/code&gt; / &lt;code&gt;push&lt;/code&gt; git entre repositorios y ramas de Git. El m&amp;eacute;todo recomendado para intercambiar c&amp;oacute;digo entre las ramas de Git y los usuarios es &lt;code&gt;git format-patch&lt;/code&gt; y &lt;code&gt;git am&lt;/code&gt; , o simplemente 'dcommit' al repositorio SVN.</target>
        </trans-unit>
        <trans-unit id="2279b6e7f152e69847961316b26521ce7eeaaca8" translate="yes" xml:space="preserve">
          <source>For these commands, specifying a single revision, using the notation described in the previous section, means the set of commits &lt;code&gt;reachable&lt;/code&gt; from the given commit.</source>
          <target state="translated">Para estos comandos, especificar una &amp;uacute;nica revisi&amp;oacute;n, usando la notaci&amp;oacute;n descrita en la secci&amp;oacute;n anterior, significa el conjunto de confirmaciones &lt;code&gt;reachable&lt;/code&gt; desde la confirmaci&amp;oacute;n dada.</target>
        </trans-unit>
        <trans-unit id="bd23aa2eb5a5735171ddacb742b9284ac1e13d5d" translate="yes" xml:space="preserve">
          <source>For this example, suppose &lt;code&gt;I&lt;/code&gt; created &lt;code&gt;file.txt&lt;/code&gt; which was modified by &lt;code&gt;A&lt;/code&gt;, &lt;code&gt;B&lt;/code&gt;, and &lt;code&gt;X&lt;/code&gt; in different ways. The single-parent commits &lt;code&gt;C&lt;/code&gt;, &lt;code&gt;Z&lt;/code&gt;, and &lt;code&gt;Y&lt;/code&gt; do not change &lt;code&gt;file.txt&lt;/code&gt;. The merge commit &lt;code&gt;M&lt;/code&gt; was created by resolving the merge conflict to include both changes from &lt;code&gt;A&lt;/code&gt; and &lt;code&gt;B&lt;/code&gt; and hence is not TREESAME to either. The merge commit &lt;code&gt;R&lt;/code&gt;, however, was created by ignoring the contents of &lt;code&gt;file.txt&lt;/code&gt; at &lt;code&gt;M&lt;/code&gt; and taking only the contents of &lt;code&gt;file.txt&lt;/code&gt; at &lt;code&gt;X&lt;/code&gt;. Hence, &lt;code&gt;R&lt;/code&gt; is TREESAME to &lt;code&gt;X&lt;/code&gt; but not &lt;code&gt;M&lt;/code&gt;. Finally, the natural merge resolution to create &lt;code&gt;N&lt;/code&gt; is to take the contents of &lt;code&gt;file.txt&lt;/code&gt; at &lt;code&gt;R&lt;/code&gt;, so &lt;code&gt;N&lt;/code&gt; is TREESAME to &lt;code&gt;R&lt;/code&gt; but not &lt;code&gt;C&lt;/code&gt;. The merge commits &lt;code&gt;O&lt;/code&gt; and &lt;code&gt;P&lt;/code&gt; are TREESAME to their first parents, but not to their second parents, &lt;code&gt;Z&lt;/code&gt; and &lt;code&gt;Y&lt;/code&gt; respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74da4e1940c3e7e40b0478bfdb6a84a981ccd45c" translate="yes" xml:space="preserve">
          <source>For this reason it is strongly recommended that users repack the repository with &lt;code&gt;git repack -a -d&lt;/code&gt; after fast-import completes, allowing Git to reorganize the packfiles for faster data access. If blob deltas are suboptimal (see above) then also adding the &lt;code&gt;-f&lt;/code&gt; option to force recomputation of all deltas can significantly reduce the final packfile size (30-50% smaller can be quite typical).</source>
          <target state="translated">Por esta raz&amp;oacute;n, se recomienda encarecidamente que los usuarios vuelvan a empaquetar el repositorio con &lt;code&gt;git repack -a -d&lt;/code&gt; despu&amp;eacute;s de que se complete la importaci&amp;oacute;n r&amp;aacute;pida, lo que permite a Git reorganizar los archivos de paquetes para un acceso m&amp;aacute;s r&amp;aacute;pido a los datos. Si los deltas de blob son sub&amp;oacute;ptimos (ver arriba), agregar la opci&amp;oacute;n &lt;code&gt;-f&lt;/code&gt; para forzar el rec&amp;aacute;lculo de todos los deltas puede reducir significativamente el tama&amp;ntilde;o del archivo de paquete final (30-50% m&amp;aacute;s peque&amp;ntilde;o puede ser bastante t&amp;iacute;pico).</target>
        </trans-unit>
        <trans-unit id="0c101be68a53a28136d34207f208a2b09cd96fd2" translate="yes" xml:space="preserve">
          <source>For transports that SVN handles authentication for (http, https, and plain svn), specify the username. For other transports (e.g. &lt;code&gt;svn+ssh://&lt;/code&gt;), you must include the username in the URL, e.g. &lt;code&gt;svn+ssh://foo@svn.bar.com/project&lt;/code&gt;</source>
          <target state="translated">Para los transportes para los que SVN maneja la autenticaci&amp;oacute;n (http, https y svn simple), especifique el nombre de usuario. Para otros transportes (por ejemplo, &lt;code&gt;svn+ssh://&lt;/code&gt; ), debe incluir el nombre de usuario en la URL, por ejemplo, &lt;code&gt;svn+ssh://foo@svn.bar.com/project&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="884bf4d941685ae2ac82a222d5a5cd34350cf6bb" translate="yes" xml:space="preserve">
          <source>For trees, it shows the names (equivalent to &lt;code&gt;git ls-tree&lt;/code&gt; with --name-only).</source>
          <target state="translated">Para los &amp;aacute;rboles, muestra los nombres (equivalente a &lt;code&gt;git ls-tree&lt;/code&gt; con --name-only).</target>
        </trans-unit>
        <trans-unit id="add825378fcd5c043a391a94c20d1353e2f3f4d7" translate="yes" xml:space="preserve">
          <source>For true distributed development that supports proper merging, published branches should never be rewritten.</source>
          <target state="translated">Para un verdadero desarrollo distribuido que apoye la fusión adecuada,las ramas publicadas nunca deben ser reescritas.</target>
        </trans-unit>
        <trans-unit id="3d68fc99046b8e48302665b1b866f7694067fd6a" translate="yes" xml:space="preserve">
          <source>For use with --textconv or --filters, to allow specifying an object name and a path separately, e.g. when it is difficult to figure out the revision from which the blob came.</source>
          <target state="translated">Para su uso con los filtros --textconv o --filtros,para permitir la especificación de un nombre de objeto y una ruta por separado,por ejemplo cuando es difícil averiguar la revisión de la que procede la mancha.</target>
        </trans-unit>
        <trans-unit id="e72ffb4fac055436e16518cc2f4fb21127e4cb40" translate="yes" xml:space="preserve">
          <source>For writing options: write to global &lt;code&gt;~/.gitconfig&lt;/code&gt; file rather than the repository &lt;code&gt;.git/config&lt;/code&gt;, write to &lt;code&gt;$XDG_CONFIG_HOME/git/config&lt;/code&gt; file if this file exists and the &lt;code&gt;~/.gitconfig&lt;/code&gt; file doesn&amp;rsquo;t.</source>
          <target state="translated">Para las opciones de escritura: escriba en el archivo global &lt;code&gt;~/.gitconfig&lt;/code&gt; en lugar del repositorio &lt;code&gt;.git/config&lt;/code&gt; , escriba en el &lt;code&gt;$XDG_CONFIG_HOME/git/config&lt;/code&gt; si este archivo existe y el archivo &lt;code&gt;~/.gitconfig&lt;/code&gt; no.</target>
        </trans-unit>
        <trans-unit id="1d4f90bdceeed64344a78d1a30eb973c4a695eed" translate="yes" xml:space="preserve">
          <source>For writing options: write to system-wide &lt;code&gt;$(prefix)/etc/gitconfig&lt;/code&gt; rather than the repository &lt;code&gt;.git/config&lt;/code&gt;.</source>
          <target state="translated">Para opciones de escritura: escriba en &lt;code&gt;$(prefix)/etc/gitconfig&lt;/code&gt; todo el sistema en lugar del repositorio &lt;code&gt;.git/config&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ab6a40ba6d951665186720914cfcdda1831523bb" translate="yes" xml:space="preserve">
          <source>For writing options: write to the repository &lt;code&gt;.git/config&lt;/code&gt; file. This is the default behavior.</source>
          <target state="translated">Para opciones de escritura: escriba en el archivo &lt;code&gt;.git/config&lt;/code&gt; del repositorio . Este es el comportamiento predeterminado.</target>
        </trans-unit>
        <trans-unit id="1b61f0964f0c12ab159b1b9cbdaad36acf5d4cd8" translate="yes" xml:space="preserve">
          <source>Force &lt;code&gt;git gc&lt;/code&gt; to run even if there may be another &lt;code&gt;git gc&lt;/code&gt; instance running on this repository.</source>
          <target state="translated">Forzar la ejecuci&amp;oacute;n de &lt;code&gt;git gc&lt;/code&gt; incluso si puede haber otra instancia de &lt;code&gt;git gc&lt;/code&gt; ejecut&amp;aacute;ndose en este repositorio.</target>
        </trans-unit>
        <trans-unit id="2041f78f7b4213165ad0484df1b0863ad820d047" translate="yes" xml:space="preserve">
          <source>Force renaming or moving of a file even if the target exists</source>
          <target state="translated">Forzar el cambio de nombre o el desplazamiento de un archivo incluso si el objetivo existe</target>
        </trans-unit>
        <trans-unit id="ecd78b0e67ad331a13ae4cb8f4e6a9ed04fc189e" translate="yes" xml:space="preserve">
          <source>Force the cloning process from a repository on a local filesystem to copy the files under the &lt;code&gt;.git/objects&lt;/code&gt; directory instead of using hardlinks. This may be desirable if you are trying to make a back-up of your repository.</source>
          <target state="translated">Forzar el proceso de clonaci&amp;oacute;n desde un repositorio en un sistema de archivos local para copiar los archivos en el directorio &lt;code&gt;.git/objects&lt;/code&gt; en lugar de usar enlaces f&amp;iacute;sicos. Esto puede ser conveniente si est&amp;aacute; intentando hacer una copia de seguridad de su repositorio.</target>
        </trans-unit>
        <trans-unit id="5aad6db9c36a2f2837e6ea58135f2a7c135ffcc5" translate="yes" xml:space="preserve">
          <source>Force the merge even if the files are not up to date.</source>
          <target state="translated">Forzar la fusión aunque los archivos no estén actualizados.</target>
        </trans-unit>
        <trans-unit id="b35554b966d1f9e773a7eeb185af7c152ef043be" translate="yes" xml:space="preserve">
          <source>Force the parent commit, even if it is not a direct parent.</source>
          <target state="translated">Forzar al padre a comprometerse,aunque no sea un padre directo.</target>
        </trans-unit>
        <trans-unit id="8fd0762700f6c31dd37961618e48e9600a28f63f" translate="yes" xml:space="preserve">
          <source>Force updating modified existing branches, even if doing so would cause commits to be lost (as the new commit does not contain the old commit).</source>
          <target state="translated">La actualización de la fuerza modificó las ramas existentes,incluso si al hacerlo se perdieron las confirmaciones (ya que la nueva confirmación no contiene la antigua).</target>
        </trans-unit>
        <trans-unit id="3c16110b137eeeb074b6bb1a45d5cee67e8b8d7d" translate="yes" xml:space="preserve">
          <source>Forces fast-import to close the current packfile, generate its unique SHA-1 checksum and index, and start a new packfile. This command is optional and is not needed to perform an import.</source>
          <target state="translated">Obliga a la importación rápida a cerrar el archivo actual,generar su suma de comprobación e índice SHA-1 único,y comenzar un nuevo archivo de paquete.Este comando es opcional y no es necesario para realizar una importación.</target>
        </trans-unit>
        <trans-unit id="1a687c2c8da515bb3889e24f9c0c80b813b24084" translate="yes" xml:space="preserve">
          <source>Forces fast-import to close the current packfile, start a new one, and to save out all current branch refs, tags and marks.</source>
          <target state="translated">Obliga a la importación rápida a cerrar el archivo actual,a iniciar uno nuevo,y a guardar todos los réferis,etiquetas y marcas de la rama actual.</target>
        </trans-unit>
        <trans-unit id="434a9daac438458d6a5542866bf4627ab056ebc0" translate="yes" xml:space="preserve">
          <source>Forcing git fetch to do non-fast-forward updates</source>
          <target state="translated">Obligar a git fetch a hacer actualizaciones no rápidas</target>
        </trans-unit>
        <trans-unit id="07c2be944c0e6602c04932a6e3d9ec7d07d27d65" translate="yes" xml:space="preserve">
          <source>Forget about the current merge in progress. Leave the index and the working tree as-is.</source>
          <target state="translated">Olvídese de la fusión actual en curso.Deje el índice y el árbol de trabajo tal como está.</target>
        </trans-unit>
        <trans-unit id="b7fac01fb2068412feecd8f7081be42b5f011f68" translate="yes" xml:space="preserve">
          <source>Forget about the current merge in progress. Leave the index and the working tree as-is. If &lt;code&gt;MERGE_AUTOSTASH&lt;/code&gt; is present, the stash entry will be saved to the stash list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81bdf759eac78632844fbde02bcf81c1762add7d" translate="yes" xml:space="preserve">
          <source>Forget about the current operation in progress. Can be used to clear the sequencer state after a failed cherry-pick or revert.</source>
          <target state="translated">Olvídese de la operación en curso.Se puede usar para borrar el estado del secuenciador después de un fallo en la selección de cerezas o en la reversión.</target>
        </trans-unit>
        <trans-unit id="bc2093ee15e651049bc58aa54bb94be570859e07" translate="yes" xml:space="preserve">
          <source>Format data by columns:</source>
          <target state="translated">Formatea los datos por columnas:</target>
        </trans-unit>
        <trans-unit id="74cf0d3233deb63a1885a09b7a59d2c4cacb7451" translate="yes" xml:space="preserve">
          <source>Format data by rows:</source>
          <target state="translated">Formatear los datos por filas:</target>
        </trans-unit>
        <trans-unit id="1490d94054ac9f1a7565287cb4c10caa7d0a3ff1" translate="yes" xml:space="preserve">
          <source>Format of the file(s) specified in sendemail.aliasesFile. Must be one of &lt;code&gt;mutt&lt;/code&gt;, &lt;code&gt;mailrc&lt;/code&gt;, &lt;code&gt;pine&lt;/code&gt;, &lt;code&gt;elm&lt;/code&gt;, or &lt;code&gt;gnus&lt;/code&gt;, or &lt;code&gt;sendmail&lt;/code&gt;.</source>
          <target state="translated">Formato de los archivos especificados en sendemail.aliasesFile. Debe ser &lt;code&gt;mutt&lt;/code&gt; , &lt;code&gt;mailrc&lt;/code&gt; , &lt;code&gt;pine&lt;/code&gt; , &lt;code&gt;elm&lt;/code&gt; , &lt;code&gt;gnus&lt;/code&gt; o &lt;code&gt;sendmail&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="85b75659b13a3c18419a2059ae24d18f7aec62d9" translate="yes" xml:space="preserve">
          <source>Format of the resulting archive: &lt;code&gt;tar&lt;/code&gt; or &lt;code&gt;zip&lt;/code&gt;. If this option is not given, and the output file is specified, the format is inferred from the filename if possible (e.g. writing to &quot;foo.zip&quot; makes the output to be in the zip format). Otherwise the output format is &lt;code&gt;tar&lt;/code&gt;.</source>
          <target state="translated">Formato del archivo resultante: &lt;code&gt;tar&lt;/code&gt; o &lt;code&gt;zip&lt;/code&gt; . Si no se da esta opci&amp;oacute;n, y se especifica el archivo de salida, el formato se infiere del nombre del archivo si es posible (por ejemplo, escribir en &quot;foo.zip&quot; hace que la salida est&amp;eacute; en formato zip). De lo contrario, el formato de salida es &lt;code&gt;tar&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2804d9f16a38553f8238529c90d66e7d7426c150" translate="yes" xml:space="preserve">
          <source>Formats</source>
          <target state="translated">Formats</target>
        </trans-unit>
        <trans-unit id="4bec9575721b2739ed1e7c56eb6c8471084fcbcf" translate="yes" xml:space="preserve">
          <source>Forms</source>
          <target state="translated">Forms</target>
        </trans-unit>
        <trans-unit id="97808e16f7b3e0748cf911affe6a2e5f5336bd69" translate="yes" xml:space="preserve">
          <source>Fortunately, Git also keeps a log, called a &quot;reflog&quot;, of all the previous values of each branch. So in this case you can still find the old history using, for example,</source>
          <target state="translated">Afortunadamente,Git también mantiene un registro,llamado &quot;reflog&quot;,de todos los valores anteriores de cada rama.Así que en este caso todavía puedes encontrar la historia antigua usando,por ejemplo,</target>
        </trans-unit>
        <trans-unit id="52aedb174e481572a146a6eee6e65f3145e19419" translate="yes" xml:space="preserve">
          <source>Fortunately, when you try and merge branches imported from Arch, Git will find a good merge base, and it has a good chance of identifying patches that have been traded out-of-sequence between the branches.</source>
          <target state="translated">Afortunadamente,cuando intente fusionar las ramas importadas de Arch,Git encontrará una buena base de fusión,y tiene una buena oportunidad de identificar los parches que se han intercambiado fuera de secuencia entre las ramas.</target>
        </trans-unit>
        <trans-unit id="f243a4b31e069ad1af1905a7b7ee3c0a6bc4a9d9" translate="yes" xml:space="preserve">
          <source>Freely Skip Around Branches</source>
          <target state="translated">Saltar libremente alrededor de las ramas</target>
        </trans-unit>
        <trans-unit id="4f5fb89546fa56451bf07260d4420bcc62940bb0" translate="yes" xml:space="preserve">
          <source>Frequently Asked Questions (FAQ)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6954599bb4bd53fc74592c122080450ce5ed81db" translate="yes" xml:space="preserve">
          <source>Frequently asked questions about using Git</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc2451038a48527dcbeab53ccfe9fbac5f2cad0f" translate="yes" xml:space="preserve">
          <source>From a clean working directory:</source>
          <target state="translated">De un directorio de trabajo limpio:</target>
        </trans-unit>
        <trans-unit id="e5d597f5b08d8d486fa4fe348997e77a44c54af8" translate="yes" xml:space="preserve">
          <source>From a remote repository:</source>
          <target state="translated">Desde un repositorio remoto:</target>
        </trans-unit>
        <trans-unit id="288bfe5db4a5e76e3e6479e8536caa4995b7e02e" translate="yes" xml:space="preserve">
          <source>From a tarball:</source>
          <target state="translated">De una bola de alquitrán:</target>
        </trans-unit>
        <trans-unit id="734c2e78c0e94a1be8f8ce3bed6beeb7e74b3905" translate="yes" xml:space="preserve">
          <source>From the Git 1.5.4 series and further, many Git commands (not all of them at the time of the writing though) come with an enhanced option parser.</source>
          <target state="translated">De la serie Git 1.5.4 y posteriores,muchos comandos de Git (aunque no todos en el momento de su redacción)vienen con un analizador de opciones mejorado.</target>
        </trans-unit>
        <trans-unit id="a7a0e1c60991430a8700058d7dbaaa429f71c02b" translate="yes" xml:space="preserve">
          <source>From this point, the result of either of the following commands:</source>
          <target state="translated">A partir de este punto,el resultado de cualquiera de los siguientes comandos:</target>
        </trans-unit>
        <trans-unit id="3e41340cee5d477151048da29744ee1316a7f6cb" translate="yes" xml:space="preserve">
          <source>Frontends may choose to issue checkpoints during extremely large and long running imports, or when they need to allow another Git process access to a branch. However given that a 30 GiB Subversion repository can be loaded into Git through fast-import in about 3 hours, explicit checkpointing may not be necessary.</source>
          <target state="translated">Los agentes de fronteras pueden optar por emitir puestos de control durante importaciones extremadamente grandes y de larga duración,o cuando necesitan permitir a otro proceso de Git el acceso a una sucursal.Sin embargo,dado que un repositorio de 30 GiB Subversion puede ser cargado en Git a través de una importación rápida en unas 3 horas,puede que no sea necesario un control explícito.</target>
        </trans-unit>
        <trans-unit id="45f585d5b13263a74e89d30321fceb20439bc1e7" translate="yes" xml:space="preserve">
          <source>Frontends should prefer the &lt;code&gt;raw&lt;/code&gt; format if the source material already uses UNIX-epoch format, can be coaxed to give dates in that format, or its format is easily convertible to it, as there is no ambiguity in parsing.</source>
          <target state="translated">Los frontends deber&amp;iacute;an preferir el formato sin &lt;code&gt;raw&lt;/code&gt; si el material de origen ya usa el formato UNIX-epoch, se puede persuadir para que proporcione fechas en ese formato, o si su formato es f&amp;aacute;cilmente convertible, ya que no hay ambig&amp;uuml;edad en el an&amp;aacute;lisis.</target>
        </trans-unit>
        <trans-unit id="f3cc2873d5f4e3e8be387b77133d15ba005de66f" translate="yes" xml:space="preserve">
          <source>Frontends which have efficient access to all revisions of a single file (for example reading an RCS/CVS ,v file) can choose to supply all revisions of that file as a sequence of consecutive &lt;code&gt;blob&lt;/code&gt; commands. This allows fast-import to deltify the different file revisions against each other, saving space in the final packfile. Marks can be used to later identify individual file revisions during a sequence of &lt;code&gt;commit&lt;/code&gt; commands.</source>
          <target state="translated">Los frontend que tienen acceso eficiente a todas las revisiones de un solo archivo (por ejemplo, leer un archivo RCS / CVS, v) pueden optar por suministrar todas las revisiones de ese archivo como una secuencia de comandos &lt;code&gt;blob&lt;/code&gt; consecutivos . Esto permite que la importaci&amp;oacute;n r&amp;aacute;pida deltifique las diferentes revisiones de archivos entre s&amp;iacute;, ahorrando espacio en el archivo de paquete final. Las marcas se pueden utilizar para identificar posteriormente revisiones de archivos individuales durante una secuencia de comandos de &lt;code&gt;commit&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3519d227e718b16c5b769aae01680cf2cd77dc46" translate="yes" xml:space="preserve">
          <source>Full URL and absolute URL of the gitweb script; in earlier versions of gitweb you might have need to set those variables, but now there should be no need to do it. See &lt;code&gt;$per_request_config&lt;/code&gt; if you need to set them still.</source>
          <target state="translated">URL completa y URL absoluta del script gitweb; en versiones anteriores de gitweb, es posible que deba configurar esas variables, pero ahora no deber&amp;iacute;a ser necesario hacerlo. Vea &lt;code&gt;$per_request_config&lt;/code&gt; si necesita configurarlos todav&amp;iacute;a.</target>
        </trans-unit>
        <trans-unit id="a108e2708a06a554ba0c3dc09504268225bd27f7" translate="yes" xml:space="preserve">
          <source>Full pattern set</source>
          <target state="translated">Conjunto completo de patrones</target>
        </trans-unit>
        <trans-unit id="b8fec8cb8e4460222f34da65fd7e0d2a0f5118ab" translate="yes" xml:space="preserve">
          <source>Function used to determine which repositories should be shown. This subroutine should take one parameter, the full path to a project, and if it returns true, that project will be included in the projects list and can be accessed through gitweb as long as it fulfills the other requirements described by $export_ok, $projects_list, and $projects_maxdepth. Example:</source>
          <target state="translated">Función utilizada para determinar qué depósitos deben mostrarse.Esta subrutina debe tomar un parámetro,la ruta completa de un proyecto,y si devuelve true,ese proyecto será incluido en la lista de proyectos y se podrá acceder a él a través de gitweb siempre y cuando cumpla los demás requisitos descritos por $export_ok,$projects_list,y $projects_maxdepth.Ejemplo:</target>
        </trans-unit>
        <trans-unit id="2b961dea1dc0c60ddf9a2c8e9d090f6f7d082483" translate="yes" xml:space="preserve">
          <source>Functions</source>
          <target state="translated">Functions</target>
        </trans-unit>
        <trans-unit id="953f869510869f147aa66935f6f2e4c1b01346f2" translate="yes" xml:space="preserve">
          <source>Fundamental data structures and utilities of Git. Exposes only limited source code management tools.</source>
          <target state="translated">Estructuras de datos fundamentales y utilidades de Git.Expone sólo herramientas limitadas de gestión de código fuente.</target>
        </trans-unit>
        <trans-unit id="2a68bfcdf45f0d6508d348a650a90dad4898fc87" translate="yes" xml:space="preserve">
          <source>Further chapters cover more specialized topics.</source>
          <target state="translated">En otros capítulos se tratan temas más especializados.</target>
        </trans-unit>
        <trans-unit id="bc4614e5e44f10e9735555c384229ac13d88fcbe" translate="yes" xml:space="preserve">
          <source>Further documentation</source>
          <target state="translated">Más documentación</target>
        </trans-unit>
        <trans-unit id="1a67b11bbb73911c0ea7f808bf383dac0f90b1d2" translate="yes" xml:space="preserve">
          <source>Further suppose that the other person already pushed changes leading to A back to the original repository from which you two obtained the original commit X.</source>
          <target state="translated">Supongamos además que la otra persona ya empujó los cambios que conducen a A de vuelta al repositorio original del que ustedes dos obtuvieron la confirmación X original.</target>
        </trans-unit>
        <trans-unit id="11dea5e071893c59426ef6a8d5f500708e7c087c" translate="yes" xml:space="preserve">
          <source>Further, remember how I said that &lt;code&gt;git write-tree&lt;/code&gt; writes the contents of the &lt;strong&gt;index&lt;/strong&gt; file to the tree, and thus what we just committed was in fact the &lt;strong&gt;original&lt;/strong&gt; contents of the file &lt;code&gt;hello&lt;/code&gt;, not the new ones. We did that on purpose, to show the difference between the index state, and the state in the working tree, and how they don&amp;rsquo;t have to match, even when we commit things.</source>
          <target state="translated">Adem&amp;aacute;s, recuerde c&amp;oacute;mo dije que &lt;code&gt;git write-tree&lt;/code&gt; escribe el contenido del archivo de &lt;strong&gt;&amp;iacute;ndice&lt;/strong&gt; en el &amp;aacute;rbol y, por lo tanto, lo que acabamos de confirmar fue de hecho el contenido &lt;strong&gt;original&lt;/strong&gt; del archivo &lt;code&gt;hello&lt;/code&gt; , no los nuevos. Lo hicimos a prop&amp;oacute;sito, para mostrar la diferencia entre el estado del &amp;iacute;ndice y el estado en el &amp;aacute;rbol de trabajo, y c&amp;oacute;mo no tienen que coincidir, incluso cuando cometemos cosas.</target>
        </trans-unit>
        <trans-unit id="12a1c3eb3c3466df160e63355f0a70980e5d8a54" translate="yes" xml:space="preserve">
          <source>Further, several additional files are created or updated per commit by git-filter-branch. Some of these are for supporting the convenience functions provided by git-filter-branch (such as map()), while others are for keeping track of internal state (but could have also been accessed by user filters; one of git-filter-branch&amp;rsquo;s regression tests does so). This essentially amounts to using the filesystem as an IPC mechanism between git-filter-branch and the user-provided filters. Disks tend to be a slow IPC mechanism, and writing these files also effectively represents a forced synchronization point between separate processes that we hit with every commit.</source>
          <target state="translated">Adem&amp;aacute;s, git-filter-branch crea o actualiza varios archivos adicionales por confirmaci&amp;oacute;n. Algunos de estos son para respaldar las funciones de conveniencia proporcionadas por git-filter-branch (como map ()), mientras que otros son para realizar un seguimiento del estado interno (pero tambi&amp;eacute;n podr&amp;iacute;an haber sido accedidos por filtros de usuario; uno de git-filter- las pruebas de regresi&amp;oacute;n de la rama lo hacen). B&amp;aacute;sicamente, esto equivale a usar el sistema de archivos como un mecanismo de IPC entre git-filter-branch y los filtros proporcionados por el usuario. Los discos tienden a ser un mecanismo de IPC lento, y escribir estos archivos tambi&amp;eacute;n representa efectivamente un punto de sincronizaci&amp;oacute;n forzada entre procesos separados que alcanzamos con cada confirmaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="48717135930571b8087beeed13bb405458558d68" translate="yes" xml:space="preserve">
          <source>Further, the above facts mean that there are multiple reasons that &quot;tracked&quot; files might not be present in the working copy: sparsity pattern application from sparse-checkout, and submodule initialization state. Thus, commands like &lt;code&gt;git grep&lt;/code&gt; that work on tracked files in the working copy may return results that are limited by either or both of these restrictions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ca2383accb8da62a165b73e8556d1713934adf2" translate="yes" xml:space="preserve">
          <source>Furthermore, &lt;code&gt;git read-tree&lt;/code&gt; has special-case logic that says: if you see a file that matches in all respects in the following states, it &quot;collapses&quot; back to &quot;stage0&quot;:</source>
          <target state="translated">Adem&amp;aacute;s, &lt;code&gt;git read-tree&lt;/code&gt; tiene una l&amp;oacute;gica de caso especial que dice: si ve un archivo que coincide en todos los aspectos en los siguientes estados, se &quot;colapsa&quot; de nuevo a &quot;stage0&quot;:</target>
        </trans-unit>
        <trans-unit id="31a08e0ad75da0260fa91bb8e152e897858a7305" translate="yes" xml:space="preserve">
          <source>Furthermore, passwords need not be specified in configuration files or on the command line. If a username has been specified (with &lt;code&gt;--smtp-user&lt;/code&gt; or a &lt;code&gt;sendemail.smtpUser&lt;/code&gt;), but no password has been specified (with &lt;code&gt;--smtp-pass&lt;/code&gt; or &lt;code&gt;sendemail.smtpPass&lt;/code&gt;), then a password is obtained using &lt;code&gt;git-credential&lt;/code&gt;.</source>
          <target state="translated">Adem&amp;aacute;s, no es necesario especificar las contrase&amp;ntilde;as en los archivos de configuraci&amp;oacute;n o en la l&amp;iacute;nea de comandos. Si se ha especificado un nombre de usuario (con &lt;code&gt;--smtp-user&lt;/code&gt; o &lt;code&gt;sendemail.smtpUser&lt;/code&gt; ), pero no se ha especificado una contrase&amp;ntilde;a (con &lt;code&gt;--smtp-pass&lt;/code&gt; o &lt;code&gt;sendemail.smtpPass&lt;/code&gt; ), entonces se obtiene una contrase&amp;ntilde;a usando &lt;code&gt;git-credential&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="eebdda6fedb5243cc4950de3133a043a2ebece61" translate="yes" xml:space="preserve">
          <source>Furthermore, supplying &lt;code&gt;--aggressive&lt;/code&gt; will tweak the &lt;code&gt;--depth&lt;/code&gt; and &lt;code&gt;--window&lt;/code&gt; options passed to &lt;a href=&quot;git-repack&quot;&gt;git-repack[1]&lt;/a&gt;. See the &lt;code&gt;gc.aggressiveDepth&lt;/code&gt; and &lt;code&gt;gc.aggressiveWindow&lt;/code&gt; settings below. By using a larger window size we&amp;rsquo;re more likely to find more optimal deltas.</source>
          <target state="translated">Adem&amp;aacute;s, suministrar &lt;code&gt;--aggressive&lt;/code&gt; ajustar&amp;aacute; las opciones &lt;code&gt;--depth&lt;/code&gt; y &lt;code&gt;--window&lt;/code&gt; pasadas a &lt;a href=&quot;git-repack&quot;&gt;git-repack [1]&lt;/a&gt; . Consulte la configuraci&amp;oacute;n de &lt;code&gt;gc.aggressiveDepth&lt;/code&gt; y &lt;code&gt;gc.aggressiveWindow&lt;/code&gt; a continuaci&amp;oacute;n. Al usar un tama&amp;ntilde;o de ventana m&amp;aacute;s grande, es m&amp;aacute;s probable que encontremos deltas m&amp;aacute;s &amp;oacute;ptimos.</target>
        </trans-unit>
        <trans-unit id="c04d9fd3f33708a82d676293fc52e5a70fbf49e1" translate="yes" xml:space="preserve">
          <source>Future work</source>
          <target state="translated">Futuro trabajo</target>
        </trans-unit>
        <trans-unit id="7fa52712e6497fe42aeefb82c610da75e312ec0f" translate="yes" xml:space="preserve">
          <source>GITWEB_CONFIG</source>
          <target state="translated">GITWEB_CONFIG</target>
        </trans-unit>
        <trans-unit id="9636fb1dbafa2b47af9b2233bf38584401d20651" translate="yes" xml:space="preserve">
          <source>GITWEB_CONFIG_COMMON</source>
          <target state="translated">GITWEB_CONFIG_COMMON</target>
        </trans-unit>
        <trans-unit id="f726c6360c3b65b3b136cb8ed08c06cd6bb3dc13" translate="yes" xml:space="preserve">
          <source>GITWEB_CONFIG_SYSTEM</source>
          <target state="translated">GITWEB_CONFIG_SYSTEM</target>
        </trans-unit>
        <trans-unit id="7280da4640f08695fca3fbf79b196a715d6c95d5" translate="yes" xml:space="preserve">
          <source>GIT_ALTERNATE_OBJECT_DIRECTORIES</source>
          <target state="translated">GIT_ALTERNATE_OBJECT_DIRECTORIES</target>
        </trans-unit>
        <trans-unit id="964a2aa0953b5ffb1cfcd8b66bb3d22332570f05" translate="yes" xml:space="preserve">
          <source>GIT_AUTHOR_IDENT</source>
          <target state="translated">GIT_AUTHOR_IDENT</target>
        </trans-unit>
        <trans-unit id="725c6b7276951cf72d0731356407b6a84b3e59ef" translate="yes" xml:space="preserve">
          <source>GIT_COMMITTER_IDENT</source>
          <target state="translated">GIT_COMMITTER_IDENT</target>
        </trans-unit>
        <trans-unit id="3869ed3f7a51f55040f7a430ffe9ba97f98e246e" translate="yes" xml:space="preserve">
          <source>GIT_CONFIG</source>
          <target state="translated">GIT_CONFIG</target>
        </trans-unit>
        <trans-unit id="a5d490c74fb40af786be750b380476b10d1e4b69" translate="yes" xml:space="preserve">
          <source>GIT_CONFIG_NOSYSTEM</source>
          <target state="translated">GIT_CONFIG_NOSYSTEM</target>
        </trans-unit>
        <trans-unit id="01c412ca4d08642575a66ac381c4483c043b0ee1" translate="yes" xml:space="preserve">
          <source>GIT_CVSSERVER_BASE_PATH takes the place of the argument to --base-path.</source>
          <target state="translated">GIT_CVSSERVER_BASE_PATH toma el lugar del argumento a --base-path.</target>
        </trans-unit>
        <trans-unit id="4f0780cd85f15ce5f825b343d1c06abf4cfc9741" translate="yes" xml:space="preserve">
          <source>GIT_CVSSERVER_ROOT specifies a single-directory whitelist. The repository must still be configured to allow access through git-cvsserver, as described above.</source>
          <target state="translated">GIT_CVSSERVER_ROOT especifica una lista blanca de un solo directorio.El repositorio debe ser configurado para permitir el acceso a través de git-cvsserver,como se ha descrito anteriormente.</target>
        </trans-unit>
        <trans-unit id="4ad19a85aef9ab4dcb6f62d95b8acf07e4c4828f" translate="yes" xml:space="preserve">
          <source>GIT_EDITOR</source>
          <target state="translated">GIT_EDITOR</target>
        </trans-unit>
        <trans-unit id="c8b3461d27dba4e8c6ce0c25c772c18d60c891a3" translate="yes" xml:space="preserve">
          <source>GIT_EXT_SERVICE</source>
          <target state="translated">GIT_EXT_SERVICE</target>
        </trans-unit>
        <trans-unit id="f4a08871056eea1076c323923e7cd2cd5fd6c0a8" translate="yes" xml:space="preserve">
          <source>GIT_EXT_SERVICE_NOPREFIX</source>
          <target state="translated">GIT_EXT_SERVICE_NOPREFIX</target>
        </trans-unit>
        <trans-unit id="08b684f4da6721d3a2c8e7b518324c7c98994b4e" translate="yes" xml:space="preserve">
          <source>GIT_INDEX_FILE</source>
          <target state="translated">GIT_INDEX_FILE</target>
        </trans-unit>
        <trans-unit id="cf57e9b3a04f2696e64705102232bab489ed97a5" translate="yes" xml:space="preserve">
          <source>GIT_OBJECT_DIRECTORY</source>
          <target state="translated">GIT_OBJECT_DIRECTORY</target>
        </trans-unit>
        <trans-unit id="924d60649d04fe751450b8bd3f1fc4a48bf559cb" translate="yes" xml:space="preserve">
          <source>GIT_PAGER</source>
          <target state="translated">GIT_PAGER</target>
        </trans-unit>
        <trans-unit id="ef2d6ed7bd1e2bfa87dc927172ada3fd1bdae6d2" translate="yes" xml:space="preserve">
          <source>GIT_TRANSLOOP_DEBUG</source>
          <target state="translated">GIT_TRANSLOOP_DEBUG</target>
        </trans-unit>
        <trans-unit id="a16f454460c35cd8704027fca6876a6a8646b0f2" translate="yes" xml:space="preserve">
          <source>GMail</source>
          <target state="translated">GMail</target>
        </trans-unit>
        <trans-unit id="cda466cee33ea6d923c0d1a6805da6ace37ac3f0" translate="yes" xml:space="preserve">
          <source>GMail does not have any way to turn off line wrapping in the web interface, so it will mangle any emails that you send. You can however use &quot;git send-email&quot; and send your patches through the GMail SMTP server, or use any IMAP email client to connect to the google IMAP server and forward the emails through that.</source>
          <target state="translated">GMail no tiene ninguna manera de desactivar el envoltorio de la línea en la interfaz web,así que manipulará cualquier correo electrónico que envíes.Sin embargo,puedes usar &quot;git send-email&quot; y enviar tus parches a través del servidor SMTP de GMail,o usar cualquier cliente de correo IMAP para conectarte al servidor IMAP de Google y reenviar los correos a través de él.</target>
        </trans-unit>
        <trans-unit id="31f314da9a863256952d9852bb7b935e9c829e75" translate="yes" xml:space="preserve">
          <source>GPG sign pushes.</source>
          <target state="translated">El signo de GPG empuja.</target>
        </trans-unit>
        <trans-unit id="d2cc3c3070810078ed6b670e4bd5c8639504233f" translate="yes" xml:space="preserve">
          <source>GPG-sign commits. The &lt;code&gt;keyid&lt;/code&gt; argument is optional and defaults to the committer identity; if specified, it must be stuck to the option without a space.</source>
          <target state="translated">GPG-sign confirma. El argumento &lt;code&gt;keyid&lt;/code&gt; es opcional y por defecto es la identidad del confirmador; si se especifica, debe pegarse a la opci&amp;oacute;n sin un espacio.</target>
        </trans-unit>
        <trans-unit id="b1aed1c7977c0e2de26949b45fd71f731a4b1c8b" translate="yes" xml:space="preserve">
          <source>GPG-sign commits. The &lt;code&gt;keyid&lt;/code&gt; argument is optional and defaults to the committer identity; if specified, it must be stuck to the option without a space. &lt;code&gt;--no-gpg-sign&lt;/code&gt; is useful to countermand a &lt;code&gt;--gpg-sign&lt;/code&gt; option given earlier on the command line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="064f918c2672d1e438a7a65cbdf8c083e0ff21e6" translate="yes" xml:space="preserve">
          <source>GPG-sign commits. The &lt;code&gt;keyid&lt;/code&gt; argument is optional and defaults to the committer identity; if specified, it must be stuck to the option without a space. &lt;code&gt;--no-gpg-sign&lt;/code&gt; is useful to countermand both &lt;code&gt;commit.gpgSign&lt;/code&gt; configuration variable, and earlier &lt;code&gt;--gpg-sign&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="280cb8af503fd81af0776da1e5da5b505a515ac5" translate="yes" xml:space="preserve">
          <source>GPG-sign the push request to update refs on the receiving side, to allow it to be checked by the hooks and/or be logged. If &lt;code&gt;false&lt;/code&gt; or &lt;code&gt;--no-signed&lt;/code&gt;, no signing will be attempted. If &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;--signed&lt;/code&gt;, the push will fail if the server does not support signed pushes. If set to &lt;code&gt;if-asked&lt;/code&gt;, sign if and only if the server supports signed pushes. The push will also fail if the actual call to &lt;code&gt;gpg --sign&lt;/code&gt; fails. See &lt;a href=&quot;git-receive-pack&quot;&gt;git-receive-pack[1]&lt;/a&gt; for the details on the receiving end.</source>
          <target state="translated">GPG: firme la solicitud de inserci&amp;oacute;n para actualizar las referencias en el lado receptor, para permitir que los ganchos la verifiquen y / o se registre. Si es &lt;code&gt;false&lt;/code&gt; o &lt;code&gt;--no-signed&lt;/code&gt; , no se intentar&amp;aacute; firmar. Si es &lt;code&gt;true&lt;/code&gt; o &lt;code&gt;--signed&lt;/code&gt; , la inserci&amp;oacute;n fallar&amp;aacute; si el servidor no admite las inserciones firmadas. Si se establece en &lt;code&gt;if-asked&lt;/code&gt; , firme si y solo si el servidor admite env&amp;iacute;os firmados. La inserci&amp;oacute;n tambi&amp;eacute;n fallar&amp;aacute; si falla la llamada real a &lt;code&gt;gpg --sign&lt;/code&gt; . Consulte &lt;a href=&quot;git-receive-pack&quot;&gt;git-receive-pack [1]&lt;/a&gt; para obtener detalles sobre el extremo receptor.</target>
        </trans-unit>
        <trans-unit id="359179ddafe5ac57f233ce54be02401d37d2bd8b" translate="yes" xml:space="preserve">
          <source>GPG-sign the resulting merge commit. The &lt;code&gt;keyid&lt;/code&gt; argument is optional and defaults to the committer identity; if specified, it must be stuck to the option without a space.</source>
          <target state="translated">GPG-firma la confirmaci&amp;oacute;n de fusi&amp;oacute;n resultante. El argumento &lt;code&gt;keyid&lt;/code&gt; es opcional y por defecto es la identidad del confirmador; si se especifica, debe pegarse a la opci&amp;oacute;n sin un espacio.</target>
        </trans-unit>
        <trans-unit id="701d2f8958de65d8fe7b7eb1b839a88b4e25736c" translate="yes" xml:space="preserve">
          <source>GPG-sign the resulting merge commit. The &lt;code&gt;keyid&lt;/code&gt; argument is optional and defaults to the committer identity; if specified, it must be stuck to the option without a space. &lt;code&gt;--no-gpg-sign&lt;/code&gt; is useful to countermand both &lt;code&gt;commit.gpgSign&lt;/code&gt; configuration variable, and earlier &lt;code&gt;--gpg-sign&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="524cceb20916aff43a2680247362fb603a1a49c8" translate="yes" xml:space="preserve">
          <source>Garbage collect all unreferenced objects with &lt;code&gt;git gc --prune=now&lt;/code&gt; (or if your git-gc is not new enough to support arguments to &lt;code&gt;--prune&lt;/code&gt;, use &lt;code&gt;git repack -ad; git prune&lt;/code&gt; instead).</source>
          <target state="translated">Recolecte todos los objetos sin referencia con &lt;code&gt;git gc --prune=now&lt;/code&gt; (o si su git-gc no es lo suficientemente nuevo como para admitir argumentos para &lt;code&gt;--prune&lt;/code&gt; , use &lt;code&gt;git repack -ad; git prune&lt;/code&gt; lugar).</target>
        </trans-unit>
        <trans-unit id="5bcb5f8aaf1a9e559046fd7b5b3d79bbe4d3f426" translate="yes" xml:space="preserve">
          <source>General options</source>
          <target state="translated">Opciones generales</target>
        </trans-unit>
        <trans-unit id="a5879c5c764017ca2130842dc888dcc88c04c99e" translate="yes" xml:space="preserve">
          <source>General variables</source>
          <target state="translated">Variables generales</target>
        </trans-unit>
        <trans-unit id="55fd2438a0c551b4e16240eed52ec4917c61134a" translate="yes" xml:space="preserve">
          <source>Generally speaking, rule (3) above is the simplest for users to specify. Authors of credential helpers should make an effort to assist their users by naming their program &quot;git-credential-$NAME&quot;, and putting it in the &lt;code&gt;$PATH&lt;/code&gt; or &lt;code&gt;$GIT_EXEC_PATH&lt;/code&gt; during installation, which will allow a user to enable it with &lt;code&gt;git config credential.helper $NAME&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8e6a94549428bad778124c3c140042198abcb13" translate="yes" xml:space="preserve">
          <source>Generally this mode is used as an administrative interface to allow users to list repositories they have access to, create, delete, or rename repositories, or change repository descriptions and permissions.</source>
          <target state="translated">Por lo general,este modo se utiliza como interfaz administrativa para permitir a los usuarios enumerar los depósitos a los que tienen acceso,crear,eliminar o renombrar los depósitos,o cambiar las descripciones y los permisos de los depósitos.</target>
        </trans-unit>
        <trans-unit id="5338e8546078668a151a9dabd932d38a31f12f5b" translate="yes" xml:space="preserve">
          <source>Generally, &lt;code&gt;git p4 clone&lt;/code&gt; is used to create a new Git directory from an existing p4 repository:</source>
          <target state="translated">Generalmente, el &lt;code&gt;git p4 clone&lt;/code&gt; se usa para crear un nuevo directorio de Git a partir de un repositorio p4 existente:</target>
        </trans-unit>
        <trans-unit id="ad37ee86e2b3d890455e76bc1e7e0fc45d3460de" translate="yes" xml:space="preserve">
          <source>Generally, all Git operations work on the index file. Some operations work &lt;strong&gt;purely&lt;/strong&gt; on the index file (showing the current state of the index), but most operations move data between the index file and either the database or the working directory. Thus there are four main combinations:</source>
          <target state="translated">Generalmente, todas las operaciones de Git funcionan en el archivo de &amp;iacute;ndice. Algunas operaciones funcionan &lt;strong&gt;exclusivamente&lt;/strong&gt; en el archivo de &amp;iacute;ndice (que muestra el estado actual del &amp;iacute;ndice), pero la mayor&amp;iacute;a de las operaciones mueven datos entre el archivo de &amp;iacute;ndice y la base de datos o el directorio de trabajo. Por tanto, hay cuatro combinaciones principales:</target>
        </trans-unit>
        <trans-unit id="c30116e53a947e31daeae056572933416099fbe0" translate="yes" xml:space="preserve">
          <source>Generally, dangling objects aren&amp;rsquo;t anything to worry about. They can even be very useful: if you screw something up, the dangling objects can be how you recover your old tree (say, you did a rebase, and realized that you really didn&amp;rsquo;t want to&amp;mdash;​you can look at what dangling objects you have, and decide to reset your head to some old dangling state).</source>
          <target state="translated">Generalmente, los objetos colgantes no son motivo de preocupaci&amp;oacute;n. Incluso pueden ser muy &amp;uacute;tiles: si arruinas algo, los objetos colgantes pueden ser la forma en que recuperas tu viejo &amp;aacute;rbol (digamos, hiciste un rebase y te diste cuenta de que realmente no quer&amp;iacute;as hacerlo, puedes mirar lo que cuelga objetos que tiene, y decide restablecer su cabeza a un antiguo estado colgante).</target>
        </trans-unit>
        <trans-unit id="aefb0f39d3bd01ba3e438537ce5e3b6f3d075591" translate="yes" xml:space="preserve">
          <source>Generate a &lt;code&gt;$GIT_DIR/cvs-revisions&lt;/code&gt; file containing a mapping from CVS revision numbers to newly-created Git commit IDs. The generated file will contain one line for each (filename, revision) pair imported; each line will look like</source>
          <target state="translated">Genere un &lt;code&gt;$GIT_DIR/cvs-revisions&lt;/code&gt; que contenga un mapeo de los n&amp;uacute;meros de revisi&amp;oacute;n de CVS a las ID de confirmaci&amp;oacute;n de Git reci&amp;eacute;n creadas. El archivo generado contendr&amp;aacute; una l&amp;iacute;nea para cada par (nombre de archivo, revisi&amp;oacute;n) importado; cada l&amp;iacute;nea se ver&amp;aacute; como</target>
        </trans-unit>
        <trans-unit id="d956a0b3c8358372085439a04d4b2593dd2bec54" translate="yes" xml:space="preserve">
          <source>Generate a credential description based on the context.</source>
          <target state="translated">Generar una descripción de la credencial basada en el contexto.</target>
        </trans-unit>
        <trans-unit id="8b4e72c7495787832a335e23db7d41cdc955de4e" translate="yes" xml:space="preserve">
          <source>Generate a diff using the &quot;anchored diff&quot; algorithm.</source>
          <target state="translated">Generar un diff usando el algoritmo de &quot;diff anclado&quot;.</target>
        </trans-unit>
        <trans-unit id="c65b3bd43c187f9009fd8be60c354464048bfb2c" translate="yes" xml:space="preserve">
          <source>Generate a diff using the &quot;histogram diff&quot; algorithm.</source>
          <target state="translated">Generar un diff usando el algoritmo &quot;histograma diff&quot;.</target>
        </trans-unit>
        <trans-unit id="5a810f6cb04f85c060e73d8366053dc83cbde1b6" translate="yes" xml:space="preserve">
          <source>Generate a diff using the &quot;patience diff&quot; algorithm.</source>
          <target state="translated">Generar una diferencia usando el algoritmo &quot;diferencia de paciencia&quot;.</target>
        </trans-unit>
        <trans-unit id="f50a5c7af33db239a645bbb0a36b9c949e7a8bfe" translate="yes" xml:space="preserve">
          <source>Generate a diffstat. By default, as much space as necessary will be used for the filename part, and the rest for the graph part. Maximum width defaults to terminal width, or 80 columns if not connected to a terminal, and can be overridden by &lt;code&gt;&amp;lt;width&amp;gt;&lt;/code&gt;. The width of the filename part can be limited by giving another width &lt;code&gt;&amp;lt;name-width&amp;gt;&lt;/code&gt; after a comma. The width of the graph part can be limited by using &lt;code&gt;--stat-graph-width=&amp;lt;width&amp;gt;&lt;/code&gt; (affects all commands generating a stat graph) or by setting &lt;code&gt;diff.statGraphWidth=&amp;lt;width&amp;gt;&lt;/code&gt; (does not affect &lt;code&gt;git format-patch&lt;/code&gt;). By giving a third parameter &lt;code&gt;&amp;lt;count&amp;gt;&lt;/code&gt;, you can limit the output to the first &lt;code&gt;&amp;lt;count&amp;gt;&lt;/code&gt; lines, followed by &lt;code&gt;...&lt;/code&gt; if there are more.</source>
          <target state="translated">Genere un diffstat. De forma predeterminada, se utilizar&amp;aacute; tanto espacio como sea necesario para la parte del nombre del archivo y el resto para la parte del gr&amp;aacute;fico. El ancho m&amp;aacute;ximo predeterminado es el ancho del terminal, o 80 columnas si no est&amp;aacute; conectado a un terminal, y puede ser anulado por &lt;code&gt;&amp;lt;width&amp;gt;&lt;/code&gt; . El ancho de la parte del nombre del archivo se puede limitar dando otro ancho &lt;code&gt;&amp;lt;name-width&amp;gt;&lt;/code&gt; despu&amp;eacute;s de una coma. El ancho de la parte del gr&amp;aacute;fico se puede limitar usando &lt;code&gt;--stat-graph-width=&amp;lt;width&amp;gt;&lt;/code&gt; (afecta a todos los comandos que generan un gr&amp;aacute;fico estad&amp;iacute;stico) o configurando &lt;code&gt;diff.statGraphWidth=&amp;lt;width&amp;gt;&lt;/code&gt; (no afecta &lt;code&gt;git format-patch&lt;/code&gt; ) . Al dar un tercer par&amp;aacute;metro &lt;code&gt;&amp;lt;count&amp;gt;&lt;/code&gt; , puede limitar la salida a las primeras &lt;code&gt;&amp;lt;count&amp;gt;&lt;/code&gt; l&amp;iacute;neas,seguido por &lt;code&gt;...&lt;/code&gt; si hay m&amp;aacute;s.</target>
        </trans-unit>
        <trans-unit id="9a58997012274b692734905439c472fc9bf49724" translate="yes" xml:space="preserve">
          <source>Generate a request asking your upstream project to pull changes into their tree. The request, printed to the standard output, begins with the branch description, summarizes the changes and indicates from where they can be pulled.</source>
          <target state="translated">Generar una solicitud pidiendo a su proyecto de aguas arriba para tirar de los cambios en su árbol.La solicitud,impresa en la salida estándar,comienza con la descripción de la rama,resume los cambios e indica de dónde pueden ser extraídos.</target>
        </trans-unit>
        <trans-unit id="e43be14252a09239d3a95e69575c334d9dcee155" translate="yes" xml:space="preserve">
          <source>Generate diffs with &amp;lt;n&amp;gt; lines of context instead of the default of 3. This value is overridden by the -U option.</source>
          <target state="translated">Genere diferencias con &amp;lt;n&amp;gt; l&amp;iacute;neas de contexto en lugar del valor predeterminado de 3. La opci&amp;oacute;n -U anula este valor.</target>
        </trans-unit>
        <trans-unit id="0c3fb6d76074c691f7bc9656642039721293ad30" translate="yes" xml:space="preserve">
          <source>Generate diffs with &amp;lt;n&amp;gt; lines of context instead of the usual three. Implies &lt;code&gt;--patch&lt;/code&gt;.</source>
          <target state="translated">Genere diferencias con &amp;lt;n&amp;gt; l&amp;iacute;neas de contexto en lugar de las tres habituales. Implica - &lt;code&gt;--patch&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5423824f37bf5ebdc5aa787498e564ca92935ec4" translate="yes" xml:space="preserve">
          <source>Generate diffs with &amp;lt;n&amp;gt; lines of context instead of the usual three. Implies &lt;code&gt;--patch&lt;/code&gt;. Implies &lt;code&gt;-p&lt;/code&gt;.</source>
          <target state="translated">Genere diferencias con &amp;lt;n&amp;gt; l&amp;iacute;neas de contexto en lugar de las tres habituales. Implica - &lt;code&gt;--patch&lt;/code&gt; . Implica &lt;code&gt;-p&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c5ed7cc57b573e7d3d35a890e87a64e8016055b8" translate="yes" xml:space="preserve">
          <source>Generate patch (see section on generating patches).</source>
          <target state="translated">Generar parche (véase la sección sobre la generación de parches).</target>
        </trans-unit>
        <trans-unit id="468bd18b2fd829a488878e7cd9b8b00c33a3bf5f" translate="yes" xml:space="preserve">
          <source>Generate patch (see section on generating patches). This is the default.</source>
          <target state="translated">Generar parche (véase la sección sobre la generación de parches).Este es el valor por defecto.</target>
        </trans-unit>
        <trans-unit id="0305bd83d4a1ca283e78c45f30f1d98f9bb246bc" translate="yes" xml:space="preserve">
          <source>Generate plain patches without any diffstats.</source>
          <target state="translated">Generar parches llanos sin ningún tipo de diferencias.</target>
        </trans-unit>
        <trans-unit id="0cceb279f32e8c4384bb0e8684243cdf862ab779" translate="yes" xml:space="preserve">
          <source>Generate the diff in raw format.</source>
          <target state="translated">Generar el diff en formato crudo.</target>
        </trans-unit>
        <trans-unit id="c49c41c6395d0de919c07a57d58570e04e74713d" translate="yes" xml:space="preserve">
          <source>Generate the diff in raw format. This is the default.</source>
          <target state="translated">Generar el diff en formato crudo.Este es el valor predeterminado.</target>
        </trans-unit>
        <trans-unit id="88ef8fc7ea6872f6140c434b84c60ed4bc477b71" translate="yes" xml:space="preserve">
          <source>Generates a summary of pending changes</source>
          <target state="translated">Genera un resumen de los cambios pendientes</target>
        </trans-unit>
        <trans-unit id="b812709580c6b66bf19a88239714db45c6f547d3" translate="yes" xml:space="preserve">
          <source>Generates an RSS (or Atom) feed of changes to repository.</source>
          <target state="translated">Genera un feed RSS (o Atom)de cambios en el repositorio.</target>
        </trans-unit>
        <trans-unit id="6d3ce11672e300b3630956d5357a3f156d393821" translate="yes" xml:space="preserve">
          <source>Generating RSS and Atom feeds of commits, for any branch. The feeds are auto-discoverable in modern web browsers.</source>
          <target state="translated">Generando RSS y Atom feeds de commits,para cualquier rama.Los feeds son auto-descubribles en los navegadores web modernos.</target>
        </trans-unit>
        <trans-unit id="39bd3cb8cae2c62c26836b759476b4dce92db62c" translate="yes" xml:space="preserve">
          <source>Generating diff text</source>
          <target state="translated">Generando el texto diff</target>
        </trans-unit>
        <trans-unit id="6e83f1be8cebf28e1aa935d46feefe8c9c9b6bff" translate="yes" xml:space="preserve">
          <source>Generating diffs</source>
          <target state="translated">Generando diferencias</target>
        </trans-unit>
        <trans-unit id="d70a52c9081d71ce670fc7b47fc3bc012193cc1a" translate="yes" xml:space="preserve">
          <source>Generating patch text with -p</source>
          <target state="translated">Generando el texto del parche con -p</target>
        </trans-unit>
        <trans-unit id="6aeb48d435992fb6dfeaeb57975b9744c65abe0f" translate="yes" xml:space="preserve">
          <source>Generating projects list using gitweb</source>
          <target state="translated">Generar la lista de proyectos usando gitweb</target>
        </trans-unit>
        <trans-unit id="77a43161f16023a4081e441eda8d16415635830a" translate="yes" xml:space="preserve">
          <source>Generic &amp;lt;revision range&amp;gt; expression (see &quot;SPECIFYING REVISIONS&quot; section in &lt;a href=&quot;gitrevisions&quot;&gt;gitrevisions[7]&lt;/a&gt;) means the commits in the specified range.</source>
          <target state="translated">La expresi&amp;oacute;n gen&amp;eacute;rica &amp;lt;rango de revisi&amp;oacute;n&amp;gt; (ver la secci&amp;oacute;n &quot;ESPECIFICAR REVISIONES&quot; en &lt;a href=&quot;gitrevisions&quot;&gt;gitrevisions [7]&lt;/a&gt; ) significa las confirmaciones en el rango especificado.</target>
        </trans-unit>
        <trans-unit id="6a8b0f1bc43a4668545c1d049581bdef7899704d" translate="yes" xml:space="preserve">
          <source>Get and set repository or global options</source>
          <target state="translated">Obtener y establecer opciones de depósito o globales</target>
        </trans-unit>
        <trans-unit id="e36c9f7c3a3791a600900bd999a01e746ced35ba" translate="yes" xml:space="preserve">
          <source>Get the value for a given key (optionally filtered by a regex matching the value). Returns error code 1 if the key was not found and the last value if multiple key values were found.</source>
          <target state="translated">Obtener el valor de una clave determinada (opcionalmente filtrado por un regex que coincida con el valor).Devuelve el código de error 1 si la clave no fue encontrada y el último valor si se encontraron múltiples valores de clave.</target>
        </trans-unit>
        <trans-unit id="1ed0d09699cf6099e40ea031af476399c03ae869" translate="yes" xml:space="preserve">
          <source>Gets the Subversion property given as the first argument, for a file. A specific revision can be specified with -r/--revision.</source>
          <target state="translated">Obtiene la propiedad Subversion dada como primer argumento,para un archivo.Una revisión específica puede ser especificada con -r/--revision.</target>
        </trans-unit>
        <trans-unit id="516c94a58b7d13bbfd33d93293ff07c0a7a0cbf5" translate="yes" xml:space="preserve">
          <source>Getting and Creating Projects</source>
          <target state="translated">Obtención y creación de proyectos</target>
        </trans-unit>
        <trans-unit id="970eb65fbea28c10c8dd662819611907796540db" translate="yes" xml:space="preserve">
          <source>Getting changes out is easy:</source>
          <target state="translated">Sacar los cambios es fácil:</target>
        </trans-unit>
        <trans-unit id="f3ce20bb7af9a1868b401164829dfe90efbb8e6d" translate="yes" xml:space="preserve">
          <source>Getting conflict-resolution help during a merge</source>
          <target state="translated">Obtener ayuda para la resolución de conflictos durante una fusión</target>
        </trans-unit>
        <trans-unit id="060f712c74598ce01e86d56802d9344d8ed68bb7" translate="yes" xml:space="preserve">
          <source>Getting help</source>
          <target state="translated">Ottenere aiuto</target>
        </trans-unit>
        <trans-unit id="c459e54c0b44554b9b817457994c7c37528258a0" translate="yes" xml:space="preserve">
          <source>Getting updates with git pull</source>
          <target state="translated">Obteniendo actualizaciones con git pull</target>
        </trans-unit>
        <trans-unit id="5819778898df55e3a762f0c5728b457970d72cae" translate="yes" xml:space="preserve">
          <source>Git</source>
          <target state="translated">Git</target>
        </trans-unit>
        <trans-unit id="d732d81f4de6cbbc7c08999550694240dc675ed1" translate="yes" xml:space="preserve">
          <source>Git Commits</source>
          <target state="translated">Git se compromete</target>
        </trans-unit>
        <trans-unit id="d0aaf3f6b8eb7d9c0d9e9cfe8351718f5fff142e" translate="yes" xml:space="preserve">
          <source>Git Diffs</source>
          <target state="translated">Git Diffs</target>
        </trans-unit>
        <trans-unit id="2f8f97d0e40130f1bd878938daff8ad22d7dc440" translate="yes" xml:space="preserve">
          <source>Git Native</source>
          <target state="translated">Git Nativo</target>
        </trans-unit>
        <trans-unit id="29dd0634894701f7508333c275f98d0f1320daee" translate="yes" xml:space="preserve">
          <source>Git Repository Layout</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6e98b90bf56079b25bb9356fe9439f3123affff" translate="yes" xml:space="preserve">
          <source>Git Thread Messages</source>
          <target state="translated">Mensajes de Git Thread</target>
        </trans-unit>
        <trans-unit id="cae0e86da292416c6a36a0e4ce238566c9d247c3" translate="yes" xml:space="preserve">
          <source>Git Transport</source>
          <target state="translated">Transporte Git</target>
        </trans-unit>
        <trans-unit id="a7c39055264c29496e9ec925896bc3e3ec696cb4" translate="yes" xml:space="preserve">
          <source>Git allows you to specify scripts called &quot;hooks&quot; to be run at certain points. You can use these, for example, to send all commits to the shared repository to a mailing list. See &lt;a href=&quot;githooks&quot;&gt;githooks[5]&lt;/a&gt;.</source>
          <target state="translated">Git te permite especificar scripts llamados &quot;ganchos&quot; para que se ejecuten en ciertos puntos. Puede usarlos, por ejemplo, para enviar todas las confirmaciones al repositorio compartido a una lista de correo. Ver &lt;a href=&quot;githooks&quot;&gt;githooks [5]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6d26d4c60652b93a42ab638ebb72c8ba6beaba72" translate="yes" xml:space="preserve">
          <source>Git also keeps a pristine copy of Alice&amp;rsquo;s master branch under the name &quot;origin/master&quot;:</source>
          <target state="translated">Git tambi&amp;eacute;n mantiene una copia impecable de la rama maestra de Alice con el nombre &quot;origen / maestro&quot;:</target>
        </trans-unit>
        <trans-unit id="1738762c7d776a74999cdf10e57649ca4dc7876a" translate="yes" xml:space="preserve">
          <source>Git also provides a tool called &lt;a href=&quot;git-am&quot;&gt;git-am[1]&lt;/a&gt; (am stands for &quot;apply mailbox&quot;), for importing such an emailed series of patches. Just save all of the patch-containing messages, in order, into a single mailbox file, say &lt;code&gt;patches.mbox&lt;/code&gt;, then run</source>
          <target state="translated">Git tambi&amp;eacute;n proporciona una herramienta llamada &lt;a href=&quot;git-am&quot;&gt;git-am [1]&lt;/a&gt; (am significa &quot;aplicar buz&amp;oacute;n de correo&quot;), para importar una serie de parches enviados por correo electr&amp;oacute;nico. Simplemente guarde todos los mensajes que contienen parches, en orden, en un solo archivo de buz&amp;oacute;n, digamos &lt;code&gt;patches.mbox&lt;/code&gt; , luego ejecute</target>
        </trans-unit>
        <trans-unit id="1dc53eccf42e15dc7948bd5d68aac36dca57063c" translate="yes" xml:space="preserve">
          <source>Git archive</source>
          <target state="translated">Archivo Git</target>
        </trans-unit>
        <trans-unit id="54c5b60d3b067a46392b8d1f7e7e747f00fb6589" translate="yes" xml:space="preserve">
          <source>Git can also be used in a CVS-like mode, with a central repository that various users push changes to; see &lt;a href=&quot;git-push&quot;&gt;git-push[1]&lt;/a&gt; and &lt;a href=&quot;gitcvs-migration&quot;&gt;gitcvs-migration[7]&lt;/a&gt;.</source>
          <target state="translated">Git tambi&amp;eacute;n se puede usar en un modo similar a CVS, con un repositorio central al que varios usuarios env&amp;iacute;an cambios; consulte &lt;a href=&quot;git-push&quot;&gt;git-push [1]&lt;/a&gt; y &lt;a href=&quot;gitcvs-migration&quot;&gt;gitcvs-migration [7]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="12dda0ab622d98c0bb3ecd2dcca2f78143c72090" translate="yes" xml:space="preserve">
          <source>Git can detect errors when it reads an object, by checking that the object&amp;rsquo;s name is still the SHA-1 hash of its contents.</source>
          <target state="translated">Git puede detectar errores cuando lee un objeto, comprobando que el nombre del objeto sigue siendo el hash SHA-1 de su contenido.</target>
        </trans-unit>
        <trans-unit id="e99355d5c834d0a7e793f2a903c686c73ccc0248" translate="yes" xml:space="preserve">
          <source>Git can help you perform a three-way merge, which can in turn be used for a many-way merge by repeating the merge procedure several times. The usual situation is that you only do one three-way merge (reconciling two lines of history) and commit the result, but if you like to, you can merge several branches in one go.</source>
          <target state="translated">Git puede ayudarte a realizar una fusión triple,que a su vez puede ser utilizada para una fusión múltiple,repitiendo el procedimiento de fusión varias veces.La situación habitual es que sólo hagas una fusión de tres vías (reconciliando dos líneas de la historia)y comprometas el resultado,pero si quieres,puedes fusionar varias ramas de una sola vez.</target>
        </trans-unit>
        <trans-unit id="9711e4cc3e77224217a8eadfcd9bddb77a1a6b3f" translate="yes" xml:space="preserve">
          <source>Git can quickly determine whether two objects are identical or not, just by comparing names.</source>
          <target state="translated">Git puede determinar rápidamente si dos objetos son idénticos o no,sólo comparando los nombres.</target>
        </trans-unit>
        <trans-unit id="66761dbf024e7710e093b6a26bb079c9a462b99d" translate="yes" xml:space="preserve">
          <source>Git comes with a &quot;curl&quot; family of remote helpers, that handle various transport protocols, such as &lt;code&gt;git-remote-http&lt;/code&gt;, &lt;code&gt;git-remote-https&lt;/code&gt;, &lt;code&gt;git-remote-ftp&lt;/code&gt; and &lt;code&gt;git-remote-ftps&lt;/code&gt;. They implement the capabilities &lt;code&gt;fetch&lt;/code&gt;, &lt;code&gt;option&lt;/code&gt;, and &lt;code&gt;push&lt;/code&gt;.</source>
          <target state="translated">Git viene con una familia &quot;curl&quot; de ayudantes remotos, que manejan varios protocolos de transporte, como &lt;code&gt;git-remote-http&lt;/code&gt; , &lt;code&gt;git-remote-https&lt;/code&gt; , &lt;code&gt;git-remote-ftp&lt;/code&gt; y &lt;code&gt;git-remote-ftps&lt;/code&gt; . Implementan las capacidades de &lt;code&gt;fetch&lt;/code&gt; , &lt;code&gt;option&lt;/code&gt; y &lt;code&gt;push&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="91008229119a3ca60fa9a13273e5a206ad3c01e1" translate="yes" xml:space="preserve">
          <source>Git command-line interface and conventions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="590c7b2e50468cb97c1bacdf4c22b05f53204bcc" translate="yes" xml:space="preserve">
          <source>Git commands</source>
          <target state="translated">Comandos de Git...</target>
        </trans-unit>
        <trans-unit id="748a4c7cdb8da160e4137b5f163f8f4f719642f9" translate="yes" xml:space="preserve">
          <source>Git concepts</source>
          <target state="translated">Conceptos de Git</target>
        </trans-unit>
        <trans-unit id="23daed08ae51790de19c33ed17896e5944bcf442" translate="yes" xml:space="preserve">
          <source>Git considers each credential to have a context defined by a URL. This context is used to look up context-specific configuration, and is passed to any helpers, which may use it as an index into secure storage.</source>
          <target state="translated">Git considera que cada credencial tiene un contexto definido por un URL.Este contexto se utiliza para buscar la configuración específica del contexto,y se pasa a cualquier ayudante,que puede utilizarlo como índice en un almacenamiento seguro.</target>
        </trans-unit>
        <trans-unit id="50d371d1d26e20ed2106ca5d2c77efab159f6b5e" translate="yes" xml:space="preserve">
          <source>Git data exporter</source>
          <target state="translated">Exportador de datos Git</target>
        </trans-unit>
        <trans-unit id="df14b19afe5ac9b190d2e62a9bb072306d0becda" translate="yes" xml:space="preserve">
          <source>Git did not try to send the ref at all, typically because it is not a fast-forward and you did not force the update.</source>
          <target state="translated">Git no intentó enviar al árbitro en absoluto,típicamente porque no es un avance rápido y no forzó la actualización.</target>
        </trans-unit>
        <trans-unit id="2dac5af4573e16931bda9b37c2f40888a8b49b4e" translate="yes" xml:space="preserve">
          <source>Git diff features. By performing only the transformation step yourself, you can still utilize many of Git&amp;rsquo;s diff features, including colorization, word-diff, and combined diffs for merges.</source>
          <target state="translated">Funciones de Git diff. Al realizar solo el paso de transformaci&amp;oacute;n usted mismo, a&amp;uacute;n puede utilizar muchas de las funciones de diferencias de Git, incluida la coloraci&amp;oacute;n, la diferencia de palabras y las diferencias combinadas para las fusiones.</target>
        </trans-unit>
        <trans-unit id="4e4742213b12ec1297779eac50efdab191f84da4" translate="yes" xml:space="preserve">
          <source>Git differs from CVS in that every working tree contains a repository with a full copy of the project history, and no repository is inherently more important than any other. However, you can emulate the CVS model by designating a single shared repository which people can synchronize with; this document explains how to do that.</source>
          <target state="translated">Git difiere de CVS en que cada árbol de trabajo contiene un repositorio con una copia completa de la historia del proyecto,y ningún repositorio es inherentemente más importante que otro.Sin embargo,puedes emular el modelo CVS designando un único repositorio compartido con el que la gente pueda sincronizarse;este documento explica cómo hacerlo.</target>
        </trans-unit>
        <trans-unit id="52ba75f7d53c0098d95000c61cda5fd5ea6917af" translate="yes" xml:space="preserve">
          <source>Git directory name</source>
          <target state="translated">El nombre del directorio de Git</target>
        </trans-unit>
        <trans-unit id="5d9fa4d20745d4b5b2bcfd60f9d543f73fbbd4e6" translate="yes" xml:space="preserve">
          <source>Git directory name, where all characters except for alphanumeric ones, &lt;code&gt;.&lt;/code&gt;, and &lt;code&gt;-&lt;/code&gt; are replaced with &lt;code&gt;_&lt;/code&gt; (this should make it easier to use the directory name in a filename if wanted)</source>
          <target state="translated">Git nombre de directorio, donde todos los caracteres excepto para los alfanum&amp;eacute;ricos, &lt;code&gt;.&lt;/code&gt; , y &lt;code&gt;-&lt;/code&gt; se reemplazan con &lt;code&gt;_&lt;/code&gt; (esto deber&amp;iacute;a facilitar el uso del nombre del directorio en un nombre de archivo si se desea)</target>
        </trans-unit>
        <trans-unit id="9cf813a3cd69ecbe5e00c63d983206328e14b759" translate="yes" xml:space="preserve">
          <source>Git does not allow partial checkouts, so duplicating this approach in Git would force developers to keep a local copy of modules they are not interested in touching. Commits in an enormous checkout would be slower than you&amp;rsquo;d expect as Git would have to scan every directory for changes. If modules have a lot of local history, clones would take forever.</source>
          <target state="translated">Git no permite pagos parciales, por lo que duplicar este enfoque en Git obligar&amp;iacute;a a los desarrolladores a mantener una copia local de los m&amp;oacute;dulos que no est&amp;aacute;n interesados ​​en tocar. Las confirmaciones en un pago enorme ser&amp;iacute;an m&amp;aacute;s lentas de lo que cabr&amp;iacute;a esperar, ya que Git tendr&amp;iacute;a que escanear todos los directorios en busca de cambios. Si los m&amp;oacute;dulos tienen mucha historia local, los clones tardar&amp;iacute;an una eternidad.</target>
        </trans-unit>
        <trans-unit id="8b2d9679cf8575fc6c4cfb84434fb5d8180eb7ab" translate="yes" xml:space="preserve">
          <source>Git explained</source>
          <target state="translated">Git explicó</target>
        </trans-unit>
        <trans-unit id="97b68f2c19cbd9c04d7ca8ff88d2678de8cfd1c0" translate="yes" xml:space="preserve">
          <source>Git for CVS users</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0db9018815b17c54cf84524352784d68bf492b44" translate="yes" xml:space="preserve">
          <source>Git glossary</source>
          <target state="translated">Glosario de Git</target>
        </trans-unit>
        <trans-unit id="11c6d04869311aae599c74c45ab29a30fd9dc2d3" translate="yes" xml:space="preserve">
          <source>Git has a default disposition of keeping data unless it&amp;rsquo;s explicitly thrown away; this extends to holding onto local references to branches on remotes that have themselves deleted those branches.</source>
          <target state="translated">Git tiene una disposici&amp;oacute;n predeterminada para conservar los datos a menos que se desechen expl&amp;iacute;citamente; esto se extiende a retener referencias locales a sucursales en controles remotos que ellos mismos han eliminado esas sucursales.</target>
        </trans-unit>
        <trans-unit id="c792c246c2740fcc85816c7742979ab9c07c5067" translate="yes" xml:space="preserve">
          <source>Git has an internal interface for storing and retrieving credentials from system-specific helpers, as well as prompting the user for usernames and passwords. The git-credential command exposes this interface to scripts which may want to retrieve, store, or prompt for credentials in the same manner as Git. The design of this scriptable interface models the internal C API; see credential.h for more background on the concepts.</source>
          <target state="translated">Git tiene una interfaz interna para almacenar y recuperar las credenciales de los ayudantes específicos del sistema,así como para solicitar al usuario nombres de usuario y contraseñas.El comando git-credential expone esta interfaz a scripts que pueden querer recuperar,almacenar o solicitar credenciales de la misma manera que Git.El diseño de esta interfaz con capacidad de scripts modela la API interna de C;véase credential.h para más información sobre los conceptos.</target>
        </trans-unit>
        <trans-unit id="b5c69a965c60312962f3f44179acdc3a60b40e17" translate="yes" xml:space="preserve">
          <source>Git has no way of knowing that the new head is an updated version of the old head; it treats this situation exactly the same as it would if two developers had independently done the work on the old and new heads in parallel. At this point, if someone attempts to merge the new head in to their branch, Git will attempt to merge together the two (old and new) lines of development, instead of trying to replace the old by the new. The results are likely to be unexpected.</source>
          <target state="translated">Git no tiene forma de saber que la nueva cabeza es una versión actualizada de la vieja cabeza;trata esta situación exactamente igual que si dos desarrolladores hubiesen hecho el trabajo de las viejas y nuevas cabezas de forma independiente y en paralelo.En este punto,si alguien intenta fusionar la nueva cabeza en su rama,Git intentará fusionar las dos líneas de desarrollo (la antigua y la nueva),en lugar de intentar reemplazar la antigua por la nueva.Es probable que los resultados sean inesperados.</target>
        </trans-unit>
        <trans-unit id="06c2297147a37b1c482365d9d8f31d8dedf40fc4" translate="yes" xml:space="preserve">
          <source>Git history is represented as a series of interrelated commits. We have already seen that the &lt;code&gt;git log&lt;/code&gt; command can list those commits. Note that first line of each git log entry also gives a name for the commit:</source>
          <target state="translated">La historia de Git se representa como una serie de confirmaciones interrelacionadas. Ya hemos visto que el comando &lt;code&gt;git log&lt;/code&gt; puede enumerar esas confirmaciones. Tenga en cuenta que la primera l&amp;iacute;nea de cada entrada de registro de git tambi&amp;eacute;n da un nombre para la confirmaci&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="3e99ade0692d549a8a950dd96317ceaffb9107bb" translate="yes" xml:space="preserve">
          <source>Git imposes the following rules on how references are named:</source>
          <target state="translated">Git impone las siguientes reglas sobre cómo se nombran las referencias:</target>
        </trans-unit>
        <trans-unit id="a288f739ab4cf5d9993c702076fe0dc6fc3ee3ba" translate="yes" xml:space="preserve">
          <source>Git internal format</source>
          <target state="translated">El formato interno de Git</target>
        </trans-unit>
        <trans-unit id="64a97e8eaa30379dfa62ee80bea9820c4fe8a22e" translate="yes" xml:space="preserve">
          <source>Git is a Distributed Version Control system (DVCS) created by Linus Torvalds and maintained by Junio Hamano.</source>
          <target state="translated">Git es un sistema de control de versiones distribuidas (DVCS)creado por Linus Torvalds y mantenido por Junio Hamano.</target>
        </trans-unit>
        <trans-unit id="f3967c7f5aeb4487a30c2b76c0330d8f45c7d45a" translate="yes" xml:space="preserve">
          <source>Git is a fast distributed revision control system.</source>
          <target state="translated">Git es un sistema de control de revisión distribuido rápidamente.</target>
        </trans-unit>
        <trans-unit id="39998d13fc7a27f9efbe60a086c013b3bd3030af" translate="yes" xml:space="preserve">
          <source>Git is a fast, scalable, distributed revision control system with an unusually rich command set that provides both high-level operations and full access to internals.</source>
          <target state="translated">Git es un sistema de control de revisiones distribuido,rápido y escalable,con un conjunto de comandos inusualmente rico que proporciona tanto operaciones de alto nivel como acceso total a los internos.</target>
        </trans-unit>
        <trans-unit id="9fb5868e31358193ca8585301de5ca9891b34989" translate="yes" xml:space="preserve">
          <source>Git is best thought of as a tool for storing the history of a collection of files. It does this by storing compressed snapshots of the contents of a file hierarchy, together with &quot;commits&quot; which show the relationships between these snapshots.</source>
          <target state="translated">La mejor manera de pensar en Git es como una herramienta para almacenar la historia de una colección de archivos.Lo hace almacenando instantáneas comprimidas del contenido de una jerarquía de archivos,junto con &quot;commits&quot; que muestran las relaciones entre estas instantáneas.</target>
        </trans-unit>
        <trans-unit id="35ff36d5accbb4f2dda359fd3229598730d5aa08" translate="yes" xml:space="preserve">
          <source>Git is best thought of as a tool for storing the history of a collection of files. It stores the history as a compressed collection of interrelated snapshots of the project&amp;rsquo;s contents. In Git each such version is called a &lt;a href=&quot;#def_commit&quot;&gt;commit&lt;/a&gt;.</source>
          <target state="translated">Es mejor pensar en Git como una herramienta para almacenar el historial de una colecci&amp;oacute;n de archivos. Almacena el historial como una colecci&amp;oacute;n comprimida de instant&amp;aacute;neas interrelacionadas del contenido del proyecto. En Git, cada una de estas versiones se denomina &lt;a href=&quot;#def_commit&quot;&gt;confirmaci&amp;oacute;n&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7a9590b40529c70c530e12c39759365698786125" translate="yes" xml:space="preserve">
          <source>Git is built on a small number of simple but powerful ideas. While it is possible to get things done without understanding them, you will find Git much more intuitive if you do.</source>
          <target state="translated">Git se basa en un pequeño número de ideas simples pero poderosas.Aunque es posible hacer las cosas sin entenderlas,encontrarás a Git mucho más intuitivo si lo haces.</target>
        </trans-unit>
        <trans-unit id="acccb72bd7439cce396900f6956100688cfe6ddd" translate="yes" xml:space="preserve">
          <source>Git is to some extent character encoding agnostic.</source>
          <target state="translated">Git es hasta cierto punto agnóstico en cuanto a la codificación de caracteres.</target>
        </trans-unit>
        <trans-unit id="db4366f04a4436ab91b01ad18e3f75e42a556e25" translate="yes" xml:space="preserve">
          <source>Git namespaces</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a87c04c678f1edcfea18d0a701f5da80659e7540" translate="yes" xml:space="preserve">
          <source>Git neither stops nor restarts the filter process in case the &quot;error&quot;/&quot;abort&quot; status is set. However, Git sets its exit code according to the &lt;code&gt;filter.&amp;lt;driver&amp;gt;.required&lt;/code&gt; flag, mimicking the behavior of the &lt;code&gt;filter.&amp;lt;driver&amp;gt;.clean&lt;/code&gt; / &lt;code&gt;filter.&amp;lt;driver&amp;gt;.smudge&lt;/code&gt; mechanism.</source>
          <target state="translated">Git no detiene ni reinicia el proceso de filtrado en caso de que se establezca el estado &quot;error&quot; / &quot;abortar&quot;. Sin embargo, Git establece su c&amp;oacute;digo de salida de acuerdo con el &lt;code&gt;filter.&amp;lt;driver&amp;gt;.required&lt;/code&gt; Bandera requerida , imitando el comportamiento del &lt;code&gt;filter.&amp;lt;driver&amp;gt;.clean&lt;/code&gt; / &lt;code&gt;filter.&amp;lt;driver&amp;gt;.smudge&lt;/code&gt; mecanismo.</target>
        </trans-unit>
        <trans-unit id="bcbcedc091eff7502178afecdce9f3afdc72dc05" translate="yes" xml:space="preserve">
          <source>Git provides extremely flexible and fast tools for exploring the history of a project.</source>
          <target state="translated">Git proporciona herramientas extremadamente flexibles y rápidas para explorar la historia de un proyecto.</target>
        </trans-unit>
        <trans-unit id="38200bd70c851718b2397208bade5f568860b37a" translate="yes" xml:space="preserve">
          <source>Git recognizes files encoded in ASCII or one of its supersets (e.g. UTF-8, ISO-8859-1, &amp;hellip;​) as text files. Files encoded in certain other encodings (e.g. UTF-16) are interpreted as binary and consequently built-in Git text processing tools (e.g. &lt;code&gt;git diff&lt;/code&gt;) as well as most Git web front ends do not visualize the contents of these files by default.</source>
          <target state="translated">Git reconoce archivos codificados en ASCII o uno de sus superconjuntos (por ejemplo, UTF-8, ISO-8859-1,&amp;hellip;) como archivos de texto. Los archivos codificados en otras codificaciones (por ejemplo, UTF-16) se interpretan como binarios y, por lo tanto, las herramientas de procesamiento de texto Git integradas (por ejemplo, &lt;code&gt;git diff&lt;/code&gt; ), as&amp;iacute; como la mayor&amp;iacute;a de las interfaces web de Git no visualizan el contenido de estos archivos de forma predeterminada.</target>
        </trans-unit>
        <trans-unit id="db884716c8275e6cfa36ed29dbc5d360bba57d0e" translate="yes" xml:space="preserve">
          <source>Git relies on the proper configuration of this variable for your operating and file system. Modifying this value may result in unexpected behavior.</source>
          <target state="translated">Git confía en la correcta configuración de esta variable para su sistema operativo y de archivos.Modificar este valor puede dar lugar a un comportamiento inesperado.</target>
        </trans-unit>
        <trans-unit id="a66f7e50154ea192af5f4749135be70398075b72" translate="yes" xml:space="preserve">
          <source>Git repositories are normally totally self-sufficient and relocatable. Unlike CVS, for example, there is no separate notion of &quot;repository&quot; and &quot;working tree&quot;. A Git repository normally &lt;strong&gt;is&lt;/strong&gt; the working tree, with the local Git information hidden in the &lt;code&gt;.git&lt;/code&gt; subdirectory. There is nothing else. What you see is what you got.</source>
          <target state="translated">Los repositorios de Git normalmente son totalmente autosuficientes y reubicables. A diferencia de CVS, por ejemplo, no existe una noci&amp;oacute;n separada de &quot;repositorio&quot; y &quot;&amp;aacute;rbol de trabajo&quot;. Un repositorio de Git normalmente &lt;strong&gt;es&lt;/strong&gt; el &amp;aacute;rbol de trabajo, con la informaci&amp;oacute;n local de Git oculta en el subdirectorio &lt;code&gt;.git&lt;/code&gt; . No hay nada m&amp;aacute;s. Lo que ves es lo que tienes.</target>
        </trans-unit>
        <trans-unit id="cf8c005d3f0e4d9e1ff9d1e8d46ef8fd98f0bbf4" translate="yes" xml:space="preserve">
          <source>Git repository format versions</source>
          <target state="translated">Versiones del formato del depósito de Git</target>
        </trans-unit>
        <trans-unit id="cd868bd588534f7cc4b6680d57c0627b3503b53c" translate="yes" xml:space="preserve">
          <source>Git sends the remote helper a list of commands on standard input, one per line. The first command is always the &lt;code&gt;capabilities&lt;/code&gt; command, in response to which the remote helper must print a list of the capabilities it supports (see below) followed by a blank line. The response to the capabilities command determines what commands Git uses in the remainder of the command stream.</source>
          <target state="translated">Git env&amp;iacute;a al asistente remoto una lista de comandos en la entrada est&amp;aacute;ndar, uno por l&amp;iacute;nea. El primer comando es siempre el comando de &lt;code&gt;capabilities&lt;/code&gt; , en respuesta al cual el asistente remoto debe imprimir una lista de las capacidades que admite (ver m&amp;aacute;s abajo) seguido de una l&amp;iacute;nea en blanco. La respuesta al comando de capacidades determina qu&amp;eacute; comandos usa Git en el resto del flujo de comandos.</target>
        </trans-unit>
        <trans-unit id="49f2ae128519616ee7193d5988bcbce620249ed4" translate="yes" xml:space="preserve">
          <source>Git supports dividing the refs of a single repository into multiple namespaces, each of which has its own branches, tags, and HEAD. Git can expose each namespace as an independent repository to pull from and push to, while sharing the object store, and exposing all the refs to operations such as &lt;a href=&quot;git-gc&quot;&gt;git-gc[1]&lt;/a&gt;.</source>
          <target state="translated">Git admite la divisi&amp;oacute;n de las referencias de un &amp;uacute;nico repositorio en varios espacios de nombres, cada uno de los cuales tiene sus propias ramas, etiquetas y HEAD. Git puede exponer cada espacio de nombres como un repositorio independiente para extraer y enviar, mientras comparte el almac&amp;eacute;n de objetos y expone todas las referencias a operaciones como &lt;a href=&quot;git-gc&quot;&gt;git-gc [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="da0d87f50d864c408fa4b395576786d97bb31ddd" translate="yes" xml:space="preserve">
          <source>Git supports ssh, git, http, and https protocols (in addition, ftp, and ftps can be used for fetching, but this is inefficient and deprecated; do not use it).</source>
          <target state="translated">Git soporta los protocolos ssh,git,http y https (además,se puede utilizar ftp y ftps para la recogida,pero esto es ineficiente y obsoleto;no lo utilice).</target>
        </trans-unit>
        <trans-unit id="2cde7635ac8cf69f2e210aa19a54d3042440cb25" translate="yes" xml:space="preserve">
          <source>Git tracks content not files</source>
          <target state="translated">Git rastrea el contenido,no los archivos</target>
        </trans-unit>
        <trans-unit id="d302527fd1d763cfe7e5d18396b3435236371be0" translate="yes" xml:space="preserve">
          <source>Git treats the pattern as a shell glob suitable for consumption by fnmatch(3) with the FNM_PATHNAME flag: wildcards in the pattern will not match a / in the pathname. For example, &quot;Documentation/*.html&quot; matches &quot;Documentation/git.html&quot; but not &quot;Documentation/ppc/ppc.html&quot; or &quot;tools/perf/Documentation/perf.html&quot;.</source>
          <target state="translated">Git trata el patrón como un globo de concha apto para ser consumido por fnmatch(3)con la bandera FNM_PATHNAME:los comodines en el patrón no coincidirán con a/en el pathname.Por ejemplo,&quot;Documentation/*.html&quot; coincide con &quot;Documentation/git.html&quot; pero no con &quot;Documentation/ppc/ppc.html&quot; o &quot;tools/perf/Documentation/perf.html&quot;.</target>
        </trans-unit>
        <trans-unit id="f8bad0cd453249cf5d129aec87c3431738399e00" translate="yes" xml:space="preserve">
          <source>Git understands the following attributes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e54cce67cf2641b15706179b6168b5a2d3b1bcd" translate="yes" xml:space="preserve">
          <source>Git urls</source>
          <target state="translated">Git urls</target>
        </trans-unit>
        <trans-unit id="751190188de5688aa514632f7b1c3310593ad2c7" translate="yes" xml:space="preserve">
          <source>Git users can broadly be grouped into four categories for the purposes of describing here a small set of useful command for everyday Git.</source>
          <target state="translated">Los usuarios de Git pueden agruparse a grandes rasgos en cuatro categorías con el fin de describir aquí un pequeño conjunto de comandos útiles para el Git cotidiano.</target>
        </trans-unit>
        <trans-unit id="b7ac07d144784e0a8c84df59d7316744b8847546" translate="yes" xml:space="preserve">
          <source>Git uses a simple text format to store customizations that are per repository and are per user. Such a configuration file may look like this:</source>
          <target state="translated">Git utiliza un sencillo formato de texto para almacenar las personalizaciones que son por depósito y por usuario.Un archivo de configuración de este tipo puede tener este aspecto:</target>
        </trans-unit>
        <trans-unit id="172b4ceb66bee5a713d5dcc15584b89df5db983d" translate="yes" xml:space="preserve">
          <source>Git usually guesses correctly whether a blob contains text or binary data by examining the beginning of the contents. However, sometimes you may want to override its decision, either because a blob contains binary data later in the file, or because the content, while technically composed of text characters, is opaque to a human reader. For example, many postscript files contain only ASCII characters, but produce noisy and meaningless diffs.</source>
          <target state="translated">Git suele adivinar correctamente si una mancha contiene texto o datos binarios examinando el principio del contenido.Sin embargo,a veces puedes querer anular su decisión,ya sea porque una mancha contiene datos binarios más adelante en el archivo,o porque el contenido,aunque técnicamente está compuesto por caracteres de texto,es opaco para un lector humano.Por ejemplo,muchos archivos postscript contienen sólo caracteres ASCII,pero producen diferencias ruidosas y sin sentido.</target>
        </trans-unit>
        <trans-unit id="8049931f388e861f0f1d36c522924184358c43ba" translate="yes" xml:space="preserve">
          <source>Git was started by Linus Torvalds, and is currently maintained by Junio C Hamano. Numerous contributions have come from the Git mailing list &amp;lt;&lt;a href=&quot;mailto:git@vger.kernel.org&quot;&gt;git@vger.kernel.org&lt;/a&gt;&amp;gt;. &lt;a href=&quot;http://www.openhub.net/p/git/contributors/summary&quot;&gt;http://www.openhub.net/p/git/contributors/summary&lt;/a&gt; gives you a more complete list of contributors.</source>
          <target state="translated">Git fue iniciado por Linus Torvalds y actualmente es mantenido por Junio ​​C Hamano. Numerosas contribuciones provienen de la lista de correo de Git &amp;lt; &lt;a href=&quot;mailto:git@vger.kernel.org&quot;&gt;git@vger.kernel.org&lt;/a&gt; &amp;gt;. &lt;a href=&quot;http://www.openhub.net/p/git/contributors/summary&quot;&gt;http://www.openhub.net/p/git/contributors/summary&lt;/a&gt; le ofrece una lista m&amp;aacute;s completa de contribuyentes.</target>
        </trans-unit>
        <trans-unit id="526caa17e283066f503c081c2465980601606a1b" translate="yes" xml:space="preserve">
          <source>Git web interface (web frontend to Git repositories)</source>
          <target state="translated">Interfaz web de Git (interfaz web de los depósitos de Git)</target>
        </trans-unit>
        <trans-unit id="041fb03988c0360186f3faf7d7f4aee25aff3a46" translate="yes" xml:space="preserve">
          <source>Git will apply each patch in order; if any conflicts are found, it will stop, and you can fix the conflicts as described in &quot;&lt;a href=&quot;#resolving-a-merge&quot;&gt;Resolving a merge&lt;/a&gt;&quot;. (The &lt;code&gt;-3&lt;/code&gt; option tells Git to perform a merge; if you would prefer it just to abort and leave your tree and index untouched, you may omit that option.)</source>
          <target state="translated">Git aplicar&amp;aacute; cada parche en orden; si se encuentra alg&amp;uacute;n conflicto, se detendr&amp;aacute; y podr&amp;aacute; solucionar los conflictos como se describe en &quot; &lt;a href=&quot;#resolving-a-merge&quot;&gt;Resoluci&amp;oacute;n de una combinaci&amp;oacute;n&lt;/a&gt; &quot;. (La opci&amp;oacute;n &lt;code&gt;-3&lt;/code&gt; le dice a Git que realice una fusi&amp;oacute;n; si lo prefiere simplemente para abortar y dejar su &amp;aacute;rbol e &amp;iacute;ndice intactos, puede omitir esa opci&amp;oacute;n).</target>
        </trans-unit>
        <trans-unit id="5affbc744831be1e58dd602e173c2e8a9635241c" translate="yes" xml:space="preserve">
          <source>Git will fail (gracefully) in case it needs to modify this file in the index e.g. when merging in a commit; thus, in case the assumed-untracked file is changed upstream, you will need to handle the situation manually.</source>
          <target state="translated">Git fallará (con gracia)en caso de que necesite modificar este archivo en el índice,por ejemplo al fusionarse en una confirmación;por lo tanto,en caso de que el archivo que se supone rastreado se modifique aguas arriba,tendrás que manejar la situación manualmente.</target>
        </trans-unit>
        <trans-unit id="48da4a71e3b0bf95013a3e083375ba4a4f8d9442" translate="yes" xml:space="preserve">
          <source>Git will limit what files it checks for changes as well as which directories are checked for untracked files based on the path names given.</source>
          <target state="translated">Git limitará qué archivos comprueba si hay cambios,así como qué directorios comprueban si hay archivos no rastreados en función de los nombres de ruta dados.</target>
        </trans-unit>
        <trans-unit id="9b6711c26bfff56f55ea4e0cb9cd80ae556f923a" translate="yes" xml:space="preserve">
          <source>Git will reply</source>
          <target state="translated">Git responderá</target>
        </trans-unit>
        <trans-unit id="bca1285083439b77ee97a317766aadc935c0bbdf" translate="yes" xml:space="preserve">
          <source>Git will sometimes need credentials from the user in order to perform operations; for example, it may need to ask for a username and password in order to access a remote repository over HTTP. This manual describes the mechanisms Git uses to request these credentials, as well as some features to avoid inputting these credentials repeatedly.</source>
          <target state="translated">Git necesitará a veces credenciales del usuario para poder realizar operaciones;por ejemplo,puede necesitar pedir un nombre de usuario y una contraseña para acceder a un repositorio remoto a través de HTTP.Este manual describe los mecanismos que utiliza Git para solicitar estas credenciales,así como algunas características para evitar introducir estas credenciales repetidamente.</target>
        </trans-unit>
        <trans-unit id="dd4de92d6643474e91f15af2289a2ff1175302eb" translate="yes" xml:space="preserve">
          <source>Git writes temporary &lt;code&gt;BASE&lt;/code&gt;, &lt;code&gt;LOCAL&lt;/code&gt;, and &lt;code&gt;REMOTE&lt;/code&gt; versions of conflicting files in the worktree by default. Git will attempt to use a temporary directory for these files when set &lt;code&gt;true&lt;/code&gt;. Defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">Git escribe versiones temporales &lt;code&gt;BASE&lt;/code&gt; , &lt;code&gt;LOCAL&lt;/code&gt; y &lt;code&gt;REMOTE&lt;/code&gt; de archivos conflictivos en el &amp;aacute;rbol de trabajo de forma predeterminada. Git intentar&amp;aacute; usar un directorio temporal para estos archivos cuando se establezca como &lt;code&gt;true&lt;/code&gt; . El valor predeterminado es &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="24c7b4499addc9a93ccbe263411515a9a891fc27" translate="yes" xml:space="preserve">
          <source>Git&amp;rsquo;s ability to quickly import and merge patches allows a single maintainer to process incoming changes even at very high rates. And when that becomes too much, &lt;code&gt;git pull&lt;/code&gt; provides an easy way for that maintainer to delegate this job to other maintainers while still allowing optional review of incoming changes.</source>
          <target state="translated">La capacidad de Git para importar y fusionar parches r&amp;aacute;pidamente permite que un &amp;uacute;nico responsable procese los cambios entrantes incluso a velocidades muy altas. Y cuando eso se vuelve demasiado, &lt;code&gt;git pull&lt;/code&gt; proporciona una manera f&amp;aacute;cil para que el mantenedor delegue este trabajo a otros mantenedores al tiempo que permite la revisi&amp;oacute;n opcional de los cambios entrantes.</target>
        </trans-unit>
        <trans-unit id="9715a07ab0249fd3ddbc253711eb7248c1c1366b" translate="yes" xml:space="preserve">
          <source>Git&amp;rsquo;s i18n setup code for shell scripts</source>
          <target state="translated">C&amp;oacute;digo de configuraci&amp;oacute;n i18n de Git para scripts de shell</target>
        </trans-unit>
        <trans-unit id="4917cf9f784e37253e2667c9ea0e66247909051b" translate="yes" xml:space="preserve">
          <source>Git&amp;rsquo;s submodule support allows a repository to contain, as a subdirectory, a checkout of an external project. Submodules maintain their own identity; the submodule support just stores the submodule repository location and commit ID, so other developers who clone the containing project (&quot;superproject&quot;) can easily clone all the submodules at the same revision. Partial checkouts of the superproject are possible: you can tell Git to clone none, some or all of the submodules.</source>
          <target state="translated">La compatibilidad con subm&amp;oacute;dulos de Git permite que un repositorio contenga, como subdirectorio, un pago de un proyecto externo. Los subm&amp;oacute;dulos mantienen su propia identidad; el soporte del subm&amp;oacute;dulo solo almacena la ubicaci&amp;oacute;n del repositorio del subm&amp;oacute;dulo y el ID de confirmaci&amp;oacute;n, por lo que otros desarrolladores que clonan el proyecto que lo contiene (&quot;superproyecto&quot;) pueden clonar f&amp;aacute;cilmente todos los subm&amp;oacute;dulos en la misma revisi&amp;oacute;n. Son posibles las comprobaciones parciales del superproyecto: puede decirle a Git que clone ninguno, algunos o todos los subm&amp;oacute;dulos.</target>
        </trans-unit>
        <trans-unit id="f1ffaf3a57e8861e273a81c5d860f0898c1c6dac" translate="yes" xml:space="preserve">
          <source>Gitk was the first graphical repository browser. It&amp;rsquo;s written in tcl/tk.</source>
          <target state="translated">Gitk fue el primer navegador de repositorio gr&amp;aacute;fico. Est&amp;aacute; escrito en tcl / tk.</target>
        </trans-unit>
        <trans-unit id="969a3c97b510dcff0a924faf9dee287a0e5d94ec" translate="yes" xml:space="preserve">
          <source>Gitweb assumes this charset when a line contains non-UTF-8 characters. The fallback decoding is used without error checking, so it can be even &quot;utf-8&quot;. The value must be a valid encoding; see the &lt;strong&gt;Encoding::Supported&lt;/strong&gt;(3pm) man page for a list. The default is &quot;latin1&quot;, aka. &quot;iso-8859-1&quot;.</source>
          <target state="translated">Gitweb asume este juego de caracteres cuando una l&amp;iacute;nea contiene caracteres que no son UTF-8. La decodificaci&amp;oacute;n alternativa se utiliza sin comprobaci&amp;oacute;n de errores, por lo que puede ser incluso &quot;utf-8&quot;. El valor debe ser una codificaci&amp;oacute;n v&amp;aacute;lida; consulte la p&amp;aacute;gina de manual &lt;strong&gt;Encoding :: Supported&lt;/strong&gt; (3pm) para obtener una lista. El valor predeterminado es &quot;latin1&quot;, tambi&amp;eacute;n conocido como. &quot;iso-8859-1&quot;.</target>
        </trans-unit>
        <trans-unit id="23aa8c44f909f60d83eed1c6ecddb35429f0603e" translate="yes" xml:space="preserve">
          <source>Gitweb can show information from one or more Git repositories. These repositories have to be all on local filesystem, and have to share common repository root, i.e. be all under a single parent repository (but see also &quot;Advanced web server setup&quot; section, &quot;Webserver configuration with multiple projects' root&quot; subsection).</source>
          <target state="translated">Gitweb puede mostrar información de uno o más depósitos de Git.Estos repositorios tienen que estar todos en el sistema de archivos local,y tienen que compartir la raíz común del repositorio,es decir,estar todos bajo un único repositorio principal (pero véase también la sección &quot;Configuración avanzada del servidor web&quot;,subsección &quot;Configuración del servidor web con la raíz de múltiples proyectos&quot;).</target>
        </trans-unit>
        <trans-unit id="80e6e4e3c32d8a850e194d0e624021eac7612871" translate="yes" xml:space="preserve">
          <source>Gitweb can use path_info (component) based URLs, or it can pass all necessary information via query parameters. The typical gitweb URLs are broken down in to five components:</source>
          <target state="translated">Gitweb puede utilizar URLs basadas en path_info (componente),o puede pasar toda la información necesaria a través de parámetros de consulta.Las típicas URLs de gitweb se dividen en cinco componentes:</target>
        </trans-unit>
        <trans-unit id="c91227cd181327062eb5ac3babb9dcdd0a92cc2a" translate="yes" xml:space="preserve">
          <source>Gitweb provides a web interface to Git repositories. Its features include:</source>
          <target state="translated">Gitweb proporciona una interfaz web para los depósitos de Git.Sus características incluyen:</target>
        </trans-unit>
        <trans-unit id="b64851fc263d72157b99e98603012bfc29c4f9ff" translate="yes" xml:space="preserve">
          <source>Gitweb reads configuration data from the following sources in the following order:</source>
          <target state="translated">Gitweb lee los datos de configuración de las siguientes fuentes en el siguiente orden:</target>
        </trans-unit>
        <trans-unit id="0b6ae99cd0fc07dd07b98d65f39c6a8d809c4979" translate="yes" xml:space="preserve">
          <source>Gitweb version, set automatically when creating gitweb.cgi from gitweb.perl. You might want to modify it if you are running modified gitweb, for example</source>
          <target state="translated">Versión de Gitweb,establecida automáticamente al crear gitweb.cgi a partir de gitweb.perl.Puede que quieras modificarlo si estás ejecutando gitweb modificado,por ejemplo</target>
        </trans-unit>
        <trans-unit id="fcc44369541727be05647a1cc4996dbc27b86060" translate="yes" xml:space="preserve">
          <source>Gitweb works with Apache and FastCGI. First you need to rename, copy or symlink gitweb.cgi to gitweb.fcgi. Let&amp;rsquo;s assume that gitweb is installed in &lt;code&gt;/usr/share/gitweb&lt;/code&gt; directory. The following Apache configuration is suitable (UNTESTED!)</source>
          <target state="translated">Gitweb funciona con Apache y FastCGI. Primero debe cambiar el nombre, copiar o enlazar simb&amp;oacute;licamente gitweb.cgi a gitweb.fcgi. Supongamos que gitweb est&amp;aacute; instalado en el directorio &lt;code&gt;/usr/share/gitweb&lt;/code&gt; . La siguiente configuraci&amp;oacute;n de Apache es adecuada (&amp;iexcl;NO PROBADA!)</target>
        </trans-unit>
        <trans-unit id="42543af4180750540520e4da78d3e7076123fd5c" translate="yes" xml:space="preserve">
          <source>Give an object a human readable name based on an available ref</source>
          <target state="translated">Darle a un objeto un nombre legible para los humanos basado en una referencia disponible</target>
        </trans-unit>
        <trans-unit id="8a08e691bc874c43f32edff7b28078841082dfd2" translate="yes" xml:space="preserve">
          <source>Give push/pull only access to developers using git-over-ssh.</source>
          <target state="translated">Dar acceso de &quot;push/pull&quot; sólo a los desarrolladores que usen &quot;git-over-ssh&quot;.</target>
        </trans-unit>
        <trans-unit id="098611c3aa4062358e82cce32a6cb2188462a62d" translate="yes" xml:space="preserve">
          <source>Give the output in an easy-to-parse format for scripts. This is similar to the short output, but will remain stable across Git versions and regardless of user configuration. See below for details.</source>
          <target state="translated">Dar la salida en un formato fácil de preparar para los guiones.Esto es similar a la salida corta,pero permanecerá estable en todas las versiones de Git e independientemente de la configuración del usuario.Ver más abajo para más detalles.</target>
        </trans-unit>
        <trans-unit id="4cab29647a0992b826e617662d099d2fa7b8c337" translate="yes" xml:space="preserve">
          <source>Give the output in the long-format. This is the default.</source>
          <target state="translated">Da la salida en el formato largo.Este es el valor por defecto.</target>
        </trans-unit>
        <trans-unit id="7b3a4cfa6cfda1ef4f79bab4a1d749c9c6c5f5f0" translate="yes" xml:space="preserve">
          <source>Give the output in the short-format.</source>
          <target state="translated">Da la salida en el formato corto.</target>
        </trans-unit>
        <trans-unit id="2dc950b47492cb25f78f25c843f0ed41c631283b" translate="yes" xml:space="preserve">
          <source>Given &lt;code&gt;--delete&lt;/code&gt; and an additional argument, deletes the given symbolic ref.</source>
          <target state="translated">Dado &lt;code&gt;--delete&lt;/code&gt; y un argumento adicional, elimina la referencia simb&amp;oacute;lica dada.</target>
        </trans-unit>
        <trans-unit id="e97e8a091675b0288dfc0175fdb5f7c838cea92d" translate="yes" xml:space="preserve">
          <source>Given N &amp;lt;references&amp;gt;, the first N lines are the one-line description from their commit message. The branch head that is pointed at by $GIT_DIR/HEAD is prefixed with an asterisk &lt;code&gt;*&lt;/code&gt; character while other heads are prefixed with a &lt;code&gt;!&lt;/code&gt; character.</source>
          <target state="translated">Dadas N &amp;lt;referencias&amp;gt;, las primeras N l&amp;iacute;neas son la descripci&amp;oacute;n de una l&amp;iacute;nea de su mensaje de confirmaci&amp;oacute;n. La cabeza de la rama a la que apunta $ GIT_DIR / HEAD tiene el prefijo de un asterisco &lt;code&gt;*&lt;/code&gt; mientras que las otras cabezas tienen el prefijo &lt;code&gt;!&lt;/code&gt; personaje.</target>
        </trans-unit>
        <trans-unit id="a02a332c45eb3b9cf3b89841e8aa1ca85e593c49" translate="yes" xml:space="preserve">
          <source>Given a .git/config like this:</source>
          <target state="translated">Dado un .git/configuración como esta:</target>
        </trans-unit>
        <trans-unit id="e65ae867c8cb398abc725e8538eba217d02dbede" translate="yes" xml:space="preserve">
          <source>Given a commit, find out where it is relative to the local refs. Say somebody wrote you about that fantastic commit 33db5f4d9027a10e477ccf054b2c1ab94f74c85a. Of course, you look into the commit, but that only tells you what happened, but not the context.</source>
          <target state="translated">Si se le da un compromiso,averigüe dónde está en relación con los árbitros locales.Digamos que alguien te escribió sobre ese fantástico compromiso 33db5f4d9027a10e477ccf054b2c1ab94f74c85a.Por supuesto,miras en el compromiso,pero eso sólo te dice lo que pasó,pero no el contexto.</target>
        </trans-unit>
        <trans-unit id="7ce01790b46379d506c51a1991e3ea26b3a8d244" translate="yes" xml:space="preserve">
          <source>Given one argument, reads which branch head the given symbolic ref refers to and outputs its path, relative to the &lt;code&gt;.git/&lt;/code&gt; directory. Typically you would give &lt;code&gt;HEAD&lt;/code&gt; as the &amp;lt;name&amp;gt; argument to see which branch your working tree is on.</source>
          <target state="translated">Dado un argumento, lee a qu&amp;eacute; encabezado de rama se refiere la referencia simb&amp;oacute;lica dada y genera su ruta, relativa al directorio &lt;code&gt;.git/&lt;/code&gt; . Por lo general, le dar&amp;iacute;a &lt;code&gt;HEAD&lt;/code&gt; como argumento &amp;lt;nombre&amp;gt; para ver en qu&amp;eacute; rama se encuentra su &amp;aacute;rbol de trabajo.</target>
        </trans-unit>
        <trans-unit id="ee9f44e6df9f9221a39559d12563d4ded15eb1ae" translate="yes" xml:space="preserve">
          <source>Given one or more existing commits, apply the change each one introduces, recording a new commit for each. This requires your working tree to be clean (no modifications from the HEAD commit).</source>
          <target state="translated">Dada una o más confirmaciones existentes,aplicar el cambio que cada una introduce,registrando una nueva confirmación para cada una.Esto requiere que tu árbol de trabajo esté limpio (sin modificaciones de la confirmación de HEAD).</target>
        </trans-unit>
        <trans-unit id="49cfc78f8193ed0e67ffaf9646d690418c000a33" translate="yes" xml:space="preserve">
          <source>Given one or more existing commits, revert the changes that the related patches introduce, and record some new commits that record them. This requires your working tree to be clean (no modifications from the HEAD commit).</source>
          <target state="translated">Dada una o más confirmaciones existentes,revierta los cambios que introducen los parches relacionados y registre algunas nuevas confirmaciones que las registren.Esto requiere que tu árbol de trabajo esté limpio (sin modificaciones de la confirmación de HEAD).</target>
        </trans-unit>
        <trans-unit id="b90c39be8f3013761513d522c230779e0af0700e" translate="yes" xml:space="preserve">
          <source>Given the following noisy input with &lt;code&gt;$&lt;/code&gt; indicating the end of a line:</source>
          <target state="translated">Dada la siguiente entrada ruidosa con &lt;code&gt;$&lt;/code&gt; indicando el final de una l&amp;iacute;nea:</target>
        </trans-unit>
        <trans-unit id="9ae9c5ba5c0cae940c9ccda71b399bacf0ceae54" translate="yes" xml:space="preserve">
          <source>Given three arguments, stores the &amp;lt;newvalue&amp;gt; in the &amp;lt;ref&amp;gt;, possibly dereferencing the symbolic refs, after verifying that the current value of the &amp;lt;ref&amp;gt; matches &amp;lt;oldvalue&amp;gt;. E.g. &lt;code&gt;git update-ref refs/heads/master &amp;lt;newvalue&amp;gt; &amp;lt;oldvalue&amp;gt;&lt;/code&gt; updates the master branch head to &amp;lt;newvalue&amp;gt; only if its current value is &amp;lt;oldvalue&amp;gt;. You can specify 40 &quot;0&quot; or an empty string as &amp;lt;oldvalue&amp;gt; to make sure that the ref you are creating does not exist.</source>
          <target state="translated">Dados tres argumentos, almacena el &amp;lt;newvalue&amp;gt; en &amp;lt;ref&amp;gt;, posiblemente eliminando las referencias simb&amp;oacute;licas, despu&amp;eacute;s de verificar que el valor actual de &amp;lt;ref&amp;gt; coincide con &amp;lt;oldvalue&amp;gt;. Por ejemplo, &lt;code&gt;git update-ref refs/heads/master &amp;lt;newvalue&amp;gt; &amp;lt;oldvalue&amp;gt;&lt;/code&gt; actualiza el encabezado de la rama maestra a &amp;lt;newvalue&amp;gt; solo si su valor actual es &amp;lt;oldvalue&amp;gt;. Puede especificar 40 &quot;0&quot; o una cadena vac&amp;iacute;a como &amp;lt;oldvalue&amp;gt; para asegurarse de que la referencia que est&amp;aacute; creando no exista.</target>
        </trans-unit>
        <trans-unit id="4d8bb10ba2f3cfa88afc4b8727de27fb3cab8018" translate="yes" xml:space="preserve">
          <source>Given three commits &lt;code&gt;A&lt;/code&gt;, &lt;code&gt;B&lt;/code&gt; and &lt;code&gt;C&lt;/code&gt;, &lt;code&gt;git merge-base A B C&lt;/code&gt; will compute the merge base between &lt;code&gt;A&lt;/code&gt; and a hypothetical commit &lt;code&gt;M&lt;/code&gt;, which is a merge between &lt;code&gt;B&lt;/code&gt; and &lt;code&gt;C&lt;/code&gt;. For example, with this topology:</source>
          <target state="translated">Dadas tres commit &lt;code&gt;A&lt;/code&gt; , &lt;code&gt;B&lt;/code&gt; y &lt;code&gt;C&lt;/code&gt; , &lt;code&gt;git merge-base A B C&lt;/code&gt; calcular&amp;aacute; la base de combinaci&amp;oacute;n entre &lt;code&gt;A&lt;/code&gt; y una hipot&amp;eacute;tica comprometen &lt;code&gt;M&lt;/code&gt; , que es una combinaci&amp;oacute;n entre &lt;code&gt;B&lt;/code&gt; y &lt;code&gt;C&lt;/code&gt; . Por ejemplo, con esta topolog&amp;iacute;a:</target>
        </trans-unit>
        <trans-unit id="be6c9bc842b0965134f1fb7992b74ba082dffe0f" translate="yes" xml:space="preserve">
          <source>Given two arguments, creates or updates a symbolic ref &amp;lt;name&amp;gt; to point at the given branch &amp;lt;ref&amp;gt;.</source>
          <target state="translated">Dados dos argumentos, crea o actualiza una referencia simb&amp;oacute;lica &amp;lt;nombre&amp;gt; para apuntar a la rama determinada &amp;lt;ref&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="7cc67b58b4d717f52eb7b590f0c2ac097c83b04a" translate="yes" xml:space="preserve">
          <source>Given two arguments, stores the &amp;lt;newvalue&amp;gt; in the &amp;lt;ref&amp;gt;, possibly dereferencing the symbolic refs. E.g. &lt;code&gt;git update-ref HEAD
&amp;lt;newvalue&amp;gt;&lt;/code&gt; updates the current branch head to the new object.</source>
          <target state="translated">Dados dos argumentos, almacena el &amp;lt;newvalue&amp;gt; en &amp;lt;ref&amp;gt;, posiblemente eliminando las referencias simb&amp;oacute;licas. Por ejemplo, &lt;code&gt;git update-ref HEAD &amp;lt;newvalue&amp;gt;&lt;/code&gt; actualiza el encabezado de la rama actual al nuevo objeto.</target>
        </trans-unit>
        <trans-unit id="931db30a85fe3ea596ac121ca8f065ad449ff885" translate="yes" xml:space="preserve">
          <source>Given two commits &lt;code&gt;A&lt;/code&gt; and &lt;code&gt;B&lt;/code&gt;, &lt;code&gt;git merge-base A B&lt;/code&gt; will output a commit which is reachable from both &lt;code&gt;A&lt;/code&gt; and &lt;code&gt;B&lt;/code&gt; through the parent relationship.</source>
          <target state="translated">Dadas dos confirmaciones &lt;code&gt;A&lt;/code&gt; y &lt;code&gt;B&lt;/code&gt; , &lt;code&gt;git merge-base A B&lt;/code&gt; generar&amp;aacute; una confirmaci&amp;oacute;n que es accesible desde &lt;code&gt;A&lt;/code&gt; y &lt;code&gt;B&lt;/code&gt; a trav&amp;eacute;s de la relaci&amp;oacute;n principal.</target>
        </trans-unit>
        <trans-unit id="b0c09289dc074c18ca9574b29845f64d7cae5bc3" translate="yes" xml:space="preserve">
          <source>Gives some information about the remote &amp;lt;name&amp;gt;.</source>
          <target state="translated">Proporciona informaci&amp;oacute;n sobre el &amp;lt;nombre&amp;gt; remoto.</target>
        </trans-unit>
        <trans-unit id="9466e3cfe4b90da05672816c37e48d04d2b0bacb" translate="yes" xml:space="preserve">
          <source>Giving these options is an error when used with &lt;code&gt;--inetd&lt;/code&gt;; use the facility of inet daemon to achieve the same before spawning &lt;code&gt;git daemon&lt;/code&gt; if needed.</source>
          <target state="translated">Dar estas opciones es un error cuando se usa con &lt;code&gt;--inetd&lt;/code&gt; ; use la facilidad de inet daemon para lograr lo mismo antes de generar &lt;code&gt;git daemon&lt;/code&gt; si es necesario.</target>
        </trans-unit>
        <trans-unit id="d0ec3ae2bdc4ccb842cc8f2251da67f38c6daf5a" translate="yes" xml:space="preserve">
          <source>Glob magic is incompatible with literal magic.</source>
          <target state="translated">La magia de los globos es incompatible con la magia literal.</target>
        </trans-unit>
        <trans-unit id="7427cf697be16a4ec1d916910128a59d920125e7" translate="yes" xml:space="preserve">
          <source>Glossary</source>
          <target state="translated">Glossary</target>
        </trans-unit>
        <trans-unit id="d8608c60e7a8f9d556f6c1f2aff537e2ce064bab" translate="yes" xml:space="preserve">
          <source>Go under &quot;Options&quot; in the Composer window and be sure that &quot;Word wrap&quot; is not set.</source>
          <target state="translated">Ve a &quot;Opciones&quot; en la ventana del compositor y asegúrate de que &quot;Word wrap&quot; no esté configurado.</target>
        </trans-unit>
        <trans-unit id="c16a49b3ce3e17532ce6e118e23e9cba92fcb23b" translate="yes" xml:space="preserve">
          <source>Graduation</source>
          <target state="translated">Graduation</target>
        </trans-unit>
        <trans-unit id="7108295a48fb4030d059842641f3ed2f16dd90ea" translate="yes" xml:space="preserve">
          <source>Grafts enables two otherwise different lines of development to be joined together by recording fake ancestry information for commits. This way you can make Git pretend the set of &lt;a href=&quot;#def_parent&quot;&gt;parents&lt;/a&gt; a &lt;a href=&quot;#def_commit&quot;&gt;commit&lt;/a&gt; has is different from what was recorded when the commit was created. Configured via the &lt;code&gt;.git/info/grafts&lt;/code&gt; file.</source>
          <target state="translated">Grafts permite unir dos l&amp;iacute;neas de desarrollo diferentes mediante el registro de informaci&amp;oacute;n de ascendencia falsa para las confirmaciones. De esta manera, puede hacer que Git finja que el conjunto de &lt;a href=&quot;#def_parent&quot;&gt;padres &lt;/a&gt;&lt;a href=&quot;#def_commit&quot;&gt;que&lt;/a&gt; tiene una confirmaci&amp;oacute;n es diferente de lo que se registr&amp;oacute; cuando se cre&amp;oacute; la confirmaci&amp;oacute;n. Configurado mediante el archivo &lt;code&gt;.git/info/grafts&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="43addd483f6785ba3f74ca813174b30e77d7804f" translate="yes" xml:space="preserve">
          <source>Graphical alternative to git-commit</source>
          <target state="translated">Alternativa gráfica al git-commit</target>
        </trans-unit>
        <trans-unit id="7e3e6e185a96c1bddac8bacc3e22b2d8c14f25b3" translate="yes" xml:space="preserve">
          <source>Group commits based on &lt;code&gt;&amp;lt;type&amp;gt;&lt;/code&gt;. If no &lt;code&gt;--group&lt;/code&gt; option is specified, the default is &lt;code&gt;author&lt;/code&gt;. &lt;code&gt;&amp;lt;type&amp;gt;&lt;/code&gt; is one of:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="929a28d261428029e61c0f81c6161fd71ba0b2fe" translate="yes" xml:space="preserve">
          <source>Guides</source>
          <target state="translated">Guides</target>
        </trans-unit>
        <trans-unit id="7cf184f4c67ad58283ecb19349720b0cae756829" translate="yes" xml:space="preserve">
          <source>H</source>
          <target state="translated">H</target>
        </trans-unit>
        <trans-unit id="7138a51661947b19b5088da5a2bfede2876f49b9" translate="yes" xml:space="preserve">
          <source>HEAD</source>
          <target state="translated">HEAD</target>
        </trans-unit>
        <trans-unit id="f53aba93b9409d79b694657717f24476b7680a38" translate="yes" xml:space="preserve">
          <source>HEAD can also record a specific commit directly, instead of being a symref to point at the current branch. Such a state is often called &lt;code&gt;detached HEAD.&lt;/code&gt; See &lt;a href=&quot;git-checkout&quot;&gt;git-checkout[1]&lt;/a&gt; for details.</source>
          <target state="translated">HEAD tambi&amp;eacute;n puede registrar una confirmaci&amp;oacute;n espec&amp;iacute;fica directamente, en lugar de ser un symref para apuntar a la rama actual. A este estado se le suele llamar &lt;code&gt;detached HEAD.&lt;/code&gt; Consulte &lt;a href=&quot;git-checkout&quot;&gt;git-checkout [1]&lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="adaf1f885f4f48f7b3c5a9a2b8f4883bf35d0a07" translate="yes" xml:space="preserve">
          <source>HEAD: refers to the head of the current branch</source>
          <target state="translated">CABEZA:se refiere a la cabeza de la rama actual</target>
        </trans-unit>
        <trans-unit id="408093a274a45499420aa72e738c6e970f863fed" translate="yes" xml:space="preserve">
          <source>HEADER:</source>
          <target state="translated">HEADER:</target>
        </trans-unit>
        <trans-unit id="bd0cfe599144b530c7c9685825d1a02a5377b64e" translate="yes" xml:space="preserve">
          <source>HTML snippet to be included in the &amp;lt;head&amp;gt; section of each page. Can be set using &lt;code&gt;GITWEB_SITE_HTML_HEAD_STRING&lt;/code&gt; at build time. No default value.</source>
          <target state="translated">Fragmento de HTML que se incluir&amp;aacute; en la secci&amp;oacute;n &amp;lt;head&amp;gt; de cada p&amp;aacute;gina. Se puede configurar mediante &lt;code&gt;GITWEB_SITE_HTML_HEAD_STRING&lt;/code&gt; en el momento de la compilaci&amp;oacute;n. Sin valor predeterminado.</target>
        </trans-unit>
        <trans-unit id="cc56a2df9f8b6a66c5d2a6125ab52ed375e5152b" translate="yes" xml:space="preserve">
          <source>HTTP Transport</source>
          <target state="translated">Transporte HTTP</target>
        </trans-unit>
        <trans-unit id="d578fb1b4bb161c78cd19e50fcb2b009bf47fe3e" translate="yes" xml:space="preserve">
          <source>HTTP(S)</source>
          <target state="translated">HTTP(S)</target>
        </trans-unit>
        <trans-unit id="1ba3338bd0d397031ae85dc0347d63c94b00e5df" translate="yes" xml:space="preserve">
          <source>HTTP/1.1</source>
          <target state="translated">HTTP/1.1</target>
        </trans-unit>
        <trans-unit id="396826d4135990391d3176f7b40c9091eed2c0d3" translate="yes" xml:space="preserve">
          <source>HTTP/2</source>
          <target state="translated">HTTP/2</target>
        </trans-unit>
        <trans-unit id="80bde80e45cfc7c229d507fff6d534806b07378c" translate="yes" xml:space="preserve">
          <source>Hacking git</source>
          <target state="translated">El imbécil del hacking</target>
        </trans-unit>
        <trans-unit id="c4b8d31a4ffcd043a96008543e3e1f5d7eaf7692" translate="yes" xml:space="preserve">
          <source>Handling Renames</source>
          <target state="translated">Manejo de renombramientos</target>
        </trans-unit>
        <trans-unit id="3049c71fe9126eefc3301476201dcd8b12bbbd85" translate="yes" xml:space="preserve">
          <source>Handling of svn branches</source>
          <target state="translated">Manejo de las ramas del svn</target>
        </trans-unit>
        <trans-unit id="b2bb788b2d8872820805621988d07bb34824ee87" translate="yes" xml:space="preserve">
          <source>Hard case: The changes are not the same.</source>
          <target state="translated">Un caso difícil:Los cambios no son los mismos.</target>
        </trans-unit>
        <trans-unit id="d86493cd0a3bd6cc52c39427d91b4f3fb5f1ba0f" translate="yes" xml:space="preserve">
          <source>Has no effect if the ref does not have tracking information associated with it. All the options apart from &lt;code&gt;nobracket&lt;/code&gt; are mutually exclusive, but if used together the last option is selected.</source>
          <target state="translated">No tiene ning&amp;uacute;n efecto si la referencia no tiene informaci&amp;oacute;n de seguimiento asociada. Todas las opciones, excepto &lt;code&gt;nobracket&lt;/code&gt; , son mutuamente excluyentes, pero si se usan juntas, se selecciona la &amp;uacute;ltima opci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="eee44516ee4e4873c5ecfb5a6805b0f8b1007d35" translate="yes" xml:space="preserve">
          <source>Hash object as it were located at the given path. The location of file does not directly influence on the hash value, but path is used to determine what Git filters should be applied to the object before it can be placed to the object database, and, as result of applying filters, the actual blob put into the object database may differ from the given file. This option is mainly useful for hashing temporary files located outside of the working directory or files read from stdin.</source>
          <target state="translated">El objeto Hash,tal y como estaba situado en el camino dado.La ubicación del archivo no influye directamente en el valor hash,pero la ruta se utiliza para determinar qué filtros Git deben aplicarse al objeto antes de que pueda ser colocado en la base de datos de objetos,y,como resultado de la aplicación de los filtros,la mancha real colocada en la base de datos de objetos puede diferir del archivo dado.Esta opción es útil principalmente para hacer hashing de los archivos temporales situados fuera del directorio de trabajo o de los archivos leídos desde stdin.</target>
        </trans-unit>
        <trans-unit id="100c09777204f7d9c4d9c8cca2b2ca1117efcbe1" translate="yes" xml:space="preserve">
          <source>Hash the contents as is, ignoring any input filter that would have been chosen by the attributes mechanism, including the end-of-line conversion. If the file is read from standard input then this is always implied, unless the &lt;code&gt;--path&lt;/code&gt; option is given.</source>
          <target state="translated">Aplique hash al contenido tal como est&amp;aacute;, ignorando cualquier filtro de entrada que hubiera sido elegido por el mecanismo de atributos, incluida la conversi&amp;oacute;n de fin de l&amp;iacute;nea. Si el archivo se lee desde la entrada est&amp;aacute;ndar, esto siempre est&amp;aacute; impl&amp;iacute;cito, a menos que se &lt;code&gt;--path&lt;/code&gt; opci&amp;oacute;n --path .</target>
        </trans-unit>
        <trans-unit id="f2ae7e4a6dc9825ef1a4868750168492eeaf6380" translate="yes" xml:space="preserve">
          <source>Have the server run as an inetd service. Implies --syslog (may be overridden with &lt;code&gt;--log-destination=&lt;/code&gt;). Incompatible with --detach, --port, --listen, --user and --group options.</source>
          <target state="translated">Haga que el servidor se ejecute como un servicio inetd. Implica --syslog (puede &lt;code&gt;--log-destination=&lt;/code&gt; con --log-destination = ). Incompatible con las opciones --detach, --port, --listen, --user y --group.</target>
        </trans-unit>
        <trans-unit id="db301d2890ccaa14dc974751b62b359a359b6b5c" translate="yes" xml:space="preserve">
          <source>He also uses a set of temporary branches (&quot;topic branches&quot;), each containing a logical grouping of patches.</source>
          <target state="translated">También utiliza un conjunto de ramas temporales (&quot;ramas temáticas&quot;),cada una de las cuales contiene una agrupación lógica de parches.</target>
        </trans-unit>
        <trans-unit id="c983e9a4d9daf24f5efac3a67c8f6c12bda32744" translate="yes" xml:space="preserve">
          <source>He uses two public branches:</source>
          <target state="translated">Utiliza dos sucursales públicas:</target>
        </trans-unit>
        <trans-unit id="08dac5b0781534f17eedb09bc82379faeed11d4a" translate="yes" xml:space="preserve">
          <source>Header lines start with &quot;#&quot; and are added in response to specific command line arguments. Parsers should ignore headers they don&amp;rsquo;t recognize.</source>
          <target state="translated">Las l&amp;iacute;neas de encabezado comienzan con &quot;#&quot; y se agregan en respuesta a argumentos espec&amp;iacute;ficos de la l&amp;iacute;nea de comandos. Los analizadores deben ignorar los encabezados que no reconocen.</target>
        </trans-unit>
        <trans-unit id="6f7a484a67443c5c4893cfcebc8516ecb7a4f1a2" translate="yes" xml:space="preserve">
          <source>Help parsing or adding &lt;code&gt;trailers&lt;/code&gt; lines, that look similar to RFC 822 e-mail headers, at the end of the otherwise free-form part of a commit message.</source>
          <target state="translated">Ayuda an&amp;aacute;lisis sint&amp;aacute;ctico o la adici&amp;oacute;n de &lt;code&gt;trailers&lt;/code&gt; l&amp;iacute;neas, que parecen similares a las cabeceras RFC 822 de correo electr&amp;oacute;nico, al final de la parte de forma libre no de un mensaje de confirmaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="f07e99c3fb43a6bcfb5e09ad2c991cc9571165ae" translate="yes" xml:space="preserve">
          <source>Helper programs to interact with remote repositories</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7f00958253572e7e593fd3637f7f812370db1d4" translate="yes" xml:space="preserve">
          <source>Helper to store credentials on disk</source>
          <target state="translated">Ayudante para almacenar las credenciales en el disco</target>
        </trans-unit>
        <trans-unit id="91ab6264d347386bb003d96ff4f148c65df714a3" translate="yes" xml:space="preserve">
          <source>Helper to temporarily store passwords in memory</source>
          <target state="translated">Ayudante para almacenar temporalmente las contraseñas en la memoria</target>
        </trans-unit>
        <trans-unit id="f8801cb816506b471cd751bc46c3d753c8b27a46" translate="yes" xml:space="preserve">
          <source>Hence</source>
          <target state="translated">Hence</target>
        </trans-unit>
        <trans-unit id="8286249a7e764f5f9777c2fc17e5230ccc1ef5fe" translate="yes" xml:space="preserve">
          <source>Here &lt;code&gt;&amp;lt;commit-ish&amp;gt;&lt;/code&gt; is any of the commit specification expressions also accepted by &lt;code&gt;from&lt;/code&gt; (see above).</source>
          <target state="translated">Aqu&amp;iacute; &lt;code&gt;&amp;lt;commit-ish&amp;gt;&lt;/code&gt; es cualquiera de las expresiones de especificaci&amp;oacute;n de confirmaci&amp;oacute;n tambi&amp;eacute;n aceptadas por &lt;code&gt;from&lt;/code&gt; (ver arriba).</target>
        </trans-unit>
        <trans-unit id="3fb766f6c8298c39110428f8565787238a736366" translate="yes" xml:space="preserve">
          <source>Here &lt;code&gt;&amp;lt;commit-ish&amp;gt;&lt;/code&gt; is any of the following:</source>
          <target state="translated">Aqu&amp;iacute; &lt;code&gt;&amp;lt;commit-ish&amp;gt;&lt;/code&gt; es cualquiera de los siguientes:</target>
        </trans-unit>
        <trans-unit id="85bca9b0f87b55d545a8c945215b23dd3bdbffcb" translate="yes" xml:space="preserve">
          <source>Here &lt;code&gt;&amp;lt;dataref&amp;gt;&lt;/code&gt; can be either a mark reference (&lt;code&gt;:&amp;lt;idnum&amp;gt;&lt;/code&gt;) set by a prior &lt;code&gt;blob&lt;/code&gt; command, or a full 40-byte SHA-1 of an existing Git blob object.</source>
          <target state="translated">Aqu&amp;iacute;, &lt;code&gt;&amp;lt;dataref&amp;gt;&lt;/code&gt; puede ser una referencia de marca ( &lt;code&gt;:&amp;lt;idnum&amp;gt;&lt;/code&gt; ) establecida por un comando de &lt;code&gt;blob&lt;/code&gt; anterior , o un SHA-1 completo de 40 bytes de un objeto de blob de Git existente.</target>
        </trans-unit>
        <trans-unit id="3f53683a6742f0030e51cf7120f8e28dba9865c5" translate="yes" xml:space="preserve">
          <source>Here &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; is the person&amp;rsquo;s display name (for example &amp;ldquo;Com M Itter&amp;rdquo;) and &lt;code&gt;&amp;lt;email&amp;gt;&lt;/code&gt; is the person&amp;rsquo;s email address (&amp;ldquo;cm@example.com&amp;rdquo;). &lt;code&gt;LT&lt;/code&gt; and &lt;code&gt;GT&lt;/code&gt; are the literal less-than (\x3c) and greater-than (\x3e) symbols. These are required to delimit the email address from the other fields in the line. Note that &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;email&amp;gt;&lt;/code&gt; are free-form and may contain any sequence of bytes, except &lt;code&gt;LT&lt;/code&gt;, &lt;code&gt;GT&lt;/code&gt; and &lt;code&gt;LF&lt;/code&gt;. &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; is typically UTF-8 encoded.</source>
          <target state="translated">Aqu&amp;iacute; &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; es el nombre para mostrar de la persona (por ejemplo, &quot;Com M Itter&quot;) y &lt;code&gt;&amp;lt;email&amp;gt;&lt;/code&gt; es la direcci&amp;oacute;n de correo electr&amp;oacute;nico de la persona (&quot;cm@example.com&quot;). &lt;code&gt;LT&lt;/code&gt; y &lt;code&gt;GT&lt;/code&gt; son los s&amp;iacute;mbolos literal menor que (\ x3c) y mayor que (\ x3e). Estos son necesarios para delimitar la direcci&amp;oacute;n de correo electr&amp;oacute;nico de los dem&amp;aacute;s campos de la l&amp;iacute;nea. Tenga en cuenta que &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; y &lt;code&gt;&amp;lt;email&amp;gt;&lt;/code&gt; son de formato libre y pueden contener cualquier secuencia de bytes, excepto &lt;code&gt;LT&lt;/code&gt; , &lt;code&gt;GT&lt;/code&gt; y &lt;code&gt;LF&lt;/code&gt; . &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; suele estar codificado en UTF-8.</target>
        </trans-unit>
        <trans-unit id="88e3e34bac3d333854c449d8638faee3f973bc68" translate="yes" xml:space="preserve">
          <source>Here actual project root is passed to gitweb via &lt;code&gt;GITWEB_PROJECT_ROOT&lt;/code&gt; environment variable from a web server, so you need to put the following line in gitweb configuration file (&lt;code&gt;/etc/gitweb.conf&lt;/code&gt; in above example):</source>
          <target state="translated">Aqu&amp;iacute;, la ra&amp;iacute;z del proyecto real se pasa a gitweb a trav&amp;eacute;s de la variable de entorno &lt;code&gt;GITWEB_PROJECT_ROOT&lt;/code&gt; desde un servidor web, por lo que debe colocar la siguiente l&amp;iacute;nea en el archivo de configuraci&amp;oacute;n de &lt;code&gt;/etc/gitweb.conf&lt;/code&gt; ( /etc/gitweb.conf en el ejemplo anterior):</target>
        </trans-unit>
        <trans-unit id="87d852c017173b91ce004ba4ee55c454ec44074f" translate="yes" xml:space="preserve">
          <source>Here again it is a good point to take a pause.</source>
          <target state="translated">Aquí también es un buen punto para hacer una pausa.</target>
        </trans-unit>
        <trans-unit id="9d560d4da9e941f0111865584d812ed4b996ba31" translate="yes" xml:space="preserve">
          <source>Here are a handful of examples using the Loeliger illustration above, with each step in the notation&amp;rsquo;s expansion and selection carefully spelt out:</source>
          <target state="translated">Aqu&amp;iacute; hay un pu&amp;ntilde;ado de ejemplos que utilizan la ilustraci&amp;oacute;n de Loeliger anterior, con cada paso en la expansi&amp;oacute;n y selecci&amp;oacute;n de la notaci&amp;oacute;n detalladamente detallada:</target>
        </trans-unit>
        <trans-unit id="917cc5ec6b02db542b24a5b6455b2e756b18d73b" translate="yes" xml:space="preserve">
          <source>Here are some example specifications:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a6c1665b5306569c28a748694fd4e1b1e7a55db" translate="yes" xml:space="preserve">
          <source>Here are some hints on how to successfully submit patches inline using various mailers.</source>
          <target state="translated">Aquí hay algunos consejos sobre cómo enviar exitosamente parches en línea usando varios correos.</target>
        </trans-unit>
        <trans-unit id="1510576755c083f75778b41e3e15db4ef8738ed9" translate="yes" xml:space="preserve">
          <source>Here are some of the scripts that simplify all this even further.</source>
          <target state="translated">Aquí hay algunos de los guiones que simplifican todo esto aún más.</target>
        </trans-unit>
        <trans-unit id="e7b17934614eee2f77ca3149426accc7b6e72d44" translate="yes" xml:space="preserve">
          <source>Here are the rules regarding the &quot;flags&quot; that you should follow when you are scripting Git:</source>
          <target state="translated">Estas son las reglas sobre las &quot;banderas&quot; que debes seguir cuando haces el guión de Git:</target>
        </trans-unit>
        <trans-unit id="04cdec1fa8a31abdd551dc359504457bc39d207b" translate="yes" xml:space="preserve">
          <source>Here is a hypothetical usage of the Trace2 API showing the intended usage (without worrying about the actual Git details).</source>
          <target state="translated">He aquí un uso hipotético de la API de Trace2 que muestra el uso previsto (sin preocuparse por los detalles reales de Git).</target>
        </trans-unit>
        <trans-unit id="ffd38e59dd005a380c8a8570731f44b027a45fba" translate="yes" xml:space="preserve">
          <source>Here is a list of the facilities provided by this option parser.</source>
          <target state="translated">He aquí una lista de las facilidades que ofrece este analizador de opciones.</target>
        </trans-unit>
        <trans-unit id="e4035106d997a5f9ffd025f7ed0bd5862edf3733" translate="yes" xml:space="preserve">
          <source>Here is a picture that illustrates how various pieces fit together:</source>
          <target state="translated">Aquí hay una imagen que ilustra cómo varias piezas encajan entre sí:</target>
        </trans-unit>
        <trans-unit id="303a3029ebdf1756e031ccbacc8dc586c90ed37d" translate="yes" xml:space="preserve">
          <source>Here is an ASCII art by Jon Loeliger that illustrates how various &lt;code&gt;diff-*&lt;/code&gt; commands compare things.</source>
          <target state="translated">Aqu&amp;iacute; hay un arte ASCII de Jon Loeliger que ilustra c&amp;oacute;mo varios comandos &lt;code&gt;diff-*&lt;/code&gt; comparan cosas.</target>
        </trans-unit>
        <trans-unit id="a1af358ae94ab7cd9ed6d1b4e51b99fcacedf212" translate="yes" xml:space="preserve">
          <source>Here is an example of a work-flow used by Andreas Ericsson:</source>
          <target state="translated">Aquí hay un ejemplo de un flujo de trabajo utilizado por Andreas Ericsson:</target>
        </trans-unit>
        <trans-unit id="186fb29b724fc88890a2b738e2f88d967cca2e57" translate="yes" xml:space="preserve">
          <source>Here is an example script that comes slightly modified from a real world script used by Junio Hamano &lt;a href=&quot;#4&quot;&gt;[4]&lt;/a&gt;.</source>
          <target state="translated">Aqu&amp;iacute; hay un script de ejemplo que viene ligeramente modificado de un script del mundo real usado por Junio ​​Hamano &lt;a href=&quot;#4&quot;&gt;[4]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ea2d28e72cba49a8087ea617856210e85cc4631a" translate="yes" xml:space="preserve">
          <source>Here is an illustration, by Jon Loeliger. Both commit nodes B and C are parents of commit node A. Parent commits are ordered left-to-right.</source>
          <target state="translated">Aquí hay una ilustración,de Jon Loeliger.Ambos nodos de comisión B y C son padres del nodo de comisión A.Los commits de los padres se ordenan de izquierda a derecha.</target>
        </trans-unit>
        <trans-unit id="01a0e7181fc0932a87393a13bfb324333ce2de29" translate="yes" xml:space="preserve">
          <source>Here is how you would transplant a topic branch based on one branch to another, to pretend that you forked the topic branch from the latter branch, using &lt;code&gt;rebase --onto&lt;/code&gt;.</source>
          <target state="translated">As&amp;iacute; es como trasplantar&amp;iacute;a una rama de tema basada en una rama a otra, para pretender que bifurc&amp;oacute; la rama de tema de la &amp;uacute;ltima rama, usando &lt;code&gt;rebase --onto&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="213d54b0bbf3a7f7afa040a26967e9f565627a3c" translate="yes" xml:space="preserve">
          <source>Here is what Ingo Molnar says about that &lt;a href=&quot;#7&quot;&gt;[7]&lt;/a&gt;:</source>
          <target state="translated">Esto es lo que dice Ingo Molnar sobre eso &lt;a href=&quot;#7&quot;&gt;[7]&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="0ace4715fac22315364196a248067a261a46ae73" translate="yes" xml:space="preserve">
          <source>Here usually &lt;code&gt;&amp;lt;dataref&amp;gt;&lt;/code&gt; must be either a mark reference (&lt;code&gt;:&amp;lt;idnum&amp;gt;&lt;/code&gt;) set by a prior &lt;code&gt;blob&lt;/code&gt; command, or a full 40-byte SHA-1 of an existing Git blob object. If &lt;code&gt;&amp;lt;mode&amp;gt;&lt;/code&gt; is &lt;code&gt;040000`&lt;/code&gt; then &lt;code&gt;&amp;lt;dataref&amp;gt;&lt;/code&gt; must be the full 40-byte SHA-1 of an existing Git tree object or a mark reference set with &lt;code&gt;--import-marks&lt;/code&gt;.</source>
          <target state="translated">Aqu&amp;iacute;, por lo general, &lt;code&gt;&amp;lt;dataref&amp;gt;&lt;/code&gt; debe ser una referencia de marca ( &lt;code&gt;:&amp;lt;idnum&amp;gt;&lt;/code&gt; ) establecida por un comando de &lt;code&gt;blob&lt;/code&gt; anterior , o un SHA-1 completo de 40 bytes de un objeto de blob de Git existente. Si &lt;code&gt;&amp;lt;mode&amp;gt;&lt;/code&gt; es &lt;code&gt;040000`&lt;/code&gt; , &lt;code&gt;&amp;lt;dataref&amp;gt;&lt;/code&gt; debe ser el SHA-1 completo de 40 bytes de un objeto de &amp;aacute;rbol Git existente o un conjunto de referencia de marca con &lt;code&gt;--import-marks&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2beb401ec57f79ec07666eedc396bc9251ab532b" translate="yes" xml:space="preserve">
          <source>Here we use a &lt;code&gt;test.sh&lt;/code&gt; custom script. In this script, if &lt;code&gt;make&lt;/code&gt; fails, we skip the current commit. &lt;code&gt;check_test_case.sh&lt;/code&gt; should &lt;code&gt;exit 0&lt;/code&gt; if the test case passes, and &lt;code&gt;exit 1&lt;/code&gt; otherwise.</source>
          <target state="translated">Aqu&amp;iacute; usamos un &lt;code&gt;test.sh&lt;/code&gt; personalizado test.sh. En este script, si &lt;code&gt;make&lt;/code&gt; falla, omitimos la confirmaci&amp;oacute;n actual. &lt;code&gt;check_test_case.sh&lt;/code&gt; deber&amp;iacute;a &lt;code&gt;exit 0&lt;/code&gt; si el caso de prueba pasa, y &lt;code&gt;exit 1&lt;/code&gt; caso contrario.</target>
        </trans-unit>
        <trans-unit id="4c65aa59e4c90d1dad65ae558dc71a05ca72658c" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example to make it more clear:</source>
          <target state="translated">Aqu&amp;iacute; tienes un ejemplo para que quede m&amp;aacute;s claro:</target>
        </trans-unit>
        <trans-unit id="f876057ef41997694291fae2bce19c94e2c8be27" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s where things get tricky and more specific. The pruning feature doesn&amp;rsquo;t actually care about branches, instead it&amp;rsquo;ll prune local &amp;lt;&amp;rarr; remote-references as a function of the refspec of the remote (see &lt;code&gt;&amp;lt;refspec&amp;gt;&lt;/code&gt; and &lt;a href=&quot;#CRTB&quot;&gt;CONFIGURED REMOTE-TRACKING BRANCHES&lt;/a&gt; above).</source>
          <target state="translated">Aqu&amp;iacute; es donde las cosas se ponen complicadas y m&amp;aacute;s espec&amp;iacute;ficas. La funci&amp;oacute;n de poda en realidad no se preocupa por las ramas, sino que podar&amp;aacute; las &amp;lt;&amp;rarr; referencias remotas locales como una funci&amp;oacute;n de la especificaci&amp;oacute;n de referencia del control remoto (consulte &lt;code&gt;&amp;lt;refspec&amp;gt;&lt;/code&gt; y &lt;a href=&quot;#CRTB&quot;&gt;SUCURSALES DE SEGUIMIENTO REMOTO CONFIGURADAS&lt;/a&gt; arriba).</target>
        </trans-unit>
        <trans-unit id="6e909debf7e14a75a50a127741701f06b0380ed1" translate="yes" xml:space="preserve">
          <source>Here, order matters, so the negative patterns are overridden by the positive patterns that appear lower in the file.</source>
          <target state="translated">Aquí,el orden importa,así que los patrones negativos son anulados por los patrones positivos que aparecen más abajo en el archivo.</target>
        </trans-unit>
        <trans-unit id="e1c70b8a098f60c6e63dbb08701031f93ea135ff" translate="yes" xml:space="preserve">
          <source>Here, take a moment to look at the contents of &lt;code&gt;hello&lt;/code&gt;, and notice how they don&amp;rsquo;t contain the work we just did in &lt;code&gt;mybranch&lt;/code&gt; &amp;mdash; because that work hasn&amp;rsquo;t happened in the &lt;code&gt;master&lt;/code&gt; branch at all. Then do</source>
          <target state="translated">Aqu&amp;iacute;, t&amp;oacute;mese un momento para mirar el contenido de &lt;code&gt;hello&lt;/code&gt; y observe c&amp;oacute;mo no contienen el trabajo que acabamos de hacer en &lt;code&gt;mybranch&lt;/code&gt; , porque ese trabajo no ha sucedido en la rama &lt;code&gt;master&lt;/code&gt; en absoluto. Entonces hazlo</target>
        </trans-unit>
        <trans-unit id="04fe7010553ef714229d324da3944b7bef8ef4bf" translate="yes" xml:space="preserve">
          <source>Here, the merge commits &lt;code&gt;O&lt;/code&gt; and &lt;code&gt;P&lt;/code&gt; contribute extra noise, as they did not actually contribute a change to &lt;code&gt;file.txt&lt;/code&gt;. They only merged a topic that was based on an older version of &lt;code&gt;file.txt&lt;/code&gt;. This is a common issue in repositories using a workflow where many contributors work in parallel and merge their topic branches along a single trunk: manu unrelated merges appear in the &lt;code&gt;--full-history&lt;/code&gt; results.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b3155f9e3fff9d9745dcec6fcafe4ea22b8525d" translate="yes" xml:space="preserve">
          <source>Here, the merge commits &lt;code&gt;R&lt;/code&gt; and &lt;code&gt;N&lt;/code&gt; are included because they pulled the commits &lt;code&gt;X&lt;/code&gt; and &lt;code&gt;R&lt;/code&gt; into the base branch, respectively. These merges are the reason the commits &lt;code&gt;A&lt;/code&gt; and &lt;code&gt;B&lt;/code&gt; do not appear in the default history.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d77fbd432531fa44ab380c6d115f43ea2fbe9fc8" translate="yes" xml:space="preserve">
          <source>Here, we just added another line to &lt;code&gt;hello&lt;/code&gt;, and we used a shorthand for doing both &lt;code&gt;git update-index hello&lt;/code&gt; and &lt;code&gt;git commit&lt;/code&gt; by just giving the filename directly to &lt;code&gt;git commit&lt;/code&gt;, with an &lt;code&gt;-i&lt;/code&gt; flag (it tells Git to &lt;code&gt;include&lt;/code&gt; that file in addition to what you have done to the index file so far when making the commit). The &lt;code&gt;-m&lt;/code&gt; flag is to give the commit log message from the command line.</source>
          <target state="translated">Aqu&amp;iacute;, acabamos de agregar otra l&amp;iacute;nea para &lt;code&gt;hello&lt;/code&gt; , y usamos una abreviatura para hacer &lt;code&gt;git update-index hello&lt;/code&gt; y &lt;code&gt;git commit&lt;/code&gt; simplemente dando el nombre del archivo directamente a &lt;code&gt;git commit&lt;/code&gt; , con una bandera &lt;code&gt;-i&lt;/code&gt; (le dice a Git que &lt;code&gt;include&lt;/code&gt; ese archivo en adem&amp;aacute;s de lo que ha hecho con el archivo de &amp;iacute;ndice hasta ahora al realizar la confirmaci&amp;oacute;n). La bandera &lt;code&gt;-m&lt;/code&gt; es para dar el mensaje de registro de confirmaci&amp;oacute;n desde la l&amp;iacute;nea de comando.</target>
        </trans-unit>
        <trans-unit id="c1304382231014b423d405b863d67d13d9195107" translate="yes" xml:space="preserve">
          <source>Here, we see that the commits A and C (marked with &lt;code&gt;-&lt;/code&gt;) can be dropped from your &lt;code&gt;topic&lt;/code&gt; branch when you rebase it on top of &lt;code&gt;origin/master&lt;/code&gt;, while the commit B (marked with &lt;code&gt;+&lt;/code&gt;) still needs to be kept so that it will be sent to be applied to &lt;code&gt;origin/master&lt;/code&gt;.</source>
          <target state="translated">Aqu&amp;iacute;, vemos que las confirmaciones A y C (marcadas con &lt;code&gt;-&lt;/code&gt; ) se pueden eliminar de la rama de su &lt;code&gt;topic&lt;/code&gt; cuando la rebase en la parte superior de &lt;code&gt;origin/master&lt;/code&gt; , mientras que la confirmaci&amp;oacute;n B (marcada con &lt;code&gt;+&lt;/code&gt; ) a&amp;uacute;n debe mantenerse para que se enviar&amp;aacute; para que se aplique a &lt;code&gt;origin/master&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0cd618d5ab553d5bba621718fb5b54666be9377a" translate="yes" xml:space="preserve">
          <source>High-level commands (porcelain)</source>
          <target state="translated">Comandos de alto nivel (porcelana)</target>
        </trans-unit>
        <trans-unit id="1ac4e7d9472a79a55ebc3b6988fb3cc4f954a3f4" translate="yes" xml:space="preserve">
          <source>High-level operations such as &lt;a href=&quot;git-commit&quot;&gt;git-commit[1]&lt;/a&gt; and &lt;a href=&quot;git-restore&quot;&gt;git-restore[1]&lt;/a&gt; work by moving data between the working tree, the index, and the object database. Git provides low-level operations which perform each of these steps individually.</source>
          <target state="translated">Las operaciones de alto nivel como &lt;a href=&quot;git-commit&quot;&gt;git-commit [1]&lt;/a&gt; y &lt;a href=&quot;git-restore&quot;&gt;git-restore [1]&lt;/a&gt; funcionan moviendo datos entre el &amp;aacute;rbol de trabajo, el &amp;iacute;ndice y la base de datos del objeto. Git proporciona operaciones de bajo nivel que realizan cada uno de estos pasos individualmente.</target>
        </trans-unit>
        <trans-unit id="c1ce0c926615015cc35af4d00f9f659a79fd9f67" translate="yes" xml:space="preserve">
          <source>Higher level SCMs may provide and manage additional information in the &lt;code&gt;$GIT_DIR&lt;/code&gt;.</source>
          <target state="translated">Los SCM de nivel superior pueden proporcionar y gestionar informaci&amp;oacute;n adicional en &lt;code&gt;$GIT_DIR&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dd055ea7ea783c3a5765e06b74c033615ebf91a1" translate="yes" xml:space="preserve">
          <source>Highest and slowest compression level. You can specify any number from 1 to 9 to adjust compression speed and ratio.</source>
          <target state="translated">El nivel de compresión más alto y más lento.Puede especificar cualquier número del 1 al 9 para ajustar la velocidad y la relación de compresión.</target>
        </trans-unit>
        <trans-unit id="dca5de829f06af308665d596314f33baa6a08d8b" translate="yes" xml:space="preserve">
          <source>Highlight changed words using only colors. Implies &lt;code&gt;--color&lt;/code&gt;.</source>
          <target state="translated">Resalte las palabras cambiadas usando solo colores. Implica &lt;code&gt;--color&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d265b329d8480dd12ed84fd1552194f9ed45b640" translate="yes" xml:space="preserve">
          <source>Highlight whitespace errors in the &lt;code&gt;context&lt;/code&gt;, &lt;code&gt;old&lt;/code&gt; or &lt;code&gt;new&lt;/code&gt; lines of the diff. Multiple values are separated by comma, &lt;code&gt;none&lt;/code&gt; resets previous values, &lt;code&gt;default&lt;/code&gt; reset the list to &lt;code&gt;new&lt;/code&gt; and &lt;code&gt;all&lt;/code&gt; is a shorthand for &lt;code&gt;old,new,context&lt;/code&gt;. The whitespace errors are colored with &lt;code&gt;color.diff.whitespace&lt;/code&gt;. The command line option &lt;code&gt;--ws-error-highlight=&amp;lt;kind&amp;gt;&lt;/code&gt; overrides this setting.</source>
          <target state="translated">Resalte los errores de espacio en blanco en el &lt;code&gt;context&lt;/code&gt; o , l&amp;iacute;neas &lt;code&gt;old&lt;/code&gt; o &lt;code&gt;new&lt;/code&gt; de la diferencia. Los valores m&amp;uacute;ltiples est&amp;aacute;n separados por comas, &lt;code&gt;none&lt;/code&gt; restablece los valores anteriores, &lt;code&gt;default&lt;/code&gt; restablecimiento predeterminado de la lista a &lt;code&gt;new&lt;/code&gt; y &lt;code&gt;all&lt;/code&gt; es una abreviatura del &lt;code&gt;old,new,context&lt;/code&gt; . Los errores de espacio en blanco se colorean con &lt;code&gt;color.diff.whitespace&lt;/code&gt; . La opci&amp;oacute;n de l&amp;iacute;nea de comando &lt;code&gt;--ws-error-highlight=&amp;lt;kind&amp;gt;&lt;/code&gt; anula esta configuraci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="ad64982f5f47504010208292cc60b059ddb2341b" translate="yes" xml:space="preserve">
          <source>Highlight whitespace errors in the &lt;code&gt;context&lt;/code&gt;, &lt;code&gt;old&lt;/code&gt; or &lt;code&gt;new&lt;/code&gt; lines of the diff. Multiple values are separated by comma, &lt;code&gt;none&lt;/code&gt; resets previous values, &lt;code&gt;default&lt;/code&gt; reset the list to &lt;code&gt;new&lt;/code&gt; and &lt;code&gt;all&lt;/code&gt; is a shorthand for &lt;code&gt;old,new,context&lt;/code&gt;. When this option is not given, and the configuration variable &lt;code&gt;diff.wsErrorHighlight&lt;/code&gt; is not set, only whitespace errors in &lt;code&gt;new&lt;/code&gt; lines are highlighted. The whitespace errors are colored with &lt;code&gt;color.diff.whitespace&lt;/code&gt;.</source>
          <target state="translated">Resalte los errores de espacio en blanco en el &lt;code&gt;context&lt;/code&gt; o , l&amp;iacute;neas &lt;code&gt;old&lt;/code&gt; o &lt;code&gt;new&lt;/code&gt; de la diferencia. Los valores m&amp;uacute;ltiples est&amp;aacute;n separados por comas, &lt;code&gt;none&lt;/code&gt; restablece los valores anteriores, por &lt;code&gt;default&lt;/code&gt; restablece la lista a &lt;code&gt;new&lt;/code&gt; y &lt;code&gt;all&lt;/code&gt; es una abreviatura del &lt;code&gt;old,new,context&lt;/code&gt; . Cuando no se proporciona esta opci&amp;oacute;n y no se establece la variable de configuraci&amp;oacute;n &lt;code&gt;diff.wsErrorHighlight&lt;/code&gt; , solo se resaltan los errores de espacio en blanco en las l&amp;iacute;neas &lt;code&gt;new&lt;/code&gt; . Los errores de espacio en blanco se colorean con &lt;code&gt;color.diff.whitespace&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dd523af5eca7a4658a007786700bef0bcb653aea" translate="yes" xml:space="preserve">
          <source>Historical options for selecting a type specifier. Prefer instead &lt;code&gt;--type&lt;/code&gt; (see above).</source>
          <target state="translated">Opciones hist&amp;oacute;ricas para seleccionar un especificador de tipo. Prefiera en &lt;code&gt;--type&lt;/code&gt; lugar --type (ver arriba).</target>
        </trans-unit>
        <trans-unit id="d2946930a6bea40f3723a867347d5f13a7e8b511" translate="yes" xml:space="preserve">
          <source>Historically we did not allow binary patch applied without an explicit permission from the user, and this flag was the way to do so. Currently we always allow binary patch application, so this is a no-op.</source>
          <target state="translated">Históricamente no permitíamos que se aplicara un parche binario sin un permiso explícito del usuario,y esta bandera era la forma de hacerlo.Actualmente siempre permitimos la aplicación de parches binarios,así que esto es un no-op.</target>
        </trans-unit>
        <trans-unit id="90ccd6497400b5576aeca1bd94af74aae1e0a250" translate="yes" xml:space="preserve">
          <source>History</source>
          <target state="translated">History</target>
        </trans-unit>
        <trans-unit id="7f2999a0b05d570915b660b4e452265d6ec70628" translate="yes" xml:space="preserve">
          <source>History Simplification</source>
          <target state="translated">Simplificación de la historia</target>
        </trans-unit>
        <trans-unit id="bcdd29839bed9103f5dae5291b4dd975d75a9cc7" translate="yes" xml:space="preserve">
          <source>History traversing commands such as &lt;code&gt;git log&lt;/code&gt; operate on a set of commits, not just a single commit.</source>
          <target state="translated">Los comandos que recorren el historial, como &lt;code&gt;git log&lt;/code&gt; , operan en un conjunto de confirmaciones, no solo en una &amp;uacute;nica confirmaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="173bd843bbaf623a85e5a648a6a9c500533027fc" translate="yes" xml:space="preserve">
          <source>Honor textconv filter settings.</source>
          <target state="translated">Honrar la configuración de los filtros de televisión de texto.</target>
        </trans-unit>
        <trans-unit id="be308a87ab32a83ddd6a199c65b0dc7cb4884727" translate="yes" xml:space="preserve">
          <source>Hook for submit</source>
          <target state="translated">Gancho para presentar</target>
        </trans-unit>
        <trans-unit id="4bd8f3f03a576b2088bd73a2339d07fca1de805d" translate="yes" xml:space="preserve">
          <source>Hooks</source>
          <target state="translated">Hooks</target>
        </trans-unit>
        <trans-unit id="99dc1a330d0acc7fd52ca441a6ce9f9284dba47c" translate="yes" xml:space="preserve">
          <source>Hooks are customization scripts used by various Git commands. A handful of sample hooks are installed when &lt;code&gt;git init&lt;/code&gt; is run, but all of them are disabled by default. To enable, the &lt;code&gt;.sample&lt;/code&gt; suffix has to be removed from the filename by renaming. Read &lt;a href=&quot;githooks&quot;&gt;githooks[5]&lt;/a&gt; for more details about each hook. This directory is ignored if $GIT_COMMON_DIR is set and &quot;$GIT_COMMON_DIR/hooks&quot; will be used instead.</source>
          <target state="translated">Los hooks son scripts de personalizaci&amp;oacute;n utilizados por varios comandos de Git. Se instalan un pu&amp;ntilde;ado de ganchos de muestra cuando se ejecuta &lt;code&gt;git init&lt;/code&gt; , pero todos est&amp;aacute;n deshabilitados de forma predeterminada. Para habilitarlo, el sufijo &lt;code&gt;.sample&lt;/code&gt; debe eliminarse del nombre de archivo cambiando el nombre. Lea &lt;a href=&quot;githooks&quot;&gt;githooks [5]&lt;/a&gt; para obtener m&amp;aacute;s detalles sobre cada gancho. Este directorio se ignora si se establece $ GIT_COMMON_DIR y en su lugar se usar&amp;aacute; &quot;$ GIT_COMMON_DIR / hooks&quot;.</target>
        </trans-unit>
        <trans-unit id="06a3036cbe5b8e0ded4c91cf35d4acf2e8ad8f53" translate="yes" xml:space="preserve">
          <source>Hooks are programs you can place in a hooks directory to trigger actions at certain points in git&amp;rsquo;s execution. Hooks that don&amp;rsquo;t have the executable bit set are ignored.</source>
          <target state="translated">Los hooks son programas que puede colocar en un directorio de hooks para activar acciones en ciertos puntos de la ejecuci&amp;oacute;n de git. Los ganchos que no tienen el bit ejecutable establecido se ignoran.</target>
        </trans-unit>
        <trans-unit id="bf9a913e0a40d8bcbb788ae480caabb75549e706" translate="yes" xml:space="preserve">
          <source>Hooks can get their arguments via the environment, command-line arguments, and stdin. See the documentation for each hook below for details.</source>
          <target state="translated">Los ganchos pueden obtener sus argumentos a través del entorno,argumentos de línea de comandos y stdin.Vea la documentación de cada gancho más abajo para más detalles.</target>
        </trans-unit>
        <trans-unit id="ada52d2258e33812dc48261a96d9e1bee90a02e9" translate="yes" xml:space="preserve">
          <source>Hooks for submit</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b25ef249acb89a2076c9e4eabf85c1464e0ce20" translate="yes" xml:space="preserve">
          <source>Hooks used by Git</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16c7452920ac3fe30578ebea0bb92b7bf8bbfaa1" translate="yes" xml:space="preserve">
          <source>Host specified as an option to all p4 commands, with &lt;code&gt;-h &amp;lt;host&amp;gt;&lt;/code&gt;. The environment variable &lt;code&gt;P4HOST&lt;/code&gt; can be used instead.</source>
          <target state="translated">Host especificado como una opci&amp;oacute;n para todos los comandos p4, con &lt;code&gt;-h &amp;lt;host&amp;gt;&lt;/code&gt; . En su &lt;code&gt;P4HOST&lt;/code&gt; se puede utilizar la variable de entorno P4HOST .</target>
        </trans-unit>
        <trans-unit id="e3a4f74d3860a1e7164c5016083b909a49e9f48e" translate="yes" xml:space="preserve">
          <source>Host/domain name (e.g., &lt;code&gt;example.com&lt;/code&gt; in &lt;code&gt;https://example.com/&lt;/code&gt;). This field must match between the config key and the URL. It is possible to specify a &lt;code&gt;*&lt;/code&gt; as part of the host name to match all subdomains at this level. &lt;code&gt;https://*.example.com/&lt;/code&gt; for example would match &lt;code&gt;https://foo.example.com/&lt;/code&gt;, but not &lt;code&gt;https://foo.bar.example.com/&lt;/code&gt;.</source>
          <target state="translated">Nombre de host / dominio (por ejemplo, &lt;code&gt;example.com&lt;/code&gt; en &lt;code&gt;https://example.com/&lt;/code&gt; ). Este campo debe coincidir entre la clave de configuraci&amp;oacute;n y la URL. Es posible especificar un &lt;code&gt;*&lt;/code&gt; como parte del nombre de host para que coincida con todos los subdominios en este nivel. &lt;code&gt;https://*.example.com/&lt;/code&gt; , por ejemplo, coincidir&amp;iacute;a con &lt;code&gt;https://foo.example.com/&lt;/code&gt; , pero no con &lt;code&gt;https://foo.bar.example.com/&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="62bb4be23aa04882a53a58830164455da0d43aac" translate="yes" xml:space="preserve">
          <source>How Git stores objects efficiently: pack files</source>
          <target state="translated">Cómo Git almacena objetos de forma eficiente:empaquetar archivos</target>
        </trans-unit>
        <trans-unit id="fc3082d534384228eeed70dd2356631d4f563e7e" translate="yes" xml:space="preserve">
          <source>How conflicts are presented</source>
          <target state="translated">Cómo se presentan los conflictos</target>
        </trans-unit>
        <trans-unit id="632a7344e68629673f46b61122a8d717f4af38d1" translate="yes" xml:space="preserve">
          <source>How does the merge work?</source>
          <target state="translated">¿Cómo funciona la fusión?</target>
        </trans-unit>
        <trans-unit id="ee0a93def9e459d81d86f0f444af48fed200edd7" translate="yes" xml:space="preserve">
          <source>How many HTTP requests to launch in parallel. Can be overridden by the &lt;code&gt;GIT_HTTP_MAX_REQUESTS&lt;/code&gt; environment variable. Default is 5.</source>
          <target state="translated">Cu&amp;aacute;ntas solicitudes HTTP lanzar en paralelo. Puede ser anulado por la variable de entorno &lt;code&gt;GIT_HTTP_MAX_REQUESTS&lt;/code&gt; . El valor predeterminado es 5.</target>
        </trans-unit>
        <trans-unit id="88ba6c6b51f5b68d7988ac607f3c426807b883bb" translate="yes" xml:space="preserve">
          <source>How to best handle custom GIT_TRACE_&amp;lt;key&amp;gt; messages?</source>
          <target state="translated">&amp;iquest;Cu&amp;aacute;l es la mejor manera de manejar los mensajes personalizados GIT_TRACE_ &amp;lt;key&amp;gt;?</target>
        </trans-unit>
        <trans-unit id="e6e1af910bb5a856e3b4ead0799265f2a1064f75" translate="yes" xml:space="preserve">
          <source>How to check out a different version of a project</source>
          <target state="translated">Cómo comprobar una versión diferente de un proyecto</target>
        </trans-unit>
        <trans-unit id="d2b9978a0ab6bcc1a292a13931b1286539811f55" translate="yes" xml:space="preserve">
          <source>How to get a Git repository</source>
          <target state="translated">Cómo conseguir un repositorio Git</target>
        </trans-unit>
        <trans-unit id="d7d2ba06f3721900039efaca56489e6a84b511d3" translate="yes" xml:space="preserve">
          <source>How to get a Git repository with minimal history</source>
          <target state="translated">Cómo conseguir un repositorio Git con un historial mínimo</target>
        </trans-unit>
        <trans-unit id="d757cda7bc3ea5053c7cf45f6afca8dbb51305c3" translate="yes" xml:space="preserve">
          <source>How to handle commits that are not empty to start and are not clean cherry-picks of any upstream commit, but which become empty after rebasing (because they contain a subset of already upstream changes). With drop (the default), commits that become empty are dropped. With keep, such commits are kept. With ask (implied by --interactive), the rebase will halt when an empty commit is applied allowing you to choose whether to drop it, edit files more, or just commit the empty changes. Other options, like --exec, will use the default of drop unless -i/--interactive is explicitly specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a7eba29926bb4a386242f44bbf4f12c6f691a0c" translate="yes" xml:space="preserve">
          <source>How to make a commit</source>
          <target state="translated">Cómo hacer un compromiso</target>
        </trans-unit>
        <trans-unit id="a8f8fd0d0e36d30f7fbe331a10b1e8f318a5f903" translate="yes" xml:space="preserve">
          <source>How to merge</source>
          <target state="translated">Cómo fusionarse</target>
        </trans-unit>
        <trans-unit id="813e8d48c24190b471043b3ab0d44e357c5f2791" translate="yes" xml:space="preserve">
          <source>How to resolve conflicts</source>
          <target state="translated">Cómo resolver los conflictos</target>
        </trans-unit>
        <trans-unit id="93e750cda509aa41796eb9d7a6cb3afbf2365356" translate="yes" xml:space="preserve">
          <source>How to use bisect to find a regression</source>
          <target state="translated">Cómo usar la bisectriz para encontrar una regresión</target>
        </trans-unit>
        <trans-unit id="c54b4ab81b97a7d870be1fb485f52b39766adb14" translate="yes" xml:space="preserve">
          <source>However &amp;mdash; it&amp;rsquo;s such a common thing to &lt;code&gt;fetch&lt;/code&gt; and then immediately &lt;code&gt;merge&lt;/code&gt;, that it&amp;rsquo;s called &lt;code&gt;git pull&lt;/code&gt;, and you can simply do</source>
          <target state="translated">Sin embargo, es algo tan com&amp;uacute;n &lt;code&gt;fetch&lt;/code&gt; y luego &lt;code&gt;merge&lt;/code&gt; inmediatamente , que se llama &lt;code&gt;git pull&lt;/code&gt; , y simplemente puede hacer</target>
        </trans-unit>
        <trans-unit id="d70de578cd37f18e0cd1ccdb7488c789f08117d4" translate="yes" xml:space="preserve">
          <source>However &amp;mdash; normally you&amp;rsquo;d never use &lt;code&gt;git write-tree&lt;/code&gt; on its own, because normally you always commit a tree into a commit object using the &lt;code&gt;git commit-tree&lt;/code&gt; command. In fact, it&amp;rsquo;s easier to not actually use &lt;code&gt;git write-tree&lt;/code&gt; on its own at all, but to just pass its result in as an argument to &lt;code&gt;git commit-tree&lt;/code&gt;.</source>
          <target state="translated">Sin embargo, normalmente nunca &lt;code&gt;git write-tree&lt;/code&gt; por s&amp;iacute; solo, porque normalmente siempre consigues un &amp;aacute;rbol en un objeto de confirmaci&amp;oacute;n usando el comando &lt;code&gt;git commit-tree&lt;/code&gt; . De hecho, es m&amp;aacute;s f&amp;aacute;cil no usar &lt;code&gt;git write-tree&lt;/code&gt; por s&amp;iacute; solo, sino simplemente pasar su resultado como un argumento a &lt;code&gt;git commit-tree&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b251a49d303741aee81dcafea3be641705e5d2d3" translate="yes" xml:space="preserve">
          <source>However repacking the repository is necessary to improve data locality and access performance. It can also take hours on extremely large projects (especially if -f and a large --window parameter is used). Since repacking is safe to run alongside readers and writers, run the repack in the background and let it finish when it finishes. There is no reason to wait to explore your new Git project!</source>
          <target state="translated">Sin embargo,es necesario volver a empaquetar el depósito para mejorar la localización de los datos y el rendimiento del acceso.También puede llevar horas en proyectos extremadamente grandes (especialmente si se utiliza el parámetro -f y una gran -ventana).Ya que el reempaquetado es seguro para ejecutarse junto con los lectores y escritores,ejecute el reempaquetado en segundo plano y déjelo terminar cuando termine.No hay razón para esperar a explorar tu nuevo proyecto de Git!</target>
        </trans-unit>
        <trans-unit id="4b948e81d3b66aa74b95ff1de52609dbf8f7d04b" translate="yes" xml:space="preserve">
          <source>However, Git does &lt;strong&gt;not&lt;/strong&gt; (and it should not) change tags behind users back. So if somebody already got the old tag, doing a &lt;code&gt;git pull&lt;/code&gt; on your tree shouldn&amp;rsquo;t just make them overwrite the old one.</source>
          <target state="translated">Sin embargo, Git hace &lt;strong&gt;no&lt;/strong&gt; (y no debe) cambiar las etiquetas detr&amp;aacute;s de la espalda usuarios. Entonces, si alguien ya obtuvo la etiqueta anterior, hacer un &lt;code&gt;git pull&lt;/code&gt; en su &amp;aacute;rbol no deber&amp;iacute;a hacer que sobrescriban la anterior.</target>
        </trans-unit>
        <trans-unit id="774132ee5dd559ea340879a21fd99f6ff4549c5d" translate="yes" xml:space="preserve">
          <source>However, an understanding of these low-level tools can be helpful if you want to understand Git&amp;rsquo;s internals.</source>
          <target state="translated">Sin embargo, comprender estas herramientas de bajo nivel puede ser &amp;uacute;til si desea comprender los aspectos internos de Git.</target>
        </trans-unit>
        <trans-unit id="866f600e87142f901a49d55ea62ea322295c395d" translate="yes" xml:space="preserve">
          <source>However, if the --combined-all-paths option is provided, instead of a two-line from-file/to-file you get a N+1 line from-file/to-file header, where N is the number of parents in the merge commit</source>
          <target state="translated">Sin embargo,si se proporciona la opción --combinado-todas-las-caminos,en lugar de una línea de dos líneas desde-archivo/a-archivo se obtiene un encabezado de N+1 línea desde-archivo/a-archivo,donde N es el número de padres en el commit de fusión</target>
        </trans-unit>
        <trans-unit id="24c47b91e42f0b5da2ef1b1de98db109a45643ab" translate="yes" xml:space="preserve">
          <source>However, if the current branch is an ancestor of the other&amp;mdash;​so every commit present in the current branch is already contained in the other branch&amp;mdash;​then Git just performs a &quot;fast-forward&quot;; the head of the current branch is moved forward to point at the head of the merged-in branch, without any new commits being created.</source>
          <target state="translated">Sin embargo, si la rama actual es un antepasado de la otra, por lo que cada confirmaci&amp;oacute;n presente en la rama actual ya est&amp;aacute; contenida en la otra rama, entonces Git simplemente realiza un &quot;avance r&amp;aacute;pido&quot;; la cabecera de la rama actual se mueve hacia adelante para apuntar a la cabecera de la rama fusionada, sin que se creen nuevas confirmaciones.</target>
        </trans-unit>
        <trans-unit id="38320aec0b4074b6ba1fc6f9446c9d65a3296509" translate="yes" xml:space="preserve">
          <source>However, if the file is absent from the tree of some commit, a simple &lt;code&gt;rm filename&lt;/code&gt; will fail for that tree and commit. Thus you may instead want to use &lt;code&gt;rm -f filename&lt;/code&gt; as the script.</source>
          <target state="translated">Sin embargo, si el archivo est&amp;aacute; ausente del &amp;aacute;rbol de alguna confirmaci&amp;oacute;n, un &lt;code&gt;rm filename&lt;/code&gt; simple fallar&amp;aacute; para ese &amp;aacute;rbol y se confirmar&amp;aacute;. Por lo tanto, es posible que desee utilizar &lt;code&gt;rm -f filename&lt;/code&gt; como script.</target>
        </trans-unit>
        <trans-unit id="083d51e29026b4e1a08bfd658353fe31999e3907" translate="yes" xml:space="preserve">
          <source>However, if you decide to jump to a new version, or check out somebody else&amp;rsquo;s version, or just restore a previous tree, you&amp;rsquo;d populate your index file with read-tree, and then you need to check out the result with</source>
          <target state="translated">Sin embargo, si decide saltar a una nueva versi&amp;oacute;n, o comprobar la versi&amp;oacute;n de otra persona, o simplemente restaurar un &amp;aacute;rbol anterior, completar&amp;aacute; su archivo de &amp;iacute;ndice con read-tree, y luego deber&amp;aacute; verificar el resultado con</target>
        </trans-unit>
        <trans-unit id="d73cbcd65f07eabb528955f0d408caeaef9ec132" translate="yes" xml:space="preserve">
          <source>However, if you have local changes in the working tree that would be overwritten by this merge, &lt;code&gt;git read-tree&lt;/code&gt; will refuse to run to prevent your changes from being lost.</source>
          <target state="translated">Sin embargo, si tiene cambios locales en el &amp;aacute;rbol de trabajo que ser&amp;iacute;an sobrescritos por esta fusi&amp;oacute;n, &lt;code&gt;git read-tree&lt;/code&gt; se negar&amp;aacute; a ejecutarse para evitar que se pierdan los cambios.</target>
        </trans-unit>
        <trans-unit id="0f801baa64ce652ffc6d36336f6a234c862e64a0" translate="yes" xml:space="preserve">
          <source>However, if you prefer to keep the history in mywork a simple series of commits without any merges, you may instead choose to use &lt;a href=&quot;git-rebase&quot;&gt;git-rebase[1]&lt;/a&gt;:</source>
          <target state="translated">Sin embargo, si prefiere mantener el historial en mywork como una serie simple de confirmaciones sin fusiones, puede optar por usar &lt;a href=&quot;git-rebase&quot;&gt;git-rebase [1]&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="6a9f204773ec4f6bc12691a9ec080236d437d186" translate="yes" xml:space="preserve">
          <source>However, if you really only want to replace the line for the default proxy, i.e. the one without a &quot;for &amp;hellip;​&quot; postfix, do something like this:</source>
          <target state="translated">Sin embargo, si realmente solo desea reemplazar la l&amp;iacute;nea para el proxy predeterminado, es decir, el que no tiene un sufijo &quot;para ...&quot;, haga algo como esto:</target>
        </trans-unit>
        <trans-unit id="fe54b4a5cce25da95a527e803024815678af4c5c" translate="yes" xml:space="preserve">
          <source>However, if you skip a commit adjacent to the one you are looking for, Git will be unable to tell exactly which of those commits was the first bad one.</source>
          <target state="translated">Sin embargo,si te saltas un compromiso adyacente al que estás buscando,Git será incapaz de decir exactamente cuál de esos compromisos fue el primero malo.</target>
        </trans-unit>
        <trans-unit id="e9adef201cc69834664c04ac9c044e6acc3b8daa" translate="yes" xml:space="preserve">
          <source>However, it is not necessary to create branches in p4 to be able to use them like branches. Because it is difficult to infer branch relationships automatically, a Git configuration setting &lt;code&gt;git-p4.branchList&lt;/code&gt; can be used to explicitly identify branch relationships. It is a list of &quot;source:destination&quot; pairs, like a simple p4 branch specification, where the &quot;source&quot; and &quot;destination&quot; are the path elements in the p4 repository. The example above relied on the presence of the p4 branch. Without p4 branches, the same result will occur with:</source>
          <target state="translated">Sin embargo, no es necesario crear ramas en p4 para poder usarlas como ramas. Debido a que es dif&amp;iacute;cil inferir las relaciones entre las ramas de forma autom&amp;aacute;tica, se puede usar una configuraci&amp;oacute;n de Git &lt;code&gt;git-p4.branchList&lt;/code&gt; para identificar expl&amp;iacute;citamente las relaciones entre las ramas. Es una lista de pares &quot;fuente: destino&quot;, como una simple especificaci&amp;oacute;n de rama p4, donde &quot;fuente&quot; y &quot;destino&quot; son los elementos de ruta en el repositorio p4. El ejemplo anterior se bas&amp;oacute; en la presencia de la rama p4. Sin ramas p4, el mismo resultado ocurrir&amp;aacute; con:</target>
        </trans-unit>
        <trans-unit id="c71bf4b100c16d667a048d4524ffef40edf8598e" translate="yes" xml:space="preserve">
          <source>However, one may also want to specify other diff driver attributes. For example, you might want to use &lt;code&gt;textconv&lt;/code&gt; to convert postscript files to an ASCII representation for human viewing, but otherwise treat them as binary files. You cannot specify both &lt;code&gt;-diff&lt;/code&gt; and &lt;code&gt;diff=ps&lt;/code&gt; attributes. The solution is to use the &lt;code&gt;diff.*.binary&lt;/code&gt; config option:</source>
          <target state="translated">Sin embargo, es posible que tambi&amp;eacute;n desee especificar otros atributos del controlador de diferencias. Por ejemplo, es posible que desee utilizar &lt;code&gt;textconv&lt;/code&gt; para convertir archivos postscript a una representaci&amp;oacute;n ASCII para visualizaci&amp;oacute;n humana, pero de lo contrario tr&amp;aacute;telos como archivos binarios. No puede especificar los &lt;code&gt;-diff&lt;/code&gt; y &lt;code&gt;diff=ps&lt;/code&gt; . La soluci&amp;oacute;n es usar la opci&amp;oacute;n de configuraci&amp;oacute;n &lt;code&gt;diff.*.binary&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="c15b1eea7ada51b9540f36c6d7433749c2518719" translate="yes" xml:space="preserve">
          <source>However, our next step is to commit the &lt;strong&gt;change&lt;/strong&gt; we did, and again, to understand what&amp;rsquo;s going on, keep in mind the difference between &quot;working tree contents&quot;, &quot;index file&quot; and &quot;committed tree&quot;. We have changes in the working tree that we want to commit, and we always have to work through the index file, so the first thing we need to do is to update the index cache:</source>
          <target state="translated">Sin embargo, nuestro siguiente paso es confirmar el &lt;strong&gt;cambio&lt;/strong&gt; que hicimos, y nuevamente, para entender qu&amp;eacute; est&amp;aacute; pasando, tenga en cuenta la diferencia entre &quot;contenido del &amp;aacute;rbol de trabajo&quot;, &quot;archivo de &amp;iacute;ndice&quot; y &quot;&amp;aacute;rbol comprometido&quot;. Tenemos cambios en el &amp;aacute;rbol de trabajo que queremos confirmar, y siempre tenemos que trabajar a trav&amp;eacute;s del archivo de &amp;iacute;ndice, por lo que lo primero que debemos hacer es actualizar la cach&amp;eacute; de &amp;iacute;ndice:</target>
        </trans-unit>
        <trans-unit id="066e262ce5d073a40098065a4bfe593a37b357ee" translate="yes" xml:space="preserve">
          <source>However, since Git knows about them, you can now start using some of the most basic Git commands to manipulate the files or look at their status.</source>
          <target state="translated">Sin embargo,como Git los conoce,puedes empezar a usar algunos de los comandos más básicos de Git para manipular los archivos o mirar su estado.</target>
        </trans-unit>
        <trans-unit id="2d4b86f86d3381add9d6753c2a6a37207cb69976" translate="yes" xml:space="preserve">
          <source>However, the &lt;a href=&quot;git-pull&quot;&gt;git-pull[1]&lt;/a&gt; command provides a way to do this in one step:</source>
          <target state="translated">Sin embargo, el comando &lt;a href=&quot;git-pull&quot;&gt;git-pull [1]&lt;/a&gt; proporciona una forma de hacer esto en un solo paso:</target>
        </trans-unit>
        <trans-unit id="b2062c8611299450fbfa8b88f93e46840eed9772" translate="yes" xml:space="preserve">
          <source>However, the commits do not form a simple list; Git allows lines of development to diverge and then reconverge, and the point where two lines of development reconverge is called a &quot;merge&quot;. The commit representing a merge can therefore have more than one parent, with each parent representing the most recent commit on one of the lines of development leading to that point.</source>
          <target state="translated">Sin embargo,los compromisos no forman una simple lista;Git permite que las líneas de desarrollo se separen y luego se vuelvan a unir,y el punto en el que dos líneas de desarrollo se vuelven a unir se denomina &quot;fusión&quot;.Por lo tanto,la confirmación que representa una fusión puede tener más de un progenitor,y cada progenitor representa la confirmación más reciente en una de las líneas de desarrollo que conducen a ese punto.</target>
        </trans-unit>
        <trans-unit id="dc3c84ebe58db76ac38c1e3a6d7daded7c305410" translate="yes" xml:space="preserve">
          <source>However, the more common way to do this is to maintain a separate public repository (usually on a different host) for others to pull changes from. This is usually more convenient, and allows you to cleanly separate private work in progress from publicly visible work.</source>
          <target state="translated">Sin embargo,la forma más común de hacerlo es mantener un depósito público separado (normalmente en un host diferente)para que otros puedan sacar los cambios.Esto suele ser más conveniente,y permite separar limpiamente el trabajo privado en curso del trabajo público visible.</target>
        </trans-unit>
        <trans-unit id="755c039a0c20727e4839caf6deef253d613f16de" translate="yes" xml:space="preserve">
          <source>However, there are cases in which your local changes do conflict with the upstream changes, and &lt;code&gt;git pull&lt;/code&gt; refuses to overwrite your changes. In such a case, you can stash your changes away, perform a pull, and then unstash, like this:</source>
          <target state="translated">Sin embargo, hay casos en los que los cambios locales entran en conflicto con los cambios anteriores y &lt;code&gt;git pull&lt;/code&gt; se niega a sobrescribir los cambios. En tal caso, puede guardar sus cambios, realizar una extracci&amp;oacute;n y luego deshacerlos, de esta manera:</target>
        </trans-unit>
        <trans-unit id="e43d419a26518c38e69ee02a5a541b221da6c649" translate="yes" xml:space="preserve">
          <source>However, there are legitimate reasons why a developer may want to recreate merge commits: to keep the branch structure (or &quot;commit topology&quot;) when working on multiple, inter-related branches.</source>
          <target state="translated">Sin embargo,hay razones legítimas por las que un promotor puede querer recrear los commits de fusión:mantener la estructura de ramas (o &quot;topología de commit&quot;)cuando se trabaja en múltiples ramas interrelacionadas.</target>
        </trans-unit>
        <trans-unit id="89adb927099ba4a8289673a41ab8ec24ea6e4abd" translate="yes" xml:space="preserve">
          <source>However, there is a situation in which it can be useful to violate this assumption.</source>
          <target state="translated">Sin embargo,hay una situación en la que puede ser útil violar esta suposición.</target>
        </trans-unit>
        <trans-unit id="b068287d80433091fc93a07d4af49d57d3676c5d" translate="yes" xml:space="preserve">
          <source>However, there is no particular reason to merge in one branch first and the other next, when what you have are a set of truly independent changes (if the order mattered, then they are not independent by definition). You could instead merge those two branches into the current branch at once. First let&amp;rsquo;s undo what we just did and start over. We would want to get the master branch before these two merges by resetting it to &lt;code&gt;master~2&lt;/code&gt;:</source>
          <target state="translated">Sin embargo, no hay ninguna raz&amp;oacute;n en particular para fusionar una rama primero y la otra a continuaci&amp;oacute;n, cuando lo que tienes es un conjunto de cambios verdaderamente independientes (si el orden importaba, entonces no son independientes por definici&amp;oacute;n). En su lugar, puede fusionar esas dos ramas en la rama actual a la vez. Primero deshagamos lo que acabamos de hacer y empecemos de nuevo. Querr&amp;iacute;amos obtener la rama maestra antes de estas dos fusiones restableci&amp;eacute;ndola en &lt;code&gt;master~2&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="76dbad7bbd23560fcc8351e42a22aad055901cd6" translate="yes" xml:space="preserve">
          <source>However, these features fall short of a complete solution, so users who run commands concurrently have to live with some risk of corruption (which seems to be low in practice).</source>
          <target state="translated">Sin embargo,estas características no constituyen una solución completa,por lo que los usuarios que ejecutan comandos simultáneamente tienen que vivir con cierto riesgo de corrupción (que parece ser bajo en la práctica).</target>
        </trans-unit>
        <trans-unit id="f41fcda082e8874086be41192b1abbea2d3295da" translate="yes" xml:space="preserve">
          <source>However, this is &lt;strong&gt;NOT&lt;/strong&gt; allowed for switches with an optional value, where the &lt;code&gt;stuck&lt;/code&gt; form must be used:</source>
          <target state="translated">Sin embargo, esto &lt;strong&gt;NO&lt;/strong&gt; est&amp;aacute; permitido para conmutadores con un valor opcional, donde &lt;code&gt;stuck&lt;/code&gt; debe usar el formulario atascado :</target>
        </trans-unit>
        <trans-unit id="4da9d9ef7c6a0e88df4192c01891a87d88664b48" translate="yes" xml:space="preserve">
          <source>However, this is only a convention, and you can name your branches anything you want, and don&amp;rsquo;t have to ever even &lt;code&gt;have&lt;/code&gt; a &lt;code&gt;master&lt;/code&gt; branch. A number of the Git tools will assume that &lt;code&gt;.git/HEAD&lt;/code&gt; is valid, though.</source>
          <target state="translated">Sin embargo, esto es solo una convenci&amp;oacute;n, y puede nombrar sus ramas como desee, y ni siquiera &lt;code&gt;have&lt;/code&gt; una rama &lt;code&gt;master&lt;/code&gt; . Sin embargo, algunas de las herramientas de Git supondr&amp;aacute;n que &lt;code&gt;.git/HEAD&lt;/code&gt; es v&amp;aacute;lido.</target>
        </trans-unit>
        <trans-unit id="a7abfde622702125ddcfca8f6b53cf2f29202a6d" translate="yes" xml:space="preserve">
          <source>However, this last command can be dangerous in some cases&amp;mdash;​never throw away a commit you have already committed if that commit may itself have been merged into another branch, as doing so may confuse further merges.</source>
          <target state="translated">Sin embargo, este &amp;uacute;ltimo comando puede ser peligroso en algunos casos; nunca deseche una confirmaci&amp;oacute;n que ya haya cometido si esa confirmaci&amp;oacute;n puede haberse fusionado en otra rama, ya que hacerlo puede confundir m&amp;aacute;s fusiones.</target>
        </trans-unit>
        <trans-unit id="ba574b0c600bcf4947d9fc0b827ea5d5666b3028" translate="yes" xml:space="preserve">
          <source>However, when no confusion will result, we often just use the term &quot;branch&quot; both for branches and for branch heads.</source>
          <target state="translated">Sin embargo,cuando no hay confusión,a menudo utilizamos el término &quot;rama&quot; tanto para las ramas como para las cabezas de las ramas.</target>
        </trans-unit>
        <trans-unit id="2952d19c4dc617ab4a4ae6abe65c729f11b54f82" translate="yes" xml:space="preserve">
          <source>However, when you do &lt;code&gt;git read-tree&lt;/code&gt; with three trees, the &quot;stage&quot; starts out at 1.</source>
          <target state="translated">Sin embargo, cuando haces &lt;code&gt;git read-tree&lt;/code&gt; con tres &amp;aacute;rboles, la &quot;etapa&quot; comienza en 1.</target>
        </trans-unit>
        <trans-unit id="28dd1f9126b301b96d86409d92ae4b0d38938148" translate="yes" xml:space="preserve">
          <source>However, while there is nothing wrong with Git&amp;rsquo;s support for shared repositories, this mode of operation is not generally recommended, simply because the mode of collaboration that Git supports&amp;mdash;​by exchanging patches and pulling from public repositories&amp;mdash;​has so many advantages over the central shared repository:</source>
          <target state="translated">Sin embargo, aunque no hay nada de malo en el soporte de Git para repositorios compartidos, este modo de operaci&amp;oacute;n generalmente no se recomienda, simplemente porque el modo de colaboraci&amp;oacute;n que admite Git (intercambiando parches y extrayendo de repositorios p&amp;uacute;blicos) tiene muchas ventajas sobre el repositorio compartido central:</target>
        </trans-unit>
        <trans-unit id="6ee73f3ad469e31cc982a856f9ec909f123f7a3b" translate="yes" xml:space="preserve">
          <source>However, you already dirtied the index (i.e. your index does not match the &lt;code&gt;HEAD&lt;/code&gt; commit). But you know the pull you are going to make does not affect &lt;code&gt;frotz.c&lt;/code&gt; or &lt;code&gt;filfre.c&lt;/code&gt;, so you revert the index changes for these two files. Your changes in working tree remain there.</source>
          <target state="translated">Sin embargo, ya ensuci&amp;oacute; el &amp;iacute;ndice (es decir, su &amp;iacute;ndice no coincide con la confirmaci&amp;oacute;n &lt;code&gt;HEAD&lt;/code&gt; ). Pero sabe que la extracci&amp;oacute;n que va a realizar no afecta a &lt;code&gt;frotz.c&lt;/code&gt; ni a &lt;code&gt;filfre.c&lt;/code&gt; , por lo que revierte los cambios de &amp;iacute;ndice para estos dos archivos. Sus cambios en el &amp;aacute;rbol de trabajo permanecen ah&amp;iacute;.</target>
        </trans-unit>
        <trans-unit id="9e2e4a0fcb3942d8a82c6a2331932351c7c8a259" translate="yes" xml:space="preserve">
          <source>However, your &quot;wrong&quot; branch and correct &quot;mytopic&quot; branch may differ in files that you have modified locally, in which case the above switch would fail like this:</source>
          <target state="translated">Sin embargo,su rama &quot;equivocada&quot; y su rama &quot;miope&quot; correcta pueden diferir en los archivos que haya modificado localmente,en cuyo caso el interruptor anterior fallaría así:</target>
        </trans-unit>
        <trans-unit id="6a9281c350a487a356b48bdfa67abfef81982489" translate="yes" xml:space="preserve">
          <source>However, your &quot;wrong&quot; branch and correct &lt;code&gt;mytopic&lt;/code&gt; branch may differ in files that you have modified locally, in which case the above checkout would fail like this:</source>
          <target state="translated">Sin embargo, su rama &quot;incorrecta&quot; y &lt;code&gt;mytopic&lt;/code&gt; rama mytopic correcta pueden diferir en los archivos que ha modificado localmente, en cuyo caso la verificaci&amp;oacute;n anterior fallar&amp;iacute;a as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="eaf133288702a5baf1a98928a127236dfad5386f" translate="yes" xml:space="preserve">
          <source>I most actively use it during the merge window (when a lot of trees get merged upstream and when the influx of bugs is the highest) - and yes, there have been cases that i used it multiple times a day. My average is roughly once a day.</source>
          <target state="translated">Lo uso más activamente durante la ventana de fusión (cuando muchos árboles se fusionan río arriba y cuando la afluencia de bichos es la más alta)-y sí,ha habido casos en los que lo he usado varias veces al día.Mi promedio es aproximadamente una vez al día.</target>
        </trans-unit>
        <trans-unit id="27777a39e933776b5c584d121830042fbc955f15" translate="yes" xml:space="preserve">
          <source>I.e. a fast-forward of commits and tags outside &lt;code&gt;refs/{tags,heads}/*&lt;/code&gt; is allowed, even in cases where what&amp;rsquo;s being fast-forwarded is not a commit, but a tag object which happens to point to a new commit which is a fast-forward of the commit the last tag (or commit) it&amp;rsquo;s replacing. Replacing a tag with an entirely different tag is also allowed, if it points to the same commit, as well as pushing a peeled tag, i.e. pushing the commit that existing tag object points to, or a new tag object which an existing commit points to.</source>
          <target state="translated">Es decir, se permite un avance r&amp;aacute;pido de confirmaciones y etiquetas fuera de las &lt;code&gt;refs/{tags,heads}/*&lt;/code&gt; , incluso en los casos en que lo que se adelanta r&amp;aacute;pidamente no es una confirmaci&amp;oacute;n, sino un objeto de etiqueta que apunta a una nueva confirmaci&amp;oacute;n que es un avance r&amp;aacute;pido de la confirmaci&amp;oacute;n de la &amp;uacute;ltima etiqueta (o confirmaci&amp;oacute;n) que est&amp;aacute; reemplazando. Tambi&amp;eacute;n se permite reemplazar una etiqueta con una etiqueta completamente diferente, si apunta a la misma confirmaci&amp;oacute;n, as&amp;iacute; como empujar una etiqueta pelada, es decir, empujar la confirmaci&amp;oacute;n a la que apunta el objeto de etiqueta existente, o un nuevo objeto de etiqueta al que apunta una confirmaci&amp;oacute;n existente .</target>
        </trans-unit>
        <trans-unit id="f6dcea8e2840d6db982f7ea79204e026c88b3ea6" translate="yes" xml:space="preserve">
          <source>I.e. create a &lt;code&gt;base&lt;/code&gt; tag for versions of the upstream code that you&amp;rsquo;ve seen and are willing to overwrite, then rewrite history, and finally force push changes to &lt;code&gt;master&lt;/code&gt; if the remote version is still at &lt;code&gt;base&lt;/code&gt;, regardless of what your local &lt;code&gt;remotes/origin/master&lt;/code&gt; has been updated to in the background.</source>
          <target state="translated">Es decir, cree una etiqueta &lt;code&gt;base&lt;/code&gt; para las versiones del c&amp;oacute;digo ascendente que ha visto y est&amp;aacute; dispuesto a sobrescribir, luego reescriba el historial y finalmente fuerce los cambios de empuje al &lt;code&gt;master&lt;/code&gt; si la versi&amp;oacute;n remota todav&amp;iacute;a est&amp;aacute; en la &lt;code&gt;base&lt;/code&gt; , independientemente de sus &lt;code&gt;remotes/origin/master&lt;/code&gt; locales / origen / master se ha actualizado en segundo plano.</target>
        </trans-unit>
        <trans-unit id="d160035a43dfa655c4a6e47190220d072175392c" translate="yes" xml:space="preserve">
          <source>IOW, you can use this thing to look for likely duplicate commits.</source>
          <target state="translated">IOW,puedes usar esta cosa para buscar posibles duplicados de compromisos.</target>
        </trans-unit>
        <trans-unit id="445867d9c88cb9ec795d4d1edb4358f7f32ed23d" translate="yes" xml:space="preserve">
          <source>ISO 8601</source>
          <target state="translated">ISO 8601</target>
        </trans-unit>
        <trans-unit id="8927163ad4efa8aea54b9b8e320ebffea4053ff8" translate="yes" xml:space="preserve">
          <source>Id of a tree-ish.</source>
          <target state="translated">Es una especie de árbol.</target>
        </trans-unit>
        <trans-unit id="f64266dea77070f77d87b89cb3f30c2d11210170" translate="yes" xml:space="preserve">
          <source>Identifier terminology</source>
          <target state="translated">Terminología de los identificadores</target>
        </trans-unit>
        <trans-unit id="2dd468355239de3fa1d047b407c0f3c35e4315ad" translate="yes" xml:space="preserve">
          <source>Identity-specific versions of the &lt;code&gt;sendemail.*&lt;/code&gt; parameters found below, taking precedence over those when this identity is selected, through either the command-line or &lt;code&gt;sendemail.identity&lt;/code&gt;.</source>
          <target state="translated">Versiones espec&amp;iacute;ficas de identidad de los par&amp;aacute;metros &lt;code&gt;sendemail.*&lt;/code&gt; Que se encuentran a continuaci&amp;oacute;n, que tienen prioridad sobre aquellas cuando se selecciona esta identidad, a trav&amp;eacute;s de la l&amp;iacute;nea de comandos o &lt;code&gt;sendemail.identity&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="05103278665252bd3225a3f315ada6e006bd41ae" translate="yes" xml:space="preserve">
          <source>If &amp;ldquo;:&amp;lt;funcname&amp;gt;&amp;rdquo; is given in place of &amp;lt;start&amp;gt; and &amp;lt;end&amp;gt;, it is a regular expression that denotes the range from the first funcname line that matches &amp;lt;funcname&amp;gt;, up to the next funcname line. &amp;ldquo;:&amp;lt;funcname&amp;gt;&amp;rdquo; searches from the end of the previous &lt;code&gt;-L&lt;/code&gt; range, if any, otherwise from the start of file. &amp;ldquo;^:&amp;lt;funcname&amp;gt;&amp;rdquo; searches from the start of file.</source>
          <target state="translated">Si se da &quot;: &amp;lt;nombre_func&amp;gt;&quot; en lugar de &amp;lt;start&amp;gt; y &amp;lt;end&amp;gt;, es una expresi&amp;oacute;n regular que denota el rango desde la primera l&amp;iacute;nea de nombre de funci&amp;oacute;n que coincide con &amp;lt;nombredefunc&amp;gt;, hasta la siguiente l&amp;iacute;nea de nombre de funci&amp;oacute;n. &amp;ldquo;: &amp;lt;nombrefunc&amp;gt;&amp;rdquo; busca desde el final del rango &lt;code&gt;-L&lt;/code&gt; anterior , si lo hubiera, de lo contrario desde el inicio del archivo. &amp;ldquo;^: &amp;lt;nombrefunc&amp;gt;&amp;rdquo; busca desde el inicio del archivo.</target>
        </trans-unit>
        <trans-unit id="a70081d33e7c2f9862444b9de88b6fa456d0c4eb" translate="yes" xml:space="preserve">
          <source>If &amp;lt;branch&amp;gt; is specified, &lt;code&gt;git rebase&lt;/code&gt; will perform an automatic &lt;code&gt;git switch &amp;lt;branch&amp;gt;&lt;/code&gt; before doing anything else. Otherwise it remains on the current branch.</source>
          <target state="translated">Si se especifica &amp;lt;branch&amp;gt;, &lt;code&gt;git rebase&lt;/code&gt; realizar&amp;aacute; un cambio autom&amp;aacute;tico de &lt;code&gt;git switch &amp;lt;branch&amp;gt;&lt;/code&gt; antes de hacer cualquier otra cosa. De lo contrario, permanece en la rama actual.</target>
        </trans-unit>
        <trans-unit id="441a1b498aa3709837145817fb556c2b9312d349" translate="yes" xml:space="preserve">
          <source>If &amp;lt;commit-ish&amp;gt; is a branch name (call it &lt;code&gt;&amp;lt;branch&amp;gt;&lt;/code&gt;) and is not found, and neither &lt;code&gt;-b&lt;/code&gt; nor &lt;code&gt;-B&lt;/code&gt; nor &lt;code&gt;--detach&lt;/code&gt; are used, but there does exist a tracking branch in exactly one remote (call it &lt;code&gt;&amp;lt;remote&amp;gt;&lt;/code&gt;) with a matching name, treat as equivalent to:</source>
          <target state="translated">Si &amp;lt;commit-ish&amp;gt; es un nombre de rama ( &lt;code&gt;--detach&lt;/code&gt; &lt;code&gt;&amp;lt;branch&amp;gt;&lt;/code&gt; ) y no se encuentra, y no se utilizan &lt;code&gt;-b&lt;/code&gt; ni &lt;code&gt;-B&lt;/code&gt; ni --detach , pero existe una rama de seguimiento en exactamente un control remoto ( ll&amp;aacute;melo &lt;code&gt;&amp;lt;remote&amp;gt;&lt;/code&gt; ) con un nombre coincidente, tr&amp;aacute;telo como equivalente a:</target>
        </trans-unit>
        <trans-unit id="a2dfa99d3d5ae08ba34d86a50dd72c99c275182b" translate="yes" xml:space="preserve">
          <source>If &amp;lt;dst&amp;gt; does not match any remote ref, either</source>
          <target state="translated">Si &amp;lt;dst&amp;gt; no coincide con ninguna referencia remota, tampoco</target>
        </trans-unit>
        <trans-unit id="a47c4a8533ef20594cec62184911d5ccc54294bc" translate="yes" xml:space="preserve">
          <source>If &amp;lt;dst&amp;gt; doesn&amp;rsquo;t start with &lt;code&gt;refs/&lt;/code&gt; (e.g. &lt;code&gt;refs/heads/master&lt;/code&gt;) we will try to infer where in &lt;code&gt;refs/*&lt;/code&gt; on the destination &amp;lt;repository&amp;gt; it belongs based on the type of &amp;lt;src&amp;gt; being pushed and whether &amp;lt;dst&amp;gt; is ambiguous.</source>
          <target state="translated">Si &amp;lt;dst&amp;gt; no comienza con &lt;code&gt;refs/&lt;/code&gt; (por ejemplo, &lt;code&gt;refs/heads/master&lt;/code&gt; ), intentaremos inferir en qu&amp;eacute; lugar de &lt;code&gt;refs/*&lt;/code&gt; en el &amp;lt;repository&amp;gt; de destino pertenece en funci&amp;oacute;n del tipo de &amp;lt;src&amp;gt; que se est&amp;aacute; presionando y si &amp;lt; dst&amp;gt; es ambiguo.</target>
        </trans-unit>
        <trans-unit id="055e400548fbd1f8dd3a927bc48c7fba28571578" translate="yes" xml:space="preserve">
          <source>If &amp;lt;dst&amp;gt; unambiguously refers to a ref on the &amp;lt;repository&amp;gt; remote, then push to that ref.</source>
          <target state="translated">Si &amp;lt;dst&amp;gt; se refiere de manera inequ&amp;iacute;voca a una referencia en el control remoto de &amp;lt;repository&amp;gt;, presione a esa referencia.</target>
        </trans-unit>
        <trans-unit id="2f8ca0e0f80952529303f3d2318f597064384182" translate="yes" xml:space="preserve">
          <source>If &amp;lt;src&amp;gt; resolves to a ref starting with refs/heads/ or refs/tags/, then prepend that to &amp;lt;dst&amp;gt;.</source>
          <target state="translated">Si &amp;lt;src&amp;gt; se resuelve en una referencia que comienza con refs / heads / o refs / tags /, antep&amp;oacute;ngalo a &amp;lt;dst&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="22f62b9091f5d458969b188b7b4383b4ee480486" translate="yes" xml:space="preserve">
          <source>If &amp;lt;start&amp;gt; or &amp;lt;end&amp;gt; is a number, it specifies an absolute line number (lines count from 1).</source>
          <target state="translated">Si &amp;lt;start&amp;gt; o &amp;lt;end&amp;gt; es un n&amp;uacute;mero, especifica un n&amp;uacute;mero de l&amp;iacute;nea absoluto (las l&amp;iacute;neas cuentan desde 1).</target>
        </trans-unit>
        <trans-unit id="3dcd00aaff1f71fc43821b3cae7ba5d1996fda2a" translate="yes" xml:space="preserve">
          <source>If &amp;lt;type&amp;gt; is specified, the raw (though uncompressed) contents of the &amp;lt;object&amp;gt; will be returned.</source>
          <target state="translated">Si se especifica &amp;lt;type&amp;gt;, se devolver&amp;aacute; el contenido sin formato (aunque sin comprimir) del &amp;lt;object&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="60fbab80da041fac4b578f6b9620a6e042d89ff6" translate="yes" xml:space="preserve">
          <source>If &amp;lt;upstream&amp;gt; is given on the command line, then the default is &lt;code&gt;--no-fork-point&lt;/code&gt;, otherwise the default is &lt;code&gt;--fork-point&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="099d6bbda7b3ea83e2000830c8cd48d38a505e41" translate="yes" xml:space="preserve">
          <source>If &amp;lt;upstream&amp;gt; is not specified, the upstream configured in branch.&amp;lt;name&amp;gt;.remote and branch.&amp;lt;name&amp;gt;.merge options will be used (see &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt; for details) and the &lt;code&gt;--fork-point&lt;/code&gt; option is assumed. If you are currently not on any branch or if the current branch does not have a configured upstream, the rebase will abort.</source>
          <target state="translated">Si no se especifica &amp;lt;upstream&amp;gt;, se usar&amp;aacute;n las opciones upstream configuradas en branch. &amp;lt;name&amp;gt; .remote y branch. &amp;lt;name&amp;gt; .merge (ver &lt;a href=&quot;git-config&quot;&gt;git-config [1]&lt;/a&gt; para m&amp;aacute;s detalles) y la opci&amp;oacute;n &lt;code&gt;--fork-point&lt;/code&gt; se supone. Si actualmente no se encuentra en ninguna rama o si la rama actual no tiene un flujo ascendente configurado, la rebase abortar&amp;aacute;.</target>
        </trans-unit>
        <trans-unit id="217621e5abfa606810a09d87aaa6c7fa540fc0fa" translate="yes" xml:space="preserve">
          <source>If --base-path is enabled and repo lookup fails, with this option &lt;code&gt;git daemon&lt;/code&gt; will attempt to lookup without prefixing the base path. This is useful for switching to --base-path usage, while still allowing the old paths.</source>
          <target state="translated">Si --base-path est&amp;aacute; habilitado y la b&amp;uacute;squeda de repositorios falla, con esta opci&amp;oacute;n, &lt;code&gt;git daemon&lt;/code&gt; intentar&amp;aacute; buscar sin prefijar la ruta base. Esto es &amp;uacute;til para cambiar al uso de --base-path, sin dejar de permitir las rutas antiguas.</target>
        </trans-unit>
        <trans-unit id="8fc1cea1e55be69663b951a920323d5b77c212cc" translate="yes" xml:space="preserve">
          <source>If --follow-symlinks is used, and a symlink in the repository points outside the repository, then &lt;code&gt;cat-file&lt;/code&gt; will ignore any custom format and print:</source>
          <target state="translated">Si se utiliza --follow-symlinks, y un enlace simb&amp;oacute;lico en el repositorio apunta fuera del repositorio, &lt;code&gt;cat-file&lt;/code&gt; ignorar&amp;aacute; cualquier formato personalizado e imprimir&amp;aacute;:</target>
        </trans-unit>
        <trans-unit id="100e053a72420596d3d8e1af3be6193b59283565" translate="yes" xml:space="preserve">
          <source>If --follow-symlinks is used, the following error messages will be displayed:</source>
          <target state="translated">Si se utiliza --follow-symlinks,se mostrarán los siguientes mensajes de error:</target>
        </trans-unit>
        <trans-unit id="5af2f9fd35f6354ba06f2224c3a1950a1f2e9539" translate="yes" xml:space="preserve">
          <source>If --no-deref is given, &amp;lt;ref&amp;gt; itself is overwritten, rather than the result of following the symbolic pointers.</source>
          <target state="translated">Si se da --no-deref, &amp;lt;ref&amp;gt; en s&amp;iacute; mismo se sobrescribe, en lugar del resultado de seguir los punteros simb&amp;oacute;licos.</target>
        </trans-unit>
        <trans-unit id="09e3aecc968d12fb9705beff5237174e03c29bc7" translate="yes" xml:space="preserve">
          <source>If --porcelain is used, then each line of the output is of the form:</source>
          <target state="translated">Si --porcelana se utiliza,entonces cada línea de la salida es de la forma:</target>
        </trans-unit>
        <trans-unit id="f6d2b768e06f422855acdd627f6c6194c3c0ef9e" translate="yes" xml:space="preserve">
          <source>If --prune-empty is specified, sometimes empty commits are missed and left around anyway (a somewhat rare bug, but it happens&amp;hellip;​)</source>
          <target state="translated">Si se especifica --prune-empty, a veces las confirmaciones vac&amp;iacute;as se pierden y se dejan de todos modos (un error algo raro, pero sucede ...)</target>
        </trans-unit>
        <trans-unit id="e22868793c21cef41b42f4d8e7236df1fabd77b0" translate="yes" xml:space="preserve">
          <source>If --prune-empty is specified, then intentionally placed empty commits from before the filtering operation are also pruned instead of just pruning commits that became empty due to filtering rules.</source>
          <target state="translated">Si se especifica --prune-empty,entonces las confirmaciones vacías colocadas intencionadamente desde antes de la operación de filtrado también se podan en lugar de sólo las confirmaciones de podado que se quedaron vacías debido a las reglas de filtrado.</target>
        </trans-unit>
        <trans-unit id="a5f91d56ff44d75c2f6264bd8bf6a44ba8095c27" translate="yes" xml:space="preserve">
          <source>If --prune-empty isn&amp;rsquo;t specified, then the filtering process can create hoards of confusing empty commits</source>
          <target state="translated">Si no se especifica --prune-empty, entonces el proceso de filtrado puede crear acumulaciones de confirmaciones vac&amp;iacute;as confusas</target>
        </trans-unit>
        <trans-unit id="2d1fd147af59c1bbe70034d2e19205e4683ec22e" translate="yes" xml:space="preserve">
          <source>If --refresh finds unmerged changes in the index, the default behavior is to error out. This option makes &lt;code&gt;git update-index&lt;/code&gt; continue anyway.</source>
          <target state="translated">Si --refresh encuentra cambios no fusionados en el &amp;iacute;ndice, el comportamiento predeterminado es eliminar errores. Esta opci&amp;oacute;n hace que &lt;code&gt;git update-index&lt;/code&gt; contin&amp;uacute;e de todos modos.</target>
        </trans-unit>
        <trans-unit id="a1d97a45ebe920517b85d93c5180821e570038df" translate="yes" xml:space="preserve">
          <source>If -b is used the short-format status is preceded by a line</source>
          <target state="translated">Si se utiliza -b el estado de formato corto está precedido por una línea</target>
        </trans-unit>
        <trans-unit id="a46e8db06d3992e975f7697afc61f277e4b431aa" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;git-tag&quot;&gt;git-tag[1]&lt;/a&gt; or &lt;a href=&quot;git-commit&quot;&gt;git-commit[1]&lt;/a&gt; is not selecting the key you want it to automatically when creating a signed tag or commit, you can override the default selection with this variable. This option is passed unchanged to gpg&amp;rsquo;s --local-user parameter, so you may specify a key using any method that gpg supports.</source>
          <target state="translated">Si &lt;a href=&quot;git-tag&quot;&gt;git-tag [1]&lt;/a&gt; o &lt;a href=&quot;git-commit&quot;&gt;git-commit [1]&lt;/a&gt; no selecciona la clave que desea que se haga autom&amp;aacute;ticamente al crear una etiqueta firmada o un compromiso, puede anular la selecci&amp;oacute;n predeterminada con esta variable. Esta opci&amp;oacute;n se pasa sin cambios al par&amp;aacute;metro --local-user de gpg, por lo que puede especificar una clave utilizando cualquier m&amp;eacute;todo que admita gpg.</target>
        </trans-unit>
        <trans-unit id="2cf1a7ea3bd0bf42d7200bd0e5a09fa57461a419" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;$GIT_DIR/&amp;lt;refname&amp;gt;&lt;/code&gt; exists, that is what you mean (this is usually useful only for &lt;code&gt;HEAD&lt;/code&gt;, &lt;code&gt;FETCH_HEAD&lt;/code&gt;, &lt;code&gt;ORIG_HEAD&lt;/code&gt;, &lt;code&gt;MERGE_HEAD&lt;/code&gt; and &lt;code&gt;CHERRY_PICK_HEAD&lt;/code&gt;);</source>
          <target state="translated">Si &lt;code&gt;$GIT_DIR/&amp;lt;refname&amp;gt;&lt;/code&gt; existe, eso es lo que quieres decir (esto suele ser &amp;uacute;til solo para &lt;code&gt;HEAD&lt;/code&gt; , &lt;code&gt;FETCH_HEAD&lt;/code&gt; , &lt;code&gt;ORIG_HEAD&lt;/code&gt; , &lt;code&gt;MERGE_HEAD&lt;/code&gt; y &lt;code&gt;CHERRY_PICK_HEAD&lt;/code&gt; );</target>
        </trans-unit>
        <trans-unit id="393d945c97962e065f70f0c395a4b7cc04c58275" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;$GIT_DIR&lt;/code&gt; is not defined and the current directory is not detected to lie in a Git repository or work tree print a message to stderr and exit with nonzero status.</source>
          <target state="translated">Si &lt;code&gt;$GIT_DIR&lt;/code&gt; no est&amp;aacute; definido y no se detecta que el directorio actual se encuentre en un repositorio de Git o en un &amp;aacute;rbol de trabajo, imprima un mensaje en stderr y salga con un estado distinto de cero.</target>
        </trans-unit>
        <trans-unit id="b71bb32cc72ead271cb1dd3ba713d52586ceff1b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;$per_request_config&lt;/code&gt; is not a code reference, it is interpreted as boolean value. If it is true gitweb will process config files once per request, and if it is false gitweb will process config files only once, each time it is executed. True by default (set to 1).</source>
          <target state="translated">Si &lt;code&gt;$per_request_config&lt;/code&gt; no es una referencia de c&amp;oacute;digo, se interpreta como un valor booleano. Si es cierto, gitweb procesar&amp;aacute; los archivos de configuraci&amp;oacute;n una vez por solicitud, y si es falso, gitweb procesar&amp;aacute; los archivos de configuraci&amp;oacute;n solo una vez, cada vez que se ejecute. Verdadero de forma predeterminada (establecido en 1).</target>
        </trans-unit>
        <trans-unit id="2006fc66d73a978df057f23b3e1521f13762b146" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;$projects_list&lt;/code&gt; variable is unset, gitweb will recursively scan filesystem for Git repositories. The &lt;code&gt;$project_maxdepth&lt;/code&gt; is used to limit traversing depth, relative to &lt;code&gt;$projectroot&lt;/code&gt; (starting point); it means that directories which are further from &lt;code&gt;$projectroot&lt;/code&gt; than &lt;code&gt;$project_maxdepth&lt;/code&gt; will be skipped.</source>
          <target state="translated">Si la variable &lt;code&gt;$projects_list&lt;/code&gt; est&amp;aacute; configurada, gitweb escanear&amp;aacute; de forma recursiva el sistema de archivos en busca de repositorios Git. El &lt;code&gt;$project_maxdepth&lt;/code&gt; se utiliza para la profundidad l&amp;iacute;mite de desplazamiento, con relaci&amp;oacute;n a &lt;code&gt;$projectroot&lt;/code&gt; (punto de partida); significa que los directorios que est&amp;aacute;n m&amp;aacute;s lejos de &lt;code&gt;$projectroot&lt;/code&gt; que &lt;code&gt;$project_maxdepth&lt;/code&gt; ser&amp;aacute;n omitidos.</target>
        </trans-unit>
        <trans-unit id="e1a24fe330082e54d9c17c846d5ecec5993c1e30" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&amp;lt;branch&amp;gt;&lt;/code&gt; is not found but there does exist a tracking branch in exactly one remote (call it &lt;code&gt;&amp;lt;remote&amp;gt;&lt;/code&gt;) with a matching name and &lt;code&gt;--no-guess&lt;/code&gt; is not specified, treat as equivalent to</source>
          <target state="translated">Si no se encuentra &lt;code&gt;&amp;lt;branch&amp;gt;&lt;/code&gt; pero existe una rama de seguimiento en exactamente un control remoto (ll&amp;aacute;melo &lt;code&gt;&amp;lt;remote&amp;gt;&lt;/code&gt; ) con un nombre coincidente y no se especifica &lt;code&gt;--no-guess&lt;/code&gt; , tr&amp;aacute;telo como equivalente a</target>
        </trans-unit>
        <trans-unit id="8d6aaf33671aeae0467cc81ab4a876d4297a1c66" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&amp;lt;branch&amp;gt;&lt;/code&gt; is not found but there does exist a tracking branch in exactly one remote (call it &lt;code&gt;&amp;lt;remote&amp;gt;&lt;/code&gt;) with a matching name, treat as equivalent to</source>
          <target state="translated">Si no se encuentra &lt;code&gt;&amp;lt;branch&amp;gt;&lt;/code&gt; pero existe una rama de seguimiento en exactamente un control remoto (ll&amp;aacute;melo &lt;code&gt;&amp;lt;remote&amp;gt;&lt;/code&gt; ) con un nombre coincidente, tr&amp;aacute;telo como equivalente a</target>
        </trans-unit>
        <trans-unit id="d5e4daa5549f785c6c9358d5ddb62b147a25d8f2" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&amp;lt;commit-ish&amp;gt;&lt;/code&gt; is a branch name (call it &lt;code&gt;&amp;lt;branch&amp;gt;&lt;/code&gt;) and is not found, and neither &lt;code&gt;-b&lt;/code&gt; nor &lt;code&gt;-B&lt;/code&gt; nor &lt;code&gt;--detach&lt;/code&gt; are used, but there does exist a tracking branch in exactly one remote (call it &lt;code&gt;&amp;lt;remote&amp;gt;&lt;/code&gt;) with a matching name, treat as equivalent to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e34274f8acc6fb322cd63ad185064de80d714660" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&amp;lt;commit-ish&amp;gt;&lt;/code&gt; is omitted and neither &lt;code&gt;-b&lt;/code&gt; nor &lt;code&gt;-B&lt;/code&gt; nor &lt;code&gt;--detach&lt;/code&gt; used, then, as a convenience, the new working tree is associated with a branch (call it &lt;code&gt;&amp;lt;branch&amp;gt;&lt;/code&gt;) named after &lt;code&gt;$(basename &amp;lt;path&amp;gt;)&lt;/code&gt;. If &lt;code&gt;&amp;lt;branch&amp;gt;&lt;/code&gt; doesn&amp;rsquo;t exist, a new branch based on &lt;code&gt;HEAD&lt;/code&gt; is automatically created as if &lt;code&gt;-b &amp;lt;branch&amp;gt;&lt;/code&gt; was given. If &lt;code&gt;&amp;lt;branch&amp;gt;&lt;/code&gt; does exist, it will be checked out in the new working tree, if it&amp;rsquo;s not checked out anywhere else, otherwise the command will refuse to create the working tree (unless &lt;code&gt;--force&lt;/code&gt; is used).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29cec940deeaa506fbdf23d2fcc19ea5029d5ef6" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&amp;lt;commit-ish&amp;gt;&lt;/code&gt; is omitted and neither &lt;code&gt;-b&lt;/code&gt; nor &lt;code&gt;-B&lt;/code&gt; nor &lt;code&gt;--detach&lt;/code&gt; used, then, as a convenience, the new worktree is associated with a branch (call it &lt;code&gt;&amp;lt;branch&amp;gt;&lt;/code&gt;) named after &lt;code&gt;$(basename &amp;lt;path&amp;gt;)&lt;/code&gt;. If &lt;code&gt;&amp;lt;branch&amp;gt;&lt;/code&gt; doesn&amp;rsquo;t exist, a new branch based on HEAD is automatically created as if &lt;code&gt;-b &amp;lt;branch&amp;gt;&lt;/code&gt; was given. If &lt;code&gt;&amp;lt;branch&amp;gt;&lt;/code&gt; does exist, it will be checked out in the new worktree, if it&amp;rsquo;s not checked out anywhere else, otherwise the command will refuse to create the worktree (unless &lt;code&gt;--force&lt;/code&gt; is used).</source>
          <target state="translated">Si se omite &lt;code&gt;&amp;lt;commit-ish&amp;gt;&lt;/code&gt; y no se utilizan &lt;code&gt;-b&lt;/code&gt; ni &lt;code&gt;-B&lt;/code&gt; ni &lt;code&gt;--detach&lt;/code&gt; , entonces, para su comodidad, el nuevo &amp;aacute;rbol de trabajo se asocia con una rama (ll&amp;aacute;mela &lt;code&gt;&amp;lt;branch&amp;gt;&lt;/code&gt; ) nombrada despu&amp;eacute;s de &lt;code&gt;$(basename &amp;lt;path&amp;gt;)&lt;/code&gt; . Si &lt;code&gt;&amp;lt;branch&amp;gt;&lt;/code&gt; no existe, se crea autom&amp;aacute;ticamente una nueva rama basada en HEAD como si se diera &lt;code&gt;-b &amp;lt;branch&amp;gt;&lt;/code&gt; . Si &lt;code&gt;&amp;lt;branch&amp;gt;&lt;/code&gt; existe, se desproteger&amp;aacute; en el nuevo &amp;aacute;rbol de trabajo, si no se desprotege en ning&amp;uacute;n otro lugar, de lo contrario, el comando se negar&amp;aacute; a crear el &amp;aacute;rbol de trabajo (a menos que se use &lt;code&gt;--force&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="62b6dbbe2a25a278c760cd92507e0bb77e25690a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&amp;lt;mode&amp;gt;&lt;/code&gt; is &lt;code&gt;auto&lt;/code&gt;, if the first paragraph of the branch description is greater than 100 bytes, then the mode will be &lt;code&gt;message&lt;/code&gt;, otherwise &lt;code&gt;subject&lt;/code&gt; will be used.</source>
          <target state="translated">Si &lt;code&gt;&amp;lt;mode&amp;gt;&lt;/code&gt; es &lt;code&gt;auto&lt;/code&gt; m&amp;aacute;tico , si el primer p&amp;aacute;rrafo de la descripci&amp;oacute;n de la rama tiene m&amp;aacute;s de 100 bytes, entonces el modo ser&amp;aacute; &lt;code&gt;message&lt;/code&gt; ; de lo contrario, se usar&amp;aacute; el &lt;code&gt;subject&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="563c89a3c046790f554398f75098f56ae60f56e1" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&amp;lt;mode&amp;gt;&lt;/code&gt; is &lt;code&gt;message&lt;/code&gt; or &lt;code&gt;default&lt;/code&gt;, the cover letter subject will be populated with placeholder text. The body of the cover letter will be populated with the branch&amp;rsquo;s description. This is the default mode when no configuration nor command line option is specified.</source>
          <target state="translated">Si &lt;code&gt;&amp;lt;mode&amp;gt;&lt;/code&gt; es &lt;code&gt;message&lt;/code&gt; o &lt;code&gt;default&lt;/code&gt; , el asunto de la carta de presentaci&amp;oacute;n se completar&amp;aacute; con texto de marcador de posici&amp;oacute;n. El cuerpo de la carta de presentaci&amp;oacute;n se completar&amp;aacute; con la descripci&amp;oacute;n de la sucursal. Este es el modo predeterminado cuando no se especifica ninguna opci&amp;oacute;n de configuraci&amp;oacute;n o l&amp;iacute;nea de comandos.</target>
        </trans-unit>
        <trans-unit id="768e82f3c3c3a8afb9417d73246f89dace57fcaa" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&amp;lt;mode&amp;gt;&lt;/code&gt; is &lt;code&gt;none&lt;/code&gt;, both the cover letter subject and body will be populated with placeholder text.</source>
          <target state="translated">Si &lt;code&gt;&amp;lt;mode&amp;gt;&lt;/code&gt; es &lt;code&gt;none&lt;/code&gt; , tanto el asunto como el cuerpo de la carta de presentaci&amp;oacute;n se completar&amp;aacute;n con texto de marcador de posici&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="3b18877d6ecf14744d4315ad4c41aafa8a39f64e" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&amp;lt;mode&amp;gt;&lt;/code&gt; is &lt;code&gt;subject&lt;/code&gt;, the first paragraph of the branch description will populate the cover letter subject. The remainder of the description will populate the body of the cover letter.</source>
          <target state="translated">Si &lt;code&gt;&amp;lt;mode&amp;gt;&lt;/code&gt; es &lt;code&gt;subject&lt;/code&gt; , el primer p&amp;aacute;rrafo de la descripci&amp;oacute;n de la rama completar&amp;aacute; el asunto de la carta de presentaci&amp;oacute;n. El resto de la descripci&amp;oacute;n llenar&amp;aacute; el cuerpo de la carta de presentaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="5e29b380beb0930e1e749e4eaa468dd6abb12015" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&amp;lt;pathspec&amp;gt;&lt;/code&gt; names an active submodule and the restore location includes the working tree, the submodule will only be updated if this option is given, in which case its working tree will be restored to the commit recorded in the superproject, and any local modifications overwritten. If nothing (or &lt;code&gt;--no-recurse-submodules&lt;/code&gt;) is used, submodules working trees will not be updated. Just like &lt;a href=&quot;git-checkout&quot;&gt;git-checkout[1]&lt;/a&gt;, this will detach &lt;code&gt;HEAD&lt;/code&gt; of the submodule.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6a4599482148106286830a5bf06a49e73c76aca" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;--autosquash&lt;/code&gt; is used, &quot;exec&quot; lines will not be appended for the intermediate commits, and will only appear at the end of each squash/fixup series.</source>
          <target state="translated">Si se usa &lt;code&gt;--autosquash&lt;/code&gt; , las l&amp;iacute;neas &quot;exec&quot; no se agregar&amp;aacute;n para las confirmaciones intermedias, y solo aparecer&amp;aacute;n al final de cada serie de squash / fixup.</target>
        </trans-unit>
        <trans-unit id="ab8e2bae185710923964a946f737935700b0fc1e" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;--batch&lt;/code&gt; is specified, the object information is followed by the object contents (consisting of &lt;code&gt;%(objectsize)&lt;/code&gt; bytes), followed by a newline.</source>
          <target state="translated">Si se especifica &lt;code&gt;--batch&lt;/code&gt; , la informaci&amp;oacute;n del objeto es seguida por el contenido del objeto (que consta de &lt;code&gt;%(objectsize)&lt;/code&gt; bytes), seguido de una nueva l&amp;iacute;nea.</target>
        </trans-unit>
        <trans-unit id="c868d58aa72d9bce1efba44bdbf844fae93d14ed" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;--batch&lt;/code&gt; or &lt;code&gt;--batch-check&lt;/code&gt; is given, &lt;code&gt;cat-file&lt;/code&gt; will read objects from stdin, one per line, and print information about them. By default, the whole line is considered as an object, as if it were fed to &lt;a href=&quot;git-rev-parse&quot;&gt;git-rev-parse[1]&lt;/a&gt;.</source>
          <target state="translated">Si se da &lt;code&gt;--batch&lt;/code&gt; o &lt;code&gt;--batch-check&lt;/code&gt; , &lt;code&gt;cat-file&lt;/code&gt; leer&amp;aacute; objetos de stdin, uno por l&amp;iacute;nea, e imprimir&amp;aacute; informaci&amp;oacute;n sobre ellos. De forma predeterminada, toda la l&amp;iacute;nea se considera un objeto, como si se alimentara a &lt;a href=&quot;git-rev-parse&quot;&gt;git-rev-parse [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2b49579ab9891477a433f3c4a7d881c054bf542d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;--branch&lt;/code&gt; is given, a series of header lines are printed with information about the current branch.</source>
          <target state="translated">Si se proporciona &lt;code&gt;--branch&lt;/code&gt; , se imprime una serie de l&amp;iacute;neas de encabezado con informaci&amp;oacute;n sobre la rama actual.</target>
        </trans-unit>
        <trans-unit id="92890e94239521769988796133cb653b32aed431" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;--cached&lt;/code&gt; is specified, it allows you to ask:</source>
          <target state="translated">Si se especifica &lt;code&gt;--cached&lt;/code&gt; , le permite preguntar:</target>
        </trans-unit>
        <trans-unit id="cdc2c32e44cf382458d3759532d549dfd10bb0ff" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;--cached&lt;/code&gt; is specified, this command will instead print the SHA-1 recorded in the superproject for each submodule.</source>
          <target state="translated">Si se especifica &lt;code&gt;--cached&lt;/code&gt; , este comando imprimir&amp;aacute; el SHA-1 registrado en el superproyecto para cada subm&amp;oacute;dulo.</target>
        </trans-unit>
        <trans-unit id="efe0936134ada9314d303de0a6d1675a3e22d7d9" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;--force&lt;/code&gt; is specified, the submodule will be checked out (using &lt;code&gt;git checkout --force&lt;/code&gt;), even if the commit specified in the index of the containing repository already matches the commit checked out in the submodule.</source>
          <target state="translated">Si se especifica &lt;code&gt;--force&lt;/code&gt; , el subm&amp;oacute;dulo ser&amp;aacute; verificado (usando &lt;code&gt;git checkout --force&lt;/code&gt; ), incluso si la confirmaci&amp;oacute;n especificada en el &amp;iacute;ndice del repositorio contenedor ya coincide con la confirmaci&amp;oacute;n extra&amp;iacute;da en el subm&amp;oacute;dulo.</target>
        </trans-unit>
        <trans-unit id="b5618fac3945aa3c15ec4d6ac940c3fc88cab042" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;--force&lt;/code&gt; is specified, the submodule&amp;rsquo;s working tree will be removed even if it contains local modifications.</source>
          <target state="translated">Si se especifica &lt;code&gt;--force&lt;/code&gt; , el &amp;aacute;rbol de trabajo del subm&amp;oacute;dulo se eliminar&amp;aacute; incluso si contiene modificaciones locales.</target>
        </trans-unit>
        <trans-unit id="95d47c3b72d050d56bd3bb3556c38937bb16f1f0" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;--group&lt;/code&gt; is specified multiple times, commits are counted under each value (but again, only once per unique value in that commit). For example, &lt;code&gt;git shortlog --group=author --group=trailer:co-authored-by&lt;/code&gt; counts both authors and co-authors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2db79d4530ac333b81dd59fc3c02ca024b34411" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;--index&lt;/code&gt; is not specified, then the submodule commits in the patch are ignored and only the absence or presence of the corresponding subdirectory is checked and (if possible) updated.</source>
          <target state="translated">Si no se especifica &lt;code&gt;--index&lt;/code&gt; , las confirmaciones del subm&amp;oacute;dulo en el parche se ignoran y solo se verifica la ausencia o presencia del subdirectorio correspondiente y (si es posible) se actualiza.</target>
        </trans-unit>
        <trans-unit id="ab41ddd9d49ddaff35bf4379642301cf2f1054d2" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;--index&lt;/code&gt; is specified (explicitly or implicitly), then the submodule commits must match the index exactly for the patch to apply. If any of the submodules are checked-out, then these check-outs are completely ignored, i.e., they are not required to be up to date or clean and they are not updated.</source>
          <target state="translated">Si se especifica &lt;code&gt;--index&lt;/code&gt; (expl&amp;iacute;cita o impl&amp;iacute;citamente), las confirmaciones del subm&amp;oacute;dulo deben coincidir exactamente con el &amp;iacute;ndice para que se aplique el parche. Si alguno de los subm&amp;oacute;dulos est&amp;aacute; desprotegido, estos desprotegidos se ignoran por completo, es decir, no es necesario que est&amp;eacute;n actualizados o limpios y no se actualizan.</target>
        </trans-unit>
        <trans-unit id="d7cd61ae0dde953250d385a6012605e922398ec2" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;--list&lt;/code&gt; is given, or if there are no non-option arguments, existing branches are listed; the current branch will be highlighted in green and marked with an asterisk. Any branches checked out in linked worktrees will be highlighted in cyan and marked with a plus sign. Option &lt;code&gt;-r&lt;/code&gt; causes the remote-tracking branches to be listed, and option &lt;code&gt;-a&lt;/code&gt; shows both local and remote branches.</source>
          <target state="translated">Si se proporciona &lt;code&gt;--list&lt;/code&gt; , o si no hay argumentos que no sean opciones, se enumeran las ramas existentes; la rama actual se resaltar&amp;aacute; en verde y se marcar&amp;aacute; con un asterisco. Todas las ramas registradas en &amp;aacute;rboles de trabajo vinculados se resaltar&amp;aacute;n en cian y se marcar&amp;aacute;n con un signo m&amp;aacute;s. La opci&amp;oacute;n &lt;code&gt;-r&lt;/code&gt; hace que se enumeren las ramas de seguimiento remoto y la opci&amp;oacute;n &lt;code&gt;-a&lt;/code&gt; muestra tanto las ramas locales como las remotas.</target>
        </trans-unit>
        <trans-unit id="45b84e8c64b1db8d6046842947d0384f2fee755b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;--log&lt;/code&gt; is specified, a shortlog of the commits being merged will be appended to the specified message.</source>
          <target state="translated">Si se especifica &lt;code&gt;--log&lt;/code&gt; , un breve registro de las confirmaciones que se fusionan se agregar&amp;aacute; al mensaje especificado.</target>
        </trans-unit>
        <trans-unit id="1772a311632ebe173773fb98d78cf3669fc056b0" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;--max-commits=&amp;lt;M&amp;gt;&lt;/code&gt; is specified with &lt;code&gt;M&lt;/code&gt; a positive integer, and the new tip file would have more than &lt;code&gt;M&lt;/code&gt; commits, then instead merge the new tip with the previous tip.</source>
          <target state="translated">Si &lt;code&gt;--max-commits=&amp;lt;M&amp;gt;&lt;/code&gt; se especifica con &lt;code&gt;M&lt;/code&gt; como un n&amp;uacute;mero entero positivo, y el nuevo archivo de sugerencias tendr&amp;iacute;a m&amp;aacute;s de &lt;code&gt;M&lt;/code&gt; confirmaciones, en su lugar, combine la nueva sugerencia con la sugerencia anterior.</target>
        </trans-unit>
        <trans-unit id="f4eab33758877fd85cebec91765014b4b92dc48c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;--recursive&lt;/code&gt; is specified, this command will recurse into nested submodules, and show their status as well.</source>
          <target state="translated">Si se especifica &lt;code&gt;--recursive&lt;/code&gt; , este comando se repetir&amp;aacute; en subm&amp;oacute;dulos anidados y tambi&amp;eacute;n mostrar&amp;aacute; su estado.</target>
        </trans-unit>
        <trans-unit id="776298c85f9bd8538095ba7ea6588e9b7e4a25e3" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;--recursive&lt;/code&gt; is specified, this command will recurse into the registered submodules, and sync any nested submodules within.</source>
          <target state="translated">Si se especifica &lt;code&gt;--recursive&lt;/code&gt; , este comando se repetir&amp;aacute; en los subm&amp;oacute;dulos registrados y sincronizar&amp;aacute; los subm&amp;oacute;dulos anidados dentro.</target>
        </trans-unit>
        <trans-unit id="1ddca2ea8ce5da739445e37cd4a4048560236396" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;--recursive&lt;/code&gt; is specified, this command will recurse into the registered submodules, and update any nested submodules within.</source>
          <target state="translated">Si se especifica &lt;code&gt;--recursive&lt;/code&gt; , este comando se repetir&amp;aacute; en los subm&amp;oacute;dulos registrados y actualizar&amp;aacute; los subm&amp;oacute;dulos anidados.</target>
        </trans-unit>
        <trans-unit id="ccfd5529f6d32ddb692a0a0edb24e2ebd0aeb784" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;--size-multiple=&amp;lt;X&amp;gt;&lt;/code&gt; is not specified, let &lt;code&gt;X&lt;/code&gt; equal 2. If the new tip file would have &lt;code&gt;N&lt;/code&gt; commits and the previous tip has &lt;code&gt;M&lt;/code&gt; commits and &lt;code&gt;X&lt;/code&gt; times &lt;code&gt;N&lt;/code&gt; is greater than &lt;code&gt;M&lt;/code&gt;, instead merge the two files into a single file.</source>
          <target state="translated">Si no se especifica &lt;code&gt;--size-multiple=&amp;lt;X&amp;gt;&lt;/code&gt; , deje que &lt;code&gt;X&lt;/code&gt; sea igual a 2. Si el nuevo archivo de sugerencias tendr&amp;iacute;a &lt;code&gt;N&lt;/code&gt; confirmaciones y la sugerencia anterior tiene &lt;code&gt;M&lt;/code&gt; confirmaciones y &lt;code&gt;X&lt;/code&gt; veces &lt;code&gt;N&lt;/code&gt; es mayor que &lt;code&gt;M&lt;/code&gt; , en su lugar combine los dos archivos en un solo archivo.</target>
        </trans-unit>
        <trans-unit id="769d8817aa727ff62e14daf04f7de44e2d479abb" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;--split=no-merge&lt;/code&gt; is specified, a merge is never performed, and the remaining options are ignored. &lt;code&gt;--split=replace&lt;/code&gt; overwrites the existing chain with a new one. A bare &lt;code&gt;--split&lt;/code&gt; defers to the remaining options. (Note that merging a chain of commit graphs replaces the existing chain with a length-1 chain where the first and only incremental holds the entire graph).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c75734f6686dc8bf756f12580f08ccb633b88773" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;--stateless-rpc&lt;/code&gt; is specified together with this option then the list of refs must be in packet format (pkt-line). Each ref must be in a separate packet, and the list must end with a flush packet.</source>
          <target state="translated">Si se especifica &lt;code&gt;--stateless-rpc&lt;/code&gt; junto con esta opci&amp;oacute;n, entonces la lista de referencias debe estar en formato de paquete (pkt-line). Cada referencia debe estar en un paquete separado y la lista debe terminar con un paquete al ras.</target>
        </trans-unit>
        <trans-unit id="d363c35441978c92ee5ead459023dfd1f9ed35c0" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;--verbose&lt;/code&gt; is specified, the output is a series of lines of the form:</source>
          <target state="translated">Si se especifica &lt;code&gt;--verbose&lt;/code&gt; , la salida es una serie de l&amp;iacute;neas de la forma:</target>
        </trans-unit>
        <trans-unit id="b441bd31aac4d2437fef46e0587314ace0da5e13" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;-B&lt;/code&gt; is given, &lt;code&gt;&amp;lt;new_branch&amp;gt;&lt;/code&gt; is created if it doesn&amp;rsquo;t exist; otherwise, it is reset. This is the transactional equivalent of</source>
          <target state="translated">Si se da &lt;code&gt;-B&lt;/code&gt; , se &lt;code&gt;&amp;lt;new_branch&amp;gt;&lt;/code&gt; si no existe; de lo contrario, se restablece. Este es el equivalente transaccional de</target>
        </trans-unit>
        <trans-unit id="b749f9938784db5272ac47989617994390a95806" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;-N&lt;/code&gt; is specified, removed paths are marked as intent-to-add (see &lt;a href=&quot;git-add&quot;&gt;git-add[1]&lt;/a&gt;).</source>
          <target state="translated">Si se especifica &lt;code&gt;-N&lt;/code&gt; , las rutas eliminadas se marcan como intent-to-add (ver &lt;a href=&quot;git-add&quot;&gt;git-add [1]&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="0d1031ba738c1e4895034c45a671bdfc4feb8ed4" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;-e&lt;/code&gt; is specified, no output, unless the &amp;lt;object&amp;gt; is malformed.</source>
          <target state="translated">Si se especifica &lt;code&gt;-e&lt;/code&gt; , no hay salida, a menos que el &amp;lt;objeto&amp;gt; tenga un formato incorrecto.</target>
        </trans-unit>
        <trans-unit id="b39ecbbcbddbe2e5db1df9079f165a4a73917d14" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;-m &amp;lt;msg&amp;gt;&lt;/code&gt; or &lt;code&gt;-F &amp;lt;file&amp;gt;&lt;/code&gt; is given and &lt;code&gt;-a&lt;/code&gt;, &lt;code&gt;-s&lt;/code&gt;, and &lt;code&gt;-u &amp;lt;keyid&amp;gt;&lt;/code&gt; are absent, &lt;code&gt;-a&lt;/code&gt; is implied.</source>
          <target state="translated">Si se proporciona &lt;code&gt;-m &amp;lt;msg&amp;gt;&lt;/code&gt; o &lt;code&gt;-F &amp;lt;file&amp;gt;&lt;/code&gt; y &lt;code&gt;-a&lt;/code&gt; , &lt;code&gt;-s&lt;/code&gt; y &lt;code&gt;-u &amp;lt;keyid&amp;gt;&lt;/code&gt; est&amp;aacute;n ausentes, &lt;code&gt;-a&lt;/code&gt; est&amp;aacute; impl&amp;iacute;cito.</target>
        </trans-unit>
        <trans-unit id="c5ab965e580c550a049049c227e584f98537d08f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;-m&lt;/code&gt; is specified, &lt;code&gt;git read-tree&lt;/code&gt; can perform 3 kinds of merge, a single tree merge if only 1 tree is given, a fast-forward merge with 2 trees, or a 3-way merge if 3 or more trees are provided.</source>
          <target state="translated">Si se especifica &lt;code&gt;-m&lt;/code&gt; , &lt;code&gt;git read-tree&lt;/code&gt; puede realizar 3 tipos de combinaci&amp;oacute;n, una combinaci&amp;oacute;n de un solo &amp;aacute;rbol si solo se proporciona 1 &amp;aacute;rbol, una combinaci&amp;oacute;n de avance r&amp;aacute;pido con 2 &amp;aacute;rboles o una combinaci&amp;oacute;n de 3 v&amp;iacute;as si se proporcionan 3 o m&amp;aacute;s &amp;aacute;rboles .</target>
        </trans-unit>
        <trans-unit id="1f1322547f9936fb21adaa0927130bdfd594f82e" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;-n&lt;/code&gt; or &lt;code&gt;--non-matching&lt;/code&gt; are specified, non-matching pathnames will also be output, in which case all fields in each output record except for &amp;lt;pathname&amp;gt; will be empty. This can be useful when running non-interactively, so that files can be incrementally streamed to STDIN of a long-running check-ignore process, and for each of these files, STDOUT will indicate whether that file matched a pattern or not. (Without this option, it would be impossible to tell whether the absence of output for a given file meant that it didn&amp;rsquo;t match any pattern, or that the output hadn&amp;rsquo;t been generated yet.)</source>
          <target state="translated">Si &lt;code&gt;-n&lt;/code&gt; o &lt;code&gt;--non-matching&lt;/code&gt; se especifican, nombres de rutas no coincidentes tambi&amp;eacute;n ser&amp;aacute;n de salida, en cuyo caso todos los campos de cada registro de salida excepto &amp;lt;nombre de ruta&amp;gt; estar&amp;aacute;n vac&amp;iacute;os. Esto puede ser &amp;uacute;til cuando se ejecuta de forma no interactiva, de modo que los archivos se pueden transmitir de forma incremental a STDIN de un proceso de verificaci&amp;oacute;n-ignorar de larga ejecuci&amp;oacute;n, y para cada uno de estos archivos, STDOUT indicar&amp;aacute; si ese archivo coincide con un patr&amp;oacute;n o no. (Sin esta opci&amp;oacute;n, ser&amp;iacute;a imposible saber si la ausencia de salida para un archivo dado significaba que no coincid&amp;iacute;a con ning&amp;uacute;n patr&amp;oacute;n o que la salida a&amp;uacute;n no se hab&amp;iacute;a generado).</target>
        </trans-unit>
        <trans-unit id="bedfa7472b5b880935d5dde5c2d6b7df2dd5534d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;-o&lt;/code&gt; is specified, output files are created in &amp;lt;dir&amp;gt;. Otherwise they are created in the current working directory. The default path can be set with the &lt;code&gt;format.outputDirectory&lt;/code&gt; configuration option. The &lt;code&gt;-o&lt;/code&gt; option takes precedence over &lt;code&gt;format.outputDirectory&lt;/code&gt;. To store patches in the current working directory even when &lt;code&gt;format.outputDirectory&lt;/code&gt; points elsewhere, use &lt;code&gt;-o .&lt;/code&gt;. All directory components will be created.</source>
          <target state="translated">Si se especifica &lt;code&gt;-o&lt;/code&gt; , los archivos de salida se crean en &amp;lt;dir&amp;gt;. De lo contrario, se crean en el directorio de trabajo actual. La ruta predeterminada se puede establecer con la opci&amp;oacute;n de configuraci&amp;oacute;n &lt;code&gt;format.outputDirectory&lt;/code&gt; . La opci&amp;oacute;n &lt;code&gt;-o&lt;/code&gt; tiene prioridad sobre &lt;code&gt;format.outputDirectory&lt;/code&gt; . Para almacenar parches en el directorio de trabajo actual incluso cuando &lt;code&gt;format.outputDirectory&lt;/code&gt; apunta a otro lugar, use &lt;code&gt;-o .&lt;/code&gt; . Se crear&amp;aacute;n todos los componentes del directorio.</target>
        </trans-unit>
        <trans-unit id="bbc0034ea645324d7719670d640dccda6b5513e5" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;-p&lt;/code&gt; is specified, the contents of &amp;lt;object&amp;gt; are pretty-printed.</source>
          <target state="translated">Si se especifica &lt;code&gt;-p&lt;/code&gt; , el contenido de &amp;lt;object&amp;gt; se imprime de forma bonita.</target>
        </trans-unit>
        <trans-unit id="49cafb1f81b012710180fa1719861bbc315bac4f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;-s&lt;/code&gt; is specified, the size of the &amp;lt;object&amp;gt; in bytes.</source>
          <target state="translated">Si se especifica &lt;code&gt;-s&lt;/code&gt; , el tama&amp;ntilde;o del &amp;lt;objeto&amp;gt; en bytes.</target>
        </trans-unit>
        <trans-unit id="859275c6340e08abbb3b87a577dd1f75bdf60296" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;-t&lt;/code&gt; is specified, one of the &amp;lt;type&amp;gt;.</source>
          <target state="translated">Si se especifica &lt;code&gt;-t&lt;/code&gt; , uno de los &amp;lt;tipo&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="77cb52b6f5e5f8b68fe5657e97a4dba5f22808fe" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;-v&lt;/code&gt; is specified, the script reports what it is doing.</source>
          <target state="translated">Si se especifica &lt;code&gt;-v&lt;/code&gt; , el script informa lo que est&amp;aacute; haciendo.</target>
        </trans-unit>
        <trans-unit id="f7c94cac86b7d031a538f6e54d51ce5da54af947" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;-z&lt;/code&gt; is specified, the pathnames in the output are delimited by the null character; if &lt;code&gt;--verbose&lt;/code&gt; is also specified then null characters are also used instead of colons and hard tabs:</source>
          <target state="translated">Si se especifica &lt;code&gt;-z&lt;/code&gt; , los nombres de ruta en la salida est&amp;aacute;n delimitados por el car&amp;aacute;cter nulo; si tambi&amp;eacute;n se especifica &lt;code&gt;--verbose&lt;/code&gt; , tambi&amp;eacute;n se utilizan caracteres nulos en lugar de dos puntos y tabulaciones r&amp;iacute;gidas:</target>
        </trans-unit>
        <trans-unit id="54b1b9cb08e8013285c455de408ae4d63672e927" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;GIT_TRACE2_BRIEF&lt;/code&gt; or &lt;code&gt;trace2.normalBrief&lt;/code&gt; is true, the &lt;code&gt;time&lt;/code&gt;, &lt;code&gt;filename&lt;/code&gt;, and &lt;code&gt;line&lt;/code&gt; fields are omitted.</source>
          <target state="translated">Si &lt;code&gt;GIT_TRACE2_BRIEF&lt;/code&gt; o &lt;code&gt;trace2.normalBrief&lt;/code&gt; es verdadero, se omiten los campos de &lt;code&gt;time&lt;/code&gt; , &lt;code&gt;filename&lt;/code&gt; y &lt;code&gt;line&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2e9a7edfc47ae5456f77e7777204d6f377e2ee4c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;GIT_TRACE2_EVENT_BRIEF&lt;/code&gt; or &lt;code&gt;trace2.eventBrief&lt;/code&gt; is true, the &lt;code&gt;file&lt;/code&gt; and &lt;code&gt;line&lt;/code&gt; fields are omitted from all events and the &lt;code&gt;time&lt;/code&gt; field is only present on the &quot;start&quot; and &quot;atexit&quot; events.</source>
          <target state="translated">Si &lt;code&gt;GIT_TRACE2_EVENT_BRIEF&lt;/code&gt; o &lt;code&gt;trace2.eventBrief&lt;/code&gt; es verdadero, los campos de &lt;code&gt;file&lt;/code&gt; y &lt;code&gt;line&lt;/code&gt; se omiten de todos los eventos y el campo de &lt;code&gt;time&lt;/code&gt; solo est&amp;aacute; presente en los eventos &quot;start&quot; y &quot;atexit&quot;.</target>
        </trans-unit>
        <trans-unit id="1f02cbb9b13595b2ae6e45bc6f6b5fd9cfaab0a2" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;GIT_TRACE2_PERF_BRIEF&lt;/code&gt; or &lt;code&gt;trace2.perfBrief&lt;/code&gt; is true, the &lt;code&gt;time&lt;/code&gt;, &lt;code&gt;file&lt;/code&gt;, and &lt;code&gt;line&lt;/code&gt; fields are omitted.</source>
          <target state="translated">Si &lt;code&gt;GIT_TRACE2_PERF_BRIEF&lt;/code&gt; o &lt;code&gt;trace2.perfBrief&lt;/code&gt; es verdadero, se omiten los campos de &lt;code&gt;time&lt;/code&gt; , &lt;code&gt;file&lt;/code&gt; y &lt;code&gt;line&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ac54e4f3ca84b268e2b102a57942d2590e1ed97e" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;branch.&amp;lt;name&amp;gt;.merge&lt;/code&gt; configuration for the current branch &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; exists, that is the name of the branch at the remote site that is merged.</source>
          <target state="translated">Si &lt;code&gt;branch.&amp;lt;name&amp;gt;.merge&lt;/code&gt; configuraci&amp;oacute;n branch. &amp;lt;nombre&amp;gt; .merge para la rama actual &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; , ese es el nombre de la rama en el sitio remoto que se fusiona.</target>
        </trans-unit>
        <trans-unit id="0bbbd298acfcfe77553aeabe5dcce9895508b92f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;core.ignoreCase=true&lt;/code&gt;, then the pattern-matching algorithm will use a case-insensitive check. This corrects for case mismatched filenames in the &lt;code&gt;git sparse-checkout set&lt;/code&gt; command to reflect the expected cone in the working directory.</source>
          <target state="translated">Si &lt;code&gt;core.ignoreCase=true&lt;/code&gt; , entonces el algoritmo de coincidencia de patrones utilizar&amp;aacute; una verificaci&amp;oacute;n que no distingue entre may&amp;uacute;sculas y min&amp;uacute;sculas. Esto corrige los nombres de archivo que no coinciden en los casos en el comando &lt;code&gt;git sparse-checkout set&lt;/code&gt; para reflejar el cono esperado en el directorio de trabajo.</target>
        </trans-unit>
        <trans-unit id="e0b5d0106d1c8675cc37e497ff6608e05f8526d9" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;core.safecrlf&lt;/code&gt; is set to &quot;true&quot; or &quot;warn&quot;, Git verifies if the conversion is reversible for the current setting of &lt;code&gt;core.autocrlf&lt;/code&gt;. For &quot;true&quot;, Git rejects irreversible conversions; for &quot;warn&quot;, Git only prints a warning but accepts an irreversible conversion. The safety triggers to prevent such a conversion done to the files in the work tree, but there are a few exceptions. Even though&amp;hellip;​</source>
          <target state="translated">Si &lt;code&gt;core.safecrlf&lt;/code&gt; se establece en &quot;true&quot; o &quot;warn&quot;, Git verifica si la conversi&amp;oacute;n es reversible para la configuraci&amp;oacute;n actual de &lt;code&gt;core.autocrlf&lt;/code&gt; . Para &quot;verdadero&quot;, Git rechaza las conversiones irreversibles; para &quot;advertir&quot;, Git solo imprime una advertencia pero acepta una conversi&amp;oacute;n irreversible. La seguridad se activa para evitar que dicha conversi&amp;oacute;n se realice en los archivos del &amp;aacute;rbol de trabajo, pero hay algunas excepciones. Aunque ...</target>
        </trans-unit>
        <trans-unit id="a8fd82d7f01c8cd14090b39826adb8859d4c03b6" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;core.sparseCheckoutCone=true&lt;/code&gt;, then Git will parse the sparse-checkout file expecting patterns of these types. Git will warn if the patterns do not match. If the patterns do match the expected format, then Git will use faster hash- based algorithms to compute inclusion in the sparse-checkout.</source>
          <target state="translated">Si &lt;code&gt;core.sparseCheckoutCone=true&lt;/code&gt; , entonces Git analizar&amp;aacute; el archivo de pago disperso esperando patrones de estos tipos. Git advertir&amp;aacute; si los patrones no coinciden. Si los patrones coinciden con el formato esperado, entonces Git usar&amp;aacute; algoritmos basados ​​en hash m&amp;aacute;s r&amp;aacute;pidos para calcular la inclusi&amp;oacute;n en el checkout disperso.</target>
        </trans-unit>
        <trans-unit id="9f2eb1f9e30347412b91990fde6d0d3118015f0c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;credential.helper&lt;/code&gt; is configured to the empty string, this resets the helper list to empty (so you may override a helper set by a lower-priority config file by configuring the empty-string helper, followed by whatever set of helpers you would like).</source>
          <target state="translated">Si &lt;code&gt;credential.helper&lt;/code&gt; est&amp;aacute; configurado para la cadena vac&amp;iacute;a, esto restablece la lista de ayudantes a vac&amp;iacute;a (por lo que puede anular un conjunto de ayudantes por un archivo de configuraci&amp;oacute;n de menor prioridad configurando el ayudante de cadena vac&amp;iacute;a, seguido de cualquier conjunto de ayudantes que desee ).</target>
        </trans-unit>
        <trans-unit id="6f6bc24ce4d9cb03fd023baafceb347acba1bf38" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;false&lt;/code&gt;, &lt;code&gt;git log&lt;/code&gt; and related commands will not treat the initial commit as a big creation event. Any root commits in &lt;code&gt;git log -p&lt;/code&gt; output would be shown without a diff attached. The default is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">Si es &lt;code&gt;false&lt;/code&gt; , &lt;code&gt;git log&lt;/code&gt; y los comandos relacionados no tratar&amp;aacute;n la confirmaci&amp;oacute;n inicial como un gran evento de creaci&amp;oacute;n. Cualquier confirmaci&amp;oacute;n de root en la salida de &lt;code&gt;git log -p&lt;/code&gt; se mostrar&amp;iacute;a sin un diff adjunto. El valor predeterminado es &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="176a2b5b60655848aad57cb4f6f5216b8fca3bab" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;git merge-index&lt;/code&gt; is called with multiple &amp;lt;file&amp;gt;s (or -a) then it processes them in turn only stopping if merge returns a non-zero exit code.</source>
          <target state="translated">Si se llama a &lt;code&gt;git merge-index&lt;/code&gt; con varios &amp;lt;file&amp;gt; s (o -a), entonces los procesa a su vez y solo se detiene si merge devuelve un c&amp;oacute;digo de salida distinto de cero.</target>
        </trans-unit>
        <trans-unit id="806256aa8b91febcc951ef689b4cdbc521c56b19" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;git svn&lt;/code&gt; is configured to fetch branches (and --follow-branches is in effect), it sometimes creates multiple Git branches for one SVN branch, where the additional branches have names of the form &lt;code&gt;branchname@nnn&lt;/code&gt; (with nnn an SVN revision number). These additional branches are created if &lt;code&gt;git svn&lt;/code&gt; cannot find a parent commit for the first commit in an SVN branch, to connect the branch to the history of the other branches.</source>
          <target state="translated">Si &lt;code&gt;git svn&lt;/code&gt; est&amp;aacute; configurado para buscar ramas (y --follow-branch est&amp;aacute; en efecto), a veces crea m&amp;uacute;ltiples ramas Git para una rama SVN, donde las ramas adicionales tienen nombres de la forma &lt;code&gt;branchname@nnn&lt;/code&gt; (con nnn un n&amp;uacute;mero de revisi&amp;oacute;n SVN ). Estas ramas adicionales se crean si &lt;code&gt;git svn&lt;/code&gt; no puede encontrar una confirmaci&amp;oacute;n principal para la primera confirmaci&amp;oacute;n en una rama SVN, para conectar la rama al historial de las otras ramas.</target>
        </trans-unit>
        <trans-unit id="ea83fb8f1cd42b6f4ec377884889f8ee539b7922" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;our&lt;/code&gt; version introduces whitespace changes but &lt;code&gt;their&lt;/code&gt; version includes a substantial change, &lt;code&gt;their&lt;/code&gt; version is used;</source>
          <target state="translated">Si &lt;code&gt;our&lt;/code&gt; versi&amp;oacute;n introduce cambios en espacios en blanco pero &lt;code&gt;their&lt;/code&gt; versi&amp;oacute;n incluye un cambio sustancial, se utiliza &lt;code&gt;their&lt;/code&gt; versi&amp;oacute;n;</target>
        </trans-unit>
        <trans-unit id="a540055d45818789fbb8422bbf0d3790f08d9718" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;repack.packKeptObjects&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;, then any pack-files with an associated &lt;code&gt;.keep&lt;/code&gt; file will not be selected for the batch to repack.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a3c5f8b5c3f8823d3bb0bf75c68202ef91e0068" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;status.submoduleSummary&lt;/code&gt; is set to a non zero number or true (identical to -1 or an unlimited number), the submodule summary will be enabled for the long format and a summary of commits for modified submodules will be shown (see --summary-limit option of &lt;a href=&quot;git-submodule&quot;&gt;git-submodule[1]&lt;/a&gt;). Please note that the summary output from the status command will be suppressed for all submodules when &lt;code&gt;diff.ignoreSubmodules&lt;/code&gt; is set to &lt;code&gt;all&lt;/code&gt; or only for those submodules where &lt;code&gt;submodule.&amp;lt;name&amp;gt;.ignore=all&lt;/code&gt;. To also view the summary for ignored submodules you can either use the --ignore-submodules=dirty command line option or the &lt;code&gt;git submodule summary&lt;/code&gt; command, which shows a similar output but does not honor these settings.</source>
          <target state="translated">Si &lt;code&gt;status.submoduleSummary&lt;/code&gt; se establece en un n&amp;uacute;mero distinto de cero o verdadero (id&amp;eacute;ntico a -1 o un n&amp;uacute;mero ilimitado), el resumen del subm&amp;oacute;dulo se habilitar&amp;aacute; para el formato largo y se mostrar&amp;aacute; un resumen de las confirmaciones para los subm&amp;oacute;dulos modificados (ver --summary -opci&amp;oacute;n l&amp;iacute;mite de &lt;a href=&quot;git-submodule&quot;&gt;git-submodule [1]&lt;/a&gt; ). Tenga en cuenta que la salida de resumen del comando de estado se suprimir&amp;aacute; para todos los subm&amp;oacute;dulos cuando &lt;code&gt;diff.ignoreSubmodules&lt;/code&gt; se establezca en &lt;code&gt;all&lt;/code&gt; o solo para aquellos subm&amp;oacute;dulos donde &lt;code&gt;submodule.&amp;lt;name&amp;gt;.ignore=all&lt;/code&gt; . Para ver tambi&amp;eacute;n el resumen de los subm&amp;oacute;dulos ignorados, puede usar la opci&amp;oacute;n de l&amp;iacute;nea de comando --ignore-submodules = dirty o el &lt;code&gt;git submodule summary&lt;/code&gt; comando, que muestra un resultado similar pero no respeta estas configuraciones.</target>
        </trans-unit>
        <trans-unit id="9e9c3270ca55bc57874ba3c8e582e2598d79892a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;subsystem&lt;/code&gt; is rebased against &lt;code&gt;master&lt;/code&gt;, the following happens:</source>
          <target state="translated">Si el &lt;code&gt;subsystem&lt;/code&gt; se basa en el &lt;code&gt;master&lt;/code&gt; , ocurre lo siguiente:</target>
        </trans-unit>
        <trans-unit id="601fb7e577607a9227812e9cbf0586e6f099c5c2" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;their&lt;/code&gt; version only introduces whitespace changes to a line, &lt;code&gt;our&lt;/code&gt; version is used;</source>
          <target state="translated">Si &lt;code&gt;their&lt;/code&gt; versi&amp;oacute;n solo introduce cambios de espacio en blanco en una l&amp;iacute;nea, se usa &lt;code&gt;our&lt;/code&gt; versi&amp;oacute;n;</target>
        </trans-unit>
        <trans-unit id="8afd53e5e6b34e88bd67e48774d4e9aa34d681c7" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;git log&lt;/code&gt; and related commands will act as if the &lt;code&gt;--show-signature&lt;/code&gt; option was passed to them.</source>
          <target state="translated">Si es &lt;code&gt;true&lt;/code&gt; , &lt;code&gt;git log&lt;/code&gt; y los comandos relacionados actuar&amp;aacute;n como si se les hubiera pasado la opci&amp;oacute;n &lt;code&gt;--show-signature&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="30fb3a857bee5620305914164cd0d4800cd1bf39" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;git log&lt;/code&gt; will act as if the &lt;code&gt;--follow&lt;/code&gt; option was used when a single &amp;lt;path&amp;gt; is given. This has the same limitations as &lt;code&gt;--follow&lt;/code&gt;, i.e. it cannot be used to follow multiple files and does not work well on non-linear history.</source>
          <target state="translated">Si es &lt;code&gt;true&lt;/code&gt; , &lt;code&gt;git log&lt;/code&gt; actuar&amp;aacute; como si se &lt;code&gt;--follow&lt;/code&gt; opci&amp;oacute;n --follow cuando se proporciona un solo &amp;lt;path&amp;gt;. Tiene las mismas limitaciones que &lt;code&gt;--follow&lt;/code&gt; , es decir, no se puede utilizar para seguir varios archivos y no funciona bien en el historial no lineal.</target>
        </trans-unit>
        <trans-unit id="1ee512d5daa33e9512f53b0ef8141d045d9eb4b9" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;true&lt;/code&gt;, indicate that the caller wants hash algorithm information to be passed back from the remote. This mode is used when fetching refs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e427e8f5bde6693ff553f72c72fbaf5c9a84e60f" translate="yes" xml:space="preserve">
          <source>If Alice wants to visualize what Bob did since their histories forked she can issue the following command:</source>
          <target state="translated">Si Alice quiere visualizar lo que Bob hizo desde que sus historias se bifurcaron,puede emitir la siguiente orden:</target>
        </trans-unit>
        <trans-unit id="38d81a70b720705355c01f2f151a0b608b67e1f5" translate="yes" xml:space="preserve">
          <source>If Bob later decides to work from a different host, he can still perform clones and pulls using the ssh protocol:</source>
          <target state="translated">Si Bob más tarde decide trabajar desde un huésped diferente,todavía puede realizar clones y tirones usando el protocolo ssh:</target>
        </trans-unit>
        <trans-unit id="906533644a5e321915983ba584ed131ee5f02be3" translate="yes" xml:space="preserve">
          <source>If X is found to be &quot;bad&quot;, then we know that its descendants are all &quot;bad&quot;, so we want to say that:</source>
          <target state="translated">Si se encuentra que X es &quot;malo&quot;,entonces sabemos que sus descendientes son todos &quot;malos&quot;,así que queremos decir eso:</target>
        </trans-unit>
        <trans-unit id="585173cb924da5e21521ae8038b0882b2bd9054d" translate="yes" xml:space="preserve">
          <source>If X is found to be &quot;good&quot;, then we know that its ancestors are all &quot;good&quot;, so we want to say that:</source>
          <target state="translated">Si se encuentra que X es &quot;bueno&quot;,entonces sabemos que sus ancestros son todos &quot;buenos&quot;,así que queremos decir eso:</target>
        </trans-unit>
        <trans-unit id="5b8abb6b4933866023868019ddfccc59a8fddfdf" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;&amp;lt;pattern&amp;gt;&lt;/code&gt; is given, it is used as a shell wildcard to restrict the output to matching branches. If multiple patterns are given, a branch is shown if it matches any of the patterns.</source>
          <target state="translated">Si se proporciona un &lt;code&gt;&amp;lt;pattern&amp;gt;&lt;/code&gt; , se utiliza como comod&amp;iacute;n de shell para restringir la salida a ramas coincidentes. Si se dan varios patrones, se muestra una rama si coincide con alguno de los patrones.</target>
        </trans-unit>
        <trans-unit id="9af8e725fef48828fa7bc334de43f0ec2851ec0b" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;merge&lt;/code&gt; command fails for any reason other than merge conflicts (i.e. when the merge operation did not even start), it is rescheduled immediately.</source>
          <target state="translated">Si un comando de &lt;code&gt;merge&lt;/code&gt; falla por cualquier motivo que no sea conflictos de combinaci&amp;oacute;n (es decir, cuando la operaci&amp;oacute;n de combinaci&amp;oacute;n ni siquiera se inici&amp;oacute;), se reprograma inmediatamente.</target>
        </trans-unit>
        <trans-unit id="78142494afa000f59dc94a96d37bd84306c42e5e" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;no-interactive-login&lt;/code&gt; command exists, then it is run and the interactive shell is aborted.</source>
          <target state="translated">Si &lt;code&gt;no-interactive-login&lt;/code&gt; un comando de inicio de sesi&amp;oacute;n no interactivo , se ejecuta y se cancela el shell interactivo.</target>
        </trans-unit>
        <trans-unit id="7f80f5447bc118a0311c9425234560dac2c0a613" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;pattern&lt;/code&gt; is given, only refs matching the given shell glob are shown. If the pattern does not contain a globbing character (&lt;code&gt;?&lt;/code&gt;, &lt;code&gt;*&lt;/code&gt;, or &lt;code&gt;[&lt;/code&gt;), it is turned into a prefix match by appending &lt;code&gt;/*&lt;/code&gt;.</source>
          <target state="translated">Si se proporciona un &lt;code&gt;pattern&lt;/code&gt; , solo se muestran las referencias que coinciden con el glob de shell dado. Si el patr&amp;oacute;n no contiene un car&amp;aacute;cter global ( &lt;code&gt;?&lt;/code&gt; , &lt;code&gt;*&lt;/code&gt; O &lt;code&gt;[&lt;/code&gt; ), se convierte en una coincidencia de prefijo agregando &lt;code&gt;/*&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="744bace39aac155f24f5426e32b134c34f641c3b" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;~/git-shell-commands&lt;/code&gt; directory is present, &lt;code&gt;git shell&lt;/code&gt; can also be run interactively (with no arguments). If a &lt;code&gt;help&lt;/code&gt; command is present in the &lt;code&gt;git-shell-commands&lt;/code&gt; directory, it is run to provide the user with an overview of allowed actions. Then a &quot;git&amp;gt; &quot; prompt is presented at which one can enter any of the commands from the &lt;code&gt;git-shell-commands&lt;/code&gt; directory, or &lt;code&gt;exit&lt;/code&gt; to close the connection.</source>
          <target state="translated">Si hay un directorio &lt;code&gt;~/git-shell-commands&lt;/code&gt; , &lt;code&gt;git shell&lt;/code&gt; tambi&amp;eacute;n se puede ejecutar de forma interactiva (sin argumentos). Si hay un comando de &lt;code&gt;help&lt;/code&gt; en el directorio &lt;code&gt;git-shell-commands&lt;/code&gt; , se ejecuta para proporcionar al usuario una descripci&amp;oacute;n general de las acciones permitidas. Luego se presenta un indicador &quot;git&amp;gt;&quot; en el que se puede ingresar cualquiera de los comandos del directorio &lt;code&gt;git-shell-commands&lt;/code&gt; , o &lt;code&gt;exit&lt;/code&gt; para cerrar la conexi&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="aa403bcc24255cf8941b29ab4148b7eee12a6185" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;~/git-shell-commands&lt;/code&gt; directory is present, &lt;code&gt;git shell&lt;/code&gt; will also handle other, custom commands by running &quot;&lt;code&gt;git-shell-commands/&amp;lt;command&amp;gt; &amp;lt;arguments&amp;gt;&lt;/code&gt;&quot; from the user&amp;rsquo;s home directory.</source>
          <target state="translated">Si hay un directorio &lt;code&gt;~/git-shell-commands&lt;/code&gt; , &lt;code&gt;git shell&lt;/code&gt; tambi&amp;eacute;n manejar&amp;aacute; otros comandos personalizados ejecutando &quot; &lt;code&gt;git-shell-commands/&amp;lt;command&amp;gt; &amp;lt;arguments&amp;gt;&lt;/code&gt; &quot; desde el directorio de inicio del usuario.</target>
        </trans-unit>
        <trans-unit id="106b7929c0261fff657b2746b76dd80d35492e74" translate="yes" xml:space="preserve">
          <source>If a Git client that does not support the &lt;code&gt;working-tree-encoding&lt;/code&gt; attribute adds a new file &lt;code&gt;bar.ps1&lt;/code&gt;, then &lt;code&gt;bar.ps1&lt;/code&gt; will be stored &quot;as-is&quot; internally (in this example probably as UTF-16). A client with &lt;code&gt;working-tree-encoding&lt;/code&gt; support will interpret the internal contents as UTF-8 and try to convert it to UTF-16 on checkout. That operation will fail and cause an error.</source>
          <target state="translated">Si un cliente de Git que no admite el atributo de &lt;code&gt;working-tree-encoding&lt;/code&gt; agrega un nuevo archivo &lt;code&gt;bar.ps1&lt;/code&gt; , &lt;code&gt;bar.ps1&lt;/code&gt; se almacenar&amp;aacute; &quot;tal cual&quot; internamente (en este ejemplo probablemente como UTF-16). Un cliente con soporte de &lt;code&gt;working-tree-encoding&lt;/code&gt; interpretar&amp;aacute; el contenido interno como UTF-8 e intentar&amp;aacute; convertirlo a UTF-16 al finalizar la compra. Esa operaci&amp;oacute;n fallar&amp;aacute; y provocar&amp;aacute; un error.</target>
        </trans-unit>
        <trans-unit id="84278502dbc74a9c4cc8dd831a2c5f189f159ac0" translate="yes" xml:space="preserve">
          <source>If a Git repository includes branches &lt;code&gt;refs/remotes/origin/p4&lt;/code&gt;, these will be fetched and consulted first during a &lt;code&gt;git p4 sync&lt;/code&gt;. Since importing directly from p4 is considerably slower than pulling changes from a Git remote, this can be useful in a multi-developer environment.</source>
          <target state="translated">Si un repositorio de Git incluye ramas &lt;code&gt;refs/remotes/origin/p4&lt;/code&gt; , estas se buscar&amp;aacute;n y consultar&amp;aacute;n primero durante una &lt;code&gt;git p4 sync&lt;/code&gt; . Dado que importar directamente desde p4 es considerablemente m&amp;aacute;s lento que extraer cambios desde un control remoto de Git, esto puede ser &amp;uacute;til en un entorno de m&amp;uacute;ltiples desarrolladores.</target>
        </trans-unit>
        <trans-unit id="af291be12b7b5a290c76485729b6b8f4918ca983" translate="yes" xml:space="preserve">
          <source>If a command, or a guide, is given, a manual page for that command or guide is brought up. The &lt;code&gt;man&lt;/code&gt; program is used by default for this purpose, but this can be overridden by other options or configuration variables.</source>
          <target state="translated">Si se da un comando, o una gu&amp;iacute;a, se abre una p&amp;aacute;gina de manual para ese comando o gu&amp;iacute;a. El programa &lt;code&gt;man&lt;/code&gt; se utiliza por defecto para este prop&amp;oacute;sito, pero esto puede ser anulado por otras opciones o variables de configuraci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="72743ffe0426b38cdd1755e732e28a11a9ff3a78" translate="yes" xml:space="preserve">
          <source>If a commit being cherry picked duplicates a commit already in the current history, it will become empty. By default these redundant commits cause &lt;code&gt;cherry-pick&lt;/code&gt; to stop so the user can examine the commit. This option overrides that behavior and creates an empty commit object. Implies &lt;code&gt;--allow-empty&lt;/code&gt;.</source>
          <target state="translated">Si una confirmaci&amp;oacute;n que se selecciona con precisi&amp;oacute;n duplica una confirmaci&amp;oacute;n que ya est&amp;aacute; en el historial actual, quedar&amp;aacute; vac&amp;iacute;a. De forma predeterminada, estas confirmaciones redundantes hacen que &lt;code&gt;cherry-pick&lt;/code&gt; detenga para que el usuario pueda examinar la confirmaci&amp;oacute;n. Esta opci&amp;oacute;n anula ese comportamiento y crea un objeto de confirmaci&amp;oacute;n vac&amp;iacute;o. Implica &lt;code&gt;--allow-empty&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4b42bbbaf339d6cf05d45edbdf2ada972df70aa1" translate="yes" xml:space="preserve">
          <source>If a diff tool is not specified, &lt;code&gt;git difftool&lt;/code&gt; will use the configuration variable &lt;code&gt;diff.tool&lt;/code&gt;. If the configuration variable &lt;code&gt;diff.tool&lt;/code&gt; is not set, &lt;code&gt;git difftool&lt;/code&gt; will pick a suitable default.</source>
          <target state="translated">Si no se especifica una herramienta de diferencias, &lt;code&gt;git difftool&lt;/code&gt; utilizar&amp;aacute; la variable de configuraci&amp;oacute;n &lt;code&gt;diff.tool&lt;/code&gt; . Si la variable de configuraci&amp;oacute;n &lt;code&gt;diff.tool&lt;/code&gt; no est&amp;aacute; establecida, &lt;code&gt;git difftool&lt;/code&gt; elegir&amp;aacute; un valor predeterminado adecuado.</target>
        </trans-unit>
        <trans-unit id="a8ee98dcb134f1a2c8067ffe5665347c4c70f9e4" translate="yes" xml:space="preserve">
          <source>If a fatal error occurs, the program writes the error message to stderr and exits. The caller should expect that a suitable error message has been printed if the child closes the connection without completing a valid response for the current command.</source>
          <target state="translated">Si se produce un error fatal,el programa escribe el mensaje de error en stderr y sale.El que llama debe esperar que se imprima un mensaje de error adecuado si el niño cierra la conexión sin completar una respuesta válida para el comando actual.</target>
        </trans-unit>
        <trans-unit id="571d71cd29e09f41d5c855a2a419d634cc0eecce" translate="yes" xml:space="preserve">
          <source>If a filter &lt;code&gt;must&lt;/code&gt; succeed in order to make the stored contents usable, you can declare that the filter is &lt;code&gt;required&lt;/code&gt;, in the configuration:</source>
          <target state="translated">Si un filtro &lt;code&gt;must&lt;/code&gt; tener &amp;eacute;xito para que el contenido almacenado sea utilizable, puede declarar que el filtro es &lt;code&gt;required&lt;/code&gt; , en la configuraci&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="22e70bb4ff6d3a3dd5464ffc106fa14107a4c8dc" translate="yes" xml:space="preserve">
          <source>If a git directory of a submodule is inside the submodule, move the git directory of the submodule into its superproject&amp;rsquo;s &lt;code&gt;$GIT_DIR/modules&lt;/code&gt; path and then connect the git directory and its working directory by setting the &lt;code&gt;core.worktree&lt;/code&gt; and adding a .git file pointing to the git directory embedded in the superprojects git directory.</source>
          <target state="translated">Si un directorio git de un subm&amp;oacute;dulo est&amp;aacute; dentro del subm&amp;oacute;dulo, mueva el directorio git del subm&amp;oacute;dulo a la &lt;code&gt;$GIT_DIR/modules&lt;/code&gt; su superproyecto y luego conecte el directorio git y su directorio de trabajo configurando &lt;code&gt;core.worktree&lt;/code&gt; y agregando un archivo .git apuntando al directorio git incrustado en el directorio git de superproyectos.</target>
        </trans-unit>
        <trans-unit id="7b7f1fa74f78e5b674bbee244bef979691bc168d" translate="yes" xml:space="preserve">
          <source>If a helper advertises &lt;code&gt;connect&lt;/code&gt;, Git will use it if possible and fall back to another capability if the helper requests so when connecting (see the &lt;code&gt;connect&lt;/code&gt; command under COMMANDS). When choosing between &lt;code&gt;fetch&lt;/code&gt; and &lt;code&gt;import&lt;/code&gt;, Git prefers &lt;code&gt;fetch&lt;/code&gt;. Other frontends may have some other order of preference.</source>
          <target state="translated">Si un asistente anuncia &lt;code&gt;connect&lt;/code&gt; , Git lo usar&amp;aacute; si es posible y recurrir&amp;aacute; a otra capacidad si el asistente lo solicita cuando se conecte (consulte el comando &lt;code&gt;connect&lt;/code&gt; en COMANDOS). Al elegir entre &lt;code&gt;fetch&lt;/code&gt; e &lt;code&gt;import&lt;/code&gt; ar , Git prefiere &lt;code&gt;fetch&lt;/code&gt; . Otras interfaces pueden tener alg&amp;uacute;n otro orden de preferencia.</target>
        </trans-unit>
        <trans-unit id="148562d25b0603b8eee662bc94ef7dd269783449" translate="yes" xml:space="preserve">
          <source>If a helper advertises &lt;code&gt;connect&lt;/code&gt;, Git will use it if possible and fall back to another capability if the helper requests so when connecting (see the &lt;code&gt;connect&lt;/code&gt; command under COMMANDS). When choosing between &lt;code&gt;push&lt;/code&gt; and &lt;code&gt;export&lt;/code&gt;, Git prefers &lt;code&gt;push&lt;/code&gt;. Other frontends may have some other order of preference.</source>
          <target state="translated">Si un asistente anuncia &lt;code&gt;connect&lt;/code&gt; , Git lo usar&amp;aacute; si es posible y recurrir&amp;aacute; a otra capacidad si el asistente lo solicita cuando se conecte (consulte el comando &lt;code&gt;connect&lt;/code&gt; en COMANDOS). Al elegir entre &lt;code&gt;push&lt;/code&gt; y &lt;code&gt;export&lt;/code&gt; , Git prefiere &lt;code&gt;push&lt;/code&gt; . Otras interfaces pueden tener alg&amp;uacute;n otro orden de preferencia.</target>
        </trans-unit>
        <trans-unit id="fa7f2d8c2e0ee7753a285dedc0954f30b43daa88" translate="yes" xml:space="preserve">
          <source>If a helper fails to perform the requested operation or needs to notify the user of a potential issue, it may write to stderr.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2388ab5f8918a49ad2647c3d1835f78b1fd11f78" translate="yes" xml:space="preserve">
          <source>If a helper outputs a &lt;code&gt;quit&lt;/code&gt; attribute with a value of &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;1&lt;/code&gt;, no further helpers will be consulted, nor will the user be prompted (if no credential has been provided, the operation will then fail).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79eaf960175c04b54e3507607c968b768d5dc83c" translate="yes" xml:space="preserve">
          <source>If a helper receives any other operation, it should silently ignore the request. This leaves room for future operations to be added (older helpers will just ignore the new requests).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c8d1c4561ad329297670b7c11b5cea0c040fa93" translate="yes" xml:space="preserve">
          <source>If a line exists in both the source and destination, exists only once, and starts with this text, this algorithm attempts to prevent it from appearing as a deletion or addition in the output. It uses the &quot;patience diff&quot; algorithm internally.</source>
          <target state="translated">Si una línea existe tanto en la fuente como en el destino,existe sólo una vez y comienza con este texto,este algoritmo intenta evitar que aparezca como una supresión o adición en la salida.Utiliza el algoritmo &quot;patience diff&quot; internamente.</target>
        </trans-unit>
        <trans-unit id="03800f18f812afe9c365f3cd10e3618c12ca274e" translate="yes" xml:space="preserve">
          <source>If a linked working tree is stored on a portable device or network share which is not always mounted, you can prevent its administrative files from being pruned by issuing the &lt;code&gt;git worktree lock&lt;/code&gt; command, optionally specifying &lt;code&gt;--reason&lt;/code&gt; to explain why the working tree is locked.</source>
          <target state="translated">Si un &amp;aacute;rbol de trabajo vinculado se almacena en un dispositivo port&amp;aacute;til o en un recurso compartido de red que no siempre est&amp;aacute; montado, puede evitar que se &lt;code&gt;git worktree lock&lt;/code&gt; sus archivos administrativos emitiendo el comando git worktree lock , especificando opcionalmente &lt;code&gt;--reason&lt;/code&gt; para explicar por qu&amp;eacute; el &amp;aacute;rbol de trabajo est&amp;aacute; bloqueado .</target>
        </trans-unit>
        <trans-unit id="055300f804a90741eca19d86c43f3b133b4438b5" translate="yes" xml:space="preserve">
          <source>If a merge resolution program is not specified, &lt;code&gt;git mergetool&lt;/code&gt; will use the configuration variable &lt;code&gt;merge.tool&lt;/code&gt;. If the configuration variable &lt;code&gt;merge.tool&lt;/code&gt; is not set, &lt;code&gt;git mergetool&lt;/code&gt; will pick a suitable default.</source>
          <target state="translated">Si no se especifica un programa de resoluci&amp;oacute;n de fusi&amp;oacute;n, &lt;code&gt;git mergetool&lt;/code&gt; usar&amp;aacute; la variable de configuraci&amp;oacute;n &lt;code&gt;merge.tool&lt;/code&gt; . Si la variable de configuraci&amp;oacute;n &lt;code&gt;merge.tool&lt;/code&gt; no est&amp;aacute; establecida, &lt;code&gt;git mergetool&lt;/code&gt; elegir&amp;aacute; un valor predeterminado adecuado.</target>
        </trans-unit>
        <trans-unit id="1ea5bcda19ff920edc6797065824126354674b5b" translate="yes" xml:space="preserve">
          <source>If a name is specified on stdin that cannot be resolved to an object in the repository, then &lt;code&gt;cat-file&lt;/code&gt; will ignore any custom format and print:</source>
          <target state="translated">Si se especifica un nombre en stdin que no se puede resolver en un objeto en el repositorio, &lt;code&gt;cat-file&lt;/code&gt; ignorar&amp;aacute; cualquier formato personalizado e imprimir&amp;aacute;:</target>
        </trans-unit>
        <trans-unit id="b64d6e7bd6f81b6c41d97bf3465e33dac59a1923" translate="yes" xml:space="preserve">
          <source>If a name is specified that might refer to more than one object (an ambiguous short sha), then &lt;code&gt;cat-file&lt;/code&gt; will ignore any custom format and print:</source>
          <target state="translated">Si se especifica un nombre que puede hacer referencia a m&amp;aacute;s de un objeto (un sha corto ambiguo), &lt;code&gt;cat-file&lt;/code&gt; ignorar&amp;aacute; cualquier formato personalizado e imprimir&amp;aacute;:</target>
        </trans-unit>
        <trans-unit id="6e4b893bbe0d833def4e5b2195c3efca0abfc652" translate="yes" xml:space="preserve">
          <source>If a namespace is in use, the namespace prefix is stripped from each reference before it is matched against &lt;code&gt;transfer.hiderefs&lt;/code&gt; patterns. For example, if &lt;code&gt;refs/heads/master&lt;/code&gt; is specified in &lt;code&gt;transfer.hideRefs&lt;/code&gt; and the current namespace is &lt;code&gt;foo&lt;/code&gt;, then &lt;code&gt;refs/namespaces/foo/refs/heads/master&lt;/code&gt; is omitted from the advertisements but &lt;code&gt;refs/heads/master&lt;/code&gt; and &lt;code&gt;refs/namespaces/bar/refs/heads/master&lt;/code&gt; are still advertised as so-called &quot;have&quot; lines. In order to match refs before stripping, add a &lt;code&gt;^&lt;/code&gt; in front of the ref name. If you combine &lt;code&gt;!&lt;/code&gt; and &lt;code&gt;^&lt;/code&gt;, &lt;code&gt;!&lt;/code&gt; must be specified first.</source>
          <target state="translated">Si un espacio de nombres est&amp;aacute; en uso, el prefijo del espacio de nombres se elimina de cada referencia antes de compararlo con los patrones &lt;code&gt;transfer.hiderefs&lt;/code&gt; . Por ejemplo, si se especifica &lt;code&gt;refs/heads/master&lt;/code&gt; en &lt;code&gt;transfer.hideRefs&lt;/code&gt; y el espacio de nombres actual es &lt;code&gt;foo&lt;/code&gt; , entonces &lt;code&gt;refs/namespaces/foo/refs/heads/master&lt;/code&gt; se omite de los anuncios, pero &lt;code&gt;refs/heads/master&lt;/code&gt; y &lt;code&gt;refs/namespaces/bar/refs/heads/master&lt;/code&gt; todav&amp;iacute;a se anuncian como las llamadas l&amp;iacute;neas &quot;have&quot;. Para hacer coincidir las referencias antes de eliminarlas, agregue un &lt;code&gt;^&lt;/code&gt; delante del nombre de la referencia. &amp;iexcl;Si combinas &lt;code&gt;!&lt;/code&gt; y &lt;code&gt;^&lt;/code&gt; , &lt;code&gt;!&lt;/code&gt; debe especificarse primero.</target>
        </trans-unit>
        <trans-unit id="01a3979b0db1ea5ddb68d8d2296f1a14d4a19443" translate="yes" xml:space="preserve">
          <source>If a positive depth is requested, the server will compute the set of commits which are no deeper than the desired depth.</source>
          <target state="translated">Si se solicita una profundidad positiva,el servidor calculará el conjunto de compromisos que no son más profundos que la profundidad deseada.</target>
        </trans-unit>
        <trans-unit id="1af76a23a450746535be3f72c4b4bca12a2092d2" translate="yes" xml:space="preserve">
          <source>If a push would not result in a &lt;a href=&quot;#fast-forwards&quot;&gt;fast-forward&lt;/a&gt; of the remote branch, then it will fail with an error like:</source>
          <target state="translated">Si una inserci&amp;oacute;n no da como resultado un &lt;a href=&quot;#fast-forwards&quot;&gt;avance r&amp;aacute;pido&lt;/a&gt; de la rama remota, fallar&amp;aacute; con un error como:</target>
        </trans-unit>
        <trans-unit id="74746f4cd8d12a2fd7c6b3eb595d0f3e0b5c16c7" translate="yes" xml:space="preserve">
          <source>If a reflog entry&amp;rsquo;s predecessor is pruned, adjust its &quot;old&quot; SHA-1 to be equal to the &quot;new&quot; SHA-1 field of the entry that now precedes it.</source>
          <target state="translated">Si se poda el predecesor de una entrada de reflog, ajuste su &quot;antiguo&quot; SHA-1 para que sea igual al &quot;nuevo&quot; campo SHA-1 de la entrada que ahora lo precede.</target>
        </trans-unit>
        <trans-unit id="335f210edb83cade21599987ff0ffeaab940885d" translate="yes" xml:space="preserve">
          <source>If a refspec is prefixed by &lt;code&gt;^&lt;/code&gt;, it will be interpreted as a negative refspec. Rather than specifying which refs to fetch or which local refs to update, such a refspec will instead specify refs to exclude. A ref will be considered to match if it matches at least one positive refspec, and does not match any negative refspec. Negative refspecs can be useful to restrict the scope of a pattern refspec so that it will not include specific refs. Negative refspecs can themselves be pattern refspecs. However, they may only contain a &amp;lt;src&amp;gt; and do not specify a &amp;lt;dst&amp;gt;. Fully spelled out hex object names are also not supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6545e25a03004b7b80ff7680d7d52c75ae528db2" translate="yes" xml:space="preserve">
          <source>If a specified file is in the index but is missing then it&amp;rsquo;s removed. Default behavior is to ignore removed file.</source>
          <target state="translated">Si un archivo especificado est&amp;aacute; en el &amp;iacute;ndice pero falta, se elimina. El comportamiento predeterminado es ignorar el archivo eliminado.</target>
        </trans-unit>
        <trans-unit id="0b6d50904501e60c5730f3fc1689dbda57685832" translate="yes" xml:space="preserve">
          <source>If a specified file isn&amp;rsquo;t in the index already then it&amp;rsquo;s added. Default behaviour is to ignore new files.</source>
          <target state="translated">Si un archivo especificado a&amp;uacute;n no est&amp;aacute; en el &amp;iacute;ndice, se agrega. El comportamiento predeterminado es ignorar los archivos nuevos.</target>
        </trans-unit>
        <trans-unit id="a14dea6ce44fe61b94cf6eca48f584619dca6981" translate="yes" xml:space="preserve">
          <source>If a subject is not found in the patch description the patch name is preserved as the 1 line subject in the Git description.</source>
          <target state="translated">Si un sujeto no se encuentra en la descripción del parche,el nombre del parche se conserva como el sujeto de una línea en la descripción del Git.</target>
        </trans-unit>
        <trans-unit id="511834d1553ad3d02aefac42a3d932c821a68c9a" translate="yes" xml:space="preserve">
          <source>If a version-1 repository specifies any &lt;code&gt;extensions.*&lt;/code&gt; keys that the running git has not implemented, the operation MUST NOT proceed. Similarly, if the value of any known key is not understood by the implementation, the operation MUST NOT proceed.</source>
          <target state="translated">Si un repositorio de la versi&amp;oacute;n 1 especifica alguna &lt;code&gt;extensions.*&lt;/code&gt; Claves que el git en ejecuci&amp;oacute;n no ha implementado, la operaci&amp;oacute;n NO DEBE continuar. De manera similar, si la implementaci&amp;oacute;n no comprende el valor de cualquier clave conocida, la operaci&amp;oacute;n NO DEBE continuar.</target>
        </trans-unit>
        <trans-unit id="7fc57bcdf92fac8f6a715a452b985f9026a5a582" translate="yes" xml:space="preserve">
          <source>If a whole directory is classified as &quot;other&quot;, show just its name (with a trailing slash) and not its whole contents.</source>
          <target state="translated">Si un directorio entero es clasificado como &quot;otro&quot;,muestre sólo su nombre (con una barra)y no todo su contenido.</target>
        </trans-unit>
        <trans-unit id="9069929e0dad6127e4d7686101bafb1ad2a53dfd" translate="yes" xml:space="preserve">
          <source>If a working tree is deleted without using &lt;code&gt;git worktree remove&lt;/code&gt;, then its associated administrative files, which reside in the repository (see &quot;DETAILS&quot; below), will eventually be removed automatically (see &lt;code&gt;gc.worktreePruneExpire&lt;/code&gt; in &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;), or you can run &lt;code&gt;git worktree prune&lt;/code&gt; in the main or any linked working tree to clean up any stale administrative files.</source>
          <target state="translated">Si se elimina un &amp;aacute;rbol de trabajo sin usar &lt;code&gt;git worktree remove&lt;/code&gt; , sus archivos administrativos asociados, que residen en el repositorio (ver &quot;DETALLES&quot; a continuaci&amp;oacute;n), eventualmente se eliminar&amp;aacute;n autom&amp;aacute;ticamente (ver &lt;code&gt;gc.worktreePruneExpire&lt;/code&gt; en &lt;a href=&quot;git-config&quot;&gt;git-config [1]&lt;/a&gt; ), o puede ejecutar &lt;code&gt;git worktree prune&lt;/code&gt; en el &amp;aacute;rbol principal o en cualquier &amp;aacute;rbol de trabajo vinculado para limpiar cualquier archivo administrativo obsoleto.</target>
        </trans-unit>
        <trans-unit id="601f99371e1781bbcc6e4fbcb70987193e9cb892" translate="yes" xml:space="preserve">
          <source>If a working tree is on a portable device or network share which is not always mounted, lock it to prevent its administrative files from being pruned automatically. This also prevents it from being moved or deleted. Optionally, specify a reason for the lock with &lt;code&gt;--reason&lt;/code&gt;.</source>
          <target state="translated">Si un &amp;aacute;rbol de trabajo est&amp;aacute; en un dispositivo port&amp;aacute;til o en un recurso compartido de red que no siempre est&amp;aacute; montado, bloqu&amp;eacute;elo para evitar que sus archivos administrativos se eliminen autom&amp;aacute;ticamente. Esto tambi&amp;eacute;n evita que se mueva o elimine. Opcionalmente, especifique un motivo para el bloqueo con &lt;code&gt;--reason&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4c89355d42dbc93622cf0025bcf122df76b472f1" translate="yes" xml:space="preserve">
          <source>If advertised, indicates that any number of server specific options can be included in a request. This is done by sending each option as a &quot;server-option=&amp;lt;option&amp;gt;&quot; capability line in the capability-list section of a request.</source>
          <target state="translated">Si se anuncia, indica que se puede incluir cualquier n&amp;uacute;mero de opciones espec&amp;iacute;ficas del servidor en una solicitud. Esto se hace enviando cada opci&amp;oacute;n como una l&amp;iacute;nea de capacidad &quot;server-option = &amp;lt;option&amp;gt;&quot; en la secci&amp;oacute;n de lista de capacidades de una solicitud.</target>
        </trans-unit>
        <trans-unit id="c768073bebd10b960d1a77545805ba6684f69c55" translate="yes" xml:space="preserve">
          <source>If after this parent rewriting, &lt;code&gt;C'&lt;/code&gt; is a root or merge commit (has zero or &amp;gt;1 parents), a boundary commit, or !TREESAME, it remains. Otherwise, it is replaced with its only parent.</source>
          <target state="translated">Si despu&amp;eacute;s de la reescritura de este padre, &lt;code&gt;C'&lt;/code&gt; es una confirmaci&amp;oacute;n de ra&amp;iacute;z o fusi&amp;oacute;n (tiene cero o&amp;gt; 1 padres), una confirmaci&amp;oacute;n de l&amp;iacute;mite, o! TREESAME, permanece. De lo contrario, se reemplaza con su &amp;uacute;nico padre.</target>
        </trans-unit>
        <trans-unit id="331241d5d1136bad0fab6978a8eab7a815b255e9" translate="yes" xml:space="preserve">
          <source>If all &amp;lt;ref&amp;gt;s can be locked with matching &amp;lt;oldvalue&amp;gt;s simultaneously, all modifications are performed. Otherwise, no modifications are performed. Note that while each individual &amp;lt;ref&amp;gt; is updated or deleted atomically, a concurrent reader may still see a subset of the modifications.</source>
          <target state="translated">Si todos los &amp;lt;ref&amp;gt; s pueden bloquearse con &amp;lt;oldvalue&amp;gt; coincidentes simult&amp;aacute;neamente, se realizan todas las modificaciones. De lo contrario, no se realizan modificaciones. Tenga en cuenta que, si bien cada &amp;lt;ref&amp;gt; individual se actualiza o elimina de forma at&amp;oacute;mica, un lector simult&amp;aacute;neo a&amp;uacute;n puede ver un subconjunto de las modificaciones.</target>
        </trans-unit>
        <trans-unit id="f2745e08ed788856c12f02ca7a5befc54f3c9443" translate="yes" xml:space="preserve">
          <source>If all named commits are already ancestors of &lt;code&gt;HEAD&lt;/code&gt;, &lt;code&gt;git merge&lt;/code&gt; will exit early with the message &quot;Already up to date.&quot;</source>
          <target state="translated">Si todas las confirmaciones nombradas ya son ancestros de &lt;code&gt;HEAD&lt;/code&gt; , &lt;code&gt;git merge&lt;/code&gt; saldr&amp;aacute; temprano con el mensaje &quot;Ya actualizado&quot;.</target>
        </trans-unit>
        <trans-unit id="cf6cb5a66ab4b3c3c33160d1bdddf3e27a51bd6e" translate="yes" xml:space="preserve">
          <source>If all you really want to do is to remove from the index the files that are no longer present in the working tree (perhaps because your working tree is dirty so that you cannot use &lt;code&gt;git commit -a&lt;/code&gt;), use the following command:</source>
          <target state="translated">Si todo lo que realmente quiere hacer es eliminar del &amp;iacute;ndice los archivos que ya no est&amp;aacute;n presentes en el &amp;aacute;rbol de trabajo (tal vez porque su &amp;aacute;rbol de trabajo est&amp;aacute; sucio y no puede usar &lt;code&gt;git commit -a&lt;/code&gt; ), use el siguiente comando:</target>
        </trans-unit>
        <trans-unit id="232e0a33b39a8eedbea0de34207896fce9d5da1b" translate="yes" xml:space="preserve">
          <source>If an SVN revision has a property, &quot;svm:headrev&quot;, it is likely that the revision was created by SVN::Mirror (also used by SVK). The property contains a repository UUID and a revision. We want to make it look like we are mirroring the original URL, so introduce a helper function that returns the original identity URL and UUID, and use it when generating metadata in commit messages.</source>
          <target state="translated">Si una revisión de SVN tiene una propiedad,&quot;svm:headrev&quot;,es probable que la revisión haya sido creada por SVN::Mirror (también utilizada por SVK).La propiedad contiene un repositorio UUID y una revisión.Queremos que parezca que estamos reflejando la URL original,por lo que introducimos una función de ayuda que devuelve la identidad original de la URL y el UUID,y la usamos cuando generamos metadatos en los mensajes de confirmación.</target>
        </trans-unit>
        <trans-unit id="8ec6058ea575ab09ff2743fac6f67664b17c975f" translate="yes" xml:space="preserve">
          <source>If an alias is given, git shows the definition of the alias on standard output. To get the manual page for the aliased command, use &lt;code&gt;git COMMAND --help&lt;/code&gt;.</source>
          <target state="translated">Si se proporciona un alias, git muestra la definici&amp;oacute;n del alias en la salida est&amp;aacute;ndar. Para obtener la p&amp;aacute;gina del manual para el comando con alias, use &lt;code&gt;git COMMAND --help&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="06b64f77884080bf4b8a1b3580804b4fc90c62bc" translate="yes" xml:space="preserve">
          <source>If an exact match was not found, &lt;code&gt;git describe&lt;/code&gt; will walk back through the commit history to locate an ancestor commit which has been tagged. The ancestor&amp;rsquo;s tag will be output along with an abbreviation of the input commit-ish&amp;rsquo;s SHA-1. If &lt;code&gt;--first-parent&lt;/code&gt; was specified then the walk will only consider the first parent of each commit.</source>
          <target state="translated">Si no se encontr&amp;oacute; una coincidencia exacta, &lt;code&gt;git describe&lt;/code&gt; retroceder&amp;aacute; por el historial de confirmaciones para localizar una confirmaci&amp;oacute;n anterior que haya sido etiquetada. La etiqueta del ancestro se generar&amp;aacute; junto con una abreviatura del SHA-1 del compromiso de entrada. Si se especific&amp;oacute; &lt;code&gt;--first-parent&lt;/code&gt; , la caminata solo considerar&amp;aacute; el primer padre de cada confirmaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="98c6f5f40e2b8ae0667cb14d2e8af19ba85f9e07" translate="yes" xml:space="preserve">
          <source>If an existing replace ref for the same object exists, it will be overwritten (instead of failing).</source>
          <target state="translated">Si existe una referencia de reemplazo para el mismo objeto,se sobrescribirá (en lugar de fallar).</target>
        </trans-unit>
        <trans-unit id="046c10da2487af8c5911472dad4ec66653003b0a" translate="yes" xml:space="preserve">
          <source>If any &amp;lt;file&amp;gt; does not appear in the index, treat this as an error (return 1).</source>
          <target state="translated">Si alg&amp;uacute;n &amp;lt;archivo&amp;gt; no aparece en el &amp;iacute;ndice, tr&amp;aacute;telo como un error (devuelva 1).</target>
        </trans-unit>
        <trans-unit id="d5c329c54100c9f229f2bd1af9a36354df219a33" translate="yes" xml:space="preserve">
          <source>If any evaluation of &amp;lt;command&amp;gt; returns a non-zero exit status, the whole operation will be aborted.</source>
          <target state="translated">Si alguna evaluaci&amp;oacute;n de &amp;lt;comando&amp;gt; devuelve un estado de salida distinto de cero, toda la operaci&amp;oacute;n ser&amp;aacute; abortada.</target>
        </trans-unit>
        <trans-unit id="939ada40ab0c594838b538aaf9b14ce39d17200d" translate="yes" xml:space="preserve">
          <source>If any file doesn&amp;rsquo;t begin with a From line, assume it is a single mail message instead of signaling error.</source>
          <target state="translated">Si alg&amp;uacute;n archivo no comienza con una l&amp;iacute;nea De, asuma que es un solo mensaje de correo en lugar de indicar un error.</target>
        </trans-unit>
        <trans-unit id="824867a2502f9c0cf53ed6a13fd4b286bb82c4ed" translate="yes" xml:space="preserve">
          <source>If any files that should not be normalized show up in &lt;code&gt;git status&lt;/code&gt;, unset their &lt;code&gt;text&lt;/code&gt; attribute before running &lt;code&gt;git add -u&lt;/code&gt;.</source>
          <target state="translated">Si alg&amp;uacute;n archivo que no deber&amp;iacute;a normalizarse aparece en &lt;code&gt;git status&lt;/code&gt; , anule su atributo de &lt;code&gt;text&lt;/code&gt; o antes de ejecutar &lt;code&gt;git add -u&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8c34b6095a9c49861d2acc43610b57c3a4a36934" translate="yes" xml:space="preserve">
          <source>If any files were ever &quot;cvs import&quot;ed more than once (e.g., import of more than one vendor release) the HEAD contains the wrong content.</source>
          <target state="translated">Si algún archivo fue &quot;importado&quot; más de una vez (por ejemplo,la importación de más de una versión de un proveedor)el HEAD contiene el contenido equivocado.</target>
        </trans-unit>
        <trans-unit id="8a184d41ad4c8629ad4f2bce24803b0c9fa2c0bb" translate="yes" xml:space="preserve">
          <source>If any of the remote changes overlap with local uncommitted changes, the merge will be automatically canceled and the work tree untouched. It is generally best to get any local changes in working order before pulling or stash them away with &lt;a href=&quot;git-stash&quot;&gt;git-stash[1]&lt;/a&gt;.</source>
          <target state="translated">Si alguno de los cambios remotos se superpone con los cambios locales no confirmados, la combinaci&amp;oacute;n se cancelar&amp;aacute; autom&amp;aacute;ticamente y el &amp;aacute;rbol de trabajo quedar&amp;aacute; intacto. Por lo general, es mejor hacer que los cambios locales funcionen antes de extraerlos o guardarlos con &lt;a href=&quot;git-stash&quot;&gt;git-stash [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="27aabdb37af0432fadcd5ffecc44449505cac9be" translate="yes" xml:space="preserve">
          <source>If any optional &lt;code&gt;&amp;lt;path&amp;gt;...&lt;/code&gt; arguments are given, only those paths are affected.</source>
          <target state="translated">Si se dan argumentos opcionales &lt;code&gt;&amp;lt;path&amp;gt;...&lt;/code&gt; , solo esas rutas se ven afectadas.</target>
        </trans-unit>
        <trans-unit id="d20da8878e924b8ea99ba5928199985d6eb45c5b" translate="yes" xml:space="preserve">
          <source>If at least one of the specified mechanisms matches the ones advertised by the SMTP server and if it is supported by the utilized SASL library, the mechanism is used for authentication. If neither &lt;code&gt;sendemail.smtpAuth&lt;/code&gt; nor &lt;code&gt;--smtp-auth&lt;/code&gt; is specified, all mechanisms supported by the SASL library can be used. The special value &lt;code&gt;none&lt;/code&gt; maybe specified to completely disable authentication independently of &lt;code&gt;--smtp-user&lt;/code&gt;</source>
          <target state="translated">Si al menos uno de los mecanismos especificados coincide con los anunciados por el servidor SMTP y es compatible con la biblioteca SASL utilizada, el mecanismo se utiliza para la autenticaci&amp;oacute;n. Si no se &lt;code&gt;sendemail.smtpAuth&lt;/code&gt; ni sendemail.smtpAuth ni &lt;code&gt;--smtp-auth&lt;/code&gt; , se pueden utilizar todos los mecanismos admitidos por la biblioteca SASL. El valor especial &lt;code&gt;none&lt;/code&gt; se puede especificar para deshabilitar completamente la autenticaci&amp;oacute;n independientemente de &lt;code&gt;--smtp-user&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="48ca5fe331a67872cf3424cd090943cee3b1214a" translate="yes" xml:space="preserve">
          <source>If config parameter &quot;core.logAllRefUpdates&quot; is true and the ref is one under &quot;refs/heads/&quot;, &quot;refs/remotes/&quot;, &quot;refs/notes/&quot;, or a pseudoref like HEAD or ORIG_HEAD; or the file &quot;$GIT_DIR/logs/&amp;lt;ref&amp;gt;&quot; exists then &lt;code&gt;git update-ref&lt;/code&gt; will append a line to the log file &quot;$GIT_DIR/logs/&amp;lt;ref&amp;gt;&quot; (dereferencing all symbolic refs before creating the log name) describing the change in ref value. Log lines are formatted as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d66be204c5192d97175dc2e5a6cea91a845a9494" translate="yes" xml:space="preserve">
          <source>If config parameter &quot;core.logAllRefUpdates&quot; is true and the ref is one under &quot;refs/heads/&quot;, &quot;refs/remotes/&quot;, &quot;refs/notes/&quot;, or the symbolic ref HEAD; or the file &quot;$GIT_DIR/logs/&amp;lt;ref&amp;gt;&quot; exists then &lt;code&gt;git update-ref&lt;/code&gt; will append a line to the log file &quot;$GIT_DIR/logs/&amp;lt;ref&amp;gt;&quot; (dereferencing all symbolic refs before creating the log name) describing the change in ref value. Log lines are formatted as:</source>
          <target state="translated">Si el par&amp;aacute;metro de configuraci&amp;oacute;n &quot;core.logAllRefUpdates&quot; es verdadero y la referencia es una debajo de &quot;refs / heads /&quot;, &quot;refs / remotes /&quot;, &quot;refs / notes /&quot;, o la referencia simb&amp;oacute;lica HEAD; o el archivo &quot;$ GIT_DIR / logs / &amp;lt;ref&amp;gt;&quot; existe, entonces &lt;code&gt;git update-ref&lt;/code&gt; agregar&amp;aacute; una l&amp;iacute;nea al archivo de registro &quot;$ GIT_DIR / logs / &amp;lt;ref&amp;gt;&quot; (eliminando todas las referencias simb&amp;oacute;licas antes de crear el nombre del registro) describiendo el cambio en el valor de ref. Las l&amp;iacute;neas de registro tienen el formato:</target>
        </trans-unit>
        <trans-unit id="bb79d7b0840991ebe429aab3a3410932b975f32c" translate="yes" xml:space="preserve">
          <source>If conflicts arise and a strategy for automatically resolving conflicting notes (see the &quot;NOTES MERGE STRATEGIES&quot; section) is not given, the &quot;manual&quot; resolver is used. This resolver checks out the conflicting notes in a special worktree (&lt;code&gt;.git/NOTES_MERGE_WORKTREE&lt;/code&gt;), and instructs the user to manually resolve the conflicts there. When done, the user can either finalize the merge with &lt;code&gt;git notes merge --commit&lt;/code&gt;, or abort the merge with &lt;code&gt;git notes merge --abort&lt;/code&gt;.</source>
          <target state="translated">Si surgen conflictos y no se proporciona una estrategia para resolver autom&amp;aacute;ticamente las notas en conflicto (ver la secci&amp;oacute;n &quot;ESTRATEGIAS DE FUSI&amp;Oacute;N DE NOTAS&quot;), se utiliza el solucionador &quot;manual&quot;. Este solucionador comprueba las notas en conflicto en un &amp;aacute;rbol de trabajo especial ( &lt;code&gt;.git/NOTES_MERGE_WORKTREE&lt;/code&gt; ) y le indica al usuario que resuelva manualmente los conflictos all&amp;iacute;. Cuando termine, el usuario puede finalizar la fusi&amp;oacute;n con &lt;code&gt;git notes merge --commit&lt;/code&gt; , o abortar la fusi&amp;oacute;n con &lt;code&gt;git notes merge --abort&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a02a69db3092fb7486e9bff9ff76c98958fe4d57" translate="yes" xml:space="preserve">
          <source>If core.commitGraph is true, the commit-graph file will also be inspected using &lt;code&gt;git commit-graph verify&lt;/code&gt;. See &lt;a href=&quot;git-commit-graph&quot;&gt;git-commit-graph[1]&lt;/a&gt;.</source>
          <target state="translated">Si core.commitGraph es verdadero, el archivo commit-graph tambi&amp;eacute;n se inspeccionar&amp;aacute; usando &lt;code&gt;git commit-graph verify&lt;/code&gt; . Ver &lt;a href=&quot;git-commit-graph&quot;&gt;git-commit-graph [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8280fdd5ec3fb25317b497d70f747c3177f7ef0e" translate="yes" xml:space="preserve">
          <source>If disabled with &quot;--no-thread&quot;, those headers will not be added (unless specified with --in-reply-to). Default is the value of the &lt;code&gt;sendemail.thread&lt;/code&gt; configuration value; if that is unspecified, default to --thread.</source>
          <target state="translated">Si est&amp;aacute; deshabilitado con &quot;--no-thread&quot;, esos encabezados no se agregar&amp;aacute;n (a menos que se especifique con --in-reply-to). El valor predeterminado es el valor de configuraci&amp;oacute;n de &lt;code&gt;sendemail.thread&lt;/code&gt; ; si no se especifica, el valor predeterminado es --thread.</target>
        </trans-unit>
        <trans-unit id="f00c2d7bc0317e9cad287fad199ae73edff4a848" translate="yes" xml:space="preserve">
          <source>If either &amp;lt;upstream&amp;gt; or --root is given on the command line, then the default is &lt;code&gt;--no-fork-point&lt;/code&gt;, otherwise the default is &lt;code&gt;--fork-point&lt;/code&gt;.</source>
          <target state="translated">Si se da &amp;lt;upstream&amp;gt; o --root en la l&amp;iacute;nea de comando, entonces el valor predeterminado es &lt;code&gt;--no-fork-point&lt;/code&gt; , de lo contrario, el valor predeterminado es &lt;code&gt;--fork-point&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a4729a11522c55d49b0e7c329a8805975c4198d9" translate="yes" xml:space="preserve">
          <source>If either of these environment variables is set then &lt;code&gt;git fetch&lt;/code&gt; and &lt;code&gt;git push&lt;/code&gt; will use the specified command instead of &lt;code&gt;ssh&lt;/code&gt; when they need to connect to a remote system. The command-line parameters passed to the configured command are determined by the ssh variant. See &lt;code&gt;ssh.variant&lt;/code&gt; option in &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt; for details.</source>
          <target state="translated">Si se establece alguna de estas variables de entorno, &lt;code&gt;git fetch&lt;/code&gt; y &lt;code&gt;git push&lt;/code&gt; usar&amp;aacute;n el comando especificado en lugar de &lt;code&gt;ssh&lt;/code&gt; cuando necesiten conectarse a un sistema remoto. Los par&amp;aacute;metros de la l&amp;iacute;nea de comandos que se pasan al comando configurado est&amp;aacute;n determinados por la variante ssh. Consulte la opci&amp;oacute;n &lt;code&gt;ssh.variant&lt;/code&gt; en &lt;a href=&quot;git-config&quot;&gt;git-config [1]&lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="3669ee4e6fd1ff3473f59b85f73b98bc8093a5f0" translate="yes" xml:space="preserve">
          <source>If enabled the helper should automatically fetch annotated tag objects if the object the tag points at was transferred during the fetch command. If the tag is not fetched by the helper a second fetch command will usually be sent to ask for the tag specifically. Some helpers may be able to use this option to avoid a second network connection.</source>
          <target state="translated">Si está activada,el ayudante debe recuperar automáticamente los objetos de la etiqueta anotados si el objeto al que la etiqueta apunta fue transferido durante el comando de recuperación.Si la etiqueta no es recuperada por el helper,se enviará un segundo comando fetch para pedir la etiqueta específicamente.Algunos helpers pueden utilizar esta opción para evitar una segunda conexión de red.</target>
        </trans-unit>
        <trans-unit id="27acfa87cdb69a824b9bae48206b42168ffde848" translate="yes" xml:space="preserve">
          <source>If enabled, &lt;code&gt;git p4 submit&lt;/code&gt; will attempt to cleanup RCS keywords ($Header$, etc). These would otherwise cause merge conflicts and prevent the submit going ahead. This option should be considered experimental at present.</source>
          <target state="translated">Si est&amp;aacute; habilitado, &lt;code&gt;git p4 submit&lt;/code&gt; intentar&amp;aacute; limpiar las palabras clave RCS ($ Header $, etc.). De lo contrario, estos causar&amp;iacute;an conflictos de fusi&amp;oacute;n e impedir&amp;iacute;an que el env&amp;iacute;o se realizara. Esta opci&amp;oacute;n deber&amp;iacute;a considerarse experimental en la actualidad.</target>
        </trans-unit>
        <trans-unit id="551059a87916480f640c4e8b1f0ae5467d5d2b16" translate="yes" xml:space="preserve">
          <source>If everything fails, or if no viewer is configured, the viewer specified in the &lt;code&gt;GIT_MAN_VIEWER&lt;/code&gt; environment variable will be tried. If that fails too, the &lt;code&gt;man&lt;/code&gt; program will be tried anyway.</source>
          <target state="translated">Si todo falla, o si no hay ning&amp;uacute;n visor configurado, se &lt;code&gt;GIT_MAN_VIEWER&lt;/code&gt; el visor especificado en la variable de entorno GIT_MAN_VIEWER . Si eso tambi&amp;eacute;n falla, el programa &lt;code&gt;man&lt;/code&gt; se intentar&amp;aacute; de todos modos.</target>
        </trans-unit>
        <trans-unit id="dc951917b8a4344a8f095e91594828b8eb0d132d" translate="yes" xml:space="preserve">
          <source>If explicit refspecs were given on the command line of &lt;code&gt;git pull&lt;/code&gt;, they are all merged.</source>
          <target state="translated">Si se proporcionaron refspecs expl&amp;iacute;citos en la l&amp;iacute;nea de comando de &lt;code&gt;git pull&lt;/code&gt; , todos se fusionan.</target>
        </trans-unit>
        <trans-unit id="9f9421c37df0f080e8411a466937f35ec8c1d1a5" translate="yes" xml:space="preserve">
          <source>If false, symbolic links are checked out as small plain files that contain the link text. &lt;a href=&quot;git-update-index&quot;&gt;git-update-index[1]&lt;/a&gt; and &lt;a href=&quot;git-add&quot;&gt;git-add[1]&lt;/a&gt; will not change the recorded type to regular file. Useful on filesystems like FAT that do not support symbolic links.</source>
          <target state="translated">Si es falso, los enlaces simb&amp;oacute;licos se comprueban como peque&amp;ntilde;os archivos sin formato que contienen el texto del enlace. &lt;a href=&quot;git-update-index&quot;&gt;git-update-index [1]&lt;/a&gt; y &lt;a href=&quot;git-add&quot;&gt;git-add [1]&lt;/a&gt; no cambiar&amp;aacute;n el tipo registrado a un archivo normal. &amp;Uacute;til en sistemas de archivos como FAT que no admiten enlaces simb&amp;oacute;licos.</target>
        </trans-unit>
        <trans-unit id="8463a48927d35802080dff1be147345270adfa9a" translate="yes" xml:space="preserve">
          <source>If false, the ctime differences between the index and the working tree are ignored; useful when the inode change time is regularly modified by something outside Git (file system crawlers and some backup systems). See &lt;a href=&quot;git-update-index&quot;&gt;git-update-index[1]&lt;/a&gt;. True by default.</source>
          <target state="translated">Si es falso, se ignoran las diferencias de ctime entre el &amp;iacute;ndice y el &amp;aacute;rbol de trabajo; &amp;uacute;til cuando el tiempo de cambio de inodo es modificado regularmente por algo externo a Git (rastreadores del sistema de archivos y algunos sistemas de respaldo). Consulte &lt;a href=&quot;git-update-index&quot;&gt;git-update-index [1]&lt;/a&gt; . Verdadero por defecto.</target>
        </trans-unit>
        <trans-unit id="c3b2c82ffccecb89175e5c1911567eb5a6cff2f5" translate="yes" xml:space="preserve">
          <source>If fast-import is supplied invalid input it will terminate with a non-zero exit status and create a crash report in the top level of the Git repository it was importing into. Crash reports contain a snapshot of the internal fast-import state as well as the most recent commands that lead up to the crash.</source>
          <target state="translated">Si se suministra una entrada inválida de importación rápida,terminará con un estado de salida distinto de cero y creará un informe de accidente en el nivel superior del repositorio de Git al que estaba importando.Los informes de fallos contienen una instantánea del estado interno de importación rápida,así como los comandos más recientes que conducen al fallo.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
