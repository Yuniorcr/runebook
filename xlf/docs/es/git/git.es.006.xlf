<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="git">
    <body>
      <group id="git">
        <trans-unit id="ae19e2f586d76eb404950c906a0e28fc48bd4144" translate="yes" xml:space="preserve">
          <source>If the target branch in refs/remotes/p4-unshelved already exists, the old one will be renamed.</source>
          <target state="translated">Si la rama del objetivo en refs/remots/p4-unknown ya existe,la antigua será renombrada.</target>
        </trans-unit>
        <trans-unit id="2f7883dbe6de00b83ac31c035cb47ace7f18b215" translate="yes" xml:space="preserve">
          <source>If the timestamp order of different files cross the revision order within the commit matching time window the order of commits may be wrong.</source>
          <target state="translated">Si el orden de la marca de tiempo de diferentes ficheros se cruza con el orden de revisión dentro de la ventana de tiempo de coincidencia de confirmación,el orden de las confirmaciones puede ser erróneo.</target>
        </trans-unit>
        <trans-unit id="9e02bc5f839968fa2bd55c9715c548322d410f70" translate="yes" xml:space="preserve">
          <source>If the update is done via merge, the submodule conflicts are resolved and checked out.</source>
          <target state="translated">Si la actualización se hace mediante fusión,los conflictos de submódulos se resuelven y se comprueban.</target>
        </trans-unit>
        <trans-unit id="e429444552f2f76afd93b7eab781098fd53d76ab" translate="yes" xml:space="preserve">
          <source>If the upstream branch already contains a change you have made (e.g., because you mailed a patch which was applied upstream), then that commit will be skipped. For example, running &lt;code&gt;git rebase master&lt;/code&gt; on the following history (in which &lt;code&gt;A'&lt;/code&gt; and &lt;code&gt;A&lt;/code&gt; introduce the same set of changes, but have different committer information):</source>
          <target state="translated">Si la rama ascendente ya contiene un cambio que ha realizado (por ejemplo, porque envi&amp;oacute; por correo un parche que se aplic&amp;oacute; en sentido ascendente), se omitir&amp;aacute; esa confirmaci&amp;oacute;n. Por ejemplo, ejecutar &lt;code&gt;git rebase master&lt;/code&gt; en el siguiente historial (en el que &lt;code&gt;A'&lt;/code&gt; y &lt;code&gt;A&lt;/code&gt; introducen el mismo conjunto de cambios, pero tienen informaci&amp;oacute;n de confirmaci&amp;oacute;n diferente):</target>
        </trans-unit>
        <trans-unit id="8dd2ebfbc7db6f2a970a9204f7e4fecacb05b440" translate="yes" xml:space="preserve">
          <source>If the user is driving it, then at each step of the search, the user will have to test the current commit and say if it is &quot;good&quot; or &quot;bad&quot; using the &quot;git bisect good&quot; or &quot;git bisect bad&quot; commands respectively that have been described above. For example:</source>
          <target state="translated">Si el usuario lo está conduciendo,entonces en cada paso de la búsqueda,el usuario tendrá que probar la confirmación actual y decir si es &quot;buena&quot; o &quot;mala&quot; utilizando los comandos &quot;git bisect good&quot; o &quot;git bisect bad&quot; respectivamente que se han descrito anteriormente.Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="6929af54c2109d01f0c27eda6b64b41906b00393" translate="yes" xml:space="preserve">
          <source>If the user provides a --tag-name-filter that maps multiple tags to the same name, no warning or error is provided; git-filter-branch simply overwrites each tag in some undocumented pre-defined order resulting in only one tag at the end. (A git-filter-branch regression test requires this surprising behavior.)</source>
          <target state="translated">Si el usuario proporciona un filtro --tag-nombre-que asigna múltiples etiquetas al mismo nombre,no se proporciona ninguna advertencia o error;la rama del filtro git simplemente sobrescribe cada etiqueta en algún orden predefinido no documentado,lo que resulta en una sola etiqueta al final.(Una prueba de regresión del filtro git-rama requiere este sorprendente comportamiento).</target>
        </trans-unit>
        <trans-unit id="115afcefe8deea6713a6376b9b3612622ce5ff41" translate="yes" xml:space="preserve">
          <source>If the user running &lt;code&gt;git p4 submit&lt;/code&gt; does not exist in the p4 user map, &lt;code&gt;git p4&lt;/code&gt; exits. This option can be used to force submission regardless.</source>
          <target state="translated">Si el usuario que ejecuta &lt;code&gt;git p4 submit&lt;/code&gt; no existe en el mapa de usuario p4, &lt;code&gt;git p4&lt;/code&gt; sale. Esta opci&amp;oacute;n se puede utilizar para forzar la presentaci&amp;oacute;n independientemente.</target>
        </trans-unit>
        <trans-unit id="4ce7fbc3c51757d8b6052ea0a42e4807120e305f" translate="yes" xml:space="preserve">
          <source>If the value is boolean, turns on or off pagination of the output of a particular Git subcommand when writing to a tty. Otherwise, turns on pagination for the subcommand using the pager specified by the value of &lt;code&gt;pager.&amp;lt;cmd&amp;gt;&lt;/code&gt;. If &lt;code&gt;--paginate&lt;/code&gt; or &lt;code&gt;--no-pager&lt;/code&gt; is specified on the command line, it takes precedence over this option. To disable pagination for all commands, set &lt;code&gt;core.pager&lt;/code&gt; or &lt;code&gt;GIT_PAGER&lt;/code&gt; to &lt;code&gt;cat&lt;/code&gt;.</source>
          <target state="translated">Si el valor es booleano, activa o desactiva la paginaci&amp;oacute;n de la salida de un subcomando de Git en particular al escribir en un tty. De lo contrario, activa la paginaci&amp;oacute;n para el subcomando usando el paginador especificado por el valor de &lt;code&gt;pager.&amp;lt;cmd&amp;gt;&lt;/code&gt; . Si se &lt;code&gt;--no-pager&lt;/code&gt; &lt;code&gt;--paginate&lt;/code&gt; o --no-pager en la l&amp;iacute;nea de comando, tiene prioridad sobre esta opci&amp;oacute;n. Para deshabilitar la paginaci&amp;oacute;n para todos los comandos, configure &lt;code&gt;core.pager&lt;/code&gt; o &lt;code&gt;GIT_PAGER&lt;/code&gt; en &lt;code&gt;cat&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d03e93ea222dab8f641cb8201b06b8ce56eb4397" translate="yes" xml:space="preserve">
          <source>If the variable is set to an integer value greater than 2 and lower than 10 (strictly) then Git will interpret this value as an open file descriptor and will try to write the trace messages into this file descriptor.</source>
          <target state="translated">Si la variable se establece en un valor entero superior a 2 e inferior a 10 (estrictamente),entonces Git interpretará este valor como un descriptor de archivo abierto e intentará escribir los mensajes de rastreo en este descriptor de archivo.</target>
        </trans-unit>
        <trans-unit id="68e78b3aa184c7970e4ea72bcfa1c35c1841182d" translate="yes" xml:space="preserve">
          <source>If there are a large number of similarly-named remote repositories and you want to use a different format for them (such that the URLs you use will be rewritten into URLs that work), you can create a configuration section of the form:</source>
          <target state="translated">Si hay un gran número de depósitos remotos con nombres similares y desea utilizar un formato diferente para ellos (de modo que las direcciones URL que utilice se reescriban en direcciones URL que funcionen),puede crear una sección de configuración del formulario:</target>
        </trans-unit>
        <trans-unit id="1add756b76a7c17e78b77f722a60e35881bd1c18" translate="yes" xml:space="preserve">
          <source>If there are conflicts, the user should edit the result and delete one of the alternatives. When &lt;code&gt;--ours&lt;/code&gt;, &lt;code&gt;--theirs&lt;/code&gt;, or &lt;code&gt;--union&lt;/code&gt; option is in effect, however, these conflicts are resolved favouring lines from &lt;code&gt;&amp;lt;current-file&amp;gt;&lt;/code&gt;, lines from &lt;code&gt;&amp;lt;other-file&amp;gt;&lt;/code&gt;, or lines from both respectively. The length of the conflict markers can be given with the &lt;code&gt;--marker-size&lt;/code&gt; option.</source>
          <target state="translated">Si hay conflictos, el usuario debe editar el resultado y eliminar una de las alternativas. Cuando &lt;code&gt;--ours&lt;/code&gt; , &lt;code&gt;--theirs&lt;/code&gt; o &lt;code&gt;--union&lt;/code&gt; opci&amp;oacute;n est&amp;aacute; activada, sin embargo, estos conflictos se resuelven a favor de l&amp;iacute;neas &lt;code&gt;&amp;lt;current-file&amp;gt;&lt;/code&gt; , las l&amp;iacute;neas de &lt;code&gt;&amp;lt;other-file&amp;gt;&lt;/code&gt; , o l&amp;iacute;neas de ambos, respectivamente. La longitud de los marcadores de conflicto se puede dar con la opci&amp;oacute;n &lt;code&gt;--marker-size&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="86762a48683c371a4cc7c3de1cb012419562ae87" translate="yes" xml:space="preserve">
          <source>If there are multiple branches, doing &lt;code&gt;git p4 sync&lt;/code&gt; will automatically use the &quot;BRANCH DETECTION&quot; algorithm to try to partition new changes into the right branch. This can be overridden with the &lt;code&gt;--branch&lt;/code&gt; option to specify just a single branch to update.</source>
          <target state="translated">Si hay varias ramas, al hacer &lt;code&gt;git p4 sync&lt;/code&gt; se usar&amp;aacute; autom&amp;aacute;ticamente el algoritmo &quot;DETECCI&amp;Oacute;N DE SUCURSALES&quot; para intentar dividir los nuevos cambios en la rama derecha. Esto se puede anular con la opci&amp;oacute;n &lt;code&gt;--branch&lt;/code&gt; para especificar solo una rama para actualizar.</target>
        </trans-unit>
        <trans-unit id="618accc0d1d550b6b8ec069f55b5b09af649e985" translate="yes" xml:space="preserve">
          <source>If there are multiple instances of the &lt;code&gt;credential.helper&lt;/code&gt; configuration variable, each helper will be tried in turn, and may provide a username, password, or nothing. Once Git has acquired both a username and a password, no more helpers will be tried.</source>
          <target state="translated">Si hay varias instancias de la variable de configuraci&amp;oacute;n &lt;code&gt;credential.helper&lt;/code&gt; , cada ayudante se probar&amp;aacute; a su vez y puede proporcionar un nombre de usuario, contrase&amp;ntilde;a o nada. Una vez que Git haya adquirido un nombre de usuario y una contrase&amp;ntilde;a, no se probar&amp;aacute;n m&amp;aacute;s ayudantes.</target>
        </trans-unit>
        <trans-unit id="af9d46d5bd3ac828de63ddb9d4effe59327aaa5a" translate="yes" xml:space="preserve">
          <source>If there are other repositories that you also use frequently, you can create similar configuration options to save typing; for example,</source>
          <target state="translated">Si hay otros repositorios que también utiliza con frecuencia,puede crear opciones de configuración similares para guardar la escritura,por ejemplo,</target>
        </trans-unit>
        <trans-unit id="591918eb06b2723ac86bd0a089445e6e294cf8c5" translate="yes" xml:space="preserve">
          <source>If there exist packfiles in the pack directory not registered in the MIDX, then those packfiles are loaded into the &lt;code&gt;packed_git&lt;/code&gt; list and &lt;code&gt;packed_git_mru&lt;/code&gt; cache.</source>
          <target state="translated">Si existen packfiles en el directorio de paquete no registrada en el MIDX, entonces esos packfiles se cargan en el &lt;code&gt;packed_git&lt;/code&gt; lista y &lt;code&gt;packed_git_mru&lt;/code&gt; cach&amp;eacute;.</target>
        </trans-unit>
        <trans-unit id="03e18f44da1b610f354ea9baeb478307ccf925f8" translate="yes" xml:space="preserve">
          <source>If there is a separator at the beginning or middle (or both) of the pattern, then the pattern is relative to the directory level of the particular &lt;code&gt;.gitignore&lt;/code&gt; file itself. Otherwise the pattern may also match at any level below the &lt;code&gt;.gitignore&lt;/code&gt; level.</source>
          <target state="translated">Si hay un separador al principio o en el medio (o ambos) del patr&amp;oacute;n, entonces el patr&amp;oacute;n es relativo al nivel de directorio del archivo &lt;code&gt;.gitignore&lt;/code&gt; en particular . De lo contrario, el patr&amp;oacute;n tambi&amp;eacute;n puede coincidir en cualquier nivel por debajo del nivel &lt;code&gt;.gitignore&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="73c5dbd4863767291eb0584c1211aa56213f1838" translate="yes" xml:space="preserve">
          <source>If there is a separator at the end of the pattern then the pattern will only match directories, otherwise the pattern can match both files and directories.</source>
          <target state="translated">Si hay un separador al final del patrón,entonces el patrón sólo coincidirá con los directorios,de lo contrario el patrón puede coincidir tanto con los archivos como con los directorios.</target>
        </trans-unit>
        <trans-unit id="7e5e3b6d9186f0b0d9ca9ea83f70b7fee637fea2" translate="yes" xml:space="preserve">
          <source>If there is a separator, then the key will be used instead of both the &amp;lt;token&amp;gt; and the default separator when adding the trailer.</source>
          <target state="translated">Si hay un separador, se usar&amp;aacute; la clave en lugar del &amp;lt;token&amp;gt; y el separador predeterminado al agregar el avance.</target>
        </trans-unit>
        <trans-unit id="110096af5aaaf08aca8aad30cdfe6c3abec7eaf2" translate="yes" xml:space="preserve">
          <source>If there is no file or subtree at that path, &lt;code&gt;git fast-import&lt;/code&gt; will instead report</source>
          <target state="translated">Si no hay ning&amp;uacute;n archivo o sub&amp;aacute;rbol en esa ruta, &lt;code&gt;git fast-import&lt;/code&gt; informar&amp;aacute;</target>
        </trans-unit>
        <trans-unit id="1db0218c6ea3cc08d2d45a6158a3df08d714812b" translate="yes" xml:space="preserve">
          <source>If there is no parameter given by the user, use &lt;code&gt;&amp;lt;arg&amp;gt;&lt;/code&gt; instead.</source>
          <target state="translated">Si no hay ning&amp;uacute;n par&amp;aacute;metro proporcionado por el usuario, utilice &lt;code&gt;&amp;lt;arg&amp;gt;&lt;/code&gt; en su lugar.</target>
        </trans-unit>
        <trans-unit id="08079a827cded7daddc3f36e473048d3482101ec" translate="yes" xml:space="preserve">
          <source>If there is only one &amp;lt;tree-ish&amp;gt; given, the commit is compared with its parents (see --stdin below).</source>
          <target state="translated">Si solo se proporciona un &amp;lt;tree-ish&amp;gt;, la confirmaci&amp;oacute;n se compara con sus padres (consulte --stdin a continuaci&amp;oacute;n).</target>
        </trans-unit>
        <trans-unit id="f3b2c7580e6489ea5e91cbe02a9f524e00ba7a5a" translate="yes" xml:space="preserve">
          <source>If there were more commits on the &lt;em&gt;master&lt;/em&gt; branch after the merge, the merge commit itself would not be shown by &lt;em&gt;git show-branch&lt;/em&gt; by default. You would need to provide &lt;code&gt;--sparse&lt;/code&gt; option to make the merge commit visible in this case.</source>
          <target state="translated">Si hubiera m&amp;aacute;s confirmaciones en la rama &lt;em&gt;maestra&lt;/em&gt; despu&amp;eacute;s de la fusi&amp;oacute;n, &lt;em&gt;git show-branch&lt;/em&gt; no mostrar&amp;iacute;a la confirmaci&amp;oacute;n de fusi&amp;oacute;n en s&amp;iacute; de forma predeterminada. &lt;code&gt;--sparse&lt;/code&gt; proporcionar la opci&amp;oacute;n --sparse para que la confirmaci&amp;oacute;n de fusi&amp;oacute;n sea visible en este caso.</target>
        </trans-unit>
        <trans-unit id="0ab64f384f8b476963c3f64ac176ef68ee6de9f2" translate="yes" xml:space="preserve">
          <source>If there were uncommitted worktree changes present when the merge started, &lt;code&gt;git merge --abort&lt;/code&gt; will in some cases be unable to reconstruct these changes. It is therefore recommended to always commit or stash your changes before running &lt;code&gt;git merge&lt;/code&gt;.</source>
          <target state="translated">Si hab&amp;iacute;a cambios en el &amp;aacute;rbol de trabajo no confirmados cuando comenz&amp;oacute; la fusi&amp;oacute;n, &lt;code&gt;git merge --abort&lt;/code&gt; no podr&amp;aacute; en algunos casos reconstruir estos cambios. Por lo tanto, se recomienda confirmar o guardar siempre los cambios antes de ejecutar &lt;code&gt;git merge&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="967d5740c3c32e83504fdb7318f7465d81e3c6cb" translate="yes" xml:space="preserve">
          <source>If this atom is used in the output string, input lines are split at the first whitespace boundary. All characters before that whitespace are considered to be the object name; characters after that first run of whitespace (i.e., the &quot;rest&quot; of the line) are output in place of the &lt;code&gt;%(rest)&lt;/code&gt; atom.</source>
          <target state="translated">Si este &amp;aacute;tomo se usa en la cadena de salida, las l&amp;iacute;neas de entrada se dividen en el primer l&amp;iacute;mite de espacio en blanco. Todos los caracteres antes de ese espacio en blanco se consideran el nombre del objeto; los caracteres despu&amp;eacute;s de esa primera ejecuci&amp;oacute;n de espacios en blanco (es decir, el &quot;resto&quot; de la l&amp;iacute;nea) se generan en lugar del &amp;aacute;tomo &lt;code&gt;%(rest)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4b6208e01f164e5f8b5cfeffb592a9b059f78c4e" translate="yes" xml:space="preserve">
          <source>If this attribute is not set or has an invalid value, the value of the &lt;code&gt;gui.encoding&lt;/code&gt; configuration variable is used instead (See &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;).</source>
          <target state="translated">Si este atributo no est&amp;aacute; establecido o tiene un valor no v&amp;aacute;lido, se usa el valor de la variable de configuraci&amp;oacute;n &lt;code&gt;gui.encoding&lt;/code&gt; en su lugar (Ver &lt;a href=&quot;git-config&quot;&gt;git-config [1]&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="d21856ae35021bd75d04c1b344656e77c3e714d8" translate="yes" xml:space="preserve">
          <source>If this config variable is set, diff generation is not performed using the internal diff machinery, but using the given command. Can be overridden with the &amp;lsquo;GIT_EXTERNAL_DIFF&amp;rsquo; environment variable. The command is called with parameters as described under &quot;git Diffs&quot; in &lt;a href=&quot;git&quot;&gt;git[1]&lt;/a&gt;. Note: if you want to use an external diff program only on a subset of your files, you might want to use &lt;a href=&quot;gitattributes&quot;&gt;gitattributes[5]&lt;/a&gt; instead.</source>
          <target state="translated">Si se establece esta variable de configuraci&amp;oacute;n, la generaci&amp;oacute;n de diferencias no se realiza utilizando la maquinaria de diferencias interna, sino utilizando el comando dado. Se puede anular con la variable de entorno 'GIT_EXTERNAL_DIFF'. El comando se llama con los par&amp;aacute;metros descritos en &quot;git Diffs&quot; en &lt;a href=&quot;git&quot;&gt;git [1]&lt;/a&gt; . Nota: si desea usar un programa de diferencias externo solo en un subconjunto de sus archivos, puede usar &lt;a href=&quot;gitattributes&quot;&gt;gitattributes [5] en su&lt;/a&gt; lugar.</target>
        </trans-unit>
        <trans-unit id="c67dbd9b5b9d0c250d594cf0e82ea55d38dac133" translate="yes" xml:space="preserve">
          <source>If this environment variable is set to &quot;1&quot;, then commands such as &lt;code&gt;git blame&lt;/code&gt; (in incremental mode), &lt;code&gt;git rev-list&lt;/code&gt;, &lt;code&gt;git log&lt;/code&gt;, &lt;code&gt;git check-attr&lt;/code&gt; and &lt;code&gt;git check-ignore&lt;/code&gt; will force a flush of the output stream after each record have been flushed. If this variable is set to &quot;0&quot;, the output of these commands will be done using completely buffered I/O. If this environment variable is not set, Git will choose buffered or record-oriented flushing based on whether stdout appears to be redirected to a file or not.</source>
          <target state="translated">Si esta variable de entorno se establece en &quot;1&quot;, los comandos como &lt;code&gt;git blame&lt;/code&gt; (en modo incremental), &lt;code&gt;git rev-list&lt;/code&gt; , &lt;code&gt;git log&lt;/code&gt; , &lt;code&gt;git check-attr&lt;/code&gt; y &lt;code&gt;git check-ignore&lt;/code&gt; forzar&amp;aacute;n un vaciado del flujo de salida despu&amp;eacute;s de cada registro se han vaciado. Si esta variable se establece en &quot;0&quot;, la salida de estos comandos se realizar&amp;aacute; utilizando E / S con b&amp;uacute;fer completo. Si esta variable de entorno no est&amp;aacute; configurada, Git elegir&amp;aacute; el vaciado en b&amp;uacute;fer u orientado a registros en funci&amp;oacute;n de si stdout parece redirigirse a un archivo o no.</target>
        </trans-unit>
        <trans-unit id="3c510f35b5c52541d7f8ff48371ed312cadc959c" translate="yes" xml:space="preserve">
          <source>If this environment variable is set to &lt;code&gt;0&lt;/code&gt;, git will not prompt on the terminal (e.g., when asking for HTTP authentication).</source>
          <target state="translated">Si esta variable de entorno se establece en &lt;code&gt;0&lt;/code&gt; , git no lo solicitar&amp;aacute; en la terminal (por ejemplo, al solicitar la autenticaci&amp;oacute;n HTTP).</target>
        </trans-unit>
        <trans-unit id="f0e0816f1f387058c1f2d75f7ff32a01f9295472" translate="yes" xml:space="preserve">
          <source>If this environment variable is set, it overrides Git&amp;rsquo;s autodetection whether &lt;code&gt;GIT_SSH&lt;/code&gt;/&lt;code&gt;GIT_SSH_COMMAND&lt;/code&gt;/&lt;code&gt;core.sshCommand&lt;/code&gt; refer to OpenSSH, plink or tortoiseplink. This variable overrides the config setting &lt;code&gt;ssh.variant&lt;/code&gt; that serves the same purpose.</source>
          <target state="translated">Si se establece esta variable de entorno, anula la detecci&amp;oacute;n autom&amp;aacute;tica de Git si &lt;code&gt;GIT_SSH&lt;/code&gt; / &lt;code&gt;GIT_SSH_COMMAND&lt;/code&gt; / &lt;code&gt;core.sshCommand&lt;/code&gt; se refiere a OpenSSH, plink o tortoiseplink. Esta variable anula la configuraci&amp;oacute;n de configuraci&amp;oacute;n &lt;code&gt;ssh.variant&lt;/code&gt; que tiene el mismo prop&amp;oacute;sito.</target>
        </trans-unit>
        <trans-unit id="81f782a4dbe0e346a4da365c1a6b3a9cbeb4a6e2" translate="yes" xml:space="preserve">
          <source>If this environment variable is set, then Git commands which need to acquire passwords or passphrases (e.g. for HTTP or IMAP authentication) will call this program with a suitable prompt as command-line argument and read the password from its STDOUT. See also the &lt;code&gt;core.askPass&lt;/code&gt; option in &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;.</source>
          <target state="translated">Si se establece esta variable de entorno, los comandos de Git que necesitan adquirir contrase&amp;ntilde;as o frases de contrase&amp;ntilde;a (por ejemplo, para autenticaci&amp;oacute;n HTTP o IMAP) llamar&amp;aacute;n a este programa con un indicador adecuado como argumento de l&amp;iacute;nea de comandos y leer&amp;aacute;n la contrase&amp;ntilde;a de su STDOUT. Consulte tambi&amp;eacute;n la opci&amp;oacute;n &lt;code&gt;core.askPass&lt;/code&gt; en &lt;a href=&quot;git-config&quot;&gt;git-config [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="372352ecb2d8c55afffa99890c0eb497f2b1382d" translate="yes" xml:space="preserve">
          <source>If this feature is enabled, gitweb considers projects in subdirectories of project root (basename) to be forks of existing projects. For each project &lt;code&gt;$projname.git&lt;/code&gt;, projects in the &lt;code&gt;$projname/&lt;/code&gt; directory and its subdirectories will not be shown in the main projects list. Instead, a '+' mark is shown next to &lt;code&gt;$projname&lt;/code&gt;, which links to a &quot;forks&quot; view that lists all the forks (all projects in &lt;code&gt;$projname/&lt;/code&gt; subdirectory). Additionally a &quot;forks&quot; view for a project is linked from project summary page.</source>
          <target state="translated">Si esta funci&amp;oacute;n est&amp;aacute; habilitada, gitweb considera que los proyectos de los subdirectorios de la ra&amp;iacute;z del proyecto (nombre base) son bifurcaciones de proyectos existentes. Para cada proyecto &lt;code&gt;$projname.git&lt;/code&gt; , los proyectos en el directorio &lt;code&gt;$projname/&lt;/code&gt; y sus subdirectorios no se mostrar&amp;aacute;n en la lista principal de proyectos. En su lugar, se muestra una marca '+' junto a &lt;code&gt;$projname&lt;/code&gt; , que enlaza con una vista de &quot;bifurcaciones&quot; que enumera todas las bifurcaciones (todos los proyectos en el subdirectorio &lt;code&gt;$projname/&lt;/code&gt; ). Adem&amp;aacute;s, una vista de &quot;bifurcaciones&quot; para un proyecto est&amp;aacute; vinculada desde la p&amp;aacute;gina de resumen del proyecto.</target>
        </trans-unit>
        <trans-unit id="728d51c620f0870eff1b0d62261ab6934369adf2" translate="yes" xml:space="preserve">
          <source>If this field has a true value then the given feature is overridable, which means that it can be configured (or enabled/disabled) on a per-repository basis.</source>
          <target state="translated">Si este campo tiene un valor verdadero,entonces la característica dada es anulable,lo que significa que puede ser configurada (o activada/desactivada)por cada depósito.</target>
        </trans-unit>
        <trans-unit id="582826e66f53339e6d7b4dc6a0d6a2edeb312487" translate="yes" xml:space="preserve">
          <source>If this file exists, $GIT_COMMON_DIR (see &lt;a href=&quot;git&quot;&gt;git[1]&lt;/a&gt;) will be set to the path specified in this file if it is not explicitly set. If the specified path is relative, it is relative to $GIT_DIR. The repository with commondir is incomplete without the repository pointed by &quot;commondir&quot;.</source>
          <target state="translated">Si este archivo existe, $ GIT_COMMON_DIR (ver &lt;a href=&quot;git&quot;&gt;git [1]&lt;/a&gt; ) se establecer&amp;aacute; en la ruta especificada en este archivo si no se establece expl&amp;iacute;citamente. Si la ruta especificada es relativa, es relativa a $ GIT_DIR. El repositorio con commondir est&amp;aacute; incompleto sin el repositorio apuntado por &quot;commondir&quot;.</target>
        </trans-unit>
        <trans-unit id="1e44552a87aaa0e818702548719ba07ebc0f8696" translate="yes" xml:space="preserve">
          <source>If this file exists, the linked working tree may be on a portable device and not available. The presence of this file prevents &lt;code&gt;worktrees/&amp;lt;id&amp;gt;&lt;/code&gt; from being pruned either automatically or manually by &lt;code&gt;git worktree prune&lt;/code&gt;. The file may contain a string explaining why the repository is locked.</source>
          <target state="translated">Si este archivo existe, el &amp;aacute;rbol de trabajo vinculado puede estar en un dispositivo port&amp;aacute;til y no disponible. La presencia de este previene de archivos &lt;code&gt;worktrees/&amp;lt;id&amp;gt;&lt;/code&gt; de ser podados de forma autom&amp;aacute;tica o manualmente por &lt;code&gt;git worktree prune&lt;/code&gt; . El archivo puede contener una cadena que explique por qu&amp;eacute; el repositorio est&amp;aacute; bloqueado.</target>
        </trans-unit>
        <trans-unit id="6849302064fdf0db00fe326dd1a92636c39a6d43" translate="yes" xml:space="preserve">
          <source>If this hook exits with a non-zero status, &lt;code&gt;git push&lt;/code&gt; will abort without pushing anything. Information about why the push is rejected may be sent to the user by writing to standard error.</source>
          <target state="translated">Si este gancho sale con un estado distinto de cero, &lt;code&gt;git push&lt;/code&gt; abortar&amp;aacute; sin presionar nada. La informaci&amp;oacute;n sobre por qu&amp;eacute; se rechaza la inserci&amp;oacute;n puede enviarse al usuario escribiendo en error est&amp;aacute;ndar.</target>
        </trans-unit>
        <trans-unit id="9e422a5c19027398b3db2e62a2dfa8c2a2031ac5" translate="yes" xml:space="preserve">
          <source>If this is reinitialization, the repository will be moved to the specified path.</source>
          <target state="translated">Si se trata de una reinicialización,el repositorio se moverá a la ruta especificada.</target>
        </trans-unit>
        <trans-unit id="ae49e42c53a829e13a69befb7e448cbf7a3ab5aa" translate="yes" xml:space="preserve">
          <source>If this is set to code reference, it will be run once for each request. You can set parts of configuration that change per session this way. For example, one might use the following code in a gitweb configuration file</source>
          <target state="translated">Si se establece como referencia de código,se ejecutará una vez por cada solicitud.Puede establecer partes de la configuración que cambien por sesión de esta manera.Por ejemplo,se podría utilizar el siguiente código en un archivo de configuración de gitweb</target>
        </trans-unit>
        <trans-unit id="2ecaf4f8ea5745cd5a451b94ab44dd28ff120dab" translate="yes" xml:space="preserve">
          <source>If this is set to true, the &lt;code&gt;git stash show&lt;/code&gt; command without an option will show diffstat of the stash entry. Defaults to true. See description of &lt;code&gt;show&lt;/code&gt; command in &lt;a href=&quot;git-stash&quot;&gt;git-stash[1]&lt;/a&gt;.</source>
          <target state="translated">Si se establece en verdadero, el comando &lt;code&gt;git stash show&lt;/code&gt; sin una opci&amp;oacute;n mostrar&amp;aacute; diffstat de la entrada de alijo. Por defecto es verdadero. Consulte la descripci&amp;oacute;n del comando &lt;code&gt;show&lt;/code&gt; en &lt;a href=&quot;git-stash&quot;&gt;git-stash [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ee4998fa7e703962f55f3297f84fc3b952ae4a7f" translate="yes" xml:space="preserve">
          <source>If this is set to true, the &lt;code&gt;git stash show&lt;/code&gt; command without an option will show the stash entry in patch form. Defaults to false. See description of &lt;code&gt;show&lt;/code&gt; command in &lt;a href=&quot;git-stash&quot;&gt;git-stash[1]&lt;/a&gt;.</source>
          <target state="translated">Si se establece en verdadero, el comando &lt;code&gt;git stash show&lt;/code&gt; sin una opci&amp;oacute;n mostrar&amp;aacute; la entrada del alijo en forma de parche. El valor predeterminado es falso. Consulte la descripci&amp;oacute;n del comando &lt;code&gt;show&lt;/code&gt; en &lt;a href=&quot;git-stash&quot;&gt;git-stash [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7e98f4c395c1b49b1de4c0111925dea856a6d079" translate="yes" xml:space="preserve">
          <source>If this is set, add emails found in Signed-off-by: or Cc: lines to the cc list. Default is the value of &lt;code&gt;sendemail.signedoffbycc&lt;/code&gt; configuration value; if that is unspecified, default to --signed-off-by-cc.</source>
          <target state="translated">Si est&amp;aacute; configurado, agregue los correos electr&amp;oacute;nicos que se encuentran en las l&amp;iacute;neas Firmado por: o Cc: a la lista de cc. El valor predeterminado es el valor de configuraci&amp;oacute;n &lt;code&gt;sendemail.signedoffbycc&lt;/code&gt; ; si no se especifica, el valor predeterminado es --signed-off-by-cc.</target>
        </trans-unit>
        <trans-unit id="6cf7f20765eaeb225b14832d24072d63179e161f" translate="yes" xml:space="preserve">
          <source>If this is set, do not add the From: address to the cc: list. Default is the value of &lt;code&gt;sendemail.suppressFrom&lt;/code&gt; configuration value; if that is unspecified, default to --no-suppress-from.</source>
          <target state="translated">Si est&amp;aacute; configurado, no agregue la direcci&amp;oacute;n De: a la lista cc :. El valor predeterminado es el valor de configuraci&amp;oacute;n &lt;code&gt;sendemail.suppressFrom&lt;/code&gt; ; si no se especifica, el valor predeterminado es --no-suppress-from.</target>
        </trans-unit>
        <trans-unit id="048d4528d0951754849879e2b4b5802f6461c9fb" translate="yes" xml:space="preserve">
          <source>If this is set, each email will be sent as a reply to the previous email sent. If disabled with &quot;--no-chain-reply-to&quot;, all emails after the first will be sent as replies to the first email sent. When using this, it is recommended that the first file given be an overview of the entire patch series. Disabled by default, but the &lt;code&gt;sendemail.chainReplyTo&lt;/code&gt; configuration variable can be used to enable it.</source>
          <target state="translated">Si se configura, cada correo electr&amp;oacute;nico se enviar&amp;aacute; como respuesta al correo electr&amp;oacute;nico enviado anteriormente. Si est&amp;aacute; desactivado con &quot;--no-chain-reply-to&quot;, todos los correos electr&amp;oacute;nicos posteriores al primero se enviar&amp;aacute;n como respuestas al primer correo electr&amp;oacute;nico enviado. Al usar esto, se recomienda que el primer archivo proporcionado sea una descripci&amp;oacute;n general de toda la serie de parches. Deshabilitado de forma predeterminada, pero la variable de configuraci&amp;oacute;n &lt;code&gt;sendemail.chainReplyTo&lt;/code&gt; se puede utilizar para habilitarlo.</target>
        </trans-unit>
        <trans-unit id="b4073ff276c4f44294d676470e6aaaeb5a46458f" translate="yes" xml:space="preserve">
          <source>If this is set, emails found in Cc: headers in the first patch of the series (typically the cover letter) are added to the cc list for each email set. Default is the value of &lt;code&gt;sendemail.cccover&lt;/code&gt; configuration value; if that is unspecified, default to --no-cc-cover.</source>
          <target state="translated">Si est&amp;aacute; configurado, los correos electr&amp;oacute;nicos que se encuentran en los encabezados CC: en el primer parche de la serie (generalmente la carta de presentaci&amp;oacute;n) se agregan a la lista de CC para cada grupo de correo electr&amp;oacute;nico. El valor predeterminado es el valor de configuraci&amp;oacute;n &lt;code&gt;sendemail.cccover&lt;/code&gt; ; si no se especifica, el valor predeterminado es --no-cc-cover.</target>
        </trans-unit>
        <trans-unit id="c3505cfc9a16fb3a406321b32681f1c27b3f4828" translate="yes" xml:space="preserve">
          <source>If this is set, emails found in To: headers in the first patch of the series (typically the cover letter) are added to the to list for each email set. Default is the value of &lt;code&gt;sendemail.tocover&lt;/code&gt; configuration value; if that is unspecified, default to --no-to-cover.</source>
          <target state="translated">Si est&amp;aacute; configurado, los correos electr&amp;oacute;nicos que se encuentran en los encabezados Para: en el primer parche de la serie (generalmente la carta de presentaci&amp;oacute;n) se agregan a la lista de destinatarios para cada conjunto de correo electr&amp;oacute;nico. El valor predeterminado es el valor de configuraci&amp;oacute;n &lt;code&gt;sendemail.tocover&lt;/code&gt; ; si no se especifica, el valor predeterminado es --no-to-cover.</target>
        </trans-unit>
        <trans-unit id="bd074611e2ce23fe3651c7c21615bc5d5c90b653" translate="yes" xml:space="preserve">
          <source>If this is set, the In-Reply-To and References headers will be added to each email sent. Whether each mail refers to the previous email (&lt;code&gt;deep&lt;/code&gt; threading per &lt;code&gt;git format-patch&lt;/code&gt; wording) or to the first email (&lt;code&gt;shallow&lt;/code&gt; threading) is governed by &quot;--[no-]chain-reply-to&quot;.</source>
          <target state="translated">Si se configura, los encabezados In-Reply-To y References se agregar&amp;aacute;n a cada correo electr&amp;oacute;nico enviado. Si cada correo se refiere al correo electr&amp;oacute;nico anterior ( subprocesos &lt;code&gt;deep&lt;/code&gt; por redacci&amp;oacute;n del &lt;code&gt;git format-patch&lt;/code&gt; ) o al primer correo electr&amp;oacute;nico ( subprocesos &lt;code&gt;shallow&lt;/code&gt; ) se rige por &quot;- [no-] cadena-respuesta-a&quot;.</target>
        </trans-unit>
        <trans-unit id="83fefd231faf2237df4d2ca57ddb91f5733dd174" translate="yes" xml:space="preserve">
          <source>If this option is also present in the submodules entry in .git/config of the superproject, the setting there will override the one found in .gitmodules.</source>
          <target state="translated">Si esta opción también está presente en la entrada de submódulos en .git/config del superproyecto,la configuración allí anulará la que se encuentra en .gitmodules.</target>
        </trans-unit>
        <trans-unit id="b576cec09f399abde10801d9e3b482a3974a7942" translate="yes" xml:space="preserve">
          <source>If this option is set, &lt;code&gt;upload-pack&lt;/code&gt; will support partial clone and partial fetch object filtering.</source>
          <target state="translated">Si se establece esta opci&amp;oacute;n, &lt;code&gt;upload-pack&lt;/code&gt; admitir&amp;aacute; la clonaci&amp;oacute;n parcial y el filtrado de objetos de recuperaci&amp;oacute;n parcial.</target>
        </trans-unit>
        <trans-unit id="46df2747ed059ec465747bf23f6d93b6698f2ce3" translate="yes" xml:space="preserve">
          <source>If this option is set, &lt;code&gt;upload-pack&lt;/code&gt; will support the &lt;code&gt;ref-in-want&lt;/code&gt; feature of the protocol version 2 &lt;code&gt;fetch&lt;/code&gt; command. This feature is intended for the benefit of load-balanced servers which may not have the same view of what OIDs their refs point to due to replication delay.</source>
          <target state="translated">Si esta opci&amp;oacute;n est&amp;aacute; configurada, &lt;code&gt;upload-pack&lt;/code&gt; admitir&amp;aacute; la funci&amp;oacute;n &lt;code&gt;ref-in-want&lt;/code&gt; del comando &lt;code&gt;fetch&lt;/code&gt; de la versi&amp;oacute;n 2 del protocolo . Esta funci&amp;oacute;n est&amp;aacute; destinada al beneficio de los servidores con equilibrio de carga que pueden no tener la misma vista de los OID a los que apuntan sus referencias debido al retraso de replicaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="3691063a71adef86ec77db2886b5e8b672228551" translate="yes" xml:space="preserve">
          <source>If this option is set, when &lt;code&gt;upload-pack&lt;/code&gt; would run &lt;code&gt;git pack-objects&lt;/code&gt; to create a packfile for a client, it will run this shell command instead. The &lt;code&gt;pack-objects&lt;/code&gt; command and arguments it &lt;code&gt;would&lt;/code&gt; have run (including the &lt;code&gt;git pack-objects&lt;/code&gt; at the beginning) are appended to the shell command. The stdin and stdout of the hook are treated as if &lt;code&gt;pack-objects&lt;/code&gt; itself was run. I.e., &lt;code&gt;upload-pack&lt;/code&gt; will feed input intended for &lt;code&gt;pack-objects&lt;/code&gt; to the hook, and expects a completed packfile on stdout.</source>
          <target state="translated">Si se establece esta opci&amp;oacute;n, cuando &lt;code&gt;upload-pack&lt;/code&gt; ejecutara &lt;code&gt;git pack-objects&lt;/code&gt; para crear un archivo de paquete para un cliente, en su lugar ejecutar&amp;aacute; este comando de shell. El comando &lt;code&gt;pack-objects&lt;/code&gt; y los argumentos que &lt;code&gt;would&lt;/code&gt; ejecutado (incluido el &lt;code&gt;git pack-objects&lt;/code&gt; al principio) se agregan al comando de shell. El stdin y stdout del gancho se tratan como si se ejecutara &lt;code&gt;pack-objects&lt;/code&gt; . Es decir, &lt;code&gt;upload-pack&lt;/code&gt; alimentar&amp;aacute; la entrada destinada a &lt;code&gt;pack-objects&lt;/code&gt; de paquete al gancho y espera un archivo de paquete completo en stdout.</target>
        </trans-unit>
        <trans-unit id="043d313af4e6bae8eb0dfe37d6ed595c4f6e4603" translate="yes" xml:space="preserve">
          <source>If this option is specified and &lt;code&gt;git svn&lt;/code&gt; encounters an SVN committer name that does not exist in the authors-file, &lt;code&gt;git svn&lt;/code&gt; will abort operation. The user will then have to add the appropriate entry. Re-running the previous &lt;code&gt;git svn&lt;/code&gt; command after the authors-file is modified should continue operation.</source>
          <target state="translated">Si se especifica esta opci&amp;oacute;n y &lt;code&gt;git svn&lt;/code&gt; encuentra un nombre de confirmador SVN que no existe en el archivo de autores, &lt;code&gt;git svn&lt;/code&gt; abortar&amp;aacute; la operaci&amp;oacute;n. A continuaci&amp;oacute;n, el usuario deber&amp;aacute; agregar la entrada correspondiente. Volver a ejecutar el comando &lt;code&gt;git svn&lt;/code&gt; anterior despu&amp;eacute;s de modificar el archivo de autores deber&amp;iacute;a continuar la operaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="68c99ad12996bd9192637a1c1520fb2b24def75b" translate="yes" xml:space="preserve">
          <source>If this option is specified, for each SVN committer name that does not exist in the authors file, the given file is executed with the committer name as the first argument. The program is expected to return a single line of the form &quot;Name &amp;lt;email&amp;gt;&quot; or &quot;Name &amp;lt;&amp;gt;&quot;, which will be treated as if included in the authors file.</source>
          <target state="translated">Si se especifica esta opci&amp;oacute;n, para cada nombre de confirmador SVN que no existe en el archivo de autores, el archivo dado se ejecuta con el nombre del confirmador como primer argumento. Se espera que el programa devuelva una sola l&amp;iacute;nea con el formato &quot;Nombre &amp;lt;correo electr&amp;oacute;nico&amp;gt;&quot; o &quot;Nombre &amp;lt;&amp;gt;&quot;, que se tratar&amp;aacute; como si estuviera incluido en el archivo de los autores.</target>
        </trans-unit>
        <trans-unit id="9706c1068d7b5bd67656b65aa296c50f3e651323" translate="yes" xml:space="preserve">
          <source>If this variable is not specified, it defaults to &lt;code&gt;normal&lt;/code&gt;. This variable can be overridden with the -u|--untracked-files option of &lt;a href=&quot;git-status&quot;&gt;git-status[1]&lt;/a&gt; and &lt;a href=&quot;git-commit&quot;&gt;git-commit[1]&lt;/a&gt;.</source>
          <target state="translated">Si no se especifica esta variable, por defecto es &lt;code&gt;normal&lt;/code&gt; . Esta variable se puede anular con la opci&amp;oacute;n -u | --untracked-files de &lt;a href=&quot;git-status&quot;&gt;git-status [1]&lt;/a&gt; y &lt;a href=&quot;git-commit&quot;&gt;git-commit [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9b0cae3fed40383cf5d614f1da46a2c524e4930e" translate="yes" xml:space="preserve">
          <source>If this variable is set to &quot;1&quot;, &quot;2&quot; or &quot;true&quot; (comparison is case insensitive), trace messages will be printed to stderr.</source>
          <target state="translated">Si esta variable se establece en &quot;1&quot;,&quot;2&quot; o &quot;verdadero&quot; (la comparación no distingue entre mayúsculas y minúsculas),los mensajes de rastreo se imprimirán en stderr.</target>
        </trans-unit>
        <trans-unit id="c1357386502b4e540a41766c550326b57fc0ea56" translate="yes" xml:space="preserve">
          <source>If this variable is set to a path, non-worktree files that are normally in $GIT_DIR will be taken from this path instead. Worktree-specific files such as HEAD or index are taken from $GIT_DIR. See &lt;a href=&quot;gitrepository-layout&quot;&gt;gitrepository-layout[5]&lt;/a&gt; and &lt;a href=&quot;git-worktree&quot;&gt;git-worktree[1]&lt;/a&gt; for details. This variable has lower precedence than other path variables such as GIT_INDEX_FILE, GIT_OBJECT_DIRECTORY&amp;hellip;​</source>
          <target state="translated">Si esta variable se establece en una ruta, los archivos que no son del &amp;aacute;rbol de trabajo que normalmente est&amp;aacute;n en $ GIT_DIR se tomar&amp;aacute;n de esta ruta. Los archivos espec&amp;iacute;ficos del &amp;aacute;rbol de trabajo, como HEAD o index, se toman de $ GIT_DIR. Consulte &lt;a href=&quot;gitrepository-layout&quot;&gt;gitrepository-layout [5]&lt;/a&gt; y &lt;a href=&quot;git-worktree&quot;&gt;git-worktree [1]&lt;/a&gt; para obtener m&amp;aacute;s detalles. Esta variable tiene menor precedencia que otras variables de ruta como GIT_INDEX_FILE, GIT_OBJECT_DIRECTORY&amp;hellip;</target>
        </trans-unit>
        <trans-unit id="8249d2ab5516fac15cd6ed908f0ba3c1a12338b5" translate="yes" xml:space="preserve">
          <source>If this variable is set, &lt;code&gt;git fetch&lt;/code&gt; and &lt;code&gt;git push&lt;/code&gt; will use the specified command instead of &lt;code&gt;ssh&lt;/code&gt; when they need to connect to a remote system. The command is in the same form as the &lt;code&gt;GIT_SSH_COMMAND&lt;/code&gt; environment variable and is overridden when the environment variable is set.</source>
          <target state="translated">Si se establece esta variable, &lt;code&gt;git fetch&lt;/code&gt; y &lt;code&gt;git push&lt;/code&gt; usar&amp;aacute;n el comando especificado en lugar de &lt;code&gt;ssh&lt;/code&gt; cuando necesiten conectarse a un sistema remoto. El comando tiene el mismo formato que la variable de entorno &lt;code&gt;GIT_SSH_COMMAND&lt;/code&gt; y se anula cuando se establece la variable de entorno.</target>
        </trans-unit>
        <trans-unit id="3af55b279f11e2f816fa42fab0cbda45b206e1ef" translate="yes" xml:space="preserve">
          <source>If timestamps of commits in the CVS repository are not stable enough to be used for ordering commits changes may show up in the wrong order.</source>
          <target state="translated">Si las marcas de tiempo de las confirmaciones en el repositorio CVS no son lo suficientemente estables para ser usadas para ordenar las confirmaciones,los cambios pueden aparecer en el orden equivocado.</target>
        </trans-unit>
        <trans-unit id="51615abc07df5f5fedb19397be1e475bae29e04c" translate="yes" xml:space="preserve">
          <source>If true (default), a single editor instance will be spawned to edit files you have to edit (patches when &lt;code&gt;--annotate&lt;/code&gt; is used, and the summary when &lt;code&gt;--compose&lt;/code&gt; is used). If false, files will be edited one after the other, spawning a new editor each time.</source>
          <target state="translated">Si es verdadero (predeterminado), se generar&amp;aacute; una &amp;uacute;nica instancia de editor para editar los archivos que tiene que editar (parches cuando se usa &lt;code&gt;--annotate&lt;/code&gt; y el resumen cuando se usa &lt;code&gt;--compose&lt;/code&gt; ). Si es falso, los archivos se editar&amp;aacute;n uno tras otro, generando un nuevo editor cada vez.</target>
        </trans-unit>
        <trans-unit id="6c99dc0ffc12cab74a91d9cd9821ddfe241990c4" translate="yes" xml:space="preserve">
          <source>If true prevents displaying information about repository owner.</source>
          <target state="translated">Si es cierto,impide que se muestre la información sobre el propietario del depósito.</target>
        </trans-unit>
        <trans-unit id="fad7b766b28596874c184072e4308f81cec3bb8e" translate="yes" xml:space="preserve">
          <source>If true the web server started by &lt;a href=&quot;git-instaweb&quot;&gt;git-instaweb[1]&lt;/a&gt; will be bound to the local IP (127.0.0.1).</source>
          <target state="translated">Si es verdadero, el servidor web iniciado por &lt;a href=&quot;git-instaweb&quot;&gt;git-instaweb [1]&lt;/a&gt; estar&amp;aacute; vinculado a la IP local (127.0.0.1).</target>
        </trans-unit>
        <trans-unit id="24fc21f99a5940a5b287a59503e7df044758b9be" translate="yes" xml:space="preserve">
          <source>If true this repository is assumed to be &lt;code&gt;bare&lt;/code&gt; and has no working directory associated with it. If this is the case a number of commands that require a working directory will be disabled, such as &lt;a href=&quot;git-add&quot;&gt;git-add[1]&lt;/a&gt; or &lt;a href=&quot;git-merge&quot;&gt;git-merge[1]&lt;/a&gt;.</source>
          <target state="translated">Si es verdadero, se supone que este repositorio est&amp;aacute; &lt;code&gt;bare&lt;/code&gt; y no tiene un directorio de trabajo asociado. Si este es el caso, se deshabilitar&amp;aacute;n varios comandos que requieren un directorio de trabajo, como &lt;a href=&quot;git-add&quot;&gt;git-add [1]&lt;/a&gt; o &lt;a href=&quot;git-merge&quot;&gt;git-merge [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="18d14681f32fdc08f62b0e7a189d6a89008757fd" translate="yes" xml:space="preserve">
          <source>If true, &lt;code&gt;git gui blame&lt;/code&gt; uses &lt;code&gt;-C&lt;/code&gt; instead of &lt;code&gt;-C -C&lt;/code&gt; for original location detection. It makes blame significantly faster on huge repositories at the expense of less thorough copy detection.</source>
          <target state="translated">Si es verdadero, &lt;code&gt;git gui blame&lt;/code&gt; usa &lt;code&gt;-C&lt;/code&gt; en lugar de &lt;code&gt;-C -C&lt;/code&gt; para la detecci&amp;oacute;n de la ubicaci&amp;oacute;n original. Hace que la culpa sea significativamente m&amp;aacute;s r&amp;aacute;pida en grandes repositorios a expensas de una detecci&amp;oacute;n de copias menos completa.</target>
        </trans-unit>
        <trans-unit id="a4dc06197e1e60c2601c1eee394ecb56132cf3c4" translate="yes" xml:space="preserve">
          <source>If true, Git will avoid using lstat() calls to detect if files have changed by setting the &quot;assume-unchanged&quot; bit for those tracked files which it has updated identically in both the index and working tree.</source>
          <target state="translated">Si es cierto,Git evitará usar las llamadas a lstat()para detectar si los archivos han cambiado,estableciendo el bit &quot;assume-unchanged&quot; para aquellos archivos rastreados que haya actualizado de forma idéntica tanto en el índice como en el árbol de trabajo.</target>
        </trans-unit>
        <trans-unit id="f52d8aadd1ed60dd80b38e7a96aadc385cabb931" translate="yes" xml:space="preserve">
          <source>If true, Git will warn you if the ref name you passed it is ambiguous and might match multiple refs in the repository. True by default.</source>
          <target state="translated">Si es cierto,Git te avisará si el nombre del árbitro que le pasaste es ambiguo y podría coincidir con varios árbitros del depósito.Cierto por defecto.</target>
        </trans-unit>
        <trans-unit id="b4f1cbcb9d6580097e1319f75786e1aefcc4a19a" translate="yes" xml:space="preserve">
          <source>If true, allow clients to use &lt;code&gt;git archive --remote&lt;/code&gt; to request any tree, whether reachable from the ref tips or not. See the discussion in the &quot;SECURITY&quot; section of &lt;a href=&quot;git-upload-archive&quot;&gt;git-upload-archive[1]&lt;/a&gt; for more details. Defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">Si es verdadero, permita que los clientes utilicen &lt;code&gt;git archive --remote&lt;/code&gt; para solicitar cualquier &amp;aacute;rbol, ya sea accesible desde los consejos de referencia o no. Vea la discusi&amp;oacute;n en la secci&amp;oacute;n &quot;SEGURIDAD&quot; de &lt;a href=&quot;git-upload-archive&quot;&gt;git-upload-archive [1]&lt;/a&gt; para m&amp;aacute;s detalles. El valor predeterminado es &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9577d8134a35c2d555845d35ede1972ec309a7fc" translate="yes" xml:space="preserve">
          <source>If true, enable &lt;code&gt;&amp;lt;format&amp;gt;&lt;/code&gt; for use by remote clients via &lt;a href=&quot;git-upload-archive&quot;&gt;git-upload-archive[1]&lt;/a&gt;. Defaults to false for user-defined formats, but true for the &quot;tar.gz&quot; and &quot;tgz&quot; formats.</source>
          <target state="translated">Si es verdadero, habilite &lt;code&gt;&amp;lt;format&amp;gt;&lt;/code&gt; para que lo utilicen clientes remotos a trav&amp;eacute;s de &lt;a href=&quot;git-upload-archive&quot;&gt;git-upload-archive [1]&lt;/a&gt; . El valor predeterminado es falso para los formatos definidos por el usuario, pero verdadero para los formatos &quot;tar.gz&quot; y &quot;tgz&quot;.</target>
        </trans-unit>
        <trans-unit id="5f15956c2db32b4b1b45dac474661942b8aa7008" translate="yes" xml:space="preserve">
          <source>If true, fetch will automatically behave as if the &lt;code&gt;--prune&lt;/code&gt; option was given on the command line. See also &lt;code&gt;remote.&amp;lt;name&amp;gt;.prune&lt;/code&gt; and the PRUNING section of &lt;a href=&quot;git-fetch&quot;&gt;git-fetch[1]&lt;/a&gt;.</source>
          <target state="translated">Si es verdadero, fetch se comportar&amp;aacute; autom&amp;aacute;ticamente como si la opci&amp;oacute;n &lt;code&gt;--prune&lt;/code&gt; se hubiera dado en la l&amp;iacute;nea de comando. Consulte tambi&amp;eacute;n &lt;code&gt;remote.&amp;lt;name&amp;gt;.prune&lt;/code&gt; y la secci&amp;oacute;n de poda de &lt;a href=&quot;git-fetch&quot;&gt;git-fetch [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7d985f4709f0d26edc0babef707e65f833d349aa" translate="yes" xml:space="preserve">
          <source>If true, fetch will automatically behave as if the &lt;code&gt;refs/tags/*:refs/tags/*&lt;/code&gt; refspec was provided when pruning, if not set already. This allows for setting both this option and &lt;code&gt;fetch.prune&lt;/code&gt; to maintain a 1=1 mapping to upstream refs. See also &lt;code&gt;remote.&amp;lt;name&amp;gt;.pruneTags&lt;/code&gt; and the PRUNING section of &lt;a href=&quot;git-fetch&quot;&gt;git-fetch[1]&lt;/a&gt;.</source>
          <target state="translated">Si es verdadero, fetch se comportar&amp;aacute; autom&amp;aacute;ticamente como si &lt;code&gt;refs/tags/*:refs/tags/*&lt;/code&gt; refspec se hubiera proporcionado al podar, si no se ha configurado ya. Esto permite configurar tanto esta opci&amp;oacute;n como &lt;code&gt;fetch.prune&lt;/code&gt; para mantener un mapeo 1 = 1 a las referencias ascendentes. Consulte tambi&amp;eacute;n &lt;code&gt;remote.&amp;lt;name&amp;gt;.pruneTags&lt;/code&gt; y la secci&amp;oacute;n de PODA de &lt;a href=&quot;git-fetch&quot;&gt;git-fetch [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2de6ae2b37da0c5dc299e33fe86fea1c6d9d4a0f" translate="yes" xml:space="preserve">
          <source>If true, git-am will call git-mailsplit for patches in mbox format with parameter &lt;code&gt;--keep-cr&lt;/code&gt;. In this case git-mailsplit will not remove &lt;code&gt;\r&lt;/code&gt; from lines ending with &lt;code&gt;\r\n&lt;/code&gt;. Can be overridden by giving &lt;code&gt;--no-keep-cr&lt;/code&gt; from the command line. See &lt;a href=&quot;git-am&quot;&gt;git-am[1]&lt;/a&gt;, &lt;a href=&quot;git-mailsplit&quot;&gt;git-mailsplit[1]&lt;/a&gt;.</source>
          <target state="translated">Si es verdadero, git-am llamar&amp;aacute; a git-mailsplit para parches en formato mbox con el par&amp;aacute;metro &lt;code&gt;--keep-cr&lt;/code&gt; . En este caso, git-mailsplit no eliminar&amp;aacute; &lt;code&gt;\r&lt;/code&gt; de las l&amp;iacute;neas que terminan con &lt;code&gt;\r\n&lt;/code&gt; . Puede anularse dando &lt;code&gt;--no-keep-cr&lt;/code&gt; desde la l&amp;iacute;nea de comando. Consulte &lt;a href=&quot;git-am&quot;&gt;git-am [1]&lt;/a&gt; , &lt;a href=&quot;git-mailsplit&quot;&gt;git-mailsplit [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e94bf962607289b1694c70432d3fab451c61737d" translate="yes" xml:space="preserve">
          <source>If true, makes &lt;a href=&quot;git-log&quot;&gt;git-log[1]&lt;/a&gt;, &lt;a href=&quot;git-show&quot;&gt;git-show[1]&lt;/a&gt;, and &lt;a href=&quot;git-whatchanged&quot;&gt;git-whatchanged[1]&lt;/a&gt; assume &lt;code&gt;--abbrev-commit&lt;/code&gt;. You may override this option with &lt;code&gt;--no-abbrev-commit&lt;/code&gt;.</source>
          <target state="translated">Si es verdadero, hace que &lt;a href=&quot;git-log&quot;&gt;git-log [1]&lt;/a&gt; , &lt;a href=&quot;git-show&quot;&gt;git-show [1]&lt;/a&gt; y &lt;a href=&quot;git-whatchanged&quot;&gt;git-whatchanged [1]&lt;/a&gt; asuman &lt;code&gt;--abbrev-commit&lt;/code&gt; . Puede anular esta opci&amp;oacute;n con &lt;code&gt;--no-abbrev-commit&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f7c96ef3a79b38b8c56dee4db799ed4d172ce90c" translate="yes" xml:space="preserve">
          <source>If true, makes &lt;a href=&quot;git-log&quot;&gt;git-log[1]&lt;/a&gt;, &lt;a href=&quot;git-show&quot;&gt;git-show[1]&lt;/a&gt;, and &lt;a href=&quot;git-whatchanged&quot;&gt;git-whatchanged[1]&lt;/a&gt; assume &lt;code&gt;--show-signature&lt;/code&gt;.</source>
          <target state="translated">Si es verdadero, hace que &lt;a href=&quot;git-log&quot;&gt;git-log [1]&lt;/a&gt; , &lt;a href=&quot;git-show&quot;&gt;git-show [1]&lt;/a&gt; y &lt;a href=&quot;git-whatchanged&quot;&gt;git-whatchanged [1]&lt;/a&gt; asuman &lt;code&gt;--show-signature&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6cb33eaf81fb27f3c3d3ba0e81d6670ba0d0bfaf" translate="yes" xml:space="preserve">
          <source>If true, makes &lt;a href=&quot;git-log&quot;&gt;git-log[1]&lt;/a&gt;, &lt;a href=&quot;git-show&quot;&gt;git-show[1]&lt;/a&gt;, and &lt;a href=&quot;git-whatchanged&quot;&gt;git-whatchanged[1]&lt;/a&gt; assume &lt;code&gt;--use-mailmap&lt;/code&gt;, otherwise assume &lt;code&gt;--no-use-mailmap&lt;/code&gt;. True by default.</source>
          <target state="translated">Si es verdadero, hace que &lt;a href=&quot;git-log&quot;&gt;git-log [1]&lt;/a&gt; , &lt;a href=&quot;git-show&quot;&gt;git-show [1]&lt;/a&gt; y &lt;a href=&quot;git-whatchanged&quot;&gt;git-whatchanged [1]&lt;/a&gt; asuman &lt;code&gt;--use-mailmap&lt;/code&gt; , de lo contrario asume &lt;code&gt;--no-use-mailmap&lt;/code&gt; . Verdadero por defecto.</target>
        </trans-unit>
        <trans-unit id="672cef13127670a717c7a3aa65681a15ad776d1b" translate="yes" xml:space="preserve">
          <source>If true, makes &lt;a href=&quot;git-mailinfo&quot;&gt;git-mailinfo[1]&lt;/a&gt; (and therefore &lt;a href=&quot;git-am&quot;&gt;git-am[1]&lt;/a&gt;) act by default as if the --scissors option was provided on the command-line. When active, this features removes everything from the message body before a scissors line (i.e. consisting mainly of &quot;&amp;gt;8&quot;, &quot;8&amp;lt;&quot; and &quot;-&quot;).</source>
          <target state="translated">Si es verdadero, hace que &lt;a href=&quot;git-mailinfo&quot;&gt;git-mailinfo [1]&lt;/a&gt; (y por lo tanto &lt;a href=&quot;git-am&quot;&gt;git-am [1]&lt;/a&gt; ) act&amp;uacute;e de forma predeterminada como si la opci&amp;oacute;n --scissors se proporcionara en la l&amp;iacute;nea de comandos. Cuando est&amp;aacute; activa, esta funci&amp;oacute;n elimina todo del cuerpo del mensaje antes de una l&amp;iacute;nea de tijeras (es decir, que consta principalmente de &quot;&amp;gt; 8&quot;, &quot;8 &amp;lt;&quot; y &quot;-&quot;).</target>
        </trans-unit>
        <trans-unit id="d25b510a17b04a17cfbdc40d0999d1586f4d5f91" translate="yes" xml:space="preserve">
          <source>If true, makes Git check if converting &lt;code&gt;CRLF&lt;/code&gt; is reversible when end-of-line conversion is active. Git will verify if a command modifies a file in the work tree either directly or indirectly. For example, committing a file followed by checking out the same file should yield the original file in the work tree. If this is not the case for the current setting of &lt;code&gt;core.autocrlf&lt;/code&gt;, Git will reject the file. The variable can be set to &quot;warn&quot;, in which case Git will only warn about an irreversible conversion but continue the operation.</source>
          <target state="translated">Si es verdadero, hace que Git compruebe si la conversi&amp;oacute;n de &lt;code&gt;CRLF&lt;/code&gt; es reversible cuando la conversi&amp;oacute;n de fin de l&amp;iacute;nea est&amp;aacute; activa. Git verificar&amp;aacute; si un comando modifica un archivo en el &amp;aacute;rbol de trabajo directa o indirectamente. Por ejemplo, la confirmaci&amp;oacute;n de un archivo seguido de la comprobaci&amp;oacute;n del mismo archivo deber&amp;iacute;a producir el archivo original en el &amp;aacute;rbol de trabajo. Si este no es el caso de la configuraci&amp;oacute;n actual de &lt;code&gt;core.autocrlf&lt;/code&gt; , Git rechazar&amp;aacute; el archivo. La variable se puede establecer en &quot;advertir&quot;, en cuyo caso Git solo advertir&amp;aacute; sobre una conversi&amp;oacute;n irreversible pero continuar&amp;aacute; la operaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="3a6f979740fe111373346b7083b54b9e059af003" translate="yes" xml:space="preserve">
          <source>If true, omit the column with date of the most current commit on the projects list page. It can save a bit of I/O and a fork per repository.</source>
          <target state="translated">Si es cierto,omite la columna con la fecha del compromiso más reciente en la página de la lista de proyectos.Puede guardar un poco de E/S y un bifurcación por repositorio.</target>
        </trans-unit>
        <trans-unit id="9e101a02df349b50a39b60288665a643391bcf24" translate="yes" xml:space="preserve">
          <source>If true, pushing to this remote will automatically behave as if the &lt;code&gt;--mirror&lt;/code&gt; option was given on the command line.</source>
          <target state="translated">Si es verdadero, presionar a este control remoto se comportar&amp;aacute; autom&amp;aacute;ticamente como si la opci&amp;oacute;n &lt;code&gt;--mirror&lt;/code&gt; se hubiera dado en la l&amp;iacute;nea de comando.</target>
        </trans-unit>
        <trans-unit id="561edb27b58ccdfdecb1aae75865de22935f3cd3" translate="yes" xml:space="preserve">
          <source>If true, some gitweb features are disabled to prevent content in repositories from launching cross-site scripting (XSS) attacks. Set this to true if you don&amp;rsquo;t trust the content of your repositories. False by default (set to 0).</source>
          <target state="translated">Si es verdadero, algunas funciones de gitweb est&amp;aacute;n deshabilitadas para evitar que el contenido de los repositorios lance ataques de secuencias de comandos entre sitios (XSS). Establezca esto en verdadero si no conf&amp;iacute;a en el contenido de sus repositorios. Falso de forma predeterminada (establecido en 0).</target>
        </trans-unit>
        <trans-unit id="698e5f4a0ab76eb97600c890fa9adac3c5e93fa4" translate="yes" xml:space="preserve">
          <source>If true, the initial commit will be shown as a big creation event. This is equivalent to a diff against an empty tree. Tools like &lt;a href=&quot;git-log&quot;&gt;git-log[1]&lt;/a&gt; or &lt;a href=&quot;git-whatchanged&quot;&gt;git-whatchanged[1]&lt;/a&gt;, which normally hide the root commit will now show it. True by default.</source>
          <target state="translated">Si es verdadero, la confirmaci&amp;oacute;n inicial se mostrar&amp;aacute; como un gran evento de creaci&amp;oacute;n. Esto es equivalente a una diferencia contra un &amp;aacute;rbol vac&amp;iacute;o. Herramientas como &lt;a href=&quot;git-log&quot;&gt;git-log [1]&lt;/a&gt; o &lt;a href=&quot;git-whatchanged&quot;&gt;git-whatchanged [1]&lt;/a&gt; , que normalmente ocultan la confirmaci&amp;oacute;n de root, ahora la mostrar&amp;aacute;n. Verdadero por defecto.</target>
        </trans-unit>
        <trans-unit id="7f4771e5273a3a0e51423699c29e2caf790623f9" translate="yes" xml:space="preserve">
          <source>If true, the server will look up the end-of-line conversion attributes for files to determine the &lt;code&gt;-k&lt;/code&gt; modes to use. If the attributes force Git to treat a file as text, the &lt;code&gt;-k&lt;/code&gt; mode will be left blank so CVS clients will treat it as text. If they suppress text conversion, the file will be set with &lt;code&gt;-kb&lt;/code&gt; mode, which suppresses any newline munging the client might otherwise do. If the attributes do not allow the file type to be determined, then &lt;code&gt;gitcvs.allBinary&lt;/code&gt; is used. See &lt;a href=&quot;gitattributes&quot;&gt;gitattributes[5]&lt;/a&gt;.</source>
          <target state="translated">Si es verdadero, el servidor buscar&amp;aacute; los atributos de conversi&amp;oacute;n de fin de l&amp;iacute;nea de los archivos para determinar los modos &lt;code&gt;-k&lt;/code&gt; que se utilizar&amp;aacute;n. Si los atributos obligan a Git a tratar un archivo como texto, el modo &lt;code&gt;-k&lt;/code&gt; se dejar&amp;aacute; en blanco para que los clientes CVS lo traten como texto. Si suprimen la conversi&amp;oacute;n de texto, el archivo se configurar&amp;aacute; con el modo &lt;code&gt;-kb&lt;/code&gt; , que suprime cualquier salto de l&amp;iacute;nea que pudiera hacer el cliente. Si los atributos no permiten determinar el tipo de archivo, se utiliza &lt;code&gt;gitcvs.allBinary&lt;/code&gt; . Ver &lt;a href=&quot;gitattributes&quot;&gt;gitattributes [5]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="36ac6e641c359be495ff334484c92173e0b7c3c8" translate="yes" xml:space="preserve">
          <source>If true, the split-index feature of the index will be used. See &lt;a href=&quot;git-update-index&quot;&gt;git-update-index[1]&lt;/a&gt;. False by default.</source>
          <target state="translated">Si es verdadero, se utilizar&amp;aacute; la funci&amp;oacute;n de &amp;iacute;ndice dividido del &amp;iacute;ndice. Consulte &lt;a href=&quot;git-update-index&quot;&gt;git-update-index [1]&lt;/a&gt; . Falso por defecto.</target>
        </trans-unit>
        <trans-unit id="521397cd2bc3f328c7b75df2807813cd34103bfb" translate="yes" xml:space="preserve">
          <source>If true, then gc will rewrite the commit-graph file when &lt;a href=&quot;git-gc&quot;&gt;git-gc[1]&lt;/a&gt; is run. When using &lt;code&gt;git gc --auto&lt;/code&gt; the commit-graph will be updated if housekeeping is required. Default is true. See &lt;a href=&quot;git-commit-graph&quot;&gt;git-commit-graph[1]&lt;/a&gt; for details.</source>
          <target state="translated">Si es verdadero, entonces gc reescribir&amp;aacute; el archivo de gr&amp;aacute;fico de confirmaci&amp;oacute;n cuando se ejecute &lt;a href=&quot;git-gc&quot;&gt;git-gc [1]&lt;/a&gt; . Al usar &lt;code&gt;git gc --auto&lt;/code&gt; , el commit-graph se actualizar&amp;aacute; si se requiere limpieza. El valor predeterminado es verdadero. Consulte &lt;a href=&quot;git-commit-graph&quot;&gt;git-commit-graph [1]&lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="902fdcf00401d2e7de222ff42ce846a756cbb163" translate="yes" xml:space="preserve">
          <source>If true, then git will read the commit-graph file (if it exists) to parse the graph structure of commits. Defaults to true. See &lt;a href=&quot;git-commit-graph&quot;&gt;git-commit-graph[1]&lt;/a&gt; for more information.</source>
          <target state="translated">Si es verdadero, entonces git leer&amp;aacute; el archivo del gr&amp;aacute;fico de confirmaci&amp;oacute;n (si existe) para analizar la estructura gr&amp;aacute;fica de las confirmaciones. Por defecto es verdadero. Consulte &lt;a href=&quot;git-commit-graph&quot;&gt;git-commit-graph [1]&lt;/a&gt; para obtener m&amp;aacute;s informaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="615bfb2827e0f7022b5822b60fa7f8c63365efe6" translate="yes" xml:space="preserve">
          <source>If true, this is equivalent to the --verify-signatures command line option. See &lt;a href=&quot;git-merge&quot;&gt;git-merge[1]&lt;/a&gt; for details.</source>
          <target state="translated">Si es verdadero, equivale a la opci&amp;oacute;n de l&amp;iacute;nea de comandos --verify-signatures. Consulte &lt;a href=&quot;git-merge&quot;&gt;git-merge [1]&lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="5ab6fd64e80cf040c0dbc59c3bda45e3cb1c29b3" translate="yes" xml:space="preserve">
          <source>If true, this remote will be skipped by default when updating using &lt;a href=&quot;git-fetch&quot;&gt;git-fetch[1]&lt;/a&gt; or the &lt;code&gt;update&lt;/code&gt; subcommand of &lt;a href=&quot;git-remote&quot;&gt;git-remote[1]&lt;/a&gt;.</source>
          <target state="translated">Si es verdadero, este control remoto se omitir&amp;aacute; por defecto cuando se actualice usando &lt;a href=&quot;git-fetch&quot;&gt;git-fetch [1]&lt;/a&gt; o el subcomando de &lt;code&gt;update&lt;/code&gt; de &lt;a href=&quot;git-remote&quot;&gt;git-remote [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="537153cdd9a230b7ef7748cee5c002a80aec5646" translate="yes" xml:space="preserve">
          <source>If we compute the following non optimal function on it:</source>
          <target state="translated">Si calculamos la siguiente función no óptima en ella:</target>
        </trans-unit>
        <trans-unit id="b2bbf437e467ca2cfec5d122277b398062cce56a" translate="yes" xml:space="preserve">
          <source>If we examined all this history together in one repository, it will look like:</source>
          <target state="translated">Si examináramos toda esta historia juntos en un solo depósito,parecería que:</target>
        </trans-unit>
        <trans-unit id="f77fa3523026c17c64002e6f77dd7e18ad8c7cf7" translate="yes" xml:space="preserve">
          <source>If we have moved away from commit &lt;code&gt;f&lt;/code&gt;, then we must first recover its object name (typically by using git reflog), and then we can create a reference to it. For example, to see the last two commits to which &lt;code&gt;HEAD&lt;/code&gt; referred, we can use either of these commands:</source>
          <target state="translated">Si nos hemos alejado de la confirmaci&amp;oacute;n &lt;code&gt;f&lt;/code&gt; , primero debemos recuperar su nombre de objeto (generalmente usando git reflog), y luego podemos crear una referencia a &amp;eacute;l. Por ejemplo, para ver las dos &amp;uacute;ltimas confirmaciones a las que se refiri&amp;oacute; &lt;code&gt;HEAD&lt;/code&gt; , podemos usar cualquiera de estos comandos:</target>
        </trans-unit>
        <trans-unit id="1d5fb2a96e98dbf044763df4f4d84c289b1a7a1e" translate="yes" xml:space="preserve">
          <source>If we look at the way commits are created under the cover, we&amp;rsquo;ll see that there are more flexible ways creating commits.</source>
          <target state="translated">Si observamos la forma en que se crean las confirmaciones bajo la cubierta, veremos que hay formas m&amp;aacute;s flexibles de crear confirmaciones.</target>
        </trans-unit>
        <trans-unit id="2a7aed1833634138d2979858dc472c551054c3f5" translate="yes" xml:space="preserve">
          <source>If we need to talk about a particular commit, the character &quot;o&quot; may be replaced with another letter or number.</source>
          <target state="translated">Si necesitamos hablar de un compromiso en particular,el carácter &quot;o&quot; puede ser reemplazado por otra letra o número.</target>
        </trans-unit>
        <trans-unit id="73117dc442919d58c7658111f0e65fc3ffc2d92d" translate="yes" xml:space="preserve">
          <source>If width is &lt;code&gt;0&lt;/code&gt; (zero) then indent the lines of the output without wrapping them.</source>
          <target state="translated">Si el ancho es &lt;code&gt;0&lt;/code&gt; (cero), entonces sangra las l&amp;iacute;neas de la salida sin envolverlas.</target>
        </trans-unit>
        <trans-unit id="a0f8f4ea612137fd1324a3c99aa8cca8319d30d8" translate="yes" xml:space="preserve">
          <source>If you add a &lt;code&gt;+&lt;/code&gt; (plus sign) after &lt;code&gt;%&lt;/code&gt; of a placeholder, a line-feed is inserted immediately before the expansion if and only if the placeholder expands to a non-empty string.</source>
          <target state="translated">Si agrega un &lt;code&gt;+&lt;/code&gt; (signo m&amp;aacute;s) despu&amp;eacute;s de &lt;code&gt;%&lt;/code&gt; de un marcador de posici&amp;oacute;n, se inserta un salto de l&amp;iacute;nea inmediatamente antes de la expansi&amp;oacute;n si y solo si el marcador de posici&amp;oacute;n se expande a una cadena no vac&amp;iacute;a.</target>
        </trans-unit>
        <trans-unit id="f83e564943919127dff3b2d8ad2099402ce321cb" translate="yes" xml:space="preserve">
          <source>If you add a &lt;code&gt;-&lt;/code&gt; (minus sign) after &lt;code&gt;%&lt;/code&gt; of a placeholder, all consecutive line-feeds immediately preceding the expansion are deleted if and only if the placeholder expands to an empty string.</source>
          <target state="translated">Si agrega un &lt;code&gt;-&lt;/code&gt; (signo menos) despu&amp;eacute;s del &lt;code&gt;%&lt;/code&gt; de un marcador de posici&amp;oacute;n, todos los avances de l&amp;iacute;nea consecutivos que preceden inmediatamente a la expansi&amp;oacute;n se eliminan si y solo si el marcador de posici&amp;oacute;n se expande a una cadena vac&amp;iacute;a.</target>
        </trans-unit>
        <trans-unit id="a78fb3b12f14b3649d1e2f03162a9771701e268a" translate="yes" xml:space="preserve">
          <source>If you add a ` ` (space) after &lt;code&gt;%&lt;/code&gt; of a placeholder, a space is inserted immediately before the expansion if and only if the placeholder expands to a non-empty string.</source>
          <target state="translated">Si agrega un `` (espacio) despu&amp;eacute;s del &lt;code&gt;%&lt;/code&gt; de un marcador de posici&amp;oacute;n, se inserta un espacio inmediatamente antes de la expansi&amp;oacute;n si y solo si el marcador de posici&amp;oacute;n se expande a una cadena no vac&amp;iacute;a.</target>
        </trans-unit>
        <trans-unit id="2c694abd299e141b455acf195b0e2c24045c8fb9" translate="yes" xml:space="preserve">
          <source>If you allow overriding for the snapshot feature, you can specify which snapshot formats are globally disabled. You can also add any command-line options you want (such as setting the compression level). For instance, you can disable Zip compressed snapshots and set &lt;strong&gt;gzip&lt;/strong&gt;(1) to run at level 6 by adding the following lines to your gitweb configuration file:</source>
          <target state="translated">Si permite la anulaci&amp;oacute;n de la funci&amp;oacute;n de instant&amp;aacute;nea, puede especificar qu&amp;eacute; formatos de instant&amp;aacute;nea est&amp;aacute;n deshabilitados globalmente. Tambi&amp;eacute;n puede agregar las opciones de l&amp;iacute;nea de comandos que desee (como establecer el nivel de compresi&amp;oacute;n). Por ejemplo, puede deshabilitar las instant&amp;aacute;neas comprimidas Zip y configurar &lt;strong&gt;gzip&lt;/strong&gt; (1) para que se ejecute en el nivel 6 agregando las siguientes l&amp;iacute;neas a su archivo de configuraci&amp;oacute;n de gitweb:</target>
        </trans-unit>
        <trans-unit id="1eda80bb2b9aeb620d19886733f7a0a33613b07f" translate="yes" xml:space="preserve">
          <source>If you already use &lt;code&gt;mod_userdir&lt;/code&gt; in your virtual host or you don&amp;rsquo;t want to use the '~' as first character, just comment or remove the second rewrite rule, and uncomment one of the following according to what you want.</source>
          <target state="translated">Si ya usa &lt;code&gt;mod_userdir&lt;/code&gt; en su host virtual o no desea usar el '~' como primer car&amp;aacute;cter, simplemente comente o elimine la segunda regla de reescritura, y descomente uno de los siguientes seg&amp;uacute;n lo que desee.</target>
        </trans-unit>
        <trans-unit id="28aab4433d981c882862a14d41ff2a1b6ecf68f5" translate="yes" xml:space="preserve">
          <source>If you also want to see complete diffs at each step, use</source>
          <target state="translated">Si también quieres ver diferencias completas en cada paso,usa</target>
        </trans-unit>
        <trans-unit id="cc8e02bd7d5fd8efba31a3f28960e44c003964ed" translate="yes" xml:space="preserve">
          <source>If you and the maintainer both have accounts on the same machine, then you can just pull changes from each other&amp;rsquo;s repositories directly; commands that accept repository URLs as arguments will also accept a local directory name:</source>
          <target state="translated">Si usted y el mantenedor tienen cuentas en la misma m&amp;aacute;quina, entonces pueden simplemente extraer los cambios de los repositorios del otro directamente; Los comandos que aceptan las URL del repositorio como argumentos tambi&amp;eacute;n aceptar&amp;aacute;n un nombre de directorio local:</target>
        </trans-unit>
        <trans-unit id="41ebdd5e935074b399d696e8dc1f4204152e3f63" translate="yes" xml:space="preserve">
          <source>If you are a contributor that sends changes upstream in the form of emails, you should use topic branches as usual (see above). Then use &lt;a href=&quot;git-format-patch&quot;&gt;git-format-patch[1]&lt;/a&gt; to generate the corresponding emails (highly recommended over manually formatting them because it makes the maintainer&amp;rsquo;s life easier).</source>
          <target state="translated">Si eres un colaborador que env&amp;iacute;a cambios en forma ascendente en forma de correos electr&amp;oacute;nicos, debes usar las ramas tem&amp;aacute;ticas como de costumbre (ver arriba). Luego, use &lt;a href=&quot;git-format-patch&quot;&gt;git-format-patch [1]&lt;/a&gt; para generar los correos electr&amp;oacute;nicos correspondientes (muy recomendable en lugar de formatearlos manualmente porque facilita la vida del mantenedor).</target>
        </trans-unit>
        <trans-unit id="f7586aada4dc4dabc26450bca6e988967f6c8334" translate="yes" xml:space="preserve">
          <source>If you are a maintainer and would like to merge other people&amp;rsquo;s topic branches to the integration branches, they will typically send a request to do so by mail. Such a request looks like</source>
          <target state="translated">Si es un mantenedor y le gustar&amp;iacute;a fusionar las ramas tem&amp;aacute;ticas de otras personas con las ramas de integraci&amp;oacute;n, normalmente enviar&amp;aacute;n una solicitud para hacerlo por correo. Tal solicitud parece</target>
        </trans-unit>
        <trans-unit id="6a4170b1f048a116a2a20a0123a6634648180f67" translate="yes" xml:space="preserve">
          <source>If you are coming from a CVS background, the style of cooperation suggested in the previous section may be new to you. You do not have to worry. Git supports the &quot;shared public repository&quot; style of cooperation you are probably more familiar with as well.</source>
          <target state="translated">Si vienes de un entorno de CVS,el estilo de cooperación sugerido en la sección anterior puede ser nuevo para ti.No tiene que preocuparse.Git apoya el estilo de cooperación del &quot;depósito público compartido&quot; con el que probablemente también estés más familiarizado.</target>
        </trans-unit>
        <trans-unit id="d473d9569ed7194445a9c66a5a376371d037be9a" translate="yes" xml:space="preserve">
          <source>If you are creating a branch that you want to switch to immediately, it is easier to use the &quot;git switch&quot; command with its &lt;code&gt;-c&lt;/code&gt; option to do the same thing with a single command.</source>
          <target state="translated">Si est&amp;aacute; creando una rama a la que desea cambiar inmediatamente, es m&amp;aacute;s f&amp;aacute;cil usar el comando &quot;git switch&quot; con su opci&amp;oacute;n &lt;code&gt;-c&lt;/code&gt; para hacer lo mismo con un solo comando.</target>
        </trans-unit>
        <trans-unit id="882d5e43cce8c196ac8e463999e712ea9e114942" translate="yes" xml:space="preserve">
          <source>If you are following somebody else&amp;rsquo;s tree, you are most likely using remote-tracking branches (eg. &lt;code&gt;refs/remotes/origin/master&lt;/code&gt;). You usually want the tags from the other end.</source>
          <target state="translated">Si est&amp;aacute; siguiendo el &amp;aacute;rbol de otra persona, lo m&amp;aacute;s probable es que utilice ramas de seguimiento remoto (por ejemplo, &lt;code&gt;refs/remotes/origin/master&lt;/code&gt; ). Por lo general, desea las etiquetas del otro extremo.</target>
        </trans-unit>
        <trans-unit id="0f51d0b61f348c2beb156a534ba33bcb5f141385" translate="yes" xml:space="preserve">
          <source>If you are going to offer CVS access via pserver, add a line in /etc/inetd.conf like</source>
          <target state="translated">Si va a ofrecer acceso al CVS a través de pserver,añada una línea en /etc/inetd.conf como</target>
        </trans-unit>
        <trans-unit id="e1c58ac4057b121c58f1f5681f07adc3f2f06c66" translate="yes" xml:space="preserve">
          <source>If you are instead primarily interested in using Git to fetch a project, for example, to test the latest version, you may prefer to start with the first two chapters of &lt;a href=&quot;user-manual&quot;&gt;The Git User&amp;rsquo;s Manual&lt;/a&gt;.</source>
          <target state="translated">Si, en cambio, est&amp;aacute; interesado principalmente en usar Git para buscar un proyecto, por ejemplo, para probar la &amp;uacute;ltima versi&amp;oacute;n, es posible que prefiera comenzar con los dos primeros cap&amp;iacute;tulos del &lt;a href=&quot;user-manual&quot;&gt;Manual del usuario de Git&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9ce35cf81da423ef90a67288a1d702b7e25d4c6b" translate="yes" xml:space="preserve">
          <source>If you are interested in more details of the revision walking process, just have a look at the first implementation of &lt;code&gt;cmd_log()&lt;/code&gt;; call &lt;code&gt;git show v1.3.0&lt;sub&gt;155^2&lt;/sub&gt;4&lt;/code&gt; and scroll down to that function (note that you no longer need to call &lt;code&gt;setup_pager()&lt;/code&gt; directly).</source>
          <target state="translated">Si est&amp;aacute; interesado en m&amp;aacute;s detalles sobre el proceso de revisi&amp;oacute;n, solo eche un vistazo a la primera implementaci&amp;oacute;n de &lt;code&gt;cmd_log()&lt;/code&gt; ; llame a &lt;code&gt;git show v1.3.0&lt;sub&gt;155^2&lt;/sub&gt;4&lt;/code&gt; y despl&amp;aacute;cese hacia abajo hasta esa funci&amp;oacute;n (tenga en cuenta que ya no necesita llamar a &lt;code&gt;setup_pager()&lt;/code&gt; directamente).</target>
        </trans-unit>
        <trans-unit id="a5b0f41c084141a75721908d0d5d7971792ac89f" translate="yes" xml:space="preserve">
          <source>If you are not absolutely sure that the intermediate revisions are consistent (they compile, pass the testsuite, etc.) you should use &lt;code&gt;git stash&lt;/code&gt; to stash away the not-yet-committed changes after each commit, test, and amend the commit if fixes are necessary.</source>
          <target state="translated">Si no est&amp;aacute; absolutamente seguro de que las revisiones intermedias sean consistentes (se compilan, pasan la prueba, etc.), debe usar &lt;code&gt;git stash&lt;/code&gt; para guardar los cambios a&amp;uacute;n no confirmados despu&amp;eacute;s de cada confirmaci&amp;oacute;n, prueba y enmendar la confirmaci&amp;oacute;n si se arregla son necesarios.</target>
        </trans-unit>
        <trans-unit id="f188b17d328d7a9e1b61bcc0d2e0defbbf399561" translate="yes" xml:space="preserve">
          <source>If you are only interested in changes of the currently initialized submodules with respect to the commit recorded in the index or the HEAD, &lt;a href=&quot;git-status&quot;&gt;git-status[1]&lt;/a&gt; and &lt;a href=&quot;git-diff&quot;&gt;git-diff[1]&lt;/a&gt; will provide that information too (and can also report changes to a submodule&amp;rsquo;s work tree).</source>
          <target state="translated">Si solo est&amp;aacute; interesado en los cambios de los subm&amp;oacute;dulos actualmente inicializados con respecto a la confirmaci&amp;oacute;n registrada en el &amp;iacute;ndice o HEAD, &lt;a href=&quot;git-status&quot;&gt;git-status [1]&lt;/a&gt; y &lt;a href=&quot;git-diff&quot;&gt;git-diff [1]&lt;/a&gt; tambi&amp;eacute;n proporcionar&amp;aacute;n esa informaci&amp;oacute;n (y tambi&amp;eacute;n pueden informar cambios a &amp;aacute;rbol de trabajo de un subm&amp;oacute;dulo).</target>
        </trans-unit>
        <trans-unit id="9fb9a58a453e5ac1de19a98e53575241a40d1da0" translate="yes" xml:space="preserve">
          <source>If you are paranoid, running &lt;code&gt;git verify-pack&lt;/code&gt; command would detect if you have a corrupt pack, but do not worry too much. Our programs are always perfect ;-).</source>
          <target state="translated">Si est&amp;aacute; paranoico, ejecutar el comando &lt;code&gt;git verify-pack&lt;/code&gt; detectar&amp;iacute;a si tiene un paquete corrupto, pero no se preocupe demasiado. Nuestros programas son siempre perfectos ;-).</target>
        </trans-unit>
        <trans-unit id="277e03057ecd44d387d6f501d21982d9ff59224b" translate="yes" xml:space="preserve">
          <source>If you are repacking very old imported data (e.g. older than the last year), consider expending some extra CPU time and supplying --window=50 (or higher) when you run &lt;code&gt;git repack&lt;/code&gt;. This will take longer, but will also produce a smaller packfile. You only need to expend the effort once, and everyone using your project will benefit from the smaller repository.</source>
          <target state="translated">Si est&amp;aacute; reempaquetando datos importados muy antiguos (por ejemplo, m&amp;aacute;s antiguos que el a&amp;ntilde;o pasado), considere gastar algo de tiempo de CPU adicional y proporcionar --window = 50 (o m&amp;aacute;s) cuando ejecute &lt;code&gt;git repack&lt;/code&gt; . Esto llevar&amp;aacute; m&amp;aacute;s tiempo, pero tambi&amp;eacute;n producir&amp;aacute; un archivo de paquete m&amp;aacute;s peque&amp;ntilde;o. Solo necesita dedicar el esfuerzo una vez, y todos los que usen su proyecto se beneficiar&amp;aacute;n del repositorio m&amp;aacute;s peque&amp;ntilde;o.</target>
        </trans-unit>
        <trans-unit id="c500814f6020ec6c3d1c5a9b455910ea7fc36da1" translate="yes" xml:space="preserve">
          <source>If you are using &quot;git bisect run&quot;, you can use the same manual fix up as above, and then start another &quot;git bisect run&quot; in the special branch. Or as the &quot;git bisect&quot; man page says, the script passed to &quot;git bisect run&quot; can apply a patch before it compiles and test the software &lt;a href=&quot;#8&quot;&gt;[8]&lt;/a&gt;. The patch should turn a current untestable commits into a testable one. So the testing will result in &quot;good&quot; or &quot;bad&quot; and &quot;git bisect&quot; will be able to find the first bad commit. And the script should not forget to remove the patch once the testing is done before exiting from the script.</source>
          <target state="translated">Si est&amp;aacute; usando &quot;git bisect run&quot;, puede usar la misma correcci&amp;oacute;n manual que la anterior y luego iniciar otra &quot;git bisect run&quot; en la rama especial. O como dice la p&amp;aacute;gina de manual de &quot;git bisect&quot;, el script pasado a &quot;git bisect run&quot; puede aplicar un parche antes de compilar y probar el software &lt;a href=&quot;#8&quot;&gt;[8]&lt;/a&gt; . El parche deber&amp;iacute;a convertir una confirmaci&amp;oacute;n actual no comprobable en una comprobable. Por lo tanto, la prueba dar&amp;aacute; como resultado &quot;buena&quot; o &quot;mala&quot; y &quot;git bisect&quot; podr&amp;aacute; encontrar la primera confirmaci&amp;oacute;n incorrecta. Y el script no debe olvidarse de eliminar el parche una vez finalizada la prueba antes de salir del script.</target>
        </trans-unit>
        <trans-unit id="c6c0585fbbb0e19d850e67091effac179b4cf010" translate="yes" xml:space="preserve">
          <source>If you blow the index away entirely, you generally haven&amp;rsquo;t lost any information as long as you have the name of the tree that it described.</source>
          <target state="translated">Si borra el &amp;iacute;ndice por completo, generalmente no ha perdido ninguna informaci&amp;oacute;n siempre que tenga el nombre del &amp;aacute;rbol que describi&amp;oacute;.</target>
        </trans-unit>
        <trans-unit id="2d2eeeb68a563ca60a2c585f75afbad9b4a5940e" translate="yes" xml:space="preserve">
          <source>If you both have a test suite and use git bisect, then it becomes less important to check that all tests pass after each commit. Though of course it is probably a good idea to have some checks to avoid breaking too many things because it could make bisecting other bugs more difficult.</source>
          <target state="translated">Si ambos tienen un conjunto de pruebas y usan git bisect,entonces se vuelve menos importante comprobar que todas las pruebas pasan después de cada compromiso.Aunque,por supuesto,es probablemente una buena idea hacer algunas comprobaciones para evitar romper demasiadas cosas porque podría hacer más difícil la bisección de otros bichos.</target>
        </trans-unit>
        <trans-unit id="7c966eb4fc191c72371d7ddd65b21062f03ccb57" translate="yes" xml:space="preserve">
          <source>If you can do that, you can now recreate the missing object with</source>
          <target state="translated">Si puedes hacer eso,ahora puedes recrear el objeto perdido con</target>
        </trans-unit>
        <trans-unit id="5c6e6ccfdc26bd491d9ed428be6d535f807a44d7" translate="yes" xml:space="preserve">
          <source>If you choose to wait for the repack, don&amp;rsquo;t try to run benchmarks or performance tests until repacking is completed. fast-import outputs suboptimal packfiles that are simply never seen in real use situations.</source>
          <target state="translated">Si elige esperar el reempaquetado, no intente ejecutar evaluaciones comparativas o pruebas de rendimiento hasta que se complete el reempaquetado. La importaci&amp;oacute;n r&amp;aacute;pida produce archivos de paquetes sub&amp;oacute;ptimos que simplemente nunca se ven en situaciones de uso real.</target>
        </trans-unit>
        <trans-unit id="db9a66177c2b117d0740a2ed1a511dcc1bea6811" translate="yes" xml:space="preserve">
          <source>If you decide that you&amp;rsquo;d rather see version 2.6.17, you can modify the current branch to point at v2.6.17 instead, with</source>
          <target state="translated">Si decide que prefiere ver la versi&amp;oacute;n 2.6.17, puede modificar la rama actual para que apunte a v2.6.17 en su lugar, con</target>
        </trans-unit>
        <trans-unit id="c943de9e92fabf055b174eed9b10ced62cf6d401" translate="yes" xml:space="preserve">
          <source>If you decide you want the history back, you can always create a new reference pointing to it, for example, a new branch:</source>
          <target state="translated">Si decides que quieres recuperar la historia,siempre puedes crear una nueva referencia que apunte a ella,por ejemplo,una nueva rama:</target>
        </trans-unit>
        <trans-unit id="1f288af5e76ef5a4f231f5810c9960b284e03991" translate="yes" xml:space="preserve">
          <source>If you develop on a branch crazy-idea, then regret it, you can always delete the branch with</source>
          <target state="translated">Si desarrollas una idea loca de una rama,entonces arrepiéntete,siempre puedes borrar la rama con</target>
        </trans-unit>
        <trans-unit id="6d7822c644d713e2101d339a30a68a502f988e1b" translate="yes" xml:space="preserve">
          <source>If you didn&amp;rsquo;t specify the CVSROOT/CVS_SERVER directly in the checkout command, automatically saving it in your &lt;code&gt;CVS/Root&lt;/code&gt; files, then you need to set them explicitly in your environment. CVSROOT should be set as per normal, but the directory should point at the appropriate Git repo. As above, for SSH clients &lt;code&gt;not&lt;/code&gt; restricted to &lt;code&gt;git-shell&lt;/code&gt;, CVS_SERVER should be set to &lt;code&gt;git-cvsserver&lt;/code&gt;.</source>
          <target state="translated">Si no especific&amp;oacute; CVSROOT / CVS_SERVER directamente en el comando checkout, guard&amp;aacute;ndolo autom&amp;aacute;ticamente en sus archivos &lt;code&gt;CVS/Root&lt;/code&gt; , entonces debe configurarlos expl&amp;iacute;citamente en su entorno. CVSROOT debe configurarse como de costumbre, pero el directorio debe apuntar al repositorio de Git apropiado. Como se indic&amp;oacute; anteriormente, para los clientes SSH &lt;code&gt;not&lt;/code&gt; restringidos a &lt;code&gt;git-shell&lt;/code&gt; , CVS_SERVER debe configurarse como &lt;code&gt;git-cvsserver&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="467e5efa7fe7a25688df5c19177b2c4b9a971487" translate="yes" xml:space="preserve">
          <source>If you discover that you made a mistake in specifying the status of a revision, you can save the output of this command to a file, edit it to remove the incorrect entries, and then issue the following commands to return to a corrected state:</source>
          <target state="translated">Si descubre que cometió un error al especificar el estado de una revisión,puede guardar la salida de este comando en un archivo,editarlo para eliminar las entradas incorrectas y luego emitir los siguientes comandos para volver a un estado corregido:</target>
        </trans-unit>
        <trans-unit id="fdb535b3114700ba9158b47e1cadbbb4ffee0391" translate="yes" xml:space="preserve">
          <source>If you do merge, note the following rule: &lt;code&gt;git svn dcommit&lt;/code&gt; will attempt to commit on top of the SVN commit named in</source>
          <target state="translated">Si fusiona, tenga en cuenta la siguiente regla: &lt;code&gt;git svn dcommit&lt;/code&gt; intentar&amp;aacute; confirmar sobre la confirmaci&amp;oacute;n SVN nombrada en</target>
        </trans-unit>
        <trans-unit id="d7d53a76c809507d4642710878a2561fe720cf02" translate="yes" xml:space="preserve">
          <source>If you do not have &lt;code&gt;mod_rewrite&lt;/code&gt; available to match against the query string, it is sufficient to just protect &lt;code&gt;git-receive-pack&lt;/code&gt; itself, like:</source>
          <target state="translated">Si no tiene &lt;code&gt;mod_rewrite&lt;/code&gt; disponible para que coincida con la cadena de consulta, es suficiente con proteger &lt;code&gt;git-receive-pack&lt;/code&gt; en s&amp;iacute;, como:</target>
        </trans-unit>
        <trans-unit id="61817ad83cf40051c64b68562493dd77ca2fe6f8" translate="yes" xml:space="preserve">
          <source>If you do not have this configuration variable, the value of &lt;code&gt;i18n.commitEncoding&lt;/code&gt; is used instead.</source>
          <target state="translated">Si no tiene esta variable de configuraci&amp;oacute;n, en su &lt;code&gt;i18n.commitEncoding&lt;/code&gt; se utiliza el valor de i18n.commitEncoding .</target>
        </trans-unit>
        <trans-unit id="14f3fbb24beba0c7fa85b6385a5b3979968f4593" translate="yes" xml:space="preserve">
          <source>If you do not know the encoding of a file, then you can use the &lt;code&gt;file&lt;/code&gt; command to guess the encoding:</source>
          <target state="translated">Si no conoce la codificaci&amp;oacute;n de un archivo, puede usar el comando de &lt;code&gt;file&lt;/code&gt; para adivinar la codificaci&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="371074e4db6e9a2527bbe63c09ef576231a57ee5" translate="yes" xml:space="preserve">
          <source>If you do not want this feature on your server just remove the second rewrite rule.</source>
          <target state="translated">Si no quieres esta característica en tu servidor sólo tienes que eliminar la segunda regla de reescritura.</target>
        </trans-unit>
        <trans-unit id="b68a865397b0b847cde7a3d94bca4e3b8a2b1c61" translate="yes" xml:space="preserve">
          <source>If you do not want to lose your work (history from X to B) or the work by the other person (history from X to A), you would need to first fetch the history from the repository, create a history that contains changes done by both parties, and push the result back.</source>
          <target state="translated">Si no quiere perder su trabajo (historial de X a B)o el trabajo de la otra persona (historial de X a A),tendría que recuperar primero el historial del depósito,crear un historial que contenga los cambios realizados por ambas partes y devolver el resultado.</target>
        </trans-unit>
        <trans-unit id="86c596eda084e162303624098fd515841984d889" translate="yes" xml:space="preserve">
          <source>If you do this, then you should make a public announcement indicating that &lt;code&gt;next&lt;/code&gt; was rewound and rebuilt.</source>
          <target state="translated">Si hace esto, debe hacer un anuncio p&amp;uacute;blico que indique que el &lt;code&gt;next&lt;/code&gt; fue rebobinado y reconstruido.</target>
        </trans-unit>
        <trans-unit id="325a3c2222e4d4aaa5c937ccab45f34c95352c49" translate="yes" xml:space="preserve">
          <source>If you don&amp;rsquo;t want to continue with that right away, a few other digressions that may be interesting at this point are:</source>
          <target state="translated">Si no desea continuar con eso de inmediato, algunas otras digresiones que pueden ser interesantes en este punto son:</target>
        </trans-unit>
        <trans-unit id="bf36326b8dfc35954574299040bce7c304964cb4" translate="yes" xml:space="preserve">
          <source>If you enable PATH_INFO usage in gitweb by putting</source>
          <target state="translated">Si habilitas el uso de PATH_INFO en gitweb poniendo</target>
        </trans-unit>
        <trans-unit id="3e267e16654424679545d579a56c2fc25a567700" translate="yes" xml:space="preserve">
          <source>If you examine the file &lt;code&gt;.git/config&lt;/code&gt;, you will see that Git has added a new stanza:</source>
          <target state="translated">Si examina el archivo &lt;code&gt;.git/config&lt;/code&gt; , ver&amp;aacute; que Git ha agregado una nueva estrofa:</target>
        </trans-unit>
        <trans-unit id="adaf459f23d870ce117760016108b7b8ca67ba63" translate="yes" xml:space="preserve">
          <source>If you examine the resulting commit using gitk, you will see that it has two parents, one pointing to the top of the current branch, and one to the top of the other branch.</source>
          <target state="translated">Si examinas el commit resultante usando gitk,verás que tiene dos padres,uno apuntando a la parte superior de la rama actual,y otro a la parte superior de la otra rama.</target>
        </trans-unit>
        <trans-unit id="f87315138be947ec0afa0ac1351920e4dfe2a0c2" translate="yes" xml:space="preserve">
          <source>If you find some reason to set this option to &lt;code&gt;false&lt;/code&gt;, other than one-off testing, you should report the behavior difference as a bug in Git (see &lt;a href=&quot;https://git-scm.com/community&quot;&gt;https://git-scm.com/community&lt;/a&gt; for details).</source>
          <target state="translated">Si encuentra alguna raz&amp;oacute;n para establecer esta opci&amp;oacute;n en &lt;code&gt;false&lt;/code&gt; , que no sea una prueba &amp;uacute;nica, debe informar la diferencia de comportamiento como un error en Git (consulte &lt;a href=&quot;https://git-scm.com/community&quot;&gt;https://git-scm.com/community&lt;/a&gt; para obtener m&amp;aacute;s detalles).</target>
        </trans-unit>
        <trans-unit id="bbcb62743d9f0aa650833d05c94c3e3db4eb4e0d" translate="yes" xml:space="preserve">
          <source>If you find you forked off the wrong branch and want to move it &quot;back in time&quot;, use &lt;a href=&quot;git-rebase&quot;&gt;git-rebase[1]&lt;/a&gt;.</source>
          <target state="translated">Si encuentra que se bifurc&amp;oacute; en la rama incorrecta y quiere moverla &quot;hacia atr&amp;aacute;s en el tiempo&quot;, use &lt;a href=&quot;git-rebase&quot;&gt;git-rebase [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="12cef549aa55079a651285c652b78bc4bc8af80c" translate="yes" xml:space="preserve">
          <source>If you find you need new features from the branch &lt;code&gt;other&lt;/code&gt; to continue working on your topic, merge &lt;code&gt;other&lt;/code&gt; to &lt;code&gt;topic&lt;/code&gt;. (However, do not do this &quot;just habitually&quot;, see below.)</source>
          <target state="translated">Si encuentra que necesita nuevas funciones de la rama &lt;code&gt;other&lt;/code&gt; para continuar trabajando en su tema, combine &lt;code&gt;other&lt;/code&gt; con el &lt;code&gt;topic&lt;/code&gt; . (Sin embargo, no haga esto &quot;solo habitualmente&quot;, consulte a continuaci&amp;oacute;n).</target>
        </trans-unit>
        <trans-unit id="c89cdceb268014744fee40998409a87331a70cef" translate="yes" xml:space="preserve">
          <source>If you followed the last paragraph, you will now have many small topic branches, and occasionally wonder how they interact. Perhaps the result of merging them does not even work? But on the other hand, we want to avoid merging them anywhere &quot;stable&quot; because such merges cannot easily be undone.</source>
          <target state="translated">Si siguieron el último párrafo,ahora tendrán muchas pequeñas ramas temáticas,y ocasionalmente se preguntan cómo interactúan.¿Quizás el resultado de fusionarlas ni siquiera funciona? Pero por otro lado,queremos evitar fusionarlas en cualquier lugar &quot;estable&quot; porque tales fusiones no pueden deshacerse fácilmente.</target>
        </trans-unit>
        <trans-unit id="f8ccc691fa447494e794dd8643eee96c05ab0ca5" translate="yes" xml:space="preserve">
          <source>If you get stuck and decide to just give up and throw the whole mess away, you can always return to the pre-merge state with</source>
          <target state="translated">Si te quedas atascado y decides rendirte y tirar todo el desorden,siempre puedes volver al estado anterior a la fusión con</target>
        </trans-unit>
        <trans-unit id="8d7c02e3dd22e344be3301eb8a2278c07f5b614c" translate="yes" xml:space="preserve">
          <source>If you grasp the ideas in that initial commit, you should check out a more recent version and skim &lt;code&gt;cache.h&lt;/code&gt;, &lt;code&gt;object.h&lt;/code&gt; and &lt;code&gt;commit.h&lt;/code&gt;.</source>
          <target state="translated">Si captar las ideas en que se comprometen inicial, que debe salir una versi&amp;oacute;n m&amp;aacute;s reciente y descremada &lt;code&gt;cache.h&lt;/code&gt; , &lt;code&gt;object.h&lt;/code&gt; y &lt;code&gt;commit.h&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b91c4875b14e285ca788a5bd5edf75dfcd9633ab" translate="yes" xml:space="preserve">
          <source>If you have a clone of git.git itself, the output of &lt;a href=&quot;git-shortlog&quot;&gt;git-shortlog[1]&lt;/a&gt; and &lt;a href=&quot;git-blame&quot;&gt;git-blame[1]&lt;/a&gt; can show you the authors for specific parts of the project.</source>
          <target state="translated">Si tiene un clon de git.git en s&amp;iacute;, la salida de &lt;a href=&quot;git-shortlog&quot;&gt;git-shortlog [1]&lt;/a&gt; y &lt;a href=&quot;git-blame&quot;&gt;git-blame [1]&lt;/a&gt; puede mostrarle los autores de partes espec&amp;iacute;ficas del proyecto.</target>
        </trans-unit>
        <trans-unit id="d76da65add1ab668fa52a438912f17a42719fc64" translate="yes" xml:space="preserve">
          <source>If you have a repository where all the branches of interest exist as subdirectories of a single depot path, you can use &lt;code&gt;--detect-branches&lt;/code&gt; when cloning or syncing to have &lt;code&gt;git p4&lt;/code&gt; automatically find subdirectories in p4, and to generate these as branches in Git.</source>
          <target state="translated">Si tiene un repositorio donde todas las ramas de inter&amp;eacute;s existen como subdirectorios de una &amp;uacute;nica ruta de dep&amp;oacute;sito, puede usar &lt;code&gt;--detect-branches&lt;/code&gt; al clonar o sincronizar para que &lt;code&gt;git p4&lt;/code&gt; encuentre autom&amp;aacute;ticamente subdirectorios en p4 y los genere como ramas en Git .</target>
        </trans-unit>
        <trans-unit id="0a6081c46922db10b6bc6f47a7f76b221a6196d2" translate="yes" xml:space="preserve">
          <source>If you have a script that can tell if the current source code is good or bad, you can bisect by issuing the command:</source>
          <target state="translated">Si tienes un script que puede decir si el código fuente actual es bueno o malo,puedes bisecar emitiendo el comando:</target>
        </trans-unit>
        <trans-unit id="863f4e57810f45268a83fecc8614e1be7d434564" translate="yes" xml:space="preserve">
          <source>If you have added attributes to a file that cause the canonical repository format for that file to change, such as adding a clean/smudge filter or text/eol/ident attributes, merging anything where the attribute is not in place would normally cause merge conflicts.</source>
          <target state="translated">Si ha añadido atributos a un archivo que hacen que el formato del repositorio canónico de ese archivo cambie,como añadir un filtro clean/smudge o atributos text/eol/ident,fusionar cualquier cosa en la que el atributo no esté en su sitio normalmente causaría conflictos de fusión.</target>
        </trans-unit>
        <trans-unit id="0176ab2e378e3df6f1e24b7af5113bcd1e2d5987" translate="yes" xml:space="preserve">
          <source>If you have an old Git that does not understand the version 2 &lt;code&gt;*.idx&lt;/code&gt; file, cloning or fetching over a non native protocol (e.g. &quot;http&quot;) that will copy both &lt;code&gt;*.pack&lt;/code&gt; file and corresponding &lt;code&gt;*.idx&lt;/code&gt; file from the other side may give you a repository that cannot be accessed with your older version of Git. If the &lt;code&gt;*.pack&lt;/code&gt; file is smaller than 2 GB, however, you can use &lt;a href=&quot;git-index-pack&quot;&gt;git-index-pack[1]&lt;/a&gt; on the *.pack file to regenerate the &lt;code&gt;*.idx&lt;/code&gt; file.</source>
          <target state="translated">Si usted tiene un viejo Git que no entiende la versi&amp;oacute;n 2 &lt;code&gt;*.idx&lt;/code&gt; archivo, la clonaci&amp;oacute;n o ir a buscar a trav&amp;eacute;s de un protocolo no nativo (por ejemplo, &quot;http&quot;) que copiar&amp;aacute; tanto &lt;code&gt;*.pack&lt;/code&gt; archivo y que corresponde &lt;code&gt;*.idx&lt;/code&gt; archivo desde el otro lado puede proporcionarle un repositorio al que no se puede acceder con su versi&amp;oacute;n anterior de Git. Sin embargo, si el archivo &lt;code&gt;*.pack&lt;/code&gt; tiene menos de 2 GB, puede usar &lt;a href=&quot;git-index-pack&quot;&gt;git-index-pack [1]&lt;/a&gt; en el archivo * .pack para regenerar el archivo &lt;code&gt;*.idx&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1c4d7bfb0f77357b6cf0e14e83f75e3ad3892e2a" translate="yes" xml:space="preserve">
          <source>If you have an unfortunate branch that is named &lt;code&gt;hello.c&lt;/code&gt;, this step would be confused as an instruction to switch to that branch. You should instead write:</source>
          <target state="translated">Si tiene una rama desafortunada que se llama &lt;code&gt;hello.c&lt;/code&gt; , este paso se confundir&amp;iacute;a con una instrucci&amp;oacute;n para cambiar a esa rama. En su lugar, deber&amp;iacute;a escribir:</target>
        </trans-unit>
        <trans-unit id="6748330dc78a7c7da8f6ed8d92c497a5f2638cdd" translate="yes" xml:space="preserve">
          <source>If you have imported some changes from another VCS and would like to add tags for major releases of your work, it is useful to be able to specify the date to embed inside of the tag object; such data in the tag object affects, for example, the ordering of tags in the gitweb interface.</source>
          <target state="translated">Si ha importado algunos cambios de otro VCS y desea añadir etiquetas para las principales versiones de su trabajo,es útil poder especificar la fecha que se incrustará en el objeto de la etiqueta;esos datos en el objeto de la etiqueta afectan,por ejemplo,al orden de las etiquetas en la interfaz gitweb.</target>
        </trans-unit>
        <trans-unit id="d87d691ee6c65f8321e66034d85f79793605b8a9" translate="yes" xml:space="preserve">
          <source>If you have local modifications to one or more files that are different between the current branch and the branch to which you are switching, the command refuses to switch branches in order to preserve your modifications in context. However, with this option, a three-way merge between the current branch, your working tree contents, and the new branch is done, and you will be on the new branch.</source>
          <target state="translated">Si tiene modificaciones locales en uno o más archivos que son diferentes entre la rama actual y la rama a la que está cambiando,el comando se niega a cambiar de rama para preservar sus modificaciones en el contexto.Sin embargo,con esta opción,se realiza una fusión a tres bandas entre la rama actual,el contenido de su árbol de trabajo y la nueva rama,y usted estará en la nueva rama.</target>
        </trans-unit>
        <trans-unit id="8478bf298413f91bee793cf9d5101299eaa200bd" translate="yes" xml:space="preserve">
          <source>If you have multifactor authentication setup on your gmail account, you will need to generate an app-specific password for use with &lt;code&gt;git send-email&lt;/code&gt;. Visit &lt;a href=&quot;https://security.google.com/settings/security/apppasswords&quot;&gt;https://security.google.com/settings/security/apppasswords&lt;/a&gt; to create it.</source>
          <target state="translated">Si tiene configurada la autenticaci&amp;oacute;n multifactor en su cuenta de Gmail, deber&amp;aacute; generar una contrase&amp;ntilde;a espec&amp;iacute;fica de la aplicaci&amp;oacute;n para usar con &lt;code&gt;git send-email&lt;/code&gt; . Visite &lt;a href=&quot;https://security.google.com/settings/security/apppasswords&quot;&gt;https://security.google.com/settings/security/apppasswords&lt;/a&gt; para crearlo.</target>
        </trans-unit>
        <trans-unit id="a8709177c278b5c18333d173ba933d08e65c6841" translate="yes" xml:space="preserve">
          <source>If you have some initial content (say, a tarball):</source>
          <target state="translated">Si tienes algún contenido inicial (digamos,una bola de alquitrán):</target>
        </trans-unit>
        <trans-unit id="495e5ec3bcea1de47c24c2073588d5c3b0cf061c" translate="yes" xml:space="preserve">
          <source>If you have these three &lt;code&gt;gitattributes&lt;/code&gt; file:</source>
          <target state="translated">Si tiene estos tres archivos &lt;code&gt;gitattributes&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="8c8ea948fec03c8051df6ee29e66dada48224b15" translate="yes" xml:space="preserve">
          <source>If you have uncommitted changes in your submodule working tree, &lt;code&gt;git
submodule update&lt;/code&gt; will not overwrite them. Instead, you get the usual warning about not being able switch from a dirty branch.</source>
          <target state="translated">Si tiene cambios no confirmados en el &amp;aacute;rbol de trabajo de su subm&amp;oacute;dulo, la &lt;code&gt;git submodule update&lt;/code&gt; no los sobrescribir&amp;aacute;. En su lugar, recibe la advertencia habitual sobre no poder cambiar de una rama sucia.</target>
        </trans-unit>
        <trans-unit id="4ccda3cb1e710a989feb173887174c1818fd9d4a" translate="yes" xml:space="preserve">
          <source>If you intend that your next commit should record all modifications of tracked files in the working tree and record all removals of files that have been removed from the working tree with &lt;code&gt;rm&lt;/code&gt; (as opposed to &lt;code&gt;git rm&lt;/code&gt;), use &lt;code&gt;git commit -a&lt;/code&gt;, as it will automatically notice and record all removals. You can also have a similar effect without committing by using &lt;code&gt;git add -u&lt;/code&gt;.</source>
          <target state="translated">Si tiene la intenci&amp;oacute;n de que su pr&amp;oacute;xima confirmaci&amp;oacute;n debe registrar todas las modificaciones de los archivos rastreados en el &amp;aacute;rbol de trabajo y registrar todas las eliminaciones de archivos que se han eliminado del &amp;aacute;rbol de trabajo con &lt;code&gt;rm&lt;/code&gt; (a diferencia de &lt;code&gt;git rm&lt;/code&gt; ), use &lt;code&gt;git commit -a&lt;/code&gt; , ya que notar&amp;aacute; y registrar&amp;aacute; autom&amp;aacute;ticamente todas las eliminaciones. Tambi&amp;eacute;n puede tener un efecto similar sin comprometerse usando &lt;code&gt;git add -u&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5223949abb561108f8606da60ebd3c3b78a9872c" translate="yes" xml:space="preserve">
          <source>If you intend to set up a shared public repository that all developers can read/write, or if you want to use &lt;a href=&quot;git-cvsserver&quot;&gt;git-cvsserver[1]&lt;/a&gt;, then you probably want to make a bare clone of the imported repository, and use the clone as the shared repository. See &lt;a href=&quot;gitcvs-migration&quot;&gt;gitcvs-migration[7]&lt;/a&gt;.</source>
          <target state="translated">Si tiene la intenci&amp;oacute;n de configurar un repositorio p&amp;uacute;blico compartido que todos los desarrolladores puedan leer / escribir, o si desea usar &lt;a href=&quot;git-cvsserver&quot;&gt;git-cvsserver [1]&lt;/a&gt; , entonces probablemente desee hacer un clon b&amp;aacute;sico del repositorio importado y usar el clon como el repositorio compartido. Consulte &lt;a href=&quot;gitcvs-migration&quot;&gt;gitcvs-migration [7]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1e8fe75eb0be8caf3b1c84cce78f8d98c5c3831c" translate="yes" xml:space="preserve">
          <source>If you just have a few changes, the simplest way to submit them may just be to send them as patches in email:</source>
          <target state="translated">Si sólo tienes unos pocos cambios,la forma más sencilla de enviarlos puede ser enviándolos como parches en el correo electrónico:</target>
        </trans-unit>
        <trans-unit id="c3509063d9c8d28fc350d64af9974d7f7ad07d9f" translate="yes" xml:space="preserve">
          <source>If you just need to use Git as a revision control system you may prefer to start with &quot;A Tutorial Introduction to Git&quot; (&lt;a href=&quot;gittutorial&quot;&gt;gittutorial[7]&lt;/a&gt;) or &lt;a href=&quot;user-manual&quot;&gt;the Git User Manual&lt;/a&gt;.</source>
          <target state="translated">Si solo necesita usar Git como un sistema de control de revisiones, es posible que prefiera comenzar con &quot;Un tutorial de introducci&amp;oacute;n a Git&quot; ( &lt;a href=&quot;gittutorial&quot;&gt;gittutorial [7]&lt;/a&gt; ) o &lt;a href=&quot;user-manual&quot;&gt;el Manual de usuario de Git&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6a839fbf210e306e2136c31f2a968baa357075d1" translate="yes" xml:space="preserve">
          <source>If you just want to edit the commit message for a commit, replace the command &quot;pick&quot; with the command &quot;reword&quot;.</source>
          <target state="translated">Si sólo quieres editar el mensaje de confirmación para una confirmación,reemplaza el comando &quot;pick&quot; con el comando &quot;reword&quot;.</target>
        </trans-unit>
        <trans-unit id="1a22bf44debddb2b1654740b48fdcb88c27e49eb" translate="yes" xml:space="preserve">
          <source>If you just want to get the newest copies of the integration branches, staying up to date is easy too:</source>
          <target state="translated">Si sólo quieres obtener las copias más recientes de las ramas de integración,estar al día también es fácil:</target>
        </trans-unit>
        <trans-unit id="5a13a90084d33cb33125eb2c50fff6e07ce8c0d9" translate="yes" xml:space="preserve">
          <source>If you just want to look at an old version of the file, without modifying the working directory, you can do that with &lt;a href=&quot;git-show&quot;&gt;git-show[1]&lt;/a&gt;:</source>
          <target state="translated">Si solo desea ver una versi&amp;oacute;n anterior del archivo, sin modificar el directorio de trabajo, puede hacerlo con &lt;a href=&quot;git-show&quot;&gt;git-show [1]&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="68f30cb563d71e3909ec492d5d34c92facf1030b" translate="yes" xml:space="preserve">
          <source>If you just want to verify whether a given tagged version contains a given commit, you could use &lt;a href=&quot;git-merge-base&quot;&gt;git-merge-base[1]&lt;/a&gt;:</source>
          <target state="translated">Si solo desea verificar si una versi&amp;oacute;n etiquetada determinada contiene una confirmaci&amp;oacute;n determinada, puede usar &lt;a href=&quot;git-merge-base&quot;&gt;git-merge-base [1]&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="d8a6261ebe4a4d52d4d9a2234a54f319605d4abc" translate="yes" xml:space="preserve">
          <source>If you keep your primary branches immediately under &lt;code&gt;refs/heads&lt;/code&gt;, and topic branches in subdirectories of it, having the following in the configuration file may help:</source>
          <target state="translated">Si mantiene sus ramas primarias inmediatamente bajo &lt;code&gt;refs/heads&lt;/code&gt; y las ramas tem&amp;aacute;ticas en sus subdirectorios, tener lo siguiente en el archivo de configuraci&amp;oacute;n puede ayudar:</target>
        </trans-unit>
        <trans-unit id="933889a0268ded50e3304543b4e7167783337a6d" translate="yes" xml:space="preserve">
          <source>If you know beforehand more than one good commit, you can narrow the bisect space down by specifying all of the good commits immediately after the bad commit when issuing the &lt;code&gt;bisect start&lt;/code&gt; command:</source>
          <target state="translated">Si conoce de antemano m&amp;aacute;s de una confirmaci&amp;oacute;n buena, puede reducir el espacio de bisecci&amp;oacute;n especificando todas las confirmaciones buenas inmediatamente despu&amp;eacute;s de la confirmaci&amp;oacute;n incorrecta al emitir el comando &lt;code&gt;bisect start&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="0d0efb22e26170e5f6a2a2c939fcf419b948a8aa" translate="yes" xml:space="preserve">
          <source>If you know up to what commit the intended recipient repository should have the necessary objects, you can use that knowledge to specify the basis, giving a cut-off point to limit the revisions and objects that go in the resulting bundle. The previous example used the lastR2bundle tag for this purpose, but you can use any other options that you would give to the &lt;a href=&quot;git-log&quot;&gt;git-log[1]&lt;/a&gt; command. Here are more examples:</source>
          <target state="translated">Si sabe hasta qu&amp;eacute; confirmaci&amp;oacute;n el repositorio de destinatarios previsto debe tener los objetos necesarios, puede utilizar ese conocimiento para especificar la base, dando un punto de corte para limitar las revisiones y los objetos que van en el paquete resultante. El ejemplo anterior us&amp;oacute; la etiqueta lastR2bundle para este prop&amp;oacute;sito, pero puede usar cualquier otra opci&amp;oacute;n que le d&amp;eacute; al comando &lt;a href=&quot;git-log&quot;&gt;git-log [1]&lt;/a&gt; . Aqu&amp;iacute; hay m&amp;aacute;s ejemplos:</target>
        </trans-unit>
        <trans-unit id="6178dcf6380091f437345048b81ae6acd9e3fdb2" translate="yes" xml:space="preserve">
          <source>If you leave out the commit name, &lt;code&gt;git grep&lt;/code&gt; will search any of the files it manages in your current directory. So</source>
          <target state="translated">Si omite el nombre de confirmaci&amp;oacute;n, &lt;code&gt;git grep&lt;/code&gt; buscar&amp;aacute; cualquiera de los archivos que administra en su directorio actual. Entonces</target>
        </trans-unit>
        <trans-unit id="1d3a773743dd2af35a158be46f7bad29aaa6f592" translate="yes" xml:space="preserve">
          <source>If you like to live dangerously, you can replace &lt;strong&gt;all&lt;/strong&gt; core.gitproxy by a new one with</source>
          <target state="translated">Si te gusta vivir peligrosamente, puedes reemplazar &lt;strong&gt;todo&lt;/strong&gt; core.gitproxy por uno nuevo con</target>
        </trans-unit>
        <trans-unit id="9bff9b22c3bcd9cedd5449471391b1cdf79647bb" translate="yes" xml:space="preserve">
          <source>If you make a commit and then find a mistake immediately after that, you can recover from it with &lt;code&gt;git reset&lt;/code&gt;.</source>
          <target state="translated">Si realiza una confirmaci&amp;oacute;n y luego encuentra un error inmediatamente despu&amp;eacute;s de eso, puede recuperarse con &lt;code&gt;git reset&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="de1cbbe8d26471b895b54a3d07b205ed1595e0f4" translate="yes" xml:space="preserve">
          <source>If you make a commit that you later wish you hadn&amp;rsquo;t, there are two fundamentally different ways to fix the problem:</source>
          <target state="translated">Si realiza una confirmaci&amp;oacute;n que luego desear&amp;iacute;a no haber hecho, hay dos formas fundamentalmente diferentes de solucionar el problema:</target>
        </trans-unit>
        <trans-unit id="99ec09f13fb1346102b0f372f091bd234e630539" translate="yes" xml:space="preserve">
          <source>If you make it (very) clear that this branch is going to be deleted right after the testing, you can even publish this branch, for example to give the testers a chance to work with it, or other developers a chance to see if their in-progress work will be compatible. &lt;code&gt;git.git&lt;/code&gt; has such an official throw-away integration branch called &lt;code&gt;pu&lt;/code&gt;.</source>
          <target state="translated">Si deja (muy) claro que esta rama se eliminar&amp;aacute; inmediatamente despu&amp;eacute;s de la prueba, puede incluso publicar esta rama, por ejemplo, para darles a los probadores la oportunidad de trabajar con ella u otros desarrolladores la oportunidad de ver si su el trabajo en curso ser&amp;aacute; compatible. &lt;code&gt;git.git&lt;/code&gt; tiene una rama de integraci&amp;oacute;n oficial y desechable llamada &lt;code&gt;pu&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d532db8eaaa16fed286ca601d3c879ce0db79d29" translate="yes" xml:space="preserve">
          <source>If you make the decision to start your new branch at some other point in the history than the current &lt;code&gt;HEAD&lt;/code&gt;, you can do so by just telling &lt;code&gt;git checkout&lt;/code&gt; what the base of the checkout would be. In other words, if you have an earlier tag or branch, you&amp;rsquo;d just do</source>
          <target state="translated">Si toma la decisi&amp;oacute;n de comenzar su nueva rama en alg&amp;uacute;n otro punto del historial que no sea el &lt;code&gt;HEAD&lt;/code&gt; actual , puede hacerlo simplemente dici&amp;eacute;ndole a &lt;code&gt;git checkout&lt;/code&gt; cu&amp;aacute;l ser&amp;iacute;a la base del pago. En otras palabras, si tiene una etiqueta o rama anterior, simplemente har&amp;iacute;a</target>
        </trans-unit>
        <trans-unit id="ef318d408cfc2262e9ecdfec6313bac5c50bc49a" translate="yes" xml:space="preserve">
          <source>If you manually move a linked working tree, you need to update the &lt;code&gt;gitdir&lt;/code&gt; file in the entry&amp;rsquo;s directory. For example, if a linked working tree is moved to &lt;code&gt;/newpath/test-next&lt;/code&gt; and its &lt;code&gt;.git&lt;/code&gt; file points to &lt;code&gt;/path/main/.git/worktrees/test-next&lt;/code&gt;, then update &lt;code&gt;/path/main/.git/worktrees/test-next/gitdir&lt;/code&gt; to reference &lt;code&gt;/newpath/test-next&lt;/code&gt; instead.</source>
          <target state="translated">Si mueve manualmente un &amp;aacute;rbol de trabajo vinculado, debe actualizar el archivo &lt;code&gt;gitdir&lt;/code&gt; en el directorio de la entrada. Por ejemplo, si un &amp;aacute;rbol de trabajo vinculado se mueve a &lt;code&gt;/newpath/test-next&lt;/code&gt; y su archivo &lt;code&gt;.git&lt;/code&gt; apunta a &lt;code&gt;/path/main/.git/worktrees/test-next&lt;/code&gt; , entonces actualice &lt;code&gt;/path/main/.git/worktrees/test-next/gitdir&lt;/code&gt; para hacer referencia a &lt;code&gt;/newpath/test-next&lt;/code&gt; en su lugar.</target>
        </trans-unit>
        <trans-unit id="bb87bde3a880515ee52eb5a157ecf80cef103126" translate="yes" xml:space="preserve">
          <source>If you mistakenly drop or clear stash entries, they cannot be recovered through the normal safety mechanisms. However, you can try the following incantation to get a list of stash entries that are still in your repository, but not reachable any more:</source>
          <target state="translated">Si por error dejas caer o despejas las entradas del escondite,no se pueden recuperar a través de los mecanismos de seguridad normales.Sin embargo,puede intentar el siguiente conjuro para obtener una lista de las entradas de alijo que aún están en su depósito,pero que ya no se pueden alcanzar:</target>
        </trans-unit>
        <trans-unit id="110b0b8058519e9efd87b798163b83180b4fd090" translate="yes" xml:space="preserve">
          <source>If you need to add &lt;code&gt;Acked-by&lt;/code&gt; lines to, say, the last 10 commits (none of which is a merge), use this command:</source>
          <target state="translated">Si necesita agregar l&amp;iacute;neas &lt;code&gt;Acked-by&lt;/code&gt; a, digamos, las &amp;uacute;ltimas 10 confirmaciones (ninguna de las cuales es una combinaci&amp;oacute;n), use este comando:</target>
        </trans-unit>
        <trans-unit id="a06310bf48a43d3f06d75e4fe748345a055d13a9" translate="yes" xml:space="preserve">
          <source>If you need to amend commits from deeper in your history, you can use &lt;a href=&quot;#interactive-rebase&quot;&gt;interactive rebase&amp;rsquo;s &lt;code&gt;edit&lt;/code&gt; instruction&lt;/a&gt;.</source>
          <target state="translated">Si necesita modificar las confirmaciones m&amp;aacute;s profundas de su historial, puede utilizar &lt;a href=&quot;#interactive-rebase&quot;&gt;la instrucci&amp;oacute;n de &lt;code&gt;edit&lt;/code&gt; de rebase interactivo&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f26f13a2edb916f980bf0b233ef42611b499ae1c" translate="yes" xml:space="preserve">
          <source>If you need to make any further adjustments, do so now, and then add any newly modified content to the index. Finally, commit your changes with:</source>
          <target state="translated">Si necesita hacer más ajustes,hágalo ahora y luego agregue cualquier contenido recién modificado al índice.Finalmente,confirme sus cambios con:</target>
        </trans-unit>
        <trans-unit id="b7346c069533043ab7106064793cec780b496e9d" translate="yes" xml:space="preserve">
          <source>If you need to pass multiple options, separate them with a comma.</source>
          <target state="translated">Si necesitas pasar varias opciones,sepáralas con una coma.</target>
        </trans-unit>
        <trans-unit id="809b912a9ed5d5a0eab31e3007d95029a30a63c6" translate="yes" xml:space="preserve">
          <source>If you need to reorder or edit a number of commits in a branch, it may be easier to use &lt;code&gt;git rebase -i&lt;/code&gt;, which allows you to reorder and squash commits, as well as marking them for individual editing during the rebase. See &lt;a href=&quot;#interactive-rebase&quot;&gt;Using interactive rebases&lt;/a&gt; for details, and &lt;a href=&quot;#reordering-patch-series&quot;&gt;Reordering or selecting from a patch series&lt;/a&gt; for alternatives.</source>
          <target state="translated">Si necesita reordenar o editar una serie de confirmaciones en una rama, puede ser m&amp;aacute;s f&amp;aacute;cil usar &lt;code&gt;git rebase -i&lt;/code&gt; , que le permite reordenar y aplastar confirmaciones, as&amp;iacute; como marcarlas para su edici&amp;oacute;n individual durante la rebase. Consulte &lt;a href=&quot;#interactive-rebase&quot;&gt;Uso de rebases interactivas&lt;/a&gt; para obtener m&amp;aacute;s detalles y &lt;a href=&quot;#reordering-patch-series&quot;&gt;Reordenaci&amp;oacute;n o selecci&amp;oacute;n de una serie de parches&lt;/a&gt; para conocer las alternativas.</target>
        </trans-unit>
        <trans-unit id="653cbb8173c66cbe6d9c641e8756d2055e0c1628" translate="yes" xml:space="preserve">
          <source>If you never pushed anything out, just re-tag it. Use &quot;-f&quot; to replace the old one. And you&amp;rsquo;re done.</source>
          <target state="translated">Si nunca empuj&amp;oacute; nada, simplemente vuelva a etiquetarlo. Utilice &quot;-f&quot; para reemplazar el anterior. Y tu estas listo.</target>
        </trans-unit>
        <trans-unit id="e0169e9e6701b28da91f9800a1f0eacd543a0e6b" translate="yes" xml:space="preserve">
          <source>If you now continue development as usual, and eventually merge &lt;code&gt;topic&lt;/code&gt; to &lt;code&gt;subsystem&lt;/code&gt;, the commits from &lt;code&gt;subsystem&lt;/code&gt; will remain duplicated forever:</source>
          <target state="translated">Si ahora contin&amp;uacute;a el desarrollo como de costumbre y finalmente fusiona el &lt;code&gt;topic&lt;/code&gt; con el &lt;code&gt;subsystem&lt;/code&gt; , las confirmaciones del &lt;code&gt;subsystem&lt;/code&gt; permanecer&amp;aacute;n duplicadas para siempre:</target>
        </trans-unit>
        <trans-unit id="d9ba20830393f58c8170e264c4d66d9dd0605070" translate="yes" xml:space="preserve">
          <source>If you now run</source>
          <target state="translated">Si ahora corres</target>
        </trans-unit>
        <trans-unit id="ee95c7e5ff1bbdc349787f30139d15eef70dff52" translate="yes" xml:space="preserve">
          <source>If you only want to remove the local checkout of a submodule from your work tree without committing the removal, use &lt;a href=&quot;git-submodule&quot;&gt;git-submodule[1]&lt;/a&gt;&lt;code&gt;deinit&lt;/code&gt; instead. Also see &lt;a href=&quot;gitsubmodules&quot;&gt;gitsubmodules[7]&lt;/a&gt; for details on submodule removal.</source>
          <target state="translated">Si solo desea eliminar la verificaci&amp;oacute;n local de un subm&amp;oacute;dulo de su &amp;aacute;rbol de trabajo sin realizar la eliminaci&amp;oacute;n, use &lt;a href=&quot;git-submodule&quot;&gt;git-submodule [1] &lt;/a&gt; &lt;code&gt;deinit&lt;/code&gt; en su lugar. Tambi&amp;eacute;n vea &lt;a href=&quot;gitsubmodules&quot;&gt;gitsubmodules [7]&lt;/a&gt; para obtener detalles sobre la eliminaci&amp;oacute;n de subm&amp;oacute;dulos.</target>
        </trans-unit>
        <trans-unit id="de4ecb2fda4e4a17fa4230cd7b06e657b6ab1e40" translate="yes" xml:space="preserve">
          <source>If you plan to publish this repository to be accessed over http, you should do &lt;code&gt;mv my-git.git/hooks/post-update.sample
my-git.git/hooks/post-update&lt;/code&gt; at this point. This makes sure that every time you push into this repository, &lt;code&gt;git update-server-info&lt;/code&gt; is run.</source>
          <target state="translated">Si planea publicar este repositorio para acceder a &amp;eacute;l a trav&amp;eacute;s de http, debe hacer &lt;code&gt;mv my-git.git/hooks/post-update.sample my-git.git/hooks/post-update&lt;/code&gt; en este punto. Esto asegura que cada vez que ingrese a este repositorio, se ejecute &lt;code&gt;git update-server-info&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dce58b5a972f1c023066ee29ac3c991fde1e2420" translate="yes" xml:space="preserve">
          <source>If you present all of your changes as a single patch (or commit), they may find that it is too much to digest all at once.</source>
          <target state="translated">Si presenta todos sus cambios como un solo parche (o compromiso),pueden encontrar que es demasiado para digerirlo todo de una sola vez.</target>
        </trans-unit>
        <trans-unit id="6e4131986cf58f7abe3d9d87945a8e4a59143945" translate="yes" xml:space="preserve">
          <source>If you present them with the entire history of your work, complete with mistakes, corrections, and dead ends, they may be overwhelmed.</source>
          <target state="translated">Si les presentas la historia completa de tu trabajo,con errores,correcciones y callejones sin salida,pueden verse abrumados.</target>
        </trans-unit>
        <trans-unit id="21ee16e384bb8d43949dac71aebc6ab455b71a15" translate="yes" xml:space="preserve">
          <source>If you provide a &lt;code&gt;directory&lt;/code&gt;, the command is run inside it. If this directory does not exist, it will be created.</source>
          <target state="translated">Si proporciona un &lt;code&gt;directory&lt;/code&gt; , el comando se ejecuta dentro de &amp;eacute;l. Si este directorio no existe, se crear&amp;aacute;.</target>
        </trans-unit>
        <trans-unit id="e318df70fba90a3c817f7eb76621f705fc69949d" translate="yes" xml:space="preserve">
          <source>If you pushed your change to a branch whose name is different from the one you have locally, e.g.</source>
          <target state="translated">Si usted empujó su cambio a una rama cuyo nombre es diferente del que tiene localmente,por ejemplo.</target>
        </trans-unit>
        <trans-unit id="f36c21fb05ddb2d8eeea70a503cb3c797b4a7baa" translate="yes" xml:space="preserve">
          <source>If you really don&amp;rsquo;t want to clone it, for whatever reasons, check the following points instead (in this order). This is a very destructive approach, so &lt;strong&gt;make a backup&lt;/strong&gt; or go back to cloning it. You have been warned.</source>
          <target state="translated">Si realmente no desea clonarlo, por cualquier motivo, consulte los siguientes puntos (en este orden). Este es un enfoque muy destructivo, as&amp;iacute; que &lt;strong&gt;haga una copia de seguridad&lt;/strong&gt; o vuelva a clonarlo. Usted ha sido advertido.</target>
        </trans-unit>
        <trans-unit id="3a0d5ef629f0a421a47e2200b4c6f6985f396b8e" translate="yes" xml:space="preserve">
          <source>If you really want to remove a submodule from the repository and commit that use &lt;a href=&quot;git-rm&quot;&gt;git-rm[1]&lt;/a&gt; instead. See &lt;a href=&quot;gitsubmodules&quot;&gt;gitsubmodules[7]&lt;/a&gt; for removal options.</source>
          <target state="translated">Si realmente desea eliminar un subm&amp;oacute;dulo del repositorio y confirmarlo, use &lt;a href=&quot;git-rm&quot;&gt;git-rm [1] en su&lt;/a&gt; lugar. Consulte &lt;a href=&quot;gitsubmodules&quot;&gt;gitsubmodules [7]&lt;/a&gt; para conocer las opciones de eliminaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="a5e65b5631472cf01bf2ff6d1fb37eb4b5d6b41d" translate="yes" xml:space="preserve">
          <source>If you really want to use &lt;code&gt;konqueror&lt;/code&gt;, then you can use something like the following:</source>
          <target state="translated">Si realmente desea usar &lt;code&gt;konqueror&lt;/code&gt; , puede usar algo como lo siguiente:</target>
        </trans-unit>
        <trans-unit id="e3a8dad6f18366292640cec2d899866b39003a2b" translate="yes" xml:space="preserve">
          <source>If you receive such a patch series (as maintainer, or perhaps as a reader of the mailing list it was sent to), save the mails to files, create a new topic branch and use &lt;code&gt;git am&lt;/code&gt; to import the commits:</source>
          <target state="translated">Si recibe una serie de parches de este tipo (como mantenedor, o tal vez como lector de la lista de correo a la que se envi&amp;oacute;), guarde los correos en archivos, cree una nueva rama de tema y use &lt;code&gt;git am&lt;/code&gt; para importar las confirmaciones:</target>
        </trans-unit>
        <trans-unit id="8122cfb5e210d22279775f15b8524f8a454a6069" translate="yes" xml:space="preserve">
          <source>If you receive the SHA-1 name of a blob from one source, and its contents from another (possibly untrusted) source, you can still trust that those contents are correct as long as the SHA-1 name agrees. This is because the SHA-1 is designed so that it is infeasible to find different contents that produce the same hash.</source>
          <target state="translated">Si recibes el nombre SHA-1 de una mancha de una fuente,y su contenido de otra fuente (posiblemente no confiable),aún puedes confiar en que esos contenidos son correctos siempre y cuando el nombre SHA-1 esté de acuerdo.Esto se debe a que el SHA-1 está diseñado de tal manera que es inviable encontrar diferentes contenidos que produzcan el mismo hachís.</target>
        </trans-unit>
        <trans-unit id="72b668cfa18e4e3a824ca9d20a1fa4e3cde95d1f" translate="yes" xml:space="preserve">
          <source>If you recognize such corruption early you can easily fix it by setting the conversion type explicitly in .gitattributes. Right after committing you still have the original file in your work tree and this file is not yet corrupted. You can explicitly tell Git that this file is binary and Git will handle the file appropriately.</source>
          <target state="translated">Si reconoces esa corrupción a tiempo,puedes arreglarla fácilmente estableciendo el tipo de conversión explícitamente en .gitattributes.Inmediatamente después de la confirmación,todavía tienes el archivo original en tu árbol de trabajo y este archivo aún no está corrupto.Puedes decirle explícitamente a Git que este archivo es binario y Git lo manejará adecuadamente.</target>
        </trans-unit>
        <trans-unit id="6d44148625d48b9905fb64fc2d01c214d013573d" translate="yes" xml:space="preserve">
          <source>If you run &lt;code&gt;git branch&lt;/code&gt; at this point, you&amp;rsquo;ll see that Git has temporarily moved you in &quot;(no branch)&quot;. HEAD is now detached from any branch and points directly to a commit (with commit id 65934) that is reachable from &quot;master&quot; but not from v2.6.18. Compile and test it, and see whether it crashes. Assume it does crash. Then:</source>
          <target state="translated">Si ejecuta &lt;code&gt;git branch&lt;/code&gt; en este punto, ver&amp;aacute; que Git lo ha movido temporalmente a &quot;(sin rama)&quot;. HEAD ahora est&amp;aacute; separado de cualquier rama y apunta directamente a una confirmaci&amp;oacute;n (con la identificaci&amp;oacute;n de confirmaci&amp;oacute;n 65934) que es accesible desde &quot;master&quot; pero no desde v2.6.18. Comp&amp;iacute;lelo y pru&amp;eacute;belo, y vea si falla. Suponga que se estrella. Luego:</target>
        </trans-unit>
        <trans-unit id="e4f37857c4f0244dcc0891e65a70e27a5bbdffad" translate="yes" xml:space="preserve">
          <source>If you run &lt;code&gt;git fetch &amp;lt;remote&amp;gt;&lt;/code&gt; later, the remote-tracking branches for the named &lt;code&gt;&amp;lt;remote&amp;gt;&lt;/code&gt; will be updated.</source>
          <target state="translated">Si ejecuta &lt;code&gt;git fetch &amp;lt;remote&amp;gt;&lt;/code&gt; m&amp;aacute;s tarde, se actualizar&amp;aacute;n las ramas de seguimiento remoto para el &lt;code&gt;&amp;lt;remote&amp;gt;&lt;/code&gt; nombrado .</target>
        </trans-unit>
        <trans-unit id="086aebbf0140fb264a45c34927db290b089af7f6" translate="yes" xml:space="preserve">
          <source>If you run &lt;code&gt;git repack&lt;/code&gt; again at this point, it will say &quot;Nothing new to pack.&quot;. Once you continue your development and accumulate the changes, running &lt;code&gt;git repack&lt;/code&gt; again will create a new pack, that contains objects created since you packed your repository the last time. We recommend that you pack your project soon after the initial import (unless you are starting your project from scratch), and then run &lt;code&gt;git repack&lt;/code&gt; every once in a while, depending on how active your project is.</source>
          <target state="translated">Si ejecuta &lt;code&gt;git repack&lt;/code&gt; nuevamente en este punto, dir&amp;aacute; &quot;No hay nada nuevo que empaquetar&quot;. Una vez que contin&amp;uacute;e su desarrollo y acumule los cambios, ejecutar &lt;code&gt;git repack&lt;/code&gt; nuevamente crear&amp;aacute; un nuevo paquete, que contiene los objetos creados desde que empaquet&amp;oacute; su repositorio la &amp;uacute;ltima vez. Recomendamos que empaque su proyecto poco despu&amp;eacute;s de la importaci&amp;oacute;n inicial (a menos que est&amp;eacute; comenzando su proyecto desde cero), y luego ejecute &lt;code&gt;git repack&lt;/code&gt; de vez en cuando, dependiendo de qu&amp;eacute; tan activo sea su proyecto.</target>
        </trans-unit>
        <trans-unit id="f6784580fd898de2457fa8e4a33fffee5347973c" translate="yes" xml:space="preserve">
          <source>If you simply want to have CRLF line endings in your working directory regardless of the repository you are working with, you can set the config variable &quot;core.autocrlf&quot; without using any attributes.</source>
          <target state="translated">Si simplemente quiere tener terminaciones de líneas CRLF en su directorio de trabajo independientemente del repositorio con el que esté trabajando,puede establecer la variable de configuración &quot;core.autocrlf&quot; sin usar ningún atributo.</target>
        </trans-unit>
        <trans-unit id="7c25024f01247f9dfa8226991c206d71987ca030" translate="yes" xml:space="preserve">
          <source>If you suspect that any of these issues may apply to the repository you want to import, consider using cvs2git:</source>
          <target state="translated">Si sospecha que alguno de estos problemas puede aplicarse al repositorio que desea importar,considere la posibilidad de utilizar cvs2git:</target>
        </trans-unit>
        <trans-unit id="d4145f8caae501b7db828bb5aa5f527a21b88535" translate="yes" xml:space="preserve">
          <source>If you think you have found a git bug, you can start by exporting an anonymized stream of the whole repository:</source>
          <target state="translated">Si crees que has encontrado un git bug,puedes empezar por exportar un flujo anónimo de todo el repositorio:</target>
        </trans-unit>
        <trans-unit id="846aba2aee9d2174839c8e896f13afd75da487fc" translate="yes" xml:space="preserve">
          <source>If you tried a merge which resulted in complex conflicts and want to start over, you can recover with &lt;code&gt;git merge --abort&lt;/code&gt;.</source>
          <target state="translated">Si intent&amp;oacute; una fusi&amp;oacute;n que result&amp;oacute; en conflictos complejos y desea comenzar de nuevo, puede recuperar con &lt;code&gt;git merge --abort&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0e65bb746f0318eba11b3455708b3d4c243b8cb3" translate="yes" xml:space="preserve">
          <source>If you tried a pull which resulted in complex conflicts and would want to start over, you can recover with &lt;code&gt;git reset&lt;/code&gt;.</source>
          <target state="translated">Si prob&amp;oacute; una extracci&amp;oacute;n que result&amp;oacute; en conflictos complejos y desea comenzar de nuevo, puede recuperarse con &lt;code&gt;git reset&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a4f4230d5ba7e1273c96751869d78c8666680eb6" translate="yes" xml:space="preserve">
          <source>If you try and cheat and try to make git-filter-branch only work on files modified in a commit, then two things happen</source>
          <target state="translated">Si intentas engañar e intentas hacer que la rama de filtros git funcione sólo en los archivos modificados en una confirmación,entonces pasan dos cosas</target>
        </trans-unit>
        <trans-unit id="8c2ff328d40e63aa92549620e7b30dc7bd79b356" translate="yes" xml:space="preserve">
          <source>If you use any of the options marked &quot;Turns off &lt;code&gt;apply&lt;/code&gt;&quot; above, &lt;code&gt;git apply&lt;/code&gt; reads and outputs the requested information without actually applying the patch. Give this flag after those flags to also apply the patch.</source>
          <target state="translated">Si usa alguna de las opciones marcadas como &quot;Desactiva &lt;code&gt;apply&lt;/code&gt; &quot; arriba, &lt;code&gt;git apply&lt;/code&gt; lee y genera la informaci&amp;oacute;n solicitada sin aplicar realmente el parche. Pon esta bandera despu&amp;eacute;s de esas banderas para aplicar tambi&amp;eacute;n el parche.</target>
        </trans-unit>
        <trans-unit id="9ac6e5a034fc806d1c17415da5d8566070ff7060" translate="yes" xml:space="preserve">
          <source>If you use the rewrite rules from the example you &lt;strong&gt;might&lt;/strong&gt; also need something like the following in your gitweb configuration file (&lt;code&gt;/etc/gitweb.conf&lt;/code&gt; following example):</source>
          <target state="translated">Si usa las reglas de reescritura del ejemplo, es &lt;strong&gt;posible que&lt;/strong&gt; tambi&amp;eacute;n necesite algo como lo siguiente en su archivo de configuraci&amp;oacute;n de &lt;code&gt;/etc/gitweb.conf&lt;/code&gt; ( /etc/gitweb.conf siguiente ejemplo):</target>
        </trans-unit>
        <trans-unit id="7b6c2f4a6c5d4d8aeea38b5e0c4e8e111c81122f" translate="yes" xml:space="preserve">
          <source>If you want a shared repository, you will need to make a bare clone of the imported directory, as described above. Then treat the imported directory as another development clone for purposes of merging incremental imports.</source>
          <target state="translated">Si desea un repositorio compartido,tendrá que hacer un clon desnudo del directorio importado,como se ha descrito anteriormente.Luego trate el directorio importado como otro clon de desarrollo con el propósito de fusionar las importaciones incrementales.</target>
        </trans-unit>
        <trans-unit id="f7444f839f8aa37b3a95b6650647c55221c170f1" translate="yes" xml:space="preserve">
          <source>If you want command input to still be interpreted as usual by &lt;code&gt;git rev-parse&lt;/code&gt; before the output is shell quoted, see the &lt;code&gt;--sq&lt;/code&gt; option.</source>
          <target state="translated">Si desea que la entrada del comando a&amp;uacute;n se interprete como de costumbre por &lt;code&gt;git rev-parse&lt;/code&gt; antes de que se cite la salida, consulte la opci&amp;oacute;n &lt;code&gt;--sq&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="54d050e248b6c4afcd2cdb81603440db07ba11e1" translate="yes" xml:space="preserve">
          <source>If you want to break the dependency of a repository cloned with &lt;code&gt;--shared&lt;/code&gt; on its source repository, you can simply run &lt;code&gt;git repack -a&lt;/code&gt; to copy all objects from the source repository into a pack in the cloned repository.</source>
          <target state="translated">Si desea romper la dependencia de un repositorio clonado con &lt;code&gt;--shared&lt;/code&gt; en su repositorio de origen, simplemente puede ejecutar &lt;code&gt;git repack -a&lt;/code&gt; para copiar todos los objetos del repositorio de origen en un paquete en el repositorio clonado.</target>
        </trans-unit>
        <trans-unit id="175eedbbcb252ccb8b65afc8343c53ee6468a326" translate="yes" xml:space="preserve">
          <source>If you want to check out &lt;code&gt;all&lt;/code&gt; C source files out of the index, you can say</source>
          <target state="translated">Si desea verificar &lt;code&gt;all&lt;/code&gt; archivos fuente de C fuera del &amp;iacute;ndice, puede decir</target>
        </trans-unit>
        <trans-unit id="e8498bad4ba6680850d835a14e8199fc54c7601f" translate="yes" xml:space="preserve">
          <source>If you want to delete an entry for a multivar (like core.gitproxy above), you have to provide a regex matching the value of exactly one line.</source>
          <target state="translated">Si quieres borrar una entrada de un multivariante (como el core.gitproxy de arriba),tienes que proporcionar un regex que coincida con el valor de una línea exacta.</target>
        </trans-unit>
        <trans-unit id="b6ce9e2807ee6d14a7a74a4824bf5e00e758331b" translate="yes" xml:space="preserve">
          <source>If you want to enable (or disable) this feature, it is easier to use the &lt;code&gt;core.fsmonitor&lt;/code&gt; configuration variable (see &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;) than using the &lt;code&gt;--fsmonitor&lt;/code&gt; option to &lt;code&gt;git update-index&lt;/code&gt; in each repository, especially if you want to do so across all repositories you use, because you can set the configuration variable in your &lt;code&gt;$HOME/.gitconfig&lt;/code&gt; just once and have it affect all repositories you touch.</source>
          <target state="translated">Si desea habilitar (o deshabilitar) esta funci&amp;oacute;n, es m&amp;aacute;s f&amp;aacute;cil usar la variable de configuraci&amp;oacute;n &lt;code&gt;core.fsmonitor&lt;/code&gt; (ver &lt;a href=&quot;git-config&quot;&gt;git-config [1]&lt;/a&gt; ) que usar la opci&amp;oacute;n &lt;code&gt;--fsmonitor&lt;/code&gt; para &lt;code&gt;git update-index&lt;/code&gt; en cada repositorio, especialmente si desea hacerlo en todos los repositorios que usa, porque puede establecer la variable de configuraci&amp;oacute;n en su &lt;code&gt;$HOME/.gitconfig&lt;/code&gt; solo una vez y hacer que afecte a todos los repositorios que toque.</target>
        </trans-unit>
        <trans-unit id="fade353b5f9f7d0b204907810eaa983a2e094489" translate="yes" xml:space="preserve">
          <source>If you want to enable (or disable) this feature, it is easier to use the &lt;code&gt;core.untrackedCache&lt;/code&gt; configuration variable (see &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;) than using the &lt;code&gt;--untracked-cache&lt;/code&gt; option to &lt;code&gt;git update-index&lt;/code&gt; in each repository, especially if you want to do so across all repositories you use, because you can set the configuration variable to &lt;code&gt;true&lt;/code&gt; (or &lt;code&gt;false&lt;/code&gt;) in your &lt;code&gt;$HOME/.gitconfig&lt;/code&gt; just once and have it affect all repositories you touch.</source>
          <target state="translated">Si desea habilitar (o deshabilitar) esta funci&amp;oacute;n, es m&amp;aacute;s f&amp;aacute;cil usar la variable de configuraci&amp;oacute;n &lt;code&gt;core.untrackedCache&lt;/code&gt; (ver &lt;a href=&quot;git-config&quot;&gt;git-config [1]&lt;/a&gt; ) que usar la opci&amp;oacute;n &lt;code&gt;--untracked-cache&lt;/code&gt; para &lt;code&gt;git update-index&lt;/code&gt; en cada repositorio, especialmente si desea hacerlo en todos los repositorios que usa, porque puede establecer la variable de configuraci&amp;oacute;n en &lt;code&gt;true&lt;/code&gt; (o &lt;code&gt;false&lt;/code&gt; ) en su &lt;code&gt;$HOME/.gitconfig&lt;/code&gt; solo una vez y hacer que afecte a todos los repositorios que toque.</target>
        </trans-unit>
        <trans-unit id="58323cdd8a68e6e1cc6d62c47524db6593349b87" translate="yes" xml:space="preserve">
          <source>If you want to ensure that text files that any contributor introduces to the repository have their line endings normalized, you can set the &lt;code&gt;text&lt;/code&gt; attribute to &quot;auto&quot; for &lt;code&gt;all&lt;/code&gt; files.</source>
          <target state="translated">Si desea asegurarse de que los archivos de texto que cualquier colaborador introduzca en el repositorio tengan sus finales de l&amp;iacute;nea normalizados, puede establecer el atributo de &lt;code&gt;text&lt;/code&gt; o en &quot;auto&quot; para &lt;code&gt;all&lt;/code&gt; archivos.</target>
        </trans-unit>
        <trans-unit id="46aa6af5bcc60a63656632720781ded6cb9a0464" translate="yes" xml:space="preserve">
          <source>If you want to fold two or more commits into one, replace the command &quot;pick&quot; for the second and subsequent commits with &quot;squash&quot; or &quot;fixup&quot;. If the commits had different authors, the folded commit will be attributed to the author of the first commit. The suggested commit message for the folded commit is the concatenation of the commit messages of the first commit and of those with the &quot;squash&quot; command, but omits the commit messages of commits with the &quot;fixup&quot; command.</source>
          <target state="translated">Si quieres doblar dos o más confirmaciones en una sola,reemplaza el comando &quot;pick&quot; para la segunda y subsiguientes confirmaciones por &quot;squash&quot; o &quot;fixup&quot;.Si las confirmaciones tienen diferentes autores,la confirmación doblada se atribuirá al autor de la primera confirmación.El mensaje de confirmación sugerido para la confirmación plegada es la concatenación de los mensajes de confirmación de la primera confirmación y de los del comando &quot;squash&quot;,pero omite los mensajes de confirmación de las confirmaciones con el comando &quot;fixup&quot;.</target>
        </trans-unit>
        <trans-unit id="a1fc176bf758306e3705a3dd88ad77db4fb55698" translate="yes" xml:space="preserve">
          <source>If you want to have one URL for both gitweb and your &lt;code&gt;http://&lt;/code&gt; repositories, you can configure Apache like this:</source>
          <target state="translated">Si desea tener una URL tanto para gitweb como para sus repositorios &lt;code&gt;http://&lt;/code&gt; , puede configurar Apache de esta manera:</target>
        </trans-unit>
        <trans-unit id="23a694ff61b56e5a1054639701ce379b6eeb6564" translate="yes" xml:space="preserve">
          <source>If you want to know all the values for a multivar, do:</source>
          <target state="translated">Si quieres saber todos los valores de un multivariante,hazlo:</target>
        </trans-unit>
        <trans-unit id="be838b052e83d8fa0d4980781547923358bc58d3" translate="yes" xml:space="preserve">
          <source>If you want to make a change within a submodule and you have a detached head, then you should create or checkout a branch, make your changes, publish the change within the submodule, and then update the superproject to reference the new commit:</source>
          <target state="translated">Si quiere hacer un cambio dentro de un submódulo y tiene una cabeza separada,entonces debería crear o revisar una rama,hacer sus cambios,publicar el cambio dentro del submódulo,y luego actualizar el superproyecto para hacer referencia a la nueva confirmación:</target>
        </trans-unit>
        <trans-unit id="f02c3e1c88ba7fbd299965b88348f8af1bb2eec2" translate="yes" xml:space="preserve">
          <source>If you want to make sure that the output actually names an object in your object database and/or can be used as a specific type of object you require, you can add the &lt;code&gt;^{type}&lt;/code&gt; peeling operator to the parameter. For example, &lt;code&gt;git rev-parse &quot;$VAR^{commit}&quot;&lt;/code&gt; will make sure &lt;code&gt;$VAR&lt;/code&gt; names an existing object that is a commit-ish (i.e. a commit, or an annotated tag that points at a commit). To make sure that &lt;code&gt;$VAR&lt;/code&gt; names an existing object of any type, &lt;code&gt;git rev-parse &quot;$VAR^{object}&quot;&lt;/code&gt; can be used.</source>
          <target state="translated">Si desea asegurarse de que la salida realmente nombre un objeto en su base de datos de objetos y / o se puede usar como un tipo espec&amp;iacute;fico de objeto que necesita, puede agregar el operador de pelado &lt;code&gt;^{type}&lt;/code&gt; al par&amp;aacute;metro. Por ejemplo, &lt;code&gt;git rev-parse &quot;$VAR^{commit}&quot;&lt;/code&gt; se asegurar&amp;aacute; de que &lt;code&gt;$VAR&lt;/code&gt; nombre un objeto existente que sea un commit-ish (es decir, un commit o una etiqueta anotada que apunte a un commit). Para asegurarse de que &lt;code&gt;$VAR&lt;/code&gt; nombre un objeto existente de cualquier tipo, se puede usar &lt;code&gt;git rev-parse &quot;$VAR^{object}&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="136531f3c928e37ad60b2649b3285deac4e99b46" translate="yes" xml:space="preserve">
          <source>If you want to refer to a git refspec that has characters that are not allowed by CVS, you have two options. First, it may just work to supply the git refspec directly to the appropriate CVS -r argument; some CVS clients don&amp;rsquo;t seem to do much sanity checking of the argument. Second, if that fails, you can use a special character escape mechanism that only uses characters that are valid in CVS tags. A sequence of 4 or 5 characters of the form (underscore (&lt;code&gt;&quot;_&quot;&lt;/code&gt;), dash (&lt;code&gt;&quot;-&quot;&lt;/code&gt;), one or two characters, and dash (&lt;code&gt;&quot;-&quot;&lt;/code&gt;)) can encode various characters based on the one or two letters: &lt;code&gt;&quot;s&quot;&lt;/code&gt; for slash (&lt;code&gt;&quot;/&quot;&lt;/code&gt;), &lt;code&gt;&quot;p&quot;&lt;/code&gt; for period (&lt;code&gt;&quot;.&quot;&lt;/code&gt;), &lt;code&gt;&quot;u&quot;&lt;/code&gt; for underscore (&lt;code&gt;&quot;_&quot;&lt;/code&gt;), or two hexadecimal digits for any byte value at all (typically an ASCII number, or perhaps a part of a UTF-8 encoded character).</source>
          <target state="translated">Si desea hacer referencia a un git refspec que tiene caracteres que no est&amp;aacute;n permitidos por CVS, tiene dos opciones. En primer lugar, puede funcionar simplemente proporcionar git refspec directamente al argumento CVS -r apropiado; algunos clientes de CVS no parecen comprobar mucho la cordura del argumento. En segundo lugar, si eso falla, puede usar un mecanismo de escape de caracteres especial que solo usa caracteres que son v&amp;aacute;lidos en las etiquetas CVS. Una secuencia de 4 o 5 caracteres del formulario (gui&amp;oacute;n bajo ( &lt;code&gt;&quot;_&quot;&lt;/code&gt; ), gui&amp;oacute;n ( &lt;code&gt;&quot;-&quot;&lt;/code&gt; ), uno o dos caracteres y gui&amp;oacute;n ( &lt;code&gt;&quot;-&quot;&lt;/code&gt; )) puede codificar varios caracteres seg&amp;uacute;n una o dos letras: &lt;code&gt;&quot;s&quot;&lt;/code&gt; para barra ( &lt;code&gt;&quot;/&quot;&lt;/code&gt; ), &lt;code&gt;&quot;p&quot;&lt;/code&gt; para punto ( &lt;code&gt;&quot;.&quot;&lt;/code&gt; ), &lt;code&gt;&quot;u&quot;&lt;/code&gt; para subrayado ( &lt;code&gt;&quot;_&quot;&lt;/code&gt; ), o dos d&amp;iacute;gitos hexadecimales para cualquier valor de byte (normalmente un n&amp;uacute;mero ASCII, o quiz&amp;aacute;s una parte de un car&amp;aacute;cter codificado en UTF-8).</target>
        </trans-unit>
        <trans-unit id="e8beaf63d7e0d62995b4c7a9252b3f2ea0574fab" translate="yes" xml:space="preserve">
          <source>If you want to replace many blobs, trees or commits that are part of a string of commits, you may just want to create a replacement string of commits and then only replace the commit at the tip of the target string of commits with the commit at the tip of the replacement string of commits.</source>
          <target state="translated">Si quieres reemplazar muchos blobs,árboles o confirmaciones que son parte de una cadena de confirmaciones,puedes crear una cadena de confirmaciones de reemplazo y luego reemplazar la confirmación en la punta de la cadena de confirmaciones objetivo con la confirmación en la punta de la cadena de confirmaciones de reemplazo.</target>
        </trans-unit>
        <trans-unit id="44f075cf045ec7b6bbf9c6b54de29b3e2085d2d6" translate="yes" xml:space="preserve">
          <source>If you want to restore &lt;code&gt;all&lt;/code&gt; C source files to match the version in the index, you can say</source>
          <target state="translated">Si desea restaurar &lt;code&gt;all&lt;/code&gt; archivos fuente de C para que coincidan con la versi&amp;oacute;n en el &amp;iacute;ndice, puede decir</target>
        </trans-unit>
        <trans-unit id="7bbbea69a50b6a93a6b75d0ba68d2bc45319d47b" translate="yes" xml:space="preserve">
          <source>If you want to rewrite URLs for push only, you can create a configuration section of the form:</source>
          <target state="translated">Si quieres reescribir los URLs sólo para el push,puedes crear una sección de configuración del formulario:</target>
        </trans-unit>
        <trans-unit id="295a38729bbd2cc488fb271a44e4d101d6ee7a15" translate="yes" xml:space="preserve">
          <source>If you want to show differences between binary or specially-formatted blobs in your repository, you can choose to use either an external diff command, or to use textconv to convert them to a diff-able text format. Which method you choose depends on your exact situation.</source>
          <target state="translated">Si desea mostrar las diferencias entre los blobs binarios o con un formato especial en su repositorio,puede elegir entre utilizar un comando externo de diff,o utilizar textconv para convertirlos a un formato de texto diff-able.El método que elija dependerá de su situación exacta.</target>
        </trans-unit>
        <trans-unit id="e3f3cfd8a6d2a1c0d741f6415c0be4ad8848457f" translate="yes" xml:space="preserve">
          <source>If you want to show other people your bisection process, you can get a log using for example:</source>
          <target state="translated">Si quieres mostrar a otras personas tu proceso de bisección,puedes obtener un registro usando por ejemplo:</target>
        </trans-unit>
        <trans-unit id="07b554efbcde38cd3d8cb2b2cd3fe1b74a5f9d9d" translate="yes" xml:space="preserve">
          <source>If you want to start a disconnected history that records a set of paths that is totally different from the one of &lt;code&gt;&amp;lt;start_point&amp;gt;&lt;/code&gt;, then you should clear the index and the working tree right after creating the orphan branch by running &lt;code&gt;git rm -rf .&lt;/code&gt; from the top level of the working tree. Afterwards you will be ready to prepare your new files, repopulating the working tree, by copying them from elsewhere, extracting a tarball, etc.</source>
          <target state="translated">Si desea iniciar un historial desconectado que registre un conjunto de rutas que sea totalmente diferente al de &lt;code&gt;&amp;lt;start_point&amp;gt;&lt;/code&gt; , entonces debe borrar el &amp;iacute;ndice y el &amp;aacute;rbol de trabajo justo despu&amp;eacute;s de crear la rama hu&amp;eacute;rfana ejecutando &lt;code&gt;git rm -rf .&lt;/code&gt; desde el nivel superior del &amp;aacute;rbol de trabajo. Posteriormente estar&amp;aacute; listo para preparar sus nuevos archivos, repoblar el &amp;aacute;rbol de trabajo, copiarlos de otro lugar, extraer un tarball, etc.</target>
        </trans-unit>
        <trans-unit id="5dc24ba332edd3d8bebaa76b808aacd296106da2" translate="yes" xml:space="preserve">
          <source>If you want to start a new branch from a remote branch of the same name:</source>
          <target state="translated">Si quieres empezar una nueva sucursal desde una sucursal remota del mismo nombre:</target>
        </trans-unit>
        <trans-unit id="b533f775f69c9c29e40e15bb405c24bc01b04dac" translate="yes" xml:space="preserve">
          <source>If you want to use gitweb with several project roots you can edit your Apache virtual host and gitweb configuration files in the following way.</source>
          <target state="translated">Si quieres usar gitweb con varias raíces de proyecto puedes editar tu host virtual Apache y los archivos de configuración de gitweb de la siguiente manera.</target>
        </trans-unit>
        <trans-unit id="cced0d77bb2b4a5861e7555078781fd81234d732" translate="yes" xml:space="preserve">
          <source>If you want to, you can use &lt;code&gt;git cat-file&lt;/code&gt; to look at those objects, but you&amp;rsquo;ll have to use the object name, not the filename of the object:</source>
          <target state="translated">Si lo desea, puede usar &lt;code&gt;git cat-file&lt;/code&gt; para ver esos objetos, pero tendr&amp;aacute; que usar el nombre del objeto, no el nombre de archivo del objeto:</target>
        </trans-unit>
        <trans-unit id="9eff57ed3284da22d90930841774b80f0270e4be" translate="yes" xml:space="preserve">
          <source>If you wish the exclude patterns to affect only certain repositories (instead of every repository for a given project), you may instead put them in a file in your repository named &lt;code&gt;.git/info/exclude&lt;/code&gt;, or in any file specified by the &lt;code&gt;core.excludesFile&lt;/code&gt; configuration variable. Some Git commands can also take exclude patterns directly on the command line. See &lt;a href=&quot;gitignore&quot;&gt;gitignore[5]&lt;/a&gt; for the details.</source>
          <target state="translated">Si desea que los patrones de exclusi&amp;oacute;n afecten solo a ciertos repositorios (en lugar de a todos los repositorios de un proyecto determinado), puede colocarlos en un archivo en su repositorio llamado &lt;code&gt;.git/info/exclude&lt;/code&gt; , o en cualquier archivo especificado por el &lt;code&gt;core.excludesFile&lt;/code&gt; variable de configuraci&amp;oacute;n. Algunos comandos de Git tambi&amp;eacute;n pueden tomar patrones de exclusi&amp;oacute;n directamente en la l&amp;iacute;nea de comandos. Consulte &lt;a href=&quot;gitignore&quot;&gt;gitignore [5]&lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="f3a956a01313129dd0835296263e6883d7abec99" translate="yes" xml:space="preserve">
          <source>If you wish to affect only a single repository (i.e., to assign attributes to files that are particular to one user&amp;rsquo;s workflow for that repository), then attributes should be placed in the &lt;code&gt;$GIT_DIR/info/attributes&lt;/code&gt; file. Attributes which should be version-controlled and distributed to other repositories (i.e., attributes of interest to all users) should go into &lt;code&gt;.gitattributes&lt;/code&gt; files. Attributes that should affect all repositories for a single user should be placed in a file specified by the &lt;code&gt;core.attributesFile&lt;/code&gt; configuration option (see &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;). Its default value is $XDG_CONFIG_HOME/git/attributes. If $XDG_CONFIG_HOME is either not set or empty, $HOME/.config/git/attributes is used instead. Attributes for all users on a system should be placed in the &lt;code&gt;$(prefix)/etc/gitattributes&lt;/code&gt; file.</source>
          <target state="translated">Si desea afectar solo un repositorio (es decir, asignar atributos a archivos que son particulares del flujo de trabajo de un usuario para ese repositorio), entonces los atributos deben colocarse en el &lt;code&gt;$GIT_DIR/info/attributes&lt;/code&gt; . Los atributos que deben ser controlados por versi&amp;oacute;n y distribuidos a otros repositorios (es decir, atributos de inter&amp;eacute;s para todos los usuarios) deben ir en archivos &lt;code&gt;.gitattributes&lt;/code&gt; . Los atributos que deber&amp;iacute;an afectar a todos los repositorios para un solo usuario deben colocarse en un archivo especificado por la opci&amp;oacute;n de configuraci&amp;oacute;n &lt;code&gt;core.attributesFile&lt;/code&gt; (ver &lt;a href=&quot;git-config&quot;&gt;git-config [1]&lt;/a&gt;). Su valor predeterminado es $ XDG_CONFIG_HOME / git / attribute. Si $ XDG_CONFIG_HOME no est&amp;aacute; configurado o est&amp;aacute; vac&amp;iacute;o, se usa $ HOME / .config / git / attribute en su lugar. Los atributos de todos los usuarios de un sistema deben colocarse en el archivo &lt;code&gt;$(prefix)/etc/gitattributes&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8bef77486a59978a04a1c46b2c068b3863595296" translate="yes" xml:space="preserve">
          <source>If you work with other people, you will need commands listed in the &lt;a href=&quot;#PARTICIPANT&quot;&gt;Individual Developer (Participant)&lt;/a&gt; section as well.</source>
          <target state="translated">Si trabaja con otras personas, tambi&amp;eacute;n necesitar&amp;aacute; los comandos enumerados en la secci&amp;oacute;n &lt;a href=&quot;#PARTICIPANT&quot;&gt;Desarrollador individual (participante)&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4cb8198fe4b8e422fe561ded3cf681f52266950f" translate="yes" xml:space="preserve">
          <source>If you would like the daemon to exit early, forgetting all cached credentials before their timeout, you can issue an &lt;code&gt;exit&lt;/code&gt; action:</source>
          <target state="translated">Si desea que el demonio salga antes, olvidando todas las credenciales almacenadas en cach&amp;eacute; antes de que se agote el tiempo de espera, puede emitir una acci&amp;oacute;n de &lt;code&gt;exit&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="6fb92003fb885c97541d201047e1ea900190bac9" translate="yes" xml:space="preserve">
          <source>If you would like to use your own terms instead of &quot;bad&quot;/&quot;good&quot; or &quot;new&quot;/&quot;old&quot;, you can choose any names you like (except existing bisect subcommands like &lt;code&gt;reset&lt;/code&gt;, &lt;code&gt;start&lt;/code&gt;, &amp;hellip;​) by starting the bisection using</source>
          <target state="translated">Si desea utilizar sus propios t&amp;eacute;rminos en lugar de &quot;malo&quot; / &quot;bueno&quot; o &quot;nuevo&quot; / &quot;antiguo&quot;, puede elegir los nombres que desee (excepto los subcomandos bisectables existentes como &lt;code&gt;reset&lt;/code&gt; , &lt;code&gt;start&lt;/code&gt; , ...) iniciando el bisecci&amp;oacute;n usando</target>
        </trans-unit>
        <trans-unit id="ac9785fae40224d0d9d1a9569429bd18f0ceb511" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re releasing a new version of a software project, you may want to simultaneously make a changelog to include in the release announcement.</source>
          <target state="translated">Si est&amp;aacute; lanzando una nueva versi&amp;oacute;n de un proyecto de software, es posible que desee realizar simult&amp;aacute;neamente un registro de cambios para incluirlo en el anuncio de lanzamiento.</target>
        </trans-unit>
        <trans-unit id="6cd2cc907ee3e17f5caea471b5027cb72158e075" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;ve been committing small enough changes, you may now have a good shot at reconstructing the contents of the in-between state 4b9458b.</source>
          <target state="translated">Si ha realizado cambios lo suficientemente peque&amp;ntilde;os, es posible que ahora tenga una buena oportunidad de reconstruir el contenido del estado intermedio 4b9458b.</target>
        </trans-unit>
        <trans-unit id="5516e4c9c575f8921939c0e95aa6e39fac3c93e0" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;ve configured a web server that isn&amp;rsquo;t listed here for gitweb, please send in the instructions so they can be included in a future release.</source>
          <target state="translated">Si ha configurado un servidor web que no figura aqu&amp;iacute; para gitweb, env&amp;iacute;e las instrucciones para que puedan incluirse en una versi&amp;oacute;n futura.</target>
        </trans-unit>
        <trans-unit id="2ca9c9b64a14bae5a21173833d4a0e06ad289f34" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;ve messed up the working tree, but haven&amp;rsquo;t yet committed your mistake, you can return the entire working tree to the last committed state with</source>
          <target state="translated">Si ha estropeado el &amp;aacute;rbol de trabajo, pero a&amp;uacute;n no ha cometido su error, puede devolver todo el &amp;aacute;rbol de trabajo al &amp;uacute;ltimo estado comprometido con</target>
        </trans-unit>
        <trans-unit id="7bdd278937e1b543d6e4ef46f26f74578bcd1798" translate="yes" xml:space="preserve">
          <source>If your branch was based on &amp;lt;upstream&amp;gt; but &amp;lt;upstream&amp;gt; was rewound and your branch contains commits which were dropped, this option can be used with &lt;code&gt;--keep-base&lt;/code&gt; in order to drop those commits from your branch.</source>
          <target state="translated">Si su rama se bas&amp;oacute; en &amp;lt;upstream&amp;gt; pero &amp;lt;upstream&amp;gt; se rebobin&amp;oacute; y su rama contiene confirmaciones que se eliminaron, esta opci&amp;oacute;n se puede usar con &lt;code&gt;--keep-base&lt;/code&gt; para eliminar esas confirmaciones de su rama.</target>
        </trans-unit>
        <trans-unit id="862f720d820aceb82a46583ae7c2b519ed5f9115" translate="yes" xml:space="preserve">
          <source>If your editor or some other system is running &lt;code&gt;git fetch&lt;/code&gt; in the background for you a way to mitigate this is to simply set up another remote:</source>
          <target state="translated">Si su editor o alg&amp;uacute;n otro sistema est&amp;aacute; ejecutando &lt;code&gt;git fetch&lt;/code&gt; en segundo plano, una forma de mitigar esto es simplemente configurar otro control remoto:</target>
        </trans-unit>
        <trans-unit id="6fc3997d817725ac54010e2c723e5760c4e0b90b" translate="yes" xml:space="preserve">
          <source>If your repository contains one or more submodules, then those submodules will appear based on which you initialized with the &lt;code&gt;git submodule&lt;/code&gt; command. If your sparse-checkout patterns exclude an initialized submodule, then that submodule will still appear in your working directory.</source>
          <target state="translated">Si su repositorio contiene uno o m&amp;aacute;s subm&amp;oacute;dulos, esos subm&amp;oacute;dulos aparecer&amp;aacute;n seg&amp;uacute;n los que haya inicializado con el comando &lt;code&gt;git submodule&lt;/code&gt; . Si sus patrones de pago disperso excluyen un subm&amp;oacute;dulo inicializado, ese subm&amp;oacute;dulo seguir&amp;aacute; apareciendo en su directorio de trabajo.</target>
        </trans-unit>
        <trans-unit id="17a3911595f90d594aeea889e0f0755079e1efba" translate="yes" xml:space="preserve">
          <source>If, in the middle of a bisect session, you know that the suggested revision is not a good one to test (e.g. it fails to build and you know that the failure does not have anything to do with the bug you are chasing), you can manually select a nearby commit and test that one instead.</source>
          <target state="translated">Si,en medio de una sesión bisectriz,sabes que la revisión sugerida no es buena para probar (por ejemplo,falla al construir y sabes que el fallo no tiene nada que ver con el fallo que estás persiguiendo),puedes seleccionar manualmente una confirmación cercana y probar esa en su lugar.</target>
        </trans-unit>
        <trans-unit id="4eaf7ef623b220dfff5cf0aad12284c2791aab6b" translate="yes" xml:space="preserve">
          <source>Ignore carriage-return at the end of line when doing a comparison.</source>
          <target state="translated">Ignore el retorno del carro al final de la línea cuando haga una comparación.</target>
        </trans-unit>
        <trans-unit id="14129ef50a9ff92ecf5a9d9520de0a5438b9b27c" translate="yes" xml:space="preserve">
          <source>Ignore case differences between the patterns and the files.</source>
          <target state="translated">Ignoren las diferencias de los casos entre los patrones y los archivos.</target>
        </trans-unit>
        <trans-unit id="93adbe048de005f652abeded323ffca0e07802f9" translate="yes" xml:space="preserve">
          <source>Ignore changes in amount of whitespace. This ignores whitespace at line end, and considers all other sequences of one or more whitespace characters to be equivalent.</source>
          <target state="translated">Ignoren los cambios en la cantidad de espacio en blanco.Esto ignora los espacios en blanco al final de la línea,y considera que todas las demás secuencias de uno o más caracteres de espacios en blanco son equivalentes.</target>
        </trans-unit>
        <trans-unit id="dceba3e490b99e465dabc6c0a6eb46378a762d2c" translate="yes" xml:space="preserve">
          <source>Ignore changes in whitespace at EOL.</source>
          <target state="translated">Ignoren los cambios en el espacio blanco en EOL.</target>
        </trans-unit>
        <trans-unit id="0e8a5619a2125f597eccb060c4d8cfcacf8da768" translate="yes" xml:space="preserve">
          <source>Ignore changes made by the revision when assigning blame, as if the change never happened. Lines that were changed or added by an ignored commit will be blamed on the previous commit that changed that line or nearby lines. This option may be specified multiple times to ignore more than one revision. If the &lt;code&gt;blame.markIgnoredLines&lt;/code&gt; config option is set, then lines that were changed by an ignored commit and attributed to another commit will be marked with a &lt;code&gt;?&lt;/code&gt; in the blame output. If the &lt;code&gt;blame.markUnblamableLines&lt;/code&gt; config option is set, then those lines touched by an ignored commit that we could not attribute to another revision are marked with a &lt;code&gt;*&lt;/code&gt;.</source>
          <target state="translated">Ignore los cambios realizados por la revisi&amp;oacute;n al asignar la culpa, como si el cambio nunca hubiera sucedido. Las l&amp;iacute;neas que fueron cambiadas o agregadas por una confirmaci&amp;oacute;n ignorada ser&amp;aacute;n atribuidas a la confirmaci&amp;oacute;n anterior que cambi&amp;oacute; esa l&amp;iacute;nea o l&amp;iacute;neas cercanas. Esta opci&amp;oacute;n se puede especificar varias veces para ignorar m&amp;aacute;s de una revisi&amp;oacute;n. Si se establece la opci&amp;oacute;n de configuraci&amp;oacute;n &lt;code&gt;blame.markIgnoredLines&lt;/code&gt; , las l&amp;iacute;neas que fueron cambiadas por una confirmaci&amp;oacute;n ignorada y atribuidas a otra confirmaci&amp;oacute;n se marcar&amp;aacute;n con un &lt;code&gt;?&lt;/code&gt; en la salida de la culpa. Si se establece la opci&amp;oacute;n de configuraci&amp;oacute;n &lt;code&gt;blame.markUnblamableLines&lt;/code&gt; , entonces esas l&amp;iacute;neas tocadas por una confirmaci&amp;oacute;n ignorada que no pudimos atribuir a otra revisi&amp;oacute;n se marcan con un &lt;code&gt;*&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="847c383f096e8b2857c23f7df697a300205d1cde" translate="yes" xml:space="preserve">
          <source>Ignore changes to submodules in the diff generation. &amp;lt;when&amp;gt; can be either &quot;none&quot;, &quot;untracked&quot;, &quot;dirty&quot; or &quot;all&quot;, which is the default. Using &quot;none&quot; will consider the submodule modified when it either contains untracked or modified files or its HEAD differs from the commit recorded in the superproject and can be used to override any settings of the &lt;code&gt;ignore&lt;/code&gt; option in &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt; or &lt;a href=&quot;gitmodules&quot;&gt;gitmodules[5]&lt;/a&gt;. When &quot;untracked&quot; is used submodules are not considered dirty when they only contain untracked content (but they are still scanned for modified content). Using &quot;dirty&quot; ignores all changes to the work tree of submodules, only changes to the commits stored in the superproject are shown (this was the behavior until 1.7.0). Using &quot;all&quot; hides all changes to submodules.</source>
          <target state="translated">Ignore los cambios en los subm&amp;oacute;dulos en la generaci&amp;oacute;n de diferencias. &amp;lt;cuando&amp;gt; puede ser &quot;ninguno&quot;, &quot;sin seguimiento&quot;, &quot;sucio&quot; o &quot;todos&quot;, que es el valor predeterminado. El uso de &quot;none&quot; considerar&amp;aacute; el subm&amp;oacute;dulo modificado cuando contiene archivos modificados o sin seguimiento, o su HEAD difiere de la confirmaci&amp;oacute;n registrada en el superproyecto y se puede usar para anular cualquier configuraci&amp;oacute;n de la opci&amp;oacute;n &lt;code&gt;ignore&lt;/code&gt; en &lt;a href=&quot;git-config&quot;&gt;git-config [1]&lt;/a&gt; o &lt;a href=&quot;gitmodules&quot;&gt;gitmodules [ 5]&lt;/a&gt; . Cuando se usa &quot;sin seguimiento&quot;, los subm&amp;oacute;dulos no se consideran sucios cuando solo contienen contenido sin seguimiento (pero a&amp;uacute;n se analizan en busca de contenido modificado). El uso de &quot;sucio&quot; ignora todos los cambios en el &amp;aacute;rbol de trabajo de los subm&amp;oacute;dulos,solo se muestran los cambios en las confirmaciones almacenadas en el superproyecto (este era el comportamiento hasta 1.7.0). El uso de &quot;todos&quot; oculta todos los cambios en los subm&amp;oacute;dulos.</target>
        </trans-unit>
        <trans-unit id="0a92f8e585ade182f513a5692eb0bb44a7e837dd" translate="yes" xml:space="preserve">
          <source>Ignore changes to submodules when looking for changes. &amp;lt;when&amp;gt; can be either &quot;none&quot;, &quot;untracked&quot;, &quot;dirty&quot; or &quot;all&quot;, which is the default. Using &quot;none&quot; will consider the submodule modified when it either contains untracked or modified files or its HEAD differs from the commit recorded in the superproject and can be used to override any settings of the &lt;code&gt;ignore&lt;/code&gt; option in &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt; or &lt;a href=&quot;gitmodules&quot;&gt;gitmodules[5]&lt;/a&gt;. When &quot;untracked&quot; is used submodules are not considered dirty when they only contain untracked content (but they are still scanned for modified content). Using &quot;dirty&quot; ignores all changes to the work tree of submodules, only changes to the commits stored in the superproject are shown (this was the behavior before 1.7.0). Using &quot;all&quot; hides all changes to submodules (and suppresses the output of submodule summaries when the config option &lt;code&gt;status.submoduleSummary&lt;/code&gt; is set).</source>
          <target state="translated">Ignore los cambios en los subm&amp;oacute;dulos cuando busque cambios. &amp;lt;cuando&amp;gt; puede ser &quot;ninguno&quot;, &quot;sin seguimiento&quot;, &quot;sucio&quot; o &quot;todos&quot;, que es el valor predeterminado. El uso de &quot;none&quot; considerar&amp;aacute; el subm&amp;oacute;dulo modificado cuando contiene archivos modificados o sin seguimiento, o su HEAD difiere de la confirmaci&amp;oacute;n registrada en el superproyecto y se puede usar para anular cualquier configuraci&amp;oacute;n de la opci&amp;oacute;n &lt;code&gt;ignore&lt;/code&gt; en &lt;a href=&quot;git-config&quot;&gt;git-config [1]&lt;/a&gt; o &lt;a href=&quot;gitmodules&quot;&gt;gitmodules [ 5]&lt;/a&gt;. Cuando se usa &quot;sin seguimiento&quot;, los subm&amp;oacute;dulos no se consideran sucios cuando solo contienen contenido sin seguimiento (pero a&amp;uacute;n se analizan en busca de contenido modificado). El uso de &quot;sucio&quot; ignora todos los cambios en el &amp;aacute;rbol de trabajo de los subm&amp;oacute;dulos, solo se muestran los cambios en las confirmaciones almacenadas en el superproyecto (este era el comportamiento antes de 1.7.0). El uso de &quot;todos&quot; oculta todos los cambios en los subm&amp;oacute;dulos (y suprime la salida de los res&amp;uacute;menes de los subm&amp;oacute;dulos cuando se establece la opci&amp;oacute;n de configuraci&amp;oacute;n &lt;code&gt;status.submoduleSummary&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="f616e5a6b317fb9674ab4a6ecd11655583864222" translate="yes" xml:space="preserve">
          <source>Ignore changes whose lines are all blank.</source>
          <target state="translated">Ignora los cambios cuyas líneas están en blanco.</target>
        </trans-unit>
        <trans-unit id="6b93913a06aa23ba136e18a208983b558968a818" translate="yes" xml:space="preserve">
          <source>Ignore refs for branches or tags matching the Perl regular expression. A &quot;negative look-ahead assertion&quot; like &lt;code&gt;^refs/remotes/origin/(?!tags/wanted-tag|wanted-branch).*$&lt;/code&gt; can be used to allow only certain refs.</source>
          <target state="translated">Ignore las referencias de ramas o etiquetas que coincidan con la expresi&amp;oacute;n regular de Perl. Una &quot;aserci&amp;oacute;n de anticipaci&amp;oacute;n negativa&quot; como &lt;code&gt;^refs/remotes/origin/(?!tags/wanted-tag|wanted-branch).*$&lt;/code&gt; Puede usarse para permitir solo ciertas referencias.</target>
        </trans-unit>
        <trans-unit id="cca615474ea8523b5665d433104181e17b949af0" translate="yes" xml:space="preserve">
          <source>Ignore revisions listed in &lt;code&gt;file&lt;/code&gt;, which must be in the same format as an &lt;code&gt;fsck.skipList&lt;/code&gt;. This option may be repeated, and these files will be processed after any files specified with the &lt;code&gt;blame.ignoreRevsFile&lt;/code&gt; config option. An empty file name, &lt;code&gt;&quot;&quot;&lt;/code&gt;, will clear the list of revs from previously processed files.</source>
          <target state="translated">Ignore las revisiones enumeradas en el &lt;code&gt;file&lt;/code&gt; , que debe tener el mismo formato que &lt;code&gt;fsck.skipList&lt;/code&gt; . Esta opci&amp;oacute;n puede repetirse y estos archivos se procesar&amp;aacute;n despu&amp;eacute;s de cualquier archivo especificado con la opci&amp;oacute;n de configuraci&amp;oacute;n &lt;code&gt;blame.ignoreRevsFile&lt;/code&gt; . Un nombre de archivo vac&amp;iacute;o, &lt;code&gt;&quot;&quot;&lt;/code&gt; , borrar&amp;aacute; la lista de revoluciones de archivos procesados ​​previamente.</target>
        </trans-unit>
        <trans-unit id="0cee361918756e813fbfde1e81b931c608ea0bab" translate="yes" xml:space="preserve">
          <source>Ignore revisions listed in the file, one unabbreviated object name per line, in &lt;a href=&quot;git-blame&quot;&gt;git-blame[1]&lt;/a&gt;. Whitespace and comments beginning with &lt;code&gt;#&lt;/code&gt; are ignored. This option may be repeated multiple times. Empty file names will reset the list of ignored revisions. This option will be handled before the command line option &lt;code&gt;--ignore-revs-file&lt;/code&gt;.</source>
          <target state="translated">Ignore las revisiones enumeradas en el archivo, un nombre de objeto no abreviado por l&amp;iacute;nea, en &lt;a href=&quot;git-blame&quot;&gt;git-blame [1]&lt;/a&gt; . Los espacios en blanco y los comentarios que comienzan con &lt;code&gt;#&lt;/code&gt; se ignoran. Esta opci&amp;oacute;n puede repetirse varias veces. Los nombres de archivo vac&amp;iacute;os restablecer&amp;aacute;n la lista de revisiones ignoradas. Esta opci&amp;oacute;n se manejar&amp;aacute; antes que la opci&amp;oacute;n de l&amp;iacute;nea de comando &lt;code&gt;--ignore-revs-file&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ecf2829d6b1d696605f65878628b97d7705cf8bc" translate="yes" xml:space="preserve">
          <source>Ignore scissors lines (see &lt;a href=&quot;git-mailinfo&quot;&gt;git-mailinfo[1]&lt;/a&gt;).</source>
          <target state="translated">Ignore las l&amp;iacute;neas de las tijeras (consulte &lt;a href=&quot;git-mailinfo&quot;&gt;git-mailinfo [1]&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="2348d1bd6f42459d3ee1b173782de699bb2835d4" translate="yes" xml:space="preserve">
          <source>Ignore scissors lines. Useful for overriding mailinfo.scissors settings.</source>
          <target state="translated">Ignora las líneas de tijera.Útil para anular la configuración de mailinfo.tijeras.</target>
        </trans-unit>
        <trans-unit id="b8c0493eeab50cd9f84c9bb7fb54695bfa5cd858" translate="yes" xml:space="preserve">
          <source>Ignore whitespace when comparing lines. This ignores differences even if one line has whitespace where the other line has none.</source>
          <target state="translated">Ignoren los espacios en blanco cuando comparen las líneas.Esto ignora las diferencias,incluso si una línea tiene espacios en blanco donde la otra no tiene ninguno.</target>
        </trans-unit>
        <trans-unit id="f41139f9e81b5ab318787773cf3063813dbcefdd" translate="yes" xml:space="preserve">
          <source>Ignore whitespace when comparing the parent&amp;rsquo;s version and the child&amp;rsquo;s to find where the lines came from.</source>
          <target state="translated">Ignore los espacios en blanco al comparar la versi&amp;oacute;n de los padres y la del ni&amp;ntilde;o para averiguar de d&amp;oacute;nde provienen las l&amp;iacute;neas.</target>
        </trans-unit>
        <trans-unit id="67259bef7d0f56e262c4cda325ae4b91dc800c88" translate="yes" xml:space="preserve">
          <source>Ignored files are not listed, unless &lt;code&gt;--ignored&lt;/code&gt; option is in effect, in which case &lt;code&gt;XY&lt;/code&gt; are &lt;code&gt;!!&lt;/code&gt;.</source>
          <target state="translated">Ficheros ignorados no se enumeran, a menos que &lt;code&gt;--ignored&lt;/code&gt; opci&amp;oacute;n es, en efecto, en cuyo caso &lt;code&gt;XY&lt;/code&gt; son &lt;code&gt;!!&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5a64e868764637ce6fa403b78bdbf74f10990fd5" translate="yes" xml:space="preserve">
          <source>Ignored items have the following format:</source>
          <target state="translated">Los elementos ignorados tienen el siguiente formato:</target>
        </trans-unit>
        <trans-unit id="fe5aad4a58f02d9cd03afd86649692db9ed515bd" translate="yes" xml:space="preserve">
          <source>Ignores missing files during a --refresh</source>
          <target state="translated">Ignora los archivos perdidos durante un --refresco</target>
        </trans-unit>
        <trans-unit id="87a5b84b90eaf9c6a4ea4cf7776f8cdbe987e92e" translate="yes" xml:space="preserve">
          <source>Ignoring files</source>
          <target state="translated">Ignorar los archivos</target>
        </trans-unit>
        <trans-unit id="d83f269a97cfa5cb2870ace661718351e9ef1d6f" translate="yes" xml:space="preserve">
          <source>Imagine that on top of the public commit P, you applied well-known patches X, Y and Z from somebody else, and then built your three-patch series A, B, C, the history would be like:</source>
          <target state="translated">Imagina que encima del compromiso público P,aplicaste los conocidos parches X,Y y Z de otra persona,y luego construiste tus series de tres parches A,B,C,la historia sería como:</target>
        </trans-unit>
        <trans-unit id="220433d0f0fcbc1334d4126616d73a1ad095f039" translate="yes" xml:space="preserve">
          <source>Imagine that you built your work on your &lt;code&gt;master&lt;/code&gt; branch on top of the &lt;code&gt;v1.0&lt;/code&gt; release, and want it to be integrated to the project. First you push that change to your public repository for others to see:</source>
          <target state="translated">Imagina que construiste tu trabajo en tu rama &lt;code&gt;master&lt;/code&gt; sobre la versi&amp;oacute;n &lt;code&gt;v1.0&lt;/code&gt; y quieres que se integre al proyecto. Primero, env&amp;iacute;a ese cambio a su repositorio p&amp;uacute;blico para que otros lo vean:</target>
        </trans-unit>
        <trans-unit id="d92dfaf42e4c06410357fc423fdf173e48ba5a6c" translate="yes" xml:space="preserve">
          <source>Imagine that you have to rebase what you have already published. You will have to bypass the &quot;must fast-forward&quot; rule in order to replace the history you originally published with the rebased history. If somebody else built on top of your original history while you are rebasing, the tip of the branch at the remote may advance with her commit, and blindly pushing with &lt;code&gt;--force&lt;/code&gt; will lose her work.</source>
          <target state="translated">Imagina que tienes que reajustar lo que ya has publicado. Deber&amp;aacute; omitir la regla &quot;debe avanzar r&amp;aacute;pidamente&quot; para reemplazar el historial que public&amp;oacute; originalmente con el historial modificado. Si alguien m&amp;aacute;s construy&amp;oacute; sobre su historial original mientras est&amp;aacute; reajustando, la punta de la rama en el control remoto puede avanzar con su compromiso, y presionar ciegamente con &lt;code&gt;--force&lt;/code&gt; perder&amp;aacute; su trabajo.</target>
        </trans-unit>
        <trans-unit id="8a9ff0ad91f2190aebd8f7874a38eff49a81d587" translate="yes" xml:space="preserve">
          <source>Imagine this history:</source>
          <target state="translated">Imagina esta historia:</target>
        </trans-unit>
        <trans-unit id="db144a77867a22b1db2aa0f495d3082ced7cfb54" translate="yes" xml:space="preserve">
          <source>Imitate &lt;code&gt;git clone&lt;/code&gt; but track only selected branches</source>
          <target state="translated">Imita el &lt;code&gt;git clone&lt;/code&gt; pero rastrea solo las ramas seleccionadas</target>
        </trans-unit>
        <trans-unit id="4a694f013e1a15bee19331c0c7b9e3ce34840db9" translate="yes" xml:space="preserve">
          <source>Imitate a CVS server. See &lt;a href=&quot;git-cvsserver&quot;&gt;git-cvsserver[1]&lt;/a&gt;.</source>
          <target state="translated">Imita un servidor CVS. Consulte &lt;a href=&quot;git-cvsserver&quot;&gt;git-cvsserver [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="81ebe12aa11cc123fdb7f8c88133ffaff6347b23" translate="yes" xml:space="preserve">
          <source>Implementation details</source>
          <target state="translated">Detalles de la implementación</target>
        </trans-unit>
        <trans-unit id="f1c03dca591efe03ac168cd03c30c9d29e88acc3" translate="yes" xml:space="preserve">
          <source>Import Now, Repack Later</source>
          <target state="translated">Importar ahora,reempaquetar después</target>
        </trans-unit>
        <trans-unit id="b3e1462f677f3a661ca64753ac202708178b3a16" translate="yes" xml:space="preserve">
          <source>Import a GNU Arch repository into Git</source>
          <target state="translated">Importar un repositorio Arch de GNU en Git</target>
        </trans-unit>
        <trans-unit id="502aadd2b2c2382144812aea24a52e335147d4a4" translate="yes" xml:space="preserve">
          <source>Import all changes from both named depot paths into a single repository. Only files below these directories are included. There is not a subdirectory in Git for each &quot;proj1&quot; and &quot;proj2&quot;. You must use the &lt;code&gt;--destination&lt;/code&gt; option when specifying more than one depot path. The revision specifier must be specified identically on each depot path. If there are files in the depot paths with the same name, the path with the most recently updated version of the file is the one that appears in Git.</source>
          <target state="translated">Importe todos los cambios de ambas rutas de dep&amp;oacute;sito con nombre en un &amp;uacute;nico repositorio. Solo se incluyen los archivos debajo de estos directorios. No hay un subdirectorio en Git para cada &quot;proj1&quot; y &quot;proj2&quot;. Debe utilizar la opci&amp;oacute;n &lt;code&gt;--destination&lt;/code&gt; al especificar m&amp;aacute;s de una ruta de dep&amp;oacute;sito. El especificador de revisi&amp;oacute;n debe especificarse de forma id&amp;eacute;ntica en cada ruta de dep&amp;oacute;sito. Si hay archivos en las rutas del dep&amp;oacute;sito con el mismo nombre, la ruta con la versi&amp;oacute;n actualizada m&amp;aacute;s recientemente del archivo es la que aparece en Git.</target>
        </trans-unit>
        <trans-unit id="90051e560d673faccfb0bfe61644ca104b05b719" translate="yes" xml:space="preserve">
          <source>Import all commits, including recent ones. cvsimport by default skips commits that have a timestamp less than 10 minutes ago.</source>
          <target state="translated">Importar todas las confirmaciones,incluyendo las recientes.cvsimport por defecto salta las confirmaciones que tienen una marca de tiempo de menos de 10 minutos.</target>
        </trans-unit>
        <trans-unit id="3ffbc41d8e969bcf6a3014a353f6e7a2bfd3e3ba" translate="yes" xml:space="preserve">
          <source>Import at most &lt;code&gt;n&lt;/code&gt; changes, rather than the entire range of changes included in the given revision specifier. A typical usage would be use &lt;code&gt;@all&lt;/code&gt; as the revision specifier, but then to use &lt;code&gt;--max-changes 1000&lt;/code&gt; to import only the last 1000 revisions rather than the entire revision history.</source>
          <target state="translated">Importe como m&amp;aacute;ximo &lt;code&gt;n&lt;/code&gt; cambios, en lugar de todo el rango de cambios incluidos en el especificador de revisi&amp;oacute;n dado. Un uso t&amp;iacute;pico ser&amp;iacute;a usar &lt;code&gt;@all&lt;/code&gt; como el especificador de revisi&amp;oacute;n, pero luego usar &lt;code&gt;--max-changes 1000&lt;/code&gt; para importar solo las &amp;uacute;ltimas 1000 revisiones en lugar de todo el historial de revisiones.</target>
        </trans-unit>
        <trans-unit id="a203d27ce8c09d6ab5f978bc976ed19c7da8bd29" translate="yes" xml:space="preserve">
          <source>Import changes into &amp;lt;ref&amp;gt; instead of refs/remotes/p4/master. If &amp;lt;ref&amp;gt; starts with refs/, it is used as is. Otherwise, if it does not start with p4/, that prefix is added.</source>
          <target state="translated">Importe los cambios a &amp;lt;ref&amp;gt; en lugar de refs / remotes / p4 / master. Si &amp;lt;ref&amp;gt; comienza con refs /, se usa tal cual. De lo contrario, si no comienza con p4 /, se agrega ese prefijo.</target>
        </trans-unit>
        <trans-unit id="3446130415616c26cfbd9b0cb3b27c636fdfb1f4" translate="yes" xml:space="preserve">
          <source>Import exactly the p4 change numbers listed in &lt;code&gt;file&lt;/code&gt;, one per line. Normally, &lt;code&gt;git p4&lt;/code&gt; inspects the current p4 repository state and detects the changes it should import.</source>
          <target state="translated">Importe exactamente los n&amp;uacute;meros de cambio p4 enumerados en el &lt;code&gt;file&lt;/code&gt; , uno por l&amp;iacute;nea. Normalmente, &lt;code&gt;git p4&lt;/code&gt; inspecciona el estado actual del repositorio p4 y detecta los cambios que deber&amp;iacute;a importar.</target>
        </trans-unit>
        <trans-unit id="051514630860e82d8e6dfeb8000cb04203f0530f" translate="yes" xml:space="preserve">
          <source>Import from and submit to Perforce repositories</source>
          <target state="translated">Importar de los depósitos de Perforce y presentarlos a ellos</target>
        </trans-unit>
        <trans-unit id="bc1da86269dd0fa043570d9e0331c263ee1c8e9b" translate="yes" xml:space="preserve">
          <source>Import labels from p4 into Git.</source>
          <target state="translated">Importar etiquetas de p4 a Git.</target>
        </trans-unit>
        <trans-unit id="01c4fe3eff92a8abc6c7acba932cff943343d8ce" translate="yes" xml:space="preserve">
          <source>Import one commit for each change in the history of that depot path.</source>
          <target state="translated">Importa un compromiso por cada cambio en la historia de la ruta de ese depósito.</target>
        </trans-unit>
        <trans-unit id="5fa6a825ca52ecc53990e4e3e6add862904fa4f4" translate="yes" xml:space="preserve">
          <source>Import one commit with all files in the &lt;code&gt;#head&lt;/code&gt; change under that tree.</source>
          <target state="translated">Importe una confirmaci&amp;oacute;n con todos los archivos en el cambio &lt;code&gt;#head&lt;/code&gt; debajo de ese &amp;aacute;rbol.</target>
        </trans-unit>
        <trans-unit id="1a475e0c7f94606844ba9fa0d34742cd54c3d13c" translate="yes" xml:space="preserve">
          <source>Import only changes 1 through 6.</source>
          <target state="translated">La importación sólo cambia del 1 al 6.</target>
        </trans-unit>
        <trans-unit id="e9848e9219c243527c0682e352e98364329421b1" translate="yes" xml:space="preserve">
          <source>Import p4 labels into git, as per --import-labels.</source>
          <target state="translated">Importar etiquetas p4 en el git,como en las etiquetas de importación.</target>
        </trans-unit>
        <trans-unit id="34d234038bf4e799d075c2933026167918f64329" translate="yes" xml:space="preserve">
          <source>Import p4 labels.</source>
          <target state="translated">Importar etiquetas p4.</target>
        </trans-unit>
        <trans-unit id="2f4ea105dee6a1ad94ce6623f490fbb875775ee0" translate="yes" xml:space="preserve">
          <source>Import-only: don&amp;rsquo;t perform a checkout after importing. This option ensures the working directory and index remain untouched and will not create them if they do not exist.</source>
          <target state="translated">Solo importaci&amp;oacute;n: no realice un pago despu&amp;eacute;s de la importaci&amp;oacute;n. Esta opci&amp;oacute;n asegura que el directorio de trabajo y el &amp;iacute;ndice permanezcan intactos y no los crear&amp;aacute; si no existen.</target>
        </trans-unit>
        <trans-unit id="4b6d6a30150a506f9b79caf45da5aecb76b0018e" translate="yes" xml:space="preserve">
          <source>Important</source>
          <target state="translated">Important</target>
        </trans-unit>
        <trans-unit id="a64c4afd3bd1cef7955450469801cfbdf061341b" translate="yes" xml:space="preserve">
          <source>Important note! If you have any local changes in these branches, then this merge will create a commit object in the history (with no local changes Git will simply do a &quot;fast-forward&quot; merge). Many people dislike the &quot;noise&quot; that this creates in the Linux history, so you should avoid doing this capriciously in the &lt;code&gt;release&lt;/code&gt; branch, as these noisy commits will become part of the permanent history when you ask Linus to pull from the release branch.</source>
          <target state="translated">&amp;iexcl;Nota IMPORTANTE! Si tiene cambios locales en estas ramas, esta combinaci&amp;oacute;n crear&amp;aacute; un objeto de confirmaci&amp;oacute;n en el historial (sin cambios locales, Git simplemente har&amp;aacute; una combinaci&amp;oacute;n de &quot;avance r&amp;aacute;pido&quot;). A muchas personas no les gusta el &quot;ruido&quot; que esto crea en la historia de Linux, por lo que debe evitar hacer esto caprichosamente en la rama de &lt;code&gt;release&lt;/code&gt; , ya que estas confirmaciones ruidosas se convertir&amp;aacute;n en parte del historial permanente cuando le pida a Linus que extraiga de la rama de lanzamiento.</target>
        </trans-unit>
        <trans-unit id="a87b614cdbaa5301ddda5b9a1cda5205ccdf1bbc" translate="yes" xml:space="preserve">
          <source>Importing a cvs archive</source>
          <target state="translated">Importar un archivo de cvs</target>
        </trans-unit>
        <trans-unit id="3e30801aed656938780d8d09defb05967bf70053" translate="yes" xml:space="preserve">
          <source>Importing a new project</source>
          <target state="translated">Importar un nuevo proyecto</target>
        </trans-unit>
        <trans-unit id="7d3eb76e15d3e80f60fde0cbe9f4a9a66f1cc724" translate="yes" xml:space="preserve">
          <source>Importing or exporting patches:</source>
          <target state="translated">Importar o exportar parches:</target>
        </trans-unit>
        <trans-unit id="8c866a3a4bff8b0052306000b7abfebb33a38b38" translate="yes" xml:space="preserve">
          <source>Importing patches to a project</source>
          <target state="translated">Importar parches a un proyecto</target>
        </trans-unit>
        <trans-unit id="19051f1cf9bd70907beeecdf5147851f44537c38" translate="yes" xml:space="preserve">
          <source>Importing these tags as-is in Git is impossible without making at least one commit which &amp;ldquo;fixes up&amp;rdquo; the files to match the content of the tag. Use fast-import&amp;rsquo;s &lt;code&gt;reset&lt;/code&gt; command to reset a dummy branch outside of your normal branch space to the base commit for the tag, then commit one or more file fixup commits, and finally tag the dummy branch.</source>
          <target state="translated">Importar estas etiquetas como est&amp;aacute;n en Git es imposible sin realizar al menos una confirmaci&amp;oacute;n que &quot;arregle&quot; los archivos para que coincidan con el contenido de la etiqueta. Use el comando &lt;code&gt;reset&lt;/code&gt; de fast-import para restablecer una rama ficticia fuera de su espacio de rama normal a la confirmaci&amp;oacute;n base para la etiqueta, luego confirme una o m&amp;aacute;s confirmaciones de reparaci&amp;oacute;n de archivos y finalmente etiquete la rama ficticia.</target>
        </trans-unit>
        <trans-unit id="ffa5110d0a0de3d5244ac22023669387afe15c4d" translate="yes" xml:space="preserve">
          <source>Imports a CVS repository into Git. It will either create a new repository, or incrementally import into an existing one.</source>
          <target state="translated">Importa un depósito de CVS en Git.Creará un nuevo repositorio,o lo importará de forma incremental a uno ya existente.</target>
        </trans-unit>
        <trans-unit id="189a5fab4172fe96418112b3abf1f29736c5a78f" translate="yes" xml:space="preserve">
          <source>Imports a project from one or more GNU Arch repositories. It will follow branches and repositories within the namespaces defined by the &amp;lt;archive/branch&amp;gt; parameters supplied. If it cannot find the remote branch a merge comes from it will just import it as a regular commit. If it can find it, it will mark it as a merge whenever possible (see discussion below).</source>
          <target state="translated">Importa un proyecto de uno o m&amp;aacute;s repositorios de GNU Arch. Seguir&amp;aacute; las ramas y repositorios dentro de los espacios de nombres definidos por los par&amp;aacute;metros &amp;lt;archive / branch&amp;gt; proporcionados. Si no puede encontrar la rama remota de la que proviene una fusi&amp;oacute;n, simplemente la importar&amp;aacute; como una confirmaci&amp;oacute;n normal. Si puede encontrarlo, lo marcar&amp;aacute; como una combinaci&amp;oacute;n siempre que sea posible (consulte la discusi&amp;oacute;n a continuaci&amp;oacute;n).</target>
        </trans-unit>
        <trans-unit id="0e7ba011d44c49f30a4b102d2d50cfa93397d28b" translate="yes" xml:space="preserve">
          <source>Imports the full contents of the head revision from the given p4 depot path into a single commit in the Git branch &lt;code&gt;refs/remotes/p4/master&lt;/code&gt;.</source>
          <target state="translated">Importa el contenido completo de la revisi&amp;oacute;n principal de la ruta del dep&amp;oacute;sito p4 dada en una &amp;uacute;nica confirmaci&amp;oacute;n en la rama de Git &lt;code&gt;refs/remotes/p4/master&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bc75793944c924c387fa08f2263917093a9e6ee9" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;#def_SCM&quot;&gt;SCM&lt;/a&gt; jargon, &quot;cherry pick&quot; means to choose a subset of changes out of a series of changes (typically commits) and record them as a new series of changes on top of a different codebase. In Git, this is performed by the &quot;git cherry-pick&quot; command to extract the change introduced by an existing &lt;a href=&quot;#def_commit&quot;&gt;commit&lt;/a&gt; and to record it based on the tip of the current &lt;a href=&quot;#def_branch&quot;&gt;branch&lt;/a&gt; as a new commit.</source>
          <target state="translated">En la jerga de &lt;a href=&quot;#def_SCM&quot;&gt;SCM&lt;/a&gt; , &quot;selecci&amp;oacute;n selectiva&quot; significa elegir un subconjunto de cambios de una serie de cambios (normalmente confirmados) y registrarlos como una nueva serie de cambios sobre un c&amp;oacute;digo base diferente. En Git, esto se realiza mediante el comando &quot;git cherry-pick&quot; para extraer el cambio introducido por una &lt;a href=&quot;#def_commit&quot;&gt;confirmaci&amp;oacute;n&lt;/a&gt; existente y registrarlo bas&amp;aacute;ndose en la punta de la &lt;a href=&quot;#def_branch&quot;&gt;rama&lt;/a&gt; actual como una nueva confirmaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="5a7b7bab83d67b10ed8bbe7275df22f645616a7a" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;--parseopt&lt;/code&gt; mode, &lt;code&gt;git rev-parse&lt;/code&gt; helps massaging options to bring to shell scripts the same facilities C builtins have. It works as an option normalizer (e.g. splits single switches aggregate values), a bit like &lt;code&gt;getopt(1)&lt;/code&gt; does.</source>
          <target state="translated">En el modo &lt;code&gt;--parseopt&lt;/code&gt; , &lt;code&gt;git rev-parse&lt;/code&gt; ayuda a las opciones de masaje a llevar a los scripts de shell las mismas facilidades que tienen los builtins de C. Funciona como un normalizador de opciones (por ejemplo, divide valores agregados de conmutadores individuales), un poco como lo hace &lt;code&gt;getopt(1)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a61808962b5b6bb1a272b1dd2c4e90c87c42eb63" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;--sq-quote&lt;/code&gt; mode, &lt;code&gt;git rev-parse&lt;/code&gt; echoes on the standard output a single line suitable for &lt;code&gt;sh(1)&lt;/code&gt;&lt;code&gt;eval&lt;/code&gt;. This line is made by normalizing the arguments following &lt;code&gt;--sq-quote&lt;/code&gt;. Nothing other than quoting the arguments is done.</source>
          <target state="translated">En el modo &lt;code&gt;--sq-quote&lt;/code&gt; , &lt;code&gt;git rev-parse&lt;/code&gt; hace eco en la salida est&amp;aacute;ndar de una sola l&amp;iacute;nea adecuada para &lt;code&gt;sh(1)&lt;/code&gt; &lt;code&gt;eval&lt;/code&gt; . Esta l&amp;iacute;nea se &lt;code&gt;--sq-quote&lt;/code&gt; normalizando los argumentos que siguen a --sq-quote . No se hace nada m&amp;aacute;s que citar los argumentos.</target>
        </trans-unit>
        <trans-unit id="02025b63af6480e186ac72d3a5a618d5536d1d9c" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;--stdin&lt;/code&gt; mode, take lines in the format</source>
          <target state="translated">En el modo &lt;code&gt;--stdin&lt;/code&gt; , tome l&amp;iacute;neas en el formato</target>
        </trans-unit>
        <trans-unit id="46fb44ff2c3ae3502717728ebf0f15532f206b66" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;A&lt;/code&gt;, &lt;code&gt;foo&lt;/code&gt; contains just &amp;ldquo;foo&amp;rdquo;.</source>
          <target state="translated">En &lt;code&gt;A&lt;/code&gt; , &lt;code&gt;foo&lt;/code&gt; contiene solo &quot;foo&quot;.</target>
        </trans-unit>
        <trans-unit id="0e95077ff33e18325bb9215a9cc5764269fc90de" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;dbDriver&lt;/code&gt; and &lt;code&gt;dbUser&lt;/code&gt; you can use the following variables:</source>
          <target state="translated">En &lt;code&gt;dbDriver&lt;/code&gt; y &lt;code&gt;dbUser&lt;/code&gt; puede utilizar las siguientes variables:</target>
        </trans-unit>
        <trans-unit id="6c351c60eb0e6d6c6a7b2ff86bb73c9f63bc0dc3" translate="yes" xml:space="preserve">
          <source>In Git 1.7.0 or later, to cancel a conflicting merge, use &lt;code&gt;git reset --merge&lt;/code&gt;. &lt;strong&gt;Warning&lt;/strong&gt;: In older versions of Git, running &lt;code&gt;git pull&lt;/code&gt; with uncommitted changes is discouraged: while possible, it leaves you in a state that may be hard to back out of in the case of a conflict.</source>
          <target state="translated">En Git 1.7.0 o posterior, para cancelar una fusi&amp;oacute;n conflictiva, use &lt;code&gt;git reset --merge&lt;/code&gt; . &lt;strong&gt;Advertencia&lt;/strong&gt; : en versiones anteriores de Git, no se &lt;code&gt;git pull&lt;/code&gt; ejecutar git pull con cambios no confirmados: si bien es posible, lo deja en un estado del que puede ser dif&amp;iacute;cil retroceder en caso de conflicto.</target>
        </trans-unit>
        <trans-unit id="e5fbbb479d61fa23b446f30021dbc9109422a0ad" translate="yes" xml:space="preserve">
          <source>In Git like in many other Version Control Systems (VCS), the different states of the data that is managed by the system are called commits. And, as VCS are mostly used to manage software source code, sometimes &quot;interesting&quot; changes of behavior in the software are introduced in some commits.</source>
          <target state="translated">En Git,como en muchos otros sistemas de control de versiones (VCS),los diferentes estados de los datos que gestiona el sistema se denominan &quot;commits&quot;.Y,como los VCS se utilizan principalmente para gestionar el código fuente del software,a veces se introducen cambios &quot;interesantes&quot; de comportamiento en el software en algunas confirmaciones.</target>
        </trans-unit>
        <trans-unit id="8b9196b57e8598c90aa9a79e64e11940ec4bed09" translate="yes" xml:space="preserve">
          <source>In Git&amp;rsquo;s context, synonym for &lt;a href=&quot;#def_object_name&quot;&gt;object name&lt;/a&gt;.</source>
          <target state="translated">En el contexto de Git, sin&amp;oacute;nimo de &lt;a href=&quot;#def_object_name&quot;&gt;nombre de objeto&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="644d8f376b3ac284860f081b25e96334d4db2911" translate="yes" xml:space="preserve">
          <source>In Git, there are two kinds of tags, a &quot;light&quot; one, and an &quot;annotated tag&quot;.</source>
          <target state="translated">En Git,hay dos tipos de etiquetas,una &quot;ligera&quot; y otra &quot;anotada&quot;.</target>
        </trans-unit>
        <trans-unit id="1e877f57bcce771b4a2551649d22c402a8ae8603" translate="yes" xml:space="preserve">
          <source>In SVN, it is possible (though discouraged) to commit changes to a tag (because a tag is just a directory copy, thus technically the same as a branch). When cloning an SVN repository, &lt;code&gt;git svn&lt;/code&gt; cannot know if such a commit to a tag will happen in the future. Thus it acts conservatively and imports all SVN tags as branches, prefixing the tag name with &lt;code&gt;tags/&lt;/code&gt;.</source>
          <target state="translated">En SVN, es posible (aunque desaconsejado) realizar cambios en una etiqueta (porque una etiqueta es solo una copia de directorio, por lo que t&amp;eacute;cnicamente es lo mismo que una rama). Al clonar un repositorio SVN, &lt;code&gt;git svn&lt;/code&gt; no puede saber si tal compromiso con una etiqueta ocurrir&amp;aacute; en el futuro. Por lo tanto, act&amp;uacute;a de manera conservadora e importa todas las etiquetas SVN como ramas, prefijando el nombre de la etiqueta con &lt;code&gt;tags/&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c215580302a5f52c2e27d45d0d7c1d84a4eccdbe" translate="yes" xml:space="preserve">
          <source>In Thunderbird 2: Edit..Preferences..Composition, wrap plain text messages at 0</source>
          <target state="translated">En Thunderbird 2:Editar...Preferencias...Composición,envolver los mensajes de texto plano en 0</target>
        </trans-unit>
        <trans-unit id="f440374532f0b3d43494a1b042e56f8d4bce5f5d" translate="yes" xml:space="preserve">
          <source>In Thunderbird 3: Edit..Preferences..Advanced..Config Editor. Search for &quot;mail.wrap_long_lines&quot;. Toggle it to make sure it is set to &lt;code&gt;false&lt;/code&gt;. Also, search for &quot;mailnews.wraplength&quot; and set the value to 0.</source>
          <target state="translated">En Thunderbird 3: Edit..Preferences..Advanced..Config Editor. Busque &quot;mail.wrap_long_lines&quot;. Act&amp;iacute;valo para asegurarte de que est&amp;eacute; configurado como &lt;code&gt;false&lt;/code&gt; . Adem&amp;aacute;s, busque &quot;mailnews.wraplength&quot; y establezca el valor en 0.</target>
        </trans-unit>
        <trans-unit id="17583a69f7262368825714769d6089546a690b45" translate="yes" xml:space="preserve">
          <source>In a fast-forward update from A to B, the set of commits that the original commit A built on top of is a subset of the commits the new commit B builds on top of. Hence, it does not lose any history.</source>
          <target state="translated">En una actualización rápida de A a B,el conjunto de confirmaciones que la confirmación original de A construyó encima es un subconjunto de las confirmaciones que la nueva confirmación de B construye encima.Por lo tanto,no pierde ninguna historia.</target>
        </trans-unit>
        <trans-unit id="3d5b5c31f19f75af08174ee7bc83bae8bb6f0e50" translate="yes" xml:space="preserve">
          <source>In a normal repository, this tends to work automatically. The objects are mostly reachable from the branches and tags, and that&amp;rsquo;s what clients fetch. Any deltas we find on the server are likely to be between objects the client has or will have.</source>
          <target state="translated">En un repositorio normal, esto tiende a funcionar autom&amp;aacute;ticamente. La mayor&amp;iacute;a de los objetos son accesibles desde las ramas y etiquetas, y eso es lo que buscan los clientes. Es probable que cualquier delta que encontremos en el servidor se encuentre entre los objetos que el cliente tiene o tendr&amp;aacute;.</target>
        </trans-unit>
        <trans-unit id="566e8925a0c194716258bb9a397f522567172cf6" translate="yes" xml:space="preserve">
          <source>In a situation where topic consisted of three commits, and the maintainer applied two of them, the situation might look like:</source>
          <target state="translated">En una situación en la que el tema consistiera en tres compromisos,y el mantenedor aplicara dos de ellos,la situación podría parecerse:</target>
        </trans-unit>
        <trans-unit id="ee8b5fc930f29435d4aa076d7196ceac4e277fb2" translate="yes" xml:space="preserve">
          <source>In a workflow employing relatively long lived topic branches, the developer sometimes needs to resolve the same conflicts over and over again until the topic branches are done (either merged to the &quot;release&quot; branch, or sent out and accepted upstream).</source>
          <target state="translated">En un flujo de trabajo que emplea ramas temáticas de relativa larga duración,el desarrollador a veces necesita resolver los mismos conflictos una y otra vez hasta que se terminan las ramas temáticas (ya sea fusionadas con la rama de &quot;liberación&quot;,o enviadas y aceptadas aguas arriba).</target>
        </trans-unit>
        <trans-unit id="f7c91952cc20e93e498fb039cc3dfb4469b10f04" translate="yes" xml:space="preserve">
          <source>In addition there are a number of other widely deployed hosting, browsing and reviewing solutions such as:</source>
          <target state="translated">Además,existen otras soluciones de hospedaje,navegación y revisión ampliamente utilizadas,tales como:</target>
        </trans-unit>
        <trans-unit id="666628046a18a0e7af967b1de7c1a7d7baa813ae" translate="yes" xml:space="preserve">
          <source>In addition to &lt;code&gt;--full-index&lt;/code&gt;, output a binary diff that can be applied with &lt;code&gt;git-apply&lt;/code&gt;. Implies &lt;code&gt;--patch&lt;/code&gt;.</source>
          <target state="translated">Adem&amp;aacute;s de &lt;code&gt;--full-index&lt;/code&gt; , genera una diferencia binaria que se puede aplicar con &lt;code&gt;git-apply&lt;/code&gt; . Implica - &lt;code&gt;--patch&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3f6c767f6bc5922d93e508ae1661b26c77720a8f" translate="yes" xml:space="preserve">
          <source>In addition to &lt;code&gt;-M&lt;/code&gt;, detect lines moved or copied from other files that were modified in the same commit. This is useful when you reorganize your program and move code around across files. When this option is given twice, the command additionally looks for copies from other files in the commit that creates the file. When this option is given three times, the command additionally looks for copies from other files in any commit.</source>
          <target state="translated">Adem&amp;aacute;s de &lt;code&gt;-M&lt;/code&gt; , detecta l&amp;iacute;neas movidas o copiadas de otros archivos que fueron modificados en la misma confirmaci&amp;oacute;n. Esto es &amp;uacute;til cuando reorganiza su programa y mueve c&amp;oacute;digo entre archivos. Cuando esta opci&amp;oacute;n se da dos veces, el comando busca adem&amp;aacute;s copias de otros archivos en la confirmaci&amp;oacute;n que crea el archivo. Cuando se da esta opci&amp;oacute;n tres veces, el comando busca adem&amp;aacute;s copias de otros archivos en cualquier confirmaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="1888d5f31940dfed593ca4ff2d62ba84db0ce760" translate="yes" xml:space="preserve">
          <source>In addition to &lt;code&gt;.gitattributes&lt;/code&gt; (per-directory) and &lt;code&gt;.git/info/attributes&lt;/code&gt;, Git looks into this file for attributes (see &lt;a href=&quot;gitattributes&quot;&gt;gitattributes[5]&lt;/a&gt;). Path expansions are made the same way as for &lt;code&gt;core.excludesFile&lt;/code&gt;. Its default value is &lt;code&gt;$XDG_CONFIG_HOME/git/attributes&lt;/code&gt;. If &lt;code&gt;$XDG_CONFIG_HOME&lt;/code&gt; is either not set or empty, &lt;code&gt;$HOME/.config/git/attributes&lt;/code&gt; is used instead.</source>
          <target state="translated">Adem&amp;aacute;s de &lt;code&gt;.gitattributes&lt;/code&gt; (por directorio) y &lt;code&gt;.git/info/attributes&lt;/code&gt; , Git busca atributos en este archivo (ver &lt;a href=&quot;gitattributes&quot;&gt;gitattributes [5]&lt;/a&gt; ). Las expansiones de ruta se realizan de la misma manera que para &lt;code&gt;core.excludesFile&lt;/code&gt; . Su valor predeterminado es &lt;code&gt;$XDG_CONFIG_HOME/git/attributes&lt;/code&gt; . Si &lt;code&gt;$XDG_CONFIG_HOME&lt;/code&gt; no est&amp;aacute; configurado o est&amp;aacute; vac&amp;iacute;o, se usa &lt;code&gt;$HOME/.config/git/attributes&lt;/code&gt; su lugar.</target>
        </trans-unit>
        <trans-unit id="a80ff33db6a243344cb7df3dd9b8d8d41e916e5f" translate="yes" xml:space="preserve">
          <source>In addition to HEAD, there are several other special names for commits:</source>
          <target state="translated">Además de CABEZA,hay otros nombres especiales para las comisiones:</target>
        </trans-unit>
        <trans-unit id="3d952784176d6003ec5b2f9f790384bd9b8c8247" translate="yes" xml:space="preserve">
          <source>In addition to being the staging area for new commits, the index file is also populated from the object database when checking out a branch, and is used to hold the trees involved in a merge operation. See &lt;a href=&quot;gitcore-tutorial&quot;&gt;gitcore-tutorial[7]&lt;/a&gt; and the relevant man pages for details.</source>
          <target state="translated">Adem&amp;aacute;s de ser el &amp;aacute;rea de preparaci&amp;oacute;n para nuevas confirmaciones, el archivo de &amp;iacute;ndice tambi&amp;eacute;n se completa desde la base de datos de objetos cuando se extrae una rama y se usa para contener los &amp;aacute;rboles involucrados en una operaci&amp;oacute;n de fusi&amp;oacute;n. Consulte &lt;a href=&quot;gitcore-tutorial&quot;&gt;gitcore-tutorial [7]&lt;/a&gt; y las p&amp;aacute;ginas de manual correspondientes para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="e26ec25b7f02c15aecd179e2dad4bd1f6afe8d5c" translate="yes" xml:space="preserve">
          <source>In addition to branch names, populate the log message with at most the specified number of one-line descriptions from the actual commits that are being merged. Defaults to false, and true is a synonym for 20.</source>
          <target state="translated">Además de los nombres de las ramas,rellene el mensaje de registro con,como máximo,el número especificado de descripciones de una línea de las confirmaciones reales que se están fusionando.Por defecto es falso,y verdadero es sinónimo de 20.</target>
        </trans-unit>
        <trans-unit id="c5e07d7771d3e15091a04a68ed9a697dc979376c" translate="yes" xml:space="preserve">
          <source>In addition to branch names, populate the log message with one-line descriptions from at most &amp;lt;n&amp;gt; actual commits that are being merged. See also &lt;a href=&quot;git-fmt-merge-msg&quot;&gt;git-fmt-merge-msg[1]&lt;/a&gt;.</source>
          <target state="translated">Adem&amp;aacute;s de los nombres de las sucursales, complete el mensaje de registro con descripciones de una l&amp;iacute;nea de como m&amp;aacute;ximo &amp;lt;n&amp;gt; confirmaciones reales que se est&amp;aacute;n fusionando. Consulte tambi&amp;eacute;n &lt;a href=&quot;git-fmt-merge-msg&quot;&gt;git-fmt-merge-msg [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="53e8184a4fded8ffd5d3887baaffe37015550f76" translate="yes" xml:space="preserve">
          <source>In addition to branch names, populate the log message with one-line descriptions from the actual commits that are being merged. At most &amp;lt;n&amp;gt; commits from each merge parent will be used (20 if &amp;lt;n&amp;gt; is omitted). This overrides the &lt;code&gt;merge.log&lt;/code&gt; configuration variable.</source>
          <target state="translated">Adem&amp;aacute;s de los nombres de las sucursales, complete el mensaje de registro con descripciones de una l&amp;iacute;nea de las confirmaciones reales que se est&amp;aacute;n fusionando. Se utilizar&amp;aacute;n como m&amp;aacute;ximo &amp;lt;n&amp;gt; confirmaciones de cada padre de fusi&amp;oacute;n (20 si se omite &amp;lt;n&amp;gt;). Esto anula la variable de configuraci&amp;oacute;n &lt;code&gt;merge.log&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6235bcb46867554949f149e203ea63eff52ea516" translate="yes" xml:space="preserve">
          <source>In addition to branch names, populate the log message with the branch description text associated with them. Defaults to false.</source>
          <target state="translated">Además de los nombres de las ramas,rellene el mensaje de registro con el texto de descripción de la rama asociado a ellas.Por defecto es falso.</target>
        </trans-unit>
        <trans-unit id="f62e3d2f843321847fb42ac94f40312c54d52ccf" translate="yes" xml:space="preserve">
          <source>In addition to labelling blobs and commits with mark ids, also label tags. This is useful in conjunction with &lt;code&gt;--export-marks&lt;/code&gt; and &lt;code&gt;--import-marks&lt;/code&gt;, and is also useful (and necessary) for exporting of nested tags. It does not hurt other cases and would be the default, but many fast-import frontends are not prepared to accept tags with mark identifiers.</source>
          <target state="translated">Adem&amp;aacute;s de etiquetar blobs y confirmaciones con identificadores de marca, tambi&amp;eacute;n etiquete etiquetas. Esto es &amp;uacute;til junto con &lt;code&gt;--export-marks&lt;/code&gt; y &lt;code&gt;--import-marks&lt;/code&gt; , y tambi&amp;eacute;n es &amp;uacute;til (y necesario) para exportar etiquetas anidadas. No afecta a otros casos y ser&amp;iacute;a el predeterminado, pero muchas interfaces de importaci&amp;oacute;n r&amp;aacute;pida no est&amp;aacute;n preparadas para aceptar etiquetas con identificadores de marca.</target>
        </trans-unit>
        <trans-unit id="22782295e6ea8ee2d620246684c55c016d61141f" translate="yes" xml:space="preserve">
          <source>In addition to objects reachable from any of our references, keep objects reachable from listed &amp;lt;head&amp;gt;s.</source>
          <target state="translated">Adem&amp;aacute;s de los objetos accesibles desde cualquiera de nuestras referencias, mantenga los objetos accesibles desde los &amp;lt;head&amp;gt; listados.</target>
        </trans-unit>
        <trans-unit id="99c28f63ba36fb0fcaa38897708f95d9a693e369" translate="yes" xml:space="preserve">
          <source>In addition to saving you keystrokes, &lt;code&gt;git pull&lt;/code&gt; also helps you by producing a default commit message documenting the branch and repository that you pulled from.</source>
          <target state="translated">Adem&amp;aacute;s de ahorrarte las pulsaciones de teclas, &lt;code&gt;git pull&lt;/code&gt; tambi&amp;eacute;n te ayuda al producir un mensaje de confirmaci&amp;oacute;n predeterminado que documente la rama y el repositorio del que extrajiste.</target>
        </trans-unit>
        <trans-unit id="7129d0d8ea665296c3d9391d29a173f1ab2fc5f1" translate="yes" xml:space="preserve">
          <source>In addition to searching in the tracked files in the working tree, search also in untracked files.</source>
          <target state="translated">Además de buscar en los archivos rastreados en el árbol de trabajo,busca también en los archivos no rastreados.</target>
        </trans-unit>
        <trans-unit id="d5b7aa3ae2fa07bc2a7838db49f832f9fd332a95" translate="yes" xml:space="preserve">
          <source>In addition to the &lt;code&gt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&lt;/code&gt;, &lt;code&gt;=======&lt;/code&gt;, and &lt;code&gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&lt;/code&gt; markers, it uses another &lt;code&gt;|||||||&lt;/code&gt; marker that is followed by the original text. You can tell that the original just stated a fact, and your side simply gave in to that statement and gave up, while the other side tried to have a more positive attitude. You can sometimes come up with a better resolution by viewing the original.</source>
          <target state="translated">Adem&amp;aacute;s de los &lt;code&gt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&lt;/code&gt; , &lt;code&gt;=======&lt;/code&gt; y &lt;code&gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&lt;/code&gt; , utiliza otro &lt;code&gt;|||||||&lt;/code&gt; marcador que va seguido del texto original. Puede decir que el original acaba de declarar un hecho, y su lado simplemente cedi&amp;oacute; a esa declaraci&amp;oacute;n y se rindi&amp;oacute;, mientras que el otro lado trat&amp;oacute; de tener una actitud m&amp;aacute;s positiva. A veces, puede obtener una mejor resoluci&amp;oacute;n al ver el original.</target>
        </trans-unit>
        <trans-unit id="3a9ee73184ef3bce8e3d7aa50aca9c03ee962a97" translate="yes" xml:space="preserve">
          <source>In addition to the &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; listed on the command line, read them from the standard input. If a &lt;code&gt;--&lt;/code&gt; separator is seen, stop reading commits and start reading paths to limit the result.</source>
          <target state="translated">Adem&amp;aacute;s de los &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; que aparecen en la l&amp;iacute;nea de comando, l&amp;eacute;alos desde la entrada est&amp;aacute;ndar. Si se ve un &lt;code&gt;--&lt;/code&gt; separador, deje de leer confirmaciones y comience a leer rutas para limitar el resultado.</target>
        </trans-unit>
        <trans-unit id="e57f382f37af963780a48b9b24f281a677f73e3f" translate="yes" xml:space="preserve">
          <source>In addition to the above settings, you can change whether TREESAME affects inclusion:</source>
          <target state="translated">Además de los ajustes anteriores,puede cambiar si el ÁRBOL afecta a la inclusión:</target>
        </trans-unit>
        <trans-unit id="15a1839e21183f6c87dd1989058c966575a3a5b3" translate="yes" xml:space="preserve">
          <source>In addition to the above two patterns, we also expect that all files in the root directory are included. If a recursive pattern is added, then all leading directories are added as parent patterns.</source>
          <target state="translated">Además de los dos patrones anteriores,también esperamos que se incluyan todos los archivos del directorio raíz.Si se añade un patrón recursivo,entonces todos los directorios principales se añaden como patrones principales.</target>
        </trans-unit>
        <trans-unit id="5cdd7d140b9026d9dc5fc6d397fdc9a74057bb4e" translate="yes" xml:space="preserve">
          <source>In addition to the above, for commit and tag objects, the header field names (&lt;code&gt;tree&lt;/code&gt;, &lt;code&gt;parent&lt;/code&gt;, &lt;code&gt;object&lt;/code&gt;, &lt;code&gt;type&lt;/code&gt;, and &lt;code&gt;tag&lt;/code&gt;) can be used to specify the value in the header field.</source>
          <target state="translated">Adem&amp;aacute;s de lo anterior, para los objetos de confirmaci&amp;oacute;n y etiqueta, los nombres de los campos de encabezado ( &lt;code&gt;tree&lt;/code&gt; , &lt;code&gt;parent&lt;/code&gt; , &lt;code&gt;object&lt;/code&gt; , &lt;code&gt;type&lt;/code&gt; y &lt;code&gt;tag&lt;/code&gt; ) se pueden usar para especificar el valor en el campo de encabezado.</target>
        </trans-unit>
        <trans-unit id="4a3a21fa25ba67eb3d7f9da7f4344fe1b071989c" translate="yes" xml:space="preserve">
          <source>In addition to the names of files that have been changed, also show the textual changes that are staged to be committed (i.e., like the output of &lt;code&gt;git diff --cached&lt;/code&gt;). If &lt;code&gt;-v&lt;/code&gt; is specified twice, then also show the changes in the working tree that have not yet been staged (i.e., like the output of &lt;code&gt;git diff&lt;/code&gt;).</source>
          <target state="translated">Adem&amp;aacute;s de los nombres de los archivos que se han cambiado, tambi&amp;eacute;n muestra los cambios textuales que est&amp;aacute;n preparados para ser confirmados (es decir, como la salida de &lt;code&gt;git diff --cached&lt;/code&gt; ). Si &lt;code&gt;-v&lt;/code&gt; se especifica dos veces, tambi&amp;eacute;n muestra los cambios en el &amp;aacute;rbol de trabajo que a&amp;uacute;n no se han organizado (es decir, como la salida de &lt;code&gt;git diff&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="9d2884340103002807461c187c73c074fbbd3657" translate="yes" xml:space="preserve">
          <source>In addition to the object pointed by it, show the underlying ref pointed by it when showing a symbolic ref. Currently, upload-pack only shows the symref HEAD, so it will be the only one shown by ls-remote.</source>
          <target state="translated">Además del objeto señalado por él,mostrar el ref subyacente señalado por él al mostrar un ref simbólico.Actualmente,upload-pack sólo muestra el simbólico HEAD,por lo que será el único mostrado por ls-remote.</target>
        </trans-unit>
        <trans-unit id="6c7a07603f44cd9719a4b680d9f7256b9473029e" translate="yes" xml:space="preserve">
          <source>In addition to the patches, generate a cover letter file containing the branch description, shortlog and the overall diffstat. You can fill in a description in the file before sending it out.</source>
          <target state="translated">Además de los parches,genere un archivo de carta de presentación que contenga la descripción de la sucursal,el resumen y el diffstat general.Puedes rellenar una descripción en el archivo antes de enviarlo.</target>
        </trans-unit>
        <trans-unit id="102ba20e10a0928862b597a4b85d8411aa7a16cb" translate="yes" xml:space="preserve">
          <source>In addition to the text-based messages available in &lt;code&gt;GIT_TRACE2&lt;/code&gt;, this setting writes a column-based format for understanding nesting regions. See &lt;code&gt;GIT_TRACE2&lt;/code&gt; for available trace output options and &lt;a href=&quot;api-trace2&quot;&gt;Trace2 documentation&lt;/a&gt; for full details.</source>
          <target state="translated">Adem&amp;aacute;s de los mensajes basados ​​en texto disponibles en &lt;code&gt;GIT_TRACE2&lt;/code&gt; , esta configuraci&amp;oacute;n escribe un formato basado en columnas para comprender las regiones de anidaci&amp;oacute;n. Consulte &lt;code&gt;GIT_TRACE2&lt;/code&gt; para conocer las opciones de salida de seguimiento disponibles y la &lt;a href=&quot;api-trace2&quot;&gt;documentaci&amp;oacute;n de Trace2&lt;/a&gt; para obtener detalles completos.</target>
        </trans-unit>
        <trans-unit id="547bdce4dd37bfda9e1c54bdf493ad3c6de08ff9" translate="yes" xml:space="preserve">
          <source>In addition, any unrecognized string that has a &lt;code&gt;%&lt;/code&gt; in it is interpreted as if it has &lt;code&gt;tformat:&lt;/code&gt; in front of it. For example, these two are equivalent:</source>
          <target state="translated">Adem&amp;aacute;s, cualquier cadena no reconocida que tenga un &lt;code&gt;%&lt;/code&gt; en ella se interpreta como si tuviera &lt;code&gt;tformat:&lt;/code&gt; delante de ella. Por ejemplo, estos dos son equivalentes:</target>
        </trans-unit>
        <trans-unit id="bc74e38407c657e1d62a835de829f2a0637ff932" translate="yes" xml:space="preserve">
          <source>In addition, if the variable is set to &lt;code&gt;af_unix:[&amp;lt;socket_type&amp;gt;:]&amp;lt;absolute-pathname&amp;gt;&lt;/code&gt;, Git will try to open the path as a Unix Domain Socket. The socket type can be either &lt;code&gt;stream&lt;/code&gt; or &lt;code&gt;dgram&lt;/code&gt;.</source>
          <target state="translated">Adem&amp;aacute;s, si la variable se establece en &lt;code&gt;af_unix:[&amp;lt;socket_type&amp;gt;:]&amp;lt;absolute-pathname&amp;gt;&lt;/code&gt; , Git intentar&amp;aacute; abrir la ruta como un socket de dominio Unix. El tipo de conector puede ser &lt;code&gt;stream&lt;/code&gt; o &lt;code&gt;dgram&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fdc73bece50193400c9954e5c33b0d5db46ea312" translate="yes" xml:space="preserve">
          <source>In addition, some Git commands (such as &lt;a href=&quot;git-show&quot;&gt;git-show[1]&lt;/a&gt; and &lt;a href=&quot;git-push&quot;&gt;git-push[1]&lt;/a&gt;) can also take revision parameters which denote other objects than commits, e.g. blobs (&quot;files&quot;) or trees (&quot;directories of files&quot;).</source>
          <target state="translated">Adem&amp;aacute;s, algunos comandos de Git (como &lt;a href=&quot;git-show&quot;&gt;git-show [1]&lt;/a&gt; y &lt;a href=&quot;git-push&quot;&gt;git-push [1]&lt;/a&gt; ) tambi&amp;eacute;n pueden tomar par&amp;aacute;metros de revisi&amp;oacute;n que denotan otros objetos adem&amp;aacute;s de confirmaciones, por ejemplo, blobs (&quot;archivos&quot;) o &amp;aacute;rboles (&quot;directorios de archivos&quot; ).</target>
        </trans-unit>
        <trans-unit id="9c0114752cc3965279675b92f9d509a7719a899c" translate="yes" xml:space="preserve">
          <source>In addition, the date part is accepted in the following formats: &lt;code&gt;YYYY.MM.DD&lt;/code&gt;, &lt;code&gt;MM/DD/YYYY&lt;/code&gt; and &lt;code&gt;DD.MM.YYYY&lt;/code&gt;.</source>
          <target state="translated">Adem&amp;aacute;s, la parte de la fecha se acepta en los siguientes formatos: &lt;code&gt;YYYY.MM.DD&lt;/code&gt; , &lt;code&gt;MM/DD/YYYY&lt;/code&gt; y &lt;code&gt;DD.MM.YYYY&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b090b5874a4f9cb2a75963ffefe67f7cff33a14b" translate="yes" xml:space="preserve">
          <source>In addition, the following pairs of options are incompatible:</source>
          <target state="translated">Además,los siguientes pares de opciones son incompatibles:</target>
        </trans-unit>
        <trans-unit id="c9eac4f7a75d08c8d5ecd2f93cae76dbdd2c65fb" translate="yes" xml:space="preserve">
          <source>In addition, there are a number of optional keys:</source>
          <target state="translated">Además,hay una serie de teclas opcionales:</target>
        </trans-unit>
        <trans-unit id="3170175bde47695f8d16d1aa859fc39830538d4d" translate="yes" xml:space="preserve">
          <source>In all &quot;keep index&quot; cases, the index entry stays as in the original index file. If the entry is not up to date, &lt;code&gt;git read-tree&lt;/code&gt; keeps the copy in the work tree intact when operating under the -u flag.</source>
          <target state="translated">En todos los casos de &quot;mantener &amp;iacute;ndice&quot;, la entrada de &amp;iacute;ndice permanece como en el archivo de &amp;iacute;ndice original. Si la entrada no est&amp;aacute; actualizada, &lt;code&gt;git read-tree&lt;/code&gt; mantiene intacta la copia en el &amp;aacute;rbol de trabajo cuando se opera bajo la bandera -u.</target>
        </trans-unit>
        <trans-unit id="518e45973547d44ae8b0cf643cea7c8e1439a6f7" translate="yes" xml:space="preserve">
          <source>In all of these cases, the commands themselves first optionally limit the two sets of files by any pathspecs given on their command-lines, and compare corresponding paths in the two resulting sets of files.</source>
          <target state="translated">En todos estos casos,los propios comandos limitan primero opcionalmente los dos conjuntos de archivos por cualquier pathspecs dado en sus líneas de comandos,y comparan las rutas correspondientes en los dos conjuntos de archivos resultantes.</target>
        </trans-unit>
        <trans-unit id="a976d8376129a573bbe9b45628bf2bdf5e1fe7e1" translate="yes" xml:space="preserve">
          <source>In an environment that restricts the users' access only to git commands over the wire, this hook can be used to implement access control without relying on filesystem ownership and group membership. See &lt;a href=&quot;git-shell&quot;&gt;git-shell[1]&lt;/a&gt; for how you might use the login shell to restrict the user&amp;rsquo;s access to only git commands.</source>
          <target state="translated">En un entorno que restringe el acceso de los usuarios solo a los comandos git a trav&amp;eacute;s del cable, este gancho se puede usar para implementar el control de acceso sin depender de la propiedad del sistema de archivos y la pertenencia al grupo. Consulte &lt;a href=&quot;git-shell&quot;&gt;git-shell [1]&lt;/a&gt; para saber c&amp;oacute;mo puede usar el shell de inicio de sesi&amp;oacute;n para restringir el acceso del usuario a solo comandos de git.</target>
        </trans-unit>
        <trans-unit id="9220471bbc29ec41ed13c216a79cb80f852ef698" translate="yes" xml:space="preserve">
          <source>In any case, a field name that refers to a field inapplicable to the object referred by the ref does not cause an error. It returns an empty string instead.</source>
          <target state="translated">En cualquier caso,un nombre de campo que se refiera a un campo inaplicable al objeto referido por el árbitro no causa un error.En cambio,devuelve una cadena vacía.</target>
        </trans-unit>
        <trans-unit id="55cc553818c07e93d42b2d9a9da22e8f0487ba9d" translate="yes" xml:space="preserve">
          <source>In both formats &lt;code&gt;&amp;lt;commit-ish&amp;gt;&lt;/code&gt; is any of the commit specification expressions also accepted by &lt;code&gt;from&lt;/code&gt; (see above).</source>
          <target state="translated">En ambos formatos, &lt;code&gt;&amp;lt;commit-ish&amp;gt;&lt;/code&gt; es cualquiera de las expresiones de especificaci&amp;oacute;n de confirmaci&amp;oacute;n tambi&amp;eacute;n aceptadas por &lt;code&gt;from&lt;/code&gt; (ver arriba).</target>
        </trans-unit>
        <trans-unit id="9838d0f6a0615e5345bacba941fa3a7ae58fc03e" translate="yes" xml:space="preserve">
          <source>In both formats &lt;code&gt;&amp;lt;mode&amp;gt;&lt;/code&gt; is the type of file entry, specified in octal. Git only supports the following modes:</source>
          <target state="translated">En ambos formatos, &lt;code&gt;&amp;lt;mode&amp;gt;&lt;/code&gt; es el tipo de entrada de archivo, especificado en octal. Git solo admite los siguientes modos:</target>
        </trans-unit>
        <trans-unit id="e124f640b7099c2dfc555e83763a437b341aea9d" translate="yes" xml:space="preserve">
          <source>In both formats &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt; is the complete path of the file to be added (if not already existing) or modified (if already existing).</source>
          <target state="translated">En ambos formatos, &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt; es la ruta completa del archivo que se agregar&amp;aacute; (si a&amp;uacute;n no existe) o se modificar&amp;aacute; (si ya existe).</target>
        </trans-unit>
        <trans-unit id="e22465a192b99fdb8a38ceb6e2163b1bb2a55eaa" translate="yes" xml:space="preserve">
          <source>In both formats RS (the record separator) is newline by default but will be the null byte if -z was passed on the command line. The temporary file names are always safe strings; they will never contain directory separators or whitespace characters. The path field is always relative to the current directory and the temporary file names are always relative to the top level directory.</source>
          <target state="translated">En ambos formatos RS (el separador de registros)es la nueva línea por defecto,pero será el byte nulo si se pasó -z en la línea de comandos.Los nombres de archivos temporales son siempre cadenas seguras;nunca contendrán separadores de directorios o caracteres de espacio en blanco.El campo de la ruta es siempre relativo al directorio actual y los nombres de los archivos temporales son siempre relativos al directorio de nivel superior.</target>
        </trans-unit>
        <trans-unit id="bbdfd88cae7c8d5fe4027454edb7c9f3a518f214" translate="yes" xml:space="preserve">
          <source>In both rename and copy detection, the same &quot;extent of changes&quot; algorithm used in diffcore-break is used to determine if two files are &quot;similar enough&quot;, and can be customized to use a similarity score different from the default of 50% by giving a number after the &quot;-M&quot; or &quot;-C&quot; option (e.g. &quot;-M8&quot; to tell it to use 8/10 = 80%).</source>
          <target state="translated">Tanto en la detección de cambios de nombre como en la de copias,el mismo algoritmo de &quot;extensión de los cambios&quot; utilizado en la ruptura del código de barras se utiliza para determinar si dos archivos son &quot;suficientemente similares&quot;,y puede personalizarse para utilizar una puntuación de similitud diferente de la predeterminada del 50% dando un número después de la opción &quot;-M&quot; o &quot;-C&quot; (por ejemplo,&quot;-M8&quot; para indicar que utilice 8/10=80%).</target>
        </trans-unit>
        <trans-unit id="cef1680a7a27c73f800aa2ae728f37bb9ebeed5c" translate="yes" xml:space="preserve">
          <source>In case &amp;lt;old&amp;gt; and &amp;lt;new&amp;gt; are the same, and &amp;lt;old&amp;gt; is a file under &lt;code&gt;$GIT_DIR/remotes&lt;/code&gt; or &lt;code&gt;$GIT_DIR/branches&lt;/code&gt;, the remote is converted to the configuration file format.</source>
          <target state="translated">En caso de que &amp;lt;old&amp;gt; y &amp;lt;new&amp;gt; sean iguales, y &amp;lt;old&amp;gt; sea un archivo en &lt;code&gt;$GIT_DIR/remotes&lt;/code&gt; o &lt;code&gt;$GIT_DIR/branches&lt;/code&gt; , el control remoto se convierte al formato de archivo de configuraci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="3736cf7c9e88d8830feeb4facce5d47bac7822e0" translate="yes" xml:space="preserve">
          <source>In case (some of) these environment variables are not set, the information is taken from the configuration items user.name and user.email, or, if not present, the environment variable EMAIL, or, if that is not set, system user name and the hostname used for outgoing mail (taken from &lt;code&gt;/etc/mailname&lt;/code&gt; and falling back to the fully qualified hostname when that file does not exist).</source>
          <target state="translated">En caso de que (algunas de) estas variables de entorno no est&amp;eacute;n configuradas, la informaci&amp;oacute;n se toma de los elementos de configuraci&amp;oacute;n user.name y user.email, o, si no est&amp;aacute; presente, la variable de entorno EMAIL o, si no est&amp;aacute; configurada, usuario del sistema name y el nombre de host utilizado para el correo saliente (tomado de &lt;code&gt;/etc/mailname&lt;/code&gt; y recurriendo al nombre de host completo cuando ese archivo no existe).</target>
        </trans-unit>
        <trans-unit id="fab172a52a0d96a15d352f159439993a534e8fe5" translate="yes" xml:space="preserve">
          <source>In case of conflict, &lt;code&gt;git rebase&lt;/code&gt; will stop at the first problematic commit and leave conflict markers in the tree. You can use &lt;code&gt;git diff&lt;/code&gt; to locate the markers (&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;) and make edits to resolve the conflict. For each file you edit, you need to tell Git that the conflict has been resolved, typically this would be done with</source>
          <target state="translated">En caso de conflicto, &lt;code&gt;git rebase&lt;/code&gt; se detendr&amp;aacute; en la primera confirmaci&amp;oacute;n problem&amp;aacute;tica y dejar&amp;aacute; marcadores de conflicto en el &amp;aacute;rbol. Puede usar &lt;code&gt;git diff&lt;/code&gt; para ubicar los marcadores (&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;) y realizar ediciones para resolver el conflicto. Para cada archivo que edite, debe decirle a Git que el conflicto se ha resuelto, por lo general, esto se har&amp;iacute;a con</target>
        </trans-unit>
        <trans-unit id="8de3ddb587a19db9387af113a7f3cb72b19328d0" translate="yes" xml:space="preserve">
          <source>In case of failure in the output of &lt;a href=&quot;git-rm&quot;&gt;git-rm[1]&lt;/a&gt;, show directions on how to proceed from the current state.</source>
          <target state="translated">En caso de falla en la salida de &lt;a href=&quot;git-rm&quot;&gt;git-rm [1]&lt;/a&gt; , muestre las instrucciones sobre c&amp;oacute;mo proceder desde el estado actual.</target>
        </trans-unit>
        <trans-unit id="1ca6e2b22c66fb3bb4920e7b16e070cab433e13d" translate="yes" xml:space="preserve">
          <source>In case the filter cannot or does not want to process the content as well as any future content for the lifetime of the Git process, then it is expected to respond with an &quot;abort&quot; status at any point in the protocol.</source>
          <target state="translated">En caso de que el filtro no pueda o no quiera procesar el contenido,así como cualquier contenido futuro durante el tiempo que dure el proceso de Git,se espera que responda con un estado de &quot;abortar&quot; en cualquier punto del protocolo.</target>
        </trans-unit>
        <trans-unit id="a44b155f3278323b322b1edffc06fec805c87137" translate="yes" xml:space="preserve">
          <source>In case the filter cannot or does not want to process the content, it is expected to respond with an &quot;error&quot; status.</source>
          <target state="translated">En caso de que el filtro no pueda o no quiera procesar el contenido,se espera que responda con un estado de &quot;error&quot;.</target>
        </trans-unit>
        <trans-unit id="063d2c577358a9002bf9810cc43ec764ca0682e1" translate="yes" xml:space="preserve">
          <source>In command synopses, the word &quot;tree-ish&quot; is sometimes used to designate such an argument.</source>
          <target state="translated">En las sinopsis de comandos,la palabra &quot;arbóreo&quot; se utiliza a veces para designar tal argumento.</target>
        </trans-unit>
        <trans-unit id="0cb56babf143d18da14e8d5b38b880de0eb432ae" translate="yes" xml:space="preserve">
          <source>In compact output mode, specified with configuration variable fetch.output, if either entire &lt;code&gt;&amp;lt;from&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;to&amp;gt;&lt;/code&gt; is found in the other string, it will be substituted with &lt;code&gt;*&lt;/code&gt; in the other string. For example, &lt;code&gt;master -&amp;gt; origin/master&lt;/code&gt; becomes &lt;code&gt;master -&amp;gt; origin/*&lt;/code&gt;.</source>
          <target state="translated">En el modo de salida compacto, especificado con la variable de configuraci&amp;oacute;n fetch.output, si se encuentra todo &lt;code&gt;&amp;lt;from&amp;gt;&lt;/code&gt; o &lt;code&gt;&amp;lt;to&amp;gt;&lt;/code&gt; en la otra cadena, se sustituir&amp;aacute; por &lt;code&gt;*&lt;/code&gt; en la otra cadena. Por ejemplo, &lt;code&gt;master -&amp;gt; origin/master&lt;/code&gt; convierte en &lt;code&gt;master -&amp;gt; origin/*&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="17a206b483cbd4faf3ff1c681d69d041ba456195" translate="yes" xml:space="preserve">
          <source>In contrast to a regular interactive rebase, there are &lt;code&gt;label&lt;/code&gt;, &lt;code&gt;reset&lt;/code&gt; and &lt;code&gt;merge&lt;/code&gt; commands in addition to &lt;code&gt;pick&lt;/code&gt; ones.</source>
          <target state="translated">A diferencia de una rebase interactiva normal, existen comandos de &lt;code&gt;label&lt;/code&gt; , &lt;code&gt;reset&lt;/code&gt; y &lt;code&gt;merge&lt;/code&gt; adem&amp;aacute;s de los de &lt;code&gt;pick&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a91f8ccdcda758152dfb84f7e032555a6abd0478" translate="yes" xml:space="preserve">
          <source>In contrast, a non-fast-forward update will lose history. For example, suppose you and somebody else started at the same commit X, and you built a history leading to commit B while the other person built a history leading to commit A. The history looks like this:</source>
          <target state="translated">Por el contrario,una actualización que no sea rápida perderá la historia.Por ejemplo,supongamos que tú y otra persona comenzaron en la misma comisión X,y tú construiste un historial que conduce a la comisión B mientras que la otra persona construyó un historial que conduce a la comisión A.El historial tiene este aspecto:</target>
        </trans-unit>
        <trans-unit id="07b2f985753911580a2527f5513df7870e7e2eaf" translate="yes" xml:space="preserve">
          <source>In editing files, git-filter-branch by design checks out each and every commit as it existed in the original repo. If your repo has 10\^5 files and 10\^5 commits, but each commit only modifies 5 files, then git-filter-branch will make you do 10\^10 modifications, despite only having (at most) 5*10^5 unique blobs.</source>
          <target state="translated">En la edición de archivos,git-filtro-rama por diseño comprueba todas y cada una de las confirmaciones tal y como existían en el repositorio original.Si tu repositorio tiene 10 archivos y 10 confirmaciones,pero cada confirmación sólo modifica 5 archivos,entonces git-filter-branch te hará hacer 10 modificaciones,a pesar de tener (como máximo)5*10^5 blobs únicos.</target>
        </trans-unit>
        <trans-unit id="a532459a44f155e770ddc46e416638b81292d839" translate="yes" xml:space="preserve">
          <source>In either format, values can be specified in any form that Git recognizes as an object name. Commands in any other format or a repeated &amp;lt;ref&amp;gt; produce an error. Command meanings are:</source>
          <target state="translated">En cualquier formato, los valores se pueden especificar en cualquier forma que Git reconozca como un nombre de objeto. Los comandos en cualquier otro formato o un &amp;lt;ref&amp;gt; repetido producen un error. Los significados de los comandos son:</target>
        </trans-unit>
        <trans-unit id="9c49e183be0df7128f7b7d238522888866505455" translate="yes" xml:space="preserve">
          <source>In fact development teams often maintain both a development branch and a maintenance branch, and it would be quite easy for them if &quot;git bisect&quot; just worked when they want to bisect a regression on the development branch that is not on the maintenance branch. They should be able to start bisecting using:</source>
          <target state="translated">De hecho,los equipos de desarrollo a menudo mantienen tanto una rama de desarrollo como una rama de mantenimiento,y sería bastante fácil para ellos si &quot;git bisect&quot; funcionara sólo cuando quieren bisectar una regresión en la rama de desarrollo que no está en la rama de mantenimiento.Deberían ser capaces de empezar a bisecar usando:</target>
        </trans-unit>
        <trans-unit id="49c9270dc1d07096e092a06d8107784ae1248f61" translate="yes" xml:space="preserve">
          <source>In fact it&amp;rsquo;s invaluable because there are bugs i would never even &lt;code&gt;try&lt;/code&gt; to debug if it wasn&amp;rsquo;t for git bisect. In the past there were bug patterns that were immediately hopeless for me to debug - at best i could send the crash/bug signature to lkml and hope that someone else can think of something.</source>
          <target state="translated">De hecho, es invaluable porque hay errores que nunca &lt;code&gt;try&lt;/code&gt; depurar si no fuera por git bisect. En el pasado, hab&amp;iacute;a patrones de errores que de inmediato no ten&amp;iacute;a esperanzas de depurar; en el mejor de los casos, pod&amp;iacute;a enviar la firma de bloqueo / error a lkml y esperar que alguien m&amp;aacute;s pudiera pensar en algo.</target>
        </trans-unit>
        <trans-unit id="4d0defa9e6e327fdaa3580beb798bb05e9bb4ad4" translate="yes" xml:space="preserve">
          <source>In fact it&amp;rsquo;s this last feature that &quot;sold&quot; it to the Git community, so it is now in the &quot;master&quot; branch of Git&amp;rsquo;s Git repository and it should be released in Git 1.6.5 in October or November 2009.</source>
          <target state="translated">De hecho, es esta &amp;uacute;ltima caracter&amp;iacute;stica la que la &quot;vendi&amp;oacute;&quot; a la comunidad de Git, por lo que ahora est&amp;aacute; en la rama &quot;maestra&quot; del repositorio de Git de Git y deber&amp;iacute;a lanzarse en Git 1.6.5 en octubre o noviembre de 2009.</target>
        </trans-unit>
        <trans-unit id="a503332ebe0b76ca226cc7fab9355da1cbc846ca" translate="yes" xml:space="preserve">
          <source>In fact people are specially interested in commits that introduce a &quot;bad&quot; behavior, called a bug or a regression. They are interested in these commits because a commit (hopefully) contains a very small set of source code changes. And it&amp;rsquo;s much easier to understand and properly fix a problem when you only need to check a very small set of changes, than when you don&amp;rsquo;t know where look in the first place.</source>
          <target state="translated">De hecho, la gente est&amp;aacute; especialmente interesada en las confirmaciones que introducen un &quot;mal&quot; comportamiento, llamado error o regresi&amp;oacute;n. Est&amp;aacute;n interesados ​​en estas confirmaciones porque una confirmaci&amp;oacute;n (con suerte) contiene un conjunto muy peque&amp;ntilde;o de cambios en el c&amp;oacute;digo fuente. Y es mucho m&amp;aacute;s f&amp;aacute;cil comprender y solucionar correctamente un problema cuando solo necesita verificar un conjunto muy peque&amp;ntilde;o de cambios, que cuando no sabe d&amp;oacute;nde buscar en primer lugar.</target>
        </trans-unit>
        <trans-unit id="ef62eb9471b68497e696b504f306bae12d5b62ac" translate="yes" xml:space="preserve">
          <source>In fact the problem is that big software often has many different configuration options and that each test case should pass for each configuration after each commit. So if you have for each release: N configurations, M commits and T test cases, you should perform:</source>
          <target state="translated">De hecho,el problema es que los grandes programas informáticos suelen tener muchas opciones de configuración diferentes y que cada caso de prueba debe pasar por cada configuración después de cada confirmación.Así que si tienes para cada lanzamiento:N configuraciones,M confirmaciones y T casos de prueba,deberías realizar:</target>
        </trans-unit>
        <trans-unit id="99977c45d37760acd8d4612dba46dd63b60c39cd" translate="yes" xml:space="preserve">
          <source>In fact, &lt;code&gt;git bisect&lt;/code&gt; can be used to find the commit that changed &lt;strong&gt;any&lt;/strong&gt; property of your project; e.g., the commit that fixed a bug, or the commit that caused a benchmark&amp;rsquo;s performance to improve. To support this more general usage, the terms &quot;old&quot; and &quot;new&quot; can be used in place of &quot;good&quot; and &quot;bad&quot;, or you can choose your own terms. See section &quot;Alternate terms&quot; below for more information.</source>
          <target state="translated">De hecho, &lt;code&gt;git bisect&lt;/code&gt; se puede usar para encontrar la confirmaci&amp;oacute;n que cambi&amp;oacute; &lt;strong&gt;cualquier&lt;/strong&gt; propiedad de su proyecto; por ejemplo, la confirmaci&amp;oacute;n que solucion&amp;oacute; un error o la confirmaci&amp;oacute;n que hizo que mejorara el rendimiento de un punto de referencia. Para respaldar este uso m&amp;aacute;s general, los t&amp;eacute;rminos &quot;antiguo&quot; y &quot;nuevo&quot; se pueden utilizar en lugar de &quot;bueno&quot; y &quot;malo&quot;, o puede elegir sus propios t&amp;eacute;rminos. Consulte la secci&amp;oacute;n &quot;T&amp;eacute;rminos alternativos&quot; a continuaci&amp;oacute;n para obtener m&amp;aacute;s informaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="7071f9821fe5bdd2a61f333d551d92b1d1a7cc62" translate="yes" xml:space="preserve">
          <source>In fact, &lt;code&gt;git diff-index --cached&lt;/code&gt;&lt;strong&gt;should&lt;/strong&gt; always be entirely equivalent to actually doing a &lt;code&gt;git write-tree&lt;/code&gt; and comparing that. Except this one is much nicer for the case where you just want to check where you are.</source>
          <target state="translated">De hecho, &lt;code&gt;git diff-index --cached&lt;/code&gt; siempre &lt;strong&gt;deber&amp;iacute;a&lt;/strong&gt; ser completamente equivalente a hacer un &lt;code&gt;git write-tree&lt;/code&gt; y compararlo. Excepto que este es mucho m&amp;aacute;s agradable para el caso en el que solo desea verificar d&amp;oacute;nde se encuentra.</target>
        </trans-unit>
        <trans-unit id="4ed30cb15a7bebad154936439885b3df49088a74" translate="yes" xml:space="preserve">
          <source>In fact, as you did that, if you now look into your object directory, you&amp;rsquo;ll notice that Git will have added two new objects to the object database. If you did exactly the steps above, you should now be able to do</source>
          <target state="translated">De hecho, mientras lo hizo, si ahora mira en su directorio de objetos, notar&amp;aacute; que Git habr&amp;aacute; agregado dos nuevos objetos a la base de datos de objetos. Si sigui&amp;oacute; exactamente los pasos anteriores, ahora deber&amp;iacute;a poder hacer</target>
        </trans-unit>
        <trans-unit id="c9492aea4e59a8249b05f0197902254019664286" translate="yes" xml:space="preserve">
          <source>In fact, if you have &lt;code&gt;master&lt;/code&gt; checked out, then this branch has been configured by &lt;code&gt;git clone&lt;/code&gt; to get changes from the HEAD branch of the origin repository. So often you can accomplish the above with just a simple</source>
          <target state="translated">De hecho, si tiene &lt;code&gt;master&lt;/code&gt; verificado, entonces esta rama ha sido configurada por &lt;code&gt;git clone&lt;/code&gt; para obtener cambios de la rama HEAD del repositorio de origen. Muy a menudo, puede lograr lo anterior con solo un simple</target>
        </trans-unit>
        <trans-unit id="c5bd224f8ecefe700eae1705d4f2a63ae227649f" translate="yes" xml:space="preserve">
          <source>In fact, in &lt;a href=&quot;#git-concepts&quot;&gt;Git concepts&lt;/a&gt; we shall see that everything stored in Git history, including file data and directory contents, is stored in an object with a name that is a hash of its contents.</source>
          <target state="translated">De hecho, en los &lt;a href=&quot;#git-concepts&quot;&gt;conceptos de Git&lt;/a&gt; veremos que todo lo almacenado en el historial de Git, incluidos los datos de archivos y el contenido del directorio, se almacena en un objeto con un nombre que es un hash de su contenido.</target>
        </trans-unit>
        <trans-unit id="9ce4601e5a5f52f186df099525d9504862a821c8" translate="yes" xml:space="preserve">
          <source>In fact, together with the &lt;code&gt;git rev-list&lt;/code&gt; program (which generates a list of revisions), &lt;code&gt;git diff-tree&lt;/code&gt; ends up being a veritable fount of changes. You can emulate &lt;code&gt;git log&lt;/code&gt;, &lt;code&gt;git log -p&lt;/code&gt;, etc. with a trivial script that pipes the output of &lt;code&gt;git rev-list&lt;/code&gt; to &lt;code&gt;git diff-tree --stdin&lt;/code&gt;, which was exactly how early versions of &lt;code&gt;git log&lt;/code&gt; were implemented.</source>
          <target state="translated">De hecho, junto con el programa &lt;code&gt;git rev-list&lt;/code&gt; (que genera una lista de revisiones), &lt;code&gt;git diff-tree&lt;/code&gt; termina siendo una verdadera fuente de cambios. Puede emular &lt;code&gt;git log&lt;/code&gt; , &lt;code&gt;git log -p&lt;/code&gt; , etc. con un script trivial que canaliza la salida de &lt;code&gt;git rev-list&lt;/code&gt; a &lt;code&gt;git diff-tree --stdin&lt;/code&gt; , que fue exactamente c&amp;oacute;mo se implementaron las primeras versiones de &lt;code&gt;git log&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="da9de14a63db6e5a8e5a19a81e9a6160f95eb222" translate="yes" xml:space="preserve">
          <source>In fact, we can perform all the normal Git operations. But, let&amp;rsquo;s look at what happens when we then checkout &lt;code&gt;master&lt;/code&gt;:</source>
          <target state="translated">De hecho, podemos realizar todas las operaciones normales de Git. Pero, veamos lo que sucede cuando luego realizamos el checkout &lt;code&gt;master&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="728d90294e037628a986d3380572564cc895d389" translate="yes" xml:space="preserve">
          <source>In future versions we may learn to support patterns containing \0 for more search backends, until then we&amp;rsquo;ll die when the pattern type in question doesn&amp;rsquo;t support them.</source>
          <target state="translated">En versiones futuras, es posible que aprendamos a admitir patrones que contengan \ 0 para obtener m&amp;aacute;s backends de b&amp;uacute;squeda, hasta entonces moriremos cuando el tipo de patr&amp;oacute;n en cuesti&amp;oacute;n no los admita.</target>
        </trans-unit>
        <trans-unit id="674a2666658c40a25d4cd65b3ea28af975f1fa97" translate="yes" xml:space="preserve">
          <source>In general a client can request to speak protocol v2 by sending &lt;code&gt;version=2&lt;/code&gt; through the respective side-channel for the transport being used which inevitably sets &lt;code&gt;GIT_PROTOCOL&lt;/code&gt;. More information can be found in &lt;code&gt;pack-protocol.txt&lt;/code&gt; and &lt;code&gt;http-protocol.txt&lt;/code&gt;. In all cases the response from the server is the capability advertisement.</source>
          <target state="translated">En general, un cliente puede solicitar hablar el protocolo v2 enviando la &lt;code&gt;version=2&lt;/code&gt; trav&amp;eacute;s del canal lateral respectivo para el transporte que se est&amp;aacute; utilizando, lo que inevitablemente establece &lt;code&gt;GIT_PROTOCOL&lt;/code&gt; . Puede encontrar m&amp;aacute;s informaci&amp;oacute;n en &lt;code&gt;pack-protocol.txt&lt;/code&gt; y &lt;code&gt;http-protocol.txt&lt;/code&gt; . En todos los casos, la respuesta del servidor es el anuncio de capacidad.</target>
        </trans-unit>
        <trans-unit id="1aaa12db7c29bdac4538baf95940db6bed82a0b8" translate="yes" xml:space="preserve">
          <source>In general, URLs contain information about the transport protocol, the address of the remote server, and the path to the repository. Depending on the transport protocol, some of this information may be absent.</source>
          <target state="translated">En general,los URL contienen información sobre el protocolo de transporte,la dirección del servidor remoto y la ruta de acceso al depósito.Dependiendo del protocolo de transporte,parte de esta información puede estar ausente.</target>
        </trans-unit>
        <trans-unit id="811906db3a55c059a1cd7d72b959827c93f94a02" translate="yes" xml:space="preserve">
          <source>In general, all pseudo refs are per working tree and all refs starting with &quot;refs/&quot; are shared. Pseudo refs are ones like HEAD which are directly under GIT_DIR instead of inside GIT_DIR/refs. There is one exception to this: refs inside refs/bisect and refs/worktree is not shared.</source>
          <target state="translated">En general,todos los seudo árbitros son por árbol de trabajo y todos los árbitros que comienzan con &quot;refs/&quot; son compartidos.Los seudo-refs son como HEAD que están directamente bajo GIT_DIR en lugar de dentro de GIT_DIR/refs.Hay una excepción a esto:los réfs dentro de refs/bisect y refs/árbol de trabajo no se comparte.</target>
        </trans-unit>
        <trans-unit id="e394e7bf320940c252fcc858f73aeff38e0e3c05" translate="yes" xml:space="preserve">
          <source>In general, it is better to enumerate existing objects with problems with &lt;code&gt;fsck.skipList&lt;/code&gt;, instead of listing the kind of breakages these problematic objects share to be ignored, as doing the latter will allow new instances of the same breakages go unnoticed.</source>
          <target state="translated">En general, es mejor enumerar los objetos existentes con problemas con &lt;code&gt;fsck.skipList&lt;/code&gt; , en lugar de enumerar el tipo de roturas que estos objetos problem&amp;aacute;ticos comparten para ser ignorados, ya que hacer esto &amp;uacute;ltimo permitir&amp;aacute; que nuevas instancias de las mismas roturas pasen desapercibidas.</target>
        </trans-unit>
        <trans-unit id="7dc03507399a3b4938c051e86309da2b5ba01f5b" translate="yes" xml:space="preserve">
          <source>In general, the interrogate commands do not touch the files in the working tree.</source>
          <target state="translated">En general,los comandos de interrogación no tocan los archivos del árbol de trabajo.</target>
        </trans-unit>
        <trans-unit id="0830c69bce9b1a4ab3ff9dbb3ca0e63e381af048" translate="yes" xml:space="preserve">
          <source>In general, using</source>
          <target state="translated">En general,el uso de</target>
        </trans-unit>
        <trans-unit id="37034b2d8b34e79ca4767d593d59ca39d0651fd5" translate="yes" xml:space="preserve">
          <source>In here all submodules except &lt;code&gt;baz&lt;/code&gt; (foo, bar, bob) are active. &lt;code&gt;foo&lt;/code&gt; due to its own active flag and all the others due to the submodule active pathspec, which specifies that any submodule starting with &lt;code&gt;b&lt;/code&gt; except &lt;code&gt;baz&lt;/code&gt; are also active, regardless of the presence of the .url field.</source>
          <target state="translated">Aqu&amp;iacute; todos los subm&amp;oacute;dulos excepto &lt;code&gt;baz&lt;/code&gt; (foo, bar, bob) est&amp;aacute;n activos. &lt;code&gt;foo&lt;/code&gt; debido a su propio indicador activo y todos los dem&amp;aacute;s debido al subm&amp;oacute;dulo active pathpec, que especifica que cualquier subm&amp;oacute;dulo que comience con &lt;code&gt;b&lt;/code&gt; excepto &lt;code&gt;baz&lt;/code&gt; tambi&amp;eacute;n est&amp;aacute; activo, independientemente de la presencia del campo .url.</target>
        </trans-unit>
        <trans-unit id="f129c819372eb3b42173e4b2d9e114ef285b7635" translate="yes" xml:space="preserve">
          <source>In interactive commands, allow the user to provide one-letter input with a single key (i.e., without hitting enter). Currently this is used by the &lt;code&gt;--patch&lt;/code&gt; mode of &lt;a href=&quot;git-add&quot;&gt;git-add[1]&lt;/a&gt;, &lt;a href=&quot;git-checkout&quot;&gt;git-checkout[1]&lt;/a&gt;, &lt;a href=&quot;git-restore&quot;&gt;git-restore[1]&lt;/a&gt;, &lt;a href=&quot;git-commit&quot;&gt;git-commit[1]&lt;/a&gt;, &lt;a href=&quot;git-reset&quot;&gt;git-reset[1]&lt;/a&gt;, and &lt;a href=&quot;git-stash&quot;&gt;git-stash[1]&lt;/a&gt;. Note that this setting is silently ignored if portable keystroke input is not available; requires the Perl module Term::ReadKey.</source>
          <target state="translated">En los comandos interactivos, permita que el usuario proporcione una entrada de una letra con una sola tecla (es decir, sin presionar enter). Actualmente, esto es usado por el modo &lt;code&gt;--patch&lt;/code&gt; de &lt;a href=&quot;git-add&quot;&gt;git-add [1]&lt;/a&gt; , &lt;a href=&quot;git-checkout&quot;&gt;git-checkout [1]&lt;/a&gt; , &lt;a href=&quot;git-restore&quot;&gt;git-restore [1]&lt;/a&gt; , &lt;a href=&quot;git-commit&quot;&gt;git-commit [1]&lt;/a&gt; , &lt;a href=&quot;git-reset&quot;&gt;git-reset [1]&lt;/a&gt; y &lt;a href=&quot;git-stash&quot;&gt;git-stash [1]&lt;/a&gt; . Tenga en cuenta que esta configuraci&amp;oacute;n se ignora en silencio si la entrada de pulsaciones de teclas port&amp;aacute;tiles no est&amp;aacute; disponible; requiere el m&amp;oacute;dulo Perl Term :: ReadKey.</target>
        </trans-unit>
        <trans-unit id="1d1c8ed607ef3eefbb04beacb314688e02741550" translate="yes" xml:space="preserve">
          <source>In interactive mode, you can mark commits with the action &quot;edit&quot;. However, this does not necessarily mean that &lt;code&gt;git rebase&lt;/code&gt; expects the result of this edit to be exactly one commit. Indeed, you can undo the commit, or you can add other commits. This can be used to split a commit into two:</source>
          <target state="translated">En el modo interactivo, puede marcar confirmaciones con la acci&amp;oacute;n &quot;editar&quot;. Sin embargo, esto no significa necesariamente que &lt;code&gt;git rebase&lt;/code&gt; espera que el resultado de esta edici&amp;oacute;n sea exactamente una confirmaci&amp;oacute;n. De hecho, puede deshacer la confirmaci&amp;oacute;n o puede agregar otras confirmaciones. Esto se puede usar para dividir un commit en dos:</target>
        </trans-unit>
        <trans-unit id="15b1add937944ed893f52c8ec0293a4127b76c00" translate="yes" xml:space="preserve">
          <source>In its first form, the command provides the content or the type of an object in the repository. The type is required unless &lt;code&gt;-t&lt;/code&gt; or &lt;code&gt;-p&lt;/code&gt; is used to find the object type, or &lt;code&gt;-s&lt;/code&gt; is used to find the object size, or &lt;code&gt;--textconv&lt;/code&gt; or &lt;code&gt;--filters&lt;/code&gt; is used (which imply type &quot;blob&quot;).</source>
          <target state="translated">En su primera forma, el comando proporciona el contenido o el tipo de un objeto en el repositorio. El tipo es necesario a menos &lt;code&gt;-t&lt;/code&gt; o &lt;code&gt;-p&lt;/code&gt; se utiliza para encontrar el tipo de objeto, o &lt;code&gt;-s&lt;/code&gt; se utiliza para encontrar el tama&amp;ntilde;o del objeto, o &lt;code&gt;--textconv&lt;/code&gt; o &lt;code&gt;--filters&lt;/code&gt; se usa (que implica tipo &quot;blob&quot;).</target>
        </trans-unit>
        <trans-unit id="1ce9842f8f482fa7cd77bb4bd4603b72b75e4e0b" translate="yes" xml:space="preserve">
          <source>In its most compact form, this instruction only takes up one byte (0x80) with both offset and size omitted, which will have default values zero. There is another exception: size zero is automatically converted to 0x10000.</source>
          <target state="translated">En su forma más compacta,esta instrucción sólo ocupa un byte (0x80)con el desplazamiento y el tamaño omitidos,que tendrá valores por defecto de cero.Hay otra excepción:el tamaño cero se convierte automáticamente en 0x10000.</target>
        </trans-unit>
        <trans-unit id="70413e1dbdf33a9cdd6044f089c7e374f7b737c4" translate="yes" xml:space="preserve">
          <source>In mathematical terms, what we are looking for is some sort of a minimum cost bipartite matching; &lt;code&gt;1&lt;/code&gt; is matched to &lt;code&gt;C&lt;/code&gt; at some cost, etc. The underlying graph is in fact a complete bipartite graph; the cost we associate with every edge is the size of the diff between the two commits' patches. To explain also new commits, we introduce dummy nodes on both sides:</source>
          <target state="translated">En t&amp;eacute;rminos matem&amp;aacute;ticos, lo que estamos buscando es una especie de emparejamiento bipartito de costo m&amp;iacute;nimo; &lt;code&gt;1&lt;/code&gt; se compara con &lt;code&gt;C&lt;/code&gt; a alg&amp;uacute;n costo, etc. El gr&amp;aacute;fico subyacente es de hecho un gr&amp;aacute;fico bipartito completo; el costo que asociamos con cada borde es el tama&amp;ntilde;o de la diferencia entre los parches de las dos confirmaciones. Para explicar tambi&amp;eacute;n las nuevas confirmaciones, presentamos nodos ficticios en ambos lados:</target>
        </trans-unit>
        <trans-unit id="abc4a2c282027431dbb87981bf40f5240785d9ef" translate="yes" xml:space="preserve">
          <source>In modern git, you can say this in a more direct way:</source>
          <target state="translated">En el mundo moderno,se puede decir esto de una manera más directa:</target>
        </trans-unit>
        <trans-unit id="1cd9dc714cc1317fe8fea12649b27b5eeab6e568" translate="yes" xml:space="preserve">
          <source>In most cases, this means the attributes given in the input will be repeated in the output, but Git may also modify the credential description, for example by removing the &lt;code&gt;path&lt;/code&gt; attribute when the protocol is HTTP(s) and &lt;code&gt;credential.useHttpPath&lt;/code&gt; is false.</source>
          <target state="translated">En la mayor&amp;iacute;a de los casos, esto significa que los atributos dados en la entrada se repetir&amp;aacute;n en la salida, pero Git tambi&amp;eacute;n puede modificar la descripci&amp;oacute;n de la credencial, por ejemplo, eliminando el atributo de &lt;code&gt;path&lt;/code&gt; cuando el protocolo es HTTP (s) y &lt;code&gt;credential.useHttpPath&lt;/code&gt; es falso.</target>
        </trans-unit>
        <trans-unit id="c12479d09bff69f421dbf9e45fddc92269d1f574" translate="yes" xml:space="preserve">
          <source>In most cases, users should run &lt;em&gt;git gc&lt;/em&gt;, which calls &lt;em&gt;git prune&lt;/em&gt;. See the section &quot;NOTES&quot;, below.</source>
          <target state="translated">En la mayor&amp;iacute;a de los casos, los usuarios deben ejecutar &lt;em&gt;git gc&lt;/em&gt; , que llama a &lt;em&gt;git prune&lt;/em&gt; . Consulte la secci&amp;oacute;n &quot;NOTAS&quot;, a continuaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="6d4e8e52070be526725731839d6ade7553803d5e" translate="yes" xml:space="preserve">
          <source>In most cases, users will not need to call &lt;code&gt;git prune&lt;/code&gt; directly, but should instead call &lt;code&gt;git gc&lt;/code&gt;, which handles pruning along with many other housekeeping tasks.</source>
          <target state="translated">En la mayor&amp;iacute;a de los casos, los usuarios no necesitar&amp;aacute;n llamar a &lt;code&gt;git prune&lt;/code&gt; directamente, sino que deber&amp;iacute;an llamar a &lt;code&gt;git gc&lt;/code&gt; , que se encarga de la poda junto con muchas otras tareas de limpieza.</target>
        </trans-unit>
        <trans-unit id="fa1d2a97ebd3bb9e2d938b11b92fc4a8e0c826fa" translate="yes" xml:space="preserve">
          <source>In multiple working trees, some refs may be shared between all working trees, some refs are local. One example is HEAD is different for all working trees. This section is about the sharing rules and how to access refs of one working tree from another.</source>
          <target state="translated">En múltiples árboles de trabajo,algunos árbitros pueden ser compartidos entre todos los árboles de trabajo,algunos árbitros son locales.Un ejemplo es que HEAD es diferente para todos los árboles de trabajo.Esta sección trata sobre las reglas de compartición y cómo acceder a los árbitros de un árbol de trabajo desde otro.</target>
        </trans-unit>
        <trans-unit id="fef9e754382e4f5002bb7f83483631df5de227e1" translate="yes" xml:space="preserve">
          <source>In older Git versions it could be easily forgotten to commit new or modified files in a submodule, which silently leads to similar problems as not pushing the submodule changes. Starting with Git 1.7.0 both &lt;code&gt;git status&lt;/code&gt; and &lt;code&gt;git diff&lt;/code&gt; in the superproject show submodules as modified when they contain new or modified files to protect against accidentally committing such a state. &lt;code&gt;git
diff&lt;/code&gt; will also add a &lt;code&gt;-dirty&lt;/code&gt; to the work tree side when generating patch output or used with the &lt;code&gt;--submodule&lt;/code&gt; option:</source>
          <target state="translated">En versiones anteriores de Git, podr&amp;iacute;a olvidarse f&amp;aacute;cilmente enviar archivos nuevos o modificados en un subm&amp;oacute;dulo, lo que silenciosamente conduce a problemas similares a los de no presionar los cambios del subm&amp;oacute;dulo. A partir de Git 1.7.0, tanto &lt;code&gt;git status&lt;/code&gt; como &lt;code&gt;git diff&lt;/code&gt; en el superproyecto muestran los subm&amp;oacute;dulos modificados cuando contienen archivos nuevos o modificados para protegerlos contra la confirmaci&amp;oacute;n accidental de dicho estado. &lt;code&gt;git diff&lt;/code&gt; tambi&amp;eacute;n agregar&amp;aacute; un &lt;code&gt;-dirty&lt;/code&gt; al lado del &amp;aacute;rbol de trabajo cuando genere la salida del parche o se use con la opci&amp;oacute;n &lt;code&gt;--submodule&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="cea51be0687534aeac695491ce11f4552163d8c9" translate="yes" xml:space="preserve">
          <source>In order to allow extensions that add extra data to the MIDX, we organize the body into &quot;chunks&quot; and provide a lookup table at the beginning of the body. The header includes certain length values, such as the number of packs, the number of base MIDX files, hash lengths and types.</source>
          <target state="translated">Para permitir extensiones que añadan datos extra al MIDX,organizamos el cuerpo en &quot;trozos&quot; y proporcionamos una tabla de consulta al principio del cuerpo.El encabezado incluye ciertos valores de longitud,como el número de paquetes,el número de archivos MIDX base,longitudes de hash y tipos.</target>
        </trans-unit>
        <trans-unit id="f6b8f2c2e89120a466dd40e221531b6adf7a10b9" translate="yes" xml:space="preserve">
          <source>In order to determine what URL to use to fetch from, the value of the configuration &lt;code&gt;remote.&amp;lt;origin&amp;gt;.url&lt;/code&gt; is consulted and if there is not any such variable, the value on the &lt;code&gt;URL:&lt;/code&gt; line in &lt;code&gt;$GIT_DIR/remotes/&amp;lt;origin&amp;gt;&lt;/code&gt; is used.</source>
          <target state="translated">Para determinar qu&amp;eacute; URL usar para buscar, se consulta el valor de la configuraci&amp;oacute;n &lt;code&gt;remote.&amp;lt;origin&amp;gt;.url&lt;/code&gt; y si no existe tal variable, el valor en la &lt;code&gt;URL:&lt;/code&gt; l&amp;iacute;nea en &lt;code&gt;$GIT_DIR/remotes/&amp;lt;origin&amp;gt;&lt;/code&gt; se utiliza.</target>
        </trans-unit>
        <trans-unit id="1bb65c849d69cb9e41866b99d141938531c8bf39" translate="yes" xml:space="preserve">
          <source>In order to determine what remote branches to fetch (and optionally store in the remote-tracking branches) when the command is run without any refspec parameters on the command line, values of the configuration variable &lt;code&gt;remote.&amp;lt;origin&amp;gt;.fetch&lt;/code&gt; are consulted, and if there aren&amp;rsquo;t any, &lt;code&gt;$GIT_DIR/remotes/&amp;lt;origin&amp;gt;&lt;/code&gt; is consulted and its &lt;code&gt;Pull:&lt;/code&gt; lines are used. In addition to the refspec formats described in the OPTIONS section, you can have a globbing refspec that looks like this:</source>
          <target state="translated">Para determinar qu&amp;eacute; ramas remotas buscar (y opcionalmente almacenar en las ramas de seguimiento remoto) cuando el comando se ejecuta sin ning&amp;uacute;n par&amp;aacute;metro refspec en la l&amp;iacute;nea de comando, se consultan los valores de la variable de configuraci&amp;oacute;n &lt;code&gt;remote.&amp;lt;origin&amp;gt;.fetch&lt;/code&gt; , y si no los hay, se consulta &lt;code&gt;$GIT_DIR/remotes/&amp;lt;origin&amp;gt;&lt;/code&gt; y se utilizan sus l&amp;iacute;neas &lt;code&gt;Pull:&lt;/code&gt; .Adem&amp;aacute;s de los formatos refspec descritos en la secci&amp;oacute;n OPCIONES, puede tener una refspec globbing que se ve as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="b571757e7fe93a92c37f6bdbb5b1d110de433e8f" translate="yes" xml:space="preserve">
          <source>In order to ensure a current tracking branch state, &lt;code&gt;update --remote&lt;/code&gt; fetches the submodule&amp;rsquo;s remote repository before calculating the SHA-1. If you don&amp;rsquo;t want to fetch, you should use &lt;code&gt;submodule update
--remote --no-fetch&lt;/code&gt;.</source>
          <target state="translated">Para garantizar un estado de rama de seguimiento actual, &lt;code&gt;update --remote&lt;/code&gt; recupera el repositorio remoto del subm&amp;oacute;dulo antes de calcular el SHA-1. Si no desea buscar, debe usar la &lt;code&gt;submodule update --remote --no-fetch&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9ecc869f1231e06aba76a745114504d0b9155917" translate="yes" xml:space="preserve">
          <source>In order to have configuration specific to working trees, you can turn on &quot;worktreeConfig&quot; extension, e.g.:</source>
          <target state="translated">Para tener una configuración específica de los árboles de trabajo,se puede activar la extensión &quot;worktreeConfig&quot;,por ejemplo:</target>
        </trans-unit>
        <trans-unit id="eb76ce16c3a3c52ec0347fc95609ba6324ad6c16" translate="yes" xml:space="preserve">
          <source>In order to protect the privacy of objects that have been removed from history but may not yet have been pruned, &lt;code&gt;git-upload-archive&lt;/code&gt; avoids serving archives for commits and trees that are not reachable from the repository&amp;rsquo;s refs. However, because calculating object reachability is computationally expensive, &lt;code&gt;git-upload-archive&lt;/code&gt; implements a stricter but easier-to-check set of rules:</source>
          <target state="translated">Para proteger la privacidad de los objetos que se han eliminado del historial pero que a&amp;uacute;n no se han eliminado, &lt;code&gt;git-upload-archive&lt;/code&gt; evita entregar archivos para confirmaciones y &amp;aacute;rboles a los que no se puede acceder desde las referencias del repositorio. Sin embargo, debido a que calcular la accesibilidad del objeto es computacionalmente costoso, &lt;code&gt;git-upload-archive&lt;/code&gt; implementa un conjunto de reglas m&amp;aacute;s estricto pero m&amp;aacute;s f&amp;aacute;cil de verificar:</target>
        </trans-unit>
        <trans-unit id="17696fe6311cd47e2efc1108f911bdeb8c2c0989" translate="yes" xml:space="preserve">
          <source>In order to set &quot;assume unchanged&quot; bit, use &lt;code&gt;--assume-unchanged&lt;/code&gt; option. To unset, use &lt;code&gt;--no-assume-unchanged&lt;/code&gt;. To see which files have the &quot;assume unchanged&quot; bit set, use &lt;code&gt;git ls-files -v&lt;/code&gt; (see &lt;a href=&quot;git-ls-files&quot;&gt;git-ls-files[1]&lt;/a&gt;).</source>
          <target state="translated">Para establecer el bit &quot;asumir sin cambios&quot;, use la opci&amp;oacute;n &lt;code&gt;--assume-unchanged&lt;/code&gt; . Para desarmar, use &lt;code&gt;--no-assume-unchanged&lt;/code&gt; . Para ver qu&amp;eacute; archivos tienen el conjunto de bits &quot;asumir sin cambios&quot;, use &lt;code&gt;git ls-files -v&lt;/code&gt; (consulte &lt;a href=&quot;git-ls-files&quot;&gt;git-ls-files [1]&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="267b1e8e9ade7b3919e26586bb280b53787cfd98" translate="yes" xml:space="preserve">
          <source>In other messages Andreas says that they also use the &quot;best practices&quot; described above: small logical commits, topic branches, no evil merge,&amp;hellip;​ These practices all improve the bisectability of the commit graph, by making it easier and more useful to bisect.</source>
          <target state="translated">En otros mensajes, Andreas dice que tambi&amp;eacute;n utilizan las &quot;mejores pr&amp;aacute;cticas&quot; descritas anteriormente: peque&amp;ntilde;as confirmaciones l&amp;oacute;gicas, ramas tem&amp;aacute;ticas, sin fusi&amp;oacute;n maligna, ... Todas estas pr&amp;aacute;cticas mejoran la bisectabilidad del gr&amp;aacute;fico de confirmaciones, al hacer que sea m&amp;aacute;s f&amp;aacute;cil y &amp;uacute;til bisecar .</target>
        </trans-unit>
        <trans-unit id="cbba08cd602a94910294469b1bfe69221cf43d34" translate="yes" xml:space="preserve">
          <source>In other words, &lt;code&gt;--merge&lt;/code&gt; does something like a &lt;code&gt;git read-tree -u -m &amp;lt;commit&amp;gt;&lt;/code&gt;, but carries forward unmerged index entries.</source>
          <target state="translated">En otras palabras, &lt;code&gt;--merge&lt;/code&gt; hace algo como un &lt;code&gt;git read-tree -u -m &amp;lt;commit&amp;gt;&lt;/code&gt; , pero lleva adelante las entradas de &amp;iacute;ndice no fusionadas.</target>
        </trans-unit>
        <trans-unit id="2c3347c08edbf67732cb77724b9990f6671bac50" translate="yes" xml:space="preserve">
          <source>In other words, &lt;code&gt;git diff-files&lt;/code&gt; always shows us the difference between what is recorded in the index, and what is currently in the working tree. That&amp;rsquo;s very useful.</source>
          <target state="translated">En otras palabras, &lt;code&gt;git diff-files&lt;/code&gt; siempre nos muestra la diferencia entre lo que est&amp;aacute; registrado en el &amp;iacute;ndice y lo que est&amp;aacute; actualmente en el &amp;aacute;rbol de trabajo. Eso es muy &amp;uacute;til.</target>
        </trans-unit>
        <trans-unit id="7466e77eb24cbec56937901c0950f635d6a29d08" translate="yes" xml:space="preserve">
          <source>In other words, &lt;code&gt;git diff-index&lt;/code&gt; normally compares a tree against the working tree, but when given the &lt;code&gt;--cached&lt;/code&gt; flag, it is told to instead compare against just the index cache contents, and ignore the current working tree state entirely. Since we just wrote the index file to HEAD, doing &lt;code&gt;git diff-index --cached -p HEAD&lt;/code&gt; should thus return an empty set of differences, and that&amp;rsquo;s exactly what it does.</source>
          <target state="translated">En otras palabras, &lt;code&gt;git diff-index&lt;/code&gt; normalmente compara un &amp;aacute;rbol con el &amp;aacute;rbol de trabajo, pero cuando se le da el indicador &lt;code&gt;--cached&lt;/code&gt; , se le dice que en su lugar se compare solo con el contenido de la cach&amp;eacute; del &amp;iacute;ndice e ignore por completo el estado actual del &amp;aacute;rbol de trabajo. Como acabamos de escribir el archivo de &amp;iacute;ndice en HEAD, hacer &lt;code&gt;git diff-index --cached -p HEAD&lt;/code&gt; deber&amp;iacute;a devolver un conjunto vac&amp;iacute;o de diferencias, y eso es exactamente lo que hace.</target>
        </trans-unit>
        <trans-unit id="8c2ef787b7de3a9f3b5df9786c452fde9692465e" translate="yes" xml:space="preserve">
          <source>In other words, there is no need to worry about what exists only in the working tree. When you have local changes in a part of the project that is not involved in the merge, your changes do not interfere with the merge, and are kept intact. When they &lt;strong&gt;do&lt;/strong&gt; interfere, the merge does not even start (&lt;code&gt;git read-tree&lt;/code&gt; complains loudly and fails without modifying anything). In such a case, you can simply continue doing what you were in the middle of doing, and when your working tree is ready (i.e. you have finished your work-in-progress), attempt the merge again.</source>
          <target state="translated">En otras palabras, no hay necesidad de preocuparse por lo que existe solo en el &amp;aacute;rbol de trabajo. Cuando tiene cambios locales en una parte del proyecto que no est&amp;aacute; involucrada en la combinaci&amp;oacute;n, sus cambios no interfieren con la combinaci&amp;oacute;n y se mantienen intactos. Cuando &lt;strong&gt;no&lt;/strong&gt; interfieren, la fusi&amp;oacute;n ni siquiera se inicia ( &lt;code&gt;git read-tree&lt;/code&gt; se queja en voz alta y falla sin modificar nada). En tal caso, simplemente puede continuar haciendo lo que estaba haciendo y cuando su &amp;aacute;rbol de trabajo est&amp;eacute; listo (es decir, haya terminado su trabajo en progreso), intente la fusi&amp;oacute;n nuevamente.</target>
        </trans-unit>
        <trans-unit id="5a674f35b2eda0a90a7f397ea7dadc5a212b7275" translate="yes" xml:space="preserve">
          <source>In other words, while a &quot;tree&quot; represents a particular directory state of a working directory, a &quot;commit&quot; represents that state in time, and explains how we got there.</source>
          <target state="translated">En otras palabras,mientras que un &quot;árbol&quot; representa un estado de directorio particular de un directorio de trabajo,un &quot;commit&quot; representa ese estado en el tiempo,y explica cómo llegamos allí.</target>
        </trans-unit>
        <trans-unit id="857191c898a7fbefd37c145d86f76b0005dd57eb" translate="yes" xml:space="preserve">
          <source>In other words, you can easily validate a whole archive by just sending out a single email that tells the people the name (SHA-1 hash) of the top commit, and digitally sign that email using something like GPG/PGP.</source>
          <target state="translated">En otras palabras,puedes validar fácilmente un archivo completo enviando un solo correo electrónico que le diga a la gente el nombre (SHA-1 hash)del máximo commit,y firmar digitalmente ese correo electrónico usando algo como GPG/PGP.</target>
        </trans-unit>
        <trans-unit id="e52122aac7e01b0550d02d6bfc5c4fbaa85b48ac" translate="yes" xml:space="preserve">
          <source>In our example of only two files, we did not have unchanged files so only &lt;code&gt;example&lt;/code&gt; resulted in collapsing. But in real-life large projects, when only a small number of files change in one commit, this &lt;code&gt;collapsing&lt;/code&gt; tends to trivially merge most of the paths fairly quickly, leaving only a handful of real changes in non-zero stages.</source>
          <target state="translated">En nuestro ejemplo de solo dos archivos, no ten&amp;iacute;amos archivos sin cambios, por lo que solo el &lt;code&gt;example&lt;/code&gt; result&amp;oacute; en colapso. Pero en proyectos grandes de la vida real, cuando solo una peque&amp;ntilde;a cantidad de archivos cambia en una confirmaci&amp;oacute;n, este &lt;code&gt;collapsing&lt;/code&gt; tiende a fusionar trivialmente la mayor&amp;iacute;a de las rutas con bastante rapidez, dejando solo un pu&amp;ntilde;ado de cambios reales en etapas distintas de cero.</target>
        </trans-unit>
        <trans-unit id="a3569415a118c16e9c5d7e18e58096bbd8336f98" translate="yes" xml:space="preserve">
          <source>In our example, when you do the test merge, the manual resolution is recorded, and it will be reused when you do the actual merge later with the updated master and topic branch, as long as the recorded resolution is still applicable.</source>
          <target state="translated">En nuestro ejemplo,cuando se hace la fusión de prueba,se registra la resolución manual,y se reutilizará cuando se haga la fusión real más tarde con la rama maestra y temática actualizada,siempre que la resolución registrada siga siendo aplicable.</target>
        </trans-unit>
        <trans-unit id="8e5ca17ff33890ba6e129c741e431196f019fa29" translate="yes" xml:space="preserve">
          <source>In overlay mode, the command never removes files when restoring. In no-overlay mode, tracked files that do not appear in the &lt;code&gt;--source&lt;/code&gt; tree are removed, to make them match &lt;code&gt;&amp;lt;tree&amp;gt;&lt;/code&gt; exactly. The default is no-overlay mode.</source>
          <target state="translated">En el modo de superposici&amp;oacute;n, el comando nunca elimina archivos al restaurar. En ning&amp;uacute;n modo de superposici&amp;oacute;n, los archivos que no aparecen en el seguimiento &lt;code&gt;--source&lt;/code&gt; &amp;aacute;rbol se eliminan, a hacer que coincidan &lt;code&gt;&amp;lt;tree&amp;gt;&lt;/code&gt; exactamente. El valor predeterminado es el modo sin superposici&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="5b1c0d5c1dcebbb2369ea9f003ec30402ee8a395" translate="yes" xml:space="preserve">
          <source>In particular, let&amp;rsquo;s not even check in the two files into Git yet, we&amp;rsquo;ll start off by adding another line to &lt;code&gt;hello&lt;/code&gt; first:</source>
          <target state="translated">En particular, ni siquiera registramos los dos archivos en Git todav&amp;iacute;a, comenzaremos agregando otra l&amp;iacute;nea para &lt;code&gt;hello&lt;/code&gt; primero:</target>
        </trans-unit>
        <trans-unit id="d0e454374a9a3ee3d6a441cd0674139a3f061022" translate="yes" xml:space="preserve">
          <source>In particular, the &lt;code&gt;refs&lt;/code&gt; subdirectory will contain two other subdirectories, named &lt;code&gt;heads&lt;/code&gt; and &lt;code&gt;tags&lt;/code&gt; respectively. They do exactly what their names imply: they contain references to any number of different &lt;code&gt;heads&lt;/code&gt; of development (aka &lt;code&gt;branches&lt;/code&gt;), and to any &lt;code&gt;tags&lt;/code&gt; that you have created to name specific versions in your repository.</source>
          <target state="translated">En particular, el subdirectorio &lt;code&gt;refs&lt;/code&gt; contendr&amp;aacute; otros dos subdirectorios, denominados &lt;code&gt;heads&lt;/code&gt; y &lt;code&gt;tags&lt;/code&gt; respectivamente. Hacen exactamente lo que sus nombres implican: contienen referencias a cualquier n&amp;uacute;mero de &lt;code&gt;heads&lt;/code&gt; de desarrollo diferentes (tambi&amp;eacute;n conocidos como &lt;code&gt;branches&lt;/code&gt; ) y a cualquier &lt;code&gt;tags&lt;/code&gt; que haya creado para nombrar versiones espec&amp;iacute;ficas en su repositorio.</target>
        </trans-unit>
        <trans-unit id="2037a0a7d55894c0e552cd3905604e14aef5f5cc" translate="yes" xml:space="preserve">
          <source>In practice, you can interleave and repeat steps 1 and 2 as many times as you want: in order to keep track of what you want committed at step 3, Git maintains a snapshot of the tree&amp;rsquo;s contents in a special staging area called &quot;the index.&quot;</source>
          <target state="translated">En la pr&amp;aacute;ctica, puede intercalar y repetir los pasos 1 y 2 tantas veces como desee: para realizar un seguimiento de lo que desea comprometer en el paso 3, Git mantiene una instant&amp;aacute;nea del contenido del &amp;aacute;rbol en un &amp;aacute;rea de preparaci&amp;oacute;n especial llamada &quot;el &amp;iacute;ndice . &quot;</target>
        </trans-unit>
        <trans-unit id="f0e4ad3997791ffc68facd5c602055afb63229a5" translate="yes" xml:space="preserve">
          <source>In principle, a note is a regular Git blob, and any kind of (non-)format is accepted. You can binary-safely create notes from arbitrary files using &lt;code&gt;git hash-object&lt;/code&gt;:</source>
          <target state="translated">En principio, una nota es un blob de Git normal y se acepta cualquier tipo de formato (no). Puede crear notas de forma binaria a partir de archivos arbitrarios usando &lt;code&gt;git hash-object&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="4601fb728bee4aeccfe338414983070eaafe0d7b" translate="yes" xml:space="preserve">
          <source>In protocol v2 communication is command oriented. When first contacting a server a list of capabilities will advertised. Some of these capabilities will be commands which a client can request be executed. Once a command has completed, a client can reuse the connection and request that other commands be executed.</source>
          <target state="translated">En el protocolo v2 la comunicación está orientada a los comandos.Cuando se contacta por primera vez con un servidor se anuncia una lista de capacidades.Algunas de estas capacidades serán comandos que un cliente puede solicitar que se ejecuten.Una vez que un comando se ha completado,un cliente puede reutilizar la conexión y solicitar que se ejecuten otros comandos.</target>
        </trans-unit>
        <trans-unit id="f1e89ddf0408f3e3f9aa71b3da7906ab579cf106" translate="yes" xml:space="preserve">
          <source>In protocol v2 these special packets will have the following semantics:</source>
          <target state="translated">En el protocolo v2 estos paquetes especiales tendrán la siguiente semántica:</target>
        </trans-unit>
        <trans-unit id="0b2a25ba5b09240510379a9523ee7fbbaeebe9c6" translate="yes" xml:space="preserve">
          <source>In some cases it is possible that the new head will &lt;strong&gt;not&lt;/strong&gt; actually be a descendant of the old head. For example, the developer may have realized she made a serious mistake, and decided to backtrack, resulting in a situation like:</source>
          <target state="translated">En algunos casos, es posible que el nuevo l&amp;iacute;der &lt;strong&gt;no&lt;/strong&gt; sea ​​realmente un descendiente del anterior. Por ejemplo, el desarrollador puede haberse dado cuenta de que cometi&amp;oacute; un grave error y decidi&amp;oacute; dar marcha atr&amp;aacute;s, lo que result&amp;oacute; en una situaci&amp;oacute;n como:</target>
        </trans-unit>
        <trans-unit id="013d925394580efad8fc98d09cd78b65808be1a0" translate="yes" xml:space="preserve">
          <source>In some cases like for kernel development it can be worth developing complex scripts to be able to fully automate bisecting.</source>
          <target state="translated">En algunos casos,como en el caso del desarrollo del núcleo,puede valer la pena desarrollar guiones complejos para poder automatizar completamente la bisección.</target>
        </trans-unit>
        <trans-unit id="0a49ce3de43e8ee8d78f327f1f504c6a86228a99" translate="yes" xml:space="preserve">
          <source>In some situations the reflog may not be able to save you. For example, suppose you delete a branch, then realize you need the history it contained. The reflog is also deleted; however, if you have not yet pruned the repository, then you may still be able to find the lost commits in the dangling objects that &lt;code&gt;git fsck&lt;/code&gt; reports. See &lt;a href=&quot;#dangling-objects&quot;&gt;Dangling objects&lt;/a&gt; for the details.</source>
          <target state="translated">En algunas situaciones, es posible que el reflog no pueda salvarlo. Por ejemplo, suponga que elimina una rama y luego se da cuenta de que necesita el historial que contiene. El reflog tambi&amp;eacute;n se elimina; sin embargo, si a&amp;uacute;n no ha podado el repositorio, es posible que a&amp;uacute;n pueda encontrar las confirmaciones perdidas en los objetos colgantes que informa &lt;code&gt;git fsck&lt;/code&gt; . Consulte &lt;a href=&quot;#dangling-objects&quot;&gt;Objetos colgantes&lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="4f2c24901ef5f6fa3a7b78ff609de06af9cfd2f7" translate="yes" xml:space="preserve">
          <source>In sparse checkout mode, &lt;code&gt;git checkout -- &amp;lt;paths&amp;gt;&lt;/code&gt; would update only entries matched by &lt;code&gt;&amp;lt;paths&amp;gt;&lt;/code&gt; and sparse patterns in &lt;code&gt;$GIT_DIR/info/sparse-checkout&lt;/code&gt;. This option ignores the sparse patterns and adds back any files in &lt;code&gt;&amp;lt;paths&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">En el modo de pago disperso, &lt;code&gt;git checkout -- &amp;lt;paths&amp;gt;&lt;/code&gt; actualizar&amp;iacute;a solo las entradas que coincidan con &lt;code&gt;&amp;lt;paths&amp;gt;&lt;/code&gt; y patrones dispersos en &lt;code&gt;$GIT_DIR/info/sparse-checkout&lt;/code&gt; . Esta opci&amp;oacute;n ignora los patrones dispersos y vuelve a agregar cualquier archivo en &lt;code&gt;&amp;lt;paths&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="91e2068ee07240a386da6a01584d7cb7bf48667f" translate="yes" xml:space="preserve">
          <source>In sparse checkout mode, by default is to only update entries matched by &lt;code&gt;&amp;lt;pathspec&amp;gt;&lt;/code&gt; and sparse patterns in $GIT_DIR/info/sparse-checkout. This option ignores the sparse patterns and unconditionally restores any files in &lt;code&gt;&amp;lt;pathspec&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">En el modo de pago disperso, de forma predeterminada solo se actualizan las entradas que coinciden con &lt;code&gt;&amp;lt;pathspec&amp;gt;&lt;/code&gt; y los patrones dispersos en $ GIT_DIR / info / sparse-checkout. Esta opci&amp;oacute;n ignora los patrones dispersos y restaura incondicionalmente cualquier archivo en &lt;code&gt;&amp;lt;pathspec&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9805e95abc4cc7297991de78ec147328f379f9f9" translate="yes" xml:space="preserve">
          <source>In such a case, &lt;code&gt;git merge-base origin/master topic&lt;/code&gt; would return the parent of B0 in the above picture, but B0^..D is &lt;strong&gt;not&lt;/strong&gt; the range of commits you would want to replay on top of B (it includes B0, which is not what you wrote; it is a commit the other side discarded when it moved its tip from B0 to B1).</source>
          <target state="translated">En tal caso, &lt;code&gt;git merge-base origin/master topic&lt;/code&gt; devolver&amp;iacute;a el padre de B0 en la imagen de arriba, pero B0 ^ .. D &lt;strong&gt;no&lt;/strong&gt; es el rango de confirmaciones que le gustar&amp;iacute;a reproducir en la parte superior de B (incluye B0, que no es lo que escribiste; es un compromiso que el otro lado descart&amp;oacute; cuando movi&amp;oacute; su punta de B0 a B1).</target>
        </trans-unit>
        <trans-unit id="38c59b4cda1fb890b6373e0ee120752a69f46faf" translate="yes" xml:space="preserve">
          <source>In such a case, you can &quot;unwrap&quot; the tag yourself before feeding it to &lt;code&gt;git merge&lt;/code&gt;, or pass &lt;code&gt;--ff-only&lt;/code&gt; when you do not have any work on your own. e.g.</source>
          <target state="translated">En tal caso, puede &quot;desenvolver&quot; la etiqueta usted mismo antes de &lt;code&gt;--ff-only&lt;/code&gt; en &lt;code&gt;git merge&lt;/code&gt; , o pasar --ff-only cuando no tenga ning&amp;uacute;n trabajo por su cuenta. p.ej</target>
        </trans-unit>
        <trans-unit id="122c6a9f6232138a6047defa817d1eec04cb3f10" translate="yes" xml:space="preserve">
          <source>In such a case, you do not want to automatically follow the other person&amp;rsquo;s tags.</source>
          <target state="translated">En tal caso, no desea seguir autom&amp;aacute;ticamente las etiquetas de la otra persona.</target>
        </trans-unit>
        <trans-unit id="14b066e7c220e701d278a048087bd2ff212888b8" translate="yes" xml:space="preserve">
          <source>In such cases it can be very confusing to use the terms &quot;good&quot; and &quot;bad&quot; to refer to &quot;the state before the change&quot; and &quot;the state after the change&quot;. So instead, you can use the terms &quot;old&quot; and &quot;new&quot;, respectively, in place of &quot;good&quot; and &quot;bad&quot;. (But note that you cannot mix &quot;good&quot; and &quot;bad&quot; with &quot;old&quot; and &quot;new&quot; in a single session.)</source>
          <target state="translated">En esos casos puede ser muy confuso utilizar los términos &quot;bueno&quot; y &quot;malo&quot; para referirse a &quot;el estado antes del cambio&quot; y &quot;el estado después del cambio&quot;.Así que en su lugar se pueden usar los términos &quot;viejo&quot; y &quot;nuevo&quot;,respectivamente,en lugar de &quot;bueno&quot; y &quot;malo&quot;.(Pero tened en cuenta que no podéis mezclar &quot;bueno&quot; y &quot;malo&quot; con &quot;antiguo&quot; y &quot;nuevo&quot; en una sola sesión).</target>
        </trans-unit>
        <trans-unit id="abac94a936763ce45a21b8291dbe11f8fcd73ae6" translate="yes" xml:space="preserve">
          <source>In such cases, git-cherry shows a concise summary of what has yet to be applied:</source>
          <target state="translated">En esos casos,git-cherry muestra un resumen conciso de lo que aún no se ha aplicado:</target>
        </trans-unit>
        <trans-unit id="46cccce64f7cd9f50066dd3d9623630b5fee1925" translate="yes" xml:space="preserve">
          <source>In that case, &lt;code&gt;git pull&lt;/code&gt; can do the fetch and merge in one go, as follows.</source>
          <target state="translated">En ese caso, &lt;code&gt;git pull&lt;/code&gt; puede buscar y fusionar de una sola vez, de la siguiente manera.</target>
        </trans-unit>
        <trans-unit id="724c7d4dfedb54b8a53a948ec5bdabaee78995fb" translate="yes" xml:space="preserve">
          <source>In that case, the fix is easy because &lt;code&gt;git rebase&lt;/code&gt; knows to skip changes that are already present in the new upstream. So if you say (assuming you&amp;rsquo;re on &lt;code&gt;topic&lt;/code&gt;)</source>
          <target state="translated">En ese caso, la soluci&amp;oacute;n es f&amp;aacute;cil porque &lt;code&gt;git rebase&lt;/code&gt; sabe omitir los cambios que ya est&amp;aacute;n presentes en el nuevo upstream. Entonces, si dices (asumiendo que est&amp;aacute;s en el &lt;code&gt;topic&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="e2f5cdfecd5b61a82b453fde83701ee64b8d8237" translate="yes" xml:space="preserve">
          <source>In that case, you can still force Git to update to the new head, as described in the following section. However, note that in the situation above this may mean losing the commits labeled &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;, unless you&amp;rsquo;ve already created a reference of your own pointing to them.</source>
          <target state="translated">En ese caso, a&amp;uacute;n puede forzar a Git a actualizar al nuevo encabezado, como se describe en la siguiente secci&amp;oacute;n. Sin embargo, tenga en cuenta que en la situaci&amp;oacute;n anterior, esto puede significar perder las confirmaciones etiquetadas &lt;code&gt;a&lt;/code&gt; y &lt;code&gt;b&lt;/code&gt; , a menos que ya haya creado una referencia propia que las se&amp;ntilde;ale.</target>
        </trans-unit>
        <trans-unit id="23201c1eda40e4016771870c9d54dd5324857456" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;git push&lt;/code&gt; command above we specify the name of the remote branch to update (&lt;code&gt;master&lt;/code&gt;). If we leave that out, &lt;code&gt;git push&lt;/code&gt; tries to update any branches in the remote repository that have the same name as a branch in the local repository. So the last &lt;code&gt;push&lt;/code&gt; can be done with either of:</source>
          <target state="translated">En el comando &lt;code&gt;git push&lt;/code&gt; anterior, especificamos el nombre de la rama remota para actualizar ( &lt;code&gt;master&lt;/code&gt; ). Si lo dejamos fuera, &lt;code&gt;git push&lt;/code&gt; intenta actualizar cualquier rama en el repositorio remoto que tenga el mismo nombre que una rama en el repositorio local. Entonces, el &amp;uacute;ltimo &lt;code&gt;push&lt;/code&gt; se puede hacer con cualquiera de los siguientes:</target>
        </trans-unit>
        <trans-unit id="090c003198124abd0a59f9db99cb23a0a9d08a0d" translate="yes" xml:space="preserve">
          <source>In the above config only the submodule &lt;code&gt;bar&lt;/code&gt; and &lt;code&gt;baz&lt;/code&gt; are active, &lt;code&gt;bar&lt;/code&gt; due to (1) and &lt;code&gt;baz&lt;/code&gt; due to (3). &lt;code&gt;foo&lt;/code&gt; is inactive because (1) takes precedence over (3)</source>
          <target state="translated">En la configuraci&amp;oacute;n anterior, solo la &lt;code&gt;bar&lt;/code&gt; ra del subm&amp;oacute;dulo y &lt;code&gt;baz&lt;/code&gt; est&amp;aacute;n activos, la &lt;code&gt;bar&lt;/code&gt; ra debido a (1) y &lt;code&gt;baz&lt;/code&gt; debido a (3). &lt;code&gt;foo&lt;/code&gt; est&amp;aacute; inactivo porque (1) tiene prioridad sobre (3)</target>
        </trans-unit>
        <trans-unit id="f2615d435cf358760e53af78267e9744a2a4cd7e" translate="yes" xml:space="preserve">
          <source>In the above example output, the function signature was changed from both files (hence two &lt;code&gt;-&lt;/code&gt; removals from both file1 and file2, plus &lt;code&gt;++&lt;/code&gt; to mean one line that was added does not appear in either file1 or file2). Also eight other lines are the same from file1 but do not appear in file2 (hence prefixed with &lt;code&gt;+&lt;/code&gt;).</source>
          <target state="translated">En el resultado del ejemplo anterior, la firma de la funci&amp;oacute;n se cambi&amp;oacute; de ambos archivos (por lo tanto, dos &lt;code&gt;-&lt;/code&gt; eliminaciones de file1 y file2, m&amp;aacute;s &lt;code&gt;++&lt;/code&gt; para significar que una l&amp;iacute;nea que se agreg&amp;oacute; no aparece ni en file1 ni en file2). Adem&amp;aacute;s, otras ocho l&amp;iacute;neas son iguales desde el archivo1 pero no aparecen en el archivo2 (por lo tanto, tienen el prefijo &lt;code&gt;+&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="236d1518399c3b158b7b503f699f9dfd06244979" translate="yes" xml:space="preserve">
          <source>In the above example we have N = 8, so this will give:</source>
          <target state="translated">En el ejemplo anterior tenemos N=8,por lo que esto dará:</target>
        </trans-unit>
        <trans-unit id="4faa5ab35bd05c089c7f00cb50d40bc6a34dd151" translate="yes" xml:space="preserve">
          <source>In the case where the input consists entirely of whitespace characters, no output will be produced.</source>
          <target state="translated">En el caso de que la entrada consista enteramente en caracteres de espacio en blanco,no se producirá ninguna salida.</target>
        </trans-unit>
        <trans-unit id="6722ed28b0a968c96593a6b207713cd0f24f7d3a" translate="yes" xml:space="preserve">
          <source>In the check-in codepath, the worktree file is first converted with &lt;code&gt;filter&lt;/code&gt; driver (if specified and corresponding driver defined), then the result is processed with &lt;code&gt;ident&lt;/code&gt; (if specified), and then finally with &lt;code&gt;text&lt;/code&gt; (again, if specified and applicable).</source>
          <target state="translated">En la ruta de c&amp;oacute;digo de registro, el archivo del &amp;aacute;rbol de trabajo se convierte primero con el controlador de &lt;code&gt;filter&lt;/code&gt; (si se especifica y el controlador correspondiente se define), luego el resultado se procesa con &lt;code&gt;ident&lt;/code&gt; (si se especifica) y finalmente con &lt;code&gt;text&lt;/code&gt; o (nuevamente, si se especifica y aplica) .</target>
        </trans-unit>
        <trans-unit id="41a87794ee334f48f97053e2010dfe2b224b3e78" translate="yes" xml:space="preserve">
          <source>In the check-out codepath, the blob content is first converted with &lt;code&gt;text&lt;/code&gt;, and then &lt;code&gt;ident&lt;/code&gt; and fed to &lt;code&gt;filter&lt;/code&gt;.</source>
          <target state="translated">En la ruta de c&amp;oacute;digo de salida, el contenido del blob primero se convierte con &lt;code&gt;text&lt;/code&gt; o y luego se &lt;code&gt;ident&lt;/code&gt; ifica y se env&amp;iacute;a al &lt;code&gt;filter&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="113fa915b38684bf235e931affc2401ec6de4a63" translate="yes" xml:space="preserve">
          <source>In the cone mode case, the &lt;code&gt;git sparse-checkout list&lt;/code&gt; subcommand will list the directories that define the recursive patterns. For the example sparse-checkout file above, the output is as follows:</source>
          <target state="translated">En el caso del modo cono, el subcomando &lt;code&gt;git sparse-checkout list&lt;/code&gt; enumerar&amp;aacute; los directorios que definen los patrones recursivos. Para el ejemplo de archivo de pago disperso anterior, el resultado es el siguiente:</target>
        </trans-unit>
        <trans-unit id="50d1a515997c60c54243bae252639aa03db105b6" translate="yes" xml:space="preserve">
          <source>In the default overlay mode, &lt;code&gt;git checkout&lt;/code&gt; never removes files from the index or the working tree. When specifying &lt;code&gt;--no-overlay&lt;/code&gt;, files that appear in the index and working tree, but not in &lt;code&gt;&amp;lt;tree-ish&amp;gt;&lt;/code&gt; are removed, to make them match &lt;code&gt;&amp;lt;tree-ish&amp;gt;&lt;/code&gt; exactly.</source>
          <target state="translated">En el modo de superposici&amp;oacute;n predeterminado, &lt;code&gt;git checkout&lt;/code&gt; nunca elimina archivos del &amp;iacute;ndice o del &amp;aacute;rbol de trabajo. Al especificar &lt;code&gt;--no-overlay&lt;/code&gt; , los archivos que aparecen en el &amp;iacute;ndice y el &amp;aacute;rbol de trabajo, pero no en &lt;code&gt;&amp;lt;tree-ish&amp;gt;&lt;/code&gt; , se eliminan para que coincidan exactamente con &lt;code&gt;&amp;lt;tree-ish&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6cdd96542ff31058533f7beb40eadd124991c8c5" translate="yes" xml:space="preserve">
          <source>In the early days, Git (in the tradition of UNIX) was a bunch of programs which were extremely simple, and which you used in scripts, piping the output of one into another. This turned out to be good for initial development, since it was easier to test new things. However, recently many of these parts have become builtins, and some of the core has been &quot;libified&quot;, i.e. put into libgit.a for performance, portability reasons, and to avoid code duplication.</source>
          <target state="translated">En los primeros días,Git (en la tradición de UNIX)era un montón de programas que eran extremadamente simples,y que se usaban en scripts,canalizando la salida de uno en otro.Esto resultó ser bueno para el desarrollo inicial,ya que era más fácil probar cosas nuevas.Sin embargo,recientemente muchas de estas partes se han convertido en builtins,y parte del núcleo se ha &quot;liberado&quot;,es decir,se ha puesto en libgit.a por razones de rendimiento,portabilidad y para evitar la duplicación de código.</target>
        </trans-unit>
        <trans-unit id="5c0100c9df6abb7d7f1348c7fe307c535cc01a6e" translate="yes" xml:space="preserve">
          <source>In the examples, the following &lt;code&gt;.gitattributes&lt;/code&gt; file is used:</source>
          <target state="translated">En los ejemplos, se utiliza el siguiente archivo &lt;code&gt;.gitattributes&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="cc3fe53f7a76d1235b536b2f3e4aace1aeafd632" translate="yes" xml:space="preserve">
          <source>In the external editor window, read in the patch file and exit the editor normally.</source>
          <target state="translated">En la ventana del editor externo,lea el archivo de parches y salga del editor normalmente.</target>
        </trans-unit>
        <trans-unit id="8ef2e6de3f32f727ff12807f3683863dc57cb535" translate="yes" xml:space="preserve">
          <source>In the first form, it renames &amp;lt;source&amp;gt;, which must exist and be either a file, symlink or directory, to &amp;lt;destination&amp;gt;. In the second form, the last argument has to be an existing directory; the given sources will be moved into this directory.</source>
          <target state="translated">En la primera forma, cambia el nombre de &amp;lt;origen&amp;gt;, que debe existir y ser un archivo, enlace simb&amp;oacute;lico o directorio, a &amp;lt;destino&amp;gt;. En la segunda forma, el &amp;uacute;ltimo argumento tiene que ser un directorio existente; las fuentes dadas se mover&amp;aacute;n a este directorio.</target>
        </trans-unit>
        <trans-unit id="76aeefd352a6b656fb05dc49a2aa92d1acbe97ce" translate="yes" xml:space="preserve">
          <source>In the first three forms, copy entries from &lt;code&gt;&amp;lt;tree-ish&amp;gt;&lt;/code&gt; to the index. In the last form, set the current branch head (&lt;code&gt;HEAD&lt;/code&gt;) to &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt;, optionally modifying index and working tree to match. The &lt;code&gt;&amp;lt;tree-ish&amp;gt;&lt;/code&gt;/&lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; defaults to &lt;code&gt;HEAD&lt;/code&gt; in all forms.</source>
          <target state="translated">En los primeros tres formularios, copie las entradas de &lt;code&gt;&amp;lt;tree-ish&amp;gt;&lt;/code&gt; al &amp;iacute;ndice. En el &amp;uacute;ltimo formulario, establezca el encabezado de rama actual ( &lt;code&gt;HEAD&lt;/code&gt; ) en &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; , modificando opcionalmente el &amp;iacute;ndice y el &amp;aacute;rbol de trabajo para que coincidan. La &lt;code&gt;&amp;lt;tree-ish&amp;gt;&lt;/code&gt; / &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; por defecto &lt;code&gt;HEAD&lt;/code&gt; en todas sus formas.</target>
        </trans-unit>
        <trans-unit id="ef10a113d8afc34781099a24e1e343890650a1e1" translate="yes" xml:space="preserve">
          <source>In the following example, the developer works on a topic branch that refactors the way buttons are defined, and on another topic branch that uses that refactoring to implement a &quot;Report a bug&quot; button. The output of &lt;code&gt;git log --graph --format=%s -5&lt;/code&gt; may look like this:</source>
          <target state="translated">En el siguiente ejemplo, el desarrollador trabaja en una rama de tema que refactoriza la forma en que se definen los botones, y en otra rama de tema que usa esa refactorizaci&amp;oacute;n para implementar un bot&amp;oacute;n &quot;Informar un error&quot;. La salida de &lt;code&gt;git log --graph --format=%s -5&lt;/code&gt; puede verse as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="e8d35f4a27576cd3ee599047c232398088d285ec" translate="yes" xml:space="preserve">
          <source>In the following, we list all defined capabilities and for each we list which commands a helper with that capability must provide.</source>
          <target state="translated">A continuación,enumeramos todas las capacidades definidas y para cada una de ellas enumeramos los comandos que un ayudante con esa capacidad debe proporcionar.</target>
        </trans-unit>
        <trans-unit id="c56abbab61e08007b56db2739d2660b32ff3baf6" translate="yes" xml:space="preserve">
          <source>In the following, we say that commit X is &quot;reachable&quot; from commit Y if commit X is an ancestor of commit Y. Equivalently, you could say that Y is a descendant of X, or that there is a chain of parents leading from commit Y to commit X.</source>
          <target state="translated">A continuación,decimos que la comisión X es &quot;alcanzable&quot; desde la comisión Y si la comisión X es un antepasado de la comisión Y.Equivalentemente,se podría decir que Y es un descendiente de X,o que hay una cadena de padres que llevan de la comisión Y a la comisión X.</target>
        </trans-unit>
        <trans-unit id="2ab0015fa4bf468aa51dfb7b06e67d10a59ee05a" translate="yes" xml:space="preserve">
          <source>In the following, we will always refer to the same example history to illustrate the differences between simplification settings. We assume that you are filtering for a file &lt;code&gt;foo&lt;/code&gt; in this commit graph:</source>
          <target state="translated">A continuaci&amp;oacute;n, siempre nos referiremos al mismo historial de ejemplo para ilustrar las diferencias entre las configuraciones de simplificaci&amp;oacute;n. Suponemos que est&amp;aacute; filtrando por un archivo &lt;code&gt;foo&lt;/code&gt; en este gr&amp;aacute;fico de confirmaci&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="1a1825758e9c1b0f3cada9dea61b97f18e404ba1" translate="yes" xml:space="preserve">
          <source>In the ideal world, you could have realized that the earlier commit did not belong to the new topic when you created and switched to &lt;code&gt;branch2&lt;/code&gt; (i.e. &lt;code&gt;git switch -c branch2 start&lt;/code&gt;), but nobody is perfect.</source>
          <target state="translated">En el mundo ideal, podr&amp;iacute;a haberse dado cuenta de que la confirmaci&amp;oacute;n anterior no pertenec&amp;iacute;a al nuevo tema cuando cre&amp;oacute; y cambi&amp;oacute; a &lt;code&gt;branch2&lt;/code&gt; (es decir, &lt;code&gt;git switch -c branch2 start&lt;/code&gt; ), pero nadie es perfecto.</target>
        </trans-unit>
        <trans-unit id="d370a0f8ed20ae4cd4e933b9beff011b3187e6ad" translate="yes" xml:space="preserve">
          <source>In the long form, the leading colon &lt;code&gt;:&lt;/code&gt; is followed by an open parenthesis &lt;code&gt;(&lt;/code&gt;, a comma-separated list of zero or more &quot;magic words&quot;, and a close parentheses &lt;code&gt;)&lt;/code&gt;, and the remainder is the pattern to match against the path.</source>
          <target state="translated">En la forma larga, los dos puntos iniciales &lt;code&gt;:&lt;/code&gt; son seguidos por un par&amp;eacute;ntesis abierto &lt;code&gt;(&lt;/code&gt; , una lista separada por comas de cero o m&amp;aacute;s &quot;palabras m&amp;aacute;gicas&quot;, y un par&amp;eacute;ntesis cerrado &lt;code&gt;)&lt;/code&gt; , y el resto es el patr&amp;oacute;n que coincide con la ruta.</target>
        </trans-unit>
        <trans-unit id="ecbb466c633c8f376663d1974093b0b801e94fbc" translate="yes" xml:space="preserve">
          <source>In the main Thunderbird window, &lt;code&gt;before&lt;/code&gt; you open the compose window for the patch, use Tools&amp;rarr;about:config to set the following to the indicated values:</source>
          <target state="translated">En la ventana principal de Thunderbird, &lt;code&gt;before&lt;/code&gt; abrir la ventana de redacci&amp;oacute;n del parche, use Tools &amp;rarr; about: config para establecer lo siguiente en los valores indicados:</target>
        </trans-unit>
        <trans-unit id="3f70c7e45d5c392e715fb2023b23a65e5f20b82a" translate="yes" xml:space="preserve">
          <source>In the output from &lt;code&gt;git show-branch&lt;/code&gt;, &lt;code&gt;master&lt;/code&gt; should have everything &lt;code&gt;ko/master&lt;/code&gt; has, and &lt;code&gt;next&lt;/code&gt; should have everything &lt;code&gt;ko/next&lt;/code&gt; has, etc.</source>
          <target state="translated">En la salida de &lt;code&gt;git show-branch&lt;/code&gt; , &lt;code&gt;master&lt;/code&gt; debe tener todo lo que tiene &lt;code&gt;ko/master&lt;/code&gt; , y &lt;code&gt;next&lt;/code&gt; debe tener todo lo que tiene &lt;code&gt;ko/next&lt;/code&gt; , etc.</target>
        </trans-unit>
        <trans-unit id="9fb474287214ed4886618f1399ff63bbd11f6810" translate="yes" xml:space="preserve">
          <source>In the pager (&lt;code&gt;less&lt;/code&gt;), just search for &quot;bundle&quot;, go a few lines back, and see that it is in commit 18449ab0. Now just copy this object name, and paste it into the command line</source>
          <target state="translated">En el paginador ( &lt;code&gt;less&lt;/code&gt; ), busque &quot;paquete&quot;, retroceda unas l&amp;iacute;neas y vea que est&amp;aacute; en el compromiso 18449ab0. Ahora simplemente copie este nombre de objeto y p&amp;eacute;guelo en la l&amp;iacute;nea de comando</target>
        </trans-unit>
        <trans-unit id="5fc7016d20b7cd82938bb283d4d8443cc61835c8" translate="yes" xml:space="preserve">
          <source>In the past, &lt;code&gt;.git/HEAD&lt;/code&gt; was a symbolic link pointing at &lt;code&gt;refs/heads/master&lt;/code&gt;. When we wanted to switch to another branch, we did &lt;code&gt;ln -sf refs/heads/newbranch .git/HEAD&lt;/code&gt;, and when we wanted to find out which branch we are on, we did &lt;code&gt;readlink .git/HEAD&lt;/code&gt;. But symbolic links are not entirely portable, so they are now deprecated and symbolic refs (as described above) are used by default.</source>
          <target state="translated">En el pasado, &lt;code&gt;.git/HEAD&lt;/code&gt; era un enlace simb&amp;oacute;lico que apuntaba a &lt;code&gt;refs/heads/master&lt;/code&gt; . Cuando quisimos cambiar a otra rama, hicimos &lt;code&gt;ln -sf refs/heads/newbranch .git/HEAD&lt;/code&gt; , y cuando quisimos averiguar en qu&amp;eacute; rama estamos, hicimos &lt;code&gt;readlink .git/HEAD&lt;/code&gt; . Pero los enlaces simb&amp;oacute;licos no son completamente port&amp;aacute;tiles, por lo que ahora est&amp;aacute;n en desuso y las referencias simb&amp;oacute;licas (como se describi&amp;oacute; anteriormente) se utilizan por defecto.</target>
        </trans-unit>
        <trans-unit id="8dfab80b468101639bf9d627830b7559e865891a" translate="yes" xml:space="preserve">
          <source>In the previous example, when updating an existing branch, &lt;code&gt;git fetch&lt;/code&gt; checks to make sure that the most recent commit on the remote branch is a descendant of the most recent commit on your copy of the branch before updating your copy of the branch to point at the new commit. Git calls this process a &lt;a href=&quot;#fast-forwards&quot;&gt;fast-forward&lt;/a&gt;.</source>
          <target state="translated">En el ejemplo anterior, al actualizar una rama existente, &lt;code&gt;git fetch&lt;/code&gt; comprueba para asegurarse de que la confirmaci&amp;oacute;n m&amp;aacute;s reciente en la rama remota sea descendiente de la confirmaci&amp;oacute;n m&amp;aacute;s reciente en su copia de la rama antes de actualizar su copia de la rama para apuntar a el nuevo compromiso. Git llama a este proceso un &lt;a href=&quot;#fast-forwards&quot;&gt;avance r&amp;aacute;pido&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="39fc6243d8461e10163ad54b5cc61dfd9c9ca8f0" translate="yes" xml:space="preserve">
          <source>In the process of undoing a previous bad change, you may find it useful to check out an older version of a particular file using &lt;a href=&quot;git-restore&quot;&gt;git-restore[1]&lt;/a&gt;. The command</source>
          <target state="translated">En el proceso de deshacer un cambio incorrecto anterior, puede resultarle &amp;uacute;til verificar una versi&amp;oacute;n anterior de un archivo en particular usando &lt;a href=&quot;git-restore&quot;&gt;git-restore [1]&lt;/a&gt; . El comando</target>
        </trans-unit>
        <trans-unit id="ce5a30d6d89274fe8c4b93a655981ad3cb2875fa" translate="yes" xml:space="preserve">
          <source>In the process, it may discover conflicts. In that case it will stop and allow you to fix the conflicts; after fixing conflicts, use &lt;code&gt;git add&lt;/code&gt; to update the index with those contents, and then, instead of running &lt;code&gt;git commit&lt;/code&gt;, just run</source>
          <target state="translated">En el proceso, puede descubrir conflictos. En ese caso, se detendr&amp;aacute; y le permitir&amp;aacute; solucionar los conflictos; despu&amp;eacute;s de solucionar los conflictos, use &lt;code&gt;git add&lt;/code&gt; para actualizar el &amp;iacute;ndice con esos contenidos, y luego, en lugar de ejecutar &lt;code&gt;git commit&lt;/code&gt; , simplemente ejecute</target>
        </trans-unit>
        <trans-unit id="ecd16080120d9546efe5335b66c01332d8bc5340" translate="yes" xml:space="preserve">
          <source>In the second form, a list of objects (separated by linefeeds) is provided on stdin, and the SHA-1, type, and size of each object is printed on stdout. The output format can be overridden using the optional &lt;code&gt;&amp;lt;format&amp;gt;&lt;/code&gt; argument. If either &lt;code&gt;--textconv&lt;/code&gt; or &lt;code&gt;--filters&lt;/code&gt; was specified, the input is expected to list the object names followed by the path name, separated by a single whitespace, so that the appropriate drivers can be determined.</source>
          <target state="translated">En el segundo formulario, se proporciona una lista de objetos (separados por avances de l&amp;iacute;nea) en stdin, y el SHA-1, el tipo y el tama&amp;ntilde;o de cada objeto se imprimen en stdout. El formato de salida se puede anular utilizando el argumento opcional &lt;code&gt;&amp;lt;format&amp;gt;&lt;/code&gt; . Si se especific&amp;oacute; &lt;code&gt;--textconv&lt;/code&gt; o &lt;code&gt;--filters&lt;/code&gt; , se espera que la entrada enumere los nombres de los objetos seguidos del nombre de la ruta, separados por un solo espacio en blanco, de modo que se puedan determinar los controladores adecuados.</target>
        </trans-unit>
        <trans-unit id="909b0b19015ead3714bd1690a7877da1cf97f4fa" translate="yes" xml:space="preserve">
          <source>In the short-format, the status of each path is shown as one of these forms</source>
          <target state="translated">En el formato corto,el estado de cada camino se muestra como una de estas formas</target>
        </trans-unit>
        <trans-unit id="abe3a521aeac4a8adcc3faf0711763fbfd40b505" translate="yes" xml:space="preserve">
          <source>In the simple form, each line in the file consists of the canonical real name of an author, whitespace, and an email address used in the commit (enclosed by &lt;code&gt;&amp;lt;&lt;/code&gt; and &lt;code&gt;&amp;gt;&lt;/code&gt;) to map to the name. For example:</source>
          <target state="translated">En la forma simple, cada l&amp;iacute;nea en el archivo consta del nombre real can&amp;oacute;nico de un autor, espacios en blanco y una direcci&amp;oacute;n de correo electr&amp;oacute;nico utilizada en la confirmaci&amp;oacute;n (encerrada por &lt;code&gt;&amp;lt;&lt;/code&gt; y &lt;code&gt;&amp;gt;&lt;/code&gt; ) para mapear el nombre. Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="eecf34aeaad64fff7ea38378d33edc5335145626" translate="yes" xml:space="preserve">
          <source>In these cases you can tell Git the encoding of a file in the working directory with the &lt;code&gt;working-tree-encoding&lt;/code&gt; attribute. If a file with this attribute is added to Git, then Git re-encodes the content from the specified encoding to UTF-8. Finally, Git stores the UTF-8 encoded content in its internal data structure (called &quot;the index&quot;). On checkout the content is re-encoded back to the specified encoding.</source>
          <target state="translated">En estos casos, puede decirle a Git la codificaci&amp;oacute;n de un archivo en el directorio de trabajo con el atributo de &lt;code&gt;working-tree-encoding&lt;/code&gt; . Si se agrega un archivo con este atributo a Git, Git vuelve a codificar el contenido de la codificaci&amp;oacute;n especificada a UTF-8. Finalmente, Git almacena el contenido codificado en UTF-8 en su estructura de datos interna (llamada &quot;el &amp;iacute;ndice&quot;). Al finalizar la compra, el contenido se vuelve a codificar a la codificaci&amp;oacute;n especificada.</target>
        </trans-unit>
        <trans-unit id="5322604525a9aed1b9bf470c8d7df77aa5a14cc1" translate="yes" xml:space="preserve">
          <source>In these tables, &lt;code&gt;A&lt;/code&gt;, &lt;code&gt;B&lt;/code&gt;, &lt;code&gt;C&lt;/code&gt; and &lt;code&gt;D&lt;/code&gt; are some different states of a file. For example, the first line of the first table means that if a file is in state &lt;code&gt;A&lt;/code&gt; in the working tree, in state &lt;code&gt;B&lt;/code&gt; in the index, in state &lt;code&gt;C&lt;/code&gt; in &lt;code&gt;HEAD&lt;/code&gt; and in state &lt;code&gt;D&lt;/code&gt; in the target, then &lt;code&gt;git reset --soft
target&lt;/code&gt; will leave the file in the working tree in state &lt;code&gt;A&lt;/code&gt; and in the index in state &lt;code&gt;B&lt;/code&gt;. It resets (i.e. moves) the &lt;code&gt;HEAD&lt;/code&gt; (i.e. the tip of the current branch, if you are on one) to &lt;code&gt;target&lt;/code&gt; (which has the file in state &lt;code&gt;D&lt;/code&gt;).</source>
          <target state="translated">En estas tablas, &lt;code&gt;A&lt;/code&gt; , &lt;code&gt;B&lt;/code&gt; , &lt;code&gt;C&lt;/code&gt; y &lt;code&gt;D&lt;/code&gt; son algunos estados diferentes de un archivo. Por ejemplo, la primera l&amp;iacute;nea de la primera tabla significa que si un archivo est&amp;aacute; en el estado &lt;code&gt;A&lt;/code&gt; en el &amp;aacute;rbol de trabajo, en el estado &lt;code&gt;B&lt;/code&gt; en el &amp;iacute;ndice, en el estado &lt;code&gt;C&lt;/code&gt; en &lt;code&gt;HEAD&lt;/code&gt; y en el estado &lt;code&gt;D&lt;/code&gt; en el destino, entonces &lt;code&gt;git reset --soft target&lt;/code&gt; ser&amp;aacute; dejar el archivo en el directorio de trabajo en el estado &lt;code&gt;A&lt;/code&gt; y en el &amp;iacute;ndice en el estado &lt;code&gt;B&lt;/code&gt; . Restablece (es decir, mueve) la &lt;code&gt;HEAD&lt;/code&gt; (es decir, la punta de la rama actual, si est&amp;aacute; en una) al &lt;code&gt;target&lt;/code&gt; (que tiene el archivo en estado &lt;code&gt;D&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="31d8ef3e97391069cf0655f41499162005f123c2" translate="yes" xml:space="preserve">
          <source>In these two shorthand notations, you can omit one end and let it default to HEAD. For example, &lt;code&gt;origin..&lt;/code&gt; is a shorthand for &lt;code&gt;origin..HEAD&lt;/code&gt; and asks &quot;What did I do since I forked from the origin branch?&quot; Similarly, &lt;code&gt;..origin&lt;/code&gt; is a shorthand for &lt;code&gt;HEAD..origin&lt;/code&gt; and asks &quot;What did the origin do since I forked from them?&quot; Note that &lt;code&gt;..&lt;/code&gt; would mean &lt;code&gt;HEAD..HEAD&lt;/code&gt; which is an empty range that is both reachable and unreachable from HEAD.</source>
          <target state="translated">En estas dos notaciones abreviadas, puede omitir un final y dejar que sea el predeterminado HEAD. Por ejemplo, &lt;code&gt;origin..&lt;/code&gt; es una abreviatura de origen ... &lt;code&gt;origin..HEAD&lt;/code&gt; y pregunta &quot;&amp;iquest;Qu&amp;eacute; hice desde que me bifurqu&amp;eacute; desde la rama de origen?&quot; De manera similar, &lt;code&gt;..origin&lt;/code&gt; es una abreviatura de &lt;code&gt;HEAD..origin&lt;/code&gt; y pregunta &quot;&amp;iquest;Qu&amp;eacute; hizo el origen desde que me bifurqu&amp;eacute; de ellos?&quot; Tenga en cuenta que &lt;code&gt;..&lt;/code&gt; significar&amp;iacute;a &lt;code&gt;HEAD..HEAD&lt;/code&gt; , que es un rango vac&amp;iacute;o que es tanto accesible como inalcanzable desde HEAD.</target>
        </trans-unit>
        <trans-unit id="fda0649080e4ad73be213a95d0150567b39a9905" translate="yes" xml:space="preserve">
          <source>In this case Git will attempt to undo the old change while leaving intact any changes made since then. If more recent changes overlap with the changes to be reverted, then you will be asked to fix conflicts manually, just as in the case of &lt;a href=&quot;#resolving-a-merge&quot;&gt;resolving a merge&lt;/a&gt;.</source>
          <target state="translated">En este caso, Git intentar&amp;aacute; deshacer el cambio anterior dejando intactos los cambios realizados desde entonces. Si los cambios m&amp;aacute;s recientes se superponen con los cambios que se van a revertir, se le pedir&amp;aacute; que corrija los conflictos manualmente, como en el caso de &lt;a href=&quot;#resolving-a-merge&quot;&gt;resolver una fusi&amp;oacute;n&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b7e31e9f418486f831893dd264d133713a86e996" translate="yes" xml:space="preserve">
          <source>In this case if you are bisecting manually, what you can do is create a special branch that starts just before the BBC. The first commit in this branch should be the BBC with the BFC squashed into it. And the other commits in the branch should be the commits between BBC and BFC rebased on the first commit of the branch and then the commit after BFC also rebased on.</source>
          <target state="translated">En este caso,si estás bisecando manualmente,lo que puedes hacer es crear una rama especial que comienza justo antes de la BBC.El primer commit en esta rama debería ser la BBC con el BFC aplastado en ella.Y las otras confirmaciones en la rama deberían ser las confirmaciones entre la BBC y la BFC basadas en la primera confirmación de la rama y luego la confirmación después de la BFC también basada en ella.</target>
        </trans-unit>
        <trans-unit id="717fbe628e5024a7ab31b6335fd291caf38b26b3" translate="yes" xml:space="preserve">
          <source>In this case this creates a totally new commit that is not related to anything else. Normally you do this only &lt;strong&gt;once&lt;/strong&gt; for a project ever, and all later commits will be parented on top of an earlier commit.</source>
          <target state="translated">En este caso, esto crea una confirmaci&amp;oacute;n totalmente nueva que no est&amp;aacute; relacionada con nada m&amp;aacute;s. Normalmente, hace esto solo &lt;strong&gt;una vez&lt;/strong&gt; para un proyecto, y todas las confirmaciones posteriores se vincular&amp;aacute;n con una confirmaci&amp;oacute;n anterior.</target>
        </trans-unit>
        <trans-unit id="8d602afd53dc502b1f39532e44b808e7e4006de6" translate="yes" xml:space="preserve">
          <source>In this case we say that the HEAD is &quot;detached&quot;.</source>
          <target state="translated">En este caso decimos que la CABEZA está &quot;desprendida&quot;.</target>
        </trans-unit>
        <trans-unit id="84d70e62f46cda65cca1be0dfe61a185714e74d6" translate="yes" xml:space="preserve">
          <source>In this case, &lt;code&gt;git fetch&lt;/code&gt; will fail, and print out a warning.</source>
          <target state="translated">En este caso, &lt;code&gt;git fetch&lt;/code&gt; fallar&amp;aacute; e imprimir&amp;aacute; una advertencia.</target>
        </trans-unit>
        <trans-unit id="ec2a36fb392a8671d4d7ad6f96adda81069f0cb4" translate="yes" xml:space="preserve">
          <source>In this case, the &lt;code&gt;git read-tree -m $H $M&lt;/code&gt; command makes sure that no local change is lost as the result of this &quot;merge&quot;. Here are the &quot;carry forward&quot; rules, where &quot;I&quot; denotes the index, &quot;clean&quot; means that index and work tree coincide, and &quot;exists&quot;/&quot;nothing&quot; refer to the presence of a path in the specified commit:</source>
          <target state="translated">En este caso, el comando &lt;code&gt;git read-tree -m $H $M&lt;/code&gt; asegura que no se pierda ning&amp;uacute;n cambio local como resultado de esta &quot;fusi&amp;oacute;n&quot;. Aqu&amp;iacute; est&amp;aacute;n las reglas de &quot;arrastre&quot;, donde &quot;I&quot; denota el &amp;iacute;ndice, &quot;limpiar&quot; significa que el &amp;iacute;ndice y el &amp;aacute;rbol de trabajo coinciden y &quot;existe&quot; / &quot;nada&quot; se refieren a la presencia de una ruta en la confirmaci&amp;oacute;n especificada:</target>
        </trans-unit>
        <trans-unit id="53de38de1c4937be3492ea2adad08075be0660b2" translate="yes" xml:space="preserve">
          <source>In this case, though, Git may not eventually be able to tell the first bad one between some first skipped commits and a later bad commit.</source>
          <target state="translated">En este caso,sin embargo,Git puede no ser capaz de distinguir el primer mal entre los primeros compromisos salteados y un mal compromiso posterior.</target>
        </trans-unit>
        <trans-unit id="cc3568a850f36cf3d79c68cf0d9db0591ec5b81e" translate="yes" xml:space="preserve">
          <source>In this case, when &lt;code&gt;git bisect run&lt;/code&gt; finishes, bisect/bad will refer to a commit that has at least one parent whose reachable graph is fully traversable in the sense required by &lt;code&gt;git pack objects&lt;/code&gt;.</source>
          <target state="translated">En este caso, cuando finalice la &lt;code&gt;git bisect run&lt;/code&gt; , bisect / bad se referir&amp;aacute; a una confirmaci&amp;oacute;n que tiene al menos un padre cuyo gr&amp;aacute;fico alcanzable es completamente transitable en el sentido requerido por &lt;code&gt;git pack objects&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="052b0bf9d817f9d1efdbc01c640d54d8fda7ad16" translate="yes" xml:space="preserve">
          <source>In this example preload_index() was executed by the &lt;code&gt;main&lt;/code&gt; thread and started the &lt;code&gt;preload&lt;/code&gt; region. Seven threads, named &lt;code&gt;th01:preload_thread&lt;/code&gt; through &lt;code&gt;th07:preload_thread&lt;/code&gt;, were started. Events from each thread are atomically appended to the shared target stream as they occur so they may appear in random order with respect other threads. Finally, the main thread waits for the threads to finish and leaves the region.</source>
          <target state="translated">En este ejemplo, preload_index () fue ejecutado por el hilo &lt;code&gt;main&lt;/code&gt; e inici&amp;oacute; la regi&amp;oacute;n de &lt;code&gt;preload&lt;/code&gt; . Se &lt;code&gt;th01:preload_thread&lt;/code&gt; siete subprocesos, llamados th01: preload_thread a &lt;code&gt;th07:preload_thread&lt;/code&gt; . Los eventos de cada subproceso se agregan at&amp;oacute;micamente al flujo de destino compartido a medida que ocurren, por lo que pueden aparecer en orden aleatorio con respecto a otros subprocesos. Finalmente, el hilo principal espera a que terminen los hilos y abandona la regi&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="8e1c791b90ef2153c52f59ff823e2b7a9d806696" translate="yes" xml:space="preserve">
          <source>In this example, &quot;origin&quot; is called a remote repository, or &quot;remote&quot; for short. The branches of this repository are called &quot;remote branches&quot; from our point of view. The remote-tracking branches listed above were created based on the remote branches at clone time and will be updated by &lt;code&gt;git fetch&lt;/code&gt; (hence &lt;code&gt;git pull&lt;/code&gt;) and &lt;code&gt;git push&lt;/code&gt;. See &lt;a href=&quot;#Updating-a-repository-With-git-fetch&quot;&gt;Updating a repository with git fetch&lt;/a&gt; for details.</source>
          <target state="translated">En este ejemplo, &quot;origen&quot; se denomina repositorio remoto o &quot;remoto&quot; para abreviar. Las ramas de este repositorio se denominan &quot;ramas remotas&quot; desde nuestro punto de vista. Las ramas de seguimiento remoto enumeradas anteriormente se crearon en funci&amp;oacute;n de las ramas remotas en el momento de la clonaci&amp;oacute;n y se actualizar&amp;aacute;n mediante &lt;code&gt;git fetch&lt;/code&gt; (de ah&amp;iacute; &lt;code&gt;git pull&lt;/code&gt; ) y &lt;code&gt;git push&lt;/code&gt; . Consulte &lt;a href=&quot;#Updating-a-repository-With-git-fetch&quot;&gt;Actualizaci&amp;oacute;n de un repositorio con git fetch&lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="888891869abe63aa603e61303e6b4eda4f092540" translate="yes" xml:space="preserve">
          <source>In this example, scanning for untracked files ran from +0.012568 to +0.027149 (since the process started) and took 0.014581 seconds.</source>
          <target state="translated">En este ejemplo,el escaneo de archivos no rastreados fue de +0.012568 a +0.027149 (desde que comenzó el proceso)y tomó 0.014581 segundos.</target>
        </trans-unit>
        <trans-unit id="06524b5c41784cbbacde83bd5045f27a411dfe64" translate="yes" xml:space="preserve">
          <source>In this example, the &lt;code&gt;ko&lt;/code&gt; shorthand points at the Git maintainer&amp;rsquo;s repository at kernel.org, and looks like this:</source>
          <target state="translated">En este ejemplo, la abreviatura &lt;code&gt;ko&lt;/code&gt; apunta al repositorio del mantenedor de Git en kernel.org, y se ve as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="f509bc56ecf3e22348180170f4391a6c5749bec9" translate="yes" xml:space="preserve">
          <source>In this example, the preload region took 0.009122 seconds. The 7 threads took between 0.006069 and 0.008947 seconds to work on their portion of the index. Thread &quot;th01&quot; worked on 508 items at offset 0. Thread &quot;th02&quot; worked on 508 items at offset 2032. Thread &quot;th04&quot; worked on 508 items at offset 508.</source>
          <target state="translated">En este ejemplo,la región de precarga tomó 0,009122 segundos.Los 7 hilos tardaron entre 0,006069 y 0,008947 segundos en trabajar en su porción del índice.El hilo &quot;th01&quot; funcionó en 508 elementos con un offset de 0.El hilo &quot;th02&quot; funcionó en 508 elementos con un offset de 2032.La rosca &quot;th04&quot; trabajó en 508 artículos en el offset 508.</target>
        </trans-unit>
        <trans-unit id="24b2f8c33beed03671571687642648d3c34d3255" translate="yes" xml:space="preserve">
          <source>In this example, the root-level directory &lt;code&gt;/pub&lt;/code&gt; will contain a subdirectory for each virtual host IP address supported. Repositories can still be accessed by hostname though, assuming they correspond to these IP addresses.</source>
          <target state="translated">En este ejemplo, el directorio de nivel ra&amp;iacute;z &lt;code&gt;/pub&lt;/code&gt; contendr&amp;aacute; un subdirectorio para cada direcci&amp;oacute;n IP de host virtual admitida. Sin embargo, se puede acceder a los repositorios por nombre de host, suponiendo que correspondan a estas direcciones IP.</target>
        </trans-unit>
        <trans-unit id="1b3657f6aff85ab6f6a5a7f723164213b6e98109" translate="yes" xml:space="preserve">
          <source>In this example, the root-level directory &lt;code&gt;/pub&lt;/code&gt; will contain a subdirectory for each virtual host name supported. Further, both hosts advertise repositories simply as &lt;code&gt;git://www.example.com/software/repo.git&lt;/code&gt;. For pre-1.4.0 clients, a symlink from &lt;code&gt;/software&lt;/code&gt; into the appropriate default repository could be made as well.</source>
          <target state="translated">En este ejemplo, el directorio de nivel ra&amp;iacute;z &lt;code&gt;/pub&lt;/code&gt; contendr&amp;aacute; un subdirectorio para cada nombre de host virtual admitido. Adem&amp;aacute;s, ambos hosts anuncian repositorios simplemente como &lt;code&gt;git://www.example.com/software/repo.git&lt;/code&gt; . Para los clientes anteriores a 1.4.0, tambi&amp;eacute;n se podr&amp;iacute;a crear un enlace simb&amp;oacute;lico desde &lt;code&gt;/software&lt;/code&gt; al repositorio predeterminado apropiado.</target>
        </trans-unit>
        <trans-unit id="4f73381570064f6ad92295b54ae4d9111ba415e0" translate="yes" xml:space="preserve">
          <source>In this example, there are 3 old and 3 new commits, where the developer removed the 3rd, added a new one before the first two, and modified the commit message of the 2nd commit as well its diff.</source>
          <target state="translated">En este ejemplo,hay 3 viejas y 3 nuevas confirmaciones,donde el desarrollador eliminó la tercera,añadió una nueva antes de las dos primeras,y modificó el mensaje de confirmación de la segunda confirmación así como su diff.</target>
        </trans-unit>
        <trans-unit id="5f85b35b8b6aae26894cfdfbe33e3822a8120573" translate="yes" xml:space="preserve">
          <source>In this example, we passed &quot;grep &lt;code&gt;^SUBLEVEL = 25&lt;/code&gt; Makefile&quot; as parameter to &quot;git bisect run&quot;. This means that at each step, the grep command we passed will be launched. And if it exits with code 0 (that means success) then git bisect will mark the current state as &quot;good&quot;. If it exits with code 1 (or any code between 1 and 127 included, except the special code 125), then the current state will be marked as &quot;bad&quot;.</source>
          <target state="translated">En este ejemplo, pasamos &quot;grep &lt;code&gt;^SUBLEVEL = 25&lt;/code&gt; Makefile&quot; como par&amp;aacute;metro a &quot;git bisect run&quot;. Esto significa que en cada paso, se lanzar&amp;aacute; el comando grep que pasamos. Y si sale con el c&amp;oacute;digo 0 (eso significa &amp;eacute;xito), git bisect marcar&amp;aacute; el estado actual como &quot;bueno&quot;. Si sale con el c&amp;oacute;digo 1 (o cualquier c&amp;oacute;digo entre 1 y 127 incluido, excepto el c&amp;oacute;digo especial 125), entonces el estado actual se marcar&amp;aacute; como &quot;malo&quot;.</target>
        </trans-unit>
        <trans-unit id="eee8776c9677f60ee6e97b993bed2ed1a91281bf" translate="yes" xml:space="preserve">
          <source>In this format, each line is output after a header; the header at the minimum has the first line which has:</source>
          <target state="translated">En este formato,cada línea se emite después de un encabezamiento;el encabezamiento en el mínimo tiene la primera línea que tiene:</target>
        </trans-unit>
        <trans-unit id="991df4351922c60c45e086aff27d9273fe47de49" translate="yes" xml:space="preserve">
          <source>In this format, use 40 &quot;0&quot; to specify a zero value, and use the empty string to specify a missing value.</source>
          <target state="translated">En este formato,utilice 40 &quot;0&quot; para especificar un valor cero,y utilice la cadena vacía para especificar un valor que falta.</target>
        </trans-unit>
        <trans-unit id="b4a37ae142e5dfb709dfd08bf26fc04d26f39f66" translate="yes" xml:space="preserve">
          <source>In this mode, specific configuration stays in the path pointed by &lt;code&gt;git
rev-parse --git-path config.worktree&lt;/code&gt;. You can add or update configuration in this file with &lt;code&gt;git config --worktree&lt;/code&gt;. Older Git versions will refuse to access repositories with this extension.</source>
          <target state="translated">En este modo, la configuraci&amp;oacute;n espec&amp;iacute;fica permanece en la ruta se&amp;ntilde;alada por &lt;code&gt;git rev-parse --git-path config.worktree&lt;/code&gt; . Puede agregar o actualizar la configuraci&amp;oacute;n en este archivo con &lt;code&gt;git config --worktree&lt;/code&gt; . Las versiones anteriores de Git se negar&amp;aacute;n a acceder a los repositorios con esta extensi&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="26cf2860c6712d39e5cbcd807f1756d9308dfdb3" translate="yes" xml:space="preserve">
          <source>In this mode, the index is split into two files, $GIT_DIR/index and $GIT_DIR/sharedindex.&amp;lt;SHA-1&amp;gt;. Changes are accumulated in $GIT_DIR/index, the split index, while the shared index file contains all index entries and stays unchanged.</source>
          <target state="translated">En este modo, el &amp;iacute;ndice se divide en dos archivos, $ GIT_DIR / index y $ GIT_DIR / sharedindex. &amp;lt;SHA-1&amp;gt;. Los cambios se acumulan en $ GIT_DIR / index, el &amp;iacute;ndice dividido, mientras que el archivo de &amp;iacute;ndice compartido contiene todas las entradas de &amp;iacute;ndice y permanece sin cambios.</target>
        </trans-unit>
        <trans-unit id="ffc9d6f506ae4dc0ef8e821987c60f58237503b7" translate="yes" xml:space="preserve">
          <source>In this mode, the server will not request authentication until the client actually starts the object negotiation phase of the push, rather than during the initial contact. For this reason, you must also enable the &lt;code&gt;http.receivepack&lt;/code&gt; config option in any repositories that should accept a push. The default behavior, if &lt;code&gt;http.receivepack&lt;/code&gt; is not set, is to reject any pushes by unauthenticated users; the initial request will therefore report &lt;code&gt;403 Forbidden&lt;/code&gt; to the client, without even giving an opportunity for authentication.</source>
          <target state="translated">En este modo, el servidor no solicitar&amp;aacute; autenticaci&amp;oacute;n hasta que el cliente realmente comience la fase de negociaci&amp;oacute;n del objeto del env&amp;iacute;o, en lugar de durante el contacto inicial. Por esta raz&amp;oacute;n, tambi&amp;eacute;n debe habilitar la opci&amp;oacute;n de configuraci&amp;oacute;n &lt;code&gt;http.receivepack&lt;/code&gt; en cualquier repositorio que deba aceptar un env&amp;iacute;o. El comportamiento predeterminado, si &lt;code&gt;http.receivepack&lt;/code&gt; no est&amp;aacute; configurado, es rechazar cualquier env&amp;iacute;o de usuarios no autenticados; Por lo tanto, la solicitud inicial informar&amp;aacute; &lt;code&gt;403 Forbidden&lt;/code&gt; al cliente, sin siquiera dar la oportunidad de autenticaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="427d8f8d92a71761648b972f0beb3c2aad83aaaa" translate="yes" xml:space="preserve">
          <source>In this more general usage, you provide &lt;code&gt;git bisect&lt;/code&gt; with a &quot;new&quot; commit that has some property and an &quot;old&quot; commit that doesn&amp;rsquo;t have that property. Each time &lt;code&gt;git bisect&lt;/code&gt; checks out a commit, you test if that commit has the property. If it does, mark the commit as &quot;new&quot;; otherwise, mark it as &quot;old&quot;. When the bisection is done, &lt;code&gt;git bisect&lt;/code&gt; will report which commit introduced the property.</source>
          <target state="translated">En este uso m&amp;aacute;s general, le proporcionas a &lt;code&gt;git bisect&lt;/code&gt; una confirmaci&amp;oacute;n &quot;nueva&quot; que tiene alguna propiedad y una confirmaci&amp;oacute;n &quot;antigua&quot; que no tiene esa propiedad. Cada vez que &lt;code&gt;git bisect&lt;/code&gt; comprueba una confirmaci&amp;oacute;n, prueba si esa confirmaci&amp;oacute;n tiene la propiedad. Si es as&amp;iacute;, marque la confirmaci&amp;oacute;n como &quot;nueva&quot;; de lo contrario, m&amp;aacute;rquelo como &quot;antiguo&quot;. Cuando se realiza la bisecci&amp;oacute;n, &lt;code&gt;git bisect&lt;/code&gt; informar&amp;aacute; qu&amp;eacute; confirmaci&amp;oacute;n introdujo la propiedad.</target>
        </trans-unit>
        <trans-unit id="e6da0601a9e7aee317ec7d6d594e01f938b779c4" translate="yes" xml:space="preserve">
          <source>In unusual scenarios, you may not be able to create files larger than a certain size on your filesystem, and this option can be used to tell the command to split the output packfile into multiple independent packfiles, each not larger than the given size. The size can be suffixed with &quot;k&quot;, &quot;m&quot;, or &quot;g&quot;. The minimum size allowed is limited to 1 MiB. This option prevents the creation of a bitmap index. The default is unlimited, unless the config variable &lt;code&gt;pack.packSizeLimit&lt;/code&gt; is set.</source>
          <target state="translated">En escenarios inusuales, es posible que no pueda crear archivos m&amp;aacute;s grandes que un cierto tama&amp;ntilde;o en su sistema de archivos, y esta opci&amp;oacute;n se puede usar para decirle al comando que divida el archivo de paquete de salida en varios archivos de paquete independientes, cada uno no m&amp;aacute;s grande que el tama&amp;ntilde;o dado. El tama&amp;ntilde;o puede tener el sufijo &quot;k&quot;, &quot;m&quot; o &quot;g&quot;. El tama&amp;ntilde;o m&amp;iacute;nimo permitido est&amp;aacute; limitado a 1 MiB. Esta opci&amp;oacute;n evita la creaci&amp;oacute;n de un &amp;iacute;ndice de mapa de bits. El valor predeterminado es ilimitado, a menos que se establezca la variable de configuraci&amp;oacute;n &lt;code&gt;pack.packSizeLimit&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4e6119784d7cd9e9e9f521473e212223da8f242e" translate="yes" xml:space="preserve">
          <source>In versions of Git before 2.23.0 patterns containing \0 would be silently considered fixed. This was never documented, there were also odd and undocumented interactions between e.g. non-ASCII patterns containing \0 and &lt;code&gt;--ignore-case&lt;/code&gt;.</source>
          <target state="translated">En versiones de Git anteriores a la 2.23.0, los patrones que contienen \ 0 se considerar&amp;iacute;an fijos en silencio. Esto nunca se document&amp;oacute;, tambi&amp;eacute;n hubo interacciones extra&amp;ntilde;as e indocumentadas entre, por ejemplo, patrones no ASCII que contienen \ 0 y &lt;code&gt;--ignore-case&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5da95a93eebb0b267da3b6f30d0296fee9bbc09f" translate="yes" xml:space="preserve">
          <source>Inactive branches are stored in a structure which uses 96 or 120 bytes (32 bit or 64 bit systems, respectively), plus the length of the branch name (typically under 200 bytes), per branch. fast-import will easily handle as many as 10,000 inactive branches in under 2 MiB of memory.</source>
          <target state="translated">Las ramas inactivas se almacenan en una estructura que utiliza 96 o 120 bytes (sistemas de 32 o 64 bits,respectivamente),más la longitud del nombre de la rama (normalmente menos de 200 bytes),por cada rama.La importación rápida manejará fácilmente hasta 10.000 ramas inactivas en menos de 2 MiB de memoria.</target>
        </trans-unit>
        <trans-unit id="40bf5b4a4e7b04d6908a8f7645b8e99e811e42d8" translate="yes" xml:space="preserve">
          <source>Include Some Progress Messages</source>
          <target state="translated">Incluya algunos mensajes de progreso</target>
        </trans-unit>
        <trans-unit id="d1a7a0c5683de418c5f98fc4beae70e15874a175" translate="yes" xml:space="preserve">
          <source>Include a line &amp;ldquo;log size &amp;lt;number&amp;gt;&amp;rdquo; in the output for each commit, where &amp;lt;number&amp;gt; is the length of that commit&amp;rsquo;s message in bytes. Intended to speed up tools that read log messages from &lt;code&gt;git log&lt;/code&gt; output by allowing them to allocate space in advance.</source>
          <target state="translated">Incluya una l&amp;iacute;nea &amp;ldquo;tama&amp;ntilde;o de registro &amp;lt;n&amp;uacute;mero&amp;gt;&amp;rdquo; en la salida de cada confirmaci&amp;oacute;n, donde &amp;lt;n&amp;uacute;mero&amp;gt; es la longitud del mensaje de esa confirmaci&amp;oacute;n en bytes. Destinado a acelerar las herramientas que leen los mensajes de &lt;code&gt;git log&lt;/code&gt; salida del registro de git al permitirles asignar espacio por adelantado.</target>
        </trans-unit>
        <trans-unit id="af14d11414c6ac75b39c95b283e5bcf0f4ccb002" translate="yes" xml:space="preserve">
          <source>Include additional statistics at the end of blame output.</source>
          <target state="translated">Incluya estadísticas adicionales al final de la salida de la culpa.</target>
        </trans-unit>
        <trans-unit id="47c5e0ca752d4a1deb14e562052c4b503ef081b0" translate="yes" xml:space="preserve">
          <source>Include commits that are reachable from &amp;lt;rev&amp;gt; (i.e. &amp;lt;rev&amp;gt; and its ancestors).</source>
          <target state="translated">Incluya las confirmaciones que sean accesibles desde &amp;lt;rev&amp;gt; (es decir, &amp;lt;rev&amp;gt; y sus ancestros).</target>
        </trans-unit>
        <trans-unit id="9605f416b0921199291f14b56df68cc8fe57350a" translate="yes" xml:space="preserve">
          <source>Include commits that are reachable from &amp;lt;rev2&amp;gt; but exclude those that are reachable from &amp;lt;rev1&amp;gt;. When either &amp;lt;rev1&amp;gt; or &amp;lt;rev2&amp;gt; is omitted, it defaults to &lt;code&gt;HEAD&lt;/code&gt;.</source>
          <target state="translated">Incluya las confirmaciones a las que se puede acceder desde &amp;lt;rev2&amp;gt;, pero excluya aquellas a las que se puede acceder desde &amp;lt;rev1&amp;gt;. Cuando se omite &amp;lt;rev1&amp;gt; o &amp;lt;rev2&amp;gt;, el valor predeterminado es &lt;code&gt;HEAD&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ce2adffe692042c194b87264e9afec51300d7f42" translate="yes" xml:space="preserve">
          <source>Include commits that are reachable from either &amp;lt;rev1&amp;gt; or &amp;lt;rev2&amp;gt; but exclude those that are reachable from both. When either &amp;lt;rev1&amp;gt; or &amp;lt;rev2&amp;gt; is omitted, it defaults to &lt;code&gt;HEAD&lt;/code&gt;.</source>
          <target state="translated">Incluya las confirmaciones a las que se puede acceder desde &amp;lt;rev1&amp;gt; o &amp;lt;rev2&amp;gt;, pero excluya aquellas a las que se puede acceder desde ambos. Cuando se omite &amp;lt;rev1&amp;gt; o &amp;lt;rev2&amp;gt;, el valor predeterminado es &lt;code&gt;HEAD&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a1236fce64f1fb93f2ef7dcc7912c2d79c1d22c1" translate="yes" xml:space="preserve">
          <source>Include cross-references to the glossary, where appropriate.</source>
          <target state="translated">Incluya referencias cruzadas al glosario,cuando proceda.</target>
        </trans-unit>
        <trans-unit id="ac12c15729a8f56d7cafe2e8c1b0d7927d0e53f1" translate="yes" xml:space="preserve">
          <source>Include debugging information related to the movement of lines between files (see &lt;code&gt;-C&lt;/code&gt;) and lines moved within a file (see &lt;code&gt;-M&lt;/code&gt;). The first number listed is the score. This is the number of alphanumeric characters detected as having been moved between or within files. This must be above a certain threshold for &lt;code&gt;git blame&lt;/code&gt; to consider those lines of code to have been moved.</source>
          <target state="translated">Incluya informaci&amp;oacute;n de depuraci&amp;oacute;n relacionada con el movimiento de l&amp;iacute;neas entre archivos (vea &lt;code&gt;-C&lt;/code&gt; ) y l&amp;iacute;neas movidas dentro de un archivo (vea &lt;code&gt;-M&lt;/code&gt; ). El primer n&amp;uacute;mero en la lista es la puntuaci&amp;oacute;n. Este es el n&amp;uacute;mero de caracteres alfanum&amp;eacute;ricos detectados que se han movido entre archivos o dentro de ellos. Esto debe estar por encima de un cierto umbral para que &lt;code&gt;git blame&lt;/code&gt; considere que esas l&amp;iacute;neas de c&amp;oacute;digo se han movido.</target>
        </trans-unit>
        <trans-unit id="eac52c02432a2a159a563ec983012928139e33b8" translate="yes" xml:space="preserve">
          <source>Include objects in &lt;code&gt;.keep&lt;/code&gt; files when repacking. Note that we still do not delete &lt;code&gt;.keep&lt;/code&gt; packs after &lt;code&gt;pack-objects&lt;/code&gt; finishes. This means that we may duplicate objects, but this makes the option safe to use when there are concurrent pushes or fetches. This option is generally only useful if you are writing bitmaps with &lt;code&gt;-b&lt;/code&gt; or &lt;code&gt;repack.writeBitmaps&lt;/code&gt;, as it ensures that the bitmapped packfile has the necessary objects.</source>
          <target state="translated">Incluya objetos en archivos &lt;code&gt;.keep&lt;/code&gt; al volver a empaquetar . Tenga en cuenta que todav&amp;iacute;a no &lt;code&gt;.keep&lt;/code&gt; paquetes .keep despu&amp;eacute;s &lt;code&gt;pack-objects&lt;/code&gt; finalice el paquete de objetos . Esto significa que podemos duplicar objetos, pero esto hace que la opci&amp;oacute;n sea segura de usar cuando hay empujes o recuperaciones simult&amp;aacute;neas. Por lo general, esta opci&amp;oacute;n solo es &amp;uacute;til si est&amp;aacute; escribiendo mapas de bits con &lt;code&gt;-b&lt;/code&gt; o &lt;code&gt;repack.writeBitmaps&lt;/code&gt; , ya que garantiza que el archivo de paquete con mapa de bits tenga los objetos necesarios.</target>
        </trans-unit>
        <trans-unit id="3b3acf7c7b624670bc98269d1db58c312d8f1ad9" translate="yes" xml:space="preserve">
          <source>Include patch text in the output.</source>
          <target state="translated">Incluya el texto del parche en la salida.</target>
        </trans-unit>
        <trans-unit id="7f58d83c9ac95ca37a657dfc92f2d025971598c2" translate="yes" xml:space="preserve">
          <source>Include the output of &lt;a href=&quot;git-status&quot;&gt;git-status[1]&lt;/a&gt; in the commit message template when using an editor to prepare the commit message. Defaults to on, but can be used to override configuration variable commit.status.</source>
          <target state="translated">Incluya la salida de &lt;a href=&quot;git-status&quot;&gt;git-status [1]&lt;/a&gt; en la plantilla de mensaje de confirmaci&amp;oacute;n cuando utilice un editor para preparar el mensaje de confirmaci&amp;oacute;n. Por defecto est&amp;aacute; activado, pero se puede usar para anular la variable de configuraci&amp;oacute;n commit.status.</target>
        </trans-unit>
        <trans-unit id="798a42403927f2977bd316b8bb1bba46f3e2c944" translate="yes" xml:space="preserve">
          <source>Include unasked-for annotated tags if the object they reference was included in the resulting packfile. This can be useful to send new tags to native Git clients.</source>
          <target state="translated">Incluya etiquetas comentadas no solicitadas si el objeto al que hacen referencia fue incluido en el archivo de paquete resultante.Esto puede ser útil para enviar nuevas etiquetas a los clientes nativos de Git.</target>
        </trans-unit>
        <trans-unit id="c5f574d342fa2383147936f6ccc821ddf1edb5ef" translate="yes" xml:space="preserve">
          <source>Included in a &lt;code&gt;commit&lt;/code&gt; command to add a new file or change the content of an existing file. This command has two different means of specifying the content of the file.</source>
          <target state="translated">Incluido en un comando de &lt;code&gt;commit&lt;/code&gt; para agregar un nuevo archivo o cambiar el contenido de un archivo existente. Este comando tiene dos medios diferentes para especificar el contenido del archivo.</target>
        </trans-unit>
        <trans-unit id="8dfee16c07e63cf25f2958c656ce64f423b1c0b9" translate="yes" xml:space="preserve">
          <source>Included in a &lt;code&gt;commit&lt;/code&gt; command to remove a file or recursively delete an entire directory from the branch. If the file or directory removal makes its parent directory empty, the parent directory will be automatically removed too. This cascades up the tree until the first non-empty directory or the root is reached.</source>
          <target state="translated">Incluido en un comando de &lt;code&gt;commit&lt;/code&gt; para eliminar un archivo o eliminar de forma recursiva un directorio completo de la rama. Si la eliminaci&amp;oacute;n del archivo o directorio hace que su directorio principal est&amp;eacute; vac&amp;iacute;o, el directorio principal tambi&amp;eacute;n se eliminar&amp;aacute; autom&amp;aacute;ticamente. Esto sube en cascada por el &amp;aacute;rbol hasta que se alcanza el primer directorio no vac&amp;iacute;o o la ra&amp;iacute;z.</target>
        </trans-unit>
        <trans-unit id="87d365412b703101b1d281d9e93e3f278251dd0d" translate="yes" xml:space="preserve">
          <source>Included in a &lt;code&gt;commit&lt;/code&gt; command to remove all files (and also all directories) from the branch. This command resets the internal branch structure to have no files in it, allowing the frontend to subsequently add all interesting files from scratch.</source>
          <target state="translated">Incluido en un comando de &lt;code&gt;commit&lt;/code&gt; para eliminar todos los archivos (y tambi&amp;eacute;n todos los directorios) de la rama. Este comando restablece la estructura de la rama interna para que no tenga archivos, lo que permite que la interfaz agregue posteriormente todos los archivos interesantes desde cero.</target>
        </trans-unit>
        <trans-unit id="28dccd9788a09aa2f373fa8c25c3b39e9406a080" translate="yes" xml:space="preserve">
          <source>Included in a &lt;code&gt;commit&lt;/code&gt;&lt;code&gt;&amp;lt;notes_ref&amp;gt;&lt;/code&gt; command to add a new note annotating a &lt;code&gt;&amp;lt;commit-ish&amp;gt;&lt;/code&gt; or change this annotation contents. Internally it is similar to filemodify 100644 on &lt;code&gt;&amp;lt;commit-ish&amp;gt;&lt;/code&gt; path (maybe split into subdirectories). It&amp;rsquo;s not advised to use any other commands to write to the &lt;code&gt;&amp;lt;notes_ref&amp;gt;&lt;/code&gt; tree except &lt;code&gt;filedeleteall&lt;/code&gt; to delete all existing notes in this tree. This command has two different means of specifying the content of the note.</source>
          <target state="translated">Incluido en un comando &lt;code&gt;commit&lt;/code&gt; &lt;code&gt;&amp;lt;notes_ref&amp;gt;&lt;/code&gt; para agregar una nueva nota anotando un &lt;code&gt;&amp;lt;commit-ish&amp;gt;&lt;/code&gt; o cambiar el contenido de esta anotaci&amp;oacute;n. Internamente, es similar a filemodify 100644 en la ruta &lt;code&gt;&amp;lt;commit-ish&amp;gt;&lt;/code&gt; (tal vez dividido en subdirectorios). No se recomienda utilizar ning&amp;uacute;n otro comando para escribir en el &amp;aacute;rbol &lt;code&gt;&amp;lt;notes_ref&amp;gt;&lt;/code&gt; excepto &lt;code&gt;filedeleteall&lt;/code&gt; para eliminar todas las notas existentes en este &amp;aacute;rbol. Este comando tiene dos medios diferentes para especificar el contenido de la nota.</target>
        </trans-unit>
        <trans-unit id="db54974f7f0ad531e35648ba85b9388029b4d7ef" translate="yes" xml:space="preserve">
          <source>Includes</source>
          <target state="translated">Includes</target>
        </trans-unit>
        <trans-unit id="de153f024523e4c2c467ece94c841922a681ecff" translate="yes" xml:space="preserve">
          <source>Includes one additional ancestor commit. The additional ancestry link does not change the way the tree state is built at this commit. If the &lt;code&gt;from&lt;/code&gt; command is omitted when creating a new branch, the first &lt;code&gt;merge&lt;/code&gt; commit will be the first ancestor of the current commit, and the branch will start out with no files. An unlimited number of &lt;code&gt;merge&lt;/code&gt; commands per commit are permitted by fast-import, thereby establishing an n-way merge.</source>
          <target state="translated">Incluye una confirmaci&amp;oacute;n de antepasado adicional. El enlace de ascendencia adicional no cambia la forma en que se construye el estado del &amp;aacute;rbol en esta confirmaci&amp;oacute;n. Si se omite el comando &lt;code&gt;from&lt;/code&gt; al crear una nueva rama, la primera confirmaci&amp;oacute;n de &lt;code&gt;merge&lt;/code&gt; ser&amp;aacute; el primer antecesor de la confirmaci&amp;oacute;n actual y la rama comenzar&amp;aacute; sin archivos. La importaci&amp;oacute;n r&amp;aacute;pida permite un n&amp;uacute;mero ilimitado de comandos de &lt;code&gt;merge&lt;/code&gt; por confirmaci&amp;oacute;n, lo que establece una combinaci&amp;oacute;n de n v&amp;iacute;as.</target>
        </trans-unit>
        <trans-unit id="8623cf320c015aba351966293c038ddef6f53905" translate="yes" xml:space="preserve">
          <source>Incompatible options</source>
          <target state="translated">Opciones incompatibles</target>
        </trans-unit>
        <trans-unit id="9020a39adcad5a9de717e37976fa2cef184a1df6" translate="yes" xml:space="preserve">
          <source>Incorporates changes from a remote repository into the current branch. In its default mode, &lt;code&gt;git pull&lt;/code&gt; is shorthand for &lt;code&gt;git fetch&lt;/code&gt; followed by &lt;code&gt;git merge FETCH_HEAD&lt;/code&gt;.</source>
          <target state="translated">Incorpora cambios de un repositorio remoto en la rama actual. En su modo predeterminado, &lt;code&gt;git pull&lt;/code&gt; es la abreviatura de &lt;code&gt;git fetch&lt;/code&gt; seguido de &lt;code&gt;git merge FETCH_HEAD&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4d61077e89adde5af7a04457989a77b3c48490ae" translate="yes" xml:space="preserve">
          <source>Incorporates changes from the named commits (since the time their histories diverged from the current branch) into the current branch. This command is used by &lt;code&gt;git pull&lt;/code&gt; to incorporate changes from another repository and can be used by hand to merge changes from one branch into another.</source>
          <target state="translated">Incorpora cambios de las confirmaciones nombradas (desde el momento en que sus historiales divergieron de la rama actual) a la rama actual. Este comando lo usa &lt;code&gt;git pull&lt;/code&gt; para incorporar cambios de otro repositorio y se puede usar a mano para fusionar cambios de una rama a otra.</target>
        </trans-unit>
        <trans-unit id="709702f7f984cb3913cdb163bc5d2fe003c81b05" translate="yes" xml:space="preserve">
          <source>Incremental output</source>
          <target state="translated">Incremento de la producción</target>
        </trans-unit>
        <trans-unit id="571937052d91a812bc84d435a3200a79bb1a0ee1" translate="yes" xml:space="preserve">
          <source>Indeed untestable commits are often untestable because a breakage was introduced at one time, and that breakage was fixed only after many other commits were introduced.</source>
          <target state="translated">De hecho,los compromisos no comprobables son a menudo no comprobables porque se introdujo una rotura en un momento dado,y esa rotura se arregló sólo después de que se introdujeran muchos otros compromisos.</target>
        </trans-unit>
        <trans-unit id="78699f384a94184571a61ab6b2f36f5cdf341b61" translate="yes" xml:space="preserve">
          <source>Indicate that only the objects wanted need to be fetched, not their dependents.</source>
          <target state="translated">Indicar que sólo los objetos deseados deben ser traídos,no sus dependientes.</target>
        </trans-unit>
        <trans-unit id="d063c49b2950871e5e846c69f89ed3fa8315be66" translate="yes" xml:space="preserve">
          <source>Indicate that these objects are being fetched from a promisor.</source>
          <target state="translated">Indican que estos objetos están siendo traídos por un promisorio.</target>
        </trans-unit>
        <trans-unit id="d4b8f31320c23f43d173d656edb4ca6c63551ac5" translate="yes" xml:space="preserve">
          <source>Indicates a blob object name.</source>
          <target state="translated">Indica el nombre de un objeto de la mancha.</target>
        </trans-unit>
        <trans-unit id="6d441ed12cf0b86c55591d731de178963fe6c1ee" translate="yes" xml:space="preserve">
          <source>Indicates a commit object name.</source>
          <target state="translated">Indica un nombre de objeto de compromiso.</target>
        </trans-unit>
        <trans-unit id="e89d58f77c5643f4921d84ac3c1216b6dc569e02" translate="yes" xml:space="preserve">
          <source>Indicates a commit or tag object name. A command that takes a &amp;lt;commit-ish&amp;gt; argument ultimately wants to operate on a &amp;lt;commit&amp;gt; object but automatically dereferences &amp;lt;tag&amp;gt; objects that point at a &amp;lt;commit&amp;gt;.</source>
          <target state="translated">Indica un nombre de objeto de confirmaci&amp;oacute;n o etiqueta. Un comando que toma un argumento &amp;lt;commit-ish&amp;gt; en &amp;uacute;ltima instancia, quiere operar en un objeto &amp;lt;commit&amp;gt; pero autom&amp;aacute;ticamente elimina las referencias a objetos &amp;lt;tag&amp;gt; que apuntan a un &amp;lt;commit&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="31963740af1f01e0807009b4b0a81e30ade64f1a" translate="yes" xml:space="preserve">
          <source>Indicates a filename - almost always relative to the root of the tree structure &lt;code&gt;GIT_INDEX_FILE&lt;/code&gt; describes.</source>
          <target state="translated">Indica un nombre de archivo, casi siempre relativo a la ra&amp;iacute;z de la estructura de &amp;aacute;rbol que describe &lt;code&gt;GIT_INDEX_FILE&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c59be5c9a5ab736a07e28f031fa629ea1cac80d9" translate="yes" xml:space="preserve">
          <source>Indicates a tree object name.</source>
          <target state="translated">Indica un nombre de objeto de árbol.</target>
        </trans-unit>
        <trans-unit id="0236f6573fabb077368d656582f35373ba9e33e6" translate="yes" xml:space="preserve">
          <source>Indicates a tree, commit or tag object name. A command that takes a &amp;lt;tree-ish&amp;gt; argument ultimately wants to operate on a &amp;lt;tree&amp;gt; object but automatically dereferences &amp;lt;commit&amp;gt; and &amp;lt;tag&amp;gt; objects that point at a &amp;lt;tree&amp;gt;.</source>
          <target state="translated">Indica un &amp;aacute;rbol, un compromiso o un nombre de objeto de etiqueta. Un comando que toma un argumento &amp;lt;tree-ish&amp;gt; en &amp;uacute;ltima instancia, quiere operar en un objeto &amp;lt;tree&amp;gt; pero elimina autom&amp;aacute;ticamente las referencias a los objetos &amp;lt;commit&amp;gt; y &amp;lt;tag&amp;gt; que apuntan a un &amp;lt;tree&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="73ecb0013f5389f15738299d7b0ca5b5c29b261f" translate="yes" xml:space="preserve">
          <source>Indicates that an object type is required. Currently one of: &lt;code&gt;blob&lt;/code&gt;, &lt;code&gt;tree&lt;/code&gt;, &lt;code&gt;commit&lt;/code&gt;, or &lt;code&gt;tag&lt;/code&gt;.</source>
          <target state="translated">Indica que se requiere un tipo de objeto. Actualmente uno de: &lt;code&gt;blob&lt;/code&gt; , &lt;code&gt;tree&lt;/code&gt; , &lt;code&gt;commit&lt;/code&gt; o &lt;code&gt;tag&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="db4dbaff6f210d92fcd8a0947f8ffe2ad6166cf6" translate="yes" xml:space="preserve">
          <source>Indicates the object name for any type of object.</source>
          <target state="translated">Indica el nombre del objeto para cualquier tipo de objeto.</target>
        </trans-unit>
        <trans-unit id="c66f56b69efd11f38dd2949f22030f51d42bccb8" translate="yes" xml:space="preserve">
          <source>Individual developer (participant)</source>
          <target state="translated">Desarrollador individual (participante)</target>
        </trans-unit>
        <trans-unit id="dc704b04bf6fc4b099b66d2f7d86d56e0d061d7a" translate="yes" xml:space="preserve">
          <source>Individual developer (standalone)</source>
          <target state="translated">Desarrollador individual (autónomo)</target>
        </trans-unit>
        <trans-unit id="a964b0aa320ab2176eba7cb0319b97ea34b340ac" translate="yes" xml:space="preserve">
          <source>Individually replay all rebased commits instead of fast-forwarding over the unchanged ones. This ensures that the entire history of the rebased branch is composed of new commits.</source>
          <target state="translated">Reproducir individualmente todos los compromisos de la base en lugar de avanzar rápidamente sobre los que no se han cambiado.Esto asegura que toda la historia de la rama de la base se compone de nuevas confirmaciones.</target>
        </trans-unit>
        <trans-unit id="0eb5ed506e4923c28d7f4a8aa69efe99b3ad75d1" translate="yes" xml:space="preserve">
          <source>Information</source>
          <target state="translated">Information</target>
        </trans-unit>
        <trans-unit id="9bceb94c72e397fee5b7ad78b8c9312ee6319e43" translate="yes" xml:space="preserve">
          <source>Information about what is to be pushed is provided on the hook&amp;rsquo;s standard input with lines of the form:</source>
          <target state="translated">La informaci&amp;oacute;n sobre lo que se va a insertar se proporciona en la entrada est&amp;aacute;ndar del gancho con l&amp;iacute;neas de la forma:</target>
        </trans-unit>
        <trans-unit id="43d35f7b76c469225469fd7a04662a08053d1e63" translate="yes" xml:space="preserve">
          <source>Initial client request</source>
          <target state="translated">La solicitud inicial del cliente</target>
        </trans-unit>
        <trans-unit id="68fa16ffd48f366e4fa8d57fea78ff03fcab0191" translate="yes" xml:space="preserve">
          <source>Initialization</source>
          <target state="translated">Initialization</target>
        </trans-unit>
        <trans-unit id="1b499097655f7a7af4711e162d7e54be3deca803" translate="yes" xml:space="preserve">
          <source>Initialization happens in &lt;code&gt;main()&lt;/code&gt;. Behind the scenes, an &lt;code&gt;atexit&lt;/code&gt; and &lt;code&gt;signal&lt;/code&gt; handler are registered.</source>
          <target state="translated">La inicializaci&amp;oacute;n ocurre en &lt;code&gt;main()&lt;/code&gt; . Detr&amp;aacute;s de escena, se registra un &lt;code&gt;atexit&lt;/code&gt; y un manejador de &lt;code&gt;signal&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="42e32f1c6a8cf663f45361425590d312db136ea3" translate="yes" xml:space="preserve">
          <source>Initialize and modify the sparse-checkout</source>
          <target state="translated">Inicie y modifique la caja de ahorros...</target>
        </trans-unit>
        <trans-unit id="5be83bd5256f93987e394207f3c5233baf2d713e" translate="yes" xml:space="preserve">
          <source>Initialize and modify the sparse-checkout configuration, which reduces the checkout to a set of paths given by a list of patterns.</source>
          <target state="translated">Inicializar y modificar la configuración de la caja,que reduce la caja a un conjunto de rutas dadas por una lista de patrones.</target>
        </trans-unit>
        <trans-unit id="825b58a6f65001fb659dd3ff519bf4df985a29aa" translate="yes" xml:space="preserve">
          <source>Initialize the sparse-checkout file so the working directory starts with only the files in the root of the repository. The sparse-checkout file can be modified to grow the working directory as needed.</source>
          <target state="translated">Inicializar el archivo de &quot;sparse-checkout&quot; para que el directorio de trabajo empiece sólo con los archivos de la raíz del repositorio.El archivo sparse-checkout puede ser modificado para hacer crecer el directorio de trabajo según sea necesario.</target>
        </trans-unit>
        <trans-unit id="9e0eca47ea83eb468f0ac7fe2e029fd23bbe773e" translate="yes" xml:space="preserve">
          <source>Initialize the submodules recorded in the index (which were added and committed elsewhere) by setting &lt;code&gt;submodule.$name.url&lt;/code&gt; in .git/config. It uses the same setting from &lt;code&gt;.gitmodules&lt;/code&gt; as a template. If the URL is relative, it will be resolved using the default remote. If there is no default remote, the current repository will be assumed to be upstream.</source>
          <target state="translated">Inicialice los subm&amp;oacute;dulos registrados en el &amp;iacute;ndice (que se agregaron y confirmaron en otro lugar) configurando &lt;code&gt;submodule.$name.url&lt;/code&gt; en .git / config. Utiliza la misma configuraci&amp;oacute;n de &lt;code&gt;.gitmodules&lt;/code&gt; como plantilla. Si la URL es relativa, se resolver&amp;aacute; utilizando el control remoto predeterminado. Si no hay un control remoto predeterminado, se asumir&amp;aacute; que el repositorio actual est&amp;aacute; en sentido ascendente.</target>
        </trans-unit>
        <trans-unit id="52f8f7589ec2fc901a83216cac5106872728a87d" translate="yes" xml:space="preserve">
          <source>Initialize, update or inspect submodules</source>
          <target state="translated">Iniciar,actualizar o inspeccionar los submódulos</target>
        </trans-unit>
        <trans-unit id="0d880d50dc463cd4220f01bcf54c48c1f2d57098" translate="yes" xml:space="preserve">
          <source>Initializes an empty Git repository with additional metadata directories for &lt;code&gt;git svn&lt;/code&gt;. The Subversion URL may be specified as a command-line argument, or as full URL arguments to -T/-t/-b. Optionally, the target directory to operate on can be specified as a second argument. Normally this command initializes the current directory.</source>
          <target state="translated">Inicializa un repositorio de Git vac&amp;iacute;o con directorios de metadatos adicionales para &lt;code&gt;git svn&lt;/code&gt; . La URL de Subversion se puede especificar como un argumento de l&amp;iacute;nea de comandos o como argumentos de URL completos para -T / -t / -b. Opcionalmente, el directorio de destino en el que operar se puede especificar como segundo argumento. Normalmente, este comando inicializa el directorio actual.</target>
        </trans-unit>
        <trans-unit id="01c2c8357a87e8a6148f1dd9a9c884aae5e4de53" translate="yes" xml:space="preserve">
          <source>Initially ignore any whitespace in the move detection, then group the moved code blocks only into a block if the change in whitespace is the same per line. This is incompatible with the other modes.</source>
          <target state="translated">Inicialmente ignora cualquier espacio blanco en la detección de movimiento,luego agrupa los bloques de código movidos sólo en un bloque si el cambio en el espacio blanco es el mismo por línea.Esto es incompatible con los otros modos.</target>
        </trans-unit>
        <trans-unit id="229b7991e581f774e065f13c78dfa8719c8c393f" translate="yes" xml:space="preserve">
          <source>Inline data format</source>
          <target state="translated">Formato de datos en línea</target>
        </trans-unit>
        <trans-unit id="7c7935726f449ea7185a4fe42a9ddf2d1c53a2e4" translate="yes" xml:space="preserve">
          <source>Input Format</source>
          <target state="translated">Formato de entrada</target>
        </trans-unit>
        <trans-unit id="1b77a7f4983f9ce773f466c761a7f6e9771bf925" translate="yes" xml:space="preserve">
          <source>Input format</source>
          <target state="translated">Formato de entrada</target>
        </trans-unit>
        <trans-unit id="789cc08a97020bab893e17ca6133192d1f9f1dac" translate="yes" xml:space="preserve">
          <source>Input is of the &quot;mboxrd&quot; format and &quot;^&amp;gt;+From &quot; line escaping is reversed.</source>
          <target state="translated">La entrada tiene el formato &quot;mboxrd&quot; y el escape de l&amp;iacute;nea &quot;^&amp;gt; + From&quot; se invierte.</target>
        </trans-unit>
        <trans-unit id="26242e7bd97bd8eebf44f9f25f143aed3a9bdc4d" translate="yes" xml:space="preserve">
          <source>Input/output format</source>
          <target state="translated">Formato de entrada/salida</target>
        </trans-unit>
        <trans-unit id="4038e1c7ebc07b210c228498bd5816f54233b768" translate="yes" xml:space="preserve">
          <source>Insert &lt;code&gt;progress&lt;/code&gt; statements every &amp;lt;n&amp;gt; objects, to be shown by &lt;code&gt;git fast-import&lt;/code&gt; during import.</source>
          <target state="translated">Inserte declaraciones de &lt;code&gt;progress&lt;/code&gt; cada &amp;lt;n&amp;gt; objetos, para que &lt;code&gt;git fast-import&lt;/code&gt; las muestre durante la importaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="39c559793b49987eea00aba844e216707b6e7dcc" translate="yes" xml:space="preserve">
          <source>Insert custom links to the action bar of all project pages. This allows you to link to third-party scripts integrating into gitweb.</source>
          <target state="translated">Insertar enlaces personalizados a la barra de acción de todas las páginas del proyecto.Esto te permite enlazar con scripts de terceros que se integran en gitweb.</target>
        </trans-unit>
        <trans-unit id="ce8fd02283c353dc3cacd2d3e6c1eab64a1913a3" translate="yes" xml:space="preserve">
          <source>Inside double quotes, double quote &lt;code&gt;&quot;&lt;/code&gt; and backslash &lt;code&gt;\&lt;/code&gt; characters must be escaped: use &lt;code&gt;\&quot;&lt;/code&gt; for &lt;code&gt;&quot;&lt;/code&gt; and &lt;code&gt;\\&lt;/code&gt; for &lt;code&gt;\&lt;/code&gt;.</source>
          <target state="translated">Dentro de las comillas dobles, las comillas dobles &lt;code&gt;&quot;&lt;/code&gt; y la barra invertida &lt;code&gt;\&lt;/code&gt; caracteres deben tener un escape: use &lt;code&gt;\&quot;&lt;/code&gt; para &lt;code&gt;&quot;&lt;/code&gt; y &lt;code&gt;\\&lt;/code&gt; para &lt;code&gt;\&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ab67c68674bb4a9f1f690fac98c95aa9c2e1e750" translate="yes" xml:space="preserve">
          <source>Inspecting changes</source>
          <target state="translated">Inspeccionando los cambios</target>
        </trans-unit>
        <trans-unit id="ecf21e44dd8609734c0bc387cabc376ab485d9f8" translate="yes" xml:space="preserve">
          <source>Inspection and Comparison</source>
          <target state="translated">Inspección y comparación</target>
        </trans-unit>
        <trans-unit id="e0c3f2780ee983978068137722cf2d423843d21f" translate="yes" xml:space="preserve">
          <source>Inspects, updates and manages submodules.</source>
          <target state="translated">Inspecciona,actualiza y administra los submódulos.</target>
        </trans-unit>
        <trans-unit id="d9fb6eb12bbc11fdad6f18ee5bfa79361ddad72b" translate="yes" xml:space="preserve">
          <source>Install the Toggle Word Wrap add-on that is available from &lt;a href=&quot;https://addons.mozilla.org/thunderbird/addon/toggle-word-wrap/&quot;&gt;https://addons.mozilla.org/thunderbird/addon/toggle-word-wrap/&lt;/a&gt; It adds a menu entry &quot;Enable Word Wrap&quot; in the composer&amp;rsquo;s &quot;Options&quot; menu that you can tick off. Now you can compose the message as you otherwise do (cut + paste, &lt;code&gt;git format-patch&lt;/code&gt; | &lt;code&gt;git imap-send&lt;/code&gt;, etc), but you have to insert line breaks manually in any text that you type.</source>
          <target state="translated">Instale el complemento Toggle Word Wrap que est&amp;aacute; disponible en &lt;a href=&quot;https://addons.mozilla.org/thunderbird/addon/toggle-word-wrap/&quot;&gt;https://addons.mozilla.org/thunderbird/addon/toggle-word-wrap/&lt;/a&gt; Agrega una entrada de men&amp;uacute; &quot;Habilitar ajuste de palabras&quot; en el men&amp;uacute; &quot;Opciones&quot; del compositor que puede marcar. Ahora puede redactar el mensaje como lo har&amp;iacute;a (cortar + pegar, &lt;code&gt;git format-patch&lt;/code&gt; | &lt;code&gt;git imap-send&lt;/code&gt; , etc.), pero debe insertar saltos de l&amp;iacute;nea manualmente en cualquier texto que escriba.</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">Installation</target>
        </trans-unit>
        <trans-unit id="7fad939655efbad1612ce7f4867922684d56913b" translate="yes" xml:space="preserve">
          <source>Instantly browse your working repository in gitweb</source>
          <target state="translated">Navega instantáneamente por tu repositorio de trabajo en gitweb</target>
        </trans-unit>
        <trans-unit id="53c902fb07156c6117155b6a0b0738c7ca12a6bf" translate="yes" xml:space="preserve">
          <source>Instead of &lt;code&gt;git bisect visualize&lt;/code&gt; and then &lt;code&gt;git reset --hard
fb47ddb2db&lt;/code&gt;, you might just want to tell Git that you want to skip the current commit:</source>
          <target state="translated">En lugar de &lt;code&gt;git bisect visualize&lt;/code&gt; y luego &lt;code&gt;git reset --hard fb47ddb2db&lt;/code&gt; , es posible que solo desee decirle a Git que desea omitir la confirmaci&amp;oacute;n actual:</target>
        </trans-unit>
        <trans-unit id="483617d942bddc8b6c044cd054e06089960e1981" translate="yes" xml:space="preserve">
          <source>Instead of a commit id on the command line (which is not expected in this case), &lt;code&gt;git http-fetch&lt;/code&gt; expects lines on stdin in the format</source>
          <target state="translated">En lugar de una identificaci&amp;oacute;n de confirmaci&amp;oacute;n en la l&amp;iacute;nea de comando (que no se espera en este caso), &lt;code&gt;git http-fetch&lt;/code&gt; espera l&amp;iacute;neas en stdin en el formato</target>
        </trans-unit>
        <trans-unit id="978fdd37a8d1d967862cc9e916d011571d6998cf" translate="yes" xml:space="preserve">
          <source>Instead of an absolute timestamp relative timestamps work as well, e.g. 2.weeks.ago is valid to address anything older than 2 weeks.</source>
          <target state="translated">En lugar de un sello de tiempo absoluto,los sellos de tiempo relativos funcionan también,por ejemplo,2.semanas.atrás es válido para abordar cualquier cosa mayor de 2 semanas.</target>
        </trans-unit>
        <trans-unit id="ad6345e758058b67dc8e001b3a11fe48b9b5f52b" translate="yes" xml:space="preserve">
          <source>Instead of applying the patch, output a condensed summary of information obtained from git diff extended headers, such as creations, renames and mode changes. Turns off &quot;apply&quot;.</source>
          <target state="translated">En lugar de aplicar el parche,se obtiene un resumen condensado de la información obtenida de git diff extended headers,como creaciones,renombramientos y cambios de modo.Desactiva la opción &quot;aplicar&quot;.</target>
        </trans-unit>
        <trans-unit id="5429abc21a21a789987424e6c0ab7612e06a85eb" translate="yes" xml:space="preserve">
          <source>Instead of applying the patch, output diffstat for the input. Turns off &quot;apply&quot;.</source>
          <target state="translated">En lugar de aplicar el parche,el diffstat de salida para la entrada.Desactiva la opción &quot;aplicar&quot;.</target>
        </trans-unit>
        <trans-unit id="881bf52883e6605d5234b3f22aaf3b7b4afc6968" translate="yes" xml:space="preserve">
          <source>Instead of applying the patch, see if the patch is applicable to the current working tree and/or the index file and detects errors. Turns off &quot;apply&quot;.</source>
          <target state="translated">En lugar de aplicar el parche,vea si el parche es aplicable al árbol de trabajo actual y/o al archivo de índice y detecta errores.Desactiva la opción &quot;aplicar&quot;.</target>
        </trans-unit>
        <trans-unit id="6e355f85b13671d925fde0c740a0dbae977bb0bc" translate="yes" xml:space="preserve">
          <source>Instead of basing a new branch on current HEAD (the default), use:</source>
          <target state="translated">En lugar de basar una nueva rama en la actual HEAD (la predeterminada),use:</target>
        </trans-unit>
        <trans-unit id="54f9cd044bb973ffe696d82cb4d71b8b1fd61c38" translate="yes" xml:space="preserve">
          <source>Instead of calling cvsps, read the provided cvsps output file. Useful for debugging or when cvsps is being handled outside cvsimport.</source>
          <target state="translated">En lugar de llamar a los cvsps,lea el archivo de salida de los cvsps proporcionados.Es útil para la depuración o cuando los cvsps se manejan fuera de cvsimport.</target>
        </trans-unit>
        <trans-unit id="bb5ec3e62f50f37c713576e81a7468472cf1721e" translate="yes" xml:space="preserve">
          <source>Instead of checking out unmerged entries, copy out the files from named stage. &amp;lt;number&amp;gt; must be between 1 and 3. Note: --stage=all automatically implies --temp.</source>
          <target state="translated">En lugar de verificar las entradas no fusionadas, copie los archivos de la etapa con nombre. &amp;lt;n&amp;uacute;mero&amp;gt; debe estar entre 1 y 3. Nota: --stage = all implica autom&amp;aacute;ticamente --temp.</target>
        </trans-unit>
        <trans-unit id="15d18d5e837d77d2ad93145197274038afcfa944" translate="yes" xml:space="preserve">
          <source>Instead of choosing a nearby commit by yourself, you can ask Git to do it for you by issuing the command:</source>
          <target state="translated">En lugar de elegir un compromiso cercano por ti mismo,puedes pedirle a Git que lo haga por ti dando la orden:</target>
        </trans-unit>
        <trans-unit id="071c6c805d6df82b0ae0937a6e3d6e7d94979975" translate="yes" xml:space="preserve">
          <source>Instead of comparing with the tip of &quot;test&quot; branch, compare with the tip of the current branch, but limit the comparison to the file &quot;test&quot;.</source>
          <target state="translated">En lugar de comparar con la punta de la rama de &quot;prueba&quot;,compara con la punta de la rama actual,pero limita la comparación al archivo &quot;prueba&quot;.</target>
        </trans-unit>
        <trans-unit id="17207c6e7e5006477485c406ccec2ab95d9a0907" translate="yes" xml:space="preserve">
          <source>Instead of considering only the 10 most recent tags as candidates to describe the input commit-ish consider up to &amp;lt;n&amp;gt; candidates. Increasing &amp;lt;n&amp;gt; above 10 will take slightly longer but may produce a more accurate result. An &amp;lt;n&amp;gt; of 0 will cause only exact matches to be output.</source>
          <target state="translated">En lugar de considerar solo las 10 etiquetas m&amp;aacute;s recientes como candidatas para describir la confirmaci&amp;oacute;n de entrada, considere hasta &amp;lt;n&amp;gt; candidatos. Aumentar &amp;lt;n&amp;gt; por encima de 10 llevar&amp;aacute; un poco m&amp;aacute;s de tiempo, pero puede producir un resultado m&amp;aacute;s preciso. Un &amp;lt;n&amp;gt; de 0 har&amp;aacute; que solo se generen coincidencias exactas.</target>
        </trans-unit>
        <trans-unit id="3d51a8a573b601f04a9b432f10be7818f6056cab" translate="yes" xml:space="preserve">
          <source>Instead of copying the files to the working directory write the content to temporary files. The temporary name associations will be written to stdout.</source>
          <target state="translated">En lugar de copiar los archivos en el directorio de trabajo,escriba el contenido en archivos temporales.Las asociaciones de nombres temporales se escribirán en stdout.</target>
        </trans-unit>
        <trans-unit id="aece37f2a7e1b433117b2533e4c10ff1af967895" translate="yes" xml:space="preserve">
          <source>Instead of explicitly specifying which refs to update, update all heads that locally exist.</source>
          <target state="translated">En lugar de especificar explícitamente cuáles son las referencias a actualizar,actualizar todas las cabezas que existen localmente.</target>
        </trans-unit>
        <trans-unit id="c9dd00560176cb59ca6811a38f98f0a00cea59a2" translate="yes" xml:space="preserve">
          <source>Instead of finding the tag that predates the commit, find the tag that comes after the commit, and thus contains it. Automatically implies --tags.</source>
          <target state="translated">En lugar de encontrar la etiqueta que precede a la confirmación,encuentra la etiqueta que viene después de la confirmación,y por lo tanto la contiene.Automáticamente implica --tags.</target>
        </trans-unit>
        <trans-unit id="c3bcf62d531bd115333abb263736c08fc67412f8" translate="yes" xml:space="preserve">
          <source>Instead of having gitweb find repositories by scanning filesystem starting from $projectroot, you can provide a pre-generated list of visible projects by setting &lt;code&gt;$projects_list&lt;/code&gt; to point to a plain text file with a list of projects (with some additional info).</source>
          <target state="translated">En lugar de hacer que gitweb encuentre repositorios escaneando el sistema de archivos a partir de $ projectroot, puede proporcionar una lista pregenerada de proyectos visibles configurando &lt;code&gt;$projects_list&lt;/code&gt; para que apunte a un archivo de texto sin formato con una lista de proyectos (con informaci&amp;oacute;n adicional).</target>
        </trans-unit>
        <trans-unit id="b8a426e0ceafe99f9ee69973b04f605e2dee7cb4" translate="yes" xml:space="preserve">
          <source>Instead of incrementally packing the unpacked objects, pack everything referenced into a single pack. Especially useful when packing a repository that is used for private development. Use with &lt;code&gt;-d&lt;/code&gt;. This will clean up the objects that &lt;code&gt;git prune&lt;/code&gt; leaves behind, but &lt;code&gt;git fsck --full --dangling&lt;/code&gt; shows as dangling.</source>
          <target state="translated">En lugar de empaquetar gradualmente los objetos desempaquetados, empaquete todo lo referenciado en un solo paquete. Especialmente &amp;uacute;til cuando se empaqueta un repositorio que se usa para desarrollo privado. Usar con &lt;code&gt;-d&lt;/code&gt; . Esto va a limpiar los objetos que &lt;code&gt;git prune&lt;/code&gt; hojas detr&amp;aacute;s, pero &lt;code&gt;git fsck --full --dangling&lt;/code&gt; espect&amp;aacute;culos como colgando.</target>
        </trans-unit>
        <trans-unit id="f1ffab5966e331d53c3cb8a3d86f241f936c7bef" translate="yes" xml:space="preserve">
          <source>Instead of initializing the repository as a directory to either &lt;code&gt;$GIT_DIR&lt;/code&gt; or &lt;code&gt;./.git/&lt;/code&gt;, create a text file there containing the path to the actual repository. This file acts as filesystem-agnostic Git symbolic link to the repository.</source>
          <target state="translated">En lugar de inicializar el repositorio como un directorio en &lt;code&gt;$GIT_DIR&lt;/code&gt; o &lt;code&gt;./.git/&lt;/code&gt; , cree un archivo de texto all&amp;iacute; que contenga la ruta al repositorio real. Este archivo act&amp;uacute;a como un enlace simb&amp;oacute;lico de Git independiente del sistema de archivos al repositorio.</target>
        </trans-unit>
        <trans-unit id="f0ef88b9adcd939e8a3f3a231e5d0c4737f1545c" translate="yes" xml:space="preserve">
          <source>Instead of leaving conflicts in the file, resolve conflicts favouring our (or their or both) side of the lines.</source>
          <target state="translated">En lugar de dejar los conflictos en el expediente,resuelva los conflictos favoreciendo nuestro (o su o ambos)lado de las líneas.</target>
        </trans-unit>
        <trans-unit id="ca8be3d7e71d110990923e82a424a61c61fcfea3" translate="yes" xml:space="preserve">
          <source>Instead of making a tar archive from the local repository, retrieve a tar archive from a remote repository. Note that the remote repository may place restrictions on which sha1 expressions may be allowed in &lt;code&gt;&amp;lt;tree-ish&amp;gt;&lt;/code&gt;. See &lt;a href=&quot;git-upload-archive&quot;&gt;git-upload-archive[1]&lt;/a&gt; for details.</source>
          <target state="translated">En lugar de crear un archivo tar desde el repositorio local, recupere un archivo tar desde un repositorio remoto. Tenga en cuenta que el repositorio remoto puede imponer restricciones sobre las expresiones sha1 que se pueden permitir en &lt;code&gt;&amp;lt;tree-ish&amp;gt;&lt;/code&gt; . Consulte &lt;a href=&quot;git-upload-archive&quot;&gt;git-upload-archive [1]&lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="7f9313c2b37d59bfbfa07ff3336c61ac5f242846" translate="yes" xml:space="preserve">
          <source>Instead of multiple service names, multiple commands will be supported by a single service</source>
          <target state="translated">En lugar de múltiples nombres de servicio,múltiples comandos serán soportados por un solo servicio</target>
        </trans-unit>
        <trans-unit id="9913e3351ae1177f0328b10cfa41d1a78100d839" translate="yes" xml:space="preserve">
          <source>Instead of naming each ref to push, specifies that all refs under &lt;code&gt;refs/&lt;/code&gt; (which includes but is not limited to &lt;code&gt;refs/heads/&lt;/code&gt;, &lt;code&gt;refs/remotes/&lt;/code&gt;, and &lt;code&gt;refs/tags/&lt;/code&gt;) be mirrored to the remote repository. Newly created local refs will be pushed to the remote end, locally updated refs will be force updated on the remote end, and deleted refs will be removed from the remote end. This is the default if the configuration option &lt;code&gt;remote.&amp;lt;remote&amp;gt;.mirror&lt;/code&gt; is set.</source>
          <target state="translated">En lugar de nombrar cada referencia para empujar, especifica que todas las referencias bajo &lt;code&gt;refs/&lt;/code&gt; (que incluye pero no se limita a &lt;code&gt;refs/heads/&lt;/code&gt; , &lt;code&gt;refs/remotes/&lt;/code&gt; y &lt;code&gt;refs/tags/&lt;/code&gt; ) se reflejen en el repositorio remoto. Las referencias locales reci&amp;eacute;n creadas se enviar&amp;aacute;n al extremo remoto, las referencias actualizadas localmente se actualizar&amp;aacute;n a la fuerza en el extremo remoto y las referencias eliminadas se eliminar&amp;aacute;n del extremo remoto. Este es el valor predeterminado si se establece la opci&amp;oacute;n de configuraci&amp;oacute;n &lt;code&gt;remote.&amp;lt;remote&amp;gt;.mirror&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9634150ab7e71bf3eb3f2b25ec8ede96c11d4e06" translate="yes" xml:space="preserve">
          <source>Instead of naming the commits using the path to reach them from heads (e.g. &quot;master~2&quot; to mean the grandparent of &quot;master&quot;), name them with the unique prefix of their object names.</source>
          <target state="translated">En lugar de nombrar las confirmaciones usando el camino para llegar a ellas desde las cabezas (por ejemplo,&quot;master~2&quot; para significar el abuelo de &quot;master&quot;),nómbrelas con el prefijo único de sus nombres de objeto.</target>
        </trans-unit>
        <trans-unit id="17b0b1c8040238e6478f5b3afd0b8cbc3b08f080" translate="yes" xml:space="preserve">
          <source>Instead of placing the cloned repository where it is supposed to be, place the cloned repository at the specified directory, then make a filesystem-agnostic Git symbolic link to there. The result is Git repository can be separated from working tree.</source>
          <target state="translated">En lugar de colocar el repositorio clonado donde se supone que debe estar,coloque el repositorio clonado en el directorio especificado,y luego haga un enlace simbólico de Git agnóstico del sistema de archivos a ese lugar.El resultado es que el repositorio Git puede ser separado del árbol de trabajo.</target>
        </trans-unit>
        <trans-unit id="22fb130092ca941fcb14aff3909ae71b595afba3" translate="yes" xml:space="preserve">
          <source>Instead of pointing the newly created HEAD to the branch pointed to by the cloned repository&amp;rsquo;s HEAD, point to &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; branch instead. In a non-bare repository, this is the branch that will be checked out. &lt;code&gt;--branch&lt;/code&gt; can also take tags and detaches the HEAD at that commit in the resulting repository.</source>
          <target state="translated">En lugar de apuntar el HEAD reci&amp;eacute;n creado a la rama a la que apunta el HEAD del repositorio clonado, apunte a la rama &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; . En un repositorio no desnudo, esta es la rama que se comprobar&amp;aacute;. &lt;code&gt;--branch&lt;/code&gt; tambi&amp;eacute;n puede tomar etiquetas y separar HEAD en esa confirmaci&amp;oacute;n en el repositorio resultante.</target>
        </trans-unit>
        <trans-unit id="33ebce829b735e00e4c7bea8b4f644ee8c315aa6" translate="yes" xml:space="preserve">
          <source>Instead of printing both the SHA-1 and the name, print only the name. If given with --tags the usual tag prefix of &quot;tags/&quot; is also omitted from the name, matching the output of &lt;code&gt;git-describe&lt;/code&gt; more closely.</source>
          <target state="translated">En lugar de imprimir tanto el SHA-1 como el nombre, imprima solo el nombre. Si se da con --tags, el prefijo de etiqueta habitual de &quot;tags /&quot; tambi&amp;eacute;n se omite del nombre, coincidiendo con la salida de &lt;code&gt;git-describe&lt;/code&gt; m&amp;aacute;s de cerca.</target>
        </trans-unit>
        <trans-unit id="064cb6e81b93b30bcf346d10dc97336e618d6fae" translate="yes" xml:space="preserve">
          <source>Instead of printing merge bases, print a minimal subset of the supplied commits with the same ancestors. In other words, among the commits given, list those which cannot be reached from any other. This mimics the behavior of &lt;code&gt;git show-branch --independent&lt;/code&gt;.</source>
          <target state="translated">En lugar de imprimir bases de combinaci&amp;oacute;n, imprima un subconjunto m&amp;iacute;nimo de las confirmaciones proporcionadas con los mismos antepasados. En otras palabras, entre las confirmaciones dadas, enumere aquellas a las que no se puede acceder desde ninguna otra. Esto imita el comportamiento de &lt;code&gt;git show-branch --independent&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a77a1e8325cae4bfdfe406c89eaae3fe4ca07d52" translate="yes" xml:space="preserve">
          <source>Instead of reading a list of objects on stdin, perform the requested batch operation on all objects in the repository and any alternate object stores (not just reachable objects). Requires &lt;code&gt;--batch&lt;/code&gt; or &lt;code&gt;--batch-check&lt;/code&gt; be specified. Note that the objects are visited in order sorted by their hashes.</source>
          <target state="translated">En lugar de leer una lista de objetos en stdin, realice la operaci&amp;oacute;n por lotes solicitada en todos los objetos del repositorio y cualquier almac&amp;eacute;n de objetos alternativo (no solo los objetos accesibles). Requiere que se &lt;code&gt;--batch&lt;/code&gt; o &lt;code&gt;--batch-check&lt;/code&gt; . Tenga en cuenta que los objetos se visitan en orden ordenado por sus valores hash.</target>
        </trans-unit>
        <trans-unit id="d4a14000f7e28706a0e6c2e4729bb02543a4d281" translate="yes" xml:space="preserve">
          <source>Instead of reading tree object(s) into the index, just empty it.</source>
          <target state="translated">En lugar de leer el objeto o los objetos del árbol en el índice,simplemente vacíalo.</target>
        </trans-unit>
        <trans-unit id="5828d05fd5c0a35f4392daf67536f9a77ece2b90" translate="yes" xml:space="preserve">
          <source>Instead of running &lt;code&gt;git repack&lt;/code&gt; you can also run &lt;code&gt;git gc
--aggressive&lt;/code&gt;, which will also optimize other things after an import (e.g. pack loose refs). As noted in the &quot;AGGRESSIVE&quot; section in &lt;a href=&quot;git-gc&quot;&gt;git-gc[1]&lt;/a&gt; the &lt;code&gt;--aggressive&lt;/code&gt; option will find new deltas with the &lt;code&gt;-f&lt;/code&gt; option to &lt;a href=&quot;git-repack&quot;&gt;git-repack[1]&lt;/a&gt;. For the reasons elaborated on above using &lt;code&gt;--aggressive&lt;/code&gt; after a fast-import is one of the few cases where it&amp;rsquo;s known to be worthwhile.</source>
          <target state="translated">En lugar de ejecutar &lt;code&gt;git repack&lt;/code&gt; , tambi&amp;eacute;n puede ejecutar &lt;code&gt;git gc --aggressive&lt;/code&gt; , que tambi&amp;eacute;n optimizar&amp;aacute; otras cosas despu&amp;eacute;s de una importaci&amp;oacute;n (por ejemplo, empaquetar referencias sueltas). Como se indica en la secci&amp;oacute;n &quot;AGRESIVO&quot; en &lt;a href=&quot;git-gc&quot;&gt;git-gc [1],&lt;/a&gt; la opci&amp;oacute;n &lt;code&gt;--aggressive&lt;/code&gt; encontrar&amp;aacute; nuevos deltas con la opci&amp;oacute;n &lt;code&gt;-f&lt;/code&gt; para &lt;a href=&quot;git-repack&quot;&gt;git-repack [1]&lt;/a&gt; . Por las razones explicadas anteriormente, el uso de &lt;code&gt;--aggressive&lt;/code&gt; despu&amp;eacute;s de una importaci&amp;oacute;n r&amp;aacute;pida es uno de los pocos casos en los que se sabe que vale la pena.</target>
        </trans-unit>
        <trans-unit id="27d7e1d82cdbf4a022b1041bc3a4b5c02db03622" translate="yes" xml:space="preserve">
          <source>Instead of running one of the known diff tools, &lt;code&gt;git difftool&lt;/code&gt; can be customized to run an alternative program by specifying the command line to invoke in a configuration variable &lt;code&gt;difftool.&amp;lt;tool&amp;gt;.cmd&lt;/code&gt;.</source>
          <target state="translated">En lugar de ejecutar una de las herramientas de diferencias conocidas, &lt;code&gt;git difftool&lt;/code&gt; se puede personalizar para ejecutar un programa alternativo especificando la l&amp;iacute;nea de comando a invocar en una variable de configuraci&amp;oacute;n &lt;code&gt;difftool.&amp;lt;tool&amp;gt;.cmd&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0a6ec50c9a1e350ef9a3f4f762c317cd2d6e8233" translate="yes" xml:space="preserve">
          <source>Instead of running one of the known merge tool programs, &lt;code&gt;git mergetool&lt;/code&gt; can be customized to run an alternative program by specifying the command line to invoke in a configuration variable &lt;code&gt;mergetool.&amp;lt;tool&amp;gt;.cmd&lt;/code&gt;.</source>
          <target state="translated">En lugar de ejecutar uno de los programas de herramientas de combinaci&amp;oacute;n conocidos, &lt;code&gt;git mergetool&lt;/code&gt; se puede personalizar para ejecutar un programa alternativo especificando la l&amp;iacute;nea de comando a invocar en una variable de configuraci&amp;oacute;n &lt;code&gt;mergetool.&amp;lt;tool&amp;gt;.cmd&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="09dffc4d1650e5ccccc05b0bf19a3e3e59eb7116" translate="yes" xml:space="preserve">
          <source>Instead of searching tracked files in the working tree, search blobs in the given trees.</source>
          <target state="translated">En lugar de buscar archivos rastreados en el árbol de trabajo,busque las manchas en los árboles dados.</target>
        </trans-unit>
        <trans-unit id="31ae83b44368ffd8feca3b205d3db8ea7d6a3c5c" translate="yes" xml:space="preserve">
          <source>Instead of searching tracked files in the working tree, search blobs registered in the index file.</source>
          <target state="translated">En lugar de buscar los archivos rastreados en el árbol de trabajo,busca las manchas registradas en el archivo de índice.</target>
        </trans-unit>
        <trans-unit id="55e6c9aa38dceb73a0632da59bc95f69bdfc3cb4" translate="yes" xml:space="preserve">
          <source>Instead of showing every matched line, show only the names of files that contain (or do not contain) matches. For better compatibility with &lt;code&gt;git diff&lt;/code&gt;, &lt;code&gt;--name-only&lt;/code&gt; is a synonym for &lt;code&gt;--files-with-matches&lt;/code&gt;.</source>
          <target state="translated">En lugar de mostrar todas las l&amp;iacute;neas coincidentes, muestre solo los nombres de los archivos que contienen (o no contienen) coincidencias. Para una mejor compatibilidad con &lt;code&gt;git diff&lt;/code&gt; , &lt;code&gt;--name-only&lt;/code&gt; es sin&amp;oacute;nimo de &lt;code&gt;--files-with-matches&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f1fdcf67f0afaa931922f6239ba4fdd53758ce0d" translate="yes" xml:space="preserve">
          <source>Instead of showing every matched line, show the number of lines that match.</source>
          <target state="translated">En lugar de mostrar cada línea coincidente,muestra el número de líneas que coinciden.</target>
        </trans-unit>
        <trans-unit id="9ddb49ffe2885e9ce52c33a63e80e23af2a075a9" translate="yes" xml:space="preserve">
          <source>Instead of showing the commit list, determine possible merge bases for the specified commits. All merge bases will be contained in all specified commits. This is different from how &lt;a href=&quot;git-merge-base&quot;&gt;git-merge-base[1]&lt;/a&gt; handles the case of three or more commits.</source>
          <target state="translated">En lugar de mostrar la lista de confirmaciones, determine las posibles bases de fusi&amp;oacute;n para las confirmaciones especificadas. Todas las bases de fusi&amp;oacute;n estar&amp;aacute;n incluidas en todas las confirmaciones especificadas. Esto es diferente de c&amp;oacute;mo &lt;a href=&quot;git-merge-base&quot;&gt;git-merge-base [1]&lt;/a&gt; maneja el caso de tres o m&amp;aacute;s confirmaciones.</target>
        </trans-unit>
        <trans-unit id="6ba3d7561fe60e77ce239084badd1d1856e50d97" translate="yes" xml:space="preserve">
          <source>Instead of showing the full 40-byte hexadecimal commit object name, show only a partial prefix. Non default number of digits can be specified with &quot;--abbrev=&amp;lt;n&amp;gt;&quot; (which also modifies diff output, if it is displayed).</source>
          <target state="translated">En lugar de mostrar el nombre completo del objeto de confirmaci&amp;oacute;n hexadecimal de 40 bytes, muestre solo un prefijo parcial. Se puede especificar un n&amp;uacute;mero de d&amp;iacute;gitos no predeterminado con &quot;--abbrev = &amp;lt;n&amp;gt;&quot; (que tambi&amp;eacute;n modifica la salida de diferencias, si se muestra).</target>
        </trans-unit>
        <trans-unit id="7d6a3b8755cc865088fd97c8d79f6b68eb4292bc" translate="yes" xml:space="preserve">
          <source>Instead of showing the full 40-byte hexadecimal object lines, show only a partial prefix. Non default number of digits can be specified with --abbrev=&amp;lt;n&amp;gt;.</source>
          <target state="translated">En lugar de mostrar las l&amp;iacute;neas completas del objeto hexadecimal de 40 bytes, muestre solo un prefijo parcial. Se puede especificar un n&amp;uacute;mero de d&amp;iacute;gitos no predeterminado con --abbrev = &amp;lt;n&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="dcd3315e868be633e341c6b1fc6b217d4459f224" translate="yes" xml:space="preserve">
          <source>Instead of showing the full 40-byte hexadecimal object name in diff-raw format output and diff-tree header lines, show only a partial prefix. This is independent of the &lt;code&gt;--full-index&lt;/code&gt; option above, which controls the diff-patch output format. Non default number of digits can be specified with &lt;code&gt;--abbrev=&amp;lt;n&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">En lugar de mostrar el nombre completo del objeto hexadecimal de 40 bytes en la salida en formato diff-raw y en las l&amp;iacute;neas de encabezado del &amp;aacute;rbol de diferencias, muestre solo un prefijo parcial. Esto es independiente de la opci&amp;oacute;n &lt;code&gt;--full-index&lt;/code&gt; anterior, que controla el formato de salida del parche de diferencias. Se puede especificar un n&amp;uacute;mero de d&amp;iacute;gitos no predeterminado con &lt;code&gt;--abbrev=&amp;lt;n&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0ac504d3062e8b5bad74846fd627b7807bedc4f2" translate="yes" xml:space="preserve">
          <source>Instead of showing the path names relative to the current working directory, show the full path names.</source>
          <target state="translated">En lugar de mostrar los nombres de las rutas relativas al directorio de trabajo actual,muestra los nombres completos de las rutas.</target>
        </trans-unit>
        <trans-unit id="5f0ed09aafafab46ef0c48e35d2b30851c21ae6a" translate="yes" xml:space="preserve">
          <source>Instead of staging files after each individual change, you can tell &lt;code&gt;git commit&lt;/code&gt; to notice the changes to the files whose contents are tracked in your working tree and do corresponding &lt;code&gt;git add&lt;/code&gt; and &lt;code&gt;git rm&lt;/code&gt; for you. That is, this example does the same as the earlier example if there is no other change in your working tree:</source>
          <target state="translated">En lugar de preparar archivos despu&amp;eacute;s de cada cambio individual, puede decirle a &lt;code&gt;git commit&lt;/code&gt; que observe los cambios en los archivos cuyo contenido se rastrea en su &amp;aacute;rbol de trabajo y que haga &lt;code&gt;git add&lt;/code&gt; y &lt;code&gt;git rm&lt;/code&gt; correspondientes por usted. Es decir, este ejemplo hace lo mismo que el ejemplo anterior si no hay ning&amp;uacute;n otro cambio en su &amp;aacute;rbol de trabajo:</target>
        </trans-unit>
        <trans-unit id="a675a0b8f5c03b948f0d18f87a17852f45d21abd" translate="yes" xml:space="preserve">
          <source>Instead of stopping at the first failed merge, do all of them in one shot - continue with merging even when previous merges returned errors, and only return the error code after all the merges.</source>
          <target state="translated">En lugar de detenerse en la primera fusión fallida,hágalo todo de una sola vez-continúe con la fusión incluso cuando las anteriores fusiones devuelvan errores,y sólo devuelva el código de error después de todas las fusiones.</target>
        </trans-unit>
        <trans-unit id="de32bccd3ddde71a98cffd2de1232e1c99dfd513" translate="yes" xml:space="preserve">
          <source>Instead of submitting create a series of shelved changelists. After creating each shelve, the relevant files are reverted/deleted. If you have multiple commits pending multiple shelves will be created.</source>
          <target state="translated">En lugar de presentar,crear una serie de listas de cambios en las estanterías.Después de crear cada estante,los archivos relevantes son revertidos/borrados.Si tiene varias confirmaciones pendientes se crearán varios estantes.</target>
        </trans-unit>
        <trans-unit id="140c71a8b471c44c130e5b1eee8b0237e8238e05" translate="yes" xml:space="preserve">
          <source>Instead of taking list of paths from the command line, read list of paths from the standard input. Paths are separated by LF (i.e. one path per line) by default.</source>
          <target state="translated">En lugar de tomar la lista de rutas de la línea de comandos,lea la lista de rutas de la entrada estándar.Los caminos están separados por LF (es decir,un camino por línea)por defecto.</target>
        </trans-unit>
        <trans-unit id="f4ba2e4e1080efba3c28ca42286f9295fb7a6889" translate="yes" xml:space="preserve">
          <source>Instead of the commit subject, use some other information to describe each commit. &lt;code&gt;&amp;lt;format&amp;gt;&lt;/code&gt; can be any string accepted by the &lt;code&gt;--format&lt;/code&gt; option of &lt;code&gt;git log&lt;/code&gt;, such as &lt;code&gt;* [%h] %s&lt;/code&gt;. (See the &quot;PRETTY FORMATS&quot; section of &lt;a href=&quot;git-log&quot;&gt;git-log[1]&lt;/a&gt;.)</source>
          <target state="translated">En lugar del asunto de la confirmaci&amp;oacute;n, use otra informaci&amp;oacute;n para describir cada confirmaci&amp;oacute;n. &lt;code&gt;&amp;lt;format&amp;gt;&lt;/code&gt; puede ser cualquier cadena aceptada por la opci&amp;oacute;n &lt;code&gt;--format&lt;/code&gt; de &lt;code&gt;git log&lt;/code&gt; , como &lt;code&gt;* [%h] %s&lt;/code&gt; . (Consulta la secci&amp;oacute;n &quot;BONITOS FORMATOS&quot; de &lt;a href=&quot;git-log&quot;&gt;git-log [1]&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="a4e872330a2ee34ffbac6bb806a9bf43b1d76b3c" translate="yes" xml:space="preserve">
          <source>Instead of the content, show the object size identified by &amp;lt;object&amp;gt;.</source>
          <target state="translated">En lugar del contenido, muestre el tama&amp;ntilde;o del objeto identificado por &amp;lt;object&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="f066e23ab4bd2d63e94325b4a2a048945fb424e1" translate="yes" xml:space="preserve">
          <source>Instead of the content, show the object type identified by &amp;lt;object&amp;gt;.</source>
          <target state="translated">En lugar del contenido, muestre el tipo de objeto identificado por &amp;lt;object&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="01b660ce7f25b8747605b72657d7e3925704df33" translate="yes" xml:space="preserve">
          <source>Instead of the default &quot;symref&quot; format for HEAD and other symbolic reference files, use symbolic links. This is sometimes needed to work with old scripts that expect HEAD to be a symbolic link.</source>
          <target state="translated">En lugar del formato &quot;symref&quot; por defecto para HEAD y otros archivos de referencia simbólicos,use enlaces simbólicos.Esto es necesario a veces para trabajar con viejos scripts que esperan que HEAD sea un enlace simbólico.</target>
        </trans-unit>
        <trans-unit id="f146d5682a8b5a97d10d05b37274aa1ba3a49c07" translate="yes" xml:space="preserve">
          <source>Instead of the default 4 digits with leading zeros, different precision can be specified for the generated filenames.</source>
          <target state="translated">En lugar de los 4 dígitos predeterminados con ceros a la izquierda,se puede especificar una precisión diferente para los nombres de archivo generados.</target>
        </trans-unit>
        <trans-unit id="e1d28ba0f9256454e559ca46e186461c224089ef" translate="yes" xml:space="preserve">
          <source>Instead of the first handful of characters, show the full pre- and post-image blob object names on the &quot;index&quot; line when generating patch format output.</source>
          <target state="translated">En lugar del primer puñado de caracteres,muestre los nombres completos de los objetos de la mancha antes y después de la imagen en la línea del &quot;índice&quot; al generar la salida del formato de parche.</target>
        </trans-unit>
        <trans-unit id="e3b6588aa8ce45f7528fa4adfa5f41dc47858a56" translate="yes" xml:space="preserve">
          <source>Instead of the normal operation, dump the shorthand alias names from the configured alias file(s), one per line in alphabetical order. Note, this only includes the alias name and not its expanded email addresses. See &lt;code&gt;sendemail.aliasesfile&lt;/code&gt; for more information about aliases.</source>
          <target state="translated">En lugar de la operaci&amp;oacute;n normal, descargue los nombres de alias abreviados de los archivos de alias configurados, uno por l&amp;iacute;nea en orden alfab&amp;eacute;tico. Tenga en cuenta que esto solo incluye el nombre de alias y no sus direcciones de correo electr&amp;oacute;nico expandidas. Consulte &lt;code&gt;sendemail.aliasesfile&lt;/code&gt; para obtener m&amp;aacute;s informaci&amp;oacute;n sobre los alias.</target>
        </trans-unit>
        <trans-unit id="77a59d82290cfd961dc9ff35f15683facfa89709" translate="yes" xml:space="preserve">
          <source>Instead of the standard &lt;code&gt;[PATCH]&lt;/code&gt; prefix in the subject line, instead use &lt;code&gt;[&amp;lt;subject prefix&amp;gt;]&lt;/code&gt;. This allows for useful naming of a patch series, and can be combined with the &lt;code&gt;--numbered&lt;/code&gt; option.</source>
          <target state="translated">En lugar del prefijo &lt;code&gt;[PATCH]&lt;/code&gt; est&amp;aacute;ndar en la l&amp;iacute;nea de asunto, utilice &lt;code&gt;[&amp;lt;subject prefix&amp;gt;]&lt;/code&gt; . Esto permite asignar un nombre &amp;uacute;til a una serie de parches y se puede combinar con la opci&amp;oacute;n &lt;code&gt;--numbered&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="440b20677cca3bad5d5589368544d09ff6997de8" translate="yes" xml:space="preserve">
          <source>Instead of using &lt;a href=&quot;git-remote&quot;&gt;git-remote[1]&lt;/a&gt;, you can also choose just to update one branch at a time, and to store it locally under an arbitrary name:</source>
          <target state="translated">En lugar de usar &lt;a href=&quot;git-remote&quot;&gt;git-remote [1]&lt;/a&gt; , tambi&amp;eacute;n puedes elegir actualizar una rama a la vez y almacenarla localmente con un nombre arbitrario:</target>
        </trans-unit>
        <trans-unit id="c80da0469d96c6db5cfae1c5b4b2cc65c570bdb0" translate="yes" xml:space="preserve">
          <source>Instead of using &lt;code&gt;.patch&lt;/code&gt; as the suffix for generated filenames, use specified suffix. A common alternative is &lt;code&gt;--suffix=.txt&lt;/code&gt;. Leaving this empty will remove the &lt;code&gt;.patch&lt;/code&gt; suffix.</source>
          <target state="translated">En lugar de utilizar &lt;code&gt;.patch&lt;/code&gt; como sufijo para los nombres de archivo generados, utilice el sufijo especificado. Una alternativa com&amp;uacute;n es &lt;code&gt;--suffix=.txt&lt;/code&gt; . Si lo deja vac&amp;iacute;o, se eliminar&amp;aacute; el sufijo &lt;code&gt;.patch&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f82d2e94f21038afaa9f1d66d3a9a0e365538f7c" translate="yes" xml:space="preserve">
          <source>Instead of using only the annotated tags, use any ref found in &lt;code&gt;refs/&lt;/code&gt; namespace. This option enables matching any known branch, remote-tracking branch, or lightweight tag.</source>
          <target state="translated">En lugar de usar solo las etiquetas anotadas, use cualquier referencia que se encuentre en &lt;code&gt;refs/&lt;/code&gt; namespace. Esta opci&amp;oacute;n permite hacer coincidir cualquier rama conocida, rama de seguimiento remoto o etiqueta ligera.</target>
        </trans-unit>
        <trans-unit id="1177311a3949b6b80d45daef7bf2616b79441b65" translate="yes" xml:space="preserve">
          <source>Instead of using only the annotated tags, use any tag found in &lt;code&gt;refs/tags&lt;/code&gt; namespace. This option enables matching a lightweight (non-annotated) tag.</source>
          <target state="translated">En lugar de usar solo las etiquetas anotadas, use cualquier etiqueta que se encuentre en el espacio de nombres &lt;code&gt;refs/tags&lt;/code&gt; . Esta opci&amp;oacute;n permite hacer coincidir una etiqueta ligera (no anotada).</target>
        </trans-unit>
        <trans-unit id="fa50874379be0d623d79d8af182cc42f83a49b1c" translate="yes" xml:space="preserve">
          <source>Instead of using the default 7 hexadecimal digits as the abbreviated object name, use &amp;lt;n&amp;gt; digits, or as many digits as needed to form a unique object name. An &amp;lt;n&amp;gt; of 0 will suppress long format, only showing the closest tag.</source>
          <target state="translated">En lugar de utilizar los 7 d&amp;iacute;gitos hexadecimales predeterminados como nombre abreviado del objeto, utilice &amp;lt;n&amp;gt; d&amp;iacute;gitos o tantos d&amp;iacute;gitos como sea necesario para formar un nombre de objeto &amp;uacute;nico. Un &amp;lt;n&amp;gt; de 0 suprimir&amp;aacute; el formato largo, mostrando solo la etiqueta m&amp;aacute;s cercana.</target>
        </trans-unit>
        <trans-unit id="183487409af3884cbc9c819c550a69752622875c" translate="yes" xml:space="preserve">
          <source>Instead of using the default 7+1 hexadecimal digits as the abbreviated object name, use &amp;lt;n&amp;gt;+1 digits. Note that 1 column is used for a caret to mark the boundary commit.</source>
          <target state="translated">En lugar de utilizar los d&amp;iacute;gitos hexadecimales predeterminados de 7 + 1 como nombre abreviado del objeto, utilice &amp;lt;n&amp;gt; +1 d&amp;iacute;gitos. Tenga en cuenta que se utiliza 1 columna para un s&amp;iacute;mbolo de intercalaci&amp;oacute;n para marcar el compromiso de l&amp;iacute;mite.</target>
        </trans-unit>
        <trans-unit id="ee5547b5d72f6d52e84d0986cad360b6f68e956a" translate="yes" xml:space="preserve">
          <source>Instead of using the remote name &lt;code&gt;origin&lt;/code&gt; to keep track of the upstream repository, use &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">En lugar de utilizar el &lt;code&gt;origin&lt;/code&gt; nombre remoto para realizar un seguimiento del repositorio ascendente, utilice &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="acaf18a5ec5cac3fd2f3b3d56ba27133d9e16abf" translate="yes" xml:space="preserve">
          <source>Instead of using the tip of the current branch, compare with the tip of &quot;test&quot; branch.</source>
          <target state="translated">En lugar de usar la punta de la rama actual,compárala con la punta de la rama de &quot;prueba&quot;.</target>
        </trans-unit>
        <trans-unit id="0e0bb2a4d944b8f5531055e279607820e676a94b" translate="yes" xml:space="preserve">
          <source>Instead of walking the commit ancestry chain, walk reflog entries from the most recent one to older ones. When this option is used you cannot specify commits to exclude (that is, &lt;code&gt;^commit&lt;/code&gt;, &lt;code&gt;commit1..commit2&lt;/code&gt;, and &lt;code&gt;commit1...commit2&lt;/code&gt; notations cannot be used).</source>
          <target state="translated">En lugar de recorrer la cadena de ascendencia de confirmaci&amp;oacute;n, recorra las entradas de re-registro desde la m&amp;aacute;s reciente hasta las m&amp;aacute;s antiguas. Cuando se usa esta opci&amp;oacute;n, no se pueden especificar confirmaciones para excluir (es decir , las &lt;code&gt;commit1..commit2&lt;/code&gt; &lt;code&gt;^commit&lt;/code&gt; , compromiso1..commit2 y &lt;code&gt;commit1...commit2&lt;/code&gt; no se pueden usar).</target>
        </trans-unit>
        <trans-unit id="00c411b0a21221afdc6e21c624bf253d7212e3a9" translate="yes" xml:space="preserve">
          <source>Instead of writing the results out to &lt;code&gt;$GIT_INDEX_FILE&lt;/code&gt;, write the resulting index in the named file. While the command is operating, the original index file is locked with the same mechanism as usual. The file must allow to be rename(2)ed into from a temporary file that is created next to the usual index file; typically this means it needs to be on the same filesystem as the index file itself, and you need write permission to the directories the index file and index output file are located in.</source>
          <target state="translated">En lugar de escribir los resultados en &lt;code&gt;$GIT_INDEX_FILE&lt;/code&gt; , escriba el &amp;iacute;ndice resultante en el archivo nombrado. Mientras el comando est&amp;aacute; funcionando, el archivo de &amp;iacute;ndice original se bloquea con el mismo mecanismo que de costumbre. El archivo debe permitir cambiar el nombre (2) desde un archivo temporal que se crea junto al archivo de &amp;iacute;ndice habitual; Por lo general, esto significa que debe estar en el mismo sistema de archivos que el archivo de &amp;iacute;ndice en s&amp;iacute;, y necesita permiso de escritura en los directorios en los que se encuentran el archivo de &amp;iacute;ndice y el archivo de salida del &amp;iacute;ndice.</target>
        </trans-unit>
        <trans-unit id="ef06396aed739ff032fb1ddeda938ad4cf5e4280" translate="yes" xml:space="preserve">
          <source>Instruct Git to avoid trying to guess defaults for &lt;code&gt;user.email&lt;/code&gt; and &lt;code&gt;user.name&lt;/code&gt;, and instead retrieve the values only from the configuration. For example, if you have multiple email addresses and would like to use a different one for each repository, then with this configuration option set to &lt;code&gt;true&lt;/code&gt; in the global config along with a name, Git will prompt you to set up an email before making new commits in a newly cloned repository. Defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">Indique a Git que evite intentar adivinar los valores predeterminados para &lt;code&gt;user.email&lt;/code&gt; y &lt;code&gt;user.name&lt;/code&gt; y, en su lugar, recupere los valores solo de la configuraci&amp;oacute;n. Por ejemplo, si tiene varias direcciones de correo electr&amp;oacute;nico y le gustar&amp;iacute;a usar una diferente para cada repositorio, entonces con esta opci&amp;oacute;n de configuraci&amp;oacute;n establecida en &lt;code&gt;true&lt;/code&gt; en la configuraci&amp;oacute;n global junto con un nombre, Git le pedir&amp;aacute; que configure un correo electr&amp;oacute;nico antes de crear un nuevo confirma en un repositorio reci&amp;eacute;n clonado. El valor predeterminado es &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a592acd9f11ad3bff77a1878bfa756913e7df3fe" translate="yes" xml:space="preserve">
          <source>Instruction to add new data</source>
          <target state="translated">Instrucción para añadir nuevos datos</target>
        </trans-unit>
        <trans-unit id="c222c271406b6a5c2fcfc84ba72b7981aee6b09e" translate="yes" xml:space="preserve">
          <source>Instruction to copy from base object</source>
          <target state="translated">Instrucciones para copiar desde el objeto base</target>
        </trans-unit>
        <trans-unit id="6131d2bc98a67fbf2df419d53c2a5951a56eb747" translate="yes" xml:space="preserve">
          <source>Instructs the remote helper that any subsequent input is part of a fast-import stream (generated by &lt;code&gt;git fast-export&lt;/code&gt;) containing objects which should be pushed to the remote.</source>
          <target state="translated">Indica al asistente remoto que cualquier entrada posterior es parte de un flujo de importaci&amp;oacute;n r&amp;aacute;pida (generado por &lt;code&gt;git fast-export&lt;/code&gt; ) que contiene objetos que deben enviarse al control remoto.</target>
        </trans-unit>
        <trans-unit id="563eacc97631ea8eeadfe6b54ffbd63455326490" translate="yes" xml:space="preserve">
          <source>Integer. Specifies desired depth of nested regions in the event output. Regions deeper than this value will be omitted. May be overridden by the &lt;code&gt;GIT_TRACE2_EVENT_NESTING&lt;/code&gt; environment variable. Defaults to 2.</source>
          <target state="translated">Entero. Especifica la profundidad deseada de las regiones anidadas en la salida del evento. Se omitir&amp;aacute;n las regiones m&amp;aacute;s profundas que este valor. Puede ser anulado por la variable de entorno &lt;code&gt;GIT_TRACE2_EVENT_NESTING&lt;/code&gt; . Por defecto es 2.</target>
        </trans-unit>
        <trans-unit id="f3e0144605c9578fc597fd7ff39de75aab2afefe" translate="yes" xml:space="preserve">
          <source>Integer. When writing trace files to a target directory, do not write additional traces if we would exceed this many files. Instead, write a sentinel file that will block further tracing to this directory. Defaults to 0, which disables this check.</source>
          <target state="translated">Entero.Al escribir archivos de rastreo en un directorio de destino,no escribas rastros adicionales si superamos esta cantidad de archivos.En su lugar,escriba un archivo centinela que bloquee el rastreo a este directorio.El valor predeterminado es 0,lo que desactiva esta comprobación.</target>
        </trans-unit>
        <trans-unit id="a6768cae9c51930f13c302375f3385c6c77b2104" translate="yes" xml:space="preserve">
          <source>Integrator</source>
          <target state="translated">Integrator</target>
        </trans-unit>
        <trans-unit id="e30f6e398ba3d7dd3d6ee2f7d0d8940d3116f2a5" translate="yes" xml:space="preserve">
          <source>Interacting with Others</source>
          <target state="translated">Interacción con los demás</target>
        </trans-unit>
        <trans-unit id="e9854d76872b55831675241f09e80f37f1939cea" translate="yes" xml:space="preserve">
          <source>Interaction between checkin/checkout attributes</source>
          <target state="translated">Interacción entre los atributos de entrada y salida</target>
        </trans-unit>
        <trans-unit id="0d798c0b1cd4a6d135dc1e4671cde5f33dab863b" translate="yes" xml:space="preserve">
          <source>Interactive mode</source>
          <target state="translated">Modo interactivo</target>
        </trans-unit>
        <trans-unit id="fb0ea93fbb85b738df0bd31fcf1bc9eb5468d22b" translate="yes" xml:space="preserve">
          <source>Interactive use</source>
          <target state="translated">Uso interactivo</target>
        </trans-unit>
        <trans-unit id="94db97a8381d05a800daa18ce0818d37326de61f" translate="yes" xml:space="preserve">
          <source>Interactively choose hunks of patch between the index and the work tree and add them to the index. This gives the user a chance to review the difference before adding modified contents to the index.</source>
          <target state="translated">Interactivamente elige trozos de parche entre el índice y el árbol de trabajo y añádelos al índice.Esto le da al usuario la oportunidad de revisar la diferencia antes de añadir contenidos modificados al índice.</target>
        </trans-unit>
        <trans-unit id="942e3b50f8575a931a7b62b4970978b40b59bcee" translate="yes" xml:space="preserve">
          <source>Interactively select hunks in the difference between the &lt;code&gt;&amp;lt;tree-ish&amp;gt;&lt;/code&gt; (or the index, if unspecified) and the working tree. The chosen hunks are then applied in reverse to the working tree (and if a &lt;code&gt;&amp;lt;tree-ish&amp;gt;&lt;/code&gt; was specified, the index).</source>
          <target state="translated">Seleccione de forma interactiva trozos en la diferencia entre el &lt;code&gt;&amp;lt;tree-ish&amp;gt;&lt;/code&gt; (o el &amp;iacute;ndice, si no se especifica) y el &amp;aacute;rbol de trabajo. Los trozos elegidos se aplican entonces al rev&amp;eacute;s al &amp;aacute;rbol de trabajo (y si se especific&amp;oacute; un &lt;code&gt;&amp;lt;tree-ish&amp;gt;&lt;/code&gt; , el &amp;iacute;ndice).</target>
        </trans-unit>
        <trans-unit id="6b61a0bfaba36c21326a6cc1d8076250bbb8f781" translate="yes" xml:space="preserve">
          <source>Interactively select hunks in the difference between the index and &lt;code&gt;&amp;lt;tree-ish&amp;gt;&lt;/code&gt; (defaults to &lt;code&gt;HEAD&lt;/code&gt;). The chosen hunks are applied in reverse to the index.</source>
          <target state="translated">Seleccione de forma interactiva trozos en la diferencia entre el &amp;iacute;ndice y &lt;code&gt;&amp;lt;tree-ish&amp;gt;&lt;/code&gt; (el valor predeterminado es &lt;code&gt;HEAD&lt;/code&gt; ). Los trozos elegidos se aplican a la inversa del &amp;iacute;ndice.</target>
        </trans-unit>
        <trans-unit id="11c4e8d4b31fcec1faa8b21ab916ae6d7ecd6196" translate="yes" xml:space="preserve">
          <source>Interactively select hunks in the difference between the restore source and the restore location. See the &amp;ldquo;Interactive Mode&amp;rdquo; section of &lt;a href=&quot;git-add&quot;&gt;git-add[1]&lt;/a&gt; to learn how to operate the &lt;code&gt;--patch&lt;/code&gt; mode.</source>
          <target state="translated">Seleccione de forma interactiva trozos en la diferencia entre la fuente de restauraci&amp;oacute;n y la ubicaci&amp;oacute;n de restauraci&amp;oacute;n. Consulte la secci&amp;oacute;n &quot;Modo interactivo&quot; de &lt;a href=&quot;git-add&quot;&gt;git-add [1]&lt;/a&gt; para aprender c&amp;oacute;mo operar el modo &lt;code&gt;--patch&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="37d460e42c18dd6a2f67dd6cfcf736b2dc4e3735" translate="yes" xml:space="preserve">
          <source>Internal detail of implementation. What is important is that if this field is not present then per-repository override for given feature is not supported.</source>
          <target state="translated">Detalle interno de la aplicación.Lo que es importante es que si este campo no está presente,entonces no se admite la anulación por repositorio de una determinada característica.</target>
        </trans-unit>
        <trans-unit id="fcd742802f00593c0aa9a5d67d6ee0045ea54dd6" translate="yes" xml:space="preserve">
          <source>Internal helper commands</source>
          <target state="translated">Los comandos de ayuda interna</target>
        </trans-unit>
        <trans-unit id="99089329f972015329c6ab2c5f20f49ab1b0fb2e" translate="yes" xml:space="preserve">
          <source>Internal variable identifying the repository format and layout version.</source>
          <target state="translated">Variable interna que identifica el formato del depósito y la versión de diseño.</target>
        </trans-unit>
        <trans-unit id="d2a9fe262eee692f1042088fcd5412df8b02ed0e" translate="yes" xml:space="preserve">
          <source>Internal variable which enables various workarounds to enable Git to work better on filesystems that are not case sensitive, like APFS, HFS+, FAT, NTFS, etc. For example, if a directory listing finds &quot;makefile&quot; when Git expects &quot;Makefile&quot;, Git will assume it is really the same file, and continue to remember it as &quot;Makefile&quot;.</source>
          <target state="translated">Variable interna que permite varias soluciones alternativas para que Git funcione mejor en sistemas de archivos que no distinguen entre mayúsculas y minúsculas,como APFS,HFS+,FAT,NTFS,etc.Por ejemplo,si un listado de directorios encuentra &quot;makefile&quot; cuando Git espera &quot;Makefile&quot;,Git asumirá que se trata realmente del mismo archivo,y continuará recordándolo como &quot;Makefile&quot;.</target>
        </trans-unit>
        <trans-unit id="fd5dd045ecadbef7edb9976d5bf76d5e7548b5a7" translate="yes" xml:space="preserve">
          <source>Interpret &amp;lt;refname&amp;gt; as a reference name pattern for a refspec (as used with remote repositories). If this option is enabled, &amp;lt;refname&amp;gt; is allowed to contain a single &lt;code&gt;*&lt;/code&gt; in the refspec (e.g., &lt;code&gt;foo/bar*/baz&lt;/code&gt; or &lt;code&gt;foo/bar*baz/&lt;/code&gt; but not &lt;code&gt;foo/bar*/baz*&lt;/code&gt;).</source>
          <target state="translated">Interprete &amp;lt;refname&amp;gt; como un patr&amp;oacute;n de nombre de referencia para una refspec (como se usa con repositorios remotos). Si esta opci&amp;oacute;n est&amp;aacute; habilitada, &amp;lt;refname&amp;gt; puede contener un solo &lt;code&gt;*&lt;/code&gt; en la refspec (por ejemplo, &lt;code&gt;foo/bar*/baz&lt;/code&gt; o &lt;code&gt;foo/bar*baz/&lt;/code&gt; pero no &lt;code&gt;foo/bar*/baz*&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="670ef7722a61e3342fef6602c3dc04b50457ccb3" translate="yes" xml:space="preserve">
          <source>Interpret all preceding arguments as attributes and all following arguments as path names.</source>
          <target state="translated">Interpreta todos los argumentos precedentes como atributos y todos los argumentos siguientes como nombres de ruta.</target>
        </trans-unit>
        <trans-unit id="c75cadb4ae816991e0dd6b40f2cda63b6ea63eb7" translate="yes" xml:space="preserve">
          <source>Interrogation commands</source>
          <target state="translated">Comandos de interrogación</target>
        </trans-unit>
        <trans-unit id="f1e6fa1e2ddb5fcd808e3092148f74242800360f" translate="yes" xml:space="preserve">
          <source>Interrogators:</source>
          <target state="translated">Interrogators:</target>
        </trans-unit>
        <trans-unit id="8b0b6bf2544da29702a138cd7dd487472490ccff" translate="yes" xml:space="preserve">
          <source>Interrupt transfer after &amp;lt;n&amp;gt; seconds of inactivity.</source>
          <target state="translated">Interrumpa la transferencia despu&amp;eacute;s de &amp;lt;n&amp;gt; segundos de inactividad.</target>
        </trans-unit>
        <trans-unit id="9f1df172d790d81927bf10eb32b7a53862fd94a5" translate="yes" xml:space="preserve">
          <source>Interrupted workflow</source>
          <target state="translated">Flujo de trabajo interrumpido</target>
        </trans-unit>
        <trans-unit id="b566252f7afe805214a7771e6b2a586b4e458c82" translate="yes" xml:space="preserve">
          <source>Introduction to &quot;git bisect&quot;</source>
          <target state="translated">Introducción a &quot;git bisect&quot;</target>
        </trans-unit>
        <trans-unit id="273a20c96a580af6e0e1fc6c4491680cd6e13de6" translate="yes" xml:space="preserve">
          <source>Intuitiveness is not the goal here. Repeatability is. The reason for the &quot;no arguments means no work&quot; behavior is that from scripts you are supposed to be able to do:</source>
          <target state="translated">La intuición no es el objetivo aquí.La repetibilidad sí.La razón del comportamiento &quot;sin argumentos no hay trabajo&quot; es que a partir de los guiones que se supone que puedes hacer:</target>
        </trans-unit>
        <trans-unit id="6a9b44369c96eafd66d755034e5ce80488ad8832" translate="yes" xml:space="preserve">
          <source>Invocation</source>
          <target state="translated">Invocation</target>
        </trans-unit>
        <trans-unit id="1d5f124f7b2f261867ec41e2c056658bb6e88c34" translate="yes" xml:space="preserve">
          <source>Invoke a text editor (see GIT_EDITOR in &lt;a href=&quot;git-var&quot;&gt;git-var[1]&lt;/a&gt;) to edit an introductory message for the patch series.</source>
          <target state="translated">Invoque un editor de texto (consulte GIT_EDITOR en &lt;a href=&quot;git-var&quot;&gt;git-var [1]&lt;/a&gt; ) para editar un mensaje introductorio para la serie de parches.</target>
        </trans-unit>
        <trans-unit id="9ba2ef7b89376be98d487b046c212677da3221b4" translate="yes" xml:space="preserve">
          <source>Invoke an editor before committing successful mechanical merge to further edit the auto-generated merge message, so that the user can explain and justify the merge. The &lt;code&gt;--no-edit&lt;/code&gt; option can be used to accept the auto-generated message (this is generally discouraged).</source>
          <target state="translated">Invoque un editor antes de realizar una fusi&amp;oacute;n mec&amp;aacute;nica exitosa para editar m&amp;aacute;s el mensaje de fusi&amp;oacute;n generado autom&amp;aacute;ticamente, de modo que el usuario pueda explicar y justificar la fusi&amp;oacute;n. La &lt;code&gt;--no-edit&lt;/code&gt; se puede utilizar para aceptar el mensaje generado autom&amp;aacute;ticamente (esto generalmente no se recomienda).</target>
        </trans-unit>
        <trans-unit id="a978683542367bbc42f0a41dd9d11a4a00c553d9" translate="yes" xml:space="preserve">
          <source>Invoke an editor before committing successful mechanical merge to further edit the auto-generated merge message, so that the user can explain and justify the merge. The &lt;code&gt;--no-edit&lt;/code&gt; option can be used to accept the auto-generated message (this is generally discouraged). The &lt;code&gt;--edit&lt;/code&gt; (or &lt;code&gt;-e&lt;/code&gt;) option is still useful if you are giving a draft message with the &lt;code&gt;-m&lt;/code&gt; option from the command line and want to edit it in the editor.</source>
          <target state="translated">Invoque un editor antes de realizar una fusi&amp;oacute;n mec&amp;aacute;nica exitosa para editar m&amp;aacute;s el mensaje de fusi&amp;oacute;n generado autom&amp;aacute;ticamente, de modo que el usuario pueda explicar y justificar la fusi&amp;oacute;n. La &lt;code&gt;--no-edit&lt;/code&gt; se puede utilizar para aceptar el mensaje generado autom&amp;aacute;ticamente (esto generalmente no se recomienda). La &lt;code&gt;--edit&lt;/code&gt; (o &lt;code&gt;-e&lt;/code&gt; ) sigue siendo &amp;uacute;til si est&amp;aacute; dando un borrador de mensaje con la opci&amp;oacute;n &lt;code&gt;-m&lt;/code&gt; desde la l&amp;iacute;nea de comando y desea editarlo en el editor.</target>
        </trans-unit>
        <trans-unit id="ab51558f752b86c08b9c277e1cd35bd4f5da28bc" translate="yes" xml:space="preserve">
          <source>Invoke the sendemail-validate hook if present (see &lt;a href=&quot;githooks&quot;&gt;githooks[5]&lt;/a&gt;).</source>
          <target state="translated">Invoque el gancho sendemail-validate si est&amp;aacute; presente (consulte &lt;a href=&quot;githooks&quot;&gt;githooks [5]&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="6307458f7efb25e5d4237ad7a4e972e464f2ab54" translate="yes" xml:space="preserve">
          <source>Invoked by &lt;code&gt;git archive --remote&lt;/code&gt; and sends a generated archive to the other end over the Git protocol.</source>
          <target state="translated">Invocado por &lt;code&gt;git archive --remote&lt;/code&gt; y env&amp;iacute;a un archivo generado al otro extremo a trav&amp;eacute;s del protocolo Git.</target>
        </trans-unit>
        <trans-unit id="4591feb10dd06f62e310d9c287cf3f981ce9babf" translate="yes" xml:space="preserve">
          <source>Invoked by &lt;code&gt;git fetch-pack&lt;/code&gt;, learns what objects the other side is missing, and sends them after packing.</source>
          <target state="translated">Invocado por &lt;code&gt;git fetch-pack&lt;/code&gt; , aprende qu&amp;eacute; objetos le faltan al otro lado y los env&amp;iacute;a despu&amp;eacute;s del empaque.</target>
        </trans-unit>
        <trans-unit id="a7f91dd525c007f2b681e8a032a0618f9a34ea1c" translate="yes" xml:space="preserve">
          <source>Invoked by &lt;code&gt;git send-pack&lt;/code&gt; and updates the repository with the information fed from the remote end.</source>
          <target state="translated">Invocado por &lt;code&gt;git send-pack&lt;/code&gt; y actualiza el repositorio con la informaci&amp;oacute;n alimentada desde el extremo remoto.</target>
        </trans-unit>
        <trans-unit id="d65563f7b9f547034dceec39b8ac04f9c683c150" translate="yes" xml:space="preserve">
          <source>Invokes &lt;code&gt;git-receive-pack&lt;/code&gt; on a possibly remote repository, and updates it from the current repository, sending named refs.</source>
          <target state="translated">Invoca &lt;code&gt;git-receive-pack&lt;/code&gt; en un repositorio posiblemente remoto y lo actualiza desde el repositorio actual, enviando referencias con nombre.</target>
        </trans-unit>
        <trans-unit id="b53ca0a7337f2511de77389036559a87c502bc3d" translate="yes" xml:space="preserve">
          <source>Invokes &lt;code&gt;git-upload-pack&lt;/code&gt; on a possibly remote repository and asks it to send objects missing from this repository, to update the named heads. The list of commits available locally is found out by scanning the local refs/ hierarchy and sent to &lt;code&gt;git-upload-pack&lt;/code&gt; running on the other end.</source>
          <target state="translated">Invoca &lt;code&gt;git-upload-pack&lt;/code&gt; en un repositorio posiblemente remoto y le pide que env&amp;iacute;e los objetos que faltan en este repositorio, para actualizar los encabezados nombrados. La lista de confirmaciones disponibles localmente se encuentra escaneando las referencias / jerarqu&amp;iacute;a locales y se env&amp;iacute;a a &lt;code&gt;git-upload-pack&lt;/code&gt; que se ejecuta en el otro extremo.</target>
        </trans-unit>
        <trans-unit id="a31ffeaabebc608f725ad5aea0019f330d8c2ea7" translate="yes" xml:space="preserve">
          <source>Invoking &lt;code&gt;git add -e&lt;/code&gt; or selecting &lt;code&gt;e&lt;/code&gt; from the interactive hunk selector will open a patch in your editor; after the editor exits, the result is applied to the index. You are free to make arbitrary changes to the patch, but note that some changes may have confusing results, or even result in a patch that cannot be applied. If you want to abort the operation entirely (i.e., stage nothing new in the index), simply delete all lines of the patch. The list below describes some common things you may see in a patch, and which editing operations make sense on them.</source>
          <target state="translated">Invocar &lt;code&gt;git add -e&lt;/code&gt; o seleccionar &lt;code&gt;e&lt;/code&gt; en el selector interactivo de trozos abrir&amp;aacute; un parche en su editor; una vez que sale el editor, el resultado se aplica al &amp;iacute;ndice. Puede realizar cambios arbitrarios en el parche, pero tenga en cuenta que algunos cambios pueden tener resultados confusos o incluso dar como resultado un parche que no se puede aplicar. Si desea cancelar la operaci&amp;oacute;n por completo (es decir, no incluir nada nuevo en el &amp;iacute;ndice), simplemente elimine todas las l&amp;iacute;neas del parche. La siguiente lista describe algunas cosas comunes que puede ver en un parche y qu&amp;eacute; operaciones de edici&amp;oacute;n tienen sentido en ellas.</target>
        </trans-unit>
        <trans-unit id="7eda501750cd6c5e49ea1b4fd74542b592feab87" translate="yes" xml:space="preserve">
          <source>Involving QA people and if possible end users</source>
          <target state="translated">Involucrar a las personas de control de calidad y,si es posible,a los usuarios finales</target>
        </trans-unit>
        <trans-unit id="4ddb9cd693a2e162ef85f6fbfe4abc845111ebb9" translate="yes" xml:space="preserve">
          <source>Is a synonym for &lt;code&gt;zebra&lt;/code&gt;. This may change to a more sensible mode in the future.</source>
          <target state="translated">Es sin&amp;oacute;nimo de &lt;code&gt;zebra&lt;/code&gt; . Esto puede cambiar a un modo m&amp;aacute;s sensato en el futuro.</target>
        </trans-unit>
        <trans-unit id="4f13daaae3d7fc7ba5d15c4ccfc54188d83d267e" translate="yes" xml:space="preserve">
          <source>Is used as suggested name when creating new branches using the &lt;a href=&quot;git-gui&quot;&gt;git-gui[1]&lt;/a&gt;.</source>
          <target state="translated">Se usa como nombre sugerido al crear nuevas ramas usando &lt;a href=&quot;git-gui&quot;&gt;git-gui [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6f3229278b909458bc76fcc500cf44677191a296" translate="yes" xml:space="preserve">
          <source>Islands are configured via the &lt;code&gt;pack.island&lt;/code&gt; option, which can be specified multiple times. Each value is a left-anchored regular expressions matching refnames. For example:</source>
          <target state="translated">Las islas se configuran mediante la opci&amp;oacute;n &lt;code&gt;pack.island&lt;/code&gt; , que se puede especificar varias veces. Cada valor es una expresi&amp;oacute;n regular anclada a la izquierda que coincide con nombres de referencia. Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="30ce4cb25faae86427d8ac22e8f50a0a74f3f393" translate="yes" xml:space="preserve">
          <source>Issues</source>
          <target state="translated">Issues</target>
        </trans-unit>
        <trans-unit id="0120e142d77ed0c1102a3548e5e6ca12ae1c469b" translate="yes" xml:space="preserve">
          <source>Issues which are security relevant should be disclosed privately to the Git Security mailing list &amp;lt;&lt;a href=&quot;mailto:git-security@googlegroups.com&quot;&gt;git-security@googlegroups.com&lt;/a&gt;&amp;gt;.</source>
          <target state="translated">Los problemas que sean relevantes para la seguridad deben comunicarse de forma privada a la lista de correo de seguridad de Git &amp;lt; &lt;a href=&quot;mailto:git-security@googlegroups.com&quot;&gt;git-security@googlegroups.com&lt;/a&gt; &amp;gt;.</target>
        </trans-unit>
        <trans-unit id="7e6ca0d89968d14a4a145a03ebcf512ab164b2cf" translate="yes" xml:space="preserve">
          <source>Issuing a &lt;code&gt;filedeleteall&lt;/code&gt; followed by the needed &lt;code&gt;filemodify&lt;/code&gt; commands to set the correct content will produce the same results as sending only the needed &lt;code&gt;filemodify&lt;/code&gt; and &lt;code&gt;filedelete&lt;/code&gt; commands. The &lt;code&gt;filedeleteall&lt;/code&gt; approach may however require fast-import to use slightly more memory per active branch (less than 1 MiB for even most large projects); so frontends that can easily obtain only the affected paths for a commit are encouraged to do so.</source>
          <target state="translated">Emitir un &lt;code&gt;filedeleteall&lt;/code&gt; seguido de los comandos &lt;code&gt;filemodify&lt;/code&gt; necesarios para establecer el contenido correcto producir&amp;aacute; los mismos resultados que enviar solo los comandos &lt;code&gt;filemodify&lt;/code&gt; y &lt;code&gt;filedelete&lt;/code&gt; necesarios . Sin &lt;code&gt;filedeleteall&lt;/code&gt; enfoque filedeleteall puede requerir una importaci&amp;oacute;n r&amp;aacute;pida para usar un poco m&amp;aacute;s de memoria por rama activa (menos de 1 MiB incluso para la mayor&amp;iacute;a de los proyectos grandes); por lo que se alienta a las interfaces que pueden obtener f&amp;aacute;cilmente solo las rutas afectadas para una confirmaci&amp;oacute;n a hacerlo.</target>
        </trans-unit>
        <trans-unit id="bdf45bc4332be1bec5eceb55b9547e5441cbefc8" translate="yes" xml:space="preserve">
          <source>It adds the submodule&amp;rsquo;s clone path to the &lt;a href=&quot;gitmodules&quot;&gt;gitmodules[5]&lt;/a&gt; file and adds this file to the index, ready to be committed.</source>
          <target state="translated">Agrega la ruta de clonaci&amp;oacute;n del subm&amp;oacute;dulo al archivo &lt;a href=&quot;gitmodules&quot;&gt;gitmodules [5]&lt;/a&gt; y agrega este archivo al &amp;iacute;ndice, listo para ser enviado.</target>
        </trans-unit>
        <trans-unit id="8c81521fe76c33a9e0c12152a7126a3168cdc6bc" translate="yes" xml:space="preserve">
          <source>It adds the submodule&amp;rsquo;s current commit ID to the index, ready to be committed.</source>
          <target state="translated">Agrega el ID de confirmaci&amp;oacute;n actual del subm&amp;oacute;dulo al &amp;iacute;ndice, listo para ser confirmado.</target>
        </trans-unit>
        <trans-unit id="d31bfc2387ea73611500553c1004cb0667d4f160" translate="yes" xml:space="preserve">
          <source>It affects the way a change that amounts to a total rewrite of a file not as a series of deletion and insertion mixed together with a very few lines that happen to match textually as the context, but as a single deletion of everything old followed by a single insertion of everything new, and the number &lt;code&gt;m&lt;/code&gt; controls this aspect of the -B option (defaults to 60%). &lt;code&gt;-B/70%&lt;/code&gt; specifies that less than 30% of the original should remain in the result for Git to consider it a total rewrite (i.e. otherwise the resulting patch will be a series of deletion and insertion mixed together with context lines).</source>
          <target state="translated">Afecta la forma en que un cambio que equivale a una reescritura total de un archivo no como una serie de eliminaci&amp;oacute;n e inserci&amp;oacute;n mezcladas con unas pocas l&amp;iacute;neas que coinciden textualmente con el contexto, sino como una eliminaci&amp;oacute;n &amp;uacute;nica de todo lo antiguo seguido de una una sola inserci&amp;oacute;n de todo lo nuevo, y el n&amp;uacute;mero &lt;code&gt;m&lt;/code&gt; controla este aspecto de la opci&amp;oacute;n -B (el valor predeterminado es 60%). &lt;code&gt;-B/70%&lt;/code&gt; especifica que menos del 30% del original debe permanecer en el resultado para que Git lo considere una reescritura total (es decir, de lo contrario, el parche resultante ser&amp;aacute; una serie de eliminaci&amp;oacute;n e inserci&amp;oacute;n mezcladas con l&amp;iacute;neas de contexto).</target>
        </trans-unit>
        <trans-unit id="3769038328418f1b146bfedf460a0d4ea1eab91b" translate="yes" xml:space="preserve">
          <source>It also allows a &quot;ref&quot; file to be a symbolic pointer to another ref file by starting with the four-byte header sequence of &quot;ref:&quot;.</source>
          <target state="translated">También permite que un archivo &quot;ref&quot; sea un puntero simbólico a otro archivo &quot;ref&quot; comenzando con la secuencia de encabezamiento de cuatro bytes de &quot;ref:&quot;.</target>
        </trans-unit>
        <trans-unit id="c1a8e562ae70e23b9286b736cb60f8fd411f796d" translate="yes" xml:space="preserve">
          <source>It can also be useful in scripts passed to &quot;git bisect run&quot; to &quot;exit 255&quot; if some very abnormal situation is detected.</source>
          <target state="translated">También puede ser útil en los guiones que se pasan a &quot;git bisect run&quot; a &quot;exit 255&quot; si se detecta alguna situación muy anormal.</target>
        </trans-unit>
        <trans-unit id="79b5b9aab5919bae0a6145dab082f1d19cd80f67" translate="yes" xml:space="preserve">
          <source>It can be cumbersome to input the same credentials over and over. Git provides two methods to reduce this annoyance:</source>
          <target state="translated">Puede ser engorroso introducir las mismas credenciales una y otra vez.Git proporciona dos métodos para reducir esta molestia:</target>
        </trans-unit>
        <trans-unit id="4e1aaed29365e5e25e94340f3a0f563a3458fb95" translate="yes" xml:space="preserve">
          <source>It can be used to inspect the current working tree and refuse to make a commit if it does not pass certain test.</source>
          <target state="translated">Puede utilizarse para inspeccionar el árbol de trabajo actual y negarse a hacer un compromiso si no pasa ciertas pruebas.</target>
        </trans-unit>
        <trans-unit id="15367977bf1bc97e62677f2311accebdf50497b6" translate="yes" xml:space="preserve">
          <source>It can efficiently represent information about merge conflicts between different tree objects, allowing each pathname to be associated with sufficient information about the trees involved that you can create a three-way merge between them.</source>
          <target state="translated">Puede representar eficientemente la información sobre conflictos de fusión entre diferentes objetos de árboles,permitiendo que cada ruta de acceso se asocie con suficiente información sobre los árboles involucrados como para crear una fusión a tres bandas entre ellos.</target>
        </trans-unit>
        <trans-unit id="61f59429096395b0e09a9585119ef97dbe0f3099" translate="yes" xml:space="preserve">
          <source>It cannot show more than 29 branches and commits at a time.</source>
          <target state="translated">No puede mostrar más de 29 ramas y se compromete a la vez.</target>
        </trans-unit>
        <trans-unit id="84908290c2ad8351819557b635db90afccbc35f1" translate="yes" xml:space="preserve">
          <source>It clones the submodule from &lt;code&gt;&amp;lt;repo&amp;gt;&lt;/code&gt; to the given &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt; under the current directory and by default checks out the master branch.</source>
          <target state="translated">Clona el subm&amp;oacute;dulo de &lt;code&gt;&amp;lt;repo&amp;gt;&lt;/code&gt; a la &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt; dada en el directorio actual y, de forma predeterminada, verifica la rama maestra.</target>
        </trans-unit>
        <trans-unit id="d2f2a22f8382dea93b62981d5e21e0c74a8c6b46" translate="yes" xml:space="preserve">
          <source>It could also be used to log the old..new status. However, it does not know the entire set of branches, so it would end up firing one e-mail per ref when used naively, though. The &lt;a href=&quot;#post-receive&quot;&gt;&lt;em&gt;post-receive&lt;/em&gt;&lt;/a&gt; hook is more suited to that.</source>
          <target state="translated">Tambi&amp;eacute;n se puede utilizar para registrar el estado antiguo ... nuevo. Sin embargo, no conoce el conjunto completo de ramas, por lo que terminar&amp;iacute;a enviando un correo electr&amp;oacute;nico por referencia cuando se usa de manera ingenua. El gancho &lt;a href=&quot;#post-receive&quot;&gt;&lt;em&gt;posterior a la recepci&amp;oacute;n&lt;/em&gt;&lt;/a&gt; es m&amp;aacute;s adecuado para eso.</target>
        </trans-unit>
        <trans-unit id="784deb932c786d53caa1d9cefe7cd05964d957b0" translate="yes" xml:space="preserve">
          <source>It defaults to &lt;code&gt;blue,12 month ago,white,1 month ago,red&lt;/code&gt;, which colors everything older than one year blue, recent changes between one month and one year old are kept white, and lines introduced within the last month are colored red.</source>
          <target state="translated">El valor predeterminado es &lt;code&gt;blue,12 month ago,white,1 month ago,red&lt;/code&gt; , que colorea todo lo que tenga m&amp;aacute;s de un a&amp;ntilde;o de azul, los cambios recientes entre un mes y un a&amp;ntilde;o se mantienen en blanco y las l&amp;iacute;neas introducidas en el &amp;uacute;ltimo mes se colocan en rojo.</target>
        </trans-unit>
        <trans-unit id="91de163844ee67c93c1b1c843cc5bef0832c9f25" translate="yes" xml:space="preserve">
          <source>It does its best to do the safe thing, it will check that the files are unchanged and up to date in the CVS checkout, and it will not autocommit by default.</source>
          <target state="translated">Hace lo mejor que puede para hacer lo seguro,comprobará que los archivos no se hayan modificado y estén actualizados en la comprobación del CVS,y no se comprometerá automáticamente por defecto.</target>
        </trans-unit>
        <trans-unit id="92564150ed02a0207f639f4b1e8f897270e7157d" translate="yes" xml:space="preserve">
          <source>It does this by storing some additional data for each entry (such as the last modified time). This data is not displayed above, and is not stored in the created tree object, but it can be used to determine quickly which files in the working directory differ from what was stored in the index, and thus save Git from having to read all of the data from such files to look for changes.</source>
          <target state="translated">Lo hace almacenando algunos datos adicionales para cada entrada (como la última hora modificada).Estos datos no se muestran arriba,y no se almacenan en el objeto de árbol creado,pero se pueden utilizar para determinar rápidamente qué archivos del directorio de trabajo difieren de los almacenados en el índice,y así evitar que Git tenga que leer todos los datos de dichos archivos para buscar los cambios.</target>
        </trans-unit>
        <trans-unit id="af8ba1869bb0a79ae9cea38b1af5617b9069dca1" translate="yes" xml:space="preserve">
          <source>It enables git to work together with a file system monitor (see the &quot;fsmonitor-watchman&quot; section of &lt;a href=&quot;githooks&quot;&gt;githooks[5]&lt;/a&gt;) that can inform it as to what files have been modified. This enables git to avoid having to lstat() every file to find modified files.</source>
          <target state="translated">Permite a git trabajar junto con un monitor del sistema de archivos (ver la secci&amp;oacute;n &quot;fsmonitor-watchman&quot; de &lt;a href=&quot;githooks&quot;&gt;githooks [5]&lt;/a&gt; ) que puede informarle qu&amp;eacute; archivos se han modificado. Esto permite a git evitar tener que lstat () cada archivo para encontrar archivos modificados.</target>
        </trans-unit>
        <trans-unit id="af9f31199487ba705eebc5dd4bc13449d71955c8" translate="yes" xml:space="preserve">
          <source>It expects to be dealing with one project only. If it sees branches that have different roots, it will refuse to run. In that case, edit your &amp;lt;archive/branch&amp;gt; parameters to define clearly the scope of the import.</source>
          <target state="translated">Espera tratar con un solo proyecto. Si ve ramas que tienen diferentes ra&amp;iacute;ces, se negar&amp;aacute; a correr. En ese caso, edite los par&amp;aacute;metros de su &amp;lt;archivo / rama&amp;gt; para definir claramente el alcance de la importaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="d015f51d5305572fa694969daaad327b702a39d6" translate="yes" xml:space="preserve">
          <source>It helps to divide these functions into groups for discussion purposes.</source>
          <target state="translated">Ayuda a dividir estas funciones en grupos con fines de discusión.</target>
        </trans-unit>
        <trans-unit id="cf8815ec8cef4d3d8f9a8adf49f25148a4887929" translate="yes" xml:space="preserve">
          <source>It is &lt;code&gt;&amp;lt;unix timestamp&amp;gt; &amp;lt;time zone offset&amp;gt;&lt;/code&gt;, where &lt;code&gt;&amp;lt;unix
timestamp&amp;gt;&lt;/code&gt; is the number of seconds since the UNIX epoch. &lt;code&gt;&amp;lt;time zone offset&amp;gt;&lt;/code&gt; is a positive or negative offset from UTC. For example CET (which is 1 hour ahead of UTC) is &lt;code&gt;+0100&lt;/code&gt;.</source>
          <target state="translated">Es &lt;code&gt;&amp;lt;unix timestamp&amp;gt; &amp;lt;time zone offset&amp;gt;&lt;/code&gt; , donde &lt;code&gt;&amp;lt;unix timestamp&amp;gt;&lt;/code&gt; es el n&amp;uacute;mero de segundos desde la &amp;eacute;poca de UNIX. &lt;code&gt;&amp;lt;time zone offset&amp;gt;&lt;/code&gt; es un desplazamiento positivo o negativo de UTC. Por ejemplo, CET (que est&amp;aacute; 1 hora antes de UTC) es &lt;code&gt;+0100&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3f4ae55d14bc9f41dc555ac55a4684de8bea2c17" translate="yes" xml:space="preserve">
          <source>It is OK to include files which have not actually changed. All changes including newly-created and deleted files should be included. When files are renamed, both the old and the new name should be included.</source>
          <target state="translated">Está bien incluir archivos que no han cambiado realmente.Todos los cambios,incluyendo los archivos recién creados y eliminados,deben ser incluidos.Cuando se renombran los archivos,se debe incluir tanto el nombre antiguo como el nuevo.</target>
        </trans-unit>
        <trans-unit id="854a36265382bec82daa5a74f777ff212834a549" translate="yes" xml:space="preserve">
          <source>It is a good idea to introduce yourself to Git with your name and public email address before doing any operation. The easiest way to do so is:</source>
          <target state="translated">Es una buena idea presentarse a Git con su nombre y dirección de correo electrónico pública antes de hacer cualquier operación.La forma más fácil de hacerlo es:</target>
        </trans-unit>
        <trans-unit id="0dc733d75bf5327e08cfc3134be1a3042cbb2515" translate="yes" xml:space="preserve">
          <source>It is a rough equivalent for:</source>
          <target state="translated">Es un equivalente aproximado para:</target>
        </trans-unit>
        <trans-unit id="95c229774b9b51315840e554d56265719cd8be5c" translate="yes" xml:space="preserve">
          <source>It is also a good idea when using any VCS to have only one small logical change in each commit.</source>
          <target state="translated">También es una buena idea cuando se usa cualquier VCS tener sólo un pequeño cambio lógico en cada confirmación.</target>
        </trans-unit>
        <trans-unit id="6c5a3acbba80472c3128c6339cb1639b4bd8a27a" translate="yes" xml:space="preserve">
          <source>It is also permitted for a notes ref to point directly to a tree object, in which case the history of the notes can be read with &lt;code&gt;git log -p -g &amp;lt;refname&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">Tambi&amp;eacute;n est&amp;aacute; permitido que una referencia de notas apunte directamente a un objeto de &amp;aacute;rbol, en cuyo caso el historial de las notas se puede leer con &lt;code&gt;git log -p -g &amp;lt;refname&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b16dc4f2558875d3f67cc118d8aee343695acae5" translate="yes" xml:space="preserve">
          <source>It is also possible to fetch a subset of branches or tags by using a comma-separated list of names within braces. For example:</source>
          <target state="translated">También es posible obtener un subconjunto de ramas o etiquetas utilizando una lista de nombres separados por comas dentro de los corchetes.Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="12b7523072e662c296ea1a80ba59ec7ed5fcb7e4" translate="yes" xml:space="preserve">
          <source>It is also possible to introduce completely new merge commits from scratch by adding a command of the form &lt;code&gt;merge &amp;lt;merge-head&amp;gt;&lt;/code&gt;. This form will generate a tentative commit message and always open an editor to let the user edit it. This can be useful e.g. when a topic branch turns out to address more than a single concern and wants to be split into two or even more topic branches. Consider this todo list:</source>
          <target state="translated">Tambi&amp;eacute;n es posible introducir confirmaciones de combinaci&amp;oacute;n completamente nuevas desde cero agregando un comando con el formato &lt;code&gt;merge &amp;lt;merge-head&amp;gt;&lt;/code&gt; . Este formulario generar&amp;aacute; un mensaje de confirmaci&amp;oacute;n tentativo y siempre abrir&amp;aacute; un editor para permitir que el usuario lo edite. Esto puede ser &amp;uacute;til, por ejemplo, cuando una rama de un tema trata m&amp;aacute;s de una preocupaci&amp;oacute;n y quiere dividirse en dos o incluso m&amp;aacute;s ramas de tema. Considere esta lista de tareas pendientes:</target>
        </trans-unit>
        <trans-unit id="e8d4e8a65d3b558ba4900bdd06798676f68d11ad" translate="yes" xml:space="preserve">
          <source>It is also possible to provide true CVS access to a Git repository, so that developers can still use CVS; see &lt;a href=&quot;git-cvsserver&quot;&gt;git-cvsserver[1]&lt;/a&gt; for details.</source>
          <target state="translated">Tambi&amp;eacute;n es posible proporcionar un verdadero acceso CVS a un repositorio de Git, para que los desarrolladores a&amp;uacute;n puedan usar CVS; consulte &lt;a href=&quot;git-cvsserver&quot;&gt;git-cvsserver [1]&lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="3fcb2e34d6c27144258c45911fcc9298afaeeefa" translate="yes" xml:space="preserve">
          <source>It is also possible to replace commits further back in the history, but this is an advanced topic to be left for &lt;a href=&quot;#cleaning-up-history&quot;&gt;another chapter&lt;/a&gt;.</source>
          <target state="translated">Tambi&amp;eacute;n es posible reemplazar confirmaciones m&amp;aacute;s atr&amp;aacute;s en la historia, pero este es un tema avanzado que debe dejarse para &lt;a href=&quot;#cleaning-up-history&quot;&gt;otro cap&amp;iacute;tulo&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="14665d6ab0c5fa19cd26aec534fecd5dda3c4692" translate="yes" xml:space="preserve">
          <source>It is also run after &lt;a href=&quot;git-clone&quot;&gt;git-clone[1]&lt;/a&gt;, unless the &lt;code&gt;--no-checkout&lt;/code&gt; (&lt;code&gt;-n&lt;/code&gt;) option is used. The first parameter given to the hook is the null-ref, the second the ref of the new HEAD and the flag is always 1. Likewise for &lt;code&gt;git worktree add&lt;/code&gt; unless &lt;code&gt;--no-checkout&lt;/code&gt; is used.</source>
          <target state="translated">Tambi&amp;eacute;n se ejecuta despu&amp;eacute;s de &lt;a href=&quot;git-clone&quot;&gt;git-clone [1]&lt;/a&gt; , a menos que se use la &lt;code&gt;--no-checkout&lt;/code&gt; ( &lt;code&gt;-n&lt;/code&gt; ). El primer par&amp;aacute;metro que se le da al gancho es null-ref, el segundo es la referencia del nuevo HEAD y la bandera es siempre 1. Del mismo modo, para &lt;code&gt;git worktree add&lt;/code&gt; a menos que se use &lt;code&gt;--no-checkout&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2bf0b4701dd5a8615d5c5a4270f19ec18f43aa49" translate="yes" xml:space="preserve">
          <source>It is an error if &amp;lt;dst&amp;gt; matches more than one remote refs.</source>
          <target state="translated">Es un error si &amp;lt;dst&amp;gt; coincide con m&amp;aacute;s de una referencia remota.</target>
        </trans-unit>
        <trans-unit id="47ed8fd8a6ccf512f8dd41b7de1bb50b3d494692" translate="yes" xml:space="preserve">
          <source>It is an error if &amp;lt;src&amp;gt; does not match exactly one of the local refs.</source>
          <target state="translated">Es un error si &amp;lt;src&amp;gt; no coincide exactamente con una de las referencias locales.</target>
        </trans-unit>
        <trans-unit id="08551e573ca80a9130c1ec33d2456a204ee6a838" translate="yes" xml:space="preserve">
          <source>It is an error to specify a ref that does not pass &quot;git check-ref-format&quot; scrutiny. Duplicated values are filtered.</source>
          <target state="translated">Es un error especificar un árbitro que no pasa el escrutinio de &quot;git check-ref-format&quot;.Los valores duplicados se filtran.</target>
        </trans-unit>
        <trans-unit id="91dc5c05cc945b2e35d03a4d25f4568585356b02" translate="yes" xml:space="preserve">
          <source>It is assumed that any handshaking procedures have already been completed (such as sending service request for git://) before this helper is started.</source>
          <target state="translated">Se asume que cualquier procedimiento de apretón de manos ya ha sido completado (como el envío de la solicitud de servicio para git://)antes de que este ayudante se inicie.</target>
        </trans-unit>
        <trans-unit id="7a3002fc7973dbc26474a90f4bdcb162301b4e67" translate="yes" xml:space="preserve">
          <source>It is currently only possible to recreate the merge commits using the &lt;code&gt;recursive&lt;/code&gt; merge strategy; Different merge strategies can be used only via explicit &lt;code&gt;exec git merge -s &amp;lt;strategy&amp;gt; [...]&lt;/code&gt; commands.</source>
          <target state="translated">Actualmente, solo es posible volver a crear las confirmaciones de combinaci&amp;oacute;n utilizando la estrategia de combinaci&amp;oacute;n &lt;code&gt;recursive&lt;/code&gt; ; Se pueden usar diferentes estrategias de combinaci&amp;oacute;n s&amp;oacute;lo mediante comandos &lt;code&gt;exec git merge -s &amp;lt;strategy&amp;gt; [...]&lt;/code&gt; expl&amp;iacute;citos exec git merge -s &amp;lt;strategy&amp;gt; .</target>
        </trans-unit>
        <trans-unit id="bd70cf0a22a7ad38ee60197dd400f891cf0d57a3" translate="yes" xml:space="preserve">
          <source>It is expected that the content of the commit object you created while following the example above generates a different SHA-1 hash than the one shown above because the commit object records the time when it was created and the name of the person performing the commit.</source>
          <target state="translated">Se espera que el contenido del objeto de confirmación que ha creado siguiendo el ejemplo anterior genere un hash SHA-1 diferente del que se muestra arriba porque el objeto de confirmación registra el momento en que se creó y el nombre de la persona que realiza la confirmación.</target>
        </trans-unit>
        <trans-unit id="f78a88555b80a7cb6f279e6cf8551b4ade125a2a" translate="yes" xml:space="preserve">
          <source>It is followed by one or more extended header lines (this example shows a merge with two parents):</source>
          <target state="translated">Va seguido de una o más líneas de encabezamiento extendidas (este ejemplo muestra una fusión con dos padres):</target>
        </trans-unit>
        <trans-unit id="4d181ca929d0bcae1d19e843f3c648e99a609d36" translate="yes" xml:space="preserve">
          <source>It is followed by one or more extended header lines:</source>
          <target state="translated">Va seguido de una o más líneas de encabezamiento extendidas:</target>
        </trans-unit>
        <trans-unit id="a6770fb3a63d614ebdc42bea002a81ec83ae2568" translate="yes" xml:space="preserve">
          <source>It is followed by two-line from-file/to-file header</source>
          <target state="translated">Va seguido de un encabezado de dos líneas desde el archivo/al archivo</target>
        </trans-unit>
        <trans-unit id="31bbdf9a81fa3062a8106d3f0d5511057b4a5222" translate="yes" xml:space="preserve">
          <source>It is highly functional. However, not all methods are implemented, and for those methods that are implemented, not all switches are implemented.</source>
          <target state="translated">Es altamente funcional.Sin embargo,no todos los métodos se implementan,y para aquellos métodos que se implementan,no todos los interruptores se implementan.</target>
        </trans-unit>
        <trans-unit id="13209c7d424e2b65e2d35ccb5123d7d58e26c1e7" translate="yes" xml:space="preserve">
          <source>It is important to realize that at this point nothing refers to commit &lt;code&gt;f&lt;/code&gt;. Eventually commit &lt;code&gt;f&lt;/code&gt; (and by extension commit &lt;code&gt;e&lt;/code&gt;) will be deleted by the routine Git garbage collection process, unless we create a reference before that happens. If we have not yet moved away from commit &lt;code&gt;f&lt;/code&gt;, any of these will create a reference to it:</source>
          <target state="translated">Es importante darse cuenta de que en este punto nada se refiere a cometer &lt;code&gt;f&lt;/code&gt; . Eventualmente, la confirmaci&amp;oacute;n &lt;code&gt;f&lt;/code&gt; (y por extensi&amp;oacute;n la confirmaci&amp;oacute;n &lt;code&gt;e&lt;/code&gt; ) ser&amp;aacute; eliminada por el proceso rutinario de recolecci&amp;oacute;n de basura de Git, a menos que creemos una referencia antes de que eso suceda. Si a&amp;uacute;n no nos hemos alejado del compromiso &lt;code&gt;f&lt;/code&gt; , cualquiera de estos crear&amp;aacute; una referencia a &amp;eacute;l:</target>
        </trans-unit>
        <trans-unit id="15e77b99d56294dd4d998fab1260c89fc2b1f677" translate="yes" xml:space="preserve">
          <source>It is likely that you will be pulling from the same remote repository from time to time. As a short hand, you can store the remote repository URL in the local repository&amp;rsquo;s config file like this:</source>
          <target state="translated">Es probable que de vez en cuando extraiga del mismo repositorio remoto. A modo de resumen, puede almacenar la URL del repositorio remoto en el archivo de configuraci&amp;oacute;n del repositorio local de esta manera:</target>
        </trans-unit>
        <trans-unit id="e468ce82ca7a37df3e0ccb7eddd0ee514020b622" translate="yes" xml:space="preserve">
          <source>It is likely that you will be working on more than one thing at a time. It is easy to manage those more-or-less independent tasks using branches with Git.</source>
          <target state="translated">Es probable que trabaje en más de una cosa a la vez.Es fácil manejar esas tareas más o menos independientes usando las ramas con Git.</target>
        </trans-unit>
        <trans-unit id="cdfac588afc71ee687618e7ec3bc2f824e200606" translate="yes" xml:space="preserve">
          <source>It is not always easy for new developers to find their way through Git&amp;rsquo;s source code. This section gives you a little guidance to show where to start.</source>
          <target state="translated">No siempre es f&amp;aacute;cil para los nuevos desarrolladores encontrar su camino a trav&amp;eacute;s del c&amp;oacute;digo fuente de Git. Esta secci&amp;oacute;n le brinda una peque&amp;ntilde;a gu&amp;iacute;a para mostrar por d&amp;oacute;nde empezar.</target>
        </trans-unit>
        <trans-unit id="deded1cb8baf6033568ee8de4cb9cb55818cb450" translate="yes" xml:space="preserve">
          <source>It is not recommended to use this feature if you intend to export changes back to CVS again later with &lt;code&gt;git cvsexportcommit&lt;/code&gt;.</source>
          <target state="translated">No se recomienda utilizar esta funci&amp;oacute;n si tiene la intenci&amp;oacute;n de volver a exportar los cambios a CVS m&amp;aacute;s tarde con &lt;code&gt;git cvsexportcommit&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="598d612724092a05c80fc92ca656e4e685e7e227" translate="yes" xml:space="preserve">
          <source>It is obviously a good idea not to have commits with changes that knowingly break things, even if some other commits later fix the breakage.</source>
          <target state="translated">Obviamente es una buena idea no tener compromisos con cambios que rompan las cosas a sabiendas,aunque otros compromisos arreglen la ruptura más tarde.</target>
        </trans-unit>
        <trans-unit id="8402ec5252190f6132c0772d2b1eafbec27785df" translate="yes" xml:space="preserve">
          <source>It is possible that a merge failure will prevent this process from being completely automatic. You will have to resolve any such merge failure and run &lt;code&gt;git rebase --continue&lt;/code&gt;. Another option is to bypass the commit that caused the merge failure with &lt;code&gt;git rebase --skip&lt;/code&gt;. To check out the original &amp;lt;branch&amp;gt; and remove the .git/rebase-apply working files, use the command &lt;code&gt;git rebase --abort&lt;/code&gt; instead.</source>
          <target state="translated">Es posible que un error de combinaci&amp;oacute;n impida que este proceso sea completamente autom&amp;aacute;tico. Tendr&amp;aacute; que resolver cualquier error de fusi&amp;oacute;n y ejecutar &lt;code&gt;git rebase --continue&lt;/code&gt; . Otra opci&amp;oacute;n es omitir la confirmaci&amp;oacute;n que caus&amp;oacute; el error de fusi&amp;oacute;n con &lt;code&gt;git rebase --skip&lt;/code&gt; . Para verificar la &amp;lt;rama&amp;gt; original y eliminar los archivos de trabajo .git / rebase-apply, use el comando &lt;code&gt;git rebase --abort&lt;/code&gt; en su lugar.</target>
        </trans-unit>
        <trans-unit id="2ea7f2913c3e95cfd4ae5ff1f6d8aecb190ef204" translate="yes" xml:space="preserve">
          <source>It is possible to construct these old form repositories manually.</source>
          <target state="translated">Es posible construir estos depósitos de formas antiguas manualmente.</target>
        </trans-unit>
        <trans-unit id="548453998a9c855739e7eb9ec21e0581e0ed374b" translate="yes" xml:space="preserve">
          <source>It is possible to disable use of replacement references for any command using the &lt;code&gt;--no-replace-objects&lt;/code&gt; option just after &lt;code&gt;git&lt;/code&gt;.</source>
          <target state="translated">Es posible deshabilitar el uso de referencias de reemplazo para cualquier comando usando la &lt;code&gt;--no-replace-objects&lt;/code&gt; justo despu&amp;eacute;s de &lt;code&gt;git&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c06956dd566d0990dc7bdbc85eb39fd34edd8452" translate="yes" xml:space="preserve">
          <source>It is preceded with a &quot;git diff&quot; header that looks like this:</source>
          <target state="translated">Está precedido por un encabezado de &quot;git diff&quot; que se ve así:</target>
        </trans-unit>
        <trans-unit id="fae83443f259566d0e3ea169c2bee02ad7796585" translate="yes" xml:space="preserve">
          <source>It is preceded with a &quot;git diff&quot; header, that looks like this (when the &lt;code&gt;-c&lt;/code&gt; option is used):</source>
          <target state="translated">Est&amp;aacute; precedido por un encabezado &quot;git diff&quot;, que se ve as&amp;iacute; (cuando se usa la opci&amp;oacute;n &lt;code&gt;-c&lt;/code&gt; ):</target>
        </trans-unit>
        <trans-unit id="41c2e2ee7c9260a90ac9d47c12dc86595dc670c7" translate="yes" xml:space="preserve">
          <source>It is purely performance optimization, originally intended for MacOS X, where recursive directory traversal is slow. Gitweb follows symbolic links, but it detects cycles, ignoring any duplicate files and directories.</source>
          <target state="translated">Es puramente una optimización del rendimiento,originalmente pensada para MacOS X,donde la travesía recursiva de directorios es lenta.Gitweb sigue enlaces simbólicos,pero detecta ciclos,ignorando cualquier duplicado de archivos y directorios.</target>
        </trans-unit>
        <trans-unit id="bcd29e9bb49344b0e527480d5a1209557826cefc" translate="yes" xml:space="preserve">
          <source>It is recommended that &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt; always be encoded using UTF-8.</source>
          <target state="translated">Se recomienda que &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt; siempre se codifique utilizando UTF-8.</target>
        </trans-unit>
        <trans-unit id="987c2f12e083069e2c3c6529da1c2b8427b5d901" translate="yes" xml:space="preserve">
          <source>It is safer if both &lt;code&gt;test.sh&lt;/code&gt; and &lt;code&gt;check_test_case.sh&lt;/code&gt; are outside the repository to prevent interactions between the bisect, make and test processes and the scripts.</source>
          <target state="translated">Es m&amp;aacute;s seguro si tanto &lt;code&gt;test.sh&lt;/code&gt; como &lt;code&gt;check_test_case.sh&lt;/code&gt; est&amp;aacute;n fuera del repositorio para evitar interacciones entre los procesos bisect, make y test y los scripts.</target>
        </trans-unit>
        <trans-unit id="07dbd897b2b790cda3e0cd6c93a27be05c0967a5" translate="yes" xml:space="preserve">
          <source>It is sometimes useful to be able to checkout a commit that is not at the tip of any named branch, or even to create a new commit that is not referenced by a named branch. Let&amp;rsquo;s look at what happens when we checkout commit &lt;code&gt;b&lt;/code&gt; (here we show two ways this may be done):</source>
          <target state="translated">A veces es &amp;uacute;til poder verificar una confirmaci&amp;oacute;n que no est&amp;aacute; en la punta de ninguna rama con nombre, o incluso crear una nueva confirmaci&amp;oacute;n a la que no se hace referencia en una rama con nombre. Veamos lo que sucede cuando comprobamos el commit &lt;code&gt;b&lt;/code&gt; (aqu&amp;iacute; mostramos dos formas en que esto se puede hacer):</target>
        </trans-unit>
        <trans-unit id="19dd47dcbbf16a9cccaac6e901efe1eb6d41c6b4" translate="yes" xml:space="preserve">
          <source>It is still your responsibility to make sure that the email message sent by your email program meets the standards of your project. Many projects do not like patches to be attached. Some mail agents will transform patches (e.g. wrap lines, send them as format=flowed) in ways that make them fail. You will get angry flames ridiculing you if you don&amp;rsquo;t check this.</source>
          <target state="translated">A&amp;uacute;n es su responsabilidad asegurarse de que el mensaje de correo electr&amp;oacute;nico enviado por su programa de correo electr&amp;oacute;nico cumpla con los est&amp;aacute;ndares de su proyecto. A muchos proyectos no les gusta que se adjunten parches. Algunos agentes de correo transformar&amp;aacute;n los parches (por ejemplo, ajustar l&amp;iacute;neas, enviarlas como formato = fluido) de manera que fallen. Tendr&amp;aacute;s llamas enojadas ridiculiz&amp;aacute;ndote si no marcas esto.</target>
        </trans-unit>
        <trans-unit id="446989de9f552ff7a375d76851b391396cb21747" translate="yes" xml:space="preserve">
          <source>It is unlikely that you would have any conflicts here &amp;hellip;​ but you might if you spent a while on this step and had also pulled new versions from upstream.</source>
          <target state="translated">Es poco probable que tenga alg&amp;uacute;n conflicto aqu&amp;iacute; ... pero podr&amp;iacute;a tenerlo si hubiera pasado un tiempo en este paso y tambi&amp;eacute;n hubiera extra&amp;iacute;do nuevas versiones de la versi&amp;oacute;n anterior.</target>
        </trans-unit>
        <trans-unit id="5d35217f8f6c81e1e684634a0bdd90859d19f06a" translate="yes" xml:space="preserve">
          <source>It is up to the user to ensure that no In-Reply-To header already exists when &lt;code&gt;git send-email&lt;/code&gt; is asked to add it (especially note that &lt;code&gt;git format-patch&lt;/code&gt; can be configured to do the threading itself). Failure to do so may not produce the expected result in the recipient&amp;rsquo;s MUA.</source>
          <target state="translated">Depende del usuario asegurarse de que no exista un encabezado In-Reply-To cuando se le &lt;code&gt;git send-email&lt;/code&gt; que lo agregue (especialmente tenga en cuenta que &lt;code&gt;git format-patch&lt;/code&gt; se puede configurar para hacer el subproceso en s&amp;iacute;). No hacerlo puede no producir el resultado esperado en el MUA del destinatario.</target>
        </trans-unit>
        <trans-unit id="28ab82f4261b972bffcbd084fca6120764f529fe" translate="yes" xml:space="preserve">
          <source>It is useful when you&amp;rsquo;re looking for an exact block of code (like a struct), and want to know the history of that block since it first came into being: use the feature iteratively to feed the interesting block in the preimage back into &lt;code&gt;-S&lt;/code&gt;, and keep going until you get the very first version of the block.</source>
          <target state="translated">Es &amp;uacute;til cuando est&amp;aacute; buscando un bloque exacto de c&amp;oacute;digo (como una estructura) y desea conocer el historial de ese bloque desde que apareci&amp;oacute; por primera vez: use la funci&amp;oacute;n de forma iterativa para alimentar el bloque interesante en la preimagen de nuevo en &lt;code&gt;-S&lt;/code&gt; , y contin&amp;uacute;a hasta que obtengas la primera versi&amp;oacute;n del bloque.</target>
        </trans-unit>
        <trans-unit id="212ba732375c1f9e18ce6b37fe943bc0a79e8a67" translate="yes" xml:space="preserve">
          <source>It is very important that the basis used be held by the destination. It is okay to err on the side of caution, causing the bundle file to contain objects already in the destination, as these are ignored when unpacking at the destination.</source>
          <target state="translated">Es muy importante que la base utilizada sea mantenida por el destino.Está bien pecar de precavido,haciendo que el archivo del paquete contenga objetos ya en el destino,ya que estos son ignorados al desempaquetar en el destino.</target>
        </trans-unit>
        <trans-unit id="f89d35d0ac276c4d31876791b9f069b985ca50ec" translate="yes" xml:space="preserve">
          <source>It may well be that among networking people, they may want to exchange the tags internal to their group, but in that workflow they are most likely tracking each other&amp;rsquo;s progress by having remote-tracking branches. Again, the heuristic to automatically follow such tags is a good thing.</source>
          <target state="translated">Bien puede ser que entre las personas que trabajan en la red, deseen intercambiar las etiquetas internas de su grupo, pero en ese flujo de trabajo lo m&amp;aacute;s probable es que sigan el progreso de los dem&amp;aacute;s mediante sucursales de seguimiento remoto. Nuevamente, la heur&amp;iacute;stica para seguir autom&amp;aacute;ticamente tales etiquetas es algo bueno.</target>
        </trans-unit>
        <trans-unit id="b30dde80280e412c885fe09e1718d04b65bebbd4" translate="yes" xml:space="preserve">
          <source>It must be readable in order, from beginning to end, by someone intelligent with a basic grasp of the UNIX command line, but without any special knowledge of Git. If necessary, any other prerequisites should be specifically mentioned as they arise.</source>
          <target state="translated">Debe ser legible en orden,de principio a fin,por alguien inteligente con un conocimiento básico de la línea de comandos de UNIX,pero sin ningún conocimiento especial de Git.Si es necesario,cualquier otro requisito previo debe ser mencionado específicamente a medida que surja.</target>
        </trans-unit>
        <trans-unit id="105999ab02cc181d3d21d02fda72679e92aee0b2" translate="yes" xml:space="preserve">
          <source>It should be stressed that this hierarchy is purely &lt;strong&gt;informal&lt;/strong&gt;. There is nothing fundamental in Git that enforces the &quot;chain of patch flow&quot; this hierarchy implies. You do not have to pull from only one remote repository.</source>
          <target state="translated">Cabe destacar que esta jerarqu&amp;iacute;a es puramente &lt;strong&gt;informal&lt;/strong&gt; . No hay nada fundamental en Git que refuerce la &quot;cadena de flujo de parches&quot; que implica esta jerarqu&amp;iacute;a. No tiene que extraer de un solo repositorio remoto.</target>
        </trans-unit>
        <trans-unit id="593ae3fc1288babccd02a202f40d492d26634f5a" translate="yes" xml:space="preserve">
          <source>It shows that foo.png has differences from HEAD (but that is binary so line count cannot be shown) and there is no difference between indexed copy and the working tree version (if the working tree version were also different, &lt;code&gt;binary&lt;/code&gt; would have been shown in place of &lt;code&gt;nothing&lt;/code&gt;). The other file, git-add{litdd}interactive.perl, has 403 lines added and 35 lines deleted if you commit what is in the index, but working tree file has further modifications (one addition and one deletion).</source>
          <target state="translated">Muestra que foo.png tiene diferencias con HEAD (pero eso es binario, por lo que no se puede mostrar el recuento de l&amp;iacute;neas) y no hay diferencia entre la copia indexada y la versi&amp;oacute;n del &amp;aacute;rbol de trabajo (si la versi&amp;oacute;n del &amp;aacute;rbol de trabajo tambi&amp;eacute;n fuera diferente, se habr&amp;iacute;a mostrado el &lt;code&gt;binary&lt;/code&gt; en lugar de &lt;code&gt;nothing&lt;/code&gt; ). El otro archivo, git-add {litdd} interactive.perl, tiene 403 l&amp;iacute;neas agregadas y 35 l&amp;iacute;neas eliminadas si confirma lo que est&amp;aacute; en el &amp;iacute;ndice, pero el archivo de &amp;aacute;rbol de trabajo tiene m&amp;aacute;s modificaciones (una adici&amp;oacute;n y una eliminaci&amp;oacute;n).</target>
        </trans-unit>
        <trans-unit id="1f22531fd9489cd1b4496c81c3454037c20af1a5" translate="yes" xml:space="preserve">
          <source>It takes a variable number of parameters, each of which is the name of ref that was actually updated.</source>
          <target state="translated">Toma un número variable de parámetros,cada uno de los cuales es el nombre de la referencia que se actualizó.</target>
        </trans-unit>
        <trans-unit id="8d1640303505dff202eb78d383641a82298beff2" translate="yes" xml:space="preserve">
          <source>It takes on the standard input the specification of the options to parse and understand, and echoes on the standard output a string suitable for &lt;code&gt;sh(1)&lt;/code&gt;&lt;code&gt;eval&lt;/code&gt; to replace the arguments with normalized ones. In case of error, it outputs usage on the standard error stream, and exits with code 129.</source>
          <target state="translated">Toma en la entrada est&amp;aacute;ndar la especificaci&amp;oacute;n de las opciones para analizar y comprender, y hace eco en la salida est&amp;aacute;ndar una cadena adecuada para &lt;code&gt;sh(1)&lt;/code&gt; &lt;code&gt;eval&lt;/code&gt; para reemplazar los argumentos con los normalizados. En caso de error, genera el uso en el flujo de error est&amp;aacute;ndar y sale con el c&amp;oacute;digo 129.</target>
        </trans-unit>
        <trans-unit id="9fc9d0adb73a5f351f66393e06f90ebbcd611062" translate="yes" xml:space="preserve">
          <source>It takes one to three parameters. The first is the name of the file that contains the commit log message. The second is the source of the commit message, and can be: &lt;code&gt;message&lt;/code&gt; (if a &lt;code&gt;-m&lt;/code&gt; or &lt;code&gt;-F&lt;/code&gt; option was given); &lt;code&gt;template&lt;/code&gt; (if a &lt;code&gt;-t&lt;/code&gt; option was given or the configuration option &lt;code&gt;commit.template&lt;/code&gt; is set); &lt;code&gt;merge&lt;/code&gt; (if the commit is a merge or a &lt;code&gt;.git/MERGE_MSG&lt;/code&gt; file exists); &lt;code&gt;squash&lt;/code&gt; (if a &lt;code&gt;.git/SQUASH_MSG&lt;/code&gt; file exists); or &lt;code&gt;commit&lt;/code&gt;, followed by a commit SHA-1 (if a &lt;code&gt;-c&lt;/code&gt;, &lt;code&gt;-C&lt;/code&gt; or &lt;code&gt;--amend&lt;/code&gt; option was given).</source>
          <target state="translated">Se necesitan de uno a tres par&amp;aacute;metros. El primero es el nombre del archivo que contiene el mensaje de registro de confirmaci&amp;oacute;n. El segundo es el origen del mensaje de confirmaci&amp;oacute;n y puede ser: &lt;code&gt;message&lt;/code&gt; (si se proporcion&amp;oacute; una opci&amp;oacute;n &lt;code&gt;-m&lt;/code&gt; o &lt;code&gt;-F&lt;/code&gt; ); &lt;code&gt;template&lt;/code&gt; (si se proporcion&amp;oacute; una opci&amp;oacute;n &lt;code&gt;-t&lt;/code&gt; o se estableci&amp;oacute; la opci&amp;oacute;n de configuraci&amp;oacute;n &lt;code&gt;commit.template&lt;/code&gt; ); &lt;code&gt;merge&lt;/code&gt; (si la confirmaci&amp;oacute;n es una fusi&amp;oacute;n o existe un archivo &lt;code&gt;.git/MERGE_MSG&lt;/code&gt; ); &lt;code&gt;squash&lt;/code&gt; (si existe un archivo &lt;code&gt;.git/SQUASH_MSG&lt;/code&gt; ); o &lt;code&gt;commit&lt;/code&gt; , seguido de un compromiso SHA-1 (si un &lt;code&gt;-c&lt;/code&gt; , &lt;code&gt;-C&lt;/code&gt; o &lt;code&gt;--amend&lt;/code&gt; se dio la opci&amp;oacute;n).</target>
        </trans-unit>
        <trans-unit id="ee62cbb1781a10ccff3a10f01577042e41951364" translate="yes" xml:space="preserve">
          <source>It tells you that it did an &quot;Automatic merge&quot;, which failed due to conflicts in &lt;code&gt;hello&lt;/code&gt;.</source>
          <target state="translated">Le dice que hizo una &quot;fusi&amp;oacute;n autom&amp;aacute;tica&quot;, que fall&amp;oacute; debido a conflictos en &lt;code&gt;hello&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="31dbee78e4c488ce29554dd490d874937eb736b5" translate="yes" xml:space="preserve">
          <source>It used to be that the command defaulted to do &lt;code&gt;-x&lt;/code&gt; described above, and &lt;code&gt;-r&lt;/code&gt; was to disable it. Now the default is not to do &lt;code&gt;-x&lt;/code&gt; so this option is a no-op.</source>
          <target state="translated">Sol&amp;iacute;a ​​ser que el comando estaba predeterminado para hacer &lt;code&gt;-x&lt;/code&gt; descrito anteriormente, y &lt;code&gt;-r&lt;/code&gt; era deshabilitarlo. Ahora, el valor predeterminado es no hacer &lt;code&gt;-x&lt;/code&gt; , por lo que esta opci&amp;oacute;n no es operativa.</target>
        </trans-unit>
        <trans-unit id="d5579126502958d7cf2a79d1e6eb0f1ab9f1fb74" translate="yes" xml:space="preserve">
          <source>It uses &lt;code&gt;showbranch.default&lt;/code&gt; multi-valued configuration items if no &amp;lt;rev&amp;gt; or &amp;lt;glob&amp;gt; is given on the command line.</source>
          <target state="translated">Utiliza &lt;code&gt;showbranch.default&lt;/code&gt; elementos de configuraci&amp;oacute;n de varios valores si no se proporciona &amp;lt;rev&amp;gt; o &amp;lt;glob&amp;gt; en la l&amp;iacute;nea de comando.</target>
        </trans-unit>
        <trans-unit id="c599d3ca0dc61039dd83109e0beef002f0abd196" translate="yes" xml:space="preserve">
          <source>It verifies that the directory has the magic file &quot;git-daemon-export-ok&quot;, and it will refuse to export any Git directory that hasn&amp;rsquo;t explicitly been marked for export this way (unless the &lt;code&gt;--export-all&lt;/code&gt; parameter is specified). If you pass some directory paths as &lt;code&gt;git daemon&lt;/code&gt; arguments, you can further restrict the offers to a whitelist comprising of those.</source>
          <target state="translated">Verifica que el directorio tiene el archivo m&amp;aacute;gico &quot;git-daemon-export-ok&quot;, y se negar&amp;aacute; a exportar cualquier directorio Git que no haya sido marcado expl&amp;iacute;citamente para exportar de esta manera (a menos que se especifique el par&amp;aacute;metro &lt;code&gt;--export-all&lt;/code&gt; ). Si pasa algunas rutas de directorio como argumentos del &lt;code&gt;git daemon&lt;/code&gt; , puede restringir a&amp;uacute;n m&amp;aacute;s las ofertas a una lista blanca que incluya esas.</target>
        </trans-unit>
        <trans-unit id="3fd1b09d35c94e426d7de9278697f8281d2f9b0b" translate="yes" xml:space="preserve">
          <source>It verifies that the directory has the magic file &quot;git-daemon-export-ok&quot;, and it will refuse to export any Git directory that hasn&amp;rsquo;t explicitly been marked for export this way (unless the &lt;code&gt;GIT_HTTP_EXPORT_ALL&lt;/code&gt; environmental variable is set).</source>
          <target state="translated">Verifica que el directorio tiene el archivo m&amp;aacute;gico &quot;git-daemon-export-ok&quot;, y se negar&amp;aacute; a exportar cualquier directorio Git que no haya sido marcado expl&amp;iacute;citamente para exportar de esta manera (a menos que se &lt;code&gt;GIT_HTTP_EXPORT_ALL&lt;/code&gt; la variable de entorno GIT_HTTP_EXPORT_ALL ).</target>
        </trans-unit>
        <trans-unit id="6a949f37aaca4177eee5df32a3761a98f4054a56" translate="yes" xml:space="preserve">
          <source>It was a tool of absolute last resort. I&amp;rsquo;d rather spend days looking at printk output than do a manual &lt;code&gt;patch bisection&lt;/code&gt;.</source>
          <target state="translated">Fue una herramienta de &amp;uacute;ltimo recurso absoluto. Prefiero pasar d&amp;iacute;as mirando la salida de printk que hacer una &lt;code&gt;patch bisection&lt;/code&gt; manual .</target>
        </trans-unit>
        <trans-unit id="839ea1dcb179bd0fd1a734d84c9b044b60c7a423" translate="yes" xml:space="preserve">
          <source>It will be useful to have a Git repository to experiment with as you read this manual.</source>
          <target state="translated">Será útil tener un depósito de Git para experimentar mientras lees este manual.</target>
        </trans-unit>
        <trans-unit id="a1e588b366d6eee7b2a111ab040de25b982fdb3f" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s also possible for a push to fail in this way when other people have the right to push to the same repository. In that case, the correct solution is to retry the push after first updating your work: either by a pull, or by a fetch followed by a rebase; see the &lt;a href=&quot;#setting-up-a-shared-repository&quot;&gt;next section&lt;/a&gt; and &lt;a href=&quot;gitcvs-migration&quot;&gt;gitcvs-migration[7]&lt;/a&gt; for more.</source>
          <target state="translated">Tambi&amp;eacute;n es posible que un env&amp;iacute;o falle de esta manera cuando otras personas tienen derecho a enviarlo al mismo repositorio. En ese caso, la soluci&amp;oacute;n correcta es volver a intentar la inserci&amp;oacute;n despu&amp;eacute;s de actualizar primero su trabajo: ya sea mediante una extracci&amp;oacute;n o mediante una b&amp;uacute;squeda seguida de una nueva base; consulte la &lt;a href=&quot;#setting-up-a-shared-repository&quot;&gt;siguiente secci&amp;oacute;n&lt;/a&gt; y &lt;a href=&quot;gitcvs-migration&quot;&gt;gitcvs-migration [7]&lt;/a&gt; para obtener m&amp;aacute;s informaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="c8e637a625c72275676a912327970832afbb1fc7" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s especially instructive to look at &quot;commit&quot; objects, since those tend to be small and fairly self-explanatory. In particular, if you follow the convention of having the top commit name in &lt;code&gt;.git/HEAD&lt;/code&gt;, you can do</source>
          <target state="translated">Es especialmente instructivo mirar los objetos de &quot;confirmaci&amp;oacute;n&quot;, ya que tienden a ser peque&amp;ntilde;os y bastante autoexplicativos. En particular, si sigue la convenci&amp;oacute;n de tener el nombre de confirmaci&amp;oacute;n superior en &lt;code&gt;.git/HEAD&lt;/code&gt; , puede hacerlo</target>
        </trans-unit>
        <trans-unit id="ebca6c1346b961bb4e2f8a08e1112a09cf4c4143" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s far too easy to accidentally mix up old and new history. It&amp;rsquo;s still possible with any tool, but git-filter-branch almost invites it. If lucky, the only downside is users getting frustrated that they don&amp;rsquo;t know how to shrink their repo and remove the old stuff. If unlucky, they merge old and new history and end up with multiple &quot;copies&quot; of each commit, some of which have unwanted or sensitive files and others which don&amp;rsquo;t. This comes about in multiple different ways:</source>
          <target state="translated">Es demasiado f&amp;aacute;cil mezclar accidentalmente la historia antigua con la nueva. Todav&amp;iacute;a es posible con cualquier herramienta, pero git-filter-branch casi lo invita. Si tiene suerte, el &amp;uacute;nico inconveniente es que los usuarios se frustran porque no saben c&amp;oacute;mo reducir su repositorio y eliminar las cosas antiguas. Si no tienen suerte, fusionan el historial antiguo y el nuevo y terminan con m&amp;uacute;ltiples &quot;copias&quot; de cada confirmaci&amp;oacute;n, algunas de las cuales tienen archivos no deseados o confidenciales y otras que no. Esto se produce de varias formas diferentes:</target>
        </trans-unit>
        <trans-unit id="7fb3124f269af4d6382e41b308c15a44d9e7c09f" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s not safe to run &lt;code&gt;git submodule update&lt;/code&gt; if you&amp;rsquo;ve made and committed changes within a submodule without checking out a branch first. They will be silently overwritten:</source>
          <target state="translated">No es seguro ejecutar la &lt;code&gt;git submodule update&lt;/code&gt; si ha realizado y realizado cambios dentro de un subm&amp;oacute;dulo sin verificar primero una rama. Se sobrescribir&amp;aacute;n en silencio:</target>
        </trans-unit>
        <trans-unit id="199b24a07e7c4f542f5c9b6cd233e68c58c149e6" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s possible to push any type of object to any namespace outside of &lt;code&gt;refs/{tags,heads}/*&lt;/code&gt;. In the case of tags and commits, these will be treated as if they were the commits inside &lt;code&gt;refs/heads/*&lt;/code&gt; for the purposes of whether the update is allowed.</source>
          <target state="translated">Es posible enviar cualquier tipo de objeto a cualquier espacio de nombres fuera de &lt;code&gt;refs/{tags,heads}/*&lt;/code&gt; . En el caso de etiquetas y confirmaciones, estas se tratar&amp;aacute;n como si fueran confirmaciones dentro de &lt;code&gt;refs/heads/*&lt;/code&gt; a los efectos de si la actualizaci&amp;oacute;n est&amp;aacute; permitida.</target>
        </trans-unit>
        <trans-unit id="cd25bf8e6a6252931a48d686e2c25ca4a7c9f16e" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s probably not worth it to use this option on a given repository without running tailored performance benchmarks on it. It takes a lot more time, and the resulting space/delta optimization may or may not be worth it. Not using this at all is the right trade-off for most users and their repositories.</source>
          <target state="translated">Probablemente no valga la pena usar esta opci&amp;oacute;n en un repositorio determinado sin ejecutar evaluaciones comparativas de rendimiento personalizadas en &amp;eacute;l. Lleva mucho m&amp;aacute;s tiempo y la optimizaci&amp;oacute;n de espacio / delta resultante puede valer la pena o no. No usar esto en absoluto es la compensaci&amp;oacute;n correcta para la mayor&amp;iacute;a de los usuarios y sus repositorios.</target>
        </trans-unit>
        <trans-unit id="6c2d9fe7b4d73e7c5f324adf6070448f4f753fb5" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s reasonable to e.g. configure &lt;code&gt;fetch.pruneTags=true&lt;/code&gt; in &lt;code&gt;~/.gitconfig&lt;/code&gt; to have tags pruned whenever &lt;code&gt;git fetch --prune&lt;/code&gt; is run, without making every invocation of &lt;code&gt;git fetch&lt;/code&gt; without &lt;code&gt;--prune&lt;/code&gt; an error.</source>
          <target state="translated">Es razonable, por ejemplo, configurar &lt;code&gt;fetch.pruneTags=true&lt;/code&gt; en &lt;code&gt;~/.gitconfig&lt;/code&gt; para que se eliminen las etiquetas siempre que se ejecute &lt;code&gt;git fetch --prune&lt;/code&gt; , sin que cada invocaci&amp;oacute;n de &lt;code&gt;git fetch&lt;/code&gt; sin &lt;code&gt;--prune&lt;/code&gt; sea un error.</target>
        </trans-unit>
        <trans-unit id="b2ec8a66f406e3cd9a737fd2597d771efa24775d" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s usually much more common that you merge with somebody else than merging with your own branches, so it&amp;rsquo;s worth pointing out that Git makes that very easy too, and in fact, it&amp;rsquo;s not that different from doing a &lt;code&gt;git merge&lt;/code&gt;. In fact, a remote merge ends up being nothing more than &quot;fetch the work from a remote repository into a temporary tag&quot; followed by a &lt;code&gt;git merge&lt;/code&gt;.</source>
          <target state="translated">Por lo general, es mucho m&amp;aacute;s com&amp;uacute;n fusionarse con otra persona que fusionarse con sus propias ramas, por lo que vale la pena se&amp;ntilde;alar que Git tambi&amp;eacute;n lo hace muy f&amp;aacute;cil y, de hecho, no es tan diferente de hacer una &lt;code&gt;git merge&lt;/code&gt; . De hecho, una fusi&amp;oacute;n remota termina siendo nada m&amp;aacute;s que &quot;recuperar el trabajo de un repositorio remoto en una etiqueta temporal&quot; seguido de una &lt;code&gt;git merge&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="09aeea995eee0f7341283401be15ea3abb990fd5" translate="yes" xml:space="preserve">
          <source>Iterate over all refs that match &lt;code&gt;&amp;lt;pattern&amp;gt;&lt;/code&gt; and show them according to the given &lt;code&gt;&amp;lt;format&amp;gt;&lt;/code&gt;, after sorting them according to the given set of &lt;code&gt;&amp;lt;key&amp;gt;&lt;/code&gt;. If &lt;code&gt;&amp;lt;count&amp;gt;&lt;/code&gt; is given, stop after showing that many refs. The interpolated values in &lt;code&gt;&amp;lt;format&amp;gt;&lt;/code&gt; can optionally be quoted as string literals in the specified host language allowing their direct evaluation in that language.</source>
          <target state="translated">Repita todas las referencias que coincidan con &lt;code&gt;&amp;lt;pattern&amp;gt;&lt;/code&gt; y mu&amp;eacute;strelas de acuerdo con el &lt;code&gt;&amp;lt;format&amp;gt;&lt;/code&gt; dado , despu&amp;eacute;s de ordenarlas seg&amp;uacute;n el conjunto de &lt;code&gt;&amp;lt;key&amp;gt;&lt;/code&gt; dado . Si se da &lt;code&gt;&amp;lt;count&amp;gt;&lt;/code&gt; , det&amp;eacute;ngase despu&amp;eacute;s de mostrar tantas referencias. Los valores interpolados en &lt;code&gt;&amp;lt;format&amp;gt;&lt;/code&gt; se pueden citar opcionalmente como cadenas literales en el idioma host especificado, lo que permite su evaluaci&amp;oacute;n directa en ese idioma.</target>
        </trans-unit>
        <trans-unit id="ddf6f030820afdde653bed6b6ae7f0e48144f06d" translate="yes" xml:space="preserve">
          <source>Join two or more development histories together</source>
          <target state="translated">Unir dos o más historias de desarrollo juntas</target>
        </trans-unit>
        <trans-unit id="045fff3a75d61e019edb089792c9fca9353d7073" translate="yes" xml:space="preserve">
          <source>Just as the filesystem &lt;code&gt;.&lt;/code&gt; (period) refers to the current directory, using a &lt;code&gt;.&lt;/code&gt; as a repository name in Git (a dot-repository) is a relative path and means your current repository.</source>
          <target state="translated">Al igual que el sistema de archivos &lt;code&gt;.&lt;/code&gt; (punto) se refiere al directorio actual, utilizando a &lt;code&gt;.&lt;/code&gt; como nombre de repositorio en Git (un repositorio de puntos) es una ruta relativa y significa tu repositorio actual.</target>
        </trans-unit>
        <trans-unit id="dec0baabf794bebc3957d3bc4ac6d462cd46c778" translate="yes" xml:space="preserve">
          <source>Just doing &lt;code&gt;git checkout-index&lt;/code&gt; does nothing. You probably meant &lt;code&gt;git checkout-index -a&lt;/code&gt;. And if you want to force it, you want &lt;code&gt;git checkout-index -f -a&lt;/code&gt;.</source>
          <target state="translated">Solo hacer &lt;code&gt;git checkout-index&lt;/code&gt; no hace nada. Probablemente te refieres a &lt;code&gt;git checkout-index -a&lt;/code&gt; . Y si quiere forzarlo, quiere &lt;code&gt;git checkout-index -f -a&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4909a5e9d012cc77cb3f33966c75c24bd556a2c1" translate="yes" xml:space="preserve">
          <source>Just in case you are doing something exotic, it should be noted that all of the &amp;lt;commit&amp;gt; in the above description, except in the last two forms that use &quot;..&quot; notations, can be any &amp;lt;tree&amp;gt;.</source>
          <target state="translated">En caso de que est&amp;eacute; haciendo algo ex&amp;oacute;tico, debe tener en cuenta que todos los &amp;lt;commit&amp;gt; en la descripci&amp;oacute;n anterior, excepto en las dos &amp;uacute;ltimas formas que usan anotaciones &quot;..&quot;, pueden ser cualquier &amp;lt;&amp;aacute;rbol&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="4be9ee55a1cb0649bc08a5f7fcba1609e56fcabe" translate="yes" xml:space="preserve">
          <source>Just like &lt;code&gt;push&lt;/code&gt;, a batch sequence of one or more &lt;code&gt;import&lt;/code&gt; is terminated with a blank line. For each batch of &lt;code&gt;import&lt;/code&gt;, the remote helper should produce a fast-import stream terminated by a &lt;code&gt;done&lt;/code&gt; command.</source>
          <target state="translated">Al igual que con la &lt;code&gt;push&lt;/code&gt; , una secuencia por lotes de una o m&amp;aacute;s &lt;code&gt;import&lt;/code&gt; aciones se termina con una l&amp;iacute;nea en blanco. Para cada lote de &lt;code&gt;import&lt;/code&gt; aci&amp;oacute;n , el asistente remoto debe producir una secuencia de importaci&amp;oacute;n r&amp;aacute;pida terminada por un comando &lt;code&gt;done&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="586f68de6dc69eba27bb1d4e9d9bb6d0f56b4317" translate="yes" xml:space="preserve">
          <source>Just make sure to disable line wrapping in the email client (GMail&amp;rsquo;s web interface will wrap lines no matter what, so you need to use a real IMAP client).</source>
          <target state="translated">Solo aseg&amp;uacute;rese de deshabilitar el ajuste de l&amp;iacute;nea en el cliente de correo electr&amp;oacute;nico (la interfaz web de GMail ajustar&amp;aacute; las l&amp;iacute;neas pase lo que pase, por lo que debe utilizar un cliente IMAP real).</target>
        </trans-unit>
        <trans-unit id="a7ee38bb7be4fc44198cb2685d9601dcf2b9f569" translate="yes" xml:space="preserve">
          <source>K</source>
          <target state="translated">K</target>
        </trans-unit>
        <trans-unit id="b97e8895c584b11a83b65d2dacb8c53b7178dd19" translate="yes" xml:space="preserve">
          <source>KMail</source>
          <target state="translated">KMail</target>
        </trans-unit>
        <trans-unit id="2341c447151da84825db8427aea972cadd7288d2" translate="yes" xml:space="preserve">
          <source>Keep a list of repositories you work with regularly:</source>
          <target state="translated">Mantén una lista de los depósitos con los que trabajas regularmente:</target>
        </trans-unit>
        <trans-unit id="2367d7104c669108a5a4faee96aaf23e4129a768" translate="yes" xml:space="preserve">
          <source>Keep changes in working tree while discarding some previous commits</source>
          <target state="translated">Mantener los cambios en el árbol de trabajo mientras se descartan algunos compromisos previos</target>
        </trans-unit>
        <trans-unit id="efc112fed108eb2af53bef134295307559c52881" translate="yes" xml:space="preserve">
          <source>Keep downloaded pack.</source>
          <target state="translated">Mantén el paquete descargado.</target>
        </trans-unit>
        <trans-unit id="9b356018df37cea79789cf69374ce84ecae93c35" translate="yes" xml:space="preserve">
          <source>Keep in mind that the &lt;code&gt;*&lt;/code&gt; (asterisk) wildcard of the local ref (right of the &lt;code&gt;:&lt;/code&gt;) &lt;strong&gt;must&lt;/strong&gt; be the farthest right path component; however the remote wildcard may be anywhere as long as it&amp;rsquo;s an independent path component (surrounded by &lt;code&gt;/&lt;/code&gt; or EOL). This type of configuration is not automatically created by &lt;code&gt;init&lt;/code&gt; and should be manually entered with a text-editor or using &lt;code&gt;git config&lt;/code&gt;.</source>
          <target state="translated">Tenga en cuenta que el &lt;code&gt;*&lt;/code&gt; (asterisco) comod&amp;iacute;n de la ref local (derecha de la &lt;code&gt;:&lt;/code&gt; ) &lt;strong&gt;debe&lt;/strong&gt; ser el componente de trazado m&amp;aacute;s a la derecha; sin embargo, el comod&amp;iacute;n remoto puede estar en cualquier lugar siempre que sea un componente de ruta independiente (rodeado por &lt;code&gt;/&lt;/code&gt; o EOL). Este tipo de configuraci&amp;oacute;n no es creado autom&amp;aacute;ticamente por &lt;code&gt;init&lt;/code&gt; y debe ingresarse manualmente con un editor de texto o usando &lt;code&gt;git config&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f28d8482458ad8eaca4da9ce6d9f18435a267b61" translate="yes" xml:space="preserve">
          <source>Keep repeating the process: compile the tree, test it, and depending on whether it is good or bad run &lt;code&gt;git bisect good&lt;/code&gt; or &lt;code&gt;git bisect bad&lt;/code&gt; to ask for the next commit that needs testing.</source>
          <target state="translated">Siga repitiendo el proceso: compile el &amp;aacute;rbol, pru&amp;eacute;belo y, dependiendo de si es bueno o malo, ejecute &lt;code&gt;git bisect good&lt;/code&gt; o &lt;code&gt;git bisect bad&lt;/code&gt; para solicitar la siguiente confirmaci&amp;oacute;n que necesite probar.</target>
        </trans-unit>
        <trans-unit id="4faf21022722c230f52c5287ce302764467e820e" translate="yes" xml:space="preserve">
          <source>Keep the commits that do not change anything from its parents in the result.</source>
          <target state="translated">Mantén los compromisos que no cambien nada de sus padres en el resultado.</target>
        </trans-unit>
        <trans-unit id="ea4937dada87f98e69877594a5bd03ebc5a4fc74" translate="yes" xml:space="preserve">
          <source>Keep the current index contents, and read the contents of the named tree-ish under the directory at &lt;code&gt;&amp;lt;prefix&amp;gt;&lt;/code&gt;. The command will refuse to overwrite entries that already existed in the original index file.</source>
          <target state="translated">Mantenga el contenido del &amp;iacute;ndice actual y lea el contenido del &amp;aacute;rbol nombrado en el directorio en &lt;code&gt;&amp;lt;prefix&amp;gt;&lt;/code&gt; . El comando se negar&amp;aacute; a sobrescribir las entradas que ya exist&amp;iacute;an en el archivo de &amp;iacute;ndice original.</target>
        </trans-unit>
        <trans-unit id="d737c66ea055bf55ed844d15e52460a96096a67f" translate="yes" xml:space="preserve">
          <source>Keep the version from your branch in the work tree, but leave the path in the conflicted state for the user to sort out.</source>
          <target state="translated">Mantén la versión de tu rama en el árbol de trabajo,pero deja el camino en el estado de conflicto para que el usuario lo resuelva.</target>
        </trans-unit>
        <trans-unit id="95e57eb6304d53fb35eb7b893fc3d7458db2c90c" translate="yes" xml:space="preserve">
          <source>Keep the working tree locked after creation. This is the equivalent of &lt;code&gt;git worktree lock&lt;/code&gt; after &lt;code&gt;git worktree add&lt;/code&gt;, but without race condition.</source>
          <target state="translated">Mantenga el &amp;aacute;rbol de trabajo bloqueado despu&amp;eacute;s de la creaci&amp;oacute;n. Este es el equivalente &lt;code&gt;git worktree lock&lt;/code&gt; de git worktree despu&amp;eacute;s de &lt;code&gt;git worktree add&lt;/code&gt; , pero sin condici&amp;oacute;n de carrera.</target>
        </trans-unit>
        <trans-unit id="b288ae9d082d21fcccb8cbea92de9e2fd90c35f9" translate="yes" xml:space="preserve">
          <source>Keep unreachable objects in loose form. This implies &lt;code&gt;--revs&lt;/code&gt;.</source>
          <target state="translated">Mantenga los objetos inalcanzables sueltos. Esto implica &lt;code&gt;--revs&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5fef7648dce54325886b4bd2e05123b8e3f3ba8b" translate="yes" xml:space="preserve">
          <source>Keep working in your primary repository. Your changes include modifications of your own, patches you receive via e-mails, and merges resulting from pulling the &quot;public&quot; repositories of your &quot;project lead&quot; and possibly your &quot;sub-subsystem maintainers&quot;.</source>
          <target state="translated">Sigue trabajando en tu depósito principal.Sus cambios incluyen modificaciones propias,parches que recibe por correo electrónico,y fusiones resultantes de tirar de los repositorios &quot;públicos&quot; de su &quot;jefe de proyecto&quot; y posiblemente de sus &quot;mantenedores de sub-subsistemas&quot;.</target>
        </trans-unit>
        <trans-unit id="ca6eb7beb12ef44a32102578e1d606b2be688242" translate="yes" xml:space="preserve">
          <source>Keep working in your primary repository. Your changes include modifications of your own, patches you receive via e-mails, and merges resulting from pulling the &quot;public&quot; repositories of your &quot;subsystem maintainers&quot;.</source>
          <target state="translated">Sigue trabajando en tu depósito principal.Tus cambios incluyen modificaciones propias,parches que recibes por correo electrónico,y fusiones resultantes de tirar de los repositorios &quot;públicos&quot; de tus &quot;mantenedores de subsistemas&quot;.</target>
        </trans-unit>
        <trans-unit id="04e2360cc7b28c2ccb26642bb98ceb0fcbba2f5a" translate="yes" xml:space="preserve">
          <source>Keeping a patch series up to date using git rebase</source>
          <target state="translated">Mantener una serie de parches al día usando git rebase</target>
        </trans-unit>
        <trans-unit id="b81b785228a23fa6b75a5abffb474819b40a8136" translate="yes" xml:space="preserve">
          <source>Kill keywords: will extract files with &lt;code&gt;-kk&lt;/code&gt; from the CVS archive to avoid noisy changesets. Highly recommended, but off by default to preserve compatibility with early imported trees.</source>
          <target state="translated">&lt;code&gt;-kk&lt;/code&gt; palabras clave: extraer&amp;aacute; archivos con -kk del archivo CVS para evitar conjuntos de cambios ruidosos. Muy recomendado, pero desactivado de forma predeterminada para preservar la compatibilidad con los primeros &amp;aacute;rboles importados.</target>
        </trans-unit>
        <trans-unit id="02658e782a0ecc008f0ca6ffc2a20f7bdbee96d7" translate="yes" xml:space="preserve">
          <source>Label for the &quot;home link&quot; at the top of all pages, leading to &lt;code&gt;$home_link&lt;/code&gt; (usually the main gitweb page, which contains the projects list). It is used as the first component of gitweb&amp;rsquo;s &quot;breadcrumb trail&quot;: &lt;code&gt;&amp;lt;home link&amp;gt; / &amp;lt;project&amp;gt; / &amp;lt;action&amp;gt;&lt;/code&gt;. Can be set at build time using the &lt;code&gt;GITWEB_HOME_LINK_STR&lt;/code&gt; variable. By default it is set to &quot;projects&quot;, as this link leads to the list of projects. Another popular choice is to set it to the name of site. Note that it is treated as raw HTML so it should not be set from untrusted sources.</source>
          <target state="translated">Etiqueta para el &quot;enlace de inicio&quot; en la parte superior de todas las p&amp;aacute;ginas, que lleva a &lt;code&gt;$home_link&lt;/code&gt; (normalmente la p&amp;aacute;gina principal de gitweb, que contiene la lista de proyectos). Se utiliza como el primer componente de la &quot;ruta de navegaci&amp;oacute;n&quot; de gitweb: &lt;code&gt;&amp;lt;home link&amp;gt; / &amp;lt;project&amp;gt; / &amp;lt;action&amp;gt;&lt;/code&gt; . Se puede configurar en el momento de la compilaci&amp;oacute;n mediante la variable &lt;code&gt;GITWEB_HOME_LINK_STR&lt;/code&gt; . De forma predeterminada, se establece en &quot;proyectos&quot;, ya que este enlace conduce a la lista de proyectos. Otra opci&amp;oacute;n popular es configurarlo con el nombre del sitio. Tenga en cuenta que se trata como HTML sin formato, por lo que no debe establecerse a partir de fuentes que no sean de confianza.</target>
        </trans-unit>
        <trans-unit id="19b52717c24503e82535f1da97544e03ef42f759" translate="yes" xml:space="preserve">
          <source>Large projects are often composed of smaller, self-contained modules. For example, an embedded Linux distribution&amp;rsquo;s source tree would include every piece of software in the distribution with some local modifications; a movie player might need to build against a specific, known-working version of a decompression library; several independent programs might all share the same build scripts.</source>
          <target state="translated">Los grandes proyectos a menudo se componen de m&amp;oacute;dulos aut&amp;oacute;nomos m&amp;aacute;s peque&amp;ntilde;os. Por ejemplo, el &amp;aacute;rbol de fuentes de una distribuci&amp;oacute;n de Linux embebida incluir&amp;iacute;a cada pieza de software en la distribuci&amp;oacute;n con algunas modificaciones locales; es posible que un reproductor de pel&amp;iacute;culas deba compilarse con una versi&amp;oacute;n espec&amp;iacute;fica y funcional de una biblioteca de descompresi&amp;oacute;n; varios programas independientes pueden compartir todos los mismos scripts de compilaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="eebf4c31734b36e391dbec8f9bdc861cf73858fc" translate="yes" xml:space="preserve">
          <source>Later, Bob can update his repo with Alice&amp;rsquo;s latest changes using</source>
          <target state="translated">M&amp;aacute;s tarde, Bob puede actualizar su repositorio con los &amp;uacute;ltimos cambios de Alice usando</target>
        </trans-unit>
        <trans-unit id="b67e320eff785b446a82207f60f64bae4d9398b2" translate="yes" xml:space="preserve">
          <source>Later, you can see whether your changes have been applied by saying (still on &lt;code&gt;topic&lt;/code&gt;):</source>
          <target state="translated">M&amp;aacute;s tarde, puede ver si sus cambios se han aplicado diciendo (a&amp;uacute;n en el &lt;code&gt;topic&lt;/code&gt; ):</target>
        </trans-unit>
        <trans-unit id="0c480c6f24e2582817904a3ca717bfe059eaf9ba" translate="yes" xml:space="preserve">
          <source>Leading &lt;code&gt;Re:&lt;/code&gt;, &lt;code&gt;re:&lt;/code&gt;, and &lt;code&gt;:&lt;/code&gt;.</source>
          <target state="translated">L&amp;iacute;der &lt;code&gt;Re:&lt;/code&gt; , &lt;code&gt;re:&lt;/code&gt; y &lt;code&gt;:&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6cba31f4e857a58fc5d56324b4f5b7ba501d5431" translate="yes" xml:space="preserve">
          <source>Leading and trailing whitespace are ignored.</source>
          <target state="translated">Se ignoran los espacios blancos principales y secundarios.</target>
        </trans-unit>
        <trans-unit id="9400d93a0e4bf560ae2ff2a8521028a1c12485de" translate="yes" xml:space="preserve">
          <source>Leading and trailing whitespace.</source>
          <target state="translated">Liderando y siguiendo el espacio blanco.</target>
        </trans-unit>
        <trans-unit id="b0ca289dea1d9e545043917d0313a90afe03b7b2" translate="yes" xml:space="preserve">
          <source>Leading bracketed strings (between &lt;code&gt;[&lt;/code&gt; and &lt;code&gt;]&lt;/code&gt;, usually &lt;code&gt;[PATCH]&lt;/code&gt;).</source>
          <target state="translated">Cadenas entre corchetes iniciales (entre &lt;code&gt;[&lt;/code&gt; y &lt;code&gt;]&lt;/code&gt; , normalmente &lt;code&gt;[PATCH]&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="c5fae931542a3559bb8c0d5b861a24e60a1ac67c" translate="yes" xml:space="preserve">
          <source>Left-, middle-, or right-align the content between %(align:&amp;hellip;​) and %(end). The &quot;align:&quot; is followed by &lt;code&gt;width=&amp;lt;width&amp;gt;&lt;/code&gt; and &lt;code&gt;position=&amp;lt;position&amp;gt;&lt;/code&gt; in any order separated by a comma, where the &lt;code&gt;&amp;lt;position&amp;gt;&lt;/code&gt; is either left, right or middle, default being left and &lt;code&gt;&amp;lt;width&amp;gt;&lt;/code&gt; is the total length of the content with alignment. For brevity, the &quot;width=&quot; and/or &quot;position=&quot; prefixes may be omitted, and bare &amp;lt;width&amp;gt; and &amp;lt;position&amp;gt; used instead. For instance, &lt;code&gt;%(align:&amp;lt;width&amp;gt;,&amp;lt;position&amp;gt;)&lt;/code&gt;. If the contents length is more than the width then no alignment is performed. If used with &lt;code&gt;--quote&lt;/code&gt; everything in between %(align:&amp;hellip;​) and %(end) is quoted, but if nested then only the topmost level performs quoting.</source>
          <target state="translated">Alinee a la izquierda, en el medio o a la derecha el contenido entre% (alinear:&amp;hellip;) y% (fin). El &quot;alinear:&quot; va seguido de &lt;code&gt;width=&amp;lt;width&amp;gt;&lt;/code&gt; y &lt;code&gt;position=&amp;lt;position&amp;gt;&lt;/code&gt; en cualquier orden separado por una coma, donde la &lt;code&gt;&amp;lt;position&amp;gt;&lt;/code&gt; es izquierda, derecha o central, siendo el valor predeterminado izquierdo y &lt;code&gt;&amp;lt;width&amp;gt;&lt;/code&gt; es el total longitud del contenido con alineaci&amp;oacute;n. En aras de la brevedad, los prefijos &quot;width =&quot; y / o &quot;position =&quot; se pueden omitir y, en su lugar, se pueden utilizar simplemente &amp;lt;width&amp;gt; y &amp;lt;position&amp;gt;. Por ejemplo, &lt;code&gt;%(align:&amp;lt;width&amp;gt;,&amp;lt;position&amp;gt;)&lt;/code&gt; . Si la longitud del contenido es mayor que el ancho, no se realiza ninguna alineaci&amp;oacute;n. Si se usa con &lt;code&gt;--quote&lt;/code&gt; ,se cita todo lo que se encuentre entre% (align:&amp;hellip;) y% (end),pero si est&amp;aacute; anidado, solo el nivel superior realiza la cotizaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="4913da5c2a93f28cfca5df10654d75686a764062" translate="yes" xml:space="preserve">
          <source>Legacy alias for &lt;code&gt;--smtp-encryption ssl&lt;/code&gt;.</source>
          <target state="translated">Alias ​​heredado para &lt;code&gt;--smtp-encryption ssl&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8c79d7d578b1dfedd061424fe06d7bbd7bf7860a" translate="yes" xml:space="preserve">
          <source>Legacy monitoring operations are not supported (edit, watch and related). Exports and tagging (tags and branches) are not supported at this stage.</source>
          <target state="translated">No se admiten las operaciones de vigilancia del legado (edición,vigilancia y afines).Las exportaciones y el etiquetado (etiquetas y ramas)no se admiten en esta etapa.</target>
        </trans-unit>
        <trans-unit id="efdb524a0ef0e2256e12ca50686b4d8bc222c208" translate="yes" xml:space="preserve">
          <source>Lesson three is: study the code. Really, it is the best way to learn about the organization of Git (after you know the basic concepts).</source>
          <target state="translated">La lección tres es:estudiar el código.En realidad,es la mejor manera de aprender sobre la organización de Git (después de conocer los conceptos básicos).</target>
        </trans-unit>
        <trans-unit id="893b35eb2ef36c307a5615060033f2510cf02d9b" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s also suppose that we have a cleaned up graph like one after step 1) in the bisection algorithm above. This means that we can measure the information we get in terms of number of commit we can remove from the graph..</source>
          <target state="translated">Supongamos tambi&amp;eacute;n que tenemos un gr&amp;aacute;fico limpio como uno despu&amp;eacute;s del paso 1) en el algoritmo de bisecci&amp;oacute;n anterior. Esto significa que podemos medir la informaci&amp;oacute;n que obtenemos en t&amp;eacute;rminos de n&amp;uacute;mero de confirmaciones que podemos eliminar del gr&amp;aacute;fico.</target>
        </trans-unit>
        <trans-unit id="c8d0e17bfd7a63329a6082665d278b7fb499b0b6" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s skip over the obvious details; the only really interesting part here is the call to &lt;code&gt;get_sha1()&lt;/code&gt;. It tries to interpret &lt;code&gt;argv[2]&lt;/code&gt; as an object name, and if it refers to an object which is present in the current repository, it writes the resulting SHA-1 into the variable &lt;code&gt;sha1&lt;/code&gt;.</source>
          <target state="translated">Pasemos por alto los detalles obvios; la &amp;uacute;nica parte realmente interesante aqu&amp;iacute; es la llamada a &lt;code&gt;get_sha1()&lt;/code&gt; . Intenta interpretar &lt;code&gt;argv[2]&lt;/code&gt; como un nombre de objeto, y si se refiere a un objeto que est&amp;aacute; presente en el repositorio actual, escribe el SHA-1 resultante en la variable &lt;code&gt;sha1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cc9abf37f1be76cb29eb48ded27f1fe2938a8b22" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s start a new project and create a small amount of history:</source>
          <target state="translated">Comencemos un nuevo proyecto y creemos una peque&amp;ntilde;a cantidad de historia:</target>
        </trans-unit>
        <trans-unit id="f0d62f9783a955198cc607ca11b36e935a346c02" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s take the following graph as an example:</source>
          <target state="translated">Tomemos el siguiente gr&amp;aacute;fico como ejemplo:</target>
        </trans-unit>
        <trans-unit id="1c0b60e2ec5a47fbbf8d5055a8c4fd552a20bdbd" translate="yes" xml:space="preserve">
          <source>Lets you rewrite Git revision history by rewriting the branches mentioned in the &amp;lt;rev-list options&amp;gt;, applying custom filters on each revision. Those filters can modify each tree (e.g. removing a file or running a perl rewrite on all files) or information about each commit. Otherwise, all information (including original commit times or merge information) will be preserved.</source>
          <target state="translated">Le permite reescribir el historial de revisiones de Git reescribiendo las ramas mencionadas en las &amp;lt;opciones de lista de revoluciones&amp;gt;, aplicando filtros personalizados en cada revisi&amp;oacute;n. Esos filtros pueden modificar cada &amp;aacute;rbol (por ejemplo, eliminar un archivo o ejecutar una reescritura de Perl en todos los archivos) o informaci&amp;oacute;n sobre cada confirmaci&amp;oacute;n. De lo contrario, se conservar&amp;aacute; toda la informaci&amp;oacute;n (incluidos los tiempos de confirmaci&amp;oacute;n originales o la informaci&amp;oacute;n de fusi&amp;oacute;n).</target>
        </trans-unit>
        <trans-unit id="58fd3b1b83cc7fc933d72fe934bdb6e534441281" translate="yes" xml:space="preserve">
          <source>Licensed under the MIT License.</source>
          <target state="translated">Con licencia del MIT.</target>
        </trans-unit>
        <trans-unit id="8a762e028503c19597a52f977263fd61a8df56e0" translate="yes" xml:space="preserve">
          <source>Lighttpd</source>
          <target state="translated">Lighttpd</target>
        </trans-unit>
        <trans-unit id="c20b9e30add4d8fcb9e944c3a79357b0eb58faf9" translate="yes" xml:space="preserve">
          <source>Like --allow-empty this command is primarily for use by foreign SCM interface scripts. It allows you to create a commit with an empty commit message without using plumbing commands like &lt;a href=&quot;git-commit-tree&quot;&gt;git-commit-tree[1]&lt;/a&gt;.</source>
          <target state="translated">Como --allow-empty, este comando es principalmente para ser utilizado por scripts de interfaz SCM externos. Le permite crear una confirmaci&amp;oacute;n con un mensaje de confirmaci&amp;oacute;n vac&amp;iacute;o sin usar comandos de plomer&amp;iacute;a como &lt;a href=&quot;git-commit-tree&quot;&gt;git-commit-tree [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5f6f49e5a6f1778648e9730643fd43474f2dbc13" translate="yes" xml:space="preserve">
          <source>Like --get-all, but interprets the name as a regular expression and writes out the key names. Regular expression matching is currently case-sensitive and done against a canonicalized version of the key in which section and variable names are lowercased, but subsection names are not.</source>
          <target state="translated">Como...-lo tiene todo,pero interpreta el nombre como una expresión regular y escribe los nombres de las teclas.La coincidencia de expresiones regulares es actualmente sensible a mayúsculas y minúsculas y se hace contra una versión canalizada de la clave en la que los nombres de las secciones y variables están en minúsculas,pero los nombres de las subsecciones no.</target>
        </trans-unit>
        <trans-unit id="f93e6625e77c19d6664d2e45faf25a33780dbe37" translate="yes" xml:space="preserve">
          <source>Like --import-marks but instead of erroring out, silently skips the file if it does not exist.</source>
          <target state="translated">Como --importar marcas pero en vez de equivocarse,salta silenciosamente el archivo si no existe.</target>
        </trans-unit>
        <trans-unit id="0eda32196b28e34b5200ae38915b28d72ba0802b" translate="yes" xml:space="preserve">
          <source>Like --import-marks except in two respects: first, only one &quot;feature import-marks&quot; or &quot;feature import-marks-if-exists&quot; command is allowed per stream; second, an --import-marks= or --import-marks-if-exists command-line option overrides any of these &quot;feature&quot; commands in the stream; third, &quot;feature import-marks-if-exists&quot; like a corresponding command-line option silently skips a nonexistent file.</source>
          <target state="translated">Como --import-marks excepto en dos aspectos:primero,sólo se permite un comando de &quot;importar marcas de características&quot; o &quot;importar marcas de características-si-existe&quot; por flujo;segundo,una opción de línea de comandos --import-marks=o --import-marks-if-exists anula cualquiera de estos comandos de &quot;características&quot; en el flujo;tercero,&quot;importar marcas de características-si-existe&quot; como una opción de línea de comandos correspondiente salta silenciosamente un archivo inexistente.</target>
        </trans-unit>
        <trans-unit id="ea166a12e166b75ad46458f975797a03647dc62d" translate="yes" xml:space="preserve">
          <source>Like --keep create a .keep file before moving the index into its final destination, but rather than creating an empty file place &lt;code&gt;&amp;lt;msg&amp;gt;&lt;/code&gt; followed by an LF into the .keep file. The &lt;code&gt;&amp;lt;msg&amp;gt;&lt;/code&gt; message can later be searched for within all .keep files to locate any which have outlived their usefulness.</source>
          <target state="translated">Como --keep crea un archivo .keep antes de mover el &amp;iacute;ndice a su destino final, pero en lugar de crear un archivo vac&amp;iacute;o, coloque &lt;code&gt;&amp;lt;msg&amp;gt;&lt;/code&gt; seguido de un LF en el archivo .keep. El mensaje &lt;code&gt;&amp;lt;msg&amp;gt;&lt;/code&gt; se puede buscar m&amp;aacute;s tarde dentro de todos los archivos .keep para localizar cualquiera que haya dejado de ser &amp;uacute;til.</target>
        </trans-unit>
        <trans-unit id="da58772c0d323657b31dd0d6c68daa01b72022dc" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;--cherry-pick&lt;/code&gt; (see below) but mark equivalent commits with &lt;code&gt;=&lt;/code&gt; rather than omitting them, and inequivalent ones with &lt;code&gt;+&lt;/code&gt;.</source>
          <target state="translated">Como &lt;code&gt;--cherry-pick&lt;/code&gt; (ver m&amp;aacute;s abajo) pero marca las confirmaciones equivalentes con &lt;code&gt;=&lt;/code&gt; en lugar de omitirlas, y las no equivalentes con &lt;code&gt;+&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="18b014ee75198b1ce501d5b1546fe06cd49ddd23" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;--git-dir&lt;/code&gt;, but its output is always the canonicalized absolute path.</source>
          <target state="translated">Como &lt;code&gt;--git-dir&lt;/code&gt; , pero su salida es siempre la ruta absoluta canonicalizada.</target>
        </trans-unit>
        <trans-unit id="af1d4315bb510027eb7e61b588f2b477e26e55d4" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;--refresh&lt;/code&gt;, but checks stat information unconditionally, without regard to the &quot;assume unchanged&quot; setting.</source>
          <target state="translated">Como &lt;code&gt;--refresh&lt;/code&gt; , pero verifica la informaci&amp;oacute;n de estad&amp;iacute;sticas incondicionalmente, sin tener en cuenta la configuraci&amp;oacute;n de &quot;asumir sin cambios&quot;.</target>
        </trans-unit>
        <trans-unit id="649d7b810a2269259a3e3571033e0da598ccd04e" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;-C&lt;/code&gt;, but with &lt;code&gt;-c&lt;/code&gt; the editor is invoked, so that the user can further edit the commit message.</source>
          <target state="translated">Como &lt;code&gt;-C&lt;/code&gt; , pero con &lt;code&gt;-c&lt;/code&gt; se invoca el editor, para que el usuario pueda editar m&amp;aacute;s el mensaje de confirmaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="72f500fc1c4bd05ad014fbedf9cd9b9fb51f168b" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;-C&lt;/code&gt;, but with &lt;code&gt;-c&lt;/code&gt; the editor is invoked, so that the user can further edit the note message.</source>
          <target state="translated">Como &lt;code&gt;-C&lt;/code&gt; , pero con &lt;code&gt;-c&lt;/code&gt; se invoca el editor, para que el usuario pueda editar m&amp;aacute;s el mensaje de nota.</target>
        </trans-unit>
        <trans-unit id="5f2734a31de3aa99c55dc536f672e3afeacd6e67" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;fsck.&amp;lt;msg-id&amp;gt;&lt;/code&gt; this variable has corresponding &lt;code&gt;receive.fsck.skipList&lt;/code&gt; and &lt;code&gt;fetch.fsck.skipList&lt;/code&gt; variants.</source>
          <target state="translated">Al igual que &lt;code&gt;fsck.&amp;lt;msg-id&amp;gt;&lt;/code&gt; esta variable se corresponde &lt;code&gt;receive.fsck.skipList&lt;/code&gt; y &lt;code&gt;fetch.fsck.skipList&lt;/code&gt; variantes.</target>
        </trans-unit>
        <trans-unit id="8f4973bf138d30d1fbff518822c72869393d6ab3" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;git push&lt;/code&gt; or &lt;code&gt;git fetch&lt;/code&gt;, imports handled by fast-import are safe to run alongside parallel &lt;code&gt;git repack -a -d&lt;/code&gt; or &lt;code&gt;git gc&lt;/code&gt; invocations, or any other Git operation (including &lt;code&gt;git prune&lt;/code&gt;, as loose objects are never used by fast-import).</source>
          <target state="translated">Al igual que &lt;code&gt;git push&lt;/code&gt; o &lt;code&gt;git fetch&lt;/code&gt; , las importaciones manejadas por fast-import son seguras de ejecutar junto con invocaciones paralelas de &lt;code&gt;git repack -a -d&lt;/code&gt; o &lt;code&gt;git gc&lt;/code&gt; , o cualquier otra operaci&amp;oacute;n de Git (incluido &lt;code&gt;git prune&lt;/code&gt; , ya que los objetos sueltos nunca se utilizan en fast-import ).</target>
        </trans-unit>
        <trans-unit id="c7a0caab42cb430b8f7eb62e2b9ee91196438e5f" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;git rebase&lt;/code&gt;; this requires that the working tree be clean and have no uncommitted changes.</source>
          <target state="translated">Como &lt;code&gt;git rebase&lt;/code&gt; ; esto requiere que el &amp;aacute;rbol de trabajo est&amp;eacute; limpio y no tenga cambios no comprometidos.</target>
        </trans-unit>
        <trans-unit id="94b902a35ff412729993e3558dc74f40d9a138f0" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;mailmap.file&lt;/code&gt;, but consider the value as a reference to a blob in the repository. If both &lt;code&gt;mailmap.file&lt;/code&gt; and &lt;code&gt;mailmap.blob&lt;/code&gt; are given, both are parsed, with entries from &lt;code&gt;mailmap.file&lt;/code&gt; taking precedence. In a bare repository, this defaults to &lt;code&gt;HEAD:.mailmap&lt;/code&gt;. In a non-bare repository, it defaults to empty.</source>
          <target state="translated">Como &lt;code&gt;mailmap.file&lt;/code&gt; , pero considere el valor como una referencia a un blob en el repositorio. Si se proporcionan tanto &lt;code&gt;mailmap.file&lt;/code&gt; como &lt;code&gt;mailmap.blob&lt;/code&gt; , ambos se analizan, y las entradas de &lt;code&gt;mailmap.file&lt;/code&gt; tienen prioridad. En un repositorio &lt;code&gt;HEAD:.mailmap&lt;/code&gt; , este valor predeterminado es HEAD: .mailmap . En un repositorio no desnudo, el valor predeterminado es vac&amp;iacute;o.</target>
        </trans-unit>
        <trans-unit id="e5b79d6b46ed0bad865e7c66642f5df5197bbc3e" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;pop&lt;/code&gt;, but do not remove the state from the stash list. Unlike &lt;code&gt;pop&lt;/code&gt;, &lt;code&gt;&amp;lt;stash&amp;gt;&lt;/code&gt; may be any commit that looks like a commit created by &lt;code&gt;stash push&lt;/code&gt; or &lt;code&gt;stash create&lt;/code&gt;.</source>
          <target state="translated">Como &lt;code&gt;pop&lt;/code&gt; , pero no elimine el estado de la lista de alijo. A diferencia de &lt;code&gt;pop&lt;/code&gt; , &lt;code&gt;&amp;lt;stash&amp;gt;&lt;/code&gt; puede ser cualquier confirmaci&amp;oacute;n que parezca una confirmaci&amp;oacute;n creada por &lt;code&gt;stash push&lt;/code&gt; o &lt;code&gt;stash create&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b42cf6e877b403442b6c5e230e0a3121abfa79f2" translate="yes" xml:space="preserve">
          <source>Like get, but returns all values for a multi-valued key.</source>
          <target state="translated">Como get,pero devuelve todos los valores de una clave multivaluada.</target>
        </trans-unit>
        <trans-unit id="73701f369b01fba26e9d0bb68ef652b62a8e8ce1" translate="yes" xml:space="preserve">
          <source>Like host.example:foo/repo, but use /home/foo/.ssh/somekey as keypair and user as user on remote side. This avoids needing to edit .ssh/config.</source>
          <target state="translated">Como host.example:foo/repo,pero usa /home/foo/.ssh/somekey como par de teclas y user como usuario en el lado remoto.Esto evita la necesidad de editar el .ssh/config.</target>
        </trans-unit>
        <trans-unit id="6a22ef6226883a7823ee7468ab3e5221cd1b0fcc" translate="yes" xml:space="preserve">
          <source>Like many programs that switch user id, the daemon does not reset environment variables such as &lt;code&gt;$HOME&lt;/code&gt; when it runs git programs, e.g. &lt;code&gt;upload-pack&lt;/code&gt; and &lt;code&gt;receive-pack&lt;/code&gt;. When using this option, you may also want to set and export &lt;code&gt;HOME&lt;/code&gt; to point at the home directory of &lt;code&gt;&amp;lt;user&amp;gt;&lt;/code&gt; before starting the daemon, and make sure any Git configuration files in that directory are readable by &lt;code&gt;&amp;lt;user&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">Como muchos programas que cambian el ID de usuario, el demonio no restablece las variables de entorno como &lt;code&gt;$HOME&lt;/code&gt; cuando ejecuta programas git, por ejemplo, &lt;code&gt;upload-pack&lt;/code&gt; y &lt;code&gt;receive-pack&lt;/code&gt; . Al usar esta opci&amp;oacute;n, es posible que tambi&amp;eacute;n desee configurar y exportar &lt;code&gt;HOME&lt;/code&gt; para que apunte al directorio de inicio de &lt;code&gt;&amp;lt;user&amp;gt;&lt;/code&gt; antes de iniciar el demonio, y aseg&amp;uacute;rese de que los archivos de configuraci&amp;oacute;n de Git en ese directorio sean legibles por &lt;code&gt;&amp;lt;user&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="955d6409ae367c03bad138119c6bf959eda46b3c" translate="yes" xml:space="preserve">
          <source>Likewise, when the &lt;code&gt;LV&lt;/code&gt; environment variable is unset, Git sets it to &lt;code&gt;-c&lt;/code&gt;. You can override this setting by exporting &lt;code&gt;LV&lt;/code&gt; with another value or setting &lt;code&gt;core.pager&lt;/code&gt; to &lt;code&gt;lv +c&lt;/code&gt;.</source>
          <target state="translated">Del mismo modo, cuando la variable de entorno &lt;code&gt;LV&lt;/code&gt; no est&amp;aacute; configurada, Git la establece en &lt;code&gt;-c&lt;/code&gt; . Puede anular esta configuraci&amp;oacute;n exportando &lt;code&gt;LV&lt;/code&gt; con otro valor o configurando &lt;code&gt;core.pager&lt;/code&gt; en &lt;code&gt;lv +c&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="da647d41a556bd9f858a9fb821a95fe4fa6d0849" translate="yes" xml:space="preserve">
          <source>Limit commits to the ones touching files in the given paths. Note, to avoid ambiguity with respect to revision names use &quot;--&quot; to separate the paths from any preceding options.</source>
          <target state="translated">Limita las confirmaciones a los que tocan los archivos en las rutas dadas.Nota,para evitar la ambigüedad con respecto a los nombres de las revisiones utilice &quot;--&quot; para separar las rutas de cualquier opción precedente.</target>
        </trans-unit>
        <trans-unit id="a8f6287e3aa57458fad3449d202e28c228d6d460" translate="yes" xml:space="preserve">
          <source>Limit diff output to named subtrees.</source>
          <target state="translated">Limitar la salida de difusión a los subárboles nombrados.</target>
        </trans-unit>
        <trans-unit id="73ea1d1481ae126a39e8d8a25424a40b0120067c" translate="yes" xml:space="preserve">
          <source>Limit fetching to ancestor-chains not longer than n. &lt;code&gt;git-upload-pack&lt;/code&gt; treats the special depth 2147483647 as infinite even if there is an ancestor-chain that long.</source>
          <target state="translated">Limite la b&amp;uacute;squeda a cadenas de ancestros que no sean m&amp;aacute;s largas que n. &lt;code&gt;git-upload-pack&lt;/code&gt; trata la profundidad especial 2147483647 como infinita incluso si hay una cadena de ancestros tan larga.</target>
        </trans-unit>
        <trans-unit id="3548328e70b776f579a206b5e26f3a2cdd3bf54c" translate="yes" xml:space="preserve">
          <source>Limit fetching to the specified number of commits from the tip of each remote branch history. If fetching to a &lt;code&gt;shallow&lt;/code&gt; repository created by &lt;code&gt;git clone&lt;/code&gt; with &lt;code&gt;--depth=&amp;lt;depth&amp;gt;&lt;/code&gt; option (see &lt;a href=&quot;git-clone&quot;&gt;git-clone[1]&lt;/a&gt;), deepen or shorten the history to the specified number of commits. Tags for the deepened commits are not fetched.</source>
          <target state="translated">Limite la recuperaci&amp;oacute;n al n&amp;uacute;mero especificado de confirmaciones desde la punta del historial de cada rama remota. Si busca en un repositorio &lt;code&gt;shallow&lt;/code&gt; profundo creado por &lt;code&gt;git clone&lt;/code&gt; con la &lt;code&gt;--depth=&amp;lt;depth&amp;gt;&lt;/code&gt; (ver &lt;a href=&quot;git-clone&quot;&gt;git-clone [1]&lt;/a&gt; ), profundice o acorte el historial al n&amp;uacute;mero especificado de confirmaciones. Las etiquetas para las confirmaciones profundizadas no se recuperan.</target>
        </trans-unit>
        <trans-unit id="406e704b5fa6637d1092aef900d6bea100f59424" translate="yes" xml:space="preserve">
          <source>Limit output to the one commit object which is roughly halfway between included and excluded commits. Note that the bad bisection ref &lt;code&gt;refs/bisect/bad&lt;/code&gt; is added to the included commits (if it exists) and the good bisection refs &lt;code&gt;refs/bisect/good-*&lt;/code&gt; are added to the excluded commits (if they exist). Thus, supposing there are no refs in &lt;code&gt;refs/bisect/&lt;/code&gt;, if</source>
          <target state="translated">Limite la salida al &amp;uacute;nico objeto de confirmaci&amp;oacute;n que se encuentre aproximadamente a medio camino entre las confirmaciones incluidas y excluidas. Tenga en cuenta que la bisecci&amp;oacute;n incorrecta refs &lt;code&gt;refs/bisect/bad&lt;/code&gt; se agrega a las confirmaciones incluidas (si existe) y las buenas referencias de bisecci&amp;oacute;n &lt;code&gt;refs/bisect/good-*&lt;/code&gt; se agregan a las confirmaciones excluidas (si existen). Por lo tanto, suponiendo que no haya referencias en &lt;code&gt;refs/bisect/&lt;/code&gt; , si</target>
        </trans-unit>
        <trans-unit id="2b149769f0e9e62c7755e40f7d9c9b100ff198f3" translate="yes" xml:space="preserve">
          <source>Limit the commits output to ones that match all given &lt;code&gt;--grep&lt;/code&gt;, instead of ones that match at least one.</source>
          <target state="translated">Limite la salida de confirmaciones a aquellas que coincidan con todas las dadas &lt;code&gt;--grep&lt;/code&gt; , en lugar de aquellas que coincidan con al menos una.</target>
        </trans-unit>
        <trans-unit id="119c553a83e823fd710ae4f2da2e455c4cb090b7" translate="yes" xml:space="preserve">
          <source>Limit the commits output to ones with author/committer header lines that match the specified pattern (regular expression). With more than one &lt;code&gt;--author=&amp;lt;pattern&amp;gt;&lt;/code&gt;, commits whose author matches any of the given patterns are chosen (similarly for multiple &lt;code&gt;--committer=&amp;lt;pattern&amp;gt;&lt;/code&gt;).</source>
          <target state="translated">Limite la salida de confirmaciones a aquellas con l&amp;iacute;neas de encabezado de autor / confirmador que coincidan con el patr&amp;oacute;n especificado (expresi&amp;oacute;n regular). Con m&amp;aacute;s de un &lt;code&gt;--author=&amp;lt;pattern&amp;gt;&lt;/code&gt; , se eligen confirmaciones cuyo autor coincide con cualquiera de los patrones dados (de manera similar para m&amp;uacute;ltiples &lt;code&gt;--committer=&amp;lt;pattern&amp;gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="dd1c85bc38b39ba5aff2bee57d4deea0c60fd712" translate="yes" xml:space="preserve">
          <source>Limit the commits output to ones with log message that do not match the pattern specified with &lt;code&gt;--grep=&amp;lt;pattern&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">Limite la salida de confirmaciones a aquellas con mensajes de registro que no coincidan con el patr&amp;oacute;n especificado con &lt;code&gt;--grep=&amp;lt;pattern&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bd9eadb3ad8dfb9ffb371dc1589fe6576ab540f4" translate="yes" xml:space="preserve">
          <source>Limit the commits output to ones with log message that matches the specified pattern (regular expression). With more than one &lt;code&gt;--grep=&amp;lt;pattern&amp;gt;&lt;/code&gt;, commits whose message matches any of the given patterns are chosen (but see &lt;code&gt;--all-match&lt;/code&gt;).</source>
          <target state="translated">Limite la salida de confirmaciones a aquellas con un mensaje de registro que coincida con el patr&amp;oacute;n especificado (expresi&amp;oacute;n regular). Con m&amp;aacute;s de un &lt;code&gt;--grep=&amp;lt;pattern&amp;gt;&lt;/code&gt; , se eligen las confirmaciones cuyo mensaje coincide con cualquiera de los patrones dados (pero vea &lt;code&gt;--all-match&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="d1b86714045e4612b85a2fa8cf22123bd3513cb6" translate="yes" xml:space="preserve">
          <source>Limit the commits output to ones with reflog entries that match the specified pattern (regular expression). With more than one &lt;code&gt;--grep-reflog&lt;/code&gt;, commits whose reflog message matches any of the given patterns are chosen. It is an error to use this option unless &lt;code&gt;--walk-reflogs&lt;/code&gt; is in use.</source>
          <target state="translated">Limite la salida de confirmaciones a aquellas con entradas de registro que coincidan con el patr&amp;oacute;n especificado (expresi&amp;oacute;n regular). Con m&amp;aacute;s de un &lt;code&gt;--grep-reflog&lt;/code&gt; , se eligen confirmaciones cuyo mensaje de reflog coincida con cualquiera de los patrones dados. Es un error usar esta opci&amp;oacute;n a menos que se &lt;code&gt;--walk-reflogs&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2b5d877818bdb0956a66e366504390cf3fe65b29" translate="yes" xml:space="preserve">
          <source>Limit the commits output to specified time range.</source>
          <target state="translated">Limitar la salida de las confirmaciones a un rango de tiempo especificado.</target>
        </trans-unit>
        <trans-unit id="d8dbf5f629bd3296e9ab1177de95e69729e1d54b" translate="yes" xml:space="preserve">
          <source>Limit the displayed commits to those directly on the ancestry chain between the &amp;ldquo;from&amp;rdquo; and &amp;ldquo;to&amp;rdquo; commits in the given commit range. I.e. only display commits that are ancestor of the &amp;ldquo;to&amp;rdquo; commit and descendants of the &amp;ldquo;from&amp;rdquo; commit.</source>
          <target state="translated">Limite las confirmaciones mostradas a las que est&amp;aacute;n directamente en la cadena de ascendencia entre las confirmaciones &quot;desde&quot; y &quot;hasta&quot; en el rango de confirmaci&amp;oacute;n dado. Es decir, solo muestra las confirmaciones que son antecesoras de la confirmaci&amp;oacute;n &quot;a&quot; y descendientes de la confirmaci&amp;oacute;n &quot;desde&quot;.</target>
        </trans-unit>
        <trans-unit id="ed8c2d4ed1408e7d7da83719bcf77ad7b5896ff9" translate="yes" xml:space="preserve">
          <source>Limit the number of commits imported. Workaround for cases where cvsimport leaks memory.</source>
          <target state="translated">Limitar el número de compromisos importados.Solución para los casos en los que la importación de datos se filtra en la memoria.</target>
        </trans-unit>
        <trans-unit id="1adada65b7a03da88bf0748c36055d961c64b07a" translate="yes" xml:space="preserve">
          <source>Limit the number of commits to output.</source>
          <target state="translated">Limitar el número de compromisos de salida.</target>
        </trans-unit>
        <trans-unit id="38e02fe4379a543b3e47180cba4d6468bec3e601" translate="yes" xml:space="preserve">
          <source>Limit the revisions to show. This can be either a single revision meaning show from the given revision and back, or it can be a range in the form &quot;&lt;code&gt;&amp;lt;from&amp;gt;&lt;/code&gt;..&lt;code&gt;&amp;lt;to&amp;gt;&lt;/code&gt;&quot; to show all revisions between &lt;code&gt;&amp;lt;from&amp;gt;&lt;/code&gt; and back to &lt;code&gt;&amp;lt;to&amp;gt;&lt;/code&gt;. Note, more advanced revision selection can be applied. For a more complete list of ways to spell object names, see &lt;a href=&quot;gitrevisions&quot;&gt;gitrevisions[7]&lt;/a&gt;.</source>
          <target state="translated">Limite las revisiones para mostrar. Puede ser una &amp;uacute;nica revisi&amp;oacute;n que significa mostrar desde la revisi&amp;oacute;n dada y viceversa, o puede ser un rango en la forma &quot; &lt;code&gt;&amp;lt;from&amp;gt;&lt;/code&gt; .. &lt;code&gt;&amp;lt;to&amp;gt;&lt;/code&gt; &quot; para mostrar todas las revisiones entre &lt;code&gt;&amp;lt;from&amp;gt;&lt;/code&gt; y volver a &lt;code&gt;&amp;lt;to&amp;gt;&lt;/code&gt; . Tenga en cuenta que se puede aplicar una selecci&amp;oacute;n de revisi&amp;oacute;n m&amp;aacute;s avanzada. Para obtener una lista m&amp;aacute;s completa de formas de deletrear nombres de objetos, consulte &lt;a href=&quot;gitrevisions&quot;&gt;gitrevisions [7]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="674ff0df4160db3404d979762630ae612e98f156" translate="yes" xml:space="preserve">
          <source>Limit the width of the graph part in --stat output. If set, applies to all commands generating --stat output except format-patch.</source>
          <target state="translated">Limita el ancho de la parte del gráfico en la salida --stat.Si se establece,se aplica a todos los comandos que generan la salida --stat excepto el formato-patch.</target>
        </trans-unit>
        <trans-unit id="29e45322508b52ceb051971d532eab460b3dc7d7" translate="yes" xml:space="preserve">
          <source>Limit to &quot;refs/heads&quot; and &quot;refs/tags&quot;, respectively. These options are not mutually exclusive; when given both, references stored in &quot;refs/heads&quot; and &quot;refs/tags&quot; are displayed.</source>
          <target state="translated">Limítese a &quot;árbitros/cabezas&quot; y &quot;árbitros/etiquetas&quot;,respectivamente.Estas opciones no se excluyen mutuamente;cuando se dan ambas,se muestran las referencias almacenadas en &quot;refs/cabezas&quot; y &quot;refs/etiquetas&quot;.</target>
        </trans-unit>
        <trans-unit id="66b9fb961da3804ca95085a20ace37a86529e6f7" translate="yes" xml:space="preserve">
          <source>Limit to only refs/heads and refs/tags, respectively. These options are &lt;code&gt;not&lt;/code&gt; mutually exclusive; when given both, references stored in refs/heads and refs/tags are displayed.</source>
          <target state="translated">L&amp;iacute;mite a solo referencias / cabezas y referencias / etiquetas, respectivamente. Estas opciones &lt;code&gt;not&lt;/code&gt; se excluyen mutuamente; cuando se dan ambos, se muestran las referencias almacenadas en refs / heads y refs / tags.</target>
        </trans-unit>
        <trans-unit id="a7c04c64ed3f2a9374590c76c50d3b7f1b18e3da" translate="yes" xml:space="preserve">
          <source>Limitations</source>
          <target state="translated">Limitations</target>
        </trans-unit>
        <trans-unit id="e8bb22d887f5d59400be2b36a39e61d714bda7bc" translate="yes" xml:space="preserve">
          <source>Limiting the diff output</source>
          <target state="translated">Limitación de la salida de difusión</target>
        </trans-unit>
        <trans-unit id="b7748eb338af2086cdad1f6af364c3481df64676" translate="yes" xml:space="preserve">
          <source>Limits the number of commits to show to 3.</source>
          <target state="translated">Limita el número de compromisos a mostrar a 3.</target>
        </trans-unit>
        <trans-unit id="efd756293dbb86969a7022bf4157b3145d6076f3" translate="yes" xml:space="preserve">
          <source>Limits the paths affected by the operation.</source>
          <target state="translated">Limita los caminos afectados por la operación.</target>
        </trans-unit>
        <trans-unit id="8375cb461aa1ace8d2ffdda18edb87b333f2f4d1" translate="yes" xml:space="preserve">
          <source>Line numbers count from 1.</source>
          <target state="translated">Los números de línea cuentan desde el 1.</target>
        </trans-unit>
        <trans-unit id="3d9326a0fc6538daba3b0f3096cf5c416812b52b" translate="yes" xml:space="preserve">
          <source>Lines starting with a hash (&quot;&lt;code&gt;#&lt;/code&gt;&quot;) are ignored, so they can be used for comments. Add a backslash (&quot;&lt;code&gt;\&lt;/code&gt;&quot;) to the beginning of the pattern if it starts with a hash.</source>
          <target state="translated">Las l&amp;iacute;neas que comienzan con un hash (&quot; &lt;code&gt;#&lt;/code&gt; &quot;) se ignoran, por lo que pueden usarse para comentarios. Agregue una barra invertida (&quot; &lt;code&gt;\&lt;/code&gt; &quot;) al principio del patr&amp;oacute;n si comienza con un hash.</target>
        </trans-unit>
        <trans-unit id="8e28fd820953d60830c4b1106307e2e0b6872452" translate="yes" xml:space="preserve">
          <source>Linewrap the output by wrapping each line at &lt;code&gt;width&lt;/code&gt;. The first line of each entry is indented by &lt;code&gt;indent1&lt;/code&gt; spaces, and the second and subsequent lines are indented by &lt;code&gt;indent2&lt;/code&gt; spaces. &lt;code&gt;width&lt;/code&gt;, &lt;code&gt;indent1&lt;/code&gt;, and &lt;code&gt;indent2&lt;/code&gt; default to 76, 6 and 9 respectively.</source>
          <target state="translated">Envuelva la salida ajustando cada l&amp;iacute;nea al &lt;code&gt;width&lt;/code&gt; . La primera l&amp;iacute;nea de cada entrada tiene sangr&amp;iacute;a con espacios &lt;code&gt;indent1&lt;/code&gt; , y la segunda l&amp;iacute;nea y las siguientes est&amp;aacute;n sangradas con espacios &lt;code&gt;indent2&lt;/code&gt; . &lt;code&gt;width&lt;/code&gt; , &lt;code&gt;indent1&lt;/code&gt; y &lt;code&gt;indent2&lt;/code&gt; est&amp;aacute;n predeterminados en 76, 6 y 9 respectivamente.</target>
        </trans-unit>
        <trans-unit id="1d1f6a47e210ac264339f2e30472d9fdf4025a54" translate="yes" xml:space="preserve">
          <source>Links and their targets</source>
          <target state="translated">Los enlaces y sus objetivos</target>
        </trans-unit>
        <trans-unit id="7177342122325630102d4a83723d13417535ac19" translate="yes" xml:space="preserve">
          <source>Linus Torvalds originally designed Git to be a user space file system, i.e. the infrastructure to hold files and directories. That ensured the efficiency and speed of Git.</source>
          <target state="translated">Linus Torvalds diseñó originalmente Git para ser un sistema de archivos de espacio de usuario,es decir,la infraestructura para guardar archivos y directorios.Eso aseguró la eficiencia y la velocidad de Git.</target>
        </trans-unit>
        <trans-unit id="9f9879c2ed0b6b8dfd5d9b1ecb4faa0c5584d26d" translate="yes" xml:space="preserve">
          <source>Linus Torvalds, for example, makes new kernel releases by tagging them, then running:</source>
          <target state="translated">Linus Torvalds,por ejemplo,hace nuevos lanzamientos de kernel etiquetándolos,y luego corriendo:</target>
        </trans-unit>
        <trans-unit id="c215fd74e10e91e4728dc7ef559cf830d21a3457" translate="yes" xml:space="preserve">
          <source>Linus&amp;rsquo;s tree will be stored in the remote-tracking branch named origin/master, and can be updated using &lt;a href=&quot;git-fetch&quot;&gt;git-fetch[1]&lt;/a&gt;; you can track other public trees using &lt;a href=&quot;git-remote&quot;&gt;git-remote[1]&lt;/a&gt; to set up a &quot;remote&quot; and &lt;a href=&quot;git-fetch&quot;&gt;git-fetch[1]&lt;/a&gt; to keep them up to date; see &lt;a href=&quot;#repositories-and-branches&quot;&gt;Repositories and Branches&lt;/a&gt;.</source>
          <target state="translated">El &amp;aacute;rbol de Linus se almacenar&amp;aacute; en la rama de seguimiento remoto denominada origin / master y se puede actualizar usando &lt;a href=&quot;git-fetch&quot;&gt;git-fetch [1]&lt;/a&gt; ; puede rastrear otros &amp;aacute;rboles p&amp;uacute;blicos usando &lt;a href=&quot;git-remote&quot;&gt;git-remote [1]&lt;/a&gt; para configurar un &quot;remoto&quot; y &lt;a href=&quot;git-fetch&quot;&gt;git-fetch [1]&lt;/a&gt; para mantenerlos actualizados; ver &lt;a href=&quot;#repositories-and-branches&quot;&gt;Repositorios y Sucursales&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4a79bad3bb798b3bdc01c2a7bbb2df04a2b261bb" translate="yes" xml:space="preserve">
          <source>List (array reference) of feature parameters (if there are any), used also to toggle (enable or disable) given feature.</source>
          <target state="translated">Lista (referencia de la matriz)de los parámetros de las características (si los hay),utilizada también para conmutar (activar o desactivar)una característica determinada.</target>
        </trans-unit>
        <trans-unit id="7ee03188f58cdb7509c4f88e1a300f564da6d9fa" translate="yes" xml:space="preserve">
          <source>List all attributes that are associated with the specified paths. If this option is used, then &lt;code&gt;unspecified&lt;/code&gt; attributes will not be included in the output.</source>
          <target state="translated">Enumere todos los atributos que est&amp;aacute;n asociados con las rutas especificadas. Si se utiliza esta opci&amp;oacute;n, los atributos no &lt;code&gt;unspecified&lt;/code&gt; no se incluir&amp;aacute;n en la salida.</target>
        </trans-unit>
        <trans-unit id="250839942391006b259bdb87bdef885727a6f6a9" translate="yes" xml:space="preserve">
          <source>List all available configuration variables. This is a short summary of the list in &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;.</source>
          <target state="translated">Enumere todas las variables de configuraci&amp;oacute;n disponibles. Este es un breve resumen de la lista en &lt;a href=&quot;git-config&quot;&gt;git-config [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="12ac07106316dd6381b9d3b75b7cd7d028c9fa93" translate="yes" xml:space="preserve">
          <source>List all commits reachable from all refs</source>
          <target state="translated">Enumera todos los compromisos alcanzables de todos los árbitros</target>
        </trans-unit>
        <trans-unit id="dca598d76b2fd502e68ee09810f65324e1da32ae" translate="yes" xml:space="preserve">
          <source>List all tags (lightweight and annotated) in given repository.</source>
          <target state="translated">Enumere todas las etiquetas (ligeras y anotadas)en un repositorio determinado.</target>
        </trans-unit>
        <trans-unit id="df1447e22cac81b01f2aee49d9517212423de9a9" translate="yes" xml:space="preserve">
          <source>List all variables set in config file, along with their values.</source>
          <target state="translated">Listar todas las variables establecidas en el archivo de configuración,junto con sus valores.</target>
        </trans-unit>
        <trans-unit id="aa1b92c795a51cb41c1ee54087151d51eda95116" translate="yes" xml:space="preserve">
          <source>List both remote-tracking branches and local branches. Combine with &lt;code&gt;--list&lt;/code&gt; to match optional pattern(s).</source>
          <target state="translated">Enumere tanto las sucursales de seguimiento remoto como las sucursales locales. Combine con &lt;code&gt;--list&lt;/code&gt; para hacer coincidir los patrones opcionales.</target>
        </trans-unit>
        <trans-unit id="670ea777adabe92ea2a21ddec9e8062878d9ce68" translate="yes" xml:space="preserve">
          <source>List branches. With optional &lt;code&gt;&amp;lt;pattern&amp;gt;...&lt;/code&gt;, e.g. &lt;code&gt;git
branch --list 'maint-*'&lt;/code&gt;, list only the branches that match the pattern(s).</source>
          <target state="translated">Lista de ramas. Con &lt;code&gt;&amp;lt;pattern&amp;gt;...&lt;/code&gt; opcional ... , por ejemplo, &lt;code&gt;git branch --list 'maint-*'&lt;/code&gt; , enumera solo las ramas que coinciden con el patr&amp;oacute;n (s).</target>
        </trans-unit>
        <trans-unit id="ecd6ee4f3b1cdf8c4e62426b401b6921926e6641" translate="yes" xml:space="preserve">
          <source>List commands by group. This is an internal/experimental option and may change or be removed in the future. Supported groups are: builtins, parseopt (builtin commands that use parse-options), main (all commands in libexec directory), others (all other commands in &lt;code&gt;$PATH&lt;/code&gt; that have git- prefix), list-&amp;lt;category&amp;gt; (see categories in command-list.txt), nohelpers (exclude helper commands), alias and config (retrieve command list from config variable completion.commands)</source>
          <target state="translated">Enumere los comandos por grupo. Esta es una opci&amp;oacute;n interna / experimental y puede cambiar o eliminarse en el futuro. Los grupos admitidos son: builtins, parseopt (comandos integrados que usan parse-options), main (todos los comandos en el directorio libexec), otros (todos los dem&amp;aacute;s comandos en &lt;code&gt;$PATH&lt;/code&gt; que tienen git- prefix), list- &amp;lt;category&amp;gt; (ver categor&amp;iacute;as en command-list.txt), nohelpers (excluir comandos de ayuda), alias y config (recuperar la lista de comandos de la variable de configuraci&amp;oacute;n de comandos de completado)</target>
        </trans-unit>
        <trans-unit id="238ed7681a7fd585fe1d585aba4d3e4521202ffa" translate="yes" xml:space="preserve">
          <source>List commits that are reachable by following the &lt;code&gt;parent&lt;/code&gt; links from the given commit(s), but exclude commits that are reachable from the one(s) given with a &lt;code&gt;^&lt;/code&gt; in front of them. The output is given in reverse chronological order by default.</source>
          <target state="translated">Enumere las confirmaciones a las que se puede acceder siguiendo los enlaces &lt;code&gt;parent&lt;/code&gt; de las confirmaciones dadas, pero excluya las confirmaciones que son accesibles de las que se dan con un &lt;code&gt;^&lt;/code&gt; delante de ellas. La salida se da en orden cronol&amp;oacute;gico inverso de forma predeterminada.</target>
        </trans-unit>
        <trans-unit id="adfacb775267bd93896cdbdf525c103ac26c16d4" translate="yes" xml:space="preserve">
          <source>List details of each worktree. The main worktree is listed first, followed by each of the linked worktrees. The output details include if the worktree is bare, the revision currently checked out, and the branch currently checked out (or &lt;code&gt;detached HEAD&lt;/code&gt; if none).</source>
          <target state="translated">Enumere los detalles de cada &amp;aacute;rbol de trabajo. El &amp;aacute;rbol de trabajo principal se enumera primero, seguido de cada uno de los &amp;aacute;rboles de trabajo vinculados. Los detalles de salida incluyen si el &amp;aacute;rbol de trabajo est&amp;aacute; vac&amp;iacute;o, la revisi&amp;oacute;n actualmente extra&amp;iacute;da y la rama actualmente extra&amp;iacute;da (o &lt;code&gt;detached HEAD&lt;/code&gt; si no hay ninguno).</target>
        </trans-unit>
        <trans-unit id="1481dab663abae987b5437270fc0152b6258984f" translate="yes" xml:space="preserve">
          <source>List of Git base URLs. These URLs are used to generate URLs describing from where to fetch a project, which are shown on project summary page. The full fetch URL is &quot;&lt;code&gt;$git_base_url/$project&lt;/code&gt;&quot;, for each element of this list. You can set up multiple base URLs (for example one for &lt;code&gt;git://&lt;/code&gt; protocol, and one for &lt;code&gt;http://&lt;/code&gt; protocol).</source>
          <target state="translated">Lista de URL base de Git. Estas URL se utilizan para generar URL que describen desde d&amp;oacute;nde obtener un proyecto, que se muestran en la p&amp;aacute;gina de resumen del proyecto. La URL de recuperaci&amp;oacute;n completa es &quot; &lt;code&gt;$git_base_url/$project&lt;/code&gt; &quot;, para cada elemento de esta lista. Puede configurar varias URL base (por ejemplo, una para el protocolo &lt;code&gt;git://&lt;/code&gt; y otra para el protocolo &lt;code&gt;http://&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="e9453e698a4a15232ec2c038afd4c298aede850c" translate="yes" xml:space="preserve">
          <source>List of URIs of stylesheets (relative to the base URI of a page). You might specify more than one stylesheet, for example to use &quot;gitweb.css&quot; as base with site specific modifications in a separate stylesheet to make it easier to upgrade gitweb. For example, you can add a &lt;code&gt;site&lt;/code&gt; stylesheet by putting</source>
          <target state="translated">Lista de URI de hojas de estilo (relativo al URI base de una p&amp;aacute;gina). Puede especificar m&amp;aacute;s de una hoja de estilo, por ejemplo, para usar &quot;gitweb.css&quot; como base con modificaciones espec&amp;iacute;ficas del sitio en una hoja de estilo separada para facilitar la actualizaci&amp;oacute;n de gitweb. Por ejemplo, puede agregar una hoja de estilo de &lt;code&gt;site&lt;/code&gt; colocando</target>
        </trans-unit>
        <trans-unit id="d9ab3387c39e123d7aac2edb253dcdba7080f753" translate="yes" xml:space="preserve">
          <source>List of additional directories under &quot;refs&quot; which are going to be used as branch refs. For example if you have a gerrit setup where all branches under refs/heads/ are official, push-after-review ones and branches under refs/sandbox/, refs/wip and refs/other are user ones where permissions are much wider, then you might want to set this variable as follows:</source>
          <target state="translated">Lista de directorios adicionales bajo &quot;refs&quot; que se van a utilizar como refs de la sucursal.Por ejemplo,si tiene una configuración gerrit en la que todas las ramas bajo &quot;refs/heads/&quot; son oficiales,las de &quot;push-after-review&quot; y las ramas bajo &quot;refs/sandbox/&quot;,&quot;refs/wip&quot; y &quot;refs/other&quot; son de usuario y los permisos son mucho más amplios,entonces puede que quiera configurar esta variable de la siguiente manera:</target>
        </trans-unit>
        <trans-unit id="c919f43c88ec5761218ece7f29ac150fc5c1298f" translate="yes" xml:space="preserve">
          <source>List of branches to be imported when branch detection is enabled. Each entry should be a pair of branch names separated by a colon (:). This example declares that both branchA and branchB were created from main:</source>
          <target state="translated">Lista de sucursales que se importarán cuando se active la detección de sucursales.Cada entrada debe ser un par de nombres de ramas separados por dos puntos (:).Este ejemplo declara que tanto la rama A como la rama B fueron creadas desde la principal:</target>
        </trans-unit>
        <trans-unit id="3d6057539fc43b4e5580b21aa940b705e61341be" translate="yes" xml:space="preserve">
          <source>List of p4 labels to ignore. This is built automatically as unimportable labels are discovered.</source>
          <target state="translated">Lista de etiquetas p4 para ignorar.Se construye automáticamente a medida que se descubren las etiquetas no importables.</target>
        </trans-unit>
        <trans-unit id="ed979d0137e2b09484f09056901ac3efce874117" translate="yes" xml:space="preserve">
          <source>List only commits on the respective side of a symmetric difference, i.e. only those which would be marked &lt;code&gt;&amp;lt;&lt;/code&gt; resp. &lt;code&gt;&amp;gt;&lt;/code&gt; by &lt;code&gt;--left-right&lt;/code&gt;.</source>
          <target state="translated">La lista solo se compromete en el lado respectivo de una diferencia sim&amp;eacute;trica, es decir, solo aquellos que se marcar&amp;iacute;an &lt;code&gt;&amp;lt;&lt;/code&gt; resp. &lt;code&gt;&amp;gt;&lt;/code&gt; por &lt;code&gt;--left-right&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="db38d2130aa4774e0a5e01e813cbe87b286b5c58" translate="yes" xml:space="preserve">
          <source>List only filenames (instead of the &quot;long&quot; output), one per line.</source>
          <target state="translated">Enumere sólo los nombres de los archivos (en lugar de la salida &quot;larga&quot;),uno por línea.</target>
        </trans-unit>
        <trans-unit id="ca0ba00456e1892ce61ce3c77aa65cb5194d4e6c" translate="yes" xml:space="preserve">
          <source>List or delete (if used with -d) the remote-tracking branches. Combine with &lt;code&gt;--list&lt;/code&gt; to match the optional pattern(s).</source>
          <target state="translated">Enumere o elimine (si se usa con -d) las ramas de seguimiento remoto. Combine con &lt;code&gt;--list&lt;/code&gt; para que coincida con los patrones opcionales.</target>
        </trans-unit>
        <trans-unit id="22eb51b821276ed4742fd46da8d914f3eb506ca1" translate="yes" xml:space="preserve">
          <source>List output format</source>
          <target state="translated">Formato de salida de la lista</target>
        </trans-unit>
        <trans-unit id="961866b18d2006e9e2f1c57af615530c0dcb0176" translate="yes" xml:space="preserve">
          <source>List references in a local repository</source>
          <target state="translated">Lista de referencias en un depósito local</target>
        </trans-unit>
        <trans-unit id="7a309b311eeb5429dbbc4c270383e0c9240ea7dd" translate="yes" xml:space="preserve">
          <source>List references in a remote repository</source>
          <target state="translated">Lista de referencias en un depósito remoto</target>
        </trans-unit>
        <trans-unit id="c3c4b04779710ca49a121ec3b626bb207fe0cc86" translate="yes" xml:space="preserve">
          <source>List replace refs for objects that match the given pattern (or all if no pattern is given). Typing &quot;git replace&quot; without arguments, also lists all replace refs.</source>
          <target state="translated">Lista de árbitros de reemplazo para los objetos que coinciden con el patrón dado (o todos si no se da un patrón).Escribiendo &quot;git replace&quot; sin argumentos,también lista todos los refs de reemplazo.</target>
        </trans-unit>
        <trans-unit id="dd864736379915e26071e39557a37c9a699c5cd9" translate="yes" xml:space="preserve">
          <source>List some tags in a table with unequal column widths:</source>
          <target state="translated">Enumera algunas etiquetas en una tabla con anchos de columna desiguales:</target>
        </trans-unit>
        <trans-unit id="c3a7e0023c585da8fc00add926f4e7fe3e4bed2d" translate="yes" xml:space="preserve">
          <source>List tags. With optional &lt;code&gt;&amp;lt;pattern&amp;gt;...&lt;/code&gt;, e.g. &lt;code&gt;git tag --list
'v-*'&lt;/code&gt;, list only the tags that match the pattern(s).</source>
          <target state="translated">Listar etiquetas. Con &lt;code&gt;&amp;lt;pattern&amp;gt;...&lt;/code&gt; opcional ... , por ejemplo, &lt;code&gt;git tag --list 'v-*'&lt;/code&gt; , enumere solo las etiquetas que coinciden con el patr&amp;oacute;n (s).</target>
        </trans-unit>
        <trans-unit id="42f93b25d56793afc3463e924a37b81b3e45f73d" translate="yes" xml:space="preserve">
          <source>List the GIT_* environment variables that are local to the repository (e.g. GIT_DIR or GIT_WORK_TREE, but not GIT_EDITOR). Only the names of the variables are listed, not their value, even if they are set.</source>
          <target state="translated">Enumere las variables de entorno GIT_*que son locales al repositorio (por ejemplo,GIT_DIR o GIT_WORK_TREE,pero no GIT_EDITOR).Sólo se listan los nombres de las variables,no su valor,aunque estén establecidas.</target>
        </trans-unit>
        <trans-unit id="dc410162c15e0c2fc959648b2d515436ff66231c" translate="yes" xml:space="preserve">
          <source>List the contents of a tree object</source>
          <target state="translated">Enumerar el contenido de un objeto de árbol</target>
        </trans-unit>
        <trans-unit id="c77a61ab930b102983b7633429f2e1c89c8a648a" translate="yes" xml:space="preserve">
          <source>List the notes object for a given object. If no object is given, show a list of all note objects and the objects they annotate (in the format &quot;&amp;lt;note object&amp;gt; &amp;lt;annotated object&amp;gt;&quot;). This is the default subcommand if no subcommand is given.</source>
          <target state="translated">Enumere el objeto de notas para un objeto dado. Si no se proporciona ning&amp;uacute;n objeto, muestre una lista de todos los objetos de nota y los objetos que anotan (en el formato &quot;&amp;lt;objeto de nota&amp;gt; &amp;lt;objeto anotado&amp;gt;&quot;). Este es el subcomando predeterminado si no se proporciona ning&amp;uacute;n subcomando.</target>
        </trans-unit>
        <trans-unit id="160440cac4234691b237108179766c8ac388a3dd" translate="yes" xml:space="preserve">
          <source>List the stash entries that you currently have. Each &lt;code&gt;stash entry&lt;/code&gt; is listed with its name (e.g. &lt;code&gt;stash@{0}&lt;/code&gt; is the latest entry, &lt;code&gt;stash@{1}&lt;/code&gt; is the one before, etc.), the name of the branch that was current when the entry was made, and a short description of the commit the entry was based on.</source>
          <target state="translated">Enumere las entradas de alijo que tiene actualmente. Cada &lt;code&gt;stash entry&lt;/code&gt; se enumera con su nombre (por ejemplo, &lt;code&gt;stash@{0}&lt;/code&gt; es la entrada m&amp;aacute;s reciente, &lt;code&gt;stash@{1}&lt;/code&gt; es la anterior, etc.), el nombre de la rama que estaba vigente cuando se realiz&amp;oacute; la entrada y un breve descripci&amp;oacute;n de la confirmaci&amp;oacute;n en la que se bas&amp;oacute; la entrada.</target>
        </trans-unit>
        <trans-unit id="0928a18c981cee8dd1bbd962ad11b79b09b49f73" translate="yes" xml:space="preserve">
          <source>List, create, or delete branches</source>
          <target state="translated">Listar,crear o eliminar sucursales</target>
        </trans-unit>
        <trans-unit id="7d888e358c6ef40ec2a0a8a674979b45cd6d1cf4" translate="yes" xml:space="preserve">
          <source>Listed below are options that control the formatting of diff output. Some of them are specific to &lt;a href=&quot;git-rev-list&quot;&gt;git-rev-list[1]&lt;/a&gt;, however other diff options may be given. See &lt;a href=&quot;git-diff-files&quot;&gt;git-diff-files[1]&lt;/a&gt; for more options.</source>
          <target state="translated">A continuaci&amp;oacute;n se enumeran las opciones que controlan el formato de la salida de diferencias. Algunos de ellos son espec&amp;iacute;ficos de &lt;a href=&quot;git-rev-list&quot;&gt;git-rev-list [1]&lt;/a&gt; , sin embargo, se pueden dar otras opciones de diff. Consulte &lt;a href=&quot;git-diff-files&quot;&gt;git-diff-files [1]&lt;/a&gt; para obtener m&amp;aacute;s opciones.</target>
        </trans-unit>
        <trans-unit id="3248fa00aea630b8bbaf0b4709f9f26882639bdc" translate="yes" xml:space="preserve">
          <source>Listen on a specific IP address or hostname. IP addresses can be either an IPv4 address or an IPv6 address if supported. If IPv6 is not supported, then --listen=hostname is also not supported and --listen must be given an IPv4 address. Can be given more than once. Incompatible with &lt;code&gt;--inetd&lt;/code&gt; option.</source>
          <target state="translated">Escuche en una direcci&amp;oacute;n IP o nombre de host espec&amp;iacute;ficos. Las direcciones IP pueden ser una direcci&amp;oacute;n IPv4 o una direcci&amp;oacute;n IPv6 si se admiten. Si no se admite IPv6, entonces --listen = hostname tampoco es compatible y --listen debe recibir una direcci&amp;oacute;n IPv4. Puede administrarse m&amp;aacute;s de una vez. Incompatible con la opci&amp;oacute;n &lt;code&gt;--inetd&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4f53ff7586b49256325ec58801bfe143f18e21e3" translate="yes" xml:space="preserve">
          <source>Listen on an alternative port. Incompatible with &lt;code&gt;--inetd&lt;/code&gt; option.</source>
          <target state="translated">Escuche en un puerto alternativo. Incompatible con la opci&amp;oacute;n &lt;code&gt;--inetd&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3e35805a9773260286dfbc09d02caaf5994dc0ce" translate="yes" xml:space="preserve">
          <source>Listing a single attribute:</source>
          <target state="translated">Enumerando un solo atributo:</target>
        </trans-unit>
        <trans-unit id="69751d90f1fec1736a7673316bf3b759c5271c7d" translate="yes" xml:space="preserve">
          <source>Listing all attributes for a file:</source>
          <target state="translated">Listado de todos los atributos de un archivo:</target>
        </trans-unit>
        <trans-unit id="e231fe1cc3d8844bfddb76169e22179c8767ce9e" translate="yes" xml:space="preserve">
          <source>Listing an attribute for multiple files:</source>
          <target state="translated">Listado de un atributo para múltiples archivos:</target>
        </trans-unit>
        <trans-unit id="d1d9eec0e1bd38bd76cb67feb04b08b5d78c11bd" translate="yes" xml:space="preserve">
          <source>Listing branches from a specific remote</source>
          <target state="translated">La lista de sucursales de una remota específica</target>
        </trans-unit>
        <trans-unit id="14162152c45d26fb9527c9f0660bef886294e5bf" translate="yes" xml:space="preserve">
          <source>Listing multiple attributes for a file:</source>
          <target state="translated">Listado de múltiples atributos para un archivo:</target>
        </trans-unit>
        <trans-unit id="540f872616da666be00fd2f7f78a7ae984c11b9a" translate="yes" xml:space="preserve">
          <source>Lists all local or all remote-tracking branches in given repository.</source>
          <target state="translated">Enumera todas las ramas de rastreo local o remoto en un repositorio determinado.</target>
        </trans-unit>
        <trans-unit id="b5500d120a9a13cb3af42448653e0cde10752de4" translate="yes" xml:space="preserve">
          <source>Lists commit objects in reverse chronological order</source>
          <target state="translated">Las listas comprometen los objetos en orden cronológico inverso</target>
        </trans-unit>
        <trans-unit id="6385084e9b2c3e78376900259ba28376e3a28618" translate="yes" xml:space="preserve">
          <source>Lists the available Git repositories. This is the default command if no repository is specified in the URL.</source>
          <target state="translated">Enumera los depósitos disponibles de Git.Este es el comando por defecto si no se especifica ningún repositorio en la URL.</target>
        </trans-unit>
        <trans-unit id="9438685d87876d6c82356bf9b864c1c6136c1266" translate="yes" xml:space="preserve">
          <source>Lists the capabilities of the helper, one per line, ending with a blank line. Each capability may be preceded with &lt;code&gt;*&lt;/code&gt;, which marks them mandatory for Git versions using the remote helper to understand. Any unknown mandatory capability is a fatal error.</source>
          <target state="translated">Enumera las capacidades del ayudante, una por l&amp;iacute;nea, terminando con una l&amp;iacute;nea en blanco. Cada capacidad puede ir precedida de &lt;code&gt;*&lt;/code&gt; , lo que las marca obligatorias para las versiones de Git que utilizan el asistente remoto para comprenderlas. Cualquier capacidad obligatoria desconocida es un error fatal.</target>
        </trans-unit>
        <trans-unit id="8c594a1bf48edecf6065890a7f89cc7fa404495f" translate="yes" xml:space="preserve">
          <source>Lists the contents of a given tree object, like what &quot;/bin/ls -a&quot; does in the current working directory. Note that:</source>
          <target state="translated">Enumera el contenido de un objeto de árbol dado,como lo que hace &quot;/bin/ls -a&quot; en el directorio de trabajo actual.Fíjese en eso:</target>
        </trans-unit>
        <trans-unit id="9cc5eb61d77cd46774cb42ac22301b7d413d58c5" translate="yes" xml:space="preserve">
          <source>Lists the properties stored in the Subversion repository about a given file or directory. Use -r/--revision to refer to a specific Subversion revision.</source>
          <target state="translated">Enumera las propiedades almacenadas en el repositorio de Subversion sobre un archivo o directorio dado.Use -r/--revision para referirse a una revisión específica de Subversion.</target>
        </trans-unit>
        <trans-unit id="11c5aa2ca7f7c3e091142bb69f047bf1ca338d7f" translate="yes" xml:space="preserve">
          <source>Lists the references defined in the bundle. If followed by a list of references, only references matching those given are printed out.</source>
          <target state="translated">Enumera las referencias definidas en el paquete.Si va seguido de una lista de referencias,sólo se imprimen las referencias que coinciden con las dadas.</target>
        </trans-unit>
        <trans-unit id="cb27642bee7df675e576f1467eabd36ebf236a0c" translate="yes" xml:space="preserve">
          <source>Lists the refs, one per line, in the format &quot;&amp;lt;value&amp;gt; &amp;lt;name&amp;gt; [&amp;lt;attr&amp;gt; &amp;hellip;​]&quot;. The value may be a hex sha1 hash, &quot;@&amp;lt;dest&amp;gt;&quot; for a symref, or &quot;?&quot; to indicate that the helper could not get the value of the ref. A space-separated list of attributes follows the name; unrecognized attributes are ignored. The list ends with a blank line.</source>
          <target state="translated">Enumera las referencias, una por l&amp;iacute;nea, en el formato &quot;&amp;lt;valor&amp;gt; &amp;lt;nombre&amp;gt; [&amp;lt;attr&amp;gt;&amp;hellip;]&quot;. El valor puede ser un hash sha1 hexadecimal, &quot;@ &amp;lt;dest&amp;gt;&quot; para un symref o &quot;?&quot; para indicar que el ayudante no pudo obtener el valor de la ref. Una lista de atributos separados por espacios sigue al nombre; los atributos no reconocidos se ignoran. La lista termina con una l&amp;iacute;nea en blanco.</target>
        </trans-unit>
        <trans-unit id="8cf165480241df10f979b6b7157595e5407c755f" translate="yes" xml:space="preserve">
          <source>Literal percent sign.</source>
          <target state="translated">Signo de porcentaje literal.</target>
        </trans-unit>
        <trans-unit id="c9b025ce8a30fb92786ef26cc44501e09df585de" translate="yes" xml:space="preserve">
          <source>Literal space in command or argument.</source>
          <target state="translated">Espacio literal en el mando o en el argumento.</target>
        </trans-unit>
        <trans-unit id="3e47004eca06847317d03882ea01098236feca24" translate="yes" xml:space="preserve">
          <source>Loads annotations as described above and automatically scrolls the view to center on line &lt;code&gt;100&lt;/code&gt;.</source>
          <target state="translated">Carga anotaciones como se describe arriba y autom&amp;aacute;ticamente desplaza la vista al centro de la l&amp;iacute;nea &lt;code&gt;100&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f638d2718f9a7fa3228a4c22ea27ab0cb7ce0ed8" translate="yes" xml:space="preserve">
          <source>Local directory</source>
          <target state="translated">Directorio local</target>
        </trans-unit>
        <trans-unit id="83cd95e5e26d810cf34fa10fd02190221225a995" translate="yes" xml:space="preserve">
          <source>Locate a good region of the object graph in a damaged repository</source>
          <target state="translated">Localizar una buena región del gráfico del objeto en un repositorio dañado</target>
        </trans-unit>
        <trans-unit id="c6b89ef8cfe5b4e0d5f71a9018f7c23272508e1d" translate="yes" xml:space="preserve">
          <source>Location of repositories</source>
          <target state="translated">Ubicación de los depósitos</target>
        </trans-unit>
        <trans-unit id="a8464429b3dd8a54d4c3a8d0aaf7809c3b93d077" translate="yes" xml:space="preserve">
          <source>Locations of Marks Files</source>
          <target state="translated">Ubicación de los archivos de las marcas</target>
        </trans-unit>
        <trans-unit id="747742f75a08750185466d70d49a66f609262970" translate="yes" xml:space="preserve">
          <source>Locations of the common system-wide configuration file, the fallback system-wide configuration file and the per-instance configuration file are defined at compile time using build-time Makefile configuration variables, respectively &lt;code&gt;GITWEB_CONFIG_COMMON&lt;/code&gt;, &lt;code&gt;GITWEB_CONFIG_SYSTEM&lt;/code&gt; and &lt;code&gt;GITWEB_CONFIG&lt;/code&gt;.</source>
          <target state="translated">Las ubicaciones del archivo de configuraci&amp;oacute;n com&amp;uacute;n de todo el sistema, el archivo de configuraci&amp;oacute;n de respaldo de todo el sistema y el archivo de configuraci&amp;oacute;n por instancia se definen en tiempo de compilaci&amp;oacute;n utilizando variables de configuraci&amp;oacute;n Makefile en tiempo de compilaci&amp;oacute;n, respectivamente &lt;code&gt;GITWEB_CONFIG_COMMON&lt;/code&gt; , &lt;code&gt;GITWEB_CONFIG_SYSTEM&lt;/code&gt; y &lt;code&gt;GITWEB_CONFIG&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ff8e7c6671e74ff8d9e440b7a275b6b3047a92bf" translate="yes" xml:space="preserve">
          <source>Log details about the incoming connections and requested files.</source>
          <target state="translated">Registra los detalles sobre las conexiones entrantes y los archivos solicitados.</target>
        </trans-unit>
        <trans-unit id="c1bbca864796e717c6563546ee8bb0273fbae9ac" translate="yes" xml:space="preserve">
          <source>Logging updates</source>
          <target state="translated">Registro de actualizaciones</target>
        </trans-unit>
        <trans-unit id="e76f4d6fb1700b21a7cf7fc7a62d7a34c7014ae2" translate="yes" xml:space="preserve">
          <source>Long Running Filter Process</source>
          <target state="translated">Proceso de filtrado de larga duración</target>
        </trans-unit>
        <trans-unit id="555712d9829e6328a9b7d5ec70facbda745fb9b3" translate="yes" xml:space="preserve">
          <source>Look at the diffs from each branch. &lt;code&gt;git log --merge -p &amp;lt;path&amp;gt;&lt;/code&gt; will show diffs first for the &lt;code&gt;HEAD&lt;/code&gt; version and then the &lt;code&gt;MERGE_HEAD&lt;/code&gt; version.</source>
          <target state="translated">Mira las diferencias de cada rama. &lt;code&gt;git log --merge -p &amp;lt;path&amp;gt;&lt;/code&gt; mostrar&amp;aacute; las diferencias primero para la versi&amp;oacute;n &lt;code&gt;HEAD&lt;/code&gt; y luego para la versi&amp;oacute;n &lt;code&gt;MERGE_HEAD&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a326ab540e0d9536d53dbc94d57cb0c25e24d9a1" translate="yes" xml:space="preserve">
          <source>Look at the diffs. &lt;code&gt;git diff&lt;/code&gt; will show a three-way diff, highlighting changes from both the &lt;code&gt;HEAD&lt;/code&gt; and &lt;code&gt;MERGE_HEAD&lt;/code&gt; versions.</source>
          <target state="translated">Mira las diferencias. &lt;code&gt;git diff&lt;/code&gt; mostrar&amp;aacute; un diff de tres v&amp;iacute;as, resaltando los cambios de las versiones &lt;code&gt;HEAD&lt;/code&gt; y &lt;code&gt;MERGE_HEAD&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f8c63749f2ae2fa24fa7ef48c360ef59f66a1f48" translate="yes" xml:space="preserve">
          <source>Look at the originals. &lt;code&gt;git show :1:filename&lt;/code&gt; shows the common ancestor, &lt;code&gt;git show :2:filename&lt;/code&gt; shows the &lt;code&gt;HEAD&lt;/code&gt; version, and &lt;code&gt;git show :3:filename&lt;/code&gt; shows the &lt;code&gt;MERGE_HEAD&lt;/code&gt; version.</source>
          <target state="translated">Mira los originales. &lt;code&gt;git show :1:filename&lt;/code&gt; muestra el ancestro com&amp;uacute;n, &lt;code&gt;git show :2:filename&lt;/code&gt; muestra la versi&amp;oacute;n &lt;code&gt;HEAD&lt;/code&gt; y &lt;code&gt;git show :3:filename&lt;/code&gt; muestra la versi&amp;oacute;n &lt;code&gt;MERGE_HEAD&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6a423d84e076a3272fdc685127299ea63ea761ac" translate="yes" xml:space="preserve">
          <source>Look for a fix instead of a regression in the code</source>
          <target state="translated">Busca una solución en lugar de una regresión en el código</target>
        </trans-unit>
        <trans-unit id="4ab23275475ac09a44d78ac861e7af3c95082023" translate="yes" xml:space="preserve">
          <source>Look for attributes in .gitattributes files in the working tree as well (see &lt;a href=&quot;#ATTRIBUTES&quot;&gt;ATTRIBUTES&lt;/a&gt;).</source>
          <target state="translated">Busque atributos en los archivos .gitattributes en el &amp;aacute;rbol de trabajo tambi&amp;eacute;n (consulte &lt;a href=&quot;#ATTRIBUTES&quot;&gt;ATRIBUTOS&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="5e41023ffb67a9b868c13a5cdc624ea0d794092d" translate="yes" xml:space="preserve">
          <source>Look for differences that change the number of occurrences of the specified object. Similar to &lt;code&gt;-S&lt;/code&gt;, just the argument is different in that it doesn&amp;rsquo;t search for a specific string but for a specific object id.</source>
          <target state="translated">Busque diferencias que cambien el n&amp;uacute;mero de apariciones del objeto especificado. Similar a &lt;code&gt;-S&lt;/code&gt; , solo el argumento es diferente en que no busca una cadena espec&amp;iacute;fica sino una identificaci&amp;oacute;n de objeto espec&amp;iacute;fica.</target>
        </trans-unit>
        <trans-unit id="a838d092d782360d96378f1e4ff8a0b5fffd060f" translate="yes" xml:space="preserve">
          <source>Look for differences that change the number of occurrences of the specified string (i.e. addition/deletion) in a file. Intended for the scripter&amp;rsquo;s use.</source>
          <target state="translated">Busque diferencias que cambien el n&amp;uacute;mero de apariciones de la cadena especificada (es decir, adici&amp;oacute;n / eliminaci&amp;oacute;n) en un archivo. Destinado al uso del guionista.</target>
        </trans-unit>
        <trans-unit id="b8df136f2384d637ef409fc2baddd2b9dce73992" translate="yes" xml:space="preserve">
          <source>Look for differences whose patch text contains added/removed lines that match &amp;lt;regex&amp;gt;.</source>
          <target state="translated">Busque diferencias cuyo texto de parche contenga l&amp;iacute;neas agregadas / eliminadas que coincidan con &amp;lt;regex&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="4cef9adbc5be0f5f01b5c2739071b69091cb4a32" translate="yes" xml:space="preserve">
          <source>Look for specified patterns in the tracked files in the work tree, blobs registered in the index file, or blobs in given tree objects. Patterns are lists of one or more search expressions separated by newline characters. An empty string as search expression matches all lines.</source>
          <target state="translated">Busque patrones específicos en los archivos de seguimiento del árbol de trabajo,las manchas registradas en el archivo de índice o las manchas en determinados objetos del árbol.Los patrones son listas de una o más expresiones de búsqueda separadas por caracteres de nueva línea.Una cadena vacía como expresión de búsqueda coincide con todas las líneas.</target>
        </trans-unit>
        <trans-unit id="07448c29252081320f670b2265de0e9cba50a292" translate="yes" xml:space="preserve">
          <source>Look up layout mode using configuration variable column.&amp;lt;name&amp;gt; and column.ui.</source>
          <target state="translated">Busque el modo de dise&amp;ntilde;o utilizando la variable de configuraci&amp;oacute;n column. &amp;lt;nombre&amp;gt; y column.ui.</target>
        </trans-unit>
        <trans-unit id="b62eefc27e1aeffa75b2d4761547bc2b8bc497bd" translate="yes" xml:space="preserve">
          <source>Looks at the current index and checks to see if merges or updates are needed by checking stat() information.</source>
          <target state="translated">Mira el índice actual y comprueba si se necesitan fusiones o actualizaciones comprobando la información stat().</target>
        </trans-unit>
        <trans-unit id="4b7876b6a8ad520457ce71bfe745148e3c567edb" translate="yes" xml:space="preserve">
          <source>Looks for &lt;code&gt;solution&lt;/code&gt;, excluding files in &lt;code&gt;Documentation&lt;/code&gt;.</source>
          <target state="translated">Busca una &lt;code&gt;solution&lt;/code&gt; , excluyendo archivos en la &lt;code&gt;Documentation&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2f3233017974f60253fdf12d744b51a535433787" translate="yes" xml:space="preserve">
          <source>Looks for &lt;code&gt;time_t&lt;/code&gt; in all tracked .c and .h files in the working directory and its subdirectories.</source>
          <target state="translated">Busca &lt;code&gt;time_t&lt;/code&gt; en todos los archivos .cy .h rastreados en el directorio de trabajo y sus subdirectorios.</target>
        </trans-unit>
        <trans-unit id="558837c842e106c2ed3e4e9a131c3a7442c122b9" translate="yes" xml:space="preserve">
          <source>Looks for a line that has &lt;code&gt;#define&lt;/code&gt; and either &lt;code&gt;MAX_PATH&lt;/code&gt; or &lt;code&gt;PATH_MAX&lt;/code&gt;.</source>
          <target state="translated">Busca una l&amp;iacute;nea que tenga &lt;code&gt;#define&lt;/code&gt; y &lt;code&gt;MAX_PATH&lt;/code&gt; o &lt;code&gt;PATH_MAX&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="432adcaf916374b14ccc5f4491d7cd8a1e3d3e44" translate="yes" xml:space="preserve">
          <source>Looks for a line that has &lt;code&gt;NODE&lt;/code&gt; or &lt;code&gt;Unexpected&lt;/code&gt; in files that have lines that match both.</source>
          <target state="translated">Busca una l&amp;iacute;nea que tenga &lt;code&gt;NODE&lt;/code&gt; o &lt;code&gt;Unexpected&lt;/code&gt; en archivos que tengan l&amp;iacute;neas que coincidan con ambos.</target>
        </trans-unit>
        <trans-unit id="b11d66d44e8db145700e0edb6375620b652f740a" translate="yes" xml:space="preserve">
          <source>Low-level commands (plumbing)</source>
          <target state="translated">Comandos de bajo nivel (plomería)</target>
        </trans-unit>
        <trans-unit id="0ffc3dae4e51a700bf1ca804b93845e0102810f8" translate="yes" xml:space="preserve">
          <source>Low-level git operations</source>
          <target state="translated">Operaciones de git de bajo nivel</target>
        </trans-unit>
        <trans-unit id="c63ae6dd4fc9f9dda66970e827d13f7c73fe841c" translate="yes" xml:space="preserve">
          <source>M</source>
          <target state="translated">M</target>
        </trans-unit>
        <trans-unit id="5d487fc78e43a0306fd5f718aec828744ee6e786" translate="yes" xml:space="preserve">
          <source>M: modification of the contents or mode of a file</source>
          <target state="translated">M:modificación del contenido o del modo de un archivo</target>
        </trans-unit>
        <trans-unit id="0f48f030cf13414eeafe91359c3c62bf97314f35" translate="yes" xml:space="preserve">
          <source>Magic Options</source>
          <target state="translated">Opciones Mágicas</target>
        </trans-unit>
        <trans-unit id="7d828d176880cf3ec5ec8010d93f54010eebda7b" translate="yes" xml:space="preserve">
          <source>Maildir splitting relies upon filenames being sorted to output patches in the correct order.</source>
          <target state="translated">La división de Maildir se basa en la clasificación de los nombres de los archivos para producir parches en el orden correcto.</target>
        </trans-unit>
        <trans-unit id="57a6217babf3a984d54a72505b0f2a4f3e1be542" translate="yes" xml:space="preserve">
          <source>Main porcelain commands</source>
          <target state="translated">Comandos principales de porcelana</target>
        </trans-unit>
        <trans-unit id="46b62a0f964fab2f018eee342e7b4db44adbc685" translate="yes" xml:space="preserve">
          <source>Maintaining topic branches for a Linux subsystem maintainer</source>
          <target state="translated">Mantener las ramas temáticas para un mantenedor del subsistema Linux</target>
        </trans-unit>
        <trans-unit id="52f0f393e457cb924c234a7254a4daec3a0cbf32" translate="yes" xml:space="preserve">
          <source>Maintenance branch management after a feature release</source>
          <target state="translated">Gestión de la sucursal de mantenimiento después del lanzamiento de una función</target>
        </trans-unit>
        <trans-unit id="319909b05c9210e6ff8b8a19f69dc9189ee2cca4" translate="yes" xml:space="preserve">
          <source>Make &lt;code&gt;git gc --auto&lt;/code&gt; return immediately and run in background if the system supports it. Default is true.</source>
          <target state="translated">Haga que &lt;code&gt;git gc --auto&lt;/code&gt; regrese inmediatamente y se ejecute en segundo plano si el sistema lo admite. El valor predeterminado es verdadero.</target>
        </trans-unit>
        <trans-unit id="77c42361d50b9bdea29b692160b9eae95cceb52e" translate="yes" xml:space="preserve">
          <source>Make &lt;code&gt;git show-ref&lt;/code&gt; act as a filter that reads refs from stdin of the form &quot;&lt;code&gt;^(?:&amp;lt;anything&amp;gt;\s)?&amp;lt;refname&amp;gt;(?:\^{})?$&lt;/code&gt;&quot; and performs the following actions on each: (1) strip &quot;^{}&quot; at the end of line if any; (2) ignore if pattern is provided and does not head-match refname; (3) warn if refname is not a well-formed refname and skip; (4) ignore if refname is a ref that exists in the local repository; (5) otherwise output the line.</source>
          <target state="translated">Haga que &lt;code&gt;git show-ref&lt;/code&gt; act&amp;uacute;e como un filtro que lee referencias de stdin con la forma &quot; &lt;code&gt;^(?:&amp;lt;anything&amp;gt;\s)?&amp;lt;refname&amp;gt;(?:\^{})?$&lt;/code&gt; &quot; Y realiza las siguientes acciones en cada : (1) tira &quot;^ {}&quot; al final de la l&amp;iacute;nea, si lo hay; (2) ignore si se proporciona el patr&amp;oacute;n y no coincide con el nombre de referencia; (3) advertir si refname no es un refname bien formado y omitir; (4) ignore si refname es una referencia que existe en el repositorio local; (5) de lo contrario, env&amp;iacute;e la l&amp;iacute;nea.</target>
        </trans-unit>
        <trans-unit id="51befbcaeb5eba297db1a634b8802a7f0078cead" translate="yes" xml:space="preserve">
          <source>Make &lt;code&gt;git svn&lt;/code&gt; less verbose. Specify a second time to make it even less verbose.</source>
          <target state="translated">Haga que &lt;code&gt;git svn&lt;/code&gt; sea menos detallado. Especifique una segunda vez para que sea a&amp;uacute;n menos detallado.</target>
        </trans-unit>
        <trans-unit id="2da3bd3f8069e8e437af583aecc3a384c81edd34" translate="yes" xml:space="preserve">
          <source>Make a &lt;code&gt;bare&lt;/code&gt; Git repository. That is, instead of creating &lt;code&gt;&amp;lt;directory&amp;gt;&lt;/code&gt; and placing the administrative files in &lt;code&gt;&amp;lt;directory&amp;gt;/.git&lt;/code&gt;, make the &lt;code&gt;&amp;lt;directory&amp;gt;&lt;/code&gt; itself the &lt;code&gt;$GIT_DIR&lt;/code&gt;. This obviously implies the &lt;code&gt;--no-checkout&lt;/code&gt; because there is nowhere to check out the working tree. Also the branch heads at the remote are copied directly to corresponding local branch heads, without mapping them to &lt;code&gt;refs/remotes/origin/&lt;/code&gt;. When this option is used, neither remote-tracking branches nor the related configuration variables are created.</source>
          <target state="translated">Hacer un &lt;code&gt;bare&lt;/code&gt; repositorio Git. Es decir, en lugar de crear &lt;code&gt;&amp;lt;directory&amp;gt;&lt;/code&gt; y colocar los archivos administrativos en &lt;code&gt;&amp;lt;directory&amp;gt;/.git&lt;/code&gt; , convierta el &lt;code&gt;&amp;lt;directory&amp;gt;&lt;/code&gt; en &lt;code&gt;$GIT_DIR&lt;/code&gt; . Esto obviamente implica el &lt;code&gt;--no-checkout&lt;/code&gt; porque no hay ning&amp;uacute;n lugar para verificar el &amp;aacute;rbol de trabajo. Adem&amp;aacute;s, los cabezales de rama en el control remoto se copian directamente a los cabezales de rama locales correspondientes, sin mapearlos a &lt;code&gt;refs/remotes/origin/&lt;/code&gt; . Cuando se utiliza esta opci&amp;oacute;n, no se crean ramas de seguimiento remoto ni las variables de configuraci&amp;oacute;n relacionadas.</target>
        </trans-unit>
        <trans-unit id="6ca024f41825508ff37398849dd7bbbd184e78e6" translate="yes" xml:space="preserve">
          <source>Make a GPG-signed tag, using the default e-mail address&amp;rsquo;s key. The default behavior of tag GPG-signing is controlled by &lt;code&gt;tag.gpgSign&lt;/code&gt; configuration variable if it exists, or disabled otherwise. See &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;.</source>
          <target state="translated">Cree una etiqueta firmada por GPG, utilizando la clave de la direcci&amp;oacute;n de correo electr&amp;oacute;nico predeterminada. El comportamiento predeterminado de la firma de etiquetas GPG est&amp;aacute; controlado por la variable de configuraci&amp;oacute;n &lt;code&gt;tag.gpgSign&lt;/code&gt; si existe, o deshabilitada en caso contrario. Consulte &lt;a href=&quot;git-config&quot;&gt;git-config [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d5a6f6bd2dfbdab5f143e86ea9155fad4e43a30c" translate="yes" xml:space="preserve">
          <source>Make a GPG-signed tag, using the given key.</source>
          <target state="translated">Haga una etiqueta firmada por GPG,usando la llave dada.</target>
        </trans-unit>
        <trans-unit id="99f2296af5452e1eec1986dbc7a0151a5ba6b1fc" translate="yes" xml:space="preserve">
          <source>Make a commit by taking the updated working tree contents of the paths specified on the command line, disregarding any contents that have been staged for other paths. This is the default mode of operation of &lt;code&gt;git commit&lt;/code&gt; if any paths are given on the command line, in which case this option can be omitted. If this option is specified together with &lt;code&gt;--amend&lt;/code&gt;, then no paths need to be specified, which can be used to amend the last commit without committing changes that have already been staged. If used together with &lt;code&gt;--allow-empty&lt;/code&gt; paths are also not required, and an empty commit will be created.</source>
          <target state="translated">Realice una confirmaci&amp;oacute;n tomando el contenido actualizado del &amp;aacute;rbol de trabajo de las rutas especificadas en la l&amp;iacute;nea de comando, sin tener en cuenta cualquier contenido que se haya preparado para otras rutas. Este es el modo de operaci&amp;oacute;n predeterminado de &lt;code&gt;git commit&lt;/code&gt; si se proporciona alguna ruta en la l&amp;iacute;nea de comando, en cuyo caso esta opci&amp;oacute;n se puede omitir. Si esta opci&amp;oacute;n se especifica junto con &lt;code&gt;--amend&lt;/code&gt; , entonces no es necesario especificar rutas, que se pueden usar para enmendar la &amp;uacute;ltima confirmaci&amp;oacute;n sin realizar cambios que ya se han realizado. Si se usa junto con &lt;code&gt;--allow-empty&lt;/code&gt; ,las rutas tampoco son necesarias, y se crear&amp;aacute; una confirmaci&amp;oacute;n vac&amp;iacute;a.</target>
        </trans-unit>
        <trans-unit id="2e9bf6a1a9ac175346438fe9d4c19601601a0ebd" translate="yes" xml:space="preserve">
          <source>Make a list of the commits which are about to be rebased. Let the user edit that list before rebasing. This mode can also be used to split commits (see SPLITTING COMMITS below).</source>
          <target state="translated">Haga una lista de los compromisos que están a punto de ser reubicados.Deje que el usuario edite esa lista antes de volver a basarlas.Este modo también puede ser usado para dividir confirmaciones (ver DIVISIÓN DE COMPROMISOS más abajo).</target>
        </trans-unit>
        <trans-unit id="f382849103310ffba0e3d31128dfababfd915957" translate="yes" xml:space="preserve">
          <source>Make a local clone that borrows from the current directory, without checking things out:</source>
          <target state="translated">Hacer un clon local que tome prestado del directorio actual,sin comprobar las cosas:</target>
        </trans-unit>
        <trans-unit id="d7a3e91b3667d18f363db6d6cc32c0afec1ed1d5" translate="yes" xml:space="preserve">
          <source>Make a side branch for every topic (feature, bugfix, &amp;hellip;​). Fork it off at the oldest integration branch that you will eventually want to merge it into.</source>
          <target state="translated">Haga una rama lateral para cada tema (caracter&amp;iacute;stica, correcci&amp;oacute;n de errores,&amp;hellip;). Bifurquelo en la rama de integraci&amp;oacute;n m&amp;aacute;s antigua en la que eventualmente querr&amp;aacute; fusionarlo.</target>
        </trans-unit>
        <trans-unit id="89db797c5d89c53349b8d88ec549bb720f48d1f7" translate="yes" xml:space="preserve">
          <source>Make an unsigned, annotated tag object</source>
          <target state="translated">Hacer un objeto de etiqueta sin firmar y anotado</target>
        </trans-unit>
        <trans-unit id="f88ecf2f4eb0c5509c792cd2c61ea44a524baf96" translate="yes" xml:space="preserve">
          <source>Make corrections to working tree files.</source>
          <target state="translated">Haga correcciones a los archivos del árbol de trabajo.</target>
        </trans-unit>
        <trans-unit id="79ee7beb56d7493ce335c85dd0a8333674bff17b" translate="yes" xml:space="preserve">
          <source>Make git-send-email less verbose. One line per email should be all that is output.</source>
          <target state="translated">Haz que el correo electrónico de Git-send-email sea menos verboso.Una línea por correo electrónico debería ser todo lo que se emita.</target>
        </trans-unit>
        <trans-unit id="ff429cc18c1dac972928cb3da6e4d06bbfe2d8ec" translate="yes" xml:space="preserve">
          <source>Make one commit and return to the shell when it is complete. This command returns a non-zero exit code if the window was closed in any way other than by making a commit.</source>
          <target state="translated">Haga un compromiso y vuelva a la cáscara cuando esté completo.Este comando devuelve un código de salida distinto de cero si la ventana se cerró de cualquier otra forma que no sea haciendo un commit.</target>
        </trans-unit>
        <trans-unit id="31ca9c9bf3eab94aff99250728fe74f77977b844" translate="yes" xml:space="preserve">
          <source>Make sure Git knows who to blame:</source>
          <target state="translated">Asegúrate de que Git sepa a quién culpar:</target>
        </trans-unit>
        <trans-unit id="cf12b54cc8063982ae2c9b96588de4f236c9e743" translate="yes" xml:space="preserve">
          <source>Make sure all submodule commits used by the revisions to be pushed are available on a remote-tracking branch. If the value is &lt;code&gt;check&lt;/code&gt; then Git will verify that all submodule commits that changed in the revisions to be pushed are available on at least one remote of the submodule. If any commits are missing, the push will be aborted and exit with non-zero status. If the value is &lt;code&gt;on-demand&lt;/code&gt; then all submodules that changed in the revisions to be pushed will be pushed. If on-demand was not able to push all necessary revisions it will also be aborted and exit with non-zero status. If the value is &lt;code&gt;no&lt;/code&gt; then default behavior of ignoring submodules when pushing is retained. You may override this configuration at time of push by specifying &lt;code&gt;--recurse-submodules=check|on-demand|no&lt;/code&gt;.</source>
          <target state="translated">Aseg&amp;uacute;rese de que todas las confirmaciones de subm&amp;oacute;dulo utilizadas por las revisiones que se enviar&amp;aacute;n est&amp;eacute;n disponibles en una rama de seguimiento remoto. Si el valor es &lt;code&gt;check&lt;/code&gt; a continuaci&amp;oacute;n, Git verificar&amp;aacute; que todos los env&amp;iacute;os que subm&amp;oacute;dulo cambiado en las versiones a ser empujados est&amp;aacute;n disponibles en al menos una distancia del subm&amp;oacute;dulo. Si falta alguna confirmaci&amp;oacute;n, la inserci&amp;oacute;n se cancelar&amp;aacute; y saldr&amp;aacute; con un estado distinto de cero. Si el valor es &lt;code&gt;on-demand&lt;/code&gt; se enviar&amp;aacute;n todos los subm&amp;oacute;dulos que cambiaron en las revisiones que se enviar&amp;aacute;n. Si on-demand no pudo enviar todas las revisiones necesarias, tambi&amp;eacute;n se cancelar&amp;aacute; y se cerrar&amp;aacute; con un estado distinto de cero. Si el valor es &lt;code&gt;no&lt;/code&gt; , se conserva el comportamiento predeterminado de ignorar los subm&amp;oacute;dulos al presionar. Puede anular esta configuraci&amp;oacute;n en el momento de la inserci&amp;oacute;n especificando &lt;code&gt;--recurse-submodules=check|on-demand|no&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="70b6629c434b51e7d9186d1fc6fe97c1a3725440" translate="yes" xml:space="preserve">
          <source>Make sure committers have a umask of at most 027, so that the directories they create are writable and searchable by other group members.</source>
          <target state="translated">Asegúrate de que los committers tienen una umask de como mucho 027,para que los directorios que creen puedan ser escritos y buscados por otros miembros del grupo.</target>
        </trans-unit>
        <trans-unit id="4b35196a3d616941ad0c8a125c3a9f25e1bdc376" translate="yes" xml:space="preserve">
          <source>Make sure this directory is available for others you want your changes to be pulled via the transport of your choice. Also you need to make sure that you have the &lt;code&gt;git-receive-pack&lt;/code&gt; program on the &lt;code&gt;$PATH&lt;/code&gt;.</source>
          <target state="translated">Aseg&amp;uacute;rese de que este directorio est&amp;eacute; disponible para otras personas que desee que se realicen sus cambios mediante el transporte de su elecci&amp;oacute;n. Tambi&amp;eacute;n debe asegurarse de tener el programa &lt;code&gt;git-receive-pack&lt;/code&gt; en &lt;code&gt;$PATH&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6631b9ca24ae751d7ee25163002526a066325c25" translate="yes" xml:space="preserve">
          <source>Make the first mail (or all the mails with &lt;code&gt;--no-thread&lt;/code&gt;) appear as a reply to the given &amp;lt;message id&amp;gt;, which avoids breaking threads to provide a new patch series.</source>
          <target state="translated">Haga que el primer correo (o todos los correos con &lt;code&gt;--no-thread&lt;/code&gt; ) aparezcan como una respuesta al &amp;lt;message id&amp;gt; dado, lo que evita romper los hilos para proporcionar una nueva serie de parches.</target>
        </trans-unit>
        <trans-unit id="5a1ce0ecb5c94a2505e8bfd1950281f48170d98f" translate="yes" xml:space="preserve">
          <source>Make the first mail (or all the mails with &lt;code&gt;--no-thread&lt;/code&gt;) appear as a reply to the given Message-Id, which avoids breaking threads to provide a new patch series. The second and subsequent emails will be sent as replies according to the &lt;code&gt;--[no-]chain-reply-to&lt;/code&gt; setting.</source>
          <target state="translated">Haga que el primer correo (o todos los correos con &lt;code&gt;--no-thread&lt;/code&gt; ) aparezcan como una respuesta al ID de mensaje dado, lo que evita romper los hilos para proporcionar una nueva serie de parches. El segundo y los siguientes correos electr&amp;oacute;nicos se enviar&amp;aacute;n como respuestas de acuerdo con la configuraci&amp;oacute;n &lt;code&gt;--[no-]chain-reply-to&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b064d6e8766baf86355fa160624701d28d48e0eb" translate="yes" xml:space="preserve">
          <source>Make the program exit with codes similar to diff(1). That is, it exits with 1 if there were differences and 0 means no differences.</source>
          <target state="translated">Haz que el programa salga con códigos similares a diff(1).Es decir,sale con 1 si había diferencias y 0 significa que no hay diferencias.</target>
        </trans-unit>
        <trans-unit id="033698ff1d93839c9dc26bb7039e879974408d51" translate="yes" xml:space="preserve">
          <source>Make the repository group-writable, (and g+sx, since the git group may be not the primary group of all users). This is used to loosen the permissions of an otherwise safe umask(2) value. Note that the umask still applies to the other permission bits (e.g. if umask is &lt;code&gt;0022&lt;/code&gt;, using &lt;code&gt;group&lt;/code&gt; will not remove read privileges from other (non-group) users). See &lt;code&gt;0xxx&lt;/code&gt; for how to exactly specify the repository permissions.</source>
          <target state="translated">Haga que el repositorio sea de escritura en grupo (y g + sx, ya que el grupo git puede no ser el grupo principal de todos los usuarios). Esto se usa para aflojar los permisos de un valor de umask (2) que de otro modo ser&amp;iacute;a seguro. Tenga en cuenta que la umask todav&amp;iacute;a se aplica a los otros bits de permisos (por ejemplo, si umask es &lt;code&gt;0022&lt;/code&gt; , el uso de &lt;code&gt;group&lt;/code&gt; no eliminar&amp;aacute; los privilegios de lectura de otros usuarios (que no sean de grupo)). Consulte &lt;code&gt;0xxx&lt;/code&gt; para saber c&amp;oacute;mo especificar exactamente los permisos del repositorio.</target>
        </trans-unit>
        <trans-unit id="daa563a54f59f3d95749377d0e4af4c611fecd18" translate="yes" xml:space="preserve">
          <source>Making a change</source>
          <target state="translated">Haciendo un cambio</target>
        </trans-unit>
        <trans-unit id="9aef7fbf27451a8c36fe7bf7a109aea9540e01ca" translate="yes" xml:space="preserve">
          <source>Making changes</source>
          <target state="translated">Haciendo cambios</target>
        </trans-unit>
        <trans-unit id="992a7beb5615876037da9b0e5b4a3e7c21af51d8" translate="yes" xml:space="preserve">
          <source>Making some changes to the working directory using your favorite editor.</source>
          <target state="translated">Haciendo algunos cambios en el directorio de trabajo usando tu editor favorito.</target>
        </trans-unit>
        <trans-unit id="bf4919466a0f70dfd02acc3627e75ad16a05f620" translate="yes" xml:space="preserve">
          <source>Manage multiple working trees</source>
          <target state="translated">Manejar múltiples árboles de trabajo</target>
        </trans-unit>
        <trans-unit id="6ec4a25401fa228522c7be97da233480069758e8" translate="yes" xml:space="preserve">
          <source>Manage multiple working trees attached to the same repository.</source>
          <target state="translated">Gestionar múltiples árboles de trabajo adjuntos al mismo repositorio.</target>
        </trans-unit>
        <trans-unit id="5f089a6eb7f251a9a2fe0a3f833141f8db37c3ff" translate="yes" xml:space="preserve">
          <source>Manage reflog information</source>
          <target state="translated">Gestionar la información de reflotamiento</target>
        </trans-unit>
        <trans-unit id="021ab6f7ef8793b1b816ea4bdd5e727ce06994e0" translate="yes" xml:space="preserve">
          <source>Manage set of tracked repositories</source>
          <target state="translated">Gestionar el conjunto de depósitos rastreados</target>
        </trans-unit>
        <trans-unit id="65f908ba554d3d8c75571c008e2b6e59e8585d63" translate="yes" xml:space="preserve">
          <source>Manage the serialized commit-graph file.</source>
          <target state="translated">Gestiona el archivo gráfico de compromiso serializado.</target>
        </trans-unit>
        <trans-unit id="4a3e0eed31d02104159aa0bed6d5acb0e05768b8" translate="yes" xml:space="preserve">
          <source>Manage the set of repositories (&quot;remotes&quot;) whose branches you track.</source>
          <target state="translated">Gestiona el conjunto de depósitos (&quot;remotos&quot;)cuyas ramas rastreas.</target>
        </trans-unit>
        <trans-unit id="3507e0027b822825db37aad1b6a1e0779dcd0d96" translate="yes" xml:space="preserve">
          <source>Managing branches</source>
          <target state="translated">Gestionar las sucursales</target>
        </trans-unit>
        <trans-unit id="279735249dbe3dcc024592a529bd9cb39b1b8496" translate="yes" xml:space="preserve">
          <source>Manipulate the notes tree in &amp;lt;ref&amp;gt;. This overrides &lt;code&gt;GIT_NOTES_REF&lt;/code&gt; and the &quot;core.notesRef&quot; configuration. The ref specifies the full refname when it begins with &lt;code&gt;refs/notes/&lt;/code&gt;; when it begins with &lt;code&gt;notes/&lt;/code&gt;, &lt;code&gt;refs/&lt;/code&gt; and otherwise &lt;code&gt;refs/notes/&lt;/code&gt; is prefixed to form a full name of the ref.</source>
          <target state="translated">Manipule el &amp;aacute;rbol de notas en &amp;lt;ref&amp;gt;. Esto anula &lt;code&gt;GIT_NOTES_REF&lt;/code&gt; y la configuraci&amp;oacute;n &quot;core.notesRef&quot;. La referencia especifica el nombre de referencia completo cuando comienza con &lt;code&gt;refs/notes/&lt;/code&gt; ; cuando comienza con &lt;code&gt;notes/&lt;/code&gt; , &lt;code&gt;refs/&lt;/code&gt; y de lo contrario &lt;code&gt;refs/notes/&lt;/code&gt; tiene un prefijo para formar un nombre completo de la ref.</target>
        </trans-unit>
        <trans-unit id="ad0e6ab545d99b4fca1e842f2d64e34b5bf6ca91" translate="yes" xml:space="preserve">
          <source>Manipulating branches</source>
          <target state="translated">Manipulación de ramas</target>
        </trans-unit>
        <trans-unit id="e163593ceb018ccfe91e5474069f8880c01bf32f" translate="yes" xml:space="preserve">
          <source>Manipulation commands</source>
          <target state="translated">Comandos de manipulación</target>
        </trans-unit>
        <trans-unit id="a4c79f29e9d9d5fa1534359d2910523c3bd41716" translate="yes" xml:space="preserve">
          <source>Manipulators:</source>
          <target state="translated">Manipulators:</target>
        </trans-unit>
        <trans-unit id="2d6fc489721f7990b3e0a46d8dbd0fae7613420d" translate="yes" xml:space="preserve">
          <source>Many (most?) public remote repositories will not contain any of the checked out files or even an index file, and will &lt;strong&gt;only&lt;/strong&gt; contain the actual core Git files. Such a repository usually doesn&amp;rsquo;t even have the &lt;code&gt;.git&lt;/code&gt; subdirectory, but has all the Git files directly in the repository.</source>
          <target state="translated">Muchos (&amp;iquest;la mayor&amp;iacute;a?) De los repositorios p&amp;uacute;blicos remotos no contendr&amp;aacute;n ninguno de los archivos extra&amp;iacute;dos o incluso un archivo de &amp;iacute;ndice, y &lt;strong&gt;solo&lt;/strong&gt; contendr&amp;aacute;n los archivos Git centrales reales. Un repositorio de este tipo normalmente ni siquiera tiene el subdirectorio &lt;code&gt;.git&lt;/code&gt; , pero tiene todos los archivos Git directamente en el repositorio.</target>
        </trans-unit>
        <trans-unit id="23a4d8d6b8951ee492fd478361a461e34445c192" translate="yes" xml:space="preserve">
          <source>Many Git commands also take sets of commits, which can be specified in a number of ways. Here are some examples with &lt;code&gt;git log&lt;/code&gt;:</source>
          <target state="translated">Muchos comandos de Git tambi&amp;eacute;n toman conjuntos de confirmaciones, que se pueden especificar de varias formas. Aqu&amp;iacute; hay algunos ejemplos con &lt;code&gt;git log&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="cb5f624f4f524730b1dad471a4cc62df1265c105" translate="yes" xml:space="preserve">
          <source>Many Git commands take revision parameters as arguments. Depending on the command, they denote a specific commit or, for commands which walk the revision graph (such as &lt;a href=&quot;git-log&quot;&gt;git-log[1]&lt;/a&gt;), all commits which are reachable from that commit. For commands that walk the revision graph one can also specify a range of revisions explicitly.</source>
          <target state="translated">Muchos comandos de Git toman par&amp;aacute;metros de revisi&amp;oacute;n como argumentos. Dependiendo del comando, denotan una confirmaci&amp;oacute;n espec&amp;iacute;fica o, para comandos que recorren el gr&amp;aacute;fico de revisi&amp;oacute;n (como &lt;a href=&quot;git-log&quot;&gt;git-log [1]&lt;/a&gt; ), todas las confirmaciones a las que se puede acceder desde esa confirmaci&amp;oacute;n. Para los comandos que recorren el gr&amp;aacute;fico de revisi&amp;oacute;n, tambi&amp;eacute;n se puede especificar un rango de revisiones expl&amp;iacute;citamente.</target>
        </trans-unit>
        <trans-unit id="8eadff7d5c23284bf3e40779cca1324c9880e38b" translate="yes" xml:space="preserve">
          <source>Many Git porcelainish commands take mixture of flags (i.e. parameters that begin with a dash &lt;code&gt;-&lt;/code&gt;) and parameters meant for the underlying &lt;code&gt;git rev-list&lt;/code&gt; command they use internally and flags and parameters for the other commands they use downstream of &lt;code&gt;git rev-list&lt;/code&gt;. This command is used to distinguish between them.</source>
          <target state="translated">Muchos comandos de porcelainish de Git toman una mezcla de indicadores (es decir, par&amp;aacute;metros que comienzan con un gui&amp;oacute;n &lt;code&gt;-&lt;/code&gt; ) y par&amp;aacute;metros destinados al comando &lt;code&gt;git rev-list&lt;/code&gt; subyacente que usan internamente y indicadores y par&amp;aacute;metros para los otros comandos que usan despu&amp;eacute;s de &lt;code&gt;git rev-list&lt;/code&gt; . Este comando se usa para distinguir entre ellos.</target>
        </trans-unit>
        <trans-unit id="07f9a7fabb84ff55c93b5220c84bc1016373588c" translate="yes" xml:space="preserve">
          <source>Many command-line options can be provided as part of the fast-import stream itself by using the &lt;code&gt;feature&lt;/code&gt; or &lt;code&gt;option&lt;/code&gt; commands. However, some of these options are unsafe (e.g., allowing fast-import to access the filesystem outside of the repository). These options are disabled by default, but can be allowed by providing this option on the command line. This currently impacts only the &lt;code&gt;export-marks&lt;/code&gt;, &lt;code&gt;import-marks&lt;/code&gt;, and &lt;code&gt;import-marks-if-exists&lt;/code&gt; feature commands.</source>
          <target state="translated">Se pueden proporcionar muchas opciones de la l&amp;iacute;nea de comandos como parte del flujo de importaci&amp;oacute;n r&amp;aacute;pida mediante los comandos de &lt;code&gt;feature&lt;/code&gt; u &lt;code&gt;option&lt;/code&gt; . Sin embargo, algunas de estas opciones no son seguras (por ejemplo, permitir que la importaci&amp;oacute;n r&amp;aacute;pida acceda al sistema de archivos fuera del repositorio). Estas opciones est&amp;aacute;n deshabilitadas de forma predeterminada, pero se pueden permitir si se proporciona esta opci&amp;oacute;n en la l&amp;iacute;nea de comandos. Actualmente, esto solo afecta a los comandos de caracter&amp;iacute;sticas &lt;code&gt;export-marks&lt;/code&gt; , &lt;code&gt;import-marks&lt;/code&gt; e &lt;code&gt;import-marks-if-exists&lt;/code&gt; exist.</target>
        </trans-unit>
        <trans-unit id="b810424b3fea997d54a1c6f50a7ffa7b2bdf31cc" translate="yes" xml:space="preserve">
          <source>Many commands allow wildcards in paths, but you need to protect them from getting globbed by the shell. These two mean different things:</source>
          <target state="translated">Muchos comandos permiten a los comodines en los caminos,pero hay que protegerlos para que no sean golpeados por el caparazón.Estos dos significan cosas diferentes:</target>
        </trans-unit>
        <trans-unit id="f769735173b4b17536b3bddf331e35fc94c1f6c2" translate="yes" xml:space="preserve">
          <source>Many commands take revisions (most often &quot;commits&quot;, but sometimes &quot;tree-ish&quot;, depending on the context and command) and paths as their arguments. Here are the rules:</source>
          <target state="translated">Muchos comandos toman como argumentos revisiones (la mayoría de las veces &quot;commits&quot;,pero a veces &quot;treeish&quot;,dependiendo del contexto y el comando)y caminos.Aquí están las reglas:</target>
        </trans-unit>
        <trans-unit id="51a04d163df59d3e4e585f46784dd69c625e4feb" translate="yes" xml:space="preserve">
          <source>Many commands that can work on files in the working tree and/or in the index can take &lt;code&gt;--cached&lt;/code&gt; and/or &lt;code&gt;--index&lt;/code&gt; options. Sometimes people incorrectly think that, because the index was originally called cache, these two are synonyms. They are &lt;strong&gt;not&lt;/strong&gt; &amp;mdash; these two options mean very different things.</source>
          <target state="translated">Muchos comandos que pueden funcionar en archivos en el &amp;aacute;rbol de trabajo y / o en el &amp;iacute;ndice pueden tomar las &lt;code&gt;--cached&lt;/code&gt; y / o &lt;code&gt;--index&lt;/code&gt; . A veces, la gente piensa incorrectamente que, debido a que el &amp;iacute;ndice se llam&amp;oacute; originalmente cach&amp;eacute;, estos dos son sin&amp;oacute;nimos. Son &lt;strong&gt;no&lt;/strong&gt; - estas dos opciones significan cosas muy diferentes.</target>
        </trans-unit>
        <trans-unit id="41a419d79cd72b9d54b27ecee9672655c35e91cc" translate="yes" xml:space="preserve">
          <source>Many gitweb features can be enabled (or disabled) and configured using the &lt;code&gt;%feature&lt;/code&gt; hash. Names of gitweb features are keys of this hash.</source>
          <target state="translated">Muchas funciones de gitweb pueden habilitarse (o deshabilitarse) y configurarse usando &lt;code&gt;%feature&lt;/code&gt; hash. Los nombres de las funciones de gitweb son claves de este hash.</target>
        </trans-unit>
        <trans-unit id="919a2ac82af6ff1bc82b2171d1abca264db10f6e" translate="yes" xml:space="preserve">
          <source>Many installations of sshd do not invoke your shell as the login shell when you directly run programs; what this means is that if your login shell is &lt;em&gt;bash&lt;/em&gt;, only &lt;code&gt;.bashrc&lt;/code&gt; is read and not &lt;code&gt;.bash_profile&lt;/code&gt;. As a workaround, make sure &lt;code&gt;.bashrc&lt;/code&gt; sets up &lt;code&gt;$PATH&lt;/code&gt; so that you can run &lt;em&gt;git-receive-pack&lt;/em&gt; program.</source>
          <target state="translated">Muchas instalaciones de sshd no invocan su shell como shell de inicio de sesi&amp;oacute;n cuando ejecuta programas directamente; lo que esto significa es que si su shell de inicio de sesi&amp;oacute;n es &lt;em&gt;bash&lt;/em&gt; , solo se lee &lt;code&gt;.bashrc&lt;/code&gt; y no &lt;code&gt;.bash_profile&lt;/code&gt; . Como soluci&amp;oacute;n alternativa, aseg&amp;uacute;rese de que &lt;code&gt;.bashrc&lt;/code&gt; configure &lt;code&gt;$PATH&lt;/code&gt; para que pueda ejecutar el programa &lt;em&gt;git-receive-pack&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="b683891958210e2ee979b3e8c7ad10f12997dda2" translate="yes" xml:space="preserve">
          <source>Many mailers if not set up properly will corrupt whitespace. Here are two common types of corruption:</source>
          <target state="translated">Muchos correos si no se configuran correctamente corromperán los espacios en blanco.Aquí hay dos tipos comunes de corrupción:</target>
        </trans-unit>
        <trans-unit id="193dde6b7f3a20700543ed6450f24935f7b33dfa" translate="yes" xml:space="preserve">
          <source>Many of the higher-level commands were originally implemented as shell scripts using a smaller core of low-level Git commands. These can still be useful when doing unusual things with Git, or just as a way to understand its inner workings.</source>
          <target state="translated">Muchos de los comandos de alto nivel se implementaron originalmente como scripts de shell usando un núcleo más pequeño de comandos Git de bajo nivel.Estos pueden seguir siendo útiles cuando se hacen cosas inusuales con Git,o simplemente como una forma de entender su funcionamiento interno.</target>
        </trans-unit>
        <trans-unit id="3d6c28c55f8170d273c49f3e427a981c665cf6ea" translate="yes" xml:space="preserve">
          <source>Many operations in Git depend on your filesystem to have an efficient &lt;code&gt;lstat(2)&lt;/code&gt; implementation, so that &lt;code&gt;st_mtime&lt;/code&gt; information for working tree files can be cheaply checked to see if the file contents have changed from the version recorded in the index file. Unfortunately, some filesystems have inefficient &lt;code&gt;lstat(2)&lt;/code&gt;. If your filesystem is one of them, you can set &quot;assume unchanged&quot; bit to paths you have not changed to cause Git not to do this check. Note that setting this bit on a path does not mean Git will check the contents of the file to see if it has changed &amp;mdash; it makes Git to omit any checking and assume it has &lt;strong&gt;not&lt;/strong&gt; changed. When you make changes to working tree files, you have to explicitly tell Git about it by dropping &quot;assume unchanged&quot; bit, either before or after you modify them.</source>
          <target state="translated">Muchas operaciones en Git dependen de su sistema de archivos para tener una &lt;code&gt;lstat(2)&lt;/code&gt; eficiente , por lo que la informaci&amp;oacute;n de &lt;code&gt;st_mtime&lt;/code&gt; para los archivos de &amp;aacute;rbol de trabajo se puede verificar de manera econ&amp;oacute;mica para ver si el contenido del archivo ha cambiado desde la versi&amp;oacute;n registrada en el archivo de &amp;iacute;ndice. Desafortunadamente, algunos sistemas de archivos tienen &lt;code&gt;lstat(2)&lt;/code&gt; ineficiente . Si su sistema de archivos es uno de ellos, puede establecer el bit &quot;asumir sin cambios&quot; a las rutas que no ha cambiado para que Git no haga esta verificaci&amp;oacute;n. Tenga en cuenta que establecer este bit en una ruta no significa que Git verificar&amp;aacute; el contenido del archivo para ver si ha cambiado; hace que Git omita cualquier verificaci&amp;oacute;n y asuma que &lt;strong&gt;no&lt;/strong&gt; lo ha &lt;strong&gt;hecho.&lt;/strong&gt;cambiado. Cuando realiza cambios en los archivos de &amp;aacute;rbol de trabajo, debe informarle expl&amp;iacute;citamente a Git al eliminar el bit &quot;asumir sin cambios&quot;, ya sea antes o despu&amp;eacute;s de modificarlos.</target>
        </trans-unit>
        <trans-unit id="a799d1cceae5d3b6566df7c502b0ed31229cf195" translate="yes" xml:space="preserve">
          <source>Many revision control systems provide an &lt;code&gt;add&lt;/code&gt; command that tells the system to start tracking changes to a new file. Git&amp;rsquo;s &lt;code&gt;add&lt;/code&gt; command does something simpler and more powerful: &lt;code&gt;git add&lt;/code&gt; is used both for new and newly modified files, and in both cases it takes a snapshot of the given files and stages that content in the index, ready for inclusion in the next commit.</source>
          <target state="translated">Muchos sistemas de control de revisi&amp;oacute;n proporcionan un comando de &lt;code&gt;add&lt;/code&gt; que le dice al sistema que comience a rastrear cambios en un nuevo archivo. El comando &lt;code&gt;add&lt;/code&gt; de Git hace algo m&amp;aacute;s simple y poderoso: &lt;code&gt;git add&lt;/code&gt; se usa tanto para archivos nuevos como recientemente modificados, y en ambos casos toma una instant&amp;aacute;nea de los archivos dados y las etapas de ese contenido en el &amp;iacute;ndice, listo para su inclusi&amp;oacute;n en la pr&amp;oacute;xima confirmaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="f4ad3aa56684a237b2a48778413d62e45b68868b" translate="yes" xml:space="preserve">
          <source>Many tags. Will create a tag for every commit, reflecting the commit name in the Arch repository.</source>
          <target state="translated">Muchas etiquetas.Creará una etiqueta para cada confirmación,reflejando el nombre de la confirmación en el repositorio de Arch.</target>
        </trans-unit>
        <trans-unit id="6b4939f173ca46ae5e70f2a578215c85acafb3ce" translate="yes" xml:space="preserve">
          <source>Many thanks to Ingo Molnar for giving me very useful information that appears in this paper, for commenting on this paper, for his suggestions to improve &quot;git bisect&quot; and for evangelizing &quot;git bisect&quot; on the linux kernel mailing lists.</source>
          <target state="translated">Muchas gracias a Ingo Molnar por darme información muy útil que aparece en este documento,por comentarlo,por sus sugerencias para mejorar el &quot;git bisect&quot; y por evangelizar el &quot;git bisect&quot; en las listas de correo del núcleo de Linux.</target>
        </trans-unit>
        <trans-unit id="5bd4feea472ac1f81e9eed337015c1647da376b9" translate="yes" xml:space="preserve">
          <source>Many thanks to Junio Hamano for his help in reviewing this paper, for reviewing the patches I sent to the Git mailing list, for discussing some ideas and helping me improve them, for improving &quot;git bisect&quot; a lot and for his awesome work in maintaining and developing Git.</source>
          <target state="translated">Muchas gracias a Junio Hamano por su ayuda en la revisión de este trabajo,por revisar los parches que envié a la lista de correo de Git,por discutir algunas ideas y ayudarme a mejorarlas,por mejorar mucho la &quot;git bisect&quot; y por su increíble trabajo en el mantenimiento y desarrollo de Git.</target>
        </trans-unit>
        <trans-unit id="a308e878405ccac0452dc3a943e6c4f471d0d0f3" translate="yes" xml:space="preserve">
          <source>Many thanks to Linus Torvalds for inventing, developing and evangelizing &quot;git bisect&quot;, Git and Linux.</source>
          <target state="translated">Muchas gracias a Linus Torvalds por inventar,desarrollar y evangelizar &quot;git bisect&quot;,Git y Linux.</target>
        </trans-unit>
        <trans-unit id="64e052904657c30a32be467111b38e2db70890d3" translate="yes" xml:space="preserve">
          <source>Many thanks to the Linux-Kongress program committee for choosing the author to given a talk and for publishing this paper.</source>
          <target state="translated">Muchas gracias al comité del programa del Congreso de Linux por elegir al autor para dar una charla y por publicar este artículo.</target>
        </trans-unit>
        <trans-unit id="a813e2d801820a3507d225cfe410c73c1e3814a5" translate="yes" xml:space="preserve">
          <source>Many thanks to the many other great people who helped one way or another when I worked on Git, especially to Andreas Ericsson, Johannes Schindelin, H. Peter Anvin, Daniel Barkalow, Bill Lear, John Hawley, Shawn O. Pierce, Jeff King, Sam Vilain, Jon Seymour.</source>
          <target state="translated">Muchas gracias a las muchas otras grandes personas que me ayudaron de una forma u otra cuando trabajé en Git,especialmente a Andreas Ericsson,Johannes Schindelin,H.Peter Anvin,Daniel Barkalow,Bill Lear,John Hawley,Shawn O.Pierce,Jeff King,Sam Vilain,Jon Seymour.</target>
        </trans-unit>
        <trans-unit id="970bd5edbccf4926f346f36ced29b782ff134b0f" translate="yes" xml:space="preserve">
          <source>Many things can then be done very naturally:</source>
          <target state="translated">Muchas cosas pueden hacerse de forma muy natural:</target>
        </trans-unit>
        <trans-unit id="08ed471839ae0d35cbf114cdc8b4fb025451ea78" translate="yes" xml:space="preserve">
          <source>Map a P4 user to a name and email address in Git. Use a string with the following format to create a mapping:</source>
          <target state="translated">Mapea a un usuario P4 con un nombre y una dirección de correo electrónico en Git.Usa una cadena con el siguiente formato para crear un mapeo:</target>
        </trans-unit>
        <trans-unit id="84e3b6902de1ae94c28d951dff280df12bc818fa" translate="yes" xml:space="preserve">
          <source>Mapping authors</source>
          <target state="translated">Los autores de los mapas</target>
        </trans-unit>
        <trans-unit id="ecca08ad6644372b493b29196801e0262451ee0a" translate="yes" xml:space="preserve">
          <source>Mapping between Subversion revision numbers and Git commit names. In a repository where the noMetadata option is not set, this can be rebuilt from the git-svn-id: lines that are at the end of every commit (see the &lt;code&gt;svn.noMetadata&lt;/code&gt; section above for details).</source>
          <target state="translated">Correlaci&amp;oacute;n entre los n&amp;uacute;meros de revisi&amp;oacute;n de Subversion y los nombres de las confirmaciones de Git. En un repositorio donde la opci&amp;oacute;n noMetadata no est&amp;aacute; configurada, esto se puede reconstruir a partir de las l&amp;iacute;neas git-svn-id: que est&amp;aacute;n al final de cada confirmaci&amp;oacute;n (consulte la secci&amp;oacute;n &lt;code&gt;svn.noMetadata&lt;/code&gt; m&amp;aacute;s arriba para obtener m&amp;aacute;s detalles).</target>
        </trans-unit>
        <trans-unit id="f80c6e32aadbd525747e2562fb58002684c64ae1" translate="yes" xml:space="preserve">
          <source>Mark lines that were changed by an ignored revision that we attributed to another commit with a &lt;code&gt;?&lt;/code&gt; in the output of &lt;a href=&quot;git-blame&quot;&gt;git-blame[1]&lt;/a&gt;.</source>
          <target state="translated">Marque las l&amp;iacute;neas que fueron cambiadas por una revisi&amp;oacute;n ignorada que atribuimos a otra confirmaci&amp;oacute;n con &lt;code&gt;?&lt;/code&gt; en la salida de &lt;a href=&quot;git-blame&quot;&gt;git-blame [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e0a93a83bc77d4e299bb423ede0b0e7523360c05" translate="yes" xml:space="preserve">
          <source>Mark lines that were changed by an ignored revision that we could not attribute to another commit with a &lt;code&gt;*&lt;/code&gt; in the output of &lt;a href=&quot;git-blame&quot;&gt;git-blame[1]&lt;/a&gt;.</source>
          <target state="translated">Marque las l&amp;iacute;neas que fueron cambiadas por una revisi&amp;oacute;n ignorada que no pudimos atribuir a otra confirmaci&amp;oacute;n con un &lt;code&gt;*&lt;/code&gt; en la salida de &lt;a href=&quot;git-blame&quot;&gt;git-blame [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ffa04a5e9e510ce8e8a9af22652c96cb5f2a2455" translate="yes" xml:space="preserve">
          <source>Mark the commit you want to split with the action &quot;edit&quot;.</source>
          <target state="translated">Marca el compromiso que quieres dividir con la acción &quot;editar&quot;.</target>
        </trans-unit>
        <trans-unit id="9ad05336158823a7d5e9d2740631e3ed3e7b77cc" translate="yes" xml:space="preserve">
          <source>Mark the series as the &amp;lt;n&amp;gt;-th iteration of the topic. The output filenames have &lt;code&gt;v&amp;lt;n&amp;gt;&lt;/code&gt; prepended to them, and the subject prefix (&quot;PATCH&quot; by default, but configurable via the &lt;code&gt;--subject-prefix&lt;/code&gt; option) has ` v&amp;lt;n&amp;gt;` appended to it. E.g. &lt;code&gt;--reroll-count=4&lt;/code&gt; may produce &lt;code&gt;v4-0001-add-makefile.patch&lt;/code&gt; file that has &quot;Subject: [PATCH v4 1/20] Add makefile&quot; in it.</source>
          <target state="translated">Marque la serie como la &amp;lt;n&amp;gt; -&amp;eacute;sima iteraci&amp;oacute;n del tema. Los nombres de archivo de salida tienen &lt;code&gt;v&amp;lt;n&amp;gt;&lt;/code&gt; antepuesto, y el prefijo del asunto (&quot;PATCH&quot; de forma predeterminada, pero configurable mediante la opci&amp;oacute;n &lt;code&gt;--subject-prefix&lt;/code&gt; ) tiene `v &amp;lt;n&amp;gt;` a&amp;ntilde;adido. Por ejemplo, &lt;code&gt;--reroll-count=4&lt;/code&gt; puede producir un &lt;code&gt;v4-0001-add-makefile.patch&lt;/code&gt; que tiene &quot;Asunto: [PATCH v4 1/20] Add makefile&quot; en &amp;eacute;l.</target>
        </trans-unit>
        <trans-unit id="eb02cc756d5e31341021dd6b9e08120c18cfff12" translate="yes" xml:space="preserve">
          <source>Mark which side of a symmetric difference a commit is reachable from. Commits from the left side are prefixed with &lt;code&gt;&amp;lt;&lt;/code&gt; and those from the right with &lt;code&gt;&amp;gt;&lt;/code&gt;. If combined with &lt;code&gt;--boundary&lt;/code&gt;, those commits are prefixed with &lt;code&gt;-&lt;/code&gt;.</source>
          <target state="translated">Marque de qu&amp;eacute; lado de una diferencia sim&amp;eacute;trica se puede acceder a una confirmaci&amp;oacute;n. Las confirmaciones del lado izquierdo tienen el prefijo &lt;code&gt;&amp;lt;&lt;/code&gt; y las del lado derecho con &lt;code&gt;&amp;gt;&lt;/code&gt; . Si se combina con &lt;code&gt;--boundary&lt;/code&gt; , esas confirmaciones tienen el prefijo &lt;code&gt;-&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6cf65e398a783b020004a05bc4b12965bd321675" translate="yes" xml:space="preserve">
          <source>Mark which side of a symmetric difference a commit is reachable from. Commits from the left side are prefixed with a &lt;code&gt;&amp;lt;&lt;/code&gt; symbol and those from the right with a &lt;code&gt;&amp;gt;&lt;/code&gt; symbol.</source>
          <target state="translated">Marque de qu&amp;eacute; lado de una diferencia sim&amp;eacute;trica se puede acceder a una confirmaci&amp;oacute;n. Las confirmaciones del lado izquierdo tienen un prefijo con un s&amp;iacute;mbolo &lt;code&gt;&amp;lt;&lt;/code&gt; y las del lado derecho con un s&amp;iacute;mbolo &lt;code&gt;&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d120d1dcfa9af04a37a29923ad102f9ac75edbe0" translate="yes" xml:space="preserve">
          <source>Marking files as binary</source>
          <target state="translated">Marcando los archivos como binarios</target>
        </trans-unit>
        <trans-unit id="3549e52dba075c1ca63de7856965a26fd121848f" translate="yes" xml:space="preserve">
          <source>Marks are stored in a sparse array, using 1 pointer (4 bytes or 8 bytes, depending on pointer size) per mark. Although the array is sparse, frontends are still strongly encouraged to use marks between 1 and n, where n is the total number of marks required for this import.</source>
          <target state="translated">Las marcas se almacenan en una matriz dispersa,utilizando un puntero (4 ó 8 bytes,dependiendo del tamaño del puntero)por marca.Aunque la matriz es escasa,se sigue recomendando encarecidamente a los frontales que utilicen marcas entre 1 y n,donde n es el número total de marcas necesarias para esta importación.</target>
        </trans-unit>
        <trans-unit id="c020b534de76a3110681e8b3a1131c198a04e4dd" translate="yes" xml:space="preserve">
          <source>Marks must be declared (via &lt;code&gt;mark&lt;/code&gt;) before they can be used.</source>
          <target state="translated">Las marcas deben declararse (mediante &lt;code&gt;mark&lt;/code&gt; ) antes de que puedan utilizarse.</target>
        </trans-unit>
        <trans-unit id="e23875af098ed58ac7ddbf626ebbfd55b3530c2d" translate="yes" xml:space="preserve">
          <source>Marks the end of the stream. This command is optional unless the &lt;code&gt;done&lt;/code&gt; feature was requested using the &lt;code&gt;--done&lt;/code&gt; command-line option or &lt;code&gt;feature done&lt;/code&gt; command.</source>
          <target state="translated">Marca el final de la secuencia. Este comando es opcional a menos que la funci&amp;oacute;n &lt;code&gt;done&lt;/code&gt; se solicit&amp;oacute; mediante la opci&amp;oacute;n de l&amp;iacute;nea de comandos &lt;code&gt;--done&lt;/code&gt; o el comando &lt;code&gt;feature done&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6dd5e3d7525f7c72ed149669f4682e8cf2613e2e" translate="yes" xml:space="preserve">
          <source>Match paths exactly (i.e. don&amp;rsquo;t allow &quot;/foo/repo&quot; when the real path is &quot;/foo/repo.git&quot; or &quot;/foo/repo/.git&quot;) and don&amp;rsquo;t do user-relative paths. &lt;code&gt;git daemon&lt;/code&gt; will refuse to start when this option is enabled and no whitelist is specified.</source>
          <target state="translated">Haga coincidir las rutas exactamente (es decir, no permita &quot;/ foo / repo&quot; cuando la ruta real es &quot;/foo/repo.git&quot; o &quot;/foo/repo/.git&quot;) y no haga rutas relativas al usuario. &lt;code&gt;git daemon&lt;/code&gt; se negar&amp;aacute; a iniciarse cuando esta opci&amp;oacute;n est&amp;eacute; habilitada y no se especifique una lista blanca.</target>
        </trans-unit>
        <trans-unit id="1c5cb990d5ea569aee72e359a127ac5dd4a253ea" translate="yes" xml:space="preserve">
          <source>Match the pattern only at word boundary (either begin at the beginning of a line, or preceded by a non-word character; end at the end of a line or followed by a non-word character).</source>
          <target state="translated">Coincide con el patrón sólo en el límite de la palabra (o bien comienza al principio de una línea o está precedido por un carácter no verbal;termina al final de una línea o está seguido por un carácter no verbal).</target>
        </trans-unit>
        <trans-unit id="ca182a2e7bbbd5ec9c62eec976529a0aa078540e" translate="yes" xml:space="preserve">
          <source>Match the regular expression limiting patterns without regard to letter case.</source>
          <target state="translated">Coincide con los patrones de limitación de expresiones regulares sin tener en cuenta el caso de las letras.</target>
        </trans-unit>
        <trans-unit id="1452c4b1c4eed7c80174fb8c82a8ed6f95d98c4d" translate="yes" xml:space="preserve">
          <source>Maximum delta depth, for blob and tree deltification. Default is 50.</source>
          <target state="translated">Profundidad máxima del delta,para la deltificación de manchas y árboles.El valor por defecto es 50.</target>
        </trans-unit>
        <trans-unit id="384f40abc20254795ab29a564353f53402412c1e" translate="yes" xml:space="preserve">
          <source>Maximum number of branches to maintain active at once. See &amp;ldquo;Memory Utilization&amp;rdquo; below for details. Default is 5.</source>
          <target state="translated">N&amp;uacute;mero m&amp;aacute;ximo de sucursales para mantener activas a la vez. Consulte &quot;Utilizaci&amp;oacute;n de la memoria&quot; a continuaci&amp;oacute;n para obtener m&amp;aacute;s detalles. El valor predeterminado es 5.</target>
        </trans-unit>
        <trans-unit id="5ba691ad2489c6a98bfddfb725c399a5433235ec" translate="yes" xml:space="preserve">
          <source>Maximum number of bytes to map simultaneously into memory from pack files. If Git needs to access more than this many bytes at once to complete an operation it will unmap existing regions to reclaim virtual address space within the process.</source>
          <target state="translated">Número máximo de bytes que se pueden mapear simultáneamente en la memoria de los archivos de paquetes.Si Git necesita acceder a más de esta cantidad de bytes a la vez para completar una operación,desmapateará las regiones existentes para recuperar el espacio de direcciones virtuales dentro del proceso.</target>
        </trans-unit>
        <trans-unit id="015780ae5eaf5a16460a6c6f6a47f9fd68665f6e" translate="yes" xml:space="preserve">
          <source>Maximum number of bytes to reserve for caching base objects that may be referenced by multiple deltified objects. By storing the entire decompressed base objects in a cache Git is able to avoid unpacking and decompressing frequently used base objects multiple times.</source>
          <target state="translated">Número máximo de bytes a reservar para el almacenamiento en caché de objetos base que pueden ser referenciados por múltiples objetos delicados.Al almacenar todos los objetos base descomprimidos en una caché,Git puede evitar desembalar y descomprimir varias veces los objetos base más utilizados.</target>
        </trans-unit>
        <trans-unit id="9639a9871e3fa301072f34b62bd6d8d1df5dfde8" translate="yes" xml:space="preserve">
          <source>Maximum number of concurrent clients, defaults to 32. Set it to zero for no limit.</source>
          <target state="translated">Número máximo de clientes simultáneos,por defecto 32.Ponlo en cero para no tener límite.</target>
        </trans-unit>
        <trans-unit id="3fca64028c3b9d66663fb33bbabf381bdeaeb020" translate="yes" xml:space="preserve">
          <source>Maximum size in bytes of the buffer used by smart HTTP transports when POSTing data to the remote system. For requests larger than this buffer size, HTTP/1.1 and Transfer-Encoding: chunked is used to avoid creating a massive pack file locally. Default is 1 MiB, which is sufficient for most requests.</source>
          <target state="translated">Tamaño máximo en bytes del buffer utilizado por los transportes HTTP inteligentes al enviar datos al sistema remoto.Para las peticiones de mayor tamaño que este tamaño de buffer,HTTP/1.1 y Transfer-Encoding:chunked se utiliza para evitar la creación de un archivo de paquete masivo localmente.El valor por defecto es 1 MiB,que es suficiente para la mayoría de las peticiones.</target>
        </trans-unit>
        <trans-unit id="d63005f2c2b8f8c3239933e10d80e78d75fee39e" translate="yes" xml:space="preserve">
          <source>Maximum size of a blob that fast-import will attempt to create a delta for, expressed in bytes. The default is 512m (512 MiB). Some importers may wish to lower this on systems with constrained memory.</source>
          <target state="translated">El tamaño máximo de una mancha de importación rápida intentará crear un delta para,expresado en bytes.El valor por defecto es 512m (512 MiB).Algunos importadores pueden querer bajar esto en sistemas con memoria limitada.</target>
        </trans-unit>
        <trans-unit id="d3dd84835c1a4e2de21619e12a6eaaff0c2d1fd8" translate="yes" xml:space="preserve">
          <source>Maximum size of each output pack file. The size can be suffixed with &quot;k&quot;, &quot;m&quot;, or &quot;g&quot;. The minimum size allowed is limited to 1 MiB. If specified, multiple packfiles may be created, which also prevents the creation of a bitmap index. The default is unlimited, unless the config variable &lt;code&gt;pack.packSizeLimit&lt;/code&gt; is set.</source>
          <target state="translated">Tama&amp;ntilde;o m&amp;aacute;ximo de cada archivo de paquete de salida. El tama&amp;ntilde;o puede tener el sufijo &quot;k&quot;, &quot;m&quot; o &quot;g&quot;. El tama&amp;ntilde;o m&amp;iacute;nimo permitido est&amp;aacute; limitado a 1 MiB. Si se especifica, se pueden crear varios archivos de paquete, lo que tambi&amp;eacute;n evita la creaci&amp;oacute;n de un &amp;iacute;ndice de mapa de bits. El valor predeterminado es ilimitado, a menos que se establezca la variable de configuraci&amp;oacute;n &lt;code&gt;pack.packSizeLimit&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b8685db9c67d15fcb99750ad6a0c6f6dc3e27c92" translate="yes" xml:space="preserve">
          <source>Maximum size of each output packfile. The default is unlimited.</source>
          <target state="translated">Tamaño máximo de cada archivo de salida.El valor por defecto es ilimitado.</target>
        </trans-unit>
        <trans-unit id="ecff084a0c01e319db62c5b088c7a98c5cc26a2a" translate="yes" xml:space="preserve">
          <source>May be an unabbreviated ref name or a glob and may be specified multiple times. A warning will be issued for refs that do not exist, but a glob that does not match any refs is silently ignored.</source>
          <target state="translated">Puede ser un nombre de referencia sin abreviar o un globo y puede especificarse varias veces.Se emitirá una advertencia para los árbitros que no existan,pero un globo que no coincida con ningún árbitro será ignorado silenciosamente.</target>
        </trans-unit>
        <trans-unit id="706c83c32d28c2f1cb1aaafc37be7356f71e7631" translate="yes" xml:space="preserve">
          <source>May be set to a boolean value, or the string &lt;code&gt;if-asked&lt;/code&gt;. A true value causes all pushes to be GPG signed, as if &lt;code&gt;--signed&lt;/code&gt; is passed to &lt;a href=&quot;git-push&quot;&gt;git-push[1]&lt;/a&gt;. The string &lt;code&gt;if-asked&lt;/code&gt; causes pushes to be signed if the server supports it, as if &lt;code&gt;--signed=if-asked&lt;/code&gt; is passed to &lt;code&gt;git push&lt;/code&gt;. A false value may override a value from a lower-priority config file. An explicit command-line flag always overrides this config option.</source>
          <target state="translated">Puede establecerse en un valor booleano o en la cadena &lt;code&gt;if-asked&lt;/code&gt; . Un valor verdadero hace que todos los empujes est&amp;eacute;n firmados GPG, como si &lt;code&gt;--signed&lt;/code&gt; se pasara a &lt;a href=&quot;git-push&quot;&gt;git-push [1]&lt;/a&gt; . La cadena &lt;code&gt;if-asked&lt;/code&gt; hace que los empujes se firmen si el servidor lo admite, como si &lt;code&gt;--signed=if-asked&lt;/code&gt; se pasara a &lt;code&gt;git push&lt;/code&gt; . Un valor falso puede anular un valor de un archivo de configuraci&amp;oacute;n de menor prioridad. Un indicador de l&amp;iacute;nea de comandos expl&amp;iacute;cito siempre anula esta opci&amp;oacute;n de configuraci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="8555af2d5095b661ce8d37e9e0375fb4c8ea77d6" translate="yes" xml:space="preserve">
          <source>May be used to make sure all submodule commits used by the revisions to be pushed are available on a remote-tracking branch. If &lt;code&gt;check&lt;/code&gt; is used Git will verify that all submodule commits that changed in the revisions to be pushed are available on at least one remote of the submodule. If any commits are missing the push will be aborted and exit with non-zero status. If &lt;code&gt;on-demand&lt;/code&gt; is used all submodules that changed in the revisions to be pushed will be pushed. If on-demand was not able to push all necessary revisions it will also be aborted and exit with non-zero status. If &lt;code&gt;only&lt;/code&gt; is used all submodules will be recursively pushed while the superproject is left unpushed. A value of &lt;code&gt;no&lt;/code&gt; or using &lt;code&gt;--no-recurse-submodules&lt;/code&gt; can be used to override the push.recurseSubmodules configuration variable when no submodule recursion is required.</source>
          <target state="translated">Puede usarse para asegurarse de que todas las confirmaciones de subm&amp;oacute;dulo utilizadas por las revisiones que se van a enviar est&amp;eacute;n disponibles en una rama de seguimiento remoto. Si &lt;code&gt;check&lt;/code&gt; se utiliza Git verificar&amp;aacute; que todos los env&amp;iacute;os subm&amp;oacute;dulo que cambiaron en las revisiones que ser empujado est&amp;aacute;n disponibles en al menos una distancia del subm&amp;oacute;dulo. Si falta alguna confirmaci&amp;oacute;n, la inserci&amp;oacute;n se cancelar&amp;aacute; y saldr&amp;aacute; con un estado distinto de cero. Si se utiliza &lt;code&gt;on-demand&lt;/code&gt; se enviar&amp;aacute;n todos los subm&amp;oacute;dulos que cambiaron en las revisiones que se enviar&amp;aacute;n. Si on-demand no pudo enviar todas las revisiones necesarias, tambi&amp;eacute;n se cancelar&amp;aacute; y se cerrar&amp;aacute; con un estado distinto de cero. Si &lt;code&gt;only&lt;/code&gt; se usa, todos los subm&amp;oacute;dulos se presionar&amp;aacute;n recursivamente mientras el superproyecto se deja sin presionar. Un valor de &lt;code&gt;no&lt;/code&gt; o usando &lt;code&gt;--no-recurse-submodules&lt;/code&gt; se puede utilizar para anular la variable de configuraci&amp;oacute;n push.recurseSubmodules cuando no se requiere recursividad de subm&amp;oacute;dulo.</target>
        </trans-unit>
        <trans-unit id="8be2a61b9ad007dcdaebc339c9660a293e37ceee" translate="yes" xml:space="preserve">
          <source>Mbox file to split. If not given, the mbox is read from the standard input.</source>
          <target state="translated">Archivo Mbox para dividir.Si no se da,el mbox se lee de la entrada estándar.</target>
        </trans-unit>
        <trans-unit id="1ce7743133ea15a3c11834ae295610d6b0aca98e" translate="yes" xml:space="preserve">
          <source>Memory utilization</source>
          <target state="translated">Utilización de la memoria</target>
        </trans-unit>
        <trans-unit id="94804378bc64156caa1411beabf938d0cc1f334a" translate="yes" xml:space="preserve">
          <source>Merge a topic branch into the current branch, which resulted in a fast-forward.</source>
          <target state="translated">Fusionar una rama temática con la actual,lo que resultó en un avance rápido.</target>
        </trans-unit>
        <trans-unit id="aa4cb5d8e33b071846e0985dfd9e8a73b7ff3b77" translate="yes" xml:space="preserve">
          <source>Merge branch &lt;code&gt;maint&lt;/code&gt; into the current branch, but do not make a new commit automatically:</source>
          <target state="translated">Fusionar el &lt;code&gt;maint&lt;/code&gt; rama en la rama actual, pero no realizar una nueva confirmaci&amp;oacute;n autom&amp;aacute;ticamente:</target>
        </trans-unit>
        <trans-unit id="36c2108053218bb1c9bd1daf5d80ef9e2b56153b" translate="yes" xml:space="preserve">
          <source>Merge branch &lt;code&gt;obsolete&lt;/code&gt; into the current branch, using &lt;code&gt;ours&lt;/code&gt; merge strategy:</source>
          <target state="translated">Fusionar la rama &lt;code&gt;obsolete&lt;/code&gt; en la rama actual, usando &lt;code&gt;ours&lt;/code&gt; estrategia de fusi&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="2340cae4ab971b09adab3732a6eccbc0f94439af" translate="yes" xml:space="preserve">
          <source>Merge branches &lt;code&gt;fixes&lt;/code&gt; and &lt;code&gt;enhancements&lt;/code&gt; on top of the current branch, making an octopus merge:</source>
          <target state="translated">Fusionar &lt;code&gt;fixes&lt;/code&gt; y &lt;code&gt;enhancements&lt;/code&gt; ramas en la parte superior de la rama actual, haciendo una fusi&amp;oacute;n de pulpo:</target>
        </trans-unit>
        <trans-unit id="3b3fe151c69070e113efe45497e8fbe34f98eda0" translate="yes" xml:space="preserve">
          <source>Merge into the current branch the remote branch &lt;code&gt;next&lt;/code&gt;:</source>
          <target state="translated">Fusionar en la rama actual la rama remota a &lt;code&gt;next&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="c5d9976d41384cd800a73252d5887846f7995334" translate="yes" xml:space="preserve">
          <source>Merge one patch into CVS</source>
          <target state="translated">Fusionar un parche en el CVS</target>
        </trans-unit>
        <trans-unit id="ebf628d17763f2d1db5244a9d541825468f6e3f2" translate="yes" xml:space="preserve">
          <source>Merge one patch into CVS (-c and -w options). The working directory is within the Git Repo</source>
          <target state="translated">Fusiona un parche en CVS (opciones -c y -w).El directorio de trabajo está dentro del Git Repo</target>
        </trans-unit>
        <trans-unit id="374bc1e6ce1c863c36094e824049bd53454731f0" translate="yes" xml:space="preserve">
          <source>Merge pending patches into CVS automatically &amp;mdash; only if you really know what you are doing</source>
          <target state="translated">Fusionar parches pendientes en CVS autom&amp;aacute;ticamente, solo si realmente sabe lo que est&amp;aacute; haciendo</target>
        </trans-unit>
        <trans-unit id="1ecf516cb34751fcee31d345dc521d62850b1084" translate="yes" xml:space="preserve">
          <source>Merge strategies</source>
          <target state="translated">Estrategias de fusión</target>
        </trans-unit>
        <trans-unit id="6455bb1c3dd50961d850d4ec4f8b22adf354885c" translate="yes" xml:space="preserve">
          <source>Merge the given notes ref into the current notes ref. This will try to merge the changes made by the given notes ref (called &quot;remote&quot;) since the merge-base (if any) into the current notes ref (called &quot;local&quot;).</source>
          <target state="translated">Fusionar las notas dadas en las notas actuales.Esto tratará de fusionar los cambios realizados por el ref de las notas dadas (llamado &quot;remoto&quot;)desde la base de fusión (si la hay)en el ref de las notas actuales (llamado &quot;local&quot;).</target>
        </trans-unit>
        <trans-unit id="06a4a977ae422fbb370e91879e13703bae28bf9d" translate="yes" xml:space="preserve">
          <source>Merge tracking</source>
          <target state="translated">Seguimiento de la fusión</target>
        </trans-unit>
        <trans-unit id="af8c9dbb2cf6a08b436fada56eb16ee91017d8ce" translate="yes" xml:space="preserve">
          <source>Merge workflow</source>
          <target state="translated">Fusionar el flujo de trabajo</target>
        </trans-unit>
        <trans-unit id="01d28a50eda177ec75942bb24c131250cdadabfb" translate="yes" xml:space="preserve">
          <source>Merges</source>
          <target state="translated">Merges</target>
        </trans-unit>
        <trans-unit id="c4dada76f0f6e7dcbd827c4ba6bada46b3c6714c" translate="yes" xml:space="preserve">
          <source>Merges (to be discussed later), as well as operations such as &lt;code&gt;git reset&lt;/code&gt;, which change the currently checked-out commit, generally set ORIG_HEAD to the value HEAD had before the current operation.</source>
          <target state="translated">Las fusiones (que se discutir&amp;aacute;n m&amp;aacute;s adelante), as&amp;iacute; como las operaciones como &lt;code&gt;git reset&lt;/code&gt; , que cambian la confirmaci&amp;oacute;n actualmente extra&amp;iacute;da, generalmente establecen ORIG_HEAD en el valor que HEAD ten&amp;iacute;a antes de la operaci&amp;oacute;n actual.</target>
        </trans-unit>
        <trans-unit id="376269fe69e269c1639bc7c223893145d88653cf" translate="yes" xml:space="preserve">
          <source>Merges are always included. However, their parent list is rewritten: Along each parent, prune away commits that are not included themselves. This results in</source>
          <target state="translated">Las fusiones siempre están incluidas.Sin embargo,su lista de padres se reescribe:A lo largo de cada uno de los padres,se podan los compromisos que no están incluidos.Esto resulta en</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
