<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="git">
    <body>
      <group id="git">
        <trans-unit id="c5ab965e580c550a049049c227e584f98537d08f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;-m&lt;/code&gt; is specified, &lt;code&gt;git read-tree&lt;/code&gt; can perform 3 kinds of merge, a single tree merge if only 1 tree is given, a fast-forward merge with 2 trees, or a 3-way merge if 3 or more trees are provided.</source>
          <target state="translated">Si se especifica &lt;code&gt;-m&lt;/code&gt; , &lt;code&gt;git read-tree&lt;/code&gt; puede realizar 3 tipos de combinaci&amp;oacute;n, una combinaci&amp;oacute;n de un solo &amp;aacute;rbol si solo se proporciona 1 &amp;aacute;rbol, una combinaci&amp;oacute;n de avance r&amp;aacute;pido con 2 &amp;aacute;rboles o una combinaci&amp;oacute;n de 3 v&amp;iacute;as si se proporcionan 3 o m&amp;aacute;s &amp;aacute;rboles .</target>
        </trans-unit>
        <trans-unit id="1f1322547f9936fb21adaa0927130bdfd594f82e" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;-n&lt;/code&gt; or &lt;code&gt;--non-matching&lt;/code&gt; are specified, non-matching pathnames will also be output, in which case all fields in each output record except for &amp;lt;pathname&amp;gt; will be empty. This can be useful when running non-interactively, so that files can be incrementally streamed to STDIN of a long-running check-ignore process, and for each of these files, STDOUT will indicate whether that file matched a pattern or not. (Without this option, it would be impossible to tell whether the absence of output for a given file meant that it didn&amp;rsquo;t match any pattern, or that the output hadn&amp;rsquo;t been generated yet.)</source>
          <target state="translated">Si &lt;code&gt;-n&lt;/code&gt; o &lt;code&gt;--non-matching&lt;/code&gt; se especifican, nombres de rutas no coincidentes tambi&amp;eacute;n ser&amp;aacute;n de salida, en cuyo caso todos los campos de cada registro de salida excepto &amp;lt;nombre de ruta&amp;gt; estar&amp;aacute;n vac&amp;iacute;os. Esto puede ser &amp;uacute;til cuando se ejecuta de forma no interactiva, de modo que los archivos se pueden transmitir de forma incremental a STDIN de un proceso de verificaci&amp;oacute;n-ignorar de larga ejecuci&amp;oacute;n, y para cada uno de estos archivos, STDOUT indicar&amp;aacute; si ese archivo coincide con un patr&amp;oacute;n o no. (Sin esta opci&amp;oacute;n, ser&amp;iacute;a imposible saber si la ausencia de salida para un archivo dado significaba que no coincid&amp;iacute;a con ning&amp;uacute;n patr&amp;oacute;n o que la salida a&amp;uacute;n no se hab&amp;iacute;a generado).</target>
        </trans-unit>
        <trans-unit id="bedfa7472b5b880935d5dde5c2d6b7df2dd5534d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;-o&lt;/code&gt; is specified, output files are created in &amp;lt;dir&amp;gt;. Otherwise they are created in the current working directory. The default path can be set with the &lt;code&gt;format.outputDirectory&lt;/code&gt; configuration option. The &lt;code&gt;-o&lt;/code&gt; option takes precedence over &lt;code&gt;format.outputDirectory&lt;/code&gt;. To store patches in the current working directory even when &lt;code&gt;format.outputDirectory&lt;/code&gt; points elsewhere, use &lt;code&gt;-o .&lt;/code&gt;. All directory components will be created.</source>
          <target state="translated">Si se especifica &lt;code&gt;-o&lt;/code&gt; , los archivos de salida se crean en &amp;lt;dir&amp;gt;. De lo contrario, se crean en el directorio de trabajo actual. La ruta predeterminada se puede establecer con la opci&amp;oacute;n de configuraci&amp;oacute;n &lt;code&gt;format.outputDirectory&lt;/code&gt; . La opci&amp;oacute;n &lt;code&gt;-o&lt;/code&gt; tiene prioridad sobre &lt;code&gt;format.outputDirectory&lt;/code&gt; . Para almacenar parches en el directorio de trabajo actual incluso cuando &lt;code&gt;format.outputDirectory&lt;/code&gt; apunta a otro lugar, use &lt;code&gt;-o .&lt;/code&gt; . Se crear&amp;aacute;n todos los componentes del directorio.</target>
        </trans-unit>
        <trans-unit id="bbc0034ea645324d7719670d640dccda6b5513e5" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;-p&lt;/code&gt; is specified, the contents of &amp;lt;object&amp;gt; are pretty-printed.</source>
          <target state="translated">Si se especifica &lt;code&gt;-p&lt;/code&gt; , el contenido de &amp;lt;object&amp;gt; se imprime de forma bonita.</target>
        </trans-unit>
        <trans-unit id="49cafb1f81b012710180fa1719861bbc315bac4f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;-s&lt;/code&gt; is specified, the size of the &amp;lt;object&amp;gt; in bytes.</source>
          <target state="translated">Si se especifica &lt;code&gt;-s&lt;/code&gt; , el tama&amp;ntilde;o del &amp;lt;objeto&amp;gt; en bytes.</target>
        </trans-unit>
        <trans-unit id="859275c6340e08abbb3b87a577dd1f75bdf60296" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;-t&lt;/code&gt; is specified, one of the &amp;lt;type&amp;gt;.</source>
          <target state="translated">Si se especifica &lt;code&gt;-t&lt;/code&gt; , uno de los &amp;lt;tipo&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="77cb52b6f5e5f8b68fe5657e97a4dba5f22808fe" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;-v&lt;/code&gt; is specified, the script reports what it is doing.</source>
          <target state="translated">Si se especifica &lt;code&gt;-v&lt;/code&gt; , el script informa lo que est&amp;aacute; haciendo.</target>
        </trans-unit>
        <trans-unit id="f7c94cac86b7d031a538f6e54d51ce5da54af947" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;-z&lt;/code&gt; is specified, the pathnames in the output are delimited by the null character; if &lt;code&gt;--verbose&lt;/code&gt; is also specified then null characters are also used instead of colons and hard tabs:</source>
          <target state="translated">Si se especifica &lt;code&gt;-z&lt;/code&gt; , los nombres de ruta en la salida est&amp;aacute;n delimitados por el car&amp;aacute;cter nulo; si tambi&amp;eacute;n se especifica &lt;code&gt;--verbose&lt;/code&gt; , tambi&amp;eacute;n se utilizan caracteres nulos en lugar de dos puntos y tabulaciones r&amp;iacute;gidas:</target>
        </trans-unit>
        <trans-unit id="df5ef035453e7c733a2a29435ee6b85f1b9c7b00" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;:&amp;lt;funcname&amp;gt;&lt;/code&gt; is given in place of &lt;code&gt;&amp;lt;start&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;end&amp;gt;&lt;/code&gt;, it is a regular expression that denotes the range from the first funcname line that matches &lt;code&gt;&amp;lt;funcname&amp;gt;&lt;/code&gt;, up to the next funcname line. &lt;code&gt;:&amp;lt;funcname&amp;gt;&lt;/code&gt; searches from the end of the previous &lt;code&gt;-L&lt;/code&gt; range, if any, otherwise from the start of file. &lt;code&gt;^:&amp;lt;funcname&amp;gt;&lt;/code&gt; searches from the start of file. The function names are determined in the same way as &lt;code&gt;git diff&lt;/code&gt; works out patch hunk headers (see &lt;code&gt;Defining a custom hunk-header&lt;/code&gt; in &lt;a href=&quot;gitattributes&quot;&gt;gitattributes[5]&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54b1b9cb08e8013285c455de408ae4d63672e927" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;GIT_TRACE2_BRIEF&lt;/code&gt; or &lt;code&gt;trace2.normalBrief&lt;/code&gt; is true, the &lt;code&gt;time&lt;/code&gt;, &lt;code&gt;filename&lt;/code&gt;, and &lt;code&gt;line&lt;/code&gt; fields are omitted.</source>
          <target state="translated">Si &lt;code&gt;GIT_TRACE2_BRIEF&lt;/code&gt; o &lt;code&gt;trace2.normalBrief&lt;/code&gt; es verdadero, se omiten los campos de &lt;code&gt;time&lt;/code&gt; , &lt;code&gt;filename&lt;/code&gt; y &lt;code&gt;line&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2e9a7edfc47ae5456f77e7777204d6f377e2ee4c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;GIT_TRACE2_EVENT_BRIEF&lt;/code&gt; or &lt;code&gt;trace2.eventBrief&lt;/code&gt; is true, the &lt;code&gt;file&lt;/code&gt; and &lt;code&gt;line&lt;/code&gt; fields are omitted from all events and the &lt;code&gt;time&lt;/code&gt; field is only present on the &quot;start&quot; and &quot;atexit&quot; events.</source>
          <target state="translated">Si &lt;code&gt;GIT_TRACE2_EVENT_BRIEF&lt;/code&gt; o &lt;code&gt;trace2.eventBrief&lt;/code&gt; es verdadero, los campos de &lt;code&gt;file&lt;/code&gt; y &lt;code&gt;line&lt;/code&gt; se omiten de todos los eventos y el campo de &lt;code&gt;time&lt;/code&gt; solo est&amp;aacute; presente en los eventos &quot;start&quot; y &quot;atexit&quot;.</target>
        </trans-unit>
        <trans-unit id="1f02cbb9b13595b2ae6e45bc6f6b5fd9cfaab0a2" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;GIT_TRACE2_PERF_BRIEF&lt;/code&gt; or &lt;code&gt;trace2.perfBrief&lt;/code&gt; is true, the &lt;code&gt;time&lt;/code&gt;, &lt;code&gt;file&lt;/code&gt;, and &lt;code&gt;line&lt;/code&gt; fields are omitted.</source>
          <target state="translated">Si &lt;code&gt;GIT_TRACE2_PERF_BRIEF&lt;/code&gt; o &lt;code&gt;trace2.perfBrief&lt;/code&gt; es verdadero, se omiten los campos de &lt;code&gt;time&lt;/code&gt; , &lt;code&gt;file&lt;/code&gt; y &lt;code&gt;line&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ac54e4f3ca84b268e2b102a57942d2590e1ed97e" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;branch.&amp;lt;name&amp;gt;.merge&lt;/code&gt; configuration for the current branch &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; exists, that is the name of the branch at the remote site that is merged.</source>
          <target state="translated">Si &lt;code&gt;branch.&amp;lt;name&amp;gt;.merge&lt;/code&gt; configuraci&amp;oacute;n branch. &amp;lt;nombre&amp;gt; .merge para la rama actual &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; , ese es el nombre de la rama en el sitio remoto que se fusiona.</target>
        </trans-unit>
        <trans-unit id="0bbbd298acfcfe77553aeabe5dcce9895508b92f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;core.ignoreCase=true&lt;/code&gt;, then the pattern-matching algorithm will use a case-insensitive check. This corrects for case mismatched filenames in the &lt;code&gt;git sparse-checkout set&lt;/code&gt; command to reflect the expected cone in the working directory.</source>
          <target state="translated">Si &lt;code&gt;core.ignoreCase=true&lt;/code&gt; , entonces el algoritmo de coincidencia de patrones utilizar&amp;aacute; una verificaci&amp;oacute;n que no distingue entre may&amp;uacute;sculas y min&amp;uacute;sculas. Esto corrige los nombres de archivo que no coinciden en los casos en el comando &lt;code&gt;git sparse-checkout set&lt;/code&gt; para reflejar el cono esperado en el directorio de trabajo.</target>
        </trans-unit>
        <trans-unit id="e0b5d0106d1c8675cc37e497ff6608e05f8526d9" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;core.safecrlf&lt;/code&gt; is set to &quot;true&quot; or &quot;warn&quot;, Git verifies if the conversion is reversible for the current setting of &lt;code&gt;core.autocrlf&lt;/code&gt;. For &quot;true&quot;, Git rejects irreversible conversions; for &quot;warn&quot;, Git only prints a warning but accepts an irreversible conversion. The safety triggers to prevent such a conversion done to the files in the work tree, but there are a few exceptions. Even though&amp;hellip;​</source>
          <target state="translated">Si &lt;code&gt;core.safecrlf&lt;/code&gt; se establece en &quot;true&quot; o &quot;warn&quot;, Git verifica si la conversi&amp;oacute;n es reversible para la configuraci&amp;oacute;n actual de &lt;code&gt;core.autocrlf&lt;/code&gt; . Para &quot;verdadero&quot;, Git rechaza las conversiones irreversibles; para &quot;advertir&quot;, Git solo imprime una advertencia pero acepta una conversi&amp;oacute;n irreversible. La seguridad se activa para evitar que dicha conversi&amp;oacute;n se realice en los archivos del &amp;aacute;rbol de trabajo, pero hay algunas excepciones. Aunque ...</target>
        </trans-unit>
        <trans-unit id="a8fd82d7f01c8cd14090b39826adb8859d4c03b6" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;core.sparseCheckoutCone=true&lt;/code&gt;, then Git will parse the sparse-checkout file expecting patterns of these types. Git will warn if the patterns do not match. If the patterns do match the expected format, then Git will use faster hash- based algorithms to compute inclusion in the sparse-checkout.</source>
          <target state="translated">Si &lt;code&gt;core.sparseCheckoutCone=true&lt;/code&gt; , entonces Git analizar&amp;aacute; el archivo de pago disperso esperando patrones de estos tipos. Git advertir&amp;aacute; si los patrones no coinciden. Si los patrones coinciden con el formato esperado, entonces Git usar&amp;aacute; algoritmos basados ​​en hash m&amp;aacute;s r&amp;aacute;pidos para calcular la inclusi&amp;oacute;n en el checkout disperso.</target>
        </trans-unit>
        <trans-unit id="9f2eb1f9e30347412b91990fde6d0d3118015f0c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;credential.helper&lt;/code&gt; is configured to the empty string, this resets the helper list to empty (so you may override a helper set by a lower-priority config file by configuring the empty-string helper, followed by whatever set of helpers you would like).</source>
          <target state="translated">Si &lt;code&gt;credential.helper&lt;/code&gt; est&amp;aacute; configurado para la cadena vac&amp;iacute;a, esto restablece la lista de ayudantes a vac&amp;iacute;a (por lo que puede anular un conjunto de ayudantes por un archivo de configuraci&amp;oacute;n de menor prioridad configurando el ayudante de cadena vac&amp;iacute;a, seguido de cualquier conjunto de ayudantes que desee ).</target>
        </trans-unit>
        <trans-unit id="6f6bc24ce4d9cb03fd023baafceb347acba1bf38" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;false&lt;/code&gt;, &lt;code&gt;git log&lt;/code&gt; and related commands will not treat the initial commit as a big creation event. Any root commits in &lt;code&gt;git log -p&lt;/code&gt; output would be shown without a diff attached. The default is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">Si es &lt;code&gt;false&lt;/code&gt; , &lt;code&gt;git log&lt;/code&gt; y los comandos relacionados no tratar&amp;aacute;n la confirmaci&amp;oacute;n inicial como un gran evento de creaci&amp;oacute;n. Cualquier confirmaci&amp;oacute;n de root en la salida de &lt;code&gt;git log -p&lt;/code&gt; se mostrar&amp;iacute;a sin un diff adjunto. El valor predeterminado es &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="176a2b5b60655848aad57cb4f6f5216b8fca3bab" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;git merge-index&lt;/code&gt; is called with multiple &amp;lt;file&amp;gt;s (or -a) then it processes them in turn only stopping if merge returns a non-zero exit code.</source>
          <target state="translated">Si se llama a &lt;code&gt;git merge-index&lt;/code&gt; con varios &amp;lt;file&amp;gt; s (o -a), entonces los procesa a su vez y solo se detiene si merge devuelve un c&amp;oacute;digo de salida distinto de cero.</target>
        </trans-unit>
        <trans-unit id="806256aa8b91febcc951ef689b4cdbc521c56b19" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;git svn&lt;/code&gt; is configured to fetch branches (and --follow-branches is in effect), it sometimes creates multiple Git branches for one SVN branch, where the additional branches have names of the form &lt;code&gt;branchname@nnn&lt;/code&gt; (with nnn an SVN revision number). These additional branches are created if &lt;code&gt;git svn&lt;/code&gt; cannot find a parent commit for the first commit in an SVN branch, to connect the branch to the history of the other branches.</source>
          <target state="translated">Si &lt;code&gt;git svn&lt;/code&gt; est&amp;aacute; configurado para buscar ramas (y --follow-branch est&amp;aacute; en efecto), a veces crea m&amp;uacute;ltiples ramas Git para una rama SVN, donde las ramas adicionales tienen nombres de la forma &lt;code&gt;branchname@nnn&lt;/code&gt; (con nnn un n&amp;uacute;mero de revisi&amp;oacute;n SVN ). Estas ramas adicionales se crean si &lt;code&gt;git svn&lt;/code&gt; no puede encontrar una confirmaci&amp;oacute;n principal para la primera confirmaci&amp;oacute;n en una rama SVN, para conectar la rama al historial de las otras ramas.</target>
        </trans-unit>
        <trans-unit id="ea83fb8f1cd42b6f4ec377884889f8ee539b7922" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;our&lt;/code&gt; version introduces whitespace changes but &lt;code&gt;their&lt;/code&gt; version includes a substantial change, &lt;code&gt;their&lt;/code&gt; version is used;</source>
          <target state="translated">Si &lt;code&gt;our&lt;/code&gt; versi&amp;oacute;n introduce cambios en espacios en blanco pero &lt;code&gt;their&lt;/code&gt; versi&amp;oacute;n incluye un cambio sustancial, se utiliza &lt;code&gt;their&lt;/code&gt; versi&amp;oacute;n;</target>
        </trans-unit>
        <trans-unit id="a540055d45818789fbb8422bbf0d3790f08d9718" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;repack.packKeptObjects&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;, then any pack-files with an associated &lt;code&gt;.keep&lt;/code&gt; file will not be selected for the batch to repack.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a3c5f8b5c3f8823d3bb0bf75c68202ef91e0068" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;status.submoduleSummary&lt;/code&gt; is set to a non zero number or true (identical to -1 or an unlimited number), the submodule summary will be enabled for the long format and a summary of commits for modified submodules will be shown (see --summary-limit option of &lt;a href=&quot;git-submodule&quot;&gt;git-submodule[1]&lt;/a&gt;). Please note that the summary output from the status command will be suppressed for all submodules when &lt;code&gt;diff.ignoreSubmodules&lt;/code&gt; is set to &lt;code&gt;all&lt;/code&gt; or only for those submodules where &lt;code&gt;submodule.&amp;lt;name&amp;gt;.ignore=all&lt;/code&gt;. To also view the summary for ignored submodules you can either use the --ignore-submodules=dirty command line option or the &lt;code&gt;git submodule summary&lt;/code&gt; command, which shows a similar output but does not honor these settings.</source>
          <target state="translated">Si &lt;code&gt;status.submoduleSummary&lt;/code&gt; se establece en un n&amp;uacute;mero distinto de cero o verdadero (id&amp;eacute;ntico a -1 o un n&amp;uacute;mero ilimitado), el resumen del subm&amp;oacute;dulo se habilitar&amp;aacute; para el formato largo y se mostrar&amp;aacute; un resumen de las confirmaciones para los subm&amp;oacute;dulos modificados (ver --summary -opci&amp;oacute;n l&amp;iacute;mite de &lt;a href=&quot;git-submodule&quot;&gt;git-submodule [1]&lt;/a&gt; ). Tenga en cuenta que la salida de resumen del comando de estado se suprimir&amp;aacute; para todos los subm&amp;oacute;dulos cuando &lt;code&gt;diff.ignoreSubmodules&lt;/code&gt; se establezca en &lt;code&gt;all&lt;/code&gt; o solo para aquellos subm&amp;oacute;dulos donde &lt;code&gt;submodule.&amp;lt;name&amp;gt;.ignore=all&lt;/code&gt; . Para ver tambi&amp;eacute;n el resumen de los subm&amp;oacute;dulos ignorados, puede usar la opci&amp;oacute;n de l&amp;iacute;nea de comando --ignore-submodules = dirty o el &lt;code&gt;git submodule summary&lt;/code&gt; comando, que muestra un resultado similar pero no respeta estas configuraciones.</target>
        </trans-unit>
        <trans-unit id="9e9c3270ca55bc57874ba3c8e582e2598d79892a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;subsystem&lt;/code&gt; is rebased against &lt;code&gt;master&lt;/code&gt;, the following happens:</source>
          <target state="translated">Si el &lt;code&gt;subsystem&lt;/code&gt; se basa en el &lt;code&gt;master&lt;/code&gt; , ocurre lo siguiente:</target>
        </trans-unit>
        <trans-unit id="601fb7e577607a9227812e9cbf0586e6f099c5c2" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;their&lt;/code&gt; version only introduces whitespace changes to a line, &lt;code&gt;our&lt;/code&gt; version is used;</source>
          <target state="translated">Si &lt;code&gt;their&lt;/code&gt; versi&amp;oacute;n solo introduce cambios de espacio en blanco en una l&amp;iacute;nea, se usa &lt;code&gt;our&lt;/code&gt; versi&amp;oacute;n;</target>
        </trans-unit>
        <trans-unit id="8afd53e5e6b34e88bd67e48774d4e9aa34d681c7" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;git log&lt;/code&gt; and related commands will act as if the &lt;code&gt;--show-signature&lt;/code&gt; option was passed to them.</source>
          <target state="translated">Si es &lt;code&gt;true&lt;/code&gt; , &lt;code&gt;git log&lt;/code&gt; y los comandos relacionados actuar&amp;aacute;n como si se les hubiera pasado la opci&amp;oacute;n &lt;code&gt;--show-signature&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="30fb3a857bee5620305914164cd0d4800cd1bf39" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;git log&lt;/code&gt; will act as if the &lt;code&gt;--follow&lt;/code&gt; option was used when a single &amp;lt;path&amp;gt; is given. This has the same limitations as &lt;code&gt;--follow&lt;/code&gt;, i.e. it cannot be used to follow multiple files and does not work well on non-linear history.</source>
          <target state="translated">Si es &lt;code&gt;true&lt;/code&gt; , &lt;code&gt;git log&lt;/code&gt; actuar&amp;aacute; como si se &lt;code&gt;--follow&lt;/code&gt; opci&amp;oacute;n --follow cuando se proporciona un solo &amp;lt;path&amp;gt;. Tiene las mismas limitaciones que &lt;code&gt;--follow&lt;/code&gt; , es decir, no se puede utilizar para seguir varios archivos y no funciona bien en el historial no lineal.</target>
        </trans-unit>
        <trans-unit id="1ee512d5daa33e9512f53b0ef8141d045d9eb4b9" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;true&lt;/code&gt;, indicate that the caller wants hash algorithm information to be passed back from the remote. This mode is used when fetching refs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e427e8f5bde6693ff553f72c72fbaf5c9a84e60f" translate="yes" xml:space="preserve">
          <source>If Alice wants to visualize what Bob did since their histories forked she can issue the following command:</source>
          <target state="translated">Si Alice quiere visualizar lo que Bob hizo desde que sus historias se bifurcaron,puede emitir la siguiente orden:</target>
        </trans-unit>
        <trans-unit id="38d81a70b720705355c01f2f151a0b608b67e1f5" translate="yes" xml:space="preserve">
          <source>If Bob later decides to work from a different host, he can still perform clones and pulls using the ssh protocol:</source>
          <target state="translated">Si Bob más tarde decide trabajar desde un huésped diferente,todavía puede realizar clones y tirones usando el protocolo ssh:</target>
        </trans-unit>
        <trans-unit id="f8402010ea4f934676f08474104de477d81e1176" translate="yes" xml:space="preserve">
          <source>If I make a change on two branches but revert it on one, why does the merge of those branches include the change?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="906533644a5e321915983ba584ed131ee5f02be3" translate="yes" xml:space="preserve">
          <source>If X is found to be &quot;bad&quot;, then we know that its descendants are all &quot;bad&quot;, so we want to say that:</source>
          <target state="translated">Si se encuentra que X es &quot;malo&quot;,entonces sabemos que sus descendientes son todos &quot;malos&quot;,así que queremos decir eso:</target>
        </trans-unit>
        <trans-unit id="585173cb924da5e21521ae8038b0882b2bd9054d" translate="yes" xml:space="preserve">
          <source>If X is found to be &quot;good&quot;, then we know that its ancestors are all &quot;good&quot;, so we want to say that:</source>
          <target state="translated">Si se encuentra que X es &quot;bueno&quot;,entonces sabemos que sus ancestros son todos &quot;buenos&quot;,así que queremos decir eso:</target>
        </trans-unit>
        <trans-unit id="5b8abb6b4933866023868019ddfccc59a8fddfdf" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;&amp;lt;pattern&amp;gt;&lt;/code&gt; is given, it is used as a shell wildcard to restrict the output to matching branches. If multiple patterns are given, a branch is shown if it matches any of the patterns.</source>
          <target state="translated">Si se proporciona un &lt;code&gt;&amp;lt;pattern&amp;gt;&lt;/code&gt; , se utiliza como comod&amp;iacute;n de shell para restringir la salida a ramas coincidentes. Si se dan varios patrones, se muestra una rama si coincide con alguno de los patrones.</target>
        </trans-unit>
        <trans-unit id="9af8e725fef48828fa7bc334de43f0ec2851ec0b" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;merge&lt;/code&gt; command fails for any reason other than merge conflicts (i.e. when the merge operation did not even start), it is rescheduled immediately.</source>
          <target state="translated">Si un comando de &lt;code&gt;merge&lt;/code&gt; falla por cualquier motivo que no sea conflictos de combinaci&amp;oacute;n (es decir, cuando la operaci&amp;oacute;n de combinaci&amp;oacute;n ni siquiera se inici&amp;oacute;), se reprograma inmediatamente.</target>
        </trans-unit>
        <trans-unit id="78142494afa000f59dc94a96d37bd84306c42e5e" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;no-interactive-login&lt;/code&gt; command exists, then it is run and the interactive shell is aborted.</source>
          <target state="translated">Si &lt;code&gt;no-interactive-login&lt;/code&gt; un comando de inicio de sesi&amp;oacute;n no interactivo , se ejecuta y se cancela el shell interactivo.</target>
        </trans-unit>
        <trans-unit id="7f80f5447bc118a0311c9425234560dac2c0a613" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;pattern&lt;/code&gt; is given, only refs matching the given shell glob are shown. If the pattern does not contain a globbing character (&lt;code&gt;?&lt;/code&gt;, &lt;code&gt;*&lt;/code&gt;, or &lt;code&gt;[&lt;/code&gt;), it is turned into a prefix match by appending &lt;code&gt;/*&lt;/code&gt;.</source>
          <target state="translated">Si se proporciona un &lt;code&gt;pattern&lt;/code&gt; , solo se muestran las referencias que coinciden con el glob de shell dado. Si el patr&amp;oacute;n no contiene un car&amp;aacute;cter global ( &lt;code&gt;?&lt;/code&gt; , &lt;code&gt;*&lt;/code&gt; O &lt;code&gt;[&lt;/code&gt; ), se convierte en una coincidencia de prefijo agregando &lt;code&gt;/*&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="744bace39aac155f24f5426e32b134c34f641c3b" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;~/git-shell-commands&lt;/code&gt; directory is present, &lt;code&gt;git shell&lt;/code&gt; can also be run interactively (with no arguments). If a &lt;code&gt;help&lt;/code&gt; command is present in the &lt;code&gt;git-shell-commands&lt;/code&gt; directory, it is run to provide the user with an overview of allowed actions. Then a &quot;git&amp;gt; &quot; prompt is presented at which one can enter any of the commands from the &lt;code&gt;git-shell-commands&lt;/code&gt; directory, or &lt;code&gt;exit&lt;/code&gt; to close the connection.</source>
          <target state="translated">Si hay un directorio &lt;code&gt;~/git-shell-commands&lt;/code&gt; , &lt;code&gt;git shell&lt;/code&gt; tambi&amp;eacute;n se puede ejecutar de forma interactiva (sin argumentos). Si hay un comando de &lt;code&gt;help&lt;/code&gt; en el directorio &lt;code&gt;git-shell-commands&lt;/code&gt; , se ejecuta para proporcionar al usuario una descripci&amp;oacute;n general de las acciones permitidas. Luego se presenta un indicador &quot;git&amp;gt;&quot; en el que se puede ingresar cualquiera de los comandos del directorio &lt;code&gt;git-shell-commands&lt;/code&gt; , o &lt;code&gt;exit&lt;/code&gt; para cerrar la conexi&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="aa403bcc24255cf8941b29ab4148b7eee12a6185" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;~/git-shell-commands&lt;/code&gt; directory is present, &lt;code&gt;git shell&lt;/code&gt; will also handle other, custom commands by running &quot;&lt;code&gt;git-shell-commands/&amp;lt;command&amp;gt; &amp;lt;arguments&amp;gt;&lt;/code&gt;&quot; from the user&amp;rsquo;s home directory.</source>
          <target state="translated">Si hay un directorio &lt;code&gt;~/git-shell-commands&lt;/code&gt; , &lt;code&gt;git shell&lt;/code&gt; tambi&amp;eacute;n manejar&amp;aacute; otros comandos personalizados ejecutando &quot; &lt;code&gt;git-shell-commands/&amp;lt;command&amp;gt; &amp;lt;arguments&amp;gt;&lt;/code&gt; &quot; desde el directorio de inicio del usuario.</target>
        </trans-unit>
        <trans-unit id="106b7929c0261fff657b2746b76dd80d35492e74" translate="yes" xml:space="preserve">
          <source>If a Git client that does not support the &lt;code&gt;working-tree-encoding&lt;/code&gt; attribute adds a new file &lt;code&gt;bar.ps1&lt;/code&gt;, then &lt;code&gt;bar.ps1&lt;/code&gt; will be stored &quot;as-is&quot; internally (in this example probably as UTF-16). A client with &lt;code&gt;working-tree-encoding&lt;/code&gt; support will interpret the internal contents as UTF-8 and try to convert it to UTF-16 on checkout. That operation will fail and cause an error.</source>
          <target state="translated">Si un cliente de Git que no admite el atributo de &lt;code&gt;working-tree-encoding&lt;/code&gt; agrega un nuevo archivo &lt;code&gt;bar.ps1&lt;/code&gt; , &lt;code&gt;bar.ps1&lt;/code&gt; se almacenar&amp;aacute; &quot;tal cual&quot; internamente (en este ejemplo probablemente como UTF-16). Un cliente con soporte de &lt;code&gt;working-tree-encoding&lt;/code&gt; interpretar&amp;aacute; el contenido interno como UTF-8 e intentar&amp;aacute; convertirlo a UTF-16 al finalizar la compra. Esa operaci&amp;oacute;n fallar&amp;aacute; y provocar&amp;aacute; un error.</target>
        </trans-unit>
        <trans-unit id="84278502dbc74a9c4cc8dd831a2c5f189f159ac0" translate="yes" xml:space="preserve">
          <source>If a Git repository includes branches &lt;code&gt;refs/remotes/origin/p4&lt;/code&gt;, these will be fetched and consulted first during a &lt;code&gt;git p4 sync&lt;/code&gt;. Since importing directly from p4 is considerably slower than pulling changes from a Git remote, this can be useful in a multi-developer environment.</source>
          <target state="translated">Si un repositorio de Git incluye ramas &lt;code&gt;refs/remotes/origin/p4&lt;/code&gt; , estas se buscar&amp;aacute;n y consultar&amp;aacute;n primero durante una &lt;code&gt;git p4 sync&lt;/code&gt; . Dado que importar directamente desde p4 es considerablemente m&amp;aacute;s lento que extraer cambios desde un control remoto de Git, esto puede ser &amp;uacute;til en un entorno de m&amp;uacute;ltiples desarrolladores.</target>
        </trans-unit>
        <trans-unit id="af291be12b7b5a290c76485729b6b8f4918ca983" translate="yes" xml:space="preserve">
          <source>If a command, or a guide, is given, a manual page for that command or guide is brought up. The &lt;code&gt;man&lt;/code&gt; program is used by default for this purpose, but this can be overridden by other options or configuration variables.</source>
          <target state="translated">Si se da un comando, o una gu&amp;iacute;a, se abre una p&amp;aacute;gina de manual para ese comando o gu&amp;iacute;a. El programa &lt;code&gt;man&lt;/code&gt; se utiliza por defecto para este prop&amp;oacute;sito, pero esto puede ser anulado por otras opciones o variables de configuraci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="72743ffe0426b38cdd1755e732e28a11a9ff3a78" translate="yes" xml:space="preserve">
          <source>If a commit being cherry picked duplicates a commit already in the current history, it will become empty. By default these redundant commits cause &lt;code&gt;cherry-pick&lt;/code&gt; to stop so the user can examine the commit. This option overrides that behavior and creates an empty commit object. Implies &lt;code&gt;--allow-empty&lt;/code&gt;.</source>
          <target state="translated">Si una confirmaci&amp;oacute;n que se selecciona con precisi&amp;oacute;n duplica una confirmaci&amp;oacute;n que ya est&amp;aacute; en el historial actual, quedar&amp;aacute; vac&amp;iacute;a. De forma predeterminada, estas confirmaciones redundantes hacen que &lt;code&gt;cherry-pick&lt;/code&gt; detenga para que el usuario pueda examinar la confirmaci&amp;oacute;n. Esta opci&amp;oacute;n anula ese comportamiento y crea un objeto de confirmaci&amp;oacute;n vac&amp;iacute;o. Implica &lt;code&gt;--allow-empty&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4b42bbbaf339d6cf05d45edbdf2ada972df70aa1" translate="yes" xml:space="preserve">
          <source>If a diff tool is not specified, &lt;code&gt;git difftool&lt;/code&gt; will use the configuration variable &lt;code&gt;diff.tool&lt;/code&gt;. If the configuration variable &lt;code&gt;diff.tool&lt;/code&gt; is not set, &lt;code&gt;git difftool&lt;/code&gt; will pick a suitable default.</source>
          <target state="translated">Si no se especifica una herramienta de diferencias, &lt;code&gt;git difftool&lt;/code&gt; utilizar&amp;aacute; la variable de configuraci&amp;oacute;n &lt;code&gt;diff.tool&lt;/code&gt; . Si la variable de configuraci&amp;oacute;n &lt;code&gt;diff.tool&lt;/code&gt; no est&amp;aacute; establecida, &lt;code&gt;git difftool&lt;/code&gt; elegir&amp;aacute; un valor predeterminado adecuado.</target>
        </trans-unit>
        <trans-unit id="a8ee98dcb134f1a2c8067ffe5665347c4c70f9e4" translate="yes" xml:space="preserve">
          <source>If a fatal error occurs, the program writes the error message to stderr and exits. The caller should expect that a suitable error message has been printed if the child closes the connection without completing a valid response for the current command.</source>
          <target state="translated">Si se produce un error fatal,el programa escribe el mensaje de error en stderr y sale.El que llama debe esperar que se imprima un mensaje de error adecuado si el niño cierra la conexión sin completar una respuesta válida para el comando actual.</target>
        </trans-unit>
        <trans-unit id="571d71cd29e09f41d5c855a2a419d634cc0eecce" translate="yes" xml:space="preserve">
          <source>If a filter &lt;code&gt;must&lt;/code&gt; succeed in order to make the stored contents usable, you can declare that the filter is &lt;code&gt;required&lt;/code&gt;, in the configuration:</source>
          <target state="translated">Si un filtro &lt;code&gt;must&lt;/code&gt; tener &amp;eacute;xito para que el contenido almacenado sea utilizable, puede declarar que el filtro es &lt;code&gt;required&lt;/code&gt; , en la configuraci&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="22e70bb4ff6d3a3dd5464ffc106fa14107a4c8dc" translate="yes" xml:space="preserve">
          <source>If a git directory of a submodule is inside the submodule, move the git directory of the submodule into its superproject&amp;rsquo;s &lt;code&gt;$GIT_DIR/modules&lt;/code&gt; path and then connect the git directory and its working directory by setting the &lt;code&gt;core.worktree&lt;/code&gt; and adding a .git file pointing to the git directory embedded in the superprojects git directory.</source>
          <target state="translated">Si un directorio git de un subm&amp;oacute;dulo est&amp;aacute; dentro del subm&amp;oacute;dulo, mueva el directorio git del subm&amp;oacute;dulo a la &lt;code&gt;$GIT_DIR/modules&lt;/code&gt; su superproyecto y luego conecte el directorio git y su directorio de trabajo configurando &lt;code&gt;core.worktree&lt;/code&gt; y agregando un archivo .git apuntando al directorio git incrustado en el directorio git de superproyectos.</target>
        </trans-unit>
        <trans-unit id="7b7f1fa74f78e5b674bbee244bef979691bc168d" translate="yes" xml:space="preserve">
          <source>If a helper advertises &lt;code&gt;connect&lt;/code&gt;, Git will use it if possible and fall back to another capability if the helper requests so when connecting (see the &lt;code&gt;connect&lt;/code&gt; command under COMMANDS). When choosing between &lt;code&gt;fetch&lt;/code&gt; and &lt;code&gt;import&lt;/code&gt;, Git prefers &lt;code&gt;fetch&lt;/code&gt;. Other frontends may have some other order of preference.</source>
          <target state="translated">Si un asistente anuncia &lt;code&gt;connect&lt;/code&gt; , Git lo usar&amp;aacute; si es posible y recurrir&amp;aacute; a otra capacidad si el asistente lo solicita cuando se conecte (consulte el comando &lt;code&gt;connect&lt;/code&gt; en COMANDOS). Al elegir entre &lt;code&gt;fetch&lt;/code&gt; e &lt;code&gt;import&lt;/code&gt; ar , Git prefiere &lt;code&gt;fetch&lt;/code&gt; . Otras interfaces pueden tener alg&amp;uacute;n otro orden de preferencia.</target>
        </trans-unit>
        <trans-unit id="148562d25b0603b8eee662bc94ef7dd269783449" translate="yes" xml:space="preserve">
          <source>If a helper advertises &lt;code&gt;connect&lt;/code&gt;, Git will use it if possible and fall back to another capability if the helper requests so when connecting (see the &lt;code&gt;connect&lt;/code&gt; command under COMMANDS). When choosing between &lt;code&gt;push&lt;/code&gt; and &lt;code&gt;export&lt;/code&gt;, Git prefers &lt;code&gt;push&lt;/code&gt;. Other frontends may have some other order of preference.</source>
          <target state="translated">Si un asistente anuncia &lt;code&gt;connect&lt;/code&gt; , Git lo usar&amp;aacute; si es posible y recurrir&amp;aacute; a otra capacidad si el asistente lo solicita cuando se conecte (consulte el comando &lt;code&gt;connect&lt;/code&gt; en COMANDOS). Al elegir entre &lt;code&gt;push&lt;/code&gt; y &lt;code&gt;export&lt;/code&gt; , Git prefiere &lt;code&gt;push&lt;/code&gt; . Otras interfaces pueden tener alg&amp;uacute;n otro orden de preferencia.</target>
        </trans-unit>
        <trans-unit id="fa7f2d8c2e0ee7753a285dedc0954f30b43daa88" translate="yes" xml:space="preserve">
          <source>If a helper fails to perform the requested operation or needs to notify the user of a potential issue, it may write to stderr.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2388ab5f8918a49ad2647c3d1835f78b1fd11f78" translate="yes" xml:space="preserve">
          <source>If a helper outputs a &lt;code&gt;quit&lt;/code&gt; attribute with a value of &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;1&lt;/code&gt;, no further helpers will be consulted, nor will the user be prompted (if no credential has been provided, the operation will then fail).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79eaf960175c04b54e3507607c968b768d5dc83c" translate="yes" xml:space="preserve">
          <source>If a helper receives any other operation, it should silently ignore the request. This leaves room for future operations to be added (older helpers will just ignore the new requests).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c8d1c4561ad329297670b7c11b5cea0c040fa93" translate="yes" xml:space="preserve">
          <source>If a line exists in both the source and destination, exists only once, and starts with this text, this algorithm attempts to prevent it from appearing as a deletion or addition in the output. It uses the &quot;patience diff&quot; algorithm internally.</source>
          <target state="translated">Si una línea existe tanto en la fuente como en el destino,existe sólo una vez y comienza con este texto,este algoritmo intenta evitar que aparezca como una supresión o adición en la salida.Utiliza el algoritmo &quot;patience diff&quot; internamente.</target>
        </trans-unit>
        <trans-unit id="03800f18f812afe9c365f3cd10e3618c12ca274e" translate="yes" xml:space="preserve">
          <source>If a linked working tree is stored on a portable device or network share which is not always mounted, you can prevent its administrative files from being pruned by issuing the &lt;code&gt;git worktree lock&lt;/code&gt; command, optionally specifying &lt;code&gt;--reason&lt;/code&gt; to explain why the working tree is locked.</source>
          <target state="translated">Si un &amp;aacute;rbol de trabajo vinculado se almacena en un dispositivo port&amp;aacute;til o en un recurso compartido de red que no siempre est&amp;aacute; montado, puede evitar que se &lt;code&gt;git worktree lock&lt;/code&gt; sus archivos administrativos emitiendo el comando git worktree lock , especificando opcionalmente &lt;code&gt;--reason&lt;/code&gt; para explicar por qu&amp;eacute; el &amp;aacute;rbol de trabajo est&amp;aacute; bloqueado .</target>
        </trans-unit>
        <trans-unit id="055300f804a90741eca19d86c43f3b133b4438b5" translate="yes" xml:space="preserve">
          <source>If a merge resolution program is not specified, &lt;code&gt;git mergetool&lt;/code&gt; will use the configuration variable &lt;code&gt;merge.tool&lt;/code&gt;. If the configuration variable &lt;code&gt;merge.tool&lt;/code&gt; is not set, &lt;code&gt;git mergetool&lt;/code&gt; will pick a suitable default.</source>
          <target state="translated">Si no se especifica un programa de resoluci&amp;oacute;n de fusi&amp;oacute;n, &lt;code&gt;git mergetool&lt;/code&gt; usar&amp;aacute; la variable de configuraci&amp;oacute;n &lt;code&gt;merge.tool&lt;/code&gt; . Si la variable de configuraci&amp;oacute;n &lt;code&gt;merge.tool&lt;/code&gt; no est&amp;aacute; establecida, &lt;code&gt;git mergetool&lt;/code&gt; elegir&amp;aacute; un valor predeterminado adecuado.</target>
        </trans-unit>
        <trans-unit id="1ea5bcda19ff920edc6797065824126354674b5b" translate="yes" xml:space="preserve">
          <source>If a name is specified on stdin that cannot be resolved to an object in the repository, then &lt;code&gt;cat-file&lt;/code&gt; will ignore any custom format and print:</source>
          <target state="translated">Si se especifica un nombre en stdin que no se puede resolver en un objeto en el repositorio, &lt;code&gt;cat-file&lt;/code&gt; ignorar&amp;aacute; cualquier formato personalizado e imprimir&amp;aacute;:</target>
        </trans-unit>
        <trans-unit id="b64d6e7bd6f81b6c41d97bf3465e33dac59a1923" translate="yes" xml:space="preserve">
          <source>If a name is specified that might refer to more than one object (an ambiguous short sha), then &lt;code&gt;cat-file&lt;/code&gt; will ignore any custom format and print:</source>
          <target state="translated">Si se especifica un nombre que puede hacer referencia a m&amp;aacute;s de un objeto (un sha corto ambiguo), &lt;code&gt;cat-file&lt;/code&gt; ignorar&amp;aacute; cualquier formato personalizado e imprimir&amp;aacute;:</target>
        </trans-unit>
        <trans-unit id="6e4b893bbe0d833def4e5b2195c3efca0abfc652" translate="yes" xml:space="preserve">
          <source>If a namespace is in use, the namespace prefix is stripped from each reference before it is matched against &lt;code&gt;transfer.hiderefs&lt;/code&gt; patterns. For example, if &lt;code&gt;refs/heads/master&lt;/code&gt; is specified in &lt;code&gt;transfer.hideRefs&lt;/code&gt; and the current namespace is &lt;code&gt;foo&lt;/code&gt;, then &lt;code&gt;refs/namespaces/foo/refs/heads/master&lt;/code&gt; is omitted from the advertisements but &lt;code&gt;refs/heads/master&lt;/code&gt; and &lt;code&gt;refs/namespaces/bar/refs/heads/master&lt;/code&gt; are still advertised as so-called &quot;have&quot; lines. In order to match refs before stripping, add a &lt;code&gt;^&lt;/code&gt; in front of the ref name. If you combine &lt;code&gt;!&lt;/code&gt; and &lt;code&gt;^&lt;/code&gt;, &lt;code&gt;!&lt;/code&gt; must be specified first.</source>
          <target state="translated">Si un espacio de nombres est&amp;aacute; en uso, el prefijo del espacio de nombres se elimina de cada referencia antes de compararlo con los patrones &lt;code&gt;transfer.hiderefs&lt;/code&gt; . Por ejemplo, si se especifica &lt;code&gt;refs/heads/master&lt;/code&gt; en &lt;code&gt;transfer.hideRefs&lt;/code&gt; y el espacio de nombres actual es &lt;code&gt;foo&lt;/code&gt; , entonces &lt;code&gt;refs/namespaces/foo/refs/heads/master&lt;/code&gt; se omite de los anuncios, pero &lt;code&gt;refs/heads/master&lt;/code&gt; y &lt;code&gt;refs/namespaces/bar/refs/heads/master&lt;/code&gt; todav&amp;iacute;a se anuncian como las llamadas l&amp;iacute;neas &quot;have&quot;. Para hacer coincidir las referencias antes de eliminarlas, agregue un &lt;code&gt;^&lt;/code&gt; delante del nombre de la referencia. &amp;iexcl;Si combinas &lt;code&gt;!&lt;/code&gt; y &lt;code&gt;^&lt;/code&gt; , &lt;code&gt;!&lt;/code&gt; debe especificarse primero.</target>
        </trans-unit>
        <trans-unit id="01a3979b0db1ea5ddb68d8d2296f1a14d4a19443" translate="yes" xml:space="preserve">
          <source>If a positive depth is requested, the server will compute the set of commits which are no deeper than the desired depth.</source>
          <target state="translated">Si se solicita una profundidad positiva,el servidor calculará el conjunto de compromisos que no son más profundos que la profundidad deseada.</target>
        </trans-unit>
        <trans-unit id="1af76a23a450746535be3f72c4b4bca12a2092d2" translate="yes" xml:space="preserve">
          <source>If a push would not result in a &lt;a href=&quot;#fast-forwards&quot;&gt;fast-forward&lt;/a&gt; of the remote branch, then it will fail with an error like:</source>
          <target state="translated">Si una inserci&amp;oacute;n no da como resultado un &lt;a href=&quot;#fast-forwards&quot;&gt;avance r&amp;aacute;pido&lt;/a&gt; de la rama remota, fallar&amp;aacute; con un error como:</target>
        </trans-unit>
        <trans-unit id="74746f4cd8d12a2fd7c6b3eb595d0f3e0b5c16c7" translate="yes" xml:space="preserve">
          <source>If a reflog entry&amp;rsquo;s predecessor is pruned, adjust its &quot;old&quot; SHA-1 to be equal to the &quot;new&quot; SHA-1 field of the entry that now precedes it.</source>
          <target state="translated">Si se poda el predecesor de una entrada de reflog, ajuste su &quot;antiguo&quot; SHA-1 para que sea igual al &quot;nuevo&quot; campo SHA-1 de la entrada que ahora lo precede.</target>
        </trans-unit>
        <trans-unit id="335f210edb83cade21599987ff0ffeaab940885d" translate="yes" xml:space="preserve">
          <source>If a refspec is prefixed by &lt;code&gt;^&lt;/code&gt;, it will be interpreted as a negative refspec. Rather than specifying which refs to fetch or which local refs to update, such a refspec will instead specify refs to exclude. A ref will be considered to match if it matches at least one positive refspec, and does not match any negative refspec. Negative refspecs can be useful to restrict the scope of a pattern refspec so that it will not include specific refs. Negative refspecs can themselves be pattern refspecs. However, they may only contain a &amp;lt;src&amp;gt; and do not specify a &amp;lt;dst&amp;gt;. Fully spelled out hex object names are also not supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6545e25a03004b7b80ff7680d7d52c75ae528db2" translate="yes" xml:space="preserve">
          <source>If a specified file is in the index but is missing then it&amp;rsquo;s removed. Default behavior is to ignore removed file.</source>
          <target state="translated">Si un archivo especificado est&amp;aacute; en el &amp;iacute;ndice pero falta, se elimina. El comportamiento predeterminado es ignorar el archivo eliminado.</target>
        </trans-unit>
        <trans-unit id="0b6d50904501e60c5730f3fc1689dbda57685832" translate="yes" xml:space="preserve">
          <source>If a specified file isn&amp;rsquo;t in the index already then it&amp;rsquo;s added. Default behaviour is to ignore new files.</source>
          <target state="translated">Si un archivo especificado a&amp;uacute;n no est&amp;aacute; en el &amp;iacute;ndice, se agrega. El comportamiento predeterminado es ignorar los archivos nuevos.</target>
        </trans-unit>
        <trans-unit id="a14dea6ce44fe61b94cf6eca48f584619dca6981" translate="yes" xml:space="preserve">
          <source>If a subject is not found in the patch description the patch name is preserved as the 1 line subject in the Git description.</source>
          <target state="translated">Si un sujeto no se encuentra en la descripción del parche,el nombre del parche se conserva como el sujeto de una línea en la descripción del Git.</target>
        </trans-unit>
        <trans-unit id="511834d1553ad3d02aefac42a3d932c821a68c9a" translate="yes" xml:space="preserve">
          <source>If a version-1 repository specifies any &lt;code&gt;extensions.*&lt;/code&gt; keys that the running git has not implemented, the operation MUST NOT proceed. Similarly, if the value of any known key is not understood by the implementation, the operation MUST NOT proceed.</source>
          <target state="translated">Si un repositorio de la versi&amp;oacute;n 1 especifica alguna &lt;code&gt;extensions.*&lt;/code&gt; Claves que el git en ejecuci&amp;oacute;n no ha implementado, la operaci&amp;oacute;n NO DEBE continuar. De manera similar, si la implementaci&amp;oacute;n no comprende el valor de cualquier clave conocida, la operaci&amp;oacute;n NO DEBE continuar.</target>
        </trans-unit>
        <trans-unit id="7fc57bcdf92fac8f6a715a452b985f9026a5a582" translate="yes" xml:space="preserve">
          <source>If a whole directory is classified as &quot;other&quot;, show just its name (with a trailing slash) and not its whole contents.</source>
          <target state="translated">Si un directorio entero es clasificado como &quot;otro&quot;,muestre sólo su nombre (con una barra)y no todo su contenido.</target>
        </trans-unit>
        <trans-unit id="9069929e0dad6127e4d7686101bafb1ad2a53dfd" translate="yes" xml:space="preserve">
          <source>If a working tree is deleted without using &lt;code&gt;git worktree remove&lt;/code&gt;, then its associated administrative files, which reside in the repository (see &quot;DETAILS&quot; below), will eventually be removed automatically (see &lt;code&gt;gc.worktreePruneExpire&lt;/code&gt; in &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;), or you can run &lt;code&gt;git worktree prune&lt;/code&gt; in the main or any linked working tree to clean up any stale administrative files.</source>
          <target state="translated">Si se elimina un &amp;aacute;rbol de trabajo sin usar &lt;code&gt;git worktree remove&lt;/code&gt; , sus archivos administrativos asociados, que residen en el repositorio (ver &quot;DETALLES&quot; a continuaci&amp;oacute;n), eventualmente se eliminar&amp;aacute;n autom&amp;aacute;ticamente (ver &lt;code&gt;gc.worktreePruneExpire&lt;/code&gt; en &lt;a href=&quot;git-config&quot;&gt;git-config [1]&lt;/a&gt; ), o puede ejecutar &lt;code&gt;git worktree prune&lt;/code&gt; en el &amp;aacute;rbol principal o en cualquier &amp;aacute;rbol de trabajo vinculado para limpiar cualquier archivo administrativo obsoleto.</target>
        </trans-unit>
        <trans-unit id="601f99371e1781bbcc6e4fbcb70987193e9cb892" translate="yes" xml:space="preserve">
          <source>If a working tree is on a portable device or network share which is not always mounted, lock it to prevent its administrative files from being pruned automatically. This also prevents it from being moved or deleted. Optionally, specify a reason for the lock with &lt;code&gt;--reason&lt;/code&gt;.</source>
          <target state="translated">Si un &amp;aacute;rbol de trabajo est&amp;aacute; en un dispositivo port&amp;aacute;til o en un recurso compartido de red que no siempre est&amp;aacute; montado, bloqu&amp;eacute;elo para evitar que sus archivos administrativos se eliminen autom&amp;aacute;ticamente. Esto tambi&amp;eacute;n evita que se mueva o elimine. Opcionalmente, especifique un motivo para el bloqueo con &lt;code&gt;--reason&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4c89355d42dbc93622cf0025bcf122df76b472f1" translate="yes" xml:space="preserve">
          <source>If advertised, indicates that any number of server specific options can be included in a request. This is done by sending each option as a &quot;server-option=&amp;lt;option&amp;gt;&quot; capability line in the capability-list section of a request.</source>
          <target state="translated">Si se anuncia, indica que se puede incluir cualquier n&amp;uacute;mero de opciones espec&amp;iacute;ficas del servidor en una solicitud. Esto se hace enviando cada opci&amp;oacute;n como una l&amp;iacute;nea de capacidad &quot;server-option = &amp;lt;option&amp;gt;&quot; en la secci&amp;oacute;n de lista de capacidades de una solicitud.</target>
        </trans-unit>
        <trans-unit id="c768073bebd10b960d1a77545805ba6684f69c55" translate="yes" xml:space="preserve">
          <source>If after this parent rewriting, &lt;code&gt;C'&lt;/code&gt; is a root or merge commit (has zero or &amp;gt;1 parents), a boundary commit, or !TREESAME, it remains. Otherwise, it is replaced with its only parent.</source>
          <target state="translated">Si despu&amp;eacute;s de la reescritura de este padre, &lt;code&gt;C'&lt;/code&gt; es una confirmaci&amp;oacute;n de ra&amp;iacute;z o fusi&amp;oacute;n (tiene cero o&amp;gt; 1 padres), una confirmaci&amp;oacute;n de l&amp;iacute;mite, o! TREESAME, permanece. De lo contrario, se reemplaza con su &amp;uacute;nico padre.</target>
        </trans-unit>
        <trans-unit id="331241d5d1136bad0fab6978a8eab7a815b255e9" translate="yes" xml:space="preserve">
          <source>If all &amp;lt;ref&amp;gt;s can be locked with matching &amp;lt;oldvalue&amp;gt;s simultaneously, all modifications are performed. Otherwise, no modifications are performed. Note that while each individual &amp;lt;ref&amp;gt; is updated or deleted atomically, a concurrent reader may still see a subset of the modifications.</source>
          <target state="translated">Si todos los &amp;lt;ref&amp;gt; s pueden bloquearse con &amp;lt;oldvalue&amp;gt; coincidentes simult&amp;aacute;neamente, se realizan todas las modificaciones. De lo contrario, no se realizan modificaciones. Tenga en cuenta que, si bien cada &amp;lt;ref&amp;gt; individual se actualiza o elimina de forma at&amp;oacute;mica, un lector simult&amp;aacute;neo a&amp;uacute;n puede ver un subconjunto de las modificaciones.</target>
        </trans-unit>
        <trans-unit id="f2745e08ed788856c12f02ca7a5befc54f3c9443" translate="yes" xml:space="preserve">
          <source>If all named commits are already ancestors of &lt;code&gt;HEAD&lt;/code&gt;, &lt;code&gt;git merge&lt;/code&gt; will exit early with the message &quot;Already up to date.&quot;</source>
          <target state="translated">Si todas las confirmaciones nombradas ya son ancestros de &lt;code&gt;HEAD&lt;/code&gt; , &lt;code&gt;git merge&lt;/code&gt; saldr&amp;aacute; temprano con el mensaje &quot;Ya actualizado&quot;.</target>
        </trans-unit>
        <trans-unit id="cf6cb5a66ab4b3c3c33160d1bdddf3e27a51bd6e" translate="yes" xml:space="preserve">
          <source>If all you really want to do is to remove from the index the files that are no longer present in the working tree (perhaps because your working tree is dirty so that you cannot use &lt;code&gt;git commit -a&lt;/code&gt;), use the following command:</source>
          <target state="translated">Si todo lo que realmente quiere hacer es eliminar del &amp;iacute;ndice los archivos que ya no est&amp;aacute;n presentes en el &amp;aacute;rbol de trabajo (tal vez porque su &amp;aacute;rbol de trabajo est&amp;aacute; sucio y no puede usar &lt;code&gt;git commit -a&lt;/code&gt; ), use el siguiente comando:</target>
        </trans-unit>
        <trans-unit id="232e0a33b39a8eedbea0de34207896fce9d5da1b" translate="yes" xml:space="preserve">
          <source>If an SVN revision has a property, &quot;svm:headrev&quot;, it is likely that the revision was created by SVN::Mirror (also used by SVK). The property contains a repository UUID and a revision. We want to make it look like we are mirroring the original URL, so introduce a helper function that returns the original identity URL and UUID, and use it when generating metadata in commit messages.</source>
          <target state="translated">Si una revisión de SVN tiene una propiedad,&quot;svm:headrev&quot;,es probable que la revisión haya sido creada por SVN::Mirror (también utilizada por SVK).La propiedad contiene un repositorio UUID y una revisión.Queremos que parezca que estamos reflejando la URL original,por lo que introducimos una función de ayuda que devuelve la identidad original de la URL y el UUID,y la usamos cuando generamos metadatos en los mensajes de confirmación.</target>
        </trans-unit>
        <trans-unit id="8ec6058ea575ab09ff2743fac6f67664b17c975f" translate="yes" xml:space="preserve">
          <source>If an alias is given, git shows the definition of the alias on standard output. To get the manual page for the aliased command, use &lt;code&gt;git COMMAND --help&lt;/code&gt;.</source>
          <target state="translated">Si se proporciona un alias, git muestra la definici&amp;oacute;n del alias en la salida est&amp;aacute;ndar. Para obtener la p&amp;aacute;gina del manual para el comando con alias, use &lt;code&gt;git COMMAND --help&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="06b64f77884080bf4b8a1b3580804b4fc90c62bc" translate="yes" xml:space="preserve">
          <source>If an exact match was not found, &lt;code&gt;git describe&lt;/code&gt; will walk back through the commit history to locate an ancestor commit which has been tagged. The ancestor&amp;rsquo;s tag will be output along with an abbreviation of the input commit-ish&amp;rsquo;s SHA-1. If &lt;code&gt;--first-parent&lt;/code&gt; was specified then the walk will only consider the first parent of each commit.</source>
          <target state="translated">Si no se encontr&amp;oacute; una coincidencia exacta, &lt;code&gt;git describe&lt;/code&gt; retroceder&amp;aacute; por el historial de confirmaciones para localizar una confirmaci&amp;oacute;n anterior que haya sido etiquetada. La etiqueta del ancestro se generar&amp;aacute; junto con una abreviatura del SHA-1 del compromiso de entrada. Si se especific&amp;oacute; &lt;code&gt;--first-parent&lt;/code&gt; , la caminata solo considerar&amp;aacute; el primer padre de cada confirmaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="98c6f5f40e2b8ae0667cb14d2e8af19ba85f9e07" translate="yes" xml:space="preserve">
          <source>If an existing replace ref for the same object exists, it will be overwritten (instead of failing).</source>
          <target state="translated">Si existe una referencia de reemplazo para el mismo objeto,se sobrescribirá (en lugar de fallar).</target>
        </trans-unit>
        <trans-unit id="046c10da2487af8c5911472dad4ec66653003b0a" translate="yes" xml:space="preserve">
          <source>If any &amp;lt;file&amp;gt; does not appear in the index, treat this as an error (return 1).</source>
          <target state="translated">Si alg&amp;uacute;n &amp;lt;archivo&amp;gt; no aparece en el &amp;iacute;ndice, tr&amp;aacute;telo como un error (devuelva 1).</target>
        </trans-unit>
        <trans-unit id="cedba844ab10a6fe9ad00a9dbc9501b2421d985c" translate="yes" xml:space="preserve">
          <source>If any &lt;code&gt;git -C &amp;lt;repo&amp;gt; &amp;lt;arguments&amp;gt;&lt;/code&gt; subprocess returns a non-zero exit code, then the &lt;code&gt;git for-each-repo&lt;/code&gt; process returns that exit code without running more subprocesses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5c329c54100c9f229f2bd1af9a36354df219a33" translate="yes" xml:space="preserve">
          <source>If any evaluation of &amp;lt;command&amp;gt; returns a non-zero exit status, the whole operation will be aborted.</source>
          <target state="translated">Si alguna evaluaci&amp;oacute;n de &amp;lt;comando&amp;gt; devuelve un estado de salida distinto de cero, toda la operaci&amp;oacute;n ser&amp;aacute; abortada.</target>
        </trans-unit>
        <trans-unit id="939ada40ab0c594838b538aaf9b14ce39d17200d" translate="yes" xml:space="preserve">
          <source>If any file doesn&amp;rsquo;t begin with a From line, assume it is a single mail message instead of signaling error.</source>
          <target state="translated">Si alg&amp;uacute;n archivo no comienza con una l&amp;iacute;nea De, asuma que es un solo mensaje de correo en lugar de indicar un error.</target>
        </trans-unit>
        <trans-unit id="824867a2502f9c0cf53ed6a13fd4b286bb82c4ed" translate="yes" xml:space="preserve">
          <source>If any files that should not be normalized show up in &lt;code&gt;git status&lt;/code&gt;, unset their &lt;code&gt;text&lt;/code&gt; attribute before running &lt;code&gt;git add -u&lt;/code&gt;.</source>
          <target state="translated">Si alg&amp;uacute;n archivo que no deber&amp;iacute;a normalizarse aparece en &lt;code&gt;git status&lt;/code&gt; , anule su atributo de &lt;code&gt;text&lt;/code&gt; o antes de ejecutar &lt;code&gt;git add -u&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8c34b6095a9c49861d2acc43610b57c3a4a36934" translate="yes" xml:space="preserve">
          <source>If any files were ever &quot;cvs import&quot;ed more than once (e.g., import of more than one vendor release) the HEAD contains the wrong content.</source>
          <target state="translated">Si algún archivo fue &quot;importado&quot; más de una vez (por ejemplo,la importación de más de una versión de un proveedor)el HEAD contiene el contenido equivocado.</target>
        </trans-unit>
        <trans-unit id="8a184d41ad4c8629ad4f2bce24803b0c9fa2c0bb" translate="yes" xml:space="preserve">
          <source>If any of the remote changes overlap with local uncommitted changes, the merge will be automatically canceled and the work tree untouched. It is generally best to get any local changes in working order before pulling or stash them away with &lt;a href=&quot;git-stash&quot;&gt;git-stash[1]&lt;/a&gt;.</source>
          <target state="translated">Si alguno de los cambios remotos se superpone con los cambios locales no confirmados, la combinaci&amp;oacute;n se cancelar&amp;aacute; autom&amp;aacute;ticamente y el &amp;aacute;rbol de trabajo quedar&amp;aacute; intacto. Por lo general, es mejor hacer que los cambios locales funcionen antes de extraerlos o guardarlos con &lt;a href=&quot;git-stash&quot;&gt;git-stash [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="27aabdb37af0432fadcd5ffecc44449505cac9be" translate="yes" xml:space="preserve">
          <source>If any optional &lt;code&gt;&amp;lt;path&amp;gt;...&lt;/code&gt; arguments are given, only those paths are affected.</source>
          <target state="translated">Si se dan argumentos opcionales &lt;code&gt;&amp;lt;path&amp;gt;...&lt;/code&gt; , solo esas rutas se ven afectadas.</target>
        </trans-unit>
        <trans-unit id="d20da8878e924b8ea99ba5928199985d6eb45c5b" translate="yes" xml:space="preserve">
          <source>If at least one of the specified mechanisms matches the ones advertised by the SMTP server and if it is supported by the utilized SASL library, the mechanism is used for authentication. If neither &lt;code&gt;sendemail.smtpAuth&lt;/code&gt; nor &lt;code&gt;--smtp-auth&lt;/code&gt; is specified, all mechanisms supported by the SASL library can be used. The special value &lt;code&gt;none&lt;/code&gt; maybe specified to completely disable authentication independently of &lt;code&gt;--smtp-user&lt;/code&gt;</source>
          <target state="translated">Si al menos uno de los mecanismos especificados coincide con los anunciados por el servidor SMTP y es compatible con la biblioteca SASL utilizada, el mecanismo se utiliza para la autenticaci&amp;oacute;n. Si no se &lt;code&gt;sendemail.smtpAuth&lt;/code&gt; ni sendemail.smtpAuth ni &lt;code&gt;--smtp-auth&lt;/code&gt; , se pueden utilizar todos los mecanismos admitidos por la biblioteca SASL. El valor especial &lt;code&gt;none&lt;/code&gt; se puede especificar para deshabilitar completamente la autenticaci&amp;oacute;n independientemente de &lt;code&gt;--smtp-user&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="48ca5fe331a67872cf3424cd090943cee3b1214a" translate="yes" xml:space="preserve">
          <source>If config parameter &quot;core.logAllRefUpdates&quot; is true and the ref is one under &quot;refs/heads/&quot;, &quot;refs/remotes/&quot;, &quot;refs/notes/&quot;, or a pseudoref like HEAD or ORIG_HEAD; or the file &quot;$GIT_DIR/logs/&amp;lt;ref&amp;gt;&quot; exists then &lt;code&gt;git update-ref&lt;/code&gt; will append a line to the log file &quot;$GIT_DIR/logs/&amp;lt;ref&amp;gt;&quot; (dereferencing all symbolic refs before creating the log name) describing the change in ref value. Log lines are formatted as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d66be204c5192d97175dc2e5a6cea91a845a9494" translate="yes" xml:space="preserve">
          <source>If config parameter &quot;core.logAllRefUpdates&quot; is true and the ref is one under &quot;refs/heads/&quot;, &quot;refs/remotes/&quot;, &quot;refs/notes/&quot;, or the symbolic ref HEAD; or the file &quot;$GIT_DIR/logs/&amp;lt;ref&amp;gt;&quot; exists then &lt;code&gt;git update-ref&lt;/code&gt; will append a line to the log file &quot;$GIT_DIR/logs/&amp;lt;ref&amp;gt;&quot; (dereferencing all symbolic refs before creating the log name) describing the change in ref value. Log lines are formatted as:</source>
          <target state="translated">Si el par&amp;aacute;metro de configuraci&amp;oacute;n &quot;core.logAllRefUpdates&quot; es verdadero y la referencia es una debajo de &quot;refs / heads /&quot;, &quot;refs / remotes /&quot;, &quot;refs / notes /&quot;, o la referencia simb&amp;oacute;lica HEAD; o el archivo &quot;$ GIT_DIR / logs / &amp;lt;ref&amp;gt;&quot; existe, entonces &lt;code&gt;git update-ref&lt;/code&gt; agregar&amp;aacute; una l&amp;iacute;nea al archivo de registro &quot;$ GIT_DIR / logs / &amp;lt;ref&amp;gt;&quot; (eliminando todas las referencias simb&amp;oacute;licas antes de crear el nombre del registro) describiendo el cambio en el valor de ref. Las l&amp;iacute;neas de registro tienen el formato:</target>
        </trans-unit>
        <trans-unit id="bb79d7b0840991ebe429aab3a3410932b975f32c" translate="yes" xml:space="preserve">
          <source>If conflicts arise and a strategy for automatically resolving conflicting notes (see the &quot;NOTES MERGE STRATEGIES&quot; section) is not given, the &quot;manual&quot; resolver is used. This resolver checks out the conflicting notes in a special worktree (&lt;code&gt;.git/NOTES_MERGE_WORKTREE&lt;/code&gt;), and instructs the user to manually resolve the conflicts there. When done, the user can either finalize the merge with &lt;code&gt;git notes merge --commit&lt;/code&gt;, or abort the merge with &lt;code&gt;git notes merge --abort&lt;/code&gt;.</source>
          <target state="translated">Si surgen conflictos y no se proporciona una estrategia para resolver autom&amp;aacute;ticamente las notas en conflicto (ver la secci&amp;oacute;n &quot;ESTRATEGIAS DE FUSI&amp;Oacute;N DE NOTAS&quot;), se utiliza el solucionador &quot;manual&quot;. Este solucionador comprueba las notas en conflicto en un &amp;aacute;rbol de trabajo especial ( &lt;code&gt;.git/NOTES_MERGE_WORKTREE&lt;/code&gt; ) y le indica al usuario que resuelva manualmente los conflictos all&amp;iacute;. Cuando termine, el usuario puede finalizar la fusi&amp;oacute;n con &lt;code&gt;git notes merge --commit&lt;/code&gt; , o abortar la fusi&amp;oacute;n con &lt;code&gt;git notes merge --abort&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a02a69db3092fb7486e9bff9ff76c98958fe4d57" translate="yes" xml:space="preserve">
          <source>If core.commitGraph is true, the commit-graph file will also be inspected using &lt;code&gt;git commit-graph verify&lt;/code&gt;. See &lt;a href=&quot;git-commit-graph&quot;&gt;git-commit-graph[1]&lt;/a&gt;.</source>
          <target state="translated">Si core.commitGraph es verdadero, el archivo commit-graph tambi&amp;eacute;n se inspeccionar&amp;aacute; usando &lt;code&gt;git commit-graph verify&lt;/code&gt; . Ver &lt;a href=&quot;git-commit-graph&quot;&gt;git-commit-graph [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8280fdd5ec3fb25317b497d70f747c3177f7ef0e" translate="yes" xml:space="preserve">
          <source>If disabled with &quot;--no-thread&quot;, those headers will not be added (unless specified with --in-reply-to). Default is the value of the &lt;code&gt;sendemail.thread&lt;/code&gt; configuration value; if that is unspecified, default to --thread.</source>
          <target state="translated">Si est&amp;aacute; deshabilitado con &quot;--no-thread&quot;, esos encabezados no se agregar&amp;aacute;n (a menos que se especifique con --in-reply-to). El valor predeterminado es el valor de configuraci&amp;oacute;n de &lt;code&gt;sendemail.thread&lt;/code&gt; ; si no se especifica, el valor predeterminado es --thread.</target>
        </trans-unit>
        <trans-unit id="f00c2d7bc0317e9cad287fad199ae73edff4a848" translate="yes" xml:space="preserve">
          <source>If either &amp;lt;upstream&amp;gt; or --root is given on the command line, then the default is &lt;code&gt;--no-fork-point&lt;/code&gt;, otherwise the default is &lt;code&gt;--fork-point&lt;/code&gt;.</source>
          <target state="translated">Si se da &amp;lt;upstream&amp;gt; o --root en la l&amp;iacute;nea de comando, entonces el valor predeterminado es &lt;code&gt;--no-fork-point&lt;/code&gt; , de lo contrario, el valor predeterminado es &lt;code&gt;--fork-point&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a4729a11522c55d49b0e7c329a8805975c4198d9" translate="yes" xml:space="preserve">
          <source>If either of these environment variables is set then &lt;code&gt;git fetch&lt;/code&gt; and &lt;code&gt;git push&lt;/code&gt; will use the specified command instead of &lt;code&gt;ssh&lt;/code&gt; when they need to connect to a remote system. The command-line parameters passed to the configured command are determined by the ssh variant. See &lt;code&gt;ssh.variant&lt;/code&gt; option in &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt; for details.</source>
          <target state="translated">Si se establece alguna de estas variables de entorno, &lt;code&gt;git fetch&lt;/code&gt; y &lt;code&gt;git push&lt;/code&gt; usar&amp;aacute;n el comando especificado en lugar de &lt;code&gt;ssh&lt;/code&gt; cuando necesiten conectarse a un sistema remoto. Los par&amp;aacute;metros de la l&amp;iacute;nea de comandos que se pasan al comando configurado est&amp;aacute;n determinados por la variante ssh. Consulte la opci&amp;oacute;n &lt;code&gt;ssh.variant&lt;/code&gt; en &lt;a href=&quot;git-config&quot;&gt;git-config [1]&lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="3669ee4e6fd1ff3473f59b85f73b98bc8093a5f0" translate="yes" xml:space="preserve">
          <source>If enabled the helper should automatically fetch annotated tag objects if the object the tag points at was transferred during the fetch command. If the tag is not fetched by the helper a second fetch command will usually be sent to ask for the tag specifically. Some helpers may be able to use this option to avoid a second network connection.</source>
          <target state="translated">Si está activada,el ayudante debe recuperar automáticamente los objetos de la etiqueta anotados si el objeto al que la etiqueta apunta fue transferido durante el comando de recuperación.Si la etiqueta no es recuperada por el helper,se enviará un segundo comando fetch para pedir la etiqueta específicamente.Algunos helpers pueden utilizar esta opción para evitar una segunda conexión de red.</target>
        </trans-unit>
        <trans-unit id="27acfa87cdb69a824b9bae48206b42168ffde848" translate="yes" xml:space="preserve">
          <source>If enabled, &lt;code&gt;git p4 submit&lt;/code&gt; will attempt to cleanup RCS keywords ($Header$, etc). These would otherwise cause merge conflicts and prevent the submit going ahead. This option should be considered experimental at present.</source>
          <target state="translated">Si est&amp;aacute; habilitado, &lt;code&gt;git p4 submit&lt;/code&gt; intentar&amp;aacute; limpiar las palabras clave RCS ($ Header $, etc.). De lo contrario, estos causar&amp;iacute;an conflictos de fusi&amp;oacute;n e impedir&amp;iacute;an que el env&amp;iacute;o se realizara. Esta opci&amp;oacute;n deber&amp;iacute;a considerarse experimental en la actualidad.</target>
        </trans-unit>
        <trans-unit id="551059a87916480f640c4e8b1f0ae5467d5d2b16" translate="yes" xml:space="preserve">
          <source>If everything fails, or if no viewer is configured, the viewer specified in the &lt;code&gt;GIT_MAN_VIEWER&lt;/code&gt; environment variable will be tried. If that fails too, the &lt;code&gt;man&lt;/code&gt; program will be tried anyway.</source>
          <target state="translated">Si todo falla, o si no hay ning&amp;uacute;n visor configurado, se &lt;code&gt;GIT_MAN_VIEWER&lt;/code&gt; el visor especificado en la variable de entorno GIT_MAN_VIEWER . Si eso tambi&amp;eacute;n falla, el programa &lt;code&gt;man&lt;/code&gt; se intentar&amp;aacute; de todos modos.</target>
        </trans-unit>
        <trans-unit id="dc951917b8a4344a8f095e91594828b8eb0d132d" translate="yes" xml:space="preserve">
          <source>If explicit refspecs were given on the command line of &lt;code&gt;git pull&lt;/code&gt;, they are all merged.</source>
          <target state="translated">Si se proporcionaron refspecs expl&amp;iacute;citos en la l&amp;iacute;nea de comando de &lt;code&gt;git pull&lt;/code&gt; , todos se fusionan.</target>
        </trans-unit>
        <trans-unit id="9f9421c37df0f080e8411a466937f35ec8c1d1a5" translate="yes" xml:space="preserve">
          <source>If false, symbolic links are checked out as small plain files that contain the link text. &lt;a href=&quot;git-update-index&quot;&gt;git-update-index[1]&lt;/a&gt; and &lt;a href=&quot;git-add&quot;&gt;git-add[1]&lt;/a&gt; will not change the recorded type to regular file. Useful on filesystems like FAT that do not support symbolic links.</source>
          <target state="translated">Si es falso, los enlaces simb&amp;oacute;licos se comprueban como peque&amp;ntilde;os archivos sin formato que contienen el texto del enlace. &lt;a href=&quot;git-update-index&quot;&gt;git-update-index [1]&lt;/a&gt; y &lt;a href=&quot;git-add&quot;&gt;git-add [1]&lt;/a&gt; no cambiar&amp;aacute;n el tipo registrado a un archivo normal. &amp;Uacute;til en sistemas de archivos como FAT que no admiten enlaces simb&amp;oacute;licos.</target>
        </trans-unit>
        <trans-unit id="8463a48927d35802080dff1be147345270adfa9a" translate="yes" xml:space="preserve">
          <source>If false, the ctime differences between the index and the working tree are ignored; useful when the inode change time is regularly modified by something outside Git (file system crawlers and some backup systems). See &lt;a href=&quot;git-update-index&quot;&gt;git-update-index[1]&lt;/a&gt;. True by default.</source>
          <target state="translated">Si es falso, se ignoran las diferencias de ctime entre el &amp;iacute;ndice y el &amp;aacute;rbol de trabajo; &amp;uacute;til cuando el tiempo de cambio de inodo es modificado regularmente por algo externo a Git (rastreadores del sistema de archivos y algunos sistemas de respaldo). Consulte &lt;a href=&quot;git-update-index&quot;&gt;git-update-index [1]&lt;/a&gt; . Verdadero por defecto.</target>
        </trans-unit>
        <trans-unit id="c3b2c82ffccecb89175e5c1911567eb5a6cff2f5" translate="yes" xml:space="preserve">
          <source>If fast-import is supplied invalid input it will terminate with a non-zero exit status and create a crash report in the top level of the Git repository it was importing into. Crash reports contain a snapshot of the internal fast-import state as well as the most recent commands that lead up to the crash.</source>
          <target state="translated">Si se suministra una entrada inválida de importación rápida,terminará con un estado de salida distinto de cero y creará un informe de accidente en el nivel superior del repositorio de Git al que estaba importando.Los informes de fallos contienen una instantánea del estado interno de importación rápida,así como los comandos más recientes que conducen al fallo.</target>
        </trans-unit>
        <trans-unit id="b4b929406272978e9913bc69bd98a25fedb2b075" translate="yes" xml:space="preserve">
          <source>If generating diffs, detect and report renames for each commit. For following files across renames while traversing history, see &lt;code&gt;--follow&lt;/code&gt;. If &lt;code&gt;n&lt;/code&gt; is specified, it is a threshold on the similarity index (i.e. amount of addition/deletions compared to the file&amp;rsquo;s size). For example, &lt;code&gt;-M90%&lt;/code&gt; means Git should consider a delete/add pair to be a rename if more than 90% of the file hasn&amp;rsquo;t changed. Without a &lt;code&gt;%&lt;/code&gt; sign, the number is to be read as a fraction, with a decimal point before it. I.e., &lt;code&gt;-M5&lt;/code&gt; becomes 0.5, and is thus the same as &lt;code&gt;-M50%&lt;/code&gt;. Similarly, &lt;code&gt;-M05&lt;/code&gt; is the same as &lt;code&gt;-M5%&lt;/code&gt;. To limit detection to exact renames, use &lt;code&gt;-M100%&lt;/code&gt;. The default similarity index is 50%.</source>
          <target state="translated">Si genera diferencias, detecte y notifique cambios de nombre para cada confirmaci&amp;oacute;n. Para seguir archivos a trav&amp;eacute;s de &lt;code&gt;--follow&lt;/code&gt; nombre mientras recorre el historial, consulte --follow . Si se especifica &lt;code&gt;n&lt;/code&gt; , es un umbral en el &amp;iacute;ndice de similitud (es decir, cantidad de adiciones / eliminaciones en comparaci&amp;oacute;n con el tama&amp;ntilde;o del archivo). Por ejemplo, &lt;code&gt;-M90%&lt;/code&gt; significa que Git deber&amp;iacute;a considerar un par de eliminar / agregar como un cambio de nombre si m&amp;aacute;s del 90% del archivo no ha cambiado. Sin un signo de &lt;code&gt;%&lt;/code&gt; , el n&amp;uacute;mero debe leerse como una fracci&amp;oacute;n, con un punto decimal antes. Es decir, &lt;code&gt;-M5&lt;/code&gt; se convierte en 0,5 y, por tanto, es lo mismo que &lt;code&gt;-M50%&lt;/code&gt; . De manera similar, &lt;code&gt;-M05&lt;/code&gt; es lo mismo que &lt;code&gt;-M5%&lt;/code&gt; . Para limitar la detecci&amp;oacute;n a &lt;code&gt;-M100%&lt;/code&gt; nombre exactos, utilice -M100%. El &amp;iacute;ndice de similitud predeterminado es 50%.</target>
        </trans-unit>
        <trans-unit id="adbe5b777a6e949c23db17b38ebf1735d572ece1" translate="yes" xml:space="preserve">
          <source>If git detects typos and can identify exactly one valid command similar to the error, git will automatically run the intended command after waiting a duration of time defined by this configuration value in deciseconds (0.1 sec). If this value is 0, the suggested corrections will be shown, but not executed. If it is a negative integer, or &quot;immediate&quot;, the suggested command is run immediately. If &quot;never&quot;, suggestions are not shown at all. The default value is zero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bf34c88ee2af8f797d0000ddc97681383ffc8ba" translate="yes" xml:space="preserve">
          <source>If git fetch fails because the new head of a branch is not a descendant of the old head, you may force the update with:</source>
          <target state="translated">Si la búsqueda de git falla porque la nueva cabeza de una rama no es descendiente de la vieja,puedes forzar la actualización con:</target>
        </trans-unit>
        <trans-unit id="e083719ea272a39b1421c558e4392c556db2e4ef" translate="yes" xml:space="preserve">
          <source>If given &lt;code&gt;--thread&lt;/code&gt;, &lt;code&gt;git-format-patch&lt;/code&gt; will generate &lt;code&gt;In-Reply-To&lt;/code&gt; and &lt;code&gt;References&lt;/code&gt; headers to make the second and subsequent patch mails appear as replies to the first mail; this also generates a &lt;code&gt;Message-Id&lt;/code&gt; header to reference.</source>
          <target state="translated">Si se le da &lt;code&gt;--thread&lt;/code&gt; , &lt;code&gt;git-format-patch&lt;/code&gt; generar&amp;aacute; encabezados &lt;code&gt;In-Reply-To&lt;/code&gt; y &lt;code&gt;References&lt;/code&gt; para hacer que el segundo y los siguientes parches aparezcan como respuestas al primer correo; esto tambi&amp;eacute;n genera un encabezado &lt;code&gt;Message-Id&lt;/code&gt; para hacer referencia.</target>
        </trans-unit>
        <trans-unit id="b8bcbf4a83fcf4f75c98a2212241bdcbc1331a73" translate="yes" xml:space="preserve">
          <source>If given, limit the search to paths matching at least one pattern. Both leading paths match and glob(7) patterns are supported.</source>
          <target state="translated">Si se da,limite la búsqueda a los caminos que coincidan con al menos un patrón.Se admiten tanto los caminos que coinciden como los patrones de glob(7).</target>
        </trans-unit>
        <trans-unit id="0f1d3c019382d162e2080cbdc28ed58b9e3bfa0a" translate="yes" xml:space="preserve">
          <source>If given, strings that substitute &lt;code&gt;%(fieldname)&lt;/code&gt; placeholders are quoted as string literals suitable for the specified host language. This is meant to produce a scriptlet that can directly be `eval`ed.</source>
          <target state="translated">Si se proporcionan, las cadenas que sustituyen a los marcadores de posici&amp;oacute;n &lt;code&gt;%(fieldname)&lt;/code&gt; se citan como cadenas literales adecuadas para el idioma host especificado. Esto est&amp;aacute; destinado a producir un scriptlet que pueda ser evaluado directamente.</target>
        </trans-unit>
        <trans-unit id="fbaedaa3bd6d3e9940a1f51ae6f8f8f02a814640" translate="yes" xml:space="preserve">
          <source>If history is linear and HEAD is an ancestor of next, update the working tree and advance the HEAD pointer to match next. Otherwise, apply the changes introduced by those commits that are in next but not HEAD to the current branch, creating a new commit for each new change.</source>
          <target state="translated">Si la historia es lineal y CABEZA es un antepasado de la siguiente,actualiza el árbol de trabajo y avanza el puntero de CABEZA para que coincida con la siguiente.De lo contrario,aplica los cambios introducidos por las confirmaciones que están en next pero no en HEAD a la rama actual,creando una nueva confirmación para cada nuevo cambio.</target>
        </trans-unit>
        <trans-unit id="c5f1ba7eca8a5dae95e4277b8eb6e331cbac924e" translate="yes" xml:space="preserve">
          <source>If it does not apply correctly, there can be various reasons.</source>
          <target state="translated">Si no se aplica correctamente,puede haber varias razones.</target>
        </trans-unit>
        <trans-unit id="50113fb63d9da87174eb94266585c5426270510c" translate="yes" xml:space="preserve">
          <source>If it does not support the requested operation (e.g., a read-only store), it should silently ignore the request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="527b079607be5b2a4ead185d633224b57d83444a" translate="yes" xml:space="preserve">
          <source>If it exits with non-zero status, then the working tree will not be committed after applying the patch.</source>
          <target state="translated">Si sale con el estado de no-cero,entonces el árbol de trabajo no se comprometerá después de aplicar el parche.</target>
        </trans-unit>
        <trans-unit id="769efb2c6e10769ef0506d8fb6e30821bd41e6ea" translate="yes" xml:space="preserve">
          <source>If it happens that one merge base is bad, then the bisection process is stopped with a message like:</source>
          <target state="translated">Si sucede que una base de fusión es mala,entonces el proceso de bisección se detiene con un mensaje como:</target>
        </trans-unit>
        <trans-unit id="d7b7066e9f3ba640d6b7d345ddda270a80c2a559" translate="yes" xml:space="preserve">
          <source>If it is &lt;code&gt;after&lt;/code&gt;, then each new trailer will appear just after the last trailer with the same &amp;lt;token&amp;gt;.</source>
          <target state="translated">Si es &lt;code&gt;after&lt;/code&gt; , cada nuevo avance aparecer&amp;aacute; justo despu&amp;eacute;s del &amp;uacute;ltimo avance con el mismo &amp;lt;token&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="f2bafbae3498cf1dc8b7c4f581b63d0bfa115d9a" translate="yes" xml:space="preserve">
          <source>If it is &lt;code&gt;before&lt;/code&gt;, then each new trailer will appear just before the first trailer with the same &amp;lt;token&amp;gt;.</source>
          <target state="translated">Si es &lt;code&gt;before&lt;/code&gt; , cada nuevo avance aparecer&amp;aacute; justo antes del primer avance con el mismo &amp;lt;token&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="76425e0a50de1913b3cc7557f216714041d9e64a" translate="yes" xml:space="preserve">
          <source>If it is &lt;code&gt;end&lt;/code&gt;, then each new trailer will appear at the end of the existing trailers.</source>
          <target state="translated">Si es &lt;code&gt;end&lt;/code&gt; , entonces cada nuevo tr&amp;aacute;iler aparecer&amp;aacute; al final de los tr&amp;aacute;ileres existentes.</target>
        </trans-unit>
        <trans-unit id="df34e468f7176e0de86a55be70b61c5f69c7697c" translate="yes" xml:space="preserve">
          <source>If it is &lt;code&gt;start&lt;/code&gt;, then each new trailer will appear at the start, instead of the end, of the existing trailers.</source>
          <target state="translated">Si es &lt;code&gt;start&lt;/code&gt; , cada nuevo tr&amp;aacute;iler aparecer&amp;aacute; al principio, en lugar del final, de los tr&amp;aacute;ileres existentes.</target>
        </trans-unit>
        <trans-unit id="4def1637480df26c3310f2a04dde58c55a8e6a6e" translate="yes" xml:space="preserve">
          <source>If it is set to true, git-fetch-pack will check all fetched objects. See &lt;code&gt;transfer.fsckObjects&lt;/code&gt; for what&amp;rsquo;s checked. Defaults to false. If not set, the value of &lt;code&gt;transfer.fsckObjects&lt;/code&gt; is used instead.</source>
          <target state="translated">Si se establece en true, git-fetch-pack comprobar&amp;aacute; todos los objetos recuperados. Consulte &lt;code&gt;transfer.fsckObjects&lt;/code&gt; para saber qu&amp;eacute; est&amp;aacute; marcado. El valor predeterminado es falso. Si no se establece, se utiliza en su lugar el valor de &lt;code&gt;transfer.fsckObjects&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c85a90553a06232b5ee8a2aebb2a31cb696c1660" translate="yes" xml:space="preserve">
          <source>If it is set to true, git-receive-pack will check all received objects. See &lt;code&gt;transfer.fsckObjects&lt;/code&gt; for what&amp;rsquo;s checked. Defaults to false. If not set, the value of &lt;code&gt;transfer.fsckObjects&lt;/code&gt; is used instead.</source>
          <target state="translated">Si se establece en verdadero, git-receive-pack comprobar&amp;aacute; todos los objetos recibidos. Consulte &lt;code&gt;transfer.fsckObjects&lt;/code&gt; para saber qu&amp;eacute; est&amp;aacute; marcado. El valor predeterminado es falso. Si no se establece, se utiliza en su lugar el valor de &lt;code&gt;transfer.fsckObjects&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f046c10bd7462cc956529dcbe0a86de2200086ed" translate="yes" xml:space="preserve">
          <source>If it turns out whatever you have done is worth keeping, you can always create a new name for it (without switching away):</source>
          <target state="translated">Si resulta que lo que has hecho vale la pena conservarlo,siempre puedes crearle un nuevo nombre (sin cambiar de nombre):</target>
        </trans-unit>
        <trans-unit id="4d0ff556eb63bcc0fd849ad26a1310c3a4323d31" translate="yes" xml:space="preserve">
          <source>If it&amp;rsquo;s not set, filesystem directory&amp;rsquo;s owner is used (via GECOS field, i.e. real name field from &lt;strong&gt;getpwuid&lt;/strong&gt;(3)) if &lt;code&gt;$projects_list&lt;/code&gt; is unset (gitweb scans &lt;code&gt;$projectroot&lt;/code&gt; for repositories); if &lt;code&gt;$projects_list&lt;/code&gt; points to file with list of repositories, then project owner defaults to value from this file for given repository.</source>
          <target state="translated">Si no est&amp;aacute; configurado, se usa el propietario del directorio del sistema de archivos (a trav&amp;eacute;s del campo GECOS, es decir, el campo de nombre real de &lt;strong&gt;getpwuid&lt;/strong&gt; (3)) si &lt;code&gt;$projects_list&lt;/code&gt; est&amp;aacute; configurado (gitweb escanea &lt;code&gt;$projectroot&lt;/code&gt; busca de repositorios); si &lt;code&gt;$projects_list&lt;/code&gt; apunta a un archivo con una lista de repositorios, entonces el propietario del proyecto toma el valor predeterminado de este archivo para el repositorio dado.</target>
        </trans-unit>
        <trans-unit id="1cadf23ffce6eccc7a87c304031ef4b8e4d3adc6" translate="yes" xml:space="preserve">
          <source>If large offsets are required, we use another list of large offsets similar to version 2 pack-indexes.</source>
          <target state="translated">Si se requieren grandes compensaciones,usamos otra lista de grandes compensaciones similar a los índices de paquetes de la versión 2.</target>
        </trans-unit>
        <trans-unit id="960d179c1e161024bf740912a06839844c1002e6" translate="yes" xml:space="preserve">
          <source>If left to accumulate, these stale references might make performance worse on big and busy repos that have a lot of branch churn, and e.g. make the output of commands like &lt;code&gt;git branch -a --contains
&amp;lt;commit&amp;gt;&lt;/code&gt; needlessly verbose, as well as impacting anything else that&amp;rsquo;ll work with the complete set of known references.</source>
          <target state="translated">Si se dejan acumular, estas referencias obsoletas pueden empeorar el rendimiento en repositorios grandes y ocupados que tienen una gran cantidad de cambios de sucursales y, por ejemplo, hacer que la salida de comandos como &lt;code&gt;git branch -a --contains &amp;lt;commit&amp;gt;&lt;/code&gt; innecesariamente detallado, adem&amp;aacute;s de impactar cualquier otra cosa que funcione con el conjunto completo de referencias conocidas.</target>
        </trans-unit>
        <trans-unit id="703f6583148f1f4b148dcc92cca37187812e5840" translate="yes" xml:space="preserve">
          <source>If merge is called without any commit argument, merge the upstream branches configured for the current branch by using their last observed values stored in their remote-tracking branches. The values of the &lt;code&gt;branch.&amp;lt;current branch&amp;gt;.merge&lt;/code&gt; that name the branches at the remote named by &lt;code&gt;branch.&amp;lt;current branch&amp;gt;.remote&lt;/code&gt; are consulted, and then they are mapped via &lt;code&gt;remote.&amp;lt;remote&amp;gt;.fetch&lt;/code&gt; to their corresponding remote-tracking branches, and the tips of these tracking branches are merged.</source>
          <target state="translated">Si se llama a merge sin ning&amp;uacute;n argumento de confirmaci&amp;oacute;n, combine las ramas ascendentes configuradas para la rama actual utilizando sus &amp;uacute;ltimos valores observados almacenados en sus ramas de seguimiento remoto. Los valores de la &lt;code&gt;branch.&amp;lt;current branch&amp;gt;.merge&lt;/code&gt; que nombran las ramas en el remoto nombrado por &lt;code&gt;branch.&amp;lt;current branch&amp;gt;.remote&lt;/code&gt; se consultan, y luego se mapean v&amp;iacute;a &lt;code&gt;remote.&amp;lt;remote&amp;gt;.fetch&lt;/code&gt; a su correspondiente remoto- seguimiento de ramas, y las puntas de estas ramas de seguimiento se fusionan.</target>
        </trans-unit>
        <trans-unit id="115451ca901f83782dcbbcd683a49aed658e9f54" translate="yes" xml:space="preserve">
          <source>If more than one --branches (or --tags) option was given to the &lt;code&gt;init&lt;/code&gt; or &lt;code&gt;clone&lt;/code&gt; command, you must provide the location of the branch (or tag) you wish to create in the SVN repository. &amp;lt;path&amp;gt; specifies which path to use to create the branch or tag and should match the pattern on the left-hand side of one of the configured branches or tags refspecs. You can see these refspecs with the commands</source>
          <target state="translated">Si se le dio m&amp;aacute;s de una opci&amp;oacute;n --branches (o --tags) al comando &lt;code&gt;init&lt;/code&gt; o &lt;code&gt;clone&lt;/code&gt; , debe proporcionar la ubicaci&amp;oacute;n de la rama (o etiqueta) que desea crear en el repositorio SVN. &amp;lt;ruta&amp;gt; especifica qu&amp;eacute; ruta usar para crear la rama o etiqueta y debe coincidir con el patr&amp;oacute;n en el lado izquierdo de una de las ramas o etiquetas configuradas refspecs. Puede ver estas refspecs con los comandos</target>
        </trans-unit>
        <trans-unit id="720d1ff370baad05fcb8565540994e450819ec63" translate="yes" xml:space="preserve">
          <source>If more than one suffixes match the same tagname, then that tagname will be sorted according to the suffix which starts at the earliest position in the tagname. If more than one different matching suffixes start at that earliest position, then that tagname will be sorted according to the longest of those suffixes. The sorting order between different suffixes is undefined if they are in multiple config files.</source>
          <target state="translated">Si más de un sufijo coincide con el mismo nombre de etiqueta,entonces ese nombre de etiqueta se ordenará según el sufijo que comienza en la posición más temprana del nombre de etiqueta.Si más de un sufijo diferente comienza en la posición más temprana,entonces ese nombre de etiqueta se ordenará según el más largo de esos sufijos.El orden de clasificación entre los diferentes sufijos no está definido si están en varios archivos de configuración.</target>
        </trans-unit>
        <trans-unit id="e3ac1856f1f0f57064ddb5057de6638c24881f47" translate="yes" xml:space="preserve">
          <source>If multiple tags were found during the walk then the tag which has the fewest commits different from the input commit-ish will be selected and output. Here fewest commits different is defined as the number of commits which would be shown by &lt;code&gt;git log tag..input&lt;/code&gt; will be the smallest number of commits possible.</source>
          <target state="translated">Si se encontraron varias etiquetas durante el recorrido, se seleccionar&amp;aacute; y se enviar&amp;aacute; la etiqueta que tenga la menor cantidad de confirmaciones diferentes de la de entrada. Aqu&amp;iacute;, la menor cantidad de confirmaciones diferentes se define como la cantidad de confirmaciones que se mostrar&amp;iacute;a mediante la &lt;code&gt;git log tag..input&lt;/code&gt; ser&amp;aacute; la menor cantidad de confirmaciones posible.</target>
        </trans-unit>
        <trans-unit id="a7822ac9c32ce308a5503a1fdd5fe89ff6cb69d3" translate="yes" xml:space="preserve">
          <source>If neither of the above exist then &lt;code&gt;$XDG_CONFIG_HOME/git/gitk&lt;/code&gt; is created and used by default. If &lt;code&gt;$XDG_CONFIG_HOME&lt;/code&gt; is not set it defaults to &lt;code&gt;$HOME/.config&lt;/code&gt; in all cases.</source>
          <target state="translated">Si no existe ninguno de los anteriores, se crea y utiliza &lt;code&gt;$XDG_CONFIG_HOME/git/gitk&lt;/code&gt; forma predeterminada. Si &lt;code&gt;$XDG_CONFIG_HOME&lt;/code&gt; no est&amp;aacute; configurado, el valor predeterminado es &lt;code&gt;$HOME/.config&lt;/code&gt; en todos los casos.</target>
        </trans-unit>
        <trans-unit id="cd81c5109f07b879105adf39e250a5f3aca1a356" translate="yes" xml:space="preserve">
          <source>If neither was used, but &lt;code&gt;--date&lt;/code&gt; was given on the command line, show the timestamp in the format requested by &lt;code&gt;--date&lt;/code&gt;.</source>
          <target state="translated">Si no se us&amp;oacute; ninguno, pero se proporcion&amp;oacute; &lt;code&gt;--date&lt;/code&gt; en la l&amp;iacute;nea de comando, muestre la marca de tiempo en el formato solicitado por &lt;code&gt;--date&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a3bb0635e00afaf46918027a40807c06a70ce207" translate="yes" xml:space="preserve">
          <source>If no &amp;lt;pathspec&amp;gt; is given when &lt;code&gt;-A&lt;/code&gt; option is used, all files in the entire working tree are updated (old versions of Git used to limit the update to the current directory and its subdirectories).</source>
          <target state="translated">Si no se proporciona &amp;lt;pathspec&amp;gt; cuando se usa la opci&amp;oacute;n &lt;code&gt;-A&lt;/code&gt; , se actualizan todos los archivos en todo el &amp;aacute;rbol de trabajo (las versiones antiguas de Git se usaban para limitar la actualizaci&amp;oacute;n al directorio actual y sus subdirectorios).</target>
        </trans-unit>
        <trans-unit id="4b6e9bfea0c02571aea512af96edfe88c9715f04" translate="yes" xml:space="preserve">
          <source>If no &amp;lt;pathspec&amp;gt; is given when &lt;code&gt;-u&lt;/code&gt; option is used, all tracked files in the entire working tree are updated (old versions of Git used to limit the update to the current directory and its subdirectories).</source>
          <target state="translated">Si no se proporciona &amp;lt;pathspec&amp;gt; cuando se usa la opci&amp;oacute;n &lt;code&gt;-u&lt;/code&gt; , se actualizan todos los archivos rastreados en todo el &amp;aacute;rbol de trabajo (las versiones anteriores de Git se usaban para limitar la actualizaci&amp;oacute;n al directorio actual y sus subdirectorios).</target>
        </trans-unit>
        <trans-unit id="4b6d20762b018937bfcb3d137cde943022a33140" translate="yes" xml:space="preserve">
          <source>If no &lt;code&gt;--decorate-refs&lt;/code&gt; is given, pretend as if all refs were included. For each candidate, do not use it for decoration if it matches any patterns given to &lt;code&gt;--decorate-refs-exclude&lt;/code&gt; or if it doesn&amp;rsquo;t match any of the patterns given to &lt;code&gt;--decorate-refs&lt;/code&gt;.</source>
          <target state="translated">Si no se proporciona &lt;code&gt;--decorate-refs&lt;/code&gt; , finja como si se hubieran incluido todas las referencias. Para cada candidato, no lo use como decoraci&amp;oacute;n si coincide con alg&amp;uacute;n patr&amp;oacute;n dado a &lt;code&gt;--decorate-refs-exclude&lt;/code&gt; o si no coincide con ninguno de los patrones dados a &lt;code&gt;--decorate-refs&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d7cc86d2479ae0db7a8477b9df1f3902cf870395" translate="yes" xml:space="preserve">
          <source>If no &lt;code&gt;--decorate-refs&lt;/code&gt; is given, pretend as if all refs were included. For each candidate, do not use it for decoration if it matches any patterns given to &lt;code&gt;--decorate-refs-exclude&lt;/code&gt; or if it doesn&amp;rsquo;t match any of the patterns given to &lt;code&gt;--decorate-refs&lt;/code&gt;. The &lt;code&gt;log.excludeDecoration&lt;/code&gt; config option allows excluding refs from the decorations, but an explicit &lt;code&gt;--decorate-refs&lt;/code&gt; pattern will override a match in &lt;code&gt;log.excludeDecoration&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c2ed2d5d960c224ec529b5f6156261c52081093" translate="yes" xml:space="preserve">
          <source>If no &lt;code&gt;-b&lt;/code&gt; option is given, the name of the new branch will be derived from the remote-tracking branch, by looking at the local part of the refspec configured for the corresponding remote, and then stripping the initial part up to the &quot;*&quot;. This would tell us to use &lt;code&gt;hack&lt;/code&gt; as the local branch when branching off of &lt;code&gt;origin/hack&lt;/code&gt; (or &lt;code&gt;remotes/origin/hack&lt;/code&gt;, or even &lt;code&gt;refs/remotes/origin/hack&lt;/code&gt;). If the given name has no slash, or the above guessing results in an empty name, the guessing is aborted. You can explicitly give a name with &lt;code&gt;-b&lt;/code&gt; in such a case.</source>
          <target state="translated">Si no se da la opci&amp;oacute;n &lt;code&gt;-b&lt;/code&gt; , el nombre de la nueva rama se derivar&amp;aacute; de la rama de seguimiento remoto, mirando la parte local de refspec configurada para el control remoto correspondiente, y luego quitando la parte inicial hasta el &quot;* &quot;. Esto nos dir&amp;iacute;a que usemos &lt;code&gt;hack&lt;/code&gt; como la rama local cuando nos bifurquemos de &lt;code&gt;origin/hack&lt;/code&gt; (o &lt;code&gt;remotes/origin/hack&lt;/code&gt; , o incluso &lt;code&gt;refs/remotes/origin/hack&lt;/code&gt; ). Si el nombre de pila no tiene barra, o si la adivinaci&amp;oacute;n anterior da como resultado un nombre vac&amp;iacute;o, la adivinaci&amp;oacute;n se cancela. Puede dar expl&amp;iacute;citamente un nombre con &lt;code&gt;-b&lt;/code&gt; en tal caso.</target>
        </trans-unit>
        <trans-unit id="4b362c22d46cf3c9ce26cb952c31ebfa05896260" translate="yes" xml:space="preserve">
          <source>If no &lt;code&gt;-c&lt;/code&gt; option is given, the name of the new branch will be derived from the remote-tracking branch, by looking at the local part of the refspec configured for the corresponding remote, and then stripping the initial part up to the &quot;*&quot;. This would tell us to use &lt;code&gt;hack&lt;/code&gt; as the local branch when branching off of &lt;code&gt;origin/hack&lt;/code&gt; (or &lt;code&gt;remotes/origin/hack&lt;/code&gt;, or even &lt;code&gt;refs/remotes/origin/hack&lt;/code&gt;). If the given name has no slash, or the above guessing results in an empty name, the guessing is aborted. You can explicitly give a name with &lt;code&gt;-c&lt;/code&gt; in such a case.</source>
          <target state="translated">Si no se proporciona la opci&amp;oacute;n &lt;code&gt;-c&lt;/code&gt; , el nombre de la nueva rama se derivar&amp;aacute; de la rama de seguimiento remoto, mirando la parte local de la especificaci&amp;oacute;n de referencia configurada para el control remoto correspondiente, y luego eliminando la parte inicial hasta el &quot;* &quot;. Esto nos dir&amp;iacute;a que usemos &lt;code&gt;hack&lt;/code&gt; como la rama local cuando nos bifurquemos de &lt;code&gt;origin/hack&lt;/code&gt; (o &lt;code&gt;remotes/origin/hack&lt;/code&gt; , o incluso &lt;code&gt;refs/remotes/origin/hack&lt;/code&gt; ). Si el nombre de pila no tiene barra, o si la adivinaci&amp;oacute;n anterior da como resultado un nombre vac&amp;iacute;o, la adivinaci&amp;oacute;n se cancela. Puede dar expl&amp;iacute;citamente un nombre con &lt;code&gt;-c&lt;/code&gt; en tal caso.</target>
        </trans-unit>
        <trans-unit id="f5eb9ed53cf409691a2adb1a958e7a2a354184a7" translate="yes" xml:space="preserve">
          <source>If no branch is specified and neither &lt;code&gt;-b&lt;/code&gt; nor &lt;code&gt;-B&lt;/code&gt; nor &lt;code&gt;--detach&lt;/code&gt; is used, then &lt;code&gt;git worktree add&lt;/code&gt; defaults to creating a new branch from HEAD. If &lt;code&gt;worktree.guessRemote&lt;/code&gt; is set to true, &lt;code&gt;worktree add&lt;/code&gt; tries to find a remote-tracking branch whose name uniquely matches the new branch name. If such a branch exists, it is checked out and set as &quot;upstream&quot; for the new branch. If no such match can be found, it falls back to creating a new branch from the current HEAD.</source>
          <target state="translated">Si no se especifica ninguna rama y no se utilizan &lt;code&gt;-b&lt;/code&gt; ni &lt;code&gt;-B&lt;/code&gt; ni &lt;code&gt;--detach&lt;/code&gt; , entonces &lt;code&gt;git worktree add&lt;/code&gt; valores predeterminados para crear una nueva rama desde HEAD. Si &lt;code&gt;worktree.guessRemote&lt;/code&gt; se establece en true, &lt;code&gt;worktree add&lt;/code&gt; intenta encontrar una rama de seguimiento remoto cuyo nombre coincida de forma exclusiva con el nombre de la nueva rama. Si existe una rama de este tipo, se comprueba y se establece como &quot;ascendente&quot; para la nueva rama. Si no se puede encontrar tal coincidencia, se recurre a la creaci&amp;oacute;n de una nueva rama desde el HEAD actual.</target>
        </trans-unit>
        <trans-unit id="cd840721ca4f2ba5f348ba0cdeddc96e7d47ba2a" translate="yes" xml:space="preserve">
          <source>If no command-line option is passed, the &lt;code&gt;help.format&lt;/code&gt; configuration variable will be checked. The following values are supported for this variable; they make &lt;code&gt;git help&lt;/code&gt; behave as their corresponding command- line option:</source>
          <target state="translated">Si no se pasa ninguna opci&amp;oacute;n de l&amp;iacute;nea de comandos , se verificar&amp;aacute; la variable de configuraci&amp;oacute;n &lt;code&gt;help.format&lt;/code&gt; . Los siguientes valores son compatibles con esta variable; hacen que &lt;code&gt;git help&lt;/code&gt; se comporte como su opci&amp;oacute;n de l&amp;iacute;nea de comandos correspondiente:</target>
        </trans-unit>
        <trans-unit id="48f09dc10a5152e65a114506d3daba225636a70e" translate="yes" xml:space="preserve">
          <source>If no commit ID is found, &lt;code&gt;git get-tar-commit-id&lt;/code&gt; quietly exists with a return code of 1. This can happen if the archive had not been created using &lt;code&gt;git archive&lt;/code&gt; or if the first parameter of &lt;code&gt;git archive&lt;/code&gt; had been a tree ID instead of a commit ID or tag.</source>
          <target state="translated">Si no se encuentra una ID de confirmaci&amp;oacute;n, &lt;code&gt;git get-tar-commit-id&lt;/code&gt; existe silenciosamente con un c&amp;oacute;digo de retorno de 1. Esto puede suceder si el archivo no se ha creado usando &lt;code&gt;git archive&lt;/code&gt; o si el primer par&amp;aacute;metro de &lt;code&gt;git archive&lt;/code&gt; ha sido una ID de &amp;aacute;rbol en lugar de un ID o etiqueta de confirmaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="daf3aead6a5bfcff96ae9ec0da48e9d2be49b75e" translate="yes" xml:space="preserve">
          <source>If no commit is given from the command line, merge the remote-tracking branches that the current branch is configured to use as its upstream. See also the configuration section of this manual page.</source>
          <target state="translated">Si no se da un commit desde la línea de comando,fusiona las ramas de rastreo remoto que la rama actual está configurada para usar como su upstream.Véase también la sección de configuración de esta página del manual.</target>
        </trans-unit>
        <trans-unit id="7188b50eb220f479115e7bb7b4e8a6b937273e6f" translate="yes" xml:space="preserve">
          <source>If no format is specified, the default format is &lt;code&gt;%(objectname)
%(objecttype) %(objectsize)&lt;/code&gt;.</source>
          <target state="translated">Si no se especifica ning&amp;uacute;n formato, el formato predeterminado es &lt;code&gt;%(objectname) %(objecttype) %(objectsize)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e72375796417844d20df5e1c264d965559c3c0c9" translate="yes" xml:space="preserve">
          <source>If no further options are given, all reading options will read all of these files that are available. If the global or the system-wide configuration file are not available they will be ignored. If the repository configuration file is not available or readable, &lt;code&gt;git config&lt;/code&gt; will exit with a non-zero error code. However, in neither case will an error message be issued.</source>
          <target state="translated">Si no se dan m&amp;aacute;s opciones, todas las opciones de lectura leer&amp;aacute;n todos estos archivos que est&amp;eacute;n disponibles. Si el archivo de configuraci&amp;oacute;n global o de todo el sistema no est&amp;aacute; disponible, se ignorar&amp;aacute;n. Si el archivo de configuraci&amp;oacute;n del repositorio no est&amp;aacute; disponible o no se puede leer, &lt;code&gt;git config&lt;/code&gt; se cerrar&amp;aacute; con un c&amp;oacute;digo de error distinto de cero. Sin embargo, en ning&amp;uacute;n caso se emitir&amp;aacute; un mensaje de error.</target>
        </trans-unit>
        <trans-unit id="542c100edd4ea5b59ab171a7795bc617673af483" translate="yes" xml:space="preserve">
          <source>If no objects are given, &lt;code&gt;git fsck&lt;/code&gt; defaults to using the index file, all SHA-1 references in &lt;code&gt;refs&lt;/code&gt; namespace, and all reflogs (unless --no-reflogs is given) as heads.</source>
          <target state="translated">Si no hay objetos se dan, &lt;code&gt;git fsck&lt;/code&gt; por defecto utilizando el archivo de &amp;iacute;ndice, todas las referencias SHA-1 en &lt;code&gt;refs&lt;/code&gt; de espacio de nombres, y todos reflogs (a menos --no-reflogs se da) como cabezas.</target>
        </trans-unit>
        <trans-unit id="3ac71fd77839914951c054588c999a4a8ef138ac" translate="yes" xml:space="preserve">
          <source>If no revisions are passed on the command line and either standard input is not a terminal or there is no current branch, &lt;code&gt;git shortlog&lt;/code&gt; will output a summary of the log read from standard input, without reference to the current repository.</source>
          <target state="translated">Si no se pasan revisiones en la l&amp;iacute;nea de comando y la entrada est&amp;aacute;ndar no es una terminal o no hay una rama actual, &lt;code&gt;git shortlog&lt;/code&gt; generar&amp;aacute; un resumen del registro le&amp;iacute;do desde la entrada est&amp;aacute;ndar, sin referencia al repositorio actual.</target>
        </trans-unit>
        <trans-unit id="abf7234009b8e35c90eeb194fcd9fd8cfced1763" translate="yes" xml:space="preserve">
          <source>If no username is set for a network authentication, use this username by default. See credential.&amp;lt;context&amp;gt;.* below, and &lt;a href=&quot;gitcredentials&quot;&gt;gitcredentials[7]&lt;/a&gt;.</source>
          <target state="translated">Si no se establece ning&amp;uacute;n nombre de usuario para una autenticaci&amp;oacute;n de red, utilice este nombre de usuario de forma predeterminada. Consulte credential. &amp;lt;context&amp;gt;. * A continuaci&amp;oacute;n, y &lt;a href=&quot;gitcredentials&quot;&gt;gitcredentials [7]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="68bd2465b7813ae05686685c60e9c1221c412754" translate="yes" xml:space="preserve">
          <source>If non-zero, all packs larger than this limit are kept when &lt;code&gt;git gc&lt;/code&gt; is run. This is very similar to &lt;code&gt;--keep-base-pack&lt;/code&gt; except that all packs that meet the threshold are kept, not just the base pack. Defaults to zero. Common unit suffixes of &lt;code&gt;k&lt;/code&gt;, &lt;code&gt;m&lt;/code&gt;, or &lt;code&gt;g&lt;/code&gt; are supported.</source>
          <target state="translated">Si no es cero, todos los paquetes que superen este l&amp;iacute;mite se mantienen cuando se ejecuta &lt;code&gt;git gc&lt;/code&gt; . Esto es muy similar a &lt;code&gt;--keep-base-pack&lt;/code&gt; excepto que se conservan todos los paquetes que cumplen con el umbral, no solo el paquete base. Por defecto es cero. Se admiten los sufijos de unidad comunes de &lt;code&gt;k&lt;/code&gt; , &lt;code&gt;m&lt;/code&gt; o &lt;code&gt;g&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="35c0dd1514e6236cb81ffc0d16969826106d45e0" translate="yes" xml:space="preserve">
          <source>If non-zero, all packs larger than this limit are kept when &lt;code&gt;git gc&lt;/code&gt; is run. This is very similar to &lt;code&gt;--keep-largest-pack&lt;/code&gt; except that all packs that meet the threshold are kept, not just the largest pack. Defaults to zero. Common unit suffixes of &lt;code&gt;k&lt;/code&gt;, &lt;code&gt;m&lt;/code&gt;, or &lt;code&gt;g&lt;/code&gt; are supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80f929e50dc4409c5d26df44de311be2ffed8079" translate="yes" xml:space="preserve">
          <source>If none of &lt;code&gt;--stdin&lt;/code&gt;, &lt;code&gt;--all&lt;/code&gt;, or &lt;code&gt;--&lt;/code&gt; is used, the first argument will be treated as an attribute and the rest of the arguments as pathnames.</source>
          <target state="translated">Si ninguno de &lt;code&gt;--stdin&lt;/code&gt; , &lt;code&gt;--all&lt;/code&gt; , o &lt;code&gt;--&lt;/code&gt; se utiliza, el primer argumento ser&amp;aacute; tratado como un atributo y el resto de los argumentos como trayectorias.</target>
        </trans-unit>
        <trans-unit id="af13390230f0ed2d9d7a8cd452e31841984f2fea" translate="yes" xml:space="preserve">
          <source>If not set (default), it means that this feature is disabled.</source>
          <target state="translated">Si no está configurado (por defecto),significa que esta función está desactivada.</target>
        </trans-unit>
        <trans-unit id="ffeb0befbf6f99dd0616072c3aff8f91a09da3dd" translate="yes" xml:space="preserve">
          <source>If not set explicitly with &lt;code&gt;--file&lt;/code&gt;, there are four files where &lt;code&gt;git config&lt;/code&gt; will search for configuration options:</source>
          <target state="translated">Si no se establece expl&amp;iacute;citamente con &lt;code&gt;--file&lt;/code&gt; , hay cuatro archivos donde &lt;code&gt;git config&lt;/code&gt; buscar&amp;aacute; opciones de configuraci&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="42b0a7358d3a7018936abd1faefcf6d947a2a30c" translate="yes" xml:space="preserve">
          <source>If not set explicitly with &lt;code&gt;--file&lt;/code&gt;, there are two files where git-credential-store will search for credentials in order of precedence:</source>
          <target state="translated">Si no se establece expl&amp;iacute;citamente con &lt;code&gt;--file&lt;/code&gt; , hay dos archivos donde git-credential-store buscar&amp;aacute; credenciales en orden de precedencia:</target>
        </trans-unit>
        <trans-unit id="7dcc101d67cdfa1a1e655970a079699595239b44" translate="yes" xml:space="preserve">
          <source>If not set in the environment, the list of notes to copy depends on the &lt;code&gt;notes.rewrite.&amp;lt;command&amp;gt;&lt;/code&gt; and &lt;code&gt;notes.rewriteRef&lt;/code&gt; settings.</source>
          <target state="translated">Si no se establece en el entorno, la lista de notas para copiar depende de las &lt;code&gt;notes.rewrite.&amp;lt;command&amp;gt;&lt;/code&gt; y &lt;code&gt;notes.rewriteRef&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="324a704070b71849b1d4e1ca6f933c2b17a7a16e" translate="yes" xml:space="preserve">
          <source>If not specified, the contents are restored from &lt;code&gt;HEAD&lt;/code&gt; if &lt;code&gt;--staged&lt;/code&gt; is given, otherwise from the index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9f85a49fbdf8e068a215ef9d6f0bd6bbfeb7a4e" translate="yes" xml:space="preserve">
          <source>If not specified, the default restore source for the working tree is the index, and the default restore source for the index is &lt;code&gt;HEAD&lt;/code&gt;. When both &lt;code&gt;--staged&lt;/code&gt; and &lt;code&gt;--worktree&lt;/code&gt; are specified, &lt;code&gt;--source&lt;/code&gt; must also be specified.</source>
          <target state="translated">Si no se especifica, la fuente de restauraci&amp;oacute;n predeterminada para el &amp;aacute;rbol de trabajo es el &amp;iacute;ndice y la fuente de restauraci&amp;oacute;n predeterminada para el &amp;iacute;ndice es &lt;code&gt;HEAD&lt;/code&gt; . Cuando se especifican tanto &lt;code&gt;--staged&lt;/code&gt; como &lt;code&gt;--worktree&lt;/code&gt; , tambi&amp;eacute;n se debe especificar &lt;code&gt;--source&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="56d3a4f46f938bb42b1fca6d786b8e7fc54bbe14" translate="yes" xml:space="preserve">
          <source>If nothing matches, &lt;code&gt;git show-ref&lt;/code&gt; will return an error code of 1, and in the case of verification, it will show an error message.</source>
          <target state="translated">Si nada coincide, &lt;code&gt;git show-ref&lt;/code&gt; devolver&amp;aacute; un c&amp;oacute;digo de error de 1, y en el caso de verificaci&amp;oacute;n, mostrar&amp;aacute; un mensaje de error.</target>
        </trans-unit>
        <trans-unit id="b1f5a8844fabfc412b2762d5d95a3c4d967624ca" translate="yes" xml:space="preserve">
          <source>If one of &lt;code&gt;-a&lt;/code&gt;, &lt;code&gt;-s&lt;/code&gt;, or &lt;code&gt;-u &amp;lt;keyid&amp;gt;&lt;/code&gt; is passed, the command creates a &lt;code&gt;tag&lt;/code&gt; object, and requires a tag message. Unless &lt;code&gt;-m &amp;lt;msg&amp;gt;&lt;/code&gt; or &lt;code&gt;-F &amp;lt;file&amp;gt;&lt;/code&gt; is given, an editor is started for the user to type in the tag message.</source>
          <target state="translated">Si se pasa uno de &lt;code&gt;-a&lt;/code&gt; , &lt;code&gt;-s&lt;/code&gt; o &lt;code&gt;-u &amp;lt;keyid&amp;gt;&lt;/code&gt; , el comando crea un objeto de &lt;code&gt;tag&lt;/code&gt; y requiere un mensaje de etiqueta. A menos que se proporcione &lt;code&gt;-m &amp;lt;msg&amp;gt;&lt;/code&gt; o &lt;code&gt;-F &amp;lt;file&amp;gt;&lt;/code&gt; , se inicia un editor para que el usuario escriba el mensaje de etiqueta.</target>
        </trans-unit>
        <trans-unit id="2202ccf1357459c2102fac8580d0b9c370cb2843" translate="yes" xml:space="preserve">
          <source>If one or more &amp;lt;file&amp;gt; parameters are given, the merge tool program will be run to resolve differences on each file (skipping those without conflicts). Specifying a directory will include all unresolved files in that path. If no &amp;lt;file&amp;gt; names are specified, &lt;code&gt;git mergetool&lt;/code&gt; will run the merge tool program on every file with merge conflicts.</source>
          <target state="translated">Si se proporcionan uno o m&amp;aacute;s par&amp;aacute;metros de &amp;lt;archivo&amp;gt;, se ejecutar&amp;aacute; el programa de la herramienta de combinaci&amp;oacute;n para resolver las diferencias en cada archivo (omitiendo los que no tengan conflictos). La especificaci&amp;oacute;n de un directorio incluir&amp;aacute; todos los archivos no resueltos en esa ruta. Si no se especifican nombres de &amp;lt;archivo&amp;gt;, &lt;code&gt;git mergetool&lt;/code&gt; ejecutar&amp;aacute; el programa de herramienta de combinaci&amp;oacute;n en cada archivo con conflictos de combinaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="ce7c35e9da7a7a12641957ffb2984ef7917b0e3e" translate="yes" xml:space="preserve">
          <source>If one or more patterns are given, only refs are shown that match against at least one pattern, either using fnmatch(3) or literally, in the latter case matching completely or from the beginning up to a slash.</source>
          <target state="translated">Si se dan uno o más patrones,sólo se muestran los árbitros que coinciden con al menos un patrón,ya sea usando fnmatch(3)o literalmente,en este último caso coincidiendo completamente o desde el principio hasta una barra.</target>
        </trans-unit>
        <trans-unit id="d335af2a37a580d9863e5a06bbfa0d646026268f" translate="yes" xml:space="preserve">
          <source>If one wishes to use the ref &lt;code&gt;ref/notes/true&lt;/code&gt;, please use that literal instead.</source>
          <target state="translated">Si uno desea usar ref &lt;code&gt;ref/notes/true&lt;/code&gt; , use ese literal en su lugar.</target>
        </trans-unit>
        <trans-unit id="c90c8ad16602dc9d2f205c9d917c69aa3c723c01" translate="yes" xml:space="preserve">
          <source>If only &amp;lt;infd&amp;gt; is given, it is assumed to be a bidirectional socket connected to remote Git server (git-upload-pack, git-receive-pack or git-upload-archive). If both &amp;lt;infd&amp;gt; and &amp;lt;outfd&amp;gt; are given, they are assumed to be pipes connected to a remote Git server (&amp;lt;infd&amp;gt; being the inbound pipe and &amp;lt;outfd&amp;gt; being the outbound pipe.</source>
          <target state="translated">Si solo se proporciona &amp;lt;infd&amp;gt;, se supone que es un socket bidireccional conectado al servidor Git remoto (git-upload-pack, git-receive-pack o git-upload-archive). Si se proporcionan tanto &amp;lt;infd&amp;gt; como &amp;lt;outfd&amp;gt;, se supone que son tuber&amp;iacute;as conectadas a un servidor Git remoto (&amp;lt;infd&amp;gt; es la tuber&amp;iacute;a de entrada y &amp;lt;outfd&amp;gt; es la tuber&amp;iacute;a de salida.</target>
        </trans-unit>
        <trans-unit id="ce722a3060a9ef1801cda4fdb7cc3661d10ec67c" translate="yes" xml:space="preserve">
          <source>If only 1 tree is specified, &lt;code&gt;git read-tree&lt;/code&gt; operates as if the user did not specify &lt;code&gt;-m&lt;/code&gt;, except that if the original index has an entry for a given pathname, and the contents of the path match with the tree being read, the stat info from the index is used. (In other words, the index&amp;rsquo;s stat()s take precedence over the merged tree&amp;rsquo;s).</source>
          <target state="translated">Si solo se especifica 1 &amp;aacute;rbol, &lt;code&gt;git read-tree&lt;/code&gt; opera como si el usuario no especificara &lt;code&gt;-m&lt;/code&gt; , excepto que si el &amp;iacute;ndice original tiene una entrada para un nombre de ruta dado, y el contenido de la ruta coincide con el &amp;aacute;rbol que se est&amp;aacute; leyendo, el Se utiliza la informaci&amp;oacute;n estad&amp;iacute;stica del &amp;iacute;ndice. (En otras palabras, las estad&amp;iacute;sticas del &amp;iacute;ndice tienen prioridad sobre las del &amp;aacute;rbol combinado).</target>
        </trans-unit>
        <trans-unit id="ed44ceba40face622ee83aefe1801bafac3f799c" translate="yes" xml:space="preserve">
          <source>If option &lt;code&gt;check-connectivity&lt;/code&gt; is requested, the helper must output &lt;code&gt;connectivity-ok&lt;/code&gt; if the clone is self-contained and connected.</source>
          <target state="translated">Si se solicita la opci&amp;oacute;n de &lt;code&gt;check-connectivity&lt;/code&gt; , el asistente debe mostrar &lt;code&gt;connectivity-ok&lt;/code&gt; si el clon es aut&amp;oacute;nomo y est&amp;aacute; conectado.</target>
        </trans-unit>
        <trans-unit id="d94f0028bb24f94910f79bf2b787bad6af3cf852" translate="yes" xml:space="preserve">
          <source>If other people are pulling from your repository over dumb transport protocols (HTTP), you need to keep this repository &lt;code&gt;dumb transport friendly&lt;/code&gt;. After &lt;code&gt;git init&lt;/code&gt;, &lt;code&gt;$GIT_DIR/hooks/post-update.sample&lt;/code&gt; copied from the standard templates would contain a call to &lt;code&gt;git update-server-info&lt;/code&gt; but you need to manually enable the hook with &lt;code&gt;mv post-update.sample post-update&lt;/code&gt;. This makes sure &lt;code&gt;git update-server-info&lt;/code&gt; keeps the necessary files up to date.</source>
          <target state="translated">Si otras personas extraen de su repositorio a trav&amp;eacute;s de protocolos de transporte tontos (HTTP), debe mantener este repositorio &lt;code&gt;dumb transport friendly&lt;/code&gt; . Despu&amp;eacute;s de &lt;code&gt;git init&lt;/code&gt; , &lt;code&gt;$GIT_DIR/hooks/post-update.sample&lt;/code&gt; copiado de las plantillas est&amp;aacute;ndar contendr&amp;iacute;a una llamada a &lt;code&gt;git update-server-info&lt;/code&gt; , pero debe habilitar manualmente el gancho con &lt;code&gt;mv post-update.sample post-update&lt;/code&gt; . Esto asegura que &lt;code&gt;git update-server-info&lt;/code&gt; mantenga actualizados los archivos necesarios.</target>
        </trans-unit>
        <trans-unit id="e17148a8f3d2ab81971460344696589bc00ec7fe" translate="yes" xml:space="preserve">
          <source>If provided, the results are limited to a subset of files matching one of the provided pathspecs.</source>
          <target state="translated">Si se proporcionan,los resultados se limitan a un subconjunto de archivos que coinciden con una de las especificaciones de ruta proporcionadas.</target>
        </trans-unit>
        <trans-unit id="c6bf36e1017847984a394e553be49b7f1e0149c6" translate="yes" xml:space="preserve">
          <source>If separate &lt;code&gt;author&lt;/code&gt; and &lt;code&gt;committer&lt;/code&gt; commands are used in a &lt;code&gt;commit&lt;/code&gt; the timestamps may not match, as the system clock will be polled twice (once for each command). The only way to ensure that both author and committer identity information has the same timestamp is to omit &lt;code&gt;author&lt;/code&gt; (thus copying from &lt;code&gt;committer&lt;/code&gt;) or to use a date format other than &lt;code&gt;now&lt;/code&gt;.</source>
          <target state="translated">Si se utilizan comandos de &lt;code&gt;author&lt;/code&gt; y de &lt;code&gt;committer&lt;/code&gt; independientes en una &lt;code&gt;commit&lt;/code&gt; las marcas de tiempo no coincidan, ya que el reloj del sistema se sondear&amp;aacute; dos veces (una vez para cada comando). La &amp;uacute;nica forma de asegurarse de que tanto el autor como la informaci&amp;oacute;n de identidad del autor de la confirmaci&amp;oacute;n tengan la misma marca de tiempo es omitir el &lt;code&gt;author&lt;/code&gt; (por lo tanto, copiar de la persona que &lt;code&gt;committer&lt;/code&gt; ) o utilizar un formato de fecha diferente al &lt;code&gt;now&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="866d5a5839fdc5ae41f48af4bbd37789bc250691" translate="yes" xml:space="preserve">
          <source>If set &lt;code&gt;--base=auto&lt;/code&gt; in cmdline, it will track base commit automatically, the base commit will be the merge base of tip commit of the remote-tracking branch and revision-range specified in cmdline. For a local branch, you need to track a remote branch by &lt;code&gt;git branch
--set-upstream-to&lt;/code&gt; before using this option.</source>
          <target state="translated">Si se establece &lt;code&gt;--base=auto&lt;/code&gt; en cmdline, har&amp;aacute; un seguimiento de la confirmaci&amp;oacute;n base autom&amp;aacute;ticamente, la confirmaci&amp;oacute;n base ser&amp;aacute; la base de fusi&amp;oacute;n de la confirmaci&amp;oacute;n final de la rama de seguimiento remoto y el rango de revisi&amp;oacute;n especificado en cmdline. Para una sucursal local, debe rastrear una sucursal remota por &lt;code&gt;git branch --set-upstream-to&lt;/code&gt; antes de usar esta opci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="c4e55e2ff9b8cf62b34b50d7d6b4a09bd94fb5d9" translate="yes" xml:space="preserve">
          <source>If set to &quot;auto&quot;, &lt;code&gt;git-commit&lt;/code&gt; would select a character that is not the beginning character of any line in existing commit messages.</source>
          <target state="translated">Si se establece en &quot;auto&quot;, &lt;code&gt;git-commit&lt;/code&gt; seleccionar&amp;iacute;a un car&amp;aacute;cter que no es el car&amp;aacute;cter inicial de ninguna l&amp;iacute;nea en los mensajes de confirmaci&amp;oacute;n existentes.</target>
        </trans-unit>
        <trans-unit id="26543a57c821840599fb24538b1a26d2383ded69" translate="yes" xml:space="preserve">
          <source>If set to &quot;true&quot;, it is equivalent to specifying &lt;code&gt;--force-if-includes&lt;/code&gt; as an option to &lt;a href=&quot;git-push&quot;&gt;git-push[1]&lt;/a&gt; in the command line. Adding &lt;code&gt;--no-force-if-includes&lt;/code&gt; at the time of push overrides this configuration setting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cb1da898d09757c537ab553b3fe27d9de1953ee" translate="yes" xml:space="preserve">
          <source>If set to &quot;warn&quot;, git rebase -i will print a warning if some commits are removed (e.g. a line was deleted), however the rebase will still proceed. If set to &quot;error&quot;, it will print the previous warning and stop the rebase, &lt;code&gt;git rebase --edit-todo&lt;/code&gt; can then be used to correct the error. If set to &quot;ignore&quot;, no checking is done. To drop a commit without warning or error, use the &lt;code&gt;drop&lt;/code&gt; command in the todo list. Defaults to &quot;ignore&quot;.</source>
          <target state="translated">Si se establece en &quot;advertir&quot;, git rebase -i imprimir&amp;aacute; una advertencia si se eliminan algunas confirmaciones (por ejemplo, se elimin&amp;oacute; una l&amp;iacute;nea), sin embargo, la rebase continuar&amp;aacute;. Si se establece en &quot;error&quot;, imprimir&amp;aacute; la advertencia anterior y detendr&amp;aacute; el rebase, luego se puede usar &lt;code&gt;git rebase --edit-todo&lt;/code&gt; para corregir el error. Si se establece en &quot;ignorar&quot;, no se realiza ninguna comprobaci&amp;oacute;n. Para eliminar una confirmaci&amp;oacute;n sin advertencia o error, use el comando de &lt;code&gt;drop&lt;/code&gt; en la lista de tareas pendientes. El valor predeterminado es &quot;ignorar&quot;.</target>
        </trans-unit>
        <trans-unit id="ac8b0270c3c47d08febdcf04811ec5325e6bcef3" translate="yes" xml:space="preserve">
          <source>If set to &lt;code&gt;0&lt;/code&gt;, Git will complete any requested operation without performing any optional sub-operations that require taking a lock. For example, this will prevent &lt;code&gt;git status&lt;/code&gt; from refreshing the index as a side effect. This is useful for processes running in the background which do not want to cause lock contention with other operations on the repository. Defaults to &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">Si se establece en &lt;code&gt;0&lt;/code&gt; , Git completar&amp;aacute; cualquier operaci&amp;oacute;n solicitada sin realizar ninguna suboperaci&amp;oacute;n opcional que requiera realizar un bloqueo. Por ejemplo, esto evitar&amp;aacute; que &lt;code&gt;git status&lt;/code&gt; actualice el &amp;iacute;ndice como efecto secundario. Esto es &amp;uacute;til para los procesos que se ejecutan en segundo plano y que no quieren causar contenci&amp;oacute;n de bloqueo con otras operaciones en el repositorio. Por defecto es &lt;code&gt;1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9d1e5156e1d430a4750260179109e036962ca85d" translate="yes" xml:space="preserve">
          <source>If set to &lt;code&gt;1&lt;/code&gt;, include broken or badly named refs when iterating over lists of refs. In a normal, non-corrupted repository, this does nothing. However, enabling it may help git to detect and abort some operations in the presence of broken refs. Git sets this variable automatically when performing destructive operations like &lt;a href=&quot;git-prune&quot;&gt;git-prune[1]&lt;/a&gt;. You should not need to set it yourself unless you want to be paranoid about making sure an operation has touched every ref (e.g., because you are cloning a repository to make a backup).</source>
          <target state="translated">Si se establece en &lt;code&gt;1&lt;/code&gt; , incluya referencias rotas o con nombres incorrectos al iterar sobre listas de referencias. En un repositorio normal, no da&amp;ntilde;ado, esto no hace nada. Sin embargo, habilitarlo puede ayudar a git a detectar y abortar algunas operaciones en presencia de referencias rotas. Git establece esta variable autom&amp;aacute;ticamente cuando realiza operaciones destructivas como &lt;a href=&quot;git-prune&quot;&gt;git-prune [1]&lt;/a&gt; . No deber&amp;iacute;a necesitar configurarlo usted mismo a menos que quiera ser paranoico acerca de asegurarse de que una operaci&amp;oacute;n haya tocado todas las referencias (por ejemplo, porque est&amp;aacute; clonando un repositorio para hacer una copia de seguridad).</target>
        </trans-unit>
        <trans-unit id="721e268a3bbca2372f644ef6baf34d6bc14a8b54" translate="yes" xml:space="preserve">
          <source>If set to &lt;code&gt;false&lt;/code&gt;, behave as if the &lt;code&gt;--no-replace-objects&lt;/code&gt; option was given on the command line. See &lt;a href=&quot;git&quot;&gt;git[1]&lt;/a&gt; and &lt;a href=&quot;git-replace&quot;&gt;git-replace[1]&lt;/a&gt; for more information.</source>
          <target state="translated">Si se establece en &lt;code&gt;false&lt;/code&gt; , se comporta como si la &lt;code&gt;--no-replace-objects&lt;/code&gt; se hubiera proporcionado en la l&amp;iacute;nea de comando. Consulte &lt;a href=&quot;git&quot;&gt;git [1]&lt;/a&gt; y &lt;a href=&quot;git-replace&quot;&gt;git-replace [1]&lt;/a&gt; para obtener m&amp;aacute;s informaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="0f2d027bcde6fa30d6f1d075f8f588cf0e958fbb" translate="yes" xml:space="preserve">
          <source>If set to &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;git diff&lt;/code&gt; does not show changes outside of the directory and show pathnames relative to the current directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c80e3d63d134dccb3136c655fb06b3aa0219fb0" translate="yes" xml:space="preserve">
          <source>If set to &lt;code&gt;yes&lt;/code&gt;, print an ellipsis following an (abbreviated) SHA-1 value. This affects indications of detached HEADs (&lt;a href=&quot;git-checkout&quot;&gt;git-checkout[1]&lt;/a&gt;) and the raw diff output (&lt;a href=&quot;git-diff&quot;&gt;git-diff[1]&lt;/a&gt;). Printing an ellipsis in the cases mentioned is no longer considered adequate and support for it is likely to be removed in the foreseeable future (along with the variable).</source>
          <target state="translated">Si se establece en &lt;code&gt;yes&lt;/code&gt; , imprima una elipsis despu&amp;eacute;s de un valor SHA-1 (abreviado). Esto afecta las indicaciones de HEADs separados ( &lt;a href=&quot;git-checkout&quot;&gt;git-checkout [1]&lt;/a&gt; ) y la salida de diff sin procesar ( &lt;a href=&quot;git-diff&quot;&gt;git-diff [1]&lt;/a&gt; ). Imprimir una elipsis en los casos mencionados ya no se considera adecuado y es probable que se elimine el soporte en un futuro previsible (junto con la variable).</target>
        </trans-unit>
        <trans-unit id="03e97ab625ba0ca85ff94dae74e07745d32e9ba5" translate="yes" xml:space="preserve">
          <source>If set to a colon-separated list of protocols, behave as if &lt;code&gt;protocol.allow&lt;/code&gt; is set to &lt;code&gt;never&lt;/code&gt;, and each of the listed protocols has &lt;code&gt;protocol.&amp;lt;name&amp;gt;.allow&lt;/code&gt; set to &lt;code&gt;always&lt;/code&gt; (overriding any existing configuration). In other words, any protocol not mentioned will be disallowed (i.e., this is a whitelist, not a blacklist). See the description of &lt;code&gt;protocol.allow&lt;/code&gt; in &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt; for more details.</source>
          <target state="translated">Si se configura en una lista de protocolos separados por dos puntos, se comporta como si &lt;code&gt;protocol.allow&lt;/code&gt; estuviera configurado como &lt;code&gt;never&lt;/code&gt; , y cada uno de los protocolos enumerados tiene &lt;code&gt;protocol.&amp;lt;name&amp;gt;.allow&lt;/code&gt; configurado como &lt;code&gt;always&lt;/code&gt; (anulando cualquier configuraci&amp;oacute;n existente). En otras palabras, se rechazar&amp;aacute; cualquier protocolo que no se mencione (es decir, se trata de una lista blanca, no una lista negra). Consulte la descripci&amp;oacute;n de &lt;code&gt;protocol.allow&lt;/code&gt; en &lt;a href=&quot;git-config&quot;&gt;git-config [1]&lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="3efcc8bea067f2176f4b0bb44941378607e1ec05" translate="yes" xml:space="preserve">
          <source>If set to an algorithm, indicate that the caller wants to interact with the remote side using that algorithm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d02bbac09e65cccb0fb85d779cd5ffdc25f0fea6" translate="yes" xml:space="preserve">
          <source>If set to either a valid &lt;code&gt;&amp;lt;mode&amp;gt;&lt;/code&gt; or a true value, moved lines in a diff are colored differently, for details of valid modes see &lt;code&gt;--color-moved&lt;/code&gt; in &lt;a href=&quot;git-diff&quot;&gt;git-diff[1]&lt;/a&gt;. If simply set to true the default color mode will be used. When set to false, moved lines are not colored.</source>
          <target state="translated">Si se establece en un &lt;code&gt;&amp;lt;mode&amp;gt;&lt;/code&gt; v&amp;aacute;lido o un valor verdadero, las l&amp;iacute;neas movidas en un diff se colorean de manera diferente, para obtener detalles de los modos v&amp;aacute;lidos, consulte &lt;code&gt;--color-moved&lt;/code&gt; en &lt;a href=&quot;git-diff&quot;&gt;git-diff [1]&lt;/a&gt; . Si simplemente se establece en verdadero, se utilizar&amp;aacute; el modo de color predeterminado. Cuando se establece en falso, las l&amp;iacute;neas movidas no se colorean.</target>
        </trans-unit>
        <trans-unit id="d2017527381afe3327ef07745ea82e7ee1e2ae55" translate="yes" xml:space="preserve">
          <source>If set to true enable &lt;code&gt;--autosquash&lt;/code&gt; option by default.</source>
          <target state="translated">Si se establece en true, habilite la opci&amp;oacute;n &lt;code&gt;--autosquash&lt;/code&gt; de forma predeterminada.</target>
        </trans-unit>
        <trans-unit id="7630a0d058d7490b6c2c7394afc94b9292f8389f" translate="yes" xml:space="preserve">
          <source>If set to true enable &lt;code&gt;--follow-tags&lt;/code&gt; option by default. You may override this configuration at time of push by specifying &lt;code&gt;--no-follow-tags&lt;/code&gt;.</source>
          <target state="translated">Si se establece en true, habilite la opci&amp;oacute;n &lt;code&gt;--follow-tags&lt;/code&gt; de forma predeterminada. Puede anular esta configuraci&amp;oacute;n en el momento del &lt;code&gt;--no-follow-tags&lt;/code&gt; especificando --no-follow-tags .</target>
        </trans-unit>
        <trans-unit id="64fe3b4eafd82bc5365512adbc156f5096a46d37" translate="yes" xml:space="preserve">
          <source>If set to true or &quot;refuse&quot;, git-receive-pack will deny a ref update to the currently checked out branch of a non-bare repository. Such a push is potentially dangerous because it brings the HEAD out of sync with the index and working tree. If set to &quot;warn&quot;, print a warning of such a push to stderr, but allow the push to proceed. If set to false or &quot;ignore&quot;, allow such pushes with no message. Defaults to &quot;refuse&quot;.</source>
          <target state="translated">Si se establece como verdadero o &quot;rechazar&quot;,git-receive-pack denegará una actualización de ref a la rama actualmente comprobada de un repositorio no básico.Tal empuje es potencialmente peligroso porque saca al HEAD de la sincronización con el índice y el árbol de trabajo.Si está configurado como &quot;warn&quot;,imprime una advertencia de tal empuje a stderr,pero permite que el empuje proceda.Si está configurado como falso o &quot;ignorar&quot;,permite que se presione sin mensaje.Por defecto es &quot;rechazar&quot;.</target>
        </trans-unit>
        <trans-unit id="d09a3b8e56d92fdf26b71ac7a66610897ebf56ec" translate="yes" xml:space="preserve">
          <source>If set to true, .git/shallow can be updated when new refs require new shallow roots. Otherwise those refs are rejected.</source>
          <target state="translated">Si se establece en true,el .git/shallow puede actualizarse cuando los nuevos refs requieren nuevas raíces superficiales.De lo contrario,esos refs son rechazados.</target>
        </trans-unit>
        <trans-unit id="54bb951308d4910fbcee8b759c22be8fe1cad2d9" translate="yes" xml:space="preserve">
          <source>If set to true, &lt;a href=&quot;git-status&quot;&gt;git-status[1]&lt;/a&gt; will display the number of entries currently stashed away. Defaults to false.</source>
          <target state="translated">Si se establece en verdadero, &lt;a href=&quot;git-status&quot;&gt;git-status [1]&lt;/a&gt; mostrar&amp;aacute; el n&amp;uacute;mero de entradas actualmente guardadas. El valor predeterminado es falso.</target>
        </trans-unit>
        <trans-unit id="3713c634b09bf65bc394c012cee94ba42c596b9c" translate="yes" xml:space="preserve">
          <source>If set to true, &lt;a href=&quot;git-status&quot;&gt;git-status[1]&lt;/a&gt; will insert a comment prefix before each output line (starting with &lt;code&gt;core.commentChar&lt;/code&gt;, i.e. &lt;code&gt;#&lt;/code&gt; by default). This was the behavior of &lt;a href=&quot;git-status&quot;&gt;git-status[1]&lt;/a&gt; in Git 1.8.4 and previous. Defaults to false.</source>
          <target state="translated">Si se establece en verdadero, &lt;a href=&quot;git-status&quot;&gt;git-status [1]&lt;/a&gt; insertar&amp;aacute; un prefijo de comentario antes de cada l&amp;iacute;nea de salida (comenzando con &lt;code&gt;core.commentChar&lt;/code&gt; , es decir, &lt;code&gt;#&lt;/code&gt; por defecto). Este fue el comportamiento de &lt;a href=&quot;git-status&quot;&gt;git-status [1]&lt;/a&gt; en Git 1.8.4 y anteriores. El valor predeterminado es falso.</target>
        </trans-unit>
        <trans-unit id="9b89821396e7eac11e5ad2faf8d7540e7c67829b" translate="yes" xml:space="preserve">
          <source>If set to true, &lt;code&gt;git rebase&lt;/code&gt; will use abbreviated command names in the todo list resulting in something like this:</source>
          <target state="translated">Si se establece en verdadero, &lt;code&gt;git rebase&lt;/code&gt; usar&amp;aacute; nombres de comandos abreviados en la lista de tareas pendientes, lo que dar&amp;aacute; como resultado algo como esto:</target>
        </trans-unit>
        <trans-unit id="a871da2391e5e77cb10a7b13bd4e3a7269114ee0" translate="yes" xml:space="preserve">
          <source>If set to true, do not allow checkout of paths that would be considered equivalent to &lt;code&gt;.git&lt;/code&gt; on an HFS+ filesystem. Defaults to &lt;code&gt;true&lt;/code&gt; on Mac OS, and &lt;code&gt;false&lt;/code&gt; elsewhere.</source>
          <target state="translated">Si se establece en verdadero, no permita la comprobaci&amp;oacute;n de rutas que se considerar&amp;iacute;an equivalentes a &lt;code&gt;.git&lt;/code&gt; en un sistema de archivos HFS +. El valor predeterminado es &lt;code&gt;true&lt;/code&gt; en Mac OS y &lt;code&gt;false&lt;/code&gt; otros lugares.</target>
        </trans-unit>
        <trans-unit id="0b91b7e4dfffb3891da9de8dba8ed2d19154ae38" translate="yes" xml:space="preserve">
          <source>If set to true, do not allow checkout of paths that would cause problems with the NTFS filesystem, e.g. conflict with 8.3 &quot;short&quot; names. Defaults to &lt;code&gt;true&lt;/code&gt; on Windows, and &lt;code&gt;false&lt;/code&gt; elsewhere.</source>
          <target state="translated">Si se establece en verdadero, no permita la comprobaci&amp;oacute;n de rutas que podr&amp;iacute;an causar problemas con el sistema de archivos NTFS, por ejemplo, conflictos con nombres &quot;cortos&quot; 8.3. El valor predeterminado es &lt;code&gt;true&lt;/code&gt; en Windows y &lt;code&gt;false&lt;/code&gt; otros lugares.</target>
        </trans-unit>
        <trans-unit id="54ccdbeca4965b6fc3cb17a6075d84092d7309ba" translate="yes" xml:space="preserve">
          <source>If set to true, enable &lt;code&gt;--extended-regexp&lt;/code&gt; option by default. This option is ignored when the &lt;code&gt;grep.patternType&lt;/code&gt; option is set to a value other than &lt;code&gt;default&lt;/code&gt;.</source>
          <target state="translated">Si se establece en verdadero, habilite la opci&amp;oacute;n &lt;code&gt;--extended-regexp&lt;/code&gt; de forma predeterminada. Esta opci&amp;oacute;n se ignora cuando la opci&amp;oacute;n &lt;code&gt;grep.patternType&lt;/code&gt; se establece en un valor diferente al &lt;code&gt;default&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="30887a5524c263667737b125eed1b7397b4d3c85" translate="yes" xml:space="preserve">
          <source>If set to true, enable &lt;code&gt;--full-name&lt;/code&gt; option by default.</source>
          <target state="translated">Si se establece en verdadero, habilite la opci&amp;oacute;n &lt;code&gt;--full-name&lt;/code&gt; de forma predeterminada.</target>
        </trans-unit>
        <trans-unit id="a770bd77a59ee1eda1723cd39df7104106a40a38" translate="yes" xml:space="preserve">
          <source>If set to true, enable &lt;code&gt;-n&lt;/code&gt; option by default.</source>
          <target state="translated">Si se establece en verdadero, habilite la opci&amp;oacute;n &lt;code&gt;-n&lt;/code&gt; de forma predeterminada.</target>
        </trans-unit>
        <trans-unit id="2ae1bc4fce8b6029e6cbb4c5d0167ebeeaacf37d" translate="yes" xml:space="preserve">
          <source>If set to true, enable the &lt;code&gt;--column&lt;/code&gt; option by default.</source>
          <target state="translated">Si se establece en verdadero, habilite la opci&amp;oacute;n &lt;code&gt;--column&lt;/code&gt; de forma predeterminada.</target>
        </trans-unit>
        <trans-unit id="1f2144fe2d27e9e20f68c9036ebab8459a790815" translate="yes" xml:space="preserve">
          <source>If set to true, fall back to git grep --no-index if git grep is executed outside of a git repository. Defaults to false.</source>
          <target state="translated">Si se establece como verdadero,recurra a git grep --no hay índice si git grep se ejecuta fuera de un repositorio git.Por defecto es falso.</target>
        </trans-unit>
        <trans-unit id="25ad8c4a959eb80b90f95ddbc01fcd1f2b16d26e" translate="yes" xml:space="preserve">
          <source>If set to true, git-receive-pack will deny a ref update that deletes the currently checked out branch of a non-bare repository.</source>
          <target state="translated">Si se establece en true,git-receive-pack negará una actualización de ref que borre la rama actualmente comprobada de un repositorio no desnudo.</target>
        </trans-unit>
        <trans-unit id="f7f0fff426d74ea17456c56eae07f347498018a4" translate="yes" xml:space="preserve">
          <source>If set to true, git-receive-pack will deny a ref update that deletes the ref. Use this to prevent such a ref deletion via a push.</source>
          <target state="translated">Si se establece como verdadero,git-receive-pack negará una actualización del árbitro que elimine el árbitro.Usa esto para evitar que se borre el ref por medio de un empujón.</target>
        </trans-unit>
        <trans-unit id="bc6468d5687d1713aadc8dfe39af8a6b8a9b584c" translate="yes" xml:space="preserve">
          <source>If set to true, git-receive-pack will deny a ref update which is not a fast-forward. Use this to prevent such an update via a push, even if that push is forced. This configuration variable is set when initializing a shared repository.</source>
          <target state="translated">Si se establece como verdadero,git-receive-pack negará una actualización de ref que no sea un avance rápido.Usa esto para evitar tal actualización mediante un empujón,incluso si ese empujón es forzado.Esta variable de configuración se establece al inicializar un repositorio compartido.</target>
        </trans-unit>
        <trans-unit id="aa5f05e34699c4bff5b25fced7ce1653e77528d2" translate="yes" xml:space="preserve">
          <source>If set to true, git-receive-pack will run git-update-server-info after receiving data from git-push and updating refs.</source>
          <target state="translated">Si se establece en true,git-receive-pack ejecutará git-update-server-info después de recibir los datos de git-push y actualizar los refs.</target>
        </trans-unit>
        <trans-unit id="875b965a1988574b490477056983b56357db9a5f" translate="yes" xml:space="preserve">
          <source>If set to true, makes &lt;code&gt;git repack&lt;/code&gt; act as if &lt;code&gt;--delta-islands&lt;/code&gt; was passed. Defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">Si se establece en verdadero, hace que &lt;code&gt;git repack&lt;/code&gt; act&amp;uacute;e como si se &lt;code&gt;--delta-islands&lt;/code&gt; pasado --delta-islands . El valor predeterminado es &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3a3fff86e688774493783e955a40569a2b6cd00b" translate="yes" xml:space="preserve">
          <source>If set to true, makes &lt;code&gt;git repack&lt;/code&gt; act as if &lt;code&gt;--pack-kept-objects&lt;/code&gt; was passed. See &lt;a href=&quot;git-repack&quot;&gt;git-repack[1]&lt;/a&gt; for details. Defaults to &lt;code&gt;false&lt;/code&gt; normally, but &lt;code&gt;true&lt;/code&gt; if a bitmap index is being written (either via &lt;code&gt;--write-bitmap-index&lt;/code&gt; or &lt;code&gt;repack.writeBitmaps&lt;/code&gt;).</source>
          <target state="translated">Si se establece en verdadero, hace que &lt;code&gt;git repack&lt;/code&gt; act&amp;uacute;e como si se &lt;code&gt;--pack-kept-objects&lt;/code&gt; . Consulte &lt;a href=&quot;git-repack&quot;&gt;git-repack [1]&lt;/a&gt; para obtener m&amp;aacute;s detalles. El valor predeterminado es &lt;code&gt;false&lt;/code&gt; normalmente, pero &lt;code&gt;true&lt;/code&gt; si se escribe un &amp;iacute;ndice de mapa de bits (ya sea a trav&amp;eacute;s de &lt;code&gt;--write-bitmap-index&lt;/code&gt; o &lt;code&gt;repack.writeBitmaps&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="f4685adbf82f5fe84483ac0a4116dbb7a4fa6307" translate="yes" xml:space="preserve">
          <source>If set, &lt;code&gt;git diff&lt;/code&gt; does not show any source or destination prefix.</source>
          <target state="translated">Si se establece, &lt;code&gt;git diff&lt;/code&gt; no muestra ning&amp;uacute;n prefijo de origen o destino.</target>
        </trans-unit>
        <trans-unit id="407c23ddaf3ebfe9c20e0dd5ae2fc627eb8b4502" translate="yes" xml:space="preserve">
          <source>If set, &lt;code&gt;git diff&lt;/code&gt; uses a prefix pair that is different from the standard &quot;a/&quot; and &quot;b/&quot; depending on what is being compared. When this configuration is in effect, reverse diff output also swaps the order of the prefixes:</source>
          <target state="translated">Si se establece, &lt;code&gt;git diff&lt;/code&gt; usa un par de prefijos que es diferente del est&amp;aacute;ndar &quot;a /&quot; y &quot;b /&quot; dependiendo de lo que se est&amp;eacute; comparando. Cuando esta configuraci&amp;oacute;n est&amp;aacute; en vigor, la salida de diferencia inversa tambi&amp;eacute;n intercambia el orden de los prefijos:</target>
        </trans-unit>
        <trans-unit id="ce70dfc2b2921383247fcc52103661d4583ff009" translate="yes" xml:space="preserve">
          <source>If set, by default &quot;git config&quot; reads from both &quot;config&quot; and &quot;config.worktree&quot; file from GIT_DIR in that order. In multiple working directory mode, &quot;config&quot; file is shared while &quot;config.worktree&quot; is per-working directory (i.e., it&amp;rsquo;s in GIT_COMMON_DIR/worktrees/&amp;lt;id&amp;gt;/config.worktree)</source>
          <target state="translated">Si est&amp;aacute; configurado, por defecto &quot;git config&quot; lee tanto del archivo &quot;config&quot; como del archivo &quot;config.worktree&quot; de GIT_DIR en ese orden. En el modo de directorio de trabajo m&amp;uacute;ltiple, el archivo &quot;config&quot; se comparte mientras que &quot;config.worktree&quot; es por directorio de trabajo (es decir, est&amp;aacute; en GIT_COMMON_DIR / worktrees / &amp;lt;id&amp;gt; /config.worktree)</target>
        </trans-unit>
        <trans-unit id="8558e4c58eead00c8757e7213c096b3a4293d44c" translate="yes" xml:space="preserve">
          <source>If set, clients will attempt to communicate with a server using the specified protocol version. If the server does not support it, communication falls back to version 0. If unset, the default is &lt;code&gt;2&lt;/code&gt;. Supported versions:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b176f794890668142b94887636cc924076126a16" translate="yes" xml:space="preserve">
          <source>If set, keywords at the start of the line are highlighted. The keywords are &quot;error&quot;, &quot;warning&quot;, &quot;hint&quot; and &quot;success&quot;, and are matched case-insensitively. May be set to &lt;code&gt;always&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt; (or &lt;code&gt;never&lt;/code&gt;) or &lt;code&gt;auto&lt;/code&gt; (or &lt;code&gt;true&lt;/code&gt;). If unset, then the value of &lt;code&gt;color.ui&lt;/code&gt; is used (&lt;code&gt;auto&lt;/code&gt; by default).</source>
          <target state="translated">Si se establece, las palabras clave al principio de la l&amp;iacute;nea se resaltan. Las palabras clave son &quot;error&quot;, &quot;advertencia&quot;, &quot;sugerencia&quot; y &quot;&amp;eacute;xito&quot;, y no distinguen entre may&amp;uacute;sculas y min&amp;uacute;sculas. Puede establecerse en &lt;code&gt;always&lt;/code&gt; , &lt;code&gt;false&lt;/code&gt; (o &lt;code&gt;never&lt;/code&gt; ) o &lt;code&gt;auto&lt;/code&gt; m&amp;aacute;tico (o &lt;code&gt;true&lt;/code&gt; ). Si no est&amp;aacute; configurado, se utiliza el valor de &lt;code&gt;color.ui&lt;/code&gt; ( &lt;code&gt;auto&lt;/code&gt; m&amp;aacute;tico por defecto).</target>
        </trans-unit>
        <trans-unit id="b183dd8c0ffee365fe58a6a334a19fb15f9512f0" translate="yes" xml:space="preserve">
          <source>If set, prints debugging information about various reads/writes.</source>
          <target state="translated">Si está configurado,imprime información de depuración sobre varias lecturas/escrituras.</target>
        </trans-unit>
        <trans-unit id="b8c5d5bfb05b8eec245d869376183965da454ecd" translate="yes" xml:space="preserve">
          <source>If set, provide a user defined default policy for all protocols which don&amp;rsquo;t explicitly have a policy (&lt;code&gt;protocol.&amp;lt;name&amp;gt;.allow&lt;/code&gt;). By default, if unset, known-safe protocols (http, https, git, ssh, file) have a default policy of &lt;code&gt;always&lt;/code&gt;, known-dangerous protocols (ext) have a default policy of &lt;code&gt;never&lt;/code&gt;, and all other protocols have a default policy of &lt;code&gt;user&lt;/code&gt;. Supported policies:</source>
          <target state="translated">Si se establece, proporcione una pol&amp;iacute;tica predeterminada definida por el usuario para todos los protocolos que no tengan una pol&amp;iacute;tica expl&amp;iacute;cita ( &lt;code&gt;protocol.&amp;lt;name&amp;gt;.allow&lt;/code&gt; ). De forma predeterminada, si no se configuran, los protocolos seguros conocidos (http, https, git, ssh, archivo) tienen una pol&amp;iacute;tica predeterminada de &lt;code&gt;always&lt;/code&gt; , los protocolos peligrosos conocidos (ext) tienen una pol&amp;iacute;tica predeterminada de &lt;code&gt;never&lt;/code&gt; y todos los dem&amp;aacute;s protocolos tienen una pol&amp;iacute;tica predeterminada de &lt;code&gt;user&lt;/code&gt; . Pol&amp;iacute;ticas admitidas:</target>
        </trans-unit>
        <trans-unit id="8d4a6e984ec5e0aad11e32a678cf60da360c5f1c" translate="yes" xml:space="preserve">
          <source>If set, specifies the outgoing SMTP server option to use. Default value can be specified by the &lt;code&gt;sendemail.smtpServerOption&lt;/code&gt; configuration option.</source>
          <target state="translated">Si se establece, especifica la opci&amp;oacute;n de servidor SMTP saliente que se utilizar&amp;aacute;. El valor predeterminado se puede especificar mediante la opci&amp;oacute;n de configuraci&amp;oacute;n &lt;code&gt;sendemail.smtpServerOption&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0fab27431c274f5a81ff1327c3c271e3371074f0" translate="yes" xml:space="preserve">
          <source>If set, specifies the outgoing SMTP server to use (e.g. &lt;code&gt;smtp.example.com&lt;/code&gt; or a raw IP address). Alternatively it can specify a full pathname of a sendmail-like program instead; the program must support the &lt;code&gt;-i&lt;/code&gt; option. Default value can be specified by the &lt;code&gt;sendemail.smtpServer&lt;/code&gt; configuration option; the built-in default is to search for &lt;code&gt;sendmail&lt;/code&gt; in &lt;code&gt;/usr/sbin&lt;/code&gt;, &lt;code&gt;/usr/lib&lt;/code&gt; and $PATH if such program is available, falling back to &lt;code&gt;localhost&lt;/code&gt; otherwise.</source>
          <target state="translated">Si se establece, especifica el servidor SMTP saliente que se utilizar&amp;aacute; (por ejemplo, &lt;code&gt;smtp.example.com&lt;/code&gt; o una direcci&amp;oacute;n IP sin formato ). Alternativamente, puede especificar una ruta completa de un programa similar a sendmail; el programa debe admitir la opci&amp;oacute;n &lt;code&gt;-i&lt;/code&gt; . El valor predeterminado se puede especificar mediante la opci&amp;oacute;n de configuraci&amp;oacute;n &lt;code&gt;sendemail.smtpServer&lt;/code&gt; ; el valor predeterminado incorporado es buscar &lt;code&gt;sendmail&lt;/code&gt; en &lt;code&gt;/usr/sbin&lt;/code&gt; , &lt;code&gt;/usr/lib&lt;/code&gt; y $ PATH si dicho programa est&amp;aacute; disponible; de ​​lo contrario, &lt;code&gt;localhost&lt;/code&gt; a localhost .</target>
        </trans-unit>
        <trans-unit id="95132676994fa7152c54abc8928412e3414f6991" translate="yes" xml:space="preserve">
          <source>If set, store cookies received during requests to the file specified by http.cookieFile. Has no effect if http.cookieFile is unset.</source>
          <target state="translated">Si está configurado,almacena las cookies recibidas durante las solicitudes en el archivo especificado por http.cookieFile.No tiene efecto si http.cookieFile no está configurado.</target>
        </trans-unit>
        <trans-unit id="9802dde85fc0323285bb8c0402ffcc333cf47ed2" translate="yes" xml:space="preserve">
          <source>If set, the value of this variable is used as a command which will identify all files that may have changed since the requested date/time. This information is used to speed up git by avoiding unnecessary processing of files that have not changed. See the &quot;fsmonitor-watchman&quot; section of &lt;a href=&quot;githooks&quot;&gt;githooks[5]&lt;/a&gt;.</source>
          <target state="translated">Si se establece, el valor de esta variable se usa como un comando que identificar&amp;aacute; todos los archivos que pueden haber cambiado desde la fecha / hora solicitada. Esta informaci&amp;oacute;n se utiliza para acelerar git al evitar el procesamiento innecesario de archivos que no han cambiado. Consulte la secci&amp;oacute;n &quot;fsmonitor-watchman&quot; de &lt;a href=&quot;githooks&quot;&gt;githooks [5]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9612a7f8efdd3501a24381e7aae358082b8ef892" translate="yes" xml:space="preserve">
          <source>If some &lt;code&gt;&amp;lt;token&amp;gt;=&amp;lt;value&amp;gt;&lt;/code&gt; arguments are also passed on the command line, when a &lt;code&gt;trailer.&amp;lt;token&amp;gt;.command&lt;/code&gt; is configured, the command will also be executed for each of these arguments. And the &amp;lt;value&amp;gt; part of these arguments, if any, will be used to replace the &lt;code&gt;$ARG&lt;/code&gt; string in the command.</source>
          <target state="translated">Si tambi&amp;eacute;n se pasan algunos argumentos &lt;code&gt;&amp;lt;token&amp;gt;=&amp;lt;value&amp;gt;&lt;/code&gt; en la l&amp;iacute;nea de comandos, cuando se configura un comando de &lt;code&gt;trailer.&amp;lt;token&amp;gt;.command&lt;/code&gt; , El comando tambi&amp;eacute;n se ejecutar&amp;aacute; para cada uno de estos argumentos. Y la parte &amp;lt;valor&amp;gt; de estos argumentos, si los hay, se usar&amp;aacute; para reemplazar la cadena &lt;code&gt;$ARG&lt;/code&gt; en el comando.</target>
        </trans-unit>
        <trans-unit id="00679e1f1be4cb3b83ae3531e0f65d104df1ba84" translate="yes" xml:space="preserve">
          <source>If some files could not be added because of errors indexing them, do not abort the operation, but continue adding the others. The command shall still exit with non-zero status. The configuration variable &lt;code&gt;add.ignoreErrors&lt;/code&gt; can be set to true to make this the default behaviour.</source>
          <target state="translated">Si algunos archivos no se pudieron agregar debido a errores al indexarlos, no cancele la operaci&amp;oacute;n, contin&amp;uacute;e agregando los dem&amp;aacute;s. El comando seguir&amp;aacute; saliendo con un estado distinto de cero. La variable de configuraci&amp;oacute;n &lt;code&gt;add.ignoreErrors&lt;/code&gt; se puede establecer en true para que sea el comportamiento predeterminado.</target>
        </trans-unit>
        <trans-unit id="02424da36361565abc928c3cd12899bb91686b1d" translate="yes" xml:space="preserve">
          <source>If some of the merge bases are skipped, then the bisection process continues, but the following message is printed for each skipped merge base:</source>
          <target state="translated">Si se saltan algunas de las bases de fusión,entonces el proceso de bisección continúa,pero se imprime el siguiente mensaje para cada base de fusión salteada:</target>
        </trans-unit>
        <trans-unit id="c23bec329e1ab3f8ab844a76b3b2aad8e4c54310" translate="yes" xml:space="preserve">
          <source>If somebody got a release tag from you, you cannot just change the tag for them by updating your own one. This is a big security issue, in that people MUST be able to trust their tag-names. If you really want to do the insane thing, you need to just fess up to it, and tell people that you messed up. You can do that by making a very public announcement saying:</source>
          <target state="translated">Si alguien recibió una etiqueta de liberación de ti,no puedes cambiar la etiqueta por ellos actualizando la tuya.Este es un gran problema de seguridad,ya que la gente debe ser capaz de confiar en sus nombres de etiqueta.Si realmente quieres hacer una locura,tienes que confesar y decirle a la gente que la has cagado.Puedes hacerlo haciendo un anuncio muy público diciendo:</target>
        </trans-unit>
        <trans-unit id="9c1822b09998ebb74d19f39d240afd93e64789bf" translate="yes" xml:space="preserve">
          <source>If someone else administers the server, they should tell you what directory to put the repository in, and what &lt;code&gt;git://&lt;/code&gt; URL it will appear at. You can then skip to the section &quot;&lt;a href=&quot;#pushing-changes-to-a-public-repository&quot;&gt;Pushing changes to a public repository&lt;/a&gt;&quot;, below.</source>
          <target state="translated">Si alguien m&amp;aacute;s administra el servidor, deber&amp;iacute;a decirle en qu&amp;eacute; directorio colocar el repositorio y en qu&amp;eacute; &lt;code&gt;git://&lt;/code&gt; URL aparecer&amp;aacute;. Luego, puede pasar a la secci&amp;oacute;n &quot; &lt;a href=&quot;#pushing-changes-to-a-public-repository&quot;&gt;Enviar cambios a un repositorio p&amp;uacute;blico&lt;/a&gt; &quot;, a continuaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="4199717fddcec6935af08019e365f779fa359364" translate="yes" xml:space="preserve">
          <source>If specified twice, show in addition the unified diff between what would be committed and the worktree files, i.e. the unstaged changes to tracked files.</source>
          <target state="translated">Si se especifica dos veces,muestre además la diferencia unificada entre lo que se confirmaría y los archivos del árbol de trabajo,es decir,los cambios no realizados en los archivos rastreados.</target>
        </trans-unit>
        <trans-unit id="fcf7bcff6fb66a8267ebcd9b00a7e09f8cfe6596" translate="yes" xml:space="preserve">
          <source>If that version is broken, type</source>
          <target state="translated">Si esa versión está rota,escriba</target>
        </trans-unit>
        <trans-unit id="c26c727c738ef7a0a9fa459f5d8c7e2c7478ba23" translate="yes" xml:space="preserve">
          <source>If the &quot;pattern&quot; URL does include a path component, then this too must match exactly: the context &lt;code&gt;https://example.com/bar/baz.git&lt;/code&gt; will match a config entry for &lt;code&gt;https://example.com/bar/baz.git&lt;/code&gt; (in addition to matching the config entry for &lt;code&gt;https://example.com&lt;/code&gt;) but will not match a config entry for &lt;code&gt;https://example.com/bar&lt;/code&gt;.</source>
          <target state="translated">Si la URL del &quot;patr&amp;oacute;n&quot; incluye un componente de ruta, este tambi&amp;eacute;n debe coincidir exactamente: el contexto &lt;code&gt;https://example.com/bar/baz.git&lt;/code&gt; coincidir&amp;aacute; con una entrada de configuraci&amp;oacute;n para &lt;code&gt;https://example.com/bar/baz.git&lt;/code&gt; (adem&amp;aacute;s de coincidir con la entrada de configuraci&amp;oacute;n para &lt;code&gt;https://example.com&lt;/code&gt; ) pero no coincidir&amp;aacute; con una entrada de configuraci&amp;oacute;n para &lt;code&gt;https://example.com/bar&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c4d8f312459b1b390b1c7f9b1bd219e73052861c" translate="yes" xml:space="preserve">
          <source>If the &amp;lt;value&amp;gt; part of any trailer contains only whitespace, the whole trailer will be removed from the resulting message. This applies to existing trailers as well as new trailers.</source>
          <target state="translated">Si la parte &amp;lt;valor&amp;gt; de cualquier avance contiene solo espacios en blanco, el avance completo se eliminar&amp;aacute; del mensaje resultante. Esto se aplica tanto a los remolques existentes como a los nuevos.</target>
        </trans-unit>
        <trans-unit id="b64722d374d9ba94f59d4b75e0b20b3d04a38c9e" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;$GIT_DIR&lt;/code&gt; environment variable is set then it specifies a path to use instead of &lt;code&gt;./.git&lt;/code&gt; for the base of the repository.</source>
          <target state="translated">Si se &lt;code&gt;$GIT_DIR&lt;/code&gt; la variable de entorno $ GIT_DIR , especifica una ruta para usar en lugar de &lt;code&gt;./.git&lt;/code&gt; para la base del repositorio.</target>
        </trans-unit>
        <trans-unit id="010f47d5eb5a20440d8f9779a052d1045e200486" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;--anonymize&lt;/code&gt; option is given, git will attempt to remove all identifying information from the repository while still retaining enough of the original tree and history patterns to reproduce some bugs. The goal is that a git bug which is found on a private repository will persist in the anonymized repository, and the latter can be shared with git developers to help solve the bug.</source>
          <target state="translated">Si se da la opci&amp;oacute;n &lt;code&gt;--anonymize&lt;/code&gt; , git intentar&amp;aacute; eliminar toda la informaci&amp;oacute;n de identificaci&amp;oacute;n del repositorio mientras conserva lo suficiente del &amp;aacute;rbol original y los patrones del historial para reproducir algunos errores. El objetivo es que un error de git que se encuentra en un repositorio privado persista en el repositorio an&amp;oacute;nimo, y este &amp;uacute;ltimo se puede compartir con los desarrolladores de git para ayudar a resolver el error.</target>
        </trans-unit>
        <trans-unit id="c4c6f80eebbd991a705883e3a7ddf7805d5a2ad9" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;--autosquash&lt;/code&gt; option is enabled by default using the configuration variable &lt;code&gt;rebase.autoSquash&lt;/code&gt;, this option can be used to override and disable this setting.</source>
          <target state="translated">Si la opci&amp;oacute;n &lt;code&gt;--autosquash&lt;/code&gt; est&amp;aacute; habilitada de forma predeterminada usando la variable de configuraci&amp;oacute;n &lt;code&gt;rebase.autoSquash&lt;/code&gt; , esta opci&amp;oacute;n puede usarse para anular y deshabilitar esta configuraci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="0cf1db99e3ec777fa9fc759a96b9df8702668643" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;--done&lt;/code&gt; command-line option or &lt;code&gt;feature done&lt;/code&gt; command is in use, the &lt;code&gt;done&lt;/code&gt; command is mandatory and marks the end of the stream.</source>
          <target state="translated">Si la opci&amp;oacute;n de l&amp;iacute;nea de comandos &lt;code&gt;--done&lt;/code&gt; o el comando &lt;code&gt;feature done&lt;/code&gt; est&amp;aacute; en uso, el comando &lt;code&gt;done&lt;/code&gt; es obligatorio y marca el final de la transmisi&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="a0c52682314428d0b2cfaeb79c7cb6ca41bbd107" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;--include-untracked&lt;/code&gt; option is used, all untracked files are also stashed and then cleaned up with &lt;code&gt;git clean&lt;/code&gt;, leaving the working directory in a very clean state. If the &lt;code&gt;--all&lt;/code&gt; option is used instead then the ignored files are stashed and cleaned in addition to the untracked files.</source>
          <target state="translated">Si se usa la opci&amp;oacute;n &lt;code&gt;--include-untracked&lt;/code&gt; , todos los archivos sin seguimiento tambi&amp;eacute;n se guardan y luego se limpian con &lt;code&gt;git clean&lt;/code&gt; , dejando el directorio de trabajo en un estado muy limpio. Si en su lugar se usa la opci&amp;oacute;n &lt;code&gt;--all&lt;/code&gt; , los archivos ignorados se guardan y limpian adem&amp;aacute;s de los archivos sin seguimiento.</target>
        </trans-unit>
        <trans-unit id="bbfa929c9630d94c6f050152effe58514108dc44" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;--index&lt;/code&gt; option is used, then tries to reinstate not only the working tree&amp;rsquo;s changes, but also the index&amp;rsquo;s ones. However, this can fail, when you have conflicts (which are stored in the index, where you therefore can no longer apply the changes as they were originally).</source>
          <target state="translated">Si se &lt;code&gt;--index&lt;/code&gt; opci&amp;oacute;n --index , intenta restablecer no solo los cambios del &amp;aacute;rbol de trabajo, sino tambi&amp;eacute;n los del &amp;iacute;ndice. Sin embargo, esto puede fallar cuando tiene conflictos (que se almacenan en el &amp;iacute;ndice, donde por lo tanto ya no puede aplicar los cambios como estaban originalmente).</target>
        </trans-unit>
        <trans-unit id="f3433648ddba23324bfe890535ea8fba49406cc9" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;--keep-index&lt;/code&gt; option is used, all changes already added to the index are left intact.</source>
          <target state="translated">Si se usa la opci&amp;oacute;n &lt;code&gt;--keep-index&lt;/code&gt; , todos los cambios ya agregados al &amp;iacute;ndice se dejan intactos.</target>
        </trans-unit>
        <trans-unit id="f0b71e8c338c336264145f9c00a25064d3a5d745" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;--multiple&lt;/code&gt; option was specified, the different remotes will be fetched in parallel. If multiple submodules are fetched, they will be fetched in parallel. To control them independently, use the config settings &lt;code&gt;fetch.parallel&lt;/code&gt; and &lt;code&gt;submodule.fetchJobs&lt;/code&gt; (see &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;).</source>
          <target state="translated">Si se especific&amp;oacute; la opci&amp;oacute;n &lt;code&gt;--multiple&lt;/code&gt; , los diferentes controles remotos se buscar&amp;aacute;n en paralelo. Si se obtienen varios subm&amp;oacute;dulos, se buscar&amp;aacute;n en paralelo. Para controlarlos de forma independiente, utilice las opciones de configuraci&amp;oacute;n &lt;code&gt;fetch.parallel&lt;/code&gt; y &lt;code&gt;submodule.fetchJobs&lt;/code&gt; (consulte &lt;a href=&quot;git-config&quot;&gt;git-config [1]&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="86926b76e3db734e6c786d5fed43f678b858b280" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;DISPLAY&lt;/code&gt; environment variable is not set, &lt;code&gt;git log&lt;/code&gt; is used instead. You can also give command-line options such as &lt;code&gt;-p&lt;/code&gt; and &lt;code&gt;--stat&lt;/code&gt;.</source>
          <target state="translated">Si la variable de entorno &lt;code&gt;DISPLAY&lt;/code&gt; no est&amp;aacute; configurada, se usa &lt;code&gt;git log&lt;/code&gt; en su lugar. Tambi&amp;eacute;n puede proporcionar opciones de l&amp;iacute;nea de comandos como &lt;code&gt;-p&lt;/code&gt; y &lt;code&gt;--stat&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d759f2e991e02f3a71fd36511a7699e5f49db70c" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;GIT_ASKPASS&lt;/code&gt; environment variable is set, the program specified by the variable is invoked. A suitable prompt is provided to the program on the command line, and the user&amp;rsquo;s input is read from its standard output.</source>
          <target state="translated">Si se &lt;code&gt;GIT_ASKPASS&lt;/code&gt; la variable de entorno GIT_ASKPASS , se invoca el programa especificado por la variable. Se proporciona un indicador adecuado al programa en la l&amp;iacute;nea de comando, y la entrada del usuario se lee desde su salida est&amp;aacute;ndar.</target>
        </trans-unit>
        <trans-unit id="4b682e3beccdc952b131cf46cc2adb457e7b0390" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;GIT_DIR&lt;/code&gt; environment variable is set then it specifies a path to use instead of the default &lt;code&gt;.git&lt;/code&gt; for the base of the repository. The &lt;code&gt;--git-dir&lt;/code&gt; command-line option also sets this value.</source>
          <target state="translated">Si se &lt;code&gt;GIT_DIR&lt;/code&gt; la variable de entorno GIT_DIR , especifica una ruta para usar en lugar del &lt;code&gt;.git&lt;/code&gt; predeterminado para la base del repositorio. La opci&amp;oacute;n de l&amp;iacute;nea de comandos &lt;code&gt;--git-dir&lt;/code&gt; tambi&amp;eacute;n establece este valor.</target>
        </trans-unit>
        <trans-unit id="643cae995a607334b36d06d83fbe3fb662a8bb45" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;done&lt;/code&gt; feature is not in use, treated as if EOF was read. This can be used to tell fast-import to finish early.</source>
          <target state="translated">Si la funci&amp;oacute;n de &lt;code&gt;done&lt;/code&gt; no est&amp;aacute; en uso, se trata como si se hubiera le&amp;iacute;do EOF. Esto se puede usar para indicar a la importaci&amp;oacute;n r&amp;aacute;pida que finalice antes.</target>
        </trans-unit>
        <trans-unit id="18aa9d79f5a644e72e69f66c98e1e834c977b6b0" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;filter&lt;/code&gt; feature is advertised, the following argument can be included in the client&amp;rsquo;s request:</source>
          <target state="translated">Si se anuncia la funci&amp;oacute;n de &lt;code&gt;filter&lt;/code&gt; , el siguiente argumento se puede incluir en la solicitud del cliente:</target>
        </trans-unit>
        <trans-unit id="338c6269ff70e3588bd2606af346bee907c22325" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;git credential&lt;/code&gt; knew about the password, this step may not have involved the user actually typing this password (the user may have typed a password to unlock the keychain instead, or no user interaction was done if the keychain was already unlocked) before it returned &lt;code&gt;password=secr3t&lt;/code&gt;.</source>
          <target state="translated">Si la &lt;code&gt;git credential&lt;/code&gt; conoc&amp;iacute;a la contrase&amp;ntilde;a, es posible que este paso no haya involucrado al usuario realmente escribiendo esta contrase&amp;ntilde;a (el usuario puede haber ingresado una contrase&amp;ntilde;a para desbloquear el llavero en su lugar, o no se realiz&amp;oacute; ninguna interacci&amp;oacute;n del usuario si el llavero ya estaba desbloqueado) antes. &lt;code&gt;password=secr3t&lt;/code&gt; devuelta = secr3t .</target>
        </trans-unit>
        <trans-unit id="042e7419aeefb97aea8089e7aef725093dfeada4" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;packfile-uris&lt;/code&gt; feature is advertised, the following argument can be included in the client&amp;rsquo;s request as well as the potential addition of the &lt;code&gt;packfile-uris&lt;/code&gt; section in the server&amp;rsquo;s response as explained below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e7bad5825e1ca0d0f2641273cfd194a2b47fe7f" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;ref-in-want&lt;/code&gt; feature is advertised, the following argument can be included in the client&amp;rsquo;s request as well as the potential addition of the &lt;code&gt;wanted-refs&lt;/code&gt; section in the server&amp;rsquo;s response as explained below.</source>
          <target state="translated">Si se anuncia la funci&amp;oacute;n &lt;code&gt;ref-in-want&lt;/code&gt; , el siguiente argumento se puede incluir en la solicitud del cliente, as&amp;iacute; como la posible adici&amp;oacute;n de la secci&amp;oacute;n de &lt;code&gt;wanted-refs&lt;/code&gt; en la respuesta del servidor, como se explica a continuaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="8ee9fffd993cfbf2d4a66bab484646e0aab5c31d" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;shallow&lt;/code&gt; feature is advertised the following arguments can be included in the clients request as well as the potential addition of the &lt;code&gt;shallow-info&lt;/code&gt; section in the server&amp;rsquo;s response as explained below.</source>
          <target state="translated">Si se anuncia la funci&amp;oacute;n &lt;code&gt;shallow&lt;/code&gt; , se pueden incluir los siguientes argumentos en la solicitud del cliente, as&amp;iacute; como la posible adici&amp;oacute;n de la secci&amp;oacute;n de &lt;code&gt;shallow-info&lt;/code&gt; en la respuesta del servidor, como se explica a continuaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="cc56c6c35649e4cbd1848d389261cbadfd34e234" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;sideband-all&lt;/code&gt; feature is advertised, the following argument can be included in the client&amp;rsquo;s request:</source>
          <target state="translated">Si se anuncia la funci&amp;oacute;n de &lt;code&gt;sideband-all&lt;/code&gt; , el siguiente argumento se puede incluir en la solicitud del cliente:</target>
        </trans-unit>
        <trans-unit id="5221b8fce1b302181f6152b9a7b516c793a8424a" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;text&lt;/code&gt; attribute is unspecified, Git uses the &lt;code&gt;core.autocrlf&lt;/code&gt; configuration variable to determine if the file should be converted.</source>
          <target state="translated">Si el atributo de &lt;code&gt;text&lt;/code&gt; o no est&amp;aacute; especificado, Git usa la variable de configuraci&amp;oacute;n &lt;code&gt;core.autocrlf&lt;/code&gt; para determinar si el archivo debe convertirse.</target>
        </trans-unit>
        <trans-unit id="501d792e8a9528e67beb280aae4c4f6b3a3116f1" translate="yes" xml:space="preserve">
          <source>If the Git configuration variable clean.requireForce is not set to false, &lt;code&gt;git clean&lt;/code&gt; will refuse to delete files or directories unless given -f or -i. Git will refuse to modify untracked nested git repositories (directories with a .git subdirectory) unless a second -f is given.</source>
          <target state="translated">Si la variable de configuraci&amp;oacute;n de Git clean.requireForce no se establece en falso, &lt;code&gt;git clean&lt;/code&gt; se negar&amp;aacute; a eliminar archivos o directorios a menos que se le indique -f o -i. Git se negar&amp;aacute; a modificar los repositorios git anidados sin seguimiento (directorios con un subdirectorio .git) a menos que se proporcione una segunda -f.</target>
        </trans-unit>
        <trans-unit id="1a08af52d1bb96063df69a1ba9c6458415ca2e42" translate="yes" xml:space="preserve">
          <source>If the HTTP transfer speed is less than &lt;code&gt;http.lowSpeedLimit&lt;/code&gt; for longer than &lt;code&gt;http.lowSpeedTime&lt;/code&gt; seconds, the transfer is aborted. Can be overridden by the &lt;code&gt;GIT_HTTP_LOW_SPEED_LIMIT&lt;/code&gt; and &lt;code&gt;GIT_HTTP_LOW_SPEED_TIME&lt;/code&gt; environment variables.</source>
          <target state="translated">Si la velocidad de transferencia HTTP es menor que &lt;code&gt;http.lowSpeedLimit&lt;/code&gt; durante m&amp;aacute;s de &lt;code&gt;http.lowSpeedTime&lt;/code&gt; segundos, la transferencia se cancela. Puede ser reemplazado por las variables de entorno &lt;code&gt;GIT_HTTP_LOW_SPEED_LIMIT&lt;/code&gt; y &lt;code&gt;GIT_HTTP_LOW_SPEED_TIME&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6c44d5cf7886c82987c35de787d30a82008f591b" translate="yes" xml:space="preserve">
          <source>If the action is &lt;code&gt;approve&lt;/code&gt; or &lt;code&gt;reject&lt;/code&gt;, no output should be emitted.</source>
          <target state="translated">Si la acci&amp;oacute;n es &lt;code&gt;approve&lt;/code&gt; o &lt;code&gt;reject&lt;/code&gt; , no se debe emitir ninguna salida.</target>
        </trans-unit>
        <trans-unit id="a7a299c18f6719e8e8b963c0bc834abd5de39626" translate="yes" xml:space="preserve">
          <source>If the action is &lt;code&gt;approve&lt;/code&gt;, git-credential will send the description to any configured credential helpers, which may store the credential for later use.</source>
          <target state="translated">Si se &lt;code&gt;approve&lt;/code&gt; la acci&amp;oacute;n , git-credential enviar&amp;aacute; la descripci&amp;oacute;n a los ayudantes de credenciales configurados, que pueden almacenar la credencial para su uso posterior.</target>
        </trans-unit>
        <trans-unit id="7fc4d66ebd944d4cf73c3d3a8712c0dec288c62f" translate="yes" xml:space="preserve">
          <source>If the action is &lt;code&gt;fill&lt;/code&gt;, git-credential will attempt to add &quot;username&quot; and &quot;password&quot; attributes to the description by reading config files, by contacting any configured credential helpers, or by prompting the user. The username and password attributes of the credential description are then printed to stdout together with the attributes already provided.</source>
          <target state="translated">Si la acci&amp;oacute;n es &lt;code&gt;fill&lt;/code&gt; , git-credential intentar&amp;aacute; agregar atributos de &quot;nombre de usuario&quot; y &quot;contrase&amp;ntilde;a&quot; a la descripci&amp;oacute;n leyendo los archivos de configuraci&amp;oacute;n, comunic&amp;aacute;ndose con los ayudantes de credenciales configurados o preguntando al usuario. Los atributos de nombre de usuario y contrase&amp;ntilde;a de la descripci&amp;oacute;n de la credencial se imprimen luego en la salida est&amp;aacute;ndar junto con los atributos ya proporcionados.</target>
        </trans-unit>
        <trans-unit id="194451718843bfcaf463de902599c24ff69e0de0" translate="yes" xml:space="preserve">
          <source>If the action is &lt;code&gt;reject&lt;/code&gt;, git-credential will send the description to any configured credential helpers, which may erase any stored credential matching the description.</source>
          <target state="translated">Si la acci&amp;oacute;n es &lt;code&gt;reject&lt;/code&gt; , git-credential enviar&amp;aacute; la descripci&amp;oacute;n a cualquier asistente de credenciales configurado, que puede borrar cualquier credencial almacenada que coincida con la descripci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="d8fc44b68b56d1ac1b923c6197e4ad961f9ec579" translate="yes" xml:space="preserve">
          <source>If the alias expansion is prefixed with an exclamation point, it will be treated as a shell command. For example, defining &lt;code&gt;alias.new = !gitk --all --not ORIG_HEAD&lt;/code&gt;, the invocation &lt;code&gt;git new&lt;/code&gt; is equivalent to running the shell command &lt;code&gt;gitk --all --not ORIG_HEAD&lt;/code&gt;. Note that shell commands will be executed from the top-level directory of a repository, which may not necessarily be the current directory. &lt;code&gt;GIT_PREFIX&lt;/code&gt; is set as returned by running &lt;code&gt;git rev-parse --show-prefix&lt;/code&gt; from the original current directory. See &lt;a href=&quot;git-rev-parse&quot;&gt;git-rev-parse[1]&lt;/a&gt;.</source>
          <target state="translated">Si la expansi&amp;oacute;n del alias tiene como prefijo un signo de exclamaci&amp;oacute;n, se tratar&amp;aacute; como un comando de shell. Por ejemplo, al definir &lt;code&gt;alias.new = !gitk --all --not ORIG_HEAD&lt;/code&gt; , la invocaci&amp;oacute;n &lt;code&gt;git new&lt;/code&gt; es equivalente a ejecutar el comando de shell &lt;code&gt;gitk --all --not ORIG_HEAD&lt;/code&gt; . Tenga en cuenta que los comandos de shell se ejecutar&amp;aacute;n desde el directorio de nivel superior de un repositorio, que puede no ser necesariamente el directorio actual. &lt;code&gt;GIT_PREFIX&lt;/code&gt; se establece como se devuelve al ejecutar &lt;code&gt;git rev-parse --show-prefix&lt;/code&gt; desde el directorio actual original. Consulte &lt;a href=&quot;git-rev-parse&quot;&gt;git-rev-parse [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="81bb3cca543b16e19f5e2adb35c917e85fde2f7d" translate="yes" xml:space="preserve">
          <source>If the amount of memory estimated for &lt;code&gt;git repack&lt;/code&gt; to run smoothly is not available and &lt;code&gt;gc.bigPackThreshold&lt;/code&gt; is not set, the largest pack will also be excluded (this is the equivalent of running &lt;code&gt;git gc&lt;/code&gt; with &lt;code&gt;--keep-base-pack&lt;/code&gt;).</source>
          <target state="translated">Si la cantidad de memoria estimada para que &lt;code&gt;git repack&lt;/code&gt; se ejecute sin problemas no est&amp;aacute; disponible y &lt;code&gt;gc.bigPackThreshold&lt;/code&gt; no est&amp;aacute; configurado, el paquete m&amp;aacute;s grande tambi&amp;eacute;n se excluir&amp;aacute; (esto es el equivalente a ejecutar &lt;code&gt;git gc&lt;/code&gt; con &lt;code&gt;--keep-base-pack&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="3c5b81516d1884721f5397be7b419616ee5761da" translate="yes" xml:space="preserve">
          <source>If the amount of memory estimated for &lt;code&gt;git repack&lt;/code&gt; to run smoothly is not available and &lt;code&gt;gc.bigPackThreshold&lt;/code&gt; is not set, the largest pack will also be excluded (this is the equivalent of running &lt;code&gt;git gc&lt;/code&gt; with &lt;code&gt;--keep-largest-pack&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28ae5c748411e761b0bfb160798c17e5330bf010" translate="yes" xml:space="preserve">
          <source>If the anonymized repository shows the bug, it may be worth sharing &lt;code&gt;anon-stream&lt;/code&gt; along with a regular bug report. Note that the anonymized stream compresses very well, so gzipping it is encouraged. If you want to examine the stream to see that it does not contain any private data, you can peruse it directly before sending. You may also want to try:</source>
          <target state="translated">Si el repositorio an&amp;oacute;nimo muestra el error, puede valer la pena compartirlo de forma &lt;code&gt;anon-stream&lt;/code&gt; junto con un informe de error regular. Tenga en cuenta que la transmisi&amp;oacute;n an&amp;oacute;nima se comprime muy bien, por lo que se recomienda usar gzip. Si desea examinar la transmisi&amp;oacute;n para ver que no contiene ning&amp;uacute;n dato privado, puede examinarla directamente antes de enviarla. Tambi&amp;eacute;n puede probar:</target>
        </trans-unit>
        <trans-unit id="723ec66f7929012c8a6ac732a23c4db7a105b505" translate="yes" xml:space="preserve">
          <source>If the attribute &lt;code&gt;export-subst&lt;/code&gt; is set for a file then Git will expand several placeholders when adding this file to an archive. The expansion depends on the availability of a commit ID, i.e., if &lt;a href=&quot;git-archive&quot;&gt;git-archive[1]&lt;/a&gt; has been given a tree instead of a commit or a tag then no replacement will be done. The placeholders are the same as those for the option &lt;code&gt;--pretty=format:&lt;/code&gt; of &lt;a href=&quot;git-log&quot;&gt;git-log[1]&lt;/a&gt;, except that they need to be wrapped like this: &lt;code&gt;$Format:PLACEHOLDERS$&lt;/code&gt; in the file. E.g. the string &lt;code&gt;$Format:%H$&lt;/code&gt; will be replaced by the commit hash.</source>
          <target state="translated">Si el atributo &lt;code&gt;export-subst&lt;/code&gt; est&amp;aacute; configurado para un archivo, Git expandir&amp;aacute; varios marcadores de posici&amp;oacute;n al agregar este archivo a un archivo. La expansi&amp;oacute;n depende de la disponibilidad de un ID de confirmaci&amp;oacute;n, es decir, si a &lt;a href=&quot;git-archive&quot;&gt;git-archive [1]&lt;/a&gt; se le ha asignado un &amp;aacute;rbol en lugar de una confirmaci&amp;oacute;n o una etiqueta, no se realizar&amp;aacute; ning&amp;uacute;n reemplazo. Los marcadores de posici&amp;oacute;n son los mismos que los de la opci&amp;oacute;n &lt;code&gt;--pretty=format:&lt;/code&gt; de &lt;a href=&quot;git-log&quot;&gt;git-log [1]&lt;/a&gt; , excepto que deben ajustarse as&amp;iacute;: &lt;code&gt;$Format:PLACEHOLDERS$&lt;/code&gt; en el archivo. Por ejemplo, la cadena &lt;code&gt;$Format:%H$&lt;/code&gt; ser&amp;aacute; reemplazada por el hash de confirmaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="bd056a8735e1abbf79ce6a360a1a80c3f28cbbd6" translate="yes" xml:space="preserve">
          <source>If the attribute export-subst is set for a file then Git will expand several placeholders when adding this file to an archive. See &lt;a href=&quot;gitattributes&quot;&gt;gitattributes[5]&lt;/a&gt; for details.</source>
          <target state="translated">Si el atributo export-subst est&amp;aacute; configurado para un archivo, Git expandir&amp;aacute; varios marcadores de posici&amp;oacute;n al agregar este archivo a un archivo. Consulte &lt;a href=&quot;gitattributes&quot;&gt;gitattributes [5]&lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="da80064c2ffb4013d75c1676828faa86849266b6" translate="yes" xml:space="preserve">
          <source>If the bisection process is driven manually, you can use &quot;git bisect skip&quot; to do the same thing. (In fact the special exit code 125 makes &quot;git bisect run&quot; use &quot;git bisect skip&quot; in the background.)</source>
          <target state="translated">Si el proceso de bisección se realiza manualmente,puedes usar &quot;git bisect skip&quot; para hacer lo mismo.(De hecho el código especial de salida 125 hace que &quot;git bisect run&quot; utilice &quot;git bisect skip&quot; en el fondo).</target>
        </trans-unit>
        <trans-unit id="92ad120c671c36b884538f372611cf38d29a6827" translate="yes" xml:space="preserve">
          <source>If the branch exists in multiple remotes and one of them is named by the &lt;code&gt;checkout.defaultRemote&lt;/code&gt; configuration variable, we&amp;rsquo;ll use that one for the purposes of disambiguation, even if the &lt;code&gt;&amp;lt;branch&amp;gt;&lt;/code&gt; isn&amp;rsquo;t unique across all remotes. Set it to e.g. &lt;code&gt;checkout.defaultRemote=origin&lt;/code&gt; to always checkout remote branches from there if &lt;code&gt;&amp;lt;branch&amp;gt;&lt;/code&gt; is ambiguous but exists on the &lt;code&gt;origin&lt;/code&gt; remote. See also &lt;code&gt;checkout.defaultRemote&lt;/code&gt; in &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;.</source>
          <target state="translated">Si la rama existe en varios controles remotos y uno de ellos tiene el nombre de la variable de configuraci&amp;oacute;n &lt;code&gt;checkout.defaultRemote&lt;/code&gt; , la usaremos con el prop&amp;oacute;sito de eliminar la ambig&amp;uuml;edad, incluso si &lt;code&gt;&amp;lt;branch&amp;gt;&lt;/code&gt; no es &amp;uacute;nico en todos los controles remotos. Config&amp;uacute;relo como, por ejemplo, &lt;code&gt;checkout.defaultRemote=origin&lt;/code&gt; para verificar siempre las ramas remotas desde all&amp;iacute; si &lt;code&gt;&amp;lt;branch&amp;gt;&lt;/code&gt; es ambiguo pero existe en el &lt;code&gt;origin&lt;/code&gt; remoto. Consulte tambi&amp;eacute;n &lt;code&gt;checkout.defaultRemote&lt;/code&gt; en &lt;a href=&quot;git-config&quot;&gt;git-config [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c39c5c03f65f2a5b7cc29c6c30fb330e225795da" translate="yes" xml:space="preserve">
          <source>If the changes are independent enough, Git will automatically complete the merge and commit the result (or reuse an existing commit in case of &lt;a href=&quot;#fast-forwards&quot;&gt;fast-forward&lt;/a&gt;, see below). On the other hand, if there are conflicts&amp;mdash;​for example, if the same file is modified in two different ways in the remote branch and the local branch&amp;mdash;​then you are warned; the output may look something like this:</source>
          <target state="translated">Si los cambios son lo suficientemente independientes, Git completar&amp;aacute; autom&amp;aacute;ticamente la fusi&amp;oacute;n y confirmar&amp;aacute; el resultado (o reutilizar&amp;aacute; una confirmaci&amp;oacute;n existente en caso de &lt;a href=&quot;#fast-forwards&quot;&gt;avance r&amp;aacute;pido&lt;/a&gt; , ver m&amp;aacute;s abajo). Por otro lado, si hay conflictos, por ejemplo, si el mismo archivo se modifica de dos formas diferentes en la rama remota y en la rama local, se le advierte; la salida puede verse algo como esto:</target>
        </trans-unit>
        <trans-unit id="288f48e57898c3a0706dea1db36d760600650737" translate="yes" xml:space="preserve">
          <source>If the changes don&amp;rsquo;t conflict, you&amp;rsquo;re done. If there are conflicts, markers will be left in the problematic files showing the conflict;</source>
          <target state="translated">Si los cambios no entran en conflicto, ya est&amp;aacute;. Si hay conflictos, se dejar&amp;aacute;n marcadores en los archivos problem&amp;aacute;ticos que muestren el conflicto;</target>
        </trans-unit>
        <trans-unit id="0c9dca535f00f8f010f3f51cbdf5a64ba071ad26" translate="yes" xml:space="preserve">
          <source>If the checkout is done via rebase, local submodule commits are rebased as well.</source>
          <target state="translated">Si el pago se hace a través de la base,los compromisos de submódulos locales también se basan en la base.</target>
        </trans-unit>
        <trans-unit id="da1ce847fd50c0ebce51907161b2297389c68a97" translate="yes" xml:space="preserve">
          <source>If the command contains the &lt;code&gt;$ARG&lt;/code&gt; string, this string will be replaced with the &amp;lt;value&amp;gt; part of an existing trailer with the same &amp;lt;token&amp;gt;, if any, before the command is launched.</source>
          <target state="translated">Si el comando contiene la cadena &lt;code&gt;$ARG&lt;/code&gt; , esta cadena se reemplazar&amp;aacute; con la parte &amp;lt;value&amp;gt; de un tr&amp;aacute;iler existente con el mismo &amp;lt;token&amp;gt;, si lo hay, antes de que se inicie el comando.</target>
        </trans-unit>
        <trans-unit id="d68b3a0db25981cb416126191f5f7a8b40a5795b" translate="yes" xml:space="preserve">
          <source>If the commit is a merge commit, you must tell &lt;code&gt;git cvsexportcommit&lt;/code&gt; what parent the changeset should be done against.</source>
          <target state="translated">Si la confirmaci&amp;oacute;n es una confirmaci&amp;oacute;n de fusi&amp;oacute;n, debe decirle a &lt;code&gt;git cvsexportcommit&lt;/code&gt; contra qu&amp;eacute; padre se debe realizar el conjunto de cambios.</target>
        </trans-unit>
        <trans-unit id="50eff6c32d5b1376396b813f799767464152ed15" translate="yes" xml:space="preserve">
          <source>If the commit is a merge, and if the pretty-format is not &lt;code&gt;oneline&lt;/code&gt;, &lt;code&gt;email&lt;/code&gt; or &lt;code&gt;raw&lt;/code&gt;, an additional line is inserted before the &lt;code&gt;Author:&lt;/code&gt; line. This line begins with &quot;Merge: &quot; and the hashes of ancestral commits are printed, separated by spaces. Note that the listed commits may not necessarily be the list of the &lt;strong&gt;direct&lt;/strong&gt; parent commits if you have limited your view of history: for example, if you are only interested in changes related to a certain directory or file.</source>
          <target state="translated">Si la confirmaci&amp;oacute;n es una combinaci&amp;oacute;n, y si el formato bonito no est&amp;aacute; en &lt;code&gt;oneline&lt;/code&gt; , &lt;code&gt;email&lt;/code&gt; o &lt;code&gt;raw&lt;/code&gt; formato , se inserta una l&amp;iacute;nea adicional antes de la l&amp;iacute;nea &lt;code&gt;Author:&lt;/code&gt; . Esta l&amp;iacute;nea comienza con &quot;Merge:&quot; y los valores hash de las confirmaciones ancestrales se imprimen, separados por espacios. Tenga en cuenta que las confirmaciones enumeradas pueden no ser necesariamente la lista de las confirmaciones principales &lt;strong&gt;directas&lt;/strong&gt; si ha limitado su vista del historial: por ejemplo, si solo est&amp;aacute; interesado en cambios relacionados con un directorio o archivo determinado.</target>
        </trans-unit>
        <trans-unit id="fb562926c30c7dcdbad03cee2dab579f6b030079" translate="yes" xml:space="preserve">
          <source>If the commit is done directly by using &lt;code&gt;git&lt;/code&gt; (as opposed to using &lt;code&gt;git-cvsserver&lt;/code&gt;) the update will need to happen on the next repository access by &lt;code&gt;git-cvsserver&lt;/code&gt;, independent of access method and requested operation.</source>
          <target state="translated">Si la confirmaci&amp;oacute;n se realiza directamente usando &lt;code&gt;git&lt;/code&gt; (en lugar de usar &lt;code&gt;git-cvsserver&lt;/code&gt; ), la actualizaci&amp;oacute;n deber&amp;aacute; ocurrir en el pr&amp;oacute;ximo acceso al repositorio por &lt;code&gt;git-cvsserver&lt;/code&gt; , independientemente del m&amp;eacute;todo de acceso y la operaci&amp;oacute;n solicitada.</target>
        </trans-unit>
        <trans-unit id="f829bbddf6f6f452756492321328ac75e498d9d9" translate="yes" xml:space="preserve">
          <source>If the config option &lt;code&gt;uploadArchive.allowUnreachable&lt;/code&gt; is true, these rules are ignored, and clients may use arbitrary sha1 expressions. This is useful if you do not care about the privacy of unreachable objects, or if your object database is already publicly available for access via non-smart-http.</source>
          <target state="translated">Si la opci&amp;oacute;n de configuraci&amp;oacute;n &lt;code&gt;uploadArchive.allowUnreachable&lt;/code&gt; es verdadera, estas reglas se ignoran y los clientes pueden usar expresiones sha1 arbitrarias. Esto es &amp;uacute;til si no le importa la privacidad de los objetos inalcanzables o si su base de datos de objetos ya est&amp;aacute; disponible p&amp;uacute;blicamente para acceder a trav&amp;eacute;s de un http no inteligente.</target>
        </trans-unit>
        <trans-unit id="a1bf5bff98f507f37d5394622406355fb10d8518" translate="yes" xml:space="preserve">
          <source>If the config variable &lt;code&gt;status.relativePaths&lt;/code&gt; is set to false, then all paths shown are relative to the repository root, not to the current directory.</source>
          <target state="translated">Si la variable de configuraci&amp;oacute;n &lt;code&gt;status.relativePaths&lt;/code&gt; se establece en false, todas las rutas que se muestran son relativas a la ra&amp;iacute;z del repositorio, no al directorio actual.</target>
        </trans-unit>
        <trans-unit id="15abc3d7884a27f6ef940ec31e7ff01ecc03f9f0" translate="yes" xml:space="preserve">
          <source>If the configuration variable &lt;code&gt;instaweb.browser&lt;/code&gt; is not set, &lt;code&gt;web.browser&lt;/code&gt; will be used instead if it is defined. See &lt;a href=&quot;git-web--browse&quot;&gt;git-web--browse[1]&lt;/a&gt; for more information about this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd3ff15aa0e04d429d03e9f6131934c58fa371f6" translate="yes" xml:space="preserve">
          <source>If the configuration variable &lt;code&gt;instaweb.browser&lt;/code&gt; is not set, &lt;code&gt;web.browser&lt;/code&gt; will be used instead if it is defined. See git-web{litdd}browse[1] for more information about this.</source>
          <target state="translated">Si no se establece la variable de configuraci&amp;oacute;n &lt;code&gt;instaweb.browser&lt;/code&gt; , en su &lt;code&gt;web.browser&lt;/code&gt; se utilizar&amp;aacute; web.browser si est&amp;aacute; definido. Consulte git-web {litdd} navegar [1] para obtener m&amp;aacute;s informaci&amp;oacute;n sobre esto.</target>
        </trans-unit>
        <trans-unit id="63b229ee2ee5c7c387585f3ec858739b37c09980" translate="yes" xml:space="preserve">
          <source>If the current HEAD is the same as the parent of the cherry-pick&amp;rsquo;ed commit, then a fast forward to this commit will be performed.</source>
          <target state="translated">Si el HEAD actual es el mismo que el padre de la confirmaci&amp;oacute;n seleccionada, se realizar&amp;aacute; un avance r&amp;aacute;pido a esta confirmaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="7ca0a51612928d164dbfccc37787084c17e98850" translate="yes" xml:space="preserve">
          <source>If the custom merge tool correctly indicates the success of a merge resolution with its exit code, then the configuration variable &lt;code&gt;mergetool.&amp;lt;tool&amp;gt;.trustExitCode&lt;/code&gt; can be set to &lt;code&gt;true&lt;/code&gt;. Otherwise, &lt;code&gt;git mergetool&lt;/code&gt; will prompt the user to indicate the success of the resolution after the custom tool has exited.</source>
          <target state="translated">Si la herramienta de combinaci&amp;oacute;n personalizada indica correctamente el &amp;eacute;xito de una resoluci&amp;oacute;n de combinaci&amp;oacute;n con su c&amp;oacute;digo de salida, entonces la variable de configuraci&amp;oacute;n &lt;code&gt;mergetool.&amp;lt;tool&amp;gt;.trustExitCode&lt;/code&gt; se puede establecer en &lt;code&gt;true&lt;/code&gt; . De lo contrario, &lt;code&gt;git mergetool&lt;/code&gt; le pedir&amp;aacute; al usuario que indique el &amp;eacute;xito de la resoluci&amp;oacute;n despu&amp;eacute;s de que la herramienta personalizada haya salido.</target>
        </trans-unit>
        <trans-unit id="36390d22499feba94308c3d2a6c08dfbe3009ec3" translate="yes" xml:space="preserve">
          <source>If the exit status is non-zero, &lt;code&gt;git commit&lt;/code&gt; will abort.</source>
          <target state="translated">Si el estado de salida es distinto de cero, &lt;code&gt;git commit&lt;/code&gt; abortar&amp;aacute;.</target>
        </trans-unit>
        <trans-unit id="ffb6fc6e4737a7b7be769bd191cc211dd325235f" translate="yes" xml:space="preserve">
          <source>If the file &lt;code&gt;.mailmap&lt;/code&gt; exists at the toplevel of the repository, or at the location pointed to by the mailmap.file or mailmap.blob configuration options, it is used to map author and committer names and email addresses to canonical real names and email addresses.</source>
          <target state="translated">Si el archivo &lt;code&gt;.mailmap&lt;/code&gt; existe en el nivel superior del repositorio, o en la ubicaci&amp;oacute;n se&amp;ntilde;alada por las opciones de configuraci&amp;oacute;n mailmap.file o mailmap.blob, se utiliza para asignar los nombres de autor y autor y las direcciones de correo electr&amp;oacute;nico a nombres reales can&amp;oacute;nicos y direcciones de correo electr&amp;oacute;nico. .</target>
        </trans-unit>
        <trans-unit id="7142e4ddc34f82f593252b78cfae14d3292c9524" translate="yes" xml:space="preserve">
          <source>If the file gc.log exists, then &lt;code&gt;git gc --auto&lt;/code&gt; will print its content and exit with status zero instead of running unless that file is more than &lt;code&gt;gc.logExpiry&lt;/code&gt; old. Default is &quot;1.day&quot;. See &lt;code&gt;gc.pruneExpire&lt;/code&gt; for more ways to specify its value.</source>
          <target state="translated">Si el archivo gc.log existe, entonces &lt;code&gt;git gc --auto&lt;/code&gt; imprimir&amp;aacute; su contenido y saldr&amp;aacute; con el estado cero en lugar de ejecutarse, a menos que el archivo tenga m&amp;aacute;s de &lt;code&gt;gc.logExpiry&lt;/code&gt; . El valor predeterminado es &quot;1.d&amp;iacute;a&quot;. Consulte &lt;code&gt;gc.pruneExpire&lt;/code&gt; para conocer m&amp;aacute;s formas de especificar su valor.</target>
        </trans-unit>
        <trans-unit id="7333f3457fce187a5640d74385a1bbc89a0c5a97" translate="yes" xml:space="preserve">
          <source>If the filter command (a string value) is defined via &lt;code&gt;filter.&amp;lt;driver&amp;gt;.process&lt;/code&gt; then Git can process all blobs with a single filter invocation for the entire life of a single Git command. This is achieved by using the long-running process protocol (described in technical/long-running-process-protocol.txt).</source>
          <target state="translated">Si el comando de filtro (un valor de cadena) se define a trav&amp;eacute;s de &lt;code&gt;filter.&amp;lt;driver&amp;gt;.process&lt;/code&gt; , Git puede procesar todos los blobs con una &amp;uacute;nica invocaci&amp;oacute;n de filtro durante toda la vida de un solo comando de Git. Esto se logra mediante el uso del protocolo de proceso de larga ejecuci&amp;oacute;n (descrito en technical / long-running-process-protocol.txt).</target>
        </trans-unit>
        <trans-unit id="edaaa7b77ca9e9ee284b92c3f4abf94dbe583827" translate="yes" xml:space="preserve">
          <source>If the filter dies during the communication or does not adhere to the protocol then Git will stop the filter process and restart it with the next file that needs to be processed. Depending on the &lt;code&gt;filter.&amp;lt;driver&amp;gt;.required&lt;/code&gt; flag Git will interpret that as error.</source>
          <target state="translated">Si el filtro muere durante la comunicaci&amp;oacute;n o no se adhiere al protocolo, Git detendr&amp;aacute; el proceso de filtrado y lo reiniciar&amp;aacute; con el siguiente archivo que debe procesarse. Dependiendo del &lt;code&gt;filter.&amp;lt;driver&amp;gt;.required&lt;/code&gt; flag Git lo interpretar&amp;aacute; como un error.</target>
        </trans-unit>
        <trans-unit id="5e14f4a25e8ac87108268501a2fbb6eaeaabe84f" translate="yes" xml:space="preserve">
          <source>If the filter experiences an error during processing, then it can send the status &quot;error&quot; after the content was (partially or completely) sent.</source>
          <target state="translated">Si el filtro experimenta un error durante el procesamiento,puede enviar el estado &quot;error&quot; después de que el contenido haya sido enviado (parcial o completamente).</target>
        </trans-unit>
        <trans-unit id="4bace70b57e96bff11ceac069e6098423752b6f8" translate="yes" xml:space="preserve">
          <source>If the filter supports the &quot;delay&quot; capability then it must support the &quot;list_available_blobs&quot; command. If Git sends this command, then the filter is expected to return a list of pathnames representing blobs that have been delayed earlier and are now available. The list must be terminated with a flush packet followed by a &quot;success&quot; status that is also terminated with a flush packet. If no blobs for the delayed paths are available, yet, then the filter is expected to block the response until at least one blob becomes available. The filter can tell Git that it has no more delayed blobs by sending an empty list. As soon as the filter responds with an empty list, Git stops asking. All blobs that Git has not received at this point are considered missing and will result in an error.</source>
          <target state="translated">Si el filtro soporta la capacidad de &quot;retardo&quot; entonces debe soportar el comando &quot;list_available_blobs&quot;.Si Git envía este comando,entonces se espera que el filtro devuelva una lista de rutas que representen los blobs que se han retrasado antes y que ahora están disponibles.La lista debe terminar con un paquete de descarga seguido de un estado de &quot;éxito&quot; que también termina con un paquete de descarga.Si todavía no hay blobs para las rutas retrasadas,entonces se espera que el filtro bloquee la respuesta hasta que al menos un blob esté disponible.El filtro puede decirle a Git que no tiene más blobs retrasados enviando una lista vacía.En cuanto el filtro responde con una lista vacía,Git deja de preguntar.Todas las manchas que Git no haya recibido hasta ese momento se considerarán perdidas y darán lugar a un error.</target>
        </trans-unit>
        <trans-unit id="03052ebbe356e67d3f76578abb0f90e9da0b94ac" translate="yes" xml:space="preserve">
          <source>If the filter supports the &quot;delay&quot; capability, then Git can send the flag &quot;can-delay&quot; after the filter command and pathname. This flag denotes that the filter can delay filtering the current blob (e.g. to compensate network latencies) by responding with no content but with the status &quot;delayed&quot; and a flush packet.</source>
          <target state="translated">Si el filtro soporta la capacidad de &quot;retardo&quot;,entonces Git puede enviar la bandera &quot;can-delay&quot; después del comando del filtro y la ruta.Esta bandera denota que el filtro puede retrasar el filtrado de la mancha actual (por ejemplo,para compensar las latencias de la red)respondiendo sin contenido pero con el estado &quot;retrasado&quot; y un paquete de descarga.</target>
        </trans-unit>
        <trans-unit id="13eec1f811a3745751e3462b5df9eab594af45cb" translate="yes" xml:space="preserve">
          <source>If the format is set to &quot;auto:foo&quot; and the pager is in use, format &quot;foo&quot; will be the used for the date format. Otherwise &quot;default&quot; will be used.</source>
          <target state="translated">Si el formato está configurado en &quot;auto:foo&quot; y el localizador está en uso,el formato &quot;foo&quot; será el utilizado para el formato de la fecha.De lo contrario,se utilizará el &quot;predeterminado&quot;.</target>
        </trans-unit>
        <trans-unit id="7402fa03babc6cbdcbdc9c0c2d38f35b3f77eedb" translate="yes" xml:space="preserve">
          <source>If the given object refers to a blob, it will be described as &lt;code&gt;&amp;lt;commit-ish&amp;gt;:&amp;lt;path&amp;gt;&lt;/code&gt;, such that the blob can be found at &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt; in the &lt;code&gt;&amp;lt;commit-ish&amp;gt;&lt;/code&gt;, which itself describes the first commit in which this blob occurs in a reverse revision walk from HEAD.</source>
          <target state="translated">Si el objeto dado se refiere a un blob, se describir&amp;aacute; como &lt;code&gt;&amp;lt;commit-ish&amp;gt;:&amp;lt;path&amp;gt;&lt;/code&gt; , de modo que el blob se puede encontrar en &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt; en &lt;code&gt;&amp;lt;commit-ish&amp;gt;&lt;/code&gt; , que a su vez describe la primera confirmaci&amp;oacute;n en que este blob ocurre en una caminata de revisi&amp;oacute;n inversa de HEAD.</target>
        </trans-unit>
        <trans-unit id="5e980dfa1f5a4a3edafff4113df2abbd7d17f577" translate="yes" xml:space="preserve">
          <source>If the helper string begins with &quot;!&quot;, it is considered a shell snippet, and everything after the &quot;!&quot; becomes the command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="228c738194bda1bc3c409314b8269609d7c41e0b" translate="yes" xml:space="preserve">
          <source>If the hook exits with non-zero status, none of the refs will be updated. If the hook exits with zero, updating of individual refs can still be prevented by the &lt;a href=&quot;#update&quot;&gt;&lt;em&gt;update&lt;/em&gt;&lt;/a&gt; hook.</source>
          <target state="translated">Si el gancho sale con un estado distinto de cero, no se actualizar&amp;aacute; ninguna de las referencias. Si el gancho sale con cero, el gancho de actualizaci&amp;oacute;n a&amp;uacute;n puede evitar la &lt;a href=&quot;#update&quot;&gt;&lt;em&gt;actualizaci&amp;oacute;n&lt;/em&gt;&lt;/a&gt; de referencias individuales .</target>
        </trans-unit>
        <trans-unit id="8439515eb9b2d0e08bb52156ea070a5b55f21477" translate="yes" xml:space="preserve">
          <source>If the ignore-paths configuration key is set, and the command-line option is also given, both regular expressions will be used.</source>
          <target state="translated">Si se establece la clave de configuración de los caminos de la ignorancia,y también se da la opción de la línea de comandos,se usarán ambas expresiones regulares.</target>
        </trans-unit>
        <trans-unit id="e545fa5704075d5dfeae5601c6d9858dfebf0464" translate="yes" xml:space="preserve">
          <source>If the ignore-refs configuration key is set, and the command-line option is also given, both regular expressions will be used.</source>
          <target state="translated">Si se establece la clave de configuración de ignore-refs,y también se da la opción de la línea de comandos,se usarán ambas expresiones regulares.</target>
        </trans-unit>
        <trans-unit id="f1e0ea5f0e79a32b5a2b025af2eaf1eb5f6a9a8a" translate="yes" xml:space="preserve">
          <source>If the last path components in the working tree&amp;rsquo;s path is unique among working trees, it can be used to identify a working tree. For example if you only have two working trees, at &lt;code&gt;/abc/def/ghi&lt;/code&gt; and &lt;code&gt;/abc/def/ggg&lt;/code&gt;, then &lt;code&gt;ghi&lt;/code&gt; or &lt;code&gt;def/ghi&lt;/code&gt; is enough to point to the former working tree.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="368e2e291b26f0dca547e5b1c9de986c75896687" translate="yes" xml:space="preserve">
          <source>If the last path components in the working tree&amp;rsquo;s path is unique among working trees, it can be used to identify worktrees. For example if you only have two working trees, at &quot;/abc/def/ghi&quot; and &quot;/abc/def/ggg&quot;, then &quot;ghi&quot; or &quot;def/ghi&quot; is enough to point to the former working tree.</source>
          <target state="translated">Si los &amp;uacute;ltimos componentes de la ruta en la ruta del &amp;aacute;rbol de trabajo son &amp;uacute;nicos entre los &amp;aacute;rboles de trabajo, se pueden usar para identificar &amp;aacute;rboles de trabajo. Por ejemplo, si solo tiene dos &amp;aacute;rboles de trabajo, en &quot;/ abc / def / ghi&quot; y &quot;/ abc / def / ggg&quot;, entonces &quot;ghi&quot; o &quot;def / ghi&quot; es suficiente para apuntar al &amp;aacute;rbol de trabajo anterior.</target>
        </trans-unit>
        <trans-unit id="a77fa7a1d051613196a1695412c9a05d33f69ded" translate="yes" xml:space="preserve">
          <source>If the local offset is not available in the source material, use &amp;ldquo;+0000&amp;rdquo;, or the most common local offset. For example many organizations have a CVS repository which has only ever been accessed by users who are located in the same location and time zone. In this case a reasonable offset from UTC could be assumed.</source>
          <target state="translated">Si el desplazamiento local no est&amp;aacute; disponible en el material de origen, utilice &amp;ldquo;+0000&amp;rdquo; o el desplazamiento local m&amp;aacute;s com&amp;uacute;n. Por ejemplo, muchas organizaciones tienen un repositorio de CVS al que solo han accedido usuarios que se encuentran en la misma ubicaci&amp;oacute;n y zona horaria. En este caso, se podr&amp;iacute;a suponer una compensaci&amp;oacute;n razonable de UTC.</target>
        </trans-unit>
        <trans-unit id="178f63f22948e35272dd2355f9864ebc5b092dbe" translate="yes" xml:space="preserve">
          <source>If the maintainer tells you that your patch no longer applies to the current upstream, you will have to rebase your topic (you cannot use a merge because you cannot format-patch merges):</source>
          <target state="translated">Si el mantenedor le dice que su parche ya no se aplica a la corriente ascendente actual,tendrá que volver a basar su tema (no puede utilizar una fusión porque no puede formatear las fusiones de parches):</target>
        </trans-unit>
        <trans-unit id="9b0ae610cbbc854a9104beb55038f8e674b12699" translate="yes" xml:space="preserve">
          <source>If the merge cannot be carried out automatically, the conflicts need to be resolved and the result committed separately (see &lt;a href=&quot;git-merge&quot;&gt;git-merge[1]&lt;/a&gt;). At that point, this hook will not be executed, but the &lt;code&gt;pre-commit&lt;/code&gt; hook will, if it is enabled.</source>
          <target state="translated">Si la fusi&amp;oacute;n no se puede llevar a cabo autom&amp;aacute;ticamente, los conflictos deben resolverse y el resultado debe confirmarse por separado (ver &lt;a href=&quot;git-merge&quot;&gt;git-merge [1]&lt;/a&gt; ). En ese momento, este gancho no se ejecutar&amp;aacute;, pero el gancho de &lt;code&gt;pre-commit&lt;/code&gt; , si est&amp;aacute; habilitado.</target>
        </trans-unit>
        <trans-unit id="e1f358924aaa72264d85ec0ddf7ef92dd8191058" translate="yes" xml:space="preserve">
          <source>If the merge fails because it is not a fast-forward, then it is possible some fixes on &lt;code&gt;maint&lt;/code&gt; were missed in the feature release. This will not happen if the content of the branches was verified as described in the previous section.</source>
          <target state="translated">Si la fusi&amp;oacute;n falla porque no es un avance r&amp;aacute;pido, entonces es posible que algunas correcciones de &lt;code&gt;maint&lt;/code&gt; hayan perdido en la versi&amp;oacute;n de funciones. Esto no suceder&amp;aacute; si se verific&amp;oacute; el contenido de las ramas como se describe en la secci&amp;oacute;n anterior.</target>
        </trans-unit>
        <trans-unit id="39e28c0246f221ccbae77af3a33cb0a2f4910f1f" translate="yes" xml:space="preserve">
          <source>If the number of objects fetched over the Git native transfer is below this limit, then the objects will be unpacked into loose object files. However if the number of received objects equals or exceeds this limit then the received pack will be stored as a pack, after adding any missing delta bases. Storing the pack from a push can make the push operation complete faster, especially on slow filesystems. If not set, the value of &lt;code&gt;transfer.unpackLimit&lt;/code&gt; is used instead.</source>
          <target state="translated">Si el n&amp;uacute;mero de objetos recuperados a trav&amp;eacute;s de la transferencia nativa de Git est&amp;aacute; por debajo de este l&amp;iacute;mite, los objetos se descomprimir&amp;aacute;n en archivos de objetos sueltos. Sin embargo, si el n&amp;uacute;mero de objetos recibidos iguala o supera este l&amp;iacute;mite, el paquete recibido se almacenar&amp;aacute; como un paquete, despu&amp;eacute;s de agregar las bases delta que falten. Almacenar el paquete desde una inserci&amp;oacute;n puede hacer que la operaci&amp;oacute;n de inserci&amp;oacute;n se complete m&amp;aacute;s r&amp;aacute;pido, especialmente en sistemas de archivos lentos. Si no se establece, se utiliza en su lugar el valor de &lt;code&gt;transfer.unpackLimit&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ba1c0757ead2b007fd4bc7bc8fe3299d5f283bd7" translate="yes" xml:space="preserve">
          <source>If the number of objects imported by &lt;a href=&quot;git-fast-import&quot;&gt;git-fast-import[1]&lt;/a&gt; is below this limit, then the objects will be unpacked into loose object files. However if the number of imported objects equals or exceeds this limit then the pack will be stored as a pack. Storing the pack from a fast-import can make the import operation complete faster, especially on slow filesystems. If not set, the value of &lt;code&gt;transfer.unpackLimit&lt;/code&gt; is used instead.</source>
          <target state="translated">Si el n&amp;uacute;mero de objetos importados por &lt;a href=&quot;git-fast-import&quot;&gt;git-fast-import [1]&lt;/a&gt; est&amp;aacute; por debajo de este l&amp;iacute;mite, los objetos se descomprimir&amp;aacute;n en archivos de objetos sueltos. Sin embargo, si el n&amp;uacute;mero de objetos importados iguala o supera este l&amp;iacute;mite, el paquete se almacenar&amp;aacute; como un paquete. Almacenar el paquete desde una importaci&amp;oacute;n r&amp;aacute;pida puede hacer que la operaci&amp;oacute;n de importaci&amp;oacute;n se complete m&amp;aacute;s r&amp;aacute;pido, especialmente en sistemas de archivos lentos. Si no se establece, se utiliza en su lugar el valor de &lt;code&gt;transfer.unpackLimit&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="66dbfca32684aa415437926e2128b562d1010471" translate="yes" xml:space="preserve">
          <source>If the number of objects received in a push is below this limit then the objects will be unpacked into loose object files. However if the number of received objects equals or exceeds this limit then the received pack will be stored as a pack, after adding any missing delta bases. Storing the pack from a push can make the push operation complete faster, especially on slow filesystems. If not set, the value of &lt;code&gt;transfer.unpackLimit&lt;/code&gt; is used instead.</source>
          <target state="translated">Si el n&amp;uacute;mero de objetos recibidos en un env&amp;iacute;o est&amp;aacute; por debajo de este l&amp;iacute;mite, los objetos se descomprimir&amp;aacute;n en archivos de objetos sueltos. Sin embargo, si el n&amp;uacute;mero de objetos recibidos iguala o supera este l&amp;iacute;mite, el paquete recibido se almacenar&amp;aacute; como un paquete, despu&amp;eacute;s de agregar las bases delta que falten. Almacenar el paquete desde una inserci&amp;oacute;n puede hacer que la operaci&amp;oacute;n de inserci&amp;oacute;n se complete m&amp;aacute;s r&amp;aacute;pido, especialmente en sistemas de archivos lentos. Si no se establece, se utiliza en su lugar el valor de &lt;code&gt;transfer.unpackLimit&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e5106f465347ea1c1f64d4a4e406ce8334671d0b" translate="yes" xml:space="preserve">
          <source>If the object being copied out to a temporary file is a symbolic link the content of the link will be written to a normal file. It is up to the end-user or the Porcelain to make use of this information.</source>
          <target state="translated">Si el objeto que se copia en un archivo temporal es un enlace simbólico,el contenido del enlace se escribirá en un archivo normal.Depende del usuario final o de la Porcelana hacer uso de esta información.</target>
        </trans-unit>
        <trans-unit id="0199138006db8140692b7fdc79404759dcaa332d" translate="yes" xml:space="preserve">
          <source>If the object is stored as a delta on-disk, this expands to the 40-hex sha1 of the delta base object. Otherwise, expands to the null sha1 (40 zeroes). See &lt;code&gt;CAVEATS&lt;/code&gt; below.</source>
          <target state="translated">Si el objeto se almacena como un delta en el disco, esto se expande al sha1 de 40 hexes del objeto base delta. De lo contrario, se expande al nulo sha1 (40 ceros). Vea &lt;code&gt;CAVEATS&lt;/code&gt; continuaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="bd902b813b2d32a3c916d53036b9b4661bcff5a2" translate="yes" xml:space="preserve">
          <source>If the object storage directory is specified via the &lt;code&gt;$GIT_OBJECT_DIRECTORY&lt;/code&gt; environment variable then the sha1 directories are created underneath - otherwise the default &lt;code&gt;$GIT_DIR/objects&lt;/code&gt; directory is used.</source>
          <target state="translated">Si el directorio de almacenamiento de objetos se especifica mediante la variable de entorno &lt;code&gt;$GIT_OBJECT_DIRECTORY&lt;/code&gt; , los directorios sha1 se crean debajo; de lo contrario , se utiliza el directorio predeterminado &lt;code&gt;$GIT_DIR/objects&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5445d9592417f6217da69d0d0ffe49e2288619f2" translate="yes" xml:space="preserve">
          <source>If the object storage directory is specified via this environment variable then the sha1 directories are created underneath - otherwise the default &lt;code&gt;$GIT_DIR/objects&lt;/code&gt; directory is used.</source>
          <target state="translated">Si el directorio de almacenamiento de objetos se especifica mediante esta variable de entorno, los directorios sha1 se crean debajo; de lo contrario , se utiliza el directorio predeterminado &lt;code&gt;$GIT_DIR/objects&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5f2dc3f2759f3e631848eb5ab78d16a8be4a1f31" translate="yes" xml:space="preserve">
          <source>If the option &lt;code&gt;--all&lt;/code&gt; or &lt;code&gt;-a&lt;/code&gt; is given, all available commands are printed on the standard output.</source>
          <target state="translated">Si se da la opci&amp;oacute;n &lt;code&gt;--all&lt;/code&gt; o &lt;code&gt;-a&lt;/code&gt; , todos los comandos disponibles se imprimen en la salida est&amp;aacute;ndar.</target>
        </trans-unit>
        <trans-unit id="5db3d9ce81a9166e23fdfafcb7cf25752ff75423" translate="yes" xml:space="preserve">
          <source>If the option &lt;code&gt;--guide&lt;/code&gt; or &lt;code&gt;-g&lt;/code&gt; is given, a list of the useful Git guides is also printed on the standard output.</source>
          <target state="translated">Si se da la opci&amp;oacute;n &lt;code&gt;--guide&lt;/code&gt; o &lt;code&gt;-g&lt;/code&gt; , tambi&amp;eacute;n se imprime una lista de las gu&amp;iacute;as &amp;uacute;tiles de Git en la salida est&amp;aacute;ndar.</target>
        </trans-unit>
        <trans-unit id="401de2382d11b6e27d9e64da4738d460ce293134" translate="yes" xml:space="preserve">
          <source>If the option &lt;code&gt;--guides&lt;/code&gt; or &lt;code&gt;-g&lt;/code&gt; is given, a list of the Git concept guides is also printed on the standard output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="670e86a39706c7e65a8fa8905b8b3b00899ff047" translate="yes" xml:space="preserve">
          <source>If the option is passed without specifying &lt;code&gt;--force-with-lease&lt;/code&gt;, or specified along with &lt;code&gt;--force-with-lease=&amp;lt;refname&amp;gt;:&amp;lt;expect&amp;gt;&lt;/code&gt;, it is a &quot;no-op&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22d4a6b6cbe8c87e55028aafc6f2a3b165e3a3fa" translate="yes" xml:space="preserve">
          <source>If the patch contains any changes to submodules then &lt;code&gt;git apply&lt;/code&gt; treats these changes as follows.</source>
          <target state="translated">Si el parche contiene alg&amp;uacute;n cambio en los subm&amp;oacute;dulos, &lt;code&gt;git apply&lt;/code&gt; trata estos cambios de la siguiente manera.</target>
        </trans-unit>
        <trans-unit id="bc5f440658cbf7f8fc36476e96067d0db070086e" translate="yes" xml:space="preserve">
          <source>If the pattern does not start with either &lt;code&gt;~/&lt;/code&gt;, &lt;code&gt;./&lt;/code&gt; or &lt;code&gt;/&lt;/code&gt;, &lt;code&gt;**/&lt;/code&gt; will be automatically prepended. For example, the pattern &lt;code&gt;foo/bar&lt;/code&gt; becomes &lt;code&gt;**/foo/bar&lt;/code&gt; and would match &lt;code&gt;/any/path/to/foo/bar&lt;/code&gt;.</source>
          <target state="translated">Si el patr&amp;oacute;n no comienza con &lt;code&gt;~/&lt;/code&gt; , &lt;code&gt;./&lt;/code&gt; o &lt;code&gt;/&lt;/code&gt; , &lt;code&gt;**/&lt;/code&gt; se antepondr&amp;aacute; autom&amp;aacute;ticamente. Por ejemplo, el patr&amp;oacute;n &lt;code&gt;foo/bar&lt;/code&gt; se convierte en &lt;code&gt;**/foo/bar&lt;/code&gt; y coincidir&amp;iacute;a con &lt;code&gt;/any/path/to/foo/bar&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cdf2b04ab13a298c669a989712845f14a413f23b" translate="yes" xml:space="preserve">
          <source>If the pattern ends with &lt;code&gt;/&lt;/code&gt;, &lt;code&gt;**&lt;/code&gt; will be automatically added. For example, the pattern &lt;code&gt;foo/&lt;/code&gt; becomes &lt;code&gt;foo/**&lt;/code&gt;. In other words, it matches &quot;foo&quot; and everything inside, recursively.</source>
          <target state="translated">Si el patr&amp;oacute;n termina con &lt;code&gt;/&lt;/code&gt; , &lt;code&gt;**&lt;/code&gt; se agregar&amp;aacute; autom&amp;aacute;ticamente. Por ejemplo, el patr&amp;oacute;n &lt;code&gt;foo/&lt;/code&gt; se convierte en &lt;code&gt;foo/**&lt;/code&gt; . En otras palabras, coincide con &quot;foo&quot; y todo lo que hay dentro, de forma recursiva.</target>
        </trans-unit>
        <trans-unit id="ead2b404e5878a53eb56a401706bd4f86f5cdd4b" translate="yes" xml:space="preserve">
          <source>If the pattern ends with &lt;code&gt;/&lt;/code&gt;, &lt;code&gt;**&lt;/code&gt; will be automatically added. For example, the pattern &lt;code&gt;foo/&lt;/code&gt; becomes &lt;code&gt;foo/**&lt;/code&gt;. In other words, it matches all branches that begin with &lt;code&gt;foo/&lt;/code&gt;. This is useful if your branches are organized hierarchically and you would like to apply a configuration to all the branches in that hierarchy.</source>
          <target state="translated">Si el patr&amp;oacute;n termina con &lt;code&gt;/&lt;/code&gt; , &lt;code&gt;**&lt;/code&gt; se agregar&amp;aacute; autom&amp;aacute;ticamente. Por ejemplo, el patr&amp;oacute;n &lt;code&gt;foo/&lt;/code&gt; se convierte en &lt;code&gt;foo/**&lt;/code&gt; . En otras palabras, coincide con todas las ramas que comienzan con &lt;code&gt;foo/&lt;/code&gt; . Esto es &amp;uacute;til si sus ramas est&amp;aacute;n organizadas jer&amp;aacute;rquicamente y le gustar&amp;iacute;a aplicar una configuraci&amp;oacute;n a todas las ramas en esa jerarqu&amp;iacute;a.</target>
        </trans-unit>
        <trans-unit id="f1c8abd89592d50ca8ca62bbaec12c523f709263" translate="yes" xml:space="preserve">
          <source>If the pattern starts with &lt;code&gt;./&lt;/code&gt;, it is replaced with the directory containing the current config file.</source>
          <target state="translated">Si el patr&amp;oacute;n comienza con &lt;code&gt;./&lt;/code&gt; , se reemplaza con el directorio que contiene el archivo de configuraci&amp;oacute;n actual.</target>
        </trans-unit>
        <trans-unit id="f924b2c312a1632ec51dd0f0353e6842160ab641" translate="yes" xml:space="preserve">
          <source>If the pattern starts with &lt;code&gt;~/&lt;/code&gt;, &lt;code&gt;~&lt;/code&gt; will be substituted with the content of the environment variable &lt;code&gt;HOME&lt;/code&gt;.</source>
          <target state="translated">Si el patr&amp;oacute;n comienza con &lt;code&gt;~/&lt;/code&gt; , &lt;code&gt;~&lt;/code&gt; se sustituir&amp;aacute; por el contenido de la variable de entorno &lt;code&gt;HOME&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="25b5ae377df44f33ba840cf2411c6edf767c0d5b" translate="yes" xml:space="preserve">
          <source>If the pre-receive hook exits with a non-zero exit status no updates will be performed, and the update, post-receive and post-update hooks will not be invoked either. This can be useful to quickly bail out if the update is not to be supported.</source>
          <target state="translated">Si el gancho pre-recibido sale con un estado de salida distinto de cero,no se realizarán actualizaciones,y tampoco se invocarán los ganchos de actualización,post-recibido y post-actualización.Esto puede ser útil para salir rápidamente si no se va a soportar la actualización.</target>
        </trans-unit>
        <trans-unit id="0131da637807c8654fda6294e521f8e5e74d9c2b" translate="yes" xml:space="preserve">
          <source>If the problematic commit is the most recent commit, and you have not yet made that commit public, then you may just &lt;a href=&quot;#undoing-a-merge&quot;&gt;destroy it using &lt;code&gt;git reset&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Si la confirmaci&amp;oacute;n problem&amp;aacute;tica es la confirmaci&amp;oacute;n m&amp;aacute;s reciente y a&amp;uacute;n no la ha hecho p&amp;uacute;blica, puede &lt;a href=&quot;#undoing-a-merge&quot;&gt;destruirla usando &lt;code&gt;git reset&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1f275a1769b3300733689c93e8034126052b9dd7" translate="yes" xml:space="preserve">
          <source>If the project list is taken from a file (&lt;code&gt;$projects_list&lt;/code&gt; points to a file), forks are only recognized if they are listed after the main project in that file.</source>
          <target state="translated">Si la lista de proyectos se toma de un archivo ( &lt;code&gt;$projects_list&lt;/code&gt; apunta a un archivo), las bifurcaciones solo se reconocen si se enumeran despu&amp;eacute;s del proyecto principal en ese archivo.</target>
        </trans-unit>
        <trans-unit id="cabde5708a0c59fc40ce3c5aef7bb8948c87aab4" translate="yes" xml:space="preserve">
          <source>If the reference repository is on the local machine, automatically setup &lt;code&gt;.git/objects/info/alternates&lt;/code&gt; to obtain objects from the reference repository. Using an already existing repository as an alternate will require fewer objects to be copied from the repository being cloned, reducing network and local storage costs. When using the &lt;code&gt;--reference-if-able&lt;/code&gt;, a non existing directory is skipped with a warning instead of aborting the clone.</source>
          <target state="translated">Si el repositorio de referencia est&amp;aacute; en la m&amp;aacute;quina local, configure autom&amp;aacute;ticamente &lt;code&gt;.git/objects/info/alternates&lt;/code&gt; para obtener objetos del repositorio de referencia. El uso de un repositorio ya existente como alternativa requerir&amp;aacute; que se copien menos objetos del repositorio que se est&amp;aacute; clonando, lo que reducir&amp;aacute; los costos de almacenamiento local y de red. Cuando se usa &lt;code&gt;--reference-if-able&lt;/code&gt; , un directorio no existente se omite con una advertencia en lugar de abortar el clon.</target>
        </trans-unit>
        <trans-unit id="5ea9c0fb462e839210565ca58d9885017561c1be" translate="yes" xml:space="preserve">
          <source>If the refspec is a globbing one, nothing is merged.</source>
          <target state="translated">Si el refspec es un globbing,nada se fusiona.</target>
        </trans-unit>
        <trans-unit id="67d81d9e5d98e20a38ce258501ea936cdaf3477e" translate="yes" xml:space="preserve">
          <source>If the remote has enabled the options &lt;code&gt;uploadpack.allowTipSHA1InWant&lt;/code&gt;, &lt;code&gt;uploadpack.allowReachableSHA1InWant&lt;/code&gt;, or &lt;code&gt;uploadpack.allowAnySHA1InWant&lt;/code&gt;, they may alternatively be 40-hex sha1s present on the remote.</source>
          <target state="translated">Si el control remoto ha habilitado las opciones &lt;code&gt;uploadpack.allowTipSHA1InWant&lt;/code&gt; , &lt;code&gt;uploadpack.allowReachableSHA1InWant&lt;/code&gt; , o &lt;code&gt;uploadpack.allowAnySHA1InWant&lt;/code&gt; , alternativamente pueden ser sha1s de 40 hexadecimales presentes en el control remoto.</target>
        </trans-unit>
        <trans-unit id="43fe46812af3fc1b263ad2f17ddd0dcd8b849c57" translate="yes" xml:space="preserve">
          <source>If the remote is fetched successfully, add upstream (tracking) reference, used by argument-less &lt;a href=&quot;git-pull&quot;&gt;git-pull[1]&lt;/a&gt; and other commands. For more information, see &lt;code&gt;branch.&amp;lt;name&amp;gt;.merge&lt;/code&gt; and &lt;code&gt;branch.&amp;lt;name&amp;gt;.remote&lt;/code&gt; in &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b40a2dab8bd4f0c4875755d97441dd96a4edce1" translate="yes" xml:space="preserve">
          <source>If the remote is fetched successfully, pull and add upstream (tracking) reference, used by argument-less &lt;a href=&quot;git-pull&quot;&gt;git-pull[1]&lt;/a&gt; and other commands. For more information, see &lt;code&gt;branch.&amp;lt;name&amp;gt;.merge&lt;/code&gt; and &lt;code&gt;branch.&amp;lt;name&amp;gt;.remote&lt;/code&gt; in &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;.</source>
          <target state="translated">Si el control remoto se obtiene con &amp;eacute;xito, extraiga y agregue una referencia ascendente (seguimiento), utilizada por &lt;a href=&quot;git-pull&quot;&gt;git-pull [1] sin&lt;/a&gt; argumentos y otros comandos. Para obtener m&amp;aacute;s informaci&amp;oacute;n, consulte &lt;code&gt;branch.&amp;lt;name&amp;gt;.merge&lt;/code&gt; y &lt;code&gt;branch.&amp;lt;name&amp;gt;.remote&lt;/code&gt; en &lt;a href=&quot;git-config&quot;&gt;git-config [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="dc0cb0804e07bed75e0e991fffdc9aae616f339a" translate="yes" xml:space="preserve">
          <source>If the remote side supports it, annotated tags objects will be downloaded on the same connection as the other objects if the object the tag references is downloaded. The caller must otherwise determine the tags this option made available.</source>
          <target state="translated">Si el lado remoto lo soporta,los objetos de etiquetas comentadas se descargarán en la misma conexión que los otros objetos si el objeto al que hace referencia la etiqueta se descarga.De lo contrario,la persona que llama debe determinar las etiquetas que esta opción pone a disposición.</target>
        </trans-unit>
        <trans-unit id="b72444ac7244fe67691159600db782df37b1532c" translate="yes" xml:space="preserve">
          <source>If the repository is bare, &lt;code&gt;--no-checkout&lt;/code&gt; is assumed.</source>
          <target state="translated">Si el repositorio est&amp;aacute; vac&amp;iacute;o, se asume &lt;code&gt;--no-checkout&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="36e50561f165c018ae6f119c2c6f3e5164508f60" translate="yes" xml:space="preserve">
          <source>If the repository is specified as a local path (e.g., &lt;code&gt;/path/to/repo&lt;/code&gt;), this is the default, and --local is essentially a no-op. If the repository is specified as a URL, then this flag is ignored (and we never use the local optimizations). Specifying &lt;code&gt;--no-local&lt;/code&gt; will override the default when &lt;code&gt;/path/to/repo&lt;/code&gt; is given, using the regular Git transport instead.</source>
          <target state="translated">Si el repositorio se especifica como una ruta local (p. Ej., &lt;code&gt;/path/to/repo&lt;/code&gt; ), este es el valor predeterminado y --local es esencialmente una operaci&amp;oacute;n no operativa. Si el repositorio se especifica como una URL, esta bandera se ignora (y nunca usamos las optimizaciones locales). Especificar &lt;code&gt;--no-local&lt;/code&gt; anular&amp;aacute; el valor predeterminado cuando se proporcione &lt;code&gt;/path/to/repo&lt;/code&gt; , utilizando el transporte Git normal en su lugar.</target>
        </trans-unit>
        <trans-unit id="9c19da211c253af2b7a5a65c4c24c5e8a4f73309" translate="yes" xml:space="preserve">
          <source>If the result content is empty then the filter is expected to respond with a &quot;success&quot; status and a flush packet to signal the empty content.</source>
          <target state="translated">Si el contenido resultante está vacío,se espera que el filtro responda con un estado de &quot;éxito&quot; y un paquete de descarga para señalar el contenido vacío.</target>
        </trans-unit>
        <trans-unit id="87bdb08d6c6927271153931ec7c3dbb32bf0435b" translate="yes" xml:space="preserve">
          <source>If the server has found a suitable cut point and has decided to send a &quot;ready&quot; line, then the server can decide to (as an optimization) omit any &quot;ACK&quot; lines it would have sent during its response. This is because the server will have already determined the objects it plans to send to the client and no further negotiation is needed.</source>
          <target state="translated">Si el servidor ha encontrado un punto de corte adecuado y ha decidido enviar una línea &quot;lista&quot;,entonces el servidor puede decidir (como optimización)omitir cualquier línea &quot;ACK&quot; que hubiera enviado durante su respuesta.Esto se debe a que el servidor ya habrá determinado los objetos que planea enviar al cliente y no se necesita ninguna otra negociación.</target>
        </trans-unit>
        <trans-unit id="b994a26dfc45bfc84fb73ef67436c3f647661961" translate="yes" xml:space="preserve">
          <source>If the size of the incoming pack stream is larger than this limit, then git-receive-pack will error out, instead of accepting the pack file. If not set or set to 0, then the size is unlimited.</source>
          <target state="translated">Si el tamaño del flujo de paquetes entrantes es mayor que este límite,entonces git-recibir-paquete dará un error,en lugar de aceptar el archivo del paquete.Si no se establece o se establece en 0,entonces el tamaño es ilimitado.</target>
        </trans-unit>
        <trans-unit id="ff78750ae83975fe12661694a886f60b06a8fa31" translate="yes" xml:space="preserve">
          <source>If the source material uses RFC 2822 style dates, the frontend should let fast-import handle the parsing and conversion (rather than attempting to do it itself) as the Git parser has been well tested in the wild.</source>
          <target state="translated">Si el material de origen utiliza fechas de estilo RFC 2822,el front-end debe dejar que la importación rápida se encargue del análisis sintáctico y la conversión (en lugar de intentar hacerlo por sí mismo),ya que el analizador de Git ha sido bien probado en la naturaleza.</target>
        </trans-unit>
        <trans-unit id="3c8cd70e721e8a0b9cd7092e81bbbfc31a3bd8bd" translate="yes" xml:space="preserve">
          <source>If the source repository is complete, convert a shallow repository to a complete one, removing all the limitations imposed by shallow repositories.</source>
          <target state="translated">Si el depósito de fuentes está completo,convierta un depósito poco profundo en uno completo,eliminando todas las limitaciones impuestas por los depósitos poco profundos.</target>
        </trans-unit>
        <trans-unit id="9e6d3a4e3136a4838fe6f50fd9653c6cb56b6d6c" translate="yes" xml:space="preserve">
          <source>If the source repository is shallow, fetch as much as possible so that the current repository has the same history as the source repository.</source>
          <target state="translated">Si el repositorio de la fuente es poco profundo,buscar tanto como sea posible para que el repositorio actual tenga la misma historia que el repositorio de la fuente.</target>
        </trans-unit>
        <trans-unit id="de8398976a760845a7849338955a9624333ab515" translate="yes" xml:space="preserve">
          <source>If the starting point is specified as &lt;code&gt;ref@{Nth}&lt;/code&gt;, show the index format.</source>
          <target state="translated">Si el punto de partida se especifica como &lt;code&gt;ref@{Nth}&lt;/code&gt; , muestre el formato de &amp;iacute;ndice.</target>
        </trans-unit>
        <trans-unit id="6a2386c7d64f544644194a06f1f15e00500df35a" translate="yes" xml:space="preserve">
          <source>If the starting point was specified as &lt;code&gt;ref@{now}&lt;/code&gt;, show the timestamp format.</source>
          <target state="translated">Si el punto de partida se especific&amp;oacute; como &lt;code&gt;ref@{now}&lt;/code&gt; , muestre el formato de marca de tiempo.</target>
        </trans-unit>
        <trans-unit id="a401b7c4a3b36e61e5b713fb185191570664ec06" translate="yes" xml:space="preserve">
          <source>If the submodule has never been initialized, this is the only place where submodule configuration is found. It serves as the last fallback to specify where to obtain the submodule from.</source>
          <target state="translated">Si el submódulo nunca ha sido inicializado,éste es el único lugar donde se encuentra la configuración del submódulo.Sirve como la última alternativa para especificar de dónde obtener el submódulo.</target>
        </trans-unit>
        <trans-unit id="c93d30e9eb4c6197dacc1ad5f6b79e20616e783c" translate="yes" xml:space="preserve">
          <source>If the submodule is not yet initialized, and you just want to use the setting as stored in &lt;code&gt;.gitmodules&lt;/code&gt;, you can automatically initialize the submodule with the &lt;code&gt;--init&lt;/code&gt; option.</source>
          <target state="translated">Si el subm&amp;oacute;dulo a&amp;uacute;n no se ha inicializado y solo desea utilizar la configuraci&amp;oacute;n almacenada en &lt;code&gt;.gitmodules&lt;/code&gt; , puede inicializar autom&amp;aacute;ticamente el subm&amp;oacute;dulo con la opci&amp;oacute;n &lt;code&gt;--init&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="02845d91bbeb482c77721be199fb493e9af0747b" translate="yes" xml:space="preserve">
          <source>If the submodule is not yet initialized, then the configuration inside the submodule does not exist yet, so where to obtain the submodule from is configured here for example.</source>
          <target state="translated">Si el submódulo no está todavía inicializado,entonces la configuración dentro del submódulo no existe todavía,por lo que el lugar de donde obtener el submódulo se configura aquí por ejemplo.</target>
        </trans-unit>
        <trans-unit id="ae19e2f586d76eb404950c906a0e28fc48bd4144" translate="yes" xml:space="preserve">
          <source>If the target branch in refs/remotes/p4-unshelved already exists, the old one will be renamed.</source>
          <target state="translated">Si la rama del objetivo en refs/remots/p4-unknown ya existe,la antigua será renombrada.</target>
        </trans-unit>
        <trans-unit id="2f7883dbe6de00b83ac31c035cb47ace7f18b215" translate="yes" xml:space="preserve">
          <source>If the timestamp order of different files cross the revision order within the commit matching time window the order of commits may be wrong.</source>
          <target state="translated">Si el orden de la marca de tiempo de diferentes ficheros se cruza con el orden de revisión dentro de la ventana de tiempo de coincidencia de confirmación,el orden de las confirmaciones puede ser erróneo.</target>
        </trans-unit>
        <trans-unit id="9e02bc5f839968fa2bd55c9715c548322d410f70" translate="yes" xml:space="preserve">
          <source>If the update is done via merge, the submodule conflicts are resolved and checked out.</source>
          <target state="translated">Si la actualización se hace mediante fusión,los conflictos de submódulos se resuelven y se comprueban.</target>
        </trans-unit>
        <trans-unit id="e429444552f2f76afd93b7eab781098fd53d76ab" translate="yes" xml:space="preserve">
          <source>If the upstream branch already contains a change you have made (e.g., because you mailed a patch which was applied upstream), then that commit will be skipped. For example, running &lt;code&gt;git rebase master&lt;/code&gt; on the following history (in which &lt;code&gt;A'&lt;/code&gt; and &lt;code&gt;A&lt;/code&gt; introduce the same set of changes, but have different committer information):</source>
          <target state="translated">Si la rama ascendente ya contiene un cambio que ha realizado (por ejemplo, porque envi&amp;oacute; por correo un parche que se aplic&amp;oacute; en sentido ascendente), se omitir&amp;aacute; esa confirmaci&amp;oacute;n. Por ejemplo, ejecutar &lt;code&gt;git rebase master&lt;/code&gt; en el siguiente historial (en el que &lt;code&gt;A'&lt;/code&gt; y &lt;code&gt;A&lt;/code&gt; introducen el mismo conjunto de cambios, pero tienen informaci&amp;oacute;n de confirmaci&amp;oacute;n diferente):</target>
        </trans-unit>
        <trans-unit id="8dd2ebfbc7db6f2a970a9204f7e4fecacb05b440" translate="yes" xml:space="preserve">
          <source>If the user is driving it, then at each step of the search, the user will have to test the current commit and say if it is &quot;good&quot; or &quot;bad&quot; using the &quot;git bisect good&quot; or &quot;git bisect bad&quot; commands respectively that have been described above. For example:</source>
          <target state="translated">Si el usuario lo está conduciendo,entonces en cada paso de la búsqueda,el usuario tendrá que probar la confirmación actual y decir si es &quot;buena&quot; o &quot;mala&quot; utilizando los comandos &quot;git bisect good&quot; o &quot;git bisect bad&quot; respectivamente que se han descrito anteriormente.Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="6929af54c2109d01f0c27eda6b64b41906b00393" translate="yes" xml:space="preserve">
          <source>If the user provides a --tag-name-filter that maps multiple tags to the same name, no warning or error is provided; git-filter-branch simply overwrites each tag in some undocumented pre-defined order resulting in only one tag at the end. (A git-filter-branch regression test requires this surprising behavior.)</source>
          <target state="translated">Si el usuario proporciona un filtro --tag-nombre-que asigna múltiples etiquetas al mismo nombre,no se proporciona ninguna advertencia o error;la rama del filtro git simplemente sobrescribe cada etiqueta en algún orden predefinido no documentado,lo que resulta en una sola etiqueta al final.(Una prueba de regresión del filtro git-rama requiere este sorprendente comportamiento).</target>
        </trans-unit>
        <trans-unit id="115afcefe8deea6713a6376b9b3612622ce5ff41" translate="yes" xml:space="preserve">
          <source>If the user running &lt;code&gt;git p4 submit&lt;/code&gt; does not exist in the p4 user map, &lt;code&gt;git p4&lt;/code&gt; exits. This option can be used to force submission regardless.</source>
          <target state="translated">Si el usuario que ejecuta &lt;code&gt;git p4 submit&lt;/code&gt; no existe en el mapa de usuario p4, &lt;code&gt;git p4&lt;/code&gt; sale. Esta opci&amp;oacute;n se puede utilizar para forzar la presentaci&amp;oacute;n independientemente.</target>
        </trans-unit>
        <trans-unit id="4ce7fbc3c51757d8b6052ea0a42e4807120e305f" translate="yes" xml:space="preserve">
          <source>If the value is boolean, turns on or off pagination of the output of a particular Git subcommand when writing to a tty. Otherwise, turns on pagination for the subcommand using the pager specified by the value of &lt;code&gt;pager.&amp;lt;cmd&amp;gt;&lt;/code&gt;. If &lt;code&gt;--paginate&lt;/code&gt; or &lt;code&gt;--no-pager&lt;/code&gt; is specified on the command line, it takes precedence over this option. To disable pagination for all commands, set &lt;code&gt;core.pager&lt;/code&gt; or &lt;code&gt;GIT_PAGER&lt;/code&gt; to &lt;code&gt;cat&lt;/code&gt;.</source>
          <target state="translated">Si el valor es booleano, activa o desactiva la paginaci&amp;oacute;n de la salida de un subcomando de Git en particular al escribir en un tty. De lo contrario, activa la paginaci&amp;oacute;n para el subcomando usando el paginador especificado por el valor de &lt;code&gt;pager.&amp;lt;cmd&amp;gt;&lt;/code&gt; . Si se &lt;code&gt;--no-pager&lt;/code&gt; &lt;code&gt;--paginate&lt;/code&gt; o --no-pager en la l&amp;iacute;nea de comando, tiene prioridad sobre esta opci&amp;oacute;n. Para deshabilitar la paginaci&amp;oacute;n para todos los comandos, configure &lt;code&gt;core.pager&lt;/code&gt; o &lt;code&gt;GIT_PAGER&lt;/code&gt; en &lt;code&gt;cat&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d03e93ea222dab8f641cb8201b06b8ce56eb4397" translate="yes" xml:space="preserve">
          <source>If the variable is set to an integer value greater than 2 and lower than 10 (strictly) then Git will interpret this value as an open file descriptor and will try to write the trace messages into this file descriptor.</source>
          <target state="translated">Si la variable se establece en un valor entero superior a 2 e inferior a 10 (estrictamente),entonces Git interpretará este valor como un descriptor de archivo abierto e intentará escribir los mensajes de rastreo en este descriptor de archivo.</target>
        </trans-unit>
        <trans-unit id="68e78b3aa184c7970e4ea72bcfa1c35c1841182d" translate="yes" xml:space="preserve">
          <source>If there are a large number of similarly-named remote repositories and you want to use a different format for them (such that the URLs you use will be rewritten into URLs that work), you can create a configuration section of the form:</source>
          <target state="translated">Si hay un gran número de depósitos remotos con nombres similares y desea utilizar un formato diferente para ellos (de modo que las direcciones URL que utilice se reescriban en direcciones URL que funcionen),puede crear una sección de configuración del formulario:</target>
        </trans-unit>
        <trans-unit id="1add756b76a7c17e78b77f722a60e35881bd1c18" translate="yes" xml:space="preserve">
          <source>If there are conflicts, the user should edit the result and delete one of the alternatives. When &lt;code&gt;--ours&lt;/code&gt;, &lt;code&gt;--theirs&lt;/code&gt;, or &lt;code&gt;--union&lt;/code&gt; option is in effect, however, these conflicts are resolved favouring lines from &lt;code&gt;&amp;lt;current-file&amp;gt;&lt;/code&gt;, lines from &lt;code&gt;&amp;lt;other-file&amp;gt;&lt;/code&gt;, or lines from both respectively. The length of the conflict markers can be given with the &lt;code&gt;--marker-size&lt;/code&gt; option.</source>
          <target state="translated">Si hay conflictos, el usuario debe editar el resultado y eliminar una de las alternativas. Cuando &lt;code&gt;--ours&lt;/code&gt; , &lt;code&gt;--theirs&lt;/code&gt; o &lt;code&gt;--union&lt;/code&gt; opci&amp;oacute;n est&amp;aacute; activada, sin embargo, estos conflictos se resuelven a favor de l&amp;iacute;neas &lt;code&gt;&amp;lt;current-file&amp;gt;&lt;/code&gt; , las l&amp;iacute;neas de &lt;code&gt;&amp;lt;other-file&amp;gt;&lt;/code&gt; , o l&amp;iacute;neas de ambos, respectivamente. La longitud de los marcadores de conflicto se puede dar con la opci&amp;oacute;n &lt;code&gt;--marker-size&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="86762a48683c371a4cc7c3de1cb012419562ae87" translate="yes" xml:space="preserve">
          <source>If there are multiple branches, doing &lt;code&gt;git p4 sync&lt;/code&gt; will automatically use the &quot;BRANCH DETECTION&quot; algorithm to try to partition new changes into the right branch. This can be overridden with the &lt;code&gt;--branch&lt;/code&gt; option to specify just a single branch to update.</source>
          <target state="translated">Si hay varias ramas, al hacer &lt;code&gt;git p4 sync&lt;/code&gt; se usar&amp;aacute; autom&amp;aacute;ticamente el algoritmo &quot;DETECCI&amp;Oacute;N DE SUCURSALES&quot; para intentar dividir los nuevos cambios en la rama derecha. Esto se puede anular con la opci&amp;oacute;n &lt;code&gt;--branch&lt;/code&gt; para especificar solo una rama para actualizar.</target>
        </trans-unit>
        <trans-unit id="618accc0d1d550b6b8ec069f55b5b09af649e985" translate="yes" xml:space="preserve">
          <source>If there are multiple instances of the &lt;code&gt;credential.helper&lt;/code&gt; configuration variable, each helper will be tried in turn, and may provide a username, password, or nothing. Once Git has acquired both a username and a password, no more helpers will be tried.</source>
          <target state="translated">Si hay varias instancias de la variable de configuraci&amp;oacute;n &lt;code&gt;credential.helper&lt;/code&gt; , cada ayudante se probar&amp;aacute; a su vez y puede proporcionar un nombre de usuario, contrase&amp;ntilde;a o nada. Una vez que Git haya adquirido un nombre de usuario y una contrase&amp;ntilde;a, no se probar&amp;aacute;n m&amp;aacute;s ayudantes.</target>
        </trans-unit>
        <trans-unit id="af9d46d5bd3ac828de63ddb9d4effe59327aaa5a" translate="yes" xml:space="preserve">
          <source>If there are other repositories that you also use frequently, you can create similar configuration options to save typing; for example,</source>
          <target state="translated">Si hay otros repositorios que también utiliza con frecuencia,puede crear opciones de configuración similares para guardar la escritura,por ejemplo,</target>
        </trans-unit>
        <trans-unit id="591918eb06b2723ac86bd0a089445e6e294cf8c5" translate="yes" xml:space="preserve">
          <source>If there exist packfiles in the pack directory not registered in the MIDX, then those packfiles are loaded into the &lt;code&gt;packed_git&lt;/code&gt; list and &lt;code&gt;packed_git_mru&lt;/code&gt; cache.</source>
          <target state="translated">Si existen packfiles en el directorio de paquete no registrada en el MIDX, entonces esos packfiles se cargan en el &lt;code&gt;packed_git&lt;/code&gt; lista y &lt;code&gt;packed_git_mru&lt;/code&gt; cach&amp;eacute;.</target>
        </trans-unit>
        <trans-unit id="03e18f44da1b610f354ea9baeb478307ccf925f8" translate="yes" xml:space="preserve">
          <source>If there is a separator at the beginning or middle (or both) of the pattern, then the pattern is relative to the directory level of the particular &lt;code&gt;.gitignore&lt;/code&gt; file itself. Otherwise the pattern may also match at any level below the &lt;code&gt;.gitignore&lt;/code&gt; level.</source>
          <target state="translated">Si hay un separador al principio o en el medio (o ambos) del patr&amp;oacute;n, entonces el patr&amp;oacute;n es relativo al nivel de directorio del archivo &lt;code&gt;.gitignore&lt;/code&gt; en particular . De lo contrario, el patr&amp;oacute;n tambi&amp;eacute;n puede coincidir en cualquier nivel por debajo del nivel &lt;code&gt;.gitignore&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="73c5dbd4863767291eb0584c1211aa56213f1838" translate="yes" xml:space="preserve">
          <source>If there is a separator at the end of the pattern then the pattern will only match directories, otherwise the pattern can match both files and directories.</source>
          <target state="translated">Si hay un separador al final del patrón,entonces el patrón sólo coincidirá con los directorios,de lo contrario el patrón puede coincidir tanto con los archivos como con los directorios.</target>
        </trans-unit>
        <trans-unit id="7e5e3b6d9186f0b0d9ca9ea83f70b7fee637fea2" translate="yes" xml:space="preserve">
          <source>If there is a separator, then the key will be used instead of both the &amp;lt;token&amp;gt; and the default separator when adding the trailer.</source>
          <target state="translated">Si hay un separador, se usar&amp;aacute; la clave en lugar del &amp;lt;token&amp;gt; y el separador predeterminado al agregar el avance.</target>
        </trans-unit>
        <trans-unit id="110096af5aaaf08aca8aad30cdfe6c3abec7eaf2" translate="yes" xml:space="preserve">
          <source>If there is no file or subtree at that path, &lt;code&gt;git fast-import&lt;/code&gt; will instead report</source>
          <target state="translated">Si no hay ning&amp;uacute;n archivo o sub&amp;aacute;rbol en esa ruta, &lt;code&gt;git fast-import&lt;/code&gt; informar&amp;aacute;</target>
        </trans-unit>
        <trans-unit id="1db0218c6ea3cc08d2d45a6158a3df08d714812b" translate="yes" xml:space="preserve">
          <source>If there is no parameter given by the user, use &lt;code&gt;&amp;lt;arg&amp;gt;&lt;/code&gt; instead.</source>
          <target state="translated">Si no hay ning&amp;uacute;n par&amp;aacute;metro proporcionado por el usuario, utilice &lt;code&gt;&amp;lt;arg&amp;gt;&lt;/code&gt; en su lugar.</target>
        </trans-unit>
        <trans-unit id="08079a827cded7daddc3f36e473048d3482101ec" translate="yes" xml:space="preserve">
          <source>If there is only one &amp;lt;tree-ish&amp;gt; given, the commit is compared with its parents (see --stdin below).</source>
          <target state="translated">Si solo se proporciona un &amp;lt;tree-ish&amp;gt;, la confirmaci&amp;oacute;n se compara con sus padres (consulte --stdin a continuaci&amp;oacute;n).</target>
        </trans-unit>
        <trans-unit id="f3b2c7580e6489ea5e91cbe02a9f524e00ba7a5a" translate="yes" xml:space="preserve">
          <source>If there were more commits on the &lt;em&gt;master&lt;/em&gt; branch after the merge, the merge commit itself would not be shown by &lt;em&gt;git show-branch&lt;/em&gt; by default. You would need to provide &lt;code&gt;--sparse&lt;/code&gt; option to make the merge commit visible in this case.</source>
          <target state="translated">Si hubiera m&amp;aacute;s confirmaciones en la rama &lt;em&gt;maestra&lt;/em&gt; despu&amp;eacute;s de la fusi&amp;oacute;n, &lt;em&gt;git show-branch&lt;/em&gt; no mostrar&amp;iacute;a la confirmaci&amp;oacute;n de fusi&amp;oacute;n en s&amp;iacute; de forma predeterminada. &lt;code&gt;--sparse&lt;/code&gt; proporcionar la opci&amp;oacute;n --sparse para que la confirmaci&amp;oacute;n de fusi&amp;oacute;n sea visible en este caso.</target>
        </trans-unit>
        <trans-unit id="0ab64f384f8b476963c3f64ac176ef68ee6de9f2" translate="yes" xml:space="preserve">
          <source>If there were uncommitted worktree changes present when the merge started, &lt;code&gt;git merge --abort&lt;/code&gt; will in some cases be unable to reconstruct these changes. It is therefore recommended to always commit or stash your changes before running &lt;code&gt;git merge&lt;/code&gt;.</source>
          <target state="translated">Si hab&amp;iacute;a cambios en el &amp;aacute;rbol de trabajo no confirmados cuando comenz&amp;oacute; la fusi&amp;oacute;n, &lt;code&gt;git merge --abort&lt;/code&gt; no podr&amp;aacute; en algunos casos reconstruir estos cambios. Por lo tanto, se recomienda confirmar o guardar siempre los cambios antes de ejecutar &lt;code&gt;git merge&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="967d5740c3c32e83504fdb7318f7465d81e3c6cb" translate="yes" xml:space="preserve">
          <source>If this atom is used in the output string, input lines are split at the first whitespace boundary. All characters before that whitespace are considered to be the object name; characters after that first run of whitespace (i.e., the &quot;rest&quot; of the line) are output in place of the &lt;code&gt;%(rest)&lt;/code&gt; atom.</source>
          <target state="translated">Si este &amp;aacute;tomo se usa en la cadena de salida, las l&amp;iacute;neas de entrada se dividen en el primer l&amp;iacute;mite de espacio en blanco. Todos los caracteres antes de ese espacio en blanco se consideran el nombre del objeto; los caracteres despu&amp;eacute;s de esa primera ejecuci&amp;oacute;n de espacios en blanco (es decir, el &quot;resto&quot; de la l&amp;iacute;nea) se generan en lugar del &amp;aacute;tomo &lt;code&gt;%(rest)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4b6208e01f164e5f8b5cfeffb592a9b059f78c4e" translate="yes" xml:space="preserve">
          <source>If this attribute is not set or has an invalid value, the value of the &lt;code&gt;gui.encoding&lt;/code&gt; configuration variable is used instead (See &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;).</source>
          <target state="translated">Si este atributo no est&amp;aacute; establecido o tiene un valor no v&amp;aacute;lido, se usa el valor de la variable de configuraci&amp;oacute;n &lt;code&gt;gui.encoding&lt;/code&gt; en su lugar (Ver &lt;a href=&quot;git-config&quot;&gt;git-config [1]&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="d21856ae35021bd75d04c1b344656e77c3e714d8" translate="yes" xml:space="preserve">
          <source>If this config variable is set, diff generation is not performed using the internal diff machinery, but using the given command. Can be overridden with the &amp;lsquo;GIT_EXTERNAL_DIFF&amp;rsquo; environment variable. The command is called with parameters as described under &quot;git Diffs&quot; in &lt;a href=&quot;git&quot;&gt;git[1]&lt;/a&gt;. Note: if you want to use an external diff program only on a subset of your files, you might want to use &lt;a href=&quot;gitattributes&quot;&gt;gitattributes[5]&lt;/a&gt; instead.</source>
          <target state="translated">Si se establece esta variable de configuraci&amp;oacute;n, la generaci&amp;oacute;n de diferencias no se realiza utilizando la maquinaria de diferencias interna, sino utilizando el comando dado. Se puede anular con la variable de entorno 'GIT_EXTERNAL_DIFF'. El comando se llama con los par&amp;aacute;metros descritos en &quot;git Diffs&quot; en &lt;a href=&quot;git&quot;&gt;git [1]&lt;/a&gt; . Nota: si desea usar un programa de diferencias externo solo en un subconjunto de sus archivos, puede usar &lt;a href=&quot;gitattributes&quot;&gt;gitattributes [5] en su&lt;/a&gt; lugar.</target>
        </trans-unit>
        <trans-unit id="c67dbd9b5b9d0c250d594cf0e82ea55d38dac133" translate="yes" xml:space="preserve">
          <source>If this environment variable is set to &quot;1&quot;, then commands such as &lt;code&gt;git blame&lt;/code&gt; (in incremental mode), &lt;code&gt;git rev-list&lt;/code&gt;, &lt;code&gt;git log&lt;/code&gt;, &lt;code&gt;git check-attr&lt;/code&gt; and &lt;code&gt;git check-ignore&lt;/code&gt; will force a flush of the output stream after each record have been flushed. If this variable is set to &quot;0&quot;, the output of these commands will be done using completely buffered I/O. If this environment variable is not set, Git will choose buffered or record-oriented flushing based on whether stdout appears to be redirected to a file or not.</source>
          <target state="translated">Si esta variable de entorno se establece en &quot;1&quot;, los comandos como &lt;code&gt;git blame&lt;/code&gt; (en modo incremental), &lt;code&gt;git rev-list&lt;/code&gt; , &lt;code&gt;git log&lt;/code&gt; , &lt;code&gt;git check-attr&lt;/code&gt; y &lt;code&gt;git check-ignore&lt;/code&gt; forzar&amp;aacute;n un vaciado del flujo de salida despu&amp;eacute;s de cada registro se han vaciado. Si esta variable se establece en &quot;0&quot;, la salida de estos comandos se realizar&amp;aacute; utilizando E / S con b&amp;uacute;fer completo. Si esta variable de entorno no est&amp;aacute; configurada, Git elegir&amp;aacute; el vaciado en b&amp;uacute;fer u orientado a registros en funci&amp;oacute;n de si stdout parece redirigirse a un archivo o no.</target>
        </trans-unit>
        <trans-unit id="3c510f35b5c52541d7f8ff48371ed312cadc959c" translate="yes" xml:space="preserve">
          <source>If this environment variable is set to &lt;code&gt;0&lt;/code&gt;, git will not prompt on the terminal (e.g., when asking for HTTP authentication).</source>
          <target state="translated">Si esta variable de entorno se establece en &lt;code&gt;0&lt;/code&gt; , git no lo solicitar&amp;aacute; en la terminal (por ejemplo, al solicitar la autenticaci&amp;oacute;n HTTP).</target>
        </trans-unit>
        <trans-unit id="f0e0816f1f387058c1f2d75f7ff32a01f9295472" translate="yes" xml:space="preserve">
          <source>If this environment variable is set, it overrides Git&amp;rsquo;s autodetection whether &lt;code&gt;GIT_SSH&lt;/code&gt;/&lt;code&gt;GIT_SSH_COMMAND&lt;/code&gt;/&lt;code&gt;core.sshCommand&lt;/code&gt; refer to OpenSSH, plink or tortoiseplink. This variable overrides the config setting &lt;code&gt;ssh.variant&lt;/code&gt; that serves the same purpose.</source>
          <target state="translated">Si se establece esta variable de entorno, anula la detecci&amp;oacute;n autom&amp;aacute;tica de Git si &lt;code&gt;GIT_SSH&lt;/code&gt; / &lt;code&gt;GIT_SSH_COMMAND&lt;/code&gt; / &lt;code&gt;core.sshCommand&lt;/code&gt; se refiere a OpenSSH, plink o tortoiseplink. Esta variable anula la configuraci&amp;oacute;n de configuraci&amp;oacute;n &lt;code&gt;ssh.variant&lt;/code&gt; que tiene el mismo prop&amp;oacute;sito.</target>
        </trans-unit>
        <trans-unit id="81f782a4dbe0e346a4da365c1a6b3a9cbeb4a6e2" translate="yes" xml:space="preserve">
          <source>If this environment variable is set, then Git commands which need to acquire passwords or passphrases (e.g. for HTTP or IMAP authentication) will call this program with a suitable prompt as command-line argument and read the password from its STDOUT. See also the &lt;code&gt;core.askPass&lt;/code&gt; option in &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;.</source>
          <target state="translated">Si se establece esta variable de entorno, los comandos de Git que necesitan adquirir contrase&amp;ntilde;as o frases de contrase&amp;ntilde;a (por ejemplo, para autenticaci&amp;oacute;n HTTP o IMAP) llamar&amp;aacute;n a este programa con un indicador adecuado como argumento de l&amp;iacute;nea de comandos y leer&amp;aacute;n la contrase&amp;ntilde;a de su STDOUT. Consulte tambi&amp;eacute;n la opci&amp;oacute;n &lt;code&gt;core.askPass&lt;/code&gt; en &lt;a href=&quot;git-config&quot;&gt;git-config [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="372352ecb2d8c55afffa99890c0eb497f2b1382d" translate="yes" xml:space="preserve">
          <source>If this feature is enabled, gitweb considers projects in subdirectories of project root (basename) to be forks of existing projects. For each project &lt;code&gt;$projname.git&lt;/code&gt;, projects in the &lt;code&gt;$projname/&lt;/code&gt; directory and its subdirectories will not be shown in the main projects list. Instead, a '+' mark is shown next to &lt;code&gt;$projname&lt;/code&gt;, which links to a &quot;forks&quot; view that lists all the forks (all projects in &lt;code&gt;$projname/&lt;/code&gt; subdirectory). Additionally a &quot;forks&quot; view for a project is linked from project summary page.</source>
          <target state="translated">Si esta funci&amp;oacute;n est&amp;aacute; habilitada, gitweb considera que los proyectos de los subdirectorios de la ra&amp;iacute;z del proyecto (nombre base) son bifurcaciones de proyectos existentes. Para cada proyecto &lt;code&gt;$projname.git&lt;/code&gt; , los proyectos en el directorio &lt;code&gt;$projname/&lt;/code&gt; y sus subdirectorios no se mostrar&amp;aacute;n en la lista principal de proyectos. En su lugar, se muestra una marca '+' junto a &lt;code&gt;$projname&lt;/code&gt; , que enlaza con una vista de &quot;bifurcaciones&quot; que enumera todas las bifurcaciones (todos los proyectos en el subdirectorio &lt;code&gt;$projname/&lt;/code&gt; ). Adem&amp;aacute;s, una vista de &quot;bifurcaciones&quot; para un proyecto est&amp;aacute; vinculada desde la p&amp;aacute;gina de resumen del proyecto.</target>
        </trans-unit>
        <trans-unit id="728d51c620f0870eff1b0d62261ab6934369adf2" translate="yes" xml:space="preserve">
          <source>If this field has a true value then the given feature is overridable, which means that it can be configured (or enabled/disabled) on a per-repository basis.</source>
          <target state="translated">Si este campo tiene un valor verdadero,entonces la característica dada es anulable,lo que significa que puede ser configurada (o activada/desactivada)por cada depósito.</target>
        </trans-unit>
        <trans-unit id="582826e66f53339e6d7b4dc6a0d6a2edeb312487" translate="yes" xml:space="preserve">
          <source>If this file exists, $GIT_COMMON_DIR (see &lt;a href=&quot;git&quot;&gt;git[1]&lt;/a&gt;) will be set to the path specified in this file if it is not explicitly set. If the specified path is relative, it is relative to $GIT_DIR. The repository with commondir is incomplete without the repository pointed by &quot;commondir&quot;.</source>
          <target state="translated">Si este archivo existe, $ GIT_COMMON_DIR (ver &lt;a href=&quot;git&quot;&gt;git [1]&lt;/a&gt; ) se establecer&amp;aacute; en la ruta especificada en este archivo si no se establece expl&amp;iacute;citamente. Si la ruta especificada es relativa, es relativa a $ GIT_DIR. El repositorio con commondir est&amp;aacute; incompleto sin el repositorio apuntado por &quot;commondir&quot;.</target>
        </trans-unit>
        <trans-unit id="1e44552a87aaa0e818702548719ba07ebc0f8696" translate="yes" xml:space="preserve">
          <source>If this file exists, the linked working tree may be on a portable device and not available. The presence of this file prevents &lt;code&gt;worktrees/&amp;lt;id&amp;gt;&lt;/code&gt; from being pruned either automatically or manually by &lt;code&gt;git worktree prune&lt;/code&gt;. The file may contain a string explaining why the repository is locked.</source>
          <target state="translated">Si este archivo existe, el &amp;aacute;rbol de trabajo vinculado puede estar en un dispositivo port&amp;aacute;til y no disponible. La presencia de este previene de archivos &lt;code&gt;worktrees/&amp;lt;id&amp;gt;&lt;/code&gt; de ser podados de forma autom&amp;aacute;tica o manualmente por &lt;code&gt;git worktree prune&lt;/code&gt; . El archivo puede contener una cadena que explique por qu&amp;eacute; el repositorio est&amp;aacute; bloqueado.</target>
        </trans-unit>
        <trans-unit id="6849302064fdf0db00fe326dd1a92636c39a6d43" translate="yes" xml:space="preserve">
          <source>If this hook exits with a non-zero status, &lt;code&gt;git push&lt;/code&gt; will abort without pushing anything. Information about why the push is rejected may be sent to the user by writing to standard error.</source>
          <target state="translated">Si este gancho sale con un estado distinto de cero, &lt;code&gt;git push&lt;/code&gt; abortar&amp;aacute; sin presionar nada. La informaci&amp;oacute;n sobre por qu&amp;eacute; se rechaza la inserci&amp;oacute;n puede enviarse al usuario escribiendo en error est&amp;aacute;ndar.</target>
        </trans-unit>
        <trans-unit id="59816b743d970f13629ec48afd23da6545a4a7c5" translate="yes" xml:space="preserve">
          <source>If this is a problem for you, you can do a rebase instead, rebasing the branch with the revert onto the other branch. A rebase in this scenario will revert the change, because a rebase applies each individual commit, including the revert. Note that rebases rewrite history, so you should avoid rebasing published branches unless you&amp;rsquo;re sure you&amp;rsquo;re comfortable with that. See the NOTES section in &lt;a href=&quot;git-rebase&quot;&gt;git-rebase[1]&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e422a5c19027398b3db2e62a2dfa8c2a2031ac5" translate="yes" xml:space="preserve">
          <source>If this is reinitialization, the repository will be moved to the specified path.</source>
          <target state="translated">Si se trata de una reinicialización,el repositorio se moverá a la ruta especificada.</target>
        </trans-unit>
        <trans-unit id="ae49e42c53a829e13a69befb7e448cbf7a3ab5aa" translate="yes" xml:space="preserve">
          <source>If this is set to code reference, it will be run once for each request. You can set parts of configuration that change per session this way. For example, one might use the following code in a gitweb configuration file</source>
          <target state="translated">Si se establece como referencia de código,se ejecutará una vez por cada solicitud.Puede establecer partes de la configuración que cambien por sesión de esta manera.Por ejemplo,se podría utilizar el siguiente código en un archivo de configuración de gitweb</target>
        </trans-unit>
        <trans-unit id="2ecaf4f8ea5745cd5a451b94ab44dd28ff120dab" translate="yes" xml:space="preserve">
          <source>If this is set to true, the &lt;code&gt;git stash show&lt;/code&gt; command without an option will show diffstat of the stash entry. Defaults to true. See description of &lt;code&gt;show&lt;/code&gt; command in &lt;a href=&quot;git-stash&quot;&gt;git-stash[1]&lt;/a&gt;.</source>
          <target state="translated">Si se establece en verdadero, el comando &lt;code&gt;git stash show&lt;/code&gt; sin una opci&amp;oacute;n mostrar&amp;aacute; diffstat de la entrada de alijo. Por defecto es verdadero. Consulte la descripci&amp;oacute;n del comando &lt;code&gt;show&lt;/code&gt; en &lt;a href=&quot;git-stash&quot;&gt;git-stash [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ee4998fa7e703962f55f3297f84fc3b952ae4a7f" translate="yes" xml:space="preserve">
          <source>If this is set to true, the &lt;code&gt;git stash show&lt;/code&gt; command without an option will show the stash entry in patch form. Defaults to false. See description of &lt;code&gt;show&lt;/code&gt; command in &lt;a href=&quot;git-stash&quot;&gt;git-stash[1]&lt;/a&gt;.</source>
          <target state="translated">Si se establece en verdadero, el comando &lt;code&gt;git stash show&lt;/code&gt; sin una opci&amp;oacute;n mostrar&amp;aacute; la entrada del alijo en forma de parche. El valor predeterminado es falso. Consulte la descripci&amp;oacute;n del comando &lt;code&gt;show&lt;/code&gt; en &lt;a href=&quot;git-stash&quot;&gt;git-stash [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7e98f4c395c1b49b1de4c0111925dea856a6d079" translate="yes" xml:space="preserve">
          <source>If this is set, add emails found in Signed-off-by: or Cc: lines to the cc list. Default is the value of &lt;code&gt;sendemail.signedoffbycc&lt;/code&gt; configuration value; if that is unspecified, default to --signed-off-by-cc.</source>
          <target state="translated">Si est&amp;aacute; configurado, agregue los correos electr&amp;oacute;nicos que se encuentran en las l&amp;iacute;neas Firmado por: o Cc: a la lista de cc. El valor predeterminado es el valor de configuraci&amp;oacute;n &lt;code&gt;sendemail.signedoffbycc&lt;/code&gt; ; si no se especifica, el valor predeterminado es --signed-off-by-cc.</target>
        </trans-unit>
        <trans-unit id="196233ff4443211f5e0668c5723fedda5c2f6715" translate="yes" xml:space="preserve">
          <source>If this is set, add emails found in the &lt;code&gt;Signed-off-by&lt;/code&gt; trailer or Cc: lines to the cc list. Default is the value of &lt;code&gt;sendemail.signedoffbycc&lt;/code&gt; configuration value; if that is unspecified, default to --signed-off-by-cc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cf7f20765eaeb225b14832d24072d63179e161f" translate="yes" xml:space="preserve">
          <source>If this is set, do not add the From: address to the cc: list. Default is the value of &lt;code&gt;sendemail.suppressFrom&lt;/code&gt; configuration value; if that is unspecified, default to --no-suppress-from.</source>
          <target state="translated">Si est&amp;aacute; configurado, no agregue la direcci&amp;oacute;n De: a la lista cc :. El valor predeterminado es el valor de configuraci&amp;oacute;n &lt;code&gt;sendemail.suppressFrom&lt;/code&gt; ; si no se especifica, el valor predeterminado es --no-suppress-from.</target>
        </trans-unit>
        <trans-unit id="048d4528d0951754849879e2b4b5802f6461c9fb" translate="yes" xml:space="preserve">
          <source>If this is set, each email will be sent as a reply to the previous email sent. If disabled with &quot;--no-chain-reply-to&quot;, all emails after the first will be sent as replies to the first email sent. When using this, it is recommended that the first file given be an overview of the entire patch series. Disabled by default, but the &lt;code&gt;sendemail.chainReplyTo&lt;/code&gt; configuration variable can be used to enable it.</source>
          <target state="translated">Si se configura, cada correo electr&amp;oacute;nico se enviar&amp;aacute; como respuesta al correo electr&amp;oacute;nico enviado anteriormente. Si est&amp;aacute; desactivado con &quot;--no-chain-reply-to&quot;, todos los correos electr&amp;oacute;nicos posteriores al primero se enviar&amp;aacute;n como respuestas al primer correo electr&amp;oacute;nico enviado. Al usar esto, se recomienda que el primer archivo proporcionado sea una descripci&amp;oacute;n general de toda la serie de parches. Deshabilitado de forma predeterminada, pero la variable de configuraci&amp;oacute;n &lt;code&gt;sendemail.chainReplyTo&lt;/code&gt; se puede utilizar para habilitarlo.</target>
        </trans-unit>
        <trans-unit id="b4073ff276c4f44294d676470e6aaaeb5a46458f" translate="yes" xml:space="preserve">
          <source>If this is set, emails found in Cc: headers in the first patch of the series (typically the cover letter) are added to the cc list for each email set. Default is the value of &lt;code&gt;sendemail.cccover&lt;/code&gt; configuration value; if that is unspecified, default to --no-cc-cover.</source>
          <target state="translated">Si est&amp;aacute; configurado, los correos electr&amp;oacute;nicos que se encuentran en los encabezados CC: en el primer parche de la serie (generalmente la carta de presentaci&amp;oacute;n) se agregan a la lista de CC para cada grupo de correo electr&amp;oacute;nico. El valor predeterminado es el valor de configuraci&amp;oacute;n &lt;code&gt;sendemail.cccover&lt;/code&gt; ; si no se especifica, el valor predeterminado es --no-cc-cover.</target>
        </trans-unit>
        <trans-unit id="c3505cfc9a16fb3a406321b32681f1c27b3f4828" translate="yes" xml:space="preserve">
          <source>If this is set, emails found in To: headers in the first patch of the series (typically the cover letter) are added to the to list for each email set. Default is the value of &lt;code&gt;sendemail.tocover&lt;/code&gt; configuration value; if that is unspecified, default to --no-to-cover.</source>
          <target state="translated">Si est&amp;aacute; configurado, los correos electr&amp;oacute;nicos que se encuentran en los encabezados Para: en el primer parche de la serie (generalmente la carta de presentaci&amp;oacute;n) se agregan a la lista de destinatarios para cada conjunto de correo electr&amp;oacute;nico. El valor predeterminado es el valor de configuraci&amp;oacute;n &lt;code&gt;sendemail.tocover&lt;/code&gt; ; si no se especifica, el valor predeterminado es --no-to-cover.</target>
        </trans-unit>
        <trans-unit id="bd074611e2ce23fe3651c7c21615bc5d5c90b653" translate="yes" xml:space="preserve">
          <source>If this is set, the In-Reply-To and References headers will be added to each email sent. Whether each mail refers to the previous email (&lt;code&gt;deep&lt;/code&gt; threading per &lt;code&gt;git format-patch&lt;/code&gt; wording) or to the first email (&lt;code&gt;shallow&lt;/code&gt; threading) is governed by &quot;--[no-]chain-reply-to&quot;.</source>
          <target state="translated">Si se configura, los encabezados In-Reply-To y References se agregar&amp;aacute;n a cada correo electr&amp;oacute;nico enviado. Si cada correo se refiere al correo electr&amp;oacute;nico anterior ( subprocesos &lt;code&gt;deep&lt;/code&gt; por redacci&amp;oacute;n del &lt;code&gt;git format-patch&lt;/code&gt; ) o al primer correo electr&amp;oacute;nico ( subprocesos &lt;code&gt;shallow&lt;/code&gt; ) se rige por &quot;- [no-] cadena-respuesta-a&quot;.</target>
        </trans-unit>
        <trans-unit id="83fefd231faf2237df4d2ca57ddb91f5733dd174" translate="yes" xml:space="preserve">
          <source>If this option is also present in the submodules entry in .git/config of the superproject, the setting there will override the one found in .gitmodules.</source>
          <target state="translated">Si esta opción también está presente en la entrada de submódulos en .git/config del superproyecto,la configuración allí anulará la que se encuentra en .gitmodules.</target>
        </trans-unit>
        <trans-unit id="b576cec09f399abde10801d9e3b482a3974a7942" translate="yes" xml:space="preserve">
          <source>If this option is set, &lt;code&gt;upload-pack&lt;/code&gt; will support partial clone and partial fetch object filtering.</source>
          <target state="translated">Si se establece esta opci&amp;oacute;n, &lt;code&gt;upload-pack&lt;/code&gt; admitir&amp;aacute; la clonaci&amp;oacute;n parcial y el filtrado de objetos de recuperaci&amp;oacute;n parcial.</target>
        </trans-unit>
        <trans-unit id="46df2747ed059ec465747bf23f6d93b6698f2ce3" translate="yes" xml:space="preserve">
          <source>If this option is set, &lt;code&gt;upload-pack&lt;/code&gt; will support the &lt;code&gt;ref-in-want&lt;/code&gt; feature of the protocol version 2 &lt;code&gt;fetch&lt;/code&gt; command. This feature is intended for the benefit of load-balanced servers which may not have the same view of what OIDs their refs point to due to replication delay.</source>
          <target state="translated">Si esta opci&amp;oacute;n est&amp;aacute; configurada, &lt;code&gt;upload-pack&lt;/code&gt; admitir&amp;aacute; la funci&amp;oacute;n &lt;code&gt;ref-in-want&lt;/code&gt; del comando &lt;code&gt;fetch&lt;/code&gt; de la versi&amp;oacute;n 2 del protocolo . Esta funci&amp;oacute;n est&amp;aacute; destinada al beneficio de los servidores con equilibrio de carga que pueden no tener la misma vista de los OID a los que apuntan sus referencias debido al retraso de replicaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="3691063a71adef86ec77db2886b5e8b672228551" translate="yes" xml:space="preserve">
          <source>If this option is set, when &lt;code&gt;upload-pack&lt;/code&gt; would run &lt;code&gt;git pack-objects&lt;/code&gt; to create a packfile for a client, it will run this shell command instead. The &lt;code&gt;pack-objects&lt;/code&gt; command and arguments it &lt;code&gt;would&lt;/code&gt; have run (including the &lt;code&gt;git pack-objects&lt;/code&gt; at the beginning) are appended to the shell command. The stdin and stdout of the hook are treated as if &lt;code&gt;pack-objects&lt;/code&gt; itself was run. I.e., &lt;code&gt;upload-pack&lt;/code&gt; will feed input intended for &lt;code&gt;pack-objects&lt;/code&gt; to the hook, and expects a completed packfile on stdout.</source>
          <target state="translated">Si se establece esta opci&amp;oacute;n, cuando &lt;code&gt;upload-pack&lt;/code&gt; ejecutara &lt;code&gt;git pack-objects&lt;/code&gt; para crear un archivo de paquete para un cliente, en su lugar ejecutar&amp;aacute; este comando de shell. El comando &lt;code&gt;pack-objects&lt;/code&gt; y los argumentos que &lt;code&gt;would&lt;/code&gt; ejecutado (incluido el &lt;code&gt;git pack-objects&lt;/code&gt; al principio) se agregan al comando de shell. El stdin y stdout del gancho se tratan como si se ejecutara &lt;code&gt;pack-objects&lt;/code&gt; . Es decir, &lt;code&gt;upload-pack&lt;/code&gt; alimentar&amp;aacute; la entrada destinada a &lt;code&gt;pack-objects&lt;/code&gt; de paquete al gancho y espera un archivo de paquete completo en stdout.</target>
        </trans-unit>
        <trans-unit id="043d313af4e6bae8eb0dfe37d6ed595c4f6e4603" translate="yes" xml:space="preserve">
          <source>If this option is specified and &lt;code&gt;git svn&lt;/code&gt; encounters an SVN committer name that does not exist in the authors-file, &lt;code&gt;git svn&lt;/code&gt; will abort operation. The user will then have to add the appropriate entry. Re-running the previous &lt;code&gt;git svn&lt;/code&gt; command after the authors-file is modified should continue operation.</source>
          <target state="translated">Si se especifica esta opci&amp;oacute;n y &lt;code&gt;git svn&lt;/code&gt; encuentra un nombre de confirmador SVN que no existe en el archivo de autores, &lt;code&gt;git svn&lt;/code&gt; abortar&amp;aacute; la operaci&amp;oacute;n. A continuaci&amp;oacute;n, el usuario deber&amp;aacute; agregar la entrada correspondiente. Volver a ejecutar el comando &lt;code&gt;git svn&lt;/code&gt; anterior despu&amp;eacute;s de modificar el archivo de autores deber&amp;iacute;a continuar la operaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="8c74599d52dc4064f88f6e7b7729fbf0a87fa3fe" translate="yes" xml:space="preserve">
          <source>If this option is specified one or more times, then only run the specified tasks in the specified order. If no &lt;code&gt;--task=&amp;lt;task&amp;gt;&lt;/code&gt; arguments are specified, then only the tasks with &lt;code&gt;maintenance.&amp;lt;task&amp;gt;.enabled&lt;/code&gt; configured as &lt;code&gt;true&lt;/code&gt; are considered. See the &lt;code&gt;TASKS&lt;/code&gt; section for the list of accepted &lt;code&gt;&amp;lt;task&amp;gt;&lt;/code&gt; values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68c99ad12996bd9192637a1c1520fb2b24def75b" translate="yes" xml:space="preserve">
          <source>If this option is specified, for each SVN committer name that does not exist in the authors file, the given file is executed with the committer name as the first argument. The program is expected to return a single line of the form &quot;Name &amp;lt;email&amp;gt;&quot; or &quot;Name &amp;lt;&amp;gt;&quot;, which will be treated as if included in the authors file.</source>
          <target state="translated">Si se especifica esta opci&amp;oacute;n, para cada nombre de confirmador SVN que no existe en el archivo de autores, el archivo dado se ejecuta con el nombre del confirmador como primer argumento. Se espera que el programa devuelva una sola l&amp;iacute;nea con el formato &quot;Nombre &amp;lt;correo electr&amp;oacute;nico&amp;gt;&quot; o &quot;Nombre &amp;lt;&amp;gt;&quot;, que se tratar&amp;aacute; como si estuviera incluido en el archivo de los autores.</target>
        </trans-unit>
        <trans-unit id="9706c1068d7b5bd67656b65aa296c50f3e651323" translate="yes" xml:space="preserve">
          <source>If this variable is not specified, it defaults to &lt;code&gt;normal&lt;/code&gt;. This variable can be overridden with the -u|--untracked-files option of &lt;a href=&quot;git-status&quot;&gt;git-status[1]&lt;/a&gt; and &lt;a href=&quot;git-commit&quot;&gt;git-commit[1]&lt;/a&gt;.</source>
          <target state="translated">Si no se especifica esta variable, por defecto es &lt;code&gt;normal&lt;/code&gt; . Esta variable se puede anular con la opci&amp;oacute;n -u | --untracked-files de &lt;a href=&quot;git-status&quot;&gt;git-status [1]&lt;/a&gt; y &lt;a href=&quot;git-commit&quot;&gt;git-commit [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9b0cae3fed40383cf5d614f1da46a2c524e4930e" translate="yes" xml:space="preserve">
          <source>If this variable is set to &quot;1&quot;, &quot;2&quot; or &quot;true&quot; (comparison is case insensitive), trace messages will be printed to stderr.</source>
          <target state="translated">Si esta variable se establece en &quot;1&quot;,&quot;2&quot; o &quot;verdadero&quot; (la comparación no distingue entre mayúsculas y minúsculas),los mensajes de rastreo se imprimirán en stderr.</target>
        </trans-unit>
        <trans-unit id="c1357386502b4e540a41766c550326b57fc0ea56" translate="yes" xml:space="preserve">
          <source>If this variable is set to a path, non-worktree files that are normally in $GIT_DIR will be taken from this path instead. Worktree-specific files such as HEAD or index are taken from $GIT_DIR. See &lt;a href=&quot;gitrepository-layout&quot;&gt;gitrepository-layout[5]&lt;/a&gt; and &lt;a href=&quot;git-worktree&quot;&gt;git-worktree[1]&lt;/a&gt; for details. This variable has lower precedence than other path variables such as GIT_INDEX_FILE, GIT_OBJECT_DIRECTORY&amp;hellip;​</source>
          <target state="translated">Si esta variable se establece en una ruta, los archivos que no son del &amp;aacute;rbol de trabajo que normalmente est&amp;aacute;n en $ GIT_DIR se tomar&amp;aacute;n de esta ruta. Los archivos espec&amp;iacute;ficos del &amp;aacute;rbol de trabajo, como HEAD o index, se toman de $ GIT_DIR. Consulte &lt;a href=&quot;gitrepository-layout&quot;&gt;gitrepository-layout [5]&lt;/a&gt; y &lt;a href=&quot;git-worktree&quot;&gt;git-worktree [1]&lt;/a&gt; para obtener m&amp;aacute;s detalles. Esta variable tiene menor precedencia que otras variables de ruta como GIT_INDEX_FILE, GIT_OBJECT_DIRECTORY&amp;hellip;</target>
        </trans-unit>
        <trans-unit id="8249d2ab5516fac15cd6ed908f0ba3c1a12338b5" translate="yes" xml:space="preserve">
          <source>If this variable is set, &lt;code&gt;git fetch&lt;/code&gt; and &lt;code&gt;git push&lt;/code&gt; will use the specified command instead of &lt;code&gt;ssh&lt;/code&gt; when they need to connect to a remote system. The command is in the same form as the &lt;code&gt;GIT_SSH_COMMAND&lt;/code&gt; environment variable and is overridden when the environment variable is set.</source>
          <target state="translated">Si se establece esta variable, &lt;code&gt;git fetch&lt;/code&gt; y &lt;code&gt;git push&lt;/code&gt; usar&amp;aacute;n el comando especificado en lugar de &lt;code&gt;ssh&lt;/code&gt; cuando necesiten conectarse a un sistema remoto. El comando tiene el mismo formato que la variable de entorno &lt;code&gt;GIT_SSH_COMMAND&lt;/code&gt; y se anula cuando se establece la variable de entorno.</target>
        </trans-unit>
        <trans-unit id="e4e675f6ba8abd4a71f30087b18137ff3c23311f" translate="yes" xml:space="preserve">
          <source>If this variable is set, the default hash algorithm for new repositories will be set to this value. This value is currently ignored when cloning; the setting of the remote repository is used instead. The default is &quot;sha1&quot;. THIS VARIABLE IS EXPERIMENTAL! See &lt;code&gt;--object-format&lt;/code&gt; in &lt;a href=&quot;git-init&quot;&gt;git-init[1]&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3af55b279f11e2f816fa42fab0cbda45b206e1ef" translate="yes" xml:space="preserve">
          <source>If timestamps of commits in the CVS repository are not stable enough to be used for ordering commits changes may show up in the wrong order.</source>
          <target state="translated">Si las marcas de tiempo de las confirmaciones en el repositorio CVS no son lo suficientemente estables para ser usadas para ordenar las confirmaciones,los cambios pueden aparecer en el orden equivocado.</target>
        </trans-unit>
        <trans-unit id="51615abc07df5f5fedb19397be1e475bae29e04c" translate="yes" xml:space="preserve">
          <source>If true (default), a single editor instance will be spawned to edit files you have to edit (patches when &lt;code&gt;--annotate&lt;/code&gt; is used, and the summary when &lt;code&gt;--compose&lt;/code&gt; is used). If false, files will be edited one after the other, spawning a new editor each time.</source>
          <target state="translated">Si es verdadero (predeterminado), se generar&amp;aacute; una &amp;uacute;nica instancia de editor para editar los archivos que tiene que editar (parches cuando se usa &lt;code&gt;--annotate&lt;/code&gt; y el resumen cuando se usa &lt;code&gt;--compose&lt;/code&gt; ). Si es falso, los archivos se editar&amp;aacute;n uno tras otro, generando un nuevo editor cada vez.</target>
        </trans-unit>
        <trans-unit id="6c99dc0ffc12cab74a91d9cd9821ddfe241990c4" translate="yes" xml:space="preserve">
          <source>If true prevents displaying information about repository owner.</source>
          <target state="translated">Si es cierto,impide que se muestre la información sobre el propietario del depósito.</target>
        </trans-unit>
        <trans-unit id="fad7b766b28596874c184072e4308f81cec3bb8e" translate="yes" xml:space="preserve">
          <source>If true the web server started by &lt;a href=&quot;git-instaweb&quot;&gt;git-instaweb[1]&lt;/a&gt; will be bound to the local IP (127.0.0.1).</source>
          <target state="translated">Si es verdadero, el servidor web iniciado por &lt;a href=&quot;git-instaweb&quot;&gt;git-instaweb [1]&lt;/a&gt; estar&amp;aacute; vinculado a la IP local (127.0.0.1).</target>
        </trans-unit>
        <trans-unit id="24fc21f99a5940a5b287a59503e7df044758b9be" translate="yes" xml:space="preserve">
          <source>If true this repository is assumed to be &lt;code&gt;bare&lt;/code&gt; and has no working directory associated with it. If this is the case a number of commands that require a working directory will be disabled, such as &lt;a href=&quot;git-add&quot;&gt;git-add[1]&lt;/a&gt; or &lt;a href=&quot;git-merge&quot;&gt;git-merge[1]&lt;/a&gt;.</source>
          <target state="translated">Si es verdadero, se supone que este repositorio est&amp;aacute; &lt;code&gt;bare&lt;/code&gt; y no tiene un directorio de trabajo asociado. Si este es el caso, se deshabilitar&amp;aacute;n varios comandos que requieren un directorio de trabajo, como &lt;a href=&quot;git-add&quot;&gt;git-add [1]&lt;/a&gt; o &lt;a href=&quot;git-merge&quot;&gt;git-merge [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="18d14681f32fdc08f62b0e7a189d6a89008757fd" translate="yes" xml:space="preserve">
          <source>If true, &lt;code&gt;git gui blame&lt;/code&gt; uses &lt;code&gt;-C&lt;/code&gt; instead of &lt;code&gt;-C -C&lt;/code&gt; for original location detection. It makes blame significantly faster on huge repositories at the expense of less thorough copy detection.</source>
          <target state="translated">Si es verdadero, &lt;code&gt;git gui blame&lt;/code&gt; usa &lt;code&gt;-C&lt;/code&gt; en lugar de &lt;code&gt;-C -C&lt;/code&gt; para la detecci&amp;oacute;n de la ubicaci&amp;oacute;n original. Hace que la culpa sea significativamente m&amp;aacute;s r&amp;aacute;pida en grandes repositorios a expensas de una detecci&amp;oacute;n de copias menos completa.</target>
        </trans-unit>
        <trans-unit id="a4dc06197e1e60c2601c1eee394ecb56132cf3c4" translate="yes" xml:space="preserve">
          <source>If true, Git will avoid using lstat() calls to detect if files have changed by setting the &quot;assume-unchanged&quot; bit for those tracked files which it has updated identically in both the index and working tree.</source>
          <target state="translated">Si es cierto,Git evitará usar las llamadas a lstat()para detectar si los archivos han cambiado,estableciendo el bit &quot;assume-unchanged&quot; para aquellos archivos rastreados que haya actualizado de forma idéntica tanto en el índice como en el árbol de trabajo.</target>
        </trans-unit>
        <trans-unit id="f52d8aadd1ed60dd80b38e7a96aadc385cabb931" translate="yes" xml:space="preserve">
          <source>If true, Git will warn you if the ref name you passed it is ambiguous and might match multiple refs in the repository. True by default.</source>
          <target state="translated">Si es cierto,Git te avisará si el nombre del árbitro que le pasaste es ambiguo y podría coincidir con varios árbitros del depósito.Cierto por defecto.</target>
        </trans-unit>
        <trans-unit id="b4f1cbcb9d6580097e1319f75786e1aefcc4a19a" translate="yes" xml:space="preserve">
          <source>If true, allow clients to use &lt;code&gt;git archive --remote&lt;/code&gt; to request any tree, whether reachable from the ref tips or not. See the discussion in the &quot;SECURITY&quot; section of &lt;a href=&quot;git-upload-archive&quot;&gt;git-upload-archive[1]&lt;/a&gt; for more details. Defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">Si es verdadero, permita que los clientes utilicen &lt;code&gt;git archive --remote&lt;/code&gt; para solicitar cualquier &amp;aacute;rbol, ya sea accesible desde los consejos de referencia o no. Vea la discusi&amp;oacute;n en la secci&amp;oacute;n &quot;SEGURIDAD&quot; de &lt;a href=&quot;git-upload-archive&quot;&gt;git-upload-archive [1]&lt;/a&gt; para m&amp;aacute;s detalles. El valor predeterminado es &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9577d8134a35c2d555845d35ede1972ec309a7fc" translate="yes" xml:space="preserve">
          <source>If true, enable &lt;code&gt;&amp;lt;format&amp;gt;&lt;/code&gt; for use by remote clients via &lt;a href=&quot;git-upload-archive&quot;&gt;git-upload-archive[1]&lt;/a&gt;. Defaults to false for user-defined formats, but true for the &quot;tar.gz&quot; and &quot;tgz&quot; formats.</source>
          <target state="translated">Si es verdadero, habilite &lt;code&gt;&amp;lt;format&amp;gt;&lt;/code&gt; para que lo utilicen clientes remotos a trav&amp;eacute;s de &lt;a href=&quot;git-upload-archive&quot;&gt;git-upload-archive [1]&lt;/a&gt; . El valor predeterminado es falso para los formatos definidos por el usuario, pero verdadero para los formatos &quot;tar.gz&quot; y &quot;tgz&quot;.</target>
        </trans-unit>
        <trans-unit id="5f15956c2db32b4b1b45dac474661942b8aa7008" translate="yes" xml:space="preserve">
          <source>If true, fetch will automatically behave as if the &lt;code&gt;--prune&lt;/code&gt; option was given on the command line. See also &lt;code&gt;remote.&amp;lt;name&amp;gt;.prune&lt;/code&gt; and the PRUNING section of &lt;a href=&quot;git-fetch&quot;&gt;git-fetch[1]&lt;/a&gt;.</source>
          <target state="translated">Si es verdadero, fetch se comportar&amp;aacute; autom&amp;aacute;ticamente como si la opci&amp;oacute;n &lt;code&gt;--prune&lt;/code&gt; se hubiera dado en la l&amp;iacute;nea de comando. Consulte tambi&amp;eacute;n &lt;code&gt;remote.&amp;lt;name&amp;gt;.prune&lt;/code&gt; y la secci&amp;oacute;n de poda de &lt;a href=&quot;git-fetch&quot;&gt;git-fetch [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7d985f4709f0d26edc0babef707e65f833d349aa" translate="yes" xml:space="preserve">
          <source>If true, fetch will automatically behave as if the &lt;code&gt;refs/tags/*:refs/tags/*&lt;/code&gt; refspec was provided when pruning, if not set already. This allows for setting both this option and &lt;code&gt;fetch.prune&lt;/code&gt; to maintain a 1=1 mapping to upstream refs. See also &lt;code&gt;remote.&amp;lt;name&amp;gt;.pruneTags&lt;/code&gt; and the PRUNING section of &lt;a href=&quot;git-fetch&quot;&gt;git-fetch[1]&lt;/a&gt;.</source>
          <target state="translated">Si es verdadero, fetch se comportar&amp;aacute; autom&amp;aacute;ticamente como si &lt;code&gt;refs/tags/*:refs/tags/*&lt;/code&gt; refspec se hubiera proporcionado al podar, si no se ha configurado ya. Esto permite configurar tanto esta opci&amp;oacute;n como &lt;code&gt;fetch.prune&lt;/code&gt; para mantener un mapeo 1 = 1 a las referencias ascendentes. Consulte tambi&amp;eacute;n &lt;code&gt;remote.&amp;lt;name&amp;gt;.pruneTags&lt;/code&gt; y la secci&amp;oacute;n de PODA de &lt;a href=&quot;git-fetch&quot;&gt;git-fetch [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2de6ae2b37da0c5dc299e33fe86fea1c6d9d4a0f" translate="yes" xml:space="preserve">
          <source>If true, git-am will call git-mailsplit for patches in mbox format with parameter &lt;code&gt;--keep-cr&lt;/code&gt;. In this case git-mailsplit will not remove &lt;code&gt;\r&lt;/code&gt; from lines ending with &lt;code&gt;\r\n&lt;/code&gt;. Can be overridden by giving &lt;code&gt;--no-keep-cr&lt;/code&gt; from the command line. See &lt;a href=&quot;git-am&quot;&gt;git-am[1]&lt;/a&gt;, &lt;a href=&quot;git-mailsplit&quot;&gt;git-mailsplit[1]&lt;/a&gt;.</source>
          <target state="translated">Si es verdadero, git-am llamar&amp;aacute; a git-mailsplit para parches en formato mbox con el par&amp;aacute;metro &lt;code&gt;--keep-cr&lt;/code&gt; . En este caso, git-mailsplit no eliminar&amp;aacute; &lt;code&gt;\r&lt;/code&gt; de las l&amp;iacute;neas que terminan con &lt;code&gt;\r\n&lt;/code&gt; . Puede anularse dando &lt;code&gt;--no-keep-cr&lt;/code&gt; desde la l&amp;iacute;nea de comando. Consulte &lt;a href=&quot;git-am&quot;&gt;git-am [1]&lt;/a&gt; , &lt;a href=&quot;git-mailsplit&quot;&gt;git-mailsplit [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e94bf962607289b1694c70432d3fab451c61737d" translate="yes" xml:space="preserve">
          <source>If true, makes &lt;a href=&quot;git-log&quot;&gt;git-log[1]&lt;/a&gt;, &lt;a href=&quot;git-show&quot;&gt;git-show[1]&lt;/a&gt;, and &lt;a href=&quot;git-whatchanged&quot;&gt;git-whatchanged[1]&lt;/a&gt; assume &lt;code&gt;--abbrev-commit&lt;/code&gt;. You may override this option with &lt;code&gt;--no-abbrev-commit&lt;/code&gt;.</source>
          <target state="translated">Si es verdadero, hace que &lt;a href=&quot;git-log&quot;&gt;git-log [1]&lt;/a&gt; , &lt;a href=&quot;git-show&quot;&gt;git-show [1]&lt;/a&gt; y &lt;a href=&quot;git-whatchanged&quot;&gt;git-whatchanged [1]&lt;/a&gt; asuman &lt;code&gt;--abbrev-commit&lt;/code&gt; . Puede anular esta opci&amp;oacute;n con &lt;code&gt;--no-abbrev-commit&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f7c96ef3a79b38b8c56dee4db799ed4d172ce90c" translate="yes" xml:space="preserve">
          <source>If true, makes &lt;a href=&quot;git-log&quot;&gt;git-log[1]&lt;/a&gt;, &lt;a href=&quot;git-show&quot;&gt;git-show[1]&lt;/a&gt;, and &lt;a href=&quot;git-whatchanged&quot;&gt;git-whatchanged[1]&lt;/a&gt; assume &lt;code&gt;--show-signature&lt;/code&gt;.</source>
          <target state="translated">Si es verdadero, hace que &lt;a href=&quot;git-log&quot;&gt;git-log [1]&lt;/a&gt; , &lt;a href=&quot;git-show&quot;&gt;git-show [1]&lt;/a&gt; y &lt;a href=&quot;git-whatchanged&quot;&gt;git-whatchanged [1]&lt;/a&gt; asuman &lt;code&gt;--show-signature&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6cb33eaf81fb27f3c3d3ba0e81d6670ba0d0bfaf" translate="yes" xml:space="preserve">
          <source>If true, makes &lt;a href=&quot;git-log&quot;&gt;git-log[1]&lt;/a&gt;, &lt;a href=&quot;git-show&quot;&gt;git-show[1]&lt;/a&gt;, and &lt;a href=&quot;git-whatchanged&quot;&gt;git-whatchanged[1]&lt;/a&gt; assume &lt;code&gt;--use-mailmap&lt;/code&gt;, otherwise assume &lt;code&gt;--no-use-mailmap&lt;/code&gt;. True by default.</source>
          <target state="translated">Si es verdadero, hace que &lt;a href=&quot;git-log&quot;&gt;git-log [1]&lt;/a&gt; , &lt;a href=&quot;git-show&quot;&gt;git-show [1]&lt;/a&gt; y &lt;a href=&quot;git-whatchanged&quot;&gt;git-whatchanged [1]&lt;/a&gt; asuman &lt;code&gt;--use-mailmap&lt;/code&gt; , de lo contrario asume &lt;code&gt;--no-use-mailmap&lt;/code&gt; . Verdadero por defecto.</target>
        </trans-unit>
        <trans-unit id="672cef13127670a717c7a3aa65681a15ad776d1b" translate="yes" xml:space="preserve">
          <source>If true, makes &lt;a href=&quot;git-mailinfo&quot;&gt;git-mailinfo[1]&lt;/a&gt; (and therefore &lt;a href=&quot;git-am&quot;&gt;git-am[1]&lt;/a&gt;) act by default as if the --scissors option was provided on the command-line. When active, this features removes everything from the message body before a scissors line (i.e. consisting mainly of &quot;&amp;gt;8&quot;, &quot;8&amp;lt;&quot; and &quot;-&quot;).</source>
          <target state="translated">Si es verdadero, hace que &lt;a href=&quot;git-mailinfo&quot;&gt;git-mailinfo [1]&lt;/a&gt; (y por lo tanto &lt;a href=&quot;git-am&quot;&gt;git-am [1]&lt;/a&gt; ) act&amp;uacute;e de forma predeterminada como si la opci&amp;oacute;n --scissors se proporcionara en la l&amp;iacute;nea de comandos. Cuando est&amp;aacute; activa, esta funci&amp;oacute;n elimina todo del cuerpo del mensaje antes de una l&amp;iacute;nea de tijeras (es decir, que consta principalmente de &quot;&amp;gt; 8&quot;, &quot;8 &amp;lt;&quot; y &quot;-&quot;).</target>
        </trans-unit>
        <trans-unit id="d25b510a17b04a17cfbdc40d0999d1586f4d5f91" translate="yes" xml:space="preserve">
          <source>If true, makes Git check if converting &lt;code&gt;CRLF&lt;/code&gt; is reversible when end-of-line conversion is active. Git will verify if a command modifies a file in the work tree either directly or indirectly. For example, committing a file followed by checking out the same file should yield the original file in the work tree. If this is not the case for the current setting of &lt;code&gt;core.autocrlf&lt;/code&gt;, Git will reject the file. The variable can be set to &quot;warn&quot;, in which case Git will only warn about an irreversible conversion but continue the operation.</source>
          <target state="translated">Si es verdadero, hace que Git compruebe si la conversi&amp;oacute;n de &lt;code&gt;CRLF&lt;/code&gt; es reversible cuando la conversi&amp;oacute;n de fin de l&amp;iacute;nea est&amp;aacute; activa. Git verificar&amp;aacute; si un comando modifica un archivo en el &amp;aacute;rbol de trabajo directa o indirectamente. Por ejemplo, la confirmaci&amp;oacute;n de un archivo seguido de la comprobaci&amp;oacute;n del mismo archivo deber&amp;iacute;a producir el archivo original en el &amp;aacute;rbol de trabajo. Si este no es el caso de la configuraci&amp;oacute;n actual de &lt;code&gt;core.autocrlf&lt;/code&gt; , Git rechazar&amp;aacute; el archivo. La variable se puede establecer en &quot;advertir&quot;, en cuyo caso Git solo advertir&amp;aacute; sobre una conversi&amp;oacute;n irreversible pero continuar&amp;aacute; la operaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="3a6f979740fe111373346b7083b54b9e059af003" translate="yes" xml:space="preserve">
          <source>If true, omit the column with date of the most current commit on the projects list page. It can save a bit of I/O and a fork per repository.</source>
          <target state="translated">Si es cierto,omite la columna con la fecha del compromiso más reciente en la página de la lista de proyectos.Puede guardar un poco de E/S y un bifurcación por repositorio.</target>
        </trans-unit>
        <trans-unit id="9e101a02df349b50a39b60288665a643391bcf24" translate="yes" xml:space="preserve">
          <source>If true, pushing to this remote will automatically behave as if the &lt;code&gt;--mirror&lt;/code&gt; option was given on the command line.</source>
          <target state="translated">Si es verdadero, presionar a este control remoto se comportar&amp;aacute; autom&amp;aacute;ticamente como si la opci&amp;oacute;n &lt;code&gt;--mirror&lt;/code&gt; se hubiera dado en la l&amp;iacute;nea de comando.</target>
        </trans-unit>
        <trans-unit id="561edb27b58ccdfdecb1aae75865de22935f3cd3" translate="yes" xml:space="preserve">
          <source>If true, some gitweb features are disabled to prevent content in repositories from launching cross-site scripting (XSS) attacks. Set this to true if you don&amp;rsquo;t trust the content of your repositories. False by default (set to 0).</source>
          <target state="translated">Si es verdadero, algunas funciones de gitweb est&amp;aacute;n deshabilitadas para evitar que el contenido de los repositorios lance ataques de secuencias de comandos entre sitios (XSS). Establezca esto en verdadero si no conf&amp;iacute;a en el contenido de sus repositorios. Falso de forma predeterminada (establecido en 0).</target>
        </trans-unit>
        <trans-unit id="698e5f4a0ab76eb97600c890fa9adac3c5e93fa4" translate="yes" xml:space="preserve">
          <source>If true, the initial commit will be shown as a big creation event. This is equivalent to a diff against an empty tree. Tools like &lt;a href=&quot;git-log&quot;&gt;git-log[1]&lt;/a&gt; or &lt;a href=&quot;git-whatchanged&quot;&gt;git-whatchanged[1]&lt;/a&gt;, which normally hide the root commit will now show it. True by default.</source>
          <target state="translated">Si es verdadero, la confirmaci&amp;oacute;n inicial se mostrar&amp;aacute; como un gran evento de creaci&amp;oacute;n. Esto es equivalente a una diferencia contra un &amp;aacute;rbol vac&amp;iacute;o. Herramientas como &lt;a href=&quot;git-log&quot;&gt;git-log [1]&lt;/a&gt; o &lt;a href=&quot;git-whatchanged&quot;&gt;git-whatchanged [1]&lt;/a&gt; , que normalmente ocultan la confirmaci&amp;oacute;n de root, ahora la mostrar&amp;aacute;n. Verdadero por defecto.</target>
        </trans-unit>
        <trans-unit id="7f4771e5273a3a0e51423699c29e2caf790623f9" translate="yes" xml:space="preserve">
          <source>If true, the server will look up the end-of-line conversion attributes for files to determine the &lt;code&gt;-k&lt;/code&gt; modes to use. If the attributes force Git to treat a file as text, the &lt;code&gt;-k&lt;/code&gt; mode will be left blank so CVS clients will treat it as text. If they suppress text conversion, the file will be set with &lt;code&gt;-kb&lt;/code&gt; mode, which suppresses any newline munging the client might otherwise do. If the attributes do not allow the file type to be determined, then &lt;code&gt;gitcvs.allBinary&lt;/code&gt; is used. See &lt;a href=&quot;gitattributes&quot;&gt;gitattributes[5]&lt;/a&gt;.</source>
          <target state="translated">Si es verdadero, el servidor buscar&amp;aacute; los atributos de conversi&amp;oacute;n de fin de l&amp;iacute;nea de los archivos para determinar los modos &lt;code&gt;-k&lt;/code&gt; que se utilizar&amp;aacute;n. Si los atributos obligan a Git a tratar un archivo como texto, el modo &lt;code&gt;-k&lt;/code&gt; se dejar&amp;aacute; en blanco para que los clientes CVS lo traten como texto. Si suprimen la conversi&amp;oacute;n de texto, el archivo se configurar&amp;aacute; con el modo &lt;code&gt;-kb&lt;/code&gt; , que suprime cualquier salto de l&amp;iacute;nea que pudiera hacer el cliente. Si los atributos no permiten determinar el tipo de archivo, se utiliza &lt;code&gt;gitcvs.allBinary&lt;/code&gt; . Ver &lt;a href=&quot;gitattributes&quot;&gt;gitattributes [5]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="36ac6e641c359be495ff334484c92173e0b7c3c8" translate="yes" xml:space="preserve">
          <source>If true, the split-index feature of the index will be used. See &lt;a href=&quot;git-update-index&quot;&gt;git-update-index[1]&lt;/a&gt;. False by default.</source>
          <target state="translated">Si es verdadero, se utilizar&amp;aacute; la funci&amp;oacute;n de &amp;iacute;ndice dividido del &amp;iacute;ndice. Consulte &lt;a href=&quot;git-update-index&quot;&gt;git-update-index [1]&lt;/a&gt; . Falso por defecto.</target>
        </trans-unit>
        <trans-unit id="521397cd2bc3f328c7b75df2807813cd34103bfb" translate="yes" xml:space="preserve">
          <source>If true, then gc will rewrite the commit-graph file when &lt;a href=&quot;git-gc&quot;&gt;git-gc[1]&lt;/a&gt; is run. When using &lt;code&gt;git gc --auto&lt;/code&gt; the commit-graph will be updated if housekeeping is required. Default is true. See &lt;a href=&quot;git-commit-graph&quot;&gt;git-commit-graph[1]&lt;/a&gt; for details.</source>
          <target state="translated">Si es verdadero, entonces gc reescribir&amp;aacute; el archivo de gr&amp;aacute;fico de confirmaci&amp;oacute;n cuando se ejecute &lt;a href=&quot;git-gc&quot;&gt;git-gc [1]&lt;/a&gt; . Al usar &lt;code&gt;git gc --auto&lt;/code&gt; , el commit-graph se actualizar&amp;aacute; si se requiere limpieza. El valor predeterminado es verdadero. Consulte &lt;a href=&quot;git-commit-graph&quot;&gt;git-commit-graph [1]&lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="902fdcf00401d2e7de222ff42ce846a756cbb163" translate="yes" xml:space="preserve">
          <source>If true, then git will read the commit-graph file (if it exists) to parse the graph structure of commits. Defaults to true. See &lt;a href=&quot;git-commit-graph&quot;&gt;git-commit-graph[1]&lt;/a&gt; for more information.</source>
          <target state="translated">Si es verdadero, entonces git leer&amp;aacute; el archivo del gr&amp;aacute;fico de confirmaci&amp;oacute;n (si existe) para analizar la estructura gr&amp;aacute;fica de las confirmaciones. Por defecto es verdadero. Consulte &lt;a href=&quot;git-commit-graph&quot;&gt;git-commit-graph [1]&lt;/a&gt; para obtener m&amp;aacute;s informaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="ca076926e8bbfce2f59c8069a39ed42dca4bb470" translate="yes" xml:space="preserve">
          <source>If true, then git will use the changed-path Bloom filters in the commit-graph file (if it exists, and they are present). Defaults to true. See &lt;a href=&quot;git-commit-graph&quot;&gt;git-commit-graph[1]&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="615bfb2827e0f7022b5822b60fa7f8c63365efe6" translate="yes" xml:space="preserve">
          <source>If true, this is equivalent to the --verify-signatures command line option. See &lt;a href=&quot;git-merge&quot;&gt;git-merge[1]&lt;/a&gt; for details.</source>
          <target state="translated">Si es verdadero, equivale a la opci&amp;oacute;n de l&amp;iacute;nea de comandos --verify-signatures. Consulte &lt;a href=&quot;git-merge&quot;&gt;git-merge [1]&lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="5ab6fd64e80cf040c0dbc59c3bda45e3cb1c29b3" translate="yes" xml:space="preserve">
          <source>If true, this remote will be skipped by default when updating using &lt;a href=&quot;git-fetch&quot;&gt;git-fetch[1]&lt;/a&gt; or the &lt;code&gt;update&lt;/code&gt; subcommand of &lt;a href=&quot;git-remote&quot;&gt;git-remote[1]&lt;/a&gt;.</source>
          <target state="translated">Si es verdadero, este control remoto se omitir&amp;aacute; por defecto cuando se actualice usando &lt;a href=&quot;git-fetch&quot;&gt;git-fetch [1]&lt;/a&gt; o el subcomando de &lt;code&gt;update&lt;/code&gt; de &lt;a href=&quot;git-remote&quot;&gt;git-remote [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="537153cdd9a230b7ef7748cee5c002a80aec5646" translate="yes" xml:space="preserve">
          <source>If we compute the following non optimal function on it:</source>
          <target state="translated">Si calculamos la siguiente función no óptima en ella:</target>
        </trans-unit>
        <trans-unit id="b2bbf437e467ca2cfec5d122277b398062cce56a" translate="yes" xml:space="preserve">
          <source>If we examined all this history together in one repository, it will look like:</source>
          <target state="translated">Si examináramos toda esta historia juntos en un solo depósito,parecería que:</target>
        </trans-unit>
        <trans-unit id="f77fa3523026c17c64002e6f77dd7e18ad8c7cf7" translate="yes" xml:space="preserve">
          <source>If we have moved away from commit &lt;code&gt;f&lt;/code&gt;, then we must first recover its object name (typically by using git reflog), and then we can create a reference to it. For example, to see the last two commits to which &lt;code&gt;HEAD&lt;/code&gt; referred, we can use either of these commands:</source>
          <target state="translated">Si nos hemos alejado de la confirmaci&amp;oacute;n &lt;code&gt;f&lt;/code&gt; , primero debemos recuperar su nombre de objeto (generalmente usando git reflog), y luego podemos crear una referencia a &amp;eacute;l. Por ejemplo, para ver las dos &amp;uacute;ltimas confirmaciones a las que se refiri&amp;oacute; &lt;code&gt;HEAD&lt;/code&gt; , podemos usar cualquiera de estos comandos:</target>
        </trans-unit>
        <trans-unit id="1d5fb2a96e98dbf044763df4f4d84c289b1a7a1e" translate="yes" xml:space="preserve">
          <source>If we look at the way commits are created under the cover, we&amp;rsquo;ll see that there are more flexible ways creating commits.</source>
          <target state="translated">Si observamos la forma en que se crean las confirmaciones bajo la cubierta, veremos que hay formas m&amp;aacute;s flexibles de crear confirmaciones.</target>
        </trans-unit>
        <trans-unit id="2a7aed1833634138d2979858dc472c551054c3f5" translate="yes" xml:space="preserve">
          <source>If we need to talk about a particular commit, the character &quot;o&quot; may be replaced with another letter or number.</source>
          <target state="translated">Si necesitamos hablar de un compromiso en particular,el carácter &quot;o&quot; puede ser reemplazado por otra letra o número.</target>
        </trans-unit>
        <trans-unit id="73117dc442919d58c7658111f0e65fc3ffc2d92d" translate="yes" xml:space="preserve">
          <source>If width is &lt;code&gt;0&lt;/code&gt; (zero) then indent the lines of the output without wrapping them.</source>
          <target state="translated">Si el ancho es &lt;code&gt;0&lt;/code&gt; (cero), entonces sangra las l&amp;iacute;neas de la salida sin envolverlas.</target>
        </trans-unit>
        <trans-unit id="a0f8f4ea612137fd1324a3c99aa8cca8319d30d8" translate="yes" xml:space="preserve">
          <source>If you add a &lt;code&gt;+&lt;/code&gt; (plus sign) after &lt;code&gt;%&lt;/code&gt; of a placeholder, a line-feed is inserted immediately before the expansion if and only if the placeholder expands to a non-empty string.</source>
          <target state="translated">Si agrega un &lt;code&gt;+&lt;/code&gt; (signo m&amp;aacute;s) despu&amp;eacute;s de &lt;code&gt;%&lt;/code&gt; de un marcador de posici&amp;oacute;n, se inserta un salto de l&amp;iacute;nea inmediatamente antes de la expansi&amp;oacute;n si y solo si el marcador de posici&amp;oacute;n se expande a una cadena no vac&amp;iacute;a.</target>
        </trans-unit>
        <trans-unit id="f83e564943919127dff3b2d8ad2099402ce321cb" translate="yes" xml:space="preserve">
          <source>If you add a &lt;code&gt;-&lt;/code&gt; (minus sign) after &lt;code&gt;%&lt;/code&gt; of a placeholder, all consecutive line-feeds immediately preceding the expansion are deleted if and only if the placeholder expands to an empty string.</source>
          <target state="translated">Si agrega un &lt;code&gt;-&lt;/code&gt; (signo menos) despu&amp;eacute;s del &lt;code&gt;%&lt;/code&gt; de un marcador de posici&amp;oacute;n, todos los avances de l&amp;iacute;nea consecutivos que preceden inmediatamente a la expansi&amp;oacute;n se eliminan si y solo si el marcador de posici&amp;oacute;n se expande a una cadena vac&amp;iacute;a.</target>
        </trans-unit>
        <trans-unit id="a78fb3b12f14b3649d1e2f03162a9771701e268a" translate="yes" xml:space="preserve">
          <source>If you add a ` ` (space) after &lt;code&gt;%&lt;/code&gt; of a placeholder, a space is inserted immediately before the expansion if and only if the placeholder expands to a non-empty string.</source>
          <target state="translated">Si agrega un `` (espacio) despu&amp;eacute;s del &lt;code&gt;%&lt;/code&gt; de un marcador de posici&amp;oacute;n, se inserta un espacio inmediatamente antes de la expansi&amp;oacute;n si y solo si el marcador de posici&amp;oacute;n se expande a una cadena no vac&amp;iacute;a.</target>
        </trans-unit>
        <trans-unit id="2c694abd299e141b455acf195b0e2c24045c8fb9" translate="yes" xml:space="preserve">
          <source>If you allow overriding for the snapshot feature, you can specify which snapshot formats are globally disabled. You can also add any command-line options you want (such as setting the compression level). For instance, you can disable Zip compressed snapshots and set &lt;strong&gt;gzip&lt;/strong&gt;(1) to run at level 6 by adding the following lines to your gitweb configuration file:</source>
          <target state="translated">Si permite la anulaci&amp;oacute;n de la funci&amp;oacute;n de instant&amp;aacute;nea, puede especificar qu&amp;eacute; formatos de instant&amp;aacute;nea est&amp;aacute;n deshabilitados globalmente. Tambi&amp;eacute;n puede agregar las opciones de l&amp;iacute;nea de comandos que desee (como establecer el nivel de compresi&amp;oacute;n). Por ejemplo, puede deshabilitar las instant&amp;aacute;neas comprimidas Zip y configurar &lt;strong&gt;gzip&lt;/strong&gt; (1) para que se ejecute en el nivel 6 agregando las siguientes l&amp;iacute;neas a su archivo de configuraci&amp;oacute;n de gitweb:</target>
        </trans-unit>
        <trans-unit id="1eda80bb2b9aeb620d19886733f7a0a33613b07f" translate="yes" xml:space="preserve">
          <source>If you already use &lt;code&gt;mod_userdir&lt;/code&gt; in your virtual host or you don&amp;rsquo;t want to use the '~' as first character, just comment or remove the second rewrite rule, and uncomment one of the following according to what you want.</source>
          <target state="translated">Si ya usa &lt;code&gt;mod_userdir&lt;/code&gt; en su host virtual o no desea usar el '~' como primer car&amp;aacute;cter, simplemente comente o elimine la segunda regla de reescritura, y descomente uno de los siguientes seg&amp;uacute;n lo que desee.</target>
        </trans-unit>
        <trans-unit id="28aab4433d981c882862a14d41ff2a1b6ecf68f5" translate="yes" xml:space="preserve">
          <source>If you also want to see complete diffs at each step, use</source>
          <target state="translated">Si también quieres ver diferencias completas en cada paso,usa</target>
        </trans-unit>
        <trans-unit id="cc8e02bd7d5fd8efba31a3f28960e44c003964ed" translate="yes" xml:space="preserve">
          <source>If you and the maintainer both have accounts on the same machine, then you can just pull changes from each other&amp;rsquo;s repositories directly; commands that accept repository URLs as arguments will also accept a local directory name:</source>
          <target state="translated">Si usted y el mantenedor tienen cuentas en la misma m&amp;aacute;quina, entonces pueden simplemente extraer los cambios de los repositorios del otro directamente; Los comandos que aceptan las URL del repositorio como argumentos tambi&amp;eacute;n aceptar&amp;aacute;n un nombre de directorio local:</target>
        </trans-unit>
        <trans-unit id="41ebdd5e935074b399d696e8dc1f4204152e3f63" translate="yes" xml:space="preserve">
          <source>If you are a contributor that sends changes upstream in the form of emails, you should use topic branches as usual (see above). Then use &lt;a href=&quot;git-format-patch&quot;&gt;git-format-patch[1]&lt;/a&gt; to generate the corresponding emails (highly recommended over manually formatting them because it makes the maintainer&amp;rsquo;s life easier).</source>
          <target state="translated">Si eres un colaborador que env&amp;iacute;a cambios en forma ascendente en forma de correos electr&amp;oacute;nicos, debes usar las ramas tem&amp;aacute;ticas como de costumbre (ver arriba). Luego, use &lt;a href=&quot;git-format-patch&quot;&gt;git-format-patch [1]&lt;/a&gt; para generar los correos electr&amp;oacute;nicos correspondientes (muy recomendable en lugar de formatearlos manualmente porque facilita la vida del mantenedor).</target>
        </trans-unit>
        <trans-unit id="f7586aada4dc4dabc26450bca6e988967f6c8334" translate="yes" xml:space="preserve">
          <source>If you are a maintainer and would like to merge other people&amp;rsquo;s topic branches to the integration branches, they will typically send a request to do so by mail. Such a request looks like</source>
          <target state="translated">Si es un mantenedor y le gustar&amp;iacute;a fusionar las ramas tem&amp;aacute;ticas de otras personas con las ramas de integraci&amp;oacute;n, normalmente enviar&amp;aacute;n una solicitud para hacerlo por correo. Tal solicitud parece</target>
        </trans-unit>
        <trans-unit id="6a4170b1f048a116a2a20a0123a6634648180f67" translate="yes" xml:space="preserve">
          <source>If you are coming from a CVS background, the style of cooperation suggested in the previous section may be new to you. You do not have to worry. Git supports the &quot;shared public repository&quot; style of cooperation you are probably more familiar with as well.</source>
          <target state="translated">Si vienes de un entorno de CVS,el estilo de cooperación sugerido en la sección anterior puede ser nuevo para ti.No tiene que preocuparse.Git apoya el estilo de cooperación del &quot;depósito público compartido&quot; con el que probablemente también estés más familiarizado.</target>
        </trans-unit>
        <trans-unit id="d473d9569ed7194445a9c66a5a376371d037be9a" translate="yes" xml:space="preserve">
          <source>If you are creating a branch that you want to switch to immediately, it is easier to use the &quot;git switch&quot; command with its &lt;code&gt;-c&lt;/code&gt; option to do the same thing with a single command.</source>
          <target state="translated">Si est&amp;aacute; creando una rama a la que desea cambiar inmediatamente, es m&amp;aacute;s f&amp;aacute;cil usar el comando &quot;git switch&quot; con su opci&amp;oacute;n &lt;code&gt;-c&lt;/code&gt; para hacer lo mismo con un solo comando.</target>
        </trans-unit>
        <trans-unit id="882d5e43cce8c196ac8e463999e712ea9e114942" translate="yes" xml:space="preserve">
          <source>If you are following somebody else&amp;rsquo;s tree, you are most likely using remote-tracking branches (eg. &lt;code&gt;refs/remotes/origin/master&lt;/code&gt;). You usually want the tags from the other end.</source>
          <target state="translated">Si est&amp;aacute; siguiendo el &amp;aacute;rbol de otra persona, lo m&amp;aacute;s probable es que utilice ramas de seguimiento remoto (por ejemplo, &lt;code&gt;refs/remotes/origin/master&lt;/code&gt; ). Por lo general, desea las etiquetas del otro extremo.</target>
        </trans-unit>
        <trans-unit id="0f51d0b61f348c2beb156a534ba33bcb5f141385" translate="yes" xml:space="preserve">
          <source>If you are going to offer CVS access via pserver, add a line in /etc/inetd.conf like</source>
          <target state="translated">Si va a ofrecer acceso al CVS a través de pserver,añada una línea en /etc/inetd.conf como</target>
        </trans-unit>
        <trans-unit id="e1c58ac4057b121c58f1f5681f07adc3f2f06c66" translate="yes" xml:space="preserve">
          <source>If you are instead primarily interested in using Git to fetch a project, for example, to test the latest version, you may prefer to start with the first two chapters of &lt;a href=&quot;user-manual&quot;&gt;The Git User&amp;rsquo;s Manual&lt;/a&gt;.</source>
          <target state="translated">Si, en cambio, est&amp;aacute; interesado principalmente en usar Git para buscar un proyecto, por ejemplo, para probar la &amp;uacute;ltima versi&amp;oacute;n, es posible que prefiera comenzar con los dos primeros cap&amp;iacute;tulos del &lt;a href=&quot;user-manual&quot;&gt;Manual del usuario de Git&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9ce35cf81da423ef90a67288a1d702b7e25d4c6b" translate="yes" xml:space="preserve">
          <source>If you are interested in more details of the revision walking process, just have a look at the first implementation of &lt;code&gt;cmd_log()&lt;/code&gt;; call &lt;code&gt;git show v1.3.0&lt;sub&gt;155^2&lt;/sub&gt;4&lt;/code&gt; and scroll down to that function (note that you no longer need to call &lt;code&gt;setup_pager()&lt;/code&gt; directly).</source>
          <target state="translated">Si est&amp;aacute; interesado en m&amp;aacute;s detalles sobre el proceso de revisi&amp;oacute;n, solo eche un vistazo a la primera implementaci&amp;oacute;n de &lt;code&gt;cmd_log()&lt;/code&gt; ; llame a &lt;code&gt;git show v1.3.0&lt;sub&gt;155^2&lt;/sub&gt;4&lt;/code&gt; y despl&amp;aacute;cese hacia abajo hasta esa funci&amp;oacute;n (tenga en cuenta que ya no necesita llamar a &lt;code&gt;setup_pager()&lt;/code&gt; directamente).</target>
        </trans-unit>
        <trans-unit id="9ac179f42cb3351e666e44e39b35f145be521392" translate="yes" xml:space="preserve">
          <source>If you are interested in more details of the revision walking process, just have a look at the first implementation of &lt;code&gt;cmd_log()&lt;/code&gt;; call &lt;code&gt;git show v1.3.0~155^2~4&lt;/code&gt; and scroll down to that function (note that you no longer need to call &lt;code&gt;setup_pager()&lt;/code&gt; directly).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5b0f41c084141a75721908d0d5d7971792ac89f" translate="yes" xml:space="preserve">
          <source>If you are not absolutely sure that the intermediate revisions are consistent (they compile, pass the testsuite, etc.) you should use &lt;code&gt;git stash&lt;/code&gt; to stash away the not-yet-committed changes after each commit, test, and amend the commit if fixes are necessary.</source>
          <target state="translated">Si no est&amp;aacute; absolutamente seguro de que las revisiones intermedias sean consistentes (se compilan, pasan la prueba, etc.), debe usar &lt;code&gt;git stash&lt;/code&gt; para guardar los cambios a&amp;uacute;n no confirmados despu&amp;eacute;s de cada confirmaci&amp;oacute;n, prueba y enmendar la confirmaci&amp;oacute;n si se arregla son necesarios.</target>
        </trans-unit>
        <trans-unit id="f188b17d328d7a9e1b61bcc0d2e0defbbf399561" translate="yes" xml:space="preserve">
          <source>If you are only interested in changes of the currently initialized submodules with respect to the commit recorded in the index or the HEAD, &lt;a href=&quot;git-status&quot;&gt;git-status[1]&lt;/a&gt; and &lt;a href=&quot;git-diff&quot;&gt;git-diff[1]&lt;/a&gt; will provide that information too (and can also report changes to a submodule&amp;rsquo;s work tree).</source>
          <target state="translated">Si solo est&amp;aacute; interesado en los cambios de los subm&amp;oacute;dulos actualmente inicializados con respecto a la confirmaci&amp;oacute;n registrada en el &amp;iacute;ndice o HEAD, &lt;a href=&quot;git-status&quot;&gt;git-status [1]&lt;/a&gt; y &lt;a href=&quot;git-diff&quot;&gt;git-diff [1]&lt;/a&gt; tambi&amp;eacute;n proporcionar&amp;aacute;n esa informaci&amp;oacute;n (y tambi&amp;eacute;n pueden informar cambios a &amp;aacute;rbol de trabajo de un subm&amp;oacute;dulo).</target>
        </trans-unit>
        <trans-unit id="9fb9a58a453e5ac1de19a98e53575241a40d1da0" translate="yes" xml:space="preserve">
          <source>If you are paranoid, running &lt;code&gt;git verify-pack&lt;/code&gt; command would detect if you have a corrupt pack, but do not worry too much. Our programs are always perfect ;-).</source>
          <target state="translated">Si est&amp;aacute; paranoico, ejecutar el comando &lt;code&gt;git verify-pack&lt;/code&gt; detectar&amp;iacute;a si tiene un paquete corrupto, pero no se preocupe demasiado. Nuestros programas son siempre perfectos ;-).</target>
        </trans-unit>
        <trans-unit id="277e03057ecd44d387d6f501d21982d9ff59224b" translate="yes" xml:space="preserve">
          <source>If you are repacking very old imported data (e.g. older than the last year), consider expending some extra CPU time and supplying --window=50 (or higher) when you run &lt;code&gt;git repack&lt;/code&gt;. This will take longer, but will also produce a smaller packfile. You only need to expend the effort once, and everyone using your project will benefit from the smaller repository.</source>
          <target state="translated">Si est&amp;aacute; reempaquetando datos importados muy antiguos (por ejemplo, m&amp;aacute;s antiguos que el a&amp;ntilde;o pasado), considere gastar algo de tiempo de CPU adicional y proporcionar --window = 50 (o m&amp;aacute;s) cuando ejecute &lt;code&gt;git repack&lt;/code&gt; . Esto llevar&amp;aacute; m&amp;aacute;s tiempo, pero tambi&amp;eacute;n producir&amp;aacute; un archivo de paquete m&amp;aacute;s peque&amp;ntilde;o. Solo necesita dedicar el esfuerzo una vez, y todos los que usen su proyecto se beneficiar&amp;aacute;n del repositorio m&amp;aacute;s peque&amp;ntilde;o.</target>
        </trans-unit>
        <trans-unit id="c500814f6020ec6c3d1c5a9b455910ea7fc36da1" translate="yes" xml:space="preserve">
          <source>If you are using &quot;git bisect run&quot;, you can use the same manual fix up as above, and then start another &quot;git bisect run&quot; in the special branch. Or as the &quot;git bisect&quot; man page says, the script passed to &quot;git bisect run&quot; can apply a patch before it compiles and test the software &lt;a href=&quot;#8&quot;&gt;[8]&lt;/a&gt;. The patch should turn a current untestable commits into a testable one. So the testing will result in &quot;good&quot; or &quot;bad&quot; and &quot;git bisect&quot; will be able to find the first bad commit. And the script should not forget to remove the patch once the testing is done before exiting from the script.</source>
          <target state="translated">Si est&amp;aacute; usando &quot;git bisect run&quot;, puede usar la misma correcci&amp;oacute;n manual que la anterior y luego iniciar otra &quot;git bisect run&quot; en la rama especial. O como dice la p&amp;aacute;gina de manual de &quot;git bisect&quot;, el script pasado a &quot;git bisect run&quot; puede aplicar un parche antes de compilar y probar el software &lt;a href=&quot;#8&quot;&gt;[8]&lt;/a&gt; . El parche deber&amp;iacute;a convertir una confirmaci&amp;oacute;n actual no comprobable en una comprobable. Por lo tanto, la prueba dar&amp;aacute; como resultado &quot;buena&quot; o &quot;mala&quot; y &quot;git bisect&quot; podr&amp;aacute; encontrar la primera confirmaci&amp;oacute;n incorrecta. Y el script no debe olvidarse de eliminar el parche una vez finalizada la prueba antes de salir del script.</target>
        </trans-unit>
        <trans-unit id="c6c0585fbbb0e19d850e67091effac179b4cf010" translate="yes" xml:space="preserve">
          <source>If you blow the index away entirely, you generally haven&amp;rsquo;t lost any information as long as you have the name of the tree that it described.</source>
          <target state="translated">Si borra el &amp;iacute;ndice por completo, generalmente no ha perdido ninguna informaci&amp;oacute;n siempre que tenga el nombre del &amp;aacute;rbol que describi&amp;oacute;.</target>
        </trans-unit>
        <trans-unit id="2d2eeeb68a563ca60a2c585f75afbad9b4a5940e" translate="yes" xml:space="preserve">
          <source>If you both have a test suite and use git bisect, then it becomes less important to check that all tests pass after each commit. Though of course it is probably a good idea to have some checks to avoid breaking too many things because it could make bisecting other bugs more difficult.</source>
          <target state="translated">Si ambos tienen un conjunto de pruebas y usan git bisect,entonces se vuelve menos importante comprobar que todas las pruebas pasan después de cada compromiso.Aunque,por supuesto,es probablemente una buena idea hacer algunas comprobaciones para evitar romper demasiadas cosas porque podría hacer más difícil la bisección de otros bichos.</target>
        </trans-unit>
        <trans-unit id="7c966eb4fc191c72371d7ddd65b21062f03ccb57" translate="yes" xml:space="preserve">
          <source>If you can do that, you can now recreate the missing object with</source>
          <target state="translated">Si puedes hacer eso,ahora puedes recrear el objeto perdido con</target>
        </trans-unit>
        <trans-unit id="5c6e6ccfdc26bd491d9ed428be6d535f807a44d7" translate="yes" xml:space="preserve">
          <source>If you choose to wait for the repack, don&amp;rsquo;t try to run benchmarks or performance tests until repacking is completed. fast-import outputs suboptimal packfiles that are simply never seen in real use situations.</source>
          <target state="translated">Si elige esperar el reempaquetado, no intente ejecutar evaluaciones comparativas o pruebas de rendimiento hasta que se complete el reempaquetado. La importaci&amp;oacute;n r&amp;aacute;pida produce archivos de paquetes sub&amp;oacute;ptimos que simplemente nunca se ven en situaciones de uso real.</target>
        </trans-unit>
        <trans-unit id="db9a66177c2b117d0740a2ed1a511dcc1bea6811" translate="yes" xml:space="preserve">
          <source>If you decide that you&amp;rsquo;d rather see version 2.6.17, you can modify the current branch to point at v2.6.17 instead, with</source>
          <target state="translated">Si decide que prefiere ver la versi&amp;oacute;n 2.6.17, puede modificar la rama actual para que apunte a v2.6.17 en su lugar, con</target>
        </trans-unit>
        <trans-unit id="c943de9e92fabf055b174eed9b10ced62cf6d401" translate="yes" xml:space="preserve">
          <source>If you decide you want the history back, you can always create a new reference pointing to it, for example, a new branch:</source>
          <target state="translated">Si decides que quieres recuperar la historia,siempre puedes crear una nueva referencia que apunte a ella,por ejemplo,una nueva rama:</target>
        </trans-unit>
        <trans-unit id="1f288af5e76ef5a4f231f5810c9960b284e03991" translate="yes" xml:space="preserve">
          <source>If you develop on a branch crazy-idea, then regret it, you can always delete the branch with</source>
          <target state="translated">Si desarrollas una idea loca de una rama,entonces arrepiéntete,siempre puedes borrar la rama con</target>
        </trans-unit>
        <trans-unit id="6d7822c644d713e2101d339a30a68a502f988e1b" translate="yes" xml:space="preserve">
          <source>If you didn&amp;rsquo;t specify the CVSROOT/CVS_SERVER directly in the checkout command, automatically saving it in your &lt;code&gt;CVS/Root&lt;/code&gt; files, then you need to set them explicitly in your environment. CVSROOT should be set as per normal, but the directory should point at the appropriate Git repo. As above, for SSH clients &lt;code&gt;not&lt;/code&gt; restricted to &lt;code&gt;git-shell&lt;/code&gt;, CVS_SERVER should be set to &lt;code&gt;git-cvsserver&lt;/code&gt;.</source>
          <target state="translated">Si no especific&amp;oacute; CVSROOT / CVS_SERVER directamente en el comando checkout, guard&amp;aacute;ndolo autom&amp;aacute;ticamente en sus archivos &lt;code&gt;CVS/Root&lt;/code&gt; , entonces debe configurarlos expl&amp;iacute;citamente en su entorno. CVSROOT debe configurarse como de costumbre, pero el directorio debe apuntar al repositorio de Git apropiado. Como se indic&amp;oacute; anteriormente, para los clientes SSH &lt;code&gt;not&lt;/code&gt; restringidos a &lt;code&gt;git-shell&lt;/code&gt; , CVS_SERVER debe configurarse como &lt;code&gt;git-cvsserver&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="467e5efa7fe7a25688df5c19177b2c4b9a971487" translate="yes" xml:space="preserve">
          <source>If you discover that you made a mistake in specifying the status of a revision, you can save the output of this command to a file, edit it to remove the incorrect entries, and then issue the following commands to return to a corrected state:</source>
          <target state="translated">Si descubre que cometió un error al especificar el estado de una revisión,puede guardar la salida de este comando en un archivo,editarlo para eliminar las entradas incorrectas y luego emitir los siguientes comandos para volver a un estado corregido:</target>
        </trans-unit>
        <trans-unit id="fdb535b3114700ba9158b47e1cadbbb4ffee0391" translate="yes" xml:space="preserve">
          <source>If you do merge, note the following rule: &lt;code&gt;git svn dcommit&lt;/code&gt; will attempt to commit on top of the SVN commit named in</source>
          <target state="translated">Si fusiona, tenga en cuenta la siguiente regla: &lt;code&gt;git svn dcommit&lt;/code&gt; intentar&amp;aacute; confirmar sobre la confirmaci&amp;oacute;n SVN nombrada en</target>
        </trans-unit>
        <trans-unit id="d7d53a76c809507d4642710878a2561fe720cf02" translate="yes" xml:space="preserve">
          <source>If you do not have &lt;code&gt;mod_rewrite&lt;/code&gt; available to match against the query string, it is sufficient to just protect &lt;code&gt;git-receive-pack&lt;/code&gt; itself, like:</source>
          <target state="translated">Si no tiene &lt;code&gt;mod_rewrite&lt;/code&gt; disponible para que coincida con la cadena de consulta, es suficiente con proteger &lt;code&gt;git-receive-pack&lt;/code&gt; en s&amp;iacute;, como:</target>
        </trans-unit>
        <trans-unit id="61817ad83cf40051c64b68562493dd77ca2fe6f8" translate="yes" xml:space="preserve">
          <source>If you do not have this configuration variable, the value of &lt;code&gt;i18n.commitEncoding&lt;/code&gt; is used instead.</source>
          <target state="translated">Si no tiene esta variable de configuraci&amp;oacute;n, en su &lt;code&gt;i18n.commitEncoding&lt;/code&gt; se utiliza el valor de i18n.commitEncoding .</target>
        </trans-unit>
        <trans-unit id="14f3fbb24beba0c7fa85b6385a5b3979968f4593" translate="yes" xml:space="preserve">
          <source>If you do not know the encoding of a file, then you can use the &lt;code&gt;file&lt;/code&gt; command to guess the encoding:</source>
          <target state="translated">Si no conoce la codificaci&amp;oacute;n de un archivo, puede usar el comando de &lt;code&gt;file&lt;/code&gt; para adivinar la codificaci&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="371074e4db6e9a2527bbe63c09ef576231a57ee5" translate="yes" xml:space="preserve">
          <source>If you do not want this feature on your server just remove the second rewrite rule.</source>
          <target state="translated">Si no quieres esta característica en tu servidor sólo tienes que eliminar la segunda regla de reescritura.</target>
        </trans-unit>
        <trans-unit id="b68a865397b0b847cde7a3d94bca4e3b8a2b1c61" translate="yes" xml:space="preserve">
          <source>If you do not want to lose your work (history from X to B) or the work by the other person (history from X to A), you would need to first fetch the history from the repository, create a history that contains changes done by both parties, and push the result back.</source>
          <target state="translated">Si no quiere perder su trabajo (historial de X a B)o el trabajo de la otra persona (historial de X a A),tendría que recuperar primero el historial del depósito,crear un historial que contenga los cambios realizados por ambas partes y devolver el resultado.</target>
        </trans-unit>
        <trans-unit id="86c596eda084e162303624098fd515841984d889" translate="yes" xml:space="preserve">
          <source>If you do this, then you should make a public announcement indicating that &lt;code&gt;next&lt;/code&gt; was rewound and rebuilt.</source>
          <target state="translated">Si hace esto, debe hacer un anuncio p&amp;uacute;blico que indique que el &lt;code&gt;next&lt;/code&gt; fue rebobinado y reconstruido.</target>
        </trans-unit>
        <trans-unit id="325a3c2222e4d4aaa5c937ccab45f34c95352c49" translate="yes" xml:space="preserve">
          <source>If you don&amp;rsquo;t want to continue with that right away, a few other digressions that may be interesting at this point are:</source>
          <target state="translated">Si no desea continuar con eso de inmediato, algunas otras digresiones que pueden ser interesantes en este punto son:</target>
        </trans-unit>
        <trans-unit id="bf36326b8dfc35954574299040bce7c304964cb4" translate="yes" xml:space="preserve">
          <source>If you enable PATH_INFO usage in gitweb by putting</source>
          <target state="translated">Si habilitas el uso de PATH_INFO en gitweb poniendo</target>
        </trans-unit>
        <trans-unit id="3e267e16654424679545d579a56c2fc25a567700" translate="yes" xml:space="preserve">
          <source>If you examine the file &lt;code&gt;.git/config&lt;/code&gt;, you will see that Git has added a new stanza:</source>
          <target state="translated">Si examina el archivo &lt;code&gt;.git/config&lt;/code&gt; , ver&amp;aacute; que Git ha agregado una nueva estrofa:</target>
        </trans-unit>
        <trans-unit id="adaf459f23d870ce117760016108b7b8ca67ba63" translate="yes" xml:space="preserve">
          <source>If you examine the resulting commit using gitk, you will see that it has two parents, one pointing to the top of the current branch, and one to the top of the other branch.</source>
          <target state="translated">Si examinas el commit resultante usando gitk,verás que tiene dos padres,uno apuntando a la parte superior de la rama actual,y otro a la parte superior de la otra rama.</target>
        </trans-unit>
        <trans-unit id="f87315138be947ec0afa0ac1351920e4dfe2a0c2" translate="yes" xml:space="preserve">
          <source>If you find some reason to set this option to &lt;code&gt;false&lt;/code&gt;, other than one-off testing, you should report the behavior difference as a bug in Git (see &lt;a href=&quot;https://git-scm.com/community&quot;&gt;https://git-scm.com/community&lt;/a&gt; for details).</source>
          <target state="translated">Si encuentra alguna raz&amp;oacute;n para establecer esta opci&amp;oacute;n en &lt;code&gt;false&lt;/code&gt; , que no sea una prueba &amp;uacute;nica, debe informar la diferencia de comportamiento como un error en Git (consulte &lt;a href=&quot;https://git-scm.com/community&quot;&gt;https://git-scm.com/community&lt;/a&gt; para obtener m&amp;aacute;s detalles).</target>
        </trans-unit>
        <trans-unit id="73749649a005053153ee8a2fa11f927ee43ebec2" translate="yes" xml:space="preserve">
          <source>If you find that some maintenance windows are taking longer than one hour to complete, then consider reducing the complexity of your maintenance tasks. For example, the &lt;code&gt;gc&lt;/code&gt; task is much slower than the &lt;code&gt;incremental-repack&lt;/code&gt; task. However, this comes at a cost of a slightly larger object database. Consider moving more expensive tasks to be run less frequently.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbcb62743d9f0aa650833d05c94c3e3db4eb4e0d" translate="yes" xml:space="preserve">
          <source>If you find you forked off the wrong branch and want to move it &quot;back in time&quot;, use &lt;a href=&quot;git-rebase&quot;&gt;git-rebase[1]&lt;/a&gt;.</source>
          <target state="translated">Si encuentra que se bifurc&amp;oacute; en la rama incorrecta y quiere moverla &quot;hacia atr&amp;aacute;s en el tiempo&quot;, use &lt;a href=&quot;git-rebase&quot;&gt;git-rebase [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="12cef549aa55079a651285c652b78bc4bc8af80c" translate="yes" xml:space="preserve">
          <source>If you find you need new features from the branch &lt;code&gt;other&lt;/code&gt; to continue working on your topic, merge &lt;code&gt;other&lt;/code&gt; to &lt;code&gt;topic&lt;/code&gt;. (However, do not do this &quot;just habitually&quot;, see below.)</source>
          <target state="translated">Si encuentra que necesita nuevas funciones de la rama &lt;code&gt;other&lt;/code&gt; para continuar trabajando en su tema, combine &lt;code&gt;other&lt;/code&gt; con el &lt;code&gt;topic&lt;/code&gt; . (Sin embargo, no haga esto &quot;solo habitualmente&quot;, consulte a continuaci&amp;oacute;n).</target>
        </trans-unit>
        <trans-unit id="c89cdceb268014744fee40998409a87331a70cef" translate="yes" xml:space="preserve">
          <source>If you followed the last paragraph, you will now have many small topic branches, and occasionally wonder how they interact. Perhaps the result of merging them does not even work? But on the other hand, we want to avoid merging them anywhere &quot;stable&quot; because such merges cannot easily be undone.</source>
          <target state="translated">Si siguieron el último párrafo,ahora tendrán muchas pequeñas ramas temáticas,y ocasionalmente se preguntan cómo interactúan.¿Quizás el resultado de fusionarlas ni siquiera funciona? Pero por otro lado,queremos evitar fusionarlas en cualquier lugar &quot;estable&quot; porque tales fusiones no pueden deshacerse fácilmente.</target>
        </trans-unit>
        <trans-unit id="f8ccc691fa447494e794dd8643eee96c05ab0ca5" translate="yes" xml:space="preserve">
          <source>If you get stuck and decide to just give up and throw the whole mess away, you can always return to the pre-merge state with</source>
          <target state="translated">Si te quedas atascado y decides rendirte y tirar todo el desorden,siempre puedes volver al estado anterior a la fusión con</target>
        </trans-unit>
        <trans-unit id="8d7c02e3dd22e344be3301eb8a2278c07f5b614c" translate="yes" xml:space="preserve">
          <source>If you grasp the ideas in that initial commit, you should check out a more recent version and skim &lt;code&gt;cache.h&lt;/code&gt;, &lt;code&gt;object.h&lt;/code&gt; and &lt;code&gt;commit.h&lt;/code&gt;.</source>
          <target state="translated">Si captar las ideas en que se comprometen inicial, que debe salir una versi&amp;oacute;n m&amp;aacute;s reciente y descremada &lt;code&gt;cache.h&lt;/code&gt; , &lt;code&gt;object.h&lt;/code&gt; y &lt;code&gt;commit.h&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b91c4875b14e285ca788a5bd5edf75dfcd9633ab" translate="yes" xml:space="preserve">
          <source>If you have a clone of git.git itself, the output of &lt;a href=&quot;git-shortlog&quot;&gt;git-shortlog[1]&lt;/a&gt; and &lt;a href=&quot;git-blame&quot;&gt;git-blame[1]&lt;/a&gt; can show you the authors for specific parts of the project.</source>
          <target state="translated">Si tiene un clon de git.git en s&amp;iacute;, la salida de &lt;a href=&quot;git-shortlog&quot;&gt;git-shortlog [1]&lt;/a&gt; y &lt;a href=&quot;git-blame&quot;&gt;git-blame [1]&lt;/a&gt; puede mostrarle los autores de partes espec&amp;iacute;ficas del proyecto.</target>
        </trans-unit>
        <trans-unit id="d76da65add1ab668fa52a438912f17a42719fc64" translate="yes" xml:space="preserve">
          <source>If you have a repository where all the branches of interest exist as subdirectories of a single depot path, you can use &lt;code&gt;--detect-branches&lt;/code&gt; when cloning or syncing to have &lt;code&gt;git p4&lt;/code&gt; automatically find subdirectories in p4, and to generate these as branches in Git.</source>
          <target state="translated">Si tiene un repositorio donde todas las ramas de inter&amp;eacute;s existen como subdirectorios de una &amp;uacute;nica ruta de dep&amp;oacute;sito, puede usar &lt;code&gt;--detect-branches&lt;/code&gt; al clonar o sincronizar para que &lt;code&gt;git p4&lt;/code&gt; encuentre autom&amp;aacute;ticamente subdirectorios en p4 y los genere como ramas en Git .</target>
        </trans-unit>
        <trans-unit id="0a6081c46922db10b6bc6f47a7f76b221a6196d2" translate="yes" xml:space="preserve">
          <source>If you have a script that can tell if the current source code is good or bad, you can bisect by issuing the command:</source>
          <target state="translated">Si tienes un script que puede decir si el código fuente actual es bueno o malo,puedes bisecar emitiendo el comando:</target>
        </trans-unit>
        <trans-unit id="863f4e57810f45268a83fecc8614e1be7d434564" translate="yes" xml:space="preserve">
          <source>If you have added attributes to a file that cause the canonical repository format for that file to change, such as adding a clean/smudge filter or text/eol/ident attributes, merging anything where the attribute is not in place would normally cause merge conflicts.</source>
          <target state="translated">Si ha añadido atributos a un archivo que hacen que el formato del repositorio canónico de ese archivo cambie,como añadir un filtro clean/smudge o atributos text/eol/ident,fusionar cualquier cosa en la que el atributo no esté en su sitio normalmente causaría conflictos de fusión.</target>
        </trans-unit>
        <trans-unit id="0176ab2e378e3df6f1e24b7af5113bcd1e2d5987" translate="yes" xml:space="preserve">
          <source>If you have an old Git that does not understand the version 2 &lt;code&gt;*.idx&lt;/code&gt; file, cloning or fetching over a non native protocol (e.g. &quot;http&quot;) that will copy both &lt;code&gt;*.pack&lt;/code&gt; file and corresponding &lt;code&gt;*.idx&lt;/code&gt; file from the other side may give you a repository that cannot be accessed with your older version of Git. If the &lt;code&gt;*.pack&lt;/code&gt; file is smaller than 2 GB, however, you can use &lt;a href=&quot;git-index-pack&quot;&gt;git-index-pack[1]&lt;/a&gt; on the *.pack file to regenerate the &lt;code&gt;*.idx&lt;/code&gt; file.</source>
          <target state="translated">Si usted tiene un viejo Git que no entiende la versi&amp;oacute;n 2 &lt;code&gt;*.idx&lt;/code&gt; archivo, la clonaci&amp;oacute;n o ir a buscar a trav&amp;eacute;s de un protocolo no nativo (por ejemplo, &quot;http&quot;) que copiar&amp;aacute; tanto &lt;code&gt;*.pack&lt;/code&gt; archivo y que corresponde &lt;code&gt;*.idx&lt;/code&gt; archivo desde el otro lado puede proporcionarle un repositorio al que no se puede acceder con su versi&amp;oacute;n anterior de Git. Sin embargo, si el archivo &lt;code&gt;*.pack&lt;/code&gt; tiene menos de 2 GB, puede usar &lt;a href=&quot;git-index-pack&quot;&gt;git-index-pack [1]&lt;/a&gt; en el archivo * .pack para regenerar el archivo &lt;code&gt;*.idx&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1c4d7bfb0f77357b6cf0e14e83f75e3ad3892e2a" translate="yes" xml:space="preserve">
          <source>If you have an unfortunate branch that is named &lt;code&gt;hello.c&lt;/code&gt;, this step would be confused as an instruction to switch to that branch. You should instead write:</source>
          <target state="translated">Si tiene una rama desafortunada que se llama &lt;code&gt;hello.c&lt;/code&gt; , este paso se confundir&amp;iacute;a con una instrucci&amp;oacute;n para cambiar a esa rama. En su lugar, deber&amp;iacute;a escribir:</target>
        </trans-unit>
        <trans-unit id="6748330dc78a7c7da8f6ed8d92c497a5f2638cdd" translate="yes" xml:space="preserve">
          <source>If you have imported some changes from another VCS and would like to add tags for major releases of your work, it is useful to be able to specify the date to embed inside of the tag object; such data in the tag object affects, for example, the ordering of tags in the gitweb interface.</source>
          <target state="translated">Si ha importado algunos cambios de otro VCS y desea añadir etiquetas para las principales versiones de su trabajo,es útil poder especificar la fecha que se incrustará en el objeto de la etiqueta;esos datos en el objeto de la etiqueta afectan,por ejemplo,al orden de las etiquetas en la interfaz gitweb.</target>
        </trans-unit>
        <trans-unit id="d87d691ee6c65f8321e66034d85f79793605b8a9" translate="yes" xml:space="preserve">
          <source>If you have local modifications to one or more files that are different between the current branch and the branch to which you are switching, the command refuses to switch branches in order to preserve your modifications in context. However, with this option, a three-way merge between the current branch, your working tree contents, and the new branch is done, and you will be on the new branch.</source>
          <target state="translated">Si tiene modificaciones locales en uno o más archivos que son diferentes entre la rama actual y la rama a la que está cambiando,el comando se niega a cambiar de rama para preservar sus modificaciones en el contexto.Sin embargo,con esta opción,se realiza una fusión a tres bandas entre la rama actual,el contenido de su árbol de trabajo y la nueva rama,y usted estará en la nueva rama.</target>
        </trans-unit>
        <trans-unit id="8478bf298413f91bee793cf9d5101299eaa200bd" translate="yes" xml:space="preserve">
          <source>If you have multifactor authentication setup on your gmail account, you will need to generate an app-specific password for use with &lt;code&gt;git send-email&lt;/code&gt;. Visit &lt;a href=&quot;https://security.google.com/settings/security/apppasswords&quot;&gt;https://security.google.com/settings/security/apppasswords&lt;/a&gt; to create it.</source>
          <target state="translated">Si tiene configurada la autenticaci&amp;oacute;n multifactor en su cuenta de Gmail, deber&amp;aacute; generar una contrase&amp;ntilde;a espec&amp;iacute;fica de la aplicaci&amp;oacute;n para usar con &lt;code&gt;git send-email&lt;/code&gt; . Visite &lt;a href=&quot;https://security.google.com/settings/security/apppasswords&quot;&gt;https://security.google.com/settings/security/apppasswords&lt;/a&gt; para crearlo.</target>
        </trans-unit>
        <trans-unit id="a8709177c278b5c18333d173ba933d08e65c6841" translate="yes" xml:space="preserve">
          <source>If you have some initial content (say, a tarball):</source>
          <target state="translated">Si tienes algún contenido inicial (digamos,una bola de alquitrán):</target>
        </trans-unit>
        <trans-unit id="495e5ec3bcea1de47c24c2073588d5c3b0cf061c" translate="yes" xml:space="preserve">
          <source>If you have these three &lt;code&gt;gitattributes&lt;/code&gt; file:</source>
          <target state="translated">Si tiene estos tres archivos &lt;code&gt;gitattributes&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="8c8ea948fec03c8051df6ee29e66dada48224b15" translate="yes" xml:space="preserve">
          <source>If you have uncommitted changes in your submodule working tree, &lt;code&gt;git
submodule update&lt;/code&gt; will not overwrite them. Instead, you get the usual warning about not being able switch from a dirty branch.</source>
          <target state="translated">Si tiene cambios no confirmados en el &amp;aacute;rbol de trabajo de su subm&amp;oacute;dulo, la &lt;code&gt;git submodule update&lt;/code&gt; no los sobrescribir&amp;aacute;. En su lugar, recibe la advertencia habitual sobre no poder cambiar de una rama sucia.</target>
        </trans-unit>
        <trans-unit id="8d0e9d461fd9a2a62902f7fa232c913269bc56dd" translate="yes" xml:space="preserve">
          <source>If you haven&amp;rsquo;t specified an editor specifically for Git, it will by default use the editor you&amp;rsquo;ve configured using the &lt;code&gt;VISUAL&lt;/code&gt; or &lt;code&gt;EDITOR&lt;/code&gt; environment variables, or if neither is specified, the system default (which is usually &lt;code&gt;vi&lt;/code&gt;). Since some people find &lt;code&gt;vi&lt;/code&gt; difficult to use or prefer a different editor, it may be desirable to change the editor used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ccda3cb1e710a989feb173887174c1818fd9d4a" translate="yes" xml:space="preserve">
          <source>If you intend that your next commit should record all modifications of tracked files in the working tree and record all removals of files that have been removed from the working tree with &lt;code&gt;rm&lt;/code&gt; (as opposed to &lt;code&gt;git rm&lt;/code&gt;), use &lt;code&gt;git commit -a&lt;/code&gt;, as it will automatically notice and record all removals. You can also have a similar effect without committing by using &lt;code&gt;git add -u&lt;/code&gt;.</source>
          <target state="translated">Si tiene la intenci&amp;oacute;n de que su pr&amp;oacute;xima confirmaci&amp;oacute;n debe registrar todas las modificaciones de los archivos rastreados en el &amp;aacute;rbol de trabajo y registrar todas las eliminaciones de archivos que se han eliminado del &amp;aacute;rbol de trabajo con &lt;code&gt;rm&lt;/code&gt; (a diferencia de &lt;code&gt;git rm&lt;/code&gt; ), use &lt;code&gt;git commit -a&lt;/code&gt; , ya que notar&amp;aacute; y registrar&amp;aacute; autom&amp;aacute;ticamente todas las eliminaciones. Tambi&amp;eacute;n puede tener un efecto similar sin comprometerse usando &lt;code&gt;git add -u&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5223949abb561108f8606da60ebd3c3b78a9872c" translate="yes" xml:space="preserve">
          <source>If you intend to set up a shared public repository that all developers can read/write, or if you want to use &lt;a href=&quot;git-cvsserver&quot;&gt;git-cvsserver[1]&lt;/a&gt;, then you probably want to make a bare clone of the imported repository, and use the clone as the shared repository. See &lt;a href=&quot;gitcvs-migration&quot;&gt;gitcvs-migration[7]&lt;/a&gt;.</source>
          <target state="translated">Si tiene la intenci&amp;oacute;n de configurar un repositorio p&amp;uacute;blico compartido que todos los desarrolladores puedan leer / escribir, o si desea usar &lt;a href=&quot;git-cvsserver&quot;&gt;git-cvsserver [1]&lt;/a&gt; , entonces probablemente desee hacer un clon b&amp;aacute;sico del repositorio importado y usar el clon como el repositorio compartido. Consulte &lt;a href=&quot;gitcvs-migration&quot;&gt;gitcvs-migration [7]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1e8fe75eb0be8caf3b1c84cce78f8d98c5c3831c" translate="yes" xml:space="preserve">
          <source>If you just have a few changes, the simplest way to submit them may just be to send them as patches in email:</source>
          <target state="translated">Si sólo tienes unos pocos cambios,la forma más sencilla de enviarlos puede ser enviándolos como parches en el correo electrónico:</target>
        </trans-unit>
        <trans-unit id="c3509063d9c8d28fc350d64af9974d7f7ad07d9f" translate="yes" xml:space="preserve">
          <source>If you just need to use Git as a revision control system you may prefer to start with &quot;A Tutorial Introduction to Git&quot; (&lt;a href=&quot;gittutorial&quot;&gt;gittutorial[7]&lt;/a&gt;) or &lt;a href=&quot;user-manual&quot;&gt;the Git User Manual&lt;/a&gt;.</source>
          <target state="translated">Si solo necesita usar Git como un sistema de control de revisiones, es posible que prefiera comenzar con &quot;Un tutorial de introducci&amp;oacute;n a Git&quot; ( &lt;a href=&quot;gittutorial&quot;&gt;gittutorial [7]&lt;/a&gt; ) o &lt;a href=&quot;user-manual&quot;&gt;el Manual de usuario de Git&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6a839fbf210e306e2136c31f2a968baa357075d1" translate="yes" xml:space="preserve">
          <source>If you just want to edit the commit message for a commit, replace the command &quot;pick&quot; with the command &quot;reword&quot;.</source>
          <target state="translated">Si sólo quieres editar el mensaje de confirmación para una confirmación,reemplaza el comando &quot;pick&quot; con el comando &quot;reword&quot;.</target>
        </trans-unit>
        <trans-unit id="1a22bf44debddb2b1654740b48fdcb88c27e49eb" translate="yes" xml:space="preserve">
          <source>If you just want to get the newest copies of the integration branches, staying up to date is easy too:</source>
          <target state="translated">Si sólo quieres obtener las copias más recientes de las ramas de integración,estar al día también es fácil:</target>
        </trans-unit>
        <trans-unit id="5a13a90084d33cb33125eb2c50fff6e07ce8c0d9" translate="yes" xml:space="preserve">
          <source>If you just want to look at an old version of the file, without modifying the working directory, you can do that with &lt;a href=&quot;git-show&quot;&gt;git-show[1]&lt;/a&gt;:</source>
          <target state="translated">Si solo desea ver una versi&amp;oacute;n anterior del archivo, sin modificar el directorio de trabajo, puede hacerlo con &lt;a href=&quot;git-show&quot;&gt;git-show [1]&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="5af7e34f55f5a635b889f9cb9a1ef742b6e402c4" translate="yes" xml:space="preserve">
          <source>If you just want to run git as if it was started in &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt; then use &lt;code&gt;git -C &amp;lt;path&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68f30cb563d71e3909ec492d5d34c92facf1030b" translate="yes" xml:space="preserve">
          <source>If you just want to verify whether a given tagged version contains a given commit, you could use &lt;a href=&quot;git-merge-base&quot;&gt;git-merge-base[1]&lt;/a&gt;:</source>
          <target state="translated">Si solo desea verificar si una versi&amp;oacute;n etiquetada determinada contiene una confirmaci&amp;oacute;n determinada, puede usar &lt;a href=&quot;git-merge-base&quot;&gt;git-merge-base [1]&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="d8a6261ebe4a4d52d4d9a2234a54f319605d4abc" translate="yes" xml:space="preserve">
          <source>If you keep your primary branches immediately under &lt;code&gt;refs/heads&lt;/code&gt;, and topic branches in subdirectories of it, having the following in the configuration file may help:</source>
          <target state="translated">Si mantiene sus ramas primarias inmediatamente bajo &lt;code&gt;refs/heads&lt;/code&gt; y las ramas tem&amp;aacute;ticas en sus subdirectorios, tener lo siguiente en el archivo de configuraci&amp;oacute;n puede ayudar:</target>
        </trans-unit>
        <trans-unit id="933889a0268ded50e3304543b4e7167783337a6d" translate="yes" xml:space="preserve">
          <source>If you know beforehand more than one good commit, you can narrow the bisect space down by specifying all of the good commits immediately after the bad commit when issuing the &lt;code&gt;bisect start&lt;/code&gt; command:</source>
          <target state="translated">Si conoce de antemano m&amp;aacute;s de una confirmaci&amp;oacute;n buena, puede reducir el espacio de bisecci&amp;oacute;n especificando todas las confirmaciones buenas inmediatamente despu&amp;eacute;s de la confirmaci&amp;oacute;n incorrecta al emitir el comando &lt;code&gt;bisect start&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="0d0efb22e26170e5f6a2a2c939fcf419b948a8aa" translate="yes" xml:space="preserve">
          <source>If you know up to what commit the intended recipient repository should have the necessary objects, you can use that knowledge to specify the basis, giving a cut-off point to limit the revisions and objects that go in the resulting bundle. The previous example used the lastR2bundle tag for this purpose, but you can use any other options that you would give to the &lt;a href=&quot;git-log&quot;&gt;git-log[1]&lt;/a&gt; command. Here are more examples:</source>
          <target state="translated">Si sabe hasta qu&amp;eacute; confirmaci&amp;oacute;n el repositorio de destinatarios previsto debe tener los objetos necesarios, puede utilizar ese conocimiento para especificar la base, dando un punto de corte para limitar las revisiones y los objetos que van en el paquete resultante. El ejemplo anterior us&amp;oacute; la etiqueta lastR2bundle para este prop&amp;oacute;sito, pero puede usar cualquier otra opci&amp;oacute;n que le d&amp;eacute; al comando &lt;a href=&quot;git-log&quot;&gt;git-log [1]&lt;/a&gt; . Aqu&amp;iacute; hay m&amp;aacute;s ejemplos:</target>
        </trans-unit>
        <trans-unit id="6178dcf6380091f437345048b81ae6acd9e3fdb2" translate="yes" xml:space="preserve">
          <source>If you leave out the commit name, &lt;code&gt;git grep&lt;/code&gt; will search any of the files it manages in your current directory. So</source>
          <target state="translated">Si omite el nombre de confirmaci&amp;oacute;n, &lt;code&gt;git grep&lt;/code&gt; buscar&amp;aacute; cualquiera de los archivos que administra en su directorio actual. Entonces</target>
        </trans-unit>
        <trans-unit id="1d3a773743dd2af35a158be46f7bad29aaa6f592" translate="yes" xml:space="preserve">
          <source>If you like to live dangerously, you can replace &lt;strong&gt;all&lt;/strong&gt; core.gitproxy by a new one with</source>
          <target state="translated">Si te gusta vivir peligrosamente, puedes reemplazar &lt;strong&gt;todo&lt;/strong&gt; core.gitproxy por uno nuevo con</target>
        </trans-unit>
        <trans-unit id="9bff9b22c3bcd9cedd5449471391b1cdf79647bb" translate="yes" xml:space="preserve">
          <source>If you make a commit and then find a mistake immediately after that, you can recover from it with &lt;code&gt;git reset&lt;/code&gt;.</source>
          <target state="translated">Si realiza una confirmaci&amp;oacute;n y luego encuentra un error inmediatamente despu&amp;eacute;s de eso, puede recuperarse con &lt;code&gt;git reset&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="de1cbbe8d26471b895b54a3d07b205ed1595e0f4" translate="yes" xml:space="preserve">
          <source>If you make a commit that you later wish you hadn&amp;rsquo;t, there are two fundamentally different ways to fix the problem:</source>
          <target state="translated">Si realiza una confirmaci&amp;oacute;n que luego desear&amp;iacute;a no haber hecho, hay dos formas fundamentalmente diferentes de solucionar el problema:</target>
        </trans-unit>
        <trans-unit id="99ec09f13fb1346102b0f372f091bd234e630539" translate="yes" xml:space="preserve">
          <source>If you make it (very) clear that this branch is going to be deleted right after the testing, you can even publish this branch, for example to give the testers a chance to work with it, or other developers a chance to see if their in-progress work will be compatible. &lt;code&gt;git.git&lt;/code&gt; has such an official throw-away integration branch called &lt;code&gt;pu&lt;/code&gt;.</source>
          <target state="translated">Si deja (muy) claro que esta rama se eliminar&amp;aacute; inmediatamente despu&amp;eacute;s de la prueba, puede incluso publicar esta rama, por ejemplo, para darles a los probadores la oportunidad de trabajar con ella u otros desarrolladores la oportunidad de ver si su el trabajo en curso ser&amp;aacute; compatible. &lt;code&gt;git.git&lt;/code&gt; tiene una rama de integraci&amp;oacute;n oficial y desechable llamada &lt;code&gt;pu&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2711d396bb29a520681068259bdc58e0b9b32fcb" translate="yes" xml:space="preserve">
          <source>If you make it (very) clear that this branch is going to be deleted right after the testing, you can even publish this branch, for example to give the testers a chance to work with it, or other developers a chance to see if their in-progress work will be compatible. &lt;code&gt;git.git&lt;/code&gt; has such an official throw-away integration branch called &lt;code&gt;seen&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d532db8eaaa16fed286ca601d3c879ce0db79d29" translate="yes" xml:space="preserve">
          <source>If you make the decision to start your new branch at some other point in the history than the current &lt;code&gt;HEAD&lt;/code&gt;, you can do so by just telling &lt;code&gt;git checkout&lt;/code&gt; what the base of the checkout would be. In other words, if you have an earlier tag or branch, you&amp;rsquo;d just do</source>
          <target state="translated">Si toma la decisi&amp;oacute;n de comenzar su nueva rama en alg&amp;uacute;n otro punto del historial que no sea el &lt;code&gt;HEAD&lt;/code&gt; actual , puede hacerlo simplemente dici&amp;eacute;ndole a &lt;code&gt;git checkout&lt;/code&gt; cu&amp;aacute;l ser&amp;iacute;a la base del pago. En otras palabras, si tiene una etiqueta o rama anterior, simplemente har&amp;iacute;a</target>
        </trans-unit>
        <trans-unit id="9f31f9c748a9e0ffbef8f11bc85a6ff4ec5b3e8d" translate="yes" xml:space="preserve">
          <source>If you make the decision to start your new branch at some other point in the history than the current &lt;code&gt;HEAD&lt;/code&gt;, you can do so by just telling &lt;code&gt;git switch&lt;/code&gt; what the base of the checkout would be. In other words, if you have an earlier tag or branch, you&amp;rsquo;d just do</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef318d408cfc2262e9ecdfec6313bac5c50bc49a" translate="yes" xml:space="preserve">
          <source>If you manually move a linked working tree, you need to update the &lt;code&gt;gitdir&lt;/code&gt; file in the entry&amp;rsquo;s directory. For example, if a linked working tree is moved to &lt;code&gt;/newpath/test-next&lt;/code&gt; and its &lt;code&gt;.git&lt;/code&gt; file points to &lt;code&gt;/path/main/.git/worktrees/test-next&lt;/code&gt;, then update &lt;code&gt;/path/main/.git/worktrees/test-next/gitdir&lt;/code&gt; to reference &lt;code&gt;/newpath/test-next&lt;/code&gt; instead.</source>
          <target state="translated">Si mueve manualmente un &amp;aacute;rbol de trabajo vinculado, debe actualizar el archivo &lt;code&gt;gitdir&lt;/code&gt; en el directorio de la entrada. Por ejemplo, si un &amp;aacute;rbol de trabajo vinculado se mueve a &lt;code&gt;/newpath/test-next&lt;/code&gt; y su archivo &lt;code&gt;.git&lt;/code&gt; apunta a &lt;code&gt;/path/main/.git/worktrees/test-next&lt;/code&gt; , entonces actualice &lt;code&gt;/path/main/.git/worktrees/test-next/gitdir&lt;/code&gt; para hacer referencia a &lt;code&gt;/newpath/test-next&lt;/code&gt; en su lugar.</target>
        </trans-unit>
        <trans-unit id="0359d10c71e55182679347b30eaf723b449ffc8c" translate="yes" xml:space="preserve">
          <source>If you manually move a linked working tree, you need to update the &lt;code&gt;gitdir&lt;/code&gt; file in the entry&amp;rsquo;s directory. For example, if a linked working tree is moved to &lt;code&gt;/newpath/test-next&lt;/code&gt; and its &lt;code&gt;.git&lt;/code&gt; file points to &lt;code&gt;/path/main/.git/worktrees/test-next&lt;/code&gt;, then update &lt;code&gt;/path/main/.git/worktrees/test-next/gitdir&lt;/code&gt; to reference &lt;code&gt;/newpath/test-next&lt;/code&gt; instead. Better yet, run &lt;code&gt;git worktree repair&lt;/code&gt; to reestablish the connection automatically.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb87bde3a880515ee52eb5a157ecf80cef103126" translate="yes" xml:space="preserve">
          <source>If you mistakenly drop or clear stash entries, they cannot be recovered through the normal safety mechanisms. However, you can try the following incantation to get a list of stash entries that are still in your repository, but not reachable any more:</source>
          <target state="translated">Si por error dejas caer o despejas las entradas del escondite,no se pueden recuperar a través de los mecanismos de seguridad normales.Sin embargo,puede intentar el siguiente conjuro para obtener una lista de las entradas de alijo que aún están en su depósito,pero que ya no se pueden alcanzar:</target>
        </trans-unit>
        <trans-unit id="110b0b8058519e9efd87b798163b83180b4fd090" translate="yes" xml:space="preserve">
          <source>If you need to add &lt;code&gt;Acked-by&lt;/code&gt; lines to, say, the last 10 commits (none of which is a merge), use this command:</source>
          <target state="translated">Si necesita agregar l&amp;iacute;neas &lt;code&gt;Acked-by&lt;/code&gt; a, digamos, las &amp;uacute;ltimas 10 confirmaciones (ninguna de las cuales es una combinaci&amp;oacute;n), use este comando:</target>
        </trans-unit>
        <trans-unit id="a06310bf48a43d3f06d75e4fe748345a055d13a9" translate="yes" xml:space="preserve">
          <source>If you need to amend commits from deeper in your history, you can use &lt;a href=&quot;#interactive-rebase&quot;&gt;interactive rebase&amp;rsquo;s &lt;code&gt;edit&lt;/code&gt; instruction&lt;/a&gt;.</source>
          <target state="translated">Si necesita modificar las confirmaciones m&amp;aacute;s profundas de su historial, puede utilizar &lt;a href=&quot;#interactive-rebase&quot;&gt;la instrucci&amp;oacute;n de &lt;code&gt;edit&lt;/code&gt; de rebase interactivo&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f26f13a2edb916f980bf0b233ef42611b499ae1c" translate="yes" xml:space="preserve">
          <source>If you need to make any further adjustments, do so now, and then add any newly modified content to the index. Finally, commit your changes with:</source>
          <target state="translated">Si necesita hacer más ajustes,hágalo ahora y luego agregue cualquier contenido recién modificado al índice.Finalmente,confirme sus cambios con:</target>
        </trans-unit>
        <trans-unit id="b7346c069533043ab7106064793cec780b496e9d" translate="yes" xml:space="preserve">
          <source>If you need to pass multiple options, separate them with a comma.</source>
          <target state="translated">Si necesitas pasar varias opciones,sepáralas con una coma.</target>
        </trans-unit>
        <trans-unit id="809b912a9ed5d5a0eab31e3007d95029a30a63c6" translate="yes" xml:space="preserve">
          <source>If you need to reorder or edit a number of commits in a branch, it may be easier to use &lt;code&gt;git rebase -i&lt;/code&gt;, which allows you to reorder and squash commits, as well as marking them for individual editing during the rebase. See &lt;a href=&quot;#interactive-rebase&quot;&gt;Using interactive rebases&lt;/a&gt; for details, and &lt;a href=&quot;#reordering-patch-series&quot;&gt;Reordering or selecting from a patch series&lt;/a&gt; for alternatives.</source>
          <target state="translated">Si necesita reordenar o editar una serie de confirmaciones en una rama, puede ser m&amp;aacute;s f&amp;aacute;cil usar &lt;code&gt;git rebase -i&lt;/code&gt; , que le permite reordenar y aplastar confirmaciones, as&amp;iacute; como marcarlas para su edici&amp;oacute;n individual durante la rebase. Consulte &lt;a href=&quot;#interactive-rebase&quot;&gt;Uso de rebases interactivas&lt;/a&gt; para obtener m&amp;aacute;s detalles y &lt;a href=&quot;#reordering-patch-series&quot;&gt;Reordenaci&amp;oacute;n o selecci&amp;oacute;n de una serie de parches&lt;/a&gt; para conocer las alternativas.</target>
        </trans-unit>
        <trans-unit id="653cbb8173c66cbe6d9c641e8756d2055e0c1628" translate="yes" xml:space="preserve">
          <source>If you never pushed anything out, just re-tag it. Use &quot;-f&quot; to replace the old one. And you&amp;rsquo;re done.</source>
          <target state="translated">Si nunca empuj&amp;oacute; nada, simplemente vuelva a etiquetarlo. Utilice &quot;-f&quot; para reemplazar el anterior. Y tu estas listo.</target>
        </trans-unit>
        <trans-unit id="e0169e9e6701b28da91f9800a1f0eacd543a0e6b" translate="yes" xml:space="preserve">
          <source>If you now continue development as usual, and eventually merge &lt;code&gt;topic&lt;/code&gt; to &lt;code&gt;subsystem&lt;/code&gt;, the commits from &lt;code&gt;subsystem&lt;/code&gt; will remain duplicated forever:</source>
          <target state="translated">Si ahora contin&amp;uacute;a el desarrollo como de costumbre y finalmente fusiona el &lt;code&gt;topic&lt;/code&gt; con el &lt;code&gt;subsystem&lt;/code&gt; , las confirmaciones del &lt;code&gt;subsystem&lt;/code&gt; permanecer&amp;aacute;n duplicadas para siempre:</target>
        </trans-unit>
        <trans-unit id="d9ba20830393f58c8170e264c4d66d9dd0605070" translate="yes" xml:space="preserve">
          <source>If you now run</source>
          <target state="translated">Si ahora corres</target>
        </trans-unit>
        <trans-unit id="ee95c7e5ff1bbdc349787f30139d15eef70dff52" translate="yes" xml:space="preserve">
          <source>If you only want to remove the local checkout of a submodule from your work tree without committing the removal, use &lt;a href=&quot;git-submodule&quot;&gt;git-submodule[1]&lt;/a&gt;&lt;code&gt;deinit&lt;/code&gt; instead. Also see &lt;a href=&quot;gitsubmodules&quot;&gt;gitsubmodules[7]&lt;/a&gt; for details on submodule removal.</source>
          <target state="translated">Si solo desea eliminar la verificaci&amp;oacute;n local de un subm&amp;oacute;dulo de su &amp;aacute;rbol de trabajo sin realizar la eliminaci&amp;oacute;n, use &lt;a href=&quot;git-submodule&quot;&gt;git-submodule [1] &lt;/a&gt; &lt;code&gt;deinit&lt;/code&gt; en su lugar. Tambi&amp;eacute;n vea &lt;a href=&quot;gitsubmodules&quot;&gt;gitsubmodules [7]&lt;/a&gt; para obtener detalles sobre la eliminaci&amp;oacute;n de subm&amp;oacute;dulos.</target>
        </trans-unit>
        <trans-unit id="de4ecb2fda4e4a17fa4230cd7b06e657b6ab1e40" translate="yes" xml:space="preserve">
          <source>If you plan to publish this repository to be accessed over http, you should do &lt;code&gt;mv my-git.git/hooks/post-update.sample
my-git.git/hooks/post-update&lt;/code&gt; at this point. This makes sure that every time you push into this repository, &lt;code&gt;git update-server-info&lt;/code&gt; is run.</source>
          <target state="translated">Si planea publicar este repositorio para acceder a &amp;eacute;l a trav&amp;eacute;s de http, debe hacer &lt;code&gt;mv my-git.git/hooks/post-update.sample my-git.git/hooks/post-update&lt;/code&gt; en este punto. Esto asegura que cada vez que ingrese a este repositorio, se ejecute &lt;code&gt;git update-server-info&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dce58b5a972f1c023066ee29ac3c991fde1e2420" translate="yes" xml:space="preserve">
          <source>If you present all of your changes as a single patch (or commit), they may find that it is too much to digest all at once.</source>
          <target state="translated">Si presenta todos sus cambios como un solo parche (o compromiso),pueden encontrar que es demasiado para digerirlo todo de una sola vez.</target>
        </trans-unit>
        <trans-unit id="6e4131986cf58f7abe3d9d87945a8e4a59143945" translate="yes" xml:space="preserve">
          <source>If you present them with the entire history of your work, complete with mistakes, corrections, and dead ends, they may be overwhelmed.</source>
          <target state="translated">Si les presentas la historia completa de tu trabajo,con errores,correcciones y callejones sin salida,pueden verse abrumados.</target>
        </trans-unit>
        <trans-unit id="21ee16e384bb8d43949dac71aebc6ab455b71a15" translate="yes" xml:space="preserve">
          <source>If you provide a &lt;code&gt;directory&lt;/code&gt;, the command is run inside it. If this directory does not exist, it will be created.</source>
          <target state="translated">Si proporciona un &lt;code&gt;directory&lt;/code&gt; , el comando se ejecuta dentro de &amp;eacute;l. Si este directorio no existe, se crear&amp;aacute;.</target>
        </trans-unit>
        <trans-unit id="e318df70fba90a3c817f7eb76621f705fc69949d" translate="yes" xml:space="preserve">
          <source>If you pushed your change to a branch whose name is different from the one you have locally, e.g.</source>
          <target state="translated">Si usted empujó su cambio a una rama cuyo nombre es diferente del que tiene localmente,por ejemplo.</target>
        </trans-unit>
        <trans-unit id="f36c21fb05ddb2d8eeea70a503cb3c797b4a7baa" translate="yes" xml:space="preserve">
          <source>If you really don&amp;rsquo;t want to clone it, for whatever reasons, check the following points instead (in this order). This is a very destructive approach, so &lt;strong&gt;make a backup&lt;/strong&gt; or go back to cloning it. You have been warned.</source>
          <target state="translated">Si realmente no desea clonarlo, por cualquier motivo, consulte los siguientes puntos (en este orden). Este es un enfoque muy destructivo, as&amp;iacute; que &lt;strong&gt;haga una copia de seguridad&lt;/strong&gt; o vuelva a clonarlo. Usted ha sido advertido.</target>
        </trans-unit>
        <trans-unit id="3a0d5ef629f0a421a47e2200b4c6f6985f396b8e" translate="yes" xml:space="preserve">
          <source>If you really want to remove a submodule from the repository and commit that use &lt;a href=&quot;git-rm&quot;&gt;git-rm[1]&lt;/a&gt; instead. See &lt;a href=&quot;gitsubmodules&quot;&gt;gitsubmodules[7]&lt;/a&gt; for removal options.</source>
          <target state="translated">Si realmente desea eliminar un subm&amp;oacute;dulo del repositorio y confirmarlo, use &lt;a href=&quot;git-rm&quot;&gt;git-rm [1] en su&lt;/a&gt; lugar. Consulte &lt;a href=&quot;gitsubmodules&quot;&gt;gitsubmodules [7]&lt;/a&gt; para conocer las opciones de eliminaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="a5e65b5631472cf01bf2ff6d1fb37eb4b5d6b41d" translate="yes" xml:space="preserve">
          <source>If you really want to use &lt;code&gt;konqueror&lt;/code&gt;, then you can use something like the following:</source>
          <target state="translated">Si realmente desea usar &lt;code&gt;konqueror&lt;/code&gt; , puede usar algo como lo siguiente:</target>
        </trans-unit>
        <trans-unit id="e3a8dad6f18366292640cec2d899866b39003a2b" translate="yes" xml:space="preserve">
          <source>If you receive such a patch series (as maintainer, or perhaps as a reader of the mailing list it was sent to), save the mails to files, create a new topic branch and use &lt;code&gt;git am&lt;/code&gt; to import the commits:</source>
          <target state="translated">Si recibe una serie de parches de este tipo (como mantenedor, o tal vez como lector de la lista de correo a la que se envi&amp;oacute;), guarde los correos en archivos, cree una nueva rama de tema y use &lt;code&gt;git am&lt;/code&gt; para importar las confirmaciones:</target>
        </trans-unit>
        <trans-unit id="8122cfb5e210d22279775f15b8524f8a454a6069" translate="yes" xml:space="preserve">
          <source>If you receive the SHA-1 name of a blob from one source, and its contents from another (possibly untrusted) source, you can still trust that those contents are correct as long as the SHA-1 name agrees. This is because the SHA-1 is designed so that it is infeasible to find different contents that produce the same hash.</source>
          <target state="translated">Si recibes el nombre SHA-1 de una mancha de una fuente,y su contenido de otra fuente (posiblemente no confiable),aún puedes confiar en que esos contenidos son correctos siempre y cuando el nombre SHA-1 esté de acuerdo.Esto se debe a que el SHA-1 está diseñado de tal manera que es inviable encontrar diferentes contenidos que produzcan el mismo hachís.</target>
        </trans-unit>
        <trans-unit id="72b668cfa18e4e3a824ca9d20a1fa4e3cde95d1f" translate="yes" xml:space="preserve">
          <source>If you recognize such corruption early you can easily fix it by setting the conversion type explicitly in .gitattributes. Right after committing you still have the original file in your work tree and this file is not yet corrupted. You can explicitly tell Git that this file is binary and Git will handle the file appropriately.</source>
          <target state="translated">Si reconoces esa corrupción a tiempo,puedes arreglarla fácilmente estableciendo el tipo de conversión explícitamente en .gitattributes.Inmediatamente después de la confirmación,todavía tienes el archivo original en tu árbol de trabajo y este archivo aún no está corrupto.Puedes decirle explícitamente a Git que este archivo es binario y Git lo manejará adecuadamente.</target>
        </trans-unit>
        <trans-unit id="6d44148625d48b9905fb64fc2d01c214d013573d" translate="yes" xml:space="preserve">
          <source>If you run &lt;code&gt;git branch&lt;/code&gt; at this point, you&amp;rsquo;ll see that Git has temporarily moved you in &quot;(no branch)&quot;. HEAD is now detached from any branch and points directly to a commit (with commit id 65934) that is reachable from &quot;master&quot; but not from v2.6.18. Compile and test it, and see whether it crashes. Assume it does crash. Then:</source>
          <target state="translated">Si ejecuta &lt;code&gt;git branch&lt;/code&gt; en este punto, ver&amp;aacute; que Git lo ha movido temporalmente a &quot;(sin rama)&quot;. HEAD ahora est&amp;aacute; separado de cualquier rama y apunta directamente a una confirmaci&amp;oacute;n (con la identificaci&amp;oacute;n de confirmaci&amp;oacute;n 65934) que es accesible desde &quot;master&quot; pero no desde v2.6.18. Comp&amp;iacute;lelo y pru&amp;eacute;belo, y vea si falla. Suponga que se estrella. Luego:</target>
        </trans-unit>
        <trans-unit id="e4f37857c4f0244dcc0891e65a70e27a5bbdffad" translate="yes" xml:space="preserve">
          <source>If you run &lt;code&gt;git fetch &amp;lt;remote&amp;gt;&lt;/code&gt; later, the remote-tracking branches for the named &lt;code&gt;&amp;lt;remote&amp;gt;&lt;/code&gt; will be updated.</source>
          <target state="translated">Si ejecuta &lt;code&gt;git fetch &amp;lt;remote&amp;gt;&lt;/code&gt; m&amp;aacute;s tarde, se actualizar&amp;aacute;n las ramas de seguimiento remoto para el &lt;code&gt;&amp;lt;remote&amp;gt;&lt;/code&gt; nombrado .</target>
        </trans-unit>
        <trans-unit id="086aebbf0140fb264a45c34927db290b089af7f6" translate="yes" xml:space="preserve">
          <source>If you run &lt;code&gt;git repack&lt;/code&gt; again at this point, it will say &quot;Nothing new to pack.&quot;. Once you continue your development and accumulate the changes, running &lt;code&gt;git repack&lt;/code&gt; again will create a new pack, that contains objects created since you packed your repository the last time. We recommend that you pack your project soon after the initial import (unless you are starting your project from scratch), and then run &lt;code&gt;git repack&lt;/code&gt; every once in a while, depending on how active your project is.</source>
          <target state="translated">Si ejecuta &lt;code&gt;git repack&lt;/code&gt; nuevamente en este punto, dir&amp;aacute; &quot;No hay nada nuevo que empaquetar&quot;. Una vez que contin&amp;uacute;e su desarrollo y acumule los cambios, ejecutar &lt;code&gt;git repack&lt;/code&gt; nuevamente crear&amp;aacute; un nuevo paquete, que contiene los objetos creados desde que empaquet&amp;oacute; su repositorio la &amp;uacute;ltima vez. Recomendamos que empaque su proyecto poco despu&amp;eacute;s de la importaci&amp;oacute;n inicial (a menos que est&amp;eacute; comenzando su proyecto desde cero), y luego ejecute &lt;code&gt;git repack&lt;/code&gt; de vez en cuando, dependiendo de qu&amp;eacute; tan activo sea su proyecto.</target>
        </trans-unit>
        <trans-unit id="f6784580fd898de2457fa8e4a33fffee5347973c" translate="yes" xml:space="preserve">
          <source>If you simply want to have CRLF line endings in your working directory regardless of the repository you are working with, you can set the config variable &quot;core.autocrlf&quot; without using any attributes.</source>
          <target state="translated">Si simplemente quiere tener terminaciones de líneas CRLF en su directorio de trabajo independientemente del repositorio con el que esté trabajando,puede establecer la variable de configuración &quot;core.autocrlf&quot; sin usar ningún atributo.</target>
        </trans-unit>
        <trans-unit id="7c25024f01247f9dfa8226991c206d71987ca030" translate="yes" xml:space="preserve">
          <source>If you suspect that any of these issues may apply to the repository you want to import, consider using cvs2git:</source>
          <target state="translated">Si sospecha que alguno de estos problemas puede aplicarse al repositorio que desea importar,considere la posibilidad de utilizar cvs2git:</target>
        </trans-unit>
        <trans-unit id="d4145f8caae501b7db828bb5aa5f527a21b88535" translate="yes" xml:space="preserve">
          <source>If you think you have found a git bug, you can start by exporting an anonymized stream of the whole repository:</source>
          <target state="translated">Si crees que has encontrado un git bug,puedes empezar por exportar un flujo anónimo de todo el repositorio:</target>
        </trans-unit>
        <trans-unit id="846aba2aee9d2174839c8e896f13afd75da487fc" translate="yes" xml:space="preserve">
          <source>If you tried a merge which resulted in complex conflicts and want to start over, you can recover with &lt;code&gt;git merge --abort&lt;/code&gt;.</source>
          <target state="translated">Si intent&amp;oacute; una fusi&amp;oacute;n que result&amp;oacute; en conflictos complejos y desea comenzar de nuevo, puede recuperar con &lt;code&gt;git merge --abort&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0e65bb746f0318eba11b3455708b3d4c243b8cb3" translate="yes" xml:space="preserve">
          <source>If you tried a pull which resulted in complex conflicts and would want to start over, you can recover with &lt;code&gt;git reset&lt;/code&gt;.</source>
          <target state="translated">Si prob&amp;oacute; una extracci&amp;oacute;n que result&amp;oacute; en conflictos complejos y desea comenzar de nuevo, puede recuperarse con &lt;code&gt;git reset&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a4f4230d5ba7e1273c96751869d78c8666680eb6" translate="yes" xml:space="preserve">
          <source>If you try and cheat and try to make git-filter-branch only work on files modified in a commit, then two things happen</source>
          <target state="translated">Si intentas engañar e intentas hacer que la rama de filtros git funcione sólo en los archivos modificados en una confirmación,entonces pasan dos cosas</target>
        </trans-unit>
        <trans-unit id="8c2ff328d40e63aa92549620e7b30dc7bd79b356" translate="yes" xml:space="preserve">
          <source>If you use any of the options marked &quot;Turns off &lt;code&gt;apply&lt;/code&gt;&quot; above, &lt;code&gt;git apply&lt;/code&gt; reads and outputs the requested information without actually applying the patch. Give this flag after those flags to also apply the patch.</source>
          <target state="translated">Si usa alguna de las opciones marcadas como &quot;Desactiva &lt;code&gt;apply&lt;/code&gt; &quot; arriba, &lt;code&gt;git apply&lt;/code&gt; lee y genera la informaci&amp;oacute;n solicitada sin aplicar realmente el parche. Pon esta bandera despu&amp;eacute;s de esas banderas para aplicar tambi&amp;eacute;n el parche.</target>
        </trans-unit>
        <trans-unit id="9ac6e5a034fc806d1c17415da5d8566070ff7060" translate="yes" xml:space="preserve">
          <source>If you use the rewrite rules from the example you &lt;strong&gt;might&lt;/strong&gt; also need something like the following in your gitweb configuration file (&lt;code&gt;/etc/gitweb.conf&lt;/code&gt; following example):</source>
          <target state="translated">Si usa las reglas de reescritura del ejemplo, es &lt;strong&gt;posible que&lt;/strong&gt; tambi&amp;eacute;n necesite algo como lo siguiente en su archivo de configuraci&amp;oacute;n de &lt;code&gt;/etc/gitweb.conf&lt;/code&gt; ( /etc/gitweb.conf siguiente ejemplo):</target>
        </trans-unit>
        <trans-unit id="7b6c2f4a6c5d4d8aeea38b5e0c4e8e111c81122f" translate="yes" xml:space="preserve">
          <source>If you want a shared repository, you will need to make a bare clone of the imported directory, as described above. Then treat the imported directory as another development clone for purposes of merging incremental imports.</source>
          <target state="translated">Si desea un repositorio compartido,tendrá que hacer un clon desnudo del directorio importado,como se ha descrito anteriormente.Luego trate el directorio importado como otro clon de desarrollo con el propósito de fusionar las importaciones incrementales.</target>
        </trans-unit>
        <trans-unit id="f7444f839f8aa37b3a95b6650647c55221c170f1" translate="yes" xml:space="preserve">
          <source>If you want command input to still be interpreted as usual by &lt;code&gt;git rev-parse&lt;/code&gt; before the output is shell quoted, see the &lt;code&gt;--sq&lt;/code&gt; option.</source>
          <target state="translated">Si desea que la entrada del comando a&amp;uacute;n se interprete como de costumbre por &lt;code&gt;git rev-parse&lt;/code&gt; antes de que se cite la salida, consulte la opci&amp;oacute;n &lt;code&gt;--sq&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="54d050e248b6c4afcd2cdb81603440db07ba11e1" translate="yes" xml:space="preserve">
          <source>If you want to break the dependency of a repository cloned with &lt;code&gt;--shared&lt;/code&gt; on its source repository, you can simply run &lt;code&gt;git repack -a&lt;/code&gt; to copy all objects from the source repository into a pack in the cloned repository.</source>
          <target state="translated">Si desea romper la dependencia de un repositorio clonado con &lt;code&gt;--shared&lt;/code&gt; en su repositorio de origen, simplemente puede ejecutar &lt;code&gt;git repack -a&lt;/code&gt; para copiar todos los objetos del repositorio de origen en un paquete en el repositorio clonado.</target>
        </trans-unit>
        <trans-unit id="175eedbbcb252ccb8b65afc8343c53ee6468a326" translate="yes" xml:space="preserve">
          <source>If you want to check out &lt;code&gt;all&lt;/code&gt; C source files out of the index, you can say</source>
          <target state="translated">Si desea verificar &lt;code&gt;all&lt;/code&gt; archivos fuente de C fuera del &amp;iacute;ndice, puede decir</target>
        </trans-unit>
        <trans-unit id="412503812484d6bb436647749abac1512a88fe3d" translate="yes" xml:space="preserve">
          <source>If you want to configure a general editor for most programs which need one, you can edit your shell configuration (e.g., &lt;code&gt;~/.bashrc&lt;/code&gt; or &lt;code&gt;~/.zshenv&lt;/code&gt;) to contain a line setting the &lt;code&gt;EDITOR&lt;/code&gt; or &lt;code&gt;VISUAL&lt;/code&gt; environment variable to an appropriate value. For example, if you prefer the editor &lt;code&gt;nano&lt;/code&gt;, then you could write the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbfd781535d8a753d031feb44f687140ff2bbcfb" translate="yes" xml:space="preserve">
          <source>If you want to configure an editor specifically for Git, you can either set the &lt;code&gt;core.editor&lt;/code&gt; configuration value or the &lt;code&gt;GIT_EDITOR&lt;/code&gt; environment variable. You can see &lt;a href=&quot;git-var&quot;&gt;git-var[1]&lt;/a&gt; for details on the order in which these options are consulted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8498bad4ba6680850d835a14e8199fc54c7601f" translate="yes" xml:space="preserve">
          <source>If you want to delete an entry for a multivar (like core.gitproxy above), you have to provide a regex matching the value of exactly one line.</source>
          <target state="translated">Si quieres borrar una entrada de un multivariante (como el core.gitproxy de arriba),tienes que proporcionar un regex que coincida con el valor de una línea exacta.</target>
        </trans-unit>
        <trans-unit id="b6ce9e2807ee6d14a7a74a4824bf5e00e758331b" translate="yes" xml:space="preserve">
          <source>If you want to enable (or disable) this feature, it is easier to use the &lt;code&gt;core.fsmonitor&lt;/code&gt; configuration variable (see &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;) than using the &lt;code&gt;--fsmonitor&lt;/code&gt; option to &lt;code&gt;git update-index&lt;/code&gt; in each repository, especially if you want to do so across all repositories you use, because you can set the configuration variable in your &lt;code&gt;$HOME/.gitconfig&lt;/code&gt; just once and have it affect all repositories you touch.</source>
          <target state="translated">Si desea habilitar (o deshabilitar) esta funci&amp;oacute;n, es m&amp;aacute;s f&amp;aacute;cil usar la variable de configuraci&amp;oacute;n &lt;code&gt;core.fsmonitor&lt;/code&gt; (ver &lt;a href=&quot;git-config&quot;&gt;git-config [1]&lt;/a&gt; ) que usar la opci&amp;oacute;n &lt;code&gt;--fsmonitor&lt;/code&gt; para &lt;code&gt;git update-index&lt;/code&gt; en cada repositorio, especialmente si desea hacerlo en todos los repositorios que usa, porque puede establecer la variable de configuraci&amp;oacute;n en su &lt;code&gt;$HOME/.gitconfig&lt;/code&gt; solo una vez y hacer que afecte a todos los repositorios que toque.</target>
        </trans-unit>
        <trans-unit id="fade353b5f9f7d0b204907810eaa983a2e094489" translate="yes" xml:space="preserve">
          <source>If you want to enable (or disable) this feature, it is easier to use the &lt;code&gt;core.untrackedCache&lt;/code&gt; configuration variable (see &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;) than using the &lt;code&gt;--untracked-cache&lt;/code&gt; option to &lt;code&gt;git update-index&lt;/code&gt; in each repository, especially if you want to do so across all repositories you use, because you can set the configuration variable to &lt;code&gt;true&lt;/code&gt; (or &lt;code&gt;false&lt;/code&gt;) in your &lt;code&gt;$HOME/.gitconfig&lt;/code&gt; just once and have it affect all repositories you touch.</source>
          <target state="translated">Si desea habilitar (o deshabilitar) esta funci&amp;oacute;n, es m&amp;aacute;s f&amp;aacute;cil usar la variable de configuraci&amp;oacute;n &lt;code&gt;core.untrackedCache&lt;/code&gt; (ver &lt;a href=&quot;git-config&quot;&gt;git-config [1]&lt;/a&gt; ) que usar la opci&amp;oacute;n &lt;code&gt;--untracked-cache&lt;/code&gt; para &lt;code&gt;git update-index&lt;/code&gt; en cada repositorio, especialmente si desea hacerlo en todos los repositorios que usa, porque puede establecer la variable de configuraci&amp;oacute;n en &lt;code&gt;true&lt;/code&gt; (o &lt;code&gt;false&lt;/code&gt; ) en su &lt;code&gt;$HOME/.gitconfig&lt;/code&gt; solo una vez y hacer que afecte a todos los repositorios que toque.</target>
        </trans-unit>
        <trans-unit id="58323cdd8a68e6e1cc6d62c47524db6593349b87" translate="yes" xml:space="preserve">
          <source>If you want to ensure that text files that any contributor introduces to the repository have their line endings normalized, you can set the &lt;code&gt;text&lt;/code&gt; attribute to &quot;auto&quot; for &lt;code&gt;all&lt;/code&gt; files.</source>
          <target state="translated">Si desea asegurarse de que los archivos de texto que cualquier colaborador introduzca en el repositorio tengan sus finales de l&amp;iacute;nea normalizados, puede establecer el atributo de &lt;code&gt;text&lt;/code&gt; o en &quot;auto&quot; para &lt;code&gt;all&lt;/code&gt; archivos.</target>
        </trans-unit>
        <trans-unit id="46aa6af5bcc60a63656632720781ded6cb9a0464" translate="yes" xml:space="preserve">
          <source>If you want to fold two or more commits into one, replace the command &quot;pick&quot; for the second and subsequent commits with &quot;squash&quot; or &quot;fixup&quot;. If the commits had different authors, the folded commit will be attributed to the author of the first commit. The suggested commit message for the folded commit is the concatenation of the commit messages of the first commit and of those with the &quot;squash&quot; command, but omits the commit messages of commits with the &quot;fixup&quot; command.</source>
          <target state="translated">Si quieres doblar dos o más confirmaciones en una sola,reemplaza el comando &quot;pick&quot; para la segunda y subsiguientes confirmaciones por &quot;squash&quot; o &quot;fixup&quot;.Si las confirmaciones tienen diferentes autores,la confirmación doblada se atribuirá al autor de la primera confirmación.El mensaje de confirmación sugerido para la confirmación plegada es la concatenación de los mensajes de confirmación de la primera confirmación y de los del comando &quot;squash&quot;,pero omite los mensajes de confirmación de las confirmaciones con el comando &quot;fixup&quot;.</target>
        </trans-unit>
        <trans-unit id="a1fc176bf758306e3705a3dd88ad77db4fb55698" translate="yes" xml:space="preserve">
          <source>If you want to have one URL for both gitweb and your &lt;code&gt;http://&lt;/code&gt; repositories, you can configure Apache like this:</source>
          <target state="translated">Si desea tener una URL tanto para gitweb como para sus repositorios &lt;code&gt;http://&lt;/code&gt; , puede configurar Apache de esta manera:</target>
        </trans-unit>
        <trans-unit id="23a694ff61b56e5a1054639701ce379b6eeb6564" translate="yes" xml:space="preserve">
          <source>If you want to know all the values for a multivar, do:</source>
          <target state="translated">Si quieres saber todos los valores de un multivariante,hazlo:</target>
        </trans-unit>
        <trans-unit id="be838b052e83d8fa0d4980781547923358bc58d3" translate="yes" xml:space="preserve">
          <source>If you want to make a change within a submodule and you have a detached head, then you should create or checkout a branch, make your changes, publish the change within the submodule, and then update the superproject to reference the new commit:</source>
          <target state="translated">Si quiere hacer un cambio dentro de un submódulo y tiene una cabeza separada,entonces debería crear o revisar una rama,hacer sus cambios,publicar el cambio dentro del submódulo,y luego actualizar el superproyecto para hacer referencia a la nueva confirmación:</target>
        </trans-unit>
        <trans-unit id="f02c3e1c88ba7fbd299965b88348f8af1bb2eec2" translate="yes" xml:space="preserve">
          <source>If you want to make sure that the output actually names an object in your object database and/or can be used as a specific type of object you require, you can add the &lt;code&gt;^{type}&lt;/code&gt; peeling operator to the parameter. For example, &lt;code&gt;git rev-parse &quot;$VAR^{commit}&quot;&lt;/code&gt; will make sure &lt;code&gt;$VAR&lt;/code&gt; names an existing object that is a commit-ish (i.e. a commit, or an annotated tag that points at a commit). To make sure that &lt;code&gt;$VAR&lt;/code&gt; names an existing object of any type, &lt;code&gt;git rev-parse &quot;$VAR^{object}&quot;&lt;/code&gt; can be used.</source>
          <target state="translated">Si desea asegurarse de que la salida realmente nombre un objeto en su base de datos de objetos y / o se puede usar como un tipo espec&amp;iacute;fico de objeto que necesita, puede agregar el operador de pelado &lt;code&gt;^{type}&lt;/code&gt; al par&amp;aacute;metro. Por ejemplo, &lt;code&gt;git rev-parse &quot;$VAR^{commit}&quot;&lt;/code&gt; se asegurar&amp;aacute; de que &lt;code&gt;$VAR&lt;/code&gt; nombre un objeto existente que sea un commit-ish (es decir, un commit o una etiqueta anotada que apunte a un commit). Para asegurarse de que &lt;code&gt;$VAR&lt;/code&gt; nombre un objeto existente de cualquier tipo, se puede usar &lt;code&gt;git rev-parse &quot;$VAR^{object}&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="136531f3c928e37ad60b2649b3285deac4e99b46" translate="yes" xml:space="preserve">
          <source>If you want to refer to a git refspec that has characters that are not allowed by CVS, you have two options. First, it may just work to supply the git refspec directly to the appropriate CVS -r argument; some CVS clients don&amp;rsquo;t seem to do much sanity checking of the argument. Second, if that fails, you can use a special character escape mechanism that only uses characters that are valid in CVS tags. A sequence of 4 or 5 characters of the form (underscore (&lt;code&gt;&quot;_&quot;&lt;/code&gt;), dash (&lt;code&gt;&quot;-&quot;&lt;/code&gt;), one or two characters, and dash (&lt;code&gt;&quot;-&quot;&lt;/code&gt;)) can encode various characters based on the one or two letters: &lt;code&gt;&quot;s&quot;&lt;/code&gt; for slash (&lt;code&gt;&quot;/&quot;&lt;/code&gt;), &lt;code&gt;&quot;p&quot;&lt;/code&gt; for period (&lt;code&gt;&quot;.&quot;&lt;/code&gt;), &lt;code&gt;&quot;u&quot;&lt;/code&gt; for underscore (&lt;code&gt;&quot;_&quot;&lt;/code&gt;), or two hexadecimal digits for any byte value at all (typically an ASCII number, or perhaps a part of a UTF-8 encoded character).</source>
          <target state="translated">Si desea hacer referencia a un git refspec que tiene caracteres que no est&amp;aacute;n permitidos por CVS, tiene dos opciones. En primer lugar, puede funcionar simplemente proporcionar git refspec directamente al argumento CVS -r apropiado; algunos clientes de CVS no parecen comprobar mucho la cordura del argumento. En segundo lugar, si eso falla, puede usar un mecanismo de escape de caracteres especial que solo usa caracteres que son v&amp;aacute;lidos en las etiquetas CVS. Una secuencia de 4 o 5 caracteres del formulario (gui&amp;oacute;n bajo ( &lt;code&gt;&quot;_&quot;&lt;/code&gt; ), gui&amp;oacute;n ( &lt;code&gt;&quot;-&quot;&lt;/code&gt; ), uno o dos caracteres y gui&amp;oacute;n ( &lt;code&gt;&quot;-&quot;&lt;/code&gt; )) puede codificar varios caracteres seg&amp;uacute;n una o dos letras: &lt;code&gt;&quot;s&quot;&lt;/code&gt; para barra ( &lt;code&gt;&quot;/&quot;&lt;/code&gt; ), &lt;code&gt;&quot;p&quot;&lt;/code&gt; para punto ( &lt;code&gt;&quot;.&quot;&lt;/code&gt; ), &lt;code&gt;&quot;u&quot;&lt;/code&gt; para subrayado ( &lt;code&gt;&quot;_&quot;&lt;/code&gt; ), o dos d&amp;iacute;gitos hexadecimales para cualquier valor de byte (normalmente un n&amp;uacute;mero ASCII, o quiz&amp;aacute;s una parte de un car&amp;aacute;cter codificado en UTF-8).</target>
        </trans-unit>
        <trans-unit id="e8beaf63d7e0d62995b4c7a9252b3f2ea0574fab" translate="yes" xml:space="preserve">
          <source>If you want to replace many blobs, trees or commits that are part of a string of commits, you may just want to create a replacement string of commits and then only replace the commit at the tip of the target string of commits with the commit at the tip of the replacement string of commits.</source>
          <target state="translated">Si quieres reemplazar muchos blobs,árboles o confirmaciones que son parte de una cadena de confirmaciones,puedes crear una cadena de confirmaciones de reemplazo y luego reemplazar la confirmación en la punta de la cadena de confirmaciones objetivo con la confirmación en la punta de la cadena de confirmaciones de reemplazo.</target>
        </trans-unit>
        <trans-unit id="44f075cf045ec7b6bbf9c6b54de29b3e2085d2d6" translate="yes" xml:space="preserve">
          <source>If you want to restore &lt;code&gt;all&lt;/code&gt; C source files to match the version in the index, you can say</source>
          <target state="translated">Si desea restaurar &lt;code&gt;all&lt;/code&gt; archivos fuente de C para que coincidan con la versi&amp;oacute;n en el &amp;iacute;ndice, puede decir</target>
        </trans-unit>
        <trans-unit id="7bbbea69a50b6a93a6b75d0ba68d2bc45319d47b" translate="yes" xml:space="preserve">
          <source>If you want to rewrite URLs for push only, you can create a configuration section of the form:</source>
          <target state="translated">Si quieres reescribir los URLs sólo para el push,puedes crear una sección de configuración del formulario:</target>
        </trans-unit>
        <trans-unit id="295a38729bbd2cc488fb271a44e4d101d6ee7a15" translate="yes" xml:space="preserve">
          <source>If you want to show differences between binary or specially-formatted blobs in your repository, you can choose to use either an external diff command, or to use textconv to convert them to a diff-able text format. Which method you choose depends on your exact situation.</source>
          <target state="translated">Si desea mostrar las diferencias entre los blobs binarios o con un formato especial en su repositorio,puede elegir entre utilizar un comando externo de diff,o utilizar textconv para convertirlos a un formato de texto diff-able.El método que elija dependerá de su situación exacta.</target>
        </trans-unit>
        <trans-unit id="e3f3cfd8a6d2a1c0d741f6415c0be4ad8848457f" translate="yes" xml:space="preserve">
          <source>If you want to show other people your bisection process, you can get a log using for example:</source>
          <target state="translated">Si quieres mostrar a otras personas tu proceso de bisección,puedes obtener un registro usando por ejemplo:</target>
        </trans-unit>
        <trans-unit id="07b554efbcde38cd3d8cb2b2cd3fe1b74a5f9d9d" translate="yes" xml:space="preserve">
          <source>If you want to start a disconnected history that records a set of paths that is totally different from the one of &lt;code&gt;&amp;lt;start_point&amp;gt;&lt;/code&gt;, then you should clear the index and the working tree right after creating the orphan branch by running &lt;code&gt;git rm -rf .&lt;/code&gt; from the top level of the working tree. Afterwards you will be ready to prepare your new files, repopulating the working tree, by copying them from elsewhere, extracting a tarball, etc.</source>
          <target state="translated">Si desea iniciar un historial desconectado que registre un conjunto de rutas que sea totalmente diferente al de &lt;code&gt;&amp;lt;start_point&amp;gt;&lt;/code&gt; , entonces debe borrar el &amp;iacute;ndice y el &amp;aacute;rbol de trabajo justo despu&amp;eacute;s de crear la rama hu&amp;eacute;rfana ejecutando &lt;code&gt;git rm -rf .&lt;/code&gt; desde el nivel superior del &amp;aacute;rbol de trabajo. Posteriormente estar&amp;aacute; listo para preparar sus nuevos archivos, repoblar el &amp;aacute;rbol de trabajo, copiarlos de otro lugar, extraer un tarball, etc.</target>
        </trans-unit>
        <trans-unit id="5dc24ba332edd3d8bebaa76b808aacd296106da2" translate="yes" xml:space="preserve">
          <source>If you want to start a new branch from a remote branch of the same name:</source>
          <target state="translated">Si quieres empezar una nueva sucursal desde una sucursal remota del mismo nombre:</target>
        </trans-unit>
        <trans-unit id="b533f775f69c9c29e40e15bb405c24bc01b04dac" translate="yes" xml:space="preserve">
          <source>If you want to use gitweb with several project roots you can edit your Apache virtual host and gitweb configuration files in the following way.</source>
          <target state="translated">Si quieres usar gitweb con varias raíces de proyecto puedes editar tu host virtual Apache y los archivos de configuración de gitweb de la siguiente manera.</target>
        </trans-unit>
        <trans-unit id="cced0d77bb2b4a5861e7555078781fd81234d732" translate="yes" xml:space="preserve">
          <source>If you want to, you can use &lt;code&gt;git cat-file&lt;/code&gt; to look at those objects, but you&amp;rsquo;ll have to use the object name, not the filename of the object:</source>
          <target state="translated">Si lo desea, puede usar &lt;code&gt;git cat-file&lt;/code&gt; para ver esos objetos, pero tendr&amp;aacute; que usar el nombre del objeto, no el nombre de archivo del objeto:</target>
        </trans-unit>
        <trans-unit id="9eff57ed3284da22d90930841774b80f0270e4be" translate="yes" xml:space="preserve">
          <source>If you wish the exclude patterns to affect only certain repositories (instead of every repository for a given project), you may instead put them in a file in your repository named &lt;code&gt;.git/info/exclude&lt;/code&gt;, or in any file specified by the &lt;code&gt;core.excludesFile&lt;/code&gt; configuration variable. Some Git commands can also take exclude patterns directly on the command line. See &lt;a href=&quot;gitignore&quot;&gt;gitignore[5]&lt;/a&gt; for the details.</source>
          <target state="translated">Si desea que los patrones de exclusi&amp;oacute;n afecten solo a ciertos repositorios (en lugar de a todos los repositorios de un proyecto determinado), puede colocarlos en un archivo en su repositorio llamado &lt;code&gt;.git/info/exclude&lt;/code&gt; , o en cualquier archivo especificado por el &lt;code&gt;core.excludesFile&lt;/code&gt; variable de configuraci&amp;oacute;n. Algunos comandos de Git tambi&amp;eacute;n pueden tomar patrones de exclusi&amp;oacute;n directamente en la l&amp;iacute;nea de comandos. Consulte &lt;a href=&quot;gitignore&quot;&gt;gitignore [5]&lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="f3a956a01313129dd0835296263e6883d7abec99" translate="yes" xml:space="preserve">
          <source>If you wish to affect only a single repository (i.e., to assign attributes to files that are particular to one user&amp;rsquo;s workflow for that repository), then attributes should be placed in the &lt;code&gt;$GIT_DIR/info/attributes&lt;/code&gt; file. Attributes which should be version-controlled and distributed to other repositories (i.e., attributes of interest to all users) should go into &lt;code&gt;.gitattributes&lt;/code&gt; files. Attributes that should affect all repositories for a single user should be placed in a file specified by the &lt;code&gt;core.attributesFile&lt;/code&gt; configuration option (see &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;). Its default value is $XDG_CONFIG_HOME/git/attributes. If $XDG_CONFIG_HOME is either not set or empty, $HOME/.config/git/attributes is used instead. Attributes for all users on a system should be placed in the &lt;code&gt;$(prefix)/etc/gitattributes&lt;/code&gt; file.</source>
          <target state="translated">Si desea afectar solo un repositorio (es decir, asignar atributos a archivos que son particulares del flujo de trabajo de un usuario para ese repositorio), entonces los atributos deben colocarse en el &lt;code&gt;$GIT_DIR/info/attributes&lt;/code&gt; . Los atributos que deben ser controlados por versi&amp;oacute;n y distribuidos a otros repositorios (es decir, atributos de inter&amp;eacute;s para todos los usuarios) deben ir en archivos &lt;code&gt;.gitattributes&lt;/code&gt; . Los atributos que deber&amp;iacute;an afectar a todos los repositorios para un solo usuario deben colocarse en un archivo especificado por la opci&amp;oacute;n de configuraci&amp;oacute;n &lt;code&gt;core.attributesFile&lt;/code&gt; (ver &lt;a href=&quot;git-config&quot;&gt;git-config [1]&lt;/a&gt;). Su valor predeterminado es $ XDG_CONFIG_HOME / git / attribute. Si $ XDG_CONFIG_HOME no est&amp;aacute; configurado o est&amp;aacute; vac&amp;iacute;o, se usa $ HOME / .config / git / attribute en su lugar. Los atributos de todos los usuarios de un sistema deben colocarse en el archivo &lt;code&gt;$(prefix)/etc/gitattributes&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8bef77486a59978a04a1c46b2c068b3863595296" translate="yes" xml:space="preserve">
          <source>If you work with other people, you will need commands listed in the &lt;a href=&quot;#PARTICIPANT&quot;&gt;Individual Developer (Participant)&lt;/a&gt; section as well.</source>
          <target state="translated">Si trabaja con otras personas, tambi&amp;eacute;n necesitar&amp;aacute; los comandos enumerados en la secci&amp;oacute;n &lt;a href=&quot;#PARTICIPANT&quot;&gt;Desarrollador individual (participante)&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4cb8198fe4b8e422fe561ded3cf681f52266950f" translate="yes" xml:space="preserve">
          <source>If you would like the daemon to exit early, forgetting all cached credentials before their timeout, you can issue an &lt;code&gt;exit&lt;/code&gt; action:</source>
          <target state="translated">Si desea que el demonio salga antes, olvidando todas las credenciales almacenadas en cach&amp;eacute; antes de que se agote el tiempo de espera, puede emitir una acci&amp;oacute;n de &lt;code&gt;exit&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="6fb92003fb885c97541d201047e1ea900190bac9" translate="yes" xml:space="preserve">
          <source>If you would like to use your own terms instead of &quot;bad&quot;/&quot;good&quot; or &quot;new&quot;/&quot;old&quot;, you can choose any names you like (except existing bisect subcommands like &lt;code&gt;reset&lt;/code&gt;, &lt;code&gt;start&lt;/code&gt;, &amp;hellip;​) by starting the bisection using</source>
          <target state="translated">Si desea utilizar sus propios t&amp;eacute;rminos en lugar de &quot;malo&quot; / &quot;bueno&quot; o &quot;nuevo&quot; / &quot;antiguo&quot;, puede elegir los nombres que desee (excepto los subcomandos bisectables existentes como &lt;code&gt;reset&lt;/code&gt; , &lt;code&gt;start&lt;/code&gt; , ...) iniciando el bisecci&amp;oacute;n usando</target>
        </trans-unit>
        <trans-unit id="ac9785fae40224d0d9d1a9569429bd18f0ceb511" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re releasing a new version of a software project, you may want to simultaneously make a changelog to include in the release announcement.</source>
          <target state="translated">Si est&amp;aacute; lanzando una nueva versi&amp;oacute;n de un proyecto de software, es posible que desee realizar simult&amp;aacute;neamente un registro de cambios para incluirlo en el anuncio de lanzamiento.</target>
        </trans-unit>
        <trans-unit id="6cd2cc907ee3e17f5caea471b5027cb72158e075" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;ve been committing small enough changes, you may now have a good shot at reconstructing the contents of the in-between state 4b9458b.</source>
          <target state="translated">Si ha realizado cambios lo suficientemente peque&amp;ntilde;os, es posible que ahora tenga una buena oportunidad de reconstruir el contenido del estado intermedio 4b9458b.</target>
        </trans-unit>
        <trans-unit id="5516e4c9c575f8921939c0e95aa6e39fac3c93e0" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;ve configured a web server that isn&amp;rsquo;t listed here for gitweb, please send in the instructions so they can be included in a future release.</source>
          <target state="translated">Si ha configurado un servidor web que no figura aqu&amp;iacute; para gitweb, env&amp;iacute;e las instrucciones para que puedan incluirse en una versi&amp;oacute;n futura.</target>
        </trans-unit>
        <trans-unit id="2ca9c9b64a14bae5a21173833d4a0e06ad289f34" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;ve messed up the working tree, but haven&amp;rsquo;t yet committed your mistake, you can return the entire working tree to the last committed state with</source>
          <target state="translated">Si ha estropeado el &amp;aacute;rbol de trabajo, pero a&amp;uacute;n no ha cometido su error, puede devolver todo el &amp;aacute;rbol de trabajo al &amp;uacute;ltimo estado comprometido con</target>
        </trans-unit>
        <trans-unit id="346e091fa815a370c1b9ad910c5cda575a1ee6ab" translate="yes" xml:space="preserve">
          <source>If your Gmail account is set to another language than English, the name of the &quot;Drafts&quot; folder will be localized.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bdd278937e1b543d6e4ef46f26f74578bcd1798" translate="yes" xml:space="preserve">
          <source>If your branch was based on &amp;lt;upstream&amp;gt; but &amp;lt;upstream&amp;gt; was rewound and your branch contains commits which were dropped, this option can be used with &lt;code&gt;--keep-base&lt;/code&gt; in order to drop those commits from your branch.</source>
          <target state="translated">Si su rama se bas&amp;oacute; en &amp;lt;upstream&amp;gt; pero &amp;lt;upstream&amp;gt; se rebobin&amp;oacute; y su rama contiene confirmaciones que se eliminaron, esta opci&amp;oacute;n se puede usar con &lt;code&gt;--keep-base&lt;/code&gt; para eliminar esas confirmaciones de su rama.</target>
        </trans-unit>
        <trans-unit id="862f720d820aceb82a46583ae7c2b519ed5f9115" translate="yes" xml:space="preserve">
          <source>If your editor or some other system is running &lt;code&gt;git fetch&lt;/code&gt; in the background for you a way to mitigate this is to simply set up another remote:</source>
          <target state="translated">Si su editor o alg&amp;uacute;n otro sistema est&amp;aacute; ejecutando &lt;code&gt;git fetch&lt;/code&gt; en segundo plano, una forma de mitigar esto es simplemente configurar otro control remoto:</target>
        </trans-unit>
        <trans-unit id="39db9e1c175e21d39e4bc51b769419f8b3c379b1" translate="yes" xml:space="preserve">
          <source>If your goal is to modify a configuration file, it can often be helpful to have a file checked into the repository which is a template or set of defaults which can then be copied alongside and modified as appropriate. This second, modified file is usually ignored to prevent accidentally committing it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="233e7aed3c7b3f81991c7f01f9bc6c69656e4a7c" translate="yes" xml:space="preserve">
          <source>If your repository contains one or more submodules, then submodules are populated based on interactions with the &lt;code&gt;git submodule&lt;/code&gt; command. Specifically, &lt;code&gt;git submodule init -- &amp;lt;path&amp;gt;&lt;/code&gt; will ensure the submodule at &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt; is present, while &lt;code&gt;git submodule deinit [-f] -- &amp;lt;path&amp;gt;&lt;/code&gt; will remove the files for the submodule at &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt; (including any untracked files, uncommitted changes, and unpushed history). Similar to how sparse-checkout removes files from the working tree but still leaves entries in the index, deinitialized submodules are removed from the working directory but still have an entry in the index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fc3997d817725ac54010e2c723e5760c4e0b90b" translate="yes" xml:space="preserve">
          <source>If your repository contains one or more submodules, then those submodules will appear based on which you initialized with the &lt;code&gt;git submodule&lt;/code&gt; command. If your sparse-checkout patterns exclude an initialized submodule, then that submodule will still appear in your working directory.</source>
          <target state="translated">Si su repositorio contiene uno o m&amp;aacute;s subm&amp;oacute;dulos, esos subm&amp;oacute;dulos aparecer&amp;aacute;n seg&amp;uacute;n los que haya inicializado con el comando &lt;code&gt;git submodule&lt;/code&gt; . Si sus patrones de pago disperso excluyen un subm&amp;oacute;dulo inicializado, ese subm&amp;oacute;dulo seguir&amp;aacute; apareciendo en su directorio de trabajo.</target>
        </trans-unit>
        <trans-unit id="17a3911595f90d594aeea889e0f0755079e1efba" translate="yes" xml:space="preserve">
          <source>If, in the middle of a bisect session, you know that the suggested revision is not a good one to test (e.g. it fails to build and you know that the failure does not have anything to do with the bug you are chasing), you can manually select a nearby commit and test that one instead.</source>
          <target state="translated">Si,en medio de una sesión bisectriz,sabes que la revisión sugerida no es buena para probar (por ejemplo,falla al construir y sabes que el fallo no tiene nada que ver con el fallo que estás persiguiendo),puedes seleccionar manualmente una confirmación cercana y probar esa en su lugar.</target>
        </trans-unit>
        <trans-unit id="4eaf7ef623b220dfff5cf0aad12284c2791aab6b" translate="yes" xml:space="preserve">
          <source>Ignore carriage-return at the end of line when doing a comparison.</source>
          <target state="translated">Ignore el retorno del carro al final de la línea cuando haga una comparación.</target>
        </trans-unit>
        <trans-unit id="14129ef50a9ff92ecf5a9d9520de0a5438b9b27c" translate="yes" xml:space="preserve">
          <source>Ignore case differences between the patterns and the files.</source>
          <target state="translated">Ignoren las diferencias de los casos entre los patrones y los archivos.</target>
        </trans-unit>
        <trans-unit id="93adbe048de005f652abeded323ffca0e07802f9" translate="yes" xml:space="preserve">
          <source>Ignore changes in amount of whitespace. This ignores whitespace at line end, and considers all other sequences of one or more whitespace characters to be equivalent.</source>
          <target state="translated">Ignoren los cambios en la cantidad de espacio en blanco.Esto ignora los espacios en blanco al final de la línea,y considera que todas las demás secuencias de uno o más caracteres de espacios en blanco son equivalentes.</target>
        </trans-unit>
        <trans-unit id="dceba3e490b99e465dabc6c0a6eb46378a762d2c" translate="yes" xml:space="preserve">
          <source>Ignore changes in whitespace at EOL.</source>
          <target state="translated">Ignoren los cambios en el espacio blanco en EOL.</target>
        </trans-unit>
        <trans-unit id="0e8a5619a2125f597eccb060c4d8cfcacf8da768" translate="yes" xml:space="preserve">
          <source>Ignore changes made by the revision when assigning blame, as if the change never happened. Lines that were changed or added by an ignored commit will be blamed on the previous commit that changed that line or nearby lines. This option may be specified multiple times to ignore more than one revision. If the &lt;code&gt;blame.markIgnoredLines&lt;/code&gt; config option is set, then lines that were changed by an ignored commit and attributed to another commit will be marked with a &lt;code&gt;?&lt;/code&gt; in the blame output. If the &lt;code&gt;blame.markUnblamableLines&lt;/code&gt; config option is set, then those lines touched by an ignored commit that we could not attribute to another revision are marked with a &lt;code&gt;*&lt;/code&gt;.</source>
          <target state="translated">Ignore los cambios realizados por la revisi&amp;oacute;n al asignar la culpa, como si el cambio nunca hubiera sucedido. Las l&amp;iacute;neas que fueron cambiadas o agregadas por una confirmaci&amp;oacute;n ignorada ser&amp;aacute;n atribuidas a la confirmaci&amp;oacute;n anterior que cambi&amp;oacute; esa l&amp;iacute;nea o l&amp;iacute;neas cercanas. Esta opci&amp;oacute;n se puede especificar varias veces para ignorar m&amp;aacute;s de una revisi&amp;oacute;n. Si se establece la opci&amp;oacute;n de configuraci&amp;oacute;n &lt;code&gt;blame.markIgnoredLines&lt;/code&gt; , las l&amp;iacute;neas que fueron cambiadas por una confirmaci&amp;oacute;n ignorada y atribuidas a otra confirmaci&amp;oacute;n se marcar&amp;aacute;n con un &lt;code&gt;?&lt;/code&gt; en la salida de la culpa. Si se establece la opci&amp;oacute;n de configuraci&amp;oacute;n &lt;code&gt;blame.markUnblamableLines&lt;/code&gt; , entonces esas l&amp;iacute;neas tocadas por una confirmaci&amp;oacute;n ignorada que no pudimos atribuir a otra revisi&amp;oacute;n se marcan con un &lt;code&gt;*&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="847c383f096e8b2857c23f7df697a300205d1cde" translate="yes" xml:space="preserve">
          <source>Ignore changes to submodules in the diff generation. &amp;lt;when&amp;gt; can be either &quot;none&quot;, &quot;untracked&quot;, &quot;dirty&quot; or &quot;all&quot;, which is the default. Using &quot;none&quot; will consider the submodule modified when it either contains untracked or modified files or its HEAD differs from the commit recorded in the superproject and can be used to override any settings of the &lt;code&gt;ignore&lt;/code&gt; option in &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt; or &lt;a href=&quot;gitmodules&quot;&gt;gitmodules[5]&lt;/a&gt;. When &quot;untracked&quot; is used submodules are not considered dirty when they only contain untracked content (but they are still scanned for modified content). Using &quot;dirty&quot; ignores all changes to the work tree of submodules, only changes to the commits stored in the superproject are shown (this was the behavior until 1.7.0). Using &quot;all&quot; hides all changes to submodules.</source>
          <target state="translated">Ignore los cambios en los subm&amp;oacute;dulos en la generaci&amp;oacute;n de diferencias. &amp;lt;cuando&amp;gt; puede ser &quot;ninguno&quot;, &quot;sin seguimiento&quot;, &quot;sucio&quot; o &quot;todos&quot;, que es el valor predeterminado. El uso de &quot;none&quot; considerar&amp;aacute; el subm&amp;oacute;dulo modificado cuando contiene archivos modificados o sin seguimiento, o su HEAD difiere de la confirmaci&amp;oacute;n registrada en el superproyecto y se puede usar para anular cualquier configuraci&amp;oacute;n de la opci&amp;oacute;n &lt;code&gt;ignore&lt;/code&gt; en &lt;a href=&quot;git-config&quot;&gt;git-config [1]&lt;/a&gt; o &lt;a href=&quot;gitmodules&quot;&gt;gitmodules [ 5]&lt;/a&gt; . Cuando se usa &quot;sin seguimiento&quot;, los subm&amp;oacute;dulos no se consideran sucios cuando solo contienen contenido sin seguimiento (pero a&amp;uacute;n se analizan en busca de contenido modificado). El uso de &quot;sucio&quot; ignora todos los cambios en el &amp;aacute;rbol de trabajo de los subm&amp;oacute;dulos,solo se muestran los cambios en las confirmaciones almacenadas en el superproyecto (este era el comportamiento hasta 1.7.0). El uso de &quot;todos&quot; oculta todos los cambios en los subm&amp;oacute;dulos.</target>
        </trans-unit>
        <trans-unit id="0a92f8e585ade182f513a5692eb0bb44a7e837dd" translate="yes" xml:space="preserve">
          <source>Ignore changes to submodules when looking for changes. &amp;lt;when&amp;gt; can be either &quot;none&quot;, &quot;untracked&quot;, &quot;dirty&quot; or &quot;all&quot;, which is the default. Using &quot;none&quot; will consider the submodule modified when it either contains untracked or modified files or its HEAD differs from the commit recorded in the superproject and can be used to override any settings of the &lt;code&gt;ignore&lt;/code&gt; option in &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt; or &lt;a href=&quot;gitmodules&quot;&gt;gitmodules[5]&lt;/a&gt;. When &quot;untracked&quot; is used submodules are not considered dirty when they only contain untracked content (but they are still scanned for modified content). Using &quot;dirty&quot; ignores all changes to the work tree of submodules, only changes to the commits stored in the superproject are shown (this was the behavior before 1.7.0). Using &quot;all&quot; hides all changes to submodules (and suppresses the output of submodule summaries when the config option &lt;code&gt;status.submoduleSummary&lt;/code&gt; is set).</source>
          <target state="translated">Ignore los cambios en los subm&amp;oacute;dulos cuando busque cambios. &amp;lt;cuando&amp;gt; puede ser &quot;ninguno&quot;, &quot;sin seguimiento&quot;, &quot;sucio&quot; o &quot;todos&quot;, que es el valor predeterminado. El uso de &quot;none&quot; considerar&amp;aacute; el subm&amp;oacute;dulo modificado cuando contiene archivos modificados o sin seguimiento, o su HEAD difiere de la confirmaci&amp;oacute;n registrada en el superproyecto y se puede usar para anular cualquier configuraci&amp;oacute;n de la opci&amp;oacute;n &lt;code&gt;ignore&lt;/code&gt; en &lt;a href=&quot;git-config&quot;&gt;git-config [1]&lt;/a&gt; o &lt;a href=&quot;gitmodules&quot;&gt;gitmodules [ 5]&lt;/a&gt;. Cuando se usa &quot;sin seguimiento&quot;, los subm&amp;oacute;dulos no se consideran sucios cuando solo contienen contenido sin seguimiento (pero a&amp;uacute;n se analizan en busca de contenido modificado). El uso de &quot;sucio&quot; ignora todos los cambios en el &amp;aacute;rbol de trabajo de los subm&amp;oacute;dulos, solo se muestran los cambios en las confirmaciones almacenadas en el superproyecto (este era el comportamiento antes de 1.7.0). El uso de &quot;todos&quot; oculta todos los cambios en los subm&amp;oacute;dulos (y suprime la salida de los res&amp;uacute;menes de los subm&amp;oacute;dulos cuando se establece la opci&amp;oacute;n de configuraci&amp;oacute;n &lt;code&gt;status.submoduleSummary&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="edef0f1f35c1dd9261cf7c47fc61c6526d72c57b" translate="yes" xml:space="preserve">
          <source>Ignore changes whose all lines match &amp;lt;regex&amp;gt;. This option may be specified more than once.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f616e5a6b317fb9674ab4a6ecd11655583864222" translate="yes" xml:space="preserve">
          <source>Ignore changes whose lines are all blank.</source>
          <target state="translated">Ignora los cambios cuyas líneas están en blanco.</target>
        </trans-unit>
        <trans-unit id="6b93913a06aa23ba136e18a208983b558968a818" translate="yes" xml:space="preserve">
          <source>Ignore refs for branches or tags matching the Perl regular expression. A &quot;negative look-ahead assertion&quot; like &lt;code&gt;^refs/remotes/origin/(?!tags/wanted-tag|wanted-branch).*$&lt;/code&gt; can be used to allow only certain refs.</source>
          <target state="translated">Ignore las referencias de ramas o etiquetas que coincidan con la expresi&amp;oacute;n regular de Perl. Una &quot;aserci&amp;oacute;n de anticipaci&amp;oacute;n negativa&quot; como &lt;code&gt;^refs/remotes/origin/(?!tags/wanted-tag|wanted-branch).*$&lt;/code&gt; Puede usarse para permitir solo ciertas referencias.</target>
        </trans-unit>
        <trans-unit id="cca615474ea8523b5665d433104181e17b949af0" translate="yes" xml:space="preserve">
          <source>Ignore revisions listed in &lt;code&gt;file&lt;/code&gt;, which must be in the same format as an &lt;code&gt;fsck.skipList&lt;/code&gt;. This option may be repeated, and these files will be processed after any files specified with the &lt;code&gt;blame.ignoreRevsFile&lt;/code&gt; config option. An empty file name, &lt;code&gt;&quot;&quot;&lt;/code&gt;, will clear the list of revs from previously processed files.</source>
          <target state="translated">Ignore las revisiones enumeradas en el &lt;code&gt;file&lt;/code&gt; , que debe tener el mismo formato que &lt;code&gt;fsck.skipList&lt;/code&gt; . Esta opci&amp;oacute;n puede repetirse y estos archivos se procesar&amp;aacute;n despu&amp;eacute;s de cualquier archivo especificado con la opci&amp;oacute;n de configuraci&amp;oacute;n &lt;code&gt;blame.ignoreRevsFile&lt;/code&gt; . Un nombre de archivo vac&amp;iacute;o, &lt;code&gt;&quot;&quot;&lt;/code&gt; , borrar&amp;aacute; la lista de revoluciones de archivos procesados ​​previamente.</target>
        </trans-unit>
        <trans-unit id="0cee361918756e813fbfde1e81b931c608ea0bab" translate="yes" xml:space="preserve">
          <source>Ignore revisions listed in the file, one unabbreviated object name per line, in &lt;a href=&quot;git-blame&quot;&gt;git-blame[1]&lt;/a&gt;. Whitespace and comments beginning with &lt;code&gt;#&lt;/code&gt; are ignored. This option may be repeated multiple times. Empty file names will reset the list of ignored revisions. This option will be handled before the command line option &lt;code&gt;--ignore-revs-file&lt;/code&gt;.</source>
          <target state="translated">Ignore las revisiones enumeradas en el archivo, un nombre de objeto no abreviado por l&amp;iacute;nea, en &lt;a href=&quot;git-blame&quot;&gt;git-blame [1]&lt;/a&gt; . Los espacios en blanco y los comentarios que comienzan con &lt;code&gt;#&lt;/code&gt; se ignoran. Esta opci&amp;oacute;n puede repetirse varias veces. Los nombres de archivo vac&amp;iacute;os restablecer&amp;aacute;n la lista de revisiones ignoradas. Esta opci&amp;oacute;n se manejar&amp;aacute; antes que la opci&amp;oacute;n de l&amp;iacute;nea de comando &lt;code&gt;--ignore-revs-file&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ecf2829d6b1d696605f65878628b97d7705cf8bc" translate="yes" xml:space="preserve">
          <source>Ignore scissors lines (see &lt;a href=&quot;git-mailinfo&quot;&gt;git-mailinfo[1]&lt;/a&gt;).</source>
          <target state="translated">Ignore las l&amp;iacute;neas de las tijeras (consulte &lt;a href=&quot;git-mailinfo&quot;&gt;git-mailinfo [1]&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="2348d1bd6f42459d3ee1b173782de699bb2835d4" translate="yes" xml:space="preserve">
          <source>Ignore scissors lines. Useful for overriding mailinfo.scissors settings.</source>
          <target state="translated">Ignora las líneas de tijera.Útil para anular la configuración de mailinfo.tijeras.</target>
        </trans-unit>
        <trans-unit id="df44e8d5c0f3cfab7d419d47fcf746abf35ec612" translate="yes" xml:space="preserve">
          <source>Ignore whitespace differences when trying to reconcile differences. Currently, each backend implements an approximation of this behavior:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8c0493eeab50cd9f84c9bb7fb54695bfa5cd858" translate="yes" xml:space="preserve">
          <source>Ignore whitespace when comparing lines. This ignores differences even if one line has whitespace where the other line has none.</source>
          <target state="translated">Ignoren los espacios en blanco cuando comparen las líneas.Esto ignora las diferencias,incluso si una línea tiene espacios en blanco donde la otra no tiene ninguno.</target>
        </trans-unit>
        <trans-unit id="f41139f9e81b5ab318787773cf3063813dbcefdd" translate="yes" xml:space="preserve">
          <source>Ignore whitespace when comparing the parent&amp;rsquo;s version and the child&amp;rsquo;s to find where the lines came from.</source>
          <target state="translated">Ignore los espacios en blanco al comparar la versi&amp;oacute;n de los padres y la del ni&amp;ntilde;o para averiguar de d&amp;oacute;nde provienen las l&amp;iacute;neas.</target>
        </trans-unit>
        <trans-unit id="67259bef7d0f56e262c4cda325ae4b91dc800c88" translate="yes" xml:space="preserve">
          <source>Ignored files are not listed, unless &lt;code&gt;--ignored&lt;/code&gt; option is in effect, in which case &lt;code&gt;XY&lt;/code&gt; are &lt;code&gt;!!&lt;/code&gt;.</source>
          <target state="translated">Ficheros ignorados no se enumeran, a menos que &lt;code&gt;--ignored&lt;/code&gt; opci&amp;oacute;n es, en efecto, en cuyo caso &lt;code&gt;XY&lt;/code&gt; son &lt;code&gt;!!&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5a64e868764637ce6fa403b78bdbf74f10990fd5" translate="yes" xml:space="preserve">
          <source>Ignored items have the following format:</source>
          <target state="translated">Los elementos ignorados tienen el siguiente formato:</target>
        </trans-unit>
        <trans-unit id="fe5aad4a58f02d9cd03afd86649692db9ed515bd" translate="yes" xml:space="preserve">
          <source>Ignores missing files during a --refresh</source>
          <target state="translated">Ignora los archivos perdidos durante un --refresco</target>
        </trans-unit>
        <trans-unit id="87a5b84b90eaf9c6a4ea4cf7776f8cdbe987e92e" translate="yes" xml:space="preserve">
          <source>Ignoring files</source>
          <target state="translated">Ignorar los archivos</target>
        </trans-unit>
        <trans-unit id="d83f269a97cfa5cb2870ace661718351e9ef1d6f" translate="yes" xml:space="preserve">
          <source>Imagine that on top of the public commit P, you applied well-known patches X, Y and Z from somebody else, and then built your three-patch series A, B, C, the history would be like:</source>
          <target state="translated">Imagina que encima del compromiso público P,aplicaste los conocidos parches X,Y y Z de otra persona,y luego construiste tus series de tres parches A,B,C,la historia sería como:</target>
        </trans-unit>
        <trans-unit id="220433d0f0fcbc1334d4126616d73a1ad095f039" translate="yes" xml:space="preserve">
          <source>Imagine that you built your work on your &lt;code&gt;master&lt;/code&gt; branch on top of the &lt;code&gt;v1.0&lt;/code&gt; release, and want it to be integrated to the project. First you push that change to your public repository for others to see:</source>
          <target state="translated">Imagina que construiste tu trabajo en tu rama &lt;code&gt;master&lt;/code&gt; sobre la versi&amp;oacute;n &lt;code&gt;v1.0&lt;/code&gt; y quieres que se integre al proyecto. Primero, env&amp;iacute;a ese cambio a su repositorio p&amp;uacute;blico para que otros lo vean:</target>
        </trans-unit>
        <trans-unit id="d92dfaf42e4c06410357fc423fdf173e48ba5a6c" translate="yes" xml:space="preserve">
          <source>Imagine that you have to rebase what you have already published. You will have to bypass the &quot;must fast-forward&quot; rule in order to replace the history you originally published with the rebased history. If somebody else built on top of your original history while you are rebasing, the tip of the branch at the remote may advance with her commit, and blindly pushing with &lt;code&gt;--force&lt;/code&gt; will lose her work.</source>
          <target state="translated">Imagina que tienes que reajustar lo que ya has publicado. Deber&amp;aacute; omitir la regla &quot;debe avanzar r&amp;aacute;pidamente&quot; para reemplazar el historial que public&amp;oacute; originalmente con el historial modificado. Si alguien m&amp;aacute;s construy&amp;oacute; sobre su historial original mientras est&amp;aacute; reajustando, la punta de la rama en el control remoto puede avanzar con su compromiso, y presionar ciegamente con &lt;code&gt;--force&lt;/code&gt; perder&amp;aacute; su trabajo.</target>
        </trans-unit>
        <trans-unit id="8a9ff0ad91f2190aebd8f7874a38eff49a81d587" translate="yes" xml:space="preserve">
          <source>Imagine this history:</source>
          <target state="translated">Imagina esta historia:</target>
        </trans-unit>
        <trans-unit id="db144a77867a22b1db2aa0f495d3082ced7cfb54" translate="yes" xml:space="preserve">
          <source>Imitate &lt;code&gt;git clone&lt;/code&gt; but track only selected branches</source>
          <target state="translated">Imita el &lt;code&gt;git clone&lt;/code&gt; pero rastrea solo las ramas seleccionadas</target>
        </trans-unit>
        <trans-unit id="4a694f013e1a15bee19331c0c7b9e3ce34840db9" translate="yes" xml:space="preserve">
          <source>Imitate a CVS server. See &lt;a href=&quot;git-cvsserver&quot;&gt;git-cvsserver[1]&lt;/a&gt;.</source>
          <target state="translated">Imita un servidor CVS. Consulte &lt;a href=&quot;git-cvsserver&quot;&gt;git-cvsserver [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="81ebe12aa11cc123fdb7f8c88133ffaff6347b23" translate="yes" xml:space="preserve">
          <source>Implementation details</source>
          <target state="translated">Detalles de la implementación</target>
        </trans-unit>
        <trans-unit id="f1c03dca591efe03ac168cd03c30c9d29e88acc3" translate="yes" xml:space="preserve">
          <source>Import Now, Repack Later</source>
          <target state="translated">Importar ahora,reempaquetar después</target>
        </trans-unit>
        <trans-unit id="b3e1462f677f3a661ca64753ac202708178b3a16" translate="yes" xml:space="preserve">
          <source>Import a GNU Arch repository into Git</source>
          <target state="translated">Importar un repositorio Arch de GNU en Git</target>
        </trans-unit>
        <trans-unit id="502aadd2b2c2382144812aea24a52e335147d4a4" translate="yes" xml:space="preserve">
          <source>Import all changes from both named depot paths into a single repository. Only files below these directories are included. There is not a subdirectory in Git for each &quot;proj1&quot; and &quot;proj2&quot;. You must use the &lt;code&gt;--destination&lt;/code&gt; option when specifying more than one depot path. The revision specifier must be specified identically on each depot path. If there are files in the depot paths with the same name, the path with the most recently updated version of the file is the one that appears in Git.</source>
          <target state="translated">Importe todos los cambios de ambas rutas de dep&amp;oacute;sito con nombre en un &amp;uacute;nico repositorio. Solo se incluyen los archivos debajo de estos directorios. No hay un subdirectorio en Git para cada &quot;proj1&quot; y &quot;proj2&quot;. Debe utilizar la opci&amp;oacute;n &lt;code&gt;--destination&lt;/code&gt; al especificar m&amp;aacute;s de una ruta de dep&amp;oacute;sito. El especificador de revisi&amp;oacute;n debe especificarse de forma id&amp;eacute;ntica en cada ruta de dep&amp;oacute;sito. Si hay archivos en las rutas del dep&amp;oacute;sito con el mismo nombre, la ruta con la versi&amp;oacute;n actualizada m&amp;aacute;s recientemente del archivo es la que aparece en Git.</target>
        </trans-unit>
        <trans-unit id="90051e560d673faccfb0bfe61644ca104b05b719" translate="yes" xml:space="preserve">
          <source>Import all commits, including recent ones. cvsimport by default skips commits that have a timestamp less than 10 minutes ago.</source>
          <target state="translated">Importar todas las confirmaciones,incluyendo las recientes.cvsimport por defecto salta las confirmaciones que tienen una marca de tiempo de menos de 10 minutos.</target>
        </trans-unit>
        <trans-unit id="3ffbc41d8e969bcf6a3014a353f6e7a2bfd3e3ba" translate="yes" xml:space="preserve">
          <source>Import at most &lt;code&gt;n&lt;/code&gt; changes, rather than the entire range of changes included in the given revision specifier. A typical usage would be use &lt;code&gt;@all&lt;/code&gt; as the revision specifier, but then to use &lt;code&gt;--max-changes 1000&lt;/code&gt; to import only the last 1000 revisions rather than the entire revision history.</source>
          <target state="translated">Importe como m&amp;aacute;ximo &lt;code&gt;n&lt;/code&gt; cambios, en lugar de todo el rango de cambios incluidos en el especificador de revisi&amp;oacute;n dado. Un uso t&amp;iacute;pico ser&amp;iacute;a usar &lt;code&gt;@all&lt;/code&gt; como el especificador de revisi&amp;oacute;n, pero luego usar &lt;code&gt;--max-changes 1000&lt;/code&gt; para importar solo las &amp;uacute;ltimas 1000 revisiones en lugar de todo el historial de revisiones.</target>
        </trans-unit>
        <trans-unit id="a203d27ce8c09d6ab5f978bc976ed19c7da8bd29" translate="yes" xml:space="preserve">
          <source>Import changes into &amp;lt;ref&amp;gt; instead of refs/remotes/p4/master. If &amp;lt;ref&amp;gt; starts with refs/, it is used as is. Otherwise, if it does not start with p4/, that prefix is added.</source>
          <target state="translated">Importe los cambios a &amp;lt;ref&amp;gt; en lugar de refs / remotes / p4 / master. Si &amp;lt;ref&amp;gt; comienza con refs /, se usa tal cual. De lo contrario, si no comienza con p4 /, se agrega ese prefijo.</target>
        </trans-unit>
        <trans-unit id="3446130415616c26cfbd9b0cb3b27c636fdfb1f4" translate="yes" xml:space="preserve">
          <source>Import exactly the p4 change numbers listed in &lt;code&gt;file&lt;/code&gt;, one per line. Normally, &lt;code&gt;git p4&lt;/code&gt; inspects the current p4 repository state and detects the changes it should import.</source>
          <target state="translated">Importe exactamente los n&amp;uacute;meros de cambio p4 enumerados en el &lt;code&gt;file&lt;/code&gt; , uno por l&amp;iacute;nea. Normalmente, &lt;code&gt;git p4&lt;/code&gt; inspecciona el estado actual del repositorio p4 y detecta los cambios que deber&amp;iacute;a importar.</target>
        </trans-unit>
        <trans-unit id="051514630860e82d8e6dfeb8000cb04203f0530f" translate="yes" xml:space="preserve">
          <source>Import from and submit to Perforce repositories</source>
          <target state="translated">Importar de los depósitos de Perforce y presentarlos a ellos</target>
        </trans-unit>
        <trans-unit id="bc1da86269dd0fa043570d9e0331c263ee1c8e9b" translate="yes" xml:space="preserve">
          <source>Import labels from p4 into Git.</source>
          <target state="translated">Importar etiquetas de p4 a Git.</target>
        </trans-unit>
        <trans-unit id="01c4fe3eff92a8abc6c7acba932cff943343d8ce" translate="yes" xml:space="preserve">
          <source>Import one commit for each change in the history of that depot path.</source>
          <target state="translated">Importa un compromiso por cada cambio en la historia de la ruta de ese depósito.</target>
        </trans-unit>
        <trans-unit id="5fa6a825ca52ecc53990e4e3e6add862904fa4f4" translate="yes" xml:space="preserve">
          <source>Import one commit with all files in the &lt;code&gt;#head&lt;/code&gt; change under that tree.</source>
          <target state="translated">Importe una confirmaci&amp;oacute;n con todos los archivos en el cambio &lt;code&gt;#head&lt;/code&gt; debajo de ese &amp;aacute;rbol.</target>
        </trans-unit>
        <trans-unit id="1a475e0c7f94606844ba9fa0d34742cd54c3d13c" translate="yes" xml:space="preserve">
          <source>Import only changes 1 through 6.</source>
          <target state="translated">La importación sólo cambia del 1 al 6.</target>
        </trans-unit>
        <trans-unit id="e9848e9219c243527c0682e352e98364329421b1" translate="yes" xml:space="preserve">
          <source>Import p4 labels into git, as per --import-labels.</source>
          <target state="translated">Importar etiquetas p4 en el git,como en las etiquetas de importación.</target>
        </trans-unit>
        <trans-unit id="34d234038bf4e799d075c2933026167918f64329" translate="yes" xml:space="preserve">
          <source>Import p4 labels.</source>
          <target state="translated">Importar etiquetas p4.</target>
        </trans-unit>
        <trans-unit id="2f4ea105dee6a1ad94ce6623f490fbb875775ee0" translate="yes" xml:space="preserve">
          <source>Import-only: don&amp;rsquo;t perform a checkout after importing. This option ensures the working directory and index remain untouched and will not create them if they do not exist.</source>
          <target state="translated">Solo importaci&amp;oacute;n: no realice un pago despu&amp;eacute;s de la importaci&amp;oacute;n. Esta opci&amp;oacute;n asegura que el directorio de trabajo y el &amp;iacute;ndice permanezcan intactos y no los crear&amp;aacute; si no existen.</target>
        </trans-unit>
        <trans-unit id="4b6d6a30150a506f9b79caf45da5aecb76b0018e" translate="yes" xml:space="preserve">
          <source>Important</source>
          <target state="translated">Important</target>
        </trans-unit>
        <trans-unit id="a64c4afd3bd1cef7955450469801cfbdf061341b" translate="yes" xml:space="preserve">
          <source>Important note! If you have any local changes in these branches, then this merge will create a commit object in the history (with no local changes Git will simply do a &quot;fast-forward&quot; merge). Many people dislike the &quot;noise&quot; that this creates in the Linux history, so you should avoid doing this capriciously in the &lt;code&gt;release&lt;/code&gt; branch, as these noisy commits will become part of the permanent history when you ask Linus to pull from the release branch.</source>
          <target state="translated">&amp;iexcl;Nota IMPORTANTE! Si tiene cambios locales en estas ramas, esta combinaci&amp;oacute;n crear&amp;aacute; un objeto de confirmaci&amp;oacute;n en el historial (sin cambios locales, Git simplemente har&amp;aacute; una combinaci&amp;oacute;n de &quot;avance r&amp;aacute;pido&quot;). A muchas personas no les gusta el &quot;ruido&quot; que esto crea en la historia de Linux, por lo que debe evitar hacer esto caprichosamente en la rama de &lt;code&gt;release&lt;/code&gt; , ya que estas confirmaciones ruidosas se convertir&amp;aacute;n en parte del historial permanente cuando le pida a Linus que extraiga de la rama de lanzamiento.</target>
        </trans-unit>
        <trans-unit id="a87b614cdbaa5301ddda5b9a1cda5205ccdf1bbc" translate="yes" xml:space="preserve">
          <source>Importing a cvs archive</source>
          <target state="translated">Importar un archivo de cvs</target>
        </trans-unit>
        <trans-unit id="3e30801aed656938780d8d09defb05967bf70053" translate="yes" xml:space="preserve">
          <source>Importing a new project</source>
          <target state="translated">Importar un nuevo proyecto</target>
        </trans-unit>
        <trans-unit id="7d3eb76e15d3e80f60fde0cbe9f4a9a66f1cc724" translate="yes" xml:space="preserve">
          <source>Importing or exporting patches:</source>
          <target state="translated">Importar o exportar parches:</target>
        </trans-unit>
        <trans-unit id="8c866a3a4bff8b0052306000b7abfebb33a38b38" translate="yes" xml:space="preserve">
          <source>Importing patches to a project</source>
          <target state="translated">Importar parches a un proyecto</target>
        </trans-unit>
        <trans-unit id="19051f1cf9bd70907beeecdf5147851f44537c38" translate="yes" xml:space="preserve">
          <source>Importing these tags as-is in Git is impossible without making at least one commit which &amp;ldquo;fixes up&amp;rdquo; the files to match the content of the tag. Use fast-import&amp;rsquo;s &lt;code&gt;reset&lt;/code&gt; command to reset a dummy branch outside of your normal branch space to the base commit for the tag, then commit one or more file fixup commits, and finally tag the dummy branch.</source>
          <target state="translated">Importar estas etiquetas como est&amp;aacute;n en Git es imposible sin realizar al menos una confirmaci&amp;oacute;n que &quot;arregle&quot; los archivos para que coincidan con el contenido de la etiqueta. Use el comando &lt;code&gt;reset&lt;/code&gt; de fast-import para restablecer una rama ficticia fuera de su espacio de rama normal a la confirmaci&amp;oacute;n base para la etiqueta, luego confirme una o m&amp;aacute;s confirmaciones de reparaci&amp;oacute;n de archivos y finalmente etiquete la rama ficticia.</target>
        </trans-unit>
        <trans-unit id="ffa5110d0a0de3d5244ac22023669387afe15c4d" translate="yes" xml:space="preserve">
          <source>Imports a CVS repository into Git. It will either create a new repository, or incrementally import into an existing one.</source>
          <target state="translated">Importa un depósito de CVS en Git.Creará un nuevo repositorio,o lo importará de forma incremental a uno ya existente.</target>
        </trans-unit>
        <trans-unit id="189a5fab4172fe96418112b3abf1f29736c5a78f" translate="yes" xml:space="preserve">
          <source>Imports a project from one or more GNU Arch repositories. It will follow branches and repositories within the namespaces defined by the &amp;lt;archive/branch&amp;gt; parameters supplied. If it cannot find the remote branch a merge comes from it will just import it as a regular commit. If it can find it, it will mark it as a merge whenever possible (see discussion below).</source>
          <target state="translated">Importa un proyecto de uno o m&amp;aacute;s repositorios de GNU Arch. Seguir&amp;aacute; las ramas y repositorios dentro de los espacios de nombres definidos por los par&amp;aacute;metros &amp;lt;archive / branch&amp;gt; proporcionados. Si no puede encontrar la rama remota de la que proviene una fusi&amp;oacute;n, simplemente la importar&amp;aacute; como una confirmaci&amp;oacute;n normal. Si puede encontrarlo, lo marcar&amp;aacute; como una combinaci&amp;oacute;n siempre que sea posible (consulte la discusi&amp;oacute;n a continuaci&amp;oacute;n).</target>
        </trans-unit>
        <trans-unit id="0e7ba011d44c49f30a4b102d2d50cfa93397d28b" translate="yes" xml:space="preserve">
          <source>Imports the full contents of the head revision from the given p4 depot path into a single commit in the Git branch &lt;code&gt;refs/remotes/p4/master&lt;/code&gt;.</source>
          <target state="translated">Importa el contenido completo de la revisi&amp;oacute;n principal de la ruta del dep&amp;oacute;sito p4 dada en una &amp;uacute;nica confirmaci&amp;oacute;n en la rama de Git &lt;code&gt;refs/remotes/p4/master&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bc75793944c924c387fa08f2263917093a9e6ee9" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;#def_SCM&quot;&gt;SCM&lt;/a&gt; jargon, &quot;cherry pick&quot; means to choose a subset of changes out of a series of changes (typically commits) and record them as a new series of changes on top of a different codebase. In Git, this is performed by the &quot;git cherry-pick&quot; command to extract the change introduced by an existing &lt;a href=&quot;#def_commit&quot;&gt;commit&lt;/a&gt; and to record it based on the tip of the current &lt;a href=&quot;#def_branch&quot;&gt;branch&lt;/a&gt; as a new commit.</source>
          <target state="translated">En la jerga de &lt;a href=&quot;#def_SCM&quot;&gt;SCM&lt;/a&gt; , &quot;selecci&amp;oacute;n selectiva&quot; significa elegir un subconjunto de cambios de una serie de cambios (normalmente confirmados) y registrarlos como una nueva serie de cambios sobre un c&amp;oacute;digo base diferente. En Git, esto se realiza mediante el comando &quot;git cherry-pick&quot; para extraer el cambio introducido por una &lt;a href=&quot;#def_commit&quot;&gt;confirmaci&amp;oacute;n&lt;/a&gt; existente y registrarlo bas&amp;aacute;ndose en la punta de la &lt;a href=&quot;#def_branch&quot;&gt;rama&lt;/a&gt; actual como una nueva confirmaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="5a7b7bab83d67b10ed8bbe7275df22f645616a7a" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;--parseopt&lt;/code&gt; mode, &lt;code&gt;git rev-parse&lt;/code&gt; helps massaging options to bring to shell scripts the same facilities C builtins have. It works as an option normalizer (e.g. splits single switches aggregate values), a bit like &lt;code&gt;getopt(1)&lt;/code&gt; does.</source>
          <target state="translated">En el modo &lt;code&gt;--parseopt&lt;/code&gt; , &lt;code&gt;git rev-parse&lt;/code&gt; ayuda a las opciones de masaje a llevar a los scripts de shell las mismas facilidades que tienen los builtins de C. Funciona como un normalizador de opciones (por ejemplo, divide valores agregados de conmutadores individuales), un poco como lo hace &lt;code&gt;getopt(1)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a61808962b5b6bb1a272b1dd2c4e90c87c42eb63" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;--sq-quote&lt;/code&gt; mode, &lt;code&gt;git rev-parse&lt;/code&gt; echoes on the standard output a single line suitable for &lt;code&gt;sh(1)&lt;/code&gt;&lt;code&gt;eval&lt;/code&gt;. This line is made by normalizing the arguments following &lt;code&gt;--sq-quote&lt;/code&gt;. Nothing other than quoting the arguments is done.</source>
          <target state="translated">En el modo &lt;code&gt;--sq-quote&lt;/code&gt; , &lt;code&gt;git rev-parse&lt;/code&gt; hace eco en la salida est&amp;aacute;ndar de una sola l&amp;iacute;nea adecuada para &lt;code&gt;sh(1)&lt;/code&gt; &lt;code&gt;eval&lt;/code&gt; . Esta l&amp;iacute;nea se &lt;code&gt;--sq-quote&lt;/code&gt; normalizando los argumentos que siguen a --sq-quote . No se hace nada m&amp;aacute;s que citar los argumentos.</target>
        </trans-unit>
        <trans-unit id="02025b63af6480e186ac72d3a5a618d5536d1d9c" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;--stdin&lt;/code&gt; mode, take lines in the format</source>
          <target state="translated">En el modo &lt;code&gt;--stdin&lt;/code&gt; , tome l&amp;iacute;neas en el formato</target>
        </trans-unit>
        <trans-unit id="46fb44ff2c3ae3502717728ebf0f15532f206b66" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;A&lt;/code&gt;, &lt;code&gt;foo&lt;/code&gt; contains just &amp;ldquo;foo&amp;rdquo;.</source>
          <target state="translated">En &lt;code&gt;A&lt;/code&gt; , &lt;code&gt;foo&lt;/code&gt; contiene solo &quot;foo&quot;.</target>
        </trans-unit>
        <trans-unit id="0e95077ff33e18325bb9215a9cc5764269fc90de" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;dbDriver&lt;/code&gt; and &lt;code&gt;dbUser&lt;/code&gt; you can use the following variables:</source>
          <target state="translated">En &lt;code&gt;dbDriver&lt;/code&gt; y &lt;code&gt;dbUser&lt;/code&gt; puede utilizar las siguientes variables:</target>
        </trans-unit>
        <trans-unit id="6c351c60eb0e6d6c6a7b2ff86bb73c9f63bc0dc3" translate="yes" xml:space="preserve">
          <source>In Git 1.7.0 or later, to cancel a conflicting merge, use &lt;code&gt;git reset --merge&lt;/code&gt;. &lt;strong&gt;Warning&lt;/strong&gt;: In older versions of Git, running &lt;code&gt;git pull&lt;/code&gt; with uncommitted changes is discouraged: while possible, it leaves you in a state that may be hard to back out of in the case of a conflict.</source>
          <target state="translated">En Git 1.7.0 o posterior, para cancelar una fusi&amp;oacute;n conflictiva, use &lt;code&gt;git reset --merge&lt;/code&gt; . &lt;strong&gt;Advertencia&lt;/strong&gt; : en versiones anteriores de Git, no se &lt;code&gt;git pull&lt;/code&gt; ejecutar git pull con cambios no confirmados: si bien es posible, lo deja en un estado del que puede ser dif&amp;iacute;cil retroceder en caso de conflicto.</target>
        </trans-unit>
        <trans-unit id="e5fbbb479d61fa23b446f30021dbc9109422a0ad" translate="yes" xml:space="preserve">
          <source>In Git like in many other Version Control Systems (VCS), the different states of the data that is managed by the system are called commits. And, as VCS are mostly used to manage software source code, sometimes &quot;interesting&quot; changes of behavior in the software are introduced in some commits.</source>
          <target state="translated">En Git,como en muchos otros sistemas de control de versiones (VCS),los diferentes estados de los datos que gestiona el sistema se denominan &quot;commits&quot;.Y,como los VCS se utilizan principalmente para gestionar el código fuente del software,a veces se introducen cambios &quot;interesantes&quot; de comportamiento en el software en algunas confirmaciones.</target>
        </trans-unit>
        <trans-unit id="8b9196b57e8598c90aa9a79e64e11940ec4bed09" translate="yes" xml:space="preserve">
          <source>In Git&amp;rsquo;s context, synonym for &lt;a href=&quot;#def_object_name&quot;&gt;object name&lt;/a&gt;.</source>
          <target state="translated">En el contexto de Git, sin&amp;oacute;nimo de &lt;a href=&quot;#def_object_name&quot;&gt;nombre de objeto&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="644d8f376b3ac284860f081b25e96334d4db2911" translate="yes" xml:space="preserve">
          <source>In Git, there are two kinds of tags, a &quot;light&quot; one, and an &quot;annotated tag&quot;.</source>
          <target state="translated">En Git,hay dos tipos de etiquetas,una &quot;ligera&quot; y otra &quot;anotada&quot;.</target>
        </trans-unit>
        <trans-unit id="1e877f57bcce771b4a2551649d22c402a8ae8603" translate="yes" xml:space="preserve">
          <source>In SVN, it is possible (though discouraged) to commit changes to a tag (because a tag is just a directory copy, thus technically the same as a branch). When cloning an SVN repository, &lt;code&gt;git svn&lt;/code&gt; cannot know if such a commit to a tag will happen in the future. Thus it acts conservatively and imports all SVN tags as branches, prefixing the tag name with &lt;code&gt;tags/&lt;/code&gt;.</source>
          <target state="translated">En SVN, es posible (aunque desaconsejado) realizar cambios en una etiqueta (porque una etiqueta es solo una copia de directorio, por lo que t&amp;eacute;cnicamente es lo mismo que una rama). Al clonar un repositorio SVN, &lt;code&gt;git svn&lt;/code&gt; no puede saber si tal compromiso con una etiqueta ocurrir&amp;aacute; en el futuro. Por lo tanto, act&amp;uacute;a de manera conservadora e importa todas las etiquetas SVN como ramas, prefijando el nombre de la etiqueta con &lt;code&gt;tags/&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c215580302a5f52c2e27d45d0d7c1d84a4eccdbe" translate="yes" xml:space="preserve">
          <source>In Thunderbird 2: Edit..Preferences..Composition, wrap plain text messages at 0</source>
          <target state="translated">En Thunderbird 2:Editar...Preferencias...Composición,envolver los mensajes de texto plano en 0</target>
        </trans-unit>
        <trans-unit id="f440374532f0b3d43494a1b042e56f8d4bce5f5d" translate="yes" xml:space="preserve">
          <source>In Thunderbird 3: Edit..Preferences..Advanced..Config Editor. Search for &quot;mail.wrap_long_lines&quot;. Toggle it to make sure it is set to &lt;code&gt;false&lt;/code&gt;. Also, search for &quot;mailnews.wraplength&quot; and set the value to 0.</source>
          <target state="translated">En Thunderbird 3: Edit..Preferences..Advanced..Config Editor. Busque &quot;mail.wrap_long_lines&quot;. Act&amp;iacute;valo para asegurarte de que est&amp;eacute; configurado como &lt;code&gt;false&lt;/code&gt; . Adem&amp;aacute;s, busque &quot;mailnews.wraplength&quot; y establezca el valor en 0.</target>
        </trans-unit>
        <trans-unit id="17583a69f7262368825714769d6089546a690b45" translate="yes" xml:space="preserve">
          <source>In a fast-forward update from A to B, the set of commits that the original commit A built on top of is a subset of the commits the new commit B builds on top of. Hence, it does not lose any history.</source>
          <target state="translated">En una actualización rápida de A a B,el conjunto de confirmaciones que la confirmación original de A construyó encima es un subconjunto de las confirmaciones que la nueva confirmación de B construye encima.Por lo tanto,no pierde ninguna historia.</target>
        </trans-unit>
        <trans-unit id="3d5b5c31f19f75af08174ee7bc83bae8bb6f0e50" translate="yes" xml:space="preserve">
          <source>In a normal repository, this tends to work automatically. The objects are mostly reachable from the branches and tags, and that&amp;rsquo;s what clients fetch. Any deltas we find on the server are likely to be between objects the client has or will have.</source>
          <target state="translated">En un repositorio normal, esto tiende a funcionar autom&amp;aacute;ticamente. La mayor&amp;iacute;a de los objetos son accesibles desde las ramas y etiquetas, y eso es lo que buscan los clientes. Es probable que cualquier delta que encontremos en el servidor se encuentre entre los objetos que el cliente tiene o tendr&amp;aacute;.</target>
        </trans-unit>
        <trans-unit id="8fbcefe66dafd74525f6b8ab70d285c817dc5cf1" translate="yes" xml:space="preserve">
          <source>In a repository using the traditional SHA-1, pack checksums, index checksums, and object IDs (object names) mentioned below are all computed using SHA-1. Similarly, in SHA-256 repositories, these values are computed using SHA-256.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="566e8925a0c194716258bb9a397f522567172cf6" translate="yes" xml:space="preserve">
          <source>In a situation where topic consisted of three commits, and the maintainer applied two of them, the situation might look like:</source>
          <target state="translated">En una situación en la que el tema consistiera en tres compromisos,y el mantenedor aplicara dos de ellos,la situación podría parecerse:</target>
        </trans-unit>
        <trans-unit id="ee8b5fc930f29435d4aa076d7196ceac4e277fb2" translate="yes" xml:space="preserve">
          <source>In a workflow employing relatively long lived topic branches, the developer sometimes needs to resolve the same conflicts over and over again until the topic branches are done (either merged to the &quot;release&quot; branch, or sent out and accepted upstream).</source>
          <target state="translated">En un flujo de trabajo que emplea ramas temáticas de relativa larga duración,el desarrollador a veces necesita resolver los mismos conflictos una y otra vez hasta que se terminan las ramas temáticas (ya sea fusionadas con la rama de &quot;liberación&quot;,o enviadas y aceptadas aguas arriba).</target>
        </trans-unit>
        <trans-unit id="f7c91952cc20e93e498fb039cc3dfb4469b10f04" translate="yes" xml:space="preserve">
          <source>In addition there are a number of other widely deployed hosting, browsing and reviewing solutions such as:</source>
          <target state="translated">Además,existen otras soluciones de hospedaje,navegación y revisión ampliamente utilizadas,tales como:</target>
        </trans-unit>
        <trans-unit id="24a0d0f28bd8af9cb9f6203128773b89ba8e8365" translate="yes" xml:space="preserve">
          <source>In addition to &lt;code&gt;--full-index&lt;/code&gt;, output a binary diff that can be applied with &lt;code&gt;git-apply&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="666628046a18a0e7af967b1de7c1a7d7baa813ae" translate="yes" xml:space="preserve">
          <source>In addition to &lt;code&gt;--full-index&lt;/code&gt;, output a binary diff that can be applied with &lt;code&gt;git-apply&lt;/code&gt;. Implies &lt;code&gt;--patch&lt;/code&gt;.</source>
          <target state="translated">Adem&amp;aacute;s de &lt;code&gt;--full-index&lt;/code&gt; , genera una diferencia binaria que se puede aplicar con &lt;code&gt;git-apply&lt;/code&gt; . Implica - &lt;code&gt;--patch&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3f6c767f6bc5922d93e508ae1661b26c77720a8f" translate="yes" xml:space="preserve">
          <source>In addition to &lt;code&gt;-M&lt;/code&gt;, detect lines moved or copied from other files that were modified in the same commit. This is useful when you reorganize your program and move code around across files. When this option is given twice, the command additionally looks for copies from other files in the commit that creates the file. When this option is given three times, the command additionally looks for copies from other files in any commit.</source>
          <target state="translated">Adem&amp;aacute;s de &lt;code&gt;-M&lt;/code&gt; , detecta l&amp;iacute;neas movidas o copiadas de otros archivos que fueron modificados en la misma confirmaci&amp;oacute;n. Esto es &amp;uacute;til cuando reorganiza su programa y mueve c&amp;oacute;digo entre archivos. Cuando esta opci&amp;oacute;n se da dos veces, el comando busca adem&amp;aacute;s copias de otros archivos en la confirmaci&amp;oacute;n que crea el archivo. Cuando se da esta opci&amp;oacute;n tres veces, el comando busca adem&amp;aacute;s copias de otros archivos en cualquier confirmaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="1888d5f31940dfed593ca4ff2d62ba84db0ce760" translate="yes" xml:space="preserve">
          <source>In addition to &lt;code&gt;.gitattributes&lt;/code&gt; (per-directory) and &lt;code&gt;.git/info/attributes&lt;/code&gt;, Git looks into this file for attributes (see &lt;a href=&quot;gitattributes&quot;&gt;gitattributes[5]&lt;/a&gt;). Path expansions are made the same way as for &lt;code&gt;core.excludesFile&lt;/code&gt;. Its default value is &lt;code&gt;$XDG_CONFIG_HOME/git/attributes&lt;/code&gt;. If &lt;code&gt;$XDG_CONFIG_HOME&lt;/code&gt; is either not set or empty, &lt;code&gt;$HOME/.config/git/attributes&lt;/code&gt; is used instead.</source>
          <target state="translated">Adem&amp;aacute;s de &lt;code&gt;.gitattributes&lt;/code&gt; (por directorio) y &lt;code&gt;.git/info/attributes&lt;/code&gt; , Git busca atributos en este archivo (ver &lt;a href=&quot;gitattributes&quot;&gt;gitattributes [5]&lt;/a&gt; ). Las expansiones de ruta se realizan de la misma manera que para &lt;code&gt;core.excludesFile&lt;/code&gt; . Su valor predeterminado es &lt;code&gt;$XDG_CONFIG_HOME/git/attributes&lt;/code&gt; . Si &lt;code&gt;$XDG_CONFIG_HOME&lt;/code&gt; no est&amp;aacute; configurado o est&amp;aacute; vac&amp;iacute;o, se usa &lt;code&gt;$HOME/.config/git/attributes&lt;/code&gt; su lugar.</target>
        </trans-unit>
        <trans-unit id="a80ff33db6a243344cb7df3dd9b8d8d41e916e5f" translate="yes" xml:space="preserve">
          <source>In addition to HEAD, there are several other special names for commits:</source>
          <target state="translated">Además de CABEZA,hay otros nombres especiales para las comisiones:</target>
        </trans-unit>
        <trans-unit id="3d952784176d6003ec5b2f9f790384bd9b8c8247" translate="yes" xml:space="preserve">
          <source>In addition to being the staging area for new commits, the index file is also populated from the object database when checking out a branch, and is used to hold the trees involved in a merge operation. See &lt;a href=&quot;gitcore-tutorial&quot;&gt;gitcore-tutorial[7]&lt;/a&gt; and the relevant man pages for details.</source>
          <target state="translated">Adem&amp;aacute;s de ser el &amp;aacute;rea de preparaci&amp;oacute;n para nuevas confirmaciones, el archivo de &amp;iacute;ndice tambi&amp;eacute;n se completa desde la base de datos de objetos cuando se extrae una rama y se usa para contener los &amp;aacute;rboles involucrados en una operaci&amp;oacute;n de fusi&amp;oacute;n. Consulte &lt;a href=&quot;gitcore-tutorial&quot;&gt;gitcore-tutorial [7]&lt;/a&gt; y las p&amp;aacute;ginas de manual correspondientes para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="e26ec25b7f02c15aecd179e2dad4bd1f6afe8d5c" translate="yes" xml:space="preserve">
          <source>In addition to branch names, populate the log message with at most the specified number of one-line descriptions from the actual commits that are being merged. Defaults to false, and true is a synonym for 20.</source>
          <target state="translated">Además de los nombres de las ramas,rellene el mensaje de registro con,como máximo,el número especificado de descripciones de una línea de las confirmaciones reales que se están fusionando.Por defecto es falso,y verdadero es sinónimo de 20.</target>
        </trans-unit>
        <trans-unit id="c5e07d7771d3e15091a04a68ed9a697dc979376c" translate="yes" xml:space="preserve">
          <source>In addition to branch names, populate the log message with one-line descriptions from at most &amp;lt;n&amp;gt; actual commits that are being merged. See also &lt;a href=&quot;git-fmt-merge-msg&quot;&gt;git-fmt-merge-msg[1]&lt;/a&gt;.</source>
          <target state="translated">Adem&amp;aacute;s de los nombres de las sucursales, complete el mensaje de registro con descripciones de una l&amp;iacute;nea de como m&amp;aacute;ximo &amp;lt;n&amp;gt; confirmaciones reales que se est&amp;aacute;n fusionando. Consulte tambi&amp;eacute;n &lt;a href=&quot;git-fmt-merge-msg&quot;&gt;git-fmt-merge-msg [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="53e8184a4fded8ffd5d3887baaffe37015550f76" translate="yes" xml:space="preserve">
          <source>In addition to branch names, populate the log message with one-line descriptions from the actual commits that are being merged. At most &amp;lt;n&amp;gt; commits from each merge parent will be used (20 if &amp;lt;n&amp;gt; is omitted). This overrides the &lt;code&gt;merge.log&lt;/code&gt; configuration variable.</source>
          <target state="translated">Adem&amp;aacute;s de los nombres de las sucursales, complete el mensaje de registro con descripciones de una l&amp;iacute;nea de las confirmaciones reales que se est&amp;aacute;n fusionando. Se utilizar&amp;aacute;n como m&amp;aacute;ximo &amp;lt;n&amp;gt; confirmaciones de cada padre de fusi&amp;oacute;n (20 si se omite &amp;lt;n&amp;gt;). Esto anula la variable de configuraci&amp;oacute;n &lt;code&gt;merge.log&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6235bcb46867554949f149e203ea63eff52ea516" translate="yes" xml:space="preserve">
          <source>In addition to branch names, populate the log message with the branch description text associated with them. Defaults to false.</source>
          <target state="translated">Además de los nombres de las ramas,rellene el mensaje de registro con el texto de descripción de la rama asociado a ellas.Por defecto es falso.</target>
        </trans-unit>
        <trans-unit id="f62e3d2f843321847fb42ac94f40312c54d52ccf" translate="yes" xml:space="preserve">
          <source>In addition to labelling blobs and commits with mark ids, also label tags. This is useful in conjunction with &lt;code&gt;--export-marks&lt;/code&gt; and &lt;code&gt;--import-marks&lt;/code&gt;, and is also useful (and necessary) for exporting of nested tags. It does not hurt other cases and would be the default, but many fast-import frontends are not prepared to accept tags with mark identifiers.</source>
          <target state="translated">Adem&amp;aacute;s de etiquetar blobs y confirmaciones con identificadores de marca, tambi&amp;eacute;n etiquete etiquetas. Esto es &amp;uacute;til junto con &lt;code&gt;--export-marks&lt;/code&gt; y &lt;code&gt;--import-marks&lt;/code&gt; , y tambi&amp;eacute;n es &amp;uacute;til (y necesario) para exportar etiquetas anidadas. No afecta a otros casos y ser&amp;iacute;a el predeterminado, pero muchas interfaces de importaci&amp;oacute;n r&amp;aacute;pida no est&amp;aacute;n preparadas para aceptar etiquetas con identificadores de marca.</target>
        </trans-unit>
        <trans-unit id="22782295e6ea8ee2d620246684c55c016d61141f" translate="yes" xml:space="preserve">
          <source>In addition to objects reachable from any of our references, keep objects reachable from listed &amp;lt;head&amp;gt;s.</source>
          <target state="translated">Adem&amp;aacute;s de los objetos accesibles desde cualquiera de nuestras referencias, mantenga los objetos accesibles desde los &amp;lt;head&amp;gt; listados.</target>
        </trans-unit>
        <trans-unit id="99c28f63ba36fb0fcaa38897708f95d9a693e369" translate="yes" xml:space="preserve">
          <source>In addition to saving you keystrokes, &lt;code&gt;git pull&lt;/code&gt; also helps you by producing a default commit message documenting the branch and repository that you pulled from.</source>
          <target state="translated">Adem&amp;aacute;s de ahorrarte las pulsaciones de teclas, &lt;code&gt;git pull&lt;/code&gt; tambi&amp;eacute;n te ayuda al producir un mensaje de confirmaci&amp;oacute;n predeterminado que documente la rama y el repositorio del que extrajiste.</target>
        </trans-unit>
        <trans-unit id="7129d0d8ea665296c3d9391d29a173f1ab2fc5f1" translate="yes" xml:space="preserve">
          <source>In addition to searching in the tracked files in the working tree, search also in untracked files.</source>
          <target state="translated">Además de buscar en los archivos rastreados en el árbol de trabajo,busca también en los archivos no rastreados.</target>
        </trans-unit>
        <trans-unit id="d5b7aa3ae2fa07bc2a7838db49f832f9fd332a95" translate="yes" xml:space="preserve">
          <source>In addition to the &lt;code&gt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&lt;/code&gt;, &lt;code&gt;=======&lt;/code&gt;, and &lt;code&gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&lt;/code&gt; markers, it uses another &lt;code&gt;|||||||&lt;/code&gt; marker that is followed by the original text. You can tell that the original just stated a fact, and your side simply gave in to that statement and gave up, while the other side tried to have a more positive attitude. You can sometimes come up with a better resolution by viewing the original.</source>
          <target state="translated">Adem&amp;aacute;s de los &lt;code&gt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&lt;/code&gt; , &lt;code&gt;=======&lt;/code&gt; y &lt;code&gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&lt;/code&gt; , utiliza otro &lt;code&gt;|||||||&lt;/code&gt; marcador que va seguido del texto original. Puede decir que el original acaba de declarar un hecho, y su lado simplemente cedi&amp;oacute; a esa declaraci&amp;oacute;n y se rindi&amp;oacute;, mientras que el otro lado trat&amp;oacute; de tener una actitud m&amp;aacute;s positiva. A veces, puede obtener una mejor resoluci&amp;oacute;n al ver el original.</target>
        </trans-unit>
        <trans-unit id="3a9ee73184ef3bce8e3d7aa50aca9c03ee962a97" translate="yes" xml:space="preserve">
          <source>In addition to the &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; listed on the command line, read them from the standard input. If a &lt;code&gt;--&lt;/code&gt; separator is seen, stop reading commits and start reading paths to limit the result.</source>
          <target state="translated">Adem&amp;aacute;s de los &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; que aparecen en la l&amp;iacute;nea de comando, l&amp;eacute;alos desde la entrada est&amp;aacute;ndar. Si se ve un &lt;code&gt;--&lt;/code&gt; separador, deje de leer confirmaciones y comience a leer rutas para limitar el resultado.</target>
        </trans-unit>
        <trans-unit id="e57f382f37af963780a48b9b24f281a677f73e3f" translate="yes" xml:space="preserve">
          <source>In addition to the above settings, you can change whether TREESAME affects inclusion:</source>
          <target state="translated">Además de los ajustes anteriores,puede cambiar si el ÁRBOL afecta a la inclusión:</target>
        </trans-unit>
        <trans-unit id="15a1839e21183f6c87dd1989058c966575a3a5b3" translate="yes" xml:space="preserve">
          <source>In addition to the above two patterns, we also expect that all files in the root directory are included. If a recursive pattern is added, then all leading directories are added as parent patterns.</source>
          <target state="translated">Además de los dos patrones anteriores,también esperamos que se incluyan todos los archivos del directorio raíz.Si se añade un patrón recursivo,entonces todos los directorios principales se añaden como patrones principales.</target>
        </trans-unit>
        <trans-unit id="5cdd7d140b9026d9dc5fc6d397fdc9a74057bb4e" translate="yes" xml:space="preserve">
          <source>In addition to the above, for commit and tag objects, the header field names (&lt;code&gt;tree&lt;/code&gt;, &lt;code&gt;parent&lt;/code&gt;, &lt;code&gt;object&lt;/code&gt;, &lt;code&gt;type&lt;/code&gt;, and &lt;code&gt;tag&lt;/code&gt;) can be used to specify the value in the header field.</source>
          <target state="translated">Adem&amp;aacute;s de lo anterior, para los objetos de confirmaci&amp;oacute;n y etiqueta, los nombres de los campos de encabezado ( &lt;code&gt;tree&lt;/code&gt; , &lt;code&gt;parent&lt;/code&gt; , &lt;code&gt;object&lt;/code&gt; , &lt;code&gt;type&lt;/code&gt; y &lt;code&gt;tag&lt;/code&gt; ) se pueden usar para especificar el valor en el campo de encabezado.</target>
        </trans-unit>
        <trans-unit id="0cd22d754613826bc7df21407a063908e095a28b" translate="yes" xml:space="preserve">
          <source>In addition to the above, for commit and tag objects, the header field names (&lt;code&gt;tree&lt;/code&gt;, &lt;code&gt;parent&lt;/code&gt;, &lt;code&gt;object&lt;/code&gt;, &lt;code&gt;type&lt;/code&gt;, and &lt;code&gt;tag&lt;/code&gt;) can be used to specify the value in the header field. Fields &lt;code&gt;tree&lt;/code&gt; and &lt;code&gt;parent&lt;/code&gt; can also be used with modifier &lt;code&gt;:short&lt;/code&gt; and &lt;code&gt;:short=&amp;lt;length&amp;gt;&lt;/code&gt; just like &lt;code&gt;objectname&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3da373db26873c5d2b59dd68ca741f2f25c73567" translate="yes" xml:space="preserve">
          <source>In addition to the commits shown in the default history, show each merge commit that is not TREESAME to its first parent but is TREESAME to a later parent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a3a21fa25ba67eb3d7f9da7f4344fe1b071989c" translate="yes" xml:space="preserve">
          <source>In addition to the names of files that have been changed, also show the textual changes that are staged to be committed (i.e., like the output of &lt;code&gt;git diff --cached&lt;/code&gt;). If &lt;code&gt;-v&lt;/code&gt; is specified twice, then also show the changes in the working tree that have not yet been staged (i.e., like the output of &lt;code&gt;git diff&lt;/code&gt;).</source>
          <target state="translated">Adem&amp;aacute;s de los nombres de los archivos que se han cambiado, tambi&amp;eacute;n muestra los cambios textuales que est&amp;aacute;n preparados para ser confirmados (es decir, como la salida de &lt;code&gt;git diff --cached&lt;/code&gt; ). Si &lt;code&gt;-v&lt;/code&gt; se especifica dos veces, tambi&amp;eacute;n muestra los cambios en el &amp;aacute;rbol de trabajo que a&amp;uacute;n no se han organizado (es decir, como la salida de &lt;code&gt;git diff&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="9d2884340103002807461c187c73c074fbbd3657" translate="yes" xml:space="preserve">
          <source>In addition to the object pointed by it, show the underlying ref pointed by it when showing a symbolic ref. Currently, upload-pack only shows the symref HEAD, so it will be the only one shown by ls-remote.</source>
          <target state="translated">Además del objeto señalado por él,mostrar el ref subyacente señalado por él al mostrar un ref simbólico.Actualmente,upload-pack sólo muestra el simbólico HEAD,por lo que será el único mostrado por ls-remote.</target>
        </trans-unit>
        <trans-unit id="6c7a07603f44cd9719a4b680d9f7256b9473029e" translate="yes" xml:space="preserve">
          <source>In addition to the patches, generate a cover letter file containing the branch description, shortlog and the overall diffstat. You can fill in a description in the file before sending it out.</source>
          <target state="translated">Además de los parches,genere un archivo de carta de presentación que contenga la descripción de la sucursal,el resumen y el diffstat general.Puedes rellenar una descripción en el archivo antes de enviarlo.</target>
        </trans-unit>
        <trans-unit id="102ba20e10a0928862b597a4b85d8411aa7a16cb" translate="yes" xml:space="preserve">
          <source>In addition to the text-based messages available in &lt;code&gt;GIT_TRACE2&lt;/code&gt;, this setting writes a column-based format for understanding nesting regions. See &lt;code&gt;GIT_TRACE2&lt;/code&gt; for available trace output options and &lt;a href=&quot;api-trace2&quot;&gt;Trace2 documentation&lt;/a&gt; for full details.</source>
          <target state="translated">Adem&amp;aacute;s de los mensajes basados ​​en texto disponibles en &lt;code&gt;GIT_TRACE2&lt;/code&gt; , esta configuraci&amp;oacute;n escribe un formato basado en columnas para comprender las regiones de anidaci&amp;oacute;n. Consulte &lt;code&gt;GIT_TRACE2&lt;/code&gt; para conocer las opciones de salida de seguimiento disponibles y la &lt;a href=&quot;api-trace2&quot;&gt;documentaci&amp;oacute;n de Trace2&lt;/a&gt; para obtener detalles completos.</target>
        </trans-unit>
        <trans-unit id="547bdce4dd37bfda9e1c54bdf493ad3c6de08ff9" translate="yes" xml:space="preserve">
          <source>In addition, any unrecognized string that has a &lt;code&gt;%&lt;/code&gt; in it is interpreted as if it has &lt;code&gt;tformat:&lt;/code&gt; in front of it. For example, these two are equivalent:</source>
          <target state="translated">Adem&amp;aacute;s, cualquier cadena no reconocida que tenga un &lt;code&gt;%&lt;/code&gt; en ella se interpreta como si tuviera &lt;code&gt;tformat:&lt;/code&gt; delante de ella. Por ejemplo, estos dos son equivalentes:</target>
        </trans-unit>
        <trans-unit id="bc74e38407c657e1d62a835de829f2a0637ff932" translate="yes" xml:space="preserve">
          <source>In addition, if the variable is set to &lt;code&gt;af_unix:[&amp;lt;socket_type&amp;gt;:]&amp;lt;absolute-pathname&amp;gt;&lt;/code&gt;, Git will try to open the path as a Unix Domain Socket. The socket type can be either &lt;code&gt;stream&lt;/code&gt; or &lt;code&gt;dgram&lt;/code&gt;.</source>
          <target state="translated">Adem&amp;aacute;s, si la variable se establece en &lt;code&gt;af_unix:[&amp;lt;socket_type&amp;gt;:]&amp;lt;absolute-pathname&amp;gt;&lt;/code&gt; , Git intentar&amp;aacute; abrir la ruta como un socket de dominio Unix. El tipo de conector puede ser &lt;code&gt;stream&lt;/code&gt; o &lt;code&gt;dgram&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fdc73bece50193400c9954e5c33b0d5db46ea312" translate="yes" xml:space="preserve">
          <source>In addition, some Git commands (such as &lt;a href=&quot;git-show&quot;&gt;git-show[1]&lt;/a&gt; and &lt;a href=&quot;git-push&quot;&gt;git-push[1]&lt;/a&gt;) can also take revision parameters which denote other objects than commits, e.g. blobs (&quot;files&quot;) or trees (&quot;directories of files&quot;).</source>
          <target state="translated">Adem&amp;aacute;s, algunos comandos de Git (como &lt;a href=&quot;git-show&quot;&gt;git-show [1]&lt;/a&gt; y &lt;a href=&quot;git-push&quot;&gt;git-push [1]&lt;/a&gt; ) tambi&amp;eacute;n pueden tomar par&amp;aacute;metros de revisi&amp;oacute;n que denotan otros objetos adem&amp;aacute;s de confirmaciones, por ejemplo, blobs (&quot;archivos&quot;) o &amp;aacute;rboles (&quot;directorios de archivos&quot; ).</target>
        </trans-unit>
        <trans-unit id="5a217c5b9ad4a208c3474725c21c0795d0272c6d" translate="yes" xml:space="preserve">
          <source>In addition, some advanced users find &lt;code&gt;pre-commit&lt;/code&gt; hooks to be an impediment to workflows that use temporary commits to stage work in progress or that create fixup commits, so it&amp;rsquo;s better to push these kinds of checks to the server anyway.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c0114752cc3965279675b92f9d509a7719a899c" translate="yes" xml:space="preserve">
          <source>In addition, the date part is accepted in the following formats: &lt;code&gt;YYYY.MM.DD&lt;/code&gt;, &lt;code&gt;MM/DD/YYYY&lt;/code&gt; and &lt;code&gt;DD.MM.YYYY&lt;/code&gt;.</source>
          <target state="translated">Adem&amp;aacute;s, la parte de la fecha se acepta en los siguientes formatos: &lt;code&gt;YYYY.MM.DD&lt;/code&gt; , &lt;code&gt;MM/DD/YYYY&lt;/code&gt; y &lt;code&gt;DD.MM.YYYY&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b090b5874a4f9cb2a75963ffefe67f7cff33a14b" translate="yes" xml:space="preserve">
          <source>In addition, the following pairs of options are incompatible:</source>
          <target state="translated">Además,los siguientes pares de opciones son incompatibles:</target>
        </trans-unit>
        <trans-unit id="c9eac4f7a75d08c8d5ecd2f93cae76dbdd2c65fb" translate="yes" xml:space="preserve">
          <source>In addition, there are a number of optional keys:</source>
          <target state="translated">Además,hay una serie de teclas opcionales:</target>
        </trans-unit>
        <trans-unit id="85bcf09fd5e608ff2a7f0cedbab486dcd84fe020" translate="yes" xml:space="preserve">
          <source>In addition, you can use the &lt;code&gt;store&lt;/code&gt; credential manager which stores in a file in your home directory, or the &lt;code&gt;cache&lt;/code&gt; credential manager, which does not permanently store your credentials, but does prevent you from being prompted for them for a certain period of time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3170175bde47695f8d16d1aa859fc39830538d4d" translate="yes" xml:space="preserve">
          <source>In all &quot;keep index&quot; cases, the index entry stays as in the original index file. If the entry is not up to date, &lt;code&gt;git read-tree&lt;/code&gt; keeps the copy in the work tree intact when operating under the -u flag.</source>
          <target state="translated">En todos los casos de &quot;mantener &amp;iacute;ndice&quot;, la entrada de &amp;iacute;ndice permanece como en el archivo de &amp;iacute;ndice original. Si la entrada no est&amp;aacute; actualizada, &lt;code&gt;git read-tree&lt;/code&gt; mantiene intacta la copia en el &amp;aacute;rbol de trabajo cuando se opera bajo la bandera -u.</target>
        </trans-unit>
        <trans-unit id="518e45973547d44ae8b0cf643cea7c8e1439a6f7" translate="yes" xml:space="preserve">
          <source>In all of these cases, the commands themselves first optionally limit the two sets of files by any pathspecs given on their command-lines, and compare corresponding paths in the two resulting sets of files.</source>
          <target state="translated">En todos estos casos,los propios comandos limitan primero opcionalmente los dos conjuntos de archivos por cualquier pathspecs dado en sus líneas de comandos,y comparan las rutas correspondientes en los dos conjuntos de archivos resultantes.</target>
        </trans-unit>
        <trans-unit id="a976d8376129a573bbe9b45628bf2bdf5e1fe7e1" translate="yes" xml:space="preserve">
          <source>In an environment that restricts the users' access only to git commands over the wire, this hook can be used to implement access control without relying on filesystem ownership and group membership. See &lt;a href=&quot;git-shell&quot;&gt;git-shell[1]&lt;/a&gt; for how you might use the login shell to restrict the user&amp;rsquo;s access to only git commands.</source>
          <target state="translated">En un entorno que restringe el acceso de los usuarios solo a los comandos git a trav&amp;eacute;s del cable, este gancho se puede usar para implementar el control de acceso sin depender de la propiedad del sistema de archivos y la pertenencia al grupo. Consulte &lt;a href=&quot;git-shell&quot;&gt;git-shell [1]&lt;/a&gt; para saber c&amp;oacute;mo puede usar el shell de inicio de sesi&amp;oacute;n para restringir el acceso del usuario a solo comandos de git.</target>
        </trans-unit>
        <trans-unit id="9220471bbc29ec41ed13c216a79cb80f852ef698" translate="yes" xml:space="preserve">
          <source>In any case, a field name that refers to a field inapplicable to the object referred by the ref does not cause an error. It returns an empty string instead.</source>
          <target state="translated">En cualquier caso,un nombre de campo que se refiera a un campo inaplicable al objeto referido por el árbitro no causa un error.En cambio,devuelve una cadena vacía.</target>
        </trans-unit>
        <trans-unit id="3ed3c4a7faef04068c3d21c5e427f36b63dea04c" translate="yes" xml:space="preserve">
          <source>In both cases, all bytes are treated as-is (i.e., there is no quoting, and one cannot transmit a value with newline or NUL in it). The list of attributes is terminated by a blank line or end-of-file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55cc553818c07e93d42b2d9a9da22e8f0487ba9d" translate="yes" xml:space="preserve">
          <source>In both formats &lt;code&gt;&amp;lt;commit-ish&amp;gt;&lt;/code&gt; is any of the commit specification expressions also accepted by &lt;code&gt;from&lt;/code&gt; (see above).</source>
          <target state="translated">En ambos formatos, &lt;code&gt;&amp;lt;commit-ish&amp;gt;&lt;/code&gt; es cualquiera de las expresiones de especificaci&amp;oacute;n de confirmaci&amp;oacute;n tambi&amp;eacute;n aceptadas por &lt;code&gt;from&lt;/code&gt; (ver arriba).</target>
        </trans-unit>
        <trans-unit id="9838d0f6a0615e5345bacba941fa3a7ae58fc03e" translate="yes" xml:space="preserve">
          <source>In both formats &lt;code&gt;&amp;lt;mode&amp;gt;&lt;/code&gt; is the type of file entry, specified in octal. Git only supports the following modes:</source>
          <target state="translated">En ambos formatos, &lt;code&gt;&amp;lt;mode&amp;gt;&lt;/code&gt; es el tipo de entrada de archivo, especificado en octal. Git solo admite los siguientes modos:</target>
        </trans-unit>
        <trans-unit id="e124f640b7099c2dfc555e83763a437b341aea9d" translate="yes" xml:space="preserve">
          <source>In both formats &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt; is the complete path of the file to be added (if not already existing) or modified (if already existing).</source>
          <target state="translated">En ambos formatos, &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt; es la ruta completa del archivo que se agregar&amp;aacute; (si a&amp;uacute;n no existe) o se modificar&amp;aacute; (si ya existe).</target>
        </trans-unit>
        <trans-unit id="e22465a192b99fdb8a38ceb6e2163b1bb2a55eaa" translate="yes" xml:space="preserve">
          <source>In both formats RS (the record separator) is newline by default but will be the null byte if -z was passed on the command line. The temporary file names are always safe strings; they will never contain directory separators or whitespace characters. The path field is always relative to the current directory and the temporary file names are always relative to the top level directory.</source>
          <target state="translated">En ambos formatos RS (el separador de registros)es la nueva línea por defecto,pero será el byte nulo si se pasó -z en la línea de comandos.Los nombres de archivos temporales son siempre cadenas seguras;nunca contendrán separadores de directorios o caracteres de espacio en blanco.El campo de la ruta es siempre relativo al directorio actual y los nombres de los archivos temporales son siempre relativos al directorio de nivel superior.</target>
        </trans-unit>
        <trans-unit id="bbdfd88cae7c8d5fe4027454edb7c9f3a518f214" translate="yes" xml:space="preserve">
          <source>In both rename and copy detection, the same &quot;extent of changes&quot; algorithm used in diffcore-break is used to determine if two files are &quot;similar enough&quot;, and can be customized to use a similarity score different from the default of 50% by giving a number after the &quot;-M&quot; or &quot;-C&quot; option (e.g. &quot;-M8&quot; to tell it to use 8/10 = 80%).</source>
          <target state="translated">Tanto en la detección de cambios de nombre como en la de copias,el mismo algoritmo de &quot;extensión de los cambios&quot; utilizado en la ruptura del código de barras se utiliza para determinar si dos archivos son &quot;suficientemente similares&quot;,y puede personalizarse para utilizar una puntuación de similitud diferente de la predeterminada del 50% dando un número después de la opción &quot;-M&quot; o &quot;-C&quot; (por ejemplo,&quot;-M8&quot; para indicar que utilice 8/10=80%).</target>
        </trans-unit>
        <trans-unit id="cef1680a7a27c73f800aa2ae728f37bb9ebeed5c" translate="yes" xml:space="preserve">
          <source>In case &amp;lt;old&amp;gt; and &amp;lt;new&amp;gt; are the same, and &amp;lt;old&amp;gt; is a file under &lt;code&gt;$GIT_DIR/remotes&lt;/code&gt; or &lt;code&gt;$GIT_DIR/branches&lt;/code&gt;, the remote is converted to the configuration file format.</source>
          <target state="translated">En caso de que &amp;lt;old&amp;gt; y &amp;lt;new&amp;gt; sean iguales, y &amp;lt;old&amp;gt; sea un archivo en &lt;code&gt;$GIT_DIR/remotes&lt;/code&gt; o &lt;code&gt;$GIT_DIR/branches&lt;/code&gt; , el control remoto se convierte al formato de archivo de configuraci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="77e55c61e61a6a73beec771303a37403de7ae828" translate="yes" xml:space="preserve">
          <source>In case (some of) these environment variables are not set, the information is taken from the configuration items &lt;code&gt;user.name&lt;/code&gt; and &lt;code&gt;user.email&lt;/code&gt;, or, if not present, the environment variable EMAIL, or, if that is not set, system user name and the hostname used for outgoing mail (taken from &lt;code&gt;/etc/mailname&lt;/code&gt; and falling back to the fully qualified hostname when that file does not exist).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3736cf7c9e88d8830feeb4facce5d47bac7822e0" translate="yes" xml:space="preserve">
          <source>In case (some of) these environment variables are not set, the information is taken from the configuration items user.name and user.email, or, if not present, the environment variable EMAIL, or, if that is not set, system user name and the hostname used for outgoing mail (taken from &lt;code&gt;/etc/mailname&lt;/code&gt; and falling back to the fully qualified hostname when that file does not exist).</source>
          <target state="translated">En caso de que (algunas de) estas variables de entorno no est&amp;eacute;n configuradas, la informaci&amp;oacute;n se toma de los elementos de configuraci&amp;oacute;n user.name y user.email, o, si no est&amp;aacute; presente, la variable de entorno EMAIL o, si no est&amp;aacute; configurada, usuario del sistema name y el nombre de host utilizado para el correo saliente (tomado de &lt;code&gt;/etc/mailname&lt;/code&gt; y recurriendo al nombre de host completo cuando ese archivo no existe).</target>
        </trans-unit>
        <trans-unit id="fab172a52a0d96a15d352f159439993a534e8fe5" translate="yes" xml:space="preserve">
          <source>In case of conflict, &lt;code&gt;git rebase&lt;/code&gt; will stop at the first problematic commit and leave conflict markers in the tree. You can use &lt;code&gt;git diff&lt;/code&gt; to locate the markers (&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;) and make edits to resolve the conflict. For each file you edit, you need to tell Git that the conflict has been resolved, typically this would be done with</source>
          <target state="translated">En caso de conflicto, &lt;code&gt;git rebase&lt;/code&gt; se detendr&amp;aacute; en la primera confirmaci&amp;oacute;n problem&amp;aacute;tica y dejar&amp;aacute; marcadores de conflicto en el &amp;aacute;rbol. Puede usar &lt;code&gt;git diff&lt;/code&gt; para ubicar los marcadores (&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;) y realizar ediciones para resolver el conflicto. Para cada archivo que edite, debe decirle a Git que el conflicto se ha resuelto, por lo general, esto se har&amp;iacute;a con</target>
        </trans-unit>
        <trans-unit id="8de3ddb587a19db9387af113a7f3cb72b19328d0" translate="yes" xml:space="preserve">
          <source>In case of failure in the output of &lt;a href=&quot;git-rm&quot;&gt;git-rm[1]&lt;/a&gt;, show directions on how to proceed from the current state.</source>
          <target state="translated">En caso de falla en la salida de &lt;a href=&quot;git-rm&quot;&gt;git-rm [1]&lt;/a&gt; , muestre las instrucciones sobre c&amp;oacute;mo proceder desde el estado actual.</target>
        </trans-unit>
        <trans-unit id="1ca6e2b22c66fb3bb4920e7b16e070cab433e13d" translate="yes" xml:space="preserve">
          <source>In case the filter cannot or does not want to process the content as well as any future content for the lifetime of the Git process, then it is expected to respond with an &quot;abort&quot; status at any point in the protocol.</source>
          <target state="translated">En caso de que el filtro no pueda o no quiera procesar el contenido,así como cualquier contenido futuro durante el tiempo que dure el proceso de Git,se espera que responda con un estado de &quot;abortar&quot; en cualquier punto del protocolo.</target>
        </trans-unit>
        <trans-unit id="a44b155f3278323b322b1edffc06fec805c87137" translate="yes" xml:space="preserve">
          <source>In case the filter cannot or does not want to process the content, it is expected to respond with an &quot;error&quot; status.</source>
          <target state="translated">En caso de que el filtro no pueda o no quiera procesar el contenido,se espera que responda con un estado de &quot;error&quot;.</target>
        </trans-unit>
        <trans-unit id="063d2c577358a9002bf9810cc43ec764ca0682e1" translate="yes" xml:space="preserve">
          <source>In command synopses, the word &quot;tree-ish&quot; is sometimes used to designate such an argument.</source>
          <target state="translated">En las sinopsis de comandos,la palabra &quot;arbóreo&quot; se utiliza a veces para designar tal argumento.</target>
        </trans-unit>
        <trans-unit id="0cb56babf143d18da14e8d5b38b880de0eb432ae" translate="yes" xml:space="preserve">
          <source>In compact output mode, specified with configuration variable fetch.output, if either entire &lt;code&gt;&amp;lt;from&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;to&amp;gt;&lt;/code&gt; is found in the other string, it will be substituted with &lt;code&gt;*&lt;/code&gt; in the other string. For example, &lt;code&gt;master -&amp;gt; origin/master&lt;/code&gt; becomes &lt;code&gt;master -&amp;gt; origin/*&lt;/code&gt;.</source>
          <target state="translated">En el modo de salida compacto, especificado con la variable de configuraci&amp;oacute;n fetch.output, si se encuentra todo &lt;code&gt;&amp;lt;from&amp;gt;&lt;/code&gt; o &lt;code&gt;&amp;lt;to&amp;gt;&lt;/code&gt; en la otra cadena, se sustituir&amp;aacute; por &lt;code&gt;*&lt;/code&gt; en la otra cadena. Por ejemplo, &lt;code&gt;master -&amp;gt; origin/master&lt;/code&gt; convierte en &lt;code&gt;master -&amp;gt; origin/*&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="17a206b483cbd4faf3ff1c681d69d041ba456195" translate="yes" xml:space="preserve">
          <source>In contrast to a regular interactive rebase, there are &lt;code&gt;label&lt;/code&gt;, &lt;code&gt;reset&lt;/code&gt; and &lt;code&gt;merge&lt;/code&gt; commands in addition to &lt;code&gt;pick&lt;/code&gt; ones.</source>
          <target state="translated">A diferencia de una rebase interactiva normal, existen comandos de &lt;code&gt;label&lt;/code&gt; , &lt;code&gt;reset&lt;/code&gt; y &lt;code&gt;merge&lt;/code&gt; adem&amp;aacute;s de los de &lt;code&gt;pick&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a91f8ccdcda758152dfb84f7e032555a6abd0478" translate="yes" xml:space="preserve">
          <source>In contrast, a non-fast-forward update will lose history. For example, suppose you and somebody else started at the same commit X, and you built a history leading to commit B while the other person built a history leading to commit A. The history looks like this:</source>
          <target state="translated">Por el contrario,una actualización que no sea rápida perderá la historia.Por ejemplo,supongamos que tú y otra persona comenzaron en la misma comisión X,y tú construiste un historial que conduce a la comisión B mientras que la otra persona construyó un historial que conduce a la comisión A.El historial tiene este aspecto:</target>
        </trans-unit>
        <trans-unit id="732c99dfb4118d47f73ec2f7f549a4abcdf7b217" translate="yes" xml:space="preserve">
          <source>In detecting regressions introduced through the merging of a branch, the merge commit will be identified as introduction of the bug and its ancestors will be ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07b2f985753911580a2527f5513df7870e7e2eaf" translate="yes" xml:space="preserve">
          <source>In editing files, git-filter-branch by design checks out each and every commit as it existed in the original repo. If your repo has 10\^5 files and 10\^5 commits, but each commit only modifies 5 files, then git-filter-branch will make you do 10\^10 modifications, despite only having (at most) 5*10^5 unique blobs.</source>
          <target state="translated">En la edición de archivos,git-filtro-rama por diseño comprueba todas y cada una de las confirmaciones tal y como existían en el repositorio original.Si tu repositorio tiene 10 archivos y 10 confirmaciones,pero cada confirmación sólo modifica 5 archivos,entonces git-filter-branch te hará hacer 10 modificaciones,a pesar de tener (como máximo)5*10^5 blobs únicos.</target>
        </trans-unit>
        <trans-unit id="2e3fe33f9a577c2f8225b1f2426166ec832bed24" translate="yes" xml:space="preserve">
          <source>In editing files, git-filter-branch by design checks out each and every commit as it existed in the original repo. If your repo has &lt;code&gt;10^5&lt;/code&gt; files and &lt;code&gt;10^5&lt;/code&gt; commits, but each commit only modifies five files, then git-filter-branch will make you do &lt;code&gt;10^10&lt;/code&gt; modifications, despite only having (at most) &lt;code&gt;5*10^5&lt;/code&gt; unique blobs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a532459a44f155e770ddc46e416638b81292d839" translate="yes" xml:space="preserve">
          <source>In either format, values can be specified in any form that Git recognizes as an object name. Commands in any other format or a repeated &amp;lt;ref&amp;gt; produce an error. Command meanings are:</source>
          <target state="translated">En cualquier formato, los valores se pueden especificar en cualquier forma que Git reconozca como un nombre de objeto. Los comandos en cualquier otro formato o un &amp;lt;ref&amp;gt; repetido producen un error. Los significados de los comandos son:</target>
        </trans-unit>
        <trans-unit id="9c49e183be0df7128f7b7d238522888866505455" translate="yes" xml:space="preserve">
          <source>In fact development teams often maintain both a development branch and a maintenance branch, and it would be quite easy for them if &quot;git bisect&quot; just worked when they want to bisect a regression on the development branch that is not on the maintenance branch. They should be able to start bisecting using:</source>
          <target state="translated">De hecho,los equipos de desarrollo a menudo mantienen tanto una rama de desarrollo como una rama de mantenimiento,y sería bastante fácil para ellos si &quot;git bisect&quot; funcionara sólo cuando quieren bisectar una regresión en la rama de desarrollo que no está en la rama de mantenimiento.Deberían ser capaces de empezar a bisecar usando:</target>
        </trans-unit>
        <trans-unit id="49c9270dc1d07096e092a06d8107784ae1248f61" translate="yes" xml:space="preserve">
          <source>In fact it&amp;rsquo;s invaluable because there are bugs i would never even &lt;code&gt;try&lt;/code&gt; to debug if it wasn&amp;rsquo;t for git bisect. In the past there were bug patterns that were immediately hopeless for me to debug - at best i could send the crash/bug signature to lkml and hope that someone else can think of something.</source>
          <target state="translated">De hecho, es invaluable porque hay errores que nunca &lt;code&gt;try&lt;/code&gt; depurar si no fuera por git bisect. En el pasado, hab&amp;iacute;a patrones de errores que de inmediato no ten&amp;iacute;a esperanzas de depurar; en el mejor de los casos, pod&amp;iacute;a enviar la firma de bloqueo / error a lkml y esperar que alguien m&amp;aacute;s pudiera pensar en algo.</target>
        </trans-unit>
        <trans-unit id="4d0defa9e6e327fdaa3580beb798bb05e9bb4ad4" translate="yes" xml:space="preserve">
          <source>In fact it&amp;rsquo;s this last feature that &quot;sold&quot; it to the Git community, so it is now in the &quot;master&quot; branch of Git&amp;rsquo;s Git repository and it should be released in Git 1.6.5 in October or November 2009.</source>
          <target state="translated">De hecho, es esta &amp;uacute;ltima caracter&amp;iacute;stica la que la &quot;vendi&amp;oacute;&quot; a la comunidad de Git, por lo que ahora est&amp;aacute; en la rama &quot;maestra&quot; del repositorio de Git de Git y deber&amp;iacute;a lanzarse en Git 1.6.5 en octubre o noviembre de 2009.</target>
        </trans-unit>
        <trans-unit id="a503332ebe0b76ca226cc7fab9355da1cbc846ca" translate="yes" xml:space="preserve">
          <source>In fact people are specially interested in commits that introduce a &quot;bad&quot; behavior, called a bug or a regression. They are interested in these commits because a commit (hopefully) contains a very small set of source code changes. And it&amp;rsquo;s much easier to understand and properly fix a problem when you only need to check a very small set of changes, than when you don&amp;rsquo;t know where look in the first place.</source>
          <target state="translated">De hecho, la gente est&amp;aacute; especialmente interesada en las confirmaciones que introducen un &quot;mal&quot; comportamiento, llamado error o regresi&amp;oacute;n. Est&amp;aacute;n interesados ​​en estas confirmaciones porque una confirmaci&amp;oacute;n (con suerte) contiene un conjunto muy peque&amp;ntilde;o de cambios en el c&amp;oacute;digo fuente. Y es mucho m&amp;aacute;s f&amp;aacute;cil comprender y solucionar correctamente un problema cuando solo necesita verificar un conjunto muy peque&amp;ntilde;o de cambios, que cuando no sabe d&amp;oacute;nde buscar en primer lugar.</target>
        </trans-unit>
        <trans-unit id="ef62eb9471b68497e696b504f306bae12d5b62ac" translate="yes" xml:space="preserve">
          <source>In fact the problem is that big software often has many different configuration options and that each test case should pass for each configuration after each commit. So if you have for each release: N configurations, M commits and T test cases, you should perform:</source>
          <target state="translated">De hecho,el problema es que los grandes programas informáticos suelen tener muchas opciones de configuración diferentes y que cada caso de prueba debe pasar por cada configuración después de cada confirmación.Así que si tienes para cada lanzamiento:N configuraciones,M confirmaciones y T casos de prueba,deberías realizar:</target>
        </trans-unit>
        <trans-unit id="99977c45d37760acd8d4612dba46dd63b60c39cd" translate="yes" xml:space="preserve">
          <source>In fact, &lt;code&gt;git bisect&lt;/code&gt; can be used to find the commit that changed &lt;strong&gt;any&lt;/strong&gt; property of your project; e.g., the commit that fixed a bug, or the commit that caused a benchmark&amp;rsquo;s performance to improve. To support this more general usage, the terms &quot;old&quot; and &quot;new&quot; can be used in place of &quot;good&quot; and &quot;bad&quot;, or you can choose your own terms. See section &quot;Alternate terms&quot; below for more information.</source>
          <target state="translated">De hecho, &lt;code&gt;git bisect&lt;/code&gt; se puede usar para encontrar la confirmaci&amp;oacute;n que cambi&amp;oacute; &lt;strong&gt;cualquier&lt;/strong&gt; propiedad de su proyecto; por ejemplo, la confirmaci&amp;oacute;n que solucion&amp;oacute; un error o la confirmaci&amp;oacute;n que hizo que mejorara el rendimiento de un punto de referencia. Para respaldar este uso m&amp;aacute;s general, los t&amp;eacute;rminos &quot;antiguo&quot; y &quot;nuevo&quot; se pueden utilizar en lugar de &quot;bueno&quot; y &quot;malo&quot;, o puede elegir sus propios t&amp;eacute;rminos. Consulte la secci&amp;oacute;n &quot;T&amp;eacute;rminos alternativos&quot; a continuaci&amp;oacute;n para obtener m&amp;aacute;s informaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="7071f9821fe5bdd2a61f333d551d92b1d1a7cc62" translate="yes" xml:space="preserve">
          <source>In fact, &lt;code&gt;git diff-index --cached&lt;/code&gt;&lt;strong&gt;should&lt;/strong&gt; always be entirely equivalent to actually doing a &lt;code&gt;git write-tree&lt;/code&gt; and comparing that. Except this one is much nicer for the case where you just want to check where you are.</source>
          <target state="translated">De hecho, &lt;code&gt;git diff-index --cached&lt;/code&gt; siempre &lt;strong&gt;deber&amp;iacute;a&lt;/strong&gt; ser completamente equivalente a hacer un &lt;code&gt;git write-tree&lt;/code&gt; y compararlo. Excepto que este es mucho m&amp;aacute;s agradable para el caso en el que solo desea verificar d&amp;oacute;nde se encuentra.</target>
        </trans-unit>
        <trans-unit id="4ed30cb15a7bebad154936439885b3df49088a74" translate="yes" xml:space="preserve">
          <source>In fact, as you did that, if you now look into your object directory, you&amp;rsquo;ll notice that Git will have added two new objects to the object database. If you did exactly the steps above, you should now be able to do</source>
          <target state="translated">De hecho, mientras lo hizo, si ahora mira en su directorio de objetos, notar&amp;aacute; que Git habr&amp;aacute; agregado dos nuevos objetos a la base de datos de objetos. Si sigui&amp;oacute; exactamente los pasos anteriores, ahora deber&amp;iacute;a poder hacer</target>
        </trans-unit>
        <trans-unit id="c9492aea4e59a8249b05f0197902254019664286" translate="yes" xml:space="preserve">
          <source>In fact, if you have &lt;code&gt;master&lt;/code&gt; checked out, then this branch has been configured by &lt;code&gt;git clone&lt;/code&gt; to get changes from the HEAD branch of the origin repository. So often you can accomplish the above with just a simple</source>
          <target state="translated">De hecho, si tiene &lt;code&gt;master&lt;/code&gt; verificado, entonces esta rama ha sido configurada por &lt;code&gt;git clone&lt;/code&gt; para obtener cambios de la rama HEAD del repositorio de origen. Muy a menudo, puede lograr lo anterior con solo un simple</target>
        </trans-unit>
        <trans-unit id="c5bd224f8ecefe700eae1705d4f2a63ae227649f" translate="yes" xml:space="preserve">
          <source>In fact, in &lt;a href=&quot;#git-concepts&quot;&gt;Git concepts&lt;/a&gt; we shall see that everything stored in Git history, including file data and directory contents, is stored in an object with a name that is a hash of its contents.</source>
          <target state="translated">De hecho, en los &lt;a href=&quot;#git-concepts&quot;&gt;conceptos de Git&lt;/a&gt; veremos que todo lo almacenado en el historial de Git, incluidos los datos de archivos y el contenido del directorio, se almacena en un objeto con un nombre que es un hash de su contenido.</target>
        </trans-unit>
        <trans-unit id="9ce4601e5a5f52f186df099525d9504862a821c8" translate="yes" xml:space="preserve">
          <source>In fact, together with the &lt;code&gt;git rev-list&lt;/code&gt; program (which generates a list of revisions), &lt;code&gt;git diff-tree&lt;/code&gt; ends up being a veritable fount of changes. You can emulate &lt;code&gt;git log&lt;/code&gt;, &lt;code&gt;git log -p&lt;/code&gt;, etc. with a trivial script that pipes the output of &lt;code&gt;git rev-list&lt;/code&gt; to &lt;code&gt;git diff-tree --stdin&lt;/code&gt;, which was exactly how early versions of &lt;code&gt;git log&lt;/code&gt; were implemented.</source>
          <target state="translated">De hecho, junto con el programa &lt;code&gt;git rev-list&lt;/code&gt; (que genera una lista de revisiones), &lt;code&gt;git diff-tree&lt;/code&gt; termina siendo una verdadera fuente de cambios. Puede emular &lt;code&gt;git log&lt;/code&gt; , &lt;code&gt;git log -p&lt;/code&gt; , etc. con un script trivial que canaliza la salida de &lt;code&gt;git rev-list&lt;/code&gt; a &lt;code&gt;git diff-tree --stdin&lt;/code&gt; , que fue exactamente c&amp;oacute;mo se implementaron las primeras versiones de &lt;code&gt;git log&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="da9de14a63db6e5a8e5a19a81e9a6160f95eb222" translate="yes" xml:space="preserve">
          <source>In fact, we can perform all the normal Git operations. But, let&amp;rsquo;s look at what happens when we then checkout &lt;code&gt;master&lt;/code&gt;:</source>
          <target state="translated">De hecho, podemos realizar todas las operaciones normales de Git. Pero, veamos lo que sucede cuando luego realizamos el checkout &lt;code&gt;master&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="728d90294e037628a986d3380572564cc895d389" translate="yes" xml:space="preserve">
          <source>In future versions we may learn to support patterns containing \0 for more search backends, until then we&amp;rsquo;ll die when the pattern type in question doesn&amp;rsquo;t support them.</source>
          <target state="translated">En versiones futuras, es posible que aprendamos a admitir patrones que contengan \ 0 para obtener m&amp;aacute;s backends de b&amp;uacute;squeda, hasta entonces moriremos cuando el tipo de patr&amp;oacute;n en cuesti&amp;oacute;n no los admita.</target>
        </trans-unit>
        <trans-unit id="674a2666658c40a25d4cd65b3ea28af975f1fa97" translate="yes" xml:space="preserve">
          <source>In general a client can request to speak protocol v2 by sending &lt;code&gt;version=2&lt;/code&gt; through the respective side-channel for the transport being used which inevitably sets &lt;code&gt;GIT_PROTOCOL&lt;/code&gt;. More information can be found in &lt;code&gt;pack-protocol.txt&lt;/code&gt; and &lt;code&gt;http-protocol.txt&lt;/code&gt;. In all cases the response from the server is the capability advertisement.</source>
          <target state="translated">En general, un cliente puede solicitar hablar el protocolo v2 enviando la &lt;code&gt;version=2&lt;/code&gt; trav&amp;eacute;s del canal lateral respectivo para el transporte que se est&amp;aacute; utilizando, lo que inevitablemente establece &lt;code&gt;GIT_PROTOCOL&lt;/code&gt; . Puede encontrar m&amp;aacute;s informaci&amp;oacute;n en &lt;code&gt;pack-protocol.txt&lt;/code&gt; y &lt;code&gt;http-protocol.txt&lt;/code&gt; . En todos los casos, la respuesta del servidor es el anuncio de capacidad.</target>
        </trans-unit>
        <trans-unit id="1aaa12db7c29bdac4538baf95940db6bed82a0b8" translate="yes" xml:space="preserve">
          <source>In general, URLs contain information about the transport protocol, the address of the remote server, and the path to the repository. Depending on the transport protocol, some of this information may be absent.</source>
          <target state="translated">En general,los URL contienen información sobre el protocolo de transporte,la dirección del servidor remoto y la ruta de acceso al depósito.Dependiendo del protocolo de transporte,parte de esta información puede estar ausente.</target>
        </trans-unit>
        <trans-unit id="811906db3a55c059a1cd7d72b959827c93f94a02" translate="yes" xml:space="preserve">
          <source>In general, all pseudo refs are per working tree and all refs starting with &quot;refs/&quot; are shared. Pseudo refs are ones like HEAD which are directly under GIT_DIR instead of inside GIT_DIR/refs. There is one exception to this: refs inside refs/bisect and refs/worktree is not shared.</source>
          <target state="translated">En general,todos los seudo árbitros son por árbol de trabajo y todos los árbitros que comienzan con &quot;refs/&quot; son compartidos.Los seudo-refs son como HEAD que están directamente bajo GIT_DIR en lugar de dentro de GIT_DIR/refs.Hay una excepción a esto:los réfs dentro de refs/bisect y refs/árbol de trabajo no se comparte.</target>
        </trans-unit>
        <trans-unit id="c1959905d09bef6c12ae8c7983e3b002ca1126c5" translate="yes" xml:space="preserve">
          <source>In general, all pseudo refs are per working tree and all refs starting with &lt;code&gt;refs/&lt;/code&gt; are shared. Pseudo refs are ones like &lt;code&gt;HEAD&lt;/code&gt; which are directly under &lt;code&gt;$GIT_DIR&lt;/code&gt; instead of inside &lt;code&gt;$GIT_DIR/refs&lt;/code&gt;. There are exceptions, however: refs inside &lt;code&gt;refs/bisect&lt;/code&gt; and &lt;code&gt;refs/worktree&lt;/code&gt; are not shared.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e394e7bf320940c252fcc858f73aeff38e0e3c05" translate="yes" xml:space="preserve">
          <source>In general, it is better to enumerate existing objects with problems with &lt;code&gt;fsck.skipList&lt;/code&gt;, instead of listing the kind of breakages these problematic objects share to be ignored, as doing the latter will allow new instances of the same breakages go unnoticed.</source>
          <target state="translated">En general, es mejor enumerar los objetos existentes con problemas con &lt;code&gt;fsck.skipList&lt;/code&gt; , en lugar de enumerar el tipo de roturas que estos objetos problem&amp;aacute;ticos comparten para ser ignorados, ya que hacer esto &amp;uacute;ltimo permitir&amp;aacute; que nuevas instancias de las mismas roturas pasen desapercibidas.</target>
        </trans-unit>
        <trans-unit id="7dc03507399a3b4938c051e86309da2b5ba01f5b" translate="yes" xml:space="preserve">
          <source>In general, the interrogate commands do not touch the files in the working tree.</source>
          <target state="translated">En general,los comandos de interrogación no tocan los archivos del árbol de trabajo.</target>
        </trans-unit>
        <trans-unit id="da99798f442d92adef44d8e41846c087acff5111" translate="yes" xml:space="preserve">
          <source>In general, there are a variety of problems that can occur when using squash merges to merge two branches multiple times. These can include seeing extra commits in &lt;code&gt;git log&lt;/code&gt; output, with a GUI, or when using the &lt;code&gt;...&lt;/code&gt; notation to express a range, as well as the possibility of needing to re-resolve conflicts again and again.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0830c69bce9b1a4ab3ff9dbb3ca0e63e381af048" translate="yes" xml:space="preserve">
          <source>In general, using</source>
          <target state="translated">En general,el uso de</target>
        </trans-unit>
        <trans-unit id="37034b2d8b34e79ca4767d593d59ca39d0651fd5" translate="yes" xml:space="preserve">
          <source>In here all submodules except &lt;code&gt;baz&lt;/code&gt; (foo, bar, bob) are active. &lt;code&gt;foo&lt;/code&gt; due to its own active flag and all the others due to the submodule active pathspec, which specifies that any submodule starting with &lt;code&gt;b&lt;/code&gt; except &lt;code&gt;baz&lt;/code&gt; are also active, regardless of the presence of the .url field.</source>
          <target state="translated">Aqu&amp;iacute; todos los subm&amp;oacute;dulos excepto &lt;code&gt;baz&lt;/code&gt; (foo, bar, bob) est&amp;aacute;n activos. &lt;code&gt;foo&lt;/code&gt; debido a su propio indicador activo y todos los dem&amp;aacute;s debido al subm&amp;oacute;dulo active pathpec, que especifica que cualquier subm&amp;oacute;dulo que comience con &lt;code&gt;b&lt;/code&gt; excepto &lt;code&gt;baz&lt;/code&gt; tambi&amp;eacute;n est&amp;aacute; activo, independientemente de la presencia del campo .url.</target>
        </trans-unit>
        <trans-unit id="f129c819372eb3b42173e4b2d9e114ef285b7635" translate="yes" xml:space="preserve">
          <source>In interactive commands, allow the user to provide one-letter input with a single key (i.e., without hitting enter). Currently this is used by the &lt;code&gt;--patch&lt;/code&gt; mode of &lt;a href=&quot;git-add&quot;&gt;git-add[1]&lt;/a&gt;, &lt;a href=&quot;git-checkout&quot;&gt;git-checkout[1]&lt;/a&gt;, &lt;a href=&quot;git-restore&quot;&gt;git-restore[1]&lt;/a&gt;, &lt;a href=&quot;git-commit&quot;&gt;git-commit[1]&lt;/a&gt;, &lt;a href=&quot;git-reset&quot;&gt;git-reset[1]&lt;/a&gt;, and &lt;a href=&quot;git-stash&quot;&gt;git-stash[1]&lt;/a&gt;. Note that this setting is silently ignored if portable keystroke input is not available; requires the Perl module Term::ReadKey.</source>
          <target state="translated">En los comandos interactivos, permita que el usuario proporcione una entrada de una letra con una sola tecla (es decir, sin presionar enter). Actualmente, esto es usado por el modo &lt;code&gt;--patch&lt;/code&gt; de &lt;a href=&quot;git-add&quot;&gt;git-add [1]&lt;/a&gt; , &lt;a href=&quot;git-checkout&quot;&gt;git-checkout [1]&lt;/a&gt; , &lt;a href=&quot;git-restore&quot;&gt;git-restore [1]&lt;/a&gt; , &lt;a href=&quot;git-commit&quot;&gt;git-commit [1]&lt;/a&gt; , &lt;a href=&quot;git-reset&quot;&gt;git-reset [1]&lt;/a&gt; y &lt;a href=&quot;git-stash&quot;&gt;git-stash [1]&lt;/a&gt; . Tenga en cuenta que esta configuraci&amp;oacute;n se ignora en silencio si la entrada de pulsaciones de teclas port&amp;aacute;tiles no est&amp;aacute; disponible; requiere el m&amp;oacute;dulo Perl Term :: ReadKey.</target>
        </trans-unit>
        <trans-unit id="1d1c8ed607ef3eefbb04beacb314688e02741550" translate="yes" xml:space="preserve">
          <source>In interactive mode, you can mark commits with the action &quot;edit&quot;. However, this does not necessarily mean that &lt;code&gt;git rebase&lt;/code&gt; expects the result of this edit to be exactly one commit. Indeed, you can undo the commit, or you can add other commits. This can be used to split a commit into two:</source>
          <target state="translated">En el modo interactivo, puede marcar confirmaciones con la acci&amp;oacute;n &quot;editar&quot;. Sin embargo, esto no significa necesariamente que &lt;code&gt;git rebase&lt;/code&gt; espera que el resultado de esta edici&amp;oacute;n sea exactamente una confirmaci&amp;oacute;n. De hecho, puede deshacer la confirmaci&amp;oacute;n o puede agregar otras confirmaciones. Esto se puede usar para dividir un commit en dos:</target>
        </trans-unit>
        <trans-unit id="15b1add937944ed893f52c8ec0293a4127b76c00" translate="yes" xml:space="preserve">
          <source>In its first form, the command provides the content or the type of an object in the repository. The type is required unless &lt;code&gt;-t&lt;/code&gt; or &lt;code&gt;-p&lt;/code&gt; is used to find the object type, or &lt;code&gt;-s&lt;/code&gt; is used to find the object size, or &lt;code&gt;--textconv&lt;/code&gt; or &lt;code&gt;--filters&lt;/code&gt; is used (which imply type &quot;blob&quot;).</source>
          <target state="translated">En su primera forma, el comando proporciona el contenido o el tipo de un objeto en el repositorio. El tipo es necesario a menos &lt;code&gt;-t&lt;/code&gt; o &lt;code&gt;-p&lt;/code&gt; se utiliza para encontrar el tipo de objeto, o &lt;code&gt;-s&lt;/code&gt; se utiliza para encontrar el tama&amp;ntilde;o del objeto, o &lt;code&gt;--textconv&lt;/code&gt; o &lt;code&gt;--filters&lt;/code&gt; se usa (que implica tipo &quot;blob&quot;).</target>
        </trans-unit>
        <trans-unit id="1ce9842f8f482fa7cd77bb4bd4603b72b75e4e0b" translate="yes" xml:space="preserve">
          <source>In its most compact form, this instruction only takes up one byte (0x80) with both offset and size omitted, which will have default values zero. There is another exception: size zero is automatically converted to 0x10000.</source>
          <target state="translated">En su forma más compacta,esta instrucción sólo ocupa un byte (0x80)con el desplazamiento y el tamaño omitidos,que tendrá valores por defecto de cero.Hay otra excepción:el tamaño cero se convierte automáticamente en 0x10000.</target>
        </trans-unit>
        <trans-unit id="ed6a0138b63bece5f8693e0a03055de4444b4006" translate="yes" xml:space="preserve">
          <source>In its simplest form, &lt;code&gt;git worktree add &amp;lt;path&amp;gt;&lt;/code&gt; automatically creates a new branch whose name is the final component of &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt;, which is convenient if you plan to work on a new topic. For instance, &lt;code&gt;git
worktree add ../hotfix&lt;/code&gt; creates new branch &lt;code&gt;hotfix&lt;/code&gt; and checks it out at path &lt;code&gt;../hotfix&lt;/code&gt;. To instead work on an existing branch in a new working tree, use &lt;code&gt;git worktree add &amp;lt;path&amp;gt; &amp;lt;branch&amp;gt;&lt;/code&gt;. On the other hand, if you just plan to make some experimental changes or do testing without disturbing existing development, it is often convenient to create a &lt;code&gt;throwaway&lt;/code&gt; working tree not associated with any branch. For instance, &lt;code&gt;git worktree add -d &amp;lt;path&amp;gt;&lt;/code&gt; creates a new working tree with a detached &lt;code&gt;HEAD&lt;/code&gt; at the same commit as the current branch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70413e1dbdf33a9cdd6044f089c7e374f7b737c4" translate="yes" xml:space="preserve">
          <source>In mathematical terms, what we are looking for is some sort of a minimum cost bipartite matching; &lt;code&gt;1&lt;/code&gt; is matched to &lt;code&gt;C&lt;/code&gt; at some cost, etc. The underlying graph is in fact a complete bipartite graph; the cost we associate with every edge is the size of the diff between the two commits' patches. To explain also new commits, we introduce dummy nodes on both sides:</source>
          <target state="translated">En t&amp;eacute;rminos matem&amp;aacute;ticos, lo que estamos buscando es una especie de emparejamiento bipartito de costo m&amp;iacute;nimo; &lt;code&gt;1&lt;/code&gt; se compara con &lt;code&gt;C&lt;/code&gt; a alg&amp;uacute;n costo, etc. El gr&amp;aacute;fico subyacente es de hecho un gr&amp;aacute;fico bipartito completo; el costo que asociamos con cada borde es el tama&amp;ntilde;o de la diferencia entre los parches de las dos confirmaciones. Para explicar tambi&amp;eacute;n las nuevas confirmaciones, presentamos nodos ficticios en ambos lados:</target>
        </trans-unit>
        <trans-unit id="abc4a2c282027431dbb87981bf40f5240785d9ef" translate="yes" xml:space="preserve">
          <source>In modern git, you can say this in a more direct way:</source>
          <target state="translated">En el mundo moderno,se puede decir esto de una manera más directa:</target>
        </trans-unit>
        <trans-unit id="1cd9dc714cc1317fe8fea12649b27b5eeab6e568" translate="yes" xml:space="preserve">
          <source>In most cases, this means the attributes given in the input will be repeated in the output, but Git may also modify the credential description, for example by removing the &lt;code&gt;path&lt;/code&gt; attribute when the protocol is HTTP(s) and &lt;code&gt;credential.useHttpPath&lt;/code&gt; is false.</source>
          <target state="translated">En la mayor&amp;iacute;a de los casos, esto significa que los atributos dados en la entrada se repetir&amp;aacute;n en la salida, pero Git tambi&amp;eacute;n puede modificar la descripci&amp;oacute;n de la credencial, por ejemplo, eliminando el atributo de &lt;code&gt;path&lt;/code&gt; cuando el protocolo es HTTP (s) y &lt;code&gt;credential.useHttpPath&lt;/code&gt; es falso.</target>
        </trans-unit>
        <trans-unit id="c12479d09bff69f421dbf9e45fddc92269d1f574" translate="yes" xml:space="preserve">
          <source>In most cases, users should run &lt;em&gt;git gc&lt;/em&gt;, which calls &lt;em&gt;git prune&lt;/em&gt;. See the section &quot;NOTES&quot;, below.</source>
          <target state="translated">En la mayor&amp;iacute;a de los casos, los usuarios deben ejecutar &lt;em&gt;git gc&lt;/em&gt; , que llama a &lt;em&gt;git prune&lt;/em&gt; . Consulte la secci&amp;oacute;n &quot;NOTAS&quot;, a continuaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="6d4e8e52070be526725731839d6ade7553803d5e" translate="yes" xml:space="preserve">
          <source>In most cases, users will not need to call &lt;code&gt;git prune&lt;/code&gt; directly, but should instead call &lt;code&gt;git gc&lt;/code&gt;, which handles pruning along with many other housekeeping tasks.</source>
          <target state="translated">En la mayor&amp;iacute;a de los casos, los usuarios no necesitar&amp;aacute;n llamar a &lt;code&gt;git prune&lt;/code&gt; directamente, sino que deber&amp;iacute;an llamar a &lt;code&gt;git gc&lt;/code&gt; , que se encarga de la poda junto con muchas otras tareas de limpieza.</target>
        </trans-unit>
        <trans-unit id="7de19f518cc5353753469bfb19c4e4f93734f02e" translate="yes" xml:space="preserve">
          <source>In multiple working trees, some refs may be shared between all working trees and some refs are local. One example is &lt;code&gt;HEAD&lt;/code&gt; which is different for each working tree. This section is about the sharing rules and how to access refs of one working tree from another.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa1d2a97ebd3bb9e2d938b11b92fc4a8e0c826fa" translate="yes" xml:space="preserve">
          <source>In multiple working trees, some refs may be shared between all working trees, some refs are local. One example is HEAD is different for all working trees. This section is about the sharing rules and how to access refs of one working tree from another.</source>
          <target state="translated">En múltiples árboles de trabajo,algunos árbitros pueden ser compartidos entre todos los árboles de trabajo,algunos árbitros son locales.Un ejemplo es que HEAD es diferente para todos los árboles de trabajo.Esta sección trata sobre las reglas de compartición y cómo acceder a los árbitros de un árbol de trabajo desde otro.</target>
        </trans-unit>
        <trans-unit id="fef9e754382e4f5002bb7f83483631df5de227e1" translate="yes" xml:space="preserve">
          <source>In older Git versions it could be easily forgotten to commit new or modified files in a submodule, which silently leads to similar problems as not pushing the submodule changes. Starting with Git 1.7.0 both &lt;code&gt;git status&lt;/code&gt; and &lt;code&gt;git diff&lt;/code&gt; in the superproject show submodules as modified when they contain new or modified files to protect against accidentally committing such a state. &lt;code&gt;git
diff&lt;/code&gt; will also add a &lt;code&gt;-dirty&lt;/code&gt; to the work tree side when generating patch output or used with the &lt;code&gt;--submodule&lt;/code&gt; option:</source>
          <target state="translated">En versiones anteriores de Git, podr&amp;iacute;a olvidarse f&amp;aacute;cilmente enviar archivos nuevos o modificados en un subm&amp;oacute;dulo, lo que silenciosamente conduce a problemas similares a los de no presionar los cambios del subm&amp;oacute;dulo. A partir de Git 1.7.0, tanto &lt;code&gt;git status&lt;/code&gt; como &lt;code&gt;git diff&lt;/code&gt; en el superproyecto muestran los subm&amp;oacute;dulos modificados cuando contienen archivos nuevos o modificados para protegerlos contra la confirmaci&amp;oacute;n accidental de dicho estado. &lt;code&gt;git diff&lt;/code&gt; tambi&amp;eacute;n agregar&amp;aacute; un &lt;code&gt;-dirty&lt;/code&gt; al lado del &amp;aacute;rbol de trabajo cuando genere la salida del parche o se use con la opci&amp;oacute;n &lt;code&gt;--submodule&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="cea51be0687534aeac695491ce11f4552163d8c9" translate="yes" xml:space="preserve">
          <source>In order to allow extensions that add extra data to the MIDX, we organize the body into &quot;chunks&quot; and provide a lookup table at the beginning of the body. The header includes certain length values, such as the number of packs, the number of base MIDX files, hash lengths and types.</source>
          <target state="translated">Para permitir extensiones que añadan datos extra al MIDX,organizamos el cuerpo en &quot;trozos&quot; y proporcionamos una tabla de consulta al principio del cuerpo.El encabezado incluye ciertos valores de longitud,como el número de paquetes,el número de archivos MIDX base,longitudes de hash y tipos.</target>
        </trans-unit>
        <trans-unit id="f6b8f2c2e89120a466dd40e221531b6adf7a10b9" translate="yes" xml:space="preserve">
          <source>In order to determine what URL to use to fetch from, the value of the configuration &lt;code&gt;remote.&amp;lt;origin&amp;gt;.url&lt;/code&gt; is consulted and if there is not any such variable, the value on the &lt;code&gt;URL:&lt;/code&gt; line in &lt;code&gt;$GIT_DIR/remotes/&amp;lt;origin&amp;gt;&lt;/code&gt; is used.</source>
          <target state="translated">Para determinar qu&amp;eacute; URL usar para buscar, se consulta el valor de la configuraci&amp;oacute;n &lt;code&gt;remote.&amp;lt;origin&amp;gt;.url&lt;/code&gt; y si no existe tal variable, el valor en la &lt;code&gt;URL:&lt;/code&gt; l&amp;iacute;nea en &lt;code&gt;$GIT_DIR/remotes/&amp;lt;origin&amp;gt;&lt;/code&gt; se utiliza.</target>
        </trans-unit>
        <trans-unit id="1bb65c849d69cb9e41866b99d141938531c8bf39" translate="yes" xml:space="preserve">
          <source>In order to determine what remote branches to fetch (and optionally store in the remote-tracking branches) when the command is run without any refspec parameters on the command line, values of the configuration variable &lt;code&gt;remote.&amp;lt;origin&amp;gt;.fetch&lt;/code&gt; are consulted, and if there aren&amp;rsquo;t any, &lt;code&gt;$GIT_DIR/remotes/&amp;lt;origin&amp;gt;&lt;/code&gt; is consulted and its &lt;code&gt;Pull:&lt;/code&gt; lines are used. In addition to the refspec formats described in the OPTIONS section, you can have a globbing refspec that looks like this:</source>
          <target state="translated">Para determinar qu&amp;eacute; ramas remotas buscar (y opcionalmente almacenar en las ramas de seguimiento remoto) cuando el comando se ejecuta sin ning&amp;uacute;n par&amp;aacute;metro refspec en la l&amp;iacute;nea de comando, se consultan los valores de la variable de configuraci&amp;oacute;n &lt;code&gt;remote.&amp;lt;origin&amp;gt;.fetch&lt;/code&gt; , y si no los hay, se consulta &lt;code&gt;$GIT_DIR/remotes/&amp;lt;origin&amp;gt;&lt;/code&gt; y se utilizan sus l&amp;iacute;neas &lt;code&gt;Pull:&lt;/code&gt; .Adem&amp;aacute;s de los formatos refspec descritos en la secci&amp;oacute;n OPCIONES, puede tener una refspec globbing que se ve as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="b571757e7fe93a92c37f6bdbb5b1d110de433e8f" translate="yes" xml:space="preserve">
          <source>In order to ensure a current tracking branch state, &lt;code&gt;update --remote&lt;/code&gt; fetches the submodule&amp;rsquo;s remote repository before calculating the SHA-1. If you don&amp;rsquo;t want to fetch, you should use &lt;code&gt;submodule update
--remote --no-fetch&lt;/code&gt;.</source>
          <target state="translated">Para garantizar un estado de rama de seguimiento actual, &lt;code&gt;update --remote&lt;/code&gt; recupera el repositorio remoto del subm&amp;oacute;dulo antes de calcular el SHA-1. Si no desea buscar, debe usar la &lt;code&gt;submodule update --remote --no-fetch&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9ecc869f1231e06aba76a745114504d0b9155917" translate="yes" xml:space="preserve">
          <source>In order to have configuration specific to working trees, you can turn on &quot;worktreeConfig&quot; extension, e.g.:</source>
          <target state="translated">Para tener una configuración específica de los árboles de trabajo,se puede activar la extensión &quot;worktreeConfig&quot;,por ejemplo:</target>
        </trans-unit>
        <trans-unit id="1e42ca6d9de6de9f8c6bfadac339f32432bf0913" translate="yes" xml:space="preserve">
          <source>In order to have configuration specific to working trees, you can turn on the &lt;code&gt;worktreeConfig&lt;/code&gt; extension, e.g.:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb76ce16c3a3c52ec0347fc95609ba6324ad6c16" translate="yes" xml:space="preserve">
          <source>In order to protect the privacy of objects that have been removed from history but may not yet have been pruned, &lt;code&gt;git-upload-archive&lt;/code&gt; avoids serving archives for commits and trees that are not reachable from the repository&amp;rsquo;s refs. However, because calculating object reachability is computationally expensive, &lt;code&gt;git-upload-archive&lt;/code&gt; implements a stricter but easier-to-check set of rules:</source>
          <target state="translated">Para proteger la privacidad de los objetos que se han eliminado del historial pero que a&amp;uacute;n no se han eliminado, &lt;code&gt;git-upload-archive&lt;/code&gt; evita entregar archivos para confirmaciones y &amp;aacute;rboles a los que no se puede acceder desde las referencias del repositorio. Sin embargo, debido a que calcular la accesibilidad del objeto es computacionalmente costoso, &lt;code&gt;git-upload-archive&lt;/code&gt; implementa un conjunto de reglas m&amp;aacute;s estricto pero m&amp;aacute;s f&amp;aacute;cil de verificar:</target>
        </trans-unit>
        <trans-unit id="17696fe6311cd47e2efc1108f911bdeb8c2c0989" translate="yes" xml:space="preserve">
          <source>In order to set &quot;assume unchanged&quot; bit, use &lt;code&gt;--assume-unchanged&lt;/code&gt; option. To unset, use &lt;code&gt;--no-assume-unchanged&lt;/code&gt;. To see which files have the &quot;assume unchanged&quot; bit set, use &lt;code&gt;git ls-files -v&lt;/code&gt; (see &lt;a href=&quot;git-ls-files&quot;&gt;git-ls-files[1]&lt;/a&gt;).</source>
          <target state="translated">Para establecer el bit &quot;asumir sin cambios&quot;, use la opci&amp;oacute;n &lt;code&gt;--assume-unchanged&lt;/code&gt; . Para desarmar, use &lt;code&gt;--no-assume-unchanged&lt;/code&gt; . Para ver qu&amp;eacute; archivos tienen el conjunto de bits &quot;asumir sin cambios&quot;, use &lt;code&gt;git ls-files -v&lt;/code&gt; (consulte &lt;a href=&quot;git-ls-files&quot;&gt;git-ls-files [1]&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="267b1e8e9ade7b3919e26586bb280b53787cfd98" translate="yes" xml:space="preserve">
          <source>In other messages Andreas says that they also use the &quot;best practices&quot; described above: small logical commits, topic branches, no evil merge,&amp;hellip;​ These practices all improve the bisectability of the commit graph, by making it easier and more useful to bisect.</source>
          <target state="translated">En otros mensajes, Andreas dice que tambi&amp;eacute;n utilizan las &quot;mejores pr&amp;aacute;cticas&quot; descritas anteriormente: peque&amp;ntilde;as confirmaciones l&amp;oacute;gicas, ramas tem&amp;aacute;ticas, sin fusi&amp;oacute;n maligna, ... Todas estas pr&amp;aacute;cticas mejoran la bisectabilidad del gr&amp;aacute;fico de confirmaciones, al hacer que sea m&amp;aacute;s f&amp;aacute;cil y &amp;uacute;til bisecar .</target>
        </trans-unit>
        <trans-unit id="cbba08cd602a94910294469b1bfe69221cf43d34" translate="yes" xml:space="preserve">
          <source>In other words, &lt;code&gt;--merge&lt;/code&gt; does something like a &lt;code&gt;git read-tree -u -m &amp;lt;commit&amp;gt;&lt;/code&gt;, but carries forward unmerged index entries.</source>
          <target state="translated">En otras palabras, &lt;code&gt;--merge&lt;/code&gt; hace algo como un &lt;code&gt;git read-tree -u -m &amp;lt;commit&amp;gt;&lt;/code&gt; , pero lleva adelante las entradas de &amp;iacute;ndice no fusionadas.</target>
        </trans-unit>
        <trans-unit id="2c3347c08edbf67732cb77724b9990f6671bac50" translate="yes" xml:space="preserve">
          <source>In other words, &lt;code&gt;git diff-files&lt;/code&gt; always shows us the difference between what is recorded in the index, and what is currently in the working tree. That&amp;rsquo;s very useful.</source>
          <target state="translated">En otras palabras, &lt;code&gt;git diff-files&lt;/code&gt; siempre nos muestra la diferencia entre lo que est&amp;aacute; registrado en el &amp;iacute;ndice y lo que est&amp;aacute; actualmente en el &amp;aacute;rbol de trabajo. Eso es muy &amp;uacute;til.</target>
        </trans-unit>
        <trans-unit id="7466e77eb24cbec56937901c0950f635d6a29d08" translate="yes" xml:space="preserve">
          <source>In other words, &lt;code&gt;git diff-index&lt;/code&gt; normally compares a tree against the working tree, but when given the &lt;code&gt;--cached&lt;/code&gt; flag, it is told to instead compare against just the index cache contents, and ignore the current working tree state entirely. Since we just wrote the index file to HEAD, doing &lt;code&gt;git diff-index --cached -p HEAD&lt;/code&gt; should thus return an empty set of differences, and that&amp;rsquo;s exactly what it does.</source>
          <target state="translated">En otras palabras, &lt;code&gt;git diff-index&lt;/code&gt; normalmente compara un &amp;aacute;rbol con el &amp;aacute;rbol de trabajo, pero cuando se le da el indicador &lt;code&gt;--cached&lt;/code&gt; , se le dice que en su lugar se compare solo con el contenido de la cach&amp;eacute; del &amp;iacute;ndice e ignore por completo el estado actual del &amp;aacute;rbol de trabajo. Como acabamos de escribir el archivo de &amp;iacute;ndice en HEAD, hacer &lt;code&gt;git diff-index --cached -p HEAD&lt;/code&gt; deber&amp;iacute;a devolver un conjunto vac&amp;iacute;o de diferencias, y eso es exactamente lo que hace.</target>
        </trans-unit>
        <trans-unit id="8c2ef787b7de3a9f3b5df9786c452fde9692465e" translate="yes" xml:space="preserve">
          <source>In other words, there is no need to worry about what exists only in the working tree. When you have local changes in a part of the project that is not involved in the merge, your changes do not interfere with the merge, and are kept intact. When they &lt;strong&gt;do&lt;/strong&gt; interfere, the merge does not even start (&lt;code&gt;git read-tree&lt;/code&gt; complains loudly and fails without modifying anything). In such a case, you can simply continue doing what you were in the middle of doing, and when your working tree is ready (i.e. you have finished your work-in-progress), attempt the merge again.</source>
          <target state="translated">En otras palabras, no hay necesidad de preocuparse por lo que existe solo en el &amp;aacute;rbol de trabajo. Cuando tiene cambios locales en una parte del proyecto que no est&amp;aacute; involucrada en la combinaci&amp;oacute;n, sus cambios no interfieren con la combinaci&amp;oacute;n y se mantienen intactos. Cuando &lt;strong&gt;no&lt;/strong&gt; interfieren, la fusi&amp;oacute;n ni siquiera se inicia ( &lt;code&gt;git read-tree&lt;/code&gt; se queja en voz alta y falla sin modificar nada). En tal caso, simplemente puede continuar haciendo lo que estaba haciendo y cuando su &amp;aacute;rbol de trabajo est&amp;eacute; listo (es decir, haya terminado su trabajo en progreso), intente la fusi&amp;oacute;n nuevamente.</target>
        </trans-unit>
        <trans-unit id="5a674f35b2eda0a90a7f397ea7dadc5a212b7275" translate="yes" xml:space="preserve">
          <source>In other words, while a &quot;tree&quot; represents a particular directory state of a working directory, a &quot;commit&quot; represents that state in time, and explains how we got there.</source>
          <target state="translated">En otras palabras,mientras que un &quot;árbol&quot; representa un estado de directorio particular de un directorio de trabajo,un &quot;commit&quot; representa ese estado en el tiempo,y explica cómo llegamos allí.</target>
        </trans-unit>
        <trans-unit id="857191c898a7fbefd37c145d86f76b0005dd57eb" translate="yes" xml:space="preserve">
          <source>In other words, you can easily validate a whole archive by just sending out a single email that tells the people the name (SHA-1 hash) of the top commit, and digitally sign that email using something like GPG/PGP.</source>
          <target state="translated">En otras palabras,puedes validar fácilmente un archivo completo enviando un solo correo electrónico que le diga a la gente el nombre (SHA-1 hash)del máximo commit,y firmar digitalmente ese correo electrónico usando algo como GPG/PGP.</target>
        </trans-unit>
        <trans-unit id="e52122aac7e01b0550d02d6bfc5c4fbaa85b48ac" translate="yes" xml:space="preserve">
          <source>In our example of only two files, we did not have unchanged files so only &lt;code&gt;example&lt;/code&gt; resulted in collapsing. But in real-life large projects, when only a small number of files change in one commit, this &lt;code&gt;collapsing&lt;/code&gt; tends to trivially merge most of the paths fairly quickly, leaving only a handful of real changes in non-zero stages.</source>
          <target state="translated">En nuestro ejemplo de solo dos archivos, no ten&amp;iacute;amos archivos sin cambios, por lo que solo el &lt;code&gt;example&lt;/code&gt; result&amp;oacute; en colapso. Pero en proyectos grandes de la vida real, cuando solo una peque&amp;ntilde;a cantidad de archivos cambia en una confirmaci&amp;oacute;n, este &lt;code&gt;collapsing&lt;/code&gt; tiende a fusionar trivialmente la mayor&amp;iacute;a de las rutas con bastante rapidez, dejando solo un pu&amp;ntilde;ado de cambios reales en etapas distintas de cero.</target>
        </trans-unit>
        <trans-unit id="a3569415a118c16e9c5d7e18e58096bbd8336f98" translate="yes" xml:space="preserve">
          <source>In our example, when you do the test merge, the manual resolution is recorded, and it will be reused when you do the actual merge later with the updated master and topic branch, as long as the recorded resolution is still applicable.</source>
          <target state="translated">En nuestro ejemplo,cuando se hace la fusión de prueba,se registra la resolución manual,y se reutilizará cuando se haga la fusión real más tarde con la rama maestra y temática actualizada,siempre que la resolución registrada siga siendo aplicable.</target>
        </trans-unit>
        <trans-unit id="8e5ca17ff33890ba6e129c741e431196f019fa29" translate="yes" xml:space="preserve">
          <source>In overlay mode, the command never removes files when restoring. In no-overlay mode, tracked files that do not appear in the &lt;code&gt;--source&lt;/code&gt; tree are removed, to make them match &lt;code&gt;&amp;lt;tree&amp;gt;&lt;/code&gt; exactly. The default is no-overlay mode.</source>
          <target state="translated">En el modo de superposici&amp;oacute;n, el comando nunca elimina archivos al restaurar. En ning&amp;uacute;n modo de superposici&amp;oacute;n, los archivos que no aparecen en el seguimiento &lt;code&gt;--source&lt;/code&gt; &amp;aacute;rbol se eliminan, a hacer que coincidan &lt;code&gt;&amp;lt;tree&amp;gt;&lt;/code&gt; exactamente. El valor predeterminado es el modo sin superposici&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="5b1c0d5c1dcebbb2369ea9f003ec30402ee8a395" translate="yes" xml:space="preserve">
          <source>In particular, let&amp;rsquo;s not even check in the two files into Git yet, we&amp;rsquo;ll start off by adding another line to &lt;code&gt;hello&lt;/code&gt; first:</source>
          <target state="translated">En particular, ni siquiera registramos los dos archivos en Git todav&amp;iacute;a, comenzaremos agregando otra l&amp;iacute;nea para &lt;code&gt;hello&lt;/code&gt; primero:</target>
        </trans-unit>
        <trans-unit id="d0e454374a9a3ee3d6a441cd0674139a3f061022" translate="yes" xml:space="preserve">
          <source>In particular, the &lt;code&gt;refs&lt;/code&gt; subdirectory will contain two other subdirectories, named &lt;code&gt;heads&lt;/code&gt; and &lt;code&gt;tags&lt;/code&gt; respectively. They do exactly what their names imply: they contain references to any number of different &lt;code&gt;heads&lt;/code&gt; of development (aka &lt;code&gt;branches&lt;/code&gt;), and to any &lt;code&gt;tags&lt;/code&gt; that you have created to name specific versions in your repository.</source>
          <target state="translated">En particular, el subdirectorio &lt;code&gt;refs&lt;/code&gt; contendr&amp;aacute; otros dos subdirectorios, denominados &lt;code&gt;heads&lt;/code&gt; y &lt;code&gt;tags&lt;/code&gt; respectivamente. Hacen exactamente lo que sus nombres implican: contienen referencias a cualquier n&amp;uacute;mero de &lt;code&gt;heads&lt;/code&gt; de desarrollo diferentes (tambi&amp;eacute;n conocidos como &lt;code&gt;branches&lt;/code&gt; ) y a cualquier &lt;code&gt;tags&lt;/code&gt; que haya creado para nombrar versiones espec&amp;iacute;ficas en su repositorio.</target>
        </trans-unit>
        <trans-unit id="2037a0a7d55894c0e552cd3905604e14aef5f5cc" translate="yes" xml:space="preserve">
          <source>In practice, you can interleave and repeat steps 1 and 2 as many times as you want: in order to keep track of what you want committed at step 3, Git maintains a snapshot of the tree&amp;rsquo;s contents in a special staging area called &quot;the index.&quot;</source>
          <target state="translated">En la pr&amp;aacute;ctica, puede intercalar y repetir los pasos 1 y 2 tantas veces como desee: para realizar un seguimiento de lo que desea comprometer en el paso 3, Git mantiene una instant&amp;aacute;nea del contenido del &amp;aacute;rbol en un &amp;aacute;rea de preparaci&amp;oacute;n especial llamada &quot;el &amp;iacute;ndice . &quot;</target>
        </trans-unit>
        <trans-unit id="f0e4ad3997791ffc68facd5c602055afb63229a5" translate="yes" xml:space="preserve">
          <source>In principle, a note is a regular Git blob, and any kind of (non-)format is accepted. You can binary-safely create notes from arbitrary files using &lt;code&gt;git hash-object&lt;/code&gt;:</source>
          <target state="translated">En principio, una nota es un blob de Git normal y se acepta cualquier tipo de formato (no). Puede crear notas de forma binaria a partir de archivos arbitrarios usando &lt;code&gt;git hash-object&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="4601fb728bee4aeccfe338414983070eaafe0d7b" translate="yes" xml:space="preserve">
          <source>In protocol v2 communication is command oriented. When first contacting a server a list of capabilities will advertised. Some of these capabilities will be commands which a client can request be executed. Once a command has completed, a client can reuse the connection and request that other commands be executed.</source>
          <target state="translated">En el protocolo v2 la comunicación está orientada a los comandos.Cuando se contacta por primera vez con un servidor se anuncia una lista de capacidades.Algunas de estas capacidades serán comandos que un cliente puede solicitar que se ejecuten.Una vez que un comando se ha completado,un cliente puede reutilizar la conexión y solicitar que se ejecuten otros comandos.</target>
        </trans-unit>
        <trans-unit id="f1e89ddf0408f3e3f9aa71b3da7906ab579cf106" translate="yes" xml:space="preserve">
          <source>In protocol v2 these special packets will have the following semantics:</source>
          <target state="translated">En el protocolo v2 estos paquetes especiales tendrán la siguiente semántica:</target>
        </trans-unit>
        <trans-unit id="0b2a25ba5b09240510379a9523ee7fbbaeebe9c6" translate="yes" xml:space="preserve">
          <source>In some cases it is possible that the new head will &lt;strong&gt;not&lt;/strong&gt; actually be a descendant of the old head. For example, the developer may have realized she made a serious mistake, and decided to backtrack, resulting in a situation like:</source>
          <target state="translated">En algunos casos, es posible que el nuevo l&amp;iacute;der &lt;strong&gt;no&lt;/strong&gt; sea ​​realmente un descendiente del anterior. Por ejemplo, el desarrollador puede haberse dado cuenta de que cometi&amp;oacute; un grave error y decidi&amp;oacute; dar marcha atr&amp;aacute;s, lo que result&amp;oacute; en una situaci&amp;oacute;n como:</target>
        </trans-unit>
        <trans-unit id="013d925394580efad8fc98d09cd78b65808be1a0" translate="yes" xml:space="preserve">
          <source>In some cases like for kernel development it can be worth developing complex scripts to be able to fully automate bisecting.</source>
          <target state="translated">En algunos casos,como en el caso del desarrollo del núcleo,puede valer la pena desarrollar guiones complejos para poder automatizar completamente la bisección.</target>
        </trans-unit>
        <trans-unit id="0a49ce3de43e8ee8d78f327f1f504c6a86228a99" translate="yes" xml:space="preserve">
          <source>In some situations the reflog may not be able to save you. For example, suppose you delete a branch, then realize you need the history it contained. The reflog is also deleted; however, if you have not yet pruned the repository, then you may still be able to find the lost commits in the dangling objects that &lt;code&gt;git fsck&lt;/code&gt; reports. See &lt;a href=&quot;#dangling-objects&quot;&gt;Dangling objects&lt;/a&gt; for the details.</source>
          <target state="translated">En algunas situaciones, es posible que el reflog no pueda salvarlo. Por ejemplo, suponga que elimina una rama y luego se da cuenta de que necesita el historial que contiene. El reflog tambi&amp;eacute;n se elimina; sin embargo, si a&amp;uacute;n no ha podado el repositorio, es posible que a&amp;uacute;n pueda encontrar las confirmaciones perdidas en los objetos colgantes que informa &lt;code&gt;git fsck&lt;/code&gt; . Consulte &lt;a href=&quot;#dangling-objects&quot;&gt;Objetos colgantes&lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="4f2c24901ef5f6fa3a7b78ff609de06af9cfd2f7" translate="yes" xml:space="preserve">
          <source>In sparse checkout mode, &lt;code&gt;git checkout -- &amp;lt;paths&amp;gt;&lt;/code&gt; would update only entries matched by &lt;code&gt;&amp;lt;paths&amp;gt;&lt;/code&gt; and sparse patterns in &lt;code&gt;$GIT_DIR/info/sparse-checkout&lt;/code&gt;. This option ignores the sparse patterns and adds back any files in &lt;code&gt;&amp;lt;paths&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">En el modo de pago disperso, &lt;code&gt;git checkout -- &amp;lt;paths&amp;gt;&lt;/code&gt; actualizar&amp;iacute;a solo las entradas que coincidan con &lt;code&gt;&amp;lt;paths&amp;gt;&lt;/code&gt; y patrones dispersos en &lt;code&gt;$GIT_DIR/info/sparse-checkout&lt;/code&gt; . Esta opci&amp;oacute;n ignora los patrones dispersos y vuelve a agregar cualquier archivo en &lt;code&gt;&amp;lt;paths&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="91e2068ee07240a386da6a01584d7cb7bf48667f" translate="yes" xml:space="preserve">
          <source>In sparse checkout mode, by default is to only update entries matched by &lt;code&gt;&amp;lt;pathspec&amp;gt;&lt;/code&gt; and sparse patterns in $GIT_DIR/info/sparse-checkout. This option ignores the sparse patterns and unconditionally restores any files in &lt;code&gt;&amp;lt;pathspec&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">En el modo de pago disperso, de forma predeterminada solo se actualizan las entradas que coinciden con &lt;code&gt;&amp;lt;pathspec&amp;gt;&lt;/code&gt; y los patrones dispersos en $ GIT_DIR / info / sparse-checkout. Esta opci&amp;oacute;n ignora los patrones dispersos y restaura incondicionalmente cualquier archivo en &lt;code&gt;&amp;lt;pathspec&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9805e95abc4cc7297991de78ec147328f379f9f9" translate="yes" xml:space="preserve">
          <source>In such a case, &lt;code&gt;git merge-base origin/master topic&lt;/code&gt; would return the parent of B0 in the above picture, but B0^..D is &lt;strong&gt;not&lt;/strong&gt; the range of commits you would want to replay on top of B (it includes B0, which is not what you wrote; it is a commit the other side discarded when it moved its tip from B0 to B1).</source>
          <target state="translated">En tal caso, &lt;code&gt;git merge-base origin/master topic&lt;/code&gt; devolver&amp;iacute;a el padre de B0 en la imagen de arriba, pero B0 ^ .. D &lt;strong&gt;no&lt;/strong&gt; es el rango de confirmaciones que le gustar&amp;iacute;a reproducir en la parte superior de B (incluye B0, que no es lo que escribiste; es un compromiso que el otro lado descart&amp;oacute; cuando movi&amp;oacute; su punta de B0 a B1).</target>
        </trans-unit>
        <trans-unit id="38c59b4cda1fb890b6373e0ee120752a69f46faf" translate="yes" xml:space="preserve">
          <source>In such a case, you can &quot;unwrap&quot; the tag yourself before feeding it to &lt;code&gt;git merge&lt;/code&gt;, or pass &lt;code&gt;--ff-only&lt;/code&gt; when you do not have any work on your own. e.g.</source>
          <target state="translated">En tal caso, puede &quot;desenvolver&quot; la etiqueta usted mismo antes de &lt;code&gt;--ff-only&lt;/code&gt; en &lt;code&gt;git merge&lt;/code&gt; , o pasar --ff-only cuando no tenga ning&amp;uacute;n trabajo por su cuenta. p.ej</target>
        </trans-unit>
        <trans-unit id="122c6a9f6232138a6047defa817d1eec04cb3f10" translate="yes" xml:space="preserve">
          <source>In such a case, you do not want to automatically follow the other person&amp;rsquo;s tags.</source>
          <target state="translated">En tal caso, no desea seguir autom&amp;aacute;ticamente las etiquetas de la otra persona.</target>
        </trans-unit>
        <trans-unit id="14b066e7c220e701d278a048087bd2ff212888b8" translate="yes" xml:space="preserve">
          <source>In such cases it can be very confusing to use the terms &quot;good&quot; and &quot;bad&quot; to refer to &quot;the state before the change&quot; and &quot;the state after the change&quot;. So instead, you can use the terms &quot;old&quot; and &quot;new&quot;, respectively, in place of &quot;good&quot; and &quot;bad&quot;. (But note that you cannot mix &quot;good&quot; and &quot;bad&quot; with &quot;old&quot; and &quot;new&quot; in a single session.)</source>
          <target state="translated">En esos casos puede ser muy confuso utilizar los términos &quot;bueno&quot; y &quot;malo&quot; para referirse a &quot;el estado antes del cambio&quot; y &quot;el estado después del cambio&quot;.Así que en su lugar se pueden usar los términos &quot;viejo&quot; y &quot;nuevo&quot;,respectivamente,en lugar de &quot;bueno&quot; y &quot;malo&quot;.(Pero tened en cuenta que no podéis mezclar &quot;bueno&quot; y &quot;malo&quot; con &quot;antiguo&quot; y &quot;nuevo&quot; en una sola sesión).</target>
        </trans-unit>
        <trans-unit id="abac94a936763ce45a21b8291dbe11f8fcd73ae6" translate="yes" xml:space="preserve">
          <source>In such cases, git-cherry shows a concise summary of what has yet to be applied:</source>
          <target state="translated">En esos casos,git-cherry muestra un resumen conciso de lo que aún no se ha aplicado:</target>
        </trans-unit>
        <trans-unit id="46cccce64f7cd9f50066dd3d9623630b5fee1925" translate="yes" xml:space="preserve">
          <source>In that case, &lt;code&gt;git pull&lt;/code&gt; can do the fetch and merge in one go, as follows.</source>
          <target state="translated">En ese caso, &lt;code&gt;git pull&lt;/code&gt; puede buscar y fusionar de una sola vez, de la siguiente manera.</target>
        </trans-unit>
        <trans-unit id="52b267d7dd12ef4e2f7423310ff8cbe9ef5b3665" translate="yes" xml:space="preserve">
          <source>In that case, the fix is easy because &lt;code&gt;git rebase&lt;/code&gt; knows to skip changes that are already present in the new upstream (unless &lt;code&gt;--reapply-cherry-picks&lt;/code&gt; is given). So if you say (assuming you&amp;rsquo;re on &lt;code&gt;topic&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="724c7d4dfedb54b8a53a948ec5bdabaee78995fb" translate="yes" xml:space="preserve">
          <source>In that case, the fix is easy because &lt;code&gt;git rebase&lt;/code&gt; knows to skip changes that are already present in the new upstream. So if you say (assuming you&amp;rsquo;re on &lt;code&gt;topic&lt;/code&gt;)</source>
          <target state="translated">En ese caso, la soluci&amp;oacute;n es f&amp;aacute;cil porque &lt;code&gt;git rebase&lt;/code&gt; sabe omitir los cambios que ya est&amp;aacute;n presentes en el nuevo upstream. Entonces, si dices (asumiendo que est&amp;aacute;s en el &lt;code&gt;topic&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="e2f5cdfecd5b61a82b453fde83701ee64b8d8237" translate="yes" xml:space="preserve">
          <source>In that case, you can still force Git to update to the new head, as described in the following section. However, note that in the situation above this may mean losing the commits labeled &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;, unless you&amp;rsquo;ve already created a reference of your own pointing to them.</source>
          <target state="translated">En ese caso, a&amp;uacute;n puede forzar a Git a actualizar al nuevo encabezado, como se describe en la siguiente secci&amp;oacute;n. Sin embargo, tenga en cuenta que en la situaci&amp;oacute;n anterior, esto puede significar perder las confirmaciones etiquetadas &lt;code&gt;a&lt;/code&gt; y &lt;code&gt;b&lt;/code&gt; , a menos que ya haya creado una referencia propia que las se&amp;ntilde;ale.</target>
        </trans-unit>
        <trans-unit id="23201c1eda40e4016771870c9d54dd5324857456" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;git push&lt;/code&gt; command above we specify the name of the remote branch to update (&lt;code&gt;master&lt;/code&gt;). If we leave that out, &lt;code&gt;git push&lt;/code&gt; tries to update any branches in the remote repository that have the same name as a branch in the local repository. So the last &lt;code&gt;push&lt;/code&gt; can be done with either of:</source>
          <target state="translated">En el comando &lt;code&gt;git push&lt;/code&gt; anterior, especificamos el nombre de la rama remota para actualizar ( &lt;code&gt;master&lt;/code&gt; ). Si lo dejamos fuera, &lt;code&gt;git push&lt;/code&gt; intenta actualizar cualquier rama en el repositorio remoto que tenga el mismo nombre que una rama en el repositorio local. Entonces, el &amp;uacute;ltimo &lt;code&gt;push&lt;/code&gt; se puede hacer con cualquiera de los siguientes:</target>
        </trans-unit>
        <trans-unit id="090c003198124abd0a59f9db99cb23a0a9d08a0d" translate="yes" xml:space="preserve">
          <source>In the above config only the submodule &lt;code&gt;bar&lt;/code&gt; and &lt;code&gt;baz&lt;/code&gt; are active, &lt;code&gt;bar&lt;/code&gt; due to (1) and &lt;code&gt;baz&lt;/code&gt; due to (3). &lt;code&gt;foo&lt;/code&gt; is inactive because (1) takes precedence over (3)</source>
          <target state="translated">En la configuraci&amp;oacute;n anterior, solo la &lt;code&gt;bar&lt;/code&gt; ra del subm&amp;oacute;dulo y &lt;code&gt;baz&lt;/code&gt; est&amp;aacute;n activos, la &lt;code&gt;bar&lt;/code&gt; ra debido a (1) y &lt;code&gt;baz&lt;/code&gt; debido a (3). &lt;code&gt;foo&lt;/code&gt; est&amp;aacute; inactivo porque (1) tiene prioridad sobre (3)</target>
        </trans-unit>
        <trans-unit id="f2615d435cf358760e53af78267e9744a2a4cd7e" translate="yes" xml:space="preserve">
          <source>In the above example output, the function signature was changed from both files (hence two &lt;code&gt;-&lt;/code&gt; removals from both file1 and file2, plus &lt;code&gt;++&lt;/code&gt; to mean one line that was added does not appear in either file1 or file2). Also eight other lines are the same from file1 but do not appear in file2 (hence prefixed with &lt;code&gt;+&lt;/code&gt;).</source>
          <target state="translated">En el resultado del ejemplo anterior, la firma de la funci&amp;oacute;n se cambi&amp;oacute; de ambos archivos (por lo tanto, dos &lt;code&gt;-&lt;/code&gt; eliminaciones de file1 y file2, m&amp;aacute;s &lt;code&gt;++&lt;/code&gt; para significar que una l&amp;iacute;nea que se agreg&amp;oacute; no aparece ni en file1 ni en file2). Adem&amp;aacute;s, otras ocho l&amp;iacute;neas son iguales desde el archivo1 pero no aparecen en el archivo2 (por lo tanto, tienen el prefijo &lt;code&gt;+&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="236d1518399c3b158b7b503f699f9dfd06244979" translate="yes" xml:space="preserve">
          <source>In the above example we have N = 8, so this will give:</source>
          <target state="translated">En el ejemplo anterior tenemos N=8,por lo que esto dará:</target>
        </trans-unit>
        <trans-unit id="4faa5ab35bd05c089c7f00cb50d40bc6a34dd151" translate="yes" xml:space="preserve">
          <source>In the case where the input consists entirely of whitespace characters, no output will be produced.</source>
          <target state="translated">En el caso de que la entrada consista enteramente en caracteres de espacio en blanco,no se producirá ninguna salida.</target>
        </trans-unit>
        <trans-unit id="6722ed28b0a968c96593a6b207713cd0f24f7d3a" translate="yes" xml:space="preserve">
          <source>In the check-in codepath, the worktree file is first converted with &lt;code&gt;filter&lt;/code&gt; driver (if specified and corresponding driver defined), then the result is processed with &lt;code&gt;ident&lt;/code&gt; (if specified), and then finally with &lt;code&gt;text&lt;/code&gt; (again, if specified and applicable).</source>
          <target state="translated">En la ruta de c&amp;oacute;digo de registro, el archivo del &amp;aacute;rbol de trabajo se convierte primero con el controlador de &lt;code&gt;filter&lt;/code&gt; (si se especifica y el controlador correspondiente se define), luego el resultado se procesa con &lt;code&gt;ident&lt;/code&gt; (si se especifica) y finalmente con &lt;code&gt;text&lt;/code&gt; o (nuevamente, si se especifica y aplica) .</target>
        </trans-unit>
        <trans-unit id="41a87794ee334f48f97053e2010dfe2b224b3e78" translate="yes" xml:space="preserve">
          <source>In the check-out codepath, the blob content is first converted with &lt;code&gt;text&lt;/code&gt;, and then &lt;code&gt;ident&lt;/code&gt; and fed to &lt;code&gt;filter&lt;/code&gt;.</source>
          <target state="translated">En la ruta de c&amp;oacute;digo de salida, el contenido del blob primero se convierte con &lt;code&gt;text&lt;/code&gt; o y luego se &lt;code&gt;ident&lt;/code&gt; ifica y se env&amp;iacute;a al &lt;code&gt;filter&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="113fa915b38684bf235e931affc2401ec6de4a63" translate="yes" xml:space="preserve">
          <source>In the cone mode case, the &lt;code&gt;git sparse-checkout list&lt;/code&gt; subcommand will list the directories that define the recursive patterns. For the example sparse-checkout file above, the output is as follows:</source>
          <target state="translated">En el caso del modo cono, el subcomando &lt;code&gt;git sparse-checkout list&lt;/code&gt; enumerar&amp;aacute; los directorios que definen los patrones recursivos. Para el ejemplo de archivo de pago disperso anterior, el resultado es el siguiente:</target>
        </trans-unit>
        <trans-unit id="50d1a515997c60c54243bae252639aa03db105b6" translate="yes" xml:space="preserve">
          <source>In the default overlay mode, &lt;code&gt;git checkout&lt;/code&gt; never removes files from the index or the working tree. When specifying &lt;code&gt;--no-overlay&lt;/code&gt;, files that appear in the index and working tree, but not in &lt;code&gt;&amp;lt;tree-ish&amp;gt;&lt;/code&gt; are removed, to make them match &lt;code&gt;&amp;lt;tree-ish&amp;gt;&lt;/code&gt; exactly.</source>
          <target state="translated">En el modo de superposici&amp;oacute;n predeterminado, &lt;code&gt;git checkout&lt;/code&gt; nunca elimina archivos del &amp;iacute;ndice o del &amp;aacute;rbol de trabajo. Al especificar &lt;code&gt;--no-overlay&lt;/code&gt; , los archivos que aparecen en el &amp;iacute;ndice y el &amp;aacute;rbol de trabajo, pero no en &lt;code&gt;&amp;lt;tree-ish&amp;gt;&lt;/code&gt; , se eliminan para que coincidan exactamente con &lt;code&gt;&amp;lt;tree-ish&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6cdd96542ff31058533f7beb40eadd124991c8c5" translate="yes" xml:space="preserve">
          <source>In the early days, Git (in the tradition of UNIX) was a bunch of programs which were extremely simple, and which you used in scripts, piping the output of one into another. This turned out to be good for initial development, since it was easier to test new things. However, recently many of these parts have become builtins, and some of the core has been &quot;libified&quot;, i.e. put into libgit.a for performance, portability reasons, and to avoid code duplication.</source>
          <target state="translated">En los primeros días,Git (en la tradición de UNIX)era un montón de programas que eran extremadamente simples,y que se usaban en scripts,canalizando la salida de uno en otro.Esto resultó ser bueno para el desarrollo inicial,ya que era más fácil probar cosas nuevas.Sin embargo,recientemente muchas de estas partes se han convertido en builtins,y parte del núcleo se ha &quot;liberado&quot;,es decir,se ha puesto en libgit.a por razones de rendimiento,portabilidad y para evitar la duplicación de código.</target>
        </trans-unit>
        <trans-unit id="5c0100c9df6abb7d7f1348c7fe307c535cc01a6e" translate="yes" xml:space="preserve">
          <source>In the examples, the following &lt;code&gt;.gitattributes&lt;/code&gt; file is used:</source>
          <target state="translated">En los ejemplos, se utiliza el siguiente archivo &lt;code&gt;.gitattributes&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="cc3fe53f7a76d1235b536b2f3e4aace1aeafd632" translate="yes" xml:space="preserve">
          <source>In the external editor window, read in the patch file and exit the editor normally.</source>
          <target state="translated">En la ventana del editor externo,lea el archivo de parches y salga del editor normalmente.</target>
        </trans-unit>
        <trans-unit id="8ef2e6de3f32f727ff12807f3683863dc57cb535" translate="yes" xml:space="preserve">
          <source>In the first form, it renames &amp;lt;source&amp;gt;, which must exist and be either a file, symlink or directory, to &amp;lt;destination&amp;gt;. In the second form, the last argument has to be an existing directory; the given sources will be moved into this directory.</source>
          <target state="translated">En la primera forma, cambia el nombre de &amp;lt;origen&amp;gt;, que debe existir y ser un archivo, enlace simb&amp;oacute;lico o directorio, a &amp;lt;destino&amp;gt;. En la segunda forma, el &amp;uacute;ltimo argumento tiene que ser un directorio existente; las fuentes dadas se mover&amp;aacute;n a este directorio.</target>
        </trans-unit>
        <trans-unit id="76aeefd352a6b656fb05dc49a2aa92d1acbe97ce" translate="yes" xml:space="preserve">
          <source>In the first three forms, copy entries from &lt;code&gt;&amp;lt;tree-ish&amp;gt;&lt;/code&gt; to the index. In the last form, set the current branch head (&lt;code&gt;HEAD&lt;/code&gt;) to &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt;, optionally modifying index and working tree to match. The &lt;code&gt;&amp;lt;tree-ish&amp;gt;&lt;/code&gt;/&lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; defaults to &lt;code&gt;HEAD&lt;/code&gt; in all forms.</source>
          <target state="translated">En los primeros tres formularios, copie las entradas de &lt;code&gt;&amp;lt;tree-ish&amp;gt;&lt;/code&gt; al &amp;iacute;ndice. En el &amp;uacute;ltimo formulario, establezca el encabezado de rama actual ( &lt;code&gt;HEAD&lt;/code&gt; ) en &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; , modificando opcionalmente el &amp;iacute;ndice y el &amp;aacute;rbol de trabajo para que coincidan. La &lt;code&gt;&amp;lt;tree-ish&amp;gt;&lt;/code&gt; / &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; por defecto &lt;code&gt;HEAD&lt;/code&gt; en todas sus formas.</target>
        </trans-unit>
        <trans-unit id="ef10a113d8afc34781099a24e1e343890650a1e1" translate="yes" xml:space="preserve">
          <source>In the following example, the developer works on a topic branch that refactors the way buttons are defined, and on another topic branch that uses that refactoring to implement a &quot;Report a bug&quot; button. The output of &lt;code&gt;git log --graph --format=%s -5&lt;/code&gt; may look like this:</source>
          <target state="translated">En el siguiente ejemplo, el desarrollador trabaja en una rama de tema que refactoriza la forma en que se definen los botones, y en otra rama de tema que usa esa refactorizaci&amp;oacute;n para implementar un bot&amp;oacute;n &quot;Informar un error&quot;. La salida de &lt;code&gt;git log --graph --format=%s -5&lt;/code&gt; puede verse as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="e8d35f4a27576cd3ee599047c232398088d285ec" translate="yes" xml:space="preserve">
          <source>In the following, we list all defined capabilities and for each we list which commands a helper with that capability must provide.</source>
          <target state="translated">A continuación,enumeramos todas las capacidades definidas y para cada una de ellas enumeramos los comandos que un ayudante con esa capacidad debe proporcionar.</target>
        </trans-unit>
        <trans-unit id="c56abbab61e08007b56db2739d2660b32ff3baf6" translate="yes" xml:space="preserve">
          <source>In the following, we say that commit X is &quot;reachable&quot; from commit Y if commit X is an ancestor of commit Y. Equivalently, you could say that Y is a descendant of X, or that there is a chain of parents leading from commit Y to commit X.</source>
          <target state="translated">A continuación,decimos que la comisión X es &quot;alcanzable&quot; desde la comisión Y si la comisión X es un antepasado de la comisión Y.Equivalentemente,se podría decir que Y es un descendiente de X,o que hay una cadena de padres que llevan de la comisión Y a la comisión X.</target>
        </trans-unit>
        <trans-unit id="2ab0015fa4bf468aa51dfb7b06e67d10a59ee05a" translate="yes" xml:space="preserve">
          <source>In the following, we will always refer to the same example history to illustrate the differences between simplification settings. We assume that you are filtering for a file &lt;code&gt;foo&lt;/code&gt; in this commit graph:</source>
          <target state="translated">A continuaci&amp;oacute;n, siempre nos referiremos al mismo historial de ejemplo para ilustrar las diferencias entre las configuraciones de simplificaci&amp;oacute;n. Suponemos que est&amp;aacute; filtrando por un archivo &lt;code&gt;foo&lt;/code&gt; en este gr&amp;aacute;fico de confirmaci&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="1a1825758e9c1b0f3cada9dea61b97f18e404ba1" translate="yes" xml:space="preserve">
          <source>In the ideal world, you could have realized that the earlier commit did not belong to the new topic when you created and switched to &lt;code&gt;branch2&lt;/code&gt; (i.e. &lt;code&gt;git switch -c branch2 start&lt;/code&gt;), but nobody is perfect.</source>
          <target state="translated">En el mundo ideal, podr&amp;iacute;a haberse dado cuenta de que la confirmaci&amp;oacute;n anterior no pertenec&amp;iacute;a al nuevo tema cuando cre&amp;oacute; y cambi&amp;oacute; a &lt;code&gt;branch2&lt;/code&gt; (es decir, &lt;code&gt;git switch -c branch2 start&lt;/code&gt; ), pero nadie es perfecto.</target>
        </trans-unit>
        <trans-unit id="d370a0f8ed20ae4cd4e933b9beff011b3187e6ad" translate="yes" xml:space="preserve">
          <source>In the long form, the leading colon &lt;code&gt;:&lt;/code&gt; is followed by an open parenthesis &lt;code&gt;(&lt;/code&gt;, a comma-separated list of zero or more &quot;magic words&quot;, and a close parentheses &lt;code&gt;)&lt;/code&gt;, and the remainder is the pattern to match against the path.</source>
          <target state="translated">En la forma larga, los dos puntos iniciales &lt;code&gt;:&lt;/code&gt; son seguidos por un par&amp;eacute;ntesis abierto &lt;code&gt;(&lt;/code&gt; , una lista separada por comas de cero o m&amp;aacute;s &quot;palabras m&amp;aacute;gicas&quot;, y un par&amp;eacute;ntesis cerrado &lt;code&gt;)&lt;/code&gt; , y el resto es el patr&amp;oacute;n que coincide con la ruta.</target>
        </trans-unit>
        <trans-unit id="ecbb466c633c8f376663d1974093b0b801e94fbc" translate="yes" xml:space="preserve">
          <source>In the main Thunderbird window, &lt;code&gt;before&lt;/code&gt; you open the compose window for the patch, use Tools&amp;rarr;about:config to set the following to the indicated values:</source>
          <target state="translated">En la ventana principal de Thunderbird, &lt;code&gt;before&lt;/code&gt; abrir la ventana de redacci&amp;oacute;n del parche, use Tools &amp;rarr; about: config para establecer lo siguiente en los valores indicados:</target>
        </trans-unit>
        <trans-unit id="3f70c7e45d5c392e715fb2023b23a65e5f20b82a" translate="yes" xml:space="preserve">
          <source>In the output from &lt;code&gt;git show-branch&lt;/code&gt;, &lt;code&gt;master&lt;/code&gt; should have everything &lt;code&gt;ko/master&lt;/code&gt; has, and &lt;code&gt;next&lt;/code&gt; should have everything &lt;code&gt;ko/next&lt;/code&gt; has, etc.</source>
          <target state="translated">En la salida de &lt;code&gt;git show-branch&lt;/code&gt; , &lt;code&gt;master&lt;/code&gt; debe tener todo lo que tiene &lt;code&gt;ko/master&lt;/code&gt; , y &lt;code&gt;next&lt;/code&gt; debe tener todo lo que tiene &lt;code&gt;ko/next&lt;/code&gt; , etc.</target>
        </trans-unit>
        <trans-unit id="9fb474287214ed4886618f1399ff63bbd11f6810" translate="yes" xml:space="preserve">
          <source>In the pager (&lt;code&gt;less&lt;/code&gt;), just search for &quot;bundle&quot;, go a few lines back, and see that it is in commit 18449ab0. Now just copy this object name, and paste it into the command line</source>
          <target state="translated">En el paginador ( &lt;code&gt;less&lt;/code&gt; ), busque &quot;paquete&quot;, retroceda unas l&amp;iacute;neas y vea que est&amp;aacute; en el compromiso 18449ab0. Ahora simplemente copie este nombre de objeto y p&amp;eacute;guelo en la l&amp;iacute;nea de comando</target>
        </trans-unit>
        <trans-unit id="5fc7016d20b7cd82938bb283d4d8443cc61835c8" translate="yes" xml:space="preserve">
          <source>In the past, &lt;code&gt;.git/HEAD&lt;/code&gt; was a symbolic link pointing at &lt;code&gt;refs/heads/master&lt;/code&gt;. When we wanted to switch to another branch, we did &lt;code&gt;ln -sf refs/heads/newbranch .git/HEAD&lt;/code&gt;, and when we wanted to find out which branch we are on, we did &lt;code&gt;readlink .git/HEAD&lt;/code&gt;. But symbolic links are not entirely portable, so they are now deprecated and symbolic refs (as described above) are used by default.</source>
          <target state="translated">En el pasado, &lt;code&gt;.git/HEAD&lt;/code&gt; era un enlace simb&amp;oacute;lico que apuntaba a &lt;code&gt;refs/heads/master&lt;/code&gt; . Cuando quisimos cambiar a otra rama, hicimos &lt;code&gt;ln -sf refs/heads/newbranch .git/HEAD&lt;/code&gt; , y cuando quisimos averiguar en qu&amp;eacute; rama estamos, hicimos &lt;code&gt;readlink .git/HEAD&lt;/code&gt; . Pero los enlaces simb&amp;oacute;licos no son completamente port&amp;aacute;tiles, por lo que ahora est&amp;aacute;n en desuso y las referencias simb&amp;oacute;licas (como se describi&amp;oacute; anteriormente) se utilizan por defecto.</target>
        </trans-unit>
        <trans-unit id="8dfab80b468101639bf9d627830b7559e865891a" translate="yes" xml:space="preserve">
          <source>In the previous example, when updating an existing branch, &lt;code&gt;git fetch&lt;/code&gt; checks to make sure that the most recent commit on the remote branch is a descendant of the most recent commit on your copy of the branch before updating your copy of the branch to point at the new commit. Git calls this process a &lt;a href=&quot;#fast-forwards&quot;&gt;fast-forward&lt;/a&gt;.</source>
          <target state="translated">En el ejemplo anterior, al actualizar una rama existente, &lt;code&gt;git fetch&lt;/code&gt; comprueba para asegurarse de que la confirmaci&amp;oacute;n m&amp;aacute;s reciente en la rama remota sea descendiente de la confirmaci&amp;oacute;n m&amp;aacute;s reciente en su copia de la rama antes de actualizar su copia de la rama para apuntar a el nuevo compromiso. Git llama a este proceso un &lt;a href=&quot;#fast-forwards&quot;&gt;avance r&amp;aacute;pido&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="39fc6243d8461e10163ad54b5cc61dfd9c9ca8f0" translate="yes" xml:space="preserve">
          <source>In the process of undoing a previous bad change, you may find it useful to check out an older version of a particular file using &lt;a href=&quot;git-restore&quot;&gt;git-restore[1]&lt;/a&gt;. The command</source>
          <target state="translated">En el proceso de deshacer un cambio incorrecto anterior, puede resultarle &amp;uacute;til verificar una versi&amp;oacute;n anterior de un archivo en particular usando &lt;a href=&quot;git-restore&quot;&gt;git-restore [1]&lt;/a&gt; . El comando</target>
        </trans-unit>
        <trans-unit id="ce5a30d6d89274fe8c4b93a655981ad3cb2875fa" translate="yes" xml:space="preserve">
          <source>In the process, it may discover conflicts. In that case it will stop and allow you to fix the conflicts; after fixing conflicts, use &lt;code&gt;git add&lt;/code&gt; to update the index with those contents, and then, instead of running &lt;code&gt;git commit&lt;/code&gt;, just run</source>
          <target state="translated">En el proceso, puede descubrir conflictos. En ese caso, se detendr&amp;aacute; y le permitir&amp;aacute; solucionar los conflictos; despu&amp;eacute;s de solucionar los conflictos, use &lt;code&gt;git add&lt;/code&gt; para actualizar el &amp;iacute;ndice con esos contenidos, y luego, en lugar de ejecutar &lt;code&gt;git commit&lt;/code&gt; , simplemente ejecute</target>
        </trans-unit>
        <trans-unit id="ecd16080120d9546efe5335b66c01332d8bc5340" translate="yes" xml:space="preserve">
          <source>In the second form, a list of objects (separated by linefeeds) is provided on stdin, and the SHA-1, type, and size of each object is printed on stdout. The output format can be overridden using the optional &lt;code&gt;&amp;lt;format&amp;gt;&lt;/code&gt; argument. If either &lt;code&gt;--textconv&lt;/code&gt; or &lt;code&gt;--filters&lt;/code&gt; was specified, the input is expected to list the object names followed by the path name, separated by a single whitespace, so that the appropriate drivers can be determined.</source>
          <target state="translated">En el segundo formulario, se proporciona una lista de objetos (separados por avances de l&amp;iacute;nea) en stdin, y el SHA-1, el tipo y el tama&amp;ntilde;o de cada objeto se imprimen en stdout. El formato de salida se puede anular utilizando el argumento opcional &lt;code&gt;&amp;lt;format&amp;gt;&lt;/code&gt; . Si se especific&amp;oacute; &lt;code&gt;--textconv&lt;/code&gt; o &lt;code&gt;--filters&lt;/code&gt; , se espera que la entrada enumere los nombres de los objetos seguidos del nombre de la ruta, separados por un solo espacio en blanco, de modo que se puedan determinar los controladores adecuados.</target>
        </trans-unit>
        <trans-unit id="909b0b19015ead3714bd1690a7877da1cf97f4fa" translate="yes" xml:space="preserve">
          <source>In the short-format, the status of each path is shown as one of these forms</source>
          <target state="translated">En el formato corto,el estado de cada camino se muestra como una de estas formas</target>
        </trans-unit>
        <trans-unit id="abe3a521aeac4a8adcc3faf0711763fbfd40b505" translate="yes" xml:space="preserve">
          <source>In the simple form, each line in the file consists of the canonical real name of an author, whitespace, and an email address used in the commit (enclosed by &lt;code&gt;&amp;lt;&lt;/code&gt; and &lt;code&gt;&amp;gt;&lt;/code&gt;) to map to the name. For example:</source>
          <target state="translated">En la forma simple, cada l&amp;iacute;nea en el archivo consta del nombre real can&amp;oacute;nico de un autor, espacios en blanco y una direcci&amp;oacute;n de correo electr&amp;oacute;nico utilizada en la confirmaci&amp;oacute;n (encerrada por &lt;code&gt;&amp;lt;&lt;/code&gt; y &lt;code&gt;&amp;gt;&lt;/code&gt; ) para mapear el nombre. Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="9cca233f9abbc26e27451b19e09d21eb7d1965d2" translate="yes" xml:space="preserve">
          <source>In the verbose listing that show the commit object name, show the shortest prefix that is at least &lt;code&gt;&amp;lt;n&amp;gt;&lt;/code&gt; hexdigits long that uniquely refers the object. The default value is 7 and can be overridden by the &lt;code&gt;core.abbrev&lt;/code&gt; config option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eecf34aeaad64fff7ea38378d33edc5335145626" translate="yes" xml:space="preserve">
          <source>In these cases you can tell Git the encoding of a file in the working directory with the &lt;code&gt;working-tree-encoding&lt;/code&gt; attribute. If a file with this attribute is added to Git, then Git re-encodes the content from the specified encoding to UTF-8. Finally, Git stores the UTF-8 encoded content in its internal data structure (called &quot;the index&quot;). On checkout the content is re-encoded back to the specified encoding.</source>
          <target state="translated">En estos casos, puede decirle a Git la codificaci&amp;oacute;n de un archivo en el directorio de trabajo con el atributo de &lt;code&gt;working-tree-encoding&lt;/code&gt; . Si se agrega un archivo con este atributo a Git, Git vuelve a codificar el contenido de la codificaci&amp;oacute;n especificada a UTF-8. Finalmente, Git almacena el contenido codificado en UTF-8 en su estructura de datos interna (llamada &quot;el &amp;iacute;ndice&quot;). Al finalizar la compra, el contenido se vuelve a codificar a la codificaci&amp;oacute;n especificada.</target>
        </trans-unit>
        <trans-unit id="5322604525a9aed1b9bf470c8d7df77aa5a14cc1" translate="yes" xml:space="preserve">
          <source>In these tables, &lt;code&gt;A&lt;/code&gt;, &lt;code&gt;B&lt;/code&gt;, &lt;code&gt;C&lt;/code&gt; and &lt;code&gt;D&lt;/code&gt; are some different states of a file. For example, the first line of the first table means that if a file is in state &lt;code&gt;A&lt;/code&gt; in the working tree, in state &lt;code&gt;B&lt;/code&gt; in the index, in state &lt;code&gt;C&lt;/code&gt; in &lt;code&gt;HEAD&lt;/code&gt; and in state &lt;code&gt;D&lt;/code&gt; in the target, then &lt;code&gt;git reset --soft
target&lt;/code&gt; will leave the file in the working tree in state &lt;code&gt;A&lt;/code&gt; and in the index in state &lt;code&gt;B&lt;/code&gt;. It resets (i.e. moves) the &lt;code&gt;HEAD&lt;/code&gt; (i.e. the tip of the current branch, if you are on one) to &lt;code&gt;target&lt;/code&gt; (which has the file in state &lt;code&gt;D&lt;/code&gt;).</source>
          <target state="translated">En estas tablas, &lt;code&gt;A&lt;/code&gt; , &lt;code&gt;B&lt;/code&gt; , &lt;code&gt;C&lt;/code&gt; y &lt;code&gt;D&lt;/code&gt; son algunos estados diferentes de un archivo. Por ejemplo, la primera l&amp;iacute;nea de la primera tabla significa que si un archivo est&amp;aacute; en el estado &lt;code&gt;A&lt;/code&gt; en el &amp;aacute;rbol de trabajo, en el estado &lt;code&gt;B&lt;/code&gt; en el &amp;iacute;ndice, en el estado &lt;code&gt;C&lt;/code&gt; en &lt;code&gt;HEAD&lt;/code&gt; y en el estado &lt;code&gt;D&lt;/code&gt; en el destino, entonces &lt;code&gt;git reset --soft target&lt;/code&gt; ser&amp;aacute; dejar el archivo en el directorio de trabajo en el estado &lt;code&gt;A&lt;/code&gt; y en el &amp;iacute;ndice en el estado &lt;code&gt;B&lt;/code&gt; . Restablece (es decir, mueve) la &lt;code&gt;HEAD&lt;/code&gt; (es decir, la punta de la rama actual, si est&amp;aacute; en una) al &lt;code&gt;target&lt;/code&gt; (que tiene el archivo en estado &lt;code&gt;D&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="31d8ef3e97391069cf0655f41499162005f123c2" translate="yes" xml:space="preserve">
          <source>In these two shorthand notations, you can omit one end and let it default to HEAD. For example, &lt;code&gt;origin..&lt;/code&gt; is a shorthand for &lt;code&gt;origin..HEAD&lt;/code&gt; and asks &quot;What did I do since I forked from the origin branch?&quot; Similarly, &lt;code&gt;..origin&lt;/code&gt; is a shorthand for &lt;code&gt;HEAD..origin&lt;/code&gt; and asks &quot;What did the origin do since I forked from them?&quot; Note that &lt;code&gt;..&lt;/code&gt; would mean &lt;code&gt;HEAD..HEAD&lt;/code&gt; which is an empty range that is both reachable and unreachable from HEAD.</source>
          <target state="translated">En estas dos notaciones abreviadas, puede omitir un final y dejar que sea el predeterminado HEAD. Por ejemplo, &lt;code&gt;origin..&lt;/code&gt; es una abreviatura de origen ... &lt;code&gt;origin..HEAD&lt;/code&gt; y pregunta &quot;&amp;iquest;Qu&amp;eacute; hice desde que me bifurqu&amp;eacute; desde la rama de origen?&quot; De manera similar, &lt;code&gt;..origin&lt;/code&gt; es una abreviatura de &lt;code&gt;HEAD..origin&lt;/code&gt; y pregunta &quot;&amp;iquest;Qu&amp;eacute; hizo el origen desde que me bifurqu&amp;eacute; de ellos?&quot; Tenga en cuenta que &lt;code&gt;..&lt;/code&gt; significar&amp;iacute;a &lt;code&gt;HEAD..HEAD&lt;/code&gt; , que es un rango vac&amp;iacute;o que es tanto accesible como inalcanzable desde HEAD.</target>
        </trans-unit>
        <trans-unit id="fda0649080e4ad73be213a95d0150567b39a9905" translate="yes" xml:space="preserve">
          <source>In this case Git will attempt to undo the old change while leaving intact any changes made since then. If more recent changes overlap with the changes to be reverted, then you will be asked to fix conflicts manually, just as in the case of &lt;a href=&quot;#resolving-a-merge&quot;&gt;resolving a merge&lt;/a&gt;.</source>
          <target state="translated">En este caso, Git intentar&amp;aacute; deshacer el cambio anterior dejando intactos los cambios realizados desde entonces. Si los cambios m&amp;aacute;s recientes se superponen con los cambios que se van a revertir, se le pedir&amp;aacute; que corrija los conflictos manualmente, como en el caso de &lt;a href=&quot;#resolving-a-merge&quot;&gt;resolver una fusi&amp;oacute;n&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b7e31e9f418486f831893dd264d133713a86e996" translate="yes" xml:space="preserve">
          <source>In this case if you are bisecting manually, what you can do is create a special branch that starts just before the BBC. The first commit in this branch should be the BBC with the BFC squashed into it. And the other commits in the branch should be the commits between BBC and BFC rebased on the first commit of the branch and then the commit after BFC also rebased on.</source>
          <target state="translated">En este caso,si estás bisecando manualmente,lo que puedes hacer es crear una rama especial que comienza justo antes de la BBC.El primer commit en esta rama debería ser la BBC con el BFC aplastado en ella.Y las otras confirmaciones en la rama deberían ser las confirmaciones entre la BBC y la BFC basadas en la primera confirmación de la rama y luego la confirmación después de la BFC también basada en ella.</target>
        </trans-unit>
        <trans-unit id="717fbe628e5024a7ab31b6335fd291caf38b26b3" translate="yes" xml:space="preserve">
          <source>In this case this creates a totally new commit that is not related to anything else. Normally you do this only &lt;strong&gt;once&lt;/strong&gt; for a project ever, and all later commits will be parented on top of an earlier commit.</source>
          <target state="translated">En este caso, esto crea una confirmaci&amp;oacute;n totalmente nueva que no est&amp;aacute; relacionada con nada m&amp;aacute;s. Normalmente, hace esto solo &lt;strong&gt;una vez&lt;/strong&gt; para un proyecto, y todas las confirmaciones posteriores se vincular&amp;aacute;n con una confirmaci&amp;oacute;n anterior.</target>
        </trans-unit>
        <trans-unit id="8d602afd53dc502b1f39532e44b808e7e4006de6" translate="yes" xml:space="preserve">
          <source>In this case we say that the HEAD is &quot;detached&quot;.</source>
          <target state="translated">En este caso decimos que la CABEZA está &quot;desprendida&quot;.</target>
        </trans-unit>
        <trans-unit id="84d70e62f46cda65cca1be0dfe61a185714e74d6" translate="yes" xml:space="preserve">
          <source>In this case, &lt;code&gt;git fetch&lt;/code&gt; will fail, and print out a warning.</source>
          <target state="translated">En este caso, &lt;code&gt;git fetch&lt;/code&gt; fallar&amp;aacute; e imprimir&amp;aacute; una advertencia.</target>
        </trans-unit>
        <trans-unit id="ec2a36fb392a8671d4d7ad6f96adda81069f0cb4" translate="yes" xml:space="preserve">
          <source>In this case, the &lt;code&gt;git read-tree -m $H $M&lt;/code&gt; command makes sure that no local change is lost as the result of this &quot;merge&quot;. Here are the &quot;carry forward&quot; rules, where &quot;I&quot; denotes the index, &quot;clean&quot; means that index and work tree coincide, and &quot;exists&quot;/&quot;nothing&quot; refer to the presence of a path in the specified commit:</source>
          <target state="translated">En este caso, el comando &lt;code&gt;git read-tree -m $H $M&lt;/code&gt; asegura que no se pierda ning&amp;uacute;n cambio local como resultado de esta &quot;fusi&amp;oacute;n&quot;. Aqu&amp;iacute; est&amp;aacute;n las reglas de &quot;arrastre&quot;, donde &quot;I&quot; denota el &amp;iacute;ndice, &quot;limpiar&quot; significa que el &amp;iacute;ndice y el &amp;aacute;rbol de trabajo coinciden y &quot;existe&quot; / &quot;nada&quot; se refieren a la presencia de una ruta en la confirmaci&amp;oacute;n especificada:</target>
        </trans-unit>
        <trans-unit id="53de38de1c4937be3492ea2adad08075be0660b2" translate="yes" xml:space="preserve">
          <source>In this case, though, Git may not eventually be able to tell the first bad one between some first skipped commits and a later bad commit.</source>
          <target state="translated">En este caso,sin embargo,Git puede no ser capaz de distinguir el primer mal entre los primeros compromisos salteados y un mal compromiso posterior.</target>
        </trans-unit>
        <trans-unit id="cc3568a850f36cf3d79c68cf0d9db0591ec5b81e" translate="yes" xml:space="preserve">
          <source>In this case, when &lt;code&gt;git bisect run&lt;/code&gt; finishes, bisect/bad will refer to a commit that has at least one parent whose reachable graph is fully traversable in the sense required by &lt;code&gt;git pack objects&lt;/code&gt;.</source>
          <target state="translated">En este caso, cuando finalice la &lt;code&gt;git bisect run&lt;/code&gt; , bisect / bad se referir&amp;aacute; a una confirmaci&amp;oacute;n que tiene al menos un padre cuyo gr&amp;aacute;fico alcanzable es completamente transitable en el sentido requerido por &lt;code&gt;git pack objects&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="052b0bf9d817f9d1efdbc01c640d54d8fda7ad16" translate="yes" xml:space="preserve">
          <source>In this example preload_index() was executed by the &lt;code&gt;main&lt;/code&gt; thread and started the &lt;code&gt;preload&lt;/code&gt; region. Seven threads, named &lt;code&gt;th01:preload_thread&lt;/code&gt; through &lt;code&gt;th07:preload_thread&lt;/code&gt;, were started. Events from each thread are atomically appended to the shared target stream as they occur so they may appear in random order with respect other threads. Finally, the main thread waits for the threads to finish and leaves the region.</source>
          <target state="translated">En este ejemplo, preload_index () fue ejecutado por el hilo &lt;code&gt;main&lt;/code&gt; e inici&amp;oacute; la regi&amp;oacute;n de &lt;code&gt;preload&lt;/code&gt; . Se &lt;code&gt;th01:preload_thread&lt;/code&gt; siete subprocesos, llamados th01: preload_thread a &lt;code&gt;th07:preload_thread&lt;/code&gt; . Los eventos de cada subproceso se agregan at&amp;oacute;micamente al flujo de destino compartido a medida que ocurren, por lo que pueden aparecer en orden aleatorio con respecto a otros subprocesos. Finalmente, el hilo principal espera a que terminen los hilos y abandona la regi&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="8e1c791b90ef2153c52f59ff823e2b7a9d806696" translate="yes" xml:space="preserve">
          <source>In this example, &quot;origin&quot; is called a remote repository, or &quot;remote&quot; for short. The branches of this repository are called &quot;remote branches&quot; from our point of view. The remote-tracking branches listed above were created based on the remote branches at clone time and will be updated by &lt;code&gt;git fetch&lt;/code&gt; (hence &lt;code&gt;git pull&lt;/code&gt;) and &lt;code&gt;git push&lt;/code&gt;. See &lt;a href=&quot;#Updating-a-repository-With-git-fetch&quot;&gt;Updating a repository with git fetch&lt;/a&gt; for details.</source>
          <target state="translated">En este ejemplo, &quot;origen&quot; se denomina repositorio remoto o &quot;remoto&quot; para abreviar. Las ramas de este repositorio se denominan &quot;ramas remotas&quot; desde nuestro punto de vista. Las ramas de seguimiento remoto enumeradas anteriormente se crearon en funci&amp;oacute;n de las ramas remotas en el momento de la clonaci&amp;oacute;n y se actualizar&amp;aacute;n mediante &lt;code&gt;git fetch&lt;/code&gt; (de ah&amp;iacute; &lt;code&gt;git pull&lt;/code&gt; ) y &lt;code&gt;git push&lt;/code&gt; . Consulte &lt;a href=&quot;#Updating-a-repository-With-git-fetch&quot;&gt;Actualizaci&amp;oacute;n de un repositorio con git fetch&lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="888891869abe63aa603e61303e6b4eda4f092540" translate="yes" xml:space="preserve">
          <source>In this example, scanning for untracked files ran from +0.012568 to +0.027149 (since the process started) and took 0.014581 seconds.</source>
          <target state="translated">En este ejemplo,el escaneo de archivos no rastreados fue de +0.012568 a +0.027149 (desde que comenzó el proceso)y tomó 0.014581 segundos.</target>
        </trans-unit>
        <trans-unit id="06524b5c41784cbbacde83bd5045f27a411dfe64" translate="yes" xml:space="preserve">
          <source>In this example, the &lt;code&gt;ko&lt;/code&gt; shorthand points at the Git maintainer&amp;rsquo;s repository at kernel.org, and looks like this:</source>
          <target state="translated">En este ejemplo, la abreviatura &lt;code&gt;ko&lt;/code&gt; apunta al repositorio del mantenedor de Git en kernel.org, y se ve as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="f509bc56ecf3e22348180170f4391a6c5749bec9" translate="yes" xml:space="preserve">
          <source>In this example, the preload region took 0.009122 seconds. The 7 threads took between 0.006069 and 0.008947 seconds to work on their portion of the index. Thread &quot;th01&quot; worked on 508 items at offset 0. Thread &quot;th02&quot; worked on 508 items at offset 2032. Thread &quot;th04&quot; worked on 508 items at offset 508.</source>
          <target state="translated">En este ejemplo,la región de precarga tomó 0,009122 segundos.Los 7 hilos tardaron entre 0,006069 y 0,008947 segundos en trabajar en su porción del índice.El hilo &quot;th01&quot; funcionó en 508 elementos con un offset de 0.El hilo &quot;th02&quot; funcionó en 508 elementos con un offset de 2032.La rosca &quot;th04&quot; trabajó en 508 artículos en el offset 508.</target>
        </trans-unit>
        <trans-unit id="24b2f8c33beed03671571687642648d3c34d3255" translate="yes" xml:space="preserve">
          <source>In this example, the root-level directory &lt;code&gt;/pub&lt;/code&gt; will contain a subdirectory for each virtual host IP address supported. Repositories can still be accessed by hostname though, assuming they correspond to these IP addresses.</source>
          <target state="translated">En este ejemplo, el directorio de nivel ra&amp;iacute;z &lt;code&gt;/pub&lt;/code&gt; contendr&amp;aacute; un subdirectorio para cada direcci&amp;oacute;n IP de host virtual admitida. Sin embargo, se puede acceder a los repositorios por nombre de host, suponiendo que correspondan a estas direcciones IP.</target>
        </trans-unit>
        <trans-unit id="1b3657f6aff85ab6f6a5a7f723164213b6e98109" translate="yes" xml:space="preserve">
          <source>In this example, the root-level directory &lt;code&gt;/pub&lt;/code&gt; will contain a subdirectory for each virtual host name supported. Further, both hosts advertise repositories simply as &lt;code&gt;git://www.example.com/software/repo.git&lt;/code&gt;. For pre-1.4.0 clients, a symlink from &lt;code&gt;/software&lt;/code&gt; into the appropriate default repository could be made as well.</source>
          <target state="translated">En este ejemplo, el directorio de nivel ra&amp;iacute;z &lt;code&gt;/pub&lt;/code&gt; contendr&amp;aacute; un subdirectorio para cada nombre de host virtual admitido. Adem&amp;aacute;s, ambos hosts anuncian repositorios simplemente como &lt;code&gt;git://www.example.com/software/repo.git&lt;/code&gt; . Para los clientes anteriores a 1.4.0, tambi&amp;eacute;n se podr&amp;iacute;a crear un enlace simb&amp;oacute;lico desde &lt;code&gt;/software&lt;/code&gt; al repositorio predeterminado apropiado.</target>
        </trans-unit>
        <trans-unit id="4f73381570064f6ad92295b54ae4d9111ba415e0" translate="yes" xml:space="preserve">
          <source>In this example, there are 3 old and 3 new commits, where the developer removed the 3rd, added a new one before the first two, and modified the commit message of the 2nd commit as well its diff.</source>
          <target state="translated">En este ejemplo,hay 3 viejas y 3 nuevas confirmaciones,donde el desarrollador eliminó la tercera,añadió una nueva antes de las dos primeras,y modificó el mensaje de confirmación de la segunda confirmación así como su diff.</target>
        </trans-unit>
        <trans-unit id="5f85b35b8b6aae26894cfdfbe33e3822a8120573" translate="yes" xml:space="preserve">
          <source>In this example, we passed &quot;grep &lt;code&gt;^SUBLEVEL = 25&lt;/code&gt; Makefile&quot; as parameter to &quot;git bisect run&quot;. This means that at each step, the grep command we passed will be launched. And if it exits with code 0 (that means success) then git bisect will mark the current state as &quot;good&quot;. If it exits with code 1 (or any code between 1 and 127 included, except the special code 125), then the current state will be marked as &quot;bad&quot;.</source>
          <target state="translated">En este ejemplo, pasamos &quot;grep &lt;code&gt;^SUBLEVEL = 25&lt;/code&gt; Makefile&quot; como par&amp;aacute;metro a &quot;git bisect run&quot;. Esto significa que en cada paso, se lanzar&amp;aacute; el comando grep que pasamos. Y si sale con el c&amp;oacute;digo 0 (eso significa &amp;eacute;xito), git bisect marcar&amp;aacute; el estado actual como &quot;bueno&quot;. Si sale con el c&amp;oacute;digo 1 (o cualquier c&amp;oacute;digo entre 1 y 127 incluido, excepto el c&amp;oacute;digo especial 125), entonces el estado actual se marcar&amp;aacute; como &quot;malo&quot;.</target>
        </trans-unit>
        <trans-unit id="eee8776c9677f60ee6e97b993bed2ed1a91281bf" translate="yes" xml:space="preserve">
          <source>In this format, each line is output after a header; the header at the minimum has the first line which has:</source>
          <target state="translated">En este formato,cada línea se emite después de un encabezamiento;el encabezamiento en el mínimo tiene la primera línea que tiene:</target>
        </trans-unit>
        <trans-unit id="991df4351922c60c45e086aff27d9273fe47de49" translate="yes" xml:space="preserve">
          <source>In this format, use 40 &quot;0&quot; to specify a zero value, and use the empty string to specify a missing value.</source>
          <target state="translated">En este formato,utilice 40 &quot;0&quot; para especificar un valor cero,y utilice la cadena vacía para especificar un valor que falta.</target>
        </trans-unit>
        <trans-unit id="b4a37ae142e5dfb709dfd08bf26fc04d26f39f66" translate="yes" xml:space="preserve">
          <source>In this mode, specific configuration stays in the path pointed by &lt;code&gt;git
rev-parse --git-path config.worktree&lt;/code&gt;. You can add or update configuration in this file with &lt;code&gt;git config --worktree&lt;/code&gt;. Older Git versions will refuse to access repositories with this extension.</source>
          <target state="translated">En este modo, la configuraci&amp;oacute;n espec&amp;iacute;fica permanece en la ruta se&amp;ntilde;alada por &lt;code&gt;git rev-parse --git-path config.worktree&lt;/code&gt; . Puede agregar o actualizar la configuraci&amp;oacute;n en este archivo con &lt;code&gt;git config --worktree&lt;/code&gt; . Las versiones anteriores de Git se negar&amp;aacute;n a acceder a los repositorios con esta extensi&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="26cf2860c6712d39e5cbcd807f1756d9308dfdb3" translate="yes" xml:space="preserve">
          <source>In this mode, the index is split into two files, $GIT_DIR/index and $GIT_DIR/sharedindex.&amp;lt;SHA-1&amp;gt;. Changes are accumulated in $GIT_DIR/index, the split index, while the shared index file contains all index entries and stays unchanged.</source>
          <target state="translated">En este modo, el &amp;iacute;ndice se divide en dos archivos, $ GIT_DIR / index y $ GIT_DIR / sharedindex. &amp;lt;SHA-1&amp;gt;. Los cambios se acumulan en $ GIT_DIR / index, el &amp;iacute;ndice dividido, mientras que el archivo de &amp;iacute;ndice compartido contiene todas las entradas de &amp;iacute;ndice y permanece sin cambios.</target>
        </trans-unit>
        <trans-unit id="ffc9d6f506ae4dc0ef8e821987c60f58237503b7" translate="yes" xml:space="preserve">
          <source>In this mode, the server will not request authentication until the client actually starts the object negotiation phase of the push, rather than during the initial contact. For this reason, you must also enable the &lt;code&gt;http.receivepack&lt;/code&gt; config option in any repositories that should accept a push. The default behavior, if &lt;code&gt;http.receivepack&lt;/code&gt; is not set, is to reject any pushes by unauthenticated users; the initial request will therefore report &lt;code&gt;403 Forbidden&lt;/code&gt; to the client, without even giving an opportunity for authentication.</source>
          <target state="translated">En este modo, el servidor no solicitar&amp;aacute; autenticaci&amp;oacute;n hasta que el cliente realmente comience la fase de negociaci&amp;oacute;n del objeto del env&amp;iacute;o, en lugar de durante el contacto inicial. Por esta raz&amp;oacute;n, tambi&amp;eacute;n debe habilitar la opci&amp;oacute;n de configuraci&amp;oacute;n &lt;code&gt;http.receivepack&lt;/code&gt; en cualquier repositorio que deba aceptar un env&amp;iacute;o. El comportamiento predeterminado, si &lt;code&gt;http.receivepack&lt;/code&gt; no est&amp;aacute; configurado, es rechazar cualquier env&amp;iacute;o de usuarios no autenticados; Por lo tanto, la solicitud inicial informar&amp;aacute; &lt;code&gt;403 Forbidden&lt;/code&gt; al cliente, sin siquiera dar la oportunidad de autenticaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="427d8f8d92a71761648b972f0beb3c2aad83aaaa" translate="yes" xml:space="preserve">
          <source>In this more general usage, you provide &lt;code&gt;git bisect&lt;/code&gt; with a &quot;new&quot; commit that has some property and an &quot;old&quot; commit that doesn&amp;rsquo;t have that property. Each time &lt;code&gt;git bisect&lt;/code&gt; checks out a commit, you test if that commit has the property. If it does, mark the commit as &quot;new&quot;; otherwise, mark it as &quot;old&quot;. When the bisection is done, &lt;code&gt;git bisect&lt;/code&gt; will report which commit introduced the property.</source>
          <target state="translated">En este uso m&amp;aacute;s general, le proporcionas a &lt;code&gt;git bisect&lt;/code&gt; una confirmaci&amp;oacute;n &quot;nueva&quot; que tiene alguna propiedad y una confirmaci&amp;oacute;n &quot;antigua&quot; que no tiene esa propiedad. Cada vez que &lt;code&gt;git bisect&lt;/code&gt; comprueba una confirmaci&amp;oacute;n, prueba si esa confirmaci&amp;oacute;n tiene la propiedad. Si es as&amp;iacute;, marque la confirmaci&amp;oacute;n como &quot;nueva&quot;; de lo contrario, m&amp;aacute;rquelo como &quot;antiguo&quot;. Cuando se realiza la bisecci&amp;oacute;n, &lt;code&gt;git bisect&lt;/code&gt; informar&amp;aacute; qu&amp;eacute; confirmaci&amp;oacute;n introdujo la propiedad.</target>
        </trans-unit>
        <trans-unit id="c1e29a4968fef09e4ce2211e751712b57ac5f128" translate="yes" xml:space="preserve">
          <source>In this view, we see all of the important single-parent changes from &lt;code&gt;A&lt;/code&gt;, &lt;code&gt;B&lt;/code&gt;, and &lt;code&gt;X&lt;/code&gt;. We also see the carefully-resolved merge &lt;code&gt;M&lt;/code&gt; and the not-so-carefully-resolved merge &lt;code&gt;R&lt;/code&gt;. This is usually enough information to determine why the commits &lt;code&gt;A&lt;/code&gt; and &lt;code&gt;B&lt;/code&gt; &quot;disappeared&quot; from history in the default view. However, there are a few issues with this approach.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6da0601a9e7aee317ec7d6d594e01f938b779c4" translate="yes" xml:space="preserve">
          <source>In unusual scenarios, you may not be able to create files larger than a certain size on your filesystem, and this option can be used to tell the command to split the output packfile into multiple independent packfiles, each not larger than the given size. The size can be suffixed with &quot;k&quot;, &quot;m&quot;, or &quot;g&quot;. The minimum size allowed is limited to 1 MiB. This option prevents the creation of a bitmap index. The default is unlimited, unless the config variable &lt;code&gt;pack.packSizeLimit&lt;/code&gt; is set.</source>
          <target state="translated">En escenarios inusuales, es posible que no pueda crear archivos m&amp;aacute;s grandes que un cierto tama&amp;ntilde;o en su sistema de archivos, y esta opci&amp;oacute;n se puede usar para decirle al comando que divida el archivo de paquete de salida en varios archivos de paquete independientes, cada uno no m&amp;aacute;s grande que el tama&amp;ntilde;o dado. El tama&amp;ntilde;o puede tener el sufijo &quot;k&quot;, &quot;m&quot; o &quot;g&quot;. El tama&amp;ntilde;o m&amp;iacute;nimo permitido est&amp;aacute; limitado a 1 MiB. Esta opci&amp;oacute;n evita la creaci&amp;oacute;n de un &amp;iacute;ndice de mapa de bits. El valor predeterminado es ilimitado, a menos que se establezca la variable de configuraci&amp;oacute;n &lt;code&gt;pack.packSizeLimit&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4e6119784d7cd9e9e9f521473e212223da8f242e" translate="yes" xml:space="preserve">
          <source>In versions of Git before 2.23.0 patterns containing \0 would be silently considered fixed. This was never documented, there were also odd and undocumented interactions between e.g. non-ASCII patterns containing \0 and &lt;code&gt;--ignore-case&lt;/code&gt;.</source>
          <target state="translated">En versiones de Git anteriores a la 2.23.0, los patrones que contienen \ 0 se considerar&amp;iacute;an fijos en silencio. Esto nunca se document&amp;oacute;, tambi&amp;eacute;n hubo interacciones extra&amp;ntilde;as e indocumentadas entre, por ejemplo, patrones no ASCII que contienen \ 0 y &lt;code&gt;--ignore-case&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5da95a93eebb0b267da3b6f30d0296fee9bbc09f" translate="yes" xml:space="preserve">
          <source>Inactive branches are stored in a structure which uses 96 or 120 bytes (32 bit or 64 bit systems, respectively), plus the length of the branch name (typically under 200 bytes), per branch. fast-import will easily handle as many as 10,000 inactive branches in under 2 MiB of memory.</source>
          <target state="translated">Las ramas inactivas se almacenan en una estructura que utiliza 96 o 120 bytes (sistemas de 32 o 64 bits,respectivamente),más la longitud del nombre de la rama (normalmente menos de 200 bytes),por cada rama.La importación rápida manejará fácilmente hasta 10.000 ramas inactivas en menos de 2 MiB de memoria.</target>
        </trans-unit>
        <trans-unit id="40bf5b4a4e7b04d6908a8f7645b8e99e811e42d8" translate="yes" xml:space="preserve">
          <source>Include Some Progress Messages</source>
          <target state="translated">Incluya algunos mensajes de progreso</target>
        </trans-unit>
        <trans-unit id="d1a7a0c5683de418c5f98fc4beae70e15874a175" translate="yes" xml:space="preserve">
          <source>Include a line &amp;ldquo;log size &amp;lt;number&amp;gt;&amp;rdquo; in the output for each commit, where &amp;lt;number&amp;gt; is the length of that commit&amp;rsquo;s message in bytes. Intended to speed up tools that read log messages from &lt;code&gt;git log&lt;/code&gt; output by allowing them to allocate space in advance.</source>
          <target state="translated">Incluya una l&amp;iacute;nea &amp;ldquo;tama&amp;ntilde;o de registro &amp;lt;n&amp;uacute;mero&amp;gt;&amp;rdquo; en la salida de cada confirmaci&amp;oacute;n, donde &amp;lt;n&amp;uacute;mero&amp;gt; es la longitud del mensaje de esa confirmaci&amp;oacute;n en bytes. Destinado a acelerar las herramientas que leen los mensajes de &lt;code&gt;git log&lt;/code&gt; salida del registro de git al permitirles asignar espacio por adelantado.</target>
        </trans-unit>
        <trans-unit id="af14d11414c6ac75b39c95b283e5bcf0f4ccb002" translate="yes" xml:space="preserve">
          <source>Include additional statistics at the end of blame output.</source>
          <target state="translated">Incluya estadísticas adicionales al final de la salida de la culpa.</target>
        </trans-unit>
        <trans-unit id="67b90ce59db96c9a579b89f0489d7d9769ae1702" translate="yes" xml:space="preserve">
          <source>Include all commits from the default mode, but also any merge commits that are not TREESAME to the first parent but are TREESAME to a later parent. This mode is helpful for showing the merge commits that &quot;first introduced&quot; a change to a branch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47c5e0ca752d4a1deb14e562052c4b503ef081b0" translate="yes" xml:space="preserve">
          <source>Include commits that are reachable from &amp;lt;rev&amp;gt; (i.e. &amp;lt;rev&amp;gt; and its ancestors).</source>
          <target state="translated">Incluya las confirmaciones que sean accesibles desde &amp;lt;rev&amp;gt; (es decir, &amp;lt;rev&amp;gt; y sus ancestros).</target>
        </trans-unit>
        <trans-unit id="9605f416b0921199291f14b56df68cc8fe57350a" translate="yes" xml:space="preserve">
          <source>Include commits that are reachable from &amp;lt;rev2&amp;gt; but exclude those that are reachable from &amp;lt;rev1&amp;gt;. When either &amp;lt;rev1&amp;gt; or &amp;lt;rev2&amp;gt; is omitted, it defaults to &lt;code&gt;HEAD&lt;/code&gt;.</source>
          <target state="translated">Incluya las confirmaciones a las que se puede acceder desde &amp;lt;rev2&amp;gt;, pero excluya aquellas a las que se puede acceder desde &amp;lt;rev1&amp;gt;. Cuando se omite &amp;lt;rev1&amp;gt; o &amp;lt;rev2&amp;gt;, el valor predeterminado es &lt;code&gt;HEAD&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ce2adffe692042c194b87264e9afec51300d7f42" translate="yes" xml:space="preserve">
          <source>Include commits that are reachable from either &amp;lt;rev1&amp;gt; or &amp;lt;rev2&amp;gt; but exclude those that are reachable from both. When either &amp;lt;rev1&amp;gt; or &amp;lt;rev2&amp;gt; is omitted, it defaults to &lt;code&gt;HEAD&lt;/code&gt;.</source>
          <target state="translated">Incluya las confirmaciones a las que se puede acceder desde &amp;lt;rev1&amp;gt; o &amp;lt;rev2&amp;gt;, pero excluya aquellas a las que se puede acceder desde ambos. Cuando se omite &amp;lt;rev1&amp;gt; o &amp;lt;rev2&amp;gt;, el valor predeterminado es &lt;code&gt;HEAD&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a1236fce64f1fb93f2ef7dcc7912c2d79c1d22c1" translate="yes" xml:space="preserve">
          <source>Include cross-references to the glossary, where appropriate.</source>
          <target state="translated">Incluya referencias cruzadas al glosario,cuando proceda.</target>
        </trans-unit>
        <trans-unit id="ac12c15729a8f56d7cafe2e8c1b0d7927d0e53f1" translate="yes" xml:space="preserve">
          <source>Include debugging information related to the movement of lines between files (see &lt;code&gt;-C&lt;/code&gt;) and lines moved within a file (see &lt;code&gt;-M&lt;/code&gt;). The first number listed is the score. This is the number of alphanumeric characters detected as having been moved between or within files. This must be above a certain threshold for &lt;code&gt;git blame&lt;/code&gt; to consider those lines of code to have been moved.</source>
          <target state="translated">Incluya informaci&amp;oacute;n de depuraci&amp;oacute;n relacionada con el movimiento de l&amp;iacute;neas entre archivos (vea &lt;code&gt;-C&lt;/code&gt; ) y l&amp;iacute;neas movidas dentro de un archivo (vea &lt;code&gt;-M&lt;/code&gt; ). El primer n&amp;uacute;mero en la lista es la puntuaci&amp;oacute;n. Este es el n&amp;uacute;mero de caracteres alfanum&amp;eacute;ricos detectados que se han movido entre archivos o dentro de ellos. Esto debe estar por encima de un cierto umbral para que &lt;code&gt;git blame&lt;/code&gt; considere que esas l&amp;iacute;neas de c&amp;oacute;digo se han movido.</target>
        </trans-unit>
        <trans-unit id="eac52c02432a2a159a563ec983012928139e33b8" translate="yes" xml:space="preserve">
          <source>Include objects in &lt;code&gt;.keep&lt;/code&gt; files when repacking. Note that we still do not delete &lt;code&gt;.keep&lt;/code&gt; packs after &lt;code&gt;pack-objects&lt;/code&gt; finishes. This means that we may duplicate objects, but this makes the option safe to use when there are concurrent pushes or fetches. This option is generally only useful if you are writing bitmaps with &lt;code&gt;-b&lt;/code&gt; or &lt;code&gt;repack.writeBitmaps&lt;/code&gt;, as it ensures that the bitmapped packfile has the necessary objects.</source>
          <target state="translated">Incluya objetos en archivos &lt;code&gt;.keep&lt;/code&gt; al volver a empaquetar . Tenga en cuenta que todav&amp;iacute;a no &lt;code&gt;.keep&lt;/code&gt; paquetes .keep despu&amp;eacute;s &lt;code&gt;pack-objects&lt;/code&gt; finalice el paquete de objetos . Esto significa que podemos duplicar objetos, pero esto hace que la opci&amp;oacute;n sea segura de usar cuando hay empujes o recuperaciones simult&amp;aacute;neas. Por lo general, esta opci&amp;oacute;n solo es &amp;uacute;til si est&amp;aacute; escribiendo mapas de bits con &lt;code&gt;-b&lt;/code&gt; o &lt;code&gt;repack.writeBitmaps&lt;/code&gt; , ya que garantiza que el archivo de paquete con mapa de bits tenga los objetos necesarios.</target>
        </trans-unit>
        <trans-unit id="3b3acf7c7b624670bc98269d1db58c312d8f1ad9" translate="yes" xml:space="preserve">
          <source>Include patch text in the output.</source>
          <target state="translated">Incluya el texto del parche en la salida.</target>
        </trans-unit>
        <trans-unit id="7f58d83c9ac95ca37a657dfc92f2d025971598c2" translate="yes" xml:space="preserve">
          <source>Include the output of &lt;a href=&quot;git-status&quot;&gt;git-status[1]&lt;/a&gt; in the commit message template when using an editor to prepare the commit message. Defaults to on, but can be used to override configuration variable commit.status.</source>
          <target state="translated">Incluya la salida de &lt;a href=&quot;git-status&quot;&gt;git-status [1]&lt;/a&gt; en la plantilla de mensaje de confirmaci&amp;oacute;n cuando utilice un editor para preparar el mensaje de confirmaci&amp;oacute;n. Por defecto est&amp;aacute; activado, pero se puede usar para anular la variable de configuraci&amp;oacute;n commit.status.</target>
        </trans-unit>
        <trans-unit id="798a42403927f2977bd316b8bb1bba46f3e2c944" translate="yes" xml:space="preserve">
          <source>Include unasked-for annotated tags if the object they reference was included in the resulting packfile. This can be useful to send new tags to native Git clients.</source>
          <target state="translated">Incluya etiquetas comentadas no solicitadas si el objeto al que hacen referencia fue incluido en el archivo de paquete resultante.Esto puede ser útil para enviar nuevas etiquetas a los clientes nativos de Git.</target>
        </trans-unit>
        <trans-unit id="c5f574d342fa2383147936f6ccc821ddf1edb5ef" translate="yes" xml:space="preserve">
          <source>Included in a &lt;code&gt;commit&lt;/code&gt; command to add a new file or change the content of an existing file. This command has two different means of specifying the content of the file.</source>
          <target state="translated">Incluido en un comando de &lt;code&gt;commit&lt;/code&gt; para agregar un nuevo archivo o cambiar el contenido de un archivo existente. Este comando tiene dos medios diferentes para especificar el contenido del archivo.</target>
        </trans-unit>
        <trans-unit id="8dfee16c07e63cf25f2958c656ce64f423b1c0b9" translate="yes" xml:space="preserve">
          <source>Included in a &lt;code&gt;commit&lt;/code&gt; command to remove a file or recursively delete an entire directory from the branch. If the file or directory removal makes its parent directory empty, the parent directory will be automatically removed too. This cascades up the tree until the first non-empty directory or the root is reached.</source>
          <target state="translated">Incluido en un comando de &lt;code&gt;commit&lt;/code&gt; para eliminar un archivo o eliminar de forma recursiva un directorio completo de la rama. Si la eliminaci&amp;oacute;n del archivo o directorio hace que su directorio principal est&amp;eacute; vac&amp;iacute;o, el directorio principal tambi&amp;eacute;n se eliminar&amp;aacute; autom&amp;aacute;ticamente. Esto sube en cascada por el &amp;aacute;rbol hasta que se alcanza el primer directorio no vac&amp;iacute;o o la ra&amp;iacute;z.</target>
        </trans-unit>
        <trans-unit id="87d365412b703101b1d281d9e93e3f278251dd0d" translate="yes" xml:space="preserve">
          <source>Included in a &lt;code&gt;commit&lt;/code&gt; command to remove all files (and also all directories) from the branch. This command resets the internal branch structure to have no files in it, allowing the frontend to subsequently add all interesting files from scratch.</source>
          <target state="translated">Incluido en un comando de &lt;code&gt;commit&lt;/code&gt; para eliminar todos los archivos (y tambi&amp;eacute;n todos los directorios) de la rama. Este comando restablece la estructura de la rama interna para que no tenga archivos, lo que permite que la interfaz agregue posteriormente todos los archivos interesantes desde cero.</target>
        </trans-unit>
        <trans-unit id="28dccd9788a09aa2f373fa8c25c3b39e9406a080" translate="yes" xml:space="preserve">
          <source>Included in a &lt;code&gt;commit&lt;/code&gt;&lt;code&gt;&amp;lt;notes_ref&amp;gt;&lt;/code&gt; command to add a new note annotating a &lt;code&gt;&amp;lt;commit-ish&amp;gt;&lt;/code&gt; or change this annotation contents. Internally it is similar to filemodify 100644 on &lt;code&gt;&amp;lt;commit-ish&amp;gt;&lt;/code&gt; path (maybe split into subdirectories). It&amp;rsquo;s not advised to use any other commands to write to the &lt;code&gt;&amp;lt;notes_ref&amp;gt;&lt;/code&gt; tree except &lt;code&gt;filedeleteall&lt;/code&gt; to delete all existing notes in this tree. This command has two different means of specifying the content of the note.</source>
          <target state="translated">Incluido en un comando &lt;code&gt;commit&lt;/code&gt; &lt;code&gt;&amp;lt;notes_ref&amp;gt;&lt;/code&gt; para agregar una nueva nota anotando un &lt;code&gt;&amp;lt;commit-ish&amp;gt;&lt;/code&gt; o cambiar el contenido de esta anotaci&amp;oacute;n. Internamente, es similar a filemodify 100644 en la ruta &lt;code&gt;&amp;lt;commit-ish&amp;gt;&lt;/code&gt; (tal vez dividido en subdirectorios). No se recomienda utilizar ning&amp;uacute;n otro comando para escribir en el &amp;aacute;rbol &lt;code&gt;&amp;lt;notes_ref&amp;gt;&lt;/code&gt; excepto &lt;code&gt;filedeleteall&lt;/code&gt; para eliminar todas las notas existentes en este &amp;aacute;rbol. Este comando tiene dos medios diferentes para especificar el contenido de la nota.</target>
        </trans-unit>
        <trans-unit id="db54974f7f0ad531e35648ba85b9388029b4d7ef" translate="yes" xml:space="preserve">
          <source>Includes</source>
          <target state="translated">Includes</target>
        </trans-unit>
        <trans-unit id="de153f024523e4c2c467ece94c841922a681ecff" translate="yes" xml:space="preserve">
          <source>Includes one additional ancestor commit. The additional ancestry link does not change the way the tree state is built at this commit. If the &lt;code&gt;from&lt;/code&gt; command is omitted when creating a new branch, the first &lt;code&gt;merge&lt;/code&gt; commit will be the first ancestor of the current commit, and the branch will start out with no files. An unlimited number of &lt;code&gt;merge&lt;/code&gt; commands per commit are permitted by fast-import, thereby establishing an n-way merge.</source>
          <target state="translated">Incluye una confirmaci&amp;oacute;n de antepasado adicional. El enlace de ascendencia adicional no cambia la forma en que se construye el estado del &amp;aacute;rbol en esta confirmaci&amp;oacute;n. Si se omite el comando &lt;code&gt;from&lt;/code&gt; al crear una nueva rama, la primera confirmaci&amp;oacute;n de &lt;code&gt;merge&lt;/code&gt; ser&amp;aacute; el primer antecesor de la confirmaci&amp;oacute;n actual y la rama comenzar&amp;aacute; sin archivos. La importaci&amp;oacute;n r&amp;aacute;pida permite un n&amp;uacute;mero ilimitado de comandos de &lt;code&gt;merge&lt;/code&gt; por confirmaci&amp;oacute;n, lo que establece una combinaci&amp;oacute;n de n v&amp;iacute;as.</target>
        </trans-unit>
        <trans-unit id="8623cf320c015aba351966293c038ddef6f53905" translate="yes" xml:space="preserve">
          <source>Incompatible options</source>
          <target state="translated">Opciones incompatibles</target>
        </trans-unit>
        <trans-unit id="9020a39adcad5a9de717e37976fa2cef184a1df6" translate="yes" xml:space="preserve">
          <source>Incorporates changes from a remote repository into the current branch. In its default mode, &lt;code&gt;git pull&lt;/code&gt; is shorthand for &lt;code&gt;git fetch&lt;/code&gt; followed by &lt;code&gt;git merge FETCH_HEAD&lt;/code&gt;.</source>
          <target state="translated">Incorpora cambios de un repositorio remoto en la rama actual. En su modo predeterminado, &lt;code&gt;git pull&lt;/code&gt; es la abreviatura de &lt;code&gt;git fetch&lt;/code&gt; seguido de &lt;code&gt;git merge FETCH_HEAD&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4d61077e89adde5af7a04457989a77b3c48490ae" translate="yes" xml:space="preserve">
          <source>Incorporates changes from the named commits (since the time their histories diverged from the current branch) into the current branch. This command is used by &lt;code&gt;git pull&lt;/code&gt; to incorporate changes from another repository and can be used by hand to merge changes from one branch into another.</source>
          <target state="translated">Incorpora cambios de las confirmaciones nombradas (desde el momento en que sus historiales divergieron de la rama actual) a la rama actual. Este comando lo usa &lt;code&gt;git pull&lt;/code&gt; para incorporar cambios de otro repositorio y se puede usar a mano para fusionar cambios de una rama a otra.</target>
        </trans-unit>
        <trans-unit id="709702f7f984cb3913cdb163bc5d2fe003c81b05" translate="yes" xml:space="preserve">
          <source>Incremental output</source>
          <target state="translated">Incremento de la producción</target>
        </trans-unit>
        <trans-unit id="571937052d91a812bc84d435a3200a79bb1a0ee1" translate="yes" xml:space="preserve">
          <source>Indeed untestable commits are often untestable because a breakage was introduced at one time, and that breakage was fixed only after many other commits were introduced.</source>
          <target state="translated">De hecho,los compromisos no comprobables son a menudo no comprobables porque se introdujo una rotura en un momento dado,y esa rotura se arregló sólo después de que se introdujeran muchos otros compromisos.</target>
        </trans-unit>
        <trans-unit id="78699f384a94184571a61ab6b2f36f5cdf341b61" translate="yes" xml:space="preserve">
          <source>Indicate that only the objects wanted need to be fetched, not their dependents.</source>
          <target state="translated">Indicar que sólo los objetos deseados deben ser traídos,no sus dependientes.</target>
        </trans-unit>
        <trans-unit id="d063c49b2950871e5e846c69f89ed3fa8315be66" translate="yes" xml:space="preserve">
          <source>Indicate that these objects are being fetched from a promisor.</source>
          <target state="translated">Indican que estos objetos están siendo traídos por un promisorio.</target>
        </trans-unit>
        <trans-unit id="d4b8f31320c23f43d173d656edb4ca6c63551ac5" translate="yes" xml:space="preserve">
          <source>Indicates a blob object name.</source>
          <target state="translated">Indica el nombre de un objeto de la mancha.</target>
        </trans-unit>
        <trans-unit id="6d441ed12cf0b86c55591d731de178963fe6c1ee" translate="yes" xml:space="preserve">
          <source>Indicates a commit object name.</source>
          <target state="translated">Indica un nombre de objeto de compromiso.</target>
        </trans-unit>
        <trans-unit id="e89d58f77c5643f4921d84ac3c1216b6dc569e02" translate="yes" xml:space="preserve">
          <source>Indicates a commit or tag object name. A command that takes a &amp;lt;commit-ish&amp;gt; argument ultimately wants to operate on a &amp;lt;commit&amp;gt; object but automatically dereferences &amp;lt;tag&amp;gt; objects that point at a &amp;lt;commit&amp;gt;.</source>
          <target state="translated">Indica un nombre de objeto de confirmaci&amp;oacute;n o etiqueta. Un comando que toma un argumento &amp;lt;commit-ish&amp;gt; en &amp;uacute;ltima instancia, quiere operar en un objeto &amp;lt;commit&amp;gt; pero autom&amp;aacute;ticamente elimina las referencias a objetos &amp;lt;tag&amp;gt; que apuntan a un &amp;lt;commit&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="31963740af1f01e0807009b4b0a81e30ade64f1a" translate="yes" xml:space="preserve">
          <source>Indicates a filename - almost always relative to the root of the tree structure &lt;code&gt;GIT_INDEX_FILE&lt;/code&gt; describes.</source>
          <target state="translated">Indica un nombre de archivo, casi siempre relativo a la ra&amp;iacute;z de la estructura de &amp;aacute;rbol que describe &lt;code&gt;GIT_INDEX_FILE&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c59be5c9a5ab736a07e28f031fa629ea1cac80d9" translate="yes" xml:space="preserve">
          <source>Indicates a tree object name.</source>
          <target state="translated">Indica un nombre de objeto de árbol.</target>
        </trans-unit>
        <trans-unit id="0236f6573fabb077368d656582f35373ba9e33e6" translate="yes" xml:space="preserve">
          <source>Indicates a tree, commit or tag object name. A command that takes a &amp;lt;tree-ish&amp;gt; argument ultimately wants to operate on a &amp;lt;tree&amp;gt; object but automatically dereferences &amp;lt;commit&amp;gt; and &amp;lt;tag&amp;gt; objects that point at a &amp;lt;tree&amp;gt;.</source>
          <target state="translated">Indica un &amp;aacute;rbol, un compromiso o un nombre de objeto de etiqueta. Un comando que toma un argumento &amp;lt;tree-ish&amp;gt; en &amp;uacute;ltima instancia, quiere operar en un objeto &amp;lt;tree&amp;gt; pero elimina autom&amp;aacute;ticamente las referencias a los objetos &amp;lt;commit&amp;gt; y &amp;lt;tag&amp;gt; que apuntan a un &amp;lt;tree&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="73ecb0013f5389f15738299d7b0ca5b5c29b261f" translate="yes" xml:space="preserve">
          <source>Indicates that an object type is required. Currently one of: &lt;code&gt;blob&lt;/code&gt;, &lt;code&gt;tree&lt;/code&gt;, &lt;code&gt;commit&lt;/code&gt;, or &lt;code&gt;tag&lt;/code&gt;.</source>
          <target state="translated">Indica que se requiere un tipo de objeto. Actualmente uno de: &lt;code&gt;blob&lt;/code&gt; , &lt;code&gt;tree&lt;/code&gt; , &lt;code&gt;commit&lt;/code&gt; o &lt;code&gt;tag&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="db4dbaff6f210d92fcd8a0947f8ffe2ad6166cf6" translate="yes" xml:space="preserve">
          <source>Indicates the object name for any type of object.</source>
          <target state="translated">Indica el nombre del objeto para cualquier tipo de objeto.</target>
        </trans-unit>
        <trans-unit id="c66f56b69efd11f38dd2949f22030f51d42bccb8" translate="yes" xml:space="preserve">
          <source>Individual developer (participant)</source>
          <target state="translated">Desarrollador individual (participante)</target>
        </trans-unit>
        <trans-unit id="dc704b04bf6fc4b099b66d2f7d86d56e0d061d7a" translate="yes" xml:space="preserve">
          <source>Individual developer (standalone)</source>
          <target state="translated">Desarrollador individual (autónomo)</target>
        </trans-unit>
        <trans-unit id="a964b0aa320ab2176eba7cb0319b97ea34b340ac" translate="yes" xml:space="preserve">
          <source>Individually replay all rebased commits instead of fast-forwarding over the unchanged ones. This ensures that the entire history of the rebased branch is composed of new commits.</source>
          <target state="translated">Reproducir individualmente todos los compromisos de la base en lugar de avanzar rápidamente sobre los que no se han cambiado.Esto asegura que toda la historia de la rama de la base se compone de nuevas confirmaciones.</target>
        </trans-unit>
        <trans-unit id="0eb5ed506e4923c28d7f4a8aa69efe99b3ad75d1" translate="yes" xml:space="preserve">
          <source>Information</source>
          <target state="translated">Information</target>
        </trans-unit>
        <trans-unit id="9bceb94c72e397fee5b7ad78b8c9312ee6319e43" translate="yes" xml:space="preserve">
          <source>Information about what is to be pushed is provided on the hook&amp;rsquo;s standard input with lines of the form:</source>
          <target state="translated">La informaci&amp;oacute;n sobre lo que se va a insertar se proporciona en la entrada est&amp;aacute;ndar del gancho con l&amp;iacute;neas de la forma:</target>
        </trans-unit>
        <trans-unit id="43d35f7b76c469225469fd7a04662a08053d1e63" translate="yes" xml:space="preserve">
          <source>Initial client request</source>
          <target state="translated">La solicitud inicial del cliente</target>
        </trans-unit>
        <trans-unit id="68fa16ffd48f366e4fa8d57fea78ff03fcab0191" translate="yes" xml:space="preserve">
          <source>Initialization</source>
          <target state="translated">Initialization</target>
        </trans-unit>
        <trans-unit id="1b499097655f7a7af4711e162d7e54be3deca803" translate="yes" xml:space="preserve">
          <source>Initialization happens in &lt;code&gt;main()&lt;/code&gt;. Behind the scenes, an &lt;code&gt;atexit&lt;/code&gt; and &lt;code&gt;signal&lt;/code&gt; handler are registered.</source>
          <target state="translated">La inicializaci&amp;oacute;n ocurre en &lt;code&gt;main()&lt;/code&gt; . Detr&amp;aacute;s de escena, se registra un &lt;code&gt;atexit&lt;/code&gt; y un manejador de &lt;code&gt;signal&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9ae1b6d002181530c62e52f42bb8d5d197750e5d" translate="yes" xml:space="preserve">
          <source>Initialize Git config values so any scheduled maintenance will start running on this repository. This adds the repository to the &lt;code&gt;maintenance.repo&lt;/code&gt; config variable in the current user&amp;rsquo;s global config and enables some recommended configuration values for &lt;code&gt;maintenance.&amp;lt;task&amp;gt;.schedule&lt;/code&gt;. The tasks that are enabled are safe for running in the background without disrupting foreground processes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42e32f1c6a8cf663f45361425590d312db136ea3" translate="yes" xml:space="preserve">
          <source>Initialize and modify the sparse-checkout</source>
          <target state="translated">Inicie y modifique la caja de ahorros...</target>
        </trans-unit>
        <trans-unit id="5be83bd5256f93987e394207f3c5233baf2d713e" translate="yes" xml:space="preserve">
          <source>Initialize and modify the sparse-checkout configuration, which reduces the checkout to a set of paths given by a list of patterns.</source>
          <target state="translated">Inicializar y modificar la configuración de la caja,que reduce la caja a un conjunto de rutas dadas por una lista de patrones.</target>
        </trans-unit>
        <trans-unit id="825b58a6f65001fb659dd3ff519bf4df985a29aa" translate="yes" xml:space="preserve">
          <source>Initialize the sparse-checkout file so the working directory starts with only the files in the root of the repository. The sparse-checkout file can be modified to grow the working directory as needed.</source>
          <target state="translated">Inicializar el archivo de &quot;sparse-checkout&quot; para que el directorio de trabajo empiece sólo con los archivos de la raíz del repositorio.El archivo sparse-checkout puede ser modificado para hacer crecer el directorio de trabajo según sea necesario.</target>
        </trans-unit>
        <trans-unit id="9e0eca47ea83eb468f0ac7fe2e029fd23bbe773e" translate="yes" xml:space="preserve">
          <source>Initialize the submodules recorded in the index (which were added and committed elsewhere) by setting &lt;code&gt;submodule.$name.url&lt;/code&gt; in .git/config. It uses the same setting from &lt;code&gt;.gitmodules&lt;/code&gt; as a template. If the URL is relative, it will be resolved using the default remote. If there is no default remote, the current repository will be assumed to be upstream.</source>
          <target state="translated">Inicialice los subm&amp;oacute;dulos registrados en el &amp;iacute;ndice (que se agregaron y confirmaron en otro lugar) configurando &lt;code&gt;submodule.$name.url&lt;/code&gt; en .git / config. Utiliza la misma configuraci&amp;oacute;n de &lt;code&gt;.gitmodules&lt;/code&gt; como plantilla. Si la URL es relativa, se resolver&amp;aacute; utilizando el control remoto predeterminado. Si no hay un control remoto predeterminado, se asumir&amp;aacute; que el repositorio actual est&amp;aacute; en sentido ascendente.</target>
        </trans-unit>
        <trans-unit id="52f8f7589ec2fc901a83216cac5106872728a87d" translate="yes" xml:space="preserve">
          <source>Initialize, update or inspect submodules</source>
          <target state="translated">Iniciar,actualizar o inspeccionar los submódulos</target>
        </trans-unit>
        <trans-unit id="0d880d50dc463cd4220f01bcf54c48c1f2d57098" translate="yes" xml:space="preserve">
          <source>Initializes an empty Git repository with additional metadata directories for &lt;code&gt;git svn&lt;/code&gt;. The Subversion URL may be specified as a command-line argument, or as full URL arguments to -T/-t/-b. Optionally, the target directory to operate on can be specified as a second argument. Normally this command initializes the current directory.</source>
          <target state="translated">Inicializa un repositorio de Git vac&amp;iacute;o con directorios de metadatos adicionales para &lt;code&gt;git svn&lt;/code&gt; . La URL de Subversion se puede especificar como un argumento de l&amp;iacute;nea de comandos o como argumentos de URL completos para -T / -t / -b. Opcionalmente, el directorio de destino en el que operar se puede especificar como segundo argumento. Normalmente, este comando inicializa el directorio actual.</target>
        </trans-unit>
        <trans-unit id="01c2c8357a87e8a6148f1dd9a9c884aae5e4de53" translate="yes" xml:space="preserve">
          <source>Initially ignore any whitespace in the move detection, then group the moved code blocks only into a block if the change in whitespace is the same per line. This is incompatible with the other modes.</source>
          <target state="translated">Inicialmente ignora cualquier espacio blanco en la detección de movimiento,luego agrupa los bloques de código movidos sólo en un bloque si el cambio en el espacio blanco es el mismo por línea.Esto es incompatible con los otros modos.</target>
        </trans-unit>
        <trans-unit id="229b7991e581f774e065f13c78dfa8719c8c393f" translate="yes" xml:space="preserve">
          <source>Inline data format</source>
          <target state="translated">Formato de datos en línea</target>
        </trans-unit>
        <trans-unit id="7c7935726f449ea7185a4fe42a9ddf2d1c53a2e4" translate="yes" xml:space="preserve">
          <source>Input Format</source>
          <target state="translated">Formato de entrada</target>
        </trans-unit>
        <trans-unit id="1b77a7f4983f9ce773f466c761a7f6e9771bf925" translate="yes" xml:space="preserve">
          <source>Input format</source>
          <target state="translated">Formato de entrada</target>
        </trans-unit>
        <trans-unit id="789cc08a97020bab893e17ca6133192d1f9f1dac" translate="yes" xml:space="preserve">
          <source>Input is of the &quot;mboxrd&quot; format and &quot;^&amp;gt;+From &quot; line escaping is reversed.</source>
          <target state="translated">La entrada tiene el formato &quot;mboxrd&quot; y el escape de l&amp;iacute;nea &quot;^&amp;gt; + From&quot; se invierte.</target>
        </trans-unit>
        <trans-unit id="26242e7bd97bd8eebf44f9f25f143aed3a9bdc4d" translate="yes" xml:space="preserve">
          <source>Input/output format</source>
          <target state="translated">Formato de entrada/salida</target>
        </trans-unit>
        <trans-unit id="4038e1c7ebc07b210c228498bd5816f54233b768" translate="yes" xml:space="preserve">
          <source>Insert &lt;code&gt;progress&lt;/code&gt; statements every &amp;lt;n&amp;gt; objects, to be shown by &lt;code&gt;git fast-import&lt;/code&gt; during import.</source>
          <target state="translated">Inserte declaraciones de &lt;code&gt;progress&lt;/code&gt; cada &amp;lt;n&amp;gt; objetos, para que &lt;code&gt;git fast-import&lt;/code&gt; las muestre durante la importaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="39c559793b49987eea00aba844e216707b6e7dcc" translate="yes" xml:space="preserve">
          <source>Insert custom links to the action bar of all project pages. This allows you to link to third-party scripts integrating into gitweb.</source>
          <target state="translated">Insertar enlaces personalizados a la barra de acción de todas las páginas del proyecto.Esto te permite enlazar con scripts de terceros que se integran en gitweb.</target>
        </trans-unit>
        <trans-unit id="ce8fd02283c353dc3cacd2d3e6c1eab64a1913a3" translate="yes" xml:space="preserve">
          <source>Inside double quotes, double quote &lt;code&gt;&quot;&lt;/code&gt; and backslash &lt;code&gt;\&lt;/code&gt; characters must be escaped: use &lt;code&gt;\&quot;&lt;/code&gt; for &lt;code&gt;&quot;&lt;/code&gt; and &lt;code&gt;\\&lt;/code&gt; for &lt;code&gt;\&lt;/code&gt;.</source>
          <target state="translated">Dentro de las comillas dobles, las comillas dobles &lt;code&gt;&quot;&lt;/code&gt; y la barra invertida &lt;code&gt;\&lt;/code&gt; caracteres deben tener un escape: use &lt;code&gt;\&quot;&lt;/code&gt; para &lt;code&gt;&quot;&lt;/code&gt; y &lt;code&gt;\\&lt;/code&gt; para &lt;code&gt;\&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ab67c68674bb4a9f1f690fac98c95aa9c2e1e750" translate="yes" xml:space="preserve">
          <source>Inspecting changes</source>
          <target state="translated">Inspeccionando los cambios</target>
        </trans-unit>
        <trans-unit id="ecf21e44dd8609734c0bc387cabc376ab485d9f8" translate="yes" xml:space="preserve">
          <source>Inspection and Comparison</source>
          <target state="translated">Inspección y comparación</target>
        </trans-unit>
        <trans-unit id="e0c3f2780ee983978068137722cf2d423843d21f" translate="yes" xml:space="preserve">
          <source>Inspects, updates and manages submodules.</source>
          <target state="translated">Inspecciona,actualiza y administra los submódulos.</target>
        </trans-unit>
        <trans-unit id="d9fb6eb12bbc11fdad6f18ee5bfa79361ddad72b" translate="yes" xml:space="preserve">
          <source>Install the Toggle Word Wrap add-on that is available from &lt;a href=&quot;https://addons.mozilla.org/thunderbird/addon/toggle-word-wrap/&quot;&gt;https://addons.mozilla.org/thunderbird/addon/toggle-word-wrap/&lt;/a&gt; It adds a menu entry &quot;Enable Word Wrap&quot; in the composer&amp;rsquo;s &quot;Options&quot; menu that you can tick off. Now you can compose the message as you otherwise do (cut + paste, &lt;code&gt;git format-patch&lt;/code&gt; | &lt;code&gt;git imap-send&lt;/code&gt;, etc), but you have to insert line breaks manually in any text that you type.</source>
          <target state="translated">Instale el complemento Toggle Word Wrap que est&amp;aacute; disponible en &lt;a href=&quot;https://addons.mozilla.org/thunderbird/addon/toggle-word-wrap/&quot;&gt;https://addons.mozilla.org/thunderbird/addon/toggle-word-wrap/&lt;/a&gt; Agrega una entrada de men&amp;uacute; &quot;Habilitar ajuste de palabras&quot; en el men&amp;uacute; &quot;Opciones&quot; del compositor que puede marcar. Ahora puede redactar el mensaje como lo har&amp;iacute;a (cortar + pegar, &lt;code&gt;git format-patch&lt;/code&gt; | &lt;code&gt;git imap-send&lt;/code&gt; , etc.), pero debe insertar saltos de l&amp;iacute;nea manualmente en cualquier texto que escriba.</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">Installation</target>
        </trans-unit>
        <trans-unit id="7fad939655efbad1612ce7f4867922684d56913b" translate="yes" xml:space="preserve">
          <source>Instantly browse your working repository in gitweb</source>
          <target state="translated">Navega instantáneamente por tu repositorio de trabajo en gitweb</target>
        </trans-unit>
        <trans-unit id="53c902fb07156c6117155b6a0b0738c7ca12a6bf" translate="yes" xml:space="preserve">
          <source>Instead of &lt;code&gt;git bisect visualize&lt;/code&gt; and then &lt;code&gt;git reset --hard
fb47ddb2db&lt;/code&gt;, you might just want to tell Git that you want to skip the current commit:</source>
          <target state="translated">En lugar de &lt;code&gt;git bisect visualize&lt;/code&gt; y luego &lt;code&gt;git reset --hard fb47ddb2db&lt;/code&gt; , es posible que solo desee decirle a Git que desea omitir la confirmaci&amp;oacute;n actual:</target>
        </trans-unit>
        <trans-unit id="483617d942bddc8b6c044cd054e06089960e1981" translate="yes" xml:space="preserve">
          <source>Instead of a commit id on the command line (which is not expected in this case), &lt;code&gt;git http-fetch&lt;/code&gt; expects lines on stdin in the format</source>
          <target state="translated">En lugar de una identificaci&amp;oacute;n de confirmaci&amp;oacute;n en la l&amp;iacute;nea de comando (que no se espera en este caso), &lt;code&gt;git http-fetch&lt;/code&gt; espera l&amp;iacute;neas en stdin en el formato</target>
        </trans-unit>
        <trans-unit id="78b5184ca479cbe7999ac4fee6c0be2a7fd5b77a" translate="yes" xml:space="preserve">
          <source>Instead of a commit id on the command line (which is not expected in this case), &lt;code&gt;git http-fetch&lt;/code&gt; fetches the packfile directly at the given URL and uses index-pack to generate corresponding .idx and .keep files. The hash is used to determine the name of the temporary file and is arbitrary. The output of index-pack is printed to stdout.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="978fdd37a8d1d967862cc9e916d011571d6998cf" translate="yes" xml:space="preserve">
          <source>Instead of an absolute timestamp relative timestamps work as well, e.g. 2.weeks.ago is valid to address anything older than 2 weeks.</source>
          <target state="translated">En lugar de un sello de tiempo absoluto,los sellos de tiempo relativos funcionan también,por ejemplo,2.semanas.atrás es válido para abordar cualquier cosa mayor de 2 semanas.</target>
        </trans-unit>
        <trans-unit id="ad6345e758058b67dc8e001b3a11fe48b9b5f52b" translate="yes" xml:space="preserve">
          <source>Instead of applying the patch, output a condensed summary of information obtained from git diff extended headers, such as creations, renames and mode changes. Turns off &quot;apply&quot;.</source>
          <target state="translated">En lugar de aplicar el parche,se obtiene un resumen condensado de la información obtenida de git diff extended headers,como creaciones,renombramientos y cambios de modo.Desactiva la opción &quot;aplicar&quot;.</target>
        </trans-unit>
        <trans-unit id="5429abc21a21a789987424e6c0ab7612e06a85eb" translate="yes" xml:space="preserve">
          <source>Instead of applying the patch, output diffstat for the input. Turns off &quot;apply&quot;.</source>
          <target state="translated">En lugar de aplicar el parche,el diffstat de salida para la entrada.Desactiva la opción &quot;aplicar&quot;.</target>
        </trans-unit>
        <trans-unit id="881bf52883e6605d5234b3f22aaf3b7b4afc6968" translate="yes" xml:space="preserve">
          <source>Instead of applying the patch, see if the patch is applicable to the current working tree and/or the index file and detects errors. Turns off &quot;apply&quot;.</source>
          <target state="translated">En lugar de aplicar el parche,vea si el parche es aplicable al árbol de trabajo actual y/o al archivo de índice y detecta errores.Desactiva la opción &quot;aplicar&quot;.</target>
        </trans-unit>
        <trans-unit id="6e355f85b13671d925fde0c740a0dbae977bb0bc" translate="yes" xml:space="preserve">
          <source>Instead of basing a new branch on current HEAD (the default), use:</source>
          <target state="translated">En lugar de basar una nueva rama en la actual HEAD (la predeterminada),use:</target>
        </trans-unit>
        <trans-unit id="54f9cd044bb973ffe696d82cb4d71b8b1fd61c38" translate="yes" xml:space="preserve">
          <source>Instead of calling cvsps, read the provided cvsps output file. Useful for debugging or when cvsps is being handled outside cvsimport.</source>
          <target state="translated">En lugar de llamar a los cvsps,lea el archivo de salida de los cvsps proporcionados.Es útil para la depuración o cuando los cvsps se manejan fuera de cvsimport.</target>
        </trans-unit>
        <trans-unit id="bb5ec3e62f50f37c713576e81a7468472cf1721e" translate="yes" xml:space="preserve">
          <source>Instead of checking out unmerged entries, copy out the files from named stage. &amp;lt;number&amp;gt; must be between 1 and 3. Note: --stage=all automatically implies --temp.</source>
          <target state="translated">En lugar de verificar las entradas no fusionadas, copie los archivos de la etapa con nombre. &amp;lt;n&amp;uacute;mero&amp;gt; debe estar entre 1 y 3. Nota: --stage = all implica autom&amp;aacute;ticamente --temp.</target>
        </trans-unit>
        <trans-unit id="15d18d5e837d77d2ad93145197274038afcfa944" translate="yes" xml:space="preserve">
          <source>Instead of choosing a nearby commit by yourself, you can ask Git to do it for you by issuing the command:</source>
          <target state="translated">En lugar de elegir un compromiso cercano por ti mismo,puedes pedirle a Git que lo haga por ti dando la orden:</target>
        </trans-unit>
        <trans-unit id="69c915ad90f1fd98f69ec0b162209ef45c502e6d" translate="yes" xml:space="preserve">
          <source>Instead of comparing &amp;lt;tree-ish&amp;gt; directly, use the merge base between &amp;lt;tree-ish&amp;gt; and HEAD instead. &amp;lt;tree-ish&amp;gt; must be a commit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cac415dfd926403d29b00e04771f706952c9bf29" translate="yes" xml:space="preserve">
          <source>Instead of comparing the &amp;lt;tree-ish&amp;gt;s directly, use the merge base between the two &amp;lt;tree-ish&amp;gt;s as the &quot;before&quot; side. There must be two &amp;lt;tree-ish&amp;gt;s given and they must both be commits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="071c6c805d6df82b0ae0937a6e3d6e7d94979975" translate="yes" xml:space="preserve">
          <source>Instead of comparing with the tip of &quot;test&quot; branch, compare with the tip of the current branch, but limit the comparison to the file &quot;test&quot;.</source>
          <target state="translated">En lugar de comparar con la punta de la rama de &quot;prueba&quot;,compara con la punta de la rama actual,pero limita la comparación al archivo &quot;prueba&quot;.</target>
        </trans-unit>
        <trans-unit id="17207c6e7e5006477485c406ccec2ab95d9a0907" translate="yes" xml:space="preserve">
          <source>Instead of considering only the 10 most recent tags as candidates to describe the input commit-ish consider up to &amp;lt;n&amp;gt; candidates. Increasing &amp;lt;n&amp;gt; above 10 will take slightly longer but may produce a more accurate result. An &amp;lt;n&amp;gt; of 0 will cause only exact matches to be output.</source>
          <target state="translated">En lugar de considerar solo las 10 etiquetas m&amp;aacute;s recientes como candidatas para describir la confirmaci&amp;oacute;n de entrada, considere hasta &amp;lt;n&amp;gt; candidatos. Aumentar &amp;lt;n&amp;gt; por encima de 10 llevar&amp;aacute; un poco m&amp;aacute;s de tiempo, pero puede producir un resultado m&amp;aacute;s preciso. Un &amp;lt;n&amp;gt; de 0 har&amp;aacute; que solo se generen coincidencias exactas.</target>
        </trans-unit>
        <trans-unit id="3d51a8a573b601f04a9b432f10be7818f6056cab" translate="yes" xml:space="preserve">
          <source>Instead of copying the files to the working directory write the content to temporary files. The temporary name associations will be written to stdout.</source>
          <target state="translated">En lugar de copiar los archivos en el directorio de trabajo,escriba el contenido en archivos temporales.Las asociaciones de nombres temporales se escribirán en stdout.</target>
        </trans-unit>
        <trans-unit id="aece37f2a7e1b433117b2533e4c10ff1af967895" translate="yes" xml:space="preserve">
          <source>Instead of explicitly specifying which refs to update, update all heads that locally exist.</source>
          <target state="translated">En lugar de especificar explícitamente cuáles son las referencias a actualizar,actualizar todas las cabezas que existen localmente.</target>
        </trans-unit>
        <trans-unit id="c9dd00560176cb59ca6811a38f98f0a00cea59a2" translate="yes" xml:space="preserve">
          <source>Instead of finding the tag that predates the commit, find the tag that comes after the commit, and thus contains it. Automatically implies --tags.</source>
          <target state="translated">En lugar de encontrar la etiqueta que precede a la confirmación,encuentra la etiqueta que viene después de la confirmación,y por lo tanto la contiene.Automáticamente implica --tags.</target>
        </trans-unit>
        <trans-unit id="c3bcf62d531bd115333abb263736c08fc67412f8" translate="yes" xml:space="preserve">
          <source>Instead of having gitweb find repositories by scanning filesystem starting from $projectroot, you can provide a pre-generated list of visible projects by setting &lt;code&gt;$projects_list&lt;/code&gt; to point to a plain text file with a list of projects (with some additional info).</source>
          <target state="translated">En lugar de hacer que gitweb encuentre repositorios escaneando el sistema de archivos a partir de $ projectroot, puede proporcionar una lista pregenerada de proyectos visibles configurando &lt;code&gt;$projects_list&lt;/code&gt; para que apunte a un archivo de texto sin formato con una lista de proyectos (con informaci&amp;oacute;n adicional).</target>
        </trans-unit>
        <trans-unit id="b8a426e0ceafe99f9ee69973b04f605e2dee7cb4" translate="yes" xml:space="preserve">
          <source>Instead of incrementally packing the unpacked objects, pack everything referenced into a single pack. Especially useful when packing a repository that is used for private development. Use with &lt;code&gt;-d&lt;/code&gt;. This will clean up the objects that &lt;code&gt;git prune&lt;/code&gt; leaves behind, but &lt;code&gt;git fsck --full --dangling&lt;/code&gt; shows as dangling.</source>
          <target state="translated">En lugar de empaquetar gradualmente los objetos desempaquetados, empaquete todo lo referenciado en un solo paquete. Especialmente &amp;uacute;til cuando se empaqueta un repositorio que se usa para desarrollo privado. Usar con &lt;code&gt;-d&lt;/code&gt; . Esto va a limpiar los objetos que &lt;code&gt;git prune&lt;/code&gt; hojas detr&amp;aacute;s, pero &lt;code&gt;git fsck --full --dangling&lt;/code&gt; espect&amp;aacute;culos como colgando.</target>
        </trans-unit>
        <trans-unit id="f1ffab5966e331d53c3cb8a3d86f241f936c7bef" translate="yes" xml:space="preserve">
          <source>Instead of initializing the repository as a directory to either &lt;code&gt;$GIT_DIR&lt;/code&gt; or &lt;code&gt;./.git/&lt;/code&gt;, create a text file there containing the path to the actual repository. This file acts as filesystem-agnostic Git symbolic link to the repository.</source>
          <target state="translated">En lugar de inicializar el repositorio como un directorio en &lt;code&gt;$GIT_DIR&lt;/code&gt; o &lt;code&gt;./.git/&lt;/code&gt; , cree un archivo de texto all&amp;iacute; que contenga la ruta al repositorio real. Este archivo act&amp;uacute;a como un enlace simb&amp;oacute;lico de Git independiente del sistema de archivos al repositorio.</target>
        </trans-unit>
        <trans-unit id="f0ef88b9adcd939e8a3f3a231e5d0c4737f1545c" translate="yes" xml:space="preserve">
          <source>Instead of leaving conflicts in the file, resolve conflicts favouring our (or their or both) side of the lines.</source>
          <target state="translated">En lugar de dejar los conflictos en el expediente,resuelva los conflictos favoreciendo nuestro (o su o ambos)lado de las líneas.</target>
        </trans-unit>
        <trans-unit id="ca8be3d7e71d110990923e82a424a61c61fcfea3" translate="yes" xml:space="preserve">
          <source>Instead of making a tar archive from the local repository, retrieve a tar archive from a remote repository. Note that the remote repository may place restrictions on which sha1 expressions may be allowed in &lt;code&gt;&amp;lt;tree-ish&amp;gt;&lt;/code&gt;. See &lt;a href=&quot;git-upload-archive&quot;&gt;git-upload-archive[1]&lt;/a&gt; for details.</source>
          <target state="translated">En lugar de crear un archivo tar desde el repositorio local, recupere un archivo tar desde un repositorio remoto. Tenga en cuenta que el repositorio remoto puede imponer restricciones sobre las expresiones sha1 que se pueden permitir en &lt;code&gt;&amp;lt;tree-ish&amp;gt;&lt;/code&gt; . Consulte &lt;a href=&quot;git-upload-archive&quot;&gt;git-upload-archive [1]&lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="7f9313c2b37d59bfbfa07ff3336c61ac5f242846" translate="yes" xml:space="preserve">
          <source>Instead of multiple service names, multiple commands will be supported by a single service</source>
          <target state="translated">En lugar de múltiples nombres de servicio,múltiples comandos serán soportados por un solo servicio</target>
        </trans-unit>
        <trans-unit id="9913e3351ae1177f0328b10cfa41d1a78100d839" translate="yes" xml:space="preserve">
          <source>Instead of naming each ref to push, specifies that all refs under &lt;code&gt;refs/&lt;/code&gt; (which includes but is not limited to &lt;code&gt;refs/heads/&lt;/code&gt;, &lt;code&gt;refs/remotes/&lt;/code&gt;, and &lt;code&gt;refs/tags/&lt;/code&gt;) be mirrored to the remote repository. Newly created local refs will be pushed to the remote end, locally updated refs will be force updated on the remote end, and deleted refs will be removed from the remote end. This is the default if the configuration option &lt;code&gt;remote.&amp;lt;remote&amp;gt;.mirror&lt;/code&gt; is set.</source>
          <target state="translated">En lugar de nombrar cada referencia para empujar, especifica que todas las referencias bajo &lt;code&gt;refs/&lt;/code&gt; (que incluye pero no se limita a &lt;code&gt;refs/heads/&lt;/code&gt; , &lt;code&gt;refs/remotes/&lt;/code&gt; y &lt;code&gt;refs/tags/&lt;/code&gt; ) se reflejen en el repositorio remoto. Las referencias locales reci&amp;eacute;n creadas se enviar&amp;aacute;n al extremo remoto, las referencias actualizadas localmente se actualizar&amp;aacute;n a la fuerza en el extremo remoto y las referencias eliminadas se eliminar&amp;aacute;n del extremo remoto. Este es el valor predeterminado si se establece la opci&amp;oacute;n de configuraci&amp;oacute;n &lt;code&gt;remote.&amp;lt;remote&amp;gt;.mirror&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9634150ab7e71bf3eb3f2b25ec8ede96c11d4e06" translate="yes" xml:space="preserve">
          <source>Instead of naming the commits using the path to reach them from heads (e.g. &quot;master~2&quot; to mean the grandparent of &quot;master&quot;), name them with the unique prefix of their object names.</source>
          <target state="translated">En lugar de nombrar las confirmaciones usando el camino para llegar a ellas desde las cabezas (por ejemplo,&quot;master~2&quot; para significar el abuelo de &quot;master&quot;),nómbrelas con el prefijo único de sus nombres de objeto.</target>
        </trans-unit>
        <trans-unit id="17b0b1c8040238e6478f5b3afd0b8cbc3b08f080" translate="yes" xml:space="preserve">
          <source>Instead of placing the cloned repository where it is supposed to be, place the cloned repository at the specified directory, then make a filesystem-agnostic Git symbolic link to there. The result is Git repository can be separated from working tree.</source>
          <target state="translated">En lugar de colocar el repositorio clonado donde se supone que debe estar,coloque el repositorio clonado en el directorio especificado,y luego haga un enlace simbólico de Git agnóstico del sistema de archivos a ese lugar.El resultado es que el repositorio Git puede ser separado del árbol de trabajo.</target>
        </trans-unit>
        <trans-unit id="22fb130092ca941fcb14aff3909ae71b595afba3" translate="yes" xml:space="preserve">
          <source>Instead of pointing the newly created HEAD to the branch pointed to by the cloned repository&amp;rsquo;s HEAD, point to &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; branch instead. In a non-bare repository, this is the branch that will be checked out. &lt;code&gt;--branch&lt;/code&gt; can also take tags and detaches the HEAD at that commit in the resulting repository.</source>
          <target state="translated">En lugar de apuntar el HEAD reci&amp;eacute;n creado a la rama a la que apunta el HEAD del repositorio clonado, apunte a la rama &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; . En un repositorio no desnudo, esta es la rama que se comprobar&amp;aacute;. &lt;code&gt;--branch&lt;/code&gt; tambi&amp;eacute;n puede tomar etiquetas y separar HEAD en esa confirmaci&amp;oacute;n en el repositorio resultante.</target>
        </trans-unit>
        <trans-unit id="33ebce829b735e00e4c7bea8b4f644ee8c315aa6" translate="yes" xml:space="preserve">
          <source>Instead of printing both the SHA-1 and the name, print only the name. If given with --tags the usual tag prefix of &quot;tags/&quot; is also omitted from the name, matching the output of &lt;code&gt;git-describe&lt;/code&gt; more closely.</source>
          <target state="translated">En lugar de imprimir tanto el SHA-1 como el nombre, imprima solo el nombre. Si se da con --tags, el prefijo de etiqueta habitual de &quot;tags /&quot; tambi&amp;eacute;n se omite del nombre, coincidiendo con la salida de &lt;code&gt;git-describe&lt;/code&gt; m&amp;aacute;s de cerca.</target>
        </trans-unit>
        <trans-unit id="064cb6e81b93b30bcf346d10dc97336e618d6fae" translate="yes" xml:space="preserve">
          <source>Instead of printing merge bases, print a minimal subset of the supplied commits with the same ancestors. In other words, among the commits given, list those which cannot be reached from any other. This mimics the behavior of &lt;code&gt;git show-branch --independent&lt;/code&gt;.</source>
          <target state="translated">En lugar de imprimir bases de combinaci&amp;oacute;n, imprima un subconjunto m&amp;iacute;nimo de las confirmaciones proporcionadas con los mismos antepasados. En otras palabras, entre las confirmaciones dadas, enumere aquellas a las que no se puede acceder desde ninguna otra. Esto imita el comportamiento de &lt;code&gt;git show-branch --independent&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="323f56e14b223cf1dac7d6a09fb1d2d15675463d" translate="yes" xml:space="preserve">
          <source>Instead of printing the paths that are excluded, for each path that matches an exclude pattern, print the exclude pattern together with the path. (Matching an exclude pattern usually means the path is excluded, but if the pattern begins with &lt;code&gt;!&lt;/code&gt; then it is a negated pattern and matching it means the path is NOT excluded.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a77a1e8325cae4bfdfe406c89eaae3fe4ca07d52" translate="yes" xml:space="preserve">
          <source>Instead of reading a list of objects on stdin, perform the requested batch operation on all objects in the repository and any alternate object stores (not just reachable objects). Requires &lt;code&gt;--batch&lt;/code&gt; or &lt;code&gt;--batch-check&lt;/code&gt; be specified. Note that the objects are visited in order sorted by their hashes.</source>
          <target state="translated">En lugar de leer una lista de objetos en stdin, realice la operaci&amp;oacute;n por lotes solicitada en todos los objetos del repositorio y cualquier almac&amp;eacute;n de objetos alternativo (no solo los objetos accesibles). Requiere que se &lt;code&gt;--batch&lt;/code&gt; o &lt;code&gt;--batch-check&lt;/code&gt; . Tenga en cuenta que los objetos se visitan en orden ordenado por sus valores hash.</target>
        </trans-unit>
        <trans-unit id="d4a14000f7e28706a0e6c2e4729bb02543a4d281" translate="yes" xml:space="preserve">
          <source>Instead of reading tree object(s) into the index, just empty it.</source>
          <target state="translated">En lugar de leer el objeto o los objetos del árbol en el índice,simplemente vacíalo.</target>
        </trans-unit>
        <trans-unit id="5828d05fd5c0a35f4392daf67536f9a77ece2b90" translate="yes" xml:space="preserve">
          <source>Instead of running &lt;code&gt;git repack&lt;/code&gt; you can also run &lt;code&gt;git gc
--aggressive&lt;/code&gt;, which will also optimize other things after an import (e.g. pack loose refs). As noted in the &quot;AGGRESSIVE&quot; section in &lt;a href=&quot;git-gc&quot;&gt;git-gc[1]&lt;/a&gt; the &lt;code&gt;--aggressive&lt;/code&gt; option will find new deltas with the &lt;code&gt;-f&lt;/code&gt; option to &lt;a href=&quot;git-repack&quot;&gt;git-repack[1]&lt;/a&gt;. For the reasons elaborated on above using &lt;code&gt;--aggressive&lt;/code&gt; after a fast-import is one of the few cases where it&amp;rsquo;s known to be worthwhile.</source>
          <target state="translated">En lugar de ejecutar &lt;code&gt;git repack&lt;/code&gt; , tambi&amp;eacute;n puede ejecutar &lt;code&gt;git gc --aggressive&lt;/code&gt; , que tambi&amp;eacute;n optimizar&amp;aacute; otras cosas despu&amp;eacute;s de una importaci&amp;oacute;n (por ejemplo, empaquetar referencias sueltas). Como se indica en la secci&amp;oacute;n &quot;AGRESIVO&quot; en &lt;a href=&quot;git-gc&quot;&gt;git-gc [1],&lt;/a&gt; la opci&amp;oacute;n &lt;code&gt;--aggressive&lt;/code&gt; encontrar&amp;aacute; nuevos deltas con la opci&amp;oacute;n &lt;code&gt;-f&lt;/code&gt; para &lt;a href=&quot;git-repack&quot;&gt;git-repack [1]&lt;/a&gt; . Por las razones explicadas anteriormente, el uso de &lt;code&gt;--aggressive&lt;/code&gt; despu&amp;eacute;s de una importaci&amp;oacute;n r&amp;aacute;pida es uno de los pocos casos en los que se sabe que vale la pena.</target>
        </trans-unit>
        <trans-unit id="27d7e1d82cdbf4a022b1041bc3a4b5c02db03622" translate="yes" xml:space="preserve">
          <source>Instead of running one of the known diff tools, &lt;code&gt;git difftool&lt;/code&gt; can be customized to run an alternative program by specifying the command line to invoke in a configuration variable &lt;code&gt;difftool.&amp;lt;tool&amp;gt;.cmd&lt;/code&gt;.</source>
          <target state="translated">En lugar de ejecutar una de las herramientas de diferencias conocidas, &lt;code&gt;git difftool&lt;/code&gt; se puede personalizar para ejecutar un programa alternativo especificando la l&amp;iacute;nea de comando a invocar en una variable de configuraci&amp;oacute;n &lt;code&gt;difftool.&amp;lt;tool&amp;gt;.cmd&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0a6ec50c9a1e350ef9a3f4f762c317cd2d6e8233" translate="yes" xml:space="preserve">
          <source>Instead of running one of the known merge tool programs, &lt;code&gt;git mergetool&lt;/code&gt; can be customized to run an alternative program by specifying the command line to invoke in a configuration variable &lt;code&gt;mergetool.&amp;lt;tool&amp;gt;.cmd&lt;/code&gt;.</source>
          <target state="translated">En lugar de ejecutar uno de los programas de herramientas de combinaci&amp;oacute;n conocidos, &lt;code&gt;git mergetool&lt;/code&gt; se puede personalizar para ejecutar un programa alternativo especificando la l&amp;iacute;nea de comando a invocar en una variable de configuraci&amp;oacute;n &lt;code&gt;mergetool.&amp;lt;tool&amp;gt;.cmd&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="09dffc4d1650e5ccccc05b0bf19a3e3e59eb7116" translate="yes" xml:space="preserve">
          <source>Instead of searching tracked files in the working tree, search blobs in the given trees.</source>
          <target state="translated">En lugar de buscar archivos rastreados en el árbol de trabajo,busque las manchas en los árboles dados.</target>
        </trans-unit>
        <trans-unit id="31ae83b44368ffd8feca3b205d3db8ea7d6a3c5c" translate="yes" xml:space="preserve">
          <source>Instead of searching tracked files in the working tree, search blobs registered in the index file.</source>
          <target state="translated">En lugar de buscar los archivos rastreados en el árbol de trabajo,busca las manchas registradas en el archivo de índice.</target>
        </trans-unit>
        <trans-unit id="55e6c9aa38dceb73a0632da59bc95f69bdfc3cb4" translate="yes" xml:space="preserve">
          <source>Instead of showing every matched line, show only the names of files that contain (or do not contain) matches. For better compatibility with &lt;code&gt;git diff&lt;/code&gt;, &lt;code&gt;--name-only&lt;/code&gt; is a synonym for &lt;code&gt;--files-with-matches&lt;/code&gt;.</source>
          <target state="translated">En lugar de mostrar todas las l&amp;iacute;neas coincidentes, muestre solo los nombres de los archivos que contienen (o no contienen) coincidencias. Para una mejor compatibilidad con &lt;code&gt;git diff&lt;/code&gt; , &lt;code&gt;--name-only&lt;/code&gt; es sin&amp;oacute;nimo de &lt;code&gt;--files-with-matches&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f1fdcf67f0afaa931922f6239ba4fdd53758ce0d" translate="yes" xml:space="preserve">
          <source>Instead of showing every matched line, show the number of lines that match.</source>
          <target state="translated">En lugar de mostrar cada línea coincidente,muestra el número de líneas que coinciden.</target>
        </trans-unit>
        <trans-unit id="9ddb49ffe2885e9ce52c33a63e80e23af2a075a9" translate="yes" xml:space="preserve">
          <source>Instead of showing the commit list, determine possible merge bases for the specified commits. All merge bases will be contained in all specified commits. This is different from how &lt;a href=&quot;git-merge-base&quot;&gt;git-merge-base[1]&lt;/a&gt; handles the case of three or more commits.</source>
          <target state="translated">En lugar de mostrar la lista de confirmaciones, determine las posibles bases de fusi&amp;oacute;n para las confirmaciones especificadas. Todas las bases de fusi&amp;oacute;n estar&amp;aacute;n incluidas en todas las confirmaciones especificadas. Esto es diferente de c&amp;oacute;mo &lt;a href=&quot;git-merge-base&quot;&gt;git-merge-base [1]&lt;/a&gt; maneja el caso de tres o m&amp;aacute;s confirmaciones.</target>
        </trans-unit>
        <trans-unit id="a8349eb4dd68e56b89f47b502f7a090d16d7f921" translate="yes" xml:space="preserve">
          <source>Instead of showing the full 40-byte hexadecimal commit object name, show a prefix that names the object uniquely. &quot;--abbrev=&amp;lt;n&amp;gt;&quot; (which also modifies diff output, if it is displayed) option can be used to specify the minimum length of the prefix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ba3d7561fe60e77ce239084badd1d1856e50d97" translate="yes" xml:space="preserve">
          <source>Instead of showing the full 40-byte hexadecimal commit object name, show only a partial prefix. Non default number of digits can be specified with &quot;--abbrev=&amp;lt;n&amp;gt;&quot; (which also modifies diff output, if it is displayed).</source>
          <target state="translated">En lugar de mostrar el nombre completo del objeto de confirmaci&amp;oacute;n hexadecimal de 40 bytes, muestre solo un prefijo parcial. Se puede especificar un n&amp;uacute;mero de d&amp;iacute;gitos no predeterminado con &quot;--abbrev = &amp;lt;n&amp;gt;&quot; (que tambi&amp;eacute;n modifica la salida de diferencias, si se muestra).</target>
        </trans-unit>
        <trans-unit id="7d6a3b8755cc865088fd97c8d79f6b68eb4292bc" translate="yes" xml:space="preserve">
          <source>Instead of showing the full 40-byte hexadecimal object lines, show only a partial prefix. Non default number of digits can be specified with --abbrev=&amp;lt;n&amp;gt;.</source>
          <target state="translated">En lugar de mostrar las l&amp;iacute;neas completas del objeto hexadecimal de 40 bytes, muestre solo un prefijo parcial. Se puede especificar un n&amp;uacute;mero de d&amp;iacute;gitos no predeterminado con --abbrev = &amp;lt;n&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="41bb60e5bd2f66611e158fbf7d65588b7e0bec0a" translate="yes" xml:space="preserve">
          <source>Instead of showing the full 40-byte hexadecimal object lines, show the shortest prefix that is at least &lt;code&gt;&amp;lt;n&amp;gt;&lt;/code&gt; hexdigits long that uniquely refers the object. Non default number of digits can be specified with --abbrev=&amp;lt;n&amp;gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58ecb5df7fcdb6c0e019f4aa574b567ad3276395" translate="yes" xml:space="preserve">
          <source>Instead of showing the full 40-byte hexadecimal object name in diff-raw format output and diff-tree header lines, show only a partial prefix. In diff-patch output format, &lt;code&gt;--full-index&lt;/code&gt; takes higher precedence, i.e. if &lt;code&gt;--full-index&lt;/code&gt; is specified, full blob names will be shown regardless of &lt;code&gt;--abbrev&lt;/code&gt;. Non default number of digits can be specified with &lt;code&gt;--abbrev=&amp;lt;n&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcd3315e868be633e341c6b1fc6b217d4459f224" translate="yes" xml:space="preserve">
          <source>Instead of showing the full 40-byte hexadecimal object name in diff-raw format output and diff-tree header lines, show only a partial prefix. This is independent of the &lt;code&gt;--full-index&lt;/code&gt; option above, which controls the diff-patch output format. Non default number of digits can be specified with &lt;code&gt;--abbrev=&amp;lt;n&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">En lugar de mostrar el nombre completo del objeto hexadecimal de 40 bytes en la salida en formato diff-raw y en las l&amp;iacute;neas de encabezado del &amp;aacute;rbol de diferencias, muestre solo un prefijo parcial. Esto es independiente de la opci&amp;oacute;n &lt;code&gt;--full-index&lt;/code&gt; anterior, que controla el formato de salida del parche de diferencias. Se puede especificar un n&amp;uacute;mero de d&amp;iacute;gitos no predeterminado con &lt;code&gt;--abbrev=&amp;lt;n&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="05b537007c39aa598d1319a3985738adfc8b433d" translate="yes" xml:space="preserve">
          <source>Instead of showing the full 40-byte hexadecimal object name in diff-raw format output and diff-tree header lines, show the shortest prefix that is at least &lt;code&gt;&amp;lt;n&amp;gt;&lt;/code&gt; hexdigits long that uniquely refers the object. In diff-patch output format, &lt;code&gt;--full-index&lt;/code&gt; takes higher precedence, i.e. if &lt;code&gt;--full-index&lt;/code&gt; is specified, full blob names will be shown regardless of &lt;code&gt;--abbrev&lt;/code&gt;. Non default number of digits can be specified with &lt;code&gt;--abbrev=&amp;lt;n&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ac504d3062e8b5bad74846fd627b7807bedc4f2" translate="yes" xml:space="preserve">
          <source>Instead of showing the path names relative to the current working directory, show the full path names.</source>
          <target state="translated">En lugar de mostrar los nombres de las rutas relativas al directorio de trabajo actual,muestra los nombres completos de las rutas.</target>
        </trans-unit>
        <trans-unit id="5f0ed09aafafab46ef0c48e35d2b30851c21ae6a" translate="yes" xml:space="preserve">
          <source>Instead of staging files after each individual change, you can tell &lt;code&gt;git commit&lt;/code&gt; to notice the changes to the files whose contents are tracked in your working tree and do corresponding &lt;code&gt;git add&lt;/code&gt; and &lt;code&gt;git rm&lt;/code&gt; for you. That is, this example does the same as the earlier example if there is no other change in your working tree:</source>
          <target state="translated">En lugar de preparar archivos despu&amp;eacute;s de cada cambio individual, puede decirle a &lt;code&gt;git commit&lt;/code&gt; que observe los cambios en los archivos cuyo contenido se rastrea en su &amp;aacute;rbol de trabajo y que haga &lt;code&gt;git add&lt;/code&gt; y &lt;code&gt;git rm&lt;/code&gt; correspondientes por usted. Es decir, este ejemplo hace lo mismo que el ejemplo anterior si no hay ning&amp;uacute;n otro cambio en su &amp;aacute;rbol de trabajo:</target>
        </trans-unit>
        <trans-unit id="a675a0b8f5c03b948f0d18f87a17852f45d21abd" translate="yes" xml:space="preserve">
          <source>Instead of stopping at the first failed merge, do all of them in one shot - continue with merging even when previous merges returned errors, and only return the error code after all the merges.</source>
          <target state="translated">En lugar de detenerse en la primera fusión fallida,hágalo todo de una sola vez-continúe con la fusión incluso cuando las anteriores fusiones devuelvan errores,y sólo devuelva el código de error después de todas las fusiones.</target>
        </trans-unit>
        <trans-unit id="de32bccd3ddde71a98cffd2de1232e1c99dfd513" translate="yes" xml:space="preserve">
          <source>Instead of submitting create a series of shelved changelists. After creating each shelve, the relevant files are reverted/deleted. If you have multiple commits pending multiple shelves will be created.</source>
          <target state="translated">En lugar de presentar,crear una serie de listas de cambios en las estanterías.Después de crear cada estante,los archivos relevantes son revertidos/borrados.Si tiene varias confirmaciones pendientes se crearán varios estantes.</target>
        </trans-unit>
        <trans-unit id="140c71a8b471c44c130e5b1eee8b0237e8238e05" translate="yes" xml:space="preserve">
          <source>Instead of taking list of paths from the command line, read list of paths from the standard input. Paths are separated by LF (i.e. one path per line) by default.</source>
          <target state="translated">En lugar de tomar la lista de rutas de la línea de comandos,lea la lista de rutas de la entrada estándar.Los caminos están separados por LF (es decir,un camino por línea)por defecto.</target>
        </trans-unit>
        <trans-unit id="f4ba2e4e1080efba3c28ca42286f9295fb7a6889" translate="yes" xml:space="preserve">
          <source>Instead of the commit subject, use some other information to describe each commit. &lt;code&gt;&amp;lt;format&amp;gt;&lt;/code&gt; can be any string accepted by the &lt;code&gt;--format&lt;/code&gt; option of &lt;code&gt;git log&lt;/code&gt;, such as &lt;code&gt;* [%h] %s&lt;/code&gt;. (See the &quot;PRETTY FORMATS&quot; section of &lt;a href=&quot;git-log&quot;&gt;git-log[1]&lt;/a&gt;.)</source>
          <target state="translated">En lugar del asunto de la confirmaci&amp;oacute;n, use otra informaci&amp;oacute;n para describir cada confirmaci&amp;oacute;n. &lt;code&gt;&amp;lt;format&amp;gt;&lt;/code&gt; puede ser cualquier cadena aceptada por la opci&amp;oacute;n &lt;code&gt;--format&lt;/code&gt; de &lt;code&gt;git log&lt;/code&gt; , como &lt;code&gt;* [%h] %s&lt;/code&gt; . (Consulta la secci&amp;oacute;n &quot;BONITOS FORMATOS&quot; de &lt;a href=&quot;git-log&quot;&gt;git-log [1]&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="a4e872330a2ee34ffbac6bb806a9bf43b1d76b3c" translate="yes" xml:space="preserve">
          <source>Instead of the content, show the object size identified by &amp;lt;object&amp;gt;.</source>
          <target state="translated">En lugar del contenido, muestre el tama&amp;ntilde;o del objeto identificado por &amp;lt;object&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="f066e23ab4bd2d63e94325b4a2a048945fb424e1" translate="yes" xml:space="preserve">
          <source>Instead of the content, show the object type identified by &amp;lt;object&amp;gt;.</source>
          <target state="translated">En lugar del contenido, muestre el tipo de objeto identificado por &amp;lt;object&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="01b660ce7f25b8747605b72657d7e3925704df33" translate="yes" xml:space="preserve">
          <source>Instead of the default &quot;symref&quot; format for HEAD and other symbolic reference files, use symbolic links. This is sometimes needed to work with old scripts that expect HEAD to be a symbolic link.</source>
          <target state="translated">En lugar del formato &quot;symref&quot; por defecto para HEAD y otros archivos de referencia simbólicos,use enlaces simbólicos.Esto es necesario a veces para trabajar con viejos scripts que esperan que HEAD sea un enlace simbólico.</target>
        </trans-unit>
        <trans-unit id="f146d5682a8b5a97d10d05b37274aa1ba3a49c07" translate="yes" xml:space="preserve">
          <source>Instead of the default 4 digits with leading zeros, different precision can be specified for the generated filenames.</source>
          <target state="translated">En lugar de los 4 dígitos predeterminados con ceros a la izquierda,se puede especificar una precisión diferente para los nombres de archivo generados.</target>
        </trans-unit>
        <trans-unit id="e1d28ba0f9256454e559ca46e186461c224089ef" translate="yes" xml:space="preserve">
          <source>Instead of the first handful of characters, show the full pre- and post-image blob object names on the &quot;index&quot; line when generating patch format output.</source>
          <target state="translated">En lugar del primer puñado de caracteres,muestre los nombres completos de los objetos de la mancha antes y después de la imagen en la línea del &quot;índice&quot; al generar la salida del formato de parche.</target>
        </trans-unit>
        <trans-unit id="e3b6588aa8ce45f7528fa4adfa5f41dc47858a56" translate="yes" xml:space="preserve">
          <source>Instead of the normal operation, dump the shorthand alias names from the configured alias file(s), one per line in alphabetical order. Note, this only includes the alias name and not its expanded email addresses. See &lt;code&gt;sendemail.aliasesfile&lt;/code&gt; for more information about aliases.</source>
          <target state="translated">En lugar de la operaci&amp;oacute;n normal, descargue los nombres de alias abreviados de los archivos de alias configurados, uno por l&amp;iacute;nea en orden alfab&amp;eacute;tico. Tenga en cuenta que esto solo incluye el nombre de alias y no sus direcciones de correo electr&amp;oacute;nico expandidas. Consulte &lt;code&gt;sendemail.aliasesfile&lt;/code&gt; para obtener m&amp;aacute;s informaci&amp;oacute;n sobre los alias.</target>
        </trans-unit>
        <trans-unit id="a5193f3430d8f0ae554c9fb9924930f57b4baaf8" translate="yes" xml:space="preserve">
          <source>Instead of the standard 64 bytes, chomp the generated output filenames at around &lt;code&gt;&amp;lt;n&amp;gt;&lt;/code&gt; bytes (too short a value will be silently raised to a reasonable length). Defaults to the value of the &lt;code&gt;format.filenameMaxLength&lt;/code&gt; configuration variable, or 64 if unconfigured.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77a59d82290cfd961dc9ff35f15683facfa89709" translate="yes" xml:space="preserve">
          <source>Instead of the standard &lt;code&gt;[PATCH]&lt;/code&gt; prefix in the subject line, instead use &lt;code&gt;[&amp;lt;subject prefix&amp;gt;]&lt;/code&gt;. This allows for useful naming of a patch series, and can be combined with the &lt;code&gt;--numbered&lt;/code&gt; option.</source>
          <target state="translated">En lugar del prefijo &lt;code&gt;[PATCH]&lt;/code&gt; est&amp;aacute;ndar en la l&amp;iacute;nea de asunto, utilice &lt;code&gt;[&amp;lt;subject prefix&amp;gt;]&lt;/code&gt; . Esto permite asignar un nombre &amp;uacute;til a una serie de parches y se puede combinar con la opci&amp;oacute;n &lt;code&gt;--numbered&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="440b20677cca3bad5d5589368544d09ff6997de8" translate="yes" xml:space="preserve">
          <source>Instead of using &lt;a href=&quot;git-remote&quot;&gt;git-remote[1]&lt;/a&gt;, you can also choose just to update one branch at a time, and to store it locally under an arbitrary name:</source>
          <target state="translated">En lugar de usar &lt;a href=&quot;git-remote&quot;&gt;git-remote [1]&lt;/a&gt; , tambi&amp;eacute;n puedes elegir actualizar una rama a la vez y almacenarla localmente con un nombre arbitrario:</target>
        </trans-unit>
        <trans-unit id="c80da0469d96c6db5cfae1c5b4b2cc65c570bdb0" translate="yes" xml:space="preserve">
          <source>Instead of using &lt;code&gt;.patch&lt;/code&gt; as the suffix for generated filenames, use specified suffix. A common alternative is &lt;code&gt;--suffix=.txt&lt;/code&gt;. Leaving this empty will remove the &lt;code&gt;.patch&lt;/code&gt; suffix.</source>
          <target state="translated">En lugar de utilizar &lt;code&gt;.patch&lt;/code&gt; como sufijo para los nombres de archivo generados, utilice el sufijo especificado. Una alternativa com&amp;uacute;n es &lt;code&gt;--suffix=.txt&lt;/code&gt; . Si lo deja vac&amp;iacute;o, se eliminar&amp;aacute; el sufijo &lt;code&gt;.patch&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f82d2e94f21038afaa9f1d66d3a9a0e365538f7c" translate="yes" xml:space="preserve">
          <source>Instead of using only the annotated tags, use any ref found in &lt;code&gt;refs/&lt;/code&gt; namespace. This option enables matching any known branch, remote-tracking branch, or lightweight tag.</source>
          <target state="translated">En lugar de usar solo las etiquetas anotadas, use cualquier referencia que se encuentre en &lt;code&gt;refs/&lt;/code&gt; namespace. Esta opci&amp;oacute;n permite hacer coincidir cualquier rama conocida, rama de seguimiento remoto o etiqueta ligera.</target>
        </trans-unit>
        <trans-unit id="1177311a3949b6b80d45daef7bf2616b79441b65" translate="yes" xml:space="preserve">
          <source>Instead of using only the annotated tags, use any tag found in &lt;code&gt;refs/tags&lt;/code&gt; namespace. This option enables matching a lightweight (non-annotated) tag.</source>
          <target state="translated">En lugar de usar solo las etiquetas anotadas, use cualquier etiqueta que se encuentre en el espacio de nombres &lt;code&gt;refs/tags&lt;/code&gt; . Esta opci&amp;oacute;n permite hacer coincidir una etiqueta ligera (no anotada).</target>
        </trans-unit>
        <trans-unit id="525df652b887a2877266435635ef66426239fc1d" translate="yes" xml:space="preserve">
          <source>Instead of using the author date of the original commit, use the current time as the author date of the rebased commit. This option implies &lt;code&gt;--force-rebase&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4860002e825b16be9527700d7d5e647a6362a7ef" translate="yes" xml:space="preserve">
          <source>Instead of using the current time as the committer date, use the author date of the commit being rebased as the committer date. This option implies &lt;code&gt;--force-rebase&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa50874379be0d623d79d8af182cc42f83a49b1c" translate="yes" xml:space="preserve">
          <source>Instead of using the default 7 hexadecimal digits as the abbreviated object name, use &amp;lt;n&amp;gt; digits, or as many digits as needed to form a unique object name. An &amp;lt;n&amp;gt; of 0 will suppress long format, only showing the closest tag.</source>
          <target state="translated">En lugar de utilizar los 7 d&amp;iacute;gitos hexadecimales predeterminados como nombre abreviado del objeto, utilice &amp;lt;n&amp;gt; d&amp;iacute;gitos o tantos d&amp;iacute;gitos como sea necesario para formar un nombre de objeto &amp;uacute;nico. Un &amp;lt;n&amp;gt; de 0 suprimir&amp;aacute; el formato largo, mostrando solo la etiqueta m&amp;aacute;s cercana.</target>
        </trans-unit>
        <trans-unit id="8ef17c5b4695c9bfd592215d15d120e9c2a9006e" translate="yes" xml:space="preserve">
          <source>Instead of using the default 7+1 hexadecimal digits as the abbreviated object name, use &amp;lt;m&amp;gt;+1 digits, where &amp;lt;m&amp;gt; is at least &amp;lt;n&amp;gt; but ensures the commit object names are unique. Note that 1 column is used for a caret to mark the boundary commit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="183487409af3884cbc9c819c550a69752622875c" translate="yes" xml:space="preserve">
          <source>Instead of using the default 7+1 hexadecimal digits as the abbreviated object name, use &amp;lt;n&amp;gt;+1 digits. Note that 1 column is used for a caret to mark the boundary commit.</source>
          <target state="translated">En lugar de utilizar los d&amp;iacute;gitos hexadecimales predeterminados de 7 + 1 como nombre abreviado del objeto, utilice &amp;lt;n&amp;gt; +1 d&amp;iacute;gitos. Tenga en cuenta que se utiliza 1 columna para un s&amp;iacute;mbolo de intercalaci&amp;oacute;n para marcar el compromiso de l&amp;iacute;mite.</target>
        </trans-unit>
        <trans-unit id="ee5547b5d72f6d52e84d0986cad360b6f68e956a" translate="yes" xml:space="preserve">
          <source>Instead of using the remote name &lt;code&gt;origin&lt;/code&gt; to keep track of the upstream repository, use &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">En lugar de utilizar el &lt;code&gt;origin&lt;/code&gt; nombre remoto para realizar un seguimiento del repositorio ascendente, utilice &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8230f517afe99bceca1ecc093593da33efe8d9c7" translate="yes" xml:space="preserve">
          <source>Instead of using the remote name &lt;code&gt;origin&lt;/code&gt; to keep track of the upstream repository, use &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt;. Overrides &lt;code&gt;clone.defaultRemoteName&lt;/code&gt; from the config.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acaf18a5ec5cac3fd2f3b3d56ba27133d9e16abf" translate="yes" xml:space="preserve">
          <source>Instead of using the tip of the current branch, compare with the tip of &quot;test&quot; branch.</source>
          <target state="translated">En lugar de usar la punta de la rama actual,compárala con la punta de la rama de &quot;prueba&quot;.</target>
        </trans-unit>
        <trans-unit id="0e0bb2a4d944b8f5531055e279607820e676a94b" translate="yes" xml:space="preserve">
          <source>Instead of walking the commit ancestry chain, walk reflog entries from the most recent one to older ones. When this option is used you cannot specify commits to exclude (that is, &lt;code&gt;^commit&lt;/code&gt;, &lt;code&gt;commit1..commit2&lt;/code&gt;, and &lt;code&gt;commit1...commit2&lt;/code&gt; notations cannot be used).</source>
          <target state="translated">En lugar de recorrer la cadena de ascendencia de confirmaci&amp;oacute;n, recorra las entradas de re-registro desde la m&amp;aacute;s reciente hasta las m&amp;aacute;s antiguas. Cuando se usa esta opci&amp;oacute;n, no se pueden especificar confirmaciones para excluir (es decir , las &lt;code&gt;commit1..commit2&lt;/code&gt; &lt;code&gt;^commit&lt;/code&gt; , compromiso1..commit2 y &lt;code&gt;commit1...commit2&lt;/code&gt; no se pueden usar).</target>
        </trans-unit>
        <trans-unit id="00c411b0a21221afdc6e21c624bf253d7212e3a9" translate="yes" xml:space="preserve">
          <source>Instead of writing the results out to &lt;code&gt;$GIT_INDEX_FILE&lt;/code&gt;, write the resulting index in the named file. While the command is operating, the original index file is locked with the same mechanism as usual. The file must allow to be rename(2)ed into from a temporary file that is created next to the usual index file; typically this means it needs to be on the same filesystem as the index file itself, and you need write permission to the directories the index file and index output file are located in.</source>
          <target state="translated">En lugar de escribir los resultados en &lt;code&gt;$GIT_INDEX_FILE&lt;/code&gt; , escriba el &amp;iacute;ndice resultante en el archivo nombrado. Mientras el comando est&amp;aacute; funcionando, el archivo de &amp;iacute;ndice original se bloquea con el mismo mecanismo que de costumbre. El archivo debe permitir cambiar el nombre (2) desde un archivo temporal que se crea junto al archivo de &amp;iacute;ndice habitual; Por lo general, esto significa que debe estar en el mismo sistema de archivos que el archivo de &amp;iacute;ndice en s&amp;iacute;, y necesita permiso de escritura en los directorios en los que se encuentran el archivo de &amp;iacute;ndice y el archivo de salida del &amp;iacute;ndice.</target>
        </trans-unit>
        <trans-unit id="ef06396aed739ff032fb1ddeda938ad4cf5e4280" translate="yes" xml:space="preserve">
          <source>Instruct Git to avoid trying to guess defaults for &lt;code&gt;user.email&lt;/code&gt; and &lt;code&gt;user.name&lt;/code&gt;, and instead retrieve the values only from the configuration. For example, if you have multiple email addresses and would like to use a different one for each repository, then with this configuration option set to &lt;code&gt;true&lt;/code&gt; in the global config along with a name, Git will prompt you to set up an email before making new commits in a newly cloned repository. Defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">Indique a Git que evite intentar adivinar los valores predeterminados para &lt;code&gt;user.email&lt;/code&gt; y &lt;code&gt;user.name&lt;/code&gt; y, en su lugar, recupere los valores solo de la configuraci&amp;oacute;n. Por ejemplo, si tiene varias direcciones de correo electr&amp;oacute;nico y le gustar&amp;iacute;a usar una diferente para cada repositorio, entonces con esta opci&amp;oacute;n de configuraci&amp;oacute;n establecida en &lt;code&gt;true&lt;/code&gt; en la configuraci&amp;oacute;n global junto con un nombre, Git le pedir&amp;aacute; que configure un correo electr&amp;oacute;nico antes de crear un nuevo confirma en un repositorio reci&amp;eacute;n clonado. El valor predeterminado es &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a592acd9f11ad3bff77a1878bfa756913e7df3fe" translate="yes" xml:space="preserve">
          <source>Instruction to add new data</source>
          <target state="translated">Instrucción para añadir nuevos datos</target>
        </trans-unit>
        <trans-unit id="c222c271406b6a5c2fcfc84ba72b7981aee6b09e" translate="yes" xml:space="preserve">
          <source>Instruction to copy from base object</source>
          <target state="translated">Instrucciones para copiar desde el objeto base</target>
        </trans-unit>
        <trans-unit id="6131d2bc98a67fbf2df419d53c2a5951a56eb747" translate="yes" xml:space="preserve">
          <source>Instructs the remote helper that any subsequent input is part of a fast-import stream (generated by &lt;code&gt;git fast-export&lt;/code&gt;) containing objects which should be pushed to the remote.</source>
          <target state="translated">Indica al asistente remoto que cualquier entrada posterior es parte de un flujo de importaci&amp;oacute;n r&amp;aacute;pida (generado por &lt;code&gt;git fast-export&lt;/code&gt; ) que contiene objetos que deben enviarse al control remoto.</target>
        </trans-unit>
        <trans-unit id="563eacc97631ea8eeadfe6b54ffbd63455326490" translate="yes" xml:space="preserve">
          <source>Integer. Specifies desired depth of nested regions in the event output. Regions deeper than this value will be omitted. May be overridden by the &lt;code&gt;GIT_TRACE2_EVENT_NESTING&lt;/code&gt; environment variable. Defaults to 2.</source>
          <target state="translated">Entero. Especifica la profundidad deseada de las regiones anidadas en la salida del evento. Se omitir&amp;aacute;n las regiones m&amp;aacute;s profundas que este valor. Puede ser anulado por la variable de entorno &lt;code&gt;GIT_TRACE2_EVENT_NESTING&lt;/code&gt; . Por defecto es 2.</target>
        </trans-unit>
        <trans-unit id="f3e0144605c9578fc597fd7ff39de75aab2afefe" translate="yes" xml:space="preserve">
          <source>Integer. When writing trace files to a target directory, do not write additional traces if we would exceed this many files. Instead, write a sentinel file that will block further tracing to this directory. Defaults to 0, which disables this check.</source>
          <target state="translated">Entero.Al escribir archivos de rastreo en un directorio de destino,no escribas rastros adicionales si superamos esta cantidad de archivos.En su lugar,escriba un archivo centinela que bloquee el rastreo a este directorio.El valor predeterminado es 0,lo que desactiva esta comprobación.</target>
        </trans-unit>
        <trans-unit id="a6768cae9c51930f13c302375f3385c6c77b2104" translate="yes" xml:space="preserve">
          <source>Integrator</source>
          <target state="translated">Integrator</target>
        </trans-unit>
        <trans-unit id="e30f6e398ba3d7dd3d6ee2f7d0d8940d3116f2a5" translate="yes" xml:space="preserve">
          <source>Interacting with Others</source>
          <target state="translated">Interacción con los demás</target>
        </trans-unit>
        <trans-unit id="e9854d76872b55831675241f09e80f37f1939cea" translate="yes" xml:space="preserve">
          <source>Interaction between checkin/checkout attributes</source>
          <target state="translated">Interacción entre los atributos de entrada y salida</target>
        </trans-unit>
        <trans-unit id="0d798c0b1cd4a6d135dc1e4671cde5f33dab863b" translate="yes" xml:space="preserve">
          <source>Interactive mode</source>
          <target state="translated">Modo interactivo</target>
        </trans-unit>
        <trans-unit id="fb0ea93fbb85b738df0bd31fcf1bc9eb5468d22b" translate="yes" xml:space="preserve">
          <source>Interactive use</source>
          <target state="translated">Uso interactivo</target>
        </trans-unit>
        <trans-unit id="94db97a8381d05a800daa18ce0818d37326de61f" translate="yes" xml:space="preserve">
          <source>Interactively choose hunks of patch between the index and the work tree and add them to the index. This gives the user a chance to review the difference before adding modified contents to the index.</source>
          <target state="translated">Interactivamente elige trozos de parche entre el índice y el árbol de trabajo y añádelos al índice.Esto le da al usuario la oportunidad de revisar la diferencia antes de añadir contenidos modificados al índice.</target>
        </trans-unit>
        <trans-unit id="bfdd4f344b8dfb9b5f469d3e0a6945b89367454c" translate="yes" xml:space="preserve">
          <source>Interactively select hunks from the diff between HEAD and the working tree to be stashed. The stash entry is constructed such that its index state is the same as the index state of your repository, and its worktree contains only the changes you selected interactively. The selected changes are then rolled back from your worktree. See the &amp;ldquo;Interactive Mode&amp;rdquo; section of &lt;a href=&quot;git-add&quot;&gt;git-add[1]&lt;/a&gt; to learn how to operate the &lt;code&gt;--patch&lt;/code&gt; mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="942e3b50f8575a931a7b62b4970978b40b59bcee" translate="yes" xml:space="preserve">
          <source>Interactively select hunks in the difference between the &lt;code&gt;&amp;lt;tree-ish&amp;gt;&lt;/code&gt; (or the index, if unspecified) and the working tree. The chosen hunks are then applied in reverse to the working tree (and if a &lt;code&gt;&amp;lt;tree-ish&amp;gt;&lt;/code&gt; was specified, the index).</source>
          <target state="translated">Seleccione de forma interactiva trozos en la diferencia entre el &lt;code&gt;&amp;lt;tree-ish&amp;gt;&lt;/code&gt; (o el &amp;iacute;ndice, si no se especifica) y el &amp;aacute;rbol de trabajo. Los trozos elegidos se aplican entonces al rev&amp;eacute;s al &amp;aacute;rbol de trabajo (y si se especific&amp;oacute; un &lt;code&gt;&amp;lt;tree-ish&amp;gt;&lt;/code&gt; , el &amp;iacute;ndice).</target>
        </trans-unit>
        <trans-unit id="6b61a0bfaba36c21326a6cc1d8076250bbb8f781" translate="yes" xml:space="preserve">
          <source>Interactively select hunks in the difference between the index and &lt;code&gt;&amp;lt;tree-ish&amp;gt;&lt;/code&gt; (defaults to &lt;code&gt;HEAD&lt;/code&gt;). The chosen hunks are applied in reverse to the index.</source>
          <target state="translated">Seleccione de forma interactiva trozos en la diferencia entre el &amp;iacute;ndice y &lt;code&gt;&amp;lt;tree-ish&amp;gt;&lt;/code&gt; (el valor predeterminado es &lt;code&gt;HEAD&lt;/code&gt; ). Los trozos elegidos se aplican a la inversa del &amp;iacute;ndice.</target>
        </trans-unit>
        <trans-unit id="11c4e8d4b31fcec1faa8b21ab916ae6d7ecd6196" translate="yes" xml:space="preserve">
          <source>Interactively select hunks in the difference between the restore source and the restore location. See the &amp;ldquo;Interactive Mode&amp;rdquo; section of &lt;a href=&quot;git-add&quot;&gt;git-add[1]&lt;/a&gt; to learn how to operate the &lt;code&gt;--patch&lt;/code&gt; mode.</source>
          <target state="translated">Seleccione de forma interactiva trozos en la diferencia entre la fuente de restauraci&amp;oacute;n y la ubicaci&amp;oacute;n de restauraci&amp;oacute;n. Consulte la secci&amp;oacute;n &quot;Modo interactivo&quot; de &lt;a href=&quot;git-add&quot;&gt;git-add [1]&lt;/a&gt; para aprender c&amp;oacute;mo operar el modo &lt;code&gt;--patch&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="37d460e42c18dd6a2f67dd6cfcf736b2dc4e3735" translate="yes" xml:space="preserve">
          <source>Internal detail of implementation. What is important is that if this field is not present then per-repository override for given feature is not supported.</source>
          <target state="translated">Detalle interno de la aplicación.Lo que es importante es que si este campo no está presente,entonces no se admite la anulación por repositorio de una determinada característica.</target>
        </trans-unit>
        <trans-unit id="fcd742802f00593c0aa9a5d67d6ee0045ea54dd6" translate="yes" xml:space="preserve">
          <source>Internal helper commands</source>
          <target state="translated">Los comandos de ayuda interna</target>
        </trans-unit>
        <trans-unit id="99089329f972015329c6ab2c5f20f49ab1b0fb2e" translate="yes" xml:space="preserve">
          <source>Internal variable identifying the repository format and layout version.</source>
          <target state="translated">Variable interna que identifica el formato del depósito y la versión de diseño.</target>
        </trans-unit>
        <trans-unit id="d2a9fe262eee692f1042088fcd5412df8b02ed0e" translate="yes" xml:space="preserve">
          <source>Internal variable which enables various workarounds to enable Git to work better on filesystems that are not case sensitive, like APFS, HFS+, FAT, NTFS, etc. For example, if a directory listing finds &quot;makefile&quot; when Git expects &quot;Makefile&quot;, Git will assume it is really the same file, and continue to remember it as &quot;Makefile&quot;.</source>
          <target state="translated">Variable interna que permite varias soluciones alternativas para que Git funcione mejor en sistemas de archivos que no distinguen entre mayúsculas y minúsculas,como APFS,HFS+,FAT,NTFS,etc.Por ejemplo,si un listado de directorios encuentra &quot;makefile&quot; cuando Git espera &quot;Makefile&quot;,Git asumirá que se trata realmente del mismo archivo,y continuará recordándolo como &quot;Makefile&quot;.</target>
        </trans-unit>
        <trans-unit id="2885f5339d53e1a4ffa0f79158576edb8758ff7a" translate="yes" xml:space="preserve">
          <source>Internally, Git always stores file names as sequences of bytes and doesn&amp;rsquo;t perform any encoding or case folding. However, Windows and macOS by default both perform case folding on file names. As a result, it&amp;rsquo;s possible to end up with multiple files or directories whose names differ only in case. Git can handle this just fine, but the file system can store only one of these files, so when Git reads the other file to see its contents, it looks modified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd5dd045ecadbef7edb9976d5bf76d5e7548b5a7" translate="yes" xml:space="preserve">
          <source>Interpret &amp;lt;refname&amp;gt; as a reference name pattern for a refspec (as used with remote repositories). If this option is enabled, &amp;lt;refname&amp;gt; is allowed to contain a single &lt;code&gt;*&lt;/code&gt; in the refspec (e.g., &lt;code&gt;foo/bar*/baz&lt;/code&gt; or &lt;code&gt;foo/bar*baz/&lt;/code&gt; but not &lt;code&gt;foo/bar*/baz*&lt;/code&gt;).</source>
          <target state="translated">Interprete &amp;lt;refname&amp;gt; como un patr&amp;oacute;n de nombre de referencia para una refspec (como se usa con repositorios remotos). Si esta opci&amp;oacute;n est&amp;aacute; habilitada, &amp;lt;refname&amp;gt; puede contener un solo &lt;code&gt;*&lt;/code&gt; en la refspec (por ejemplo, &lt;code&gt;foo/bar*/baz&lt;/code&gt; o &lt;code&gt;foo/bar*baz/&lt;/code&gt; pero no &lt;code&gt;foo/bar*/baz*&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="670ef7722a61e3342fef6602c3dc04b50457ccb3" translate="yes" xml:space="preserve">
          <source>Interpret all preceding arguments as attributes and all following arguments as path names.</source>
          <target state="translated">Interpreta todos los argumentos precedentes como atributos y todos los argumentos siguientes como nombres de ruta.</target>
        </trans-unit>
        <trans-unit id="c75cadb4ae816991e0dd6b40f2cda63b6ea63eb7" translate="yes" xml:space="preserve">
          <source>Interrogation commands</source>
          <target state="translated">Comandos de interrogación</target>
        </trans-unit>
        <trans-unit id="f1e6fa1e2ddb5fcd808e3092148f74242800360f" translate="yes" xml:space="preserve">
          <source>Interrogators:</source>
          <target state="translated">Interrogators:</target>
        </trans-unit>
        <trans-unit id="8b0b6bf2544da29702a138cd7dd487472490ccff" translate="yes" xml:space="preserve">
          <source>Interrupt transfer after &amp;lt;n&amp;gt; seconds of inactivity.</source>
          <target state="translated">Interrumpa la transferencia despu&amp;eacute;s de &amp;lt;n&amp;gt; segundos de inactividad.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
