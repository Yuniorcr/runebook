<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="git">
    <body>
      <group id="git">
        <trans-unit id="82b93c6560af27195da14e70510e2b3d8651c3b7" translate="yes" xml:space="preserve">
          <source>Use the specified HTTP protocol version when communicating with a server. If you want to force the default. The available and default version depend on libcurl. Actually the possible values of this option are:</source>
          <target state="translated">Utilice la versión especificada del protocolo HTTP cuando se comunique con un servidor.Si desea forzar el valor predeterminado.La versión disponible y la predeterminada dependen de libcurl.En realidad los posibles valores de esta opción son:</target>
        </trans-unit>
        <trans-unit id="becfdaabcf538340d904ac918eb155dd5d16c802" translate="yes" xml:space="preserve">
          <source>Use the specified URL to connect to the destination Subversion repository. This is useful in cases where the source SVN repository is read-only. This option overrides configuration property &lt;code&gt;commiturl&lt;/code&gt;.</source>
          <target state="translated">Utilice la URL especificada para conectarse al repositorio de Subversion de destino. Esto es &amp;uacute;til en los casos en que el repositorio SVN de origen es de solo lectura. Esta opci&amp;oacute;n anula la propiedad de configuraci&amp;oacute;n &lt;code&gt;commiturl&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9e057e9e47493412f91dea4102ac0984cb71bdeb" translate="yes" xml:space="preserve">
          <source>Use the value of the &lt;code&gt;core.whitespace&lt;/code&gt; configuration variable to decide what to notice as error.</source>
          <target state="translated">Utilice el valor de la variable de configuraci&amp;oacute;n &lt;code&gt;core.whitespace&lt;/code&gt; para decidir qu&amp;eacute; notar como error.</target>
        </trans-unit>
        <trans-unit id="810f8c03feb9550dd6740190f543dbb37624e241" translate="yes" xml:space="preserve">
          <source>Use this custom program instead of &quot;&lt;code&gt;gpg&lt;/code&gt;&quot; found on &lt;code&gt;$PATH&lt;/code&gt; when making or verifying a PGP signature. The program must support the same command-line interface as GPG, namely, to verify a detached signature, &quot;&lt;code&gt;gpg --verify $signature - &amp;lt;$file&lt;/code&gt;&quot; is run, and the program is expected to signal a good signature by exiting with code 0, and to generate an ASCII-armored detached signature, the standard input of &quot;&lt;code&gt;gpg -bsau $key&lt;/code&gt;&quot; is fed with the contents to be signed, and the program is expected to send the result to its standard output.</source>
          <target state="translated">Utilice este programa personalizado en lugar de &quot; &lt;code&gt;gpg&lt;/code&gt; &quot; que se encuentra en &lt;code&gt;$PATH&lt;/code&gt; al hacer o verificar una firma PGP. El programa debe admitir la misma interfaz de l&amp;iacute;nea de comandos que GPG, es decir, para verificar una firma separada, se &lt;code&gt;gpg --verify $signature - &amp;lt;$file&lt;/code&gt; &quot; gpg --verify $ signature - &amp;lt;$ file &quot;, y se espera que el programa indique una buena firma al salir con el c&amp;oacute;digo 0, y para generar una firma separada blindada ASCII, la entrada est&amp;aacute;ndar de &quot; &lt;code&gt;gpg -bsau $key&lt;/code&gt; &quot; se alimenta con el contenido a firmar, y se espera que el programa env&amp;iacute;e el resultado a su salida est&amp;aacute;ndar.</target>
        </trans-unit>
        <trans-unit id="ad85fb495e355ea9ee99bf9caef60d6a5acc4df9" translate="yes" xml:space="preserve">
          <source>Use this for compatibility with old-style branch names used by earlier versions of &lt;code&gt;git archimport&lt;/code&gt;. Old-style branch names were category{litdd}branch, whereas new-style branch names are archive,category{litdd}branch{litdd}version. In both cases, names given on the command-line will override the automatically-generated ones.</source>
          <target state="translated">Use esto para compatibilidad con nombres de rama de estilo antiguo utilizados por versiones anteriores de &lt;code&gt;git archimport&lt;/code&gt; . Los nombres de rama de estilo antiguo eran rama de categor&amp;iacute;a {litdd}, mientras que los nombres de rama de estilo nuevo son archivo, versi&amp;oacute;n de rama de categor&amp;iacute;a {litdd} rama {litdd}. En ambos casos, los nombres dados en la l&amp;iacute;nea de comandos anular&amp;aacute;n los generados autom&amp;aacute;ticamente.</target>
        </trans-unit>
        <trans-unit id="f09efb8456c99114df5272977533145bfda3715e" translate="yes" xml:space="preserve">
          <source>Use this option to integrate changes from the upstream subproject with your submodule&amp;rsquo;s current HEAD. Alternatively, you can run &lt;code&gt;git pull&lt;/code&gt; from the submodule, which is equivalent except for the remote branch name: &lt;code&gt;update --remote&lt;/code&gt; uses the default upstream repository and &lt;code&gt;submodule.&amp;lt;name&amp;gt;.branch&lt;/code&gt;, while &lt;code&gt;git pull&lt;/code&gt; uses the submodule&amp;rsquo;s &lt;code&gt;branch.&amp;lt;name&amp;gt;.merge&lt;/code&gt;. Prefer &lt;code&gt;submodule.&amp;lt;name&amp;gt;.branch&lt;/code&gt; if you want to distribute the default upstream branch with the superproject and &lt;code&gt;branch.&amp;lt;name&amp;gt;.merge&lt;/code&gt; if you want a more native feel while working in the submodule itself.</source>
          <target state="translated">Utilice esta opci&amp;oacute;n para integrar los cambios del subproyecto anterior con el HEAD actual de su subm&amp;oacute;dulo. Alternativamente, puede ejecutar &lt;code&gt;git pull&lt;/code&gt; desde el subm&amp;oacute;dulo, que es equivalente excepto por el nombre de la rama remota: &lt;code&gt;update --remote&lt;/code&gt; usa el repositorio ascendente predeterminado y el &lt;code&gt;submodule.&amp;lt;name&amp;gt;.branch&lt;/code&gt; , mientras que &lt;code&gt;git pull&lt;/code&gt; usa la &lt;code&gt;branch.&amp;lt;name&amp;gt;.merge&lt;/code&gt; del subm&amp;oacute;dulo . &amp;lt;nombre&amp;gt; .merge . Prefiera el &lt;code&gt;submodule.&amp;lt;name&amp;gt;.branch&lt;/code&gt; si desea distribuir la rama ascendente predeterminada con el superproyecto y la &lt;code&gt;branch.&amp;lt;name&amp;gt;.merge&lt;/code&gt; si desea una sensaci&amp;oacute;n m&amp;aacute;s nativa mientras trabaja en el subm&amp;oacute;dulo en s&amp;iacute;.</target>
        </trans-unit>
        <trans-unit id="205f9bc458a5cacd665ee1af1eac8a989bc13811" translate="yes" xml:space="preserve">
          <source>Use this option to set the namespace where the original commits will be stored. The default value is &lt;code&gt;refs/original&lt;/code&gt;.</source>
          <target state="translated">Utilice esta opci&amp;oacute;n para establecer el espacio de nombres donde se almacenar&amp;aacute;n las confirmaciones originales. El valor predeterminado es &lt;code&gt;refs/original&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="978a87da673ee3d6baf57006a070d2ceaf2e0a29" translate="yes" xml:space="preserve">
          <source>Use this option to set the path to the temporary directory used for rewriting. When applying a tree filter, the command needs to temporarily check out the tree to some directory, which may consume considerable space in case of large projects. By default it does this in the &lt;code&gt;.git-rewrite/&lt;/code&gt; directory but you can override that choice by this parameter.</source>
          <target state="translated">Utilice esta opci&amp;oacute;n para establecer la ruta al directorio temporal utilizado para reescribir. Al aplicar un filtro de &amp;aacute;rbol, el comando necesita verificar temporalmente el &amp;aacute;rbol en alg&amp;uacute;n directorio, lo que puede consumir un espacio considerable en el caso de proyectos grandes. De forma predeterminada, hace esto en el &lt;code&gt;.git-rewrite/&lt;/code&gt; pero puede anular esa elecci&amp;oacute;n con este par&amp;aacute;metro.</target>
        </trans-unit>
        <trans-unit id="7dad6966beac366ffc5d985e757265d090b93f5a" translate="yes" xml:space="preserve">
          <source>Use this option to unstage and remove paths only from the index. Working tree files, whether modified or not, will be left alone.</source>
          <target state="translated">Utilice esta opción para despejar y eliminar los caminos sólo del índice.Los archivos del árbol de trabajo,modificados o no,se dejarán en paz.</target>
        </trans-unit>
        <trans-unit id="22e3468b42fc7b02294ecbf3cdd521f378eedf7b" translate="yes" xml:space="preserve">
          <source>Use this to customize the program used for the signing format you chose. (see &lt;code&gt;gpg.program&lt;/code&gt; and &lt;code&gt;gpg.format&lt;/code&gt;) &lt;code&gt;gpg.program&lt;/code&gt; can still be used as a legacy synonym for &lt;code&gt;gpg.openpgp.program&lt;/code&gt;. The default value for &lt;code&gt;gpg.x509.program&lt;/code&gt; is &quot;gpgsm&quot;.</source>
          <target state="translated">Use esto para personalizar el programa utilizado para el formato de firma que eligi&amp;oacute;. (ver &lt;code&gt;gpg.program&lt;/code&gt; y &lt;code&gt;gpg.format&lt;/code&gt; ) &lt;code&gt;gpg.program&lt;/code&gt; todav&amp;iacute;a se puede utilizar como sin&amp;oacute;nimo heredado de &lt;code&gt;gpg.openpgp.program&lt;/code&gt; . El valor predeterminado para &lt;code&gt;gpg.x509.program&lt;/code&gt; es &quot;gpgsm&quot;.</target>
        </trans-unit>
        <trans-unit id="2c0ec0febb1ffdfb71fd1faf1bdd4ef5cebdb7eb" translate="yes" xml:space="preserve">
          <source>Use this to specify the path to &lt;code&gt;git-upload-pack&lt;/code&gt; on the remote side, if is not found on your $PATH. Installations of sshd ignores the user&amp;rsquo;s environment setup scripts for login shells (e.g. .bash_profile) and your privately installed git may not be found on the system default $PATH. Another workaround suggested is to set up your $PATH in &quot;.bashrc&quot;, but this flag is for people who do not want to pay the overhead for non-interactive shells by having a lean .bashrc file (they set most of the things up in .bash_profile).</source>
          <target state="translated">Use esto para especificar la ruta a &lt;code&gt;git-upload-pack&lt;/code&gt; en el lado remoto, si no se encuentra en su $ PATH. Las instalaciones de sshd ignoran los scripts de configuraci&amp;oacute;n del entorno del usuario para los shells de inicio de sesi&amp;oacute;n (por ejemplo, .bash_profile) y es posible que su git instalado de forma privada no se encuentre en el $ PATH predeterminado del sistema. Otra soluci&amp;oacute;n alternativa sugerida es configurar su $ PATH en &quot;.bashrc&quot;, pero esta bandera es para las personas que no quieren pagar los gastos generales de los shells no interactivos al tener un archivo .bashrc ajustado (ellos configuran la mayor&amp;iacute;a de las cosas en .bash_profile).</target>
        </trans-unit>
        <trans-unit id="1f3cdffd9311e81ebd0ee41b41de344f546bb6a2" translate="yes" xml:space="preserve">
          <source>Used DBI driver. You can specify any available driver for this here, but it might not work. cvsserver is tested with &lt;code&gt;DBD::SQLite&lt;/code&gt;, reported to work with &lt;code&gt;DBD::Pg&lt;/code&gt;, and reported &lt;strong&gt;not&lt;/strong&gt; to work with &lt;code&gt;DBD::mysql&lt;/code&gt;. Please regard this as an experimental feature. May not contain colons (&lt;code&gt;:&lt;/code&gt;). Default: &lt;code&gt;SQLite&lt;/code&gt;</source>
          <target state="translated">Controlador DBI usado. Puede especificar cualquier controlador disponible para esto aqu&amp;iacute;, pero es posible que no funcione. cvsserver se prueba con &lt;code&gt;DBD::SQLite&lt;/code&gt; , se informa que funciona con &lt;code&gt;DBD::Pg&lt;/code&gt; y se informa que &lt;strong&gt;no&lt;/strong&gt; funciona con &lt;code&gt;DBD::mysql&lt;/code&gt; . Considere esto como una caracter&amp;iacute;stica experimental. No puede contener dos puntos ( &lt;code&gt;:&lt;/code&gt; ). Predeterminado: &lt;code&gt;SQLite&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e96c8aa1d6db1322edc422d5cc1ffbd12e71daed" translate="yes" xml:space="preserve">
          <source>Used Perl DBI driver. You can specify any available driver for this here, but it might not work. git-cvsserver is tested with &lt;code&gt;DBD::SQLite&lt;/code&gt;, reported to work with &lt;code&gt;DBD::Pg&lt;/code&gt;, and reported &lt;strong&gt;not&lt;/strong&gt; to work with &lt;code&gt;DBD::mysql&lt;/code&gt;. Experimental feature. May not contain double colons (&lt;code&gt;:&lt;/code&gt;). Default: &lt;code&gt;SQLite&lt;/code&gt;. See &lt;a href=&quot;git-cvsserver&quot;&gt;git-cvsserver[1]&lt;/a&gt;.</source>
          <target state="translated">Controlador Perl DBI usado. Puede especificar cualquier controlador disponible para esto aqu&amp;iacute;, pero es posible que no funcione. git-cvsserver se prueba con &lt;code&gt;DBD::SQLite&lt;/code&gt; , se informa que funciona con &lt;code&gt;DBD::Pg&lt;/code&gt; y se informa que &lt;strong&gt;no&lt;/strong&gt; funciona con &lt;code&gt;DBD::mysql&lt;/code&gt; . Caracter&amp;iacute;stica experimental. No puede contener dos puntos dobles ( &lt;code&gt;:&lt;/code&gt; ). Predeterminado: &lt;code&gt;SQLite&lt;/code&gt; . Consulte &lt;a href=&quot;git-cvsserver&quot;&gt;git-cvsserver [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3dcc5e110a8886980641614ba00244bbf70eb3c6" translate="yes" xml:space="preserve">
          <source>Used as %(if)&amp;hellip;​%(then)&amp;hellip;​%(end) or %(if)&amp;hellip;​%(then)&amp;hellip;​%(else)&amp;hellip;​%(end). If there is an atom with value or string literal after the %(if) then everything after the %(then) is printed, else if the %(else) atom is used, then everything after %(else) is printed. We ignore space when evaluating the string before %(then), this is useful when we use the %(HEAD) atom which prints either &quot;*&quot; or &quot; &quot; and we want to apply the &lt;code&gt;if&lt;/code&gt; condition only on the &lt;code&gt;HEAD&lt;/code&gt; ref. Append &quot;:equals=&amp;lt;string&amp;gt;&quot; or &quot;:notequals=&amp;lt;string&amp;gt;&quot; to compare the value between the %(if:&amp;hellip;​) and %(then) atoms with the given string.</source>
          <target state="translated">Usado como% (si)&amp;hellip;% (luego)&amp;hellip;% (fin) o% (si)&amp;hellip;% (luego)&amp;hellip;% (m&amp;aacute;s)&amp;hellip;% (fin). Si hay un &amp;aacute;tomo con valor o literal de cadena despu&amp;eacute;s de% (si), entonces se imprime todo lo que sigue a% (entonces), de lo contrario, si se usa el &amp;aacute;tomo% (m&amp;aacute;s), se imprime todo lo que sigue a% (m&amp;aacute;s). Ignoramos el espacio cuando evaluamos la cadena antes de% (entonces), esto es &amp;uacute;til cuando usamos el &amp;aacute;tomo% (HEAD) que imprime &quot;*&quot; o &quot;&quot; y queremos aplicar la condici&amp;oacute;n &lt;code&gt;if&lt;/code&gt; solo en la referencia &lt;code&gt;HEAD&lt;/code&gt; . Agregue &quot;: equals = &amp;lt;cadena&amp;gt;&quot; o &quot;: notequals = &amp;lt;cadena&amp;gt;&quot; para comparar el valor entre los &amp;aacute;tomos% (si:&amp;hellip;) y% (entonces) con la cadena dada.</target>
        </trans-unit>
        <trans-unit id="88972a7007de9e429d28d6bad7487052b23f9b65" translate="yes" xml:space="preserve">
          <source>Used to check that a bundle file is valid and will apply cleanly to the current repository. This includes checks on the bundle format itself as well as checking that the prerequisite commits exist and are fully linked in the current repository. &lt;code&gt;git bundle&lt;/code&gt; prints a list of missing commits, if any, and exits with a non-zero status.</source>
          <target state="translated">Se utiliza para comprobar que un archivo de paquete es v&amp;aacute;lido y se aplicar&amp;aacute; limpiamente al repositorio actual. Esto incluye verificaciones en el formato del paquete en s&amp;iacute;, as&amp;iacute; como tambi&amp;eacute;n verificar que las confirmaciones de requisitos previos existen y est&amp;aacute;n completamente vinculadas en el repositorio actual. &lt;code&gt;git bundle&lt;/code&gt; imprime una lista de las confirmaciones faltantes, si las hay, y sale con un estado distinto de cero.</target>
        </trans-unit>
        <trans-unit id="a81dfbb4b6756f63bb43c72d54c78dd02ef851d4" translate="yes" xml:space="preserve">
          <source>Used to create a bundle named &lt;code&gt;file&lt;/code&gt;. This requires the &lt;code&gt;&amp;lt;git-rev-list-args&amp;gt;&lt;/code&gt; arguments to define the bundle contents. &lt;code&gt;options&lt;/code&gt; contains the options specific to the &lt;code&gt;git bundle create&lt;/code&gt; subcommand.</source>
          <target state="translated">Se utiliza para crear un paquete llamado &lt;code&gt;file&lt;/code&gt; . Esto requiere los argumentos &lt;code&gt;&amp;lt;git-rev-list-args&amp;gt;&lt;/code&gt; para definir el contenido del paquete. &lt;code&gt;options&lt;/code&gt; contiene las opciones espec&amp;iacute;ficas del subcomando &lt;code&gt;git bundle create&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fe127bac2ab0b61ffb60c0284f3741224c9951e1" translate="yes" xml:space="preserve">
          <source>Used to enforce or disable certificate revocation checks in cURL when http.sslBackend is set to &quot;schannel&quot;. Defaults to &lt;code&gt;true&lt;/code&gt; if unset. Only necessary to disable this if Git consistently errors and the message is about checking the revocation status of a certificate. This option is ignored if cURL lacks support for setting the relevant SSL option at runtime.</source>
          <target state="translated">Se utiliza para hacer cumplir o deshabilitar las comprobaciones de revocaci&amp;oacute;n de certificados en cURL cuando http.sslBackend est&amp;aacute; configurado como &quot;schannel&quot;. El valor predeterminado es &lt;code&gt;true&lt;/code&gt; si no se configura. Solo es necesario deshabilitar esto si Git tiene errores consistentes y el mensaje trata de verificar el estado de revocaci&amp;oacute;n de un certificado. Esta opci&amp;oacute;n se ignora si cURL carece de soporte para configurar la opci&amp;oacute;n SSL relevante en tiempo de ejecuci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="526891fe0801e3a16c20e50ecde492e75d4f6490" translate="yes" xml:space="preserve">
          <source>Used to set the maximum load that we will still respond to gitweb queries. If the server load exceeds this value then gitweb will return &quot;503 Service Unavailable&quot; error. The server load is taken to be 0 if gitweb cannot determine its value. Currently it works only on Linux, where it uses &lt;code&gt;/proc/loadavg&lt;/code&gt;; the load there is the number of active tasks on the system &amp;mdash; processes that are actually running &amp;mdash; averaged over the last minute.</source>
          <target state="translated">Se usa para establecer la carga m&amp;aacute;xima que a&amp;uacute;n responderemos a las consultas de gitweb. Si la carga del servidor supera este valor, gitweb devolver&amp;aacute; el error &quot;503 Servicio no disponible&quot;. La carga del servidor se toma como 0 si gitweb no puede determinar su valor. Actualmente solo funciona en Linux, donde usa &lt;code&gt;/proc/loadavg&lt;/code&gt; ; la carga es el n&amp;uacute;mero de tareas activas en el sistema (procesos que se est&amp;aacute;n ejecutando realmente) promediados durante el &amp;uacute;ltimo minuto.</target>
        </trans-unit>
        <trans-unit id="184dba4369820f49a823e624aa006f74d3fc96ef" translate="yes" xml:space="preserve">
          <source>Used with --remote to specify the path to the &lt;code&gt;git-upload-archive&lt;/code&gt; on the remote side.</source>
          <target state="translated">Se usa con --remote para especificar la ruta al &lt;code&gt;git-upload-archive&lt;/code&gt; en el lado remoto.</target>
        </trans-unit>
        <trans-unit id="a985abb59dca2d23760f5b7ff00e7d00f2d0f353" translate="yes" xml:space="preserve">
          <source>Used with &lt;code&gt;--range-diff&lt;/code&gt;, tweak the heuristic which matches up commits between the previous and current series of patches by adjusting the creation/deletion cost fudge factor. See &lt;a href=&quot;git-range-diff&quot;&gt;git-range-diff[1]&lt;/a&gt;) for details.</source>
          <target state="translated">Usado con &lt;code&gt;--range-diff&lt;/code&gt; , modifica la heur&amp;iacute;stica que coincide con las confirmaciones entre la serie de parches anterior y actual ajustando el factor de modificaci&amp;oacute;n del costo de creaci&amp;oacute;n / eliminaci&amp;oacute;n. Consulte &lt;a href=&quot;git-range-diff&quot;&gt;git-range-diff [1]&lt;/a&gt; ) para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="9777df5e2d0f3ca27a559e53074b9f39896040e8" translate="yes" xml:space="preserve">
          <source>Used with the &lt;code&gt;fetch&lt;/code&gt; command.</source>
          <target state="translated">Usado con el comando &lt;code&gt;fetch&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ea99fa3d480e34606197cb808cc4a18c1d6b1306" translate="yes" xml:space="preserve">
          <source>User Manual</source>
          <target state="translated">Manual del usuario</target>
        </trans-unit>
        <trans-unit id="3d338fa6790366b9708dc60a5019a8d98f73c4b3" translate="yes" xml:space="preserve">
          <source>User configuration and preferences are stored at:</source>
          <target state="translated">La configuración y las preferencias del usuario se almacenan en</target>
        </trans-unit>
        <trans-unit id="ba3e3bfcde6395de2671f768450f02d32f692aba" translate="yes" xml:space="preserve">
          <source>User name (e.g., &lt;code&gt;user&lt;/code&gt; in &lt;code&gt;https://user@example.com/repo.git&lt;/code&gt;). If the config key has a user name it must match the user name in the URL exactly. If the config key does not have a user name, that config key will match a URL with any user name (including none), but at a lower precedence than a config key with a user name.</source>
          <target state="translated">Nombre de usuario (por ejemplo, &lt;code&gt;user&lt;/code&gt; en &lt;code&gt;https://user@example.com/repo.git&lt;/code&gt; ). Si la clave de configuraci&amp;oacute;n tiene un nombre de usuario, debe coincidir exactamente con el nombre de usuario en la URL. Si la clave de configuraci&amp;oacute;n no tiene un nombre de usuario, esa clave de configuraci&amp;oacute;n coincidir&amp;aacute; con una URL con cualquier nombre de usuario (incluido ninguno), pero con una precedencia menor que una clave de configuraci&amp;oacute;n con un nombre de usuario.</target>
        </trans-unit>
        <trans-unit id="9eabd3862d3bc88b6d20553afdc4c28a880bd15a" translate="yes" xml:space="preserve">
          <source>User specified as an option to all p4 commands, with &lt;code&gt;-u &amp;lt;user&amp;gt;&lt;/code&gt;. The environment variable &lt;code&gt;P4USER&lt;/code&gt; can be used instead.</source>
          <target state="translated">Usuario especificado como una opci&amp;oacute;n para todos los comandos p4, con &lt;code&gt;-u &amp;lt;user&amp;gt;&lt;/code&gt; . En su &lt;code&gt;P4USER&lt;/code&gt; se puede utilizar la variable de entorno P4USER .</target>
        </trans-unit>
        <trans-unit id="3129c28f60cb352aa378d9055c2dee4b71cd917d" translate="yes" xml:space="preserve">
          <source>User-specific configuration file. Also called &quot;global&quot; configuration file.</source>
          <target state="translated">Archivo de configuración específico del usuario.También llamado archivo de configuración &quot;global&quot;.</target>
        </trans-unit>
        <trans-unit id="53b3f2b51348a1a5a4076e004425d0d150df3f8e" translate="yes" xml:space="preserve">
          <source>User-specific credentials file.</source>
          <target state="translated">Archivo de credenciales específicas del usuario.</target>
        </trans-unit>
        <trans-unit id="fbb3c5af6a1b800cb6bfa442ae5c6ae5ee1a4454" translate="yes" xml:space="preserve">
          <source>Username for SMTP-AUTH. Default is the value of &lt;code&gt;sendemail.smtpUser&lt;/code&gt;; if a username is not specified (with &lt;code&gt;--smtp-user&lt;/code&gt; or &lt;code&gt;sendemail.smtpUser&lt;/code&gt;), then authentication is not attempted.</source>
          <target state="translated">Nombre de usuario para SMTP-AUTH. El valor predeterminado es &lt;code&gt;sendemail.smtpUser&lt;/code&gt; ; si no se especifica un nombre de usuario (con &lt;code&gt;--smtp-user&lt;/code&gt; o &lt;code&gt;sendemail.smtpUser&lt;/code&gt; ), no se intenta la autenticaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="dd5ba62269befa999225c8d360ebd4fd64f50001" translate="yes" xml:space="preserve">
          <source>Users may select an automated merge strategy from among the following using either -s/--strategy option or configuring notes.mergeStrategy accordingly:</source>
          <target state="translated">Los usuarios pueden seleccionar una estrategia de fusión automatizada de entre las siguientes utilizando la opción -s/-estrategia o configurando notes.mergeStrategy en consecuencia:</target>
        </trans-unit>
        <trans-unit id="312954bd3f459a8154fbfda7b5edb71c57c929c2" translate="yes" xml:space="preserve">
          <source>Users migrating from CVS may also want to read &lt;a href=&quot;gitcvs-migration&quot;&gt;gitcvs-migration[7]&lt;/a&gt;.</source>
          <target state="translated">Los usuarios que migran desde CVS tambi&amp;eacute;n pueden querer leer &lt;a href=&quot;gitcvs-migration&quot;&gt;gitcvs-migration [7]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d2fd200f233551c846ddc52433b7473972ba45cd" translate="yes" xml:space="preserve">
          <source>Using &amp;ldquo;assume unchanged&amp;rdquo; bit</source>
          <target state="translated">Usando el bit &quot;asumir sin cambios&quot;</target>
        </trans-unit>
        <trans-unit id="db59534f65c86c428a7a540c110ff1130d39acfc" translate="yes" xml:space="preserve">
          <source>Using &amp;ldquo;git add -A&amp;rdquo;</source>
          <target state="translated">Usando &quot;git add -A&quot;</target>
        </trans-unit>
        <trans-unit id="3f756864c1cac8254338a14f16b7888b4cd11774" translate="yes" xml:space="preserve">
          <source>Using &amp;ldquo;git commit -a&amp;rdquo;</source>
          <target state="translated">Usando &quot;git commit -a&quot;</target>
        </trans-unit>
        <trans-unit id="1ad6e2bdca2ef33d6f60d1165c40af77488df73e" translate="yes" xml:space="preserve">
          <source>Using --cacheinfo or --info-only</source>
          <target state="translated">Usando --cacheinfo o --info-solamente</target>
        </trans-unit>
        <trans-unit id="63a49bc3316ec7fe7ab1c50a106ab3c187422a12" translate="yes" xml:space="preserve">
          <source>Using --index-info</source>
          <target state="translated">Usando --index-info</target>
        </trans-unit>
        <trans-unit id="9465002aca9e596e405478c595d6ec82ecf19f4d" translate="yes" xml:space="preserve">
          <source>Using --recurse-submodules can only fetch new commits in already checked out submodules right now. When e.g. upstream added a new submodule in the just fetched commits of the superproject the submodule itself cannot be fetched, making it impossible to check out that submodule later without having to do a fetch again. This is expected to be fixed in a future Git version.</source>
          <target state="translated">El uso de --recurse-submódulos sólo puede traer nuevas confirmaciones en submódulos ya comprobados en este momento.Por ejemplo,cuando se añade un nuevo submódulo en las confirmaciones recién obtenidas del superproyecto,el submódulo en sí no puede obtenerse,lo que hace imposible obtener ese submódulo más tarde sin tener que volver a obtenerlo.Se espera que esto se arregle en una futura versión de Git.</target>
        </trans-unit>
        <trans-unit id="3b6c4766d3d128d670a5d5adf42fc526da676a66" translate="yes" xml:space="preserve">
          <source>Using --recurse-submodules will update the content of all initialized submodules according to the commit recorded in the superproject by calling read-tree recursively, also setting the submodules HEAD to be detached at that commit.</source>
          <target state="translated">El uso de --recurse-submodules actualizará el contenido de todos los submódulos inicializados de acuerdo con la confirmación registrada en el superproyecto,llamando recursivamente a read-tree,estableciendo también que los submódulos HEAD se separen en esa confirmación.</target>
        </trans-unit>
        <trans-unit id="8315f077dd8f5ad49468aff013d2df68acafcb5e" translate="yes" xml:space="preserve">
          <source>Using --refresh</source>
          <target state="translated">Usando --refresco</target>
        </trans-unit>
        <trans-unit id="0565ce691b52b5953c2fb97dfb806a2f764f48e2" translate="yes" xml:space="preserve">
          <source>Using --temp or --stage=all</source>
          <target state="translated">Usando --temp o --stage=all</target>
        </trans-unit>
        <trans-unit id="509888a40362653e71adbbdc6d4e59bc0d3d4ce4" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;--index-filter&lt;/code&gt; with &lt;code&gt;git rm&lt;/code&gt; yields a significantly faster version. Like with using &lt;code&gt;rm filename&lt;/code&gt;, &lt;code&gt;git rm --cached filename&lt;/code&gt; will fail if the file is absent from the tree of a commit. If you want to &quot;completely forget&quot; a file, it does not matter when it entered history, so we also add &lt;code&gt;--ignore-unmatch&lt;/code&gt;:</source>
          <target state="translated">El uso de &lt;code&gt;--index-filter&lt;/code&gt; con &lt;code&gt;git rm&lt;/code&gt; produce una versi&amp;oacute;n significativamente m&amp;aacute;s r&amp;aacute;pida. Al igual que con el uso de &lt;code&gt;rm filename&lt;/code&gt; , &lt;code&gt;git rm --cached filename&lt;/code&gt; fallar&amp;aacute; si el archivo no est&amp;aacute; en el &amp;aacute;rbol de una confirmaci&amp;oacute;n. Si desea &quot;olvidar por completo&quot; un archivo, no importa cu&amp;aacute;ndo ingres&amp;oacute; al historial, por lo que tambi&amp;eacute;n agregamos &lt;code&gt;--ignore-unmatch&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="47e7ecf39552b28db7a0c771cb5239db7d4a81af" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;--recurse-submodules&lt;/code&gt; will update the content of all initialized submodules according to the commit recorded in the superproject. If local modifications in a submodule would be overwritten the checkout will fail unless &lt;code&gt;-f&lt;/code&gt; is used. If nothing (or &lt;code&gt;--no-recurse-submodules&lt;/code&gt;) is used, the work trees of submodules will not be updated. Just like &lt;a href=&quot;git-submodule&quot;&gt;git-submodule[1]&lt;/a&gt;, this will detach &lt;code&gt;HEAD&lt;/code&gt; of the submodule.</source>
          <target state="translated">El uso de &lt;code&gt;--recurse-submodules&lt;/code&gt; actualizar&amp;aacute; el contenido de todos los subm&amp;oacute;dulos inicializados de acuerdo con la confirmaci&amp;oacute;n registrada en el superproyecto. Si se sobrescribieran las modificaciones locales en un subm&amp;oacute;dulo, la comprobaci&amp;oacute;n fallar&amp;aacute; a menos que se use &lt;code&gt;-f&lt;/code&gt; . Si no se utiliza nada (o &lt;code&gt;--no-recurse-submodules&lt;/code&gt; ), los &amp;aacute;rboles de trabajo de los subm&amp;oacute;dulos no se actualizar&amp;aacute;n. Al igual que &lt;a href=&quot;git-submodule&quot;&gt;git-submodule [1]&lt;/a&gt; , esto separar&amp;aacute; &lt;code&gt;HEAD&lt;/code&gt; del subm&amp;oacute;dulo.</target>
        </trans-unit>
        <trans-unit id="87e05fa35b92ebd2beac592a4000f99e52c8fa99" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;--recurse-submodules&lt;/code&gt; will update the content of all initialized submodules according to the commit recorded in the superproject. If nothing (or &lt;code&gt;--no-recurse-submodules&lt;/code&gt;) is used, the work trees of submodules will not be updated. Just like &lt;a href=&quot;git-submodule&quot;&gt;git-submodule[1]&lt;/a&gt;, this will detach &lt;code&gt;HEAD&lt;/code&gt; of the submodules.</source>
          <target state="translated">El uso de &lt;code&gt;--recurse-submodules&lt;/code&gt; actualizar&amp;aacute; el contenido de todos los subm&amp;oacute;dulos inicializados de acuerdo con la confirmaci&amp;oacute;n registrada en el superproyecto. Si no se utiliza nada (o &lt;code&gt;--no-recurse-submodules&lt;/code&gt; ), los &amp;aacute;rboles de trabajo de los subm&amp;oacute;dulos no se actualizar&amp;aacute;n. Al igual que &lt;a href=&quot;git-submodule&quot;&gt;git-submodule [1]&lt;/a&gt; , esto separar&amp;aacute; &lt;code&gt;HEAD&lt;/code&gt; de los subm&amp;oacute;dulos.</target>
        </trans-unit>
        <trans-unit id="131907fc18369579f75831dbffd3a45262caaa68" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;-a&lt;/code&gt; would conflate &amp;lt;remote&amp;gt; with any local branches you happen to have been prefixed with the same &amp;lt;remote&amp;gt; pattern.</source>
          <target state="translated">El uso de &lt;code&gt;-a&lt;/code&gt; combinar&amp;iacute;a &amp;lt;remote&amp;gt; con cualquier rama local que haya tenido el prefijo con el mismo patr&amp;oacute;n &amp;lt;remote&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="bc196497d8f80228e3ec0969c92ba077224b9158" translate="yes" xml:space="preserve">
          <source>Using &lt;em&gt;git checkout-index&lt;/em&gt; to &quot;export an entire tree&quot;</source>
          <target state="translated">Uso de &lt;em&gt;git checkout-index&lt;/em&gt; para &quot;exportar un &amp;aacute;rbol completo&quot;</target>
        </trans-unit>
        <trans-unit id="f145740948f023493614f8cb28fc352a33b08d80" translate="yes" xml:space="preserve">
          <source>Using a limit</source>
          <target state="translated">Usando un límite</target>
        </trans-unit>
        <trans-unit id="0d18e7415acaf5bf1693b96116e4340271619597" translate="yes" xml:space="preserve">
          <source>Using another project while maintaining independent history. Submodules allow you to contain the working tree of another project within your own working tree while keeping the history of both projects separate. Also, since submodules are fixed to an arbitrary version, the other project can be independently developed without affecting the superproject, allowing the superproject project to fix itself to new versions only when desired.</source>
          <target state="translated">Usando otro proyecto mientras se mantiene la historia independiente.Los submódulos le permiten contener el árbol de trabajo de otro proyecto dentro de su propio árbol de trabajo mientras mantiene la historia de ambos proyectos por separado.Además,como los submódulos se fijan a una versión arbitraria,el otro proyecto puede desarrollarse independientemente sin afectar al superproyecto,lo que permite que el proyecto del superproyecto se fije en nuevas versiones sólo cuando se desee.</target>
        </trans-unit>
        <trans-unit id="03266ad998c58f3651e774794904a59499884e04" translate="yes" xml:space="preserve">
          <source>Using complex scripts</source>
          <target state="translated">Usando guiones complejos</target>
        </trans-unit>
        <trans-unit id="9a4e17fa716627d801ba04248e7c13675c63f6bf" translate="yes" xml:space="preserve">
          <source>Using direct mode with SSL:</source>
          <target state="translated">Usando el modo directo con SSL:</target>
        </trans-unit>
        <trans-unit id="80be60b71aa62e009a5472e7b71ecca69fb605f2" translate="yes" xml:space="preserve">
          <source>Using direct mode:</source>
          <target state="translated">Usando el modo directo:</target>
        </trans-unit>
        <trans-unit id="1c1bc19943239ea53498134ee5024657c6f7482f" translate="yes" xml:space="preserve">
          <source>Using git for collaboration</source>
          <target state="translated">Usar el git para la colaboración</target>
        </trans-unit>
        <trans-unit id="e742dd237e897f0c09d1168ed38eeca1316d409b" translate="yes" xml:space="preserve">
          <source>Using interactive rebases</source>
          <target state="translated">Utilizando las bases interactivas</target>
        </trans-unit>
        <trans-unit id="16c9cb76d4ea0981714eee54828fc3305174e2d5" translate="yes" xml:space="preserve">
          <source>Using macro attributes</source>
          <target state="translated">Usando atributos de macro</target>
        </trans-unit>
        <trans-unit id="0bcad514939a1a512d30defc1dd83a6988408bd1" translate="yes" xml:space="preserve">
          <source>Using more options generally further limits the output (e.g. &lt;code&gt;--since=&amp;lt;date1&amp;gt;&lt;/code&gt; limits to commits newer than &lt;code&gt;&amp;lt;date1&amp;gt;&lt;/code&gt;, and using it with &lt;code&gt;--grep=&amp;lt;pattern&amp;gt;&lt;/code&gt; further limits to commits whose log message has a line that matches &lt;code&gt;&amp;lt;pattern&amp;gt;&lt;/code&gt;), unless otherwise noted.</source>
          <target state="translated">El uso de m&amp;aacute;s opciones generalmente limita a&amp;uacute;n m&amp;aacute;s la salida (p &lt;code&gt;--since=&amp;lt;date1&amp;gt;&lt;/code&gt; Ej., --Since = &amp;lt;date1&amp;gt; limita a las confirmaciones m&amp;aacute;s recientes que &lt;code&gt;&amp;lt;date1&amp;gt;&lt;/code&gt; , y us&amp;aacute;ndolo con &lt;code&gt;--grep=&amp;lt;pattern&amp;gt;&lt;/code&gt; l&amp;iacute;mites adicionales para las confirmaciones cuyo mensaje de registro tiene una l&amp;iacute;nea que coincide con &lt;code&gt;&amp;lt;pattern&amp;gt;&lt;/code&gt; ), a menos que se indique lo contrario.</target>
        </trans-unit>
        <trans-unit id="aab9e25047cbd960c71a3d6743c695a0fbcee99d" translate="yes" xml:space="preserve">
          <source>Using refspecs explicitly:</source>
          <target state="translated">Usando refspecs explícitamente:</target>
        </trans-unit>
        <trans-unit id="e240eb205361a2a50754a2cbbad5230917e3c8f6" translate="yes" xml:space="preserve">
          <source>Using test suites and git bisect together</source>
          <target state="translated">Usando suites de pruebas y git bisect juntos</target>
        </trans-unit>
        <trans-unit id="8fdfb0e1e33426ffa586ab6e967bc34118a45d25" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;--submodule=log&lt;/code&gt; option with &lt;a href=&quot;git-diff&quot;&gt;git-diff[1]&lt;/a&gt; will provide that information too.</source>
          <target state="translated">El uso de la opci&amp;oacute;n &lt;code&gt;--submodule=log&lt;/code&gt; con &lt;a href=&quot;git-diff&quot;&gt;git-diff [1]&lt;/a&gt; tambi&amp;eacute;n proporcionar&amp;aacute; esa informaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="d42f8d8f39d5c1ce54e65e242137998175012054" translate="yes" xml:space="preserve">
          <source>Using these options, &lt;a href=&quot;git-rev-list&quot;&gt;git-rev-list[1]&lt;/a&gt; will act similar to the more specialized family of commit log tools: &lt;a href=&quot;git-log&quot;&gt;git-log[1]&lt;/a&gt;, &lt;a href=&quot;git-show&quot;&gt;git-show[1]&lt;/a&gt;, and &lt;a href=&quot;git-whatchanged&quot;&gt;git-whatchanged[1]&lt;/a&gt;</source>
          <target state="translated">Usando estas opciones, &lt;a href=&quot;git-rev-list&quot;&gt;git-rev-list [1]&lt;/a&gt; actuar&amp;aacute; de manera similar a la familia m&amp;aacute;s especializada de herramientas de registro de confirmaci&amp;oacute;n: &lt;a href=&quot;git-log&quot;&gt;git-log [1]&lt;/a&gt; , &lt;a href=&quot;git-show&quot;&gt;git-show [1]&lt;/a&gt; y &lt;a href=&quot;git-whatchanged&quot;&gt;git-whatchanged [1]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a34d360db274a11502bc402ef7758f2bc5adf11b" translate="yes" xml:space="preserve">
          <source>Using this helper will store your passwords unencrypted on disk, protected only by filesystem permissions. If this is not an acceptable security tradeoff, try &lt;a href=&quot;git-credential-cache&quot;&gt;git-credential-cache[1]&lt;/a&gt;, or find a helper that integrates with secure storage provided by your operating system.</source>
          <target state="translated">El uso de este ayudante almacenar&amp;aacute; sus contrase&amp;ntilde;as sin cifrar en el disco, protegidas solo por permisos del sistema de archivos. Si esta no es una compensaci&amp;oacute;n de seguridad aceptable, pruebe &lt;a href=&quot;git-credential-cache&quot;&gt;git-credential-cache [1]&lt;/a&gt; o busque un ayudante que se integre con el almacenamiento seguro proporcionado por su sistema operativo.</target>
        </trans-unit>
        <trans-unit id="86d0ca06bdb5a3aacec696a9b10115a302a90ea4" translate="yes" xml:space="preserve">
          <source>Using this hook, it is easy to generate mails describing the updates to the repository. This example script sends one mail message per ref listing the commits pushed to the repository, and logs the push certificates of signed pushes with good signatures to a logger service:</source>
          <target state="translated">Usando este gancho,es fácil generar correos describiendo las actualizaciones del repositorio.Este script de ejemplo envía un mensaje de correo por cada refiriéndose a las confirmaciones empujadas al repositorio,y registra los certificados de empuje de empujes firmados con buenas firmas a un servicio de registro:</target>
        </trans-unit>
        <trans-unit id="7ae98ad0643543d139a0ccded2d96be6c57e816c" translate="yes" xml:space="preserve">
          <source>Using this option for any other purpose (don&amp;rsquo;t ask) is very strongly discouraged.</source>
          <target state="translated">Se desaconseja encarecidamente utilizar esta opci&amp;oacute;n para cualquier otro prop&amp;oacute;sito (no preguntes).</target>
        </trans-unit>
        <trans-unit id="ebe89d9e15d8a582f6b4a48c6c03d60cf9c673f1" translate="yes" xml:space="preserve">
          <source>Using tunnel mode:</source>
          <target state="translated">Usando el modo túnel:</target>
        </trans-unit>
        <trans-unit id="f17a1449e9ed80dcff59f550977b6693d42b10bf" translate="yes" xml:space="preserve">
          <source>Usual 3-way file level merge for text files. Conflicted regions are marked with conflict markers &lt;code&gt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&lt;/code&gt;, &lt;code&gt;=======&lt;/code&gt; and &lt;code&gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&lt;/code&gt;. The version from your branch appears before the &lt;code&gt;=======&lt;/code&gt; marker, and the version from the merged branch appears after the &lt;code&gt;=======&lt;/code&gt; marker.</source>
          <target state="translated">Fusi&amp;oacute;n habitual de niveles de archivo de 3 v&amp;iacute;as para archivos de texto. Las regiones en conflicto se marcan con marcadores de conflicto &lt;code&gt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&lt;/code&gt; , &lt;code&gt;=======&lt;/code&gt; y &lt;code&gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&lt;/code&gt; . La versi&amp;oacute;n de su rama aparece antes del marcador &lt;code&gt;=======&lt;/code&gt; , y la versi&amp;oacute;n de la rama fusionada aparece despu&amp;eacute;s del marcador &lt;code&gt;=======&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6cb51fab051882aaba81e0715d7acfa80e2ce09c" translate="yes" xml:space="preserve">
          <source>Usually &lt;code&gt;git gc&lt;/code&gt; runs very quickly while providing good disk space utilization and performance. This option will cause &lt;code&gt;git gc&lt;/code&gt; to more aggressively optimize the repository at the expense of taking much more time. The effects of this optimization are mostly persistent. See the &quot;AGGRESSIVE&quot; section below for details.</source>
          <target state="translated">Por lo general, &lt;code&gt;git gc&lt;/code&gt; se ejecuta muy r&amp;aacute;pido y proporciona una buena utilizaci&amp;oacute;n y rendimiento del espacio en disco. Esta opci&amp;oacute;n har&amp;aacute; que &lt;code&gt;git gc&lt;/code&gt; optimice m&amp;aacute;s agresivamente el repositorio a expensas de tomar mucho m&amp;aacute;s tiempo. Los efectos de esta optimizaci&amp;oacute;n son en su mayor&amp;iacute;a persistentes. Consulte la secci&amp;oacute;n &quot;AGRESIVO&quot; a continuaci&amp;oacute;n para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="da9e2cbf852524ee1edb371514af799c05f82c93" translate="yes" xml:space="preserve">
          <source>Usually a merge requires the index file as well as the files in the working tree to be up to date with the current head commit, in order not to lose local changes. This flag disables the check with the working tree and is meant to be used when creating a merge of trees that are not directly related to the current working tree status into a temporary index file.</source>
          <target state="translated">Por lo general,una fusión requiere que el archivo de índice,así como los archivos del árbol de trabajo,estén actualizados con el head commit actual,para no perder los cambios locales.Este indicador desactiva la comprobación con el árbol de trabajo y está pensado para ser utilizado cuando se crea una fusión de árboles que no están directamente relacionados con el estado actual del árbol de trabajo en un fichero índice temporal.</target>
        </trans-unit>
        <trans-unit id="27214bb5573e76f1f8a1f21396536681c10927d6" translate="yes" xml:space="preserve">
          <source>Usually a three-way merge by &lt;code&gt;git read-tree&lt;/code&gt; resolves the merge for really trivial cases and leaves other cases unresolved in the index, so that porcelains can implement different merge policies. This flag makes the command resolve a few more cases internally:</source>
          <target state="translated">Por lo general, una combinaci&amp;oacute;n de tres v&amp;iacute;as por &lt;code&gt;git read-tree&lt;/code&gt; resuelve la combinaci&amp;oacute;n para casos realmente triviales y deja otros casos sin resolver en el &amp;iacute;ndice, de modo que las porcelanas pueden implementar diferentes pol&amp;iacute;ticas de combinaci&amp;oacute;n. Esta bandera hace que el comando resuelva algunos casos m&amp;aacute;s internamente:</target>
        </trans-unit>
        <trans-unit id="1a018c180f83561166ef04fc1c1b049dd7bef5e3" translate="yes" xml:space="preserve">
          <source>Usually given &quot;&amp;lt;feature&amp;gt;&quot; is configurable via the &lt;code&gt;gitweb.&amp;lt;feature&amp;gt;&lt;/code&gt; config variable in the per-repository Git configuration file.</source>
          <target state="translated">Por lo general, la &quot;&amp;lt;funci&amp;oacute;n&amp;gt;&quot; se puede configurar mediante la &lt;code&gt;gitweb.&amp;lt;feature&amp;gt;&lt;/code&gt; configuraci&amp;oacute;n gitweb. &amp;lt;Funci&amp;oacute;n&amp;gt; en el archivo de configuraci&amp;oacute;n de Git por repositorio.</target>
        </trans-unit>
        <trans-unit id="06bd62b74600c2b58fc5390378d7102461c2b477" translate="yes" xml:space="preserve">
          <source>Usually it is easier to configure any desired options through your personal &lt;code&gt;.ssh/config&lt;/code&gt; file. Please consult your ssh documentation for further details.</source>
          <target state="translated">Por lo general, es m&amp;aacute;s f&amp;aacute;cil configurar las opciones deseadas a trav&amp;eacute;s de su &lt;code&gt;.ssh/config&lt;/code&gt; personal .ssh / config . Consulte la documentaci&amp;oacute;n de su ssh para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="e92c22e35ceb9b2c8da5295a992718e30d5c9f60" translate="yes" xml:space="preserve">
          <source>Usually recording a commit that has the exact same tree as its sole parent commit is a mistake, and the command prevents you from making such a commit. This option bypasses the safety, and is primarily for use by foreign SCM interface scripts.</source>
          <target state="translated">Por lo general,registrar un compromiso que tiene exactamente el mismo árbol que el de su único padre es un error,y el comando le impide hacer tal compromiso.Esta opción pasa por alto la seguridad,y es principalmente para el uso de scripts de interfaz SCM extranjeros.</target>
        </trans-unit>
        <trans-unit id="8ce3f0d516dc2a9d67b8e4ba143055eaf7bab452" translate="yes" xml:space="preserve">
          <source>Usually the command automatically creates a sequence of commits. This flag applies the changes necessary to cherry-pick each named commit to your working tree and the index, without making any commit. In addition, when this option is used, your index does not have to match the HEAD commit. The cherry-pick is done against the beginning state of your index.</source>
          <target state="translated">Por lo general,el comando crea automáticamente una secuencia de confirmaciones.Esta bandera aplica los cambios necesarios para seleccionar cada confirmación nombrada en su árbol de trabajo y en el índice,sin hacer ninguna confirmación.Además,cuando se usa esta opción,tu índice no tiene que coincidir con la confirmación de HEAD.La selección se realiza contra el estado inicial del índice.</target>
        </trans-unit>
        <trans-unit id="55875ee1e78ad1cfc5a25d1e098bc17781327203" translate="yes" xml:space="preserve">
          <source>Usually the command automatically creates some commits with commit log messages stating which commits were reverted. This flag applies the changes necessary to revert the named commits to your working tree and the index, but does not make the commits. In addition, when this option is used, your index does not have to match the HEAD commit. The revert is done against the beginning state of your index.</source>
          <target state="translated">Normalmente el comando crea automáticamente algunas confirmaciones con mensajes de registro de confirmaciones que indican qué confirmaciones fueron revertidas.Esta bandera aplica los cambios necesarios para revertir las confirmaciones nombradas a su árbol de trabajo y al índice,pero no hace las confirmaciones.Además,cuando se utiliza esta opción,su índice no tiene que coincidir con la confirmación de HEAD.La reversión se hace contra el estado inicial de su índice.</target>
        </trans-unit>
        <trans-unit id="51d5f6e8faedb5ef4d1204f14e2f7ab2d7b77eaf" translate="yes" xml:space="preserve">
          <source>Usually the command stops output upon showing the commit that is the common ancestor of all the branches. This flag tells the command to go &amp;lt;n&amp;gt; more common commits beyond that. When &amp;lt;n&amp;gt; is negative, display only the &amp;lt;reference&amp;gt;s given, without showing the commit ancestry tree.</source>
          <target state="translated">Por lo general, el comando detiene la salida al mostrar la confirmaci&amp;oacute;n que es el ancestro com&amp;uacute;n de todas las ramas. Esta bandera le dice al comando que vaya &amp;lt;n&amp;gt; m&amp;aacute;s confirmaciones comunes m&amp;aacute;s all&amp;aacute; de eso. Cuando &amp;lt;n&amp;gt; es negativo, muestra solo las &amp;lt;reference&amp;gt; dadas, sin mostrar el &amp;aacute;rbol de ascendencia de confirmaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="29097abe7ecd686605680556737a55dc5b7468af" translate="yes" xml:space="preserve">
          <source>Usually the object names are output in SHA-1 form (with possible &lt;code&gt;^&lt;/code&gt; prefix); this option makes them output in a form as close to the original input as possible.</source>
          <target state="translated">Por lo general, los nombres de los objetos se muestran en formato SHA-1 (con el posible prefijo &lt;code&gt;^&lt;/code&gt; ); esta opci&amp;oacute;n hace que se muestren en una forma lo m&amp;aacute;s cercana posible a la entrada original.</target>
        </trans-unit>
        <trans-unit id="576f849692364345fa924f476c3413707294c315" translate="yes" xml:space="preserve">
          <source>Usually the output is made one line per flag and parameter. This option makes output a single line, properly quoted for consumption by shell. Useful when you expect your parameter to contain whitespaces and newlines (e.g. when using pickaxe &lt;code&gt;-S&lt;/code&gt; with &lt;code&gt;git diff-*&lt;/code&gt;). In contrast to the &lt;code&gt;--sq-quote&lt;/code&gt; option, the command input is still interpreted as usual.</source>
          <target state="translated">Por lo general, la salida se realiza en una l&amp;iacute;nea por indicador y par&amp;aacute;metro. Esta opci&amp;oacute;n hace que la salida sea una sola l&amp;iacute;nea, debidamente cotizada para consumo por shell. &amp;Uacute;til cuando espera que su par&amp;aacute;metro contenga espacios en blanco y l&amp;iacute;neas nuevas (por ejemplo, cuando usa pickaxe &lt;code&gt;-S&lt;/code&gt; con &lt;code&gt;git diff-*&lt;/code&gt; ). A diferencia de la opci&amp;oacute;n &lt;code&gt;--sq-quote&lt;/code&gt; , la entrada del comando todav&amp;iacute;a se interpreta como de costumbre.</target>
        </trans-unit>
        <trans-unit id="52303fe63fddea8a07d49fe1df917ff950ba6541" translate="yes" xml:space="preserve">
          <source>Usually the program removes email cruft from the Subject: header line to extract the title line for the commit log message. This option prevents this munging, and is most useful when used to read back &lt;code&gt;git format-patch -k&lt;/code&gt; output.</source>
          <target state="translated">Por lo general, el programa elimina el correo electr&amp;oacute;nico de la l&amp;iacute;nea de encabezado Asunto: para extraer la l&amp;iacute;nea de t&amp;iacute;tulo del mensaje de registro de confirmaci&amp;oacute;n. Esta opci&amp;oacute;n evita este error y es m&amp;aacute;s &amp;uacute;til cuando se usa para volver a leer la salida de &lt;code&gt;git format-patch -k&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="12904fba6e8c31d350b5463557502fba670802b3" translate="yes" xml:space="preserve">
          <source>Usually you cannot cherry-pick a merge because you do not know which side of the merge should be considered the mainline. This option specifies the parent number (starting from 1) of the mainline and allows cherry-pick to replay the change relative to the specified parent.</source>
          <target state="translated">Normalmente no se puede elegir una fusión porque no se sabe qué lado de la fusión debe ser considerado la línea principal.Esta opción especifica el número de padre (a partir de 1)de la línea principal y permite que cherry-pick reproduzca el cambio en relación con el padre especificado.</target>
        </trans-unit>
        <trans-unit id="8ec09d5ac366ce3cd2a5e3c6c67d0b4fe311e4bf" translate="yes" xml:space="preserve">
          <source>Usually you cannot revert a merge because you do not know which side of the merge should be considered the mainline. This option specifies the parent number (starting from 1) of the mainline and allows revert to reverse the change relative to the specified parent.</source>
          <target state="translated">Normalmente no se puede revertir una fusión porque no se sabe qué lado de la fusión debe ser considerado la línea principal.Esta opción especifica el número de padre (empezando por 1)de la línea principal y permite revertir el cambio en relación con el padre especificado.</target>
        </trans-unit>
        <trans-unit id="6969d1a350dfc3fafb277e2e6995e5ac7a289ac5" translate="yes" xml:space="preserve">
          <source>Usually you should not need to change (adjust) any of configuration variables described below; they should be automatically set by gitweb to correct value.</source>
          <target state="translated">Normalmente no es necesario cambiar (ajustar)ninguna de las variables de configuración descritas a continuación;deben ser ajustadas automáticamente por gitweb para corregir el valor.</target>
        </trans-unit>
        <trans-unit id="b172c85defacdb686b541793ef9e8aeee0cdf60e" translate="yes" xml:space="preserve">
          <source>Usually you would want to use &lt;code&gt;git fetch&lt;/code&gt;, which is a higher level wrapper of this command, instead.</source>
          <target state="translated">Por lo general, querr&amp;aacute; usar &lt;code&gt;git fetch&lt;/code&gt; , que es un contenedor de nivel superior de este comando.</target>
        </trans-unit>
        <trans-unit id="bec645de31c299cb10f93b6253e1e1669a5f0a31" translate="yes" xml:space="preserve">
          <source>Usually you would want to use &lt;code&gt;git push&lt;/code&gt;, which is a higher-level wrapper of this command, instead. See &lt;a href=&quot;git-push&quot;&gt;git-push[1]&lt;/a&gt;.</source>
          <target state="translated">Por lo general, querr&amp;aacute; usar &lt;code&gt;git push&lt;/code&gt; , que es un contenedor de nivel superior de este comando. Consulte &lt;a href=&quot;git-push&quot;&gt;git-push [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5982263578e4f00875c00a40da810fe92911cebc" translate="yes" xml:space="preserve">
          <source>Usually, &quot;git push&quot; refuses to update a remote ref that is not an ancestor of the local ref used to overwrite it.</source>
          <target state="translated">Normalmente,&quot;git push&quot; se niega a actualizar un ref remoto que no es un ancestro del ref local utilizado para sobrescribirlo.</target>
        </trans-unit>
        <trans-unit id="f8497b6ab754b20f8d36f9efb8dfea581706bc5d" translate="yes" xml:space="preserve">
          <source>Usually, dangling blobs and trees aren&amp;rsquo;t very interesting. They&amp;rsquo;re almost always the result of either being a half-way mergebase (the blob will often even have the conflict markers from a merge in it, if you have had conflicting merges that you fixed up by hand), or simply because you interrupted a &lt;code&gt;git fetch&lt;/code&gt; with ^C or something like that, leaving &lt;code&gt;some&lt;/code&gt; of the new objects in the object database, but just dangling and useless.</source>
          <target state="translated">Por lo general, las manchas y los &amp;aacute;rboles colgantes no son muy interesantes. Casi siempre son el resultado de ser una base de fusi&amp;oacute;n a mitad de camino (el blob a menudo incluso tendr&amp;aacute; los marcadores de conflicto de una fusi&amp;oacute;n, si ha tenido fusiones conflictivas que arregl&amp;oacute; a mano), o simplemente porque interrumpi&amp;oacute; un &lt;code&gt;git fetch&lt;/code&gt; con ^ C o algo as&amp;iacute;, dejando &lt;code&gt;some&lt;/code&gt; de los nuevos objetos en la base de datos de objetos, pero colgando e in&amp;uacute;tiles.</target>
        </trans-unit>
        <trans-unit id="ebecb811fcb50ea2c9e80ad196b73df5b02ee5fc" translate="yes" xml:space="preserve">
          <source>Usually, the command refuses to update a remote ref that is not an ancestor of the local ref used to overwrite it. Also, when &lt;code&gt;--force-with-lease&lt;/code&gt; option is used, the command refuses to update a remote ref whose current value does not match what is expected.</source>
          <target state="translated">Por lo general, el comando se niega a actualizar una referencia remota que no es un antepasado de la referencia local utilizada para sobrescribirla. Adem&amp;aacute;s, cuando se usa la opci&amp;oacute;n &lt;code&gt;--force-with-lease&lt;/code&gt; , el comando se niega a actualizar una referencia remota cuyo valor actual no coincide con el esperado.</target>
        </trans-unit>
        <trans-unit id="1039e5d0aca0474d85bb0cc56a14c21769cd56ed" translate="yes" xml:space="preserve">
          <source>Usually, the command refuses to update a remote ref that is not an ancestor of the local ref used to overwrite it. This flag disables the check. What this means is that the remote repository can lose commits; use it with care.</source>
          <target state="translated">Por lo general,el comando se niega a actualizar un ref remoto que no es un ancestro del ref local utilizado para sobrescribirlo.Esta bandera desactiva la comprobación.Lo que significa que el repositorio remoto puede perder confirmaciones;úsalo con cuidado.</target>
        </trans-unit>
        <trans-unit id="b573cab97a4c7ff4e65c78f089627a289eeb14b6" translate="yes" xml:space="preserve">
          <source>Valid &lt;code&gt;&amp;lt;type&amp;gt;&lt;/code&gt;'s include:</source>
          <target state="translated">Los &lt;code&gt;&amp;lt;type&amp;gt;&lt;/code&gt; v&amp;aacute;lidos incluyen:</target>
        </trans-unit>
        <trans-unit id="2f441e23dc9e42a84676feea9743dbd62f2c9b12" translate="yes" xml:space="preserve">
          <source>Valid object types are:</source>
          <target state="translated">Los tipos de objetos válidos son:</target>
        </trans-unit>
        <trans-unit id="9b5bd1c32c0119d43f13ecb3f634510bb032afd7" translate="yes" xml:space="preserve">
          <source>Validate packed Git archive files</source>
          <target state="translated">Validar los archivos empaquetados de Git</target>
        </trans-unit>
        <trans-unit id="c95efe4a20b3c90ba09bca423cb347dacda4f997" translate="yes" xml:space="preserve">
          <source>Validates the GPG signature created by &lt;code&gt;git commit -S&lt;/code&gt;.</source>
          <target state="translated">Valida la firma GPG creada por &lt;code&gt;git commit -S&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ee833db09826b15f6656c228fc09101a4d262c96" translate="yes" xml:space="preserve">
          <source>Validates the gpg signature created by &lt;code&gt;git tag&lt;/code&gt;.</source>
          <target state="translated">Valida la firma gpg creada por la &lt;code&gt;git tag&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b1564f6b1512cbfa3cfcebc9a5badb6b239954f1" translate="yes" xml:space="preserve">
          <source>Values</source>
          <target state="translated">Values</target>
        </trans-unit>
        <trans-unit id="38ecbfb58a1b4075db82e349628396bb680485d8" translate="yes" xml:space="preserve">
          <source>Values for other tools can be used if there is a corresponding &lt;code&gt;man.&amp;lt;tool&amp;gt;.cmd&lt;/code&gt; configuration entry (see below).</source>
          <target state="translated">Los valores para otras herramientas se pueden usar si hay una entrada de configuraci&amp;oacute;n &lt;code&gt;man.&amp;lt;tool&amp;gt;.cmd&lt;/code&gt; correspondiente (ver m&amp;aacute;s abajo).</target>
        </trans-unit>
        <trans-unit id="4590af9796b7774b94529a47844bbbd8cd70381f" translate="yes" xml:space="preserve">
          <source>Values obtained in later configuration files override values obtained earlier in the above sequence.</source>
          <target state="translated">Los valores obtenidos en archivos de configuración posteriores anulan los valores obtenidos anteriormente en la secuencia anterior.</target>
        </trans-unit>
        <trans-unit id="42a2c91c112ab20fb86d229e79049c16aac8f47b" translate="yes" xml:space="preserve">
          <source>Values of many variables are treated as a simple string, but there are variables that take values of specific types and there are rules as to how to spell them.</source>
          <target state="translated">Los valores de muchas variables se tratan como una simple cadena,pero hay variables que toman valores de tipos específicos y hay reglas sobre cómo deletrearlos.</target>
        </trans-unit>
        <trans-unit id="af6a117cf9cae5d8127a5c83e908e26e4094605c" translate="yes" xml:space="preserve">
          <source>Variable substitution</source>
          <target state="translated">Sustitución variable</target>
        </trans-unit>
        <trans-unit id="ac018db1f7b00972061adff843d37497d8ee153c" translate="yes" xml:space="preserve">
          <source>Variables</source>
          <target state="translated">Variables</target>
        </trans-unit>
        <trans-unit id="36ae09eeb0daa8ef3fa73e86b507f064c6f1150e" translate="yes" xml:space="preserve">
          <source>Various Git commands use the following environment variables:</source>
          <target state="translated">Varios comandos de Git utilizan las siguientes variables de entorno:</target>
        </trans-unit>
        <trans-unit id="c808db304a88e67e4d99602bde96a3fd73a86c36" translate="yes" xml:space="preserve">
          <source>Various aspects of gitweb&amp;rsquo;s behavior can be controlled through the configuration file &lt;code&gt;gitweb_config.perl&lt;/code&gt; or &lt;code&gt;/etc/gitweb.conf&lt;/code&gt;. See the &lt;a href=&quot;gitweb.conf&quot;&gt;gitweb.conf[5]&lt;/a&gt; for details.</source>
          <target state="translated">Se pueden controlar varios aspectos del comportamiento de gitweb a trav&amp;eacute;s del archivo de configuraci&amp;oacute;n &lt;code&gt;gitweb_config.perl&lt;/code&gt; o &lt;code&gt;/etc/gitweb.conf&lt;/code&gt; . Consulte &lt;a href=&quot;gitweb.conf&quot;&gt;gitweb.conf [5]&lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="514c3adc237433a43f04caf698ef6f51638f8f03" translate="yes" xml:space="preserve">
          <source>Various commands read from the configuration file and adjust their operation accordingly. See &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt; for a list and more details about the configuration mechanism.</source>
          <target state="translated">Varios comandos leen del archivo de configuraci&amp;oacute;n y ajustan su funcionamiento en consecuencia. Consulte &lt;a href=&quot;git-config&quot;&gt;git-config [1]&lt;/a&gt; para obtener una lista y m&amp;aacute;s detalles sobre el mecanismo de configuraci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="9d741cda072f8e825584f9d44fb913d01a1b3645" translate="yes" xml:space="preserve">
          <source>Various values from structured fields in referenced objects can be used to interpolate into the resulting output, or as sort keys.</source>
          <target state="translated">Varios valores de los campos estructurados de los objetos referenciados pueden utilizarse para interpolar en la salida resultante,o como claves de clasificación.</target>
        </trans-unit>
        <trans-unit id="0e52597805b02b27bbf6fa8afb053d38cd1cf9a2" translate="yes" xml:space="preserve">
          <source>Various ways to check your working tree</source>
          <target state="translated">Varias maneras de comprobar su árbol de trabajo</target>
        </trans-unit>
        <trans-unit id="8a8830ff167eaa3505bc00fdd4111ea514743436" translate="yes" xml:space="preserve">
          <source>Verbose output.</source>
          <target state="translated">Salida de la verbosa.</target>
        </trans-unit>
        <trans-unit id="5e80e8afa8277ee05efe0825f2f72b290ab38b7f" translate="yes" xml:space="preserve">
          <source>Verbose.</source>
          <target state="translated">Verbose.</target>
        </trans-unit>
        <trans-unit id="1eee329978eae57e0140879a7cb5a19a8e448f4c" translate="yes" xml:space="preserve">
          <source>Verbosely display information about the searching strategy being employed to standard error. The tag name will still be printed to standard out.</source>
          <target state="translated">Verbosamente mostrar información sobre la estrategia de búsqueda que se está empleando para el error estándar.El nombre de la etiqueta seguirá siendo impreso para estandarizar.</target>
        </trans-unit>
        <trans-unit id="17eca013b0d71c76732d4067f559197bffc5dc5a" translate="yes" xml:space="preserve">
          <source>Verbosity: let &lt;code&gt;cvsimport&lt;/code&gt; report what it is doing.</source>
          <target state="translated">Verbosidad: deje que &lt;code&gt;cvsimport&lt;/code&gt; informe lo que est&amp;aacute; haciendo.</target>
        </trans-unit>
        <trans-unit id="43241483b8c2e2b351480246076bc9d9d3aeeb38" translate="yes" xml:space="preserve">
          <source>Verifies the connectivity and validity of the objects in the database</source>
          <target state="translated">Verifica la conectividad y la validez de los objetos en la base de datos</target>
        </trans-unit>
        <trans-unit id="083f6e6fa7581860cb22a12637eec790f2c234d9" translate="yes" xml:space="preserve">
          <source>Verifies the connectivity and validity of the objects in the database.</source>
          <target state="translated">Verifica la conectividad y la validez de los objetos de la base de datos.</target>
        </trans-unit>
        <trans-unit id="121ce6e2fb35359b4c456b6cab91a3389a1154d2" translate="yes" xml:space="preserve">
          <source>Verify &amp;lt;ref&amp;gt; against &amp;lt;oldvalue&amp;gt; but do not change it. If &amp;lt;oldvalue&amp;gt; zero or missing, the ref must not exist.</source>
          <target state="translated">Verifique &amp;lt;ref&amp;gt; con &amp;lt;oldvalue&amp;gt; pero no lo cambie. Si &amp;lt;oldvalue&amp;gt; es cero o falta, la referencia no debe existir.</target>
        </trans-unit>
        <trans-unit id="f2a6ea4dcf4e13700439c2c62eb9c887c3645654" translate="yes" xml:space="preserve">
          <source>Verify that everything reachable from target is fetched. Used after an earlier fetch is interrupted.</source>
          <target state="translated">Verifica que todo lo que se pueda alcanzar del objetivo sea recuperado.Se usa después de que se interrumpa una búsqueda anterior.</target>
        </trans-unit>
        <trans-unit id="dc19dfe6277cd8889c0ce32fc30714a767c456fd" translate="yes" xml:space="preserve">
          <source>Verify that exactly one parameter is provided, and that it can be turned into a raw 20-byte SHA-1 that can be used to access the object database. If so, emit it to the standard output; otherwise, error out.</source>
          <target state="translated">Verifique que se proporcione exactamente un parámetro,y que pueda convertirse en un SHA-1 de 20 bytes en bruto que pueda utilizarse para acceder a la base de datos de objetos.Si es así,emítalo a la salida estándar;de lo contrario,salga del error.</target>
        </trans-unit>
        <trans-unit id="e921c65f691e2b371e3e29dc398bb292612d2860" translate="yes" xml:space="preserve">
          <source>Verify that the tip commit of the side branch being merged is signed with a valid key, i.e. a key that has a valid uid: in the default trust model, this means the signing key has been signed by a trusted key. If the tip commit of the side branch is not signed with a valid key, the merge is aborted.</source>
          <target state="translated">Verifique que el tip commit de la rama lateral que se está fusionando esté firmado con una clave válida,es decir,una clave que tenga un uid válido:en el modelo de confianza por defecto,esto significa que la clave de firma ha sido firmada por una clave de confianza.Si el tip commit de la rama lateral no está firmado con una clave válida,la fusión se aborta.</target>
        </trans-unit>
        <trans-unit id="baf3600caf9cbc675ef33fe6c51f69bd006b47ea" translate="yes" xml:space="preserve">
          <source>Verify the GPG signature of the given tag names.</source>
          <target state="translated">Verifica la firma GPG de los nombres de las etiquetas dadas.</target>
        </trans-unit>
        <trans-unit id="2977304de3538ddff5d274481548280fa86926b6" translate="yes" xml:space="preserve">
          <source>Verify the MIDX file for the packfiles in the current .git folder.</source>
          <target state="translated">Verifica el archivo MIDX para los archivos de paquetes en la actual carpeta .git.</target>
        </trans-unit>
        <trans-unit id="593811a1bcc6cbc445bcfa7fdf52e4a760c41784" translate="yes" xml:space="preserve">
          <source>Verify the contents of the MIDX file.</source>
          <target state="translated">Verifica el contenido del archivo MIDX.</target>
        </trans-unit>
        <trans-unit id="63de76d12bfde7fe2c14402fe2f03160cc3a7318" translate="yes" xml:space="preserve">
          <source>Version 1 porcelain format is similar to the short format, but is guaranteed not to change in a backwards-incompatible way between Git versions or based on user configuration. This makes it ideal for parsing by scripts. The description of the short format above also describes the porcelain format, with a few exceptions:</source>
          <target state="translated">El formato de porcelana de la versión 1 es similar al formato corto,pero se garantiza que no cambiará de forma incompatible con las versiones de Git o en función de la configuración del usuario.Esto lo hace ideal para el análisis sintáctico por medio de guiones.La descripción del formato corto anterior también describe el formato de porcelana,con algunas excepciones:</target>
        </trans-unit>
        <trans-unit id="33e409adcd5a97d5085c0477fcb4b42dc9a034a9" translate="yes" xml:space="preserve">
          <source>Version 2 format adds more detailed information about the state of the worktree and changed items. Version 2 also defines an extensible set of easy to parse optional headers.</source>
          <target state="translated">El formato de la versión 2 añade información más detallada sobre el estado del árbol de trabajo y los elementos cambiados.La versión 2 también define un conjunto extensible de encabezados opcionales fáciles de analizar.</target>
        </trans-unit>
        <trans-unit id="2b8063c91f48f5daba279d42a4965f292b8198dd" translate="yes" xml:space="preserve">
          <source>Version 2 pack-*.idx files support packs larger than 4 gib, and</source>
          <target state="translated">La versión 2 packk-*.idx soporta paquetes de más de 4 gib,y</target>
        </trans-unit>
        <trans-unit id="5a28a75eceea6b3fb1730e69daff64901cead811" translate="yes" xml:space="preserve">
          <source>Version 4 performs a simple pathname compression that reduces index size by 30%-50% on large repositories, which results in faster load time. Version 4 is relatively young (first released in 1.8.0 in October 2012). Other Git implementations such as JGit and libgit2 may not support it yet.</source>
          <target state="translated">La versión 4 realiza una simple compresión de ruta que reduce el tamaño del índice en un 30%-50% en grandes depósitos,lo que resulta en un tiempo de carga más rápido.La versión 4 es relativamente joven (publicada por primera vez en 1.8.0 en octubre de 2012).Otras implementaciones de Git,como JGit y libgit2,pueden no soportarlo todavía.</target>
        </trans-unit>
        <trans-unit id="5b61ffa7c699cf77c98fcf76236048d42ca5d233" translate="yes" xml:space="preserve">
          <source>Version &lt;code&gt;0&lt;/code&gt;</source>
          <target state="translated">Versi&amp;oacute;n &lt;code&gt;0&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7fc1164df4f366b4e06ce848f94e3799671648de" translate="yes" xml:space="preserve">
          <source>Version &lt;code&gt;1&lt;/code&gt;</source>
          <target state="translated">Versi&amp;oacute;n &lt;code&gt;1&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="26980b77b1e7ef480646032aebce78732551db11" translate="yes" xml:space="preserve">
          <source>Versions of Git older than 1.7.7 don&amp;rsquo;t know about the &lt;code&gt;tar.gz&lt;/code&gt; format, you&amp;rsquo;ll need to use gzip explicitly:</source>
          <target state="translated">Las versiones de Git anteriores a la 1.7.7 no conocen el formato &lt;code&gt;tar.gz&lt;/code&gt; , deber&amp;aacute; usar gzip expl&amp;iacute;citamente:</target>
        </trans-unit>
        <trans-unit id="48cda44638e8ce2f3c6e764951e4cd137e88bacc" translate="yes" xml:space="preserve">
          <source>Via the alternates mechanism, a &lt;a href=&quot;#def_repository&quot;&gt;repository&lt;/a&gt; can inherit part of its &lt;a href=&quot;#def_object_database&quot;&gt;object database&lt;/a&gt; from another object database, which is called an &quot;alternate&quot;.</source>
          <target state="translated">A trav&amp;eacute;s del mecanismo alternativo, un &lt;a href=&quot;#def_repository&quot;&gt;repositorio&lt;/a&gt; puede heredar parte de su &lt;a href=&quot;#def_object_database&quot;&gt;base&lt;/a&gt; de datos de objetos de otra base de datos de objetos, que se denomina &quot;alternativa&quot;.</target>
        </trans-unit>
        <trans-unit id="d75bfce3768015c62af9c4bd29fd7cad894764e0" translate="yes" xml:space="preserve">
          <source>Viewing everything that was changed in a revision, and step through revisions one at a time, viewing the history of the repository.</source>
          <target state="translated">Viendo todo lo que fue cambiado en una revisión,y paso a paso a través de las revisiones una a una,viendo la historia del repositorio.</target>
        </trans-unit>
        <trans-unit id="8e797001d4524362e7db8f18210266901eb28403" translate="yes" xml:space="preserve">
          <source>Viewing files in GUI tools</source>
          <target state="translated">Visualización de archivos en las herramientas GUI</target>
        </trans-unit>
        <trans-unit id="05c33ea7de1cccd62a72042e46bec3b3d340cf9f" translate="yes" xml:space="preserve">
          <source>Viewing multiple Git repositories with common root.</source>
          <target state="translated">Viendo múltiples repositorios de Git con una raíz común.</target>
        </trans-unit>
        <trans-unit id="1439a80405107c5dd4ca129513bf97eb92ca8c3f" translate="yes" xml:space="preserve">
          <source>Viewing old file versions</source>
          <target state="translated">Ver las versiones antiguas de los archivos</target>
        </trans-unit>
        <trans-unit id="cba1ab24737b9af4081eae74baa579853869959f" translate="yes" xml:space="preserve">
          <source>Viewing project history</source>
          <target state="translated">Ver la historia del proyecto</target>
        </trans-unit>
        <trans-unit id="48e788f7b4905bc5801452134707bb74e1fddd3c" translate="yes" xml:space="preserve">
          <source>Viewing the blame/annotation details of any file (if enabled).</source>
          <target state="translated">Ver los detalles de la culpa/anuncio de cualquier archivo (si está habilitado).</target>
        </trans-unit>
        <trans-unit id="afd57038f9956faea3beadae2f663a8f18e1dd6a" translate="yes" xml:space="preserve">
          <source>Viewing the contents of files in the repository at any revision.</source>
          <target state="translated">Viendo el contenido de los archivos en el repositorio en cualquier revisión.</target>
        </trans-unit>
        <trans-unit id="79e8c237bcc343324671ba4de89f13c4632b7437" translate="yes" xml:space="preserve">
          <source>Viewing the revision log of branches, history of files and directories, see what was changed when, by who.</source>
          <target state="translated">Viendo el registro de revisiones de las ramas,el historial de archivos y directorios,ver lo que se cambió cuando,por quién.</target>
        </trans-unit>
        <trans-unit id="5d3b4279714ad2970a30b9dfdfce1d9cde0d271d" translate="yes" xml:space="preserve">
          <source>Voila.</source>
          <target state="translated">Voila.</target>
        </trans-unit>
        <trans-unit id="f7dda342bfe7129409283096bf9eae6889a3617d" translate="yes" xml:space="preserve">
          <source>Waiting $&amp;lt;int&amp;gt; seconds before reconnecting to SMTP server. Used together with --batch-size option. Defaults to the &lt;code&gt;sendemail.smtpReloginDelay&lt;/code&gt; configuration variable.</source>
          <target state="translated">Esperando $ &amp;lt;int&amp;gt; segundos antes de volver a conectarse al servidor SMTP. Se usa junto con la opci&amp;oacute;n --batch-size. El valor predeterminado es la variable de configuraci&amp;oacute;n &lt;code&gt;sendemail.smtpReloginDelay&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6abfc589b188840a4520edd8282e2221d54aed84" translate="yes" xml:space="preserve">
          <source>Walk history forward instead of backward. Instead of showing the revision in which a line appeared, this shows the last revision in which a line has existed. This requires a range of revision like START..END where the path to blame exists in START. &lt;code&gt;git blame --reverse START&lt;/code&gt; is taken as &lt;code&gt;git blame
--reverse START..HEAD&lt;/code&gt; for convenience.</source>
          <target state="translated">Camine la historia hacia adelante en lugar de hacia atr&amp;aacute;s. En lugar de mostrar la revisi&amp;oacute;n en la que apareci&amp;oacute; una l&amp;iacute;nea, muestra la &amp;uacute;ltima revisi&amp;oacute;n en la que ha existido una l&amp;iacute;nea. Esto requiere un rango de revisi&amp;oacute;n como START..END donde la ruta de la culpa existe en START. &lt;code&gt;git blame --reverse START&lt;/code&gt; se toma como &lt;code&gt;git blame --reverse START..HEAD&lt;/code&gt; por conveniencia.</target>
        </trans-unit>
        <trans-unit id="246770a4db6a59723366cd008c0806351012631a" translate="yes" xml:space="preserve">
          <source>Walk through the patches in the series and warn if we cannot find all of the necessary information to commit a patch. At the time of this writing only missing author information is warned about.</source>
          <target state="translated">Recorre los parches de la serie y avisa si no podemos encontrar toda la información necesaria para cometer un parche.En el momento de escribir esto,sólo se advierte sobre la información faltante del autor.</target>
        </trans-unit>
        <trans-unit id="8741434725596a0a6dcba1ea6ce0540165fbeb38" translate="yes" xml:space="preserve">
          <source>Warn if changes introduce conflict markers or whitespace errors. What are considered whitespace errors is controlled by &lt;code&gt;core.whitespace&lt;/code&gt; configuration. By default, trailing whitespaces (including lines that consist solely of whitespaces) and a space character that is immediately followed by a tab character inside the initial indent of the line are considered whitespace errors. Exits with non-zero status if problems are found. Not compatible with --exit-code.</source>
          <target state="translated">Advertir si los cambios introducen marcadores de conflicto o errores de espacios en blanco. Lo que se considera errores de espacios en blanco se controla mediante la configuraci&amp;oacute;n de &lt;code&gt;core.whitespace&lt;/code&gt; . De forma predeterminada, los espacios en blanco finales (incluidas las l&amp;iacute;neas que constan &amp;uacute;nicamente de espacios en blanco) y un car&amp;aacute;cter de espacio seguido inmediatamente por un car&amp;aacute;cter de tabulaci&amp;oacute;n dentro de la sangr&amp;iacute;a inicial de la l&amp;iacute;nea se consideran errores de espacio en blanco. Sale con un estado distinto de cero si se encuentran problemas. No es compatible con --exit-code.</target>
        </trans-unit>
        <trans-unit id="d0219dea42624b30174e17cfd1bb37d7d1a042a1" translate="yes" xml:space="preserve">
          <source>Warn of patches that contain lines longer than 998 characters unless a suitable transfer encoding (&lt;code&gt;auto&lt;/code&gt;, &lt;code&gt;base64&lt;/code&gt;, or &lt;code&gt;quoted-printable&lt;/code&gt;) is used; this is due to SMTP limits as described by &lt;a href=&quot;http://www.ietf.org/rfc/rfc5322.txt&quot;&gt;http://www.ietf.org/rfc/rfc5322.txt&lt;/a&gt;.</source>
          <target state="translated">Advierte de parches que contienen l&amp;iacute;neas de m&amp;aacute;s de 998 caracteres a menos que se utilice una codificaci&amp;oacute;n de transferencia adecuada ( &lt;code&gt;auto&lt;/code&gt; , &lt;code&gt;base64&lt;/code&gt; o entre &lt;code&gt;quoted-printable&lt;/code&gt; ); esto se debe a los l&amp;iacute;mites de SMTP descritos en &lt;a href=&quot;http://www.ietf.org/rfc/rfc5322.txt&quot;&gt;http://www.ietf.org/rfc/rfc5322.txt&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e9c45563358e813f157ba81b33143542165ba84e" translate="yes" xml:space="preserve">
          <source>Warning</source>
          <target state="translated">Warning</target>
        </trans-unit>
        <trans-unit id="d9a62a2598117c2be58c53a722de6576cd225a89" translate="yes" xml:space="preserve">
          <source>Warnings are printed on the standard error output for any explicitly unsupported constructs, and any other lines that are not recognized by the parser.</source>
          <target state="translated">Las advertencias se imprimen en la salida de error estándar para cualquier construcción explícitamente no apoyada,y cualquier otra línea que no sea reconocida por el analizador.</target>
        </trans-unit>
        <trans-unit id="54490e8680807566a4db5e14166b54af9ee18d68" translate="yes" xml:space="preserve">
          <source>We already saw in &lt;a href=&quot;#understanding-commits&quot;&gt;Understanding History: Commits&lt;/a&gt; that all commits are stored under a 40-digit &quot;object name&quot;. In fact, all the information needed to represent the history of a project is stored in objects with such names. In each case the name is calculated by taking the SHA-1 hash of the contents of the object. The SHA-1 hash is a cryptographic hash function. What that means to us is that it is impossible to find two different objects with the same name. This has a number of advantages; among others:</source>
          <target state="translated">Ya vimos en &lt;a href=&quot;#understanding-commits&quot;&gt;Comprensi&amp;oacute;n del historial:&lt;/a&gt; confirma que todas las confirmaciones se almacenan bajo un &quot;nombre de objeto&quot; de 40 d&amp;iacute;gitos. De hecho, toda la informaci&amp;oacute;n necesaria para representar la historia de un proyecto se almacena en objetos con tales nombres. En cada caso, el nombre se calcula tomando el hash SHA-1 del contenido del objeto. El hash SHA-1 es una funci&amp;oacute;n de hash criptogr&amp;aacute;fica. Lo que eso significa para nosotros es que es imposible encontrar dos objetos diferentes con el mismo nombre. Esto tiene varias ventajas; entre otros:</target>
        </trans-unit>
        <trans-unit id="d6fd523936a98d1231393ad2931c9779a4d79b0e" translate="yes" xml:space="preserve">
          <source>We are looking for a &quot;best&quot; explanation of the new series in terms of the old one. We can represent an &quot;explanation&quot; as an edge in the graph:</source>
          <target state="translated">Buscamos la &quot;mejor&quot; explicación de la nueva serie en términos de la antigua.Podemos representar una &quot;explicación&quot; como un borde en el gráfico:</target>
        </trans-unit>
        <trans-unit id="9b940c15e60e8d5e30f8f0dd6fb317eefa03a3c7" translate="yes" xml:space="preserve">
          <source>We assume that GITWEB_CONFIG has its default Makefile value, namely &lt;code&gt;gitweb_config.perl&lt;/code&gt;. Put the following in &lt;code&gt;gitweb_make_index.perl&lt;/code&gt; file:</source>
          <target state="translated">Suponemos que GITWEB_CONFIG tiene su valor Makefile predeterminado, a saber, &lt;code&gt;gitweb_config.perl&lt;/code&gt; . Coloque lo siguiente en el archivo &lt;code&gt;gitweb_make_index.perl&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="860f449f084465687d5f3065e9dcdf4471fe0c53" translate="yes" xml:space="preserve">
          <source>We assume the following in /etc/services</source>
          <target state="translated">Asumimos lo siguiente en /etc/servicios</target>
        </trans-unit>
        <trans-unit id="e666201c4a3affd420bf339541f1e66f556269f5" translate="yes" xml:space="preserve">
          <source>We assume you have already created a Git repository for your project, possibly created from scratch or from a tarball (see &lt;a href=&quot;gittutorial&quot;&gt;gittutorial[7]&lt;/a&gt;), or imported from an already existing CVS repository (see the next section).</source>
          <target state="translated">Suponemos que ya ha creado un repositorio Git para su proyecto, posiblemente creado desde cero o desde un tarball (consulte &lt;a href=&quot;gittutorial&quot;&gt;gittutorial [7]&lt;/a&gt; ), o importado desde un repositorio CVS ya existente (consulte la siguiente secci&amp;oacute;n).</target>
        </trans-unit>
        <trans-unit id="a35a2d4ac8af99272cba8ca44431c44847ef0735" translate="yes" xml:space="preserve">
          <source>We can also create a tag to refer to a particular commit; after running</source>
          <target state="translated">También podemos crear una etiqueta para referirnos a un commit en particular;después de ejecutar</target>
        </trans-unit>
        <trans-unit id="ec584a188dcd2e25a99263b54f2feb909dc57e99" translate="yes" xml:space="preserve">
          <source>We can ask Git about this particular object with the &lt;code&gt;cat-file&lt;/code&gt; command. Don&amp;rsquo;t copy the 40 hex digits from this example but use those from your own version. Note that you can shorten it to only a few characters to save yourself typing all 40 hex digits:</source>
          <target state="translated">Podemos preguntarle a Git sobre este objeto en particular con el comando &lt;code&gt;cat-file&lt;/code&gt; . No copie los 40 d&amp;iacute;gitos hexadecimales de este ejemplo, utilice los de su propia versi&amp;oacute;n. Tenga en cuenta que puede acortarlo a unos pocos caracteres para no tener que escribir los 40 d&amp;iacute;gitos hexadecimales:</target>
        </trans-unit>
        <trans-unit id="3d0c7ad92eed63e4b86ed7fcdbe0a2af116dc20a" translate="yes" xml:space="preserve">
          <source>We can further investigate the time spent scanning for untracked files.</source>
          <target state="translated">Podemos investigar más a fondo el tiempo empleado en escanear los archivos no rastreados.</target>
        </trans-unit>
        <trans-unit id="14c5f91f2f30d67e424b3d8fa6177783e08a84fd" translate="yes" xml:space="preserve">
          <source>We can get just the branch-head names, and remove &lt;code&gt;master&lt;/code&gt;, with the help of the standard utilities cut and grep:</source>
          <target state="translated">Podemos obtener solo los nombres de las cabezas de las ramas y eliminar el &lt;code&gt;master&lt;/code&gt; , con la ayuda de las utilidades est&amp;aacute;ndar cut y grep:</target>
        </trans-unit>
        <trans-unit id="a00f6027326a1e03d87c7714c37d6396c5fc0f07" translate="yes" xml:space="preserve">
          <source>We can get this using the following command:</source>
          <target state="translated">Podemos conseguir esto usando el siguiente comando:</target>
        </trans-unit>
        <trans-unit id="308213d749ac73498be48acb36aa505b62d477c8" translate="yes" xml:space="preserve">
          <source>We can give this name to &lt;code&gt;git show&lt;/code&gt; to see the details about this commit.</source>
          <target state="translated">Podemos darle este nombre a &lt;code&gt;git show&lt;/code&gt; para ver los detalles sobre esta confirmaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="164a7b582707458e7c29a45bdd3cb932a29b3ca1" translate="yes" xml:space="preserve">
          <source>We can list all the heads in this repository with &lt;a href=&quot;git-show-ref&quot;&gt;git-show-ref[1]&lt;/a&gt;:</source>
          <target state="translated">Podemos listar todos los encabezados en este repositorio con &lt;a href=&quot;git-show-ref&quot;&gt;git-show-ref [1]&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="3342879e047ae36a38db13969064b38d54ccc902" translate="yes" xml:space="preserve">
          <source>We divide Git into high level (&quot;porcelain&quot;) commands and low level (&quot;plumbing&quot;) commands.</source>
          <target state="translated">Dividimos a Git en comandos de alto nivel (&quot;porcelana&quot;)y comandos de bajo nivel (&quot;plomería&quot;).</target>
        </trans-unit>
        <trans-unit id="011f9d254149abd4e25f111f5f8f2bc847e7e4cc" translate="yes" xml:space="preserve">
          <source>We explain how to do this in the following sections.</source>
          <target state="translated">Explicamos cómo hacerlo en las siguientes secciones.</target>
        </trans-unit>
        <trans-unit id="4822ab43c46db1b5802e2f53899245649e4398bd" translate="yes" xml:space="preserve">
          <source>We formulate a set of &lt;code&gt;rules&lt;/code&gt; for quick reference, while the prose tries to motivate each of them. Do not always take them literally; you should value good reasons for your actions higher than manpages such as this one.</source>
          <target state="translated">Formulamos un conjunto de &lt;code&gt;rules&lt;/code&gt; de r&amp;aacute;pida consulta, mientras la prosa intenta motivar a cada una de ellas. No siempre los tome literalmente; debe valorar las buenas razones para sus acciones m&amp;aacute;s que las p&amp;aacute;ginas de manual como esta.</target>
        </trans-unit>
        <trans-unit id="27af85d69b0e1da45afccff7b9c2331995331c55" translate="yes" xml:space="preserve">
          <source>We found that most commits on the graph may give quite a lot of information when they are tested. And the commits that will not on average give a lot of information are the one near the good and bad commits.</source>
          <target state="translated">Encontramos que la mayoría de los compromisos en el gráfico pueden dar bastante información cuando se prueban.Y los compromisos que no dan mucha información son los que están cerca de los buenos y malos compromisos.</target>
        </trans-unit>
        <trans-unit id="319c4fde5f53d3ebfff60d2ca81633ff5c5e7332" translate="yes" xml:space="preserve">
          <source>We have already seen &lt;a href=&quot;#Updating-a-repository-With-git-fetch&quot;&gt;how to keep remote-tracking branches up to date&lt;/a&gt; with &lt;a href=&quot;git-fetch&quot;&gt;git-fetch[1]&lt;/a&gt;, and how to merge two branches. So you can merge in changes from the original repository&amp;rsquo;s master branch with:</source>
          <target state="translated">Ya hemos visto &lt;a href=&quot;#Updating-a-repository-With-git-fetch&quot;&gt;c&amp;oacute;mo mantener actualizadas las ramas de seguimiento remoto&lt;/a&gt; con &lt;a href=&quot;git-fetch&quot;&gt;git-fetch [1]&lt;/a&gt; y c&amp;oacute;mo fusionar dos ramas. Para que pueda fusionar los cambios de la rama maestra del repositorio original con:</target>
        </trans-unit>
        <trans-unit id="9313b2be3fe8f9ef5431fd57e740ed2c389d7c2c" translate="yes" xml:space="preserve">
          <source>We have already seen how branches work previously, with &quot;fun and work&quot; example using two branches. The idea is the same if there are more than two branches. Let&amp;rsquo;s say you started out from &quot;master&quot; head, and have some new code in the &quot;master&quot; branch, and two independent fixes in the &quot;commit-fix&quot; and &quot;diff-fix&quot; branches:</source>
          <target state="translated">Ya hemos visto c&amp;oacute;mo funcionan las ramas anteriormente, con el ejemplo de &quot;diversi&amp;oacute;n y trabajo&quot; usando dos ramas. La idea es la misma si hay m&amp;aacute;s de dos ramas. Digamos que comenz&amp;oacute; desde el encabezado &quot;maestro&quot; y tiene un c&amp;oacute;digo nuevo en la rama &quot;maestra&quot; y dos correcciones independientes en las ramas &quot;commit-fix&quot; y &quot;diff-fix&quot;:</target>
        </trans-unit>
        <trans-unit id="1170354586d8db2806a89632eb01397ff1d5b39a" translate="yes" xml:space="preserve">
          <source>We have seen several ways of naming commits already:</source>
          <target state="translated">Ya hemos visto varias formas de nombrar compromisos:</target>
        </trans-unit>
        <trans-unit id="ea2d131015439270646c4d9deb94b3238eec4d65" translate="yes" xml:space="preserve">
          <source>We have seen that regressions are an important problem, and that &quot;git bisect&quot; has nice features that complement very well practices and other tools, especially test suites, that are generally used to fight regressions. But it might be needed to change some work-flows and (bad) habits to get the most out of it.</source>
          <target state="translated">Hemos visto que las regresiones son un problema importante,y que la &quot;git bisect&quot; tiene buenas características que complementan muy bien las prácticas y otras herramientas,especialmente las suites de pruebas,que se utilizan generalmente para combatir las regresiones.Pero podría ser necesario cambiar algunos flujos de trabajo y (malos)hábitos para sacarle el máximo provecho.</target>
        </trans-unit>
        <trans-unit id="58d71328c844eab6bb246a8885f29a926cbaf29b" translate="yes" xml:space="preserve">
          <source>We have seen that test suites and git bisect are very powerful when used together. It can be even more powerful if you can combine them with other systems.</source>
          <target state="translated">Hemos visto que las suites de prueba y la git bisect son muy poderosas cuando se usan juntas.Puede ser incluso más potente si se pueden combinar con otros sistemas.</target>
        </trans-unit>
        <trans-unit id="0dc1429b571e4014b12f464201faf90142f01343" translate="yes" xml:space="preserve">
          <source>We ignore all SVN properties except svn:executable. Any unhandled properties are logged to $GIT_DIR/svn/&amp;lt;refname&amp;gt;/unhandled.log</source>
          <target state="translated">Ignoramos todas las propiedades de SVN excepto svn: ejecutable. Las propiedades no controladas se registran en $ GIT_DIR / svn / &amp;lt;refname&amp;gt; /unhandled.log</target>
        </trans-unit>
        <trans-unit id="5e0e70c2a550cebe0f64341bc25aba4f82846837" translate="yes" xml:space="preserve">
          <source>We said this tutorial shows what plumbing does to help you cope with the porcelain that isn&amp;rsquo;t flushing, but we so far did not talk about how the merge really works. If you are following this tutorial the first time, I&amp;rsquo;d suggest to skip to &quot;Publishing your work&quot; section and come back here later.</source>
          <target state="translated">Dijimos que este tutorial muestra lo que hace la plomer&amp;iacute;a para ayudarlo a lidiar con la porcelana que no se descarga, pero hasta ahora no hablamos sobre c&amp;oacute;mo funciona realmente la fusi&amp;oacute;n. Si est&amp;aacute; siguiendo este tutorial por primera vez, le sugiero que salte a la secci&amp;oacute;n &quot;Publicar su trabajo&quot; y vuelva aqu&amp;iacute; m&amp;aacute;s tarde.</target>
        </trans-unit>
        <trans-unit id="038e0426e816e440e5c183b0ccfae9faca0c65b5" translate="yes" xml:space="preserve">
          <source>We saw above that &lt;code&gt;origin&lt;/code&gt; is just a shortcut to refer to the repository that you originally cloned from. This information is stored in Git configuration variables, which you can see using &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;:</source>
          <target state="translated">Vimos anteriormente que el &lt;code&gt;origin&lt;/code&gt; es solo un atajo para hacer referencia al repositorio desde el que clon&amp;oacute; originalmente. Esta informaci&amp;oacute;n se almacena en las variables de configuraci&amp;oacute;n de Git, que puede ver usando &lt;a href=&quot;git-config&quot;&gt;git-config [1]&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="789eeb5f51968bf21d9746b92623ca08838d8bcb" translate="yes" xml:space="preserve">
          <source>We saw earlier that &quot;git bisect skip&quot; is now using a PRNG to try to avoid areas in the commit graph where commits are untestable. The problem is that sometimes the first bad commit will be in an untestable area.</source>
          <target state="translated">Vimos antes que &quot;git bisect skip&quot; está usando ahora un PRNG para tratar de evitar áreas en el gráfico de commits en las que los commits no son comprobables.El problema es que a veces la primera confirmación errónea será en un área no comprobable.</target>
        </trans-unit>
        <trans-unit id="e6f53989efc34bb4d6e54dcd09f15943b6a8a36c" translate="yes" xml:space="preserve">
          <source>We saw in &lt;a href=&quot;#conflict-resolution&quot;&gt;Getting conflict-resolution help during a merge&lt;/a&gt; that during a merge the index can store multiple versions of a single file (called &quot;stages&quot;). The third column in the &lt;a href=&quot;git-ls-files&quot;&gt;git-ls-files[1]&lt;/a&gt; output above is the stage number, and will take on values other than 0 for files with merge conflicts.</source>
          <target state="translated">En &lt;a href=&quot;#conflict-resolution&quot;&gt;Obtenci&amp;oacute;n de ayuda para la resoluci&amp;oacute;n de conflictos durante una fusi&amp;oacute;n,&lt;/a&gt; vimos que durante una fusi&amp;oacute;n el &amp;iacute;ndice puede almacenar varias versiones de un solo archivo (llamadas &quot;etapas&quot;). La tercera columna en la salida de &lt;a href=&quot;git-ls-files&quot;&gt;git-ls-files [1]&lt;/a&gt; anterior es el n&amp;uacute;mero de etapa y tomar&amp;aacute; valores distintos de 0 para archivos con conflictos de fusi&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="d5d682276e6a6d081a241de022b4ded4aef9c418" translate="yes" xml:space="preserve">
          <source>We saw in &lt;a href=&quot;#fixing-a-mistake-by-rewriting-history&quot;&gt;Fixing a mistake by rewriting history&lt;/a&gt; that you can replace the most recent commit using</source>
          <target state="translated">Vimos en &lt;a href=&quot;#fixing-a-mistake-by-rewriting-history&quot;&gt;Arreglar un error reescribiendo el historial&lt;/a&gt; que puede reemplazar la confirmaci&amp;oacute;n m&amp;aacute;s reciente usando</target>
        </trans-unit>
        <trans-unit id="aafdc07c8e0d9b297fcdd505608f380ef754ed45" translate="yes" xml:space="preserve">
          <source>We saw in part one of the tutorial that commits have names like this. It turns out that every object in the Git history is stored under a 40-digit hex name. That name is the SHA-1 hash of the object&amp;rsquo;s contents; among other things, this ensures that Git will never store the same data twice (since identical data is given an identical SHA-1 name), and that the contents of a Git object will never change (since that would change the object&amp;rsquo;s name as well). The 7 char hex strings here are simply the abbreviation of such 40 character long strings. Abbreviations can be used everywhere where the 40 character strings can be used, so long as they are unambiguous.</source>
          <target state="translated">Vimos en la primera parte del tutorial que las confirmaciones tienen nombres como este. Resulta que cada objeto en el historial de Git se almacena con un nombre hexadecimal de 40 d&amp;iacute;gitos. Ese nombre es el hash SHA-1 del contenido del objeto; entre otras cosas, esto asegura que Git nunca almacenar&amp;aacute; los mismos datos dos veces (ya que los datos id&amp;eacute;nticos reciben un nombre SHA-1 id&amp;eacute;ntico), y que el contenido de un objeto Git nunca cambiar&amp;aacute; (ya que eso tambi&amp;eacute;n cambiar&amp;iacute;a el nombre del objeto ). Las cadenas hexadecimales de 7 caracteres aqu&amp;iacute; son simplemente la abreviatura de esas cadenas de 40 caracteres de longitud. Las abreviaturas se pueden utilizar en todos los lugares donde se pueden utilizar 40 cadenas de caracteres, siempre que no sean ambiguas.</target>
        </trans-unit>
        <trans-unit id="09c046487d09b436218fe11aa8c1087251442281" translate="yes" xml:space="preserve">
          <source>We separate the porcelain commands into the main commands and some ancillary user utilities.</source>
          <target state="translated">Separamos los comandos de porcelana en los comandos principales y algunas utilidades de usuario auxiliares.</target>
        </trans-unit>
        <trans-unit id="f2e875357a5ce85901234308b841a3138ebd851b" translate="yes" xml:space="preserve">
          <source>We should point out that &quot;habitually&quot; (regularly for no real reason) merging an integration branch into your topics &amp;mdash; and by extension, merging anything upstream into anything downstream on a regular basis &amp;mdash; is frowned upon:</source>
          <target state="translated">Debemos se&amp;ntilde;alar que &quot;habitualmente&quot; (regularmente sin una raz&amp;oacute;n real) fusionar una rama de integraci&amp;oacute;n en sus temas y, por extensi&amp;oacute;n, fusionar cualquier cosa corriente arriba con algo corriente abajo de forma regular, est&amp;aacute; mal visto:</target>
        </trans-unit>
        <trans-unit id="3b0c2056ade966758c96efbd333ad03c787ca3ac" translate="yes" xml:space="preserve">
          <source>We start with one specialized tool that is useful for finding the commit that introduced a bug into a project.</source>
          <target state="translated">Empezamos con una herramienta especializada que es útil para encontrar el commit que introdujo un bug en un proyecto.</target>
        </trans-unit>
        <trans-unit id="3bb7fbe62fd9b3fa1a7f67f6a431251fe7b02079" translate="yes" xml:space="preserve">
          <source>We start with the most important, the &lt;a href=&quot;#def_object_database&quot;&gt;object database&lt;/a&gt; and the &lt;a href=&quot;#def_index&quot;&gt;index&lt;/a&gt;.</source>
          <target state="translated">Comenzamos con lo m&amp;aacute;s importante, la &lt;a href=&quot;#def_object_database&quot;&gt;base de datos de objetos&lt;/a&gt; y el &lt;a href=&quot;#def_index&quot;&gt;&amp;iacute;ndice&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="fa1acdd625946113b786a5983b045431892f2e96" translate="yes" xml:space="preserve">
          <source>We supposed in the previous examples that the &quot;good&quot; commits were ancestors of the &quot;bad&quot; commit. But this is not a requirement of &quot;git bisect&quot;.</source>
          <target state="translated">Supusimos en los ejemplos anteriores que los &quot;buenos&quot; compromisarios eran antepasados de los &quot;malos&quot; compromisarios.Pero este no es un requisito de la &quot;git bisect&quot;.</target>
        </trans-unit>
        <trans-unit id="09e675bfb62532c536d372645ebddf19b07c5684" translate="yes" xml:space="preserve">
          <source>We want to make &lt;code&gt;topic&lt;/code&gt; forked from branch &lt;code&gt;master&lt;/code&gt;; for example, because the functionality on which &lt;code&gt;topic&lt;/code&gt; depends was merged into the more stable &lt;code&gt;master&lt;/code&gt; branch. We want our tree to look like this:</source>
          <target state="translated">Queremos hacer un &lt;code&gt;topic&lt;/code&gt; bifurcado desde el &lt;code&gt;master&lt;/code&gt; rama ; por ejemplo, porque la funcionalidad de la que depende el &lt;code&gt;topic&lt;/code&gt; se fusion&amp;oacute; en la rama &lt;code&gt;master&lt;/code&gt; m&amp;aacute;s estable . Queremos que nuestro &amp;aacute;rbol se vea as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="0fa006b18282abd83f954d3423dfd83f70f68c0d" translate="yes" xml:space="preserve">
          <source>We will introduce some tools that can help you do this, explain how to use them, and then explain some of the problems that can arise because you are rewriting history.</source>
          <target state="translated">Presentaremos algunas herramientas que pueden ayudarle a hacer esto,explicaremos cómo usarlas,y luego explicaremos algunos de los problemas que pueden surgir porque está reescribiendo la historia.</target>
        </trans-unit>
        <trans-unit id="e34d86d215639adac5ecaa74d7f70d803a2ef9de" translate="yes" xml:space="preserve">
          <source>We will sometimes represent Git history using diagrams like the one below. Commits are shown as &quot;o&quot;, and the links between them with lines drawn with - / and \. Time goes left to right:</source>
          <target state="translated">A veces representaremos la historia de Git usando diagramas como el que sigue.Los compromisos se muestran como &quot;o&quot;,y los vínculos entre ellos con líneas dibujadas con-/y \.El tiempo va de izquierda a derecha:</target>
        </trans-unit>
        <trans-unit id="ab9fd84ced67b4e6059fb12091ba4144199c5397" translate="yes" xml:space="preserve">
          <source>We&amp;rsquo;ll assume that the problem is a single missing or corrupted blob, which is sometimes a solvable problem. (Recovering missing trees and especially commits is &lt;strong&gt;much&lt;/strong&gt; harder).</source>
          <target state="translated">Asumiremos que el problema es un solo blob faltante o da&amp;ntilde;ado, que a veces es un problema solucionable. (Recuperar &amp;aacute;rboles perdidos y especialmente confirmaciones es &lt;strong&gt;mucho&lt;/strong&gt; m&amp;aacute;s dif&amp;iacute;cil).</target>
        </trans-unit>
        <trans-unit id="2aa7b1ec194976812ce4b6b3f7e0ba34eba549a8" translate="yes" xml:space="preserve">
          <source>We&amp;rsquo;ll keep this simple and stupid, so we&amp;rsquo;ll start off with populating a few trivial files just to get a feel for it.</source>
          <target state="translated">Mantendremos esto simple y est&amp;uacute;pido, por lo que comenzaremos rellenando algunos archivos triviales solo para sentirlo.</target>
        </trans-unit>
        <trans-unit id="2d4db37414a68811cd95f44af4830929ada62273" translate="yes" xml:space="preserve">
          <source>Webserver configuration</source>
          <target state="translated">Configuración del servidor web</target>
        </trans-unit>
        <trans-unit id="c0f36d74c982d11ffbdfaa17b6ab39308ec52a2f" translate="yes" xml:space="preserve">
          <source>Webserver configuration with multiple projects' root</source>
          <target state="translated">Configuración del servidor web con la raíz de múltiples proyectos</target>
        </trans-unit>
        <trans-unit id="ef6d4f2b2672206d0b50ce512c5b9cc1369fe95f" translate="yes" xml:space="preserve">
          <source>What an alias file in each format looks like can be found in the documentation of the email program of the same name. The differences and limitations from the standard formats are described below:</source>
          <target state="translated">El aspecto de un archivo de alias en cada formato se puede encontrar en la documentación del programa de correo electrónico del mismo nombre.A continuación se describen las diferencias y limitaciones de los formatos estándar:</target>
        </trans-unit>
        <trans-unit id="fa6325f935566c907b8b84855ddf6b390a1827e3" translate="yes" xml:space="preserve">
          <source>What are the 7 digits of hex that Git responded to the commit with?</source>
          <target state="translated">¿Cuáles son los 7 dígitos de hexágono con los que Git respondió al compromiso?</target>
        </trans-unit>
        <trans-unit id="5fb651419665147da76edfca56099f33ccd0e645" translate="yes" xml:space="preserve">
          <source>What does this mean?</source>
          <target state="translated">¿Qué significa esto?</target>
        </trans-unit>
        <trans-unit id="b77fdbd3385bc488b50aa891b5b4c124304a8f69" translate="yes" xml:space="preserve">
          <source>What is interesting too is that end users that are reporting bugs (or QA people that reproduced a bug) have access to the environment where the bug happens. So they can often more easily reproduce a regression. And if they can bisect, then more information will be extracted from the environment where the bug happens, which means that it will be easier to understand and then fix the bug.</source>
          <target state="translated">Lo que también es interesante es que los usuarios finales que están reportando errores (o las personas de control de calidad que reprodujeron un error)tienen acceso al ambiente donde el error ocurre.Así que a menudo pueden reproducir más fácilmente una regresión.Y si pueden hacer una bisección,entonces se extraerá más información del entorno donde ocurre el error,lo que significa que será más fácil de entender y luego arreglar el error.</target>
        </trans-unit>
        <trans-unit id="549056214cd4b23720c4559829b5b36cc5cf6d0c" translate="yes" xml:space="preserve">
          <source>What next?</source>
          <target state="translated">¿Y ahora qué?</target>
        </trans-unit>
        <trans-unit id="fe77441e9cc191fb4a5181d6f98e51e7bf6ce4ab" translate="yes" xml:space="preserve">
          <source>What people don&amp;rsquo;t get is that this is a situation where the &quot;end node principle&quot; applies. When you have limited resources (here: developers) you don&amp;rsquo;t push the bulk of the burden upon them. Instead you push things out to the resource you have a lot of, the end nodes (here: users), so that the situation actually scales.</source>
          <target state="translated">Lo que la gente no entiende es que esta es una situaci&amp;oacute;n en la que se aplica el &quot;principio del nodo final&quot;. Cuando tiene recursos limitados (aqu&amp;iacute;: desarrolladores) no les impone la mayor parte de la carga. En su lugar, empuja las cosas hacia el recurso del que tiene una gran cantidad, los nodos finales (aqu&amp;iacute;: usuarios), para que la situaci&amp;oacute;n realmente se ampl&amp;iacute;e.</target>
        </trans-unit>
        <trans-unit id="e4950cd435094a3f200db11a5c1b540d80d04769" translate="yes" xml:space="preserve">
          <source>What should you do when you tag a wrong commit and you would want to re-tag?</source>
          <target state="translated">¿Qué deberías hacer cuando marcas un compromiso equivocado y quieres volver a marcarlo?</target>
        </trans-unit>
        <trans-unit id="049920ec0574fb80b08ccee259e5814b007cd44c" translate="yes" xml:space="preserve">
          <source>What the -p option produces is slightly different from the traditional diff format:</source>
          <target state="translated">Lo que produce la opción -p es ligeramente diferente del formato tradicional de difusión:</target>
        </trans-unit>
        <trans-unit id="e27b60d4391d6c41de480e30a2d0df50a6723ae8" translate="yes" xml:space="preserve">
          <source>What to do when a push fails</source>
          <target state="translated">Qué hacer cuando un empujón falla</target>
        </trans-unit>
        <trans-unit id="42a1dbf4390cedcf2f183fba444335bae8d5ae11" translate="yes" xml:space="preserve">
          <source>What you chose are then highlighted with &lt;code&gt;*&lt;/code&gt;, like this:</source>
          <target state="translated">Lo que eligi&amp;oacute; se resaltar&amp;aacute; con &lt;code&gt;*&lt;/code&gt; , as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="e11a716b5dc9d27d9966b39b2c63b32b4c67e627" translate="yes" xml:space="preserve">
          <source>When &amp;lt;rev&amp;gt; is not specified, the command annotates the changes starting backwards from the working tree copy. This flag makes the command pretend as if the working tree copy has the contents of the named file (specify &lt;code&gt;-&lt;/code&gt; to make the command read from the standard input).</source>
          <target state="translated">Cuando no se especifica &amp;lt;rev&amp;gt;, el comando anota los cambios comenzando hacia atr&amp;aacute;s desde la copia del &amp;aacute;rbol de trabajo. Esta bandera hace que el comando finja como si la copia del &amp;aacute;rbol de trabajo tuviera el contenido del archivo nombrado (especificar &lt;code&gt;-&lt;/code&gt; para que el comando se lea desde la entrada est&amp;aacute;ndar).</target>
        </trans-unit>
        <trans-unit id="df8212af8d2323e7260f5fa3c4bc0bbc714643ff" translate="yes" xml:space="preserve">
          <source>When --fork-point is active, &lt;code&gt;fork_point&lt;/code&gt; will be used instead of &amp;lt;upstream&amp;gt; to calculate the set of commits to rebase, where &lt;code&gt;fork_point&lt;/code&gt; is the result of &lt;code&gt;git merge-base --fork-point &amp;lt;upstream&amp;gt;
&amp;lt;branch&amp;gt;&lt;/code&gt; command (see &lt;a href=&quot;git-merge-base&quot;&gt;git-merge-base[1]&lt;/a&gt;). If &lt;code&gt;fork_point&lt;/code&gt; ends up being empty, the &amp;lt;upstream&amp;gt; will be used as a fallback.</source>
          <target state="translated">Cuando --fork-point est&amp;aacute; activo, &lt;code&gt;fork_point&lt;/code&gt; se usar&amp;aacute; en lugar de &amp;lt;upstream&amp;gt; para calcular el conjunto de confirmaciones para rebase, donde &lt;code&gt;fork_point&lt;/code&gt; es el resultado del &lt;code&gt;git merge-base --fork-point &amp;lt;upstream&amp;gt; &amp;lt;branch&amp;gt;&lt;/code&gt; ( ver &lt;a href=&quot;git-merge-base&quot;&gt;git-merge-base [1]&lt;/a&gt; ). Si &lt;code&gt;fork_point&lt;/code&gt; termina vac&amp;iacute;o, el &amp;lt;upstream&amp;gt; se usar&amp;aacute; como respaldo.</target>
        </trans-unit>
        <trans-unit id="0b903c4e9a3738f389f65549fe23dcd21fd8909d" translate="yes" xml:space="preserve">
          <source>When --graph is not used, all history branches are flattened which can make it hard to see that the two consecutive commits do not belong to a linear branch. This option puts a barrier in between them in that case. If &lt;code&gt;&amp;lt;barrier&amp;gt;&lt;/code&gt; is specified, it is the string that will be shown instead of the default one.</source>
          <target state="translated">Cuando no se utiliza --graph, todas las ramas del historial se aplanan, lo que puede dificultar ver que las dos confirmaciones consecutivas no pertenecen a una rama lineal. Esta opci&amp;oacute;n pone una barrera entre ellos en ese caso. Si se especifica &lt;code&gt;&amp;lt;barrier&amp;gt;&lt;/code&gt; , es la cadena que se mostrar&amp;aacute; en lugar de la predeterminada.</target>
        </trans-unit>
        <trans-unit id="24ff3c267435a7dcecd3166ed52f8210a7c7f0de" translate="yes" xml:space="preserve">
          <source>When --stdout is specified then progress report is displayed during the object count and compression phases but inhibited during the write-out phase. The reason is that in some cases the output stream is directly linked to another command which may wish to display progress status of its own as it processes incoming pack data. This flag is like --progress except that it forces progress report for the write-out phase as well even if --stdout is used.</source>
          <target state="translated">Cuando se especifica --stdout,se muestra el informe de progreso durante las fases de recuento de objetos y de compresión,pero se inhibe durante la fase de escritura.La razón es que en algunos casos el flujo de salida está directamente vinculado a otro comando que puede querer mostrar el estado de progreso por sí mismo mientras procesa los datos de los paquetes entrantes.Este indicador es como --progress excepto que fuerza el informe de progreso para la fase de escritura también,incluso si se usa --stdout.</target>
        </trans-unit>
        <trans-unit id="d3e80ca53bd7d57db503ac84208eff0dbe6d901f" translate="yes" xml:space="preserve">
          <source>When -k is not in effect, all leading strings bracketed with &lt;code&gt;[&lt;/code&gt; and &lt;code&gt;]&lt;/code&gt; pairs are stripped. This option limits the stripping to only the pairs whose bracketed string contains the word &quot;PATCH&quot;.</source>
          <target state="translated">Cuando -k no est&amp;aacute; en efecto, todas las cadenas iniciales entre corchetes con &lt;code&gt;[&lt;/code&gt; y &lt;code&gt;]&lt;/code&gt; pares se eliminan. Esta opci&amp;oacute;n limita la eliminaci&amp;oacute;n solo a los pares cuya cadena entre corchetes contiene la palabra &quot;PATCH&quot;.</target>
        </trans-unit>
        <trans-unit id="882475218cb0a9fc17e76a3d4266386adec5dd71" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;&quot;$@&quot;&lt;/code&gt; is &lt;code&gt;-h&lt;/code&gt; or &lt;code&gt;--help&lt;/code&gt; in the above example, the following usage text would be shown:</source>
          <target state="translated">Cuando &lt;code&gt;&quot;$@&quot;&lt;/code&gt; es &lt;code&gt;-h&lt;/code&gt; o &lt;code&gt;--help&lt;/code&gt; en el ejemplo anterior, se muestra el siguiente texto Rendimiento:</target>
        </trans-unit>
        <trans-unit id="d78a0cbb0812363470a0c64a4a94d40dd1da90bb" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;--batch-all-objects&lt;/code&gt; is in use, visit objects in an order which may be more efficient for accessing the object contents than hash order. The exact details of the order are unspecified, but if you do not require a specific order, this should generally result in faster output, especially with &lt;code&gt;--batch&lt;/code&gt;. Note that &lt;code&gt;cat-file&lt;/code&gt; will still show each object only once, even if it is stored multiple times in the repository.</source>
          <target state="translated">Cuando &lt;code&gt;--batch-all-objects&lt;/code&gt; est&amp;aacute; en uso, visite los objetos en un orden que puede ser m&amp;aacute;s eficiente para acceder al contenido del objeto que el orden hash. Los detalles exactos del pedido no est&amp;aacute;n especificados, pero si no necesita un pedido espec&amp;iacute;fico, esto generalmente deber&amp;iacute;a resultar en una salida m&amp;aacute;s r&amp;aacute;pida, especialmente con &lt;code&gt;--batch&lt;/code&gt; . Tenga en cuenta que &lt;code&gt;cat-file&lt;/code&gt; seguir&amp;aacute; mostrando cada objeto solo una vez, incluso si se almacena varias veces en el repositorio.</target>
        </trans-unit>
        <trans-unit id="95919047a579b82415a0ddd6c6f601bfbb7dc80f" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;--check&lt;/code&gt; is in effect, or when applying the patch (which is the default when none of the options that disables it is in effect), make sure the patch is applicable to what the current index file records. If the file to be patched in the working tree is not up to date, it is flagged as an error. This flag also causes the index file to be updated.</source>
          <target state="translated">Cuando &lt;code&gt;--check&lt;/code&gt; est&amp;aacute; en efecto, o al aplicar el parche (que es el valor predeterminado cuando ninguna de las opciones que lo deshabilitan est&amp;aacute; en vigor), aseg&amp;uacute;rese de que el parche sea aplicable a lo que registra el archivo de &amp;iacute;ndice actual. Si el archivo que se va a parchear en el &amp;aacute;rbol de trabajo no est&amp;aacute; actualizado, se marca como un error. Este indicador tambi&amp;eacute;n hace que se actualice el archivo de &amp;iacute;ndice.</target>
        </trans-unit>
        <trans-unit id="526cf7ed548b3415806841ff6b0e065a944a8f5e" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;--compose&lt;/code&gt; is used, git send-email will use the From, Subject, and In-Reply-To headers specified in the message. If the body of the message (what you type after the headers and a blank line) only contains blank (or Git: prefixed) lines, the summary won&amp;rsquo;t be sent, but From, Subject, and In-Reply-To headers will be used unless they are removed.</source>
          <target state="translated">Cuando se usa &lt;code&gt;--compose&lt;/code&gt; , git send-email usar&amp;aacute; los encabezados De, Asunto y En respuesta a especificados en el mensaje. Si el cuerpo del mensaje (lo que escribe despu&amp;eacute;s de los encabezados y una l&amp;iacute;nea en blanco) solo contiene l&amp;iacute;neas en blanco (o Git: prefijado), el resumen no se enviar&amp;aacute;, pero los encabezados De, Asunto y En respuesta a. utilizarse a menos que se eliminen.</target>
        </trans-unit>
        <trans-unit id="ac6d168ca5e25a70ab78d5a850025a2ad07d998b" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;--exclude&lt;/code&gt; and &lt;code&gt;--include&lt;/code&gt; patterns are used, they are examined in the order they appear on the command line, and the first match determines if a patch to each path is used. A patch to a path that does not match any include/exclude pattern is used by default if there is no include pattern on the command line, and ignored if there is any include pattern.</source>
          <target state="translated">Cuando &lt;code&gt;--exclude&lt;/code&gt; y &lt;code&gt;--include&lt;/code&gt; se utilizan patrones, que se examinan en el orden en que aparecen en la l&amp;iacute;nea de comandos, y el primer partido determina si se usa un parche para cada ruta. Un parche a una ruta que no coincide con ning&amp;uacute;n patr&amp;oacute;n de inclusi&amp;oacute;n / exclusi&amp;oacute;n se usa de forma predeterminada si no hay un patr&amp;oacute;n de inclusi&amp;oacute;n en la l&amp;iacute;nea de comando, y se ignora si hay alg&amp;uacute;n patr&amp;oacute;n de inclusi&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="febfb7b902fc970c3396f3068a5c66e59c7ec8ea" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;--notes&lt;/code&gt; is in effect, the message from the notes is matched as if it were part of the log message.</source>
          <target state="translated">Cuando &lt;code&gt;--notes&lt;/code&gt; est&amp;aacute; en vigor, el mensaje de las notas se compara como si fuera parte del mensaje de registro.</target>
        </trans-unit>
        <trans-unit id="b84c74a91c715b3bf1b4e927529a07a15aed9721" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;--numstat&lt;/code&gt; has been given, do not munge pathnames, but use a NUL-terminated machine-readable format.</source>
          <target state="translated">Cuando se haya proporcionado &lt;code&gt;--numstat&lt;/code&gt; , no mezcle los nombres de ruta, sino use un formato legible por m&amp;aacute;quina terminado en NUL.</target>
        </trans-unit>
        <trans-unit id="d371e700585c518084c33d84fef0af43b13c3439" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;--raw&lt;/code&gt;, &lt;code&gt;--numstat&lt;/code&gt;, &lt;code&gt;--name-only&lt;/code&gt; or &lt;code&gt;--name-status&lt;/code&gt; has been given, do not munge pathnames and use NULs as output field terminators.</source>
          <target state="translated">Cuando &lt;code&gt;--raw&lt;/code&gt; , &lt;code&gt;--numstat&lt;/code&gt; , &lt;code&gt;--name-only&lt;/code&gt; o &lt;code&gt;--name-status&lt;/code&gt; se le ha dado, no haga munge nombres de ruta y NULs uso como terminadores de campo de salida.</target>
        </trans-unit>
        <trans-unit id="e163d548a1a886a531d60736c2ba3e851388a10a" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;--root&lt;/code&gt; is specified the initial commit will be shown as a big creation event. This is equivalent to a diff against the NULL tree.</source>
          <target state="translated">Cuando se especifica &lt;code&gt;--root&lt;/code&gt; , la confirmaci&amp;oacute;n inicial se mostrar&amp;aacute; como un gran evento de creaci&amp;oacute;n. Esto es equivalente a una diferencia contra el &amp;aacute;rbol NULL.</target>
        </trans-unit>
        <trans-unit id="5b88ba2b22685842fbd9b8b75fb2959da8ea9e8b" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;--stdin&lt;/code&gt; is specified, the command does not take &amp;lt;tree-ish&amp;gt; arguments from the command line. Instead, it reads lines containing either two &amp;lt;tree&amp;gt;, one &amp;lt;commit&amp;gt;, or a list of &amp;lt;commit&amp;gt; from its standard input. (Use a single space as separator.)</source>
          <target state="translated">Cuando se especifica &lt;code&gt;--stdin&lt;/code&gt; , el comando no toma argumentos &amp;lt;tree-ish&amp;gt; de la l&amp;iacute;nea de comando. En su lugar, lee l&amp;iacute;neas que contienen dos &amp;lt;&amp;aacute;rbol&amp;gt;, un &amp;lt;commit&amp;gt; o una lista de &amp;lt;commit&amp;gt; de su entrada est&amp;aacute;ndar. (Utilice un solo espacio como separador).</target>
        </trans-unit>
        <trans-unit id="c23ac888d8fe422c1532e2aed10782043e7c6859" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;--temp&lt;/code&gt; is used (or implied by &lt;code&gt;--stage=all&lt;/code&gt;) &lt;code&gt;git checkout-index&lt;/code&gt; will create a temporary file for each index entry being checked out. The index will not be updated with stat information. These options can be useful if the caller needs all stages of all unmerged entries so that the unmerged files can be processed by an external merge tool.</source>
          <target state="translated">When &lt;code&gt;--temp&lt;/code&gt; is used (or implied by &lt;code&gt;--stage=all&lt;/code&gt; ) &lt;code&gt;git checkout-index&lt;/code&gt; will create a temporary file for each index entry being checked out. The index will not be updated with stat information. These options can be useful if the caller needs all stages of all unmerged entries so that the unmerged files can be processed by an external merge tool.</target>
        </trans-unit>
        <trans-unit id="5c97ac9560dda79ead627bde39274f79b6e5dd8a" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;-S&lt;/code&gt; or &lt;code&gt;-G&lt;/code&gt; are used without &lt;code&gt;--pickaxe-all&lt;/code&gt;, only filepairs that match their respective criterion are kept in the output. When &lt;code&gt;--pickaxe-all&lt;/code&gt; is used, if even one filepair matches their respective criterion in a changeset, the entire changeset is kept. This behavior is designed to make reviewing changes in the context of the whole changeset easier.</source>
          <target state="translated">Cuando se usan &lt;code&gt;-S&lt;/code&gt; o &lt;code&gt;-G&lt;/code&gt; sin &lt;code&gt;--pickaxe-all&lt;/code&gt; , solo los pares de archivos que coinciden con sus respectivos criterios se mantienen en la salida. Cuando se &lt;code&gt;--pickaxe-all&lt;/code&gt; , si incluso un par de archivos coincide con su criterio respectivo en un conjunto de cambios, se conserva todo el conjunto de cambios. Este comportamiento est&amp;aacute; dise&amp;ntilde;ado para facilitar la revisi&amp;oacute;n de cambios en el contexto de todo el conjunto de cambios.</target>
        </trans-unit>
        <trans-unit id="b7230470efbcbdb8b4c76cdcdcf3272fde68030f" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;-S&lt;/code&gt; or &lt;code&gt;-G&lt;/code&gt; finds a change, show all the changes in that changeset, not just the files that contain the change in &amp;lt;string&amp;gt;.</source>
          <target state="translated">Cuando &lt;code&gt;-S&lt;/code&gt; o &lt;code&gt;-G&lt;/code&gt; encuentra un cambio, muestra todos los cambios en ese conjunto de cambios, no solo los archivos que contienen el cambio en &amp;lt;string&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="b52ce403c26e2631158c50ee6bd3c17065ed82dc" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;-u&lt;/code&gt; option is not used, untracked files and directories are shown (i.e. the same as specifying &lt;code&gt;normal&lt;/code&gt;), to help you avoid forgetting to add newly created files. Because it takes extra work to find untracked files in the filesystem, this mode may take some time in a large working tree. Consider enabling untracked cache and split index if supported (see &lt;code&gt;git update-index --untracked-cache&lt;/code&gt; and &lt;code&gt;git update-index
--split-index&lt;/code&gt;), Otherwise you can use &lt;code&gt;no&lt;/code&gt; to have &lt;code&gt;git status&lt;/code&gt; return more quickly without showing untracked files.</source>
          <target state="translated">Cuando no se usa la opci&amp;oacute;n &lt;code&gt;-u&lt;/code&gt; , se muestran los archivos y directorios sin seguimiento (es decir, lo mismo que se especifica &lt;code&gt;normal&lt;/code&gt; ), para ayudarlo a evitar olvidar agregar archivos reci&amp;eacute;n creados. Debido a que se necesita un trabajo adicional para encontrar archivos sin seguimiento en el sistema de archivos, este modo puede llevar alg&amp;uacute;n tiempo en un &amp;aacute;rbol de trabajo grande. Considere habilitar la cach&amp;eacute; sin seguimiento y el &amp;iacute;ndice dividido si es compatible (consulte &lt;code&gt;git update-index --untracked-cache&lt;/code&gt; y &lt;code&gt;git update-index --split-index&lt;/code&gt; ). De lo contrario, puede usar &lt;code&gt;no&lt;/code&gt; para que el &lt;code&gt;git status&lt;/code&gt; regrese m&amp;aacute;s r&amp;aacute;pidamente sin mostrar los archivos sin seguimiento.</target>
        </trans-unit>
        <trans-unit id="97c7c816e31485397947c4cd78f79e742f80ec39" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;-z&lt;/code&gt; output option is in effect, the output is formatted this way:</source>
          <target state="translated">Cuando la opci&amp;oacute;n de salida &lt;code&gt;-z&lt;/code&gt; est&amp;aacute; en vigor, la salida se formatea de esta manera:</target>
        </trans-unit>
        <trans-unit id="2bf71954fc8fac90c9030e3b9b1232971580d22a" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;FETCH_HEAD&lt;/code&gt; (and no other commit) is specified, the branches recorded in the &lt;code&gt;.git/FETCH_HEAD&lt;/code&gt; file by the previous invocation of &lt;code&gt;git fetch&lt;/code&gt; for merging are merged to the current branch.</source>
          <target state="translated">Cuando se &lt;code&gt;FETCH_HEAD&lt;/code&gt; (y ninguna otra confirmaci&amp;oacute;n), las ramas registradas en el archivo &lt;code&gt;.git/FETCH_HEAD&lt;/code&gt; por la invocaci&amp;oacute;n anterior de &lt;code&gt;git fetch&lt;/code&gt; para fusionar se fusionan con la rama actual.</target>
        </trans-unit>
        <trans-unit id="093107f57324ea8ddf834562dc5da735634ce1c2" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;fetch.fsckObjects&lt;/code&gt; or &lt;code&gt;receive.fsckObjects&lt;/code&gt; are not set, the value of this variable is used instead. Defaults to false.</source>
          <target state="translated">Cuando &lt;code&gt;fetch.fsckObjects&lt;/code&gt; o &lt;code&gt;receive.fsckObjects&lt;/code&gt; no se han establecido, el valor de esta variable se utiliza en su lugar. El valor predeterminado es falso.</target>
        </trans-unit>
        <trans-unit id="f0f4e4ab298d72d3ce878991ffe1cd2532ffab74" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;fetch.unpackLimit&lt;/code&gt; or &lt;code&gt;receive.unpackLimit&lt;/code&gt; are not set, the value of this variable is used instead. The default value is 100.</source>
          <target state="translated">Cuando &lt;code&gt;fetch.unpackLimit&lt;/code&gt; o &lt;code&gt;receive.unpackLimit&lt;/code&gt; no se han establecido, el valor de esta variable se utiliza en su lugar. El valor predeterminado es 100.</target>
        </trans-unit>
        <trans-unit id="0f43e1a31ad9e45784cdafec68b8141e1a628402" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;fsck.&amp;lt;msg-id&amp;gt;&lt;/code&gt; is set, errors can be switched to warnings and vice versa by configuring the &lt;code&gt;fsck.&amp;lt;msg-id&amp;gt;&lt;/code&gt; setting where the &lt;code&gt;&amp;lt;msg-id&amp;gt;&lt;/code&gt; is the fsck message ID and the value is one of &lt;code&gt;error&lt;/code&gt;, &lt;code&gt;warn&lt;/code&gt; or &lt;code&gt;ignore&lt;/code&gt;. For convenience, fsck prefixes the error/warning with the message ID, e.g. &quot;missingEmail: invalid author/committer line - missing email&quot; means that setting &lt;code&gt;fsck.missingEmail = ignore&lt;/code&gt; will hide that issue.</source>
          <target state="translated">Cuando se establece &lt;code&gt;fsck.&amp;lt;msg-id&amp;gt;&lt;/code&gt; , los errores se pueden cambiar a advertencias y viceversa configurando el ajuste &lt;code&gt;fsck.&amp;lt;msg-id&amp;gt;&lt;/code&gt; donde &lt;code&gt;&amp;lt;msg-id&amp;gt;&lt;/code&gt; es el ID del mensaje fsck y el valor es uno de &lt;code&gt;error&lt;/code&gt; , &lt;code&gt;warn&lt;/code&gt; o &lt;code&gt;ignore&lt;/code&gt; . Por conveniencia, fsck antepone el error / advertencia con la ID del mensaje, por ejemplo, &quot;missingEmail: autor / autor de l&amp;iacute;nea inv&amp;aacute;lido - correo electr&amp;oacute;nico faltante&quot; significa que configurar &lt;code&gt;fsck.missingEmail = ignore&lt;/code&gt; ocultar&amp;aacute; ese problema.</target>
        </trans-unit>
        <trans-unit id="ce3f108ee8253a42ecb067bc1a011bcbcd3ad290" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;git apply&lt;/code&gt; is used as a &quot;better GNU patch&quot;, the user can pass the &lt;code&gt;--unsafe-paths&lt;/code&gt; option to override this safety check. This option has no effect when &lt;code&gt;--index&lt;/code&gt; or &lt;code&gt;--cached&lt;/code&gt; is in use.</source>
          <target state="translated">Cuando se usa &lt;code&gt;git apply&lt;/code&gt; como un &quot;mejor parche GNU&quot;, el usuario puede pasar la opci&amp;oacute;n &lt;code&gt;--unsafe-paths&lt;/code&gt; para anular esta verificaci&amp;oacute;n de seguridad. Esta opci&amp;oacute;n no tiene ning&amp;uacute;n efecto cuando &lt;code&gt;--index&lt;/code&gt; o &lt;code&gt;--cached&lt;/code&gt; est&amp;aacute;n en uso.</target>
        </trans-unit>
        <trans-unit id="dea5ce8f581717a21d1ee89e4952655599f11488" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;git difftool&lt;/code&gt; is invoked with this tool (either through the &lt;code&gt;-t&lt;/code&gt; or &lt;code&gt;--tool&lt;/code&gt; option or the &lt;code&gt;diff.tool&lt;/code&gt; configuration variable) the configured command line will be invoked with the following variables available: &lt;code&gt;$LOCAL&lt;/code&gt; is set to the name of the temporary file containing the contents of the diff pre-image and &lt;code&gt;$REMOTE&lt;/code&gt; is set to the name of the temporary file containing the contents of the diff post-image. &lt;code&gt;$MERGED&lt;/code&gt; is the name of the file which is being compared. &lt;code&gt;$BASE&lt;/code&gt; is provided for compatibility with custom merge tool commands and has the same value as &lt;code&gt;$MERGED&lt;/code&gt;.</source>
          <target state="translated">Cuando se invoca &lt;code&gt;git difftool&lt;/code&gt; con esta herramienta (ya sea a trav&amp;eacute;s de la opci&amp;oacute;n &lt;code&gt;-t&lt;/code&gt; o &lt;code&gt;--tool&lt;/code&gt; o la variable de configuraci&amp;oacute;n &lt;code&gt;diff.tool&lt;/code&gt; ), la l&amp;iacute;nea de comando configurada se invocar&amp;aacute; con las siguientes variables disponibles: &lt;code&gt;$LOCAL&lt;/code&gt; se establece en el nombre del temporal archivo que contiene el contenido de la preimagen diff y &lt;code&gt;$REMOTE&lt;/code&gt; se establece en el nombre del archivo temporal que contiene el contenido de la postimagen diff. &lt;code&gt;$MERGED&lt;/code&gt; es el nombre del archivo que se est&amp;aacute; comparando. &lt;code&gt;$BASE&lt;/code&gt; se proporciona para compatibilidad con los comandos de la herramienta de combinaci&amp;oacute;n personalizada y tiene el mismo valor que &lt;code&gt;$MERGED&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="02bc7953c8eb819402a97fdb05db86103d3e94f0" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;git fetch&lt;/code&gt; is run with explicit branches and/or tags to fetch on the command line, e.g. &lt;code&gt;git fetch origin master&lt;/code&gt;, the &amp;lt;refspec&amp;gt;s given on the command line determine what are to be fetched (e.g. &lt;code&gt;master&lt;/code&gt; in the example, which is a short-hand for &lt;code&gt;master:&lt;/code&gt;, which in turn means &quot;fetch the &lt;code&gt;master&lt;/code&gt; branch but I do not explicitly say what remote-tracking branch to update with it from the command line&quot;), and the example command will fetch &lt;code&gt;only&lt;/code&gt; the &lt;code&gt;master&lt;/code&gt; branch. The &lt;code&gt;remote.&amp;lt;repository&amp;gt;.fetch&lt;/code&gt; values determine which remote-tracking branch, if any, is updated. When used in this way, the &lt;code&gt;remote.&amp;lt;repository&amp;gt;.fetch&lt;/code&gt; values do not have any effect in deciding &lt;code&gt;what&lt;/code&gt; gets fetched (i.e. the values are not used as refspecs when the command-line lists refspecs); they are only used to decide &lt;code&gt;where&lt;/code&gt; the refs that are fetched are stored by acting as a mapping.</source>
          <target state="translated">Cuando &lt;code&gt;git fetch&lt;/code&gt; se ejecuta con ramas expl&amp;iacute;citas y / o etiquetas para buscar en la l&amp;iacute;nea de comando, por ejemplo, &lt;code&gt;git fetch origin master&lt;/code&gt; , las &amp;lt;refspec&amp;gt; dadas en la l&amp;iacute;nea de comando determinan qu&amp;eacute; se va a buscar (por ejemplo, &lt;code&gt;master&lt;/code&gt; en el ejemplo, que es una abreviatura de &lt;code&gt;master:&lt;/code&gt; , que a su vez significa &quot;buscar la rama &lt;code&gt;master&lt;/code&gt; , pero no digo expl&amp;iacute;citamente qu&amp;eacute; rama de seguimiento remoto actualizar con ella desde la l&amp;iacute;nea de comandos&quot;), y el comando de ejemplo buscar&amp;aacute; &lt;code&gt;only&lt;/code&gt; la rama &lt;code&gt;master&lt;/code&gt; . Los valores de &lt;code&gt;remote.&amp;lt;repository&amp;gt;.fetch&lt;/code&gt; determinan qu&amp;eacute; rama de seguimiento remoto, si la hay, se actualiza. Cuando se usa de esta manera, el &lt;code&gt;remote.&amp;lt;repository&amp;gt;.fetch&lt;/code&gt; los valores no tienen ning&amp;uacute;n efecto a la hora de decidir &lt;code&gt;what&lt;/code&gt; obtiene (es decir, los valores no se utilizan como refspecs cuando la l&amp;iacute;nea de comandos enumera refspecs); solo se usan para decidir &lt;code&gt;where&lt;/code&gt; se almacenan las referencias que se obtienen actuando como un mapeo.</target>
        </trans-unit>
        <trans-unit id="d3bb27ea8d5739147518646e08d478432b5ac353" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;git fetch&lt;/code&gt; is run without specifying what branches and/or tags to fetch on the command line, e.g. &lt;code&gt;git fetch origin&lt;/code&gt; or &lt;code&gt;git fetch&lt;/code&gt;, &lt;code&gt;remote.&amp;lt;repository&amp;gt;.fetch&lt;/code&gt; values are used as the refspecs&amp;mdash;​they specify which refs to fetch and which local refs to update. The example above will fetch all branches that exist in the &lt;code&gt;origin&lt;/code&gt; (i.e. any ref that matches the left-hand side of the value, &lt;code&gt;refs/heads/*&lt;/code&gt;) and update the corresponding remote-tracking branches in the &lt;code&gt;refs/remotes/origin/*&lt;/code&gt; hierarchy.</source>
          <target state="translated">Cuando se ejecuta &lt;code&gt;git fetch&lt;/code&gt; sin especificar qu&amp;eacute; ramas y / o etiquetas buscar en la l&amp;iacute;nea de comando, por ejemplo, &lt;code&gt;git fetch origin&lt;/code&gt; o &lt;code&gt;git fetch&lt;/code&gt; , &lt;code&gt;remote.&amp;lt;repository&amp;gt;.fetch&lt;/code&gt; valores remotos. &amp;lt;repository&amp;gt; .fetch se utilizan como refspecs: especifican qu&amp;eacute; referencias se deben buscar y qu&amp;eacute; referencias locales actualizar. El ejemplo anterior obtendr&amp;aacute; todas las ramas que existen en el &lt;code&gt;origin&lt;/code&gt; (es decir, cualquier referencia que coincida con el lado izquierdo del valor, &lt;code&gt;refs/heads/*&lt;/code&gt; ) y actualizar&amp;aacute; las ramas de seguimiento remoto correspondientes en &lt;code&gt;refs/remotes/origin/*&lt;/code&gt; jerarqu&amp;iacute;a.</target>
        </trans-unit>
        <trans-unit id="6bfc306f6ccec6cbac00c82d44f7befe47671739" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;git fetch&lt;/code&gt; is used with &lt;code&gt;&amp;lt;src&amp;gt;:&amp;lt;dst&amp;gt;&lt;/code&gt; refspec it may refuse to update the local branch as discussed in the &lt;code&gt;&amp;lt;refspec&amp;gt;&lt;/code&gt; part below. This option overrides that check.</source>
          <target state="translated">Cuando se usa &lt;code&gt;git fetch&lt;/code&gt; con &lt;code&gt;&amp;lt;src&amp;gt;:&amp;lt;dst&amp;gt;&lt;/code&gt; refspec, puede negarse a actualizar la rama local como se explica en la parte &lt;code&gt;&amp;lt;refspec&amp;gt;&lt;/code&gt; a continuaci&amp;oacute;n. Esta opci&amp;oacute;n anula esa verificaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="b8a0a18f13c1248a211519fc4b6c3ee775403075" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;git fetch&lt;/code&gt; is used with &lt;code&gt;&amp;lt;src&amp;gt;:&amp;lt;dst&amp;gt;&lt;/code&gt; refspec it may refuse to update the local branch as discussed in the &lt;code&gt;&amp;lt;refspec&amp;gt;&lt;/code&gt; part of the &lt;a href=&quot;git-fetch&quot;&gt;git-fetch[1]&lt;/a&gt; documentation. This option overrides that check.</source>
          <target state="translated">Cuando se usa &lt;code&gt;git fetch&lt;/code&gt; con &lt;code&gt;&amp;lt;src&amp;gt;:&amp;lt;dst&amp;gt;&lt;/code&gt; refspec, puede negarse a actualizar la rama local como se explica en la parte &lt;code&gt;&amp;lt;refspec&amp;gt;&lt;/code&gt; de la documentaci&amp;oacute;n de &lt;a href=&quot;git-fetch&quot;&gt;git-fetch [1]&lt;/a&gt; . Esta opci&amp;oacute;n anula esa verificaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="946d45913d1a6d20975808ddb9f4de7a3a592055" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;git gc&lt;/code&gt; is run, it calls &lt;code&gt;git worktree prune --expire 3.months.ago&lt;/code&gt;. This config variable can be used to set a different grace period. The value &quot;now&quot; may be used to disable the grace period and prune &lt;code&gt;$GIT_DIR/worktrees&lt;/code&gt; immediately, or &quot;never&quot; may be used to suppress pruning.</source>
          <target state="translated">Cuando se ejecuta &lt;code&gt;git gc&lt;/code&gt; , llama a &lt;code&gt;git worktree prune --expire 3.months.ago&lt;/code&gt; . Esta variable de configuraci&amp;oacute;n se puede utilizar para establecer un per&amp;iacute;odo de gracia diferente. El valor &quot;ahora&quot; puede usarse para deshabilitar el per&amp;iacute;odo de gracia y podar &lt;code&gt;$GIT_DIR/worktrees&lt;/code&gt; inmediatamente, o puede usarse &quot;nunca&quot; para suprimir la poda.</target>
        </trans-unit>
        <trans-unit id="bdaf9b565f5bc5effacd5e94ca1e6e23df9c9f7a" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;git gc&lt;/code&gt; is run, it will call &lt;code&gt;prune --expire 2.weeks.ago&lt;/code&gt;. Override the grace period with this config variable. The value &quot;now&quot; may be used to disable this grace period and always prune unreachable objects immediately, or &quot;never&quot; may be used to suppress pruning. This feature helps prevent corruption when &lt;code&gt;git gc&lt;/code&gt; runs concurrently with another process writing to the repository; see the &quot;NOTES&quot; section of &lt;a href=&quot;git-gc&quot;&gt;git-gc[1]&lt;/a&gt;.</source>
          <target state="translated">Cuando se ejecuta &lt;code&gt;git gc&lt;/code&gt; , &lt;code&gt;prune --expire 2.weeks.ago&lt;/code&gt; . Anule el per&amp;iacute;odo de gracia con esta variable de configuraci&amp;oacute;n. El valor &quot;ahora&quot; se puede usar para deshabilitar este per&amp;iacute;odo de gracia y siempre podar los objetos inalcanzables inmediatamente, o se puede usar &quot;nunca&quot; para suprimir la poda. Esta caracter&amp;iacute;stica ayuda a prevenir la corrupci&amp;oacute;n cuando &lt;code&gt;git gc&lt;/code&gt; se ejecuta al mismo tiempo que otro proceso que escribe en el repositorio; consulte la secci&amp;oacute;n &quot;NOTAS&quot; de &lt;a href=&quot;git-gc&quot;&gt;git-gc [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9771ab35f0db8c62ffb81b026ac116ab479df958" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;git mergetool&lt;/code&gt; is invoked with this tool (either through the &lt;code&gt;-t&lt;/code&gt; or &lt;code&gt;--tool&lt;/code&gt; option or the &lt;code&gt;merge.tool&lt;/code&gt; configuration variable) the configured command line will be invoked with &lt;code&gt;$BASE&lt;/code&gt; set to the name of a temporary file containing the common base for the merge, if available; &lt;code&gt;$LOCAL&lt;/code&gt; set to the name of a temporary file containing the contents of the file on the current branch; &lt;code&gt;$REMOTE&lt;/code&gt; set to the name of a temporary file containing the contents of the file to be merged, and &lt;code&gt;$MERGED&lt;/code&gt; set to the name of the file to which the merge tool should write the result of the merge resolution.</source>
          <target state="translated">Cuando se invoca &lt;code&gt;git mergetool&lt;/code&gt; con esta herramienta (ya sea a trav&amp;eacute;s de la opci&amp;oacute;n &lt;code&gt;-t&lt;/code&gt; o &lt;code&gt;--tool&lt;/code&gt; o la variable de configuraci&amp;oacute;n &lt;code&gt;merge.tool&lt;/code&gt; ), la l&amp;iacute;nea de comando configurada se invocar&amp;aacute; con &lt;code&gt;$BASE&lt;/code&gt; establecido en el nombre de un archivo temporal que contiene la base com&amp;uacute;n para la fusi&amp;oacute;n, si est&amp;aacute; disponible; &lt;code&gt;$LOCAL&lt;/code&gt; establecido en el nombre de un archivo temporal que contiene el contenido del archivo en la rama actual; &lt;code&gt;$REMOTE&lt;/code&gt; establece en el nombre de un archivo temporal que contiene el contenido del archivo que se fusionar&amp;aacute;, y &lt;code&gt;$MERGED&lt;/code&gt; establece en el nombre del archivo en el que la herramienta de combinaci&amp;oacute;n debe escribir el resultado de la resoluci&amp;oacute;n de combinaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="8d649c2a1b515f828b380ed0228639a9abf6f2e7" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;git-difftool&lt;/code&gt; is invoked with the &lt;code&gt;-g&lt;/code&gt; or &lt;code&gt;--gui&lt;/code&gt; option the default diff tool will be read from the configured &lt;code&gt;diff.guitool&lt;/code&gt; variable instead of &lt;code&gt;diff.tool&lt;/code&gt;. The &lt;code&gt;--no-gui&lt;/code&gt; option can be used to override this setting. If &lt;code&gt;diff.guitool&lt;/code&gt; is not set, we will fallback in the order of &lt;code&gt;merge.guitool&lt;/code&gt;, &lt;code&gt;diff.tool&lt;/code&gt;, &lt;code&gt;merge.tool&lt;/code&gt; until a tool is found.</source>
          <target state="translated">Cuando se invoca &lt;code&gt;git-difftool&lt;/code&gt; con la opci&amp;oacute;n &lt;code&gt;-g&lt;/code&gt; o &lt;code&gt;--gui&lt;/code&gt; , la herramienta de diferencias predeterminada se leer&amp;aacute; desde la variable &lt;code&gt;diff.guitool&lt;/code&gt; configurada en lugar de &lt;code&gt;diff.tool&lt;/code&gt; . La &lt;code&gt;--no-gui&lt;/code&gt; se puede utilizar para anular esta configuraci&amp;oacute;n. Si &lt;code&gt;diff.guitool&lt;/code&gt; no est&amp;aacute; configurado, retrocederemos en el orden de &lt;code&gt;merge.guitool&lt;/code&gt; , &lt;code&gt;diff.tool&lt;/code&gt; , &lt;code&gt;merge.tool&lt;/code&gt; hasta que se encuentre una herramienta.</target>
        </trans-unit>
        <trans-unit id="dab1778e78eece39a70fe4959b77fef05af95366" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;git-mergetool&lt;/code&gt; is invoked with the &lt;code&gt;-g&lt;/code&gt; or &lt;code&gt;--gui&lt;/code&gt; option the default merge tool will be read from the configured &lt;code&gt;merge.guitool&lt;/code&gt; variable instead of &lt;code&gt;merge.tool&lt;/code&gt;. If &lt;code&gt;merge.guitool&lt;/code&gt; is not set, we will fallback to the tool configured under &lt;code&gt;merge.tool&lt;/code&gt;.</source>
          <target state="translated">Cuando se invoca &lt;code&gt;git-mergetool&lt;/code&gt; con la opci&amp;oacute;n &lt;code&gt;-g&lt;/code&gt; o &lt;code&gt;--gui&lt;/code&gt; , la herramienta de combinaci&amp;oacute;n predeterminada se leer&amp;aacute; desde la variable &lt;code&gt;merge.guitool&lt;/code&gt; configurada en lugar de &lt;code&gt;merge.tool&lt;/code&gt; . Si &lt;code&gt;merge.guitool&lt;/code&gt; no est&amp;aacute; definida, que se replegar&amp;aacute; para la herramienta configurada en &lt;code&gt;merge.tool&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="55d1f905322639499a3e0c7d64b920e915841fa1" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;group&lt;/code&gt; (or &lt;code&gt;true&lt;/code&gt;), the repository is made shareable between several users in a group (making sure all the files and objects are group-writable). When &lt;code&gt;all&lt;/code&gt; (or &lt;code&gt;world&lt;/code&gt; or &lt;code&gt;everybody&lt;/code&gt;), the repository will be readable by all users, additionally to being group-shareable. When &lt;code&gt;umask&lt;/code&gt; (or &lt;code&gt;false&lt;/code&gt;), Git will use permissions reported by umask(2). When &lt;code&gt;0xxx&lt;/code&gt;, where &lt;code&gt;0xxx&lt;/code&gt; is an octal number, files in the repository will have this mode value. &lt;code&gt;0xxx&lt;/code&gt; will override user&amp;rsquo;s umask value (whereas the other options will only override requested parts of the user&amp;rsquo;s umask value). Examples: &lt;code&gt;0660&lt;/code&gt; will make the repo read/write-able for the owner and group, but inaccessible to others (equivalent to &lt;code&gt;group&lt;/code&gt; unless umask is e.g. &lt;code&gt;0022&lt;/code&gt;). &lt;code&gt;0640&lt;/code&gt; is a repository that is group-readable but not group-writable. See &lt;a href=&quot;git-init&quot;&gt;git-init[1]&lt;/a&gt;. False by default.</source>
          <target state="translated">Cuando es &lt;code&gt;group&lt;/code&gt; (o &lt;code&gt;true&lt;/code&gt; ), el repositorio se puede compartir entre varios usuarios en un grupo (asegur&amp;aacute;ndose de que todos los archivos y objetos se puedan escribir en grupo). Cuando &lt;code&gt;all&lt;/code&gt; (o el &lt;code&gt;world&lt;/code&gt; o &lt;code&gt;everybody&lt;/code&gt; ), el repositorio ser&amp;aacute; legible por todos los usuarios, adem&amp;aacute;s de ser compartido en grupo. Cuando &lt;code&gt;umask&lt;/code&gt; (o &lt;code&gt;false&lt;/code&gt; ), Git usar&amp;aacute; los permisos informados por umask (2). Cuando &lt;code&gt;0xxx&lt;/code&gt; , donde &lt;code&gt;0xxx&lt;/code&gt; es un n&amp;uacute;mero octal, los archivos del repositorio tendr&amp;aacute;n este valor de modo. &lt;code&gt;0xxx&lt;/code&gt; anular&amp;aacute; el valor de umask del usuario (mientras que las otras opciones solo anular&amp;aacute;n las partes solicitadas del valor de umask del usuario). Ejemplos: &lt;code&gt;0660&lt;/code&gt; har&amp;aacute; que el repositorio sea de lectura / escritura para el propietario y el grupo, pero inaccesible para otros (equivalente a &lt;code&gt;group&lt;/code&gt; a menos que umask sea, por ejemplo, &lt;code&gt;0022&lt;/code&gt; ). &lt;code&gt;0640&lt;/code&gt; es un repositorio que se puede leer en grupo, pero no se puede escribir en grupo. Consulte &lt;a href=&quot;git-init&quot;&gt;git-init [1]&lt;/a&gt; . Falso por defecto.</target>
        </trans-unit>
        <trans-unit id="0c640b1443fdc376fb0e05e5b19871e0f70bfa75" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;interactive&lt;/code&gt;, enable the interactive mode of rebase.</source>
          <target state="translated">Cuando sea &lt;code&gt;interactive&lt;/code&gt; , habilite el modo interactivo de rebase.</target>
        </trans-unit>
        <trans-unit id="0e5d1d0d5309f291d73a19a6f71347b59d761978" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;konqueror&lt;/code&gt; is specified in the &lt;code&gt;man.viewer&lt;/code&gt; configuration variable, we launch &lt;code&gt;kfmclient&lt;/code&gt; to try to open the man page on an already opened konqueror in a new tab if possible.</source>
          <target state="translated">Cuando se especifica &lt;code&gt;konqueror&lt;/code&gt; en la variable de configuraci&amp;oacute;n &lt;code&gt;man.viewer&lt;/code&gt; , lanzamos &lt;code&gt;kfmclient&lt;/code&gt; para intentar abrir la p&amp;aacute;gina del manual en un konqueror ya abierto en una nueva pesta&amp;ntilde;a si es posible.</target>
        </trans-unit>
        <trans-unit id="162b4f89725e01e084b1d2a9bb66f41a211da6f6" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;matching&lt;/code&gt; mode is specified, paths that explicitly match an ignored pattern are shown. If a directory matches an ignore pattern, then it is shown, but not paths contained in the ignored directory. If a directory does not match an ignore pattern, but all contents are ignored, then the directory is not shown, but all contents are shown.</source>
          <target state="translated">Cuando se especifica el modo de &lt;code&gt;matching&lt;/code&gt; , se muestran las rutas que coinciden expl&amp;iacute;citamente con un patr&amp;oacute;n ignorado. Si un directorio coincide con un patr&amp;oacute;n de ignorar, se muestra, pero no las rutas contenidas en el directorio ignorado. Si un directorio no coincide con un patr&amp;oacute;n de ignorar, pero se ignoran todos los contenidos, entonces el directorio no se muestra, pero se muestran todos los contenidos.</target>
        </trans-unit>
        <trans-unit id="239b51beb1f8c13233881b0568518d58e269df96" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;merges&lt;/code&gt;, pass the &lt;code&gt;--rebase-merges&lt;/code&gt; option to &lt;code&gt;git rebase&lt;/code&gt; so that the local merge commits are included in the rebase (see &lt;a href=&quot;git-rebase&quot;&gt;git-rebase[1]&lt;/a&gt; for details).</source>
          <target state="translated">Cuando se &lt;code&gt;merges&lt;/code&gt; , pase la opci&amp;oacute;n &lt;code&gt;--rebase-merges&lt;/code&gt; a &lt;code&gt;git rebase&lt;/code&gt; para que las confirmaciones de fusi&amp;oacute;n locales se incluyan en la rebase (consulte &lt;a href=&quot;git-rebase&quot;&gt;git-rebase [1]&lt;/a&gt; para obtener m&amp;aacute;s detalles).</target>
        </trans-unit>
        <trans-unit id="26887709475bb99a484f3550dfcf66463a02ff1c" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;preserve&lt;/code&gt; (deprecated in favor of &lt;code&gt;merges&lt;/code&gt;), also pass &lt;code&gt;--preserve-merges&lt;/code&gt; along to &lt;code&gt;git rebase&lt;/code&gt; so that locally committed merge commits will not be flattened by running &lt;code&gt;git pull&lt;/code&gt;.</source>
          <target state="translated">Cuando &lt;code&gt;preserve&lt;/code&gt; (en desuso a favor de las &lt;code&gt;merges&lt;/code&gt; ), tambi&amp;eacute;n pase &lt;code&gt;--preserve-merges&lt;/code&gt; a &lt;code&gt;git rebase&lt;/code&gt; para que las confirmaciones de fusi&amp;oacute;n comprometidas localmente no se aplanen al ejecutar &lt;code&gt;git pull&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c040d756e251986ff4d930aa40402b774da81b76" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;preserveUser&lt;/code&gt; is true, &lt;code&gt;git p4&lt;/code&gt; normally dies if it cannot find an author in the p4 user map. This setting submits the change regardless.</source>
          <target state="translated">Cuando &lt;code&gt;preserveUser&lt;/code&gt; es verdadero, &lt;code&gt;git p4&lt;/code&gt; normalmente muere si no puede encontrar un autor en el mapa de usuario de p4. Esta configuraci&amp;oacute;n env&amp;iacute;a el cambio independientemente.</target>
        </trans-unit>
        <trans-unit id="f1cb457481e4cab2531cdb48fb2ed70a72c47f80" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;receive-pack&lt;/code&gt; takes in objects, they are placed into a temporary &quot;quarantine&quot; directory within the &lt;code&gt;$GIT_DIR/objects&lt;/code&gt; directory and migrated into the main object store only after the &lt;code&gt;pre-receive&lt;/code&gt; hook has completed. If the push fails before then, the temporary directory is removed entirely.</source>
          <target state="translated">Cuando &lt;code&gt;receive-pack&lt;/code&gt; &lt;code&gt;$GIT_DIR/objects&lt;/code&gt; objetos, se colocan en un directorio de &quot;cuarentena&quot; temporal dentro del directorio $ GIT_DIR / objects y se migran al almac&amp;eacute;n de objetos principal solo despu&amp;eacute;s de que se haya completado el enlace de &lt;code&gt;pre-receive&lt;/code&gt; . Si la inserci&amp;oacute;n falla antes de esa fecha, el directorio temporal se elimina por completo.</target>
        </trans-unit>
        <trans-unit id="13eed45e8cb127a4420b06f0b52f497c696b7d45" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;text&lt;/code&gt; is set to &quot;auto&quot;, the path is marked for automatic end-of-line conversion. If Git decides that the content is text, its line endings are converted to LF on checkin. When the file has been committed with CRLF, no conversion is done.</source>
          <target state="translated">Cuando el &lt;code&gt;text&lt;/code&gt; o se establece en &quot;autom&amp;aacute;tico&quot;, la ruta se marca para la conversi&amp;oacute;n autom&amp;aacute;tica de final de l&amp;iacute;nea. Si Git decide que el contenido es texto, sus finales de l&amp;iacute;nea se convierten a LF al registrarse. Cuando el archivo se ha comprometido con CRLF, no se realiza ninguna conversi&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="2bb8610f0d3f51c94aca7dd51e3603814301750d" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;text=auto&lt;/code&gt; conversion is enabled in a cross-platform project using push and pull to a central repository the text files containing CRLFs should be normalized.</source>
          <target state="translated">Cuando &lt;code&gt;text=auto&lt;/code&gt; conversi&amp;oacute;n text = auto est&amp;aacute; habilitada en un proyecto multiplataforma usando push and pull a un repositorio central, los archivos de texto que contienen CRLF deben normalizarse.</target>
        </trans-unit>
        <trans-unit id="f1b569ad0a0d3f731d90377a830d25de99487fad" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;upload-pack&lt;/code&gt; has started &lt;code&gt;pack-objects&lt;/code&gt;, there may be a quiet period while &lt;code&gt;pack-objects&lt;/code&gt; prepares the pack. Normally it would output progress information, but if &lt;code&gt;--quiet&lt;/code&gt; was used for the fetch, &lt;code&gt;pack-objects&lt;/code&gt; will output nothing at all until the pack data begins. Some clients and networks may consider the server to be hung and give up. Setting this option instructs &lt;code&gt;upload-pack&lt;/code&gt; to send an empty keepalive packet every &lt;code&gt;uploadpack.keepAlive&lt;/code&gt; seconds. Setting this option to 0 disables keepalive packets entirely. The default is 5 seconds.</source>
          <target state="translated">Cuando &lt;code&gt;upload-pack&lt;/code&gt; ha iniciado &lt;code&gt;pack-objects&lt;/code&gt; , puede haber un per&amp;iacute;odo de silencio mientras &lt;code&gt;pack-objects&lt;/code&gt; prepara el paquete. Normalmente, generar&amp;iacute;a informaci&amp;oacute;n de progreso, pero si se usa &lt;code&gt;--quiet&lt;/code&gt; para la recuperaci&amp;oacute;n, &lt;code&gt;pack-objects&lt;/code&gt; generar&amp;aacute;n nada hasta que comiencen los datos del paquete. Algunos clientes y redes pueden considerar que el servidor est&amp;aacute; bloqueado y abandonado. La configuraci&amp;oacute;n de esta opci&amp;oacute;n indica a &lt;code&gt;upload-pack&lt;/code&gt; que env&amp;iacute;e un paquete keepalive vac&amp;iacute;o cada segundo &lt;code&gt;uploadpack.keepAlive&lt;/code&gt; . Establecer esta opci&amp;oacute;n en 0 deshabilita los paquetes keepalive por completo. El valor predeterminado es 5 segundos.</target>
        </trans-unit>
        <trans-unit id="09ea8c9e4617731ed2a0cdf40185d39ec477e171" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;uploadpack.hideRefs&lt;/code&gt; is in effect, allow &lt;code&gt;upload-pack&lt;/code&gt; to accept a fetch request that asks for an object at the tip of a hidden ref (by default, such a request is rejected). See also &lt;code&gt;uploadpack.hideRefs&lt;/code&gt;. Even if this is false, a client may be able to steal objects via the techniques described in the &quot;SECURITY&quot; section of the &lt;a href=&quot;gitnamespaces&quot;&gt;gitnamespaces[7]&lt;/a&gt; man page; it&amp;rsquo;s best to keep private data in a separate repository.</source>
          <target state="translated">Cuando &lt;code&gt;uploadpack.hideRefs&lt;/code&gt; est&amp;eacute; en vigor, permita que &lt;code&gt;upload-pack&lt;/code&gt; acepte una solicitud de recuperaci&amp;oacute;n que solicite un objeto en la punta de una referencia oculta (de forma predeterminada, dicha solicitud es rechazada). Consulte tambi&amp;eacute;n &lt;code&gt;uploadpack.hideRefs&lt;/code&gt; . Incluso si esto es falso, un cliente puede robar objetos a trav&amp;eacute;s de las t&amp;eacute;cnicas descritas en la secci&amp;oacute;n &quot;SEGURIDAD&quot; de la p&amp;aacute;gina de &lt;a href=&quot;gitnamespaces&quot;&gt;manual&lt;/a&gt; de gitnamespaces [7] ; es mejor mantener los datos privados en un repositorio separado.</target>
        </trans-unit>
        <trans-unit id="5f953a201b0ae4d35f35034718b3114ef928787f" translate="yes" xml:space="preserve">
          <source>When Git doesn&amp;rsquo;t know how to handle a certain transport protocol, it attempts to use the &lt;code&gt;remote-&amp;lt;transport&amp;gt;&lt;/code&gt; remote helper, if one exists. To explicitly request a remote helper, the following syntax may be used:</source>
          <target state="translated">Cuando Git no sabe c&amp;oacute;mo manejar un determinado protocolo de transporte, intenta usar el ayudante remoto &lt;code&gt;remote-&amp;lt;transport&amp;gt;&lt;/code&gt; remoto, si existe. Para solicitar expl&amp;iacute;citamente un ayudante remoto, se puede utilizar la siguiente sintaxis:</target>
        </trans-unit>
        <trans-unit id="cf58a154a8f8fa8889640812d376b7964ce7bef2" translate="yes" xml:space="preserve">
          <source>When Git encounters a URL of the form &lt;code&gt;&amp;lt;transport&amp;gt;://&amp;lt;address&amp;gt;&lt;/code&gt;, where &lt;code&gt;&amp;lt;transport&amp;gt;&lt;/code&gt; is a protocol that it cannot handle natively, it automatically invokes &lt;code&gt;git remote-&amp;lt;transport&amp;gt;&lt;/code&gt; with the full URL as the second argument. If such a URL is encountered directly on the command line, the first argument is the same as the second, and if it is encountered in a configured remote, the first argument is the name of that remote.</source>
          <target state="translated">Cuando Git encuentra una URL con el formato &lt;code&gt;&amp;lt;transport&amp;gt;://&amp;lt;address&amp;gt;&lt;/code&gt; , donde &lt;code&gt;&amp;lt;transport&amp;gt;&lt;/code&gt; es un protocolo que no puede manejar de forma nativa, autom&amp;aacute;ticamente invoca &lt;code&gt;git remote-&amp;lt;transport&amp;gt;&lt;/code&gt; con la URL completa como segundo argumento. Si dicha URL se encuentra directamente en la l&amp;iacute;nea de comando, el primer argumento es el mismo que el segundo, y si se encuentra en un control remoto configurado, el primer argumento es el nombre de ese control remoto.</target>
        </trans-unit>
        <trans-unit id="27018e5bb4c8622ebcfed2f81b80284203c3bc2f" translate="yes" xml:space="preserve">
          <source>When Git encounters the first file that needs to be cleaned or smudged, it starts the filter and performs the handshake. In the handshake, the welcome message sent by Git is &quot;git-filter-client&quot;, only version 2 is supported, and the supported capabilities are &quot;clean&quot;, &quot;smudge&quot;, and &quot;delay&quot;.</source>
          <target state="translated">Cuando Git se encuentra con el primer archivo que necesita ser limpiado o manchado,inicia el filtro y realiza el apretón de manos.En el apretón de manos,el mensaje de bienvenida enviado por Git es &quot;git-filter-client&quot;,sólo la versión 2 está soportada,y las capacidades soportadas son &quot;clean&quot;,&quot;smudge&quot;,y &quot;delay&quot;.</target>
        </trans-unit>
        <trans-unit id="f51f886a7edb2e397d8670010685e9d17fb9bc09" translate="yes" xml:space="preserve">
          <source>When Git needs authentication for a particular URL context, credential-store will consider that context a pattern to match against each entry in the credentials file. If the protocol, hostname, and username (if we already have one) match, then the password is returned to Git. See the discussion of configuration in &lt;a href=&quot;gitcredentials&quot;&gt;gitcredentials[7]&lt;/a&gt; for more information.</source>
          <target state="translated">Cuando Git necesita autenticaci&amp;oacute;n para un contexto de URL en particular, credential-store considerar&amp;aacute; ese contexto como un patr&amp;oacute;n para coincidir con cada entrada en el archivo de credenciales. Si el protocolo, el nombre de host y el nombre de usuario (si ya tenemos uno) coinciden, la contrase&amp;ntilde;a se devuelve a Git. Vea la discusi&amp;oacute;n de la configuraci&amp;oacute;n en &lt;a href=&quot;gitcredentials&quot;&gt;gitcredentials [7]&lt;/a&gt; para m&amp;aacute;s informaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="fbdc4494c8c569621bd35073fd02055c267f7e54" translate="yes" xml:space="preserve">
          <source>When Git needs to show you a diff for the path with &lt;code&gt;diff&lt;/code&gt; attribute set to &lt;code&gt;jcdiff&lt;/code&gt;, it calls the command you specified with the above configuration, i.e. &lt;code&gt;j-c-diff&lt;/code&gt;, with 7 parameters, just like &lt;code&gt;GIT_EXTERNAL_DIFF&lt;/code&gt; program is called. See &lt;a href=&quot;git&quot;&gt;git[1]&lt;/a&gt; for details.</source>
          <target state="translated">Cuando Git necesita mostrarle una diferencia para la ruta con el atributo &lt;code&gt;diff&lt;/code&gt; establecido en &lt;code&gt;jcdiff&lt;/code&gt; , llama al comando que especific&amp;oacute; con la configuraci&amp;oacute;n anterior, es decir, &lt;code&gt;j-c-diff&lt;/code&gt; , con 7 par&amp;aacute;metros, al igual que se llama al programa &lt;code&gt;GIT_EXTERNAL_DIFF&lt;/code&gt; . Consulte &lt;a href=&quot;git&quot;&gt;git [1]&lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="bb3065603615c6a64dfcb623c10f42c6b9e417fa" translate="yes" xml:space="preserve">
          <source>When a &lt;code&gt;git push --signed&lt;/code&gt; sent a push certificate with a &quot;nonce&quot; that was issued by a receive-pack serving the same repository within this many seconds, export the &quot;nonce&quot; found in the certificate to &lt;code&gt;GIT_PUSH_CERT_NONCE&lt;/code&gt; to the hooks (instead of what the receive-pack asked the sending side to include). This may allow writing checks in &lt;code&gt;pre-receive&lt;/code&gt; and &lt;code&gt;post-receive&lt;/code&gt; a bit easier. Instead of checking &lt;code&gt;GIT_PUSH_CERT_NONCE_SLOP&lt;/code&gt; environment variable that records by how many seconds the nonce is stale to decide if they want to accept the certificate, they only can check &lt;code&gt;GIT_PUSH_CERT_NONCE_STATUS&lt;/code&gt; is &lt;code&gt;OK&lt;/code&gt;.</source>
          <target state="translated">Cuando un &lt;code&gt;git push --signed&lt;/code&gt; envi&amp;oacute; un certificado push con un &quot;nonce&quot; que fue emitido por un paquete de recepci&amp;oacute;n que sirve al mismo repositorio dentro de estos muchos segundos, exporte el &quot;nonce&quot; que se encuentra en el certificado a &lt;code&gt;GIT_PUSH_CERT_NONCE&lt;/code&gt; a los hooks (en lugar de lo que el paquete de recepci&amp;oacute;n pidi&amp;oacute; al lado remitente que incluyera). Esto puede permitir que la emisi&amp;oacute;n de cheques &lt;code&gt;pre-receive&lt;/code&gt; y &lt;code&gt;post-receive&lt;/code&gt; sea ​​m&amp;aacute;s f&amp;aacute;cil. En lugar de verificar la variable de entorno &lt;code&gt;GIT_PUSH_CERT_NONCE_SLOP&lt;/code&gt; que registra cu&amp;aacute;ntos segundos est&amp;aacute; obsoleto el nonce para decidir si quieren aceptar el certificado, solo pueden verificar que &lt;code&gt;GIT_PUSH_CERT_NONCE_STATUS&lt;/code&gt; est&amp;eacute; &lt;code&gt;OK&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f34a76491c47ddfcf2959dd6944574eeda479afa" translate="yes" xml:space="preserve">
          <source>When a command has finished, and the client has received the entire response from the server, a client can either request that another command be executed or can terminate the connection. A client may optionally send an empty request consisting of just a flush-pkt to indicate that no more requests will be made.</source>
          <target state="translated">Cuando un comando ha terminado,y el cliente ha recibido toda la respuesta del servidor,un cliente puede solicitar que se ejecute otro comando o puede terminar la conexión.Un cliente puede opcionalmente enviar una solicitud vacía que consista sólo en un flush-pkt para indicar que no se harán más solicitudes.</target>
        </trans-unit>
        <trans-unit id="98e606d10b24cc0c03b08a4efd9e014e2a7d092f" translate="yes" xml:space="preserve">
          <source>When a commit is created in this state, the branch is updated to refer to the new commit. Specifically, &lt;code&gt;git commit&lt;/code&gt; creates a new commit &lt;code&gt;d&lt;/code&gt;, whose parent is commit &lt;code&gt;c&lt;/code&gt;, and then updates branch &lt;code&gt;master&lt;/code&gt; to refer to new commit &lt;code&gt;d&lt;/code&gt;. &lt;code&gt;HEAD&lt;/code&gt; still refers to branch &lt;code&gt;master&lt;/code&gt; and so indirectly now refers to commit &lt;code&gt;d&lt;/code&gt;:</source>
          <target state="translated">Cuando se crea una confirmaci&amp;oacute;n en este estado, la rama se actualiza para hacer referencia a la nueva confirmaci&amp;oacute;n. Espec&amp;iacute;ficamente, &lt;code&gt;git commit&lt;/code&gt; crea una nueva confirmaci&amp;oacute;n &lt;code&gt;d&lt;/code&gt; , cuyo padre es la confirmaci&amp;oacute;n &lt;code&gt;c&lt;/code&gt; , y luego actualiza la rama &lt;code&gt;master&lt;/code&gt; para hacer referencia a la nueva confirmaci&amp;oacute;n &lt;code&gt;d&lt;/code&gt; . &lt;code&gt;HEAD&lt;/code&gt; todav&amp;iacute;a se refiere al &lt;code&gt;master&lt;/code&gt; rama y, por lo tanto, indirectamente ahora se refiere al compromiso &lt;code&gt;d&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="a1d656a10ad8d92cd23d5675fa9c3ba2b92a8d6f" translate="yes" xml:space="preserve">
          <source>When a curl trace is enabled (see &lt;code&gt;GIT_TRACE_CURL&lt;/code&gt; above), do not dump data (that is, only dump info lines and headers).</source>
          <target state="translated">Cuando se habilita un rastreo de rizo (ver &lt;code&gt;GIT_TRACE_CURL&lt;/code&gt; arriba), no vuelque datos (es decir, solo vuelque l&amp;iacute;neas de informaci&amp;oacute;n y encabezados).</target>
        </trans-unit>
        <trans-unit id="855748d09cda03242c615ed9f83d928cff4dd252" translate="yes" xml:space="preserve">
          <source>When a fetch mirror is created with &lt;code&gt;--mirror=fetch&lt;/code&gt;, the refs will not be stored in the &lt;code&gt;refs/remotes/&lt;/code&gt; namespace, but rather everything in &lt;code&gt;refs/&lt;/code&gt; on the remote will be directly mirrored into &lt;code&gt;refs/&lt;/code&gt; in the local repository. This option only makes sense in bare repositories, because a fetch would overwrite any local commits.</source>
          <target state="translated">Cuando se crea un espejo de recuperaci&amp;oacute;n con &lt;code&gt;--mirror=fetch&lt;/code&gt; , las referencias no se almacenar&amp;aacute;n en el espacio de nombres refs / remotes &lt;code&gt;refs/remotes/&lt;/code&gt; , sino que todo lo que est&amp;eacute; en &lt;code&gt;refs/&lt;/code&gt; en el control remoto se reflejar&amp;aacute; directamente en &lt;code&gt;refs/&lt;/code&gt; en el repositorio local. Esta opci&amp;oacute;n solo tiene sentido en repositorios desnudos, porque una recuperaci&amp;oacute;n sobrescribir&amp;iacute;a cualquier confirmaci&amp;oacute;n local.</target>
        </trans-unit>
        <trans-unit id="747511f053f093bdd8637c2efa65029ba86d5e79" translate="yes" xml:space="preserve">
          <source>When a git process is a (direct or indirect) child of another git process, it inherits Trace2 context information. This allows the child to print the command hierarchy. This example shows gc as child[3] of fetch. When the gc process reports its name as &quot;gc&quot;, it also reports the hierarchy as &quot;fetch/gc&quot;. (In this example, trace2 messages from the child process is indented for clarity.)</source>
          <target state="translated">Cuando un proceso de git es hijo (directo o indirecto)de otro proceso de git,hereda la información de contexto de Trace2.Esto permite al hijo imprimir la jerarquía de comandos.Este ejemplo muestra a gc como hijo[3]de fetch.Cuando el proceso gc reporta su nombre como &quot;gc&quot;,también reporta la jerarquía como &quot;fetch/gc&quot;.(En este ejemplo,los mensajes de trace2 del proceso hijo están indentados para mayor claridad).</target>
        </trans-unit>
        <trans-unit id="79294381fcaa0a0dccaa2b41ac29dc7daa74e3f5" translate="yes" xml:space="preserve">
          <source>When a local branch is started off a remote-tracking branch, Git sets up the branch (specifically the &lt;code&gt;branch.&amp;lt;name&amp;gt;.remote&lt;/code&gt; and &lt;code&gt;branch.&amp;lt;name&amp;gt;.merge&lt;/code&gt; configuration entries) so that &lt;code&gt;git pull&lt;/code&gt; will appropriately merge from the remote-tracking branch. This behavior may be changed via the global &lt;code&gt;branch.autoSetupMerge&lt;/code&gt; configuration flag. That setting can be overridden by using the &lt;code&gt;--track&lt;/code&gt; and &lt;code&gt;--no-track&lt;/code&gt; options, and changed later using &lt;code&gt;git branch --set-upstream-to&lt;/code&gt;.</source>
          <target state="translated">Cuando una sucursal local se inicia desde una sucursal de seguimiento remoto, Git configura la sucursal (espec&amp;iacute;ficamente la &lt;code&gt;branch.&amp;lt;name&amp;gt;.remote&lt;/code&gt; y la &lt;code&gt;branch.&amp;lt;name&amp;gt;.merge&lt;/code&gt; entradas de configuraci&amp;oacute;n) para que &lt;code&gt;git pull&lt;/code&gt; se fusione apropiadamente desde el remoto- rama de seguimiento. Este comportamiento se puede cambiar mediante el &lt;code&gt;branch.autoSetupMerge&lt;/code&gt; configuraci&amp;oacute;n global branch.autoSetupMerge . Esa configuraci&amp;oacute;n puede &lt;code&gt;--track&lt;/code&gt; usando las opciones --track y &lt;code&gt;--no-track&lt;/code&gt; , y cambiarse m&amp;aacute;s tarde usando &lt;code&gt;git branch --set-upstream-to&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8e12783acd89ac9262429bc89fcf85d9b95e88c1" translate="yes" xml:space="preserve">
          <source>When a merge conflict happens during switching branches with the &lt;code&gt;-m&lt;/code&gt; option, you would see something like this:</source>
          <target state="translated">Cuando ocurre un conflicto de fusi&amp;oacute;n durante el cambio de ramas con la opci&amp;oacute;n &lt;code&gt;-m&lt;/code&gt; , ver&amp;aacute; algo como esto:</target>
        </trans-unit>
        <trans-unit id="8b8f6236a48634fd451e67557b1ed432c992a4a6" translate="yes" xml:space="preserve">
          <source>When a merge conflict happens, the index entries for conflicting paths are left unmerged, and you need to resolve the conflicts and mark the resolved paths with &lt;code&gt;git add&lt;/code&gt; (or &lt;code&gt;git rm&lt;/code&gt; if the merge should result in deletion of the path).</source>
          <target state="translated">Cuando ocurre un conflicto de fusi&amp;oacute;n, las entradas de &amp;iacute;ndice para las rutas en conflicto se dejan sin fusionar, y debe resolver los conflictos y marcar las rutas resueltas con &lt;code&gt;git add&lt;/code&gt; (o &lt;code&gt;git rm&lt;/code&gt; si la fusi&amp;oacute;n debe resultar en la eliminaci&amp;oacute;n de la ruta).</target>
        </trans-unit>
        <trans-unit id="054b9e9957838ff74728498487ffff5f26346d88" translate="yes" xml:space="preserve">
          <source>When a merge isn&amp;rsquo;t resolved automatically, Git leaves the index and the working tree in a special state that gives you all the information you need to help resolve the merge.</source>
          <target state="translated">Cuando una combinaci&amp;oacute;n no se resuelve autom&amp;aacute;ticamente, Git deja el &amp;iacute;ndice y el &amp;aacute;rbol de trabajo en un estado especial que le brinda toda la informaci&amp;oacute;n que necesita para ayudar a resolver la combinaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="1d6b6e4ed4a39cb92155b19d26f3a8478b8d6d5c" translate="yes" xml:space="preserve">
          <source>When a new branch is created with &lt;code&gt;git branch&lt;/code&gt;, &lt;code&gt;git switch&lt;/code&gt; or &lt;code&gt;git checkout&lt;/code&gt; that tracks another branch, this variable tells Git to set up pull to rebase instead of merge (see &quot;branch.&amp;lt;name&amp;gt;.rebase&quot;). When &lt;code&gt;never&lt;/code&gt;, rebase is never automatically set to true. When &lt;code&gt;local&lt;/code&gt;, rebase is set to true for tracked branches of other local branches. When &lt;code&gt;remote&lt;/code&gt;, rebase is set to true for tracked branches of remote-tracking branches. When &lt;code&gt;always&lt;/code&gt;, rebase will be set to true for all tracking branches. See &quot;branch.autoSetupMerge&quot; for details on how to set up a branch to track another branch. This option defaults to never.</source>
          <target state="translated">Cuando se crea una nueva rama con &lt;code&gt;git branch&lt;/code&gt; , &lt;code&gt;git switch&lt;/code&gt; o &lt;code&gt;git checkout&lt;/code&gt; que rastrea otra rama, esta variable le dice a Git que configure pull to rebase en lugar de merge (ver &quot;branch. &amp;lt;nombre&amp;gt; .rebase&quot;). Cuando &lt;code&gt;never&lt;/code&gt; , rebase nunca se establece autom&amp;aacute;ticamente en verdadero. Cuando es &lt;code&gt;local&lt;/code&gt; , rebase se establece en verdadero para las ramas rastreadas de otras ramas locales. Cuando es &lt;code&gt;remote&lt;/code&gt; , rebase se establece en verdadero para las ramas rastreadas de ramas de rastreo remoto. Cuando &lt;code&gt;always&lt;/code&gt; , rebase se establecer&amp;aacute; en verdadero para todas las ramas de seguimiento. Consulte &quot;branch.autoSetupMerge&quot; para obtener detalles sobre c&amp;oacute;mo configurar una sucursal para rastrear otra sucursal. Esta opci&amp;oacute;n tiene el valor predeterminado de nunca.</target>
        </trans-unit>
        <trans-unit id="ed0adff8e63a6741e1694d5ebc304264bd392424" translate="yes" xml:space="preserve">
          <source>When a patch failure occurs, &amp;lt;msg&amp;gt; will be printed to the screen before exiting. This overrides the standard message informing you to use &lt;code&gt;--continue&lt;/code&gt; or &lt;code&gt;--skip&lt;/code&gt; to handle the failure. This is solely for internal use between &lt;code&gt;git rebase&lt;/code&gt; and &lt;code&gt;git am&lt;/code&gt;.</source>
          <target state="translated">Cuando se produce un error de parche, se imprimir&amp;aacute; &amp;lt;msg&amp;gt; en la pantalla antes de salir. Esto anula el mensaje est&amp;aacute;ndar que le informa que use &lt;code&gt;--continue&lt;/code&gt; o &lt;code&gt;--skip&lt;/code&gt; para manejar la falla. Esto es &amp;uacute;nicamente para uso interno entre &lt;code&gt;git rebase&lt;/code&gt; y &lt;code&gt;git am&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d5b066fa036c4bb98c79472fbdf38de3d119f100" translate="yes" xml:space="preserve">
          <source>When a patch is part of an ongoing discussion, the patch generated by &lt;code&gt;git format-patch&lt;/code&gt; can be tweaked to take advantage of the &lt;code&gt;git am --scissors&lt;/code&gt; feature. After your response to the discussion comes a line that consists solely of &quot;&lt;code&gt;-- &amp;gt;8 --&lt;/code&gt;&quot; (scissors and perforation), followed by the patch with unnecessary header fields removed:</source>
          <target state="translated">Cuando un parche es parte de una discusi&amp;oacute;n en curso, el parche generado por &lt;code&gt;git format-patch&lt;/code&gt; se puede modificar para aprovechar la funci&amp;oacute;n &lt;code&gt;git am --scissors&lt;/code&gt; . Despu&amp;eacute;s de su respuesta a la discusi&amp;oacute;n, aparece una l&amp;iacute;nea que consta &amp;uacute;nicamente de &quot; &lt;code&gt;-- &amp;gt;8 --&lt;/code&gt; &quot; (tijeras y perforaci&amp;oacute;n), seguida del parche con los campos de encabezado innecesarios eliminados:</target>
        </trans-unit>
        <trans-unit id="f3cb24e54c9837370739d06bd25b8c911a05ee6b" translate="yes" xml:space="preserve">
          <source>When a path is in the &quot;unmerged&quot; state, running &lt;code&gt;git update-index&lt;/code&gt; for that path tells Git to mark the path resolved.</source>
          <target state="translated">Cuando una ruta est&amp;aacute; en el estado &quot;sin fusionar&quot;, ejecutar &lt;code&gt;git update-index&lt;/code&gt; para esa ruta le dice a Git que marque la ruta como resuelta.</target>
        </trans-unit>
        <trans-unit id="f8965008f9824bf8da0b033710c2d7ac1f3f6568" translate="yes" xml:space="preserve">
          <source>When a pure mode change is encountered (which has no index information), the information is read from the current index instead.</source>
          <target state="translated">Cuando se encuentra un cambio de modo puro (que no tiene información de índice),la información se lee del índice actual en su lugar.</target>
        </trans-unit>
        <trans-unit id="ef4651b07e5b8cb97cb93de85df1d7e556426d24" translate="yes" xml:space="preserve">
          <source>When a push mirror is created with &lt;code&gt;--mirror=push&lt;/code&gt;, then &lt;code&gt;git push&lt;/code&gt; will always behave as if &lt;code&gt;--mirror&lt;/code&gt; was passed.</source>
          <target state="translated">Cuando se crea un espejo push con &lt;code&gt;--mirror=push&lt;/code&gt; , &lt;code&gt;git push&lt;/code&gt; siempre se comportar&amp;aacute; como si se &lt;code&gt;--mirror&lt;/code&gt; pasado --mirror .</target>
        </trans-unit>
        <trans-unit id="deb13d30f8ba66c920f6495f36b99921916b0fbc" translate="yes" xml:space="preserve">
          <source>When a rebase required merge conflicts to be resolved, compare the changes introduced by the rebase directly afterwards using:</source>
          <target state="translated">Cuando un rebase requiera resolver conflictos de fusión,compare los cambios introducidos por el rebase directamente después de utilizarlo:</target>
        </trans-unit>
        <trans-unit id="350766930233515327656bc7b70b13214a7aa33c" translate="yes" xml:space="preserve">
          <source>When a ref is updated, reflog entries are created to keep track of the reason why the ref was updated (which is typically the name of the high-level command that updated the ref), in addition to the old and new values of the ref. A scripted Porcelain command can use set_reflog_action helper function in &lt;code&gt;git-sh-setup&lt;/code&gt; to set its name to this variable when it is invoked as the top level command by the end user, to be recorded in the body of the reflog.</source>
          <target state="translated">Cuando se actualiza una ref, se crean entradas de reflog para realizar un seguimiento del motivo por el que se actualiz&amp;oacute; la ref (que suele ser el nombre del comando de alto nivel que actualiz&amp;oacute; la ref), adem&amp;aacute;s de los valores antiguos y nuevos de la ref . Un comando de Porcelain con script puede usar la funci&amp;oacute;n auxiliar set_reflog_action en &lt;code&gt;git-sh-setup&lt;/code&gt; para establecer su nombre en esta variable cuando el usuario final lo invoca como comando de nivel superior, para que se registre en el cuerpo del reflog.</target>
        </trans-unit>
        <trans-unit id="0a564cf0d83332d2cd6fd3ac884cec9942b078c7" translate="yes" xml:space="preserve">
          <source>When a repository is synchronized via &lt;code&gt;git push&lt;/code&gt; and &lt;code&gt;git pull&lt;/code&gt; objects packed in the source repository are usually stored unpacked in the destination. While this allows you to use different packing strategies on both ends, it also means you may need to repack both repositories every once in a while.</source>
          <target state="translated">Cuando un repositorio se sincroniza a trav&amp;eacute;s de &lt;code&gt;git push&lt;/code&gt; y &lt;code&gt;git pull&lt;/code&gt; objetos git pull empaquetados en el repositorio de origen generalmente se almacenan descomprimidos en el destino. Si bien esto le permite utilizar diferentes estrategias de empaquetado en ambos extremos, tambi&amp;eacute;n significa que es posible que deba volver a empaquetar ambos repositorios de vez en cuando.</target>
        </trans-unit>
        <trans-unit id="89c3a76b400f69bc409951d41f44580e1ce5b550" translate="yes" xml:space="preserve">
          <source>When a scripting language specific quoting is in effect, everything between a top-level opening atom and its matching %(end) is evaluated according to the semantics of the opening atom and only its result from the top-level is quoted.</source>
          <target state="translated">Cuando una cita específica de un lenguaje de scripts está en efecto,todo entre un átomo de apertura de nivel superior y su %(final)correspondiente se evalúa de acuerdo a la semántica del átomo de apertura y sólo se cita su resultado del nivel superior.</target>
        </trans-unit>
        <trans-unit id="1d0d6b410e7d083b396401fa9485dd3214d89132" translate="yes" xml:space="preserve">
          <source>When a variable is said to take a boolean value, many synonyms are accepted for &lt;code&gt;true&lt;/code&gt; and &lt;code&gt;false&lt;/code&gt;; these are all case-insensitive.</source>
          <target state="translated">Cuando se dice que una variable toma un valor booleano, se aceptan muchos sin&amp;oacute;nimos para &lt;code&gt;true&lt;/code&gt; y &lt;code&gt;false&lt;/code&gt; ; todos estos distinguen entre may&amp;uacute;sculas y min&amp;uacute;sculas.</target>
        </trans-unit>
        <trans-unit id="085e4eddfd9be8c4f3b576466769939a6475604e" translate="yes" xml:space="preserve">
          <source>When accepting a new code drop for a vendor branch, you probably want to record both the removal of paths and additions of new paths as well as modifications of existing paths.</source>
          <target state="translated">Cuando se acepta un nuevo código de caída para una sucursal de un proveedor,es probable que se quiera registrar tanto la eliminación de rutas y las adiciones de nuevas rutas como las modificaciones de las rutas existentes.</target>
        </trans-unit>
        <trans-unit id="98d4ec1ab85d43886cf359223c5c65ec41aa50b0" translate="yes" xml:space="preserve">
          <source>When accepting a signed push (see &lt;a href=&quot;git-push&quot;&gt;git-push[1]&lt;/a&gt;), the signed push certificate is stored in a blob and an environment variable &lt;code&gt;GIT_PUSH_CERT&lt;/code&gt; can be consulted for its object name. See the description of &lt;code&gt;post-receive&lt;/code&gt; hook for an example. In addition, the certificate is verified using GPG and the result is exported with the following environment variables:</source>
          <target state="translated">Al aceptar una inserci&amp;oacute;n firmada (ver &lt;a href=&quot;git-push&quot;&gt;git-push [1]&lt;/a&gt; ), el certificado push firmado se almacena en un blob y se puede consultar una variable de entorno &lt;code&gt;GIT_PUSH_CERT&lt;/code&gt; para su nombre de objeto. Consulte la descripci&amp;oacute;n del &lt;code&gt;post-receive&lt;/code&gt; para ver un ejemplo. Adem&amp;aacute;s, el certificado se verifica mediante GPG y el resultado se exporta con las siguientes variables de entorno:</target>
        </trans-unit>
        <trans-unit id="5d78f94855bee5654824b328b5c74fbbbf68d2ce" translate="yes" xml:space="preserve">
          <source>When acquiring credentials, consider the &quot;path&quot; component of an http or https URL to be important. Defaults to false. See &lt;a href=&quot;gitcredentials&quot;&gt;gitcredentials[7]&lt;/a&gt; for more information.</source>
          <target state="translated">Al adquirir credenciales, considere que el componente &quot;ruta&quot; de una URL http o https es importante. El valor predeterminado es falso. Consulte &lt;a href=&quot;gitcredentials&quot;&gt;gitcredentials [7]&lt;/a&gt; para obtener m&amp;aacute;s informaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="36125e3b1dadcf8415f427875bfbe6e3edb592ec" translate="yes" xml:space="preserve">
          <source>When adding notes to an object that already has notes, overwrite the existing notes (instead of aborting).</source>
          <target state="translated">Cuando añada notas a un objeto que ya tiene notas,sobrescriba las notas existentes (en lugar de abortar).</target>
        </trans-unit>
        <trans-unit id="31a6893d1f507cb4bce24b6631d6f67bbe0ca8c3" translate="yes" xml:space="preserve">
          <source>When advertising tips of available history from an alternate, use the shell to execute the specified command instead of &lt;a href=&quot;git-for-each-ref&quot;&gt;git-for-each-ref[1]&lt;/a&gt;. The first argument is the absolute path of the alternate. Output must contain one hex object id per line (i.e., the same as produced by &lt;code&gt;git for-each-ref
--format='%(objectname)'&lt;/code&gt;).</source>
          <target state="translated">Cuando anuncie consejos sobre el historial disponible de una alternativa, utilice el shell para ejecutar el comando especificado en lugar de &lt;a href=&quot;git-for-each-ref&quot;&gt;git-for-each-ref [1]&lt;/a&gt; . El primer argumento es la ruta absoluta de la alternativa. La salida debe contener un ID de objeto hexadecimal por l&amp;iacute;nea (es decir, el mismo que produce &lt;code&gt;git for-each-ref --format='%(objectname)'&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="aee562f05eaa47b0988f9365fa4403a675334ce1" translate="yes" xml:space="preserve">
          <source>When an argument can be misunderstood as either a revision or a path, they can be disambiguated by placing &lt;code&gt;--&lt;/code&gt; between them. E.g. &lt;code&gt;git diff -- HEAD&lt;/code&gt; is, &quot;I have a file called HEAD in my work tree. Please show changes between the version I staged in the index and what I have in the work tree for that file&quot;, not &quot;show difference between the HEAD commit and the work tree as a whole&quot;. You can say &lt;code&gt;git diff HEAD --&lt;/code&gt; to ask for the latter.</source>
          <target state="translated">Cuando un argumento puede malinterpretarse como una revisi&amp;oacute;n o un camino, se puede eliminar la ambig&amp;uuml;edad colocando &lt;code&gt;--&lt;/code&gt; entre ellos. Por ejemplo, &lt;code&gt;git diff -- HEAD&lt;/code&gt; es, &quot;Tengo un archivo llamado HEAD en mi &amp;aacute;rbol de trabajo. Por favor, muestre los cambios entre la versi&amp;oacute;n que prepar&amp;eacute; en el &amp;iacute;ndice y lo que tengo en el &amp;aacute;rbol de trabajo para ese archivo&quot;, no &quot;muestre la diferencia entre HEAD commit y el &amp;aacute;rbol de trabajo en su conjunto &quot;. Puede decir &lt;code&gt;git diff HEAD --&lt;/code&gt; para solicitar este &amp;uacute;ltimo.</target>
        </trans-unit>
        <trans-unit id="8ed1e316e9f06aa8f0fbb451acc5e5dd1d53d618" translate="yes" xml:space="preserve">
          <source>When an argument may be understood either as a reference or as a file name, choose to understand it as a format-patch argument (&lt;code&gt;--format-patch&lt;/code&gt;) or as a file name (&lt;code&gt;--no-format-patch&lt;/code&gt;). By default, when such a conflict occurs, git send-email will fail.</source>
          <target state="translated">Cuando un argumento puede entenderse como una referencia o como un nombre de archivo, elija entenderlo como un argumento de parche de formato ( &lt;code&gt;--format-patch&lt;/code&gt; ) o como un nombre de archivo ( &lt;code&gt;--no-format-patch&lt;/code&gt; ). De forma predeterminada, cuando se produce un conflicto de este tipo, git send-email fallar&amp;aacute;.</target>
        </trans-unit>
        <trans-unit id="daa45faaafc93f57dcfa6219226fd8a2224c7353" translate="yes" xml:space="preserve">
          <source>When an interactive command (such as &lt;code&gt;git add --patch&lt;/code&gt;) shows a colorized diff, git will pipe the diff through the shell command defined by this configuration variable. The command may mark up the diff further for human consumption, provided that it retains a one-to-one correspondence with the lines in the original diff. Defaults to disabled (no filtering).</source>
          <target state="translated">Cuando un comando interactivo (como &lt;code&gt;git add --patch&lt;/code&gt; ) muestra una diferencia coloreada, git canalizar&amp;aacute; la diferencia a trav&amp;eacute;s del comando de shell definido por esta variable de configuraci&amp;oacute;n. El comando puede marcar a&amp;uacute;n m&amp;aacute;s el diff para consumo humano, siempre que mantenga una correspondencia uno a uno con las l&amp;iacute;neas del diff original. El valor predeterminado es deshabilitado (sin filtrado).</target>
        </trans-unit>
        <trans-unit id="66bd09d84d7f728fe64b22afe9c1d5b02faccf2f" translate="yes" xml:space="preserve">
          <source>When an optional Git branch name (or a Git commit object name) is specified as an argument, the subcommand works on the specified branch, not on the current branch.</source>
          <target state="translated">Cuando se especifica un nombre de rama Git opcional (o un nombre de objeto de confirmación Git)como argumento,el subcomando trabaja en la rama especificada,no en la rama actual.</target>
        </trans-unit>
        <trans-unit id="54600ca959ccb5286a6125f852754e8a441f6246" translate="yes" xml:space="preserve">
          <source>When an update changes a branch (or more in general, a ref) that used to point at commit A to point at another commit B, it is called a fast-forward update if and only if B is a descendant of A.</source>
          <target state="translated">Cuando una actualización cambia una rama (o más en general,un ref)que solía apuntar a la comisión A para apuntar a otra comisión B,se denomina actualización rápida si y sólo si B es descendiente de A.</target>
        </trans-unit>
        <trans-unit id="b999dfcfa57d71ee62dbc42f4d8a0527e63491d1" translate="yes" xml:space="preserve">
          <source>When applying a patch, detect a new or modified line that has whitespace errors. What are considered whitespace errors is controlled by &lt;code&gt;core.whitespace&lt;/code&gt; configuration. By default, trailing whitespaces (including lines that solely consist of whitespaces) and a space character that is immediately followed by a tab character inside the initial indent of the line are considered whitespace errors.</source>
          <target state="translated">Al aplicar un parche, detecte una l&amp;iacute;nea nueva o modificada que tenga errores de espacio en blanco. Lo que se considera errores de espacios en blanco se controla mediante la configuraci&amp;oacute;n de &lt;code&gt;core.whitespace&lt;/code&gt; . De forma predeterminada, los espacios en blanco finales (incluidas las l&amp;iacute;neas que constan &amp;uacute;nicamente de espacios en blanco) y un car&amp;aacute;cter de espacio seguido inmediatamente por un car&amp;aacute;cter de tabulaci&amp;oacute;n dentro de la sangr&amp;iacute;a inicial de la l&amp;iacute;nea se consideran errores de espacio en blanco.</target>
        </trans-unit>
        <trans-unit id="b3581e25b4edfc3eae85f688560f931e31414d31" translate="yes" xml:space="preserve">
          <source>When applying a patch, ignore additions made by the patch. This can be used to extract the common part between two files by first running &lt;code&gt;diff&lt;/code&gt; on them and applying the result with this option, which would apply the deletion part but not the addition part.</source>
          <target state="translated">Cuando aplique un parche, ignore las adiciones hechas por el parche. Esto se puede usar para extraer la parte com&amp;uacute;n entre dos archivos ejecutando primero &lt;code&gt;diff&lt;/code&gt; en ellos y aplicando el resultado con esta opci&amp;oacute;n, que aplicar&amp;iacute;a la parte de eliminaci&amp;oacute;n pero no la parte de adici&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="6bf2c606b0bf760a50dfcc2e9e2a1dfc6d6ce1b9" translate="yes" xml:space="preserve">
          <source>When applying a patch, ignore changes in whitespace in context lines if necessary. Context lines will preserve their whitespace, and they will not undergo whitespace fixing regardless of the value of the &lt;code&gt;--whitespace&lt;/code&gt; option. New lines will still be fixed, though.</source>
          <target state="translated">Al aplicar un parche, ignore los cambios en los espacios en blanco en las l&amp;iacute;neas de contexto si es necesario. Las l&amp;iacute;neas de contexto conservar&amp;aacute;n su espacio en blanco y no se someter&amp;aacute;n a la &lt;code&gt;--whitespace&lt;/code&gt; espacios en blanco independientemente del valor de la opci&amp;oacute;n --whitespace . Sin embargo, las l&amp;iacute;neas nuevas a&amp;uacute;n se arreglar&amp;aacute;n.</target>
        </trans-unit>
        <trans-unit id="588f408b6e1e0374e87fb8fe5ff6e5cd0dca42b8" translate="yes" xml:space="preserve">
          <source>When applying the patch only to the working tree, mark new files to be added to the index later (see &lt;code&gt;--intent-to-add&lt;/code&gt; option in &lt;a href=&quot;git-add&quot;&gt;git-add[1]&lt;/a&gt;). This option is ignored unless running in a Git repository and &lt;code&gt;--index&lt;/code&gt; is not specified. Note that &lt;code&gt;--index&lt;/code&gt; could be implied by other options such as &lt;code&gt;--cached&lt;/code&gt; or &lt;code&gt;--3way&lt;/code&gt;.</source>
          <target state="translated">Cuando aplique el parche solo al &amp;aacute;rbol de trabajo, marque los archivos nuevos que se agregar&amp;aacute;n al &amp;iacute;ndice m&amp;aacute;s adelante (consulte la &lt;code&gt;--intent-to-add&lt;/code&gt; en &lt;a href=&quot;git-add&quot;&gt;git-add [1]&lt;/a&gt; ). Esta opci&amp;oacute;n se ignora a menos que se ejecute en un repositorio de Git y no se especifique &lt;code&gt;--index&lt;/code&gt; . Tenga en cuenta que &lt;code&gt;--index&lt;/code&gt; podr&amp;iacute;a estar impl&amp;iacute;cito en otras opciones como &lt;code&gt;--cached&lt;/code&gt; o &lt;code&gt;--3way&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="59fa333bf5332a3a74a0fa1b62097787ae41682d" translate="yes" xml:space="preserve">
          <source>When asking to &lt;code&gt;abort&lt;/code&gt; (which is the default), this program will die when encountering a signed tag. With &lt;code&gt;strip&lt;/code&gt;, the tags will silently be made unsigned, with &lt;code&gt;warn-strip&lt;/code&gt; they will be made unsigned but a warning will be displayed, with &lt;code&gt;verbatim&lt;/code&gt;, they will be silently exported and with &lt;code&gt;warn&lt;/code&gt;, they will be exported, but you will see a warning.</source>
          <target state="translated">Cuando se solicita &lt;code&gt;abort&lt;/code&gt; ar (que es el valor predeterminado), este programa morir&amp;aacute; cuando se encuentre con una etiqueta firmada. Con &lt;code&gt;strip&lt;/code&gt; , las etiquetas se har&amp;aacute;n silenciosamente sin firmar, con &lt;code&gt;warn-strip&lt;/code&gt; se har&amp;aacute;n sin firmar pero se mostrar&amp;aacute; una advertencia, con &lt;code&gt;verbatim&lt;/code&gt; por palabra , se exportar&amp;aacute;n silenciosamente y con &lt;code&gt;warn&lt;/code&gt; , se exportar&amp;aacute;n, pero ver&amp;aacute; una advertencia .</target>
        </trans-unit>
        <trans-unit id="a094fa226ab8da9ad05df22ffe9e8c64cbd9aea9" translate="yes" xml:space="preserve">
          <source>When asking to &lt;code&gt;abort&lt;/code&gt; (which is the default), this program will die when encountering such a tag. With &lt;code&gt;drop&lt;/code&gt; it will omit such tags from the output. With &lt;code&gt;rewrite&lt;/code&gt;, if the tagged object is a commit, it will rewrite the tag to tag an ancestor commit (via parent rewriting; see &lt;a href=&quot;git-rev-list&quot;&gt;git-rev-list[1]&lt;/a&gt;)</source>
          <target state="translated">Al pedir &lt;code&gt;abort&lt;/code&gt; ar (que es el valor predeterminado), este programa morir&amp;aacute; cuando se encuentre con dicha etiqueta. Con &lt;code&gt;drop&lt;/code&gt; omitir&amp;aacute; tales etiquetas de la salida. Con la &lt;code&gt;rewrite&lt;/code&gt; , si el objeto etiquetado es una confirmaci&amp;oacute;n, reescribir&amp;aacute; la etiqueta para etiquetar una confirmaci&amp;oacute;n anterior (a trav&amp;eacute;s de la reescritura principal; consulte &lt;a href=&quot;git-rev-list&quot;&gt;git-rev-list [1]&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="034f3e54dc418fd0aaba391926e4cdc6f9338cc5" translate="yes" xml:space="preserve">
          <source>When called with &lt;code&gt;--incremental&lt;/code&gt; option, the command outputs the result as it is built. The output generally will talk about lines touched by more recent commits first (i.e. the lines will be annotated out of order) and is meant to be used by interactive viewers.</source>
          <target state="translated">Cuando se llama con la opci&amp;oacute;n &lt;code&gt;--incremental&lt;/code&gt; , el comando genera el resultado a medida que se construye. La salida generalmente hablar&amp;aacute; sobre las l&amp;iacute;neas tocadas por confirmaciones m&amp;aacute;s recientes primero (es decir, las l&amp;iacute;neas se anotar&amp;aacute;n fuera de orden) y est&amp;aacute; destinado a ser utilizado por espectadores interactivos.</target>
        </trans-unit>
        <trans-unit id="37ed40c0b9c191bc52be1eea56e95c21c8c30c92" translate="yes" xml:space="preserve">
          <source>When checking out paths from the index, check out stage #2 (&lt;code&gt;ours&lt;/code&gt;) or #3 (&lt;code&gt;theirs&lt;/code&gt;) for unmerged paths.</source>
          <target state="translated">Cuando compruebe las rutas del &amp;iacute;ndice, consulte la etapa # 2 (la &lt;code&gt;ours&lt;/code&gt; ) o la # 3 (la de &lt;code&gt;theirs&lt;/code&gt; ) para ver las rutas no fusionadas.</target>
        </trans-unit>
        <trans-unit id="b2d7eb083886da1526ca38a6780f9e98825df5e6" translate="yes" xml:space="preserve">
          <source>When checking out paths from the index, do not fail upon unmerged entries; instead, unmerged entries are ignored.</source>
          <target state="translated">Al revisar los caminos del índice,no falles en las entradas no fusionadas;en su lugar,las entradas no fusionadas son ignoradas.</target>
        </trans-unit>
        <trans-unit id="87b021689017efd0b4fbe642f48fde6408f7cde4" translate="yes" xml:space="preserve">
          <source>When checking out paths from the index, this option lets you recreate the conflicted merge in the specified paths.</source>
          <target state="translated">Al comprobar las rutas del índice,esta opción le permite recrear la fusión conflictiva en las rutas especificadas.</target>
        </trans-unit>
        <trans-unit id="44968c91f62b2f1c7eb77848556b128eac9d4512" translate="yes" xml:space="preserve">
          <source>When cloning an SVN repository, if none of the options for describing the repository layout is used (--trunk, --tags, --branches, --stdlayout), &lt;code&gt;git svn clone&lt;/code&gt; will create a Git repository with completely linear history, where branches and tags appear as separate directories in the working copy. While this is the easiest way to get a copy of a complete repository, for projects with many branches it will lead to a working copy many times larger than just the trunk. Thus for projects using the standard directory structure (trunk/branches/tags), it is recommended to clone with option &lt;code&gt;--stdlayout&lt;/code&gt;. If the project uses a non-standard structure, and/or if branches and tags are not required, it is easiest to only clone one directory (typically trunk), without giving any repository layout options. If the full history with branches and tags is required, the options &lt;code&gt;--trunk&lt;/code&gt; / &lt;code&gt;--branches&lt;/code&gt; / &lt;code&gt;--tags&lt;/code&gt; must be used.</source>
          <target state="translated">Al clonar un repositorio SVN, si no se utiliza ninguna de las opciones para describir el dise&amp;ntilde;o del repositorio (--trunk, --tags, --branches, --stdlayout), &lt;code&gt;git svn clone&lt;/code&gt; crear&amp;aacute; un repositorio Git con un historial completamente lineal, donde las ramas y las etiquetas aparecen como directorios separados en la copia de trabajo. Si bien esta es la forma m&amp;aacute;s f&amp;aacute;cil de obtener una copia de un repositorio completo, para proyectos con muchas ramas, dar&amp;aacute; lugar a una copia de trabajo muchas veces m&amp;aacute;s grande que solo el tronco. Por lo tanto, para proyectos que usan la estructura de directorios est&amp;aacute;ndar (tronco / ramas / etiquetas), se recomienda clonar con la opci&amp;oacute;n &lt;code&gt;--stdlayout&lt;/code&gt; . Si el proyecto utiliza una estructura no est&amp;aacute;ndar y / o si no se requieren ramas y etiquetas, es m&amp;aacute;s f&amp;aacute;cil clonar solo un directorio (normalmente el tronco), sin dar ninguna opci&amp;oacute;n de dise&amp;ntilde;o del repositorio. Si se requiere el historial completo con ramas y etiquetas, se deben &lt;code&gt;--trunk&lt;/code&gt; las opciones --trunk / &lt;code&gt;--branches&lt;/code&gt; / &lt;code&gt;--tags&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cf5bdc8ee9de0e891bd2e2ffd6ad5374a27fb398" translate="yes" xml:space="preserve">
          <source>When cloning or pulling a repository containing submodules the submodules will not be checked out by default; You can instruct &lt;code&gt;clone&lt;/code&gt; to recurse into submodules. The &lt;code&gt;init&lt;/code&gt; and &lt;code&gt;update&lt;/code&gt; subcommands of &lt;code&gt;git submodule&lt;/code&gt; will maintain submodules checked out and at an appropriate revision in your working tree. Alternatively you can set &lt;code&gt;submodule.recurse&lt;/code&gt; to have &lt;code&gt;checkout&lt;/code&gt; recursing into submodules.</source>
          <target state="translated">Cuando se clona o se extrae un repositorio que contiene subm&amp;oacute;dulos, los subm&amp;oacute;dulos no se desproteger&amp;aacute;n de forma predeterminada; Puede indicarle al &lt;code&gt;clone&lt;/code&gt; que se repita en subm&amp;oacute;dulos. Los subcomandos &lt;code&gt;init&lt;/code&gt; y &lt;code&gt;update&lt;/code&gt; del &lt;code&gt;git submodule&lt;/code&gt; mantendr&amp;aacute;n los subm&amp;oacute;dulos extra&amp;iacute;dos y en una revisi&amp;oacute;n apropiada en su &amp;aacute;rbol de trabajo. Alternativamente, puede configurar &lt;code&gt;submodule.recurse&lt;/code&gt; para que el &lt;code&gt;checkout&lt;/code&gt; repita en subm&amp;oacute;dulos.</target>
        </trans-unit>
        <trans-unit id="f6f5e261fa8e1325a05e77f0fa02cd4e804a016b" translate="yes" xml:space="preserve">
          <source>When committing fixups, consider using &lt;code&gt;merge&lt;/code&gt; to connect the commit(s) which are supplying file revisions to the fixup branch. Doing so will allow tools such as &lt;code&gt;git blame&lt;/code&gt; to track through the real commit history and properly annotate the source files.</source>
          <target state="translated">Cuando realice reparaciones, considere usar &lt;code&gt;merge&lt;/code&gt; para conectar las confirmaciones que proporcionan revisiones de archivos a la rama de reparaci&amp;oacute;n. Hacerlo permitir&amp;aacute; que herramientas como &lt;code&gt;git blame&lt;/code&gt; rastreen el historial de confirmaciones real y anoten correctamente los archivos fuente.</target>
        </trans-unit>
        <trans-unit id="187746ad8497cb1dac2dfe493269450955422d85" translate="yes" xml:space="preserve">
          <source>When committing to svn from Git (as part of &lt;code&gt;set-tree&lt;/code&gt; or &lt;code&gt;dcommit&lt;/code&gt; operations), if the existing log message doesn&amp;rsquo;t already have a &lt;code&gt;From:&lt;/code&gt; or &lt;code&gt;Signed-off-by:&lt;/code&gt; line, append a &lt;code&gt;From:&lt;/code&gt; line based on the Git commit&amp;rsquo;s author string. If you use this, then &lt;code&gt;--use-log-author&lt;/code&gt; will retrieve a valid author string for all commits.</source>
          <target state="translated">Al comprometerse con svn desde Git (como parte de las operaciones &lt;code&gt;set-tree&lt;/code&gt; o &lt;code&gt;dcommit&lt;/code&gt; ), si el mensaje de registro existente no tiene una l&amp;iacute;nea &lt;code&gt;From:&lt;/code&gt; o &lt;code&gt;Signed-off-by:&lt;/code&gt; , agregue una l&amp;iacute;nea &lt;code&gt;From:&lt;/code&gt; basada en la confirmaci&amp;oacute;n de Git cadena de autor. Si usa esto, entonces &lt;code&gt;--use-log-author&lt;/code&gt; recuperar&amp;aacute; una cadena de autor v&amp;aacute;lida para todas las confirmaciones.</target>
        </trans-unit>
        <trans-unit id="df4d9e8de337675930b7c7d126c3cbfdb0d919e8" translate="yes" xml:space="preserve">
          <source>When common porcelain operations that create objects are run, they will check whether the repository has grown substantially since the last maintenance, and if so run &lt;code&gt;git gc&lt;/code&gt; automatically. See &lt;code&gt;gc.auto&lt;/code&gt; below for how to disable this behavior.</source>
          <target state="translated">Cuando se ejecutan operaciones de porcelana comunes que crean objetos, comprobar&amp;aacute;n si el repositorio ha crecido sustancialmente desde el &amp;uacute;ltimo mantenimiento y, de ser as&amp;iacute;, ejecutar&amp;aacute;n &lt;code&gt;git gc&lt;/code&gt; autom&amp;aacute;ticamente. Consulte &lt;code&gt;gc.auto&lt;/code&gt; a continuaci&amp;oacute;n para saber c&amp;oacute;mo deshabilitar este comportamiento.</target>
        </trans-unit>
        <trans-unit id="5cef5cc19d56f034a0850f6ce0dc6add0c966a70" translate="yes" xml:space="preserve">
          <source>When comparing two trees, the ID of both trees (separated by a space and terminated by a newline) is printed before the difference. When comparing commits, the ID of the first (or only) commit, followed by a newline, is printed.</source>
          <target state="translated">Cuando se comparan dos árboles,el ID de ambos árboles (separados por un espacio y terminados por una nueva línea)se imprime antes de la diferencia.Cuando se comparan confirmaciones,el ID de la primera (o única)confirmación,seguido de una nueva línea,se imprime.</target>
        </trans-unit>
        <trans-unit id="fe249445673b1134855083e0c3b366c4aeeb2c8e" translate="yes" xml:space="preserve">
          <source>When converting a value to its canonical form using the &lt;code&gt;--type=bool&lt;/code&gt; type specifier, &lt;code&gt;git config&lt;/code&gt; will ensure that the output is &quot;true&quot; or &quot;false&quot; (spelled in lowercase).</source>
          <target state="translated">Al convertir un valor a su forma can&amp;oacute;nica usando el especificador de tipo &lt;code&gt;--type=bool&lt;/code&gt; , &lt;code&gt;git config&lt;/code&gt; se asegurar&amp;aacute; de que la salida sea &quot;verdadera&quot; o &quot;falsa&quot; (escrita en min&amp;uacute;sculas).</target>
        </trans-unit>
        <trans-unit id="5800d8777d6f116b967a3c4b503079e04a8dd27b" translate="yes" xml:space="preserve">
          <source>When copying a remote repository, you&amp;rsquo;ll want to at a minimum update the index cache when you do this, and especially with other peoples' repositories you often want to make sure that the index cache is in some known state (you don&amp;rsquo;t know &lt;strong&gt;what&lt;/strong&gt; they&amp;rsquo;ve done and not yet checked in), so usually you&amp;rsquo;ll precede the &lt;code&gt;git update-index&lt;/code&gt; with a</source>
          <target state="translated">Al copiar un repositorio remoto, querr&amp;aacute; como m&amp;iacute;nimo actualizar la cach&amp;eacute; de &amp;iacute;ndice cuando haga esto, y especialmente con los repositorios de otras personas, a menudo desea asegurarse de que la cach&amp;eacute; de &amp;iacute;ndice est&amp;eacute; en alg&amp;uacute;n estado conocido (no saber &lt;strong&gt;lo&lt;/strong&gt; que han hecho y a&amp;uacute;n no se han registrado), por lo que normalmente preceder&amp;aacute;s al &lt;code&gt;git update-index&lt;/code&gt; con un</target>
        </trans-unit>
        <trans-unit id="a0c9c076efebd050282e8220820bf37e469a5914" translate="yes" xml:space="preserve">
          <source>When copying notes during a rewrite (see the &quot;notes.rewrite.&amp;lt;command&amp;gt;&quot; option), determines what to do if the target commit already has a note. Must be one of &lt;code&gt;overwrite&lt;/code&gt;, &lt;code&gt;concatenate&lt;/code&gt;, &lt;code&gt;cat_sort_uniq&lt;/code&gt;, or &lt;code&gt;ignore&lt;/code&gt;. Defaults to &lt;code&gt;concatenate&lt;/code&gt;.</source>
          <target state="translated">Al copiar notas durante una reescritura (ver la opci&amp;oacute;n &quot;notes.rewrite. &amp;lt;comando&amp;gt;&quot;), determina qu&amp;eacute; hacer si la confirmaci&amp;oacute;n de destino ya tiene una nota. Debe ser uno de los siguientes: &lt;code&gt;overwrite&lt;/code&gt; , &lt;code&gt;concatenate&lt;/code&gt; , &lt;code&gt;cat_sort_uniq&lt;/code&gt; o &lt;code&gt;ignore&lt;/code&gt; . Predeterminado para &lt;code&gt;concatenate&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f2daf889c63a8ae3ef0bd84b9e0a7bae3186ea5d" translate="yes" xml:space="preserve">
          <source>When copying notes during a rewrite, specifies the (fully qualified) ref whose notes should be copied. May be a glob, in which case notes in all matching refs will be copied. You may also specify this configuration several times.</source>
          <target state="translated">Cuando se copien las notas durante una reescritura,especifica el árbitro (totalmente cualificado)cuyas notas deben ser copiadas.Puede ser un globo,en cuyo caso se copiarán las notas de todos los árbitros que coincidan.También puede especificar esta configuración varias veces.</target>
        </trans-unit>
        <trans-unit id="c445d369a5c50740a59f3ad28697ace644e2811e" translate="yes" xml:space="preserve">
          <source>When copying notes during a rewrite, specifies the (fully qualified) ref whose notes should be copied. The ref may be a glob, in which case notes in all matching refs will be copied. You may also specify this configuration several times.</source>
          <target state="translated">Cuando se copien las notas durante una reescritura,especifica el árbitro (totalmente cualificado)cuyas notas deben ser copiadas.El árbitro puede ser un globo,en cuyo caso se copiarán las notas de todos los árbitros que coincidan.También puede especificar esta configuración varias veces.</target>
        </trans-unit>
        <trans-unit id="1243aaab79ff33e7a2d49c8eb8b4f16703a1c016" translate="yes" xml:space="preserve">
          <source>When copying notes during a rewrite, what to do if the target commit already has a note. Must be one of &lt;code&gt;overwrite&lt;/code&gt;, &lt;code&gt;concatenate&lt;/code&gt;, &lt;code&gt;cat_sort_uniq&lt;/code&gt;, or &lt;code&gt;ignore&lt;/code&gt;. Defaults to &lt;code&gt;concatenate&lt;/code&gt;.</source>
          <target state="translated">Al copiar notas durante una reescritura, qu&amp;eacute; hacer si la confirmaci&amp;oacute;n de destino ya tiene una nota. Debe ser uno de los siguientes: &lt;code&gt;overwrite&lt;/code&gt; , &lt;code&gt;concatenate&lt;/code&gt; , &lt;code&gt;cat_sort_uniq&lt;/code&gt; o &lt;code&gt;ignore&lt;/code&gt; . Predeterminado para &lt;code&gt;concatenate&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fb6ea94e62e06bb5ee870300111df0d9f630f320" translate="yes" xml:space="preserve">
          <source>When copying notes during a rewrite, what to do if the target commit already has a note. Must be one of &lt;code&gt;overwrite&lt;/code&gt;, &lt;code&gt;concatenate&lt;/code&gt;, &lt;code&gt;cat_sort_uniq&lt;/code&gt;, or &lt;code&gt;ignore&lt;/code&gt;. This overrides the &lt;code&gt;core.rewriteMode&lt;/code&gt; setting.</source>
          <target state="translated">Al copiar notas durante una reescritura, qu&amp;eacute; hacer si la confirmaci&amp;oacute;n de destino ya tiene una nota. Debe ser uno de los siguientes: &lt;code&gt;overwrite&lt;/code&gt; , &lt;code&gt;concatenate&lt;/code&gt; , &lt;code&gt;cat_sort_uniq&lt;/code&gt; o &lt;code&gt;ignore&lt;/code&gt; . Esto anula la configuraci&amp;oacute;n &lt;code&gt;core.rewriteMode&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fa7e030aba2e9a9a4e5882753f19d2b4a66b4e16" translate="yes" xml:space="preserve">
          <source>When creating a new branch, if &lt;code&gt;&amp;lt;commit-ish&amp;gt;&lt;/code&gt; is a branch, mark it as &quot;upstream&quot; from the new branch. This is the default if &lt;code&gt;&amp;lt;commit-ish&amp;gt;&lt;/code&gt; is a remote-tracking branch. See &quot;--track&quot; in &lt;a href=&quot;git-branch&quot;&gt;git-branch[1]&lt;/a&gt; for details.</source>
          <target state="translated">Al crear una nueva rama, si &lt;code&gt;&amp;lt;commit-ish&amp;gt;&lt;/code&gt; es una rama, m&amp;aacute;rquela como &quot;aguas arriba&quot; de la nueva rama. Este es el valor predeterminado si &lt;code&gt;&amp;lt;commit-ish&amp;gt;&lt;/code&gt; es una rama de seguimiento remoto. Consulte &quot;--track&quot; en &lt;a href=&quot;git-branch&quot;&gt;git-branch [1]&lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="54d8049451fa958ada38921d90347d3ee7c4d771" translate="yes" xml:space="preserve">
          <source>When creating a new branch, set up &quot;upstream&quot; configuration. &lt;code&gt;-c&lt;/code&gt; is implied. See &lt;code&gt;--track&lt;/code&gt; in &lt;a href=&quot;git-branch&quot;&gt;git-branch[1]&lt;/a&gt; for details.</source>
          <target state="translated">Al crear una nueva rama, establezca la configuraci&amp;oacute;n &quot;ascendente&quot;. &lt;code&gt;-c&lt;/code&gt; est&amp;aacute; impl&amp;iacute;cito. Consulte &lt;code&gt;--track&lt;/code&gt; en &lt;a href=&quot;git-branch&quot;&gt;git-branch [1]&lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="fc590aa31fec73c4296b9f428640a84b6d3e91a7" translate="yes" xml:space="preserve">
          <source>When creating a new branch, set up &quot;upstream&quot; configuration. See &quot;--track&quot; in &lt;a href=&quot;git-branch&quot;&gt;git-branch[1]&lt;/a&gt; for details.</source>
          <target state="translated">Al crear una nueva rama, establezca la configuraci&amp;oacute;n &quot;ascendente&quot;. Consulte &quot;--track&quot; en &lt;a href=&quot;git-branch&quot;&gt;git-branch [1]&lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="67211ea9327a11f7c102d4d6622e44707e57316e" translate="yes" xml:space="preserve">
          <source>When creating a new branch, set up &lt;code&gt;branch.&amp;lt;name&amp;gt;.remote&lt;/code&gt; and &lt;code&gt;branch.&amp;lt;name&amp;gt;.merge&lt;/code&gt; configuration entries to mark the start-point branch as &quot;upstream&quot; from the new branch. This configuration will tell git to show the relationship between the two branches in &lt;code&gt;git status&lt;/code&gt; and &lt;code&gt;git branch -v&lt;/code&gt;. Furthermore, it directs &lt;code&gt;git pull&lt;/code&gt; without arguments to pull from the upstream when the new branch is checked out.</source>
          <target state="translated">Al crear una nueva rama, configure &lt;code&gt;branch.&amp;lt;name&amp;gt;.remote&lt;/code&gt; y &lt;code&gt;branch.&amp;lt;name&amp;gt;.merge&lt;/code&gt; entradas de configuraci&amp;oacute;n para marcar la rama de punto de inicio como &quot;aguas arriba&quot; de la nueva rama. Esta configuraci&amp;oacute;n le dir&amp;aacute; a git que muestre la relaci&amp;oacute;n entre las dos ramas en &lt;code&gt;git status&lt;/code&gt; y &lt;code&gt;git branch -v&lt;/code&gt; . Adem&amp;aacute;s, dirige &lt;code&gt;git pull&lt;/code&gt; sin argumentos para extraer desde el flujo ascendente cuando se comprueba la nueva rama.</target>
        </trans-unit>
        <trans-unit id="30421c6d8900807173aa121649f943a72b9b4dbe" translate="yes" xml:space="preserve">
          <source>When creating a packed archive in a repository that has existing packs, the command reuses existing deltas. This sometimes results in a slightly suboptimal pack. This flag tells the command not to reuse existing deltas but compute them from scratch.</source>
          <target state="translated">Cuando se crea un archivo empaquetado en un repositorio que tiene paquetes existentes,el comando reutiliza los deltas existentes.Esto a veces resulta en un paquete ligeramente subóptimo.Esta bandera le dice al comando que no reutilice los deltas existentes sino que los calcule desde cero.</target>
        </trans-unit>
        <trans-unit id="40641904740525d3a46d2f53ea1f042429403d62" translate="yes" xml:space="preserve">
          <source>When creating files, prepend &amp;lt;string&amp;gt; (usually a directory including a trailing /)</source>
          <target state="translated">Al crear archivos, anteponga &amp;lt;string&amp;gt; (generalmente un directorio que incluye un / al final)</target>
        </trans-unit>
        <trans-unit id="55d2573d14b31c180f96244b6210a62251fe4b79" translate="yes" xml:space="preserve">
          <source>When dealing with &lt;code&gt;git diff-tree&lt;/code&gt; output, it takes advantage of the fact that the patch is prefixed with the object name of the commit, and outputs two 40-byte hexadecimal strings. The first string is the patch ID, and the second string is the commit ID. This can be used to make a mapping from patch ID to commit ID.</source>
          <target state="translated">Cuando se trata &lt;code&gt;git diff-tree&lt;/code&gt; salida del &amp;aacute;rbol de diferencias de git , se aprovecha el hecho de que el parche tiene como prefijo el nombre del objeto de la confirmaci&amp;oacute;n y genera dos cadenas hexadecimales de 40 bytes. La primera cadena es el ID de parche y la segunda cadena es el ID de confirmaci&amp;oacute;n. Esto se puede usar para hacer un mapeo desde el ID de parche hasta el ID de confirmaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="d776ef3252048cd13183a8501d7c0015731386cd" translate="yes" xml:space="preserve">
          <source>When deciding what attributes are assigned to a path, Git consults &lt;code&gt;$GIT_DIR/info/attributes&lt;/code&gt; file (which has the highest precedence), &lt;code&gt;.gitattributes&lt;/code&gt; file in the same directory as the path in question, and its parent directories up to the toplevel of the work tree (the further the directory that contains &lt;code&gt;.gitattributes&lt;/code&gt; is from the path in question, the lower its precedence). Finally global and system-wide files are considered (they have the lowest precedence).</source>
          <target state="translated">Al decidir qu&amp;eacute; atributos se asignan a una ruta, Git consulta el &lt;code&gt;$GIT_DIR/info/attributes&lt;/code&gt; (que tiene la prioridad m&amp;aacute;s alta), el archivo &lt;code&gt;.gitattributes&lt;/code&gt; en el mismo directorio que la ruta en cuesti&amp;oacute;n y sus directorios principales hasta el nivel superior del &amp;aacute;rbol de trabajo (cuanto m&amp;aacute;s &lt;code&gt;.gitattributes&lt;/code&gt; est&amp;eacute; el directorio que contiene .gitattributes de la ruta en cuesti&amp;oacute;n, menor ser&amp;aacute; su precedencia). Finalmente, se consideran los archivos globales y de todo el sistema (tienen la precedencia m&amp;aacute;s baja).</target>
        </trans-unit>
        <trans-unit id="be47e73cae5925c270f0353e0b448f44fba38688" translate="yes" xml:space="preserve">
          <source>When deinitialized or deleted (see below), the submodule&amp;rsquo;s Git directory is automatically moved to &lt;code&gt;$GIT_DIR/modules/&amp;lt;name&amp;gt;/&lt;/code&gt; of the superproject.</source>
          <target state="translated">Cuando se desinicializa o elimina (ver m&amp;aacute;s abajo), el directorio Git del subm&amp;oacute;dulo se mueve autom&amp;aacute;ticamente a &lt;code&gt;$GIT_DIR/modules/&amp;lt;name&amp;gt;/&lt;/code&gt; del superproyecto.</target>
        </trans-unit>
        <trans-unit id="d6198e5c096df70165a4ba7282b14c9062838d85" translate="yes" xml:space="preserve">
          <source>When displaying names of reachable objects, in addition to the SHA-1 also display a name that describes &lt;strong&gt;how&lt;/strong&gt; they are reachable, compatible with &lt;a href=&quot;git-rev-parse&quot;&gt;git-rev-parse[1]&lt;/a&gt;, e.g. &lt;code&gt;HEAD@{1234567890}~25^2:src/&lt;/code&gt;.</source>
          <target state="translated">Cuando se muestran los nombres de los objetos alcanzables, adem&amp;aacute;s del SHA-1, tambi&amp;eacute;n se muestra un nombre que describe &lt;strong&gt;c&amp;oacute;mo&lt;/strong&gt; son accesibles, compatible con &lt;a href=&quot;git-rev-parse&quot;&gt;git-rev-parse [1]&lt;/a&gt; , por ejemplo, &lt;code&gt;HEAD@{1234567890}~25^2:src/&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="39ccc422d97039f55d5b75b982904e65809f0ab0" translate="yes" xml:space="preserve">
          <source>When doing a dry-run, give the output in a porcelain-ready format. See &lt;a href=&quot;git-status&quot;&gt;git-status[1]&lt;/a&gt; for details. Implies &lt;code&gt;--dry-run&lt;/code&gt;.</source>
          <target state="translated">Cuando realice una ejecuci&amp;oacute;n en seco, d&amp;eacute; el resultado en un formato listo para porcelana. Consulte &lt;a href=&quot;git-status&quot;&gt;git-status [1]&lt;/a&gt; para obtener m&amp;aacute;s detalles. Implica: &lt;code&gt;--dry-run&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="91fdf83cd4cf2351c13b94fc0d59dcd9a51c5b73" translate="yes" xml:space="preserve">
          <source>When doing a dry-run, give the output in the long-format. Implies &lt;code&gt;--dry-run&lt;/code&gt;.</source>
          <target state="translated">Cuando realice una ejecuci&amp;oacute;n en seco, proporcione la salida en formato largo. Implica: &lt;code&gt;--dry-run&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7320eee3c7f6d76666dfe697952518d827846a03" translate="yes" xml:space="preserve">
          <source>When doing a dry-run, give the output in the short-format. See &lt;a href=&quot;git-status&quot;&gt;git-status[1]&lt;/a&gt; for details. Implies &lt;code&gt;--dry-run&lt;/code&gt;.</source>
          <target state="translated">Cuando realice un ensayo, proporcione el resultado en formato corto. Consulte &lt;a href=&quot;git-status&quot;&gt;git-status [1]&lt;/a&gt; para obtener m&amp;aacute;s detalles. Implica: &lt;code&gt;--dry-run&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9aa102d4a4b04252e6d4b5a0080dce309ef777d4" translate="yes" xml:space="preserve">
          <source>When doing a repository conversion, use a unique mark per commit (&lt;code&gt;mark :&amp;lt;n&amp;gt;&lt;/code&gt;) and supply the --export-marks option on the command line. fast-import will dump a file which lists every mark and the Git object SHA-1 that corresponds to it. If the frontend can tie the marks back to the source repository, it is easy to verify the accuracy and completeness of the import by comparing each Git commit to the corresponding source revision.</source>
          <target state="translated">When doing a repository conversion, use a unique mark per commit ( &lt;code&gt;mark :&amp;lt;n&amp;gt;&lt;/code&gt; ) and supply the --export-marks option on the command line. fast-import will dump a file which lists every mark and the Git object SHA-1 that corresponds to it. If the frontend can tie the marks back to the source repository, it is easy to verify the accuracy and completeness of the import by comparing each Git commit to the corresponding source revision.</target>
        </trans-unit>
        <trans-unit id="6f397bf185a0b1be7403f8c718221517e54d79b2" translate="yes" xml:space="preserve">
          <source>When editing the commit message, start the editor with the contents in the given file. The &lt;code&gt;commit.template&lt;/code&gt; configuration variable is often used to give this option implicitly to the command. This mechanism can be used by projects that want to guide participants with some hints on what to write in the message in what order. If the user exits the editor without editing the message, the commit is aborted. This has no effect when a message is given by other means, e.g. with the &lt;code&gt;-m&lt;/code&gt; or &lt;code&gt;-F&lt;/code&gt; options.</source>
          <target state="translated">Al editar el mensaje de confirmaci&amp;oacute;n, inicie el editor con el contenido del archivo dado. La variable de configuraci&amp;oacute;n &lt;code&gt;commit.template&lt;/code&gt; se usa a menudo para dar esta opci&amp;oacute;n impl&amp;iacute;citamente al comando. Este mecanismo puede ser utilizado por proyectos que quieran guiar a los participantes con algunas pistas sobre qu&amp;eacute; escribir en el mensaje y en qu&amp;eacute; orden. Si el usuario sale del editor sin editar el mensaje, la confirmaci&amp;oacute;n se cancela. Esto no tiene ning&amp;uacute;n efecto cuando un mensaje se da por otros medios, por ejemplo, con las opciones &lt;code&gt;-m&lt;/code&gt; o &lt;code&gt;-F&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7835173f74e58e15c8891f5a3e0b3af743fd1c66" translate="yes" xml:space="preserve">
          <source>When editing, provide the raw object contents rather than pretty-printed ones. Currently this only affects trees, which will be shown in their binary form. This is harder to work with, but can help when repairing a tree that is so corrupted it cannot be pretty-printed. Note that you may need to configure your editor to cleanly read and write binary data.</source>
          <target state="translated">Cuando edite,proporcione el contenido del objeto en bruto en lugar de los impresos bonitos.Actualmente esto sólo afecta a los árboles,que se mostrarán en su forma binaria.Esto es más difícil de trabajar,pero puede ayudar cuando se repara un árbol que está tan corrompido que no se puede imprimir bien.Ten en cuenta que puede que necesites configurar tu editor para leer y escribir datos binarios de forma limpia.</target>
        </trans-unit>
        <trans-unit id="ce47e94310de9fcb0d82c1f052bbcc38f3a11f76" translate="yes" xml:space="preserve">
          <source>When enabled, the default &lt;code&gt;post-update&lt;/code&gt; hook runs &lt;code&gt;git update-server-info&lt;/code&gt; to keep the information used by dumb transports (e.g., HTTP) up to date. If you are publishing a Git repository that is accessible via HTTP, you should probably enable this hook.</source>
          <target state="translated">Cuando est&amp;aacute; habilitado, el enlace &lt;code&gt;post-update&lt;/code&gt; predeterminado ejecuta &lt;code&gt;git update-server-info&lt;/code&gt; para mantener actualizada la informaci&amp;oacute;n utilizada por los transportes tontos (por ejemplo, HTTP). Si est&amp;aacute; publicando un repositorio de Git al que se puede acceder a trav&amp;eacute;s de HTTP, probablemente deber&amp;iacute;a habilitar este enlace.</target>
        </trans-unit>
        <trans-unit id="a529b1482d7666548417edb1d901df1240194350" translate="yes" xml:space="preserve">
          <source>When encountering a non-ASCII message or subject that does not declare its encoding, add headers/quoting to indicate it is encoded in &amp;lt;encoding&amp;gt;. Default is the value of the &lt;code&gt;sendemail.assume8bitEncoding&lt;/code&gt;; if that is unspecified, this will be prompted for if any non-ASCII files are encountered.</source>
          <target state="translated">Cuando encuentre un mensaje o asunto no ASCII que no declare su codificaci&amp;oacute;n, agregue encabezados / citas para indicar que est&amp;aacute; codificado en &amp;lt;encoding&amp;gt;. El valor predeterminado es el valor de &lt;code&gt;sendemail.assume8bitEncoding&lt;/code&gt; ; si no se especifica, se le solicitar&amp;aacute; si se encuentra alg&amp;uacute;n archivo que no sea ASCII.</target>
        </trans-unit>
        <trans-unit id="c331bd8bb74634e4f18684aaa53f36ba8f8cf37d" translate="yes" xml:space="preserve">
          <source>When erasing credentials, matching credentials will be erased from all files.</source>
          <target state="translated">Al borrar las credenciales,las credenciales coincidentes se borrarán de todos los archivos.</target>
        </trans-unit>
        <trans-unit id="74e58a3904b06fc63c005d33dc33b553098868b7" translate="yes" xml:space="preserve">
          <source>When extensions.worktreeConfig is enabled, the config file &lt;code&gt;.git/worktrees/&amp;lt;id&amp;gt;/config.worktree&lt;/code&gt; is read after &lt;code&gt;.git/config&lt;/code&gt; is.</source>
          <target state="translated">Cuando extensions.worktreeConfig est&amp;aacute; habilitado, el archivo de configuraci&amp;oacute;n &lt;code&gt;.git/worktrees/&amp;lt;id&amp;gt;/config.worktree&lt;/code&gt; se lee despu&amp;eacute;s de &lt;code&gt;.git/config&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3a73371934954e7de3c00c5b21339d1552e97b06" translate="yes" xml:space="preserve">
          <source>When false, merge the current branch into the upstream branch.</source>
          <target state="translated">Cuando sea falso,fusiona la rama actual con la rama de arriba.</target>
        </trans-unit>
        <trans-unit id="c8afe72df4116adf55dd615031acfafbceae0ec5" translate="yes" xml:space="preserve">
          <source>When fetching refs listed on the command line, use the specified refspec (can be given more than once) to map the refs to remote-tracking branches, instead of the values of &lt;code&gt;remote.*.fetch&lt;/code&gt; configuration variables for the remote repository. See section on &quot;Configured Remote-tracking Branches&quot; for details.</source>
          <target state="translated">Al obtener las referencias enumeradas en la l&amp;iacute;nea de comando, use la especificaci&amp;oacute;n de referencia especificada (se puede proporcionar m&amp;aacute;s de una vez) para asignar las referencias a las ramas de seguimiento remoto, en lugar de los valores de &lt;code&gt;remote.*.fetch&lt;/code&gt; variables de configuraci&amp;oacute;n remote. *. Fetch para el repositorio remoto. Consulte la secci&amp;oacute;n sobre &quot;Ramas de seguimiento remoto configuradas&quot; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="f131c02a4584603f0de6ca46a404ddf3258dbf13" translate="yes" xml:space="preserve">
          <source>When files are modified outside of Git, the user will need to stage the modified files explicitly (e.g. see &lt;code&gt;Examples&lt;/code&gt; section in &lt;a href=&quot;git-update-index&quot;&gt;git-update-index[1]&lt;/a&gt;). Git will not normally detect changes to those files.</source>
          <target state="translated">Cuando los archivos se modifican fuera de Git, el usuario deber&amp;aacute; organizar los archivos modificados de forma expl&amp;iacute;cita (por ejemplo, consulte la secci&amp;oacute;n de &lt;code&gt;Examples&lt;/code&gt; en &lt;a href=&quot;git-update-index&quot;&gt;git-update-index [1]&lt;/a&gt; ). Git normalmente no detectar&amp;aacute; cambios en esos archivos.</target>
        </trans-unit>
        <trans-unit id="e95f7718835508fa2f714691dae7615b5ccee03a" translate="yes" xml:space="preserve">
          <source>When filtering history with &lt;code&gt;&amp;lt;path&amp;gt;&amp;hellip;​&lt;/code&gt;, does not prune some history. (See &quot;History simplification&quot; in &lt;a href=&quot;git-log&quot;&gt;git-log[1]&lt;/a&gt; for a more detailed explanation.)</source>
          <target state="translated">Al filtrar la historia con &lt;code&gt;&amp;lt;path&amp;gt;&amp;hellip;​&lt;/code&gt; , no podar un poco de historia. (Consulte &quot;Simplificaci&amp;oacute;n del historial&quot; en &lt;a href=&quot;git-log&quot;&gt;git-log [1]&lt;/a&gt; para obtener una explicaci&amp;oacute;n m&amp;aacute;s detallada).</target>
        </trans-unit>
        <trans-unit id="18f94df4064f0faddb37415d13a088dd57356563" translate="yes" xml:space="preserve">
          <source>When first created, objects are stored in individual files, but for efficiency may later be compressed together into &quot;pack files&quot;.</source>
          <target state="translated">Cuando se crean por primera vez,los objetos se almacenan en archivos individuales,pero por razones de eficiencia pueden ser comprimidos posteriormente en &quot;paquetes de archivos&quot;.</target>
        </trans-unit>
        <trans-unit id="3ce1186a221491da0c957498f84e962314b0f4f4" translate="yes" xml:space="preserve">
          <source>When given a range of commits to display (e.g. &lt;code&gt;commit1..commit2&lt;/code&gt; or &lt;code&gt;commit2 ^commit1&lt;/code&gt;), only display commits that exist directly on the ancestry chain between the &lt;code&gt;commit1&lt;/code&gt; and &lt;code&gt;commit2&lt;/code&gt;, i.e. commits that are both descendants of &lt;code&gt;commit1&lt;/code&gt;, and ancestors of &lt;code&gt;commit2&lt;/code&gt;.</source>
          <target state="translated">Cuando se le da un rango de confirmaciones para mostrar (por ejemplo, &lt;code&gt;commit1..commit2&lt;/code&gt; o &lt;code&gt;commit2 ^commit1&lt;/code&gt; ), solo muestra las confirmaciones que existen directamente en la cadena de ascendencia entre &lt;code&gt;commit1&lt;/code&gt; y &lt;code&gt;commit2&lt;/code&gt; , es decir, las confirmaciones que son descendientes de &lt;code&gt;commit1&lt;/code&gt; y ancestros de &lt;code&gt;commit2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e006844e32fc3d063be827d3911798e9ae2b69bd" translate="yes" xml:space="preserve">
          <source>When given a range of commits to display (e.g. &lt;code&gt;commit1..commit2&lt;/code&gt; or &lt;code&gt;commit2 ^commit1&lt;/code&gt;), only display commits that exist directly on the ancestry chain between the &lt;code&gt;commit1&lt;/code&gt; and &lt;code&gt;commit2&lt;/code&gt;, i.e. commits that are both descendants of &lt;code&gt;commit1&lt;/code&gt;, and ancestors of &lt;code&gt;commit2&lt;/code&gt;. (See &quot;History simplification&quot; in &lt;a href=&quot;git-log&quot;&gt;git-log[1]&lt;/a&gt; for a more detailed explanation.)</source>
          <target state="translated">Cuando se le da un rango de confirmaciones para mostrar (por ejemplo, &lt;code&gt;commit1..commit2&lt;/code&gt; o &lt;code&gt;commit2 ^commit1&lt;/code&gt; ), solo muestra las confirmaciones que existen directamente en la cadena de ascendencia entre &lt;code&gt;commit1&lt;/code&gt; y &lt;code&gt;commit2&lt;/code&gt; , es decir, las confirmaciones que son descendientes de &lt;code&gt;commit1&lt;/code&gt; y ancestros de &lt;code&gt;commit2&lt;/code&gt; . (Consulte &quot;Simplificaci&amp;oacute;n del historial&quot; en &lt;a href=&quot;git-log&quot;&gt;git-log [1]&lt;/a&gt; para obtener una explicaci&amp;oacute;n m&amp;aacute;s detallada).</target>
        </trans-unit>
        <trans-unit id="8281565ed0f01821dd04f5b4f8a282147fc8eb15" translate="yes" xml:space="preserve">
          <source>When given a two-part name section.key, the value for section.&amp;lt;url&amp;gt;.key whose &amp;lt;url&amp;gt; part matches the best to the given URL is returned (if no such key exists, the value for section.key is used as a fallback). When given just the section as name, do so for all the keys in the section and list them. Returns error code 1 if no value is found.</source>
          <target state="translated">Cuando se le da un nombre de dos partes section.key, se devuelve el valor de section. &amp;lt;url&amp;gt; .key cuya parte &amp;lt;url&amp;gt; coincide mejor con la URL dada (si no existe tal clave, se usa el valor de section.key como alternativa). Cuando se le d&amp;eacute; solo la secci&amp;oacute;n como nombre, h&amp;aacute;galo para todas las claves de la secci&amp;oacute;n y enumerelas. Devuelve el c&amp;oacute;digo de error 1 si no se encuentra ning&amp;uacute;n valor.</target>
        </trans-unit>
        <trans-unit id="f88bacf945cb9e0553c03a8ac1d906d306ca24eb" translate="yes" xml:space="preserve">
          <source>When given an SVN revision number of the form &lt;code&gt;rN&lt;/code&gt;, returns the corresponding Git commit hash (this can optionally be followed by a tree-ish to specify which branch should be searched). When given a tree-ish, returns the corresponding SVN revision number.</source>
          <target state="translated">Cuando se le da un n&amp;uacute;mero de revisi&amp;oacute;n SVN de la forma &lt;code&gt;rN&lt;/code&gt; , devuelve el hash de confirmaci&amp;oacute;n de Git correspondiente (esto puede ir seguido opcionalmente por un &amp;aacute;rbol para especificar en qu&amp;eacute; rama se debe buscar). Cuando se le da un &amp;aacute;rbol, devuelve el n&amp;uacute;mero de revisi&amp;oacute;n SVN correspondiente.</target>
        </trans-unit>
        <trans-unit id="a96423d691859ec79cd98b29f7765677feb267ba" translate="yes" xml:space="preserve">
          <source>When given, and the repository to clone from is accessed via ssh, this specifies a non-default path for the command run on the other end.</source>
          <target state="translated">Cuando se da,y se accede al repositorio desde el que clonar a través de ssh,esto especifica una ruta no predeterminada para el comando que se ejecuta en el otro extremo.</target>
        </trans-unit>
        <trans-unit id="d1fb59a7ba9cbb456b044d488d1684f86345d108" translate="yes" xml:space="preserve">
          <source>When given, and the repository to fetch from is handled by &lt;code&gt;git fetch-pack&lt;/code&gt;, &lt;code&gt;--exec=&amp;lt;upload-pack&amp;gt;&lt;/code&gt; is passed to the command to specify non-default path for the command run on the other end.</source>
          <target state="translated">Cuando se proporciona, y el repositorio del que se va a recuperar es manejado por &lt;code&gt;git fetch-pack&lt;/code&gt; , &lt;code&gt;--exec=&amp;lt;upload-pack&amp;gt;&lt;/code&gt; se pasa al comando para especificar la ruta no predeterminada para el comando que se ejecuta en el otro extremo.</target>
        </trans-unit>
        <trans-unit id="347806ba4d643d64e35fb6159f6ca9df9bd36627" translate="yes" xml:space="preserve">
          <source>When giving multiple pattern expressions combined with &lt;code&gt;--or&lt;/code&gt;, this flag is specified to limit the match to files that have lines to match all of them.</source>
          <target state="translated">Cuando se proporcionan m&amp;uacute;ltiples expresiones de patr&amp;oacute;n combinadas con &lt;code&gt;--or&lt;/code&gt; , esta marca se especifica para limitar la coincidencia a archivos que tienen l&amp;iacute;neas para coincidir con todas.</target>
        </trans-unit>
        <trans-unit id="4aea2178dff194f0c4c01be5fd5d2a4667a09068" translate="yes" xml:space="preserve">
          <source>When he&amp;rsquo;s ready, he tells Alice to pull changes from the repository at /home/bob/myrepo. She does this with:</source>
          <target state="translated">Cuando est&amp;aacute; listo, le dice a Alice que extraiga los cambios del repositorio en / home / bob / myrepo. Ella hace esto con:</target>
        </trans-unit>
        <trans-unit id="66bba6f8c73ac5f72ec362ac6e58a5210f96d2e5" translate="yes" xml:space="preserve">
          <source>When importing a renamed file or directory, simply delete the old name(s) and modify the new name(s) during the corresponding commit. Git performs rename detection after-the-fact, rather than explicitly during a commit.</source>
          <target state="translated">Cuando se importa un archivo o directorio renombrado,simplemente se borra el nombre o nombres antiguos y se modifica el nuevo nombre o nombres durante la confirmación correspondiente.Git realiza la detección de renombramiento a posteriori,en lugar de hacerlo explícitamente durante una confirmación.</target>
        </trans-unit>
        <trans-unit id="3cdd5299d04b153fd0e295904b9e12eec6b499c8" translate="yes" xml:space="preserve">
          <source>When in list mode, show sha1 and commit subject line for each head, along with relationship to upstream branch (if any). If given twice, print the path of the linked worktree (if any) and the name of the upstream branch, as well (see also &lt;code&gt;git remote show &amp;lt;remote&amp;gt;&lt;/code&gt;). Note that the current worktree&amp;rsquo;s HEAD will not have its path printed (it will always be your current directory).</source>
          <target state="translated">Cuando est&amp;eacute; en modo lista, muestre sha1 y confirme la l&amp;iacute;nea de asunto para cada encabezado, junto con la relaci&amp;oacute;n con la rama ascendente (si corresponde). Si se da dos veces, imprima la ruta del &amp;aacute;rbol de trabajo vinculado (si corresponde) y el nombre de la rama ascendente tambi&amp;eacute;n (consulte tambi&amp;eacute;n &lt;code&gt;git remote show &amp;lt;remote&amp;gt;&lt;/code&gt; ). Tenga en cuenta que HEAD del &amp;aacute;rbol de trabajo actual no tendr&amp;aacute; su ruta impresa (siempre ser&amp;aacute; su directorio actual).</target>
        </trans-unit>
        <trans-unit id="df3e42ff48559b3d46a4606cc43ea02a4d5742e5" translate="yes" xml:space="preserve">
          <source>When informative errors are turned on, git-daemon will report more verbose errors to the client, differentiating conditions like &quot;no such repository&quot; from &quot;repository not exported&quot;. This is more convenient for clients, but may leak information about the existence of unexported repositories. When informative errors are not enabled, all errors report &quot;access denied&quot; to the client. The default is --no-informative-errors.</source>
          <target state="translated">Cuando se activan los errores informativos,git-daemon informará de más errores verbosos al cliente,diferenciando condiciones como &quot;no hay tal repositorio&quot; de &quot;repositorio no exportado&quot;.Esto es más conveniente para los clientes,pero puede filtrar información sobre la existencia de repositorios no exportados.Cuando los errores informativos no están habilitados,todos los errores reportan &quot;acceso denegado&quot; al cliente.El valor por defecto es --no-informativo-errores.</target>
        </trans-unit>
        <trans-unit id="882f7c25abfabdf5a0527656f301ec49c21b72e8" translate="yes" xml:space="preserve">
          <source>When initializing submodules, a &lt;code&gt;.gitmodules&lt;/code&gt; file in the top-level directory of the containing repository is used to find the url of each submodule. This file should be formatted in the same way as &lt;code&gt;$GIT_DIR/config&lt;/code&gt;. The key to each submodule url is &quot;submodule.$name.url&quot;. See &lt;a href=&quot;gitmodules&quot;&gt;gitmodules[5]&lt;/a&gt; for details.</source>
          <target state="translated">Al inicializar subm&amp;oacute;dulos, se &lt;code&gt;.gitmodules&lt;/code&gt; un archivo .gitmodules en el directorio de nivel superior del repositorio que los contiene para encontrar la URL de cada subm&amp;oacute;dulo. Este archivo debe tener el mismo formato que &lt;code&gt;$GIT_DIR/config&lt;/code&gt; . La clave para la URL de cada subm&amp;oacute;dulo es &quot;submodule. $ Name.url&quot;. Consulte &lt;a href=&quot;gitmodules&quot;&gt;gitmodules [5]&lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="854c3f2001a62b8064a99a360e1e32072b64ad8e" translate="yes" xml:space="preserve">
          <source>When initially invoking &lt;code&gt;git am&lt;/code&gt;, you give it the names of the mailboxes to process. Upon seeing the first patch that does not apply, it aborts in the middle. You can recover from this in one of two ways:</source>
          <target state="translated">Al invocar inicialmente a &lt;code&gt;git am&lt;/code&gt; , le da los nombres de los buzones de correo para procesar. Al ver el primer parche que no se aplica, aborta en el medio. Puede recuperarse de esto de una de estas dos formas:</target>
        </trans-unit>
        <trans-unit id="ae919810620b188b4a098cb2c7010981f59eb2a8" translate="yes" xml:space="preserve">
          <source>When invoking a custom merge tool, Git uses a set of temporary files to pass to the tool. If the tool returns an error and this variable is set to &lt;code&gt;true&lt;/code&gt;, then these temporary files will be preserved, otherwise they will be removed after the tool has exited. Defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">Al invocar una herramienta de combinaci&amp;oacute;n personalizada, Git usa un conjunto de archivos temporales para pasar a la herramienta. Si la herramienta devuelve un error y esta variable se establece en &lt;code&gt;true&lt;/code&gt; , estos archivos temporales se conservar&amp;aacute;n; de lo contrario, se eliminar&amp;aacute;n despu&amp;eacute;s de que la herramienta haya salido. El valor predeterminado es &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8b149cf0c1c59f45e7d020f119cab62bcf88ef5e" translate="yes" xml:space="preserve">
          <source>When it comes to editing that commit, execute &lt;code&gt;git reset HEAD^&lt;/code&gt;. The effect is that the HEAD is rewound by one, and the index follows suit. However, the working tree stays the same.</source>
          <target state="translated">Cuando se trata de editar ese commit, ejecute &lt;code&gt;git reset HEAD^&lt;/code&gt; . El efecto es que la CABEZA se rebobina por uno y el &amp;iacute;ndice sigue su ejemplo. Sin embargo, el &amp;aacute;rbol de trabajo permanece igual.</target>
        </trans-unit>
        <trans-unit id="54d95c16d8a8ecd15ca228486caba0d9b645aa97" translate="yes" xml:space="preserve">
          <source>When it is not obvious how to apply a change, the following happens:</source>
          <target state="translated">Cuando no es obvio cómo aplicar un cambio,sucede lo siguiente:</target>
        </trans-unit>
        <trans-unit id="42b78027e34d66bfdfc08d7cf571f024832571b4" translate="yes" xml:space="preserve">
          <source>When it is not obvious how to reconcile the changes, the following happens:</source>
          <target state="translated">Cuando no es obvio cómo conciliar los cambios,sucede lo siguiente:</target>
        </trans-unit>
        <trans-unit id="ac3a9525cba718f2ba4c34b577914369145b2d3f" translate="yes" xml:space="preserve">
          <source>When listing references from an alternate, list only references that begin with the given prefix. Prefixes match as if they were given as arguments to &lt;a href=&quot;git-for-each-ref&quot;&gt;git-for-each-ref[1]&lt;/a&gt;. To list multiple prefixes, separate them with whitespace. If &lt;code&gt;core.alternateRefsCommand&lt;/code&gt; is set, setting &lt;code&gt;core.alternateRefsPrefixes&lt;/code&gt; has no effect.</source>
          <target state="translated">Cuando enumere referencias de una alternativa, enumere solo las referencias que comiencen con el prefijo dado. Los prefijos coinciden como si se hubieran dado como argumentos para &lt;a href=&quot;git-for-each-ref&quot;&gt;git-for-each-ref [1]&lt;/a&gt; . Para enumerar varios prefijos, sep&amp;aacute;relos con espacios en blanco. Si se establece &lt;code&gt;core.alternateRefsCommand&lt;/code&gt; , la configuraci&amp;oacute;n de &lt;code&gt;core.alternateRefsPrefixes&lt;/code&gt; no tiene ning&amp;uacute;n efecto.</target>
        </trans-unit>
        <trans-unit id="9485b24ac5fd9e24de580d1b4ae98203a381daa8" translate="yes" xml:space="preserve">
          <source>When listing, use the specified &amp;lt;format&amp;gt;, which can be one of &lt;code&gt;short&lt;/code&gt;, &lt;code&gt;medium&lt;/code&gt; and &lt;code&gt;long&lt;/code&gt;. When omitted, the format defaults to &lt;code&gt;short&lt;/code&gt;.</source>
          <target state="translated">Cuando enumere, use el &amp;lt;formato&amp;gt; especificado, que puede ser &lt;code&gt;short&lt;/code&gt; , &lt;code&gt;medium&lt;/code&gt; y &lt;code&gt;long&lt;/code&gt; . Cuando se omite, el formato predeterminado es &lt;code&gt;short&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0de171dd2f5efd6969d6cc172c7d84e26d4bf231" translate="yes" xml:space="preserve">
          <source>When loosening unreachable objects, do not bother loosening any objects older than &lt;code&gt;&amp;lt;when&amp;gt;&lt;/code&gt;. This can be used to optimize out the write of any objects that would be immediately pruned by a follow-up &lt;code&gt;git prune&lt;/code&gt;.</source>
          <target state="translated">Al aflojar objetos inalcanzables, no se moleste en aflojar ning&amp;uacute;n objeto m&amp;aacute;s antiguo que &lt;code&gt;&amp;lt;when&amp;gt;&lt;/code&gt; . Esto se puede usar para optimizar la escritura de cualquier objeto que se podar&amp;iacute;a inmediatamente con un &lt;code&gt;git prune&lt;/code&gt; de seguimiento .</target>
        </trans-unit>
        <trans-unit id="2ecd3bb7ffbd4f19e0c8d754d499b7e6453c84ef" translate="yes" xml:space="preserve">
          <source>When merging an annotated (and possibly signed) tag, Git always creates a merge commit even if a fast-forward merge is possible, and the commit message template is prepared with the tag message. Additionally, if the tag is signed, the signature check is reported as a comment in the message template. See also &lt;a href=&quot;git-tag&quot;&gt;git-tag[1]&lt;/a&gt;.</source>
          <target state="translated">Al fusionar una etiqueta anotada (y posiblemente firmada), Git siempre crea una confirmaci&amp;oacute;n de combinaci&amp;oacute;n incluso si es posible una combinaci&amp;oacute;n de avance r&amp;aacute;pido, y la plantilla de mensaje de confirmaci&amp;oacute;n se prepara con el mensaje de la etiqueta. Adem&amp;aacute;s, si la etiqueta est&amp;aacute; firmada, la verificaci&amp;oacute;n de la firma se informa como un comentario en la plantilla de mensaje. Consulte tambi&amp;eacute;n &lt;a href=&quot;git-tag&quot;&gt;git-tag [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="fe18117100b1e7049979d08b3604c39a0ff0f463" translate="yes" xml:space="preserve">
          <source>When merging notes, be more verbose. When pruning notes, report all object names whose notes are removed.</source>
          <target state="translated">Al fusionar las notas,sean más verbosos.Cuando pode las notas,informe de todos los nombres de los objetos cuyas notas se hayan eliminado.</target>
        </trans-unit>
        <trans-unit id="2a6ffb56c555f1836377a0b4eb9f01a6db423b92" translate="yes" xml:space="preserve">
          <source>When merging notes, operate quietly.</source>
          <target state="translated">Cuando fusione las notas,opere en silencio.</target>
        </trans-unit>
        <trans-unit id="452e3643271eefd0a90ad1d2e336613f571129ec" translate="yes" xml:space="preserve">
          <source>When merging notes, resolve notes conflicts using the given strategy. The following strategies are recognized: &quot;manual&quot; (default), &quot;ours&quot;, &quot;theirs&quot;, &quot;union&quot; and &quot;cat_sort_uniq&quot;. This option overrides the &quot;notes.mergeStrategy&quot; configuration setting. See the &quot;NOTES MERGE STRATEGIES&quot; section below for more information on each notes merge strategy.</source>
          <target state="translated">Al fusionar las notas,resuelva los conflictos de las notas usando la estrategia dada.Se reconocen las siguientes estrategias:&quot;manual&quot; (por defecto),&quot;nuestra&quot;,&quot;de ellos&quot;,&quot;unión&quot; y &quot;cat_sort_uniq&quot;.Esta opción anula la configuración de &quot;notes.mergeStrategy&quot;.Consulte la sección &quot;ESTRATEGIAS DE FUSIÓN DE NOTAS&quot; a continuación para obtener más información sobre cada estrategia de fusión de notas.</target>
        </trans-unit>
        <trans-unit id="a1f0170f40742ebfd5d162ab78a6fe6f60fbd4e1" translate="yes" xml:space="preserve">
          <source>When missing or is set to &lt;code&gt;default&lt;/code&gt;, many fields in the stat structure are checked to detect if a file has been modified since Git looked at it. When this configuration variable is set to &lt;code&gt;minimal&lt;/code&gt;, sub-second part of mtime and ctime, the uid and gid of the owner of the file, the inode number (and the device number, if Git was compiled to use it), are excluded from the check among these fields, leaving only the whole-second part of mtime (and ctime, if &lt;code&gt;core.trustCtime&lt;/code&gt; is set) and the filesize to be checked.</source>
          <target state="translated">Cuando falta o est&amp;aacute; configurado como &lt;code&gt;default&lt;/code&gt; , muchos campos en la estructura de estad&amp;iacute;sticas se verifican para detectar si un archivo se ha modificado desde que Git lo mir&amp;oacute;. Cuando esta variable de configuraci&amp;oacute;n se establece en una parte &lt;code&gt;minimal&lt;/code&gt; , inferior a un segundo de mtime y ctime, el uid y gid del propietario del archivo, el n&amp;uacute;mero de inodo (y el n&amp;uacute;mero de dispositivo, si Git se compil&amp;oacute; para usarlo), se excluyen de la verificaci&amp;oacute;n entre estos campos, dejando solo la parte de un segundo completo de mtime (y ctime, si &lt;code&gt;core.trustCtime&lt;/code&gt; est&amp;aacute; configurado) y la parte por verificar.</target>
        </trans-unit>
        <trans-unit id="0689b4b76e007bf9e9f69e1368a4eed9e3d9055a" translate="yes" xml:space="preserve">
          <source>When more than one pattern matches the path, a later line overrides an earlier line. This overriding is done per attribute.</source>
          <target state="translated">Cuando más de un patrón coincide con el camino,una línea posterior anula una línea anterior.Esta anulación se hace por atributo.</target>
        </trans-unit>
        <trans-unit id="7de11bcf0fc6f31a9913abfce53b7b83c6075119" translate="yes" xml:space="preserve">
          <source>When moved lines are colored using e.g. the &lt;code&gt;diff.colorMoved&lt;/code&gt; setting, this option controls the &lt;code&gt;&amp;lt;mode&amp;gt;&lt;/code&gt; how spaces are treated for details of valid modes see &lt;code&gt;--color-moved-ws&lt;/code&gt; in &lt;a href=&quot;git-diff&quot;&gt;git-diff[1]&lt;/a&gt;.</source>
          <target state="translated">Cuando las l&amp;iacute;neas movidas se colorean usando, por ejemplo, la configuraci&amp;oacute;n &lt;code&gt;diff.colorMoved&lt;/code&gt; , esta opci&amp;oacute;n controla el &lt;code&gt;&amp;lt;mode&amp;gt;&lt;/code&gt; c&amp;oacute;mo se tratan los espacios para obtener detalles de los modos v&amp;aacute;lidos, ver &lt;code&gt;--color-moved-ws&lt;/code&gt; en &lt;a href=&quot;git-diff&quot;&gt;git-diff [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="52b8058d0bfbbff70a9ce60ad478453479b9a747" translate="yes" xml:space="preserve">
          <source>When multiple patches are output, the subject prefix will instead be &quot;[PATCH n/m] &quot;. To force 1/1 to be added for a single patch, use &lt;code&gt;-n&lt;/code&gt;. To omit patch numbers from the subject, use &lt;code&gt;-N&lt;/code&gt;.</source>
          <target state="translated">Cuando se env&amp;iacute;an varios patches, el prefijo del sujeto ser&amp;aacute; &quot;[PATCH n / m]&quot;. Para forzar que se agregue 1/1 para un solo parche, use &lt;code&gt;-n&lt;/code&gt; . Para omitir los n&amp;uacute;meros de parche del tema, use &lt;code&gt;-N&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f1cdd3c7b73eb4476790691d3f8180aaaecc09ec" translate="yes" xml:space="preserve">
          <source>When multiple working trees are used, most of files in $GIT_DIR are per-worktree with a few known exceptions. All files under &lt;code&gt;common&lt;/code&gt; however will be shared between all working trees.</source>
          <target state="translated">Cuando se utilizan varios &amp;aacute;rboles de trabajo, la mayor&amp;iacute;a de los archivos en $ GIT_DIR son por &amp;aacute;rbol de trabajo con algunas excepciones conocidas. Sin embargo, todos los archivos en &lt;code&gt;common&lt;/code&gt; se compartir&amp;aacute;n entre todos los &amp;aacute;rboles de trabajo.</target>
        </trans-unit>
        <trans-unit id="dea6d60865820d20f017799a5c24231f89c30494" translate="yes" xml:space="preserve">
          <source>When neither the command-line nor the configuration specify what to push, the default behavior is used, which corresponds to the &lt;code&gt;simple&lt;/code&gt; value for &lt;code&gt;push.default&lt;/code&gt;: the current branch is pushed to the corresponding upstream branch, but as a safety measure, the push is aborted if the upstream branch does not have the same name as the local one.</source>
          <target state="translated">Cuando ni la l&amp;iacute;nea de comandos ni la configuraci&amp;oacute;n especifican qu&amp;eacute; empujar, se utiliza el comportamiento predeterminado, que corresponde al valor &lt;code&gt;simple&lt;/code&gt; de &lt;code&gt;push.default&lt;/code&gt; : la rama actual se empuja a la rama ascendente correspondiente, pero como medida de seguridad, la se cancela si la rama ascendente no tiene el mismo nombre que la local.</target>
        </trans-unit>
        <trans-unit id="60de604c8e6be170ca14a17caf3d8c66cf8e4c1f" translate="yes" xml:space="preserve">
          <source>When no &lt;code&gt;&amp;lt;stash&amp;gt;&lt;/code&gt; is given, &lt;code&gt;stash@{0}&lt;/code&gt; is assumed, otherwise &lt;code&gt;&amp;lt;stash&amp;gt;&lt;/code&gt; must be a reference of the form &lt;code&gt;stash@{&amp;lt;revision&amp;gt;}&lt;/code&gt;.</source>
          <target state="translated">Cuando no se proporciona &lt;code&gt;&amp;lt;stash&amp;gt;&lt;/code&gt; , se asume &lt;code&gt;stash@{0}&lt;/code&gt; ; de lo contrario, &lt;code&gt;&amp;lt;stash&amp;gt;&lt;/code&gt; debe ser una referencia de la forma &lt;code&gt;stash@{&amp;lt;revision&amp;gt;}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1cb728a038f1c7e17113ec68844d5bac04accdd7" translate="yes" xml:space="preserve">
          <source>When no &lt;code&gt;--push-option=&amp;lt;option&amp;gt;&lt;/code&gt; argument is given from the command line, &lt;code&gt;git push&lt;/code&gt; behaves as if each &amp;lt;value&amp;gt; of this variable is given as &lt;code&gt;--push-option=&amp;lt;value&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">Cuando no se &lt;code&gt;--push-option=&amp;lt;option&amp;gt;&lt;/code&gt; ning&amp;uacute;n argumento --push-option = &amp;lt;option&amp;gt; desde la l&amp;iacute;nea de comando, &lt;code&gt;git push&lt;/code&gt; se comporta como si cada &amp;lt;valor&amp;gt; de esta variable se diera como &lt;code&gt;--push-option=&amp;lt;value&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a166fc08fc71ee0e3d700a37b70f8845fb53d565" translate="yes" xml:space="preserve">
          <source>When no &lt;code&gt;--whitespace&lt;/code&gt; flag is given from the command line, this configuration item is used as the default.</source>
          <target state="translated">Cuando no se &lt;code&gt;--whitespace&lt;/code&gt; una marca de espacio en blanco desde la l&amp;iacute;nea de comando, este elemento de configuraci&amp;oacute;n se usa como predeterminado.</target>
        </trans-unit>
        <trans-unit id="b29755631cf67968424c24b41012b3c14a5bc20f" translate="yes" xml:space="preserve">
          <source>When no refspec was given on the command line, then &lt;code&gt;git pull&lt;/code&gt; uses the refspec from the configuration or &lt;code&gt;$GIT_DIR/remotes/&amp;lt;origin&amp;gt;&lt;/code&gt;. In such cases, the following rules apply:</source>
          <target state="translated">Cuando no se proporcion&amp;oacute; refspec en la l&amp;iacute;nea de comando, &lt;code&gt;git pull&lt;/code&gt; usa refspec de la configuraci&amp;oacute;n o &lt;code&gt;$GIT_DIR/remotes/&amp;lt;origin&amp;gt;&lt;/code&gt; . En tales casos, se aplican las siguientes reglas:</target>
        </trans-unit>
        <trans-unit id="feee7e6efffd7b04e5558aa779c91bc6a7b795bd" translate="yes" xml:space="preserve">
          <source>When no remote is specified (via -r) the &lt;code&gt;HEAD&lt;/code&gt; branch from CVS is imported to the &lt;code&gt;origin&lt;/code&gt; branch within the Git repository, as &lt;code&gt;HEAD&lt;/code&gt; already has a special meaning for Git. When a remote is specified the &lt;code&gt;HEAD&lt;/code&gt; branch is named remotes/&amp;lt;remote&amp;gt;/master mirroring &lt;code&gt;git clone&lt;/code&gt; behaviour. Use this option if you want to import into a different branch.</source>
          <target state="translated">Cuando no se especifica ning&amp;uacute;n control remoto (a trav&amp;eacute;s de -r), la rama &lt;code&gt;HEAD&lt;/code&gt; de CVS se importa a la rama de &lt;code&gt;origin&lt;/code&gt; dentro del repositorio de Git, ya que &lt;code&gt;HEAD&lt;/code&gt; ya tiene un significado especial para Git. Cuando se especifica un control remoto, la rama &lt;code&gt;HEAD&lt;/code&gt; se denomina remotes / &amp;lt;remote&amp;gt; / master mirroring &lt;code&gt;git clone&lt;/code&gt; behavior. Utilice esta opci&amp;oacute;n si desea importar a una rama diferente.</target>
        </trans-unit>
        <trans-unit id="ac03f302c1aadb048fb52d65d000d2a5006af96e" translate="yes" xml:space="preserve">
          <source>When no remote is specified, by default the &lt;code&gt;origin&lt;/code&gt; remote will be used, unless there&amp;rsquo;s an upstream branch configured for the current branch.</source>
          <target state="translated">Cuando no se especifica ning&amp;uacute;n control remoto, de forma predeterminada se utilizar&amp;aacute; el control remoto de &lt;code&gt;origin&lt;/code&gt; , a menos que haya una rama ascendente configurada para la rama actual.</target>
        </trans-unit>
        <trans-unit id="d52e3dbbfef371828cf1a5d65a8a3d7860fbbc07" translate="yes" xml:space="preserve">
          <source>When on branch &amp;lt;name&amp;gt;, it overrides &lt;code&gt;branch.&amp;lt;name&amp;gt;.remote&lt;/code&gt; for pushing. It also overrides &lt;code&gt;remote.pushDefault&lt;/code&gt; for pushing from branch &amp;lt;name&amp;gt;. When you pull from one place (e.g. your upstream) and push to another place (e.g. your own publishing repository), you would want to set &lt;code&gt;remote.pushDefault&lt;/code&gt; to specify the remote to push to for all branches, and use this option to override it for a specific branch.</source>
          <target state="translated">Cuando est&amp;aacute; en la rama &amp;lt;nombre&amp;gt;, anula la &lt;code&gt;branch.&amp;lt;name&amp;gt;.remote&lt;/code&gt; para empujar. Tambi&amp;eacute;n anula &lt;code&gt;remote.pushDefault&lt;/code&gt; para enviar desde la rama &amp;lt;nombre&amp;gt;. Cuando extrae de un lugar (por ejemplo, su flujo ascendente) y empuja a otro lugar (por ejemplo, su propio repositorio de publicaci&amp;oacute;n), querr&amp;aacute; establecer &lt;code&gt;remote.pushDefault&lt;/code&gt; para especificar el control remoto al que enviar para todas las ramas, y use esta opci&amp;oacute;n para anularlo para una rama espec&amp;iacute;fica.</target>
        </trans-unit>
        <trans-unit id="2c5d62eaf7dc4c0abb09284bfc14bacce3f382aa" translate="yes" xml:space="preserve">
          <source>When on branch &amp;lt;name&amp;gt;, it tells &lt;code&gt;git fetch&lt;/code&gt; and &lt;code&gt;git push&lt;/code&gt; which remote to fetch from/push to. The remote to push to may be overridden with &lt;code&gt;remote.pushDefault&lt;/code&gt; (for all branches). The remote to push to, for the current branch, may be further overridden by &lt;code&gt;branch.&amp;lt;name&amp;gt;.pushRemote&lt;/code&gt;. If no remote is configured, or if you are not on any branch, it defaults to &lt;code&gt;origin&lt;/code&gt; for fetching and &lt;code&gt;remote.pushDefault&lt;/code&gt; for pushing. Additionally, &lt;code&gt;.&lt;/code&gt; (a period) is the current local repository (a dot-repository), see &lt;code&gt;branch.&amp;lt;name&amp;gt;.merge&lt;/code&gt;'s final note below.</source>
          <target state="translated">Cuando est&amp;aacute; en la rama &amp;lt;nombre&amp;gt;, le dice a &lt;code&gt;git fetch&lt;/code&gt; y &lt;code&gt;git push&lt;/code&gt; desde qu&amp;eacute; control remoto buscar / empujar. El control remoto al que empujar se puede anular con &lt;code&gt;remote.pushDefault&lt;/code&gt; (para todas las ramas). El control remoto al que empujar, para la rama actual, puede ser anulado a&amp;uacute;n m&amp;aacute;s por &lt;code&gt;branch.&amp;lt;name&amp;gt;.pushRemote&lt;/code&gt; . Si no se configura ning&amp;uacute;n control remoto, o si no se encuentra en ninguna rama, el valor predeterminado es el &lt;code&gt;origin&lt;/code&gt; para buscar y el &lt;code&gt;remote.pushDefault&lt;/code&gt; para enviar . Adem&amp;aacute;s, &lt;code&gt;.&lt;/code&gt; (un punto) es el repositorio local actual (un repositorio de puntos), consulte la nota final de la &lt;code&gt;branch.&amp;lt;name&amp;gt;.merge&lt;/code&gt; continuaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="99875f2b6ac5843dc20c0934eb9cdf10f7711c8e" translate="yes" xml:space="preserve">
          <source>When one of these flags is specified, the object name recorded for the paths are not updated. Instead, these options set and unset the &quot;fsmonitor valid&quot; bit for the paths. See section &quot;File System Monitor&quot; below for more information.</source>
          <target state="translated">Cuando se especifica una de estas banderas,los nombres de los objetos registrados para las rutas no se actualizan.En su lugar,estas opciones establecen y desestablecen el bit &quot;fsmonitor válido&quot; para las rutas.Véase la sección &quot;Monitor del sistema de archivos&quot; más abajo para más información.</target>
        </trans-unit>
        <trans-unit id="095b3a1631077463d64190b5c04e9903f37eec26" translate="yes" xml:space="preserve">
          <source>When one of these flags is specified, the object name recorded for the paths are not updated. Instead, these options set and unset the &quot;skip-worktree&quot; bit for the paths. See section &quot;Skip-worktree bit&quot; below for more information.</source>
          <target state="translated">Cuando se especifica una de estas banderas,los nombres de los objetos registrados para las rutas no se actualizan.En su lugar,estas opciones establecen y desestablecen el bit &quot;skip-worktree&quot; para las rutas.Véase la sección &quot;Skip-worktree bit&quot; más abajo para más información.</target>
        </trans-unit>
        <trans-unit id="6e8f4e10b13b6ff83d83df5063d58c36d64a87b8" translate="yes" xml:space="preserve">
          <source>When one or more &lt;code&gt;&amp;lt;ref&amp;gt;&lt;/code&gt; are specified explicitly (whether on the command line or via &lt;code&gt;--stdin&lt;/code&gt;), it can be either a single pattern, or a pair of such pattern separated by a colon &quot;:&quot; (this means that a ref name cannot have a colon in it). A single pattern &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; is just a shorthand for &lt;code&gt;&amp;lt;name&amp;gt;:&amp;lt;name&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">Cuando uno o m&amp;aacute;s &lt;code&gt;&amp;lt;ref&amp;gt;&lt;/code&gt; se especifican expl&amp;iacute;citamente (ya sea en la l&amp;iacute;nea de comando o mediante &lt;code&gt;--stdin&lt;/code&gt; ), puede ser un patr&amp;oacute;n &amp;uacute;nico o un par de dichos patrones separados por dos puntos &quot;:&quot; (esto significa que una referencia el nombre no puede tener dos puntos). Un solo patr&amp;oacute;n &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; es solo una abreviatura de &lt;code&gt;&amp;lt;name&amp;gt;:&amp;lt;name&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9a9b16c534806b7638cc46892a28dd173752ed8c" translate="yes" xml:space="preserve">
          <source>When packing a blob fast-import always attempts to deltify against the last blob written. Unless specifically arranged for by the frontend, this will probably not be a prior version of the same file, so the generated delta will not be the smallest possible. The resulting packfile will be compressed, but will not be optimal.</source>
          <target state="translated">Al empacar una mancha,la importación rápida siempre intenta delinearse con la última mancha escrita.A menos que el frontend lo disponga específicamente,probablemente no sea una versión anterior del mismo archivo,por lo que el delta generado no será el más pequeño posible.El archivo de paquete resultante estará comprimido,pero no será óptimo.</target>
        </trans-unit>
        <trans-unit id="76e4bf1d99930055a44aa05818b2c065730f60bb" translate="yes" xml:space="preserve">
          <source>When passed to &lt;code&gt;init&lt;/code&gt; or &lt;code&gt;clone&lt;/code&gt; this regular expression will be preserved as a config key. See &lt;code&gt;fetch&lt;/code&gt; for a description of &lt;code&gt;--ignore-paths&lt;/code&gt;.</source>
          <target state="translated">Cuando se pasa a &lt;code&gt;init&lt;/code&gt; o &lt;code&gt;clone&lt;/code&gt; , esta expresi&amp;oacute;n regular se conservar&amp;aacute; como clave de configuraci&amp;oacute;n. Consulte &lt;code&gt;fetch&lt;/code&gt; para obtener una descripci&amp;oacute;n de &lt;code&gt;--ignore-paths&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d6a3308486ea0114e28423fc585e726bdfefa0d3" translate="yes" xml:space="preserve">
          <source>When passed to &lt;code&gt;init&lt;/code&gt; or &lt;code&gt;clone&lt;/code&gt; this regular expression will be preserved as a config key. See &lt;code&gt;fetch&lt;/code&gt; for a description of &lt;code&gt;--ignore-refs&lt;/code&gt;.</source>
          <target state="translated">Cuando se pasa a &lt;code&gt;init&lt;/code&gt; o &lt;code&gt;clone&lt;/code&gt; , esta expresi&amp;oacute;n regular se conservar&amp;aacute; como clave de configuraci&amp;oacute;n. Consulte &lt;code&gt;fetch&lt;/code&gt; para obtener una descripci&amp;oacute;n de &lt;code&gt;--ignore-refs&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="247954c989ece2f916f72b869f8bb1eb7f01f09e" translate="yes" xml:space="preserve">
          <source>When passed to &lt;code&gt;init&lt;/code&gt; or &lt;code&gt;clone&lt;/code&gt; this regular expression will be preserved as a config key. See &lt;code&gt;fetch&lt;/code&gt; for a description of &lt;code&gt;--include-paths&lt;/code&gt;.</source>
          <target state="translated">Cuando se pasa a &lt;code&gt;init&lt;/code&gt; o &lt;code&gt;clone&lt;/code&gt; , esta expresi&amp;oacute;n regular se conservar&amp;aacute; como clave de configuraci&amp;oacute;n. Consulte &lt;code&gt;fetch&lt;/code&gt; para obtener una descripci&amp;oacute;n de &lt;code&gt;--include-paths&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="701b3c119f368819101d8af88b842359e5cb7ac8" translate="yes" xml:space="preserve">
          <source>When paths are given, show them (note that this isn&amp;rsquo;t really raw pathnames, but rather a list of patterns to match). Otherwise implicitly uses the root level of the tree as the sole path argument.</source>
          <target state="translated">Cuando se proporcionen rutas, mu&amp;eacute;strelas (tenga en cuenta que esto no es realmente nombres de ruta sin procesar, sino m&amp;aacute;s bien una lista de patrones que deben coincidir). De lo contrario, utiliza impl&amp;iacute;citamente el nivel de ra&amp;iacute;z del &amp;aacute;rbol como &amp;uacute;nico argumento de ruta.</target>
        </trans-unit>
        <trans-unit id="a12bc3537fe67daac72917848a655d5078c91711" translate="yes" xml:space="preserve">
          <source>When pathspec is given on the command line, commit the contents of the files that match the pathspec without recording the changes already added to the index. The contents of these files are also staged for the next commit on top of what have been staged before.</source>
          <target state="translated">Cuando se da pathspec en la línea de comandos,confirme el contenido de los archivos que coinciden con el pathspec sin grabar los cambios ya añadidos al índice.El contenido de estos archivos también se pone en escena para la siguiente confirmación,además de lo que se ha puesto en escena anteriormente.</target>
        </trans-unit>
        <trans-unit id="1a6dc462ca36ebe8779cf750259e000c162a076a" translate="yes" xml:space="preserve">
          <source>When pathspec is given to &lt;code&gt;git stash push&lt;/code&gt;, the new stash entry records the modified states only for the files that match the pathspec. The index entries and working tree files are then rolled back to the state in HEAD only for these files, too, leaving files that do not match the pathspec intact.</source>
          <target state="translated">Cuando se le da pathpec a &lt;code&gt;git stash push&lt;/code&gt; , la nueva entrada stash registra los estados modificados solo para los archivos que coinciden con la pathpec. Las entradas de &amp;iacute;ndice y los archivos del &amp;aacute;rbol de trabajo tambi&amp;eacute;n se revierten al estado en HEAD solo para estos archivos, dejando intactos los archivos que no coinciden con la especificaci&amp;oacute;n de ruta.</target>
        </trans-unit>
        <trans-unit id="20284d20320c7f9cdd342728ed75cf98e12a1b6c" translate="yes" xml:space="preserve">
          <source>When possible, &lt;code&gt;pack-objects&lt;/code&gt; tries to reuse existing on-disk deltas to avoid having to search for new ones on the fly. This is an important optimization for serving fetches, because it means the server can avoid inflating most objects at all and just send the bytes directly from disk. This optimization can&amp;rsquo;t work when an object is stored as a delta against a base which the receiver does not have (and which we are not already sending). In that case the server &quot;breaks&quot; the delta and has to find a new one, which has a high CPU cost. Therefore it&amp;rsquo;s important for performance that the set of objects in on-disk delta relationships match what a client would fetch.</source>
          <target state="translated">Cuando es posible, &lt;code&gt;pack-objects&lt;/code&gt; intenta reutilizar los deltas existentes en el disco para evitar tener que buscar nuevos sobre la marcha. Esta es una optimizaci&amp;oacute;n importante para el servicio de recuperaciones, porque significa que el servidor puede evitar inflar la mayor&amp;iacute;a de los objetos y simplemente enviar los bytes directamente desde el disco. Esta optimizaci&amp;oacute;n no puede funcionar cuando un objeto se almacena como un delta contra una base que el receptor no tiene (y que a&amp;uacute;n no estamos enviando). En ese caso, el servidor &quot;rompe&quot; el delta y tiene que encontrar uno nuevo, que tiene un alto costo de CPU. Por lo tanto, es importante para el rendimiento que el conjunto de objetos en las relaciones delta en el disco coincida con lo que buscar&amp;iacute;a un cliente.</target>
        </trans-unit>
        <trans-unit id="a5d1e2c9c76493f4d0a607592b15388eabc93e4e" translate="yes" xml:space="preserve">
          <source>When present, it will also copy the value of &lt;code&gt;submodule.$name.update&lt;/code&gt;. This command does not alter existing information in .git/config. You can then customize the submodule clone URLs in .git/config for your local setup and proceed to &lt;code&gt;git submodule update&lt;/code&gt;; you can also just use &lt;code&gt;git submodule update --init&lt;/code&gt; without the explicit &lt;code&gt;init&lt;/code&gt; step if you do not intend to customize any submodule locations.</source>
          <target state="translated">Cuando est&amp;eacute; presente, tambi&amp;eacute;n copiar&amp;aacute; el valor del &lt;code&gt;submodule.$name.update&lt;/code&gt; . Este comando no altera la informaci&amp;oacute;n existente en .git / config. Luego, puede personalizar las URL de clonaci&amp;oacute;n del subm&amp;oacute;dulo en .git / config para su configuraci&amp;oacute;n local y proceder a la &lt;code&gt;git submodule update&lt;/code&gt; ; tambi&amp;eacute;n puede usar &lt;code&gt;git submodule update --init&lt;/code&gt; sin el paso de &lt;code&gt;init&lt;/code&gt; expl&amp;iacute;cito si no tiene la intenci&amp;oacute;n de personalizar ninguna ubicaci&amp;oacute;n de subm&amp;oacute;dulo.</target>
        </trans-unit>
        <trans-unit id="fb5aacfd35a68a879acea2ba6edf150f79c935f9" translate="yes" xml:space="preserve">
          <source>When pushing to a remote that is different from the remote you normally pull from, work as &lt;code&gt;current&lt;/code&gt;. This is the safest option and is suited for beginners.</source>
          <target state="translated">Al presionar a un control remoto que es diferente del control remoto del que normalmente extrae, trabaje como &lt;code&gt;current&lt;/code&gt; . Esta es la opci&amp;oacute;n m&amp;aacute;s segura y adecuada para principiantes.</target>
        </trans-unit>
        <trans-unit id="f99e4f9643f5e033d51557f2aab4b69c000e9e23" translate="yes" xml:space="preserve">
          <source>When pushing, request the remote server to update refs in a single atomic transaction. If successful, all refs will be updated, or none will. If the remote side does not support this capability, the push will fail.</source>
          <target state="translated">Al empujar,solicite al servidor remoto que actualice los refs en una sola transacción atómica.Si tiene éxito,todos los árbitros se actualizarán,o ninguno lo hará.Si el lado remoto no soporta esta capacidad,el empuje fallará.</target>
        </trans-unit>
        <trans-unit id="24e8d08f5bcd393fd98db303b5bfff38ae149335" translate="yes" xml:space="preserve">
          <source>When reading the &lt;code&gt;core.repositoryformatversion&lt;/code&gt; variable, a git implementation which supports version 1 MUST also read any configuration keys found in the &lt;code&gt;extensions&lt;/code&gt; section of the configuration file.</source>
          <target state="translated">Al leer la variable &lt;code&gt;core.repositoryformatversion&lt;/code&gt; , una implementaci&amp;oacute;n de git que admita la versi&amp;oacute;n 1 DEBE tambi&amp;eacute;n leer las claves de configuraci&amp;oacute;n que se encuentran en la secci&amp;oacute;n de &lt;code&gt;extensions&lt;/code&gt; del archivo de configuraci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="d49438aa2f88cdc57a3b7001a0406b8491bbad55" translate="yes" xml:space="preserve">
          <source>When reading trailers, there can be whitespaces after the token, the separator and the value. There can also be whitespaces inside the token and the value. The value may be split over multiple lines with each subsequent line starting with whitespace, like the &quot;folding&quot; in RFC 822.</source>
          <target state="translated">Al leer los trailers,puede haber espacios en blanco después de la ficha,el separador y el valor.También puede haber espacios en blanco dentro de la ficha y el valor.El valor puede dividirse en varias líneas,y cada línea subsiguiente puede empezar con un espacio en blanco,como el &quot;plegado&quot; en RFC 822.</target>
        </trans-unit>
        <trans-unit id="c808cfa1e01223bf6f90ceb1edbec20a1b9b3321" translate="yes" xml:space="preserve">
          <source>When reading, the values are read from the system, global and repository local configuration files by default, and options &lt;code&gt;--system&lt;/code&gt;, &lt;code&gt;--global&lt;/code&gt;, &lt;code&gt;--local&lt;/code&gt;, &lt;code&gt;--worktree&lt;/code&gt; and &lt;code&gt;--file &amp;lt;filename&amp;gt;&lt;/code&gt; can be used to tell the command to read from only that location (see &lt;a href=&quot;#FILES&quot;&gt;FILES&lt;/a&gt;).</source>
          <target state="translated">Al leer, los valores se leen desde los archivos de configuraci&amp;oacute;n del sistema, global y local del repositorio de forma predeterminada, y las opciones &lt;code&gt;--system&lt;/code&gt; , &lt;code&gt;--global&lt;/code&gt; , &lt;code&gt;--local&lt;/code&gt; , &lt;code&gt;--worktree&lt;/code&gt; y &lt;code&gt;--file &amp;lt;filename&amp;gt;&lt;/code&gt; se pueden usar para indicarle al comando para leer solo desde esa ubicaci&amp;oacute;n (ver &lt;a href=&quot;#FILES&quot;&gt;ARCHIVOS&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="35058e27fd0502a5cbd6b1225fdbfa49a5b7004d" translate="yes" xml:space="preserve">
          <source>When recording the commit, append a line that says &quot;(cherry picked from commit &amp;hellip;​)&quot; to the original commit message in order to indicate which commit this change was cherry-picked from. This is done only for cherry picks without conflicts. Do not use this option if you are cherry-picking from your private branch because the information is useless to the recipient. If on the other hand you are cherry-picking between two publicly visible branches (e.g. backporting a fix to a maintenance branch for an older release from a development branch), adding this information can be useful.</source>
          <target state="translated">Al grabar la confirmaci&amp;oacute;n, agregue una l&amp;iacute;nea que diga &quot;(seleccionado de la confirmaci&amp;oacute;n ...)&quot; al mensaje de confirmaci&amp;oacute;n original para indicar de qu&amp;eacute; confirmaci&amp;oacute;n se seleccion&amp;oacute; este cambio. Esto se hace solo para selecciones de cereza sin conflictos. No use esta opci&amp;oacute;n si est&amp;aacute; seleccionando cuidadosamente en su sucursal privada porque la informaci&amp;oacute;n es in&amp;uacute;til para el destinatario. Si, por otro lado, est&amp;aacute; eligiendo entre dos ramas visibles p&amp;uacute;blicamente (por ejemplo, exportando una soluci&amp;oacute;n a una rama de mantenimiento para una versi&amp;oacute;n anterior de una rama de desarrollo), agregar esta informaci&amp;oacute;n puede ser &amp;uacute;til.</target>
        </trans-unit>
        <trans-unit id="ccaf8e1c6e304870dc79f0b6ba9e209459375c19" translate="yes" xml:space="preserve">
          <source>When recording your own work, the contents of modified files in your working tree are temporarily stored to a staging area called the &quot;index&quot; with &lt;code&gt;git add&lt;/code&gt;. A file can be reverted back, only in the index but not in the working tree, to that of the last commit with &lt;code&gt;git restore --staged &amp;lt;file&amp;gt;&lt;/code&gt;, which effectively reverts &lt;code&gt;git add&lt;/code&gt; and prevents the changes to this file from participating in the next commit. After building the state to be committed incrementally with these commands, &lt;code&gt;git commit&lt;/code&gt; (without any pathname parameter) is used to record what has been staged so far. This is the most basic form of the command. An example:</source>
          <target state="translated">Al grabar su propio trabajo, el contenido de los archivos modificados en su &amp;aacute;rbol de trabajo se almacena temporalmente en un &amp;aacute;rea de preparaci&amp;oacute;n llamada &quot;&amp;iacute;ndice&quot; con &lt;code&gt;git add&lt;/code&gt; . Un archivo se puede revertir, solo en el &amp;iacute;ndice pero no en el &amp;aacute;rbol de trabajo, al de la &amp;uacute;ltima confirmaci&amp;oacute;n con &lt;code&gt;git restore --staged &amp;lt;file&amp;gt;&lt;/code&gt; , que efectivamente revierte &lt;code&gt;git add&lt;/code&gt; y evita que los cambios en este archivo participen en el siguiente compromiso. Despu&amp;eacute;s de construir el estado para que se confirme de forma incremental con estos comandos, se usa &lt;code&gt;git commit&lt;/code&gt; (sin ning&amp;uacute;n par&amp;aacute;metro de nombre de ruta) para registrar lo que se ha realizado hasta ahora. &amp;Eacute;sta es la forma m&amp;aacute;s b&amp;aacute;sica del comando. Un ejemplo:</target>
        </trans-unit>
        <trans-unit id="35cd60207a202ee3a283a2d8b2047b148806b6b3" translate="yes" xml:space="preserve">
          <source>When remote and local branch are both named &quot;test&quot;:</source>
          <target state="translated">Cuando la sucursal remota y la local se denominan ambas &quot;prueba&quot;:</target>
        </trans-unit>
        <trans-unit id="2eefb86cce90a60f5ab07db6487aa99da3ba4333" translate="yes" xml:space="preserve">
          <source>When rename/copy is involved, &lt;code&gt;file1&lt;/code&gt; and &lt;code&gt;file2&lt;/code&gt; show the name of the source file of the rename/copy and the name of the file that rename/copy produces, respectively.</source>
          <target state="translated">Cuando se trata de cambio de nombre / copia, &lt;code&gt;file1&lt;/code&gt; y &lt;code&gt;file2&lt;/code&gt; muestran el nombre del archivo de origen del cambio de nombre / copia y el nombre del archivo que produce el cambio de nombre / copia, respectivamente.</target>
        </trans-unit>
        <trans-unit id="3475b12f6b8e32c3a9c4f496f5f906d95460d63d" translate="yes" xml:space="preserve">
          <source>When repacking with delta islands the delta window tends to get clogged with candidates that are forbidden by the config. Repacking with a big --window helps (and doesn&amp;rsquo;t take as long as it otherwise might because we can reject some object pairs based on islands before doing any computation on the content).</source>
          <target state="translated">Cuando se vuelve a empaquetar con islas delta, la ventana delta tiende a obstruirse con candidatos que est&amp;aacute;n prohibidos por la configuraci&amp;oacute;n. El reempaquetado con una ventana grande ayuda (y no toma tanto tiempo como lo har&amp;iacute;a porque podemos rechazar algunos pares de objetos basados ​​en islas antes de hacer cualquier c&amp;aacute;lculo sobre el contenido).</target>
        </trans-unit>
        <trans-unit id="9f9b14ed67913870e54606a7e4140c245c13e689" translate="yes" xml:space="preserve">
          <source>When restoring files in the working tree from the index, use stage #2 (&lt;code&gt;ours&lt;/code&gt;) or #3 (&lt;code&gt;theirs&lt;/code&gt;) for unmerged paths.</source>
          <target state="translated">Cuando restaure archivos en el &amp;aacute;rbol de trabajo desde el &amp;iacute;ndice, use la etapa # 2 (la &lt;code&gt;ours&lt;/code&gt; ) o la # 3 (la de &lt;code&gt;theirs&lt;/code&gt; ) para las rutas no fusionadas.</target>
        </trans-unit>
        <trans-unit id="f350add778942f50c4b0b2f8798762ec9d6fc205" translate="yes" xml:space="preserve">
          <source>When restoring files on the working tree from the index, do not abort the operation if there are unmerged entries and neither &lt;code&gt;--ours&lt;/code&gt;, &lt;code&gt;--theirs&lt;/code&gt;, &lt;code&gt;--merge&lt;/code&gt; or &lt;code&gt;--conflict&lt;/code&gt; is specified. Unmerged paths on the working tree are left alone.</source>
          <target state="translated">Al restaurar archivos en el &amp;aacute;rbol de trabajo desde el &amp;iacute;ndice, no cancele la operaci&amp;oacute;n si hay entradas no &lt;code&gt;--ours&lt;/code&gt; y no se especifica --nuestros , &lt;code&gt;--theirs&lt;/code&gt; , &lt;code&gt;--merge&lt;/code&gt; o &lt;code&gt;--conflict&lt;/code&gt; . Los caminos no fusionados en el &amp;aacute;rbol de trabajo se quedan solos.</target>
        </trans-unit>
        <trans-unit id="84ac309392e16a1f3dcc1a792805de1c5dea7161" translate="yes" xml:space="preserve">
          <source>When restoring files on the working tree from the index, recreate the conflicted merge in the unmerged paths.</source>
          <target state="translated">Al restaurar los archivos en el árbol de trabajo desde el índice,recrear la fusión conflictiva en los caminos no fusionados.</target>
        </trans-unit>
        <trans-unit id="273a9228c51e5936f4d142f339102a2bbdd8c3b8" translate="yes" xml:space="preserve">
          <source>When retrieving svn commits into Git (as part of &lt;code&gt;fetch&lt;/code&gt;, &lt;code&gt;rebase&lt;/code&gt;, or &lt;code&gt;dcommit&lt;/code&gt; operations), look for the first &lt;code&gt;From:&lt;/code&gt; or &lt;code&gt;Signed-off-by:&lt;/code&gt; line in the log message and use that as the author string.</source>
          <target state="translated">Al recuperar las confirmaciones de svn en Git (como parte de las operaciones &lt;code&gt;fetch&lt;/code&gt; , &lt;code&gt;rebase&lt;/code&gt; o &lt;code&gt;dcommit&lt;/code&gt; ), busque la primera l&amp;iacute;nea &lt;code&gt;From:&lt;/code&gt; o &lt;code&gt;Signed-off-by:&lt;/code&gt; en el mensaje de registro y util&amp;iacute;cela como cadena de autor.</target>
        </trans-unit>
        <trans-unit id="78d119701beb340fc1dce20129de3c1bebaf8055" translate="yes" xml:space="preserve">
          <source>When revision range specifiers are used to limit the annotation, lines that have not changed since the range boundary (either the commit v2.6.18 or the most recent commit that is more than 3 weeks old in the above example) are blamed for that range boundary commit.</source>
          <target state="translated">Cuando se utilizan especificadores de rango de revisión para limitar la anotación,las líneas que no han cambiado desde el límite del rango (ya sea la confirmación v2.6.18 o la más reciente que tiene más de 3 semanas de antigüedad en el ejemplo anterior)son culpadas por esa confirmación de límite de rango.</target>
        </trans-unit>
        <trans-unit id="802f2e7848870b44ce9f04fb441477cd05447e6c" translate="yes" xml:space="preserve">
          <source>When rewriting commits with &amp;lt;command&amp;gt; (currently &lt;code&gt;amend&lt;/code&gt; or &lt;code&gt;rebase&lt;/code&gt;) and this variable is set to &lt;code&gt;true&lt;/code&gt;, Git automatically copies your notes from the original to the rewritten commit. Defaults to &lt;code&gt;true&lt;/code&gt;, but see &quot;notes.rewriteRef&quot; below.</source>
          <target state="translated">Al reescribir confirmaciones con &amp;lt;comando&amp;gt; (actualmente &lt;code&gt;amend&lt;/code&gt; o &lt;code&gt;rebase&lt;/code&gt; ) y esta variable se establece en &lt;code&gt;true&lt;/code&gt; , Git copia autom&amp;aacute;ticamente sus notas del original a la confirmaci&amp;oacute;n reescrita. El valor predeterminado es &lt;code&gt;true&lt;/code&gt; , pero consulte &quot;notes.rewriteRef&quot; a continuaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="b9c5c034bfc575d885230ecf217359276486be76" translate="yes" xml:space="preserve">
          <source>When rewriting commits with &amp;lt;command&amp;gt; (currently &lt;code&gt;amend&lt;/code&gt; or &lt;code&gt;rebase&lt;/code&gt;), if this variable is &lt;code&gt;false&lt;/code&gt;, git will not copy notes from the original to the rewritten commit. Defaults to &lt;code&gt;true&lt;/code&gt;. See also &quot;&lt;code&gt;notes.rewriteRef&lt;/code&gt;&quot; below.</source>
          <target state="translated">Al reescribir confirmaciones con &amp;lt;command&amp;gt; (actualmente &lt;code&gt;amend&lt;/code&gt; o &lt;code&gt;rebase&lt;/code&gt; ), si esta variable es &lt;code&gt;false&lt;/code&gt; , git no copiar&amp;aacute; notas del original a la confirmaci&amp;oacute;n reescrita. Por defecto es &lt;code&gt;true&lt;/code&gt; . Consulte tambi&amp;eacute;n &quot; &lt;code&gt;notes.rewriteRef&lt;/code&gt; &quot; a continuaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="0528b909a801bc351dbefd46a3e339150f63bb9d" translate="yes" xml:space="preserve">
          <source>When rewriting commits, which notes to copy from the original to the rewritten commit. Must be a colon-delimited list of refs or globs.</source>
          <target state="translated">Cuando reescriba los compromisos,qué notas copiar del original al compromiso reescrito.Debe ser una lista delimitada por dos puntos de los árbitros o de los globs.</target>
        </trans-unit>
        <trans-unit id="777967b1b1cbeac1b786b4e659ef472d75c08474" translate="yes" xml:space="preserve">
          <source>When run from a subdirectory of the project, it can be told to exclude changes outside the directory and show pathnames relative to it with this option. When you are not in a subdirectory (e.g. in a bare repository), you can name which subdirectory to make the output relative to by giving a &amp;lt;path&amp;gt; as an argument.</source>
          <target state="translated">Cuando se ejecuta desde un subdirectorio del proyecto, se le puede decir que excluya los cambios fuera del directorio y muestre los nombres de ruta relacionados con &amp;eacute;l con esta opci&amp;oacute;n. Cuando no est&amp;aacute; en un subdirectorio (por ejemplo, en un repositorio simple), puede nombrar a qu&amp;eacute; subdirectorio hacer que la salida sea relativa dando un &amp;lt;path&amp;gt; como argumento.</target>
        </trans-unit>
        <trans-unit id="c27ca634a7183f46a280e82c3af06c829ca10b89" translate="yes" xml:space="preserve">
          <source>When run from a subdirectory, the command usually outputs paths relative to the current directory. This option forces paths to be output relative to the project top directory.</source>
          <target state="translated">Cuando se ejecuta desde un subdirectorio,el comando suele dar salida a rutas relativas al directorio actual.Esta opción obliga a que las rutas se muestren en relación con el directorio superior del proyecto.</target>
        </trans-unit>
        <trans-unit id="ed0ff11c4a5dd052209fd6d888b93db83b1003f1" translate="yes" xml:space="preserve">
          <source>When run in a directory that does not have &quot;.git&quot; repository directory, Git tries to find such a directory in the parent directories to find the top of the working tree, but by default it does not cross filesystem boundaries. This environment variable can be set to true to tell Git not to stop at filesystem boundaries. Like &lt;code&gt;GIT_CEILING_DIRECTORIES&lt;/code&gt;, this will not affect an explicit repository directory set via &lt;code&gt;GIT_DIR&lt;/code&gt; or on the command line.</source>
          <target state="translated">Cuando se ejecuta en un directorio que no tiene un directorio de repositorio &quot;.git&quot;, Git intenta encontrar dicho directorio en los directorios principales para encontrar la parte superior del &amp;aacute;rbol de trabajo, pero por defecto no cruza los l&amp;iacute;mites del sistema de archivos. Esta variable de entorno se puede establecer en true para decirle a Git que no se detenga en los l&amp;iacute;mites del sistema de archivos. Al igual que &lt;code&gt;GIT_CEILING_DIRECTORIES&lt;/code&gt; , esto no afectar&amp;aacute; a un directorio de repositorio expl&amp;iacute;cito establecido a trav&amp;eacute;s de &lt;code&gt;GIT_DIR&lt;/code&gt; o en la l&amp;iacute;nea de comando.</target>
        </trans-unit>
        <trans-unit id="9ce1b9e20fc14e8e8925879039b8daf3d52acd6a" translate="yes" xml:space="preserve">
          <source>When running the command with &lt;code&gt;-u&lt;/code&gt; and &lt;code&gt;-m&lt;/code&gt; options, the merge result may need to overwrite paths that are not tracked in the current branch. The command usually refuses to proceed with the merge to avoid losing such a path. However this safety valve sometimes gets in the way. For example, it often happens that the other branch added a file that used to be a generated file in your branch, and the safety valve triggers when you try to switch to that branch after you ran &lt;code&gt;make&lt;/code&gt; but before running &lt;code&gt;make clean&lt;/code&gt; to remove the generated file. This option tells the command to read per-directory exclude file (usually &lt;code&gt;.gitignore&lt;/code&gt;) and allows such an untracked but explicitly ignored file to be overwritten.</source>
          <target state="translated">Al ejecutar el comando con las opciones &lt;code&gt;-u&lt;/code&gt; y &lt;code&gt;-m&lt;/code&gt; , es posible que el resultado de la combinaci&amp;oacute;n deba sobrescribir las rutas que no se rastrean en la rama actual. El comando generalmente se niega a continuar con la fusi&amp;oacute;n para evitar perder esa ruta. Sin embargo, esta v&amp;aacute;lvula de seguridad a veces se interpone. Por ejemplo, a menudo sucede que la otra rama agreg&amp;oacute; un archivo que sol&amp;iacute;a ser un archivo generado en su rama, y ​​la v&amp;aacute;lvula de seguridad se activa cuando intenta cambiar a esa rama despu&amp;eacute;s de ejecutar &lt;code&gt;make&lt;/code&gt; pero antes de ejecutar &lt;code&gt;make clean&lt;/code&gt; para eliminar el generado expediente. Esta opci&amp;oacute;n le dice al comando que lea el archivo de exclusi&amp;oacute;n por directorio (generalmente &lt;code&gt;.gitignore&lt;/code&gt; ) y permite sobrescribir un archivo sin seguimiento pero expl&amp;iacute;citamente ignorado.</target>
        </trans-unit>
        <trans-unit id="df426fd8f20937aff52c156a03a07b3202618140" translate="yes" xml:space="preserve">
          <source>When sending a patch this way, most often you are sending your own patch, so in addition to the &quot;&lt;code&gt;From $SHA1 $magic_timestamp&lt;/code&gt;&quot; marker you should omit &lt;code&gt;From:&lt;/code&gt; and &lt;code&gt;Date:&lt;/code&gt; lines from the patch file. The patch title is likely to be different from the subject of the discussion the patch is in response to, so it is likely that you would want to keep the Subject: line, like the example above.</source>
          <target state="translated">Al enviar un parche de esta forma, la mayor&amp;iacute;a de las veces env&amp;iacute;a su propio parche, por lo que adem&amp;aacute;s del marcador &quot; &lt;code&gt;From $SHA1 $magic_timestamp&lt;/code&gt; &quot;, debe omitir las l&amp;iacute;neas &lt;code&gt;From:&lt;/code&gt; y &lt;code&gt;Date:&lt;/code&gt; del archivo del parche. Es probable que el t&amp;iacute;tulo del parche sea diferente del tema de la discusi&amp;oacute;n al que responde el parche, por lo que es probable que desee mantener la l&amp;iacute;nea Asunto:, como en el ejemplo anterior.</target>
        </trans-unit>
        <trans-unit id="85b26b0293721642a3d3ba409cae09a21a570f47" translate="yes" xml:space="preserve">
          <source>When set to &lt;code&gt;always&lt;/code&gt;, always highlight matches. When &lt;code&gt;false&lt;/code&gt; (or &lt;code&gt;never&lt;/code&gt;), never. When set to &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;auto&lt;/code&gt;, use color only when the output is written to the terminal. If unset, then the value of &lt;code&gt;color.ui&lt;/code&gt; is used (&lt;code&gt;auto&lt;/code&gt; by default).</source>
          <target state="translated">Cuando se establece en &lt;code&gt;always&lt;/code&gt; , siempre resalta las coincidencias. Cuando es &lt;code&gt;false&lt;/code&gt; (o &lt;code&gt;never&lt;/code&gt; ), nunca. Cuando se establece en &lt;code&gt;true&lt;/code&gt; o &lt;code&gt;auto&lt;/code&gt; m&amp;aacute;tico , use el color solo cuando la salida se escriba en el terminal. Si no est&amp;aacute; configurado, se utiliza el valor de &lt;code&gt;color.ui&lt;/code&gt; ( &lt;code&gt;auto&lt;/code&gt; m&amp;aacute;tico por defecto).</target>
        </trans-unit>
        <trans-unit id="dfd0a45591bf4cdb6d73f4e9b16cc039b04690be" translate="yes" xml:space="preserve">
          <source>When set to &lt;code&gt;always&lt;/code&gt;, always use colors for interactive prompts and displays (such as those used by &quot;git-add --interactive&quot; and &quot;git-clean --interactive&quot;). When false (or &lt;code&gt;never&lt;/code&gt;), never. When set to &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;auto&lt;/code&gt;, use colors only when the output is to the terminal. If unset, then the value of &lt;code&gt;color.ui&lt;/code&gt; is used (&lt;code&gt;auto&lt;/code&gt; by default).</source>
          <target state="translated">Cuando se establece en &lt;code&gt;always&lt;/code&gt; , siempre use colores para las indicaciones y pantallas interactivas (como las que usan &quot;git-add --interactive&quot; y &quot;git-clean --interactive&quot;). Cuando es falso (o &lt;code&gt;never&lt;/code&gt; ), nunca. Cuando se establece en &lt;code&gt;true&lt;/code&gt; o &lt;code&gt;auto&lt;/code&gt; m&amp;aacute;tico , use colores solo cuando la salida sea para el terminal. Si no est&amp;aacute; configurado, se utiliza el valor de &lt;code&gt;color.ui&lt;/code&gt; ( &lt;code&gt;auto&lt;/code&gt; m&amp;aacute;tico por defecto).</target>
        </trans-unit>
        <trans-unit id="9ba7d00c9f4d532d2b9486b8c87259ed84e278f3" translate="yes" xml:space="preserve">
          <source>When set to &lt;code&gt;change&lt;/code&gt;, tells &lt;code&gt;git apply&lt;/code&gt; to ignore changes in whitespace, in the same way as the &lt;code&gt;--ignore-space-change&lt;/code&gt; option. When set to one of: no, none, never, false tells &lt;code&gt;git apply&lt;/code&gt; to respect all whitespace differences. See &lt;a href=&quot;git-apply&quot;&gt;git-apply[1]&lt;/a&gt;.</source>
          <target state="translated">Cuando se configura para &lt;code&gt;change&lt;/code&gt; , le dice a &lt;code&gt;git apply&lt;/code&gt; que ignore los cambios en los espacios en blanco, de la misma manera que la opci&amp;oacute;n &lt;code&gt;--ignore-space-change&lt;/code&gt; . Cuando se establece en uno de: no, none, never, false le dice a &lt;code&gt;git apply&lt;/code&gt; para respetar todas las diferencias de espacios en blanco. Consulte &lt;a href=&quot;git-apply&quot;&gt;git-apply [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8d6e4c3c7b2c6d56efae11b1e0ed0dcb5ce2357b" translate="yes" xml:space="preserve">
          <source>When set to &lt;code&gt;merges&lt;/code&gt;, rebase using &lt;code&gt;git rebase --rebase-merges&lt;/code&gt; so that the local merge commits are included in the rebase (see &lt;a href=&quot;git-rebase&quot;&gt;git-rebase[1]&lt;/a&gt; for details).</source>
          <target state="translated">Cuando se establece en &lt;code&gt;merges&lt;/code&gt; , rebase usando &lt;code&gt;git rebase --rebase-merges&lt;/code&gt; para que las confirmaciones de fusi&amp;oacute;n locales se incluyan en la rebase (consulte &lt;a href=&quot;git-rebase&quot;&gt;git-rebase [1]&lt;/a&gt; para obtener m&amp;aacute;s detalles).</target>
        </trans-unit>
        <trans-unit id="3726def44fed6d7863a8f10abeef80361e6f2701" translate="yes" xml:space="preserve">
          <source>When set to &lt;code&gt;preserve&lt;/code&gt; (deprecated in favor of &lt;code&gt;merges&lt;/code&gt;), rebase with the &lt;code&gt;--preserve-merges&lt;/code&gt; option passed to &lt;code&gt;git rebase&lt;/code&gt; so that locally created merge commits will not be flattened.</source>
          <target state="translated">Cuando se establece en &lt;code&gt;preserve&lt;/code&gt; (en desuso a favor de las &lt;code&gt;merges&lt;/code&gt; ), se cambia la base con la opci&amp;oacute;n &lt;code&gt;--preserve-merges&lt;/code&gt; pasada a &lt;code&gt;git rebase&lt;/code&gt; para que las confirmaciones de fusi&amp;oacute;n creadas localmente no se aplanen.</target>
        </trans-unit>
        <trans-unit id="14ded32327ec4343589fd7082ddc1f7fdc8962f6" translate="yes" xml:space="preserve">
          <source>When set to true, &lt;code&gt;git reset&lt;/code&gt; will default to the &lt;code&gt;--quiet&lt;/code&gt; option.</source>
          <target state="translated">Cuando se establece en verdadero, &lt;code&gt;git reset&lt;/code&gt; tendr&amp;aacute; la opci&amp;oacute;n &lt;code&gt;--quiet&lt;/code&gt; de forma predeterminada .</target>
        </trans-unit>
        <trans-unit id="01f095efe30e9d32fee48e094d88f96d4eba1bad" translate="yes" xml:space="preserve">
          <source>When set to true, &lt;code&gt;git-rerere&lt;/code&gt; updates the index with the resulting contents after it cleanly resolves conflicts using previously recorded resolution. Defaults to false.</source>
          <target state="translated">Cuando se establece en verdadero, &lt;code&gt;git-rerere&lt;/code&gt; actualiza el &amp;iacute;ndice con el contenido resultante despu&amp;eacute;s de que resuelve limpiamente los conflictos utilizando la resoluci&amp;oacute;n previamente registrada. El valor predeterminado es falso.</target>
        </trans-unit>
        <trans-unit id="e2cc234f1ab166d2852bd6878a576806a19d5021" translate="yes" xml:space="preserve">
          <source>When set to true, a clone of this submodule will be performed as a shallow clone (with a history depth of 1) unless the user explicitly asks for a non-shallow clone.</source>
          <target state="translated">Cuando se establece como verdadero,un clon de este submódulo se realizará como un clon poco profundo (con una profundidad de historial de 1)a menos que el usuario pida explícitamente un clon no superficial.</target>
        </trans-unit>
        <trans-unit id="c92df8026c7e3a5d595e452302b48399c0fa7807" translate="yes" xml:space="preserve">
          <source>When set to true, automatically create a temporary stash entry before the operation begins, and apply it after the operation ends. This means that you can run rebase on a dirty worktree. However, use with care: the final stash application after a successful rebase might result in non-trivial conflicts. This option can be overridden by the &lt;code&gt;--no-autostash&lt;/code&gt; and &lt;code&gt;--autostash&lt;/code&gt; options of &lt;a href=&quot;git-rebase&quot;&gt;git-rebase[1]&lt;/a&gt;. Defaults to false.</source>
          <target state="translated">Cuando se establece en verdadero, crea autom&amp;aacute;ticamente una entrada de reserva temporal antes de que comience la operaci&amp;oacute;n y apl&amp;iacute;cala despu&amp;eacute;s de que finalice la operaci&amp;oacute;n. Esto significa que puede ejecutar rebase en un &amp;aacute;rbol de trabajo sucio. Sin embargo, util&amp;iacute;celo con cuidado: la aplicaci&amp;oacute;n de alijo final despu&amp;eacute;s de un rebase exitoso puede resultar en conflictos no triviales. Esta opci&amp;oacute;n puede ser anulada por las opciones &lt;code&gt;--no-autostash&lt;/code&gt; y &lt;code&gt;--autostash&lt;/code&gt; de &lt;a href=&quot;git-rebase&quot;&gt;git-rebase [1]&lt;/a&gt; . El valor predeterminado es falso.</target>
        </trans-unit>
        <trans-unit id="454e58d95a3a4a743aeef0859eac2b9c78e6f07a" translate="yes" xml:space="preserve">
          <source>When set to true, fetching from this remote by default will also remove any local tags that no longer exist on the remote if pruning is activated in general via &lt;code&gt;remote.&amp;lt;name&amp;gt;.prune&lt;/code&gt;, &lt;code&gt;fetch.prune&lt;/code&gt; or &lt;code&gt;--prune&lt;/code&gt;. Overrides &lt;code&gt;fetch.pruneTags&lt;/code&gt; settings, if any.</source>
          <target state="translated">Cuando se establece en verdadero, la obtenci&amp;oacute;n de este control remoto de forma predeterminada tambi&amp;eacute;n eliminar&amp;aacute; cualquier etiqueta local que ya no exista en el control remoto si la poda se activa en general a trav&amp;eacute;s de &lt;code&gt;remote.&amp;lt;name&amp;gt;.prune&lt;/code&gt; , &lt;code&gt;fetch.prune&lt;/code&gt; o &lt;code&gt;--prune&lt;/code&gt; . Anulaciones &lt;code&gt;fetch.pruneTags&lt;/code&gt; ajustes, si los hubiere.</target>
        </trans-unit>
        <trans-unit id="2f08cdfbf2bbbb5ba49961d7515ae4f7f92a166e" translate="yes" xml:space="preserve">
          <source>When set to true, fetching from this remote by default will also remove any remote-tracking references that no longer exist on the remote (as if the &lt;code&gt;--prune&lt;/code&gt; option was given on the command line). Overrides &lt;code&gt;fetch.prune&lt;/code&gt; settings, if any.</source>
          <target state="translated">Cuando se establece en verdadero, la b&amp;uacute;squeda de este control remoto de forma predeterminada tambi&amp;eacute;n eliminar&amp;aacute; cualquier referencia de seguimiento remoto que ya no exista en el control remoto (como si la opci&amp;oacute;n &lt;code&gt;--prune&lt;/code&gt; se hubiera dado en la l&amp;iacute;nea de comando). Invalida &lt;code&gt;fetch.prune&lt;/code&gt; ajustes, si los hubiere.</target>
        </trans-unit>
        <trans-unit id="5739477a3b9489a88899be9378f898520709209f" translate="yes" xml:space="preserve">
          <source>When set to true, git-receive-pack will advertise the push options capability to its clients. False by default.</source>
          <target state="translated">Cuando se haga realidad,git-receive-pack anunciará la capacidad de opciones de empuje a sus clientes.Falso por defecto.</target>
        </trans-unit>
        <trans-unit id="af12eb66ec26d00e256f0fbfcc7125aeb108aa2e" translate="yes" xml:space="preserve">
          <source>When set to true, this remote will be used to fetch promisor objects.</source>
          <target state="translated">Cuando se ponga en marcha,este mando a distancia se usará para buscar objetos promisorios.</target>
        </trans-unit>
        <trans-unit id="384788e82f8977bea09d8463e5bbfca26ec8a699" translate="yes" xml:space="preserve">
          <source>When set, the fetch or receive will abort in the case of a malformed object or a link to a nonexistent object. In addition, various other issues are checked for, including legacy issues (see &lt;code&gt;fsck.&amp;lt;msg-id&amp;gt;&lt;/code&gt;), and potential security issues like the existence of a &lt;code&gt;.GIT&lt;/code&gt; directory or a malicious &lt;code&gt;.gitmodules&lt;/code&gt; file (see the release notes for v2.2.1 and v2.17.1 for details). Other sanity and security checks may be added in future releases.</source>
          <target state="translated">Cuando se establece, la recuperaci&amp;oacute;n o la recepci&amp;oacute;n abortar&amp;aacute;n en el caso de un objeto con formato incorrecto o un enlace a un objeto inexistente. Adem&amp;aacute;s, se verifican varios otros problemas, incluidos problemas heredados (consulte &lt;code&gt;fsck.&amp;lt;msg-id&amp;gt;&lt;/code&gt; ) y posibles problemas de seguridad, como la existencia de un directorio &lt;code&gt;.GIT&lt;/code&gt; o un archivo &lt;code&gt;.gitmodules&lt;/code&gt; malicioso (consulte las notas de la versi&amp;oacute;n de v2. 2.1 y v2.17.1 para obtener m&amp;aacute;s detalles). Es posible que se agreguen otras comprobaciones de seguridad y cordura en versiones futuras.</target>
        </trans-unit>
        <trans-unit id="51a9809b150b3fa600feb6c1ea57e78e8de9e787" translate="yes" xml:space="preserve">
          <source>When showing &lt;code&gt;short&lt;/code&gt; or &lt;code&gt;porcelain&lt;/code&gt; status output, print the filename verbatim and terminate the entries with NUL, instead of LF. If no format is given, implies the &lt;code&gt;--porcelain&lt;/code&gt; output format. Without the &lt;code&gt;-z&lt;/code&gt; option, filenames with &quot;unusual&quot; characters are quoted as explained for the configuration variable &lt;code&gt;core.quotePath&lt;/code&gt; (see &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;).</source>
          <target state="translated">Cuando muestre &lt;code&gt;short&lt;/code&gt; salida de estado corto o de &lt;code&gt;porcelain&lt;/code&gt; , imprima el nombre del archivo palabra por palabra y termine las entradas con NUL, en lugar de LF. Si no se proporciona ning&amp;uacute;n formato, implica el formato de salida &lt;code&gt;--porcelain&lt;/code&gt; . Sin la opci&amp;oacute;n &lt;code&gt;-z&lt;/code&gt; , los nombres de archivo con caracteres &quot;inusuales&quot; se citan como se explica para la variable de configuraci&amp;oacute;n &lt;code&gt;core.quotePath&lt;/code&gt; (ver &lt;a href=&quot;git-config&quot;&gt;git-config [1]&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="43f2e6f1690661b84f31283fe1b400a9df885029" translate="yes" xml:space="preserve">
          <source>When showing a change that involves a rename or a copy, &lt;code&gt;--stat&lt;/code&gt; output formats the pathnames compactly by combining common prefix and suffix of the pathnames. For example, a change that moves &lt;code&gt;arch/i386/Makefile&lt;/code&gt; to &lt;code&gt;arch/x86/Makefile&lt;/code&gt; while modifying 4 lines will be shown like this:</source>
          <target state="translated">Cuando se muestra un cambio que implica un cambio de nombre o una copia, la salida &lt;code&gt;--stat&lt;/code&gt; formatea los nombres de ruta de manera compacta combinando el prefijo com&amp;uacute;n y el sufijo de los nombres de ruta. Por ejemplo, un cambio que mueve &lt;code&gt;arch/i386/Makefile&lt;/code&gt; a &lt;code&gt;arch/x86/Makefile&lt;/code&gt; mientras modifica 4 l&amp;iacute;neas se mostrar&amp;aacute; as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="5d4332d6cfe825bd00a3bfef76e9ffde728a5dde" translate="yes" xml:space="preserve">
          <source>When showing commit messages, also show notes which are stored in the given ref. The ref must be fully qualified. If the given ref does not exist, it is not an error but means that no notes should be printed.</source>
          <target state="translated">Al mostrar los mensajes de confirmación,muestre también las notas que están almacenadas en la referencia dada.El árbitro debe estar completamente cualificado.Si el árbitro dado no existe,no es un error pero significa que no se deben imprimir notas.</target>
        </trans-unit>
        <trans-unit id="43020b05da28d5245a5572e708a459c7bb4d40bf" translate="yes" xml:space="preserve">
          <source>When showing object names, prefix them with &lt;code&gt;^&lt;/code&gt; and strip &lt;code&gt;^&lt;/code&gt; prefix from the object names that already have one.</source>
          <target state="translated">Cuando muestre nombres de objetos, anteponga &lt;code&gt;^&lt;/code&gt; y &lt;code&gt;^&lt;/code&gt; prefijo ^ de los nombres de objeto que ya tienen uno.</target>
        </trans-unit>
        <trans-unit id="bf158ec030a04af48fd84ff99f4cdef61dbc802c" translate="yes" xml:space="preserve">
          <source>When showing the value of &amp;lt;name&amp;gt; as a symbolic ref, try to shorten the value, e.g. from &lt;code&gt;refs/heads/master&lt;/code&gt; to &lt;code&gt;master&lt;/code&gt;.</source>
          <target state="translated">Cuando muestre el valor de &amp;lt;nombre&amp;gt; como una referencia simb&amp;oacute;lica, intente acortar el valor, por ejemplo, de &lt;code&gt;refs/heads/master&lt;/code&gt; a &lt;code&gt;master&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d07871fea9de7a0886062f3dfa8bbc506d97b667" translate="yes" xml:space="preserve">
          <source>When shown by &lt;code&gt;git diff-tree -c&lt;/code&gt;, it compares the parents of a merge commit with the merge result (i.e. file1..fileN are the parents). When shown by &lt;code&gt;git diff-files -c&lt;/code&gt;, it compares the two unresolved merge parents with the working tree file (i.e. file1 is stage 2 aka &quot;our version&quot;, file2 is stage 3 aka &quot;their version&quot;).</source>
          <target state="translated">Cuando se muestra con &lt;code&gt;git diff-tree -c&lt;/code&gt; , compara los padres de una confirmaci&amp;oacute;n de fusi&amp;oacute;n con el resultado de la fusi&amp;oacute;n (es decir, file1..fileN son los padres). Cuando se muestra mediante &lt;code&gt;git diff-files -c&lt;/code&gt; , compara los dos padres de fusi&amp;oacute;n no resueltos con el archivo de &amp;aacute;rbol de trabajo (es decir, file1 es la etapa 2 tambi&amp;eacute;n conocida como &quot;nuestra versi&amp;oacute;n&quot;, file2 es la etapa 3 tambi&amp;eacute;n conocida como &quot;su versi&amp;oacute;n&quot;).</target>
        </trans-unit>
        <trans-unit id="aea42e2933202e5e3d5f69076d6bebeb378dfcd9" translate="yes" xml:space="preserve">
          <source>When some commits have been skipped (using &quot;git bisect skip&quot;), then the bisection algorithm is the same for step 1) to 3). But then we use roughly the following steps:</source>
          <target state="translated">Cuando se han saltado algunas confirmaciones (usando &quot;git bisect skip&quot;),entonces el algoritmo de bisección es el mismo para los pasos 1)a 3).Pero entonces usamos aproximadamente los siguientes pasos:</target>
        </trans-unit>
        <trans-unit id="4192528671a22eca45fcad6bb5614a7ec165a5d4" translate="yes" xml:space="preserve">
          <source>When specified one or more times, &lt;code&gt;-L&lt;/code&gt; restricts annotation to the requested lines.</source>
          <target state="translated">Cuando se especifica una o m&amp;aacute;s veces, &lt;code&gt;-L&lt;/code&gt; restringe la anotaci&amp;oacute;n a las l&amp;iacute;neas solicitadas.</target>
        </trans-unit>
        <trans-unit id="75acd7ee44b0e77c6b233d3615dca447d4cfdc8c" translate="yes" xml:space="preserve">
          <source>When specifying the -v option the format used is:</source>
          <target state="translated">Cuando se especifica la opción -v el formato utilizado es:</target>
        </trans-unit>
        <trans-unit id="0550af8039db48de114d18431bb7375cee83b91b" translate="yes" xml:space="preserve">
          <source>When switching branches with &lt;code&gt;--merge&lt;/code&gt;, staged changes may be lost.</source>
          <target state="translated">Al cambiar de rama con &lt;code&gt;--merge&lt;/code&gt; , los cambios por etapas pueden perderse.</target>
        </trans-unit>
        <trans-unit id="1f4fa4b7e00510c39cb24519dad3b49f07cff89d" translate="yes" xml:space="preserve">
          <source>When switching branches, if you have local modifications to one or more files that are different between the current branch and the branch to which you are switching, the command refuses to switch branches in order to preserve your modifications in context. However, with this option, a three-way merge between the current branch, your working tree contents, and the new branch is done, and you will be on the new branch.</source>
          <target state="translated">Al cambiar de rama,si tiene modificaciones locales en uno o más archivos que son diferentes entre la rama actual y la rama a la que está cambiando,el comando se niega a cambiar de rama para preservar sus modificaciones en el contexto.Sin embargo,con esta opción,se realiza una fusión a tres bandas entre la rama actual,el contenido de su árbol de trabajo y la nueva rama,y usted estará en la nueva rama.</target>
        </trans-unit>
        <trans-unit id="7b0d58bb9103d272bfd260e85d337e6780ed225d" translate="yes" xml:space="preserve">
          <source>When switching branches, proceed even if the index or the working tree differs from &lt;code&gt;HEAD&lt;/code&gt;. This is used to throw away local changes.</source>
          <target state="translated">Al cambiar de rama, proceda incluso si el &amp;iacute;ndice o el &amp;aacute;rbol de trabajo difieren de &lt;code&gt;HEAD&lt;/code&gt; . Se utiliza para deshacerse de los cambios locales.</target>
        </trans-unit>
        <trans-unit id="c0e1144ec53aca779c8724f81a0ba0a804f51a81" translate="yes" xml:space="preserve">
          <source>When the &quot;-C&quot; option is used, the original contents of modified files, and deleted files (and also unmodified files, if the &quot;--find-copies-harder&quot; option is used) are considered as candidates of the source files in rename/copy operation. If the input were like these filepairs, that talk about a modified file fileY and a newly created file file0:</source>
          <target state="translated">Cuando se utiliza la opción &quot;-C&quot;,el contenido original de los archivos modificados y los archivos eliminados (y también los archivos no modificados,si se utiliza la opción &quot;--find-copies-harder&quot;)se consideran candidatos de los archivos fuente en la operación de renombrar/copiar.Si la entrada fuera como estos pares de archivos,eso hablaría de un archivo modificado fileY y un archivo recién creado file0:</target>
        </trans-unit>
        <trans-unit id="f6565c60ff0e235a6b049473d40ff8e72074a702" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; argument is a branch name, the &lt;code&gt;--detach&lt;/code&gt; option can be used to detach &lt;code&gt;HEAD&lt;/code&gt; at the tip of the branch (&lt;code&gt;git checkout
&amp;lt;branch&amp;gt;&lt;/code&gt; would check out that branch without detaching &lt;code&gt;HEAD&lt;/code&gt;).</source>
          <target state="translated">Cuando el argumento &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; es un nombre de rama, la opci&amp;oacute;n &lt;code&gt;--detach&lt;/code&gt; se puede usar para separar &lt;code&gt;HEAD&lt;/code&gt; en la punta de la rama ( &lt;code&gt;git checkout &amp;lt;branch&amp;gt;&lt;/code&gt; verificar&amp;iacute;a esa rama sin separar &lt;code&gt;HEAD&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="588cf4af82a088b4d8241fca9de08188511b35c3" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;--aggressive&lt;/code&gt; option is supplied, &lt;a href=&quot;git-repack&quot;&gt;git-repack[1]&lt;/a&gt; will be invoked with the &lt;code&gt;-f&lt;/code&gt; flag, which in turn will pass &lt;code&gt;--no-reuse-delta&lt;/code&gt; to &lt;a href=&quot;git-pack-objects&quot;&gt;git-pack-objects[1]&lt;/a&gt;. This will throw away any existing deltas and re-compute them, at the expense of spending much more time on the repacking.</source>
          <target state="translated">Cuando se &lt;code&gt;--aggressive&lt;/code&gt; opci&amp;oacute;n --aggressive , se invocar&amp;aacute; &lt;a href=&quot;git-repack&quot;&gt;git-repack [1]&lt;/a&gt; con el indicador &lt;code&gt;-f&lt;/code&gt; , que a su vez pasar&amp;aacute; &lt;code&gt;--no-reuse-delta&lt;/code&gt; a &lt;a href=&quot;git-pack-objects&quot;&gt;git-pack-objects [1]&lt;/a&gt; . Esto eliminar&amp;aacute; los deltas existentes y los volver&amp;aacute; a calcular, a expensas de dedicar mucho m&amp;aacute;s tiempo al reempaquetado.</target>
        </trans-unit>
        <trans-unit id="82879b1b4c41ea78abef977470f6f223214f239a" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;--stdin&lt;/code&gt; option is provided, the patterns are read from standard in as a newline-delimited list instead of from the arguments.</source>
          <target state="translated">Cuando se proporciona la opci&amp;oacute;n &lt;code&gt;--stdin&lt;/code&gt; , los patrones se leen del est&amp;aacute;ndar como una lista delimitada por nuevas l&amp;iacute;neas en lugar de los argumentos.</target>
        </trans-unit>
        <trans-unit id="0e72b560677fc7dbf879d4b64bab949efbe4ffc6" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;-l&lt;/code&gt; option is used, format changes to</source>
          <target state="translated">Cuando se usa la opci&amp;oacute;n &lt;code&gt;-l&lt;/code&gt; , el formato cambia a</target>
        </trans-unit>
        <trans-unit id="2d7535050bbd171bed81a20302444843893d883d" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;-z&lt;/code&gt; option is given, pathnames are printed as is and without any quoting and lines are terminated with a NUL (ASCII 0x00) byte.</source>
          <target state="translated">Cuando se proporciona la opci&amp;oacute;n &lt;code&gt;-z&lt;/code&gt; , los nombres de las rutas se imprimen tal cual y sin comillas y las l&amp;iacute;neas terminan con un byte NUL (ASCII 0x00).</target>
        </trans-unit>
        <trans-unit id="e231e06fa3f3b3606e814466b6e12bf27e65315d" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;.gitattributes&lt;/code&gt; file is missing from the work tree, the path in the index is used as a fall-back. During checkout process, &lt;code&gt;.gitattributes&lt;/code&gt; in the index is used and then the file in the working tree is used as a fall-back.</source>
          <target state="translated">Cuando &lt;code&gt;.gitattributes&lt;/code&gt; archivo .gitattributes en el &amp;aacute;rbol de trabajo, la ruta en el &amp;iacute;ndice se utiliza como alternativa . Durante el proceso de pago, se &lt;code&gt;.gitattributes&lt;/code&gt; en el &amp;iacute;ndice y luego el archivo en el &amp;aacute;rbol de trabajo se usa como respaldo.</target>
        </trans-unit>
        <trans-unit id="ca6fe469ff13b0a4412dea9bd34db705e00a71db" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;LESS&lt;/code&gt; environment variable is unset, Git sets it to &lt;code&gt;FRX&lt;/code&gt; (if &lt;code&gt;LESS&lt;/code&gt; environment variable is set, Git does not change it at all). If you want to selectively override Git&amp;rsquo;s default setting for &lt;code&gt;LESS&lt;/code&gt;, you can set &lt;code&gt;core.pager&lt;/code&gt; to e.g. &lt;code&gt;less -S&lt;/code&gt;. This will be passed to the shell by Git, which will translate the final command to &lt;code&gt;LESS=FRX less -S&lt;/code&gt;. The environment does not set the &lt;code&gt;S&lt;/code&gt; option but the command line does, instructing less to truncate long lines. Similarly, setting &lt;code&gt;core.pager&lt;/code&gt; to &lt;code&gt;less -+F&lt;/code&gt; will deactivate the &lt;code&gt;F&lt;/code&gt; option specified by the environment from the command-line, deactivating the &quot;quit if one screen&quot; behavior of &lt;code&gt;less&lt;/code&gt;. One can specifically activate some flags for particular commands: for example, setting &lt;code&gt;pager.blame&lt;/code&gt; to &lt;code&gt;less -S&lt;/code&gt; enables line truncation only for &lt;code&gt;git blame&lt;/code&gt;.</source>
          <target state="translated">Cuando la variable de entorno &lt;code&gt;LESS&lt;/code&gt; no est&amp;aacute; establecida, Git la establece en &lt;code&gt;FRX&lt;/code&gt; (si se establece la variable de entorno &lt;code&gt;LESS&lt;/code&gt; , Git no la cambia en absoluto). Si desea anular selectivamente la configuraci&amp;oacute;n predeterminada de Git para &lt;code&gt;LESS&lt;/code&gt; , puede establecer &lt;code&gt;core.pager&lt;/code&gt; en, por ejemplo, &lt;code&gt;less -S&lt;/code&gt; . Esto ser&amp;aacute; pasado al shell por Git, que traducir&amp;aacute; el comando final a &lt;code&gt;LESS=FRX less -S&lt;/code&gt; . El entorno no establece la opci&amp;oacute;n &lt;code&gt;S&lt;/code&gt; , pero la l&amp;iacute;nea de comandos s&amp;iacute;, lo que indica a Less que trunque las l&amp;iacute;neas largas. Del mismo modo, establecer &lt;code&gt;core.pager&lt;/code&gt; en &lt;code&gt;less -+F&lt;/code&gt; desactivar&amp;aacute; la &lt;code&gt;F&lt;/code&gt; opci&amp;oacute;n especificada por el entorno desde la l&amp;iacute;nea de comandos, desactivando el comportamiento &quot;salir si una pantalla&quot; de &lt;code&gt;less&lt;/code&gt; . Uno puede activar espec&amp;iacute;ficamente algunos indicadores para comandos particulares: por ejemplo, configurar &lt;code&gt;pager.blame&lt;/code&gt; en &lt;code&gt;less -S&lt;/code&gt; habilita el truncamiento de l&amp;iacute;nea solo para &lt;code&gt;git blame&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="74ad9f83ee4c2323b6a50919a4a444bb844e349c" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;core.fsmonitor&lt;/code&gt; configuration variable is changed, the file system monitor is added to or removed from the index the next time a command reads the index. When &lt;code&gt;--[no-]fsmonitor&lt;/code&gt; are used, the file system monitor is immediately added to or removed from the index.</source>
          <target state="translated">Cuando se &lt;code&gt;core.fsmonitor&lt;/code&gt; variable de configuraci&amp;oacute;n core.fsmonitor , el monitor del sistema de archivos se agrega o elimina del &amp;iacute;ndice la pr&amp;oacute;xima vez que un comando lee el &amp;iacute;ndice. Cuando se utiliza &lt;code&gt;--[no-]fsmonitor&lt;/code&gt; , el monitor del sistema de archivos se agrega o elimina inmediatamente del &amp;iacute;ndice.</target>
        </trans-unit>
        <trans-unit id="a4c9cc7c80e5659747cb4b3bf0914ba1addde698" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;core.untrackedCache&lt;/code&gt; configuration variable is changed, the untracked cache is added to or removed from the index the next time a command reads the index; while when &lt;code&gt;--[no-|force-]untracked-cache&lt;/code&gt; are used, the untracked cache is immediately added to or removed from the index.</source>
          <target state="translated">Cuando se &lt;code&gt;core.untrackedCache&lt;/code&gt; variable de configuraci&amp;oacute;n core.untrackedCache , la cach&amp;eacute; sin seguimiento se agrega o se elimina del &amp;iacute;ndice la pr&amp;oacute;xima vez que un comando lee el &amp;iacute;ndice; mientras que cuando se utiliza &lt;code&gt;--[no-|force-]untracked-cache&lt;/code&gt; , el cach&amp;eacute; sin seguimiento se agrega o elimina inmediatamente del &amp;iacute;ndice.</target>
        </trans-unit>
        <trans-unit id="a212ca612f0b7b9b082dffe71078dd396d414402" translate="yes" xml:space="preserve">
          <source>When the attribute &lt;code&gt;ident&lt;/code&gt; is set for a path, Git replaces &lt;code&gt;$Id$&lt;/code&gt; in the blob object with &lt;code&gt;$Id:&lt;/code&gt;, followed by the 40-character hexadecimal blob object name, followed by a dollar sign &lt;code&gt;$&lt;/code&gt; upon checkout. Any byte sequence that begins with &lt;code&gt;$Id:&lt;/code&gt; and ends with &lt;code&gt;$&lt;/code&gt; in the worktree file is replaced with &lt;code&gt;$Id$&lt;/code&gt; upon check-in.</source>
          <target state="translated">Cuando se establece el atributo &lt;code&gt;ident&lt;/code&gt; para una ruta, Git reemplaza &lt;code&gt;$Id$&lt;/code&gt; en el objeto blob con &lt;code&gt;$Id:&lt;/code&gt; seguido del nombre del objeto blob hexadecimal de 40 caracteres, seguido de un signo de d&amp;oacute;lar &lt;code&gt;$&lt;/code&gt; al finalizar la compra. Cualquier secuencia de bytes que comience con &lt;code&gt;$Id:&lt;/code&gt; y termine con &lt;code&gt;$&lt;/code&gt; en el archivo de &amp;aacute;rbol de trabajo se reemplaza con &lt;code&gt;$Id$&lt;/code&gt; al registrarse.</target>
        </trans-unit>
        <trans-unit id="fa514f01de77ed627378917f2aa0b40cefa8c9a0" translate="yes" xml:space="preserve">
          <source>When the command enters the interactive mode, it shows the files and directories to be cleaned, and goes into its interactive command loop.</source>
          <target state="translated">Cuando el comando entra en el modo interactivo,muestra los archivos y directorios a ser limpiados,y entra en su bucle de comando interactivo.</target>
        </trans-unit>
        <trans-unit id="8e767c7023b00ca52d4fb770ab49ce4dc284f987" translate="yes" xml:space="preserve">
          <source>When the command enters the interactive mode, it shows the output of the &lt;code&gt;status&lt;/code&gt; subcommand, and then goes into its interactive command loop.</source>
          <target state="translated">Cuando el comando ingresa al modo interactivo, muestra la salida del subcomando de &lt;code&gt;status&lt;/code&gt; y luego entra en su ciclo de comando interactivo.</target>
        </trans-unit>
        <trans-unit id="e95952399796aad65deb415e39c303153d01cdf9" translate="yes" xml:space="preserve">
          <source>When the command is invoked from a subdirectory, show the path of the current directory relative to the top-level directory.</source>
          <target state="translated">Cuando se invoca el comando desde un subdirectorio,mostrar la ruta del directorio actual en relación con el directorio de nivel superior.</target>
        </trans-unit>
        <trans-unit id="45506eccf72696bf6e0287a6eeda327142bb0f41" translate="yes" xml:space="preserve">
          <source>When the command is invoked from a subdirectory, show the path of the top-level directory relative to the current directory (typically a sequence of &quot;../&quot;, or an empty string).</source>
          <target state="translated">Cuando se invoca el comando desde un subdirectorio,mostrar la ruta del directorio de nivel superior relativa al directorio actual (típicamente una secuencia de &quot;../&quot;,o una cadena vacía).</target>
        </trans-unit>
        <trans-unit id="609d76b7287e730d5e5fcae1b57a1cde4d02d1ae" translate="yes" xml:space="preserve">
          <source>When the command is run without pathspec, it errors out, instead of deinit-ing everything, to prevent mistakes.</source>
          <target state="translated">Cuando el comando se ejecuta sin pathspec,se equivoca,en lugar de des-intentarlo todo,para evitar errores.</target>
        </trans-unit>
        <trans-unit id="2ebded60d45ed8776b0324d8d2138df90f552a15" translate="yes" xml:space="preserve">
          <source>When the command line does not specify what to push with &lt;code&gt;&amp;lt;refspec&amp;gt;...&lt;/code&gt; arguments or &lt;code&gt;--all&lt;/code&gt;, &lt;code&gt;--mirror&lt;/code&gt;, &lt;code&gt;--tags&lt;/code&gt; options, the command finds the default &lt;code&gt;&amp;lt;refspec&amp;gt;&lt;/code&gt; by consulting &lt;code&gt;remote.*.push&lt;/code&gt; configuration, and if it is not found, honors &lt;code&gt;push.default&lt;/code&gt; configuration to decide what to push (See &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt; for the meaning of &lt;code&gt;push.default&lt;/code&gt;).</source>
          <target state="translated">Cuando la l&amp;iacute;nea de comandos no especifica qu&amp;eacute; empujar con &lt;code&gt;&amp;lt;refspec&amp;gt;...&lt;/code&gt; argumentos o &lt;code&gt;--all&lt;/code&gt; , &lt;code&gt;--mirror&lt;/code&gt; , &lt;code&gt;--tags&lt;/code&gt; opciones, el comando encuentra el valor por defecto &lt;code&gt;&amp;lt;refspec&amp;gt;&lt;/code&gt; mediante la consulta &lt;code&gt;remote.*.push&lt;/code&gt; de configuraci&amp;oacute;n y si no se encuentra, respeta la configuraci&amp;oacute;n &lt;code&gt;push.default&lt;/code&gt; para decidir qu&amp;eacute; empujar (Ver &lt;a href=&quot;git-config&quot;&gt;git-config [1]&lt;/a&gt; para el significado de &lt;code&gt;push.default&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="4f61ade639e58b8586884fe92cb9eea816606ac2" translate="yes" xml:space="preserve">
          <source>When the command line does not specify where to push with the &lt;code&gt;&amp;lt;repository&amp;gt;&lt;/code&gt; argument, &lt;code&gt;branch.*.remote&lt;/code&gt; configuration for the current branch is consulted to determine where to push. If the configuration is missing, it defaults to &lt;code&gt;origin&lt;/code&gt;.</source>
          <target state="translated">Cuando la l&amp;iacute;nea de comando no especifica d&amp;oacute;nde empujar con el argumento &lt;code&gt;&amp;lt;repository&amp;gt;&lt;/code&gt; , se consulta la configuraci&amp;oacute;n &lt;code&gt;branch.*.remote&lt;/code&gt; Para la rama actual para determinar d&amp;oacute;nde empujar. Si falta la configuraci&amp;oacute;n, el valor predeterminado es el &lt;code&gt;origin&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4dd963bd8e58b7ff2b11f8f622df35ecbcf28d58" translate="yes" xml:space="preserve">
          <source>When the commit diffs differ, &lt;code&gt;git range-diff&lt;/code&gt; recreates the original diffs' coloring, and adds outer -/+ diff markers with the &lt;strong&gt;background&lt;/strong&gt; being red/green to make it easier to see e.g. when there was a change in what exact lines were added.</source>
          <target state="translated">Cuando las diferencias de confirmaci&amp;oacute;n difieren, &lt;code&gt;git range-diff&lt;/code&gt; recrea el color de las diferencias originales y agrega marcadores externos - / + diff con el &lt;strong&gt;fondo&lt;/strong&gt; rojo / verde para que sea m&amp;aacute;s f&amp;aacute;cil de ver, por ejemplo, cuando hubo un cambio en las l&amp;iacute;neas exactas que se agregaron .</target>
        </trans-unit>
        <trans-unit id="3625aba84b870871330cdfd48d8779c4e4badb58" translate="yes" xml:space="preserve">
          <source>When the commit log message begins with &quot;squash! &amp;hellip;​&quot; (or &quot;fixup! &amp;hellip;​&quot;), and there is already a commit in the todo list that matches the same &lt;code&gt;...&lt;/code&gt;, automatically modify the todo list of rebase -i so that the commit marked for squashing comes right after the commit to be modified, and change the action of the moved commit from &lt;code&gt;pick&lt;/code&gt; to &lt;code&gt;squash&lt;/code&gt; (or &lt;code&gt;fixup&lt;/code&gt;). A commit matches the &lt;code&gt;...&lt;/code&gt; if the commit subject matches, or if the &lt;code&gt;...&lt;/code&gt; refers to the commit&amp;rsquo;s hash. As a fall-back, partial matches of the commit subject work, too. The recommended way to create fixup/squash commits is by using the &lt;code&gt;--fixup&lt;/code&gt;/&lt;code&gt;--squash&lt;/code&gt; options of &lt;a href=&quot;git-commit&quot;&gt;git-commit[1]&lt;/a&gt;.</source>
          <target state="translated">Cuando el mensaje del registro de confirmaciones comienza con &quot;squash! ...&quot; (o &quot;fixup! ...&quot;), y ya hay una confirmaci&amp;oacute;n en la lista de tareas pendientes que coincide con el mismo &lt;code&gt;...&lt;/code&gt; , modifica autom&amp;aacute;ticamente la lista de tareas pendientes de rebase -i de modo que la confirmaci&amp;oacute;n marcada para aplastar viene justo despu&amp;eacute;s de la confirmaci&amp;oacute;n que se va a modificar, y cambiar la acci&amp;oacute;n de la confirmaci&amp;oacute;n movida de &lt;code&gt;pick&lt;/code&gt; a &lt;code&gt;squash&lt;/code&gt; (o &lt;code&gt;fixup&lt;/code&gt; ). Una confirmaci&amp;oacute;n coincide con &lt;code&gt;...&lt;/code&gt; si el asunto de la confirmaci&amp;oacute;n coincide, o si &lt;code&gt;...&lt;/code&gt; se refiere al hash de la confirmaci&amp;oacute;n. Como alternativa, las coincidencias parciales del sujeto de confirmaci&amp;oacute;n tambi&amp;eacute;n funcionan. La forma recomendada de crear confirmaciones de &lt;code&gt;--fixup&lt;/code&gt; / &lt;code&gt;--squash&lt;/code&gt; es usando las opciones --fixup / --squash de &lt;a href=&quot;git-commit&quot;&gt;git-commit [1]&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="777196d17b1a10c66d0cd105e5fb66da2363f7b1" translate="yes" xml:space="preserve">
          <source>When the config key &lt;code&gt;extensions.partialclone&lt;/code&gt; is set, it indicates that the repo was created with a partial clone (or later performed a partial fetch) and that the remote may have omitted sending certain unwanted objects. Such a remote is called a &quot;promisor remote&quot; and it promises that all such omitted objects can be fetched from it in the future.</source>
          <target state="translated">Cuando se establece la clave de configuraci&amp;oacute;n &lt;code&gt;extensions.partialclone&lt;/code&gt; , indica que el repositorio se cre&amp;oacute; con un clon parcial (o luego realiz&amp;oacute; una recuperaci&amp;oacute;n parcial) y que el control remoto puede haber omitido el env&amp;iacute;o de ciertos objetos no deseados. Este tipo de control remoto se denomina &quot;control remoto promisor&quot; y promete que todos los objetos omitidos se pueden recuperar en el futuro.</target>
        </trans-unit>
        <trans-unit id="ef73607bec133cc1d32aaf64deafc8c72104731d" translate="yes" xml:space="preserve">
          <source>When the config key &lt;code&gt;extensions.preciousObjects&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt;, objects in the repository MUST NOT be deleted (e.g., by &lt;code&gt;git-prune&lt;/code&gt; or &lt;code&gt;git repack -d&lt;/code&gt;).</source>
          <target state="translated">Cuando la clave de configuraci&amp;oacute;n &lt;code&gt;extensions.preciousObjects&lt;/code&gt; se establece en &lt;code&gt;true&lt;/code&gt; , los objetos del repositorio NO DEBEN eliminarse (por ejemplo, mediante &lt;code&gt;git-prune&lt;/code&gt; o &lt;code&gt;git repack -d&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="e23e26ad367e6b915821bbb7b38753fa6fd4c240" translate="yes" xml:space="preserve">
          <source>When the current working directory is below the repository directory print &quot;true&quot;, otherwise &quot;false&quot;.</source>
          <target state="translated">Cuando el directorio de trabajo actual está por debajo del directorio del repositorio,escriba &quot;true&quot;,de lo contrario &quot;false&quot;.</target>
        </trans-unit>
        <trans-unit id="8a7aa53d7bbe6bfa657a2a1bb84359882384d7fa" translate="yes" xml:space="preserve">
          <source>When the current working directory is inside the work tree of the repository print &quot;true&quot;, otherwise &quot;false&quot;.</source>
          <target state="translated">Cuando el directorio de trabajo actual está dentro del árbol de trabajo del repositorio,escriba &quot;true&quot;,de lo contrario &quot;false&quot;.</target>
        </trans-unit>
        <trans-unit id="dd7dc6a4dcd86a8d725c2332772df83ad820f427" translate="yes" xml:space="preserve">
          <source>When the environment variable &lt;code&gt;GIT_EXTERNAL_DIFF&lt;/code&gt; is set, the program named by it is called, instead of the diff invocation described above. For a path that is added, removed, or modified, &lt;code&gt;GIT_EXTERNAL_DIFF&lt;/code&gt; is called with 7 parameters:</source>
          <target state="translated">Cuando se establece la variable de entorno &lt;code&gt;GIT_EXTERNAL_DIFF&lt;/code&gt; , se llama al programa nombrado por ella, en lugar de la invocaci&amp;oacute;n diff descrita anteriormente. Para una ruta que se agrega, elimina o modifica, se llama a &lt;code&gt;GIT_EXTERNAL_DIFF&lt;/code&gt; con 7 par&amp;aacute;metros:</target>
        </trans-unit>
        <trans-unit id="ec4de571b6827b1e0107c62834d6f8cf9f50bba2" translate="yes" xml:space="preserve">
          <source>When the git-rebase command is run, it will first execute a &quot;pre-rebase&quot; hook if one exists. You can use this hook to do sanity checks and reject the rebase if it isn&amp;rsquo;t appropriate. Please see the template pre-rebase hook script for an example.</source>
          <target state="translated">Cuando se ejecuta el comando git-rebase, primero ejecutar&amp;aacute; un gancho &quot;pre-rebase&quot; si existe. Puede utilizar este gancho para realizar comprobaciones de cordura y rechazar el rebase si no es apropiado. Consulte la secuencia de comandos de enlace de pre-rebase de la plantilla para ver un ejemplo.</target>
        </trans-unit>
        <trans-unit id="4663df00f4cd516023be3e887d8ecce789e72f00" translate="yes" xml:space="preserve">
          <source>When the history involves criss-cross merges, there can be more than one &lt;code&gt;best&lt;/code&gt; common ancestor for two commits. For example, with this topology:</source>
          <target state="translated">Cuando el historial implica fusiones entrecruzadas, puede haber m&amp;aacute;s de un &lt;code&gt;best&lt;/code&gt; ancestro com&amp;uacute;n para dos confirmaciones. Por ejemplo, con esta topolog&amp;iacute;a:</target>
        </trans-unit>
        <trans-unit id="58beafa5cea14c3b99014fb314d938b1ee9fac65" translate="yes" xml:space="preserve">
          <source>When the man viewer, specified by the &lt;code&gt;man.viewer&lt;/code&gt; configuration variables, is not among the supported ones, then the corresponding &lt;code&gt;man.&amp;lt;tool&amp;gt;.cmd&lt;/code&gt; configuration variable will be looked up. If this variable exists then the specified tool will be treated as a custom command and a shell eval will be used to run the command with the man page passed as arguments.</source>
          <target state="translated">Cuando el visor man, especificado por las variables de configuraci&amp;oacute;n &lt;code&gt;man.viewer&lt;/code&gt; , no se encuentra entre los admitidos, se buscar&amp;aacute; la variable de configuraci&amp;oacute;n &lt;code&gt;man.&amp;lt;tool&amp;gt;.cmd&lt;/code&gt; correspondiente. Si esta variable existe, la herramienta especificada se tratar&amp;aacute; como un comando personalizado y se utilizar&amp;aacute; una evaluaci&amp;oacute;n de shell para ejecutar el comando con la p&amp;aacute;gina de manual pasada como argumentos.</target>
        </trans-unit>
        <trans-unit id="d01c091e9d01b5baf9f294a1d7b9c823d7d014bc" translate="yes" xml:space="preserve">
          <source>When the output goes to a terminal, it is color-coded by default, just like regular &lt;code&gt;git diff&lt;/code&gt;'s output. In addition, the first line (adding a commit) is green, the last line (deleting a commit) is red, the second line (with a perfect match) is yellow like the commit header of &lt;code&gt;git
show&lt;/code&gt;'s output, and the third line colors the old commit red, the new one green and the rest like &lt;code&gt;git show&lt;/code&gt;'s commit header.</source>
          <target state="translated">Cuando la salida va a una terminal, est&amp;aacute; codificada por colores por defecto, al igual que la salida normal de &lt;code&gt;git diff&lt;/code&gt; . Adem&amp;aacute;s, la primera l&amp;iacute;nea (agregar una confirmaci&amp;oacute;n) es verde, la &amp;uacute;ltima l&amp;iacute;nea (eliminar una confirmaci&amp;oacute;n) es roja, la segunda l&amp;iacute;nea (con una coincidencia perfecta) es amarilla como el encabezado de confirmaci&amp;oacute;n de la salida de &lt;code&gt;git show&lt;/code&gt; y la tercera La l&amp;iacute;nea colorea la antigua confirmaci&amp;oacute;n en rojo, la nueva en verde y el resto como el encabezado de confirmaci&amp;oacute;n de &lt;code&gt;git show&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ecf68ce55bda2542529810833e005e7f157f71c2" translate="yes" xml:space="preserve">
          <source>When the patch does not apply cleanly, fall back on 3-way merge if the patch records the identity of blobs it is supposed to apply to and we have those blobs available locally. &lt;code&gt;--no-3way&lt;/code&gt; can be used to override am.threeWay configuration variable. For more information, see am.threeWay in &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;.</source>
          <target state="translated">Cuando el parche no se aplica limpiamente, recurra a la combinaci&amp;oacute;n de 3 v&amp;iacute;as si el parche registra la identidad de los blobs a los que se supone que debe aplicarse y tenemos esos blobs disponibles localmente. &lt;code&gt;--no-3way&lt;/code&gt; se puede utilizar para anular la variable de configuraci&amp;oacute;n am.threeWay. Para obtener m&amp;aacute;s informaci&amp;oacute;n, consulte am.threeWay en &lt;a href=&quot;git-config&quot;&gt;git-config [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="28728fcf386b485f532ec99285643062f0405ba5" translate="yes" xml:space="preserve">
          <source>When the patch does not apply cleanly, fall back on 3-way merge if the patch records the identity of blobs it is supposed to apply to, and we have those blobs available locally, possibly leaving the conflict markers in the files in the working tree for the user to resolve. This option implies the &lt;code&gt;--index&lt;/code&gt; option, and is incompatible with the &lt;code&gt;--reject&lt;/code&gt; and the &lt;code&gt;--cached&lt;/code&gt; options.</source>
          <target state="translated">Cuando el parche no se aplica de manera limpia, recurra a la combinaci&amp;oacute;n de 3 v&amp;iacute;as si el parche registra la identidad de los blobs a los que se supone que debe aplicarse, y tenemos esos blobs disponibles localmente, posiblemente dejando los marcadores de conflicto en los archivos del &amp;aacute;rbol de trabajo. para que el usuario lo resuelva. Esta opci&amp;oacute;n implica la opci&amp;oacute;n &lt;code&gt;--index&lt;/code&gt; y es incompatible con las &lt;code&gt;--reject&lt;/code&gt; y &lt;code&gt;--cached&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bdd1b4760c591dff915e966378bff929405d28b1" translate="yes" xml:space="preserve">
          <source>When the push is complete, outputs one or more &lt;code&gt;ok &amp;lt;dst&amp;gt;&lt;/code&gt; or &lt;code&gt;error &amp;lt;dst&amp;gt; &amp;lt;why&amp;gt;?&lt;/code&gt; lines to indicate success or failure of each pushed ref. The status report output is terminated by a blank line. The option field &amp;lt;why&amp;gt; may be quoted in a C style string if it contains an LF.</source>
          <target state="translated">Cuando se completa la inserci&amp;oacute;n, genera uno o m&amp;aacute;s &lt;code&gt;ok &amp;lt;dst&amp;gt;&lt;/code&gt; o &lt;code&gt;error &amp;lt;dst&amp;gt; &amp;lt;why&amp;gt;?&lt;/code&gt; l&amp;iacute;neas para indicar el &amp;eacute;xito o el fracaso de cada ref. La salida del informe de estado finaliza con una l&amp;iacute;nea en blanco. El campo de opci&amp;oacute;n &amp;lt;por qu&amp;eacute;&amp;gt; se puede citar en una cadena de estilo C si contiene un LF.</target>
        </trans-unit>
        <trans-unit id="c36826b0bb47b2400e28127fc2b6b138c228a63f" translate="yes" xml:space="preserve">
          <source>When the remote branch you want to fetch is known to be rewound and rebased regularly, it is expected that its new tip will not be descendant of its previous tip (as stored in your remote-tracking branch the last time you fetched). You would want to use the &lt;code&gt;+&lt;/code&gt; sign to indicate non-fast-forward updates will be needed for such branches. There is no way to determine or declare that a branch will be made available in a repository with this behavior; the pulling user simply must know this is the expected usage pattern for a branch.</source>
          <target state="translated">Cuando se sabe que la rama remota que desea recuperar se rebobina y cambia de base con regularidad, se espera que su nueva sugerencia no sea descendiente de su sugerencia anterior (como se almacen&amp;oacute; en su rama de seguimiento remoto la &amp;uacute;ltima vez que obtuvo). Deber&amp;iacute;a utilizar el signo &lt;code&gt;+&lt;/code&gt; para indicar que se necesitar&amp;aacute;n actualizaciones que no sean de avance r&amp;aacute;pido para dichas ramas. No hay forma de determinar o declarar que una rama estar&amp;aacute; disponible en un repositorio con este comportamiento; el usuario de extracci&amp;oacute;n simplemente debe saber que este es el patr&amp;oacute;n de uso esperado para una rama.</target>
        </trans-unit>
        <trans-unit id="c2d02d0fdbdd6b68f91184ab0fd8a5fcfd84e982" translate="yes" xml:space="preserve">
          <source>When the repository is bare print &quot;true&quot;, otherwise &quot;false&quot;.</source>
          <target state="translated">Cuando el depósito está vacío,escriba &quot;verdadero&quot;,o &quot;falso&quot;.</target>
        </trans-unit>
        <trans-unit id="4881892c9231f2a8cbf0d32abf5995af521026ca" translate="yes" xml:space="preserve">
          <source>When the repository is shallow print &quot;true&quot;, otherwise &quot;false&quot;.</source>
          <target state="translated">Cuando el depósito es superficial escriba &quot;verdadero&quot;,de lo contrario &quot;falso&quot;.</target>
        </trans-unit>
        <trans-unit id="37826a890a4b64bdd1230276a23bd80630675ca5" translate="yes" xml:space="preserve">
          <source>When the repository named by &lt;code&gt;&amp;lt;url&amp;gt;&lt;/code&gt; has the commit at a tip of a ref that is different from the ref you have locally, you can use the &lt;code&gt;&amp;lt;local&amp;gt;:&amp;lt;remote&amp;gt;&lt;/code&gt; syntax, to have its local name, a colon &lt;code&gt;:&lt;/code&gt;, and its remote name.</source>
          <target state="translated">Cuando el repositorio nombrado por &lt;code&gt;&amp;lt;url&amp;gt;&lt;/code&gt; tiene el commit en una punta de un ref que es diferente de que el &amp;aacute;rbitro tiene a nivel local, puede utilizar el &lt;code&gt;&amp;lt;local&amp;gt;:&amp;lt;remote&amp;gt;&lt;/code&gt; sintaxis, para tener su nombre local, dos puntos &lt;code&gt;:&lt;/code&gt; , y su nombre remoto.</target>
        </trans-unit>
        <trans-unit id="a7fe7f8247bda757ca8d697055bcfe0913ae2caf" translate="yes" xml:space="preserve">
          <source>When the repository to clone from is on a local machine, this flag bypasses the normal &quot;Git aware&quot; transport mechanism and clones the repository by making a copy of HEAD and everything under objects and refs directories. The files under &lt;code&gt;.git/objects/&lt;/code&gt; directory are hardlinked to save space when possible.</source>
          <target state="translated">Cuando el repositorio desde el que clonar est&amp;aacute; en una m&amp;aacute;quina local, esta bandera pasa por alto el mecanismo de transporte normal &quot;consciente de Git&quot; y clona el repositorio haciendo una copia de HEAD y todo lo que se encuentra debajo de los directorios de objetos y referencias. Los archivos del directorio &lt;code&gt;.git/objects/&lt;/code&gt; est&amp;aacute;n vinculados para ahorrar espacio cuando sea posible.</target>
        </trans-unit>
        <trans-unit id="87edb2bef2f28c0f63de7720d331d50db0279e94" translate="yes" xml:space="preserve">
          <source>When the repository to clone is on the local machine, instead of using hard links, automatically setup &lt;code&gt;.git/objects/info/alternates&lt;/code&gt; to share the objects with the source repository. The resulting repository starts out without any object of its own.</source>
          <target state="translated">Cuando el repositorio para clonar est&amp;aacute; en la m&amp;aacute;quina local, en lugar de usar enlaces &lt;code&gt;.git/objects/info/alternates&lt;/code&gt; , configura autom&amp;aacute;ticamente .git / objects / info / alternates para compartir los objetos con el repositorio de origen. El repositorio resultante comienza sin ning&amp;uacute;n objeto propio.</target>
        </trans-unit>
        <trans-unit id="e18b845f941d21aaf5232c387f67cb23d0a4e759" translate="yes" xml:space="preserve">
          <source>When the result of a &lt;code&gt;git bisect&lt;/code&gt; is a non-merge commit, you should normally be able to discover the problem by examining just that commit. Developers can make this easy by breaking their changes into small self-contained commits. That won&amp;rsquo;t help in the case above, however, because the problem isn&amp;rsquo;t obvious from examination of any single commit; instead, a global view of the development is required. To make matters worse, the change in semantics in the problematic function may be just one small part of the changes in the upper line of development.</source>
          <target state="translated">Cuando el resultado de una &lt;code&gt;git bisect&lt;/code&gt; es una confirmaci&amp;oacute;n sin fusi&amp;oacute;n, normalmente deber&amp;iacute;a poder descubrir el problema examinando solo esa confirmaci&amp;oacute;n. Los desarrolladores pueden facilitar esto al dividir sus cambios en peque&amp;ntilde;as confirmaciones independientes. Sin embargo, eso no ayudar&amp;aacute; en el caso anterior, porque el problema no es obvio al examinar una &amp;uacute;nica confirmaci&amp;oacute;n; en cambio, se requiere una visi&amp;oacute;n global del desarrollo. Para empeorar las cosas, el cambio en la sem&amp;aacute;ntica de la funci&amp;oacute;n problem&amp;aacute;tica puede ser solo una peque&amp;ntilde;a parte de los cambios en la l&amp;iacute;nea superior de desarrollo.</target>
        </trans-unit>
        <trans-unit id="57dfd8622d0e5d97d5c5344dbdac2c35010a468d" translate="yes" xml:space="preserve">
          <source>When the split index feature is used, shared index files that were not modified since the time this variable specifies will be removed when a new shared index file is created. The value &quot;now&quot; expires all entries immediately, and &quot;never&quot; suppresses expiration altogether. The default value is &quot;2.weeks.ago&quot;. Note that a shared index file is considered modified (for the purpose of expiration) each time a new split-index file is either created based on it or read from it. See &lt;a href=&quot;git-update-index&quot;&gt;git-update-index[1]&lt;/a&gt;.</source>
          <target state="translated">Cuando se utiliza la funci&amp;oacute;n de &amp;iacute;ndice dividido, los archivos de &amp;iacute;ndice compartido que no se modificaron desde la hora que especifica esta variable se eliminar&amp;aacute;n cuando se cree un nuevo archivo de &amp;iacute;ndice compartido. El valor &quot;ahora&quot; expira todas las entradas inmediatamente y &quot;nunca&quot; suprime la expiraci&amp;oacute;n por completo. El valor predeterminado es &quot;2.weeks.ago&quot;. Tenga en cuenta que un archivo de &amp;iacute;ndice compartido se considera modificado (con el prop&amp;oacute;sito de caducar) cada vez que se crea o se lee un nuevo archivo de &amp;iacute;ndice dividido en base a &amp;eacute;l. Consulte &lt;a href=&quot;git-update-index&quot;&gt;git-update-index [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="887ef75c2523fd6b4da84b3a0a714f4995305746" translate="yes" xml:space="preserve">
          <source>When the split index feature is used, this specifies the percent of entries the split index can contain compared to the total number of entries in both the split index and the shared index before a new shared index is written. The value should be between 0 and 100. If the value is 0 then a new shared index is always written, if it is 100 a new shared index is never written. By default the value is 20, so a new shared index is written if the number of entries in the split index would be greater than 20 percent of the total number of entries. See &lt;a href=&quot;git-update-index&quot;&gt;git-update-index[1]&lt;/a&gt;.</source>
          <target state="translated">Cuando se utiliza la funci&amp;oacute;n de &amp;iacute;ndice dividido, esto especifica el porcentaje de entradas que el &amp;iacute;ndice dividido puede contener en comparaci&amp;oacute;n con el n&amp;uacute;mero total de entradas tanto en el &amp;iacute;ndice dividido como en el &amp;iacute;ndice compartido antes de escribir un nuevo &amp;iacute;ndice compartido. El valor debe estar entre 0 y 100. Si el valor es 0, siempre se escribe un nuevo &amp;iacute;ndice compartido, si es 100, nunca se escribe un nuevo &amp;iacute;ndice compartido. De forma predeterminada, el valor es 20, por lo que se escribe un nuevo &amp;iacute;ndice compartido si el n&amp;uacute;mero de entradas en el &amp;iacute;ndice dividido es superior al 20 por ciento del n&amp;uacute;mero total de entradas. Consulte &lt;a href=&quot;git-update-index&quot;&gt;git-update-index [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="249674ff1351f5c865508a34f368a209ce692426" translate="yes" xml:space="preserve">
          <source>When the value is &lt;code&gt;interactive&lt;/code&gt;, the rebase is run in interactive mode.</source>
          <target state="translated">Cuando el valor es &lt;code&gt;interactive&lt;/code&gt; , la rebase se ejecuta en modo interactivo.</target>
        </trans-unit>
        <trans-unit id="bbc30d1504ae5818b5ebed3f68f464e3d8d41b06" translate="yes" xml:space="preserve">
          <source>When there are approximately more than this many loose objects in the repository, &lt;code&gt;git gc --auto&lt;/code&gt; will pack them. Some Porcelain commands use this command to perform a light-weight garbage collection from time to time. The default value is 6700.</source>
          <target state="translated">Cuando hay aproximadamente m&amp;aacute;s de estos objetos sueltos en el repositorio, &lt;code&gt;git gc --auto&lt;/code&gt; los empaquetar&amp;aacute;. Algunos comandos de Porcelain usan este comando para realizar una recolecci&amp;oacute;n de basura ligera de vez en cuando. El valor predeterminado es 6700.</target>
        </trans-unit>
        <trans-unit id="62fefa7cb364ff9a836bef0837ac15925fecc8f2" translate="yes" xml:space="preserve">
          <source>When there are more than this many packs that are not marked with &lt;code&gt;*.keep&lt;/code&gt; file in the repository, &lt;code&gt;git gc
--auto&lt;/code&gt; consolidates them into one larger pack. The default value is 50. Setting this to 0 disables it. Setting &lt;code&gt;gc.auto&lt;/code&gt; to 0 will also disable this.</source>
          <target state="translated">Cuando hay m&amp;aacute;s paquetes que no est&amp;aacute;n marcados con el archivo &lt;code&gt;*.keep&lt;/code&gt; en el repositorio, &lt;code&gt;git gc --auto&lt;/code&gt; consolida en un paquete m&amp;aacute;s grande. El valor predeterminado es 50. Establecerlo en 0 lo desactiva. Establecer &lt;code&gt;gc.auto&lt;/code&gt; en 0 tambi&amp;eacute;n desactivar&amp;aacute; esto.</target>
        </trans-unit>
        <trans-unit id="a99bf9777c550eb2f6602e82876314f8cadcb15d" translate="yes" xml:space="preserve">
          <source>When there is only one argument given and it is not &lt;code&gt;--&lt;/code&gt; (e.g. &lt;code&gt;git
checkout abc&lt;/code&gt;), and when the argument is both a valid &lt;code&gt;&amp;lt;tree-ish&amp;gt;&lt;/code&gt; (e.g. a branch &lt;code&gt;abc&lt;/code&gt; exists) and a valid &lt;code&gt;&amp;lt;pathspec&amp;gt;&lt;/code&gt; (e.g. a file or a directory whose name is &quot;abc&quot; exists), Git would usually ask you to disambiguate. Because checking out a branch is so common an operation, however, &lt;code&gt;git checkout abc&lt;/code&gt; takes &quot;abc&quot; as a &lt;code&gt;&amp;lt;tree-ish&amp;gt;&lt;/code&gt; in such a situation. Use &lt;code&gt;git checkout -- &amp;lt;pathspec&amp;gt;&lt;/code&gt; if you want to checkout these paths out of the index.</source>
          <target state="translated">Cuando solo hay un argumento dado y no es &lt;code&gt;--&lt;/code&gt; (por ejemplo, &lt;code&gt;git checkout abc&lt;/code&gt; ), y cuando el argumento es un &lt;code&gt;&amp;lt;tree-ish&amp;gt;&lt;/code&gt; v&amp;aacute;lido (por ejemplo, existe una rama &lt;code&gt;abc&lt;/code&gt; ) y un &lt;code&gt;&amp;lt;pathspec&amp;gt;&lt;/code&gt; v&amp;aacute;lido (por ejemplo, un archivo o existe un directorio cuyo nombre es &quot;abc&quot;), Git normalmente le pedir&amp;aacute; que elimine la ambig&amp;uuml;edad. Debido a que verificar una rama es una operaci&amp;oacute;n tan com&amp;uacute;n, sin embargo, &lt;code&gt;git checkout abc&lt;/code&gt; toma &quot;abc&quot; como &lt;code&gt;&amp;lt;tree-ish&amp;gt;&lt;/code&gt; en tal situaci&amp;oacute;n. Utilice &lt;code&gt;git checkout -- &amp;lt;pathspec&amp;gt;&lt;/code&gt; si desea retirar estas rutas del &amp;iacute;ndice.</target>
        </trans-unit>
        <trans-unit id="3ff1d02c565a22d417998ec283b077273b716d4a" translate="yes" xml:space="preserve">
          <source>When these environment variables are set, the corresponding command-line arguments may not be used.</source>
          <target state="translated">Cuando se establecen estas variables de entorno,no se pueden utilizar los correspondientes argumentos de la línea de comandos.</target>
        </trans-unit>
        <trans-unit id="86c4d2dcd046b538b0d9c792061f20bffd3f8c8e" translate="yes" xml:space="preserve">
          <source>When this flag is provided, the pack is read from stdin instead and a copy is then written to &amp;lt;pack-file&amp;gt;. If &amp;lt;pack-file&amp;gt; is not specified, the pack is written to objects/pack/ directory of the current Git repository with a default name determined from the pack content. If &amp;lt;pack-file&amp;gt; is not specified consider using --keep to prevent a race condition between this process and &lt;code&gt;git repack&lt;/code&gt;.</source>
          <target state="translated">Cuando se proporciona esta bandera, el paquete se lee desde stdin en su lugar y luego se escribe una copia en &amp;lt;pack-file&amp;gt;. Si no se especifica &amp;lt;pack-file&amp;gt;, el paquete se escribe en el directorio objects / pack / del repositorio de Git actual con un nombre predeterminado determinado a partir del contenido del paquete. Si no se especifica &amp;lt;pack-file&amp;gt;, considere usar --keep para evitar una condici&amp;oacute;n de carrera entre este proceso y &lt;code&gt;git repack&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c91915e7d5f6096e68c1652d49f4ac505147354d" translate="yes" xml:space="preserve">
          <source>When this flag is specified, the object names recorded for the paths are not updated. Instead, this option sets/unsets the &quot;assume unchanged&quot; bit for the paths. When the &quot;assume unchanged&quot; bit is on, the user promises not to change the file and allows Git to assume that the working tree file matches what is recorded in the index. If you want to change the working tree file, you need to unset the bit to tell Git. This is sometimes helpful when working with a big project on a filesystem that has very slow lstat(2) system call (e.g. cifs).</source>
          <target state="translated">Cuando se especifica esta bandera,los nombres de los objetos registrados para las rutas no se actualizan.En su lugar,esta opción establece/desestablece el bit &quot;asumir sin cambios&quot; para los caminos.Cuando el bit &quot;assume unchanged&quot; está activado,el usuario promete no cambiar el archivo y permite a Git asumir que el archivo del árbol de trabajo coincide con lo registrado en el índice.Si quieres cambiar el archivo del árbol de trabajo,tienes que desajustar el bit para decírselo a Git.Esto es a veces útil cuando se trabaja con un proyecto grande en un sistema de archivos que tiene una llamada al sistema lstat(2)muy lenta (por ejemplo,cifs).</target>
        </trans-unit>
        <trans-unit id="b1f75c6b9b1b22670befceda22525699cad697f2" translate="yes" xml:space="preserve">
          <source>When this form of &lt;code&gt;git read-tree&lt;/code&gt; returns successfully, you can see which of the &quot;local changes&quot; that you made were carried forward by running &lt;code&gt;git diff-index --cached $M&lt;/code&gt;. Note that this does not necessarily match what &lt;code&gt;git diff-index --cached $H&lt;/code&gt; would have produced before such a two tree merge. This is because of cases 18 and 19 --- if you already had the changes in $M (e.g. maybe you picked it up via e-mail in a patch form), &lt;code&gt;git diff-index
--cached $H&lt;/code&gt; would have told you about the change before this merge, but it would not show in &lt;code&gt;git diff-index --cached $M&lt;/code&gt; output after the two-tree merge.</source>
          <target state="translated">Cuando esta forma de &lt;code&gt;git read-tree&lt;/code&gt; regresa con &amp;eacute;xito, se puede ver cu&amp;aacute;l de los &quot;cambios locales&quot; que ha realizado se llevaron adelante ejecutando &lt;code&gt;git diff-index --cached $M&lt;/code&gt; . Tenga en cuenta que esto no necesariamente coincide con lo que &lt;code&gt;git diff-index --cached $H&lt;/code&gt; habr&amp;iacute;a producido antes de una fusi&amp;oacute;n de dos &amp;aacute;rboles. Esto se debe a los casos 18 y 19 --- si ya ten&amp;iacute;a los cambios en $ M (por ejemplo, tal vez lo recogi&amp;oacute; por correo electr&amp;oacute;nico en un formulario de parche), &lt;code&gt;git diff-index --cached $H&lt;/code&gt; se lo habr&amp;iacute;a dicho sobre el cambio antes de esta fusi&amp;oacute;n, pero no se mostrar&amp;iacute;a en &lt;code&gt;git diff-index --cached $M&lt;/code&gt; output despu&amp;eacute;s de la fusi&amp;oacute;n de dos &amp;aacute;rboles.</target>
        </trans-unit>
        <trans-unit id="a7b5d3881356f9c9c7fd25660fd80f9c16873a97" translate="yes" xml:space="preserve">
          <source>When this option is specified, the behavior is as if a special &lt;code&gt;&amp;lt;token&amp;gt;=&amp;lt;value&amp;gt;&lt;/code&gt; argument were added at the beginning of the command line, where &amp;lt;value&amp;gt; is taken to be the standard output of the specified command with any leading and trailing whitespace trimmed off.</source>
          <target state="translated">Cuando se especifica esta opci&amp;oacute;n, el comportamiento es como si se hubiera agregado un argumento especial &lt;code&gt;&amp;lt;token&amp;gt;=&amp;lt;value&amp;gt;&lt;/code&gt; al comienzo de la l&amp;iacute;nea de comando, donde &amp;lt;valor&amp;gt; se toma como la salida est&amp;aacute;ndar del comando especificado con cualquier espacio en blanco final recortado.</target>
        </trans-unit>
        <trans-unit id="de58814133990da5a575ac12a35ef9b3b981ae4a" translate="yes" xml:space="preserve">
          <source>When this special attribute is read by &lt;code&gt;git credential&lt;/code&gt;, the value is parsed as a URL and treated as if its constituent parts were read (e.g., &lt;code&gt;url=https://example.com&lt;/code&gt; would behave as if &lt;code&gt;protocol=https&lt;/code&gt; and &lt;code&gt;host=example.com&lt;/code&gt; had been provided). This can help callers avoid parsing URLs themselves. Note that any components which are missing from the URL (e.g., there is no username in the example above) will be set to empty; if you want to provide a URL and override some attributes, provide the URL attribute first, followed by any overrides.</source>
          <target state="translated">Cuando la &lt;code&gt;git credential&lt;/code&gt; lee este atributo especial , el valor se analiza como una URL y se trata como si se leyeran sus partes constituyentes (por ejemplo, &lt;code&gt;url=https://example.com&lt;/code&gt; se comportar&amp;iacute;a como si &lt;code&gt;protocol=https&lt;/code&gt; y &lt;code&gt;host=example.com&lt;/code&gt; se ha proporcionado). Esto puede ayudar a las personas que llaman a evitar el an&amp;aacute;lisis de las URL. Tenga en cuenta que cualquier componente que falte en la URL (por ejemplo, no hay un nombre de usuario en el ejemplo anterior) se configurar&amp;aacute; como vac&amp;iacute;o; Si desea proporcionar una URL y anular algunos atributos, proporcione primero el atributo de URL, seguido de las anulaciones.</target>
        </trans-unit>
        <trans-unit id="882eafec7b82da90c1fd3ae7dc7040457d013cf9" translate="yes" xml:space="preserve">
          <source>When trace files are written to a target directory, they will be named according to the last component of the SID (optionally followed by a counter to avoid filename collisions).</source>
          <target state="translated">Cuando los archivos de rastreo se escriben en un directorio de destino,se nombrarán según el último componente del SID (opcionalmente seguido de un contador para evitar colisiones entre archivos).</target>
        </trans-unit>
        <trans-unit id="1771ffd8c74f9f0b2e623ff3c52581b28a17469b" translate="yes" xml:space="preserve">
          <source>When tracking multiple directories (using --stdlayout, --branches, or --tags options), git svn will attempt to connect to the root (or highest allowed level) of the Subversion repository. This default allows better tracking of history if entire projects are moved within a repository, but may cause issues on repositories where read access restrictions are in place. Passing &lt;code&gt;--no-minimize-url&lt;/code&gt; will allow git svn to accept URLs as-is without attempting to connect to a higher level directory. This option is off by default when only one URL/branch is tracked (it would do little good).</source>
          <target state="translated">Al rastrear m&amp;uacute;ltiples directorios (usando las opciones --stdlayout, --branches o --tags), git svn intentar&amp;aacute; conectarse a la ra&amp;iacute;z (o al nivel m&amp;aacute;s alto permitido) del repositorio de Subversion. Este valor predeterminado permite un mejor seguimiento del historial si los proyectos completos se mueven dentro de un repositorio, pero puede causar problemas en los repositorios donde existen restricciones de acceso de lectura. Pasar &lt;code&gt;--no-minimize-url&lt;/code&gt; permitir&amp;aacute; a git svn aceptar las URL como est&amp;aacute;n sin intentar conectarse a un directorio de nivel superior. Esta opci&amp;oacute;n est&amp;aacute; desactivada de forma predeterminada cuando solo se rastrea una URL / rama (no servir&amp;iacute;a de nada).</target>
        </trans-unit>
        <trans-unit id="fce35b3add797f616ba5b3be537b437a03e625f0" translate="yes" xml:space="preserve">
          <source>When true, git will default to using the &lt;code&gt;--sparse&lt;/code&gt; option in &lt;code&gt;git pack-objects&lt;/code&gt; when the &lt;code&gt;--revs&lt;/code&gt; option is present. This algorithm only walks trees that appear in paths that introduce new objects. This can have significant performance benefits when computing a pack to send a small change. However, it is possible that extra objects are added to the pack-file if the included commits contain certain types of direct renames. Default is &lt;code&gt;false&lt;/code&gt; unless &lt;code&gt;feature.experimental&lt;/code&gt; is enabled.</source>
          <target state="translated">Cuando es verdadero, git usar&amp;aacute; por defecto la opci&amp;oacute;n &lt;code&gt;--sparse&lt;/code&gt; en &lt;code&gt;git pack-objects&lt;/code&gt; cuando la opci&amp;oacute;n &lt;code&gt;--revs&lt;/code&gt; est&amp;eacute; presente. Este algoritmo solo recorre &amp;aacute;rboles que aparecen en caminos que introducen nuevos objetos. Esto puede tener importantes beneficios de rendimiento al calcular un paquete para enviar un peque&amp;ntilde;o cambio. Sin embargo, es posible que se agreguen objetos adicionales al archivo del paquete si las confirmaciones incluidas contienen ciertos tipos de cambios de nombre directos. El valor predeterminado es &lt;code&gt;false&lt;/code&gt; menos que &lt;code&gt;feature.experimental&lt;/code&gt; est&amp;eacute; habilitado.</target>
        </trans-unit>
        <trans-unit id="5d73311a3b4a00977d7e2237078b01efb9320bfa" translate="yes" xml:space="preserve">
          <source>When true, git will include a &quot;hash cache&quot; section in the bitmap index (if one is written). This cache can be used to feed git&amp;rsquo;s delta heuristics, potentially leading to better deltas between bitmapped and non-bitmapped objects (e.g., when serving a fetch between an older, bitmapped pack and objects that have been pushed since the last gc). The downside is that it consumes 4 bytes per object of disk space. Defaults to true.</source>
          <target state="translated">Cuando es verdadero, git incluir&amp;aacute; una secci&amp;oacute;n de &quot;cach&amp;eacute; de hash&quot; en el &amp;iacute;ndice de mapa de bits (si hay alguna escrita). Esta cach&amp;eacute; se puede usar para alimentar las heur&amp;iacute;sticas delta de git, lo que podr&amp;iacute;a conducir a mejores deltas entre objetos con mapa de bits y sin mapa de bits (por ejemplo, cuando se realiza una b&amp;uacute;squeda entre un paquete con mapa de bits m&amp;aacute;s antiguo y objetos que se han insertado desde el &amp;uacute;ltimo gc). La desventaja es que consume 4 bytes por objeto de espacio en disco. Por defecto es verdadero.</target>
        </trans-unit>
        <trans-unit id="98f36898b39f3ac14609adb644f7b367554be4b3" translate="yes" xml:space="preserve">
          <source>When true, git will use pack bitmaps (if available) when packing to stdout (e.g., during the server side of a fetch). Defaults to true. You should not generally need to turn this off unless you are debugging pack bitmaps.</source>
          <target state="translated">Cuando sea cierto,git utilizará mapas de bits de paquete (si están disponibles)al empaquetar a stdout (por ejemplo,durante el lado del servidor de un fetch).Por defecto es true.Por lo general,no deberías necesitar desactivarlo a menos que estés depurando mapas de bits de paquete.</target>
        </trans-unit>
        <trans-unit id="3060361b8b64f7f4f15aa5d402b402d65fd1ef21" translate="yes" xml:space="preserve">
          <source>When true, git will write a bitmap index when packing all objects to disk (e.g., when &lt;code&gt;git repack -a&lt;/code&gt; is run). This index can speed up the &quot;counting objects&quot; phase of subsequent packs created for clones and fetches, at the cost of some disk space and extra time spent on the initial repack. This has no effect if multiple packfiles are created. Defaults to true on bare repos, false otherwise.</source>
          <target state="translated">Cuando es verdadero, git escribir&amp;aacute; un &amp;iacute;ndice de mapa de bits al empaquetar todos los objetos en el disco (por ejemplo, cuando se ejecuta &lt;code&gt;git repack -a&lt;/code&gt; ). Este &amp;iacute;ndice puede acelerar la fase de &quot;recuento de objetos&quot; de los paquetes posteriores creados para clones y recuperaciones, a costa de algo de espacio en disco y tiempo adicional dedicado al reempaquetado inicial. Esto no tiene ning&amp;uacute;n efecto si se crean varios archivos de paquete. Por defecto es verdadero en repositorios desnudos, falso en caso contrario.</target>
        </trans-unit>
        <trans-unit id="b7b0c56b83a62c5cf7d9e0b77ba1430747588d7a" translate="yes" xml:space="preserve">
          <source>When true, rebase branches on top of the fetched branch, instead of merging the default branch from the default remote when &quot;git pull&quot; is run. See &quot;branch.&amp;lt;name&amp;gt;.rebase&quot; for setting this on a per-branch basis.</source>
          <target state="translated">Cuando es verdadero, rebase las ramas en la parte superior de la rama recuperada, en lugar de fusionar la rama predeterminada del control remoto predeterminado cuando se ejecuta &quot;git pull&quot;. Consulte &quot;branch. &amp;lt;nombre&amp;gt; .rebase&quot; para configurar esto por rama.</target>
        </trans-unit>
        <trans-unit id="c15c8ba9ac152f7e581087f6ca67eb8a95961a05" translate="yes" xml:space="preserve">
          <source>When true, rebase the branch &amp;lt;name&amp;gt; on top of the fetched branch, instead of merging the default branch from the default remote when &quot;git pull&quot; is run. See &quot;pull.rebase&quot; for doing this in a non branch-specific manner.</source>
          <target state="translated">Cuando es verdadero, reemplace la rama &amp;lt;nombre&amp;gt; encima de la rama recuperada, en lugar de fusionar la rama predeterminada del control remoto predeterminado cuando se ejecuta &quot;git pull&quot;. Consulte &quot;pull.rebase&quot; para hacer esto de una manera no espec&amp;iacute;fica de la rama.</target>
        </trans-unit>
        <trans-unit id="32f2ccfcaf97ac2d1b8fdcbcf4ee46e8d18499a7" translate="yes" xml:space="preserve">
          <source>When true, rebase the current branch on top of the upstream branch after fetching. If there is a remote-tracking branch corresponding to the upstream branch and the upstream branch was rebased since last fetched, the rebase uses that information to avoid rebasing non-local changes.</source>
          <target state="translated">Cuando sea cierto,rebase la rama actual en la parte superior de la rama de arriba después de buscar.Si hay una rama de seguimiento remoto que corresponde a la rama ascendente y la rama ascendente fue rebasada desde la última vez que fue obtenida,la base utiliza esa información para evitar rebasar los cambios no locales.</target>
        </trans-unit>
        <trans-unit id="e3872f2dbeef66b0c7927df02dbbfa3a35c8d12b" translate="yes" xml:space="preserve">
          <source>When two trees are given, it compares the first tree with the second. When a single commit is given, it compares the commit with its parents. The remaining commits, when given, are used as if they are parents of the first commit.</source>
          <target state="translated">Cuando se dan dos árboles,se compara el primer árbol con el segundo.Cuando se da un compromiso único,compara el compromiso con sus padres.Los compromisos restantes,cuando se dan,se usan como si fueran los padres del primer compromiso.</target>
        </trans-unit>
        <trans-unit id="6b17aa5b71b9d47ea9adc71f193314f65da5b538" translate="yes" xml:space="preserve">
          <source>When two trees are specified, the user is telling &lt;code&gt;git read-tree&lt;/code&gt; the following:</source>
          <target state="translated">Cuando se especifican dos &amp;aacute;rboles, el usuario le dice a &lt;code&gt;git read-tree&lt;/code&gt; lo siguiente:</target>
        </trans-unit>
        <trans-unit id="0b1c4e2bbef526c82867f5bdebb7889317040a32" translate="yes" xml:space="preserve">
          <source>When unpacking a corrupt packfile, the command dies at the first corruption. This flag tells it to keep going and make the best effort to recover as many objects as possible.</source>
          <target state="translated">Al desempaquetar un archivo de paquete corrupto,el comando muere a la primera corrupción.Esta bandera le dice que siga adelante y haga el mejor esfuerzo para recuperar tantos objetos como sea posible.</target>
        </trans-unit>
        <trans-unit id="5a3166bdcd39ee71b5c10c4011020b35e1491541" translate="yes" xml:space="preserve">
          <source>When unspecified, all references, after filtering done with --heads and --tags, are shown. When &amp;lt;refs&amp;gt;&amp;hellip;​ are specified, only references matching the given patterns are displayed.</source>
          <target state="translated">Cuando no se especifica, se muestran todas las referencias, despu&amp;eacute;s de filtrar con --heads y --tags. Cuando se especifican &amp;lt;refs&amp;gt;&amp;hellip;, solo se muestran las referencias que coinciden con los patrones dados.</target>
        </trans-unit>
        <trans-unit id="fa62c673234c7d272766be9489825a6b1fba8b8c" translate="yes" xml:space="preserve">
          <source>When used in conjunction with the untracked cache, it can further improve performance by avoiding the cost of scanning the entire working directory looking for new files.</source>
          <target state="translated">Cuando se utiliza junto con la caché no rastreada,puede mejorar aún más el rendimiento evitando el costo de escanear todo el directorio de trabajo en busca de nuevos archivos.</target>
        </trans-unit>
        <trans-unit id="4699c35836688678c5cc37f1963f740eb7581527" translate="yes" xml:space="preserve">
          <source>When used together with &lt;code&gt;-B&lt;/code&gt;, omit also the preimage in the deletion part of a delete/create pair.</source>
          <target state="translated">Cuando se usa junto con &lt;code&gt;-B&lt;/code&gt; , omite tambi&amp;eacute;n la preimagen en la parte de eliminaci&amp;oacute;n de un par eliminar / crear.</target>
        </trans-unit>
        <trans-unit id="81ec7d099c83d3c361cd6013c655cfcd1bc1c8c9" translate="yes" xml:space="preserve">
          <source>When used with -C/-c/--amend options, or when committing after a conflicting cherry-pick, declare that the authorship of the resulting commit now belongs to the committer. This also renews the author timestamp.</source>
          <target state="translated">Cuando se usa con las opciones de modificación -C/-c/--,o cuando se comete después de una elección conflictiva,declarar que la autoría de la comisión resultante pertenece ahora al autor.Esto también renueva la marca de tiempo del autor.</target>
        </trans-unit>
        <trans-unit id="b6df5147373d036993fb497c4d7575874db40c5c" translate="yes" xml:space="preserve">
          <source>When used with -M, a totally-rewritten file is also considered as the source of a rename (usually -M only considers a file that disappeared as the source of a rename), and the number &lt;code&gt;n&lt;/code&gt; controls this aspect of the -B option (defaults to 50%). &lt;code&gt;-B20%&lt;/code&gt; specifies that a change with addition and deletion compared to 20% or more of the file&amp;rsquo;s size are eligible for being picked up as a possible source of a rename to another file.</source>
          <target state="translated">Cuando se usa con -M, un archivo totalmente reescrito tambi&amp;eacute;n se considera como la fuente de un cambio de nombre (generalmente -M solo considera un archivo que desapareci&amp;oacute; como la fuente de un cambio de nombre), y el n&amp;uacute;mero &lt;code&gt;n&lt;/code&gt; controla este aspecto de la opci&amp;oacute;n -B (predeterminado al 50%). &lt;code&gt;-B20%&lt;/code&gt; especifica que un cambio con adici&amp;oacute;n y eliminaci&amp;oacute;n en comparaci&amp;oacute;n con el 20% o m&amp;aacute;s del tama&amp;ntilde;o del archivo es elegible para ser elegido como una posible fuente de cambio de nombre a otro archivo.</target>
        </trans-unit>
        <trans-unit id="372d4fbee27ed51979ac65f708d9745903af8bc0" translate="yes" xml:space="preserve">
          <source>When used with &lt;code&gt;--all&lt;/code&gt; print description for all recognized commands. This is the default.</source>
          <target state="translated">Cuando se usa con &lt;code&gt;--all&lt;/code&gt; imprime la descripci&amp;oacute;n de todos los comandos reconocidos. Este es el predeterminado.</target>
        </trans-unit>
        <trans-unit id="9b2454d94f74e12e4789baf13180d6dd9add197c" translate="yes" xml:space="preserve">
          <source>When used with &lt;code&gt;-ad&lt;/code&gt;, any unreachable objects from existing packs will be appended to the end of the packfile instead of being removed. In addition, any unreachable loose objects will be packed (and their loose counterparts removed).</source>
          <target state="translated">Cuando se usa con &lt;code&gt;-ad&lt;/code&gt; , cualquier objeto inalcanzable de los paquetes existentes se agregar&amp;aacute; al final del archivo de paquete en lugar de eliminarse. Adem&amp;aacute;s, se empaquetar&amp;aacute; cualquier objeto suelto inalcanzable (y se eliminar&amp;aacute;n sus contrapartes sueltas).</target>
        </trans-unit>
        <trans-unit id="f93c22c6857bec96ca286a73d77a732b313ba7be" translate="yes" xml:space="preserve">
          <source>When using --error-unmatch to expand the user supplied &amp;lt;file&amp;gt; (i.e. path pattern) arguments to paths, pretend that paths which were removed in the index since the named &amp;lt;tree-ish&amp;gt; are still present. Using this option with &lt;code&gt;-s&lt;/code&gt; or &lt;code&gt;-u&lt;/code&gt; options does not make any sense.</source>
          <target state="translated">Cuando use --error-unmatch para expandir los argumentos de &amp;lt;file&amp;gt; (es decir, patr&amp;oacute;n de ruta) proporcionados por el usuario a las rutas, finja que las rutas que se eliminaron en el &amp;iacute;ndice ya que el &amp;lt;tree-ish&amp;gt; con nombre todav&amp;iacute;a est&amp;aacute;n presentes. Usar esta opci&amp;oacute;n con las opciones &lt;code&gt;-s&lt;/code&gt; o &lt;code&gt;-u&lt;/code&gt; no tiene ning&amp;uacute;n sentido.</target>
        </trans-unit>
        <trans-unit id="c409615f2beb16e70015d6d6f46a1b549d1fd7f1" translate="yes" xml:space="preserve">
          <source>When using --hash (and not --dereference) the output format is: &lt;code&gt;&amp;lt;SHA-1 ID&amp;gt;&lt;/code&gt;</source>
          <target state="translated">Cuando se usa --hash (y no --dereference), el formato de salida es: &lt;code&gt;&amp;lt;SHA-1 ID&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="081b8dc63c3bf5b426e1b11153b55d3d12af50bd" translate="yes" xml:space="preserve">
          <source>When using &lt;code&gt;--get&lt;/code&gt;, and the requested variable is not found, behave as if &amp;lt;value&amp;gt; were the value assigned to the that variable.</source>
          <target state="translated">Cuando use &lt;code&gt;--get&lt;/code&gt; y no se encuentre la variable solicitada, comp&amp;oacute;rtese como si &amp;lt;value&amp;gt; fuera el valor asignado a esa variable.</target>
        </trans-unit>
        <trans-unit id="a0e35ae72d386768f718c98e1facc75ecb16026b" translate="yes" xml:space="preserve">
          <source>When using &lt;code&gt;git diff&lt;/code&gt; to compare with work tree files, do not consider stat-only change as changed. Instead, silently run &lt;code&gt;git update-index --refresh&lt;/code&gt; to update the cached stat information for paths whose contents in the work tree match the contents in the index. This option defaults to true. Note that this affects only &lt;code&gt;git diff&lt;/code&gt; Porcelain, and not lower level &lt;code&gt;diff&lt;/code&gt; commands such as &lt;code&gt;git diff-files&lt;/code&gt;.</source>
          <target state="translated">Cuando use &lt;code&gt;git diff&lt;/code&gt; para comparar con archivos de &amp;aacute;rbol de trabajo, no considere el cambio solo de estad&amp;iacute;sticas como cambiado. En su lugar, ejecute silenciosamente &lt;code&gt;git update-index --refresh&lt;/code&gt; para actualizar la informaci&amp;oacute;n de estad&amp;iacute;sticas almacenada en cach&amp;eacute; para las rutas cuyo contenido en el &amp;aacute;rbol de trabajo coincida con el contenido en el &amp;iacute;ndice. Esta opci&amp;oacute;n tiene el valor predeterminado verdadero. Tenga en cuenta que esto solo afecta a &lt;code&gt;git diff&lt;/code&gt; Porcelain, y no a los comandos &lt;code&gt;diff&lt;/code&gt; de nivel inferior , como &lt;code&gt;git diff-files&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b88f8d37a4b8b52b11aa1a9190d81927513fc837" translate="yes" xml:space="preserve">
          <source>When using either the ssh:// or file:// transport, the GIT_PROTOCOL environment variable must be set explicitly to include &quot;version=2&quot;.</source>
          <target state="translated">Cuando se utiliza el transporte ssh://o file://,la variable de entorno GIT_PROTOCOL debe establecerse explícitamente para incluir &quot;version=2&quot;.</target>
        </trans-unit>
        <trans-unit id="0ba437f399f8167203a8f1358d574f4341e76291" translate="yes" xml:space="preserve">
          <source>When using multiple --branches or --tags, &lt;code&gt;git svn&lt;/code&gt; does not automatically handle name collisions (for example, if two branches from different paths have the same name, or if a branch and a tag have the same name). In these cases, use &lt;code&gt;init&lt;/code&gt; to set up your Git repository then, before your first &lt;code&gt;fetch&lt;/code&gt;, edit the $GIT_DIR/config file so that the branches and tags are associated with different name spaces. For example:</source>
          <target state="translated">Cuando se utilizan m&amp;uacute;ltiples --branches o --tags, &lt;code&gt;git svn&lt;/code&gt; no maneja autom&amp;aacute;ticamente las colisiones de nombres (por ejemplo, si dos ramas de diferentes rutas tienen el mismo nombre, o si una rama y una etiqueta tienen el mismo nombre). En estos casos, use &lt;code&gt;init&lt;/code&gt; para configurar su repositorio Git y luego, antes de su primera &lt;code&gt;fetch&lt;/code&gt; , edite el archivo $ GIT_DIR / config para que las ramas y etiquetas est&amp;eacute;n asociadas con diferentes espacios de nombres. Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="bb2aee242441b06254e02f3a0a2e1341fe75fee4" translate="yes" xml:space="preserve">
          <source>When using the &lt;code&gt;--verify&lt;/code&gt; flag, the command requires an exact path:</source>
          <target state="translated">Cuando se usa la &lt;code&gt;--verify&lt;/code&gt; , el comando requiere una ruta exacta:</target>
        </trans-unit>
        <trans-unit id="33199341df233e06da35e7d1be5de579f81a31d0" translate="yes" xml:space="preserve">
          <source>When using the &lt;code&gt;refspec&lt;/code&gt; capability, git normally updates the private ref on successful push. This update is disabled when the remote-helper declares the capability &lt;code&gt;no-private-update&lt;/code&gt;.</source>
          <target state="translated">Cuando se usa la capacidad &lt;code&gt;refspec&lt;/code&gt; , git normalmente actualiza la referencia privada cuando se env&amp;iacute;a correctamente. Esta actualizaci&amp;oacute;n est&amp;aacute; deshabilitada cuando el asistente remoto declara la capacidad &lt;code&gt;no-private-update&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9344e268a1ce18a0fd23fc1ab7349b109ba09f95" translate="yes" xml:space="preserve">
          <source>When using the deprecated &lt;code&gt;[section.subsection]&lt;/code&gt; syntax, changing a value will result in adding a multi-line key instead of a change, if the subsection is given with at least one uppercase character. For example when the config looks like</source>
          <target state="translated">Cuando se usa la sintaxis obsoleta &lt;code&gt;[section.subsection]&lt;/code&gt; , cambiar un valor resultar&amp;aacute; en agregar una clave de varias l&amp;iacute;neas en lugar de un cambio, si la subsecci&amp;oacute;n se proporciona con al menos un car&amp;aacute;cter en may&amp;uacute;scula. Por ejemplo, cuando la configuraci&amp;oacute;n se parece a</target>
        </trans-unit>
        <trans-unit id="d587eeb587978498a5260d6dbb9ec4ed92ae5139" translate="yes" xml:space="preserve">
          <source>When using the git:// transport, you can request to use protocol v2 by sending &quot;version=2&quot; as an extra parameter:</source>
          <target state="translated">Cuando se utiliza el transporte git://,se puede solicitar el uso del protocolo v2 enviando &quot;version=2&quot; como un parámetro extra:</target>
        </trans-unit>
        <trans-unit id="32ff889e17de28054dd0cab540306ba1d148a08f" translate="yes" xml:space="preserve">
          <source>When using the http:// or https:// transport a client makes a &quot;smart&quot; info/refs request as described in &lt;code&gt;http-protocol.txt&lt;/code&gt; and requests that v2 be used by supplying &quot;version=2&quot; in the &lt;code&gt;Git-Protocol&lt;/code&gt; header.</source>
          <target state="translated">Cuando se usa el transporte http: // o https: //, un cliente realiza una solicitud de informaci&amp;oacute;n / refs &quot;inteligente&quot; como se describe en &lt;code&gt;http-protocol.txt&lt;/code&gt; y solicita que se use v2 proporcionando &quot;versi&amp;oacute;n = 2&quot; en el &lt;code&gt;Git-Protocol&lt;/code&gt; encabezamiento.</target>
        </trans-unit>
        <trans-unit id="1119c741c1d5ff1dc358a8c521dcf54497e7a91a" translate="yes" xml:space="preserve">
          <source>When we discuss merges we&amp;rsquo;ll also see the special name MERGE_HEAD, which refers to the other branch that we&amp;rsquo;re merging in to the current branch.</source>
          <target state="translated">Cuando discutamos fusiones, tambi&amp;eacute;n veremos el nombre especial MERGE_HEAD, que se refiere a la otra rama en la que estamos fusionando con la rama actual.</target>
        </trans-unit>
        <trans-unit id="26b492dec7c9b7098cc4171f2408a6f7f7e92986" translate="yes" xml:space="preserve">
          <source>When we need to be precise, we will use the word &quot;branch&quot; to mean a line of development, and &quot;branch head&quot; (or just &quot;head&quot;) to mean a reference to the most recent commit on a branch. In the example above, the branch head named &quot;A&quot; is a pointer to one particular commit, but we refer to the line of three commits leading up to that point as all being part of &quot;branch A&quot;.</source>
          <target state="translated">Cuando necesitemos ser precisos,usaremos la palabra &quot;rama&quot; para significar una línea de desarrollo,y &quot;cabeza de la rama&quot; (o simplemente &quot;cabeza&quot;)para significar una referencia al compromiso más reciente en una rama.En el ejemplo anterior,la cabeza de la rama denominada &quot;A&quot; es un puntero a una confirmación particular,pero nos referimos a la línea de tres confirmaciones que conducen a ese punto como si todas formaran parte de la &quot;rama A&quot;.</target>
        </trans-unit>
        <trans-unit id="af865a0e18421a331501b917b6b084d9f08c05af" translate="yes" xml:space="preserve">
          <source>When we want to find out what commits in &lt;code&gt;M&lt;/code&gt; are contaminated with the bug introduced by &lt;code&gt;D&lt;/code&gt; and need fixing, however, we might want to view only the subset of &lt;code&gt;D..M&lt;/code&gt; that are actually descendants of &lt;code&gt;D&lt;/code&gt;, i.e. excluding &lt;code&gt;C&lt;/code&gt; and &lt;code&gt;K&lt;/code&gt;. This is exactly what the &lt;code&gt;--ancestry-path&lt;/code&gt; option does. Applied to the &lt;code&gt;D..M&lt;/code&gt; range, it results in:</source>
          <target state="translated">Cuando queremos averiguar lo que compromete en &lt;code&gt;M&lt;/code&gt; est&amp;aacute;n contaminados con el error introducido por la &lt;code&gt;D&lt;/code&gt; y la fijaci&amp;oacute;n necesidad, sin embargo, lo que se quiere ver s&amp;oacute;lo el subconjunto de &lt;code&gt;D..M&lt;/code&gt; que son en realidad descendientes de &lt;code&gt;D&lt;/code&gt; , es decir, excluyendo &lt;code&gt;C&lt;/code&gt; y &lt;code&gt;K&lt;/code&gt; . Esto es exactamente lo que hace la opci&amp;oacute;n &lt;code&gt;--ancestry-path&lt;/code&gt; . Aplicado a la gama &lt;code&gt;D..M&lt;/code&gt; , da como resultado:</target>
        </trans-unit>
        <trans-unit id="bd2b751f52f03b9f39eaea429dccc385cd6f8cb7" translate="yes" xml:space="preserve">
          <source>When writing a script that is expected to handle random user-input, it is a good practice to make it explicit which arguments are which by placing disambiguating &lt;code&gt;--&lt;/code&gt; at appropriate places.</source>
          <target state="translated">Al escribir un script que se espera para manejar la entrada de usuario al azar, es una pr&amp;aacute;ctica buena para hacerla expl&amp;iacute;cita qu&amp;eacute; argumentos son los que mediante la colocaci&amp;oacute;n de desambiguaci&amp;oacute;n &lt;code&gt;--&lt;/code&gt; en lugares apropiados.</target>
        </trans-unit>
        <trans-unit id="ec9cac719dc2571ad31301b21a571a63039a88c5" translate="yes" xml:space="preserve">
          <source>When writing remote-helpers for decentralized version control systems, it is advised to keep a local copy of the repository to interact with, and to let the private namespace refs point to this local repository, while the refs/remotes namespace is used to track the remote repository.</source>
          <target state="translated">Cuando se escriben ayudas remotas para sistemas de control de versiones descentralizados,se aconseja mantener una copia local del repositorio para interactuar con él,y dejar que los refs del espacio de nombres privado apunten a este repositorio local,mientras que los refs/espacio de nombres remoto se utilizan para rastrear el repositorio remoto.</target>
        </trans-unit>
        <trans-unit id="20c75e316d5f2bc9ee11a82eb08a64c8e94c8af1" translate="yes" xml:space="preserve">
          <source>When writing, the new value is written to the repository local configuration file by default, and options &lt;code&gt;--system&lt;/code&gt;, &lt;code&gt;--global&lt;/code&gt;, &lt;code&gt;--worktree&lt;/code&gt;, &lt;code&gt;--file &amp;lt;filename&amp;gt;&lt;/code&gt; can be used to tell the command to write to that location (you can say &lt;code&gt;--local&lt;/code&gt; but that is the default).</source>
          <target state="translated">Al escribir, el nuevo valor se escribe en el archivo de configuraci&amp;oacute;n local del repositorio de forma predeterminada, y las opciones &lt;code&gt;--system&lt;/code&gt; , &lt;code&gt;--global&lt;/code&gt; , &lt;code&gt;--worktree&lt;/code&gt; , &lt;code&gt;--file &amp;lt;filename&amp;gt;&lt;/code&gt; se pueden usar para decirle al comando que escriba en esa ubicaci&amp;oacute;n ( puede decir &lt;code&gt;--local&lt;/code&gt; pero ese es el valor predeterminado).</target>
        </trans-unit>
        <trans-unit id="cd8a515ddc50bbc57c4721fd114c9828b7d7e56b" translate="yes" xml:space="preserve">
          <source>When you are happy with the state of this change, you can merge it into the &quot;test&quot; branch in preparation to make it public:</source>
          <target state="translated">Cuando esté contento con el estado de este cambio,puede fusionarlo en la rama de &quot;prueba&quot; en preparación para hacerlo público:</target>
        </trans-unit>
        <trans-unit id="778f60f4a64466f8d291144e663a70b4838a03f8" translate="yes" xml:space="preserve">
          <source>When you are in the middle of something, you learn that there are upstream changes that are possibly relevant to what you are doing. When your local changes do not conflict with the changes in the upstream, a simple &lt;code&gt;git pull&lt;/code&gt; will let you move forward.</source>
          <target state="translated">Cuando est&amp;aacute;s en medio de algo, aprendes que hay cambios anteriores que posiblemente sean relevantes para lo que est&amp;aacute;s haciendo. Cuando sus cambios locales no entren en conflicto con los cambios en el flujo ascendente, un simple &lt;code&gt;git pull&lt;/code&gt; le permitir&amp;aacute; seguir adelante.</target>
        </trans-unit>
        <trans-unit id="f6b623b307a4c06027202dc5b8021ae4a369fe95" translate="yes" xml:space="preserve">
          <source>When you are in the middle of something, your boss comes in and demands that you fix something immediately. Traditionally, you would make a commit to a temporary branch to store your changes away, and return to your original branch to make the emergency fix, like this:</source>
          <target state="translated">Cuando estás en medio de algo,tu jefe viene y te exige que arregles algo inmediatamente.Tradicionalmente,te comprometes con una sucursal temporal para guardar tus cambios,y vuelves a tu sucursal original para hacer el arreglo de emergencia,así:</target>
        </trans-unit>
        <trans-unit id="5dab203d26aab56f5ab1012e5091a813403ff2db" translate="yes" xml:space="preserve">
          <source>When you are interested in finding the origin for lines 40-60 for file &lt;code&gt;foo&lt;/code&gt;, you can use the &lt;code&gt;-L&lt;/code&gt; option like so (they mean the same thing &amp;mdash; both ask for 21 lines starting at line 40):</source>
          <target state="translated">Cuando est&amp;eacute; interesado en encontrar el origen de las l&amp;iacute;neas 40-60 para el archivo &lt;code&gt;foo&lt;/code&gt; , puede usar la opci&amp;oacute;n &lt;code&gt;-L&lt;/code&gt; as&amp;iacute; (significan lo mismo: ambas piden 21 l&amp;iacute;neas a partir de la l&amp;iacute;nea 40):</target>
        </trans-unit>
        <trans-unit id="709f7df580972f427522b82ef732f913e20c2078" translate="yes" xml:space="preserve">
          <source>When you are not interested in changes older than version v2.6.18, or changes older than 3 weeks, you can use revision range specifiers similar to &lt;code&gt;git rev-list&lt;/code&gt;:</source>
          <target state="translated">Cuando no est&amp;eacute; interesado en cambios anteriores a la versi&amp;oacute;n v2.6.18, o cambios anteriores a 3 semanas, puede usar especificadores de rango de revisi&amp;oacute;n similares a &lt;code&gt;git rev-list&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="da9f31c43174e26846193d472d4442e982c36d7b" translate="yes" xml:space="preserve">
          <source>When you are working in a small closely knit group, it is not unusual to interact with the same repository over and over again. By defining &lt;code&gt;remote&lt;/code&gt; repository shorthand, you can make it easier:</source>
          <target state="translated">Cuando trabaja en un grupo peque&amp;ntilde;o y muy unido, no es inusual interactuar con el mismo repositorio una y otra vez. Al definir &lt;code&gt;remote&lt;/code&gt; abreviatura del repositorio remoto , puede hacerlo m&amp;aacute;s f&amp;aacute;cil:</target>
        </trans-unit>
        <trans-unit id="9ac50cc4cb199a994adc57ff3704f94a4fe6fd25" translate="yes" xml:space="preserve">
          <source>When you ask &lt;a href=&quot;git-diff&quot;&gt;git-diff[1]&lt;/a&gt; to show the conflicts, it runs a three-way diff between the conflicted merge results in the work tree with stages 2 and 3 to show only hunks whose contents come from both sides, mixed (in other words, when a hunk&amp;rsquo;s merge results come only from stage 2, that part is not conflicting and is not shown. Same for stage 3).</source>
          <target state="translated">Cuando le pides a &lt;a href=&quot;git-diff&quot;&gt;git-diff [1]&lt;/a&gt; que muestre los conflictos, ejecuta una diferencia de tres v&amp;iacute;as entre los resultados de fusi&amp;oacute;n en conflicto en el &amp;aacute;rbol de trabajo con las etapas 2 y 3 para mostrar solo trozos cuyo contenido proviene de ambos lados, mezclado (en otros Es decir, cuando los resultados de la fusi&amp;oacute;n de un trozo provienen solo de la etapa 2, esa parte no est&amp;aacute; en conflicto y no se muestra. Lo mismo para la etapa 3).</target>
        </trans-unit>
        <trans-unit id="3f0add0b9e7571c844c4ae8fb98b59f1c64d874a" translate="yes" xml:space="preserve">
          <source>When you run &lt;code&gt;git checkout &amp;lt;something&amp;gt;&lt;/code&gt; or &lt;code&gt;git switch &amp;lt;something&amp;gt;&lt;/code&gt; and only have one remote, it may implicitly fall back on checking out and tracking e.g. &lt;code&gt;origin/&amp;lt;something&amp;gt;&lt;/code&gt;. This stops working as soon as you have more than one remote with a &lt;code&gt;&amp;lt;something&amp;gt;&lt;/code&gt; reference. This setting allows for setting the name of a preferred remote that should always win when it comes to disambiguation. The typical use-case is to set this to &lt;code&gt;origin&lt;/code&gt;.</source>
          <target state="translated">Cuando ejecuta &lt;code&gt;git checkout &amp;lt;something&amp;gt;&lt;/code&gt; o &lt;code&gt;git switch &amp;lt;something&amp;gt;&lt;/code&gt; y solo tiene un control remoto, puede recurrir impl&amp;iacute;citamente a la verificaci&amp;oacute;n y seguimiento, por ejemplo, &lt;code&gt;origin/&amp;lt;something&amp;gt;&lt;/code&gt; . Esto deja de funcionar tan pronto como tenga m&amp;aacute;s de un control remoto con una referencia &lt;code&gt;&amp;lt;something&amp;gt;&lt;/code&gt; . Esta configuraci&amp;oacute;n permite establecer el nombre de un control remoto preferido que siempre deber&amp;iacute;a ganar cuando se trata de desambiguaci&amp;oacute;n. El caso de uso t&amp;iacute;pico es establecer esto en &lt;code&gt;origin&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9f93e702904ad75a7ffcc41597ebc2474895e0b0" translate="yes" xml:space="preserve">
          <source>When you start a 3-way merge with an index file that is already populated, it is assumed that it represents the state of the files in your work tree, and you can even have files with changes unrecorded in the index file. It is further assumed that this state is &quot;derived&quot; from the stage 2 tree. The 3-way merge refuses to run if it finds an entry in the original index file that does not match stage 2.</source>
          <target state="translated">Cuando se inicia una fusión tripartita con un archivo índice que ya está poblado,se supone que representa el estado de los archivos en su árbol de trabajo,e incluso puede tener archivos con cambios sin registrar en el archivo índice.Se supone además que este estado se &quot;deriva&quot; del árbol de la etapa 2.La fusión de tres vías se niega a funcionar si encuentra una entrada en el archivo índice original que no coincide con la etapa 2.</target>
        </trans-unit>
        <trans-unit id="6831d00e1f830a484b6c5799e343f596bbc55899" translate="yes" xml:space="preserve">
          <source>When you want to just integrate with the work leading to the commit that happens to be tagged, e.g. synchronizing with an upstream release point, you may not want to make an unnecessary merge commit.</source>
          <target state="translated">Cuando se quiere integrar simplemente con el trabajo que conduce a la confirmación que resulta estar etiquetado,por ejemplo,sincronizar con un punto de liberación anterior,puede que no se quiera hacer una confirmación de fusión innecesaria.</target>
        </trans-unit>
        <trans-unit id="2f28e5d62e5a87453e903e81e941382b8ac566c1" translate="yes" xml:space="preserve">
          <source>When you&amp;rsquo;re ready, just run</source>
          <target state="translated">Cuando est&amp;eacute;s listo, solo corre</target>
        </trans-unit>
        <trans-unit id="4aa6b6296b8d97b342099d335ec15bc55634ad41" translate="yes" xml:space="preserve">
          <source>When your topic branch is long-lived, however, your topic branch would end up having many such &quot;Merge from master&quot; commits on it, which would unnecessarily clutter the development history. Readers of the Linux kernel mailing list may remember that Linus complained about such too frequent test merges when a subsystem maintainer asked to pull from a branch full of &quot;useless merges&quot;.</source>
          <target state="translated">Sin embargo,cuando la rama temática es de larga duración,terminaría teniendo muchos compromisos de este tipo de &quot;Fusión con el maestro&quot;,lo que desordenaría innecesariamente la historia del desarrollo.Los lectores de la lista de correo del núcleo de Linux pueden recordar que Linus se quejó de tales fusiones de prueba demasiado frecuentes cuando un mantenedor del subsistema pidió que se retirara de una rama llena de &quot;fusiones inútiles&quot;.</target>
        </trans-unit>
        <trans-unit id="bd4128428344ae6c28977b2bc5cf00953da1175f" translate="yes" xml:space="preserve">
          <source>When your topic branch modifies an overlapping area that your master branch (or upstream) touched since your topic branch forked from it, you may want to test it with the latest master, even before your topic branch is ready to be pushed upstream:</source>
          <target state="translated">Cuando la rama del tema modifica un área de superposición que la rama maestra (o ascendente)tocó desde que la rama del tema se bifurcó de ella,es posible que quieras probarla con la última maestra,incluso antes de que la rama del tema esté lista para ser empujada hacia arriba:</target>
        </trans-unit>
        <trans-unit id="4f4eaf255ffc69df0530167a4810c74e9370cd43" translate="yes" xml:space="preserve">
          <source>Whenever possible, section headings should clearly describe the task they explain how to do, in language that requires no more knowledge than necessary: for example, &quot;importing patches into a project&quot; rather than &quot;the &lt;code&gt;git am&lt;/code&gt; command&quot;</source>
          <target state="translated">Siempre que sea posible, los encabezados de las secciones deben describir claramente la tarea que explican c&amp;oacute;mo hacer, en un lenguaje que no requiera m&amp;aacute;s conocimientos de los necesarios: por ejemplo, &quot;importar parches a un proyecto&quot; en lugar de &quot;el comando &lt;code&gt;git am&lt;/code&gt; &quot;.</target>
        </trans-unit>
        <trans-unit id="11683716a14fb2e59c3ad4d48a607606706a0329" translate="yes" xml:space="preserve">
          <source>Where &quot;oldsha1&quot; is the 40 character hexadecimal value previously stored in &amp;lt;ref&amp;gt;, &quot;newsha1&quot; is the 40 character hexadecimal value of &amp;lt;newvalue&amp;gt; and &quot;committer&quot; is the committer&amp;rsquo;s name, email address and date in the standard Git committer ident format.</source>
          <target state="translated">Donde &quot;oldsha1&quot; es el valor hexadecimal de 40 caracteres almacenado previamente en &amp;lt;ref&amp;gt;, &quot;newsha1&quot; es el valor hexadecimal de 40 caracteres de &amp;lt;newvalue&amp;gt; y &quot;committer&quot; es el nombre, la direcci&amp;oacute;n de correo electr&amp;oacute;nico y la fecha del autor de la confirmaci&amp;oacute;n en el formato est&amp;aacute;ndar de identificaci&amp;oacute;n de confirmador de Git. .</target>
        </trans-unit>
        <trans-unit id="9a6682bd90b10ed7b65387d46ac6e3098ba208ce" translate="yes" xml:space="preserve">
          <source>Where all fields are as described above and &quot;message&quot; is the value supplied to the -m option.</source>
          <target state="translated">Donde todos los campos son como los descritos anteriormente y &quot;mensaje&quot; es el valor suministrado a la opción -m.</target>
        </trans-unit>
        <trans-unit id="1047cdb3a9504c1e49ba180691c6de133fb29736" translate="yes" xml:space="preserve">
          <source>Where to create the Git repository. If not provided, the last component in the p4 depot path is used to create a new directory.</source>
          <target state="translated">Dónde crear el depósito de Git.Si no se proporciona,el último componente de la ruta del depósito p4 se utiliza para crear un nuevo directorio.</target>
        </trans-unit>
        <trans-unit id="de8afe671960d7a395defa2e40a80901d96e2485" translate="yes" xml:space="preserve">
          <source>Whereas &lt;code&gt;--batch-check='%(objectname) %(objecttype)'&lt;/code&gt; would produce:</source>
          <target state="translated">Mientras que &lt;code&gt;--batch-check='%(objectname) %(objecttype)'&lt;/code&gt; producir&amp;iacute;a:</target>
        </trans-unit>
        <trans-unit id="92669e9b8b127c2ba15691914d72dae97b880d0d" translate="yes" xml:space="preserve">
          <source>Whether Git detects directory renames, affecting what happens at merge time to new files added to a directory on one side of history when that directory was renamed on the other side of history. If merge.directoryRenames is set to &quot;false&quot;, directory rename detection is disabled, meaning that such new files will be left behind in the old directory. If set to &quot;true&quot;, directory rename detection is enabled, meaning that such new files will be moved into the new directory. If set to &quot;conflict&quot;, a conflict will be reported for such paths. If merge.renames is false, merge.directoryRenames is ignored and treated as false. Defaults to &quot;conflict&quot;.</source>
          <target state="translated">Si Git detecta renombramientos de directorios,afectando lo que sucede en el momento de la fusión a los nuevos archivos añadidos a un directorio en un lado de la historia cuando ese directorio fue renombrado en el otro lado de la historia.Si merge.directoryRenames está configurado como &quot;falso&quot;,la detección de renombramiento de directorios se desactiva,lo que significa que esos nuevos archivos se quedarán en el directorio antiguo.Si está configurado en &quot;true&quot;,la detección de cambios de directorio está activada,lo que significa que esos nuevos archivos se moverán al nuevo directorio.Si se establece en &quot;conflicto&quot;,se informará de un conflicto para dichas rutas.Si merge.renames es falso,merge.directoryRenames se ignora y se trata como falso.El valor predeterminado es &quot;conflict&quot;.</target>
        </trans-unit>
        <trans-unit id="6720b94e3bf2c12c61b3c14de0415d18239394a0" translate="yes" xml:space="preserve">
          <source>Whether Git detects renames. If set to &quot;false&quot;, rename detection is disabled. If set to &quot;true&quot;, basic rename detection is enabled. Defaults to the value of diff.renames.</source>
          <target state="translated">Si Git detecta renombramientos.Si está configurado como &quot;falso&quot;,la detección de renombramiento está desactivada.Si está configurado en &quot;true&quot;,la detección básica de renombramiento está habilitada.El valor por defecto es el de diff.renames.</target>
        </trans-unit>
        <trans-unit id="d1f68ec7a1f81e21d54ab2e76eaccedf11117ff8" translate="yes" xml:space="preserve">
          <source>Whether and how Git detects renames in &lt;a href=&quot;git-status&quot;&gt;git-status[1]&lt;/a&gt; and &lt;a href=&quot;git-commit&quot;&gt;git-commit[1]&lt;/a&gt; . If set to &quot;false&quot;, rename detection is disabled. If set to &quot;true&quot;, basic rename detection is enabled. If set to &quot;copies&quot; or &quot;copy&quot;, Git will detect copies, as well. Defaults to the value of diff.renames.</source>
          <target state="translated">Si Git detecta cambios de nombre en &lt;a href=&quot;git-status&quot;&gt;git-status [1]&lt;/a&gt; y &lt;a href=&quot;git-commit&quot;&gt;git-commit [1]&lt;/a&gt; y c&amp;oacute;mo lo hace . Si se establece en &quot;falso&quot;, la detecci&amp;oacute;n de cambio de nombre est&amp;aacute; desactivada. Si se establece en &quot;verdadero&quot;, se habilita la detecci&amp;oacute;n b&amp;aacute;sica de cambio de nombre. Si se establece en &quot;copias&quot; o &quot;copiar&quot;, Git tambi&amp;eacute;n detectar&amp;aacute; copias. Por defecto, el valor de diff.renames.</target>
        </trans-unit>
        <trans-unit id="cd914284b278d491020fec9d972b776a56df2f14" translate="yes" xml:space="preserve">
          <source>Whether and how Git detects renames. If set to &quot;false&quot;, rename detection is disabled. If set to &quot;true&quot;, basic rename detection is enabled. If set to &quot;copies&quot; or &quot;copy&quot;, Git will detect copies, as well. Defaults to true. Note that this affects only &lt;code&gt;git diff&lt;/code&gt; Porcelain like &lt;a href=&quot;git-diff&quot;&gt;git-diff[1]&lt;/a&gt; and &lt;a href=&quot;git-log&quot;&gt;git-log[1]&lt;/a&gt;, and not lower level commands such as &lt;a href=&quot;git-diff-files&quot;&gt;git-diff-files[1]&lt;/a&gt;.</source>
          <target state="translated">Si Git detecta cambios de nombre y c&amp;oacute;mo lo hace. Si se establece en &quot;falso&quot;, la detecci&amp;oacute;n de cambio de nombre est&amp;aacute; desactivada. Si se establece en &quot;verdadero&quot;, se habilita la detecci&amp;oacute;n b&amp;aacute;sica de cambio de nombre. Si se establece en &quot;copias&quot; o &quot;copiar&quot;, Git tambi&amp;eacute;n detectar&amp;aacute; copias. Por defecto es verdadero. Tenga en cuenta que esto solo afecta a &lt;code&gt;git diff&lt;/code&gt; Porcelain como &lt;a href=&quot;git-diff&quot;&gt;git-diff [1]&lt;/a&gt; y &lt;a href=&quot;git-log&quot;&gt;git-log [1]&lt;/a&gt; , y no a comandos de nivel inferior como &lt;a href=&quot;git-diff-files&quot;&gt;git-diff-files [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2329b3f81f31d1e7aac7efc37e396ae5ccc9b5fe" translate="yes" xml:space="preserve">
          <source>Whether git should follow HTTP redirects. If set to &lt;code&gt;true&lt;/code&gt;, git will transparently follow any redirect issued by a server it encounters. If set to &lt;code&gt;false&lt;/code&gt;, git will treat all redirects as errors. If set to &lt;code&gt;initial&lt;/code&gt;, git will follow redirects only for the initial request to a remote, but not for subsequent follow-up HTTP requests. Since git uses the redirected URL as the base for the follow-up requests, this is generally sufficient. The default is &lt;code&gt;initial&lt;/code&gt;.</source>
          <target state="translated">Si git debe seguir las redirecciones HTTP. Si se establece en &lt;code&gt;true&lt;/code&gt; , git seguir&amp;aacute; de forma transparente cualquier redireccionamiento emitido por un servidor que encuentre. Si se establece en &lt;code&gt;false&lt;/code&gt; , git tratar&amp;aacute; todas las redirecciones como errores. Si se establece en &lt;code&gt;initial&lt;/code&gt; , git seguir&amp;aacute; las redirecciones solo para la solicitud inicial a un control remoto, pero no para las solicitudes HTTP de seguimiento posteriores. Dado que git usa la URL redirigida como base para las solicitudes de seguimiento, esto generalmente es suficiente. El valor predeterminado es &lt;code&gt;initial&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cd0092aedf4252969afafd8803ba8faf98999493" translate="yes" xml:space="preserve">
          <source>Whether that update is allowed without &lt;code&gt;--force&lt;/code&gt; depends on the ref namespace it&amp;rsquo;s being fetched to, the type of object being fetched, and whether the update is considered to be a fast-forward. Generally, the same rules apply for fetching as when pushing, see the &lt;code&gt;&amp;lt;refspec&amp;gt;...&lt;/code&gt; section of &lt;a href=&quot;git-push&quot;&gt;git-push[1]&lt;/a&gt; for what those are. Exceptions to those rules particular to &lt;code&gt;git fetch&lt;/code&gt; are noted below.</source>
          <target state="translated">Si esa actualizaci&amp;oacute;n est&amp;aacute; permitida sin &lt;code&gt;--force&lt;/code&gt; depende del espacio de nombres de referencia al que se est&amp;aacute; obteniendo, el tipo de objeto que se est&amp;aacute; buscando y si la actualizaci&amp;oacute;n se considera un avance r&amp;aacute;pido. Generalmente, se aplican las mismas reglas para buscar que cuando se empuja, vea la &lt;code&gt;&amp;lt;refspec&amp;gt;...&lt;/code&gt; de &lt;a href=&quot;git-push&quot;&gt;git-push [1]&lt;/a&gt; para saber cu&amp;aacute;les son. Las excepciones a esas reglas particulares de &lt;code&gt;git fetch&lt;/code&gt; se indican a continuaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="9c31395d6226db0f96527cf13d7284a32596aaef" translate="yes" xml:space="preserve">
          <source>Whether the CVS server interface is enabled for this repository. See &lt;a href=&quot;git-cvsserver&quot;&gt;git-cvsserver[1]&lt;/a&gt;.</source>
          <target state="translated">Si la interfaz del servidor CVS est&amp;aacute; habilitada para este repositorio. Consulte &lt;a href=&quot;git-cvsserver&quot;&gt;git-cvsserver [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e99c94b5e67663cef6460c2b09cda34348e975de" translate="yes" xml:space="preserve">
          <source>Whether to enable the grouping of projects by category on the project list page. The category of a project is determined by the &lt;code&gt;$GIT_DIR/category&lt;/code&gt; file or the &lt;code&gt;gitweb.category&lt;/code&gt; variable in each repository&amp;rsquo;s configuration. Disabled by default (set to 0).</source>
          <target state="translated">Si habilitar la agrupaci&amp;oacute;n de proyectos por categor&amp;iacute;a en la p&amp;aacute;gina de lista de proyectos. La categor&amp;iacute;a de un proyecto est&amp;aacute; determinada por el &lt;code&gt;$GIT_DIR/category&lt;/code&gt; o la variable &lt;code&gt;gitweb.category&lt;/code&gt; en la configuraci&amp;oacute;n de cada repositorio. Desactivado de forma predeterminada (establecido en 0).</target>
        </trans-unit>
        <trans-unit id="be60442dc9a2bb750c3ffb3e91f602fa8cf454b7" translate="yes" xml:space="preserve">
          <source>Whether to print the diffstat between ORIG_HEAD and the merge result at the end of the merge. True by default.</source>
          <target state="translated">Si se imprime la diferencia entre ORIG_HEAD y el resultado de la fusión al final de la misma.Cierto por defecto.</target>
        </trans-unit>
        <trans-unit id="e6d010b4fa5fb27d92c64dc2f59319c4e77b544c" translate="yes" xml:space="preserve">
          <source>Whether to show a diffstat of what changed upstream since the last rebase. False by default.</source>
          <target state="translated">Si mostrar o no un diffstat de lo que ha cambiado río arriba desde la última base.Falso por defecto.</target>
        </trans-unit>
        <trans-unit id="2153c59644d7df4b2ed210d8ef453074b1a6c2ac" translate="yes" xml:space="preserve">
          <source>Whether to skip reading settings from the system-wide $(prefix)/etc/gitconfig file. See &lt;a href=&quot;git&quot;&gt;git[1]&lt;/a&gt; for details.</source>
          <target state="translated">Si se debe omitir la configuraci&amp;oacute;n de lectura del archivo $ (prefijo) / etc / gitconfig de todo el sistema. Consulte &lt;a href=&quot;git&quot;&gt;git [1]&lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="7c8173d7da296bd9c5f5aef35e3d739c8852bc79" translate="yes" xml:space="preserve">
          <source>Whether to skip reading settings from the system-wide &lt;code&gt;$(prefix)/etc/gitconfig&lt;/code&gt; file. This environment variable can be used along with &lt;code&gt;$HOME&lt;/code&gt; and &lt;code&gt;$XDG_CONFIG_HOME&lt;/code&gt; to create a predictable environment for a picky script, or you can set it temporarily to avoid using a buggy &lt;code&gt;/etc/gitconfig&lt;/code&gt; file while waiting for someone with sufficient permissions to fix it.</source>
          <target state="translated">Si se debe omitir la configuraci&amp;oacute;n de lectura del archivo &lt;code&gt;$(prefix)/etc/gitconfig&lt;/code&gt; sistema. Esta variable de entorno se puede utilizar junto con &lt;code&gt;$HOME&lt;/code&gt; y &lt;code&gt;$XDG_CONFIG_HOME&lt;/code&gt; para crear un entorno predecible para un script exigente, o puede configurarlo temporalmente para evitar el uso de un &lt;code&gt;/etc/gitconfig&lt;/code&gt; mientras espera a que alguien con permisos suficientes lo arregle.</target>
        </trans-unit>
        <trans-unit id="488ddc0ec5d5c663a8e8059a323ed70db5316b78" translate="yes" xml:space="preserve">
          <source>Whether to use ANSI escape sequences to add color to patches. If this is set to &lt;code&gt;always&lt;/code&gt;, &lt;a href=&quot;git-diff&quot;&gt;git-diff[1]&lt;/a&gt;, &lt;a href=&quot;git-log&quot;&gt;git-log[1]&lt;/a&gt;, and &lt;a href=&quot;git-show&quot;&gt;git-show[1]&lt;/a&gt; will use color for all patches. If it is set to &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;auto&lt;/code&gt;, those commands will only use color when output is to the terminal. If unset, then the value of &lt;code&gt;color.ui&lt;/code&gt; is used (&lt;code&gt;auto&lt;/code&gt; by default).</source>
          <target state="translated">Si usar secuencias de escape ANSI para agregar color a los parches. Si se establece en &lt;code&gt;always&lt;/code&gt; , &lt;a href=&quot;git-diff&quot;&gt;git-diff [1]&lt;/a&gt; , &lt;a href=&quot;git-log&quot;&gt;git-log [1]&lt;/a&gt; y &lt;a href=&quot;git-show&quot;&gt;git-show [1]&lt;/a&gt; usar&amp;aacute;n color para todos los parches. Si se establece en &lt;code&gt;true&lt;/code&gt; o &lt;code&gt;auto&lt;/code&gt; m&amp;aacute;tico , esos comandos solo usar&amp;aacute;n color cuando la salida sea en el terminal. Si no est&amp;aacute; configurado, se utiliza el valor de &lt;code&gt;color.ui&lt;/code&gt; ( &lt;code&gt;auto&lt;/code&gt; m&amp;aacute;tico por defecto).</target>
        </trans-unit>
        <trans-unit id="21386b2036d855c8d8dd6eb4c84085329fcf2561" translate="yes" xml:space="preserve">
          <source>Whether to use empty blobs as rename source.</source>
          <target state="translated">Si usar o no las glóbulos vacíos como fuente de renombre.</target>
        </trans-unit>
        <trans-unit id="63ea1a80cc99dbbdec2d362a1b57aa7468c9ed6d" translate="yes" xml:space="preserve">
          <source>Whether to verify the SSL certificate when fetching or pushing over HTTPS. Defaults to true. Can be overridden by the &lt;code&gt;GIT_SSL_NO_VERIFY&lt;/code&gt; environment variable.</source>
          <target state="translated">Ya sea para verificar el certificado SSL al obtener o enviar HTTPS. Por defecto es verdadero. Puede ser reemplazado por la variable de entorno &lt;code&gt;GIT_SSL_NO_VERIFY&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ec9fdb5354be84561f27023760593b27a86cd126" translate="yes" xml:space="preserve">
          <source>Which file to place a pattern in depends on how the pattern is meant to be used.</source>
          <target state="translated">El archivo en el que colocar un patrón depende de la forma en que el patrón debe ser utilizado.</target>
        </trans-unit>
        <trans-unit id="9342c5a7ca74e113fca6826c098da1e9dea46c59" translate="yes" xml:space="preserve">
          <source>Which merge strategy to choose by default when resolving notes conflicts. Must be one of &lt;code&gt;manual&lt;/code&gt;, &lt;code&gt;ours&lt;/code&gt;, &lt;code&gt;theirs&lt;/code&gt;, &lt;code&gt;union&lt;/code&gt;, or &lt;code&gt;cat_sort_uniq&lt;/code&gt;. Defaults to &lt;code&gt;manual&lt;/code&gt;. See &quot;NOTES MERGE STRATEGIES&quot; section above for more information on each strategy.</source>
          <target state="translated">Qu&amp;eacute; estrategia de combinaci&amp;oacute;n elegir de forma predeterminada al resolver conflictos de notas. Debe ser &lt;code&gt;manual&lt;/code&gt; , &lt;code&gt;ours&lt;/code&gt; , de &lt;code&gt;theirs&lt;/code&gt; , &lt;code&gt;union&lt;/code&gt; o &lt;code&gt;cat_sort_uniq&lt;/code&gt; . Por defecto es &lt;code&gt;manual&lt;/code&gt; . Consulte la secci&amp;oacute;n &quot;NOTAS FUSI&amp;Oacute;N DE ESTRATEGIAS&quot; m&amp;aacute;s arriba para obtener m&amp;aacute;s informaci&amp;oacute;n sobre cada estrategia.</target>
        </trans-unit>
        <trans-unit id="7dd75dabb694bc7182031b6cdb5c605283f3ff3a" translate="yes" xml:space="preserve">
          <source>Which merge strategy to choose by default when resolving notes conflicts. Must be one of &lt;code&gt;manual&lt;/code&gt;, &lt;code&gt;ours&lt;/code&gt;, &lt;code&gt;theirs&lt;/code&gt;, &lt;code&gt;union&lt;/code&gt;, or &lt;code&gt;cat_sort_uniq&lt;/code&gt;. Defaults to &lt;code&gt;manual&lt;/code&gt;. See &quot;NOTES MERGE STRATEGIES&quot; section of &lt;a href=&quot;git-notes&quot;&gt;git-notes[1]&lt;/a&gt; for more information on each strategy.</source>
          <target state="translated">Qu&amp;eacute; estrategia de combinaci&amp;oacute;n elegir de forma predeterminada al resolver conflictos de notas. Debe ser &lt;code&gt;manual&lt;/code&gt; , &lt;code&gt;ours&lt;/code&gt; , de &lt;code&gt;theirs&lt;/code&gt; , &lt;code&gt;union&lt;/code&gt; o &lt;code&gt;cat_sort_uniq&lt;/code&gt; . Por defecto es &lt;code&gt;manual&lt;/code&gt; . Consulte la secci&amp;oacute;n &quot;NOTAS FUSI&amp;Oacute;N DE ESTRATEGIAS&quot; de &lt;a href=&quot;git-notes&quot;&gt;git-notes [1]&lt;/a&gt; para obtener m&amp;aacute;s informaci&amp;oacute;n sobre cada estrategia.</target>
        </trans-unit>
        <trans-unit id="9bd73c0d97037644e549ed3fed8d2491f5cfc8e0" translate="yes" xml:space="preserve">
          <source>Which merge strategy to choose when doing a notes merge into refs/notes/&amp;lt;name&amp;gt;. This overrides the more general &quot;notes.mergeStrategy&quot;. See the &quot;NOTES MERGE STRATEGIES&quot; section above for more information on each available strategy.</source>
          <target state="translated">&amp;iquest;Qu&amp;eacute; estrategia de combinaci&amp;oacute;n elegir al hacer una combinaci&amp;oacute;n de notas en referencias / notas / &amp;lt;nombre&amp;gt;? Esto anula el &quot;notes.mergeStrategy&quot; m&amp;aacute;s general. Consulte la secci&amp;oacute;n &quot;NOTAS DE FUSI&amp;Oacute;N DE ESTRATEGIAS&quot; anterior para obtener m&amp;aacute;s informaci&amp;oacute;n sobre cada estrategia disponible.</target>
        </trans-unit>
        <trans-unit id="f202b61699020bcfa082fe897d7a8560aea486a1" translate="yes" xml:space="preserve">
          <source>Which merge strategy to choose when doing a notes merge into refs/notes/&amp;lt;name&amp;gt;. This overrides the more general &quot;notes.mergeStrategy&quot;. See the &quot;NOTES MERGE STRATEGIES&quot; section in &lt;a href=&quot;git-notes&quot;&gt;git-notes[1]&lt;/a&gt; for more information on the available strategies.</source>
          <target state="translated">&amp;iquest;Qu&amp;eacute; estrategia de combinaci&amp;oacute;n elegir al hacer una combinaci&amp;oacute;n de notas en referencias / notas / &amp;lt;nombre&amp;gt;? Esto anula el &quot;notes.mergeStrategy&quot; m&amp;aacute;s general. Consulte la secci&amp;oacute;n &quot;NOTAS FUSI&amp;Oacute;N DE ESTRATEGIAS&quot; en &lt;a href=&quot;git-notes&quot;&gt;git-notes [1]&lt;/a&gt; para obtener m&amp;aacute;s informaci&amp;oacute;n sobre las estrategias disponibles.</target>
        </trans-unit>
        <trans-unit id="556a322f94dd1e45943ded0ebea9906e93ca0c80" translate="yes" xml:space="preserve">
          <source>Which ref (or refs, if a glob or specified more than once), in addition to the default set by &lt;code&gt;core.notesRef&lt;/code&gt; or &lt;code&gt;GIT_NOTES_REF&lt;/code&gt;, to read notes from when showing commit messages with the &lt;code&gt;git log&lt;/code&gt; family of commands. This setting can be overridden on the command line or by the &lt;code&gt;GIT_NOTES_DISPLAY_REF&lt;/code&gt; environment variable. See &lt;a href=&quot;git-log&quot;&gt;git-log[1]&lt;/a&gt;.</source>
          <target state="translated">Qu&amp;eacute; ref (o refs, si es un glob o se especifica m&amp;aacute;s de una vez), adem&amp;aacute;s del conjunto predeterminado por &lt;code&gt;core.notesRef&lt;/code&gt; o &lt;code&gt;GIT_NOTES_REF&lt;/code&gt; , para leer notas cuando se muestran mensajes de confirmaci&amp;oacute;n con la familia de comandos &lt;code&gt;git log&lt;/code&gt; . Esta configuraci&amp;oacute;n se puede anular en la l&amp;iacute;nea de comandos o mediante la variable de entorno &lt;code&gt;GIT_NOTES_DISPLAY_REF&lt;/code&gt; . Consulte &lt;a href=&quot;git-log&quot;&gt;git-log [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="08e8ee8d98ea130471cc368fbf1a571f3d29a34d" translate="yes" xml:space="preserve">
          <source>Which ref to manipulate notes from, instead of &lt;code&gt;refs/notes/commits&lt;/code&gt;. This overrides the &lt;code&gt;core.notesRef&lt;/code&gt; setting.</source>
          <target state="translated">De qu&amp;eacute; referencia manipular notas, en lugar de &lt;code&gt;refs/notes/commits&lt;/code&gt; . Esto anula la configuraci&amp;oacute;n &lt;code&gt;core.notesRef&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="180171a89f79828ca3aedfa4194b8ff07f802f3f" translate="yes" xml:space="preserve">
          <source>Which refs, in addition to the default set by &lt;code&gt;core.notesRef&lt;/code&gt; or &lt;code&gt;GIT_NOTES_REF&lt;/code&gt;, to read notes from when showing commit messages with the &lt;code&gt;log&lt;/code&gt; family of commands. See &lt;a href=&quot;git-notes&quot;&gt;git-notes[1]&lt;/a&gt;.</source>
          <target state="translated">Qu&amp;eacute; referencias, adem&amp;aacute;s del conjunto predeterminado por &lt;code&gt;core.notesRef&lt;/code&gt; o &lt;code&gt;GIT_NOTES_REF&lt;/code&gt; , para leer notas cuando se muestran mensajes de confirmaci&amp;oacute;n con la familia de comandos de &lt;code&gt;log&lt;/code&gt; . Ver &lt;a href=&quot;git-notes&quot;&gt;git-notes [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f4dbbdac6096ee85d080e618f1dfec3eb7804653" translate="yes" xml:space="preserve">
          <source>Which will add the following to a file named &lt;code&gt;.gitconfig&lt;/code&gt; in your home directory:</source>
          <target state="translated">Lo cual agregar&amp;aacute; lo siguiente a un archivo llamado &lt;code&gt;.gitconfig&lt;/code&gt; en su directorio de inicio:</target>
        </trans-unit>
        <trans-unit id="0b383fc769f1bfb4acb136b5be3ea84e9742db33" translate="yes" xml:space="preserve">
          <source>Which would result in:</source>
          <target state="translated">Lo que resultaría en:</target>
        </trans-unit>
        <trans-unit id="5efe59371f7c539c77a16fb753d65287a4a1a881" translate="yes" xml:space="preserve">
          <source>While &lt;code&gt;$GIT_DIR/info/sparse-checkout&lt;/code&gt; is usually used to specify what files are in, you can also specify what files are &lt;code&gt;not&lt;/code&gt; in, using negate patterns. For example, to remove the file &lt;code&gt;unwanted&lt;/code&gt;:</source>
          <target state="translated">Si bien &lt;code&gt;$GIT_DIR/info/sparse-checkout&lt;/code&gt; se usa generalmente para especificar en qu&amp;eacute; archivos est&amp;aacute;n, tambi&amp;eacute;n puede especificar qu&amp;eacute; archivos &lt;code&gt;not&lt;/code&gt; est&amp;aacute;n , usando patrones de negaci&amp;oacute;n. Por ejemplo, para eliminar el archivo &lt;code&gt;unwanted&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="133c634c89411bc7bbb73a5aa8f4cda72b5442c2" translate="yes" xml:space="preserve">
          <source>While &lt;code&gt;$GIT_DIR/info/sparse-checkout&lt;/code&gt; is usually used to specify what files are included, you can also specify what files are &lt;code&gt;not&lt;/code&gt; included, using negative patterns. For example, to remove the file &lt;code&gt;unwanted&lt;/code&gt;:</source>
          <target state="translated">Si bien &lt;code&gt;$GIT_DIR/info/sparse-checkout&lt;/code&gt; se usa generalmente para especificar qu&amp;eacute; archivos se incluyen, tambi&amp;eacute;n puede especificar qu&amp;eacute; archivos &lt;code&gt;not&lt;/code&gt; incluyen, usando patrones negativos. Por ejemplo, para eliminar el archivo &lt;code&gt;unwanted&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="118bfe73a3b1ef14dd8bb7fedadb7cb55f01bcfb" translate="yes" xml:space="preserve">
          <source>While &lt;code&gt;&amp;lt;rev&amp;gt;^&amp;lt;n&amp;gt;&lt;/code&gt; was about specifying a single commit parent, these three notations also consider its parents. For example you can say &lt;code&gt;HEAD^2^@&lt;/code&gt;, however you cannot say &lt;code&gt;HEAD^@^2&lt;/code&gt;.</source>
          <target state="translated">Mientras que &lt;code&gt;&amp;lt;rev&amp;gt;^&amp;lt;n&amp;gt;&lt;/code&gt; se trataba de especificar un solo padre de confirmaci&amp;oacute;n, estas tres notaciones tambi&amp;eacute;n consideran sus padres. Por ejemplo, puede decir &lt;code&gt;HEAD^2^@&lt;/code&gt; , sin embargo, no puede decir &lt;code&gt;HEAD^@^2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="92e92ccd1a34f0875d32051d1b819b76c11daddf" translate="yes" xml:space="preserve">
          <source>While &lt;code&gt;git archimport&lt;/code&gt; will try to create sensible branch names for the archives that it imports, it is also possible to specify Git branch names manually. To do so, write a Git branch name after each &amp;lt;archive/branch&amp;gt; parameter, separated by a colon. This way, you can shorten the Arch branch names and convert Arch jargon to Git jargon, for example mapping a &quot;PROJECT{litdd}devo{litdd}VERSION&quot; branch to &quot;master&quot;.</source>
          <target state="translated">Si bien &lt;code&gt;git archimport&lt;/code&gt; intentar&amp;aacute; crear nombres de rama sensibles para los archivos que importa, tambi&amp;eacute;n es posible especificar los nombres de rama de Git manualmente. Para hacerlo, escriba un nombre de rama de Git despu&amp;eacute;s de cada par&amp;aacute;metro de &amp;lt;archivo / rama&amp;gt;, separados por dos puntos. De esta forma, puede acortar los nombres de las ramas de Arch y convertir la jerga de Arch a la jerga de Git, por ejemplo, mapeando una rama &quot;PROJECT {litdd} devo {litdd} VERSION&quot; a &quot;master&quot;.</target>
        </trans-unit>
        <trans-unit id="6e3c7753b36510ea58174f6c4603b4398587f401" translate="yes" xml:space="preserve">
          <source>While &lt;code&gt;git log -G&quot;regexec\(regexp&quot;&lt;/code&gt; will show this commit, &lt;code&gt;git log
-S&quot;regexec\(regexp&quot; --pickaxe-regex&lt;/code&gt; will not (because the number of occurrences of that string did not change).</source>
          <target state="translated">Mientras que &lt;code&gt;git log -G&quot;regexec\(regexp&quot;&lt;/code&gt; mostrar&amp;aacute; esta confirmaci&amp;oacute;n, &lt;code&gt;git log -S&quot;regexec\(regexp&quot; --pickaxe-regex&lt;/code&gt; no lo har&amp;aacute; (porque el n&amp;uacute;mero de apariciones de esa cadena no cambi&amp;oacute;).</target>
        </trans-unit>
        <trans-unit id="9fa3ab181478a04a41a15d625153bef4e8a57c74" translate="yes" xml:space="preserve">
          <source>While &lt;code&gt;git svn&lt;/code&gt; can track copy history (including branches and tags) for repositories adopting a standard layout, it cannot yet represent merge history that happened inside git back upstream to SVN users. Therefore it is advised that users keep history as linear as possible inside Git to ease compatibility with SVN (see the CAVEATS section below).</source>
          <target state="translated">While &lt;code&gt;git svn&lt;/code&gt; can track copy history (including branches and tags) for repositories adopting a standard layout, it cannot yet represent merge history that happened inside git back upstream to SVN users. Therefore it is advised that users keep history as linear as possible inside Git to ease compatibility with SVN (see the CAVEATS section below).</target>
        </trans-unit>
        <trans-unit id="6dffb65164b8303d8f69a39b7acb7d5c91ede142" translate="yes" xml:space="preserve">
          <source>While Git normally leaves file contents alone, it can be configured to normalize line endings to LF in the repository and, optionally, to convert them to CRLF when files are checked out.</source>
          <target state="translated">Mientras que Git normalmente deja el contenido de los archivos,puede ser configurado para normalizar las terminaciones de línea a LF en el repositorio y,opcionalmente,para convertirlas a CRLF cuando los archivos se comprueban.</target>
        </trans-unit>
        <trans-unit id="28e5e3e789710acfbe64ae88514ac76e33edddf4" translate="yes" xml:space="preserve">
          <source>While a tree represents a particular directory state of a working directory, a commit represents that state in &quot;time&quot;, and explains how to get there.</source>
          <target state="translated">Mientras que un árbol representa un estado de directorio particular de un directorio de trabajo,un commit representa ese estado en &quot;tiempo&quot;,y explica cómo llegar allí.</target>
        </trans-unit>
        <trans-unit id="4340adfab1f511dfd0a9b398534e55b63d70f9b2" translate="yes" xml:space="preserve">
          <source>While an &quot;easy case recovery&quot; sometimes appears to be successful even in the hard case, it may have unintended consequences. For example, a commit that was removed via &lt;code&gt;git rebase
      --interactive&lt;/code&gt; will be &lt;strong&gt;resurrected&lt;/strong&gt;!</source>
          <target state="translated">Si bien una &quot;recuperaci&amp;oacute;n de caso f&amp;aacute;cil&quot; a veces parece tener &amp;eacute;xito incluso en el caso dif&amp;iacute;cil, puede tener consecuencias no deseadas. Por ejemplo, una confirmaci&amp;oacute;n de que se elimin&amp;oacute; mediante &lt;code&gt;git rebase --interactive&lt;/code&gt; ser&amp;aacute; &lt;strong&gt;resucitado&lt;/strong&gt; !</target>
        </trans-unit>
        <trans-unit id="aeca28e54d758d00b7b9efe81e9021c3ae168604" translate="yes" xml:space="preserve">
          <source>While at it, check the &lt;code&gt;info&lt;/code&gt; and &lt;code&gt;final-commit&lt;/code&gt; files as well. If what is in &lt;code&gt;final-commit&lt;/code&gt; is not exactly what you would want to see in the commit log message, it is very likely that the receiver would end up hand editing the log message when applying your patch. Things like &quot;Hi, this is my first patch.\n&quot; in the patch e-mail should come after the three-dash line that signals the end of the commit message.</source>
          <target state="translated">Mientras lo hace, verifique la &lt;code&gt;info&lt;/code&gt; rmaci&amp;oacute;n y &lt;code&gt;final-commit&lt;/code&gt; archivos de confirmaci&amp;oacute;n final tambi&amp;eacute;n. Si lo que est&amp;aacute; en &lt;code&gt;final-commit&lt;/code&gt; no es exactamente lo que le gustar&amp;iacute;a ver en el mensaje de registro de confirmaci&amp;oacute;n, es muy probable que el receptor termine editando manualmente el mensaje de registro al aplicar su parche. Cosas como &quot;Hola, este es mi primer parche. \ N&quot; en el correo electr&amp;oacute;nico del parche deben aparecer despu&amp;eacute;s de la l&amp;iacute;nea de tres guiones que indica el final del mensaje de confirmaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="8ae695a4eabf8fe5dbbd3e5b96e3d4b6e1234599" translate="yes" xml:space="preserve">
          <source>While creating changes is useful, it&amp;rsquo;s even more useful if you can tell later what changed. The most useful command for this is another of the &lt;code&gt;diff&lt;/code&gt; family, namely &lt;code&gt;git diff-tree&lt;/code&gt;.</source>
          <target state="translated">Si bien la creaci&amp;oacute;n de cambios es &amp;uacute;til, es a&amp;uacute;n m&amp;aacute;s &amp;uacute;til si luego puede saber qu&amp;eacute; cambi&amp;oacute;. El comando m&amp;aacute;s &amp;uacute;til para esto es otro de la familia &lt;code&gt;diff&lt;/code&gt; , a saber, &lt;code&gt;git diff-tree&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="84a06403fddbfbdfed756ddcbe7e1b6ff85edd7a" translate="yes" xml:space="preserve">
          <source>While one could just alter the configuration settings in the gitweb CGI itself, those changes would be lost upon upgrade. Configuration settings might also be placed into a file in the same directory as the CGI script with the default name &lt;code&gt;gitweb_config.perl&lt;/code&gt; &amp;mdash; allowing one to have multiple gitweb instances with different configurations by the use of symlinks.</source>
          <target state="translated">Si bien uno podr&amp;iacute;a simplemente alterar los ajustes de configuraci&amp;oacute;n en el propio gitweb CGI, esos cambios se perder&amp;iacute;an con la actualizaci&amp;oacute;n. Los ajustes de configuraci&amp;oacute;n tambi&amp;eacute;n se pueden colocar en un archivo en el mismo directorio que el script CGI con el nombre predeterminado &lt;code&gt;gitweb_config.perl&lt;/code&gt; , lo que permite tener varias instancias de gitweb con diferentes configuraciones mediante el uso de enlaces simb&amp;oacute;licos.</target>
        </trans-unit>
        <trans-unit id="3129dc27b36b536bbc925e644f78f32bde86376a" translate="yes" xml:space="preserve">
          <source>While parent object ids are provided on the command line, author and committer information is taken from the following environment variables, if set:</source>
          <target state="translated">Mientras que los identificadores de objeto padre se proporcionan en la línea de comandos,la información sobre el autor y el committer se toma de las siguientes variables de entorno,si están establecidas:</target>
        </trans-unit>
        <trans-unit id="7921bb694427f6298ff631684ef33f9b3436be57" translate="yes" xml:space="preserve">
          <source>While you are in the middle of working on something complicated, you find an unrelated but obvious and trivial bug. You would like to fix it before continuing. You can use &lt;a href=&quot;git-stash&quot;&gt;git-stash[1]&lt;/a&gt; to save the current state of your work, and after fixing the bug (or, optionally after doing so on a different branch and then coming back), unstash the work-in-progress changes.</source>
          <target state="translated">Mientras est&amp;aacute; trabajando en algo complicado, encuentra un error no relacionado pero obvio y trivial. Le gustar&amp;iacute;a arreglarlo antes de continuar. Puede usar &lt;a href=&quot;git-stash&quot;&gt;git-stash [1]&lt;/a&gt; para guardar el estado actual de su trabajo, y despu&amp;eacute;s de corregir el error (u, opcionalmente despu&amp;eacute;s de hacerlo en una rama diferente y luego regresar), deshaga los cambios del trabajo en progreso.</target>
        </trans-unit>
        <trans-unit id="aa47dd8a2f0ebe83c1c9e1c5b54451eb489a4bd1" translate="yes" xml:space="preserve">
          <source>Whitespace separated fields; any run of whitespace can be used as field separator (rules for Perl&amp;rsquo;s &quot;&lt;code&gt;split(&quot; &quot;, $line)&lt;/code&gt;&quot;).</source>
          <target state="translated">Campos separados por espacios en blanco; cualquier tramo de espacios en blanco se puede utilizar como separador de campo (reglas para &quot; &lt;code&gt;split(&quot; &quot;, $line)&lt;/code&gt; &quot; de Perl ).</target>
        </trans-unit>
        <trans-unit id="863aeb0371f511e273bc66c19d53b7877f38ac8a" translate="yes" xml:space="preserve">
          <source>Whitespace-separated list of allowed SMTP-AUTH mechanisms. This setting forces using only the listed mechanisms. Example:</source>
          <target state="translated">Lista separada del espacio blanco de los mecanismos SMTP-AUTH permitidos.Este ajuste obliga a usar sólo los mecanismos listados.Ejemplo:</target>
        </trans-unit>
        <trans-unit id="389ff74463b52646838e41646e64e38a902b85eb" translate="yes" xml:space="preserve">
          <source>Why bisecting merge commits can be harder than bisecting linear history</source>
          <target state="translated">Por qué dividir las fusiones puede ser más difícil que dividir la historia lineal...</target>
        </trans-unit>
        <trans-unit id="4ae988a6589a0546387522087a0861a61e3e4225" translate="yes" xml:space="preserve">
          <source>Wildcards in the pattern such as &lt;code&gt;*&lt;/code&gt; or &lt;code&gt;?&lt;/code&gt; are treated as literal characters.</source>
          <target state="translated">Comodines en el patr&amp;oacute;n como &lt;code&gt;*&lt;/code&gt; o &lt;code&gt;?&lt;/code&gt; se tratan como caracteres literales.</target>
        </trans-unit>
        <trans-unit id="af4b569cb0fc1bae5a933e3532b964dc5d61facd" translate="yes" xml:space="preserve">
          <source>Will copy all files listed from the index to the working directory (not overwriting existing files).</source>
          <target state="translated">Copiará todos los archivos listados del índice al directorio de trabajo (no sobrescribirá los archivos existentes).</target>
        </trans-unit>
        <trans-unit id="712e5286413fd90307ff92f23e110885525f2bb8" translate="yes" xml:space="preserve">
          <source>Will fail unless you manually run &lt;code&gt;git fetch origin-push&lt;/code&gt;. This method is of course entirely defeated by something that runs &lt;code&gt;git fetch
--all&lt;/code&gt;, in that case you&amp;rsquo;d need to either disable it or do something more tedious like:</source>
          <target state="translated">Fallar&amp;aacute; a menos que ejecute manualmente &lt;code&gt;git fetch origin-push&lt;/code&gt; . Este m&amp;eacute;todo, por supuesto, est&amp;aacute; completamente derrotado por algo que ejecuta &lt;code&gt;git fetch --all&lt;/code&gt; ; en ese caso, necesitar&amp;iacute;a deshabilitarlo o hacer algo m&amp;aacute;s tedioso como:</target>
        </trans-unit>
        <trans-unit id="bfd8a0b8d0916903c6596ed358a3cc07670d304e" translate="yes" xml:space="preserve">
          <source>Windows-only: allow redirecting the standard input/output/error handles to paths specified by the environment variables. This is particularly useful in multi-threaded applications where the canonical way to pass standard handles via &lt;code&gt;CreateProcess()&lt;/code&gt; is not an option because it would require the handles to be marked inheritable (and consequently &lt;strong&gt;every&lt;/strong&gt; spawned process would inherit them, possibly blocking regular Git operations). The primary intended use case is to use named pipes for communication (e.g. &lt;code&gt;\\.\pipe\my-git-stdin-123&lt;/code&gt;).</source>
          <target state="translated">Solo Windows: permite redirigir los identificadores est&amp;aacute;ndar de entrada / salida / error a las rutas especificadas por las variables de entorno. Esto es particularmente &amp;uacute;til en aplicaciones de subprocesos m&amp;uacute;ltiples donde la forma can&amp;oacute;nica de pasar identificadores est&amp;aacute;ndar a trav&amp;eacute;s de &lt;code&gt;CreateProcess()&lt;/code&gt; no es una opci&amp;oacute;n porque requerir&amp;iacute;a que los identificadores se marquen como heredables (y, en consecuencia, &lt;strong&gt;cada&lt;/strong&gt; proceso generado los heredar&amp;iacute;a, posiblemente bloqueando las operaciones regulares de Git ). El caso de uso principal previsto es utilizar canalizaciones con nombre para la comunicaci&amp;oacute;n (por ejemplo, &lt;code&gt;\\.\pipe\my-git-stdin-123&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="9c510c80ca0db551792868481dfce7936d126272" translate="yes" xml:space="preserve">
          <source>Windows-only: comma-separated list of environment variables' names that need to be unset before spawning any other process. Defaults to &lt;code&gt;PERL5LIB&lt;/code&gt; to account for the fact that Git for Windows insists on using its own Perl interpreter.</source>
          <target state="translated">Solo Windows: lista separada por comas de los nombres de las variables de entorno que deben desarmarse antes de generar cualquier otro proceso. El valor predeterminado es &lt;code&gt;PERL5LIB&lt;/code&gt; para tener en cuenta el hecho de que Git para Windows insiste en usar su propio int&amp;eacute;rprete de Perl.</target>
        </trans-unit>
        <trans-unit id="e74f053e0d02cafdbd0bbd14c65f9fd314f00d13" translate="yes" xml:space="preserve">
          <source>Windows-only: override whether spawned processes inherit only standard file handles (&lt;code&gt;stdin&lt;/code&gt;, &lt;code&gt;stdout&lt;/code&gt; and &lt;code&gt;stderr&lt;/code&gt;) or all handles. Can be &lt;code&gt;auto&lt;/code&gt;, &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;. Defaults to &lt;code&gt;auto&lt;/code&gt;, which means &lt;code&gt;true&lt;/code&gt; on Windows 7 and later, and &lt;code&gt;false&lt;/code&gt; on older Windows versions.</source>
          <target state="translated">Solo Windows: anule si los procesos generados heredan solo los identificadores de archivo est&amp;aacute;ndar ( &lt;code&gt;stdin&lt;/code&gt; , &lt;code&gt;stdout&lt;/code&gt; y &lt;code&gt;stderr&lt;/code&gt; ) o todos los identificadores. Puede ser &lt;code&gt;auto&lt;/code&gt; m&amp;aacute;tico , &lt;code&gt;true&lt;/code&gt; o &lt;code&gt;false&lt;/code&gt; . El valor predeterminado es &lt;code&gt;auto&lt;/code&gt; m&amp;aacute;tico , lo que significa &lt;code&gt;true&lt;/code&gt; en Windows 7 y posterior, y &lt;code&gt;false&lt;/code&gt; en versiones anteriores de Windows.</target>
        </trans-unit>
        <trans-unit id="949442d2f0c16b026f680dbb7df65e881242333c" translate="yes" xml:space="preserve">
          <source>With --abbrev set to 0, the command can be used to find the closest tagname without any suffix:</source>
          <target state="translated">Con --abbrev puesto a 0,el comando puede usarse para encontrar el nombre de etiqueta más cercano sin ningún sufijo:</target>
        </trans-unit>
        <trans-unit id="a158e0380ec8b734a269ad9d0f52eb5eb98f2274" translate="yes" xml:space="preserve">
          <source>With --all, the command can use branch heads as references, so the output shows the reference path as well:</source>
          <target state="translated">Con --all,el comando puede usar cabezas de rama como referencias,por lo que la salida también muestra el camino de referencia:</target>
        </trans-unit>
        <trans-unit id="65ee9a1948ccba3bbf4e1e0783ded1eb1bf032c9" translate="yes" xml:space="preserve">
          <source>With --batch or --batch-check, follow symlinks inside the repository when requesting objects with extended SHA-1 expressions of the form tree-ish:path-in-tree. Instead of providing output about the link itself, provide output about the linked-to object. If a symlink points outside the tree-ish (e.g. a link to /foo or a root-level link to ../foo), the portion of the link which is outside the tree will be printed.</source>
          <target state="translated">Con --batch o --batch-check,siga los enlaces simbólicos dentro del repositorio cuando solicite objetos con expresiones SHA-1 extendidas de la forma árbol-ish:path-in-tree.En lugar de proporcionar una salida sobre el enlace en sí,proporcione una salida sobre el objeto enlazado.Si un enlace simbólico apunta fuera del árbol (por ejemplo,un enlace a /foo o un enlace a nivel de raíz a ../foo),se imprimirá la parte del enlace que está fuera del árbol.</target>
        </trans-unit>
        <trans-unit id="4f48f3dcfb8092537ede5a515e981d6e213aeb9f" translate="yes" xml:space="preserve">
          <source>With --no-commit perform the merge and stop just before creating a merge commit, to give the user a chance to inspect and further tweak the merge result before committing.</source>
          <target state="translated">Con --no-commit realizar la fusión y detenerse justo antes de crear un compromiso de fusión,para dar al usuario la oportunidad de inspeccionar y ajustar aún más el resultado de la fusión antes de comprometerse.</target>
        </trans-unit>
        <trans-unit id="3e8c9cc261afe4f0a3a9c88b1d66c9688df929d7" translate="yes" xml:space="preserve">
          <source>With --no-log do not list one-line descriptions from the actual commits being merged.</source>
          <target state="translated">Con --no-log no se listan descripciones de una línea de las confirmaciones reales que se están fusionando.</target>
        </trans-unit>
        <trans-unit id="e1adfa5cefd427bf7d3a2a21965629dcaf3c3388" translate="yes" xml:space="preserve">
          <source>With --no-signoff do not add a Signed-off-by line.</source>
          <target state="translated">Con --no-signoff no añada una línea de Firmado por.</target>
        </trans-unit>
        <trans-unit id="268060b1be32cd8bc70e7e3bb40c821b809c90c3" translate="yes" xml:space="preserve">
          <source>With --no-squash perform the merge and commit the result. This option can be used to override --squash.</source>
          <target state="translated">Con --no-squash realizar la fusión y cometer el resultado.Esta opción se puede usar para anular ---squash.</target>
        </trans-unit>
        <trans-unit id="2060c61f3742702f58530c81f5eefb302aeb60c1" translate="yes" xml:space="preserve">
          <source>With --squash, --commit is not allowed, and will fail.</source>
          <target state="translated">Con --squash,--compromiso no está permitido,y fallará.</target>
        </trans-unit>
        <trans-unit id="865b225dd999d9769e36118a7e13e933131732f5" translate="yes" xml:space="preserve">
          <source>With -n or --no-stat do not show a diffstat at the end of the merge.</source>
          <target state="translated">Con -n o --no-estado no muestran un diffstat al final de la fusión.</target>
        </trans-unit>
        <trans-unit id="008f5911b332311009571603d4810039f3b0a542" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;--add&lt;/code&gt;, instead of changing existing URLs, new URL is added.</source>
          <target state="translated">Con &lt;code&gt;--add&lt;/code&gt; , en lugar de cambiar las URL existentes, se agrega una nueva URL.</target>
        </trans-unit>
        <trans-unit id="6b50c366c66c543504b13b437403fc08b0e99b0f" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;--add&lt;/code&gt;, instead of replacing the list of currently tracked branches, adds to that list.</source>
          <target state="translated">Con &lt;code&gt;--add&lt;/code&gt; , en lugar de reemplazar la lista de ramas actualmente rastreadas, agrega a esa lista.</target>
        </trans-unit>
        <trans-unit id="b5c6ad97197083d8f93283087955bd70bd89f95f" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;--all&lt;/code&gt; flag, all refs that exist locally are transferred to the remote side. You cannot specify any &lt;code&gt;&amp;lt;ref&amp;gt;&lt;/code&gt; if you use this flag.</source>
          <target state="translated">Con la bandera &lt;code&gt;--all&lt;/code&gt; , todas las referencias que existen localmente se transfieren al lado remoto. No puede especificar ning&amp;uacute;n &lt;code&gt;&amp;lt;ref&amp;gt;&lt;/code&gt; si usa este indicador.</target>
        </trans-unit>
        <trans-unit id="487cd0ed38992f1c8c21d61869ab0ba8c9131e91" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;--all&lt;/code&gt;, all URLs for the remote will be listed.</source>
          <target state="translated">Con &lt;code&gt;--all&lt;/code&gt; , se enumerar&amp;aacute;n todas las URL del control remoto.</target>
        </trans-unit>
        <trans-unit id="ea729f224a85b66147f6e662a1c5d14a2abdd751" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;--contains&lt;/code&gt;, shows only the branches that contain the named commit (in other words, the branches whose tip commits are descendants of the named commit), &lt;code&gt;--no-contains&lt;/code&gt; inverts it. With &lt;code&gt;--merged&lt;/code&gt;, only branches merged into the named commit (i.e. the branches whose tip commits are reachable from the named commit) will be listed. With &lt;code&gt;--no-merged&lt;/code&gt; only branches not merged into the named commit will be listed. If the &amp;lt;commit&amp;gt; argument is missing it defaults to &lt;code&gt;HEAD&lt;/code&gt; (i.e. the tip of the current branch).</source>
          <target state="translated">Con &lt;code&gt;--contains&lt;/code&gt; , muestra solo las ramas que contienen la confirmaci&amp;oacute;n con nombre (en otras palabras, las ramas cuyas confirmaciones de punta son descendientes de la confirmaci&amp;oacute;n con nombre), &lt;code&gt;--no-contains&lt;/code&gt; lo invierte. Con &lt;code&gt;--merged&lt;/code&gt; , solo se enumerar&amp;aacute;n las ramas fusionadas en la confirmaci&amp;oacute;n con nombre (es decir, las ramas cuyas confirmaciones de sugerencias son accesibles desde la confirmaci&amp;oacute;n con nombre). Con &lt;code&gt;--no-merged&lt;/code&gt; , solo se listar&amp;aacute;n las ramas que no se hayan combinado en la confirmaci&amp;oacute;n nombrada. Si falta el argumento &amp;lt;commit&amp;gt;, el valor predeterminado es &lt;code&gt;HEAD&lt;/code&gt; (es decir, la punta de la rama actual).</target>
        </trans-unit>
        <trans-unit id="a1afc8d7fd506e98e5a974a8f26c84b23238fb92" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;--create-reflog&lt;/code&gt;, update-ref will create a reflog for each ref even if one would not ordinarily be created.</source>
          <target state="translated">Con &lt;code&gt;--create-reflog&lt;/code&gt; , update-ref crear&amp;aacute; un reflog para cada ref incluso si normalmente no se crear&amp;iacute;a uno.</target>
        </trans-unit>
        <trans-unit id="7fef88021ca55186dc4070339cc8624e9a30485c" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;--delete&lt;/code&gt;, instead of changing existing URLs, all URLs matching regex &amp;lt;url&amp;gt; are deleted for remote &amp;lt;name&amp;gt;. Trying to delete all non-push URLs is an error.</source>
          <target state="translated">Con &lt;code&gt;--delete&lt;/code&gt; , en lugar de cambiar las URL existentes, todas las URL que coinciden con regex &amp;lt;url&amp;gt; se eliminan para &amp;lt;nombre&amp;gt; remoto. Intentar eliminar todas las URL que no son de inserci&amp;oacute;n es un error.</target>
        </trans-unit>
        <trans-unit id="30918cb51e4372be35c787127ec3b8958bb72e8d" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;--dry-run&lt;/code&gt; option, report what branches will be pruned, but do not actually prune them.</source>
          <target state="translated">Con la opci&amp;oacute;n &lt;code&gt;--dry-run&lt;/code&gt; , informe qu&amp;eacute; ramas se podar&amp;aacute;n, pero no las pode en realidad.</target>
        </trans-unit>
        <trans-unit id="5189cda6779864f8bd2f5726b39c4529ff52ddf8" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;--ff-only&lt;/code&gt;, resolve the merge as a fast-forward when possible. When not possible, refuse to merge and exit with a non-zero status.</source>
          <target state="translated">Con &lt;code&gt;--ff-only&lt;/code&gt; , resuelve la combinaci&amp;oacute;n como un avance r&amp;aacute;pido cuando sea posible. Cuando no sea posible, reh&amp;uacute;se fusionarse y salir con un estado distinto de cero.</target>
        </trans-unit>
        <trans-unit id="7e8f4fddd68a3a89ff49906c538a7ca7b5ef9dea" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;--ff&lt;/code&gt;, when possible resolve the merge as a fast-forward (only update the branch pointer to match the merged branch; do not create a merge commit). When not possible (when the merged-in history is not a descendant of the current history), create a merge commit.</source>
          <target state="translated">Con &lt;code&gt;--ff&lt;/code&gt; , cuando sea posible, resuelva la combinaci&amp;oacute;n como un avance r&amp;aacute;pido (solo actualice el puntero de la rama para que coincida con la rama combinada; no cree una confirmaci&amp;oacute;n de combinaci&amp;oacute;n). Cuando no sea posible (cuando el historial combinado no sea descendiente del historial actual), cree una confirmaci&amp;oacute;n de combinaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="1362a77896d8f49d16b2f9c5015389cf3c365072" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;--force&lt;/code&gt;, the fast-forward check is disabled for all refs.</source>
          <target state="translated">Con &lt;code&gt;--force&lt;/code&gt; , la verificaci&amp;oacute;n de avance r&amp;aacute;pido est&amp;aacute; deshabilitada para todas las referencias.</target>
        </trans-unit>
        <trans-unit id="ba76b155ec3c447a87cfd160419204d256e0f486" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;--keep-cr&lt;/code&gt;, call &lt;code&gt;git mailsplit&lt;/code&gt; (see &lt;a href=&quot;git-mailsplit&quot;&gt;git-mailsplit[1]&lt;/a&gt;) with the same option, to prevent it from stripping CR at the end of lines. &lt;code&gt;am.keepcr&lt;/code&gt; configuration variable can be used to specify the default behaviour. &lt;code&gt;--no-keep-cr&lt;/code&gt; is useful to override &lt;code&gt;am.keepcr&lt;/code&gt;.</source>
          <target state="translated">Con &lt;code&gt;--keep-cr&lt;/code&gt; , llame a &lt;code&gt;git mailsplit&lt;/code&gt; (consulte &lt;a href=&quot;git-mailsplit&quot;&gt;git-mailsplit [1]&lt;/a&gt; ) con la misma opci&amp;oacute;n, para evitar que elimine CR al final de las l&amp;iacute;neas. &lt;code&gt;am.keepcr&lt;/code&gt; variable de configuraci&amp;oacute;n am.keepcr se puede utilizar para especificar el comportamiento predeterminado. &lt;code&gt;--no-keep-cr&lt;/code&gt; es &amp;uacute;til para anular &lt;code&gt;am.keepcr&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="22e7d426b38d094430582cb84fc0432b42834058" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;--no-ff&lt;/code&gt;, create a merge commit in all cases, even when the merge could instead be resolved as a fast-forward.</source>
          <target state="translated">Con &lt;code&gt;--no-ff&lt;/code&gt; , cree una confirmaci&amp;oacute;n de combinaci&amp;oacute;n en todos los casos, incluso cuando la combinaci&amp;oacute;n podr&amp;iacute;a resolverse como un avance r&amp;aacute;pido.</target>
        </trans-unit>
        <trans-unit id="5aa5b8e96804090cb89f3aab6cdc283e2c00d87e" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;--no-tags&lt;/code&gt; option, &lt;code&gt;git fetch &amp;lt;name&amp;gt;&lt;/code&gt; does not import tags from the remote repository.</source>
          <target state="translated">Con la &lt;code&gt;--no-tags&lt;/code&gt; , &lt;code&gt;git fetch &amp;lt;name&amp;gt;&lt;/code&gt; no importa etiquetas desde el repositorio remoto.</target>
        </trans-unit>
        <trans-unit id="37eed19521c790d78f1c0615d39722d6298a6cc8" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;--patch&lt;/code&gt;, you can interactively select hunks from the diff between HEAD and the working tree to be stashed. The stash entry is constructed such that its index state is the same as the index state of your repository, and its worktree contains only the changes you selected interactively. The selected changes are then rolled back from your worktree. See the &amp;ldquo;Interactive Mode&amp;rdquo; section of &lt;a href=&quot;git-add&quot;&gt;git-add[1]&lt;/a&gt; to learn how to operate the &lt;code&gt;--patch&lt;/code&gt; mode.</source>
          <target state="translated">Con &lt;code&gt;--patch&lt;/code&gt; , puede seleccionar de forma interactiva trozos de la diferencia entre HEAD y el &amp;aacute;rbol de trabajo para guardarlos. La entrada de alijo se construye de manera que su estado de &amp;iacute;ndice sea el mismo que el estado de &amp;iacute;ndice de su repositorio, y su &amp;aacute;rbol de trabajo contiene solo los cambios que seleccion&amp;oacute; de forma interactiva. Luego, los cambios seleccionados se revierten de su &amp;aacute;rbol de trabajo. Consulte la secci&amp;oacute;n &quot;Modo interactivo&quot; de &lt;a href=&quot;git-add&quot;&gt;git-add [1]&lt;/a&gt; para aprender c&amp;oacute;mo operar el modo &lt;code&gt;--patch&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8d4d7e74d0f493c9b38977e43daed9cfd8d04693" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;--pretty&lt;/code&gt; format other than &lt;code&gt;oneline&lt;/code&gt; and &lt;code&gt;reference&lt;/code&gt; (for obvious reasons), this causes the output to have two extra lines of information taken from the reflog. The reflog designator in the output may be shown as &lt;code&gt;ref@{Nth}&lt;/code&gt; (where &lt;code&gt;Nth&lt;/code&gt; is the reverse-chronological index in the reflog) or as &lt;code&gt;ref@{timestamp}&lt;/code&gt; (with the timestamp for that entry), depending on a few rules:</source>
          <target state="translated">Con &lt;code&gt;--pretty&lt;/code&gt; formato que no sea en &lt;code&gt;oneline&lt;/code&gt; y &lt;code&gt;reference&lt;/code&gt; (por razones obvias), esto hace que la salida tenga dos l&amp;iacute;neas adicionales de informaci&amp;oacute;n tomadas del reflog. El designador de reflog en la salida puede mostrarse como &lt;code&gt;ref@{Nth}&lt;/code&gt; (donde &lt;code&gt;Nth&lt;/code&gt; es el &amp;iacute;ndice cronol&amp;oacute;gico inverso en el reflog) o como &lt;code&gt;ref@{timestamp}&lt;/code&gt; (con la marca de tiempo para esa entrada), dependiendo de algunas reglas:</target>
        </trans-unit>
        <trans-unit id="35b7bcaa0d1a12c16e7ebe5749afd0aa0913b69d" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;--prune&lt;/code&gt; option, run pruning against all the remotes that are updated.</source>
          <target state="translated">Con la opci&amp;oacute;n &lt;code&gt;--prune&lt;/code&gt; , ejecute la poda en todos los controles remotos que se actualizan.</target>
        </trans-unit>
        <trans-unit id="9a993d0e8bfe45705897018a009a33a68fb547fb" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;--push&lt;/code&gt;, push URLs are manipulated instead of fetch URLs.</source>
          <target state="translated">Con &lt;code&gt;--push&lt;/code&gt; , las URL push se manipulan en lugar de buscar URL.</target>
        </trans-unit>
        <trans-unit id="d0c8d67cd6d67334176bbc781201963c60a05697" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;--push&lt;/code&gt;, push URLs are queried rather than fetch URLs.</source>
          <target state="translated">Con &lt;code&gt;--push&lt;/code&gt; , las URL de inserci&amp;oacute;n se consultan en lugar de buscar las URL.</target>
        </trans-unit>
        <trans-unit id="a26943d9e66efe8045d055005cf22b61dc280b47" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;--stdin&lt;/code&gt;, update-ref reads instructions from standard input and performs all modifications together. Specify commands of the form:</source>
          <target state="translated">Con &lt;code&gt;--stdin&lt;/code&gt; , update-ref lee las instrucciones de la entrada est&amp;aacute;ndar y realiza todas las modificaciones juntas. Especifique comandos de la forma:</target>
        </trans-unit>
        <trans-unit id="46644e8c0f7ae9adba68ae4958242044a646f477" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;--tags&lt;/code&gt; option, &lt;code&gt;git fetch &amp;lt;name&amp;gt;&lt;/code&gt; imports every tag from the remote repository.</source>
          <target state="translated">Con la opci&amp;oacute;n &lt;code&gt;--tags&lt;/code&gt; , &lt;code&gt;git fetch &amp;lt;name&amp;gt;&lt;/code&gt; importa todas las etiquetas del repositorio remoto.</target>
        </trans-unit>
        <trans-unit id="9afd8cc2d67d37867f3891e80c5ed22f0441334c" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;--topo-order&lt;/code&gt;, they would show 8 6 5 3 7 4 2 1 (or 8 7 4 2 6 5 3 1); some older commits are shown before newer ones in order to avoid showing the commits from two parallel development track mixed together.</source>
          <target state="translated">Con &lt;code&gt;--topo-order&lt;/code&gt; , mostrar&amp;iacute;an 8 6 5 3 7 4 2 1 (o 8 7 4 2 6 5 3 1); algunas confirmaciones m&amp;aacute;s antiguas se muestran antes que las m&amp;aacute;s nuevas para evitar mostrar las confirmaciones de dos pistas de desarrollo paralelas mezcladas.</target>
        </trans-unit>
        <trans-unit id="bbe3bdb143c872f8bc3522bea317a2ad84af9235" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;-a&lt;/code&gt; or &lt;code&gt;--auto&lt;/code&gt;, the remote is queried to determine its &lt;code&gt;HEAD&lt;/code&gt;, then the symbolic-ref &lt;code&gt;refs/remotes/&amp;lt;name&amp;gt;/HEAD&lt;/code&gt; is set to the same branch. e.g., if the remote &lt;code&gt;HEAD&lt;/code&gt; is pointed at &lt;code&gt;next&lt;/code&gt;, &quot;&lt;code&gt;git remote set-head origin -a&lt;/code&gt;&quot; will set the symbolic-ref &lt;code&gt;refs/remotes/origin/HEAD&lt;/code&gt; to &lt;code&gt;refs/remotes/origin/next&lt;/code&gt;. This will only work if &lt;code&gt;refs/remotes/origin/next&lt;/code&gt; already exists; if not it must be fetched first.</source>
          <target state="translated">Con &lt;code&gt;-a&lt;/code&gt; o &lt;code&gt;--auto&lt;/code&gt; , se consulta el control remoto para determinar su &lt;code&gt;HEAD&lt;/code&gt; , luego el symbolic-ref &lt;code&gt;refs/remotes/&amp;lt;name&amp;gt;/HEAD&lt;/code&gt; se establece en la misma rama. por ejemplo, si el &lt;code&gt;HEAD&lt;/code&gt; remoto se apunta al &lt;code&gt;next&lt;/code&gt; , &quot; &lt;code&gt;git remote set-head origin -a&lt;/code&gt; &quot; establecer&amp;aacute; el simb&amp;oacute;lico-ref &lt;code&gt;refs/remotes/origin/HEAD&lt;/code&gt; en &lt;code&gt;refs/remotes/origin/next&lt;/code&gt; . Esto solo funcionar&amp;aacute; si &lt;code&gt;refs/remotes/origin/next&lt;/code&gt; ya existe; si no, primero debe buscarlo.</target>
        </trans-unit>
        <trans-unit id="5f69d8ea721996a0e954b69bd77400aaa01f9c55" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;-d&lt;/code&gt; flag, it deletes the named &amp;lt;ref&amp;gt; after verifying it still contains &amp;lt;oldvalue&amp;gt;.</source>
          <target state="translated">Con el indicador &lt;code&gt;-d&lt;/code&gt; , borra el &amp;lt;ref&amp;gt; nombrado despu&amp;eacute;s de verificar que todav&amp;iacute;a contiene &amp;lt;oldvalue&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="da9e1b9da40421df76a154165f2b54d479838ea5" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;-d&lt;/code&gt; or &lt;code&gt;--delete&lt;/code&gt;, the symbolic ref &lt;code&gt;refs/remotes/&amp;lt;name&amp;gt;/HEAD&lt;/code&gt; is deleted.</source>
          <target state="translated">Con &lt;code&gt;-d&lt;/code&gt; o &lt;code&gt;--delete&lt;/code&gt; , se elimina la referencia simb&amp;oacute;lica refs / remotes &lt;code&gt;refs/remotes/&amp;lt;name&amp;gt;/HEAD&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6b0b5064fe468e227911615a2b7fcbafb431eef7" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;-f&lt;/code&gt; option, &lt;code&gt;git fetch &amp;lt;name&amp;gt;&lt;/code&gt; is run immediately after the remote information is set up.</source>
          <target state="translated">Con la opci&amp;oacute;n &lt;code&gt;-f&lt;/code&gt; , &lt;code&gt;git fetch &amp;lt;name&amp;gt;&lt;/code&gt; se ejecuta inmediatamente despu&amp;eacute;s de configurar la informaci&amp;oacute;n remota.</target>
        </trans-unit>
        <trans-unit id="4c11581a6169e0a17084bd502989c1df6d5ff9b6" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;-m &amp;lt;master&amp;gt;&lt;/code&gt; option, a symbolic-ref &lt;code&gt;refs/remotes/&amp;lt;name&amp;gt;/HEAD&lt;/code&gt; is set up to point at remote&amp;rsquo;s &lt;code&gt;&amp;lt;master&amp;gt;&lt;/code&gt; branch. See also the set-head command.</source>
          <target state="translated">Con la opci&amp;oacute;n &lt;code&gt;-m &amp;lt;master&amp;gt;&lt;/code&gt; , se configura una referencia simb&amp;oacute;lica &lt;code&gt;refs/remotes/&amp;lt;name&amp;gt;/HEAD&lt;/code&gt; para apuntar a la rama &lt;code&gt;&amp;lt;master&amp;gt;&lt;/code&gt; del control remoto . Consulte tambi&amp;eacute;n el comando set-head.</target>
        </trans-unit>
        <trans-unit id="734f06f2f4ad450ab9efcf1cd7537f18bb0a22f5" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;-n&lt;/code&gt; option, the remote heads are not queried first with &lt;code&gt;git ls-remote &amp;lt;name&amp;gt;&lt;/code&gt;; cached information is used instead.</source>
          <target state="translated">Con la opci&amp;oacute;n &lt;code&gt;-n&lt;/code&gt; , los cabezales remotos no se consultan primero con &lt;code&gt;git ls-remote &amp;lt;name&amp;gt;&lt;/code&gt; ; En su lugar, se utiliza informaci&amp;oacute;n almacenada en cach&amp;eacute;.</target>
        </trans-unit>
        <trans-unit id="dd75e538fb39d452e807a34068040583ee9147bc" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;-t &amp;lt;branch&amp;gt;&lt;/code&gt; option, instead of the default glob refspec for the remote to track all branches under the &lt;code&gt;refs/remotes/&amp;lt;name&amp;gt;/&lt;/code&gt; namespace, a refspec to track only &lt;code&gt;&amp;lt;branch&amp;gt;&lt;/code&gt; is created. You can give more than one &lt;code&gt;-t &amp;lt;branch&amp;gt;&lt;/code&gt; to track multiple branches without grabbing all branches.</source>
          <target state="translated">Con la opci&amp;oacute;n &lt;code&gt;-t &amp;lt;branch&amp;gt;&lt;/code&gt; , en lugar del glob refspec predeterminado para que el control remoto rastree todas las ramas bajo el espacio de nombres refs &lt;code&gt;refs/remotes/&amp;lt;name&amp;gt;/&lt;/code&gt; remotes / &amp;lt;name&amp;gt; / , se crea una refspec para rastrear solo &lt;code&gt;&amp;lt;branch&amp;gt;&lt;/code&gt; . Puede dar m&amp;aacute;s de un &lt;code&gt;-t &amp;lt;branch&amp;gt;&lt;/code&gt; para rastrear m&amp;uacute;ltiples ramas sin agarrar todas las ramas.</target>
        </trans-unit>
        <trans-unit id="3a17d1e0c132aee2d2be1ec1ea02b9a88fab2a36" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;add&lt;/code&gt;, a new trailer will be added, even if some trailers with the same (&amp;lt;token&amp;gt;, &amp;lt;value&amp;gt;) pair are already in the message.</source>
          <target state="translated">Con &lt;code&gt;add&lt;/code&gt; , se agregar&amp;aacute; un nuevo avance, incluso si algunos avances con el mismo par (&amp;lt;token&amp;gt;, &amp;lt;valor&amp;gt;) ya est&amp;aacute;n en el mensaje.</target>
        </trans-unit>
        <trans-unit id="bdb99f7baa9796a7b973194e1a5ab4a7e3d82b92" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;add&lt;/code&gt;, a new trailer will be added.</source>
          <target state="translated">Con &lt;code&gt;add&lt;/code&gt; , se agregar&amp;aacute; un nuevo avance.</target>
        </trans-unit>
        <trans-unit id="6b61b0983644b0774834807009f4d278bb642b5a" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;add&lt;/code&gt;, create a new branch named &lt;code&gt;&amp;lt;new-branch&amp;gt;&lt;/code&gt; starting at &lt;code&gt;&amp;lt;commit-ish&amp;gt;&lt;/code&gt;, and check out &lt;code&gt;&amp;lt;new-branch&amp;gt;&lt;/code&gt; into the new working tree. If &lt;code&gt;&amp;lt;commit-ish&amp;gt;&lt;/code&gt; is omitted, it defaults to HEAD. By default, &lt;code&gt;-b&lt;/code&gt; refuses to create a new branch if it already exists. &lt;code&gt;-B&lt;/code&gt; overrides this safeguard, resetting &lt;code&gt;&amp;lt;new-branch&amp;gt;&lt;/code&gt; to &lt;code&gt;&amp;lt;commit-ish&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">Con &lt;code&gt;add&lt;/code&gt; , cree una nueva rama llamada &lt;code&gt;&amp;lt;new-branch&amp;gt;&lt;/code&gt; comenzando en &lt;code&gt;&amp;lt;commit-ish&amp;gt;&lt;/code&gt; , y consulte &lt;code&gt;&amp;lt;new-branch&amp;gt;&lt;/code&gt; en el nuevo &amp;aacute;rbol de trabajo. Si se omite &lt;code&gt;&amp;lt;commit-ish&amp;gt;&lt;/code&gt; , el valor predeterminado es HEAD. De forma predeterminada, &lt;code&gt;-b&lt;/code&gt; se niega a crear una nueva rama si ya existe. &lt;code&gt;-B&lt;/code&gt; anula esta protecci&amp;oacute;n, restableciendo &lt;code&gt;&amp;lt;new-branch&amp;gt;&lt;/code&gt; a &lt;code&gt;&amp;lt;commit-ish&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9a273ddd960841784db1a589aad98c4feff6c226" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;add&lt;/code&gt;, detach HEAD in the new working tree. See &quot;DETACHED HEAD&quot; in &lt;a href=&quot;git-checkout&quot;&gt;git-checkout[1]&lt;/a&gt;.</source>
          <target state="translated">Con &lt;code&gt;add&lt;/code&gt; , separe HEAD en el nuevo &amp;aacute;rbol de trabajo. Consulta &quot;CABEZAL INDEPENDIENTE&quot; en &lt;a href=&quot;git-checkout&quot;&gt;git-checkout [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="187a01bfec37522a00b693f68238b703a4e0897c" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;add&lt;/code&gt;, suppress feedback messages.</source>
          <target state="translated">Con &lt;code&gt;add&lt;/code&gt; , suprima los mensajes de retroalimentaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="45995ca3706219a58e816f38cd1d9bf0922ce8ca" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;addIfDifferent&lt;/code&gt;, a new trailer will be added only if no trailer with the same (&amp;lt;token&amp;gt;, &amp;lt;value&amp;gt;) pair is already in the message.</source>
          <target state="translated">Con &lt;code&gt;addIfDifferent&lt;/code&gt; , se agregar&amp;aacute; un nuevo avance solo si no hay un avance con el mismo par (&amp;lt;token&amp;gt;, &amp;lt;valor&amp;gt;) en el mensaje.</target>
        </trans-unit>
        <trans-unit id="6e3bd24c09b16e87e69f4ad565a18cc8f733f593" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;addIfDifferentNeighbor&lt;/code&gt;, a new trailer will be added only if no trailer with the same (&amp;lt;token&amp;gt;, &amp;lt;value&amp;gt;) pair is above or below the line where the new trailer will be added.</source>
          <target state="translated">Con &lt;code&gt;addIfDifferentNeighbor&lt;/code&gt; , se agregar&amp;aacute; un nuevo avance solo si no hay un avance con el mismo par (&amp;lt;token&amp;gt;, &amp;lt;valor&amp;gt;) por encima o por debajo de la l&amp;iacute;nea donde se agregar&amp;aacute; el nuevo avance.</target>
        </trans-unit>
        <trans-unit id="c538516bcb20191b3fc9da51228fff3eefb68cdf" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;doNothing&lt;/code&gt;, nothing will be done.</source>
          <target state="translated">Con &lt;code&gt;doNothing&lt;/code&gt; , no se har&amp;aacute; nada.</target>
        </trans-unit>
        <trans-unit id="91898a3512235050c32c7a99a50c8394d7a8397d" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;doNothing&lt;/code&gt;, nothing will be done; that is no new trailer will be added if there is already one with the same &amp;lt;token&amp;gt; in the message.</source>
          <target state="translated">Con &lt;code&gt;doNothing&lt;/code&gt; , no se har&amp;aacute; nada; que no se agregar&amp;aacute; ning&amp;uacute;n avance nuevo si ya hay uno con el mismo &amp;lt;token&amp;gt; en el mensaje.</target>
        </trans-unit>
        <trans-unit id="fafece11b5178185f0dda98fe61f1218eca3ec1e" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;git format-patch --base=P -3 C&lt;/code&gt; (or variants thereof, e.g. with &lt;code&gt;--cover-letter&lt;/code&gt; or using &lt;code&gt;Z..C&lt;/code&gt; instead of &lt;code&gt;-3 C&lt;/code&gt; to specify the range), the base tree information block is shown at the end of the first message the command outputs (either the first patch, or the cover letter), like this:</source>
          <target state="translated">Con &lt;code&gt;git format-patch --base=P -3 C&lt;/code&gt; (o variantes del mismo, por ejemplo, con &lt;code&gt;--cover-letter&lt;/code&gt; o usando &lt;code&gt;Z..C&lt;/code&gt; en lugar de &lt;code&gt;-3 C&lt;/code&gt; para especificar el rango), el bloque de informaci&amp;oacute;n del &amp;aacute;rbol base se muestra en al final del primer mensaje que emite el comando (ya sea el primer parche o la carta de presentaci&amp;oacute;n), as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="0dbfc249aea522f6a40d4b8be190d1fc0f0eadd8" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;list&lt;/code&gt;, output in an easy-to-parse format for scripts. This format will remain stable across Git versions and regardless of user configuration. See below for details.</source>
          <target state="translated">Con &lt;code&gt;list&lt;/code&gt; a , salida en un formato f&amp;aacute;cil de analizar para scripts. Este formato permanecer&amp;aacute; estable en todas las versiones de Git e independientemente de la configuraci&amp;oacute;n del usuario. Consulte los detalles a continuaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="021957faebf0fa8a6ba6fb4276abb6b8c72afba9" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;lock&lt;/code&gt;, an explanation why the working tree is locked.</source>
          <target state="translated">Con &lt;code&gt;lock&lt;/code&gt; , una explicaci&amp;oacute;n de por qu&amp;eacute; el &amp;aacute;rbol de trabajo est&amp;aacute; bloqueado.</target>
        </trans-unit>
        <trans-unit id="bbe63cab2529b193584b4f7d1c86ee0207fc9968" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;prune&lt;/code&gt;, do not remove anything; just report what it would remove.</source>
          <target state="translated">Con la &lt;code&gt;prune&lt;/code&gt; , no quite nada; solo informe lo que eliminar&amp;iacute;a.</target>
        </trans-unit>
        <trans-unit id="97f5cdb302d7f0a46689004724feb3d1aca29383" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;prune&lt;/code&gt;, only expire unused working trees older than &amp;lt;time&amp;gt;.</source>
          <target state="translated">Con la &lt;code&gt;prune&lt;/code&gt; , solo caduquen los &amp;aacute;rboles de trabajo no utilizados mayores de &amp;lt;tiempo&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="92ffa86e9306849b846038bae2a07ad322d0f86c" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;prune&lt;/code&gt;, report all removals.</source>
          <target state="translated">Con &lt;code&gt;prune&lt;/code&gt; , informe todas las extracciones.</target>
        </trans-unit>
        <trans-unit id="f6631b122f785beeb20cb0ef884a421b144138ae" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;replace&lt;/code&gt;, an existing trailer with the same &amp;lt;token&amp;gt; will be deleted and the new trailer will be added. The deleted trailer will be the closest one (with the same &amp;lt;token&amp;gt;) to the place where the new one will be added.</source>
          <target state="translated">Con la &lt;code&gt;replace&lt;/code&gt; , se eliminar&amp;aacute; un avance existente con el mismo &amp;lt;token&amp;gt; y se agregar&amp;aacute; el nuevo avance. El tr&amp;aacute;iler eliminado ser&amp;aacute; el m&amp;aacute;s cercano (con el mismo &amp;lt;token&amp;gt;) al lugar donde se agregar&amp;aacute; el nuevo.</target>
        </trans-unit>
        <trans-unit id="7b787c22358696a7fd63895c838388aed6d7912a" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;worktree add &amp;lt;path&amp;gt;&lt;/code&gt;, without &lt;code&gt;&amp;lt;commit-ish&amp;gt;&lt;/code&gt;, instead of creating a new branch from HEAD, if there exists a tracking branch in exactly one remote matching the basename of &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt;, base the new branch on the remote-tracking branch, and mark the remote-tracking branch as &quot;upstream&quot; from the new branch.</source>
          <target state="translated">Con &lt;code&gt;worktree add &amp;lt;path&amp;gt;&lt;/code&gt; , sin &lt;code&gt;&amp;lt;commit-ish&amp;gt;&lt;/code&gt; , en lugar de crear una nueva rama desde HEAD, si existe una rama de seguimiento en exactamente un remoto que coincida con el nombre base de &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt; , base la nueva rama en el seguimiento remoto branch y marque el branch de seguimiento remoto como &quot;upstream&quot; desde el nuevo branch.</target>
        </trans-unit>
        <trans-unit id="660d18378dc3af084a2ac18df92d87c9aea68c5a" translate="yes" xml:space="preserve">
          <source>With Git bisect it&amp;rsquo;s a breeze: in the best case i can get a ~15 step kernel bisection done in 20-30 minutes, in an automated way. Even with manual help or when bisecting multiple, overlapping bugs, it&amp;rsquo;s rarely more than an hour.</source>
          <target state="translated">Con Git bisect es muy sencillo: en el mejor de los casos, puedo realizar una bisecci&amp;oacute;n del kernel de ~ 15 pasos en 20-30 minutos, de forma autom&amp;aacute;tica. Incluso con ayuda manual o cuando se dividen varios errores superpuestos, rara vez es m&amp;aacute;s de una hora.</target>
        </trans-unit>
        <trans-unit id="46d101f0f209ac246ff187c45b6b808668e526b7" translate="yes" xml:space="preserve">
          <source>With a &lt;code&gt;-d&lt;/code&gt; or &lt;code&gt;-D&lt;/code&gt; option, &lt;code&gt;&amp;lt;branchname&amp;gt;&lt;/code&gt; will be deleted. You may specify more than one branch for deletion. If the branch currently has a reflog then the reflog will also be deleted.</source>
          <target state="translated">Con una opci&amp;oacute;n &lt;code&gt;-d&lt;/code&gt; o &lt;code&gt;-D&lt;/code&gt; , se &lt;code&gt;&amp;lt;branchname&amp;gt;&lt;/code&gt; . Puede especificar m&amp;aacute;s de una rama para su eliminaci&amp;oacute;n. Si la rama tiene actualmente un reflog, el reflog tambi&amp;eacute;n se eliminar&amp;aacute;.</target>
        </trans-unit>
        <trans-unit id="f74d36fd60998cbf589b7f2b7f7bc156998c0334" translate="yes" xml:space="preserve">
          <source>With a &lt;code&gt;-m&lt;/code&gt; or &lt;code&gt;-M&lt;/code&gt; option, &amp;lt;oldbranch&amp;gt; will be renamed to &amp;lt;newbranch&amp;gt;. If &amp;lt;oldbranch&amp;gt; had a corresponding reflog, it is renamed to match &amp;lt;newbranch&amp;gt;, and a reflog entry is created to remember the branch renaming. If &amp;lt;newbranch&amp;gt; exists, -M must be used to force the rename to happen.</source>
          <target state="translated">Con una opci&amp;oacute;n &lt;code&gt;-m&lt;/code&gt; o &lt;code&gt;-M&lt;/code&gt; , &amp;lt;oldbranch&amp;gt; cambiar&amp;aacute; de nombre a &amp;lt;newbranch&amp;gt;. Si &amp;lt;oldbranch&amp;gt; ten&amp;iacute;a un reflog correspondiente, se le cambia el nombre para que coincida con &amp;lt;newbranch&amp;gt; y se crea una entrada de reflog para recordar el cambio de nombre de la rama. Si existe &amp;lt;newbranch&amp;gt;, se debe usar -M para forzar el cambio de nombre.</target>
        </trans-unit>
        <trans-unit id="078f9b93867e54fc6fd5cb6cccb717d173a4bdbb" translate="yes" xml:space="preserve">
          <source>With a small group, developers may just pull changes from each other&amp;rsquo;s repositories without the need for a central maintainer.</source>
          <target state="translated">Con un grupo peque&amp;ntilde;o, los desarrolladores pueden simplemente extraer cambios de los repositorios de los dem&amp;aacute;s sin la necesidad de un mantenedor central.</target>
        </trans-unit>
        <trans-unit id="d93af44627c4056a70413d4d1086a466c1eb6057" translate="yes" xml:space="preserve">
          <source>With an optional &lt;code&gt;&amp;lt;ref&amp;gt;&lt;/code&gt; argument, use the ref to find the notes to display. The ref can specify the full refname when it begins with &lt;code&gt;refs/notes/&lt;/code&gt;; when it begins with &lt;code&gt;notes/&lt;/code&gt;, &lt;code&gt;refs/&lt;/code&gt; and otherwise &lt;code&gt;refs/notes/&lt;/code&gt; is prefixed to form a full name of the ref.</source>
          <target state="translated">Con un argumento &lt;code&gt;&amp;lt;ref&amp;gt;&lt;/code&gt; opcional , use la referencia para encontrar las notas que se mostrar&amp;aacute;n. La referencia puede especificar el nombre de referencia completo cuando comienza con &lt;code&gt;refs/notes/&lt;/code&gt; ; cuando comienza con &lt;code&gt;notes/&lt;/code&gt; , &lt;code&gt;refs/&lt;/code&gt; y de lo contrario &lt;code&gt;refs/notes/&lt;/code&gt; tiene un prefijo para formar un nombre completo de la ref.</target>
        </trans-unit>
        <trans-unit id="5888510f888416379a4d4b5651fc198f809cb1eb" translate="yes" xml:space="preserve">
          <source>With an optional argument, you can return to a different commit instead:</source>
          <target state="translated">Con un argumento opcional,puedes volver a un compromiso diferente en su lugar:</target>
        </trans-unit>
        <trans-unit id="70761b9c0ed85e86f5fe4551851f4fb12dda8ef2" translate="yes" xml:space="preserve">
          <source>With centralized revision control systems this is often accomplished by including every module in one single repository. Developers can check out all modules or only the modules they need to work with. They can even modify files across several modules in a single commit while moving things around or updating APIs and translations.</source>
          <target state="translated">Con los sistemas centralizados de control de revisiones,esto se logra a menudo incluyendo todos los módulos en un solo depósito.Los desarrolladores pueden revisar todos los módulos o sólo los módulos que necesitan para trabajar.Incluso pueden modificar los archivos de varios módulos en una sola confirmación mientras mueven las cosas o actualizan las API y las traducciones.</target>
        </trans-unit>
        <trans-unit id="34547cdab6bbebc8d70f8627cf92ce4ed49693c0" translate="yes" xml:space="preserve">
          <source>With no arguments, shows a list of existing remotes. Several subcommands are available to perform operations on the remotes.</source>
          <target state="translated">Sin argumentos,muestra una lista de los mandos a distancia existentes.Hay varios subcomandos disponibles para realizar operaciones en los mandos.</target>
        </trans-unit>
        <trans-unit id="2d8eac222dcf5b2fb83219646b45ebbea55b5081" translate="yes" xml:space="preserve">
          <source>With no arguments, shows the status of existing submodules. Several subcommands are available to perform operations on the submodules.</source>
          <target state="translated">Sin argumentos,muestra el estado de los submódulos existentes.Hay varios subcomandos disponibles para realizar operaciones en los submódulos.</target>
        </trans-unit>
        <trans-unit id="2955e54fe9fa9b7446c513283cbd98f27b722daf" translate="yes" xml:space="preserve">
          <source>With no arguments, this will:</source>
          <target state="translated">Sin argumentos,esto lo hará:</target>
        </trans-unit>
        <trans-unit id="07ab1293ff3b475c814f1fed59da838b442b2582" translate="yes" xml:space="preserve">
          <source>With no options and no COMMAND or GUIDE given, the synopsis of the &lt;code&gt;git&lt;/code&gt; command and a list of the most commonly used Git commands are printed on the standard output.</source>
          <target state="translated">Sin opciones y sin COMANDO o GU&amp;Iacute;A, la sinopsis del comando &lt;code&gt;git&lt;/code&gt; y una lista de los comandos Git m&amp;aacute;s utilizados se imprimen en la salida est&amp;aacute;ndar.</target>
        </trans-unit>
        <trans-unit id="5afd0acc1bfdb6a1daab0a26aea947b62407909e" translate="yes" xml:space="preserve">
          <source>With something like git.git current tree, I get:</source>
          <target state="translated">Con algo como el árbol de corriente git.git,entiendo:</target>
        </trans-unit>
        <trans-unit id="48292de53da5a3060e12b426e889eefbf2d24e76" translate="yes" xml:space="preserve">
          <source>With that configuration the full path to browse repositories would be:</source>
          <target state="translated">Con esa configuración el camino completo para navegar por los depósitos sería:</target>
        </trans-unit>
        <trans-unit id="de963656527f9e7a6067d643ee4aa5bfca1b2d08" translate="yes" xml:space="preserve">
          <source>With the &lt;code&gt;--append&lt;/code&gt; option, include all commits that are present in the existing commit-graph file.</source>
          <target state="translated">Con la opci&amp;oacute;n &lt;code&gt;--append&lt;/code&gt; , incluya todas las confirmaciones que est&amp;aacute;n presentes en el archivo de gr&amp;aacute;fico de confirmaci&amp;oacute;n existente.</target>
        </trans-unit>
        <trans-unit id="14495f11a1a9217fb75c7d6db611a80cccd6e859" translate="yes" xml:space="preserve">
          <source>With the &lt;code&gt;--branch&lt;/code&gt; option, the command takes a name and checks if it can be used as a valid branch name (e.g. when creating a new branch). But be cautious when using the previous checkout syntax that may refer to a detached HEAD state. The rule &lt;code&gt;git check-ref-format --branch $name&lt;/code&gt; implements may be stricter than what &lt;code&gt;git check-ref-format refs/heads/$name&lt;/code&gt; says (e.g. a dash may appear at the beginning of a ref component, but it is explicitly forbidden at the beginning of a branch name). When run with &lt;code&gt;--branch&lt;/code&gt; option in a repository, the input is first expanded for the &amp;ldquo;previous checkout syntax&amp;rdquo; &lt;code&gt;@{-n}&lt;/code&gt;. For example, &lt;code&gt;@{-1}&lt;/code&gt; is a way to refer the last thing that was checked out using &quot;git switch&quot; or &quot;git checkout&quot; operation. This option should be used by porcelains to accept this syntax anywhere a branch name is expected, so they can act as if you typed the branch name. As an exception note that, the &amp;ldquo;previous checkout operation&amp;rdquo; might result in a commit object name when the N-th last thing checked out was not a branch.</source>
          <target state="translated">Con la opci&amp;oacute;n &lt;code&gt;--branch&lt;/code&gt; , el comando toma un nombre y comprueba si se puede usar como un nombre de rama v&amp;aacute;lido (por ejemplo, al crear una nueva rama). Pero tenga cuidado al usar la sintaxis de pago anterior que puede referirse a un estado HEAD separado. La regla &lt;code&gt;git check-ref-format --branch $name&lt;/code&gt; implements puede ser m&amp;aacute;s estricta que lo que dice &lt;code&gt;git check-ref-format refs/heads/$name&lt;/code&gt; (por ejemplo, un gui&amp;oacute;n puede aparecer al principio de un componente ref, pero es expl&amp;iacute;citamente prohibido al comienzo del nombre de una sucursal). Cuando se ejecuta con la opci&amp;oacute;n &lt;code&gt;--branch&lt;/code&gt; en un repositorio, la entrada se expande primero para la &quot;sintaxis de pago anterior&quot; &lt;code&gt;@{-n}&lt;/code&gt; . Por ejemplo, &lt;code&gt;@{-1}&lt;/code&gt; es una forma de referirse a lo &amp;uacute;ltimo que se comprob&amp;oacute; mediante la operaci&amp;oacute;n &quot;git switch&quot; o &quot;git checkout&quot;. Porcelanas deber&amp;iacute;a utilizar esta opci&amp;oacute;n para aceptar esta sintaxis en cualquier lugar donde se espere un nombre de rama, de modo que puedan actuar como si hubiera escrito el nombre de la rama. Como excepci&amp;oacute;n, tenga en cuenta que, la &quot;operaci&amp;oacute;n de pago anterior&quot; podr&amp;iacute;a resultar en un nombre de objeto de confirmaci&amp;oacute;n cuando la &amp;uacute;ltima cosa N-&amp;eacute;sima extra&amp;iacute;da no era una rama.</target>
        </trans-unit>
        <trans-unit id="f26f07033bd08bfdb6102afbc60e4bb690a51e35" translate="yes" xml:space="preserve">
          <source>With the &lt;code&gt;--reachable&lt;/code&gt; option, generate the new commit graph by walking commits starting at all refs. (Cannot be combined with &lt;code&gt;--stdin-commits&lt;/code&gt; or &lt;code&gt;--stdin-packs&lt;/code&gt;.)</source>
          <target state="translated">Con la opci&amp;oacute;n &lt;code&gt;--reachable&lt;/code&gt; , genere el nuevo gr&amp;aacute;fico de confirmaciones caminando confirmaciones comenzando en todas las referencias. (No se puede combinar con &lt;code&gt;--stdin-commits&lt;/code&gt; o &lt;code&gt;--stdin-packs&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="bced3fa737464959bcb0c4d4992aedaa6293d7b5" translate="yes" xml:space="preserve">
          <source>With the &lt;code&gt;--shallow&lt;/code&gt; option, only check the tip commit-graph file in a chain of split commit-graphs.</source>
          <target state="translated">Con la opci&amp;oacute;n &lt;code&gt;--shallow&lt;/code&gt; , solo verifica el archivo tip commit-graph en una cadena de split commit-graphs.</target>
        </trans-unit>
        <trans-unit id="023fb87ae200847a2eb976930adb7f7ff9a576bb" translate="yes" xml:space="preserve">
          <source>With the &lt;code&gt;--split&lt;/code&gt; option, write the commit-graph as a chain of multiple commit-graph files stored in &lt;code&gt;&amp;lt;dir&amp;gt;/info/commit-graphs&lt;/code&gt;. The new commits not already in the commit-graph are added in a new &quot;tip&quot; file. This file is merged with the existing file if the following merge conditions are met:</source>
          <target state="translated">Con la opci&amp;oacute;n &lt;code&gt;--split&lt;/code&gt; , escriba el commit-graph como una cadena de m&amp;uacute;ltiples archivos de commit-graph almacenados en &lt;code&gt;&amp;lt;dir&amp;gt;/info/commit-graphs&lt;/code&gt; . Las nuevas confirmaciones que a&amp;uacute;n no est&amp;aacute;n en el gr&amp;aacute;fico de confirmaci&amp;oacute;n se agregan en un nuevo archivo &quot;tip&quot;. Este archivo se fusiona con el archivo existente si se cumplen las siguientes condiciones de fusi&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="0f402e69b2097f87a53ae26564ee053ba1f630ec" translate="yes" xml:space="preserve">
          <source>With the &lt;code&gt;--stdin-commits&lt;/code&gt; option, generate the new commit graph by walking commits starting at the commits specified in stdin as a list of OIDs in hex, one OID per line. (Cannot be combined with &lt;code&gt;--stdin-packs&lt;/code&gt; or &lt;code&gt;--reachable&lt;/code&gt;.)</source>
          <target state="translated">Con la opci&amp;oacute;n &lt;code&gt;--stdin-commits&lt;/code&gt; , genere el nuevo gr&amp;aacute;fico de confirmaciones caminando confirmaciones comenzando en las confirmaciones especificadas en stdin como una lista de OID en hexadecimal, un OID por l&amp;iacute;nea. (No se puede combinar con &lt;code&gt;--stdin-packs&lt;/code&gt; o &lt;code&gt;--reachable&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="eaf73ef52d157ce1e4ddc4b827c0a6415ea79de1" translate="yes" xml:space="preserve">
          <source>With the &lt;code&gt;--stdin-packs&lt;/code&gt; option, generate the new commit graph by walking objects only in the specified pack-indexes. (Cannot be combined with &lt;code&gt;--stdin-commits&lt;/code&gt; or &lt;code&gt;--reachable&lt;/code&gt;.)</source>
          <target state="translated">Con la opci&amp;oacute;n &lt;code&gt;--stdin-packs&lt;/code&gt; , genere el nuevo gr&amp;aacute;fico de confirmaci&amp;oacute;n caminando objetos solo en los &amp;iacute;ndices de paquete especificados. (No se puede combinar con &lt;code&gt;--stdin-commits&lt;/code&gt; o &lt;code&gt;--reachable&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="17857b1a19de2786ab177b98550f7755d5958169" translate="yes" xml:space="preserve">
          <source>With the &lt;code&gt;subsystem&lt;/code&gt; reflog: after &lt;code&gt;git fetch&lt;/code&gt;, the old tip of &lt;code&gt;subsystem&lt;/code&gt; is at &lt;code&gt;subsystem@{1}&lt;/code&gt;. Subsequent fetches will increase the number. (See &lt;a href=&quot;git-reflog&quot;&gt;git-reflog[1]&lt;/a&gt;.)</source>
          <target state="translated">Con el &lt;code&gt;subsystem&lt;/code&gt; reflog: despu&amp;eacute;s de &lt;code&gt;git fetch&lt;/code&gt; , el viejo consejo del &lt;code&gt;subsystem&lt;/code&gt; est&amp;aacute; en &lt;code&gt;subsystem@{1}&lt;/code&gt; . Las recuperaciones posteriores aumentar&amp;aacute;n el n&amp;uacute;mero. (Consulte &lt;a href=&quot;git-reflog&quot;&gt;git-reflog [1]&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="b4f2100600cd65d2bb507aefd40b38b428ed31a7" translate="yes" xml:space="preserve">
          <source>With the example above that would give:</source>
          <target state="translated">Con el ejemplo anterior eso daría:</target>
        </trans-unit>
        <trans-unit id="a003c8ea87ae62c71ced8657b18db066ae621f53" translate="yes" xml:space="preserve">
          <source>With the exception of raw file data (which Git does not interpret) the fast-import input format is text (ASCII) based. This text based format simplifies development and debugging of frontend programs, especially when a higher level language such as Perl, Python or Ruby is being used.</source>
          <target state="translated">Con la excepción de los datos de archivo en bruto (que Git no interpreta),el formato de entrada de importación rápida se basa en el texto (ASCII).Este formato basado en texto simplifica el desarrollo y la depuración de los programas de frontend,especialmente cuando se utiliza un lenguaje de mayor nivel como Perl,Python o Ruby.</target>
        </trans-unit>
        <trans-unit id="832b24adba81a74f8f3c27d1a374c3c9abe6eae9" translate="yes" xml:space="preserve">
          <source>With the latter, you can use the manual viewer of your choice; see &lt;a href=&quot;git-help&quot;&gt;git-help[1]&lt;/a&gt; for more information.</source>
          <target state="translated">Con este &amp;uacute;ltimo, puede utilizar el visor manual de su elecci&amp;oacute;n; consulte &lt;a href=&quot;git-help&quot;&gt;git-help [1]&lt;/a&gt; para obtener m&amp;aacute;s informaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="fd552b2cf02d64fea6c3a2fbecdcfeec69fa5199" translate="yes" xml:space="preserve">
          <source>With the right arguments, &lt;code&gt;git diff&lt;/code&gt; can also show us the difference between the working directory and the last commit, or between the index and the last commit:</source>
          <target state="translated">Con los argumentos correctos, &lt;code&gt;git diff&lt;/code&gt; tambi&amp;eacute;n puede mostrarnos la diferencia entre el directorio de trabajo y la &amp;uacute;ltima confirmaci&amp;oacute;n, o entre el &amp;iacute;ndice y la &amp;uacute;ltima confirmaci&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="6936b3f47f8ae1f272ba09aecb9105ac3f327d8a" translate="yes" xml:space="preserve">
          <source>With the strategies that use 3-way merge (including the default, &lt;code&gt;recursive&lt;/code&gt;), if a change is made on both branches, but later reverted on one of the branches, that change will be present in the merged result; some people find this behavior confusing. It occurs because only the heads and the merge base are considered when performing a merge, not the individual commits. The merge algorithm therefore considers the reverted change as no change at all, and substitutes the changed version instead.</source>
          <target state="translated">Con las estrategias que utilizan la combinaci&amp;oacute;n de 3 v&amp;iacute;as (incluida la predeterminada, &lt;code&gt;recursive&lt;/code&gt; ), si se realiza un cambio en ambas ramas, pero luego se revierte en una de las ramas, ese cambio estar&amp;aacute; presente en el resultado combinado; algunas personas encuentran este comportamiento confuso. Ocurre porque solo se consideran las cabezas y la base de fusi&amp;oacute;n al realizar una fusi&amp;oacute;n, no las confirmaciones individuales. Por lo tanto, el algoritmo de combinaci&amp;oacute;n considera el cambio revertido como ning&amp;uacute;n cambio en absoluto y sustituye la versi&amp;oacute;n modificada.</target>
        </trans-unit>
        <trans-unit id="993a54cdc4357f066aea765f4571bf68eff0acc7" translate="yes" xml:space="preserve">
          <source>With this option, &lt;code&gt;git cherry-pick&lt;/code&gt; will let you edit the commit message prior to committing.</source>
          <target state="translated">Con esta opci&amp;oacute;n, &lt;code&gt;git cherry-pick&lt;/code&gt; te permitir&amp;aacute; editar el mensaje de confirmaci&amp;oacute;n antes de la confirmaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="333853f3b4bc551496449cd51ab3f625f2fd83b5" translate="yes" xml:space="preserve">
          <source>With this option, &lt;code&gt;git gc&lt;/code&gt; checks whether any housekeeping is required; if not, it exits without performing any work.</source>
          <target state="translated">Con esta opci&amp;oacute;n, &lt;code&gt;git gc&lt;/code&gt; comprueba si se requiere alguna limpieza; si no, sale sin realizar ning&amp;uacute;n trabajo.</target>
        </trans-unit>
        <trans-unit id="71e625d3b0cf2785820345a3c9b0fc38126ae685" translate="yes" xml:space="preserve">
          <source>With this option, &lt;code&gt;git revert&lt;/code&gt; will let you edit the commit message prior to committing the revert. This is the default if you run the command from a terminal.</source>
          <target state="translated">Con esta opci&amp;oacute;n, &lt;code&gt;git revert&lt;/code&gt; te permitir&amp;aacute; editar el mensaje de confirmaci&amp;oacute;n antes de realizar la reversi&amp;oacute;n. Este es el valor predeterminado si ejecuta el comando desde una terminal.</target>
        </trans-unit>
        <trans-unit id="c4b763c3b176a1288a147104d8354f56c0e27e09" translate="yes" xml:space="preserve">
          <source>With this option, &lt;code&gt;git revert&lt;/code&gt; will not start the commit message editor.</source>
          <target state="translated">Con esta opci&amp;oacute;n, &lt;code&gt;git revert&lt;/code&gt; no iniciar&amp;aacute; el editor de mensajes de confirmaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="8c4fe13a9c7d1e41585a8e2b5418a2b1ca5a28f1" translate="yes" xml:space="preserve">
          <source>With this option, &lt;code&gt;merge-recursive&lt;/code&gt; spends a little extra time to avoid mismerges that sometimes occur due to unimportant matching lines (e.g., braces from distinct functions). Use this when the branches to be merged have diverged wildly. See also &lt;a href=&quot;git-diff&quot;&gt;git-diff[1]&lt;/a&gt;&lt;code&gt;--patience&lt;/code&gt;.</source>
          <target state="translated">Con esta opci&amp;oacute;n, &lt;code&gt;merge-recursive&lt;/code&gt; gasta un poco de tiempo extra para evitar combinaciones err&amp;oacute;neas que a veces ocurren debido a l&amp;iacute;neas coincidentes sin importancia (por ejemplo, llaves de funciones distintas). &amp;Uacute;selo cuando las ramas que se van a fusionar hayan divergido enormemente. Consulte tambi&amp;eacute;n &lt;a href=&quot;git-diff&quot;&gt;git-diff [1] &lt;/a&gt; &lt;code&gt;--patience&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9b7fa933690b4dfe40d9dc500f9cfa6ba3897c3d" translate="yes" xml:space="preserve">
          <source>With this option, diff output for a merge commit shows the differences from each of the parents to the merge result simultaneously instead of showing pairwise diff between a parent and the result one at a time. Furthermore, it lists only files which were modified from all parents.</source>
          <target state="translated">Con esta opción,la salida de diff para un commit de fusión muestra las diferencias de cada uno de los padres al resultado de la fusión simultáneamente en lugar de mostrar las diferencias por pares entre un padre y el resultado de uno en uno.Además,sólo muestra los ficheros que fueron modificados de todos los padres.</target>
        </trans-unit>
        <trans-unit id="3524864d6b6fccf88decb6caefb79eeb0a8e7c7e" translate="yes" xml:space="preserve">
          <source>With this option, git will replace all refnames, paths, blob contents, commit and tag messages, names, and email addresses in the output with anonymized data. Two instances of the same string will be replaced equivalently (e.g., two commits with the same author will have the same anonymized author in the output, but bear no resemblance to the original author string). The relationship between commits, branches, and tags is retained, as well as the commit timestamps (but the commit messages and refnames bear no resemblance to the originals). The relative makeup of the tree is retained (e.g., if you have a root tree with 10 files and 3 trees, so will the output), but their names and the contents of the files will be replaced.</source>
          <target state="translated">Con esta opción,git reemplazará todos los nombres,rutas,contenidos de blob,mensajes de commit y tag,nombres y direcciones de correo electrónico en la salida con datos anonimizados.Dos instancias de la misma cadena serán reemplazadas de manera equivalente (por ejemplo,dos confirmaciones con el mismo autor tendrán el mismo autor anónimo en la salida,pero no tendrán ninguna semejanza con la cadena del autor original).Se mantiene la relación entre confirmaciones,ramas y etiquetas,así como las marcas de tiempo de las confirmaciones (pero los mensajes de confirmación y los nombres de reenvío no se parecen a los originales).Se conserva la composición relativa del árbol (por ejemplo,si tiene un árbol raíz con 10 archivos y 3 árboles,también lo hará la salida),pero sus nombres y el contenido de los archivos serán reemplazados.</target>
        </trans-unit>
        <trans-unit id="cbb1ff7744c2585e2c6b4c0275539aaae99818d7" translate="yes" xml:space="preserve">
          <source>With this option, parents that are hidden by grafts are packed nevertheless.</source>
          <target state="translated">Con esta opción,los padres que están ocultos por los injertos son empacados sin embargo.</target>
        </trans-unit>
        <trans-unit id="64d24b372615e7424e92210d8b3079a3b6d54b46" translate="yes" xml:space="preserve">
          <source>With this option, the command includes the current branch to the list of revs to be shown when it is not given on the command line.</source>
          <target state="translated">Con esta opción,el comando incluye la rama actual a la lista de revoluciones a mostrar cuando no se da en la línea de comandos.</target>
        </trans-unit>
        <trans-unit id="a7994938c4128018ec7f46d918cac8d359a1f2eb" translate="yes" xml:space="preserve">
          <source>With this, &lt;code&gt;git show-branch&lt;/code&gt; without extra parameters would show only the primary branches. In addition, if you happen to be on your topic branch, it is shown as well.</source>
          <target state="translated">Con esto, &lt;code&gt;git show-branch&lt;/code&gt; sin par&amp;aacute;metros adicionales mostrar&amp;iacute;a solo las ramas primarias. Adem&amp;aacute;s, si se encuentra en la rama de su tema, tambi&amp;eacute;n se muestra.</target>
        </trans-unit>
        <trans-unit id="7d389d82d11c207ddbcbb54d477d308b2e5d9f7f" translate="yes" xml:space="preserve">
          <source>With this, Alice can perform the first part of the &quot;pull&quot; operation alone using the &lt;code&gt;git fetch&lt;/code&gt; command without merging them with her own branch, using:</source>
          <target state="translated">Con esto, Alice puede realizar la primera parte de la operaci&amp;oacute;n &quot;pull&quot; solo usando el comando &lt;code&gt;git fetch&lt;/code&gt; sin fusionarlos con su propia rama, usando:</target>
        </trans-unit>
        <trans-unit id="6062bf6506f2ab2b976dee38aa5322c59a129e2f" translate="yes" xml:space="preserve">
          <source>Within a linked working tree, $GIT_DIR is set to point to this private directory (e.g. &lt;code&gt;/path/main/.git/worktrees/test-next&lt;/code&gt; in the example) and $GIT_COMMON_DIR is set to point back to the main working tree&amp;rsquo;s $GIT_DIR (e.g. &lt;code&gt;/path/main/.git&lt;/code&gt;). These settings are made in a &lt;code&gt;.git&lt;/code&gt; file located at the top directory of the linked working tree.</source>
          <target state="translated">Dentro de un &amp;aacute;rbol de trabajo vinculado, $ GIT_DIR est&amp;aacute; configurado para apuntar a este directorio privado (por ejemplo, &lt;code&gt;/path/main/.git/worktrees/test-next&lt;/code&gt; en el ejemplo) y $ GIT_COMMON_DIR est&amp;aacute; configurado para apuntar al $ GIT_DIR del &amp;aacute;rbol de trabajo principal (por ejemplo, &lt;code&gt;/path/main/.git&lt;/code&gt; ). Estas configuraciones se realizan en un archivo &lt;code&gt;.git&lt;/code&gt; ubicado en el directorio superior del &amp;aacute;rbol de trabajo vinculado.</target>
        </trans-unit>
        <trans-unit id="f531335c76344721aaf744205582ff3be68651bd" translate="yes" xml:space="preserve">
          <source>Without &lt;code&gt;--all&lt;/code&gt; and without any &lt;code&gt;&amp;lt;ref&amp;gt;&lt;/code&gt;, the heads that exist both on the local side and on the remote side are updated.</source>
          <target state="translated">Sin &lt;code&gt;--all&lt;/code&gt; y sin ning&amp;uacute;n &lt;code&gt;&amp;lt;ref&amp;gt;&lt;/code&gt; , se actualizan las cabezas que existen tanto en el lado local como en el remoto.</target>
        </trans-unit>
        <trans-unit id="af870a4c72e2ec7c668a803b1e745b16df6d1c9d" translate="yes" xml:space="preserve">
          <source>Without &lt;code&gt;--follow-symlinks&lt;/code&gt;, these would print data about the symlink itself. In the case of &lt;code&gt;HEAD:link&lt;/code&gt;, you would see</source>
          <target state="translated">Sin &lt;code&gt;--follow-symlinks&lt;/code&gt; , estos imprimir&amp;iacute;an datos sobre el enlace simb&amp;oacute;lico en s&amp;iacute;. En el caso de &lt;code&gt;HEAD:link&lt;/code&gt; , ver&amp;aacute;</target>
        </trans-unit>
        <trans-unit id="a213d6298e44415b29925050ee6ffa235637e828" translate="yes" xml:space="preserve">
          <source>Without &lt;code&gt;--force&lt;/code&gt;, the &amp;lt;src&amp;gt; ref is stored at the remote only if &amp;lt;dst&amp;gt; does not exist, or &amp;lt;dst&amp;gt; is a proper subset (i.e. an ancestor) of &amp;lt;src&amp;gt;. This check, known as &quot;fast-forward check&quot;, is performed in order to avoid accidentally overwriting the remote ref and lose other peoples' commits from there.</source>
          <target state="translated">Sin &lt;code&gt;--force&lt;/code&gt; , la referencia de &amp;lt;src&amp;gt; se almacena en el control remoto solo si &amp;lt;dst&amp;gt; no existe, o &amp;lt;dst&amp;gt; es un subconjunto adecuado (es decir, un ancestro) de &amp;lt;src&amp;gt;. Esta verificaci&amp;oacute;n, conocida como &quot;verificaci&amp;oacute;n de avance r&amp;aacute;pido&quot;, se realiza para evitar sobrescribir accidentalmente la referencia remota y perder las confirmaciones de otras personas desde all&amp;iacute;.</target>
        </trans-unit>
        <trans-unit id="44aa5155d389a8a00fc9a9c0d5c5dc24c0b6b423" translate="yes" xml:space="preserve">
          <source>Without additional configuration, pushes the current branch to the configured upstream (&lt;code&gt;remote.origin.merge&lt;/code&gt; configuration variable) if it has the same name as the current branch, and errors out without pushing otherwise.</source>
          <target state="translated">Sin configuraci&amp;oacute;n adicional, empuja la rama actual a la corriente ascendente configurada ( variable de configuraci&amp;oacute;n &lt;code&gt;remote.origin.merge&lt;/code&gt; ) si tiene el mismo nombre que la rama actual, y elimina los errores sin empujar lo contrario.</target>
        </trans-unit>
        <trans-unit id="0d4981e0bf66e69e6f534946531426d82d26ec6d" translate="yes" xml:space="preserve">
          <source>Without an optional path parameter, all files and subdirectories of the current working directory are included in the archive. If one or more paths are specified, only these are included.</source>
          <target state="translated">Sin un parámetro de ruta opcional,todos los archivos y subdirectorios del directorio de trabajo actual se incluyen en el archivo.Si se especifican una o más rutas,sólo se incluyen éstas.</target>
        </trans-unit>
        <trans-unit id="0aaf17e36c6d625d7976371bb21725d2cea205e0" translate="yes" xml:space="preserve">
          <source>Without any credential helpers defined, Git will try the following strategies to ask the user for usernames and passwords:</source>
          <target state="translated">Sin definir ningún ayudante de credenciales,Git intentará las siguientes estrategias para pedir al usuario nombres de usuario y contraseñas:</target>
        </trans-unit>
        <trans-unit id="6f8c2669a27a9c22abf3f515b27b1a9a5be3b6dc" translate="yes" xml:space="preserve">
          <source>Without disambiguating &lt;code&gt;--&lt;/code&gt;, Git makes a reasonable guess, but errors out and asking you to disambiguate when ambiguous. E.g. if you have a file called HEAD in your work tree, &lt;code&gt;git diff HEAD&lt;/code&gt; is ambiguous, and you have to say either &lt;code&gt;git diff HEAD --&lt;/code&gt; or &lt;code&gt;git diff -- HEAD&lt;/code&gt; to disambiguate.</source>
          <target state="translated">Sin desambiguaci&amp;oacute;n &lt;code&gt;--&lt;/code&gt; , Git hace una suposici&amp;oacute;n razonable, pero los errores hacia fuera y que le piden que eliminar la ambig&amp;uuml;edad cuando ambigua. Por ejemplo, si tiene un archivo llamado HEAD en su &amp;aacute;rbol de trabajo, &lt;code&gt;git diff HEAD&lt;/code&gt; es ambiguo, y tiene que decir &lt;code&gt;git diff HEAD --&lt;/code&gt; o &lt;code&gt;git diff -- HEAD&lt;/code&gt; para eliminar la ambig&amp;uuml;edad .</target>
        </trans-unit>
        <trans-unit id="636ef8b24660180a9f9d02cde9f707a809036029" translate="yes" xml:space="preserve">
          <source>Without the &lt;code&gt;-z&lt;/code&gt; option, pathnames with &quot;unusual&quot; characters are quoted as explained for the configuration variable &lt;code&gt;core.quotePath&lt;/code&gt; (see &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;).</source>
          <target state="translated">Sin la opci&amp;oacute;n &lt;code&gt;-z&lt;/code&gt; , los nombres de ruta con caracteres &quot;inusuales&quot; se citan como se explica para la variable de configuraci&amp;oacute;n &lt;code&gt;core.quotePath&lt;/code&gt; (ver &lt;a href=&quot;git-config&quot;&gt;git-config [1]&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="fbf6695514712c3a8e39b514953f35111f6c3ca8" translate="yes" xml:space="preserve">
          <source>Without the &lt;code&gt;-z&lt;/code&gt; option, pathnames with &quot;unusual&quot; characters are quoted as explained for the configuration variable &lt;code&gt;core.quotePath&lt;/code&gt; (see &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;). Using &lt;code&gt;-z&lt;/code&gt; the filename is output verbatim and the line is terminated by a NUL byte.</source>
          <target state="translated">Sin la opci&amp;oacute;n &lt;code&gt;-z&lt;/code&gt; , los nombres de ruta con caracteres &quot;inusuales&quot; se citan como se explica para la variable de configuraci&amp;oacute;n &lt;code&gt;core.quotePath&lt;/code&gt; (ver &lt;a href=&quot;git-config&quot;&gt;git-config [1]&lt;/a&gt; ). Usando &lt;code&gt;-z&lt;/code&gt; , el nombre del archivo se muestra literalmente y la l&amp;iacute;nea termina con un byte NUL.</target>
        </trans-unit>
        <trans-unit id="94da29d7f90d6f6f16856adba693bd0f5ed5aeb9" translate="yes" xml:space="preserve">
          <source>Without the &lt;em&gt;--more=1&lt;/em&gt; option, &lt;em&gt;git show-branch&lt;/em&gt; would not output the &lt;em&gt;[master^]&lt;/em&gt; commit, as &lt;em&gt;[mybranch]&lt;/em&gt; commit is a common ancestor of both &lt;em&gt;master&lt;/em&gt; and &lt;em&gt;mybranch&lt;/em&gt; tips. Please see &lt;a href=&quot;git-show-branch&quot;&gt;git-show-branch[1]&lt;/a&gt; for details.</source>
          <target state="translated">Sin la opci&amp;oacute;n &lt;em&gt;--more = 1&lt;/em&gt; , &lt;em&gt;git show-branch&lt;/em&gt; no generar&amp;iacute;a la confirmaci&amp;oacute;n &lt;em&gt;[master ^]&lt;/em&gt; , ya que la &lt;em&gt;confirmaci&amp;oacute;n [mybranch]&lt;/em&gt; es un ancestro com&amp;uacute;n de las sugerencias tanto de &lt;em&gt;master&lt;/em&gt; como de &lt;em&gt;mybranch&lt;/em&gt; . Consulte &lt;a href=&quot;git-show-branch&quot;&gt;git-show-branch [1]&lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="c29d8269d6df0a76bd7b7031ef1a5a35a844def8" translate="yes" xml:space="preserve">
          <source>Without this flag, &lt;code&gt;git log -p &amp;lt;path&amp;gt;...&lt;/code&gt; shows commits that touch the specified paths, and diffs about the same specified paths. With this, the full diff is shown for commits that touch the specified paths; this means that &quot;&amp;lt;path&amp;gt;&amp;hellip;​&quot; limits only commits, and doesn&amp;rsquo;t limit diff for those commits.</source>
          <target state="translated">Sin esta marca, &lt;code&gt;git log -p &amp;lt;path&amp;gt;...&lt;/code&gt; muestra confirmaciones que tocan las rutas especificadas y difiere sobre las mismas rutas especificadas. Con esto, se muestra la diferencia completa para las confirmaciones que tocan las rutas especificadas; esto significa que &quot;&amp;lt;ruta&amp;gt; ...&quot; limita solo las confirmaciones y no limita la diferencia para esas confirmaciones.</target>
        </trans-unit>
        <trans-unit id="b86cf57585935f6e60cc9059e45208393d99c9a8" translate="yes" xml:space="preserve">
          <source>Without this option, pathnames with &quot;unusual&quot; characters are quoted as explained for the configuration variable &lt;code&gt;core.quotePath&lt;/code&gt; (see &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;).</source>
          <target state="translated">Sin esta opci&amp;oacute;n, los nombres de ruta con caracteres &quot;inusuales&quot; se citan como se explica para la variable de configuraci&amp;oacute;n &lt;code&gt;core.quotePath&lt;/code&gt; (ver &lt;a href=&quot;git-config&quot;&gt;git-config [1]&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="8450aafea5471fb336aa6711b707fb955fd65d91" translate="yes" xml:space="preserve">
          <source>Workflow for a third party library</source>
          <target state="translated">El flujo de trabajo para una biblioteca de terceros</target>
        </trans-unit>
        <trans-unit id="8dfb0e4b50fd82c5ff8bc5fed81147f5e4aadb05" translate="yes" xml:space="preserve">
          <source>Workflow for an artificially split repo</source>
          <target state="translated">El flujo de trabajo para un repo artificialmente dividido</target>
        </trans-unit>
        <trans-unit id="825ce9e97dc41179ec167b83be91179b5dacd316" translate="yes" xml:space="preserve">
          <source>Workflows</source>
          <target state="translated">Workflows</target>
        </trans-unit>
        <trans-unit id="72b02433b5041ac5ef6045242ff8d0e2784944a3" translate="yes" xml:space="preserve">
          <source>Working branch; defaults to HEAD.</source>
          <target state="translated">Rama de trabajo;por defecto es CABEZA.</target>
        </trans-unit>
        <trans-unit id="a2b68acce45b31c1701e61880a9ac430bd217ef5" translate="yes" xml:space="preserve">
          <source>Working directory specific configuration file for the main working directory in multiple working directory setup (see &lt;a href=&quot;git-worktree&quot;&gt;git-worktree[1]&lt;/a&gt;).</source>
          <target state="translated">Archivo de configuraci&amp;oacute;n espec&amp;iacute;fico del directorio de trabajo para el directorio de trabajo principal en la configuraci&amp;oacute;n de varios directorios de trabajo (ver &lt;a href=&quot;git-worktree&quot;&gt;git-worktree [1]&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="29f32a47a3074cae8d2558abdc45a4c7a3f4de27" translate="yes" xml:space="preserve">
          <source>Working directory specific configuration file.</source>
          <target state="translated">Archivo de configuración específico del directorio de trabajo.</target>
        </trans-unit>
        <trans-unit id="b7010e71f35d363293e1c71cea9eb7b673f227d7" translate="yes" xml:space="preserve">
          <source>Working trees can be identified by path, either relative or absolute.</source>
          <target state="translated">Los árboles de trabajo pueden identificarse por su trayectoria,ya sea relativa o absoluta.</target>
        </trans-unit>
        <trans-unit id="e5850a4e043e763eb3c70b51337df764ed12f013" translate="yes" xml:space="preserve">
          <source>Working with others</source>
          <target state="translated">Trabajando con otros</target>
        </trans-unit>
        <trans-unit id="883363a342498bf776fadbacf0d9322246ddce5d" translate="yes" xml:space="preserve">
          <source>Working with others, shared repository style</source>
          <target state="translated">Trabajando con otros,el estilo de depósito compartido</target>
        </trans-unit>
        <trans-unit id="62159bf12f9108d11431e1d1114bdbbeecf78451" translate="yes" xml:space="preserve">
          <source>Works just like --signature except the signature is read from a file.</source>
          <target state="translated">Funciona igual que...la firma,excepto que la firma se lee desde un archivo.</target>
        </trans-unit>
        <trans-unit id="097006f59137099e2d2ccff414198fea83903044" translate="yes" xml:space="preserve">
          <source>Works just like format.signature except the contents of the file specified by this variable will be used as the signature.</source>
          <target state="translated">Funciona igual que format.signature,excepto que el contenido del archivo especificado por esta variable se utilizará como firma.</target>
        </trans-unit>
        <trans-unit id="c45647582ec4fc92bdcd3ecd1a16e9638ca339a8" translate="yes" xml:space="preserve">
          <source>Works like &lt;code&gt;git push &amp;lt;remote&amp;gt;&lt;/code&gt;, where &amp;lt;remote&amp;gt; is the current branch&amp;rsquo;s remote (or &lt;code&gt;origin&lt;/code&gt;, if no remote is configured for the current branch).</source>
          <target state="translated">Funciona como &lt;code&gt;git push &amp;lt;remote&amp;gt;&lt;/code&gt; , donde &amp;lt;remote&amp;gt; es el control remoto de la rama actual (o el &lt;code&gt;origin&lt;/code&gt; , si no hay ning&amp;uacute;n control remoto configurado para la rama actual).</target>
        </trans-unit>
        <trans-unit id="96f0b3b7db8530493b30466426fa80c5c21f66c1" translate="yes" xml:space="preserve">
          <source>Wrap code spawning child processes.</source>
          <target state="translated">Envuelve el código de los procesos de desove de los niños.</target>
        </trans-unit>
        <trans-unit id="1f9c72af7bca7c9666626fcb471d6065e154c93d" translate="yes" xml:space="preserve">
          <source>Write a MIDX file for the packfiles in an alternate object store.</source>
          <target state="translated">Escribe un archivo MIDX para los archivos del paquete en un almacén de objetos alternativos.</target>
        </trans-unit>
        <trans-unit id="36b48ab2e331354b7c3cc2f14ff9d8ea9d1001c3" translate="yes" xml:space="preserve">
          <source>Write a MIDX file for the packfiles in the current .git folder.</source>
          <target state="translated">Escriba un archivo MIDX para los archivos del paquete en la actual carpeta .git.</target>
        </trans-unit>
        <trans-unit id="b42a0c66496716fcd8c88f5906d20e5cf08f4975" translate="yes" xml:space="preserve">
          <source>Write a chapter on using plumbing and writing scripts.</source>
          <target state="translated">Escriba un capítulo sobre el uso de la plomería y la escritura de guiones.</target>
        </trans-unit>
        <trans-unit id="c8e128b9f546fd58c7e614d0f8b8821821084ae1" translate="yes" xml:space="preserve">
          <source>Write a commit-graph after fetching. This overrides the config setting &lt;code&gt;fetch.writeCommitGraph&lt;/code&gt;.</source>
          <target state="translated">Escriba un gr&amp;aacute;fico de confirmaci&amp;oacute;n despu&amp;eacute;s de recuperar. Esto anula la configuraci&amp;oacute;n de configuraci&amp;oacute;n &lt;code&gt;fetch.writeCommitGraph&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e518a1279678087b263b8a6d5d4572c2e8b9dd3b" translate="yes" xml:space="preserve">
          <source>Write a commit-graph file based on the commits found in packfiles.</source>
          <target state="translated">Escriba un archivo de gráficos de confirmación basado en las confirmaciones encontradas en los archivos de paquetes.</target>
        </trans-unit>
        <trans-unit id="a8a7e9f2485bf10bd9980490fdf55b0594e99b5f" translate="yes" xml:space="preserve">
          <source>Write a commit-graph file containing all commits in the current commit-graph file along with those reachable from &lt;code&gt;HEAD&lt;/code&gt;.</source>
          <target state="translated">Escriba un archivo de gr&amp;aacute;fico de confirmaci&amp;oacute;n que contenga todas las confirmaciones en el archivo de gr&amp;aacute;fico de confirmaci&amp;oacute;n actual junto con las accesibles desde &lt;code&gt;HEAD&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8c34e4cbacab76dc7a95f5e0f46081aab1f59603" translate="yes" xml:space="preserve">
          <source>Write a commit-graph file containing all reachable commits.</source>
          <target state="translated">Escriba un archivo gráfico de confirmación que contenga todas las confirmaciones alcanzables.</target>
        </trans-unit>
        <trans-unit id="e1238f6b25cc5d29bebfcc60e794e1647b6dd786" translate="yes" xml:space="preserve">
          <source>Write a commit-graph file for the packed commits in your local &lt;code&gt;.git&lt;/code&gt; directory.</source>
          <target state="translated">Escriba un archivo de gr&amp;aacute;fico de confirmaci&amp;oacute;n para las confirmaciones empaquetadas en su directorio &lt;code&gt;.git&lt;/code&gt; local .</target>
        </trans-unit>
        <trans-unit id="7ba716e808cc8cf569e10d2453e1761bc59eae40" translate="yes" xml:space="preserve">
          <source>Write a commit-graph file, extending the current commit-graph file using commits in &lt;code&gt;&amp;lt;pack-index&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">Escriba un archivo de gr&amp;aacute;fico de confirmaci&amp;oacute;n, ampliando el archivo de gr&amp;aacute;fico de confirmaci&amp;oacute;n actual utilizando confirmaciones en &lt;code&gt;&amp;lt;pack-index&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="73c3a355bd823c82bb9b3a929df0d2e920a5e648" translate="yes" xml:space="preserve">
          <source>Write a new MIDX file.</source>
          <target state="translated">Escriba un nuevo archivo MIDX.</target>
        </trans-unit>
        <trans-unit id="b0d7b6d61dd4b6501290a029b72f9ed15f8cc305" translate="yes" xml:space="preserve">
          <source>Write a reachability bitmap index as part of the repack. This only makes sense when used with &lt;code&gt;-a&lt;/code&gt; or &lt;code&gt;-A&lt;/code&gt;, as the bitmaps must be able to refer to all reachable objects. This option overrides the setting of &lt;code&gt;repack.writeBitmaps&lt;/code&gt;. This option has no effect if multiple packfiles are created.</source>
          <target state="translated">Escriba un &amp;iacute;ndice de mapa de bits de accesibilidad como parte del reempaquetado. Esto solo tiene sentido cuando se usa con &lt;code&gt;-a&lt;/code&gt; o &lt;code&gt;-A&lt;/code&gt; , ya que los mapas de bits deben poder referirse a todos los objetos alcanzables. Esta opci&amp;oacute;n anula la configuraci&amp;oacute;n de &lt;code&gt;repack.writeBitmaps&lt;/code&gt; . Esta opci&amp;oacute;n no tiene ning&amp;uacute;n efecto si se crean varios archivos de paquete.</target>
        </trans-unit>
        <trans-unit id="0ec591cf31eda36450bc843a926c4fd529f9a0da" translate="yes" xml:space="preserve">
          <source>Write a set of patterns to the sparse-checkout file, as given as a list of arguments following the &lt;code&gt;set&lt;/code&gt; subcommand. Update the working directory to match the new patterns. Enable the core.sparseCheckout config setting if it is not already enabled.</source>
          <target state="translated">Escriba un conjunto de patrones en el archivo sparse-checkout, como se indica como una lista de argumentos que sigue al subcomando &lt;code&gt;set&lt;/code&gt; . Actualice el directorio de trabajo para que coincida con los nuevos patrones. Habilite la configuraci&amp;oacute;n de configuraci&amp;oacute;n core.sparseCheckout si a&amp;uacute;n no est&amp;aacute; habilitada.</target>
        </trans-unit>
        <trans-unit id="041470620f3506e6e154d55da89dd48b2bba6ec8" translate="yes" xml:space="preserve">
          <source>Write and verify Git commit-graph files</source>
          <target state="translated">Escribir y verificar los archivos de Git commit-graphics</target>
        </trans-unit>
        <trans-unit id="fbde21d9f61e2faa3e597fb0c951212436d2d05f" translate="yes" xml:space="preserve">
          <source>Write and verify multi-pack-indexes</source>
          <target state="translated">Escribir y verificar los índices de paquetes múltiples</target>
        </trans-unit>
        <trans-unit id="0874d3d36a3af067f281de19e268427b067828a4" translate="yes" xml:space="preserve">
          <source>Write dangling objects into .git/lost-found/commit/ or .git/lost-found/other/, depending on type. If the object is a blob, the contents are written into the file, rather than its object name.</source>
          <target state="translated">Escriba los objetos colgantes en .git/los perdidos/commit/o .git/los perdidos/otros/,según el tipo.Si el objeto es una mancha,el contenido se escribe en el archivo,en lugar de su nombre de objeto.</target>
        </trans-unit>
        <trans-unit id="d9accbc71f1215e3614372f554930a021fe71b0a" translate="yes" xml:space="preserve">
          <source>Write into pairs of files (.pack and .idx), using &amp;lt;base-name&amp;gt; to determine the name of the created file. When this option is used, the two files in a pair are written in &amp;lt;base-name&amp;gt;-&amp;lt;SHA-1&amp;gt;.{pack,idx} files. &amp;lt;SHA-1&amp;gt; is a hash based on the pack content and is written to the standard output of the command.</source>
          <target state="translated">Escriba en pares de archivos (.pack y .idx), utilizando &amp;lt;base-name&amp;gt; para determinar el nombre del archivo creado. Cuando se usa esta opci&amp;oacute;n, los dos archivos de un par se escriben en archivos &amp;lt;base-name&amp;gt; - &amp;lt;SHA-1&amp;gt;. {Pack, idx}. &amp;lt;SHA-1&amp;gt; es un hash basado en el contenido del paquete y se escribe en la salida est&amp;aacute;ndar del comando.</target>
        </trans-unit>
        <trans-unit id="7fe0c30065baa84a0511c3d3081d91c7d606dfea" translate="yes" xml:space="preserve">
          <source>Write or verify a multi-pack-index (MIDX) file.</source>
          <target state="translated">Escribir o verificar un archivo de índice multipaquete (MIDX).</target>
        </trans-unit>
        <trans-unit id="e39d29fa27aa3fd795b76126771a3ffa6c08d16a" translate="yes" xml:space="preserve">
          <source>Write responses to &lt;code&gt;get-mark&lt;/code&gt;, &lt;code&gt;cat-blob&lt;/code&gt;, and &lt;code&gt;ls&lt;/code&gt; queries to the file descriptor &amp;lt;fd&amp;gt; instead of &lt;code&gt;stdout&lt;/code&gt;. Allows &lt;code&gt;progress&lt;/code&gt; output intended for the end-user to be separated from other output.</source>
          <target state="translated">Escriba las respuestas a las consultas &lt;code&gt;get-mark&lt;/code&gt; , &lt;code&gt;cat-blob&lt;/code&gt; y &lt;code&gt;ls&lt;/code&gt; en el descriptor de archivo &amp;lt;fd&amp;gt; en lugar de &lt;code&gt;stdout&lt;/code&gt; . Permite que &lt;code&gt;progress&lt;/code&gt; salida de progreso destinada al usuario final se separe de otra salida.</target>
        </trans-unit>
        <trans-unit id="e189db14fd9c8dacb74b437fa25a566d7b39760b" translate="yes" xml:space="preserve">
          <source>Write the archive to &amp;lt;file&amp;gt; instead of stdout.</source>
          <target state="translated">Escriba el archivo en &amp;lt;file&amp;gt; en lugar de stdout.</target>
        </trans-unit>
        <trans-unit id="7dc7fd5fc893589e612150dc5a94bc95c63f6644" translate="yes" xml:space="preserve">
          <source>Write the generated pack index into the specified file. Without this option the name of pack index file is constructed from the name of packed archive file by replacing .pack with .idx (and the program fails if the name of packed archive does not end with .pack).</source>
          <target state="translated">Escriba el índice de paquete generado en el archivo especificado.Sin esta opción,el nombre del archivo índice de paquete se construye a partir del nombre del archivo comprimido reemplazando .pack por .idx (y el programa falla si el nombre del archivo comprimido no termina con .pack).</target>
        </trans-unit>
        <trans-unit id="7ee51e3bc5f984d1828334228be7ce34fc987d1e" translate="yes" xml:space="preserve">
          <source>Write the pack contents (what would have been written to .pack file) out to the standard output.</source>
          <target state="translated">Escriba el contenido del paquete (lo que se habría escrito en el archivo .pack)en la salida estándar.</target>
        </trans-unit>
        <trans-unit id="f8fab17bc8f3e5385c26a96bd869170c9b748651" translate="yes" xml:space="preserve">
          <source>Write the resulting index out in the named on-disk format version. Supported versions are 2, 3 and 4. The current default version is 2 or 3, depending on whether extra features are used, such as &lt;code&gt;git add -N&lt;/code&gt;.</source>
          <target state="translated">Escriba el &amp;iacute;ndice resultante en la versi&amp;oacute;n de formato en disco nombrada. Las versiones compatibles son 2, 3 y 4. La versi&amp;oacute;n predeterminada actual es 2 o 3, dependiendo de si se utilizan funciones adicionales, como &lt;code&gt;git add -N&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="efedecbf7e9a176a45aaee6d10ad017d653ffad6" translate="yes" xml:space="preserve">
          <source>Write to standard error. Note that if &lt;code&gt;--detach&lt;/code&gt; is specified, the process disconnects from the real standard error, making this destination effectively equivalent to &lt;code&gt;none&lt;/code&gt;.</source>
          <target state="translated">Escriba al error est&amp;aacute;ndar. Tenga en cuenta que si se especifica &lt;code&gt;--detach&lt;/code&gt; , el proceso se desconecta del error est&amp;aacute;ndar real, lo que hace que este destino sea efectivamente equivalente a &lt;code&gt;none&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="04570d31869f8fe0ff9437709cb2be3000b6efb7" translate="yes" xml:space="preserve">
          <source>Write to syslog, using the &lt;code&gt;git-daemon&lt;/code&gt; identifier.</source>
          <target state="translated">Escriba en syslog, utilizando el identificador &lt;code&gt;git-daemon&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b06c59a883065a2aa7a048f19cdd388e420a56a1" translate="yes" xml:space="preserve">
          <source>Write whatever message you want, and all the lines that start with &lt;code&gt;#&lt;/code&gt; will be pruned out, and the rest will be used as the commit message for the change. If you decide you don&amp;rsquo;t want to commit anything after all at this point (you can continue to edit things and update the index), you can just leave an empty message. Otherwise &lt;code&gt;git commit&lt;/code&gt; will commit the change for you.</source>
          <target state="translated">Escriba el mensaje que desee, y todas las l&amp;iacute;neas que comienzan con &lt;code&gt;#&lt;/code&gt; se eliminar&amp;aacute;n y el resto se usar&amp;aacute; como mensaje de confirmaci&amp;oacute;n para el cambio. Si decides que no quieres confirmar nada despu&amp;eacute;s de todo en este punto (puedes continuar editando cosas y actualizando el &amp;iacute;ndice), puedes dejar un mensaje vac&amp;iacute;o. De lo contrario, &lt;code&gt;git commit&lt;/code&gt; confirmar&amp;aacute; el cambio por ti.</target>
        </trans-unit>
        <trans-unit id="61b122f3a92e6ba319a161e3ee36a5061ca2ea4c" translate="yes" xml:space="preserve">
          <source>Writes a tree object that represents a subdirectory &lt;code&gt;&amp;lt;prefix&amp;gt;&lt;/code&gt;. This can be used to write the tree object for a subproject that is in the named subdirectory.</source>
          <target state="translated">Escribe un objeto de &amp;aacute;rbol que representa un subdirectorio &lt;code&gt;&amp;lt;prefix&amp;gt;&lt;/code&gt; . Esto se puede utilizar para escribir el objeto de &amp;aacute;rbol para un subproyecto que est&amp;aacute; en el subdirectorio nombrado.</target>
        </trans-unit>
        <trans-unit id="157114a94f76dd225b6968a998012309617b01fe" translate="yes" xml:space="preserve">
          <source>Writes the commit-id into the filename under $GIT_DIR/refs/&amp;lt;filename&amp;gt; on the local end after the transfer is complete.</source>
          <target state="translated">Escribe el ID de compromiso en el nombre de archivo en $ GIT_DIR / refs / &amp;lt;filename&amp;gt; en el extremo local despu&amp;eacute;s de que se complete la transferencia.</target>
        </trans-unit>
        <trans-unit id="e02c77bcdadadb66d0f7703e015b6bcd89a6c5e3" translate="yes" xml:space="preserve">
          <source>X: &quot;unknown&quot; change type (most probably a bug, please report it)</source>
          <target state="translated">X:tipo de cambio &quot;desconocido&quot; (lo más probable es que sea un error,por favor repórtelo)</target>
        </trans-unit>
        <trans-unit id="c4701ab33311f5af4d25d032b9d36f7ee2d229e7" translate="yes" xml:space="preserve">
          <source>You &lt;code&gt;must&lt;/code&gt; therefore ensure that the most recent commit of the branch you want to dcommit to is the &lt;code&gt;first&lt;/code&gt; parent of the merge. Chaos will ensue otherwise, especially if the first parent is an older commit on the same SVN branch.</source>
          <target state="translated">Usted &lt;code&gt;must&lt;/code&gt; , por tanto, asegurar que la m&amp;aacute;s reciente commit de la rama que desea dcommit que es la &lt;code&gt;first&lt;/code&gt; matriz de la combinaci&amp;oacute;n. De lo contrario, se producir&amp;aacute; el caos, especialmente si el primer padre es una confirmaci&amp;oacute;n anterior en la misma rama SVN.</target>
        </trans-unit>
        <trans-unit id="33b03e34a8212275c562b3fd47359312e9fb9f26" translate="yes" xml:space="preserve">
          <source>You also could say &lt;code&gt;c&lt;/code&gt; or &lt;code&gt;clean&lt;/code&gt; above as long as the choice is unique.</source>
          <target state="translated">Tambi&amp;eacute;n puede decir &lt;code&gt;c&lt;/code&gt; o &lt;code&gt;clean&lt;/code&gt; arriba siempre que la elecci&amp;oacute;n sea &amp;uacute;nica.</target>
        </trans-unit>
        <trans-unit id="3633df0f340d7a5b00e10a65751fa4510ce91fa7" translate="yes" xml:space="preserve">
          <source>You also could say &lt;code&gt;s&lt;/code&gt; or &lt;code&gt;sta&lt;/code&gt; or &lt;code&gt;status&lt;/code&gt; above as long as the choice is unique.</source>
          <target state="translated">Tambi&amp;eacute;n puede decir &lt;code&gt;s&lt;/code&gt; o &lt;code&gt;sta&lt;/code&gt; o &lt;code&gt;status&lt;/code&gt; arriba siempre que la elecci&amp;oacute;n sea &amp;uacute;nica.</target>
        </trans-unit>
        <trans-unit id="80dcbb43282a1e399b57f0acd29e7d516598c299" translate="yes" xml:space="preserve">
          <source>You also need to ensure that each repository is &quot;bare&quot; (without a Git index file) for &lt;code&gt;cvs commit&lt;/code&gt; to work. See &lt;a href=&quot;gitcvs-migration&quot;&gt;gitcvs-migration[7]&lt;/a&gt;.</source>
          <target state="translated">Tambi&amp;eacute;n debe asegurarse de que cada repositorio est&amp;eacute; &quot;vac&amp;iacute;o&quot; (sin un archivo de &amp;iacute;ndice Git) para que &lt;code&gt;cvs commit&lt;/code&gt; funcione. Consulte &lt;a href=&quot;gitcvs-migration&quot;&gt;gitcvs-migration [7]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="63d1d5a88c78a80cfc3950acb2e452ff58df3b69" translate="yes" xml:space="preserve">
          <source>You also should not rewind branches in a submodule beyond commits that were ever recorded in any superproject.</source>
          <target state="translated">Tampoco debe rebobinar las ramas en un submódulo más allá de los compromisos que se registraron en cualquier superproyecto.</target>
        </trans-unit>
        <trans-unit id="9cb8652293d991a8fc334c9f946fb5900f566815" translate="yes" xml:space="preserve">
          <source>You are happily working on something, and find the changes in these files are in good order. You do not want to see them when you run &lt;code&gt;git diff&lt;/code&gt;, because you plan to work on other files and changes with these files are distracting.</source>
          <target state="translated">Est&amp;aacute; felizmente trabajando en algo y encuentra que los cambios en estos archivos est&amp;aacute;n en buen estado. No desea verlos cuando ejecute &lt;code&gt;git diff&lt;/code&gt; , porque planea trabajar en otros archivos y los cambios con estos archivos distraen.</target>
        </trans-unit>
        <trans-unit id="48f9e78ec61620aadfc7c1e71bab372f08845a6f" translate="yes" xml:space="preserve">
          <source>You are in the middle of a refactoring session and your boss comes in and demands that you fix something immediately. You might typically use &lt;a href=&quot;git-stash&quot;&gt;git-stash[1]&lt;/a&gt; to store your changes away temporarily, however, your working tree is in such a state of disarray (with new, moved, and removed files, and other bits and pieces strewn around) that you don&amp;rsquo;t want to risk disturbing any of it. Instead, you create a temporary linked working tree to make the emergency fix, remove it when done, and then resume your earlier refactoring session.</source>
          <target state="translated">Est&amp;aacute;s en medio de una sesi&amp;oacute;n de refactorizaci&amp;oacute;n y tu jefe entra y te exige que arregles algo de inmediato. Por lo general, puede usar &lt;a href=&quot;git-stash&quot;&gt;git-stash [1]&lt;/a&gt; para almacenar sus cambios temporalmente, sin embargo, su &amp;aacute;rbol de trabajo est&amp;aacute; en tal estado de desorden (con archivos nuevos, movidos y eliminados, y otras partes y piezas esparcidas) que no No quiero arriesgarme a perturbar nada de eso. En su lugar, crea un &amp;aacute;rbol de trabajo vinculado temporal para hacer la soluci&amp;oacute;n de emergencia, elim&amp;iacute;nelo cuando haya terminado y luego reanude su sesi&amp;oacute;n de refactorizaci&amp;oacute;n anterior.</target>
        </trans-unit>
        <trans-unit id="bb2df2ca18755cbd46a4ed871293669f22530506" translate="yes" xml:space="preserve">
          <source>You are now ready to commit. You can see what is about to be committed using &lt;code&gt;git diff&lt;/code&gt; with the --cached option:</source>
          <target state="translated">Ahora est&amp;aacute; listo para comprometerse. Puede ver lo que est&amp;aacute; a punto de confirmarse usando &lt;code&gt;git diff&lt;/code&gt; con la opci&amp;oacute;n --cached:</target>
        </trans-unit>
        <trans-unit id="074e56336e1be0630703b280d6a3b60899f28a4c" translate="yes" xml:space="preserve">
          <source>You can adjust how pages generated by gitweb look using the variables described below. You can change the site name, add common headers and footers for all pages, and add a description of this gitweb installation on its main page (which is the projects list page), etc.</source>
          <target state="translated">Puedes ajustar el aspecto de las páginas generadas por gitweb usando las variables descritas a continuación.Puedes cambiar el nombre del sitio,añadir encabezados y pies de página comunes para todas las páginas,y añadir una descripción de esta instalación de gitweb en su página principal (que es la página de la lista de proyectos),etc.</target>
        </trans-unit>
        <trans-unit id="f5130cbe18f25cdc12700266fadc1f554b9c37ce" translate="yes" xml:space="preserve">
          <source>You can also ask git log to show patches:</source>
          <target state="translated">También puedes pedirle a git log que muestre parches:</target>
        </trans-unit>
        <trans-unit id="f5378640dc8884e7695fa8d24ebc61aad94be600" translate="yes" xml:space="preserve">
          <source>You can also check out &lt;code&gt;origin/todo&lt;/code&gt; directly to examine it or write a one-off patch. See &lt;a href=&quot;#detached-head&quot;&gt;detached head&lt;/a&gt;.</source>
          <target state="translated">Tambi&amp;eacute;n puede consultar &lt;code&gt;origin/todo&lt;/code&gt; directamente para examinarlo o escribir un parche &amp;uacute;nico. Ver &lt;a href=&quot;#detached-head&quot;&gt;cabeza separada&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1dba829f7b6e6b2354184e851e59ecadab491f50" translate="yes" xml:space="preserve">
          <source>You can also edit a patch series with an interactive rebase. This is the same as &lt;a href=&quot;#reordering-patch-series&quot;&gt;reordering a patch series using &lt;code&gt;format-patch&lt;/code&gt;&lt;/a&gt;, so use whichever interface you like best.</source>
          <target state="translated">Tambi&amp;eacute;n puede editar una serie de parches con un rebase interactivo. Esto es lo mismo que &lt;a href=&quot;#reordering-patch-series&quot;&gt;reordenar una serie de parches usando &lt;code&gt;format-patch&lt;/code&gt; &lt;/a&gt; , as&amp;iacute; que use la interfaz que m&amp;aacute;s le guste.</target>
        </trans-unit>
        <trans-unit id="a56f9e1e04034dbb228cdfc1e0cb38c07a8bcbf1" translate="yes" xml:space="preserve">
          <source>You can also fetch branches from other repositories; so</source>
          <target state="translated">También puedes buscar ramas de otros depósitos,así que...</target>
        </trans-unit>
        <trans-unit id="bb4e25e283a061b1bebe5a9dd36fbbd03f0e1b4b" translate="yes" xml:space="preserve">
          <source>You can also give &lt;code&gt;git log&lt;/code&gt; a &quot;range&quot; of commits where the first is not necessarily an ancestor of the second; for example, if the tips of the branches &quot;stable&quot; and &quot;master&quot; diverged from a common commit some time ago, then</source>
          <target state="translated">Tambi&amp;eacute;n puedes darle a &lt;code&gt;git log&lt;/code&gt; un &quot;rango&quot; de confirmaciones donde la primera no es necesariamente un ancestro de la segunda; por ejemplo, si las puntas de las ramas &quot;estable&quot; y &quot;maestro&quot; divergieron de un compromiso com&amp;uacute;n hace alg&amp;uacute;n tiempo, entonces</target>
        </trans-unit>
        <trans-unit id="c219057e4d44e965fab9fe1f77892cd8f09c5753" translate="yes" xml:space="preserve">
          <source>You can also give commits names of your own; after running</source>
          <target state="translated">También puedes dar nombres propios de commits;después de correr</target>
        </trans-unit>
        <trans-unit id="cecebc054603ae5ff87afcd3e6caec5420b5c866" translate="yes" xml:space="preserve">
          <source>You can also override locations of gitweb configuration files during runtime by setting the following environment variables: &lt;code&gt;GITWEB_CONFIG_COMMON&lt;/code&gt;, &lt;code&gt;GITWEB_CONFIG_SYSTEM&lt;/code&gt; and &lt;code&gt;GITWEB_CONFIG&lt;/code&gt; to a non-empty value.</source>
          <target state="translated">Tambi&amp;eacute;n puede anular las ubicaciones de los archivos de configuraci&amp;oacute;n de gitweb durante el tiempo de ejecuci&amp;oacute;n estableciendo las siguientes variables de entorno: &lt;code&gt;GITWEB_CONFIG_COMMON&lt;/code&gt; , &lt;code&gt;GITWEB_CONFIG_SYSTEM&lt;/code&gt; y &lt;code&gt;GITWEB_CONFIG&lt;/code&gt; en un valor no vac&amp;iacute;o.</target>
        </trans-unit>
        <trans-unit id="c335f539c67224e67ef9ba8bcb55a78f32c2ba64" translate="yes" xml:space="preserve">
          <source>You can also revert an earlier change, for example, the next-to-last:</source>
          <target state="translated">También se puede revertir un cambio anterior,por ejemplo,el penúltimo:</target>
        </trans-unit>
        <trans-unit id="f6f0f4e5da7f74f3d7e6aefa5597ca88126ce358" translate="yes" xml:space="preserve">
          <source>You can also run &lt;code&gt;git daemon&lt;/code&gt; as an inetd service; see the &lt;a href=&quot;git-daemon&quot;&gt;git-daemon[1]&lt;/a&gt; man page for details. (See especially the examples section.)</source>
          <target state="translated">Tambi&amp;eacute;n puede ejecutar &lt;code&gt;git daemon&lt;/code&gt; como un servicio inetd; consulte la p&amp;aacute;gina de manual de &lt;a href=&quot;git-daemon&quot;&gt;git-daemon [1]&lt;/a&gt; para obtener m&amp;aacute;s detalles. (Vea especialmente la secci&amp;oacute;n de ejemplos).</target>
        </trans-unit>
        <trans-unit id="f0a51538febea0717277859dfbb5418b689055cc" translate="yes" xml:space="preserve">
          <source>You can also see what references it offers:</source>
          <target state="translated">También puede ver las referencias que ofrece:</target>
        </trans-unit>
        <trans-unit id="f06fdd5b89ee465ae510128ba09f10dd8adf5eac" translate="yes" xml:space="preserve">
          <source>You can also skip a range of commits, instead of just one commit, using range notation. For example:</source>
          <target state="translated">También puedes saltarte una serie de confirmaciones,en lugar de una sola,usando la notación de rango.Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="54e517ee1d2086de2439776d35ac41cdff2f30f7" translate="yes" xml:space="preserve">
          <source>You can also track branches from repositories other than the one you cloned from, using &lt;a href=&quot;git-remote&quot;&gt;git-remote[1]&lt;/a&gt;:</source>
          <target state="translated">Tambi&amp;eacute;n puedes rastrear ramas de repositorios distintos del que clonaste, usando &lt;a href=&quot;git-remote&quot;&gt;git-remote [1]&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="28b63a93050077dfe73e5bbbcd2b4df244cc4f26" translate="yes" xml:space="preserve">
          <source>You can also use &lt;a href=&quot;git-gui&quot;&gt;git-gui[1]&lt;/a&gt; to create commits, view changes in the index and the working tree files, and individually select diff hunks for inclusion in the index (by right-clicking on the diff hunk and choosing &quot;Stage Hunk For Commit&quot;).</source>
          <target state="translated">Tambi&amp;eacute;n puede usar &lt;a href=&quot;git-gui&quot;&gt;git-gui [1]&lt;/a&gt; para crear confirmaciones, ver cambios en el &amp;iacute;ndice y los archivos del &amp;aacute;rbol de trabajo, y seleccionar individualmente los bloques de diferencias para incluirlos en el &amp;iacute;ndice (haciendo clic con el bot&amp;oacute;n derecho en el bloque de diferencias y eligiendo &quot;Stage Hunk For Cometer&quot;).</target>
        </trans-unit>
        <trans-unit id="2d89b19204028ed2768f0a7d6951c7af3234e547" translate="yes" xml:space="preserve">
          <source>You can also use &lt;code&gt;git format-patch --base=P -3 C&lt;/code&gt; to generate patches for A, B and C, and the identifiers for P, X, Y, Z are appended at the end of the first message.</source>
          <target state="translated">Tambi&amp;eacute;n puede usar &lt;code&gt;git format-patch --base=P -3 C&lt;/code&gt; para generar parches para A, B y C, y los identificadores para P, X, Y, Z se agregan al final del primer mensaje.</target>
        </trans-unit>
        <trans-unit id="2c144befb1f45c546071ce64e48b303dc0e810a7" translate="yes" xml:space="preserve">
          <source>You can also use &lt;code&gt;git show&lt;/code&gt; to see any such file:</source>
          <target state="translated">Tambi&amp;eacute;n puede usar &lt;code&gt;git show&lt;/code&gt; para ver cualquier archivo de este tipo:</target>
        </trans-unit>
        <trans-unit id="49c3eff4b4dfbb20ea17f1bea994d4ab08b8a178" translate="yes" xml:space="preserve">
          <source>You can also use the &lt;code&gt;git_commit_non_empty_tree &quot;$@&quot;&lt;/code&gt; instead of &lt;code&gt;git commit-tree &quot;$@&quot;&lt;/code&gt; if you don&amp;rsquo;t wish to keep commits with a single parent and that makes no change to the tree.</source>
          <target state="translated">Tambi&amp;eacute;n puede usar &lt;code&gt;git_commit_non_empty_tree &quot;$@&quot;&lt;/code&gt; lugar de &lt;code&gt;git commit-tree &quot;$@&quot;&lt;/code&gt; si no desea mantener las confirmaciones con un solo padre y eso no cambia el &amp;aacute;rbol.</target>
        </trans-unit>
        <trans-unit id="015df615c0d1b650e7dd0d33e1d03af134ab36e3" translate="yes" xml:space="preserve">
          <source>You can always just jump back to your original &lt;code&gt;master&lt;/code&gt; branch by doing</source>
          <target state="translated">Siempre puede volver a su rama &lt;code&gt;master&lt;/code&gt; original haciendo</target>
        </trans-unit>
        <trans-unit id="e3173f9b04378ce969d4435b57687de248be9e7d" translate="yes" xml:space="preserve">
          <source>You can always view an old version of a file by just checking out the correct revision first. But sometimes it is more convenient to be able to view an old version of a single file without checking anything out; this command does that:</source>
          <target state="translated">Siempre puedes ver una versión antigua de un archivo con sólo comprobar primero la revisión correcta.Pero a veces es más conveniente ser capaz de ver una versión antigua de un único archivo sin comprobar nada;este comando hace eso:</target>
        </trans-unit>
        <trans-unit id="ac57e48df46d91546d0b6c2ab36f112078813032" translate="yes" xml:space="preserve">
          <source>You can at any time create a new branch by just picking an arbitrary point in the project history, and just writing the SHA-1 name of that object into a file under &lt;code&gt;.git/refs/heads/&lt;/code&gt;. You can use any filename you want (and indeed, subdirectories), but the convention is that the &quot;normal&quot; branch is called &lt;code&gt;master&lt;/code&gt;. That&amp;rsquo;s just a convention, though, and nothing enforces it.</source>
          <target state="translated">En cualquier momento puede crear una nueva rama simplemente eligiendo un punto arbitrario en el historial del proyecto y escribiendo el nombre SHA-1 de ese objeto en un archivo bajo &lt;code&gt;.git/refs/heads/&lt;/code&gt; . Puede usar cualquier nombre de archivo que desee (y de hecho, subdirectorios), pero la convenci&amp;oacute;n es que la rama &quot;normal&quot; se llama &lt;code&gt;master&lt;/code&gt; . Sin embargo, eso es solo una convenci&amp;oacute;n y nada la impone.</target>
        </trans-unit>
        <trans-unit id="28fdfbc805da6922683f26cc12f785c6a111b6ce" translate="yes" xml:space="preserve">
          <source>You can choose to provide the name of a file in &lt;code&gt;$GIT_DIR/branches&lt;/code&gt;. The URL in this file will be used to access the repository. This file should have the following format:</source>
          <target state="translated">Puede optar por proporcionar el nombre de un archivo en &lt;code&gt;$GIT_DIR/branches&lt;/code&gt; . La URL de este archivo se utilizar&amp;aacute; para acceder al repositorio. Este archivo debe tener el siguiente formato:</target>
        </trans-unit>
        <trans-unit id="184c3e9bbc8e0af36908329654dfda91364d6a99" translate="yes" xml:space="preserve">
          <source>You can choose to provide the name of a file in &lt;code&gt;$GIT_DIR/remotes&lt;/code&gt;. The URL in this file will be used to access the repository. The refspec in this file will be used as default when you do not provide a refspec on the command line. This file should have the following format:</source>
          <target state="translated">Puede optar por proporcionar el nombre de un archivo en &lt;code&gt;$GIT_DIR/remotes&lt;/code&gt; . La URL de este archivo se utilizar&amp;aacute; para acceder al repositorio. La refspec de este archivo se utilizar&amp;aacute; de forma predeterminada cuando no proporcione una refspec en la l&amp;iacute;nea de comandos. Este archivo debe tener el siguiente formato:</target>
        </trans-unit>
        <trans-unit id="a92f2a4a63c6c2d142357d1e5947af0b6de272f3" translate="yes" xml:space="preserve">
          <source>You can choose to provide the name of a remote which you had previously configured using &lt;a href=&quot;git-remote&quot;&gt;git-remote[1]&lt;/a&gt;, &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt; or even by a manual edit to the &lt;code&gt;$GIT_DIR/config&lt;/code&gt; file. The URL of this remote will be used to access the repository. The refspec of this remote will be used by default when you do not provide a refspec on the command line. The entry in the config file would appear like this:</source>
          <target state="translated">Puede elegir proporcionar el nombre de un control remoto que haya configurado previamente usando &lt;a href=&quot;git-remote&quot;&gt;git-remote [1]&lt;/a&gt; , &lt;a href=&quot;git-config&quot;&gt;git-config [1]&lt;/a&gt; o incluso mediante una edici&amp;oacute;n manual del &lt;code&gt;$GIT_DIR/config&lt;/code&gt; . La URL de este control remoto se utilizar&amp;aacute; para acceder al repositorio. La refspec de este control remoto se utilizar&amp;aacute; de forma predeterminada cuando no proporcione una refspec en la l&amp;iacute;nea de comando. La entrada en el archivo de configuraci&amp;oacute;n aparecer&amp;iacute;a as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="d377d9322805f2d9d1e87d74e556de9916d572ec" translate="yes" xml:space="preserve">
          <source>You can choose whether you want to trust the index file entirely (using the &lt;code&gt;--cached&lt;/code&gt; flag) or ask the diff logic to show any files that don&amp;rsquo;t match the stat state as being &quot;tentatively changed&quot;. Both of these operations are very useful indeed.</source>
          <target state="translated">Puede elegir si desea confiar completamente en el archivo de &amp;iacute;ndice (usando la &lt;code&gt;--cached&lt;/code&gt; ) o pedirle a la l&amp;oacute;gica de diferencias que muestre cualquier archivo que no coincida con el estado de la estad&amp;iacute;stica como &quot;cambiado tentativamente&quot;. Ambas operaciones son realmente muy &amp;uacute;tiles.</target>
        </trans-unit>
        <trans-unit id="7c0716128ee4fbd827cb316e0652131c44810ab6" translate="yes" xml:space="preserve">
          <source>You can configure gitweb to only list and allow viewing of the explicitly exported repositories, via &lt;code&gt;$export_ok&lt;/code&gt; variable in gitweb config file; see &lt;a href=&quot;gitweb.conf&quot;&gt;gitweb.conf[5]&lt;/a&gt; manpage. If it evaluates to true, gitweb shows repositories only if this file named by &lt;code&gt;$export_ok&lt;/code&gt; exists in its object database (if directory has the magic file named &lt;code&gt;$export_ok&lt;/code&gt;).</source>
          <target state="translated">Puede configurar gitweb para que solo enumere y permita la visualizaci&amp;oacute;n de los repositorios exportados expl&amp;iacute;citamente, a trav&amp;eacute;s &lt;code&gt;$export_ok&lt;/code&gt; variable $ export_ok en el archivo de configuraci&amp;oacute;n de gitweb; consulte la p&amp;aacute;gina de &lt;a href=&quot;gitweb.conf&quot;&gt;manual de gitweb.conf [5]&lt;/a&gt; . Si se eval&amp;uacute;a como verdadero, gitweb muestra repositorios solo si este archivo llamado &lt;code&gt;$export_ok&lt;/code&gt; existe en su base de datos de objetos (si el directorio tiene el archivo m&amp;aacute;gico llamado &lt;code&gt;$export_ok&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="03a65df391294815ab470e62357c9e62de1fcfb2" translate="yes" xml:space="preserve">
          <source>You can configure individual repositories shown in gitweb by creating file in the &lt;code&gt;GIT_DIR&lt;/code&gt; of Git repository, or by setting some repo configuration variable (in &lt;code&gt;GIT_DIR/config&lt;/code&gt;, see &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;).</source>
          <target state="translated">Puede configurar repositorios individuales que se muestran en gitweb creando un archivo en el repositorio &lt;code&gt;GIT_DIR&lt;/code&gt; del repositorio Git, o estableciendo alguna variable de configuraci&amp;oacute;n del repositorio (en &lt;code&gt;GIT_DIR/config&lt;/code&gt; , consulte &lt;a href=&quot;git-config&quot;&gt;git-config [1]&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="45321feeff0945f0a2ba053e8ab969c82cc417c8" translate="yes" xml:space="preserve">
          <source>You can configure the database backend with the following configuration variables:</source>
          <target state="translated">Puede configurar el backend de la base de datos con las siguientes variables de configuración:</target>
        </trans-unit>
        <trans-unit id="d268b7f609741cf4701b8230b6d95314deb17a7a" translate="yes" xml:space="preserve">
          <source>You can create a new commit that undoes whatever was done by the old commit. This is the correct thing if your mistake has already been made public.</source>
          <target state="translated">Puedes crear una nueva comisión que deshaga lo que haya hecho la anterior.Esto es lo correcto si tu error ya se ha hecho público.</target>
        </trans-unit>
        <trans-unit id="d8a9d4babf707e6fca47541eba4fa0b4e8c8edd2" translate="yes" xml:space="preserve">
          <source>You can customize the rules that &lt;code&gt;git diff --word-diff&lt;/code&gt; uses to split words in a line, by specifying an appropriate regular expression in the &quot;diff.*.wordRegex&quot; configuration variable. For example, in TeX a backslash followed by a sequence of letters forms a command, but several such commands can be run together without intervening whitespace. To separate them, use a regular expression in your &lt;code&gt;$GIT_DIR/config&lt;/code&gt; file (or &lt;code&gt;$HOME/.gitconfig&lt;/code&gt; file) like this:</source>
          <target state="translated">Puedes personalizar las reglas que usa &lt;code&gt;git diff --word-diff&lt;/code&gt; para dividir palabras en una l&amp;iacute;nea, especificando una expresi&amp;oacute;n regular apropiada en la variable de configuraci&amp;oacute;n &quot;diff. *. WordRegex&quot;. Por ejemplo, en TeX una barra invertida seguida de una secuencia de letras forma un comando, pero varios de estos comandos se pueden ejecutar juntos sin intervenir espacios en blanco. Para separarlos, use una expresi&amp;oacute;n regular en su &lt;code&gt;$GIT_DIR/config&lt;/code&gt; (o archivo &lt;code&gt;$HOME/.gitconfig&lt;/code&gt; ) como este:</target>
        </trans-unit>
        <trans-unit id="38bcfec4c9f80337cd439b12b7afb0a63bb0fcb7" translate="yes" xml:space="preserve">
          <source>You can declare that a filter turns a content that by itself is unusable into a usable content by setting the filter.&amp;lt;driver&amp;gt;.required configuration variable to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">Puede declarar que un filtro convierte un contenido que por s&amp;iacute; mismo no se puede utilizar en un contenido utilizable estableciendo la variable de configuraci&amp;oacute;n filter. &amp;lt;controlador&amp;gt; .required en &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d7aeeb9d27bdf323aad4937a225d2c2d1d7d6f4b" translate="yes" xml:space="preserve">
          <source>You can easily create such a branch with Git using interactive rebase.</source>
          <target state="translated">Puedes crear fácilmente una rama de este tipo con Git usando una base de datos interactiva.</target>
        </trans-unit>
        <trans-unit id="2f7816df4cc860a9cfdb50146ff125e3acb46178" translate="yes" xml:space="preserve">
          <source>You can enforce finer grained permissions using update hooks. See &lt;a href=&quot;https://git-scm.com/docs/howto/update-hook-example&quot;&gt;Controlling access to branches using update hooks&lt;/a&gt;.</source>
          <target state="translated">Puede aplicar permisos m&amp;aacute;s detallados mediante enlaces de actualizaci&amp;oacute;n. Consulte &lt;a href=&quot;https://git-scm.com/docs/howto/update-hook-example&quot;&gt;Controlar el acceso a las sucursales mediante enlaces de actualizaci&amp;oacute;n&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="dca6628a0b53b9b002cd44ea35104ed275c53c21" translate="yes" xml:space="preserve">
          <source>You can examine one of those dangling commits with, for example,</source>
          <target state="translated">Puedes examinar uno de esos compromisos colgantes con,por ejemplo,</target>
        </trans-unit>
        <trans-unit id="4807484ba96d5012055b128c8602211fd418a27a" translate="yes" xml:space="preserve">
          <source>You can examine such index state with &lt;code&gt;git ls-files --unmerged&lt;/code&gt; command. An example:</source>
          <target state="translated">Puede examinar dicho estado de &amp;iacute;ndice con el &lt;code&gt;git ls-files --unmerged&lt;/code&gt; . Un ejemplo:</target>
        </trans-unit>
        <trans-unit id="b5f066a300ab7fb920ca504e5ef4559d46dabfb5" translate="yes" xml:space="preserve">
          <source>You can examine the data represented in the object database and the index with various helper tools. For every object, you can use &lt;a href=&quot;git-cat-file&quot;&gt;git-cat-file[1]&lt;/a&gt; to examine details about the object:</source>
          <target state="translated">Puede examinar los datos representados en la base de datos de objetos y el &amp;iacute;ndice con varias herramientas auxiliares. Para cada objeto, puede usar &lt;a href=&quot;git-cat-file&quot;&gt;git-cat-file [1]&lt;/a&gt; para examinar los detalles sobre el objeto:</target>
        </trans-unit>
        <trans-unit id="fd093df539bb25e8d4c6b75d7c53e29317d7deb5" translate="yes" xml:space="preserve">
          <source>You can explicitly provide a full path to the tool by setting the configuration variable &lt;code&gt;difftool.&amp;lt;tool&amp;gt;.path&lt;/code&gt;. For example, you can configure the absolute path to kdiff3 by setting &lt;code&gt;difftool.kdiff3.path&lt;/code&gt;. Otherwise, &lt;code&gt;git difftool&lt;/code&gt; assumes the tool is available in PATH.</source>
          <target state="translated">Puede proporcionar expl&amp;iacute;citamente una ruta completa a la herramienta estableciendo la variable de configuraci&amp;oacute;n &lt;code&gt;difftool.&amp;lt;tool&amp;gt;.path&lt;/code&gt; . Por ejemplo, puede configurar la ruta absoluta a kdiff3 configurando &lt;code&gt;difftool.kdiff3.path&lt;/code&gt; . De lo contrario, &lt;code&gt;git difftool&lt;/code&gt; asume que la herramienta est&amp;aacute; disponible en PATH.</target>
        </trans-unit>
        <trans-unit id="146074b490cdd862abeb41d866c18f9aaa225cf8" translate="yes" xml:space="preserve">
          <source>You can explicitly provide a full path to the tool by setting the configuration variable &lt;code&gt;mergetool.&amp;lt;tool&amp;gt;.path&lt;/code&gt;. For example, you can configure the absolute path to kdiff3 by setting &lt;code&gt;mergetool.kdiff3.path&lt;/code&gt;. Otherwise, &lt;code&gt;git mergetool&lt;/code&gt; assumes the tool is available in PATH.</source>
          <target state="translated">Puede proporcionar expl&amp;iacute;citamente una ruta completa a la herramienta configurando la variable de configuraci&amp;oacute;n &lt;code&gt;mergetool.&amp;lt;tool&amp;gt;.path&lt;/code&gt; . Por ejemplo, puede configurar la ruta absoluta a kdiff3 configurando &lt;code&gt;mergetool.kdiff3.path&lt;/code&gt; . De lo contrario, &lt;code&gt;git mergetool&lt;/code&gt; asume que la herramienta est&amp;aacute; disponible en PATH.</target>
        </trans-unit>
        <trans-unit id="1d73514fe413b4199a0b5fc2096f965b3e1620ee" translate="yes" xml:space="preserve">
          <source>You can explicitly provide a full path to your preferred man viewer by setting the configuration variable &lt;code&gt;man.&amp;lt;tool&amp;gt;.path&lt;/code&gt;. For example, you can configure the absolute path to konqueror by setting &lt;code&gt;man.konqueror.path&lt;/code&gt;. Otherwise, &lt;code&gt;git help&lt;/code&gt; assumes the tool is available in PATH.</source>
          <target state="translated">Puede proporcionar expl&amp;iacute;citamente una ruta completa a su visor man preferido configurando la variable de configuraci&amp;oacute;n &lt;code&gt;man.&amp;lt;tool&amp;gt;.path&lt;/code&gt; . Por ejemplo, puede configurar la ruta absoluta a konqueror configurando &lt;code&gt;man.konqueror.path&lt;/code&gt; . De lo contrario, &lt;code&gt;git help&lt;/code&gt; asume que la herramienta est&amp;aacute; disponible en PATH.</target>
        </trans-unit>
        <trans-unit id="11d166169fafafa437c100a2b764012cf5981ced" translate="yes" xml:space="preserve">
          <source>You can focus your efforts to check at a few points (for example rc and beta releases) that all the T test cases pass for all the N configurations. And when some tests don&amp;rsquo;t pass you can use &quot;git bisect&quot; (or better &quot;git bisect run&quot;). So you should perform roughly:</source>
          <target state="translated">Puede concentrar sus esfuerzos en verificar en algunos puntos (por ejemplo, versiones rc y beta) que todos los casos de prueba T pasan para todas las configuraciones N. Y cuando algunas pruebas no pasan, puede usar &quot;git bisect&quot; (o mejor &quot;git bisect run&quot;). Por lo tanto, debe realizar aproximadamente:</target>
        </trans-unit>
        <trans-unit id="59d0d873078b4f91b40c2ee1e2770f185d430915" translate="yes" xml:space="preserve">
          <source>You can further cut down the number of trials, if you know what part of the tree is involved in the problem you are tracking down, by specifying path parameters when issuing the &lt;code&gt;bisect start&lt;/code&gt; command:</source>
          <target state="translated">Puede reducir a&amp;uacute;n m&amp;aacute;s el n&amp;uacute;mero de pruebas, si sabe qu&amp;eacute; parte del &amp;aacute;rbol est&amp;aacute; involucrada en el problema que est&amp;aacute; rastreando, especificando los par&amp;aacute;metros de la ruta cuando emite el comando &lt;code&gt;bisect start&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="e5857d2949fb11d516cd50de71765499d023b3f6" translate="yes" xml:space="preserve">
          <source>You can generate diffs between any two versions using &lt;a href=&quot;git-diff&quot;&gt;git-diff[1]&lt;/a&gt;:</source>
          <target state="translated">Puede generar diferencias entre dos versiones usando &lt;a href=&quot;git-diff&quot;&gt;git-diff [1]&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="98e4a2c67e91124741c5ae666b50315da705ecdc" translate="yes" xml:space="preserve">
          <source>You can generate the projects list index file using the project_index action (the &lt;code&gt;TXT&lt;/code&gt; link on projects list page) directly from gitweb; see also &quot;Generating projects list using gitweb&quot; section below.</source>
          <target state="translated">Puede generar el archivo de &amp;iacute;ndice de la lista de proyectos utilizando la acci&amp;oacute;n project_index (el enlace &lt;code&gt;TXT&lt;/code&gt; en la p&amp;aacute;gina de la lista de proyectos) directamente desde gitweb; vea tambi&amp;eacute;n la secci&amp;oacute;n &quot;Generaci&amp;oacute;n de listas de proyectos usando gitweb&quot; a continuaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="5b042e446e3f9ebd4b31fc02aac55f5c329ead7e" translate="yes" xml:space="preserve">
          <source>You can get a list of all available encodings on your platform with the following command:</source>
          <target state="translated">Puede obtener una lista de todas las codificaciones disponibles en su plataforma con el siguiente comando:</target>
        </trans-unit>
        <trans-unit id="3d921181a0df868b1892f0a3e234a9c29e516883" translate="yes" xml:space="preserve">
          <source>You can get just the old (respectively new) term with &lt;code&gt;git bisect terms
--term-old&lt;/code&gt; or &lt;code&gt;git bisect terms --term-good&lt;/code&gt;.</source>
          <target state="translated">Puede obtener solo el t&amp;eacute;rmino antiguo (respectivamente nuevo) con &lt;code&gt;git bisect terms --term-old&lt;/code&gt; o &lt;code&gt;git bisect terms --term-good&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="41b9643f0720517e2c1772471e0c09d5c46b9644" translate="yes" xml:space="preserve">
          <source>You can give the &lt;code&gt;-m&lt;/code&gt; flag to the command, which would try a three-way merge:</source>
          <target state="translated">Puede darle el indicador &lt;code&gt;-m&lt;/code&gt; al comando, que intentar&amp;iacute;a una combinaci&amp;oacute;n de tres v&amp;iacute;as:</target>
        </trans-unit>
        <trans-unit id="36617ae8104572554e1e13e9574934aea0623eb3" translate="yes" xml:space="preserve">
          <source>You can go back and modify the old commit. You should never do this if you have already made the history public; Git does not normally expect the &quot;history&quot; of a project to change, and cannot correctly perform repeated merges from a branch that has had its history changed.</source>
          <target state="translated">Puedes volver y modificar el viejo compromiso.Nunca debes hacer esto si ya has hecho pública la historia;Git normalmente no espera que la &quot;historia&quot; de un proyecto cambie,y no puede realizar correctamente repetidas fusiones de una rama cuya historia ha sido cambiada.</target>
        </trans-unit>
        <trans-unit id="427cec7db1c8d9c41ec669de64df63aacc49a26f" translate="yes" xml:space="preserve">
          <source>You can grow a new branch from any commit. For example, switch to &quot;HEAD~3&quot; and create branch &quot;fixup&quot;:</source>
          <target state="translated">Puedes hacer crecer una nueva rama desde cualquier compromiso.Por ejemplo,cambia a &quot;HEAD~3&quot; y crea la rama &quot;fixup&quot;:</target>
        </trans-unit>
        <trans-unit id="8abddb96169bb94a7080d5c82ed5cac7b229954a" translate="yes" xml:space="preserve">
          <source>You can have a mixture of files show up as &quot;has been updated&quot; and &quot;is still dirty in the working directory&quot; together. You can always tell which file is in which state, since the &quot;has been updated&quot; ones show a valid sha1, and the &quot;not in sync with the index&quot; ones will always have the special all-zero sha1.</source>
          <target state="translated">Puedes hacer que una mezcla de archivos aparezcan como &quot;ha sido actualizado&quot; y &quot;sigue sucio en el directorio de trabajo&quot; juntos.Siempre puedes saber qué archivo está en qué estado,ya que los de &quot;ha sido actualizado&quot; muestran un sha1 válido,y los de &quot;no está sincronizado con el índice&quot; siempre tendrán el especial todo cero sha1.</target>
        </trans-unit>
        <trans-unit id="ae3f7bca446e950bd716349b25ee5d05aaee6a26" translate="yes" xml:space="preserve">
          <source>You can include a config file from another by setting the special &lt;code&gt;include.path&lt;/code&gt; (or &lt;code&gt;includeIf.*.path&lt;/code&gt;) variable to the name of the file to be included. The variable takes a pathname as its value, and is subject to tilde expansion. These variables can be given multiple times.</source>
          <target state="translated">Puede incluir un archivo de configuraci&amp;oacute;n de otro estableciendo la variable especial &lt;code&gt;include.path&lt;/code&gt; (o &lt;code&gt;includeIf.*.path&lt;/code&gt; ) al nombre del archivo que se va a incluir. La variable toma un nombre de ruta como valor y est&amp;aacute; sujeta a expansi&amp;oacute;n de tilde. Estas variables pueden darse varias veces.</target>
        </trans-unit>
        <trans-unit id="5145f6f36a43ec5e98537ca833d15e8282538fcf" translate="yes" xml:space="preserve">
          <source>You can include a config file from another conditionally by setting a &lt;code&gt;includeIf.&amp;lt;condition&amp;gt;.path&lt;/code&gt; variable to the name of the file to be included.</source>
          <target state="translated">Puede incluir un archivo de configuraci&amp;oacute;n de otro condicionalmente estableciendo una &lt;code&gt;includeIf.&amp;lt;condition&amp;gt;.path&lt;/code&gt; al nombre del archivo que se va a incluir.</target>
        </trans-unit>
        <trans-unit id="509dfc228243cbfccb732c55df31d8f926c42b85" translate="yes" xml:space="preserve">
          <source>You can include other configuration file using read_config_file() subroutine. For example, one might want to put gitweb configuration related to access control for viewing repositories via Gitolite (one of Git repository management tools) in a separate file, e.g. in &lt;code&gt;/etc/gitweb-gitolite.conf&lt;/code&gt;. To include it, put</source>
          <target state="translated">Puede incluir otro archivo de configuraci&amp;oacute;n usando la subrutina read_config_file (). Por ejemplo, uno podr&amp;iacute;a querer poner la configuraci&amp;oacute;n de gitweb relacionada con el control de acceso para ver repositorios a trav&amp;eacute;s de Gitolite (una de las herramientas de administraci&amp;oacute;n de repositorios de Git) en un archivo separado, por ejemplo, en &lt;code&gt;/etc/gitweb-gitolite.conf&lt;/code&gt; . Para incluirlo, pon</target>
        </trans-unit>
        <trans-unit id="645452c6d997e8f480a9efb060142f580408b9f7" translate="yes" xml:space="preserve">
          <source>You can make a different change on the master branch:</source>
          <target state="translated">Puedes hacer un cambio diferente en la rama maestra:</target>
        </trans-unit>
        <trans-unit id="9d56811ee77d2943d64ee7741c452578a4d84979" translate="yes" xml:space="preserve">
          <source>You can make interesting things happen to a repository every time you push into it, by setting up &lt;code&gt;hooks&lt;/code&gt; there. See documentation for &lt;a href=&quot;git-receive-pack&quot;&gt;git-receive-pack[1]&lt;/a&gt;.</source>
          <target state="translated">Puede hacer que sucedan cosas interesantes en un repositorio cada vez que ingrese en &amp;eacute;l, configurando &lt;code&gt;hooks&lt;/code&gt; all&amp;iacute;. Consulte la documentaci&amp;oacute;n de &lt;a href=&quot;git-receive-pack&quot;&gt;git-receive-pack [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="31caee42f233cd83de2778af5287eb406c23a1ef" translate="yes" xml:space="preserve">
          <source>You can make sure &lt;code&gt;git show-branch&lt;/code&gt; matches the state before those two &lt;code&gt;git merge&lt;/code&gt; you just did. Then, instead of running two &lt;code&gt;git merge&lt;/code&gt; commands in a row, you would merge these two branch heads (this is known as &lt;code&gt;making an Octopus&lt;/code&gt;):</source>
          <target state="translated">Puede asegurarse de que &lt;code&gt;git show-branch&lt;/code&gt; coincida con el estado antes de que esos dos &lt;code&gt;git merge&lt;/code&gt; que acaba de hacer. Luego, en lugar de ejecutar dos comandos &lt;code&gt;git merge&lt;/code&gt; en una fila, fusionar&amp;iacute;a estos dos cabezales de rama (esto se conoce como &lt;code&gt;making an Octopus&lt;/code&gt; ):</target>
        </trans-unit>
        <trans-unit id="9f748b043bbe97de82ec4f7b6a5308c58b703d36" translate="yes" xml:space="preserve">
          <source>You can make the server use the end-of-line conversion attributes to set the &lt;code&gt;-k&lt;/code&gt; modes for files by setting the &lt;code&gt;gitcvs.usecrlfattr&lt;/code&gt; config variable. See &lt;a href=&quot;gitattributes&quot;&gt;gitattributes[5]&lt;/a&gt; for more information about end-of-line conversion.</source>
          <target state="translated">Puede hacer que el servidor use los atributos de conversi&amp;oacute;n de final de l&amp;iacute;nea para configurar los modos &lt;code&gt;-k&lt;/code&gt; para archivos configurando la variable de configuraci&amp;oacute;n &lt;code&gt;gitcvs.usecrlfattr&lt;/code&gt; . Consulte &lt;a href=&quot;gitattributes&quot;&gt;gitattributes [5]&lt;/a&gt; para obtener m&amp;aacute;s informaci&amp;oacute;n sobre la conversi&amp;oacute;n de final de l&amp;iacute;nea.</target>
        </trans-unit>
        <trans-unit id="015443f769a79760c1933372fa244563a6a25aba" translate="yes" xml:space="preserve">
          <source>You can omit having to type return here, by setting the configuration variable &lt;code&gt;interactive.singleKey&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">Puede omitir tener que escribir return aqu&amp;iacute;, estableciendo la variable de configuraci&amp;oacute;n &lt;code&gt;interactive.singleKey&lt;/code&gt; en &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="358c29af25eb707e9507c2c41ba2c41fddac22f4" translate="yes" xml:space="preserve">
          <source>You can override these rules either by command-line options or by environment variables. The &lt;code&gt;--global&lt;/code&gt;, &lt;code&gt;--system&lt;/code&gt; and &lt;code&gt;--worktree&lt;/code&gt; options will limit the file used to the global, system-wide or per-worktree file respectively. The &lt;code&gt;GIT_CONFIG&lt;/code&gt; environment variable has a similar effect, but you can specify any filename you want.</source>
          <target state="translated">Puede anular estas reglas mediante opciones de l&amp;iacute;nea de comandos o variables de entorno. Las &lt;code&gt;--global&lt;/code&gt; , &lt;code&gt;--system&lt;/code&gt; y &lt;code&gt;--worktree&lt;/code&gt; limitar&amp;aacute;n el archivo utilizado al archivo global, de todo el sistema o por &amp;aacute;rbol de trabajo, respectivamente. La variable de entorno &lt;code&gt;GIT_CONFIG&lt;/code&gt; tiene un efecto similar, pero puede especificar el nombre de archivo que desee.</target>
        </trans-unit>
        <trans-unit id="b9256a8bfff0f4e1e2098927e9ff118ae66b3eab" translate="yes" xml:space="preserve">
          <source>You can perform &quot;git pull&quot;, resolve potential conflicts, and &quot;git push&quot; the result. A &quot;git pull&quot; will create a merge commit C between commits A and B.</source>
          <target state="translated">Puedes realizar &quot;git pull&quot;,resolver conflictos potenciales,y &quot;git push&quot; el resultado.Un &quot;git pull&quot; creará una fusión del commit C entre los commits A y B.</target>
        </trans-unit>
        <trans-unit id="189a9ed33e189223869b33620d09d0f720bf3fe1" translate="yes" xml:space="preserve">
          <source>You can provide options via the credential.helper configuration variable (this example drops the cache time to 5 minutes):</source>
          <target state="translated">Puede proporcionar opciones a través de la variable de configuración credential.helper (este ejemplo reduce el tiempo de caché a 5 minutos):</target>
        </trans-unit>
        <trans-unit id="82656460f1d1171626ca7a2547e75d0458741fd5" translate="yes" xml:space="preserve">
          <source>You can query/set/replace/unset options with this command. The name is actually the section and the key separated by a dot, and the value will be escaped.</source>
          <target state="translated">Puedes consultar/configurar/reemplazar/desconfigurar opciones con este comando.El nombre es en realidad la sección y la clave separadas por un punto,y el valor se escapará.</target>
        </trans-unit>
        <trans-unit id="10e463ee2669848fa9bb9fc90b4474d38bbf73be" translate="yes" xml:space="preserve">
          <source>You can rejoin two diverging branches of development using &lt;a href=&quot;git-merge&quot;&gt;git-merge[1]&lt;/a&gt;:</source>
          <target state="translated">Puedes volver a unir dos ramas divergentes de desarrollo usando &lt;a href=&quot;git-merge&quot;&gt;git-merge [1]&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="3e4277417393477fbeb632e41395d74e0a0e4169" translate="yes" xml:space="preserve">
          <source>You can repack this private repository whenever you feel like.</source>
          <target state="translated">Puedes volver a empaquetar este depósito privado cuando quieras.</target>
        </trans-unit>
        <trans-unit id="3425cb44f3c2a0393cb24a6806cf1648e47fe578" translate="yes" xml:space="preserve">
          <source>You can repeat steps 2-4 multiple times to break the original code into any number of commits.</source>
          <target state="translated">Puedes repetir los pasos 2-4 varias veces para romper el código original en cualquier número de confirmaciones.</target>
        </trans-unit>
        <trans-unit id="f016259f2ce9ae7193e573b7fa2135698ca39f54" translate="yes" xml:space="preserve">
          <source>You can rewrite the commit log messages using &lt;code&gt;--msg-filter&lt;/code&gt;. For example, &lt;code&gt;git svn-id&lt;/code&gt; strings in a repository created by &lt;code&gt;git svn&lt;/code&gt; can be removed this way:</source>
          <target state="translated">Puede reescribir los mensajes de registro de confirmaci&amp;oacute;n usando &lt;code&gt;--msg-filter&lt;/code&gt; . Por ejemplo, las cadenas de &lt;code&gt;git svn-id&lt;/code&gt; en un repositorio creado por &lt;code&gt;git svn&lt;/code&gt; se pueden eliminar de esta manera:</target>
        </trans-unit>
        <trans-unit id="6928e91b0b4a87a6f0188b338ec935fa803e932d" translate="yes" xml:space="preserve">
          <source>You can run &lt;code&gt;git-bundle verify&lt;/code&gt; to see if you can extract from a bundle that was created with a basis:</source>
          <target state="translated">Puede ejecutar &lt;code&gt;git-bundle verify&lt;/code&gt; para ver si puede extraer de un paquete que se cre&amp;oacute; con una base:</target>
        </trans-unit>
        <trans-unit id="28f57e6715a38d45260ef8d226913fe9d5e46420" translate="yes" xml:space="preserve">
          <source>You can run &lt;code&gt;gitk --all&lt;/code&gt; again to see how the commit ancestry looks like, or run &lt;code&gt;show-branch&lt;/code&gt;, which tells you this.</source>
          <target state="translated">Puede ejecutar &lt;code&gt;gitk --all&lt;/code&gt; de nuevo para ver c&amp;oacute;mo se ve la ascendencia de confirmaci&amp;oacute;n, o ejecutar &lt;code&gt;show-branch&lt;/code&gt; , que le dice esto.</target>
        </trans-unit>
        <trans-unit id="ee22a2dcf21325c45ae74e5933824496ebc88dee" translate="yes" xml:space="preserve">
          <source>You can save space and make Git faster by moving these loose objects in to a &quot;pack file&quot;, which stores a group of objects in an efficient compressed format; the details of how pack files are formatted can be found in &lt;a href=&quot;pack-format&quot;&gt;pack format&lt;/a&gt;.</source>
          <target state="translated">Puede ahorrar espacio y hacer que Git sea m&amp;aacute;s r&amp;aacute;pido moviendo estos objetos sueltos a un &quot;archivo de paquete&quot;, que almacena un grupo de objetos en un formato comprimido eficiente; los detalles de c&amp;oacute;mo se formatean los archivos de paquete se pueden encontrar en &lt;a href=&quot;pack-format&quot;&gt;formato de paquete&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="923ef556c5ea1d367a9ceb952e817561488d6f46" translate="yes" xml:space="preserve">
          <source>You can see easily that the above is a rename.</source>
          <target state="translated">Se puede ver fácilmente que lo anterior es un renombre.</target>
        </trans-unit>
        <trans-unit id="5724c58e846fc905ad55d8bc9c332033225407c5" translate="yes" xml:space="preserve">
          <source>You can set this to &lt;code&gt;link&lt;/code&gt;, in which case a hardlink followed by a delete of the source are used to make sure that object creation will not overwrite existing objects.</source>
          <target state="translated">Puede establecer esto en un &lt;code&gt;link&lt;/code&gt; , en cuyo caso se utiliza un enlace fijo seguido de una eliminaci&amp;oacute;n de la fuente para asegurarse de que la creaci&amp;oacute;n de objetos no sobrescriba los objetos existentes.</target>
        </trans-unit>
        <trans-unit id="02df8661fe031a54ab42701feedaa37cd7c87875" translate="yes" xml:space="preserve">
          <source>You can setup one single value (single entry/item in this list) at build time by setting the &lt;code&gt;GITWEB_BASE_URL&lt;/code&gt; build-time configuration variable. By default it is set to (), i.e. an empty list. This means that gitweb would not try to create project URL (to fetch) from project name.</source>
          <target state="translated">Puede configurar un valor &amp;uacute;nico (entrada / elemento &amp;uacute;nico en esta lista) en el momento de la compilaci&amp;oacute;n configurando la variable de configuraci&amp;oacute;n de tiempo de compilaci&amp;oacute;n &lt;code&gt;GITWEB_BASE_URL&lt;/code&gt; . De forma predeterminada, se establece en (), es decir, una lista vac&amp;iacute;a. Esto significa que gitweb no intentar&amp;iacute;a crear la URL del proyecto (para recuperar) del nombre del proyecto.</target>
        </trans-unit>
        <trans-unit id="af5fba33ca90f8278cecf2701efca5c8b71085ca" translate="yes" xml:space="preserve">
          <source>You can specify a list of allowed directories. If no directories are given, all are allowed. This is an additional restriction, gitcvs access still needs to be enabled by the &lt;code&gt;gitcvs.enabled&lt;/code&gt; config option unless &lt;code&gt;--export-all&lt;/code&gt; was given, too.</source>
          <target state="translated">Puede especificar una lista de directorios permitidos. Si no se proporcionan directorios, se permiten todos. Esta es una restricci&amp;oacute;n adicional, gitcvs acceso todav&amp;iacute;a tiene que ser activado por el &lt;code&gt;gitcvs.enabled&lt;/code&gt; opci&amp;oacute;n de configuraci&amp;oacute;n a menos &lt;code&gt;--export-all&lt;/code&gt; se le dio, tambi&amp;eacute;n.</target>
        </trans-unit>
        <trans-unit id="a2f1a86c57fcd513fcca4d9c2bf5f81069f36bf3" translate="yes" xml:space="preserve">
          <source>You can specify extra mail header lines to be added to each message, defaults for the subject prefix and file suffix, number patches when outputting more than one patch, add &quot;To:&quot; or &quot;Cc:&quot; headers, configure attachments, change the patch output directory, and sign off patches with configuration variables.</source>
          <target state="translated">Puede especificar líneas de encabezado de correo adicionales que se agregarán a cada mensaje,valores predeterminados para el prefijo del asunto y el sufijo del archivo,numerar los parches cuando se emita más de un parche,agregar encabezados &quot;To:&quot; o &quot;Cc:&quot;,configurar los archivos adjuntos,cambiar el directorio de salida del parche y cerrar los parches con variables de configuración.</target>
        </trans-unit>
        <trans-unit id="c33dd2cd2261f81cbd0fc492df4e16b1e747c25d" translate="yes" xml:space="preserve">
          <source>You can specify the information shown for each object by using a custom &lt;code&gt;&amp;lt;format&amp;gt;&lt;/code&gt;. The &lt;code&gt;&amp;lt;format&amp;gt;&lt;/code&gt; is copied literally to stdout for each object, with placeholders of the form &lt;code&gt;%(atom)&lt;/code&gt; expanded, followed by a newline. The available atoms are:</source>
          <target state="translated">Puede especificar la informaci&amp;oacute;n que se muestra para cada objeto utilizando un &lt;code&gt;&amp;lt;format&amp;gt;&lt;/code&gt; . El &lt;code&gt;&amp;lt;format&amp;gt;&lt;/code&gt; se copia literalmente a la salida est&amp;aacute;ndar para cada objeto, con marcadores de posici&amp;oacute;n de la forma &lt;code&gt;%(atom)&lt;/code&gt; expandidos, seguidos de una nueva l&amp;iacute;nea. Los &amp;aacute;tomos disponibles son:</target>
        </trans-unit>
        <trans-unit id="5a94d83b2aa4f52ca10b82e1786cdc28d9f55e56" translate="yes" xml:space="preserve">
          <source>You can tell Git to ignore certain files by creating a file called &lt;code&gt;.gitignore&lt;/code&gt; in the top level of your working directory, with contents such as:</source>
          <target state="translated">Puede decirle a Git que ignore ciertos archivos creando un archivo llamado &lt;code&gt;.gitignore&lt;/code&gt; en el nivel superior de su directorio de trabajo, con contenidos como:</target>
        </trans-unit>
        <trans-unit id="491f06c247008ffc2db5fcd9f930c35d5e25a466" translate="yes" xml:space="preserve">
          <source>You can tell Git to split the Git internal information from the directory that it tracks, but we&amp;rsquo;ll ignore that for now: it&amp;rsquo;s not how normal projects work, and it&amp;rsquo;s really only meant for special uses. So the mental model of &quot;the Git information is always tied directly to the working tree that it describes&quot; may not be technically 100% accurate, but it&amp;rsquo;s a good model for all normal use.</source>
          <target state="translated">Puede decirle a Git que divida la informaci&amp;oacute;n interna de Git del directorio que rastrea, pero lo ignoraremos por ahora: no es as&amp;iacute; como funcionan los proyectos normales, y en realidad solo est&amp;aacute; destinado a usos especiales. Por lo tanto, el modelo mental de &quot;la informaci&amp;oacute;n de Git siempre est&amp;aacute; directamente vinculada al &amp;aacute;rbol de trabajo que describe&quot; puede no ser t&amp;eacute;cnicamente 100% exacto, pero es un buen modelo para todo uso normal.</target>
        </trans-unit>
        <trans-unit id="eba2ddb51d288f0b3a9988b4f1ccbdcde132a1f4" translate="yes" xml:space="preserve">
          <source>You can test whether the filesystem supports that with the &lt;code&gt;--test-untracked-cache&lt;/code&gt; option. The &lt;code&gt;--untracked-cache&lt;/code&gt; option used to implicitly perform that test in older versions of Git, but that&amp;rsquo;s no longer the case.</source>
          <target state="translated">Puede probar si el sistema de archivos lo admite con la &lt;code&gt;--test-untracked-cache&lt;/code&gt; . La opci&amp;oacute;n &lt;code&gt;--untracked-cache&lt;/code&gt; utilizada para realizar impl&amp;iacute;citamente esa prueba en versiones anteriores de Git, pero ese ya no es el caso.</target>
        </trans-unit>
        <trans-unit id="33337304817f97abbb584fa2c7541a14abb9bfcd" translate="yes" xml:space="preserve">
          <source>You can then fix the conflicts during the rebase. Presumably you have not published your topic other than by mail, so rebasing it is not a problem.</source>
          <target state="translated">Entonces puedes arreglar los conflictos durante el rebase.Presumiblemente no has publicado tu tema más que por correo,así que el rebase no es un problema.</target>
        </trans-unit>
        <trans-unit id="d6b74e3d43432e56c49f83bf0e8c1bc1b7ac50b8" translate="yes" xml:space="preserve">
          <source>You can then import these into your mail client and send them by hand. However, if you have a lot to send at once, you may prefer to use the &lt;a href=&quot;git-send-email&quot;&gt;git-send-email[1]&lt;/a&gt; script to automate the process. Consult the mailing list for your project first to determine their requirements for submitting patches.</source>
          <target state="translated">Luego puede importarlos a su cliente de correo y enviarlos a mano. Sin embargo, si tiene mucho que enviar a la vez, es posible que prefiera utilizar el script &lt;a href=&quot;git-send-email&quot;&gt;git-send-email [1]&lt;/a&gt; para automatizar el proceso. Consulte primero la lista de correo de su proyecto para determinar sus requisitos para enviar parches.</target>
        </trans-unit>
        <trans-unit id="ad2194dc994cc556c2451e6a9d4c256f90b5afd4" translate="yes" xml:space="preserve">
          <source>You can then transplant the old &lt;code&gt;subsystem..topic&lt;/code&gt; to the new tip by saying (for the reflog case, and assuming you are on &lt;code&gt;topic&lt;/code&gt; already):</source>
          <target state="translated">Luego puede trasplantar el antiguo &lt;code&gt;subsystem..topic&lt;/code&gt; al nuevo tip diciendo (para el caso de reflog, y asumiendo que ya est&amp;aacute; en el &lt;code&gt;topic&lt;/code&gt; ):</target>
        </trans-unit>
        <trans-unit id="b5bb69809c9820257d5f27c5ec379a4130c453d8" translate="yes" xml:space="preserve">
          <source>You can think of this as a set operation. Commits given on the command line form a set of commits that are reachable from any of them, and then commits reachable from any of the ones given with &lt;code&gt;^&lt;/code&gt; in front are subtracted from that set. The remaining commits are what comes out in the command&amp;rsquo;s output. Various other options and paths parameters can be used to further limit the result.</source>
          <target state="translated">Puede pensar en esto como una operaci&amp;oacute;n establecida. Las confirmaciones dadas en la l&amp;iacute;nea de comando forman un conjunto de confirmaciones que son accesibles desde cualquiera de ellas, y luego las confirmaciones alcanzables desde cualquiera de las dadas con &lt;code&gt;^&lt;/code&gt; delante se restan de ese conjunto. Las confirmaciones restantes son las que aparecen en la salida del comando. Se pueden utilizar otras opciones y par&amp;aacute;metros de rutas para limitar a&amp;uacute;n m&amp;aacute;s el resultado.</target>
        </trans-unit>
        <trans-unit id="eacfd2b96f144de251fd3721b44d6ad9ca988b86" translate="yes" xml:space="preserve">
          <source>You can try running &lt;code&gt;find .git/objects -type f&lt;/code&gt; before and after you run &lt;code&gt;git prune-packed&lt;/code&gt; if you are curious. Also &lt;code&gt;git
count-objects&lt;/code&gt; would tell you how many unpacked objects are in your repository and how much space they are consuming.</source>
          <target state="translated">Puede intentar ejecutar &lt;code&gt;find .git/objects -type f&lt;/code&gt; antes y despu&amp;eacute;s de ejecutar &lt;code&gt;git prune-packed&lt;/code&gt; si tiene curiosidad. Adem&amp;aacute;s, &lt;code&gt;git count-objects&lt;/code&gt; le dir&amp;iacute;a cu&amp;aacute;ntos objetos desempaquetados hay en su repositorio y cu&amp;aacute;nto espacio consumen.</target>
        </trans-unit>
        <trans-unit id="78c0fba98badb6e25ce1949ee53cb8839b8be51a" translate="yes" xml:space="preserve">
          <source>You can update the shared repository with your changes by first committing your changes, and then using the &lt;code&gt;git push&lt;/code&gt; command:</source>
          <target state="translated">Puede actualizar el repositorio compartido con sus cambios si primero confirma sus cambios y luego usa el comando &lt;code&gt;git push&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="fe24364fca4da5268b93a1c7c864762589bec5d4" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;git-show&quot;&gt;git-show[1]&lt;/a&gt; to examine the contents of a blob; take, for example, the blob in the entry for &lt;code&gt;COPYING&lt;/code&gt; from the tree above:</source>
          <target state="translated">Puede usar &lt;a href=&quot;git-show&quot;&gt;git-show [1]&lt;/a&gt; para examinar el contenido de un blob; tome, por ejemplo, el blob en la entrada para &lt;code&gt;COPYING&lt;/code&gt; del &amp;aacute;rbol de arriba:</target>
        </trans-unit>
        <trans-unit id="cdee252fbf6b663369bb36f7a81711483c778043" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;git stash push --keep-index&lt;/code&gt; when you want to make two or more commits out of the changes in the work tree, and you want to test each change before committing:</source>
          <target state="translated">Puede usar &lt;code&gt;git stash push --keep-index&lt;/code&gt; cuando desee realizar dos o m&amp;aacute;s confirmaciones a partir de los cambios en el &amp;aacute;rbol de trabajo, y desea probar cada cambio antes de realizar la confirmaci&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="b954fc6ff3f193031cbeca4547760f3425491805" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;git stash&lt;/code&gt; to simplify the above, like this:</source>
          <target state="translated">Puedes usar &lt;code&gt;git stash&lt;/code&gt; para simplificar lo anterior, as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="c482710749f3dcad6cbdc9701b2eb8b0d7f62e6a" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;stable-1&lt;/code&gt; to refer to the commit 1b2e1d63ff.</source>
          <target state="translated">Puede usar &lt;code&gt;stable-1&lt;/code&gt; para referirse a la confirmaci&amp;oacute;n 1b2e1d63ff.</target>
        </trans-unit>
        <trans-unit id="783e49ef6897108ce62c504df5bb1071160ba897" translate="yes" xml:space="preserve">
          <source>You can use a basis based on time:</source>
          <target state="translated">Puedes usar una base basada en el tiempo:</target>
        </trans-unit>
        <trans-unit id="0dcaab83279bcfe9c2e3dbaa6b4f0d035029ab31" translate="yes" xml:space="preserve">
          <source>You can use a tag that is present in both:</source>
          <target state="translated">Puedes usar una etiqueta que esté presente en ambos:</target>
        </trans-unit>
        <trans-unit id="0967772702daca79ec55cd9be52c70fe75848751" translate="yes" xml:space="preserve">
          <source>You can use different &lt;code&gt;&amp;lt;action&amp;gt;&lt;/code&gt; values to control this behavior:</source>
          <target state="translated">Puede usar diferentes valores de &lt;code&gt;&amp;lt;action&amp;gt;&lt;/code&gt; para controlar este comportamiento:</target>
        </trans-unit>
        <trans-unit id="72733e82f897a2af21fcfc3df3447e66ece75165" translate="yes" xml:space="preserve">
          <source>You can use it as a human-readable bundle replacement (see &lt;a href=&quot;git-bundle&quot;&gt;git-bundle[1]&lt;/a&gt;), or as a format that can be edited before being fed to &lt;code&gt;git fast-import&lt;/code&gt; in order to do history rewrites (an ability relied on by tools like &lt;code&gt;git filter-repo&lt;/code&gt;).</source>
          <target state="translated">Puede usarlo como un reemplazo de paquete legible por humanos (ver &lt;a href=&quot;git-bundle&quot;&gt;git-bundle [1]&lt;/a&gt; ), o como un formato que se puede editar antes de ser alimentado a &lt;code&gt;git fast-import&lt;/code&gt; para reescribir el historial (una habilidad en la que se basan las herramientas como &lt;code&gt;git filter-repo&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="6b34e82e0ff80209e7866272f371ddd1420b0f13" translate="yes" xml:space="preserve">
          <source>You can use mod_perl with gitweb. You must install Apache::Registry (for mod_perl 1.x) or ModPerl::Registry (for mod_perl 2.x) to enable this support.</source>
          <target state="translated">Puedes usar mod_perl con gitweb.Debes instalar Apache::Registry (para mod_perl 1.x)o ModPerl::Registry (para mod_perl 2.x)para habilitar este soporte.</target>
        </trans-unit>
        <trans-unit id="625924bfa2e6c050ea9730ca7a0edb6cfce2bfdc" translate="yes" xml:space="preserve">
          <source>You can use notes to add annotations with information that was not available at the time a commit was written.</source>
          <target state="translated">Puede utilizar notas para añadir anotaciones con información que no estaba disponible en el momento en que se escribió un compromiso.</target>
        </trans-unit>
        <trans-unit id="0bbbcd5b5890880e82d452d584e7cf77013dabac" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;@&lt;/code&gt; construct with an empty ref part to get at a reflog entry of the current branch. For example, if you are on branch &lt;code&gt;blabla&lt;/code&gt; then &lt;code&gt;@{1}&lt;/code&gt; means the same as &lt;code&gt;blabla@{1}&lt;/code&gt;.</source>
          <target state="translated">Puede usar la construcci&amp;oacute;n &lt;code&gt;@&lt;/code&gt; con una parte de referencia vac&amp;iacute;a para obtener una entrada de reflog de la rama actual. Por ejemplo, si est&amp;aacute; en la rama &lt;code&gt;blabla&lt;/code&gt; , &lt;code&gt;@{1}&lt;/code&gt; significa lo mismo que &lt;code&gt;blabla@{1}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bd3a4b2dd2cada66b7023aa9fae3c933422c9fcc" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;@{-N}&lt;/code&gt; syntax to refer to the N-th last branch/commit checked out using &quot;git checkout&quot; operation. You may also specify &lt;code&gt;-&lt;/code&gt; which is synonymous to &lt;code&gt;@{-1}&lt;/code&gt;.</source>
          <target state="translated">Puede usar la sintaxis &lt;code&gt;@{-N}&lt;/code&gt; para referirse a la &amp;uacute;ltima rama / confirmaci&amp;oacute;n N-&amp;eacute;sima verificada usando la operaci&amp;oacute;n &quot;git checkout&quot;. Tambi&amp;eacute;n puede especificar &lt;code&gt;-&lt;/code&gt; que es sin&amp;oacute;nimo de &lt;code&gt;@{-1}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e21f11f93a4b8bdb963de3cd700b58b5db33242a" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;@{-N}&lt;/code&gt; syntax to refer to the N-th last branch/commit switched to using &quot;git switch&quot; or &quot;git checkout&quot; operation. You may also specify &lt;code&gt;-&lt;/code&gt; which is synonymous to &lt;code&gt;@{-1}&lt;/code&gt;. This is often used to switch quickly between two branches, or to undo a branch switch by mistake.</source>
          <target state="translated">Puede usar la sintaxis &lt;code&gt;@{-N}&lt;/code&gt; para referirse a la &amp;uacute;ltima rama / confirmaci&amp;oacute;n N-&amp;eacute;sima a la que se cambi&amp;oacute; el uso de la operaci&amp;oacute;n &quot;git switch&quot; o &quot;git checkout&quot;. Tambi&amp;eacute;n puede especificar &lt;code&gt;-&lt;/code&gt; que es sin&amp;oacute;nimo de &lt;code&gt;@{-1}&lt;/code&gt; . Esto se usa a menudo para cambiar r&amp;aacute;pidamente entre dos ramas o para deshacer un cambio de rama por error.</target>
        </trans-unit>
        <trans-unit id="736fc09a09a7b16017fd49ac75e258e953294134" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;gitweb.owner&lt;/code&gt; repository configuration variable to set repository&amp;rsquo;s owner. It is displayed in the project list and summary page.</source>
          <target state="translated">Puede usar la variable de configuraci&amp;oacute;n del repositorio &lt;code&gt;gitweb.owner&lt;/code&gt; para establecer el propietario del repositorio. Se muestra en la lista de proyectos y en la p&amp;aacute;gina de resumen.</target>
        </trans-unit>
        <trans-unit id="b3762dc0cf78ebbd7cf935ac045ade59a2e3acbf" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;htpasswd&lt;/code&gt; facility that comes with Apache to make these files, but Apache&amp;rsquo;s MD5 crypt method differs from the one used by most C library&amp;rsquo;s crypt() function, so don&amp;rsquo;t use the -m option.</source>
          <target state="translated">Puede usar la funci&amp;oacute;n &lt;code&gt;htpasswd&lt;/code&gt; que viene con Apache para crear estos archivos, pero el m&amp;eacute;todo de cripta MD5 de Apache difiere del que usa la funci&amp;oacute;n crypt () de la mayor&amp;iacute;a de las bibliotecas de C, as&amp;iacute; que no use la opci&amp;oacute;n -m.</target>
        </trans-unit>
        <trans-unit id="80aa1363be3995d4ec384e59561a0e7a0903c070" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;map&lt;/code&gt; convenience function in this filter, and other convenience functions, too. For example, calling &lt;code&gt;skip_commit &quot;$@&quot;&lt;/code&gt; will leave out the current commit (but not its changes! If you want that, use &lt;code&gt;git rebase&lt;/code&gt; instead).</source>
          <target state="translated">Puede utilizar la funci&amp;oacute;n de conveniencia del &lt;code&gt;map&lt;/code&gt; a en este filtro y tambi&amp;eacute;n otras funciones de conveniencia. Por ejemplo, llamar a &lt;code&gt;skip_commit &quot;$@&quot;&lt;/code&gt; dejar&amp;aacute; fuera la confirmaci&amp;oacute;n actual (&amp;iexcl;pero no sus cambios! Si quieres eso, usa &lt;code&gt;git rebase&lt;/code&gt; en su lugar).</target>
        </trans-unit>
        <trans-unit id="c32abff787b36e9c877031d224291d8c643f61f1" translate="yes" xml:space="preserve">
          <source>You can use the following files in repository:</source>
          <target state="translated">Puede utilizar los siguientes archivos en el repositorio:</target>
        </trans-unit>
        <trans-unit id="b6c6eac74692734c5ec1dc3c689d37b0eb0dcea6" translate="yes" xml:space="preserve">
          <source>You can use the number of commits:</source>
          <target state="translated">Puedes usar el número de compromisos:</target>
        </trans-unit>
        <trans-unit id="4a928f707b340dd3df65a93fa7f9942c5a65d9b2" translate="yes" xml:space="preserve">
          <source>You can very easily automatically bisect broken builds using something like:</source>
          <target state="translated">Puedes fácilmente dividir automáticamente las construcciones rotas usando algo como:</target>
        </trans-unit>
        <trans-unit id="77487b0c89edd8fd842e99d65a1b39d2c6b378f5" translate="yes" xml:space="preserve">
          <source>You can work through the conflict with a number of tools:</source>
          <target state="translated">Puedes trabajar a través del conflicto con una serie de herramientas:</target>
        </trans-unit>
        <trans-unit id="918d78d55a9c451b1a86101242b3194591c9e6cc" translate="yes" xml:space="preserve">
          <source>You can write the mandatory option parameter to an option as a separate word on the command line. That means that all the following uses work:</source>
          <target state="translated">Puede escribir el parámetro de opción obligatoria en una opción como una palabra separada en la línea de comando.Eso significa que todos los usos siguientes funcionan:</target>
        </trans-unit>
        <trans-unit id="d7f91f3a076bca347349424f4008dca0a1518c15" translate="yes" xml:space="preserve">
          <source>You can write your own custom helpers to interface with any system in which you keep credentials. See credential.h for details.</source>
          <target state="translated">Puedes escribir tus propios ayudantes personalizados para interactuar con cualquier sistema en el que tengas credenciales.Ver credential.h para más detalles.</target>
        </trans-unit>
        <trans-unit id="c06b90a2f16de670e5df5d7464445ae0f28559f2" translate="yes" xml:space="preserve">
          <source>You could be using the &lt;code&gt;objects/info/alternates&lt;/code&gt; or &lt;code&gt;$GIT_ALTERNATE_OBJECT_DIRECTORIES&lt;/code&gt; mechanisms to &lt;code&gt;borrow&lt;/code&gt; objects from other object stores. A repository with this kind of incomplete object store is not suitable to be published for use with dumb transports but otherwise is OK as long as &lt;code&gt;objects/info/alternates&lt;/code&gt; points at the object stores it borrows from.</source>
          <target state="translated">Podr&amp;iacute;a estar utilizando los mecanismos &lt;code&gt;objects/info/alternates&lt;/code&gt; o &lt;code&gt;$GIT_ALTERNATE_OBJECT_DIRECTORIES&lt;/code&gt; para &lt;code&gt;borrow&lt;/code&gt; objetos de otras tiendas de objetos. Un repositorio con este tipo de almac&amp;eacute;n de objetos incompleto no es adecuado para ser publicado para su uso con transportes tontos, pero por lo dem&amp;aacute;s est&amp;aacute; bien siempre que los &lt;code&gt;objects/info/alternates&lt;/code&gt; puntos alternos en los almacenes de objetos de los que toma prestado.</target>
        </trans-unit>
        <trans-unit id="e2e5ecc00e320fd7f95c1d7def9e5cd07e7e5d74" translate="yes" xml:space="preserve">
          <source>You could do without using any branches at all, by keeping as many local repositories as you would like to have branches, and merging between them with &lt;em&gt;git pull&lt;/em&gt;, just like you merge between branches. The advantage of this approach is that it lets you keep a set of files for each &lt;code&gt;branch&lt;/code&gt; checked out and you may find it easier to switch back and forth if you juggle multiple lines of development simultaneously. Of course, you will pay the price of more disk usage to hold multiple working trees, but disk space is cheap these days.</source>
          <target state="translated">Puede prescindir del uso de ninguna rama, manteniendo tantos repositorios locales como le gustar&amp;iacute;a tener ramas y fusionando entre ellos con &lt;em&gt;git pull&lt;/em&gt; , tal como se fusiona entre ramas. La ventaja de este enfoque es que le permite mantener un conjunto de archivos para cada &lt;code&gt;branch&lt;/code&gt; extra&amp;iacute;da y es posible que le resulte m&amp;aacute;s f&amp;aacute;cil cambiar de un lado a otro si hace malabarismos con varias l&amp;iacute;neas de desarrollo simult&amp;aacute;neamente. Por supuesto, pagar&amp;aacute; el precio de un mayor uso del disco para contener varios &amp;aacute;rboles de trabajo, pero el espacio en disco es barato en estos d&amp;iacute;as.</target>
        </trans-unit>
        <trans-unit id="8ff03510fc9dfa2f41199478909f4845fc0f0bb6" translate="yes" xml:space="preserve">
          <source>You could have an incomplete but locally usable repository by creating a shallow clone. See &lt;a href=&quot;git-clone&quot;&gt;git-clone[1]&lt;/a&gt;.</source>
          <target state="translated">Podr&amp;iacute;a tener un repositorio incompleto pero utilizable localmente creando un clon superficial. Ver &lt;a href=&quot;git-clone&quot;&gt;git-clone [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f736fa76fc678c4f130db13f45faf6b48f41687a" translate="yes" xml:space="preserve">
          <source>You could just visually inspect the commits since e05db0fd:</source>
          <target state="translated">Podrías inspeccionar visualmente los compromisos desde e05db0fd:</target>
        </trans-unit>
        <trans-unit id="0d78b2a8d8354041e789d882f2348db69275bdcd" translate="yes" xml:space="preserve">
          <source>You could omit &lt;code&gt;&amp;lt;branch&amp;gt;&lt;/code&gt;, in which case the command degenerates to &quot;check out the current branch&quot;, which is a glorified no-op with rather expensive side-effects to show only the tracking information, if exists, for the current branch.</source>
          <target state="translated">Puede omitir &lt;code&gt;&amp;lt;branch&amp;gt;&lt;/code&gt; , en cuyo caso el comando degenera a &quot;comprobar la rama actual&quot;, que es un no-op glorificado con efectos secundarios bastante costosos para mostrar solo la informaci&amp;oacute;n de seguimiento, si existe, para la rama actual.</target>
        </trans-unit>
        <trans-unit id="7c5b22847ee058ce78c26cbc63e773fbbc9499cd" translate="yes" xml:space="preserve">
          <source>You create a commit object by giving it the tree that describes the state at the time of the commit, and a list of parents:</source>
          <target state="translated">Creas un objeto de compromiso dándole el árbol que describe el estado en el momento del compromiso,y una lista de los padres:</target>
        </trans-unit>
        <trans-unit id="0fca09140e6ecd8df23b487785db8ea6f6692c80" translate="yes" xml:space="preserve">
          <source>You do not want any end-of-line conversions applied to, nor textual diffs produced for, any binary file you track. You would need to specify e.g.</source>
          <target state="translated">No quieres que se apliquen conversiones de final de línea,ni que se produzcan diferencias textuales para ningún archivo binario que rastrees.Tendrías que especificar,por ejemplo.</target>
        </trans-unit>
        <trans-unit id="3b6ec2c54535f15330b4b3b431cf4481da43a55b" translate="yes" xml:space="preserve">
          <source>You do random edits, without running &lt;code&gt;git update-index&lt;/code&gt;. And then you notice that the tip of your &quot;upstream&quot; tree has advanced since you pulled from him:</source>
          <target state="translated">Realiza ediciones aleatorias, sin ejecutar &lt;code&gt;git update-index&lt;/code&gt; . Y luego notas que la punta de tu &amp;aacute;rbol &quot;corriente arriba&quot; ha avanzado desde que lo sacaste de &amp;eacute;l:</target>
        </trans-unit>
        <trans-unit id="96b7f9c5e1f885ad6155a2dabe0351e9e08cd246" translate="yes" xml:space="preserve">
          <source>You do your real work in your working tree that has your primary repository hanging under it as its &lt;code&gt;.git&lt;/code&gt; subdirectory. You &lt;strong&gt;could&lt;/strong&gt; make that repository accessible remotely and ask people to pull from it, but in practice that is not the way things are usually done. A recommended way is to have a public repository, make it reachable by other people, and when the changes you made in your primary working tree are in good shape, update the public repository from it. This is often called &lt;code&gt;pushing&lt;/code&gt;.</source>
          <target state="translated">Realiza su trabajo real en su &amp;aacute;rbol de trabajo que tiene su repositorio principal colgando debajo de &amp;eacute;l como su subdirectorio &lt;code&gt;.git&lt;/code&gt; . Usted &lt;strong&gt;podr&amp;iacute;a&lt;/strong&gt; hacer que repositorio accesible de forma remota y pregunta a la gente a tirar de ella, pero en la pr&amp;aacute;ctica que no es el camino las cosas se realiza. Una forma recomendada es tener un repositorio p&amp;uacute;blico, hacerlo accesible para otras personas, y cuando los cambios que realiz&amp;oacute; en su &amp;aacute;rbol de trabajo principal est&amp;eacute;n en buen estado, actualice el repositorio p&amp;uacute;blico desde &amp;eacute;l. A esto a menudo se le llama &lt;code&gt;pushing&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0911499c26fd93762ba87b20e89843bed2558fd8" translate="yes" xml:space="preserve">
          <source>You have made some commits, but realize they were premature to be in the &lt;code&gt;master&lt;/code&gt; branch. You want to continue polishing them in a topic branch, so create &lt;code&gt;topic/wip&lt;/code&gt; branch off of the current &lt;code&gt;HEAD&lt;/code&gt;.</source>
          <target state="translated">Ha realizado algunas confirmaciones, pero se da cuenta de que eran prematuras para estar en la rama &lt;code&gt;master&lt;/code&gt; . Desea continuar puli&amp;eacute;ndolos en una rama de tema, as&amp;iacute; que cree una rama de &lt;code&gt;topic/wip&lt;/code&gt; fuera del &lt;code&gt;HEAD&lt;/code&gt; actual .</target>
        </trans-unit>
        <trans-unit id="9321ccbae87a4bc4f97065bb17cb67a1a81520be" translate="yes" xml:space="preserve">
          <source>You have now created your first Git repository. Of course, since it&amp;rsquo;s empty, that&amp;rsquo;s not very useful, so let&amp;rsquo;s start populating it with data.</source>
          <target state="translated">Ahora ha creado su primer repositorio de Git. Por supuesto, como est&amp;aacute; vac&amp;iacute;o, eso no es muy &amp;uacute;til, as&amp;iacute; que comencemos a llenarlo con datos.</target>
        </trans-unit>
        <trans-unit id="d177c25ea329a8110bbd819e0cb66c6b6619b0d7" translate="yes" xml:space="preserve">
          <source>You have now successfully copied somebody else&amp;rsquo;s (mine) remote repository, and checked it out.</source>
          <target state="translated">Ahora ha copiado con &amp;eacute;xito el repositorio remoto de otra persona (el m&amp;iacute;o) y lo ha verificado.</target>
        </trans-unit>
        <trans-unit id="3cc6b09871d23a7d903d56d9d6eb61d9c29d1dd4" translate="yes" xml:space="preserve">
          <source>You have performed no merges into mywork, so it is just a simple linear sequence of patches on top of &lt;code&gt;origin&lt;/code&gt;:</source>
          <target state="translated">No ha realizado fusiones en mi trabajo, por lo que es solo una secuencia lineal simple de parches en la parte superior del &lt;code&gt;origin&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="2f8744f866557cd48a608818edcb46f21bfb3d75" translate="yes" xml:space="preserve">
          <source>You have to run &lt;code&gt;git submodule update&lt;/code&gt; after &lt;code&gt;git pull&lt;/code&gt; if you want to update submodules, too.</source>
          <target state="translated">&lt;code&gt;git submodule update&lt;/code&gt; ejecutar git submodule update despu&amp;eacute;s de &lt;code&gt;git pull&lt;/code&gt; si tambi&amp;eacute;n desea actualizar los subm&amp;oacute;dulos.</target>
        </trans-unit>
        <trans-unit id="f82b6e7678c4aeade044d41684916154b148e08d" translate="yes" xml:space="preserve">
          <source>You haven&amp;rsquo;t specified any nodes as heads so it won&amp;rsquo;t be possible to differentiate between un-parented commits and root nodes.</source>
          <target state="translated">No ha especificado ning&amp;uacute;n nodo como encabezado, por lo que no ser&amp;aacute; posible diferenciar entre confirmaciones sin padres y nodos ra&amp;iacute;z.</target>
        </trans-unit>
        <trans-unit id="60617aeef2563268db523c5fdc5a619452e83d26" translate="yes" xml:space="preserve">
          <source>You may also add new content that does not exist in the patch; simply add new lines, each starting with &quot;+&quot;. The addition will appear reverted in the working tree.</source>
          <target state="translated">También puedes añadir nuevo contenido que no existe en el parche;simplemente añade nuevas líneas,cada una de las cuales comienza con &quot;+&quot;.La adición aparecerá revertida en el árbol de trabajo.</target>
        </trans-unit>
        <trans-unit id="ef502914f7e8ab4571571ef4343614d654bb655c" translate="yes" xml:space="preserve">
          <source>You may also have third-party helpers installed; search for &lt;code&gt;credential-*&lt;/code&gt; in the output of &lt;code&gt;git help -a&lt;/code&gt;, and consult the documentation of individual helpers. Once you have selected a helper, you can tell Git to use it by putting its name into the credential.helper variable.</source>
          <target state="translated">Tambi&amp;eacute;n puede tener instalados ayudantes de terceros; busque &lt;code&gt;credential-*&lt;/code&gt; en la salida de &lt;code&gt;git help -a&lt;/code&gt; , y consulte la documentaci&amp;oacute;n de los ayudantes individuales. Una vez que haya seleccionado un ayudante, puede decirle a Git que lo use poniendo su nombre en la variable credential.helper.</target>
        </trans-unit>
        <trans-unit id="f2298abd2d14c4384844acf0edbfaf0baea1ecae" translate="yes" xml:space="preserve">
          <source>You may also include a &lt;code&gt;!&lt;/code&gt; in front of the ref name to negate the entry, explicitly exposing it, even if an earlier entry marked it as hidden. If you have multiple hideRefs values, later entries override earlier ones (and entries in more-specific config files override less-specific ones).</source>
          <target state="translated">Tambi&amp;eacute;n puede incluir un &lt;code&gt;!&lt;/code&gt; delante del nombre de referencia para negar la entrada, exponi&amp;eacute;ndola expl&amp;iacute;citamente, incluso si una entrada anterior la marc&amp;oacute; como oculta. Si tiene varios valores de hideRefs, las entradas posteriores anulan las anteriores (y las entradas en archivos de configuraci&amp;oacute;n m&amp;aacute;s espec&amp;iacute;ficos anulan las menos espec&amp;iacute;ficas).</target>
        </trans-unit>
        <trans-unit id="ea31f49a09c0b721c12c5805f99a1757f98a096f" translate="yes" xml:space="preserve">
          <source>You may also use &lt;a href=&quot;git-mergetool&quot;&gt;git-mergetool[1]&lt;/a&gt;, which lets you merge the unmerged files using external tools such as Emacs or kdiff3.</source>
          <target state="translated">Tambi&amp;eacute;n puede usar &lt;a href=&quot;git-mergetool&quot;&gt;git-mergetool [1]&lt;/a&gt; , que le permite fusionar los archivos no fusionados usando herramientas externas como Emacs o kdiff3.</target>
        </trans-unit>
        <trans-unit id="9adc4f69fd1939534db6a41ec486285df53ebd63" translate="yes" xml:space="preserve">
          <source>You may execute several commands by either using one instance of &lt;code&gt;--exec&lt;/code&gt; with several commands:</source>
          <target state="translated">Puede ejecutar varios comandos utilizando una instancia de &lt;code&gt;--exec&lt;/code&gt; con varios comandos:</target>
        </trans-unit>
        <trans-unit id="a70c5e0fed390964e6d887a35161883ab1754024" translate="yes" xml:space="preserve">
          <source>You may find this helpful after reverting a topic branch merge, as this option recreates the topic branch with fresh commits so it can be remerged successfully without needing to &quot;revert the reversion&quot; (see the &lt;a href=&quot;https://git-scm.com/docs/howto/revert-a-faulty-merge&quot;&gt;revert-a-faulty-merge How-To&lt;/a&gt; for details).</source>
          <target state="translated">Puede encontrar esto &amp;uacute;til despu&amp;eacute;s de revertir una fusi&amp;oacute;n de rama de tema, ya que esta opci&amp;oacute;n recrea la rama de tema con nuevas confirmaciones para que pueda volver a fusionarse con &amp;eacute;xito sin necesidad de &quot;revertir la reversi&amp;oacute;n&quot; (consulte los &lt;a href=&quot;https://git-scm.com/docs/howto/revert-a-faulty-merge&quot;&gt;procedimientos de revertir una fusi&amp;oacute;n defectuosa&lt;/a&gt; para detalles).</target>
        </trans-unit>
        <trans-unit id="08631c52a6efa8d7c45c6edcb816f877829615bc" translate="yes" xml:space="preserve">
          <source>You may force &lt;code&gt;git push&lt;/code&gt; to perform the update anyway by preceding the branch name with a plus sign:</source>
          <target state="translated">Puede forzar a &lt;code&gt;git push&lt;/code&gt; a realizar la actualizaci&amp;oacute;n de todos modos precediendo el nombre de la rama con un signo m&amp;aacute;s:</target>
        </trans-unit>
        <trans-unit id="ae2bd0ef4c886d9dfce1ee8146a7755d847ffcc2" translate="yes" xml:space="preserve">
          <source>You may often find that during a bisect session you want to have temporary modifications (e.g. s/#define DEBUG 0/#define DEBUG 1/ in a header file, or &quot;revision that does not have this commit needs this patch applied to work around another problem this bisection is not interested in&quot;) applied to the revision being tested.</source>
          <target state="translated">Es posible que a menudo se encuentre con que durante una sesión bisectriz desea que se apliquen modificaciones temporales (por ejemplo,s/#define DEBUG 0/#define DEBUG 1/en un archivo de cabecera,o &quot;la revisión que no tiene esta confirmación necesita que se aplique este parche para trabajar en torno a otro problema que no le interesa a esta bisección&quot;)a la revisión que se está probando.</target>
        </trans-unit>
        <trans-unit id="014dba50ebab24a63a38baad57ed8364492c1d37" translate="yes" xml:space="preserve">
          <source>You may override individual configuration parameters when running any git command by using the &lt;code&gt;-c&lt;/code&gt; option. See &lt;a href=&quot;git&quot;&gt;git[1]&lt;/a&gt; for details.</source>
          <target state="translated">Puede anular los par&amp;aacute;metros de configuraci&amp;oacute;n individuales al ejecutar cualquier comando git utilizando la opci&amp;oacute;n &lt;code&gt;-c&lt;/code&gt; . Consulte &lt;a href=&quot;git&quot;&gt;git [1]&lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="ac5fdcda86efd0f875c444e1e9c4b64fbcccd8a8" translate="yes" xml:space="preserve">
          <source>You may specify configuration in your .git/config</source>
          <target state="translated">Puede especificar la configuración en su .git/config</target>
        </trans-unit>
        <trans-unit id="13fb0fac683620e44c1d9b40bc74efe99d0db2f0" translate="yes" xml:space="preserve">
          <source>You may still choose to publish branches whose history is rewritten, and it may be useful for others to be able to fetch those branches in order to examine or test them, but they should not attempt to pull such branches into their own work.</source>
          <target state="translated">Todavía puede optar por publicar ramas cuya historia se reescribe,y puede ser útil que otros puedan buscar esas ramas para examinarlas o probarlas,pero no deben tratar de arrastrarlas a su propio trabajo.</target>
        </trans-unit>
        <trans-unit id="2cb3e9e45a2fe07905a833e4999cf989715a0ad3" translate="yes" xml:space="preserve">
          <source>You might need to instead use: folder = &quot;[Google Mail]/Drafts&quot; if you get an error that the &quot;Folder doesn&amp;rsquo;t exist&quot;.</source>
          <target state="translated">En su lugar, es posible que deba utilizar: folder = &quot;[Google Mail] / Drafts&quot; si recibe un error que indica que la &quot;Carpeta no existe&quot;.</target>
        </trans-unit>
        <trans-unit id="ce52beb4e545845637d5d5a0a1bc64e60b253c82" translate="yes" xml:space="preserve">
          <source>You might want to build on one of these remote-tracking branches on a branch of your own, just as you would for a tag:</source>
          <target state="translated">Tal vez quieras construir una de estas ramas de rastreo remoto en una rama propia,como lo harías para una etiqueta:</target>
        </trans-unit>
        <trans-unit id="d0620c25fa90dc1aefb86ac91dfbd9e4eb8b29d0" translate="yes" xml:space="preserve">
          <source>You might want to recreate merge commits, e.g. if you have a history like this:</source>
          <target state="translated">Puede que quieras recrear los compromisos de fusión,por ejemplo,si tienes una historia como esta:</target>
        </trans-unit>
        <trans-unit id="76dbf6258421c615799bec755123a1d09c6ae993" translate="yes" xml:space="preserve">
          <source>You need to push the new tag to a public Git server (see &quot;DISTRIBUTED WORKFLOWS&quot; below). This makes the tag available to others tracking your project. The push could also trigger a post-update hook to perform release-related items such as building release tarballs and preformatted documentation pages.</source>
          <target state="translated">Necesitas empujar la nueva etiqueta a un servidor público de Git (ver &quot;FLUJOS DE TRABAJO DISTRIBUIDOS&quot; más abajo).Esto hace que la etiqueta esté disponible para otros que estén rastreando tu proyecto.El empuje también podría activar un gancho de post-actualización para realizar elementos relacionados con la liberación,como la construcción de tarballs de liberación y páginas de documentación preformateadas.</target>
        </trans-unit>
        <trans-unit id="23c2bb7cb1fc9b6f4a240d36b5b4f0b94079730d" translate="yes" xml:space="preserve">
          <source>You need to set the configuration variable &lt;code&gt;rerere.enabled&lt;/code&gt; in order to enable this command.</source>
          <target state="translated">&lt;code&gt;rerere.enabled&lt;/code&gt; establecer la variable de configuraci&amp;oacute;n rerere.enabled para habilitar este comando.</target>
        </trans-unit>
        <trans-unit id="beb1062efd31de3a255af22760556d9dc5fafa01" translate="yes" xml:space="preserve">
          <source>You normally only do signed tags for major releases or things like that, while the light-weight tags are useful for any marking you want to do &amp;mdash; any time you decide that you want to remember a certain point, just create a private tag for it, and you have a nice symbolic name for the state at that point.</source>
          <target state="translated">Normalmente solo hace etiquetas firmadas para lanzamientos importantes o cosas por el estilo, mientras que las etiquetas ligeras son &amp;uacute;tiles para cualquier marcado que desee hacer; cada vez que decida que desea recordar un punto determinado, simplemente cree una etiqueta privada para ello. , y tienes un bonito nombre simb&amp;oacute;lico para el estado en ese momento.</target>
        </trans-unit>
        <trans-unit id="0eafb62c845e9f30a39264ada6b686e1d1ebb7b8" translate="yes" xml:space="preserve">
          <source>You often interact with the same remote repository by regularly and repeatedly fetching from it. In order to keep track of the progress of such a remote repository, &lt;code&gt;git fetch&lt;/code&gt; allows you to configure &lt;code&gt;remote.&amp;lt;repository&amp;gt;.fetch&lt;/code&gt; configuration variables.</source>
          <target state="translated">A menudo interact&amp;uacute;a con el mismo repositorio remoto obteniendo de &amp;eacute;l de forma regular y repetida. Para realizar un seguimiento del progreso de dicho repositorio remoto, &lt;code&gt;git fetch&lt;/code&gt; te permite configurar las variables de configuraci&amp;oacute;n &lt;code&gt;remote.&amp;lt;repository&amp;gt;.fetch&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0b67cab4bffb98d3ad72ff6748f9f8b98887d9f3" translate="yes" xml:space="preserve">
          <source>You probably don&amp;rsquo;t want to invoke this command directly; it is meant to be used as a credential helper by other parts of Git. See &lt;a href=&quot;gitcredentials&quot;&gt;gitcredentials[7]&lt;/a&gt; or &lt;code&gt;EXAMPLES&lt;/code&gt; below.</source>
          <target state="translated">Probablemente no desee invocar este comando directamente; est&amp;aacute; destinado a ser utilizado como ayudante de credenciales por otras partes de Git. Consulte &lt;a href=&quot;gitcredentials&quot;&gt;gitcredentials [7]&lt;/a&gt; o &lt;code&gt;EXAMPLES&lt;/code&gt; continuaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="467e6fc50e0615f651de6ffbcc6e0f17ecbae432" translate="yes" xml:space="preserve">
          <source>You probably don&amp;rsquo;t want to invoke this command directly; it is meant to be used as a credential helper by other parts of git. See &lt;a href=&quot;gitcredentials&quot;&gt;gitcredentials[7]&lt;/a&gt; or &lt;code&gt;EXAMPLES&lt;/code&gt; below.</source>
          <target state="translated">Probablemente no desee invocar este comando directamente; est&amp;aacute; destinado a ser utilizado como ayudante de credenciales por otras partes de git. Consulte &lt;a href=&quot;gitcredentials&quot;&gt;gitcredentials [7]&lt;/a&gt; o &lt;code&gt;EXAMPLES&lt;/code&gt; continuaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="c924d93ebd8e89f99e14509235b47dec1acfaa5d" translate="yes" xml:space="preserve">
          <source>You read a &quot;tree&quot; file from the object database, and use that to populate (and overwrite&amp;mdash;​don&amp;rsquo;t do this if your index contains any unsaved state that you might want to restore later!) your current index. Normal operation is just</source>
          <target state="translated">Usted lee un archivo de &quot;&amp;aacute;rbol&quot; de la base de datos de objetos y lo usa para completar (y sobrescribir, &amp;iexcl;no haga esto si su &amp;iacute;ndice contiene alg&amp;uacute;n estado no guardado que podr&amp;iacute;a querer restaurar m&amp;aacute;s tarde!) Su &amp;iacute;ndice actual. El funcionamiento normal es solo</target>
        </trans-unit>
        <trans-unit id="e01bf60bb2a8e848b7516e87eb6405fb0e476f7b" translate="yes" xml:space="preserve">
          <source>You really filtered all refs: use &lt;code&gt;--tag-name-filter cat -- --all&lt;/code&gt; when calling git-filter-branch.</source>
          <target state="translated">Realmente filtr&amp;oacute; todas las referencias: use &lt;code&gt;--tag-name-filter cat -- --all&lt;/code&gt; cuando llame a git-filter-branch.</target>
        </trans-unit>
        <trans-unit id="0cb205f517a67a8e523ed9cfa8681dc8f8d7b0ce" translate="yes" xml:space="preserve">
          <source>You really removed all variants of a filename, if a blob was moved over its lifetime. &lt;code&gt;git log --name-only --follow --all -- filename&lt;/code&gt; can help you find renames.</source>
          <target state="translated">Realmente elimin&amp;oacute; todas las variantes de un nombre de archivo, si un blob se movi&amp;oacute; durante su vida &amp;uacute;til. &lt;code&gt;git log --name-only --follow --all -- filename&lt;/code&gt; puede ayudarlo a encontrar cambios de nombre.</target>
        </trans-unit>
        <trans-unit id="a347f016fee70b8901448b2a81ecd1980ba100a9" translate="yes" xml:space="preserve">
          <source>You see, Git is actually the best tool to find out about the source of Git itself!</source>
          <target state="translated">Verás,Git es en realidad la mejor herramienta para descubrir el origen de Git en sí mismo.</target>
        </trans-unit>
        <trans-unit id="2f7c7430f5ab3ddee895946cce58e0edcbc9b3f3" translate="yes" xml:space="preserve">
          <source>You should &lt;strong&gt;never&lt;/strong&gt; do any work of your own on the branches that are created by &lt;code&gt;git cvsimport&lt;/code&gt;. By default initial import will create and populate a &quot;master&quot; branch from the CVS repository&amp;rsquo;s main branch which you&amp;rsquo;re free to work with; after that, you need to &lt;code&gt;git merge&lt;/code&gt; incremental imports, or any CVS branches, yourself. It is advisable to specify a named remote via -r to separate and protect the incoming branches.</source>
          <target state="translated">Usted debe &lt;strong&gt;no&lt;/strong&gt; hacer ning&amp;uacute;n trabajo de su propia en las ramas que son creados por &lt;code&gt;git cvsimport&lt;/code&gt; . Por defecto, la importaci&amp;oacute;n inicial crear&amp;aacute; y poblar&amp;aacute; una rama &quot;maestra&quot; desde la rama principal del repositorio CVS con la que puede trabajar libremente; despu&amp;eacute;s de eso, necesita &lt;code&gt;git merge&lt;/code&gt; importaciones incrementales, o cualquier rama de CVS, usted mismo. Es recomendable especificar una v&amp;iacute;a remota con nombre -r para separar y proteger las ramas entrantes.</target>
        </trans-unit>
        <trans-unit id="ac5b50c688e69b32b2a523ca6520323d9259e65e" translate="yes" xml:space="preserve">
          <source>You should consider using &lt;code&gt;dcommit&lt;/code&gt; instead of this command. Commit specified commit or tree objects to SVN. This relies on your imported fetch data being up to date. This makes absolutely no attempts to do patching when committing to SVN, it simply overwrites files with those specified in the tree or commit. All merging is assumed to have taken place independently of &lt;code&gt;git svn&lt;/code&gt; functions.</source>
          <target state="translated">Deber&amp;iacute;a considerar usar &lt;code&gt;dcommit&lt;/code&gt; en lugar de este comando. Confirme los objetos de &amp;aacute;rbol o de confirmaci&amp;oacute;n especificados en SVN. Esto depende de que sus datos de recuperaci&amp;oacute;n importados est&amp;eacute;n actualizados. Esto no hace absolutamente ning&amp;uacute;n intento de parchear al comprometerse con SVN, simplemente sobrescribe los archivos con los especificados en el &amp;aacute;rbol o el compromiso. Se supone que todas las fusiones se han realizado independientemente de las funciones de &lt;code&gt;git svn&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f0db0149a7a61b2b34d3de583889773851c606fb" translate="yes" xml:space="preserve">
          <source>You should now compile the checked-out version and test it. If that version works correctly, type</source>
          <target state="translated">Ahora deberías compilar la versión revisada y probarla.Si esa versión funciona correctamente,escriba</target>
        </trans-unit>
        <trans-unit id="4ce522d2b57e2c5b1484c387e3121e7cf3c762ef" translate="yes" xml:space="preserve">
          <source>You should refrain from abusing this option to sneak substantial changes into a merge commit. Small fixups like bumping release/version name would be acceptable.</source>
          <target state="translated">Debe abstenerse de abusar de esta opción para introducir a hurtadillas cambios sustanciales en un compromiso de fusión.Pequeños arreglos como el nombre de la versión de lanzamiento de bumping serían aceptables.</target>
        </trans-unit>
        <trans-unit id="de1993c72b3b1ad3dd18c76738408f9f041af6eb" translate="yes" xml:space="preserve">
          <source>You should understand the implications of rewriting history if you amend a commit that has already been published. (See the &quot;RECOVERING FROM UPSTREAM REBASE&quot; section in &lt;a href=&quot;git-rebase&quot;&gt;git-rebase[1]&lt;/a&gt;.)</source>
          <target state="translated">Debe comprender las implicaciones de reescribir el historial si modifica una confirmaci&amp;oacute;n que ya se ha publicado. (Consulte la secci&amp;oacute;n &quot;RECUPERARSE DE UN REBASE ARRIBA&quot; en &lt;a href=&quot;git-rebase&quot;&gt;git-rebase [1]&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="a5048e0c5c1221139fe969fc6db15713d2b83eb5" translate="yes" xml:space="preserve">
          <source>You should understand the implications of using &lt;code&gt;git rebase&lt;/code&gt; on a repository that you share. See also RECOVERING FROM UPSTREAM REBASE below.</source>
          <target state="translated">Debes comprender las implicaciones de usar &lt;code&gt;git rebase&lt;/code&gt; en un repositorio que compartes. Vea tambi&amp;eacute;n RECUPERACI&amp;Oacute;N DEL RECUPERACI&amp;Oacute;N DE ARRIBA A continuaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="7550fee71eb33261ce4427a0e3743a34c95d7107" translate="yes" xml:space="preserve">
          <source>You should work through &lt;a href=&quot;gittutorial&quot;&gt;gittutorial[7]&lt;/a&gt; before reading this tutorial.</source>
          <target state="translated">Deber&amp;iacute;a trabajar con &lt;a href=&quot;gittutorial&quot;&gt;gittutorial [7]&lt;/a&gt; antes de leer este tutorial.</target>
        </trans-unit>
        <trans-unit id="33b464d633d5d3d359d8c081bd1ef24a08ba23d1" translate="yes" xml:space="preserve">
          <source>You then transfer the bundle to the other machine to replace /home/me/tmp/file.bundle, and pull from it.</source>
          <target state="translated">Luego transfiere el paquete a la otra máquina para reemplazar el paquete /home/me/tmp/file.bundle,y tira de él.</target>
        </trans-unit>
        <trans-unit id="98122f0a874f3f8b610fdbc33b228a3b5afee64a" translate="yes" xml:space="preserve">
          <source>You update your working directory from the index by &quot;checking out&quot; files. This is not a very common operation, since normally you&amp;rsquo;d just keep your files updated, and rather than write to your working directory, you&amp;rsquo;d tell the index files about the changes in your working directory (i.e. &lt;code&gt;git update-index&lt;/code&gt;).</source>
          <target state="translated">Actualiza su directorio de trabajo desde el &amp;iacute;ndice &quot;desprotegiendo&quot; los archivos. Esta no es una operaci&amp;oacute;n muy com&amp;uacute;n, ya que normalmente solo mantendr&amp;iacute;a sus archivos actualizados, y en lugar de escribir en su directorio de trabajo, le dir&amp;iacute;a a los archivos de &amp;iacute;ndice sobre los cambios en su directorio de trabajo (es decir, &lt;code&gt;git update-index&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="57134770b9c7f61c90927970f67f3d2eceaa4a12" translate="yes" xml:space="preserve">
          <source>You will continue to do your day-to-day work in your personal repository, but periodically &quot;push&quot; changes from your personal repository into your public repository, allowing other developers to pull from that repository. So the flow of changes, in a situation where there is one other developer with a public repository, looks like this:</source>
          <target state="translated">Seguirá haciendo su trabajo diario en su repositorio personal,pero periódicamente &quot;empujará&quot; los cambios de su repositorio personal a su repositorio público,permitiendo a otros desarrolladores tirar de ese repositorio.Así que el flujo de cambios,en una situación en la que hay otro desarrollador con un repositorio público,se ve así:</target>
        </trans-unit>
        <trans-unit id="8876e4496883cded62698bb08d4c1d5f289e1dee" translate="yes" xml:space="preserve">
          <source>You will see both of these things throughout the code.</source>
          <target state="translated">Verás ambas cosas a lo largo del código.</target>
        </trans-unit>
        <trans-unit id="4dda56fbfc3230573e73ab526d0f70db698497a1" translate="yes" xml:space="preserve">
          <source>You will see informational messages on dangling objects. They are objects that still exist in the repository but are no longer referenced by any of your branches, and can (and will) be removed after a while with &lt;code&gt;gc&lt;/code&gt;. You can run &lt;code&gt;git fsck --no-dangling&lt;/code&gt; to suppress these messages, and still view real errors.</source>
          <target state="translated">Ver&amp;aacute; mensajes informativos sobre objetos colgantes. Son objetos que todav&amp;iacute;a existen en el repositorio pero que ya no son referenciados por ninguna de tus ramas y pueden (y ser&amp;aacute;n) eliminados despu&amp;eacute;s de un tiempo con &lt;code&gt;gc&lt;/code&gt; . Puede ejecutar &lt;code&gt;git fsck --no-dangling&lt;/code&gt; para suprimir estos mensajes y seguir viendo errores reales.</target>
        </trans-unit>
        <trans-unit id="f2fc4e070409aa778dc2444037511e0ef4801d3d" translate="yes" xml:space="preserve">
          <source>You will see two files, &lt;code&gt;pack-*.pack&lt;/code&gt; and &lt;code&gt;pack-*.idx&lt;/code&gt;, in &lt;code&gt;.git/objects/pack&lt;/code&gt; directory. They are closely related to each other, and if you ever copy them by hand to a different repository for whatever reason, you should make sure you copy them together. The former holds all the data from the objects in the pack, and the latter holds the index for random access.</source>
          <target state="translated">Ver&amp;aacute; dos archivos, &lt;code&gt;pack-*.pack&lt;/code&gt; y &lt;code&gt;pack-*.idx&lt;/code&gt; , en el &lt;code&gt;.git/objects/pack&lt;/code&gt; . Est&amp;aacute;n estrechamente relacionados entre s&amp;iacute;, y si alguna vez los copia a mano en un repositorio diferente por cualquier motivo, debe asegurarse de copiarlos juntos. El primero contiene todos los datos de los objetos en el paquete y el segundo contiene el &amp;iacute;ndice de acceso aleatorio.</target>
        </trans-unit>
        <trans-unit id="266addba668945d927bfdfb63b85369114140000" translate="yes" xml:space="preserve">
          <source>You will still have to tell people by other means, such as mail. (Git provides the &lt;a href=&quot;git-request-pull&quot;&gt;git-request-pull[1]&lt;/a&gt; to send preformatted pull requests to upstream maintainers to simplify this task.)</source>
          <target state="translated">A&amp;uacute;n tendr&amp;aacute; que dec&amp;iacute;rselo a la gente por otros medios, como el correo. (Git proporciona &lt;a href=&quot;git-request-pull&quot;&gt;git-request-pull [1]&lt;/a&gt; para enviar solicitudes de extracci&amp;oacute;n preformateadas a los mantenedores ascendentes para simplificar esta tarea).</target>
        </trans-unit>
        <trans-unit id="67a2c97a3fe15102ccbc39363d071f9caa744775" translate="yes" xml:space="preserve">
          <source>You would normally use &lt;code&gt;git merge-index&lt;/code&gt; with supplied &lt;code&gt;git merge-one-file&lt;/code&gt; to do this last step. The script updates the files in the working tree as it merges each path and at the end of a successful merge.</source>
          <target state="translated">Normalmente, usar&amp;iacute;a &lt;code&gt;git merge-index&lt;/code&gt; con &lt;code&gt;git merge-one-file&lt;/code&gt; suministrado para hacer este &amp;uacute;ltimo paso. El script actualiza los archivos en el &amp;aacute;rbol de trabajo a medida que combina cada ruta y al final de una combinaci&amp;oacute;n exitosa.</target>
        </trans-unit>
        <trans-unit id="acf5d70c570af359d1fc1b3db4b2e1cb44907ec4" translate="yes" xml:space="preserve">
          <source>You wouldn&amp;rsquo;t need to ever change it in gitweb config file.</source>
          <target state="translated">No necesitar&amp;iacute;a cambiarlo nunca en el archivo de configuraci&amp;oacute;n de gitweb.</target>
        </trans-unit>
        <trans-unit id="065eff42d50778a1002dd0b7a890143f4063288e" translate="yes" xml:space="preserve">
          <source>You write your current index file to a &quot;tree&quot; object with the program</source>
          <target state="translated">Escribes tu archivo índice actual a un objeto &quot;árbol&quot; con el programa</target>
        </trans-unit>
        <trans-unit id="49012e7b5c219e4c44033d7ce0ec88b78d68a780" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;ve now initialized the working directory&amp;mdash;​you may notice a new directory created, named &quot;.git&quot;.</source>
          <target state="translated">Ahora ha inicializado el directorio de trabajo; es posible que observe que se ha creado un nuevo directorio, llamado &quot;.git&quot;.</target>
        </trans-unit>
        <trans-unit id="8e4b96aa3f69a0a980be2d48bd9eb2298bc44f3c" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;ve now made your first real Git commit. And if you&amp;rsquo;re interested in looking at what &lt;code&gt;git commit&lt;/code&gt; really does, feel free to investigate: it&amp;rsquo;s a few very simple shell scripts to generate the helpful (?) commit message headers, and a few one-liners that actually do the commit itself (&lt;code&gt;git commit&lt;/code&gt;).</source>
          <target state="translated">Ahora ha realizado su primer compromiso real de Git. Y si est&amp;aacute; interesado en ver lo &lt;code&gt;git commit&lt;/code&gt; realmente hace git commit , si&amp;eacute;ntase libre de investigar: son algunos scripts de shell muy simples para generar los &amp;uacute;tiles (?) Encabezados de mensajes de confirmaci&amp;oacute;n, y algunas frases ingeniosas que realmente hacen la confirmaci&amp;oacute;n. ( &lt;code&gt;git commit&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="6fd65e242e5023949f1979a313cb8892375303bf" translate="yes" xml:space="preserve">
          <source>Your &quot;public repository&quot; is now ready to accept your changes. Come back to the machine you have your private repository. From there, run this command:</source>
          <target state="translated">Su &quot;depósito público&quot; está listo para aceptar sus cambios.Vuelve a la máquina donde tienes tu repositorio privado.Desde allí,ejecuta este comando:</target>
        </trans-unit>
        <trans-unit id="77f5c1536424041eff5dddce9b9dc699480c5921" translate="yes" xml:space="preserve">
          <source>Your private repository&amp;rsquo;s Git directory is usually &lt;code&gt;.git&lt;/code&gt;, but your public repository is often named after the project name, i.e. &lt;code&gt;&amp;lt;project&amp;gt;.git&lt;/code&gt;. Let&amp;rsquo;s create such a public repository for project &lt;code&gt;my-git&lt;/code&gt;. After logging into the remote machine, create an empty directory:</source>
          <target state="translated">El directorio Git de su repositorio privado suele ser &lt;code&gt;.git&lt;/code&gt; , pero su repositorio p&amp;uacute;blico a menudo recibe el nombre del nombre del proyecto, es decir, &lt;code&gt;&amp;lt;project&amp;gt;.git&lt;/code&gt; . Creemos un repositorio p&amp;uacute;blico para el proyecto &lt;code&gt;my-git&lt;/code&gt; . Despu&amp;eacute;s de iniciar sesi&amp;oacute;n en la m&amp;aacute;quina remota, cree un directorio vac&amp;iacute;o:</target>
        </trans-unit>
        <trans-unit id="b96e6decf426a8986abe42a514d0d538e2f36071" translate="yes" xml:space="preserve">
          <source>Your work tree is still based on your HEAD ($JC), but you have some edits since. Three-way merge makes sure that you have not added or modified index entries since $JC, and if you haven&amp;rsquo;t, then does the right thing. So with the following sequence:</source>
          <target state="translated">Su &amp;aacute;rbol de trabajo todav&amp;iacute;a se basa en su HEAD ($ JC), pero tiene algunas ediciones desde entonces. La combinaci&amp;oacute;n de tres v&amp;iacute;as asegura que no haya agregado ni modificado entradas de &amp;iacute;ndice desde $ JC, y si no lo ha hecho, entonces hace lo correcto. Entonces con la siguiente secuencia:</target>
        </trans-unit>
        <trans-unit id="8ff2148494456dea5c056275d6718302d7ecd982" translate="yes" xml:space="preserve">
          <source>Zero or more &lt;code&gt;filemodify&lt;/code&gt;, &lt;code&gt;filedelete&lt;/code&gt;, &lt;code&gt;filecopy&lt;/code&gt;, &lt;code&gt;filerename&lt;/code&gt;, &lt;code&gt;filedeleteall&lt;/code&gt; and &lt;code&gt;notemodify&lt;/code&gt; commands may be included to update the contents of the branch prior to creating the commit. These commands may be supplied in any order. However it is recommended that a &lt;code&gt;filedeleteall&lt;/code&gt; command precede all &lt;code&gt;filemodify&lt;/code&gt;, &lt;code&gt;filecopy&lt;/code&gt;, &lt;code&gt;filerename&lt;/code&gt; and &lt;code&gt;notemodify&lt;/code&gt; commands in the same commit, as &lt;code&gt;filedeleteall&lt;/code&gt; wipes the branch clean (see below).</source>
          <target state="translated">Se pueden incluir cero o m&amp;aacute;s &lt;code&gt;filemodify&lt;/code&gt; , &lt;code&gt;filedelete&lt;/code&gt; , &lt;code&gt;filecopy&lt;/code&gt; , &lt;code&gt;filerename&lt;/code&gt; , &lt;code&gt;filedeleteall&lt;/code&gt; y &lt;code&gt;notemodify&lt;/code&gt; para actualizar el contenido de la rama antes de crear la confirmaci&amp;oacute;n. Estos comandos se pueden suministrar en cualquier orden. Sin embargo, se recomienda que un comando &lt;code&gt;filedeleteall&lt;/code&gt; preceda a todos los &lt;code&gt;filemodify&lt;/code&gt; , &lt;code&gt;filecopy&lt;/code&gt; , &lt;code&gt;filerename&lt;/code&gt; y &lt;code&gt;notemodify&lt;/code&gt; en la misma confirmaci&amp;oacute;n, ya que &lt;code&gt;filedeleteall&lt;/code&gt; limpia la rama (ver m&amp;aacute;s abajo).</target>
        </trans-unit>
        <trans-unit id="480b45cead8c71eaa647209c97491be4a36ea289" translate="yes" xml:space="preserve">
          <source>Zero or more protocol options may be entered after the last &lt;code&gt;push&lt;/code&gt; command, before the batch&amp;rsquo;s terminating blank line.</source>
          <target state="translated">Se pueden ingresar cero o m&amp;aacute;s opciones de protocolo despu&amp;eacute;s del &amp;uacute;ltimo comando &lt;code&gt;push&lt;/code&gt; , antes de la l&amp;iacute;nea en blanco de terminaci&amp;oacute;n del lote.</target>
        </trans-unit>
        <trans-unit id="fbdec3db39874b3b5b75476184662777ddc44fd6" translate="yes" xml:space="preserve">
          <source>[&amp;lt;git-rev-list-args&amp;gt;&amp;hellip;​]</source>
          <target state="translated">[&amp;lt;git-rev-list-args&amp;gt;&amp;hellip;​]</target>
        </trans-unit>
        <trans-unit id="b3a075bbccfeeb4bedba2aca4addb159d1acee3d" translate="yes" xml:space="preserve">
          <source>[&amp;lt;path&amp;gt;&amp;hellip;​]</source>
          <target state="translated">[&amp;lt;path&amp;gt;&amp;hellip;​]</target>
        </trans-unit>
        <trans-unit id="d31c8b5c3af548ff2d95f4e227ea28f0f9277441" translate="yes" xml:space="preserve">
          <source>[&amp;lt;refname&amp;gt;&amp;hellip;​]</source>
          <target state="translated">[&amp;lt;refname&amp;gt;&amp;hellip;​]</target>
        </trans-unit>
        <trans-unit id="e961d55ee5b355694495464c07c86f7fba23e9a9" translate="yes" xml:space="preserve">
          <source>[--] &amp;lt;path&amp;gt;&amp;hellip;​</source>
          <target state="translated">[-] &amp;lt;ruta&amp;gt;&amp;hellip;</target>
        </trans-unit>
        <trans-unit id="1eb3d578c1f910d18345d8eb23a781efa2f8d23d" translate="yes" xml:space="preserve">
          <source>[0] &lt;a href=&quot;https://bugs.chromium.org/p/git/issues/detail?id=6&quot;&gt;https://bugs.chromium.org/p/git/issues/detail?id=6&lt;/a&gt; Chromium work item for: Multi-Pack Index (MIDX)</source>
          <target state="translated">[0] &lt;a href=&quot;https://bugs.chromium.org/p/git/issues/detail?id=6&quot;&gt;https://bugs.chromium.org/p/git/issues/detail?id=6&lt;/a&gt; Elemento de trabajo de Chromium para: &amp;Iacute;ndice de paquetes m&amp;uacute;ltiples (MIDX)</target>
        </trans-unit>
        <trans-unit id="25a96ba2d3b7a7d8ee2c18075362c090194ac1d0" translate="yes" xml:space="preserve">
          <source>[1] &lt;a href=&quot;https://lore.kernel.org/git/20180107181459.222909-1-dstolee@microsoft.com/&quot;&gt;https://lore.kernel.org/git/20180107181459.222909-1-dstolee@microsoft.com/&lt;/a&gt; An earlier RFC for the multi-pack-index feature</source>
          <target state="translated">[1] &lt;a href=&quot;https://lore.kernel.org/git/20180107181459.222909-1-dstolee@microsoft.com/&quot;&gt;https://lore.kernel.org/git/20180107181459.222909-1-dstolee@microsoft.com/&lt;/a&gt; Un RFC anterior para la funci&amp;oacute;n de &amp;iacute;ndice de paquetes m&amp;uacute;ltiples</target>
        </trans-unit>
        <trans-unit id="347fffb72e72a788a9461ff2e246ae61494e14d7" translate="yes" xml:space="preserve">
          <source>[2] &lt;a href=&quot;https://lore.kernel.org/git/alpine.DEB.2.20.1803091557510.23109@alexmv-linux/&quot;&gt;https://lore.kernel.org/git/alpine.DEB.2.20.1803091557510.23109@alexmv-linux/&lt;/a&gt; Git Merge 2018 Contributor&amp;rsquo;s summit notes (includes discussion of MIDX)</source>
          <target state="translated">[2] &lt;a href=&quot;https://lore.kernel.org/git/alpine.DEB.2.20.1803091557510.23109@alexmv-linux/&quot;&gt;https://lore.kernel.org/git/alpine.DEB.2.20.1803091557510.23109@alexmv-linux/&lt;/a&gt; Notas de la cumbre de colaboradores de Git Merge 2018 (incluye discusi&amp;oacute;n sobre MIDX)</target>
        </trans-unit>
        <trans-unit id="feea73f842c5a1ec74b307b98128568bae22544a" translate="yes" xml:space="preserve">
          <source>[DEPRECATED: use &lt;code&gt;--rebase-merges&lt;/code&gt; instead] Recreate merge commits instead of flattening the history by replaying commits a merge commit introduces. Merge conflict resolutions or manual amendments to merge commits are not preserved.</source>
          <target state="translated">[DEPRECADO: use &lt;code&gt;--rebase-merges&lt;/code&gt; en su lugar] Recrea las confirmaciones de fusi&amp;oacute;n en lugar de aplanar el historial reproduciendo confirmaciones que introduce una confirmaci&amp;oacute;n de fusi&amp;oacute;n. Fusionar las resoluciones de conflictos o las enmiendas manuales para fusionar confirmaciones no se conservan.</target>
        </trans-unit>
        <trans-unit id="a59f280e0e654176579fad979c6b2390d4560b5d" translate="yes" xml:space="preserve">
          <source>[EXPERIMENTAL] Set to &lt;code&gt;true&lt;/code&gt; to use the experimental built-in implementation of the interactive version of &lt;a href=&quot;git-add&quot;&gt;git-add[1]&lt;/a&gt; instead of the Perl script version. Is &lt;code&gt;false&lt;/code&gt; by default.</source>
          <target state="translated">[EXPERIMENTAL] Establezca en &lt;code&gt;true&lt;/code&gt; para usar la implementaci&amp;oacute;n experimental incorporada de la versi&amp;oacute;n interactiva de &lt;a href=&quot;git-add&quot;&gt;git-add [1] en&lt;/a&gt; lugar de la versi&amp;oacute;n del script Perl. Es &lt;code&gt;false&lt;/code&gt; por defecto.</target>
        </trans-unit>
        <trans-unit id="f8205d704abeeab8758bae84f0f9eac80a6c4899" translate="yes" xml:space="preserve">
          <source>[NOTE] &lt;code&gt;git rerere&lt;/code&gt; relies on the conflict markers in the file to detect the conflict. If the file already contains lines that look the same as lines with conflict markers, &lt;code&gt;git rerere&lt;/code&gt; may fail to record a conflict resolution. To work around this, the &lt;code&gt;conflict-marker-size&lt;/code&gt; setting in &lt;a href=&quot;gitattributes&quot;&gt;gitattributes[5]&lt;/a&gt; can be used.</source>
          <target state="translated">[NOTA] &lt;code&gt;git rerere&lt;/code&gt; se basa en los marcadores de conflicto en el archivo para detectar el conflicto. Si el archivo ya contiene l&amp;iacute;neas que tienen el mismo aspecto que l&amp;iacute;neas con marcadores de conflicto, &lt;code&gt;git rerere&lt;/code&gt; posible que git rerere no registre una resoluci&amp;oacute;n de conflicto. Para &lt;a href=&quot;gitattributes&quot;&gt;solucionar este problema,&lt;/a&gt; se puede utilizar la configuraci&amp;oacute;n de &lt;code&gt;conflict-marker-size&lt;/code&gt; en gitattributes [5] .</target>
        </trans-unit>
        <trans-unit id="ac4bc8630c3c03bfd813e3fe5057d1c466974ce5" translate="yes" xml:space="preserve">
          <source>[[[1]]] &lt;a href=&quot;https://www.nist.gov/sites/default/files/documents/director/planning/report02-3.pdf&quot;&gt;&lt;em&gt;The Economic Impacts of Inadequate Infratructure for Software Testing&lt;/em&gt;. Nist Planning Report 02-3&lt;/a&gt;, see Executive Summary and Chapter 8.</source>
          <target state="translated">[[[1]]] &lt;a href=&quot;https://www.nist.gov/sites/default/files/documents/director/planning/report02-3.pdf&quot;&gt;&lt;em&gt;Los impactos econ&amp;oacute;micos de una infraestructura inadecuada para las pruebas de software&lt;/em&gt; . Informe de planificaci&amp;oacute;n de Nist 02-3&lt;/a&gt; , consulte el Resumen ejecutivo y el Cap&amp;iacute;tulo 8.</target>
        </trans-unit>
        <trans-unit id="e5f919a0494a6ccb56ff39496ebf8651f04232d2" translate="yes" xml:space="preserve">
          <source>[[[2]]] &lt;a href=&quot;http://www.oracle.com/technetwork/java/codeconvtoc-136057.html&quot;&gt;&lt;em&gt;Code Conventions for the Java Programming Language&lt;/em&gt;. Sun Microsystems.&lt;/a&gt;</source>
          <target state="translated">[[[2]]] &lt;a href=&quot;http://www.oracle.com/technetwork/java/codeconvtoc-136057.html&quot;&gt;&lt;em&gt;Convenciones de c&amp;oacute;digo para el lenguaje de programaci&amp;oacute;n Java&lt;/em&gt; . Sun Microsystems.&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="de6da26d7d92c3d4bdee11d004d96506e88a1b00" translate="yes" xml:space="preserve">
          <source>[[[3]]] &lt;a href=&quot;https://en.wikipedia.org/wiki/Software_maintenance&quot;&gt;&lt;em&gt;Software maintenance&lt;/em&gt;. Wikipedia.&lt;/a&gt;</source>
          <target state="translated">[[[3]]] &lt;a href=&quot;https://en.wikipedia.org/wiki/Software_maintenance&quot;&gt;&lt;em&gt;Mantenimiento de software&lt;/em&gt; . Wikipedia.&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a21dac2771422b1ce396ac7103119df3289ef40d" translate="yes" xml:space="preserve">
          <source>[[[4]]] &lt;a href=&quot;https://lore.kernel.org/git/7vps5xsbwp.fsf_-_@assigned-by-dhcp.cox.net/&quot;&gt;Junio C Hamano. &lt;em&gt;Automated bisect success story&lt;/em&gt;.&lt;/a&gt;</source>
          <target state="translated">[[[4]]] &lt;a href=&quot;https://lore.kernel.org/git/7vps5xsbwp.fsf_-_@assigned-by-dhcp.cox.net/&quot;&gt;Junio ​​C Hamano. &lt;em&gt;Historia de &amp;eacute;xito de bisecta automatizada&lt;/em&gt; .&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="06e39006ce98590e4632510795aafbc71a8d5177" translate="yes" xml:space="preserve">
          <source>[[[5]]] &lt;a href=&quot;https://lwn.net/Articles/317154/&quot;&gt;Christian Couder. &lt;em&gt;Fully automated bisecting with &quot;git bisect run&quot;&lt;/em&gt;. LWN.net.&lt;/a&gt;</source>
          <target state="translated">[[[5]]] &lt;a href=&quot;https://lwn.net/Articles/317154/&quot;&gt;Christian Couder. &lt;em&gt;Bisecci&amp;oacute;n completamente autom&amp;aacute;tica con &quot;git bisect run&quot;&lt;/em&gt; . LWN.net.&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a12b60ab9e79fee2e4613d666532029fdb7e1f4d" translate="yes" xml:space="preserve">
          <source>[[[6]]] &lt;a href=&quot;https://lwn.net/Articles/277872/&quot;&gt;Jonathan Corbet. &lt;em&gt;Bisection divides users and developers&lt;/em&gt;. LWN.net.&lt;/a&gt;</source>
          <target state="translated">[[[6]]] &lt;a href=&quot;https://lwn.net/Articles/277872/&quot;&gt;Jonathan Corbet. &lt;em&gt;La bisecci&amp;oacute;n divide a usuarios y desarrolladores&lt;/em&gt; . LWN.net.&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fb3a1d698c871451809a03759d2052ad730db3fa" translate="yes" xml:space="preserve">
          <source>[[[7]]] &lt;a href=&quot;https://lore.kernel.org/lkml/20071207113734.GA14598@elte.hu/&quot;&gt;Ingo Molnar. &lt;em&gt;Re: BUG 2.6.23-rc3 can&amp;rsquo;t see sd partitions on Alpha&lt;/em&gt;. Linux-kernel mailing list.&lt;/a&gt;</source>
          <target state="translated">[[[7]]] &lt;a href=&quot;https://lore.kernel.org/lkml/20071207113734.GA14598@elte.hu/&quot;&gt;Ingo Molnar. &lt;em&gt;Re: ERROR 2.6.23-rc3 no puede ver las particiones sd en Alpha&lt;/em&gt; . Lista de correo del kernel de Linux.&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="91adb50bf54c20a1b51a7a5bd4f97f72154e309d" translate="yes" xml:space="preserve">
          <source>[[[8]]] &lt;a href=&quot;https://www.kernel.org/pub/software/scm/git/docs/git-bisect.html&quot;&gt;Junio C Hamano and the git-list. &lt;em&gt;git-bisect(1) Manual Page&lt;/em&gt;. Linux Kernel Archives.&lt;/a&gt;</source>
          <target state="translated">[[[8]]] &lt;a href=&quot;https://www.kernel.org/pub/software/scm/git/docs/git-bisect.html&quot;&gt;Junio ​​C Hamano y la lista de git. &lt;em&gt;git-bisect (1) P&amp;aacute;gina del manual&lt;/em&gt; . Archivos del kernel de Linux.&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="62e3bcbb19b635de003c473322577e0da443bd26" translate="yes" xml:space="preserve">
          <source>[[[9]]] &lt;a href=&quot;https://github.com/Ealdwulf/bbchop&quot;&gt;Ealdwulf. &lt;em&gt;bbchop&lt;/em&gt;. GitHub.&lt;/a&gt;</source>
          <target state="translated">[[[9]]] &lt;a href=&quot;https://github.com/Ealdwulf/bbchop&quot;&gt;Ealdwulf. &lt;em&gt;bbchop&lt;/em&gt; . GitHub.&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4720dfbb1b4c30f403e79c3ea73865f0f4c5faef" translate="yes" xml:space="preserve">
          <source>[user@]host.xz:/~[user]/path/to/repo.git/</source>
          <target state="translated">[user@]host.xz:/~[user]/path/to/repo.git/</target>
        </trans-unit>
        <trans-unit id="5995beae7c11faa4cc7064555dea6942a8fa3779" translate="yes" xml:space="preserve">
          <source>[user@]host.xz:path/to/repo.git/</source>
          <target state="translated">[user@]host.xz:path/to/repo.git/</target>
        </trans-unit>
        <trans-unit id="8bc9eff643c5f26b1d25ab8fdf5a5ddc87d11ead" translate="yes" xml:space="preserve">
          <source>\0 line termination on output and do not quote filenames. See OUTPUT FORMAT below for more information.</source>
          <target state="translated">\ 0 terminaci&amp;oacute;n de l&amp;iacute;nea en la salida y no cite nombres de archivo. Consulte FORMATO DE SALIDA a continuaci&amp;oacute;n para obtener m&amp;aacute;s informaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="d0b23d6e6728ae49ec5909ad48b79671e7245999" translate="yes" xml:space="preserve">
          <source>\0 line termination on output and do not quote filenames. See OUTPUT below for more information.</source>
          <target state="translated">\ 0 terminaci&amp;oacute;n de l&amp;iacute;nea en la salida y no cite los nombres de archivo. Consulte SALIDA a continuaci&amp;oacute;n para obtener m&amp;aacute;s informaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="ec441d8e621550cb4deb96e2b1ad67311ed0768f" translate="yes" xml:space="preserve">
          <source>a &lt;code&gt;&amp;lt;project&amp;gt;.git&lt;/code&gt; directory that is a &lt;code&gt;bare&lt;/code&gt; repository (i.e. without its own working tree), that is typically used for exchanging histories with others by pushing into it and fetching from it.</source>
          <target state="translated">un &lt;code&gt;&amp;lt;project&amp;gt;.git&lt;/code&gt; directorio que es un &lt;code&gt;bare&lt;/code&gt; repositorio (es decir, sin su propio &amp;aacute;rbol de trabajo), que se utiliza normalmente para intercambiar historias con los dem&amp;aacute;s empujando en &amp;eacute;l y ir a buscar de ella.</target>
        </trans-unit>
        <trans-unit id="ea844fb65222d001b2e2f561d577c3d6a932db4a" translate="yes" xml:space="preserve">
          <source>a &lt;code&gt;.git&lt;/code&gt; directory at the root of the working tree;</source>
          <target state="translated">un directorio &lt;code&gt;.git&lt;/code&gt; en la ra&amp;iacute;z del &amp;aacute;rbol de trabajo;</target>
        </trans-unit>
        <trans-unit id="f0d4bf33608fee8383e25a39f62fec37be3db742" translate="yes" xml:space="preserve">
          <source>a &lt;code&gt;lot&lt;/code&gt;.</source>
          <target state="translated">un &lt;code&gt;lot&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cc234069c4e3ee03ef8f7670cb491ed5411b65b6" translate="yes" xml:space="preserve">
          <source>a NUL (only exists if renamed/copied);</source>
          <target state="translated">una NUL (sólo existe si se renombra/copia);</target>
        </trans-unit>
        <trans-unit id="079f5a842faae1ecf0933e998354e66093295bb8" translate="yes" xml:space="preserve">
          <source>a NUL.</source>
          <target state="translated">una NUL.</target>
        </trans-unit>
        <trans-unit id="e9278592288a5c5c028d9d1d04c2201af670c4f7" translate="yes" xml:space="preserve">
          <source>a URL like &quot;git://example.org/path/to/repo.git&quot; will be rewritten to &quot;ssh://example.org/path/to/repo.git&quot; for pushes, but pulls will still use the original URL.</source>
          <target state="translated">un URL como &quot;git://ejemplo.org/ruta/al/repo.git&quot; se reescribirá en &quot;ssh://ejemplo.org/ruta/al/repo.git&quot; para los empujes,pero los tirones seguirán usando el URL original.</target>
        </trans-unit>
        <trans-unit id="96a7d2b2a7356a40bc207f3d1e0038c9f743ef8f" translate="yes" xml:space="preserve">
          <source>a URL like &quot;work:repo.git&quot; or like &quot;host.xz:/path/to/repo.git&quot; will be rewritten in any context that takes a URL to be &quot;git://git.host.xz/repo.git&quot;.</source>
          <target state="translated">un URL como &quot;work:repo.git&quot; o como &quot;host.xz:/ruta/al/repo.git&quot; se reescribirá en cualquier contexto que tome un URL como &quot;git://git.host.xz/repo.git&quot;.</target>
        </trans-unit>
        <trans-unit id="da90a472a42edab28f6103dd507b377a59e39919" translate="yes" xml:space="preserve">
          <source>a colon.</source>
          <target state="translated">un colon.</target>
        </trans-unit>
        <trans-unit id="07112c294a121f7cc6ed6654ce50e53f206b098f" translate="yes" xml:space="preserve">
          <source>a comment describing this commit.</source>
          <target state="translated">un comentario describiendo este compromiso.</target>
        </trans-unit>
        <trans-unit id="6fd45c543fb44740f3ae2218676d1d2f809372d6" translate="yes" xml:space="preserve">
          <source>a committer: The name of the person who actually created the commit, with the date it was done. This may be different from the author, for example, if the author was someone who wrote a patch and emailed it to the person who used it to create the commit.</source>
          <target state="translated">...un comisionado:El nombre de la persona que realmente creó el compromiso,con la fecha en que se hizo.Esto puede ser diferente del autor,por ejemplo,si el autor fue alguien que escribió un parche y lo envió por correo electrónico a la persona que lo utilizó para crear la confirmación.</target>
        </trans-unit>
        <trans-unit id="475363380919fa9dad3daaa5151af4a7ecf7fe63" translate="yes" xml:space="preserve">
          <source>a file called &lt;code&gt;HEAD&lt;/code&gt;, that has &lt;code&gt;ref: refs/heads/master&lt;/code&gt; in it. This is similar to a symbolic link and points at &lt;code&gt;refs/heads/master&lt;/code&gt; relative to the &lt;code&gt;HEAD&lt;/code&gt; file.</source>
          <target state="translated">un archivo llamado &lt;code&gt;HEAD&lt;/code&gt; , que tiene &lt;code&gt;ref: refs/heads/master&lt;/code&gt; en &amp;eacute;l. Esto es similar a un enlace simb&amp;oacute;lico y apunta a &lt;code&gt;refs/heads/master&lt;/code&gt; en relaci&amp;oacute;n con el archivo &lt;code&gt;HEAD&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="956892125b0edbb5f2b693d0431acccf4dd5c1cd" translate="yes" xml:space="preserve">
          <source>a file in the &lt;code&gt;$GIT_DIR/branches&lt;/code&gt; directory.</source>
          <target state="translated">un archivo en el &lt;code&gt;$GIT_DIR/branches&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7a8f92bb4f6fe9e686ed78d483dc8804c1d0837c" translate="yes" xml:space="preserve">
          <source>a file in the &lt;code&gt;$GIT_DIR/remotes&lt;/code&gt; directory, or</source>
          <target state="translated">un archivo en el &lt;code&gt;$GIT_DIR/remotes&lt;/code&gt; , o</target>
        </trans-unit>
        <trans-unit id="6fb331171394d95fbb7a35c4b995f2a83f23618c" translate="yes" xml:space="preserve">
          <source>a file that has &lt;code&gt;any&lt;/code&gt; difference what-so-ever in the three trees will stay as separate entries in the index. It&amp;rsquo;s up to &quot;porcelain policy&quot; to determine how to remove the non-0 stages, and insert a merged version.</source>
          <target state="translated">un archivo que tenga &lt;code&gt;any&lt;/code&gt; diferencia en los tres &amp;aacute;rboles permanecer&amp;aacute; como entradas separadas en el &amp;iacute;ndice. Depende de la &quot;pol&amp;iacute;tica de porcelana&quot; determinar c&amp;oacute;mo eliminar las etapas distintas de 0 e insertar una versi&amp;oacute;n combinada.</target>
        </trans-unit>
        <trans-unit id="fcb1d336b0be584d8054e8f7d63b3480aea0ee1d" translate="yes" xml:space="preserve">
          <source>a function called &lt;code&gt;cmd_&amp;lt;bla&amp;gt;&lt;/code&gt;, typically defined in &lt;code&gt;builtin/&amp;lt;bla.c&amp;gt;&lt;/code&gt; (note that older versions of Git used to have it in &lt;code&gt;builtin-&amp;lt;bla&amp;gt;.c&lt;/code&gt; instead), and declared in &lt;code&gt;builtin.h&lt;/code&gt;.</source>
          <target state="translated">una funci&amp;oacute;n llamada &lt;code&gt;cmd_&amp;lt;bla&amp;gt;&lt;/code&gt; , normalmente definida en &lt;code&gt;builtin/&amp;lt;bla.c&amp;gt;&lt;/code&gt; (tenga en cuenta que las versiones anteriores de Git sol&amp;iacute;an tenerla en &lt;code&gt;builtin-&amp;lt;bla&amp;gt;.c&lt;/code&gt; en su lugar), y declarada en &lt;code&gt;builtin.h&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d20b77e1575c57d2803f17741070661ffe1f7923" translate="yes" xml:space="preserve">
          <source>a line that begins with &quot;Index: &quot;</source>
          <target state="translated">una línea que comienza con &quot;Índice&quot;:&quot;</target>
        </trans-unit>
        <trans-unit id="eac485dbe3dc8258452b85ab1fdc03917425590f" translate="yes" xml:space="preserve">
          <source>a line that begins with &quot;diff -&quot;, or</source>
          <target state="translated">una línea que comienza con &quot;diff -&quot;,o</target>
        </trans-unit>
        <trans-unit id="8cb077e79c6b205418cec26b6f4930fe1ae56b3b" translate="yes" xml:space="preserve">
          <source>a newline.</source>
          <target state="translated">una nueva línea.</target>
        </trans-unit>
        <trans-unit id="678e3fa85625ddb634df3223f890cd55081ea7cd" translate="yes" xml:space="preserve">
          <source>a raw &lt;code&gt;%&lt;/code&gt;</source>
          <target state="translated">un &lt;code&gt;%&lt;/code&gt; crudo</target>
        </trans-unit>
        <trans-unit id="a6a839de3aabe2c207992e1add851477714b9c5e" translate="yes" xml:space="preserve">
          <source>a remote in the Git configuration file: &lt;code&gt;$GIT_DIR/config&lt;/code&gt;,</source>
          <target state="translated">un control remoto en el archivo de configuraci&amp;oacute;n de Git: &lt;code&gt;$GIT_DIR/config&lt;/code&gt; ,</target>
        </trans-unit>
        <trans-unit id="f9af7071efb1bd7dd22ebf85f05d8810442b8586" translate="yes" xml:space="preserve">
          <source>a space between time and time zone</source>
          <target state="translated">un espacio entre el tiempo y la zona horaria</target>
        </trans-unit>
        <trans-unit id="65b604e2f985f7317d6866f6730d409a3832783e" translate="yes" xml:space="preserve">
          <source>a space instead of the &lt;code&gt;T&lt;/code&gt; date/time delimiter</source>
          <target state="translated">un espacio en lugar del delimitador de fecha / hora &lt;code&gt;T&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5bc00ebd3440c4f401b07128f1c136e115562dd8" translate="yes" xml:space="preserve">
          <source>a space.</source>
          <target state="translated">un espacio.</target>
        </trans-unit>
        <trans-unit id="97a7ee5f8a960df69981e9527fa176cfdf9705cf" translate="yes" xml:space="preserve">
          <source>a subdirectory called &lt;code&gt;objects&lt;/code&gt;, which will contain all the objects of your project. You should never have any real reason to look at the objects directly, but you might want to know that these objects are what contains all the real &lt;code&gt;data&lt;/code&gt; in your repository.</source>
          <target state="translated">un subdirectorio llamado &lt;code&gt;objects&lt;/code&gt; , que contendr&amp;aacute; todos los objetos de su proyecto. Nunca deber&amp;iacute;a tener una raz&amp;oacute;n real para mirar los objetos directamente, pero es posible que desee saber que estos objetos son los que contienen todos los &lt;code&gt;data&lt;/code&gt; reales en su repositorio.</target>
        </trans-unit>
        <trans-unit id="045a27e5aab449465c7a517674ebf98a06438921" translate="yes" xml:space="preserve">
          <source>a subdirectory called &lt;code&gt;refs&lt;/code&gt;, which contains references to objects.</source>
          <target state="translated">un subdirectorio llamado &lt;code&gt;refs&lt;/code&gt; , que contiene referencias a objetos.</target>
        </trans-unit>
        <trans-unit id="03097f133fc01ec710880af30fddc9a8cd7c34db" translate="yes" xml:space="preserve">
          <source>a tab or a NUL when &lt;code&gt;-z&lt;/code&gt; option is used.</source>
          <target state="translated">una pesta&amp;ntilde;a o un NUL cuando se utiliza la opci&amp;oacute;n &lt;code&gt;-z&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9346da07fb77dd97b82dc62a47eb3edc36d2b7a0" translate="yes" xml:space="preserve">
          <source>a tab or a NUL when &lt;code&gt;-z&lt;/code&gt; option is used; only exists for C or R.</source>
          <target state="translated">una pesta&amp;ntilde;a o un NUL cuando se usa la opci&amp;oacute;n &lt;code&gt;-z&lt;/code&gt; ; solo existe para C o R.</target>
        </trans-unit>
        <trans-unit id="c40734bc76bdc997f13a3bade66db88cc0dc137e" translate="yes" xml:space="preserve">
          <source>a tab;</source>
          <target state="translated">una ficha;</target>
        </trans-unit>
        <trans-unit id="19150edbe2f84d3c01f8f24ddf7de6b06a212def" translate="yes" xml:space="preserve">
          <source>a tree: The SHA-1 name of a tree object (as defined below), representing the contents of a directory at a certain point in time.</source>
          <target state="translated">un árbol:El nombre SHA-1 de un objeto árbol (como se define a continuación),que representa el contenido de un directorio en un momento determinado.</target>
        </trans-unit>
        <trans-unit id="013edfaa8480f23dc64a9a565714902a0f70e19a" translate="yes" xml:space="preserve">
          <source>a valid head &lt;code&gt;name&lt;/code&gt; (i.e. a &lt;code&gt;refs/heads/&amp;lt;head&amp;gt;&lt;/code&gt; reference).</source>
          <target state="translated">un &lt;code&gt;name&lt;/code&gt; encabezado v&amp;aacute;lido (es decir, una &lt;code&gt;refs/heads/&amp;lt;head&amp;gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="c3796b26d9f35f82d5c7ba0548ce633809586698" translate="yes" xml:space="preserve">
          <source>a valid tag &lt;code&gt;name&lt;/code&gt; (i.e. a &lt;code&gt;refs/tags/&amp;lt;tag&amp;gt;&lt;/code&gt; reference).</source>
          <target state="translated">un &lt;code&gt;name&lt;/code&gt; etiqueta v&amp;aacute;lido (es decir, una &lt;code&gt;refs/tags/&amp;lt;tag&amp;gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="fdbf716e8cd4fd3ff778984618bbe33ffeee814c" translate="yes" xml:space="preserve">
          <source>a) are ancestor of the &quot;bad&quot; commit (including the &quot;bad&quot; commit itself), b) are not ancestor of a &quot;good&quot; commit (excluding the &quot;good&quot; commits).</source>
          <target state="translated">a)son antepasados de la comisión &quot;mala&quot; (incluyendo la propia comisión &quot;mala&quot;),b)no son antepasados de la comisión &quot;buena&quot; (excluyendo las comisiones &quot;buenas&quot;).</target>
        </trans-unit>
        <trans-unit id="8682c02d1bc4bfce128a794497013605d86c32b6" translate="yes" xml:space="preserve">
          <source>a) regular use</source>
          <target state="translated">a)uso regular</target>
        </trans-unit>
        <trans-unit id="4ff2759bc14568ced83be0be38a4abafea668a32" translate="yes" xml:space="preserve">
          <source>abbreviated commit hash</source>
          <target state="translated">abreviado cometer hachís</target>
        </trans-unit>
        <trans-unit id="83baab4c4f5445b3450e34e24f8066fea1ac11f2" translate="yes" xml:space="preserve">
          <source>abbreviated parent hashes</source>
          <target state="translated">hashes padre abreviado</target>
        </trans-unit>
        <trans-unit id="33579b1cb5338205dc784843012a5c0a9e8cacae" translate="yes" xml:space="preserve">
          <source>abbreviated tree hash</source>
          <target state="translated">hachís de árbol abreviado</target>
        </trans-unit>
        <trans-unit id="832e60dfe198126ed45442b9d54f0a366515eefc" translate="yes" xml:space="preserve">
          <source>absorbgitdirs</source>
          <target state="translated">absorbgitdirs</target>
        </trans-unit>
        <trans-unit id="f412f21dd1d844e9ed4c1cbd73b06dc725c5d8bd" translate="yes" xml:space="preserve">
          <source>access method (one of &quot;ext&quot; or &quot;pserver&quot;)</source>
          <target state="translated">método de acceso (uno de &quot;ext&quot; o &quot;pserver&quot;)</target>
        </trans-unit>
        <trans-unit id="34eb4c4ef005207e8b8f916b9f1fffacccd6945e" translate="yes" xml:space="preserve">
          <source>action</source>
          <target state="translated">action</target>
        </trans-unit>
        <trans-unit id="326b426f9ac7a96ed6baf62f8838565416d27df8" translate="yes" xml:space="preserve">
          <source>actions</source>
          <target state="translated">actions</target>
        </trans-unit>
        <trans-unit id="58d1bbce297de3c304a9fefc3b483181872a5c6b" translate="yes" xml:space="preserve">
          <source>add</source>
          <target state="translated">add</target>
        </trans-unit>
        <trans-unit id="6d8bcdb6bdc1c6a236c5092142b208eb67008cee" translate="yes" xml:space="preserve">
          <source>add &amp;lt;path&amp;gt; [&amp;lt;commit-ish&amp;gt;]</source>
          <target state="translated">agregar &amp;lt;ruta&amp;gt; [&amp;lt;commit-ish&amp;gt;]</target>
        </trans-unit>
        <trans-unit id="89052c7d90a34c914815c621a3c8abaf890dfcb5" translate="yes" xml:space="preserve">
          <source>add [-b &amp;lt;branch&amp;gt;] [-f|--force] [--name &amp;lt;name&amp;gt;] [--reference &amp;lt;repository&amp;gt;] [--depth &amp;lt;depth&amp;gt;] [--] &amp;lt;repository&amp;gt; [&amp;lt;path&amp;gt;]</source>
          <target state="translated">agregar [-b &amp;lt;sucursal&amp;gt;] [-f | --force] [--nombre &amp;lt;nombre&amp;gt;] [--referencia &amp;lt;repositorio&amp;gt;] [--depth &amp;lt;depth&amp;gt;] [-] &amp;lt;repository&amp;gt; [&amp;lt;ruta &amp;gt;]</target>
        </trans-unit>
        <trans-unit id="96b545065b00a5b7501087e2c1e93926449febd5" translate="yes" xml:space="preserve">
          <source>add a missing &lt;code&gt;\n&lt;/code&gt; to the last line if necessary.</source>
          <target state="translated">agregue un &lt;code&gt;\n&lt;/code&gt; faltante a la &amp;uacute;ltima l&amp;iacute;nea si es necesario.</target>
        </trans-unit>
        <trans-unit id="90bc127779a3e8fd8565532d33e4a134cd45f11d" translate="yes" xml:space="preserve">
          <source>add everything under the current directory.</source>
          <target state="translated">añadir todo bajo el directorio actual.</target>
        </trans-unit>
        <trans-unit id="cb81f0f2d76a3c8759a19442b315f5c3a72e8b01" translate="yes" xml:space="preserve">
          <source>add untracked</source>
          <target state="translated">añadir sin rastrear</target>
        </trans-unit>
        <trans-unit id="c22e3f3bd42e15a0bc002a5cba9cb2e9cb547df3" translate="yes" xml:space="preserve">
          <source>add.ignore-errors (deprecated)</source>
          <target state="translated">añadir.errores de ignorancia (depreciado)</target>
        </trans-unit>
        <trans-unit id="0d6211d85b6c5ebebd00bc700587b97d87d96f79" translate="yes" xml:space="preserve">
          <source>add.ignoreErrors</source>
          <target state="translated">add.ignoreErrors</target>
        </trans-unit>
        <trans-unit id="47d07ea3a984d5f17b8a52280b424c7e874d91e2" translate="yes" xml:space="preserve">
          <source>add.interactive.useBuiltin</source>
          <target state="translated">add.interactive.useBuiltin</target>
        </trans-unit>
        <trans-unit id="e441bfa1c3e8c860d35d02080c0d58234a3dc31b" translate="yes" xml:space="preserve">
          <source>addEmbeddedRepo</source>
          <target state="translated">addEmbeddedRepo</target>
        </trans-unit>
        <trans-unit id="ceb99972d01848a4af9e45ab5cd53f0d9ea700b4" translate="yes" xml:space="preserve">
          <source>added content</source>
          <target state="translated">contenido añadido</target>
        </trans-unit>
        <trans-unit id="782f82176de20dd76d4373d2acfc3406073964ff" translate="yes" xml:space="preserve">
          <source>adding context (&quot; &quot;) or removal (&quot;-&quot;) lines</source>
          <target state="translated">agregando líneas de contexto (&quot; &quot;)o de eliminación (&quot;-&quot;)</target>
        </trans-unit>
        <trans-unit id="39de4cfc4c6e6827c5f11475b89460e1b545a7f9" translate="yes" xml:space="preserve">
          <source>adds the following to &lt;code&gt;.git/config&lt;/code&gt;:</source>
          <target state="translated">agrega lo siguiente a &lt;code&gt;.git/config&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="f6acb502d3f3dcf967568ec1f1f05756c7001015" translate="yes" xml:space="preserve">
          <source>advice.*</source>
          <target state="translated">advice.*</target>
        </trans-unit>
        <trans-unit id="0608c4054662dd902e1314f7e450e3eaa81c1143" translate="yes" xml:space="preserve">
          <source>agent</source>
          <target state="translated">agent</target>
        </trans-unit>
        <trans-unit id="dc642557f3a1ed15b666c3bf8c010e9d1bceffe0" translate="yes" xml:space="preserve">
          <source>alias.*</source>
          <target state="translated">alias.*</target>
        </trans-unit>
        <trans-unit id="16f3bac085c702b24dd56dd8fdf474c5d21e6639" translate="yes" xml:space="preserve">
          <source>alice and cindy can push into master, only bob can push into doc-update. david is the release manager and is the only person who can create and push version tags.</source>
          <target state="translated">Alice y Cindy pueden empujar en master,sólo Bob puede empujar en doc-update.David es el gerente de liberación y es la única persona que puede crear y empujar etiquetas de versión.</target>
        </trans-unit>
        <trans-unit id="ae21c64a87f6bb0b8e16e55c48be4cc638d7bd3f" translate="yes" xml:space="preserve">
          <source>align</source>
          <target state="translated">align</target>
        </trans-unit>
        <trans-unit id="d87c448044defb778f33158d8ccf94a20531d600" translate="yes" xml:space="preserve">
          <source>all</source>
          <target state="translated">all</target>
        </trans-unit>
        <trans-unit id="29702e41afdcf565d852a6355913f10360a2f8b0" translate="yes" xml:space="preserve">
          <source>all parent object ids</source>
          <target state="translated">todas las identificaciones de objetos parentales</target>
        </trans-unit>
        <trans-unit id="6664a4a284b9aeecc837369fce6272fe3547f795" translate="yes" xml:space="preserve">
          <source>allow-indentation-change</source>
          <target state="translated">allow-indentation-change</target>
        </trans-unit>
        <trans-unit id="890c8ad25c4c255f4dda7bba71ccde4b6eb54f1a" translate="yes" xml:space="preserve">
          <source>allows you to browse any commits from the last 2 weeks of commits that modified files under the &quot;drivers&quot; directory. (Note: you can adjust gitk&amp;rsquo;s fonts by holding down the control key while pressing &quot;-&quot; or &quot;+&quot;.)</source>
          <target state="translated">le permite examinar las confirmaciones de las &amp;uacute;ltimas 2 semanas que modificaron archivos en el directorio &quot;controladores&quot;. (Nota: puede ajustar las fuentes de gitk manteniendo presionada la tecla de control mientras presiona &quot;-&quot; o &quot;+&quot;).</target>
        </trans-unit>
        <trans-unit id="8733169fb7d8912aa579031eed0a4b26ef5718fe" translate="yes" xml:space="preserve">
          <source>alternate object database</source>
          <target state="translated">base de datos de objetos alternativos</target>
        </trans-unit>
        <trans-unit id="385d97ddc2cf0f165b1e517e2de9a74c662d0d92" translate="yes" xml:space="preserve">
          <source>alternate: absolute path of alternate object databases; may appear multiple times, one line per path. Note that if the path contains non-printable characters, it may be surrounded by double-quotes and contain C-style backslashed escape sequences.</source>
          <target state="translated">alternativo:ruta absoluta de las bases de datos de objetos alternativos;puede aparecer varias veces,una línea por ruta.Observe que si la ruta contiene caracteres no imprimibles,puede estar rodeada de comillas dobles y contener secuencias de escape con barras invertidas de estilo C.</target>
        </trans-unit>
        <trans-unit id="459a9aeba984b09598ccfb2133b8ae65d179153d" translate="yes" xml:space="preserve">
          <source>although the full, 40-character SHA-1s would be supplied. If the foreign ref does not yet exist the &lt;code&gt;&amp;lt;remote SHA-1&amp;gt;&lt;/code&gt; will be 40 &lt;code&gt;0&lt;/code&gt;. If a ref is to be deleted, the &lt;code&gt;&amp;lt;local ref&amp;gt;&lt;/code&gt; will be supplied as &lt;code&gt;(delete)&lt;/code&gt; and the &lt;code&gt;&amp;lt;local
SHA-1&amp;gt;&lt;/code&gt; will be 40 &lt;code&gt;0&lt;/code&gt;. If the local commit was specified by something other than a name which could be expanded (such as &lt;code&gt;HEAD~&lt;/code&gt;, or a SHA-1) it will be supplied as it was originally given.</source>
          <target state="translated">aunque se proporcionar&amp;iacute;an los SHA-1 completos de 40 caracteres. Si la referencia externa a&amp;uacute;n no existe, el &lt;code&gt;&amp;lt;remote SHA-1&amp;gt;&lt;/code&gt; ser&amp;aacute; 40 &lt;code&gt;0&lt;/code&gt; . Si se va a eliminar una referencia, la &lt;code&gt;&amp;lt;local ref&amp;gt;&lt;/code&gt; se proporcionar&amp;aacute; como &lt;code&gt;(delete)&lt;/code&gt; y el &lt;code&gt;&amp;lt;local SHA-1&amp;gt;&lt;/code&gt; ser&amp;aacute; 40 &lt;code&gt;0&lt;/code&gt; . Si la confirmaci&amp;oacute;n local se especific&amp;oacute; con algo que no sea un nombre que podr&amp;iacute;a expandirse (como &lt;code&gt;HEAD~&lt;/code&gt; o SHA-1), se proporcionar&amp;aacute; como se le dio originalmente.</target>
        </trans-unit>
        <trans-unit id="b16bb5afab4c1802eaeada40ac59f4ec78c01be8" translate="yes" xml:space="preserve">
          <source>always show in columns</source>
          <target state="translated">siempre se muestran en columnas</target>
        </trans-unit>
        <trans-unit id="b0c4ba6a734338f8b0a5e21fcbb05d3afcd198af" translate="yes" xml:space="preserve">
          <source>always shows the difference between the HEAD and the index file&amp;mdash;​this is what you&amp;rsquo;d commit if you created the commit now&amp;mdash;​and that</source>
          <target state="translated">siempre muestra la diferencia entre HEAD y el archivo de &amp;iacute;ndice, esto es lo que confirmar&amp;iacute;a si creara la confirmaci&amp;oacute;n ahora, y eso</target>
        </trans-unit>
        <trans-unit id="96e8155732e8324ae26f64d4516eb6fe696ac84f" translate="yes" xml:space="preserve">
          <source>am</source>
          <target state="translated">am</target>
        </trans-unit>
        <trans-unit id="400226a3b8758d7d662c424a478d16cceecd29ed" translate="yes" xml:space="preserve">
          <source>am.keepcr</source>
          <target state="translated">am.keepcr</target>
        </trans-unit>
        <trans-unit id="80b11664f9cdc0c4da5b2cf9cbae91e78f24cb5f" translate="yes" xml:space="preserve">
          <source>am.threeWay</source>
          <target state="translated">am.threeWay</target>
        </trans-unit>
        <trans-unit id="d9de89ed653daadc282d17fa341547ccd80f5e0c" translate="yes" xml:space="preserve">
          <source>amWorkDir</source>
          <target state="translated">amWorkDir</target>
        </trans-unit>
        <trans-unit id="b1cc99b811681fb579eeabe4a14a5e1ec1bab455" translate="yes" xml:space="preserve">
          <source>amend the previous commit, adding all your new changes, using your original message.</source>
          <target state="translated">modificar el compromiso anterior,agregando todos sus nuevos cambios,usando su mensaje original.</target>
        </trans-unit>
        <trans-unit id="461152b367e8ab9740fb2e9ee2da4d7175e9e2a2" translate="yes" xml:space="preserve">
          <source>an LF or a NUL when &lt;code&gt;-z&lt;/code&gt; option is used, to terminate the record.</source>
          <target state="translated">un LF o un NUL cuando se usa la opci&amp;oacute;n &lt;code&gt;-z&lt;/code&gt; , para terminar el registro.</target>
        </trans-unit>
        <trans-unit id="75eada615f3da2b986734d58bb672366de760679" translate="yes" xml:space="preserve">
          <source>an author: The name of the person responsible for this change, together with its date.</source>
          <target state="translated">un autor:El nombre de la persona responsable de este cambio,junto con su fecha.</target>
        </trans-unit>
        <trans-unit id="b441fe44ea3ab3bff759abb792c8a7f4c7974b0c" translate="yes" xml:space="preserve">
          <source>an entry in &lt;code&gt;BUILTIN_OBJECTS&lt;/code&gt; in the &lt;code&gt;Makefile&lt;/code&gt;.</source>
          <target state="translated">una entrada en &lt;code&gt;BUILTIN_OBJECTS&lt;/code&gt; en el &lt;code&gt;Makefile&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9d25597e1ded62863dd59e418a49b42af285a609" translate="yes" xml:space="preserve">
          <source>an entry in the &lt;code&gt;commands[]&lt;/code&gt; array in &lt;code&gt;git.c&lt;/code&gt;, and</source>
          <target state="translated">una entrada en la matriz de &lt;code&gt;commands[]&lt;/code&gt; en &lt;code&gt;git.c&lt;/code&gt; , y</target>
        </trans-unit>
        <trans-unit id="5037f82b8aa7002eda9aed7d8c0898525bc2f00d" translate="yes" xml:space="preserve">
          <source>and Git will continue applying the rest of the patches.</source>
          <target state="translated">y Git seguirá aplicando el resto de los parches.</target>
        </trans-unit>
        <trans-unit id="b3b2e45f7b37ac14dc28b61e29aee3c419229fda" translate="yes" xml:space="preserve">
          <source>and Git will create the commit for you and continue applying the remaining patches from the mailbox.</source>
          <target state="translated">y Git creará el commit para ti y continuará aplicando los parches restantes del buzón.</target>
        </trans-unit>
        <trans-unit id="7067f391e9f25da3da4a562c780b468101adb659" translate="yes" xml:space="preserve">
          <source>and Git will prompt you for a commit message and then create the new commit. Check to make sure it looks like what you expected with</source>
          <target state="translated">y Git te pedirá un mensaje de confirmación y luego creará la nueva confirmación.Comprueba que se parece a lo que esperabas con</target>
        </trans-unit>
        <trans-unit id="11bda7867b55ea900931dbe2ab8c87a36a0443d9" translate="yes" xml:space="preserve">
          <source>and bundle topic branches still cooking.</source>
          <target state="translated">y atar las ramas temáticas que aún se están cocinando.</target>
        </trans-unit>
        <trans-unit id="06675e26cc6f5bedf7b0e9b9d71e33fb64fa4ef8" translate="yes" xml:space="preserve">
          <source>and email them.</source>
          <target state="translated">y enviarles un correo electrónico.</target>
        </trans-unit>
        <trans-unit id="d5d63b233efdc161b2104f0e091d210beeb2fe60" translate="yes" xml:space="preserve">
          <source>and hack away. The equivalent of &lt;code&gt;cvs update&lt;/code&gt; is</source>
          <target state="translated">y hackear. El equivalente a la &lt;code&gt;cvs update&lt;/code&gt; de cvs es</target>
        </trans-unit>
        <trans-unit id="d4b59596148297f0688711ac4f92721dbc18215b" translate="yes" xml:space="preserve">
          <source>and if it detects that the file &quot;file0&quot; is completely rewritten, it changes it to:</source>
          <target state="translated">y si detecta que el archivo &quot;file0&quot; está completamente reescrito,lo cambia a:</target>
        </trans-unit>
        <trans-unit id="e1426704be98b9dd3d938c5a6a31b3fe4ee9a995" translate="yes" xml:space="preserve">
          <source>and in fact a lot of the common Git command combinations can be scripted with the &lt;code&gt;git xyz&lt;/code&gt; interfaces. You can learn things by just looking at what the various git scripts do. For example, &lt;code&gt;git reset&lt;/code&gt; used to be the above two lines implemented in &lt;code&gt;git reset&lt;/code&gt;, but some things like &lt;code&gt;git status&lt;/code&gt; and &lt;code&gt;git commit&lt;/code&gt; are slightly more complex scripts around the basic Git commands.</source>
          <target state="translated">y, de hecho, muchas de las combinaciones comunes de comandos de Git se pueden programar con las interfaces &lt;code&gt;git xyz&lt;/code&gt; . Puede aprender cosas con solo mirar lo que hacen los distintos scripts de git. Por ejemplo, &lt;code&gt;git reset&lt;/code&gt; sol&amp;iacute;a ser las dos l&amp;iacute;neas anteriores implementadas en &lt;code&gt;git reset&lt;/code&gt; , pero algunas cosas como &lt;code&gt;git status&lt;/code&gt; y &lt;code&gt;git commit&lt;/code&gt; son scripts un poco m&amp;aacute;s complejos en torno a los comandos b&amp;aacute;sicos de Git.</target>
        </trans-unit>
        <trans-unit id="c2f880dab39040d1bcbb6d73323cfccc9f1141f6" translate="yes" xml:space="preserve">
          <source>and it is assumed unchanged.</source>
          <target state="translated">y se asume que no ha cambiado.</target>
        </trans-unit>
        <trans-unit id="6fdb49363e42ba495e98dac786aceef7ea588734" translate="yes" xml:space="preserve">
          <source>and it will be gone. There&amp;rsquo;s no external repository, and there&amp;rsquo;s no history outside the project you created.</source>
          <target state="translated">y se habr&amp;aacute; ido. No hay un repositorio externo y no hay historial fuera del proyecto que cre&amp;oacute;.</target>
        </trans-unit>
        <trans-unit id="14be792a7fbd836c220980afe820c5835c201a25" translate="yes" xml:space="preserve">
          <source>and it would create the new branch &lt;code&gt;mybranch&lt;/code&gt; at the earlier commit, and check out the state at that time.</source>
          <target state="translated">y crear&amp;iacute;a la nueva rama &lt;code&gt;mybranch&lt;/code&gt; en la confirmaci&amp;oacute;n anterior y comprobar&amp;iacute;a el estado en ese momento.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
