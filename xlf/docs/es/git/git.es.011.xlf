<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="git">
    <body>
      <group id="git">
        <trans-unit id="39555b916eeeec115f6735665b5426bf964f4e52" translate="yes" xml:space="preserve">
          <source>This setting can be overridden with the &lt;code&gt;GIT_NOTES_REWRITE_REF&lt;/code&gt; environment variable, which must be a colon separated list of refs or globs.</source>
          <target state="translated">Esta configuraci&amp;oacute;n se puede anular con la variable de entorno &lt;code&gt;GIT_NOTES_REWRITE_REF&lt;/code&gt; , que debe ser una lista de referencias o globales separadas por dos puntos.</target>
        </trans-unit>
        <trans-unit id="d17d74e5aa80b06bd416eb43f1c510767efc6dc8" translate="yes" xml:space="preserve">
          <source>This setting defaults to &quot;refs/notes/commits&quot;, and it can be overridden by the &lt;code&gt;GIT_NOTES_REF&lt;/code&gt; environment variable. See &lt;a href=&quot;git-notes&quot;&gt;git-notes[1]&lt;/a&gt;.</source>
          <target state="translated">Esta configuraci&amp;oacute;n por defecto es &quot;refs / notes / commits&quot; y puede ser anulada por la variable de entorno &lt;code&gt;GIT_NOTES_REF&lt;/code&gt; . Ver &lt;a href=&quot;git-notes&quot;&gt;git-notes [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="843f7e48b1e3c030c426060d83a399e29388c249" translate="yes" xml:space="preserve">
          <source>This setting forces Git to normalize line endings for this file on checkin and convert them to CRLF when the file is checked out.</source>
          <target state="translated">Este ajuste obliga a Git a normalizar las terminaciones de las líneas de este archivo en el checkin y convertirlas en CRLF cuando el archivo se comprueba.</target>
        </trans-unit>
        <trans-unit id="8c7bb001c250cfdf4247d252deb09b8b2c2a2839" translate="yes" xml:space="preserve">
          <source>This setting forces Git to normalize line endings to LF on checkin and prevents conversion to CRLF when the file is checked out.</source>
          <target state="translated">Este ajuste obliga a Git a normalizar las terminaciones de línea a LF en el checkin y evita la conversión a CRLF cuando el archivo es chequeado.</target>
        </trans-unit>
        <trans-unit id="886fc853da603148f91948f5793a0d1be70dc28a" translate="yes" xml:space="preserve">
          <source>This setting is automatically guessed by &lt;a href=&quot;git-clone&quot;&gt;git-clone[1]&lt;/a&gt; or &lt;a href=&quot;git-init&quot;&gt;git-init[1]&lt;/a&gt; when the repository was created. By default a repository that ends in &quot;/.git&quot; is assumed to be not bare (bare = false), while all other repositories are assumed to be bare (bare = true).</source>
          <target state="translated">Esta configuraci&amp;oacute;n la adivina autom&amp;aacute;ticamente &lt;a href=&quot;git-clone&quot;&gt;git-clone [1]&lt;/a&gt; o &lt;a href=&quot;git-init&quot;&gt;git-init [1]&lt;/a&gt; cuando se cre&amp;oacute; el repositorio. De forma predeterminada, se asume que un repositorio que termina en &quot;/.git&quot; no est&amp;aacute; vac&amp;iacute;o (desnudo = falso), mientras que todos los dem&amp;aacute;s repositorios se supone que est&amp;aacute;n desnudos (desnudo = verdadero).</target>
        </trans-unit>
        <trans-unit id="a32da40367d476cb817ba2cfa99cb18bc04a7b3a" translate="yes" xml:space="preserve">
          <source>This setting overrides the default of the &lt;code&gt;--cleanup&lt;/code&gt; option in &lt;code&gt;git commit&lt;/code&gt;. See &lt;a href=&quot;git-commit&quot;&gt;git-commit[1]&lt;/a&gt; for details. Changing the default can be useful when you always want to keep lines that begin with comment character &lt;code&gt;#&lt;/code&gt; in your log message, in which case you would do &lt;code&gt;git config commit.cleanup whitespace&lt;/code&gt; (note that you will have to remove the help lines that begin with &lt;code&gt;#&lt;/code&gt; in the commit log template yourself, if you do this).</source>
          <target state="translated">Esta configuraci&amp;oacute;n anula el valor predeterminado de la opci&amp;oacute;n &lt;code&gt;--cleanup&lt;/code&gt; en &lt;code&gt;git commit&lt;/code&gt; . Consulte &lt;a href=&quot;git-commit&quot;&gt;git-commit [1]&lt;/a&gt; para obtener m&amp;aacute;s detalles. Cambiar el valor predeterminado puede ser &amp;uacute;til cuando siempre desea mantener las l&amp;iacute;neas que comienzan con el car&amp;aacute;cter de comentario &lt;code&gt;#&lt;/code&gt; en su mensaje de registro, en cuyo caso har&amp;iacute;a &lt;code&gt;git config commit.cleanup whitespace&lt;/code&gt; (tenga en cuenta que tendr&amp;aacute; que eliminar las l&amp;iacute;neas de ayuda que comienzan con &lt;code&gt;#&lt;/code&gt; en la plantilla de registro de confirmaci&amp;oacute;n usted mismo, si hace esto).</target>
        </trans-unit>
        <trans-unit id="e85001143ab4f6109a8db79b80d46592a3792b5e" translate="yes" xml:space="preserve">
          <source>This setting should be set to a comma-separated list of color and date settings, starting and ending with a color, the dates should be set from oldest to newest. The metadata will be colored given the colors if the line was introduced before the given timestamp, overwriting older timestamped colors.</source>
          <target state="translated">Este ajuste debe ser una lista separada por comas de ajustes de color y fecha,comenzando y terminando con un color,las fechas deben ser ajustadas desde la más antigua a la más reciente.Los metadatos se colorearán dados los colores si la línea se introdujo antes de la marca de tiempo dada,sobrescribiendo los colores más antiguos de la marca de tiempo.</target>
        </trans-unit>
        <trans-unit id="1b39995bc064271da90ffd3401f4ace36766db6f" translate="yes" xml:space="preserve">
          <source>This setting writes a JSON-based format that is suited for machine interpretation. See &lt;code&gt;GIT_TRACE2&lt;/code&gt; for available trace output options and &lt;a href=&quot;api-trace2&quot;&gt;Trace2 documentation&lt;/a&gt; for full details.</source>
          <target state="translated">Esta configuraci&amp;oacute;n escribe un formato basado en JSON que es adecuado para la interpretaci&amp;oacute;n de la m&amp;aacute;quina. Consulte &lt;code&gt;GIT_TRACE2&lt;/code&gt; para conocer las opciones de salida de seguimiento disponibles y la &lt;a href=&quot;api-trace2&quot;&gt;documentaci&amp;oacute;n de Trace2&lt;/a&gt; para obtener detalles completos.</target>
        </trans-unit>
        <trans-unit id="d727921c238e28668ffb0dd7e4775077e3d6b368" translate="yes" xml:space="preserve">
          <source>This should be a colon-separated list of absolute paths. If set, it is a list of directories that Git should not chdir up into while looking for a repository directory (useful for excluding slow-loading network directories). It will not exclude the current working directory or a GIT_DIR set on the command line or in the environment. Normally, Git has to read the entries in this list and resolve any symlink that might be present in order to compare them with the current directory. However, if even this access is slow, you can add an empty entry to the list to tell Git that the subsequent entries are not symlinks and needn&amp;rsquo;t be resolved; e.g., &lt;code&gt;GIT_CEILING_DIRECTORIES=/maybe/symlink::/very/slow/non/symlink&lt;/code&gt;.</source>
          <target state="translated">Debe ser una lista de rutas absolutas separadas por dos puntos. Si se establece, es una lista de directorios en los que Git no debe ingresar mientras busca un directorio de repositorio (&amp;uacute;til para excluir directorios de red de carga lenta). No excluir&amp;aacute; el directorio de trabajo actual o un GIT_DIR configurado en la l&amp;iacute;nea de comando o en el entorno. Normalmente, Git tiene que leer las entradas en esta lista y resolver cualquier enlace simb&amp;oacute;lico que pueda estar presente para compararlos con el directorio actual. Sin embargo, si incluso este acceso es lento, puede agregar una entrada vac&amp;iacute;a a la lista para decirle a Git que las entradas subsiguientes no son enlaces simb&amp;oacute;licos y no necesitan resolverse; por ejemplo, &lt;code&gt;GIT_CEILING_DIRECTORIES=/maybe/symlink::/very/slow/non/symlink&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="02391ad98329bedcf2ddfbe7ebdef774e4e7cc67" translate="yes" xml:space="preserve">
          <source>This should help you to submit patches inline using KMail.</source>
          <target state="translated">Esto debería ayudarte a enviar parches en línea usando KMail.</target>
        </trans-unit>
        <trans-unit id="dc65a8c75ec971d079e04ac05264e8ee2fb908c8" translate="yes" xml:space="preserve">
          <source>This should make &quot;--pretty=oneline&quot; a whole lot more readable for people using 80-column terminals.</source>
          <target state="translated">Esto debería hacer que &quot;--pretty=online&quot; sea mucho más legible para la gente que usa terminales de 80 columnas.</target>
        </trans-unit>
        <trans-unit id="cda899a68420b48633046b1cef20e4960b467a9e" translate="yes" xml:space="preserve">
          <source>This should make it easy to look up svn log messages when svn users refer to -r/--revision numbers.</source>
          <target state="translated">Esto debería facilitar la búsqueda de mensajes de registro de svn cuando los usuarios de svn se refieran a los números de revisión -r/-.</target>
        </trans-unit>
        <trans-unit id="3fce0b9f9a8369808848ec3f066c1735323bb111" translate="yes" xml:space="preserve">
          <source>This should not be confused with the &lt;code&gt;ours&lt;/code&gt; merge strategy, which does not even look at what the other tree contains at all. It discards everything the other tree did, declaring &lt;code&gt;our&lt;/code&gt; history contains all that happened in it.</source>
          <target state="translated">Esto no debe confundirse con la estrategia de fusi&amp;oacute;n &lt;code&gt;ours&lt;/code&gt; , que ni siquiera mira lo que contiene el otro &amp;aacute;rbol. Descarta todo lo que hizo el otro &amp;aacute;rbol, declarando que &lt;code&gt;our&lt;/code&gt; historia contiene todo lo que sucedi&amp;oacute; en &amp;eacute;l.</target>
        </trans-unit>
        <trans-unit id="70d0ce2d7e7f48cdf303b28228ad271bde0b97ac" translate="yes" xml:space="preserve">
          <source>This shows that our resolved version deleted &quot;Hello world&quot; from the first parent, deleted &quot;Goodbye&quot; from the second parent, and added &quot;Goodbye world&quot;, which was previously absent from both.</source>
          <target state="translated">Esto muestra que nuestra versión resuelta eliminó &quot;Hola mundo&quot; del primer progenitor,eliminó &quot;Adiós&quot; del segundo progenitor,y agregó &quot;Adiós mundo&quot;,que antes estaba ausente en ambos.</target>
        </trans-unit>
        <trans-unit id="e0fbc89a9eb1f686d88b41839c951cd18b86bf5e" translate="yes" xml:space="preserve">
          <source>This shows that you can do without a run script if you write the test on a single line.</source>
          <target state="translated">Esto demuestra que puedes prescindir de un guión de ejecución si escribes la prueba en una sola línea.</target>
        </trans-unit>
        <trans-unit id="f580a082428b40358ee35f346bb87b38bbd6e3f8" translate="yes" xml:space="preserve">
          <source>This shows the change between HEAD and index (i.e. what will be committed if you say &lt;code&gt;git commit&lt;/code&gt;), and between index and working tree files (i.e. what you could stage further before &lt;code&gt;git commit&lt;/code&gt; using &lt;code&gt;git add&lt;/code&gt;) for each path. A sample output looks like this:</source>
          <target state="translated">Esto muestra el cambio entre HEAD e &amp;iacute;ndice (es decir, lo que se confirmar&amp;aacute; si dice &lt;code&gt;git commit&lt;/code&gt; ), y entre los archivos de &amp;aacute;rbol de &amp;iacute;ndice y trabajo (es decir, lo que podr&amp;iacute;a preparar m&amp;aacute;s antes de &lt;code&gt;git commit&lt;/code&gt; usando &lt;code&gt;git add&lt;/code&gt; ) para cada ruta. Una salida de muestra se ve as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="cdedf9c4235065dcc3b6a065543c259879fefa6b" translate="yes" xml:space="preserve">
          <source>This shows the files and directories to be deleted and issues an &quot;Input ignore patterns&amp;gt;&amp;gt;&quot; prompt. You can input space-separated patterns to exclude files and directories from deletion. E.g. &quot;*.c *.h&quot; will excludes files end with &quot;.c&quot; and &quot;.h&quot; from deletion. When you are satisfied with the filtered result, press ENTER (empty) back to the main menu.</source>
          <target state="translated">Esto muestra los archivos y directorios que se eliminar&amp;aacute;n y emite un mensaje &quot;Input ignore patterns &amp;gt;&amp;gt;&quot;. Puede ingresar patrones separados por espacios para excluir archivos y directorios de la eliminaci&amp;oacute;n. Por ejemplo, &quot;* .c * .h&quot; excluir&amp;aacute; los archivos que terminen con &quot;.c&quot; y &quot;.h&quot; de la eliminaci&amp;oacute;n. Cuando est&amp;eacute; satisfecho con el resultado filtrado, presione ENTER (vac&amp;iacute;o) para regresar al men&amp;uacute; principal.</target>
        </trans-unit>
        <trans-unit id="d76da1518821bfa115def32fd19d8e8b1e73d979" translate="yes" xml:space="preserve">
          <source>This shows the files and directories to be deleted and issues an &quot;Select items to delete&amp;gt;&amp;gt;&quot; prompt. When the prompt ends with double &lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt; like this, you can make more than one selection, concatenated with whitespace or comma. Also you can say ranges. E.g. &quot;2-5 7,9&quot; to choose 2,3,4,5,7,9 from the list. If the second number in a range is omitted, all remaining items are selected. E.g. &quot;7-&quot; to choose 7,8,9 from the list. You can say &lt;code&gt;*&lt;/code&gt; to choose everything. Also when you are satisfied with the filtered result, press ENTER (empty) back to the main menu.</source>
          <target state="translated">Esto muestra los archivos y directorios que se eliminar&amp;aacute;n y emite un mensaje &quot;Seleccionar elementos para eliminar &amp;gt;&amp;gt;&quot;. Cuando el mensaje termina con doble &lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt; as&amp;iacute;, puede hacer m&amp;aacute;s de una selecci&amp;oacute;n, concatenada con espacios en blanco o coma. Tambi&amp;eacute;n puedes decir rangos. Por ejemplo, &quot;2-5 7,9&quot; para elegir 2,3,4,5,7,9 de la lista. Si se omite el segundo n&amp;uacute;mero de un rango, se seleccionan todos los elementos restantes. Por ejemplo, &quot;7-&quot; para elegir 7,8,9 de la lista. Puedes decir &lt;code&gt;*&lt;/code&gt; para elegir todo. Adem&amp;aacute;s, cuando est&amp;eacute; satisfecho con el resultado filtrado, presione ENTER (vac&amp;iacute;o) para volver al men&amp;uacute; principal.</target>
        </trans-unit>
        <trans-unit id="53f59db63b45945049b0fe262d831991c1cb4a8d" translate="yes" xml:space="preserve">
          <source>This shows the status information and issues an &quot;Update&amp;gt;&amp;gt;&quot; prompt. When the prompt ends with double &lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt;, you can make more than one selection, concatenated with whitespace or comma. Also you can say ranges. E.g. &quot;2-5 7,9&quot; to choose 2,3,4,5,7,9 from the list. If the second number in a range is omitted, all remaining patches are taken. E.g. &quot;7-&quot; to choose 7,8,9 from the list. You can say &lt;code&gt;*&lt;/code&gt; to choose everything.</source>
          <target state="translated">Esto muestra la informaci&amp;oacute;n de estado y emite un mensaje &quot;Actualizar &amp;gt;&amp;gt;&quot;. Cuando el mensaje termina con doble &lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt; , puede hacer m&amp;aacute;s de una selecci&amp;oacute;n, concatenada con espacios en blanco o comas. Tambi&amp;eacute;n puedes decir rangos. Por ejemplo, &quot;2-5 7,9&quot; para elegir 2,3,4,5,7,9 de la lista. Si se omite el segundo n&amp;uacute;mero de un rango, se toman todos los parches restantes. Por ejemplo, &quot;7-&quot; para elegir 7,8,9 de la lista. Puedes decir &lt;code&gt;*&lt;/code&gt; para elegir todo.</target>
        </trans-unit>
        <trans-unit id="728eb7da1f0f1bff86889f4ac114a7967bd3817f" translate="yes" xml:space="preserve">
          <source>This snapshot is now stored in a temporary staging area which Git calls the &quot;index&quot;. You can permanently store the contents of the index in the repository with &lt;code&gt;git commit&lt;/code&gt;:</source>
          <target state="translated">Esta instant&amp;aacute;nea ahora se almacena en un &amp;aacute;rea de preparaci&amp;oacute;n temporal que Git llama &quot;&amp;iacute;ndice&quot;. Puede almacenar permanentemente el contenido del &amp;iacute;ndice en el repositorio con &lt;code&gt;git commit&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="dfa3a419f48a4609a0668c69a143f543612e713a" translate="yes" xml:space="preserve">
          <source>This solution is not 100% bulletproof, in the sense that if some project has a named ref (branch, tag) starting with &lt;code&gt;git/&lt;/code&gt;, then paths such as</source>
          <target state="translated">Esta soluci&amp;oacute;n no es 100% a prueba de balas, en el sentido de que si alg&amp;uacute;n proyecto tiene una referencia nombrada (rama, etiqueta) que comienza con &lt;code&gt;git/&lt;/code&gt; , entonces rutas como</target>
        </trans-unit>
        <trans-unit id="02da975953020f9ebbe3388889e8a8406f05d0c7" translate="yes" xml:space="preserve">
          <source>This step and the next one could be combined into a single step with &quot;checkout -b my2.6.14 v2.6.14&quot;.</source>
          <target state="translated">Este paso y el siguiente podrían combinarse en un solo paso con &quot;checkout -b my2.6.14 v2.6.14&quot;.</target>
        </trans-unit>
        <trans-unit id="9b0b980e437fd3274de63464aa9184e42833d899" translate="yes" xml:space="preserve">
          <source>This suffix is also accepted when spelled in uppercase, and means the same thing no matter the case.</source>
          <target state="translated">Este sufijo también se acepta cuando se escribe en mayúsculas,y significa lo mismo sin importar el caso.</target>
        </trans-unit>
        <trans-unit id="01f381d8f83cae139b7e7ff06573574ebdbc8086" translate="yes" xml:space="preserve">
          <source>This supersedes the &lt;a href=&quot;#post-update&quot;&gt;&lt;em&gt;post-update&lt;/em&gt;&lt;/a&gt; hook in that it gets both old and new values of all the refs in addition to their names.</source>
          <target state="translated">Esto reemplaza el gancho &lt;a href=&quot;#post-update&quot;&gt;&lt;em&gt;posterior a la actualizaci&amp;oacute;n&lt;/em&gt;&lt;/a&gt; en el sentido de que obtiene valores nuevos y antiguos de todas las referencias adem&amp;aacute;s de sus nombres.</target>
        </trans-unit>
        <trans-unit id="6339f7da558022ed0ae10f566dd01f30bb047e19" translate="yes" xml:space="preserve">
          <source>This synchronizes your public repository to match the named branch head (i.e. &lt;code&gt;master&lt;/code&gt; in this case) and objects reachable from them in your current repository.</source>
          <target state="translated">Esto sincroniza su repositorio p&amp;uacute;blico para que coincida con el nombre de la rama principal (es decir, &lt;code&gt;master&lt;/code&gt; en este caso) y los objetos accesibles desde ellos en su repositorio actual.</target>
        </trans-unit>
        <trans-unit id="0012e2584fc653cc03e6dda35ea11cbdc9f6c1a2" translate="yes" xml:space="preserve">
          <source>This syntax is only recognized if there are no slashes before the first colon. This helps differentiate a local path that contains a colon. For example the local path &lt;code&gt;foo:bar&lt;/code&gt; could be specified as an absolute path or &lt;code&gt;./foo:bar&lt;/code&gt; to avoid being misinterpreted as an ssh url.</source>
          <target state="translated">Esta sintaxis solo se reconoce si no hay barras inclinadas antes de los primeros dos puntos. Esto ayuda a diferenciar una ruta local que contiene dos puntos. Por ejemplo, la ruta local &lt;code&gt;foo:bar&lt;/code&gt; podr&amp;iacute;a especificarse como una ruta absoluta o &lt;code&gt;./foo:bar&lt;/code&gt; para evitar que se malinterprete como una URL ssh.</target>
        </trans-unit>
        <trans-unit id="9f5d9872e03f1e6dd55415fa2249d9c84ea6f738" translate="yes" xml:space="preserve">
          <source>This takes a text file each of whose lines is a shell glob pattern. Filepairs that match a glob pattern on an earlier line in the file are output before ones that match a later line, and filepairs that do not match any glob pattern are output last.</source>
          <target state="translated">Esto toma un archivo de texto cada una de cuyas líneas es un patrón de globo de la concha.Los pares de archivos que coinciden con un patrón global en una línea anterior del archivo se imprimen antes que los que coinciden con una línea posterior,y los pares de archivos que no coinciden con ningún patrón global se imprimen en último lugar.</target>
        </trans-unit>
        <trans-unit id="b169549655fddd825e67d14c1591493d6ac0be03" translate="yes" xml:space="preserve">
          <source>This target is intended to be more of a summary (like GIT_TRACE) and less detailed than the other targets. It ignores thread, region, and data messages, for example.</source>
          <target state="translated">Este objetivo pretende ser más sumario (como GIT_TRACE)y menos detallado que los otros objetivos.Ignora el hilo,la región y los mensajes de datos,por ejemplo.</target>
        </trans-unit>
        <trans-unit id="49bec15344e0cef74269dabec868d060f4c1b07d" translate="yes" xml:space="preserve">
          <source>This tells the bisect process that no commit after &lt;code&gt;v2.5&lt;/code&gt;, up to and including &lt;code&gt;v2.6&lt;/code&gt;, should be tested.</source>
          <target state="translated">Esto le dice al proceso &lt;code&gt;v2.5&lt;/code&gt; que no se debe probar ninguna confirmaci&amp;oacute;n despu&amp;eacute;s de v2.5 , hasta e incluyendo &lt;code&gt;v2.6&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1842bab1269e00a8bf77d06ee23570861225cc48" translate="yes" xml:space="preserve">
          <source>This tells the bisect process that the commits between &lt;code&gt;v2.5&lt;/code&gt; and &lt;code&gt;v2.6&lt;/code&gt; (inclusive) should be skipped.</source>
          <target state="translated">Esto le dice al proceso &lt;code&gt;v2.5&lt;/code&gt; que se deben omitir las confirmaciones entre v2.5 y &lt;code&gt;v2.6&lt;/code&gt; (inclusive).</target>
        </trans-unit>
        <trans-unit id="fb42c5eea9f7afe3662a07fd6af3c3105ab04e8f" translate="yes" xml:space="preserve">
          <source>This tells you that the immediately following version of the file was &quot;newsha&quot;, and that the immediately preceding version was &quot;oldsha&quot;. You also know the commit messages that went with the change from oldsha to 4b9458b and with the change from 4b9458b to newsha.</source>
          <target state="translated">Esto te dice que la versión inmediatamente siguiente del archivo era &quot;newsha&quot;,y que la versión inmediatamente anterior era &quot;oldsha&quot;.También sabes los mensajes de confirmación que fueron con el cambio de oldsha a 4b9458b y con el cambio de 4b9458b a newsha.</target>
        </trans-unit>
        <trans-unit id="8f1179423f3ea23a6c9e525ef159db41c1155b6a" translate="yes" xml:space="preserve">
          <source>This transformation is used to detect renames and copies, and is controlled by the -M option (to detect renames) and the -C option (to detect copies as well) to the &lt;code&gt;git diff-*&lt;/code&gt; commands. If the input contained these filepairs:</source>
          <target state="translated">Esta transformaci&amp;oacute;n se usa para detectar cambios de nombre y copias, y est&amp;aacute; controlada por la opci&amp;oacute;n -M (para detectar cambios de nombre) y la opci&amp;oacute;n -C (para detectar copias tambi&amp;eacute;n) a los comandos &lt;code&gt;git diff-*&lt;/code&gt; . Si la entrada conten&amp;iacute;a estos pares de archivos:</target>
        </trans-unit>
        <trans-unit id="573190bccf8f2a4ea6fc33eedd23b4b8fc3f90f8" translate="yes" xml:space="preserve">
          <source>This transformation is used to merge filepairs broken by diffcore-break, and not transformed into rename/copy by diffcore-rename, back into a single modification. This always runs when diffcore-break is used.</source>
          <target state="translated">Esta transformación se utiliza para fusionar los pares de archivos rotos por la ruptura de los índices,y no transformados en renombre/copia por el renombre de los índices,de nuevo en una única modificación.Esto siempre se ejecuta cuando se utiliza diffcore-break.</target>
        </trans-unit>
        <trans-unit id="448726c2164ad1aa28f4d84dcd657bc466764287" translate="yes" xml:space="preserve">
          <source>This transformation limits the set of filepairs to those that change specified strings between the preimage and the postimage in a certain way. -S&amp;lt;block of text&amp;gt; and -G&amp;lt;regular expression&amp;gt; options are used to specify different ways these strings are sought.</source>
          <target state="translated">Esta transformaci&amp;oacute;n limita el conjunto de pares de archivos a aquellos que cambian cadenas especificadas entre la preimagen y la postimagen de una manera determinada. Las opciones -S &amp;lt;bloque de texto&amp;gt; y -G &amp;lt;expresi&amp;oacute;n regular&amp;gt; se utilizan para especificar las diferentes formas en que se buscan estas cadenas.</target>
        </trans-unit>
        <trans-unit id="eb01f7c28a2e42a179d9ca76727e0a7db6bb8dce" translate="yes" xml:space="preserve">
          <source>This transport can be used for both uploading and downloading, and requires you to have a log-in privilege over &lt;code&gt;ssh&lt;/code&gt; to the remote machine. It finds out the set of objects the other side lacks by exchanging the head commits both ends have and transfers (close to) minimum set of objects. It is by far the most efficient way to exchange Git objects between repositories.</source>
          <target state="translated">Este transporte se puede utilizar tanto para cargar como para descargar, y requiere que tenga privilegios de inicio de sesi&amp;oacute;n sobre &lt;code&gt;ssh&lt;/code&gt; en la m&amp;aacute;quina remota. Descubre el conjunto de objetos que le falta al otro lado intercambiando los compromisos de cabeza que tienen ambos extremos y transfiere (cerca de) el conjunto m&amp;iacute;nimo de objetos. Es, con mucho, la forma m&amp;aacute;s eficiente de intercambiar objetos Git entre repositorios.</target>
        </trans-unit>
        <trans-unit id="1e93313475dc2966a9b364d25d3e63ddb92cd35d" translate="yes" xml:space="preserve">
          <source>This transport is the same as SSH transport but uses &lt;code&gt;sh&lt;/code&gt; to run both ends on the local machine instead of running other end on the remote machine via &lt;code&gt;ssh&lt;/code&gt;.</source>
          <target state="translated">Este transporte es el mismo que el transporte SSH pero usa &lt;code&gt;sh&lt;/code&gt; para ejecutar ambos extremos en la m&amp;aacute;quina local en lugar de ejecutar el otro extremo en la m&amp;aacute;quina remota a trav&amp;eacute;s de &lt;code&gt;ssh&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="187c060b77919e40b0db07be6c4444d6bedf0f1f" translate="yes" xml:space="preserve">
          <source>This transport was designed for anonymous downloading. Like SSH transport, it finds out the set of objects the downstream side lacks and transfers (close to) minimum set of objects.</source>
          <target state="translated">Este transporte fue diseñado para la descarga anónima.Al igual que el transporte SSH,descubre el conjunto de objetos que le faltan al lado de abajo y transfiere (cerca de)un conjunto mínimo de objetos.</target>
        </trans-unit>
        <trans-unit id="a843c4941e9eb68216876c91a59842ae7d058faa" translate="yes" xml:space="preserve">
          <source>This tutorial explains how to import a new project into Git, make changes to it, and share changes with other developers.</source>
          <target state="translated">Este tutorial explica cómo importar un nuevo proyecto a Git,hacer cambios en él,y compartir los cambios con otros desarrolladores.</target>
        </trans-unit>
        <trans-unit id="586b98337ae35b657ccc9687b72106b49b3b174b" translate="yes" xml:space="preserve">
          <source>This tutorial explains how to use the &quot;core&quot; Git commands to set up and work with a Git repository.</source>
          <target state="translated">Este tutorial explica cómo usar los comandos &quot;centrales&quot; de Git para configurar y trabajar con un repositorio Git.</target>
        </trans-unit>
        <trans-unit id="4f3b7287fc4739a451de38537fb0637003a134c1" translate="yes" xml:space="preserve">
          <source>This tutorial should be enough to perform basic distributed revision control for your projects. However, to fully understand the depth and power of Git you need to understand two simple ideas on which it is based:</source>
          <target state="translated">Este tutorial debería ser suficiente para realizar un control de revisión distribuido básico para sus proyectos.Sin embargo,para entender completamente la profundidad y el poder de Git necesitas entender dos simples ideas en las que se basa:</target>
        </trans-unit>
        <trans-unit id="50b7797bad77b49520127714ff8a716873aad978" translate="yes" xml:space="preserve">
          <source>This updates (or creates, as necessary) branches &lt;code&gt;pu&lt;/code&gt; and &lt;code&gt;tmp&lt;/code&gt; in the local repository by fetching from the branches (respectively) &lt;code&gt;pu&lt;/code&gt; and &lt;code&gt;maint&lt;/code&gt; from the remote repository.</source>
          <target state="translated">Esto actualiza (o crea, seg&amp;uacute;n sea necesario) ramas &lt;code&gt;pu&lt;/code&gt; y &lt;code&gt;tmp&lt;/code&gt; en el repositorio local obteniendo de las ramas (respectivamente) &lt;code&gt;pu&lt;/code&gt; y &lt;code&gt;maint&lt;/code&gt; del repositorio remoto.</target>
        </trans-unit>
        <trans-unit id="3e7d31bbe83aa073e1058fe02ef8026a34345709" translate="yes" xml:space="preserve">
          <source>This updates (or creates, as necessary) branches &lt;code&gt;seen&lt;/code&gt; and &lt;code&gt;tmp&lt;/code&gt; in the local repository by fetching from the branches (respectively) &lt;code&gt;seen&lt;/code&gt; and &lt;code&gt;maint&lt;/code&gt; from the remote repository.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70ac0b727096d7231e8fdcdd112d1a04551c8ca8" translate="yes" xml:space="preserve">
          <source>This used to be the default, but not since Git 2.0 (&lt;code&gt;simple&lt;/code&gt; is the new default).</source>
          <target state="translated">Esto sol&amp;iacute;a ser el valor predeterminado, pero no desde Git 2.0 ( &lt;code&gt;simple&lt;/code&gt; es el nuevo valor predeterminado).</target>
        </trans-unit>
        <trans-unit id="fd75f35034e73b98112aaaf4198ee488b9e51804" translate="yes" xml:space="preserve">
          <source>This uses the &lt;code&gt;--interactive&lt;/code&gt; machinery internally, but combining it with the &lt;code&gt;--interactive&lt;/code&gt; option explicitly is generally not a good idea unless you know what you are doing (see BUGS below).</source>
          <target state="translated">Esto usa la maquinaria &lt;code&gt;--interactive&lt;/code&gt; internamente, pero combinarla con la opci&amp;oacute;n &lt;code&gt;--interactive&lt;/code&gt; expl&amp;iacute;citamente generalmente no es una buena idea a menos que sepa lo que est&amp;aacute; haciendo (vea ERRORES a continuaci&amp;oacute;n).</target>
        </trans-unit>
        <trans-unit id="665eaff82148d49a545a97a7903a8bf0d3754608" translate="yes" xml:space="preserve">
          <source>This uses the &lt;code&gt;--interactive&lt;/code&gt; machinery internally, but it can be run without an explicit &lt;code&gt;--interactive&lt;/code&gt;.</source>
          <target state="translated">Esto usa la maquinaria &lt;code&gt;--interactive&lt;/code&gt; internamente, pero se puede ejecutar sin un &lt;code&gt;--interactive&lt;/code&gt; expl&amp;iacute;cito .</target>
        </trans-unit>
        <trans-unit id="5a59444b879ae5151f30b1cffe08974240ac7bdc" translate="yes" xml:space="preserve">
          <source>This uses the same two-dot range notation we saw earlier with &lt;code&gt;git log&lt;/code&gt;.</source>
          <target state="translated">Esto usa la misma notaci&amp;oacute;n de rango de dos puntos que vimos anteriormente con &lt;code&gt;git log&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="94dc29f5a82c88ac8ea06389eebe7535e89a6fb1" translate="yes" xml:space="preserve">
          <source>This value is true by default in a repository that has a working directory associated with it, and false by default in a bare repository.</source>
          <target state="translated">Este valor es true por defecto en un repositorio que tiene un directorio de trabajo asociado,y false por defecto en un repositorio desnudo.</target>
        </trans-unit>
        <trans-unit id="73a34f84ecc165ae3643b28ecca4c6c41f197412" translate="yes" xml:space="preserve">
          <source>This variable can be used to restrict the permission bits of tar archive entries. The default is 0002, which turns off the world write bit. The special value &quot;user&quot; indicates that the archiving user&amp;rsquo;s umask will be used instead. See umask(2) and &lt;a href=&quot;git-archive&quot;&gt;git-archive[1]&lt;/a&gt;.</source>
          <target state="translated">Esta variable se puede utilizar para restringir los bits de permiso de las entradas del archivo tar. El valor predeterminado es 0002, que desactiva el bit de escritura mundial. El valor especial &quot;usuario&quot; indica que se utilizar&amp;aacute; en su lugar la umask del usuario de archivo. Consulte umask (2) y &lt;a href=&quot;git-archive&quot;&gt;git-archive [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="63a384d932515032afb2060852ce18cd5598c9ca" translate="yes" xml:space="preserve">
          <source>This variable can be used to restrict the permission bits of tar archive entries. The default is 0002, which turns off the world write bit. The special value &quot;user&quot; indicates that the archiving user&amp;rsquo;s umask will be used instead. See umask(2) for details. If &lt;code&gt;--remote&lt;/code&gt; is used then only the configuration of the remote repository takes effect.</source>
          <target state="translated">Esta variable se puede utilizar para restringir los bits de permiso de las entradas del archivo tar. El valor predeterminado es 0002, que desactiva el bit de escritura mundial. El valor especial &quot;usuario&quot; indica que se utilizar&amp;aacute; en su lugar la umask del usuario de archivo. Consulte umask (2) para obtener m&amp;aacute;s detalles. Si se usa &lt;code&gt;--remote&lt;/code&gt; ,solo se aplicar&amp;aacute; la configuraci&amp;oacute;n del repositorio remoto.</target>
        </trans-unit>
        <trans-unit id="0afce327e7d4311118de1c5dc2faa8fa7a291053" translate="yes" xml:space="preserve">
          <source>This variable controls the event target destination. It may be overridden by the &lt;code&gt;GIT_TRACE2_EVENT&lt;/code&gt; environment variable. The following table shows possible values.</source>
          <target state="translated">Esta variable controla el destino del evento. Puede ser anulado por la variable de entorno &lt;code&gt;GIT_TRACE2_EVENT&lt;/code&gt; . La siguiente tabla muestra los posibles valores.</target>
        </trans-unit>
        <trans-unit id="b3073c2a2c3930628fae47eb515e2fe5729910f0" translate="yes" xml:space="preserve">
          <source>This variable controls the normal target destination. It may be overridden by the &lt;code&gt;GIT_TRACE2&lt;/code&gt; environment variable. The following table shows possible values.</source>
          <target state="translated">Esta variable controla el destino objetivo normal. Puede ser anulado por la variable de entorno &lt;code&gt;GIT_TRACE2&lt;/code&gt; . La siguiente tabla muestra los posibles valores.</target>
        </trans-unit>
        <trans-unit id="ab644894061fa15fc115b6d355d07c2965277303" translate="yes" xml:space="preserve">
          <source>This variable controls the performance target destination. It may be overridden by the &lt;code&gt;GIT_TRACE2_PERF&lt;/code&gt; environment variable. The following table shows possible values.</source>
          <target state="translated">Esta variable controla el destino del objetivo de rendimiento. Puede ser anulado por la variable de entorno &lt;code&gt;GIT_TRACE2_PERF&lt;/code&gt; . La siguiente tabla muestra los posibles valores.</target>
        </trans-unit>
        <trans-unit id="53008d90e6aae985c2e7839a77d7b54894ce429e" translate="yes" xml:space="preserve">
          <source>This variable controls the sort ordering of branches when displayed by &lt;a href=&quot;git-branch&quot;&gt;git-branch[1]&lt;/a&gt;. Without the &quot;--sort=&amp;lt;value&amp;gt;&quot; option provided, the value of this variable will be used as the default. See &lt;a href=&quot;git-for-each-ref&quot;&gt;git-for-each-ref[1]&lt;/a&gt; field names for valid values.</source>
          <target state="translated">Esta variable controla el orden de clasificaci&amp;oacute;n de las ramas cuando las muestra &lt;a href=&quot;git-branch&quot;&gt;git-branch [1]&lt;/a&gt; . Sin la opci&amp;oacute;n &quot;--sort = &amp;lt;valor&amp;gt;&quot; proporcionada, el valor de esta variable se utilizar&amp;aacute; como predeterminado. Consulte los nombres de campo de &lt;a href=&quot;git-for-each-ref&quot;&gt;git-for-each-ref [1]&lt;/a&gt; para conocer los valores v&amp;aacute;lidos.</target>
        </trans-unit>
        <trans-unit id="ea1c7eb75a360c1f9f69915dbc32e427ddfb7ced" translate="yes" xml:space="preserve">
          <source>This variable controls the sort ordering of tags when displayed by &lt;a href=&quot;git-tag&quot;&gt;git-tag[1]&lt;/a&gt;. Without the &quot;--sort=&amp;lt;value&amp;gt;&quot; option provided, the value of this variable will be used as the default.</source>
          <target state="translated">Esta variable controla el orden de clasificaci&amp;oacute;n de las etiquetas cuando se muestran mediante &lt;a href=&quot;git-tag&quot;&gt;git-tag [1]&lt;/a&gt; . Sin la opci&amp;oacute;n &quot;--sort = &amp;lt;valor&amp;gt;&quot; proporcionada, el valor de esta variable se utilizar&amp;aacute; como predeterminado.</target>
        </trans-unit>
        <trans-unit id="c2680b6925a4a160ca8f3fee892cc23ec9be5f4f" translate="yes" xml:space="preserve">
          <source>This variable determines the default value for variables such as &lt;code&gt;color.diff&lt;/code&gt; and &lt;code&gt;color.grep&lt;/code&gt; that control the use of color per command family. Its scope will expand as more commands learn configuration to set a default for the &lt;code&gt;--color&lt;/code&gt; option. Set it to &lt;code&gt;false&lt;/code&gt; or &lt;code&gt;never&lt;/code&gt; if you prefer Git commands not to use color unless enabled explicitly with some other configuration or the &lt;code&gt;--color&lt;/code&gt; option. Set it to &lt;code&gt;always&lt;/code&gt; if you want all output not intended for machine consumption to use color, to &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;auto&lt;/code&gt; (this is the default since Git 1.8.4) if you want such output to use color when written to the terminal.</source>
          <target state="translated">Esta variable determina el valor predeterminado para variables como &lt;code&gt;color.diff&lt;/code&gt; y &lt;code&gt;color.grep&lt;/code&gt; que controlan el uso de color por familia de comandos. Su alcance se expandir&amp;aacute; a medida que m&amp;aacute;s comandos aprendan la configuraci&amp;oacute;n para establecer un valor predeterminado para la opci&amp;oacute;n &lt;code&gt;--color&lt;/code&gt; . Config&amp;uacute;relo en &lt;code&gt;false&lt;/code&gt; o &lt;code&gt;never&lt;/code&gt; si prefiere que los comandos de Git no usen color a menos que se habilite expl&amp;iacute;citamente con alguna otra configuraci&amp;oacute;n o la opci&amp;oacute;n &lt;code&gt;--color&lt;/code&gt; . Config&amp;uacute;relo en &lt;code&gt;always&lt;/code&gt; si desea que toda la salida que no est&amp;eacute; destinada al consumo de la m&amp;aacute;quina use color, en &lt;code&gt;true&lt;/code&gt; o &lt;code&gt;auto&lt;/code&gt; m&amp;aacute;tico (este es el valor predeterminado desde Git 1.8.4) si desea que dicha salida use color cuando se escriba en el terminal.</target>
        </trans-unit>
        <trans-unit id="2eb6f1e33d90fc7fb4373fa1793932292fbc650d" translate="yes" xml:space="preserve">
          <source>This variable is the same as &lt;code&gt;transfer.hideRefs&lt;/code&gt;, but applies only to &lt;code&gt;receive-pack&lt;/code&gt; (and so affects pushes, but not fetches). An attempt to update or delete a hidden ref by &lt;code&gt;git push&lt;/code&gt; is rejected.</source>
          <target state="translated">Esta variable es la misma que &lt;code&gt;transfer.hideRefs&lt;/code&gt; , pero se aplica solo al &lt;code&gt;receive-pack&lt;/code&gt; (y por lo tanto afecta a los empujes, pero no a las recuperaciones). Se rechaza un intento de actualizar o eliminar una referencia oculta mediante &lt;code&gt;git push&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="763a368531eb9d8bc40e93c6334e049f21620c45" translate="yes" xml:space="preserve">
          <source>This variable is the same as &lt;code&gt;transfer.hideRefs&lt;/code&gt;, but applies only to &lt;code&gt;upload-pack&lt;/code&gt; (and so affects only fetches, not pushes). An attempt to fetch a hidden ref by &lt;code&gt;git fetch&lt;/code&gt; will fail. See also &lt;code&gt;uploadpack.allowTipSHA1InWant&lt;/code&gt;.</source>
          <target state="translated">Esta variable es la misma que &lt;code&gt;transfer.hideRefs&lt;/code&gt; , pero se aplica solo a &lt;code&gt;upload-pack&lt;/code&gt; (y por lo tanto afecta solo a las recuperaciones, no a los empujes). Un intento de obtener una referencia oculta mediante &lt;code&gt;git fetch&lt;/code&gt; fallar&amp;aacute;. Consulte tambi&amp;eacute;n &lt;code&gt;uploadpack.allowTipSHA1InWant&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="75aa35a44ffd767e8a239dc01347d150ce1e39ed" translate="yes" xml:space="preserve">
          <source>This variable matters only when using persistent web environments that serve multiple requests using single gitweb instance, like mod_perl, FastCGI or Plackup.</source>
          <target state="translated">Esta variable sólo importa cuando se usan entornos web persistentes que sirven múltiples peticiones usando una sola instancia gitweb,como mod_perl,FastCGI o Plackup.</target>
        </trans-unit>
        <trans-unit id="c0526214b5c55d639fefd6a92d93b97ec2455930" translate="yes" xml:space="preserve">
          <source>This variable specifies a shell command through which the tar output generated by &lt;code&gt;git archive&lt;/code&gt; should be piped. The command is executed using the shell with the generated tar file on its standard input, and should produce the final output on its standard output. Any compression-level options will be passed to the command (e.g., &quot;-9&quot;). An output file with the same extension as &lt;code&gt;&amp;lt;format&amp;gt;&lt;/code&gt; will be use this format if no other format is given.</source>
          <target state="translated">Esta variable especifica un comando de shell a trav&amp;eacute;s del cual se debe canalizar la salida tar generada por el &lt;code&gt;git archive&lt;/code&gt; . El comando se ejecuta usando el shell con el archivo tar generado en su entrada est&amp;aacute;ndar y deber&amp;iacute;a producir la salida final en su salida est&amp;aacute;ndar. Cualquier opci&amp;oacute;n de nivel de compresi&amp;oacute;n se pasar&amp;aacute; al comando (por ejemplo, &quot;-9&quot;). Un archivo de salida con la misma extensi&amp;oacute;n que &lt;code&gt;&amp;lt;format&amp;gt;&lt;/code&gt; utilizar&amp;aacute; este formato si no se proporciona ning&amp;uacute;n otro formato.</target>
        </trans-unit>
        <trans-unit id="99ffcf0d1fc58b3934082bac9786637cf3a8cdad" translate="yes" xml:space="preserve">
          <source>This view is similar to &lt;code&gt;shortlog&lt;/code&gt; view.</source>
          <target state="translated">Esta vista es similar a la vista de &lt;code&gt;shortlog&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="16ae6576174eeb48325f0bfa3042bcb20d29d417" translate="yes" xml:space="preserve">
          <source>This was not the case in the initial release of this feature in v2.13.0, which only matched the realpath version. Configuration that wants to be compatible with the initial release of this feature needs to either specify only the realpath version, or both versions.</source>
          <target state="translated">No fue así en el lanzamiento inicial de esta característica en la v2.13.0,que sólo coincidía con la versión de realpath.La configuración que quiere ser compatible con la versión inicial de esta característica necesita especificar sólo la versión de realpath,o ambas versiones.</target>
        </trans-unit>
        <trans-unit id="7c8d457b197b5558b7abfe068bcd1974205f94ad" translate="yes" xml:space="preserve">
          <source>This was optional in prior versions of git, but now it is the default. You can use &lt;code&gt;--no-utf8&lt;/code&gt; to override this.</source>
          <target state="translated">Esto era opcional en versiones anteriores de git, pero ahora es el predeterminado. Puede usar &lt;code&gt;--no-utf8&lt;/code&gt; para anular esto.</target>
        </trans-unit>
        <trans-unit id="314df942d006c94c85d3e8c8bfe0a0b8ef8308d1" translate="yes" xml:space="preserve">
          <source>This will again prompt you for a message describing the change, and then record a new version of the project.</source>
          <target state="translated">Esto le pedirá de nuevo un mensaje que describa el cambio,y luego grabará una nueva versión del proyecto.</target>
        </trans-unit>
        <trans-unit id="53cca56aaa41c3093032e1d720cb620b22717e06" translate="yes" xml:space="preserve">
          <source>This will cache the result of running &quot;exif&quot; on each blob indefinitely. If you change the textconv config variable for a diff driver, Git will automatically invalidate the cache entries and re-run the textconv filter. If you want to invalidate the cache manually (e.g., because your version of &quot;exif&quot; was updated and now produces better output), you can remove the cache manually with &lt;code&gt;git update-ref -d refs/notes/textconv/jpg&lt;/code&gt; (where &quot;jpg&quot; is the name of the diff driver, as in the example above).</source>
          <target state="translated">Esto almacenar&amp;aacute; en cach&amp;eacute; el resultado de ejecutar &quot;exif&quot; en cada blob de forma indefinida. Si cambia la variable de configuraci&amp;oacute;n textconv para un controlador diff, Git invalidar&amp;aacute; autom&amp;aacute;ticamente las entradas de la cach&amp;eacute; y volver&amp;aacute; a ejecutar el filtro textconv. Si desea invalidar el cach&amp;eacute; manualmente (por ejemplo, porque su versi&amp;oacute;n de &quot;exif&quot; se actualiz&amp;oacute; y ahora produce un mejor resultado), puede eliminar el cach&amp;eacute; manualmente con &lt;code&gt;git update-ref -d refs/notes/textconv/jpg&lt;/code&gt; (donde &quot; jpg &quot;es el nombre del controlador de diferencias, como en el ejemplo anterior).</target>
        </trans-unit>
        <trans-unit id="3d17cc7dd2b4aac7e00ecd2628dbb99eefd074c7" translate="yes" xml:space="preserve">
          <source>This will cause Git to generate &lt;code&gt;Binary files differ&lt;/code&gt; (or a binary patch, if binary patches are enabled) instead of a regular diff.</source>
          <target state="translated">Esto har&amp;aacute; que Git genere &lt;code&gt;Binary files differ&lt;/code&gt; (o un parche binario, si los parches binarios est&amp;aacute;n habilitados) en lugar de un diff normal.</target>
        </trans-unit>
        <trans-unit id="dac66330b2bd98fcf90352c4cbeba694c8f4feb3" translate="yes" xml:space="preserve">
          <source>This will check out the currently cached copy of &lt;code&gt;Makefile&lt;/code&gt; into the file &lt;code&gt;.merged-Makefile&lt;/code&gt;.</source>
          <target state="translated">Esto verificar&amp;aacute; la copia actualmente en cach&amp;eacute; de &lt;code&gt;Makefile&lt;/code&gt; en el archivo &lt;code&gt;.merged-Makefile&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9acb73cd9d17d8ef0d5dfd6af35ea9d0a50c12ab" translate="yes" xml:space="preserve">
          <source>This will create a new commit which undoes the change in HEAD. You will be given a chance to edit the commit message for the new commit.</source>
          <target state="translated">Esto creará un nuevo compromiso que deshace el cambio en CABEZA.Se te dará la oportunidad de editar el mensaje de confirmación para la nueva confirmación.</target>
        </trans-unit>
        <trans-unit id="85437cd96f5cff3dd194d542498fd954d1bf1e01" translate="yes" xml:space="preserve">
          <source>This will define a remote called &quot;origin&quot; in the resulting repository that lets you fetch and pull from the bundle. The $GIT_DIR/config file in R2 will have an entry like this:</source>
          <target state="translated">Esto definirá un remoto llamado &quot;origen&quot; en el repositorio resultante que le permite buscar y sacar del paquete.El archivo $GIT_DIR/config en R2 tendrá una entrada como esta:</target>
        </trans-unit>
        <trans-unit id="2986121c6e711f05b2ed0ba772dedbd8c66503ff" translate="yes" xml:space="preserve">
          <source>This will error out if $REV is empty or not a valid revision.</source>
          <target state="translated">Esto será un error si $REV está vacío o no es una revisión válida.</target>
        </trans-unit>
        <trans-unit id="c8b7e8566771f37a03bc25eaec95675ffe82ba31" translate="yes" xml:space="preserve">
          <source>This will export the whole repository and import it into the existing empty repository. Except for reencoding commits that are not in UTF-8, it would be a one-to-one mirror.</source>
          <target state="translated">Esto exportará todo el depósito y lo importará al depósito vacío existente.Excepto por las confirmaciones de recodificación que no están en UTF-8,sería un espejo uno a uno.</target>
        </trans-unit>
        <trans-unit id="5f851e29f67384fe2f487309701055635453a02c" translate="yes" xml:space="preserve">
          <source>This will list what commits you must have in order to extract from the bundle and will error out if you do not have them.</source>
          <target state="translated">Esto listará los compromisos que debe tener para extraer del paquete y dará un error si no los tiene.</target>
        </trans-unit>
        <trans-unit id="7ed8616207d4b6e51bdcbe1e7b524863a0139782" translate="yes" xml:space="preserve">
          <source>This will open your editor with a list of steps to be taken to perform your rebase.</source>
          <target state="translated">Esto abrirá su editor con una lista de pasos a seguir para realizar su rebase.</target>
        </trans-unit>
        <trans-unit id="e9e68cbb3d1c11da9ad7575ebecc630d58996f10" translate="yes" xml:space="preserve">
          <source>This will prompt you for a commit message. You&amp;rsquo;ve now stored the first version of your project in Git.</source>
          <target state="translated">Esto le pedir&amp;aacute; un mensaje de confirmaci&amp;oacute;n. Ahora ha almacenado la primera versi&amp;oacute;n de su proyecto en Git.</target>
        </trans-unit>
        <trans-unit id="9229da0c83ee0b71f5a22085b5f3b7e07e9ec55a" translate="yes" xml:space="preserve">
          <source>This will remove each of your commits from mywork, temporarily saving them as patches (in a directory named &lt;code&gt;.git/rebase-apply&lt;/code&gt;), update mywork to point at the latest version of origin, then apply each of the saved patches to the new mywork. The result will look like:</source>
          <target state="translated">Esto eliminar&amp;aacute; cada una de sus confirmaciones de mywork, guard&amp;aacute;ndolas temporalmente como parches (en un directorio llamado &lt;code&gt;.git/rebase-apply&lt;/code&gt; ), actualizar&amp;aacute; mywork para que apunte a la &amp;uacute;ltima versi&amp;oacute;n de origen, luego aplicar&amp;aacute; cada uno de los parches guardados al nuevo mywork. . El resultado se ver&amp;aacute; as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="1c98be5284d00528a6b74a33ba778d044a767668" translate="yes" xml:space="preserve">
          <source>This will result in only b (a and c are cleared).</source>
          <target state="translated">Esto resultará en que sólo b (a y c están despejadas).</target>
        </trans-unit>
        <trans-unit id="0385ed25689cd3e1167020ff6e8ba549d1603871" translate="yes" xml:space="preserve">
          <source>This will set the property &lt;code&gt;svn:keywords&lt;/code&gt; to &lt;code&gt;FreeBSD=%H&lt;/code&gt; for the file &lt;code&gt;devel/py-tipper/Makefile&lt;/code&gt;.</source>
          <target state="translated">Esto establecer&amp;aacute; la propiedad &lt;code&gt;svn:keywords&lt;/code&gt; en &lt;code&gt;FreeBSD=%H&lt;/code&gt; para el archivo &lt;code&gt;devel/py-tipper/Makefile&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="61383e31770f578e5ee86310440dccd09a4e5008" translate="yes" xml:space="preserve">
          <source>This will show &quot;refs/heads/master&quot; but also &quot;refs/remote/other-repo/master&quot;, if such references exists.</source>
          <target state="translated">Esto mostrará &quot;refs/heads/master&quot; pero también &quot;refs/remote/other-repo/master&quot;,si existen tales referencias.</target>
        </trans-unit>
        <trans-unit id="23dd2de32c54566f1df1adf9f6794600102b9c2b" translate="yes" xml:space="preserve">
          <source>This will start to clean, and you must confirm one by one in order to delete items. Please note that this action is not as efficient as the above two actions.</source>
          <target state="translated">Esto comenzará a limpiarse,y debes confirmar uno por uno para poder borrar los elementos.Tenga en cuenta que esta acción no es tan eficiente como las dos anteriores.</target>
        </trans-unit>
        <trans-unit id="9b7bbd24afc1c6a470a80ef47d5171b33809ea28" translate="yes" xml:space="preserve">
          <source>This works for any of the supported update procedures (&lt;code&gt;--checkout&lt;/code&gt;, &lt;code&gt;--rebase&lt;/code&gt;, etc.). The only change is the source of the target SHA-1. For example, &lt;code&gt;submodule update --remote --merge&lt;/code&gt; will merge upstream submodule changes into the submodules, while &lt;code&gt;submodule update
--merge&lt;/code&gt; will merge superproject gitlink changes into the submodules.</source>
          <target state="translated">Esto funciona para cualquiera de los procedimientos de actualizaci&amp;oacute;n admitidos ( &lt;code&gt;--checkout&lt;/code&gt; , &lt;code&gt;--rebase&lt;/code&gt; , etc.). El &amp;uacute;nico cambio es el origen del SHA-1 de destino. Por ejemplo, la &lt;code&gt;submodule update --remote --merge&lt;/code&gt; fusionar&amp;aacute; los cambios de los subm&amp;oacute;dulos ascendentes en los subm&amp;oacute;dulos, mientras que la &lt;code&gt;submodule update --merge&lt;/code&gt; fusionar&amp;aacute; los cambios del superproyecto gitlink en los subm&amp;oacute;dulos.</target>
        </trans-unit>
        <trans-unit id="5a2ee7840b76b59e3aede30738fb578b292bc5f3" translate="yes" xml:space="preserve">
          <source>This works similarly to &lt;code&gt;svn update&lt;/code&gt; or &lt;code&gt;git pull&lt;/code&gt; except that it preserves linear history with &lt;code&gt;git rebase&lt;/code&gt; instead of &lt;code&gt;git merge&lt;/code&gt; for ease of dcommitting with &lt;code&gt;git svn&lt;/code&gt;.</source>
          <target state="translated">Esto funciona de manera similar a &lt;code&gt;svn update&lt;/code&gt; o &lt;code&gt;git pull&lt;/code&gt; , excepto que conserva el historial lineal con &lt;code&gt;git rebase&lt;/code&gt; en lugar de &lt;code&gt;git merge&lt;/code&gt; para facilitar el dcommitting con &lt;code&gt;git svn&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5bc6c0e59c3e651570d66e12101e9a57040fd659" translate="yes" xml:space="preserve">
          <source>This would leave only one merge commit when your topic branch is finally ready and merged into the master branch. This merge would require you to resolve the conflict, introduced by the commits marked with &lt;code&gt;*&lt;/code&gt;. However, this conflict is often the same conflict you resolved when you created the test merge you blew away. &lt;code&gt;git rerere&lt;/code&gt; helps you resolve this final conflicted merge using the information from your earlier hand resolve.</source>
          <target state="translated">Esto dejar&amp;iacute;a solo una confirmaci&amp;oacute;n de fusi&amp;oacute;n cuando su rama de tema finalmente est&amp;eacute; lista y fusionada con la rama maestra. Esta fusi&amp;oacute;n requerir&amp;iacute;a que resolviera el conflicto, introducido por las confirmaciones marcadas con &lt;code&gt;*&lt;/code&gt; . Sin embargo, este conflicto suele ser el mismo que resolvi&amp;oacute; cuando cre&amp;oacute; la combinaci&amp;oacute;n de prueba que elimin&amp;oacute;. &lt;code&gt;git rerere&lt;/code&gt; te ayuda a resolver esta fusi&amp;oacute;n final en conflicto utilizando la informaci&amp;oacute;n de tu resoluci&amp;oacute;n manual anterior.</target>
        </trans-unit>
        <trans-unit id="dcd6f908de988995d9fff4cafd75d14bc0785c1a" translate="yes" xml:space="preserve">
          <source>This would leave the merge result in &lt;code&gt;hello.c~2&lt;/code&gt; file, along with conflict markers if there are conflicts. After verifying the merge result makes sense, you can tell Git what the final merge result for this file is by:</source>
          <target state="translated">Esto dejar&amp;iacute;a el resultado de la fusi&amp;oacute;n en el archivo &lt;code&gt;hello.c~2&lt;/code&gt; , junto con marcadores de conflicto si hay conflictos. Despu&amp;eacute;s de verificar que el resultado de la combinaci&amp;oacute;n tiene sentido, puede decirle a Git cu&amp;aacute;l es el resultado final de la combinaci&amp;oacute;n para este archivo de la siguiente manera:</target>
        </trans-unit>
        <trans-unit id="cf5b7c750a4b16617dfd7cff20be48990a9d7985" translate="yes" xml:space="preserve">
          <source>This:</source>
          <target state="translated">This:</target>
        </trans-unit>
        <trans-unit id="ee3cacca7314105556d3050112f523980e59f973" translate="yes" xml:space="preserve">
          <source>Those snapshots aren&amp;rsquo;t necessarily all arranged in a single line from oldest to newest; instead, work may simultaneously proceed along parallel lines of development, called &lt;a href=&quot;#def_branch&quot;&gt;branches&lt;/a&gt;, which may merge and diverge.</source>
          <target state="translated">Esas instant&amp;aacute;neas no est&amp;aacute;n necesariamente organizadas en una sola l&amp;iacute;nea, de la m&amp;aacute;s antigua a la m&amp;aacute;s reciente; en cambio, el trabajo puede avanzar simult&amp;aacute;neamente a lo largo de l&amp;iacute;neas paralelas de desarrollo, llamadas &lt;a href=&quot;#def_branch&quot;&gt;ramas&lt;/a&gt; , que pueden fusionarse y divergir.</target>
        </trans-unit>
        <trans-unit id="7a5a53a50d0fbac4f3a27d9d2d5853146557d940" translate="yes" xml:space="preserve">
          <source>Though not required, it&amp;rsquo;s a good idea to begin the commit message with a single short (less than 50 character) line summarizing the change, followed by a blank line and then a more thorough description. The text up to the first blank line in a commit message is treated as the commit title, and that title is used throughout Git. For example, &lt;a href=&quot;git-format-patch&quot;&gt;git-format-patch[1]&lt;/a&gt; turns a commit into email, and it uses the title on the Subject line and the rest of the commit in the body.</source>
          <target state="translated">Aunque no es obligatorio, es una buena idea comenzar el mensaje de confirmaci&amp;oacute;n con una sola l&amp;iacute;nea corta (menos de 50 caracteres) que resuma el cambio, seguida de una l&amp;iacute;nea en blanco y luego una descripci&amp;oacute;n m&amp;aacute;s completa. El texto hasta la primera l&amp;iacute;nea en blanco en un mensaje de confirmaci&amp;oacute;n se trata como el t&amp;iacute;tulo de la confirmaci&amp;oacute;n, y ese t&amp;iacute;tulo se usa en todo Git. Por ejemplo, &lt;a href=&quot;git-format-patch&quot;&gt;git-format-patch [1]&lt;/a&gt; convierte una confirmaci&amp;oacute;n en correo electr&amp;oacute;nico y usa el t&amp;iacute;tulo en la l&amp;iacute;nea Asunto y el resto de la confirmaci&amp;oacute;n en el cuerpo.</target>
        </trans-unit>
        <trans-unit id="fdd6ea0498f5dbe48e6926bc8c91e77146fa2184" translate="yes" xml:space="preserve">
          <source>Though, according to Wikipedia &lt;a href=&quot;#3&quot;&gt;[3]&lt;/a&gt;:</source>
          <target state="translated">Aunque, seg&amp;uacute;n Wikipedia &lt;a href=&quot;#3&quot;&gt;[3]&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="18c9e3ce5bbbf77af11ba41f4d7a7d9b7a1aaa55" translate="yes" xml:space="preserve">
          <source>Thread Events</source>
          <target state="translated">Eventos de los hilos</target>
        </trans-unit>
        <trans-unit id="8850eee2783cf53d0af71d524467316d7d06a850" translate="yes" xml:space="preserve">
          <source>Thread messages added to a thread-proc.</source>
          <target state="translated">Mensajes de hilo añadidos a un thread-proc.</target>
        </trans-unit>
        <trans-unit id="1501e9d814d273ed34cc6b50f1b5e25add4ac049" translate="yes" xml:space="preserve">
          <source>Three other shorthands exist, particularly useful for merge commits, for naming a set that is formed by a commit and its parent commits.</source>
          <target state="translated">Existen otras tres abreviaturas,particularmente útiles para los commits de fusión,para nombrar un conjunto que se forma por un commit y su padre se compromete.</target>
        </trans-unit>
        <trans-unit id="8e23a87c8354d34eb4b513798d76048267e22ae4" translate="yes" xml:space="preserve">
          <source>Three steps:</source>
          <target state="translated">Tres pasos:</target>
        </trans-unit>
        <trans-unit id="cf3d01be00b3333c6ca36b4d1bb0a1a1c357a43f" translate="yes" xml:space="preserve">
          <source>Throw-away integration</source>
          <target state="translated">La integración de los desechos</target>
        </trans-unit>
        <trans-unit id="c4780f4837eebde8ca1de31df251ef05e2361eb2" translate="yes" xml:space="preserve">
          <source>Thunderbird</source>
          <target state="translated">Thunderbird</target>
        </trans-unit>
        <trans-unit id="d5e84648e0355ba1080675ff57a3c64a03a76a7c" translate="yes" xml:space="preserve">
          <source>Thunderbird in particular is known to be problematic. Thunderbird users may wish to visit this web page for more information: &lt;a href=&quot;http://kb.mozillazine.org/Plain_text_e-mail_-_Thunderbird#Completely_plain_email&quot;&gt;http://kb.mozillazine.org/Plain_text_e-mail_-_Thunderbird#Completely_plain_email&lt;/a&gt;</source>
          <target state="translated">Thunderbird en particular es conocido por ser problem&amp;aacute;tico. Los usuarios de Thunderbird pueden desear visitar esta p&amp;aacute;gina web para obtener m&amp;aacute;s informaci&amp;oacute;n: &lt;a href=&quot;http://kb.mozillazine.org/Plain_text_e-mail_-_Thunderbird#Completely_plain_email&quot;&gt;http://kb.mozillazine.org/Plain_text_e-mail_-_Thunderbird#Completely_plain_email&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="da473e9b687406079cfbc2672fddb50595865b5d" translate="yes" xml:space="preserve">
          <source>Thus we see that this tree has one file in it. The SHA-1 hash is a reference to that file&amp;rsquo;s data:</source>
          <target state="translated">Por tanto, vemos que este &amp;aacute;rbol tiene un archivo. El hash SHA-1 es una referencia a los datos de ese archivo:</target>
        </trans-unit>
        <trans-unit id="309fb29079c2e5019b9d34cb235aee0452735a40" translate="yes" xml:space="preserve">
          <source>Thus you can, e.g., turn a library subdirectory into a repository of its own. Note the &lt;code&gt;--&lt;/code&gt; that separates &lt;code&gt;filter-branch&lt;/code&gt; options from revision options, and the &lt;code&gt;--all&lt;/code&gt; to rewrite all branches and tags.</source>
          <target state="translated">Por lo tanto, puede, por ejemplo, convertir un subdirectorio de biblioteca en un repositorio propio. Tenga en cuenta el &lt;code&gt;--&lt;/code&gt; que separa &lt;code&gt;filter-branch&lt;/code&gt; opciones de rama de filtro de las opciones de revisi&amp;oacute;n, y el &lt;code&gt;--all&lt;/code&gt; para reescribir todas las ramas y etiquetas.</target>
        </trans-unit>
        <trans-unit id="d35ca4f0ad7715e9f69a7f979c2424eb99273503" translate="yes" xml:space="preserve">
          <source>Thus, the following command:</source>
          <target state="translated">Por lo tanto,el siguiente comando:</target>
        </trans-unit>
        <trans-unit id="77cc1ec67e1af48d92e062ee397960be200bdf58" translate="yes" xml:space="preserve">
          <source>Thus, we can provide O(log N) lookup time for any number of packfiles.</source>
          <target state="translated">Por lo tanto,podemos proporcionar tiempo de búsqueda de O(log N)para cualquier número de archivos de paquetes.</target>
        </trans-unit>
        <trans-unit id="ae19d34e63a0724afdaaeabe3d0fe80af7f9e778" translate="yes" xml:space="preserve">
          <source>Time and date specified by the ISO 8601 standard, for example &lt;code&gt;2005-04-07T22:13:13&lt;/code&gt;. The parser accepts a space instead of the &lt;code&gt;T&lt;/code&gt; character as well.</source>
          <target state="translated">Hora y fecha especificadas por la norma ISO 8601, por ejemplo &lt;code&gt;2005-04-07T22:13:13&lt;/code&gt; . El analizador tambi&amp;eacute;n acepta un espacio en lugar del car&amp;aacute;cter &lt;code&gt;T&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3919d9be78625e6edbfd2764a9b0e03204c6c677" translate="yes" xml:space="preserve">
          <source>Time and date specified by the ISO 8601 standard, for example &lt;code&gt;2005-04-07T22:13:13&lt;/code&gt;. The parser accepts a space instead of the &lt;code&gt;T&lt;/code&gt; character as well. Fractional parts of a second will be ignored, for example &lt;code&gt;2005-04-07T22:13:13.019&lt;/code&gt; will be treated as &lt;code&gt;2005-04-07T22:13:13&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bac72478f018c225224e8417f521a2dad6209d3" translate="yes" xml:space="preserve">
          <source>Time zone values can be &quot;local&quot; (for local time zone that browser uses), &quot;utc&quot; (what gitweb uses when JavaScript or this feature is disabled), or numerical time zones in the form of &quot;+/-HHMM&quot;, such as &quot;+0200&quot;.</source>
          <target state="translated">Los valores de la zona horaria pueden ser &quot;local&quot; (para la zona horaria local que utiliza el navegador),&quot;utc&quot; (lo que gitweb utiliza cuando JavaScript o esta característica está desactivada),o zonas horarias numéricas en forma de &quot;+/-HHMM&quot;,como &quot;+0200&quot;.</target>
        </trans-unit>
        <trans-unit id="396a560fd1658574279d941c34737eda5359f4fc" translate="yes" xml:space="preserve">
          <source>Timeout (in seconds) between the moment the connection is established and the client request is received (typically a rather low value, since that should be basically immediate).</source>
          <target state="translated">Tiempo de espera (en segundos)entre el momento en que se establece la conexión y se recibe la solicitud del cliente (normalmente un valor bastante bajo,ya que debería ser básicamente inmediato).</target>
        </trans-unit>
        <trans-unit id="0ae2f4dfeb0fa0aaf2833b3c271308d2190a4162" translate="yes" xml:space="preserve">
          <source>Timeout (in seconds) for specific client sub-requests. This includes the time it takes for the server to process the sub-request and the time spent waiting for the next client&amp;rsquo;s request.</source>
          <target state="translated">Tiempo de espera (en segundos) para sub-solicitudes de clientes espec&amp;iacute;ficas. Esto incluye el tiempo que tarda el servidor en procesar la sub-solicitud y el tiempo dedicado a esperar la solicitud del siguiente cliente.</target>
        </trans-unit>
        <trans-unit id="ad6b83abe0aada0e5e6aec8e7e7470429fd4ee37" translate="yes" xml:space="preserve">
          <source>Tips and tricks</source>
          <target state="translated">Consejos y trucos</target>
        </trans-unit>
        <trans-unit id="d7242682d2f91b131962f45ed3706e536d3cdcc6" translate="yes" xml:space="preserve">
          <source>To &lt;a href=&quot;#def_merge&quot;&gt;merge&lt;/a&gt; more than two &lt;a href=&quot;#def_branch&quot;&gt;branches&lt;/a&gt;.</source>
          <target state="translated">Para &lt;a href=&quot;#def_merge&quot;&gt;combinar&lt;/a&gt; m&amp;aacute;s de dos &lt;a href=&quot;#def_branch&quot;&gt;ramas&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f7305ba472ceab96976009902e7b731f8e52f311" translate="yes" xml:space="preserve">
          <source>To access refs, it&amp;rsquo;s best not to look inside &lt;code&gt;$GIT_DIR&lt;/code&gt; directly. Instead use commands such as &lt;a href=&quot;git-rev-parse&quot;&gt;git-rev-parse[1]&lt;/a&gt; or &lt;a href=&quot;git-update-ref&quot;&gt;git-update-ref[1]&lt;/a&gt; which will handle refs correctly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c181af3380fe2a4df836df7796a5de6ef8d47c5" translate="yes" xml:space="preserve">
          <source>To access refs, it&amp;rsquo;s best not to look inside GIT_DIR directly. Instead use commands such as &lt;a href=&quot;git-rev-parse&quot;&gt;git-rev-parse[1]&lt;/a&gt; or &lt;a href=&quot;git-update-ref&quot;&gt;git-update-ref[1]&lt;/a&gt; which will handle refs correctly.</source>
          <target state="translated">Para acceder a las referencias, es mejor no mirar dentro de GIT_DIR directamente. En su lugar, use comandos como &lt;a href=&quot;git-rev-parse&quot;&gt;git-rev-parse [1]&lt;/a&gt; o &lt;a href=&quot;git-update-ref&quot;&gt;git-update-ref [1]&lt;/a&gt; que manejar&amp;aacute;n las referencias correctamente.</target>
        </trans-unit>
        <trans-unit id="bdc5ec95e827bdeffd1f9aab0bef5dd1e05d0443" translate="yes" xml:space="preserve">
          <source>To achieve this, try to split your work into small steps from the very beginning. It is always easier to squash a few commits together than to split one big commit into several. Don&amp;rsquo;t be afraid of making too small or imperfect steps along the way. You can always go back later and edit the commits with &lt;code&gt;git rebase --interactive&lt;/code&gt; before you publish them. You can use &lt;code&gt;git stash push --keep-index&lt;/code&gt; to run the test suite independent of other uncommitted changes; see the EXAMPLES section of &lt;a href=&quot;git-stash&quot;&gt;git-stash[1]&lt;/a&gt;.</source>
          <target state="translated">Para lograrlo, intente dividir su trabajo en peque&amp;ntilde;os pasos desde el principio. Siempre es m&amp;aacute;s f&amp;aacute;cil aplastar algunas confirmaciones juntas que dividir una gran confirmaci&amp;oacute;n en varias. No tenga miedo de dar pasos demasiado peque&amp;ntilde;os o imperfectos en el camino. Siempre puedes volver m&amp;aacute;s tarde y editar las confirmaciones con &lt;code&gt;git rebase --interactive&lt;/code&gt; antes de publicarlas. Puede usar &lt;code&gt;git stash push --keep-index&lt;/code&gt; para ejecutar el conjunto de pruebas independientemente de otros cambios no confirmados; consulte la secci&amp;oacute;n EJEMPLOS de &lt;a href=&quot;git-stash&quot;&gt;git-stash [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0fad63887775e60c970096082173b077cbcda459" translate="yes" xml:space="preserve">
          <source>To actually match only values with an exclamation mark, you have to</source>
          <target state="translated">Para hacer coincidir sólo los valores con un signo de exclamación,tienes que</target>
        </trans-unit>
        <trans-unit id="0fea0d3a69770ac7053eba17165f8f811c0d830f" translate="yes" xml:space="preserve">
          <source>To add a new proxy, without altering any of the existing ones, use</source>
          <target state="translated">Para añadir un nuevo proxy,sin alterar ninguno de los existentes,utilice</target>
        </trans-unit>
        <trans-unit id="6a37f3f129452efb4608e170beca8c23ff8dc189" translate="yes" xml:space="preserve">
          <source>To aid in debugging frontends fast-import ignores any line that begins with &lt;code&gt;#&lt;/code&gt; (ASCII pound/hash) up to and including the line ending &lt;code&gt;LF&lt;/code&gt;. A comment line may contain any sequence of bytes that does not contain an LF and therefore may be used to include any detailed debugging information that might be specific to the frontend and useful when inspecting a fast-import data stream.</source>
          <target state="translated">Para ayudar en la depuraci&amp;oacute;n de interfaces, la importaci&amp;oacute;n r&amp;aacute;pida ignora cualquier l&amp;iacute;nea que comience con &lt;code&gt;#&lt;/code&gt; (ASCII libra / hash) hasta e incluyendo la l&amp;iacute;nea que termina &lt;code&gt;LF&lt;/code&gt; . Una l&amp;iacute;nea de comentario puede contener cualquier secuencia de bytes que no contenga un LF y, por lo tanto, puede usarse para incluir cualquier informaci&amp;oacute;n de depuraci&amp;oacute;n detallada que pueda ser espec&amp;iacute;fica de la interfaz y &amp;uacute;til al inspeccionar un flujo de datos de importaci&amp;oacute;n r&amp;aacute;pida.</target>
        </trans-unit>
        <trans-unit id="285359187a2aff04e4ea763b2f3e4bbaf641190b" translate="yes" xml:space="preserve">
          <source>To assist in this, Git also provides the tag object&amp;hellip;​</source>
          <target state="translated">Para ayudar en esto, Git tambi&amp;eacute;n proporciona el objeto de etiqueta ...</target>
        </trans-unit>
        <trans-unit id="39ed0e01aa6b6521a62db21f8653937d0b5ccadd" translate="yes" xml:space="preserve">
          <source>To avoid common misconfiguration mistakes, &lt;a href=&quot;git-send-email&quot;&gt;git-send-email[1]&lt;/a&gt; will abort with a warning if any configuration options for &quot;sendmail&quot; exist. Set this variable to bypass the check.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0021f1eb05e23f63eb7ccc2f58c52546ee61585" translate="yes" xml:space="preserve">
          <source>To avoid deadlock, such frontends must completely consume any pending output from &lt;code&gt;progress&lt;/code&gt;, &lt;code&gt;ls&lt;/code&gt;, &lt;code&gt;get-mark&lt;/code&gt;, and &lt;code&gt;cat-blob&lt;/code&gt; before performing writes to fast-import that might block.</source>
          <target state="translated">Para evitar el punto muerto, dichas interfaces deben consumir por completo cualquier resultado pendiente de &lt;code&gt;progress&lt;/code&gt; , &lt;code&gt;ls&lt;/code&gt; , &lt;code&gt;get-mark&lt;/code&gt; y &lt;code&gt;cat-blob&lt;/code&gt; antes de realizar escrituras en la importaci&amp;oacute;n r&amp;aacute;pida que puedan bloquear.</target>
        </trans-unit>
        <trans-unit id="75e1daad195d404dc835c71216234df4a4676d4e" translate="yes" xml:space="preserve">
          <source>To avoid deleting a shared index file that is still used, its modification time is updated to the current time every time a new split index based on the shared index file is either created or read from.</source>
          <target state="translated">Para evitar la eliminación de un archivo de índice compartido que todavía se utiliza,su tiempo de modificación se actualiza a la hora actual cada vez que se crea o se lee un nuevo índice dividido basado en el archivo de índice compartido.</target>
        </trans-unit>
        <trans-unit id="0b95bb4f949904cf33707d2a81be23c345f8e5aa" translate="yes" xml:space="preserve">
          <source>To avoid false positives (e.g. when a patch has been removed, and an unrelated patch has been added between two iterations of the same patch series), the cost matrix is extended to allow for that, by adding fixed-cost entries for wholesale deletes/adds.</source>
          <target state="translated">Para evitar falsos positivos (por ejemplo,cuando se ha eliminado un parche y se ha añadido un parche no relacionado entre dos iteraciones de la misma serie de parches),la matriz de costos se amplía para tenerlo en cuenta,añadiendo entradas de costos fijos para eliminar/añadir al por mayor.</target>
        </trans-unit>
        <trans-unit id="0fd573776931ed5e5643654b60eb3896366ed973" translate="yes" xml:space="preserve">
          <source>To avoid interfering with other worktrees, it first enables the &lt;code&gt;extensions.worktreeConfig&lt;/code&gt; setting and makes sure to set the &lt;code&gt;core.sparseCheckout&lt;/code&gt; setting in the worktree-specific config file.</source>
          <target state="translated">Para evitar interferir con otros &amp;aacute;rboles de trabajo, primero habilita la configuraci&amp;oacute;n &lt;code&gt;extensions.worktreeConfig&lt;/code&gt; y se asegura de establecer la configuraci&amp;oacute;n &lt;code&gt;core.sparseCheckout&lt;/code&gt; en el archivo de configuraci&amp;oacute;n espec&amp;iacute;fico del &amp;aacute;rbol de trabajo.</target>
        </trans-unit>
        <trans-unit id="3c2082115575958e10a9c1afdaf9ab0c9127b12a" translate="yes" xml:space="preserve">
          <source>To avoid recording unrelated changes in the merge commit, &lt;code&gt;git pull&lt;/code&gt; and &lt;code&gt;git merge&lt;/code&gt; will also abort if there are any changes registered in the index relative to the &lt;code&gt;HEAD&lt;/code&gt; commit. (Special narrow exceptions to this rule may exist depending on which merge strategy is in use, but generally, the index must match HEAD.)</source>
          <target state="translated">Para evitar registrar cambios no relacionados en la confirmaci&amp;oacute;n de fusi&amp;oacute;n, &lt;code&gt;git pull&lt;/code&gt; y &lt;code&gt;git merge&lt;/code&gt; tambi&amp;eacute;n abortar&amp;aacute;n si hay alg&amp;uacute;n cambio registrado en el &amp;iacute;ndice relativo a la confirmaci&amp;oacute;n &lt;code&gt;HEAD&lt;/code&gt; . (Pueden existir excepciones estrechas especiales a esta regla seg&amp;uacute;n la estrategia de combinaci&amp;oacute;n que se est&amp;eacute; utilizando, pero en general, el &amp;iacute;ndice debe coincidir con HEAD).</target>
        </trans-unit>
        <trans-unit id="3066556f3c40d15744968614a5fc8c1e23bf8a7b" translate="yes" xml:space="preserve">
          <source>To avoid typing long email addresses, point this to one or more email aliases files. You must also supply &lt;code&gt;sendemail.aliasFileType&lt;/code&gt;.</source>
          <target state="translated">Para evitar escribir direcciones de correo electr&amp;oacute;nico largas, apunte esto a uno o m&amp;aacute;s archivos de alias de correo electr&amp;oacute;nico. Tambi&amp;eacute;n debe proporcionar &lt;code&gt;sendemail.aliasFileType&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c4b87fbf313d264308ea989e0e3b9a4c3d776c25" translate="yes" xml:space="preserve">
          <source>To bootstrap the process, you can first create a bundle that does not have any basis. You can use a tag to remember up to what commit you last processed, in order to make it easy to later update the other repository with an incremental bundle:</source>
          <target state="translated">Para iniciar el proceso,primero se puede crear un paquete que no tiene ninguna base.Puedes usar una etiqueta para recordar hasta qué confirmación procesaste por última vez,para facilitar la actualización posterior del otro repositorio con un paquete incremental:</target>
        </trans-unit>
        <trans-unit id="9d8840568125195e79747db7654d577582e9ce27" translate="yes" xml:space="preserve">
          <source>To change which notes are shown by &lt;code&gt;git log&lt;/code&gt;, see the &quot;notes.displayRef&quot; configuration in &lt;a href=&quot;git-log&quot;&gt;git-log[1]&lt;/a&gt;.</source>
          <target state="translated">Para cambiar las notas que se muestran en &lt;code&gt;git log&lt;/code&gt; , consulte la configuraci&amp;oacute;n &quot;notes.displayRef&quot; en &lt;a href=&quot;git-log&quot;&gt;git-log [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="97883ec3271fcc02269394ee0880b3655a6f452f" translate="yes" xml:space="preserve">
          <source>To check out commit &lt;code&gt;HEAD~3&lt;/code&gt; for temporary inspection or experiment without creating a new branch:</source>
          <target state="translated">Para verificar commit &lt;code&gt;HEAD~3&lt;/code&gt; para una inspecci&amp;oacute;n temporal o experimentar sin crear una nueva rama:</target>
        </trans-unit>
        <trans-unit id="d144f3be27bf6711b21fc83fdbf3f1e8ff9fc321" translate="yes" xml:space="preserve">
          <source>To commit a tree you have instantiated with &lt;code&gt;git write-tree&lt;/code&gt;, you&amp;rsquo;d create a &quot;commit&quot; object that refers to that tree and the history behind it&amp;mdash;​most notably the &quot;parent&quot; commits that preceded it in history.</source>
          <target state="translated">Para confirmar un &amp;aacute;rbol del que ha creado una instancia con &lt;code&gt;git write-tree&lt;/code&gt; , debe crear un objeto de &quot;confirmaci&amp;oacute;n&quot; que se refiera a ese &amp;aacute;rbol y el historial detr&amp;aacute;s de &amp;eacute;l, m&amp;aacute;s notablemente las confirmaciones &quot;principales&quot; que lo precedieron en la historia.</target>
        </trans-unit>
        <trans-unit id="05e44c536d85ee3801aa2c0d698cefa8d09c4c33" translate="yes" xml:space="preserve">
          <source>To completely remove a submodule, manually delete &lt;code&gt;$GIT_DIR/modules/&amp;lt;name&amp;gt;/&lt;/code&gt;.</source>
          <target state="translated">Para eliminar completamente un subm&amp;oacute;dulo, elimine manualmente &lt;code&gt;$GIT_DIR/modules/&amp;lt;name&amp;gt;/&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="27c15a86c7e79c3805e163825e563ceb0da18b5a" translate="yes" xml:space="preserve">
          <source>To control which revisions to show, gitk supports most options applicable to the &lt;code&gt;git rev-list&lt;/code&gt; command. It also supports a few options applicable to the &lt;code&gt;git diff-*&lt;/code&gt; commands to control how the changes each commit introduces are shown. Finally, it supports some gitk-specific options.</source>
          <target state="translated">Para controlar qu&amp;eacute; revisiones mostrar, gitk admite la mayor&amp;iacute;a de las opciones aplicables al comando &lt;code&gt;git rev-list&lt;/code&gt; . Tambi&amp;eacute;n admite algunas opciones aplicables a los comandos &lt;code&gt;git diff-*&lt;/code&gt; para controlar c&amp;oacute;mo se muestran los cambios que introduce cada confirmaci&amp;oacute;n. Finalmente, admite algunas opciones espec&amp;iacute;ficas de gitk.</target>
        </trans-unit>
        <trans-unit id="777e371b82028c9765bc912013f44d79febb95a6" translate="yes" xml:space="preserve">
          <source>To cope with such a situation, after the inner &lt;code&gt;git bisect&lt;/code&gt; finds the next revision to test, the script can apply the patch before compiling, run the real test, and afterwards decide if the revision (possibly with the needed patch) passed the test and then rewind the tree to the pristine state. Finally the script should exit with the status of the real test to let the &lt;code&gt;git bisect run&lt;/code&gt; command loop determine the eventual outcome of the bisect session.</source>
          <target state="translated">Para hacer frente a tal situaci&amp;oacute;n, despu&amp;eacute;s de que el &lt;code&gt;git bisect&lt;/code&gt; interno encuentra la siguiente revisi&amp;oacute;n para probar, el script puede aplicar el parche antes de compilar, ejecutar la prueba real y luego decidir si la revisi&amp;oacute;n (posiblemente con el parche necesario) pas&amp;oacute; la prueba y luego rebobine el &amp;aacute;rbol hasta que vuelva a su estado original. Finalmente, el script debe salir con el estado de la prueba real para permitir que el ciclo de comando de &lt;code&gt;git bisect run&lt;/code&gt; determine el resultado final de la sesi&amp;oacute;n bisect.</target>
        </trans-unit>
        <trans-unit id="8674c1ca562e6ecc34e19d2429ea897e7602bd28" translate="yes" xml:space="preserve">
          <source>To create your own local live copy of such a &quot;raw&quot; Git repository, you&amp;rsquo;d first create your own subdirectory for the project, and then copy the raw repository contents into the &lt;code&gt;.git&lt;/code&gt; directory. For example, to create your own copy of the Git repository, you&amp;rsquo;d do the following</source>
          <target state="translated">Para crear su propia copia local en vivo de un repositorio de Git &quot;sin procesar&quot;, primero debe crear su propio subdirectorio para el proyecto y luego copiar el contenido del repositorio sin procesar en el directorio &lt;code&gt;.git&lt;/code&gt; . Por ejemplo, para crear su propia copia del repositorio de Git, har&amp;iacute;a lo siguiente</target>
        </trans-unit>
        <trans-unit id="495be7922d2a293092e6f366efd8045104e01478" translate="yes" xml:space="preserve">
          <source>To define a custom merge driver &lt;code&gt;filfre&lt;/code&gt;, add a section to your &lt;code&gt;$GIT_DIR/config&lt;/code&gt; file (or &lt;code&gt;$HOME/.gitconfig&lt;/code&gt; file) like this:</source>
          <target state="translated">Para definir un &lt;code&gt;filfre&lt;/code&gt; controlador de combinaci&amp;oacute;n personalizado , agregue una secci&amp;oacute;n a su &lt;code&gt;$GIT_DIR/config&lt;/code&gt; (o archivo &lt;code&gt;$HOME/.gitconfig&lt;/code&gt; ) como este:</target>
        </trans-unit>
        <trans-unit id="369d97c17e3edbb633e139fcbb4d6a1ea94c1201" translate="yes" xml:space="preserve">
          <source>To define an external diff driver &lt;code&gt;jcdiff&lt;/code&gt;, add a section to your &lt;code&gt;$GIT_DIR/config&lt;/code&gt; file (or &lt;code&gt;$HOME/.gitconfig&lt;/code&gt; file) like this:</source>
          <target state="translated">Para definir un &lt;code&gt;jcdiff&lt;/code&gt; de controlador de diferencias externo , agregue una secci&amp;oacute;n a su &lt;code&gt;$GIT_DIR/config&lt;/code&gt; (o archivo &lt;code&gt;$HOME/.gitconfig&lt;/code&gt; ) como este:</target>
        </trans-unit>
        <trans-unit id="302897a013466c7a33ee45af87c508a98422abd4" translate="yes" xml:space="preserve">
          <source>To delete the entry for renames, do</source>
          <target state="translated">Para borrar la entrada de los renombramientos,haga</target>
        </trans-unit>
        <trans-unit id="f31f6b0ae1c80bea942e287ae0ab318c31ede1f4" translate="yes" xml:space="preserve">
          <source>To determine the location of the repository on disk, &lt;code&gt;git http-backend&lt;/code&gt; concatenates the environment variables PATH_INFO, which is set automatically by the web server, and GIT_PROJECT_ROOT, which must be set manually in the web server configuration. If GIT_PROJECT_ROOT is not set, &lt;code&gt;git http-backend&lt;/code&gt; reads PATH_TRANSLATED, which is also set automatically by the web server.</source>
          <target state="translated">Para determinar la ubicaci&amp;oacute;n del repositorio en el disco, &lt;code&gt;git http-backend&lt;/code&gt; concatena las variables de entorno PATH_INFO, que el servidor web establece autom&amp;aacute;ticamente, y GIT_PROJECT_ROOT, que debe establecerse manualmente en la configuraci&amp;oacute;n del servidor web. Si GIT_PROJECT_ROOT no est&amp;aacute; configurado, &lt;code&gt;git http-backend&lt;/code&gt; lee PATH_TRANSLATED, que tambi&amp;eacute;n lo configura autom&amp;aacute;ticamente el servidor web.</target>
        </trans-unit>
        <trans-unit id="b99f7180a07f9dbb13dde063c76c98dd5e2d7887" translate="yes" xml:space="preserve">
          <source>To disable features that accept parameters (are configurable), you need to set this element to empty list i.e. &lt;code&gt;[]&lt;/code&gt;.</source>
          <target state="translated">Para deshabilitar las funciones que aceptan par&amp;aacute;metros (son configurables), debe establecer este elemento en una lista vac&amp;iacute;a, es decir, &lt;code&gt;[]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="43f3c91605c9cb6d680c0ea9cf4c1bb2e77b4d9d" translate="yes" xml:space="preserve">
          <source>To disable interactive logins, displaying a greeting instead:</source>
          <target state="translated">Para deshabilitar los inicios de sesión interactivos,mostrando un saludo en su lugar:</target>
        </trans-unit>
        <trans-unit id="2e78622c40c98dec97477af783b12ba20d12cc1a" translate="yes" xml:space="preserve">
          <source>To display the &lt;a href=&quot;git&quot;&gt;git[1]&lt;/a&gt; man page, use &lt;code&gt;git help git&lt;/code&gt;.</source>
          <target state="translated">Para mostrar la p&amp;aacute;gina de manual de &lt;a href=&quot;git&quot;&gt;git [1]&lt;/a&gt; , use &lt;code&gt;git help git&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fa4dddf358b16e56494c90923230fd025e6f958d" translate="yes" xml:space="preserve">
          <source>To do automatic tag object dereferencing, use the &quot;-d&quot; or &quot;--dereference&quot; flag, so you can do</source>
          <target state="translated">Para hacer la desferenciación automática del objeto de la etiqueta,usa la bandera &quot;-d&quot; o &quot;--dereferencia&quot;,para que puedas hacer</target>
        </trans-unit>
        <trans-unit id="dc05ce874d6baee1eae11d94d6fd56f1e0a6d0ed" translate="yes" xml:space="preserve">
          <source>To do the merge, do</source>
          <target state="translated">Para hacer la fusión,haz</target>
        </trans-unit>
        <trans-unit id="45ed93b09b65e276ec2ef33a1d9d7c3e10d14bfe" translate="yes" xml:space="preserve">
          <source>To do this, the current maintenance branch is copied to another branch named with the previous release version number (e.g. maint-X.Y.(Z-1) where X.Y.Z is the current release).</source>
          <target state="translated">Para ello,la rama de mantenimiento actual se copia a otra rama nombrada con el número de versión de la versión anterior (por ejemplo,maint-X.Y.(Z-1)donde X.Y.Z es la versión actual).</target>
        </trans-unit>
        <trans-unit id="380aa6a091a04ad8bbf89399d1982760e370374e" translate="yes" xml:space="preserve">
          <source>To drop a commit, replace the command &quot;pick&quot; with &quot;drop&quot;, or just delete the matching line.</source>
          <target state="translated">Para eliminar una confirmación,reemplace el comando &quot;pick&quot; por &quot;drop&quot;,o simplemente elimine la línea de coincidencia.</target>
        </trans-unit>
        <trans-unit id="e05b8854f808624747710c5e1d641ee4dabaf30c" translate="yes" xml:space="preserve">
          <source>To elaborate, &quot;reading&quot; means checking for file existence, reading file attributes or file content. The working directory version may be present or absent. If present, its content may match against the index version or not. Writing is not affected by this bit, content safety is still first priority. Note that Git &lt;code&gt;can&lt;/code&gt; update working directory file, that is marked skip-worktree, if it is safe to do so (i.e. working directory version matches index version)</source>
          <target state="translated">Para desarrollar, &quot;leer&quot; significa verificar la existencia del archivo, leer los atributos del archivo o el contenido del archivo. La versi&amp;oacute;n del directorio de trabajo puede estar presente o ausente. Si est&amp;aacute; presente, su contenido puede coincidir con la versi&amp;oacute;n del &amp;iacute;ndice o no. La escritura no se ve afectada por este bit, la seguridad del contenido sigue siendo la primera prioridad. Tenga en cuenta que Git &lt;code&gt;can&lt;/code&gt; actualizar el archivo del directorio de trabajo, que est&amp;aacute; marcado como skip-worktree, si es seguro hacerlo (es decir, la versi&amp;oacute;n del directorio de trabajo coincide con la versi&amp;oacute;n del &amp;iacute;ndice)</target>
        </trans-unit>
        <trans-unit id="64ecd7272d648bbcdba5e527a1a80e43cb0705c5" translate="yes" xml:space="preserve">
          <source>To enable &lt;code&gt;git archive --remote&lt;/code&gt; and disable &lt;code&gt;git fetch&lt;/code&gt; against a repository, have the following in the configuration file in the repository (that is the file &lt;code&gt;config&lt;/code&gt; next to &lt;code&gt;HEAD&lt;/code&gt;, &lt;code&gt;refs&lt;/code&gt; and &lt;code&gt;objects&lt;/code&gt;).</source>
          <target state="translated">Para habilitar &lt;code&gt;git archive --remote&lt;/code&gt; y deshabilitar &lt;code&gt;git fetch&lt;/code&gt; contra un repositorio, tenga lo siguiente en el archivo de configuraci&amp;oacute;n en el repositorio (que es la &lt;code&gt;config&lt;/code&gt; uraci&amp;oacute;n del archivo junto a &lt;code&gt;HEAD&lt;/code&gt; , &lt;code&gt;refs&lt;/code&gt; y &lt;code&gt;objects&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="af7d8457fff28a2087e0f74bc51d0468026a9bff" translate="yes" xml:space="preserve">
          <source>To enable a target, set the corresponding environment variable or system or global config value to one of the following:</source>
          <target state="translated">Para habilitar un objetivo,establezca la correspondiente variable de entorno o valor de configuración del sistema o global en uno de los siguientes:</target>
        </trans-unit>
        <trans-unit id="01e6eac26c3bbc386ab13c8cd6a9167801f24836" translate="yes" xml:space="preserve">
          <source>To enable anonymous read access but authenticated write access, require authorization for both the initial ref advertisement (which we detect as a push via the service parameter in the query string), and the receive-pack invocation itself:</source>
          <target state="translated">Para permitir el acceso anónimo de lectura pero autenticado de escritura,se requiere autorización tanto para el anuncio inicial de ref (que detectamos como un empuje a través del parámetro de servicio en la cadena de consulta),como para la propia invocación del paquete de recepción:</target>
        </trans-unit>
        <trans-unit id="9bda367b82f8881561a1128afb27f36988891c35" translate="yes" xml:space="preserve">
          <source>To enable anonymous read access but authenticated write access:</source>
          <target state="translated">Para permitir el acceso de lectura anónimo pero el acceso de escritura autentificado:</target>
        </trans-unit>
        <trans-unit id="050d5472dcd3f05f019f9a8129d0bb6d5e205df8" translate="yes" xml:space="preserve">
          <source>To enable blame, pickaxe search, and snapshot support (allowing &quot;tar.gz&quot; and &quot;zip&quot; snapshots), while allowing individual projects to turn them off, put the following in your GITWEB_CONFIG file:</source>
          <target state="translated">Para habilitar el soporte de culpas,búsqueda de pico y de instantáneas (permitiendo las instantáneas &quot;tar.gz&quot; y &quot;zip&quot;),mientras se permite que los proyectos individuales las desactiven,pon lo siguiente en tu archivo GITWEB_CONFIG:</target>
        </trans-unit>
        <trans-unit id="fa7174e314ce7012972664ac5bcf82d4b390a6d5" translate="yes" xml:space="preserve">
          <source>To enable git-cvsserver access (which should generally have the &lt;code&gt;no-interactive-login&lt;/code&gt; example above as a prerequisite, as creating the git-shell-commands directory allows interactive logins):</source>
          <target state="translated">Para habilitar el acceso a git-cvsserver (que generalmente debe tener el ejemplo anterior &lt;code&gt;no-interactive-login&lt;/code&gt; como requisito previo, ya que la creaci&amp;oacute;n del directorio git-shell-commands permite inicios de sesi&amp;oacute;n interactivos):</target>
        </trans-unit>
        <trans-unit id="69aa803d2928631745bb26ea6d720a34de175dd7" translate="yes" xml:space="preserve">
          <source>To enable that additional nice feature, when a bisection is started and when some good commits are not ancestors of the bad commit, we first compute the merge bases between the bad and the good commits and we chose these merge bases as the first commits that will be checked out and tested.</source>
          <target state="translated">Para activar esta característica adicional,cuando se inicia una bisección y cuando algunas buenas confirmaciones no son antecesoras de la mala confirmación,primero calculamos las bases de fusión entre las buenas y malas confirmaciones y elegimos estas bases de fusión como las primeras confirmaciones que serán comprobadas y probadas.</target>
        </trans-unit>
        <trans-unit id="ba44f6ad0a0230b79b3149aabc029b57fd7f22d9" translate="yes" xml:space="preserve">
          <source>To enable the sparse-checkout feature, run &lt;code&gt;git sparse-checkout init&lt;/code&gt; to initialize a simple sparse-checkout file and enable the &lt;code&gt;core.sparseCheckout&lt;/code&gt; config setting. Then, run &lt;code&gt;git sparse-checkout set&lt;/code&gt; to modify the patterns in the sparse-checkout file.</source>
          <target state="translated">Para habilitar la funci&amp;oacute;n de pago disperso, ejecute &lt;code&gt;git sparse-checkout init&lt;/code&gt; para inicializar un archivo simple de pago disperso y habilite la configuraci&amp;oacute;n de configuraci&amp;oacute;n &lt;code&gt;core.sparseCheckout&lt;/code&gt; . Luego, ejecute &lt;code&gt;git sparse-checkout set&lt;/code&gt; para modificar los patrones en el archivo sparse-checkout.</target>
        </trans-unit>
        <trans-unit id="1318b73efc503f41a06d5d140c646ee25cf7e427" translate="yes" xml:space="preserve">
          <source>To exclude commits reachable from a commit, a prefix &lt;code&gt;^&lt;/code&gt; notation is used. E.g. &lt;code&gt;^r1 r2&lt;/code&gt; means commits reachable from &lt;code&gt;r2&lt;/code&gt; but exclude the ones reachable from &lt;code&gt;r1&lt;/code&gt; (i.e. &lt;code&gt;r1&lt;/code&gt; and its ancestors).</source>
          <target state="translated">Para excluir las confirmaciones accesibles de una confirmaci&amp;oacute;n, se usa una notaci&amp;oacute;n de prefijo &lt;code&gt;^&lt;/code&gt; . Por ejemplo, &lt;code&gt;^r1 r2&lt;/code&gt; significa confirmaciones alcanzables desde &lt;code&gt;r2&lt;/code&gt; pero excluye las accesibles desde &lt;code&gt;r1&lt;/code&gt; (es decir, &lt;code&gt;r1&lt;/code&gt; y sus ancestros).</target>
        </trans-unit>
        <trans-unit id="a12d809ea9b20c2b561957b059e3fe943cb6e440" translate="yes" xml:space="preserve">
          <source>To find out how the result can be used, just read on in &lt;code&gt;cmd_cat_file()&lt;/code&gt;:</source>
          <target state="translated">Para averiguar c&amp;oacute;mo se puede usar el resultado, simplemente &lt;code&gt;cmd_cat_file()&lt;/code&gt; leyendo en cmd_cat_file () :</target>
        </trans-unit>
        <trans-unit id="338cdf0c3d82152dc96e1eae9cd9922bf736e76c" translate="yes" xml:space="preserve">
          <source>To get a checkout with the Eclipse CVS client:</source>
          <target state="translated">Para hacer una compra con el cliente de Eclipse CVS:</target>
        </trans-unit>
        <trans-unit id="976f859125db1311d8f82bb8df703ef2ad537fd0" translate="yes" xml:space="preserve">
          <source>To get a reminder of the currently used terms, use</source>
          <target state="translated">Para obtener un recordatorio de los términos utilizados actualmente,utilice</target>
        </trans-unit>
        <trans-unit id="68b714c59ff5898ff58433a2938d52aeb27df43e" translate="yes" xml:space="preserve">
          <source>To get started with gitweb, run &lt;a href=&quot;git-instaweb&quot;&gt;git-instaweb[1]&lt;/a&gt; from a Git repository. This would configure and start your web server, and run web browser pointing to gitweb.</source>
          <target state="translated">Para comenzar con gitweb, ejecute &lt;a href=&quot;git-instaweb&quot;&gt;git-instaweb [1]&lt;/a&gt; desde un repositorio de Git. Esto configurar&amp;iacute;a e iniciar&amp;iacute;a su servidor web, y ejecutar&amp;iacute;a el navegador web apuntando a gitweb.</target>
        </trans-unit>
        <trans-unit id="bf62a03860b36b4b6a615592146052d88035a5f4" translate="yes" xml:space="preserve">
          <source>To get the &quot;base&quot; for the merge, look up the common parent of two commits:</source>
          <target state="translated">Para obtener la &quot;base&quot; de la fusión,busque el padre común de dos compromisos:</target>
        </trans-unit>
        <trans-unit id="ec1f343ca45777aa33e95b7222bfb7658aa36062" translate="yes" xml:space="preserve">
          <source>To get the feature/bugfix into an integration branch, simply merge it. If the topic has evolved further in the meantime, merge again. (Note that you do not necessarily have to merge it to the oldest integration branch first. For example, you can first merge a bugfix to &lt;code&gt;next&lt;/code&gt;, give it some testing time, and merge to &lt;code&gt;maint&lt;/code&gt; when you know it is stable.)</source>
          <target state="translated">Para obtener la funci&amp;oacute;n / correcci&amp;oacute;n de errores en una rama de integraci&amp;oacute;n, simplemente comb&amp;iacute;nela. Si el tema ha evolucionado m&amp;aacute;s mientras tanto, fusiona de nuevo. (Tenga en cuenta que no necesariamente tiene que fusionarlo con la rama de integraci&amp;oacute;n m&amp;aacute;s antigua primero. Por ejemplo, primero puede fusionar una correcci&amp;oacute;n de errores con la &lt;code&gt;next&lt;/code&gt; , darle tiempo de prueba y fusionarlo para &lt;code&gt;maint&lt;/code&gt; cuando sepa que es estable).</target>
        </trans-unit>
        <trans-unit id="60ae758b58fc83602f1720fb9cc2f0f4fb30b090" translate="yes" xml:space="preserve">
          <source>To give some hard figures, we used to have an average report-to-fix cycle of 142.6 hours (according to our somewhat weird bug-tracker which just measures wall-clock time). Since we moved to Git, we&amp;rsquo;ve lowered that to 16.2 hours. Primarily because we can stay on top of the bug fixing now, and because everyone&amp;rsquo;s jockeying to get to fix bugs (we&amp;rsquo;re quite proud of how lazy we are to let Git find the bugs for us). Each new release results in ~40% fewer bugs (almost certainly due to how we now feel about writing tests).</source>
          <target state="translated">Para dar algunas cifras concretas, sol&amp;iacute;amos tener un ciclo promedio de informe para corregir de 142,6 horas (de acuerdo con nuestro rastreador de errores algo extra&amp;ntilde;o que solo mide el tiempo del reloj de pared). Desde que nos mudamos a Git, lo hemos reducido a 16,2 horas. Principalmente porque ahora podemos estar al tanto de la correcci&amp;oacute;n de errores, y porque todos est&amp;aacute;n compitiendo para arreglarlos (estamos muy orgullosos de lo perezosos que somos para dejar que Git los encuentre). Cada nueva versi&amp;oacute;n da como resultado ~ 40% menos de errores (casi con certeza debido a c&amp;oacute;mo nos sentimos ahora acerca de escribir pruebas).</target>
        </trans-unit>
        <trans-unit id="cc855cb566c405d222e3a3236275bbad376833c3" translate="yes" xml:space="preserve">
          <source>To help with that, &lt;code&gt;range&lt;/code&gt; uses the &lt;code&gt;--dual-color&lt;/code&gt; mode by default. In this mode, the diff of diffs will retain the original diff colors, and prefix the lines with -/+ markers that have their &lt;strong&gt;background&lt;/strong&gt; red or green, to make it more obvious that they describe how the diff itself changed.</source>
          <target state="translated">Para ayudar con eso, el &lt;code&gt;range&lt;/code&gt; usa el modo &lt;code&gt;--dual-color&lt;/code&gt; de forma predeterminada. En este modo, el diff de diffs conservar&amp;aacute; los colores diff originales y antepondr&amp;aacute; las l&amp;iacute;neas con marcadores - / + que tienen su &lt;strong&gt;fondo&lt;/strong&gt; rojo o verde, para que sea m&amp;aacute;s obvio que describen c&amp;oacute;mo cambi&amp;oacute; el diff.</target>
        </trans-unit>
        <trans-unit id="096c5d9029f3f58b2af501ec17fb5d42ac0f73fe" translate="yes" xml:space="preserve">
          <source>To illustrate the difference between &lt;code&gt;-S&amp;lt;regex&amp;gt; --pickaxe-regex&lt;/code&gt; and &lt;code&gt;-G&amp;lt;regex&amp;gt;&lt;/code&gt;, consider a commit with the following diff in the same file:</source>
          <target state="translated">Para ilustrar la diferencia entre &lt;code&gt;-S&amp;lt;regex&amp;gt; --pickaxe-regex&lt;/code&gt; y &lt;code&gt;-G&amp;lt;regex&amp;gt;&lt;/code&gt; , considere una confirmaci&amp;oacute;n con la siguiente diferencia en el mismo archivo:</target>
        </trans-unit>
        <trans-unit id="e67d6de21feaa90def83753eb253a23faea561fa" translate="yes" xml:space="preserve">
          <source>To illustrate, suppose you are in a situation where someone develops a &lt;code&gt;subsystem&lt;/code&gt; branch, and you are working on a &lt;code&gt;topic&lt;/code&gt; that is dependent on this &lt;code&gt;subsystem&lt;/code&gt;. You might end up with a history like the following:</source>
          <target state="translated">Para ilustrarlo, suponga que se encuentra en una situaci&amp;oacute;n en la que alguien desarrolla una rama de &lt;code&gt;subsystem&lt;/code&gt; y est&amp;aacute; trabajando en un &lt;code&gt;topic&lt;/code&gt; que depende de este &lt;code&gt;subsystem&lt;/code&gt; . Puede terminar con un historial como el siguiente:</target>
        </trans-unit>
        <trans-unit id="a98d25733140cb4450fff563f123b0d4cafeb9f9" translate="yes" xml:space="preserve">
          <source>To interrupt the rebase (just like an &quot;edit&quot; command would do, but without cherry-picking any commit first), use the &quot;break&quot; command.</source>
          <target state="translated">Para interrumpir el rebase (como lo haría un comando de &quot;edición&quot;,pero sin escoger ningún commit primero),usa el comando &quot;break&quot;.</target>
        </trans-unit>
        <trans-unit id="f6408dba3913ebdb903fdfce1d68f1906d3e56f0" translate="yes" xml:space="preserve">
          <source>To look at only non-zero stages, use &lt;code&gt;--unmerged&lt;/code&gt; flag:</source>
          <target state="translated">Para ver solo las etapas distintas de cero, use la bandera &lt;code&gt;--unmerged&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="5b273f729e50c3bb1996889c896c925cce764cd8" translate="yes" xml:space="preserve">
          <source>To make it readable, we can tell &lt;code&gt;git diff-files&lt;/code&gt; to output the differences as a patch, using the &lt;code&gt;-p&lt;/code&gt; flag:</source>
          <target state="translated">Para hacerlo legible, podemos decirle a &lt;code&gt;git diff-files&lt;/code&gt; que muestre las diferencias como un parche, usando la bandera &lt;code&gt;-p&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="9fa7b34f2837aaeca157590c3f1e04cfe3400ecb" translate="yes" xml:space="preserve">
          <source>To make referencing the final pathname simpler, you can map each path component; so if you also anonymize &lt;code&gt;subdir&lt;/code&gt; to &lt;code&gt;publicdir&lt;/code&gt;, then the final pathname would be &lt;code&gt;publicdir/bar.c&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5411ef1231b1da2dbabaf49f4348af685832f2f7" translate="yes" xml:space="preserve">
          <source>To move the whole tree into a subdirectory, or remove it from there:</source>
          <target state="translated">Para mover el árbol entero a un subdirectorio,o quitarlo de allí:</target>
        </trans-unit>
        <trans-unit id="9fef1883cb2bb53007927c93e3d8f7431145efad" translate="yes" xml:space="preserve">
          <source>To perform a three-way merge, you start with the two commits you want to merge, find their closest common parent (a third commit), and compare the trees corresponding to these three commits.</source>
          <target state="translated">Para realizar una fusión a tres bandas,se comienza con los dos commits que se quieren fusionar,se encuentra el progenitor común más cercano (un tercer commit),y se comparan los árboles correspondientes a estos tres commits.</target>
        </trans-unit>
        <trans-unit id="a35f3e8a10774da4c0b0f3f87118660d7ef9889e" translate="yes" xml:space="preserve">
          <source>To place a higher stage entry to the index, the path should first be removed by feeding a mode=0 entry for the path, and then feeding necessary input lines in the third format.</source>
          <target state="translated">Para colocar una entrada de etapa más alta en el índice,el camino debe ser removido primero alimentando una entrada de modo=0 para el camino,y luego alimentando las líneas de entrada necesarias en el tercer formato.</target>
        </trans-unit>
        <trans-unit id="26b0cbf1bc1090821ae6f59cac15f02ec7f562f8" translate="yes" xml:space="preserve">
          <source>To prepare for working on &lt;code&gt;&amp;lt;branch&amp;gt;&lt;/code&gt;, switch to it by updating the index and the files in the working tree, and by pointing &lt;code&gt;HEAD&lt;/code&gt; at the branch. Local modifications to the files in the working tree are kept, so that they can be committed to the &lt;code&gt;&amp;lt;branch&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">Para prepararse para trabajar en &lt;code&gt;&amp;lt;branch&amp;gt;&lt;/code&gt; , cambie a &amp;eacute;l actualizando el &amp;iacute;ndice y los archivos en el &amp;aacute;rbol de trabajo, y apuntando &lt;code&gt;HEAD&lt;/code&gt; a la rama. Las modificaciones locales a los archivos en el &amp;aacute;rbol de trabajo se mantienen, de modo que se puedan enviar a la &lt;code&gt;&amp;lt;branch&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="13739c43ac679e23fc4c2d09478ac31e5293cb15" translate="yes" xml:space="preserve">
          <source>To pretend you have a file at path with mode and sha1, say:</source>
          <target state="translated">Para fingir que tienes un archivo en el camino con el modo y sha1,digamos:</target>
        </trans-unit>
        <trans-unit id="6785e6ba620455f331d4a09eb8363e2600eabf25" translate="yes" xml:space="preserve">
          <source>To prevent a $GIT_DIR/worktrees entry from being pruned (which can be useful in some situations, such as when the entry&amp;rsquo;s working tree is stored on a portable device), use the &lt;code&gt;git worktree lock&lt;/code&gt; command, which adds a file named &lt;code&gt;locked&lt;/code&gt; to the entry&amp;rsquo;s directory. The file contains the reason in plain text. For example, if a linked working tree&amp;rsquo;s &lt;code&gt;.git&lt;/code&gt; file points to &lt;code&gt;/path/main/.git/worktrees/test-next&lt;/code&gt; then a file named &lt;code&gt;/path/main/.git/worktrees/test-next/locked&lt;/code&gt; will prevent the &lt;code&gt;test-next&lt;/code&gt; entry from being pruned. See &lt;a href=&quot;gitrepository-layout&quot;&gt;gitrepository-layout[5]&lt;/a&gt; for details.</source>
          <target state="translated">Para evitar que se pode una entrada $ GIT_DIR / worktrees (lo que puede ser &amp;uacute;til en algunas situaciones, como cuando el &amp;aacute;rbol de trabajo de la entrada se almacena en un dispositivo port&amp;aacute;til), use el comando &lt;code&gt;git worktree lock&lt;/code&gt; , que agrega un archivo llamado &lt;code&gt;locked&lt;/code&gt; al directorio de la entrada. El archivo contiene el motivo en texto sin formato. Por ejemplo, si el archivo &lt;code&gt;.git&lt;/code&gt; de un &amp;aacute;rbol de trabajo vinculado apunta a &lt;code&gt;/path/main/.git/worktrees/test-next&lt;/code&gt; , entonces un archivo llamado &lt;code&gt;/path/main/.git/worktrees/test-next/locked&lt;/code&gt; evitar&amp;aacute; la &lt;code&gt;test-next&lt;/code&gt; entrada de ser podado. Consulte &lt;a href=&quot;gitrepository-layout&quot;&gt;gitrepository-layout [5]&lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="af2e73e27abe3e4382121e1f7c2af8f2dfcf3321" translate="yes" xml:space="preserve">
          <source>To prevent a &lt;code&gt;$GIT_DIR/worktrees&lt;/code&gt; entry from being pruned (which can be useful in some situations, such as when the entry&amp;rsquo;s working tree is stored on a portable device), use the &lt;code&gt;git worktree lock&lt;/code&gt; command, which adds a file named &lt;code&gt;locked&lt;/code&gt; to the entry&amp;rsquo;s directory. The file contains the reason in plain text. For example, if a linked working tree&amp;rsquo;s &lt;code&gt;.git&lt;/code&gt; file points to &lt;code&gt;/path/main/.git/worktrees/test-next&lt;/code&gt; then a file named &lt;code&gt;/path/main/.git/worktrees/test-next/locked&lt;/code&gt; will prevent the &lt;code&gt;test-next&lt;/code&gt; entry from being pruned. See &lt;a href=&quot;gitrepository-layout&quot;&gt;gitrepository-layout[5]&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46ac404b2baca4d3a659bb0594db0c41828389ed" translate="yes" xml:space="preserve">
          <source>To prevent these unnecessary merge conflicts, Git can be told to run a virtual check-out and check-in of all three stages of a file when resolving a three-way merge by setting the &lt;code&gt;merge.renormalize&lt;/code&gt; configuration variable. This prevents changes caused by check-in conversion from causing spurious merge conflicts when a converted file is merged with an unconverted file.</source>
          <target state="translated">Para evitar estos conflictos de combinaci&amp;oacute;n innecesarios, se le puede decir a Git que ejecute una extracci&amp;oacute;n y un registro virtuales de las tres etapas de un archivo al resolver una combinaci&amp;oacute;n de tres v&amp;iacute;as estableciendo la variable de configuraci&amp;oacute;n &lt;code&gt;merge.renormalize&lt;/code&gt; . Esto evita que los cambios causados ​​por la conversi&amp;oacute;n de registro provoquen conflictos de fusi&amp;oacute;n falsos cuando un archivo convertido se fusiona con un archivo no convertido.</target>
        </trans-unit>
        <trans-unit id="91d260766aee213709a415223ac206b93100d7d5" translate="yes" xml:space="preserve">
          <source>To prune objects not used by your repository or another that borrows from your repository via its &lt;code&gt;.git/objects/info/alternates&lt;/code&gt;:</source>
          <target state="translated">Para podar objetos no utilizados por su repositorio u otro que tome prestado de su repositorio a trav&amp;eacute;s de su &lt;code&gt;.git/objects/info/alternates&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="2f63f42b98c259e7fd0384dd68939f7fc302c5eb" translate="yes" xml:space="preserve">
          <source>To prune references as part of your normal workflow without needing to remember to run that, set &lt;code&gt;fetch.prune&lt;/code&gt; globally, or &lt;code&gt;remote.&amp;lt;name&amp;gt;.prune&lt;/code&gt; per-remote in the config. See &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;.</source>
          <target state="translated">Para podar referencias como parte de su flujo de trabajo normal sin necesidad de recordar ejecutarlo, configure &lt;code&gt;fetch.prune&lt;/code&gt; globalmente o &lt;code&gt;remote.&amp;lt;name&amp;gt;.prune&lt;/code&gt; per-remote en el archivo config. Consulte &lt;a href=&quot;git-config&quot;&gt;git-config [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="68bfae2792009c9d944a67bd77b4854e1c8c4d3e" translate="yes" xml:space="preserve">
          <source>To put the loose objects into a pack, just run git repack:</source>
          <target state="translated">Para poner los objetos sueltos en un paquete,sólo tienes que ejecutar git repack:</target>
        </trans-unit>
        <trans-unit id="8344caf5b982f9b0d4dc99f7ff5aa708ff0b3592" translate="yes" xml:space="preserve">
          <source>To query the value for a given key, do</source>
          <target state="translated">Para consultar el valor de una clave determinada,haga</target>
        </trans-unit>
        <trans-unit id="6d7c1598e59e901d58d9b961c14fa449c82ef069" translate="yes" xml:space="preserve">
          <source>To reapply a series of changes from a &lt;a href=&quot;#def_branch&quot;&gt;branch&lt;/a&gt; to a different base, and reset the &lt;a href=&quot;#def_head&quot;&gt;head&lt;/a&gt; of that branch to the result.</source>
          <target state="translated">Para volver a aplicar una serie de cambios de una &lt;a href=&quot;#def_branch&quot;&gt;rama&lt;/a&gt; a una base diferente y restablecer el &lt;a href=&quot;#def_head&quot;&gt;encabezado&lt;/a&gt; de esa rama al resultado.</target>
        </trans-unit>
        <trans-unit id="25388a0bc929e9a0e4d2bb9d4d113e8444bb02a5" translate="yes" xml:space="preserve">
          <source>To remove a file from the index and from the working tree, use</source>
          <target state="translated">Para eliminar un archivo del índice y del árbol de trabajo,utilice</target>
        </trans-unit>
        <trans-unit id="c7850646e909d85f101794190a2e6f7a699e3e90" translate="yes" xml:space="preserve">
          <source>To remove commits authored by &quot;Darl McBribe&quot; from the history:</source>
          <target state="translated">Para eliminar de la historia los compromisos escritos por &quot;Darl McBribe&quot;:</target>
        </trans-unit>
        <trans-unit id="65692943c43d72ea453917ea884fccf3994fb56e" translate="yes" xml:space="preserve">
          <source>To remove selection, prefix the input with &lt;code&gt;-&lt;/code&gt; like this:</source>
          <target state="translated">Para eliminar la selecci&amp;oacute;n, anteponga la entrada con &lt;code&gt;-&lt;/code&gt; as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="9e91a512899aa79b93af123e6b1768a526248346" translate="yes" xml:space="preserve">
          <source>To repopulate the working directory with all files, use the &lt;code&gt;git sparse-checkout disable&lt;/code&gt; command.</source>
          <target state="translated">Para volver a llenar el directorio de trabajo con todos los archivos, use el comando &lt;code&gt;git sparse-checkout disable&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5c497720a7ab3ae3ef408305ef475289bc14a521" translate="yes" xml:space="preserve">
          <source>To reproduce the entire p4 history in Git, use the &lt;code&gt;@all&lt;/code&gt; modifier on the depot path:</source>
          <target state="translated">Para reproducir todo el historial de p4 en Git, use el modificador &lt;code&gt;@all&lt;/code&gt; en la ruta del dep&amp;oacute;sito:</target>
        </trans-unit>
        <trans-unit id="d4609928d728916d052df2a3b481b65890e4b16e" translate="yes" xml:space="preserve">
          <source>To require authentication for both reads and writes, use a Location directive around the repository, or one of its parent directories:</source>
          <target state="translated">Para requerir la autentificación tanto de las lecturas como de las escrituras,use una directiva de localización alrededor del repositorio,o uno de sus directorios principales:</target>
        </trans-unit>
        <trans-unit id="10ebfb5ceb771c952eff2c39be3b852f1f654421" translate="yes" xml:space="preserve">
          <source>To require authentication for both reads and writes:</source>
          <target state="translated">Para requerir la autentificación tanto de la lectura como de la escritura:</target>
        </trans-unit>
        <trans-unit id="847928f545abee25f9f8e4e2cc396a049af86735" translate="yes" xml:space="preserve">
          <source>To restore a file in the index to match the version in &lt;code&gt;HEAD&lt;/code&gt; (this is the same as using &lt;a href=&quot;git-reset&quot;&gt;git-reset[1]&lt;/a&gt;)</source>
          <target state="translated">Para restaurar un archivo en el &amp;iacute;ndice para que coincida con la versi&amp;oacute;n en &lt;code&gt;HEAD&lt;/code&gt; (esto es lo mismo que usar &lt;a href=&quot;git-reset&quot;&gt;git-reset [1]&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="21366b05c441f538e6886570018737e901640e49" translate="yes" xml:space="preserve">
          <source>To restore all files in the current directory</source>
          <target state="translated">Para restaurar todos los archivos en el directorio actual</target>
        </trans-unit>
        <trans-unit id="0ab7e14988a23edeb341648ca7b63377b3dd49d2" translate="yes" xml:space="preserve">
          <source>To restrict rewriting to only part of the history, specify a revision range in addition to the new branch name. The new branch name will point to the top-most revision that a &lt;code&gt;git rev-list&lt;/code&gt; of this range will print.</source>
          <target state="translated">Para restringir la reescritura a solo una parte del historial, especifique un rango de revisi&amp;oacute;n adem&amp;aacute;s del nombre de la nueva rama. El nuevo nombre de la rama apuntar&amp;aacute; a la revisi&amp;oacute;n m&amp;aacute;s alta que imprimir&amp;aacute; una &lt;code&gt;git rev-list&lt;/code&gt; de revoluciones de git de este rango.</target>
        </trans-unit>
        <trans-unit id="4d880d7fd779c619b85e62692eb083b5f59e932e" translate="yes" xml:space="preserve">
          <source>To rewrite commits E,F,G,H, use one of these:</source>
          <target state="translated">Para reescribir los compromisos E,F,G,H,usa uno de estos:</target>
        </trans-unit>
        <trans-unit id="47b66273feb1f496168989ebee433bebb314fc85" translate="yes" xml:space="preserve">
          <source>To rewrite only commits D,E,F,G,H, but leave A, B and C alone, use:</source>
          <target state="translated">Reescribir sólo compromete D,E,F,G,H,pero dejar en paz a A,B y C,usar:</target>
        </trans-unit>
        <trans-unit id="8c31d9c011b7c86062de888fb92cc01426b53584" translate="yes" xml:space="preserve">
          <source>To rewrite the repository to look as if &lt;code&gt;foodir/&lt;/code&gt; had been its project root, and discard all other history:</source>
          <target state="translated">Para reescribir el repositorio para que parezca que &lt;code&gt;foodir/&lt;/code&gt; hubiera sido la ra&amp;iacute;z del proyecto y descartar el resto del historial:</target>
        </trans-unit>
        <trans-unit id="7c02b2b350476c8c24e25173b62f35a8ad0c0ae3" translate="yes" xml:space="preserve">
          <source>To see how submodule support works, create four example repositories that can be used later as a submodule:</source>
          <target state="translated">Para ver cómo funciona el soporte de submódulos,cree cuatro repositorios de ejemplo que puedan ser utilizados más tarde como un submódulo:</target>
        </trans-unit>
        <trans-unit id="700bc56e5656b835e5cd7fa2e5386957dfc66eac" translate="yes" xml:space="preserve">
          <source>To see the currently remaining suspects in &lt;code&gt;gitk&lt;/code&gt;, issue the following command during the bisection process (the subcommand &lt;code&gt;view&lt;/code&gt; can be used as an alternative to &lt;code&gt;visualize&lt;/code&gt;):</source>
          <target state="translated">Para ver los sospechosos que quedan actualmente en &lt;code&gt;gitk&lt;/code&gt; , emita el siguiente comando durante el proceso de bisecci&amp;oacute;n (la &lt;code&gt;view&lt;/code&gt; subcomando se puede usar como una alternativa para &lt;code&gt;visualize&lt;/code&gt; ):</target>
        </trans-unit>
        <trans-unit id="faa509deef7fcd4d518cc2cd2e577046b7eb747b" translate="yes" xml:space="preserve">
          <source>To see whether it has already been merged into the test or release branches, use:</source>
          <target state="translated">Para ver si ya se ha fusionado en las ramas de prueba o de liberación,use:</target>
        </trans-unit>
        <trans-unit id="1e15ca1368deb202f467e491af7bfdb38f930af4" translate="yes" xml:space="preserve">
          <source>To serve gitweb at the same url, use a ScriptAliasMatch to only those URLs that &lt;code&gt;git http-backend&lt;/code&gt; can handle, and forward the rest to gitweb:</source>
          <target state="translated">Para servir gitweb en la misma URL, use un ScriptAliasMatch solo para aquellas URL que &lt;code&gt;git http-backend&lt;/code&gt; pueda manejar, y reenv&amp;iacute;e el resto a gitweb:</target>
        </trans-unit>
        <trans-unit id="3b5c2b799f6b39d60aa882699fc88e3eb3a77175" translate="yes" xml:space="preserve">
          <source>To serve multiple repositories from different &lt;a href=&quot;gitnamespaces&quot;&gt;gitnamespaces[7]&lt;/a&gt; in a single repository:</source>
          <target state="translated">Para servir m&amp;uacute;ltiples repositorios de diferentes &lt;a href=&quot;gitnamespaces&quot;&gt;gitnamespaces [7]&lt;/a&gt; en un solo repositorio:</target>
        </trans-unit>
        <trans-unit id="59fa97f902b7761eca14600ff37aff1758dec6bd" translate="yes" xml:space="preserve">
          <source>To set a commit (which typically is at the tip of another history) to be the parent of the current initial commit, in order to paste the other history behind the current history:</source>
          <target state="translated">Establecer una confirmación (que normalmente está en la punta de otro historial)para que sea el padre de la confirmación inicial actual,con el fin de pegar el otro historial detrás del actual:</target>
        </trans-unit>
        <trans-unit id="d091c25539483b5c5b3db274eae656a5f768704a" translate="yes" xml:space="preserve">
          <source>To set the date used in future tag objects, set the environment variable GIT_COMMITTER_DATE (see the later discussion of possible values; the most common form is &quot;YYYY-MM-DD HH:MM&quot;).</source>
          <target state="translated">Para establecer la fecha utilizada en futuros objetos etiqueta,establezca la variable de entorno GIT_COMMITTER_DATE (véase la posterior discusión de posibles valores;la forma más común es &quot;AAAA-MM-DD HH:MM&quot;).</target>
        </trans-unit>
        <trans-unit id="0de4847876d8ab04ebb463613f39507d60c3b1a3" translate="yes" xml:space="preserve">
          <source>To set this up, first create your work tree by cloning Linus&amp;rsquo;s public tree:</source>
          <target state="translated">Para configurar esto, primero cree su &amp;aacute;rbol de trabajo clonando el &amp;aacute;rbol p&amp;uacute;blico de Linus:</target>
        </trans-unit>
        <trans-unit id="6fdb47a7575f286ad7a6b8b651d8470ef2c51c01" translate="yes" xml:space="preserve">
          <source>To set up &lt;code&gt;git daemon&lt;/code&gt; as a regular, non-inetd service that handles repositories for multiple virtual hosts based on their IP addresses, start the daemon like this:</source>
          <target state="translated">Para configurar &lt;code&gt;git daemon&lt;/code&gt; como un servicio regular, no inetd que maneja repositorios para m&amp;uacute;ltiples hosts virtuales en funci&amp;oacute;n de sus direcciones IP, inicie el daemon as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="cd4e85b93c0b5a71d973a240463742c429d6ce10" translate="yes" xml:space="preserve">
          <source>To set up &lt;code&gt;git daemon&lt;/code&gt; as an inetd service that handles any repository under the whitelisted set of directories, /pub/foo and /pub/bar, place an entry like the following into /etc/inetd all on one line:</source>
          <target state="translated">Para configurar &lt;code&gt;git daemon&lt;/code&gt; como un servicio inetd que maneja cualquier repositorio bajo el conjunto de directorios de la lista blanca, / pub / foo y / pub / bar, coloque una entrada como la siguiente en / etc / inetd todo en una l&amp;iacute;nea:</target>
        </trans-unit>
        <trans-unit id="d85d4c6ac447e3ea7881a95ee3354b641502c913" translate="yes" xml:space="preserve">
          <source>To set up &lt;code&gt;git daemon&lt;/code&gt; as an inetd service that handles repositories for different virtual hosts, &lt;code&gt;www.example.com&lt;/code&gt; and &lt;code&gt;www.example.org&lt;/code&gt;, place an entry like the following into &lt;code&gt;/etc/inetd&lt;/code&gt; all on one line:</source>
          <target state="translated">Para configurar &lt;code&gt;git daemon&lt;/code&gt; como un servicio inetd que maneja repositorios para diferentes hosts virtuales, &lt;code&gt;www.example.com&lt;/code&gt; y &lt;code&gt;www.example.org&lt;/code&gt; , coloque una entrada como la siguiente en &lt;code&gt;/etc/inetd&lt;/code&gt; todo en una l&amp;iacute;nea:</target>
        </trans-unit>
        <trans-unit id="6d1dfa06a0b2e0253dac9a23d3e763ff2be4729c" translate="yes" xml:space="preserve">
          <source>To shelve changes instead of submitting, use &lt;code&gt;--shelve&lt;/code&gt; and &lt;code&gt;--update-shelve&lt;/code&gt;:</source>
          <target state="translated">Para archivar los cambios en lugar de enviarlos, use &lt;code&gt;--shelve&lt;/code&gt; y &lt;code&gt;--update-shelve&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="b19251adc869dd31b98316a2df3ca3e146f58f68" translate="yes" xml:space="preserve">
          <source>To show all references called &quot;master&quot;, whether tags or heads or anything else, and regardless of how deep in the reference naming hierarchy they are, use:</source>
          <target state="translated">Para mostrar todas las referencias llamadas &quot;maestras&quot;,ya sean etiquetas o cabezas o cualquier otra cosa,y sin importar cuán profundas sean en la jerarquía de nombres de referencia,utilice:</target>
        </trans-unit>
        <trans-unit id="51ec81ccf2337a76aefa897308cd08d96e515614" translate="yes" xml:space="preserve">
          <source>To show only tags, or only proper branch heads, use &quot;--tags&quot; and/or &quot;--heads&quot; respectively (using both means that it shows tags and heads, but not other random references under the refs/ subdirectory).</source>
          <target state="translated">Para mostrar sólo las etiquetas,o sólo las cabezas de las ramas apropiadas,utilice &quot;--tags&quot; y/o &quot;--heads&quot; respectivamente (utilizar ambos significa que muestra las etiquetas y las cabezas,pero no otras referencias aleatorias bajo el subdirectorio refs/).</target>
        </trans-unit>
        <trans-unit id="864f9f1ee17e37f4b3823291b8524eebd5879fc4" translate="yes" xml:space="preserve">
          <source>To show that as an example, let&amp;rsquo;s go back to the git-tutorial repository we used earlier, and create a branch in it. You do that by simply just saying that you want to check out a new branch:</source>
          <target state="translated">Para mostrar eso como ejemplo, regresemos al repositorio git-tutorial que usamos anteriormente y creemos una rama en &amp;eacute;l. Lo hace simplemente diciendo que desea ver una nueva rama:</target>
        </trans-unit>
        <trans-unit id="acab411fa1b0a4e2f72e42b537e21a4bc08bf613" translate="yes" xml:space="preserve">
          <source>To simplify the discussion we will suppose that the untestable area is a simple string of commits and that it was created by a breakage introduced by one commit (let&amp;rsquo;s call it BBC for bisect breaking commit) and later fixed by another one (let&amp;rsquo;s call it BFC for bisect fixing commit).</source>
          <target state="translated">Para simplificar la discusi&amp;oacute;n, supondremos que el &amp;aacute;rea no comprobable es una cadena simple de confirmaciones y que fue creada por una rotura introducida por una confirmaci&amp;oacute;n (llam&amp;eacute;mosla BBC para bisectaci&amp;oacute;n de confirmaci&amp;oacute;n) y luego corregida por otra (llam&amp;eacute;mosla BFC para el compromiso de fijaci&amp;oacute;n de bisectos).</target>
        </trans-unit>
        <trans-unit id="975e3a9279c8287bca9f664bbcc61fee7baa93ca" translate="yes" xml:space="preserve">
          <source>To specify a branch other than the current one, use:</source>
          <target state="translated">Para especificar una rama diferente a la actual,use:</target>
        </trans-unit>
        <trans-unit id="b6b6e95c2c1acd4004bc280690d73f7c9df3e3b0" translate="yes" xml:space="preserve">
          <source>To specify a namespace, set the &lt;code&gt;GIT_NAMESPACE&lt;/code&gt; environment variable to the namespace. For each ref namespace, Git stores the corresponding refs in a directory under &lt;code&gt;refs/namespaces/&lt;/code&gt;. For example, &lt;code&gt;GIT_NAMESPACE=foo&lt;/code&gt; will store refs under &lt;code&gt;refs/namespaces/foo/&lt;/code&gt;. You can also specify namespaces via the &lt;code&gt;--namespace&lt;/code&gt; option to &lt;a href=&quot;git&quot;&gt;git[1]&lt;/a&gt;.</source>
          <target state="translated">Para especificar un espacio de nombres, establezca la variable de entorno &lt;code&gt;GIT_NAMESPACE&lt;/code&gt; en el espacio de nombres. Para cada espacio de nombres de referencia, Git almacena las referencias correspondientes en un directorio bajo &lt;code&gt;refs/namespaces/&lt;/code&gt; . Por ejemplo, &lt;code&gt;GIT_NAMESPACE=foo&lt;/code&gt; almacenar&amp;aacute; referencias en &lt;code&gt;refs/namespaces/foo/&lt;/code&gt; . Tambi&amp;eacute;n puede especificar espacios de nombres a trav&amp;eacute;s de la opci&amp;oacute;n &lt;code&gt;--namespace&lt;/code&gt; para &lt;a href=&quot;git&quot;&gt;git [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8d8e0463dddb070b083bcb1d31f0cd304bcae1a2" translate="yes" xml:space="preserve">
          <source>To specify a single commit or a range of commits, use:</source>
          <target state="translated">Para especificar una sola confirmación o un rango de confirmaciones,use:</target>
        </trans-unit>
        <trans-unit id="b6bdd73c5af990a9c308cb3582e6683a673000a9" translate="yes" xml:space="preserve">
          <source>To stop tracking a file that is currently tracked, use &lt;code&gt;git rm --cached&lt;/code&gt;.</source>
          <target state="translated">Para dejar de rastrear un archivo que se rastrea actualmente, use &lt;code&gt;git rm --cached&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5aabd990937e7026d6c235ccca8da7a1bd54429f" translate="yes" xml:space="preserve">
          <source>To submit all changes that are in the current Git branch but not in the &lt;code&gt;p4/master&lt;/code&gt; branch, use:</source>
          <target state="translated">Para enviar todos los cambios que est&amp;aacute;n en la rama actual de Git pero no en la rama &lt;code&gt;p4/master&lt;/code&gt; , use:</target>
        </trans-unit>
        <trans-unit id="4d37523ff8334f7ae27e64b17d4088a430f024d8" translate="yes" xml:space="preserve">
          <source>To submit patches using GMail&amp;rsquo;s IMAP interface, first, edit your ~/.gitconfig to specify your account settings:</source>
          <target state="translated">Para enviar parches usando la interfaz IMAP de GMail, primero, edite su ~ / .gitconfig para especificar la configuraci&amp;oacute;n de su cuenta:</target>
        </trans-unit>
        <trans-unit id="3829362b0206f78fb7e35755e5364f47036b822a" translate="yes" xml:space="preserve">
          <source>To support virtual hosting, an interpolated path template can be used to dynamically construct alternate paths. The template supports %H for the target hostname as supplied by the client but converted to all lowercase, %CH for the canonical hostname, %IP for the server&amp;rsquo;s IP address, %P for the port number, and %D for the absolute path of the named repository. After interpolation, the path is validated against the directory whitelist.</source>
          <target state="translated">Para admitir el alojamiento virtual, se puede utilizar una plantilla de ruta interpolada para construir de forma din&amp;aacute;mica rutas alternativas. La plantilla admite% H para el nombre de host de destino proporcionado por el cliente pero convertido a min&amp;uacute;sculas,% CH para el nombre de host can&amp;oacute;nico,% IP para la direcci&amp;oacute;n IP del servidor,% P para el n&amp;uacute;mero de puerto y% D para la ruta absoluta de el repositorio nombrado. Despu&amp;eacute;s de la interpolaci&amp;oacute;n, la ruta se valida con la lista blanca del directorio.</target>
        </trans-unit>
        <trans-unit id="5c5bebcfb262219afa24ad57e1be9ff8017de145" translate="yes" xml:space="preserve">
          <source>To switch back to the previous branch before we switched to mytopic (i.e. &quot;master&quot; branch):</source>
          <target state="translated">Para volver a la rama anterior antes de cambiar a la rama miope (es decir,la rama &quot;maestra&quot;):</target>
        </trans-unit>
        <trans-unit id="f604bfa9fc2a5e3a8b43aed4c26f0a58bfbd1e14" translate="yes" xml:space="preserve">
          <source>To tell Git that yes, you really do realize that certain files no longer exist, or that new files should be added, you should use the &lt;code&gt;--remove&lt;/code&gt; and &lt;code&gt;--add&lt;/code&gt; flags respectively.</source>
          <target state="translated">Para decirle a Git que s&amp;iacute;, realmente te das cuenta de que ciertos archivos ya no existen, o que se deben agregar nuevos archivos, debes usar los &lt;code&gt;--remove&lt;/code&gt; y &lt;code&gt;--add&lt;/code&gt; respectivamente.</target>
        </trans-unit>
        <trans-unit id="f3c508cb95e621506ae6e931b2fdadcaba14a047" translate="yes" xml:space="preserve">
          <source>To test the interaction of several topics, merge them into a throw-away branch. You must never base any work on such a branch!</source>
          <target state="translated">Para probar la interacción de varios temas,fusionarlos en una rama desechable.¡Nunca debes basar ningún trabajo en una rama así!</target>
        </trans-unit>
        <trans-unit id="ded44bb687bc8a448accbaa8cf09bc1b10b3ff71" translate="yes" xml:space="preserve">
          <source>To that end, it first finds pairs of commits from both commit ranges that correspond with each other. Two commits are said to correspond when the diff between their patches (i.e. the author information, the commit message and the commit diff) is reasonably small compared to the patches' size. See ``Algorithm`` below for details.</source>
          <target state="translated">Para ello,primero encuentra pares de confirmaciones de ambos rangos de confirmación que se corresponden entre sí.Se dice que dos confirmaciones se corresponden cuando la diferencia entre sus parches (es decir,la información del autor,el mensaje de confirmación y la diferencia de la confirmación)es razonablemente pequeña en comparación con el tamaño de los parches.Ver &quot;Algoritmo&quot; más abajo para más detalles.</target>
        </trans-unit>
        <trans-unit id="28b9a65cbb97d3af18835efd06d4d171278e0508" translate="yes" xml:space="preserve">
          <source>To throw away part of the development, i.e. to assign the &lt;a href=&quot;#def_head&quot;&gt;head&lt;/a&gt; to an earlier &lt;a href=&quot;#def_revision&quot;&gt;revision&lt;/a&gt;.</source>
          <target state="translated">Tirar parte del desarrollo, es decir, asignar la &lt;a href=&quot;#def_head&quot;&gt;cabecera&lt;/a&gt; a una &lt;a href=&quot;#def_revision&quot;&gt;revisi&amp;oacute;n&lt;/a&gt; anterior .</target>
        </trans-unit>
        <trans-unit id="f2857b34f71a88c7afeb725363e4097e2e44ff45" translate="yes" xml:space="preserve">
          <source>To top it all off, even when users finally find working commands, they naturally want to share them. But they may be unaware that their repo didn&amp;rsquo;t have some special cases that someone else&amp;rsquo;s does. So, when someone else with a different repository runs the same commands, they get hit by the problems above. Or, the user just runs commands that really were vetted for special cases, but they run it on a different OS where it doesn&amp;rsquo;t work, as noted above.</source>
          <target state="translated">Para colmo, incluso cuando los usuarios finalmente encuentran comandos que funcionan, naturalmente quieren compartirlos. Pero es posible que no sepan que su repositorio no ten&amp;iacute;a algunos casos especiales que el de otra persona s&amp;iacute;. Entonces, cuando alguien m&amp;aacute;s con un repositorio diferente ejecuta los mismos comandos, se ven afectados por los problemas anteriores. O, el usuario simplemente ejecuta comandos que realmente fueron examinados para casos especiales, pero lo ejecutan en un sistema operativo diferente donde no funciona, como se se&amp;ntilde;al&amp;oacute; anteriormente.</target>
        </trans-unit>
        <trans-unit id="c4d2ca21938c992db0b3b75cacfc935366e6629e" translate="yes" xml:space="preserve">
          <source>To update and refresh only the files already checked out</source>
          <target state="translated">Para actualizar y refrescar sólo los archivos ya revisados</target>
        </trans-unit>
        <trans-unit id="a8c26a487a2f6627cb1ef2fcc7d8934daa7b62d0" translate="yes" xml:space="preserve">
          <source>To update and refresh only the files already checked out:</source>
          <target state="translated">Para actualizar y refrescar sólo los archivos ya revisados:</target>
        </trans-unit>
        <trans-unit id="ec65c1043e980aa5b1f1a444793e6e405a4b07fd" translate="yes" xml:space="preserve">
          <source>To update the index with the contents of a new or modified file, use</source>
          <target state="translated">Para actualizar el índice con el contenido de un archivo nuevo o modificado,utilice</target>
        </trans-unit>
        <trans-unit id="693fe77a3dea0f3b3cf2c4a884d12237d7043db5" translate="yes" xml:space="preserve">
          <source>To update the resulting mine.git repository, you can fetch or pull after replacing the bundle stored at /home/me/tmp/file.bundle with incremental updates.</source>
          <target state="translated">Para actualizar el repositorio resultante de mine.git,puedes traer o sacar después de reemplazar el paquete almacenado en /home/me/tmp/file.bundle con actualizaciones incrementales.</target>
        </trans-unit>
        <trans-unit id="7804c7379482ba8df4ffa8604001ea71fae1937a" translate="yes" xml:space="preserve">
          <source>To use &quot;old&quot; and &quot;new&quot; instead of &quot;good&quot; and bad, you must run &lt;code&gt;git
bisect start&lt;/code&gt; without commits as argument and then run the following commands to add the commits:</source>
          <target state="translated">Para usar &quot;antiguo&quot; y &quot;nuevo&quot; en lugar de &quot;bueno&quot; y malo, debes ejecutar &lt;code&gt;git bisect start&lt;/code&gt; sin confirmaciones como argumento y luego ejecutar los siguientes comandos para agregar las confirmaciones:</target>
        </trans-unit>
        <trans-unit id="288cf0a04f95ab8d9b3cedc9a80bcb75e1eb91a6" translate="yes" xml:space="preserve">
          <source>To use &lt;code&gt;git send-email&lt;/code&gt; to send your patches through the GMail SMTP server, edit ~/.gitconfig to specify your account settings:</source>
          <target state="translated">Para usar &lt;code&gt;git send-email&lt;/code&gt; para enviar sus parches a trav&amp;eacute;s del servidor SMTP de GMail, edite ~ / .gitconfig para especificar la configuraci&amp;oacute;n de su cuenta:</target>
        </trans-unit>
        <trans-unit id="b24b5140a04c50c5ab1f6a8bf4b67a65e4b08446" translate="yes" xml:space="preserve">
          <source>To use a helper, you must first select one to use. Git currently includes the following helpers:</source>
          <target state="translated">Para utilizar un ayudante,primero debe seleccionar uno para utilizarlo.Git incluye actualmente los siguientes ayudantes:</target>
        </trans-unit>
        <trans-unit id="36cbbd22949ca6f21f378ad7a2a2aecbfc17d31c" translate="yes" xml:space="preserve">
          <source>To use the tool, &lt;code&gt;imap.folder&lt;/code&gt; and either &lt;code&gt;imap.tunnel&lt;/code&gt; or &lt;code&gt;imap.host&lt;/code&gt; must be set to appropriate values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00e4f18d69f51ffe1eea42af728cb3d7bb0059ec" translate="yes" xml:space="preserve">
          <source>To use the tool, imap.folder and either imap.tunnel or imap.host must be set to appropriate values.</source>
          <target state="translated">Para utilizar la herramienta,la carpeta imap y el túnel imap o el host imap deben ajustarse a los valores apropiados.</target>
        </trans-unit>
        <trans-unit id="8b51a494019812910be0a147154b59e9ef1b84fa" translate="yes" xml:space="preserve">
          <source>To use this mode effectively, you have to make sure &lt;code&gt;all&lt;/code&gt; the branches you would push out are ready to be pushed out before running &lt;code&gt;git push&lt;/code&gt;, as the whole point of this mode is to allow you to push all of the branches in one go. If you usually finish work on only one branch and push out the result, while other branches are unfinished, this mode is not for you. Also this mode is not suitable for pushing into a shared central repository, as other people may add new branches there, or update the tip of existing branches outside your control.</source>
          <target state="translated">Para usar este modo de manera efectiva, debe asegurarse de que &lt;code&gt;all&lt;/code&gt; las ramas que empujar&amp;iacute;a est&amp;eacute;n listas para ser expulsadas antes de ejecutar &lt;code&gt;git push&lt;/code&gt; , ya que el objetivo de este modo es permitirle empujar todas las ramas de una vez. Si generalmente termina de trabajar en una sola rama y saca el resultado, mientras que otras ramas est&amp;aacute;n sin terminar, este modo no es para usted. Adem&amp;aacute;s, este modo no es adecuado para ingresar a un repositorio central compartido, ya que otras personas pueden agregar nuevas ramas all&amp;iacute; o actualizar la punta de las ramas existentes fuera de su control.</target>
        </trans-unit>
        <trans-unit id="0db2ead5af506998515a70d6693b9cc78c43968a" translate="yes" xml:space="preserve">
          <source>To verify that &lt;code&gt;master&lt;/code&gt; is indeed a superset of &lt;code&gt;maint&lt;/code&gt;, use git log:</source>
          <target state="translated">Para verificar que &lt;code&gt;master&lt;/code&gt; es de hecho un superconjunto de &lt;code&gt;maint&lt;/code&gt; , use git log:</target>
        </trans-unit>
        <trans-unit id="25e07c07376edb7f994c3289d03610c1335d5288" translate="yes" xml:space="preserve">
          <source>Todo list</source>
          <target state="translated">All list</target>
        </trans-unit>
        <trans-unit id="feb6706843b17024c0f5d36ae4a2773f9f7a9d9e" translate="yes" xml:space="preserve">
          <source>Toggle the &quot;sparse&quot; algorithm to determine which objects to include in the pack, when combined with the &quot;--revs&quot; option. This algorithm only walks trees that appear in paths that introduce new objects. This can have significant performance benefits when computing a pack to send a small change. However, it is possible that extra objects are added to the pack-file if the included commits contain certain types of direct renames. If this option is not included, it defaults to the value of &lt;code&gt;pack.useSparse&lt;/code&gt;, which is true unless otherwise specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44e89f12173f1b11f3c33dfcf393dbeb53d74231" translate="yes" xml:space="preserve">
          <source>Toggle the pre-push hook (see &lt;a href=&quot;githooks&quot;&gt;githooks[5]&lt;/a&gt;). The default is --verify, giving the hook a chance to prevent the push. With --no-verify, the hook is bypassed completely.</source>
          <target state="translated">Alternar el gancho de pre-push (ver &lt;a href=&quot;githooks&quot;&gt;githooks [5]&lt;/a&gt; ). El valor predeterminado es --verify, lo que le da al gancho la oportunidad de evitar el empuje. Con --no-verify, el gancho se omite por completo.</target>
        </trans-unit>
        <trans-unit id="e69b3ac557eee7192f98b057069c2f145301ef39" translate="yes" xml:space="preserve">
          <source>Topic branches</source>
          <target state="translated">Ramas temáticas</target>
        </trans-unit>
        <trans-unit id="99011a3381da15bff0042576b0bb55bb6ae9ffd0" translate="yes" xml:space="preserve">
          <source>TortoiseCVS</source>
          <target state="translated">TortoiseCVS</target>
        </trans-unit>
        <trans-unit id="9732ce69da01051c0a62cf40cfeb5063ebcf5c22" translate="yes" xml:space="preserve">
          <source>Trace the evolution of the line range given by &quot;&amp;lt;start&amp;gt;,&amp;lt;end&amp;gt;&quot; (or the function name regex &amp;lt;funcname&amp;gt;) within the &amp;lt;file&amp;gt;. You may not give any pathspec limiters. This is currently limited to a walk starting from a single revision, i.e., you may only give zero or one positive revision arguments, and &amp;lt;start&amp;gt; and &amp;lt;end&amp;gt; (or &amp;lt;funcname&amp;gt;) must exist in the starting revision. You can specify this option more than once. Implies &lt;code&gt;--patch&lt;/code&gt;. Patch output can be suppressed using &lt;code&gt;--no-patch&lt;/code&gt;, but other diff formats (namely &lt;code&gt;--raw&lt;/code&gt;, &lt;code&gt;--numstat&lt;/code&gt;, &lt;code&gt;--shortstat&lt;/code&gt;, &lt;code&gt;--dirstat&lt;/code&gt;, &lt;code&gt;--summary&lt;/code&gt;, &lt;code&gt;--name-only&lt;/code&gt;, &lt;code&gt;--name-status&lt;/code&gt;, &lt;code&gt;--check&lt;/code&gt;) are not currently implemented.</source>
          <target state="translated">Rastree la evoluci&amp;oacute;n del rango de l&amp;iacute;nea dado por &quot;&amp;lt;start&amp;gt;, &amp;lt;end&amp;gt;&quot; (o el nombre de la funci&amp;oacute;n regex &amp;lt;funcname&amp;gt;) dentro del &amp;lt;file&amp;gt;. No puede dar ning&amp;uacute;n limitador de especificaci&amp;oacute;n de ruta. Actualmente, esto est&amp;aacute; limitado a un recorrido a partir de una &amp;uacute;nica revisi&amp;oacute;n, es decir, solo puede dar cero o un argumento de revisi&amp;oacute;n positivo, y &amp;lt;start&amp;gt; y &amp;lt;end&amp;gt; (o &amp;lt;funcname&amp;gt;) deben existir en la revisi&amp;oacute;n inicial. Puede especificar esta opci&amp;oacute;n m&amp;aacute;s de una vez. Implica - &lt;code&gt;--patch&lt;/code&gt; . Salida Patch se puede suprimir usando &lt;code&gt;--no-patch&lt;/code&gt; , pero otros formatos diff (a saber &lt;code&gt;--raw&lt;/code&gt; , &lt;code&gt;--numstat&lt;/code&gt; , &lt;code&gt;--shortstat&lt;/code&gt; , &lt;code&gt;--dirstat&lt;/code&gt; , &lt;code&gt;--summary&lt;/code&gt; , &lt;code&gt;--name-only&lt;/code&gt; , &lt;code&gt;--name-status&lt;/code&gt; , &lt;code&gt;--check&lt;/code&gt; ) no se implementan actualmente.</target>
        </trans-unit>
        <trans-unit id="324f1031e6064bf946ba7ad7de400c92a706ee71" translate="yes" xml:space="preserve">
          <source>Trace2 api</source>
          <target state="translated">Trace2 api</target>
        </trans-unit>
        <trans-unit id="f39bab439a6977ac76a84295e79b079d44b7d908" translate="yes" xml:space="preserve">
          <source>Trace2 config settings are only read from the system and global config files; repository local and worktree config files and &lt;code&gt;-c&lt;/code&gt; command line arguments are not respected.</source>
          <target state="translated">Los ajustes de configuraci&amp;oacute;n de Trace2 solo se leen del sistema y los archivos de configuraci&amp;oacute;n global; Los archivos de configuraci&amp;oacute;n del repositorio local y del &amp;aacute;rbol de trabajo y los argumentos de la l&amp;iacute;nea de comandos &lt;code&gt;-c&lt;/code&gt; no se respetan.</target>
        </trans-unit>
        <trans-unit id="34f4d5fb2d35b898a8c6180c70ae5079360dafe0" translate="yes" xml:space="preserve">
          <source>Trace2 defines the following set of Trace2 Targets. Format details are given in a later section.</source>
          <target state="translated">El Trace2 define el siguiente conjunto de objetivos del Trace2.Los detalles de formato se dan en una sección posterior.</target>
        </trans-unit>
        <trans-unit id="9cffe01770c87380a0c500c2ba4c5fe9919c83ec" translate="yes" xml:space="preserve">
          <source>Trace2 instrumentation throughout the Git code base sends Trace2 messages to the enabled Trace2 Targets. Targets transform these messages content into purpose-specific formats and write events to their data streams. In this manner, the Trace2 API can drive many different types of analysis.</source>
          <target state="translated">La instrumentación de Trace2 a través de la base de códigos de Git envía mensajes de Trace2 a los objetivos de Trace2 habilitados.Los Targets transforman el contenido de estos mensajes en formatos específicos para cada propósito y escriben los eventos en sus flujos de datos.De esta manera,la API de Trace2 puede impulsar muchos tipos diferentes de análisis.</target>
        </trans-unit>
        <trans-unit id="78edf21cb8a1d6593bdb09f0d046c88dfeb5c5d1" translate="yes" xml:space="preserve">
          <source>Trace2 is controlled using &lt;code&gt;trace2.*&lt;/code&gt; config values in the system and global config files and &lt;code&gt;GIT_TRACE2*&lt;/code&gt; environment variables. Trace2 does not read from repo local or worktree config files or respect &lt;code&gt;-c&lt;/code&gt; command line config settings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="952dc6d60a810a50f48d84409a5ca3162f18abfc" translate="yes" xml:space="preserve">
          <source>Trace2 is controlled using &lt;code&gt;trace2.&lt;/code&gt; config values in the system and global config files and &lt;code&gt;GIT_TRACE2&lt;/code&gt; environment variables. Trace2 does not read from repo local or worktree config files or respect &lt;code&gt;-c&lt;/code&gt; command line config settings.</source>
          <target state="translated">Trace2 se controla mediante &lt;code&gt;trace2.&lt;/code&gt; valores de configuraci&amp;oacute;n en el sistema y archivos de configuraci&amp;oacute;n global y variables de entorno &lt;code&gt;GIT_TRACE2&lt;/code&gt; . Trace2 no lee los archivos de configuraci&amp;oacute;n del repositorio local o del &amp;aacute;rbol de trabajo ni respeta la configuraci&amp;oacute;n de la l&amp;iacute;nea de comandos &lt;code&gt;-c&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="20f68aac372bbc56e3b5b3e96aea0079529bedb9" translate="yes" xml:space="preserve">
          <source>Trace2 regions are similar to the existing trace_performance_enter() and trace_performance_leave() routines, but are thread safe and maintain per-thread stacks of timers.</source>
          <target state="translated">Las regiones de Trace2 son similares a las rutinas existentes trace_performance_enter()y trace_performance_leave(),pero son seguras para los hilos y mantienen las pilas de temporizadores por hilos.</target>
        </trans-unit>
        <trans-unit id="8bded73626b8544423d59c1c5a0c1bfb684cb12e" translate="yes" xml:space="preserve">
          <source>Trace2 target formats</source>
          <target state="translated">Formatos de destino de Trace2</target>
        </trans-unit>
        <trans-unit id="e4cb4d4e7e519744d1375eb303304baebc567ae9" translate="yes" xml:space="preserve">
          <source>Trace2 targets</source>
          <target state="translated">Los objetivos de Trace2</target>
        </trans-unit>
        <trans-unit id="a0cfb1f78b98054b282b0aab138d8ea25f2c82bd" translate="yes" xml:space="preserve">
          <source>Tracking and contributing to an entire Subversion-managed project (complete with a trunk, tags and branches):</source>
          <target state="translated">Rastreando y contribuyendo a todo un proyecto gestionado por Subversión (completo con un tronco,etiquetas y ramas):</target>
        </trans-unit>
        <trans-unit id="847895b0cdb93b975e4c930f95d66dabeb1e64d2" translate="yes" xml:space="preserve">
          <source>Tracking and contributing to the trunk of a Subversion-managed project (ignoring tags and branches):</source>
          <target state="translated">Rastreando y contribuyendo al tronco de un proyecto gestionado por Subversión (ignorando las etiquetas y las ramas):</target>
        </trans-unit>
        <trans-unit id="667c19a45142471c0c20cc605b683a6a3152afb1" translate="yes" xml:space="preserve">
          <source>Traditionally, tips of branches and tags (collectively known as &lt;code&gt;refs&lt;/code&gt;) were stored one file per ref in a (sub)directory under &lt;code&gt;$GIT_DIR/refs&lt;/code&gt; directory. While many branch tips tend to be updated often, most tags and some branch tips are never updated. When a repository has hundreds or thousands of tags, this one-file-per-ref format both wastes storage and hurts performance.</source>
          <target state="translated">Tradicionalmente, las puntas de ramas y etiquetas (conocidas colectivamente como &lt;code&gt;refs&lt;/code&gt; ) se almacenaban un archivo por refs en un (sub) directorio en el directorio &lt;code&gt;$GIT_DIR/refs&lt;/code&gt; . Si bien muchas sugerencias de sucursales tienden a actualizarse con frecuencia, la mayor&amp;iacute;a de las etiquetas y algunas sugerencias de sucursales nunca se actualizan. Cuando un repositorio tiene cientos o miles de etiquetas, este formato de un archivo por referencia desperdicia almacenamiento y perjudica el rendimiento.</target>
        </trans-unit>
        <trans-unit id="a5cf7db57e9cf074478d171148671cc677faf56a" translate="yes" xml:space="preserve">
          <source>Trailing spaces are ignored unless they are quoted with backslash (&quot;&lt;code&gt;\&lt;/code&gt;&quot;).</source>
          <target state="translated">Los espacios finales se ignoran a menos que est&amp;eacute;n entrecomillados con barra invertida (&quot; &lt;code&gt;\&lt;/code&gt; &quot;).</target>
        </trans-unit>
        <trans-unit id="18baa50eee1aac68104e16bd4ad94c661cde3869" translate="yes" xml:space="preserve">
          <source>Transfer size: In its current form Git requires the whole working tree present. It does not allow partial trees to be transferred in fetch or clone. If the project you work on consists of multiple repositories tied together as submodules in a superproject, you can avoid fetching the working trees of the repositories you are not interested in.</source>
          <target state="translated">Tamaño de la transferencia:En su forma actual,Git requiere la presencia de todo el árbol de trabajo.No permite que se transfieran árboles parciales en la búsqueda o clonación.Si el proyecto en el que trabajas consiste en múltiples repositorios unidos como submódulos en un superproyecto,puedes evitar traer los árboles de trabajo de los repositorios que no te interesan.</target>
        </trans-unit>
        <trans-unit id="bdf6a912dffd18ed6042052fce8610d96ce56a71" translate="yes" xml:space="preserve">
          <source>Transform stdin by substituting all the 40-character SHA-1 hexes (say $hex) with &quot;$hex ($rev_name)&quot;. When used with --name-only, substitute with &quot;$rev_name&quot;, omitting $hex altogether. Intended for the scripter&amp;rsquo;s use.</source>
          <target state="translated">Transforme stdin sustituyendo todos los hex&amp;aacute;gonos SHA-1 de 40 caracteres (por ejemplo, $ hex) por &quot;$ hex ($ rev_name)&quot;. Cuando se usa con --name-only, sustit&amp;uacute;yalo por &quot;$ rev_name&quot;, omitiendo $ hex por completo. Destinado al uso del guionista.</target>
        </trans-unit>
        <trans-unit id="fc873c381aea0c960eb3ebd47773defb66d7e124" translate="yes" xml:space="preserve">
          <source>Transmit &amp;lt;string&amp;gt; as a push option. As the push option must not contain LF or NUL characters, the string is not encoded.</source>
          <target state="translated">Transmita &amp;lt;string&amp;gt; como una opci&amp;oacute;n de inserci&amp;oacute;n. Como la opci&amp;oacute;n de inserci&amp;oacute;n no debe contener caracteres LF o NUL, la cadena no est&amp;aacute; codificada.</target>
        </trans-unit>
        <trans-unit id="32bd61986aca00f68612950bbcdb4915d3d0e846" translate="yes" xml:space="preserve">
          <source>Transmit the given string to the server when communicating using protocol version 2. The given string must not contain a NUL or LF character. The server&amp;rsquo;s handling of server options, including unknown ones, is server-specific. When multiple &lt;code&gt;--server-option=&amp;lt;option&amp;gt;&lt;/code&gt; are given, they are all sent to the other side in the order listed on the command line.</source>
          <target state="translated">Transmita la cadena dada al servidor cuando se comunique usando la versi&amp;oacute;n del protocolo 2. La cadena dada no debe contener un car&amp;aacute;cter NUL o LF. El manejo del servidor de las opciones del servidor, incluidas las desconocidas, es espec&amp;iacute;fico del servidor. Cuando se &lt;code&gt;--server-option=&amp;lt;option&amp;gt;&lt;/code&gt; varias opciones --server-option = &amp;lt;option&amp;gt; , todas se env&amp;iacute;an al otro lado en el orden que aparece en la l&amp;iacute;nea de comando.</target>
        </trans-unit>
        <trans-unit id="39635a03df29b9789e505a1038590e24ea96c9e9" translate="yes" xml:space="preserve">
          <source>Transmit the given string to the server when communicating using protocol version 2. The given string must not contain a NUL or LF character. When multiple &lt;code&gt;--server-option=&amp;lt;option&amp;gt;&lt;/code&gt; are given, they are all sent to the other side in the order listed on the command line.</source>
          <target state="translated">Transmita la cadena dada al servidor cuando se comunique usando la versi&amp;oacute;n del protocolo 2. La cadena dada no debe contener un car&amp;aacute;cter NUL o LF. Cuando se &lt;code&gt;--server-option=&amp;lt;option&amp;gt;&lt;/code&gt; varias opciones --server-option = &amp;lt;option&amp;gt; , todas se env&amp;iacute;an al otro lado en el orden que aparece en la l&amp;iacute;nea de comando.</target>
        </trans-unit>
        <trans-unit id="2995fbcc2c84443582483713456b482a39b63e37" translate="yes" xml:space="preserve">
          <source>Transmit the given string to the server, which passes them to the pre-receive as well as the post-receive hook. The given string must not contain a NUL or LF character. When multiple &lt;code&gt;--push-option=&amp;lt;option&amp;gt;&lt;/code&gt; are given, they are all sent to the other side in the order listed on the command line. When no &lt;code&gt;--push-option=&amp;lt;option&amp;gt;&lt;/code&gt; is given from the command line, the values of configuration variable &lt;code&gt;push.pushOption&lt;/code&gt; are used instead.</source>
          <target state="translated">Transmita la cadena dada al servidor, que los pasa al gancho de pre-recepci&amp;oacute;n y post-recepci&amp;oacute;n. La cadena dada no debe contener un car&amp;aacute;cter NUL o LF. Cuando se &lt;code&gt;--push-option=&amp;lt;option&amp;gt;&lt;/code&gt; m&amp;uacute;ltiples --push-option = &amp;lt;option&amp;gt; , todas se env&amp;iacute;an al otro lado en el orden que aparece en la l&amp;iacute;nea de comando. Cuando no se proporciona &lt;code&gt;--push-option=&amp;lt;option&amp;gt;&lt;/code&gt; desde la l&amp;iacute;nea de comando, se utilizan los valores de la variable de configuraci&amp;oacute;n &lt;code&gt;push.pushOption&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9960fbc3363c91bebbbc4dae3127f4935a1a22d6" translate="yes" xml:space="preserve">
          <source>Treat all files as text.</source>
          <target state="translated">Tratar todos los archivos como texto.</target>
        </trans-unit>
        <trans-unit id="a08e9c61e543dccc4a24afe7a10c95737cbb1ca7" translate="yes" xml:space="preserve">
          <source>Treat pathspecs literally (i.e. no globbing, no pathspec magic). This is equivalent to setting the &lt;code&gt;GIT_LITERAL_PATHSPECS&lt;/code&gt; environment variable to &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">Trate pathpecs literalmente (es decir, sin globbing, sin magia de pathpec). Esto equivale a establecer la variable de entorno &lt;code&gt;GIT_LITERAL_PATHSPECS&lt;/code&gt; en &lt;code&gt;1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8024445062b4bb90b2e84a4da6e0bb207f37b5f4" translate="yes" xml:space="preserve">
          <source>Treat the &amp;lt;string&amp;gt; given to &lt;code&gt;-S&lt;/code&gt; as an extended POSIX regular expression to match.</source>
          <target state="translated">Trate la &amp;lt;cadena&amp;gt; dada a &lt;code&gt;-S&lt;/code&gt; como una expresi&amp;oacute;n regular POSIX extendida para que coincida.</target>
        </trans-unit>
        <trans-unit id="72315ec1092243bb561e5b4697869abb3601099e" translate="yes" xml:space="preserve">
          <source>Treat the repository as a bare repository. If GIT_DIR environment is not set, it is set to the current working directory.</source>
          <target state="translated">Tratar el depósito como un depósito desnudo.Si el entorno GIT_DIR no está configurado,está configurado en el directorio de trabajo actual.</target>
        </trans-unit>
        <trans-unit id="1dad3a3b77cbf00bf58d87ee853af6d3cddb344a" translate="yes" xml:space="preserve">
          <source>Treat the revision argument as a &amp;lt;revision range&amp;gt;, even if it is just a single commit (that would normally be treated as a &amp;lt;since&amp;gt;). Note that root commits included in the specified range are always formatted as creation patches, independently of this flag.</source>
          <target state="translated">Trate el argumento de revisi&amp;oacute;n como un &amp;lt;rango de revisi&amp;oacute;n&amp;gt;, incluso si es solo una confirmaci&amp;oacute;n &amp;uacute;nica (que normalmente se tratar&amp;iacute;a como un &amp;lt;desde que&amp;gt;). Tenga en cuenta que las confirmaciones de root incluidas en el rango especificado siempre se formatean como parches de creaci&amp;oacute;n, independientemente de este indicador.</target>
        </trans-unit>
        <trans-unit id="aa88eae97d6ad1936bc41000081122649aee8d74" translate="yes" xml:space="preserve">
          <source>Treats lines with the indicated type of whitespace change as unchanged for the sake of a three-way merge. Whitespace changes mixed with other changes to a line are not ignored. See also &lt;a href=&quot;git-diff&quot;&gt;git-diff[1]&lt;/a&gt;&lt;code&gt;-b&lt;/code&gt;, &lt;code&gt;-w&lt;/code&gt;, &lt;code&gt;--ignore-space-at-eol&lt;/code&gt;, and &lt;code&gt;--ignore-cr-at-eol&lt;/code&gt;.</source>
          <target state="translated">Trata las l&amp;iacute;neas con el tipo de cambio de espacio en blanco indicado como sin cambios por el bien de una combinaci&amp;oacute;n de tres v&amp;iacute;as. Los cambios de espacios en blanco combinados con otros cambios en una l&amp;iacute;nea no se ignoran. Consulte tambi&amp;eacute;n &lt;a href=&quot;git-diff&quot;&gt;git-diff [1] &lt;/a&gt; &lt;code&gt;-b&lt;/code&gt; , &lt;code&gt;-w&lt;/code&gt; , &lt;code&gt;--ignore-space-at-eol&lt;/code&gt; y &lt;code&gt;--ignore-cr-at-eol&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6ddd0e484558c1f8e50a8fe3c2dc7499225a9297" translate="yes" xml:space="preserve">
          <source>Tree Object</source>
          <target state="translated">Objeto de árbol</target>
        </trans-unit>
        <trans-unit id="bce93b7f9d4c3064a3f582b574710500d7e5efb5" translate="yes" xml:space="preserve">
          <source>Tree and blob objects outside of &lt;code&gt;refs/{tags,heads}/*&lt;/code&gt; will be treated the same way as if they were inside &lt;code&gt;refs/tags/*&lt;/code&gt;, any update of them will be rejected.</source>
          <target state="translated">Los objetos de &amp;aacute;rbol y blob fuera de &lt;code&gt;refs/{tags,heads}/*&lt;/code&gt; se tratar&amp;aacute;n de la misma manera que si estuvieran dentro de &lt;code&gt;refs/tags/*&lt;/code&gt; , cualquier actualizaci&amp;oacute;n de ellos ser&amp;aacute; rechazada.</target>
        </trans-unit>
        <trans-unit id="faed43d5018a65bdda1021ea817b81efdd882a1f" translate="yes" xml:space="preserve">
          <source>Tree objects as well as tag objects not pointing at commits, cannot be described. When describing blobs, the lightweight tags pointing at blobs are ignored, but the blob is still described as &amp;lt;committ-ish&amp;gt;:&amp;lt;path&amp;gt; despite the lightweight tag being favorable.</source>
          <target state="translated">Los objetos de &amp;aacute;rbol, as&amp;iacute; como los objetos de etiqueta que no apuntan a confirmaciones, no se pueden describir. Al describir los blobs, las etiquetas ligeras que apuntan a los blobs se ignoran, pero el blob a&amp;uacute;n se describe como &amp;lt;committ-ish&amp;gt;: &amp;lt;path&amp;gt; a pesar de que la etiqueta ligera es favorable.</target>
        </trans-unit>
        <trans-unit id="d94a666a1561928de12071aa36f46464acd70f54" translate="yes" xml:space="preserve">
          <source>Tree to checkout from (when paths are given). If not specified, the index will be used.</source>
          <target state="translated">Árbol de salida (cuando se dan los caminos).Si no se especifica,se utilizará el índice.</target>
        </trans-unit>
        <trans-unit id="fef8232d1c67b8b3403ba454c8ae3c965dc5fb72" translate="yes" xml:space="preserve">
          <source>Trees (aka directories) use just 12 bytes of memory on top of the memory required for their entries (see &amp;ldquo;per active file&amp;rdquo; below). The cost of a tree is virtually 0, as its overhead amortizes out over the individual file entries.</source>
          <target state="translated">Los &amp;aacute;rboles (tambi&amp;eacute;n conocidos como directorios) utilizan solo 12 bytes de memoria adem&amp;aacute;s de la memoria necesaria para sus entradas (consulte &quot;por archivo activo&quot; a continuaci&amp;oacute;n). El costo de un &amp;aacute;rbol es virtualmente 0, ya que sus gastos generales se amortizan sobre las entradas de archivos individuales.</target>
        </trans-unit>
        <trans-unit id="2bb80d7d00c0395ecaf93c5dc9cd657c191b576d" translate="yes" xml:space="preserve">
          <source>Tries to reinstate not only the working tree&amp;rsquo;s changes, but also the index&amp;rsquo;s ones. However, this can fail, when you have conflicts (which are stored in the index, where you therefore can no longer apply the changes as they were originally).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8797468d6463e4f71332170d9f50ca7fd321cc3a" translate="yes" xml:space="preserve">
          <source>Trivial merges are done by &lt;code&gt;git read-tree&lt;/code&gt; itself. Only conflicting paths will be in unmerged state when &lt;code&gt;git read-tree&lt;/code&gt; returns.</source>
          <target state="translated">Las fusiones triviales las realiza &lt;code&gt;git read-tree&lt;/code&gt; . Solo las rutas en conflicto estar&amp;aacute;n en estado no combinado cuando &lt;code&gt;git read-tree&lt;/code&gt; regrese.</target>
        </trans-unit>
        <trans-unit id="c14d8e783a9f521d30b73eb971eac8f82acc62a0" translate="yes" xml:space="preserve">
          <source>True merge</source>
          <target state="translated">La verdadera fusión</target>
        </trans-unit>
        <trans-unit id="33a579ffc0dccbff15be01734ea4138ea4e7635c" translate="yes" xml:space="preserve">
          <source>Trust</source>
          <target state="translated">Trust</target>
        </trans-unit>
        <trans-unit id="df8a0e781552ee165e12d7086194c5f37262dc36" translate="yes" xml:space="preserve">
          <source>Try to speed up the traversal using the pack bitmap index (if one is available). Note that when traversing with &lt;code&gt;--objects&lt;/code&gt;, trees and blobs will not have their associated path printed.</source>
          <target state="translated">Intente acelerar el recorrido utilizando el &amp;iacute;ndice de mapa de bits del paquete (si hay uno disponible). Tenga en cuenta que cuando se atraviesa con &lt;code&gt;--objects&lt;/code&gt; , los &amp;aacute;rboles y las manchas no tendr&amp;aacute;n impresa su ruta asociada.</target>
        </trans-unit>
        <trans-unit id="db494399fc91d335ea933090c261cf51f7615da6" translate="yes" xml:space="preserve">
          <source>Try to update from the upstream resulted in a lot of conflicts; you were not ready to spend a lot of time merging right now, so you decide to do that later.</source>
          <target state="translated">Tratar de actualizar desde la corriente ascendente resultó en muchos conflictos;no estabas preparado para pasar mucho tiempo fusionándote ahora,así que decidiste hacerlo más tarde.</target>
        </trans-unit>
        <trans-unit id="3a12d2b4901990f4e580a360ff850809fe3f67b9" translate="yes" xml:space="preserve">
          <source>Turn off any previous &lt;code&gt;--filter=&lt;/code&gt; argument.</source>
          <target state="translated">Desactive cualquier argumento &lt;code&gt;--filter=&lt;/code&gt; anterior .</target>
        </trans-unit>
        <trans-unit id="34771065d121fc03fac8d38d540e254893826329" translate="yes" xml:space="preserve">
          <source>Turn off branch colors, even when the configuration file gives the default to color output. Same as &lt;code&gt;--color=never&lt;/code&gt;.</source>
          <target state="translated">Desactive los colores de las ramas, incluso cuando el archivo de configuraci&amp;oacute;n proporcione la salida de color predeterminada. Igual que &lt;code&gt;--color=never&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6d9cbb32ce6c68e264cdb30b91e954cf183958d3" translate="yes" xml:space="preserve">
          <source>Turn off colored diff. It is the same as &lt;code&gt;--color=never&lt;/code&gt;.</source>
          <target state="translated">Desactive la diferencia de color. Es lo mismo que &lt;code&gt;--color=never&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3d9b2354f095eeb41acddbf4f3d69d4ac5775813" translate="yes" xml:space="preserve">
          <source>Turn off colored diff. This can be used to override configuration settings. It is the same as &lt;code&gt;--color=never&lt;/code&gt;.</source>
          <target state="translated">Desactive la diferencia de color. Esto se puede utilizar para anular los ajustes de configuraci&amp;oacute;n. Es lo mismo que &lt;code&gt;--color=never&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8ad464ef4a6c59cdcb2319e829113b9b9a0202fe" translate="yes" xml:space="preserve">
          <source>Turn off colored output, even when the configuration file gives the default to color output. Same as &lt;code&gt;--color=never&lt;/code&gt;.</source>
          <target state="translated">Desactive la salida en color, incluso cuando el archivo de configuraci&amp;oacute;n d&amp;eacute; el valor predeterminado a la salida en color. Igual que &lt;code&gt;--color=never&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a3a997309d5fb6a6ca30f0f6201f278a284d8e1e" translate="yes" xml:space="preserve">
          <source>Turn off match highlighting, even when the configuration file gives the default to color output. Same as &lt;code&gt;--color=never&lt;/code&gt;.</source>
          <target state="translated">Desactive el resaltado de coincidencias, incluso cuando el archivo de configuraci&amp;oacute;n proporcione la salida de color predeterminada. Igual que &lt;code&gt;--color=never&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d4fab0f230de92fdcff08739247b39013a4dcf91" translate="yes" xml:space="preserve">
          <source>Turn off move detection. This can be used to override configuration settings. It is the same as &lt;code&gt;--color-moved=no&lt;/code&gt;.</source>
          <target state="translated">Desactiva la detecci&amp;oacute;n de movimientos. Esto se puede utilizar para anular los ajustes de configuraci&amp;oacute;n. Es lo mismo que &lt;code&gt;--color-moved=no&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b0eb0b106db412297afc722cb22850ad8fd89466" translate="yes" xml:space="preserve">
          <source>Turn off rename detection, even when the configuration file gives the default to do so.</source>
          <target state="translated">Desactiva la detección de renombramiento,incluso cuando el archivo de configuración da el valor por defecto para hacerlo.</target>
        </trans-unit>
        <trans-unit id="4e867193eda90e02a99d5e3b2d3aff016424ee32" translate="yes" xml:space="preserve">
          <source>Turn off rename detection. This overrides the &lt;code&gt;merge.renames&lt;/code&gt; configuration variable. See also &lt;a href=&quot;git-diff&quot;&gt;git-diff[1]&lt;/a&gt;&lt;code&gt;--no-renames&lt;/code&gt;.</source>
          <target state="translated">Desactive la detecci&amp;oacute;n de cambio de nombre. Esto anula la variable de configuraci&amp;oacute;n &lt;code&gt;merge.renames&lt;/code&gt; . Consulte tambi&amp;eacute;n &lt;a href=&quot;git-diff&quot;&gt;git-diff [1] &lt;/a&gt; &lt;code&gt;--no-renames&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="29eb4a9a74bb1156273caaa264fc85825c0572ef" translate="yes" xml:space="preserve">
          <source>Turn on rename detection, optionally setting the similarity threshold. See also &lt;a href=&quot;git-diff&quot;&gt;git-diff[1]&lt;/a&gt;&lt;code&gt;--find-renames&lt;/code&gt;.</source>
          <target state="translated">Active la detecci&amp;oacute;n de cambio de nombre, estableciendo opcionalmente el umbral de similitud. Consulte tambi&amp;eacute;n &lt;a href=&quot;git-diff&quot;&gt;git-diff [1] &lt;/a&gt; &lt;code&gt;--find-renames&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a279dbfc86c680add56c7a5993ef6023dec20637" translate="yes" xml:space="preserve">
          <source>Turn on rename detection, optionally setting the similarity threshold. This is the default. This overrides the &lt;code&gt;merge.renames&lt;/code&gt; configuration variable. See also &lt;a href=&quot;git-diff&quot;&gt;git-diff[1]&lt;/a&gt;&lt;code&gt;--find-renames&lt;/code&gt;.</source>
          <target state="translated">Active la detecci&amp;oacute;n de cambio de nombre, estableciendo opcionalmente el umbral de similitud. Este es el predeterminado. Esto anula la variable de configuraci&amp;oacute;n &lt;code&gt;merge.renames&lt;/code&gt; . Consulte tambi&amp;eacute;n &lt;a href=&quot;git-diff&quot;&gt;git-diff [1] &lt;/a&gt; &lt;code&gt;--find-renames&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e9d077a66918e3017c929a4d5ef75e05f491a825" translate="yes" xml:space="preserve">
          <source>Turn on/off rename detection regardless of user configuration. See also &lt;a href=&quot;git-diff&quot;&gt;git-diff[1]&lt;/a&gt;&lt;code&gt;--no-renames&lt;/code&gt;.</source>
          <target state="translated">Active / desactive la detecci&amp;oacute;n de cambio de nombre independientemente de la configuraci&amp;oacute;n del usuario. Consulte tambi&amp;eacute;n &lt;a href=&quot;git-diff&quot;&gt;git-diff [1] &lt;/a&gt; &lt;code&gt;--no-renames&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ff597cb2e8f500da1bb43f369ea55f0017801fbc" translate="yes" xml:space="preserve">
          <source>Turn progress on/off explicitly. If neither is specified, progress is shown if standard error is connected to a terminal.</source>
          <target state="translated">Activar o desactivar el progreso explícitamente.Si no se especifica ninguna de las dos cosas,se muestra el progreso si se conecta un error estándar a un terminal.</target>
        </trans-unit>
        <trans-unit id="b63e204e5b5bb236923126ba202fed353f8079ec" translate="yes" xml:space="preserve">
          <source>Turn progress on/off explicitly. If neither is specified, progress is shown if standard error is connected to a terminal. Note that not all merge strategies may support progress reporting.</source>
          <target state="translated">Activar o desactivar el progreso explícitamente.Si no se especifica ninguna de las dos cosas,se muestra el progreso si se conecta un error estándar a un terminal.Tenga en cuenta que no todas las estrategias de fusión pueden apoyar la presentación de informes de progreso.</target>
        </trans-unit>
        <trans-unit id="ae22b8d4ecb731b706e41a653df929373ee8e8e0" translate="yes" xml:space="preserve">
          <source>Turns off any previous &lt;code&gt;--filter=&lt;/code&gt; argument.</source>
          <target state="translated">Desactiva cualquier argumento &lt;code&gt;--filter=&lt;/code&gt; anterior .</target>
        </trans-unit>
        <trans-unit id="2701a94c0eb55cbd958a87dff3e959673ff1bf53" translate="yes" xml:space="preserve">
          <source>Tutorial</source>
          <target state="translated">Tutorial</target>
        </trans-unit>
        <trans-unit id="954e9a2594b4d5687b25c9c1a8357bca3253b18f" translate="yes" xml:space="preserve">
          <source>Tweaking diff output</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aef2d842e6b781b12f96bc62f4ab607c12e12218" translate="yes" xml:space="preserve">
          <source>Two Tree Merge</source>
          <target state="translated">Dos árboles se fusionan</target>
        </trans-unit>
        <trans-unit id="6bda5442e87e811366b94ce6966009ecac6ac5dc" translate="yes" xml:space="preserve">
          <source>Two consecutive asterisks (&quot;&lt;code&gt;**&lt;/code&gt;&quot;) in patterns matched against full pathname may have special meaning:</source>
          <target state="translated">Dos asteriscos consecutivos (&quot; &lt;code&gt;**&lt;/code&gt; &quot;) en patrones que coincidan con el nombre de ruta completo pueden tener un significado especial:</target>
        </trans-unit>
        <trans-unit id="e187ca5222f2f1c9a298321896225faf75c5697a" translate="yes" xml:space="preserve">
          <source>Two consecutive asterisks (&amp;ldquo;**&amp;rdquo;) in patterns matched against full pathname may have special meaning:</source>
          <target state="translated">Dos asteriscos consecutivos (&quot;**&quot;) en patrones que coincidan con el nombre de ruta completo pueden tener un significado especial:</target>
        </trans-unit>
        <trans-unit id="fce699584c34eaef39ec9c341ad51961e194a419" translate="yes" xml:space="preserve">
          <source>Two special values are supported: &lt;code&gt;off&lt;/code&gt; will simply close the corresponding standard handle, and if &lt;code&gt;GIT_REDIRECT_STDERR&lt;/code&gt; is &lt;code&gt;2&amp;gt;&amp;amp;1&lt;/code&gt;, standard error will be redirected to the same handle as standard output.</source>
          <target state="translated">Se admiten dos valores especiales: &lt;code&gt;off&lt;/code&gt; simplemente cerrar&amp;aacute; el identificador est&amp;aacute;ndar correspondiente, y si &lt;code&gt;GIT_REDIRECT_STDERR&lt;/code&gt; es &lt;code&gt;2&amp;gt;&amp;amp;1&lt;/code&gt; , el error est&amp;aacute;ndar se redirigir&amp;aacute; al mismo identificador que la salida est&amp;aacute;ndar.</target>
        </trans-unit>
        <trans-unit id="34a739d621f3038babff4f0f681d077135e77a75" translate="yes" xml:space="preserve">
          <source>Two things are interesting here:</source>
          <target state="translated">Hay dos cosas interesantes aquí:</target>
        </trans-unit>
        <trans-unit id="ced48512ad4d3cb13ca20b7cb1f2f8e4abd0bc9d" translate="yes" xml:space="preserve">
          <source>Tying it all together</source>
          <target state="translated">Atándolo todo...</target>
        </trans-unit>
        <trans-unit id="3a87a5a93967e0c0facb5bdbedab0a6936494920" translate="yes" xml:space="preserve">
          <source>Type 5 is reserved for future expansion. Type 0 is invalid.</source>
          <target state="translated">El tipo 5 está reservado para futuras expansiones.El tipo 0 es inválido.</target>
        </trans-unit>
        <trans-unit id="e8e8d3184972cec12ef3bd94d7eec7947cbe4b53" translate="yes" xml:space="preserve">
          <source>Typical gitweb config files will only change starting (default) time zone, and leave other elements at their default values:</source>
          <target state="translated">Los típicos archivos de configuración de gitweb sólo cambian la zona horaria inicial (por defecto),y dejan los demás elementos con sus valores por defecto:</target>
        </trans-unit>
        <trans-unit id="3aa25a3911a2da2f000729dbc451ee040fee4a66" translate="yes" xml:space="preserve">
          <source>Typical usage is something like:</source>
          <target state="translated">El uso típico es algo así como:</target>
        </trans-unit>
        <trans-unit id="db1f5b1028dc570d4bb8caccd45a45601a38210c" translate="yes" xml:space="preserve">
          <source>Typical use of git credential</source>
          <target state="translated">Uso típico de la credencial de git</target>
        </trans-unit>
        <trans-unit id="d63a8a509d39725ec5fc85189ba54ffbab2dd0bb" translate="yes" xml:space="preserve">
          <source>Typically it will be placed in a MUA&amp;rsquo;s drafts folder, edited to add timely commentary that should not go in the changelog after the three dashes, and then sent as a message whose body, in our example, starts with &quot;arch/arm config files were&amp;hellip;​&quot;. On the receiving end, readers can save interesting patches in a UNIX mailbox and apply them with &lt;a href=&quot;git-am&quot;&gt;git-am[1]&lt;/a&gt;.</source>
          <target state="translated">Por lo general, se colocar&amp;aacute; en la carpeta de borradores de MUA, se editar&amp;aacute; para agregar comentarios oportunos que no deber&amp;iacute;an ir al registro de cambios despu&amp;eacute;s de los tres guiones, y luego se enviar&amp;aacute; como un mensaje cuyo cuerpo, en nuestro ejemplo, comienza con &quot;arch / arm config files were &amp;hellip; &quot;. En el extremo receptor, los lectores pueden guardar parches interesantes en un buz&amp;oacute;n de UNIX y aplicarlos con &lt;a href=&quot;git-am&quot;&gt;git-am [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3b51965ce078cc4b0d9ecb0a1b113a383a8700dc" translate="yes" xml:space="preserve">
          <source>Typically such a variable may look like this:</source>
          <target state="translated">Típicamente tal variable puede verse así:</target>
        </trans-unit>
        <trans-unit id="9f47be9cc1e7fcec80fcc7e52dcbd486a27d2ee2" translate="yes" xml:space="preserve">
          <source>Typically this is run with a script calling Git&amp;rsquo;s imitation of the &lt;code&gt;merge&lt;/code&gt; command from the RCS package.</source>
          <target state="translated">Normalmente, esto se ejecuta con un script que llama a la imitaci&amp;oacute;n de Git del comando &lt;code&gt;merge&lt;/code&gt; del paquete RCS.</target>
        </trans-unit>
        <trans-unit id="e4333d902cedfd0d4739277fdec621b3f9f09422" translate="yes" xml:space="preserve">
          <source>Typically this matches the real type of &amp;lt;object&amp;gt; but asking for a type that can trivially be dereferenced from the given &amp;lt;object&amp;gt; is also permitted. An example is to ask for a &quot;tree&quot; with &amp;lt;object&amp;gt; being a commit object that contains it, or to ask for a &quot;blob&quot; with &amp;lt;object&amp;gt; being a tag object that points at it.</source>
          <target state="translated">Por lo general, esto coincide con el tipo real de &amp;lt;objeto&amp;gt;, pero tambi&amp;eacute;n se permite pedir un tipo que pueda desreferenciarse trivialmente del &amp;lt;objeto&amp;gt; dado. Un ejemplo es pedir un &quot;&amp;aacute;rbol&quot; con &amp;lt;object&amp;gt; como un objeto de confirmaci&amp;oacute;n que lo contiene, o pedir un &quot;blob&quot; con &amp;lt;object&amp;gt; como un objeto de etiqueta que apunta a &amp;eacute;l.</target>
        </trans-unit>
        <trans-unit id="6b016c5601edd059fd8dc12bb8d8426b6525fff2" translate="yes" xml:space="preserve">
          <source>Typically you would first remove all tracked files from the working tree using this command:</source>
          <target state="translated">Normalmente,primero eliminarías todos los archivos rastreados del árbol de trabajo usando este comando:</target>
        </trans-unit>
        <trans-unit id="3a2ee6ee14f11a86e1818d26c21e9493d38718f1" translate="yes" xml:space="preserve">
          <source>Typically, parallel recursive and multi-remote fetches will be faster. By default fetches are performed sequentially, not in parallel.</source>
          <target state="translated">Típicamente,las búsquedas paralelas recursivas y multi-remotas serán más rápidas.Por defecto,las búsquedas se realizan secuencialmente,no en paralelo.</target>
        </trans-unit>
        <trans-unit id="94e92e77c127b9c8a314ec2c48c4916e008c6404" translate="yes" xml:space="preserve">
          <source>Typically, this is invoked as &lt;code&gt;git read-tree -m $H $M&lt;/code&gt;, where $H is the head commit of the current repository, and $M is the head of a foreign tree, which is simply ahead of $H (i.e. we are in a fast-forward situation).</source>
          <target state="translated">Por lo general, esto se invoca como &lt;code&gt;git read-tree -m $H $M&lt;/code&gt; , donde $ H es la confirmaci&amp;oacute;n principal del repositorio actual y $ M es la cabeza de un &amp;aacute;rbol externo, que est&amp;aacute; simplemente por delante de $ H (es decir, est&amp;aacute;n en una situaci&amp;oacute;n de avance r&amp;aacute;pido).</target>
        </trans-unit>
        <trans-unit id="0ada5827188094ef6e82c28e45e078ca96f54ca4" translate="yes" xml:space="preserve">
          <source>U: file is unmerged (you must complete the merge before it can be committed)</source>
          <target state="translated">U:el archivo está sin fusionar (debe completar la fusión antes de que pueda ser cometido)</target>
        </trans-unit>
        <trans-unit id="1a7a0d0dd35212ae4c8c4c873315c6e7e9351f3b" translate="yes" xml:space="preserve">
          <source>URI and label (title) for the Git logo link (or your site logo, if you chose to use different logo image). By default, these both refer to Git homepage, &lt;a href=&quot;https://git-scm.com&quot;&gt;https://git-scm.com&lt;/a&gt;; in the past, they pointed to Git documentation at &lt;a href=&quot;https://www.kernel.org&quot;&gt;https://www.kernel.org&lt;/a&gt;.</source>
          <target state="translated">URI y etiqueta (t&amp;iacute;tulo) para el enlace del logotipo de Git (o el logotipo de su sitio, si elige usar una imagen de logotipo diferente). De forma predeterminada, ambos se refieren a la p&amp;aacute;gina de inicio de Git, &lt;a href=&quot;https://git-scm.com&quot;&gt;https://git-scm.com&lt;/a&gt; ; en el pasado, se&amp;ntilde;alaron la documentaci&amp;oacute;n de Git en &lt;a href=&quot;https://www.kernel.org&quot;&gt;https://www.kernel.org&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8561702ffd22bbb5ccd1a81c9c8d8cc77f16fa7e" translate="yes" xml:space="preserve">
          <source>Un-sets the previously set type specifier (if one was previously set). This option requests that &lt;code&gt;git config&lt;/code&gt; not canonicalize the retrieved variable. &lt;code&gt;--no-type&lt;/code&gt; has no effect without &lt;code&gt;--type=&amp;lt;type&amp;gt;&lt;/code&gt; or &lt;code&gt;--&amp;lt;type&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">Desestablece el especificador de tipo establecido anteriormente (si se configur&amp;oacute; anteriormente). Esta opci&amp;oacute;n solicita que &lt;code&gt;git config&lt;/code&gt; no canonicalice la variable recuperada. &lt;code&gt;--no-type&lt;/code&gt; no tiene ning&amp;uacute;n efecto sin &lt;code&gt;--type=&amp;lt;type&amp;gt;&lt;/code&gt; o &lt;code&gt;--&amp;lt;type&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="911839695653d988872929c95814b8902e300040" translate="yes" xml:space="preserve">
          <source>Under &lt;code&gt;--pretty=oneline&lt;/code&gt;, the commit message is prefixed with this information on the same line. This option cannot be combined with &lt;code&gt;--reverse&lt;/code&gt;. See also &lt;a href=&quot;git-reflog&quot;&gt;git-reflog[1]&lt;/a&gt;.</source>
          <target state="translated">En &lt;code&gt;--pretty=oneline&lt;/code&gt; , el mensaje de confirmaci&amp;oacute;n tiene como prefijo esta informaci&amp;oacute;n en la misma l&amp;iacute;nea. Esta opci&amp;oacute;n no se puede combinar con &lt;code&gt;--reverse&lt;/code&gt; . Consulte tambi&amp;eacute;n &lt;a href=&quot;git-reflog&quot;&gt;git-reflog [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="64ba59969ba5a36d002d9a189101c624fcf7d3cc" translate="yes" xml:space="preserve">
          <source>Under &lt;code&gt;--pretty=reference&lt;/code&gt;, this information will not be shown at all.</source>
          <target state="translated">Bajo &lt;code&gt;--pretty=reference&lt;/code&gt; , esta informaci&amp;oacute;n no se mostrar&amp;aacute; en absoluto.</target>
        </trans-unit>
        <trans-unit id="c73a6e04cc57ad10ee4ae7284f559a5ae2a53d36" translate="yes" xml:space="preserve">
          <source>Under certain circumstances, some versions of &lt;code&gt;diff&lt;/code&gt; do not correctly detect a missing new-line at the end of the file. As a result, patches created by such &lt;code&gt;diff&lt;/code&gt; programs do not record incomplete lines correctly. This option adds support for applying such patches by working around this bug.</source>
          <target state="translated">En determinadas circunstancias, algunas versiones de &lt;code&gt;diff&lt;/code&gt; no detectan correctamente una nueva l&amp;iacute;nea faltante al final del archivo. Como resultado, los parches creados por dichos programas de &lt;code&gt;diff&lt;/code&gt; no registran correctamente las l&amp;iacute;neas incompletas. Esta opci&amp;oacute;n agrega soporte para aplicar dichos parches al solucionar este error.</target>
        </trans-unit>
        <trans-unit id="67a27dbf5548d05ac63e85bd8b4c875d8f48c102" translate="yes" xml:space="preserve">
          <source>Understanding History: Commits</source>
          <target state="translated">Entendiendo la historia:Compromisos</target>
        </trans-unit>
        <trans-unit id="9334dba95d5dfb2042093dd9adbddea5f77c5eb4" translate="yes" xml:space="preserve">
          <source>Understanding history: History diagrams</source>
          <target state="translated">Entendiendo la historia:Diagramas de la historia</target>
        </trans-unit>
        <trans-unit id="85bd1a7ea75afef7e0417cd2bf9d9f3cf13e5e08" translate="yes" xml:space="preserve">
          <source>Understanding history: What is a branch?</source>
          <target state="translated">Entendiendo la historia:¿Qué es una rama?</target>
        </trans-unit>
        <trans-unit id="6d61d96a492f996316f1e84e66cbfde933315e2c" translate="yes" xml:space="preserve">
          <source>Understanding history: commits, parents, and reachability</source>
          <target state="translated">Comprensión de la historia:compromisos,padres y accesibilidad</target>
        </trans-unit>
        <trans-unit id="afa47a28efb9d6631a7be02ac359bed5256995ce" translate="yes" xml:space="preserve">
          <source>Undo a commit and redo</source>
          <target state="translated">Deshacer un compromiso y rehacerlo</target>
        </trans-unit>
        <trans-unit id="61cb90c052dfcd0fda883c6029d1d0fc0a0f4685" translate="yes" xml:space="preserve">
          <source>Undo a commit, making it a topic branch</source>
          <target state="translated">Deshacer un compromiso,convirtiéndolo en una rama temática</target>
        </trans-unit>
        <trans-unit id="93d74feb000c815128d68a09c83733db43b69c15" translate="yes" xml:space="preserve">
          <source>Undo a merge or pull</source>
          <target state="translated">Deshacer una fusión o tirar</target>
        </trans-unit>
        <trans-unit id="4728c70cd06347b5f285fb3e7887387303b3968e" translate="yes" xml:space="preserve">
          <source>Undo a merge or pull inside a dirty working tree</source>
          <target state="translated">Deshacer una fusión o tirar dentro de un árbol de trabajo sucio</target>
        </trans-unit>
        <trans-unit id="27b7abb5b90b7a2e8f00eaf74b6df8323ba7d926" translate="yes" xml:space="preserve">
          <source>Undo add</source>
          <target state="translated">Deshacer añadir</target>
        </trans-unit>
        <trans-unit id="ca677a11d37ffdca5231911a194cc2fcdffc5a26" translate="yes" xml:space="preserve">
          <source>Undo commits permanently</source>
          <target state="translated">Deshacer se compromete permanentemente</target>
        </trans-unit>
        <trans-unit id="4180759bca2f04cde0ec69611cb0e0ec1cfe7139" translate="yes" xml:space="preserve">
          <source>Undoes the effects of &lt;code&gt;fetch&lt;/code&gt; back to the specified revision. This allows you to re-&lt;code&gt;fetch&lt;/code&gt; an SVN revision. Normally the contents of an SVN revision should never change and &lt;code&gt;reset&lt;/code&gt; should not be necessary. However, if SVN permissions change, or if you alter your --ignore-paths option, a &lt;code&gt;fetch&lt;/code&gt; may fail with &quot;not found in commit&quot; (file not previously visible) or &quot;checksum mismatch&quot; (missed a modification). If the problem file cannot be ignored forever (with --ignore-paths) the only way to repair the repo is to use &lt;code&gt;reset&lt;/code&gt;.</source>
          <target state="translated">Deshace los efectos de &lt;code&gt;fetch&lt;/code&gt; la revisi&amp;oacute;n especificada. Esto le permite &lt;code&gt;fetch&lt;/code&gt; una revisi&amp;oacute;n SVN. Normalmente, el contenido de una revisi&amp;oacute;n SVN nunca deber&amp;iacute;a cambiar y no deber&amp;iacute;a ser necesario &lt;code&gt;reset&lt;/code&gt; . Sin embargo, si cambian los permisos de SVN, o si altera su opci&amp;oacute;n --ignore-routes, una &lt;code&gt;fetch&lt;/code&gt; puede fallar con &quot;no encontrado en la confirmaci&amp;oacute;n&quot; (archivo no visible previamente) o &quot;falta de coincidencia de suma de comprobaci&amp;oacute;n&quot; (se perdi&amp;oacute; una modificaci&amp;oacute;n). Si el archivo problem&amp;aacute;tico no se puede ignorar para siempre (con --ignore-routes), la &amp;uacute;nica forma de reparar el repositorio es usar &lt;code&gt;reset&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ac1f58f831611819b4114b80dd55e3ce540d5b23" translate="yes" xml:space="preserve">
          <source>Undoing a merge</source>
          <target state="translated">Deshacer una fusión</target>
        </trans-unit>
        <trans-unit id="f552d5a5802e3df6273c784214def9840b82f594" translate="yes" xml:space="preserve">
          <source>Unfortunately this system becomes inefficient once a project has a lot of objects. Try this on an old project:</source>
          <target state="translated">Desafortunadamente este sistema se vuelve ineficiente una vez que un proyecto tiene muchos objetos.Pruebe esto en un proyecto antiguo:</target>
        </trans-unit>
        <trans-unit id="c7deb06b3e42a38e2b00598939aa39f8d24897bd" translate="yes" xml:space="preserve">
          <source>Unfortunately, the desired effect of cleaning up text files with mixed line endings and the undesired effect of corrupting binary files cannot be distinguished. In both cases CRLFs are removed in an irreversible way. For text files this is the right thing to do because CRLFs are line endings, while for binary files converting CRLFs corrupts data.</source>
          <target state="translated">Lamentablemente,no se puede distinguir el efecto deseado de limpiar los archivos de texto con terminaciones de líneas mixtas y el efecto no deseado de corromper los archivos binarios.En ambos casos los CRLF se eliminan de forma irreversible.En el caso de los archivos de texto esto es lo correcto porque los CRLFs son terminaciones de línea,mientras que en el caso de los archivos binarios la conversión de los CRLFs corrompe los datos.</target>
        </trans-unit>
        <trans-unit id="6da1ce58d3a6c34c76807dc44593d7cd8c6563b6" translate="yes" xml:space="preserve">
          <source>Unless &lt;code&gt;--text&lt;/code&gt; is supplied patches of binary files without a textconv filter will be ignored.</source>
          <target state="translated">A menos que se proporcione &lt;code&gt;--text&lt;/code&gt; , se ignorar&amp;aacute;n los parches de archivos binarios sin un filtro textconv.</target>
        </trans-unit>
        <trans-unit id="54cbf98b314812a07f65f95ae77e8608ddf0b26f" translate="yes" xml:space="preserve">
          <source>Unless &lt;code&gt;-f&lt;/code&gt; is given, the &lt;code&gt;replace&lt;/code&gt; reference must not yet exist.</source>
          <target state="translated">A menos que se proporcione &lt;code&gt;-f&lt;/code&gt; , la referencia de &lt;code&gt;replace&lt;/code&gt; a&amp;uacute;n no debe existir.</target>
        </trans-unit>
        <trans-unit id="ec0a9816e3fe8947b4bfff6f5914c3288bed6fc9" translate="yes" xml:space="preserve">
          <source>Unless &lt;code&gt;-f&lt;/code&gt; is given, the named tag must not yet exist.</source>
          <target state="translated">A menos que se proporcione &lt;code&gt;-f&lt;/code&gt; , la etiqueta con nombre a&amp;uacute;n no debe existir.</target>
        </trans-unit>
        <trans-unit id="7824ccb45f3d7be1fd07def25712792fbdf3f009" translate="yes" xml:space="preserve">
          <source>Unlike &lt;code&gt;git blame&lt;/code&gt; and &lt;code&gt;git annotate&lt;/code&gt; in older versions of git, the extent of the annotation can be limited to both line ranges and revision ranges. The &lt;code&gt;-L&lt;/code&gt; option, which limits annotation to a range of lines, may be specified multiple times.</source>
          <target state="translated">A diferencia de &lt;code&gt;git blame&lt;/code&gt; y &lt;code&gt;git annotate&lt;/code&gt; en versiones anteriores de git, el alcance de la anotaci&amp;oacute;n se puede limitar tanto a los rangos de l&amp;iacute;nea como a los rangos de revisi&amp;oacute;n. La opci&amp;oacute;n &lt;code&gt;-L&lt;/code&gt; , que limita la anotaci&amp;oacute;n a un rango de l&amp;iacute;neas, puede especificarse varias veces.</target>
        </trans-unit>
        <trans-unit id="1fa5e3a4c28161d2ef67ee80d5624341cfa56be1" translate="yes" xml:space="preserve">
          <source>Unlike &lt;code&gt;git diff-files&lt;/code&gt;, which showed the difference between the index file and the working tree, &lt;code&gt;git diff-index&lt;/code&gt; shows the differences between a committed &lt;strong&gt;tree&lt;/strong&gt; and either the index file or the working tree. In other words, &lt;code&gt;git diff-index&lt;/code&gt; wants a tree to be diffed against, and before we did the commit, we couldn&amp;rsquo;t do that, because we didn&amp;rsquo;t have anything to diff against.</source>
          <target state="translated">A &lt;code&gt;git diff-files&lt;/code&gt; , que mostraban la diferencia entre el archivo &amp;iacute;ndice y el &amp;aacute;rbol de trabajo, &lt;code&gt;git diff-index&lt;/code&gt; muestra las diferencias entre un &lt;strong&gt;&amp;aacute;rbol&lt;/strong&gt; comprometido y el archivo &amp;iacute;ndice o el &amp;aacute;rbol de trabajo. En otras palabras, &lt;code&gt;git diff-index&lt;/code&gt; quiere que se diferencie un &amp;aacute;rbol, y antes de hacer la confirmaci&amp;oacute;n, no pod&amp;iacute;amos hacer eso, porque no ten&amp;iacute;amos nada contra lo que diferir.</target>
        </trans-unit>
        <trans-unit id="a75073ebd9356a7219cb30b4bb866c17ce8b906c" translate="yes" xml:space="preserve">
          <source>Unlike &lt;code&gt;gitk&lt;/code&gt;, &lt;code&gt;git gui&lt;/code&gt; focuses on commit generation and single file annotation and does not show project history. It does however supply menu actions to start a &lt;code&gt;gitk&lt;/code&gt; session from within &lt;code&gt;git gui&lt;/code&gt;.</source>
          <target state="translated">A diferencia de &lt;code&gt;gitk&lt;/code&gt; , &lt;code&gt;git gui&lt;/code&gt; se centra en la generaci&amp;oacute;n de confirmaciones y la anotaci&amp;oacute;n de un solo archivo y no muestra el historial del proyecto. Sin embargo, proporciona acciones de men&amp;uacute; para iniciar una sesi&amp;oacute;n de &lt;code&gt;gitk&lt;/code&gt; desde dentro de &lt;code&gt;git gui&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cd17281830ac5a9aa50c0d768481eabf04240182" translate="yes" xml:space="preserve">
          <source>Unlike the &lt;code&gt;raw&lt;/code&gt; format above, the time zone/UTC offset information contained in an RFC 2822 date string is used to adjust the date value to UTC prior to storage. Therefore it is important that this information be as accurate as possible.</source>
          <target state="translated">A diferencia del formato sin &lt;code&gt;raw&lt;/code&gt; anterior, la informaci&amp;oacute;n de la zona horaria / compensaci&amp;oacute;n UTC contenida en una cadena de fecha RFC 2822 se utiliza para ajustar el valor de la fecha a UTC antes del almacenamiento. Por tanto, es importante que esta informaci&amp;oacute;n sea lo m&amp;aacute;s precisa posible.</target>
        </trans-unit>
        <trans-unit id="b9ebe23208a4d3f51d6690b78b04b40646f8e2f1" translate="yes" xml:space="preserve">
          <source>Unlike the &lt;code&gt;rfc2822&lt;/code&gt; format, this format is very strict. Any variation in formatting will cause fast-import to reject the value, and some sanity checks on the numeric values may also be performed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="422977ffd462a03a6cbce65db58b07001eb2214f" translate="yes" xml:space="preserve">
          <source>Unlike the &lt;code&gt;rfc2822&lt;/code&gt; format, this format is very strict. Any variation in formatting will cause fast-import to reject the value.</source>
          <target state="translated">A diferencia del formato &lt;code&gt;rfc2822&lt;/code&gt; , este formato es muy estricto. Cualquier variaci&amp;oacute;n en el formato har&amp;aacute; que la importaci&amp;oacute;n r&amp;aacute;pida rechace el valor.</target>
        </trans-unit>
        <trans-unit id="a5e8af576412d2facd9f39a0996da0da165c42ee" translate="yes" xml:space="preserve">
          <source>Unlike the Porcelain format, the filename information is always given and terminates the entry:</source>
          <target state="translated">A diferencia del formato de la porcelana,la información del nombre del archivo siempre se da y termina la entrada:</target>
        </trans-unit>
        <trans-unit id="b603b31236d9df1a4442c23c62ea6317f2525837" translate="yes" xml:space="preserve">
          <source>Unlike the longhand form, when Alice fetches from Bob using a remote repository shorthand set up with &lt;code&gt;git remote&lt;/code&gt;, what was fetched is stored in a remote-tracking branch, in this case &lt;code&gt;bob/master&lt;/code&gt;. So after this:</source>
          <target state="translated">A diferencia de la forma a mano alzada, cuando Alice obtiene de Bob usando una taquigraf&amp;iacute;a de repositorio remoto configurada con &lt;code&gt;git remote&lt;/code&gt; , lo que se obtuvo se almacena en una rama de seguimiento remoto, en este caso &lt;code&gt;bob/master&lt;/code&gt; . Entonces despu&amp;eacute;s de esto:</target>
        </trans-unit>
        <trans-unit id="cc8e9909209a90f3a790bc3005980e8527de79e5" translate="yes" xml:space="preserve">
          <source>Unlike the traditional &lt;code&gt;unified&lt;/code&gt; diff format, which shows two files A and B with a single column that has &lt;code&gt;-&lt;/code&gt; (minus &amp;mdash; appears in A but removed in B), &lt;code&gt;+&lt;/code&gt; (plus &amp;mdash; missing in A but added to B), or &lt;code&gt;&quot; &quot;&lt;/code&gt; (space &amp;mdash; unchanged) prefix, this format compares two or more files file1, file2,&amp;hellip;​ with one file X, and shows how X differs from each of fileN. One column for each of fileN is prepended to the output line to note how X&amp;rsquo;s line is different from it.</source>
          <target state="translated">A diferencia del formato de diferencias &lt;code&gt;unified&lt;/code&gt; tradicional , que muestra dos archivos A y B con una sola columna que tiene &lt;code&gt;-&lt;/code&gt; (menos - aparece en A pero eliminado en B), &lt;code&gt;+&lt;/code&gt; (m&amp;aacute;s - falta en A pero agregado a B), o &lt;code&gt;&quot; &quot;&lt;/code&gt; ( espacio - sin cambios), este formato compara dos o m&amp;aacute;s archivos file1, file2, ... con un archivo X, y muestra c&amp;oacute;mo X difiere de cada uno de fileN. Una columna para cada archivo N se antepone a la l&amp;iacute;nea de salida para notar c&amp;oacute;mo la l&amp;iacute;nea de X es diferente de ella.</target>
        </trans-unit>
        <trans-unit id="71233552f2a4fc77054593fac1f6899dd0308229" translate="yes" xml:space="preserve">
          <source>Unlike variables like &lt;code&gt;color.ui&lt;/code&gt; and &lt;code&gt;core.editor&lt;/code&gt; the &lt;code&gt;receive.fsck.&amp;lt;msg-id&amp;gt;&lt;/code&gt; and &lt;code&gt;fetch.fsck.&amp;lt;msg-id&amp;gt;&lt;/code&gt; variables will not fall back on the &lt;code&gt;fsck.&amp;lt;msg-id&amp;gt;&lt;/code&gt; configuration if they aren&amp;rsquo;t set. To uniformly configure the same fsck settings in different circumstances all three of them they must all set to the same values.</source>
          <target state="translated">A diferencia de las variables como &lt;code&gt;color.ui&lt;/code&gt; y &lt;code&gt;core.editor&lt;/code&gt; , las variables Receive.fsck &lt;code&gt;receive.fsck.&amp;lt;msg-id&amp;gt;&lt;/code&gt; y &lt;code&gt;fetch.fsck.&amp;lt;msg-id&amp;gt;&lt;/code&gt; no recurrir&amp;aacute;n a la configuraci&amp;oacute;n &lt;code&gt;fsck.&amp;lt;msg-id&amp;gt;&lt;/code&gt; si no lo est&amp;aacute;n conjunto. Para configurar uniformemente los mismos ajustes de fsck en diferentes circunstancias, los tres deben tener los mismos valores.</target>
        </trans-unit>
        <trans-unit id="00ee5ed7b48c819f6f323dbe1b9a72aef5a0c864" translate="yes" xml:space="preserve">
          <source>Unlike variables like &lt;code&gt;color.ui&lt;/code&gt; and &lt;code&gt;core.editor&lt;/code&gt; the &lt;code&gt;receive.fsck.skipList&lt;/code&gt; and &lt;code&gt;fetch.fsck.skipList&lt;/code&gt; variables will not fall back on the &lt;code&gt;fsck.skipList&lt;/code&gt; configuration if they aren&amp;rsquo;t set. To uniformly configure the same fsck settings in different circumstances all three of them they must all set to the same values.</source>
          <target state="translated">A diferencia de variables como &lt;code&gt;color.ui&lt;/code&gt; y &lt;code&gt;core.editor&lt;/code&gt; la &lt;code&gt;receive.fsck.skipList&lt;/code&gt; y &lt;code&gt;fetch.fsck.skipList&lt;/code&gt; variables no caer&amp;aacute;n de nuevo en el &lt;code&gt;fsck.skipList&lt;/code&gt; configuraci&amp;oacute;n si no se establecen. Para configurar uniformemente los mismos ajustes de fsck en diferentes circunstancias, los tres deben tener los mismos valores.</target>
        </trans-unit>
        <trans-unit id="8a3dffb4c65d7a1f27e907ef2a919885d1125ac9" translate="yes" xml:space="preserve">
          <source>Unlike when pushing with &lt;a href=&quot;git-push&quot;&gt;git-push[1]&lt;/a&gt;, any updates outside of &lt;code&gt;refs/{tags,heads}/*&lt;/code&gt; will be accepted without &lt;code&gt;+&lt;/code&gt; in the refspec (or &lt;code&gt;--force&lt;/code&gt;), whether that&amp;rsquo;s swapping e.g. a tree object for a blob, or a commit for another commit that&amp;rsquo;s doesn&amp;rsquo;t have the previous commit as an ancestor etc.</source>
          <target state="translated">A diferencia de cuando se empuja con &lt;a href=&quot;git-push&quot;&gt;git-push [1]&lt;/a&gt; , cualquier actualizaci&amp;oacute;n fuera de &lt;code&gt;refs/{tags,heads}/*&lt;/code&gt; se aceptar&amp;aacute; sin &lt;code&gt;+&lt;/code&gt; en refspec (o &lt;code&gt;--force&lt;/code&gt; ), ya sea intercambiando, por ejemplo, un objeto de &amp;aacute;rbol por un blob, o una confirmaci&amp;oacute;n para otra confirmaci&amp;oacute;n que no tiene la confirmaci&amp;oacute;n anterior como ancestro, etc.</target>
        </trans-unit>
        <trans-unit id="2f2516ccb262ba2dda1eeb5218e911868837ce78" translate="yes" xml:space="preserve">
          <source>Unlike when pushing with &lt;a href=&quot;git-push&quot;&gt;git-push[1]&lt;/a&gt;, there is no configuration which&amp;rsquo;ll amend these rules, and nothing like a &lt;code&gt;pre-fetch&lt;/code&gt; hook analogous to the &lt;code&gt;pre-receive&lt;/code&gt; hook.</source>
          <target state="translated">A diferencia de cuando se empuja con &lt;a href=&quot;git-push&quot;&gt;git-push [1]&lt;/a&gt; , no hay ninguna configuraci&amp;oacute;n que modifique estas reglas, y nada como un gancho de &lt;code&gt;pre-fetch&lt;/code&gt; an&amp;aacute;logo al gancho de &lt;code&gt;pre-receive&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fb79f423670171900d7e94880e8d45907e9f995c" translate="yes" xml:space="preserve">
          <source>Unlock a working tree, allowing it to be pruned, moved or deleted.</source>
          <target state="translated">Desbloquear un árbol en funcionamiento,permitiendo que sea podado,movido o eliminado.</target>
        </trans-unit>
        <trans-unit id="b00eee8b49227caba98e5d68033660ff6076ebcc" translate="yes" xml:space="preserve">
          <source>Unmerged entries have the following format; the first character is a &quot;u&quot; to distinguish from ordinary changed entries.</source>
          <target state="translated">Las entradas no fusionadas tienen el siguiente formato;el primer carácter es una &quot;u&quot; para distinguirlas de las entradas ordinarias modificadas.</target>
        </trans-unit>
        <trans-unit id="2c99cc569343579b221cd64026ecc62bb1c21d7b" translate="yes" xml:space="preserve">
          <source>Unpack objects from a packed archive</source>
          <target state="translated">Desempaquetar objetos de un archivo empaquetado</target>
        </trans-unit>
        <trans-unit id="42e2a268d032a6abb00d4cbd80feaa1ecd7a75d6" translate="yes" xml:space="preserve">
          <source>Unreachable tags, commits, and trees will also be accessed to find the tips of dangling segments of history. Use &lt;code&gt;--no-dangling&lt;/code&gt; if you don&amp;rsquo;t care about this output and want to speed it up further.</source>
          <target state="translated">Tambi&amp;eacute;n se acceder&amp;aacute; a etiquetas, confirmaciones y &amp;aacute;rboles inalcanzables para encontrar las sugerencias de segmentos colgantes de la historia. Use &lt;code&gt;--no-dangling&lt;/code&gt; si no le importa esta salida y desea acelerarla a&amp;uacute;n m&amp;aacute;s.</target>
        </trans-unit>
        <trans-unit id="d8a4efd1d470fc3c5ede97084c82a35b9804122a" translate="yes" xml:space="preserve">
          <source>Unregister the given submodules, i.e. remove the whole &lt;code&gt;submodule.$name&lt;/code&gt; section from .git/config together with their work tree. Further calls to &lt;code&gt;git submodule update&lt;/code&gt;, &lt;code&gt;git submodule foreach&lt;/code&gt; and &lt;code&gt;git submodule sync&lt;/code&gt; will skip any unregistered submodules until they are initialized again, so use this command if you don&amp;rsquo;t want to have a local checkout of the submodule in your working tree anymore.</source>
          <target state="translated">Anule el registro de los subm&amp;oacute;dulos dados, es decir, elimine toda la secci&amp;oacute;n del &lt;code&gt;submodule.$name&lt;/code&gt; de .git / config junto con su &amp;aacute;rbol de trabajo. Las llamadas posteriores a &lt;code&gt;git submodule update&lt;/code&gt; , &lt;code&gt;git submodule foreach&lt;/code&gt; y &lt;code&gt;git submodule sync&lt;/code&gt; omitir&amp;aacute;n los subm&amp;oacute;dulos no registrados hasta que se vuelvan a inicializar, as&amp;iacute; que use este comando si ya no desea tener un pago local del subm&amp;oacute;dulo en su &amp;aacute;rbol de trabajo.</target>
        </trans-unit>
        <trans-unit id="1431f68f359f8699975be39dca08302c67d68d9e" translate="yes" xml:space="preserve">
          <source>Unset</source>
          <target state="translated">Unset</target>
        </trans-unit>
        <trans-unit id="8ff954e80b42b18d3d0fcda602d94db1e46da2d4" translate="yes" xml:space="preserve">
          <source>Unsetting the &lt;code&gt;text&lt;/code&gt; attribute on a path tells Git not to attempt any end-of-line conversion upon checkin or checkout.</source>
          <target state="translated">La desactivaci&amp;oacute;n del atributo de &lt;code&gt;text&lt;/code&gt; o en una ruta le dice a Git que no intente ninguna conversi&amp;oacute;n de final de l&amp;iacute;nea al registrarse o al finalizar la compra.</target>
        </trans-unit>
        <trans-unit id="7f84947907454dd0cb412d2a8e5d5e3b9c2382f0" translate="yes" xml:space="preserve">
          <source>Unsetting the variable, or setting it to empty, &quot;0&quot; or &quot;false&quot; (case insensitive) disables trace messages.</source>
          <target state="translated">Desactivando la variable,o poniéndola en vacío,&quot;0&quot; o &quot;falso&quot; (insensible a las mayúsculas y minúsculas)se desactivan los mensajes de rastreo.</target>
        </trans-unit>
        <trans-unit id="c176eff9c64fa28a4b6af1aa296cc1394bbf7a80" translate="yes" xml:space="preserve">
          <source>Unshelve</source>
          <target state="translated">Unshelve</target>
        </trans-unit>
        <trans-unit id="9fde2b36ff30053ad23e6a695929873244cc0367" translate="yes" xml:space="preserve">
          <source>Unshelve options</source>
          <target state="translated">Opciones no disponibles</target>
        </trans-unit>
        <trans-unit id="004e593b6690fb3d48f4f5a86eac1cd13b5b2234" translate="yes" xml:space="preserve">
          <source>Unshelving will take a shelved P4 changelist, and produce the equivalent git commit in the branch refs/remotes/p4-unshelved/&amp;lt;changelist&amp;gt;.</source>
          <target state="translated">Unshelving tomar&amp;aacute; una lista de cambios P4 archivada y producir&amp;aacute; la confirmaci&amp;oacute;n de git equivalente en la rama refs / remotes / p4-unshelved / &amp;lt;changelist&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="a6e7eb706e115cdaf88206be37eb67b232d007bc" translate="yes" xml:space="preserve">
          <source>Unspecified</source>
          <target state="translated">Unspecified</target>
        </trans-unit>
        <trans-unit id="78f88266b367e8b6e086054e91f1ebc89e168d16" translate="yes" xml:space="preserve">
          <source>Until Git version 2.20, and unlike when pushing with &lt;a href=&quot;git-push&quot;&gt;git-push[1]&lt;/a&gt;, any updates to &lt;code&gt;refs/tags/*&lt;/code&gt; would be accepted without &lt;code&gt;+&lt;/code&gt; in the refspec (or &lt;code&gt;--force&lt;/code&gt;). When fetching, we promiscuously considered all tag updates from a remote to be forced fetches. Since Git version 2.20, fetching to update &lt;code&gt;refs/tags/*&lt;/code&gt; works the same way as when pushing. I.e. any updates will be rejected without &lt;code&gt;+&lt;/code&gt; in the refspec (or &lt;code&gt;--force&lt;/code&gt;).</source>
          <target state="translated">Hasta la versi&amp;oacute;n 2.20 de Git, y a diferencia de cuando se empuja con &lt;a href=&quot;git-push&quot;&gt;git-push [1]&lt;/a&gt; , cualquier actualizaci&amp;oacute;n de &lt;code&gt;refs/tags/*&lt;/code&gt; ser&amp;iacute;a aceptada sin &lt;code&gt;+&lt;/code&gt; en refspec (o &lt;code&gt;--force&lt;/code&gt; ). Al buscar, consideramos promiscuamente todas las actualizaciones de etiquetas desde un control remoto como recuperaciones forzadas. Desde la versi&amp;oacute;n 2.20 de Git, la b&amp;uacute;squeda para actualizar &lt;code&gt;refs/tags/*&lt;/code&gt; funciona de la misma manera que cuando se empuja. Es decir, cualquier actualizaci&amp;oacute;n ser&amp;aacute; rechazada sin &lt;code&gt;+&lt;/code&gt; en refspec (o &lt;code&gt;--force&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="9514c500d61430538679eec9081979b274172cf9" translate="yes" xml:space="preserve">
          <source>Untracked cache</source>
          <target state="translated">Caché no rastreado</target>
        </trans-unit>
        <trans-unit id="614ce4ff1bf92552970ab54ff766006d0da693f9" translate="yes" xml:space="preserve">
          <source>Untracked items have the following format:</source>
          <target state="translated">Los artículos no rastreados tienen el siguiente formato:</target>
        </trans-unit>
        <trans-unit id="1eade895e693b4111455eda06a87af1097cf4d6c" translate="yes" xml:space="preserve">
          <source>Untyped &lt;a href=&quot;#def_object&quot;&gt;object&lt;/a&gt;, e.g. the contents of a file.</source>
          <target state="translated">&lt;a href=&quot;#def_object&quot;&gt;Objeto&lt;/a&gt; sin tipo , por ejemplo, el contenido de un archivo.</target>
        </trans-unit>
        <trans-unit id="7b839a219907b09268c047c522a03961e96bd78b" translate="yes" xml:space="preserve">
          <source>Unused configuration variable. Used in Git versions 2.20 and 2.21 as an escape hatch to enable the legacy shellscript implementation of rebase. Now the built-in rewrite of it in C is always used. Setting this will emit a warning, to alert any remaining users that setting this now does nothing.</source>
          <target state="translated">Variable de configuración no utilizada.Utilizada en las versiones 2.20 y 2.21 de Git como trampilla de escape para permitir la implementación del shellscript heredado de rebase.Ahora se utiliza siempre la reescritura incorporada de la misma en C.La configuración de esto emitirá una advertencia,para alertar a los usuarios restantes que la configuración de esto ahora no hace nada.</target>
        </trans-unit>
        <trans-unit id="315fc3f07f41b1c3600ceb87f6a9f32b85f1da70" translate="yes" xml:space="preserve">
          <source>Unused configuration variable. Used in Git versions 2.22 to 2.26 as an escape hatch to enable the legacy shellscript implementation of stash. Now the built-in rewrite of it in C is always used. Setting this will emit a warning, to alert any remaining users that setting this now does nothing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca31b4c795dcb03444e6d0c037dbcd47081c70a9" translate="yes" xml:space="preserve">
          <source>Update affected files from CVS repository before attempting export.</source>
          <target state="translated">Actualice los archivos afectados del repositorio CVS antes de intentar exportarlos.</target>
        </trans-unit>
        <trans-unit id="82e59b151c004802a1fa23ba3e75a68d14df0e2a" translate="yes" xml:space="preserve">
          <source>Update an existing shelved changelist with this commit. Implies --shelve. Repeat for multiple shelved changelists.</source>
          <target state="translated">Actualizar una lista de cambios existente con este compromiso.Implica...Estante.Repita para múltiples listas de cambios archivadas.</target>
        </trans-unit>
        <trans-unit id="5433caf2e572561b5bb38ff5e69b0263d08b90aa" translate="yes" xml:space="preserve">
          <source>Update and examine branches from the repository you cloned from:</source>
          <target state="translated">Actualiza y examina las ramas del repositorio del que clonaste:</target>
        </trans-unit>
        <trans-unit id="381f15e94e347f076ef71f417ee29b782a6dcc4d" translate="yes" xml:space="preserve">
          <source>Update auxiliary info file to help dumb servers</source>
          <target state="translated">Actualizar el archivo de información auxiliar para ayudar a los servidores tontos</target>
        </trans-unit>
        <trans-unit id="d94aecddb1a2d3c03afb4a7cf4e1bb3a0123c2c6" translate="yes" xml:space="preserve">
          <source>Update hook</source>
          <target state="translated">Gancho de actualización</target>
        </trans-unit>
        <trans-unit id="e5f960e3f28d7d7ea59f8750682a356ae18535be" translate="yes" xml:space="preserve">
          <source>Update remote refs along with associated objects</source>
          <target state="translated">Actualizar los refs remotos junto con los objetos asociados</target>
        </trans-unit>
        <trans-unit id="ee3315ea0cbb49ab6105a89db0964480184c3ce9" translate="yes" xml:space="preserve">
          <source>Update the Git repository with recent changes from p4, rebasing your work on top:</source>
          <target state="translated">Actualiza el repositorio de Git con los cambios recientes de p4,basando tu trabajo en la parte superior:</target>
        </trans-unit>
        <trans-unit id="5937294218e2d7b95b7b77414b52c326239ca8d5" translate="yes" xml:space="preserve">
          <source>Update the index by adding new files that are unknown to the index and files modified in the working tree, but ignore files that have been removed from the working tree. This option is a no-op when no &amp;lt;pathspec&amp;gt; is used.</source>
          <target state="translated">Actualice el &amp;iacute;ndice agregando nuevos archivos que son desconocidos para el &amp;iacute;ndice y archivos modificados en el &amp;aacute;rbol de trabajo, pero ignore los archivos que se han eliminado del &amp;aacute;rbol de trabajo. Esta opci&amp;oacute;n no es operativa cuando no se utiliza &amp;lt;pathspec&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="94df66721f1bfd4990972c3f5f4a0d6b61f59f9e" translate="yes" xml:space="preserve">
          <source>Update the index just where it already has an entry matching &amp;lt;pathspec&amp;gt;. This removes as well as modifies index entries to match the working tree, but adds no new files.</source>
          <target state="translated">Actualice el &amp;iacute;ndice justo donde ya tiene una entrada que coincida con &amp;lt;pathspec&amp;gt;. Esto elimina y modifica las entradas de &amp;iacute;ndice para que coincidan con el &amp;aacute;rbol de trabajo, pero no agrega archivos nuevos.</target>
        </trans-unit>
        <trans-unit id="03d173e098621e3730258998672da85e88b347b1" translate="yes" xml:space="preserve">
          <source>Update the index not only where the working tree has a file matching &amp;lt;pathspec&amp;gt; but also where the index already has an entry. This adds, modifies, and removes index entries to match the working tree.</source>
          <target state="translated">Actualice el &amp;iacute;ndice no solo donde el &amp;aacute;rbol de trabajo tiene un archivo que coincide con &amp;lt;pathspec&amp;gt; sino tambi&amp;eacute;n donde el &amp;iacute;ndice ya tiene una entrada. Esto agrega, modifica y elimina entradas de &amp;iacute;ndice para que coincidan con el &amp;aacute;rbol de trabajo.</target>
        </trans-unit>
        <trans-unit id="1a6e291eaaa3e731de98429f7fb37fdac90f0a22" translate="yes" xml:space="preserve">
          <source>Update the object name stored in a ref safely</source>
          <target state="translated">Actualizar el nombre del objeto almacenado en un árbitro de forma segura</target>
        </trans-unit>
        <trans-unit id="00f0c8a1eac4ed2966a7d563ef87a6387d365dcf" translate="yes" xml:space="preserve">
          <source>Update the origin repository&amp;rsquo;s master branch with the dev branch, allowing non-fast-forward updates. &lt;strong&gt;This can leave unreferenced commits dangling in the origin repository.&lt;/strong&gt; Consider the following situation, where a fast-forward is not possible:</source>
          <target state="translated">Actualice la rama maestra del repositorio de origen con la rama dev, permitiendo actualizaciones que no sean de avance r&amp;aacute;pido. &lt;strong&gt;Esto puede dejar confirmaciones sin referencia colgando en el repositorio de origen. &lt;/strong&gt;Considere la siguiente situaci&amp;oacute;n, donde no es posible un avance r&amp;aacute;pido:</target>
        </trans-unit>
        <trans-unit id="b73d3968359117cfd051c2e81a709d1d9e1579b7" translate="yes" xml:space="preserve">
          <source>Update the reference to the value of the top reflog entry (i.e. &amp;lt;ref&amp;gt;@{0}) if the previous top entry was pruned. (This option is ignored for symbolic references.)</source>
          <target state="translated">Actualice la referencia al valor de la entrada de registro superior (es decir, &amp;lt;ref&amp;gt; @ {0}) si se elimin&amp;oacute; la entrada superior anterior. (Esta opci&amp;oacute;n se ignora para referencias simb&amp;oacute;licas).</target>
        </trans-unit>
        <trans-unit id="d7c08d3ae4fbcbbf6a3dc89cdba309659a4395bc" translate="yes" xml:space="preserve">
          <source>Update the reflog for &amp;lt;name&amp;gt; with &amp;lt;reason&amp;gt;. This is valid only when creating or updating a symbolic ref.</source>
          <target state="translated">Actualice el reflog para &amp;lt;nombre&amp;gt; con &amp;lt;raz&amp;oacute;n&amp;gt;. Esto es v&amp;aacute;lido solo al crear o actualizar una referencia simb&amp;oacute;lica.</target>
        </trans-unit>
        <trans-unit id="d053e75e709458eca9f01e5c8910658ea18a25cf" translate="yes" xml:space="preserve">
          <source>Update the registered submodules to match what the superproject expects by cloning missing submodules, fetching missing commits in submodules and updating the working tree of the submodules. The &quot;updating&quot; can be done in several ways depending on command line options and the value of &lt;code&gt;submodule.&amp;lt;name&amp;gt;.update&lt;/code&gt; configuration variable. The command line option takes precedence over the configuration variable. If neither is given, a &lt;code&gt;checkout&lt;/code&gt; is performed. The &lt;code&gt;update&lt;/code&gt; procedures supported both from the command line as well as through the &lt;code&gt;submodule.&amp;lt;name&amp;gt;.update&lt;/code&gt; configuration are:</source>
          <target state="translated">Actualice los subm&amp;oacute;dulos registrados para que coincidan con lo que espera el superproyecto clonando los subm&amp;oacute;dulos faltantes, recuperando las confirmaciones faltantes en los subm&amp;oacute;dulos y actualizando el &amp;aacute;rbol de trabajo de los subm&amp;oacute;dulos. La &quot;actualizaci&amp;oacute;n&quot; se puede realizar de varias formas dependiendo de las opciones de la l&amp;iacute;nea de comando y el valor del &lt;code&gt;submodule.&amp;lt;name&amp;gt;.update&lt;/code&gt; variable de configuraci&amp;oacute;n. La opci&amp;oacute;n de l&amp;iacute;nea de comando tiene prioridad sobre la variable de configuraci&amp;oacute;n. Si no se da ninguno, se realiza un &lt;code&gt;checkout&lt;/code&gt; . Los procedimientos de &lt;code&gt;update&lt;/code&gt; admitidos tanto desde la l&amp;iacute;nea de comandos como a trav&amp;eacute;s del &lt;code&gt;submodule.&amp;lt;name&amp;gt;.update&lt;/code&gt; configuraci&amp;oacute;n son:</target>
        </trans-unit>
        <trans-unit id="9a189cb9ecf6f808972788504f5218556d75488e" translate="yes" xml:space="preserve">
          <source>Update the remote-tracking branches for the repository you cloned from, then merge one of them into your current branch:</source>
          <target state="translated">Actualiza las ramas de rastreo remoto para el repositorio del que clonaste,luego fusiona una de ellas en tu rama actual:</target>
        </trans-unit>
        <trans-unit id="b4a6a66956cae4a12a849cae6094fa1d9187d293" translate="yes" xml:space="preserve">
          <source>Update the remote-tracking branches:</source>
          <target state="translated">Actualiza las ramas de rastreo remoto:</target>
        </trans-unit>
        <trans-unit id="6d5daf3e771e4022d14d6727e49c69b93e7e63af" translate="yes" xml:space="preserve">
          <source>Update the sparse-checkout file to include additional patterns. By default, these patterns are read from the command-line arguments, but they can be read from stdin using the &lt;code&gt;--stdin&lt;/code&gt; option. When &lt;code&gt;core.sparseCheckoutCone&lt;/code&gt; is enabled, the given patterns are interpreted as directory names as in the &lt;code&gt;set&lt;/code&gt; subcommand.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f68dff1cbdca38d9a97763a1d9fd849e951b6a1b" translate="yes" xml:space="preserve">
          <source>Updates files in the working tree to match the version in the index or the specified tree. If no pathspec was given, &lt;code&gt;git checkout&lt;/code&gt; will also update &lt;code&gt;HEAD&lt;/code&gt; to set the specified branch as the current branch.</source>
          <target state="translated">Actualiza archivos en el &amp;aacute;rbol de trabajo para que coincidan con la versi&amp;oacute;n en el &amp;iacute;ndice o el &amp;aacute;rbol especificado. Si no se proporcion&amp;oacute; una especificaci&amp;oacute;n de ruta, &lt;code&gt;git checkout&lt;/code&gt; tambi&amp;eacute;n actualizar&amp;aacute; &lt;code&gt;HEAD&lt;/code&gt; para establecer la rama especificada como la rama actual.</target>
        </trans-unit>
        <trans-unit id="091bf3e8c6fb28b8688a9117ac018615896df561" translate="yes" xml:space="preserve">
          <source>Updates remote refs using local refs, while sending objects necessary to complete the given refs.</source>
          <target state="translated">Actualiza los árbitros remotos usando los árbitros locales,mientras envía los objetos necesarios para completar los árbitros dados.</target>
        </trans-unit>
        <trans-unit id="91ca9b60db53a2ebedea4c579e08371ec4025869" translate="yes" xml:space="preserve">
          <source>Updating A with the resulting merge commit will fast-forward and your push will be accepted.</source>
          <target state="translated">La actualización de A con el compromiso de fusión resultante avanzará rápidamente y su empuje será aceptado.</target>
        </trans-unit>
        <trans-unit id="b1b31935884de26d68d690781ac1ec814b3bc924" translate="yes" xml:space="preserve">
          <source>Updating a repository with git fetch</source>
          <target state="translated">Actualizando un repositorio con git fetch</target>
        </trans-unit>
        <trans-unit id="c2ed1ab77aee7c3aaed70bc448641d662955a12f" translate="yes" xml:space="preserve">
          <source>Updating existing tests that assume GIT_TRACE format messages.</source>
          <target state="translated">Actualizando las pruebas existentes que asumen mensajes con formato GIT_TRACE.</target>
        </trans-unit>
        <trans-unit id="c5ded60beb1b0eb17cab63a8e09a8acd2261286e" translate="yes" xml:space="preserve">
          <source>Updating the index did something else too: it created a &lt;code&gt;.git/index&lt;/code&gt; file. This is the index that describes your current working tree, and something you should be very aware of. Again, you normally never worry about the index file itself, but you should be aware of the fact that you have not actually really &quot;checked in&quot; your files into Git so far, you&amp;rsquo;ve only &lt;strong&gt;told&lt;/strong&gt; Git about them.</source>
          <target state="translated">La actualizaci&amp;oacute;n del &amp;iacute;ndice tambi&amp;eacute;n hizo algo m&amp;aacute;s: cre&amp;oacute; un archivo &lt;code&gt;.git/index&lt;/code&gt; . Este es el &amp;iacute;ndice que describe su &amp;aacute;rbol de trabajo actual, y algo de lo que debe estar muy atento. Una vez m&amp;aacute;s, normalmente nunca se preocupa por el archivo de &amp;iacute;ndice en s&amp;iacute;, pero debe ser consciente del hecho de que en realidad no ha &quot;registrado&quot; sus archivos en Git hasta ahora, solo &lt;strong&gt;le&lt;/strong&gt; ha &lt;strong&gt;dicho a&lt;/strong&gt; Git sobre ellos.</target>
        </trans-unit>
        <trans-unit id="583381e5edf6e3ab467919c38286667f0916979d" translate="yes" xml:space="preserve">
          <source>Upon completion, &amp;lt;branch&amp;gt; will be the current branch.</source>
          <target state="translated">Al finalizar, &amp;lt;branch&amp;gt; ser&amp;aacute; la rama actual.</target>
        </trans-unit>
        <trans-unit id="c956664b8da61af6d0e1bf33a6e1ff75cbe45ad1" translate="yes" xml:space="preserve">
          <source>Upon seeing an invalid object name in the input, pretend as if the bad input was not given.</source>
          <target state="translated">Al ver un nombre de objeto inválido en la entrada,finge como si la entrada mala no se hubiera dado.</target>
        </trans-unit>
        <trans-unit id="d725441fc805b8226e9417fb2c8cf53ac8d791d5" translate="yes" xml:space="preserve">
          <source>Upstream branch to compare against. May be any valid commit, not just an existing branch name. Defaults to the configured upstream for the current branch.</source>
          <target state="translated">Rama ascendente para comparar contra.Puede ser cualquier confirmación válida,no sólo el nombre de una rama existente.Por defecto es el configurado por la corriente ascendente para la rama actual.</target>
        </trans-unit>
        <trans-unit id="f5808323e4ba717fc383cb75e63b6cf3a4e857e7" translate="yes" xml:space="preserve">
          <source>Upstream branch to search for equivalent commits. Defaults to the upstream branch of HEAD.</source>
          <target state="translated">La rama ascendente para buscar compromisos equivalentes.Por defecto,la rama ascendente de HEAD.</target>
        </trans-unit>
        <trans-unit id="309bc26d3c4c2649258f95c7069216bb2a7ac5f4" translate="yes" xml:space="preserve">
          <source>Upstream location from which commits are identified to submit to p4. By default, this is the most recent p4 commit reachable from &lt;code&gt;HEAD&lt;/code&gt;.</source>
          <target state="translated">Ubicaci&amp;oacute;n ascendente desde la que se identifican las confirmaciones para enviarlas a p4. De forma predeterminada, esta es la confirmaci&amp;oacute;n p4 m&amp;aacute;s reciente a la que se puede acceder desde &lt;code&gt;HEAD&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="df28f1403e8348eae4829434034d1a95e5fe659d" translate="yes" xml:space="preserve">
          <source>Url translation</source>
          <target state="translated">Traducción de Url</target>
        </trans-unit>
        <trans-unit id="7ae770d8c2db91584c78e413662ced65719f53ca" translate="yes" xml:space="preserve">
          <source>Usage of this flag will probably be rare, since you can get rid of commits that start empty by just firing up an interactive rebase and removing the lines corresponding to the commits you don&amp;rsquo;t want. This flag exists as a convenient shortcut, such as for cases where external tools generate many empty commits and you want them all removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f51159e5f3b0adbeed98e188d040286280a5320b" translate="yes" xml:space="preserve">
          <source>Usage text</source>
          <target state="translated">Texto de uso</target>
        </trans-unit>
        <trans-unit id="861a0e430ffac5e4ae6e11b7a947f2c32d388cf4" translate="yes" xml:space="preserve">
          <source>Usage:</source>
          <target state="translated">Usage:</target>
        </trans-unit>
        <trans-unit id="6039144c2dc6586b6f3f0cb7423bcc0b3de0d0c1" translate="yes" xml:space="preserve">
          <source>Use &quot;patience diff&quot; algorithm when generating patches.</source>
          <target state="translated">Usar el algoritmo de &quot;diferencia de paciencia&quot; al generar los parches.</target>
        </trans-unit>
        <trans-unit id="1712fa1f1e6f89a27b7d3117ed39073a3258971d" translate="yes" xml:space="preserve">
          <source>Use &amp;lt;dir&amp;gt; to store the resulting files, instead of the current working directory.</source>
          <target state="translated">Utilice &amp;lt;dir&amp;gt; para almacenar los archivos resultantes, en lugar del directorio de trabajo actual.</target>
        </trans-unit>
        <trans-unit id="89ed1ad2d65d4e1af42e685a9ee22c739e5d2c9b" translate="yes" xml:space="preserve">
          <source>Use &amp;lt;message&amp;gt; instead of the branch names for the first line of the log message. For use with &lt;code&gt;--log&lt;/code&gt;.</source>
          <target state="translated">Utilice &amp;lt;mensaje&amp;gt; en lugar de los nombres de las ramas para la primera l&amp;iacute;nea del mensaje de registro. Para usar con &lt;code&gt;--log&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a8e6c324c4e7440184ef28eb2f6fc1fca5a4a325" translate="yes" xml:space="preserve">
          <source>Use &amp;lt;regex&amp;gt; to decide what a word is, instead of considering runs of non-whitespace to be a word. Also implies &lt;code&gt;--word-diff&lt;/code&gt; unless it was already enabled.</source>
          <target state="translated">Utilice &amp;lt;regex&amp;gt; para decidir qu&amp;eacute; es una palabra, en lugar de considerar que los espacios que no son espacios en blanco son una palabra. Tambi&amp;eacute;n implica &lt;code&gt;--word-diff&lt;/code&gt; a menos que ya est&amp;eacute; habilitado.</target>
        </trans-unit>
        <trans-unit id="f70b8a97f949594b729b07efce2ca59a63023925" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;!&lt;/code&gt; to not make the corresponding negated long option available.</source>
          <target state="translated">&lt;code&gt;!&lt;/code&gt; Utilice ! para no hacer disponible la opci&amp;oacute;n larga negada correspondiente.</target>
        </trans-unit>
        <trans-unit id="f7924a219e6794d45a36b15b2c44738227b795ff" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;&amp;lt;branch&amp;gt;&lt;/code&gt; to set the symbolic-ref &lt;code&gt;refs/remotes/&amp;lt;name&amp;gt;/HEAD&lt;/code&gt; explicitly. e.g., &quot;git remote set-head origin master&quot; will set the symbolic-ref &lt;code&gt;refs/remotes/origin/HEAD&lt;/code&gt; to &lt;code&gt;refs/remotes/origin/master&lt;/code&gt;. This will only work if &lt;code&gt;refs/remotes/origin/master&lt;/code&gt; already exists; if not it must be fetched first.</source>
          <target state="translated">Utilice &lt;code&gt;&amp;lt;branch&amp;gt;&lt;/code&gt; para establecer el simb&amp;oacute;lico-ref &lt;code&gt;refs/remotes/&amp;lt;name&amp;gt;/HEAD&lt;/code&gt; expl&amp;iacute;citamente. por ejemplo, &quot;git remote set-head origin master&quot; establecer&amp;aacute; el simb&amp;oacute;lico-ref &lt;code&gt;refs/remotes/origin/HEAD&lt;/code&gt; en &lt;code&gt;refs/remotes/origin/master&lt;/code&gt; . Esto solo funcionar&amp;aacute; si &lt;code&gt;refs/remotes/origin/master&lt;/code&gt; ya existe; si no, primero debe buscarlo.</target>
        </trans-unit>
        <trans-unit id="e726751622c7eadb004a31b60b5fa1e9cc1fbf90" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;&amp;lt;branch&amp;gt;&lt;/code&gt; to set the symbolic-ref &lt;code&gt;refs/remotes/&amp;lt;name&amp;gt;/HEAD&lt;/code&gt; explicitly. e.g., &lt;code&gt;git
remote set-head origin master&lt;/code&gt; will set the symbolic-ref &lt;code&gt;refs/remotes/origin/HEAD&lt;/code&gt; to &lt;code&gt;refs/remotes/origin/master&lt;/code&gt;. This will only work if &lt;code&gt;refs/remotes/origin/master&lt;/code&gt; already exists; if not it must be fetched first.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d950943422ee3b93275d1e4b1e510463e5b432e0" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt; to contact a running cache daemon (or start a new cache daemon if one is not started). Defaults to &lt;code&gt;$XDG_CACHE_HOME/git/credential/socket&lt;/code&gt; unless &lt;code&gt;~/.git-credential-cache/&lt;/code&gt; exists in which case &lt;code&gt;~/.git-credential-cache/socket&lt;/code&gt; is used instead. If your home directory is on a network-mounted filesystem, you may need to change this to a local filesystem. You must specify an absolute path.</source>
          <target state="translated">Utilice &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt; para ponerse en contacto con un demonio de cach&amp;eacute; en ejecuci&amp;oacute;n (o iniciar un nuevo demonio de cach&amp;eacute; si no se ha iniciado). El valor predeterminado es &lt;code&gt;$XDG_CACHE_HOME/git/credential/socket&lt;/code&gt; menos que &lt;code&gt;~/.git-credential-cache/&lt;/code&gt; exista, en cuyo caso se usa &lt;code&gt;~/.git-credential-cache/socket&lt;/code&gt; . Si su directorio personal se encuentra en un sistema de archivos montado en red, es posible que deba cambiarlo a un sistema de archivos local. Debe especificar una ruta absoluta.</target>
        </trans-unit>
        <trans-unit id="faabe60607ec900b5e4ad4f074b4870d8f9c10c6" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt; to lookup and store credentials. The file will have its filesystem permissions set to prevent other users on the system from reading it, but will not be encrypted or otherwise protected. If not specified, credentials will be searched for from &lt;code&gt;~/.git-credentials&lt;/code&gt; and &lt;code&gt;$XDG_CONFIG_HOME/git/credentials&lt;/code&gt;, and credentials will be written to &lt;code&gt;~/.git-credentials&lt;/code&gt; if it exists, or &lt;code&gt;$XDG_CONFIG_HOME/git/credentials&lt;/code&gt; if it exists and the former does not. See also &lt;a href=&quot;#FILES&quot;&gt;FILES&lt;/a&gt;.</source>
          <target state="translated">Utilice &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt; para buscar y almacenar credenciales. El archivo tendr&amp;aacute; los permisos del sistema de archivos configurados para evitar que otros usuarios del sistema lo lean, pero no estar&amp;aacute; encriptado ni protegido de ninguna otra manera. Si no se especifica, las credenciales se buscar&amp;aacute;n en &lt;code&gt;~/.git-credentials&lt;/code&gt; y &lt;code&gt;$XDG_CONFIG_HOME/git/credentials&lt;/code&gt; , y las credenciales se escribir&amp;aacute;n en &lt;code&gt;~/.git-credentials&lt;/code&gt; si existe, o &lt;code&gt;$XDG_CONFIG_HOME/git/credentials&lt;/code&gt; si existe y el primero no. Consulte tambi&amp;eacute;n &lt;a href=&quot;#FILES&quot;&gt;ARCHIVOS&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="aadb92eae500ef695bbe6a445720ce25246dd04e" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;*&lt;/code&gt; to mean that this option should not be listed in the usage generated for the &lt;code&gt;-h&lt;/code&gt; argument. It&amp;rsquo;s shown for &lt;code&gt;--help-all&lt;/code&gt; as documented in &lt;a href=&quot;gitcli&quot;&gt;gitcli[7]&lt;/a&gt;.</source>
          <target state="translated">Utilice &lt;code&gt;*&lt;/code&gt; para indicar que esta opci&amp;oacute;n no debe aparecer en el uso generado para el argumento &lt;code&gt;-h&lt;/code&gt; . Se muestra para &lt;code&gt;--help-all&lt;/code&gt; como se documenta en &lt;a href=&quot;gitcli&quot;&gt;gitcli [7]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3bbcee2a044e9c08185b38acb1e1c57ceea88054" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;--no-guess&lt;/code&gt; to disable this.</source>
          <target state="translated">Use &lt;code&gt;--no-guess&lt;/code&gt; para desactivar esto.</target>
        </trans-unit>
        <trans-unit id="6deefc2a8fa6667ca14a90dee15faf81b1f0546a" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;-o master&lt;/code&gt; for continuing an import that was initially done by the old cvs2git tool.</source>
          <target state="translated">Utilice &lt;code&gt;-o master&lt;/code&gt; para continuar con una importaci&amp;oacute;n que inicialmente hizo la antigua herramienta cvs2git.</target>
        </trans-unit>
        <trans-unit id="a4527eec708654a210ce88433047c8e573fb91f2" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;-r&lt;/code&gt; together with &lt;code&gt;-d&lt;/code&gt; to delete remote-tracking branches. Note, that it only makes sense to delete remote-tracking branches if they no longer exist in the remote repository or if &lt;code&gt;git fetch&lt;/code&gt; was configured not to fetch them again. See also the &lt;code&gt;prune&lt;/code&gt; subcommand of &lt;a href=&quot;git-remote&quot;&gt;git-remote[1]&lt;/a&gt; for a way to clean up all obsolete remote-tracking branches.</source>
          <target state="translated">Utilice &lt;code&gt;-r&lt;/code&gt; junto con &lt;code&gt;-d&lt;/code&gt; para eliminar las ramas de seguimiento remoto. Tenga en cuenta que solo tiene sentido eliminar las ramas de seguimiento remoto si ya no existen en el repositorio remoto o si &lt;code&gt;git fetch&lt;/code&gt; se configur&amp;oacute; para no recuperarlas nuevamente. Consulte tambi&amp;eacute;n el subcomando &lt;code&gt;prune&lt;/code&gt; de &lt;a href=&quot;git-remote&quot;&gt;git-remote [1]&lt;/a&gt; para ver una forma de limpiar todas las ramas de seguimiento remoto obsoletas.</target>
        </trans-unit>
        <trans-unit id="eb7d25cab29167524de808a8da669505756898ee" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;=&lt;/code&gt; if the option takes an argument.</source>
          <target state="translated">Use &lt;code&gt;=&lt;/code&gt; si la opci&amp;oacute;n tiene un argumento.</target>
        </trans-unit>
        <trans-unit id="d247642d4c8609f74c2030daa3d24c7c82d2e46d" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;?&lt;/code&gt; to mean that the option takes an optional argument. You probably want to use the &lt;code&gt;--stuck-long&lt;/code&gt; mode to be able to unambiguously parse the optional argument.</source>
          <target state="translated">Uso &lt;code&gt;?&lt;/code&gt; para significar que la opci&amp;oacute;n toma un argumento opcional. Probablemente desee utilizar el modo &lt;code&gt;--stuck-long&lt;/code&gt; para poder analizar sin ambig&amp;uuml;edades el argumento opcional.</target>
        </trans-unit>
        <trans-unit id="7929eb6fd77d1ea35c9c481fc89518eafcc1cd45" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;git bisect&lt;/code&gt; to get a short usage description, and &lt;code&gt;git bisect
help&lt;/code&gt; or &lt;code&gt;git bisect -h&lt;/code&gt; to get a long usage description.</source>
          <target state="translated">Utilice &lt;code&gt;git bisect&lt;/code&gt; para obtener una breve descripci&amp;oacute;n de uso y &lt;code&gt;git bisect help&lt;/code&gt; o &lt;code&gt;git bisect -h&lt;/code&gt; para obtener una descripci&amp;oacute;n de uso larga.</target>
        </trans-unit>
        <trans-unit id="599c65a25784af23c9351ba6f4874c534a65a263" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;git cherry origin&lt;/code&gt; to see which ones of your patches were accepted, and/or use &lt;code&gt;git rebase origin&lt;/code&gt; to port your unmerged changes forward to the updated upstream.</source>
          <target state="translated">Use &lt;code&gt;git cherry origin&lt;/code&gt; para ver cu&amp;aacute;les de sus parches fueron aceptados, y / o use &lt;code&gt;git rebase origin&lt;/code&gt; para transferir sus cambios no fusionados al upstream actualizado.</target>
        </trans-unit>
        <trans-unit id="f1986201248cbf297f2fb86d6f520b30d057ce7d" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;git fetch &amp;lt;remote&amp;gt;&lt;/code&gt; or &lt;code&gt;git remote update&lt;/code&gt; to stay up to date.</source>
          <target state="translated">Utilice &lt;code&gt;git fetch &amp;lt;remote&amp;gt;&lt;/code&gt; o &lt;code&gt;git remote update&lt;/code&gt; para mantenerse actualizado.</target>
        </trans-unit>
        <trans-unit id="252ef42d37b56d31d5e5dc2525ae974052dfca91" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;git format-patch origin&lt;/code&gt; to prepare patches for e-mail submission to your upstream and send it out. Go back to step 2. and continue.</source>
          <target state="translated">Utilice &lt;code&gt;git format-patch origin&lt;/code&gt; para preparar parches para el env&amp;iacute;o por correo electr&amp;oacute;nico a su upstream y env&amp;iacute;elo. Vuelva al paso 2. y contin&amp;uacute;e.</target>
        </trans-unit>
        <trans-unit id="cd30f3ed950161de3f8267d9a18953af3c02784f" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;git mergetool&lt;/code&gt; to run one of several merge utilities to resolve merge conflicts. It is typically run after &lt;code&gt;git merge&lt;/code&gt;.</source>
          <target state="translated">Utilice &lt;code&gt;git mergetool&lt;/code&gt; para ejecutar una de las varias utilidades de combinaci&amp;oacute;n para resolver conflictos de combinaci&amp;oacute;n. Normalmente se ejecuta despu&amp;eacute;s de &lt;code&gt;git merge&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6b298c06fc405635f29d06efdf0f42592d8075f2" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;git rev-parse&lt;/code&gt; in option parsing mode (see PARSEOPT section below).</source>
          <target state="translated">Utilice &lt;code&gt;git rev-parse&lt;/code&gt; en el modo de an&amp;aacute;lisis de opciones (consulte la secci&amp;oacute;n PARSEOPT a continuaci&amp;oacute;n).</target>
        </trans-unit>
        <trans-unit id="7c9820d48befbd19730095f238fb8a15824823ad" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;git rev-parse&lt;/code&gt; in shell quoting mode (see SQ-QUOTE section below). In contrast to the &lt;code&gt;--sq&lt;/code&gt; option below, this mode does only quoting. Nothing else is done to command input.</source>
          <target state="translated">Use &lt;code&gt;git rev-parse&lt;/code&gt; en el modo de cotizaci&amp;oacute;n de shell (consulte la secci&amp;oacute;n SQ-QUOTE a continuaci&amp;oacute;n). A diferencia de la opci&amp;oacute;n &lt;code&gt;--sq&lt;/code&gt; a continuaci&amp;oacute;n, este modo solo incluye citas . No se hace nada m&amp;aacute;s para ordenar la entrada.</target>
        </trans-unit>
        <trans-unit id="4c4d44083fa5e2a6971987cf935297be30994f4c" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;git stash&lt;/code&gt; when you want to record the current state of the working directory and the index, but want to go back to a clean working directory. The command saves your local modifications away and reverts the working directory to match the &lt;code&gt;HEAD&lt;/code&gt; commit.</source>
          <target state="translated">Utilice &lt;code&gt;git stash&lt;/code&gt; cuando desee registrar el estado actual del directorio de trabajo y el &amp;iacute;ndice, pero desea volver a un directorio de trabajo limpio. El comando guarda sus modificaciones locales y revierte el directorio de trabajo para que coincida con la confirmaci&amp;oacute;n &lt;code&gt;HEAD&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="41c11f9d8154a7d9c49ff48bc15e09cdeb4a9a5c" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;git stripspace --strip-comments&lt;/code&gt; to obtain:</source>
          <target state="translated">Utilice &lt;code&gt;git stripspace --strip-comments&lt;/code&gt; para obtener:</target>
        </trans-unit>
        <trans-unit id="141b00818c5025cc15ff515d81283fc5705a8a4e" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;git stripspace&lt;/code&gt; with no arguments to obtain:</source>
          <target state="translated">Utilice &lt;code&gt;git stripspace&lt;/code&gt; sin argumentos para obtener:</target>
        </trans-unit>
        <trans-unit id="ae0479a18945009a7ebac30bdfceaa72c61a99c4" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;ident&lt;/code&gt; in the &lt;code&gt;From:&lt;/code&gt; header of each commit email. If the author ident of the commit is not textually identical to the provided &lt;code&gt;ident&lt;/code&gt;, place a &lt;code&gt;From:&lt;/code&gt; header in the body of the message with the original author. If no &lt;code&gt;ident&lt;/code&gt; is given, use the committer ident.</source>
          <target state="translated">Use &lt;code&gt;ident&lt;/code&gt; en el encabezado &lt;code&gt;From:&lt;/code&gt; de cada correo electr&amp;oacute;nico de confirmaci&amp;oacute;n. Si el identificador del autor de la confirmaci&amp;oacute;n no es id&amp;eacute;ntico textualmente al &lt;code&gt;ident&lt;/code&gt; ificador proporcionado , coloque un encabezado &lt;code&gt;From:&lt;/code&gt; en el cuerpo del mensaje con el autor original. Si no se proporciona un &lt;code&gt;ident&lt;/code&gt; ificador , utilice el identificador de confirmaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="8fb68f530aa46816206d7ea34908da4d297edef3" translate="yes" xml:space="preserve">
          <source>Use IPv4 addresses only, ignoring IPv6 addresses.</source>
          <target state="translated">Usar sólo direcciones IPv4,ignorando las direcciones IPv6.</target>
        </trans-unit>
        <trans-unit id="d89ac89f76f16a68a863b0d9f578ffd1a558d6b0" translate="yes" xml:space="preserve">
          <source>Use IPv6 addresses only, ignoring IPv4 addresses.</source>
          <target state="translated">Usar sólo direcciones IPv6,ignorando las direcciones IPv4.</target>
        </trans-unit>
        <trans-unit id="23206ddfb8d01b68973d7bd9cccf799f208e3657" translate="yes" xml:space="preserve">
          <source>Use Message &amp;rarr; Insert file&amp;hellip;​ and insert the patch.</source>
          <target state="translated">Utilice Mensaje &amp;rarr; Insertar archivo ... e inserte el parche.</target>
        </trans-unit>
        <trans-unit id="1b7e380bb9ef947a64359e01f17ce54cd3bdece1" translate="yes" xml:space="preserve">
          <source>Use One Mark Per Commit</source>
          <target state="translated">Usar una marca por compromiso</target>
        </trans-unit>
        <trans-unit id="c24268aab2b43d4e294643c8fbcbd60d377e139b" translate="yes" xml:space="preserve">
          <source>Use POSIX extended/basic regexp for patterns. Default is to use basic regexp.</source>
          <target state="translated">Use POSIX extended/basic regexp para los patrones.Por defecto se usa regexp básico.</target>
        </trans-unit>
        <trans-unit id="36e96e4a2fd002679f3b794b4968539810c5c2eb" translate="yes" xml:space="preserve">
          <source>Use Perl-compatible regular expressions for patterns.</source>
          <target state="translated">Usar expresiones regulares compatibles con Perl para los patrones.</target>
        </trans-unit>
        <trans-unit id="fd46ce4ee0de88bb1a4ebb0e0c6375d24c2fb065" translate="yes" xml:space="preserve">
          <source>Use SO_REUSEADDR when binding the listening socket. This allows the server to restart without waiting for old connections to time out.</source>
          <target state="translated">Use SO_REUSEADDR al conectar la toma de escucha.Esto permite que el servidor se reinicie sin esperar a que las conexiones antiguas se agoten.</target>
        </trans-unit>
        <trans-unit id="f351ffbdfc957393f82f6653e37778e19987b350" translate="yes" xml:space="preserve">
          <source>Use Tag Fixup Branches</source>
          <target state="translated">Usar las ramas de reparación de etiquetas</target>
        </trans-unit>
        <trans-unit id="41019858ddf6bd113a2b54361af9c75b6d741367" translate="yes" xml:space="preserve">
          <source>Use \0 as the delimiter for pathnames in the output, and print them verbatim. Without this option, pathnames with &quot;unusual&quot; characters are quoted as explained for the configuration variable core.quotePath (see &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67640e675158aa473b8a69cc0cdb46fb8ed7283f" translate="yes" xml:space="preserve">
          <source>Use a &quot;stable&quot; sum of hashes as the patch ID. With this option:</source>
          <target state="translated">Usa una suma &quot;estable&quot; de hachís como identificación del parche.Con esta opción:</target>
        </trans-unit>
        <trans-unit id="0ec5feaf620cc0230519584645c952a1ae99d83c" translate="yes" xml:space="preserve">
          <source>Use a client spec to find the list of interesting files in p4. See the &quot;CLIENT SPEC&quot; section below.</source>
          <target state="translated">Usa una especificación de cliente para encontrar la lista de archivos interesantes en p4.Vea la sección &quot;ESPECIAL CLIENTE&quot; más abajo.</target>
        </trans-unit>
        <trans-unit id="cf410607b4d646fae6b37dffcb3f37fcc481f52b" translate="yes" xml:space="preserve">
          <source>Use a mergetool. &lt;code&gt;git mergetool&lt;/code&gt; to launch a graphical mergetool which will work you through the merge.</source>
          <target state="translated">Usa una herramienta de combinaci&amp;oacute;n. &lt;code&gt;git mergetool&lt;/code&gt; para lanzar una mergetool gr&amp;aacute;fica que te ayudar&amp;aacute; a completar la fusi&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="e7589df3d820308df2c8a838829de10cfbcf2077" translate="yes" xml:space="preserve">
          <source>Use a special line-based format intended for script consumption. Added/removed/unchanged runs are printed in the usual unified diff format, starting with a &lt;code&gt;+&lt;/code&gt;/&lt;code&gt;-&lt;/code&gt;/` ` character at the beginning of the line and extending to the end of the line. Newlines in the input are represented by a tilde &lt;code&gt;~&lt;/code&gt; on a line of its own.</source>
          <target state="translated">Utilice un formato especial basado en l&amp;iacute;neas destinado al consumo de scripts. Las tiradas agregadas / eliminadas / sin cambios se imprimen en el formato de diferencia unificada habitual, comenzando con un car&amp;aacute;cter &lt;code&gt;+&lt;/code&gt; / &lt;code&gt;-&lt;/code&gt; / `` al principio de la l&amp;iacute;nea y extendi&amp;eacute;ndose hasta el final de la l&amp;iacute;nea. Las nuevas l&amp;iacute;neas en la entrada est&amp;aacute;n representadas por una tilde &lt;code&gt;~&lt;/code&gt; en una l&amp;iacute;nea propia.</target>
        </trans-unit>
        <trans-unit id="77b024aefcbc37a1627539595d18a928f0842816" translate="yes" xml:space="preserve">
          <source>Use a tarball as a starting point for a new repository.</source>
          <target state="translated">Usar una bola de alquitrán como punto de partida para un nuevo depósito.</target>
        </trans-unit>
        <trans-unit id="afac3b09febbe243aa11caf12f594c7284e7bf23" translate="yes" xml:space="preserve">
          <source>Use an &quot;unstable&quot; hash as the patch ID. With this option, the result produced is compatible with the patch-id value produced by git 1.9 and older. Users with pre-existing databases storing patch-ids produced by git 1.9 and older (who do not deal with reordered patches) may want to use this option.</source>
          <target state="translated">Usa un hash &quot;inestable&quot; como identificación del parche.Con esta opción,el resultado producido es compatible con el valor del patch-id producido por el git 1.9 y anteriores.Los usuarios con bases de datos preexistentes que almacenan los patch-ids producidos por el git 1.9 y anteriores (que no se ocupan de los parches reordenados)pueden utilizar esta opción.</target>
        </trans-unit>
        <trans-unit id="ef4088fc09156b38070cb26da8281dc7bfd8c504" translate="yes" xml:space="preserve">
          <source>Use an atomic transaction for updating the refs. If any of the refs fails to update then the entire push will fail without changing any refs.</source>
          <target state="translated">Utilice una transacción atómica para actualizar los refs.Si alguno de los árbitros no se actualiza,entonces todo el empuje fallará sin cambiar ningún árbitro.</target>
        </trans-unit>
        <trans-unit id="049c3e05f1b188c69413c7549059c67376f76ed1" translate="yes" xml:space="preserve">
          <source>Use an atomic transaction on the remote side if available. Either all refs are updated, or on error, no refs are updated. If the server does not support atomic pushes the push will fail.</source>
          <target state="translated">Utilice una transacción atómica en el lado remoto si está disponible.O bien todos los árbitros están actualizados,o por error,no se actualizan los árbitros.Si el servidor no soporta los empujes atómicos,el empuje fallará.</target>
        </trans-unit>
        <trans-unit id="402b0ecf5212c8d413a7923b4b251cf4b803a260" translate="yes" xml:space="preserve">
          <source>Use applying strategies to rebase (calling &lt;code&gt;git-am&lt;/code&gt; internally). This option may become a no-op in the future once the merge backend handles everything the apply one does.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e55fb404106de44576d9bc731a7fb4baf9a6337c" translate="yes" xml:space="preserve">
          <source>Use binary search to find the commit that introduced a bug</source>
          <target state="translated">Usa la búsqueda binaria para encontrar el commit que introdujo un bug</target>
        </trans-unit>
        <trans-unit id="78ee9b127501691d305b39cc3fc13fc74a1d22a1" translate="yes" xml:space="preserve">
          <source>Use customized color for &lt;code&gt;git add --interactive&lt;/code&gt; and &lt;code&gt;git clean --interactive&lt;/code&gt; output. &lt;code&gt;&amp;lt;slot&amp;gt;&lt;/code&gt; may be &lt;code&gt;prompt&lt;/code&gt;, &lt;code&gt;header&lt;/code&gt;, &lt;code&gt;help&lt;/code&gt; or &lt;code&gt;error&lt;/code&gt;, for four distinct types of normal output from interactive commands.</source>
          <target state="translated">Utilice colores personalizados para &lt;code&gt;git add --interactive&lt;/code&gt; y &lt;code&gt;git clean --interactive&lt;/code&gt; output. &lt;code&gt;&amp;lt;slot&amp;gt;&lt;/code&gt; puede ser de &lt;code&gt;prompt&lt;/code&gt; , &lt;code&gt;header&lt;/code&gt; , &lt;code&gt;help&lt;/code&gt; o &lt;code&gt;error&lt;/code&gt; , para cuatro tipos distintos de salida normal de comandos interactivos.</target>
        </trans-unit>
        <trans-unit id="bf3aeb7f00c3d69ade01b5cc321078d4f50948ae" translate="yes" xml:space="preserve">
          <source>Use customized color for &lt;code&gt;git log --decorate&lt;/code&gt; output. &lt;code&gt;&amp;lt;slot&amp;gt;&lt;/code&gt; is one of &lt;code&gt;branch&lt;/code&gt;, &lt;code&gt;remoteBranch&lt;/code&gt;, &lt;code&gt;tag&lt;/code&gt;, &lt;code&gt;stash&lt;/code&gt; or &lt;code&gt;HEAD&lt;/code&gt; for local branches, remote-tracking branches, tags, stash and HEAD, respectively and &lt;code&gt;grafted&lt;/code&gt; for grafted commits.</source>
          <target state="translated">Use color personalizado para &lt;code&gt;git log --decorate&lt;/code&gt; output. &lt;code&gt;&amp;lt;slot&amp;gt;&lt;/code&gt; es uno de &lt;code&gt;branch&lt;/code&gt; , &lt;code&gt;remoteBranch&lt;/code&gt; , &lt;code&gt;tag&lt;/code&gt; , &lt;code&gt;stash&lt;/code&gt; o &lt;code&gt;HEAD&lt;/code&gt; para sucursales locales, sucursales de seguimiento remoto, tags, stash y HEAD, respectivamente, e &lt;code&gt;grafted&lt;/code&gt; para confirmaciones injertadas.</target>
        </trans-unit>
        <trans-unit id="29ecef38edab0e1998d46583be9558cf2a562eff" translate="yes" xml:space="preserve">
          <source>Use customized color for branch coloration. &lt;code&gt;&amp;lt;slot&amp;gt;&lt;/code&gt; is one of &lt;code&gt;current&lt;/code&gt; (the current branch), &lt;code&gt;local&lt;/code&gt; (a local branch), &lt;code&gt;remote&lt;/code&gt; (a remote-tracking branch in refs/remotes/), &lt;code&gt;upstream&lt;/code&gt; (upstream tracking branch), &lt;code&gt;plain&lt;/code&gt; (other refs).</source>
          <target state="translated">Utilice un color personalizado para la coloraci&amp;oacute;n de las ramas. &lt;code&gt;&amp;lt;slot&amp;gt;&lt;/code&gt; es uno de &lt;code&gt;current&lt;/code&gt; (la rama actual), &lt;code&gt;local&lt;/code&gt; (una rama local), &lt;code&gt;remote&lt;/code&gt; (una rama de seguimiento remoto en refs / remotes /), &lt;code&gt;upstream&lt;/code&gt; (rama de seguimiento upstream), &lt;code&gt;plain&lt;/code&gt; (otras referencias).</target>
        </trans-unit>
        <trans-unit id="fcdeebdb47ef8466da45d806c0dccf091f4447a0" translate="yes" xml:space="preserve">
          <source>Use customized color for diff colorization. &lt;code&gt;&amp;lt;slot&amp;gt;&lt;/code&gt; specifies which part of the patch to use the specified color, and is one of &lt;code&gt;context&lt;/code&gt; (context text - &lt;code&gt;plain&lt;/code&gt; is a historical synonym), &lt;code&gt;meta&lt;/code&gt; (metainformation), &lt;code&gt;frag&lt;/code&gt; (hunk header), &lt;code&gt;func&lt;/code&gt; (function in hunk header), &lt;code&gt;old&lt;/code&gt; (removed lines), &lt;code&gt;new&lt;/code&gt; (added lines), &lt;code&gt;commit&lt;/code&gt; (commit headers), &lt;code&gt;whitespace&lt;/code&gt; (highlighting whitespace errors), &lt;code&gt;oldMoved&lt;/code&gt; (deleted lines), &lt;code&gt;newMoved&lt;/code&gt; (added lines), &lt;code&gt;oldMovedDimmed&lt;/code&gt;, &lt;code&gt;oldMovedAlternative&lt;/code&gt;, &lt;code&gt;oldMovedAlternativeDimmed&lt;/code&gt;, &lt;code&gt;newMovedDimmed&lt;/code&gt;, &lt;code&gt;newMovedAlternative&lt;/code&gt;&lt;code&gt;newMovedAlternativeDimmed&lt;/code&gt; (See the &lt;code&gt;&amp;lt;mode&amp;gt;&lt;/code&gt; setting of &lt;code&gt;--color-moved&lt;/code&gt; in &lt;a href=&quot;git-diff&quot;&gt;git-diff[1]&lt;/a&gt; for details), &lt;code&gt;contextDimmed&lt;/code&gt;, &lt;code&gt;oldDimmed&lt;/code&gt;, &lt;code&gt;newDimmed&lt;/code&gt;, &lt;code&gt;contextBold&lt;/code&gt;, &lt;code&gt;oldBold&lt;/code&gt;, and &lt;code&gt;newBold&lt;/code&gt; (see &lt;a href=&quot;git-range-diff&quot;&gt;git-range-diff[1]&lt;/a&gt; for details).</source>
          <target state="translated">Utilice un color personalizado para la coloraci&amp;oacute;n diferencial. &lt;code&gt;&amp;lt;slot&amp;gt;&lt;/code&gt; especifica qu&amp;eacute; parte del parche usar el color especificado, y es uno de &lt;code&gt;context&lt;/code&gt; o (texto de contexto - &lt;code&gt;plain&lt;/code&gt; es un sin&amp;oacute;nimo hist&amp;oacute;rico), &lt;code&gt;meta&lt;/code&gt; (metainformaci&amp;oacute;n), &lt;code&gt;frag&lt;/code&gt; (encabezado de trozo), &lt;code&gt;func&lt;/code&gt; (funci&amp;oacute;n en el encabezado de trozo), &lt;code&gt;old&lt;/code&gt; (l&amp;iacute;neas eliminadas), &lt;code&gt;new&lt;/code&gt; (l&amp;iacute;neas agregadas), &lt;code&gt;commit&lt;/code&gt; (encabezados de confirmaci&amp;oacute;n), &lt;code&gt;whitespace&lt;/code&gt; (resaltando errores de espacio en blanco), &lt;code&gt;oldMoved&lt;/code&gt; (l&amp;iacute;neas eliminadas), &lt;code&gt;newMoved&lt;/code&gt; (l&amp;iacute;neas agregadas), &lt;code&gt;oldMovedDimmed&lt;/code&gt; , &lt;code&gt;oldMovedAlternative&lt;/code&gt; , &lt;code&gt;oldMovedAlternativeDimmed&lt;/code&gt; , &lt;code&gt;newMovedDimmed&lt;/code&gt; , &lt;code&gt;newMovedAlternative&lt;/code&gt; &lt;code&gt;newMovedAlternativeDimmed&lt;/code&gt; (Ver la configuraci&amp;oacute;n &lt;code&gt;&amp;lt;mode&amp;gt;&lt;/code&gt; de &lt;code&gt;--color-moved&lt;/code&gt; en &lt;a href=&quot;git-diff&quot;&gt;git-diff [1]&lt;/a&gt; para m&amp;aacute;s detalles), &lt;code&gt;contextDimmed&lt;/code&gt; , &lt;code&gt;oldDimmed&lt;/code&gt; , &lt;code&gt;newDimmed&lt;/code&gt; , &lt;code&gt;contextBold&lt;/code&gt; , &lt;code&gt;oldBold&lt;/code&gt; y &lt;code&gt;newBold&lt;/code&gt; (ver &lt;a href=&quot;git-range-diff&quot;&gt;git-range-diff [ 1]&lt;/a&gt; para obtener m&amp;aacute;s detalles).</target>
        </trans-unit>
        <trans-unit id="799532fe06b09693cab5782f0c7b74d1305d2cb1" translate="yes" xml:space="preserve">
          <source>Use customized color for each remote keyword. &lt;code&gt;&amp;lt;slot&amp;gt;&lt;/code&gt; may be &lt;code&gt;hint&lt;/code&gt;, &lt;code&gt;warning&lt;/code&gt;, &lt;code&gt;success&lt;/code&gt; or &lt;code&gt;error&lt;/code&gt; which match the corresponding keyword.</source>
          <target state="translated">Utilice un color personalizado para cada palabra clave remota. &lt;code&gt;&amp;lt;slot&amp;gt;&lt;/code&gt; puede ser una &lt;code&gt;hint&lt;/code&gt; , una &lt;code&gt;warning&lt;/code&gt; , un &lt;code&gt;success&lt;/code&gt; o un &lt;code&gt;error&lt;/code&gt; que coincida con la palabra clave correspondiente.</target>
        </trans-unit>
        <trans-unit id="e8363e3bb3b19269f1bec63465f050d08c7400a8" translate="yes" xml:space="preserve">
          <source>Use customized color for grep colorization. &lt;code&gt;&amp;lt;slot&amp;gt;&lt;/code&gt; specifies which part of the line to use the specified color, and is one of</source>
          <target state="translated">Utilice colores personalizados para la coloraci&amp;oacute;n grep. &lt;code&gt;&amp;lt;slot&amp;gt;&lt;/code&gt; especifica qu&amp;eacute; parte de la l&amp;iacute;nea usar el color especificado, y es uno de</target>
        </trans-unit>
        <trans-unit id="3d940f7a54cc13b6b8a420b163ce2b7e4ccedf38" translate="yes" xml:space="preserve">
          <source>Use customized color for hints.</source>
          <target state="translated">Usa el color personalizado para las pistas.</target>
        </trans-unit>
        <trans-unit id="a7bc0186c1d40a59aee910eedb6524484cbce3a0" translate="yes" xml:space="preserve">
          <source>Use customized color for push errors.</source>
          <target state="translated">Usa un color personalizado para los errores de empuje.</target>
        </trans-unit>
        <trans-unit id="efd1e4b094e6a540e69b42772ae161651f4648a2" translate="yes" xml:space="preserve">
          <source>Use customized color for status colorization. &lt;code&gt;&amp;lt;slot&amp;gt;&lt;/code&gt; is one of &lt;code&gt;header&lt;/code&gt; (the header text of the status message), &lt;code&gt;added&lt;/code&gt; or &lt;code&gt;updated&lt;/code&gt; (files which are added but not committed), &lt;code&gt;changed&lt;/code&gt; (files which are changed but not added in the index), &lt;code&gt;untracked&lt;/code&gt; (files which are not tracked by Git), &lt;code&gt;branch&lt;/code&gt; (the current branch), &lt;code&gt;nobranch&lt;/code&gt; (the color the &lt;code&gt;no branch&lt;/code&gt; warning is shown in, defaulting to red), &lt;code&gt;localBranch&lt;/code&gt; or &lt;code&gt;remoteBranch&lt;/code&gt; (the local and remote branch names, respectively, when branch and tracking information is displayed in the status short-format), or &lt;code&gt;unmerged&lt;/code&gt; (files which have unmerged changes).</source>
          <target state="translated">Utilice colores personalizados para colorear el estado. &lt;code&gt;&amp;lt;slot&amp;gt;&lt;/code&gt; es uno de &lt;code&gt;header&lt;/code&gt; (el texto del encabezado del mensaje de estado), &lt;code&gt;added&lt;/code&gt; o &lt;code&gt;updated&lt;/code&gt; (archivos que se agregan pero no confirmados), &lt;code&gt;changed&lt;/code&gt; (archivos que se cambian pero no se agregan en el &amp;iacute;ndice), sin &lt;code&gt;untracked&lt;/code&gt; (archivos que no est&amp;aacute;n rastreado por Git), &lt;code&gt;branch&lt;/code&gt; (la rama actual), &lt;code&gt;nobranch&lt;/code&gt; (el color en el que se muestra la advertencia de &lt;code&gt;no branch&lt;/code&gt; , &lt;code&gt;localBranch&lt;/code&gt; rojo), localBranch o &lt;code&gt;remoteBranch&lt;/code&gt; (los nombres de rama local y remota, respectivamente, cuando la informaci&amp;oacute;n de rama y seguimiento se muestra en el estado de formato corto), o &lt;code&gt;unmerged&lt;/code&gt; (archivos que tienen cambios no fusionados).</target>
        </trans-unit>
        <trans-unit id="42006ecfd08deb9b3ff0a3f1d7240d8f715710f3" translate="yes" xml:space="preserve">
          <source>Use customized color when a push was rejected.</source>
          <target state="translated">Usar el color personalizado cuando un empujón fue rechazado.</target>
        </trans-unit>
        <trans-unit id="7714f2243f3ecb7a0c915a75f0d9677bee5cfddf" translate="yes" xml:space="preserve">
          <source>Use fixed strings for patterns (don&amp;rsquo;t interpret pattern as a regex).</source>
          <target state="translated">Use cadenas fijas para los patrones (no interprete el patr&amp;oacute;n como una expresi&amp;oacute;n regular).</target>
        </trans-unit>
        <trans-unit id="be83392780575c9c0f338875e4ab41fca7ad0580" translate="yes" xml:space="preserve">
          <source>Use given directory for the location of Git objects. We check &lt;code&gt;&amp;lt;dir&amp;gt;/packs/multi-pack-index&lt;/code&gt; for the current MIDX file, and &lt;code&gt;&amp;lt;dir&amp;gt;/packs&lt;/code&gt; for the pack-files to index.</source>
          <target state="translated">Use el directorio dado para la ubicaci&amp;oacute;n de los objetos Git. Verificamos &lt;code&gt;&amp;lt;dir&amp;gt;/packs/multi-pack-index&lt;/code&gt; para el archivo MIDX actual, y &lt;code&gt;&amp;lt;dir&amp;gt;/packs&lt;/code&gt; para los archivos del paquete a indexar.</target>
        </trans-unit>
        <trans-unit id="58e0e6d68f2b1086e2f61cc3ccf9bb473fce2cb1" translate="yes" xml:space="preserve">
          <source>Use given directory for the location of packfiles and commit-graph file. This parameter exists to specify the location of an alternate that only has the objects directory, not a full &lt;code&gt;.git&lt;/code&gt; directory. The commit-graph file is expected to be in the &lt;code&gt;&amp;lt;dir&amp;gt;/info&lt;/code&gt; directory and the packfiles are expected to be in &lt;code&gt;&amp;lt;dir&amp;gt;/pack&lt;/code&gt;.</source>
          <target state="translated">Utilice el directorio dado para la ubicaci&amp;oacute;n de los archivos de paquete y el archivo de gr&amp;aacute;fico de confirmaci&amp;oacute;n. Este par&amp;aacute;metro existe para especificar la ubicaci&amp;oacute;n de una alternativa que solo tiene el directorio de objetos, no un directorio &lt;code&gt;.git&lt;/code&gt; completo . Se espera que el archivo de gr&amp;aacute;fico de confirmaci&amp;oacute;n est&amp;eacute; en el &lt;code&gt;&amp;lt;dir&amp;gt;/info&lt;/code&gt; y se espera que los archivos de paquete est&amp;eacute;n en &lt;code&gt;&amp;lt;dir&amp;gt;/pack&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="034b8d3eb2bf376cba5a544572cc51a019ffd1af" translate="yes" xml:space="preserve">
          <source>Use given directory for the location of packfiles and commit-graph file. This parameter exists to specify the location of an alternate that only has the objects directory, not a full &lt;code&gt;.git&lt;/code&gt; directory. The commit-graph file is expected to be in the &lt;code&gt;&amp;lt;dir&amp;gt;/info&lt;/code&gt; directory and the packfiles are expected to be in &lt;code&gt;&amp;lt;dir&amp;gt;/pack&lt;/code&gt;. If the directory could not be made into an absolute path, or does not match any known object directory, &lt;code&gt;git commit-graph ...&lt;/code&gt; will exit with non-zero status.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e22ac3ec044552fceb6f971a8409c3fc735d918" translate="yes" xml:space="preserve">
          <source>Use gmail as the smtp server</source>
          <target state="translated">Usar gmail como servidor smtp</target>
        </trans-unit>
        <trans-unit id="243e0ec42451f8d223cf0a086b6e0d020fe017bc" translate="yes" xml:space="preserve">
          <source>Use hash &lt;code&gt;#&lt;/code&gt; for comments that are either on their own line, or after the email address.</source>
          <target state="translated">Utilice hash &lt;code&gt;#&lt;/code&gt; para los comentarios que est&amp;eacute;n en su propia l&amp;iacute;nea o despu&amp;eacute;s de la direcci&amp;oacute;n de correo electr&amp;oacute;nico.</target>
        </trans-unit>
        <trans-unit id="fe4290ca9cf2dcf165b3911c20fcc8115cf36b09" translate="yes" xml:space="preserve">
          <source>Use libcurl to communicate with the IMAP server, unless tunneling into it. Ignored if Git was built without the USE_CURL_FOR_IMAP_SEND option set.</source>
          <target state="translated">Usa libcurl para comunicarte con el servidor IMAP,a menos que hagas un túnel en él.Ignoró si Git fue construido sin el conjunto de opciones USE_CURL_FOR_IMAP_SEND.</target>
        </trans-unit>
        <trans-unit id="b43e2a7c9e04ff83908291bc454ceb95c66f26d2" translate="yes" xml:space="preserve">
          <source>Use mailmap file to map author and committer names and email addresses to canonical real names and email addresses. See &lt;a href=&quot;git-shortlog&quot;&gt;git-shortlog[1]&lt;/a&gt;.</source>
          <target state="translated">Utilice el archivo de mapa de correo para asignar los nombres de autor y autor y las direcciones de correo electr&amp;oacute;nico a nombres reales can&amp;oacute;nicos y direcciones de correo electr&amp;oacute;nico. Consulte &lt;a href=&quot;git-shortlog&quot;&gt;git-shortlog [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="869311b9e64386ec94c4224dbda98ca212bcb863" translate="yes" xml:space="preserve">
          <source>Use merging strategies to rebase. When the recursive (default) merge strategy is used, this allows rebase to be aware of renames on the upstream side.</source>
          <target state="translated">Usar estrategias de fusión para rebasear.Cuando se utiliza la estrategia de fusión recursiva (por defecto),esto permite que la base tenga en cuenta los cambios de nombre en la parte superior.</target>
        </trans-unit>
        <trans-unit id="07cf71eed9a3b36f45bcc6fde8a3af9707bd0146" translate="yes" xml:space="preserve">
          <source>Use merging strategies to rebase. When the recursive (default) merge strategy is used, this allows rebase to be aware of renames on the upstream side. This is the default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="504dd078aaf1ec972f6af826bbe142e1450759fa" translate="yes" xml:space="preserve">
          <source>Use of &quot;topic branches&quot; solves these problems. The name is pretty self explanatory, with a caveat that comes from the &quot;merge upwards&quot; rule above:</source>
          <target state="translated">El uso de &quot;ramas temáticas&quot; resuelve estos problemas.El nombre es bastante auto-explicativo,con una advertencia que viene de la regla de &quot;fusionar hacia arriba&quot; de arriba:</target>
        </trans-unit>
        <trans-unit id="2997460999cadfc1fcc5d52315d53b3d5efcd07d" translate="yes" xml:space="preserve">
          <source>Use of &lt;code&gt;dcommit&lt;/code&gt; is preferred to &lt;code&gt;set-tree&lt;/code&gt; (below).</source>
          <target state="translated">Se prefiere el uso de &lt;code&gt;dcommit&lt;/code&gt; a &lt;code&gt;set-tree&lt;/code&gt; (abajo).</target>
        </trans-unit>
        <trans-unit id="6b08c4843a60fcea417d6fa6b7562621b3124054" translate="yes" xml:space="preserve">
          <source>Use of this utility is encouraged in favor of directly accessing files under the &lt;code&gt;.git&lt;/code&gt; directory.</source>
          <target state="translated">Se recomienda el uso de esta utilidad a favor de acceder directamente a los archivos del directorio &lt;code&gt;.git&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3a96544176d9c64bcdfe76616987380a83e4f896" translate="yes" xml:space="preserve">
          <source>Use permissions reported by umask(2). The default, when &lt;code&gt;--shared&lt;/code&gt; is not specified.</source>
          <target state="translated">Utilice los permisos informados por umask (2). El valor predeterminado, cuando no se especifica &lt;code&gt;--shared&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7b2e5a64a2bb1a5fbe6304abee401e1d3f35a8f4" translate="yes" xml:space="preserve">
          <source>Use reflog to find a better common ancestor between &amp;lt;upstream&amp;gt; and &amp;lt;branch&amp;gt; when calculating which commits have been introduced by &amp;lt;branch&amp;gt;.</source>
          <target state="translated">Use reflog para encontrar un mejor ancestro com&amp;uacute;n entre &amp;lt;upstream&amp;gt; y &amp;lt;branch&amp;gt; al calcular qu&amp;eacute; confirmaciones han sido introducidas por &amp;lt;branch&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="b40e39ff3f77007104d997879dd735023a9dca06" translate="yes" xml:space="preserve">
          <source>Use revisions from revs-file instead of calling &lt;a href=&quot;git-rev-list&quot;&gt;git-rev-list[1]&lt;/a&gt;.</source>
          <target state="translated">Use revisiones de revs-file en lugar de llamar a &lt;a href=&quot;git-rev-list&quot;&gt;git-rev-list [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="efb298546ca010c6e357a2c3cc79d1b86fb2f356" translate="yes" xml:space="preserve">
          <source>Use the &quot;sparse&quot; algorithm to determine which objects to include in the pack, when combined with the &quot;--revs&quot; option. This algorithm only walks trees that appear in paths that introduce new objects. This can have significant performance benefits when computing a pack to send a small change. However, it is possible that extra objects are added to the pack-file if the included commits contain certain types of direct renames.</source>
          <target state="translated">Usar el algoritmo &quot;sparse&quot; para determinar qué objetos incluir en el paquete,cuando se combina con la opción &quot;--revs&quot;.Este algoritmo sólo recorre los árboles que aparecen en los caminos que introducen nuevos objetos.Esto puede tener importantes beneficios de rendimiento cuando se computa un paquete para enviar un pequeño cambio.Sin embargo,es posible que se añadan objetos adicionales al paquete si las confirmaciones incluidas contienen ciertos tipos de renombramientos directos.</target>
        </trans-unit>
        <trans-unit id="0755f10a2fd51824d1737b45b49a4642d66873f8" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;--in-place&lt;/code&gt; option to edit a message file in place:</source>
          <target state="translated">Utilice la opci&amp;oacute;n &lt;code&gt;--in-place&lt;/code&gt; para editar un archivo de mensaje en su lugar:</target>
        </trans-unit>
        <trans-unit id="55e7e1126d3aa0a5c8bf2360dfcd495bb1107882" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;working-tree-encoding&lt;/code&gt; attribute only if you cannot store a file in UTF-8 encoding and if you want Git to be able to process the content as text.</source>
          <target state="translated">Use el atributo de &lt;code&gt;working-tree-encoding&lt;/code&gt; solo si no puede almacenar un archivo en codificaci&amp;oacute;n UTF-8 y si desea que Git pueda procesar el contenido como texto.</target>
        </trans-unit>
        <trans-unit id="b5ec705c3f1e9d70bd95302efbf5732684172042" translate="yes" xml:space="preserve">
          <source>Use the branch detection algorithm to find new paths in p4. It is documented below in &quot;BRANCH DETECTION&quot;.</source>
          <target state="translated">Usar el algoritmo de detección de ramas para encontrar nuevos caminos en p4.Está documentado abajo en &quot;DETECCIÓN DE RAMA&quot;.</target>
        </trans-unit>
        <trans-unit id="33ac56041ae34da6b3682a94d8a665913a47636a" translate="yes" xml:space="preserve">
          <source>Use the credential (e.g., access the URL with the username and password from step (2)), and see if it&amp;rsquo;s accepted.</source>
          <target state="translated">Utilice la credencial (por ejemplo, acceda a la URL con el nombre de usuario y la contrase&amp;ntilde;a del paso (2)) y compruebe si es aceptada.</target>
        </trans-unit>
        <trans-unit id="4cfefdd524d37cf0c1fedc168c903048fc636bbd" translate="yes" xml:space="preserve">
          <source>Use the customized color for the part of git-blame output that is repeated meta information per line (such as commit id, author name, date and timezone). Defaults to cyan.</source>
          <target state="translated">Utilice el color personalizado para la parte de la salida de git-blame que es información meta repetida por línea (como el ID de confirmación,el nombre del autor,la fecha y la zona horaria).Por defecto es cyan.</target>
        </trans-unit>
        <trans-unit id="a024bae6c0f6ae8fa68e77c95e0c4f95100aa970" translate="yes" xml:space="preserve">
          <source>Use the diff tool specified by &amp;lt;tool&amp;gt;. Valid values include emerge, kompare, meld, and vimdiff. Run &lt;code&gt;git difftool --tool-help&lt;/code&gt; for the list of valid &amp;lt;tool&amp;gt; settings.</source>
          <target state="translated">Utilice la herramienta de diferencias especificada por &amp;lt;tool&amp;gt;. Los valores v&amp;aacute;lidos incluyen emerge, kompare, meld y vimdiff. Ejecute &lt;code&gt;git difftool --tool-help&lt;/code&gt; para obtener la lista de configuraciones v&amp;aacute;lidas de &amp;lt;tool&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="161588bc8b76efbad18d428ccf6e2f5e459908d1" translate="yes" xml:space="preserve">
          <source>Use the fast patchset import strategy. This can be significantly faster for large trees, but cannot handle directory renames or permissions changes. The default strategy is slow and safe.</source>
          <target state="translated">Usar la estrategia de importación rápida de parches.Esto puede ser significativamente más rápido para los árboles grandes,pero no puede manejar los renombramientos de directorios o cambios de permisos.La estrategia predeterminada es lenta y segura.</target>
        </trans-unit>
        <trans-unit id="89541b63bc820ad5c76ea37101a62452ee62e61c" translate="yes" xml:space="preserve">
          <source>Use the following attributes if your &lt;code&gt;*.ps1&lt;/code&gt; files are UTF-16 little endian encoded without BOM and you want Git to use Windows line endings in the working directory (use &lt;code&gt;UTF-16LE-BOM&lt;/code&gt; instead of &lt;code&gt;UTF-16LE&lt;/code&gt; if you want UTF-16 little endian with BOM). Please note, it is highly recommended to explicitly define the line endings with &lt;code&gt;eol&lt;/code&gt; if the &lt;code&gt;working-tree-encoding&lt;/code&gt; attribute is used to avoid ambiguity.</source>
          <target state="translated">Use los siguientes atributos si sus archivos &lt;code&gt;*.ps1&lt;/code&gt; est&amp;aacute;n codificados en UTF-16 little endian sin BOM y desea que Git use finales de l&amp;iacute;nea de Windows en el directorio de trabajo (use &lt;code&gt;UTF-16LE-BOM&lt;/code&gt; en lugar de &lt;code&gt;UTF-16LE&lt;/code&gt; si desea UTF-16 little endian con BOM). Tenga en cuenta que es muy recomendable definir expl&amp;iacute;citamente los finales de l&amp;iacute;nea con &lt;code&gt;eol&lt;/code&gt; si se utiliza el atributo de &lt;code&gt;working-tree-encoding&lt;/code&gt; para evitar la ambig&amp;uuml;edad.</target>
        </trans-unit>
        <trans-unit id="e5c2f58b6a6ebc713504e60181f4f0dd37da2d6d" translate="yes" xml:space="preserve">
          <source>Use the given &amp;lt;msg&amp;gt; as the commit message. If multiple &lt;code&gt;-m&lt;/code&gt; options are given, their values are concatenated as separate paragraphs.</source>
          <target state="translated">Utilice el &amp;lt;msg&amp;gt; proporcionado como mensaje de confirmaci&amp;oacute;n. Si se dan varias opciones &lt;code&gt;-m&lt;/code&gt; , sus valores se concatenan como p&amp;aacute;rrafos separados.</target>
        </trans-unit>
        <trans-unit id="be3b9715415e0357d3d87d01aa8f812c871fb1e1" translate="yes" xml:space="preserve">
          <source>Use the given &lt;code&gt;msg&lt;/code&gt; as the commit message. This option disables the &lt;code&gt;--edit&lt;/code&gt; option.</source>
          <target state="translated">Utilice el dado &lt;code&gt;msg&lt;/code&gt; como el mensaje de confirmaci&amp;oacute;n. Esta opci&amp;oacute;n desactiva la opci&amp;oacute;n &lt;code&gt;--edit&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="43103d879018fa15a44cefa9b3baec705e25165c" translate="yes" xml:space="preserve">
          <source>Use the given config file instead of the one specified by GIT_CONFIG.</source>
          <target state="translated">Utilice el archivo de configuración dado en lugar del especificado por GIT_CONFIG.</target>
        </trans-unit>
        <trans-unit id="6d07104b51b424f44cb0346a9ac8f4116b0f06d7" translate="yes" xml:space="preserve">
          <source>Use the given exclude pattern in addition to the standard ignore rules (see &lt;a href=&quot;gitignore&quot;&gt;gitignore[5]&lt;/a&gt;).</source>
          <target state="translated">Utilice el patr&amp;oacute;n de exclusi&amp;oacute;n dado adem&amp;aacute;s de las reglas est&amp;aacute;ndar de ignorar (consulte &lt;a href=&quot;gitignore&quot;&gt;gitignore [5]&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="9a12bbd112f0b48f03fdbbbb0b9c68268bedd960" translate="yes" xml:space="preserve">
          <source>Use the given merge strategy. If there is no &lt;code&gt;-s&lt;/code&gt; option &lt;code&gt;git merge-recursive&lt;/code&gt; is used instead. This implies --merge.</source>
          <target state="translated">Utilice la estrategia de combinaci&amp;oacute;n dada. Si no hay la opci&amp;oacute;n &lt;code&gt;-s&lt;/code&gt; , se usa &lt;code&gt;git merge-recursive&lt;/code&gt; en su lugar. Esto implica - fusionar.</target>
        </trans-unit>
        <trans-unit id="aad779cdebc63bc4b25eb19e46a7b214101b70ea" translate="yes" xml:space="preserve">
          <source>Use the given merge strategy. Should only be used once. See the MERGE STRATEGIES section in &lt;a href=&quot;git-merge&quot;&gt;git-merge[1]&lt;/a&gt; for details.</source>
          <target state="translated">Utilice la estrategia de combinaci&amp;oacute;n dada. Solo debe usarse una vez. Consulte la secci&amp;oacute;n MERGE STRATEGIES en &lt;a href=&quot;git-merge&quot;&gt;git-merge [1]&lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="0d697cccd6049781089822f14d706ae91b43a781" translate="yes" xml:space="preserve">
          <source>Use the given merge strategy; can be supplied more than once to specify them in the order they should be tried. If there is no &lt;code&gt;-s&lt;/code&gt; option, a built-in list of strategies is used instead (&lt;code&gt;git merge-recursive&lt;/code&gt; when merging a single head, &lt;code&gt;git merge-octopus&lt;/code&gt; otherwise).</source>
          <target state="translated">Utilice la estrategia de fusi&amp;oacute;n dada; se pueden suministrar m&amp;aacute;s de una vez para especificarlos en el orden en que deben probarse. Si no hay una opci&amp;oacute;n &lt;code&gt;-s&lt;/code&gt; , en su lugar se usa una lista incorporada de estrategias ( &lt;code&gt;git merge-recursive&lt;/code&gt; cuando se fusiona una sola cabeza, &lt;code&gt;git merge-octopus&lt;/code&gt; en caso contrario).</target>
        </trans-unit>
        <trans-unit id="e15a6801b533c61848133f0481a1499ec359e784" translate="yes" xml:space="preserve">
          <source>Use the given note message (instead of prompting). If multiple &lt;code&gt;-m&lt;/code&gt; options are given, their values are concatenated as separate paragraphs. Lines starting with &lt;code&gt;#&lt;/code&gt; and empty lines other than a single line between paragraphs will be stripped out.</source>
          <target state="translated">Utilice el mensaje de nota dado (en lugar de solicitar). Si se dan varias opciones &lt;code&gt;-m&lt;/code&gt; , sus valores se concatenan como p&amp;aacute;rrafos separados. Las l&amp;iacute;neas que comienzan con &lt;code&gt;#&lt;/code&gt; y las l&amp;iacute;neas vac&amp;iacute;as que no sean una sola l&amp;iacute;nea entre p&amp;aacute;rrafos se eliminar&amp;aacute;n.</target>
        </trans-unit>
        <trans-unit id="2301e57be484e5bf3374c6061960726be52acd3f" translate="yes" xml:space="preserve">
          <source>Use the given tag message (instead of prompting). If multiple &lt;code&gt;-m&lt;/code&gt; options are given, their values are concatenated as separate paragraphs. Implies &lt;code&gt;-a&lt;/code&gt; if none of &lt;code&gt;-a&lt;/code&gt;, &lt;code&gt;-s&lt;/code&gt;, or &lt;code&gt;-u &amp;lt;keyid&amp;gt;&lt;/code&gt; is given.</source>
          <target state="translated">Utilice el mensaje de etiqueta dado (en lugar de preguntar). Si se dan varias opciones &lt;code&gt;-m&lt;/code&gt; , sus valores se concatenan como p&amp;aacute;rrafos separados. Implica &lt;code&gt;-a&lt;/code&gt; si no se proporciona ninguno de &lt;code&gt;-a&lt;/code&gt; , &lt;code&gt;-s&lt;/code&gt; o &lt;code&gt;-u &amp;lt;keyid&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="52a6c166f490dbb0be0d25b65f46015f7e67e623" translate="yes" xml:space="preserve">
          <source>Use the interactive patch selection interface to chose which changes to commit. See &lt;a href=&quot;git-add&quot;&gt;git-add[1]&lt;/a&gt; for details.</source>
          <target state="translated">Utilice la interfaz de selecci&amp;oacute;n de parches interactiva para elegir qu&amp;eacute; cambios confirmar. Consulte &lt;a href=&quot;git-add&quot;&gt;git-add [1]&lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="7db128e87ada4e1ec3f3340d8431acfc429f3677" translate="yes" xml:space="preserve">
          <source>Use the merge resolution program specified by &amp;lt;tool&amp;gt;. Valid values include emerge, gvimdiff, kdiff3, meld, vimdiff, and tortoisemerge. Run &lt;code&gt;git mergetool --tool-help&lt;/code&gt; for the list of valid &amp;lt;tool&amp;gt; settings.</source>
          <target state="translated">Utilice el programa de resoluci&amp;oacute;n de combinaci&amp;oacute;n especificado por &amp;lt;tool&amp;gt;. Los valores v&amp;aacute;lidos incluyen emerge, gvimdiff, kdiff3, meld, vimdiff y tortoisemerge. Ejecute &lt;code&gt;git mergetool --tool-help&lt;/code&gt; para obtener la lista de configuraciones v&amp;aacute;lidas de &amp;lt;tool&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="047156e36b9d6e8b2155d32a029545b1b026f10e" translate="yes" xml:space="preserve">
          <source>Use the multi-pack-index file to track multiple packfiles using a single index. See &lt;a href=&quot;multi-pack-index&quot;&gt;the multi-pack-index design document&lt;/a&gt;.</source>
          <target state="translated">Utilice el archivo de &amp;iacute;ndice de paquetes m&amp;uacute;ltiples para realizar un seguimiento de varios archivos de paquetes utilizando un &amp;uacute;nico &amp;iacute;ndice. Consulte &lt;a href=&quot;multi-pack-index&quot;&gt;el documento de dise&amp;ntilde;o de &amp;iacute;ndice de paquetes m&amp;uacute;ltiples&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f14443aa07cf034aa00129ee21b4f7df2be49255" translate="yes" xml:space="preserve">
          <source>Use the partial clone feature and request that the server sends a subset of reachable objects according to a given object filter. When using &lt;code&gt;--filter&lt;/code&gt;, the supplied &lt;code&gt;&amp;lt;filter-spec&amp;gt;&lt;/code&gt; is used for the partial clone filter. For example, &lt;code&gt;--filter=blob:none&lt;/code&gt; will filter out all blobs (file contents) until needed by Git. Also, &lt;code&gt;--filter=blob:limit=&amp;lt;size&amp;gt;&lt;/code&gt; will filter out all blobs of size at least &lt;code&gt;&amp;lt;size&amp;gt;&lt;/code&gt;. For more details on filter specifications, see the &lt;code&gt;--filter&lt;/code&gt; option in &lt;a href=&quot;git-rev-list&quot;&gt;git-rev-list[1]&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bac5b4ccbcc396e691c8ba8f2af89d4f60c9270" translate="yes" xml:space="preserve">
          <source>Use the same output mode as &lt;a href=&quot;git-annotate&quot;&gt;git-annotate[1]&lt;/a&gt; (Default: off).</source>
          <target state="translated">Utilice el mismo modo de salida que &lt;a href=&quot;git-annotate&quot;&gt;git-annotate [1]&lt;/a&gt; (predeterminado: desactivado).</target>
        </trans-unit>
        <trans-unit id="0ed67a2ecd3a9ee96ae4cd7dcb45f48a2cf84bf4" translate="yes" xml:space="preserve">
          <source>Use the selected commit message without launching an editor. For example, &lt;code&gt;git commit --amend --no-edit&lt;/code&gt; amends a commit without changing its commit message.</source>
          <target state="translated">Utilice el mensaje de confirmaci&amp;oacute;n seleccionado sin iniciar un editor. Por ejemplo, &lt;code&gt;git commit --amend --no-edit&lt;/code&gt; corrige una confirmaci&amp;oacute;n sin cambiar su mensaje de confirmaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="8e65c034e7da87d64be153e02b39a8529bd16f67" translate="yes" xml:space="preserve">
          <source>Use the source ref that matches &lt;code&gt;master&lt;/code&gt; (e.g. &lt;code&gt;refs/heads/master&lt;/code&gt;) to update the ref that matches &lt;code&gt;satellite/master&lt;/code&gt; (most probably &lt;code&gt;refs/remotes/satellite/master&lt;/code&gt;) in the &lt;code&gt;mothership&lt;/code&gt; repository; do the same for &lt;code&gt;dev&lt;/code&gt; and &lt;code&gt;satellite/dev&lt;/code&gt;.</source>
          <target state="translated">Utilice la referencia de origen que coincida con el &lt;code&gt;master&lt;/code&gt; (por ejemplo, &lt;code&gt;refs/heads/master&lt;/code&gt; ) para actualizar la referencia que coincida con el &lt;code&gt;satellite/master&lt;/code&gt; (probablemente &lt;code&gt;refs/remotes/satellite/master&lt;/code&gt; ) en el repositorio de la &lt;code&gt;mothership&lt;/code&gt; ; haga lo mismo para &lt;code&gt;dev&lt;/code&gt; y &lt;code&gt;satellite/dev&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="82b93c6560af27195da14e70510e2b3d8651c3b7" translate="yes" xml:space="preserve">
          <source>Use the specified HTTP protocol version when communicating with a server. If you want to force the default. The available and default version depend on libcurl. Actually the possible values of this option are:</source>
          <target state="translated">Utilice la versión especificada del protocolo HTTP cuando se comunique con un servidor.Si desea forzar el valor predeterminado.La versión disponible y la predeterminada dependen de libcurl.En realidad los posibles valores de esta opción son:</target>
        </trans-unit>
        <trans-unit id="85fede53ff0add46d3665dfda925d3c1db752a7f" translate="yes" xml:space="preserve">
          <source>Use the specified HTTP protocol version when communicating with a server. If you want to force the default. The available and default version depend on libcurl. Currently the possible values of this option are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="becfdaabcf538340d904ac918eb155dd5d16c802" translate="yes" xml:space="preserve">
          <source>Use the specified URL to connect to the destination Subversion repository. This is useful in cases where the source SVN repository is read-only. This option overrides configuration property &lt;code&gt;commiturl&lt;/code&gt;.</source>
          <target state="translated">Utilice la URL especificada para conectarse al repositorio de Subversion de destino. Esto es &amp;uacute;til en los casos en que el repositorio SVN de origen es de solo lectura. Esta opci&amp;oacute;n anula la propiedad de configuraci&amp;oacute;n &lt;code&gt;commiturl&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="eded6790141cbbb141d77bfcf5fc351397828538" translate="yes" xml:space="preserve">
          <source>Use the specified name for the initial branch in the newly created repository. If not specified, fall back to the default name: &lt;code&gt;master&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e057e9e47493412f91dea4102ac0984cb71bdeb" translate="yes" xml:space="preserve">
          <source>Use the value of the &lt;code&gt;core.whitespace&lt;/code&gt; configuration variable to decide what to notice as error.</source>
          <target state="translated">Utilice el valor de la variable de configuraci&amp;oacute;n &lt;code&gt;core.whitespace&lt;/code&gt; para decidir qu&amp;eacute; notar como error.</target>
        </trans-unit>
        <trans-unit id="810f8c03feb9550dd6740190f543dbb37624e241" translate="yes" xml:space="preserve">
          <source>Use this custom program instead of &quot;&lt;code&gt;gpg&lt;/code&gt;&quot; found on &lt;code&gt;$PATH&lt;/code&gt; when making or verifying a PGP signature. The program must support the same command-line interface as GPG, namely, to verify a detached signature, &quot;&lt;code&gt;gpg --verify $signature - &amp;lt;$file&lt;/code&gt;&quot; is run, and the program is expected to signal a good signature by exiting with code 0, and to generate an ASCII-armored detached signature, the standard input of &quot;&lt;code&gt;gpg -bsau $key&lt;/code&gt;&quot; is fed with the contents to be signed, and the program is expected to send the result to its standard output.</source>
          <target state="translated">Utilice este programa personalizado en lugar de &quot; &lt;code&gt;gpg&lt;/code&gt; &quot; que se encuentra en &lt;code&gt;$PATH&lt;/code&gt; al hacer o verificar una firma PGP. El programa debe admitir la misma interfaz de l&amp;iacute;nea de comandos que GPG, es decir, para verificar una firma separada, se &lt;code&gt;gpg --verify $signature - &amp;lt;$file&lt;/code&gt; &quot; gpg --verify $ signature - &amp;lt;$ file &quot;, y se espera que el programa indique una buena firma al salir con el c&amp;oacute;digo 0, y para generar una firma separada blindada ASCII, la entrada est&amp;aacute;ndar de &quot; &lt;code&gt;gpg -bsau $key&lt;/code&gt; &quot; se alimenta con el contenido a firmar, y se espera que el programa env&amp;iacute;e el resultado a su salida est&amp;aacute;ndar.</target>
        </trans-unit>
        <trans-unit id="a644dabd3c4c5e288aecaab3da05ddb8c7da086c" translate="yes" xml:space="preserve">
          <source>Use this for compatibility with old-style branch names used by earlier versions of &lt;code&gt;git archimport&lt;/code&gt;. Old-style branch names were category--branch, whereas new-style branch names are archive,category--branch--version. In both cases, names given on the command-line will override the automatically-generated ones.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad85fb495e355ea9ee99bf9caef60d6a5acc4df9" translate="yes" xml:space="preserve">
          <source>Use this for compatibility with old-style branch names used by earlier versions of &lt;code&gt;git archimport&lt;/code&gt;. Old-style branch names were category{litdd}branch, whereas new-style branch names are archive,category{litdd}branch{litdd}version. In both cases, names given on the command-line will override the automatically-generated ones.</source>
          <target state="translated">Use esto para compatibilidad con nombres de rama de estilo antiguo utilizados por versiones anteriores de &lt;code&gt;git archimport&lt;/code&gt; . Los nombres de rama de estilo antiguo eran rama de categor&amp;iacute;a {litdd}, mientras que los nombres de rama de estilo nuevo son archivo, versi&amp;oacute;n de rama de categor&amp;iacute;a {litdd} rama {litdd}. En ambos casos, los nombres dados en la l&amp;iacute;nea de comandos anular&amp;aacute;n los generados autom&amp;aacute;ticamente.</target>
        </trans-unit>
        <trans-unit id="f09efb8456c99114df5272977533145bfda3715e" translate="yes" xml:space="preserve">
          <source>Use this option to integrate changes from the upstream subproject with your submodule&amp;rsquo;s current HEAD. Alternatively, you can run &lt;code&gt;git pull&lt;/code&gt; from the submodule, which is equivalent except for the remote branch name: &lt;code&gt;update --remote&lt;/code&gt; uses the default upstream repository and &lt;code&gt;submodule.&amp;lt;name&amp;gt;.branch&lt;/code&gt;, while &lt;code&gt;git pull&lt;/code&gt; uses the submodule&amp;rsquo;s &lt;code&gt;branch.&amp;lt;name&amp;gt;.merge&lt;/code&gt;. Prefer &lt;code&gt;submodule.&amp;lt;name&amp;gt;.branch&lt;/code&gt; if you want to distribute the default upstream branch with the superproject and &lt;code&gt;branch.&amp;lt;name&amp;gt;.merge&lt;/code&gt; if you want a more native feel while working in the submodule itself.</source>
          <target state="translated">Utilice esta opci&amp;oacute;n para integrar los cambios del subproyecto anterior con el HEAD actual de su subm&amp;oacute;dulo. Alternativamente, puede ejecutar &lt;code&gt;git pull&lt;/code&gt; desde el subm&amp;oacute;dulo, que es equivalente excepto por el nombre de la rama remota: &lt;code&gt;update --remote&lt;/code&gt; usa el repositorio ascendente predeterminado y el &lt;code&gt;submodule.&amp;lt;name&amp;gt;.branch&lt;/code&gt; , mientras que &lt;code&gt;git pull&lt;/code&gt; usa la &lt;code&gt;branch.&amp;lt;name&amp;gt;.merge&lt;/code&gt; del subm&amp;oacute;dulo . &amp;lt;nombre&amp;gt; .merge . Prefiera el &lt;code&gt;submodule.&amp;lt;name&amp;gt;.branch&lt;/code&gt; si desea distribuir la rama ascendente predeterminada con el superproyecto y la &lt;code&gt;branch.&amp;lt;name&amp;gt;.merge&lt;/code&gt; si desea una sensaci&amp;oacute;n m&amp;aacute;s nativa mientras trabaja en el subm&amp;oacute;dulo en s&amp;iacute;.</target>
        </trans-unit>
        <trans-unit id="205f9bc458a5cacd665ee1af1eac8a989bc13811" translate="yes" xml:space="preserve">
          <source>Use this option to set the namespace where the original commits will be stored. The default value is &lt;code&gt;refs/original&lt;/code&gt;.</source>
          <target state="translated">Utilice esta opci&amp;oacute;n para establecer el espacio de nombres donde se almacenar&amp;aacute;n las confirmaciones originales. El valor predeterminado es &lt;code&gt;refs/original&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="978a87da673ee3d6baf57006a070d2ceaf2e0a29" translate="yes" xml:space="preserve">
          <source>Use this option to set the path to the temporary directory used for rewriting. When applying a tree filter, the command needs to temporarily check out the tree to some directory, which may consume considerable space in case of large projects. By default it does this in the &lt;code&gt;.git-rewrite/&lt;/code&gt; directory but you can override that choice by this parameter.</source>
          <target state="translated">Utilice esta opci&amp;oacute;n para establecer la ruta al directorio temporal utilizado para reescribir. Al aplicar un filtro de &amp;aacute;rbol, el comando necesita verificar temporalmente el &amp;aacute;rbol en alg&amp;uacute;n directorio, lo que puede consumir un espacio considerable en el caso de proyectos grandes. De forma predeterminada, hace esto en el &lt;code&gt;.git-rewrite/&lt;/code&gt; pero puede anular esa elecci&amp;oacute;n con este par&amp;aacute;metro.</target>
        </trans-unit>
        <trans-unit id="7dad6966beac366ffc5d985e757265d090b93f5a" translate="yes" xml:space="preserve">
          <source>Use this option to unstage and remove paths only from the index. Working tree files, whether modified or not, will be left alone.</source>
          <target state="translated">Utilice esta opción para despejar y eliminar los caminos sólo del índice.Los archivos del árbol de trabajo,modificados o no,se dejarán en paz.</target>
        </trans-unit>
        <trans-unit id="22e3468b42fc7b02294ecbf3cdd521f378eedf7b" translate="yes" xml:space="preserve">
          <source>Use this to customize the program used for the signing format you chose. (see &lt;code&gt;gpg.program&lt;/code&gt; and &lt;code&gt;gpg.format&lt;/code&gt;) &lt;code&gt;gpg.program&lt;/code&gt; can still be used as a legacy synonym for &lt;code&gt;gpg.openpgp.program&lt;/code&gt;. The default value for &lt;code&gt;gpg.x509.program&lt;/code&gt; is &quot;gpgsm&quot;.</source>
          <target state="translated">Use esto para personalizar el programa utilizado para el formato de firma que eligi&amp;oacute;. (ver &lt;code&gt;gpg.program&lt;/code&gt; y &lt;code&gt;gpg.format&lt;/code&gt; ) &lt;code&gt;gpg.program&lt;/code&gt; todav&amp;iacute;a se puede utilizar como sin&amp;oacute;nimo heredado de &lt;code&gt;gpg.openpgp.program&lt;/code&gt; . El valor predeterminado para &lt;code&gt;gpg.x509.program&lt;/code&gt; es &quot;gpgsm&quot;.</target>
        </trans-unit>
        <trans-unit id="2c0ec0febb1ffdfb71fd1faf1bdd4ef5cebdb7eb" translate="yes" xml:space="preserve">
          <source>Use this to specify the path to &lt;code&gt;git-upload-pack&lt;/code&gt; on the remote side, if is not found on your $PATH. Installations of sshd ignores the user&amp;rsquo;s environment setup scripts for login shells (e.g. .bash_profile) and your privately installed git may not be found on the system default $PATH. Another workaround suggested is to set up your $PATH in &quot;.bashrc&quot;, but this flag is for people who do not want to pay the overhead for non-interactive shells by having a lean .bashrc file (they set most of the things up in .bash_profile).</source>
          <target state="translated">Use esto para especificar la ruta a &lt;code&gt;git-upload-pack&lt;/code&gt; en el lado remoto, si no se encuentra en su $ PATH. Las instalaciones de sshd ignoran los scripts de configuraci&amp;oacute;n del entorno del usuario para los shells de inicio de sesi&amp;oacute;n (por ejemplo, .bash_profile) y es posible que su git instalado de forma privada no se encuentre en el $ PATH predeterminado del sistema. Otra soluci&amp;oacute;n alternativa sugerida es configurar su $ PATH en &quot;.bashrc&quot;, pero esta bandera es para las personas que no quieren pagar los gastos generales de los shells no interactivos al tener un archivo .bashrc ajustado (ellos configuran la mayor&amp;iacute;a de las cosas en .bash_profile).</target>
        </trans-unit>
        <trans-unit id="1f3cdffd9311e81ebd0ee41b41de344f546bb6a2" translate="yes" xml:space="preserve">
          <source>Used DBI driver. You can specify any available driver for this here, but it might not work. cvsserver is tested with &lt;code&gt;DBD::SQLite&lt;/code&gt;, reported to work with &lt;code&gt;DBD::Pg&lt;/code&gt;, and reported &lt;strong&gt;not&lt;/strong&gt; to work with &lt;code&gt;DBD::mysql&lt;/code&gt;. Please regard this as an experimental feature. May not contain colons (&lt;code&gt;:&lt;/code&gt;). Default: &lt;code&gt;SQLite&lt;/code&gt;</source>
          <target state="translated">Controlador DBI usado. Puede especificar cualquier controlador disponible para esto aqu&amp;iacute;, pero es posible que no funcione. cvsserver se prueba con &lt;code&gt;DBD::SQLite&lt;/code&gt; , se informa que funciona con &lt;code&gt;DBD::Pg&lt;/code&gt; y se informa que &lt;strong&gt;no&lt;/strong&gt; funciona con &lt;code&gt;DBD::mysql&lt;/code&gt; . Considere esto como una caracter&amp;iacute;stica experimental. No puede contener dos puntos ( &lt;code&gt;:&lt;/code&gt; ). Predeterminado: &lt;code&gt;SQLite&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e96c8aa1d6db1322edc422d5cc1ffbd12e71daed" translate="yes" xml:space="preserve">
          <source>Used Perl DBI driver. You can specify any available driver for this here, but it might not work. git-cvsserver is tested with &lt;code&gt;DBD::SQLite&lt;/code&gt;, reported to work with &lt;code&gt;DBD::Pg&lt;/code&gt;, and reported &lt;strong&gt;not&lt;/strong&gt; to work with &lt;code&gt;DBD::mysql&lt;/code&gt;. Experimental feature. May not contain double colons (&lt;code&gt;:&lt;/code&gt;). Default: &lt;code&gt;SQLite&lt;/code&gt;. See &lt;a href=&quot;git-cvsserver&quot;&gt;git-cvsserver[1]&lt;/a&gt;.</source>
          <target state="translated">Controlador Perl DBI usado. Puede especificar cualquier controlador disponible para esto aqu&amp;iacute;, pero es posible que no funcione. git-cvsserver se prueba con &lt;code&gt;DBD::SQLite&lt;/code&gt; , se informa que funciona con &lt;code&gt;DBD::Pg&lt;/code&gt; y se informa que &lt;strong&gt;no&lt;/strong&gt; funciona con &lt;code&gt;DBD::mysql&lt;/code&gt; . Caracter&amp;iacute;stica experimental. No puede contener dos puntos dobles ( &lt;code&gt;:&lt;/code&gt; ). Predeterminado: &lt;code&gt;SQLite&lt;/code&gt; . Consulte &lt;a href=&quot;git-cvsserver&quot;&gt;git-cvsserver [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3dcc5e110a8886980641614ba00244bbf70eb3c6" translate="yes" xml:space="preserve">
          <source>Used as %(if)&amp;hellip;​%(then)&amp;hellip;​%(end) or %(if)&amp;hellip;​%(then)&amp;hellip;​%(else)&amp;hellip;​%(end). If there is an atom with value or string literal after the %(if) then everything after the %(then) is printed, else if the %(else) atom is used, then everything after %(else) is printed. We ignore space when evaluating the string before %(then), this is useful when we use the %(HEAD) atom which prints either &quot;*&quot; or &quot; &quot; and we want to apply the &lt;code&gt;if&lt;/code&gt; condition only on the &lt;code&gt;HEAD&lt;/code&gt; ref. Append &quot;:equals=&amp;lt;string&amp;gt;&quot; or &quot;:notequals=&amp;lt;string&amp;gt;&quot; to compare the value between the %(if:&amp;hellip;​) and %(then) atoms with the given string.</source>
          <target state="translated">Usado como% (si)&amp;hellip;% (luego)&amp;hellip;% (fin) o% (si)&amp;hellip;% (luego)&amp;hellip;% (m&amp;aacute;s)&amp;hellip;% (fin). Si hay un &amp;aacute;tomo con valor o literal de cadena despu&amp;eacute;s de% (si), entonces se imprime todo lo que sigue a% (entonces), de lo contrario, si se usa el &amp;aacute;tomo% (m&amp;aacute;s), se imprime todo lo que sigue a% (m&amp;aacute;s). Ignoramos el espacio cuando evaluamos la cadena antes de% (entonces), esto es &amp;uacute;til cuando usamos el &amp;aacute;tomo% (HEAD) que imprime &quot;*&quot; o &quot;&quot; y queremos aplicar la condici&amp;oacute;n &lt;code&gt;if&lt;/code&gt; solo en la referencia &lt;code&gt;HEAD&lt;/code&gt; . Agregue &quot;: equals = &amp;lt;cadena&amp;gt;&quot; o &quot;: notequals = &amp;lt;cadena&amp;gt;&quot; para comparar el valor entre los &amp;aacute;tomos% (si:&amp;hellip;) y% (entonces) con la cadena dada.</target>
        </trans-unit>
        <trans-unit id="88972a7007de9e429d28d6bad7487052b23f9b65" translate="yes" xml:space="preserve">
          <source>Used to check that a bundle file is valid and will apply cleanly to the current repository. This includes checks on the bundle format itself as well as checking that the prerequisite commits exist and are fully linked in the current repository. &lt;code&gt;git bundle&lt;/code&gt; prints a list of missing commits, if any, and exits with a non-zero status.</source>
          <target state="translated">Se utiliza para comprobar que un archivo de paquete es v&amp;aacute;lido y se aplicar&amp;aacute; limpiamente al repositorio actual. Esto incluye verificaciones en el formato del paquete en s&amp;iacute;, as&amp;iacute; como tambi&amp;eacute;n verificar que las confirmaciones de requisitos previos existen y est&amp;aacute;n completamente vinculadas en el repositorio actual. &lt;code&gt;git bundle&lt;/code&gt; imprime una lista de las confirmaciones faltantes, si las hay, y sale con un estado distinto de cero.</target>
        </trans-unit>
        <trans-unit id="a81dfbb4b6756f63bb43c72d54c78dd02ef851d4" translate="yes" xml:space="preserve">
          <source>Used to create a bundle named &lt;code&gt;file&lt;/code&gt;. This requires the &lt;code&gt;&amp;lt;git-rev-list-args&amp;gt;&lt;/code&gt; arguments to define the bundle contents. &lt;code&gt;options&lt;/code&gt; contains the options specific to the &lt;code&gt;git bundle create&lt;/code&gt; subcommand.</source>
          <target state="translated">Se utiliza para crear un paquete llamado &lt;code&gt;file&lt;/code&gt; . Esto requiere los argumentos &lt;code&gt;&amp;lt;git-rev-list-args&amp;gt;&lt;/code&gt; para definir el contenido del paquete. &lt;code&gt;options&lt;/code&gt; contiene las opciones espec&amp;iacute;ficas del subcomando &lt;code&gt;git bundle create&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fe127bac2ab0b61ffb60c0284f3741224c9951e1" translate="yes" xml:space="preserve">
          <source>Used to enforce or disable certificate revocation checks in cURL when http.sslBackend is set to &quot;schannel&quot;. Defaults to &lt;code&gt;true&lt;/code&gt; if unset. Only necessary to disable this if Git consistently errors and the message is about checking the revocation status of a certificate. This option is ignored if cURL lacks support for setting the relevant SSL option at runtime.</source>
          <target state="translated">Se utiliza para hacer cumplir o deshabilitar las comprobaciones de revocaci&amp;oacute;n de certificados en cURL cuando http.sslBackend est&amp;aacute; configurado como &quot;schannel&quot;. El valor predeterminado es &lt;code&gt;true&lt;/code&gt; si no se configura. Solo es necesario deshabilitar esto si Git tiene errores consistentes y el mensaje trata de verificar el estado de revocaci&amp;oacute;n de un certificado. Esta opci&amp;oacute;n se ignora si cURL carece de soporte para configurar la opci&amp;oacute;n SSL relevante en tiempo de ejecuci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="526891fe0801e3a16c20e50ecde492e75d4f6490" translate="yes" xml:space="preserve">
          <source>Used to set the maximum load that we will still respond to gitweb queries. If the server load exceeds this value then gitweb will return &quot;503 Service Unavailable&quot; error. The server load is taken to be 0 if gitweb cannot determine its value. Currently it works only on Linux, where it uses &lt;code&gt;/proc/loadavg&lt;/code&gt;; the load there is the number of active tasks on the system &amp;mdash; processes that are actually running &amp;mdash; averaged over the last minute.</source>
          <target state="translated">Se usa para establecer la carga m&amp;aacute;xima que a&amp;uacute;n responderemos a las consultas de gitweb. Si la carga del servidor supera este valor, gitweb devolver&amp;aacute; el error &quot;503 Servicio no disponible&quot;. La carga del servidor se toma como 0 si gitweb no puede determinar su valor. Actualmente solo funciona en Linux, donde usa &lt;code&gt;/proc/loadavg&lt;/code&gt; ; la carga es el n&amp;uacute;mero de tareas activas en el sistema (procesos que se est&amp;aacute;n ejecutando realmente) promediados durante el &amp;uacute;ltimo minuto.</target>
        </trans-unit>
        <trans-unit id="184dba4369820f49a823e624aa006f74d3fc96ef" translate="yes" xml:space="preserve">
          <source>Used with --remote to specify the path to the &lt;code&gt;git-upload-archive&lt;/code&gt; on the remote side.</source>
          <target state="translated">Se usa con --remote para especificar la ruta al &lt;code&gt;git-upload-archive&lt;/code&gt; en el lado remoto.</target>
        </trans-unit>
        <trans-unit id="a985abb59dca2d23760f5b7ff00e7d00f2d0f353" translate="yes" xml:space="preserve">
          <source>Used with &lt;code&gt;--range-diff&lt;/code&gt;, tweak the heuristic which matches up commits between the previous and current series of patches by adjusting the creation/deletion cost fudge factor. See &lt;a href=&quot;git-range-diff&quot;&gt;git-range-diff[1]&lt;/a&gt;) for details.</source>
          <target state="translated">Usado con &lt;code&gt;--range-diff&lt;/code&gt; , modifica la heur&amp;iacute;stica que coincide con las confirmaciones entre la serie de parches anterior y actual ajustando el factor de modificaci&amp;oacute;n del costo de creaci&amp;oacute;n / eliminaci&amp;oacute;n. Consulte &lt;a href=&quot;git-range-diff&quot;&gt;git-range-diff [1]&lt;/a&gt; ) para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="9777df5e2d0f3ca27a559e53074b9f39896040e8" translate="yes" xml:space="preserve">
          <source>Used with the &lt;code&gt;fetch&lt;/code&gt; command.</source>
          <target state="translated">Usado con el comando &lt;code&gt;fetch&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ea99fa3d480e34606197cb808cc4a18c1d6b1306" translate="yes" xml:space="preserve">
          <source>User Manual</source>
          <target state="translated">Manual del usuario</target>
        </trans-unit>
        <trans-unit id="3d338fa6790366b9708dc60a5019a8d98f73c4b3" translate="yes" xml:space="preserve">
          <source>User configuration and preferences are stored at:</source>
          <target state="translated">La configuración y las preferencias del usuario se almacenan en</target>
        </trans-unit>
        <trans-unit id="ba3e3bfcde6395de2671f768450f02d32f692aba" translate="yes" xml:space="preserve">
          <source>User name (e.g., &lt;code&gt;user&lt;/code&gt; in &lt;code&gt;https://user@example.com/repo.git&lt;/code&gt;). If the config key has a user name it must match the user name in the URL exactly. If the config key does not have a user name, that config key will match a URL with any user name (including none), but at a lower precedence than a config key with a user name.</source>
          <target state="translated">Nombre de usuario (por ejemplo, &lt;code&gt;user&lt;/code&gt; en &lt;code&gt;https://user@example.com/repo.git&lt;/code&gt; ). Si la clave de configuraci&amp;oacute;n tiene un nombre de usuario, debe coincidir exactamente con el nombre de usuario en la URL. Si la clave de configuraci&amp;oacute;n no tiene un nombre de usuario, esa clave de configuraci&amp;oacute;n coincidir&amp;aacute; con una URL con cualquier nombre de usuario (incluido ninguno), pero con una precedencia menor que una clave de configuraci&amp;oacute;n con un nombre de usuario.</target>
        </trans-unit>
        <trans-unit id="9eabd3862d3bc88b6d20553afdc4c28a880bd15a" translate="yes" xml:space="preserve">
          <source>User specified as an option to all p4 commands, with &lt;code&gt;-u &amp;lt;user&amp;gt;&lt;/code&gt;. The environment variable &lt;code&gt;P4USER&lt;/code&gt; can be used instead.</source>
          <target state="translated">Usuario especificado como una opci&amp;oacute;n para todos los comandos p4, con &lt;code&gt;-u &amp;lt;user&amp;gt;&lt;/code&gt; . En su &lt;code&gt;P4USER&lt;/code&gt; se puede utilizar la variable de entorno P4USER .</target>
        </trans-unit>
        <trans-unit id="3129c28f60cb352aa378d9055c2dee4b71cd917d" translate="yes" xml:space="preserve">
          <source>User-specific configuration file. Also called &quot;global&quot; configuration file.</source>
          <target state="translated">Archivo de configuración específico del usuario.También llamado archivo de configuración &quot;global&quot;.</target>
        </trans-unit>
        <trans-unit id="53b3f2b51348a1a5a4076e004425d0d150df3f8e" translate="yes" xml:space="preserve">
          <source>User-specific credentials file.</source>
          <target state="translated">Archivo de credenciales específicas del usuario.</target>
        </trans-unit>
        <trans-unit id="fbb3c5af6a1b800cb6bfa442ae5c6ae5ee1a4454" translate="yes" xml:space="preserve">
          <source>Username for SMTP-AUTH. Default is the value of &lt;code&gt;sendemail.smtpUser&lt;/code&gt;; if a username is not specified (with &lt;code&gt;--smtp-user&lt;/code&gt; or &lt;code&gt;sendemail.smtpUser&lt;/code&gt;), then authentication is not attempted.</source>
          <target state="translated">Nombre de usuario para SMTP-AUTH. El valor predeterminado es &lt;code&gt;sendemail.smtpUser&lt;/code&gt; ; si no se especifica un nombre de usuario (con &lt;code&gt;--smtp-user&lt;/code&gt; o &lt;code&gt;sendemail.smtpUser&lt;/code&gt; ), no se intenta la autenticaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="dd5ba62269befa999225c8d360ebd4fd64f50001" translate="yes" xml:space="preserve">
          <source>Users may select an automated merge strategy from among the following using either -s/--strategy option or configuring notes.mergeStrategy accordingly:</source>
          <target state="translated">Los usuarios pueden seleccionar una estrategia de fusión automatizada de entre las siguientes utilizando la opción -s/-estrategia o configurando notes.mergeStrategy en consecuencia:</target>
        </trans-unit>
        <trans-unit id="312954bd3f459a8154fbfda7b5edb71c57c929c2" translate="yes" xml:space="preserve">
          <source>Users migrating from CVS may also want to read &lt;a href=&quot;gitcvs-migration&quot;&gt;gitcvs-migration[7]&lt;/a&gt;.</source>
          <target state="translated">Los usuarios que migran desde CVS tambi&amp;eacute;n pueden querer leer &lt;a href=&quot;gitcvs-migration&quot;&gt;gitcvs-migration [7]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="bdfc1b01541d0790675419ccbb86b2582c7e882c" translate="yes" xml:space="preserve">
          <source>Users often try to use the assume-unchanged and skip-worktree bits to tell Git to ignore changes to files that are tracked. This does not work as expected, since Git may still check working tree files against the index when performing certain operations. In general, Git does not provide a way to ignore changes to tracked files, so alternate solutions are recommended.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2fd200f233551c846ddc52433b7473972ba45cd" translate="yes" xml:space="preserve">
          <source>Using &amp;ldquo;assume unchanged&amp;rdquo; bit</source>
          <target state="translated">Usando el bit &quot;asumir sin cambios&quot;</target>
        </trans-unit>
        <trans-unit id="db59534f65c86c428a7a540c110ff1130d39acfc" translate="yes" xml:space="preserve">
          <source>Using &amp;ldquo;git add -A&amp;rdquo;</source>
          <target state="translated">Usando &quot;git add -A&quot;</target>
        </trans-unit>
        <trans-unit id="3f756864c1cac8254338a14f16b7888b4cd11774" translate="yes" xml:space="preserve">
          <source>Using &amp;ldquo;git commit -a&amp;rdquo;</source>
          <target state="translated">Usando &quot;git commit -a&quot;</target>
        </trans-unit>
        <trans-unit id="1ad6e2bdca2ef33d6f60d1165c40af77488df73e" translate="yes" xml:space="preserve">
          <source>Using --cacheinfo or --info-only</source>
          <target state="translated">Usando --cacheinfo o --info-solamente</target>
        </trans-unit>
        <trans-unit id="63a49bc3316ec7fe7ab1c50a106ab3c187422a12" translate="yes" xml:space="preserve">
          <source>Using --index-info</source>
          <target state="translated">Usando --index-info</target>
        </trans-unit>
        <trans-unit id="9465002aca9e596e405478c595d6ec82ecf19f4d" translate="yes" xml:space="preserve">
          <source>Using --recurse-submodules can only fetch new commits in already checked out submodules right now. When e.g. upstream added a new submodule in the just fetched commits of the superproject the submodule itself cannot be fetched, making it impossible to check out that submodule later without having to do a fetch again. This is expected to be fixed in a future Git version.</source>
          <target state="translated">El uso de --recurse-submódulos sólo puede traer nuevas confirmaciones en submódulos ya comprobados en este momento.Por ejemplo,cuando se añade un nuevo submódulo en las confirmaciones recién obtenidas del superproyecto,el submódulo en sí no puede obtenerse,lo que hace imposible obtener ese submódulo más tarde sin tener que volver a obtenerlo.Se espera que esto se arregle en una futura versión de Git.</target>
        </trans-unit>
        <trans-unit id="9ba2b3bf5dd0ae3395bffc9a6bf30c85dfb19a1b" translate="yes" xml:space="preserve">
          <source>Using --recurse-submodules will update the content of all active submodules according to the commit recorded in the superproject by calling read-tree recursively, also setting the submodules' HEAD to be detached at that commit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b6c4766d3d128d670a5d5adf42fc526da676a66" translate="yes" xml:space="preserve">
          <source>Using --recurse-submodules will update the content of all initialized submodules according to the commit recorded in the superproject by calling read-tree recursively, also setting the submodules HEAD to be detached at that commit.</source>
          <target state="translated">El uso de --recurse-submodules actualizará el contenido de todos los submódulos inicializados de acuerdo con la confirmación registrada en el superproyecto,llamando recursivamente a read-tree,estableciendo también que los submódulos HEAD se separen en esa confirmación.</target>
        </trans-unit>
        <trans-unit id="8315f077dd8f5ad49468aff013d2df68acafcb5e" translate="yes" xml:space="preserve">
          <source>Using --refresh</source>
          <target state="translated">Usando --refresco</target>
        </trans-unit>
        <trans-unit id="0565ce691b52b5953c2fb97dfb806a2f764f48e2" translate="yes" xml:space="preserve">
          <source>Using --temp or --stage=all</source>
          <target state="translated">Usando --temp o --stage=all</target>
        </trans-unit>
        <trans-unit id="509888a40362653e71adbbdc6d4e59bc0d3d4ce4" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;--index-filter&lt;/code&gt; with &lt;code&gt;git rm&lt;/code&gt; yields a significantly faster version. Like with using &lt;code&gt;rm filename&lt;/code&gt;, &lt;code&gt;git rm --cached filename&lt;/code&gt; will fail if the file is absent from the tree of a commit. If you want to &quot;completely forget&quot; a file, it does not matter when it entered history, so we also add &lt;code&gt;--ignore-unmatch&lt;/code&gt;:</source>
          <target state="translated">El uso de &lt;code&gt;--index-filter&lt;/code&gt; con &lt;code&gt;git rm&lt;/code&gt; produce una versi&amp;oacute;n significativamente m&amp;aacute;s r&amp;aacute;pida. Al igual que con el uso de &lt;code&gt;rm filename&lt;/code&gt; , &lt;code&gt;git rm --cached filename&lt;/code&gt; fallar&amp;aacute; si el archivo no est&amp;aacute; en el &amp;aacute;rbol de una confirmaci&amp;oacute;n. Si desea &quot;olvidar por completo&quot; un archivo, no importa cu&amp;aacute;ndo ingres&amp;oacute; al historial, por lo que tambi&amp;eacute;n agregamos &lt;code&gt;--ignore-unmatch&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="802dbfe4495f98c59f087035f936edebe365e8d7" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;--recurse-submodules&lt;/code&gt; will update the content of all active submodules according to the commit recorded in the superproject. If local modifications in a submodule would be overwritten the checkout will fail unless &lt;code&gt;-f&lt;/code&gt; is used. If nothing (or &lt;code&gt;--no-recurse-submodules&lt;/code&gt;) is used, submodules working trees will not be updated. Just like &lt;a href=&quot;git-submodule&quot;&gt;git-submodule[1]&lt;/a&gt;, this will detach &lt;code&gt;HEAD&lt;/code&gt; of the submodule.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf5da0d2a32c5b7048069200ef431cff7653b1d4" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;--recurse-submodules&lt;/code&gt; will update the content of all active submodules according to the commit recorded in the superproject. If nothing (or &lt;code&gt;--no-recurse-submodules&lt;/code&gt;) is used, submodules working trees will not be updated. Just like &lt;a href=&quot;git-submodule&quot;&gt;git-submodule[1]&lt;/a&gt;, this will detach &lt;code&gt;HEAD&lt;/code&gt; of the submodules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47e7ecf39552b28db7a0c771cb5239db7d4a81af" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;--recurse-submodules&lt;/code&gt; will update the content of all initialized submodules according to the commit recorded in the superproject. If local modifications in a submodule would be overwritten the checkout will fail unless &lt;code&gt;-f&lt;/code&gt; is used. If nothing (or &lt;code&gt;--no-recurse-submodules&lt;/code&gt;) is used, the work trees of submodules will not be updated. Just like &lt;a href=&quot;git-submodule&quot;&gt;git-submodule[1]&lt;/a&gt;, this will detach &lt;code&gt;HEAD&lt;/code&gt; of the submodule.</source>
          <target state="translated">El uso de &lt;code&gt;--recurse-submodules&lt;/code&gt; actualizar&amp;aacute; el contenido de todos los subm&amp;oacute;dulos inicializados de acuerdo con la confirmaci&amp;oacute;n registrada en el superproyecto. Si se sobrescribieran las modificaciones locales en un subm&amp;oacute;dulo, la comprobaci&amp;oacute;n fallar&amp;aacute; a menos que se use &lt;code&gt;-f&lt;/code&gt; . Si no se utiliza nada (o &lt;code&gt;--no-recurse-submodules&lt;/code&gt; ), los &amp;aacute;rboles de trabajo de los subm&amp;oacute;dulos no se actualizar&amp;aacute;n. Al igual que &lt;a href=&quot;git-submodule&quot;&gt;git-submodule [1]&lt;/a&gt; , esto separar&amp;aacute; &lt;code&gt;HEAD&lt;/code&gt; del subm&amp;oacute;dulo.</target>
        </trans-unit>
        <trans-unit id="87e05fa35b92ebd2beac592a4000f99e52c8fa99" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;--recurse-submodules&lt;/code&gt; will update the content of all initialized submodules according to the commit recorded in the superproject. If nothing (or &lt;code&gt;--no-recurse-submodules&lt;/code&gt;) is used, the work trees of submodules will not be updated. Just like &lt;a href=&quot;git-submodule&quot;&gt;git-submodule[1]&lt;/a&gt;, this will detach &lt;code&gt;HEAD&lt;/code&gt; of the submodules.</source>
          <target state="translated">El uso de &lt;code&gt;--recurse-submodules&lt;/code&gt; actualizar&amp;aacute; el contenido de todos los subm&amp;oacute;dulos inicializados de acuerdo con la confirmaci&amp;oacute;n registrada en el superproyecto. Si no se utiliza nada (o &lt;code&gt;--no-recurse-submodules&lt;/code&gt; ), los &amp;aacute;rboles de trabajo de los subm&amp;oacute;dulos no se actualizar&amp;aacute;n. Al igual que &lt;a href=&quot;git-submodule&quot;&gt;git-submodule [1]&lt;/a&gt; , esto separar&amp;aacute; &lt;code&gt;HEAD&lt;/code&gt; de los subm&amp;oacute;dulos.</target>
        </trans-unit>
        <trans-unit id="131907fc18369579f75831dbffd3a45262caaa68" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;-a&lt;/code&gt; would conflate &amp;lt;remote&amp;gt; with any local branches you happen to have been prefixed with the same &amp;lt;remote&amp;gt; pattern.</source>
          <target state="translated">El uso de &lt;code&gt;-a&lt;/code&gt; combinar&amp;iacute;a &amp;lt;remote&amp;gt; con cualquier rama local que haya tenido el prefijo con el mismo patr&amp;oacute;n &amp;lt;remote&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="bc196497d8f80228e3ec0969c92ba077224b9158" translate="yes" xml:space="preserve">
          <source>Using &lt;em&gt;git checkout-index&lt;/em&gt; to &quot;export an entire tree&quot;</source>
          <target state="translated">Uso de &lt;em&gt;git checkout-index&lt;/em&gt; para &quot;exportar un &amp;aacute;rbol completo&quot;</target>
        </trans-unit>
        <trans-unit id="bb5a1594f36aa9f526f3a0391e9aecb18bcb1ed6" translate="yes" xml:space="preserve">
          <source>Using Gmail&amp;rsquo;s IMAP interface:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f145740948f023493614f8cb28fc352a33b08d80" translate="yes" xml:space="preserve">
          <source>Using a limit</source>
          <target state="translated">Usando un límite</target>
        </trans-unit>
        <trans-unit id="0d18e7415acaf5bf1693b96116e4340271619597" translate="yes" xml:space="preserve">
          <source>Using another project while maintaining independent history. Submodules allow you to contain the working tree of another project within your own working tree while keeping the history of both projects separate. Also, since submodules are fixed to an arbitrary version, the other project can be independently developed without affecting the superproject, allowing the superproject project to fix itself to new versions only when desired.</source>
          <target state="translated">Usando otro proyecto mientras se mantiene la historia independiente.Los submódulos le permiten contener el árbol de trabajo de otro proyecto dentro de su propio árbol de trabajo mientras mantiene la historia de ambos proyectos por separado.Además,como los submódulos se fijan a una versión arbitraria,el otro proyecto puede desarrollarse independientemente sin afectar al superproyecto,lo que permite que el proyecto del superproyecto se fije en nuevas versiones sólo cuando se desee.</target>
        </trans-unit>
        <trans-unit id="03266ad998c58f3651e774794904a59499884e04" translate="yes" xml:space="preserve">
          <source>Using complex scripts</source>
          <target state="translated">Usando guiones complejos</target>
        </trans-unit>
        <trans-unit id="9a4e17fa716627d801ba04248e7c13675c63f6bf" translate="yes" xml:space="preserve">
          <source>Using direct mode with SSL:</source>
          <target state="translated">Usando el modo directo con SSL:</target>
        </trans-unit>
        <trans-unit id="80be60b71aa62e009a5472e7b71ecca69fb605f2" translate="yes" xml:space="preserve">
          <source>Using direct mode:</source>
          <target state="translated">Usando el modo directo:</target>
        </trans-unit>
        <trans-unit id="1c1bc19943239ea53498134ee5024657c6f7482f" translate="yes" xml:space="preserve">
          <source>Using git for collaboration</source>
          <target state="translated">Usar el git para la colaboración</target>
        </trans-unit>
        <trans-unit id="e742dd237e897f0c09d1168ed38eeca1316d409b" translate="yes" xml:space="preserve">
          <source>Using interactive rebases</source>
          <target state="translated">Utilizando las bases interactivas</target>
        </trans-unit>
        <trans-unit id="16c9cb76d4ea0981714eee54828fc3305174e2d5" translate="yes" xml:space="preserve">
          <source>Using macro attributes</source>
          <target state="translated">Usando atributos de macro</target>
        </trans-unit>
        <trans-unit id="0bcad514939a1a512d30defc1dd83a6988408bd1" translate="yes" xml:space="preserve">
          <source>Using more options generally further limits the output (e.g. &lt;code&gt;--since=&amp;lt;date1&amp;gt;&lt;/code&gt; limits to commits newer than &lt;code&gt;&amp;lt;date1&amp;gt;&lt;/code&gt;, and using it with &lt;code&gt;--grep=&amp;lt;pattern&amp;gt;&lt;/code&gt; further limits to commits whose log message has a line that matches &lt;code&gt;&amp;lt;pattern&amp;gt;&lt;/code&gt;), unless otherwise noted.</source>
          <target state="translated">El uso de m&amp;aacute;s opciones generalmente limita a&amp;uacute;n m&amp;aacute;s la salida (p &lt;code&gt;--since=&amp;lt;date1&amp;gt;&lt;/code&gt; Ej., --Since = &amp;lt;date1&amp;gt; limita a las confirmaciones m&amp;aacute;s recientes que &lt;code&gt;&amp;lt;date1&amp;gt;&lt;/code&gt; , y us&amp;aacute;ndolo con &lt;code&gt;--grep=&amp;lt;pattern&amp;gt;&lt;/code&gt; l&amp;iacute;mites adicionales para las confirmaciones cuyo mensaje de registro tiene una l&amp;iacute;nea que coincide con &lt;code&gt;&amp;lt;pattern&amp;gt;&lt;/code&gt; ), a menos que se indique lo contrario.</target>
        </trans-unit>
        <trans-unit id="aab9e25047cbd960c71a3d6743c695a0fbcee99d" translate="yes" xml:space="preserve">
          <source>Using refspecs explicitly:</source>
          <target state="translated">Usando refspecs explícitamente:</target>
        </trans-unit>
        <trans-unit id="e240eb205361a2a50754a2cbbad5230917e3c8f6" translate="yes" xml:space="preserve">
          <source>Using test suites and git bisect together</source>
          <target state="translated">Usando suites de pruebas y git bisect juntos</target>
        </trans-unit>
        <trans-unit id="8fdfb0e1e33426ffa586ab6e967bc34118a45d25" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;--submodule=log&lt;/code&gt; option with &lt;a href=&quot;git-diff&quot;&gt;git-diff[1]&lt;/a&gt; will provide that information too.</source>
          <target state="translated">El uso de la opci&amp;oacute;n &lt;code&gt;--submodule=log&lt;/code&gt; con &lt;a href=&quot;git-diff&quot;&gt;git-diff [1]&lt;/a&gt; tambi&amp;eacute;n proporcionar&amp;aacute; esa informaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="d42f8d8f39d5c1ce54e65e242137998175012054" translate="yes" xml:space="preserve">
          <source>Using these options, &lt;a href=&quot;git-rev-list&quot;&gt;git-rev-list[1]&lt;/a&gt; will act similar to the more specialized family of commit log tools: &lt;a href=&quot;git-log&quot;&gt;git-log[1]&lt;/a&gt;, &lt;a href=&quot;git-show&quot;&gt;git-show[1]&lt;/a&gt;, and &lt;a href=&quot;git-whatchanged&quot;&gt;git-whatchanged[1]&lt;/a&gt;</source>
          <target state="translated">Usando estas opciones, &lt;a href=&quot;git-rev-list&quot;&gt;git-rev-list [1]&lt;/a&gt; actuar&amp;aacute; de manera similar a la familia m&amp;aacute;s especializada de herramientas de registro de confirmaci&amp;oacute;n: &lt;a href=&quot;git-log&quot;&gt;git-log [1]&lt;/a&gt; , &lt;a href=&quot;git-show&quot;&gt;git-show [1]&lt;/a&gt; y &lt;a href=&quot;git-whatchanged&quot;&gt;git-whatchanged [1]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a34d360db274a11502bc402ef7758f2bc5adf11b" translate="yes" xml:space="preserve">
          <source>Using this helper will store your passwords unencrypted on disk, protected only by filesystem permissions. If this is not an acceptable security tradeoff, try &lt;a href=&quot;git-credential-cache&quot;&gt;git-credential-cache[1]&lt;/a&gt;, or find a helper that integrates with secure storage provided by your operating system.</source>
          <target state="translated">El uso de este ayudante almacenar&amp;aacute; sus contrase&amp;ntilde;as sin cifrar en el disco, protegidas solo por permisos del sistema de archivos. Si esta no es una compensaci&amp;oacute;n de seguridad aceptable, pruebe &lt;a href=&quot;git-credential-cache&quot;&gt;git-credential-cache [1]&lt;/a&gt; o busque un ayudante que se integre con el almacenamiento seguro proporcionado por su sistema operativo.</target>
        </trans-unit>
        <trans-unit id="86d0ca06bdb5a3aacec696a9b10115a302a90ea4" translate="yes" xml:space="preserve">
          <source>Using this hook, it is easy to generate mails describing the updates to the repository. This example script sends one mail message per ref listing the commits pushed to the repository, and logs the push certificates of signed pushes with good signatures to a logger service:</source>
          <target state="translated">Usando este gancho,es fácil generar correos describiendo las actualizaciones del repositorio.Este script de ejemplo envía un mensaje de correo por cada refiriéndose a las confirmaciones empujadas al repositorio,y registra los certificados de empuje de empujes firmados con buenas firmas a un servicio de registro:</target>
        </trans-unit>
        <trans-unit id="7ae98ad0643543d139a0ccded2d96be6c57e816c" translate="yes" xml:space="preserve">
          <source>Using this option for any other purpose (don&amp;rsquo;t ask) is very strongly discouraged.</source>
          <target state="translated">Se desaconseja encarecidamente utilizar esta opci&amp;oacute;n para cualquier otro prop&amp;oacute;sito (no preguntes).</target>
        </trans-unit>
        <trans-unit id="ebe89d9e15d8a582f6b4a48c6c03d60cf9c673f1" translate="yes" xml:space="preserve">
          <source>Using tunnel mode:</source>
          <target state="translated">Usando el modo túnel:</target>
        </trans-unit>
        <trans-unit id="f17a1449e9ed80dcff59f550977b6693d42b10bf" translate="yes" xml:space="preserve">
          <source>Usual 3-way file level merge for text files. Conflicted regions are marked with conflict markers &lt;code&gt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&lt;/code&gt;, &lt;code&gt;=======&lt;/code&gt; and &lt;code&gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&lt;/code&gt;. The version from your branch appears before the &lt;code&gt;=======&lt;/code&gt; marker, and the version from the merged branch appears after the &lt;code&gt;=======&lt;/code&gt; marker.</source>
          <target state="translated">Fusi&amp;oacute;n habitual de niveles de archivo de 3 v&amp;iacute;as para archivos de texto. Las regiones en conflicto se marcan con marcadores de conflicto &lt;code&gt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&lt;/code&gt; , &lt;code&gt;=======&lt;/code&gt; y &lt;code&gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&lt;/code&gt; . La versi&amp;oacute;n de su rama aparece antes del marcador &lt;code&gt;=======&lt;/code&gt; , y la versi&amp;oacute;n de la rama fusionada aparece despu&amp;eacute;s del marcador &lt;code&gt;=======&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6cb51fab051882aaba81e0715d7acfa80e2ce09c" translate="yes" xml:space="preserve">
          <source>Usually &lt;code&gt;git gc&lt;/code&gt; runs very quickly while providing good disk space utilization and performance. This option will cause &lt;code&gt;git gc&lt;/code&gt; to more aggressively optimize the repository at the expense of taking much more time. The effects of this optimization are mostly persistent. See the &quot;AGGRESSIVE&quot; section below for details.</source>
          <target state="translated">Por lo general, &lt;code&gt;git gc&lt;/code&gt; se ejecuta muy r&amp;aacute;pido y proporciona una buena utilizaci&amp;oacute;n y rendimiento del espacio en disco. Esta opci&amp;oacute;n har&amp;aacute; que &lt;code&gt;git gc&lt;/code&gt; optimice m&amp;aacute;s agresivamente el repositorio a expensas de tomar mucho m&amp;aacute;s tiempo. Los efectos de esta optimizaci&amp;oacute;n son en su mayor&amp;iacute;a persistentes. Consulte la secci&amp;oacute;n &quot;AGRESIVO&quot; a continuaci&amp;oacute;n para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="da9e2cbf852524ee1edb371514af799c05f82c93" translate="yes" xml:space="preserve">
          <source>Usually a merge requires the index file as well as the files in the working tree to be up to date with the current head commit, in order not to lose local changes. This flag disables the check with the working tree and is meant to be used when creating a merge of trees that are not directly related to the current working tree status into a temporary index file.</source>
          <target state="translated">Por lo general,una fusión requiere que el archivo de índice,así como los archivos del árbol de trabajo,estén actualizados con el head commit actual,para no perder los cambios locales.Este indicador desactiva la comprobación con el árbol de trabajo y está pensado para ser utilizado cuando se crea una fusión de árboles que no están directamente relacionados con el estado actual del árbol de trabajo en un fichero índice temporal.</target>
        </trans-unit>
        <trans-unit id="27214bb5573e76f1f8a1f21396536681c10927d6" translate="yes" xml:space="preserve">
          <source>Usually a three-way merge by &lt;code&gt;git read-tree&lt;/code&gt; resolves the merge for really trivial cases and leaves other cases unresolved in the index, so that porcelains can implement different merge policies. This flag makes the command resolve a few more cases internally:</source>
          <target state="translated">Por lo general, una combinaci&amp;oacute;n de tres v&amp;iacute;as por &lt;code&gt;git read-tree&lt;/code&gt; resuelve la combinaci&amp;oacute;n para casos realmente triviales y deja otros casos sin resolver en el &amp;iacute;ndice, de modo que las porcelanas pueden implementar diferentes pol&amp;iacute;ticas de combinaci&amp;oacute;n. Esta bandera hace que el comando resuelva algunos casos m&amp;aacute;s internamente:</target>
        </trans-unit>
        <trans-unit id="1a018c180f83561166ef04fc1c1b049dd7bef5e3" translate="yes" xml:space="preserve">
          <source>Usually given &quot;&amp;lt;feature&amp;gt;&quot; is configurable via the &lt;code&gt;gitweb.&amp;lt;feature&amp;gt;&lt;/code&gt; config variable in the per-repository Git configuration file.</source>
          <target state="translated">Por lo general, la &quot;&amp;lt;funci&amp;oacute;n&amp;gt;&quot; se puede configurar mediante la &lt;code&gt;gitweb.&amp;lt;feature&amp;gt;&lt;/code&gt; configuraci&amp;oacute;n gitweb. &amp;lt;Funci&amp;oacute;n&amp;gt; en el archivo de configuraci&amp;oacute;n de Git por repositorio.</target>
        </trans-unit>
        <trans-unit id="06bd62b74600c2b58fc5390378d7102461c2b477" translate="yes" xml:space="preserve">
          <source>Usually it is easier to configure any desired options through your personal &lt;code&gt;.ssh/config&lt;/code&gt; file. Please consult your ssh documentation for further details.</source>
          <target state="translated">Por lo general, es m&amp;aacute;s f&amp;aacute;cil configurar las opciones deseadas a trav&amp;eacute;s de su &lt;code&gt;.ssh/config&lt;/code&gt; personal .ssh / config . Consulte la documentaci&amp;oacute;n de su ssh para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="e92c22e35ceb9b2c8da5295a992718e30d5c9f60" translate="yes" xml:space="preserve">
          <source>Usually recording a commit that has the exact same tree as its sole parent commit is a mistake, and the command prevents you from making such a commit. This option bypasses the safety, and is primarily for use by foreign SCM interface scripts.</source>
          <target state="translated">Por lo general,registrar un compromiso que tiene exactamente el mismo árbol que el de su único padre es un error,y el comando le impide hacer tal compromiso.Esta opción pasa por alto la seguridad,y es principalmente para el uso de scripts de interfaz SCM extranjeros.</target>
        </trans-unit>
        <trans-unit id="8ce3f0d516dc2a9d67b8e4ba143055eaf7bab452" translate="yes" xml:space="preserve">
          <source>Usually the command automatically creates a sequence of commits. This flag applies the changes necessary to cherry-pick each named commit to your working tree and the index, without making any commit. In addition, when this option is used, your index does not have to match the HEAD commit. The cherry-pick is done against the beginning state of your index.</source>
          <target state="translated">Por lo general,el comando crea automáticamente una secuencia de confirmaciones.Esta bandera aplica los cambios necesarios para seleccionar cada confirmación nombrada en su árbol de trabajo y en el índice,sin hacer ninguna confirmación.Además,cuando se usa esta opción,tu índice no tiene que coincidir con la confirmación de HEAD.La selección se realiza contra el estado inicial del índice.</target>
        </trans-unit>
        <trans-unit id="55875ee1e78ad1cfc5a25d1e098bc17781327203" translate="yes" xml:space="preserve">
          <source>Usually the command automatically creates some commits with commit log messages stating which commits were reverted. This flag applies the changes necessary to revert the named commits to your working tree and the index, but does not make the commits. In addition, when this option is used, your index does not have to match the HEAD commit. The revert is done against the beginning state of your index.</source>
          <target state="translated">Normalmente el comando crea automáticamente algunas confirmaciones con mensajes de registro de confirmaciones que indican qué confirmaciones fueron revertidas.Esta bandera aplica los cambios necesarios para revertir las confirmaciones nombradas a su árbol de trabajo y al índice,pero no hace las confirmaciones.Además,cuando se utiliza esta opción,su índice no tiene que coincidir con la confirmación de HEAD.La reversión se hace contra el estado inicial de su índice.</target>
        </trans-unit>
        <trans-unit id="51d5f6e8faedb5ef4d1204f14e2f7ab2d7b77eaf" translate="yes" xml:space="preserve">
          <source>Usually the command stops output upon showing the commit that is the common ancestor of all the branches. This flag tells the command to go &amp;lt;n&amp;gt; more common commits beyond that. When &amp;lt;n&amp;gt; is negative, display only the &amp;lt;reference&amp;gt;s given, without showing the commit ancestry tree.</source>
          <target state="translated">Por lo general, el comando detiene la salida al mostrar la confirmaci&amp;oacute;n que es el ancestro com&amp;uacute;n de todas las ramas. Esta bandera le dice al comando que vaya &amp;lt;n&amp;gt; m&amp;aacute;s confirmaciones comunes m&amp;aacute;s all&amp;aacute; de eso. Cuando &amp;lt;n&amp;gt; es negativo, muestra solo las &amp;lt;reference&amp;gt; dadas, sin mostrar el &amp;aacute;rbol de ascendencia de confirmaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="29097abe7ecd686605680556737a55dc5b7468af" translate="yes" xml:space="preserve">
          <source>Usually the object names are output in SHA-1 form (with possible &lt;code&gt;^&lt;/code&gt; prefix); this option makes them output in a form as close to the original input as possible.</source>
          <target state="translated">Por lo general, los nombres de los objetos se muestran en formato SHA-1 (con el posible prefijo &lt;code&gt;^&lt;/code&gt; ); esta opci&amp;oacute;n hace que se muestren en una forma lo m&amp;aacute;s cercana posible a la entrada original.</target>
        </trans-unit>
        <trans-unit id="576f849692364345fa924f476c3413707294c315" translate="yes" xml:space="preserve">
          <source>Usually the output is made one line per flag and parameter. This option makes output a single line, properly quoted for consumption by shell. Useful when you expect your parameter to contain whitespaces and newlines (e.g. when using pickaxe &lt;code&gt;-S&lt;/code&gt; with &lt;code&gt;git diff-*&lt;/code&gt;). In contrast to the &lt;code&gt;--sq-quote&lt;/code&gt; option, the command input is still interpreted as usual.</source>
          <target state="translated">Por lo general, la salida se realiza en una l&amp;iacute;nea por indicador y par&amp;aacute;metro. Esta opci&amp;oacute;n hace que la salida sea una sola l&amp;iacute;nea, debidamente cotizada para consumo por shell. &amp;Uacute;til cuando espera que su par&amp;aacute;metro contenga espacios en blanco y l&amp;iacute;neas nuevas (por ejemplo, cuando usa pickaxe &lt;code&gt;-S&lt;/code&gt; con &lt;code&gt;git diff-*&lt;/code&gt; ). A diferencia de la opci&amp;oacute;n &lt;code&gt;--sq-quote&lt;/code&gt; , la entrada del comando todav&amp;iacute;a se interpreta como de costumbre.</target>
        </trans-unit>
        <trans-unit id="52303fe63fddea8a07d49fe1df917ff950ba6541" translate="yes" xml:space="preserve">
          <source>Usually the program removes email cruft from the Subject: header line to extract the title line for the commit log message. This option prevents this munging, and is most useful when used to read back &lt;code&gt;git format-patch -k&lt;/code&gt; output.</source>
          <target state="translated">Por lo general, el programa elimina el correo electr&amp;oacute;nico de la l&amp;iacute;nea de encabezado Asunto: para extraer la l&amp;iacute;nea de t&amp;iacute;tulo del mensaje de registro de confirmaci&amp;oacute;n. Esta opci&amp;oacute;n evita este error y es m&amp;aacute;s &amp;uacute;til cuando se usa para volver a leer la salida de &lt;code&gt;git format-patch -k&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="12904fba6e8c31d350b5463557502fba670802b3" translate="yes" xml:space="preserve">
          <source>Usually you cannot cherry-pick a merge because you do not know which side of the merge should be considered the mainline. This option specifies the parent number (starting from 1) of the mainline and allows cherry-pick to replay the change relative to the specified parent.</source>
          <target state="translated">Normalmente no se puede elegir una fusión porque no se sabe qué lado de la fusión debe ser considerado la línea principal.Esta opción especifica el número de padre (a partir de 1)de la línea principal y permite que cherry-pick reproduzca el cambio en relación con el padre especificado.</target>
        </trans-unit>
        <trans-unit id="8ec09d5ac366ce3cd2a5e3c6c67d0b4fe311e4bf" translate="yes" xml:space="preserve">
          <source>Usually you cannot revert a merge because you do not know which side of the merge should be considered the mainline. This option specifies the parent number (starting from 1) of the mainline and allows revert to reverse the change relative to the specified parent.</source>
          <target state="translated">Normalmente no se puede revertir una fusión porque no se sabe qué lado de la fusión debe ser considerado la línea principal.Esta opción especifica el número de padre (empezando por 1)de la línea principal y permite revertir el cambio en relación con el padre especificado.</target>
        </trans-unit>
        <trans-unit id="6969d1a350dfc3fafb277e2e6995e5ac7a289ac5" translate="yes" xml:space="preserve">
          <source>Usually you should not need to change (adjust) any of configuration variables described below; they should be automatically set by gitweb to correct value.</source>
          <target state="translated">Normalmente no es necesario cambiar (ajustar)ninguna de las variables de configuración descritas a continuación;deben ser ajustadas automáticamente por gitweb para corregir el valor.</target>
        </trans-unit>
        <trans-unit id="b172c85defacdb686b541793ef9e8aeee0cdf60e" translate="yes" xml:space="preserve">
          <source>Usually you would want to use &lt;code&gt;git fetch&lt;/code&gt;, which is a higher level wrapper of this command, instead.</source>
          <target state="translated">Por lo general, querr&amp;aacute; usar &lt;code&gt;git fetch&lt;/code&gt; , que es un contenedor de nivel superior de este comando.</target>
        </trans-unit>
        <trans-unit id="bec645de31c299cb10f93b6253e1e1669a5f0a31" translate="yes" xml:space="preserve">
          <source>Usually you would want to use &lt;code&gt;git push&lt;/code&gt;, which is a higher-level wrapper of this command, instead. See &lt;a href=&quot;git-push&quot;&gt;git-push[1]&lt;/a&gt;.</source>
          <target state="translated">Por lo general, querr&amp;aacute; usar &lt;code&gt;git push&lt;/code&gt; , que es un contenedor de nivel superior de este comando. Consulte &lt;a href=&quot;git-push&quot;&gt;git-push [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5982263578e4f00875c00a40da810fe92911cebc" translate="yes" xml:space="preserve">
          <source>Usually, &quot;git push&quot; refuses to update a remote ref that is not an ancestor of the local ref used to overwrite it.</source>
          <target state="translated">Normalmente,&quot;git push&quot; se niega a actualizar un ref remoto que no es un ancestro del ref local utilizado para sobrescribirlo.</target>
        </trans-unit>
        <trans-unit id="f8497b6ab754b20f8d36f9efb8dfea581706bc5d" translate="yes" xml:space="preserve">
          <source>Usually, dangling blobs and trees aren&amp;rsquo;t very interesting. They&amp;rsquo;re almost always the result of either being a half-way mergebase (the blob will often even have the conflict markers from a merge in it, if you have had conflicting merges that you fixed up by hand), or simply because you interrupted a &lt;code&gt;git fetch&lt;/code&gt; with ^C or something like that, leaving &lt;code&gt;some&lt;/code&gt; of the new objects in the object database, but just dangling and useless.</source>
          <target state="translated">Por lo general, las manchas y los &amp;aacute;rboles colgantes no son muy interesantes. Casi siempre son el resultado de ser una base de fusi&amp;oacute;n a mitad de camino (el blob a menudo incluso tendr&amp;aacute; los marcadores de conflicto de una fusi&amp;oacute;n, si ha tenido fusiones conflictivas que arregl&amp;oacute; a mano), o simplemente porque interrumpi&amp;oacute; un &lt;code&gt;git fetch&lt;/code&gt; con ^ C o algo as&amp;iacute;, dejando &lt;code&gt;some&lt;/code&gt; de los nuevos objetos en la base de datos de objetos, pero colgando e in&amp;uacute;tiles.</target>
        </trans-unit>
        <trans-unit id="ebecb811fcb50ea2c9e80ad196b73df5b02ee5fc" translate="yes" xml:space="preserve">
          <source>Usually, the command refuses to update a remote ref that is not an ancestor of the local ref used to overwrite it. Also, when &lt;code&gt;--force-with-lease&lt;/code&gt; option is used, the command refuses to update a remote ref whose current value does not match what is expected.</source>
          <target state="translated">Por lo general, el comando se niega a actualizar una referencia remota que no es un antepasado de la referencia local utilizada para sobrescribirla. Adem&amp;aacute;s, cuando se usa la opci&amp;oacute;n &lt;code&gt;--force-with-lease&lt;/code&gt; , el comando se niega a actualizar una referencia remota cuyo valor actual no coincide con el esperado.</target>
        </trans-unit>
        <trans-unit id="1039e5d0aca0474d85bb0cc56a14c21769cd56ed" translate="yes" xml:space="preserve">
          <source>Usually, the command refuses to update a remote ref that is not an ancestor of the local ref used to overwrite it. This flag disables the check. What this means is that the remote repository can lose commits; use it with care.</source>
          <target state="translated">Por lo general,el comando se niega a actualizar un ref remoto que no es un ancestro del ref local utilizado para sobrescribirlo.Esta bandera desactiva la comprobación.Lo que significa que el repositorio remoto puede perder confirmaciones;úsalo con cuidado.</target>
        </trans-unit>
        <trans-unit id="b573cab97a4c7ff4e65c78f089627a289eeb14b6" translate="yes" xml:space="preserve">
          <source>Valid &lt;code&gt;&amp;lt;type&amp;gt;&lt;/code&gt;'s include:</source>
          <target state="translated">Los &lt;code&gt;&amp;lt;type&amp;gt;&lt;/code&gt; v&amp;aacute;lidos incluyen:</target>
        </trans-unit>
        <trans-unit id="2f441e23dc9e42a84676feea9743dbd62f2c9b12" translate="yes" xml:space="preserve">
          <source>Valid object types are:</source>
          <target state="translated">Los tipos de objetos válidos son:</target>
        </trans-unit>
        <trans-unit id="9b5bd1c32c0119d43f13ecb3f634510bb032afd7" translate="yes" xml:space="preserve">
          <source>Validate packed Git archive files</source>
          <target state="translated">Validar los archivos empaquetados de Git</target>
        </trans-unit>
        <trans-unit id="c95efe4a20b3c90ba09bca423cb347dacda4f997" translate="yes" xml:space="preserve">
          <source>Validates the GPG signature created by &lt;code&gt;git commit -S&lt;/code&gt;.</source>
          <target state="translated">Valida la firma GPG creada por &lt;code&gt;git commit -S&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ee833db09826b15f6656c228fc09101a4d262c96" translate="yes" xml:space="preserve">
          <source>Validates the gpg signature created by &lt;code&gt;git tag&lt;/code&gt;.</source>
          <target state="translated">Valida la firma gpg creada por la &lt;code&gt;git tag&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b1564f6b1512cbfa3cfcebc9a5badb6b239954f1" translate="yes" xml:space="preserve">
          <source>Values</source>
          <target state="translated">Values</target>
        </trans-unit>
        <trans-unit id="38ecbfb58a1b4075db82e349628396bb680485d8" translate="yes" xml:space="preserve">
          <source>Values for other tools can be used if there is a corresponding &lt;code&gt;man.&amp;lt;tool&amp;gt;.cmd&lt;/code&gt; configuration entry (see below).</source>
          <target state="translated">Los valores para otras herramientas se pueden usar si hay una entrada de configuraci&amp;oacute;n &lt;code&gt;man.&amp;lt;tool&amp;gt;.cmd&lt;/code&gt; correspondiente (ver m&amp;aacute;s abajo).</target>
        </trans-unit>
        <trans-unit id="4590af9796b7774b94529a47844bbbd8cd70381f" translate="yes" xml:space="preserve">
          <source>Values obtained in later configuration files override values obtained earlier in the above sequence.</source>
          <target state="translated">Los valores obtenidos en archivos de configuración posteriores anulan los valores obtenidos anteriormente en la secuencia anterior.</target>
        </trans-unit>
        <trans-unit id="42a2c91c112ab20fb86d229e79049c16aac8f47b" translate="yes" xml:space="preserve">
          <source>Values of many variables are treated as a simple string, but there are variables that take values of specific types and there are rules as to how to spell them.</source>
          <target state="translated">Los valores de muchas variables se tratan como una simple cadena,pero hay variables que toman valores de tipos específicos y hay reglas sobre cómo deletrearlos.</target>
        </trans-unit>
        <trans-unit id="af6a117cf9cae5d8127a5c83e908e26e4094605c" translate="yes" xml:space="preserve">
          <source>Variable substitution</source>
          <target state="translated">Sustitución variable</target>
        </trans-unit>
        <trans-unit id="ac018db1f7b00972061adff843d37497d8ee153c" translate="yes" xml:space="preserve">
          <source>Variables</source>
          <target state="translated">Variables</target>
        </trans-unit>
        <trans-unit id="36ae09eeb0daa8ef3fa73e86b507f064c6f1150e" translate="yes" xml:space="preserve">
          <source>Various Git commands use the following environment variables:</source>
          <target state="translated">Varios comandos de Git utilizan las siguientes variables de entorno:</target>
        </trans-unit>
        <trans-unit id="c808db304a88e67e4d99602bde96a3fd73a86c36" translate="yes" xml:space="preserve">
          <source>Various aspects of gitweb&amp;rsquo;s behavior can be controlled through the configuration file &lt;code&gt;gitweb_config.perl&lt;/code&gt; or &lt;code&gt;/etc/gitweb.conf&lt;/code&gt;. See the &lt;a href=&quot;gitweb.conf&quot;&gt;gitweb.conf[5]&lt;/a&gt; for details.</source>
          <target state="translated">Se pueden controlar varios aspectos del comportamiento de gitweb a trav&amp;eacute;s del archivo de configuraci&amp;oacute;n &lt;code&gt;gitweb_config.perl&lt;/code&gt; o &lt;code&gt;/etc/gitweb.conf&lt;/code&gt; . Consulte &lt;a href=&quot;gitweb.conf&quot;&gt;gitweb.conf [5]&lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="514c3adc237433a43f04caf698ef6f51638f8f03" translate="yes" xml:space="preserve">
          <source>Various commands read from the configuration file and adjust their operation accordingly. See &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt; for a list and more details about the configuration mechanism.</source>
          <target state="translated">Varios comandos leen del archivo de configuraci&amp;oacute;n y ajustan su funcionamiento en consecuencia. Consulte &lt;a href=&quot;git-config&quot;&gt;git-config [1]&lt;/a&gt; para obtener una lista y m&amp;aacute;s detalles sobre el mecanismo de configuraci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="9d741cda072f8e825584f9d44fb913d01a1b3645" translate="yes" xml:space="preserve">
          <source>Various values from structured fields in referenced objects can be used to interpolate into the resulting output, or as sort keys.</source>
          <target state="translated">Varios valores de los campos estructurados de los objetos referenciados pueden utilizarse para interpolar en la salida resultante,o como claves de clasificación.</target>
        </trans-unit>
        <trans-unit id="0e52597805b02b27bbf6fa8afb053d38cd1cf9a2" translate="yes" xml:space="preserve">
          <source>Various ways to check your working tree</source>
          <target state="translated">Varias maneras de comprobar su árbol de trabajo</target>
        </trans-unit>
        <trans-unit id="8a8830ff167eaa3505bc00fdd4111ea514743436" translate="yes" xml:space="preserve">
          <source>Verbose output.</source>
          <target state="translated">Salida de la verbosa.</target>
        </trans-unit>
        <trans-unit id="5e80e8afa8277ee05efe0825f2f72b290ab38b7f" translate="yes" xml:space="preserve">
          <source>Verbose.</source>
          <target state="translated">Verbose.</target>
        </trans-unit>
        <trans-unit id="1eee329978eae57e0140879a7cb5a19a8e448f4c" translate="yes" xml:space="preserve">
          <source>Verbosely display information about the searching strategy being employed to standard error. The tag name will still be printed to standard out.</source>
          <target state="translated">Verbosamente mostrar información sobre la estrategia de búsqueda que se está empleando para el error estándar.El nombre de la etiqueta seguirá siendo impreso para estandarizar.</target>
        </trans-unit>
        <trans-unit id="17eca013b0d71c76732d4067f559197bffc5dc5a" translate="yes" xml:space="preserve">
          <source>Verbosity: let &lt;code&gt;cvsimport&lt;/code&gt; report what it is doing.</source>
          <target state="translated">Verbosidad: deje que &lt;code&gt;cvsimport&lt;/code&gt; informe lo que est&amp;aacute; haciendo.</target>
        </trans-unit>
        <trans-unit id="43241483b8c2e2b351480246076bc9d9d3aeeb38" translate="yes" xml:space="preserve">
          <source>Verifies the connectivity and validity of the objects in the database</source>
          <target state="translated">Verifica la conectividad y la validez de los objetos en la base de datos</target>
        </trans-unit>
        <trans-unit id="083f6e6fa7581860cb22a12637eec790f2c234d9" translate="yes" xml:space="preserve">
          <source>Verifies the connectivity and validity of the objects in the database.</source>
          <target state="translated">Verifica la conectividad y la validez de los objetos de la base de datos.</target>
        </trans-unit>
        <trans-unit id="6f20b572e11a287b2200fc3c18b3124b41ee5e40" translate="yes" xml:space="preserve">
          <source>Verify &amp;lt;ref&amp;gt; against &amp;lt;oldvalue&amp;gt; but do not change it. If &amp;lt;oldvalue&amp;gt; is zero or missing, the ref must not exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="121ce6e2fb35359b4c456b6cab91a3389a1154d2" translate="yes" xml:space="preserve">
          <source>Verify &amp;lt;ref&amp;gt; against &amp;lt;oldvalue&amp;gt; but do not change it. If &amp;lt;oldvalue&amp;gt; zero or missing, the ref must not exist.</source>
          <target state="translated">Verifique &amp;lt;ref&amp;gt; con &amp;lt;oldvalue&amp;gt; pero no lo cambie. Si &amp;lt;oldvalue&amp;gt; es cero o falta, la referencia no debe existir.</target>
        </trans-unit>
        <trans-unit id="f2a6ea4dcf4e13700439c2c62eb9c887c3645654" translate="yes" xml:space="preserve">
          <source>Verify that everything reachable from target is fetched. Used after an earlier fetch is interrupted.</source>
          <target state="translated">Verifica que todo lo que se pueda alcanzar del objetivo sea recuperado.Se usa después de que se interrumpa una búsqueda anterior.</target>
        </trans-unit>
        <trans-unit id="dc19dfe6277cd8889c0ce32fc30714a767c456fd" translate="yes" xml:space="preserve">
          <source>Verify that exactly one parameter is provided, and that it can be turned into a raw 20-byte SHA-1 that can be used to access the object database. If so, emit it to the standard output; otherwise, error out.</source>
          <target state="translated">Verifique que se proporcione exactamente un parámetro,y que pueda convertirse en un SHA-1 de 20 bytes en bruto que pueda utilizarse para acceder a la base de datos de objetos.Si es así,emítalo a la salida estándar;de lo contrario,salga del error.</target>
        </trans-unit>
        <trans-unit id="e921c65f691e2b371e3e29dc398bb292612d2860" translate="yes" xml:space="preserve">
          <source>Verify that the tip commit of the side branch being merged is signed with a valid key, i.e. a key that has a valid uid: in the default trust model, this means the signing key has been signed by a trusted key. If the tip commit of the side branch is not signed with a valid key, the merge is aborted.</source>
          <target state="translated">Verifique que el tip commit de la rama lateral que se está fusionando esté firmado con una clave válida,es decir,una clave que tenga un uid válido:en el modelo de confianza por defecto,esto significa que la clave de firma ha sido firmada por una clave de confianza.Si el tip commit de la rama lateral no está firmado con una clave válida,la fusión se aborta.</target>
        </trans-unit>
        <trans-unit id="baf3600caf9cbc675ef33fe6c51f69bd006b47ea" translate="yes" xml:space="preserve">
          <source>Verify the GPG signature of the given tag names.</source>
          <target state="translated">Verifica la firma GPG de los nombres de las etiquetas dadas.</target>
        </trans-unit>
        <trans-unit id="2977304de3538ddff5d274481548280fa86926b6" translate="yes" xml:space="preserve">
          <source>Verify the MIDX file for the packfiles in the current .git folder.</source>
          <target state="translated">Verifica el archivo MIDX para los archivos de paquetes en la actual carpeta .git.</target>
        </trans-unit>
        <trans-unit id="593811a1bcc6cbc445bcfa7fdf52e4a760c41784" translate="yes" xml:space="preserve">
          <source>Verify the contents of the MIDX file.</source>
          <target state="translated">Verifica el contenido del archivo MIDX.</target>
        </trans-unit>
        <trans-unit id="63de76d12bfde7fe2c14402fe2f03160cc3a7318" translate="yes" xml:space="preserve">
          <source>Version 1 porcelain format is similar to the short format, but is guaranteed not to change in a backwards-incompatible way between Git versions or based on user configuration. This makes it ideal for parsing by scripts. The description of the short format above also describes the porcelain format, with a few exceptions:</source>
          <target state="translated">El formato de porcelana de la versión 1 es similar al formato corto,pero se garantiza que no cambiará de forma incompatible con las versiones de Git o en función de la configuración del usuario.Esto lo hace ideal para el análisis sintáctico por medio de guiones.La descripción del formato corto anterior también describe el formato de porcelana,con algunas excepciones:</target>
        </trans-unit>
        <trans-unit id="1bb30898712789d3819631e4bb7ad8cf32d20671" translate="yes" xml:space="preserve">
          <source>Version 1 takes two arguments, a version (1) and the time in elapsed nanoseconds since midnight, January 1, 1970.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33e409adcd5a97d5085c0477fcb4b42dc9a034a9" translate="yes" xml:space="preserve">
          <source>Version 2 format adds more detailed information about the state of the worktree and changed items. Version 2 also defines an extensible set of easy to parse optional headers.</source>
          <target state="translated">El formato de la versión 2 añade información más detallada sobre el estado del árbol de trabajo y los elementos cambiados.La versión 2 también define un conjunto extensible de encabezados opcionales fáciles de analizar.</target>
        </trans-unit>
        <trans-unit id="2b8063c91f48f5daba279d42a4965f292b8198dd" translate="yes" xml:space="preserve">
          <source>Version 2 pack-*.idx files support packs larger than 4 gib, and</source>
          <target state="translated">La versión 2 packk-*.idx soporta paquetes de más de 4 gib,y</target>
        </trans-unit>
        <trans-unit id="76b6cb1496a78fff149bd68b719a91ca0d69c9df" translate="yes" xml:space="preserve">
          <source>Version 2 takes two arguments, a version (2) and a token that is used for identifying changes since the token. For watchman this would be a clock id. This version must output to stdout the new token followed by a NUL before the list of files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a28a75eceea6b3fb1730e69daff64901cead811" translate="yes" xml:space="preserve">
          <source>Version 4 performs a simple pathname compression that reduces index size by 30%-50% on large repositories, which results in faster load time. Version 4 is relatively young (first released in 1.8.0 in October 2012). Other Git implementations such as JGit and libgit2 may not support it yet.</source>
          <target state="translated">La versión 4 realiza una simple compresión de ruta que reduce el tamaño del índice en un 30%-50% en grandes depósitos,lo que resulta en un tiempo de carga más rápido.La versión 4 es relativamente joven (publicada por primera vez en 1.8.0 en octubre de 2012).Otras implementaciones de Git,como JGit y libgit2,pueden no soportarlo todavía.</target>
        </trans-unit>
        <trans-unit id="5b61ffa7c699cf77c98fcf76236048d42ca5d233" translate="yes" xml:space="preserve">
          <source>Version &lt;code&gt;0&lt;/code&gt;</source>
          <target state="translated">Versi&amp;oacute;n &lt;code&gt;0&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7fc1164df4f366b4e06ce848f94e3799671648de" translate="yes" xml:space="preserve">
          <source>Version &lt;code&gt;1&lt;/code&gt;</source>
          <target state="translated">Versi&amp;oacute;n &lt;code&gt;1&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="26980b77b1e7ef480646032aebce78732551db11" translate="yes" xml:space="preserve">
          <source>Versions of Git older than 1.7.7 don&amp;rsquo;t know about the &lt;code&gt;tar.gz&lt;/code&gt; format, you&amp;rsquo;ll need to use gzip explicitly:</source>
          <target state="translated">Las versiones de Git anteriores a la 1.7.7 no conocen el formato &lt;code&gt;tar.gz&lt;/code&gt; , deber&amp;aacute; usar gzip expl&amp;iacute;citamente:</target>
        </trans-unit>
        <trans-unit id="48cda44638e8ce2f3c6e764951e4cd137e88bacc" translate="yes" xml:space="preserve">
          <source>Via the alternates mechanism, a &lt;a href=&quot;#def_repository&quot;&gt;repository&lt;/a&gt; can inherit part of its &lt;a href=&quot;#def_object_database&quot;&gt;object database&lt;/a&gt; from another object database, which is called an &quot;alternate&quot;.</source>
          <target state="translated">A trav&amp;eacute;s del mecanismo alternativo, un &lt;a href=&quot;#def_repository&quot;&gt;repositorio&lt;/a&gt; puede heredar parte de su &lt;a href=&quot;#def_object_database&quot;&gt;base&lt;/a&gt; de datos de objetos de otra base de datos de objetos, que se denomina &quot;alternativa&quot;.</target>
        </trans-unit>
        <trans-unit id="d75bfce3768015c62af9c4bd29fd7cad894764e0" translate="yes" xml:space="preserve">
          <source>Viewing everything that was changed in a revision, and step through revisions one at a time, viewing the history of the repository.</source>
          <target state="translated">Viendo todo lo que fue cambiado en una revisión,y paso a paso a través de las revisiones una a una,viendo la historia del repositorio.</target>
        </trans-unit>
        <trans-unit id="8e797001d4524362e7db8f18210266901eb28403" translate="yes" xml:space="preserve">
          <source>Viewing files in GUI tools</source>
          <target state="translated">Visualización de archivos en las herramientas GUI</target>
        </trans-unit>
        <trans-unit id="05c33ea7de1cccd62a72042e46bec3b3d340cf9f" translate="yes" xml:space="preserve">
          <source>Viewing multiple Git repositories with common root.</source>
          <target state="translated">Viendo múltiples repositorios de Git con una raíz común.</target>
        </trans-unit>
        <trans-unit id="1439a80405107c5dd4ca129513bf97eb92ca8c3f" translate="yes" xml:space="preserve">
          <source>Viewing old file versions</source>
          <target state="translated">Ver las versiones antiguas de los archivos</target>
        </trans-unit>
        <trans-unit id="cba1ab24737b9af4081eae74baa579853869959f" translate="yes" xml:space="preserve">
          <source>Viewing project history</source>
          <target state="translated">Ver la historia del proyecto</target>
        </trans-unit>
        <trans-unit id="48e788f7b4905bc5801452134707bb74e1fddd3c" translate="yes" xml:space="preserve">
          <source>Viewing the blame/annotation details of any file (if enabled).</source>
          <target state="translated">Ver los detalles de la culpa/anuncio de cualquier archivo (si está habilitado).</target>
        </trans-unit>
        <trans-unit id="afd57038f9956faea3beadae2f663a8f18e1dd6a" translate="yes" xml:space="preserve">
          <source>Viewing the contents of files in the repository at any revision.</source>
          <target state="translated">Viendo el contenido de los archivos en el repositorio en cualquier revisión.</target>
        </trans-unit>
        <trans-unit id="79e8c237bcc343324671ba4de89f13c4632b7437" translate="yes" xml:space="preserve">
          <source>Viewing the revision log of branches, history of files and directories, see what was changed when, by who.</source>
          <target state="translated">Viendo el registro de revisiones de las ramas,el historial de archivos y directorios,ver lo que se cambió cuando,por quién.</target>
        </trans-unit>
        <trans-unit id="5d3b4279714ad2970a30b9dfdfce1d9cde0d271d" translate="yes" xml:space="preserve">
          <source>Voila.</source>
          <target state="translated">Voila.</target>
        </trans-unit>
        <trans-unit id="f7dda342bfe7129409283096bf9eae6889a3617d" translate="yes" xml:space="preserve">
          <source>Waiting $&amp;lt;int&amp;gt; seconds before reconnecting to SMTP server. Used together with --batch-size option. Defaults to the &lt;code&gt;sendemail.smtpReloginDelay&lt;/code&gt; configuration variable.</source>
          <target state="translated">Esperando $ &amp;lt;int&amp;gt; segundos antes de volver a conectarse al servidor SMTP. Se usa junto con la opci&amp;oacute;n --batch-size. El valor predeterminado es la variable de configuraci&amp;oacute;n &lt;code&gt;sendemail.smtpReloginDelay&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6abfc589b188840a4520edd8282e2221d54aed84" translate="yes" xml:space="preserve">
          <source>Walk history forward instead of backward. Instead of showing the revision in which a line appeared, this shows the last revision in which a line has existed. This requires a range of revision like START..END where the path to blame exists in START. &lt;code&gt;git blame --reverse START&lt;/code&gt; is taken as &lt;code&gt;git blame
--reverse START..HEAD&lt;/code&gt; for convenience.</source>
          <target state="translated">Camine la historia hacia adelante en lugar de hacia atr&amp;aacute;s. En lugar de mostrar la revisi&amp;oacute;n en la que apareci&amp;oacute; una l&amp;iacute;nea, muestra la &amp;uacute;ltima revisi&amp;oacute;n en la que ha existido una l&amp;iacute;nea. Esto requiere un rango de revisi&amp;oacute;n como START..END donde la ruta de la culpa existe en START. &lt;code&gt;git blame --reverse START&lt;/code&gt; se toma como &lt;code&gt;git blame --reverse START..HEAD&lt;/code&gt; por conveniencia.</target>
        </trans-unit>
        <trans-unit id="246770a4db6a59723366cd008c0806351012631a" translate="yes" xml:space="preserve">
          <source>Walk through the patches in the series and warn if we cannot find all of the necessary information to commit a patch. At the time of this writing only missing author information is warned about.</source>
          <target state="translated">Recorre los parches de la serie y avisa si no podemos encontrar toda la información necesaria para cometer un parche.En el momento de escribir esto,sólo se advierte sobre la información faltante del autor.</target>
        </trans-unit>
        <trans-unit id="8741434725596a0a6dcba1ea6ce0540165fbeb38" translate="yes" xml:space="preserve">
          <source>Warn if changes introduce conflict markers or whitespace errors. What are considered whitespace errors is controlled by &lt;code&gt;core.whitespace&lt;/code&gt; configuration. By default, trailing whitespaces (including lines that consist solely of whitespaces) and a space character that is immediately followed by a tab character inside the initial indent of the line are considered whitespace errors. Exits with non-zero status if problems are found. Not compatible with --exit-code.</source>
          <target state="translated">Advertir si los cambios introducen marcadores de conflicto o errores de espacios en blanco. Lo que se considera errores de espacios en blanco se controla mediante la configuraci&amp;oacute;n de &lt;code&gt;core.whitespace&lt;/code&gt; . De forma predeterminada, los espacios en blanco finales (incluidas las l&amp;iacute;neas que constan &amp;uacute;nicamente de espacios en blanco) y un car&amp;aacute;cter de espacio seguido inmediatamente por un car&amp;aacute;cter de tabulaci&amp;oacute;n dentro de la sangr&amp;iacute;a inicial de la l&amp;iacute;nea se consideran errores de espacio en blanco. Sale con un estado distinto de cero si se encuentran problemas. No es compatible con --exit-code.</target>
        </trans-unit>
        <trans-unit id="d0219dea42624b30174e17cfd1bb37d7d1a042a1" translate="yes" xml:space="preserve">
          <source>Warn of patches that contain lines longer than 998 characters unless a suitable transfer encoding (&lt;code&gt;auto&lt;/code&gt;, &lt;code&gt;base64&lt;/code&gt;, or &lt;code&gt;quoted-printable&lt;/code&gt;) is used; this is due to SMTP limits as described by &lt;a href=&quot;http://www.ietf.org/rfc/rfc5322.txt&quot;&gt;http://www.ietf.org/rfc/rfc5322.txt&lt;/a&gt;.</source>
          <target state="translated">Advierte de parches que contienen l&amp;iacute;neas de m&amp;aacute;s de 998 caracteres a menos que se utilice una codificaci&amp;oacute;n de transferencia adecuada ( &lt;code&gt;auto&lt;/code&gt; , &lt;code&gt;base64&lt;/code&gt; o entre &lt;code&gt;quoted-printable&lt;/code&gt; ); esto se debe a los l&amp;iacute;mites de SMTP descritos en &lt;a href=&quot;http://www.ietf.org/rfc/rfc5322.txt&quot;&gt;http://www.ietf.org/rfc/rfc5322.txt&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e9c45563358e813f157ba81b33143542165ba84e" translate="yes" xml:space="preserve">
          <source>Warning</source>
          <target state="translated">Warning</target>
        </trans-unit>
        <trans-unit id="d9a62a2598117c2be58c53a722de6576cd225a89" translate="yes" xml:space="preserve">
          <source>Warnings are printed on the standard error output for any explicitly unsupported constructs, and any other lines that are not recognized by the parser.</source>
          <target state="translated">Las advertencias se imprimen en la salida de error estándar para cualquier construcción explícitamente no apoyada,y cualquier otra línea que no sea reconocida por el analizador.</target>
        </trans-unit>
        <trans-unit id="54490e8680807566a4db5e14166b54af9ee18d68" translate="yes" xml:space="preserve">
          <source>We already saw in &lt;a href=&quot;#understanding-commits&quot;&gt;Understanding History: Commits&lt;/a&gt; that all commits are stored under a 40-digit &quot;object name&quot;. In fact, all the information needed to represent the history of a project is stored in objects with such names. In each case the name is calculated by taking the SHA-1 hash of the contents of the object. The SHA-1 hash is a cryptographic hash function. What that means to us is that it is impossible to find two different objects with the same name. This has a number of advantages; among others:</source>
          <target state="translated">Ya vimos en &lt;a href=&quot;#understanding-commits&quot;&gt;Comprensi&amp;oacute;n del historial:&lt;/a&gt; confirma que todas las confirmaciones se almacenan bajo un &quot;nombre de objeto&quot; de 40 d&amp;iacute;gitos. De hecho, toda la informaci&amp;oacute;n necesaria para representar la historia de un proyecto se almacena en objetos con tales nombres. En cada caso, el nombre se calcula tomando el hash SHA-1 del contenido del objeto. El hash SHA-1 es una funci&amp;oacute;n de hash criptogr&amp;aacute;fica. Lo que eso significa para nosotros es que es imposible encontrar dos objetos diferentes con el mismo nombre. Esto tiene varias ventajas; entre otros:</target>
        </trans-unit>
        <trans-unit id="d6fd523936a98d1231393ad2931c9779a4d79b0e" translate="yes" xml:space="preserve">
          <source>We are looking for a &quot;best&quot; explanation of the new series in terms of the old one. We can represent an &quot;explanation&quot; as an edge in the graph:</source>
          <target state="translated">Buscamos la &quot;mejor&quot; explicación de la nueva serie en términos de la antigua.Podemos representar una &quot;explicación&quot; como un borde en el gráfico:</target>
        </trans-unit>
        <trans-unit id="9b940c15e60e8d5e30f8f0dd6fb317eefa03a3c7" translate="yes" xml:space="preserve">
          <source>We assume that GITWEB_CONFIG has its default Makefile value, namely &lt;code&gt;gitweb_config.perl&lt;/code&gt;. Put the following in &lt;code&gt;gitweb_make_index.perl&lt;/code&gt; file:</source>
          <target state="translated">Suponemos que GITWEB_CONFIG tiene su valor Makefile predeterminado, a saber, &lt;code&gt;gitweb_config.perl&lt;/code&gt; . Coloque lo siguiente en el archivo &lt;code&gt;gitweb_make_index.perl&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="860f449f084465687d5f3065e9dcdf4471fe0c53" translate="yes" xml:space="preserve">
          <source>We assume the following in /etc/services</source>
          <target state="translated">Asumimos lo siguiente en /etc/servicios</target>
        </trans-unit>
        <trans-unit id="e666201c4a3affd420bf339541f1e66f556269f5" translate="yes" xml:space="preserve">
          <source>We assume you have already created a Git repository for your project, possibly created from scratch or from a tarball (see &lt;a href=&quot;gittutorial&quot;&gt;gittutorial[7]&lt;/a&gt;), or imported from an already existing CVS repository (see the next section).</source>
          <target state="translated">Suponemos que ya ha creado un repositorio Git para su proyecto, posiblemente creado desde cero o desde un tarball (consulte &lt;a href=&quot;gittutorial&quot;&gt;gittutorial [7]&lt;/a&gt; ), o importado desde un repositorio CVS ya existente (consulte la siguiente secci&amp;oacute;n).</target>
        </trans-unit>
        <trans-unit id="a35a2d4ac8af99272cba8ca44431c44847ef0735" translate="yes" xml:space="preserve">
          <source>We can also create a tag to refer to a particular commit; after running</source>
          <target state="translated">También podemos crear una etiqueta para referirnos a un commit en particular;después de ejecutar</target>
        </trans-unit>
        <trans-unit id="ec584a188dcd2e25a99263b54f2feb909dc57e99" translate="yes" xml:space="preserve">
          <source>We can ask Git about this particular object with the &lt;code&gt;cat-file&lt;/code&gt; command. Don&amp;rsquo;t copy the 40 hex digits from this example but use those from your own version. Note that you can shorten it to only a few characters to save yourself typing all 40 hex digits:</source>
          <target state="translated">Podemos preguntarle a Git sobre este objeto en particular con el comando &lt;code&gt;cat-file&lt;/code&gt; . No copie los 40 d&amp;iacute;gitos hexadecimales de este ejemplo, utilice los de su propia versi&amp;oacute;n. Tenga en cuenta que puede acortarlo a unos pocos caracteres para no tener que escribir los 40 d&amp;iacute;gitos hexadecimales:</target>
        </trans-unit>
        <trans-unit id="3d0c7ad92eed63e4b86ed7fcdbe0a2af116dc20a" translate="yes" xml:space="preserve">
          <source>We can further investigate the time spent scanning for untracked files.</source>
          <target state="translated">Podemos investigar más a fondo el tiempo empleado en escanear los archivos no rastreados.</target>
        </trans-unit>
        <trans-unit id="14c5f91f2f30d67e424b3d8fa6177783e08a84fd" translate="yes" xml:space="preserve">
          <source>We can get just the branch-head names, and remove &lt;code&gt;master&lt;/code&gt;, with the help of the standard utilities cut and grep:</source>
          <target state="translated">Podemos obtener solo los nombres de las cabezas de las ramas y eliminar el &lt;code&gt;master&lt;/code&gt; , con la ayuda de las utilidades est&amp;aacute;ndar cut y grep:</target>
        </trans-unit>
        <trans-unit id="a00f6027326a1e03d87c7714c37d6396c5fc0f07" translate="yes" xml:space="preserve">
          <source>We can get this using the following command:</source>
          <target state="translated">Podemos conseguir esto usando el siguiente comando:</target>
        </trans-unit>
        <trans-unit id="308213d749ac73498be48acb36aa505b62d477c8" translate="yes" xml:space="preserve">
          <source>We can give this name to &lt;code&gt;git show&lt;/code&gt; to see the details about this commit.</source>
          <target state="translated">Podemos darle este nombre a &lt;code&gt;git show&lt;/code&gt; para ver los detalles sobre esta confirmaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="164a7b582707458e7c29a45bdd3cb932a29b3ca1" translate="yes" xml:space="preserve">
          <source>We can list all the heads in this repository with &lt;a href=&quot;git-show-ref&quot;&gt;git-show-ref[1]&lt;/a&gt;:</source>
          <target state="translated">Podemos listar todos los encabezados en este repositorio con &lt;a href=&quot;git-show-ref&quot;&gt;git-show-ref [1]&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="3342879e047ae36a38db13969064b38d54ccc902" translate="yes" xml:space="preserve">
          <source>We divide Git into high level (&quot;porcelain&quot;) commands and low level (&quot;plumbing&quot;) commands.</source>
          <target state="translated">Dividimos a Git en comandos de alto nivel (&quot;porcelana&quot;)y comandos de bajo nivel (&quot;plomería&quot;).</target>
        </trans-unit>
        <trans-unit id="011f9d254149abd4e25f111f5f8f2bc847e7e4cc" translate="yes" xml:space="preserve">
          <source>We explain how to do this in the following sections.</source>
          <target state="translated">Explicamos cómo hacerlo en las siguientes secciones.</target>
        </trans-unit>
        <trans-unit id="4822ab43c46db1b5802e2f53899245649e4398bd" translate="yes" xml:space="preserve">
          <source>We formulate a set of &lt;code&gt;rules&lt;/code&gt; for quick reference, while the prose tries to motivate each of them. Do not always take them literally; you should value good reasons for your actions higher than manpages such as this one.</source>
          <target state="translated">Formulamos un conjunto de &lt;code&gt;rules&lt;/code&gt; de r&amp;aacute;pida consulta, mientras la prosa intenta motivar a cada una de ellas. No siempre los tome literalmente; debe valorar las buenas razones para sus acciones m&amp;aacute;s que las p&amp;aacute;ginas de manual como esta.</target>
        </trans-unit>
        <trans-unit id="27af85d69b0e1da45afccff7b9c2331995331c55" translate="yes" xml:space="preserve">
          <source>We found that most commits on the graph may give quite a lot of information when they are tested. And the commits that will not on average give a lot of information are the one near the good and bad commits.</source>
          <target state="translated">Encontramos que la mayoría de los compromisos en el gráfico pueden dar bastante información cuando se prueban.Y los compromisos que no dan mucha información son los que están cerca de los buenos y malos compromisos.</target>
        </trans-unit>
        <trans-unit id="319c4fde5f53d3ebfff60d2ca81633ff5c5e7332" translate="yes" xml:space="preserve">
          <source>We have already seen &lt;a href=&quot;#Updating-a-repository-With-git-fetch&quot;&gt;how to keep remote-tracking branches up to date&lt;/a&gt; with &lt;a href=&quot;git-fetch&quot;&gt;git-fetch[1]&lt;/a&gt;, and how to merge two branches. So you can merge in changes from the original repository&amp;rsquo;s master branch with:</source>
          <target state="translated">Ya hemos visto &lt;a href=&quot;#Updating-a-repository-With-git-fetch&quot;&gt;c&amp;oacute;mo mantener actualizadas las ramas de seguimiento remoto&lt;/a&gt; con &lt;a href=&quot;git-fetch&quot;&gt;git-fetch [1]&lt;/a&gt; y c&amp;oacute;mo fusionar dos ramas. Para que pueda fusionar los cambios de la rama maestra del repositorio original con:</target>
        </trans-unit>
        <trans-unit id="9313b2be3fe8f9ef5431fd57e740ed2c389d7c2c" translate="yes" xml:space="preserve">
          <source>We have already seen how branches work previously, with &quot;fun and work&quot; example using two branches. The idea is the same if there are more than two branches. Let&amp;rsquo;s say you started out from &quot;master&quot; head, and have some new code in the &quot;master&quot; branch, and two independent fixes in the &quot;commit-fix&quot; and &quot;diff-fix&quot; branches:</source>
          <target state="translated">Ya hemos visto c&amp;oacute;mo funcionan las ramas anteriormente, con el ejemplo de &quot;diversi&amp;oacute;n y trabajo&quot; usando dos ramas. La idea es la misma si hay m&amp;aacute;s de dos ramas. Digamos que comenz&amp;oacute; desde el encabezado &quot;maestro&quot; y tiene un c&amp;oacute;digo nuevo en la rama &quot;maestra&quot; y dos correcciones independientes en las ramas &quot;commit-fix&quot; y &quot;diff-fix&quot;:</target>
        </trans-unit>
        <trans-unit id="1170354586d8db2806a89632eb01397ff1d5b39a" translate="yes" xml:space="preserve">
          <source>We have seen several ways of naming commits already:</source>
          <target state="translated">Ya hemos visto varias formas de nombrar compromisos:</target>
        </trans-unit>
        <trans-unit id="ea2d131015439270646c4d9deb94b3238eec4d65" translate="yes" xml:space="preserve">
          <source>We have seen that regressions are an important problem, and that &quot;git bisect&quot; has nice features that complement very well practices and other tools, especially test suites, that are generally used to fight regressions. But it might be needed to change some work-flows and (bad) habits to get the most out of it.</source>
          <target state="translated">Hemos visto que las regresiones son un problema importante,y que la &quot;git bisect&quot; tiene buenas características que complementan muy bien las prácticas y otras herramientas,especialmente las suites de pruebas,que se utilizan generalmente para combatir las regresiones.Pero podría ser necesario cambiar algunos flujos de trabajo y (malos)hábitos para sacarle el máximo provecho.</target>
        </trans-unit>
        <trans-unit id="58d71328c844eab6bb246a8885f29a926cbaf29b" translate="yes" xml:space="preserve">
          <source>We have seen that test suites and git bisect are very powerful when used together. It can be even more powerful if you can combine them with other systems.</source>
          <target state="translated">Hemos visto que las suites de prueba y la git bisect son muy poderosas cuando se usan juntas.Puede ser incluso más potente si se pueden combinar con otros sistemas.</target>
        </trans-unit>
        <trans-unit id="0dc1429b571e4014b12f464201faf90142f01343" translate="yes" xml:space="preserve">
          <source>We ignore all SVN properties except svn:executable. Any unhandled properties are logged to $GIT_DIR/svn/&amp;lt;refname&amp;gt;/unhandled.log</source>
          <target state="translated">Ignoramos todas las propiedades de SVN excepto svn: ejecutable. Las propiedades no controladas se registran en $ GIT_DIR / svn / &amp;lt;refname&amp;gt; /unhandled.log</target>
        </trans-unit>
        <trans-unit id="5e0e70c2a550cebe0f64341bc25aba4f82846837" translate="yes" xml:space="preserve">
          <source>We said this tutorial shows what plumbing does to help you cope with the porcelain that isn&amp;rsquo;t flushing, but we so far did not talk about how the merge really works. If you are following this tutorial the first time, I&amp;rsquo;d suggest to skip to &quot;Publishing your work&quot; section and come back here later.</source>
          <target state="translated">Dijimos que este tutorial muestra lo que hace la plomer&amp;iacute;a para ayudarlo a lidiar con la porcelana que no se descarga, pero hasta ahora no hablamos sobre c&amp;oacute;mo funciona realmente la fusi&amp;oacute;n. Si est&amp;aacute; siguiendo este tutorial por primera vez, le sugiero que salte a la secci&amp;oacute;n &quot;Publicar su trabajo&quot; y vuelva aqu&amp;iacute; m&amp;aacute;s tarde.</target>
        </trans-unit>
        <trans-unit id="038e0426e816e440e5c183b0ccfae9faca0c65b5" translate="yes" xml:space="preserve">
          <source>We saw above that &lt;code&gt;origin&lt;/code&gt; is just a shortcut to refer to the repository that you originally cloned from. This information is stored in Git configuration variables, which you can see using &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;:</source>
          <target state="translated">Vimos anteriormente que el &lt;code&gt;origin&lt;/code&gt; es solo un atajo para hacer referencia al repositorio desde el que clon&amp;oacute; originalmente. Esta informaci&amp;oacute;n se almacena en las variables de configuraci&amp;oacute;n de Git, que puede ver usando &lt;a href=&quot;git-config&quot;&gt;git-config [1]&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="789eeb5f51968bf21d9746b92623ca08838d8bcb" translate="yes" xml:space="preserve">
          <source>We saw earlier that &quot;git bisect skip&quot; is now using a PRNG to try to avoid areas in the commit graph where commits are untestable. The problem is that sometimes the first bad commit will be in an untestable area.</source>
          <target state="translated">Vimos antes que &quot;git bisect skip&quot; está usando ahora un PRNG para tratar de evitar áreas en el gráfico de commits en las que los commits no son comprobables.El problema es que a veces la primera confirmación errónea será en un área no comprobable.</target>
        </trans-unit>
        <trans-unit id="e6f53989efc34bb4d6e54dcd09f15943b6a8a36c" translate="yes" xml:space="preserve">
          <source>We saw in &lt;a href=&quot;#conflict-resolution&quot;&gt;Getting conflict-resolution help during a merge&lt;/a&gt; that during a merge the index can store multiple versions of a single file (called &quot;stages&quot;). The third column in the &lt;a href=&quot;git-ls-files&quot;&gt;git-ls-files[1]&lt;/a&gt; output above is the stage number, and will take on values other than 0 for files with merge conflicts.</source>
          <target state="translated">En &lt;a href=&quot;#conflict-resolution&quot;&gt;Obtenci&amp;oacute;n de ayuda para la resoluci&amp;oacute;n de conflictos durante una fusi&amp;oacute;n,&lt;/a&gt; vimos que durante una fusi&amp;oacute;n el &amp;iacute;ndice puede almacenar varias versiones de un solo archivo (llamadas &quot;etapas&quot;). La tercera columna en la salida de &lt;a href=&quot;git-ls-files&quot;&gt;git-ls-files [1]&lt;/a&gt; anterior es el n&amp;uacute;mero de etapa y tomar&amp;aacute; valores distintos de 0 para archivos con conflictos de fusi&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="d5d682276e6a6d081a241de022b4ded4aef9c418" translate="yes" xml:space="preserve">
          <source>We saw in &lt;a href=&quot;#fixing-a-mistake-by-rewriting-history&quot;&gt;Fixing a mistake by rewriting history&lt;/a&gt; that you can replace the most recent commit using</source>
          <target state="translated">Vimos en &lt;a href=&quot;#fixing-a-mistake-by-rewriting-history&quot;&gt;Arreglar un error reescribiendo el historial&lt;/a&gt; que puede reemplazar la confirmaci&amp;oacute;n m&amp;aacute;s reciente usando</target>
        </trans-unit>
        <trans-unit id="aafdc07c8e0d9b297fcdd505608f380ef754ed45" translate="yes" xml:space="preserve">
          <source>We saw in part one of the tutorial that commits have names like this. It turns out that every object in the Git history is stored under a 40-digit hex name. That name is the SHA-1 hash of the object&amp;rsquo;s contents; among other things, this ensures that Git will never store the same data twice (since identical data is given an identical SHA-1 name), and that the contents of a Git object will never change (since that would change the object&amp;rsquo;s name as well). The 7 char hex strings here are simply the abbreviation of such 40 character long strings. Abbreviations can be used everywhere where the 40 character strings can be used, so long as they are unambiguous.</source>
          <target state="translated">Vimos en la primera parte del tutorial que las confirmaciones tienen nombres como este. Resulta que cada objeto en el historial de Git se almacena con un nombre hexadecimal de 40 d&amp;iacute;gitos. Ese nombre es el hash SHA-1 del contenido del objeto; entre otras cosas, esto asegura que Git nunca almacenar&amp;aacute; los mismos datos dos veces (ya que los datos id&amp;eacute;nticos reciben un nombre SHA-1 id&amp;eacute;ntico), y que el contenido de un objeto Git nunca cambiar&amp;aacute; (ya que eso tambi&amp;eacute;n cambiar&amp;iacute;a el nombre del objeto ). Las cadenas hexadecimales de 7 caracteres aqu&amp;iacute; son simplemente la abreviatura de esas cadenas de 40 caracteres de longitud. Las abreviaturas se pueden utilizar en todos los lugares donde se pueden utilizar 40 cadenas de caracteres, siempre que no sean ambiguas.</target>
        </trans-unit>
        <trans-unit id="09c046487d09b436218fe11aa8c1087251442281" translate="yes" xml:space="preserve">
          <source>We separate the porcelain commands into the main commands and some ancillary user utilities.</source>
          <target state="translated">Separamos los comandos de porcelana en los comandos principales y algunas utilidades de usuario auxiliares.</target>
        </trans-unit>
        <trans-unit id="f2e875357a5ce85901234308b841a3138ebd851b" translate="yes" xml:space="preserve">
          <source>We should point out that &quot;habitually&quot; (regularly for no real reason) merging an integration branch into your topics &amp;mdash; and by extension, merging anything upstream into anything downstream on a regular basis &amp;mdash; is frowned upon:</source>
          <target state="translated">Debemos se&amp;ntilde;alar que &quot;habitualmente&quot; (regularmente sin una raz&amp;oacute;n real) fusionar una rama de integraci&amp;oacute;n en sus temas y, por extensi&amp;oacute;n, fusionar cualquier cosa corriente arriba con algo corriente abajo de forma regular, est&amp;aacute; mal visto:</target>
        </trans-unit>
        <trans-unit id="3b0c2056ade966758c96efbd333ad03c787ca3ac" translate="yes" xml:space="preserve">
          <source>We start with one specialized tool that is useful for finding the commit that introduced a bug into a project.</source>
          <target state="translated">Empezamos con una herramienta especializada que es útil para encontrar el commit que introdujo un bug en un proyecto.</target>
        </trans-unit>
        <trans-unit id="3bb7fbe62fd9b3fa1a7f67f6a431251fe7b02079" translate="yes" xml:space="preserve">
          <source>We start with the most important, the &lt;a href=&quot;#def_object_database&quot;&gt;object database&lt;/a&gt; and the &lt;a href=&quot;#def_index&quot;&gt;index&lt;/a&gt;.</source>
          <target state="translated">Comenzamos con lo m&amp;aacute;s importante, la &lt;a href=&quot;#def_object_database&quot;&gt;base de datos de objetos&lt;/a&gt; y el &lt;a href=&quot;#def_index&quot;&gt;&amp;iacute;ndice&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="fa1acdd625946113b786a5983b045431892f2e96" translate="yes" xml:space="preserve">
          <source>We supposed in the previous examples that the &quot;good&quot; commits were ancestors of the &quot;bad&quot; commit. But this is not a requirement of &quot;git bisect&quot;.</source>
          <target state="translated">Supusimos en los ejemplos anteriores que los &quot;buenos&quot; compromisarios eran antepasados de los &quot;malos&quot; compromisarios.Pero este no es un requisito de la &quot;git bisect&quot;.</target>
        </trans-unit>
        <trans-unit id="09e675bfb62532c536d372645ebddf19b07c5684" translate="yes" xml:space="preserve">
          <source>We want to make &lt;code&gt;topic&lt;/code&gt; forked from branch &lt;code&gt;master&lt;/code&gt;; for example, because the functionality on which &lt;code&gt;topic&lt;/code&gt; depends was merged into the more stable &lt;code&gt;master&lt;/code&gt; branch. We want our tree to look like this:</source>
          <target state="translated">Queremos hacer un &lt;code&gt;topic&lt;/code&gt; bifurcado desde el &lt;code&gt;master&lt;/code&gt; rama ; por ejemplo, porque la funcionalidad de la que depende el &lt;code&gt;topic&lt;/code&gt; se fusion&amp;oacute; en la rama &lt;code&gt;master&lt;/code&gt; m&amp;aacute;s estable . Queremos que nuestro &amp;aacute;rbol se vea as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="0fa006b18282abd83f954d3423dfd83f70f68c0d" translate="yes" xml:space="preserve">
          <source>We will introduce some tools that can help you do this, explain how to use them, and then explain some of the problems that can arise because you are rewriting history.</source>
          <target state="translated">Presentaremos algunas herramientas que pueden ayudarle a hacer esto,explicaremos cómo usarlas,y luego explicaremos algunos de los problemas que pueden surgir porque está reescribiendo la historia.</target>
        </trans-unit>
        <trans-unit id="e34d86d215639adac5ecaa74d7f70d803a2ef9de" translate="yes" xml:space="preserve">
          <source>We will sometimes represent Git history using diagrams like the one below. Commits are shown as &quot;o&quot;, and the links between them with lines drawn with - / and \. Time goes left to right:</source>
          <target state="translated">A veces representaremos la historia de Git usando diagramas como el que sigue.Los compromisos se muestran como &quot;o&quot;,y los vínculos entre ellos con líneas dibujadas con-/y \.El tiempo va de izquierda a derecha:</target>
        </trans-unit>
        <trans-unit id="ab9fd84ced67b4e6059fb12091ba4144199c5397" translate="yes" xml:space="preserve">
          <source>We&amp;rsquo;ll assume that the problem is a single missing or corrupted blob, which is sometimes a solvable problem. (Recovering missing trees and especially commits is &lt;strong&gt;much&lt;/strong&gt; harder).</source>
          <target state="translated">Asumiremos que el problema es un solo blob faltante o da&amp;ntilde;ado, que a veces es un problema solucionable. (Recuperar &amp;aacute;rboles perdidos y especialmente confirmaciones es &lt;strong&gt;mucho&lt;/strong&gt; m&amp;aacute;s dif&amp;iacute;cil).</target>
        </trans-unit>
        <trans-unit id="2aa7b1ec194976812ce4b6b3f7e0ba34eba549a8" translate="yes" xml:space="preserve">
          <source>We&amp;rsquo;ll keep this simple and stupid, so we&amp;rsquo;ll start off with populating a few trivial files just to get a feel for it.</source>
          <target state="translated">Mantendremos esto simple y est&amp;uacute;pido, por lo que comenzaremos rellenando algunos archivos triviales solo para sentirlo.</target>
        </trans-unit>
        <trans-unit id="2d4db37414a68811cd95f44af4830929ada62273" translate="yes" xml:space="preserve">
          <source>Webserver configuration</source>
          <target state="translated">Configuración del servidor web</target>
        </trans-unit>
        <trans-unit id="c0f36d74c982d11ffbdfaa17b6ab39308ec52a2f" translate="yes" xml:space="preserve">
          <source>Webserver configuration with multiple projects' root</source>
          <target state="translated">Configuración del servidor web con la raíz de múltiples proyectos</target>
        </trans-unit>
        <trans-unit id="ef6d4f2b2672206d0b50ce512c5b9cc1369fe95f" translate="yes" xml:space="preserve">
          <source>What an alias file in each format looks like can be found in the documentation of the email program of the same name. The differences and limitations from the standard formats are described below:</source>
          <target state="translated">El aspecto de un archivo de alias en cada formato se puede encontrar en la documentación del programa de correo electrónico del mismo nombre.A continuación se describen las diferencias y limitaciones de los formatos estándar:</target>
        </trans-unit>
        <trans-unit id="fa6325f935566c907b8b84855ddf6b390a1827e3" translate="yes" xml:space="preserve">
          <source>What are the 7 digits of hex that Git responded to the commit with?</source>
          <target state="translated">¿Cuáles son los 7 dígitos de hexágono con los que Git respondió al compromiso?</target>
        </trans-unit>
        <trans-unit id="5fb651419665147da76edfca56099f33ccd0e645" translate="yes" xml:space="preserve">
          <source>What does this mean?</source>
          <target state="translated">¿Qué significa esto?</target>
        </trans-unit>
        <trans-unit id="b77fdbd3385bc488b50aa891b5b4c124304a8f69" translate="yes" xml:space="preserve">
          <source>What is interesting too is that end users that are reporting bugs (or QA people that reproduced a bug) have access to the environment where the bug happens. So they can often more easily reproduce a regression. And if they can bisect, then more information will be extracted from the environment where the bug happens, which means that it will be easier to understand and then fix the bug.</source>
          <target state="translated">Lo que también es interesante es que los usuarios finales que están reportando errores (o las personas de control de calidad que reprodujeron un error)tienen acceso al ambiente donde el error ocurre.Así que a menudo pueden reproducir más fácilmente una regresión.Y si pueden hacer una bisección,entonces se extraerá más información del entorno donde ocurre el error,lo que significa que será más fácil de entender y luego arreglar el error.</target>
        </trans-unit>
        <trans-unit id="549056214cd4b23720c4559829b5b36cc5cf6d0c" translate="yes" xml:space="preserve">
          <source>What next?</source>
          <target state="translated">¿Y ahora qué?</target>
        </trans-unit>
        <trans-unit id="fe77441e9cc191fb4a5181d6f98e51e7bf6ce4ab" translate="yes" xml:space="preserve">
          <source>What people don&amp;rsquo;t get is that this is a situation where the &quot;end node principle&quot; applies. When you have limited resources (here: developers) you don&amp;rsquo;t push the bulk of the burden upon them. Instead you push things out to the resource you have a lot of, the end nodes (here: users), so that the situation actually scales.</source>
          <target state="translated">Lo que la gente no entiende es que esta es una situaci&amp;oacute;n en la que se aplica el &quot;principio del nodo final&quot;. Cuando tiene recursos limitados (aqu&amp;iacute;: desarrolladores) no les impone la mayor parte de la carga. En su lugar, empuja las cosas hacia el recurso del que tiene una gran cantidad, los nodos finales (aqu&amp;iacute;: usuarios), para que la situaci&amp;oacute;n realmente se ampl&amp;iacute;e.</target>
        </trans-unit>
        <trans-unit id="e4950cd435094a3f200db11a5c1b540d80d04769" translate="yes" xml:space="preserve">
          <source>What should you do when you tag a wrong commit and you would want to re-tag?</source>
          <target state="translated">¿Qué deberías hacer cuando marcas un compromiso equivocado y quieres volver a marcarlo?</target>
        </trans-unit>
        <trans-unit id="049920ec0574fb80b08ccee259e5814b007cd44c" translate="yes" xml:space="preserve">
          <source>What the -p option produces is slightly different from the traditional diff format:</source>
          <target state="translated">Lo que produce la opción -p es ligeramente diferente del formato tradicional de difusión:</target>
        </trans-unit>
        <trans-unit id="e27b60d4391d6c41de480e30a2d0df50a6723ae8" translate="yes" xml:space="preserve">
          <source>What to do when a push fails</source>
          <target state="translated">Qué hacer cuando un empujón falla</target>
        </trans-unit>
        <trans-unit id="42a1dbf4390cedcf2f183fba444335bae8d5ae11" translate="yes" xml:space="preserve">
          <source>What you chose are then highlighted with &lt;code&gt;*&lt;/code&gt;, like this:</source>
          <target state="translated">Lo que eligi&amp;oacute; se resaltar&amp;aacute; con &lt;code&gt;*&lt;/code&gt; , as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="e11a716b5dc9d27d9966b39b2c63b32b4c67e627" translate="yes" xml:space="preserve">
          <source>When &amp;lt;rev&amp;gt; is not specified, the command annotates the changes starting backwards from the working tree copy. This flag makes the command pretend as if the working tree copy has the contents of the named file (specify &lt;code&gt;-&lt;/code&gt; to make the command read from the standard input).</source>
          <target state="translated">Cuando no se especifica &amp;lt;rev&amp;gt;, el comando anota los cambios comenzando hacia atr&amp;aacute;s desde la copia del &amp;aacute;rbol de trabajo. Esta bandera hace que el comando finja como si la copia del &amp;aacute;rbol de trabajo tuviera el contenido del archivo nombrado (especificar &lt;code&gt;-&lt;/code&gt; para que el comando se lea desde la entrada est&amp;aacute;ndar).</target>
        </trans-unit>
        <trans-unit id="df8212af8d2323e7260f5fa3c4bc0bbc714643ff" translate="yes" xml:space="preserve">
          <source>When --fork-point is active, &lt;code&gt;fork_point&lt;/code&gt; will be used instead of &amp;lt;upstream&amp;gt; to calculate the set of commits to rebase, where &lt;code&gt;fork_point&lt;/code&gt; is the result of &lt;code&gt;git merge-base --fork-point &amp;lt;upstream&amp;gt;
&amp;lt;branch&amp;gt;&lt;/code&gt; command (see &lt;a href=&quot;git-merge-base&quot;&gt;git-merge-base[1]&lt;/a&gt;). If &lt;code&gt;fork_point&lt;/code&gt; ends up being empty, the &amp;lt;upstream&amp;gt; will be used as a fallback.</source>
          <target state="translated">Cuando --fork-point est&amp;aacute; activo, &lt;code&gt;fork_point&lt;/code&gt; se usar&amp;aacute; en lugar de &amp;lt;upstream&amp;gt; para calcular el conjunto de confirmaciones para rebase, donde &lt;code&gt;fork_point&lt;/code&gt; es el resultado del &lt;code&gt;git merge-base --fork-point &amp;lt;upstream&amp;gt; &amp;lt;branch&amp;gt;&lt;/code&gt; ( ver &lt;a href=&quot;git-merge-base&quot;&gt;git-merge-base [1]&lt;/a&gt; ). Si &lt;code&gt;fork_point&lt;/code&gt; termina vac&amp;iacute;o, el &amp;lt;upstream&amp;gt; se usar&amp;aacute; como respaldo.</target>
        </trans-unit>
        <trans-unit id="0b903c4e9a3738f389f65549fe23dcd21fd8909d" translate="yes" xml:space="preserve">
          <source>When --graph is not used, all history branches are flattened which can make it hard to see that the two consecutive commits do not belong to a linear branch. This option puts a barrier in between them in that case. If &lt;code&gt;&amp;lt;barrier&amp;gt;&lt;/code&gt; is specified, it is the string that will be shown instead of the default one.</source>
          <target state="translated">Cuando no se utiliza --graph, todas las ramas del historial se aplanan, lo que puede dificultar ver que las dos confirmaciones consecutivas no pertenecen a una rama lineal. Esta opci&amp;oacute;n pone una barrera entre ellos en ese caso. Si se especifica &lt;code&gt;&amp;lt;barrier&amp;gt;&lt;/code&gt; , es la cadena que se mostrar&amp;aacute; en lugar de la predeterminada.</target>
        </trans-unit>
        <trans-unit id="24ff3c267435a7dcecd3166ed52f8210a7c7f0de" translate="yes" xml:space="preserve">
          <source>When --stdout is specified then progress report is displayed during the object count and compression phases but inhibited during the write-out phase. The reason is that in some cases the output stream is directly linked to another command which may wish to display progress status of its own as it processes incoming pack data. This flag is like --progress except that it forces progress report for the write-out phase as well even if --stdout is used.</source>
          <target state="translated">Cuando se especifica --stdout,se muestra el informe de progreso durante las fases de recuento de objetos y de compresión,pero se inhibe durante la fase de escritura.La razón es que en algunos casos el flujo de salida está directamente vinculado a otro comando que puede querer mostrar el estado de progreso por sí mismo mientras procesa los datos de los paquetes entrantes.Este indicador es como --progress excepto que fuerza el informe de progreso para la fase de escritura también,incluso si se usa --stdout.</target>
        </trans-unit>
        <trans-unit id="d3e80ca53bd7d57db503ac84208eff0dbe6d901f" translate="yes" xml:space="preserve">
          <source>When -k is not in effect, all leading strings bracketed with &lt;code&gt;[&lt;/code&gt; and &lt;code&gt;]&lt;/code&gt; pairs are stripped. This option limits the stripping to only the pairs whose bracketed string contains the word &quot;PATCH&quot;.</source>
          <target state="translated">Cuando -k no est&amp;aacute; en efecto, todas las cadenas iniciales entre corchetes con &lt;code&gt;[&lt;/code&gt; y &lt;code&gt;]&lt;/code&gt; pares se eliminan. Esta opci&amp;oacute;n limita la eliminaci&amp;oacute;n solo a los pares cuya cadena entre corchetes contiene la palabra &quot;PATCH&quot;.</target>
        </trans-unit>
        <trans-unit id="882475218cb0a9fc17e76a3d4266386adec5dd71" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;&quot;$@&quot;&lt;/code&gt; is &lt;code&gt;-h&lt;/code&gt; or &lt;code&gt;--help&lt;/code&gt; in the above example, the following usage text would be shown:</source>
          <target state="translated">Cuando &lt;code&gt;&quot;$@&quot;&lt;/code&gt; es &lt;code&gt;-h&lt;/code&gt; o &lt;code&gt;--help&lt;/code&gt; en el ejemplo anterior, se muestra el siguiente texto Rendimiento:</target>
        </trans-unit>
        <trans-unit id="d78a0cbb0812363470a0c64a4a94d40dd1da90bb" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;--batch-all-objects&lt;/code&gt; is in use, visit objects in an order which may be more efficient for accessing the object contents than hash order. The exact details of the order are unspecified, but if you do not require a specific order, this should generally result in faster output, especially with &lt;code&gt;--batch&lt;/code&gt;. Note that &lt;code&gt;cat-file&lt;/code&gt; will still show each object only once, even if it is stored multiple times in the repository.</source>
          <target state="translated">Cuando &lt;code&gt;--batch-all-objects&lt;/code&gt; est&amp;aacute; en uso, visite los objetos en un orden que puede ser m&amp;aacute;s eficiente para acceder al contenido del objeto que el orden hash. Los detalles exactos del pedido no est&amp;aacute;n especificados, pero si no necesita un pedido espec&amp;iacute;fico, esto generalmente deber&amp;iacute;a resultar en una salida m&amp;aacute;s r&amp;aacute;pida, especialmente con &lt;code&gt;--batch&lt;/code&gt; . Tenga en cuenta que &lt;code&gt;cat-file&lt;/code&gt; seguir&amp;aacute; mostrando cada objeto solo una vez, incluso si se almacena varias veces en el repositorio.</target>
        </trans-unit>
        <trans-unit id="95919047a579b82415a0ddd6c6f601bfbb7dc80f" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;--check&lt;/code&gt; is in effect, or when applying the patch (which is the default when none of the options that disables it is in effect), make sure the patch is applicable to what the current index file records. If the file to be patched in the working tree is not up to date, it is flagged as an error. This flag also causes the index file to be updated.</source>
          <target state="translated">Cuando &lt;code&gt;--check&lt;/code&gt; est&amp;aacute; en efecto, o al aplicar el parche (que es el valor predeterminado cuando ninguna de las opciones que lo deshabilitan est&amp;aacute; en vigor), aseg&amp;uacute;rese de que el parche sea aplicable a lo que registra el archivo de &amp;iacute;ndice actual. Si el archivo que se va a parchear en el &amp;aacute;rbol de trabajo no est&amp;aacute; actualizado, se marca como un error. Este indicador tambi&amp;eacute;n hace que se actualice el archivo de &amp;iacute;ndice.</target>
        </trans-unit>
        <trans-unit id="526cf7ed548b3415806841ff6b0e065a944a8f5e" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;--compose&lt;/code&gt; is used, git send-email will use the From, Subject, and In-Reply-To headers specified in the message. If the body of the message (what you type after the headers and a blank line) only contains blank (or Git: prefixed) lines, the summary won&amp;rsquo;t be sent, but From, Subject, and In-Reply-To headers will be used unless they are removed.</source>
          <target state="translated">Cuando se usa &lt;code&gt;--compose&lt;/code&gt; , git send-email usar&amp;aacute; los encabezados De, Asunto y En respuesta a especificados en el mensaje. Si el cuerpo del mensaje (lo que escribe despu&amp;eacute;s de los encabezados y una l&amp;iacute;nea en blanco) solo contiene l&amp;iacute;neas en blanco (o Git: prefijado), el resumen no se enviar&amp;aacute;, pero los encabezados De, Asunto y En respuesta a. utilizarse a menos que se eliminen.</target>
        </trans-unit>
        <trans-unit id="46dc43993fdd7156fca21e87a205fc0f333f2d9a" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;--cone&lt;/code&gt; is provided, the &lt;code&gt;core.sparseCheckoutCone&lt;/code&gt; setting is also set, allowing for better performance with a limited set of patterns (see &lt;code&gt;CONE PATTERN SET&lt;/code&gt; below).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac6d168ca5e25a70ab78d5a850025a2ad07d998b" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;--exclude&lt;/code&gt; and &lt;code&gt;--include&lt;/code&gt; patterns are used, they are examined in the order they appear on the command line, and the first match determines if a patch to each path is used. A patch to a path that does not match any include/exclude pattern is used by default if there is no include pattern on the command line, and ignored if there is any include pattern.</source>
          <target state="translated">Cuando &lt;code&gt;--exclude&lt;/code&gt; y &lt;code&gt;--include&lt;/code&gt; se utilizan patrones, que se examinan en el orden en que aparecen en la l&amp;iacute;nea de comandos, y el primer partido determina si se usa un parche para cada ruta. Un parche a una ruta que no coincide con ning&amp;uacute;n patr&amp;oacute;n de inclusi&amp;oacute;n / exclusi&amp;oacute;n se usa de forma predeterminada si no hay un patr&amp;oacute;n de inclusi&amp;oacute;n en la l&amp;iacute;nea de comando, y se ignora si hay alg&amp;uacute;n patr&amp;oacute;n de inclusi&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="febfb7b902fc970c3396f3068a5c66e59c7ec8ea" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;--notes&lt;/code&gt; is in effect, the message from the notes is matched as if it were part of the log message.</source>
          <target state="translated">Cuando &lt;code&gt;--notes&lt;/code&gt; est&amp;aacute; en vigor, el mensaje de las notas se compara como si fuera parte del mensaje de registro.</target>
        </trans-unit>
        <trans-unit id="b84c74a91c715b3bf1b4e927529a07a15aed9721" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;--numstat&lt;/code&gt; has been given, do not munge pathnames, but use a NUL-terminated machine-readable format.</source>
          <target state="translated">Cuando se haya proporcionado &lt;code&gt;--numstat&lt;/code&gt; , no mezcle los nombres de ruta, sino use un formato legible por m&amp;aacute;quina terminado en NUL.</target>
        </trans-unit>
        <trans-unit id="d371e700585c518084c33d84fef0af43b13c3439" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;--raw&lt;/code&gt;, &lt;code&gt;--numstat&lt;/code&gt;, &lt;code&gt;--name-only&lt;/code&gt; or &lt;code&gt;--name-status&lt;/code&gt; has been given, do not munge pathnames and use NULs as output field terminators.</source>
          <target state="translated">Cuando &lt;code&gt;--raw&lt;/code&gt; , &lt;code&gt;--numstat&lt;/code&gt; , &lt;code&gt;--name-only&lt;/code&gt; o &lt;code&gt;--name-status&lt;/code&gt; se le ha dado, no haga munge nombres de ruta y NULs uso como terminadores de campo de salida.</target>
        </trans-unit>
        <trans-unit id="e163d548a1a886a531d60736c2ba3e851388a10a" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;--root&lt;/code&gt; is specified the initial commit will be shown as a big creation event. This is equivalent to a diff against the NULL tree.</source>
          <target state="translated">Cuando se especifica &lt;code&gt;--root&lt;/code&gt; , la confirmaci&amp;oacute;n inicial se mostrar&amp;aacute; como un gran evento de creaci&amp;oacute;n. Esto es equivalente a una diferencia contra el &amp;aacute;rbol NULL.</target>
        </trans-unit>
        <trans-unit id="8183759ad974b12070a46362dbaa27565534e645" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;--show-pulls&lt;/code&gt; is paired with &lt;code&gt;--simplify-merges&lt;/code&gt;, the graph includes all of the necessary information:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b88ba2b22685842fbd9b8b75fb2959da8ea9e8b" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;--stdin&lt;/code&gt; is specified, the command does not take &amp;lt;tree-ish&amp;gt; arguments from the command line. Instead, it reads lines containing either two &amp;lt;tree&amp;gt;, one &amp;lt;commit&amp;gt;, or a list of &amp;lt;commit&amp;gt; from its standard input. (Use a single space as separator.)</source>
          <target state="translated">Cuando se especifica &lt;code&gt;--stdin&lt;/code&gt; , el comando no toma argumentos &amp;lt;tree-ish&amp;gt; de la l&amp;iacute;nea de comando. En su lugar, lee l&amp;iacute;neas que contienen dos &amp;lt;&amp;aacute;rbol&amp;gt;, un &amp;lt;commit&amp;gt; o una lista de &amp;lt;commit&amp;gt; de su entrada est&amp;aacute;ndar. (Utilice un solo espacio como separador).</target>
        </trans-unit>
        <trans-unit id="c23ac888d8fe422c1532e2aed10782043e7c6859" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;--temp&lt;/code&gt; is used (or implied by &lt;code&gt;--stage=all&lt;/code&gt;) &lt;code&gt;git checkout-index&lt;/code&gt; will create a temporary file for each index entry being checked out. The index will not be updated with stat information. These options can be useful if the caller needs all stages of all unmerged entries so that the unmerged files can be processed by an external merge tool.</source>
          <target state="translated">When &lt;code&gt;--temp&lt;/code&gt; is used (or implied by &lt;code&gt;--stage=all&lt;/code&gt; ) &lt;code&gt;git checkout-index&lt;/code&gt; will create a temporary file for each index entry being checked out. The index will not be updated with stat information. These options can be useful if the caller needs all stages of all unmerged entries so that the unmerged files can be processed by an external merge tool.</target>
        </trans-unit>
        <trans-unit id="5c97ac9560dda79ead627bde39274f79b6e5dd8a" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;-S&lt;/code&gt; or &lt;code&gt;-G&lt;/code&gt; are used without &lt;code&gt;--pickaxe-all&lt;/code&gt;, only filepairs that match their respective criterion are kept in the output. When &lt;code&gt;--pickaxe-all&lt;/code&gt; is used, if even one filepair matches their respective criterion in a changeset, the entire changeset is kept. This behavior is designed to make reviewing changes in the context of the whole changeset easier.</source>
          <target state="translated">Cuando se usan &lt;code&gt;-S&lt;/code&gt; o &lt;code&gt;-G&lt;/code&gt; sin &lt;code&gt;--pickaxe-all&lt;/code&gt; , solo los pares de archivos que coinciden con sus respectivos criterios se mantienen en la salida. Cuando se &lt;code&gt;--pickaxe-all&lt;/code&gt; , si incluso un par de archivos coincide con su criterio respectivo en un conjunto de cambios, se conserva todo el conjunto de cambios. Este comportamiento est&amp;aacute; dise&amp;ntilde;ado para facilitar la revisi&amp;oacute;n de cambios en el contexto de todo el conjunto de cambios.</target>
        </trans-unit>
        <trans-unit id="b7230470efbcbdb8b4c76cdcdcf3272fde68030f" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;-S&lt;/code&gt; or &lt;code&gt;-G&lt;/code&gt; finds a change, show all the changes in that changeset, not just the files that contain the change in &amp;lt;string&amp;gt;.</source>
          <target state="translated">Cuando &lt;code&gt;-S&lt;/code&gt; o &lt;code&gt;-G&lt;/code&gt; encuentra un cambio, muestra todos los cambios en ese conjunto de cambios, no solo los archivos que contienen el cambio en &amp;lt;string&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="b52ce403c26e2631158c50ee6bd3c17065ed82dc" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;-u&lt;/code&gt; option is not used, untracked files and directories are shown (i.e. the same as specifying &lt;code&gt;normal&lt;/code&gt;), to help you avoid forgetting to add newly created files. Because it takes extra work to find untracked files in the filesystem, this mode may take some time in a large working tree. Consider enabling untracked cache and split index if supported (see &lt;code&gt;git update-index --untracked-cache&lt;/code&gt; and &lt;code&gt;git update-index
--split-index&lt;/code&gt;), Otherwise you can use &lt;code&gt;no&lt;/code&gt; to have &lt;code&gt;git status&lt;/code&gt; return more quickly without showing untracked files.</source>
          <target state="translated">Cuando no se usa la opci&amp;oacute;n &lt;code&gt;-u&lt;/code&gt; , se muestran los archivos y directorios sin seguimiento (es decir, lo mismo que se especifica &lt;code&gt;normal&lt;/code&gt; ), para ayudarlo a evitar olvidar agregar archivos reci&amp;eacute;n creados. Debido a que se necesita un trabajo adicional para encontrar archivos sin seguimiento en el sistema de archivos, este modo puede llevar alg&amp;uacute;n tiempo en un &amp;aacute;rbol de trabajo grande. Considere habilitar la cach&amp;eacute; sin seguimiento y el &amp;iacute;ndice dividido si es compatible (consulte &lt;code&gt;git update-index --untracked-cache&lt;/code&gt; y &lt;code&gt;git update-index --split-index&lt;/code&gt; ). De lo contrario, puede usar &lt;code&gt;no&lt;/code&gt; para que el &lt;code&gt;git status&lt;/code&gt; regrese m&amp;aacute;s r&amp;aacute;pidamente sin mostrar los archivos sin seguimiento.</target>
        </trans-unit>
        <trans-unit id="97c7c816e31485397947c4cd78f79e742f80ec39" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;-z&lt;/code&gt; output option is in effect, the output is formatted this way:</source>
          <target state="translated">Cuando la opci&amp;oacute;n de salida &lt;code&gt;-z&lt;/code&gt; est&amp;aacute; en vigor, la salida se formatea de esta manera:</target>
        </trans-unit>
        <trans-unit id="2bf71954fc8fac90c9030e3b9b1232971580d22a" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;FETCH_HEAD&lt;/code&gt; (and no other commit) is specified, the branches recorded in the &lt;code&gt;.git/FETCH_HEAD&lt;/code&gt; file by the previous invocation of &lt;code&gt;git fetch&lt;/code&gt; for merging are merged to the current branch.</source>
          <target state="translated">Cuando se &lt;code&gt;FETCH_HEAD&lt;/code&gt; (y ninguna otra confirmaci&amp;oacute;n), las ramas registradas en el archivo &lt;code&gt;.git/FETCH_HEAD&lt;/code&gt; por la invocaci&amp;oacute;n anterior de &lt;code&gt;git fetch&lt;/code&gt; para fusionar se fusionan con la rama actual.</target>
        </trans-unit>
        <trans-unit id="30aaf2e9dd06a0335c5f1cb4c0791345a6730170" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;core.sparseCheckoutCone&lt;/code&gt; is enabled, the input list is considered a list of directories instead of sparse-checkout patterns. The command writes patterns to the sparse-checkout file to include all files contained in those directories (recursively) as well as files that are siblings of ancestor directories. The input format matches the output of &lt;code&gt;git ls-tree --name-only&lt;/code&gt;. This includes interpreting pathnames that begin with a double quote (&quot;) as C-style quoted strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a79eb2995cdbf5e2d0a3c4b4e62d970b5798ea30" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;extensions.worktreeConfig&lt;/code&gt; is enabled, the config file &lt;code&gt;.git/worktrees/&amp;lt;id&amp;gt;/config.worktree&lt;/code&gt; is read after &lt;code&gt;.git/config&lt;/code&gt; is.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="093107f57324ea8ddf834562dc5da735634ce1c2" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;fetch.fsckObjects&lt;/code&gt; or &lt;code&gt;receive.fsckObjects&lt;/code&gt; are not set, the value of this variable is used instead. Defaults to false.</source>
          <target state="translated">Cuando &lt;code&gt;fetch.fsckObjects&lt;/code&gt; o &lt;code&gt;receive.fsckObjects&lt;/code&gt; no se han establecido, el valor de esta variable se utiliza en su lugar. El valor predeterminado es falso.</target>
        </trans-unit>
        <trans-unit id="f0f4e4ab298d72d3ce878991ffe1cd2532ffab74" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;fetch.unpackLimit&lt;/code&gt; or &lt;code&gt;receive.unpackLimit&lt;/code&gt; are not set, the value of this variable is used instead. The default value is 100.</source>
          <target state="translated">Cuando &lt;code&gt;fetch.unpackLimit&lt;/code&gt; o &lt;code&gt;receive.unpackLimit&lt;/code&gt; no se han establecido, el valor de esta variable se utiliza en su lugar. El valor predeterminado es 100.</target>
        </trans-unit>
        <trans-unit id="0f43e1a31ad9e45784cdafec68b8141e1a628402" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;fsck.&amp;lt;msg-id&amp;gt;&lt;/code&gt; is set, errors can be switched to warnings and vice versa by configuring the &lt;code&gt;fsck.&amp;lt;msg-id&amp;gt;&lt;/code&gt; setting where the &lt;code&gt;&amp;lt;msg-id&amp;gt;&lt;/code&gt; is the fsck message ID and the value is one of &lt;code&gt;error&lt;/code&gt;, &lt;code&gt;warn&lt;/code&gt; or &lt;code&gt;ignore&lt;/code&gt;. For convenience, fsck prefixes the error/warning with the message ID, e.g. &quot;missingEmail: invalid author/committer line - missing email&quot; means that setting &lt;code&gt;fsck.missingEmail = ignore&lt;/code&gt; will hide that issue.</source>
          <target state="translated">Cuando se establece &lt;code&gt;fsck.&amp;lt;msg-id&amp;gt;&lt;/code&gt; , los errores se pueden cambiar a advertencias y viceversa configurando el ajuste &lt;code&gt;fsck.&amp;lt;msg-id&amp;gt;&lt;/code&gt; donde &lt;code&gt;&amp;lt;msg-id&amp;gt;&lt;/code&gt; es el ID del mensaje fsck y el valor es uno de &lt;code&gt;error&lt;/code&gt; , &lt;code&gt;warn&lt;/code&gt; o &lt;code&gt;ignore&lt;/code&gt; . Por conveniencia, fsck antepone el error / advertencia con la ID del mensaje, por ejemplo, &quot;missingEmail: autor / autor de l&amp;iacute;nea inv&amp;aacute;lido - correo electr&amp;oacute;nico faltante&quot; significa que configurar &lt;code&gt;fsck.missingEmail = ignore&lt;/code&gt; ocultar&amp;aacute; ese problema.</target>
        </trans-unit>
        <trans-unit id="ce3f108ee8253a42ecb067bc1a011bcbcd3ad290" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;git apply&lt;/code&gt; is used as a &quot;better GNU patch&quot;, the user can pass the &lt;code&gt;--unsafe-paths&lt;/code&gt; option to override this safety check. This option has no effect when &lt;code&gt;--index&lt;/code&gt; or &lt;code&gt;--cached&lt;/code&gt; is in use.</source>
          <target state="translated">Cuando se usa &lt;code&gt;git apply&lt;/code&gt; como un &quot;mejor parche GNU&quot;, el usuario puede pasar la opci&amp;oacute;n &lt;code&gt;--unsafe-paths&lt;/code&gt; para anular esta verificaci&amp;oacute;n de seguridad. Esta opci&amp;oacute;n no tiene ning&amp;uacute;n efecto cuando &lt;code&gt;--index&lt;/code&gt; o &lt;code&gt;--cached&lt;/code&gt; est&amp;aacute;n en uso.</target>
        </trans-unit>
        <trans-unit id="dea5ce8f581717a21d1ee89e4952655599f11488" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;git difftool&lt;/code&gt; is invoked with this tool (either through the &lt;code&gt;-t&lt;/code&gt; or &lt;code&gt;--tool&lt;/code&gt; option or the &lt;code&gt;diff.tool&lt;/code&gt; configuration variable) the configured command line will be invoked with the following variables available: &lt;code&gt;$LOCAL&lt;/code&gt; is set to the name of the temporary file containing the contents of the diff pre-image and &lt;code&gt;$REMOTE&lt;/code&gt; is set to the name of the temporary file containing the contents of the diff post-image. &lt;code&gt;$MERGED&lt;/code&gt; is the name of the file which is being compared. &lt;code&gt;$BASE&lt;/code&gt; is provided for compatibility with custom merge tool commands and has the same value as &lt;code&gt;$MERGED&lt;/code&gt;.</source>
          <target state="translated">Cuando se invoca &lt;code&gt;git difftool&lt;/code&gt; con esta herramienta (ya sea a trav&amp;eacute;s de la opci&amp;oacute;n &lt;code&gt;-t&lt;/code&gt; o &lt;code&gt;--tool&lt;/code&gt; o la variable de configuraci&amp;oacute;n &lt;code&gt;diff.tool&lt;/code&gt; ), la l&amp;iacute;nea de comando configurada se invocar&amp;aacute; con las siguientes variables disponibles: &lt;code&gt;$LOCAL&lt;/code&gt; se establece en el nombre del temporal archivo que contiene el contenido de la preimagen diff y &lt;code&gt;$REMOTE&lt;/code&gt; se establece en el nombre del archivo temporal que contiene el contenido de la postimagen diff. &lt;code&gt;$MERGED&lt;/code&gt; es el nombre del archivo que se est&amp;aacute; comparando. &lt;code&gt;$BASE&lt;/code&gt; se proporciona para compatibilidad con los comandos de la herramienta de combinaci&amp;oacute;n personalizada y tiene el mismo valor que &lt;code&gt;$MERGED&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="02bc7953c8eb819402a97fdb05db86103d3e94f0" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;git fetch&lt;/code&gt; is run with explicit branches and/or tags to fetch on the command line, e.g. &lt;code&gt;git fetch origin master&lt;/code&gt;, the &amp;lt;refspec&amp;gt;s given on the command line determine what are to be fetched (e.g. &lt;code&gt;master&lt;/code&gt; in the example, which is a short-hand for &lt;code&gt;master:&lt;/code&gt;, which in turn means &quot;fetch the &lt;code&gt;master&lt;/code&gt; branch but I do not explicitly say what remote-tracking branch to update with it from the command line&quot;), and the example command will fetch &lt;code&gt;only&lt;/code&gt; the &lt;code&gt;master&lt;/code&gt; branch. The &lt;code&gt;remote.&amp;lt;repository&amp;gt;.fetch&lt;/code&gt; values determine which remote-tracking branch, if any, is updated. When used in this way, the &lt;code&gt;remote.&amp;lt;repository&amp;gt;.fetch&lt;/code&gt; values do not have any effect in deciding &lt;code&gt;what&lt;/code&gt; gets fetched (i.e. the values are not used as refspecs when the command-line lists refspecs); they are only used to decide &lt;code&gt;where&lt;/code&gt; the refs that are fetched are stored by acting as a mapping.</source>
          <target state="translated">Cuando &lt;code&gt;git fetch&lt;/code&gt; se ejecuta con ramas expl&amp;iacute;citas y / o etiquetas para buscar en la l&amp;iacute;nea de comando, por ejemplo, &lt;code&gt;git fetch origin master&lt;/code&gt; , las &amp;lt;refspec&amp;gt; dadas en la l&amp;iacute;nea de comando determinan qu&amp;eacute; se va a buscar (por ejemplo, &lt;code&gt;master&lt;/code&gt; en el ejemplo, que es una abreviatura de &lt;code&gt;master:&lt;/code&gt; , que a su vez significa &quot;buscar la rama &lt;code&gt;master&lt;/code&gt; , pero no digo expl&amp;iacute;citamente qu&amp;eacute; rama de seguimiento remoto actualizar con ella desde la l&amp;iacute;nea de comandos&quot;), y el comando de ejemplo buscar&amp;aacute; &lt;code&gt;only&lt;/code&gt; la rama &lt;code&gt;master&lt;/code&gt; . Los valores de &lt;code&gt;remote.&amp;lt;repository&amp;gt;.fetch&lt;/code&gt; determinan qu&amp;eacute; rama de seguimiento remoto, si la hay, se actualiza. Cuando se usa de esta manera, el &lt;code&gt;remote.&amp;lt;repository&amp;gt;.fetch&lt;/code&gt; los valores no tienen ning&amp;uacute;n efecto a la hora de decidir &lt;code&gt;what&lt;/code&gt; obtiene (es decir, los valores no se utilizan como refspecs cuando la l&amp;iacute;nea de comandos enumera refspecs); solo se usan para decidir &lt;code&gt;where&lt;/code&gt; se almacenan las referencias que se obtienen actuando como un mapeo.</target>
        </trans-unit>
        <trans-unit id="d3bb27ea8d5739147518646e08d478432b5ac353" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;git fetch&lt;/code&gt; is run without specifying what branches and/or tags to fetch on the command line, e.g. &lt;code&gt;git fetch origin&lt;/code&gt; or &lt;code&gt;git fetch&lt;/code&gt;, &lt;code&gt;remote.&amp;lt;repository&amp;gt;.fetch&lt;/code&gt; values are used as the refspecs&amp;mdash;​they specify which refs to fetch and which local refs to update. The example above will fetch all branches that exist in the &lt;code&gt;origin&lt;/code&gt; (i.e. any ref that matches the left-hand side of the value, &lt;code&gt;refs/heads/*&lt;/code&gt;) and update the corresponding remote-tracking branches in the &lt;code&gt;refs/remotes/origin/*&lt;/code&gt; hierarchy.</source>
          <target state="translated">Cuando se ejecuta &lt;code&gt;git fetch&lt;/code&gt; sin especificar qu&amp;eacute; ramas y / o etiquetas buscar en la l&amp;iacute;nea de comando, por ejemplo, &lt;code&gt;git fetch origin&lt;/code&gt; o &lt;code&gt;git fetch&lt;/code&gt; , &lt;code&gt;remote.&amp;lt;repository&amp;gt;.fetch&lt;/code&gt; valores remotos. &amp;lt;repository&amp;gt; .fetch se utilizan como refspecs: especifican qu&amp;eacute; referencias se deben buscar y qu&amp;eacute; referencias locales actualizar. El ejemplo anterior obtendr&amp;aacute; todas las ramas que existen en el &lt;code&gt;origin&lt;/code&gt; (es decir, cualquier referencia que coincida con el lado izquierdo del valor, &lt;code&gt;refs/heads/*&lt;/code&gt; ) y actualizar&amp;aacute; las ramas de seguimiento remoto correspondientes en &lt;code&gt;refs/remotes/origin/*&lt;/code&gt; jerarqu&amp;iacute;a.</target>
        </trans-unit>
        <trans-unit id="6bfc306f6ccec6cbac00c82d44f7befe47671739" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;git fetch&lt;/code&gt; is used with &lt;code&gt;&amp;lt;src&amp;gt;:&amp;lt;dst&amp;gt;&lt;/code&gt; refspec it may refuse to update the local branch as discussed in the &lt;code&gt;&amp;lt;refspec&amp;gt;&lt;/code&gt; part below. This option overrides that check.</source>
          <target state="translated">Cuando se usa &lt;code&gt;git fetch&lt;/code&gt; con &lt;code&gt;&amp;lt;src&amp;gt;:&amp;lt;dst&amp;gt;&lt;/code&gt; refspec, puede negarse a actualizar la rama local como se explica en la parte &lt;code&gt;&amp;lt;refspec&amp;gt;&lt;/code&gt; a continuaci&amp;oacute;n. Esta opci&amp;oacute;n anula esa verificaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="b8a0a18f13c1248a211519fc4b6c3ee775403075" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;git fetch&lt;/code&gt; is used with &lt;code&gt;&amp;lt;src&amp;gt;:&amp;lt;dst&amp;gt;&lt;/code&gt; refspec it may refuse to update the local branch as discussed in the &lt;code&gt;&amp;lt;refspec&amp;gt;&lt;/code&gt; part of the &lt;a href=&quot;git-fetch&quot;&gt;git-fetch[1]&lt;/a&gt; documentation. This option overrides that check.</source>
          <target state="translated">Cuando se usa &lt;code&gt;git fetch&lt;/code&gt; con &lt;code&gt;&amp;lt;src&amp;gt;:&amp;lt;dst&amp;gt;&lt;/code&gt; refspec, puede negarse a actualizar la rama local como se explica en la parte &lt;code&gt;&amp;lt;refspec&amp;gt;&lt;/code&gt; de la documentaci&amp;oacute;n de &lt;a href=&quot;git-fetch&quot;&gt;git-fetch [1]&lt;/a&gt; . Esta opci&amp;oacute;n anula esa verificaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="946d45913d1a6d20975808ddb9f4de7a3a592055" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;git gc&lt;/code&gt; is run, it calls &lt;code&gt;git worktree prune --expire 3.months.ago&lt;/code&gt;. This config variable can be used to set a different grace period. The value &quot;now&quot; may be used to disable the grace period and prune &lt;code&gt;$GIT_DIR/worktrees&lt;/code&gt; immediately, or &quot;never&quot; may be used to suppress pruning.</source>
          <target state="translated">Cuando se ejecuta &lt;code&gt;git gc&lt;/code&gt; , llama a &lt;code&gt;git worktree prune --expire 3.months.ago&lt;/code&gt; . Esta variable de configuraci&amp;oacute;n se puede utilizar para establecer un per&amp;iacute;odo de gracia diferente. El valor &quot;ahora&quot; puede usarse para deshabilitar el per&amp;iacute;odo de gracia y podar &lt;code&gt;$GIT_DIR/worktrees&lt;/code&gt; inmediatamente, o puede usarse &quot;nunca&quot; para suprimir la poda.</target>
        </trans-unit>
        <trans-unit id="bdaf9b565f5bc5effacd5e94ca1e6e23df9c9f7a" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;git gc&lt;/code&gt; is run, it will call &lt;code&gt;prune --expire 2.weeks.ago&lt;/code&gt;. Override the grace period with this config variable. The value &quot;now&quot; may be used to disable this grace period and always prune unreachable objects immediately, or &quot;never&quot; may be used to suppress pruning. This feature helps prevent corruption when &lt;code&gt;git gc&lt;/code&gt; runs concurrently with another process writing to the repository; see the &quot;NOTES&quot; section of &lt;a href=&quot;git-gc&quot;&gt;git-gc[1]&lt;/a&gt;.</source>
          <target state="translated">Cuando se ejecuta &lt;code&gt;git gc&lt;/code&gt; , &lt;code&gt;prune --expire 2.weeks.ago&lt;/code&gt; . Anule el per&amp;iacute;odo de gracia con esta variable de configuraci&amp;oacute;n. El valor &quot;ahora&quot; se puede usar para deshabilitar este per&amp;iacute;odo de gracia y siempre podar los objetos inalcanzables inmediatamente, o se puede usar &quot;nunca&quot; para suprimir la poda. Esta caracter&amp;iacute;stica ayuda a prevenir la corrupci&amp;oacute;n cuando &lt;code&gt;git gc&lt;/code&gt; se ejecuta al mismo tiempo que otro proceso que escribe en el repositorio; consulte la secci&amp;oacute;n &quot;NOTAS&quot; de &lt;a href=&quot;git-gc&quot;&gt;git-gc [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9771ab35f0db8c62ffb81b026ac116ab479df958" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;git mergetool&lt;/code&gt; is invoked with this tool (either through the &lt;code&gt;-t&lt;/code&gt; or &lt;code&gt;--tool&lt;/code&gt; option or the &lt;code&gt;merge.tool&lt;/code&gt; configuration variable) the configured command line will be invoked with &lt;code&gt;$BASE&lt;/code&gt; set to the name of a temporary file containing the common base for the merge, if available; &lt;code&gt;$LOCAL&lt;/code&gt; set to the name of a temporary file containing the contents of the file on the current branch; &lt;code&gt;$REMOTE&lt;/code&gt; set to the name of a temporary file containing the contents of the file to be merged, and &lt;code&gt;$MERGED&lt;/code&gt; set to the name of the file to which the merge tool should write the result of the merge resolution.</source>
          <target state="translated">Cuando se invoca &lt;code&gt;git mergetool&lt;/code&gt; con esta herramienta (ya sea a trav&amp;eacute;s de la opci&amp;oacute;n &lt;code&gt;-t&lt;/code&gt; o &lt;code&gt;--tool&lt;/code&gt; o la variable de configuraci&amp;oacute;n &lt;code&gt;merge.tool&lt;/code&gt; ), la l&amp;iacute;nea de comando configurada se invocar&amp;aacute; con &lt;code&gt;$BASE&lt;/code&gt; establecido en el nombre de un archivo temporal que contiene la base com&amp;uacute;n para la fusi&amp;oacute;n, si est&amp;aacute; disponible; &lt;code&gt;$LOCAL&lt;/code&gt; establecido en el nombre de un archivo temporal que contiene el contenido del archivo en la rama actual; &lt;code&gt;$REMOTE&lt;/code&gt; establece en el nombre de un archivo temporal que contiene el contenido del archivo que se fusionar&amp;aacute;, y &lt;code&gt;$MERGED&lt;/code&gt; establece en el nombre del archivo en el que la herramienta de combinaci&amp;oacute;n debe escribir el resultado de la resoluci&amp;oacute;n de combinaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="8d649c2a1b515f828b380ed0228639a9abf6f2e7" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;git-difftool&lt;/code&gt; is invoked with the &lt;code&gt;-g&lt;/code&gt; or &lt;code&gt;--gui&lt;/code&gt; option the default diff tool will be read from the configured &lt;code&gt;diff.guitool&lt;/code&gt; variable instead of &lt;code&gt;diff.tool&lt;/code&gt;. The &lt;code&gt;--no-gui&lt;/code&gt; option can be used to override this setting. If &lt;code&gt;diff.guitool&lt;/code&gt; is not set, we will fallback in the order of &lt;code&gt;merge.guitool&lt;/code&gt;, &lt;code&gt;diff.tool&lt;/code&gt;, &lt;code&gt;merge.tool&lt;/code&gt; until a tool is found.</source>
          <target state="translated">Cuando se invoca &lt;code&gt;git-difftool&lt;/code&gt; con la opci&amp;oacute;n &lt;code&gt;-g&lt;/code&gt; o &lt;code&gt;--gui&lt;/code&gt; , la herramienta de diferencias predeterminada se leer&amp;aacute; desde la variable &lt;code&gt;diff.guitool&lt;/code&gt; configurada en lugar de &lt;code&gt;diff.tool&lt;/code&gt; . La &lt;code&gt;--no-gui&lt;/code&gt; se puede utilizar para anular esta configuraci&amp;oacute;n. Si &lt;code&gt;diff.guitool&lt;/code&gt; no est&amp;aacute; configurado, retrocederemos en el orden de &lt;code&gt;merge.guitool&lt;/code&gt; , &lt;code&gt;diff.tool&lt;/code&gt; , &lt;code&gt;merge.tool&lt;/code&gt; hasta que se encuentre una herramienta.</target>
        </trans-unit>
        <trans-unit id="dab1778e78eece39a70fe4959b77fef05af95366" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;git-mergetool&lt;/code&gt; is invoked with the &lt;code&gt;-g&lt;/code&gt; or &lt;code&gt;--gui&lt;/code&gt; option the default merge tool will be read from the configured &lt;code&gt;merge.guitool&lt;/code&gt; variable instead of &lt;code&gt;merge.tool&lt;/code&gt;. If &lt;code&gt;merge.guitool&lt;/code&gt; is not set, we will fallback to the tool configured under &lt;code&gt;merge.tool&lt;/code&gt;.</source>
          <target state="translated">Cuando se invoca &lt;code&gt;git-mergetool&lt;/code&gt; con la opci&amp;oacute;n &lt;code&gt;-g&lt;/code&gt; o &lt;code&gt;--gui&lt;/code&gt; , la herramienta de combinaci&amp;oacute;n predeterminada se leer&amp;aacute; desde la variable &lt;code&gt;merge.guitool&lt;/code&gt; configurada en lugar de &lt;code&gt;merge.tool&lt;/code&gt; . Si &lt;code&gt;merge.guitool&lt;/code&gt; no est&amp;aacute; definida, que se replegar&amp;aacute; para la herramienta configurada en &lt;code&gt;merge.tool&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="55d1f905322639499a3e0c7d64b920e915841fa1" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;group&lt;/code&gt; (or &lt;code&gt;true&lt;/code&gt;), the repository is made shareable between several users in a group (making sure all the files and objects are group-writable). When &lt;code&gt;all&lt;/code&gt; (or &lt;code&gt;world&lt;/code&gt; or &lt;code&gt;everybody&lt;/code&gt;), the repository will be readable by all users, additionally to being group-shareable. When &lt;code&gt;umask&lt;/code&gt; (or &lt;code&gt;false&lt;/code&gt;), Git will use permissions reported by umask(2). When &lt;code&gt;0xxx&lt;/code&gt;, where &lt;code&gt;0xxx&lt;/code&gt; is an octal number, files in the repository will have this mode value. &lt;code&gt;0xxx&lt;/code&gt; will override user&amp;rsquo;s umask value (whereas the other options will only override requested parts of the user&amp;rsquo;s umask value). Examples: &lt;code&gt;0660&lt;/code&gt; will make the repo read/write-able for the owner and group, but inaccessible to others (equivalent to &lt;code&gt;group&lt;/code&gt; unless umask is e.g. &lt;code&gt;0022&lt;/code&gt;). &lt;code&gt;0640&lt;/code&gt; is a repository that is group-readable but not group-writable. See &lt;a href=&quot;git-init&quot;&gt;git-init[1]&lt;/a&gt;. False by default.</source>
          <target state="translated">Cuando es &lt;code&gt;group&lt;/code&gt; (o &lt;code&gt;true&lt;/code&gt; ), el repositorio se puede compartir entre varios usuarios en un grupo (asegur&amp;aacute;ndose de que todos los archivos y objetos se puedan escribir en grupo). Cuando &lt;code&gt;all&lt;/code&gt; (o el &lt;code&gt;world&lt;/code&gt; o &lt;code&gt;everybody&lt;/code&gt; ), el repositorio ser&amp;aacute; legible por todos los usuarios, adem&amp;aacute;s de ser compartido en grupo. Cuando &lt;code&gt;umask&lt;/code&gt; (o &lt;code&gt;false&lt;/code&gt; ), Git usar&amp;aacute; los permisos informados por umask (2). Cuando &lt;code&gt;0xxx&lt;/code&gt; , donde &lt;code&gt;0xxx&lt;/code&gt; es un n&amp;uacute;mero octal, los archivos del repositorio tendr&amp;aacute;n este valor de modo. &lt;code&gt;0xxx&lt;/code&gt; anular&amp;aacute; el valor de umask del usuario (mientras que las otras opciones solo anular&amp;aacute;n las partes solicitadas del valor de umask del usuario). Ejemplos: &lt;code&gt;0660&lt;/code&gt; har&amp;aacute; que el repositorio sea de lectura / escritura para el propietario y el grupo, pero inaccesible para otros (equivalente a &lt;code&gt;group&lt;/code&gt; a menos que umask sea, por ejemplo, &lt;code&gt;0022&lt;/code&gt; ). &lt;code&gt;0640&lt;/code&gt; es un repositorio que se puede leer en grupo, pero no se puede escribir en grupo. Consulte &lt;a href=&quot;git-init&quot;&gt;git-init [1]&lt;/a&gt; . Falso por defecto.</target>
        </trans-unit>
        <trans-unit id="0c640b1443fdc376fb0e05e5b19871e0f70bfa75" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;interactive&lt;/code&gt;, enable the interactive mode of rebase.</source>
          <target state="translated">Cuando sea &lt;code&gt;interactive&lt;/code&gt; , habilite el modo interactivo de rebase.</target>
        </trans-unit>
        <trans-unit id="0e5d1d0d5309f291d73a19a6f71347b59d761978" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;konqueror&lt;/code&gt; is specified in the &lt;code&gt;man.viewer&lt;/code&gt; configuration variable, we launch &lt;code&gt;kfmclient&lt;/code&gt; to try to open the man page on an already opened konqueror in a new tab if possible.</source>
          <target state="translated">Cuando se especifica &lt;code&gt;konqueror&lt;/code&gt; en la variable de configuraci&amp;oacute;n &lt;code&gt;man.viewer&lt;/code&gt; , lanzamos &lt;code&gt;kfmclient&lt;/code&gt; para intentar abrir la p&amp;aacute;gina del manual en un konqueror ya abierto en una nueva pesta&amp;ntilde;a si es posible.</target>
        </trans-unit>
        <trans-unit id="162b4f89725e01e084b1d2a9bb66f41a211da6f6" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;matching&lt;/code&gt; mode is specified, paths that explicitly match an ignored pattern are shown. If a directory matches an ignore pattern, then it is shown, but not paths contained in the ignored directory. If a directory does not match an ignore pattern, but all contents are ignored, then the directory is not shown, but all contents are shown.</source>
          <target state="translated">Cuando se especifica el modo de &lt;code&gt;matching&lt;/code&gt; , se muestran las rutas que coinciden expl&amp;iacute;citamente con un patr&amp;oacute;n ignorado. Si un directorio coincide con un patr&amp;oacute;n de ignorar, se muestra, pero no las rutas contenidas en el directorio ignorado. Si un directorio no coincide con un patr&amp;oacute;n de ignorar, pero se ignoran todos los contenidos, entonces el directorio no se muestra, pero se muestran todos los contenidos.</target>
        </trans-unit>
        <trans-unit id="7ee4878df1abaf60b54059eba9faa52c16598786" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;merges&lt;/code&gt; (or just &lt;code&gt;m&lt;/code&gt;), pass the &lt;code&gt;--rebase-merges&lt;/code&gt; option to &lt;code&gt;git rebase&lt;/code&gt; so that the local merge commits are included in the rebase (see &lt;a href=&quot;git-rebase&quot;&gt;git-rebase[1]&lt;/a&gt; for details).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="239b51beb1f8c13233881b0568518d58e269df96" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;merges&lt;/code&gt;, pass the &lt;code&gt;--rebase-merges&lt;/code&gt; option to &lt;code&gt;git rebase&lt;/code&gt; so that the local merge commits are included in the rebase (see &lt;a href=&quot;git-rebase&quot;&gt;git-rebase[1]&lt;/a&gt; for details).</source>
          <target state="translated">Cuando se &lt;code&gt;merges&lt;/code&gt; , pase la opci&amp;oacute;n &lt;code&gt;--rebase-merges&lt;/code&gt; a &lt;code&gt;git rebase&lt;/code&gt; para que las confirmaciones de fusi&amp;oacute;n locales se incluyan en la rebase (consulte &lt;a href=&quot;git-rebase&quot;&gt;git-rebase [1]&lt;/a&gt; para obtener m&amp;aacute;s detalles).</target>
        </trans-unit>
        <trans-unit id="26887709475bb99a484f3550dfcf66463a02ff1c" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;preserve&lt;/code&gt; (deprecated in favor of &lt;code&gt;merges&lt;/code&gt;), also pass &lt;code&gt;--preserve-merges&lt;/code&gt; along to &lt;code&gt;git rebase&lt;/code&gt; so that locally committed merge commits will not be flattened by running &lt;code&gt;git pull&lt;/code&gt;.</source>
          <target state="translated">Cuando &lt;code&gt;preserve&lt;/code&gt; (en desuso a favor de las &lt;code&gt;merges&lt;/code&gt; ), tambi&amp;eacute;n pase &lt;code&gt;--preserve-merges&lt;/code&gt; a &lt;code&gt;git rebase&lt;/code&gt; para que las confirmaciones de fusi&amp;oacute;n comprometidas localmente no se aplanen al ejecutar &lt;code&gt;git pull&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1aa5ac29106f7e567cb177a446057fe6893dfb3c" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;preserve&lt;/code&gt; (or just &lt;code&gt;p&lt;/code&gt;, deprecated in favor of &lt;code&gt;merges&lt;/code&gt;), also pass &lt;code&gt;--preserve-merges&lt;/code&gt; along to &lt;code&gt;git rebase&lt;/code&gt; so that locally committed merge commits will not be flattened by running &lt;code&gt;git pull&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c040d756e251986ff4d930aa40402b774da81b76" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;preserveUser&lt;/code&gt; is true, &lt;code&gt;git p4&lt;/code&gt; normally dies if it cannot find an author in the p4 user map. This setting submits the change regardless.</source>
          <target state="translated">Cuando &lt;code&gt;preserveUser&lt;/code&gt; es verdadero, &lt;code&gt;git p4&lt;/code&gt; normalmente muere si no puede encontrar un autor en el mapa de usuario de p4. Esta configuraci&amp;oacute;n env&amp;iacute;a el cambio independientemente.</target>
        </trans-unit>
        <trans-unit id="f1cb457481e4cab2531cdb48fb2ed70a72c47f80" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;receive-pack&lt;/code&gt; takes in objects, they are placed into a temporary &quot;quarantine&quot; directory within the &lt;code&gt;$GIT_DIR/objects&lt;/code&gt; directory and migrated into the main object store only after the &lt;code&gt;pre-receive&lt;/code&gt; hook has completed. If the push fails before then, the temporary directory is removed entirely.</source>
          <target state="translated">Cuando &lt;code&gt;receive-pack&lt;/code&gt; &lt;code&gt;$GIT_DIR/objects&lt;/code&gt; objetos, se colocan en un directorio de &quot;cuarentena&quot; temporal dentro del directorio $ GIT_DIR / objects y se migran al almac&amp;eacute;n de objetos principal solo despu&amp;eacute;s de que se haya completado el enlace de &lt;code&gt;pre-receive&lt;/code&gt; . Si la inserci&amp;oacute;n falla antes de esa fecha, el directorio temporal se elimina por completo.</target>
        </trans-unit>
        <trans-unit id="13eed45e8cb127a4420b06f0b52f497c696b7d45" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;text&lt;/code&gt; is set to &quot;auto&quot;, the path is marked for automatic end-of-line conversion. If Git decides that the content is text, its line endings are converted to LF on checkin. When the file has been committed with CRLF, no conversion is done.</source>
          <target state="translated">Cuando el &lt;code&gt;text&lt;/code&gt; o se establece en &quot;autom&amp;aacute;tico&quot;, la ruta se marca para la conversi&amp;oacute;n autom&amp;aacute;tica de final de l&amp;iacute;nea. Si Git decide que el contenido es texto, sus finales de l&amp;iacute;nea se convierten a LF al registrarse. Cuando el archivo se ha comprometido con CRLF, no se realiza ninguna conversi&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="2bb8610f0d3f51c94aca7dd51e3603814301750d" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;text=auto&lt;/code&gt; conversion is enabled in a cross-platform project using push and pull to a central repository the text files containing CRLFs should be normalized.</source>
          <target state="translated">Cuando &lt;code&gt;text=auto&lt;/code&gt; conversi&amp;oacute;n text = auto est&amp;aacute; habilitada en un proyecto multiplataforma usando push and pull a un repositorio central, los archivos de texto que contienen CRLF deben normalizarse.</target>
        </trans-unit>
        <trans-unit id="f1b569ad0a0d3f731d90377a830d25de99487fad" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;upload-pack&lt;/code&gt; has started &lt;code&gt;pack-objects&lt;/code&gt;, there may be a quiet period while &lt;code&gt;pack-objects&lt;/code&gt; prepares the pack. Normally it would output progress information, but if &lt;code&gt;--quiet&lt;/code&gt; was used for the fetch, &lt;code&gt;pack-objects&lt;/code&gt; will output nothing at all until the pack data begins. Some clients and networks may consider the server to be hung and give up. Setting this option instructs &lt;code&gt;upload-pack&lt;/code&gt; to send an empty keepalive packet every &lt;code&gt;uploadpack.keepAlive&lt;/code&gt; seconds. Setting this option to 0 disables keepalive packets entirely. The default is 5 seconds.</source>
          <target state="translated">Cuando &lt;code&gt;upload-pack&lt;/code&gt; ha iniciado &lt;code&gt;pack-objects&lt;/code&gt; , puede haber un per&amp;iacute;odo de silencio mientras &lt;code&gt;pack-objects&lt;/code&gt; prepara el paquete. Normalmente, generar&amp;iacute;a informaci&amp;oacute;n de progreso, pero si se usa &lt;code&gt;--quiet&lt;/code&gt; para la recuperaci&amp;oacute;n, &lt;code&gt;pack-objects&lt;/code&gt; generar&amp;aacute;n nada hasta que comiencen los datos del paquete. Algunos clientes y redes pueden considerar que el servidor est&amp;aacute; bloqueado y abandonado. La configuraci&amp;oacute;n de esta opci&amp;oacute;n indica a &lt;code&gt;upload-pack&lt;/code&gt; que env&amp;iacute;e un paquete keepalive vac&amp;iacute;o cada segundo &lt;code&gt;uploadpack.keepAlive&lt;/code&gt; . Establecer esta opci&amp;oacute;n en 0 deshabilita los paquetes keepalive por completo. El valor predeterminado es 5 segundos.</target>
        </trans-unit>
        <trans-unit id="09ea8c9e4617731ed2a0cdf40185d39ec477e171" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;uploadpack.hideRefs&lt;/code&gt; is in effect, allow &lt;code&gt;upload-pack&lt;/code&gt; to accept a fetch request that asks for an object at the tip of a hidden ref (by default, such a request is rejected). See also &lt;code&gt;uploadpack.hideRefs&lt;/code&gt;. Even if this is false, a client may be able to steal objects via the techniques described in the &quot;SECURITY&quot; section of the &lt;a href=&quot;gitnamespaces&quot;&gt;gitnamespaces[7]&lt;/a&gt; man page; it&amp;rsquo;s best to keep private data in a separate repository.</source>
          <target state="translated">Cuando &lt;code&gt;uploadpack.hideRefs&lt;/code&gt; est&amp;eacute; en vigor, permita que &lt;code&gt;upload-pack&lt;/code&gt; acepte una solicitud de recuperaci&amp;oacute;n que solicite un objeto en la punta de una referencia oculta (de forma predeterminada, dicha solicitud es rechazada). Consulte tambi&amp;eacute;n &lt;code&gt;uploadpack.hideRefs&lt;/code&gt; . Incluso si esto es falso, un cliente puede robar objetos a trav&amp;eacute;s de las t&amp;eacute;cnicas descritas en la secci&amp;oacute;n &quot;SEGURIDAD&quot; de la p&amp;aacute;gina de &lt;a href=&quot;gitnamespaces&quot;&gt;manual&lt;/a&gt; de gitnamespaces [7] ; es mejor mantener los datos privados en un repositorio separado.</target>
        </trans-unit>
        <trans-unit id="5f953a201b0ae4d35f35034718b3114ef928787f" translate="yes" xml:space="preserve">
          <source>When Git doesn&amp;rsquo;t know how to handle a certain transport protocol, it attempts to use the &lt;code&gt;remote-&amp;lt;transport&amp;gt;&lt;/code&gt; remote helper, if one exists. To explicitly request a remote helper, the following syntax may be used:</source>
          <target state="translated">Cuando Git no sabe c&amp;oacute;mo manejar un determinado protocolo de transporte, intenta usar el ayudante remoto &lt;code&gt;remote-&amp;lt;transport&amp;gt;&lt;/code&gt; remoto, si existe. Para solicitar expl&amp;iacute;citamente un ayudante remoto, se puede utilizar la siguiente sintaxis:</target>
        </trans-unit>
        <trans-unit id="cf58a154a8f8fa8889640812d376b7964ce7bef2" translate="yes" xml:space="preserve">
          <source>When Git encounters a URL of the form &lt;code&gt;&amp;lt;transport&amp;gt;://&amp;lt;address&amp;gt;&lt;/code&gt;, where &lt;code&gt;&amp;lt;transport&amp;gt;&lt;/code&gt; is a protocol that it cannot handle natively, it automatically invokes &lt;code&gt;git remote-&amp;lt;transport&amp;gt;&lt;/code&gt; with the full URL as the second argument. If such a URL is encountered directly on the command line, the first argument is the same as the second, and if it is encountered in a configured remote, the first argument is the name of that remote.</source>
          <target state="translated">Cuando Git encuentra una URL con el formato &lt;code&gt;&amp;lt;transport&amp;gt;://&amp;lt;address&amp;gt;&lt;/code&gt; , donde &lt;code&gt;&amp;lt;transport&amp;gt;&lt;/code&gt; es un protocolo que no puede manejar de forma nativa, autom&amp;aacute;ticamente invoca &lt;code&gt;git remote-&amp;lt;transport&amp;gt;&lt;/code&gt; con la URL completa como segundo argumento. Si dicha URL se encuentra directamente en la l&amp;iacute;nea de comando, el primer argumento es el mismo que el segundo, y si se encuentra en un control remoto configurado, el primer argumento es el nombre de ese control remoto.</target>
        </trans-unit>
        <trans-unit id="27018e5bb4c8622ebcfed2f81b80284203c3bc2f" translate="yes" xml:space="preserve">
          <source>When Git encounters the first file that needs to be cleaned or smudged, it starts the filter and performs the handshake. In the handshake, the welcome message sent by Git is &quot;git-filter-client&quot;, only version 2 is supported, and the supported capabilities are &quot;clean&quot;, &quot;smudge&quot;, and &quot;delay&quot;.</source>
          <target state="translated">Cuando Git se encuentra con el primer archivo que necesita ser limpiado o manchado,inicia el filtro y realiza el apretón de manos.En el apretón de manos,el mensaje de bienvenida enviado por Git es &quot;git-filter-client&quot;,sólo la versión 2 está soportada,y las capacidades soportadas son &quot;clean&quot;,&quot;smudge&quot;,y &quot;delay&quot;.</target>
        </trans-unit>
        <trans-unit id="f51f886a7edb2e397d8670010685e9d17fb9bc09" translate="yes" xml:space="preserve">
          <source>When Git needs authentication for a particular URL context, credential-store will consider that context a pattern to match against each entry in the credentials file. If the protocol, hostname, and username (if we already have one) match, then the password is returned to Git. See the discussion of configuration in &lt;a href=&quot;gitcredentials&quot;&gt;gitcredentials[7]&lt;/a&gt; for more information.</source>
          <target state="translated">Cuando Git necesita autenticaci&amp;oacute;n para un contexto de URL en particular, credential-store considerar&amp;aacute; ese contexto como un patr&amp;oacute;n para coincidir con cada entrada en el archivo de credenciales. Si el protocolo, el nombre de host y el nombre de usuario (si ya tenemos uno) coinciden, la contrase&amp;ntilde;a se devuelve a Git. Vea la discusi&amp;oacute;n de la configuraci&amp;oacute;n en &lt;a href=&quot;gitcredentials&quot;&gt;gitcredentials [7]&lt;/a&gt; para m&amp;aacute;s informaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="fbdc4494c8c569621bd35073fd02055c267f7e54" translate="yes" xml:space="preserve">
          <source>When Git needs to show you a diff for the path with &lt;code&gt;diff&lt;/code&gt; attribute set to &lt;code&gt;jcdiff&lt;/code&gt;, it calls the command you specified with the above configuration, i.e. &lt;code&gt;j-c-diff&lt;/code&gt;, with 7 parameters, just like &lt;code&gt;GIT_EXTERNAL_DIFF&lt;/code&gt; program is called. See &lt;a href=&quot;git&quot;&gt;git[1]&lt;/a&gt; for details.</source>
          <target state="translated">Cuando Git necesita mostrarle una diferencia para la ruta con el atributo &lt;code&gt;diff&lt;/code&gt; establecido en &lt;code&gt;jcdiff&lt;/code&gt; , llama al comando que especific&amp;oacute; con la configuraci&amp;oacute;n anterior, es decir, &lt;code&gt;j-c-diff&lt;/code&gt; , con 7 par&amp;aacute;metros, al igual que se llama al programa &lt;code&gt;GIT_EXTERNAL_DIFF&lt;/code&gt; . Consulte &lt;a href=&quot;git&quot;&gt;git [1]&lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="bb3065603615c6a64dfcb623c10f42c6b9e417fa" translate="yes" xml:space="preserve">
          <source>When a &lt;code&gt;git push --signed&lt;/code&gt; sent a push certificate with a &quot;nonce&quot; that was issued by a receive-pack serving the same repository within this many seconds, export the &quot;nonce&quot; found in the certificate to &lt;code&gt;GIT_PUSH_CERT_NONCE&lt;/code&gt; to the hooks (instead of what the receive-pack asked the sending side to include). This may allow writing checks in &lt;code&gt;pre-receive&lt;/code&gt; and &lt;code&gt;post-receive&lt;/code&gt; a bit easier. Instead of checking &lt;code&gt;GIT_PUSH_CERT_NONCE_SLOP&lt;/code&gt; environment variable that records by how many seconds the nonce is stale to decide if they want to accept the certificate, they only can check &lt;code&gt;GIT_PUSH_CERT_NONCE_STATUS&lt;/code&gt; is &lt;code&gt;OK&lt;/code&gt;.</source>
          <target state="translated">Cuando un &lt;code&gt;git push --signed&lt;/code&gt; envi&amp;oacute; un certificado push con un &quot;nonce&quot; que fue emitido por un paquete de recepci&amp;oacute;n que sirve al mismo repositorio dentro de estos muchos segundos, exporte el &quot;nonce&quot; que se encuentra en el certificado a &lt;code&gt;GIT_PUSH_CERT_NONCE&lt;/code&gt; a los hooks (en lugar de lo que el paquete de recepci&amp;oacute;n pidi&amp;oacute; al lado remitente que incluyera). Esto puede permitir que la emisi&amp;oacute;n de cheques &lt;code&gt;pre-receive&lt;/code&gt; y &lt;code&gt;post-receive&lt;/code&gt; sea ​​m&amp;aacute;s f&amp;aacute;cil. En lugar de verificar la variable de entorno &lt;code&gt;GIT_PUSH_CERT_NONCE_SLOP&lt;/code&gt; que registra cu&amp;aacute;ntos segundos est&amp;aacute; obsoleto el nonce para decidir si quieren aceptar el certificado, solo pueden verificar que &lt;code&gt;GIT_PUSH_CERT_NONCE_STATUS&lt;/code&gt; est&amp;eacute; &lt;code&gt;OK&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f34a76491c47ddfcf2959dd6944574eeda479afa" translate="yes" xml:space="preserve">
          <source>When a command has finished, and the client has received the entire response from the server, a client can either request that another command be executed or can terminate the connection. A client may optionally send an empty request consisting of just a flush-pkt to indicate that no more requests will be made.</source>
          <target state="translated">Cuando un comando ha terminado,y el cliente ha recibido toda la respuesta del servidor,un cliente puede solicitar que se ejecute otro comando o puede terminar la conexión.Un cliente puede opcionalmente enviar una solicitud vacía que consista sólo en un flush-pkt para indicar que no se harán más solicitudes.</target>
        </trans-unit>
        <trans-unit id="98e606d10b24cc0c03b08a4efd9e014e2a7d092f" translate="yes" xml:space="preserve">
          <source>When a commit is created in this state, the branch is updated to refer to the new commit. Specifically, &lt;code&gt;git commit&lt;/code&gt; creates a new commit &lt;code&gt;d&lt;/code&gt;, whose parent is commit &lt;code&gt;c&lt;/code&gt;, and then updates branch &lt;code&gt;master&lt;/code&gt; to refer to new commit &lt;code&gt;d&lt;/code&gt;. &lt;code&gt;HEAD&lt;/code&gt; still refers to branch &lt;code&gt;master&lt;/code&gt; and so indirectly now refers to commit &lt;code&gt;d&lt;/code&gt;:</source>
          <target state="translated">Cuando se crea una confirmaci&amp;oacute;n en este estado, la rama se actualiza para hacer referencia a la nueva confirmaci&amp;oacute;n. Espec&amp;iacute;ficamente, &lt;code&gt;git commit&lt;/code&gt; crea una nueva confirmaci&amp;oacute;n &lt;code&gt;d&lt;/code&gt; , cuyo padre es la confirmaci&amp;oacute;n &lt;code&gt;c&lt;/code&gt; , y luego actualiza la rama &lt;code&gt;master&lt;/code&gt; para hacer referencia a la nueva confirmaci&amp;oacute;n &lt;code&gt;d&lt;/code&gt; . &lt;code&gt;HEAD&lt;/code&gt; todav&amp;iacute;a se refiere al &lt;code&gt;master&lt;/code&gt; rama y, por lo tanto, indirectamente ahora se refiere al compromiso &lt;code&gt;d&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="b5e6d106b45c449ef3f9978fa7e9a2c319abd6d7" translate="yes" xml:space="preserve">
          <source>When a conflict occurs while rebasing, rebase stops and asks the user to resolve. Since the user may need to make notable changes while resolving conflicts, after conflicts are resolved and the user has run &lt;code&gt;git rebase --continue&lt;/code&gt;, the rebase should open an editor and ask the user to update the commit message. The merge backend does this, while the apply backend blindly applies the original commit message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1d656a10ad8d92cd23d5675fa9c3ba2b92a8d6f" translate="yes" xml:space="preserve">
          <source>When a curl trace is enabled (see &lt;code&gt;GIT_TRACE_CURL&lt;/code&gt; above), do not dump data (that is, only dump info lines and headers).</source>
          <target state="translated">Cuando se habilita un rastreo de rizo (ver &lt;code&gt;GIT_TRACE_CURL&lt;/code&gt; arriba), no vuelque datos (es decir, solo vuelque l&amp;iacute;neas de informaci&amp;oacute;n y encabezados).</target>
        </trans-unit>
        <trans-unit id="855748d09cda03242c615ed9f83d928cff4dd252" translate="yes" xml:space="preserve">
          <source>When a fetch mirror is created with &lt;code&gt;--mirror=fetch&lt;/code&gt;, the refs will not be stored in the &lt;code&gt;refs/remotes/&lt;/code&gt; namespace, but rather everything in &lt;code&gt;refs/&lt;/code&gt; on the remote will be directly mirrored into &lt;code&gt;refs/&lt;/code&gt; in the local repository. This option only makes sense in bare repositories, because a fetch would overwrite any local commits.</source>
          <target state="translated">Cuando se crea un espejo de recuperaci&amp;oacute;n con &lt;code&gt;--mirror=fetch&lt;/code&gt; , las referencias no se almacenar&amp;aacute;n en el espacio de nombres refs / remotes &lt;code&gt;refs/remotes/&lt;/code&gt; , sino que todo lo que est&amp;eacute; en &lt;code&gt;refs/&lt;/code&gt; en el control remoto se reflejar&amp;aacute; directamente en &lt;code&gt;refs/&lt;/code&gt; en el repositorio local. Esta opci&amp;oacute;n solo tiene sentido en repositorios desnudos, porque una recuperaci&amp;oacute;n sobrescribir&amp;iacute;a cualquier confirmaci&amp;oacute;n local.</target>
        </trans-unit>
        <trans-unit id="747511f053f093bdd8637c2efa65029ba86d5e79" translate="yes" xml:space="preserve">
          <source>When a git process is a (direct or indirect) child of another git process, it inherits Trace2 context information. This allows the child to print the command hierarchy. This example shows gc as child[3] of fetch. When the gc process reports its name as &quot;gc&quot;, it also reports the hierarchy as &quot;fetch/gc&quot;. (In this example, trace2 messages from the child process is indented for clarity.)</source>
          <target state="translated">Cuando un proceso de git es hijo (directo o indirecto)de otro proceso de git,hereda la información de contexto de Trace2.Esto permite al hijo imprimir la jerarquía de comandos.Este ejemplo muestra a gc como hijo[3]de fetch.Cuando el proceso gc reporta su nombre como &quot;gc&quot;,también reporta la jerarquía como &quot;fetch/gc&quot;.(En este ejemplo,los mensajes de trace2 del proceso hijo están indentados para mayor claridad).</target>
        </trans-unit>
        <trans-unit id="dcc866e382263d0b053b9eb6226d8321d2b6f3a3" translate="yes" xml:space="preserve">
          <source>When a helper is executed, it will have one &quot;operation&quot; argument appended to its command line, which is one of:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79294381fcaa0a0dccaa2b41ac29dc7daa74e3f5" translate="yes" xml:space="preserve">
          <source>When a local branch is started off a remote-tracking branch, Git sets up the branch (specifically the &lt;code&gt;branch.&amp;lt;name&amp;gt;.remote&lt;/code&gt; and &lt;code&gt;branch.&amp;lt;name&amp;gt;.merge&lt;/code&gt; configuration entries) so that &lt;code&gt;git pull&lt;/code&gt; will appropriately merge from the remote-tracking branch. This behavior may be changed via the global &lt;code&gt;branch.autoSetupMerge&lt;/code&gt; configuration flag. That setting can be overridden by using the &lt;code&gt;--track&lt;/code&gt; and &lt;code&gt;--no-track&lt;/code&gt; options, and changed later using &lt;code&gt;git branch --set-upstream-to&lt;/code&gt;.</source>
          <target state="translated">Cuando una sucursal local se inicia desde una sucursal de seguimiento remoto, Git configura la sucursal (espec&amp;iacute;ficamente la &lt;code&gt;branch.&amp;lt;name&amp;gt;.remote&lt;/code&gt; y la &lt;code&gt;branch.&amp;lt;name&amp;gt;.merge&lt;/code&gt; entradas de configuraci&amp;oacute;n) para que &lt;code&gt;git pull&lt;/code&gt; se fusione apropiadamente desde el remoto- rama de seguimiento. Este comportamiento se puede cambiar mediante el &lt;code&gt;branch.autoSetupMerge&lt;/code&gt; configuraci&amp;oacute;n global branch.autoSetupMerge . Esa configuraci&amp;oacute;n puede &lt;code&gt;--track&lt;/code&gt; usando las opciones --track y &lt;code&gt;--no-track&lt;/code&gt; , y cambiarse m&amp;aacute;s tarde usando &lt;code&gt;git branch --set-upstream-to&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dbb99a5451930fe8366dedb022737c46385ca3a6" translate="yes" xml:space="preserve">
          <source>When a merge commit is included by &lt;code&gt;--show-pulls&lt;/code&gt;, the merge is treated as if it &quot;pulled&quot; the change from another branch. When using &lt;code&gt;--show-pulls&lt;/code&gt; on this example (and no other options) the resulting graph is:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e12783acd89ac9262429bc89fcf85d9b95e88c1" translate="yes" xml:space="preserve">
          <source>When a merge conflict happens during switching branches with the &lt;code&gt;-m&lt;/code&gt; option, you would see something like this:</source>
          <target state="translated">Cuando ocurre un conflicto de fusi&amp;oacute;n durante el cambio de ramas con la opci&amp;oacute;n &lt;code&gt;-m&lt;/code&gt; , ver&amp;aacute; algo como esto:</target>
        </trans-unit>
        <trans-unit id="8b8f6236a48634fd451e67557b1ed432c992a4a6" translate="yes" xml:space="preserve">
          <source>When a merge conflict happens, the index entries for conflicting paths are left unmerged, and you need to resolve the conflicts and mark the resolved paths with &lt;code&gt;git add&lt;/code&gt; (or &lt;code&gt;git rm&lt;/code&gt; if the merge should result in deletion of the path).</source>
          <target state="translated">Cuando ocurre un conflicto de fusi&amp;oacute;n, las entradas de &amp;iacute;ndice para las rutas en conflicto se dejan sin fusionar, y debe resolver los conflictos y marcar las rutas resueltas con &lt;code&gt;git add&lt;/code&gt; (o &lt;code&gt;git rm&lt;/code&gt; si la fusi&amp;oacute;n debe resultar en la eliminaci&amp;oacute;n de la ruta).</target>
        </trans-unit>
        <trans-unit id="054b9e9957838ff74728498487ffff5f26346d88" translate="yes" xml:space="preserve">
          <source>When a merge isn&amp;rsquo;t resolved automatically, Git leaves the index and the working tree in a special state that gives you all the information you need to help resolve the merge.</source>
          <target state="translated">Cuando una combinaci&amp;oacute;n no se resuelve autom&amp;aacute;ticamente, Git deja el &amp;iacute;ndice y el &amp;aacute;rbol de trabajo en un estado especial que le brinda toda la informaci&amp;oacute;n que necesita para ayudar a resolver la combinaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="1d6b6e4ed4a39cb92155b19d26f3a8478b8d6d5c" translate="yes" xml:space="preserve">
          <source>When a new branch is created with &lt;code&gt;git branch&lt;/code&gt;, &lt;code&gt;git switch&lt;/code&gt; or &lt;code&gt;git checkout&lt;/code&gt; that tracks another branch, this variable tells Git to set up pull to rebase instead of merge (see &quot;branch.&amp;lt;name&amp;gt;.rebase&quot;). When &lt;code&gt;never&lt;/code&gt;, rebase is never automatically set to true. When &lt;code&gt;local&lt;/code&gt;, rebase is set to true for tracked branches of other local branches. When &lt;code&gt;remote&lt;/code&gt;, rebase is set to true for tracked branches of remote-tracking branches. When &lt;code&gt;always&lt;/code&gt;, rebase will be set to true for all tracking branches. See &quot;branch.autoSetupMerge&quot; for details on how to set up a branch to track another branch. This option defaults to never.</source>
          <target state="translated">Cuando se crea una nueva rama con &lt;code&gt;git branch&lt;/code&gt; , &lt;code&gt;git switch&lt;/code&gt; o &lt;code&gt;git checkout&lt;/code&gt; que rastrea otra rama, esta variable le dice a Git que configure pull to rebase en lugar de merge (ver &quot;branch. &amp;lt;nombre&amp;gt; .rebase&quot;). Cuando &lt;code&gt;never&lt;/code&gt; , rebase nunca se establece autom&amp;aacute;ticamente en verdadero. Cuando es &lt;code&gt;local&lt;/code&gt; , rebase se establece en verdadero para las ramas rastreadas de otras ramas locales. Cuando es &lt;code&gt;remote&lt;/code&gt; , rebase se establece en verdadero para las ramas rastreadas de ramas de rastreo remoto. Cuando &lt;code&gt;always&lt;/code&gt; , rebase se establecer&amp;aacute; en verdadero para todas las ramas de seguimiento. Consulte &quot;branch.autoSetupMerge&quot; para obtener detalles sobre c&amp;oacute;mo configurar una sucursal para rastrear otra sucursal. Esta opci&amp;oacute;n tiene el valor predeterminado de nunca.</target>
        </trans-unit>
        <trans-unit id="ed0adff8e63a6741e1694d5ebc304264bd392424" translate="yes" xml:space="preserve">
          <source>When a patch failure occurs, &amp;lt;msg&amp;gt; will be printed to the screen before exiting. This overrides the standard message informing you to use &lt;code&gt;--continue&lt;/code&gt; or &lt;code&gt;--skip&lt;/code&gt; to handle the failure. This is solely for internal use between &lt;code&gt;git rebase&lt;/code&gt; and &lt;code&gt;git am&lt;/code&gt;.</source>
          <target state="translated">Cuando se produce un error de parche, se imprimir&amp;aacute; &amp;lt;msg&amp;gt; en la pantalla antes de salir. Esto anula el mensaje est&amp;aacute;ndar que le informa que use &lt;code&gt;--continue&lt;/code&gt; o &lt;code&gt;--skip&lt;/code&gt; para manejar la falla. Esto es &amp;uacute;nicamente para uso interno entre &lt;code&gt;git rebase&lt;/code&gt; y &lt;code&gt;git am&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d5b066fa036c4bb98c79472fbdf38de3d119f100" translate="yes" xml:space="preserve">
          <source>When a patch is part of an ongoing discussion, the patch generated by &lt;code&gt;git format-patch&lt;/code&gt; can be tweaked to take advantage of the &lt;code&gt;git am --scissors&lt;/code&gt; feature. After your response to the discussion comes a line that consists solely of &quot;&lt;code&gt;-- &amp;gt;8 --&lt;/code&gt;&quot; (scissors and perforation), followed by the patch with unnecessary header fields removed:</source>
          <target state="translated">Cuando un parche es parte de una discusi&amp;oacute;n en curso, el parche generado por &lt;code&gt;git format-patch&lt;/code&gt; se puede modificar para aprovechar la funci&amp;oacute;n &lt;code&gt;git am --scissors&lt;/code&gt; . Despu&amp;eacute;s de su respuesta a la discusi&amp;oacute;n, aparece una l&amp;iacute;nea que consta &amp;uacute;nicamente de &quot; &lt;code&gt;-- &amp;gt;8 --&lt;/code&gt; &quot; (tijeras y perforaci&amp;oacute;n), seguida del parche con los campos de encabezado innecesarios eliminados:</target>
        </trans-unit>
        <trans-unit id="f3cb24e54c9837370739d06bd25b8c911a05ee6b" translate="yes" xml:space="preserve">
          <source>When a path is in the &quot;unmerged&quot; state, running &lt;code&gt;git update-index&lt;/code&gt; for that path tells Git to mark the path resolved.</source>
          <target state="translated">Cuando una ruta est&amp;aacute; en el estado &quot;sin fusionar&quot;, ejecutar &lt;code&gt;git update-index&lt;/code&gt; para esa ruta le dice a Git que marque la ruta como resuelta.</target>
        </trans-unit>
        <trans-unit id="f8965008f9824bf8da0b033710c2d7ac1f3f6568" translate="yes" xml:space="preserve">
          <source>When a pure mode change is encountered (which has no index information), the information is read from the current index instead.</source>
          <target state="translated">Cuando se encuentra un cambio de modo puro (que no tiene información de índice),la información se lee del índice actual en su lugar.</target>
        </trans-unit>
        <trans-unit id="ef4651b07e5b8cb97cb93de85df1d7e556426d24" translate="yes" xml:space="preserve">
          <source>When a push mirror is created with &lt;code&gt;--mirror=push&lt;/code&gt;, then &lt;code&gt;git push&lt;/code&gt; will always behave as if &lt;code&gt;--mirror&lt;/code&gt; was passed.</source>
          <target state="translated">Cuando se crea un espejo push con &lt;code&gt;--mirror=push&lt;/code&gt; , &lt;code&gt;git push&lt;/code&gt; siempre se comportar&amp;aacute; como si se &lt;code&gt;--mirror&lt;/code&gt; pasado --mirror .</target>
        </trans-unit>
        <trans-unit id="deb13d30f8ba66c920f6495f36b99921916b0fbc" translate="yes" xml:space="preserve">
          <source>When a rebase required merge conflicts to be resolved, compare the changes introduced by the rebase directly afterwards using:</source>
          <target state="translated">Cuando un rebase requiera resolver conflictos de fusión,compare los cambios introducidos por el rebase directamente después de utilizarlo:</target>
        </trans-unit>
        <trans-unit id="350766930233515327656bc7b70b13214a7aa33c" translate="yes" xml:space="preserve">
          <source>When a ref is updated, reflog entries are created to keep track of the reason why the ref was updated (which is typically the name of the high-level command that updated the ref), in addition to the old and new values of the ref. A scripted Porcelain command can use set_reflog_action helper function in &lt;code&gt;git-sh-setup&lt;/code&gt; to set its name to this variable when it is invoked as the top level command by the end user, to be recorded in the body of the reflog.</source>
          <target state="translated">Cuando se actualiza una ref, se crean entradas de reflog para realizar un seguimiento del motivo por el que se actualiz&amp;oacute; la ref (que suele ser el nombre del comando de alto nivel que actualiz&amp;oacute; la ref), adem&amp;aacute;s de los valores antiguos y nuevos de la ref . Un comando de Porcelain con script puede usar la funci&amp;oacute;n auxiliar set_reflog_action en &lt;code&gt;git-sh-setup&lt;/code&gt; para establecer su nombre en esta variable cuando el usuario final lo invoca como comando de nivel superior, para que se registre en el cuerpo del reflog.</target>
        </trans-unit>
        <trans-unit id="0a564cf0d83332d2cd6fd3ac884cec9942b078c7" translate="yes" xml:space="preserve">
          <source>When a repository is synchronized via &lt;code&gt;git push&lt;/code&gt; and &lt;code&gt;git pull&lt;/code&gt; objects packed in the source repository are usually stored unpacked in the destination. While this allows you to use different packing strategies on both ends, it also means you may need to repack both repositories every once in a while.</source>
          <target state="translated">Cuando un repositorio se sincroniza a trav&amp;eacute;s de &lt;code&gt;git push&lt;/code&gt; y &lt;code&gt;git pull&lt;/code&gt; objetos git pull empaquetados en el repositorio de origen generalmente se almacenan descomprimidos en el destino. Si bien esto le permite utilizar diferentes estrategias de empaquetado en ambos extremos, tambi&amp;eacute;n significa que es posible que deba volver a empaquetar ambos repositorios de vez en cuando.</target>
        </trans-unit>
        <trans-unit id="89c3a76b400f69bc409951d41f44580e1ce5b550" translate="yes" xml:space="preserve">
          <source>When a scripting language specific quoting is in effect, everything between a top-level opening atom and its matching %(end) is evaluated according to the semantics of the opening atom and only its result from the top-level is quoted.</source>
          <target state="translated">Cuando una cita específica de un lenguaje de scripts está en efecto,todo entre un átomo de apertura de nivel superior y su %(final)correspondiente se evalúa de acuerdo a la semántica del átomo de apertura y sólo se cita su resultado del nivel superior.</target>
        </trans-unit>
        <trans-unit id="1d0d6b410e7d083b396401fa9485dd3214d89132" translate="yes" xml:space="preserve">
          <source>When a variable is said to take a boolean value, many synonyms are accepted for &lt;code&gt;true&lt;/code&gt; and &lt;code&gt;false&lt;/code&gt;; these are all case-insensitive.</source>
          <target state="translated">Cuando se dice que una variable toma un valor booleano, se aceptan muchos sin&amp;oacute;nimos para &lt;code&gt;true&lt;/code&gt; y &lt;code&gt;false&lt;/code&gt; ; todos estos distinguen entre may&amp;uacute;sculas y min&amp;uacute;sculas.</target>
        </trans-unit>
        <trans-unit id="085e4eddfd9be8c4f3b576466769939a6475604e" translate="yes" xml:space="preserve">
          <source>When accepting a new code drop for a vendor branch, you probably want to record both the removal of paths and additions of new paths as well as modifications of existing paths.</source>
          <target state="translated">Cuando se acepta un nuevo código de caída para una sucursal de un proveedor,es probable que se quiera registrar tanto la eliminación de rutas y las adiciones de nuevas rutas como las modificaciones de las rutas existentes.</target>
        </trans-unit>
        <trans-unit id="98d4ec1ab85d43886cf359223c5c65ec41aa50b0" translate="yes" xml:space="preserve">
          <source>When accepting a signed push (see &lt;a href=&quot;git-push&quot;&gt;git-push[1]&lt;/a&gt;), the signed push certificate is stored in a blob and an environment variable &lt;code&gt;GIT_PUSH_CERT&lt;/code&gt; can be consulted for its object name. See the description of &lt;code&gt;post-receive&lt;/code&gt; hook for an example. In addition, the certificate is verified using GPG and the result is exported with the following environment variables:</source>
          <target state="translated">Al aceptar una inserci&amp;oacute;n firmada (ver &lt;a href=&quot;git-push&quot;&gt;git-push [1]&lt;/a&gt; ), el certificado push firmado se almacena en un blob y se puede consultar una variable de entorno &lt;code&gt;GIT_PUSH_CERT&lt;/code&gt; para su nombre de objeto. Consulte la descripci&amp;oacute;n del &lt;code&gt;post-receive&lt;/code&gt; para ver un ejemplo. Adem&amp;aacute;s, el certificado se verifica mediante GPG y el resultado se exporta con las siguientes variables de entorno:</target>
        </trans-unit>
        <trans-unit id="5d78f94855bee5654824b328b5c74fbbbf68d2ce" translate="yes" xml:space="preserve">
          <source>When acquiring credentials, consider the &quot;path&quot; component of an http or https URL to be important. Defaults to false. See &lt;a href=&quot;gitcredentials&quot;&gt;gitcredentials[7]&lt;/a&gt; for more information.</source>
          <target state="translated">Al adquirir credenciales, considere que el componente &quot;ruta&quot; de una URL http o https es importante. El valor predeterminado es falso. Consulte &lt;a href=&quot;gitcredentials&quot;&gt;gitcredentials [7]&lt;/a&gt; para obtener m&amp;aacute;s informaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="36125e3b1dadcf8415f427875bfbe6e3edb592ec" translate="yes" xml:space="preserve">
          <source>When adding notes to an object that already has notes, overwrite the existing notes (instead of aborting).</source>
          <target state="translated">Cuando añada notas a un objeto que ya tiene notas,sobrescriba las notas existentes (en lugar de abortar).</target>
        </trans-unit>
        <trans-unit id="31a6893d1f507cb4bce24b6631d6f67bbe0ca8c3" translate="yes" xml:space="preserve">
          <source>When advertising tips of available history from an alternate, use the shell to execute the specified command instead of &lt;a href=&quot;git-for-each-ref&quot;&gt;git-for-each-ref[1]&lt;/a&gt;. The first argument is the absolute path of the alternate. Output must contain one hex object id per line (i.e., the same as produced by &lt;code&gt;git for-each-ref
--format='%(objectname)'&lt;/code&gt;).</source>
          <target state="translated">Cuando anuncie consejos sobre el historial disponible de una alternativa, utilice el shell para ejecutar el comando especificado en lugar de &lt;a href=&quot;git-for-each-ref&quot;&gt;git-for-each-ref [1]&lt;/a&gt; . El primer argumento es la ruta absoluta de la alternativa. La salida debe contener un ID de objeto hexadecimal por l&amp;iacute;nea (es decir, el mismo que produce &lt;code&gt;git for-each-ref --format='%(objectname)'&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="aee562f05eaa47b0988f9365fa4403a675334ce1" translate="yes" xml:space="preserve">
          <source>When an argument can be misunderstood as either a revision or a path, they can be disambiguated by placing &lt;code&gt;--&lt;/code&gt; between them. E.g. &lt;code&gt;git diff -- HEAD&lt;/code&gt; is, &quot;I have a file called HEAD in my work tree. Please show changes between the version I staged in the index and what I have in the work tree for that file&quot;, not &quot;show difference between the HEAD commit and the work tree as a whole&quot;. You can say &lt;code&gt;git diff HEAD --&lt;/code&gt; to ask for the latter.</source>
          <target state="translated">Cuando un argumento puede malinterpretarse como una revisi&amp;oacute;n o un camino, se puede eliminar la ambig&amp;uuml;edad colocando &lt;code&gt;--&lt;/code&gt; entre ellos. Por ejemplo, &lt;code&gt;git diff -- HEAD&lt;/code&gt; es, &quot;Tengo un archivo llamado HEAD en mi &amp;aacute;rbol de trabajo. Por favor, muestre los cambios entre la versi&amp;oacute;n que prepar&amp;eacute; en el &amp;iacute;ndice y lo que tengo en el &amp;aacute;rbol de trabajo para ese archivo&quot;, no &quot;muestre la diferencia entre HEAD commit y el &amp;aacute;rbol de trabajo en su conjunto &quot;. Puede decir &lt;code&gt;git diff HEAD --&lt;/code&gt; para solicitar este &amp;uacute;ltimo.</target>
        </trans-unit>
        <trans-unit id="8ed1e316e9f06aa8f0fbb451acc5e5dd1d53d618" translate="yes" xml:space="preserve">
          <source>When an argument may be understood either as a reference or as a file name, choose to understand it as a format-patch argument (&lt;code&gt;--format-patch&lt;/code&gt;) or as a file name (&lt;code&gt;--no-format-patch&lt;/code&gt;). By default, when such a conflict occurs, git send-email will fail.</source>
          <target state="translated">Cuando un argumento puede entenderse como una referencia o como un nombre de archivo, elija entenderlo como un argumento de parche de formato ( &lt;code&gt;--format-patch&lt;/code&gt; ) o como un nombre de archivo ( &lt;code&gt;--no-format-patch&lt;/code&gt; ). De forma predeterminada, cuando se produce un conflicto de este tipo, git send-email fallar&amp;aacute;.</target>
        </trans-unit>
        <trans-unit id="daa45faaafc93f57dcfa6219226fd8a2224c7353" translate="yes" xml:space="preserve">
          <source>When an interactive command (such as &lt;code&gt;git add --patch&lt;/code&gt;) shows a colorized diff, git will pipe the diff through the shell command defined by this configuration variable. The command may mark up the diff further for human consumption, provided that it retains a one-to-one correspondence with the lines in the original diff. Defaults to disabled (no filtering).</source>
          <target state="translated">Cuando un comando interactivo (como &lt;code&gt;git add --patch&lt;/code&gt; ) muestra una diferencia coloreada, git canalizar&amp;aacute; la diferencia a trav&amp;eacute;s del comando de shell definido por esta variable de configuraci&amp;oacute;n. El comando puede marcar a&amp;uacute;n m&amp;aacute;s el diff para consumo humano, siempre que mantenga una correspondencia uno a uno con las l&amp;iacute;neas del diff original. El valor predeterminado es deshabilitado (sin filtrado).</target>
        </trans-unit>
        <trans-unit id="66bd09d84d7f728fe64b22afe9c1d5b02faccf2f" translate="yes" xml:space="preserve">
          <source>When an optional Git branch name (or a Git commit object name) is specified as an argument, the subcommand works on the specified branch, not on the current branch.</source>
          <target state="translated">Cuando se especifica un nombre de rama Git opcional (o un nombre de objeto de confirmación Git)como argumento,el subcomando trabaja en la rama especificada,no en la rama actual.</target>
        </trans-unit>
        <trans-unit id="54600ca959ccb5286a6125f852754e8a441f6246" translate="yes" xml:space="preserve">
          <source>When an update changes a branch (or more in general, a ref) that used to point at commit A to point at another commit B, it is called a fast-forward update if and only if B is a descendant of A.</source>
          <target state="translated">Cuando una actualización cambia una rama (o más en general,un ref)que solía apuntar a la comisión A para apuntar a otra comisión B,se denomina actualización rápida si y sólo si B es descendiente de A.</target>
        </trans-unit>
        <trans-unit id="b999dfcfa57d71ee62dbc42f4d8a0527e63491d1" translate="yes" xml:space="preserve">
          <source>When applying a patch, detect a new or modified line that has whitespace errors. What are considered whitespace errors is controlled by &lt;code&gt;core.whitespace&lt;/code&gt; configuration. By default, trailing whitespaces (including lines that solely consist of whitespaces) and a space character that is immediately followed by a tab character inside the initial indent of the line are considered whitespace errors.</source>
          <target state="translated">Al aplicar un parche, detecte una l&amp;iacute;nea nueva o modificada que tenga errores de espacio en blanco. Lo que se considera errores de espacios en blanco se controla mediante la configuraci&amp;oacute;n de &lt;code&gt;core.whitespace&lt;/code&gt; . De forma predeterminada, los espacios en blanco finales (incluidas las l&amp;iacute;neas que constan &amp;uacute;nicamente de espacios en blanco) y un car&amp;aacute;cter de espacio seguido inmediatamente por un car&amp;aacute;cter de tabulaci&amp;oacute;n dentro de la sangr&amp;iacute;a inicial de la l&amp;iacute;nea se consideran errores de espacio en blanco.</target>
        </trans-unit>
        <trans-unit id="b3581e25b4edfc3eae85f688560f931e31414d31" translate="yes" xml:space="preserve">
          <source>When applying a patch, ignore additions made by the patch. This can be used to extract the common part between two files by first running &lt;code&gt;diff&lt;/code&gt; on them and applying the result with this option, which would apply the deletion part but not the addition part.</source>
          <target state="translated">Cuando aplique un parche, ignore las adiciones hechas por el parche. Esto se puede usar para extraer la parte com&amp;uacute;n entre dos archivos ejecutando primero &lt;code&gt;diff&lt;/code&gt; en ellos y aplicando el resultado con esta opci&amp;oacute;n, que aplicar&amp;iacute;a la parte de eliminaci&amp;oacute;n pero no la parte de adici&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="6bf2c606b0bf760a50dfcc2e9e2a1dfc6d6ce1b9" translate="yes" xml:space="preserve">
          <source>When applying a patch, ignore changes in whitespace in context lines if necessary. Context lines will preserve their whitespace, and they will not undergo whitespace fixing regardless of the value of the &lt;code&gt;--whitespace&lt;/code&gt; option. New lines will still be fixed, though.</source>
          <target state="translated">Al aplicar un parche, ignore los cambios en los espacios en blanco en las l&amp;iacute;neas de contexto si es necesario. Las l&amp;iacute;neas de contexto conservar&amp;aacute;n su espacio en blanco y no se someter&amp;aacute;n a la &lt;code&gt;--whitespace&lt;/code&gt; espacios en blanco independientemente del valor de la opci&amp;oacute;n --whitespace . Sin embargo, las l&amp;iacute;neas nuevas a&amp;uacute;n se arreglar&amp;aacute;n.</target>
        </trans-unit>
        <trans-unit id="588f408b6e1e0374e87fb8fe5ff6e5cd0dca42b8" translate="yes" xml:space="preserve">
          <source>When applying the patch only to the working tree, mark new files to be added to the index later (see &lt;code&gt;--intent-to-add&lt;/code&gt; option in &lt;a href=&quot;git-add&quot;&gt;git-add[1]&lt;/a&gt;). This option is ignored unless running in a Git repository and &lt;code&gt;--index&lt;/code&gt; is not specified. Note that &lt;code&gt;--index&lt;/code&gt; could be implied by other options such as &lt;code&gt;--cached&lt;/code&gt; or &lt;code&gt;--3way&lt;/code&gt;.</source>
          <target state="translated">Cuando aplique el parche solo al &amp;aacute;rbol de trabajo, marque los archivos nuevos que se agregar&amp;aacute;n al &amp;iacute;ndice m&amp;aacute;s adelante (consulte la &lt;code&gt;--intent-to-add&lt;/code&gt; en &lt;a href=&quot;git-add&quot;&gt;git-add [1]&lt;/a&gt; ). Esta opci&amp;oacute;n se ignora a menos que se ejecute en un repositorio de Git y no se especifique &lt;code&gt;--index&lt;/code&gt; . Tenga en cuenta que &lt;code&gt;--index&lt;/code&gt; podr&amp;iacute;a estar impl&amp;iacute;cito en otras opciones como &lt;code&gt;--cached&lt;/code&gt; o &lt;code&gt;--3way&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="59fa333bf5332a3a74a0fa1b62097787ae41682d" translate="yes" xml:space="preserve">
          <source>When asking to &lt;code&gt;abort&lt;/code&gt; (which is the default), this program will die when encountering a signed tag. With &lt;code&gt;strip&lt;/code&gt;, the tags will silently be made unsigned, with &lt;code&gt;warn-strip&lt;/code&gt; they will be made unsigned but a warning will be displayed, with &lt;code&gt;verbatim&lt;/code&gt;, they will be silently exported and with &lt;code&gt;warn&lt;/code&gt;, they will be exported, but you will see a warning.</source>
          <target state="translated">Cuando se solicita &lt;code&gt;abort&lt;/code&gt; ar (que es el valor predeterminado), este programa morir&amp;aacute; cuando se encuentre con una etiqueta firmada. Con &lt;code&gt;strip&lt;/code&gt; , las etiquetas se har&amp;aacute;n silenciosamente sin firmar, con &lt;code&gt;warn-strip&lt;/code&gt; se har&amp;aacute;n sin firmar pero se mostrar&amp;aacute; una advertencia, con &lt;code&gt;verbatim&lt;/code&gt; por palabra , se exportar&amp;aacute;n silenciosamente y con &lt;code&gt;warn&lt;/code&gt; , se exportar&amp;aacute;n, pero ver&amp;aacute; una advertencia .</target>
        </trans-unit>
        <trans-unit id="a094fa226ab8da9ad05df22ffe9e8c64cbd9aea9" translate="yes" xml:space="preserve">
          <source>When asking to &lt;code&gt;abort&lt;/code&gt; (which is the default), this program will die when encountering such a tag. With &lt;code&gt;drop&lt;/code&gt; it will omit such tags from the output. With &lt;code&gt;rewrite&lt;/code&gt;, if the tagged object is a commit, it will rewrite the tag to tag an ancestor commit (via parent rewriting; see &lt;a href=&quot;git-rev-list&quot;&gt;git-rev-list[1]&lt;/a&gt;)</source>
          <target state="translated">Al pedir &lt;code&gt;abort&lt;/code&gt; ar (que es el valor predeterminado), este programa morir&amp;aacute; cuando se encuentre con dicha etiqueta. Con &lt;code&gt;drop&lt;/code&gt; omitir&amp;aacute; tales etiquetas de la salida. Con la &lt;code&gt;rewrite&lt;/code&gt; , si el objeto etiquetado es una confirmaci&amp;oacute;n, reescribir&amp;aacute; la etiqueta para etiquetar una confirmaci&amp;oacute;n anterior (a trav&amp;eacute;s de la reescritura principal; consulte &lt;a href=&quot;git-rev-list&quot;&gt;git-rev-list [1]&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="034f3e54dc418fd0aaba391926e4cdc6f9338cc5" translate="yes" xml:space="preserve">
          <source>When called with &lt;code&gt;--incremental&lt;/code&gt; option, the command outputs the result as it is built. The output generally will talk about lines touched by more recent commits first (i.e. the lines will be annotated out of order) and is meant to be used by interactive viewers.</source>
          <target state="translated">Cuando se llama con la opci&amp;oacute;n &lt;code&gt;--incremental&lt;/code&gt; , el comando genera el resultado a medida que se construye. La salida generalmente hablar&amp;aacute; sobre las l&amp;iacute;neas tocadas por confirmaciones m&amp;aacute;s recientes primero (es decir, las l&amp;iacute;neas se anotar&amp;aacute;n fuera de orden) y est&amp;aacute; destinado a ser utilizado por espectadores interactivos.</target>
        </trans-unit>
        <trans-unit id="37ed40c0b9c191bc52be1eea56e95c21c8c30c92" translate="yes" xml:space="preserve">
          <source>When checking out paths from the index, check out stage #2 (&lt;code&gt;ours&lt;/code&gt;) or #3 (&lt;code&gt;theirs&lt;/code&gt;) for unmerged paths.</source>
          <target state="translated">Cuando compruebe las rutas del &amp;iacute;ndice, consulte la etapa # 2 (la &lt;code&gt;ours&lt;/code&gt; ) o la # 3 (la de &lt;code&gt;theirs&lt;/code&gt; ) para ver las rutas no fusionadas.</target>
        </trans-unit>
        <trans-unit id="b2d7eb083886da1526ca38a6780f9e98825df5e6" translate="yes" xml:space="preserve">
          <source>When checking out paths from the index, do not fail upon unmerged entries; instead, unmerged entries are ignored.</source>
          <target state="translated">Al revisar los caminos del índice,no falles en las entradas no fusionadas;en su lugar,las entradas no fusionadas son ignoradas.</target>
        </trans-unit>
        <trans-unit id="87b021689017efd0b4fbe642f48fde6408f7cde4" translate="yes" xml:space="preserve">
          <source>When checking out paths from the index, this option lets you recreate the conflicted merge in the specified paths.</source>
          <target state="translated">Al comprobar las rutas del índice,esta opción le permite recrear la fusión conflictiva en las rutas especificadas.</target>
        </trans-unit>
        <trans-unit id="44968c91f62b2f1c7eb77848556b128eac9d4512" translate="yes" xml:space="preserve">
          <source>When cloning an SVN repository, if none of the options for describing the repository layout is used (--trunk, --tags, --branches, --stdlayout), &lt;code&gt;git svn clone&lt;/code&gt; will create a Git repository with completely linear history, where branches and tags appear as separate directories in the working copy. While this is the easiest way to get a copy of a complete repository, for projects with many branches it will lead to a working copy many times larger than just the trunk. Thus for projects using the standard directory structure (trunk/branches/tags), it is recommended to clone with option &lt;code&gt;--stdlayout&lt;/code&gt;. If the project uses a non-standard structure, and/or if branches and tags are not required, it is easiest to only clone one directory (typically trunk), without giving any repository layout options. If the full history with branches and tags is required, the options &lt;code&gt;--trunk&lt;/code&gt; / &lt;code&gt;--branches&lt;/code&gt; / &lt;code&gt;--tags&lt;/code&gt; must be used.</source>
          <target state="translated">Al clonar un repositorio SVN, si no se utiliza ninguna de las opciones para describir el dise&amp;ntilde;o del repositorio (--trunk, --tags, --branches, --stdlayout), &lt;code&gt;git svn clone&lt;/code&gt; crear&amp;aacute; un repositorio Git con un historial completamente lineal, donde las ramas y las etiquetas aparecen como directorios separados en la copia de trabajo. Si bien esta es la forma m&amp;aacute;s f&amp;aacute;cil de obtener una copia de un repositorio completo, para proyectos con muchas ramas, dar&amp;aacute; lugar a una copia de trabajo muchas veces m&amp;aacute;s grande que solo el tronco. Por lo tanto, para proyectos que usan la estructura de directorios est&amp;aacute;ndar (tronco / ramas / etiquetas), se recomienda clonar con la opci&amp;oacute;n &lt;code&gt;--stdlayout&lt;/code&gt; . Si el proyecto utiliza una estructura no est&amp;aacute;ndar y / o si no se requieren ramas y etiquetas, es m&amp;aacute;s f&amp;aacute;cil clonar solo un directorio (normalmente el tronco), sin dar ninguna opci&amp;oacute;n de dise&amp;ntilde;o del repositorio. Si se requiere el historial completo con ramas y etiquetas, se deben &lt;code&gt;--trunk&lt;/code&gt; las opciones --trunk / &lt;code&gt;--branches&lt;/code&gt; / &lt;code&gt;--tags&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cf5bdc8ee9de0e891bd2e2ffd6ad5374a27fb398" translate="yes" xml:space="preserve">
          <source>When cloning or pulling a repository containing submodules the submodules will not be checked out by default; You can instruct &lt;code&gt;clone&lt;/code&gt; to recurse into submodules. The &lt;code&gt;init&lt;/code&gt; and &lt;code&gt;update&lt;/code&gt; subcommands of &lt;code&gt;git submodule&lt;/code&gt; will maintain submodules checked out and at an appropriate revision in your working tree. Alternatively you can set &lt;code&gt;submodule.recurse&lt;/code&gt; to have &lt;code&gt;checkout&lt;/code&gt; recursing into submodules.</source>
          <target state="translated">Cuando se clona o se extrae un repositorio que contiene subm&amp;oacute;dulos, los subm&amp;oacute;dulos no se desproteger&amp;aacute;n de forma predeterminada; Puede indicarle al &lt;code&gt;clone&lt;/code&gt; que se repita en subm&amp;oacute;dulos. Los subcomandos &lt;code&gt;init&lt;/code&gt; y &lt;code&gt;update&lt;/code&gt; del &lt;code&gt;git submodule&lt;/code&gt; mantendr&amp;aacute;n los subm&amp;oacute;dulos extra&amp;iacute;dos y en una revisi&amp;oacute;n apropiada en su &amp;aacute;rbol de trabajo. Alternativamente, puede configurar &lt;code&gt;submodule.recurse&lt;/code&gt; para que el &lt;code&gt;checkout&lt;/code&gt; repita en subm&amp;oacute;dulos.</target>
        </trans-unit>
        <trans-unit id="2bdda0ba49ff183f8b76fb42fb3146b89e404d42" translate="yes" xml:space="preserve">
          <source>When cloning or pulling a repository containing submodules the submodules will not be checked out by default; you can instruct &lt;code&gt;clone&lt;/code&gt; to recurse into submodules. The &lt;code&gt;init&lt;/code&gt; and &lt;code&gt;update&lt;/code&gt; subcommands of &lt;code&gt;git submodule&lt;/code&gt; will maintain submodules checked out and at an appropriate revision in your working tree. Alternatively you can set &lt;code&gt;submodule.recurse&lt;/code&gt; to have &lt;code&gt;checkout&lt;/code&gt; recursing into submodules (note that &lt;code&gt;submodule.recurse&lt;/code&gt; also affects other Git commands, see &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt; for a complete list).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e96f700dec6ecf67635f001fe97af20a3a1af7ba" translate="yes" xml:space="preserve">
          <source>When combining multiple &lt;code&gt;--contains&lt;/code&gt; and &lt;code&gt;--no-contains&lt;/code&gt; filters, only references that contain at least one of the &lt;code&gt;--contains&lt;/code&gt; commits and contain none of the &lt;code&gt;--no-contains&lt;/code&gt; commits are shown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3693ecef45adf0e594fc21eeb7dc1180a98b303e" translate="yes" xml:space="preserve">
          <source>When combining multiple &lt;code&gt;--merged&lt;/code&gt; and &lt;code&gt;--no-merged&lt;/code&gt; filters, only references that are reachable from at least one of the &lt;code&gt;--merged&lt;/code&gt; commits and from none of the &lt;code&gt;--no-merged&lt;/code&gt; commits are shown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6f5e261fa8e1325a05e77f0fa02cd4e804a016b" translate="yes" xml:space="preserve">
          <source>When committing fixups, consider using &lt;code&gt;merge&lt;/code&gt; to connect the commit(s) which are supplying file revisions to the fixup branch. Doing so will allow tools such as &lt;code&gt;git blame&lt;/code&gt; to track through the real commit history and properly annotate the source files.</source>
          <target state="translated">Cuando realice reparaciones, considere usar &lt;code&gt;merge&lt;/code&gt; para conectar las confirmaciones que proporcionan revisiones de archivos a la rama de reparaci&amp;oacute;n. Hacerlo permitir&amp;aacute; que herramientas como &lt;code&gt;git blame&lt;/code&gt; rastreen el historial de confirmaciones real y anoten correctamente los archivos fuente.</target>
        </trans-unit>
        <trans-unit id="187746ad8497cb1dac2dfe493269450955422d85" translate="yes" xml:space="preserve">
          <source>When committing to svn from Git (as part of &lt;code&gt;set-tree&lt;/code&gt; or &lt;code&gt;dcommit&lt;/code&gt; operations), if the existing log message doesn&amp;rsquo;t already have a &lt;code&gt;From:&lt;/code&gt; or &lt;code&gt;Signed-off-by:&lt;/code&gt; line, append a &lt;code&gt;From:&lt;/code&gt; line based on the Git commit&amp;rsquo;s author string. If you use this, then &lt;code&gt;--use-log-author&lt;/code&gt; will retrieve a valid author string for all commits.</source>
          <target state="translated">Al comprometerse con svn desde Git (como parte de las operaciones &lt;code&gt;set-tree&lt;/code&gt; o &lt;code&gt;dcommit&lt;/code&gt; ), si el mensaje de registro existente no tiene una l&amp;iacute;nea &lt;code&gt;From:&lt;/code&gt; o &lt;code&gt;Signed-off-by:&lt;/code&gt; , agregue una l&amp;iacute;nea &lt;code&gt;From:&lt;/code&gt; basada en la confirmaci&amp;oacute;n de Git cadena de autor. Si usa esto, entonces &lt;code&gt;--use-log-author&lt;/code&gt; recuperar&amp;aacute; una cadena de autor v&amp;aacute;lida para todas las confirmaciones.</target>
        </trans-unit>
        <trans-unit id="df4d9e8de337675930b7c7d126c3cbfdb0d919e8" translate="yes" xml:space="preserve">
          <source>When common porcelain operations that create objects are run, they will check whether the repository has grown substantially since the last maintenance, and if so run &lt;code&gt;git gc&lt;/code&gt; automatically. See &lt;code&gt;gc.auto&lt;/code&gt; below for how to disable this behavior.</source>
          <target state="translated">Cuando se ejecutan operaciones de porcelana comunes que crean objetos, comprobar&amp;aacute;n si el repositorio ha crecido sustancialmente desde el &amp;uacute;ltimo mantenimiento y, de ser as&amp;iacute;, ejecutar&amp;aacute;n &lt;code&gt;git gc&lt;/code&gt; autom&amp;aacute;ticamente. Consulte &lt;code&gt;gc.auto&lt;/code&gt; a continuaci&amp;oacute;n para saber c&amp;oacute;mo deshabilitar este comportamiento.</target>
        </trans-unit>
        <trans-unit id="5cef5cc19d56f034a0850f6ce0dc6add0c966a70" translate="yes" xml:space="preserve">
          <source>When comparing two trees, the ID of both trees (separated by a space and terminated by a newline) is printed before the difference. When comparing commits, the ID of the first (or only) commit, followed by a newline, is printed.</source>
          <target state="translated">Cuando se comparan dos árboles,el ID de ambos árboles (separados por un espacio y terminados por una nueva línea)se imprime antes de la diferencia.Cuando se comparan confirmaciones,el ID de la primera (o única)confirmación,seguido de una nueva línea,se imprime.</target>
        </trans-unit>
        <trans-unit id="fe249445673b1134855083e0c3b366c4aeeb2c8e" translate="yes" xml:space="preserve">
          <source>When converting a value to its canonical form using the &lt;code&gt;--type=bool&lt;/code&gt; type specifier, &lt;code&gt;git config&lt;/code&gt; will ensure that the output is &quot;true&quot; or &quot;false&quot; (spelled in lowercase).</source>
          <target state="translated">Al convertir un valor a su forma can&amp;oacute;nica usando el especificador de tipo &lt;code&gt;--type=bool&lt;/code&gt; , &lt;code&gt;git config&lt;/code&gt; se asegurar&amp;aacute; de que la salida sea &quot;verdadera&quot; o &quot;falsa&quot; (escrita en min&amp;uacute;sculas).</target>
        </trans-unit>
        <trans-unit id="5800d8777d6f116b967a3c4b503079e04a8dd27b" translate="yes" xml:space="preserve">
          <source>When copying a remote repository, you&amp;rsquo;ll want to at a minimum update the index cache when you do this, and especially with other peoples' repositories you often want to make sure that the index cache is in some known state (you don&amp;rsquo;t know &lt;strong&gt;what&lt;/strong&gt; they&amp;rsquo;ve done and not yet checked in), so usually you&amp;rsquo;ll precede the &lt;code&gt;git update-index&lt;/code&gt; with a</source>
          <target state="translated">Al copiar un repositorio remoto, querr&amp;aacute; como m&amp;iacute;nimo actualizar la cach&amp;eacute; de &amp;iacute;ndice cuando haga esto, y especialmente con los repositorios de otras personas, a menudo desea asegurarse de que la cach&amp;eacute; de &amp;iacute;ndice est&amp;eacute; en alg&amp;uacute;n estado conocido (no saber &lt;strong&gt;lo&lt;/strong&gt; que han hecho y a&amp;uacute;n no se han registrado), por lo que normalmente preceder&amp;aacute;s al &lt;code&gt;git update-index&lt;/code&gt; con un</target>
        </trans-unit>
        <trans-unit id="a0c9c076efebd050282e8220820bf37e469a5914" translate="yes" xml:space="preserve">
          <source>When copying notes during a rewrite (see the &quot;notes.rewrite.&amp;lt;command&amp;gt;&quot; option), determines what to do if the target commit already has a note. Must be one of &lt;code&gt;overwrite&lt;/code&gt;, &lt;code&gt;concatenate&lt;/code&gt;, &lt;code&gt;cat_sort_uniq&lt;/code&gt;, or &lt;code&gt;ignore&lt;/code&gt;. Defaults to &lt;code&gt;concatenate&lt;/code&gt;.</source>
          <target state="translated">Al copiar notas durante una reescritura (ver la opci&amp;oacute;n &quot;notes.rewrite. &amp;lt;comando&amp;gt;&quot;), determina qu&amp;eacute; hacer si la confirmaci&amp;oacute;n de destino ya tiene una nota. Debe ser uno de los siguientes: &lt;code&gt;overwrite&lt;/code&gt; , &lt;code&gt;concatenate&lt;/code&gt; , &lt;code&gt;cat_sort_uniq&lt;/code&gt; o &lt;code&gt;ignore&lt;/code&gt; . Predeterminado para &lt;code&gt;concatenate&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f2daf889c63a8ae3ef0bd84b9e0a7bae3186ea5d" translate="yes" xml:space="preserve">
          <source>When copying notes during a rewrite, specifies the (fully qualified) ref whose notes should be copied. May be a glob, in which case notes in all matching refs will be copied. You may also specify this configuration several times.</source>
          <target state="translated">Cuando se copien las notas durante una reescritura,especifica el árbitro (totalmente cualificado)cuyas notas deben ser copiadas.Puede ser un globo,en cuyo caso se copiarán las notas de todos los árbitros que coincidan.También puede especificar esta configuración varias veces.</target>
        </trans-unit>
        <trans-unit id="c445d369a5c50740a59f3ad28697ace644e2811e" translate="yes" xml:space="preserve">
          <source>When copying notes during a rewrite, specifies the (fully qualified) ref whose notes should be copied. The ref may be a glob, in which case notes in all matching refs will be copied. You may also specify this configuration several times.</source>
          <target state="translated">Cuando se copien las notas durante una reescritura,especifica el árbitro (totalmente cualificado)cuyas notas deben ser copiadas.El árbitro puede ser un globo,en cuyo caso se copiarán las notas de todos los árbitros que coincidan.También puede especificar esta configuración varias veces.</target>
        </trans-unit>
        <trans-unit id="1243aaab79ff33e7a2d49c8eb8b4f16703a1c016" translate="yes" xml:space="preserve">
          <source>When copying notes during a rewrite, what to do if the target commit already has a note. Must be one of &lt;code&gt;overwrite&lt;/code&gt;, &lt;code&gt;concatenate&lt;/code&gt;, &lt;code&gt;cat_sort_uniq&lt;/code&gt;, or &lt;code&gt;ignore&lt;/code&gt;. Defaults to &lt;code&gt;concatenate&lt;/code&gt;.</source>
          <target state="translated">Al copiar notas durante una reescritura, qu&amp;eacute; hacer si la confirmaci&amp;oacute;n de destino ya tiene una nota. Debe ser uno de los siguientes: &lt;code&gt;overwrite&lt;/code&gt; , &lt;code&gt;concatenate&lt;/code&gt; , &lt;code&gt;cat_sort_uniq&lt;/code&gt; o &lt;code&gt;ignore&lt;/code&gt; . Predeterminado para &lt;code&gt;concatenate&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fb6ea94e62e06bb5ee870300111df0d9f630f320" translate="yes" xml:space="preserve">
          <source>When copying notes during a rewrite, what to do if the target commit already has a note. Must be one of &lt;code&gt;overwrite&lt;/code&gt;, &lt;code&gt;concatenate&lt;/code&gt;, &lt;code&gt;cat_sort_uniq&lt;/code&gt;, or &lt;code&gt;ignore&lt;/code&gt;. This overrides the &lt;code&gt;core.rewriteMode&lt;/code&gt; setting.</source>
          <target state="translated">Al copiar notas durante una reescritura, qu&amp;eacute; hacer si la confirmaci&amp;oacute;n de destino ya tiene una nota. Debe ser uno de los siguientes: &lt;code&gt;overwrite&lt;/code&gt; , &lt;code&gt;concatenate&lt;/code&gt; , &lt;code&gt;cat_sort_uniq&lt;/code&gt; o &lt;code&gt;ignore&lt;/code&gt; . Esto anula la configuraci&amp;oacute;n &lt;code&gt;core.rewriteMode&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fa7e030aba2e9a9a4e5882753f19d2b4a66b4e16" translate="yes" xml:space="preserve">
          <source>When creating a new branch, if &lt;code&gt;&amp;lt;commit-ish&amp;gt;&lt;/code&gt; is a branch, mark it as &quot;upstream&quot; from the new branch. This is the default if &lt;code&gt;&amp;lt;commit-ish&amp;gt;&lt;/code&gt; is a remote-tracking branch. See &quot;--track&quot; in &lt;a href=&quot;git-branch&quot;&gt;git-branch[1]&lt;/a&gt; for details.</source>
          <target state="translated">Al crear una nueva rama, si &lt;code&gt;&amp;lt;commit-ish&amp;gt;&lt;/code&gt; es una rama, m&amp;aacute;rquela como &quot;aguas arriba&quot; de la nueva rama. Este es el valor predeterminado si &lt;code&gt;&amp;lt;commit-ish&amp;gt;&lt;/code&gt; es una rama de seguimiento remoto. Consulte &quot;--track&quot; en &lt;a href=&quot;git-branch&quot;&gt;git-branch [1]&lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="4e04dc75cba18b40521f918d2128a9cc7f50298f" translate="yes" xml:space="preserve">
          <source>When creating a new branch, if &lt;code&gt;&amp;lt;commit-ish&amp;gt;&lt;/code&gt; is a branch, mark it as &quot;upstream&quot; from the new branch. This is the default if &lt;code&gt;&amp;lt;commit-ish&amp;gt;&lt;/code&gt; is a remote-tracking branch. See &lt;code&gt;--track&lt;/code&gt; in &lt;a href=&quot;git-branch&quot;&gt;git-branch[1]&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54d8049451fa958ada38921d90347d3ee7c4d771" translate="yes" xml:space="preserve">
          <source>When creating a new branch, set up &quot;upstream&quot; configuration. &lt;code&gt;-c&lt;/code&gt; is implied. See &lt;code&gt;--track&lt;/code&gt; in &lt;a href=&quot;git-branch&quot;&gt;git-branch[1]&lt;/a&gt; for details.</source>
          <target state="translated">Al crear una nueva rama, establezca la configuraci&amp;oacute;n &quot;ascendente&quot;. &lt;code&gt;-c&lt;/code&gt; est&amp;aacute; impl&amp;iacute;cito. Consulte &lt;code&gt;--track&lt;/code&gt; en &lt;a href=&quot;git-branch&quot;&gt;git-branch [1]&lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="fc590aa31fec73c4296b9f428640a84b6d3e91a7" translate="yes" xml:space="preserve">
          <source>When creating a new branch, set up &quot;upstream&quot; configuration. See &quot;--track&quot; in &lt;a href=&quot;git-branch&quot;&gt;git-branch[1]&lt;/a&gt; for details.</source>
          <target state="translated">Al crear una nueva rama, establezca la configuraci&amp;oacute;n &quot;ascendente&quot;. Consulte &quot;--track&quot; en &lt;a href=&quot;git-branch&quot;&gt;git-branch [1]&lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="67211ea9327a11f7c102d4d6622e44707e57316e" translate="yes" xml:space="preserve">
          <source>When creating a new branch, set up &lt;code&gt;branch.&amp;lt;name&amp;gt;.remote&lt;/code&gt; and &lt;code&gt;branch.&amp;lt;name&amp;gt;.merge&lt;/code&gt; configuration entries to mark the start-point branch as &quot;upstream&quot; from the new branch. This configuration will tell git to show the relationship between the two branches in &lt;code&gt;git status&lt;/code&gt; and &lt;code&gt;git branch -v&lt;/code&gt;. Furthermore, it directs &lt;code&gt;git pull&lt;/code&gt; without arguments to pull from the upstream when the new branch is checked out.</source>
          <target state="translated">Al crear una nueva rama, configure &lt;code&gt;branch.&amp;lt;name&amp;gt;.remote&lt;/code&gt; y &lt;code&gt;branch.&amp;lt;name&amp;gt;.merge&lt;/code&gt; entradas de configuraci&amp;oacute;n para marcar la rama de punto de inicio como &quot;aguas arriba&quot; de la nueva rama. Esta configuraci&amp;oacute;n le dir&amp;aacute; a git que muestre la relaci&amp;oacute;n entre las dos ramas en &lt;code&gt;git status&lt;/code&gt; y &lt;code&gt;git branch -v&lt;/code&gt; . Adem&amp;aacute;s, dirige &lt;code&gt;git pull&lt;/code&gt; sin argumentos para extraer desde el flujo ascendente cuando se comprueba la nueva rama.</target>
        </trans-unit>
        <trans-unit id="30421c6d8900807173aa121649f943a72b9b4dbe" translate="yes" xml:space="preserve">
          <source>When creating a packed archive in a repository that has existing packs, the command reuses existing deltas. This sometimes results in a slightly suboptimal pack. This flag tells the command not to reuse existing deltas but compute them from scratch.</source>
          <target state="translated">Cuando se crea un archivo empaquetado en un repositorio que tiene paquetes existentes,el comando reutiliza los deltas existentes.Esto a veces resulta en un paquete ligeramente subóptimo.Esta bandera le dice al comando que no reutilice los deltas existentes sino que los calcule desde cero.</target>
        </trans-unit>
        <trans-unit id="40641904740525d3a46d2f53ea1f042429403d62" translate="yes" xml:space="preserve">
          <source>When creating files, prepend &amp;lt;string&amp;gt; (usually a directory including a trailing /)</source>
          <target state="translated">Al crear archivos, anteponga &amp;lt;string&amp;gt; (generalmente un directorio que incluye un / al final)</target>
        </trans-unit>
        <trans-unit id="55d2573d14b31c180f96244b6210a62251fe4b79" translate="yes" xml:space="preserve">
          <source>When dealing with &lt;code&gt;git diff-tree&lt;/code&gt; output, it takes advantage of the fact that the patch is prefixed with the object name of the commit, and outputs two 40-byte hexadecimal strings. The first string is the patch ID, and the second string is the commit ID. This can be used to make a mapping from patch ID to commit ID.</source>
          <target state="translated">Cuando se trata &lt;code&gt;git diff-tree&lt;/code&gt; salida del &amp;aacute;rbol de diferencias de git , se aprovecha el hecho de que el parche tiene como prefijo el nombre del objeto de la confirmaci&amp;oacute;n y genera dos cadenas hexadecimales de 40 bytes. La primera cadena es el ID de parche y la segunda cadena es el ID de confirmaci&amp;oacute;n. Esto se puede usar para hacer un mapeo desde el ID de parche hasta el ID de confirmaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="d776ef3252048cd13183a8501d7c0015731386cd" translate="yes" xml:space="preserve">
          <source>When deciding what attributes are assigned to a path, Git consults &lt;code&gt;$GIT_DIR/info/attributes&lt;/code&gt; file (which has the highest precedence), &lt;code&gt;.gitattributes&lt;/code&gt; file in the same directory as the path in question, and its parent directories up to the toplevel of the work tree (the further the directory that contains &lt;code&gt;.gitattributes&lt;/code&gt; is from the path in question, the lower its precedence). Finally global and system-wide files are considered (they have the lowest precedence).</source>
          <target state="translated">Al decidir qu&amp;eacute; atributos se asignan a una ruta, Git consulta el &lt;code&gt;$GIT_DIR/info/attributes&lt;/code&gt; (que tiene la prioridad m&amp;aacute;s alta), el archivo &lt;code&gt;.gitattributes&lt;/code&gt; en el mismo directorio que la ruta en cuesti&amp;oacute;n y sus directorios principales hasta el nivel superior del &amp;aacute;rbol de trabajo (cuanto m&amp;aacute;s &lt;code&gt;.gitattributes&lt;/code&gt; est&amp;eacute; el directorio que contiene .gitattributes de la ruta en cuesti&amp;oacute;n, menor ser&amp;aacute; su precedencia). Finalmente, se consideran los archivos globales y de todo el sistema (tienen la precedencia m&amp;aacute;s baja).</target>
        </trans-unit>
        <trans-unit id="be47e73cae5925c270f0353e0b448f44fba38688" translate="yes" xml:space="preserve">
          <source>When deinitialized or deleted (see below), the submodule&amp;rsquo;s Git directory is automatically moved to &lt;code&gt;$GIT_DIR/modules/&amp;lt;name&amp;gt;/&lt;/code&gt; of the superproject.</source>
          <target state="translated">Cuando se desinicializa o elimina (ver m&amp;aacute;s abajo), el directorio Git del subm&amp;oacute;dulo se mueve autom&amp;aacute;ticamente a &lt;code&gt;$GIT_DIR/modules/&amp;lt;name&amp;gt;/&lt;/code&gt; del superproyecto.</target>
        </trans-unit>
        <trans-unit id="d6198e5c096df70165a4ba7282b14c9062838d85" translate="yes" xml:space="preserve">
          <source>When displaying names of reachable objects, in addition to the SHA-1 also display a name that describes &lt;strong&gt;how&lt;/strong&gt; they are reachable, compatible with &lt;a href=&quot;git-rev-parse&quot;&gt;git-rev-parse[1]&lt;/a&gt;, e.g. &lt;code&gt;HEAD@{1234567890}~25^2:src/&lt;/code&gt;.</source>
          <target state="translated">Cuando se muestran los nombres de los objetos alcanzables, adem&amp;aacute;s del SHA-1, tambi&amp;eacute;n se muestra un nombre que describe &lt;strong&gt;c&amp;oacute;mo&lt;/strong&gt; son accesibles, compatible con &lt;a href=&quot;git-rev-parse&quot;&gt;git-rev-parse [1]&lt;/a&gt; , por ejemplo, &lt;code&gt;HEAD@{1234567890}~25^2:src/&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="39ccc422d97039f55d5b75b982904e65809f0ab0" translate="yes" xml:space="preserve">
          <source>When doing a dry-run, give the output in a porcelain-ready format. See &lt;a href=&quot;git-status&quot;&gt;git-status[1]&lt;/a&gt; for details. Implies &lt;code&gt;--dry-run&lt;/code&gt;.</source>
          <target state="translated">Cuando realice una ejecuci&amp;oacute;n en seco, d&amp;eacute; el resultado en un formato listo para porcelana. Consulte &lt;a href=&quot;git-status&quot;&gt;git-status [1]&lt;/a&gt; para obtener m&amp;aacute;s detalles. Implica: &lt;code&gt;--dry-run&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="91fdf83cd4cf2351c13b94fc0d59dcd9a51c5b73" translate="yes" xml:space="preserve">
          <source>When doing a dry-run, give the output in the long-format. Implies &lt;code&gt;--dry-run&lt;/code&gt;.</source>
          <target state="translated">Cuando realice una ejecuci&amp;oacute;n en seco, proporcione la salida en formato largo. Implica: &lt;code&gt;--dry-run&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7320eee3c7f6d76666dfe697952518d827846a03" translate="yes" xml:space="preserve">
          <source>When doing a dry-run, give the output in the short-format. See &lt;a href=&quot;git-status&quot;&gt;git-status[1]&lt;/a&gt; for details. Implies &lt;code&gt;--dry-run&lt;/code&gt;.</source>
          <target state="translated">Cuando realice un ensayo, proporcione el resultado en formato corto. Consulte &lt;a href=&quot;git-status&quot;&gt;git-status [1]&lt;/a&gt; para obtener m&amp;aacute;s detalles. Implica: &lt;code&gt;--dry-run&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9aa102d4a4b04252e6d4b5a0080dce309ef777d4" translate="yes" xml:space="preserve">
          <source>When doing a repository conversion, use a unique mark per commit (&lt;code&gt;mark :&amp;lt;n&amp;gt;&lt;/code&gt;) and supply the --export-marks option on the command line. fast-import will dump a file which lists every mark and the Git object SHA-1 that corresponds to it. If the frontend can tie the marks back to the source repository, it is easy to verify the accuracy and completeness of the import by comparing each Git commit to the corresponding source revision.</source>
          <target state="translated">When doing a repository conversion, use a unique mark per commit ( &lt;code&gt;mark :&amp;lt;n&amp;gt;&lt;/code&gt; ) and supply the --export-marks option on the command line. fast-import will dump a file which lists every mark and the Git object SHA-1 that corresponds to it. If the frontend can tie the marks back to the source repository, it is easy to verify the accuracy and completeness of the import by comparing each Git commit to the corresponding source revision.</target>
        </trans-unit>
        <trans-unit id="6f397bf185a0b1be7403f8c718221517e54d79b2" translate="yes" xml:space="preserve">
          <source>When editing the commit message, start the editor with the contents in the given file. The &lt;code&gt;commit.template&lt;/code&gt; configuration variable is often used to give this option implicitly to the command. This mechanism can be used by projects that want to guide participants with some hints on what to write in the message in what order. If the user exits the editor without editing the message, the commit is aborted. This has no effect when a message is given by other means, e.g. with the &lt;code&gt;-m&lt;/code&gt; or &lt;code&gt;-F&lt;/code&gt; options.</source>
          <target state="translated">Al editar el mensaje de confirmaci&amp;oacute;n, inicie el editor con el contenido del archivo dado. La variable de configuraci&amp;oacute;n &lt;code&gt;commit.template&lt;/code&gt; se usa a menudo para dar esta opci&amp;oacute;n impl&amp;iacute;citamente al comando. Este mecanismo puede ser utilizado por proyectos que quieran guiar a los participantes con algunas pistas sobre qu&amp;eacute; escribir en el mensaje y en qu&amp;eacute; orden. Si el usuario sale del editor sin editar el mensaje, la confirmaci&amp;oacute;n se cancela. Esto no tiene ning&amp;uacute;n efecto cuando un mensaje se da por otros medios, por ejemplo, con las opciones &lt;code&gt;-m&lt;/code&gt; o &lt;code&gt;-F&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7835173f74e58e15c8891f5a3e0b3af743fd1c66" translate="yes" xml:space="preserve">
          <source>When editing, provide the raw object contents rather than pretty-printed ones. Currently this only affects trees, which will be shown in their binary form. This is harder to work with, but can help when repairing a tree that is so corrupted it cannot be pretty-printed. Note that you may need to configure your editor to cleanly read and write binary data.</source>
          <target state="translated">Cuando edite,proporcione el contenido del objeto en bruto en lugar de los impresos bonitos.Actualmente esto sólo afecta a los árboles,que se mostrarán en su forma binaria.Esto es más difícil de trabajar,pero puede ayudar cuando se repara un árbol que está tan corrompido que no se puede imprimir bien.Ten en cuenta que puede que necesites configurar tu editor para leer y escribir datos binarios de forma limpia.</target>
        </trans-unit>
        <trans-unit id="ce47e94310de9fcb0d82c1f052bbcc38f3a11f76" translate="yes" xml:space="preserve">
          <source>When enabled, the default &lt;code&gt;post-update&lt;/code&gt; hook runs &lt;code&gt;git update-server-info&lt;/code&gt; to keep the information used by dumb transports (e.g., HTTP) up to date. If you are publishing a Git repository that is accessible via HTTP, you should probably enable this hook.</source>
          <target state="translated">Cuando est&amp;aacute; habilitado, el enlace &lt;code&gt;post-update&lt;/code&gt; predeterminado ejecuta &lt;code&gt;git update-server-info&lt;/code&gt; para mantener actualizada la informaci&amp;oacute;n utilizada por los transportes tontos (por ejemplo, HTTP). Si est&amp;aacute; publicando un repositorio de Git al que se puede acceder a trav&amp;eacute;s de HTTP, probablemente deber&amp;iacute;a habilitar este enlace.</target>
        </trans-unit>
        <trans-unit id="a529b1482d7666548417edb1d901df1240194350" translate="yes" xml:space="preserve">
          <source>When encountering a non-ASCII message or subject that does not declare its encoding, add headers/quoting to indicate it is encoded in &amp;lt;encoding&amp;gt;. Default is the value of the &lt;code&gt;sendemail.assume8bitEncoding&lt;/code&gt;; if that is unspecified, this will be prompted for if any non-ASCII files are encountered.</source>
          <target state="translated">Cuando encuentre un mensaje o asunto no ASCII que no declare su codificaci&amp;oacute;n, agregue encabezados / citas para indicar que est&amp;aacute; codificado en &amp;lt;encoding&amp;gt;. El valor predeterminado es el valor de &lt;code&gt;sendemail.assume8bitEncoding&lt;/code&gt; ; si no se especifica, se le solicitar&amp;aacute; si se encuentra alg&amp;uacute;n archivo que no sea ASCII.</target>
        </trans-unit>
        <trans-unit id="c331bd8bb74634e4f18684aaa53f36ba8f8cf37d" translate="yes" xml:space="preserve">
          <source>When erasing credentials, matching credentials will be erased from all files.</source>
          <target state="translated">Al borrar las credenciales,las credenciales coincidentes se borrarán de todos los archivos.</target>
        </trans-unit>
        <trans-unit id="74e58a3904b06fc63c005d33dc33b553098868b7" translate="yes" xml:space="preserve">
          <source>When extensions.worktreeConfig is enabled, the config file &lt;code&gt;.git/worktrees/&amp;lt;id&amp;gt;/config.worktree&lt;/code&gt; is read after &lt;code&gt;.git/config&lt;/code&gt; is.</source>
          <target state="translated">Cuando extensions.worktreeConfig est&amp;aacute; habilitado, el archivo de configuraci&amp;oacute;n &lt;code&gt;.git/worktrees/&amp;lt;id&amp;gt;/config.worktree&lt;/code&gt; se lee despu&amp;eacute;s de &lt;code&gt;.git/config&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3a73371934954e7de3c00c5b21339d1552e97b06" translate="yes" xml:space="preserve">
          <source>When false, merge the current branch into the upstream branch.</source>
          <target state="translated">Cuando sea falso,fusiona la rama actual con la rama de arriba.</target>
        </trans-unit>
        <trans-unit id="d5dfb7a500ca38e6f311c3fe54f4fbaf71bc47ce" translate="yes" xml:space="preserve">
          <source>When fetching refs listed on the command line, use the specified refspec (can be given more than once) to map the refs to remote-tracking branches, instead of the values of &lt;code&gt;remote.*.fetch&lt;/code&gt; configuration variables for the remote repository. Providing an empty &lt;code&gt;&amp;lt;refspec&amp;gt;&lt;/code&gt; to the &lt;code&gt;--refmap&lt;/code&gt; option causes Git to ignore the configured refspecs and rely entirely on the refspecs supplied as command-line arguments. See section on &quot;Configured Remote-tracking Branches&quot; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8afe72df4116adf55dd615031acfafbceae0ec5" translate="yes" xml:space="preserve">
          <source>When fetching refs listed on the command line, use the specified refspec (can be given more than once) to map the refs to remote-tracking branches, instead of the values of &lt;code&gt;remote.*.fetch&lt;/code&gt; configuration variables for the remote repository. See section on &quot;Configured Remote-tracking Branches&quot; for details.</source>
          <target state="translated">Al obtener las referencias enumeradas en la l&amp;iacute;nea de comando, use la especificaci&amp;oacute;n de referencia especificada (se puede proporcionar m&amp;aacute;s de una vez) para asignar las referencias a las ramas de seguimiento remoto, en lugar de los valores de &lt;code&gt;remote.*.fetch&lt;/code&gt; variables de configuraci&amp;oacute;n remote. *. Fetch para el repositorio remoto. Consulte la secci&amp;oacute;n sobre &quot;Ramas de seguimiento remoto configuradas&quot; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="f131c02a4584603f0de6ca46a404ddf3258dbf13" translate="yes" xml:space="preserve">
          <source>When files are modified outside of Git, the user will need to stage the modified files explicitly (e.g. see &lt;code&gt;Examples&lt;/code&gt; section in &lt;a href=&quot;git-update-index&quot;&gt;git-update-index[1]&lt;/a&gt;). Git will not normally detect changes to those files.</source>
          <target state="translated">Cuando los archivos se modifican fuera de Git, el usuario deber&amp;aacute; organizar los archivos modificados de forma expl&amp;iacute;cita (por ejemplo, consulte la secci&amp;oacute;n de &lt;code&gt;Examples&lt;/code&gt; en &lt;a href=&quot;git-update-index&quot;&gt;git-update-index [1]&lt;/a&gt; ). Git normalmente no detectar&amp;aacute; cambios en esos archivos.</target>
        </trans-unit>
        <trans-unit id="e95f7718835508fa2f714691dae7615b5ccee03a" translate="yes" xml:space="preserve">
          <source>When filtering history with &lt;code&gt;&amp;lt;path&amp;gt;&amp;hellip;​&lt;/code&gt;, does not prune some history. (See &quot;History simplification&quot; in &lt;a href=&quot;git-log&quot;&gt;git-log[1]&lt;/a&gt; for a more detailed explanation.)</source>
          <target state="translated">Al filtrar la historia con &lt;code&gt;&amp;lt;path&amp;gt;&amp;hellip;​&lt;/code&gt; , no podar un poco de historia. (Consulte &quot;Simplificaci&amp;oacute;n del historial&quot; en &lt;a href=&quot;git-log&quot;&gt;git-log [1]&lt;/a&gt; para obtener una explicaci&amp;oacute;n m&amp;aacute;s detallada).</target>
        </trans-unit>
        <trans-unit id="18f94df4064f0faddb37415d13a088dd57356563" translate="yes" xml:space="preserve">
          <source>When first created, objects are stored in individual files, but for efficiency may later be compressed together into &quot;pack files&quot;.</source>
          <target state="translated">Cuando se crean por primera vez,los objetos se almacenan en archivos individuales,pero por razones de eficiencia pueden ser comprimidos posteriormente en &quot;paquetes de archivos&quot;.</target>
        </trans-unit>
        <trans-unit id="3ce1186a221491da0c957498f84e962314b0f4f4" translate="yes" xml:space="preserve">
          <source>When given a range of commits to display (e.g. &lt;code&gt;commit1..commit2&lt;/code&gt; or &lt;code&gt;commit2 ^commit1&lt;/code&gt;), only display commits that exist directly on the ancestry chain between the &lt;code&gt;commit1&lt;/code&gt; and &lt;code&gt;commit2&lt;/code&gt;, i.e. commits that are both descendants of &lt;code&gt;commit1&lt;/code&gt;, and ancestors of &lt;code&gt;commit2&lt;/code&gt;.</source>
          <target state="translated">Cuando se le da un rango de confirmaciones para mostrar (por ejemplo, &lt;code&gt;commit1..commit2&lt;/code&gt; o &lt;code&gt;commit2 ^commit1&lt;/code&gt; ), solo muestra las confirmaciones que existen directamente en la cadena de ascendencia entre &lt;code&gt;commit1&lt;/code&gt; y &lt;code&gt;commit2&lt;/code&gt; , es decir, las confirmaciones que son descendientes de &lt;code&gt;commit1&lt;/code&gt; y ancestros de &lt;code&gt;commit2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e006844e32fc3d063be827d3911798e9ae2b69bd" translate="yes" xml:space="preserve">
          <source>When given a range of commits to display (e.g. &lt;code&gt;commit1..commit2&lt;/code&gt; or &lt;code&gt;commit2 ^commit1&lt;/code&gt;), only display commits that exist directly on the ancestry chain between the &lt;code&gt;commit1&lt;/code&gt; and &lt;code&gt;commit2&lt;/code&gt;, i.e. commits that are both descendants of &lt;code&gt;commit1&lt;/code&gt;, and ancestors of &lt;code&gt;commit2&lt;/code&gt;. (See &quot;History simplification&quot; in &lt;a href=&quot;git-log&quot;&gt;git-log[1]&lt;/a&gt; for a more detailed explanation.)</source>
          <target state="translated">Cuando se le da un rango de confirmaciones para mostrar (por ejemplo, &lt;code&gt;commit1..commit2&lt;/code&gt; o &lt;code&gt;commit2 ^commit1&lt;/code&gt; ), solo muestra las confirmaciones que existen directamente en la cadena de ascendencia entre &lt;code&gt;commit1&lt;/code&gt; y &lt;code&gt;commit2&lt;/code&gt; , es decir, las confirmaciones que son descendientes de &lt;code&gt;commit1&lt;/code&gt; y ancestros de &lt;code&gt;commit2&lt;/code&gt; . (Consulte &quot;Simplificaci&amp;oacute;n del historial&quot; en &lt;a href=&quot;git-log&quot;&gt;git-log [1]&lt;/a&gt; para obtener una explicaci&amp;oacute;n m&amp;aacute;s detallada).</target>
        </trans-unit>
        <trans-unit id="8281565ed0f01821dd04f5b4f8a282147fc8eb15" translate="yes" xml:space="preserve">
          <source>When given a two-part name section.key, the value for section.&amp;lt;url&amp;gt;.key whose &amp;lt;url&amp;gt; part matches the best to the given URL is returned (if no such key exists, the value for section.key is used as a fallback). When given just the section as name, do so for all the keys in the section and list them. Returns error code 1 if no value is found.</source>
          <target state="translated">Cuando se le da un nombre de dos partes section.key, se devuelve el valor de section. &amp;lt;url&amp;gt; .key cuya parte &amp;lt;url&amp;gt; coincide mejor con la URL dada (si no existe tal clave, se usa el valor de section.key como alternativa). Cuando se le d&amp;eacute; solo la secci&amp;oacute;n como nombre, h&amp;aacute;galo para todas las claves de la secci&amp;oacute;n y enumerelas. Devuelve el c&amp;oacute;digo de error 1 si no se encuentra ning&amp;uacute;n valor.</target>
        </trans-unit>
        <trans-unit id="f88bacf945cb9e0553c03a8ac1d906d306ca24eb" translate="yes" xml:space="preserve">
          <source>When given an SVN revision number of the form &lt;code&gt;rN&lt;/code&gt;, returns the corresponding Git commit hash (this can optionally be followed by a tree-ish to specify which branch should be searched). When given a tree-ish, returns the corresponding SVN revision number.</source>
          <target state="translated">Cuando se le da un n&amp;uacute;mero de revisi&amp;oacute;n SVN de la forma &lt;code&gt;rN&lt;/code&gt; , devuelve el hash de confirmaci&amp;oacute;n de Git correspondiente (esto puede ir seguido opcionalmente por un &amp;aacute;rbol para especificar en qu&amp;eacute; rama se debe buscar). Cuando se le da un &amp;aacute;rbol, devuelve el n&amp;uacute;mero de revisi&amp;oacute;n SVN correspondiente.</target>
        </trans-unit>
        <trans-unit id="a96423d691859ec79cd98b29f7765677feb267ba" translate="yes" xml:space="preserve">
          <source>When given, and the repository to clone from is accessed via ssh, this specifies a non-default path for the command run on the other end.</source>
          <target state="translated">Cuando se da,y se accede al repositorio desde el que clonar a través de ssh,esto especifica una ruta no predeterminada para el comando que se ejecuta en el otro extremo.</target>
        </trans-unit>
        <trans-unit id="d1fb59a7ba9cbb456b044d488d1684f86345d108" translate="yes" xml:space="preserve">
          <source>When given, and the repository to fetch from is handled by &lt;code&gt;git fetch-pack&lt;/code&gt;, &lt;code&gt;--exec=&amp;lt;upload-pack&amp;gt;&lt;/code&gt; is passed to the command to specify non-default path for the command run on the other end.</source>
          <target state="translated">Cuando se proporciona, y el repositorio del que se va a recuperar es manejado por &lt;code&gt;git fetch-pack&lt;/code&gt; , &lt;code&gt;--exec=&amp;lt;upload-pack&amp;gt;&lt;/code&gt; se pasa al comando para especificar la ruta no predeterminada para el comando que se ejecuta en el otro extremo.</target>
        </trans-unit>
        <trans-unit id="347806ba4d643d64e35fb6159f6ca9df9bd36627" translate="yes" xml:space="preserve">
          <source>When giving multiple pattern expressions combined with &lt;code&gt;--or&lt;/code&gt;, this flag is specified to limit the match to files that have lines to match all of them.</source>
          <target state="translated">Cuando se proporcionan m&amp;uacute;ltiples expresiones de patr&amp;oacute;n combinadas con &lt;code&gt;--or&lt;/code&gt; , esta marca se especifica para limitar la coincidencia a archivos que tienen l&amp;iacute;neas para coincidir con todas.</target>
        </trans-unit>
        <trans-unit id="a0b6fe15df65f2d5daa97101d52d41abe4f1ad3a" translate="yes" xml:space="preserve">
          <source>When grepping the object store (with &lt;code&gt;--cached&lt;/code&gt; or giving tree objects), running with multiple threads might perform slower than single threaded if &lt;code&gt;--textconv&lt;/code&gt; is given and there&amp;rsquo;re too many text conversions. So if you experience low performance in this case, it might be desirable to use &lt;code&gt;--threads=1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4aea2178dff194f0c4c01be5fd5d2a4667a09068" translate="yes" xml:space="preserve">
          <source>When he&amp;rsquo;s ready, he tells Alice to pull changes from the repository at /home/bob/myrepo. She does this with:</source>
          <target state="translated">Cuando est&amp;aacute; listo, le dice a Alice que extraiga los cambios del repositorio en / home / bob / myrepo. Ella hace esto con:</target>
        </trans-unit>
        <trans-unit id="66bba6f8c73ac5f72ec362ac6e58a5210f96d2e5" translate="yes" xml:space="preserve">
          <source>When importing a renamed file or directory, simply delete the old name(s) and modify the new name(s) during the corresponding commit. Git performs rename detection after-the-fact, rather than explicitly during a commit.</source>
          <target state="translated">Cuando se importa un archivo o directorio renombrado,simplemente se borra el nombre o nombres antiguos y se modifica el nuevo nombre o nombres durante la confirmación correspondiente.Git realiza la detección de renombramiento a posteriori,en lugar de hacerlo explícitamente durante una confirmación.</target>
        </trans-unit>
        <trans-unit id="547b791fe6e4a112ecfb6e63c2e9ee0d26e77b05" translate="yes" xml:space="preserve">
          <source>When in cone mode, the &lt;code&gt;git sparse-checkout set&lt;/code&gt; subcommand takes a list of directories instead of a list of sparse-checkout patterns. In this mode, the command &lt;code&gt;git sparse-checkout set A/B/C&lt;/code&gt; sets the directory &lt;code&gt;A/B/C&lt;/code&gt; as a recursive pattern, the directories &lt;code&gt;A&lt;/code&gt; and &lt;code&gt;A/B&lt;/code&gt; are added as parent patterns. The resulting sparse-checkout file is now</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cdd5299d04b153fd0e295904b9e12eec6b499c8" translate="yes" xml:space="preserve">
          <source>When in list mode, show sha1 and commit subject line for each head, along with relationship to upstream branch (if any). If given twice, print the path of the linked worktree (if any) and the name of the upstream branch, as well (see also &lt;code&gt;git remote show &amp;lt;remote&amp;gt;&lt;/code&gt;). Note that the current worktree&amp;rsquo;s HEAD will not have its path printed (it will always be your current directory).</source>
          <target state="translated">Cuando est&amp;eacute; en modo lista, muestre sha1 y confirme la l&amp;iacute;nea de asunto para cada encabezado, junto con la relaci&amp;oacute;n con la rama ascendente (si corresponde). Si se da dos veces, imprima la ruta del &amp;aacute;rbol de trabajo vinculado (si corresponde) y el nombre de la rama ascendente tambi&amp;eacute;n (consulte tambi&amp;eacute;n &lt;code&gt;git remote show &amp;lt;remote&amp;gt;&lt;/code&gt; ). Tenga en cuenta que HEAD del &amp;aacute;rbol de trabajo actual no tendr&amp;aacute; su ruta impresa (siempre ser&amp;aacute; su directorio actual).</target>
        </trans-unit>
        <trans-unit id="df3e42ff48559b3d46a4606cc43ea02a4d5742e5" translate="yes" xml:space="preserve">
          <source>When informative errors are turned on, git-daemon will report more verbose errors to the client, differentiating conditions like &quot;no such repository&quot; from &quot;repository not exported&quot;. This is more convenient for clients, but may leak information about the existence of unexported repositories. When informative errors are not enabled, all errors report &quot;access denied&quot; to the client. The default is --no-informative-errors.</source>
          <target state="translated">Cuando se activan los errores informativos,git-daemon informará de más errores verbosos al cliente,diferenciando condiciones como &quot;no hay tal repositorio&quot; de &quot;repositorio no exportado&quot;.Esto es más conveniente para los clientes,pero puede filtrar información sobre la existencia de repositorios no exportados.Cuando los errores informativos no están habilitados,todos los errores reportan &quot;acceso denegado&quot; al cliente.El valor por defecto es --no-informativo-errores.</target>
        </trans-unit>
        <trans-unit id="882f7c25abfabdf5a0527656f301ec49c21b72e8" translate="yes" xml:space="preserve">
          <source>When initializing submodules, a &lt;code&gt;.gitmodules&lt;/code&gt; file in the top-level directory of the containing repository is used to find the url of each submodule. This file should be formatted in the same way as &lt;code&gt;$GIT_DIR/config&lt;/code&gt;. The key to each submodule url is &quot;submodule.$name.url&quot;. See &lt;a href=&quot;gitmodules&quot;&gt;gitmodules[5]&lt;/a&gt; for details.</source>
          <target state="translated">Al inicializar subm&amp;oacute;dulos, se &lt;code&gt;.gitmodules&lt;/code&gt; un archivo .gitmodules en el directorio de nivel superior del repositorio que los contiene para encontrar la URL de cada subm&amp;oacute;dulo. Este archivo debe tener el mismo formato que &lt;code&gt;$GIT_DIR/config&lt;/code&gt; . La clave para la URL de cada subm&amp;oacute;dulo es &quot;submodule. $ Name.url&quot;. Consulte &lt;a href=&quot;gitmodules&quot;&gt;gitmodules [5]&lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="854c3f2001a62b8064a99a360e1e32072b64ad8e" translate="yes" xml:space="preserve">
          <source>When initially invoking &lt;code&gt;git am&lt;/code&gt;, you give it the names of the mailboxes to process. Upon seeing the first patch that does not apply, it aborts in the middle. You can recover from this in one of two ways:</source>
          <target state="translated">Al invocar inicialmente a &lt;code&gt;git am&lt;/code&gt; , le da los nombres de los buzones de correo para procesar. Al ver el primer parche que no se aplica, aborta en el medio. Puede recuperarse de esto de una de estas dos formas:</target>
        </trans-unit>
        <trans-unit id="ae919810620b188b4a098cb2c7010981f59eb2a8" translate="yes" xml:space="preserve">
          <source>When invoking a custom merge tool, Git uses a set of temporary files to pass to the tool. If the tool returns an error and this variable is set to &lt;code&gt;true&lt;/code&gt;, then these temporary files will be preserved, otherwise they will be removed after the tool has exited. Defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">Al invocar una herramienta de combinaci&amp;oacute;n personalizada, Git usa un conjunto de archivos temporales para pasar a la herramienta. Si la herramienta devuelve un error y esta variable se establece en &lt;code&gt;true&lt;/code&gt; , estos archivos temporales se conservar&amp;aacute;n; de lo contrario, se eliminar&amp;aacute;n despu&amp;eacute;s de que la herramienta haya salido. El valor predeterminado es &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8b149cf0c1c59f45e7d020f119cab62bcf88ef5e" translate="yes" xml:space="preserve">
          <source>When it comes to editing that commit, execute &lt;code&gt;git reset HEAD^&lt;/code&gt;. The effect is that the HEAD is rewound by one, and the index follows suit. However, the working tree stays the same.</source>
          <target state="translated">Cuando se trata de editar ese commit, ejecute &lt;code&gt;git reset HEAD^&lt;/code&gt; . El efecto es que la CABEZA se rebobina por uno y el &amp;iacute;ndice sigue su ejemplo. Sin embargo, el &amp;aacute;rbol de trabajo permanece igual.</target>
        </trans-unit>
        <trans-unit id="54d95c16d8a8ecd15ca228486caba0d9b645aa97" translate="yes" xml:space="preserve">
          <source>When it is not obvious how to apply a change, the following happens:</source>
          <target state="translated">Cuando no es obvio cómo aplicar un cambio,sucede lo siguiente:</target>
        </trans-unit>
        <trans-unit id="42b78027e34d66bfdfc08d7cf571f024832571b4" translate="yes" xml:space="preserve">
          <source>When it is not obvious how to reconcile the changes, the following happens:</source>
          <target state="translated">Cuando no es obvio cómo conciliar los cambios,sucede lo siguiente:</target>
        </trans-unit>
        <trans-unit id="ac3a9525cba718f2ba4c34b577914369145b2d3f" translate="yes" xml:space="preserve">
          <source>When listing references from an alternate, list only references that begin with the given prefix. Prefixes match as if they were given as arguments to &lt;a href=&quot;git-for-each-ref&quot;&gt;git-for-each-ref[1]&lt;/a&gt;. To list multiple prefixes, separate them with whitespace. If &lt;code&gt;core.alternateRefsCommand&lt;/code&gt; is set, setting &lt;code&gt;core.alternateRefsPrefixes&lt;/code&gt; has no effect.</source>
          <target state="translated">Cuando enumere referencias de una alternativa, enumere solo las referencias que comiencen con el prefijo dado. Los prefijos coinciden como si se hubieran dado como argumentos para &lt;a href=&quot;git-for-each-ref&quot;&gt;git-for-each-ref [1]&lt;/a&gt; . Para enumerar varios prefijos, sep&amp;aacute;relos con espacios en blanco. Si se establece &lt;code&gt;core.alternateRefsCommand&lt;/code&gt; , la configuraci&amp;oacute;n de &lt;code&gt;core.alternateRefsPrefixes&lt;/code&gt; no tiene ning&amp;uacute;n efecto.</target>
        </trans-unit>
        <trans-unit id="9485b24ac5fd9e24de580d1b4ae98203a381daa8" translate="yes" xml:space="preserve">
          <source>When listing, use the specified &amp;lt;format&amp;gt;, which can be one of &lt;code&gt;short&lt;/code&gt;, &lt;code&gt;medium&lt;/code&gt; and &lt;code&gt;long&lt;/code&gt;. When omitted, the format defaults to &lt;code&gt;short&lt;/code&gt;.</source>
          <target state="translated">Cuando enumere, use el &amp;lt;formato&amp;gt; especificado, que puede ser &lt;code&gt;short&lt;/code&gt; , &lt;code&gt;medium&lt;/code&gt; y &lt;code&gt;long&lt;/code&gt; . Cuando se omite, el formato predeterminado es &lt;code&gt;short&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0de171dd2f5efd6969d6cc172c7d84e26d4bf231" translate="yes" xml:space="preserve">
          <source>When loosening unreachable objects, do not bother loosening any objects older than &lt;code&gt;&amp;lt;when&amp;gt;&lt;/code&gt;. This can be used to optimize out the write of any objects that would be immediately pruned by a follow-up &lt;code&gt;git prune&lt;/code&gt;.</source>
          <target state="translated">Al aflojar objetos inalcanzables, no se moleste en aflojar ning&amp;uacute;n objeto m&amp;aacute;s antiguo que &lt;code&gt;&amp;lt;when&amp;gt;&lt;/code&gt; . Esto se puede usar para optimizar la escritura de cualquier objeto que se podar&amp;iacute;a inmediatamente con un &lt;code&gt;git prune&lt;/code&gt; de seguimiento .</target>
        </trans-unit>
        <trans-unit id="2ecd3bb7ffbd4f19e0c8d754d499b7e6453c84ef" translate="yes" xml:space="preserve">
          <source>When merging an annotated (and possibly signed) tag, Git always creates a merge commit even if a fast-forward merge is possible, and the commit message template is prepared with the tag message. Additionally, if the tag is signed, the signature check is reported as a comment in the message template. See also &lt;a href=&quot;git-tag&quot;&gt;git-tag[1]&lt;/a&gt;.</source>
          <target state="translated">Al fusionar una etiqueta anotada (y posiblemente firmada), Git siempre crea una confirmaci&amp;oacute;n de combinaci&amp;oacute;n incluso si es posible una combinaci&amp;oacute;n de avance r&amp;aacute;pido, y la plantilla de mensaje de confirmaci&amp;oacute;n se prepara con el mensaje de la etiqueta. Adem&amp;aacute;s, si la etiqueta est&amp;aacute; firmada, la verificaci&amp;oacute;n de la firma se informa como un comentario en la plantilla de mensaje. Consulte tambi&amp;eacute;n &lt;a href=&quot;git-tag&quot;&gt;git-tag [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="fe18117100b1e7049979d08b3604c39a0ff0f463" translate="yes" xml:space="preserve">
          <source>When merging notes, be more verbose. When pruning notes, report all object names whose notes are removed.</source>
          <target state="translated">Al fusionar las notas,sean más verbosos.Cuando pode las notas,informe de todos los nombres de los objetos cuyas notas se hayan eliminado.</target>
        </trans-unit>
        <trans-unit id="2a6ffb56c555f1836377a0b4eb9f01a6db423b92" translate="yes" xml:space="preserve">
          <source>When merging notes, operate quietly.</source>
          <target state="translated">Cuando fusione las notas,opere en silencio.</target>
        </trans-unit>
        <trans-unit id="452e3643271eefd0a90ad1d2e336613f571129ec" translate="yes" xml:space="preserve">
          <source>When merging notes, resolve notes conflicts using the given strategy. The following strategies are recognized: &quot;manual&quot; (default), &quot;ours&quot;, &quot;theirs&quot;, &quot;union&quot; and &quot;cat_sort_uniq&quot;. This option overrides the &quot;notes.mergeStrategy&quot; configuration setting. See the &quot;NOTES MERGE STRATEGIES&quot; section below for more information on each notes merge strategy.</source>
          <target state="translated">Al fusionar las notas,resuelva los conflictos de las notas usando la estrategia dada.Se reconocen las siguientes estrategias:&quot;manual&quot; (por defecto),&quot;nuestra&quot;,&quot;de ellos&quot;,&quot;unión&quot; y &quot;cat_sort_uniq&quot;.Esta opción anula la configuración de &quot;notes.mergeStrategy&quot;.Consulte la sección &quot;ESTRATEGIAS DE FUSIÓN DE NOTAS&quot; a continuación para obtener más información sobre cada estrategia de fusión de notas.</target>
        </trans-unit>
        <trans-unit id="a1f0170f40742ebfd5d162ab78a6fe6f60fbd4e1" translate="yes" xml:space="preserve">
          <source>When missing or is set to &lt;code&gt;default&lt;/code&gt;, many fields in the stat structure are checked to detect if a file has been modified since Git looked at it. When this configuration variable is set to &lt;code&gt;minimal&lt;/code&gt;, sub-second part of mtime and ctime, the uid and gid of the owner of the file, the inode number (and the device number, if Git was compiled to use it), are excluded from the check among these fields, leaving only the whole-second part of mtime (and ctime, if &lt;code&gt;core.trustCtime&lt;/code&gt; is set) and the filesize to be checked.</source>
          <target state="translated">Cuando falta o est&amp;aacute; configurado como &lt;code&gt;default&lt;/code&gt; , muchos campos en la estructura de estad&amp;iacute;sticas se verifican para detectar si un archivo se ha modificado desde que Git lo mir&amp;oacute;. Cuando esta variable de configuraci&amp;oacute;n se establece en una parte &lt;code&gt;minimal&lt;/code&gt; , inferior a un segundo de mtime y ctime, el uid y gid del propietario del archivo, el n&amp;uacute;mero de inodo (y el n&amp;uacute;mero de dispositivo, si Git se compil&amp;oacute; para usarlo), se excluyen de la verificaci&amp;oacute;n entre estos campos, dejando solo la parte de un segundo completo de mtime (y ctime, si &lt;code&gt;core.trustCtime&lt;/code&gt; est&amp;aacute; configurado) y la parte por verificar.</target>
        </trans-unit>
        <trans-unit id="0689b4b76e007bf9e9f69e1368a4eed9e3d9055a" translate="yes" xml:space="preserve">
          <source>When more than one pattern matches the path, a later line overrides an earlier line. This overriding is done per attribute.</source>
          <target state="translated">Cuando más de un patrón coincide con el camino,una línea posterior anula una línea anterior.Esta anulación se hace por atributo.</target>
        </trans-unit>
        <trans-unit id="7de11bcf0fc6f31a9913abfce53b7b83c6075119" translate="yes" xml:space="preserve">
          <source>When moved lines are colored using e.g. the &lt;code&gt;diff.colorMoved&lt;/code&gt; setting, this option controls the &lt;code&gt;&amp;lt;mode&amp;gt;&lt;/code&gt; how spaces are treated for details of valid modes see &lt;code&gt;--color-moved-ws&lt;/code&gt; in &lt;a href=&quot;git-diff&quot;&gt;git-diff[1]&lt;/a&gt;.</source>
          <target state="translated">Cuando las l&amp;iacute;neas movidas se colorean usando, por ejemplo, la configuraci&amp;oacute;n &lt;code&gt;diff.colorMoved&lt;/code&gt; , esta opci&amp;oacute;n controla el &lt;code&gt;&amp;lt;mode&amp;gt;&lt;/code&gt; c&amp;oacute;mo se tratan los espacios para obtener detalles de los modos v&amp;aacute;lidos, ver &lt;code&gt;--color-moved-ws&lt;/code&gt; en &lt;a href=&quot;git-diff&quot;&gt;git-diff [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="52b8058d0bfbbff70a9ce60ad478453479b9a747" translate="yes" xml:space="preserve">
          <source>When multiple patches are output, the subject prefix will instead be &quot;[PATCH n/m] &quot;. To force 1/1 to be added for a single patch, use &lt;code&gt;-n&lt;/code&gt;. To omit patch numbers from the subject, use &lt;code&gt;-N&lt;/code&gt;.</source>
          <target state="translated">Cuando se env&amp;iacute;an varios patches, el prefijo del sujeto ser&amp;aacute; &quot;[PATCH n / m]&quot;. Para forzar que se agregue 1/1 para un solo parche, use &lt;code&gt;-n&lt;/code&gt; . Para omitir los n&amp;uacute;meros de parche del tema, use &lt;code&gt;-N&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f1cdd3c7b73eb4476790691d3f8180aaaecc09ec" translate="yes" xml:space="preserve">
          <source>When multiple working trees are used, most of files in $GIT_DIR are per-worktree with a few known exceptions. All files under &lt;code&gt;common&lt;/code&gt; however will be shared between all working trees.</source>
          <target state="translated">Cuando se utilizan varios &amp;aacute;rboles de trabajo, la mayor&amp;iacute;a de los archivos en $ GIT_DIR son por &amp;aacute;rbol de trabajo con algunas excepciones conocidas. Sin embargo, todos los archivos en &lt;code&gt;common&lt;/code&gt; se compartir&amp;aacute;n entre todos los &amp;aacute;rboles de trabajo.</target>
        </trans-unit>
        <trans-unit id="dea6d60865820d20f017799a5c24231f89c30494" translate="yes" xml:space="preserve">
          <source>When neither the command-line nor the configuration specify what to push, the default behavior is used, which corresponds to the &lt;code&gt;simple&lt;/code&gt; value for &lt;code&gt;push.default&lt;/code&gt;: the current branch is pushed to the corresponding upstream branch, but as a safety measure, the push is aborted if the upstream branch does not have the same name as the local one.</source>
          <target state="translated">Cuando ni la l&amp;iacute;nea de comandos ni la configuraci&amp;oacute;n especifican qu&amp;eacute; empujar, se utiliza el comportamiento predeterminado, que corresponde al valor &lt;code&gt;simple&lt;/code&gt; de &lt;code&gt;push.default&lt;/code&gt; : la rama actual se empuja a la rama ascendente correspondiente, pero como medida de seguridad, la se cancela si la rama ascendente no tiene el mismo nombre que la local.</target>
        </trans-unit>
        <trans-unit id="60de604c8e6be170ca14a17caf3d8c66cf8e4c1f" translate="yes" xml:space="preserve">
          <source>When no &lt;code&gt;&amp;lt;stash&amp;gt;&lt;/code&gt; is given, &lt;code&gt;stash@{0}&lt;/code&gt; is assumed, otherwise &lt;code&gt;&amp;lt;stash&amp;gt;&lt;/code&gt; must be a reference of the form &lt;code&gt;stash@{&amp;lt;revision&amp;gt;}&lt;/code&gt;.</source>
          <target state="translated">Cuando no se proporciona &lt;code&gt;&amp;lt;stash&amp;gt;&lt;/code&gt; , se asume &lt;code&gt;stash@{0}&lt;/code&gt; ; de lo contrario, &lt;code&gt;&amp;lt;stash&amp;gt;&lt;/code&gt; debe ser una referencia de la forma &lt;code&gt;stash@{&amp;lt;revision&amp;gt;}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1cb728a038f1c7e17113ec68844d5bac04accdd7" translate="yes" xml:space="preserve">
          <source>When no &lt;code&gt;--push-option=&amp;lt;option&amp;gt;&lt;/code&gt; argument is given from the command line, &lt;code&gt;git push&lt;/code&gt; behaves as if each &amp;lt;value&amp;gt; of this variable is given as &lt;code&gt;--push-option=&amp;lt;value&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">Cuando no se &lt;code&gt;--push-option=&amp;lt;option&amp;gt;&lt;/code&gt; ning&amp;uacute;n argumento --push-option = &amp;lt;option&amp;gt; desde la l&amp;iacute;nea de comando, &lt;code&gt;git push&lt;/code&gt; se comporta como si cada &amp;lt;valor&amp;gt; de esta variable se diera como &lt;code&gt;--push-option=&amp;lt;value&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a166fc08fc71ee0e3d700a37b70f8845fb53d565" translate="yes" xml:space="preserve">
          <source>When no &lt;code&gt;--whitespace&lt;/code&gt; flag is given from the command line, this configuration item is used as the default.</source>
          <target state="translated">Cuando no se &lt;code&gt;--whitespace&lt;/code&gt; una marca de espacio en blanco desde la l&amp;iacute;nea de comando, este elemento de configuraci&amp;oacute;n se usa como predeterminado.</target>
        </trans-unit>
        <trans-unit id="b29755631cf67968424c24b41012b3c14a5bc20f" translate="yes" xml:space="preserve">
          <source>When no refspec was given on the command line, then &lt;code&gt;git pull&lt;/code&gt; uses the refspec from the configuration or &lt;code&gt;$GIT_DIR/remotes/&amp;lt;origin&amp;gt;&lt;/code&gt;. In such cases, the following rules apply:</source>
          <target state="translated">Cuando no se proporcion&amp;oacute; refspec en la l&amp;iacute;nea de comando, &lt;code&gt;git pull&lt;/code&gt; usa refspec de la configuraci&amp;oacute;n o &lt;code&gt;$GIT_DIR/remotes/&amp;lt;origin&amp;gt;&lt;/code&gt; . En tales casos, se aplican las siguientes reglas:</target>
        </trans-unit>
        <trans-unit id="feee7e6efffd7b04e5558aa779c91bc6a7b795bd" translate="yes" xml:space="preserve">
          <source>When no remote is specified (via -r) the &lt;code&gt;HEAD&lt;/code&gt; branch from CVS is imported to the &lt;code&gt;origin&lt;/code&gt; branch within the Git repository, as &lt;code&gt;HEAD&lt;/code&gt; already has a special meaning for Git. When a remote is specified the &lt;code&gt;HEAD&lt;/code&gt; branch is named remotes/&amp;lt;remote&amp;gt;/master mirroring &lt;code&gt;git clone&lt;/code&gt; behaviour. Use this option if you want to import into a different branch.</source>
          <target state="translated">Cuando no se especifica ning&amp;uacute;n control remoto (a trav&amp;eacute;s de -r), la rama &lt;code&gt;HEAD&lt;/code&gt; de CVS se importa a la rama de &lt;code&gt;origin&lt;/code&gt; dentro del repositorio de Git, ya que &lt;code&gt;HEAD&lt;/code&gt; ya tiene un significado especial para Git. Cuando se especifica un control remoto, la rama &lt;code&gt;HEAD&lt;/code&gt; se denomina remotes / &amp;lt;remote&amp;gt; / master mirroring &lt;code&gt;git clone&lt;/code&gt; behavior. Utilice esta opci&amp;oacute;n si desea importar a una rama diferente.</target>
        </trans-unit>
        <trans-unit id="ac03f302c1aadb048fb52d65d000d2a5006af96e" translate="yes" xml:space="preserve">
          <source>When no remote is specified, by default the &lt;code&gt;origin&lt;/code&gt; remote will be used, unless there&amp;rsquo;s an upstream branch configured for the current branch.</source>
          <target state="translated">Cuando no se especifica ning&amp;uacute;n control remoto, de forma predeterminada se utilizar&amp;aacute; el control remoto de &lt;code&gt;origin&lt;/code&gt; , a menos que haya una rama ascendente configurada para la rama actual.</target>
        </trans-unit>
        <trans-unit id="d52e3dbbfef371828cf1a5d65a8a3d7860fbbc07" translate="yes" xml:space="preserve">
          <source>When on branch &amp;lt;name&amp;gt;, it overrides &lt;code&gt;branch.&amp;lt;name&amp;gt;.remote&lt;/code&gt; for pushing. It also overrides &lt;code&gt;remote.pushDefault&lt;/code&gt; for pushing from branch &amp;lt;name&amp;gt;. When you pull from one place (e.g. your upstream) and push to another place (e.g. your own publishing repository), you would want to set &lt;code&gt;remote.pushDefault&lt;/code&gt; to specify the remote to push to for all branches, and use this option to override it for a specific branch.</source>
          <target state="translated">Cuando est&amp;aacute; en la rama &amp;lt;nombre&amp;gt;, anula la &lt;code&gt;branch.&amp;lt;name&amp;gt;.remote&lt;/code&gt; para empujar. Tambi&amp;eacute;n anula &lt;code&gt;remote.pushDefault&lt;/code&gt; para enviar desde la rama &amp;lt;nombre&amp;gt;. Cuando extrae de un lugar (por ejemplo, su flujo ascendente) y empuja a otro lugar (por ejemplo, su propio repositorio de publicaci&amp;oacute;n), querr&amp;aacute; establecer &lt;code&gt;remote.pushDefault&lt;/code&gt; para especificar el control remoto al que enviar para todas las ramas, y use esta opci&amp;oacute;n para anularlo para una rama espec&amp;iacute;fica.</target>
        </trans-unit>
        <trans-unit id="2c5d62eaf7dc4c0abb09284bfc14bacce3f382aa" translate="yes" xml:space="preserve">
          <source>When on branch &amp;lt;name&amp;gt;, it tells &lt;code&gt;git fetch&lt;/code&gt; and &lt;code&gt;git push&lt;/code&gt; which remote to fetch from/push to. The remote to push to may be overridden with &lt;code&gt;remote.pushDefault&lt;/code&gt; (for all branches). The remote to push to, for the current branch, may be further overridden by &lt;code&gt;branch.&amp;lt;name&amp;gt;.pushRemote&lt;/code&gt;. If no remote is configured, or if you are not on any branch, it defaults to &lt;code&gt;origin&lt;/code&gt; for fetching and &lt;code&gt;remote.pushDefault&lt;/code&gt; for pushing. Additionally, &lt;code&gt;.&lt;/code&gt; (a period) is the current local repository (a dot-repository), see &lt;code&gt;branch.&amp;lt;name&amp;gt;.merge&lt;/code&gt;'s final note below.</source>
          <target state="translated">Cuando est&amp;aacute; en la rama &amp;lt;nombre&amp;gt;, le dice a &lt;code&gt;git fetch&lt;/code&gt; y &lt;code&gt;git push&lt;/code&gt; desde qu&amp;eacute; control remoto buscar / empujar. El control remoto al que empujar se puede anular con &lt;code&gt;remote.pushDefault&lt;/code&gt; (para todas las ramas). El control remoto al que empujar, para la rama actual, puede ser anulado a&amp;uacute;n m&amp;aacute;s por &lt;code&gt;branch.&amp;lt;name&amp;gt;.pushRemote&lt;/code&gt; . Si no se configura ning&amp;uacute;n control remoto, o si no se encuentra en ninguna rama, el valor predeterminado es el &lt;code&gt;origin&lt;/code&gt; para buscar y el &lt;code&gt;remote.pushDefault&lt;/code&gt; para enviar . Adem&amp;aacute;s, &lt;code&gt;.&lt;/code&gt; (un punto) es el repositorio local actual (un repositorio de puntos), consulte la nota final de la &lt;code&gt;branch.&amp;lt;name&amp;gt;.merge&lt;/code&gt; continuaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="99875f2b6ac5843dc20c0934eb9cdf10f7711c8e" translate="yes" xml:space="preserve">
          <source>When one of these flags is specified, the object name recorded for the paths are not updated. Instead, these options set and unset the &quot;fsmonitor valid&quot; bit for the paths. See section &quot;File System Monitor&quot; below for more information.</source>
          <target state="translated">Cuando se especifica una de estas banderas,los nombres de los objetos registrados para las rutas no se actualizan.En su lugar,estas opciones establecen y desestablecen el bit &quot;fsmonitor válido&quot; para las rutas.Véase la sección &quot;Monitor del sistema de archivos&quot; más abajo para más información.</target>
        </trans-unit>
        <trans-unit id="095b3a1631077463d64190b5c04e9903f37eec26" translate="yes" xml:space="preserve">
          <source>When one of these flags is specified, the object name recorded for the paths are not updated. Instead, these options set and unset the &quot;skip-worktree&quot; bit for the paths. See section &quot;Skip-worktree bit&quot; below for more information.</source>
          <target state="translated">Cuando se especifica una de estas banderas,los nombres de los objetos registrados para las rutas no se actualizan.En su lugar,estas opciones establecen y desestablecen el bit &quot;skip-worktree&quot; para las rutas.Véase la sección &quot;Skip-worktree bit&quot; más abajo para más información.</target>
        </trans-unit>
        <trans-unit id="6e8f4e10b13b6ff83d83df5063d58c36d64a87b8" translate="yes" xml:space="preserve">
          <source>When one or more &lt;code&gt;&amp;lt;ref&amp;gt;&lt;/code&gt; are specified explicitly (whether on the command line or via &lt;code&gt;--stdin&lt;/code&gt;), it can be either a single pattern, or a pair of such pattern separated by a colon &quot;:&quot; (this means that a ref name cannot have a colon in it). A single pattern &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; is just a shorthand for &lt;code&gt;&amp;lt;name&amp;gt;:&amp;lt;name&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">Cuando uno o m&amp;aacute;s &lt;code&gt;&amp;lt;ref&amp;gt;&lt;/code&gt; se especifican expl&amp;iacute;citamente (ya sea en la l&amp;iacute;nea de comando o mediante &lt;code&gt;--stdin&lt;/code&gt; ), puede ser un patr&amp;oacute;n &amp;uacute;nico o un par de dichos patrones separados por dos puntos &quot;:&quot; (esto significa que una referencia el nombre no puede tener dos puntos). Un solo patr&amp;oacute;n &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; es solo una abreviatura de &lt;code&gt;&amp;lt;name&amp;gt;:&amp;lt;name&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9a9b16c534806b7638cc46892a28dd173752ed8c" translate="yes" xml:space="preserve">
          <source>When packing a blob fast-import always attempts to deltify against the last blob written. Unless specifically arranged for by the frontend, this will probably not be a prior version of the same file, so the generated delta will not be the smallest possible. The resulting packfile will be compressed, but will not be optimal.</source>
          <target state="translated">Al empacar una mancha,la importación rápida siempre intenta delinearse con la última mancha escrita.A menos que el frontend lo disponga específicamente,probablemente no sea una versión anterior del mismo archivo,por lo que el delta generado no será el más pequeño posible.El archivo de paquete resultante estará comprimido,pero no será óptimo.</target>
        </trans-unit>
        <trans-unit id="76e4bf1d99930055a44aa05818b2c065730f60bb" translate="yes" xml:space="preserve">
          <source>When passed to &lt;code&gt;init&lt;/code&gt; or &lt;code&gt;clone&lt;/code&gt; this regular expression will be preserved as a config key. See &lt;code&gt;fetch&lt;/code&gt; for a description of &lt;code&gt;--ignore-paths&lt;/code&gt;.</source>
          <target state="translated">Cuando se pasa a &lt;code&gt;init&lt;/code&gt; o &lt;code&gt;clone&lt;/code&gt; , esta expresi&amp;oacute;n regular se conservar&amp;aacute; como clave de configuraci&amp;oacute;n. Consulte &lt;code&gt;fetch&lt;/code&gt; para obtener una descripci&amp;oacute;n de &lt;code&gt;--ignore-paths&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d6a3308486ea0114e28423fc585e726bdfefa0d3" translate="yes" xml:space="preserve">
          <source>When passed to &lt;code&gt;init&lt;/code&gt; or &lt;code&gt;clone&lt;/code&gt; this regular expression will be preserved as a config key. See &lt;code&gt;fetch&lt;/code&gt; for a description of &lt;code&gt;--ignore-refs&lt;/code&gt;.</source>
          <target state="translated">Cuando se pasa a &lt;code&gt;init&lt;/code&gt; o &lt;code&gt;clone&lt;/code&gt; , esta expresi&amp;oacute;n regular se conservar&amp;aacute; como clave de configuraci&amp;oacute;n. Consulte &lt;code&gt;fetch&lt;/code&gt; para obtener una descripci&amp;oacute;n de &lt;code&gt;--ignore-refs&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="247954c989ece2f916f72b869f8bb1eb7f01f09e" translate="yes" xml:space="preserve">
          <source>When passed to &lt;code&gt;init&lt;/code&gt; or &lt;code&gt;clone&lt;/code&gt; this regular expression will be preserved as a config key. See &lt;code&gt;fetch&lt;/code&gt; for a description of &lt;code&gt;--include-paths&lt;/code&gt;.</source>
          <target state="translated">Cuando se pasa a &lt;code&gt;init&lt;/code&gt; o &lt;code&gt;clone&lt;/code&gt; , esta expresi&amp;oacute;n regular se conservar&amp;aacute; como clave de configuraci&amp;oacute;n. Consulte &lt;code&gt;fetch&lt;/code&gt; para obtener una descripci&amp;oacute;n de &lt;code&gt;--include-paths&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="701b3c119f368819101d8af88b842359e5cb7ac8" translate="yes" xml:space="preserve">
          <source>When paths are given, show them (note that this isn&amp;rsquo;t really raw pathnames, but rather a list of patterns to match). Otherwise implicitly uses the root level of the tree as the sole path argument.</source>
          <target state="translated">Cuando se proporcionen rutas, mu&amp;eacute;strelas (tenga en cuenta que esto no es realmente nombres de ruta sin procesar, sino m&amp;aacute;s bien una lista de patrones que deben coincidir). De lo contrario, utiliza impl&amp;iacute;citamente el nivel de ra&amp;iacute;z del &amp;aacute;rbol como &amp;uacute;nico argumento de ruta.</target>
        </trans-unit>
        <trans-unit id="a12bc3537fe67daac72917848a655d5078c91711" translate="yes" xml:space="preserve">
          <source>When pathspec is given on the command line, commit the contents of the files that match the pathspec without recording the changes already added to the index. The contents of these files are also staged for the next commit on top of what have been staged before.</source>
          <target state="translated">Cuando se da pathspec en la línea de comandos,confirme el contenido de los archivos que coinciden con el pathspec sin grabar los cambios ya añadidos al índice.El contenido de estos archivos también se pone en escena para la siguiente confirmación,además de lo que se ha puesto en escena anteriormente.</target>
        </trans-unit>
        <trans-unit id="1a6dc462ca36ebe8779cf750259e000c162a076a" translate="yes" xml:space="preserve">
          <source>When pathspec is given to &lt;code&gt;git stash push&lt;/code&gt;, the new stash entry records the modified states only for the files that match the pathspec. The index entries and working tree files are then rolled back to the state in HEAD only for these files, too, leaving files that do not match the pathspec intact.</source>
          <target state="translated">Cuando se le da pathpec a &lt;code&gt;git stash push&lt;/code&gt; , la nueva entrada stash registra los estados modificados solo para los archivos que coinciden con la pathpec. Las entradas de &amp;iacute;ndice y los archivos del &amp;aacute;rbol de trabajo tambi&amp;eacute;n se revierten al estado en HEAD solo para estos archivos, dejando intactos los archivos que no coinciden con la especificaci&amp;oacute;n de ruta.</target>
        </trans-unit>
        <trans-unit id="20284d20320c7f9cdd342728ed75cf98e12a1b6c" translate="yes" xml:space="preserve">
          <source>When possible, &lt;code&gt;pack-objects&lt;/code&gt; tries to reuse existing on-disk deltas to avoid having to search for new ones on the fly. This is an important optimization for serving fetches, because it means the server can avoid inflating most objects at all and just send the bytes directly from disk. This optimization can&amp;rsquo;t work when an object is stored as a delta against a base which the receiver does not have (and which we are not already sending). In that case the server &quot;breaks&quot; the delta and has to find a new one, which has a high CPU cost. Therefore it&amp;rsquo;s important for performance that the set of objects in on-disk delta relationships match what a client would fetch.</source>
          <target state="translated">Cuando es posible, &lt;code&gt;pack-objects&lt;/code&gt; intenta reutilizar los deltas existentes en el disco para evitar tener que buscar nuevos sobre la marcha. Esta es una optimizaci&amp;oacute;n importante para el servicio de recuperaciones, porque significa que el servidor puede evitar inflar la mayor&amp;iacute;a de los objetos y simplemente enviar los bytes directamente desde el disco. Esta optimizaci&amp;oacute;n no puede funcionar cuando un objeto se almacena como un delta contra una base que el receptor no tiene (y que a&amp;uacute;n no estamos enviando). En ese caso, el servidor &quot;rompe&quot; el delta y tiene que encontrar uno nuevo, que tiene un alto costo de CPU. Por lo tanto, es importante para el rendimiento que el conjunto de objetos en las relaciones delta en el disco coincida con lo que buscar&amp;iacute;a un cliente.</target>
        </trans-unit>
        <trans-unit id="a5d1e2c9c76493f4d0a607592b15388eabc93e4e" translate="yes" xml:space="preserve">
          <source>When present, it will also copy the value of &lt;code&gt;submodule.$name.update&lt;/code&gt;. This command does not alter existing information in .git/config. You can then customize the submodule clone URLs in .git/config for your local setup and proceed to &lt;code&gt;git submodule update&lt;/code&gt;; you can also just use &lt;code&gt;git submodule update --init&lt;/code&gt; without the explicit &lt;code&gt;init&lt;/code&gt; step if you do not intend to customize any submodule locations.</source>
          <target state="translated">Cuando est&amp;eacute; presente, tambi&amp;eacute;n copiar&amp;aacute; el valor del &lt;code&gt;submodule.$name.update&lt;/code&gt; . Este comando no altera la informaci&amp;oacute;n existente en .git / config. Luego, puede personalizar las URL de clonaci&amp;oacute;n del subm&amp;oacute;dulo en .git / config para su configuraci&amp;oacute;n local y proceder a la &lt;code&gt;git submodule update&lt;/code&gt; ; tambi&amp;eacute;n puede usar &lt;code&gt;git submodule update --init&lt;/code&gt; sin el paso de &lt;code&gt;init&lt;/code&gt; expl&amp;iacute;cito si no tiene la intenci&amp;oacute;n de personalizar ninguna ubicaci&amp;oacute;n de subm&amp;oacute;dulo.</target>
        </trans-unit>
        <trans-unit id="fb5aacfd35a68a879acea2ba6edf150f79c935f9" translate="yes" xml:space="preserve">
          <source>When pushing to a remote that is different from the remote you normally pull from, work as &lt;code&gt;current&lt;/code&gt;. This is the safest option and is suited for beginners.</source>
          <target state="translated">Al presionar a un control remoto que es diferente del control remoto del que normalmente extrae, trabaje como &lt;code&gt;current&lt;/code&gt; . Esta es la opci&amp;oacute;n m&amp;aacute;s segura y adecuada para principiantes.</target>
        </trans-unit>
        <trans-unit id="f99e4f9643f5e033d51557f2aab4b69c000e9e23" translate="yes" xml:space="preserve">
          <source>When pushing, request the remote server to update refs in a single atomic transaction. If successful, all refs will be updated, or none will. If the remote side does not support this capability, the push will fail.</source>
          <target state="translated">Al empujar,solicite al servidor remoto que actualice los refs en una sola transacción atómica.Si tiene éxito,todos los árbitros se actualizarán,o ninguno lo hará.Si el lado remoto no soporta esta capacidad,el empuje fallará.</target>
        </trans-unit>
        <trans-unit id="24e8d08f5bcd393fd98db303b5bfff38ae149335" translate="yes" xml:space="preserve">
          <source>When reading the &lt;code&gt;core.repositoryformatversion&lt;/code&gt; variable, a git implementation which supports version 1 MUST also read any configuration keys found in the &lt;code&gt;extensions&lt;/code&gt; section of the configuration file.</source>
          <target state="translated">Al leer la variable &lt;code&gt;core.repositoryformatversion&lt;/code&gt; , una implementaci&amp;oacute;n de git que admita la versi&amp;oacute;n 1 DEBE tambi&amp;eacute;n leer las claves de configuraci&amp;oacute;n que se encuentran en la secci&amp;oacute;n de &lt;code&gt;extensions&lt;/code&gt; del archivo de configuraci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="d49438aa2f88cdc57a3b7001a0406b8491bbad55" translate="yes" xml:space="preserve">
          <source>When reading trailers, there can be whitespaces after the token, the separator and the value. There can also be whitespaces inside the token and the value. The value may be split over multiple lines with each subsequent line starting with whitespace, like the &quot;folding&quot; in RFC 822.</source>
          <target state="translated">Al leer los trailers,puede haber espacios en blanco después de la ficha,el separador y el valor.También puede haber espacios en blanco dentro de la ficha y el valor.El valor puede dividirse en varias líneas,y cada línea subsiguiente puede empezar con un espacio en blanco,como el &quot;plegado&quot; en RFC 822.</target>
        </trans-unit>
        <trans-unit id="c808cfa1e01223bf6f90ceb1edbec20a1b9b3321" translate="yes" xml:space="preserve">
          <source>When reading, the values are read from the system, global and repository local configuration files by default, and options &lt;code&gt;--system&lt;/code&gt;, &lt;code&gt;--global&lt;/code&gt;, &lt;code&gt;--local&lt;/code&gt;, &lt;code&gt;--worktree&lt;/code&gt; and &lt;code&gt;--file &amp;lt;filename&amp;gt;&lt;/code&gt; can be used to tell the command to read from only that location (see &lt;a href=&quot;#FILES&quot;&gt;FILES&lt;/a&gt;).</source>
          <target state="translated">Al leer, los valores se leen desde los archivos de configuraci&amp;oacute;n del sistema, global y local del repositorio de forma predeterminada, y las opciones &lt;code&gt;--system&lt;/code&gt; , &lt;code&gt;--global&lt;/code&gt; , &lt;code&gt;--local&lt;/code&gt; , &lt;code&gt;--worktree&lt;/code&gt; y &lt;code&gt;--file &amp;lt;filename&amp;gt;&lt;/code&gt; se pueden usar para indicarle al comando para leer solo desde esa ubicaci&amp;oacute;n (ver &lt;a href=&quot;#FILES&quot;&gt;ARCHIVOS&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="35058e27fd0502a5cbd6b1225fdbfa49a5b7004d" translate="yes" xml:space="preserve">
          <source>When recording the commit, append a line that says &quot;(cherry picked from commit &amp;hellip;​)&quot; to the original commit message in order to indicate which commit this change was cherry-picked from. This is done only for cherry picks without conflicts. Do not use this option if you are cherry-picking from your private branch because the information is useless to the recipient. If on the other hand you are cherry-picking between two publicly visible branches (e.g. backporting a fix to a maintenance branch for an older release from a development branch), adding this information can be useful.</source>
          <target state="translated">Al grabar la confirmaci&amp;oacute;n, agregue una l&amp;iacute;nea que diga &quot;(seleccionado de la confirmaci&amp;oacute;n ...)&quot; al mensaje de confirmaci&amp;oacute;n original para indicar de qu&amp;eacute; confirmaci&amp;oacute;n se seleccion&amp;oacute; este cambio. Esto se hace solo para selecciones de cereza sin conflictos. No use esta opci&amp;oacute;n si est&amp;aacute; seleccionando cuidadosamente en su sucursal privada porque la informaci&amp;oacute;n es in&amp;uacute;til para el destinatario. Si, por otro lado, est&amp;aacute; eligiendo entre dos ramas visibles p&amp;uacute;blicamente (por ejemplo, exportando una soluci&amp;oacute;n a una rama de mantenimiento para una versi&amp;oacute;n anterior de una rama de desarrollo), agregar esta informaci&amp;oacute;n puede ser &amp;uacute;til.</target>
        </trans-unit>
        <trans-unit id="ccaf8e1c6e304870dc79f0b6ba9e209459375c19" translate="yes" xml:space="preserve">
          <source>When recording your own work, the contents of modified files in your working tree are temporarily stored to a staging area called the &quot;index&quot; with &lt;code&gt;git add&lt;/code&gt;. A file can be reverted back, only in the index but not in the working tree, to that of the last commit with &lt;code&gt;git restore --staged &amp;lt;file&amp;gt;&lt;/code&gt;, which effectively reverts &lt;code&gt;git add&lt;/code&gt; and prevents the changes to this file from participating in the next commit. After building the state to be committed incrementally with these commands, &lt;code&gt;git commit&lt;/code&gt; (without any pathname parameter) is used to record what has been staged so far. This is the most basic form of the command. An example:</source>
          <target state="translated">Al grabar su propio trabajo, el contenido de los archivos modificados en su &amp;aacute;rbol de trabajo se almacena temporalmente en un &amp;aacute;rea de preparaci&amp;oacute;n llamada &quot;&amp;iacute;ndice&quot; con &lt;code&gt;git add&lt;/code&gt; . Un archivo se puede revertir, solo en el &amp;iacute;ndice pero no en el &amp;aacute;rbol de trabajo, al de la &amp;uacute;ltima confirmaci&amp;oacute;n con &lt;code&gt;git restore --staged &amp;lt;file&amp;gt;&lt;/code&gt; , que efectivamente revierte &lt;code&gt;git add&lt;/code&gt; y evita que los cambios en este archivo participen en el siguiente compromiso. Despu&amp;eacute;s de construir el estado para que se confirme de forma incremental con estos comandos, se usa &lt;code&gt;git commit&lt;/code&gt; (sin ning&amp;uacute;n par&amp;aacute;metro de nombre de ruta) para registrar lo que se ha realizado hasta ahora. &amp;Eacute;sta es la forma m&amp;aacute;s b&amp;aacute;sica del comando. Un ejemplo:</target>
        </trans-unit>
        <trans-unit id="35cd60207a202ee3a283a2d8b2047b148806b6b3" translate="yes" xml:space="preserve">
          <source>When remote and local branch are both named &quot;test&quot;:</source>
          <target state="translated">Cuando la sucursal remota y la local se denominan ambas &quot;prueba&quot;:</target>
        </trans-unit>
        <trans-unit id="2eefb86cce90a60f5ab07db6487aa99da3ba4333" translate="yes" xml:space="preserve">
          <source>When rename/copy is involved, &lt;code&gt;file1&lt;/code&gt; and &lt;code&gt;file2&lt;/code&gt; show the name of the source file of the rename/copy and the name of the file that rename/copy produces, respectively.</source>
          <target state="translated">Cuando se trata de cambio de nombre / copia, &lt;code&gt;file1&lt;/code&gt; y &lt;code&gt;file2&lt;/code&gt; muestran el nombre del archivo de origen del cambio de nombre / copia y el nombre del archivo que produce el cambio de nombre / copia, respectivamente.</target>
        </trans-unit>
        <trans-unit id="3475b12f6b8e32c3a9c4f496f5f906d95460d63d" translate="yes" xml:space="preserve">
          <source>When repacking with delta islands the delta window tends to get clogged with candidates that are forbidden by the config. Repacking with a big --window helps (and doesn&amp;rsquo;t take as long as it otherwise might because we can reject some object pairs based on islands before doing any computation on the content).</source>
          <target state="translated">Cuando se vuelve a empaquetar con islas delta, la ventana delta tiende a obstruirse con candidatos que est&amp;aacute;n prohibidos por la configuraci&amp;oacute;n. El reempaquetado con una ventana grande ayuda (y no toma tanto tiempo como lo har&amp;iacute;a porque podemos rechazar algunos pares de objetos basados ​​en islas antes de hacer cualquier c&amp;aacute;lculo sobre el contenido).</target>
        </trans-unit>
        <trans-unit id="9f9b14ed67913870e54606a7e4140c245c13e689" translate="yes" xml:space="preserve">
          <source>When restoring files in the working tree from the index, use stage #2 (&lt;code&gt;ours&lt;/code&gt;) or #3 (&lt;code&gt;theirs&lt;/code&gt;) for unmerged paths.</source>
          <target state="translated">Cuando restaure archivos en el &amp;aacute;rbol de trabajo desde el &amp;iacute;ndice, use la etapa # 2 (la &lt;code&gt;ours&lt;/code&gt; ) o la # 3 (la de &lt;code&gt;theirs&lt;/code&gt; ) para las rutas no fusionadas.</target>
        </trans-unit>
        <trans-unit id="f350add778942f50c4b0b2f8798762ec9d6fc205" translate="yes" xml:space="preserve">
          <source>When restoring files on the working tree from the index, do not abort the operation if there are unmerged entries and neither &lt;code&gt;--ours&lt;/code&gt;, &lt;code&gt;--theirs&lt;/code&gt;, &lt;code&gt;--merge&lt;/code&gt; or &lt;code&gt;--conflict&lt;/code&gt; is specified. Unmerged paths on the working tree are left alone.</source>
          <target state="translated">Al restaurar archivos en el &amp;aacute;rbol de trabajo desde el &amp;iacute;ndice, no cancele la operaci&amp;oacute;n si hay entradas no &lt;code&gt;--ours&lt;/code&gt; y no se especifica --nuestros , &lt;code&gt;--theirs&lt;/code&gt; , &lt;code&gt;--merge&lt;/code&gt; o &lt;code&gt;--conflict&lt;/code&gt; . Los caminos no fusionados en el &amp;aacute;rbol de trabajo se quedan solos.</target>
        </trans-unit>
        <trans-unit id="84ac309392e16a1f3dcc1a792805de1c5dea7161" translate="yes" xml:space="preserve">
          <source>When restoring files on the working tree from the index, recreate the conflicted merge in the unmerged paths.</source>
          <target state="translated">Al restaurar los archivos en el árbol de trabajo desde el índice,recrear la fusión conflictiva en los caminos no fusionados.</target>
        </trans-unit>
        <trans-unit id="273a9228c51e5936f4d142f339102a2bbdd8c3b8" translate="yes" xml:space="preserve">
          <source>When retrieving svn commits into Git (as part of &lt;code&gt;fetch&lt;/code&gt;, &lt;code&gt;rebase&lt;/code&gt;, or &lt;code&gt;dcommit&lt;/code&gt; operations), look for the first &lt;code&gt;From:&lt;/code&gt; or &lt;code&gt;Signed-off-by:&lt;/code&gt; line in the log message and use that as the author string.</source>
          <target state="translated">Al recuperar las confirmaciones de svn en Git (como parte de las operaciones &lt;code&gt;fetch&lt;/code&gt; , &lt;code&gt;rebase&lt;/code&gt; o &lt;code&gt;dcommit&lt;/code&gt; ), busque la primera l&amp;iacute;nea &lt;code&gt;From:&lt;/code&gt; o &lt;code&gt;Signed-off-by:&lt;/code&gt; en el mensaje de registro y util&amp;iacute;cela como cadena de autor.</target>
        </trans-unit>
        <trans-unit id="78d119701beb340fc1dce20129de3c1bebaf8055" translate="yes" xml:space="preserve">
          <source>When revision range specifiers are used to limit the annotation, lines that have not changed since the range boundary (either the commit v2.6.18 or the most recent commit that is more than 3 weeks old in the above example) are blamed for that range boundary commit.</source>
          <target state="translated">Cuando se utilizan especificadores de rango de revisión para limitar la anotación,las líneas que no han cambiado desde el límite del rango (ya sea la confirmación v2.6.18 o la más reciente que tiene más de 3 semanas de antigüedad en el ejemplo anterior)son culpadas por esa confirmación de límite de rango.</target>
        </trans-unit>
        <trans-unit id="802f2e7848870b44ce9f04fb441477cd05447e6c" translate="yes" xml:space="preserve">
          <source>When rewriting commits with &amp;lt;command&amp;gt; (currently &lt;code&gt;amend&lt;/code&gt; or &lt;code&gt;rebase&lt;/code&gt;) and this variable is set to &lt;code&gt;true&lt;/code&gt;, Git automatically copies your notes from the original to the rewritten commit. Defaults to &lt;code&gt;true&lt;/code&gt;, but see &quot;notes.rewriteRef&quot; below.</source>
          <target state="translated">Al reescribir confirmaciones con &amp;lt;comando&amp;gt; (actualmente &lt;code&gt;amend&lt;/code&gt; o &lt;code&gt;rebase&lt;/code&gt; ) y esta variable se establece en &lt;code&gt;true&lt;/code&gt; , Git copia autom&amp;aacute;ticamente sus notas del original a la confirmaci&amp;oacute;n reescrita. El valor predeterminado es &lt;code&gt;true&lt;/code&gt; , pero consulte &quot;notes.rewriteRef&quot; a continuaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="b9c5c034bfc575d885230ecf217359276486be76" translate="yes" xml:space="preserve">
          <source>When rewriting commits with &amp;lt;command&amp;gt; (currently &lt;code&gt;amend&lt;/code&gt; or &lt;code&gt;rebase&lt;/code&gt;), if this variable is &lt;code&gt;false&lt;/code&gt;, git will not copy notes from the original to the rewritten commit. Defaults to &lt;code&gt;true&lt;/code&gt;. See also &quot;&lt;code&gt;notes.rewriteRef&lt;/code&gt;&quot; below.</source>
          <target state="translated">Al reescribir confirmaciones con &amp;lt;command&amp;gt; (actualmente &lt;code&gt;amend&lt;/code&gt; o &lt;code&gt;rebase&lt;/code&gt; ), si esta variable es &lt;code&gt;false&lt;/code&gt; , git no copiar&amp;aacute; notas del original a la confirmaci&amp;oacute;n reescrita. Por defecto es &lt;code&gt;true&lt;/code&gt; . Consulte tambi&amp;eacute;n &quot; &lt;code&gt;notes.rewriteRef&lt;/code&gt; &quot; a continuaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="0528b909a801bc351dbefd46a3e339150f63bb9d" translate="yes" xml:space="preserve">
          <source>When rewriting commits, which notes to copy from the original to the rewritten commit. Must be a colon-delimited list of refs or globs.</source>
          <target state="translated">Cuando reescriba los compromisos,qué notas copiar del original al compromiso reescrito.Debe ser una lista delimitada por dos puntos de los árbitros o de los globs.</target>
        </trans-unit>
        <trans-unit id="777967b1b1cbeac1b786b4e659ef472d75c08474" translate="yes" xml:space="preserve">
          <source>When run from a subdirectory of the project, it can be told to exclude changes outside the directory and show pathnames relative to it with this option. When you are not in a subdirectory (e.g. in a bare repository), you can name which subdirectory to make the output relative to by giving a &amp;lt;path&amp;gt; as an argument.</source>
          <target state="translated">Cuando se ejecuta desde un subdirectorio del proyecto, se le puede decir que excluya los cambios fuera del directorio y muestre los nombres de ruta relacionados con &amp;eacute;l con esta opci&amp;oacute;n. Cuando no est&amp;aacute; en un subdirectorio (por ejemplo, en un repositorio simple), puede nombrar a qu&amp;eacute; subdirectorio hacer que la salida sea relativa dando un &amp;lt;path&amp;gt; como argumento.</target>
        </trans-unit>
        <trans-unit id="1526deda1d1c171ba9bb8aedb499ef46fa3558ac" translate="yes" xml:space="preserve">
          <source>When run from a subdirectory of the project, it can be told to exclude changes outside the directory and show pathnames relative to it with this option. When you are not in a subdirectory (e.g. in a bare repository), you can name which subdirectory to make the output relative to by giving a &amp;lt;path&amp;gt; as an argument. &lt;code&gt;--no-relative&lt;/code&gt; can be used to countermand both &lt;code&gt;diff.relative&lt;/code&gt; config option and previous &lt;code&gt;--relative&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c27ca634a7183f46a280e82c3af06c829ca10b89" translate="yes" xml:space="preserve">
          <source>When run from a subdirectory, the command usually outputs paths relative to the current directory. This option forces paths to be output relative to the project top directory.</source>
          <target state="translated">Cuando se ejecuta desde un subdirectorio,el comando suele dar salida a rutas relativas al directorio actual.Esta opción obliga a que las rutas se muestren en relación con el directorio superior del proyecto.</target>
        </trans-unit>
        <trans-unit id="ed0ff11c4a5dd052209fd6d888b93db83b1003f1" translate="yes" xml:space="preserve">
          <source>When run in a directory that does not have &quot;.git&quot; repository directory, Git tries to find such a directory in the parent directories to find the top of the working tree, but by default it does not cross filesystem boundaries. This environment variable can be set to true to tell Git not to stop at filesystem boundaries. Like &lt;code&gt;GIT_CEILING_DIRECTORIES&lt;/code&gt;, this will not affect an explicit repository directory set via &lt;code&gt;GIT_DIR&lt;/code&gt; or on the command line.</source>
          <target state="translated">Cuando se ejecuta en un directorio que no tiene un directorio de repositorio &quot;.git&quot;, Git intenta encontrar dicho directorio en los directorios principales para encontrar la parte superior del &amp;aacute;rbol de trabajo, pero por defecto no cruza los l&amp;iacute;mites del sistema de archivos. Esta variable de entorno se puede establecer en true para decirle a Git que no se detenga en los l&amp;iacute;mites del sistema de archivos. Al igual que &lt;code&gt;GIT_CEILING_DIRECTORIES&lt;/code&gt; , esto no afectar&amp;aacute; a un directorio de repositorio expl&amp;iacute;cito establecido a trav&amp;eacute;s de &lt;code&gt;GIT_DIR&lt;/code&gt; o en la l&amp;iacute;nea de comando.</target>
        </trans-unit>
        <trans-unit id="9ce1b9e20fc14e8e8925879039b8daf3d52acd6a" translate="yes" xml:space="preserve">
          <source>When running the command with &lt;code&gt;-u&lt;/code&gt; and &lt;code&gt;-m&lt;/code&gt; options, the merge result may need to overwrite paths that are not tracked in the current branch. The command usually refuses to proceed with the merge to avoid losing such a path. However this safety valve sometimes gets in the way. For example, it often happens that the other branch added a file that used to be a generated file in your branch, and the safety valve triggers when you try to switch to that branch after you ran &lt;code&gt;make&lt;/code&gt; but before running &lt;code&gt;make clean&lt;/code&gt; to remove the generated file. This option tells the command to read per-directory exclude file (usually &lt;code&gt;.gitignore&lt;/code&gt;) and allows such an untracked but explicitly ignored file to be overwritten.</source>
          <target state="translated">Al ejecutar el comando con las opciones &lt;code&gt;-u&lt;/code&gt; y &lt;code&gt;-m&lt;/code&gt; , es posible que el resultado de la combinaci&amp;oacute;n deba sobrescribir las rutas que no se rastrean en la rama actual. El comando generalmente se niega a continuar con la fusi&amp;oacute;n para evitar perder esa ruta. Sin embargo, esta v&amp;aacute;lvula de seguridad a veces se interpone. Por ejemplo, a menudo sucede que la otra rama agreg&amp;oacute; un archivo que sol&amp;iacute;a ser un archivo generado en su rama, y ​​la v&amp;aacute;lvula de seguridad se activa cuando intenta cambiar a esa rama despu&amp;eacute;s de ejecutar &lt;code&gt;make&lt;/code&gt; pero antes de ejecutar &lt;code&gt;make clean&lt;/code&gt; para eliminar el generado expediente. Esta opci&amp;oacute;n le dice al comando que lea el archivo de exclusi&amp;oacute;n por directorio (generalmente &lt;code&gt;.gitignore&lt;/code&gt; ) y permite sobrescribir un archivo sin seguimiento pero expl&amp;iacute;citamente ignorado.</target>
        </trans-unit>
        <trans-unit id="df426fd8f20937aff52c156a03a07b3202618140" translate="yes" xml:space="preserve">
          <source>When sending a patch this way, most often you are sending your own patch, so in addition to the &quot;&lt;code&gt;From $SHA1 $magic_timestamp&lt;/code&gt;&quot; marker you should omit &lt;code&gt;From:&lt;/code&gt; and &lt;code&gt;Date:&lt;/code&gt; lines from the patch file. The patch title is likely to be different from the subject of the discussion the patch is in response to, so it is likely that you would want to keep the Subject: line, like the example above.</source>
          <target state="translated">Al enviar un parche de esta forma, la mayor&amp;iacute;a de las veces env&amp;iacute;a su propio parche, por lo que adem&amp;aacute;s del marcador &quot; &lt;code&gt;From $SHA1 $magic_timestamp&lt;/code&gt; &quot;, debe omitir las l&amp;iacute;neas &lt;code&gt;From:&lt;/code&gt; y &lt;code&gt;Date:&lt;/code&gt; del archivo del parche. Es probable que el t&amp;iacute;tulo del parche sea diferente del tema de la discusi&amp;oacute;n al que responde el parche, por lo que es probable que desee mantener la l&amp;iacute;nea Asunto:, como en el ejemplo anterior.</target>
        </trans-unit>
        <trans-unit id="85b26b0293721642a3d3ba409cae09a21a570f47" translate="yes" xml:space="preserve">
          <source>When set to &lt;code&gt;always&lt;/code&gt;, always highlight matches. When &lt;code&gt;false&lt;/code&gt; (or &lt;code&gt;never&lt;/code&gt;), never. When set to &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;auto&lt;/code&gt;, use color only when the output is written to the terminal. If unset, then the value of &lt;code&gt;color.ui&lt;/code&gt; is used (&lt;code&gt;auto&lt;/code&gt; by default).</source>
          <target state="translated">Cuando se establece en &lt;code&gt;always&lt;/code&gt; , siempre resalta las coincidencias. Cuando es &lt;code&gt;false&lt;/code&gt; (o &lt;code&gt;never&lt;/code&gt; ), nunca. Cuando se establece en &lt;code&gt;true&lt;/code&gt; o &lt;code&gt;auto&lt;/code&gt; m&amp;aacute;tico , use el color solo cuando la salida se escriba en el terminal. Si no est&amp;aacute; configurado, se utiliza el valor de &lt;code&gt;color.ui&lt;/code&gt; ( &lt;code&gt;auto&lt;/code&gt; m&amp;aacute;tico por defecto).</target>
        </trans-unit>
        <trans-unit id="dfd0a45591bf4cdb6d73f4e9b16cc039b04690be" translate="yes" xml:space="preserve">
          <source>When set to &lt;code&gt;always&lt;/code&gt;, always use colors for interactive prompts and displays (such as those used by &quot;git-add --interactive&quot; and &quot;git-clean --interactive&quot;). When false (or &lt;code&gt;never&lt;/code&gt;), never. When set to &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;auto&lt;/code&gt;, use colors only when the output is to the terminal. If unset, then the value of &lt;code&gt;color.ui&lt;/code&gt; is used (&lt;code&gt;auto&lt;/code&gt; by default).</source>
          <target state="translated">Cuando se establece en &lt;code&gt;always&lt;/code&gt; , siempre use colores para las indicaciones y pantallas interactivas (como las que usan &quot;git-add --interactive&quot; y &quot;git-clean --interactive&quot;). Cuando es falso (o &lt;code&gt;never&lt;/code&gt; ), nunca. Cuando se establece en &lt;code&gt;true&lt;/code&gt; o &lt;code&gt;auto&lt;/code&gt; m&amp;aacute;tico , use colores solo cuando la salida sea para el terminal. Si no est&amp;aacute; configurado, se utiliza el valor de &lt;code&gt;color.ui&lt;/code&gt; ( &lt;code&gt;auto&lt;/code&gt; m&amp;aacute;tico por defecto).</target>
        </trans-unit>
        <trans-unit id="9ba7d00c9f4d532d2b9486b8c87259ed84e278f3" translate="yes" xml:space="preserve">
          <source>When set to &lt;code&gt;change&lt;/code&gt;, tells &lt;code&gt;git apply&lt;/code&gt; to ignore changes in whitespace, in the same way as the &lt;code&gt;--ignore-space-change&lt;/code&gt; option. When set to one of: no, none, never, false tells &lt;code&gt;git apply&lt;/code&gt; to respect all whitespace differences. See &lt;a href=&quot;git-apply&quot;&gt;git-apply[1]&lt;/a&gt;.</source>
          <target state="translated">Cuando se configura para &lt;code&gt;change&lt;/code&gt; , le dice a &lt;code&gt;git apply&lt;/code&gt; que ignore los cambios en los espacios en blanco, de la misma manera que la opci&amp;oacute;n &lt;code&gt;--ignore-space-change&lt;/code&gt; . Cuando se establece en uno de: no, none, never, false le dice a &lt;code&gt;git apply&lt;/code&gt; para respetar todas las diferencias de espacios en blanco. Consulte &lt;a href=&quot;git-apply&quot;&gt;git-apply [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8d6e4c3c7b2c6d56efae11b1e0ed0dcb5ce2357b" translate="yes" xml:space="preserve">
          <source>When set to &lt;code&gt;merges&lt;/code&gt;, rebase using &lt;code&gt;git rebase --rebase-merges&lt;/code&gt; so that the local merge commits are included in the rebase (see &lt;a href=&quot;git-rebase&quot;&gt;git-rebase[1]&lt;/a&gt; for details).</source>
          <target state="translated">Cuando se establece en &lt;code&gt;merges&lt;/code&gt; , rebase usando &lt;code&gt;git rebase --rebase-merges&lt;/code&gt; para que las confirmaciones de fusi&amp;oacute;n locales se incluyan en la rebase (consulte &lt;a href=&quot;git-rebase&quot;&gt;git-rebase [1]&lt;/a&gt; para obtener m&amp;aacute;s detalles).</target>
        </trans-unit>
        <trans-unit id="3726def44fed6d7863a8f10abeef80361e6f2701" translate="yes" xml:space="preserve">
          <source>When set to &lt;code&gt;preserve&lt;/code&gt; (deprecated in favor of &lt;code&gt;merges&lt;/code&gt;), rebase with the &lt;code&gt;--preserve-merges&lt;/code&gt; option passed to &lt;code&gt;git rebase&lt;/code&gt; so that locally created merge commits will not be flattened.</source>
          <target state="translated">Cuando se establece en &lt;code&gt;preserve&lt;/code&gt; (en desuso a favor de las &lt;code&gt;merges&lt;/code&gt; ), se cambia la base con la opci&amp;oacute;n &lt;code&gt;--preserve-merges&lt;/code&gt; pasada a &lt;code&gt;git rebase&lt;/code&gt; para que las confirmaciones de fusi&amp;oacute;n creadas localmente no se aplanen.</target>
        </trans-unit>
        <trans-unit id="14ded32327ec4343589fd7082ddc1f7fdc8962f6" translate="yes" xml:space="preserve">
          <source>When set to true, &lt;code&gt;git reset&lt;/code&gt; will default to the &lt;code&gt;--quiet&lt;/code&gt; option.</source>
          <target state="translated">Cuando se establece en verdadero, &lt;code&gt;git reset&lt;/code&gt; tendr&amp;aacute; la opci&amp;oacute;n &lt;code&gt;--quiet&lt;/code&gt; de forma predeterminada .</target>
        </trans-unit>
        <trans-unit id="01f095efe30e9d32fee48e094d88f96d4eba1bad" translate="yes" xml:space="preserve">
          <source>When set to true, &lt;code&gt;git-rerere&lt;/code&gt; updates the index with the resulting contents after it cleanly resolves conflicts using previously recorded resolution. Defaults to false.</source>
          <target state="translated">Cuando se establece en verdadero, &lt;code&gt;git-rerere&lt;/code&gt; actualiza el &amp;iacute;ndice con el contenido resultante despu&amp;eacute;s de que resuelve limpiamente los conflictos utilizando la resoluci&amp;oacute;n previamente registrada. El valor predeterminado es falso.</target>
        </trans-unit>
        <trans-unit id="e2cc234f1ab166d2852bd6878a576806a19d5021" translate="yes" xml:space="preserve">
          <source>When set to true, a clone of this submodule will be performed as a shallow clone (with a history depth of 1) unless the user explicitly asks for a non-shallow clone.</source>
          <target state="translated">Cuando se establece como verdadero,un clon de este submódulo se realizará como un clon poco profundo (con una profundidad de historial de 1)a menos que el usuario pida explícitamente un clon no superficial.</target>
        </trans-unit>
        <trans-unit id="6b72e60e4df8bc4b62a55c38ddf1b7b574998e6d" translate="yes" xml:space="preserve">
          <source>When set to true, automatically create a temporary stash entry before the operation begins, and apply it after the operation ends. This means that you can run merge on a dirty worktree. However, use with care: the final stash application after a successful merge might result in non-trivial conflicts. This option can be overridden by the &lt;code&gt;--no-autostash&lt;/code&gt; and &lt;code&gt;--autostash&lt;/code&gt; options of &lt;a href=&quot;git-merge&quot;&gt;git-merge[1]&lt;/a&gt;. Defaults to false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c92df8026c7e3a5d595e452302b48399c0fa7807" translate="yes" xml:space="preserve">
          <source>When set to true, automatically create a temporary stash entry before the operation begins, and apply it after the operation ends. This means that you can run rebase on a dirty worktree. However, use with care: the final stash application after a successful rebase might result in non-trivial conflicts. This option can be overridden by the &lt;code&gt;--no-autostash&lt;/code&gt; and &lt;code&gt;--autostash&lt;/code&gt; options of &lt;a href=&quot;git-rebase&quot;&gt;git-rebase[1]&lt;/a&gt;. Defaults to false.</source>
          <target state="translated">Cuando se establece en verdadero, crea autom&amp;aacute;ticamente una entrada de reserva temporal antes de que comience la operaci&amp;oacute;n y apl&amp;iacute;cala despu&amp;eacute;s de que finalice la operaci&amp;oacute;n. Esto significa que puede ejecutar rebase en un &amp;aacute;rbol de trabajo sucio. Sin embargo, util&amp;iacute;celo con cuidado: la aplicaci&amp;oacute;n de alijo final despu&amp;eacute;s de un rebase exitoso puede resultar en conflictos no triviales. Esta opci&amp;oacute;n puede ser anulada por las opciones &lt;code&gt;--no-autostash&lt;/code&gt; y &lt;code&gt;--autostash&lt;/code&gt; de &lt;a href=&quot;git-rebase&quot;&gt;git-rebase [1]&lt;/a&gt; . El valor predeterminado es falso.</target>
        </trans-unit>
        <trans-unit id="454e58d95a3a4a743aeef0859eac2b9c78e6f07a" translate="yes" xml:space="preserve">
          <source>When set to true, fetching from this remote by default will also remove any local tags that no longer exist on the remote if pruning is activated in general via &lt;code&gt;remote.&amp;lt;name&amp;gt;.prune&lt;/code&gt;, &lt;code&gt;fetch.prune&lt;/code&gt; or &lt;code&gt;--prune&lt;/code&gt;. Overrides &lt;code&gt;fetch.pruneTags&lt;/code&gt; settings, if any.</source>
          <target state="translated">Cuando se establece en verdadero, la obtenci&amp;oacute;n de este control remoto de forma predeterminada tambi&amp;eacute;n eliminar&amp;aacute; cualquier etiqueta local que ya no exista en el control remoto si la poda se activa en general a trav&amp;eacute;s de &lt;code&gt;remote.&amp;lt;name&amp;gt;.prune&lt;/code&gt; , &lt;code&gt;fetch.prune&lt;/code&gt; o &lt;code&gt;--prune&lt;/code&gt; . Anulaciones &lt;code&gt;fetch.pruneTags&lt;/code&gt; ajustes, si los hubiere.</target>
        </trans-unit>
        <trans-unit id="2f08cdfbf2bbbb5ba49961d7515ae4f7f92a166e" translate="yes" xml:space="preserve">
          <source>When set to true, fetching from this remote by default will also remove any remote-tracking references that no longer exist on the remote (as if the &lt;code&gt;--prune&lt;/code&gt; option was given on the command line). Overrides &lt;code&gt;fetch.prune&lt;/code&gt; settings, if any.</source>
          <target state="translated">Cuando se establece en verdadero, la b&amp;uacute;squeda de este control remoto de forma predeterminada tambi&amp;eacute;n eliminar&amp;aacute; cualquier referencia de seguimiento remoto que ya no exista en el control remoto (como si la opci&amp;oacute;n &lt;code&gt;--prune&lt;/code&gt; se hubiera dado en la l&amp;iacute;nea de comando). Invalida &lt;code&gt;fetch.prune&lt;/code&gt; ajustes, si los hubiere.</target>
        </trans-unit>
        <trans-unit id="5739477a3b9489a88899be9378f898520709209f" translate="yes" xml:space="preserve">
          <source>When set to true, git-receive-pack will advertise the push options capability to its clients. False by default.</source>
          <target state="translated">Cuando se haga realidad,git-receive-pack anunciará la capacidad de opciones de empuje a sus clientes.Falso por defecto.</target>
        </trans-unit>
        <trans-unit id="af12eb66ec26d00e256f0fbfcc7125aeb108aa2e" translate="yes" xml:space="preserve">
          <source>When set to true, this remote will be used to fetch promisor objects.</source>
          <target state="translated">Cuando se ponga en marcha,este mando a distancia se usará para buscar objetos promisorios.</target>
        </trans-unit>
        <trans-unit id="384788e82f8977bea09d8463e5bbfca26ec8a699" translate="yes" xml:space="preserve">
          <source>When set, the fetch or receive will abort in the case of a malformed object or a link to a nonexistent object. In addition, various other issues are checked for, including legacy issues (see &lt;code&gt;fsck.&amp;lt;msg-id&amp;gt;&lt;/code&gt;), and potential security issues like the existence of a &lt;code&gt;.GIT&lt;/code&gt; directory or a malicious &lt;code&gt;.gitmodules&lt;/code&gt; file (see the release notes for v2.2.1 and v2.17.1 for details). Other sanity and security checks may be added in future releases.</source>
          <target state="translated">Cuando se establece, la recuperaci&amp;oacute;n o la recepci&amp;oacute;n abortar&amp;aacute;n en el caso de un objeto con formato incorrecto o un enlace a un objeto inexistente. Adem&amp;aacute;s, se verifican varios otros problemas, incluidos problemas heredados (consulte &lt;code&gt;fsck.&amp;lt;msg-id&amp;gt;&lt;/code&gt; ) y posibles problemas de seguridad, como la existencia de un directorio &lt;code&gt;.GIT&lt;/code&gt; o un archivo &lt;code&gt;.gitmodules&lt;/code&gt; malicioso (consulte las notas de la versi&amp;oacute;n de v2. 2.1 y v2.17.1 para obtener m&amp;aacute;s detalles). Es posible que se agreguen otras comprobaciones de seguridad y cordura en versiones futuras.</target>
        </trans-unit>
        <trans-unit id="51a9809b150b3fa600feb6c1ea57e78e8de9e787" translate="yes" xml:space="preserve">
          <source>When showing &lt;code&gt;short&lt;/code&gt; or &lt;code&gt;porcelain&lt;/code&gt; status output, print the filename verbatim and terminate the entries with NUL, instead of LF. If no format is given, implies the &lt;code&gt;--porcelain&lt;/code&gt; output format. Without the &lt;code&gt;-z&lt;/code&gt; option, filenames with &quot;unusual&quot; characters are quoted as explained for the configuration variable &lt;code&gt;core.quotePath&lt;/code&gt; (see &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;).</source>
          <target state="translated">Cuando muestre &lt;code&gt;short&lt;/code&gt; salida de estado corto o de &lt;code&gt;porcelain&lt;/code&gt; , imprima el nombre del archivo palabra por palabra y termine las entradas con NUL, en lugar de LF. Si no se proporciona ning&amp;uacute;n formato, implica el formato de salida &lt;code&gt;--porcelain&lt;/code&gt; . Sin la opci&amp;oacute;n &lt;code&gt;-z&lt;/code&gt; , los nombres de archivo con caracteres &quot;inusuales&quot; se citan como se explica para la variable de configuraci&amp;oacute;n &lt;code&gt;core.quotePath&lt;/code&gt; (ver &lt;a href=&quot;git-config&quot;&gt;git-config [1]&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="43f2e6f1690661b84f31283fe1b400a9df885029" translate="yes" xml:space="preserve">
          <source>When showing a change that involves a rename or a copy, &lt;code&gt;--stat&lt;/code&gt; output formats the pathnames compactly by combining common prefix and suffix of the pathnames. For example, a change that moves &lt;code&gt;arch/i386/Makefile&lt;/code&gt; to &lt;code&gt;arch/x86/Makefile&lt;/code&gt; while modifying 4 lines will be shown like this:</source>
          <target state="translated">Cuando se muestra un cambio que implica un cambio de nombre o una copia, la salida &lt;code&gt;--stat&lt;/code&gt; formatea los nombres de ruta de manera compacta combinando el prefijo com&amp;uacute;n y el sufijo de los nombres de ruta. Por ejemplo, un cambio que mueve &lt;code&gt;arch/i386/Makefile&lt;/code&gt; a &lt;code&gt;arch/x86/Makefile&lt;/code&gt; mientras modifica 4 l&amp;iacute;neas se mostrar&amp;aacute; as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="5d4332d6cfe825bd00a3bfef76e9ffde728a5dde" translate="yes" xml:space="preserve">
          <source>When showing commit messages, also show notes which are stored in the given ref. The ref must be fully qualified. If the given ref does not exist, it is not an error but means that no notes should be printed.</source>
          <target state="translated">Al mostrar los mensajes de confirmación,muestre también las notas que están almacenadas en la referencia dada.El árbitro debe estar completamente cualificado.Si el árbitro dado no existe,no es un error pero significa que no se deben imprimir notas.</target>
        </trans-unit>
        <trans-unit id="43020b05da28d5245a5572e708a459c7bb4d40bf" translate="yes" xml:space="preserve">
          <source>When showing object names, prefix them with &lt;code&gt;^&lt;/code&gt; and strip &lt;code&gt;^&lt;/code&gt; prefix from the object names that already have one.</source>
          <target state="translated">Cuando muestre nombres de objetos, anteponga &lt;code&gt;^&lt;/code&gt; y &lt;code&gt;^&lt;/code&gt; prefijo ^ de los nombres de objeto que ya tienen uno.</target>
        </trans-unit>
        <trans-unit id="bf158ec030a04af48fd84ff99f4cdef61dbc802c" translate="yes" xml:space="preserve">
          <source>When showing the value of &amp;lt;name&amp;gt; as a symbolic ref, try to shorten the value, e.g. from &lt;code&gt;refs/heads/master&lt;/code&gt; to &lt;code&gt;master&lt;/code&gt;.</source>
          <target state="translated">Cuando muestre el valor de &amp;lt;nombre&amp;gt; como una referencia simb&amp;oacute;lica, intente acortar el valor, por ejemplo, de &lt;code&gt;refs/heads/master&lt;/code&gt; a &lt;code&gt;master&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d07871fea9de7a0886062f3dfa8bbc506d97b667" translate="yes" xml:space="preserve">
          <source>When shown by &lt;code&gt;git diff-tree -c&lt;/code&gt;, it compares the parents of a merge commit with the merge result (i.e. file1..fileN are the parents). When shown by &lt;code&gt;git diff-files -c&lt;/code&gt;, it compares the two unresolved merge parents with the working tree file (i.e. file1 is stage 2 aka &quot;our version&quot;, file2 is stage 3 aka &quot;their version&quot;).</source>
          <target state="translated">Cuando se muestra con &lt;code&gt;git diff-tree -c&lt;/code&gt; , compara los padres de una confirmaci&amp;oacute;n de fusi&amp;oacute;n con el resultado de la fusi&amp;oacute;n (es decir, file1..fileN son los padres). Cuando se muestra mediante &lt;code&gt;git diff-files -c&lt;/code&gt; , compara los dos padres de fusi&amp;oacute;n no resueltos con el archivo de &amp;aacute;rbol de trabajo (es decir, file1 es la etapa 2 tambi&amp;eacute;n conocida como &quot;nuestra versi&amp;oacute;n&quot;, file2 es la etapa 3 tambi&amp;eacute;n conocida como &quot;su versi&amp;oacute;n&quot;).</target>
        </trans-unit>
        <trans-unit id="aea42e2933202e5e3d5f69076d6bebeb378dfcd9" translate="yes" xml:space="preserve">
          <source>When some commits have been skipped (using &quot;git bisect skip&quot;), then the bisection algorithm is the same for step 1) to 3). But then we use roughly the following steps:</source>
          <target state="translated">Cuando se han saltado algunas confirmaciones (usando &quot;git bisect skip&quot;),entonces el algoritmo de bisección es el mismo para los pasos 1)a 3).Pero entonces usamos aproximadamente los siguientes pasos:</target>
        </trans-unit>
        <trans-unit id="4192528671a22eca45fcad6bb5614a7ec165a5d4" translate="yes" xml:space="preserve">
          <source>When specified one or more times, &lt;code&gt;-L&lt;/code&gt; restricts annotation to the requested lines.</source>
          <target state="translated">Cuando se especifica una o m&amp;aacute;s veces, &lt;code&gt;-L&lt;/code&gt; restringe la anotaci&amp;oacute;n a las l&amp;iacute;neas solicitadas.</target>
        </trans-unit>
        <trans-unit id="75acd7ee44b0e77c6b233d3615dca447d4cfdc8c" translate="yes" xml:space="preserve">
          <source>When specifying the -v option the format used is:</source>
          <target state="translated">Cuando se especifica la opción -v el formato utilizado es:</target>
        </trans-unit>
        <trans-unit id="0550af8039db48de114d18431bb7375cee83b91b" translate="yes" xml:space="preserve">
          <source>When switching branches with &lt;code&gt;--merge&lt;/code&gt;, staged changes may be lost.</source>
          <target state="translated">Al cambiar de rama con &lt;code&gt;--merge&lt;/code&gt; , los cambios por etapas pueden perderse.</target>
        </trans-unit>
        <trans-unit id="1f4fa4b7e00510c39cb24519dad3b49f07cff89d" translate="yes" xml:space="preserve">
          <source>When switching branches, if you have local modifications to one or more files that are different between the current branch and the branch to which you are switching, the command refuses to switch branches in order to preserve your modifications in context. However, with this option, a three-way merge between the current branch, your working tree contents, and the new branch is done, and you will be on the new branch.</source>
          <target state="translated">Al cambiar de rama,si tiene modificaciones locales en uno o más archivos que son diferentes entre la rama actual y la rama a la que está cambiando,el comando se niega a cambiar de rama para preservar sus modificaciones en el contexto.Sin embargo,con esta opción,se realiza una fusión a tres bandas entre la rama actual,el contenido de su árbol de trabajo y la nueva rama,y usted estará en la nueva rama.</target>
        </trans-unit>
        <trans-unit id="7b0d58bb9103d272bfd260e85d337e6780ed225d" translate="yes" xml:space="preserve">
          <source>When switching branches, proceed even if the index or the working tree differs from &lt;code&gt;HEAD&lt;/code&gt;. This is used to throw away local changes.</source>
          <target state="translated">Al cambiar de rama, proceda incluso si el &amp;iacute;ndice o el &amp;aacute;rbol de trabajo difieren de &lt;code&gt;HEAD&lt;/code&gt; . Se utiliza para deshacerse de los cambios locales.</target>
        </trans-unit>
        <trans-unit id="c0e1144ec53aca779c8724f81a0ba0a804f51a81" translate="yes" xml:space="preserve">
          <source>When the &quot;-C&quot; option is used, the original contents of modified files, and deleted files (and also unmodified files, if the &quot;--find-copies-harder&quot; option is used) are considered as candidates of the source files in rename/copy operation. If the input were like these filepairs, that talk about a modified file fileY and a newly created file file0:</source>
          <target state="translated">Cuando se utiliza la opción &quot;-C&quot;,el contenido original de los archivos modificados y los archivos eliminados (y también los archivos no modificados,si se utiliza la opción &quot;--find-copies-harder&quot;)se consideran candidatos de los archivos fuente en la operación de renombrar/copiar.Si la entrada fuera como estos pares de archivos,eso hablaría de un archivo modificado fileY y un archivo recién creado file0:</target>
        </trans-unit>
        <trans-unit id="f6565c60ff0e235a6b049473d40ff8e72074a702" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; argument is a branch name, the &lt;code&gt;--detach&lt;/code&gt; option can be used to detach &lt;code&gt;HEAD&lt;/code&gt; at the tip of the branch (&lt;code&gt;git checkout
&amp;lt;branch&amp;gt;&lt;/code&gt; would check out that branch without detaching &lt;code&gt;HEAD&lt;/code&gt;).</source>
          <target state="translated">Cuando el argumento &lt;code&gt;&amp;lt;commit&amp;gt;&lt;/code&gt; es un nombre de rama, la opci&amp;oacute;n &lt;code&gt;--detach&lt;/code&gt; se puede usar para separar &lt;code&gt;HEAD&lt;/code&gt; en la punta de la rama ( &lt;code&gt;git checkout &amp;lt;branch&amp;gt;&lt;/code&gt; verificar&amp;iacute;a esa rama sin separar &lt;code&gt;HEAD&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="588cf4af82a088b4d8241fca9de08188511b35c3" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;--aggressive&lt;/code&gt; option is supplied, &lt;a href=&quot;git-repack&quot;&gt;git-repack[1]&lt;/a&gt; will be invoked with the &lt;code&gt;-f&lt;/code&gt; flag, which in turn will pass &lt;code&gt;--no-reuse-delta&lt;/code&gt; to &lt;a href=&quot;git-pack-objects&quot;&gt;git-pack-objects[1]&lt;/a&gt;. This will throw away any existing deltas and re-compute them, at the expense of spending much more time on the repacking.</source>
          <target state="translated">Cuando se &lt;code&gt;--aggressive&lt;/code&gt; opci&amp;oacute;n --aggressive , se invocar&amp;aacute; &lt;a href=&quot;git-repack&quot;&gt;git-repack [1]&lt;/a&gt; con el indicador &lt;code&gt;-f&lt;/code&gt; , que a su vez pasar&amp;aacute; &lt;code&gt;--no-reuse-delta&lt;/code&gt; a &lt;a href=&quot;git-pack-objects&quot;&gt;git-pack-objects [1]&lt;/a&gt; . Esto eliminar&amp;aacute; los deltas existentes y los volver&amp;aacute; a calcular, a expensas de dedicar mucho m&amp;aacute;s tiempo al reempaquetado.</target>
        </trans-unit>
        <trans-unit id="36c732582138b85601314513444f94ba223454f7" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;--auto-merge&lt;/code&gt; is given, meld will merge all non-conflicting parts automatically, highlight the conflicting parts and wait for user decision. Setting &lt;code&gt;mergetool.meld.useAutoMerge&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; tells Git to unconditionally use the &lt;code&gt;--auto-merge&lt;/code&gt; option with &lt;code&gt;meld&lt;/code&gt;. Setting this value to &lt;code&gt;auto&lt;/code&gt; makes git detect whether &lt;code&gt;--auto-merge&lt;/code&gt; is supported and will only use &lt;code&gt;--auto-merge&lt;/code&gt; when available. A value of &lt;code&gt;false&lt;/code&gt; avoids using &lt;code&gt;--auto-merge&lt;/code&gt; altogether, and is the default value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82879b1b4c41ea78abef977470f6f223214f239a" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;--stdin&lt;/code&gt; option is provided, the patterns are read from standard in as a newline-delimited list instead of from the arguments.</source>
          <target state="translated">Cuando se proporciona la opci&amp;oacute;n &lt;code&gt;--stdin&lt;/code&gt; , los patrones se leen del est&amp;aacute;ndar como una lista delimitada por nuevas l&amp;iacute;neas en lugar de los argumentos.</target>
        </trans-unit>
        <trans-unit id="0e72b560677fc7dbf879d4b64bab949efbe4ffc6" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;-l&lt;/code&gt; option is used, format changes to</source>
          <target state="translated">Cuando se usa la opci&amp;oacute;n &lt;code&gt;-l&lt;/code&gt; , el formato cambia a</target>
        </trans-unit>
        <trans-unit id="2d7535050bbd171bed81a20302444843893d883d" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;-z&lt;/code&gt; option is given, pathnames are printed as is and without any quoting and lines are terminated with a NUL (ASCII 0x00) byte.</source>
          <target state="translated">Cuando se proporciona la opci&amp;oacute;n &lt;code&gt;-z&lt;/code&gt; , los nombres de las rutas se imprimen tal cual y sin comillas y las l&amp;iacute;neas terminan con un byte NUL (ASCII 0x00).</target>
        </trans-unit>
        <trans-unit id="e231e06fa3f3b3606e814466b6e12bf27e65315d" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;.gitattributes&lt;/code&gt; file is missing from the work tree, the path in the index is used as a fall-back. During checkout process, &lt;code&gt;.gitattributes&lt;/code&gt; in the index is used and then the file in the working tree is used as a fall-back.</source>
          <target state="translated">Cuando &lt;code&gt;.gitattributes&lt;/code&gt; archivo .gitattributes en el &amp;aacute;rbol de trabajo, la ruta en el &amp;iacute;ndice se utiliza como alternativa . Durante el proceso de pago, se &lt;code&gt;.gitattributes&lt;/code&gt; en el &amp;iacute;ndice y luego el archivo en el &amp;aacute;rbol de trabajo se usa como respaldo.</target>
        </trans-unit>
        <trans-unit id="ca6fe469ff13b0a4412dea9bd34db705e00a71db" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;LESS&lt;/code&gt; environment variable is unset, Git sets it to &lt;code&gt;FRX&lt;/code&gt; (if &lt;code&gt;LESS&lt;/code&gt; environment variable is set, Git does not change it at all). If you want to selectively override Git&amp;rsquo;s default setting for &lt;code&gt;LESS&lt;/code&gt;, you can set &lt;code&gt;core.pager&lt;/code&gt; to e.g. &lt;code&gt;less -S&lt;/code&gt;. This will be passed to the shell by Git, which will translate the final command to &lt;code&gt;LESS=FRX less -S&lt;/code&gt;. The environment does not set the &lt;code&gt;S&lt;/code&gt; option but the command line does, instructing less to truncate long lines. Similarly, setting &lt;code&gt;core.pager&lt;/code&gt; to &lt;code&gt;less -+F&lt;/code&gt; will deactivate the &lt;code&gt;F&lt;/code&gt; option specified by the environment from the command-line, deactivating the &quot;quit if one screen&quot; behavior of &lt;code&gt;less&lt;/code&gt;. One can specifically activate some flags for particular commands: for example, setting &lt;code&gt;pager.blame&lt;/code&gt; to &lt;code&gt;less -S&lt;/code&gt; enables line truncation only for &lt;code&gt;git blame&lt;/code&gt;.</source>
          <target state="translated">Cuando la variable de entorno &lt;code&gt;LESS&lt;/code&gt; no est&amp;aacute; establecida, Git la establece en &lt;code&gt;FRX&lt;/code&gt; (si se establece la variable de entorno &lt;code&gt;LESS&lt;/code&gt; , Git no la cambia en absoluto). Si desea anular selectivamente la configuraci&amp;oacute;n predeterminada de Git para &lt;code&gt;LESS&lt;/code&gt; , puede establecer &lt;code&gt;core.pager&lt;/code&gt; en, por ejemplo, &lt;code&gt;less -S&lt;/code&gt; . Esto ser&amp;aacute; pasado al shell por Git, que traducir&amp;aacute; el comando final a &lt;code&gt;LESS=FRX less -S&lt;/code&gt; . El entorno no establece la opci&amp;oacute;n &lt;code&gt;S&lt;/code&gt; , pero la l&amp;iacute;nea de comandos s&amp;iacute;, lo que indica a Less que trunque las l&amp;iacute;neas largas. Del mismo modo, establecer &lt;code&gt;core.pager&lt;/code&gt; en &lt;code&gt;less -+F&lt;/code&gt; desactivar&amp;aacute; la &lt;code&gt;F&lt;/code&gt; opci&amp;oacute;n especificada por el entorno desde la l&amp;iacute;nea de comandos, desactivando el comportamiento &quot;salir si una pantalla&quot; de &lt;code&gt;less&lt;/code&gt; . Uno puede activar espec&amp;iacute;ficamente algunos indicadores para comandos particulares: por ejemplo, configurar &lt;code&gt;pager.blame&lt;/code&gt; en &lt;code&gt;less -S&lt;/code&gt; habilita el truncamiento de l&amp;iacute;nea solo para &lt;code&gt;git blame&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="74ad9f83ee4c2323b6a50919a4a444bb844e349c" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;core.fsmonitor&lt;/code&gt; configuration variable is changed, the file system monitor is added to or removed from the index the next time a command reads the index. When &lt;code&gt;--[no-]fsmonitor&lt;/code&gt; are used, the file system monitor is immediately added to or removed from the index.</source>
          <target state="translated">Cuando se &lt;code&gt;core.fsmonitor&lt;/code&gt; variable de configuraci&amp;oacute;n core.fsmonitor , el monitor del sistema de archivos se agrega o elimina del &amp;iacute;ndice la pr&amp;oacute;xima vez que un comando lee el &amp;iacute;ndice. Cuando se utiliza &lt;code&gt;--[no-]fsmonitor&lt;/code&gt; , el monitor del sistema de archivos se agrega o elimina inmediatamente del &amp;iacute;ndice.</target>
        </trans-unit>
        <trans-unit id="a4c9cc7c80e5659747cb4b3bf0914ba1addde698" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;core.untrackedCache&lt;/code&gt; configuration variable is changed, the untracked cache is added to or removed from the index the next time a command reads the index; while when &lt;code&gt;--[no-|force-]untracked-cache&lt;/code&gt; are used, the untracked cache is immediately added to or removed from the index.</source>
          <target state="translated">Cuando se &lt;code&gt;core.untrackedCache&lt;/code&gt; variable de configuraci&amp;oacute;n core.untrackedCache , la cach&amp;eacute; sin seguimiento se agrega o se elimina del &amp;iacute;ndice la pr&amp;oacute;xima vez que un comando lee el &amp;iacute;ndice; mientras que cuando se utiliza &lt;code&gt;--[no-|force-]untracked-cache&lt;/code&gt; , el cach&amp;eacute; sin seguimiento se agrega o elimina inmediatamente del &amp;iacute;ndice.</target>
        </trans-unit>
        <trans-unit id="a212ca612f0b7b9b082dffe71078dd396d414402" translate="yes" xml:space="preserve">
          <source>When the attribute &lt;code&gt;ident&lt;/code&gt; is set for a path, Git replaces &lt;code&gt;$Id$&lt;/code&gt; in the blob object with &lt;code&gt;$Id:&lt;/code&gt;, followed by the 40-character hexadecimal blob object name, followed by a dollar sign &lt;code&gt;$&lt;/code&gt; upon checkout. Any byte sequence that begins with &lt;code&gt;$Id:&lt;/code&gt; and ends with &lt;code&gt;$&lt;/code&gt; in the worktree file is replaced with &lt;code&gt;$Id$&lt;/code&gt; upon check-in.</source>
          <target state="translated">Cuando se establece el atributo &lt;code&gt;ident&lt;/code&gt; para una ruta, Git reemplaza &lt;code&gt;$Id$&lt;/code&gt; en el objeto blob con &lt;code&gt;$Id:&lt;/code&gt; seguido del nombre del objeto blob hexadecimal de 40 caracteres, seguido de un signo de d&amp;oacute;lar &lt;code&gt;$&lt;/code&gt; al finalizar la compra. Cualquier secuencia de bytes que comience con &lt;code&gt;$Id:&lt;/code&gt; y termine con &lt;code&gt;$&lt;/code&gt; en el archivo de &amp;aacute;rbol de trabajo se reemplaza con &lt;code&gt;$Id$&lt;/code&gt; al registrarse.</target>
        </trans-unit>
        <trans-unit id="fa514f01de77ed627378917f2aa0b40cefa8c9a0" translate="yes" xml:space="preserve">
          <source>When the command enters the interactive mode, it shows the files and directories to be cleaned, and goes into its interactive command loop.</source>
          <target state="translated">Cuando el comando entra en el modo interactivo,muestra los archivos y directorios a ser limpiados,y entra en su bucle de comando interactivo.</target>
        </trans-unit>
        <trans-unit id="8e767c7023b00ca52d4fb770ab49ce4dc284f987" translate="yes" xml:space="preserve">
          <source>When the command enters the interactive mode, it shows the output of the &lt;code&gt;status&lt;/code&gt; subcommand, and then goes into its interactive command loop.</source>
          <target state="translated">Cuando el comando ingresa al modo interactivo, muestra la salida del subcomando de &lt;code&gt;status&lt;/code&gt; y luego entra en su ciclo de comando interactivo.</target>
        </trans-unit>
        <trans-unit id="e95952399796aad65deb415e39c303153d01cdf9" translate="yes" xml:space="preserve">
          <source>When the command is invoked from a subdirectory, show the path of the current directory relative to the top-level directory.</source>
          <target state="translated">Cuando se invoca el comando desde un subdirectorio,mostrar la ruta del directorio actual en relación con el directorio de nivel superior.</target>
        </trans-unit>
        <trans-unit id="45506eccf72696bf6e0287a6eeda327142bb0f41" translate="yes" xml:space="preserve">
          <source>When the command is invoked from a subdirectory, show the path of the top-level directory relative to the current directory (typically a sequence of &quot;../&quot;, or an empty string).</source>
          <target state="translated">Cuando se invoca el comando desde un subdirectorio,mostrar la ruta del directorio de nivel superior relativa al directorio actual (típicamente una secuencia de &quot;../&quot;,o una cadena vacía).</target>
        </trans-unit>
        <trans-unit id="609d76b7287e730d5e5fcae1b57a1cde4d02d1ae" translate="yes" xml:space="preserve">
          <source>When the command is run without pathspec, it errors out, instead of deinit-ing everything, to prevent mistakes.</source>
          <target state="translated">Cuando el comando se ejecuta sin pathspec,se equivoca,en lugar de des-intentarlo todo,para evitar errores.</target>
        </trans-unit>
        <trans-unit id="2ebded60d45ed8776b0324d8d2138df90f552a15" translate="yes" xml:space="preserve">
          <source>When the command line does not specify what to push with &lt;code&gt;&amp;lt;refspec&amp;gt;...&lt;/code&gt; arguments or &lt;code&gt;--all&lt;/code&gt;, &lt;code&gt;--mirror&lt;/code&gt;, &lt;code&gt;--tags&lt;/code&gt; options, the command finds the default &lt;code&gt;&amp;lt;refspec&amp;gt;&lt;/code&gt; by consulting &lt;code&gt;remote.*.push&lt;/code&gt; configuration, and if it is not found, honors &lt;code&gt;push.default&lt;/code&gt; configuration to decide what to push (See &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt; for the meaning of &lt;code&gt;push.default&lt;/code&gt;).</source>
          <target state="translated">Cuando la l&amp;iacute;nea de comandos no especifica qu&amp;eacute; empujar con &lt;code&gt;&amp;lt;refspec&amp;gt;...&lt;/code&gt; argumentos o &lt;code&gt;--all&lt;/code&gt; , &lt;code&gt;--mirror&lt;/code&gt; , &lt;code&gt;--tags&lt;/code&gt; opciones, el comando encuentra el valor por defecto &lt;code&gt;&amp;lt;refspec&amp;gt;&lt;/code&gt; mediante la consulta &lt;code&gt;remote.*.push&lt;/code&gt; de configuraci&amp;oacute;n y si no se encuentra, respeta la configuraci&amp;oacute;n &lt;code&gt;push.default&lt;/code&gt; para decidir qu&amp;eacute; empujar (Ver &lt;a href=&quot;git-config&quot;&gt;git-config [1]&lt;/a&gt; para el significado de &lt;code&gt;push.default&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="4f61ade639e58b8586884fe92cb9eea816606ac2" translate="yes" xml:space="preserve">
          <source>When the command line does not specify where to push with the &lt;code&gt;&amp;lt;repository&amp;gt;&lt;/code&gt; argument, &lt;code&gt;branch.*.remote&lt;/code&gt; configuration for the current branch is consulted to determine where to push. If the configuration is missing, it defaults to &lt;code&gt;origin&lt;/code&gt;.</source>
          <target state="translated">Cuando la l&amp;iacute;nea de comando no especifica d&amp;oacute;nde empujar con el argumento &lt;code&gt;&amp;lt;repository&amp;gt;&lt;/code&gt; , se consulta la configuraci&amp;oacute;n &lt;code&gt;branch.*.remote&lt;/code&gt; Para la rama actual para determinar d&amp;oacute;nde empujar. Si falta la configuraci&amp;oacute;n, el valor predeterminado es el &lt;code&gt;origin&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4dd963bd8e58b7ff2b11f8f622df35ecbcf28d58" translate="yes" xml:space="preserve">
          <source>When the commit diffs differ, &lt;code&gt;git range-diff&lt;/code&gt; recreates the original diffs' coloring, and adds outer -/+ diff markers with the &lt;strong&gt;background&lt;/strong&gt; being red/green to make it easier to see e.g. when there was a change in what exact lines were added.</source>
          <target state="translated">Cuando las diferencias de confirmaci&amp;oacute;n difieren, &lt;code&gt;git range-diff&lt;/code&gt; recrea el color de las diferencias originales y agrega marcadores externos - / + diff con el &lt;strong&gt;fondo&lt;/strong&gt; rojo / verde para que sea m&amp;aacute;s f&amp;aacute;cil de ver, por ejemplo, cuando hubo un cambio en las l&amp;iacute;neas exactas que se agregaron .</target>
        </trans-unit>
        <trans-unit id="3625aba84b870871330cdfd48d8779c4e4badb58" translate="yes" xml:space="preserve">
          <source>When the commit log message begins with &quot;squash! &amp;hellip;​&quot; (or &quot;fixup! &amp;hellip;​&quot;), and there is already a commit in the todo list that matches the same &lt;code&gt;...&lt;/code&gt;, automatically modify the todo list of rebase -i so that the commit marked for squashing comes right after the commit to be modified, and change the action of the moved commit from &lt;code&gt;pick&lt;/code&gt; to &lt;code&gt;squash&lt;/code&gt; (or &lt;code&gt;fixup&lt;/code&gt;). A commit matches the &lt;code&gt;...&lt;/code&gt; if the commit subject matches, or if the &lt;code&gt;...&lt;/code&gt; refers to the commit&amp;rsquo;s hash. As a fall-back, partial matches of the commit subject work, too. The recommended way to create fixup/squash commits is by using the &lt;code&gt;--fixup&lt;/code&gt;/&lt;code&gt;--squash&lt;/code&gt; options of &lt;a href=&quot;git-commit&quot;&gt;git-commit[1]&lt;/a&gt;.</source>
          <target state="translated">Cuando el mensaje del registro de confirmaciones comienza con &quot;squash! ...&quot; (o &quot;fixup! ...&quot;), y ya hay una confirmaci&amp;oacute;n en la lista de tareas pendientes que coincide con el mismo &lt;code&gt;...&lt;/code&gt; , modifica autom&amp;aacute;ticamente la lista de tareas pendientes de rebase -i de modo que la confirmaci&amp;oacute;n marcada para aplastar viene justo despu&amp;eacute;s de la confirmaci&amp;oacute;n que se va a modificar, y cambiar la acci&amp;oacute;n de la confirmaci&amp;oacute;n movida de &lt;code&gt;pick&lt;/code&gt; a &lt;code&gt;squash&lt;/code&gt; (o &lt;code&gt;fixup&lt;/code&gt; ). Una confirmaci&amp;oacute;n coincide con &lt;code&gt;...&lt;/code&gt; si el asunto de la confirmaci&amp;oacute;n coincide, o si &lt;code&gt;...&lt;/code&gt; se refiere al hash de la confirmaci&amp;oacute;n. Como alternativa, las coincidencias parciales del sujeto de confirmaci&amp;oacute;n tambi&amp;eacute;n funcionan. La forma recomendada de crear confirmaciones de &lt;code&gt;--fixup&lt;/code&gt; / &lt;code&gt;--squash&lt;/code&gt; es usando las opciones --fixup / --squash de &lt;a href=&quot;git-commit&quot;&gt;git-commit [1]&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="777196d17b1a10c66d0cd105e5fb66da2363f7b1" translate="yes" xml:space="preserve">
          <source>When the config key &lt;code&gt;extensions.partialclone&lt;/code&gt; is set, it indicates that the repo was created with a partial clone (or later performed a partial fetch) and that the remote may have omitted sending certain unwanted objects. Such a remote is called a &quot;promisor remote&quot; and it promises that all such omitted objects can be fetched from it in the future.</source>
          <target state="translated">Cuando se establece la clave de configuraci&amp;oacute;n &lt;code&gt;extensions.partialclone&lt;/code&gt; , indica que el repositorio se cre&amp;oacute; con un clon parcial (o luego realiz&amp;oacute; una recuperaci&amp;oacute;n parcial) y que el control remoto puede haber omitido el env&amp;iacute;o de ciertos objetos no deseados. Este tipo de control remoto se denomina &quot;control remoto promisor&quot; y promete que todos los objetos omitidos se pueden recuperar en el futuro.</target>
        </trans-unit>
        <trans-unit id="ef73607bec133cc1d32aaf64deafc8c72104731d" translate="yes" xml:space="preserve">
          <source>When the config key &lt;code&gt;extensions.preciousObjects&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt;, objects in the repository MUST NOT be deleted (e.g., by &lt;code&gt;git-prune&lt;/code&gt; or &lt;code&gt;git repack -d&lt;/code&gt;).</source>
          <target state="translated">Cuando la clave de configuraci&amp;oacute;n &lt;code&gt;extensions.preciousObjects&lt;/code&gt; se establece en &lt;code&gt;true&lt;/code&gt; , los objetos del repositorio NO DEBEN eliminarse (por ejemplo, mediante &lt;code&gt;git-prune&lt;/code&gt; o &lt;code&gt;git repack -d&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="e23e26ad367e6b915821bbb7b38753fa6fd4c240" translate="yes" xml:space="preserve">
          <source>When the current working directory is below the repository directory print &quot;true&quot;, otherwise &quot;false&quot;.</source>
          <target state="translated">Cuando el directorio de trabajo actual está por debajo del directorio del repositorio,escriba &quot;true&quot;,de lo contrario &quot;false&quot;.</target>
        </trans-unit>
        <trans-unit id="8a7aa53d7bbe6bfa657a2a1bb84359882384d7fa" translate="yes" xml:space="preserve">
          <source>When the current working directory is inside the work tree of the repository print &quot;true&quot;, otherwise &quot;false&quot;.</source>
          <target state="translated">Cuando el directorio de trabajo actual está dentro del árbol de trabajo del repositorio,escriba &quot;true&quot;,de lo contrario &quot;false&quot;.</target>
        </trans-unit>
        <trans-unit id="e614fb1c074d0b3ebd865c7756d786dc01074ea4" translate="yes" xml:space="preserve">
          <source>When the environment variable &lt;code&gt;GIT_EXTERNAL_DIFF&lt;/code&gt; is set, the program named by it is called to generate diffs, and Git does not use its builtin diff machinery. For a path that is added, removed, or modified, &lt;code&gt;GIT_EXTERNAL_DIFF&lt;/code&gt; is called with 7 parameters:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd7dc6a4dcd86a8d725c2332772df83ad820f427" translate="yes" xml:space="preserve">
          <source>When the environment variable &lt;code&gt;GIT_EXTERNAL_DIFF&lt;/code&gt; is set, the program named by it is called, instead of the diff invocation described above. For a path that is added, removed, or modified, &lt;code&gt;GIT_EXTERNAL_DIFF&lt;/code&gt; is called with 7 parameters:</source>
          <target state="translated">Cuando se establece la variable de entorno &lt;code&gt;GIT_EXTERNAL_DIFF&lt;/code&gt; , se llama al programa nombrado por ella, en lugar de la invocaci&amp;oacute;n diff descrita anteriormente. Para una ruta que se agrega, elimina o modifica, se llama a &lt;code&gt;GIT_EXTERNAL_DIFF&lt;/code&gt; con 7 par&amp;aacute;metros:</target>
        </trans-unit>
        <trans-unit id="ec4de571b6827b1e0107c62834d6f8cf9f50bba2" translate="yes" xml:space="preserve">
          <source>When the git-rebase command is run, it will first execute a &quot;pre-rebase&quot; hook if one exists. You can use this hook to do sanity checks and reject the rebase if it isn&amp;rsquo;t appropriate. Please see the template pre-rebase hook script for an example.</source>
          <target state="translated">Cuando se ejecuta el comando git-rebase, primero ejecutar&amp;aacute; un gancho &quot;pre-rebase&quot; si existe. Puede utilizar este gancho para realizar comprobaciones de cordura y rechazar el rebase si no es apropiado. Consulte la secuencia de comandos de enlace de pre-rebase de la plantilla para ver un ejemplo.</target>
        </trans-unit>
        <trans-unit id="4663df00f4cd516023be3e887d8ecce789e72f00" translate="yes" xml:space="preserve">
          <source>When the history involves criss-cross merges, there can be more than one &lt;code&gt;best&lt;/code&gt; common ancestor for two commits. For example, with this topology:</source>
          <target state="translated">Cuando el historial implica fusiones entrecruzadas, puede haber m&amp;aacute;s de un &lt;code&gt;best&lt;/code&gt; ancestro com&amp;uacute;n para dos confirmaciones. Por ejemplo, con esta topolog&amp;iacute;a:</target>
        </trans-unit>
        <trans-unit id="58beafa5cea14c3b99014fb314d938b1ee9fac65" translate="yes" xml:space="preserve">
          <source>When the man viewer, specified by the &lt;code&gt;man.viewer&lt;/code&gt; configuration variables, is not among the supported ones, then the corresponding &lt;code&gt;man.&amp;lt;tool&amp;gt;.cmd&lt;/code&gt; configuration variable will be looked up. If this variable exists then the specified tool will be treated as a custom command and a shell eval will be used to run the command with the man page passed as arguments.</source>
          <target state="translated">Cuando el visor man, especificado por las variables de configuraci&amp;oacute;n &lt;code&gt;man.viewer&lt;/code&gt; , no se encuentra entre los admitidos, se buscar&amp;aacute; la variable de configuraci&amp;oacute;n &lt;code&gt;man.&amp;lt;tool&amp;gt;.cmd&lt;/code&gt; correspondiente. Si esta variable existe, la herramienta especificada se tratar&amp;aacute; como un comando personalizado y se utilizar&amp;aacute; una evaluaci&amp;oacute;n de shell para ejecutar el comando con la p&amp;aacute;gina de manual pasada como argumentos.</target>
        </trans-unit>
        <trans-unit id="d01c091e9d01b5baf9f294a1d7b9c823d7d014bc" translate="yes" xml:space="preserve">
          <source>When the output goes to a terminal, it is color-coded by default, just like regular &lt;code&gt;git diff&lt;/code&gt;'s output. In addition, the first line (adding a commit) is green, the last line (deleting a commit) is red, the second line (with a perfect match) is yellow like the commit header of &lt;code&gt;git
show&lt;/code&gt;'s output, and the third line colors the old commit red, the new one green and the rest like &lt;code&gt;git show&lt;/code&gt;'s commit header.</source>
          <target state="translated">Cuando la salida va a una terminal, est&amp;aacute; codificada por colores por defecto, al igual que la salida normal de &lt;code&gt;git diff&lt;/code&gt; . Adem&amp;aacute;s, la primera l&amp;iacute;nea (agregar una confirmaci&amp;oacute;n) es verde, la &amp;uacute;ltima l&amp;iacute;nea (eliminar una confirmaci&amp;oacute;n) es roja, la segunda l&amp;iacute;nea (con una coincidencia perfecta) es amarilla como el encabezado de confirmaci&amp;oacute;n de la salida de &lt;code&gt;git show&lt;/code&gt; y la tercera La l&amp;iacute;nea colorea la antigua confirmaci&amp;oacute;n en rojo, la nueva en verde y el resto como el encabezado de confirmaci&amp;oacute;n de &lt;code&gt;git show&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ecf68ce55bda2542529810833e005e7f157f71c2" translate="yes" xml:space="preserve">
          <source>When the patch does not apply cleanly, fall back on 3-way merge if the patch records the identity of blobs it is supposed to apply to and we have those blobs available locally. &lt;code&gt;--no-3way&lt;/code&gt; can be used to override am.threeWay configuration variable. For more information, see am.threeWay in &lt;a href=&quot;git-config&quot;&gt;git-config[1]&lt;/a&gt;.</source>
          <target state="translated">Cuando el parche no se aplica limpiamente, recurra a la combinaci&amp;oacute;n de 3 v&amp;iacute;as si el parche registra la identidad de los blobs a los que se supone que debe aplicarse y tenemos esos blobs disponibles localmente. &lt;code&gt;--no-3way&lt;/code&gt; se puede utilizar para anular la variable de configuraci&amp;oacute;n am.threeWay. Para obtener m&amp;aacute;s informaci&amp;oacute;n, consulte am.threeWay en &lt;a href=&quot;git-config&quot;&gt;git-config [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="28728fcf386b485f532ec99285643062f0405ba5" translate="yes" xml:space="preserve">
          <source>When the patch does not apply cleanly, fall back on 3-way merge if the patch records the identity of blobs it is supposed to apply to, and we have those blobs available locally, possibly leaving the conflict markers in the files in the working tree for the user to resolve. This option implies the &lt;code&gt;--index&lt;/code&gt; option, and is incompatible with the &lt;code&gt;--reject&lt;/code&gt; and the &lt;code&gt;--cached&lt;/code&gt; options.</source>
          <target state="translated">Cuando el parche no se aplica de manera limpia, recurra a la combinaci&amp;oacute;n de 3 v&amp;iacute;as si el parche registra la identidad de los blobs a los que se supone que debe aplicarse, y tenemos esos blobs disponibles localmente, posiblemente dejando los marcadores de conflicto en los archivos del &amp;aacute;rbol de trabajo. para que el usuario lo resuelva. Esta opci&amp;oacute;n implica la opci&amp;oacute;n &lt;code&gt;--index&lt;/code&gt; y es incompatible con las &lt;code&gt;--reject&lt;/code&gt; y &lt;code&gt;--cached&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bdd1b4760c591dff915e966378bff929405d28b1" translate="yes" xml:space="preserve">
          <source>When the push is complete, outputs one or more &lt;code&gt;ok &amp;lt;dst&amp;gt;&lt;/code&gt; or &lt;code&gt;error &amp;lt;dst&amp;gt; &amp;lt;why&amp;gt;?&lt;/code&gt; lines to indicate success or failure of each pushed ref. The status report output is terminated by a blank line. The option field &amp;lt;why&amp;gt; may be quoted in a C style string if it contains an LF.</source>
          <target state="translated">Cuando se completa la inserci&amp;oacute;n, genera uno o m&amp;aacute;s &lt;code&gt;ok &amp;lt;dst&amp;gt;&lt;/code&gt; o &lt;code&gt;error &amp;lt;dst&amp;gt; &amp;lt;why&amp;gt;?&lt;/code&gt; l&amp;iacute;neas para indicar el &amp;eacute;xito o el fracaso de cada ref. La salida del informe de estado finaliza con una l&amp;iacute;nea en blanco. El campo de opci&amp;oacute;n &amp;lt;por qu&amp;eacute;&amp;gt; se puede citar en una cadena de estilo C si contiene un LF.</target>
        </trans-unit>
        <trans-unit id="c36826b0bb47b2400e28127fc2b6b138c228a63f" translate="yes" xml:space="preserve">
          <source>When the remote branch you want to fetch is known to be rewound and rebased regularly, it is expected that its new tip will not be descendant of its previous tip (as stored in your remote-tracking branch the last time you fetched). You would want to use the &lt;code&gt;+&lt;/code&gt; sign to indicate non-fast-forward updates will be needed for such branches. There is no way to determine or declare that a branch will be made available in a repository with this behavior; the pulling user simply must know this is the expected usage pattern for a branch.</source>
          <target state="translated">Cuando se sabe que la rama remota que desea recuperar se rebobina y cambia de base con regularidad, se espera que su nueva sugerencia no sea descendiente de su sugerencia anterior (como se almacen&amp;oacute; en su rama de seguimiento remoto la &amp;uacute;ltima vez que obtuvo). Deber&amp;iacute;a utilizar el signo &lt;code&gt;+&lt;/code&gt; para indicar que se necesitar&amp;aacute;n actualizaciones que no sean de avance r&amp;aacute;pido para dichas ramas. No hay forma de determinar o declarar que una rama estar&amp;aacute; disponible en un repositorio con este comportamiento; el usuario de extracci&amp;oacute;n simplemente debe saber que este es el patr&amp;oacute;n de uso esperado para una rama.</target>
        </trans-unit>
        <trans-unit id="c2d02d0fdbdd6b68f91184ab0fd8a5fcfd84e982" translate="yes" xml:space="preserve">
          <source>When the repository is bare print &quot;true&quot;, otherwise &quot;false&quot;.</source>
          <target state="translated">Cuando el depósito está vacío,escriba &quot;verdadero&quot;,o &quot;falso&quot;.</target>
        </trans-unit>
        <trans-unit id="4881892c9231f2a8cbf0d32abf5995af521026ca" translate="yes" xml:space="preserve">
          <source>When the repository is shallow print &quot;true&quot;, otherwise &quot;false&quot;.</source>
          <target state="translated">Cuando el depósito es superficial escriba &quot;verdadero&quot;,de lo contrario &quot;falso&quot;.</target>
        </trans-unit>
        <trans-unit id="37826a890a4b64bdd1230276a23bd80630675ca5" translate="yes" xml:space="preserve">
          <source>When the repository named by &lt;code&gt;&amp;lt;url&amp;gt;&lt;/code&gt; has the commit at a tip of a ref that is different from the ref you have locally, you can use the &lt;code&gt;&amp;lt;local&amp;gt;:&amp;lt;remote&amp;gt;&lt;/code&gt; syntax, to have its local name, a colon &lt;code&gt;:&lt;/code&gt;, and its remote name.</source>
          <target state="translated">Cuando el repositorio nombrado por &lt;code&gt;&amp;lt;url&amp;gt;&lt;/code&gt; tiene el commit en una punta de un ref que es diferente de que el &amp;aacute;rbitro tiene a nivel local, puede utilizar el &lt;code&gt;&amp;lt;local&amp;gt;:&amp;lt;remote&amp;gt;&lt;/code&gt; sintaxis, para tener su nombre local, dos puntos &lt;code&gt;:&lt;/code&gt; , y su nombre remoto.</target>
        </trans-unit>
        <trans-unit id="a7fe7f8247bda757ca8d697055bcfe0913ae2caf" translate="yes" xml:space="preserve">
          <source>When the repository to clone from is on a local machine, this flag bypasses the normal &quot;Git aware&quot; transport mechanism and clones the repository by making a copy of HEAD and everything under objects and refs directories. The files under &lt;code&gt;.git/objects/&lt;/code&gt; directory are hardlinked to save space when possible.</source>
          <target state="translated">Cuando el repositorio desde el que clonar est&amp;aacute; en una m&amp;aacute;quina local, esta bandera pasa por alto el mecanismo de transporte normal &quot;consciente de Git&quot; y clona el repositorio haciendo una copia de HEAD y todo lo que se encuentra debajo de los directorios de objetos y referencias. Los archivos del directorio &lt;code&gt;.git/objects/&lt;/code&gt; est&amp;aacute;n vinculados para ahorrar espacio cuando sea posible.</target>
        </trans-unit>
        <trans-unit id="87edb2bef2f28c0f63de7720d331d50db0279e94" translate="yes" xml:space="preserve">
          <source>When the repository to clone is on the local machine, instead of using hard links, automatically setup &lt;code&gt;.git/objects/info/alternates&lt;/code&gt; to share the objects with the source repository. The resulting repository starts out without any object of its own.</source>
          <target state="translated">Cuando el repositorio para clonar est&amp;aacute; en la m&amp;aacute;quina local, en lugar de usar enlaces &lt;code&gt;.git/objects/info/alternates&lt;/code&gt; , configura autom&amp;aacute;ticamente .git / objects / info / alternates para compartir los objetos con el repositorio de origen. El repositorio resultante comienza sin ning&amp;uacute;n objeto propio.</target>
        </trans-unit>
        <trans-unit id="e18b845f941d21aaf5232c387f67cb23d0a4e759" translate="yes" xml:space="preserve">
          <source>When the result of a &lt;code&gt;git bisect&lt;/code&gt; is a non-merge commit, you should normally be able to discover the problem by examining just that commit. Developers can make this easy by breaking their changes into small self-contained commits. That won&amp;rsquo;t help in the case above, however, because the problem isn&amp;rsquo;t obvious from examination of any single commit; instead, a global view of the development is required. To make matters worse, the change in semantics in the problematic function may be just one small part of the changes in the upper line of development.</source>
          <target state="translated">Cuando el resultado de una &lt;code&gt;git bisect&lt;/code&gt; es una confirmaci&amp;oacute;n sin fusi&amp;oacute;n, normalmente deber&amp;iacute;a poder descubrir el problema examinando solo esa confirmaci&amp;oacute;n. Los desarrolladores pueden facilitar esto al dividir sus cambios en peque&amp;ntilde;as confirmaciones independientes. Sin embargo, eso no ayudar&amp;aacute; en el caso anterior, porque el problema no es obvio al examinar una &amp;uacute;nica confirmaci&amp;oacute;n; en cambio, se requiere una visi&amp;oacute;n global del desarrollo. Para empeorar las cosas, el cambio en la sem&amp;aacute;ntica de la funci&amp;oacute;n problem&amp;aacute;tica puede ser solo una peque&amp;ntilde;a parte de los cambios en la l&amp;iacute;nea superior de desarrollo.</target>
        </trans-unit>
        <trans-unit id="57dfd8622d0e5d97d5c5344dbdac2c35010a468d" translate="yes" xml:space="preserve">
          <source>When the split index feature is used, shared index files that were not modified since the time this variable specifies will be removed when a new shared index file is created. The value &quot;now&quot; expires all entries immediately, and &quot;never&quot; suppresses expiration altogether. The default value is &quot;2.weeks.ago&quot;. Note that a shared index file is considered modified (for the purpose of expiration) each time a new split-index file is either created based on it or read from it. See &lt;a href=&quot;git-update-index&quot;&gt;git-update-index[1]&lt;/a&gt;.</source>
          <target state="translated">Cuando se utiliza la funci&amp;oacute;n de &amp;iacute;ndice dividido, los archivos de &amp;iacute;ndice compartido que no se modificaron desde la hora que especifica esta variable se eliminar&amp;aacute;n cuando se cree un nuevo archivo de &amp;iacute;ndice compartido. El valor &quot;ahora&quot; expira todas las entradas inmediatamente y &quot;nunca&quot; suprime la expiraci&amp;oacute;n por completo. El valor predeterminado es &quot;2.weeks.ago&quot;. Tenga en cuenta que un archivo de &amp;iacute;ndice compartido se considera modificado (con el prop&amp;oacute;sito de caducar) cada vez que se crea o se lee un nuevo archivo de &amp;iacute;ndice dividido en base a &amp;eacute;l. Consulte &lt;a href=&quot;git-update-index&quot;&gt;git-update-index [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="887ef75c2523fd6b4da84b3a0a714f4995305746" translate="yes" xml:space="preserve">
          <source>When the split index feature is used, this specifies the percent of entries the split index can contain compared to the total number of entries in both the split index and the shared index before a new shared index is written. The value should be between 0 and 100. If the value is 0 then a new shared index is always written, if it is 100 a new shared index is never written. By default the value is 20, so a new shared index is written if the number of entries in the split index would be greater than 20 percent of the total number of entries. See &lt;a href=&quot;git-update-index&quot;&gt;git-update-index[1]&lt;/a&gt;.</source>
          <target state="translated">Cuando se utiliza la funci&amp;oacute;n de &amp;iacute;ndice dividido, esto especifica el porcentaje de entradas que el &amp;iacute;ndice dividido puede contener en comparaci&amp;oacute;n con el n&amp;uacute;mero total de entradas tanto en el &amp;iacute;ndice dividido como en el &amp;iacute;ndice compartido antes de escribir un nuevo &amp;iacute;ndice compartido. El valor debe estar entre 0 y 100. Si el valor es 0, siempre se escribe un nuevo &amp;iacute;ndice compartido, si es 100, nunca se escribe un nuevo &amp;iacute;ndice compartido. De forma predeterminada, el valor es 20, por lo que se escribe un nuevo &amp;iacute;ndice compartido si el n&amp;uacute;mero de entradas en el &amp;iacute;ndice dividido es superior al 20 por ciento del n&amp;uacute;mero total de entradas. Consulte &lt;a href=&quot;git-update-index&quot;&gt;git-update-index [1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1631afdb92ffecd0a40ddcd8f40433691ff79d82" translate="yes" xml:space="preserve">
          <source>When the value is &lt;code&gt;interactive&lt;/code&gt; (or just &lt;code&gt;i&lt;/code&gt;), the rebase is run in interactive mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="249674ff1351f5c865508a34f368a209ce692426" translate="yes" xml:space="preserve">
          <source>When the value is &lt;code&gt;interactive&lt;/code&gt;, the rebase is run in interactive mode.</source>
          <target state="translated">Cuando el valor es &lt;code&gt;interactive&lt;/code&gt; , la rebase se ejecuta en modo interactivo.</target>
        </trans-unit>
        <trans-unit id="2a8620af5de619d02cbdb1290090cf457f4270c6" translate="yes" xml:space="preserve">
          <source>When the working tree is updated, using --recurse-submodules will also recursively reset the working tree of all active submodules according to the commit recorded in the superproject, also setting the submodules' HEAD to be detached at that commit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbc30d1504ae5818b5ebed3f68f464e3d8d41b06" translate="yes" xml:space="preserve">
          <source>When there are approximately more than this many loose objects in the repository, &lt;code&gt;git gc --auto&lt;/code&gt; will pack them. Some Porcelain commands use this command to perform a light-weight garbage collection from time to time. The default value is 6700.</source>
          <target state="translated">Cuando hay aproximadamente m&amp;aacute;s de estos objetos sueltos en el repositorio, &lt;code&gt;git gc --auto&lt;/code&gt; los empaquetar&amp;aacute;. Algunos comandos de Porcelain usan este comando para realizar una recolecci&amp;oacute;n de basura ligera de vez en cuando. El valor predeterminado es 6700.</target>
        </trans-unit>
        <trans-unit id="c316674f184677333eb7d2b00fe1f02bf0eda4b8" translate="yes" xml:space="preserve">
          <source>When there are content conflicts, the merge machinery tries to annotate each side&amp;rsquo;s conflict markers with the commits where the content came from. Since the apply backend drops the original information about the rebased commits and their parents (and instead generates new fake commits based off limited information in the generated patches), those commits cannot be identified; instead it has to fall back to a commit summary. Also, when merge.conflictStyle is set to diff3, the apply backend will use &quot;constructed merge base&quot; to label the content from the merge base, and thus provide no information about the merge base commit whatsoever.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62fefa7cb364ff9a836bef0837ac15925fecc8f2" translate="yes" xml:space="preserve">
          <source>When there are more than this many packs that are not marked with &lt;code&gt;*.keep&lt;/code&gt; file in the repository, &lt;code&gt;git gc
--auto&lt;/code&gt; consolidates them into one larger pack. The default value is 50. Setting this to 0 disables it. Setting &lt;code&gt;gc.auto&lt;/code&gt; to 0 will also disable this.</source>
          <target state="translated">Cuando hay m&amp;aacute;s paquetes que no est&amp;aacute;n marcados con el archivo &lt;code&gt;*.keep&lt;/code&gt; en el repositorio, &lt;code&gt;git gc --auto&lt;/code&gt; consolida en un paquete m&amp;aacute;s grande. El valor predeterminado es 50. Establecerlo en 0 lo desactiva. Establecer &lt;code&gt;gc.auto&lt;/code&gt; en 0 tambi&amp;eacute;n desactivar&amp;aacute; esto.</target>
        </trans-unit>
        <trans-unit id="a99bf9777c550eb2f6602e82876314f8cadcb15d" translate="yes" xml:space="preserve">
          <source>When there is only one argument given and it is not &lt;code&gt;--&lt;/code&gt; (e.g. &lt;code&gt;git
checkout abc&lt;/code&gt;), and when the argument is both a valid &lt;code&gt;&amp;lt;tree-ish&amp;gt;&lt;/code&gt; (e.g. a branch &lt;code&gt;abc&lt;/code&gt; exists) and a valid &lt;code&gt;&amp;lt;pathspec&amp;gt;&lt;/code&gt; (e.g. a file or a directory whose name is &quot;abc&quot; exists), Git would usually ask you to disambiguate. Because checking out a branch is so common an operation, however, &lt;code&gt;git checkout abc&lt;/code&gt; takes &quot;abc&quot; as a &lt;code&gt;&amp;lt;tree-ish&amp;gt;&lt;/code&gt; in such a situation. Use &lt;code&gt;git checkout -- &amp;lt;pathspec&amp;gt;&lt;/code&gt; if you want to checkout these paths out of the index.</source>
          <target state="translated">Cuando solo hay un argumento dado y no es &lt;code&gt;--&lt;/code&gt; (por ejemplo, &lt;code&gt;git checkout abc&lt;/code&gt; ), y cuando el argumento es un &lt;code&gt;&amp;lt;tree-ish&amp;gt;&lt;/code&gt; v&amp;aacute;lido (por ejemplo, existe una rama &lt;code&gt;abc&lt;/code&gt; ) y un &lt;code&gt;&amp;lt;pathspec&amp;gt;&lt;/code&gt; v&amp;aacute;lido (por ejemplo, un archivo o existe un directorio cuyo nombre es &quot;abc&quot;), Git normalmente le pedir&amp;aacute; que elimine la ambig&amp;uuml;edad. Debido a que verificar una rama es una operaci&amp;oacute;n tan com&amp;uacute;n, sin embargo, &lt;code&gt;git checkout abc&lt;/code&gt; toma &quot;abc&quot; como &lt;code&gt;&amp;lt;tree-ish&amp;gt;&lt;/code&gt; en tal situaci&amp;oacute;n. Utilice &lt;code&gt;git checkout -- &amp;lt;pathspec&amp;gt;&lt;/code&gt; si desea retirar estas rutas del &amp;iacute;ndice.</target>
        </trans-unit>
        <trans-unit id="3ff1d02c565a22d417998ec283b077273b716d4a" translate="yes" xml:space="preserve">
          <source>When these environment variables are set, the corresponding command-line arguments may not be used.</source>
          <target state="translated">Cuando se establecen estas variables de entorno,no se pueden utilizar los correspondientes argumentos de la línea de comandos.</target>
        </trans-unit>
        <trans-unit id="86c4d2dcd046b538b0d9c792061f20bffd3f8c8e" translate="yes" xml:space="preserve">
          <source>When this flag is provided, the pack is read from stdin instead and a copy is then written to &amp;lt;pack-file&amp;gt;. If &amp;lt;pack-file&amp;gt; is not specified, the pack is written to objects/pack/ directory of the current Git repository with a default name determined from the pack content. If &amp;lt;pack-file&amp;gt; is not specified consider using --keep to prevent a race condition between this process and &lt;code&gt;git repack&lt;/code&gt;.</source>
          <target state="translated">Cuando se proporciona esta bandera, el paquete se lee desde stdin en su lugar y luego se escribe una copia en &amp;lt;pack-file&amp;gt;. Si no se especifica &amp;lt;pack-file&amp;gt;, el paquete se escribe en el directorio objects / pack / del repositorio de Git actual con un nombre predeterminado determinado a partir del contenido del paquete. Si no se especifica &amp;lt;pack-file&amp;gt;, considere usar --keep para evitar una condici&amp;oacute;n de carrera entre este proceso y &lt;code&gt;git repack&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c91915e7d5f6096e68c1652d49f4ac505147354d" translate="yes" xml:space="preserve">
          <source>When this flag is specified, the object names recorded for the paths are not updated. Instead, this option sets/unsets the &quot;assume unchanged&quot; bit for the paths. When the &quot;assume unchanged&quot; bit is on, the user promises not to change the file and allows Git to assume that the working tree file matches what is recorded in the index. If you want to change the working tree file, you need to unset the bit to tell Git. This is sometimes helpful when working with a big project on a filesystem that has very slow lstat(2) system call (e.g. cifs).</source>
          <target state="translated">Cuando se especifica esta bandera,los nombres de los objetos registrados para las rutas no se actualizan.En su lugar,esta opción establece/desestablece el bit &quot;asumir sin cambios&quot; para los caminos.Cuando el bit &quot;assume unchanged&quot; está activado,el usuario promete no cambiar el archivo y permite a Git asumir que el archivo del árbol de trabajo coincide con lo registrado en el índice.Si quieres cambiar el archivo del árbol de trabajo,tienes que desajustar el bit para decírselo a Git.Esto es a veces útil cuando se trabaja con un proyecto grande en un sistema de archivos que tiene una llamada al sistema lstat(2)muy lenta (por ejemplo,cifs).</target>
        </trans-unit>
        <trans-unit id="b1f75c6b9b1b22670befceda22525699cad697f2" translate="yes" xml:space="preserve">
          <source>When this form of &lt;code&gt;git read-tree&lt;/code&gt; returns successfully, you can see which of the &quot;local changes&quot; that you made were carried forward by running &lt;code&gt;git diff-index --cached $M&lt;/code&gt;. Note that this does not necessarily match what &lt;code&gt;git diff-index --cached $H&lt;/code&gt; would have produced before such a two tree merge. This is because of cases 18 and 19 --- if you already had the changes in $M (e.g. maybe you picked it up via e-mail in a patch form), &lt;code&gt;git diff-index
--cached $H&lt;/code&gt; would have told you about the change before this merge, but it would not show in &lt;code&gt;git diff-index --cached $M&lt;/code&gt; output after the two-tree merge.</source>
          <target state="translated">Cuando esta forma de &lt;code&gt;git read-tree&lt;/code&gt; regresa con &amp;eacute;xito, se puede ver cu&amp;aacute;l de los &quot;cambios locales&quot; que ha realizado se llevaron adelante ejecutando &lt;code&gt;git diff-index --cached $M&lt;/code&gt; . Tenga en cuenta que esto no necesariamente coincide con lo que &lt;code&gt;git diff-index --cached $H&lt;/code&gt; habr&amp;iacute;a producido antes de una fusi&amp;oacute;n de dos &amp;aacute;rboles. Esto se debe a los casos 18 y 19 --- si ya ten&amp;iacute;a los cambios en $ M (por ejemplo, tal vez lo recogi&amp;oacute; por correo electr&amp;oacute;nico en un formulario de parche), &lt;code&gt;git diff-index --cached $H&lt;/code&gt; se lo habr&amp;iacute;a dicho sobre el cambio antes de esta fusi&amp;oacute;n, pero no se mostrar&amp;iacute;a en &lt;code&gt;git diff-index --cached $M&lt;/code&gt; output despu&amp;eacute;s de la fusi&amp;oacute;n de dos &amp;aacute;rboles.</target>
        </trans-unit>
        <trans-unit id="a7b5d3881356f9c9c7fd25660fd80f9c16873a97" translate="yes" xml:space="preserve">
          <source>When this option is specified, the behavior is as if a special &lt;code&gt;&amp;lt;token&amp;gt;=&amp;lt;value&amp;gt;&lt;/code&gt; argument were added at the beginning of the command line, where &amp;lt;value&amp;gt; is taken to be the standard output of the specified command with any leading and trailing whitespace trimmed off.</source>
          <target state="translated">Cuando se especifica esta opci&amp;oacute;n, el comportamiento es como si se hubiera agregado un argumento especial &lt;code&gt;&amp;lt;token&amp;gt;=&amp;lt;value&amp;gt;&lt;/code&gt; al comienzo de la l&amp;iacute;nea de comando, donde &amp;lt;valor&amp;gt; se toma como la salida est&amp;aacute;ndar del comando especificado con cualquier espacio en blanco final recortado.</target>
        </trans-unit>
        <trans-unit id="fe0e96d95c4eefa9bfe72917d015cf48a18efcc2" translate="yes" xml:space="preserve">
          <source>When this special attribute is read by &lt;code&gt;git credential&lt;/code&gt;, the value is parsed as a URL and treated as if its constituent parts were read (e.g., &lt;code&gt;url=https://example.com&lt;/code&gt; would behave as if &lt;code&gt;protocol=https&lt;/code&gt; and &lt;code&gt;host=example.com&lt;/code&gt; had been provided). This can help callers avoid parsing URLs themselves.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de58814133990da5a575ac12a35ef9b3b981ae4a" translate="yes" xml:space="preserve">
          <source>When this special attribute is read by &lt;code&gt;git credential&lt;/code&gt;, the value is parsed as a URL and treated as if its constituent parts were read (e.g., &lt;code&gt;url=https://example.com&lt;/code&gt; would behave as if &lt;code&gt;protocol=https&lt;/code&gt; and &lt;code&gt;host=example.com&lt;/code&gt; had been provided). This can help callers avoid parsing URLs themselves. Note that any components which are missing from the URL (e.g., there is no username in the example above) will be set to empty; if you want to provide a URL and override some attributes, provide the URL attribute first, followed by any overrides.</source>
          <target state="translated">Cuando la &lt;code&gt;git credential&lt;/code&gt; lee este atributo especial , el valor se analiza como una URL y se trata como si se leyeran sus partes constituyentes (por ejemplo, &lt;code&gt;url=https://example.com&lt;/code&gt; se comportar&amp;iacute;a como si &lt;code&gt;protocol=https&lt;/code&gt; y &lt;code&gt;host=example.com&lt;/code&gt; se ha proporcionado). Esto puede ayudar a las personas que llaman a evitar el an&amp;aacute;lisis de las URL. Tenga en cuenta que cualquier componente que falte en la URL (por ejemplo, no hay un nombre de usuario en el ejemplo anterior) se configurar&amp;aacute; como vac&amp;iacute;o; Si desea proporcionar una URL y anular algunos atributos, proporcione primero el atributo de URL, seguido de las anulaciones.</target>
        </trans-unit>
        <trans-unit id="882eafec7b82da90c1fd3ae7dc7040457d013cf9" translate="yes" xml:space="preserve">
          <source>When trace files are written to a target directory, they will be named according to the last component of the SID (optionally followed by a counter to avoid filename collisions).</source>
          <target state="translated">Cuando los archivos de rastreo se escriben en un directorio de destino,se nombrarán según el último componente del SID (opcionalmente seguido de un contador para evitar colisiones entre archivos).</target>
        </trans-unit>
        <trans-unit id="1771ffd8c74f9f0b2e623ff3c52581b28a17469b" translate="yes" xml:space="preserve">
          <source>When tracking multiple directories (using --stdlayout, --branches, or --tags options), git svn will attempt to connect to the root (or highest allowed level) of the Subversion repository. This default allows better tracking of history if entire projects are moved within a repository, but may cause issues on repositories where read access restrictions are in place. Passing &lt;code&gt;--no-minimize-url&lt;/code&gt; will allow git svn to accept URLs as-is without attempting to connect to a higher level directory. This option is off by default when only one URL/branch is tracked (it would do little good).</source>
          <target state="translated">Al rastrear m&amp;uacute;ltiples directorios (usando las opciones --stdlayout, --branches o --tags), git svn intentar&amp;aacute; conectarse a la ra&amp;iacute;z (o al nivel m&amp;aacute;s alto permitido) del repositorio de Subversion. Este valor predeterminado permite un mejor seguimiento del historial si los proyectos completos se mueven dentro de un repositorio, pero puede causar problemas en los repositorios donde existen restricciones de acceso de lectura. Pasar &lt;code&gt;--no-minimize-url&lt;/code&gt; permitir&amp;aacute; a git svn aceptar las URL como est&amp;aacute;n sin intentar conectarse a un directorio de nivel superior. Esta opci&amp;oacute;n est&amp;aacute; desactivada de forma predeterminada cuando solo se rastrea una URL / rama (no servir&amp;iacute;a de nada).</target>
        </trans-unit>
        <trans-unit id="442a6a05d34f849ad275ea5e7d6f50f5aafe59d9" translate="yes" xml:space="preserve">
          <source>When true, and when reachability bitmaps are enabled, pack-objects will try to send parts of the bitmapped packfile verbatim. This can reduce memory and CPU usage to serve fetches, but might result in sending a slightly larger pack. Defaults to true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fce35b3add797f616ba5b3be537b437a03e625f0" translate="yes" xml:space="preserve">
          <source>When true, git will default to using the &lt;code&gt;--sparse&lt;/code&gt; option in &lt;code&gt;git pack-objects&lt;/code&gt; when the &lt;code&gt;--revs&lt;/code&gt; option is present. This algorithm only walks trees that appear in paths that introduce new objects. This can have significant performance benefits when computing a pack to send a small change. However, it is possible that extra objects are added to the pack-file if the included commits contain certain types of direct renames. Default is &lt;code&gt;false&lt;/code&gt; unless &lt;code&gt;feature.experimental&lt;/code&gt; is enabled.</source>
          <target state="translated">Cuando es verdadero, git usar&amp;aacute; por defecto la opci&amp;oacute;n &lt;code&gt;--sparse&lt;/code&gt; en &lt;code&gt;git pack-objects&lt;/code&gt; cuando la opci&amp;oacute;n &lt;code&gt;--revs&lt;/code&gt; est&amp;eacute; presente. Este algoritmo solo recorre &amp;aacute;rboles que aparecen en caminos que introducen nuevos objetos. Esto puede tener importantes beneficios de rendimiento al calcular un paquete para enviar un peque&amp;ntilde;o cambio. Sin embargo, es posible que se agreguen objetos adicionales al archivo del paquete si las confirmaciones incluidas contienen ciertos tipos de cambios de nombre directos. El valor predeterminado es &lt;code&gt;false&lt;/code&gt; menos que &lt;code&gt;feature.experimental&lt;/code&gt; est&amp;eacute; habilitado.</target>
        </trans-unit>
        <trans-unit id="a46d4189a8b9229b7d91d54cdebfebe81ffd9ae6" translate="yes" xml:space="preserve">
          <source>When true, git will default to using the &lt;code&gt;--sparse&lt;/code&gt; option in &lt;code&gt;git pack-objects&lt;/code&gt; when the &lt;code&gt;--revs&lt;/code&gt; option is present. This algorithm only walks trees that appear in paths that introduce new objects. This can have significant performance benefits when computing a pack to send a small change. However, it is possible that extra objects are added to the pack-file if the included commits contain certain types of direct renames. Default is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d73311a3b4a00977d7e2237078b01efb9320bfa" translate="yes" xml:space="preserve">
          <source>When true, git will include a &quot;hash cache&quot; section in the bitmap index (if one is written). This cache can be used to feed git&amp;rsquo;s delta heuristics, potentially leading to better deltas between bitmapped and non-bitmapped objects (e.g., when serving a fetch between an older, bitmapped pack and objects that have been pushed since the last gc). The downside is that it consumes 4 bytes per object of disk space. Defaults to true.</source>
          <target state="translated">Cuando es verdadero, git incluir&amp;aacute; una secci&amp;oacute;n de &quot;cach&amp;eacute; de hash&quot; en el &amp;iacute;ndice de mapa de bits (si hay alguna escrita). Esta cach&amp;eacute; se puede usar para alimentar las heur&amp;iacute;sticas delta de git, lo que podr&amp;iacute;a conducir a mejores deltas entre objetos con mapa de bits y sin mapa de bits (por ejemplo, cuando se realiza una b&amp;uacute;squeda entre un paquete con mapa de bits m&amp;aacute;s antiguo y objetos que se han insertado desde el &amp;uacute;ltimo gc). La desventaja es que consume 4 bytes por objeto de espacio en disco. Por defecto es verdadero.</target>
        </trans-unit>
        <trans-unit id="98f36898b39f3ac14609adb644f7b367554be4b3" translate="yes" xml:space="preserve">
          <source>When true, git will use pack bitmaps (if available) when packing to stdout (e.g., during the server side of a fetch). Defaults to true. You should not generally need to turn this off unless you are debugging pack bitmaps.</source>
          <target state="translated">Cuando sea cierto,git utilizará mapas de bits de paquete (si están disponibles)al empaquetar a stdout (por ejemplo,durante el lado del servidor de un fetch).Por defecto es true.Por lo general,no deberías necesitar desactivarlo a menos que estés depurando mapas de bits de paquete.</target>
        </trans-unit>
        <trans-unit id="3060361b8b64f7f4f15aa5d402b402d65fd1ef21" translate="yes" xml:space="preserve">
          <source>When true, git will write a bitmap index when packing all objects to disk (e.g., when &lt;code&gt;git repack -a&lt;/code&gt; is run). This index can speed up the &quot;counting objects&quot; phase of subsequent packs created for clones and fetches, at the cost of some disk space and extra time spent on the initial repack. This has no effect if multiple packfiles are created. Defaults to true on bare repos, false otherwise.</source>
          <target state="translated">Cuando es verdadero, git escribir&amp;aacute; un &amp;iacute;ndice de mapa de bits al empaquetar todos los objetos en el disco (por ejemplo, cuando se ejecuta &lt;code&gt;git repack -a&lt;/code&gt; ). Este &amp;iacute;ndice puede acelerar la fase de &quot;recuento de objetos&quot; de los paquetes posteriores creados para clones y recuperaciones, a costa de algo de espacio en disco y tiempo adicional dedicado al reempaquetado inicial. Esto no tiene ning&amp;uacute;n efecto si se crean varios archivos de paquete. Por defecto es verdadero en repositorios desnudos, falso en caso contrario.</target>
        </trans-unit>
        <trans-unit id="b7b0c56b83a62c5cf7d9e0b77ba1430747588d7a" translate="yes" xml:space="preserve">
          <source>When true, rebase branches on top of the fetched branch, instead of merging the default branch from the default remote when &quot;git pull&quot; is run. See &quot;branch.&amp;lt;name&amp;gt;.rebase&quot; for setting this on a per-branch basis.</source>
          <target state="translated">Cuando es verdadero, rebase las ramas en la parte superior de la rama recuperada, en lugar de fusionar la rama predeterminada del control remoto predeterminado cuando se ejecuta &quot;git pull&quot;. Consulte &quot;branch. &amp;lt;nombre&amp;gt; .rebase&quot; para configurar esto por rama.</target>
        </trans-unit>
        <trans-unit id="c15c8ba9ac152f7e581087f6ca67eb8a95961a05" translate="yes" xml:space="preserve">
          <source>When true, rebase the branch &amp;lt;name&amp;gt; on top of the fetched branch, instead of merging the default branch from the default remote when &quot;git pull&quot; is run. See &quot;pull.rebase&quot; for doing this in a non branch-specific manner.</source>
          <target state="translated">Cuando es verdadero, reemplace la rama &amp;lt;nombre&amp;gt; encima de la rama recuperada, en lugar de fusionar la rama predeterminada del control remoto predeterminado cuando se ejecuta &quot;git pull&quot;. Consulte &quot;pull.rebase&quot; para hacer esto de una manera no espec&amp;iacute;fica de la rama.</target>
        </trans-unit>
        <trans-unit id="32f2ccfcaf97ac2d1b8fdcbcf4ee46e8d18499a7" translate="yes" xml:space="preserve">
          <source>When true, rebase the current branch on top of the upstream branch after fetching. If there is a remote-tracking branch corresponding to the upstream branch and the upstream branch was rebased since last fetched, the rebase uses that information to avoid rebasing non-local changes.</source>
          <target state="translated">Cuando sea cierto,rebase la rama actual en la parte superior de la rama de arriba después de buscar.Si hay una rama de seguimiento remoto que corresponde a la rama ascendente y la rama ascendente fue rebasada desde la última vez que fue obtenida,la base utiliza esa información para evitar rebasar los cambios no locales.</target>
        </trans-unit>
        <trans-unit id="e3872f2dbeef66b0c7927df02dbbfa3a35c8d12b" translate="yes" xml:space="preserve">
          <source>When two trees are given, it compares the first tree with the second. When a single commit is given, it compares the commit with its parents. The remaining commits, when given, are used as if they are parents of the first commit.</source>
          <target state="translated">Cuando se dan dos árboles,se compara el primer árbol con el segundo.Cuando se da un compromiso único,compara el compromiso con sus padres.Los compromisos restantes,cuando se dan,se usan como si fueran los padres del primer compromiso.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
