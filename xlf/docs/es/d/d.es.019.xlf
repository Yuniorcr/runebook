<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="d">
    <body>
      <group id="d">
        <trans-unit id="f3104dd45718e6d1ac6a03b91ae67193ae8361f0" translate="yes" xml:space="preserve">
          <source>Enums</source>
          <target state="translated">Enums</target>
        </trans-unit>
        <trans-unit id="91b5a4505ff4388b543e615403e943b213e146be" translate="yes" xml:space="preserve">
          <source>Enums must have at least one member.</source>
          <target state="translated">Los enums deben tener al menos un miembro.</target>
        </trans-unit>
        <trans-unit id="1173b2e11bd16e5dc36c119a4b84f02be11626b5" translate="yes" xml:space="preserve">
          <source>Environment variables</source>
          <target state="translated">Las variables de entorno</target>
        </trans-unit>
        <trans-unit id="af2c16f78a14f7f4e0c19bb8444d3b5d1ddbd6bc" translate="yes" xml:space="preserve">
          <source>Eponymous Templates</source>
          <target state="translated">Plantillas con el mismo nombre</target>
        </trans-unit>
        <trans-unit id="98960d79731e92f6a1481f64f5023d43b91903f0" translate="yes" xml:space="preserve">
          <source>Equal to &lt;a href=&quot;etc_c_curl#CURLcode&quot;&gt;&lt;code&gt;etc.c.curl.CURLcode&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">Igual a &lt;a href=&quot;etc_c_curl#CURLcode&quot;&gt; &lt;code&gt;etc.c.curl.CURLcode&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="eb253eb5985c5dedcf6ea0e168a624316301f2da" translate="yes" xml:space="preserve">
          <source>Equality Expressions</source>
          <target state="translated">Expresiones de igualdad</target>
        </trans-unit>
        <trans-unit id="d0f7f003b5eae761303767b178c5b32ad771e92d" translate="yes" xml:space="preserve">
          <source>Equality comparisons (==, !=, is, !is) are permitted between all pointers, without restriction.</source>
          <target state="translated">Las comparaciones de igualdad (==,!=,es,!es)están permitidas entre todos los punteros,sin restricción.</target>
        </trans-unit>
        <trans-unit id="d0efd94caf98a8617b53c3b12681dbbfdad08e3c" translate="yes" xml:space="preserve">
          <source>Equality expressions compare the two operands for equality (&lt;code&gt;==&lt;/code&gt;) or inequality (&lt;code&gt;!=&lt;/code&gt;). The type of the result is &lt;code&gt;bool&lt;/code&gt;.</source>
          <target state="translated">Las expresiones de igualdad comparan los dos operandos para igualdad ( &lt;code&gt;==&lt;/code&gt; ) o desigualdad ( &lt;code&gt;!=&lt;/code&gt; ). El tipo de resultado es &lt;code&gt;bool&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a821b59480ce2414bd6165847b5c1fb14cb79065" translate="yes" xml:space="preserve">
          <source>Equivalence is defined by the predicate &lt;code&gt;pred&lt;/code&gt;, which can be either binary, which is passed to &lt;a href=&quot;std_functional#binaryFun&quot;&gt;&lt;code&gt;std.functional.binaryFun&lt;/code&gt;&lt;/a&gt;, or unary, which is passed to &lt;a href=&quot;std_functional#unaryFun&quot;&gt;&lt;code&gt;std.functional.unaryFun&lt;/code&gt;&lt;/a&gt;. In the binary form, two range elements &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; are considered equivalent if &lt;code&gt;pred(a,b)&lt;/code&gt; is true. In unary form, two elements are considered equivalent if &lt;code&gt;pred(a) == pred(b)&lt;/code&gt; is true.</source>
          <target state="translated">La equivalencia se define por el predicado &lt;code&gt;pred&lt;/code&gt; , que puede ser binario, que se pasa a &lt;a href=&quot;std_functional#binaryFun&quot;&gt; &lt;code&gt;std.functional.binaryFun&lt;/code&gt; &lt;/a&gt; , o unario, que se pasa a &lt;a href=&quot;std_functional#unaryFun&quot;&gt; &lt;code&gt;std.functional.unaryFun&lt;/code&gt; &lt;/a&gt; . En la forma binaria, dos elementos de rango &lt;code&gt;a&lt;/code&gt; y &lt;code&gt;b&lt;/code&gt; se consideran equivalentes si &lt;code&gt;pred(a,b)&lt;/code&gt; es verdadero. En forma unaria, dos elementos se consideran equivalentes si &lt;code&gt;pred(a) == pred(b)&lt;/code&gt; es verdadero.</target>
        </trans-unit>
        <trans-unit id="f3d4d9eeca49f09a17fcd8a54a0fa4787c33d0da" translate="yes" xml:space="preserve">
          <source>Equivalent elements separated by an intervening non-equivalent element will appear in separate subranges; this function only considers adjacent equivalence. Elements in the subranges will always appear in the same order they appear in the original range.</source>
          <target state="translated">Los elementos equivalentes separados por un elemento no equivalente intermedio aparecerán en subgamas separados;esta función sólo considera la equivalencia adyacente.Los elementos de los subrangos aparecerán siempre en el mismo orden en que aparecen en el rango original.</target>
        </trans-unit>
        <trans-unit id="15ed9b5cca8803ef06cb9688dbc5af4fe192a4a4" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;file.writef(fmt, args, '\n')&lt;/code&gt;.</source>
          <target state="translated">Equivalente a &lt;code&gt;file.writef(fmt, args, '\n')&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ce6d1bc952023308db732f8f94e2b34d7940aa93" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;fmax(x-y, 0)&lt;/code&gt;.</source>
          <target state="translated">Equivalente a &lt;code&gt;fmax(x-y, 0)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8e86802e906e78082747bcdbd4222e541b464705" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;write(args, '\n')&lt;/code&gt;. Calling &lt;code&gt;writeln&lt;/code&gt; without arguments is valid and just prints a newline to the standard output.</source>
          <target state="translated">Equivalente a &lt;code&gt;write(args, '\n')&lt;/code&gt; . Llamar a &lt;code&gt;writeln&lt;/code&gt; sin argumentos es v&amp;aacute;lido y solo imprime una nueva l&amp;iacute;nea en la salida est&amp;aacute;ndar.</target>
        </trans-unit>
        <trans-unit id="d1a5bc7d4ab0b05ff1942fc426e894258a7dcb1a" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;writef(fmt, args, '\n')&lt;/code&gt;.</source>
          <target state="translated">Equivalente a &lt;code&gt;writef(fmt, args, '\n')&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7f2f6a15cf8da2b27e5a4af47b58e7ad71c0b3d9" translate="yes" xml:space="preserve">
          <source>Error</source>
          <target state="translated">Error</target>
        </trans-unit>
        <trans-unit id="c73f93f4b9a02f4e5a949fd11052e3a166c6f2ac" translate="yes" xml:space="preserve">
          <source>Error Codes And Messages</source>
          <target state="translated">Códigos de error y mensajes</target>
        </trans-unit>
        <trans-unit id="7fc353a0378a6af6e63cb4e746bbbbd0e56d46cc" translate="yes" xml:space="preserve">
          <source>Error Logging Interface</source>
          <target state="translated">Interfaz de registro de errores</target>
        </trans-unit>
        <trans-unit id="ebaf4b5ec788b16d6d54392acc5fde873dbc786a" translate="yes" xml:space="preserve">
          <source>Error exceptions get handled one way or another. There is nothing like a NULL pointer return indicating an error, followed by trying to use that NULL pointer.</source>
          <target state="translated">Las excepciones de error se manejan de una forma u otra.No hay nada como un retorno de un puntero NULL indicando un error,seguido de un intento de usar ese puntero NULL.</target>
        </trans-unit>
        <trans-unit id="a623c8e1a198390969227d2d0b456f83bf23e21d" translate="yes" xml:space="preserve">
          <source>Error function</source>
          <target state="translated">Función de error</target>
        </trans-unit>
        <trans-unit id="34d6de902e8eedf56209e7c63d5376af7cf4d10e" translate="yes" xml:space="preserve">
          <source>Error message</source>
          <target state="translated">Mensaje de error</target>
        </trans-unit>
        <trans-unit id="50c855f2252890155a086cc4373ee4123aab7e7a" translate="yes" xml:space="preserve">
          <source>Error message from sqlite3_mprintf()</source>
          <target state="translated">Mensaje de error de sqlite3_mprintf()</target>
        </trans-unit>
        <trans-unit id="2252ea1e4cbf7755de129147ae3fdbeb59b1c86e" translate="yes" xml:space="preserve">
          <source>ErrorExp</source>
          <target state="translated">ErrorExp</target>
        </trans-unit>
        <trans-unit id="813b5f9ec8deffdd987c925d7e6501434e44711b" translate="yes" xml:space="preserve">
          <source>ErrorExp &lt;strong id=&quot;arrayOpInvalidError&quot;&gt;arrayOpInvalidError&lt;/strong&gt;(Expression e);</source>
          <target state="translated">ErrorExp &lt;strong id=&quot;arrayOpInvalidError&quot;&gt;arrayOpInvalidError&lt;/strong&gt; (Expresi&amp;oacute;n e);</target>
        </trans-unit>
        <trans-unit id="805e86a8cbf628e38e4c45612c005a504009e79a" translate="yes" xml:space="preserve">
          <source>Errors</source>
          <target state="translated">Errors</target>
        </trans-unit>
        <trans-unit id="36fd0b0b802c6a97f7436e7a54204bfe482a5123" translate="yes" xml:space="preserve">
          <source>Errors are not part of the normal flow of a program. Errors are exceptional, unusual, and unexpected.</source>
          <target state="translated">Los errores no son parte del flujo normal de un programa.Los errores son excepcionales,inusuales e inesperados.</target>
        </trans-unit>
        <trans-unit id="e66bc34f0c40669df2318f69c4904fa255dc47c1" translate="yes" xml:space="preserve">
          <source>Errors throw a ZlibException.</source>
          <target state="translated">Los errores arrojan una ZlibExcepción.</target>
        </trans-unit>
        <trans-unit id="21208fcb40762782f0bd5de0b94d3c459b091b72" translate="yes" xml:space="preserve">
          <source>Es &lt;code&gt;es&lt;/code&gt;</source>
          <target state="translated">Es &lt;code&gt;es&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b4cfe1f435f06beaae8e7d7c6d43e5dddbe640bb" translate="yes" xml:space="preserve">
          <source>Escape</source>
          <target state="translated">Escape</target>
        </trans-unit>
        <trans-unit id="3e13e2405c74a25265ee4e281ccf78feafc5234d" translate="yes" xml:space="preserve">
          <source>Escape Sequences</source>
          <target state="translated">Secuencias de escape</target>
        </trans-unit>
        <trans-unit id="7a8244906137fd404125079316acd1c376574734" translate="yes" xml:space="preserve">
          <source>Escapes URL strings (converts all letters consider illegal in URLs to their %XX versions). This function returns a new allocated string or NULL if an error occurred.</source>
          <target state="translated">Escapa de las cadenas de URL (convierte todas las letras consideradas ilegales en URLs a sus versiones %XX).Esta función devuelve una nueva cadena asignada o NULL si se ha producido un error.</target>
        </trans-unit>
        <trans-unit id="c62c2a45ea9630e69c7b0296a18169ca1da2c6cd" translate="yes" xml:space="preserve">
          <source>Escapes a filename to be used for shell redirection with &lt;a href=&quot;#spawnShell&quot;&gt;&lt;code&gt;spawnShell&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#pipeShell&quot;&gt;&lt;code&gt;pipeShell&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#executeShell&quot;&gt;&lt;code&gt;executeShell&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Se escapa de un nombre de archivo que se utilizar&amp;aacute; para la redirecci&amp;oacute;n de shell con &lt;a href=&quot;#spawnShell&quot;&gt; &lt;code&gt;spawnShell&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#pipeShell&quot;&gt; &lt;code&gt;pipeShell&lt;/code&gt; &lt;/a&gt; o &lt;a href=&quot;#executeShell&quot;&gt; &lt;code&gt;executeShell&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="334839f3a4af8ebe642ad214739fca50dd79b867" translate="yes" xml:space="preserve">
          <source>Escapes an argv-style argument array to be used with &lt;a href=&quot;#spawnShell&quot;&gt;&lt;code&gt;spawnShell&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#pipeShell&quot;&gt;&lt;code&gt;pipeShell&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#executeShell&quot;&gt;&lt;code&gt;executeShell&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Se escapa de una matriz de argumentos de estilo argv para usar con &lt;a href=&quot;#spawnShell&quot;&gt; &lt;code&gt;spawnShell&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#pipeShell&quot;&gt; &lt;code&gt;pipeShell&lt;/code&gt; &lt;/a&gt; o &lt;a href=&quot;#executeShell&quot;&gt; &lt;code&gt;executeShell&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c42e53a2ef68cf047319483e6444a0150025a7f7" translate="yes" xml:space="preserve">
          <source>Essentially just calls &lt;code&gt;checkNestedReference() for each variable reference in &lt;/code&gt;e`.</source>
          <target state="translated">Esencialmente solo llama a &lt;code&gt;checkNestedReference() for each variable reference in &lt;/code&gt; e`.</target>
        </trans-unit>
        <trans-unit id="37eefc2536d5ec542e4520a234de4d178700f2f2" translate="yes" xml:space="preserve">
          <source>Establish a connection. If the socket is blocking, connect waits for the connection to be made. If the socket is nonblocking, connect returns immediately and the connection attempt is still in progress.</source>
          <target state="translated">Establecer una conexión.Si el enchufe se bloquea,la conexión espera a que se haga la conexión.Si la toma no está bloqueada,conectar vuelve inmediatamente y el intento de conexión sigue en curso.</target>
        </trans-unit>
        <trans-unit id="cb2a5e97585ee713b7b435ea0059ffc0b575e976" translate="yes" xml:space="preserve">
          <source>Estimated cost of using this index</source>
          <target state="translated">Costo estimado de la utilización de este índice</target>
        </trans-unit>
        <trans-unit id="4dc2b41f9f62ae24f4ee1bdb98221a2c0df13e48" translate="yes" xml:space="preserve">
          <source>Ethiopic</source>
          <target state="translated">Ethiopic</target>
        </trans-unit>
        <trans-unit id="50a8bee7f3f7f91e053f811fb77da91693c7dedd" translate="yes" xml:space="preserve">
          <source>Ethiopic Extended</source>
          <target state="translated">Etiópico extendido</target>
        </trans-unit>
        <trans-unit id="0b1c5f04c3cf37f71157c85cf3538322e5bf9da1" translate="yes" xml:space="preserve">
          <source>Ethiopic Extended-A</source>
          <target state="translated">Etiópico Extendido-A</target>
        </trans-unit>
        <trans-unit id="7c8438f345294d8ae21cfe001be4e6de5852f8b9" translate="yes" xml:space="preserve">
          <source>Ethiopic Supplement</source>
          <target state="translated">Suplemento Etíope</target>
        </trans-unit>
        <trans-unit id="ec4e1ce13e95c935383dc5219130b98c64fd292a" translate="yes" xml:space="preserve">
          <source>Evaluate &amp;gt;,&amp;lt;=, etc. Resolves slices before comparing. Returns 0 or 1</source>
          <target state="translated">Evaluar&amp;gt;, &amp;lt;=, etc. Resuelve cortes antes de comparar. Devuelve 0 o 1</target>
        </trans-unit>
        <trans-unit id="63a877dc2e3925ab0262cba5e336e32067b1f868" translate="yes" xml:space="preserve">
          <source>Evaluate ==, !=. Resolves slices before comparing. Returns 0 or 1</source>
          <target state="translated">Evalúa ==,!=.Resuelve los trozos antes de comparar.Devuelve 0 o 1</target>
        </trans-unit>
        <trans-unit id="b8465fee9c60fa18c66485376de57ad47eb492b1" translate="yes" xml:space="preserve">
          <source>Evaluate An SQL Statement</source>
          <target state="translated">Evaluar una declaración SQL</target>
        </trans-unit>
        <trans-unit id="f0a33e70cc28b1c16a65e2ac8b3f23349a36f271" translate="yes" xml:space="preserve">
          <source>Evaluate builtin function. Return result; NULL if cannot evaluate it.</source>
          <target state="translated">Evaluar la función incorporada.Devuelva el resultado;NULL si no puede evaluarlo.</target>
        </trans-unit>
        <trans-unit id="ba342f0fe13aca65712f2259febed282817e389a" translate="yes" xml:space="preserve">
          <source>Evaluate is, !is. Resolves slices before comparing. Returns 0 or 1</source>
          <target state="translated">Evaluar es,es.Resuelve los trozos antes de comparar.Devuelve 0 o 1</target>
        </trans-unit>
        <trans-unit id="0dfd6ef81633d9cb47cabec388bec88396961ba5" translate="yes" xml:space="preserve">
          <source>Evaluate polynomial A(x) = a&lt;sub&gt;0&lt;/sub&gt; + a&lt;sub&gt;1&lt;/sub&gt;x + a&lt;sub&gt;2&lt;/sub&gt;x&lt;sup&gt;2&lt;/sup&gt; + a&lt;sub&gt;3&lt;/sub&gt;x&lt;sup&gt;3&lt;/sup&gt;; ...</source>
          <target state="translated">Eval&amp;uacute;e el polinomio A (x) = a &lt;sub&gt;0&lt;/sub&gt; + a &lt;sub&gt;1&lt;/sub&gt; x + a &lt;sub&gt;2&lt;/sub&gt; x &lt;sup&gt;2&lt;/sup&gt; + a &lt;sub&gt;3&lt;/sub&gt; x &lt;sup&gt;3&lt;/sup&gt; ; ...</target>
        </trans-unit>
        <trans-unit id="a5be27aeb62439a889f10e6c829e770637dd9146" translate="yes" xml:space="preserve">
          <source>Evaluates to &lt;code&gt;AliasSeq!(F!(T[0]), F!(T[1]), ..., F!(T[$ - 1]))&lt;/code&gt;.</source>
          <target state="translated">Eval&amp;uacute;a a &lt;code&gt;AliasSeq!(F!(T[0]), F!(T[1]), ..., F!(T[$ - 1]))&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9629b284d8cc44b6dfe8df63c6a3f0d4084cc53c" translate="yes" xml:space="preserve">
          <source>Evaluating &lt;code&gt;doesPointTo(x, x)&lt;/code&gt; checks whether &lt;code&gt;x&lt;/code&gt; has internal pointers. This should only be done as an assertive test, as the language is free to assume objects don't have internal pointers (TDPL 7.1.3.5).</source>
          <target state="translated">La evaluaci&amp;oacute;n de &lt;code&gt;doesPointTo(x, x)&lt;/code&gt; verifica si &lt;code&gt;x&lt;/code&gt; tiene punteros internos. Esto solo debe hacerse como una prueba asertiva, ya que el lenguaje es libre de asumir que los objetos no tienen punteros internos (TDPL 7.1.3.5).</target>
        </trans-unit>
        <trans-unit id="0a4344337a70f4c33150fb408f68890c00d456e4" translate="yes" xml:space="preserve">
          <source>Evaluation is</source>
          <target state="translated">La evaluación es</target>
        </trans-unit>
        <trans-unit id="66a21e1a42d0f889ed11cc2d4d6f241490fc741c" translate="yes" xml:space="preserve">
          <source>Evaluation is short-circuited if a true result is encountered; the template predicate must be instantiable with one of the given items.</source>
          <target state="translated">La evaluación se cortocircuita si se encuentra un resultado verdadero;el predicado de la plantilla debe ser instantáneo con uno de los elementos dados.</target>
        </trans-unit>
        <trans-unit id="4d17d4bfeca546c47272dfcbb85f447b4b26bf12" translate="yes" xml:space="preserve">
          <source>Evaluation order of options is &lt;code&gt;rt_options&lt;/code&gt;, then environment variables, then command line arguments, i.e. if command line arguments are not disabled, they can override options specified through the environment or embedded in the executable.</source>
          <target state="translated">El orden de evaluaci&amp;oacute;n de las opciones es &lt;code&gt;rt_options&lt;/code&gt; , luego variables de entorno, luego argumentos de l&amp;iacute;nea de comando, es decir, si los argumentos de l&amp;iacute;nea de comando no est&amp;aacute;n deshabilitados, pueden anular las opciones especificadas a trav&amp;eacute;s del entorno o incrustadas en el ejecutable.</target>
        </trans-unit>
        <trans-unit id="180eef85054f4fcea96ca798ddcbe7751670c0c9" translate="yes" xml:space="preserve">
          <source>Evaluation value</source>
          <target state="translated">Valor de evaluación</target>
        </trans-unit>
        <trans-unit id="6f02f12a41e5810b607c7f2ac63bab107ad16369" translate="yes" xml:space="preserve">
          <source>Even if template arguments are implicitly converted to the same template parameter type, they still refer to the same instance. This example uses a &lt;a href=&quot;#aggregate_templates&quot;&gt;&lt;code&gt;struct&lt;/code&gt; template&lt;/a&gt;:</source>
          <target state="translated">Incluso si los argumentos de plantilla se convierten impl&amp;iacute;citamente al mismo tipo de par&amp;aacute;metro de plantilla, todav&amp;iacute;a se refieren a la misma instancia. Este ejemplo utiliza una &lt;a href=&quot;#aggregate_templates&quot;&gt;plantilla de &lt;/a&gt; &lt;code&gt;struct&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="becac2a7bbc3661ded85df34941db446bcb8fc99" translate="yes" xml:space="preserve">
          <source>Even permutations are useful for generating coordinates of certain geometric shapes. Here's a non-trivial example:</source>
          <target state="translated">Incluso las permutaciones son útiles para generar coordenadas de ciertas formas geométricas.Aquí hay un ejemplo no trivial:</target>
        </trans-unit>
        <trans-unit id="ff9e5997c4690a9137a05954ed088426938f9897" translate="yes" xml:space="preserve">
          <source>Even though &lt;code&gt;B.foo(int)&lt;/code&gt; is a better match than &lt;code&gt; A.foo(long)&lt;/code&gt; for &lt;code&gt;foo(1)&lt;/code&gt;, it is an error because the two matches are in different overload sets.</source>
          <target state="translated">Aunque &lt;code&gt;B.foo(int)&lt;/code&gt; es una mejor coincidencia que &lt;code&gt; A.foo(long)&lt;/code&gt; para &lt;code&gt;foo(1)&lt;/code&gt; , es un error porque las dos coincidencias est&amp;aacute;n en conjuntos de sobrecarga diferentes.</target>
        </trans-unit>
        <trans-unit id="1b34452177e48c546c9017df7b18cba01909144f" translate="yes" xml:space="preserve">
          <source>Even though a new scope is introduced, local symbol declarations cannot shadow (hide) other local symbol declarations in the same function.</source>
          <target state="translated">Aunque se introduce un nuevo ámbito de aplicación,las declaraciones de símbolos locales no pueden ensombrecer (ocultar)otras declaraciones de símbolos locales en la misma función.</target>
        </trans-unit>
        <trans-unit id="b53b461e5519dc40d2d9c94f0001bf7d1b8053d1" translate="yes" xml:space="preserve">
          <source>Even trivially sub-classing an exception involves writing boilerplate code for the constructor to: 1) correctly pass in the source file and line number the exception was thrown from; 2) be usable with &lt;a href=&quot;#enforce&quot;&gt;&lt;code&gt;enforce&lt;/code&gt;&lt;/a&gt; which expects exception constructors to take arguments in a fixed order. This mixin provides that boilerplate code.</source>
          <target state="translated">Incluso la subclasificaci&amp;oacute;n trivial de una excepci&amp;oacute;n implica escribir c&amp;oacute;digo repetitivo para que el constructor: 1) pase correctamente el archivo fuente y el n&amp;uacute;mero de l&amp;iacute;nea desde donde se lanz&amp;oacute; la excepci&amp;oacute;n; 2) ser utilizable con &lt;a href=&quot;#enforce&quot;&gt; &lt;code&gt;enforce&lt;/code&gt; ,&lt;/a&gt; que espera que los constructores de excepciones tomen argumentos en un orden fijo. Este mixin proporciona ese c&amp;oacute;digo repetitivo.</target>
        </trans-unit>
        <trans-unit id="646505488568f65dc2d08be5e7c3988051fbafd1" translate="yes" xml:space="preserve">
          <source>Even worse, good error handling code is itself error prone, tends to be the least tested (and therefore buggy) part of the project, and is frequently simply omitted. The end result is likely a &quot;blue screen of death&quot; as the program failed to deal with some unanticipated error.</source>
          <target state="translated">Aún peor,un buen código de manejo de errores es en sí mismo propenso a los errores,tiende a ser la parte menos probada (y por lo tanto,defectuosa)del proyecto,y con frecuencia simplemente se omite.El resultado final es probablemente una &quot;pantalla azul de la muerte&quot; ya que el programa no pudo manejar algún error imprevisto.</target>
        </trans-unit>
        <trans-unit id="fd3204ba4b70213492f01a9c5c68e7ab2ed1ff96" translate="yes" xml:space="preserve">
          <source>EvenChunks!Source &lt;strong id=&quot;evenChunks&quot;&gt;evenChunks&lt;/strong&gt;(Source)(Source source, size_t chunkCount)</source>
          <target state="translated">EvenChunks! Source &lt;strong id=&quot;evenChunks&quot;&gt;evenChunks&lt;/strong&gt; (Source) (Fuente de origen, size_t chunkCount)</target>
        </trans-unit>
        <trans-unit id="a4a0cc71be8cf518b622bbb5bc79c5bc5de1b789" translate="yes" xml:space="preserve">
          <source>Eventually, the attacker is able to determine the first character in the correct token because the sever takes slightly longer to return a rejection. This is due to the comparison moving on to second item in the two arrays, seeing they are different, and then sending the rejection.</source>
          <target state="translated">Eventualmente,el atacante es capaz de determinar el primer carácter en la ficha correcta porque el separador tarda un poco más en devolver un rechazo.Esto se debe a que la comparación pasa al segundo elemento de las dos matrices,al ver que son diferentes,y luego envía el rechazo.</target>
        </trans-unit>
        <trans-unit id="f00b8f841e4cef948de65d22226c93fa103650fa" translate="yes" xml:space="preserve">
          <source>Every data logged to this &lt;code&gt;MultiLogger&lt;/code&gt; will be distributed to all the &lt;code&gt;Logger&lt;/code&gt;s inserted into it. This &lt;code&gt;MultiLogger&lt;/code&gt; implementation can hold multiple &lt;code&gt;Logger&lt;/code&gt;s with the same name. If the method &lt;code&gt;removeLogger&lt;/code&gt; is used to remove a &lt;code&gt;Logger&lt;/code&gt; only the first occurrence with that name will be removed.</source>
          <target state="translated">Cada datos registrados a este &lt;code&gt;MultiLogger&lt;/code&gt; ser&amp;aacute;n distribuidos a todo el &lt;code&gt;Logger&lt;/code&gt; s insertado en &amp;eacute;l. Esta implementaci&amp;oacute;n de &lt;code&gt;MultiLogger&lt;/code&gt; puede contener m&amp;uacute;ltiples &lt;code&gt;Logger&lt;/code&gt; s con el mismo nombre. Si el m&amp;eacute;todo &lt;code&gt;removeLogger&lt;/code&gt; se usa para eliminar un &lt;code&gt;Logger&lt;/code&gt; solo se eliminar&amp;aacute; la primera aparici&amp;oacute;n con ese nombre.</target>
        </trans-unit>
        <trans-unit id="4e61dc390abff2fed88336a14c32d2472d4eb8ec" translate="yes" xml:space="preserve">
          <source>Every log message with a &lt;code&gt;LogLevel&lt;/code&gt; lower as the global &lt;code&gt;LogLevel&lt;/code&gt; will be discarded before it reaches &lt;code&gt;writeLogMessage&lt;/code&gt; method of any &lt;code&gt;Logger&lt;/code&gt;.</source>
          <target state="translated">Cada mensaje de registro con un &lt;code&gt;LogLevel&lt;/code&gt; m&amp;aacute;s bajo como &lt;code&gt;LogLevel&lt;/code&gt; global se descartar&amp;aacute; antes de que llegue &lt;code&gt;writeLogMessage&lt;/code&gt; m&amp;eacute;todo writeLogMessage de cualquier &lt;code&gt;Logger&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="299691262b0966820ccb1f9ef81cef23f22ecbaf" translate="yes" xml:space="preserve">
          <source>Every subclass of &lt;code&gt;Logger&lt;/code&gt; has to call this constructor from their constructor. It sets the &lt;code&gt;LogLevel&lt;/code&gt;, and creates a fatal handler. The fatal handler will throw an &lt;code&gt;Error&lt;/code&gt; if a log call is made with level &lt;code&gt;LogLevel.fatal&lt;/code&gt;.</source>
          <target state="translated">Cada subclase de &lt;code&gt;Logger&lt;/code&gt; tiene que llamar a este constructor desde su constructor. Establece &lt;code&gt;LogLevel&lt;/code&gt; y crea un controlador fatal. El controlador fatal arrojar&amp;aacute; un &lt;code&gt;Error&lt;/code&gt; si se realiza una llamada de registro con el nivel &lt;code&gt;LogLevel.fatal&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e6bc748f9fbc0549e63a017cd5636a311c15fde2" translate="yes" xml:space="preserve">
          <source>Every symbol, type, and expression has properties that can be queried:</source>
          <target state="translated">Cada símbolo,tipo y expresión tiene propiedades que pueden ser consultadas:</target>
        </trans-unit>
        <trans-unit id="b71e20220eb46bc48ab7853c8f64b255dfcc7b90" translate="yes" xml:space="preserve">
          <source>Exact Alias</source>
          <target state="translated">Alias exactos</target>
        </trans-unit>
        <trans-unit id="8659b6d121f9dcc98345ea85f4be6011035d4e4c" translate="yes" xml:space="preserve">
          <source>Exactly &lt;code&gt;n - 1&lt;/code&gt; comparisons are needed.</source>
          <target state="translated">Se necesitan exactamente &lt;code&gt;n - 1&lt;/code&gt; comparaciones.</target>
        </trans-unit>
        <trans-unit id="447595f030e16a9c11484fc6f4099975f890557c" translate="yes" xml:space="preserve">
          <source>Examine function signature for parameter p and see if the value of p can 'escape' the scope of the function. This is useful to minimize the needed annotations for the parameters.</source>
          <target state="translated">Examinar la firma de la función para el parámetro p y ver si el valor de p puede &quot;escapar&quot; del alcance de la función.Esto es útil para minimizar las anotaciones necesarias para los parámetros.</target>
        </trans-unit>
        <trans-unit id="0f01ed56a1e32a05e5ef96e4d779f34784af9a96" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Example</target>
        </trans-unit>
        <trans-unit id="3a8d7c39720f8b36996668ba6047e485a42fa9dc" translate="yes" xml:space="preserve">
          <source>Example for reading an existing zip archive:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c98a62db0de4db40cb83954f78ce2a6a8b61f57" translate="yes" xml:space="preserve">
          <source>Example for writing files into a zip archive:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c57552c19fd7d2da63a30f68727e3bb36eb45b21" translate="yes" xml:space="preserve">
          <source>Example from &quot;Introduction to Algorithms&quot; Cormen et al, p 146</source>
          <target state="translated">Ejemplo de &quot;Introducción a los algoritmos&quot; Cormen et al,p 146</target>
        </trans-unit>
        <trans-unit id="71d13cfc872d9ac46d96e5966fcea949405ebbc4" translate="yes" xml:space="preserve">
          <source>Example of a simple program printing its stack trace</source>
          <target state="translated">Ejemplo de un simple programa que imprime su rastro de pila</target>
        </trans-unit>
        <trans-unit id="529363f48295f0e991d2c61b1b24a9fe1aecfa01" translate="yes" xml:space="preserve">
          <source>Example predicate that compares individual elements in reverse lexical order</source>
          <target state="translated">Ejemplo de predicado que compara elementos individuales en orden léxico inverso</target>
        </trans-unit>
        <trans-unit id="5ab7721397827b925456d2a147cb5704105a62a7" translate="yes" xml:space="preserve">
          <source>Example usage:</source>
          <target state="translated">Ejemplo de uso:</target>
        </trans-unit>
        <trans-unit id="3ac96cc54ccaf408a3aa9265ec618b7d8d9688f3" translate="yes" xml:space="preserve">
          <source>Example using a custom predicate. Note that the needle appears as the second argument of the predicate.</source>
          <target state="translated">Ejemplo utilizando un predicado personalizado.Observe que la aguja aparece como el segundo argumento del predicado.</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="7c5d41ac96fe781891640f2cc6ae31d7dac093fe" translate="yes" xml:space="preserve">
          <source>Example: in the expression &lt;code&gt;((f() * 2 &amp;amp;&amp;amp; g()) + 1) || h()&lt;/code&gt;, the smallest short-circuit expression of the subexpression &lt;code&gt;f() * 2&lt;/code&gt; is &lt;code&gt;f() * 2 &amp;amp;&amp;amp; g()&lt;/code&gt;. In the expression &lt;code&gt;(f() &amp;amp;&amp;amp; g()) + h()&lt;/code&gt;, the subexpression &lt;code&gt;h()&lt;/code&gt; has no smallest short-circuit expression.</source>
          <target state="translated">Ejemplo: en la expresi&amp;oacute;n &lt;code&gt;((f() * 2 &amp;amp;&amp;amp; g()) + 1) || h()&lt;/code&gt; , la expresi&amp;oacute;n de cortocircuito m&amp;aacute;s peque&amp;ntilde;a de la subexpresi&amp;oacute;n &lt;code&gt;f() * 2&lt;/code&gt; es &lt;code&gt;f() * 2 &amp;amp;&amp;amp; g()&lt;/code&gt; . En la expresi&amp;oacute;n &lt;code&gt;(f() &amp;amp;&amp;amp; g()) + h()&lt;/code&gt; , la subexpresi&amp;oacute;n &lt;code&gt;h()&lt;/code&gt; no tiene la menor expresi&amp;oacute;n de cortocircuito.</target>
        </trans-unit>
        <trans-unit id="3b6e410f2f289a8e54fbc074511ef251ffbf64e5" translate="yes" xml:space="preserve">
          <source>Example: in the statement &lt;code&gt;return f() + g() * 2;&lt;/code&gt;, the full expression of &lt;code&gt;g() * 2&lt;/code&gt; is &lt;code&gt;f() + g() * 2&lt;/code&gt;, but not the full expression of &lt;code&gt;f() + g()&lt;/code&gt; because the latter is not parsed as a subexpression.</source>
          <target state="translated">Ejemplo: en la instrucci&amp;oacute;n &lt;code&gt;return f() + g() * 2;&lt;/code&gt; , la expresi&amp;oacute;n completa de &lt;code&gt;g() * 2&lt;/code&gt; es &lt;code&gt;f() + g() * 2&lt;/code&gt; , pero no la expresi&amp;oacute;n completa de &lt;code&gt;f() + g()&lt;/code&gt; porque este &amp;uacute;ltimo no se analiza como una subexpresi&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="fb3447b632f6a431215776dcf254a01001a40c4f" translate="yes" xml:space="preserve">
          <source>Examples:</source>
          <target state="translated">Examples:</target>
        </trans-unit>
        <trans-unit id="2b57735b929f758540f6f204a80a85ed5455f140" translate="yes" xml:space="preserve">
          <source>Exception Flags</source>
          <target state="translated">Banderas de excepción</target>
        </trans-unit>
        <trans-unit id="20788aa11834509830be30396b88f6404f087e8c" translate="yes" xml:space="preserve">
          <source>Exception Handling</source>
          <target state="translated">Manejo de excepciones</target>
        </trans-unit>
        <trans-unit id="8e3da5af2290e454a8dda9f1e0d4340536bda871" translate="yes" xml:space="preserve">
          <source>Exception allocation, cloning, and release compiler support routines.</source>
          <target state="translated">Rutinas de soporte de asignación de excepciones,clonación y liberación de compiladores.</target>
        </trans-unit>
        <trans-unit id="fffb66a488035e580bbe4d9dfb0563a4cf976029" translate="yes" xml:space="preserve">
          <source>Exception containing the row and column for when an exception was thrown.</source>
          <target state="translated">Excepción que contiene la fila y la columna para cuando se lanzó una excepción.</target>
        </trans-unit>
        <trans-unit id="04ccd57adc7199b9320005b31e59d240c692ae76" translate="yes" xml:space="preserve">
          <source>Exception handling is done with the try-catch-finally statement.</source>
          <target state="translated">El manejo de excepciones se hace con la declaración de prueba y captura final.</target>
        </trans-unit>
        <trans-unit id="5dd8fbbbac9a5ffa8a85c3407866002bfd2a943a" translate="yes" xml:space="preserve">
          <source>Exception handling is supported. Evaluates to &lt;code&gt;false&lt;/code&gt; when compiling with command line switch &lt;a href=&quot;https://dlang.org/dmd.html#switch-betterC&quot;&gt;&lt;em&gt;-betterC&lt;/em&gt;&lt;/a&gt;</source>
          <target state="translated">Se admite el manejo de excepciones. Eval&amp;uacute;a a &lt;code&gt;false&lt;/code&gt; al compilar con el &lt;a href=&quot;https://dlang.org/dmd.html#switch-betterC&quot;&gt;&lt;em&gt;modificador de&lt;/em&gt;&lt;/a&gt; l&amp;iacute;nea de comando &lt;em&gt;-betterC&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7977347a7a7188c09ab63d88a93b935cd78760c4" translate="yes" xml:space="preserve">
          <source>Exception handling method</source>
          <target state="translated">Método de manejo de excepciones</target>
        </trans-unit>
        <trans-unit id="989c0eb85b5a41ecfef7a4557f1cdced37ec6bb0" translate="yes" xml:space="preserve">
          <source>Exception handling stack unwinding is a relatively slow process.</source>
          <target state="translated">El desenrollado de la pila de manipulación de excepciones es un proceso relativamente lento.</target>
        </trans-unit>
        <trans-unit id="d5701a5b5f69ab1f2d7097d5d051b3d32981e410" translate="yes" xml:space="preserve">
          <source>Exception handling support for Dwarf-style portable exceptions.</source>
          <target state="translated">Soporte de manejo de excepciones para las excepciones portátiles de estilo enano.</target>
        </trans-unit>
        <trans-unit id="9829d9ff9d8698ea752a98d4a92c4ea756a83270" translate="yes" xml:space="preserve">
          <source>Exception if it fails.</source>
          <target state="translated">Excepción si falla.</target>
        </trans-unit>
        <trans-unit id="a3fa8f21629b3a2bb2c1e659bd0f396554feda8e" translate="yes" xml:space="preserve">
          <source>Exception if there is an error while parsing the given XML.</source>
          <target state="translated">Excepción si hay un error al analizar el XML dado.</target>
        </trans-unit>
        <trans-unit id="04d466ab829f02b64659284da536680cd0cead15" translate="yes" xml:space="preserve">
          <source>Exception interoperability is a work in progress.</source>
          <target state="translated">La interoperabilidad de excepción es un trabajo en progreso.</target>
        </trans-unit>
        <trans-unit id="ac3a987430d7002abc0aeb021e7b76ae195d4418" translate="yes" xml:space="preserve">
          <source>Exception object thrown in case of errors during regex compilation.</source>
          <target state="translated">Objeto de excepción lanzado en caso de errores durante la compilación de regex.</target>
        </trans-unit>
        <trans-unit id="d3b36ed4e90f7895ab9c1f841d81e354fcc19912" translate="yes" xml:space="preserve">
          <source>Exception thrown for file I/O errors.</source>
          <target state="translated">Excepción lanzada por errores de E/S de archivo.</target>
        </trans-unit>
        <trans-unit id="cb3e9f844a01a0b96967f3dd6a290735d00840ed" translate="yes" xml:space="preserve">
          <source>Exception thrown on HTTP request failures, e.g. 404 Not Found.</source>
          <target state="translated">Excepción lanzada en fallos de peticiones HTTP,por ejemplo,404 Not Found.</target>
        </trans-unit>
        <trans-unit id="bfe22b35920246b957f97d99d530bac8696b368e" translate="yes" xml:space="preserve">
          <source>Exception thrown on JSON errors</source>
          <target state="translated">Excepción lanzada sobre los errores de JSON</target>
        </trans-unit>
        <trans-unit id="a84a6e62adad93da512146dbeb0d45a3dc267b49" translate="yes" xml:space="preserve">
          <source>Exception thrown on errors in std.net.curl functions.</source>
          <target state="translated">Excepción lanzada por errores en las funciones de std.net.curl.</target>
        </trans-unit>
        <trans-unit id="253a6febbe3430c64130d06fa5981a03478c1db8" translate="yes" xml:space="preserve">
          <source>Exception thrown on errors in std.string functions.</source>
          <target state="translated">Excepción lanzada por errores en las funciones de cadena estándar.</target>
        </trans-unit>
        <trans-unit id="da2cac7a810249d2d11cee22b4057ecee00f3eee" translate="yes" xml:space="preserve">
          <source>Exception thrown on errors in std.utf functions.</source>
          <target state="translated">Excepción lanzada por errores en las funciones std.utf.</target>
        </trans-unit>
        <trans-unit id="8b5a2ac6072f2d36ac52160e487df22a74f63da3" translate="yes" xml:space="preserve">
          <source>Exception thrown on timeout errors in std.net.curl functions.</source>
          <target state="translated">Excepción lanzada en los errores de tiempo de espera en las funciones de std.net.curl.</target>
        </trans-unit>
        <trans-unit id="5a4bbb2d3d63ddeb86708dd8ce427adf6b7d165d" translate="yes" xml:space="preserve">
          <source>Exception thrown under different conditions based on the type of &lt;code&gt; Contents&lt;/code&gt;.</source>
          <target state="translated">Excepci&amp;oacute;n lanzada bajo diferentes condiciones seg&amp;uacute;n el tipo de &lt;code&gt; Contents&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0b352a0dfd2cdf2adffdd6d799e3b32a8a9e3145" translate="yes" xml:space="preserve">
          <source>Exception thrown upon encountering Base64 encoding or decoding errors.</source>
          <target state="translated">Excepción lanzada al encontrar errores de codificación o decodificación de la Base64.</target>
        </trans-unit>
        <trans-unit id="66069ad3e21b6e2e8b6ef96e5b841bffb3ffeb38" translate="yes" xml:space="preserve">
          <source>Exception thrown when a Token is identified to not be completed: a quote is found in an unquoted field, data continues after a closing quote, or the quoted field was not closed before data was empty.</source>
          <target state="translated">Excepción lanzada cuando se identifica una Ficha para no ser completada:una cita se encuentra en un campo no cotizado,los datos continúan después de una cita de cierre,o el campo cotizado no fue cerrado antes de que los datos estuvieran vacíos.</target>
        </trans-unit>
        <trans-unit id="905fb856166761ef9b7e30ba12340557f71b5efe" translate="yes" xml:space="preserve">
          <source>Exception type thrown upon any failure.</source>
          <target state="translated">Tipo de excepción lanzada sobre cualquier fallo.</target>
        </trans-unit>
        <trans-unit id="f1d0d4844845d6b370b77234d0e77115c51b19af" translate="yes" xml:space="preserve">
          <source>Exception type to throw if the value evaluates to false.</source>
          <target state="translated">Tipo de excepción para lanzar si el valor se evalúa como falso.</target>
        </trans-unit>
        <trans-unit id="f928a890db6dee56e7f09963fd1b5750c95236a4" translate="yes" xml:space="preserve">
          <source>Exception type used by core.time.</source>
          <target state="translated">Tipo de excepción utilizado por core.time.</target>
        </trans-unit>
        <trans-unit id="653b9fe3f50eddc9f59c435dd81774a198a4bfb2" translate="yes" xml:space="preserve">
          <source>Exception type used by std.datetime. It's an alias to &lt;a href=&quot;core_time#TimeException&quot;&gt;&lt;code&gt;core.time.TimeException&lt;/code&gt;&lt;/a&gt;. Either can be caught without concern about which module it came from.</source>
          <target state="translated">Tipo de excepci&amp;oacute;n utilizada por std.datetime. Es un alias de &lt;a href=&quot;core_time#TimeException&quot;&gt; &lt;code&gt;core.time.TimeException&lt;/code&gt; &lt;/a&gt; . Cualquiera de los dos puede ser atrapado sin preocuparse de qu&amp;eacute; m&amp;oacute;dulo proviene.</target>
        </trans-unit>
        <trans-unit id="15839feb51f6c7eb57eb20c2122df74004e3811b" translate="yes" xml:space="preserve">
          <source>ExceptionHeader to free</source>
          <target state="translated">ExceptionHeader para liberar</target>
        </trans-unit>
        <trans-unit id="668deca20711f80b1c2101115452f3a6ad56520b" translate="yes" xml:space="preserve">
          <source>ExceptionHeader* &lt;code&gt;eh&lt;/code&gt;</source>
          <target state="translated">ExceptionHeader * &lt;code&gt;eh&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cd3dfbe79fda3a9d92de67b1bd4f1dc9f60ab723" translate="yes" xml:space="preserve">
          <source>Exceptions</source>
          <target state="translated">Exceptions</target>
        </trans-unit>
        <trans-unit id="787a8beff59b551fcef4298de1a9187c800df51d" translate="yes" xml:space="preserve">
          <source>Exchange &lt;code&gt;exchangeWith&lt;/code&gt; with the memory referenced by &lt;code&gt;here&lt;/code&gt;. This operation is both lock-free and atomic.</source>
          <target state="translated">Exchange &lt;code&gt;exchangeWith&lt;/code&gt; con la memoria referenciada &lt;code&gt;here&lt;/code&gt; . Esta operaci&amp;oacute;n es a la vez sin bloqueo y at&amp;oacute;mica.</target>
        </trans-unit>
        <trans-unit id="947665622c6a0247540f1769e4059f113b774915" translate="yes" xml:space="preserve">
          <source>Execute and wait for completion, collect output</source>
          <target state="translated">Ejecutar y esperar a que se complete,recoger la producción</target>
        </trans-unit>
        <trans-unit id="9c247b36eae520ff5acf986006d217ce9ca4609a" translate="yes" xml:space="preserve">
          <source>Execute any unittests present. For each that fails, print the stack trace and continue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bf71057cfbf7879eaf07dde87aff1966a094423" translate="yes" xml:space="preserve">
          <source>Executed expressions may not reference any global or local static variables.</source>
          <target state="translated">Las expresiones ejecutadas no pueden hacer referencia a ninguna variable estática global o local.</target>
        </trans-unit>
        <trans-unit id="6f05efa3a0f330761f283964056bd4c437269064" translate="yes" xml:space="preserve">
          <source>Executes and returns one of a collection of handlers based on the type of the switch object.</source>
          <target state="translated">Ejecuta y devuelve uno de una colección de manejadores basados en el tipo de objeto del interruptor.</target>
        </trans-unit>
        <trans-unit id="b2e599dd9da60b7076bf647f704ce6535a25f893" translate="yes" xml:space="preserve">
          <source>Executes the given program or shell command and returns its exit code and output.</source>
          <target state="translated">Ejecuta el programa o comando de shell dado y devuelve su código de salida y su salida.</target>
        </trans-unit>
        <trans-unit id="67781825ef8399fa41b8bb55aee1e69bf3a817d6" translate="yes" xml:space="preserve">
          <source>Executes the supplied function in a new logical thread represented by &lt;code&gt;Tid&lt;/code&gt;. The calling thread is designated as the owner of the new thread. When the owner thread terminates an &lt;code&gt;OwnerTerminated&lt;/code&gt; message will be sent to the new thread, causing an &lt;code&gt;OwnerTerminated&lt;/code&gt; exception to be thrown on &lt;code&gt;receive()&lt;/code&gt;.</source>
          <target state="translated">Ejecuta la funci&amp;oacute;n proporcionada en un nuevo hilo l&amp;oacute;gico representado por &lt;code&gt;Tid&lt;/code&gt; . El hilo de llamada se designa como el propietario del nuevo hilo. Cuando el subproceso de propietario finaliza, se &lt;code&gt;OwnerTerminated&lt;/code&gt; un mensaje de Terminaci&amp;oacute;n de propietario al nuevo subproceso, lo que provoca que se &lt;code&gt;OwnerTerminated&lt;/code&gt; una excepci&amp;oacute;n de Terminaci&amp;oacute;n de propietario al &lt;code&gt;receive()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="89a3e381c5ed655eb3aa0b9b587d8ce12bdc9bba" translate="yes" xml:space="preserve">
          <source>Executes the supplied function in a new logical thread represented by Tid. This new thread is linked to the calling thread so that if either it or the calling thread terminates a LinkTerminated message will be sent to the other, causing a LinkTerminated exception to be thrown on receive(). The owner relationship from spawn() is preserved as well, so if the link between threads is broken, owner termination will still result in an OwnerTerminated exception to be thrown on receive().</source>
          <target state="translated">Ejecuta la función suministrada en un nuevo hilo lógico representado por Tid.Este nuevo hilo está enlazado con el hilo de llamada de forma que si éste o el hilo de llamada termina un mensaje LinkTerminado será enviado al otro,causando que una excepción LinkTerminado sea lanzada al recibir().La relación de propietario de spawn()también se conserva,de modo que si el vínculo entre los hilos se rompe,la terminación del propietario seguirá dando lugar a que se lance una excepción OwnerTerminated en receive().</target>
        </trans-unit>
        <trans-unit id="9a3ee996ad5df75a0a1bb42a960cc73553d41928" translate="yes" xml:space="preserve">
          <source>Executing functions via CTFE can take considerably longer than executing it at run time. If the function goes into an infinite loop, it will hang at compile time (rather than hanging at run time).</source>
          <target state="translated">La ejecución de funciones a través de la CTFE puede llevar mucho más tiempo que la ejecución en tiempo de ejecución.Si la función entra en un bucle infinito,se colgará en tiempo de compilación (en lugar de colgarse en tiempo de ejecución).</target>
        </trans-unit>
        <trans-unit id="b3ad6d830cba01933bdd4eadf0962b5afcdb48bf" translate="yes" xml:space="preserve">
          <source>Execution of a single thread on thread-local and immutable memory locations is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b3292962bd3ae1aa2ceee38161b97042acb69b4" translate="yes" xml:space="preserve">
          <source>Expand alias this tuples.</source>
          <target state="translated">Expande el alias de esta tupla.</target>
        </trans-unit>
        <trans-unit id="dfc518ef6c3dabb73461eac4a36f80d62e55ffe4" translate="yes" xml:space="preserve">
          <source>Expand any response files in command line. Response files are arguments that look like: @NAME The name is first searched for in the environment. If it is not there, it is searched for as a file name. Arguments are separated by spaces, tabs, or newlines. These can be imbedded within arguments by enclosing the argument in '' or &quot;&quot;. Recursively expands nested response files.</source>
          <target state="translated">Expanda cualquier archivo de respuesta en la línea de comando.Los archivos de respuesta son argumentos que parecen:@NOMBRE El nombre se busca primero en el entorno.Si no está ahí,se busca como un nombre de archivo.Los argumentos están separados por espacios,tabulaciones o nuevas líneas.Estos pueden ser incrustados dentro de los argumentos encerrando el argumento en '' o &quot;&quot;.Expande recurrentemente los archivos de respuesta anidados.</target>
        </trans-unit>
        <trans-unit id="39c5e7d251d329155aba4b991a2b7a09613fc576" translate="yes" xml:space="preserve">
          <source>Expand tuples.</source>
          <target state="translated">Expande las tuplas.</target>
        </trans-unit>
        <trans-unit id="308231a343f14ac3d5860b3570b1a37c81713ba1" translate="yes" xml:space="preserve">
          <source>Expanded Data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3ed1860547be833e11502cb37798024cc995fdb" translate="yes" xml:space="preserve">
          <source>Expands &lt;code&gt;b&lt;/code&gt; by &lt;code&gt;delta&lt;/code&gt; bytes. If &lt;code&gt;delta == 0&lt;/code&gt;, succeeds without changing &lt;code&gt;b&lt;/code&gt;. If &lt;code&gt;b is null&lt;/code&gt;, returns &lt;code&gt;false&lt;/code&gt; (the null pointer cannot be expanded in place). Otherwise, &lt;code&gt;b&lt;/code&gt; must be a buffer previously allocated with the same allocator. If expansion was successful, &lt;code&gt;expand&lt;/code&gt; changes &lt;code&gt;b&lt;/code&gt;'s length to &lt;code&gt;b.length + delta&lt;/code&gt; and returns &lt;code&gt;true&lt;/code&gt;. Upon failure, the call effects no change upon the allocator object, leaves &lt;code&gt;b&lt;/code&gt; unchanged, and returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">Expande &lt;code&gt;b&lt;/code&gt; por bytes &lt;code&gt;delta&lt;/code&gt; . Si &lt;code&gt;delta == 0&lt;/code&gt; , tiene &amp;eacute;xito sin cambiar &lt;code&gt;b&lt;/code&gt; . Si &lt;code&gt;b is null&lt;/code&gt; , devuelve &lt;code&gt;false&lt;/code&gt; (el puntero nulo no se puede expandir en su lugar). De lo contrario, &lt;code&gt;b&lt;/code&gt; debe ser un b&amp;uacute;fer previamente asignado con el mismo asignador. Si la expansi&amp;oacute;n fue exitosa, &lt;code&gt;expand&lt;/code&gt; cambios &lt;code&gt;b&lt;/code&gt; longitud 's para &lt;code&gt;b.length + delta&lt;/code&gt; y vuelve &lt;code&gt;true&lt;/code&gt; . En caso de fallo, la llamada no produce cambios en el objeto asignador, deja &lt;code&gt;b&lt;/code&gt; sin cambios y devuelve &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d2b86b700bfa590be9e2b589c48ee8ac8959eaae" translate="yes" xml:space="preserve">
          <source>Expands a memory block in place and returns &lt;code&gt;true&lt;/code&gt; if successful. Implementations that don't support this primitive should always return &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">Expande un bloque de memoria en su lugar y devuelve &lt;code&gt;true&lt;/code&gt; si tiene &amp;eacute;xito. Las implementaciones que no admiten esta primitiva siempre deben devolver &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b262eee9273f1fc433f6691461d187672e0c5b45" translate="yes" xml:space="preserve">
          <source>Expands an allocated block in place. Expansion will succeed only if the block is the last allocated.</source>
          <target state="translated">Expande un bloque asignado en su lugar.La expansión sólo tendrá éxito si el bloque es el último asignado.</target>
        </trans-unit>
        <trans-unit id="626d5a99aecb87499fb1f3a504d6e69914d2e4c6" translate="yes" xml:space="preserve">
          <source>Expands an allocated block in place. Expansion will succeed only if the block is the last allocated. Defined only if &lt;code&gt;growDownwards&lt;/code&gt; is &lt;code&gt;No.growDownwards&lt;/code&gt;.</source>
          <target state="translated">Expande un bloque asignado en su lugar. La expansi&amp;oacute;n tendr&amp;aacute; &amp;eacute;xito solo si el bloque es el &amp;uacute;ltimo asignado. Definido solo si &lt;code&gt;growDownwards&lt;/code&gt; es &lt;code&gt;No.growDownwards&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cb2e7f8c65f285e69f36d6abb516fbfe712839e3" translate="yes" xml:space="preserve">
          <source>Expands attribute declarations in members in depth first order. Calls dg(size_t symidx, Dsymbol *sym) for each member. If dg returns !=0, stops and returns that value else returns 0. Use this function to avoid the O(N + N^2/2) complexity of calculating dim and calling N times getNth.</source>
          <target state="translated">Amplía las declaraciones de atributos en los miembros en profundidad de primer orden.Llama a dg(size_t symidx,Dsymbol *sym)para cada miembro.Si dg devuelve !=0,se detiene y devuelve ese valor,si no,devuelve 0.Usa esta función para evitar la complejidad O(N+N^2/2)de calcular dim y llamar N veces getNth.</target>
        </trans-unit>
        <trans-unit id="084a0336b3e0fa1cfbc75a4e2da9be624da8ae6d" translate="yes" xml:space="preserve">
          <source>Expands in place a buffer previously allocated by &lt;code&gt;BitmappedBlock&lt;/code&gt;. If instantiated with &lt;code&gt;No.multiblock&lt;/code&gt;, the expansion fails if the new length exceeds &lt;code&gt;theBlockSize&lt;/code&gt;.</source>
          <target state="translated">Expande en su lugar un b&amp;uacute;fer previamente asignado por &lt;code&gt;BitmappedBlock&lt;/code&gt; . Si se &lt;code&gt;No.multiblock&lt;/code&gt; instancia con No.multiblock , la expansi&amp;oacute;n falla si la nueva longitud excede el &lt;code&gt;theBlockSize&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="797c11627b7043dd4bdb15c59a63cf420baa3b9d" translate="yes" xml:space="preserve">
          <source>Expands in place a buffer previously allocated by &lt;code&gt;SharedBitmappedBlock&lt;/code&gt;. Expansion fails if the new length exceeds the block size.</source>
          <target state="translated">Expande en su lugar un b&amp;uacute;fer previamente asignado por &lt;code&gt;SharedBitmappedBlock&lt;/code&gt; . La expansi&amp;oacute;n falla si la nueva longitud excede el tama&amp;ntilde;o del bloque.</target>
        </trans-unit>
        <trans-unit id="34de05ada292b06170f1d6656265bf476c629815" translate="yes" xml:space="preserve">
          <source>Expands or shrinks allocated block to an allocated size of &lt;code&gt; goodAllocSize(s)&lt;/code&gt;. Expansion occurs in place under the conditions required by &lt;code&gt;expand&lt;/code&gt;. Shrinking occurs in place if &lt;code&gt;goodAllocSize(b.length) == goodAllocSize(s)&lt;/code&gt;.</source>
          <target state="translated">Expande o reduce el bloque asignado a un tama&amp;ntilde;o asignado de &lt;code&gt; goodAllocSize(s)&lt;/code&gt; . La expansi&amp;oacute;n ocurre en el lugar bajo las condiciones requeridas por la &lt;code&gt;expand&lt;/code&gt; . La contracci&amp;oacute;n ocurre en su lugar si &lt;code&gt;goodAllocSize(b.length) == goodAllocSize(s)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3ede9dbe92d17709e10217ef41b4cbf32ac479af" translate="yes" xml:space="preserve">
          <source>Expands the interval backwards in time. Effectively, it does &lt;code&gt;begin -= duration&lt;/code&gt;.</source>
          <target state="translated">Expande el intervalo hacia atr&amp;aacute;s en el tiempo. Efectivamente, &lt;code&gt;begin -= duration&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b57a74d337ac5a259427e1f3ea04c84032512812" translate="yes" xml:space="preserve">
          <source>Expands the interval forwards and/or backwards in time. Effectively, it adds the given number of months/years to end.</source>
          <target state="translated">Expande el intervalo hacia adelante y/o hacia atrás en el tiempo.Efectivamente,añade el número dado de meses/años para terminar.</target>
        </trans-unit>
        <trans-unit id="e16a1c93e572148be3e3c1e14d575c1803a317a6" translate="yes" xml:space="preserve">
          <source>Expands the interval forwards and/or backwards in time. Effectively, it does &lt;code&gt;begin -= duration&lt;/code&gt; and/or &lt;code&gt;end += duration&lt;/code&gt;. Whether it expands forwards and/or backwards in time is determined by dir.</source>
          <target state="translated">Expande el intervalo hacia adelante y / o hacia atr&amp;aacute;s en el tiempo. Efectivamente, &lt;code&gt;begin -= duration&lt;/code&gt; y / o &lt;code&gt;end += duration&lt;/code&gt; . El directorio determina si se expande hacia adelante y / o hacia atr&amp;aacute;s en el tiempo.</target>
        </trans-unit>
        <trans-unit id="6115ade81a85a7f10953103eafa7ac7f27f7341b" translate="yes" xml:space="preserve">
          <source>Expands the interval forwards and/or backwards in time. Effectively, it subtracts the given number of months/years from &lt;code&gt;begin&lt;/code&gt; and adds them to &lt;code&gt;end&lt;/code&gt;. Whether it expands forwards and/or backwards in time is determined by dir.</source>
          <target state="translated">Expande el intervalo hacia adelante y / o hacia atr&amp;aacute;s en el tiempo. Efectivamente, resta el n&amp;uacute;mero dado de meses / a&amp;ntilde;os desde el &lt;code&gt;begin&lt;/code&gt; y los agrega hasta el &lt;code&gt;end&lt;/code&gt; . El directorio determina si se expande hacia adelante y / o hacia atr&amp;aacute;s en el tiempo.</target>
        </trans-unit>
        <trans-unit id="8f900e50b202dc7b5f34257efaca3c038012cd3e" translate="yes" xml:space="preserve">
          <source>Expands the interval forwards and/or backwards in time. Effectively, it subtracts the given number of months/years from &lt;code&gt;begin&lt;/code&gt;.</source>
          <target state="translated">Expande el intervalo hacia adelante y / o hacia atr&amp;aacute;s en el tiempo. Efectivamente, resta el n&amp;uacute;mero dado de meses / a&amp;ntilde;os desde el &lt;code&gt;begin&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="316269b9bcff090b5279a8dfef454d19bf6429c9" translate="yes" xml:space="preserve">
          <source>Expands the interval forwards in time. Effectively, it does &lt;code&gt;end += duration&lt;/code&gt;.</source>
          <target state="translated">Expande el intervalo hacia adelante en el tiempo. Efectivamente, &lt;code&gt;end += duration&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fc5691de73841ad488b58382733ae62e16cc0fbb" translate="yes" xml:space="preserve">
          <source>Expands to a named anchor used for hyperlinking to a particular declaration section. Argument &amp;amp;dollar;1 expands to the qualified declaration name.</source>
          <target state="translated">Se expande a un ancla con nombre utilizada para hiperv&amp;iacute;nculos a una secci&amp;oacute;n de declaraci&amp;oacute;n particular. Argumento &amp;amp; d&amp;oacute;lar; 1 se expande al nombre de declaraci&amp;oacute;n calificado.</target>
        </trans-unit>
        <trans-unit id="076b445912ca06b9147fd4ce226d6bbff02a82c5" translate="yes" xml:space="preserve">
          <source>Expands tuples in args in depth first order. Calls dg(void *ctx, size_t argidx, Parameter *arg) for each Parameter. If dg returns !=0, stops and returns that value else returns 0. Use this function to avoid the O(N + N^2/2) complexity of calculating dim and calling N times getNth.</source>
          <target state="translated">Expande las tuplas en los arcos en profundidad en primer orden.Llama dg(void *ctx,size_t argidx,Parameter *arg)para cada parámetro.Si dg devuelve !=0,se detiene y devuelve ese valor,si no,devuelve 0.Usa esta función para evitar la complejidad O(N+N^2/2)de calcular dim y llamar N veces getNth.</target>
        </trans-unit>
        <trans-unit id="bcedc51cce47a902790753d67bea2312fe893839" translate="yes" xml:space="preserve">
          <source>Experienced FORTRAN numerics programmers know that multidimensional &quot;rectangular&quot; arrays for things like matrix operations are much faster than trying to access them via pointers to pointers resulting from &quot;array of pointers to array&quot; semantics. For example, the D syntax:</source>
          <target state="translated">Los programadores numéricos experimentados de FORTRAN saben que las matrices &quot;rectangulares&quot; multidimensionales para cosas como operaciones de matrices son mucho más rápidas que tratar de acceder a ellas a través de punteros a punteros resultantes de la semántica de &quot;matriz de punteros a matriz&quot;.Por ejemplo,la sintaxis D:</target>
        </trans-unit>
        <trans-unit id="06490b0b5dc2e6f349a0c0ddde37643f5a5ac75c" translate="yes" xml:space="preserve">
          <source>Experimental network access via the File interface</source>
          <target state="translated">Acceso a la red experimental a través de la interfaz de archivos</target>
        </trans-unit>
        <trans-unit id="15a7ffb04c4605a09649beb118c20c17de19ede4" translate="yes" xml:space="preserve">
          <source>Explains the return value of the function. If the function returns &lt;b&gt;void&lt;/b&gt;, don't redundantly document it.</source>
          <target state="translated">Explica el valor de retorno de la funci&amp;oacute;n. Si la funci&amp;oacute;n devuelve &lt;b&gt;nula&lt;/b&gt; , no la documente de forma redundante.</target>
        </trans-unit>
        <trans-unit id="08c2201d6cdd5e0c73a89bc468a1c568ad04f452" translate="yes" xml:space="preserve">
          <source>Explicit Instantiation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20774c9957e71e2e463d16df16c4cfff77b34323" translate="yes" xml:space="preserve">
          <source>Explicit Template Instantiation</source>
          <target state="translated">Instanciación de plantillas explícitas</target>
        </trans-unit>
        <trans-unit id="fbaa54eaab210a4cb9cfc7d9c1378fcdc2b85e52" translate="yes" xml:space="preserve">
          <source>Explicit cast to bool. Useful as a shorthand for !(x.empty) in if and assert statements.</source>
          <target state="translated">Explícita de la escayola.Útil como abreviatura de !(x.empty)en si y afirmaciones.</target>
        </trans-unit>
        <trans-unit id="3d8f05eb6d48b04794152e7b23638cae9f48f278" translate="yes" xml:space="preserve">
          <source>Explicit suffixes</source>
          <target state="translated">Sufijos explícitos</target>
        </trans-unit>
        <trans-unit id="a78d73b55b840cefe1a0a0daca2e42e60edecac9" translate="yes" xml:space="preserve">
          <source>Exponentiation &amp;amp; Logarithms</source>
          <target state="translated">Exponenciaci&amp;oacute;n y logaritmos</target>
        </trans-unit>
        <trans-unit id="1cd8e8a364673d3411b700d793c596d01bc2b145" translate="yes" xml:space="preserve">
          <source>Exposes the given root Array as a standard D array.</source>
          <target state="translated">Expone la matriz raíz dada como una matriz D estándar.</target>
        </trans-unit>
        <trans-unit id="97b695b9b9cfde3612c21b3add972cc0f21f4e26" translate="yes" xml:space="preserve">
          <source>Expression</source>
          <target state="translated">Expression</target>
        </trans-unit>
        <trans-unit id="124e31831c2789749ceb9147facc91550d3ce84a" translate="yes" xml:space="preserve">
          <source>Expression &lt;code&gt;arg&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;arg&lt;/code&gt; expresi&amp;oacute;n</target>
        </trans-unit>
        <trans-unit id="92b421f69102c781d75346243b5587cc88f90fb6" translate="yes" xml:space="preserve">
          <source>Expression &lt;code&gt;e0&lt;/code&gt;</source>
          <target state="translated">Expresi&amp;oacute;n &lt;code&gt;e0&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7007fb43c92f8963b348d85ed11e388b0552e1c3" translate="yes" xml:space="preserve">
          <source>Expression &lt;code&gt;e1&lt;/code&gt;</source>
          <target state="translated">Expresi&amp;oacute;n &lt;code&gt;e1&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f394df42c68efb7c3038933322adc5a961a6b555" translate="yes" xml:space="preserve">
          <source>Expression &lt;code&gt;e&lt;/code&gt;</source>
          <target state="translated">Expresi&amp;oacute;n &lt;code&gt;e&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7e60c9324dd44b217718e5d601d55424f1b4789b" translate="yes" xml:space="preserve">
          <source>Expression &lt;code&gt;earg1&lt;/code&gt;</source>
          <target state="translated">Expresi&amp;oacute;n &lt;code&gt;earg1&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f910b8428605cbf862e3d1bb322d73f52f00aea1" translate="yes" xml:space="preserve">
          <source>Expression &lt;code&gt;elem&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;elem&lt;/code&gt; expresi&amp;oacute;n</target>
        </trans-unit>
        <trans-unit id="4f2346f54fcfa8df07417dbd8829090b55118464" translate="yes" xml:space="preserve">
          <source>Expression &lt;code&gt;emsg&lt;/code&gt;</source>
          <target state="translated">Expresi&amp;oacute;n &lt;code&gt;emsg&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7cbf5e84e80504f53dddbdea7c64954b155cb357" translate="yes" xml:space="preserve">
          <source>Expression &lt;code&gt;exp&lt;/code&gt;</source>
          <target state="translated">Expresi&amp;oacute;n &lt;code&gt;exp&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="37aac93cf0d495815e578c5699ff35828cf6f52d" translate="yes" xml:space="preserve">
          <source>Expression &lt;code&gt;feaggr&lt;/code&gt;</source>
          <target state="translated">Expresi&amp;oacute;n &lt;code&gt;feaggr&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a953ed52efeca5916127c7919696beebfa3bd1fc" translate="yes" xml:space="preserve">
          <source>Expression &lt;code&gt;firstArg&lt;/code&gt;</source>
          <target state="translated">Expresi&amp;oacute;n &lt;code&gt;firstArg&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="793cca28c8f3f384b396f7adfd08149a1c0bf195" translate="yes" xml:space="preserve">
          <source>Expression &lt;code&gt;instantiated&lt;/code&gt;</source>
          <target state="translated">Expresi&amp;oacute;n &lt;code&gt;instantiated&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4d6980b81fee04c7b5a70125a6146240a73039e9" translate="yes" xml:space="preserve">
          <source>Expression &lt;code&gt;original&lt;/code&gt;</source>
          <target state="translated">Expresi&amp;oacute;n &lt;code&gt;original&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0759ebb987367a96a51a5d1b5ffa1b699e18ec08" translate="yes" xml:space="preserve">
          <source>Expression &lt;strong id=&quot;Expression_optimize&quot;&gt;Expression_optimize&lt;/strong&gt;(Expression e, int result, bool keepLvalue);</source>
          <target state="translated">Expression &lt;strong id=&quot;Expression_optimize&quot;&gt;Expression_optimize&lt;/strong&gt; (Expresi&amp;oacute;n e, resultado int, bool keepLvalue);</target>
        </trans-unit>
        <trans-unit id="e7eb0ac731fa465a7e553c45917e50e97836c4c4" translate="yes" xml:space="preserve">
          <source>Expression &lt;strong id=&quot;addDtorHook&quot;&gt;addDtorHook&lt;/strong&gt;(Scope* sc);</source>
          <target state="translated">Expresi&amp;oacute;n &lt;strong id=&quot;addDtorHook&quot;&gt;addDtorHook&lt;/strong&gt; (Scope * sc);</target>
        </trans-unit>
        <trans-unit id="79e7a3e2a6b6bb028e3dee36c35a16bbcac64b57" translate="yes" xml:space="preserve">
          <source>Expression &lt;strong id=&quot;addInvariant&quot;&gt;addInvariant&lt;/strong&gt;(ref const Loc loc, Scope* sc, AggregateDeclaration ad, VarDeclaration vthis);</source>
          <target state="translated">Expresi&amp;oacute;n &lt;strong id=&quot;addInvariant&quot;&gt;addInvariant&lt;/strong&gt; (ref const Loc loc, Scope * sc, AggregateDeclaration ad, VarDeclaration vthis);</target>
        </trans-unit>
        <trans-unit id="c7de6a20914bd0188b326ef7d4369047d4127694" translate="yes" xml:space="preserve">
          <source>Expression &lt;strong id=&quot;arrayOp&quot;&gt;arrayOp&lt;/strong&gt;(BinAssignExp e, Scope* sc);</source>
          <target state="translated">Expresi&amp;oacute;n &lt;strong id=&quot;arrayOp&quot;&gt;arrayOp&lt;/strong&gt; (BinAssignExp e, Scope * sc);</target>
        </trans-unit>
        <trans-unit id="38cbef71fac259fb3e5addd6010c78720766a7e4" translate="yes" xml:space="preserve">
          <source>Expression &lt;strong id=&quot;arrayOp&quot;&gt;arrayOp&lt;/strong&gt;(BinExp e, Scope* sc);</source>
          <target state="translated">Expresi&amp;oacute;n &lt;strong id=&quot;arrayOp&quot;&gt;arrayOp&lt;/strong&gt; (BinExp e, Scope * sc);</target>
        </trans-unit>
        <trans-unit id="d05e7a6332b506aff76d8910b31057f52e8e38f0" translate="yes" xml:space="preserve">
          <source>Expression &lt;strong id=&quot;basis&quot;&gt;basis&lt;/strong&gt;;</source>
          <target state="translated">&lt;strong id=&quot;basis&quot;&gt;Base de&lt;/strong&gt; expresi&amp;oacute;n ;</target>
        </trans-unit>
        <trans-unit id="ce914de3f03e3182cbb394d12e8e44d61e13a1f4" translate="yes" xml:space="preserve">
          <source>Expression &lt;strong id=&quot;binSemantic&quot;&gt;binSemantic&lt;/strong&gt;(BinExp e, Scope* sc);</source>
          <target state="translated">Expresi&amp;oacute;n &lt;strong id=&quot;binSemantic&quot;&gt;binSemantic&lt;/strong&gt; (BinExp e, Scope * sc);</target>
        </trans-unit>
        <trans-unit id="07cd4a6028fc596b40b13d6d0458444d8de8c8ab" translate="yes" xml:space="preserve">
          <source>Expression &lt;strong id=&quot;build_overload&quot;&gt;build_overload&lt;/strong&gt;(ref const Loc loc, Scope* sc, Expression ethis, Expression earg, Dsymbol d);</source>
          <target state="translated">Expression &lt;strong id=&quot;build_overload&quot;&gt;build_overload&lt;/strong&gt; (ref const Loc loc, Scope * sc, Expression ethis, Expression earg, Dsymbol d);</target>
        </trans-unit>
        <trans-unit id="6871fa1d9cef9535c1f853ab6b02a766a657fbfb" translate="yes" xml:space="preserve">
          <source>Expression &lt;strong id=&quot;castTo&quot;&gt;castTo&lt;/strong&gt;(Expression e, Scope* sc, Type t);</source>
          <target state="translated">Expression &lt;strong id=&quot;castTo&quot;&gt;castTo&lt;/strong&gt; (Expresi&amp;oacute;n e, Alcance * sc, Tipo t);</target>
        </trans-unit>
        <trans-unit id="2b45466acfd0d3d2ded6118c9809d1350d706c46" translate="yes" xml:space="preserve">
          <source>Expression &lt;strong id=&quot;charPromotions&quot;&gt;charPromotions&lt;/strong&gt;(Expression e, Scope* sc);</source>
          <target state="translated">Expression &lt;strong id=&quot;charPromotions&quot;&gt;charPromotions&lt;/strong&gt; (Expresi&amp;oacute;n e, Alcance * sc);</target>
        </trans-unit>
        <trans-unit id="3411c26ed41d2305da3a489d8bf4719326ae9f77" translate="yes" xml:space="preserve">
          <source>Expression &lt;strong id=&quot;condition&quot;&gt;condition&lt;/strong&gt;;</source>
          <target state="translated">&lt;strong id=&quot;condition&quot;&gt;Condici&amp;oacute;n de&lt;/strong&gt; expresi&amp;oacute;n ;</target>
        </trans-unit>
        <trans-unit id="e6931cb91b1ae0e41a9ee765db1152dfb33ce0d4" translate="yes" xml:space="preserve">
          <source>Expression &lt;strong id=&quot;ctfeInterpret&quot;&gt;ctfeInterpret&lt;/strong&gt;(Expression e);</source>
          <target state="translated">Expresi&amp;oacute;n &lt;strong id=&quot;ctfeInterpret&quot;&gt;ctfeInterpret&lt;/strong&gt; (Expresi&amp;oacute;n e);</target>
        </trans-unit>
        <trans-unit id="f1f6d0f109e3e21ea56ab0c366d0d61e14ee4c7d" translate="yes" xml:space="preserve">
          <source>Expression &lt;strong id=&quot;defaultInit&quot;&gt;defaultInit&lt;/strong&gt;(Type mt, ref const Loc loc);</source>
          <target state="translated">Expression &lt;strong id=&quot;defaultInit&quot;&gt;defaultInit&lt;/strong&gt; (Escriba mt, ref const Loc loc);</target>
        </trans-unit>
        <trans-unit id="d97a47c0800d46fd3cd2e538e048bb178e515f0c" translate="yes" xml:space="preserve">
          <source>Expression &lt;strong id=&quot;defaultInitLiteral&quot;&gt;defaultInitLiteral&lt;/strong&gt;(ref const Loc loc);</source>
          <target state="translated">Expresi&amp;oacute;n &lt;strong id=&quot;defaultInitLiteral&quot;&gt;defaultInitLiteral&lt;/strong&gt; (ref const Loc loc);</target>
        </trans-unit>
        <trans-unit id="0a092a26bbbc3c916453f449b7418f845d33b41c" translate="yes" xml:space="preserve">
          <source>Expression &lt;strong id=&quot;doCopyOrMove&quot;&gt;doCopyOrMove&lt;/strong&gt;(Scope* sc, Expression e, Type t = null);</source>
          <target state="translated">Expression &lt;strong id=&quot;doCopyOrMove&quot;&gt;doCopyOrMove&lt;/strong&gt; (Alcance * sc, Expresi&amp;oacute;n e, Tipo t = nulo);</target>
        </trans-unit>
        <trans-unit id="34a3fc99823ccdc5563fe45ca6f4cc54c969827f" translate="yes" xml:space="preserve">
          <source>Expression &lt;strong id=&quot;dotExp&quot;&gt;dotExp&lt;/strong&gt;(Type mt, Scope* sc, Expression e, Identifier ident, int flag);</source>
          <target state="translated">Expression &lt;strong id=&quot;dotExp&quot;&gt;dotExp&lt;/strong&gt; (Escriba mt, Scope * sc, Expression e, Identifier ident, int flag);</target>
        </trans-unit>
        <trans-unit id="192530034d665cef7795047e56ecf307c8762064" translate="yes" xml:space="preserve">
          <source>Expression &lt;strong id=&quot;eval_builtin&quot;&gt;eval_builtin&lt;/strong&gt;(Loc loc, FuncDeclaration fd, Expressions* arguments);</source>
          <target state="translated">Expresi&amp;oacute;n &lt;strong id=&quot;eval_builtin&quot;&gt;eval_builtin&lt;/strong&gt; (Loc loc, FuncDeclaration fd, Expressions * argumentos);</target>
        </trans-unit>
        <trans-unit id="80a303e71b3ae3f7d7217b7e5618f20dbd2535a9" translate="yes" xml:space="preserve">
          <source>Expression &lt;strong id=&quot;exp&quot;&gt;exp&lt;/strong&gt;;</source>
          <target state="translated">Expresi&amp;oacute;n &lt;strong id=&quot;exp&quot;&gt;exp&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="6eb2e3ce9ac3932da76f3de31bbf848ad262e34e" translate="yes" xml:space="preserve">
          <source>Expression &lt;strong id=&quot;expandVar&quot;&gt;expandVar&lt;/strong&gt;(int result, VarDeclaration v);</source>
          <target state="translated">Expresi&amp;oacute;n &lt;strong id=&quot;expandVar&quot;&gt;expandVar&lt;/strong&gt; (int resultado, VarDeclaration v);</target>
        </trans-unit>
        <trans-unit id="dfb3029a50e65b9de4b512fbdb1d29b5615172e3" translate="yes" xml:space="preserve">
          <source>Expression &lt;strong id=&quot;extractSideEffect&quot;&gt;extractSideEffect&lt;/strong&gt;(Scope* sc, const char* name, ref Expression e0, Expression e, bool alwaysCopy = false);</source>
          <target state="translated">Expression &lt;strong id=&quot;extractSideEffect&quot;&gt;extractSideEffect&lt;/strong&gt; (Scope * sc, const char * name, ref Expression e0, Expression e, bool alwaysCopy = false);</target>
        </trans-unit>
        <trans-unit id="efcc60927be71d26c3c816535424c83c4bde8e5a" translate="yes" xml:space="preserve">
          <source>Expression &lt;strong id=&quot;getField&quot;&gt;getField&lt;/strong&gt;(Type type, uint offset);</source>
          <target state="translated">Expresi&amp;oacute;n &lt;strong id=&quot;getField&quot;&gt;getField&lt;/strong&gt; (tipo de tipo, desplazamiento uint);</target>
        </trans-unit>
        <trans-unit id="5c869349f6aded66c0c7140fab666e82c3d45d29" translate="yes" xml:space="preserve">
          <source>Expression &lt;strong id=&quot;getMaxMinValue&quot;&gt;getMaxMinValue&lt;/strong&gt;(ref const Loc loc, Identifier id);</source>
          <target state="translated">Expresi&amp;oacute;n &lt;strong id=&quot;getMaxMinValue&quot;&gt;getMaxMinValue&lt;/strong&gt; (ref const Loc loc, identificador ID);</target>
        </trans-unit>
        <trans-unit id="cf05303975b50b18a00371bfbf097a643287e833" translate="yes" xml:space="preserve">
          <source>Expression &lt;strong id=&quot;getProperty&quot;&gt;getProperty&lt;/strong&gt;(Type t, ref const Loc loc, Identifier ident, int flag);</source>
          <target state="translated">Expresi&amp;oacute;n &lt;strong id=&quot;getProperty&quot;&gt;getProperty&lt;/strong&gt; (tipo t, ref const Loc loc, identificador ident, int flag);</target>
        </trans-unit>
        <trans-unit id="1ed9d54715957ffd3217c453236ae0352ea8d40c" translate="yes" xml:space="preserve">
          <source>Expression &lt;strong id=&quot;getTargetInfo&quot;&gt;getTargetInfo&lt;/strong&gt;(const(char)* name, ref const Loc loc);</source>
          <target state="translated">Expresi&amp;oacute;n &lt;strong id=&quot;getTargetInfo&quot;&gt;getTargetInfo&lt;/strong&gt; (const (char) * nombre, ref const Loc loc);</target>
        </trans-unit>
        <trans-unit id="a06617afbe33da227ef8899ec1e3a2bf9eda75fc" translate="yes" xml:space="preserve">
          <source>Expression &lt;strong id=&quot;getThisSkipNestedFuncs&quot;&gt;getThisSkipNestedFuncs&lt;/strong&gt;(ref const Loc loc, Scope* sc, Dsymbol s, AggregateDeclaration ad, Expression e1, Type t, Dsymbol var, bool flag = false);</source>
          <target state="translated">Expression &lt;strong id=&quot;getThisSkipNestedFuncs&quot;&gt;getThisSkipNestedFuncs&lt;/strong&gt; (ref const Loc loc, Scope * sc, Dsymbol s, AggregateDeclaration ad, Expression e1, Type t, Dsymbol var, bool flag = false);</target>
        </trans-unit>
        <trans-unit id="5182dc71276170cd9c912e2c20da5b0104e0baed" translate="yes" xml:space="preserve">
          <source>Expression &lt;strong id=&quot;identExp&quot;&gt;identExp&lt;/strong&gt;;</source>
          <target state="translated">Expresi&amp;oacute;n &lt;strong id=&quot;identExp&quot;&gt;identExp&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="6002f1b5688ee38493cb8bf57b584c7ad904867f" translate="yes" xml:space="preserve">
          <source>Expression &lt;strong id=&quot;implicitCastTo&quot;&gt;implicitCastTo&lt;/strong&gt;(Expression e, Scope* sc, Type t);</source>
          <target state="translated">Expression &lt;strong id=&quot;implicitCastTo&quot;&gt;implicitCastTo&lt;/strong&gt; (Expresi&amp;oacute;n e, Alcance * sc, Tipo t);</target>
        </trans-unit>
        <trans-unit id="d9fbd63977c9b0f6b381d61e7486228255c3141c" translate="yes" xml:space="preserve">
          <source>Expression &lt;strong id=&quot;inferType&quot;&gt;inferType&lt;/strong&gt;(Expression e, Type t, int flag = 0);</source>
          <target state="translated">Expression &lt;strong id=&quot;inferType&quot;&gt;inferType&lt;/strong&gt; (Expresi&amp;oacute;n e, Tipo t, int flag = 0);</target>
        </trans-unit>
        <trans-unit id="e4eed1230d55b4f7ffdb0f2946ec6b81e685c4d5" translate="yes" xml:space="preserve">
          <source>Expression &lt;strong id=&quot;initializerToExpression&quot;&gt;initializerToExpression&lt;/strong&gt;(Initializer init, Type itype = null);</source>
          <target state="translated">Expression &lt;strong id=&quot;initializerToExpression&quot;&gt;initializerToExpression&lt;/strong&gt; (Initializer init, Type itype = null);</target>
        </trans-unit>
        <trans-unit id="9fd9077340336bbdc42e5a0e55ae876cf74bf052" translate="yes" xml:space="preserve">
          <source>Expression &lt;strong id=&quot;inlineCopy&quot;&gt;inlineCopy&lt;/strong&gt;(Expression e, Scope* sc);</source>
          <target state="translated">Expression &lt;strong id=&quot;inlineCopy&quot;&gt;inlineCopy&lt;/strong&gt; (Expression e, Scope * sc);</target>
        </trans-unit>
        <trans-unit id="a93d5e116a77484a91fb6b2216ee9f2c3ab792bc" translate="yes" xml:space="preserve">
          <source>Expression &lt;strong id=&quot;integralPromotions&quot;&gt;integralPromotions&lt;/strong&gt;(Expression e, Scope* sc);</source>
          <target state="translated">Expresi&amp;oacute;n &lt;strong id=&quot;integralPromotions&quot;&gt;integral&lt;/strong&gt; Promociones (Expresi&amp;oacute;n e, Alcance * sc);</target>
        </trans-unit>
        <trans-unit id="119f4b90e73b2490c0b337b5c2892ee45abe1b1b" translate="yes" xml:space="preserve">
          <source>Expression &lt;strong id=&quot;op_overload&quot;&gt;op_overload&lt;/strong&gt;(Expression e, Scope* sc, TOK* pop = null);</source>
          <target state="translated">Expression &lt;strong id=&quot;op_overload&quot;&gt;op_overload&lt;/strong&gt; (Expresi&amp;oacute;n e, Alcance * sc, TOK * pop = nulo);</target>
        </trans-unit>
        <trans-unit id="ce92783572475e6e71bead0fd27548b7a7fa8d60" translate="yes" xml:space="preserve">
          <source>Expression &lt;strong id=&quot;resolveLoc&quot;&gt;resolveLoc&lt;/strong&gt;(ref const Loc loc, Scope* sc);</source>
          <target state="translated">Expresi&amp;oacute;n &lt;strong id=&quot;resolveLoc&quot;&gt;resolveLoc&lt;/strong&gt; (ref const Loc loc, Scope * sc);</target>
        </trans-unit>
        <trans-unit id="20d217b5757071adb84549bfb94bd0bc8a5ef317" translate="yes" xml:space="preserve">
          <source>Expression &lt;strong id=&quot;resolveOpDollar&quot;&gt;resolveOpDollar&lt;/strong&gt;(Scope* sc, ArrayExp ae, Expression* pe0);</source>
          <target state="translated">Expression &lt;strong id=&quot;resolveOpDollar&quot;&gt;resolveOpDollar&lt;/strong&gt; (Scope * sc, ArrayExp ae, Expression * pe0);</target>
        </trans-unit>
        <trans-unit id="35eac18ed0785aafed68f419dd6c566022d1d5a9" translate="yes" xml:space="preserve">
          <source>Expression &lt;strong id=&quot;resolveOpDollar&quot;&gt;resolveOpDollar&lt;/strong&gt;(Scope* sc, ArrayExp ae, IntervalExp ie, Expression* pe0);</source>
          <target state="translated">Expression &lt;strong id=&quot;resolveOpDollar&quot;&gt;resolveOpDollar&lt;/strong&gt; (Scope * sc, ArrayExp ae, IntervalExp es decir, Expression * pe0);</target>
        </trans-unit>
        <trans-unit id="24fb0ae31138927857d9517f368cb6748955cf0f" translate="yes" xml:space="preserve">
          <source>Expression &lt;strong id=&quot;resolvePropertiesOnly&quot;&gt;resolvePropertiesOnly&lt;/strong&gt;(Scope* sc, Expression e1);</source>
          <target state="translated">Expression &lt;strong id=&quot;resolvePropertiesOnly&quot;&gt;resolvePropertiesOnly&lt;/strong&gt; (Scope * sc, Expression e1);</target>
        </trans-unit>
        <trans-unit id="9f1dd720666b1ebbdeaf1330037ca49680382277" translate="yes" xml:space="preserve">
          <source>Expression &lt;strong id=&quot;resolveSlice&quot;&gt;resolveSlice&lt;/strong&gt;(Expression e, UnionExp* pue = null);</source>
          <target state="translated">Expression &lt;strong id=&quot;resolveSlice&quot;&gt;resolveSlice&lt;/strong&gt; (Expresi&amp;oacute;n e, UnionExp * pue = null);</target>
        </trans-unit>
        <trans-unit id="399afa038530894af01c66997652832c22521978" translate="yes" xml:space="preserve">
          <source>Expression &lt;strong id=&quot;scaleFactor&quot;&gt;scaleFactor&lt;/strong&gt;(BinExp be, Scope* sc);</source>
          <target state="translated">Expression &lt;strong id=&quot;scaleFactor&quot;&gt;scaleFactor&lt;/strong&gt; (BinExp be, Scope * sc);</target>
        </trans-unit>
        <trans-unit id="79986118a4e6a934ff5fac083ee5a2d91f44d14e" translate="yes" xml:space="preserve">
          <source>Expression &lt;strong id=&quot;symbolToExp&quot;&gt;symbolToExp&lt;/strong&gt;(Dsymbol s, ref const Loc loc, Scope* sc, bool hasOverloads);</source>
          <target state="translated">&lt;strong id=&quot;symbolToExp&quot;&gt;S&amp;iacute;mbolo de&lt;/strong&gt; expresi&amp;oacute;n &lt;strong id=&quot;symbolToExp&quot;&gt;ToExp&lt;/strong&gt; (Dsymbol s, ref const Loc loc, Scope * sc, bool hasOverloads);</target>
        </trans-unit>
        <trans-unit id="ffc4deb0c336cdfa09b1452db6e63631f5d4122f" translate="yes" xml:space="preserve">
          <source>Expression &lt;strong id=&quot;toAssocArrayLiteral&quot;&gt;toAssocArrayLiteral&lt;/strong&gt;(ArrayInitializer ai);</source>
          <target state="translated">Expression &lt;strong id=&quot;toAssocArrayLiteral&quot;&gt;toAssocArrayLiteral&lt;/strong&gt; (ArrayInitializer ai);</target>
        </trans-unit>
        <trans-unit id="c6bce8f2be572a14af244cca194d546909ce6bb7" translate="yes" xml:space="preserve">
          <source>Expression &lt;strong id=&quot;toBoolean&quot;&gt;toBoolean&lt;/strong&gt;(Scope* sc);</source>
          <target state="translated">Expresi&amp;oacute;n &lt;strong id=&quot;toBoolean&quot;&gt;toBoolean&lt;/strong&gt; (Scope * sc);</target>
        </trans-unit>
        <trans-unit id="bdb106e8f5a606a6dce675cd4ddbebbc5666068f" translate="yes" xml:space="preserve">
          <source>Expression &lt;strong id=&quot;toDelegate&quot;&gt;toDelegate&lt;/strong&gt;(Expression e, Type t, Scope* sc);</source>
          <target state="translated">Expression &lt;strong id=&quot;toDelegate&quot;&gt;toDelegate&lt;/strong&gt; (Expresi&amp;oacute;n e, Tipo t, Alcance * sc);</target>
        </trans-unit>
        <trans-unit id="6cdc4080dafbc4371980fa1b4330711247ff8eee" translate="yes" xml:space="preserve">
          <source>Expression &lt;strong id=&quot;toLvalue&quot;&gt;toLvalue&lt;/strong&gt;(Scope* sc, Expression e);</source>
          <target state="translated">Expression &lt;strong id=&quot;toLvalue&quot;&gt;toLvalue&lt;/strong&gt; (Scope * sc, Expression e);</target>
        </trans-unit>
        <trans-unit id="6c7b6596f94002291db7dced4938937fd23206f2" translate="yes" xml:space="preserve">
          <source>Expression &lt;strong id=&quot;trySemantic&quot;&gt;trySemantic&lt;/strong&gt;(Expression exp, Scope* sc);</source>
          <target state="translated">Expression &lt;strong id=&quot;trySemantic&quot;&gt;trySemantic&lt;/strong&gt; (Expression exp, Scope * sc);</target>
        </trans-unit>
        <trans-unit id="2c47e576a24251679ce842e21fa63efaeebfa5ca" translate="yes" xml:space="preserve">
          <source>Expression &lt;strong id=&quot;typeCombine&quot;&gt;typeCombine&lt;/strong&gt;(BinExp be, Scope* sc);</source>
          <target state="translated">&lt;strong id=&quot;typeCombine&quot;&gt;Tipo de&lt;/strong&gt; expresi&amp;oacute;n &lt;strong id=&quot;typeCombine&quot;&gt;Combine&lt;/strong&gt; (BinExp be, Scope * sc);</target>
        </trans-unit>
        <trans-unit id="590987c28b7350e9354ffa20860fe52c9ed58235" translate="yes" xml:space="preserve">
          <source>Expression &lt;strong id=&quot;typeToExpression&quot;&gt;typeToExpression&lt;/strong&gt;(Type t);</source>
          <target state="translated">Expresi&amp;oacute;n &lt;strong id=&quot;typeToExpression&quot;&gt;typeToExpression&lt;/strong&gt; (Tipo t);</target>
        </trans-unit>
        <trans-unit id="6e7f226bf5b1c59c07426bc48bf791f755e82872" translate="yes" xml:space="preserve">
          <source>Expression &lt;strong id=&quot;unaSemantic&quot;&gt;unaSemantic&lt;/strong&gt;(UnaExp e, Scope* sc);</source>
          <target state="translated">Expresi&amp;oacute;n &lt;strong id=&quot;unaSemantic&quot;&gt;unaSemantic&lt;/strong&gt; (UnaExp e, Scope * sc);</target>
        </trans-unit>
        <trans-unit id="25e7bb0649743e5711f99aca2d79a2a5b5648501" translate="yes" xml:space="preserve">
          <source>Expression &lt;strong id=&quot;valueNoDtor&quot;&gt;valueNoDtor&lt;/strong&gt;(Expression e);</source>
          <target state="translated">&lt;strong id=&quot;valueNoDtor&quot;&gt;Valor de&lt;/strong&gt; expresi&amp;oacute;n &lt;strong id=&quot;valueNoDtor&quot;&gt;NoDtor&lt;/strong&gt; (Expresi&amp;oacute;n e);</target>
        </trans-unit>
        <trans-unit id="bf3f22e25aac5a5716bd2ddc48521dc242830fb5" translate="yes" xml:space="preserve">
          <source>Expression Parser</source>
          <target state="translated">Parser de expresión</target>
        </trans-unit>
        <trans-unit id="d9c4f2202566f51697b377f90555653846292193" translate="yes" xml:space="preserve">
          <source>Expression Statement</source>
          <target state="translated">Declaración de expresión</target>
        </trans-unit>
        <trans-unit id="eabfa2441c13d974e2af574b0d99a70f4bb9a0d6" translate="yes" xml:space="preserve">
          <source>Expression for the requested targetInfo</source>
          <target state="translated">Expresión para el objetivo solicitadoInfo</target>
        </trans-unit>
        <trans-unit id="6063917999bbfe2ce9b3fa075874599a6ebc96e5" translate="yes" xml:space="preserve">
          <source>Expression representing the &lt;code&gt;this&lt;/code&gt; for the var</source>
          <target state="translated">Expresi&amp;oacute;n que representa &lt;code&gt;this&lt;/code&gt; para la var</target>
        </trans-unit>
        <trans-unit id="df6caa2f45ca5f6946eb55c0501e737ddb8bf27f" translate="yes" xml:space="preserve">
          <source>Expression to convert</source>
          <target state="translated">Expresión para convertir</target>
        </trans-unit>
        <trans-unit id="cf9f917167bd00b70d460bca475535ddcbe6fc7e" translate="yes" xml:space="preserve">
          <source>Expression to determine cost of</source>
          <target state="translated">Expresión para determinar el costo de</target>
        </trans-unit>
        <trans-unit id="2f055d0b3e4b8725a9090bf4d8f45363b46775b9" translate="yes" xml:space="preserve">
          <source>Expression to look at</source>
          <target state="translated">Expresión para mirar</target>
        </trans-unit>
        <trans-unit id="fbcc420f7af639d45c5081500755a47ce6367c0a" translate="yes" xml:space="preserve">
          <source>Expression which expected as a string</source>
          <target state="translated">Expresión que se esperaba como una cadena</target>
        </trans-unit>
        <trans-unit id="d8e5fdfc95019b0e8b971e0729223c011b90611f" translate="yes" xml:space="preserve">
          <source>Expression* &lt;code&gt;pe&lt;/code&gt;</source>
          <target state="translated">Expresi&amp;oacute;n * &lt;code&gt;pe&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7bc014e6d10451a8147b649b688eca472ffab8da" translate="yes" xml:space="preserve">
          <source>Expression[] &lt;code&gt;args&lt;/code&gt;</source>
          <target state="translated">Expresi&amp;oacute;n [] &lt;code&gt;args&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bd7feaf7d6885e2aeae1d7088bcce98f228aa60c" translate="yes" xml:space="preserve">
          <source>Expression[] &lt;code&gt;negatives&lt;/code&gt;</source>
          <target state="translated">Expresi&amp;oacute;n [] &lt;code&gt;negatives&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ae5fccd8dcd8fc317f8edfc8259af86cd2967a29" translate="yes" xml:space="preserve">
          <source>Expressions</source>
          <target state="translated">Expressions</target>
        </trans-unit>
        <trans-unit id="17b61fb742fe0544a0738e346e8b68266f8e6c2c" translate="yes" xml:space="preserve">
          <source>Expressions and statements may create and/or consume rvalues. Such values are called</source>
          <target state="translated">Las expresiones y declaraciones pueden crear y/o consumir valores.Tales valores se llaman</target>
        </trans-unit>
        <trans-unit id="827d05e6a3f1241aa29022321190716d0bac015a" translate="yes" xml:space="preserve">
          <source>Expressions are used to compute values with a resulting type. These values can then be assigned, tested, or ignored. Expressions can also have side effects.</source>
          <target state="translated">Las expresiones se utilizan para calcular valores con un tipo resultante.Estos valores pueden entonces ser asignados,probados o ignorados.Las expresiones también pueden tener efectos secundarios.</target>
        </trans-unit>
        <trans-unit id="213f37939286b76ce58e9d750cb8625a9de8b877" translate="yes" xml:space="preserve">
          <source>Expressions connected by commas</source>
          <target state="translated">Expresiones conectadas por comas</target>
        </trans-unit>
        <trans-unit id="eeda38d97c1591b472912826aeaaf79dee7875cf" translate="yes" xml:space="preserve">
          <source>Expressions of the form &lt;code&gt;a != b&lt;/code&gt; are rewritten as &lt;code&gt;!(a == b)&lt;/code&gt;.</source>
          <target state="translated">Las expresiones de la forma &lt;code&gt;a != b&lt;/code&gt; se reescriben como &lt;code&gt;!(a == b)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9790c7ed767b515e2db3f5032fee145b7d8f3f2d" translate="yes" xml:space="preserve">
          <source>Expressions of the form &lt;code&gt;arr[&lt;/code&gt;</source>
          <target state="translated">Expresiones de la forma &lt;code&gt;arr[&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="296ed9970d463ab72dec34118964f9a6a98b21b4" translate="yes" xml:space="preserve">
          <source>Expressions that have no effect, like &lt;code&gt;(x + x)&lt;/code&gt;, are illegal as expression statements unless the are cast to void.</source>
          <target state="translated">Las expresiones que no tienen efecto, como &lt;code&gt;(x + x)&lt;/code&gt; , son ilegales como declaraciones de expresi&amp;oacute;n a menos que se anulen.</target>
        </trans-unit>
        <trans-unit id="13135cffec267a2714ee700a44376c037a46555b" translate="yes" xml:space="preserve">
          <source>Expressions that have no effect, like &lt;code&gt;(x + x)&lt;/code&gt;, are illegal as expression statements unless they are cast to void.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d9ba85aff37987e9f1d9fafb80136e7c416676a" translate="yes" xml:space="preserve">
          <source>Expressions* &lt;code&gt;elements&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;elements&lt;/code&gt; expresiones *</target>
        </trans-unit>
        <trans-unit id="137b1c280f96de72078b78ad7d25efffd1250b2a" translate="yes" xml:space="preserve">
          <source>Expressions* &lt;code&gt;exps&lt;/code&gt;</source>
          <target state="translated">Expresiones * &lt;code&gt;exps&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e87db2601150b379b388e1556ff809504a78b747" translate="yes" xml:space="preserve">
          <source>Expressions* &lt;code&gt;fargs&lt;/code&gt;</source>
          <target state="translated">Expresiones * &lt;code&gt;fargs&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0e0b234b24cbc1fb165bd79fe8e05526407f3b36" translate="yes" xml:space="preserve">
          <source>Expressions* &lt;code&gt;negatives&lt;/code&gt;</source>
          <target state="translated">Expresiones * &lt;code&gt;negatives&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fd03daa888a0e583ceb40e2e00dacb30660a10cc" translate="yes" xml:space="preserve">
          <source>Expressions* &lt;strong id=&quot;elements&quot;&gt;elements&lt;/strong&gt;;</source>
          <target state="translated">Expresiones * &lt;strong id=&quot;elements&quot;&gt;elementos&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="37783cf5e7c87b4f591a55d79dbb7ea52f941431" translate="yes" xml:space="preserve">
          <source>Expressions* &lt;strong id=&quot;fdensureParams&quot;&gt;fdensureParams&lt;/strong&gt;;</source>
          <target state="translated">Expresiones * &lt;strong id=&quot;fdensureParams&quot;&gt;fdensureParams&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="026b50f17d896e63ced46249a059380f8e6cbae1" translate="yes" xml:space="preserve">
          <source>Expressions* &lt;strong id=&quot;fdrequireParams&quot;&gt;fdrequireParams&lt;/strong&gt;;</source>
          <target state="translated">Expresiones * &lt;strong id=&quot;fdrequireParams&quot;&gt;fdrequireParams&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="b7c9df0f13515170e90ad55a4b53a6f772217b57" translate="yes" xml:space="preserve">
          <source>Extend an array &lt;code&gt;px&lt;/code&gt; by &lt;code&gt;n&lt;/code&gt; elements. Caller must initialize those elements.</source>
          <target state="translated">Extienda una matriz &lt;code&gt;px&lt;/code&gt; por &lt;code&gt;n&lt;/code&gt; elementos. La persona que llama debe inicializar esos elementos.</target>
        </trans-unit>
        <trans-unit id="f8d9ec6e863a0af2e6c6f8b6330f856c27efe720" translate="yes" xml:space="preserve">
          <source>Extend an array by n elements. Caller must initialize those elements.</source>
          <target state="translated">Extender un conjunto de n elementos.La persona que llama debe inicializar esos elementos.</target>
        </trans-unit>
        <trans-unit id="1b5d8573dd5bcf3e6c45847ffd98818bf7ecfc27" translate="yes" xml:space="preserve">
          <source>Extend may also be used to extend slices (or memory blocks with &lt;a href=&quot;#APPENDABLE&quot;&gt;&lt;code&gt;APPENDABLE&lt;/code&gt;&lt;/a&gt; info). However, use the return value only as an indicator of success. &lt;a href=&quot;#capacity&quot;&gt;&lt;code&gt;capacity&lt;/code&gt;&lt;/a&gt; should be used to retrieve actual usable slice capacity.</source>
          <target state="translated">Extender tambi&amp;eacute;n se puede usar para extender segmentos (o bloques de memoria con informaci&amp;oacute;n &lt;a href=&quot;#APPENDABLE&quot;&gt; &lt;code&gt;APPENDABLE&lt;/code&gt; &lt;/a&gt; ). Sin embargo, use el valor de retorno solo como un indicador de &amp;eacute;xito. &lt;a href=&quot;#capacity&quot;&gt; &lt;code&gt;capacity&lt;/code&gt; &lt;/a&gt; debe utilizar para recuperar la capacidad de corte utilizable real.</target>
        </trans-unit>
        <trans-unit id="43ee2587f2dee7414c6f7fffb20316fc7cc9240d" translate="yes" xml:space="preserve">
          <source>Extend the length of the input range &lt;code&gt;r&lt;/code&gt; by padding out the end of the range with the element &lt;code&gt;e&lt;/code&gt;. The element &lt;code&gt;e&lt;/code&gt; must be of a common type with the element type of the range &lt;code&gt;r&lt;/code&gt; as defined by &lt;a href=&quot;std_traits#CommonType&quot;&gt;&lt;code&gt;std.traits.CommonType&lt;/code&gt;&lt;/a&gt;. If &lt;code&gt;n&lt;/code&gt; is less than the length of of &lt;code&gt;r&lt;/code&gt;, then the contents of &lt;code&gt;r&lt;/code&gt; are returned.</source>
          <target state="translated">Extienda la longitud del rango de entrada &lt;code&gt;r&lt;/code&gt; rellenando el final del rango con el elemento &lt;code&gt;e&lt;/code&gt; . El elemento &lt;code&gt;e&lt;/code&gt; debe ser de un tipo com&amp;uacute;n con el tipo de elemento del rango &lt;code&gt;r&lt;/code&gt; seg&amp;uacute;n lo definido por &lt;a href=&quot;std_traits#CommonType&quot;&gt; &lt;code&gt;std.traits.CommonType&lt;/code&gt; &lt;/a&gt; . Si &lt;code&gt;n&lt;/code&gt; es menor que la longitud de &lt;code&gt;r&lt;/code&gt; , entonces se devuelve el contenido de &lt;code&gt;r&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="aa833620006d2c6c6571801ae931036999a293ae" translate="yes" xml:space="preserve">
          <source>Extend, shrink or allocate a new block of memory keeping the contents of an existing block</source>
          <target state="translated">Ampliar,reducir o asignar un nuevo bloque de memoria manteniendo el contenido de un bloque existente</target>
        </trans-unit>
        <trans-unit id="1f14c54998b149072f5f4807010db7ef4def6435" translate="yes" xml:space="preserve">
          <source>ExtendedModuleUnitTester &lt;code&gt;h&lt;/code&gt;</source>
          <target state="translated">ExtendedModuleUnitTester &lt;code&gt;h&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c9b77ddd59e96e949c32c9e07059de1e0868c54d" translate="yes" xml:space="preserve">
          <source>Extender</source>
          <target state="translated">Extender</target>
        </trans-unit>
        <trans-unit id="ca6a41cfa1be0460478758700e28ed97e69b6db4" translate="yes" xml:space="preserve">
          <source>Extends the length of the input range &lt;code&gt;r&lt;/code&gt; by padding out the start of the range with the element &lt;code&gt;e&lt;/code&gt;. The element &lt;code&gt;e&lt;/code&gt; must be of a common type with the element type of the range &lt;code&gt;r&lt;/code&gt; as defined by &lt;a href=&quot;std_traits#CommonType&quot;&gt;&lt;code&gt;std.traits.CommonType&lt;/code&gt;&lt;/a&gt;. If &lt;code&gt;n&lt;/code&gt; is less than the length of of &lt;code&gt;r&lt;/code&gt;, then &lt;code&gt;r&lt;/code&gt; is returned unmodified.</source>
          <target state="translated">Extiende la longitud del rango de entrada &lt;code&gt;r&lt;/code&gt; al rellenar el inicio del rango con el elemento &lt;code&gt;e&lt;/code&gt; . El elemento &lt;code&gt;e&lt;/code&gt; debe ser de un tipo com&amp;uacute;n con el tipo de elemento del rango &lt;code&gt;r&lt;/code&gt; seg&amp;uacute;n lo definido por &lt;a href=&quot;std_traits#CommonType&quot;&gt; &lt;code&gt;std.traits.CommonType&lt;/code&gt; &lt;/a&gt; . Si &lt;code&gt;n&lt;/code&gt; es menor que la longitud de &lt;code&gt;r&lt;/code&gt; , entonces &lt;code&gt;r&lt;/code&gt; se devuelve sin modificar.</target>
        </trans-unit>
        <trans-unit id="659087d3ca23db6ae11e0a43579b5f4a260dda11" translate="yes" xml:space="preserve">
          <source>Extension</source>
          <target state="translated">Extension</target>
        </trans-unit>
        <trans-unit id="006d500cd51d10312fee9a378180dd1c0dbff085" translate="yes" xml:space="preserve">
          <source>Extension to add (should not include '.')</source>
          <target state="translated">Extensión para añadir (no debe incluir '.')</target>
        </trans-unit>
        <trans-unit id="6482035493770d2e055c43b47e6d26c77dd6c0ef" translate="yes" xml:space="preserve">
          <source>Extern Declarations</source>
          <target state="translated">Declaraciones externas</target>
        </trans-unit>
        <trans-unit id="d4c9ef3b0f468eee8df0924f820ebf154b375ffb" translate="yes" xml:space="preserve">
          <source>External functions don't have a function body visible to the compiler:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3748f7f3cb478d80788fa4224db3fc0a78eefd90" translate="yes" xml:space="preserve">
          <source>ExternallyMangledName</source>
          <target state="translated">ExternallyMangledName</target>
        </trans-unit>
        <trans-unit id="346cbbedcd46a1663dd5b1cc744bd9a949537eb2" translate="yes" xml:space="preserve">
          <source>Extra characters were found after the end of the domain literal</source>
          <target state="translated">Se encontraron caracteres adicionales después del final del dominio literal</target>
        </trans-unit>
        <trans-unit id="d5c6615073da0f312632e0d30300116c3bbca0ac" translate="yes" xml:space="preserve">
          <source>Extract Metadata About A Column Of A Table</source>
          <target state="translated">Extraer metadatos sobre una columna de una tabla</target>
        </trans-unit>
        <trans-unit id="9faa5d876b6179e6ba25ab15280e90240372d01c" translate="yes" xml:space="preserve">
          <source>Extract an integral payload from a NAN.</source>
          <target state="translated">Extraer una carga integral de una NAN.</target>
        </trans-unit>
        <trans-unit id="2c4b7673b033687b78b5842c4817a13b02fefd97" translate="yes" xml:space="preserve">
          <source>Extract information about types and symbols at compile time.</source>
          <target state="translated">Extraer la información sobre los tipos y símbolos en el momento de la compilación.</target>
        </trans-unit>
        <trans-unit id="f06fb7685dce7967eb2226a2da1b90f2b56a47a7" translate="yes" xml:space="preserve">
          <source>Extract object previously wrapped by &lt;a href=&quot;#wrap&quot;&gt;&lt;code&gt;wrap&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Extraer objeto previamente envuelto por &lt;a href=&quot;#wrap&quot;&gt; &lt;code&gt;wrap&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="bd69f2de6f5ccb7abb3ebb23adba928b9189680b" translate="yes" xml:space="preserve">
          <source>Extracting keys or values from an associative array</source>
          <target state="translated">Extracción de claves o valores de un conjunto asociativo</target>
        </trans-unit>
        <trans-unit id="33b53849a6a696afc1cd80915cbb26c701295344" translate="yes" xml:space="preserve">
          <source>Extracts the exponent of x as a signed integral value.</source>
          <target state="translated">Extrae el exponente de x como un valor integral firmado.</target>
        </trans-unit>
        <trans-unit id="f72287d204f2105b0fd97e600ee98c5cba938ca4" translate="yes" xml:space="preserve">
          <source>Extracts the norm of a complex number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e69f20e9f683920d3fb4329abd951e878b1f9372" translate="yes" xml:space="preserve">
          <source>F</source>
          <target state="translated">F</target>
        </trans-unit>
        <trans-unit id="92e79f4fb4307210226b4892ad6cd4e88db84d8e" translate="yes" xml:space="preserve">
          <source>F &lt;code&gt;fn&lt;/code&gt;</source>
          <target state="translated">F &lt;code&gt;fn&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="193f1d2a7d28460babdd5dae282bd85494298779" translate="yes" xml:space="preserve">
          <source>F &lt;code&gt;fp&lt;/code&gt;</source>
          <target state="translated">F &lt;code&gt;fp&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="24cceb382e88b5a613ffd52b108c408d0048ef0f" translate="yes" xml:space="preserve">
          <source>F &lt;code&gt;x&lt;/code&gt;</source>
          <target state="translated">F &lt;code&gt;x&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a08f0857a21894d4669365254c28abd314ff69d5" translate="yes" xml:space="preserve">
          <source>F &lt;strong id=&quot;dotProduct&quot;&gt;dotProduct&lt;/strong&gt;(F, uint N)(ref scope const F[N] a, ref scope const F[N] b)</source>
          <target state="translated">F &lt;strong id=&quot;dotProduct&quot;&gt;dotProduct&lt;/strong&gt; (F, uint N) (referencia del alcance const F [N] a, referencia del alcance const F [N] b)</target>
        </trans-unit>
        <trans-unit id="2667ca0e687195a6570d57ab0089486c7bee46ff" translate="yes" xml:space="preserve">
          <source>F &lt;strong id=&quot;gapWeightedSimilarity&quot;&gt;gapWeightedSimilarity&lt;/strong&gt;(alias comp = &quot;a == b&quot;, R1, R2, F)(R1 s, R2 t, F lambda)</source>
          <target state="translated">F &lt;strong id=&quot;gapWeightedSimilarity&quot;&gt;gapWeightedSimilarity&lt;/strong&gt; (alias comp = &quot;a == b&quot;, R1, R2, F) (R1 s, R2 t, F lambda)</target>
        </trans-unit>
        <trans-unit id="fe6176f13577b4b75c6e15efab6754698b9c3bee" translate="yes" xml:space="preserve">
          <source>FE FF</source>
          <target state="translated">FE FF</target>
        </trans-unit>
        <trans-unit id="3e02b936dfd78b3c5ebed8632cb4cc204b3750a2" translate="yes" xml:space="preserve">
          <source>FF FE</source>
          <target state="translated">FF FE</target>
        </trans-unit>
        <trans-unit id="c498915b8f02917da6f0c028707f1c34277fe255" translate="yes" xml:space="preserve">
          <source>FF FE 00 00</source>
          <target state="translated">FF FE 00 00</target>
        </trans-unit>
        <trans-unit id="d2a0477ef856e83464b14c113e56b5dc50816ccb" translate="yes" xml:space="preserve">
          <source>FILE* &lt;code&gt;stream&lt;/code&gt;</source>
          <target state="translated">ARCHIVO * &lt;code&gt;stream&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a2605a67597f1a10f5c96696e2424ee2db911144" translate="yes" xml:space="preserve">
          <source>FILETIME* &lt;code&gt;ft&lt;/code&gt;</source>
          <target state="translated">TIEMPO DE ARCHIVO * &lt;code&gt;ft&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="716c88fa55348f124b797e571db1aebe854236a3" translate="yes" xml:space="preserve">
          <source>FIPS PUB180-2</source>
          <target state="translated">FIPS PUB180-2</target>
        </trans-unit>
        <trans-unit id="1267dff51655e0a3bdc33fc1076bec75984a3f57" translate="yes" xml:space="preserve">
          <source>FLAGS /////////////////////////////////////</source>
          <target state="translated">BANDERAS.</target>
        </trans-unit>
        <trans-unit id="e96a8a604f9b6179e311fa3d5f24abcd71fc841e" translate="yes" xml:space="preserve">
          <source>FNMATCH_FUNCTION user pointer</source>
          <target state="translated">Puntero de usuario FNMATCH_FUNCTION</target>
        </trans-unit>
        <trans-unit id="cd00fd89694c9543bbff899304d998d7ecf5294f" translate="yes" xml:space="preserve">
          <source>FPTypeProperties!double &lt;strong id=&quot;DoubleProperties&quot;&gt;DoubleProperties&lt;/strong&gt;;</source>
          <target state="translated">FPTypeProperties! Double &lt;strong id=&quot;DoubleProperties&quot;&gt;DoubleProperties&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="0d8442da2a84281783f8838ad22bc5dbea8b7a72" translate="yes" xml:space="preserve">
          <source>FPTypeProperties!float &lt;strong id=&quot;FloatProperties&quot;&gt;FloatProperties&lt;/strong&gt;;</source>
          <target state="translated">FPTypeProperties! &lt;strong id=&quot;FloatProperties&quot;&gt;Float FloatProperties&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="f033c2d3e8e972e4ef1768896ccae5d11b59035e" translate="yes" xml:space="preserve">
          <source>FPTypeProperties!real_t &lt;strong id=&quot;RealProperties&quot;&gt;RealProperties&lt;/strong&gt;;</source>
          <target state="translated">FPTypeProperties! Real_t &lt;strong id=&quot;RealProperties&quot;&gt;RealProperties&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="33526cf6b3de29bbe86a32df97a3317f13177146" translate="yes" xml:space="preserve">
          <source>FP_ILOGB0</source>
          <target state="translated">FP_ILOGB0</target>
        </trans-unit>
        <trans-unit id="3ca2eaac7e96ce045c763f71e8ad21f82a4121ef" translate="yes" xml:space="preserve">
          <source>FP_ILOGBNAN</source>
          <target state="translated">FP_ILOGBNAN</target>
        </trans-unit>
        <trans-unit id="acb28212fba0272ee990cebd571ebe09b463312e" translate="yes" xml:space="preserve">
          <source>FTP</source>
          <target state="translated">FTP</target>
        </trans-unit>
        <trans-unit id="efd9df5bd03a5bb6ecc42cd9b76d43f3c4b84813" translate="yes" xml:space="preserve">
          <source>FTP &lt;strong id=&quot;dup&quot;&gt;dup&lt;/strong&gt;();</source>
          <target state="translated">FTP &lt;strong id=&quot;dup&quot;&gt;dup&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="a156047c4af729c2fac38d529049b3b9938c1d8f" translate="yes" xml:space="preserve">
          <source>FTP Option that causes missing dirs to be created on the remote server. In 7.19.4 we introduced the convenience enums for this option using the CURLFTP_CREATE_DIR prefix.</source>
          <target state="translated">Opción de FTP que hace que se creen los dirs que faltan en el servidor remoto.En 7.19.4 introdujimos los enums de conveniencia para esta opción usando el prefijo CURLFTP_CREATE_DIR.</target>
        </trans-unit>
        <trans-unit id="fbfe183e82b68040592bf183fc081e933272629b" translate="yes" xml:space="preserve">
          <source>FTP access to the specified url.</source>
          <target state="translated">Acceso FTP a la url especificada.</target>
        </trans-unit>
        <trans-unit id="79d1ddd73bbfe55930046d43cf864f9b3aca2fb2" translate="yes" xml:space="preserve">
          <source>FTP client functionality.</source>
          <target state="translated">Funcionalidad del cliente FTP.</target>
        </trans-unit>
        <trans-unit id="296657dabd1e7526b0c3bd8986b54a229ec9f74e" translate="yes" xml:space="preserve">
          <source>FTP option that changes the timeout, in seconds, associated with getting a response. This is different from transfer timeout time and essentially places a demand on the FTP server to acknowledge commands in a timely manner.</source>
          <target state="translated">La opción de FTP que cambia el tiempo de espera,en segundos,asociado a la obtención de una respuesta.Esto es diferente del tiempo de espera de la transferencia y esencialmente exige que el servidor FTP reconozca los comandos de manera oportuna.</target>
        </trans-unit>
        <trans-unit id="1e9d5102532c80cabb71bedd22459f048605a2a0" translate="yes" xml:space="preserve">
          <source>FUNCFLAG.xxxxx</source>
          <target state="translated">FUNCFLAG.xxxxx</target>
        </trans-unit>
        <trans-unit id="04a22d510848e72d972438b2303f4bb0f8cefe40" translate="yes" xml:space="preserve">
          <source>F[] &lt;strong id=&quot;uniformDistribution&quot;&gt;uniformDistribution&lt;/strong&gt;(F = double)(size_t n, F[] useThis = null)</source>
          <target state="translated">F [] &lt;strong id=&quot;uniformDistribution&quot;&gt;uniformDistribution&lt;/strong&gt; (F = double) (size_t n, F [] useThis = null)</target>
        </trans-unit>
        <trans-unit id="885d20f30c6997f28727cb3b1c03c026a0423304" translate="yes" xml:space="preserve">
          <source>Facilities for random number generation.</source>
          <target state="translated">Instalaciones para la generación de números aleatorios.</target>
        </trans-unit>
        <trans-unit id="e47b9b1021034a56b7d5f70d92d0481524e78f69" translate="yes" xml:space="preserve">
          <source>Factory</source>
          <target state="translated">Factory</target>
        </trans-unit>
        <trans-unit id="9d80a11d6c9cd9d8129231038cc99dcf9cfe6c31" translate="yes" xml:space="preserve">
          <source>Fails: char[] has mutable aliasing.</source>
          <target state="translated">Falla:char[]tiene un alias mutable.</target>
        </trans-unit>
        <trans-unit id="7ca23f275cf26c43dc6cb80deec7cc73ebd0d6be" translate="yes" xml:space="preserve">
          <source>Fake a struct symbol.</source>
          <target state="translated">Falsificar un símbolo de estructura.</target>
        </trans-unit>
        <trans-unit id="f92a31e5dc809226adfcdd7266d92ffe4d097f29" translate="yes" xml:space="preserve">
          <source>Fake class which holds the thrown exception. Used for implementing exception handling.</source>
          <target state="translated">Clase falsa que tiene la excepción de los lanzamientos.Se utiliza para implementar el manejo de excepciones.</target>
        </trans-unit>
        <trans-unit id="187b6d7e012db85d9f53b228f8b221e037e5b215" translate="yes" xml:space="preserve">
          <source>Fallback &lt;strong id=&quot;fallback&quot;&gt;fallback&lt;/strong&gt;;</source>
          <target state="translated">Fallback &lt;strong id=&quot;fallback&quot;&gt;fallback&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="1d00915c3eb36b1f76efd0ec12a2e2bfdb9c88e2" translate="yes" xml:space="preserve">
          <source>FallbackAllocator!(Primary, Fallback) &lt;strong id=&quot;fallbackAllocator&quot;&gt;fallbackAllocator&lt;/strong&gt;(Primary, Fallback)(auto ref Primary p, auto ref Fallback f);</source>
          <target state="translated">FallbackAllocator! (Primario, Fallback) &lt;strong id=&quot;fallbackAllocator&quot;&gt;fallbackAllocator&lt;/strong&gt; (Primario, Fallback) (auto ref Primario p, auto ref Fallback f);</target>
        </trans-unit>
        <trans-unit id="5d505b3f95c1c85d725f5b643bd03f8f11c638e3" translate="yes" xml:space="preserve">
          <source>Families of transcendental functions.</source>
          <target state="translated">Familias de funciones trascendentales.</target>
        </trans-unit>
        <trans-unit id="c15afdf4366c1e5e116d4655301026b41771feaa" translate="yes" xml:space="preserve">
          <source>Family of this address.</source>
          <target state="translated">Familia de esta dirección.</target>
        </trans-unit>
        <trans-unit id="9784de560abfd12a3df7edbfce43582579bd83ea" translate="yes" xml:space="preserve">
          <source>Fast Alias</source>
          <target state="translated">Alias rápidos</target>
        </trans-unit>
        <trans-unit id="b30639e5d7da09380f8d189ea58cefd7706fb2d8" translate="yes" xml:space="preserve">
          <source>Fast Integer Overflow Checks</source>
          <target state="translated">Comprobaciones de desbordamiento de números enteros rápidos</target>
        </trans-unit>
        <trans-unit id="0b12a136aeae505dcc0b7dbbf0dd96b9dfb9b43f" translate="yes" xml:space="preserve">
          <source>Fast implementation of SHA1</source>
          <target state="translated">Rápida implementación del SHA1</target>
        </trans-unit>
        <trans-unit id="f52bc5a79d93a586d9fd5f867d9e97fd2c1e94ed" translate="yes" xml:space="preserve">
          <source>Fast power modulus calculation for &lt;a href=&quot;#BigInt&quot;&gt;&lt;code&gt;BigInt&lt;/code&gt;&lt;/a&gt; operands.</source>
          <target state="translated">C&amp;aacute;lculo r&amp;aacute;pido del m&amp;oacute;dulo de potencia para operandos &lt;a href=&quot;#BigInt&quot;&gt; &lt;code&gt;BigInt&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="fc338f87a058158eb824b53705961801516a9460" translate="yes" xml:space="preserve">
          <source>Features</source>
          <target state="translated">Features</target>
        </trans-unit>
        <trans-unit id="5e04f2d50cdd060bbfcbfee4c55990dc2c53ebb6" translate="yes" xml:space="preserve">
          <source>Feeds a piece of data into the hash computation. This method allows the type to be used as an &lt;a href=&quot;std_range#OutputRange&quot;&gt;&lt;code&gt;std.range.OutputRange&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Alimenta una pieza de datos en el c&amp;aacute;lculo hash. Este m&amp;eacute;todo permite que el tipo se use como &lt;a href=&quot;std_range#OutputRange&quot;&gt; &lt;code&gt;std.range.OutputRange&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ef2e953b973aaaad728788af9fe005332250cfb9" translate="yes" xml:space="preserve">
          <source>Fetch a range that spans all the elements in the container.</source>
          <target state="translated">Busca un rango que abarque todos los elementos del contenedor.</target>
        </trans-unit>
        <trans-unit id="806c6077cb7a78f983cf9f3141f3488ff76bfb62" translate="yes" xml:space="preserve">
          <source>Fetch a set of &lt;a href=&quot;#Code%20point&quot;&gt;code points&lt;/a&gt; that have the given hangul syllable type.</source>
          <target state="translated">Obtenga un conjunto de &lt;a href=&quot;#Code%20point&quot;&gt;puntos&lt;/a&gt; de c&amp;oacute;digo que tengan el tipo de s&amp;iacute;laba hangul dado.</target>
        </trans-unit>
        <trans-unit id="f82305ed0f65639966ae3ed3933a92d710f2e1b5" translate="yes" xml:space="preserve">
          <source>Fetches a portion of the container from key &lt;code&gt;a&lt;/code&gt; to key &lt;code&gt;b&lt;/code&gt;.</source>
          <target state="translated">Obtiene una porci&amp;oacute;n del recipiente de la llave &lt;code&gt;a&lt;/code&gt; a clave &lt;code&gt;b&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="25fd3d77a2c1246116e41ea65fe998403f8ec08d" translate="yes" xml:space="preserve">
          <source>Fiber which embeds a ThreadInfo</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="941f1ba20ae720e9df7d97f37ddc2a546949a068" translate="yes" xml:space="preserve">
          <source>Fibonacci numbers, using function in explicit form:</source>
          <target state="translated">Los números de Fibonacci,usando la función en forma explícita:</target>
        </trans-unit>
        <trans-unit id="d046974a209aaf1dc186931ea0c33a691fda7aee" translate="yes" xml:space="preserve">
          <source>Field Properties</source>
          <target state="translated">Propiedades del campo</target>
        </trans-unit>
        <trans-unit id="107eaaea9a6cf7bffdc6f5831dadf9f4ae6e6dff" translate="yes" xml:space="preserve">
          <source>Field initialization inside a constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bc4c6a8400a8c6f02130bcea08f292997d6b9f9" translate="yes" xml:space="preserve">
          <source>Field initialization inside constructor</source>
          <target state="translated">Inicialización del campo dentro del constructor</target>
        </trans-unit>
        <trans-unit id="c5a099fc15efbba12a358705f6143f4d6be98777" translate="yes" xml:space="preserve">
          <source>FieldInit[] &lt;strong id=&quot;fieldinit&quot;&gt;fieldinit&lt;/strong&gt;;</source>
          <target state="translated">FieldInit [] &lt;strong id=&quot;fieldinit&quot;&gt;fieldinit&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="e8b685271238adf161cffed3c91f54d97023262b" translate="yes" xml:space="preserve">
          <source>Fields</source>
          <target state="translated">Fields</target>
        </trans-unit>
        <trans-unit id="0de912d25f2bf66472286b09fc92107582e1704b" translate="yes" xml:space="preserve">
          <source>Fields are by default initialized to the default initializer for their type (usually 0 for integer types and NAN for floating point types). If the field declaration has an optional &lt;a href=&quot;declaration#Initializer&quot;&gt;&lt;i&gt;Initializer&lt;/i&gt;&lt;/a&gt; that will be used instead of the default.</source>
          <target state="translated">Los campos se inicializan por defecto al inicializador predeterminado para su tipo (generalmente 0 para tipos enteros y NAN para tipos de punto flotante). Si la declaraci&amp;oacute;n de campo tiene un &lt;a href=&quot;declaration#Initializer&quot;&gt;&lt;i&gt;inicializador&lt;/i&gt;&lt;/a&gt; opcional que se utilizar&amp;aacute; en lugar del predeterminado.</target>
        </trans-unit>
        <trans-unit id="23cca95a6cdd188e6c7fc8755e8efb38d2d70c0e" translate="yes" xml:space="preserve">
          <source>Fields not specified in the</source>
          <target state="translated">Los campos no especificados en el</target>
        </trans-unit>
        <trans-unit id="208ad1de91661d0ad0a36ff8e397f7fa368d919b" translate="yes" xml:space="preserve">
          <source>Fields of &lt;code&gt;extern(Objective-C)&lt;/code&gt; classes have a dynamic offset. That means that the base class can change (add or remove instance variables) without the subclasses needing to recompile or relink.</source>
          <target state="translated">Los campos de las clases &lt;code&gt;extern(Objective-C)&lt;/code&gt; tienen un desplazamiento din&amp;aacute;mico. Eso significa que la clase base puede cambiar (agregar o eliminar variables de instancia) sin que las subclases necesiten volver a compilar o volver a vincular.</target>
        </trans-unit>
        <trans-unit id="853d0fada94e86615dc6538f25f88964cc917132" translate="yes" xml:space="preserve">
          <source>Figure out what is being foreach'd over by looking at the ForeachAggregate.</source>
          <target state="translated">Averigüe lo que está siendo adelantado mirando el ForeachAggregate.</target>
        </trans-unit>
        <trans-unit id="30ce9f687ac35a29ae0ceb7c01a007d763160966" translate="yes" xml:space="preserve">
          <source>File &lt;code&gt;f&lt;/code&gt;</source>
          <target state="translated">Archivo &lt;code&gt;f&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6e98c320744b7f0c7cb60ef318110b857423c138" translate="yes" xml:space="preserve">
          <source>File &lt;code&gt;file&lt;/code&gt;</source>
          <target state="translated">archivo &lt;code&gt;file&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4f3f2227118512e7ca5c3ada9f680151527105c3" translate="yes" xml:space="preserve">
          <source>File &lt;code&gt;ns/a.d&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="748ef850240024ab9b9dfd885345924583894351" translate="yes" xml:space="preserve">
          <source>File &lt;code&gt;ns/b.d&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3af95125686bb3393a41be2e1f0fecd04615870" translate="yes" xml:space="preserve">
          <source>File &lt;code&gt;ns/package.d&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1aadfe8f43e9471a7ccd0a6d9513aa2d158d8fc8" translate="yes" xml:space="preserve">
          <source>File &lt;code&gt;stderr&lt;/code&gt;</source>
          <target state="translated">Archivo &lt;code&gt;stderr&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f2d5fc4ef533b94b6bad75f0391ad7ad10de8f26" translate="yes" xml:space="preserve">
          <source>File &lt;code&gt;stdin&lt;/code&gt;</source>
          <target state="translated">Archivo &lt;code&gt;stdin&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="85e9228910eade205bba9f1037b88441eb129b20" translate="yes" xml:space="preserve">
          <source>File &lt;code&gt;stdout&lt;/code&gt;</source>
          <target state="translated">Archivo &lt;code&gt;stdout&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9483d4c2825aba0712cc0561ced9af3cb73ecdf9" translate="yes" xml:space="preserve">
          <source>File &lt;strong id=&quot;openNetwork&quot;&gt;openNetwork&lt;/strong&gt;(string host, ushort port);</source>
          <target state="translated">Archivo &lt;strong id=&quot;openNetwork&quot;&gt;openNetwork&lt;/strong&gt; (host de cadena, puerto ushort);</target>
        </trans-unit>
        <trans-unit id="ce4206968eedd48fffee1e859866cc73f7755263" translate="yes" xml:space="preserve">
          <source>File descriptor to associate with this &lt;code&gt;File&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e536d6d6e792234f9c45a8b85837120144d1507" translate="yes" xml:space="preserve">
          <source>File name to get times for.</source>
          <target state="translated">Nombre de archivo para obtener tiempos para.</target>
        </trans-unit>
        <trans-unit id="593c7807cce6682849c08e792d67a7b54a30c7c5" translate="yes" xml:space="preserve">
          <source>File names are case insensitive</source>
          <target state="translated">Los nombres de los archivos no distinguen entre mayúsculas y minúsculas</target>
        </trans-unit>
        <trans-unit id="bba1cee852025b35d3e3478cf86257fa54326950" translate="yes" xml:space="preserve">
          <source>File names are case sensitive</source>
          <target state="translated">Los nombres de los archivos son sensibles a las mayúsculas y minúsculas</target>
        </trans-unit>
        <trans-unit id="ddde036ce2875cbf396f907c8d72a294c865d6ee" translate="yes" xml:space="preserve">
          <source>File names on the DMD command line with the extension .ddoc are text files that are read and processed in order.</source>
          <target state="translated">Los nombres de los archivos en la línea de comando del DMD con la extensión .ddoc son archivos de texto que se leen y procesan en orden.</target>
        </trans-unit>
        <trans-unit id="7b51622761aa9ab4147a65c01ed7a2f997bd6b63" translate="yes" xml:space="preserve">
          <source>File names to dispatch</source>
          <target state="translated">Los nombres de los archivos a despachar</target>
        </trans-unit>
        <trans-unit id="ab2a2923359cc254d1142cb254fa079493ce8064" translate="yes" xml:space="preserve">
          <source>File opened that is not a database file</source>
          <target state="translated">Archivo abierto que no es un archivo de base de datos</target>
        </trans-unit>
        <trans-unit id="600941bc483d702b3e6700aa5c9df8eaacfc769f" translate="yes" xml:space="preserve">
          <source>File separator</source>
          <target state="translated">Separador de archivos</target>
        </trans-unit>
        <trans-unit id="b8751b87838fad8e9c09877c3fcf2d38b742badf" translate="yes" xml:space="preserve">
          <source>File that called &lt;code&gt;_d_HookTraceImpl&lt;/code&gt;</source>
          <target state="translated">Archivo que llam&amp;oacute; &lt;code&gt;_d_HookTraceImpl&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f6025d963ff7d5ab00dd321537b1088bcf0aa15c" translate="yes" xml:space="preserve">
          <source>File to read and split into its lines.</source>
          <target state="translated">Archivo para leer y dividir en sus líneas.</target>
        </trans-unit>
        <trans-unit id="4d239ce96517581903eea3ad6a5e5f8f129445d3" translate="yes" xml:space="preserve">
          <source>File to read lines from.</source>
          <target state="translated">Archivo para leer líneas de.</target>
        </trans-unit>
        <trans-unit id="2a39297edcbf92570f7009a9439afaa0ade4a510" translate="yes" xml:space="preserve">
          <source>File.ReadResult &lt;code&gt;readResult&lt;/code&gt;</source>
          <target state="translated">File.ReadResult &lt;code&gt;readResult&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9ba5924daeca1702606731ee6e33f3d6f5d8aeff" translate="yes" xml:space="preserve">
          <source>File/Folder name to get times for.</source>
          <target state="translated">Nombre de archivo/carpeta para obtener los tiempos de...</target>
        </trans-unit>
        <trans-unit id="b1281649a36423bcd13a1e5734562778e5a449fb" translate="yes" xml:space="preserve">
          <source>FileBuffer &lt;strong id=&quot;readFile&quot;&gt;readFile&lt;/strong&gt;(Loc loc, const(char)* filename);</source>
          <target state="translated">FileBuffer &lt;strong id=&quot;readFile&quot;&gt;readFile&lt;/strong&gt; (Loc loc, const (char) * filename);</target>
        </trans-unit>
        <trans-unit id="adb0ed28c9f6c61c2c5292ae0018a0dbd403f831" translate="yes" xml:space="preserve">
          <source>FileName &lt;strong id=&quot;setOutfilename&quot;&gt;setOutfilename&lt;/strong&gt;(const(char)[] name, const(char)[] dir, const(char)[] arg, const(char)[] ext);</source>
          <target state="translated">FileName &lt;strong id=&quot;setOutfilename&quot;&gt;setOutfilename&lt;/strong&gt; (const (char) [] nombre, const (char) [] dir, const (char) [] arg, const (char) [] ext);</target>
        </trans-unit>
        <trans-unit id="2cdd52dc9b2dc3c92972beb5c0ac073541e5c497" translate="yes" xml:space="preserve">
          <source>Filename NULL</source>
          <target state="translated">Nombre de archivo NULL</target>
        </trans-unit>
        <trans-unit id="6ce6c512ea433a7fc5c8841628e7696cd0ff7f2b" translate="yes" xml:space="preserve">
          <source>Files</source>
          <target state="translated">Files</target>
        </trans-unit>
        <trans-unit id="ac721011f794b0e8baf53f6a4a3ded5e6b587bdc" translate="yes" xml:space="preserve">
          <source>Files are dispatched in the various arrays (global.params.{ddocfiles,dllfiles,jsonfiles,etc...}) according to their extension. Binary files are added to libmodules.</source>
          <target state="translated">Los archivos se envían en las distintas matrices (global.params.{ddocfiles,dllfiles,jsonfiles,etc...})según su extensión.Los archivos binarios se añaden a los módulos de la biblioteca.</target>
        </trans-unit>
        <trans-unit id="3c458791c8711a4da04ab0a8024c24f9c4200994" translate="yes" xml:space="preserve">
          <source>Fill in new entries below here!</source>
          <target state="translated">Rellene las nuevas entradas aquí abajo!</target>
        </trans-unit>
        <trans-unit id="fec9699a2804108f414d1cbff9f937ab31b1059b" translate="yes" xml:space="preserve">
          <source>Fill in vtbl[] for base class based on member functions of class cd.</source>
          <target state="translated">Rellene vtbl[]para la clase base basada en las funciones de miembro de la clase cd.</target>
        </trans-unit>
        <trans-unit id="43d8814469e2dd06b7a4446e3a72fe3fb9b94b8b" translate="yes" xml:space="preserve">
          <source>Fill out remainder of elements[] with default initializers for fields[].</source>
          <target state="translated">Rellene el resto de los elementos[]con inicializadores predeterminados para los campos[].</target>
        </trans-unit>
        <trans-unit id="ce95d41d5dfbc8ae874f5267cf6c9192895a26f6" translate="yes" xml:space="preserve">
          <source>Fills a range (assumed uninitialized) with a value.</source>
          <target state="translated">Llena un rango (asumido no inicializado)con un valor.</target>
        </trans-unit>
        <trans-unit id="4af7384f97004098d0ba2d1490a26bd5ae8dc06c" translate="yes" xml:space="preserve">
          <source>Fills a range with a pattern, e.g., if &lt;code&gt;a = new int[3]&lt;/code&gt;, then &lt;code&gt;fill(a, 4)&lt;/code&gt; leaves &lt;code&gt;a = [4, 4, 4]&lt;/code&gt; and &lt;code&gt;fill(a, [3, 4])&lt;/code&gt; leaves &lt;code&gt;a = [3, 4, 3]&lt;/code&gt;.</source>
          <target state="translated">Rellena un rango con un patr&amp;oacute;n, por ejemplo, si &lt;code&gt;a = new int[3]&lt;/code&gt; , luego &lt;code&gt;fill(a, 4)&lt;/code&gt; deja &lt;code&gt;a = [4, 4, 4]&lt;/code&gt; y &lt;code&gt;fill(a, [3, 4])&lt;/code&gt; deja &lt;code&gt;a = [3, 4, 3]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="58c13531d89cbfd81b826ad0e0207a8e8f855efc" translate="yes" xml:space="preserve">
          <source>Fills in properties extractVersion, flags, compressionMethod, time, crc32, compressedSize, expandedSize, expandedData[], name[], extra[].</source>
          <target state="translated">Rellena las propiedades extractoVersión,banderas,compresiónMétodo,tiempo,crc32,comprimidoTamaño,expandidoTamaño,expandidoDatos[],nombre[],extra[].</target>
        </trans-unit>
        <trans-unit id="c839d156063c44cb328b154ceff7d45b6cd1f2d8" translate="yes" xml:space="preserve">
          <source>Fills in the properties data[], diskNumber, diskStartDir, numEntries, totalEntries, and directory[]. For each ArchiveMember, fills in properties crc32, compressedSize, compressedData[].</source>
          <target state="translated">Rellena las propiedades data[],diskNumber,diskStartDir,numEntries,totalEntries,y directory[].Para cada ArchiveMember,rellena las propiedades crc32,compressedSize,compressedData[].</target>
        </trans-unit>
        <trans-unit id="ac430f749392cd86ab81a1eba5a5fa6084a02035" translate="yes" xml:space="preserve">
          <source>Fills in the properties data[], diskNumber, diskStartDir, numEntries, totalEntries, comment[], and directory[]. For each ArchiveMember, fills in properties madeVersion, extractVersion, flags, compressionMethod, time, crc32, compressedSize, expandedSize, compressedData[], diskNumber, internalAttributes, externalAttributes, name[], extra[], comment[]. Use expand() to get the expanded data for each ArchiveMember.</source>
          <target state="translated">Rellena las propiedades data[],diskNumber,diskStartDir,numEntries,totalEntries,comment[],y directory[].Para cada ArchiveMember,rellena las propiedades madeVersion,extractVersion,flags,compressionMethod,time,crc32,compressedSize,expandedSize,compressedData[],diskNumber,internalAttributes,externalAttributes,name[],extra[],comment[].Use expand()para obtener los datos expandidos de cada ArchiveMember.</target>
        </trans-unit>
        <trans-unit id="46a5ea9f87c0b1df74d151c62691fe2ef4bb053c" translate="yes" xml:space="preserve">
          <source>Fills in the properties data[], totalEntries, and directory[]. For each ArchiveMember, fills in properties crc32, compressedSize, compressedData[].</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b346bd7916857edb9b3b4a990fd8d299ee339598" translate="yes" xml:space="preserve">
          <source>Fills in the properties data[], totalEntries, comment[], and directory[]. For each ArchiveMember, fills in properties madeVersion, extractVersion, flags, compressionMethod, time, crc32, compressedSize, expandedSize, compressedData[], internalAttributes, externalAttributes, name[], extra[], comment[]. Use expand() to get the expanded data for each ArchiveMember.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="753c7b4dfb03e4b323218bfbcf8e9ce9e83fd215" translate="yes" xml:space="preserve">
          <source>Filter (higher-order function)</source>
          <target state="translated">Filtro (función de orden superior)</target>
        </trans-unit>
        <trans-unit id="e010e248c9fcbc07279b28e2d9cf39a816edeedc" translate="yes" xml:space="preserve">
          <source>Filtering Log Messages</source>
          <target state="translated">Filtro de mensajes de registro</target>
        </trans-unit>
        <trans-unit id="b9cfd7e1924fe46ff476048bb232046b2445c30d" translate="yes" xml:space="preserve">
          <source>Filters an &lt;code&gt;AliasSeq&lt;/code&gt; using a template predicate. Returns an &lt;code&gt;AliasSeq&lt;/code&gt; of the elements which satisfy the predicate.</source>
          <target state="translated">Filtra un &lt;code&gt;AliasSeq&lt;/code&gt; utilizando un predicado de plantilla. Devuelve un &lt;code&gt;AliasSeq&lt;/code&gt; de los elementos que satisfacen el predicado.</target>
        </trans-unit>
        <trans-unit id="d3a871296194a1fb868a45ed782c53f0637a842f" translate="yes" xml:space="preserve">
          <source>Final Classes</source>
          <target state="translated">Clases finales</target>
        </trans-unit>
        <trans-unit id="c054c76415f8cf9cbfa3c705550abf7d2a659de6" translate="yes" xml:space="preserve">
          <source>Final Switch Statement</source>
          <target state="translated">Declaración final del cambio</target>
        </trans-unit>
        <trans-unit id="f28c69a57fd5a00b8c460d98af841dbdfc2cf776" translate="yes" xml:space="preserve">
          <source>Final classes cannot be subclassed:</source>
          <target state="translated">Las clases finales no pueden ser subclasificadas:</target>
        </trans-unit>
        <trans-unit id="ce6f1f9e3ddcc894278135e4f17b933043c105ab" translate="yes" xml:space="preserve">
          <source>Final variables cannot be directly mutated or rebound, but references reached through the variable are typed with their original mutability. It is equivalent to &lt;code&gt;final&lt;/code&gt; variables in D1 and Java, as well as &lt;code&gt;readonly&lt;/code&gt; variables in C#.</source>
          <target state="translated">Las variables finales no se pueden mutar directamente o rebotar, pero las referencias alcanzadas a trav&amp;eacute;s de la variable se escriben con su mutabilidad original. Es equivalente a las variables &lt;code&gt;final&lt;/code&gt; es en D1 y Java, as&amp;iacute; como a las variables de &lt;code&gt;readonly&lt;/code&gt; en C #.</target>
        </trans-unit>
        <trans-unit id="0e2b4800b08f795f43f812ffedaf0e687b6d6874" translate="yes" xml:space="preserve">
          <source>Final!T &lt;strong id=&quot;makeFinal&quot;&gt;makeFinal&lt;/strong&gt;(T)(T t);</source>
          <target state="translated">Final! T &lt;strong id=&quot;makeFinal&quot;&gt;makeFinal&lt;/strong&gt; (T) (T t);</target>
        </trans-unit>
        <trans-unit id="9e3e2e2f543272fd4cd5df84fdd43fdaeaef1da0" translate="yes" xml:space="preserve">
          <source>Final_Punctuation</source>
          <target state="translated">Final_Punctuation</target>
        </trans-unit>
        <trans-unit id="5651425846864705935b85d871957e1ebe78f459" translate="yes" xml:space="preserve">
          <source>Finalization hook, called FOR each thread. No assumptions about module initialization state should be made.</source>
          <target state="translated">Gancho de finalización,llamado PARA cada hilo.No se deben hacer suposiciones sobre el estado de inicialización del módulo.</target>
        </trans-unit>
        <trans-unit id="3c0d51279d82c302cafb15142125c52a7d750035" translate="yes" xml:space="preserve">
          <source>Finalize A Dynamic String</source>
          <target state="translated">Finalizar una cadena dinámica</target>
        </trans-unit>
        <trans-unit id="c5174f6c9ec806f743432561800d7fb3cdce6c10" translate="yes" xml:space="preserve">
          <source>Finalize the data in this block on collect.</source>
          <target state="translated">Finalizar los datos de este bloque en la recolección.</target>
        </trans-unit>
        <trans-unit id="1487ab4833797a8fe86e9e688a3c4af63df81678" translate="yes" xml:space="preserve">
          <source>Finalizes the computation of the hash and returns the computed value. Note that &lt;code&gt;finish&lt;/code&gt; can be called only once and that no subsequent calls to &lt;code&gt;put&lt;/code&gt; is allowed.</source>
          <target state="translated">Finaliza el c&amp;aacute;lculo del hash y devuelve el valor calculado. Tenga en cuenta que solo se puede llamar a &lt;code&gt;finish&lt;/code&gt; una vez y que no se permiten llamadas posteriores para &lt;code&gt;put&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="edf7957cb21bb43e8c1e9e16262a7f52655c315a" translate="yes" xml:space="preserve">
          <source>Finally, any combination of integral offsets and tuples composed of two integral offsets can be passed in:</source>
          <target state="translated">Por último,se puede pasar cualquier combinación de compensaciones integrales y tuplas compuestas de dos compensaciones integrales:</target>
        </trans-unit>
        <trans-unit id="8318badcbf1d40a64d4bffbf97bd0efd4cae1f40" translate="yes" xml:space="preserve">
          <source>Finally, if the user-defined type is to be used as a key in the built-in associative arrays, then the programmer must ensure that the semantics of &lt;code&gt;opEquals&lt;/code&gt; and &lt;code&gt;toHash&lt;/code&gt; are consistent. If not, the associative array may not work in the expected manner.</source>
          <target state="translated">Finalmente, si el tipo definido por el usuario se va a utilizar como una clave en las matrices asociativas integradas, el programador debe asegurarse de que la sem&amp;aacute;ntica de &lt;code&gt;opEquals&lt;/code&gt; y &lt;code&gt;toHash&lt;/code&gt; sea ​​coherente. De lo contrario, la matriz asociativa puede no funcionar de la manera esperada.</target>
        </trans-unit>
        <trans-unit id="63ebc2a4bae0f29d985262d1e0a7882d311b33e0" translate="yes" xml:space="preserve">
          <source>Finally, it includes some convenience functions for manipulating ranges:</source>
          <target state="translated">Por último,incluye algunas funciones de conveniencia para manipular los rangos:</target>
        </trans-unit>
        <trans-unit id="957ad37fd6f0cb718a9dbc02f2623b3113168bed" translate="yes" xml:space="preserve">
          <source>Finally, there is no guarantee that using &lt;code&gt;FPTemporary!F&lt;/code&gt; will always be fastest, as the speed of floating-point calculations depends on very many factors.</source>
          <target state="translated">Finalmente, no hay garant&amp;iacute;a de que usar &lt;code&gt;FPTemporary!F&lt;/code&gt; siempre sea m&amp;aacute;s r&amp;aacute;pido, ya que la velocidad de los c&amp;aacute;lculos de punto flotante depende de muchos factores.</target>
        </trans-unit>
        <trans-unit id="1e7650a8c491fd4a8a63008ab0b8ff54cd68ebd3" translate="yes" xml:space="preserve">
          <source>FinallyStatement</source>
          <target state="translated">FinallyStatement</target>
        </trans-unit>
        <trans-unit id="af66114eea030ebc5f2464aa23997a938e455374" translate="yes" xml:space="preserve">
          <source>Find &lt;code&gt;ident&lt;/code&gt; in an array of identifiers.</source>
          <target state="translated">Encuentra &lt;code&gt;ident&lt;/code&gt; en una matriz de identificadores.</target>
        </trans-unit>
        <trans-unit id="88937cdca6cc08c5d7dbfa18ae72ed67be952ed2" translate="yes" xml:space="preserve">
          <source>Find &lt;code&gt;value&lt;/code&gt; among &lt;code&gt;values&lt;/code&gt;, returning the 1-based index of the first matching value in &lt;code&gt;values&lt;/code&gt;, or &lt;code&gt;0&lt;/code&gt; if &lt;code&gt;value&lt;/code&gt; is not among &lt;code&gt;values&lt;/code&gt;. The predicate &lt;code&gt;pred&lt;/code&gt; is used to compare values, and uses equality by default.</source>
          <target state="translated">Encuentre el &lt;code&gt;value&lt;/code&gt; entre &lt;code&gt;values&lt;/code&gt; , devolviendo el &amp;iacute;ndice basado en 1 del primer valor coincidente en &lt;code&gt;values&lt;/code&gt; , o &lt;code&gt;0&lt;/code&gt; si el &lt;code&gt;value&lt;/code&gt; no est&amp;aacute; entre &lt;code&gt;values&lt;/code&gt; . El predicado &lt;code&gt;pred&lt;/code&gt; se usa para comparar valores y usa la igualdad de forma predeterminada.</target>
        </trans-unit>
        <trans-unit id="545769c2d22b47615aaec611ab60b4390f1d36ac" translate="yes" xml:space="preserve">
          <source>Find The Database Handle Of A Prepared Statement</source>
          <target state="translated">Encuentra la base de datos del manejo de una declaración preparada</target>
        </trans-unit>
        <trans-unit id="8ed4d78384609c747738b51bd99d57a7cbe3bca7" translate="yes" xml:space="preserve">
          <source>Find a common root between &lt;code&gt;path&lt;/code&gt; and &lt;code&gt;base&lt;/code&gt;. If there is no common root, return &lt;code&gt;path&lt;/code&gt; unaltered.</source>
          <target state="translated">Encuentre una ra&amp;iacute;z com&amp;uacute;n entre &lt;code&gt;path&lt;/code&gt; y &lt;code&gt;base&lt;/code&gt; . Si no hay una ra&amp;iacute;z com&amp;uacute;n, regrese la &lt;code&gt;path&lt;/code&gt; sin alterar.</target>
        </trans-unit>
        <trans-unit id="3cc4bdb526e48e9b0169cef3864d16c67f747c87" translate="yes" xml:space="preserve">
          <source>Find a real minimum of a real function &lt;code&gt;f(x)&lt;/code&gt; via bracketing. Given a function &lt;code&gt;f&lt;/code&gt; and a range &lt;code&gt;(ax .. bx)&lt;/code&gt;, returns the value of &lt;code&gt;x&lt;/code&gt; in the range which is closest to a minimum of &lt;code&gt;f(x)&lt;/code&gt;. &lt;code&gt;f&lt;/code&gt; is never evaluted at the endpoints of &lt;code&gt;ax&lt;/code&gt; and &lt;code&gt;bx&lt;/code&gt;. If &lt;code&gt;f(x)&lt;/code&gt; has more than one minimum in the range, one will be chosen arbitrarily. If &lt;code&gt;f(x)&lt;/code&gt; returns NaN or -Infinity, &lt;code&gt;(x, f(x), NaN)&lt;/code&gt; will be returned; otherwise, this algorithm is guaranteed to succeed.</source>
          <target state="translated">Encuentre un m&amp;iacute;nimo real de una funci&amp;oacute;n real &lt;code&gt;f(x)&lt;/code&gt; trav&amp;eacute;s del horquillado. Dada una funci&amp;oacute;n &lt;code&gt;f&lt;/code&gt; y un rango &lt;code&gt;(ax .. bx)&lt;/code&gt; , devuelve el valor de &lt;code&gt;x&lt;/code&gt; en el rango m&amp;aacute;s cercano a un m&amp;iacute;nimo de &lt;code&gt;f(x)&lt;/code&gt; . &lt;code&gt;f&lt;/code&gt; nunca se eval&amp;uacute;a en los puntos finales de &lt;code&gt;ax&lt;/code&gt; y &lt;code&gt;bx&lt;/code&gt; . Si &lt;code&gt;f(x)&lt;/code&gt; tiene m&amp;aacute;s de un m&amp;iacute;nimo en el rango, se elegir&amp;aacute; uno arbitrariamente. Si &lt;code&gt;f(x)&lt;/code&gt; devuelve NaN o -Infinity, &lt;code&gt;(x, f(x), NaN)&lt;/code&gt; se devolver&amp;aacute;; de lo contrario, este algoritmo est&amp;aacute; garantizado para tener &amp;eacute;xito.</target>
        </trans-unit>
        <trans-unit id="dc439799cd4737f8236f05600fc64a52e0bdee1d" translate="yes" xml:space="preserve">
          <source>Find a real root of a real function f(x) via bracketing.</source>
          <target state="translated">Encuentra una raíz real de una función real f(x)entre paréntesis.</target>
        </trans-unit>
        <trans-unit id="d9ea8a7553428e4555c42a356e28f37d1f30dc20" translate="yes" xml:space="preserve">
          <source>Find all instance fields, then push them into &lt;code&gt;fields&lt;/code&gt;.</source>
          <target state="translated">Encuentre todos los campos de instancia, luego emp&amp;uacute;jelos a los &lt;code&gt;fields&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8f0f2515c2b37286fa318cf443dfdda11744bc3e" translate="yes" xml:space="preserve">
          <source>Find all variables accessed by this delegate that are in functions enclosing it.</source>
          <target state="translated">Encuentra todas las variables a las que ha accedido este delegado y que se encuentran en las funciones que lo rodean.</target>
        </trans-unit>
        <trans-unit id="41ae1d4488620fcf9a1fa1a9eea694e8dd8ef394" translate="yes" xml:space="preserve">
          <source>Find function in overload list that exactly matches t.</source>
          <target state="translated">Busca la función en la lista de sobrecarga que coincide exactamente con t.</target>
        </trans-unit>
        <trans-unit id="edff7cacecc816c7b2bf341caacbadeda732cdfa" translate="yes" xml:space="preserve">
          <source>Find function in overload list that matches to the 'this' modifier. There's four result types.</source>
          <target state="translated">Busca la función en la lista de sobrecarga que coincida con el modificador &quot;esto&quot;.Hay cuatro tipos de resultados.</target>
        </trans-unit>
        <trans-unit id="f0c98c985999ca34facaa820a09d254832cfa98f" translate="yes" xml:space="preserve">
          <source>Find index of function in vtbl[0..dim] that this function overrides. Prefer an exact match to a covariant one.</source>
          <target state="translated">Encuentra el índice de la función en vtbl[0..dim]que esta función anula.Prefiere una coincidencia exacta con una covariante.</target>
        </trans-unit>
        <trans-unit id="8a869c31c58148141fe2bb0252ad8f9ecb8a528b" translate="yes" xml:space="preserve">
          <source>Find last statement in a sequence of statements.</source>
          <target state="translated">Encuentra la última declaración en una secuencia de declaraciones.</target>
        </trans-unit>
        <trans-unit id="d69cdad0f7e718c4389bc96b6e8484b75621891a" translate="yes" xml:space="preserve">
          <source>Find root of a real function f(x) by bracketing, allowing the termination condition to be specified.</source>
          <target state="translated">Encontrar la raíz de una función real f(x)entre paréntesis,lo que permite especificar la condición de terminación.</target>
        </trans-unit>
        <trans-unit id="2fb393ab419b2e3f0988a888618d55945a606a1c" translate="yes" xml:space="preserve">
          <source>Find template declaration corresponding to template instance.</source>
          <target state="translated">Encuentra la declaración de la plantilla correspondiente a la instancia de la plantilla.</target>
        </trans-unit>
        <trans-unit id="e56b93cf2f4450a7eaf19462aacfb88f33166737" translate="yes" xml:space="preserve">
          <source>Find the config file</source>
          <target state="translated">Encuentra el archivo de configuración</target>
        </trans-unit>
        <trans-unit id="d2dd908c00ec01e1d2253d53d434daf6a1857fe3" translate="yes" xml:space="preserve">
          <source>Find the first (leftmost) slice of the &lt;code&gt;input&lt;/code&gt; that matches the pattern &lt;code&gt;re&lt;/code&gt;. This function picks the most suitable regular expression engine depending on the pattern properties.</source>
          <target state="translated">Encuentre la primera porci&amp;oacute;n (m&amp;aacute;s a la izquierda) de la &lt;code&gt;input&lt;/code&gt; que coincida con el patr&amp;oacute;n &lt;code&gt;re&lt;/code&gt; . Esta funci&amp;oacute;n selecciona el motor de expresi&amp;oacute;n regular m&amp;aacute;s adecuado seg&amp;uacute;n las propiedades del patr&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="b74109ae76fb090044e9df5875f1c38828f427c5" translate="yes" xml:space="preserve">
          <source>Find the first non-comma expression.</source>
          <target state="translated">Encuentra la primera expresión no-comunitaria.</target>
        </trans-unit>
        <trans-unit id="6cc3fb2f138f676cf6a94d5a2c6b5519efc51d83" translate="yes" xml:space="preserve">
          <source>Find the last non-comma expression.</source>
          <target state="translated">Encuentra la última expresión no-comunitaria.</target>
        </trans-unit>
        <trans-unit id="19feb6b0e0b231038a55e2bf709f34b7a893df27" translate="yes" xml:space="preserve">
          <source>Find virtual function matching identifier and type. Used to build virtual function tables for interface implementations.</source>
          <target state="translated">Encuentra la función virtual que coincida con el identificador y el tipo.Se utiliza para construir tablas de funciones virtuales para implementaciones de interfaz.</target>
        </trans-unit>
        <trans-unit id="1f779fad43ff937e8c60b5135580f17f7fea9279" translate="yes" xml:space="preserve">
          <source>Finds &lt;code&gt;needle&lt;/code&gt; in &lt;code&gt;haystack&lt;/code&gt; and positions &lt;code&gt;haystack&lt;/code&gt; right after the first occurrence of &lt;code&gt;needle&lt;/code&gt;.</source>
          <target state="translated">Los hallazgos &lt;code&gt;needle&lt;/code&gt; en &lt;code&gt;haystack&lt;/code&gt; y posiciones &lt;code&gt;haystack&lt;/code&gt; justo despu&amp;eacute;s de la primera ocurrencia de &lt;code&gt;needle&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dffa198dc7c767b46fa65ebc9d63a3a8195c5965" translate="yes" xml:space="preserve">
          <source>Finds &lt;code&gt;needle&lt;/code&gt; in &lt;code&gt;haystack&lt;/code&gt; efficiently using the &lt;a href=&quot;https://en.wikipedia.org/wiki/Boyer%E2%80%93Moore_string_search_algorithm&quot;&gt; Boyer-Moore&lt;/a&gt; method.</source>
          <target state="translated">Encuentra la &lt;code&gt;needle&lt;/code&gt; en el &lt;code&gt;haystack&lt;/code&gt; eficiente utilizando el m&amp;eacute;todo &lt;a href=&quot;https://en.wikipedia.org/wiki/Boyer%E2%80%93Moore_string_search_algorithm&quot;&gt;Boyer-Moore&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d4aab22f9bf13ade683a53be805bd158b6756b54" translate="yes" xml:space="preserve">
          <source>Finds a &lt;code&gt;dmd.conf&lt;/code&gt; and parses it for import paths. This depends on the &lt;code&gt;$DMD&lt;/code&gt; environment variable. If &lt;code&gt;$DMD&lt;/code&gt; is set to &lt;code&gt;ldmd&lt;/code&gt;, it will try to detect and parse a &lt;code&gt;ldc2.conf&lt;/code&gt; instead.</source>
          <target state="translated">Encuentra un &lt;code&gt;dmd.conf&lt;/code&gt; y lo analiza para las rutas de importaci&amp;oacute;n. Esto depende de la variable de entorno &lt;code&gt;$DMD&lt;/code&gt; . Si &lt;code&gt;$DMD&lt;/code&gt; se establece en &lt;code&gt;ldmd&lt;/code&gt; , intentar&amp;aacute; detectar y analizar un &lt;code&gt;ldc2.conf&lt;/code&gt; en su lugar.</target>
        </trans-unit>
        <trans-unit id="db4503384752d61843483992d0609b3513a269cd" translate="yes" xml:space="preserve">
          <source>Finds an individual element in an &lt;a href=&quot;std_range_primitives#isInputRange&quot;&gt;input range&lt;/a&gt;. Elements of &lt;code&gt;haystack&lt;/code&gt; are compared with &lt;code&gt;needle&lt;/code&gt; by using predicate &lt;code&gt;pred&lt;/code&gt; with &lt;code&gt;pred(haystack.front, needle)&lt;/code&gt;. &lt;code&gt;find&lt;/code&gt; performs &amp;Omicron;(&lt;code&gt;walkLength(haystack)&lt;/code&gt;) evaluations of &lt;code&gt;pred&lt;/code&gt;.</source>
          <target state="translated">Encuentra un elemento individual en un &lt;a href=&quot;std_range_primitives#isInputRange&quot;&gt;rango de entrada&lt;/a&gt; . Los elementos del &lt;code&gt;haystack&lt;/code&gt; se comparan con la &lt;code&gt;needle&lt;/code&gt; utilizando el predicado &lt;code&gt;pred&lt;/code&gt; con &lt;code&gt;pred(haystack.front, needle)&lt;/code&gt; . &lt;code&gt;find&lt;/code&gt; realiza &amp;Omicron; ( &lt;code&gt;walkLength(haystack)&lt;/code&gt; ) evaluaciones de &lt;code&gt;pred&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="494b5c575695991289f1af6c553e989e7554d283" translate="yes" xml:space="preserve">
          <source>Finds multiple attributes</source>
          <target state="translated">Encuentra múltiples atributos</target>
        </trans-unit>
        <trans-unit id="dc6ca4363cb66199d14c81638ae0bacb275a040f" translate="yes" xml:space="preserve">
          <source>Finds nothing if there is no member with specific UDA</source>
          <target state="translated">No encuentra nada si no hay un miembro con un UDA específico</target>
        </trans-unit>
        <trans-unit id="372b352a9faabc1d4848c96cff7df7512a64b542" translate="yes" xml:space="preserve">
          <source>Finds the mean (colloquially known as the average) of a range.</source>
          <target state="translated">Encuentra la media (coloquialmente conocida como el promedio)de un rango.</target>
        </trans-unit>
        <trans-unit id="acc839859781d1a6fe4c1aa11b5d0cad6c9f277f" translate="yes" xml:space="preserve">
          <source>Finds the quotient and remainder for the given dividend and divisor in one operation.</source>
          <target state="translated">Encuentra el cociente y el resto para el dividendo dado y el divisor en una sola operación.</target>
        </trans-unit>
        <trans-unit id="1f42db37e0be1957bbb7a73bd93bbacc6f6971b6" translate="yes" xml:space="preserve">
          <source>Finds two or more &lt;code&gt;needles&lt;/code&gt; into a &lt;code&gt;haystack&lt;/code&gt;. The predicate &lt;code&gt;pred&lt;/code&gt; is used throughout to compare elements. By default, elements are compared for equality.</source>
          <target state="translated">Encuentra dos o m&amp;aacute;s &lt;code&gt;needles&lt;/code&gt; en un &lt;code&gt;haystack&lt;/code&gt; . El predicado &lt;code&gt;pred&lt;/code&gt; se usa para comparar elementos. Por defecto, los elementos se comparan para la igualdad.</target>
        </trans-unit>
        <trans-unit id="e49c750f94dfbe0f01c55cba7ce3a3fca1cb43ad" translate="yes" xml:space="preserve">
          <source>Finish and return completed data structure.</source>
          <target state="translated">Termine y devuelva la estructura de datos completada.</target>
        </trans-unit>
        <trans-unit id="910917ab298e1770af3ee0a6c87f4500d8fc3b35" translate="yes" xml:space="preserve">
          <source>First calls &lt;code&gt;detach&lt;/code&gt; (throwing on failure), and then attempts to associate the given Windows &lt;code&gt;HANDLE&lt;/code&gt; with the &lt;code&gt;File&lt;/code&gt;. The mode must be compatible with the access attributes of the handle. Windows only.</source>
          <target state="translated">Primero llama a &lt;code&gt;detach&lt;/code&gt; (lanzar en caso de error), y luego intenta asociar el &lt;code&gt;HANDLE&lt;/code&gt; Windows dado con el &lt;code&gt;File&lt;/code&gt; . El modo debe ser compatible con los atributos de acceso del identificador. Solo Windows</target>
        </trans-unit>
        <trans-unit id="dcaf56d0ddc5fc561f47a3812f5bb4243cf6c321" translate="yes" xml:space="preserve">
          <source>First calls &lt;code&gt;detach&lt;/code&gt; (throwing on failure), and then attempts to associate the given file descriptor with the &lt;code&gt;File&lt;/code&gt;. The mode must be compatible with the mode of the file descriptor.</source>
          <target state="translated">Primero llama a &lt;code&gt;detach&lt;/code&gt; (lanzar en caso de error), y luego intenta asociar el descriptor de archivo dado con el &lt;code&gt;File&lt;/code&gt; . El modo debe ser compatible con el modo del descriptor de archivo.</target>
        </trans-unit>
        <trans-unit id="7f59c090d80233a5077fc16f2881b79e76399aaf" translate="yes" xml:space="preserve">
          <source>First calls &lt;code&gt;detach&lt;/code&gt; (throwing on failure), then attempts to associate the given file descriptor with the &lt;code&gt;File&lt;/code&gt;, and sets the file's name to &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9a4e48dd9c9e9c16b3c2bdc21882e910e46f414" translate="yes" xml:space="preserve">
          <source>First checks whether there's enough slack memory preallocated for &lt;code&gt;b&lt;/code&gt; by evaluating &lt;code&gt;b.length + delta &amp;lt;= goodAllocSize(b.length)&lt;/code&gt;. If that's the case, expands &lt;code&gt;b&lt;/code&gt; in place. Otherwise, attempts to use &lt;code&gt;parent.expand&lt;/code&gt; appropriately if present.</source>
          <target state="translated">Primero verifica si hay suficiente memoria floja preasignada para &lt;code&gt;b&lt;/code&gt; mediante la evaluaci&amp;oacute;n de &lt;code&gt;b.length + delta &amp;lt;= goodAllocSize(b.length)&lt;/code&gt; . Si ese es el caso, expande &lt;code&gt;b&lt;/code&gt; en su lugar. De lo contrario, intenta usar &lt;code&gt;parent.expand&lt;/code&gt; apropiadamente si est&amp;aacute; presente.</target>
        </trans-unit>
        <trans-unit id="232d9e5b94637d4aff68a5613d4eb2c442d5e710" translate="yes" xml:space="preserve">
          <source>First element of range is the whole match.</source>
          <target state="translated">El primer elemento de alcance es todo el partido.</target>
        </trans-unit>
        <trans-unit id="19eb5d2bea28d68e63b34cd9da02ecb96eb4de74" translate="yes" xml:space="preserve">
          <source>First element, null if *plist is null</source>
          <target state="translated">Primer elemento,nulo si la lista es nula</target>
        </trans-unit>
        <trans-unit id="56336174ab5678a8f418a8043d57e8c559fdf20f" translate="yes" xml:space="preserve">
          <source>First enum member value</source>
          <target state="translated">El valor del primer miembro de la lista</target>
        </trans-unit>
        <trans-unit id="61c434e488f86b8e6b440a94d71c3f4ce5c76af6" translate="yes" xml:space="preserve">
          <source>First item to compare.</source>
          <target state="translated">El primer artículo para comparar.</target>
        </trans-unit>
        <trans-unit id="eb036d61b03c52aec70ded61cf94c0bb2799a5dc" translate="yes" xml:space="preserve">
          <source>First, &lt;code&gt;S(1)&lt;/code&gt; and &lt;code&gt;S(2)&lt;/code&gt; are evaluated in lexical order. Per the rules, they will be destroyed at the end of the full expression and in reverse order. The comparison &lt;code&gt;S(1) == S(2)&lt;/code&gt; yields &lt;code&gt;false&lt;/code&gt;, so the right-hand side of the &lt;code&gt;||&lt;/code&gt; is evaluated causing &lt;code&gt;S(3)&lt;/code&gt; and &lt;code&gt;S(4)&lt;/code&gt; to be evaluated, also in lexical order. However, their destruction is not deferred to the end of the full expression. Instead, &lt;code&gt;S(4)&lt;/code&gt; and then &lt;code&gt;S(3)&lt;/code&gt; are destroyed at the end of the &lt;code&gt;||&lt;/code&gt; expression. Following their destruction, &lt;code&gt;S(5)&lt;/code&gt; and &lt;code&gt;S(6)&lt;/code&gt; are constructed in lexical order. Again they are not destroyed at the end of the full expression, but right at the end of the &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; expression. Consequently, the destruction of &lt;code&gt;S(6)&lt;/code&gt; and &lt;code&gt;S(5)&lt;/code&gt; is carried before that of &lt;code&gt;S(2)&lt;/code&gt; and &lt;code&gt;S(1)&lt;/code&gt;.</source>
          <target state="translated">Primero, &lt;code&gt;S(1)&lt;/code&gt; y &lt;code&gt;S(2)&lt;/code&gt; se eval&amp;uacute;an en orden l&amp;eacute;xico. Seg&amp;uacute;n las reglas, ser&amp;aacute;n destruidos al final de la expresi&amp;oacute;n completa y en orden inverso. La comparaci&amp;oacute;n &lt;code&gt;S(1) == S(2)&lt;/code&gt; produce &lt;code&gt;false&lt;/code&gt; , por lo que el lado derecho de &lt;code&gt;||&lt;/code&gt; se eval&amp;uacute;a haciendo que se eval&amp;uacute;en &lt;code&gt;S(3)&lt;/code&gt; y &lt;code&gt;S(4)&lt;/code&gt; , tambi&amp;eacute;n en orden l&amp;eacute;xico. Sin embargo, su destrucci&amp;oacute;n no se aplaza hasta el final de la expresi&amp;oacute;n completa. En cambio, &lt;code&gt;S(4)&lt;/code&gt; y luego &lt;code&gt;S(3)&lt;/code&gt; se destruyen al final de &lt;code&gt;||&lt;/code&gt; expresi&amp;oacute;n. Despu&amp;eacute;s de su destrucci&amp;oacute;n, &lt;code&gt;S(5)&lt;/code&gt; y &lt;code&gt;S(6)&lt;/code&gt; Se construyen en orden l&amp;eacute;xico. Nuevamente, no se destruyen al final de la expresi&amp;oacute;n completa, sino justo al final de la expresi&amp;oacute;n &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; . En consecuencia, la destrucci&amp;oacute;n de &lt;code&gt;S(6)&lt;/code&gt; y &lt;code&gt;S(5)&lt;/code&gt; se realiza antes que la de &lt;code&gt;S(2)&lt;/code&gt; y &lt;code&gt;S(1)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="35821ff9eaf82cccb4cd374c06db922677ab7c04" translate="yes" xml:space="preserve">
          <source>First, an instance of the reference-counted HTTP struct is created. Then the custom delegates are set. These will be called whenever the HTTP instance receives a header and a data buffer, respectively. In this simple example, the headers are written to stdout and the data is ignored. If the request should be stopped before it has finished then return something less than data.length from the onReceive callback. See &lt;a href=&quot;#onReceiveHeader&quot;&gt;&lt;code&gt;onReceiveHeader&lt;/code&gt;&lt;/a&gt;/&lt;a href=&quot;#onReceive&quot;&gt;&lt;code&gt;onReceive&lt;/code&gt;&lt;/a&gt; for more information. Finally the HTTP request is effected by calling perform(), which is synchronous.</source>
          <target state="translated">Primero, se crea una instancia de la estructura HTTP contada por referencia. Luego se establecen los delegados personalizados. Se invocar&amp;aacute;n cada vez que la instancia HTTP reciba un encabezado y un b&amp;uacute;fer de datos, respectivamente. En este simple ejemplo, los encabezados se escriben en stdout y los datos se ignoran. Si la solicitud se debe detener antes de que finalice, devuelva algo menos que data.length de la devoluci&amp;oacute;n de llamada onReceive. Consulte &lt;a href=&quot;#onReceiveHeader&quot;&gt; &lt;code&gt;onReceiveHeader&lt;/code&gt; &lt;/a&gt; / &lt;a href=&quot;#onReceive&quot;&gt; &lt;code&gt;onReceive&lt;/code&gt; &lt;/a&gt; para obtener m&amp;aacute;s informaci&amp;oacute;n. Finalmente, la solicitud HTTP se efect&amp;uacute;a llamando a perform (), que es sincr&amp;oacute;nico.</target>
        </trans-unit>
        <trans-unit id="ddff6cdec0a5bb1099424737e7832e8c05999395" translate="yes" xml:space="preserve">
          <source>First, the &lt;a href=&quot;type#usual-arithmetic-conversions&quot;&gt;Usual Arithmetic Conversions&lt;/a&gt; are done on the operands. The result type of a relational expression is &lt;code&gt;bool&lt;/code&gt;.</source>
          <target state="translated">Primero, las &lt;a href=&quot;type#usual-arithmetic-conversions&quot;&gt;conversiones aritm&amp;eacute;ticas usuales&lt;/a&gt; se realizan en los operandos. El tipo de resultado de una expresi&amp;oacute;n relacional es &lt;code&gt;bool&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4957bf53799feeb05b63a3d6e973fd8fa8760f6f" translate="yes" xml:space="preserve">
          <source>FirstExp</source>
          <target state="translated">FirstExp</target>
        </trans-unit>
        <trans-unit id="5613e8ed3a8c422a59b73ed2d59f778f438baaf8" translate="yes" xml:space="preserve">
          <source>Fit elements[] to the corresponding types of the struct's fields.</source>
          <target state="translated">Ajustar los elementos[]a los tipos correspondientes de los campos de la estructura.</target>
        </trans-unit>
        <trans-unit id="2fdb1b8027c76adc716597ecea40dafd0a1d1761" translate="yes" xml:space="preserve">
          <source>Fixed-size allocation (unlikely to get reallocated later). Examples: &lt;code&gt;int&lt;/code&gt;, &lt;code&gt;double&lt;/code&gt;, any &lt;code&gt;struct&lt;/code&gt; or &lt;code&gt;class&lt;/code&gt; type. By default it is assumed that the allocation is variable-size, i.e. susceptible to later reallocation (for example all array types). This flag is advisory, i.e. in-place resizing may be attempted for &lt;code&gt;fixedSize&lt;/code&gt; allocations and may succeed. The flag is just a hint to the compiler it may use allocation strategies that work well with objects of fixed size.</source>
          <target state="translated">Asignaci&amp;oacute;n de tama&amp;ntilde;o fijo (es poco probable que se reasigne m&amp;aacute;s tarde). Ejemplos: &lt;code&gt;int&lt;/code&gt; , &lt;code&gt;double&lt;/code&gt; , cualquier &lt;code&gt;struct&lt;/code&gt; o tipo de &lt;code&gt;class&lt;/code&gt; . Por defecto, se supone que la asignaci&amp;oacute;n es de tama&amp;ntilde;o variable, es decir, susceptible de reasignaci&amp;oacute;n posterior (por ejemplo, todos los tipos de matriz). Este indicador es informativo, es decir, se puede intentar cambiar el tama&amp;ntilde;o en el lugar para asignaciones de tama&amp;ntilde;o &lt;code&gt;fixedSize&lt;/code&gt; y puede tener &amp;eacute;xito. El indicador es solo una pista para el compilador, puede usar estrategias de asignaci&amp;oacute;n que funcionen bien con objetos de tama&amp;ntilde;o fijo.</target>
        </trans-unit>
        <trans-unit id="a774409a00c21de377cf8ed5c6a56b8547973042" translate="yes" xml:space="preserve">
          <source>Flag</source>
          <target state="translated">Flag</target>
        </trans-unit>
        <trans-unit id="6349adf8f4924cf71432b2cc8b99298a02da104f" translate="yes" xml:space="preserve">
          <source>Flag for indicating if the isEmail function should perform a DNS check or not.</source>
          <target state="translated">Bandera para indicar si la función isEmail debe realizar una comprobación del DNS o no.</target>
        </trans-unit>
        <trans-unit id="01fd2d670ffad32f041db95fdb5fd34e662c1fd5" translate="yes" xml:space="preserve">
          <source>Flag indicating if help was requested</source>
          <target state="translated">Bandera que indica si se solicitó ayuda</target>
        </trans-unit>
        <trans-unit id="4839649a06c4517e676f395e7fb017b70b5e26a6" translate="yes" xml:space="preserve">
          <source>Flag indicating whether a search is case-sensitive.</source>
          <target state="translated">Bandera que indica si una búsqueda distingue entre mayúsculas y minúsculas.</target>
        </trans-unit>
        <trans-unit id="728d7e2f5a2090a340dd62e4890170496eb26f90" translate="yes" xml:space="preserve">
          <source>Flag to control rethrow behavior of &lt;code&gt;&lt;a href=&quot;#call&quot;&gt;call&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">Marcador para controlar el comportamiento de repetici&amp;oacute;n de &lt;code&gt;&lt;a href=&quot;#call&quot;&gt;call&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e2bb64de167476df8d3672619e1590b0a282bc6b" translate="yes" xml:space="preserve">
          <source>Flag to specify whether or not an exception is thrown on error.</source>
          <target state="translated">Bandera para especificar si una excepción es lanzada por error o no.</target>
        </trans-unit>
        <trans-unit id="c2cc357fb7c03c09f92dcb1aaffc28e51837dbc6" translate="yes" xml:space="preserve">
          <source>Flag used by &lt;a href=&quot;#resolveFuncCall&quot;&gt;&lt;code&gt;resolveFuncCall&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Indicador utilizado por &lt;a href=&quot;#resolveFuncCall&quot;&gt; &lt;code&gt;resolveFuncCall&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="dfa1ebe73458327f2f1b2331e7d2bc64bda02225" translate="yes" xml:space="preserve">
          <source>Flag!&quot;&lt;strong id=&quot;each&quot;&gt;each&lt;/strong&gt;&quot; &lt;strong id=&quot;each&quot;&gt;each&lt;/strong&gt;(Iterable)(auto ref Iterable r)</source>
          <target state="translated">Marcar &quot; &lt;strong id=&quot;each&quot;&gt;cada&lt;/strong&gt; &quot; &lt;strong id=&quot;each&quot;&gt;cada uno&lt;/strong&gt; (Iterable) (auto ref Iterable r)</target>
        </trans-unit>
        <trans-unit id="2e29bfd584368e0b6c450b93dff8e2b4b7d7e79b" translate="yes" xml:space="preserve">
          <source>Flag!&quot;&lt;strong id=&quot;each&quot;&gt;each&lt;/strong&gt;&quot; &lt;strong id=&quot;each&quot;&gt;each&lt;/strong&gt;(Range)(Range r)</source>
          <target state="translated">Flag! &quot; &lt;strong id=&quot;each&quot;&gt;Each&lt;/strong&gt; &quot; &lt;strong id=&quot;each&quot;&gt;each&lt;/strong&gt; (Rango) (Rango r)</target>
        </trans-unit>
        <trans-unit id="5d728758adcdd5154d3be55552c1c061ef1489b2" translate="yes" xml:space="preserve">
          <source>Flags</source>
          <target state="translated">Flags</target>
        </trans-unit>
        <trans-unit id="a98a30dbf66202f4a1ca6fcfeff706e1cb961f9b" translate="yes" xml:space="preserve">
          <source>Flags affect formatting depending on the specifier as follows.</source>
          <target state="translated">Las banderas afectan al formato dependiendo del especificador de la siguiente manera.</target>
        </trans-unit>
        <trans-unit id="517da122a2fd8a775a91cf3934a2421fdfecad5e" translate="yes" xml:space="preserve">
          <source>Flags may be OR'ed together:</source>
          <target state="translated">Las banderas pueden ser operadas juntas:</target>
        </trans-unit>
        <trans-unit id="9a817b12d43958a297fe78c774ef0aab232c3032" translate="yes" xml:space="preserve">
          <source>Flags that can be passed to &lt;a href=&quot;#pipeProcess&quot;&gt;&lt;code&gt;pipeProcess&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#pipeShell&quot;&gt;&lt;code&gt;pipeShell&lt;/code&gt;&lt;/a&gt; to specify which of the child process' standard streams are redirected. Use bitwise OR to combine flags.</source>
          <target state="translated">Indicadores que se pueden pasar a &lt;a href=&quot;#pipeProcess&quot;&gt; &lt;code&gt;pipeProcess&lt;/code&gt; &lt;/a&gt; y &lt;a href=&quot;#pipeShell&quot;&gt; &lt;code&gt;pipeShell&lt;/code&gt; &lt;/a&gt; para especificar cu&amp;aacute;les de las secuencias est&amp;aacute;ndar del proceso secundario se redirigen. Use bit a bit para combinar banderas.</target>
        </trans-unit>
        <trans-unit id="d7bf08131e02f1b45b6731cfdb8ac81266998286" translate="yes" xml:space="preserve">
          <source>Flags that control how json is encoded and parsed.</source>
          <target state="translated">Banderas que controlan cómo se codifica y analiza a Json.</target>
        </trans-unit>
        <trans-unit id="9101e63c4b97693993f5de7e6caad68a3e230e45" translate="yes" xml:space="preserve">
          <source>Flags that control process creation. See &lt;a href=&quot;#Config&quot;&gt;&lt;code&gt;Config&lt;/code&gt;&lt;/a&gt; for an overview of available flags, and note that the &lt;code&gt;retainStd...&lt;/code&gt; flags have no effect in this function.</source>
          <target state="translated">Banderas que controlan la creaci&amp;oacute;n de procesos. Consulte &lt;a href=&quot;#Config&quot;&gt; &lt;code&gt;Config&lt;/code&gt; uraci&amp;oacute;n&lt;/a&gt; para obtener una descripci&amp;oacute;n general de los indicadores disponibles y tenga en cuenta que los &lt;code&gt;retainStd...&lt;/code&gt; no tienen efecto en esta funci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="8fa52f42ca8ff70a9db0dc2e586798abb191d35d" translate="yes" xml:space="preserve">
          <source>Flags that control process creation. See &lt;a href=&quot;#Config&quot;&gt;&lt;code&gt;Config&lt;/code&gt;&lt;/a&gt; for an overview of available flags.</source>
          <target state="translated">Banderas que controlan la creaci&amp;oacute;n de procesos. Consulte &lt;a href=&quot;#Config&quot;&gt; &lt;code&gt;Config&lt;/code&gt; uraci&amp;oacute;n&lt;/a&gt; para obtener una descripci&amp;oacute;n general de los indicadores disponibles.</target>
        </trans-unit>
        <trans-unit id="c0978ac0b3ccfd7282e3c33d010ed6583a1755a4" translate="yes" xml:space="preserve">
          <source>Flags that control the behaviour of process creation functions in this module. Most flags only apply to &lt;a href=&quot;#spawnProcess&quot;&gt;&lt;code&gt;spawnProcess&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#spawnShell&quot;&gt;&lt;code&gt;spawnShell&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Banderas que controlan el comportamiento de las funciones de creaci&amp;oacute;n de procesos en este m&amp;oacute;dulo. La mayor&amp;iacute;a de las banderas solo se aplican a &lt;a href=&quot;#spawnProcess&quot;&gt; &lt;code&gt;spawnProcess&lt;/code&gt; &lt;/a&gt; y &lt;a href=&quot;#spawnShell&quot;&gt; &lt;code&gt;spawnShell&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a98c5de453c2c7c3caf6bb14f159914e55de8b90" translate="yes" xml:space="preserve">
          <source>Flags that determine which streams are redirected, and how. See &lt;a href=&quot;#Redirect&quot;&gt;&lt;code&gt;Redirect&lt;/code&gt;&lt;/a&gt; for an overview of available flags.</source>
          <target state="translated">Indicadores que determinan qu&amp;eacute; secuencias se redirigen y c&amp;oacute;mo. Consulte &lt;a href=&quot;#Redirect&quot;&gt; &lt;code&gt;Redirect&lt;/code&gt; &lt;/a&gt; para obtener una descripci&amp;oacute;n general de los indicadores disponibles.</target>
        </trans-unit>
        <trans-unit id="b620409ddfc3fc2bb8b14e73ba7780a044ad90c9" translate="yes" xml:space="preserve">
          <source>Flatten out the scope by presenting the statement as an array of statements.</source>
          <target state="translated">Aplanar el alcance presentando la declaración como un conjunto de declaraciones.</target>
        </trans-unit>
        <trans-unit id="69f2ec628a1c75aed5c37949245c44cc81da511d" translate="yes" xml:space="preserve">
          <source>Flips a single bit, specified by &lt;code&gt;pos&lt;/code&gt;</source>
          <target state="translated">Voltea un solo bit, especificado por &lt;code&gt;pos&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a4e1ce065ff47fa12c8210de50047287b30b8075" translate="yes" xml:space="preserve">
          <source>Flips all the bits in the &lt;code&gt;BitArray&lt;/code&gt;</source>
          <target state="translated">Voltea todos los bits en el &lt;code&gt;BitArray&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f980f6669a99ae97aa471b598c62ac0c3e1f823b" translate="yes" xml:space="preserve">
          <source>Floating Point</source>
          <target state="translated">Punto flotante</target>
        </trans-unit>
        <trans-unit id="a7a463a748e16b2f5b0e11e3ae1b317ccea7b0fc" translate="yes" xml:space="preserve">
          <source>Floating Point Constant Folding</source>
          <target state="translated">Punto flotante Plegado constante</target>
        </trans-unit>
        <trans-unit id="d66cb8936a51df45efbb55e9f325e90025cbbefc" translate="yes" xml:space="preserve">
          <source>Floating Point Intermediate Values</source>
          <target state="translated">Valores intermedios de punto flotante</target>
        </trans-unit>
        <trans-unit id="a6c4e80d19a5698157c68955c5feabc616b55ad5" translate="yes" xml:space="preserve">
          <source>Floating Point Literals</source>
          <target state="translated">Literales de punto flotante</target>
        </trans-unit>
        <trans-unit id="549c1462b87072d7712396a53e8de6f7b9f76688" translate="yes" xml:space="preserve">
          <source>Floating Point Transformations</source>
          <target state="translated">Transformaciones de punto flotante</target>
        </trans-unit>
        <trans-unit id="2bed0fff60a5113135f273ef65f90946ade02e38" translate="yes" xml:space="preserve">
          <source>Floating literals can have embedded &amp;lsquo;_&amp;rsquo; characters to improve readability, and which are ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00848e3da3c10e7ab7937982dcd4c2d2c3dffaaa" translate="yes" xml:space="preserve">
          <source>Floating literals can have embedded &amp;lsquo;_&amp;rsquo; characters, which are ignored.</source>
          <target state="translated">Los literales flotantes pueden tener caracteres '_' incrustados, que se ignoran.</target>
        </trans-unit>
        <trans-unit id="2f633a3ecaf3e65628ed43650f2d2e7563e4708a" translate="yes" xml:space="preserve">
          <source>Floating literals with no suffix are of type &lt;code&gt;double&lt;/code&gt;. Floating literals followed by &lt;b&gt;f&lt;/b&gt; or &lt;b&gt;F&lt;/b&gt; are of type &lt;code&gt;float&lt;/code&gt;, and those followed by &lt;b&gt;L&lt;/b&gt; are of type &lt;code&gt;real&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01668267e3349ef380ebd600403f931fc5d66ef9" translate="yes" xml:space="preserve">
          <source>Floating literals with no suffix are of type &lt;code&gt;double&lt;/code&gt;. They can be followed by one &lt;b&gt;f&lt;/b&gt;, &lt;b&gt;F&lt;/b&gt;, or &lt;b&gt;L&lt;/b&gt; suffix. The &lt;b&gt;f&lt;/b&gt; or &lt;b&gt;F&lt;/b&gt; suffix types it is a &lt;code&gt;float&lt;/code&gt;, and &lt;b&gt;L&lt;/b&gt; types it is a &lt;code&gt;real&lt;/code&gt;.</source>
          <target state="translated">Los literales flotantes sin sufijo son de tipo &lt;code&gt;double&lt;/code&gt; . Pueden ir seguidos de un sufijo &lt;b&gt;f&lt;/b&gt; , &lt;b&gt;F&lt;/b&gt; o &lt;b&gt;L. &lt;/b&gt;El sufijo &lt;b&gt;f&lt;/b&gt; o &lt;b&gt;F lo&lt;/b&gt; tipifica como &lt;code&gt;float&lt;/code&gt; , y &lt;b&gt;L lo&lt;/b&gt; tipifica como &lt;code&gt;real&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1a4195feb88e405b4996ac5dcca713ad5c6175c1" translate="yes" xml:space="preserve">
          <source>Floating point NaN's are formatted as &lt;b&gt;nan&lt;/b&gt; if the</source>
          <target state="translated">Los NaN de punto flotante se formatean como &lt;b&gt;nan&lt;/b&gt; si el</target>
        </trans-unit>
        <trans-unit id="afa8bdea6b3525811aead9f74976b708a0d15aba" translate="yes" xml:space="preserve">
          <source>Floating point comparison operators</source>
          <target state="translated">Operadores de comparación de puntos flotantes</target>
        </trans-unit>
        <trans-unit id="ed4b0ae6cd9ee0a107d7642401f3d58f692c98b4" translate="yes" xml:space="preserve">
          <source>Floating point comparisons</source>
          <target state="translated">Comparaciones de puntos flotantes</target>
        </trans-unit>
        <trans-unit id="51fe49d981df10fc2a3ca0c38f66d9ec597eda64" translate="yes" xml:space="preserve">
          <source>Floating point computations can be carried out at a higher precision than the size of the floating point variable can hold. Floating point algorithms should continue to work properly if precision is arbitrarily increased.</source>
          <target state="translated">Los cálculos de punto flotante se pueden llevar a cabo con una precisión mayor que la que puede tener el tamaño de la variable de punto flotante.Los algoritmos de punto flotante deben seguir funcionando correctamente si la precisión se incrementa arbitrariamente.</target>
        </trans-unit>
        <trans-unit id="cbc0ff66a82e332f74b6f7f08625c15927132156" translate="yes" xml:space="preserve">
          <source>Floating point constants are internally represented in the implementation in at least &lt;code&gt;real&lt;/code&gt; precision, regardless of the constant's type. The extra precision is available for constant folding. Committing to the precision of the result is done as late as possible in the compilation process. For example:</source>
          <target state="translated">Las constantes de punto flotante se representan internamente en la implementaci&amp;oacute;n con al menos &lt;code&gt;real&lt;/code&gt; precisi&amp;oacute;n real , independientemente del tipo de constante. La precisi&amp;oacute;n adicional est&amp;aacute; disponible para el plegado constante. El compromiso con la precisi&amp;oacute;n del resultado se realiza lo m&amp;aacute;s tarde posible en el proceso de compilaci&amp;oacute;n. Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="35c2559ddef9cb0435b556f187c76ca13d0d375f" translate="yes" xml:space="preserve">
          <source>Floating point numbers</source>
          <target state="translated">Los números de punto flotante</target>
        </trans-unit>
        <trans-unit id="95bc83092a43ba79dea2ddad11b46e7cfef6083c" translate="yes" xml:space="preserve">
          <source>Floating point numerics functions.</source>
          <target state="translated">Funciones numéricas de punto flotante.</target>
        </trans-unit>
        <trans-unit id="160661b47177ecb78c896bad472b47b4dfd37f9e" translate="yes" xml:space="preserve">
          <source>Floating point return values are returned on the FPU stack. These must be cleaned off by the caller, even if they are not used.</source>
          <target state="translated">Los valores de retorno en punto flotante se devuelven en la pila de FPU.Estos deben ser limpiados por la persona que llama,incluso si no se utilizan.</target>
        </trans-unit>
        <trans-unit id="33856b075b952fb87e57ad69006f9b871108ab99" translate="yes" xml:space="preserve">
          <source>Floating point types cannot be implicitly converted to integral types. Complex or imaginary floating point types cannot be implicitly converted to non-complex floating point types. Non-complex floating point types cannot be implicitly converted to imaginary floating point types.</source>
          <target state="translated">Los tipos de punto flotante no pueden ser convertidos implícitamente en tipos integrales.Los tipos de punto flotante complejos o imaginarios no pueden ser convertidos implícitamente en tipos de punto flotante no complejos.Los tipos de coma flotante no complejos no pueden ser convertidos implícitamente a tipos de coma flotante imaginarios.</target>
        </trans-unit>
        <trans-unit id="d3a01c245469b7e18ff38a92dc5c6ea9b1ec4c23" translate="yes" xml:space="preserve">
          <source>Floating-Point Number: (cfloat, cdouble, and creal) ['+'|'-']digit(s)[.][digit(s)][[e-|e+]digit(s)][+] [digit(s)[.][digit(s)][[e-|e+]digit(s)][i|f|L|Li|fi]] or [nan|nani|nan+nani|inf|-inf]</source>
          <target state="translated">Número de punto flotante:(cfloat,cdouble,y creal)['+'|'-']dígito(s)[.][dígito(s)][[e-|e+]dígito(s)][+][dígito(s)[.][dígito(s)][[e-|e+]dígito(s)][i|f|L|Li|fi]]o [nan|nani|nan+nani|inf|-inf]</target>
        </trans-unit>
        <trans-unit id="6d2316f26e5bf23de4ad985a49ccce2c80f4f913" translate="yes" xml:space="preserve">
          <source>Floating-Point Number: (float, double, real, ifloat, idouble, and ireal) ['+'|'-']digit(s)[.][digit(s)][[e-|e+]digit(s)][i|f|L|Li|fi]] or [nan|nani|inf|-inf]</source>
          <target state="translated">Número de punto flotante:(flotante,doble,real,iflota,idoble e ireal)['+'|'-']dígito(s)[.][dígito(s)][[e-|e+]dígito(s)][i|f|L|Li|fi]]o [nan|nani|inf|-inf]</target>
        </trans-unit>
        <trans-unit id="4e439c8e69a24e7d54c5622205640014d4f59099" translate="yes" xml:space="preserve">
          <source>Floating-Point manipulation</source>
          <target state="translated">Manipulación de puntos flotantes</target>
        </trans-unit>
        <trans-unit id="417d3791f22357e1adf665e28ee4d505d124a89d" translate="yes" xml:space="preserve">
          <source>Floating-point operations</source>
          <target state="translated">Operaciones de punto flotante</target>
        </trans-unit>
        <trans-unit id="e0d24bd6f36291462113f127088f35f4090a373d" translate="yes" xml:space="preserve">
          <source>Floating-point random variate of type &lt;code&gt;T&lt;/code&gt; drawn from the uniform distribution across the half-open interval [0, 1).</source>
          <target state="translated">Variante aleatoria de coma flotante de tipo &lt;code&gt;T&lt;/code&gt; extra&amp;iacute;da de la distribuci&amp;oacute;n uniforme en el intervalo medio abierto [0, 1).</target>
        </trans-unit>
        <trans-unit id="f2714b106a05319f2ace1ce68d8ac69bcf4f5ff7" translate="yes" xml:space="preserve">
          <source>Floating-point values are formatted like &lt;a href=&quot;core_stdc_stdio#printf&quot;&gt;&lt;code&gt;core.stdc.stdio.printf&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">Los valores de punto flotante est&amp;aacute;n formateados como &lt;a href=&quot;core_stdc_stdio#printf&quot;&gt; &lt;code&gt;core.stdc.stdio.printf&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c6b8da4fa90bdf05e2c05a6593125f02a7d82431" translate="yes" xml:space="preserve">
          <source>Floats can be in decimal or hexadecimal format.</source>
          <target state="translated">Los flotadores pueden estar en formato decimal o hexadecimal.</target>
        </trans-unit>
        <trans-unit id="aee4c734dc6fd3c7a89584d7e5348d40237e1949" translate="yes" xml:space="preserve">
          <source>Flush cookie jar to disk.</source>
          <target state="translated">Tira del tarro de galletas al disco.</target>
        </trans-unit>
        <trans-unit id="7f0c95d2e99f8f6f791a3dcf13701e05342006cc" translate="yes" xml:space="preserve">
          <source>Flushes the C &lt;code&gt;FILE&lt;/code&gt; buffers.</source>
          <target state="translated">Vac&amp;iacute;a los almacenamientos intermedios de &lt;code&gt;FILE&lt;/code&gt; C.</target>
        </trans-unit>
        <trans-unit id="bebb80c78ce429db39d79d68feeba680b58038de" translate="yes" xml:space="preserve">
          <source>Folding White Space contains consecutive CRLF sequences</source>
          <target state="translated">El Espacio Blanco Plegable contiene secuencias consecutivas de CRLF</target>
        </trans-unit>
        <trans-unit id="67f0ed9d72f8298bdd413ec634b75103f7a22dc1" translate="yes" xml:space="preserve">
          <source>Folding White Space ends with a CRLF sequence</source>
          <target state="translated">El espacio blanco plegable termina con una secuencia de CRLF</target>
        </trans-unit>
        <trans-unit id="08097cc4ab9f5b9568ed73c27e3a597381bce1b4" translate="yes" xml:space="preserve">
          <source>Following arguments works the same way as &lt;code&gt;bitfield&lt;/code&gt;'s. The bitfield must fit into the bits known to be zero because of the pointer alignment.</source>
          <target state="translated">Los siguientes argumentos funcionan de la misma manera que los de &lt;code&gt;bitfield&lt;/code&gt; . El campo de bits debe caber en los bits que se sabe que son cero debido a la alineaci&amp;oacute;n del puntero.</target>
        </trans-unit>
        <trans-unit id="6cfe2219958a5948a49371cf65d64e832c75a6f7" translate="yes" xml:space="preserve">
          <source>Following initialization, the &lt;code&gt;HashTable&lt;/code&gt; object would consistently use its &lt;code&gt;allocator&lt;/code&gt; object for acquiring memory. Furthermore, setting &lt;code&gt;HashTable.allocator&lt;/code&gt; to point to a different allocator should be legal but only if the object is empty; otherwise, the object wouldn't be able to deallocate its existing state.</source>
          <target state="translated">Despu&amp;eacute;s de la inicializaci&amp;oacute;n, el objeto &lt;code&gt;HashTable&lt;/code&gt; usar&amp;iacute;a constantemente su objeto &lt;code&gt;allocator&lt;/code&gt; para adquirir memoria. Adem&amp;aacute;s, configurar &lt;code&gt;HashTable.allocator&lt;/code&gt; para que apunte a un asignador diferente deber&amp;iacute;a ser legal, pero solo si el objeto est&amp;aacute; vac&amp;iacute;o; de lo contrario, el objeto no podr&amp;iacute;a desasignar su estado existente.</target>
        </trans-unit>
        <trans-unit id="c77938fcdf67aea78282407b90406b49eb71c3e5" translate="yes" xml:space="preserve">
          <source>Follows Itanium C++ ABI 1.86 section 5.1 &lt;a href=&quot;http://refspecs.linux-foundation.org/cxxabi-1.86.html#mangling&quot;&gt;http://refspecs.linux-foundation.org/cxxabi-1.86.html#mangling&lt;/a&gt; which is where the grammar comments come from.</source>
          <target state="translated">Sigue Itanium C ++ ABI 1.86 secci&amp;oacute;n 5.1 &lt;a href=&quot;http://refspecs.linux-foundation.org/cxxabi-1.86.html#mangling&quot;&gt;http://refspecs.linux-foundation.org/cxxabi-1.86.html#mangling, de&lt;/a&gt; donde provienen los comentarios gramaticales.</target>
        </trans-unit>
        <trans-unit id="f7880600348a091a43e2a84906d6002820643108" translate="yes" xml:space="preserve">
          <source>For</source>
          <target state="translated">For</target>
        </trans-unit>
        <trans-unit id="2496332383d78a1d33c27c0e38fa6de47dc78a49" translate="yes" xml:space="preserve">
          <source>For &quot;store&quot; operations of the form: op1 op= op2</source>
          <target state="translated">Para operaciones de &quot;almacenamiento&quot; de la forma:op1 op=op2</target>
        </trans-unit>
        <trans-unit id="97c9b61a869134f6120476fe4a99b3b11a45291d" translate="yes" xml:space="preserve">
          <source>For 16 bit generator, this is always a (targ_short) sign-extended value.</source>
          <target state="translated">Para el generador de 16 bits,este es siempre un valor de signo extendido (targ_short).</target>
        </trans-unit>
        <trans-unit id="78b280836f07395eef32226ce729d39d05fd0d6b" translate="yes" xml:space="preserve">
          <source>For 64 bit code, follows Itanium C++ ABI 1.86 Chapter 3 &lt;a href=&quot;http://refspecs.linux-foundation.org/cxxabi-1.86.html#calls&quot;&gt;http://refspecs.linux-foundation.org/cxxabi-1.86.html#calls&lt;/a&gt;</source>
          <target state="translated">Para el c&amp;oacute;digo de 64 bits, siga Itanium C ++ ABI 1.86 Cap&amp;iacute;tulo 3 &lt;a href=&quot;http://refspecs.linux-foundation.org/cxxabi-1.86.html#calls&quot;&gt;http://refspecs.linux-foundation.org/cxxabi-1.86.html#calls&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="11a5de5d335b50e0f5cf5b3413b2f30e630b28c1" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;type#basic-data-types&quot;&gt;basic data types&lt;/a&gt;, all possible bit patterns are safe.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b23dde54b23d16d77035a1e0e2b0833121f3ea89" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;++&lt;/code&gt; and &lt;code&gt;--&lt;/code&gt;, if &lt;code&gt;v == WithNaN.defaultValue!Lhs&lt;/code&gt; or the operation would result in an overflow, sets &lt;code&gt;v&lt;/code&gt; to &lt;code&gt;WithNaN.defaultValue!T&lt;/code&gt;. Otherwise, the semantics is the same as for the built-in operator.</source>
          <target state="translated">Para &lt;code&gt;++&lt;/code&gt; y &lt;code&gt;--&lt;/code&gt; si &lt;code&gt;v == WithNaN.defaultValue!Lhs&lt;/code&gt; o la operaci&amp;oacute;n dar&amp;iacute;a lugar a un desbordamiento, conjuntos &lt;code&gt;v&lt;/code&gt; a &lt;code&gt;WithNaN.defaultValue!T&lt;/code&gt; . De lo contrario, la sem&amp;aacute;ntica es la misma que para el operador incorporado.</target>
        </trans-unit>
        <trans-unit id="c0328592d323a259faf0da7a348a86fd52092b62" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;-&lt;/code&gt; and &lt;code&gt;~&lt;/code&gt;, if &lt;code&gt;v == WithNaN.defaultValue!T&lt;/code&gt;, returns &lt;code&gt;WithNaN.defaultValue!T&lt;/code&gt;. Otherwise, the semantics is the same as for the built-in operator.</source>
          <target state="translated">Para &lt;code&gt;-&lt;/code&gt; y &lt;code&gt;~&lt;/code&gt; , si &lt;code&gt;v == WithNaN.defaultValue!T&lt;/code&gt; , vuelve &lt;code&gt;WithNaN.defaultValue!T&lt;/code&gt; . De lo contrario, la sem&amp;aacute;ntica es la misma que para el operador incorporado.</target>
        </trans-unit>
        <trans-unit id="4e56b23a72d6de96ffb1933a70486eb64d0dea7d" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;foreach&lt;/code&gt;, the elements for the array are iterated over starting at index 0 and continuing to the maximum of the array. For &lt;code&gt;foreach_reverse&lt;/code&gt;, the array elements are visited in the reverse order.</source>
          <target state="translated">Para &lt;code&gt;foreach&lt;/code&gt; , los elementos para la matriz se repiten comenzando en el &amp;iacute;ndice 0 y continuando al m&amp;aacute;ximo de la matriz. Para &lt;code&gt;foreach_reverse&lt;/code&gt; , los elementos de la matriz se visitan en el orden inverso.</target>
        </trans-unit>
        <trans-unit id="d0ceede7c3735e19c4f9e84dfec5a98cdaa80c75" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;windowSize = 1&lt;/code&gt; it splits the range into single element groups (aka &lt;code&gt;unflatten&lt;/code&gt;) For &lt;code&gt;windowSize = 2&lt;/code&gt; it is similar to &lt;code&gt;zip(source, source.save.dropOne)&lt;/code&gt;.</source>
          <target state="translated">Para &lt;code&gt;windowSize = 1&lt;/code&gt; se divide el intervalo en grupos de elementos individuales (tambi&amp;eacute;n conocido como &lt;code&gt;unflatten&lt;/code&gt; ) Para &lt;code&gt;windowSize = 2&lt;/code&gt; es similar a la &lt;code&gt;zip(source, source.save.dropOne)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5fde640aa4409bbb47d5287c2ea78c26d39f59e9" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;x == &quot;++&quot; || x == &quot;--&quot;&lt;/code&gt;: The function returns &lt;code&gt;void&lt;/code&gt;.</source>
          <target state="translated">Para &lt;code&gt;x == &quot;++&quot; || x == &quot;--&quot;&lt;/code&gt; : la funci&amp;oacute;n devuelve &lt;code&gt;void&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f5ba5d0612e564fafee84b671c5c4d115f7c0b6e" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;x == &quot;-&quot; || x == &quot;~&quot;&lt;/code&gt;: If &lt;code&gt;v == WithNaN.defaultValue!T&lt;/code&gt;, the function returns &lt;code&gt;WithNaN.defaultValue!T&lt;/code&gt;. Otherwise it returns the normal result of the operator.</source>
          <target state="translated">Para &lt;code&gt;x == &quot;-&quot; || x == &quot;~&quot;&lt;/code&gt; : Si &lt;code&gt;v == WithNaN.defaultValue!T&lt;/code&gt; , la funci&amp;oacute;n devuelve &lt;code&gt;WithNaN.defaultValue!T&lt;/code&gt; . De lo contrario, devuelve el resultado normal del operador.</target>
        </trans-unit>
        <trans-unit id="d465e34c13d15e0333f8cd7f1c7c1944ae2b7911" translate="yes" xml:space="preserve">
          <source>For C++ class cd, generate an instance of _cpp_type_info_ptr and populate it with a pointer to the C++ type info.</source>
          <target state="translated">Para el cd de clase C++,genera una instancia de _cpp_type_info_ptr y llénala con un puntero a la información de tipo C++.</target>
        </trans-unit>
        <trans-unit id="84fc2ed3d82dfac4fe4b1db7e54128df57816954" translate="yes" xml:space="preserve">
          <source>For Posix/x86_64 this returns the type which will really be used for passing an argument of type va_list.</source>
          <target state="translated">Para Posix/x86_64 esto devuelve el tipo que realmente se usará para pasar un argumento de tipo va_list.</target>
        </trans-unit>
        <trans-unit id="826bad097a9af03241478f133b816c28a093c4ff" translate="yes" xml:space="preserve">
          <source>For Statement</source>
          <target state="translated">Para la declaración</target>
        </trans-unit>
        <trans-unit id="1658d59f02098b291dd70d6afbe72baf35b0b46e" translate="yes" xml:space="preserve">
          <source>For TypeFunction, nextOf() can return NULL if the function return type is meant to be inferred, and semantic() hasn't yet ben run on the function. After semantic(), it must no longer be NULL.</source>
          <target state="translated">Para TypeFunction,nextOf()puede devolver NULL si el tipo de retorno de la función está destinado a ser inferido,y semantic()aún no se ha ejecutado en la función.Después de semantic(),ya no debe ser NULL.</target>
        </trans-unit>
        <trans-unit id="ed4c1eb6664e08f8534b1fe769460ebc44281875" translate="yes" xml:space="preserve">
          <source>For a lazy version, refer to &lt;a href=&quot;std_range#repeat&quot;&gt;&lt;code&gt;std.range.repeat&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Para una versi&amp;oacute;n perezosa, consulte &lt;a href=&quot;std_range#repeat&quot;&gt; &lt;code&gt;std.range.repeat&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8cd7374ae5703f87c90badd0385e4fb829226681" translate="yes" xml:space="preserve">
          <source>For a lazy version, see &lt;a href=&quot;std_algorithm_iteration#joiner&quot;&gt;&lt;code&gt;std.algorithm.iteration.joiner&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">Para una versi&amp;oacute;n perezosa, vea &lt;a href=&quot;std_algorithm_iteration#joiner&quot;&gt; &lt;code&gt;std.algorithm.iteration.joiner&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="20ca13cf71a91c26b14ec6bf15dd84151e56cf9e" translate="yes" xml:space="preserve">
          <source>For a lazy, non-allocating version of these functions, see &lt;a href=&quot;#byUTF&quot;&gt;&lt;code&gt;byUTF&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Para obtener una versi&amp;oacute;n perezosa y no &lt;a href=&quot;#byUTF&quot;&gt; &lt;code&gt;byUTF&lt;/code&gt; &lt;/a&gt; de estas funciones, consulte byUTF .</target>
        </trans-unit>
        <trans-unit id="567c03cab3251ca5dd2f65be01f597e8de5b789b" translate="yes" xml:space="preserve">
          <source>For a less strict parser, see &lt;a href=&quot;#parseUUID&quot;&gt;&lt;code&gt;parseUUID&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">Para un analizador menos estricto, vea &lt;a href=&quot;#parseUUID&quot;&gt; &lt;code&gt;parseUUID&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d3242f7887a56a8199a86141fd1d3d295d57af7c" translate="yes" xml:space="preserve">
          <source>For a nested class instance, the &lt;code&gt;.outer&lt;/code&gt; property is the &lt;code&gt;this&lt;/code&gt; reference for the enclosing class's instance. If there is no enclosing class context, &lt;code&gt;.outer&lt;/code&gt; would be a &lt;code&gt;void*&lt;/code&gt; to the enclosing function frame.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32cf17cd505298c5983970817a14f4d4aa02e1a3" translate="yes" xml:space="preserve">
          <source>For a size zero pool, the getter arbitrarily returns &lt;code&gt;core.thread.Thread.PRIORITY_MIN&lt;/code&gt; and the setter has no effect.</source>
          <target state="translated">Para un grupo de tama&amp;ntilde;o cero, el getter devuelve arbitrariamente &lt;code&gt;core.thread.Thread.PRIORITY_MIN&lt;/code&gt; y el setter no tiene ning&amp;uacute;n efecto.</target>
        </trans-unit>
        <trans-unit id="703bdcc05cee4b856a950e3e2494d43650695c33" translate="yes" xml:space="preserve">
          <source>For a size zero pool, the getter arbitrarily returns true and the setter has no effect.</source>
          <target state="translated">Para una piscina de tamaño cero,el &quot;getter&quot; arbitrariamente devuelve verdadero y el &quot;setter&quot; no tiene efecto.</target>
        </trans-unit>
        <trans-unit id="7062424b6df58f7b0070477aac1caffce7eac347" translate="yes" xml:space="preserve">
          <source>For all assign expressions, the left operand must be a modifiable lvalue. The type of the assign expression is the type of the left operand, and the value is the value of the left operand after assignment occurs. The resulting expression is a modifiable lvalue.</source>
          <target state="translated">Para todas las expresiones asignadas,el operando izquierdo debe ser un valor modificable.El tipo de la expresión asignada es el tipo del operando izquierdo,y el valor es el valor del operando izquierdo después de que se produce la asignación.La expresión resultante es un valor l modificable.</target>
        </trans-unit>
        <trans-unit id="4c1c5870b4b89a912a0f2d752c3a6fab5551a649" translate="yes" xml:space="preserve">
          <source>For all other cases, the temporaries generated for the purpose of invoking functions are deferred to the end of the full expression. The order of destruction is inverse to the order of construction.</source>
          <target state="translated">Para todos los demás casos,los temporales generados con el fin de invocar funciones se aplazan hasta el final de la expresión completa.El orden de destrucción es inverso al orden de construcción.</target>
        </trans-unit>
        <trans-unit id="95e2e0ca2da36fd3882b011dd82190d8d5ee7297" translate="yes" xml:space="preserve">
          <source>For an introductory look at &lt;b&gt;std.format&lt;/b&gt;'s capabilities and how to use this module see the dedicated &lt;a href=&quot;http://wiki.dlang.org/Defining_custom_print_format_specifiers&quot;&gt;DWiki article&lt;/a&gt;.</source>
          <target state="translated">Para una mirada introductoria a las capacidades de &lt;b&gt;std.format&lt;/b&gt; y c&amp;oacute;mo usar este m&amp;oacute;dulo, vea el &lt;a href=&quot;http://wiki.dlang.org/Defining_custom_print_format_specifiers&quot;&gt;art&amp;iacute;culo&lt;/a&gt; dedicado de DWiki .</target>
        </trans-unit>
        <trans-unit id="0fb635d85e291212fc5e73d7b40aa121e5ce7593" translate="yes" xml:space="preserve">
          <source>For an introductory look at &lt;b&gt;std.format&lt;/b&gt;'s capabilities and how to use this module see the dedicated &lt;a href=&quot;https://wiki.dlang.org/Defining_custom_print_format_specifiers&quot;&gt;DWiki article&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="076ae6cb1419d1feff35ba4b7e6bb266176337c6" translate="yes" xml:space="preserve">
          <source>For another example:</source>
          <target state="translated">Por otro ejemplo:</target>
        </trans-unit>
        <trans-unit id="4f7c5dea21579ef43f50bda4d8b8e7dd5ee9236e" translate="yes" xml:space="preserve">
          <source>For any given platform/compiler curl_off_t must be typedef'ed to a 64-bit wide signed integral data type. The width of this data type must remain constant and independent of any possible large file support settings.</source>
          <target state="translated">Para cualquier plataforma/compilador dado,curl_off_t debe ser tipificado como un tipo de datos integral firmado de 64 bits de ancho.El ancho de este tipo de datos debe permanecer constante e independiente de cualquier configuración posible de soporte de archivos grandes.</target>
        </trans-unit>
        <trans-unit id="078912245b32cd2a66bf3a96da7307acc2485fbe" translate="yes" xml:space="preserve">
          <source>For any other declaration even if &lt;code&gt;@disable&lt;/code&gt; is a syntactically valid attribute &lt;code&gt;false&lt;/code&gt; is returned because the annotation has no effect.</source>
          <target state="translated">Para cualquier otra declaraci&amp;oacute;n, incluso si &lt;code&gt;@disable&lt;/code&gt; es un atributo sint&amp;aacute;cticamente v&amp;aacute;lido, se devuelve &lt;code&gt;false&lt;/code&gt; porque la anotaci&amp;oacute;n no tiene ning&amp;uacute;n efecto.</target>
        </trans-unit>
        <trans-unit id="701d1a14380c65e4a855899951d9d7a65d27e60f" translate="yes" xml:space="preserve">
          <source>For any values &lt;code&gt;v1&lt;/code&gt; on the right-hand side and &lt;code&gt;v2&lt;/code&gt; on the left-hand side:</source>
          <target state="translated">Para cualquier valor &lt;code&gt;v1&lt;/code&gt; en el lado derecho y &lt;code&gt;v2&lt;/code&gt; en el lado izquierdo:</target>
        </trans-unit>
        <trans-unit id="f1e77f1044f99821b0b2c5cfb9d3d37a079ad5ec" translate="yes" xml:space="preserve">
          <source>For applications like command line switch processing, this can lead to much more straightforward code, being clearer and less error prone. char, wchar and dchar strings are allowed.</source>
          <target state="translated">Para aplicaciones como el procesamiento de interruptores de línea de comandos,esto puede llevar a un código mucho más sencillo,siendo más claro y menos propenso a errores.Se permiten las cadenas char,wchar y dchar.</target>
        </trans-unit>
        <trans-unit id="d1b8d2445b680cd8ee27f3fc95623cb30af7a286" translate="yes" xml:space="preserve">
          <source>For arguments of built-in types, assignment operator expressions such as</source>
          <target state="translated">Para los argumentos de los tipos incorporados,las expresiones del operador de asignación como</target>
        </trans-unit>
        <trans-unit id="0f5d29eff2633e7fd841d0a6738a98ac739e92a9" translate="yes" xml:space="preserve">
          <source>For arrays:</source>
          <target state="translated">Para las matrices:</target>
        </trans-unit>
        <trans-unit id="dc14ba04c2c4629e1d2d0d30f5dc9d2a1dddd9e2" translate="yes" xml:space="preserve">
          <source>For backward compatibility, &lt;code&gt;a[]&lt;/code&gt; and &lt;code&gt;a[&lt;/code&gt;</source>
          <target state="translated">Para compatibilidad con versiones anteriores, &lt;code&gt;a[]&lt;/code&gt; y &lt;code&gt;a[&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="542878137297059fb68730fd24d9158d8fdb95d5" translate="yes" xml:space="preserve">
          <source>For backward compatibility, &lt;code&gt;multiwayMerge&lt;/code&gt; is available under the name &lt;code&gt;nWayUnion&lt;/code&gt; and &lt;code&gt;MultiwayMerge&lt;/code&gt; under the name of &lt;code&gt;NWayUnion&lt;/code&gt; . Future code should use &lt;code&gt;multiwayMerge&lt;/code&gt; and &lt;code&gt;MultiwayMerge&lt;/code&gt; as &lt;code&gt;nWayUnion&lt;/code&gt; and &lt;code&gt;NWayUnion&lt;/code&gt; will be deprecated.</source>
          <target state="translated">Para compatibilidad con versiones anteriores, &lt;code&gt;multiwayMerge&lt;/code&gt; est&amp;aacute; disponible con el nombre &lt;code&gt;nWayUnion&lt;/code&gt; y &lt;code&gt;MultiwayMerge&lt;/code&gt; con el nombre de &lt;code&gt;NWayUnion&lt;/code&gt; . Futuro c&amp;oacute;digo debe utilizar &lt;code&gt;multiwayMerge&lt;/code&gt; y &lt;code&gt;MultiwayMerge&lt;/code&gt; como &lt;code&gt;nWayUnion&lt;/code&gt; y &lt;code&gt;NWayUnion&lt;/code&gt; ser&amp;aacute; obsoleto.</target>
        </trans-unit>
        <trans-unit id="e3a3c169dbbfe63cc4460a15c98153cda1f6881e" translate="yes" xml:space="preserve">
          <source>For backward compatibility, if rewriting &lt;code&gt;a[&lt;/code&gt;</source>
          <target state="translated">Para compatibilidad con versiones anteriores, si reescribe &lt;code&gt;a[&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="92276f55c3cccb89a03bd28b0c6443429cb6df1c" translate="yes" xml:space="preserve">
          <source>For backward compatibility, if the above rewrites fail and &lt;code&gt;opSliceOpAssign&lt;/code&gt; is defined, then the rewrites &lt;code&gt;a.opSliceOpAssign(c, i, j)&lt;/code&gt; and &lt;code&gt;a.opSliceOpAssign(c)&lt;/code&gt; are tried, respectively.</source>
          <target state="translated">Por compatibilidad con versiones anteriores, si las reescrituras anteriores fallan y se define &lt;code&gt;opSliceOpAssign&lt;/code&gt; , se reescriben &lt;code&gt;a.opSliceOpAssign(c, i, j)&lt;/code&gt; y &lt;code&gt;a.opSliceOpAssign(c)&lt;/code&gt; , respectivamente.</target>
        </trans-unit>
        <trans-unit id="e5a6a2446de90976e232d13603325c19c48a5a94" translate="yes" xml:space="preserve">
          <source>For backward compatibility, if the above rewrites fail to compile and &lt;code&gt;opSliceUnary&lt;/code&gt; is defined, then the rewrites &lt;code&gt;a.opSliceUnary!(op)(i, j)&lt;/code&gt; and &lt;code&gt;a.opSliceUnary!(op)&lt;/code&gt; are tried instead, respectively.</source>
          <target state="translated">Para la compatibilidad con versiones anteriores, si las reescrituras anteriores no se compilan y se define &lt;code&gt;opSliceUnary&lt;/code&gt; , entonces se reescribe &lt;code&gt;a.opSliceUnary!(op)(i, j)&lt;/code&gt; y &lt;code&gt;a.opSliceUnary!(op)&lt;/code&gt; , respectivamente.</target>
        </trans-unit>
        <trans-unit id="757d4d7a3dccc207f58716a0eadde379a304a5d2" translate="yes" xml:space="preserve">
          <source>For binary operators, the result is as follows:</source>
          <target state="translated">En el caso de los operadores binarios,el resultado es el siguiente:</target>
        </trans-unit>
        <trans-unit id="aeea5f41f2c7d1bd01e14aae86afc3b17192c6d2" translate="yes" xml:space="preserve">
          <source>For blocks &amp;gt;= pagesize, the length is a size_t and is at the beginning of the block. The reason we have to do this is because the block can extend into more pages, so we cannot trust the block length if it sits at the end of the block, because it might have just been extended. If we can prove in the future that the block is unshared, we may be able to change this, but I'm not sure it's important.</source>
          <target state="translated">Para bloques&amp;gt; = tama&amp;ntilde;o de p&amp;aacute;gina, la longitud es size_t y est&amp;aacute; al comienzo del bloque. La raz&amp;oacute;n por la que tenemos que hacer esto es porque el bloque puede extenderse a m&amp;aacute;s p&amp;aacute;ginas, por lo que no podemos confiar en la longitud del bloque si se encuentra al final del bloque, porque podr&amp;iacute;a haber sido extendido. Si podemos demostrar en el futuro que el bloque no se comparte, podemos cambiarlo, pero no estoy seguro de que sea importante.</target>
        </trans-unit>
        <trans-unit id="6435d22c869fa126d1d0aea9e7983183ab7f918e" translate="yes" xml:space="preserve">
          <source>For both ++i and --i</source>
          <target state="translated">Tanto para ++i como para --i</target>
        </trans-unit>
        <trans-unit id="93107872cedc76cc5719158670858cf146f5ce57" translate="yes" xml:space="preserve">
          <source>For both i++ and i--</source>
          <target state="translated">Tanto para i++como para i--</target>
        </trans-unit>
        <trans-unit id="c2f1745a5232cce644154e5a3850452a31978021" translate="yes" xml:space="preserve">
          <source>For both overloads, the entire value of the Duration is split among the units (rather than splitting the Duration across all units and then only providing the values for the requested units), so if only one unit is given, the result is equivalent to &lt;a href=&quot;#total&quot;&gt;&lt;code&gt;total&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Para ambas sobrecargas, el valor completo de la Duraci&amp;oacute;n se divide entre las unidades (en lugar de dividir la Duraci&amp;oacute;n en todas las unidades y luego solo proporciona los valores para las unidades solicitadas), por lo que si solo se proporciona una unidad, el resultado es equivalente al &lt;a href=&quot;#total&quot;&gt; &lt;code&gt;total&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ad0f0aabfe7ebb013586fcfb45b89ab392324a84" translate="yes" xml:space="preserve">
          <source>For built-in numerical types, accurate Knuth &amp;amp; Welford mean calculation is used. For user-defined types, element by element summation is used. Additionally an extra parameter &lt;code&gt;seed&lt;/code&gt; is needed in order to correctly seed the summation with the equivalent to &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">Para los tipos num&amp;eacute;ricos integrados, se utiliza el c&amp;aacute;lculo medio preciso de Knuth &amp;amp; Welford. Para los tipos definidos por el usuario, se utiliza la suma elemento por elemento. Adem&amp;aacute;s &lt;code&gt;seed&lt;/code&gt; se necesita una semilla de par&amp;aacute;metro adicional para sembrar correctamente la suma con el equivalente a &lt;code&gt;0&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a4cc9dd81eb95c3553b97b6dbcaf73ca851ceabc" translate="yes" xml:space="preserve">
          <source>For calendar-based operations that don't care about time zones, then &lt;a href=&quot;std_datetime_date#DateTime&quot;&gt;&lt;code&gt;std.datetime.date.DateTime&lt;/code&gt;&lt;/a&gt; would be the type to use. For system time, use &lt;code&gt;SysTime&lt;/code&gt;.</source>
          <target state="translated">Para las operaciones basadas en el calendario que no se preocupan por las zonas horarias, entonces &lt;a href=&quot;std_datetime_date#DateTime&quot;&gt; &lt;code&gt;std.datetime.date.DateTime&lt;/code&gt; &lt;/a&gt; ser&amp;iacute;a el tipo a utilizar. Para la hora del sistema, use &lt;code&gt;SysTime&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b7199c84f095b28abf14901a280827544df19151" translate="yes" xml:space="preserve">
          <source>For cases where the encoding is known at compile-time, functions are provided for arbitrary encoding and decoding of characters, arbitrary transcoding between strings of different type, as well as validation and sanitization.</source>
          <target state="translated">En los casos en que se conoce la codificación en tiempo de compilación,se proporcionan funciones para la codificación y descodificación arbitraria de caracteres,la transcodificación arbitraria entre cadenas de distinto tipo,así como la validación y la higienización.</target>
        </trans-unit>
        <trans-unit id="a53a545de095bd4f4e296c839d801de6e744e030" translate="yes" xml:space="preserve">
          <source>For cases where the encoding is not known at compile-time, but is known at run-time, the abstract class &lt;a href=&quot;#EncodingScheme&quot;&gt;&lt;code&gt;EncodingScheme&lt;/code&gt;&lt;/a&gt; and its subclasses is provided. To construct a run-time encoder/decoder, one does e.g.</source>
          <target state="translated">Para los casos en que la codificaci&amp;oacute;n no se conoce en tiempo de compilaci&amp;oacute;n, pero se conoce en tiempo de ejecuci&amp;oacute;n, se proporciona la clase abstracta &lt;a href=&quot;#EncodingScheme&quot;&gt; &lt;code&gt;EncodingScheme&lt;/code&gt; &lt;/a&gt; y sus subclases. Para construir un codificador / decodificador en tiempo de ejecuci&amp;oacute;n, se hace, por ejemplo,</target>
        </trans-unit>
        <trans-unit id="d53cba26ee6cdc76a4ea74c67f57bac33bebf848" translate="yes" xml:space="preserve">
          <source>For class and struct objects, the expression &lt;code&gt;(a == b)&lt;/code&gt; is rewritten as &lt;code&gt;a.opEquals(b)&lt;/code&gt;, and &lt;code&gt;(a != b)&lt;/code&gt; is rewritten as &lt;code&gt;!a.opEquals(b)&lt;/code&gt;.</source>
          <target state="translated">Para los objetos de clase y estructura, la expresi&amp;oacute;n &lt;code&gt;(a == b)&lt;/code&gt; se reescribe como &lt;code&gt;a.opEquals(b)&lt;/code&gt; , y &lt;code&gt;(a != b)&lt;/code&gt; se reescribe como &lt;code&gt;!a.opEquals(b)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a6164499db4fd6a0a2e064668be7de8146561558" translate="yes" xml:space="preserve">
          <source>For class objects, identity is defined as the object references are for the same object. Null class objects can be compared with &lt;code&gt;is&lt;/code&gt;.</source>
          <target state="translated">Para los objetos de clase, la identidad se define como las referencias de objeto para el mismo objeto. Los objetos de clase nula se pueden comparar con &lt;code&gt;is&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="95c093eaf464e50c213285367cf108a1f21af7e6" translate="yes" xml:space="preserve">
          <source>For class objects, the &lt;code&gt;==&lt;/code&gt; and &lt;code&gt;!=&lt;/code&gt; operators are intended to compare the contents of the objects, however an appropriate &lt;code&gt;opEquals&lt;/code&gt; override must be defined for this to work. The default &lt;code&gt;opEquals&lt;/code&gt; provided by the root &lt;code&gt;Object&lt;/code&gt; class is equivalent to the &lt;code&gt;is&lt;/code&gt; operator. Comparing against &lt;code&gt;null&lt;/code&gt; is invalid, as &lt;code&gt;null&lt;/code&gt; has no contents. Use the &lt;code&gt;is&lt;/code&gt; and &lt;code&gt;!is&lt;/code&gt; operators instead.</source>
          <target state="translated">Para los objetos de clase, los operadores &lt;code&gt;==&lt;/code&gt; y &lt;code&gt;!=&lt;/code&gt; Est&amp;aacute;n destinados a comparar el contenido de los objetos, sin embargo, se debe definir una anulaci&amp;oacute;n &lt;code&gt;opEquals&lt;/code&gt; adecuada para que esto funcione. El &lt;code&gt;opEquals&lt;/code&gt; predeterminado proporcionado por la clase de &lt;code&gt;Object&lt;/code&gt; ra&amp;iacute;z es equivalente al operador &lt;code&gt;is&lt;/code&gt; . La comparaci&amp;oacute;n con &lt;code&gt;null&lt;/code&gt; no es v&amp;aacute;lida, ya que &lt;code&gt;null&lt;/code&gt; no tiene contenido. Utilice los operadores &lt;code&gt;is&lt;/code&gt; y &lt;code&gt;!is&lt;/code&gt; Is en su lugar.</target>
        </trans-unit>
        <trans-unit id="d5b1405cc3330cccfdcfd53a468de428485e9157" translate="yes" xml:space="preserve">
          <source>For class objects, the relational operators compare the contents of the objects. Therefore, comparing against &lt;code&gt;null&lt;/code&gt; is invalid, as &lt;code&gt;null&lt;/code&gt; has no contents.</source>
          <target state="translated">Para los objetos de clase, los operadores relacionales comparan el contenido de los objetos. Por lo tanto, la comparaci&amp;oacute;n con &lt;code&gt;null&lt;/code&gt; no es v&amp;aacute;lida, ya que &lt;code&gt;null&lt;/code&gt; no tiene contenido.</target>
        </trans-unit>
        <trans-unit id="ab366bbd1fd34ad6f5b2cd340e858e3c25d5bb75" translate="yes" xml:space="preserve">
          <source>For class objects, the result of Object.opCmp() forms the left operand, and 0 forms the right operand. The result of the relational expression (o1 op o2) is:</source>
          <target state="translated">Para los objetos de clase,el resultado de Object.opCmp()forma el operando izquierdo,y el 0 forma el operando derecho.El resultado de la expresión relacional (o1 op o2)es:</target>
        </trans-unit>
        <trans-unit id="e894f77d4bc27bedbf87e79de7b7a21550ebd3e1" translate="yes" xml:space="preserve">
          <source>For class objects:</source>
          <target state="translated">Para objetos de clase:</target>
        </trans-unit>
        <trans-unit id="6ae638739525d1c55b35c525b46eec46d1197fc5" translate="yes" xml:space="preserve">
          <source>For completeness a level 1 trie is simply an array. The current implementation takes advantage of bit-packing values when the range is known to be limited in advance (such as &lt;code&gt;bool&lt;/code&gt;). See also &lt;a href=&quot;#BitPacked&quot;&gt;&lt;code&gt;BitPacked&lt;/code&gt;&lt;/a&gt; for enforcing it manually. The major size advantage however comes from the fact that multiple &lt;b&gt;identical pages on every level are merged&lt;/b&gt; by construction.</source>
          <target state="translated">Para completar, un nivel 1 trie es simplemente una matriz. La implementaci&amp;oacute;n actual aprovecha los valores de empaquetado de bits cuando se sabe que el rango est&amp;aacute; limitado de antemano (como &lt;code&gt;bool&lt;/code&gt; ). Consulte tambi&amp;eacute;n &lt;a href=&quot;#BitPacked&quot;&gt; &lt;code&gt;BitPacked&lt;/code&gt; &lt;/a&gt; para aplicarlo manualmente. Sin embargo, la mayor ventaja de tama&amp;ntilde;o proviene del hecho de que varias &lt;b&gt;p&amp;aacute;ginas id&amp;eacute;nticas en cada nivel se fusionan&lt;/b&gt; por construcci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="8ebdc89d7f40766ce711349010ffd3cd409b6e68" translate="yes" xml:space="preserve">
          <source>For complex numbers, equality is defined as equivalent to:</source>
          <target state="translated">En el caso de los números complejos,la igualdad se define como equivalente a:</target>
        </trans-unit>
        <trans-unit id="c92d80178cde078393b89e6d6a1bab596929a28f" translate="yes" xml:space="preserve">
          <source>For consistency and predictability, there are several standard sections. None of these are required to be present.</source>
          <target state="translated">Para la consistencia y la previsibilidad,hay varias secciones estándar.No es necesario que ninguna de ellas esté presente.</target>
        </trans-unit>
        <trans-unit id="b5df2d0a44db277a01e403815ff3d6ffbf0a4688" translate="yes" xml:space="preserve">
          <source>For console programs, &lt;code&gt;main()&lt;/code&gt; serves as the entry point. It gets called after all the module initializers are run, and after any unittests are run. After it returns, all the module destructors are run. &lt;code&gt;main()&lt;/code&gt; must be declared using one of the following forms:</source>
          <target state="translated">Para los programas de consola, &lt;code&gt;main()&lt;/code&gt; sirve como punto de entrada. Se llama despu&amp;eacute;s de que se ejecutan todos los inicializadores del m&amp;oacute;dulo y despu&amp;eacute;s de que se ejecutan las pruebas unitarias. Una vez que vuelve, se ejecutan todos los destructores de m&amp;oacute;dulos. &lt;code&gt;main()&lt;/code&gt; debe declararse utilizando una de las siguientes formas:</target>
        </trans-unit>
        <trans-unit id="a87a16b2108087eba4cfd4c27e06f2199e9c9ea6" translate="yes" xml:space="preserve">
          <source>For convenience</source>
          <target state="translated">Por conveniencia</target>
        </trans-unit>
        <trans-unit id="c28923eb8e6fce56c97d1e69a2459b17db795a95" translate="yes" xml:space="preserve">
          <source>For convenience, if the seed is const, or has qualified fields, then &lt;code&gt;reduce&lt;/code&gt; will operate on an unqualified copy. If this happens then the returned type will not perfectly match &lt;code&gt;S&lt;/code&gt;.</source>
          <target state="translated">Por conveniencia, si la semilla es constante o tiene campos calificados, entonces &lt;code&gt;reduce&lt;/code&gt; operar&amp;aacute; en una copia no calificada. Si esto sucede, entonces el tipo devuelto no coincidir&amp;aacute; perfectamente &lt;code&gt;S&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="db55a017e4d8880bceaa15cbff12d8e02dda2446" translate="yes" xml:space="preserve">
          <source>For convenience, this module publicly imports &lt;a href=&quot;core_time&quot;&gt;&lt;code&gt;core.time&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Por conveniencia, este m&amp;oacute;dulo importa p&amp;uacute;blicamente &lt;a href=&quot;core_time&quot;&gt; &lt;code&gt;core.time&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0750ffdd6d85bc11bd3ef50c265df606e3d06eba" translate="yes" xml:space="preserve">
          <source>For conversion of strings to signed types, the grammar recognized is:</source>
          <target state="translated">Para la conversión de cuerdas a tipos firmados,la gramática reconocida es:</target>
        </trans-unit>
        <trans-unit id="6d295d9ab6e17239455a68d95e6a9009da2b2b99" translate="yes" xml:space="preserve">
          <source>For conversion to unsigned types, the grammar recognized is:</source>
          <target state="translated">Para la conversión a tipos sin signo,la gramática reconocida es:</target>
        </trans-unit>
        <trans-unit id="7cbf49f210f0c77ac5cb0d36bff7e0a64b475c82" translate="yes" xml:space="preserve">
          <source>For correct comparisons, returns a positive integer if &lt;code&gt;lhs &amp;gt; rhs&lt;/code&gt;, a negative integer if &lt;code&gt;lhs &amp;lt; rhs&lt;/code&gt;, &lt;code&gt;0&lt;/code&gt; if the two are equal.</source>
          <target state="translated">Para las comparaciones correctas, devuelve un entero positivo si &lt;code&gt;lhs &amp;gt; rhs&lt;/code&gt; , un entero negativo si &lt;code&gt;lhs &amp;lt; rhs&lt;/code&gt; , &lt;code&gt;0&lt;/code&gt; si los dos son iguales.</target>
        </trans-unit>
        <trans-unit id="3eb5e30aca486d38067e5e0193c4b1bb0345617f" translate="yes" xml:space="preserve">
          <source>For correct comparisons, returns a positive integer if &lt;code&gt;lhs &amp;gt; rhs&lt;/code&gt;, a negative integer if &lt;code&gt;lhs &amp;lt; rhs&lt;/code&gt;, &lt;code&gt;0&lt;/code&gt; if the two are equal. Upon a mistaken comparison such as &lt;code&gt;int(-1) &amp;lt; uint(0)&lt;/code&gt;, the function never returns because it aborts the program.</source>
          <target state="translated">Para las comparaciones correctas, devuelve un entero positivo si &lt;code&gt;lhs &amp;gt; rhs&lt;/code&gt; , un entero negativo si &lt;code&gt;lhs &amp;lt; rhs&lt;/code&gt; , &lt;code&gt;0&lt;/code&gt; si los dos son iguales. Tras una comparaci&amp;oacute;n err&amp;oacute;nea como &lt;code&gt;int(-1) &amp;lt; uint(0)&lt;/code&gt; , la funci&amp;oacute;n nunca regresa porque aborta el programa.</target>
        </trans-unit>
        <trans-unit id="fa11ef91f282359e697ab411a2105694aa1fc413" translate="yes" xml:space="preserve">
          <source>For debuggers that can be modified to accept new types, the following extensions help them fully support the types.</source>
          <target state="translated">Para los depuradores que pueden ser modificados para aceptar nuevos tipos,las siguientes extensiones les ayudan a soportar completamente los tipos.</target>
        </trans-unit>
        <trans-unit id="70f5609ca5e86e5be455bc08ca5f8a240497ea5a" translate="yes" xml:space="preserve">
          <source>For dynamic array and object parameters, which are always passed by reference, in/out/ref apply only to the reference and not the contents.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63e9558b3c028e1d9a23d1722de151ab9342540d" translate="yes" xml:space="preserve">
          <source>For dynamic array and object parameters, which are passed by reference, in/out/ref apply only to the reference and not the contents.</source>
          <target state="translated">En el caso del conjunto dinámico y los parámetros de los objetos,que se pasan por referencia,in/out/ref se aplican sólo a la referencia y no al contenido.</target>
        </trans-unit>
        <trans-unit id="26ffddfdbc1c41c2be1034e80310b3f852b74078" translate="yes" xml:space="preserve">
          <source>For each active attribute (ref/const/nogc/etc) call &lt;code&gt;fp&lt;/code&gt; with a void* for the work param and a string representation of the attribute.</source>
          <target state="translated">Para cada atributo activo (ref / const / nogc / etc), llame a &lt;code&gt;fp&lt;/code&gt; con un * vac&amp;iacute;o para el par&amp;aacute;metro de trabajo y una representaci&amp;oacute;n de cadena del atributo.</target>
        </trans-unit>
        <trans-unit id="8eea3bce7669308b1434c353731e136dc4b97c1c" translate="yes" xml:space="preserve">
          <source>For each active modifier (MODFlags.const_, MODFlags.immutable_, etc) call &lt;code&gt;fp&lt;/code&gt; with a void* for the work param and a string representation of the attribute.</source>
          <target state="translated">Para cada modificador activo (MODFlags.const_, MODFlags.immutable_, etc.) llame a &lt;code&gt;fp&lt;/code&gt; con un vac&amp;iacute;o * para el par&amp;aacute;metro de trabajo y una representaci&amp;oacute;n de cadena del atributo.</target>
        </trans-unit>
        <trans-unit id="3203682624a9b4a1635c6de69e488d06fa56e15c" translate="yes" xml:space="preserve">
          <source>For each evaluation that yields a temporary value, the lifetime of that temporary begins at the evaluation point, similarly to creation of a usual named value initialized with an expression.</source>
          <target state="translated">Para cada evaluación que arroje un valor temporal,la duración de ese temporal comienza en el punto de evaluación,de manera análoga a la creación de un valor con nombre habitual inicializado con una expresión.</target>
        </trans-unit>
        <trans-unit id="5f7caa6316d56bf976ab623e5dd0b440be2fe098" translate="yes" xml:space="preserve">
          <source>For each function &lt;code&gt;f&lt;/code&gt; in &lt;code&gt;fun&lt;/code&gt;, the corresponding seed type &lt;code&gt;S&lt;/code&gt; is &lt;code&gt;Unqual!(typeof(f(e, e)))&lt;/code&gt;, where &lt;code&gt;e&lt;/code&gt; is an element of &lt;code&gt;r&lt;/code&gt;: &lt;code&gt;ElementType!R&lt;/code&gt; for ranges, and &lt;code&gt;ForeachType!R&lt;/code&gt; otherwise.</source>
          <target state="translated">Para cada funci&amp;oacute;n &lt;code&gt;f&lt;/code&gt; en &lt;code&gt;fun&lt;/code&gt; , el tipo de semilla &lt;code&gt;S&lt;/code&gt; correspondiente es &lt;code&gt;Unqual!(typeof(f(e, e)))&lt;/code&gt; , donde &lt;code&gt;e&lt;/code&gt; es un elemento de &lt;code&gt;r&lt;/code&gt; : &lt;code&gt;ElementType!R&lt;/code&gt; para rangos, y &lt;code&gt;ForeachType!R&lt;/code&gt; contrario.</target>
        </trans-unit>
        <trans-unit id="89f96ba2b9022471ac4b3f99072ac57893d52c5d" translate="yes" xml:space="preserve">
          <source>For each function that has exception handlers, an EH table entry is generated.</source>
          <target state="translated">Para cada función que tiene manejadores de excepción,se genera una entrada en la tabla EH.</target>
        </trans-unit>
        <trans-unit id="c170bc5a2dcbb7f263f34807c28c73343f6168e3" translate="yes" xml:space="preserve">
          <source>For each template parameter, the following rules are applied in order until a type is deduced for each parameter:</source>
          <target state="translated">Para cada parámetro de la plantilla,se aplican las siguientes reglas en orden hasta que se deduzca un tipo para cada parámetro:</target>
        </trans-unit>
        <trans-unit id="de2d36eb496ad6425d4fddf01b0f74d4997c1c21" translate="yes" xml:space="preserve">
          <source>For each type &lt;code&gt;T&lt;/code&gt; on the left-hand side and each type &lt;code&gt;U&lt;/code&gt; on the right-hand side, values of type &lt;code&gt;T&lt;/code&gt; can be compared with values of type &lt;code&gt;U&lt;/code&gt;.</source>
          <target state="translated">Para cada tipo &lt;code&gt;T&lt;/code&gt; en el lado de la mano izquierda y cada tipo &lt;code&gt;U&lt;/code&gt; en el lado de la derecha, los valores de tipo &lt;code&gt;T&lt;/code&gt; se pueden comparar con valores de tipo &lt;code&gt;U&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e27d5d7f20198430510bed8d554d11950a10ed02" translate="yes" xml:space="preserve">
          <source>For each value &lt;code&gt;v1&lt;/code&gt; on the left-hand side and each value &lt;code&gt;v2&lt;/code&gt; on the right-hand side, the expression &lt;code&gt;v1 == v2&lt;/code&gt; is true.</source>
          <target state="translated">Para cada valor &lt;code&gt;v1&lt;/code&gt; en el lado izquierdo y cada valor &lt;code&gt;v2&lt;/code&gt; en el lado derecho, la expresi&amp;oacute;n &lt;code&gt;v1 == v2&lt;/code&gt; es verdadera.</target>
        </trans-unit>
        <trans-unit id="9025d5cca105be0e8976e2851061cc835c9a962a" translate="yes" xml:space="preserve">
          <source>For efficiency, UUID is implemented as a struct. UUIDs are therefore empty if not explicitly initialized. An UUID is empty if &lt;a href=&quot;#empty&quot;&gt;`UUID.empty`&lt;/a&gt; is true. Empty UUIDs are equal to &lt;code&gt;UUID.init&lt;/code&gt;, which is a UUID with all 16 bytes set to 0. Use UUID's constructors or the UUID generator functions to get an initialized UUID.</source>
          <target state="translated">Para mayor eficiencia, UUID se implementa como una estructura. Por lo tanto, los UUID est&amp;aacute;n vac&amp;iacute;os si no se inicializan expl&amp;iacute;citamente. Un UUID est&amp;aacute; vac&amp;iacute;o si &lt;a href=&quot;#empty&quot;&gt;`UUID.empty`&lt;/a&gt; es verdadero. Los UUID vac&amp;iacute;os son iguales a &lt;code&gt;UUID.init&lt;/code&gt; , que es un UUID con los 16 bytes establecidos en 0. Utilice los constructores de UUID o las funciones del generador de UUID para obtener un UUID inicializado.</target>
        </trans-unit>
        <trans-unit id="62d0aac1e2c0659f1732b0c95533d24eac16f4a7" translate="yes" xml:space="preserve">
          <source>For example the primitives &lt;code&gt;c.remove(r)&lt;/code&gt; and &lt;code&gt;c.linearRemove(r)&lt;/code&gt; both remove the sequence of elements in range &lt;code&gt;r&lt;/code&gt; from the container &lt;code&gt;c&lt;/code&gt;. The primitive &lt;code&gt;c.remove(r)&lt;/code&gt; guarantees &amp;Omicron;(&lt;code&gt;n&lt;sub&gt;r&lt;/sub&gt; log n&lt;sub&gt;c&lt;/sub&gt;&lt;/code&gt;) complexity in the worst case and &lt;code&gt;c.linearRemove(r)&lt;/code&gt; relaxes this guarantee to &amp;Omicron;(&lt;code&gt;n&lt;sub&gt;c&lt;/sub&gt;&lt;/code&gt;).  Since a sequence of elements can be removed from a &lt;a href=&quot;std_container_dlist&quot;&gt;doubly linked list&lt;/a&gt; in constant time, &lt;code&gt;DList&lt;/code&gt; provides the primitive &lt;code&gt;c.remove(r)&lt;/code&gt; as well as &lt;code&gt;c.linearRemove(r)&lt;/code&gt;. On the other hand &lt;a href=&quot;std_container_array&quot;&gt;Array&lt;/a&gt; only offers &lt;code&gt;c.linearRemove(r)&lt;/code&gt;.  The following table describes the common set of primitives that containers implement. A container need not implement all primitives, but if a primitive is implemented, it must support the syntax described in the &lt;b&gt;syntax&lt;/b&gt; column with the semantics described in the &lt;b&gt;description&lt;/b&gt; column, and it must not have a worst-case complexity worse than denoted in big-O notation in the &amp;Omicron;(&lt;code&gt;&amp;middot;&lt;/code&gt;) column. Below, &lt;code&gt;C&lt;/code&gt; means a container type, &lt;code&gt;c&lt;/code&gt; is a value of container type, &lt;code&gt;n&lt;sub&gt;x&lt;/sub&gt;&lt;/code&gt; represents the effective length of value &lt;code&gt;x&lt;/code&gt;, which could be a single element (in which case &lt;code&gt;n&lt;sub&gt;x&lt;/sub&gt;&lt;/code&gt; is &lt;code&gt;1&lt;/code&gt;), a container, or a range.</source>
          <target state="translated">Por ejemplo, las primitivas &lt;code&gt;c.remove(r)&lt;/code&gt; y &lt;code&gt;c.linearRemove(r)&lt;/code&gt; eliminan la secuencia de elementos en el rango &lt;code&gt;r&lt;/code&gt; del contenedor &lt;code&gt;c&lt;/code&gt; . La primitiva &lt;code&gt;c.remove(r)&lt;/code&gt; garantiza la complejidad &amp;Omicron; ( &lt;code&gt;n&lt;sub&gt;r&lt;/sub&gt; log n&lt;sub&gt;c&lt;/sub&gt;&lt;/code&gt; ) en el peor de los casos y &lt;code&gt;c.linearRemove(r)&lt;/code&gt; relaja esta garant&amp;iacute;a a &amp;Omicron; ( &lt;code&gt;n&lt;sub&gt;c&lt;/sub&gt;&lt;/code&gt; ). Dado que una secuencia de elementos se puede eliminar de una &lt;a href=&quot;std_container_dlist&quot;&gt;lista doblemente vinculada&lt;/a&gt; en tiempo constante, &lt;code&gt;DList&lt;/code&gt; proporciona la primitiva &lt;code&gt;c.remove(r)&lt;/code&gt; y &lt;code&gt;c.linearRemove(r)&lt;/code&gt; . Por otro lado, &lt;a href=&quot;std_container_array&quot;&gt;Array&lt;/a&gt;solo ofrece &lt;code&gt;c.linearRemove(r)&lt;/code&gt; . La siguiente tabla describe el conjunto com&amp;uacute;n de primitivas que implementan los contenedores. Un contenedor no necesita implementar todas las primitivas, pero si se implementa una primitiva, debe admitir la sintaxis descrita en la columna de &lt;b&gt;sintaxis&lt;/b&gt; con la sem&amp;aacute;ntica descrita en la columna de &lt;b&gt;descripci&amp;oacute;n&lt;/b&gt; , y no debe tener una complejidad de peor caso peor que la indicada en grande. O notaci&amp;oacute;n en la columna &amp;Omicron; ( &lt;code&gt;&amp;middot;&lt;/code&gt; ). A continuaci&amp;oacute;n, &lt;code&gt;C&lt;/code&gt; significa un tipo de contenedor, &lt;code&gt;c&lt;/code&gt; es un valor del tipo de contenedor, &lt;code&gt;n&lt;sub&gt;x&lt;/sub&gt;&lt;/code&gt; representa la longitud efectiva del valor &lt;code&gt;x&lt;/code&gt; , que podr&amp;iacute;a ser un solo elemento (en cuyo caso &lt;code&gt;n&lt;sub&gt;x&lt;/sub&gt;&lt;/code&gt; es &lt;code&gt;1&lt;/code&gt; ), un contenedor o un rango.</target>
        </trans-unit>
        <trans-unit id="d00edd8f12a04d1befc302c87668dfdb2d903e2a" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;\U0001F603&lt;/code&gt; represents the Unicode character U+1F603 (SMILING FACE WITH OPEN MOUTH).</source>
          <target state="translated">Por ejemplo, &lt;code&gt;\U0001F603&lt;/code&gt; representa el car&amp;aacute;cter Unicode U + 1F603 (CARA SONRIENTE CON BOCA ABIERTA).</target>
        </trans-unit>
        <trans-unit id="bddb2b6572ea79b1700e73180c6a9ef4a9e2c7be" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;\u03B3&lt;/code&gt; represents the Unicode character &amp;gamma; (U+03B3 - GREEK SMALL LETTER GAMMA).</source>
          <target state="translated">Por ejemplo, &lt;code&gt;\u03B3&lt;/code&gt; representa el car&amp;aacute;cter Unicode &amp;gamma; (U + 03B3 - GAMA GRIETA DE LETRA PEQUE&amp;Ntilde;A).</target>
        </trans-unit>
        <trans-unit id="e8c9021af829ec2346f217a33bffab12b0880918" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;a[index]&lt;/code&gt; is really &lt;code&gt;a&lt;/code&gt;, and &lt;code&gt;s.f&lt;/code&gt; is really &lt;code&gt;s&lt;/code&gt;.</source>
          <target state="translated">Por ejemplo, &lt;code&gt;a[index]&lt;/code&gt; es realmente &lt;code&gt;a&lt;/code&gt; , y &lt;code&gt;s.f&lt;/code&gt; es realmente &lt;code&gt;s&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="429a44b7b476fadc40e55c9fb2ea9f99eab49de1" translate="yes" xml:space="preserve">
          <source>For example, a programmatic equivalent of Unix's &lt;code&gt;chmod +x name&lt;/code&gt; to make a file executable is &lt;code&gt;name.setAttributes(name.getAttributes | octal!700)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aee49e2b5de63bc28985d9e3f5b2391109f50868" translate="yes" xml:space="preserve">
          <source>For example, consider a class that is a container for two elements:</source>
          <target state="translated">Por ejemplo,consideremos una clase que es un contenedor de dos elementos:</target>
        </trans-unit>
        <trans-unit id="f4060213712449048c8c23e8aed13169261c66f1" translate="yes" xml:space="preserve">
          <source>For example, for the Intel Pentium:</source>
          <target state="translated">Por ejemplo,para el Intel Pentium:</target>
        </trans-unit>
        <trans-unit id="56a66959fa3d6d051e3f2985a858c24aef88cfec" translate="yes" xml:space="preserve">
          <source>For example, given a class &lt;code&gt;Sum&lt;/code&gt; that is used to add two values, a unit test can be given:</source>
          <target state="translated">Por ejemplo, dada una clase &lt;code&gt;Sum&lt;/code&gt; que se usa para agregar dos valores, se puede dar una prueba unitaria:</target>
        </trans-unit>
        <trans-unit id="afa20f7fd4e06e98278c1c050fed1f04af8aa95d" translate="yes" xml:space="preserve">
          <source>For example, here is how to remove a single element from an array:</source>
          <target state="translated">Por ejemplo,aquí está la forma de eliminar un solo elemento de un conjunto:</target>
        </trans-unit>
        <trans-unit id="664b22b4de56d86a94d4d1f08efe5f39ea8b5955" translate="yes" xml:space="preserve">
          <source>For example, if this qualifies to 'a1.a2' and pkg - to 'a1.a2.a3', this function returns 'true'. If it is other way around or qualified package paths conflict function returns 'false'.</source>
          <target state="translated">Por ejemplo,si esto califica a &quot;a1.a2&quot; y pkg-a &quot;a1.a2.a3&quot;,esta función devuelve &quot;verdadero&quot;.Si es al revés o si califica a la función de conflicto de rutas de paquetes devuelve 'false'.</target>
        </trans-unit>
        <trans-unit id="2f4a0bc25491ad453cd52460e2badab7db117513" translate="yes" xml:space="preserve">
          <source>For example, in order to overload the &lt;code&gt;-&lt;/code&gt; (negation) operator for struct S, and no other operator:</source>
          <target state="translated">Por ejemplo, para sobrecargar el operador &lt;code&gt;-&lt;/code&gt; (negaci&amp;oacute;n) para la estructura S, y ning&amp;uacute;n otro operador:</target>
        </trans-unit>
        <trans-unit id="1db4a09c9c6a230d99b45c4869c4f6e84c23d582" translate="yes" xml:space="preserve">
          <source>For example, one could redefine &lt;code&gt;DDOC_SUMMARY&lt;/code&gt;:</source>
          <target state="translated">Por ejemplo, uno podr&amp;iacute;a redefinir &lt;code&gt;DDOC_SUMMARY&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="0e5d29b3a3287b6048a7baf84989543162cfde72" translate="yes" xml:space="preserve">
          <source>For example, the &lt;code&gt;immutable&lt;/code&gt; type qualifier can be used to create variables of immutable type, such as:</source>
          <target state="translated">Por ejemplo, el calificador de tipo &lt;code&gt;immutable&lt;/code&gt; se puede usar para crear variables de tipo inmutable, como:</target>
        </trans-unit>
        <trans-unit id="b3a7c81f27baa62d867db8143dafce975505e522" translate="yes" xml:space="preserve">
          <source>For example, the expression &lt;code&gt;(p1 &amp;gt; q1 &amp;amp;&amp;amp; p2 &amp;lt;= q2)&lt;/code&gt; is permitted when &lt;code&gt;p1&lt;/code&gt;, &lt;code&gt;p2&lt;/code&gt; are expressions yielding pointers to memory block</source>
          <target state="translated">Por ejemplo, la expresi&amp;oacute;n &lt;code&gt;(p1 &amp;gt; q1 &amp;amp;&amp;amp; p2 &amp;lt;= q2)&lt;/code&gt; est&amp;aacute; permitida cuando &lt;code&gt;p1&lt;/code&gt; , &lt;code&gt;p2&lt;/code&gt; son expresiones que generan punteros al bloque de memoria</target>
        </trans-unit>
        <trans-unit id="afa193b836783a5ecabcde946cad5a9128e2b421" translate="yes" xml:space="preserve">
          <source>For example, the following function template only matches with odd values of &lt;code&gt;N&lt;/code&gt;:</source>
          <target state="translated">Por ejemplo, la siguiente plantilla de funci&amp;oacute;n solo coincide con valores impares de &lt;code&gt;N&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="38096dc369d1ebe6ec7ec60de5ac2d73db72feee" translate="yes" xml:space="preserve">
          <source>For example: &lt;code&gt;\101&lt;/code&gt; represents the character with the value 65 (&lt;code&gt;'A'&lt;/code&gt;). Analogous to hexadecimal characters, the largest byte value is &lt;code&gt;\377&lt;/code&gt; (= &lt;code&gt;\xFF&lt;/code&gt; in hexadecimal or &lt;code&gt;255&lt;/code&gt; in decimal)</source>
          <target state="translated">Por ejemplo: &lt;code&gt;\101&lt;/code&gt; representa el car&amp;aacute;cter con el valor 65 ( &lt;code&gt;'A'&lt;/code&gt; ). An&amp;aacute;logo a los caracteres hexadecimales, el valor de byte m&amp;aacute;s grande es &lt;code&gt;\377&lt;/code&gt; (= &lt;code&gt;\xFF&lt;/code&gt; en hexadecimal o &lt;code&gt;255&lt;/code&gt; en decimal)</target>
        </trans-unit>
        <trans-unit id="8187ba92149a37ed481170300ec07180dd3c8361" translate="yes" xml:space="preserve">
          <source>For example: &lt;code&gt;\xFF&lt;/code&gt; represents the character with the value 255.</source>
          <target state="translated">Por ejemplo: &lt;code&gt;\xFF&lt;/code&gt; representa el car&amp;aacute;cter con el valor 255.</target>
        </trans-unit>
        <trans-unit id="4d1688fe7c391489009113fe8f20b160cce3978f" translate="yes" xml:space="preserve">
          <source>For examples see the &lt;a href=&quot;#Grapheme&quot;&gt;&lt;code&gt;Grapheme&lt;/code&gt;&lt;/a&gt; below.</source>
          <target state="translated">Para ejemplos ver el &lt;a href=&quot;#Grapheme&quot;&gt; &lt;code&gt;Grapheme&lt;/code&gt; &lt;/a&gt; continuaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="79381ea951fd6aadf813123f5b529dd772681030" translate="yes" xml:space="preserve">
          <source>For finite ranges, the result of &lt;code&gt;opSlice&lt;/code&gt; must be of the same type as the original range type. If the range defines &lt;code&gt;opDollar&lt;/code&gt;, then it must support subtraction.</source>
          <target state="translated">Para rangos finitos, el resultado de &lt;code&gt;opSlice&lt;/code&gt; debe ser del mismo tipo que el tipo de rango original. Si el rango define &lt;code&gt;opDollar&lt;/code&gt; , entonces debe admitir la resta.</target>
        </trans-unit>
        <trans-unit id="c77ba69b2b7b1720fb5f6b789826c71a3c605b97" translate="yes" xml:space="preserve">
          <source>For float, double, and real values, the &lt;a href=&quot;type#usual-arithmetic-conversions&quot;&gt;Usual Arithmetic Conversions&lt;/a&gt; are applied to bring them to a common type before comparison. The values &lt;code&gt;-0&lt;/code&gt; and &lt;code&gt;+0&lt;/code&gt; are considered equal. If either or both operands are NAN, then &lt;code&gt;==&lt;/code&gt; returns false and &lt;code&gt;!=&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt;. Otherwise, the bit patterns of the common type are compared for equality.</source>
          <target state="translated">Para valores flotantes, dobles y reales, las &lt;a href=&quot;type#usual-arithmetic-conversions&quot;&gt;conversiones aritm&amp;eacute;ticas usuales&lt;/a&gt; se aplican para llevarlas a un tipo com&amp;uacute;n antes de la comparaci&amp;oacute;n. Los valores &lt;code&gt;-0&lt;/code&gt; y &lt;code&gt;+0&lt;/code&gt; se consideran iguales. Si uno o ambos operandos son NAN, entonces &lt;code&gt;==&lt;/code&gt; devuelve falso y &lt;code&gt;!=&lt;/code&gt; Devuelve &lt;code&gt;true&lt;/code&gt; . De lo contrario, los patrones de bits del tipo com&amp;uacute;n se comparan para la igualdad.</target>
        </trans-unit>
        <trans-unit id="ec28333c5408aa27a2824def03dd893394acfa05" translate="yes" xml:space="preserve">
          <source>For floating point inputs, calculations are made in &lt;a href=&quot;https://dlang.org/spec/type.html&quot;&gt;&lt;code&gt;real&lt;/code&gt;&lt;/a&gt; precision for &lt;code&gt;real&lt;/code&gt; inputs and in &lt;code&gt;double&lt;/code&gt; precision otherwise (Note this is a special case that deviates from &lt;code&gt;fold&lt;/code&gt;'s behavior, which would have kept &lt;code&gt;float&lt;/code&gt; precision for a &lt;code&gt;float&lt;/code&gt; range). For all other types, the calculations are done in the same type obtained from from adding two elements of the range, which may be a different type from the elements themselves (for example, in case of &lt;a href=&quot;https://dlang.org/spec/type.html#integer-promotions&quot;&gt;integral promotion&lt;/a&gt;).</source>
          <target state="translated">Para entradas de punto flotante, los c&amp;aacute;lculos se realizan con precisi&amp;oacute;n &lt;a href=&quot;https://dlang.org/spec/type.html&quot;&gt; &lt;code&gt;real&lt;/code&gt; &lt;/a&gt; para entradas &lt;code&gt;real&lt;/code&gt; es y con &lt;code&gt;double&lt;/code&gt; precisi&amp;oacute;n de lo contrario (tenga en cuenta que este es un caso especial que se desv&amp;iacute;a del comportamiento del &lt;code&gt;fold&lt;/code&gt; , que habr&amp;iacute;a mantenido la precisi&amp;oacute;n &lt;code&gt;float&lt;/code&gt; para un rango &lt;code&gt;float&lt;/code&gt; ). Para todos los dem&amp;aacute;s tipos, los c&amp;aacute;lculos se realizan en el mismo tipo obtenido al agregar dos elementos del rango, que pueden ser de un tipo diferente de los elementos mismos (por ejemplo, en caso de &lt;a href=&quot;https://dlang.org/spec/type.html#integer-promotions&quot;&gt;promoci&amp;oacute;n integral&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="765c4ec4b98b1848bab9c8fba86795001e6760ec" translate="yes" xml:space="preserve">
          <source>For floating point operands, the * and / operations correspond to the IEEE 754 floating point equivalents. % is not the same as the IEEE 754 remainder. For example, 15.0 % 10.0 == 5.0, whereas for IEEE 754, remainder(15.0,10.0) == -5.0.</source>
          <target state="translated">Para los operandos en coma flotante,las operaciones*y/corresponden a los equivalentes en coma flotante del IEEE 754.El porcentaje no es el mismo que el resto de IEEE 754.Por ejemplo,15,0 % 10,0 ==5,0,mientras que para el IEEE 754,el resto(15,0,10,0)==-5,0.</target>
        </trans-unit>
        <trans-unit id="311831dfcbe2aa85299a9b7419ec3f7edbd674b9" translate="yes" xml:space="preserve">
          <source>For floating point operations and expression intermediate values, a greater precision can be used than the type of the expression. Only the minimum precision is set by the types of the operands, not the maximum. &lt;b&gt;Implementation Note:&lt;/b&gt; On Intel x86 machines, for example, it is expected (but not required) that the intermediate calculations be done to the full 80 bits of precision implemented by the hardware.</source>
          <target state="translated">Para operaciones de coma flotante y valores intermedios de expresi&amp;oacute;n, se puede utilizar una mayor precisi&amp;oacute;n que el tipo de expresi&amp;oacute;n. Solo la precisi&amp;oacute;n m&amp;iacute;nima se establece por los tipos de operandos, no la m&amp;aacute;xima. &lt;b&gt;Nota de implementaci&amp;oacute;n:&lt;/b&gt; en m&amp;aacute;quinas Intel x86, por ejemplo, se espera (pero no es obligatorio) que los c&amp;aacute;lculos intermedios se realicen con los 80 bits completos de precisi&amp;oacute;n implementados por el hardware.</target>
        </trans-unit>
        <trans-unit id="a8f36fac9b0314aa81c6e99d081aedbe4af658c5" translate="yes" xml:space="preserve">
          <source>For floats, the largest possible payload is 0x3F_FFFF. For doubles, it is 0x3_FFFF_FFFF_FFFF. For 80-bit or 128-bit reals, it is 0x3FFF_FFFF_FFFF_FFFF.</source>
          <target state="translated">Para los flotadores,la mayor carga útil posible es 0x3F_FFFF.Para los dobles,es 0x3_FFFF_FFFF_FFFF.Para los reales de 80 o 128 bits,es 0x3FFF_FFFF_FFFF_FFFF.</target>
        </trans-unit>
        <trans-unit id="f68bb29877591d4b489a9f6fff54379ee749f0f3" translate="yes" xml:space="preserve">
          <source>For forward compatibility, the CPU is compared against different microarchitectures. For 32-bit x86, comparisons are made against the Intel PPro/PII/PIII/PM family.</source>
          <target state="translated">Para la compatibilidad con el futuro,la CPU se compara con diferentes microarquitecturas.Para el x86 de 32 bits,las comparaciones se hacen con la familia Intel PPro/PII/PIII/PM.</target>
        </trans-unit>
        <trans-unit id="cb68f2aaef1107ffda2b00fc87de858154352d8d" translate="yes" xml:space="preserve">
          <source>For functions which operate on Unicode characters, see &lt;a href=&quot;std_uni&quot;&gt;&lt;code&gt;std.uni&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Para las funciones que operan en caracteres Unicode, vea &lt;a href=&quot;std_uni&quot;&gt; &lt;code&gt;std.uni&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4c427f88fad780106904fb230a561fe45ae8afed" translate="yes" xml:space="preserve">
          <source>For functions, the &lt;code&gt;auto&lt;/code&gt; attribute means return type inference. See &lt;a href=&quot;https://dlang.org/function.html#auto-functions&quot;&gt;Auto Functions&lt;/a&gt;.</source>
          <target state="translated">Para las funciones, el atributo &lt;code&gt;auto&lt;/code&gt; m&amp;aacute;tico significa inferencia de tipo de retorno. Ver &lt;a href=&quot;https://dlang.org/function.html#auto-functions&quot;&gt;Funciones autom&amp;aacute;ticas&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="fb6e8700842932cee5fe004d021df4907ea6dd83" translate="yes" xml:space="preserve">
          <source>For further information see the the two functions defined inside of this template.</source>
          <target state="translated">Para más información ver las dos funciones definidas dentro de esta plantilla.</target>
        </trans-unit>
        <trans-unit id="6d45ac630dd39944ad55493060e8c4dac92d7fc5" translate="yes" xml:space="preserve">
          <source>For garbage collected pointers and references, however, there are some restrictions. These restrictions are minor, but they are intended to enable the maximum flexibility in garbage collector design.</source>
          <target state="translated">Sin embargo,en cuanto a los indicadores y referencias de la recogida de basura,hay algunas restricciones.Estas restricciones son menores,pero tienen por objeto permitir la máxima flexibilidad en el diseño de los recolectores de basura.</target>
        </trans-unit>
        <trans-unit id="b7afa355fcaa31af2cd3f80d70dbcf199acfca98" translate="yes" xml:space="preserve">
          <source>For historical compatibility when &lt;code&gt;nbits == 192&lt;/code&gt; and &lt;code&gt;UIntType&lt;/code&gt; is &lt;code&gt;uint&lt;/code&gt; a legacy hybrid PRNG is used consisting of a 160-bit xorshift combined with a 32-bit counter. This combined generator has period equal to the least common multiple of &lt;code&gt;2^^160 - 1&lt;/code&gt; and &lt;code&gt;2^^32&lt;/code&gt;.</source>
          <target state="translated">Por compatibilidad hist&amp;oacute;rica cuando &lt;code&gt;nbits == 192&lt;/code&gt; y &lt;code&gt;UIntType&lt;/code&gt; es &lt;code&gt;uint&lt;/code&gt; un h&amp;iacute;brido legado PRNG se utiliza consiste en un xorshift de 160 bits en combinaci&amp;oacute;n con un contador de 32 bits. Este generador combinado tiene un per&amp;iacute;odo igual al m&amp;iacute;nimo com&amp;uacute;n m&amp;uacute;ltiplo de &lt;code&gt;2^^160 - 1&lt;/code&gt; y &lt;code&gt;2^^32&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="184c65349a2ddaab04f57fbc0fe983f92c59a278" translate="yes" xml:space="preserve">
          <source>For hot code paths, it is worth profiling to see if the void initializer actually improves results.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="373d2d5153ba00f28887ffdca247e026ee396782" translate="yes" xml:space="preserve">
          <source>For hot code paths, it is worthwhile to check to see if the void initializer actually improves results before using it.</source>
          <target state="translated">En el caso de las rutas de códigos calientes,vale la pena comprobar si el inicializador de vacío realmente mejora los resultados antes de usarlo.</target>
        </trans-unit>
        <trans-unit id="e4f4bd7aa4cad79620e1f6020bf4450eeadc7446" translate="yes" xml:space="preserve">
          <source>For illustration purposes only, every method call results in assertion failure. Use &lt;a href=&quot;#utfMatcher&quot;&gt;&lt;code&gt;utfMatcher&lt;/code&gt;&lt;/a&gt; to obtain a concrete matcher for UTF-8 or UTF-16 encodings.</source>
          <target state="translated">Solo con fines ilustrativos, cada llamada a un m&amp;eacute;todo da como resultado un error de aserci&amp;oacute;n. Use &lt;a href=&quot;#utfMatcher&quot;&gt; &lt;code&gt;utfMatcher&lt;/code&gt; &lt;/a&gt; para obtener un emparejador concreto para las codificaciones UTF-8 o UTF-16.</target>
        </trans-unit>
        <trans-unit id="4cd5f2dc243960435d23cc958481129bcfb42bcc" translate="yes" xml:space="preserve">
          <source>For infinite ranges, when</source>
          <target state="translated">Para rangos infinitos,cuando</target>
        </trans-unit>
        <trans-unit id="aae2fd6469d641f1e8d553dabcf2fe7c0be1babf" translate="yes" xml:space="preserve">
          <source>For instance, if the function used to generate a range of time points generated successive Easters (i.e. you're iterating over all of the Easters within the interval), the initial date probably isn't an Easter. Using &lt;code&gt;PopFirst.yes&lt;/code&gt; would tell the function which returned the range that &lt;code&gt;popFront&lt;/code&gt; was to be called so that front would then be an Easter - the next one generated by the function (which when iterating forward would be the Easter following the original &lt;code&gt;front&lt;/code&gt;, while when iterating backward, it would be the Easter prior to the original &lt;code&gt;front&lt;/code&gt;). If &lt;code&gt;PopFirst.no&lt;/code&gt; were used, then &lt;code&gt;front&lt;/code&gt; would remain the original time point and it would not necessarily be a time point which would be generated by the range-generating function (which in many cases is exactly what is desired - e.g. if iterating over every day starting at the beginning of the interval).</source>
          <target state="translated">Por ejemplo, si la funci&amp;oacute;n utilizada para generar un rango de puntos de tiempo gener&amp;oacute; Pascuas sucesivas (es decir, est&amp;aacute; iterando sobre todas las Pascuas dentro del intervalo), la fecha inicial probablemente no sea una Pascua. El uso de &lt;code&gt;PopFirst.yes&lt;/code&gt; le dir&amp;aacute; a la funci&amp;oacute;n que devolvi&amp;oacute; el rango que se &lt;code&gt;popFront&lt;/code&gt; para que front sea una Pascua, la siguiente generada por la funci&amp;oacute;n (que al iterar hacia adelante ser&amp;iacute;a la Pascua que sigue al &lt;code&gt;front&lt;/code&gt; original , mientras que cuando iterando hacia atr&amp;aacute;s, ser&amp;iacute;a la Pascua anterior al &lt;code&gt;front&lt;/code&gt; original ). Si se us&amp;oacute; &lt;code&gt;PopFirst.no&lt;/code&gt; , entonces el &lt;code&gt;front&lt;/code&gt; seguir&amp;iacute;a siendo el punto de tiempo original y no ser&amp;iacute;a necesariamente un punto de tiempo generado por la funci&amp;oacute;n de generaci&amp;oacute;n de rango (que en muchos casos es exactamente lo que se desea, por ejemplo, si se repite todos los d&amp;iacute;as comenzando al principio del intervalo) .</target>
        </trans-unit>
        <trans-unit id="1a761bf1c3bac8790220dd0e044887eeb25a2cc8" translate="yes" xml:space="preserve">
          <source>For instructions with the imm8 version: PSLLD, PSLLQ, PSLLW, PSRAD, PSRAW, PSRLD, PSRLQ, PSRLW, PSRLDQ, PSLLDQ</source>
          <target state="translated">Para instrucciones con la versión inm8:PSLLD,PSLLQ,PSLLW,PSRAD,PSRAW,PSRLD,PSRLQ,PSRLW,PSRLDQ,PSLLDQ</target>
        </trans-unit>
        <trans-unit id="abfb408bf733bafad2f02f380cf2ab1c7688837d" translate="yes" xml:space="preserve">
          <source>For instructions: CMPPD, CMPSS, CMPSD, CMPPS, PSHUFD, PSHUFHW, PSHUFLW, BLENDPD, BLENDPS, DPPD, DPPS, MPSADBW, PBLENDW, ROUNDPD, ROUNDPS, ROUNDSD, ROUNDSS</source>
          <target state="translated">Para las instrucciones:CMPPD,CMPSS,CMPSD,CMPPS,PSHUFD,PSHUFHW,PSHUFLW,BLENDPD,BLENDPS,DPPD,DPPS,MPSADBW,PBLENDW,ROUNDPD,ROUNDPS,ROUNDSD,ROUNDSS</target>
        </trans-unit>
        <trans-unit id="c9f96708c73215da1e5407fa5ce762f21c941725" translate="yes" xml:space="preserve">
          <source>For integral operands of the &lt;code&gt;/&lt;/code&gt; and &lt;code&gt;%&lt;/code&gt; operators, the quotient rounds towards zero and the remainder has the same sign as the dividend.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2912089b8e4b5f7fb17c30aa7f29625c50f1f39a" translate="yes" xml:space="preserve">
          <source>For integral operands of the &lt;code&gt;/&lt;/code&gt; and &lt;code&gt;%&lt;/code&gt; operators, the quotient rounds towards zero and the remainder has the same sign as the dividend. If the divisor is zero, an Exception is thrown.</source>
          <target state="translated">Para operandos integrales de los operadores &lt;code&gt;/&lt;/code&gt; y &lt;code&gt;%&lt;/code&gt; , el cociente se redondea hacia cero y el resto tiene el mismo signo que el dividendo. Si el divisor es cero, se lanza una excepci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="00fe6a3ea358be700add2733e7f987f7657eccea" translate="yes" xml:space="preserve">
          <source>For integral operands, the &lt;code&gt;*&lt;/code&gt;, &lt;code&gt;/&lt;/code&gt;, and &lt;code&gt;%&lt;/code&gt; correspond to multiply, divide, and modulus operations. For multiply, overflows are ignored and simply chopped to fit into the integral type.</source>
          <target state="translated">Para operandos integrales, &lt;code&gt;*&lt;/code&gt; , &lt;code&gt;/&lt;/code&gt; y &lt;code&gt;%&lt;/code&gt; corresponden a operaciones de multiplicaci&amp;oacute;n, divisi&amp;oacute;n y m&amp;oacute;dulo. Para multiplicar, los desbordamientos se ignoran y simplemente se cortan para encajar en el tipo integral.</target>
        </trans-unit>
        <trans-unit id="f8089e9fce56a8de104b1a2fd89f78f4e3794e38" translate="yes" xml:space="preserve">
          <source>For large file support, there is also a LARGE version of the key which takes an off_t type, allowing platforms with larger off_t sizes to handle larger files. See below for INFILESIZE_LARGE.</source>
          <target state="translated">Para el soporte de archivos grandes,también hay una versión GRANDE de la clave que toma un tipo off_t,permitiendo a las plataformas con tamaños off_t más grandes manejar archivos más grandes.Ver abajo para INFILESIZE_LARGE.</target>
        </trans-unit>
        <trans-unit id="4573bc72a0b35e6968fbc43281884135acda5317" translate="yes" xml:space="preserve">
          <source>For many processes, a grapheme cluster behaves as if it was a single character with the same properties as its grapheme base. Effectively, nonspacing marks apply</source>
          <target state="translated">En muchos procesos,un racimo de grafemas se comporta como si fuera un único personaje con las mismas propiedades que su base de grafemas.Efectivamente,las marcas sin espaciar se aplican</target>
        </trans-unit>
        <trans-unit id="d9d2c4569580379d483d010c37b2df4e739e00dd" translate="yes" xml:space="preserve">
          <source>For methods, it would be the class object or struct value the method is called on. For nested functions it would be the enclosing function's stack frame.</source>
          <target state="translated">En el caso de los métodos,sería la clase objeto o valor de estructura a la que se recurre.Para las funciones anidadas sería el marco de la pila de la función adjunta.</target>
        </trans-unit>
        <trans-unit id="c658e43c1de6b0fdb8fb67e28199ecda730200d8" translate="yes" xml:space="preserve">
          <source>For more control than the high level functions provide, use the low level API:</source>
          <target state="translated">Para un mayor control que el que proporcionan las funciones de alto nivel,utilice el API de bajo nivel:</target>
        </trans-unit>
        <trans-unit id="62fcc5c0c32d14129884b840a9ef5db5f9b4d71a" translate="yes" xml:space="preserve">
          <source>For more info about callbacks read the &lt;a href=&quot;function#closures&quot;&gt;closures&lt;/a&gt; section.</source>
          <target state="translated">Para obtener m&amp;aacute;s informaci&amp;oacute;n sobre devoluciones de llamada, lea la secci&amp;oacute;n de &lt;a href=&quot;function#closures&quot;&gt;cierres&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="71b3018631aa22db33f776c9f67587180199aba3" translate="yes" xml:space="preserve">
          <source>For more information and a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e48b9f8da2dcff74dfa76b614f30e09e82d9357" translate="yes" xml:space="preserve">
          <source>For more information on normalization forms see the &lt;a href=&quot;#Normalization&quot;&gt;normalization section&lt;/a&gt;.</source>
          <target state="translated">Para obtener m&amp;aacute;s informaci&amp;oacute;n sobre los formularios de normalizaci&amp;oacute;n, consulte la &lt;a href=&quot;#Normalization&quot;&gt;secci&amp;oacute;n de normalizaci&amp;oacute;n&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c70774a3bc49910eb2a297e31d36c248a26d7f7c" translate="yes" xml:space="preserve">
          <source>For more information please see the full section on &lt;a href=&quot;unittest#documented-unittests&quot;&gt;documented unit tests&lt;/a&gt;.</source>
          <target state="translated">Para obtener m&amp;aacute;s informaci&amp;oacute;n, consulte la secci&amp;oacute;n completa sobre &lt;a href=&quot;unittest#documented-unittests&quot;&gt;pruebas unitarias documentadas&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f4836c4e8b6fd2beb1b18962cae04c16a239752f" translate="yes" xml:space="preserve">
          <source>For more information see the &lt;a href=&quot;https://developer.apple.com/library/mac/documentation/MacOSX/Conceptual/BPFrameworks/Tasks/IncludingFrameworks.html&quot;&gt;reference documentation&lt;/a&gt; and the &lt;code&gt;ld&lt;/code&gt; man page.</source>
          <target state="translated">Para obtener m&amp;aacute;s informaci&amp;oacute;n, consulte la &lt;a href=&quot;https://developer.apple.com/library/mac/documentation/MacOSX/Conceptual/BPFrameworks/Tasks/IncludingFrameworks.html&quot;&gt;documentaci&amp;oacute;n de referencia&lt;/a&gt; y la p&amp;aacute;gina de manual de &lt;code&gt;ld&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d343011cf3b0f9c5af4eccef2d47be216bb18517" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;http://lunesu.com/uploads/ModernCOMProgramminginD.pdf&quot;&gt;Modern COM Programming in D&lt;/a&gt;</source>
          <target state="translated">Para obtener m&amp;aacute;s informaci&amp;oacute;n, vea &lt;a href=&quot;http://lunesu.com/uploads/ModernCOMProgramminginD.pdf&quot;&gt;Programaci&amp;oacute;n COM moderna en D&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3833d3948eb765db1f448508cd33cee5954a145d" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;http://www.lunesu.com/uploads/ModernCOMProgramminginD.pdf&quot;&gt;Modern COM Programming in D&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c75305c01a420c526f9930f5f2afef16712fe3db" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;https://dlang.org/ctarguments.html&quot;&gt;Compile-time Sequences&lt;/a&gt;.</source>
          <target state="translated">Para obtener m&amp;aacute;s informaci&amp;oacute;n, consulte &lt;a href=&quot;https://dlang.org/ctarguments.html&quot;&gt;Secuencias en tiempo de compilaci&amp;oacute;n&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="232f8923a5b9a1c36aaeed4b764cc4a027de9c86" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;template#function-templates&quot;&gt;function templates&lt;/a&gt;.</source>
          <target state="translated">Para obtener m&amp;aacute;s informaci&amp;oacute;n, consulte &lt;a href=&quot;template#function-templates&quot;&gt;plantillas de funciones&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="14fe53fd058540daece4c12310ac08fab7493096" translate="yes" xml:space="preserve">
          <source>For more information, see: &lt;a href=&quot;attribute#uda&quot;&gt;User-Defined Attributes&lt;/a&gt;</source>
          <target state="translated">Para obtener m&amp;aacute;s informaci&amp;oacute;n, consulte: &lt;a href=&quot;attribute#uda&quot;&gt;Atributos definidos por el usuario&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4b01b147c4aa5229fbefd3dfcace458d961ffaae" translate="yes" xml:space="preserve">
          <source>For more on infering uniqueness see the &lt;b&gt;unique&lt;/b&gt; and &lt;b&gt;lent&lt;/b&gt; keywords in the &lt;a href=&quot;http://www.cs.cmu.edu/~aldrich/papers/aldrich-dissertation.pdf&quot;&gt;ArchJava&lt;/a&gt; language.  The downside of using &lt;code&gt;assumeUnique&lt;/code&gt;'s convention-based usage is that at this time there is no formal checking of the correctness of the assumption; on the upside, the idiomatic use of &lt;code&gt;assumeUnique&lt;/code&gt; is simple and rare enough to be tolerable.</source>
          <target state="translated">Para m&amp;aacute;s informaci&amp;oacute;n sobre inferir singularidad, vea las palabras clave &lt;b&gt;&amp;uacute;nicas&lt;/b&gt; y &lt;b&gt;prestadas&lt;/b&gt; en el lenguaje &lt;a href=&quot;http://www.cs.cmu.edu/~aldrich/papers/aldrich-dissertation.pdf&quot;&gt;ArchJava&lt;/a&gt; . La desventaja de usar el uso basado en convenciones de &lt;code&gt;assumeUnique&lt;/code&gt; es que en este momento no hay una verificaci&amp;oacute;n formal de la exactitud del supuesto; Por el lado positivo, el uso idiom&amp;aacute;tico de &lt;code&gt;assumeUnique&lt;/code&gt; es simple y lo suficientemente raro como para ser tolerable.</target>
        </trans-unit>
        <trans-unit id="467ee170e1f7b089ee09d2538996894e7758fd89" translate="yes" xml:space="preserve">
          <source>For more on infering uniqueness see the &lt;b&gt;unique&lt;/b&gt; and &lt;b&gt;lent&lt;/b&gt; keywords in the &lt;a href=&quot;https://www.cs.cmu.edu/~aldrich/papers/aldrich-dissertation.pdf&quot;&gt;ArchJava&lt;/a&gt; language.  The downside of using &lt;code&gt;assumeUnique&lt;/code&gt;'s convention-based usage is that at this time there is no formal checking of the correctness of the assumption; on the upside, the idiomatic use of &lt;code&gt;assumeUnique&lt;/code&gt; is simple and rare enough to be tolerable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9821fa00e5b3937536d63348fff48dbf21802af0" translate="yes" xml:space="preserve">
          <source>For most purposes, direct usage of this template is not necessary; instead, this module provides default implementations: &lt;a href=&quot;#Base64&quot;&gt;&lt;code&gt;Base64&lt;/code&gt;&lt;/a&gt;, implementing basic Base64 encoding, and &lt;a href=&quot;#Base64URL&quot;&gt;&lt;code&gt;Base64URL&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#Base64URLNoPadding&quot;&gt;&lt;code&gt;Base64URLNoPadding&lt;/code&gt;&lt;/a&gt;, that implement the Base64 variant for use in URLs and filenames, with and without padding, respectively.</source>
          <target state="translated">Para la mayor&amp;iacute;a de los prop&amp;oacute;sitos, el uso directo de esta plantilla no es necesario; en cambio, este m&amp;oacute;dulo proporciona implementaciones predeterminadas: &lt;a href=&quot;#Base64&quot;&gt; &lt;code&gt;Base64&lt;/code&gt; &lt;/a&gt; , implementando la codificaci&amp;oacute;n b&amp;aacute;sica Base64, y &lt;a href=&quot;#Base64URL&quot;&gt; &lt;code&gt;Base64URL&lt;/code&gt; &lt;/a&gt; y &lt;a href=&quot;#Base64URLNoPadding&quot;&gt; &lt;code&gt;Base64URLNoPadding&lt;/code&gt; &lt;/a&gt; , que implementan la variante Base64 para usar en URL y nombres de archivos, con y sin relleno, respectivamente.</target>
        </trans-unit>
        <trans-unit id="1227b6928512c13bafca17372e6fc839cf749e01" translate="yes" xml:space="preserve">
          <source>For negative durations, all of the split values will be negative.</source>
          <target state="translated">Para duraciones negativas,todos los valores de división serán negativos.</target>
        </trans-unit>
        <trans-unit id="45d1ac4eefadfd952fb52f8057a9eb1805d7b858" translate="yes" xml:space="preserve">
          <source>For non-struct types, &lt;code&gt;move&lt;/code&gt; just performs &lt;code&gt;target = source&lt;/code&gt;:</source>
          <target state="translated">Para los tipos sin estructura, &lt;code&gt;move&lt;/code&gt; solo realiza &lt;code&gt;target = source&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="3570c921d353ad6046f6122f9d8cb40d604f2aae" translate="yes" xml:space="preserve">
          <source>For other operand types, identity is defined as being the same as equality.</source>
          <target state="translated">Para otros tipos de operandos,la identidad se define como lo mismo que la igualdad.</target>
        </trans-unit>
        <trans-unit id="c79c85aac54555c7fe4b24d5b33131b97310e7b3" translate="yes" xml:space="preserve">
          <source>For other sized structs and static arrays, the return value is stored through a hidden pointer passed as an argument to the function.</source>
          <target state="translated">Para otras estructuras de tamaño y matrices estáticas,el valor de retorno se almacena a través de un puntero oculto que se pasa como argumento a la función.</target>
        </trans-unit>
        <trans-unit id="c922333737093f82b45fffe13ff631745c29e34e" translate="yes" xml:space="preserve">
          <source>For other types, the argument is built with itself, as in:</source>
          <target state="translated">Para otros tipos,el argumento se construye consigo mismo,como en:</target>
        </trans-unit>
        <trans-unit id="936523f8bfb5590c510abb12f08771cbe0e0675b" translate="yes" xml:space="preserve">
          <source>For our new type 'this', which is type-constructed from t, fill in the cto, ito, sto, scto, wto shortcuts.</source>
          <target state="translated">Para nuestro nuevo tipo 'esto',que está construido a partir de la t,rellena los atajos cto,ito,sto,scto,wto.</target>
        </trans-unit>
        <trans-unit id="4b41c44e66bd12d32d9b45595720696363ec412b" translate="yes" xml:space="preserve">
          <source>For popular C libraries, the first place to look for the corresponding D interface file is the &lt;a href=&quot;https://github.com/D-Programming-Deimos/&quot;&gt;Deimos Project&lt;/a&gt;. If it isn't there already, and you write one, please contribute it to the Deimos Project.</source>
          <target state="translated">Para las bibliotecas C populares, el primer lugar para buscar el archivo de interfaz D correspondiente es el &lt;a href=&quot;https://github.com/D-Programming-Deimos/&quot;&gt;Proyecto Deimos&lt;/a&gt; . Si a&amp;uacute;n no est&amp;aacute; all&amp;iacute; y usted escribe uno, por favor contribuya al Proyecto Deimos.</target>
        </trans-unit>
        <trans-unit id="dd500fbbdcecf0b15b4a7bec7168a77dbb809b02" translate="yes" xml:space="preserve">
          <source>For precise typing of that area, you can also let the compiler generate the class instance into the DATA segment for you:</source>
          <target state="translated">Para escribir con precisión esa área,también puedes dejar que el compilador genere la instancia de clase en el segmento DATA para ti:</target>
        </trans-unit>
        <trans-unit id="d95500d6486dd9976894874f4bc1686c74984f1a" translate="yes" xml:space="preserve">
          <source>For pretty-printing a type.</source>
          <target state="translated">Por imprimir un tipo bonito.</target>
        </trans-unit>
        <trans-unit id="6beaf38011ce8934c0bf0fe14801463a84176de7" translate="yes" xml:space="preserve">
          <source>For printing two types with qualification when necessary.</source>
          <target state="translated">Para imprimir dos tipos con calificación cuando sea necesario.</target>
        </trans-unit>
        <trans-unit id="b457b27aba75e0c9b673db93afc4a6454c8737c9" translate="yes" xml:space="preserve">
          <source>For ranges that do not offer random access, &lt;code&gt;SearchPolicy.linear&lt;/code&gt; is the only policy allowed (and it must be specified explicitly lest it exposes user code to unexpected inefficiencies). For random-access searches, all policies are allowed, and &lt;code&gt;SearchPolicy.binarySearch&lt;/code&gt; is the default.</source>
          <target state="translated">Para los rangos que no ofrecen acceso aleatorio, &lt;code&gt;SearchPolicy.linear&lt;/code&gt; es la &amp;uacute;nica pol&amp;iacute;tica permitida (y debe especificarse expl&amp;iacute;citamente para que no exponga el c&amp;oacute;digo de usuario a ineficiencias inesperadas). Para b&amp;uacute;squedas de acceso aleatorio, todas las pol&amp;iacute;ticas est&amp;aacute;n permitidas, y &lt;code&gt;SearchPolicy.binarySearch&lt;/code&gt; es el valor predeterminado.</target>
        </trans-unit>
        <trans-unit id="ed3956141d9c50632728180436f8b91fa73ece41" translate="yes" xml:space="preserve">
          <source>For reals, logGamma is equivalent to log(fabs(gamma(x))).</source>
          <target state="translated">En realidad,logGamma es equivalente a log(fabs(gamma(x)).</target>
        </trans-unit>
        <trans-unit id="96cc49076f4a58f629be6c15f8c505a83f5ad981" translate="yes" xml:space="preserve">
          <source>For runtime testing to see if certain vector instructions are available, see the functions in &lt;a href=&quot;https://dlang.org/phobos/core_cpuid.html&quot;&gt;core.cpuid&lt;/a&gt;.</source>
          <target state="translated">Para pruebas de tiempo de ejecuci&amp;oacute;n para ver si ciertas instrucciones vectoriales est&amp;aacute;n disponibles, vea las funciones en &lt;a href=&quot;https://dlang.org/phobos/core_cpuid.html&quot;&gt;core.cpuid&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b0f737f02cc74529ec3e1d25c3b2fb5c37d91021" translate="yes" xml:space="preserve">
          <source>For some D implementations, such as a translator from D to C, an inline assembler makes no sense, and need not be implemented. The version statement can be used to account for this:</source>
          <target state="translated">Para algunas implementaciones D,como un traductor de D a C,un ensamblador en línea no tiene sentido,y no es necesario implementarlo.La declaración de la versión puede ser usada para explicar esto:</target>
        </trans-unit>
        <trans-unit id="432250ecd3da26b3dac3ea1fed77d588163ee5c7" translate="yes" xml:space="preserve">
          <source>For stateless allocators, this does nothing.</source>
          <target state="translated">Para los asignadores apátridas,esto no hace nada.</target>
        </trans-unit>
        <trans-unit id="098a57b35500f4f0a012b83d59f1556df0c13332" translate="yes" xml:space="preserve">
          <source>For statements implement loops with initialization, test, and increment clauses.</source>
          <target state="translated">Para las declaraciones implementar lazos con cláusulas de inicialización,prueba e incremento.</target>
        </trans-unit>
        <trans-unit id="53f702e5ced5b4f4e7dbc696e5107fe16283acd0" translate="yes" xml:space="preserve">
          <source>For static and dynamic arrays, equality is defined as the lengths of the arrays matching, and all the elements are equal.</source>
          <target state="translated">Para los conjuntos estáticos y dinámicos,la igualdad se define como la coincidencia de las longitudes de los conjuntos,y todos los elementos son iguales.</target>
        </trans-unit>
        <trans-unit id="fa40b68079370408167ad68be5b40bbec28bf002" translate="yes" xml:space="preserve">
          <source>For static and dynamic arrays, identity is defined as referring to the same array elements and the same number of elements.</source>
          <target state="translated">En el caso de los conjuntos estáticos y dinámicos,la identidad se define como referida a los mismos elementos del conjunto y al mismo número de elementos.</target>
        </trans-unit>
        <trans-unit id="0ec6b65a9ed5b90b70c026136f3fd68edfea3f4e" translate="yes" xml:space="preserve">
          <source>For static and dynamic arrays, the result of the relational op is the result of the operator applied to the first non-equal element of the array. If two arrays compare equal, but are of different lengths, the shorter array compares as &quot;less&quot; than the longer array.</source>
          <target state="translated">En el caso de los conjuntos estáticos y dinámicos,el resultado de la operación relacional es el resultado del operador aplicado al primer elemento no igual del conjunto.Si dos conjuntos son iguales,pero de longitudes diferentes,el conjunto más corto se compara como &quot;menos&quot; que el conjunto más largo.</target>
        </trans-unit>
        <trans-unit id="f2b8a81160066cc4e2c9823b604d02970c2dda27" translate="yes" xml:space="preserve">
          <source>For static arrays:</source>
          <target state="translated">Para los conjuntos estáticos:</target>
        </trans-unit>
        <trans-unit id="e3e34261f3141bf464d51f74f924244b763433b8" translate="yes" xml:space="preserve">
          <source>For struct objects and floating point values, identity is defined as the bits in the operands being identical.</source>
          <target state="translated">Para los objetos estructurales y los valores de punto flotante,la identidad se define como si los bits de los operandos fueran idénticos.</target>
        </trans-unit>
        <trans-unit id="dacb4ed6715c30c5a9147d7fcd6915634bae0082" translate="yes" xml:space="preserve">
          <source>For struct objects, equality means the result of the &lt;a href=&quot;operatoroverloading#equals&quot;&gt;&lt;code&gt;opEquals()&lt;/code&gt; member function&lt;/a&gt;. If an &lt;code&gt;opEquals()&lt;/code&gt; is not provided, equality is defined as the logical product of all equality results of the corresponding object fields.</source>
          <target state="translated">Para objetos de estructura, igualdad significa el resultado de la &lt;a href=&quot;operatoroverloading#equals&quot;&gt;funci&amp;oacute;n miembro &lt;/a&gt; &lt;code&gt;opEquals()&lt;/code&gt; . Si no se proporciona un &lt;code&gt;opEquals()&lt;/code&gt; , la igualdad se define como el producto l&amp;oacute;gico de todos los resultados de igualdad de los campos de objeto correspondientes.</target>
        </trans-unit>
        <trans-unit id="77b81660c87ba600c859281896d0e680dc7a0639" translate="yes" xml:space="preserve">
          <source>For struct types, operator overloading for the identity assignment is allowed.</source>
          <target state="translated">Para los tipos de estructura,se permite la sobrecarga del operador para la asignación de la identidad.</target>
        </trans-unit>
        <trans-unit id="7d6ebd4bd1de4cb13975d6ad6d6494f493e36039" translate="yes" xml:space="preserve">
          <source>For structs that do not define &lt;code&gt;toString&lt;/code&gt;, the conversion to string produces the list of fields.</source>
          <target state="translated">Para estructuras que no definen &lt;code&gt;toString&lt;/code&gt; , la conversi&amp;oacute;n a cadena produce la lista de campos.</target>
        </trans-unit>
        <trans-unit id="24c5ae67500605fc6fe25591d513c37d81e53fba" translate="yes" xml:space="preserve">
          <source>For the &quot;this&quot; parameter to member functions</source>
          <target state="translated">Para el parámetro &quot;este&quot; a las funciones de los miembros</target>
        </trans-unit>
        <trans-unit id="1c01d80e91a2499949025f2280ab6ed6d2555900" translate="yes" xml:space="preserve">
          <source>For the &lt;code&gt;struct&lt;/code&gt; and &lt;code&gt;union&lt;/code&gt; objects which does not have &lt;code&gt;toString&lt;/code&gt;,</source>
          <target state="translated">Para los objetos &lt;code&gt;struct&lt;/code&gt; y &lt;code&gt;union&lt;/code&gt; que no tienen &lt;code&gt;toString&lt;/code&gt; ,</target>
        </trans-unit>
        <trans-unit id="4f49cbadbf80fd5534728dbb0a52da7243f0e4cf" translate="yes" xml:space="preserve">
          <source>For the class objects which have input range interface,</source>
          <target state="translated">Para los objetos de clase que tienen interfaz de rango de entrada,</target>
        </trans-unit>
        <trans-unit id="3fe70e23dba2fe2f6a6436972a79f198b1023846" translate="yes" xml:space="preserve">
          <source>For the default implementation, &lt;code&gt;notifyAll&lt;/code&gt;will behave like &lt;code&gt;notify&lt;/code&gt;.</source>
          <target state="translated">Para la implementaci&amp;oacute;n predeterminada, &lt;code&gt;notifyAll&lt;/code&gt; se comportar&amp;aacute; como &lt;code&gt;notify&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7a32f3e2bbec4c5b80346149779ed01edefc9b85" translate="yes" xml:space="preserve">
          <source>For the expression &lt;code&gt;__traits(compiles, exp)&lt;/code&gt; where &lt;code&gt;exp&lt;/code&gt; is an &lt;code&gt;@property&lt;/code&gt; function, a further check is made to see if the function can be called.</source>
          <target state="translated">Para la expresi&amp;oacute;n &lt;code&gt;__traits(compiles, exp)&lt;/code&gt; donde &lt;code&gt;exp&lt;/code&gt; es una funci&amp;oacute;n &lt;code&gt;@property&lt;/code&gt; , se realiza una comprobaci&amp;oacute;n adicional para ver si se puede llamar a la funci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="b458b5efdd66ae7f2f84dbe61163a34a752450a1" translate="yes" xml:space="preserve">
          <source>For the expression &lt;code&gt;typeof(exp)&lt;/code&gt; where &lt;code&gt;exp&lt;/code&gt; is an &lt;code&gt;@property&lt;/code&gt; function, the type is the return type of the function, rather than the type of the function.</source>
          <target state="translated">Para la expresi&amp;oacute;n &lt;code&gt;typeof(exp)&lt;/code&gt; donde &lt;code&gt;exp&lt;/code&gt; es una funci&amp;oacute;n &lt;code&gt;@property&lt;/code&gt; , el tipo es el tipo de retorno de la funci&amp;oacute;n, en lugar del tipo de la funci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="4da3489e77815a3f59254a16848fd39b736c2ccf" translate="yes" xml:space="preserve">
          <source>For the given module, perform any post parsing analysis. Certain compiler backends (ie: GDC) have special placeholder modules whose source are empty, but code gets injected immediately after loading.</source>
          <target state="translated">Para el módulo dado,realice cualquier análisis posterior.Ciertos backends del compilador (por ejemplo:GDC)tienen módulos especiales de marcadores de posición cuyo código fuente está vacío,pero el código se inyecta inmediatamente después de la carga.</target>
        </trans-unit>
        <trans-unit id="eee09d9bd02ca0e040c01e0c78e4b5fbf6e37934" translate="yes" xml:space="preserve">
          <source>For this CRC32 Digest implementation calling start after default construction is not necessary. Calling start is only necessary to reset the Digest.</source>
          <target state="translated">Para esta implementación de CRC32 Digest no es necesario iniciar la llamada después de la construcción por defecto.El inicio de la llamada sólo es necesario para reiniciar el Digest.</target>
        </trans-unit>
        <trans-unit id="cffc81d750572e8587c7a4c64f2343abc051fae9" translate="yes" xml:space="preserve">
          <source>For this MD5 Digest implementation calling start after default construction is not necessary. Calling start is only necessary to reset the Digest.</source>
          <target state="translated">Para esta implementación de MD5 Digest no es necesario iniciar la llamada después de la construcción por defecto.El inicio de la llamada sólo es necesario para reiniciar el Digest.</target>
        </trans-unit>
        <trans-unit id="ed2c37418037d9b0c7a9812c6d18534a64e6ecf7" translate="yes" xml:space="preserve">
          <source>For this RIPEMD160 Digest implementation calling start after default construction is not necessary. Calling start is only necessary to reset the Digest.</source>
          <target state="translated">Para esta implementación de RIPEMD160 Digest no es necesario iniciar la llamada después de la construcción por defecto.El inicio de la llamada sólo es necesario para reiniciar el Digest.</target>
        </trans-unit>
        <trans-unit id="249161f18b734896a386ad2283f2254a90cd8dc8" translate="yes" xml:space="preserve">
          <source>For this SHA Digest implementation calling start after default construction is not necessary. Calling start is only necessary to reset the Digest.</source>
          <target state="translated">Para esta implementación de SHA Digest no es necesario iniciar la llamada después de la construcción por defecto.El inicio de la llamada sólo es necesario para reiniciar el Digest.</target>
        </trans-unit>
        <trans-unit id="29b834a88118650bc23043a0e1a119bc9548636a" translate="yes" xml:space="preserve">
          <source>For unary &lt;code&gt;-&lt;/code&gt;, &lt;code&gt;onOverflow&lt;/code&gt; is called if &lt;code&gt;lhs == Lhs.min&lt;/code&gt; and &lt;code&gt;Lhs&lt;/code&gt; is a signed type. The function returns &lt;code&gt;Lhs.max&lt;/code&gt;.</source>
          <target state="translated">Para unary &lt;code&gt;-&lt;/code&gt; , &lt;code&gt;onOverflow&lt;/code&gt; se llama si &lt;code&gt;lhs == Lhs.min&lt;/code&gt; y &lt;code&gt;Lhs&lt;/code&gt; es un tipo con signo. La funci&amp;oacute;n devuelve &lt;code&gt;Lhs.max&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3735f46e74c34d876c612b5f0d45ae5d470195b4" translate="yes" xml:space="preserve">
          <source>For unsatisfied conditions, the conditionally compiled code need only be syntactically correct. It does not have to be semantically correct.</source>
          <target state="translated">Para condiciones insatisfechas,el código compilado condicionalmente sólo tiene que ser sintácticamente correcto.No tiene que ser semánticamente correcto.</target>
        </trans-unit>
        <trans-unit id="cbc5de8d1ef5491a35e3c236ec7889a9c2c4a94d" translate="yes" xml:space="preserve">
          <source>For use by application</source>
          <target state="translated">Para uso por aplicación</target>
        </trans-unit>
        <trans-unit id="e74c782f1ffbeab9de3e921ce4304765a91d12e2" translate="yes" xml:space="preserve">
          <source>For use by application VFS</source>
          <target state="translated">Para uso de la aplicación VFS</target>
        </trans-unit>
        <trans-unit id="3505b0edb5eee92682026f8144fd82b24c70a4f7" translate="yes" xml:space="preserve">
          <source>For use by built-in VFS</source>
          <target state="translated">Para el uso de VFS incorporado</target>
        </trans-unit>
        <trans-unit id="88dbc145581c8c0573b319436a71bb181cd0808c" translate="yes" xml:space="preserve">
          <source>For use by extension VFS</source>
          <target state="translated">Para su uso por extensión VFS</target>
        </trans-unit>
        <trans-unit id="230bac78e67f31568eb4729e25ce498036be0132" translate="yes" xml:space="preserve">
          <source>For user defined types. Should be equivalent to &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">Para tipos definidos por el usuario. Debe ser equivalente a &lt;code&gt;0&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b5f2524697bf575ce5005555e479cdd81f208227" translate="yes" xml:space="preserve">
          <source>For user-defined types, assignment operator expressions are overloaded separately from the binary operator. Still the left operand must be an lvalue.</source>
          <target state="translated">Para los tipos definidos por el usuario,las expresiones del operador de asignación se sobrecargan por separado del operador binario.Aún así,el operando izquierdo debe ser un valor l.</target>
        </trans-unit>
        <trans-unit id="0fb758f20654c3c8f3d278d2ed2c4c22389d5933" translate="yes" xml:space="preserve">
          <source>For using time zones other than local time or UTC, use &lt;a href=&quot;std_datetime_timezone#PosixTimeZone&quot;&gt;&lt;code&gt;std.datetime.timezone.PosixTimeZone&lt;/code&gt;&lt;/a&gt; on Posix systems (or on Windows, if providing the TZ Database files), and use &lt;a href=&quot;std_datetime_timezone#WindowsTimeZone&quot;&gt;&lt;code&gt;std.datetime.timezone.WindowsTimeZone&lt;/code&gt;&lt;/a&gt; on Windows systems. The time in &lt;code&gt;SysTime&lt;/code&gt; is kept internally in hnsecs from midnight, January 1st, 1 A.D. UTC. Conversion error cannot happen when changing the time zone of a &lt;code&gt;SysTime&lt;/code&gt;. &lt;a href=&quot;std_datetime_timezone#LocalTime&quot;&gt;&lt;code&gt;std.datetime.timezone.LocalTime&lt;/code&gt;&lt;/a&gt; is the &lt;a href=&quot;std_datetime_timezone#TimeZone&quot;&gt;&lt;code&gt;std.datetime.timezone.TimeZone&lt;/code&gt;&lt;/a&gt; class which represents the local time, and &lt;code&gt;UTC&lt;/code&gt; is the &lt;a href=&quot;std_datetime_timezone#TimeZone&quot;&gt;&lt;code&gt;std.datetime.timezone.TimeZone&lt;/code&gt;&lt;/a&gt; class which represents UTC. &lt;code&gt;SysTime&lt;/code&gt; uses &lt;a href=&quot;std_datetime_timezone#LocalTime&quot;&gt;&lt;code&gt;std.datetime.timezone.LocalTime&lt;/code&gt;&lt;/a&gt; if no &lt;a href=&quot;std_datetime_timezone#TimeZone&quot;&gt;&lt;code&gt;std.datetime.timezone.TimeZone&lt;/code&gt;&lt;/a&gt; is provided. For more details on time zones, see the documentation for &lt;a href=&quot;std_datetime_timezone#TimeZone&quot;&gt;&lt;code&gt;std.datetime.timezone.TimeZone&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;std_datetime_timezone#PosixTimeZone&quot;&gt;&lt;code&gt;std.datetime.timezone.PosixTimeZone&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;std_datetime_timezone#WindowsTimeZone&quot;&gt;&lt;code&gt;std.datetime.timezone.WindowsTimeZone&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Para usar zonas horarias distintas de la hora local o UTC, use &lt;a href=&quot;std_datetime_timezone#PosixTimeZone&quot;&gt; &lt;code&gt;std.datetime.timezone.PosixTimeZone&lt;/code&gt; &lt;/a&gt; en los sistemas Posix (o en Windows, si proporciona los archivos de la base de datos TZ), y use &lt;a href=&quot;std_datetime_timezone#WindowsTimeZone&quot;&gt; &lt;code&gt;std.datetime.timezone.WindowsTimeZone&lt;/code&gt; &lt;/a&gt; en los sistemas Windows. La hora en &lt;code&gt;SysTime&lt;/code&gt; se mantiene internamente en hnsecs desde la medianoche, 1 de enero, 1 AD UTC. El error de conversi&amp;oacute;n no puede ocurrir al cambiar la zona horaria de un &lt;code&gt;SysTime&lt;/code&gt; . &lt;a href=&quot;std_datetime_timezone#LocalTime&quot;&gt; &lt;code&gt;std.datetime.timezone.LocalTime&lt;/code&gt; &lt;/a&gt; es la clase &lt;a href=&quot;std_datetime_timezone#TimeZone&quot;&gt; &lt;code&gt;std.datetime.timezone.TimeZone&lt;/code&gt; &lt;/a&gt; que representa la hora local, y &lt;code&gt;UTC&lt;/code&gt; es la clase &lt;a href=&quot;std_datetime_timezone#TimeZone&quot;&gt; &lt;code&gt;std.datetime.timezone.TimeZone&lt;/code&gt; &lt;/a&gt; que representa UTC. &lt;code&gt;SysTime&lt;/code&gt; utiliza&lt;a href=&quot;std_datetime_timezone#LocalTime&quot;&gt; &lt;code&gt;std.datetime.timezone.LocalTime&lt;/code&gt; &lt;/a&gt; si nose proporciona&lt;a href=&quot;std_datetime_timezone#TimeZone&quot;&gt; &lt;code&gt;std.datetime.timezone.TimeZone&lt;/code&gt; &lt;/a&gt; . Para obtener m&amp;aacute;s detalles sobre las zonas horarias, consulte la documentaci&amp;oacute;n de&lt;a href=&quot;std_datetime_timezone#TimeZone&quot;&gt; &lt;code&gt;std.datetime.timezone.TimeZone&lt;/code&gt; &lt;/a&gt; ,&lt;a href=&quot;std_datetime_timezone#PosixTimeZone&quot;&gt; &lt;code&gt;std.datetime.timezone.PosixTimeZone&lt;/code&gt; &lt;/a&gt; y&lt;a href=&quot;std_datetime_timezone#WindowsTimeZone&quot;&gt; &lt;code&gt;std.datetime.timezone.WindowsTimeZone&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ab8570d227afb15f540b536d5d1262c12c2ed538" translate="yes" xml:space="preserve">
          <source>For very large numbers, consider using the &lt;a href=&quot;http://gmplib.org&quot;&gt;GMP library&lt;/a&gt; instead.</source>
          <target state="translated">Para n&amp;uacute;meros muy grandes, considere usar la &lt;a href=&quot;http://gmplib.org&quot;&gt;biblioteca GMP en su&lt;/a&gt; lugar.</target>
        </trans-unit>
        <trans-unit id="e95ca0b1ba53ec60e9f02c5651b3f5d4954e798d" translate="yes" xml:space="preserve">
          <source>For very large numbers, consider using the &lt;a href=&quot;https://gmplib.org&quot;&gt;GMP library&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb0aaa1972b9827ddaeaa8c903dd012d64dc52a6" translate="yes" xml:space="preserve">
          <source>For very small x, expm1(x) is more accurate than exp(x)-1.</source>
          <target state="translated">Para una x muy pequeña,la expm1(x)es más precisa que la exp(x)-1.</target>
        </trans-unit>
        <trans-unit id="f6a75d7a9f98a84894db843b9fa129f7e85e4ad5" translate="yes" xml:space="preserve">
          <source>For very small x, log1p(x) will be more accurate than log(1 + x).</source>
          <target state="translated">Para una x muy pequeña,log1p(x)será más preciso que log(1+x).</target>
        </trans-unit>
        <trans-unit id="d5e2ba36b5f0fe67d03dfd60aced704179f8dc15" translate="yes" xml:space="preserve">
          <source>For virtual tables.</source>
          <target state="translated">Para las mesas virtuales.</target>
        </trans-unit>
        <trans-unit id="9b2f5f01d7f036017bc44e0f5e7dd87067f218dd" translate="yes" xml:space="preserve">
          <source>For when the array has a non-zero initializer.</source>
          <target state="translated">Para cuando la matriz tiene un inicializador distinto de cero.</target>
        </trans-unit>
        <trans-unit id="62235af30d4d3e83911b7f668444bdadcbf6e31f" translate="yes" xml:space="preserve">
          <source>For which &lt;code&gt;TargetOS&lt;/code&gt; the flags are applicable</source>
          <target state="translated">Para qu&amp;eacute; &lt;code&gt;TargetOS&lt;/code&gt; son aplicables las banderas</target>
        </trans-unit>
        <trans-unit id="0512a8baa5c7d81d4b0fde3207bf25c16a72e5f5" translate="yes" xml:space="preserve">
          <source>ForStatement</source>
          <target state="translated">ForStatement</target>
        </trans-unit>
        <trans-unit id="2d317e6f14c862c7eb4252c51b1bf37d642b8a8c" translate="yes" xml:space="preserve">
          <source>ForStatements</source>
          <target state="translated">ForStatements</target>
        </trans-unit>
        <trans-unit id="809149a8ad9a0028e99b6a9d68c6c4147cc5a5e7" translate="yes" xml:space="preserve">
          <source>Force all integral errors to fail by printing an error message to &lt;code&gt;stderr&lt;/code&gt; and then abort the program. &lt;code&gt;Abort&lt;/code&gt; is the default second argument for &lt;code&gt;Checked&lt;/code&gt;.</source>
          <target state="translated">Obliga a todos los errores integrales a fallar imprimiendo un mensaje de error en &lt;code&gt;stderr&lt;/code&gt; y luego aborta el programa. &lt;code&gt;Abort&lt;/code&gt; ar es el segundo argumento predeterminado para &lt;code&gt;Checked&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cb769685cb2418f96e7eb5cd6f3bc4bc9cdba76c" translate="yes" xml:space="preserve">
          <source>Force all integral errors to fail by throwing an exception of type &lt;code&gt;Throw.CheckFailure&lt;/code&gt;. The message coming with the error is similar to the one printed by &lt;code&gt;Warn&lt;/code&gt;.</source>
          <target state="translated">Fuerce todos los errores integrales a fallar lanzando una excepci&amp;oacute;n de tipo &lt;code&gt;Throw.CheckFailure&lt;/code&gt; . El mensaje que viene con el error es similar al impreso por &lt;code&gt;Warn&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="568ec7a75ae095d53209f55c9ce73fe37d60ef50" translate="yes" xml:space="preserve">
          <source>Forces &lt;code&gt;capacity&lt;/code&gt; to at least &lt;code&gt;x&lt;/code&gt; without reducing it.</source>
          <target state="translated">Fuerza la &lt;code&gt;capacity&lt;/code&gt; de al menos &lt;code&gt;x&lt;/code&gt; sin reducirla.</target>
        </trans-unit>
        <trans-unit id="19149ba839181262b9bdb188174930e36e6f0df9" translate="yes" xml:space="preserve">
          <source>Forces &lt;code&gt;this&lt;/code&gt; to the null state.</source>
          <target state="translated">Fuerza &lt;code&gt;this&lt;/code&gt; al estado nulo.</target>
        </trans-unit>
        <trans-unit id="a8db5e83b8a35fac9d3b32ebcc923950ddcc52de" translate="yes" xml:space="preserve">
          <source>Forces a context switch to occur away from the calling fiber and then throws obj in the calling fiber.</source>
          <target state="translated">Obliga a que un cambio de contexto ocurra lejos de la fibra de llamada y luego lanza un objeto en la fibra de llamada.</target>
        </trans-unit>
        <trans-unit id="2f48cbfa34abf44639ec829c0d55463cc9494c97" translate="yes" xml:space="preserve">
          <source>Forces a context switch to occur away from the calling fiber.</source>
          <target state="translated">Obliga a que un cambio de contexto ocurra lejos de la fibra de llamada.</target>
        </trans-unit>
        <trans-unit id="80579a9d1e587d7b0ea440174e72821dab14c81a" translate="yes" xml:space="preserve">
          <source>Forces a context switch to occur away from the calling thread.</source>
          <target state="translated">Obliga a que un cambio de contexto ocurra lejos del hilo de llamada.</target>
        </trans-unit>
        <trans-unit id="13258c0abcfb4cca178a3b35d4e0664b60f42a89" translate="yes" xml:space="preserve">
          <source>Forces any data buffered by the OS to be written to disk. Call &lt;a href=&quot;#flush&quot;&gt;&lt;code&gt;flush&lt;/code&gt;&lt;/a&gt; before calling this function to flush the C &lt;code&gt;FILE&lt;/code&gt; buffers first.</source>
          <target state="translated">Obliga a que los datos almacenados en el b&amp;uacute;fer se escriban en el disco. Llame al &lt;a href=&quot;#flush&quot;&gt; &lt;code&gt;flush&lt;/code&gt; &lt;/a&gt; antes de llamar a esta funci&amp;oacute;n para vaciar primero los b&amp;uacute;feres C &lt;code&gt;FILE&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="23e389c62cad5bc7af8046c1d45faa80b7add735" translate="yes" xml:space="preserve">
          <source>Forces free list mode. If already in free list mode, does nothing. Otherwise, sorts the free list accumulated so far and switches strategy for future allocations to KR style.</source>
          <target state="translated">Fuerza el modo de lista libre.Si ya está en modo de lista libre,no hace nada.De lo contrario,ordena la lista libre acumulada hasta ahora y cambia la estrategia para futuras asignaciones al estilo KR.</target>
        </trans-unit>
        <trans-unit id="7438f3f3f123487789d348d295cbd3a74e9f3636" translate="yes" xml:space="preserve">
          <source>Forces the number of elements in the container to &lt;code&gt;n&lt;/code&gt;. If the container ends up growing, the added elements are initialized in a container-dependent manner (usually with &lt;code&gt;T.init&lt;/code&gt;).</source>
          <target state="translated">Fuerza el n&amp;uacute;mero de elementos en el contenedor a &lt;code&gt;n&lt;/code&gt; . Si el contenedor termina creciendo, los elementos agregados se inicializan de manera dependiente del contenedor (generalmente con &lt;code&gt;T.init&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="41991c2a7e01e941592d10ca1b4c7b6d194af71f" translate="yes" xml:space="preserve">
          <source>Forcibly deallocates all memory allocated by this allocator, making it available for further allocations. Does not return memory to &lt;code&gt;ParentAllocator&lt;/code&gt;.</source>
          <target state="translated">Desasigna a la fuerza toda la memoria asignada por este asignador, haci&amp;eacute;ndola disponible para futuras asignaciones. No devuelve memoria a &lt;code&gt;ParentAllocator&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e05b71be24859a77e2790b0d8e71bc9f4dd8c1f8" translate="yes" xml:space="preserve">
          <source>Foreach</source>
          <target state="translated">Foreach</target>
        </trans-unit>
        <trans-unit id="24a9bd4ac18d7ddab41be52adbe896067b46f066" translate="yes" xml:space="preserve">
          <source>Foreach Range Methods</source>
          <target state="translated">Métodos de rango de la frente</target>
        </trans-unit>
        <trans-unit id="2c53155a2e00768b8f625193cebda30089ce0843" translate="yes" xml:space="preserve">
          <source>Foreach Range Properties</source>
          <target state="translated">Propiedades del rango de la frente</target>
        </trans-unit>
        <trans-unit id="45b6dd48295de07cd5e6e8af0d02a0aba0d48189" translate="yes" xml:space="preserve">
          <source>Foreach Range Statement</source>
          <target state="translated">Declaración del rango de la frente</target>
        </trans-unit>
        <trans-unit id="3e61286776c3201ae4e25284f6e9997d2d997281" translate="yes" xml:space="preserve">
          <source>Foreach Ref Parameters</source>
          <target state="translated">Parámetros de referencia de la frente</target>
        </trans-unit>
        <trans-unit id="a6c2c1398fe7e48f653dc8f0a8caddaee072679f" translate="yes" xml:space="preserve">
          <source>Foreach Restrictions</source>
          <target state="translated">Restricciones de los anteojos</target>
        </trans-unit>
        <trans-unit id="0553132dc6cdd5f87cabaeda4197e661d068c9f8" translate="yes" xml:space="preserve">
          <source>Foreach Statement</source>
          <target state="translated">Declaración de anteproyecto</target>
        </trans-unit>
        <trans-unit id="da94ac95aa14d4788d7fd4a24d8272c7d97d35a8" translate="yes" xml:space="preserve">
          <source>Foreach over Arrays</source>
          <target state="translated">La frente sobre los arreglos</target>
        </trans-unit>
        <trans-unit id="b1b911444dc098ad04d8c1492527b6551f0916f7" translate="yes" xml:space="preserve">
          <source>Foreach over Arrays of Characters</source>
          <target state="translated">Preámbulo sobre la disposición de los personajes</target>
        </trans-unit>
        <trans-unit id="2a77599ec0f128dc2ac0586f465739ede0b37cd8" translate="yes" xml:space="preserve">
          <source>Foreach over Associative Arrays</source>
          <target state="translated">Preámbulo sobre los arreglos asociativos</target>
        </trans-unit>
        <trans-unit id="140fe06b456ed9f1ae3d0c4efbee66b6a7732580" translate="yes" xml:space="preserve">
          <source>Foreach over Delegates</source>
          <target state="translated">El frente de los delegados...</target>
        </trans-unit>
        <trans-unit id="2118d2308b39d4304cee2cfe11851139c70627b5" translate="yes" xml:space="preserve">
          <source>Foreach over Sequences</source>
          <target state="translated">Foreach sobre las secuencias</target>
        </trans-unit>
        <trans-unit id="2f65a25f9fa525fd78d322a8ac805a6f39540fba" translate="yes" xml:space="preserve">
          <source>Foreach over Structs and Classes with Ranges</source>
          <target state="translated">La frente sobre las estructuras y las clases con rangos</target>
        </trans-unit>
        <trans-unit id="3d5dd8a83fe426ccb28e159ceb15528fef952829" translate="yes" xml:space="preserve">
          <source>Foreach over Structs and Classes with opApply</source>
          <target state="translated">Preámbulo sobre Estructuras y Clases con opApply</target>
        </trans-unit>
        <trans-unit id="f667fe9347feaa7cb4e621c258d2edcbe22519e9" translate="yes" xml:space="preserve">
          <source>ForeachAggregate</source>
          <target state="translated">ForeachAggregate</target>
        </trans-unit>
        <trans-unit id="df2d328871cd71e3623bbdef344f4992bcecf2e1" translate="yes" xml:space="preserve">
          <source>ForeachRangeStatement &lt;strong id=&quot;rangefe&quot;&gt;rangefe&lt;/strong&gt;;</source>
          <target state="translated">ForeachRangeStatement &lt;strong id=&quot;rangefe&quot;&gt;rangefe&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="9e19df85959b2b1a13377a372c2de5cdf84d1b37" translate="yes" xml:space="preserve">
          <source>ForeachStatement</source>
          <target state="translated">ForeachStatement</target>
        </trans-unit>
        <trans-unit id="9e64b4731b7dbeb3175b639030eb1b4587e3cf60" translate="yes" xml:space="preserve">
          <source>ForeachStatement &lt;code&gt;fes&lt;/code&gt;</source>
          <target state="translated">ForeachStatement &lt;code&gt;fes&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3a17c7a682fe18e111c85eb3ffb6f2a4cbaae0f4" translate="yes" xml:space="preserve">
          <source>ForeachStatement &lt;strong id=&quot;aggrfe&quot;&gt;aggrfe&lt;/strong&gt;;</source>
          <target state="translated">ForeachStatement &lt;strong id=&quot;aggrfe&quot;&gt;aggrfe&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="1330e14342be598ec267758faf0b9d03bb95ce41" translate="yes" xml:space="preserve">
          <source>ForeachStatement &lt;strong id=&quot;fes&quot;&gt;fes&lt;/strong&gt;;</source>
          <target state="translated">ForeachStatement &lt;strong id=&quot;fes&quot;&gt;fes&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="856f0cb9ba209b9b76b5f3f3110e190ba107f316" translate="yes" xml:space="preserve">
          <source>ForeachType</source>
          <target state="translated">ForeachType</target>
        </trans-unit>
        <trans-unit id="9c4e220b832fdde833e953123e22e947e7b36940" translate="yes" xml:space="preserve">
          <source>ForeachType!(PointerTarget!Range)[] &lt;strong id=&quot;array&quot;&gt;array&lt;/strong&gt;(Range)(Range r)</source>
          <target state="translated">ForeachType! (PointerTarget! Range) [] &lt;strong id=&quot;array&quot;&gt;array&lt;/strong&gt; (Rango) (Rango r)</target>
        </trans-unit>
        <trans-unit id="b97cbae09882028f8cf2caca90479d52c2db87df" translate="yes" xml:space="preserve">
          <source>ForeachType!Range[] &lt;strong id=&quot;array&quot;&gt;array&lt;/strong&gt;(Range)(Range r)</source>
          <target state="translated">ForeachType! Range [] &lt;strong id=&quot;array&quot;&gt;array&lt;/strong&gt; (Rango) (Rango r)</target>
        </trans-unit>
        <trans-unit id="6c99353d4eb960ce958a85dea4dafad1de143866" translate="yes" xml:space="preserve">
          <source>ForeachTypeAttribute</source>
          <target state="translated">ForeachTypeAttribute</target>
        </trans-unit>
        <trans-unit id="7ce9ed7c2184e929a253429a20b37b4560fb165d" translate="yes" xml:space="preserve">
          <source>ForeachTypeList</source>
          <target state="translated">ForeachTypeList</target>
        </trans-unit>
        <trans-unit id="3432f720952ad1ef45f41182f803dfead87c5b2b" translate="yes" xml:space="preserve">
          <source>Foreach_reverse Range Methods</source>
          <target state="translated">Métodos de rango de Foreach_reverse</target>
        </trans-unit>
        <trans-unit id="b050df33fa944ca9312b95dbcf3146816b9fa5f7" translate="yes" xml:space="preserve">
          <source>Foreach_reverse Range Properties</source>
          <target state="translated">Propiedades de la gama Foreach_reverse</target>
        </trans-unit>
        <trans-unit id="4f7e5954df7c830e01a29a86da382389a582afe9" translate="yes" xml:space="preserve">
          <source>Form TypeTuple from the types of the expressions. Assume exps[] is already tuple expanded.</source>
          <target state="translated">Tipo de formaTuple de los tipos de las expresiones.Supongamos que exps[]ya es tupla expandida.</target>
        </trans-unit>
        <trans-unit id="2d244117783206496417e62aa99112e2aad4b472" translate="yes" xml:space="preserve">
          <source>Form feed (FF) (U+000C).</source>
          <target state="translated">Forma de alimentación (FF)(U+000C).</target>
        </trans-unit>
        <trans-unit id="676f10eb2f485163d62fd19ea9c8545ba45ba1b3" translate="yes" xml:space="preserve">
          <source>Formally, the minimum is a value &lt;code&gt;x&lt;/code&gt; in &lt;code&gt;range&lt;/code&gt; such that &lt;code&gt;pred(a, x)&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt; for all values &lt;code&gt;a&lt;/code&gt; in &lt;code&gt;range&lt;/code&gt;. Conversely, the maximum is a value &lt;code&gt;x&lt;/code&gt; in &lt;code&gt;range&lt;/code&gt; such that &lt;code&gt;pred(x, a)&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt; for all values &lt;code&gt;a&lt;/code&gt; in &lt;code&gt;range&lt;/code&gt; (note the swapped arguments to &lt;code&gt;pred&lt;/code&gt;).</source>
          <target state="translated">Formalmente, el m&amp;iacute;nimo es un valor &lt;code&gt;x&lt;/code&gt; en el &lt;code&gt;range&lt;/code&gt; tal que &lt;code&gt;pred(a, x)&lt;/code&gt; es &lt;code&gt;false&lt;/code&gt; para todos los valores &lt;code&gt;a&lt;/code&gt; en el &lt;code&gt;range&lt;/code&gt; . Por el contrario, el m&amp;aacute;ximo es un valor &lt;code&gt;x&lt;/code&gt; en &lt;code&gt;range&lt;/code&gt; modo que &lt;code&gt;pred(x, a)&lt;/code&gt; es &lt;code&gt;false&lt;/code&gt; para todos los valores &lt;code&gt;a&lt;/code&gt; en &lt;code&gt;range&lt;/code&gt; (tenga en cuenta los argumentos intercambiados a &lt;code&gt;pred&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="041a5dec481d6bf0724caeaa84bc135d7d9062d4" translate="yes" xml:space="preserve">
          <source>Format</source>
          <target state="translated">Format</target>
        </trans-unit>
        <trans-unit id="150d9f841097f64a42b925806fe3290abd9bc35d" translate="yes" xml:space="preserve">
          <source>Format String</source>
          <target state="translated">Formato de la cuerda</target>
        </trans-unit>
        <trans-unit id="683303f489ff84a56879ace6d1310dfe54be7ff4" translate="yes" xml:space="preserve">
          <source>Format a static condition as a tree-like structure, marking failed and bypassed expressions.</source>
          <target state="translated">Formatea una condición estática como una estructura similar a un árbol,marcando expresiones fallidas y desviadas.</target>
        </trans-unit>
        <trans-unit id="51e82ebaf2db5ec167460d9fcf90c1ef8ea0f2d7" translate="yes" xml:space="preserve">
          <source>Format arguments into a string.</source>
          <target state="translated">Formatea los argumentos en una cadena.</target>
        </trans-unit>
        <trans-unit id="b0fb6e308cc109a50167ee0e6731cc7e72eb7494" translate="yes" xml:space="preserve">
          <source>Format arguments into buffer</source>
          <target state="translated">Formatear los argumentos en el buffer</target>
        </trans-unit>
        <trans-unit id="926bb79848aace359e9158738e215805c41e663b" translate="yes" xml:space="preserve">
          <source>Format data into strings.</source>
          <target state="translated">Formatear los datos en cadenas.</target>
        </trans-unit>
        <trans-unit id="23e10a3db64de41eba0cd45a912f85a4b56f3f1b" translate="yes" xml:space="preserve">
          <source>Format flags for CustomFloat.</source>
          <target state="translated">Formato de banderas para CustomFloat.</target>
        </trans-unit>
        <trans-unit id="9bc6c7decb7638f7f45249d89d49acf2bfdc2a16" translate="yes" xml:space="preserve">
          <source>Format like &lt;code&gt;Tuple!(types)(elements formatted with %s each)&lt;/code&gt;.</source>
          <target state="translated">Formato como &lt;code&gt;Tuple!(types)(elements formatted with %s each)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="02e42cbae72865d54225666f797f795a1b96d6bb" translate="yes" xml:space="preserve">
          <source>Format specifier</source>
          <target state="translated">Especificador de formato</target>
        </trans-unit>
        <trans-unit id="c69b10975ea22ae776aa724f607ec9f6aa5721da" translate="yes" xml:space="preserve">
          <source>Format string.</source>
          <target state="translated">Formatea la cadena.</target>
        </trans-unit>
        <trans-unit id="ee3b46d05547f4e1ed0fb6b16e92db78c1a30405" translate="yes" xml:space="preserve">
          <source>Format string. For detailed specification, see &lt;a href=&quot;#formattedWrite&quot;&gt;&lt;code&gt;formattedWrite&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Formatear cadena. Para una especificaci&amp;oacute;n detallada, vea &lt;a href=&quot;#formattedWrite&quot;&gt; &lt;code&gt;formattedWrite&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b9e1764b317ef266e49f202653a88a32e68ea2fd" translate="yes" xml:space="preserve">
          <source>Format to a string such as: &lt;code&gt;mymodule.d(655): [numAllocate:21, numAllocateOK:21, bytesAllocated:324202]&lt;/code&gt;.</source>
          <target state="translated">Formatee en una cadena como: &lt;code&gt;mymodule.d(655): [numAllocate:21, numAllocateOK:21, bytesAllocated:324202]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="69dbb2a04350f8cee981103c2cb9db39585e38b6" translate="yes" xml:space="preserve">
          <source>Format version needed to extract this member.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7a8c4c502d36efd7cdb40b63094b0c90409c783" translate="yes" xml:space="preserve">
          <source>FormatChar</source>
          <target state="translated">FormatChar</target>
        </trans-unit>
        <trans-unit id="d7ab63d27b9f2759987e52fd620d64164025e796" translate="yes" xml:space="preserve">
          <source>FormatSpec!Char &lt;code&gt;f&lt;/code&gt;</source>
          <target state="translated">FormatSpec! Char &lt;code&gt;f&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="eb9d269d7b56db9164861bd1ad68cf391c388350" translate="yes" xml:space="preserve">
          <source>FormatSpec!Char &lt;code&gt;fmt&lt;/code&gt;</source>
          <target state="translated">FormatSpec! Char &lt;code&gt;fmt&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1fcb49409d4c929c4b7d5f9fa3a44391c37114d5" translate="yes" xml:space="preserve">
          <source>FormatSpec!Char &lt;code&gt;spec&lt;/code&gt;</source>
          <target state="translated">FormatSpec! Char &lt;code&gt;spec&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f215319169c289fbb719f3b0d628a3b737f8eded" translate="yes" xml:space="preserve">
          <source>FormatSpec!Char &lt;strong id=&quot;singleSpec&quot;&gt;singleSpec&lt;/strong&gt;(Char)(Char[] fmt);</source>
          <target state="translated">FormatSpec! Char &lt;strong id=&quot;singleSpec&quot;&gt;singleSpec&lt;/strong&gt; (Char) (Char [] fmt);</target>
        </trans-unit>
        <trans-unit id="ff3a107be5350e9cbdf489fea1b9a3cb189415cc" translate="yes" xml:space="preserve">
          <source>FormatSpec!char &lt;code&gt;fmt&lt;/code&gt;</source>
          <target state="translated">FormatSpec! Char &lt;code&gt;fmt&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d214509fa791f89f2be58f52b1b3767a22ec982d" translate="yes" xml:space="preserve">
          <source>Formats &lt;code&gt;Tuple&lt;/code&gt; with either &lt;code&gt;%s&lt;/code&gt;, &lt;code&gt;%(inner%)&lt;/code&gt; or &lt;code&gt;%(inner%|sep%)&lt;/code&gt;.</source>
          <target state="translated">Formatos &lt;code&gt;Tuple&lt;/code&gt; con &lt;code&gt;%s&lt;/code&gt; , &lt;code&gt;%(inner%)&lt;/code&gt; o &lt;code&gt;%(inner%|sep%)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="36fd923e1d2f6994803ec17defea621b9f080f14" translate="yes" xml:space="preserve">
          <source>Formats and writes its arguments in text format to the OutBuffer, followed by a newline.</source>
          <target state="translated">Formatea y escribe sus argumentos en formato de texto al OutBuffer,seguido de una nueva línea.</target>
        </trans-unit>
        <trans-unit id="7071823457762f9707da94f7448fddbd240e7baf" translate="yes" xml:space="preserve">
          <source>Formats and writes its arguments in text format to the OutBuffer.</source>
          <target state="translated">Formatea y escribe sus argumentos en formato de texto al OutBuffer.</target>
        </trans-unit>
        <trans-unit id="a51cf9b2e5a5b055fe6bcc1d2693b2624065293b" translate="yes" xml:space="preserve">
          <source>Formats any value into &lt;code&gt;Char&lt;/code&gt; accepting &lt;code&gt;OutputRange&lt;/code&gt;, using the given &lt;code&gt;FormatSpec&lt;/code&gt;.</source>
          <target state="translated">Formatea cualquier valor en &lt;code&gt;Char&lt;/code&gt; aceptando &lt;code&gt;OutputRange&lt;/code&gt; , usando el &lt;code&gt;FormatSpec&lt;/code&gt; dado .</target>
        </trans-unit>
        <trans-unit id="6b1857e4f5a36639d321cc75f53c946b6701eca2" translate="yes" xml:space="preserve">
          <source>Formats its arguments according to the format string and puts them to an OutputRange.</source>
          <target state="translated">Formatea sus argumentos de acuerdo a la cadena de formato y los pone en un OutputRange.</target>
        </trans-unit>
        <trans-unit id="7b102bb156b0812a82b4b3cc910bf7cff6a74f11" translate="yes" xml:space="preserve">
          <source>Formats supported by Tuple</source>
          <target state="translated">Formatos admitidos por Tuple</target>
        </trans-unit>
        <trans-unit id="1eebc61a97141f60643e629482bce7edcfb75fe1" translate="yes" xml:space="preserve">
          <source>Formats the &lt;code&gt;Options&lt;/code&gt; for CLI printing.</source>
          <target state="translated">Formatea las &lt;code&gt;Options&lt;/code&gt; para la impresi&amp;oacute;n CLI.</target>
        </trans-unit>
        <trans-unit id="026cf84e486080b485be195c8355623b05fc9001" translate="yes" xml:space="preserve">
          <source>Formats the RedBlackTree into a sink function. For more info see &lt;code&gt; std.format.formatValue&lt;/code&gt;. Note that this only is available when the element type can be formatted. Otherwise, the default toString from Object is used.</source>
          <target state="translated">Formatea el RedBlackTree en una funci&amp;oacute;n de sumidero. Para obtener m&amp;aacute;s informaci&amp;oacute;n, consulte &lt;code&gt; std.format.formatValue&lt;/code&gt; . Tenga en cuenta que esto solo est&amp;aacute; disponible cuando se puede formatear el tipo de elemento. De lo contrario, se usa el valor predeterminado toString from Object.</target>
        </trans-unit>
        <trans-unit id="1a1c1d1c97be2b241e71fcbcd57b8c7212c71103" translate="yes" xml:space="preserve">
          <source>Formats the stored value as a string.</source>
          <target state="translated">Formatea el valor almacenado como una cadena.</target>
        </trans-unit>
        <trans-unit id="ff2a0eb4d03de61d70053787eab6804fcec445da" translate="yes" xml:space="preserve">
          <source>Formatted String Printing Functions</source>
          <target state="translated">Funciones de impresión de cadenas formateadas</target>
        </trans-unit>
        <trans-unit id="fc5187ca67d19625ec5705d6a55febca2c516352" translate="yes" xml:space="preserve">
          <source>Formatted number of arguments.</source>
          <target state="translated">Número de argumentos formateados.</target>
        </trans-unit>
        <trans-unit id="dfdf9e737f02222e3b629df49845cd2f57eea582" translate="yes" xml:space="preserve">
          <source>Formatting a struct by defining a method &lt;code&gt;toString&lt;/code&gt;, which takes an output range.  It's recommended that any &lt;code&gt;toString&lt;/code&gt; using &lt;a href=&quot;std_range_primitives#isOutputRange&quot;&gt;output ranges&lt;/a&gt; use &lt;a href=&quot;std_range_primitives#put&quot;&gt;&lt;code&gt;std.range.primitives.put&lt;/code&gt;&lt;/a&gt; rather than use the &lt;code&gt;put&lt;/code&gt; method of the range directly.</source>
          <target state="translated">Formatear una estructura definiendo un m&amp;eacute;todo &lt;code&gt;toString&lt;/code&gt; , que toma un rango de salida. Se recomienda que cualquier &lt;code&gt;toString&lt;/code&gt; que use &lt;a href=&quot;std_range_primitives#isOutputRange&quot;&gt;rangos de salida&lt;/a&gt; use &lt;a href=&quot;std_range_primitives#put&quot;&gt; &lt;code&gt;std.range.primitives.put&lt;/code&gt; en&lt;/a&gt; lugar de usar el m&amp;eacute;todo &lt;code&gt;put&lt;/code&gt; del rango directamente.</target>
        </trans-unit>
        <trans-unit id="8e465166e94e67eebeab101e4359626150ec10a5" translate="yes" xml:space="preserve">
          <source>Forms the symbols available to all D programs. Includes Object, which is the root of the class object hierarchy. This module is implicitly imported.</source>
          <target state="translated">Forma los símbolos disponibles para todos los programas D.Incluye el objeto,que es la raíz de la jerarquía de objetos de la clase.Este módulo es importado implícitamente.</target>
        </trans-unit>
        <trans-unit id="be4f9eeadbcbd0250352284fb3cd5289c89dd0aa" translate="yes" xml:space="preserve">
          <source>Forward range primitive.</source>
          <target state="translated">El rango de avance es primitivo.</target>
        </trans-unit>
        <trans-unit id="f29ecd0a8c2e85a8dd0a05e6e1849d59d6e26721" translate="yes" xml:space="preserve">
          <source>Forward range primitives.</source>
          <target state="translated">Primitivos de rango frontal.</target>
        </trans-unit>
        <trans-unit id="0aa520a29c82bb14e915d25c13dc5e309db9aa45" translate="yes" xml:space="preserve">
          <source>Forward range primitives. Always present.</source>
          <target state="translated">Primitivos de rango frontal.Siempre presentes.</target>
        </trans-unit>
        <trans-unit id="d22e131c3ac191040ab33d51c37ffdb89ec4f5bd" translate="yes" xml:space="preserve">
          <source>Forward range primitives. Only present if &lt;code&gt;Source&lt;/code&gt; is a forward range.</source>
          <target state="translated">Primitivas de rango directo. Solo presente si &lt;code&gt;Source&lt;/code&gt; es un rango directo.</target>
        </trans-unit>
        <trans-unit id="97bc99924d633226857a96f6afec14fc043cb16b" translate="yes" xml:space="preserve">
          <source>Forward range to check for sortedness.</source>
          <target state="translated">Adelante para comprobar si hay sorteo.</target>
        </trans-unit>
        <trans-unit id="7657ababded98f92f21842f17fb3c2a8cd28a85d" translate="yes" xml:space="preserve">
          <source>Forward to &lt;code&gt;opSlice().back&lt;/code&gt;.</source>
          <target state="translated">Reenviar a &lt;code&gt;opSlice().back&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f670785452e24c08e6662a674722599db21dae68" translate="yes" xml:space="preserve">
          <source>Forward to &lt;code&gt;opSlice().front&lt;/code&gt;.</source>
          <target state="translated">Reenviar a &lt;code&gt;opSlice().front&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="406d6f916ef4dc2cf86b7e71d06ceb89e750f775" translate="yes" xml:space="preserve">
          <source>Forward.</source>
          <target state="translated">Forward.</target>
        </trans-unit>
        <trans-unit id="619c49003b4924854c54d8f88890d01e742d1cdb" translate="yes" xml:space="preserve">
          <source>ForwardRange &lt;code&gt;back&lt;/code&gt;</source>
          <target state="translated">Adelante Rango &lt;code&gt;back&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ef30f2488fc02c13b78587f98f5f66b1ed09c755" translate="yes" xml:space="preserve">
          <source>ForwardRange &lt;code&gt;choices&lt;/code&gt;</source>
          <target state="translated">ForwardRange &lt;code&gt;choices&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="073a409c0a0f8fb805007ded8e0840b82337c88e" translate="yes" xml:space="preserve">
          <source>ForwardRange &lt;code&gt;filler&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;filler&lt;/code&gt; rango delantero</target>
        </trans-unit>
        <trans-unit id="d735aafe3953821674bcc047eed0a464f448083f" translate="yes" xml:space="preserve">
          <source>Forwarding</source>
          <target state="translated">Forwarding</target>
        </trans-unit>
        <trans-unit id="59753dcda35fa8785a7cb0df7205b2d4bd41fb72" translate="yes" xml:space="preserve">
          <source>Forwarding ScopeDsymbol. Used by ForwardingAttribDeclaration and ForwardingScopeDeclaration to forward symbol insertions to another scope. See &lt;code&gt;dmd.attrib.ForwardingAttribDeclaration&lt;/code&gt; for more details.</source>
          <target state="translated">Alcance de reenv&amp;iacute;o S&amp;iacute;mbolo. Utilizado por ForwardingAttribDeclaration y ForwardingScopeDeclaration para reenviar inserciones de s&amp;iacute;mbolos a otro &amp;aacute;mbito. Consulte &lt;code&gt;dmd.attrib.ForwardingAttribDeclaration&lt;/code&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="a8c3c38ee76d4f3b54240c75f491818942150299" translate="yes" xml:space="preserve">
          <source>ForwardingScopeDsymbol &lt;strong id=&quot;sym&quot;&gt;sym&lt;/strong&gt;;</source>
          <target state="translated">ForwardingScopeDsymbol &lt;strong id=&quot;sym&quot;&gt;sym&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="350d94101794444e552e24c257a1f22a4fbe99df" translate="yes" xml:space="preserve">
          <source>ForwardingStatements are distributed over the flattened sequence of statements. This prevents flattening to be &quot;blocked&quot; by a ForwardingStatement and is necessary, for example, to support generating scope guards with `static foreach`:</source>
          <target state="translated">Las declaraciones se distribuyen en la secuencia aplanada de declaraciones.Esto evita que el aplanamiento sea &quot;bloqueado&quot; por un ForwardingStatement y es necesario,por ejemplo,para apoyar la generación de guardias de alcance con &quot;foreach estático&quot;:</target>
        </trans-unit>
        <trans-unit id="692658a69283f7fb6a21aa51f11e5d6d2994d5d3" translate="yes" xml:space="preserve">
          <source>Forwards &lt;code&gt;length&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;length&lt;/code&gt; adelante .</target>
        </trans-unit>
        <trans-unit id="5654a0e021e96bad526eccdeb7cb0d25a7be5435" translate="yes" xml:space="preserve">
          <source>Forwards each of the methods in &lt;code&gt;funs&lt;/code&gt; (if defined) to &lt;code&gt;member&lt;/code&gt;.</source>
          <target state="translated">Reenv&amp;iacute;a cada uno de los m&amp;eacute;todos de &lt;code&gt;funs&lt;/code&gt; (si est&amp;aacute; definido) a &lt;code&gt;member&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e165afdb83bce78d5a7427c72318f24d46092f4d" translate="yes" xml:space="preserve">
          <source>Forwards function arguments while keeping &lt;code&gt;out&lt;/code&gt;, &lt;code&gt;ref&lt;/code&gt;, and &lt;code&gt;lazy&lt;/code&gt; on the parameters.</source>
          <target state="translated">Reenv&amp;iacute;a argumentos de funci&amp;oacute;n mientras mantiene &lt;code&gt;out&lt;/code&gt; , &lt;code&gt;ref&lt;/code&gt; y &lt;code&gt;lazy&lt;/code&gt; en los par&amp;aacute;metros.</target>
        </trans-unit>
        <trans-unit id="9385c6728b753fbb370a1c4f1034c150548b8bf1" translate="yes" xml:space="preserve">
          <source>Forwards function arguments while saving ref-ness.</source>
          <target state="translated">Adelanta los argumentos de la función mientras ahorra la redención.</target>
        </trans-unit>
        <trans-unit id="9bf1ea57d6c29870d04450f92da2598f5a795126" translate="yes" xml:space="preserve">
          <source>Forwards to &lt;code&gt;alignedAllocate(bytes, platformAlignment)&lt;/code&gt;.</source>
          <target state="translated">Reenv&amp;iacute;a a &lt;code&gt;alignedAllocate(bytes, platformAlignment)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e78d71ac4fe9046b06039c1f36978f900fc90d21" translate="yes" xml:space="preserve">
          <source>Forwards to &lt;code&gt;alignedReallocate(b, newSize, platformAlignment)&lt;/code&gt;. Should be used with blocks obtained with &lt;code&gt;allocate&lt;/code&gt; otherwise the custom alignment passed with &lt;code&gt;alignedAllocate&lt;/code&gt; can be lost.</source>
          <target state="translated">&lt;code&gt;alignedReallocate(b, newSize, platformAlignment)&lt;/code&gt; a alineadoReallocate (b, newSize, platformAlignment) . Debe usarse con bloques obtenidos con &lt;code&gt;allocate&lt;/code&gt; ;de ​​lo contrario, se puede perder la alineaci&amp;oacute;n personalizada que se pasa con &lt;code&gt;alignedAllocate&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d788f6c07eb5fb2e6319214dbdc4af6789c0f502" translate="yes" xml:space="preserve">
          <source>Forwards to &lt;code&gt;impl.alignedReallocate&lt;/code&gt; if defined, &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">Reenv&amp;iacute;a a &lt;code&gt;impl.alignedReallocate&lt;/code&gt; si est&amp;aacute; definido, de lo contrario es &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8bd9cee5dc99654ad10a48eac7f3712c848d2492" translate="yes" xml:space="preserve">
          <source>Forwards to &lt;code&gt;impl.empty()&lt;/code&gt; if defined, otherwise returns &lt;code&gt;Ternary.unknown&lt;/code&gt;.</source>
          <target state="translated">Reenv&amp;iacute;a a &lt;code&gt;impl.empty()&lt;/code&gt; si est&amp;aacute; definido, de lo contrario devuelve &lt;code&gt;Ternary.unknown&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="acf2453169c3a58c2868738f1fc21eb777d091c4" translate="yes" xml:space="preserve">
          <source>Forwards to &lt;code&gt;insertBack&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;insertBack&lt;/code&gt; a insertBack .</target>
        </trans-unit>
        <trans-unit id="60a899e29a86abcd90907c95435a5280010cfeb4" translate="yes" xml:space="preserve">
          <source>Forwards to &lt;code&gt;parent.alignedAllocate&lt;/code&gt;. Affects per instance: &lt;code&gt;numAlignedAllocate&lt;/code&gt;, &lt;code&gt;bytesUsed&lt;/code&gt;, &lt;code&gt;bytesAllocated&lt;/code&gt;, &lt;code&gt;bytesSlack&lt;/code&gt;, &lt;code&gt;numAlignedAllocateOk&lt;/code&gt;, and &lt;code&gt;bytesHighTide&lt;/code&gt;. Affects per call: &lt;code&gt;numAlignedAllocate&lt;/code&gt;, &lt;code&gt;numAlignedAllocateOk&lt;/code&gt;, and &lt;code&gt;bytesAllocated&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;parent.alignedAllocate&lt;/code&gt; a parent.alignedAllocate . Afecta por instancia: &lt;code&gt;numAlignedAllocate&lt;/code&gt; , &lt;code&gt;bytesUsed&lt;/code&gt; , &lt;code&gt;bytesAllocated&lt;/code&gt; , &lt;code&gt;bytesSlack&lt;/code&gt; , &lt;code&gt;numAlignedAllocateOk&lt;/code&gt; y &lt;code&gt;bytesHighTide&lt;/code&gt; . Afecta por llamada: &lt;code&gt;numAlignedAllocate&lt;/code&gt; , &lt;code&gt;numAlignedAllocateOk&lt;/code&gt; y &lt;code&gt;bytesAllocated&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0de51b91db75956f253cd2e990aebff215db91a5" translate="yes" xml:space="preserve">
          <source>Forwards to &lt;code&gt;parent.allocate&lt;/code&gt;. Affects per instance: &lt;code&gt;numAllocate&lt;/code&gt;, &lt;code&gt;bytesUsed&lt;/code&gt;, &lt;code&gt;bytesAllocated&lt;/code&gt;, &lt;code&gt;bytesSlack&lt;/code&gt;, &lt;code&gt;numAllocateOK&lt;/code&gt;, and &lt;code&gt;bytesHighTide&lt;/code&gt;. Affects per call: &lt;code&gt;numAllocate&lt;/code&gt;, &lt;code&gt; numAllocateOK&lt;/code&gt;, and &lt;code&gt;bytesAllocated&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;parent.allocate&lt;/code&gt; a parent.allocate . Afecta por instancia: &lt;code&gt;numAllocate&lt;/code&gt; , &lt;code&gt;bytesUsed&lt;/code&gt; , &lt;code&gt;bytesAllocated&lt;/code&gt; , &lt;code&gt;bytesSlack&lt;/code&gt; , &lt;code&gt;numAllocateOK&lt;/code&gt; y &lt;code&gt;bytesHighTide&lt;/code&gt; . Afecta por llamada: &lt;code&gt;numAllocate&lt;/code&gt; , &lt;code&gt; numAllocateOK&lt;/code&gt; y &lt;code&gt;bytesAllocated&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dcaf3b31885140c27644f437101ba9113ddebba0" translate="yes" xml:space="preserve">
          <source>Forwards to &lt;code&gt;parent.expand(b, delta)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;parent.expand(b, delta)&lt;/code&gt; a parent.expand (b, delta) .</target>
        </trans-unit>
        <trans-unit id="b27aa4f3be329203334bb86f539151cb305c808b" translate="yes" xml:space="preserve">
          <source>Forwards to &lt;code&gt;parent.goodAllocSize&lt;/code&gt; (which accounts for the management overhead).</source>
          <target state="translated">Reenv&amp;iacute;a a &lt;code&gt;parent.goodAllocSize&lt;/code&gt; (que representa los gastos generales de administraci&amp;oacute;n).</target>
        </trans-unit>
        <trans-unit id="0a8e660798dc338a8a1471f38403abdf431c688a" translate="yes" xml:space="preserve">
          <source>Forwards to &lt;code&gt;parent.owns(b)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;parent.owns(b)&lt;/code&gt; a parent.owns (b) .</target>
        </trans-unit>
        <trans-unit id="c49defce19fbb5c360ddd5f8418442bee4a9e756" translate="yes" xml:space="preserve">
          <source>Found function if it satisfies &lt;code&gt;isThis()&lt;/code&gt;, otherwise &lt;code&gt;null&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;isThis()&lt;/code&gt; encontrada si satisface isThis () , de lo contrario &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0e5b2644294a615403e1d25df5a0697b50b1f11f" translate="yes" xml:space="preserve">
          <source>Fractional seconds past the second (i.e. the portion of a &lt;a href=&quot;#SysTime&quot;&gt;&lt;code&gt;SysTime&lt;/code&gt;&lt;/a&gt; which is less than a second).</source>
          <target state="translated">Fracciones de segundo despu&amp;eacute;s del segundo (es decir, la parte de un &lt;a href=&quot;#SysTime&quot;&gt; &lt;code&gt;SysTime&lt;/code&gt; &lt;/a&gt; que es menos de un segundo).</target>
        </trans-unit>
        <trans-unit id="379f2457e03cb11d9fb2efb285637d5db4d20d0e" translate="yes" xml:space="preserve">
          <source>Framework Paths</source>
          <target state="translated">Caminos del marco</target>
        </trans-unit>
        <trans-unit id="af39dd055c3ef8226fbe929d048cafb094dc8a51" translate="yes" xml:space="preserve">
          <source>Frameworks</source>
          <target state="translated">Frameworks</target>
        </trans-unit>
        <trans-unit id="76f3bbf403c0a1d06091b2e954aa5148b52956ac" translate="yes" xml:space="preserve">
          <source>Free ExceptionHeader that was created by create().</source>
          <target state="translated">Free ExceptionHeader que fue creado por create().</target>
        </trans-unit>
        <trans-unit id="6e84d556b35797f261b67f9c140d77ba6a16046e" translate="yes" xml:space="preserve">
          <source>Free Memory Used By A Database Connection</source>
          <target state="translated">Memoria libre utilizada por una conexión de base de datos</target>
        </trans-unit>
        <trans-unit id="ebc0d55c1803ae64cbd97a59b9b2802ad68ac4a1" translate="yes" xml:space="preserve">
          <source>Free a data definition struct.</source>
          <target state="translated">Liberar una estructura de definición de datos.</target>
        </trans-unit>
        <trans-unit id="b863a7908826b1af85e7908ab51bda44bf1ecda4" translate="yes" xml:space="preserve">
          <source>Free a multipart formpost previously built with curl_formadd().</source>
          <target state="translated">Liberar una horquilla multiparte previamente construida con curl_formadd().</target>
        </trans-unit>
        <trans-unit id="3195ad8b795496334c672bd13584f65569ba68b7" translate="yes" xml:space="preserve">
          <source>Free a prior allocation</source>
          <target state="translated">Liberar una asignación previa</target>
        </trans-unit>
        <trans-unit id="b1f545998e095b9a06b4728df726ebf0dad217f2" translate="yes" xml:space="preserve">
          <source>Free blocks have variable size and are linked in a singly-linked list.</source>
          <target state="translated">Los bloques libres tienen un tamaño variable y están enlazados en una lista única.</target>
        </trans-unit>
        <trans-unit id="2e8b5134a1b2ec3e5e93b6a487571bc8ad9bf630" translate="yes" xml:space="preserve">
          <source>Free free list.</source>
          <target state="translated">Lista gratuita.</target>
        </trans-unit>
        <trans-unit id="0917613170fb85672a58086626671da808078654" translate="yes" xml:space="preserve">
          <source>Free idxStr using sqlite3_free() if true</source>
          <target state="translated">Liberar idxStr usando sqlite3_free()si es cierto</target>
        </trans-unit>
        <trans-unit id="98a1ae48a4466ad89a88d462e43c40189625122d" translate="yes" xml:space="preserve">
          <source>Free list built on top of exactly one contiguous block of memory. The block is assumed to have been allocated with &lt;code&gt;ParentAllocator&lt;/code&gt;, and is released in &lt;code&gt;ContiguousFreeList&lt;/code&gt;'s destructor (unless &lt;code&gt;ParentAllocator&lt;/code&gt; is &lt;code&gt;NullAllocator&lt;/code&gt;).</source>
          <target state="translated">Lista gratuita construida sobre exactamente un bloque contiguo de memoria. Se supone que el bloque se ha asignado con &lt;code&gt;ParentAllocator&lt;/code&gt; y se libera en el destructor &lt;code&gt;ContiguousFreeList&lt;/code&gt; (a menos que &lt;code&gt;ParentAllocator&lt;/code&gt; sea &lt;code&gt;NullAllocator&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="10d99eecb5370b60ca034187daa4ef1e45d53646" translate="yes" xml:space="preserve">
          <source>Free list.</source>
          <target state="translated">Lista gratuita.</target>
        </trans-unit>
        <trans-unit id="56d7e4661565975bfba4769fa7e3d64507696d05" translate="yes" xml:space="preserve">
          <source>Free memory allocated by FileName routines</source>
          <target state="translated">Memoria libre asignada por las rutinas FileName</target>
        </trans-unit>
        <trans-unit id="f7c1a4f30544ddc6377c5a280a73f14897416990" translate="yes" xml:space="preserve">
          <source>Free returned value with FileName::free()</source>
          <target state="translated">Valor devuelto libre con FileName::free()</target>
        </trans-unit>
        <trans-unit id="3b18d56d2ee33e5deee0527f6a5620f9d07c8560" translate="yes" xml:space="preserve">
          <source>Free-form syntax, ignores whitespace in pattern, useful for formatting complex regular expressions.</source>
          <target state="translated">Sintaxis de forma libre,ignora los espacios en blanco en patrón,útil para formatear expresiones regulares complejas.</target>
        </trans-unit>
        <trans-unit id="b845fdaff1bf49c014dff506cfa6bdc63dadd835" translate="yes" xml:space="preserve">
          <source>FreeBSD</source>
          <target state="translated">FreeBSD</target>
        </trans-unit>
        <trans-unit id="927e12a7e999b3e0f18d3a882968560f012cc81f" translate="yes" xml:space="preserve">
          <source>FreeBSD-Only</source>
          <target state="translated">FreeBSD-Only</target>
        </trans-unit>
        <trans-unit id="736e4cd346eb715c4446b514550578d814d7d0e0" translate="yes" xml:space="preserve">
          <source>FreeBSD/DragonFlyBSD are the only systems which specifically have a clock set up for this (it has &lt;code&gt;CLOCK_SECOND&lt;/code&gt; to use with &lt;code&gt;clock_gettime&lt;/code&gt; which takes advantage of an in-kernel cached value), but on other systems, the fastest function available will be used, and the resulting &lt;code&gt;SysTime&lt;/code&gt; will be rounded down to the second if the clock that was used gave the time at a more precise resolution. So, it's guaranteed that the time will be given at a precision of one second and it's likely the case that will be faster than &lt;code&gt;ClockType.normal&lt;/code&gt;, since there tend to be several options on a system to get the time at low resolutions, and they tend to be faster than getting the time at high resolutions.</source>
          <target state="translated">FreeBSD / DragonFlyBSD son los &amp;uacute;nicos sistemas que espec&amp;iacute;ficamente tienen un reloj configurado para esto (tiene &lt;code&gt;CLOCK_SECOND&lt;/code&gt; para usar con &lt;code&gt;clock_gettime&lt;/code&gt; que aprovecha un valor en cach&amp;eacute; en el n&amp;uacute;cleo), pero en otros sistemas, se usar&amp;aacute; la funci&amp;oacute;n m&amp;aacute;s r&amp;aacute;pida disponible, y el &lt;code&gt;SysTime&lt;/code&gt; resultante se redondear&amp;aacute; al segundo si el reloj que se us&amp;oacute; dio la hora con una resoluci&amp;oacute;n m&amp;aacute;s precisa. Por lo tanto, se garantiza que el tiempo se dar&amp;aacute; con una precisi&amp;oacute;n de un segundo y es probable que sea m&amp;aacute;s r&amp;aacute;pido que &lt;code&gt;ClockType.normal&lt;/code&gt; , ya que suele haber varias opciones en un sistema para obtener el tiempo a bajas resoluciones, y tienden a ser m&amp;aacute;s r&amp;aacute;pidos que obtener el tiempo a altas resoluciones.</target>
        </trans-unit>
        <trans-unit id="a9cdca34912cf1be0977006662f6f41677329f87" translate="yes" xml:space="preserve">
          <source>FreeList shared across threads. Allocation and deallocation are lock-free. The parameters have the same semantics as for &lt;code&gt;FreeList&lt;/code&gt;.</source>
          <target state="translated">FreeList compartida entre hilos. La asignaci&amp;oacute;n y la desasignaci&amp;oacute;n son sin bloqueo. Los par&amp;aacute;metros tienen la misma sem&amp;aacute;ntica que para &lt;code&gt;FreeList&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ebdbf1c9047d64cde03eaed8b92301afb24c8b3e" translate="yes" xml:space="preserve">
          <source>Freeing all GC allocated memory that has no active pointers to it and do not need destructors to run.</source>
          <target state="translated">Liberando toda la memoria asignada a la GC que no tiene punteros activos y no necesita destructores para funcionar.</target>
        </trans-unit>
        <trans-unit id="9c1d262fbf3a7e284bb2c20e67267943ef09c825" translate="yes" xml:space="preserve">
          <source>Freeing any remaining unreachable memory.</source>
          <target state="translated">Liberando cualquier recuerdo inalcanzable que quede.</target>
        </trans-unit>
        <trans-unit id="b1843177cd4be06555f8650438e2f5cee23b6d7c" translate="yes" xml:space="preserve">
          <source>Frees the memory allocated for &lt;code&gt;x&lt;/code&gt;. If &lt;code&gt;x&lt;/code&gt; is a reference to a class or interface, the memory allocated for the underlying instance is freed. If &lt;code&gt;x&lt;/code&gt; is a pointer, the memory allocated for the pointed-to object is freed. If &lt;code&gt;x&lt;/code&gt; is a built-in array, the memory allocated for the array is freed. If &lt;code&gt;x&lt;/code&gt; does not refer to memory previously allocated with &lt;code&gt;new&lt;/code&gt; (or the lower-level equivalents in the GC API), the behavior is undefined.</source>
          <target state="translated">Libera la memoria asignada para &lt;code&gt;x&lt;/code&gt; . Si &lt;code&gt;x&lt;/code&gt; es una referencia a una clase o interfaz, la memoria asignada para la instancia subyacente se libera. Si &lt;code&gt;x&lt;/code&gt; es un puntero, se libera la memoria asignada para el objeto se&amp;ntilde;alado. Si &lt;code&gt;x&lt;/code&gt; es una matriz incorporada, la memoria asignada para la matriz se libera. Si &lt;code&gt;x&lt;/code&gt; no se refiere a la memoria previamente asignada con &lt;code&gt;new&lt;/code&gt; (o los equivalentes de nivel inferior en la API de GC), el comportamiento es indefinido.</target>
        </trans-unit>
        <trans-unit id="3f66052a107eaf9bae7cad0f61fb462f47ec2c47" translate="yes" xml:space="preserve">
          <source>From</source>
          <target state="translated">From</target>
        </trans-unit>
        <trans-unit id="306cb21df3375fca60d15a5cf9f358aab2a447e3" translate="yes" xml:space="preserve">
          <source>From &lt;a href=&quot;#Duration&quot;&gt;&lt;code&gt;Duration&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">De &lt;a href=&quot;#Duration&quot;&gt; &lt;code&gt;Duration&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="db2022114f51428d23663985d9512c4f397b106d" translate="yes" xml:space="preserve">
          <source>From &lt;a href=&quot;#FracSec&quot;&gt;&lt;code&gt;FracSec&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">De &lt;a href=&quot;#FracSec&quot;&gt; &lt;code&gt;FracSec&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2dcadc69133dc56548eb2198fe024d580cc53763" translate="yes" xml:space="preserve">
          <source>From &lt;a href=&quot;#TickDuration&quot;&gt;&lt;code&gt;TickDuration&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">De &lt;a href=&quot;#TickDuration&quot;&gt; &lt;code&gt;TickDuration&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9e8638502dca540c07f22be8e25e01957c58dc0f" translate="yes" xml:space="preserve">
          <source>From a postblit perspective, qualifiying the struct definition yields the same result as explicitly qualifying the postblit.</source>
          <target state="translated">Desde una perspectiva postblit,calificar la definición de estructura da el mismo resultado que calificar explícitamente el postblit.</target>
        </trans-unit>
        <trans-unit id="a4300cea6afd6c5c0528f1834abaff027668e0ed" translate="yes" xml:space="preserve">
          <source>From units</source>
          <target state="translated">De las unidades</target>
        </trans-unit>
        <trans-unit id="87b5b5d7f217c54f10b305679e84d27b0ffddee6" translate="yes" xml:space="preserve">
          <source>Front-end expression rewriting should create temporary variables for non trivial sub-expressions in order to: 1. save evaluation order 2. prevent sharing of sub-expression in AST</source>
          <target state="translated">La reescritura de la expresión frontal debe crear variables temporales para subexpresiones no triviales con el fin de:1.Guardar el orden de evaluación 2.Evitar que se comparta la subexpresión en AST</target>
        </trans-unit>
        <trans-unit id="d866f093f3136af5a6cee1f9313a0fdd24da6c23" translate="yes" xml:space="preserve">
          <source>FrontTransversal!(RangeOfRanges, opt) &lt;strong id=&quot;frontTransversal&quot;&gt;frontTransversal&lt;/strong&gt;(TransverseOptions opt = TransverseOptions.assumeJagged, RangeOfRanges)(RangeOfRanges rr);</source>
          <target state="translated">FrontTransversal! (RangeOfRanges, opt) &lt;strong id=&quot;frontTransversal&quot;&gt;frontTransversal&lt;/strong&gt; (TransverseOptions opt = TransverseOptions.assumeJagged, RangeOfRanges) (RangeOfRanges rr);</target>
        </trans-unit>
        <trans-unit id="b96493999dfb84df4fdc104ae8dc68c5ab28eeb6" translate="yes" xml:space="preserve">
          <source>Full Usage Example</source>
          <target state="translated">Ejemplo de uso completo</target>
        </trans-unit>
        <trans-unit id="dd2159a885b04c76ad21acb9e9df96e1b3df4a78" translate="yes" xml:space="preserve">
          <source>Full content of the file to be written</source>
          <target state="translated">El contenido completo del archivo que se va a escribir</target>
        </trans-unit>
        <trans-unit id="890fb87ee1e5cddd39317993afd9de0de79b7d45" translate="yes" xml:space="preserve">
          <source>Full metaprogramming facilities</source>
          <target state="translated">Instalaciones completas de metaprogramación</target>
        </trans-unit>
        <trans-unit id="0c7ebd23a12a9077c88a3e9d528a97811a94a547" translate="yes" xml:space="preserve">
          <source>Fully sequenced (acquire + release). Corresponds to &lt;a href=&quot;https://llvm.org/docs/Atomics.html#sequentiallyconsistent&quot;&gt;LLVM AtomicOrdering.SequentiallyConsistent&lt;/a&gt; and C++11/C11 &lt;code&gt;memory_order_seq_cst&lt;/code&gt;.</source>
          <target state="translated">Completamente secuenciado (adquirir + liberar). Corresponde a &lt;a href=&quot;https://llvm.org/docs/Atomics.html#sequentiallyconsistent&quot;&gt;LLVM AtomicOrdering.SequentiallyConsistent&lt;/a&gt; y C ++ 11 / C11 &lt;code&gt;memory_order_seq_cst&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="244c67389fed3259f84c95197cc9eb3648ddcb0d" translate="yes" xml:space="preserve">
          <source>Fully working example is available at &lt;a href=&quot;#usage-example&quot;&gt;the bottom&lt;/a&gt;.</source>
          <target state="translated">Ejemplo totalmente funcional est&amp;aacute; disponible en &lt;a href=&quot;#usage-example&quot;&gt;la parte inferior&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d32cb0b70d83396fe47823d8472eaa9476a37437" translate="yes" xml:space="preserve">
          <source>FuncDeclaration &lt;code&gt;f&lt;/code&gt;</source>
          <target state="translated">FuncDeclaration &lt;code&gt;f&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="46c96c463b9529c91720bbc72354f9466bd3c26f" translate="yes" xml:space="preserve">
          <source>FuncDeclaration &lt;code&gt;fd&lt;/code&gt;</source>
          <target state="translated">FuncDeclaration &lt;code&gt;fd&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6fd968926da674858b925b704767caf618b18035" translate="yes" xml:space="preserve">
          <source>FuncDeclaration &lt;code&gt;fdc&lt;/code&gt;</source>
          <target state="translated">FuncDeclaration &lt;code&gt;fdc&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="85e24cae0141215bceece007770b580c50fd2f38" translate="yes" xml:space="preserve">
          <source>FuncDeclaration &lt;code&gt;func&lt;/code&gt;</source>
          <target state="translated">FuncDeclaration &lt;code&gt;func&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7f3b288cb44551e47fdefb27fe0ea167fb4d1483" translate="yes" xml:space="preserve">
          <source>FuncDeclaration &lt;strong id=&quot;buildInv&quot;&gt;buildInv&lt;/strong&gt;(AggregateDeclaration ad, Scope* sc);</source>
          <target state="translated">FuncDeclaration &lt;strong id=&quot;buildInv&quot;&gt;buildInv&lt;/strong&gt; (anuncio de &lt;strong id=&quot;buildInv&quot;&gt;declaraci&amp;oacute;n&lt;/strong&gt; agregada, alcance * sc);</target>
        </trans-unit>
        <trans-unit id="2e19843cd5ed176434a3efaeff7d8bda7426dc57" translate="yes" xml:space="preserve">
          <source>FuncDeclaration &lt;strong id=&quot;buildOpAssign&quot;&gt;buildOpAssign&lt;/strong&gt;(StructDeclaration sd, Scope* sc);</source>
          <target state="translated">FuncDeclaration &lt;strong id=&quot;buildOpAssign&quot;&gt;buildOpAssign&lt;/strong&gt; (StructDeclaration sd, Scope * sc);</target>
        </trans-unit>
        <trans-unit id="03359c276bccc50045b57bc8ace08bc6d8f2ae59" translate="yes" xml:space="preserve">
          <source>FuncDeclaration &lt;strong id=&quot;buildOpEquals&quot;&gt;buildOpEquals&lt;/strong&gt;(StructDeclaration sd, Scope* sc);</source>
          <target state="translated">FuncDeclaration &lt;strong id=&quot;buildOpEquals&quot;&gt;buildOpEquals&lt;/strong&gt; (StructDeclaration sd, Scope * sc);</target>
        </trans-unit>
        <trans-unit id="507d5c363210e3f23b2c42085b0c0ff39e10c2cc" translate="yes" xml:space="preserve">
          <source>FuncDeclaration &lt;strong id=&quot;buildXopCmp&quot;&gt;buildXopCmp&lt;/strong&gt;(StructDeclaration sd, Scope* sc);</source>
          <target state="translated">FuncDeclaration &lt;strong id=&quot;buildXopCmp&quot;&gt;buildXopCmp&lt;/strong&gt; (StructDeclaration sd, Scope * sc);</target>
        </trans-unit>
        <trans-unit id="859ef670635a842eaebad8ac23f82e95392d9e8c" translate="yes" xml:space="preserve">
          <source>FuncDeclaration &lt;strong id=&quot;buildXopEquals&quot;&gt;buildXopEquals&lt;/strong&gt;(StructDeclaration sd, Scope* sc);</source>
          <target state="translated">FuncDeclaration &lt;strong id=&quot;buildXopEquals&quot;&gt;buildXopEquals&lt;/strong&gt; (StructDeclaration sd, Scope * sc);</target>
        </trans-unit>
        <trans-unit id="dc070bb95306fb1a92b40edce98353f4664181ad" translate="yes" xml:space="preserve">
          <source>FuncDeclaration &lt;strong id=&quot;buildXtoHash&quot;&gt;buildXtoHash&lt;/strong&gt;(StructDeclaration sd, Scope* sc);</source>
          <target state="translated">FuncDeclaration &lt;strong id=&quot;buildXtoHash&quot;&gt;buildXtoHash&lt;/strong&gt; (StructDeclaration sd, Scope * sc);</target>
        </trans-unit>
        <trans-unit id="a30ba00bb5d45e8e8a6da89f6ff22fb9cbecb606" translate="yes" xml:space="preserve">
          <source>FuncDeclaration &lt;strong id=&quot;doHeaderInstantiation&quot;&gt;doHeaderInstantiation&lt;/strong&gt;(TemplateInstance ti, Scope* sc2, FuncDeclaration fd, Type tthis, Expressions* fargs);</source>
          <target state="translated">FuncDeclaration &lt;strong id=&quot;doHeaderInstantiation&quot;&gt;doHeaderInstantiation&lt;/strong&gt; (TemplateInstance ti, Scope * sc2, FuncDeclaration fd, Type tthis, Expressions * fargs);</target>
        </trans-unit>
        <trans-unit id="d05a566062ec8864bd0d4c9e283c124ce8c44dfa" translate="yes" xml:space="preserve">
          <source>FuncDeclaration &lt;strong id=&quot;fdensure&quot;&gt;fdensure&lt;/strong&gt;;</source>
          <target state="translated">FuncDeclaration &lt;strong id=&quot;fdensure&quot;&gt;fdensure&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="9e42a220d72031c5ac346bcdb8b0d4dc5655921c" translate="yes" xml:space="preserve">
          <source>FuncDeclaration &lt;strong id=&quot;fdrequire&quot;&gt;fdrequire&lt;/strong&gt;;</source>
          <target state="translated">FuncDeclaration &lt;strong id=&quot;fdrequire&quot;&gt;fdrequire&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="d75bdbbe19a26e762aba1b2f76a15fde383c64a0" translate="yes" xml:space="preserve">
          <source>FuncDeclaration &lt;strong id=&quot;hasIdentityOpAssign&quot;&gt;hasIdentityOpAssign&lt;/strong&gt;(AggregateDeclaration ad, Scope* sc);</source>
          <target state="translated">FuncDeclaration &lt;strong id=&quot;hasIdentityOpAssign&quot;&gt;hasIdentityOpAssign&lt;/strong&gt; (anuncio de &lt;strong id=&quot;hasIdentityOpAssign&quot;&gt;declaraci&amp;oacute;n&lt;/strong&gt; agregada, alcance * sc);</target>
        </trans-unit>
        <trans-unit id="fb1ead50f11e27697b705598972fc6d1ffead188" translate="yes" xml:space="preserve">
          <source>FuncDeclaration &lt;strong id=&quot;hasThis&quot;&gt;hasThis&lt;/strong&gt;(Scope* sc);</source>
          <target state="translated">FuncDeclaration &lt;strong id=&quot;hasThis&quot;&gt;hasThis&lt;/strong&gt; (Scope * sc);</target>
        </trans-unit>
        <trans-unit id="9c8e5d63f59418c4c2add44a220d39f8eb8d7843" translate="yes" xml:space="preserve">
          <source>FuncDeclaration &lt;strong id=&quot;overnext0&quot;&gt;overnext0&lt;/strong&gt;;</source>
          <target state="translated">FuncDeclaration &lt;strong id=&quot;overnext0&quot;&gt;overnext0&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="e92604a27d4e8a86aead189ab657e429f7804d91" translate="yes" xml:space="preserve">
          <source>FuncDeclaration &lt;strong id=&quot;resolveFuncCall&quot;&gt;resolveFuncCall&lt;/strong&gt;(ref const Loc loc, Scope* sc, Dsymbol s, Objects* tiargs, Type tthis, Expressions* fargs, FuncResolveFlag flags);</source>
          <target state="translated">FuncDeclaration &lt;strong id=&quot;resolveFuncCall&quot;&gt;resolveFuncCall&lt;/strong&gt; (ref const Loc loc, Scope * sc, Dsymbol s, Objects * tiargs, Type tthis, Expressions * fargs, FuncResolveFlag flags);</target>
        </trans-unit>
        <trans-unit id="6bc7f2dda0d8c4f33d8fa77e2a6866f9c3e063da" translate="yes" xml:space="preserve">
          <source>FuncDeclaration &lt;strong id=&quot;search_toString&quot;&gt;search_toString&lt;/strong&gt;(StructDeclaration sd);</source>
          <target state="translated">FuncDeclaration &lt;strong id=&quot;search_toString&quot;&gt;search_toString&lt;/strong&gt; (StructDeclaration sd);</target>
        </trans-unit>
        <trans-unit id="d2f8d9014611a673032f33ed2918b0db3cbea6e7" translate="yes" xml:space="preserve">
          <source>FuncDeclaration of &lt;code&gt;toString()&lt;/code&gt; if found, &lt;code&gt;null&lt;/code&gt; if not</source>
          <target state="translated">FuncDeclaration de &lt;code&gt;toString()&lt;/code&gt; si se encuentra, &lt;code&gt;null&lt;/code&gt; si no</target>
        </trans-unit>
        <trans-unit id="0de7865b78f78b6942752a1607fa8f3decdf8f8b" translate="yes" xml:space="preserve">
          <source>FuncDeclarations &lt;strong id=&quot;foverrides&quot;&gt;foverrides&lt;/strong&gt;;</source>
          <target state="translated">FuncDeclarations &lt;strong id=&quot;foverrides&quot;&gt;foverrides&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="cefac5fb4c4f6f7aad7982a9de7b94425bbd152a" translate="yes" xml:space="preserve">
          <source>FuncDeclarations &lt;strong id=&quot;siblingCallers&quot;&gt;siblingCallers&lt;/strong&gt;;</source>
          <target state="translated">FuncDeclarations &lt;strong id=&quot;siblingCallers&quot;&gt;siblingCallers&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="1147d19864a2f24679061fb745f4f2745312dc4d" translate="yes" xml:space="preserve">
          <source>FuncLiteralDeclaration &lt;code&gt;l1&lt;/code&gt;</source>
          <target state="translated">FuncLiteralDeclaration &lt;code&gt;l1&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="34754aacf81ddb7c1a4c8be9c611413058146f76" translate="yes" xml:space="preserve">
          <source>FuncLiteralDeclaration &lt;code&gt;l2&lt;/code&gt;</source>
          <target state="translated">FuncLiteralDeclaration &lt;code&gt;l2&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0df7e78750c597d40962880c788feb5d42d0507c" translate="yes" xml:space="preserve">
          <source>FuncResolveFlag &lt;code&gt;flags&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;flags&lt;/code&gt; FuncResolveFlag</target>
        </trans-unit>
        <trans-unit id="8d148d41b57da4467de12a195094eac776bca54d" translate="yes" xml:space="preserve">
          <source>Function Attribute Inference</source>
          <target state="translated">Función Atributo Inferencia</target>
        </trans-unit>
        <trans-unit id="a019467e942226e7593baeafe04451d52208ddbd" translate="yes" xml:space="preserve">
          <source>Function Auxiliary Data</source>
          <target state="translated">Función Datos auxiliares</target>
        </trans-unit>
        <trans-unit id="7cb4de12c910c8d000862c6b8806ba33b405085e" translate="yes" xml:space="preserve">
          <source>Function Call Operator Overloading</source>
          <target state="translated">Función Llamada Operador Sobrecarga</target>
        </trans-unit>
        <trans-unit id="b257168e280b545833c00a892f5a9654498e1038" translate="yes" xml:space="preserve">
          <source>Function Call Operator Overloading &lt;code&gt;f()&lt;/code&gt;</source>
          <target state="translated">Operador de llamada de funci&amp;oacute;n sobrecarga &lt;code&gt;f()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="287c317aff3ca62b6d115ccce3c3993c93d19bb1" translate="yes" xml:space="preserve">
          <source>Function Calling Conventions</source>
          <target state="translated">Función Llamar a las Convenciones</target>
        </trans-unit>
        <trans-unit id="897aa7901cb2b135a5d5c44d09b74d23db3807ca" translate="yes" xml:space="preserve">
          <source>Function Default Arguments</source>
          <target state="translated">Argumentos de la función por defecto</target>
        </trans-unit>
        <trans-unit id="95b0294dd891e754097881615649b65fc6ba31c5" translate="yes" xml:space="preserve">
          <source>Function Flags</source>
          <target state="translated">Banderas de función</target>
        </trans-unit>
        <trans-unit id="d8861f5c13214753c72cc4ec28a42da4d33141ab" translate="yes" xml:space="preserve">
          <source>Function Inheritance and Overriding</source>
          <target state="translated">Herencia y anulación de funciones</target>
        </trans-unit>
        <trans-unit id="5bcb901ef2c2acd0ad4fdd3aaa4dbd63df1c459e" translate="yes" xml:space="preserve">
          <source>Function Literals</source>
          <target state="translated">Literales de la función</target>
        </trans-unit>
        <trans-unit id="a9ab374cd6bd246bd36d7f40fb0af05f53c4d5a7" translate="yes" xml:space="preserve">
          <source>Function Name</source>
          <target state="translated">Nombre de la función</target>
        </trans-unit>
        <trans-unit id="84101354a0a57697de0f255638b9cba689a57826" translate="yes" xml:space="preserve">
          <source>Function Overloading</source>
          <target state="translated">Sobrecarga de la función</target>
        </trans-unit>
        <trans-unit id="cec90ffa8d067cfb33c2b7e5ea59f57a4ab51f07" translate="yes" xml:space="preserve">
          <source>Function Parameters</source>
          <target state="translated">Parámetros de la función</target>
        </trans-unit>
        <trans-unit id="27e4c7203c9643477f2a066182da530038d7af91" translate="yes" xml:space="preserve">
          <source>Function Return Values</source>
          <target state="translated">Función Valores de retorno</target>
        </trans-unit>
        <trans-unit id="564f4636a468d710ec718d52c0a86615388f886e" translate="yes" xml:space="preserve">
          <source>Function Safety</source>
          <target state="translated">Función de seguridad</target>
        </trans-unit>
        <trans-unit id="89ef743a3244fbdb65d0570367a96fdb2440073a" translate="yes" xml:space="preserve">
          <source>Function Templates</source>
          <target state="translated">Plantillas de funciones</target>
        </trans-unit>
        <trans-unit id="26851646d4034fb238c1b8a8d1cbdf65764b94ab" translate="yes" xml:space="preserve">
          <source>Function Templates with Auto Ref Parameters</source>
          <target state="translated">Plantillas de funciones con parámetros de referencia automática</target>
        </trans-unit>
        <trans-unit id="2a828a2f47a94f98e25eacb43fb34ce3a0a927e6" translate="yes" xml:space="preserve">
          <source>Function argument initializes a &lt;code&gt;return&lt;/code&gt; parameter, and that parameter gets assigned to &lt;code&gt;firstArg&lt;/code&gt;. Essentially, treat as &lt;code&gt;firstArg = arg;&lt;/code&gt;</source>
          <target state="translated">El argumento de funci&amp;oacute;n inicializa un par&amp;aacute;metro de &lt;code&gt;return&lt;/code&gt; , y ese par&amp;aacute;metro se asigna a &lt;code&gt;firstArg&lt;/code&gt; . Esencialmente, trate como &lt;code&gt;firstArg = arg;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="87a4aa72b8e4acaa8f362e2eba871dd25b95962b" translate="yes" xml:space="preserve">
          <source>Function attributes</source>
          <target state="translated">Atributos de la función</target>
        </trans-unit>
        <trans-unit id="a3518d2ba96341cb705a0844010da23ec63c4f60" translate="yes" xml:space="preserve">
          <source>Function attributes are emitted in the order as listed above.</source>
          <target state="translated">Los atributos de la función se emiten en el orden que se indica arriba.</target>
        </trans-unit>
        <trans-unit id="090cdc3abee08672ecc88627488c127b4dd88e47" translate="yes" xml:space="preserve">
          <source>Function bodies cannot be empty:</source>
          <target state="translated">Los cuerpos funcionales no pueden estar vacíos:</target>
        </trans-unit>
        <trans-unit id="5bfbcebae9458d0af9e37589048c8edd93acdcad" translate="yes" xml:space="preserve">
          <source>Function body</source>
          <target state="translated">Función del cuerpo</target>
        </trans-unit>
        <trans-unit id="daa6044eeb443eca769ad767c0b819da1d93de92" translate="yes" xml:space="preserve">
          <source>Function calls to these are generated by the compiler and inserted into the object code.</source>
          <target state="translated">Las llamadas a estas funciones son generadas por el compilador e insertadas en el código del objeto.</target>
        </trans-unit>
        <trans-unit id="dcd2bd5d9c9b442091f087f1d3ab7d165c7a6f01" translate="yes" xml:space="preserve">
          <source>Function contracts</source>
          <target state="translated">Contratos de función</target>
        </trans-unit>
        <trans-unit id="c89b9bb41c4c13c872e30f5eb0bb250a5c580801" translate="yes" xml:space="preserve">
          <source>Function declaration</source>
          <target state="translated">Declaración de la función</target>
        </trans-unit>
        <trans-unit id="60f82695f39f080d8446d9390fdbf10f4625d827" translate="yes" xml:space="preserve">
          <source>Function declarations annotated with the &lt;code&gt;@live&lt;/code&gt; attribute are checked for compliance with the Ownership/Borrowing rules. The checks are run after other semantic processing is complete. The checking does not influence code generation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd0e134160bc0255e9ac645522671a4ceac9664b" translate="yes" xml:space="preserve">
          <source>Function for starting to a stop watch time when the function is called and stopping it when its return value goes out of scope and is destroyed.</source>
          <target state="translated">Función para iniciar el tiempo de un cronómetro cuando se llama la función y detenerlo cuando su valor de retorno se sale del alcance y se destruye.</target>
        </trans-unit>
        <trans-unit id="aae2ba6220f8db51d41c8edbd64b6b01f43243fd" translate="yes" xml:space="preserve">
          <source>Function is a C-style variadic function, which uses &lt;code&gt;core.stdc.stdarg&lt;/code&gt;</source>
          <target state="translated">La funci&amp;oacute;n es una funci&amp;oacute;n variada de estilo C, que utiliza &lt;code&gt;core.stdc.stdarg&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="87d2f358ca186efbcb568c16e606003520afa9cd" translate="yes" xml:space="preserve">
          <source>Function is a D-style variadic function, which uses &lt;code&gt;__argptr&lt;/code&gt; and &lt;code&gt;__arguments&lt;/code&gt;.</source>
          <target state="translated">La funci&amp;oacute;n es una funci&amp;oacute;n variada de estilo D, que utiliza &lt;code&gt;__argptr&lt;/code&gt; y &lt;code&gt;__arguments&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d3435b54d43e95cebfb7003ed401ba2d6c58be33" translate="yes" xml:space="preserve">
          <source>Function is a typesafe variadic function.</source>
          <target state="translated">La función es una función variada-tipo.</target>
        </trans-unit>
        <trans-unit id="02eaa479f3aca73ffbcbe24d76bdcbcb5f2a00b8" translate="yes" xml:space="preserve">
          <source>Function is not variadic.</source>
          <target state="translated">La función no es variadísima.</target>
        </trans-unit>
        <trans-unit id="f04ac1afcdca4559aaa061f6f7593d6d3478e357" translate="yes" xml:space="preserve">
          <source>Function parameter &lt;code&gt;par&lt;/code&gt; is being initialized to &lt;code&gt;arg&lt;/code&gt;, and &lt;code&gt;par&lt;/code&gt; may escape. Detect if scoped values can escape this way. Print error messages when these are detected.</source>
          <target state="translated">El par&amp;aacute;metro de funci&amp;oacute;n &lt;code&gt;par&lt;/code&gt; se est&amp;aacute; inicializando en &lt;code&gt;arg&lt;/code&gt; , y el &lt;code&gt;par&lt;/code&gt; puede escapar. Detecta si los valores de &amp;aacute;mbito pueden escapar de esta manera. Imprime mensajes de error cuando se detectan.</target>
        </trans-unit>
        <trans-unit id="3029155acb4ac5fc232abd3463c11350cc2d960a" translate="yes" xml:space="preserve">
          <source>Function parameter declarations can have default values:</source>
          <target state="translated">Las declaraciones de los parámetros de la función pueden tener valores por defecto:</target>
        </trans-unit>
        <trans-unit id="f6a6b4c753629a0ad23be9a19a0def5754916cb7" translate="yes" xml:space="preserve">
          <source>Function parameters can be documented by listing them in a params section. Each line that starts with an identifier followed by an '=' starts a new parameter description. A description can span multiple lines.</source>
          <target state="translated">Los parámetros de la función pueden ser documentados enumerándolos en una sección de parámetros.Cada línea que comienza con un identificador seguido de un '=' inicia una nueva descripción del parámetro.Una descripción puede abarcar varias líneas.</target>
        </trans-unit>
        <trans-unit id="6678c5d32e09052e0172ebd3cea351dcf7ca2766" translate="yes" xml:space="preserve">
          <source>Function parameters: Pident identifier of parameter Ptype type of argument Pelem default value for argument Psym symbol corresponding to Pident when using the parameter list as a symbol table For template-parameter-list: Pident identifier of parameter Ptype if NULL, this is a type-parameter else the type for a parameter-declaration value argument Pelem default value for value argument Pdeftype default value for type-parameter Pptpl template-parameter-list for template-template-parameter Psym default value for template-template-parameter For template-arg-list: (actual arguments) Pident NULL Ptype type-name Pelem expression (either Ptype or Pelem is NULL) Psym SCtemplate for template-template-argument</source>
          <target state="translated">Parámetros de la función:Pident identificador del parámetro Ptype tipo de argumento Pelem valor por defecto para el argumento Psym símbolo correspondiente a Pident cuando se utiliza la lista de parámetros como tabla de símbolos Para la plantilla-parámetros-lista:Pident identificador del parámetro Ptype si es NULL,este es un tipo de parámetro,de lo contrario el tipo para un argumento de valor de declaración de parámetros Pelem valor por defecto para el argumento de valor Pdeftype valor por defecto para el tipo de parámetro Pptpl template-parameter-list para el template-template-parameter Psym valor por defecto para el template-template-parameter Para el template-arg-list:(argumentos reales)Pident NULL Ptype nombre de tipo expresión Pelem (Ptype o Pelem es NULL)Psym SC plantilla para plantilla-plantilla-argumento</target>
        </trans-unit>
        <trans-unit id="4e74811387b8309f2eba7069545da73ad882b5db" translate="yes" xml:space="preserve">
          <source>Function pointers can be passed to functions taking a delegate argument by passing them through the &lt;a href=&quot;https://dlang.org/phobos/std_functional.html#toDelegate&quot;&gt;&lt;code&gt;std.functional.toDelegate&lt;/code&gt;&lt;/a&gt; template, which converts any callable to a delegate without context.</source>
          <target state="translated">Los punteros de funci&amp;oacute;n se pueden pasar a funciones que toman un argumento delegado pas&amp;aacute;ndolas a trav&amp;eacute;s de la plantilla &lt;a href=&quot;https://dlang.org/phobos/std_functional.html#toDelegate&quot;&gt; &lt;code&gt;std.functional.toDelegate&lt;/code&gt; &lt;/a&gt; , que convierte cualquier invocable en un delegado sin contexto.</target>
        </trans-unit>
        <trans-unit id="2f4d971f1b9568ee68d3c3afd0afa4bb0664e45b" translate="yes" xml:space="preserve">
          <source>Function results are returned from &lt;code&gt;yieldForce&lt;/code&gt;, &lt;code&gt;spinForce&lt;/code&gt; and &lt;code&gt;workForce&lt;/code&gt; by ref. If &lt;code&gt;fun&lt;/code&gt; returns by ref, the reference will point to the returned reference of &lt;code&gt;fun&lt;/code&gt;. Otherwise it will point to a field in this struct.</source>
          <target state="translated">Los resultados de la funci&amp;oacute;n se devuelven de &lt;code&gt;yieldForce&lt;/code&gt; , &lt;code&gt;spinForce&lt;/code&gt; y &lt;code&gt;workForce&lt;/code&gt; por ref. Si la &lt;code&gt;fun&lt;/code&gt; regresa por referencia, la referencia apuntar&amp;aacute; a la referencia de &lt;code&gt;fun&lt;/code&gt; devuelta . De lo contrario, apuntar&amp;aacute; a un campo en esta estructura.</target>
        </trans-unit>
        <trans-unit id="c3097f849806cf699273164feb8e2d0ccfb12c15" translate="yes" xml:space="preserve">
          <source>Function return values are considered to be rvalues. This means they cannot be passed by reference to other functions.</source>
          <target state="translated">Los valores de retorno de la función se consideran valores r.Esto significa que no pueden ser pasados por referencia a otras funciones.</target>
        </trans-unit>
        <trans-unit id="c7004e7f868eeb59bcb8e6e80ff83ca5a6d46adf" translate="yes" xml:space="preserve">
          <source>Function return values not marked as &lt;code&gt;ref&lt;/code&gt; are considered to be rvalues. This means they cannot be passed by reference to other functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="828053ed1d877ebcde1ff06a5dea505b651e20d3" translate="yes" xml:space="preserve">
          <source>Function template type parameters that are to be implicitly deduced may not have specializations:</source>
          <target state="translated">Los parámetros del tipo de plantilla de funciones que deben deducirse implícitamente pueden no tener especializaciones:</target>
        </trans-unit>
        <trans-unit id="a7d00ef56bc1d2f06bd67eb8bc21de19e80c263d" translate="yes" xml:space="preserve">
          <source>Function templates can be explicitly instantiated with a !(</source>
          <target state="translated">Las plantillas de funciones pueden ser explícitamente instanciadas con un !(</target>
        </trans-unit>
        <trans-unit id="3b8df2ef7fc72848cf8d0bce3a9220b3a898f0b1" translate="yes" xml:space="preserve">
          <source>Function templates can have their return types deduced based on the &lt;a href=&quot;statement#ReturnStatement&quot;&gt;&lt;i&gt;ReturnStatement&lt;/i&gt;&lt;/a&gt;s in the function, just as with normal functions. See &lt;a href=&quot;https://dlang.org/function.html#auto-functions&quot;&gt;Auto Functions&lt;/a&gt;.</source>
          <target state="translated">Las plantillas de funci&amp;oacute;n pueden deducir sus tipos de retorno en funci&amp;oacute;n de los &lt;a href=&quot;statement#ReturnStatement&quot;&gt;&lt;i&gt;estados de retorno&lt;/i&gt;&lt;/a&gt; de la funci&amp;oacute;n, al igual que con las funciones normales. Ver &lt;a href=&quot;https://dlang.org/function.html#auto-functions&quot;&gt;Funciones autom&amp;aacute;ticas&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="55b6f95d2a2736a8bfaa71fcc12b1d0a3c85769f" translate="yes" xml:space="preserve">
          <source>Function that called &lt;code&gt;_d_HookTraceImpl&lt;/code&gt;</source>
          <target state="translated">Funci&amp;oacute;n que llam&amp;oacute; a &lt;code&gt;_d_HookTraceImpl&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8c7a2db7de16ccd53dc1b73193b31c814b7489e6" translate="yes" xml:space="preserve">
          <source>Function that does not take any parameters</source>
          <target state="translated">Función que no toma ningún parámetro</target>
        </trans-unit>
        <trans-unit id="85ff978df4b7d827c80c5b427bf2c4db1e2ed45d" translate="yes" xml:space="preserve">
          <source>Function that will be called instead of the internal progress display function. This function should be defined as the curl_progress_callback prototype defines.</source>
          <target state="translated">Función que se llamará en lugar de la función de visualización del progreso interno.Esta función debe definirse como define el prototipo curl_progress_callback.</target>
        </trans-unit>
        <trans-unit id="23533f8923b79f1dc08d42a47fdcce75663a40c0" translate="yes" xml:space="preserve">
          <source>Function that will be called to convert from UTF8 (instead of using the iconv calls in libcurl) Note that this is used only for SSL certificate processing</source>
          <target state="translated">Función que será llamada para convertir desde UTF8 (en lugar de usar las llamadas iconv en libcurl)Tenga en cuenta que esto se utiliza sólo para el procesamiento de certificados SSL</target>
        </trans-unit>
        <trans-unit id="9149aa5e3f56e9141da81bbd147711474255a324" translate="yes" xml:space="preserve">
          <source>Function that will be called to convert from the network encoding (instead of using the iconv calls in libcurl)</source>
          <target state="translated">Función que será llamada para convertir desde la codificación de la red (en lugar de usar las llamadas iconv en libcurl)</target>
        </trans-unit>
        <trans-unit id="cffc93dc9124a77261edd44618001f6b42f32854" translate="yes" xml:space="preserve">
          <source>Function that will be called to convert to the network encoding (instead of using the iconv calls in libcurl)</source>
          <target state="translated">Función que será llamada para convertir a la codificación de la red (en lugar de usar las llamadas iconv en libcurl)</target>
        </trans-unit>
        <trans-unit id="53a515cf174973bb65a87a5952e5c03252c9695d" translate="yes" xml:space="preserve">
          <source>Function that will be called to read the input (instead of fread). The parameters will use fread() syntax, make sure to follow them.</source>
          <target state="translated">Función que se llamará para leer la entrada (en lugar de fread).Los parámetros usarán la sintaxis fread(),asegúrate de seguirlos.</target>
        </trans-unit>
        <trans-unit id="babcbdb82bd11f7164bb99107054b2a484fb1682" translate="yes" xml:space="preserve">
          <source>Function that will be called to store headers (instead of fwrite). The parameters will use fwrite() syntax, make sure to follow them.</source>
          <target state="translated">Función que se llamará para almacenar los encabezados (en lugar de escribir).Los parámetros utilizarán la sintaxis fwrite(),asegúrate de seguirlos.</target>
        </trans-unit>
        <trans-unit id="233d456dba50e927381d10867821a9bfe1f04637" translate="yes" xml:space="preserve">
          <source>Function that will be called to store the output (instead of fwrite). The parameters will use fwrite() syntax, make sure to follow them.</source>
          <target state="translated">Función que se llamará para almacenar la salida (en lugar de escribir).Los parámetros utilizarán la sintaxis fwrite(),asegúrate de seguirlos.</target>
        </trans-unit>
        <trans-unit id="e221c711ff99df59e968c914d1979c6a0ad3ee61" translate="yes" xml:space="preserve">
          <source>Function to apply to each element of range</source>
          <target state="translated">Función a aplicar a cada elemento del rango</target>
        </trans-unit>
        <trans-unit id="b844384b07c0f5d9caaa10fd46cb397be8c61ded" translate="yes" xml:space="preserve">
          <source>Function to be analyzed</source>
          <target state="translated">Función a ser analizada</target>
        </trans-unit>
        <trans-unit id="b78a95743121775c17568fcabf9200b6a902bef0" translate="yes" xml:space="preserve">
          <source>Function to check, followed by a variadic number of function attributes as strings</source>
          <target state="translated">Función a comprobar,seguida de un número variado de atributos de función como cadenas</target>
        </trans-unit>
        <trans-unit id="aefc954f08bca71e2e39ec093b9e23048430f8af" translate="yes" xml:space="preserve">
          <source>Function traits</source>
          <target state="translated">Características de la función</target>
        </trans-unit>
        <trans-unit id="2e40e24355bdf1170d50a1d6ead524ba20679656" translate="yes" xml:space="preserve">
          <source>Function/Delegate literal</source>
          <target state="translated">Función/Delegado literal</target>
        </trans-unit>
        <trans-unit id="8ebd95c8f1ce3b6070bf21aaa16655aa94a89c6b" translate="yes" xml:space="preserve">
          <source>FunctionLiteral</source>
          <target state="translated">FunctionLiteral</target>
        </trans-unit>
        <trans-unit id="a3d450d75bfa53b89f98aa6dae8be36130018cbb" translate="yes" xml:space="preserve">
          <source>FunctionLiteralBody</source>
          <target state="translated">FunctionLiteralBody</target>
        </trans-unit>
        <trans-unit id="79fde2ac8490ff2b99ac9c9890e046fdff6e3659" translate="yes" xml:space="preserve">
          <source>Functionality</source>
          <target state="translated">Functionality</target>
        </trans-unit>
        <trans-unit id="a03b0f45370db4b978978138169257e95bfff4b6" translate="yes" xml:space="preserve">
          <source>Functionality for processing subsequent matches of global regexes via range interface:</source>
          <target state="translated">Funcionalidad para procesar coincidencias posteriores de regexes globales a través de la interfaz de alcance:</target>
        </trans-unit>
        <trans-unit id="2b961dea1dc0c60ddf9a2c8e9d090f6f7d082483" translate="yes" xml:space="preserve">
          <source>Functions</source>
          <target state="translated">Functions</target>
        </trans-unit>
        <trans-unit id="5687015bfcd81aa78a69312ebd359e3273b183cc" translate="yes" xml:space="preserve">
          <source>Functions Without Bodies</source>
          <target state="translated">Funciones sin cuerpos</target>
        </trans-unit>
        <trans-unit id="bba90169e567d9c68b308641b7cc0ffd3300695b" translate="yes" xml:space="preserve">
          <source>Functions and delegates declared at module scope are zero-initialized by default. However both can be initialized to any function pointer (including a function literal). For delegates, the context pointer &lt;code&gt;.ptr&lt;/code&gt; is initialized to null.</source>
          <target state="translated">Las funciones y delegados declarados en el alcance del m&amp;oacute;dulo est&amp;aacute;n inicializados en cero de forma predeterminada. Sin embargo, ambos se pueden inicializar en cualquier puntero de funci&amp;oacute;n (incluido un literal de funci&amp;oacute;n). Para los delegados, el puntero de contexto &lt;code&gt;.ptr&lt;/code&gt; se inicializa a nulo.</target>
        </trans-unit>
        <trans-unit id="b9443a12c52c106d6f6936a59aa4d60507110962" translate="yes" xml:space="preserve">
          <source>Functions and types that manipulate built-in arrays and associative arrays.</source>
          <target state="translated">Funciones y tipos que manipulan las matrices incorporadas y las matrices asociativas.</target>
        </trans-unit>
        <trans-unit id="1fcc64ae1b70c55efc217545c066c056d0513c2e" translate="yes" xml:space="preserve">
          <source>Functions and variables specific to interface with extern(C++) ABI.</source>
          <target state="translated">Funciones y variables específicas para interactuar con la ABI externa (C++).</target>
        </trans-unit>
        <trans-unit id="fd8851f8cc2c81bc5719fd2159093b00e7797298" translate="yes" xml:space="preserve">
          <source>Functions and variables specific to interfacing with extern(C) ABI.</source>
          <target state="translated">Funciones y variables específicas para interactuar con el ABI externo (C).</target>
        </trans-unit>
        <trans-unit id="7f5a53c5e8af7e00f9774b9397648dd6e21fd328" translate="yes" xml:space="preserve">
          <source>Functions are never inlined.</source>
          <target state="translated">Las funciones nunca están alineadas.</target>
        </trans-unit>
        <trans-unit id="4713c57b4dfbd0d2f4ef062d96b18f64a40c55bc" translate="yes" xml:space="preserve">
          <source>Functions are overloaded based on how well the arguments to a function can match up with the parameters. The function with the</source>
          <target state="translated">Las funciones se sobrecargan en función de lo bien que los argumentos de una función pueden coincidir con los parámetros.La función con el</target>
        </trans-unit>
        <trans-unit id="a7f661a74f02a377df2091c16fea97336e40806f" translate="yes" xml:space="preserve">
          <source>Functions as Array Properties</source>
          <target state="translated">Funciona como propiedades de la matriz</target>
        </trans-unit>
        <trans-unit id="e47c1a27abfc73a2fed656e28cc0a5aa9ab7a938" translate="yes" xml:space="preserve">
          <source>Functions can also be declared as &lt;code&gt;ref&lt;/code&gt;, meaning their return value is passed by reference:</source>
          <target state="translated">Las funciones tambi&amp;eacute;n se pueden declarar como &lt;code&gt;ref&lt;/code&gt; , lo que significa que su valor de retorno se pasa por referencia:</target>
        </trans-unit>
        <trans-unit id="fc9e94fc77751f7a520ef1950989f7a0e1c7828b" translate="yes" xml:space="preserve">
          <source>Functions can be nested within member functions:</source>
          <target state="translated">Las funciones pueden anidarse dentro de las funciones de los miembros:</target>
        </trans-unit>
        <trans-unit id="7e69a10d10797495520ab6d16edfbd50e9742682" translate="yes" xml:space="preserve">
          <source>Functions declared at the same scope overload against each other, and are called an</source>
          <target state="translated">Las funciones declaradas en el mismo ámbito se sobrecargan unas a otras,y se denominan</target>
        </trans-unit>
        <trans-unit id="c566e2fda222bdb6e383ab5ff3c3433df764aa7f" translate="yes" xml:space="preserve">
          <source>Functions defined with non-D linkage cannot be overloaded. This is because the name mangling might not take the parameter types into account.</source>
          <target state="translated">Las funciones definidas con el enlace no D no pueden ser sobrecargadas.Esto se debe a que la manipulación de nombres podría no tener en cuenta los tipos de parámetros.</target>
        </trans-unit>
        <trans-unit id="988f1aa7ff1ca669378942571abfebb6288e682f" translate="yes" xml:space="preserve">
          <source>Functions executed via CTFE can give different results from run time in the following scenarios:</source>
          <target state="translated">Las funciones ejecutadas a través de la CTFE pueden dar resultados diferentes del tiempo de ejecución en los siguientes escenarios:</target>
        </trans-unit>
        <trans-unit id="419aab857f4bb8c6136ba89e91fb3714fd5cb75f" translate="yes" xml:space="preserve">
          <source>Functions for starting and interacting with other processes, and for working with the current process' execution environment.</source>
          <target state="translated">Funciones para iniciar e interactuar con otros procesos,y para trabajar con el entorno de ejecución del proceso actual.</target>
        </trans-unit>
        <trans-unit id="50b5e5b232695481bdd4d283f8038b839689e2f6" translate="yes" xml:space="preserve">
          <source>Functions marked as &lt;code&gt;final&lt;/code&gt; may not be overridden in a derived class, unless they are also &lt;code&gt;private&lt;/code&gt;. For example:</source>
          <target state="translated">Las funciones marcadas como &lt;code&gt;final&lt;/code&gt; es no pueden anularse en una clase derivada, a menos que tambi&amp;eacute;n sean &lt;code&gt;private&lt;/code&gt; . Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="c40c48a24043c849a46e19c95c7d6f6bb43d3af4" translate="yes" xml:space="preserve">
          <source>Functions may be nested within other functions:</source>
          <target state="translated">Las funciones pueden anidarse dentro de otras funciones:</target>
        </trans-unit>
        <trans-unit id="ab842017af8570439bf6ba4b27c54b5312a024b2" translate="yes" xml:space="preserve">
          <source>Functions nested inside safe functions default to being safe functions.</source>
          <target state="translated">Las funciones anidadas dentro de las funciones seguras están predeterminadas como funciones seguras.</target>
        </trans-unit>
        <trans-unit id="e7c3eeba379274331a0b9c881db32559bea140a9" translate="yes" xml:space="preserve">
          <source>Functions taking a variable number of arguments are called variadic functions. A variadic function can take one of three forms:</source>
          <target state="translated">Las funciones que toman un número variable de argumentos se llaman funciones variadas.Una función variádica puede tomar una de tres formas:</target>
        </trans-unit>
        <trans-unit id="2f8dcbed7cf260c12b9f8f40b2d592ffce349a24" translate="yes" xml:space="preserve">
          <source>Functions that deal with mutable, const, or immutable types with equanimity often need to transmit their type to the return value:</source>
          <target state="translated">Las funciones que se ocupan de tipos mutables,constantes o inmutables con ecuanimidad a menudo necesitan transmitir su tipo al valor de retorno:</target>
        </trans-unit>
        <trans-unit id="8cc0d5a6974c142e0e42bd69101ee5cdc41acf88" translate="yes" xml:space="preserve">
          <source>Functions that manipulate other functions.</source>
          <target state="translated">Funciones que manipulan otras funciones.</target>
        </trans-unit>
        <trans-unit id="d4e8675aa25a2bddb84bf8fd8b778e29fe3cf68c" translate="yes" xml:space="preserve">
          <source>Functions that meet these requirements may be &lt;a href=&quot;#safe-functions&quot;&gt;&lt;code&gt;@safe&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#trusted-functions&quot;&gt;&lt;code&gt;@trusted&lt;/code&gt;&lt;/a&gt;. Function that do not meet these requirements can only be &lt;a href=&quot;#system-functions&quot;&gt;&lt;code&gt;@system&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9283433eaa6818c4d57146ef0bb556e3d0ffc12f" translate="yes" xml:space="preserve">
          <source>Functions which are both portable and free of global side-effects can be executed at compile time. In certain contexts, such compile time execution is guaranteed. It is called Compile Time Function Execution (CTFE) then. The contexts that trigger CTFE are:</source>
          <target state="translated">Las funciones que son tanto portátiles como libres de efectos secundarios globales pueden ser ejecutadas en tiempo de compilación.En ciertos contextos,tal ejecución en tiempo de compilación está garantizada.Se llama entonces Ejecución de la Función en Tiempo de Compilación (CTFE).Los contextos que desencadenan la CTFE son:</target>
        </trans-unit>
        <trans-unit id="670fb705837790471a38cafc20ec80fbf30c8bf6" translate="yes" xml:space="preserve">
          <source>Functions which operate on ASCII characters.</source>
          <target state="translated">Funciones que funcionan con caracteres ASCII.</target>
        </trans-unit>
        <trans-unit id="7c0d365cb94dab42778d857cad063abfc3d8f3b6" translate="yes" xml:space="preserve">
          <source>Functions with &lt;code&gt;Objective-C&lt;/code&gt; linkage has an additional hidden, unnamed, parameter which is the selector it was called with.</source>
          <target state="translated">Las funciones con enlace &lt;code&gt;Objective-C&lt;/code&gt; tienen un par&amp;aacute;metro adicional oculto, sin nombre, que es el selector con el que se llam&amp;oacute;.</target>
        </trans-unit>
        <trans-unit id="2f12c7ced7f8f22b29fa0338695211d8c0538660" translate="yes" xml:space="preserve">
          <source>Functions with &lt;code&gt;Objective-C&lt;/code&gt; linkage have an additional hidden, unnamed, parameter which is the selector it was called with.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffbb7352ab0b0a6abe4eb4d50fb47e8061479506" translate="yes" xml:space="preserve">
          <source>Functions with non-D linkage cannot be virtual and hence cannot be overridden.</source>
          <target state="translated">Las funciones con enlace no D no pueden ser virtuales y por lo tanto no pueden ser anuladas.</target>
        </trans-unit>
        <trans-unit id="eaad94952abd8178c9c878e428d9910f2e427164" translate="yes" xml:space="preserve">
          <source>Functions with the &lt;code&gt;@live&lt;/code&gt; attribute enable diagnosing these sorts of errors by tracking the status of owner pointers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2adb6747d6f26e87d983ed577d7da81919733d7b" translate="yes" xml:space="preserve">
          <source>Functions without bodies:</source>
          <target state="translated">Funciona sin cuerpos:</target>
        </trans-unit>
        <trans-unit id="d783b16a7b27b910940b783d5fcc870c6c683d47" translate="yes" xml:space="preserve">
          <source>Fundamental Unicode algorithms and data structures.</source>
          <target state="translated">Algoritmos y estructuras de datos Unicode fundamentales.</target>
        </trans-unit>
        <trans-unit id="ba469f1bc17cb15fca5f5581188a0b34ac4471eb" translate="yes" xml:space="preserve">
          <source>Furthermore, even with orderable types, the order relation may not be linear. For example, one may define an ordering on sets via the subset relation, such that &lt;code&gt;x &amp;lt; y&lt;/code&gt; is true if &lt;code&gt;x&lt;/code&gt; is a (strict) subset of &lt;code&gt;y&lt;/code&gt;. If &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; are disjoint sets, then neither &lt;code&gt;x &amp;lt; y&lt;/code&gt; nor &lt;code&gt;y &amp;lt; x&lt;/code&gt; holds, but that does not imply that &lt;code&gt;x == y&lt;/code&gt;. Thus, it is insufficient to determine equality purely based on &lt;code&gt;opCmp&lt;/code&gt; alone. For this reason, &lt;code&gt;opCmp&lt;/code&gt; is only used for the inequality operators &lt;code&gt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;lt;=&lt;/code&gt;, &lt;code&gt;&amp;gt;=&lt;/code&gt;, and &lt;code&gt;&amp;gt;&lt;/code&gt;. The equality operators &lt;code&gt;==&lt;/code&gt; and &lt;code&gt;!=&lt;/code&gt; always employ &lt;code&gt;opEquals&lt;/code&gt; instead.</source>
          <target state="translated">Adem&amp;aacute;s, incluso con tipos ordenables, la relaci&amp;oacute;n de orden puede no ser lineal. Por ejemplo, uno puede definir un orden en los conjuntos a trav&amp;eacute;s de la relaci&amp;oacute;n de subconjunto, de modo que &lt;code&gt;x &amp;lt; y&lt;/code&gt; sea ​​verdadero si &lt;code&gt;x&lt;/code&gt; es un subconjunto (estricto) de &lt;code&gt;y&lt;/code&gt; . Si &lt;code&gt;x&lt;/code&gt; e &lt;code&gt;y&lt;/code&gt; son conjuntos disjuntos, ni &lt;code&gt;x &amp;lt; y&lt;/code&gt; ni &lt;code&gt;y &amp;lt; x&lt;/code&gt; mantienen, pero eso no implica que &lt;code&gt;x == y&lt;/code&gt; . Por lo tanto, es insuficiente para determinar la igualdad basada &amp;uacute;nicamente en &lt;code&gt;opCmp&lt;/code&gt; solo. Por esta raz&amp;oacute;n, &lt;code&gt;opCmp&lt;/code&gt; solo se usa para los operadores de desigualdad &lt;code&gt;&amp;lt;&lt;/code&gt; , &lt;code&gt;&amp;lt;=&lt;/code&gt; , &lt;code&gt;&amp;gt;=&lt;/code&gt; y &lt;code&gt;&amp;gt;&lt;/code&gt; . Los operadores de igualdad &lt;code&gt;==&lt;/code&gt; y &lt;code&gt;!=&lt;/code&gt; Siempre emplean &lt;code&gt;opEquals&lt;/code&gt; en su lugar.</target>
        </trans-unit>
        <trans-unit id="869bc7df187eb57c1861571c27bf80367e22db67" translate="yes" xml:space="preserve">
          <source>Furthermore, predefined version identifiers from this list cannot be set from the command line or from version statements. (This prevents things like both &lt;code&gt;Windows&lt;/code&gt; and &lt;code&gt;linux&lt;/code&gt; being simultaneously set.)</source>
          <target state="translated">Adem&amp;aacute;s, los identificadores de versi&amp;oacute;n predefinidos de esta lista no se pueden establecer desde la l&amp;iacute;nea de comandos o desde las declaraciones de versi&amp;oacute;n. (Esto evita que cosas como &lt;code&gt;Windows&lt;/code&gt; y &lt;code&gt;linux&lt;/code&gt; se configuren simult&amp;aacute;neamente).</target>
        </trans-unit>
        <trans-unit id="2b04009b8ca8039e0507f25a9f0361986b70a3e6" translate="yes" xml:space="preserve">
          <source>Future policies may offer a more even balance between reader and writer precedence.</source>
          <target state="translated">Las políticas futuras pueden ofrecer un equilibrio más equilibrado entre la precedencia de los lectores y los escritores.</target>
        </trans-unit>
        <trans-unit id="99d254d35351117c9cff18872b82ba6d91c00e60" translate="yes" xml:space="preserve">
          <source>G &lt;code&gt;n&lt;/code&gt;</source>
          <target state="translated">G &lt;code&gt;n&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="99a3e18460e703b6b52b26b4155c66c3e3ba24bc" translate="yes" xml:space="preserve">
          <source>GC</source>
          <target state="translated">GC</target>
        </trans-unit>
        <trans-unit id="227e2edf0447cd04a773c3b823f1c89795158178" translate="yes" xml:space="preserve">
          <source>GC &lt;strong id=&quot;createGCInstance&quot;&gt;createGCInstance&lt;/strong&gt;(string name);</source>
          <target state="translated">GC &lt;strong id=&quot;createGCInstance&quot;&gt;createGCInstance&lt;/strong&gt; (nombre de cadena);</target>
        </trans-unit>
        <trans-unit id="17686e6502ad0f3cdaf4206e0191cbc522cc8283" translate="yes" xml:space="preserve">
          <source>GC FAQ</source>
          <target state="translated">GC FAQ</target>
        </trans-unit>
        <trans-unit id="2715953d0812423734ebffeea6a105ce46d2c5b2" translate="yes" xml:space="preserve">
          <source>GC allocated string</source>
          <target state="translated">Cadena asignada de GC</target>
        </trans-unit>
        <trans-unit id="8b2c6daf9a150d506a85e85cb9bcb053667888f2" translate="yes" xml:space="preserve">
          <source>GC allocated string with spaces replaced with tabs; use &lt;a href=&quot;#entabber&quot;&gt;&lt;code&gt;entabber&lt;/code&gt;&lt;/a&gt; to not allocate.</source>
          <target state="translated">Cadena asignada por GC con espacios reemplazados por pesta&amp;ntilde;as; use &lt;a href=&quot;#entabber&quot;&gt; &lt;code&gt;entabber&lt;/code&gt; &lt;/a&gt; para no asignar.</target>
        </trans-unit>
        <trans-unit id="86e1b687d8486a9dcb7b4165bc8e5226d854f2c7" translate="yes" xml:space="preserve">
          <source>GC allocated string with tabs replaced with spaces</source>
          <target state="translated">GC asignó una cadena con pestañas reemplazadas por espacios</target>
        </trans-unit>
        <trans-unit id="6b9746104b4c3bc7be22e5b6d74741bddee5a6bf" translate="yes" xml:space="preserve">
          <source>GC implementations are added to a registry that allows to supply more implementations by just linking them into the binary. To do so add a function that is executed before the D runtime initialization using &lt;code&gt;pragma(crt_constructor)&lt;/code&gt;:</source>
          <target state="translated">Las implementaciones de GC se agregan a un registro que permite suministrar m&amp;aacute;s implementaciones simplemente vincul&amp;aacute;ndolas al binario. Para hacerlo, agregue una funci&amp;oacute;n que se ejecute antes de la inicializaci&amp;oacute;n del tiempo de ejecuci&amp;oacute;n D usando &lt;code&gt;pragma(crt_constructor)&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="5951ff6858fe229e78c3aef61db342f3d5f757a1" translate="yes" xml:space="preserve">
          <source>GC scan hook, called FOR each thread. Can be used to scan additional thread local memory.</source>
          <target state="translated">Gancho de escaneo GC,llamado para cada hilo.Puede ser usado para escanear la memoria local de los hilos adicionales.</target>
        </trans-unit>
        <trans-unit id="44da27f9ddec555cbd5fcd60022e2b6c8808bbdc" translate="yes" xml:space="preserve">
          <source>GC sweep hook, called FOR each thread. Can be used to free additional thread local memory or associated data structures. Note that only memory allocated from the GC can have marks.</source>
          <target state="translated">Gancho de barrido GC,llamado para cada hilo.Puede ser usado para liberar memoria local de hilos adicionales o estructuras de datos asociadas.Tenga en cuenta que sólo la memoria asignada desde el GC puede tener marcas.</target>
        </trans-unit>
        <trans-unit id="152e90dd32518be928b899f58b1e3835f65ca8cc" translate="yes" xml:space="preserve">
          <source>GCFactory &lt;code&gt;factory&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;factory&lt;/code&gt; GCFactory</target>
        </trans-unit>
        <trans-unit id="04a69c000934b632336629d0d827590961013d5f" translate="yes" xml:space="preserve">
          <source>GDC (GNU D Compiler) is the compiler</source>
          <target state="translated">GDC (GNU D Compiler)es el compilador</target>
        </trans-unit>
        <trans-unit id="c6b9fdbe9b835ce607d5f9465603dc2e9dd09b8c" translate="yes" xml:space="preserve">
          <source>GNU D Compiler (GDC)</source>
          <target state="translated">Compilador D de GNU (GDC)</target>
        </trans-unit>
        <trans-unit id="1ced0cf23647bda25b46395cd7423d5899e8cec5" translate="yes" xml:space="preserve">
          <source>GNU Hurd</source>
          <target state="translated">GNU Hurd</target>
        </trans-unit>
        <trans-unit id="c9744a883d88a359c771c7c407727c811697e7d9" translate="yes" xml:space="preserve">
          <source>GSS-Negotiate</source>
          <target state="translated">GSS-Negotiate</target>
        </trans-unit>
        <trans-unit id="649101d4277d8226d1453ed4ac0ae23fef3f6651" translate="yes" xml:space="preserve">
          <source>GapWeightedSimilarityIncremental!(R, F) &lt;strong id=&quot;gapWeightedSimilarityIncremental&quot;&gt;gapWeightedSimilarityIncremental&lt;/strong&gt;(R, F)(R r1, R r2, F penalty);</source>
          <target state="translated">GapWeightedSimilarityIncremental! (R, F) &lt;strong id=&quot;gapWeightedSimilarityIncremental&quot;&gt;gapWeightedSimilarityIncremental&lt;/strong&gt; (R, F) (R r1, R r2, F pena);</target>
        </trans-unit>
        <trans-unit id="5b32b8542e4c8854b05455c0b114c2bdced713ad" translate="yes" xml:space="preserve">
          <source>Garbage Collection</source>
          <target state="translated">Recolección de basura</target>
        </trans-unit>
        <trans-unit id="b68927a1fc8d1a3e9f2d3afdf28381f11e58bc69" translate="yes" xml:space="preserve">
          <source>Garbage Collection: Algorithms for Automatic Dynamic Memory Management</source>
          <target state="translated">Recolección de basura:Algoritmos para la gestión automática de la memoria dinámica</target>
        </trans-unit>
        <trans-unit id="26ed33deae58e27843afa7f067144cf4cc6aa56f" translate="yes" xml:space="preserve">
          <source>Garbage collected programs are faster to develop and debug, because there's no need for developing, debugging, testing, or maintaining the explicit deallocation code.</source>
          <target state="translated">Los programas recolectados de basura son más rápidos de desarrollar y depurar,porque no hay necesidad de desarrollar,depurar,probar o mantener el código explícito de distribución.</target>
        </trans-unit>
        <trans-unit id="b5b34cabae6ba38a27f9919e85bfc06a08059602" translate="yes" xml:space="preserve">
          <source>Garbage collected programs are often faster. This is counterintuitive, but the reasons are:</source>
          <target state="translated">Los programas de recolección de basura suelen ser más rápidos.Esto es contrario a la intuición,pero las razones son:</target>
        </trans-unit>
        <trans-unit id="a8b92a6daa02321044a81fa8b11e153716774a33" translate="yes" xml:space="preserve">
          <source>Garbage collected programs do not suffer from gradual deterioration due to an accumulation of memory leaks.</source>
          <target state="translated">Los programas de recolección de basura no sufren un deterioro gradual debido a una acumulación de fugas de memoria.</target>
        </trans-unit>
        <trans-unit id="7b3b619bb8bd26c9ff456e8cbc3e5bc6b3b1d018" translate="yes" xml:space="preserve">
          <source>Garbage collected programs have fewer hard-to-find pointer bugs. This is because there are no dangling references to freed memory. There is no code to explicitly manage memory, hence no bugs in such code.</source>
          <target state="translated">Los programas de recolección de basura tienen menos errores de puntero difíciles de encontrar.Esto se debe a que no hay referencias colgantes a la memoria liberada.No hay código para manejar explícitamente la memoria,por lo tanto no hay errores en dicho código.</target>
        </trans-unit>
        <trans-unit id="6274199ad9ef2c79ed1df932fffcb7da577e7439" translate="yes" xml:space="preserve">
          <source>Garbage collection doesn't solve every memory deallocation problem. For example, if a pointer to a large data structure is kept, the garbage collector cannot reclaim it, even if it is never referred to again. To eliminate this problem, it is good practice to set a reference or pointer to an object to null when no longer needed.</source>
          <target state="translated">La recolección de basura no resuelve todos los problemas de distribución de la memoria.Por ejemplo,si se mantiene un puntero a una gran estructura de datos,el recolector de basura no puede reclamarlo,incluso si nunca se vuelve a referir a él.Para eliminar este problema,es una buena práctica establecer una referencia o un puntero a un objeto para que se anule cuando ya no se necesite.</target>
        </trans-unit>
        <trans-unit id="2a483157166b15cc6add50950e71104545209b12" translate="yes" xml:space="preserve">
          <source>Garbage collection is not a panacea. There are some downsides:</source>
          <target state="translated">La recogida de basura no es la panacea.Hay algunas desventajas:</target>
        </trans-unit>
        <trans-unit id="bdc8494b0a1f3be26c109010c1300b5540a63f86" translate="yes" xml:space="preserve">
          <source>Garbage collection kicks in only when memory gets tight. When memory is not tight, the program runs at full speed and does not spend any time tracing and freeing memory.</source>
          <target state="translated">La recogida de basura sólo se activa cuando la memoria se estrecha.Cuando la memoria no está apretada,el programa se ejecuta a toda velocidad y no pasa ningún tiempo rastreando y liberando la memoria.</target>
        </trans-unit>
        <trans-unit id="43e630068e8d3af90d5baf5c490d09a820b5fe43" translate="yes" xml:space="preserve">
          <source>Garbage collection should be implemented as a basic operating system kernel service. But since it is not, garbage collecting programs must carry around with them the garbage collection implementation. While this can be a shared library, it is still there.</source>
          <target state="translated">La recolección de basura debe implementarse como un servicio básico del núcleo del sistema operativo.Pero como no lo es,los programas de recolección de basura deben llevar consigo la implementación de la recolección de basura.Aunque esta puede ser una biblioteca compartida,sigue estando ahí.</target>
        </trans-unit>
        <trans-unit id="8de09af360c7bfc02cd9b07759c0be1a92997bf1" translate="yes" xml:space="preserve">
          <source>Garbage collectors can keep around some memory that an explicit deallocator would not.</source>
          <target state="translated">Los recolectores de basura pueden tener un recuerdo que un localizador explícito no tendría.</target>
        </trans-unit>
        <trans-unit id="52f128a6c5d8578ad64f58e212419d6613dc978b" translate="yes" xml:space="preserve">
          <source>Garbage collectors reclaim unused memory, therefore they do not suffer from &quot;memory leaks&quot; which can cause long running applications to gradually consume more and more memory until they bring down the system. GC programs have longer term stability.</source>
          <target state="translated">Los recolectores de basura recuperan la memoria no utilizada,por lo tanto no sufren de &quot;fugas de memoria&quot; que pueden causar que las aplicaciones que se ejecutan durante mucho tiempo consuman gradualmente más y más memoria hasta que derriben el sistema.Los programas de GC tienen una estabilidad a largo plazo.</target>
        </trans-unit>
        <trans-unit id="5929f6c7d4d9ef8bac1c480f80dfd125a208b5f6" translate="yes" xml:space="preserve">
          <source>Gateway to Gateway Protocol</source>
          <target state="translated">Protocolo de puerta a puerta</target>
        </trans-unit>
        <trans-unit id="6b850d9a8cc2ef5b85b6581a88258447107ac8f9" translate="yes" xml:space="preserve">
          <source>Gateway to Gateway Protocol level</source>
          <target state="translated">Nivel de protocolo de puerta a puerta</target>
        </trans-unit>
        <trans-unit id="8e56a55c1f12981e7b0c87a44da833cae0277f14" translate="yes" xml:space="preserve">
          <source>Gcc Cpp runtime</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0db25c1007f1ac431f102d1b6f3db7e823e1c1d" translate="yes" xml:space="preserve">
          <source>GccAsmStatement &lt;code&gt;s&lt;/code&gt;</source>
          <target state="translated">GccAsmStatement &lt;code&gt;s&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9239ee2cda84eca4c3440e2a7b50148af67da3d4" translate="yes" xml:space="preserve">
          <source>General</source>
          <target state="translated">General</target>
        </trans-unit>
        <trans-unit id="cc2b80e244c5b3f85b819f8e001f39a8b1778b1c" translate="yes" xml:space="preserve">
          <source>General Punctuation</source>
          <target state="translated">Puntuación general</target>
        </trans-unit>
        <trans-unit id="0c7eb0b3402889bd567c0d3af8902acae19e04ce" translate="yes" xml:space="preserve">
          <source>General Types</source>
          <target state="translated">Tipos generales</target>
        </trans-unit>
        <trans-unit id="fd7aec0ee16d41be57526539a4c6ef8ef63c34e9" translate="yes" xml:space="preserve">
          <source>General case =&amp;gt; symmetric calls to method opEquals</source>
          <target state="translated">Caso general =&amp;gt; llamadas sim&amp;eacute;tricas al m&amp;eacute;todo opEquals</target>
        </trans-unit>
        <trans-unit id="2def4e3aff28a0804ab7417604344f41584fcca9" translate="yes" xml:space="preserve">
          <source>General category sets listed below are only accessible with the &lt;a href=&quot;#unicode&quot;&gt;&lt;code&gt;unicode&lt;/code&gt;&lt;/a&gt; shorthand accessor.</source>
          <target state="translated">Los conjuntos de categor&amp;iacute;as generales que se enumeran a continuaci&amp;oacute;n solo son accesibles con el &lt;a href=&quot;#unicode&quot;&gt; &lt;code&gt;unicode&lt;/code&gt; &lt;/a&gt; abreviado Unicode .</target>
        </trans-unit>
        <trans-unit id="2083d118900999f8d32dc5f2e8254d3f52ea6bf1" translate="yes" xml:space="preserve">
          <source>General use synchronization semaphore.</source>
          <target state="translated">Semáforo de sincronización de uso general.</target>
        </trans-unit>
        <trans-unit id="15c16d502337718b40d0beb9afa9790ccdf94859" translate="yes" xml:space="preserve">
          <source>Generally useful building blocks for customized normalization: &lt;a href=&quot;#combiningClass&quot;&gt;&lt;code&gt;combiningClass&lt;/code&gt;&lt;/a&gt; for querying combining class and &lt;a href=&quot;#allowedIn&quot;&gt;&lt;code&gt;allowedIn&lt;/code&gt;&lt;/a&gt; for testing the Quick_Check property of a given normalization form.</source>
          <target state="translated">Bloques de construcci&amp;oacute;n en general, &amp;uacute;tiles para la normalizaci&amp;oacute;n personalizado: &lt;a href=&quot;#combiningClass&quot;&gt; &lt;code&gt;combiningClass&lt;/code&gt; &lt;/a&gt; para consultar la combinaci&amp;oacute;n de clase y &lt;a href=&quot;#allowedIn&quot;&gt; &lt;code&gt;allowedIn&lt;/code&gt; &lt;/a&gt; para probar la propiedad Quick_Check de una forma de normalizaci&amp;oacute;n dado.</target>
        </trans-unit>
        <trans-unit id="9641d9bcb23b576cc813cade93d2589aaa993fe5" translate="yes" xml:space="preserve">
          <source>Generally, the &lt;code&gt;stable&lt;/code&gt; ordering strategy may be more costly in time and/or space than the other two because it imposes additional constraints. Similarly, &lt;code&gt;semistable&lt;/code&gt; may be costlier than &lt;code&gt;unstable&lt;/code&gt;. As (semi-)stability is not needed very often, the ordering algorithms in this module parameterized by &lt;code&gt;SwapStrategy&lt;/code&gt; all choose &lt;code&gt;SwapStrategy.unstable&lt;/code&gt; as the default.</source>
          <target state="translated">En general, la estrategia de pedido &lt;code&gt;stable&lt;/code&gt; puede ser m&amp;aacute;s costosa en tiempo y / o espacio que las otras dos porque impone restricciones adicionales. Del mismo modo, &lt;code&gt;semistable&lt;/code&gt; puede ser m&amp;aacute;s costoso que &lt;code&gt;unstable&lt;/code&gt; . Como la (semi) estabilidad no se necesita con mucha frecuencia, los algoritmos de ordenamiento en este m&amp;oacute;dulo parametrizados por &lt;code&gt;SwapStrategy&lt;/code&gt; todos eligen &lt;code&gt;SwapStrategy.unstable&lt;/code&gt; como predeterminado.</target>
        </trans-unit>
        <trans-unit id="05d74eaaa124507aed1ad66047271caa648813e4" translate="yes" xml:space="preserve">
          <source>Generally, the &lt;code&gt;std&lt;/code&gt; namespace is used for the main modules in the Phobos standard library. The &lt;code&gt;etc&lt;/code&gt; namespace is used for external C/C++ library bindings. The &lt;code&gt;core&lt;/code&gt; namespace is used for low-level D runtime functions.</source>
          <target state="translated">En general, el &lt;code&gt;std&lt;/code&gt; nombres est&amp;aacute;ndar se utiliza para los m&amp;oacute;dulos principales en la biblioteca est&amp;aacute;ndar de Phobos. El espacio de nombres &lt;code&gt;etc&lt;/code&gt; . se usa para enlaces de bibliotecas externas C / C ++. El espacio de nombres &lt;code&gt;core&lt;/code&gt; se usa para funciones de tiempo de ejecuci&amp;oacute;n D de bajo nivel.</target>
        </trans-unit>
        <trans-unit id="270a807f0de4d20f0d7b86a3f7b8a65802e708dd" translate="yes" xml:space="preserve">
          <source>Generally, this function checks that &lt;code&gt;path&lt;/code&gt; is not empty, and that each component of the path either satisfies &lt;a href=&quot;#isValidFilename&quot;&gt;&lt;code&gt;isValidFilename&lt;/code&gt;&lt;/a&gt; or is equal to &lt;code&gt;&quot;.&quot;&lt;/code&gt; or &lt;code&gt;&quot;..&quot;&lt;/code&gt;.</source>
          <target state="translated">En general, esta funci&amp;oacute;n comprueba que la &lt;code&gt;path&lt;/code&gt; no est&amp;aacute; vac&amp;iacute;a y que cada componente de la ruta satisface &lt;a href=&quot;#isValidFilename&quot;&gt; &lt;code&gt;isValidFilename&lt;/code&gt; &lt;/a&gt; o es igual a &lt;code&gt;&quot;.&quot;&lt;/code&gt; o &lt;code&gt;&quot;..&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ac3d74ace2e58f845d2e516e7b9c956be3febfc4" translate="yes" xml:space="preserve">
          <source>Generate .obj file for Module.</source>
          <target state="translated">Generar archivo .obj para el módulo.</target>
        </trans-unit>
        <trans-unit id="f9dad7b8a1ce93a4eb80b95d85ef1cf88d8f4597" translate="yes" xml:space="preserve">
          <source>Generate C main() in response to seeing D main().</source>
          <target state="translated">Generar C main()en respuesta a ver D main().</target>
        </trans-unit>
        <trans-unit id="345123c70e49b34125173495f611953054f48574" translate="yes" xml:space="preserve">
          <source>Generate Expression to call the invariant.</source>
          <target state="translated">Generar Expresión para llamar a la invariante.</target>
        </trans-unit>
        <trans-unit id="d90320355fd64aadd68db9a959d0db877a879578" translate="yes" xml:space="preserve">
          <source>Generate HALT instruction.</source>
          <target state="translated">Generar instrucción HALT.</target>
        </trans-unit>
        <trans-unit id="f40cd732815b9b227c307d8a881eabcde883c532" translate="yes" xml:space="preserve">
          <source>Generate Symbol of C++ type info for C++ class cd.</source>
          <target state="translated">Generar el símbolo de información de tipo C++para el cd de clase C++.</target>
        </trans-unit>
        <trans-unit id="71428fcf71b36719232a357b20981c579d5f795c" translate="yes" xml:space="preserve">
          <source>Generate a FuncDeclaration for a runtime library function.</source>
          <target state="translated">Generar una FuncDeclaration para una función de biblioteca en tiempo de ejecución.</target>
        </trans-unit>
        <trans-unit id="c1f38d03f2f34b3b4a976dcf593b7574be546eff" translate="yes" xml:space="preserve">
          <source>Generate a convenient string for identifying this Tid. This is only useful to see if Tid's that are currently executing are the same or different, e.g. for logging and debugging. It is potentially possible that a Tid executed in the future will have the same toString() output as another Tid that has already terminated.</source>
          <target state="translated">Generar una cadena conveniente para identificar este Tid.Esto sólo es útil para ver si los Tid que se están ejecutando actualmente son iguales o diferentes,por ejemplo,para el registro y la depuración.Es potencialmente posible que un Tid que se ejecute en el futuro tenga la misma salida toString()que otro Tid que ya haya terminado.</target>
        </trans-unit>
        <trans-unit id="42a4983512e25bdf4577cfbc7ade2d3d9ef11551" translate="yes" xml:space="preserve">
          <source>Generate a copy from e2 to e1.</source>
          <target state="translated">Generar una copia de e2 a e1.</target>
        </trans-unit>
        <trans-unit id="7e990bafe6b9623ad15b6163c4381e1e24f60827" translate="yes" xml:space="preserve">
          <source>Generate and output scope table.</source>
          <target state="translated">Generar y dar salida a la tabla de alcance.</target>
        </trans-unit>
        <trans-unit id="d887428fee6838e30b863f3266f3121541d951d0" translate="yes" xml:space="preserve">
          <source>Generate call to C's assert failure function. One of exp, emsg, or str must not be null.</source>
          <target state="translated">Generar llamada a la función de fallo de afirmación de C.Una de exp,emsg,o str no debe ser nula.</target>
        </trans-unit>
        <trans-unit id="b0e2deeef3299cd274df6c669c731ce070bbe521" translate="yes" xml:space="preserve">
          <source>Generate data for instance of _cpp_type_info_ptr that refers to the C++ RTTI symbol for cd.</source>
          <target state="translated">Generar datos por ejemplo de _cpp_type_info_ptr que se refiere al símbolo RTTI de C++para cd.</target>
        </trans-unit>
        <trans-unit id="92ed283aad401b73892410374fb18c0200210984" translate="yes" xml:space="preserve">
          <source>Generate deterministic named identifier based on a source location, such that the name is consistent across multiple compilations. A new unique name is generated. If the prefix+location is already in the stringtable, an extra suffix is added (starting the count at &quot;1&quot;).</source>
          <target state="translated">Generar un identificador de nombre determinista basado en la ubicación de una fuente,de tal manera que el nombre sea consistente a través de múltiples compilaciones.Se genera un nuevo nombre único.Si el prefijo+localización ya está en la tabla de códigos,se añade un sufijo extra (comenzando el conteo en &quot;1&quot;).</target>
        </trans-unit>
        <trans-unit id="e688f516a8d461fb5372c55840691f744fd51391" translate="yes" xml:space="preserve">
          <source>Generate import symbol from symbol.</source>
          <target state="translated">Generar el símbolo de importación a partir del símbolo.</target>
        </trans-unit>
        <trans-unit id="9978fdec524f341bfac18807618c73a3b51b46c1" translate="yes" xml:space="preserve">
          <source>Generate symbol of type ty at DATA:offset</source>
          <target state="translated">Generar el símbolo del tipo ty en DATA:offset</target>
        </trans-unit>
        <trans-unit id="821fb78c5c9319cc69fa8057c9c2cd2d48fedaf8" translate="yes" xml:space="preserve">
          <source>Generate two operand instruction with XMM 128 bit operands.</source>
          <target state="translated">Generar dos operandos de instrucción con operandos XMM de 128 bits.</target>
        </trans-unit>
        <trans-unit id="5c437f1471923979723873169275d327e196c1fa" translate="yes" xml:space="preserve">
          <source>Generated Macro Definitions</source>
          <target state="translated">Generación de macrodefiniciones</target>
        </trans-unit>
        <trans-unit id="b53fd19a2486af4f399d146936aa03eb7d82a727" translate="yes" xml:space="preserve">
          <source>Generated code is inserted in the scope of &lt;code&gt;std.typecons&lt;/code&gt; module. Thus, any useful functions outside &lt;code&gt;std.typecons&lt;/code&gt; cannot be used in the generated code. To workaround this problem, you may &lt;code&gt;import&lt;/code&gt; necessary things in a local struct, as done in the &lt;code&gt;generateLogger()&lt;/code&gt; template in the above example.</source>
          <target state="translated">El c&amp;oacute;digo generado se inserta en el alcance del m&amp;oacute;dulo &lt;code&gt;std.typecons&lt;/code&gt; . Por lo tanto, cualquier funci&amp;oacute;n &amp;uacute;til fuera de &lt;code&gt;std.typecons&lt;/code&gt; no se puede usar en el c&amp;oacute;digo generado. Para solucionar este problema, puede &lt;code&gt;import&lt;/code&gt; ar las cosas necesarias en una estructura local, como se hace en la plantilla &lt;code&gt;generateLogger()&lt;/code&gt; en el ejemplo anterior.</target>
        </trans-unit>
        <trans-unit id="e6857b9e8cb1c55a9a2f9226a5b4dc0cf595f501" translate="yes" xml:space="preserve">
          <source>Generates a hash for &lt;code&gt;this&lt;/code&gt;. If &lt;code&gt;Hook&lt;/code&gt; defines &lt;code&gt;hookToHash&lt;/code&gt;, the call immediately returns &lt;code&gt;hook.hookToHash(payload)&lt;/code&gt;. If &lt;code&gt;Hook&lt;/code&gt; does not implement &lt;code&gt;hookToHash&lt;/code&gt;, but it has state, a hash will be generated for the &lt;code&gt;Hook&lt;/code&gt; using the built-in function and it will be xored with the hash of the &lt;code&gt;payload&lt;/code&gt;.</source>
          <target state="translated">Genera un hash para &lt;code&gt;this&lt;/code&gt; . Si &lt;code&gt;Hook&lt;/code&gt; define &lt;code&gt;hookToHash&lt;/code&gt; , la llamada devuelve inmediatamente &lt;code&gt;hook.hookToHash(payload)&lt;/code&gt; . Si &lt;code&gt;Hook&lt;/code&gt; no implementa &lt;code&gt;hookToHash&lt;/code&gt; , pero tiene un estado, se generar&amp;aacute; un hash para el &lt;code&gt;Hook&lt;/code&gt; utilizando la funci&amp;oacute;n incorporada y se duplicar&amp;aacute; con el hash de la &lt;code&gt;payload&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="feba4b72ab473cbf0cd5ea105195b64ec1ac1f2d" translate="yes" xml:space="preserve">
          <source>Generates a hash for the tree. Note that with a custom comparison function it may not hold that if two rbtrees are equal, the hashes of the trees will be equal.</source>
          <target state="translated">Genera un hachís para el árbol.Tenga en cuenta que con una función de comparación personalizada puede no sostener que si dos rbtrees son iguales,los hashes de los árboles serán iguales.</target>
        </trans-unit>
        <trans-unit id="57845456ec25b869fe6d9c20ab2d9cba380674de" translate="yes" xml:space="preserve">
          <source>Generates a human-readable stack-trace on POSIX targets using DWARF</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="398b1403000b9404acc8a7edce2480693602dfc5" translate="yes" xml:space="preserve">
          <source>Generates a number between &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;. The &lt;code&gt;boundaries&lt;/code&gt; parameter controls the shape of the interval (open vs. closed on either side). Valid values for &lt;code&gt;boundaries&lt;/code&gt; are &lt;code&gt;&quot;[]&quot;&lt;/code&gt;, &lt;code&gt;&quot;(]&quot;&lt;/code&gt;, &lt;code&gt;&quot;[)&quot;&lt;/code&gt;, and &lt;code&gt;&quot;()&quot;&lt;/code&gt;. The default interval is closed to the left and open to the right. The version that does not take &lt;code&gt;urng&lt;/code&gt; uses the default generator &lt;code&gt;rndGen&lt;/code&gt;.</source>
          <target state="translated">Genera un n&amp;uacute;mero entre &lt;code&gt;a&lt;/code&gt; y &lt;code&gt;b&lt;/code&gt; . El par&amp;aacute;metro de &lt;code&gt;boundaries&lt;/code&gt; controla la forma del intervalo (abierto frente a cerrado en cualquier lado). Los valores v&amp;aacute;lidos para los &lt;code&gt;boundaries&lt;/code&gt; son &lt;code&gt;&quot;[]&quot;&lt;/code&gt; , &lt;code&gt;&quot;(]&quot;&lt;/code&gt; , &lt;code&gt;&quot;[)&quot;&lt;/code&gt; y &lt;code&gt;&quot;()&quot;&lt;/code&gt; . El intervalo predeterminado est&amp;aacute; cerrado a la izquierda y abierto a la derecha. La versi&amp;oacute;n que no toma &lt;code&gt;urng&lt;/code&gt; usa el generador predeterminado &lt;code&gt;rndGen&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="31d5a7a72aa7d6403397ac8f8b98d7136fb359b8" translate="yes" xml:space="preserve">
          <source>Generates a uniform probability distribution of size &lt;code&gt;n&lt;/code&gt;, i.e., an array of size &lt;code&gt;n&lt;/code&gt; of positive numbers of type &lt;code&gt;F&lt;/code&gt; that sum to &lt;code&gt;1&lt;/code&gt;. If &lt;code&gt;useThis&lt;/code&gt; is provided, it is used as storage.</source>
          <target state="translated">Genera una distribuci&amp;oacute;n de probabilidad uniforme de tama&amp;ntilde;o &lt;code&gt;n&lt;/code&gt; , es decir, una matriz de tama&amp;ntilde;o &lt;code&gt;n&lt;/code&gt; de n&amp;uacute;meros positivos de tipo &lt;code&gt;F&lt;/code&gt; que suman &lt;code&gt;1&lt;/code&gt; . Si se proporciona &lt;code&gt;useThis&lt;/code&gt; , se usa como almacenamiento.</target>
        </trans-unit>
        <trans-unit id="e2682a8625295cc7a75ade62ec910662e42eb1ad" translate="yes" xml:space="preserve">
          <source>Generates a uniformly-distributed floating point number of type &lt;code&gt;T&lt;/code&gt; in the range [0, 1). If no random number generator is specified, the default RNG &lt;code&gt;rndGen&lt;/code&gt; will be used as the source of randomness.</source>
          <target state="translated">Genera un n&amp;uacute;mero de coma flotante distribuido uniformemente de tipo &lt;code&gt;T&lt;/code&gt; en el rango [0, 1). Si no se especifica un generador de n&amp;uacute;meros aleatorios , se utilizar&amp;aacute; el RNG &lt;code&gt;rndGen&lt;/code&gt; predeterminado como fuente de aleatoriedad.</target>
        </trans-unit>
        <trans-unit id="590a92dca2ec49812f71151418c5576ff9ad8ac5" translate="yes" xml:space="preserve">
          <source>Generates a uniformly-distributed number in the range &lt;code&gt;[T.min, T.max]&lt;/code&gt; for any integral or character type &lt;code&gt;T&lt;/code&gt;. If no random number generator is passed, uses the default &lt;code&gt;rndGen&lt;/code&gt;.</source>
          <target state="translated">Genera un n&amp;uacute;mero distribuido uniformemente en el intervalo &lt;code&gt;[T.min, T.max]&lt;/code&gt; para cualquier tipo integral o el car&amp;aacute;cter &lt;code&gt;T&lt;/code&gt; . Si no se pasa un generador de n&amp;uacute;meros aleatorios, usa el &lt;code&gt;rndGen&lt;/code&gt; predeterminado .</target>
        </trans-unit>
        <trans-unit id="5a3dd4ef1d89d221f34cd8efe42c23a94aa835c2" translate="yes" xml:space="preserve">
          <source>Generates string with D source code of unary function with name of &lt;code&gt;funcName&lt;/code&gt; taking a single &lt;code&gt;dchar&lt;/code&gt; argument. If &lt;code&gt;funcName&lt;/code&gt; is empty the code is adjusted to be a lambda function.</source>
          <target state="translated">Genera una cadena con el c&amp;oacute;digo fuente D de la funci&amp;oacute;n unaria con el nombre de &lt;code&gt;funcName&lt;/code&gt; tomando un &amp;uacute;nico argumento &lt;code&gt;dchar&lt;/code&gt; . Si &lt;code&gt;funcName&lt;/code&gt; est&amp;aacute; vac&amp;iacute;o, el c&amp;oacute;digo se ajusta para que sea una funci&amp;oacute;n lambda.</target>
        </trans-unit>
        <trans-unit id="4b3935a65e18852e853df767745851e9e88c4154" translate="yes" xml:space="preserve">
          <source>Generates the &lt;code&gt;TypeInfo&lt;/code&gt; object associated with &lt;code&gt;torig&lt;/code&gt; if it hasn't already been generated</source>
          <target state="translated">Genera el objeto &lt;code&gt;TypeInfo&lt;/code&gt; asociado con &lt;code&gt;torig&lt;/code&gt; si a&amp;uacute;n no se ha generado</target>
        </trans-unit>
        <trans-unit id="c898dd30458bc82445a94b03bf4338f7812ed73c" translate="yes" xml:space="preserve">
          <source>Generates the following:</source>
          <target state="translated">Genera lo siguiente:</target>
        </trans-unit>
        <trans-unit id="ef2e0bcfe378859fb93a76e38ab31870b5aaab4c" translate="yes" xml:space="preserve">
          <source>Generating UUIDs</source>
          <target state="translated">Generando UUIDs</target>
        </trans-unit>
        <trans-unit id="ff7613e54fc90271b8a71da3dfd9a50e5acd96c2" translate="yes" xml:space="preserve">
          <source>Generic</source>
          <target state="translated">Generic</target>
        </trans-unit>
        <trans-unit id="7282cafe7ab4dcfbd06151ce87eab6a8cb7b662e" translate="yes" xml:space="preserve">
          <source>Generic Template API used for CRC32 and CRC64 implementations.</source>
          <target state="translated">API de plantillas genéricas utilizadas para implementaciones de CRC32 y CRC64.</target>
        </trans-unit>
        <trans-unit id="48d04e2739718c3b5809e3d93e9ab17e0175ee79" translate="yes" xml:space="preserve">
          <source>Generic algorithms for processing sequences.</source>
          <target state="translated">Algoritmos genéricos para procesar secuencias.</target>
        </trans-unit>
        <trans-unit id="7bca8ef182b8f3deaa44e5a838347a3d8559084e" translate="yes" xml:space="preserve">
          <source>Generic algorithms that work with &lt;a href=&quot;std_range&quot;&gt;ranges&lt;/a&gt; of any type, including strings, arrays, and other kinds of sequentially-accessed data. Algorithms include searching, comparison, iteration, sorting, set operations, and mutation.</source>
          <target state="translated">Algoritmos gen&amp;eacute;ricos que funcionan con &lt;a href=&quot;std_range&quot;&gt;rangos&lt;/a&gt; de cualquier tipo, incluidas cadenas, matrices y otros tipos de datos de acceso secuencial. Los algoritmos incluyen b&amp;uacute;squeda, comparaci&amp;oacute;n, iteraci&amp;oacute;n, clasificaci&amp;oacute;n, operaciones de conjuntos y mutaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="e37a68ed0e7f2e44e67335effd984a4809f41f52" translate="yes" xml:space="preserve">
          <source>Generic code which deals with different Digest types should always call start though.</source>
          <target state="translated">El código genérico que se ocupa de diferentes tipos de Digest siempre debe llamar al inicio.</target>
        </trans-unit>
        <trans-unit id="a4fe6a7b8d8e501df226058c573d01d9418d71dd" translate="yes" xml:space="preserve">
          <source>Generic error</source>
          <target state="translated">Error genérico</target>
        </trans-unit>
        <trans-unit id="070a5062376a825143c54fc921ea5b5a3350219e" translate="yes" xml:space="preserve">
          <source>Generic stripping on ranges: &lt;a href=&quot;std_algorithm_mutation#strip&quot;&gt;&lt;code&gt;std.algorithm.mutation.strip&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;std_algorithm_mutation#strip&quot;&gt; &lt;code&gt;std.algorithm.mutation.strip&lt;/code&gt; &lt;/a&gt; gen&amp;eacute;rica en rangos: std.algorithm.mutation.strip</target>
        </trans-unit>
        <trans-unit id="a5f39e04859e495f02a94a4f09ad4d9de0e5160e" translate="yes" xml:space="preserve">
          <source>Generic stripping on ranges: &lt;a href=&quot;std_algorithm_mutation#stripLeft&quot;&gt;&lt;code&gt;std.algorithm.mutation.stripLeft&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;std_algorithm_mutation#stripLeft&quot;&gt; &lt;code&gt;std.algorithm.mutation.stripLeft&lt;/code&gt; &lt;/a&gt; gen&amp;eacute;rica en rangos: std.algorithm.mutation.stripLeft</target>
        </trans-unit>
        <trans-unit id="14b5394baf94216f2e7707c45724f2e122958d4a" translate="yes" xml:space="preserve">
          <source>Generic stripping on ranges: &lt;a href=&quot;std_algorithm_mutation#stripRight&quot;&gt;&lt;code&gt;std.algorithm.mutation.stripRight&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;std_algorithm_mutation#stripRight&quot;&gt; &lt;code&gt;std.algorithm.mutation.stripRight&lt;/code&gt; &lt;/a&gt; gen&amp;eacute;rica en rangos: std.algorithm.mutation.stripRight</target>
        </trans-unit>
        <trans-unit id="f9464f7b462f8074504ba78be947c4f876e0fc5c" translate="yes" xml:space="preserve">
          <source>Generic type value getter A convenience getter that returns this &lt;code&gt;JSONValue&lt;/code&gt; as the specified D type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d110955c054077a9782bc3e9dc049c8ed9e192f" translate="yes" xml:space="preserve">
          <source>Generic way of converting between two time units.</source>
          <target state="translated">Una forma genérica de convertir entre dos unidades de tiempo.</target>
        </trans-unit>
        <trans-unit id="fdfe3a8efedde26bb169021d4c0add270ebc9913" translate="yes" xml:space="preserve">
          <source>Generic way of converting between two time units. Conversions to smaller units use truncating division. Years and months can be converted to each other, small units can be converted to each other, but years and months cannot be converted to or from smaller units (due to the varying number of days in a month or year).</source>
          <target state="translated">Una forma genérica de convertir entre dos unidades de tiempo.Las conversiones a unidades más pequeñas utilizan la división por truncamiento.Los años y meses pueden ser convertidos entre sí,las unidades pequeñas pueden ser convertidas entre sí,pero los años y meses no pueden ser convertidos a o desde unidades más pequeñas (debido al número variable de días en un mes o año).</target>
        </trans-unit>
        <trans-unit id="8351f1bd421bb3c2f34de06d3708adb7a974a3d4" translate="yes" xml:space="preserve">
          <source>Geometric Shapes</source>
          <target state="translated">Formas geométricas</target>
        </trans-unit>
        <trans-unit id="aca441ddd2e8d07643b87c1b24a828fa5b4b3e42" translate="yes" xml:space="preserve">
          <source>Georgian</source>
          <target state="translated">Georgian</target>
        </trans-unit>
        <trans-unit id="c559cff938d372579d74b90c80d2874125e4b5d4" translate="yes" xml:space="preserve">
          <source>Georgian Supplement</source>
          <target state="translated">Suplemento georgiano</target>
        </trans-unit>
        <trans-unit id="2e85da619ae334aca9d3221727062ef17b60edd9" translate="yes" xml:space="preserve">
          <source>Get Pointer to Thrown Object if type of thrown object is implicitly convertible to the catch type.</source>
          <target state="translated">Consigue el puntero a Objeto Lanzado si el tipo de objeto lanzado es implícitamente convertible al tipo de captura.</target>
        </trans-unit>
        <trans-unit id="49759c09a6285b1e1c3c2442b86bed6b17c79b57" translate="yes" xml:space="preserve">
          <source>Get RTTI mangling of the given class declaration for C++ ABI.</source>
          <target state="translated">Consigue la manipulación RTTI de la declaración de clase dada para C++ABI.</target>
        </trans-unit>
        <trans-unit id="30af4ba10b05a5544d5e9caa6adff1c6bc3df069" translate="yes" xml:space="preserve">
          <source>Get TypeInfo for 'next' type, as defined by what kind of type this is, null if none.</source>
          <target state="translated">Obtener TypeInfo para el tipo &quot;siguiente&quot;,como se define por el tipo de tipo que es,nulo si no hay ninguno.</target>
        </trans-unit>
        <trans-unit id="c92e7f5f377e9154bb8151fe8cde1e5454a8ad6b" translate="yes" xml:space="preserve">
          <source>Get a AliasSeq of</source>
          <target state="translated">Consigue un AliasSeq de</target>
        </trans-unit>
        <trans-unit id="2697c6709922de4b4eb3a504173797b3b2d2f222" translate="yes" xml:space="preserve">
          <source>Get a AliasSeq of the base class and base interfaces of this class or interface. BaseTypeTuple!Object returns the empty type tuple.</source>
          <target state="translated">Consigue un AliasSeq de la clase base e interfaces base de esta clase o interfaz.¡BaseTypeTuple! El objeto devuelve la tupla de tipo vacía.</target>
        </trans-unit>
        <trans-unit id="debff9d835c323dd33cb0eb8c68915f9979c7a6c" translate="yes" xml:space="preserve">
          <source>Get a range from the container with all elements that are &amp;gt; e according to the less comparator</source>
          <target state="translated">Obtenga un rango del contenedor con todos los elementos que son&amp;gt; e seg&amp;uacute;n el comparador less</target>
        </trans-unit>
        <trans-unit id="2f427a0e190ea30b9ef773b930557ceb28c95c24" translate="yes" xml:space="preserve">
          <source>Get a range from the container with all elements that are &amp;lt; e according to the less comparator</source>
          <target state="translated">Obtenga un rango del contenedor con todos los elementos que son &amp;lt;e seg&amp;uacute;n el comparador less</target>
        </trans-unit>
        <trans-unit id="1a49fd135d74779940e67901f3680596c3cb7489" translate="yes" xml:space="preserve">
          <source>Get a range from the container with all elements that are == e according to the less comparator</source>
          <target state="translated">Obtener un rango del contenedor con todos los elementos que son ==e según el comparador menos</target>
        </trans-unit>
        <trans-unit id="57416603cdc2a4317e5cef5fc1df8438a0dc691d" translate="yes" xml:space="preserve">
          <source>Get a socket option.</source>
          <target state="translated">Consigue una opción de enchufe.</target>
        </trans-unit>
        <trans-unit id="ab0526a6b77b2a6ea32e278479a2c15bfc6233f8" translate="yes" xml:space="preserve">
          <source>Get a text description of this socket's error status, and clear the socket's error status.</source>
          <target state="translated">Obtén una descripción de texto del estado de error de este enchufe,y borra el estado de error del enchufe.</target>
        </trans-unit>
        <trans-unit id="cb65e9616425e0463e1160c764ce114f293c53ad" translate="yes" xml:space="preserve">
          <source>Get a timeout (duration) option.</source>
          <target state="translated">Consigue una opción de tiempo de espera (duración).</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
